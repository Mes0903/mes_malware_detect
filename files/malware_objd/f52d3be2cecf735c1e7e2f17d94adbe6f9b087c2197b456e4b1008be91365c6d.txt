
f52d3be2cecf735c1e7e2f17d94adbe6f9b087c2197b456e4b1008be91365c6d.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0x8
  411003:	push   ebx
  411004:	push   ebp
  411005:	mov    ebp,DWORD PTR [esp+0x20]
  411009:	push   esi
  41100a:	xor    eax,eax
  41100c:	push   edi
  41100d:	mov    edi,DWORD PTR [esp+0x1c]
  411011:	mov    DWORD PTR [esp+0x10],eax
  411015:	mov    esi,0xfffffffd
  41101a:	mov    DWORD PTR [esp+0x14],0x1
  411022:	mov    ecx,DWORD PTR [esp+0x20]
  411026:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41102a:	add    esi,0x2
  41102d:	inc    esi
  41102e:	mov    BYTE PTR [esi+edi*1],cl
  411031:	movzx  ecx,BYTE PTR [eax+ebp*1]
  411035:	mov    edx,DWORD PTR [esp+0x10]
  411039:	mov    eax,DWORD PTR [esp+0x14]
  41103d:	add    edx,eax
  41103f:	mov    DWORD PTR [esp+0x10],edx
  411043:	ror    eax,cl
  411045:	mov    eax,DWORD PTR [esp+0x10]
  411049:	mov    edx,eax
  41104b:	shr    edx,0x3
  41104e:	mov    ebx,0x1
  411053:	sub    ebx,edx
  411055:	imul   eax,ebx
  411058:	mov    DWORD PTR [esp+0x10],eax
  41105c:	shl    ebx,0x3
  41105f:	mov    bl,BYTE PTR [esi+edi*1]
  411062:	add    bl,cl
  411064:	mov    ecx,DWORD PTR [esp+0x24]
  411068:	mov    BYTE PTR [esi+edi*1],bl
  41106b:	sub    esi,0x2
  41106e:	cmp    esi,ecx
  411070:	jl     0x411022
  411072:	pop    edi
  411073:	pop    esi
  411074:	pop    ebp
  411075:	pop    ebx
  411076:	add    esp,0x8
  411079:	ret    
  41107a:	nop
  41107b:	nop
  41107c:	nop
  41107d:	nop
  41107e:	nop
  41107f:	nop
  411080:	push   ebp
  411081:	mov    ebp,esp
  411083:	sub    esp,0x70
  411086:	mov    DWORD PTR [ebp-0x8],0x0
  41108d:	mov    DWORD PTR [ebp-0x70],0x0
  411094:	mov    DWORD PTR [ebp-0x58],0x0
  41109b:	mov    DWORD PTR [ebp-0x5c],0x0
  4110a2:	mov    DWORD PTR [ebp-0x48],0x0
  4110a9:	mov    DWORD PTR [ebp-0x6c],0x0
  4110b0:	mov    DWORD PTR [ebp-0x68],0x0
  4110b7:	mov    DWORD PTR [ebp-0x10],0x0
  4110be:	mov    DWORD PTR [ebp-0x60],0x0
  4110c5:	mov    DWORD PTR [ebp-0x18],0x0
  4110cc:	mov    DWORD PTR [ebp-0xc],0x0
  4110d3:	mov    DWORD PTR [ebp-0x30],0x0
  4110da:	mov    DWORD PTR [ebp-0x2c],0x0
  4110e1:	mov    DWORD PTR [ebp-0x14],0x0
  4110e8:	mov    DWORD PTR [ebp-0x4],0x0
  4110ef:	mov    DWORD PTR [ebp-0x54],0x0
  4110f6:	mov    DWORD PTR [ebp-0x50],0x0
  4110fd:	mov    DWORD PTR [ebp-0x4c],0x0
  411104:	mov    eax,ds:0x429160
  411109:	mov    DWORD PTR [ebp-0x28],eax
  41110c:	mov    ecx,DWORD PTR ds:0x429164
  411112:	mov    DWORD PTR [ebp-0x24],ecx
  411115:	mov    edx,DWORD PTR ds:0x429168
  41111b:	mov    DWORD PTR [ebp-0x20],edx
  41111e:	mov    al,ds:0x42916c
  411123:	mov    BYTE PTR [ebp-0x1c],al
  411126:	mov    ecx,DWORD PTR ds:0x429150
  41112c:	mov    DWORD PTR [ebp-0x40],ecx
  41112f:	mov    edx,DWORD PTR ds:0x429154
  411135:	mov    DWORD PTR [ebp-0x3c],edx
  411138:	mov    eax,ds:0x429158
  41113d:	mov    DWORD PTR [ebp-0x38],eax
  411140:	mov    cx,WORD PTR ds:0x42915c
  411147:	mov    WORD PTR [ebp-0x34],cx
  41114b:	mov    dl,BYTE PTR ds:0x42915e
  411151:	mov    BYTE PTR [ebp-0x32],dl
  411154:	mov    DWORD PTR [ebp-0x2c],0x40
  41115b:	call   DWORD PTR ds:0x42901c
  411161:	mov    eax,DWORD PTR [ebp-0x70]
  411164:	push   eax
  411165:	call   DWORD PTR ds:0x429018
  41116b:	lea    ecx,[ebp-0x10]
  41116e:	push   ecx
  41116f:	lea    edx,[ebp-0x18]
  411172:	push   edx
  411173:	call   DWORD PTR ds:0x429000
  411179:	test   eax,eax
  41117b:	jne    0x4111a5
  41117d:	push   0x0
  41117f:	push   0x14
  411181:	push   0x14
  411183:	push   0xa
  411185:	push   0xa
  411187:	push   0x0
  411189:	push   0x0
  41118b:	push   0x14
  41118d:	push   0x14
  41118f:	push   0xa
  411191:	push   0xa
  411193:	push   0x0
  411195:	push   0x0
  411197:	call   0x424352
  41119c:	mov    eax,DWORD PTR [ebp-0x10]
  41119f:	add    eax,0x1
  4111a2:	mov    DWORD PTR [ebp-0x10],eax
  4111a5:	mov    BYTE PTR [ebp-0x40],0x56
  4111a9:	call   DWORD PTR ds:0x429034
  4111af:	mov    DWORD PTR [ebp-0x30],eax
  4111b2:	mov    BYTE PTR [ebp-0x3e],0x72
  4111b6:	movzx  ecx,WORD PTR [ebp-0x30]
  4111ba:	test   ecx,ecx
  4111bc:	jne    0x411210
  4111be:	mov    BYTE PTR [ebp-0x34],0x0
  4111c2:	mov    DWORD PTR [ebp-0x18],0xe0d
  4111c9:	lea    edx,[ebp-0x28]
  4111cc:	push   edx
  4111cd:	call   DWORD PTR ds:0x429044
  4111d3:	mov    DWORD PTR [ebp-0x60],eax
  4111d6:	mov    DWORD PTR [ebp-0x50],0x3a
  4111dd:	lea    eax,[ebp-0x40]
  4111e0:	push   eax
  4111e1:	mov    ecx,DWORD PTR [ebp-0x60]
  4111e4:	push   ecx
  4111e5:	call   DWORD PTR ds:0x429048
  4111eb:	mov    DWORD PTR [ebp-0x44],eax
  4111ee:	mov    DWORD PTR [ebp-0x4],0x7be0dfdd
  4111f5:	push   0x0
  4111f7:	push   0x14
  4111f9:	push   0x14
  4111fb:	push   0xa
  4111fd:	push   0xa
  4111ff:	push   0x0
  411201:	call   DWORD PTR ds:0x42900c
  411207:	mov    DWORD PTR [ebp-0x6c],0x10ebff
  41120e:	jmp    0x411225
  411210:	mov    BYTE PTR ds:0x447ac8,0x0
  411217:	mov    BYTE PTR ds:0x42d6a0,0x0
  41121e:	mov    BYTE PTR ds:0x443dd8,0x0
  411225:	push   0x0
  411227:	call   DWORD PTR ds:0x429140
  41122d:	push   DWORD PTR ds:0x429044
  411233:	pop    edx
  411234:	mov    DWORD PTR [ebp-0x68],edx
  411237:	mov    edx,DWORD PTR [ebp-0x70]
  41123a:	push   edx
  41123b:	call   DWORD PTR ds:0x429050
  411241:	mov    DWORD PTR [ebp-0x30],0x410000
  411248:	push   DWORD PTR [ebp-0x2c]
  41124b:	push   0x1000
  411250:	mov    eax,DWORD PTR [ebp-0x18]
  411253:	add    eax,0x23
  411256:	add    eax,0x23
  411259:	push   eax
  41125a:	xor    eax,eax
  41125c:	push   eax
  41125d:	mov    ecx,DWORD PTR [ebp-0x44]
  411260:	call   ecx
  411262:	mov    edx,eax
  411264:	mov    DWORD PTR [ebp-0x8],edx
  411267:	mov    eax,DWORD PTR [ebp-0x6c]
  41126a:	sub    eax,0xdae0b
  41126f:	mov    DWORD PTR [ebp-0x6c],eax
  411272:	cmp    DWORD PTR [ebp-0x8],0x0
  411276:	jne    0x411286
  411278:	push   0x0
  41127a:	call   0x42434c
  41127f:	mov    BYTE PTR ds:0x443dd8,0x0
  411286:	mov    ecx,DWORD PTR [ebp-0x8]
  411289:	add    ecx,DWORD PTR [ebp-0x18]
  41128c:	mov    edx,DWORD PTR [ebp-0x4]
  41128f:	mov    DWORD PTR [ecx],edx
  411291:	mov    eax,DWORD PTR [ebp-0x8]
  411294:	add    eax,DWORD PTR [ebp-0x50]
  411297:	mov    DWORD PTR [ebp-0x5c],eax
  41129a:	mov    ecx,DWORD PTR ds:0x429048
  4112a0:	mov    DWORD PTR [ebp-0x4c],ecx
  4112a3:	mov    edx,DWORD PTR [ebp-0x8]
  4112a6:	add    edx,DWORD PTR [ebp-0x18]
  4112a9:	mov    eax,DWORD PTR [ebp+0x8]
  4112ac:	mov    DWORD PTR [edx+0x4],eax
  4112af:	mov    ecx,DWORD PTR [ebp-0x8]
  4112b2:	add    ecx,DWORD PTR [ebp-0x18]
  4112b5:	mov    DWORD PTR [ebp-0xc],ecx
  4112b8:	push   0x8000
  4112bd:	push   0x0
  4112bf:	mov    edx,DWORD PTR [ebp-0x70]
  4112c2:	push   edx
  4112c3:	call   DWORD PTR ds:0x42904c
  4112c9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4112cd:	jbe    0x4112ea
  4112cf:	mov    eax,DWORD PTR [ebp-0xc]
  4112d2:	push   eax
  4112d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4112d6:	push   ecx
  4112d7:	mov    edx,DWORD PTR [ebp-0x30]
  4112da:	add    edx,DWORD PTR [ebp-0x6c]
  4112dd:	push   edx
  4112de:	mov    eax,DWORD PTR [ebp-0x8]
  4112e1:	push   eax
  4112e2:	call   0x411000
  4112e7:	add    esp,0x10
  4112ea:	mov    ecx,DWORD PTR [ebp-0x70]
  4112ed:	push   ecx
  4112ee:	call   DWORD PTR ds:0x429144
  4112f4:	cmp    DWORD PTR [ebp-0x5c],0x0
  4112f8:	je     0x41130b
  4112fa:	push   DWORD PTR [ebp-0x4c]
  4112fd:	push   DWORD PTR [ebp-0x68]
  411300:	mov    edx,DWORD PTR [ebp-0x5c]
  411303:	push   eax
  411304:	jmp    edx
  411306:	jmp    0x422dee
  41130b:	mov    edx,DWORD PTR [ebp+0x8]
  41130e:	mov    DWORD PTR [ebp-0x14],edx
  411311:	push   0x0
  411313:	push   0x1
  411315:	mov    eax,DWORD PTR [ebp-0x60]
  411318:	push   eax
  411319:	call   DWORD PTR ds:0x429058
  41131f:	mov    bl,0xae
  411321:	lods   eax,DWORD PTR ds:[esi]
  411322:	jmp    0x41131f
  411324:	inc    esp
  411325:	mov    ch,0xc3
  411327:	adc    DWORD PTR [ecx],ebp
  411329:	inc    ebp
  41132a:	pop    eax
  41132b:	fwait
  41132c:	xor    al,0x66
  41132e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41132f:	adc    BYTE PTR [edx+0x3b584d3e],ch
  411335:	and    esp,DWORD PTR [ebp+0x20af1e53]
  41133b:	jle    0x4112dc
  41133d:	push   edx
  41133e:	call   DWORD PTR [eax-0x68]
  411341:	inc    ebx
  411342:	xchg   BYTE PTR [ecx],ah
  411344:	ret    0x70e1
  411347:	push   ecx
  411348:	push   edi
  411349:	cmp    al,0x56
  41134b:	test   al,0x37
  41134d:	lahf   
  41134e:	cmp    al,0xf6
  411350:	or     BYTE PTR [eax],dh
  411352:	mov    ebx,0x731c0c84
  411357:	push   esp
  411358:	pop    esi
  411359:	out    dx,al
  41135a:	sub    eax,0xae3e179d
  41135f:	ds mov esp,cs
  411362:	dec    ebp
  411363:	dec    ebx
  411364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411365:	mov    ecx,0x15c32f71
  41136a:	sub    BYTE PTR [ebx-0x3c],al
  41136d:	sbb    BYTE PTR [esi+ebx*1-0x1f48a453],ah
  411374:	lahf   
  411375:	mov    edx,ebx
  411377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411378:	scas   al,BYTE PTR es:[edi]
  411379:	adc    ch,BYTE PTR [edi+0x14f0c564]
  41137f:	sar    ecx,0x8f
  411382:	ret    
  411383:	clc    
  411384:	and    dl,BYTE PTR [eax]
  411386:	inc    esp
  411387:	and    edi,ecx
  411389:	cmc    
  41138a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138b:	cdq    
  41138c:	add    BYTE PTR [ebx-0x5c022428],0xad
  411393:	das    
  411394:	sbb    ebx,eax
  411396:	or     BYTE PTR ds:0xc47e17db,al
  41139c:	jg     0x4113aa
  41139e:	imul   ecx,DWORD PTR [ecx+0x64],0x4419083c
  4113a5:	push   esp
  4113a6:	fadd   QWORD PTR [ebx-0x60]
  4113a9:	pop    ebx
  4113aa:	fxtract 
  4113ac:	jnp    0x411359
  4113ae:	call   0x47ffd10c
  4113b3:	dec    esp
  4113b4:	pop    ebp
  4113b5:	enter  0xbf01,0x54
  4113b9:	xchg   edi,eax
  4113ba:	add    ecx,DWORD PTR [ebx+0x60]
  4113bd:	mov    ebx,0x648c7d5a
  4113c2:	pop    esi
  4113c3:	fstp   TBYTE PTR [eax]
  4113c5:	pop    edi
  4113c6:	inc    ecx
  4113c7:	cli    
  4113c8:	pop    DWORD PTR es:[esi]
  4113cb:	add    DWORD PTR [edi],esp
  4113cd:	test   eax,0xc9347600
  4113d2:	js     0x4113ed
  4113d4:	je     0x41136b
  4113d6:	imul   edx,DWORD PTR [edi-0x79],0xffffff87
  4113da:	xor    eax,0x85ff813b
  4113df:	push   ecx
  4113e0:	sub    eax,0x95e7e899
  4113e5:	push   0xc
  4113e7:	nop
  4113e8:	push   esi
  4113e9:	imul   edx,DWORD PTR [edx+0x489cc025],0x267dd9c2
  4113f3:	sar    bl,0xe8
  4113f6:	stos   DWORD PTR es:[edi],eax
  4113f7:	popa   
  4113f8:	aas    
  4113f9:	jb     0x4113c6
  4113fb:	add    DWORD PTR [esi+0x2a],edi
  4113fe:	ins    DWORD PTR es:[edi],dx
  4113ff:	or     edi,DWORD PTR [ebp+eax*1+0x564373f0]
  411406:	mov    ebp,DWORD PTR [eax]
  411408:	and    DWORD PTR [eax-0x53],esi
  41140b:	lock imul esp,DWORD PTR [edx-0xd],0xc44f4c33
  411413:	pop    esp
  411414:	cmp    al,0xa
  411416:	pop    edi
  411417:	ja     0x4113a6
  411419:	or     ecx,DWORD PTR [ebx-0x38a01215]
  41141f:	lahf   
  411420:	test   DWORD PTR [eax-0x1a],eax
  411423:	lahf   
  411424:	push   ss
  411425:	and    ecx,DWORD PTR [ebp+0x53]
  411428:	sub    DWORD PTR [edi],edx
  41142a:	les    esi,FWORD PTR [edi+eiz*8+0x2c]
  41142e:	mov    BYTE PTR [ebx],al
  411430:	pop    ss
  411431:	sbb    dl,BYTE PTR [ebx+0x36]
  411434:	test   BYTE PTR [edi-0x31],dh
  411437:	xchg   ebx,eax
  411438:	dec    edx
  411439:	repz ret 
  41143b:	leave  
  41143c:	or     edx,ebx
  41143e:	jmp    0xd1a3:0x55bea142
  411445:	std    
  411446:	push   cs
  411447:	(bad)
  41144a:	leave  
  41144b:	sbb    ebp,DWORD PTR [esi+0x2a]
  41144e:	stos   DWORD PTR es:[edi],eax
  41144f:	leave  
  411450:	fsubr  DWORD PTR [eax+esi*1]
  411453:	push   ecx
  411454:	cwde   
  411455:	iret   
  411456:	inc    ebp
  411457:	pop    ebx
  411458:	mov    ch,0x23
  41145a:	dec    eax
  41145b:	jmp    0xcf9b8534
  411460:	repz hlt 
  411462:	in     eax,dx
  411463:	xchg   ecx,eax
  411464:	sub    eax,0x78b6e849
  411469:	scas   al,BYTE PTR es:[edi]
  41146a:	sbb    esi,edi
  41146c:	das    
  41146d:	sbb    ebp,DWORD PTR [eax]
  41146f:	outs   dx,BYTE PTR ds:[esi]
  411470:	cmp    BYTE PTR [ebx],ah
  411472:	fcmovne st,st(7)
  411474:	sbb    edi,DWORD PTR [ecx+0x21]
  411477:	ds scas al,BYTE PTR es:[edi]
  411479:	inc    ebp
  41147a:	rol    BYTE PTR [esi+0x61],0x1b
  41147e:	cs and eax,0x252656d9
  411484:	mov    cl,0xf
  411486:	sbb    dl,dl
  411488:	inc    edi
  411489:	in     eax,0x9e
  41148b:	xchg   esp,eax
  41148c:	sub    al,0x53
  41148e:	fs jge 0x4114ec
  411491:	iret   
  411492:	jecxz  0x411513
  411494:	cli    
  411495:	scas   eax,DWORD PTR es:[edi]
  411496:	push   eax
  411497:	in     eax,0xc0
  411499:	push   0xfb0e6943
  41149e:	cmp    ebp,DWORD PTR [eax+0x5e822c20]
  4114a4:	or     BYTE PTR [ebx-0x58602a9e],ah
  4114aa:	fs cli 
  4114ac:	lock dec ebp
  4114ae:	gs mov edi,0x4e8e5a5
  4114b4:	jecxz  0x4114a8
  4114b6:	aas    
  4114b7:	not    DWORD PTR [ecx-0x3b]
  4114ba:	ds pop ebx
  4114bc:	fwait
  4114bd:	shl    cl,0xf0
  4114c0:	push   esp
  4114c1:	or     esi,0xdf931d9e
  4114c7:	push   ecx
  4114c8:	ja     0x4114f0
  4114ca:	std    
  4114cb:	xor    BYTE PTR [ebp+0x7f],bh
  4114ce:	les    esi,FWORD PTR [ebp+ebx*4+0x50]
  4114d2:	mov    WORD PTR [edx],cs
  4114d4:	(bad)  
  4114d6:	jge    0x411488
  4114d8:	stc    
  4114d9:	sbb    edx,ebp
  4114db:	jnp    0x411524
  4114dd:	pop    ebp
  4114de:	jnp    0x4114f4
  4114e0:	fimul  DWORD PTR [edx+edi*4]
  4114e3:	add    edi,esi
  4114e5:	test   al,0x7e
  4114e7:	shr    ebp,cl
  4114e9:	xchg   edx,eax
  4114ea:	out    0x15,al
  4114ec:	xor    al,0x37
  4114ee:	sub    al,0x8f
  4114f0:	jno    0x41156f
  4114f2:	dec    edi
  4114f3:	pusha  
  4114f4:	aaa    
  4114f5:	mov    ah,0xe3
  4114f7:	sbb    edx,esp
  4114f9:	scas   eax,DWORD PTR es:[edi]
  4114fa:	and    dl,ah
  4114fc:	and    dl,BYTE PTR [edx+0x19]
  4114ff:	jmp    DWORD PTR [esi]
  411501:	in     al,0x88
  411503:	adc    ebp,DWORD PTR [ebp-0x7a3653ef]
  411509:	stos   DWORD PTR es:[edi],eax
  41150a:	adc    BYTE PTR [ebx+0x7718a299],ah
  411510:	int    0xa
  411512:	or     DWORD PTR [esi-0x64d7d59f],edx
  411518:	out    dx,al
  411519:	enter  0xd67,0x62
  41151d:	cmp    DWORD PTR [edi],eax
  41151f:	sub    eax,0xfca28a08
  411524:	loope  0x411583
  411526:	cmp    BYTE PTR [esi],0xbf
  411529:	in     eax,dx
  41152a:	mov    ecx,0x3d2b400e
  41152f:	retf   
  411530:	aaa    
  411531:	adc    DWORD PTR [eax+0x2e730c78],esi
  411537:	les    ecx,FWORD PTR [eax]
  411539:	adc    esi,DWORD PTR [edx+esi*2-0xc00bb2c]
  411540:	cmp    esp,DWORD PTR [ebx]
  411542:	shr    BYTE PTR [ebx-0x3d],1
  411545:	pop    eax
  411546:	mov    ch,0x57
  411548:	mov    dh,0xe4
  41154a:	mov    dl,0x2f
  41154c:	mov    al,0xd3
  41154e:	mov    ebx,0xbc4e3676
  411553:	xchg   ecx,eax
  411554:	cmp    edi,DWORD PTR [edi+0x7bdbddbc]
  41155a:	push   ds
  41155b:	in     eax,dx
  41155c:	push   ss
  41155d:	jle    0x4115a6
  41155f:	pop    ds
  411560:	and    ebx,DWORD PTR [ebx+eax*1-0x2cd78f2f]
  411567:	sub    BYTE PTR [esi],dh
  411569:	push   edi
  41156a:	mov    DWORD PTR [edi-0x69cc2c2c],ecx
  411570:	mov    DWORD PTR [eax-0x3ea9a7c3],edx
  411576:	sbb    eax,0x35a9fd4a
  41157b:	inc    esi
  41157c:	push   ebx
  41157d:	mov    ah,0x80
  41157f:	fwait
  411580:	icebp  
  411581:	push   esi
  411582:	add    BYTE PTR [esi-0xe],ch
  411585:	sub    esp,ecx
  411587:	jmp    0xd517:0x2e7832b7
  41158e:	mov    eax,DWORD PTR [edi]
  411590:	js     0x4115c2
  411592:	(bad)  
  411593:	adc    bh,cl
  411595:	jp     0x4115d6
  411597:	dec    ecx
  411598:	xor    al,0xe5
  41159a:	(bad)  
  41159b:	loopne 0x411559
  41159d:	mul    edx
  41159f:	dec    ebp
  4115a0:	mov    dl,BYTE PTR [edx-0x6ed4b292]
  4115a6:	(bad)  
  4115a7:	icebp  
  4115a8:	(bad)  
  4115aa:	into   
  4115ab:	cmc    
  4115ac:	xor    bh,BYTE PTR [edx+0x1d]
  4115af:	retf   
  4115b0:	mov    esi,0x6cd7d2c9
  4115b5:	adc    eax,0x2723d0e7
  4115ba:	mov    ds:0xab835993,al
  4115bf:	nop
  4115c0:	ins    BYTE PTR es:[edi],dx
  4115c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115c2:	(bad)  
  4115c3:	xlat   BYTE PTR ds:[ebx]
  4115c4:	pop    ebp
  4115c5:	jmp    0x411600
  4115c7:	add    esp,DWORD PTR [edx+eax*4+0x2f15107c]
  4115ce:	jge    0x411604
  4115d0:	xor    al,0x55
  4115d2:	xchg   DWORD PTR [ebp+0x45bb4969],eax
  4115d8:	cmp    ecx,DWORD PTR [eax-0x65e629b1]
  4115de:	in     al,dx
  4115df:	dec    edx
  4115e0:	call   0xcbbb:0x9801f5f8
  4115e7:	(bad)  [edx]
  4115e9:	shl    BYTE PTR [esi],cl
  4115eb:	test   al,0x55
  4115ed:	mov    ecx,0xd89b8a3c
  4115f2:	or     al,0xa
  4115f4:	sub    DWORD PTR [ecx-0x65],edi
  4115f7:	push   edi
  4115f8:	add    cl,bl
  4115fa:	lock sti 
  4115fc:	repnz stos DWORD PTR es:[edi],eax
  4115fe:	xchg   ebx,eax
  4115ff:	adc    eax,0xdcbb06a9
  411604:	jb     0x4115d8
  411606:	or     eax,0x56966523
  41160b:	rcl    DWORD PTR [esi],0x56
  41160e:	ins    BYTE PTR es:[edi],dx
  41160f:	pop    ecx
  411610:	out    dx,eax
  411611:	or     cl,cl
  411613:	daa    
  411614:	loopne 0x4115e9
  411616:	bound  edx,QWORD PTR [ebx+0x21ae8fce]
  41161c:	xchg   edi,eax
  41161d:	mov    ah,0xfd
  41161f:	mov    edx,0x63be4e43
  411624:	loope  0x4115d1
  411626:	btr    DWORD PTR [edi],esp
  411629:	clc    
  41162a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41162b:	inc    edi
  41162c:	ror    BYTE PTR [edx],1
  41162e:	pop    es
  41162f:	mov    dl,0xfb
  411631:	adc    al,BYTE PTR [ebx+0x14202c92]
  411637:	sbb    esp,DWORD PTR [ebx-0x68531b10]
  41163d:	idiv   DWORD PTR [ebp+0x4927e450]
  411643:	mov    ds:0x3810832e,al
  411648:	lock sar DWORD PTR [esi-0x1c464ef4],cl
  41164f:	retf   0x6161
  411652:	loope  0x4116c4
  411654:	pop    esi
  411655:	loope  0x4116ba
  411657:	mov    esi,DWORD PTR [edi-0x25]
  41165a:	imul   edx,DWORD PTR [ecx+0x6177b45b],0x54
  411661:	sbb    al,0x7
  411663:	mov    ebp,0x1820ce92
  411668:	(bad)  
  411669:	cmp    al,0x46
  41166b:	fdivr  DWORD PTR [ecx-0x1c3a44be]
  411671:	dec    ebp
  411672:	mov    ecx,ebx
  411674:	pop    ds
  411675:	or     DWORD PTR [edi],esi
  411677:	mov    edx,0x4e09ada7
  41167c:	push   ss
  41167d:	adc    BYTE PTR ds:0x78aaeb31,dl
  411683:	xchg   esp,eax
  411684:	mov    al,ds:0x317693cc
  411689:	or     BYTE PTR [esi*1-0x756819a2],bl
  411690:	test   BYTE PTR [esi+0x12],0xfa
  411694:	sub    al,0xfa
  411696:	pop    ss
  411697:	rol    edx,1
  411699:	mov    esp,0x27d970b1
  41169e:	and    eax,0xed75f9a9
  4116a3:	les    esp,FWORD PTR [edi]
  4116a5:	mov    dh,0x27
  4116a7:	jb     0x4116ce
  4116a9:	icebp  
  4116aa:	pushf  
  4116ab:	stc    
  4116ac:	ins    BYTE PTR es:[edi],dx
  4116ad:	jmp    0x411663
  4116af:	cmp    bh,BYTE PTR [ecx+0x41]
  4116b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b3:	cmc    
  4116b4:	cld    
  4116b5:	pusha  
  4116b6:	jne    0x411667
  4116b8:	sbb    BYTE PTR [esi-0x31],al
  4116bb:	inc    ebp
  4116bc:	xor    al,0x82
  4116be:	mov    ecx,DWORD PTR [ebx-0x6]
  4116c1:	sahf   
  4116c2:	mov    ecx,0xfa203288
  4116c7:	add    eax,0xf9d0a0ab
  4116cc:	mov    ds:0xe9b3fec0,al
  4116d1:	fs add ecx,eax
  4116d4:	dec    esp
  4116d5:	outs   dx,DWORD PTR ds:[esi]
  4116d6:	and    DWORD PTR [edx+0x31],0x44cb7c3c
  4116dd:	xchg   esi,eax
  4116de:	hlt    
  4116df:	outs   dx,BYTE PTR ds:[esi]
  4116e0:	outs   dx,DWORD PTR ds:[esi]
  4116e1:	ret    
  4116e2:	adc    DWORD PTR [esi-0x3],edx
  4116e5:	retf   
  4116e6:	add    eax,DWORD PTR [ebp+0x9]
  4116e9:	jno    0x411755
  4116eb:	in     eax,0x5c
  4116ed:	inc    ebx
  4116ee:	shr    DWORD PTR [ecx+0x6aa2151a],1
  4116f4:	cmp    DWORD PTR [ebx-0x6e8f011e],edi
  4116fa:	stos   DWORD PTR es:[edi],eax
  4116fb:	mov    bh,0x8d
  4116fd:	ja     0x4116e3
  4116ff:	inc    edi
  411700:	ret    
  411701:	mov    BYTE PTR [edx-0x73],0x19
  411705:	lahf   
  411706:	sub    dh,dh
  411708:	sbb    edi,0xf
  41170b:	rol    DWORD PTR [eax-0x4f],cl
  41170e:	lods   eax,DWORD PTR ds:[esi]
  41170f:	jbe    0x4116f3
  411711:	pop    es
  411712:	fisubr DWORD PTR [eax+0x69b76c79]
  411718:	cmp    dh,BYTE PTR [edx-0x29dfabe6]
  41171e:	jge    0x4116b5
  411720:	out    dx,al
  411721:	out    0xeb,al
  411723:	or     DWORD PTR ds:0xcbedf905,ebx
  411729:	aas    
  41172a:	jb     0x4117a5
  41172c:	inc    ebp
  41172d:	jmp    0xb228:0xe0373e43
  411734:	icebp  
  411735:	jno    0x41175c
  411737:	cmp    ebp,DWORD PTR [edi-0x5e7c22d3]
  41173d:	je     0x411791
  41173f:	iret   
  411740:	mov    BYTE PTR [ebx+0x1e],cl
  411743:	sbb    eax,0xae2745a4
  411748:	cmp    BYTE PTR [ecx+eiz*1+0x5d8955bc],dh
  41174f:	and    al,0x5c
  411751:	mov    DWORD PTR [ecx-0x48],ebx
  411754:	pop    ebp
  411755:	jae    0x4116fa
  411757:	dec    edi
  411758:	inc    eax
  411759:	aaa    
  41175a:	xor    eax,DWORD PTR [esi+0x9]
  41175d:	outs   dx,BYTE PTR ds:[esi]
  41175e:	jg     0x411779
  411760:	test   DWORD PTR [ecx-0x77dc2af0],0xeefd9b35
  41176a:	mov    al,ds:0xbbf73cb
  41176f:	sub    edx,DWORD PTR [eax-0x6d]
  411772:	clc    
  411773:	mov    ds:0x9fc1d01f,eax
  411778:	add    BYTE PTR [ebx],cl
  41177a:	xchg   ebx,eax
  41177b:	mov    bh,0xff
  41177d:	shl    DWORD PTR [ecx+0x5273ec79],1
  411783:	push   cs
  411784:	add    dh,0x91
  411787:	jg     0x4117d8
  411789:	and    al,0x9e
  41178b:	sbb    DWORD PTR [eax],ecx
  41178d:	mov    esi,0x832778b
  411792:	or     DWORD PTR [ebx],esp
  411794:	jno    0x4117e4
  411796:	jb     0x4117c7
  411798:	xor    ebx,DWORD PTR [esi+0x48948ada]
  41179e:	fldenv [edi]
  4117a0:	inc    ebp
  4117a1:	and    DWORD PTR [edx+0x4db64326],edx
  4117a7:	ror    BYTE PTR [edx+eax*8],0x4a
  4117ab:	test   DWORD PTR [edx-0x5d],esi
  4117ae:	lods   eax,DWORD PTR fs:[esi]
  4117b0:	cmp    DWORD PTR [ecx+0x4],eax
  4117b3:	cwde   
  4117b4:	lahf   
  4117b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b6:	test   edx,edx
  4117b8:	push   0x61
  4117ba:	jnp    0x4117eb
  4117bc:	adc    DWORD PTR [ebx+0x4e],esi
  4117bf:	inc    edx
  4117c0:	ss inc eax
  4117c2:	mov    cl,0x70
  4117c4:	cmp    DWORD PTR [esi+ecx*4+0x5921dcc4],ebx
  4117cb:	sub    BYTE PTR ds:0x18a0fe39,dh
  4117d1:	push   edx
  4117d2:	(bad)  
  4117d3:	dec    ebp
  4117d4:	aam    0xde
  4117d6:	nop
  4117d7:	push   edx
  4117d8:	xor    bh,bl
  4117da:	push   0xab541a1
  4117df:	mov    edx,0x86f4c420
  4117e4:	xchg   ebp,eax
  4117e5:	inc    ebx
  4117e6:	jns    0x4117f8
  4117e8:	cmp    edi,ebp
  4117ea:	in     eax,0xc5
  4117ec:	bound  esp,QWORD PTR [ecx]
  4117ee:	ins    DWORD PTR es:[edi],dx
  4117ef:	dec    al
  4117f1:	xchg   ecx,eax
  4117f2:	or     DWORD PTR [edi+0x1b9469e0],ebx
  4117f8:	cmp    BYTE PTR [edx+0x8c0bcb4],dh
  4117fe:	sbb    BYTE PTR ds:0xfd68e2a4,bl
  411804:	test   eax,0x77f8bde
  411809:	mov    ebx,0xb550703e
  41180e:	pusha  
  41180f:	and    ecx,DWORD PTR [esi-0x45da68ce]
  411815:	nop
  411816:	into   
  411817:	jns    0x411822
  411819:	inc    esp
  41181a:	mov    dl,0x68
  41181c:	push   esp
  41181d:	rcl    DWORD PTR [ebp-0x2],cl
  411820:	call   0x4c27a2a8
  411825:	jmp    0xdfc8:0xa812535d
  41182c:	jle    0x411877
  41182e:	nop
  41182f:	mov    WORD PTR [ebx+edx*2+0x3d93ac04],es
  411836:	mov    al,ds:0x6ede09a0
  41183b:	icebp  
  41183c:	leave  
  41183d:	pusha  
  41183e:	out    0x62,al
  411840:	sbb    al,0x7
  411842:	out    dx,al
  411843:	xor    BYTE PTR [esi-0x260e958c],dl
  411849:	std    
  41184a:	sub    eax,0x4e463265
  41184f:	out    dx,eax
  411850:	jne    0x4118bb
  411852:	mov    ebx,0x3991795
  411857:	pop    ebx
  411858:	add    esi,DWORD PTR [eax+0x61]
  41185b:	xchg   esi,eax
  41185c:	jne    0x411846
  41185e:	ins    DWORD PTR es:[edi],dx
  41185f:	cmp    al,0x4e
  411861:	adc    BYTE PTR [edx+0xd0ff97d],bl
  411867:	push   esi
  411868:	dec    esi
  411869:	(bad)  
  41186a:	fwait
  41186b:	sub    eax,0x439cd111
  411870:	push   ebx
  411871:	(bad)  
  411872:	adc    BYTE PTR [ebx+edi*8+0x3c],cl
  411876:	aas    
  411877:	test   al,0x37
  411879:	out    dx,al
  41187a:	push   edi
  41187b:	mov    ds:0x19f2d400,al
  411880:	adc    eax,0x7c82272b
  411885:	push   esi
  411886:	add    edi,DWORD PTR [ecx-0x16]
  411889:	push   edx
  41188a:	xlat   BYTE PTR ds:[ebx]
  41188b:	in     eax,0xeb
  41188d:	outs   dx,BYTE PTR ds:[esi]
  41188e:	mov    ds:0x6df1e140,eax
  411893:	and    al,BYTE PTR ds:0x84880b8
  411899:	rol    ebx,cl
  41189b:	pop    edi
  41189c:	mov    esi,0x6ad66375
  4118a1:	inc    edx
  4118a2:	inc    edi
  4118a3:	push   ebp
  4118a4:	sbb    DWORD PTR [di],0x1b
  4118a8:	or     edx,DWORD PTR [edx+ebp*2]
  4118ab:	and    BYTE PTR [eax+0x57d4b7ba],bl
  4118b1:	lods   eax,DWORD PTR ds:[esi]
  4118b2:	mov    cl,0x9e
  4118b4:	inc    eax
  4118b5:	mov    esp,0x46c90da7
  4118ba:	mov    cl,0x8a
  4118bc:	pop    esp
  4118bd:	fadd   QWORD PTR [ecx-0x8]
  4118c0:	in     al,dx
  4118c1:	out    0x3d,al
  4118c3:	rol    BYTE PTR [ebp+0x3d],0x1d
  4118c7:	sbb    eax,0x4104cce6
  4118cc:	aas    
  4118cd:	dec    edx
  4118ce:	ss (bad) 
  4118d0:	iret   
  4118d1:	push   ebx
  4118d2:	push   edx
  4118d3:	adc    DWORD PTR [eax],edx
  4118d5:	stc    
  4118d6:	sbb    DWORD PTR [eax-0x57],eax
  4118d9:	jmp    0x4118f1
  4118db:	mov    edi,0xa14cdf7d
  4118e0:	pop    esi
  4118e1:	add    eax,0x4f43fb38
  4118e6:	jmp    0x411937
  4118e8:	jns    0x4118c7
  4118ea:	ins    BYTE PTR es:[edi],dx
  4118eb:	mov    ah,0x5f
  4118ed:	out    dx,al
  4118ee:	push   esi
  4118ef:	aam    0x19
  4118f1:	mov    al,ds:0x7e5aec08
  4118f6:	xchg   edx,eax
  4118f7:	mov    ebp,0x3d158184
  4118fc:	addr16 aad 0xf5
  4118ff:	(bad)  
  411901:	not    bl
  411903:	scas   eax,DWORD PTR es:[edi]
  411904:	loop   0x41189e
  411906:	adc    bh,BYTE PTR [ebx]
  411908:	test   DWORD PTR [ecx],edx
  41190a:	push   edi
  41190b:	inc    eax
  41190c:	shl    edi,1
  41190e:	nop
  41190f:	cli    
  411910:	js     0x411951
  411912:	fnstsw WORD PTR [ecx+0x71c858f5]
  411918:	sub    BYTE PTR [ebp+0x46],cl
  41191b:	in     al,dx
  41191c:	enter  0x2b86,0xc5
  411920:	lea    edi,[esp+eax*1]
  411923:	lods   al,BYTE PTR ds:[esi]
  411924:	aam    0x5f
  411926:	(bad)  
  411928:	or     eax,0x21c77e10
  41192d:	shl    esi,1
  41192f:	xchg   esp,eax
  411930:	mov    ds:0xf0d85b32,al
  411935:	xor    DWORD PTR [edx+0x5321ab04],edi
  41193b:	daa    
  41193c:	je     0x411907
  41193e:	cld    
  41193f:	add    eax,0xecb81d47
  411944:	jae    0x41192d
  411946:	push   edi
  411947:	call   0xecb189e3
  41194c:	shr    BYTE PTR [edi+0x1fd0124b],1
  411952:	fimul  WORD PTR [esi-0x7e769212]
  411958:	inc    eax
  411959:	inc    esi
  41195a:	adc    DWORD PTR [edi],edx
  41195c:	mov    cl,BYTE PTR [eax]
  41195e:	mov    eax,0x8b87a905
  411963:	xchg   esp,eax
  411964:	scas   eax,DWORD PTR es:[edi]
  411965:	mov    cs,WORD PTR [edi]
  411967:	gs push 0xffffffb8
  41196a:	stos   DWORD PTR es:[edi],eax
  41196b:	cmp    bl,ah
  41196d:	mov    al,0xff
  41196f:	inc    DWORD PTR [ebx]
  411971:	aaa    
  411972:	jecxz  0x4118f9
  411974:	jl     0x4119b3
  411976:	fimul  WORD PTR [esi+0x45a401db]
  41197c:	(bad)  
  41197e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41197f:	out    dx,eax
  411980:	pusha  
  411981:	pop    esi
  411982:	jne    0x411991
  411984:	xchg   DWORD PTR [eax+0x1625a8ad],ebp
  41198a:	out    dx,eax
  41198b:	js     0x4119e6
  41198d:	mov    esp,0x8ce1a191
  411992:	sbb    al,0xee
  411994:	xchg   edx,eax
  411995:	test   dh,bl
  411997:	inc    esi
  411998:	mov    bh,bl
  41199a:	lahf   
  41199b:	jb     0x411947
  41199d:	dec    eax
  41199e:	or     ebx,edx
  4119a0:	or     DWORD PTR [edx+ebp*2],ebx
  4119a3:	sub    DWORD PTR [ebp+0x1a302ff3],edx
  4119a9:	out    dx,eax
  4119aa:	cdq    
  4119ab:	aam    0x46
  4119ad:	addr16 push eax
  4119af:	xor    BYTE PTR [ebp+0x707ddbcb],al
  4119b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b6:	sbb    DWORD PTR [eax+ebx*4+0x28d25670],ebx
  4119bd:	ret    
  4119be:	add    ah,dh
  4119c0:	stc    
  4119c1:	sbb    DWORD PTR [esi-0xb],ecx
  4119c4:	pop    eax
  4119c5:	mov    bh,0x2d
  4119c7:	mov    bh,cl
  4119c9:	push   ss
  4119ca:	ret    0x21e6
  4119cd:	mov    edi,0x870969dc
  4119d2:	xor    ch,BYTE PTR [ebp+0x330e4cce]
  4119d8:	retf   
  4119d9:	leave  
  4119da:	or     BYTE PTR [ebp-0x6],0xf
  4119de:	sub    ecx,DWORD PTR [edx-0x1cac4999]
  4119e4:	shr    BYTE PTR [edi+0x2254e692],0x74
  4119eb:	mov    ecx,0x67178965
  4119f0:	xchg   ebx,eax
  4119f1:	test   BYTE PTR es:[edi+ecx*4],bh
  4119f5:	ds das 
  4119f7:	xchg   edi,eax
  4119f8:	out    0x8d,al
  4119fa:	int    0xec
  4119fc:	sahf   
  4119fd:	xor    eax,ebp
  4119ff:	or     BYTE PTR [eax+ebp*4],0xba
  411a03:	xchg   ebx,eax
  411a04:	aaa    
  411a05:	test   eax,0x9bc507b5
  411a0a:	and    ah,BYTE PTR [ecx+edx*2-0x4f9942f5]
  411a11:	jl     0x4119e2
  411a13:	pop    es
  411a14:	arpl   WORD PTR [edx],bp
  411a16:	sub    DWORD PTR [ebx+ebp*4+0x50],0x7
  411a1b:	(bad)  
  411a1c:	inc    ecx
  411a1d:	nop
  411a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1f:	sar    ah,0x67
  411a22:	int3   
  411a23:	out    0xc2,eax
  411a25:	mov    al,ds:0x7605caa1
  411a2a:	adc    bh,bl
  411a2c:	jne    0x411a6d
  411a2e:	inc    esi
  411a2f:	retf   
  411a30:	iret   
  411a31:	adc    eax,edx
  411a33:	loopne 0x411a4c
  411a35:	mov    cl,dl
  411a37:	push   ds
  411a38:	ret    0xfd92
  411a3b:	loop   0x411a9e
  411a3d:	or     BYTE PTR [ebp-0x1f],cl
  411a40:	jb     0x411a67
  411a42:	data16 arpl si,ax
  411a45:	push   eax
  411a46:	mov    al,ds:0xbd6125f8
  411a4b:	fdivr  DWORD PTR [eax-0x37]
  411a4e:	pop    eax
  411a4f:	jle    0x411a48
  411a51:	jle    0x411aa6
  411a53:	sub    edx,DWORD PTR [esi+0x2c]
  411a56:	fs xor esp,ecx
  411a59:	xchg   DWORD PTR [edx],esi
  411a5b:	mov    edi,0x95197a8e
  411a60:	mov    ebp,0xf35d2326
  411a65:	in     al,dx
  411a66:	test   BYTE PTR [ebx+0x1],cl
  411a69:	jp     0x411a0f
  411a6b:	jb     0x411a24
  411a6d:	add    al,0x90
  411a6f:	ins    DWORD PTR es:[edi],dx
  411a70:	fwait
  411a71:	jne    0x411aeb
  411a73:	sbb    al,0x70
  411a75:	cmp    esi,eax
  411a77:	inc    eax
  411a78:	dec    esp
  411a79:	push   edx
  411a7a:	sub    al,bl
  411a7c:	dec    ebx
  411a7d:	(bad)  
  411a7e:	push   cs
  411a7f:	adc    BYTE PTR [esi],dl
  411a81:	sbb    DWORD PTR [edx-0x77b869cb],ebp
  411a87:	dec    ebx
  411a88:	fnstsw WORD PTR [ebx+0x7cfdba19]
  411a8e:	and    ecx,ebx
  411a90:	and    edi,DWORD PTR [ebp+0x18]
  411a93:	sub    eax,0xbcb56839
  411a98:	mov    al,0xe7
  411a9a:	cdq    
  411a9b:	jecxz  0x411ad7
  411a9d:	in     eax,0x91
  411a9f:	jns    0x411a54
  411aa1:	enter  0xdc53,0x78
  411aa5:	mov    esp,0x5d42f8c6
  411aaa:	repnz scas al,BYTE PTR es:[edi]
  411aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aad:	mov    ah,0x70
  411aaf:	inc    ecx
  411ab0:	add    eax,0x408a2bd9
  411ab5:	push   ss
  411ab6:	and    DWORD PTR [edi+0x25],eax
  411ab9:	cmp    al,0xf7
  411abb:	jp     0x411ae6
  411abd:	imul   edi,DWORD PTR [edx],0x4dd3f2e9
  411ac3:	adc    bh,BYTE PTR [edi+0x35]
  411ac6:	mov    ds:0x435fe36e,al
  411acb:	(bad)  
  411acc:	hlt    
  411acd:	lods   eax,DWORD PTR ds:[esi]
  411ace:	aad    0xed
  411ad0:	dec    edi
  411ad1:	iret   
  411ad2:	les    edx,FWORD PTR [ecx+0x51]
  411ad5:	cmp    eax,0xd0e564ed
  411ada:	mov    ecx,0x8240099e
  411adf:	adc    cl,BYTE PTR [ebp+0x3a63e767]
  411ae5:	out    dx,eax
  411ae6:	js     0x411af0
  411ae8:	sbb    DWORD PTR [esi+0x3e],ebx
  411aeb:	mov    ch,0x21
  411aed:	(bad)  
  411aee:	shl    DWORD PTR [ebx],1
  411af0:	dec    ebx
  411af1:	inc    edi
  411af2:	sub    DWORD PTR [edi],ebx
  411af4:	mov    edx,DWORD PTR [eax-0x64504f6a]
  411afa:	int    0xac
  411afc:	mov    dl,0xcc
  411afe:	push   ss
  411aff:	or     BYTE PTR [edi],dh
  411b01:	fisttp WORD PTR [ecx+0x5abd0a81]
  411b07:	xor    eax,DWORD PTR [edx-0x6f]
  411b0a:	mov    dl,0xac
  411b0c:	(bad)  
  411b0d:	jmp    0x411b4d
  411b0f:	pop    eax
  411b10:	push   ecx
  411b11:	ret    0x2807
  411b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b15:	cdq    
  411b16:	ja     0x411b65
  411b18:	push   eax
  411b19:	call   0x355e0f33
  411b1e:	jge    0x411aa3
  411b20:	cld    
  411b21:	mov    cl,0xa0
  411b23:	test   al,0x30
  411b25:	mov    eax,ds:0xef03b916
  411b2a:	movsx  esp,BYTE PTR [eax+ebx*2]
  411b2e:	push   cs
  411b2f:	push   es
  411b30:	jbe    0x411b6c
  411b32:	out    dx,al
  411b33:	iret   
  411b34:	sahf   
  411b35:	jmp    0x411bac
  411b37:	sub    DWORD PTR [edi],0xd7d4ad5
  411b3d:	fmul   st(5),st
  411b3f:	jl     0x411b84
  411b41:	jmp    0x2156:0xdcb8e107
  411b48:	in     eax,0x98
  411b4a:	pop    edx
  411b4b:	gs sub eax,0xca4a3fce
  411b51:	cmp    esp,ecx
  411b53:	das    
  411b54:	jno    0x411b65
  411b56:	push   esp
  411b57:	cdq    
  411b58:	leave  
  411b59:	aam    0x1d
  411b5b:	fsubr  st(7),st
  411b5d:	adc    edi,DWORD PTR [edx]
  411b5f:	shr    BYTE PTR [edi-0x3],1
  411b62:	out    dx,al
  411b63:	imul   ebx,DWORD PTR [ebx+0x2],0xffffffa2
  411b67:	fsubr  DWORD PTR [eax-0x79]
  411b6a:	mov    ebp,0x1260ca35
  411b6f:	clc    
  411b70:	nop
  411b71:	adc    eax,0xffa87570
  411b76:	adc    cl,ah
  411b78:	loopne 0x411b53
  411b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7b:	sbb    eax,0x6fdbb0ff
  411b80:	pop    ds
  411b81:	enter  0x25d2,0x99
  411b85:	cmp    DWORD PTR [ecx+0x3a350b82],ebp
  411b8b:	push   ebx
  411b8c:	scas   eax,DWORD PTR es:[edi]
  411b8d:	ret    0xee77
  411b90:	repz adc al,0x54
  411b93:	inc    ebp
  411b94:	lods   al,BYTE PTR ds:[esi]
  411b95:	sub    ebx,eax
  411b97:	fisub  WORD PTR [ebx+0x69]
  411b9a:	push   0xffffff89
  411b9c:	imul   ebx,DWORD PTR [ebp+0x32ea961a],0x78d22f78
  411ba6:	dec    ebp
  411ba7:	sahf   
  411ba8:	fndisi(8087 only) 
  411baa:	out    0xac,eax
  411bac:	mov    cl,0x3
  411bae:	add    BYTE PTR ds:0x46453287,al
  411bb4:	test   eax,0xa4ecac7
  411bb9:	xor    eax,DWORD PTR [edi+0x12]
  411bbc:	jle    0x411b89
  411bbe:	sar    BYTE PTR [edi-0x23],1
  411bc1:	push   ebx
  411bc2:	leave  
  411bc3:	call   0x1f7d:0x189f9c5b
  411bca:	push   edx
  411bcb:	mov    al,ds:0x3ba66889
  411bd0:	push   eax
  411bd1:	cdq    
  411bd2:	lods   eax,DWORD PTR ds:[esi]
  411bd3:	and    eax,0x9d2b743a
  411bd8:	pop    esi
  411bd9:	inc    ebp
  411bda:	scas   eax,DWORD PTR es:[edi]
  411bdb:	stc    
  411bdc:	cli    
  411bdd:	sbb    al,0x77
  411bdf:	xor    al,0xd2
  411be1:	rcl    edx,0x0
  411be4:	lea    esp,[edi]
  411be6:	lea    esi,[edi]
  411be8:	adc    ah,BYTE PTR [esi]
  411bea:	aaa    
  411beb:	add    DWORD PTR [edi],0x16
  411bee:	push   ecx
  411bef:	or     eax,esp
  411bf1:	jmp    0x4837d51f
  411bf6:	pop    ecx
  411bf7:	push   edx
  411bf8:	mov    al,ds:0x93b8caab
  411bfd:	sbb    DWORD PTR [esi+eax*8],esp
  411c00:	push   0x1e1ec7f3
  411c05:	pop    esp
  411c06:	nop
  411c07:	test   BYTE PTR [esi-0x40],0xf1
  411c0b:	loopne 0x411b9c
  411c0d:	lahf   
  411c0e:	xchg   ecx,eax
  411c0f:	mov    ds:0x8169316b,eax
  411c14:	imul   edi,DWORD PTR [ebx],0xf7ce170b
  411c1a:	dec    ebx
  411c1b:	mov    eax,ds:0xbcbf0903
  411c20:	dec    ebp
  411c21:	test   DWORD PTR [eax-0x5b],eax
  411c24:	das    
  411c25:	dec    edi
  411c26:	dec    ebp
  411c27:	cmp    al,0x19
  411c29:	das    
  411c2a:	or     bh,BYTE PTR [edx-0xceab82b]
  411c30:	fidiv  WORD PTR fs:0x69c22f2
  411c37:	cmp    al,BYTE PTR [eax+0x64]
  411c3a:	into   
  411c3b:	mov    ds:0x38840448,al
  411c40:	fs push ebp
  411c42:	int    0x87
  411c44:	daa    
  411c45:	retf   
  411c46:	inc    edi
  411c47:	adc    DWORD PTR [ebx+0xf],edx
  411c4a:	sub    ebp,DWORD PTR [edx+0x779c315d]
  411c50:	pop    es
  411c51:	sahf   
  411c52:	mov    gs,WORD PTR [edx-0x51]
  411c55:	out    0x87,al
  411c57:	mov    cl,0xc1
  411c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5a:	push   esp
  411c5b:	dec    ebx
  411c5c:	inc    ebp
  411c5d:	push   edx
  411c5e:	fidivr WORD PTR [ebx-0x448bf92e]
  411c64:	popf   
  411c65:	dec    ebx
  411c66:	mov    ah,0x89
  411c68:	nop
  411c69:	retf   
  411c6a:	cdq    
  411c6b:	adc    BYTE PTR [eax+0x33d63b2c],al
  411c71:	xchg   ah,cl
  411c73:	push   es
  411c74:	push   0x70
  411c76:	or     al,0x11
  411c78:	xlat   BYTE PTR ds:[ebx]
  411c79:	xchg   ebp,eax
  411c7a:	punpcklbw mm2,DWORD PTR [eax-0x18b64e6b]
  411c81:	cmp    BYTE PTR [ebx],cl
  411c83:	out    0x18,al
  411c85:	jne    0x411d01
  411c87:	mov    ebp,0xc21706ea
  411c8c:	xchg   esp,eax
  411c8d:	inc    eax
  411c8e:	scas   al,BYTE PTR es:[edi]
  411c8f:	test   al,0xd8
  411c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c92:	sub    eax,0x32f4eca6
  411c97:	test   DWORD PTR [ebp+0x61a7b3a2],edi
  411c9d:	lahf   
  411c9e:	sub    bh,BYTE PTR [esi]
  411ca0:	xchg   BYTE PTR [eax-0x69],bh
  411ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca4:	jg     0x411c7d
  411ca6:	popf   
  411ca7:	mov    bl,0xd9
  411ca9:	lods   al,BYTE PTR ds:[esi]
  411caa:	jae    0x411c48
  411cac:	std    
  411cad:	cmp    cl,ch
  411caf:	and    ebx,edi
  411cb1:	test   al,0xd8
  411cb3:	jecxz  0x411ccc
  411cb5:	ja     0x411c52
  411cb7:	sahf   
  411cb8:	sub    eax,0xd8f6b60b
  411cbd:	push   ss
  411cbe:	stos   BYTE PTR es:[edi],al
  411cbf:	stos   BYTE PTR es:[edi],al
  411cc0:	pop    edi
  411cc1:	or     al,dl
  411cc3:	or     eax,0x2f9de098
  411cc8:	add    bh,BYTE PTR [edx]
  411cca:	call   0xeb5881b
  411ccf:	scas   al,BYTE PTR es:[edi]
  411cd0:	outs   dx,BYTE PTR ds:[esi]
  411cd1:	add    al,0xfb
  411cd3:	jecxz  0x411ce6
  411cd5:	jmp    0x92e94e9c
  411cda:	out    dx,eax
  411cdb:	div    esp
  411cdd:	imul   bl
  411cdf:	adc    dh,BYTE PTR [edi+0x41829a0b]
  411ce5:	fistp  DWORD PTR [ecx-0x26760bbc]
  411ceb:	adc    dh,BYTE PTR es:[ebx-0x4e1f1ae9]
  411cf2:	outs   dx,DWORD PTR ds:[esi]
  411cf3:	test   BYTE PTR [eax-0x17],0x16
  411cf7:	aam    0x1
  411cf9:	ins    DWORD PTR es:[edi],dx
  411cfa:	sub    ch,BYTE PTR [edx+edi*2-0x45c82df9]
  411d01:	mov    ds:0xe4adbf15,eax
  411d06:	pushf  
  411d07:	dec    esi
  411d08:	add    ch,BYTE PTR [ecx+0x25b89a3c]
  411d0e:	data16 add BYTE PTR [edi-0x45],ch
  411d12:	sbb    DWORD PTR ds:0x33744a15,ebx
  411d18:	sbb    DWORD PTR [ebp+0x76],ebx
  411d1b:	push   eax
  411d1c:	xor    al,0xd8
  411d1e:	mov    cl,0x6
  411d20:	mov    edx,0x39d9d0c
  411d25:	mov    al,BYTE PTR [ebx+0x0]
  411d28:	xor    al,0x80
  411d2a:	loopne 0x411d8f
  411d2c:	imul   esi,DWORD PTR [esi+0x4],0x65edf31c
  411d33:	pop    esi
  411d34:	pop    es
  411d35:	mov    edi,0xa1d1cc14
  411d3a:	int    0x84
  411d3c:	push   edi
  411d3d:	vpand  xmm2,xmm1,XMMWORD PTR [edx+eiz*4]
  411d42:	sbb    ebx,DWORD PTR [edi+0x2d]
  411d45:	pop    ss
  411d46:	xchg   ebp,eax
  411d47:	cmp    BYTE PTR [ecx],ah
  411d49:	iret   
  411d4a:	ds dec esp
  411d4c:	inc    eax
  411d4d:	jae    0x411cf8
  411d4f:	ja     0x411ce8
  411d51:	lea    ebx,[ebp+esi*1+0x7f]
  411d55:	mov    dl,0xe3
  411d57:	push   edx
  411d58:	inc    eax
  411d59:	test   al,0x1e
  411d5b:	jmp    FWORD PTR [edx+0x7485316f]
  411d61:	call   FWORD PTR [ecx+edx*1+0x47d7887c]
  411d68:	bound  edi,QWORD PTR [edx+ecx*4]
  411d6b:	pop    ds
  411d6c:	pop    eax
  411d6d:	xor    eax,0x1a738ea0
  411d72:	mov    ah,0x67
  411d74:	mov    BYTE PTR [edx+0x56],bh
  411d77:	sub    eax,0x7dcca8cf
  411d7c:	aaa    
  411d7d:	jnp    0x411d67
  411d7f:	jmp    0x99973ab7
  411d84:	push   eax
  411d85:	sti    
  411d86:	jp     0x411d94
  411d88:	sub    edx,DWORD PTR [ebx]
  411d8a:	xor    BYTE PTR [ebx+0x77e5bdbe],bl
  411d90:	mov    esp,0xecab3835
  411d95:	push   esi
  411d96:	(bad)  
  411d97:	xor    al,0x54
  411d99:	pop    esi
  411d9a:	mov    ch,0xbb
  411d9c:	arpl   WORD PTR [ebx+ecx*1+0x59],bx
  411da0:	pop    ecx
  411da1:	fistp  QWORD PTR [ecx-0x74]
  411da4:	ds jmp 0x411d6b
  411da7:	mov    WORD PTR [ebp+eiz*4+0x1a],?
  411dab:	inc    ebx
  411dac:	(bad)  
  411dad:	outs   dx,BYTE PTR ds:[esi]
  411dae:	xchg   ah,ah
  411db0:	jns    0x411d6c
  411db2:	fmul   QWORD PTR [ecx-0x397eb368]
  411db8:	inc    esp
  411db9:	fwait
  411dba:	lahf   
  411dbb:	pop    ebp
  411dbc:	js     0x411d72
  411dbe:	aas    
  411dbf:	mov    edi,0x19f451ae
  411dc4:	xchg   BYTE PTR [edx],al
  411dc6:	jle    0x411e2e
  411dc8:	inc    esp
  411dc9:	jg     0x411d93
  411dcb:	cmp    esi,DWORD PTR [bx+0x5a98]
  411dd0:	pop    ds
  411dd1:	lods   eax,DWORD PTR ds:[esi]
  411dd2:	cmp    dh,dl
  411dd4:	repnz xchg esi,eax
  411dd6:	jl     0x411dc2
  411dd8:	and    eax,0x99896f2d
  411ddd:	loope  0x411db9
  411ddf:	mov    ah,0xc4
  411de1:	push   ebx
  411de2:	mov    dh,0xcc
  411de4:	cli    
  411de5:	in     al,dx
  411de6:	inc    eax
  411de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de8:	das    
  411de9:	push   esp
  411dea:	sbb    edx,eax
  411dec:	and    dl,BYTE PTR [edi+0x1b]
  411def:	pushf  
  411df0:	aam    0x61
  411df2:	and    al,0x28
  411df4:	out    0x21,eax
  411df6:	jmp    0x5330d7ab
  411dfb:	xor    bl,0x42
  411dfe:	push   edi
  411dff:	dec    esp
  411e00:	mov    dh,0x13
  411e02:	add    DWORD PTR [edx-0x304a5107],edx
  411e08:	push   0x835c21ca
  411e0d:	inc    ebp
  411e0e:	add    edx,ebx
  411e10:	shr    BYTE PTR [edx],1
  411e12:	dec    edx
  411e13:	cld    
  411e14:	lods   al,BYTE PTR ds:[esi]
  411e15:	repz cmp BYTE PTR [ebx],0xf8
  411e19:	das    
  411e1a:	dec    BYTE PTR [ebx]
  411e1c:	mov    eax,ds:0x3772822a
  411e21:	popa   
  411e22:	mov    cl,0x74
  411e24:	xchg   DWORD PTR [eax-0x35b2eef4],edx
  411e2a:	or     ebp,DWORD PTR [esi+0x54]
  411e2d:	out    dx,al
  411e2e:	xor    eax,0x9f8d120a
  411e33:	bnd jb 0x411dde
  411e36:	nop
  411e37:	sbb    esi,edx
  411e39:	push   0x78
  411e3b:	ja     0x411ea6
  411e3d:	push   edx
  411e3e:	shr    BYTE PTR [edi+0x13a6d160],0x22
  411e45:	adc    BYTE PTR [ebp+edi*8-0x8c2db37],cl
  411e4c:	daa    
  411e4d:	clc    
  411e4e:	cmp    bh,BYTE PTR [edi-0x67]
  411e51:	aad    0x54
  411e53:	mov    ebp,0x6276c8f9
  411e58:	popa   
  411e59:	fimul  WORD PTR [ecx-0xf09432d]
  411e5f:	and    DWORD PTR [esi-0x7ad97ec],esp
  411e65:	mov    eax,DWORD PTR [esi]
  411e67:	fisttp DWORD PTR [edx-0x7f]
  411e6a:	or     DWORD PTR [edi+0x4a],esi
  411e6d:	stos   DWORD PTR es:[edi],eax
  411e6e:	pop    ss
  411e6f:	adc    DWORD PTR [ebx-0x29],0x26889805
  411e76:	shl    dh,cl
  411e78:	dec    esi
  411e79:	popf   
  411e7a:	dec    esi
  411e7b:	les    eax,FWORD PTR [ecx+esi*8-0x7e3c57d]
  411e82:	aaa    
  411e83:	fld    TBYTE PTR [edi]
  411e85:	xchg   edi,eax
  411e86:	jnp    0x411e5a
  411e88:	sbb    ebp,ecx
  411e8a:	add    eax,0x1c3fddf8
  411e8f:	dec    edi
  411e90:	mov    ecx,DWORD PTR [ecx]
  411e92:	lock aam 0x41
  411e95:	and    ebp,DWORD PTR [esi+0x2f]
  411e98:	push   0xffffffe3
  411e9a:	jnp    0x411e57
  411e9c:	aaa    
  411e9d:	fs adc eax,0xbfcc8ac9
  411ea3:	aam    0x50
  411ea5:	out    0xe2,al
  411ea7:	dec    esi
  411ea8:	sub    BYTE PTR [ecx+0x2b],0xf
  411eac:	add    al,0xee
  411eae:	aaa    
  411eaf:	bnd jle 0x411e65
  411eb2:	loop   0x411e76
  411eb4:	fcmovnb st,st(5)
  411eb6:	cdq    
  411eb7:	sbb    BYTE PTR [esi+0x73b88ceb],ah
  411ebd:	jle    0x411e88
  411ebf:	jp     0x411ef0
  411ec1:	push   es
  411ec2:	les    eax,FWORD PTR [ecx]
  411ec4:	sub    ebx,DWORD PTR [edi+0x7e]
  411ec7:	lods   eax,DWORD PTR ds:[esi]
  411ec8:	(bad)  
  411ec9:	add    DWORD PTR [esi-0x204dbd18],0x2e
  411ed0:	fsubr  QWORD PTR [esi+0x1b]
  411ed3:	ins    DWORD PTR es:[edi],dx
  411ed4:	jecxz  0x411ebc
  411ed6:	and    eax,0x386d98cd
  411edb:	inc    ebx
  411edc:	dec    ebp
  411edd:	jmp    0x411eb1
  411edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee0:	outs   dx,BYTE PTR ds:[esi]
  411ee1:	dec    ebx
  411ee2:	stc    
  411ee3:	je     0x411f54
  411ee5:	out    0x94,eax
  411ee7:	aas    
  411ee8:	add    BYTE PTR [edx],al
  411eea:	mov    ch,0x4d
  411eec:	repnz pop ss
  411eee:	xchg   edx,eax
  411eef:	xor    DWORD PTR [ebp-0x74],ecx
  411ef2:	adc    ch,BYTE PTR [ebx-0x1d6559c2]
  411ef8:	pop    ecx
  411ef9:	push   0x9fba3244
  411efe:	aam    0xaa
  411f00:	sbb    BYTE PTR ds:0x17e522e1,al
  411f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f07:	xor    ch,al
  411f09:	inc    edx
  411f0a:	mov    ch,0x82
  411f0c:	sbb    DWORD PTR [esi-0xa],0xffffff85
  411f10:	push   esi
  411f11:	call   0xe145:0x2f6f86b7
  411f18:	retf   0x9d56
  411f1b:	std    
  411f1c:	loopne 0x411f34
  411f1e:	sahf   
  411f1f:	adc    eax,DWORD PTR [esi+eiz*2-0x2caedd1e]
  411f26:	mov    ebp,0x22e4541a
  411f2b:	(bad)  
  411f2c:	or     al,0x5d
  411f2e:	dec    DWORD PTR [edx+0x66102f56]
  411f34:	sbb    eax,0xc05996eb
  411f39:	and    DWORD PTR [esi],edx
  411f3b:	(bad)  
  411f3c:	ins    DWORD PTR es:[edi],dx
  411f3d:	xchg   esi,eax
  411f3e:	cmp    eax,DWORD PTR [ecx]
  411f40:	cmp    al,BYTE PTR [eax]
  411f42:	out    dx,eax
  411f43:	mov    WORD PTR [esi+0x69],ss
  411f46:	push   esi
  411f47:	sub    eax,0x79bcf0f2
  411f4c:	jbe    0x411f79
  411f4e:	and    DWORD PTR [edx],edi
  411f50:	cli    
  411f51:	lea    ebx,[esi-0x37d25142]
  411f57:	(bad)  
  411f58:	fcom   st(7)
  411f5a:	adc    ebp,DWORD PTR [eax]
  411f5c:	ret    
  411f5d:	jecxz  0x411f42
  411f5f:	push   ebp
  411f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f61:	stos   BYTE PTR es:[edi],al
  411f62:	sar    esi,0x73
  411f65:	and    DWORD PTR [eax],ecx
  411f67:	xor    ebp,DWORD PTR [esi]
  411f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f6a:	xlat   BYTE PTR ds:[ebx]
  411f6b:	push   0x6b
  411f6d:	jge    0x411f80
  411f6f:	push   ebx
  411f70:	jnp    0x411f3a
  411f72:	sub    ch,dl
  411f74:	and    al,0x7f
  411f76:	mov    ch,0x15
  411f78:	in     eax,dx
  411f79:	std    
  411f7a:	or     ebx,DWORD PTR [edi]
  411f7c:	test   dh,bh
  411f7e:	adc    al,0x38
  411f80:	in     ax,dx
  411f82:	cmp    DWORD PTR [ecx+0xf],ecx
  411f85:	jb     0x411f3b
  411f87:	push   ss
  411f88:	or     al,bl
  411f8a:	mov    al,cl
  411f8c:	xchg   ecx,eax
  411f8d:	in     eax,dx
  411f8e:	and    dh,bh
  411f90:	push   0x7daa89fa
  411f95:	cmp    BYTE PTR [ebp-0x1b],0x50
  411f99:	mov    DWORD PTR [esi-0x442ff8e3],ecx
  411f9f:	(bad)  
  411fa1:	enter  0xc8c0,0x6c
  411fa5:	(bad)  
  411fa7:	mov    al,ds:0xa1e1dc2f
  411fac:	push   edi
  411fad:	loop   0x412003
  411faf:	gs push ss
  411fb1:	les    esi,FWORD PTR [esi+0x122b0376]
  411fb7:	mov    ch,0x67
  411fb9:	push   edi
  411fba:	xchg   ecx,eax
  411fbb:	cdq    
  411fbc:	pop    esi
  411fbd:	add    ah,al
  411fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fc0:	fwait
  411fc1:	mov    cl,0x94
  411fc3:	cmc    
  411fc4:	jp     0x412026
  411fc6:	add    BYTE PTR [eax+ebp*8-0x1ee645ef],dl
  411fcd:	stos   BYTE PTR es:[edi],al
  411fce:	call   0x69ea1680
  411fd3:	add    ah,BYTE PTR [ecx]
  411fd5:	mov    es,WORD PTR [esi-0x3717d9a3]
  411fdb:	popf   
  411fdc:	add    BYTE PTR [edi+0x3d],al
  411fdf:	aad    0xd8
  411fe1:	dec    esi
  411fe2:	add    DWORD PTR [ebx+0x38],eax
  411fe5:	sbb    DWORD PTR [ecx+0x5],eax
  411fe8:	or     DWORD PTR [ebx],edi
  411fea:	scas   al,BYTE PTR es:[edi]
  411feb:	cmp    cl,ch
  411fed:	ret    0x7b9
  411ff0:	push   esi
  411ff1:	int3   
  411ff2:	popf   
  411ff3:	dec    ebp
  411ff4:	mov    ebp,0xf3df636d
  411ff9:	(bad)  
  411ffa:	mov    ebp,DWORD PTR ds:0x5c3edd86
  412000:	jmp    0xb2b2:0xb10373e
  412007:	mov    ds:0xc2fbe3e6,eax
  41200c:	push   ecx
  41200d:	cdq    
  41200e:	scas   al,BYTE PTR es:[edi]
  41200f:	(bad)  
  412010:	das    
  412011:	push   ebx
  412012:	mov    ds:0x1a165ffe,eax
  412017:	push   cs
  412018:	mov    ch,0x78
  41201a:	adc    ebp,eax
  41201c:	test   eax,0x85174031
  412021:	inc    ebp
  412022:	aaa    
  412023:	idiv   DWORD PTR [eax+edi*1+0x2732e483]
  41202a:	cmc    
  41202b:	es test al,0x2e
  41202e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41202f:	test   eax,0x9e70301
  412034:	lea    ecx,[edx-0x68]
  412037:	dec    edx
  412038:	std    
  412039:	pop    ss
  41203a:	xor    edi,DWORD PTR [ebx+0x48]
  41203d:	les    eax,FWORD PTR [ebx+0x3af5d285]
  412043:	cdq    
  412044:	sub    al,0xb4
  412047:	adc    eax,0x371844dc
  41204c:	adc    eax,0xf0a7768d
  412051:	stos   BYTE PTR es:[edi],al
  412052:	es inc edi
  412054:	bound  eax,QWORD PTR [eax]
  412056:	mov    eax,ds:0x7a0768b0
  41205b:	pop    ebp
  41205c:	add    al,0x2b
  41205e:	add    DWORD PTR [edi],0x7622a472
  412064:	mov    bl,BYTE PTR [ecx+edi*8-0x67]
  412068:	fcomp  DWORD PTR [ebp-0x7b]
  41206b:	xchg   ebp,eax
  41206c:	pushf  
  41206d:	retf   
  41206e:	push   eax
  41206f:	out    0x18,al
  412071:	cmp    BYTE PTR ds:0xa80eba32,cl
  412077:	jns    0x4120cf
  412079:	jne    0x41203f
  41207b:	mov    esi,DWORD PTR [ebp-0x532db85c]
  412081:	sbb    ebp,DWORD PTR [ebp+0x3d2a9b12]
  412087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412088:	jno    0x4120ed
  41208a:	and    al,0x36
  41208c:	inc    edi
  41208d:	push   esp
  41208e:	outs   dx,DWORD PTR ds:[esi]
  41208f:	xchg   edx,eax
  412090:	cmp    eax,0x9178f7ca
  412095:	sbb    al,0x2c
  412097:	jp     0x4120f5
  412099:	mov    bh,0xc2
  41209b:	rcr    BYTE PTR [edx-0x71750047],1
  4120a1:	(bad)  
  4120a2:	jecxz  0x4120b2
  4120a4:	jg     0x4120ff
  4120a6:	jmp    0x1a0f:0x5637a5a0
  4120ad:	cmp    edx,DWORD PTR [ebx+0x66]
  4120b0:	adc    DWORD PTR [edx-0x4a495c22],ecx
  4120b6:	pop    ebp
  4120b7:	sti    
  4120b8:	inc    eax
  4120b9:	cmp    BYTE PTR [edx-0x36],bl
  4120bc:	sahf   
  4120bd:	stos   BYTE PTR es:[edi],al
  4120be:	scas   al,BYTE PTR es:[edi]
  4120bf:	out    0x9a,eax
  4120c1:	mov    cl,0xcc
  4120c3:	xchg   edi,eax
  4120c4:	test   al,0xf4
  4120c6:	mov    esi,0x2bc1acd3
  4120cb:	mov    ecx,0xc158403f
  4120d0:	aad    0xc1
  4120d2:	popf   
  4120d3:	fwait
  4120d4:	loope  0x41207e
  4120d6:	sbb    al,0xed
  4120d8:	push   ds
  4120d9:	cli    
  4120da:	and    eax,0xce31ae70
  4120df:	jp     0x4120e3
  4120e1:	(bad)  
  4120e2:	adc    edx,ecx
  4120e4:	adc    BYTE PTR [esp+esi*2],dl
  4120e7:	in     eax,dx
  4120e8:	repnz cmp al,0x34
  4120eb:	in     eax,0xa7
  4120ed:	dec    esp
  4120ee:	adc    al,0xb4
  4120f0:	repz jne 0x412086
  4120f3:	cmc    
  4120f4:	mov    DWORD PTR [eax+0x22e7c175],ecx
  4120fa:	add    eax,0x565334e2
  4120ff:	push   0xf079c94d
  412104:	cmp    BYTE PTR [edi],cl
  412106:	cli    
  412107:	sahf   
  412108:	push   eax
  412109:	fs add eax,0x65c5b72b
  41210f:	int3   
  412110:	sbb    ebp,edi
  412112:	mov    ah,0x63
  412114:	dec    ebx
  412115:	(bad)
  412118:	iret   
  412119:	sub    dl,BYTE PTR [esi+ecx*4+0x4fe627a1]
  412120:	lods   al,BYTE PTR ds:[esi]
  412121:	out    dx,al
  412122:	jne    0x412127
  412124:	and    edi,eax
  412126:	popf   
  412127:	pop    edx
  412128:	and    al,0xfa
  41212a:	xchg   esp,eax
  41212b:	mov    es,WORD PTR [ebx]
  41212d:	sub    BYTE PTR [ebp+ebp*8+0x404c097d],dl
  412134:	leave  
  412135:	std    
  412136:	lods   al,BYTE PTR ds:[esi]
  412137:	mov    bh,0x47
  412139:	outs   dx,BYTE PTR ds:[esi]
  41213a:	mov    bl,dh
  41213c:	call   0xba82ebfb
  412141:	loopne 0x4121bb
  412143:	mov    esi,0xa44b87af
  412148:	jo     0x41212d
  41214a:	xor    bl,BYTE PTR [ebx+ebp*4]
  41214d:	test   eax,0xa47c28bc
  412152:	(bad)  
  412154:	scas   eax,DWORD PTR es:[edi]
  412155:	add    BYTE PTR [edi],cl
  412157:	arpl   WORD PTR [ebp*4-0x4396c73e],di
  41215e:	push   edx
  41215f:	and    DWORD PTR ss:[esi+0x7d],ebp
  412163:	lock add ah,dl
  412166:	pop    es
  412167:	into   
  412168:	jne    0x412120
  41216a:	scas   al,BYTE PTR es:[edi]
  41216b:	outs   dx,DWORD PTR ds:[esi]
  41216c:	sub    BYTE PTR [edx+0x26],dh
  41216f:	sbb    al,0x0
  412171:	nop
  412172:	in     eax,0x8a
  412174:	retf   0xe77b
  412177:	push   ebx
  412178:	scas   al,BYTE PTR es:[edi]
  412179:	mov    esp,0xef775f49
  41217e:	mov    bl,0xd
  412180:	(bad)  
  412181:	outs   dx,DWORD PTR ds:[esi]
  412182:	sub    BYTE PTR [ebp-0x444cccd9],0x56
  412189:	and    BYTE PTR [esi+0x17bcc0da],bh
  41218f:	ror    DWORD PTR [eax],cl
  412191:	jne    0x4121e6
  412193:	fist   WORD PTR [edi+0x28]
  412196:	sub    eax,eax
  412198:	xchg   DWORD PTR [ebx],edi
  41219a:	mov    esi,0x55baa7d1
  41219f:	shr    BYTE PTR [edx-0x6b639bd8],1
  4121a5:	call   0xd3315cef
  4121aa:	xchg   ebx,eax
  4121ab:	cmp    BYTE PTR [esi-0x2fafaf29],cl
  4121b1:	fst    QWORD PTR [eax]
  4121b3:	bswap  edi
  4121b5:	mov    dh,0x2c
  4121b7:	les    esp,FWORD PTR [esi+ebx*1-0x4008da86]
  4121be:	sub    al,BYTE PTR [edx+ecx*8]
  4121c1:	adc    al,0x45
  4121c3:	jae    0x41214f
  4121c5:	sbb    cl,al
  4121c7:	stos   DWORD PTR es:[edi],eax
  4121c8:	or     al,0xc0
  4121ca:	xchg   ecx,eax
  4121cb:	add    eax,0xc5b6a922
  4121d0:	pop    es
  4121d1:	push   ebx
  4121d2:	add    DWORD PTR [esi],ebp
  4121d4:	cmp    eax,0x735e5546
  4121d9:	xchg   ebx,eax
  4121da:	xor    ebx,ebp
  4121dc:	mul    DWORD PTR [esi-0x16]
  4121df:	push   ebp
  4121e0:	stc    
  4121e1:	scas   eax,DWORD PTR es:[edi]
  4121e2:	inc    eax
  4121e3:	sbb    DWORD PTR [ebx],ebx
  4121e5:	enter  0x7c63,0xdb
  4121e9:	lahf   
  4121ea:	stos   DWORD PTR es:[edi],eax
  4121eb:	loope  0x412203
  4121ed:	mov    cl,0xf4
  4121ef:	sub    bl,BYTE PTR [ebx]
  4121f1:	fldcw  WORD PTR [esp+eax*1]
  4121f4:	adc    al,0x1a
  4121f6:	dec    esi
  4121f7:	add    eax,DWORD PTR ds:0xe9aa0439
  4121fd:	mov    WORD PTR [esi],?
  4121ff:	sub    DWORD PTR [edx+0x2b],0x4a7d7805
  412206:	mov    al,ds:0x62df51be
  41220b:	fisttp DWORD PTR [esi-0x6b]
  41220e:	or     ah,BYTE PTR [edi]
  412210:	mov    gs,WORD PTR es:[ecx+0x79]
  412214:	pusha  
  412215:	jae    0x412238
  412217:	xchg   bl,dh
  412219:	ds add ch,ch
  41221c:	mov    bl,0x2a
  41221e:	mov    edi,0xb60e8b75
  412223:	sbb    DWORD PTR [esi+0x1e],eax
  412226:	mov    ds:0x4d716ba6,eax
  41222b:	sbb    ch,BYTE PTR [ebp+ebx*8+0x62cd52ae]
  412232:	dec    esi
  412233:	jns    0x4121d0
  412235:	hlt    
  412236:	fld    TBYTE PTR [eax]
  412238:	xlat   BYTE PTR ds:[ebx]
  412239:	mov    esp,0x77a97929
  41223e:	loopne 0x41227c
  412240:	xor    ah,BYTE PTR [eax+0x76]
  412243:	sbb    ebx,DWORD PTR [edx]
  412245:	shl    BYTE PTR [edi],cl
  412247:	mov    ebp,0xa609a450
  41224c:	arpl   di,bp
  41224e:	and    ah,cl
  412250:	ret    0x487e
  412253:	outs   dx,DWORD PTR ds:[esi]
  412254:	jmp    0x381b2dfd
  412259:	test   ebp,eax
  41225b:	pop    esi
  41225c:	aas    
  41225d:	test   eax,0x6b9a5690
  412262:	and    al,0xa3
  412264:	cwde   
  412265:	jle    0x4122be
  412267:	xchg   esp,eax
  412268:	inc    edx
  412269:	out    dx,al
  41226a:	retf   
  41226b:	dec    edx
  41226c:	test   al,0xed
  41226e:	cmp    DWORD PTR [ebx-0x3d],eax
  412271:	ss nop
  412273:	cmp    al,BYTE PTR [ecx-0x7508b880]
  412279:	jle    0x4122dc
  41227b:	fimul  DWORD PTR [edi+0x74]
  41227e:	dec    ebp
  41227f:	mov    bl,0xfe
  412281:	xchg   edx,eax
  412282:	pop    esp
  412283:	jg     0x41226c
  412285:	rcl    BYTE PTR [ebp+0x22],0xc5
  412289:	inc    edx
  41228a:	jle    0x4122cf
  41228c:	jp     0x412309
  41228e:	shl    edx,1
  412290:	into   
  412291:	mov    dh,0x1b
  412293:	jnp    0x412215
  412295:	enter  0x3175,0x6a
  412299:	sub    bl,BYTE PTR [esi-0x17]
  41229c:	mov    edx,esi
  41229e:	jmp    0x16a4a45e
  4122a3:	sti    
  4122a4:	sbb    BYTE PTR [ebp-0x2b6573ad],cl
  4122aa:	ins    BYTE PTR es:[edi],dx
  4122ab:	xor    eax,0xdcd0886c
  4122b0:	jle    0x412270
  4122b2:	add    eax,0xd6206ec
  4122b7:	mov    ebx,0xfb77427
  4122bc:	popf   
  4122bd:	jno    0x41228f
  4122bf:	out    0x25,eax
  4122c1:	jo     0x412314
  4122c3:	clc    
  4122c4:	adc    al,0x1a
  4122c6:	in     eax,dx
  4122c7:	repz push esi
  4122c9:	push   edi
  4122ca:	mov    dl,cl
  4122cc:	test   ebp,ebp
  4122ce:	push   edi
  4122cf:	popa   
  4122d0:	div    BYTE PTR [ebx-0xb777b18]
  4122d6:	xor    al,0xde
  4122d8:	jmp    0xaae3:0xb91b9b69
  4122df:	jmp    0xd4cace8d
  4122e4:	(bad)  
  4122e5:	mov    esp,DWORD PTR [ecx-0x35]
  4122e8:	push   ecx
  4122e9:	and    BYTE PTR [esi+0x61359653],bl
  4122ef:	mov    ds:0x94db9635,al
  4122f4:	retf   0x5ce4
  4122f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f8:	xor    BYTE PTR fs:[ecx],ah
  4122fb:	loopne 0x4122ac
  4122fd:	cmp    BYTE PTR [ebx+0x6406453a],cl
  412303:	pop    ecx
  412304:	cmp    edx,DWORD PTR [edi]
  412306:	cmovb  esp,DWORD PTR [esi-0x7a8829ee]
  41230d:	or     cl,ch
  41230f:	cmp    BYTE PTR [ecx],al
  412311:	xor    eax,0xc119f69f
  412316:	mov    ds:0x485391c4,eax
  41231b:	in     eax,dx
  41231c:	lea    eax,[eax+eiz*1-0x50eeae26]
  412323:	adc    bh,BYTE PTR [esi]
  412325:	aas    
  412326:	fiadd  DWORD PTR [ebx+0x3c]
  412329:	sbb    DWORD PTR [esi-0x5b],edi
  41232c:	aam    0xb5
  41232e:	add    bh,BYTE PTR [edi+0x7d]
  412331:	mov    al,ds:0x1d6a8bdf
  412336:	mov    esp,0x79febaed
  41233b:	stos   DWORD PTR es:[edi],eax
  41233c:	inc    ebp
  41233d:	ds cmp BYTE PTR fs:[ebx+0x2690941a],0x1a
  412346:	xor    ebx,0xffffffdc
  412349:	or     DWORD PTR [ecx+0x45cd478b],ebx
  41234f:	jmp    0x41237c
  412351:	jno    0x412309
  412353:	pop    edi
  412354:	fwait
  412355:	retf   
  412356:	push   esi
  412357:	xor    DWORD PTR [eax+0x11],0x9360e885
  41235e:	fwait
  41235f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412360:	int3   
  412361:	jg     0x4123a0
  412363:	(bad)  
  412364:	mov    dl,0x4d
  412366:	push   0x4a34606b
  41236b:	push   cs
  41236c:	fisub  DWORD PTR [ecx+0x4e761d09]
  412372:	aam    0xb8
  412374:	imul   ecx,DWORD PTR [ecx+0x60],0xf67b5da9
  41237b:	add    al,0xcc
  41237d:	in     eax,0x55
  41237f:	int    0x8a
  412381:	mov    edx,0xb23158e1
  412386:	cmp    DWORD PTR [eax+esi*8-0x31c07910],ebp
  41238d:	adc    DWORD PTR [ebx-0x1d4f96aa],eax
  412393:	(bad)  
  412394:	xlat   BYTE PTR ds:[ebx]
  412395:	(bad)  
  412396:	fsub   DWORD PTR [ebp+eiz*1-0x4b]
  41239a:	xor    al,BYTE PTR ds:0xd2ebee4c
  4123a0:	aas    
  4123a1:	popf   
  4123a2:	(bad)  
  4123a3:	mov    esi,0x81041737
  4123a8:	push   edi
  4123a9:	mov    bh,0x52
  4123ab:	adc    BYTE PTR [esi],bh
  4123ad:	or     ecx,ebp
  4123af:	adc    esi,DWORD PTR [ebx-0x1c]
  4123b2:	dec    esi
  4123b3:	and    al,0xbc
  4123b5:	jae    0x4123e8
  4123b7:	jne    0x41240e
  4123b9:	lock jg 0x4123df
  4123bc:	aas    
  4123bd:	push   ecx
  4123be:	jmp    0xe5d8a612
  4123c3:	sbb    BYTE PTR [ebx-0x46916e9d],ah
  4123c9:	dec    edi
  4123ca:	call   FWORD PTR [esi]
  4123cc:	(bad)  
  4123cd:	pop    ebp
  4123ce:	xor    DWORD PTR [ecx+0x716830eb],ebx
  4123d4:	xor    esi,DWORD PTR [esi+0x14]
  4123d7:	dec    eax
  4123d8:	aaa    
  4123d9:	sbb    eax,0x34fd245a
  4123de:	mov    eax,0x8e30cd32
  4123e3:	pushf  
  4123e4:	scas   al,BYTE PTR es:[edi]
  4123e5:	adc    eax,0x4572e84b
  4123ea:	xchg   esp,eax
  4123eb:	mov    ebp,0x215b1663
  4123f0:	dec    edi
  4123f1:	inc    edi
  4123f2:	int    0x85
  4123f4:	imul   edx,DWORD PTR [esi],0xd18f4ce9
  4123fa:	sbb    BYTE PTR ds:0xcb6a74d8,0x20
  412401:	icebp  
  412402:	data16 adc al,BYTE PTR [esi+ebx*8]
  412406:	sub    BYTE PTR [ebx+0x194f59d4],cl
  41240c:	fstp   QWORD PTR [esi+0x6f]
  41240f:	inc    ebp
  412410:	cmc    
  412411:	dec    eax
  412412:	(bad)  
  412413:	pop    esp
  412414:	xor    eax,DWORD PTR [edx]
  412416:	mov    bh,BYTE PTR [edi+0x229d5663]
  41241c:	(bad)  
  41241d:	xchg   edi,eax
  41241e:	hlt    
  41241f:	pusha  
  412420:	sub    ebx,esp
  412422:	mov    ds:0x63ab171d,eax
  412427:	cmp    bl,bl
  412429:	mov    cl,0x82
  41242b:	add    ah,BYTE PTR [edi+eiz*4-0x7f10f78d]
  412432:	(bad)  
  412433:	add    edi,DWORD PTR [bp+di+0x41]
  412437:	sub    al,0x5b
  412439:	shl    BYTE PTR [edi-0x6aa657f4],cl
  41243f:	dec    esp
  412440:	push   0xffffffac
  412442:	adc    ch,BYTE PTR [ecx+0x7d7f42a5]
  412448:	xchg   esi,eax
  412449:	inc    ecx
  41244a:	lods   al,BYTE PTR ds:[esi]
  41244b:	or     esp,DWORD PTR [ecx+0x632f763d]
  412451:	inc    ecx
  412452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412453:	sbb    DWORD PTR [edi-0x29],0x2bb45c53
  41245a:	dec    ecx
  41245b:	and    eax,DWORD PTR [ecx-0x3c]
  41245e:	add    eax,0x42d218e2
  412463:	jg     0x41245e
  412465:	dec    edi
  412466:	inc    esp
  412467:	add    bl,BYTE PTR [edi+0x4e]
  41246a:	push   ss
  41246b:	(bad)  [edi]
  41246d:	loopne 0x41246a
  41246f:	call   0x206d2953
  412474:	jne    0x412457
  412476:	cmovb  edx,DWORD PTR [ebx+0x54]
  41247a:	mov    ebp,0xf442a10b
  41247f:	sub    al,0x63
  412481:	jle    0x41245a
  412483:	pop    edx
  412484:	dec    ecx
  412485:	call   0xa2323fbb
  41248a:	sub    esi,DWORD PTR [esp+esi*2+0x71e97213]
  412491:	inc    esp
  412492:	sbb    edi,edx
  412494:	test   BYTE PTR [ecx+0x548ae8b5],ch
  41249a:	lahf   
  41249b:	dec    eax
  41249c:	dec    edx
  41249d:	inc    edi
  41249e:	nop
  41249f:	sub    BYTE PTR [ebx+0x72],ch
  4124a2:	int3   
  4124a3:	sti    
  4124a4:	mov    ebp,ss
  4124a6:	xchg   ecx,eax
  4124a7:	push   esp
  4124a8:	ins    BYTE PTR es:[edi],dx
  4124a9:	pop    ss
  4124aa:	adc    esi,eax
  4124ac:	xchg   DWORD PTR [eax],eax
  4124ae:	and    al,0xc4
  4124b0:	das    
  4124b1:	push   cs
  4124b2:	clc    
  4124b3:	mov    ebp,0xdee248ec
  4124b8:	loop   0x41245b
  4124ba:	push   edi
  4124bb:	add    al,0x87
  4124bd:	out    dx,al
  4124be:	inc    eax
  4124bf:	dec    eax
  4124c0:	sbb    BYTE PTR [ebp-0x2fce4385],ah
  4124c6:	mov    ebx,ds
  4124c8:	mov    BYTE PTR [esi],al
  4124ca:	mov    al,BYTE PTR [esi-0x68]
  4124cd:	lahf   
  4124ce:	pop    ss
  4124cf:	cli    
  4124d0:	lahf   
  4124d1:	xchg   BYTE PTR [ecx],cl
  4124d3:	push   ecx
  4124d4:	sub    al,0x93
  4124d6:	and    DWORD PTR [edi],ebp
  4124d8:	adc    BYTE PTR [edx-0x62c431a5],cl
  4124de:	jmp    0x41246b
  4124e0:	pusha  
  4124e1:	jp     0x412554
  4124e3:	cvtps2pi mm2,QWORD PTR [edx-0x795186]
  4124ea:	imul   esi,ecx,0x70789663
  4124f0:	lock adc ebx,0x3e
  4124f4:	in     al,0xbc
  4124f6:	add    al,0xf5
  4124f8:	mov    ds:0x86fedbc3,al
  4124fd:	xlat   BYTE PTR ds:[ebx]
  4124fe:	jg     0x4124a0
  412500:	mov    ds:0xcd1ae45b,eax
  412505:	test   eax,0x49154f24
  41250a:	into   
  41250b:	push   cs
  41250c:	pushf  
  41250d:	pop    ebx
  41250e:	mov    ah,0xb5
  412510:	or     edx,DWORD PTR [eax+esi*1]
  412513:	mov    eax,0x64efbb05
  412518:	out    0x4f,eax
  41251a:	int    0x4
  41251c:	enter  0x86ca,0x2
  412520:	sahf   
  412521:	inc    ebp
  412522:	fidivr DWORD PTR [eax+0x42]
  412525:	pop    ss
  412526:	mov    ds:0x56755345,eax
  41252b:	push   esi
  41252c:	int3   
  41252d:	mov    bh,0x68
  41252f:	cdq    
  412530:	or     bl,BYTE PTR [edi]
  412532:	jmp    FWORD PTR [esp+esi*1-0x80]
  412536:	int3   
  412537:	jmp    0xa84f4d80
  41253c:	xchg   esi,eax
  41253d:	add    edx,DWORD PTR [ebx+0x75fb2f19]
  412543:	iret   
  412544:	aam    0xe
  412546:	adc    al,0x9b
  412548:	xor    eax,0xab7af1a3
  41254d:	mov    cl,0xdd
  41254f:	jle    0x412563
  412551:	addr16 xor eax,0xc2ce96a0
  412557:	mov    al,0x30
  412559:	or     eax,0xad7b3888
  41255e:	in     al,0x80
  412560:	xor    al,0xed
  412562:	add    bh,BYTE PTR [edx-0xc]
  412565:	out    dx,al
  412566:	cmp    eax,0x32554bdb
  41256b:	sti    
  41256c:	jns    0x4125e7
  41256e:	mov    WORD PTR [ebp-0x17],ds
  412571:	and    al,0x36
  412574:	ret    
  412575:	rcr    bh,cl
  412577:	pop    eax
  412578:	sub    eax,0x649a70f6
  41257d:	adc    al,0xd8
  41257f:	std    
  412580:	mov    ch,0xb
  412582:	mov    al,ds:0xc1b215ca
  412587:	dec    esi
  412588:	js     0x4125d7
  41258a:	jl     0x4125ca
  41258c:	fxch   st(0)
  41258e:	xchg   BYTE PTR [ecx],ch
  412590:	pop    eax
  412591:	cmp    esi,edi
  412593:	icebp  
  412594:	fist   WORD PTR [ecx-0x5a21f114]
  41259a:	mul    DWORD PTR [eax-0x7d]
  41259d:	and    DWORD PTR [ebp+0x66],ecx
  4125a0:	dec    ecx
  4125a1:	push   eax
  4125a2:	sub    eax,0xabc611e
  4125a7:	sub    dh,BYTE PTR [ebp+edi*4+0x6d]
  4125ab:	jne    0x41254c
  4125ad:	sub    al,0x1e
  4125af:	xchg   esi,eax
  4125b0:	adc    DWORD PTR [eax-0x7c],ebx
  4125b3:	add    eax,0x23c930bb
  4125b8:	repnz into 
  4125ba:	loopne 0x412574
  4125bc:	out    dx,eax
  4125bd:	out    0x56,al
  4125bf:	sub    ebx,DWORD PTR [esi-0x1343aaee]
  4125c5:	mov    BYTE PTR [ecx*1-0x6e44cf31],bh
  4125cc:	call   0xe1ca447d
  4125d1:	add    al,0x8e
  4125d3:	imul   esp,DWORD PTR [edi+0x64],0x29
  4125d7:	fwait
  4125d8:	add    ah,bl
  4125da:	iret   
  4125db:	inc    eax
  4125dc:	jns    0x4125d2
  4125de:	push   eax
  4125df:	retf   
  4125e0:	mov    ebx,0x28813fe
  4125e5:	xor    DWORD PTR cs:[ecx-0x34814357],edx
  4125ec:	bound  edi,QWORD PTR [ebp-0x5c]
  4125ef:	mov    ecx,0x73e7cbf3
  4125f4:	test   al,0xeb
  4125f6:	xor    esi,DWORD PTR [edi+esi*1]
  4125f9:	inc    edx
  4125fa:	pushf  
  4125fb:	add    cl,bl
  4125fd:	in     eax,dx
  4125fe:	mov    al,ds:0x8f8407ed
  412603:	jns    0x4125ee
  412605:	jns    0x4125a7
  412607:	lock push edi
  412609:	scas   eax,DWORD PTR es:[edi]
  41260a:	shr    BYTE PTR [edi],cl
  41260c:	cld    
  41260d:	rcl    DWORD PTR cs:0x889bba52,0x3b
  412615:	scas   al,BYTE PTR es:[edi]
  412616:	adc    esp,DWORD PTR [esi-0x5cb1cb87]
  41261c:	(bad)  
  41261d:	lds    edx,FWORD PTR [esi-0x15]
  412620:	cmp    al,0x4a
  412622:	mov    ecx,0x20b3869c
  412627:	xor    DWORD PTR [ebx],0x6c1beca
  41262d:	add    esp,DWORD PTR [ecx+0x681b3d76]
  412633:	js     0x41265b
  412635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412636:	sub    ah,BYTE PTR [eax-0x2d]
  412639:	adc    al,BYTE PTR [eax-0x52]
  41263c:	pop    esp
  41263d:	xor    BYTE PTR [esi-0x7571e17e],0x40
  412644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412645:	inc    ecx
  412646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412647:	popa   
  412648:	jnp    0x412684
  41264a:	adc    al,0x52
  41264c:	push   edi
  41264d:	xchg   esi,eax
  41264e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41264f:	mov    esi,0x59bf5c3e
  412654:	icebp  
  412655:	mov    bl,0x54
  412657:	jl     0x41264c
  412659:	fst    QWORD PTR [ebx+0x1f3aa3a9]
  41265f:	dec    edx
  412660:	add    al,0x83
  412662:	call   0x68e0c9e6
  412667:	dec    edi
  412668:	ins    BYTE PTR es:[edi],dx
  412669:	xor    ebp,eax
  41266b:	call   0x44b3:0xf6289c8e
  412672:	lods   al,BYTE PTR ds:[esi]
  412673:	xchg   esi,eax
  412674:	out    dx,al
  412675:	cmp    eax,0x5ee6912d
  41267a:	rcl    DWORD PTR [ebx],0xea
  41267d:	pop    esp
  41267e:	lock push ss
  412680:	popa   
  412681:	shl    DWORD PTR [edi-0x159f4ae6],0x18
  412688:	call   0x7fa61f8a
  41268d:	inc    esi
  41268e:	sbb    BYTE PTR [eax+eiz*2-0x33],bl
  412692:	mov    ebp,0xe0b4eca3
  412697:	lds    edx,FWORD PTR [eax-0x1b]
  41269a:	rol    DWORD PTR [ecx-0x52439a8f],1
  4126a0:	dec    edx
  4126a1:	dec    edi
  4126a2:	les    esp,FWORD PTR [ebx+0x3e245b16]
  4126a8:	mov    dl,0x2c
  4126aa:	adc    al,0xf3
  4126ac:	jmp    0x7b738dd1
  4126b1:	dec    esp
  4126b2:	and    bh,BYTE PTR [ebx+0x46796508]
  4126b8:	add    esi,DWORD PTR [eax-0x59697b77]
  4126be:	xchg   ecx,eax
  4126bf:	test   edx,ebx
  4126c1:	pop    eax
  4126c2:	and    cl,BYTE PTR [ebx]
  4126c4:	cdq    
  4126c5:	shl    esi,cl
  4126c7:	push   ebp
  4126c8:	push   ss
  4126c9:	aam    0xba
  4126cb:	(bad)  
  4126cd:	cdq    
  4126ce:	cmp    DWORD PTR [edx+ebx*8-0x71765a9c],esi
  4126d5:	nop
  4126d6:	daa    
  4126d7:	imul   ebp,DWORD PTR [ebx+0x4397ee8],0x3f
  4126de:	outs   dx,BYTE PTR ds:[esi]
  4126df:	std    
  4126e0:	inc    esp
  4126e1:	mov    edx,0x639e6e39
  4126e6:	pop    esi
  4126e7:	inc    edx
  4126e8:	pop    esp
  4126e9:	push   es
  4126ea:	out    dx,eax
  4126eb:	cwde   
  4126ec:	scas   al,BYTE PTR es:[edi]
  4126ed:	or     BYTE PTR [ebx+0x30],dh
  4126f0:	je     0x4126d0
  4126f2:	xlat   BYTE PTR ds:[ebx]
  4126f3:	call   0xbe410f63
  4126f8:	mov    ds:0x8add0c2f,al
  4126fd:	add    cl,BYTE PTR [edx+0x4241985c]
  412703:	div    ecx
  412705:	neg    BYTE PTR [ebp-0x6c]
  412708:	ins    BYTE PTR es:[edi],dx
  412709:	stos   BYTE PTR es:[edi],al
  41270a:	pop    esp
  41270b:	inc    esi
  41270c:	int3   
  41270d:	jle    0x412780
  41270f:	(bad)  
  412710:	jns    0x412696
  412712:	mov    sp,0x1542
  412716:	repnz loopne 0x4126ee
  412719:	ins    DWORD PTR es:[edi],dx
  41271a:	retf   0xfcbf
  41271d:	ret    
  41271e:	aaa    
  41271f:	faddp  st(0),st
  412721:	mul    BYTE PTR [edx-0x3a]
  412724:	les    edx,FWORD PTR [edx]
  412726:	mov    al,ds:0xfd0735ab
  41272b:	push   ebx
  41272c:	sub    BYTE PTR [ebx-0x27],0xaa
  412730:	inc    esp
  412731:	inc    edx
  412732:	push   ss
  412733:	in     eax,0xd5
  412735:	shr    al,1
  412737:	dec    ebx
  412738:	mov    al,ds:0xbadf016f
  41273d:	jmp    0x53562513
  412742:	adc    ch,BYTE PTR [esi+0x32]
  412745:	rcl    ebp,0xb1
  412748:	mov    ebp,0x6e0975b
  41274d:	shl    DWORD PTR [ecx],1
  41274f:	imul   esp,DWORD PTR [edx],0xf8feeb50
  412755:	sub    al,BYTE PTR [eax+0x58]
  412758:	(bad)  
  412759:	fs into 
  41275b:	xor    BYTE PTR [edi+0x13],0xd7
  41275f:	or     al,0xe1
  412761:	(bad)  
  412762:	jmp    0x412740
  412764:	in     al,0x44
  412766:	xchg   ebp,eax
  412767:	jne    0x4126ef
  412769:	ret    0x5c0c
  41276c:	loope  0x4127d1
  41276e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41276f:	jg     0x4127c2
  412771:	or     al,0xd1
  412773:	ins    DWORD PTR es:[edi],dx
  412774:	mov    bh,0x91
  412776:	scas   eax,DWORD PTR es:[edi]
  412777:	(bad)  
  412778:	push   ebx
  412779:	xor    BYTE PTR [esi],ch
  41277b:	add    esp,DWORD PTR [ebp+0x5d18ab71]
  412781:	loop   0x41271e
  412783:	pop    edi
  412784:	fs or  al,0x9a
  412787:	rcl    DWORD PTR [edi-0x44],0x99
  41278b:	pop    ecx
  41278c:	pop    es
  41278d:	fs pop ds
  41278f:	xchg   ebx,eax
  412790:	xor    ebp,esi
  412792:	mov    ?,WORD PTR [ebx-0x8]
  412795:	daa    
  412796:	outs   dx,DWORD PTR ds:[esi]
  412797:	mov    edi,0xa4bd02c1
  41279c:	mov    WORD PTR [ecx-0x6a],ss
  41279f:	xchg   edx,eax
  4127a0:	(bad)  
  4127a1:	mov    edi,0xf7d653d4
  4127a6:	mov    ds:0x8b349a8f,al
  4127ab:	mov    esp,0x399f6f68
  4127b0:	ret    0x5c9b
  4127b3:	mov    edi,0xc9aff71b
  4127b8:	or     BYTE PTR [eax-0x697819e2],cl
  4127be:	jnp    0x412832
  4127c0:	xchg   esp,eax
  4127c1:	mov    DWORD PTR [edi-0x52e567db],ebx
  4127c7:	lods   al,BYTE PTR ds:[esi]
  4127c8:	mov    edi,0xb01f3824
  4127cd:	aam    0xc6
  4127cf:	test   BYTE PTR [edx+0x16],dh
  4127d2:	leave  
  4127d3:	sub    eax,0x2e390106
  4127d8:	mov    ecx,0xab409f25
  4127dd:	outs   dx,BYTE PTR ds:[esi]
  4127de:	jbe    0x4127eb
  4127e0:	clc    
  4127e1:	sub    BYTE PTR [ebp+edx*2+0x4a],al
  4127e5:	mov    ch,0xf4
  4127e7:	pop    ds
  4127e8:	scas   al,BYTE PTR es:[edi]
  4127e9:	(bad)  
  4127ea:	adc    esi,DWORD PTR [ebx]
  4127ec:	mov    BYTE PTR es:[edx+0x50],cl
  4127f0:	pcmpeqd mm2,mm4
  4127f3:	dec    edx
  4127f4:	sahf   
  4127f5:	pop    ds
  4127f6:	cs mov bl,0xfa
  4127f9:	jne    0x4127b5
  4127fb:	and    al,0xf2
  4127fd:	test   DWORD PTR [ecx],esi
  4127ff:	out    dx,al
  412800:	into   
  412801:	add    eax,0x7f2ebd07
  412806:	inc    ebp
  412807:	ret    0xf865
  41280a:	mov    dh,cl
  41280c:	repz ficomp DWORD PTR [eax]
  41280f:	dec    ebx
  412810:	retf   0xfa44
  412813:	adc    al,0x17
  412815:	and    DWORD PTR [ebx],ecx
  412817:	push   ss
  412818:	push   esp
  412819:	or     edi,edi
  41281b:	scas   eax,DWORD PTR es:[edi]
  41281c:	jne    0x4127f3
  41281e:	fisttp DWORD PTR [ebx]
  412820:	(bad)  
  412822:	add    esp,ecx
  412824:	xchg   esi,eax
  412825:	mov    bh,0xa7
  412827:	pop    ss
  412828:	xor    ebp,ecx
  41282a:	fbld   TBYTE PTR [ebx]
  41282c:	jbe    0x4127fb
  41282e:	into   
  41282f:	js     0x41280b
  412831:	in     al,dx
  412832:	call   0x2079:0x8a94d07d
  412839:	jne    0x4128a8
  41283b:	sbb    ah,ah
  41283d:	jg     0x4128a8
  41283f:	cld    
  412840:	xchg   ebp,eax
  412841:	aam    0x62
  412843:	aas    
  412844:	xchg   DWORD PTR [ecx+ebp*8],eax
  412847:	ret    0xfc57
  41284a:	jnp    0x412846
  41284c:	adc    eax,0x1c7ea472
  412851:	mov    ah,0xd0
  412853:	sbb    ah,BYTE PTR [ebp+0x3e]
  412856:	xlat   BYTE PTR ds:[ebx]
  412857:	pop    ecx
  412858:	mov    bh,0x9f
  41285a:	fldcw  WORD PTR [ecx-0x4dea2f29]
  412860:	or     eax,0x6d81bb26
  412865:	mov    edi,0x49077724
  41286a:	stos   BYTE PTR es:[edi],al
  41286b:	inc    edx
  41286c:	mov    cl,0xb2
  41286e:	sti    
  41286f:	mov    ecx,0x660cce6c
  412874:	xchg   esi,eax
  412875:	cmp    eax,0x77f38811
  41287a:	cmp    esp,DWORD PTR [edi-0x5b]
  41287d:	inc    esi
  41287e:	rcl    cl,cl
  412880:	test   al,0x76
  412882:	pop    ecx
  412883:	jle    0x4128e6
  412885:	cmp    BYTE PTR [ecx],ch
  412887:	jae    0x412833
  412889:	inc    ebx
  41288a:	sahf   
  41288b:	pop    edi
  41288c:	pop    esi
  41288d:	xchg   ebp,eax
  41288e:	sbb    ah,BYTE PTR [ecx+0x49]
  412891:	add    ebx,DWORD PTR [eax+0x56]
  412894:	imul   esi,DWORD PTR [edx+0x2a],0x43
  412898:	jl     0x412830
  41289a:	mov    BYTE PTR [eax],dl
  41289c:	add    eax,0x325a1359
  4128a1:	jecxz  0x41282e
  4128a3:	dec    esp
  4128a4:	mov    ebx,0x65470398
  4128a9:	or     eax,0x5e547a7c
  4128ae:	or     ebp,DWORD PTR [ebp-0x6c]
  4128b1:	imul   edx,DWORD PTR [ebp+0xc],0x17
  4128b5:	mov    bh,0x8
  4128b7:	cmp    ebx,DWORD PTR [edx+0x37]
  4128ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128bb:	xor    BYTE PTR [eax-0x3c],dh
  4128be:	xchg   esi,eax
  4128bf:	mov    eax,0xd617db2f
  4128c4:	inc    esp
  4128c5:	pop    ebp
  4128c6:	or     DWORD PTR [edi+0x49],ecx
  4128c9:	repz cwde 
  4128cb:	jmp    0xea53:0x228bf671
  4128d2:	add    al,0x9a
  4128d4:	call   0x7501:0x51da7151
  4128db:	inc    esp
  4128dc:	jnp    0x4128e4
  4128de:	nop/reserved BYTE PTR [edi-0x4a]
  4128e2:	sbb    dl,BYTE PTR [eax+0x5facd189]
  4128e8:	or     BYTE PTR [ebx+0x73],dh
  4128eb:	jmp    0x4a98:0x2a4e7d85
  4128f2:	mov    edx,0x2befad5d
  4128f7:	fisub  DWORD PTR [ebp+eiz*8-0x2c75dc2]
  4128fe:	push   cs
  4128ff:	stc    
  412900:	pushf  
  412901:	dec    ebp
  412902:	or     BYTE PTR [edx+ebx*8+0x646597b0],ch
  412909:	and    ecx,DWORD PTR [edx-0x21]
  41290c:	test   bl,0xc4
  41290f:	in     al,dx
  412910:	pushf  
  412911:	mov    bh,0x62
  412913:	fs jmp 0xc977:0x5bbf56b5
  41291b:	out    0x6a,eax
  41291d:	cmp    ebp,edi
  41291f:	clc    
  412920:	sbb    DWORD PTR [ecx],ecx
  412922:	add    eax,0x59424cf5
  412927:	cwde   
  412928:	fiadd  DWORD PTR [ebx+0x3801c0da]
  41292e:	xchg   edx,eax
  41292f:	mov    ebp,eax
  412931:	shl    edx,0x4c
  412934:	fbstp  TBYTE PTR [esi-0x21]
  412937:	add    DWORD PTR [esi-0x4d],edi
  41293a:	(bad)  
  41293b:	(bad)  
  41293d:	stos   DWORD PTR es:[edi],eax
  41293e:	enter  0x7554,0x26
  412942:	dec    esi
  412943:	cdq    
  412944:	lds    esp,FWORD PTR [edx+0x68]
  412947:	stos   DWORD PTR es:[edi],eax
  412948:	rcr    esp,1
  41294a:	pop    edx
  41294b:	in     eax,dx
  41294c:	xchg   edx,eax
  41294d:	add    al,0x4
  41294f:	arpl   WORD PTR [ebx+0x369adcbc],di
  412955:	lahf   
  412956:	cld    
  412957:	ds sub dh,BYTE PTR es:[esi-0x234b67a6]
  41295f:	out    0xa0,eax
  412961:	jg     0x412937
  412963:	xchg   esp,ecx
  412965:	pop    es
  412966:	push   es
  412967:	cld    
  412968:	jmp    0x942ee0c2
  41296d:	cmp    eax,0x1a0f251b
  412972:	jecxz  0x4129cd
  412974:	sbb    edi,esi
  412976:	push   ecx
  412977:	xor    bh,BYTE PTR [eax+0x21]
  41297a:	sar    BYTE PTR [esi],1
  41297c:	lock mov ds:0x953e5cbf,eax
  412982:	pop    edi
  412983:	mov    DWORD PTR [edx+0x798e61c5],ecx
  412989:	xchg   ebp,eax
  41298a:	add    DWORD PTR [esi-0x3e873a41],edx
  412990:	cmp    al,0x3f
  412992:	jno    0x4129de
  412994:	inc    ebx
  412995:	and    esi,DWORD PTR [edi+0x184e2fb2]
  41299b:	enter  0x6b9,0xa7
  41299f:	xchg   esi,eax
  4129a0:	inc    edi
  4129a1:	int    0x85
  4129a3:	mov    bh,0x3d
  4129a5:	xchg   esp,eax
  4129a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a7:	push   ds
  4129a8:	scas   al,BYTE PTR es:[edi]
  4129a9:	(bad)  
  4129aa:	popf   
  4129ab:	sahf   
  4129ac:	xchg   BYTE PTR [esi],ch
  4129ae:	fcom   QWORD PTR [ecx+0x287f5e80]
  4129b4:	es popf 
  4129b6:	xchg   esp,eax
  4129b7:	mov    ds:0x1e204367,eax
  4129bc:	inc    edi
  4129bd:	push   ebp
  4129be:	adc    DWORD PTR [ebx],ebp
  4129c0:	sub    bl,BYTE PTR [ecx]
  4129c2:	jmp    0xfc90:0x6175d1bd
  4129c9:	ja     0x4129a6
  4129cb:	adc    dl,BYTE PTR [edi-0x3e]
  4129ce:	add    ebx,edx
  4129d0:	fwait
  4129d1:	mov    esi,0xa3e64a0d
  4129d6:	arpl   WORD PTR [ebx],bx
  4129d8:	add    DWORD PTR [edx+0x75],esi
  4129db:	test   eax,0x4b659bde
  4129e0:	cli    
  4129e1:	int3   
  4129e2:	jne    0x4129ac
  4129e4:	es iret 
  4129e6:	lods   al,BYTE PTR ds:[esi]
  4129e7:	add    edi,DWORD PTR [eax+0x76cf429e]
  4129ed:	lock cdq 
  4129ef:	es pop ds
  4129f1:	mov    ecx,esp
  4129f3:	mov    ecx,0x5725d53e
  4129f8:	push   ds
  4129f9:	inc    edx
  4129fa:	push   ds
  4129fb:	lods   al,BYTE PTR ds:[esi]
  4129fc:	dec    ebx
  4129fd:	std    
  4129fe:	cmp    eax,0xda03db00
  412a03:	fst    QWORD PTR [ecx+0x43960eda]
  412a09:	add    ebx,ecx
  412a0b:	xchg   ebx,eax
  412a0c:	cmp    DWORD PTR [esi-0x34],ebp
  412a0f:	jecxz  0x412a02
  412a11:	mov    bh,0x4b
  412a13:	outs   dx,DWORD PTR ds:[esi]
  412a14:	stc    
  412a15:	push   eax
  412a16:	pop    ecx
  412a17:	gs push eax
  412a19:	cs and esi,ebp
  412a1c:	loop   0x4129f6
  412a1e:	push   eax
  412a1f:	out    0x0,al
  412a21:	stc    
  412a22:	pop    ebx
  412a23:	jno    0x412a05
  412a25:	pop    ecx
  412a26:	mov    ebp,0xcb283a29
  412a2b:	fadd   DWORD PTR [ebx]
  412a2d:	cmp    al,0x2
  412a2f:	addr16 xchg esp,eax
  412a31:	push   es
  412a32:	jne    0x4129fb
  412a34:	ss repnz scas al,BYTE PTR es:[edi]
  412a37:	pop    ebp
  412a38:	aam    0x2
  412a3a:	jp     0x4129ce
  412a3c:	aaa    
  412a3d:	mov    ds:0x61217bc6,eax
  412a42:	retf   
  412a43:	add    al,0xad
  412a45:	fild   QWORD PTR [ebx]
  412a47:	sub    al,0x3f
  412a49:	pop    es
  412a4a:	pop    ss
  412a4b:	xchg   ebp,eax
  412a4c:	mov    ds:0x6e1dbc10,al
  412a51:	add    ecx,edx
  412a53:	sysexit 
  412a55:	jge    0x412a29
  412a57:	les    eax,FWORD PTR [edx]
  412a59:	push   esp
  412a5a:	mov    eax,0x6df2c2c9
  412a5f:	mov    fs,WORD PTR [edx+0x11]
  412a62:	das    
  412a63:	ret    
  412a64:	lds    edi,FWORD PTR [ebp+0x2d]
  412a67:	adc    BYTE PTR [esi-0x80],0x81
  412a6b:	shl    DWORD PTR [esi+ecx*4-0x45],1
  412a6f:	xchg   BYTE PTR [ebp+0x4410ca36],dh
  412a75:	rol    BYTE PTR [edi],cl
  412a77:	and    dl,BYTE PTR [esi+0x7d]
  412a7a:	lods   al,BYTE PTR ds:[esi]
  412a7b:	dec    eax
  412a7c:	mov    esp,0x55d16bf7
  412a81:	gs push cs
  412a83:	dec    esi
  412a84:	mov    eax,ds:0x4b7f2c18
  412a89:	ret    0x208b
  412a8c:	enter  0xd0f,0xde
  412a90:	mov    eax,ds:0x1813b038
  412a95:	dec    esp
  412a96:	ins    DWORD PTR es:[edi],dx
  412a97:	into   
  412a98:	fdecstp 
  412a9a:	mov    ch,0xa4
  412a9c:	jno    0x412a51
  412a9e:	cmp    BYTE PTR [edi],cl
  412aa0:	addr16 sti 
  412aa2:	gs push esi
  412aa4:	vmwrite eax,DWORD PTR [eax+edi*1+0x3f]
  412aa9:	dec    esp
  412aaa:	scas   eax,DWORD PTR es:[edi]
  412aab:	call   0xa1e4:0x71e2da6f
  412ab2:	sub    BYTE PTR [edx-0x1d],cl
  412ab5:	mov    al,ds:0x15e633c0
  412aba:	adc    DWORD PTR [esi+0x2d],esi
  412abd:	shr    DWORD PTR [edi-0x5d],0xb1
  412ac1:	push   ebp
  412ac2:	js     0x412a4b
  412ac4:	mov    eax,0xf95bc09
  412ac9:	xchg   DWORD PTR [edx+0x68fe66a],ecx
  412acf:	add    BYTE PTR [edx],bl
  412ad1:	retf   0x3b53
  412ad4:	or     eax,0x1185b71f
  412ad9:	clc    
  412ada:	push   esp
  412adb:	push   edi
  412adc:	lods   eax,DWORD PTR ds:[esi]
  412add:	cmp    al,0x21
  412adf:	scas   al,BYTE PTR es:[edi]
  412ae0:	xor    edi,edx
  412ae2:	sbb    eax,0x18912f0
  412ae7:	(bad)
  412aec:	int    0x5b
  412aee:	out    0xc7,eax
  412af0:	in     al,0x79
  412af2:	sbb    BYTE PTR [ebx-0x4b],0xda
  412af6:	(bad)  
  412af7:	mov    edx,0x395d9b90
  412afc:	xchg   edx,eax
  412afd:	xchg   BYTE PTR [eax-0x3e],ah
  412b00:	and    eax,0xc5943bd6
  412b05:	pop    ebp
  412b06:	ins    BYTE PTR es:[edi],dx
  412b07:	jp     0x412b64
  412b09:	mov    al,BYTE PTR [edx]
  412b0b:	push   es
  412b0c:	ins    BYTE PTR es:[edi],dx
  412b0d:	pop    eax
  412b0e:	sbb    al,0xac
  412b10:	outs   dx,BYTE PTR ds:[esi]
  412b11:	mov    bl,0x76
  412b13:	loope  0x412b82
  412b15:	jmp    0x412b84
  412b17:	out    dx,al
  412b18:	retf   
  412b19:	fsubr  DWORD PTR [ebp+0x729d3060]
  412b1f:	sbb    BYTE PTR [edi-0x5],cl
  412b22:	and    BYTE PTR es:[ebp+0x7],bh
  412b26:	ss jp  0x412b78
  412b29:	pop    edx
  412b2a:	shr    BYTE PTR [esi-0x80],0x9c
  412b2e:	mov    DWORD PTR [esi-0x12],ebp
  412b31:	inc    ebp
  412b32:	in     al,0x48
  412b34:	sub    ecx,DWORD PTR [bx+di]
  412b37:	push   0x3b
  412b39:	jae    0x412bb9
  412b3b:	pop    ebp
  412b3c:	fldenv [ebx+ebp*4-0x1d2d6b7e]
  412b43:	jp     0x412acd
  412b45:	jb     0x412b1f
  412b47:	outs   dx,DWORD PTR ds:[esi]
  412b48:	xor    edx,edx
  412b4a:	add    eax,0x32c9694e
  412b4f:	add    al,0xaf
  412b51:	and    al,0x6
  412b53:	cmp    al,0x6c
  412b55:	push   ecx
  412b56:	push   eax
  412b57:	adc    BYTE PTR [eax],dl
  412b59:	sbb    DWORD PTR [edx-0x5a602ae6],0x771e5214
  412b63:	fimul  WORD PTR [edi-0x8951f46]
  412b69:	jae    0x412b7f
  412b6b:	cmova  edx,DWORD PTR [ecx+0x5585146c]
  412b72:	(bad)  
  412b73:	mov    ah,0x81
  412b75:	pmaddwd mm1,QWORD PTR ds:0xd29b64e7
  412b7c:	xchg   ecx,eax
  412b7d:	jl     0x412b34
  412b7f:	sub    BYTE PTR [eax-0x43333fc2],ah
  412b85:	sub    al,0xcc
  412b87:	pop    ebx
  412b88:	cdq    
  412b89:	outs   dx,BYTE PTR ds:[esi]
  412b8a:	shl    BYTE PTR [esi],1
  412b8c:	or     al,0x9b
  412b8e:	ret    
  412b8f:	jb     0x412c09
  412b91:	push   ss
  412b92:	fimul  DWORD PTR [edi]
  412b94:	loope  0x412bb5
  412b96:	cs push 0xffffffa3
  412b99:	and    cl,ah
  412b9b:	les    ecx,FWORD PTR [ebx]
  412b9d:	push   edx
  412b9e:	pop    ss
  412b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba0:	or     BYTE PTR [edx+ebx*8+0x51],dh
  412ba4:	lods   ax,WORD PTR ds:[esi]
  412ba6:	push   eax
  412ba7:	push   esp
  412ba8:	push   ebp
  412ba9:	jo     0x412b94
  412bab:	lea    esi,[esp+esi*4-0x792a4c0d]
  412bb2:	or     eax,0x8bea71c5
  412bb7:	(bad)  
  412bb8:	jl     0x412bc4
  412bba:	popf   
  412bbb:	sub    BYTE PTR [ebp+0x45],ch
  412bbe:	cmc    
  412bbf:	(bad)
  412bc2:	repnz push esi
  412bc4:	or     DWORD PTR [ecx],ebp
  412bc6:	add    al,0x3b
  412bc8:	ds push ebp
  412bca:	clc    
  412bcb:	aam    0x93
  412bcd:	pop    DWORD PTR [ecx-0x7e]
  412bd0:	in     eax,dx
  412bd1:	out    dx,al
  412bd2:	popf   
  412bd3:	pushf  
  412bd4:	mov    dl,0xee
  412bd6:	hlt    
  412bd7:	mov    ecx,0xcd30e692
  412bdc:	ins    BYTE PTR es:[edi],dx
  412bdd:	xor    BYTE PTR [edx-0x2748d8ab],bh
  412be3:	shr    BYTE PTR [ecx-0x4e],0x43
  412be7:	inc    esi
  412be8:	fsub   QWORD PTR [ebx-0x6a]
  412beb:	xor    ecx,edi
  412bed:	xchg   ch,dh
  412bef:	pop    esp
  412bf0:	jne    0x412bb5
  412bf2:	add    al,BYTE PTR ds:0x710fd177
  412bf8:	retf   0x8035
  412bfb:	jnp    0x412c71
  412bfd:	xor    edx,DWORD PTR [edi+0x65]
  412c00:	xor    DWORD PTR [esi+0x0],ebx
  412c03:	or     dl,al
  412c05:	sub    ch,BYTE PTR [ecx+0x6f]
  412c08:	int    0x24
  412c0a:	aam    0x96
  412c0c:	sbb    eax,0x51f7b791
  412c11:	mov    dh,BYTE PTR [ecx+0x4]
  412c14:	mov    ch,0x79
  412c16:	xchg   DWORD PTR [ebp-0x63],esi
  412c19:	lea    ebp,[edx+0x57]
  412c1c:	hlt    
  412c1d:	adc    eax,0x841427fa
  412c22:	mov    ds:0xd7c71521,eax
  412c27:	lahf   
  412c28:	pop    ebp
  412c29:	ja     0x412c53
  412c2b:	lahf   
  412c2c:	and    BYTE PTR [eax],0xf8
  412c2f:	popa   
  412c30:	rol    BYTE PTR [ebx+0x12],0xa2
  412c34:	dec    ecx
  412c35:	xchg   edx,eax
  412c36:	aaa    
  412c37:	xchg   ebp,eax
  412c38:	(bad)
  412c3b:	ins    DWORD PTR es:[edi],dx
  412c3c:	leave  
  412c3d:	cmp    ebp,DWORD PTR [esp+ecx*2]
  412c40:	lds    esp,FWORD PTR [ecx-0x7a95734d]
  412c46:	je     0x412c30
  412c48:	outs   dx,BYTE PTR ds:[esi]
  412c49:	sub    al,0xc9
  412c4b:	mov    edi,0x51c346c6
  412c50:	inc    edx
  412c51:	adc    ch,BYTE PTR [esi+ecx*8+0x2dc0668d]
  412c58:	xor    edx,DWORD PTR [eax]
  412c5a:	ret    
  412c5b:	sbb    DWORD PTR [bx+di-0x5b59],ebx
  412c60:	add    esi,ebp
  412c62:	mov    dh,0x30
  412c64:	mov    eax,ds:0x2fc1684e
  412c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c6a:	mov    esp,0xa1f1f07e
  412c6f:	pushf  
  412c70:	out    dx,eax
  412c71:	mov    edx,DWORD PTR [edi-0xc]
  412c74:	lahf   
  412c75:	inc    edi
  412c76:	inc    edi
  412c77:	pusha  
  412c78:	mov    edx,DWORD PTR [ebp+ebx*4-0x41]
  412c7c:	bound  edi,QWORD PTR [edx-0x6d92f03f]
  412c82:	clc    
  412c83:	les    esi,FWORD PTR [edx+ebx*8]
  412c86:	enter  0xe756,0xa7
  412c8a:	test   eax,0xe7e68937
  412c8f:	xor    BYTE PTR [ebx-0x3c],0x76
  412c93:	test   eax,0x87342c99
  412c98:	dec    ebx
  412c99:	in     eax,dx
  412c9a:	sub    DWORD PTR [edi-0x475e241f],edx
  412ca0:	dec    esp
  412ca1:	sbb    DWORD PTR [edi-0x2b39fed4],esi
  412ca7:	inc    esi
  412ca8:	cmp    eax,0x8b2f90c1
  412cad:	cmc    
  412cae:	std    
  412caf:	cdq    
  412cb0:	repnz cmc 
  412cb2:	outs   dx,DWORD PTR ds:[esi]
  412cb3:	leave  
  412cb4:	aas    
  412cb5:	sbb    ch,BYTE PTR [ebx]
  412cb7:	out    dx,al
  412cb8:	mov    esi,0x798c4012
  412cbd:	xor    eax,0xc49eaf52
  412cc2:	cdq    
  412cc3:	or     eax,esp
  412cc5:	push   0x764f4060
  412cca:	xlat   BYTE PTR ds:[ebx]
  412ccb:	cmc    
  412ccc:	inc    edi
  412ccd:	fucomp st(1)
  412ccf:	push   ebx
  412cd0:	cmp    al,0x6d
  412cd2:	ds dec eax
  412cd4:	add    DWORD PTR [ebp-0x47],ecx
  412cd7:	psubd  mm2,QWORD PTR [ebx]
  412cda:	xchg   edx,eax
  412cdb:	icebp  
  412cdc:	add    eax,DWORD PTR [eax-0x5e7164e3]
  412ce2:	test   eax,0xaf94c8c0
  412ce7:	push   esp
  412ce8:	nop
  412ce9:	fisubr WORD PTR [ebp-0x2d]
  412cec:	sbb    dh,dl
  412cee:	fmul   st,st(3)
  412cf0:	ja     0x412ccd
  412cf2:	inc    BYTE PTR [edi-0x60a55e6]
  412cf8:	jbe    0x412cea
  412cfa:	sub    eax,0x4e0ec81d
  412cff:	clc    
  412d00:	stc    
  412d01:	int3   
  412d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d03:	and    eax,0xf91c7001
  412d08:	jmp    0x8083:0x425be494
  412d0f:	pusha  
  412d10:	(bad)  
  412d11:	repnz rol BYTE PTR [eax],0x88
  412d15:	mov    DWORD PTR [edi],ebx
  412d17:	sar    BYTE PTR [edi-0x21],1
  412d1a:	mov    ebx,0xc7fa378c
  412d1f:	int3   
  412d20:	addr16 sub eax,0x4b2594f
  412d26:	xor    ecx,0x49568a84
  412d2c:	lea    esi,[ecx+0xba01cbe]
  412d32:	pop    edx
  412d33:	jecxz  0x412d10
  412d35:	cmp    eax,ecx
  412d37:	ds inc eax
  412d39:	int    0xf9
  412d3b:	jecxz  0x412d52
  412d3d:	(bad)  
  412d3f:	push   0x5909dc54
  412d44:	xchg   DWORD PTR [esi+ecx*1-0x543b5f95],edx
  412d4b:	mov    al,0x67
  412d4d:	(bad)  
  412d4e:	dec    eax
  412d4f:	ja     0x412dc8
  412d51:	test   WORD PTR ds:0x764657f0,cx
  412d58:	jecxz  0x412d4a
  412d5a:	xchg   esp,eax
  412d5b:	xchg   ebp,eax
  412d5c:	loop   0x412d67
  412d5e:	int    0xc5
  412d60:	mov    ecx,0xcaaf60c2
  412d66:	call   0x2966:0x980d3171
  412d6d:	xchg   edx,eax
  412d6e:	fsubr  DWORD PTR [ebx+0x37c35880]
  412d74:	xor    ecx,eax
  412d76:	out    0x1f,al
  412d78:	pop    edi
  412d79:	dec    ebx
  412d7a:	icebp  
  412d7b:	and    bl,BYTE PTR [esi-0x1]
  412d7e:	pop    edx
  412d7f:	add    al,ch
  412d81:	int    0xaf
  412d83:	cld    
  412d84:	je     0x412d79
  412d86:	jmp    0xe7da0494
  412d8b:	repnz adc esi,esp
  412d8e:	xchg   dl,dh
  412d90:	mov    bl,0xa9
  412d92:	xor    edx,DWORD PTR [ebx]
  412d94:	(bad)  
  412d95:	jae    0x412d93
  412d97:	aam    0xa6
  412d99:	sbb    dl,BYTE PTR [ebp-0x5c]
  412d9c:	adc    ah,0x50
  412d9f:	test   eax,0x5bf96659
  412da4:	pop    esp
  412da5:	shr    DWORD PTR [edi+0x63b7a8b4],0xbb
  412dac:	int3   
  412dad:	sub    cl,cl
  412daf:	rcr    DWORD PTR [esi+0x20917c5e],cl
  412db5:	and    ah,bl
  412db7:	pop    esi
  412db8:	into   
  412db9:	sub    esi,DWORD PTR [edi+eiz*2]
  412dbc:	inc    eax
  412dbd:	xchg   edi,ebp
  412dbf:	sbb    DWORD PTR [edi],0x62
  412dc2:	iret   
  412dc3:	ror    DWORD PTR [eax-0x849be9c],1
  412dc9:	add    al,0x53
  412dcb:	call   0x987eb5fe
  412dd0:	arpl   WORD PTR [ecx+eax*1+0xc4743d1],bp
  412dd7:	jo     0x412de2
  412dd9:	sub    bh,bh
  412ddb:	sti    
  412ddc:	adc    bl,BYTE PTR [edx]
  412dde:	or     esp,DWORD PTR [ecx-0x433b527d]
  412de4:	pop    es
  412de5:	(bad)  
  412de6:	adc    eax,0x1561d95a
  412deb:	xor    ebp,DWORD PTR es:[edx+ecx*1]
  412def:	rcl    DWORD PTR [edx+esi*2+0x77],0xd5
  412df4:	rcr    ebx,0xfe
  412df7:	sbb    esp,ecx
  412df9:	adc    bh,bh
  412dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dfc:	xor    ch,BYTE PTR [eax]
  412dfe:	(bad)  
  412dff:	jmp    0xbb0c01c
  412e04:	jge    0x412e5b
  412e06:	pop    ebx
  412e07:	std    
  412e08:	pop    es
  412e09:	pop    ss
  412e0a:	inc    edx
  412e0b:	(bad)  
  412e0c:	int    0x73
  412e0e:	mov    WORD PTR [edi],fs
  412e10:	jne    0x412de0
  412e12:	inc    ebp
  412e13:	sub    esi,DWORD PTR [ecx]
  412e15:	push   esp
  412e16:	push   edx
  412e17:	loop   0x412e38
  412e19:	mov    dh,0x7a
  412e1b:	clc    
  412e1c:	jb     0x412e53
  412e1e:	sub    ch,BYTE PTR [eax+0x7e]
  412e21:	call   0x554e8336
  412e26:	and    al,0xe6
  412e28:	sub    DWORD PTR [edx],esp
  412e2a:	cld    
  412e2b:	outs   dx,DWORD PTR ds:[esi]
  412e2c:	call   0xfbd03042
  412e31:	mov    eax,ds:0xb2f166f
  412e36:	rcl    ebx,1
  412e38:	cmp    edi,esp
  412e3a:	xor    esp,DWORD PTR [ebx+0x19fa8706]
  412e40:	add    al,0x88
  412e42:	add    cl,BYTE PTR [edi-0x24]
  412e45:	(bad)  
  412e46:	ret    0x7fa2
  412e49:	pop    edx
  412e4a:	mov    ds:0x19fe0e13,al
  412e4f:	scas   al,BYTE PTR es:[edi]
  412e50:	out    0xf7,eax
  412e52:	(bad)  
  412e53:	shl    DWORD PTR [ebp+0xf],1
  412e56:	inc    esi
  412e57:	pop    ss
  412e58:	mov    bl,0x40
  412e5a:	pop    ebp
  412e5b:	cmp    DWORD PTR [ebx],0xffffffdb
  412e5e:	iret   
  412e5f:	call   0x59c8:0x608c53e1
  412e66:	stos   BYTE PTR es:[edi],al
  412e67:	xor    eax,0x6a86a37a
  412e6c:	loopne 0x412e87
  412e6e:	pop    eax
  412e6f:	cmc    
  412e70:	xchg   ebx,eax
  412e71:	dec    eax
  412e72:	pop    ds
  412e73:	pop    ebx
  412e74:	sbb    eax,0x460a29c8
  412e79:	shl    ebp,cl
  412e7b:	ret    0x689c
  412e7e:	test   al,0xc5
  412e80:	out    dx,eax
  412e81:	popa   
  412e82:	cmp    bl,BYTE PTR [ecx+0x68]
  412e85:	cdq    
  412e86:	ins    BYTE PTR es:[edi],dx
  412e87:	retf   0xeaa1
  412e8a:	faddp  st(6),st
  412e8c:	pop    ebx
  412e8d:	sbb    BYTE PTR [edx],bh
  412e8f:	xor    al,0x8a
  412e91:	and    ebx,DWORD PTR [edi-0x53]
  412e94:	iret   
  412e95:	idiv   DWORD PTR [bx+di]
  412e98:	ret    0x8712
  412e9b:	clc    
  412e9c:	pop    ecx
  412e9d:	aad    0xfc
  412e9f:	xor    esi,DWORD PTR ds:0xe23e4841
  412ea5:	dec    eax
  412ea6:	cdq    
  412ea7:	mov    ss,edx
  412ea9:	jecxz  0x412e74
  412eab:	mov    ds:0x7de84974,eax
  412eb0:	iret   
  412eb1:	imul   eax,DWORD PTR [ebp-0x5a],0xd
  412eb5:	popf   
  412eb6:	je     0x412e44
  412eb8:	loopne 0x412ef5
  412eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ebb:	jnp    0x412e49
  412ebd:	cmp    bh,cl
  412ebf:	sub    eax,0xe6a532f6
  412ec4:	mov    WORD PTR [ebx],ds
  412ec6:	fs in  al,dx
  412ec8:	pop    ss
  412ec9:	pop    ecx
  412eca:	sbb    bl,BYTE PTR [ebp-0x2b45a9a7]
  412ed0:	cmp    eax,0xb23c48c6
  412ed5:	lds    esp,FWORD PTR [eax]
  412ed7:	dec    edx
  412ed8:	pop    esi
  412ed9:	pop    edx
  412eda:	mov    edi,0x429ab3b6
  412edf:	sbb    DWORD PTR [ecx],eax
  412ee1:	mov    DWORD PTR [esi+0x4cba21c8],ebx
  412ee7:	or     esp,esi
  412ee9:	sub    BYTE PTR [ebx+0x66],0x14
  412eed:	dec    esp
  412eee:	out    dx,al
  412eef:	ja     0x412ec3
  412ef1:	cld    
  412ef2:	div    BYTE PTR [edx]
  412ef4:	fadd   QWORD PTR [esi]
  412ef6:	lock mov al,0x41
  412ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412efa:	fdiv   DWORD PTR [ecx]
  412efc:	mov    bh,0xdc
  412efe:	add    dh,al
  412f00:	iret   
  412f01:	pop    ss
  412f02:	in     al,dx
  412f03:	or     DWORD PTR [edi+0x41123ecc],ecx
  412f09:	mov    eax,0xf010a590
  412f0e:	iret   
  412f0f:	pushf  
  412f10:	adc    al,0xe3
  412f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f13:	jp     0x412ef5
  412f15:	or     DWORD PTR [edi+0x29447555],0x2c
  412f1c:	mov    edi,0x5bf8b01b
  412f21:	pop    edi
  412f22:	fdiv   DWORD PTR [ebp+0x7f]
  412f25:	and    al,0xca
  412f27:	pop    esi
  412f28:	outs   dx,DWORD PTR ds:[esi]
  412f29:	shr    eax,0x21
  412f2c:	cmp    DWORD PTR [edx],0x3253b432
  412f32:	out    dx,eax
  412f33:	jb     0x412ebc
  412f35:	mov    esp,0x1d50d78
  412f3a:	dec    edx
  412f3b:	mov    ah,0x68
  412f3d:	in     eax,0x32
  412f3f:	jae    0x412ed6
  412f41:	pusha  
  412f42:	mov    esp,0x18dec3a4
  412f47:	push   esi
  412f48:	mov    eax,0x8ead3500
  412f4d:	jge    0x412f97
  412f4f:	and    edi,DWORD PTR [ebp-0x3e3c4c95]
  412f55:	xchg   ebp,eax
  412f56:	xchg   edi,eax
  412f57:	ret    0x3197
  412f5a:	stos   DWORD PTR es:[edi],eax
  412f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f5c:	test   DWORD PTR [eax],edi
  412f5e:	call   0x2d97:0xe1cd5d6c
  412f65:	sbb    al,0xbc
  412f67:	adc    edx,eax
  412f69:	mov    dh,0x40
  412f6b:	mov    ebp,0x1a3fae81
  412f70:	push   cs
  412f71:	mov    eax,esi
  412f73:	pop    ds
  412f74:	jecxz  0x412fab
  412f76:	stc    
  412f77:	xchg   BYTE PTR [esp+edi*2],bl
  412f7a:	xor    BYTE PTR [eax+0x64],0x4a
  412f7e:	retf   
  412f7f:	mov    ah,BYTE PTR [ebp-0x13]
  412f82:	lods   al,BYTE PTR ds:[esi]
  412f83:	pop    ecx
  412f84:	pop    esp
  412f85:	aam    0x17
  412f87:	pop    ebp
  412f88:	aas    
  412f89:	mov    esi,es
  412f8b:	or     al,0xd4
  412f8d:	jo     0x412f30
  412f8f:	mov    edx,0x75c89c17
  412f94:	dec    edx
  412f95:	test   DWORD PTR [edx-0x6e],esp
  412f98:	sahf   
  412f99:	loop   0x412fdc
  412f9b:	mov    esi,0xca5e12eb
  412fa0:	push   esi
  412fa1:	daa    
  412fa2:	adc    ebx,DWORD PTR [edx]
  412fa4:	xchg   DWORD PTR [edi-0x4d],ecx
  412fa7:	or     al,0x2e
  412fa9:	sar    BYTE PTR [ecx-0x658a46c3],cl
  412faf:	cmp    eax,0x9a398e64
  412fb4:	mov    ebx,0xbe2a50a1
  412fb9:	pop    eax
  412fba:	sub    DWORD PTR [ecx],ebx
  412fbc:	add    al,0x85
  412fbe:	or     eax,0x987c73d0
  412fc3:	cmp    BYTE PTR [esp+ebx*2+0x4e],dl
  412fc7:	jae    0x412f61
  412fc9:	cwde   
  412fca:	fisub  WORD PTR [ecx-0x90793c]
  412fd0:	and    dl,BYTE PTR [ebx+0x6717ec83]
  412fd6:	push   0xd97d6e0d
  412fdb:	xchg   BYTE PTR [ecx-0x3b],cl
  412fde:	pop    ss
  412fdf:	add    eax,0x4a8df1ed
  412fe4:	adc    bh,0xb9
  412fe7:	clc    
  412fe8:	jmp    0x7121:0xd6a51bdc
  412fef:	stos   BYTE PTR es:[edi],al
  412ff0:	inc    ebx
  412ff1:	adc    DWORD PTR [ecx],esi
  412ff3:	xor    dl,BYTE PTR [ecx]
  412ff5:	pop    esp
  412ff6:	int    0xce
  412ff8:	pushf  
  412ff9:	push   ecx
  412ffa:	div    DWORD PTR [esi]
  412ffc:	outs   dx,DWORD PTR ds:[esi]
  412ffd:	and    al,0xe7
  412fff:	pop    eax
  413000:	mov    ecx,0xde158bdc
  413005:	sbb    DWORD PTR [ebx+edx*1-0xf],edi
  413009:	jmp    0x413002
  41300b:	lods   al,BYTE PTR ds:[esi]
  41300c:	inc    BYTE PTR [esi]
  41300e:	xchg   esi,eax
  41300f:	or     bl,ch
  413011:	cmp    BYTE PTR [ecx-0x64200400],bl
  413017:	sahf   
  413018:	xor    al,0xb0
  41301a:	pop    ds
  41301b:	sbb    al,0x58
  41301d:	add    al,0x61
  41301f:	cdq    
  413020:	sti    
  413021:	out    0xc3,eax
  413023:	sbb    BYTE PTR [edx+0x69],ah
  413026:	mov    edx,0xa82cd08e
  41302b:	call   FWORD PTR [ebp+0x721be8dd]
  413031:	add    BYTE PTR [ecx],ch
  413033:	and    al,0x52
  413035:	popf   
  413036:	mov    edi,ebx
  413038:	lods   al,BYTE PTR ds:[esi]
  413039:	sub    al,0xa3
  41303b:	or     BYTE PTR [esi],0x55
  41303e:	xchg   ecx,eax
  41303f:	aas    
  413040:	mov    bl,BYTE PTR [ecx+0x2b]
  413043:	ret    0x920d
  413046:	in     eax,0x60
  413048:	je     0x4130a1
  41304a:	push   edi
  41304b:	sbb    BYTE PTR [ecx+eiz*1-0x2ee17eea],cl
  413052:	lock scas eax,DWORD PTR es:[edi]
  413054:	add    ah,BYTE PTR [ecx]
  413056:	fsub   st,st(3)
  413058:	repz dec ebx
  41305a:	icebp  
  41305b:	push   esi
  41305c:	push   0x4
  41305e:	add    BYTE PTR [ebx+0x3903f5bc],dl
  413064:	es cwde 
  413066:	xor    eax,0x44832fc0
  41306b:	xor    al,0x3b
  41306d:	call   0xfe3f:0x49934dd7
  413074:	scas   eax,DWORD PTR es:[edi]
  413075:	call   0xba98:0xd677bd09
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	test   eax,0x6ed056a9
  413082:	push   ebx
  413083:	imul   esp,esp,0xffffff97
  413086:	lea    ebx,cs:[ecx+edi*1]
  41308a:	and    eax,DWORD PTR [eax-0x62f626f2]
  413090:	inc    esi
  413091:	loopne 0x4130d0
  413093:	mov    edi,0xc7362650
  413098:	repz push edi
  41309a:	stc    
  41309b:	jp     0x413042
  41309d:	sbb    eax,0x8fec2c70
  4130a2:	out    dx,al
  4130a3:	imul   DWORD PTR [ecx+ecx*8+0x51551e0f]
  4130aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ac:	push   es
  4130ad:	das    
  4130ae:	or     eax,0x54cb9fed
  4130b3:	sbb    al,ah
  4130b5:	ret    0x601a
  4130b8:	in     al,0xa3
  4130ba:	pop    ebx
  4130bb:	jmp    0x7bc8d93c
  4130c0:	sub    al,bl
  4130c2:	push   ebp
  4130c3:	pop    esi
  4130c4:	cmp    al,0x8e
  4130c6:	jnp    0x413050
  4130c8:	jp     0x41311c
  4130ca:	mov    ah,0x76
  4130cc:	cmp    eax,0xdd11b123
  4130d1:	jmp    0xa0ad4e39
  4130d6:	fisub  DWORD PTR [edx+esi*2]
  4130d9:	jmp    0x9fb1:0x73e82e33
  4130e0:	pop    eax
  4130e1:	out    dx,eax
  4130e2:	(bad)  
  4130e3:	call   FWORD PTR ds:0x320ae568
  4130e9:	ja     0x41308a
  4130eb:	out    0xc2,eax
  4130ed:	ja     0x41310d
  4130ef:	xchg   ebx,eax
  4130f0:	rcl    BYTE PTR [edx-0x49],1
  4130f3:	inc    esi
  4130f4:	jmp    0x84b1:0xf5730c45
  4130fb:	dec    ecx
  4130fc:	(bad)  
  4130fd:	(bad)  [esp+eax*4-0x5f8d02fc]
  413104:	cli    
  413105:	dec    edx
  413106:	xchg   edx,eax
  413107:	(bad)  [esp+ebx*8-0x5a3794ce]
  41310e:	xor    dl,bh
  413110:	or     DWORD PTR [esi+0x15],0x50166405
  413117:	cmp    DWORD PTR [ecx],eax
  413119:	cmp    dl,BYTE PTR [eax+0x3090986d]
  41311f:	dec    esp
  413120:	aam    0x5
  413122:	add    BYTE PTR [ebx+ecx*2],ch
  413125:	cmp    BYTE PTR [eax+0xaa9a829],dh
  41312b:	push   cs
  41312c:	(bad)  
  41312d:	adc    DWORD PTR [ebx-0x7d],esp
  413130:	cs pop ecx
  413132:	adc    al,0xe7
  413134:	jo     0x4130c4
  413136:	test   eax,0x42ab80d
  41313b:	pop    esi
  41313c:	xchg   DWORD PTR [ecx-0xa13a831],edi
  413142:	test   DWORD PTR [edx-0xc],esi
  413145:	pop    edi
  413146:	jl     0x41313a
  413148:	lock inc esp
  41314a:	dec    eax
  41314b:	ficom  WORD PTR [edi+0x7c99aba8]
  413151:	and    eax,0x4a0b52cf
  413156:	pop    esp
  413157:	in     al,dx
  413158:	leave  
  413159:	pop    es
  41315a:	sbb    dl,dh
  41315c:	pavgb  mm1,QWORD PTR [ebx+ebp*2+0x2137315]
  413164:	cmovo  edx,DWORD PTR [esi]
  413167:	stc    
  413168:	sar    BYTE PTR [esp-0x43],0xf8
  41316d:	xchg   ebx,eax
  41316e:	inc    esi
  41316f:	test   eax,0x68f0f045
  413174:	inc    edx
  413175:	mov    eax,0xa244dff
  41317a:	push   ds
  41317b:	sub    al,0x71
  41317d:	popf   
  41317e:	in     al,dx
  41317f:	push   eax
  413180:	mov    BYTE PTR [ebp-0x75f41f26],al
  413186:	dec    esp
  413187:	add    ch,BYTE PTR [edi]
  413189:	les    ebx,FWORD PTR [ebp-0x59]
  41318c:	cdq    
  41318d:	jne    0x413194
  41318f:	test   DWORD PTR [edx+0x4b2c7eb4],ecx
  413195:	jae    0x413176
  413197:	mov    WORD PTR [ebp-0x320a6d0c],?
  41319d:	push   esp
  41319e:	mov    eax,ds:0x40ed23ae
  4131a3:	push   0x2122891a
  4131a8:	fdivr  st(1),st
  4131aa:	cs mov edx,0x2f89952e
  4131b0:	test   esp,0x91027668
  4131b6:	ret    
  4131b7:	mov    esi,0xefb30306
  4131bc:	mov    edx,0x215549bc
  4131c1:	sbb    al,0xf1
  4131c3:	(bad)  
  4131c5:	cmp    bh,ah
  4131c7:	adc    BYTE PTR [edx],bh
  4131c9:	in     al,0x1c
  4131cb:	cmp    eax,0xaeea082a
  4131d0:	sub    dl,BYTE PTR [ebx+0x75]
  4131d3:	sub    eax,DWORD PTR [esi+0x61a573f9]
  4131d9:	pop    eax
  4131da:	mov    edi,0xb9eb040f
  4131df:	jp     0x4131be
  4131e1:	pop    eax
  4131e2:	sub    al,0x45
  4131e4:	sbb    DWORD PTR [edx+0x7d],ecx
  4131e7:	lahf   
  4131e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e9:	shl    DWORD PTR [edx+0x47c36e52],0xc9
  4131f0:	xor    DWORD PTR [eax],esp
  4131f2:	clc    
  4131f3:	cld    
  4131f4:	cli    
  4131f5:	loopne 0x413239
  4131f7:	sub    eax,0x6c356df8
  4131fc:	fsin   
  4131fe:	xor    al,0x74
  413200:	out    dx,al
  413201:	ret    0xb4f8
  413204:	mov    ebx,0xea51fa08
  413209:	loope  0x41323c
  41320b:	loopne 0x4131e6
  41320d:	call   0x899:0xb9cb2e
  413214:	xchg   esp,eax
  413215:	jmp    0x69c9:0xc40ff2d0
  41321c:	jb     0x4131a7
  41321e:	mov    eax,ds:0x689e1ce
  413223:	repnz sbb esi,esi
  413226:	dec    edi
  413227:	inc    edx
  413228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413229:	mov    eax,ds:0x65b02fe7
  41322e:	fdivrp st(6),st
  413230:	in     al,dx
  413231:	pop    edx
  413232:	rol    DWORD PTR [eax+0x693aeb02],0x79
  413239:	fist   DWORD PTR [esp+ebx*1+0x4a]
  41323d:	push   0x70afa988
  413242:	in     eax,dx
  413243:	pop    esi
  413244:	stos   BYTE PTR es:[edi],al
  413245:	shr    ebx,0x29
  413248:	mov    eax,ds:0xd22a1840
  41324d:	aam    0x9b
  41324f:	adc    eax,0x793a2864
  413254:	in     eax,0x6d
  413256:	fimul  WORD PTR [esi]
  413258:	jb     0x413261
  41325a:	int3   
  41325b:	push   ebp
  41325c:	js     0x41323d
  41325e:	fimul  WORD PTR [esi-0x1c498b6c]
  413264:	stos   BYTE PTR es:[edi],al
  413265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413266:	add    eax,DWORD PTR [edi+0x35]
  413269:	push   edi
  41326a:	leave  
  41326b:	jb     0x4132bb
  41326d:	scas   al,BYTE PTR es:[edi]
  41326e:	fild   DWORD PTR [ebp-0x79]
  413271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413272:	mov    dh,0xcd
  413274:	xchg   edi,eax
  413275:	and    DWORD PTR [esi-0x2a],edi
  413278:	or     ecx,DWORD PTR [ebx]
  41327a:	es lock mov dl,0x15
  41327e:	retf   0x24e5
  413281:	adc    eax,0xa9efae81
  413286:	int3   
  413287:	aas    
  413288:	pop    eax
  413289:	popf   
  41328a:	dec    ebx
  41328b:	push   ecx
  41328c:	and    BYTE PTR [edi+0x13],0xba
  413290:	mov    ?,WORD PTR [esi]
  413292:	xchg   ebx,eax
  413293:	(bad)  
  413294:	sub    edi,DWORD PTR [edx]
  413296:	inc    ebx
  413297:	push   ss
  413298:	pushf  
  413299:	jle    0x413293
  41329b:	pop    edx
  41329c:	imul   esi,DWORD PTR [edx-0x34d255b0],0x288e7e9c
  4132a6:	inc    ecx
  4132a7:	outs   dx,DWORD PTR ds:[esi]
  4132a8:	mov    ch,0xcf
  4132aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ab:	mov    ebp,ds
  4132ad:	aam    0x61
  4132af:	mov    al,BYTE PTR [edi+0x19f4f5bd]
  4132b5:	aad    0xe8
  4132b7:	sub    al,0x5b
  4132b9:	mov    bl,0x60
  4132bb:	and    esi,DWORD PTR [ebp*8+0x3da56f5]
  4132c2:	pop    DWORD PTR [esi]
  4132c4:	fmul   QWORD PTR [ebp+0x7ea55e19]
  4132ca:	or     DWORD PTR [ebx],ebx
  4132cc:	ret    0x1019
  4132cf:	mov    ah,0x3e
  4132d1:	mov    bh,0x3b
  4132d3:	je     0x4132a3
  4132d5:	mov    ebp,eax
  4132d7:	mov    ch,0x56
  4132d9:	sub    DWORD PTR ds:0xb7822c17,ebp
  4132df:	jle    0x4132de
  4132e1:	inc    ebx
  4132e2:	dec    ebp
  4132e3:	cdq    
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	cld    
  4132e6:	sub    ebp,eax
  4132e8:	sbb    al,0x14
  4132ea:	bnd je 0x413279
  4132ed:	imul   ebp,esi,0x362cef6e
  4132f3:	test   eax,0xc32c8663
  4132f8:	xchg   edi,eax
  4132f9:	mov    edi,0x78a13aa9
  4132fe:	sbb    al,0x29
  413300:	pop    ecx
  413301:	fucompp 
  413303:	or     BYTE PTR [esi],ah
  413305:	lods   eax,DWORD PTR ds:[esi]
  413306:	aas    
  413307:	daa    
  413308:	xchg   DWORD PTR [edx-0x7],esi
  41330b:	sar    DWORD PTR [ebx],cl
  41330d:	test   al,0x3a
  41330f:	sbb    al,0x6c
  413311:	pop    eax
  413312:	loope  0x4132cc
  413314:	imul   ah
  413316:	leave  
  413317:	sbb    eax,0x4ffd94e4
  41331c:	mov    eax,DWORD PTR [edx-0x7f1df635]
  413322:	push   0x18803468
  413327:	pop    ebx
  413328:	nop
  413329:	test   BYTE PTR [ebx+eiz*2+0x3beb76ab],bh
  413330:	inc    edi
  413331:	ins    DWORD PTR es:[edi],dx
  413332:	jge    0x413323
  413334:	imul   esi,DWORD PTR [edi],0x67
  413337:	(bad)  
  413338:	pop    ss
  413339:	and    eax,esi
  41333b:	cmp    DWORD PTR [ebp+0x180d08e4],eax
  413341:	fcom   QWORD PTR [eax-0x66]
  413344:	in     al,0x65
  413346:	push   ds
  413347:	inc    ecx
  413348:	adc    BYTE PTR [ebx+0x2f2d209f],ch
  41334e:	enter  0x8443,0x5a
  413352:	mov    gs,ebx
  413354:	xor    eax,0xd674fc6e
  413359:	add    DWORD PTR [edi+ebx*8-0x7],edx
  41335d:	(bad)  
  41335e:	lds    ebx,FWORD PTR [esi]
  413360:	push   cs
  413361:	fs xchg ebp,eax
  413363:	jmp    0x7a42:0xc3be82ea
  41336a:	cmp    DWORD PTR [edi-0x75],edx
  41336d:	push   edi
  41336e:	popf   
  41336f:	sub    ecx,DWORD PTR [edx]
  413371:	stc    
  413372:	shl    bh,cl
  413374:	fwait
  413375:	jl     0x413370
  413377:	(bad)  
  413379:	imul   edx,DWORD PTR [ecx],0x6d
  41337c:	frstor [edi+0x63543d39]
  413382:	pop    ss
  413383:	popa   
  413384:	mov    ecx,0x59f6d8f4
  413389:	mov    ds:0x3b725e10,eax
  41338e:	pop    esp
  41338f:	or     al,0xaa
  413391:	mov    eax,0xe306c44
  413396:	push   eax
  413397:	int3   
  413398:	and    edx,eax
  41339a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339b:	mov    esi,0x490b7f7d
  4133a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a1:	hlt    
  4133a2:	cs stos DWORD PTR es:[edi],eax
  4133a4:	jnp    0x4133e4
  4133a6:	sub    BYTE PTR [ebx+edi*1+0xde65d36],al
  4133ad:	inc    edi
  4133ae:	(bad)
  4133b2:	(bad)  
  4133b3:	push   0xcac4dc7e
  4133b8:	aam    0xe5
  4133ba:	pop    esi
  4133bb:	adc    DWORD PTR [edi],edx
  4133bd:	sbb    DWORD PTR [ebx],0xffffff82
  4133c0:	aas    
  4133c1:	lods   eax,DWORD PTR ds:[esi]
  4133c2:	jecxz  0x4133e7
  4133c4:	mov    edx,ecx
  4133c6:	xor    al,0xbc
  4133c8:	pop    edi
  4133c9:	pop    ecx
  4133ca:	sbb    DWORD PTR [ebp-0x5ec2f4e5],esi
  4133d0:	pop    edi
  4133d1:	sub    al,0x51
  4133d3:	pop    ecx
  4133d4:	sub    DWORD PTR [eax],ecx
  4133d6:	mov    ecx,0xfecf54fb
  4133db:	mov    DWORD PTR [ebx+ecx*4+0x7b3d10fc],ebx
  4133e2:	fwait
  4133e3:	lods   al,BYTE PTR ds:[esi]
  4133e4:	inc    edx
  4133e5:	mov    ds,WORD PTR [eax+0xbdd79b7]
  4133eb:	inc    ebx
  4133ec:	mov    ecx,0xb3ba1fe7
  4133f1:	inc    esp
  4133f2:	nop
  4133f3:	out    0x98,eax
  4133f5:	jg     0x4133e8
  4133f7:	loope  0x413394
  4133f9:	cmp    cl,BYTE PTR [ecx]
  4133fb:	(bad)
  4133ff:	xor    eax,0xdf521784
  413404:	push   ecx
  413405:	shr    DWORD PTR [esp+edx*4+0x5d841faf],1
  41340c:	dec    eax
  41340d:	sub    DWORD PTR [edi-0x42],edi
  413410:	loope  0x4133fb
  413412:	gs push es
  413414:	push   ecx
  413415:	and    eax,0x62175491
  41341a:	jecxz  0x413484
  41341c:	std    
  41341d:	inc    ecx
  41341e:	cmc    
  41341f:	mov    DWORD PTR [ecx-0x2877b969],edi
  413425:	test   eax,0x3209a44c
  41342a:	inc    edi
  41342b:	add    ebx,DWORD PTR [ebx+0x2]
  41342e:	dec    esi
  41342f:	add    DWORD PTR [ebp-0x4c],0xffffff83
  413433:	sub    edi,esp
  413435:	or     BYTE PTR [edi+edx*4-0x22e92bf4],0x63
  41343d:	aam    0x62
  41343f:	div    DWORD PTR [edi]
  413441:	iret   
  413442:	push   es
  413443:	call   0xb9f8:0x8b6026e2
  41344a:	call   0xf4cc:0x7b5a6a9e
  413451:	cli    
  413452:	dec    ecx
  413453:	ja     0x413414
  413455:	dec    esp
  413456:	xchg   edi,eax
  413457:	xchg   esi,eax
  413458:	adc    al,0xcd
  41345a:	jecxz  0x4133ec
  41345c:	lods   eax,DWORD PTR ds:[esi]
  41345d:	mov    ds:0x2f00ddc9,eax
  413462:	or     ebp,ebx
  413464:	dec    edi
  413465:	pop    ds
  413466:	mov    ecx,ebp
  413468:	inc    eax
  413469:	rol    BYTE PTR [edi],cl
  41346b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346c:	sbb    eax,0xd655c901
  413471:	add    DWORD PTR [ebx-0x76],eax
  413474:	jb     0x4134ea
  413476:	popa   
  413477:	cld    
  413478:	in     al,0xf9
  41347a:	jae    0x4134e5
  41347c:	adc    ebx,DWORD PTR [edi]
  41347e:	add    al,0x94
  413480:	jp     0x41347f
  413482:	sub    ecx,esp
  413484:	cmp    ch,cl
  413486:	adc    bh,cl
  413488:	aad    0xa8
  41348a:	push   ebp
  41348b:	bound  edi,QWORD PTR [eax]
  41348d:	jmp    0x673c20b3
  413492:	pop    edi
  413493:	shl    BYTE PTR [edi+0x43],0xed
  413497:	dec    esp
  413498:	in     al,dx
  413499:	shl    BYTE PTR [ecx],0x18
  41349c:	(bad)  [ecx]
  41349e:	daa    
  41349f:	cmp    eax,0x3963ce7c
  4134a4:	hlt    
  4134a5:	cmp    DWORD PTR [edx+0xd45b7bd],esp
  4134ab:	out    0x38,al
  4134ad:	sub    DWORD PTR [ecx],esi
  4134af:	lahf   
  4134b0:	pusha  
  4134b1:	pop    ecx
  4134b2:	sbb    al,0x4f
  4134b4:	test   BYTE PTR [eax],dh
  4134b6:	jge    0x41347e
  4134b8:	dec    ecx
  4134b9:	fwait
  4134ba:	add    al,0x3a
  4134bc:	pop    edx
  4134bd:	mov    dh,0x7e
  4134bf:	push   edi
  4134c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134c1:	icebp  
  4134c2:	das    
  4134c3:	jge    0x413516
  4134c5:	int    0xe7
  4134c7:	out    0x15,al
  4134c9:	xchg   edx,eax
  4134ca:	out    0x1e,eax
  4134cc:	jae    0x41348b
  4134ce:	and    ebp,edx
  4134d0:	pusha  
  4134d1:	xchg   DWORD PTR [esi+0x63],edi
  4134d4:	(bad)  
  4134d6:	push   es
  4134d7:	inc    esi
  4134d8:	pop    esi
  4134d9:	loop   0x413475
  4134db:	and    DWORD PTR [esi+0x22],ebp
  4134de:	jg     0x413545
  4134e0:	stos   BYTE PTR es:[edi],al
  4134e1:	mov    ds:0x809bf80b,eax
  4134e6:	pusha  
  4134e7:	xor    ch,BYTE PTR [eax+ecx*1+0xca30861]
  4134ee:	(bad)  
  4134ef:	pop    ss
  4134f0:	test   DWORD PTR [ecx+0x11],edx
  4134f3:	out    0x5a,al
  4134f5:	xrelease xchg DWORD PTR [edi-0x25],ebp
  4134f9:	cmp    BYTE PTR [eax],cl
  4134fb:	push   cs
  4134fc:	jmp    0x8619:0x3f119d76
  413503:	data16 or dh,BYTE PTR [eax+0x24]
  413507:	cmp    eax,0xf3d1f1e0
  41350c:	bound  edi,QWORD PTR [ecx-0x22]
  41350f:	bound  ebp,QWORD PTR [edi+esi*4-0x59e07b69]
  413516:	inc    esp
  413517:	cmp    DWORD PTR es:[eax-0x98b8205],esp
  41351e:	dec    esi
  41351f:	pop    ebp
  413520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413521:	dec    edi
  413522:	outs   dx,DWORD PTR ds:[esi]
  413523:	inc    ebx
  413524:	fld    TBYTE PTR [esi+0x71]
  413527:	pop    eax
  413528:	pop    ecx
  413529:	stos   DWORD PTR es:[edi],eax
  41352a:	hlt    
  41352b:	or     edi,DWORD PTR [ecx-0x2b]
  41352e:	mov    ds:0x8c9dd853,al
  413533:	xchg   ecx,eax
  413534:	ins    BYTE PTR es:[edi],dx
  413535:	aad    0xb
  413537:	push   es
  413538:	and    esi,DWORD PTR [eax]
  41353a:	call   0xc72ed6a9
  41353f:	sub    DWORD PTR [eax+0x41],ecx
  413542:	push   esi
  413543:	pop    ecx
  413544:	xor    ebp,esi
  413546:	jno    0x4134eb
  413548:	inc    eax
  413549:	cmp    ah,BYTE PTR [ebp+ebp*2+0x2effa328]
  413550:	dec    edx
  413551:	mov    WORD PTR [ebp+0x6a],fs
  413554:	jne    0x4135cd
  413556:	adc    DWORD PTR [ebp-0x78],edx
  413559:	add    al,BYTE PTR [edx]
  41355b:	jge    0x413594
  41355d:	jmp    0x4135cd
  41355f:	jb     0x413545
  413561:	or     eax,0x53b74c1c
  413566:	inc    esp
  413567:	inc    ecx
  413568:	test   BYTE PTR [edi-0x24],ah
  41356b:	retf   
  41356c:	aaa    
  41356d:	iret   
  41356e:	add    eax,0x3de780f6
  413573:	mov    ebp,0xcbdd5a45
  413578:	jge    0x4135e9
  41357a:	pushf  
  41357b:	call   0x991f:0x451314c9
  413582:	cmp    ah,cl
  413584:	inc    ebp
  413585:	sub    al,0xa1
  413587:	pop    ebx
  413588:	xor    BYTE PTR [esi+0x2dd5060c],bh
  41358e:	pop    esi
  41358f:	aam    0xd8
  413591:	pop    es
  413592:	out    0xd9,al
  413594:	mov    edx,0xf35387d7
  413599:	jno    0x4135c2
  41359b:	sahf   
  41359c:	jg     0x413530
  41359e:	stos   DWORD PTR es:[edi],eax
  41359f:	inc    ebx
  4135a0:	xor    al,ch
  4135a2:	mov    ch,0xae
  4135a4:	out    dx,eax
  4135a5:	adc    bl,bh
  4135a7:	mov    bh,0x90
  4135a9:	jmp    0xacf188ee
  4135ae:	int    0x8c
  4135b0:	(bad)  
  4135b1:	push   esp
  4135b2:	push   ds
  4135b3:	call   0x8a38:0xf7ca9495
  4135ba:	in     eax,dx
  4135bb:	sahf   
  4135bc:	inc    ecx
  4135bd:	pop    esp
  4135be:	push   esi
  4135bf:	loope  0x413635
  4135c1:	rol    BYTE PTR [eax+0x48],0xff
  4135c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c6:	retf   0xb5fc
  4135c9:	xchg   dl,al
  4135cb:	cmp    bl,BYTE PTR [eax]
  4135cd:	inc    ebp
  4135ce:	sub    BYTE PTR [edi-0x25],0xdc
  4135d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135d3:	sbb    edx,ecx
  4135d5:	into   
  4135d6:	sub    al,0xa9
  4135d8:	popf   
  4135d9:	mov    ds:0x960abf27,eax
  4135de:	pop    ecx
  4135df:	xor    BYTE PTR cs:[ebp+ebx*1+0x3],cl
  4135e4:	pop    edx
  4135e5:	or     BYTE PTR ds:0x42a944ef,cl
  4135eb:	mov    bl,0x36
  4135ed:	shl    BYTE PTR [edx+edx*1],cl
  4135f0:	adc    DWORD PTR [ebx+0x56df4e86],0xffffffb3
  4135f7:	inc    ebx
  4135f8:	and    eax,0x15775675
  4135fd:	popf   
  4135fe:	jge    0x4135a9
  413600:	sbb    dl,ch
  413602:	inc    edi
  413603:	retf   0xcc30
  413606:	gs mov esp,0x835c7375
  41360c:	scas   al,BYTE PTR es:[edi]
  41360d:	(bad)  [eax-0x14]
  413610:	dec    ebx
  413611:	rcr    DWORD PTR [edi+0x61341a9f],cl
  413617:	das    
  413618:	inc    esp
  413619:	mul    BYTE PTR [ebp-0x5]
  41361c:	and    edi,ebx
  41361e:	(bad)  
  41361f:	inc    edi
  413620:	out    dx,al
  413621:	jns    0x413603
  413623:	fild   QWORD PTR [eax+0x4a]
  413626:	ret    
  413627:	int3   
  413628:	xor    edi,DWORD PTR [ebx]
  41362a:	xchg   edx,eax
  41362b:	push   0x4f
  41362d:	jge    0x4135cb
  41362f:	xchg   ecx,eax
  413630:	and    ah,ah
  413632:	sub    esi,ebp
  413634:	xor    ecx,DWORD PTR [eax-0x758b5250]
  41363a:	in     eax,dx
  41363b:	aas    
  41363c:	adc    edx,ebp
  41363e:	push   esi
  41363f:	fsub   DWORD PTR [edi-0x686ae327]
  413645:	cmc    
  413646:	(bad)  
  413647:	cld    
  413648:	xchg   esi,eax
  413649:	mov    eax,ds:0x90de332b
  41364e:	fsub   DWORD PTR [edx]
  413650:	xchg   ecx,eax
  413651:	sbb    al,0xbd
  413653:	fdivr  DWORD PTR [ecx+edx*8+0x241e7f90]
  41365a:	test   eax,0xe0b46018
  41365f:	sub    DWORD PTR [ebx],0xecff61ed
  413665:	and    esp,DWORD PTR [edi-0x4a53a14a]
  41366b:	out    0x34,al
  41366d:	push   0x5a
  41366f:	mov    eax,ebx
  413671:	lahf   
  413672:	adc    BYTE PTR [ebx],al
  413674:	dec    ebp
  413675:	adc    eax,0x1dd07eef
  41367a:	pop    ecx
  41367b:	adc    BYTE PTR [edi-0x22e0646d],ch
  413681:	fsubr  DWORD PTR [esi+ecx*1-0xb]
  413685:	imul   esp,DWORD PTR [esi+ebx*1+0x74],0x4f
  41368a:	adc    eax,0x5e138aea
  41368f:	push   ebp
  413690:	imul   ebx,DWORD PTR [ecx-0x51],0x4b
  413694:	or     cl,ch
  413696:	mov    ebx,0x20469e18
  41369b:	call   0x48daab67
  4136a0:	jbe    0x413672
  4136a2:	mov    esi,DWORD PTR [esi]
  4136a4:	sti    
  4136a5:	sub    al,0x32
  4136a7:	cli    
  4136a8:	push   edi
  4136a9:	imul   esi,DWORD PTR [ecx],0x6eff984
  4136af:	or     BYTE PTR [ebx-0x5a],0x1d
  4136b3:	inc    ebp
  4136b4:	inc    edx
  4136b5:	mov    ds:0x2ada7f1e,al
  4136ba:	aas    
  4136bb:	ja     0x4136fa
  4136bd:	cli    
  4136be:	xchg   ecx,eax
  4136bf:	in     al,0xe9
  4136c1:	mov    ebp,0xdca0b193
  4136c6:	pop    ds
  4136c7:	loopne 0x413697
  4136c9:	xor    ecx,esi
  4136cb:	dec    eax
  4136cc:	pusha  
  4136cd:	mov    dl,0x70
  4136cf:	adc    DWORD PTR [eax-0x6d],edi
  4136d2:	sub    eax,0xff6ad74e
  4136d7:	ss sub al,bh
  4136da:	sti    
  4136db:	nop
  4136dc:	adc    DWORD PTR [eax+0x1e891758],0x7c
  4136e3:	rcr    BYTE PTR [esi-0x7e],0x99
  4136e7:	mov    esp,0xca8a501a
  4136ec:	popf   
  4136ed:	xor    BYTE PTR [ebx+0x315cd1cd],bh
  4136f3:	push   0xffffffd9
  4136f5:	hlt    
  4136f6:	retf   
  4136f7:	push   edi
  4136f8:	lahf   
  4136f9:	add    ah,ch
  4136fb:	sub    ch,BYTE PTR [esi-0x6de8c89]
  413701:	test   BYTE PTR [eax-0x6bae4e7a],bl
  413707:	pop    ecx
  413708:	sub    edi,DWORD PTR [edi-0x4e6c046e]
  41370e:	(bad)  
  41370f:	fist   DWORD PTR [ecx+0x12]
  413712:	iret   
  413713:	mov    BYTE PTR [eax-0x71],ah
  413716:	dec    esi
  413717:	inc    edi
  413718:	sub    ebp,edx
  41371a:	push   edx
  41371b:	jle    0x4136ac
  41371d:	mov    cl,0x63
  41371f:	fadd   st(1),st
  413721:	int3   
  413722:	mov    edi,0xb35da3a1
  413727:	cmp    bh,ch
  413729:	adc    DWORD PTR [ecx-0x2d],ebp
  41372c:	es leave 
  41372e:	inc    eax
  41372f:	sub    al,0xa2
  413731:	inc    edi
  413733:	mov    dl,BYTE PTR [ebx-0x30e78beb]
  413739:	out    dx,al
  41373a:	sahf   
  41373b:	outs   dx,DWORD PTR ds:[esi]
  41373c:	or     BYTE PTR [edx-0x3b9f875e],ch
  413742:	fbstp  TBYTE PTR [edx+0x287fd83d]
  413748:	push   ebp
  413749:	cwde   
  41374a:	(bad)  
  41374c:	dec    esi
  41374d:	ret    0x6fec
  413750:	mov    edi,0x2310f805
  413755:	and    ah,BYTE PTR [ecx+0x27b4af10]
  41375b:	ins    BYTE PTR es:[edi],dx
  41375c:	cmp    cl,bl
  41375e:	cs ds hlt 
  413761:	loopne 0x41376b
  413763:	sbb    al,0xbc
  413765:	push   esi
  413766:	push   es
  413767:	mov    ?,WORD PTR [esi+0xd]
  41376a:	hlt    
  41376b:	jbe    0x4137d0
  41376d:	mov    ss,WORD PTR [ebp-0x2af84f84]
  413773:	pop    ebp
  413774:	aad    0xb8
  413776:	dec    ebp
  413777:	mov    ecx,0x3b14e793
  41377c:	mov    al,0x80
  41377e:	call   0x3682:0xb92765a5
  413785:	out    0xf9,al
  413787:	lods   eax,DWORD PTR ds:[esi]
  413788:	sub    al,0x9b
  41378a:	lods   al,BYTE PTR ds:[esi]
  41378b:	mov    ebx,0x32068e31
  413790:	imul   esi,DWORD PTR [ebx],0x7c391bde
  413796:	hlt    
  413797:	mov    esp,0xf4cb67fd
  41379c:	xor    ah,0x51
  41379f:	add    cl,BYTE PTR [edi+0x79a6ec12]
  4137a5:	clc    
  4137a6:	rcl    BYTE PTR [edx-0x74],0x5d
  4137aa:	dec    edx
  4137ab:	pop    es
  4137ac:	pop    eax
  4137ad:	push   0x231b6351
  4137b2:	mov    edx,0x6f1940b1
  4137b7:	retf   0x3560
  4137ba:	adc    esi,DWORD PTR [eax+edi*1-0x63]
  4137be:	sbb    BYTE PTR [ebx],dh
  4137c0:	cwde   
  4137c1:	xchg   DWORD PTR [eax+0x4f],ecx
  4137c4:	lahf   
  4137c5:	push   edi
  4137c6:	les    ebx,FWORD PTR [ebx+ebp*8]
  4137c9:	fadd   QWORD PTR [eax-0x27]
  4137cc:	shl    BYTE PTR [esi-0x3f],0x30
  4137d0:	pop    eax
  4137d1:	jbe    0x4137b4
  4137d3:	add    esi,DWORD PTR [esi]
  4137d5:	arpl   WORD PTR [edx+eiz*4-0x76702f8a],di
  4137dc:	jae    0x413791
  4137de:	outs   dx,DWORD PTR ds:[esi]
  4137df:	ffreep st(0)
  4137e1:	pop    edx
  4137e2:	stc    
  4137e3:	int3   
  4137e4:	or     al,0xa
  4137e6:	adc    DWORD PTR [edi],edx
  4137e8:	push   ss
  4137e9:	out    dx,al
  4137ea:	aad    0xd9
  4137ec:	daa    
  4137ed:	imul   esi,DWORD PTR [eax+0x67af65a5],0xcda1ce15
  4137f7:	jge    0x413841
  4137f9:	cmp    ebp,DWORD PTR [edi]
  4137fb:	imul   ebp,edi,0x69
  4137fe:	and    al,BYTE PTR [ebx+edx*4]
  413801:	pop    ds
  413802:	xlat   BYTE PTR ds:[ebx]
  413803:	xchg   edi,eax
  413804:	scas   eax,DWORD PTR es:[edi]
  413805:	loopne 0x41378e
  413807:	jne    0x4137e6
  413809:	pop    edi
  41380a:	cwde   
  41380b:	mov    edx,0x399bed86
  413810:	xlat   BYTE PTR ds:[ebx]
  413811:	pushf  
  413812:	sbb    DWORD PTR [ebp+ebx*2-0x7],ecx
  413816:	sar    DWORD PTR [ebx-0x78e5e17e],0x54
  41381d:	add    DWORD PTR [edx+0x7ccb617f],edx
  413823:	push   ecx
  413824:	sub    eax,0x588f07
  413829:	xchg   ebx,ebx
  41382b:	lds    ebp,FWORD PTR [edi-0x40ae7b02]
  413831:	or     BYTE PTR [eax+0x76],ah
  413834:	ds mov ecx,0xa341f525
  41383a:	sahf   
  41383b:	mov    BYTE PTR [esi-0x5b],bl
  41383e:	mov    ebx,0x44d9c08a
  413843:	pop    eax
  413844:	int3   
  413845:	xchg   ebp,eax
  413846:	dec    esp
  413847:	aad    0x4f
  413849:	mov    al,0x19
  41384b:	dec    esp
  41384c:	mov    BYTE PTR [ebp+0x1e],dl
  41384f:	xor    ecx,DWORD PTR [ecx+ebx*2-0x131556e7]
  413856:	sar    edi,cl
  413858:	mov    eax,0x14f8fb92
  41385d:	ds ret 0xae7a
  413861:	adc    al,0xa4
  413863:	dec    edi
  413864:	jae    0x4138a0
  413866:	(bad)  
  413867:	in     al,0x1b
  413869:	mov    ebp,0xff3c2f09
  41386e:	int3   
  41386f:	test   BYTE PTR [edi+0x74fde4d2],bl
  413875:	sub    dl,ah
  413877:	(bad)  
  413878:	lea    ebp,[edi+0x1bb1438b]
  41387e:	mov    edi,edx
  413880:	out    dx,eax
  413881:	outs   dx,DWORD PTR ds:[esi]
  413882:	push   ds
  413883:	jl     0x413825
  413885:	ror    BYTE PTR [eax-0x4b12b8ee],0x76
  41388c:	jo     0x413810
  41388e:	mov    ds:0xc58539b7,al
  413893:	sar    ch,0x65
  413896:	mov    ecx,0xc744772c
  41389b:	xor    ah,BYTE PTR [edx+0x5a]
  41389e:	mov    ch,0xa2
  4138a0:	loopne 0x4138a9
  4138a2:	stc    
  4138a3:	pop    ds
  4138a4:	call   0xc0280988
  4138a9:	outs   dx,DWORD PTR ds:[esi]
  4138aa:	in     eax,0xd3
  4138ac:	ret    0xcc69
  4138af:	inc    esp
  4138b0:	out    dx,ax
  4138b2:	and    ecx,DWORD PTR [esi-0x79]
  4138b5:	cmp    BYTE PTR [ebp+0x0],dh
  4138b8:	cmp    dh,BYTE PTR [edx+0xa4bbf68]
  4138be:	cmp    al,0xdc
  4138c0:	cmp    eax,DWORD PTR cs:[ebx+0x36]
  4138c4:	and    DWORD PTR [edi-0x4de69125],ebx
  4138ca:	or     esp,ecx
  4138cc:	dec    ebx
  4138cd:	lods   eax,DWORD PTR ds:[esi]
  4138ce:	lahf   
  4138cf:	fcomp  QWORD PTR ds:0x5b133a1a
  4138d5:	jae    0x413919
  4138d7:	jae    0x413911
  4138d9:	mov    ?,WORD PTR ds:0x586e90ce
  4138df:	mov    bl,0xcb
  4138e1:	sub    al,0x5c
  4138e3:	dec    esp
  4138e4:	xor    BYTE PTR [ecx],ch
  4138e6:	ret    
  4138e7:	es jecxz 0x4138fa
  4138ea:	adc    DWORD PTR [eax+0x1],edi
  4138ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ee:	out    0x37,eax
  4138f0:	xchg   DWORD PTR [esp+eax*8-0x270acad0],edi
  4138f7:	in     eax,0x6a
  4138f9:	xchg   edi,eax
  4138fa:	jmp    0x14bfed2a
  4138ff:	fiadd  WORD PTR [ebx]
  413901:	fs inc edi
  413903:	js     0x4138ea
  413905:	mov    bh,0x76
  413907:	int3   
  413908:	push   es
  413909:	and    bl,al
  41390b:	xchg   BYTE PTR [ecx],cl
  41390d:	xchg   ebp,eax
  41390e:	frstor [ebx+0x5499b686]
  413914:	push   esi
  413915:	stos   DWORD PTR es:[edi],eax
  413916:	sub    dh,BYTE PTR [esi]
  413918:	sbb    bh,ah
  41391a:	sbb    al,0x45
  41391c:	loop   0x4138f7
  41391e:	mov    dh,0x64
  413920:	jmp    0x63186cb7
  413925:	out    dx,al
  413926:	add    DWORD PTR [edi-0x5c681604],0x1f
  41392d:	or     ebp,DWORD PTR [eax]
  41392f:	adc    al,0x6c
  413931:	sar    BYTE PTR [esi],1
  413933:	outs   dx,DWORD PTR ds:[esi]
  413934:	(bad)  
  413936:	xchg   BYTE PTR [eax],dl
  413938:	enter  0x64e0,0x19
  41393c:	sub    eax,0x13ee7654
  413941:	inc    ebx
  413942:	cmc    
  413943:	lods   al,BYTE PTR ds:[esi]
  413944:	in     eax,dx
  413945:	icebp  
  413946:	lods   eax,DWORD PTR ds:[esi]
  413947:	ret    0xed0d
  41394a:	mov    esp,0x27edb490
  41394f:	xchg   ebx,eax
  413950:	out    0x2a,eax
  413952:	(bad)  
  413953:	lods   eax,DWORD PTR ds:[esi]
  413954:	or     eax,0x37d374a0
  413959:	test   DWORD PTR [esi-0x456042be],edx
  41395f:	xor    DWORD PTR [edx+0x3a26f9be],edx
  413965:	leave  
  413966:	stos   BYTE PTR es:[edi],al
  413967:	xor    dl,BYTE PTR [eiz*8-0x1819b9f9]
  41396e:	test   DWORD PTR [ecx+esi*4+0x48],0x4098a6cf
  413976:	dec    eax
  413977:	jbe    0x41392f
  413979:	call   0x24bf:0xd4d159c8
  413980:	add    BYTE PTR ds:0x12fb7dd9,0x7f
  413987:	pusha  
  413988:	jnp    0x41390c
  41398a:	icebp  
  41398b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41398c:	pop    ebp
  41398d:	repz enter 0xa91a,0x5a
  413992:	and    bl,BYTE PTR ds:0xda116afd
  413998:	mov    bh,0x15
  41399a:	dec    esp
  41399b:	inc    edx
  41399c:	lods   al,BYTE PTR ds:[esi]
  41399d:	out    0x4e,eax
  41399f:	fcmovb st,st(4)
  4139a1:	mov    al,0xef
  4139a3:	out    0x3a,eax
  4139a5:	add    esi,esi
  4139a7:	mov    bl,0x24
  4139a9:	mov    BYTE PTR [esi],bl
  4139ab:	inc    esp
  4139ac:	ss retf 0x311d
  4139b0:	int    0x13
  4139b2:	xchg   dx,ax
  4139b4:	ins    DWORD PTR es:[edi],dx
  4139b5:	scas   al,BYTE PTR es:[edi]
  4139b6:	mov    ah,0xd1
  4139b8:	fcomp  QWORD PTR [esi]
  4139ba:	aas    
  4139bb:	inc    esp
  4139bc:	scas   al,BYTE PTR es:[edi]
  4139bd:	fs gs xor eax,0x70f461ad
  4139c4:	(bad)  
  4139c5:	xor    BYTE PTR [edx+0x200ddc2d],al
  4139cb:	cwde   
  4139cc:	pop    eax
  4139cd:	xchg   esi,eax
  4139ce:	repz aad 0x8e
  4139d1:	xor    eax,0x5c6dbc19
  4139d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d7:	fst    st(0)
  4139d9:	fstp   QWORD PTR [eax+0x14]
  4139dc:	fisub  WORD PTR ds:0x5d801b61
  4139e2:	and    DWORD PTR [esi+0x3f],0x4
  4139e6:	int3   
  4139e7:	mov    ecx,0x42d5936c
  4139ec:	ds sbb BYTE PTR cs:[esp+ebp*2],bh
  4139f1:	lea    edi,[edx-0x37]
  4139f4:	mov    al,0xd7
  4139f6:	or     al,0x5f
  4139f8:	add    eax,DWORD PTR [esi-0x46a116f0]
  4139fe:	bound  ebp,QWORD PTR [edx+0x1ce56211]
  413a04:	sbb    DWORD PTR [ecx-0x53c1776f],ebp
  413a0a:	xchg   ebx,eax
  413a0b:	gs mov esi,0xfcc94706
  413a11:	push   cs
  413a12:	adc    al,BYTE PTR [eax]
  413a14:	dec    ecx
  413a15:	sbb    al,0x10
  413a17:	sub    dl,ch
  413a19:	xchg   edi,eax
  413a1a:	adc    eax,0x28111810
  413a1f:	cmp    al,BYTE PTR [edx-0x146dbdde]
  413a25:	test   BYTE PTR [edx+0x68],bh
  413a28:	dec    ebx
  413a29:	push   ss
  413a2a:	inc    edx
  413a2b:	mov    ecx,0x223447c4
  413a30:	mov    WORD PTR [edi],gs
  413a32:	fist   DWORD PTR [ebp+0x391bc5b2]
  413a38:	adc    dl,BYTE PTR [ebp+esi*1-0x26efbad1]
  413a3f:	shl    DWORD PTR [ebx+0x4e],1
  413a42:	aad    0x4c
  413a44:	jbe    0x413a91
  413a46:	clc    
  413a47:	fstp   QWORD PTR [eax]
  413a49:	or     eax,0x1bb3a44a
  413a4e:	sti    
  413a4f:	adc    ebp,DWORD PTR [edi+0x31]
  413a52:	inc    edi
  413a53:	stos   BYTE PTR es:[edi],al
  413a54:	pop    eax
  413a55:	test   eax,0xa53ec9ce
  413a5a:	mov    ebp,0x991996cb
  413a5f:	not    dl
  413a61:	ins    BYTE PTR es:[edi],dx
  413a62:	nop    DWORD PTR [ebp+0x1c434637]
  413a69:	xor    BYTE PTR [ecx-0x26b40b31],al
  413a6f:	adc    DWORD PTR [ebx+0x71],ecx
  413a72:	neg    DWORD PTR [eax]
  413a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a75:	mov    eax,ds:0x21589984
  413a7a:	mov    cl,0x40
  413a7c:	in     al,dx
  413a7d:	fcomp  DWORD PTR [ecx-0x7d]
  413a80:	in     eax,0xc0
  413a82:	(bad)  
  413a83:	test   al,0xc1
  413a85:	inc    ebx
  413a86:	xor    eax,0xd3d22fdf
  413a8b:	out    0x6b,eax
  413a8d:	xor    DWORD PTR [edx],edi
  413a8f:	mov    eax,ds:0xa255e4f7
  413a94:	test   eax,0x4ce30d54
  413a99:	push   esi
  413a9a:	cmp    BYTE PTR [edx-0xd],0xb5
  413a9e:	aaa    
  413a9f:	sbb    bl,al
  413aa1:	or     BYTE PTR [edx],ah
  413aa3:	push   es
  413aa4:	sar    BYTE PTR [ecx-0x70],0x8d
  413aa8:	rcr    BYTE PTR [esi+ebp*1+0x62],cl
  413aac:	jmp    0x69df44d
  413ab1:	pop    ds
  413ab2:	and    DWORD PTR [ebx-0x8],0xffffffa4
  413ab6:	sbb    ecx,esp
  413ab8:	mov    ebx,0xc2fa5701
  413abd:	fild   DWORD PTR [ebp-0x6c]
  413ac0:	cli    
  413ac1:	pop    edi
  413ac2:	rcl    DWORD PTR ds:0x181a9e27,cl
  413ac8:	push   edi
  413ac9:	dec    edi
  413aca:	cmp    DWORD PTR [edx+edi*2+0x6381a75d],esp
  413ad1:	cdq    
  413ad2:	fwait
  413ad3:	stos   BYTE PTR es:[edi],al
  413ad4:	lea    ecx,[esi]
  413ad6:	in     al,0x19
  413ad8:	jo     0x413a80
  413ada:	inc    ebp
  413adb:	ins    DWORD PTR es:[edi],dx
  413adc:	repnz int3 
  413ade:	aas    
  413adf:	test   al,0x49
  413ae1:	sub    esi,ebp
  413ae3:	fwait
  413ae4:	sub    BYTE PTR [ebp+0x1958be0c],0xdc
  413aeb:	outs   dx,BYTE PTR ds:[esi]
  413aec:	scas   al,BYTE PTR es:[edi]
  413aed:	sbb    dh,dl
  413aef:	pushf  
  413af0:	xchg   esp,eax
  413af1:	cmp    al,0xa2
  413af3:	cmp    dh,BYTE PTR [edx-0x716311a8]
  413af9:	xchg   al,dl
  413afb:	mov    ah,BYTE PTR [ecx-0x5341350]
  413b01:	and    eax,0x225ce3c6
  413b06:	xchg   ebp,eax
  413b07:	or     dh,bl
  413b09:	fdivp  st(5),st
  413b0b:	push   esi
  413b0c:	fstp   DWORD PTR [esi]
  413b0e:	sub    cl,BYTE PTR [ebp-0x549c4d9]
  413b14:	xchg   BYTE PTR [eax+eax*2+0xba3b657],ch
  413b1b:	(bad)  
  413b1d:	xchg   DWORD PTR [ebp+ecx*1-0x6c],esi
  413b21:	jecxz  0x413ab2
  413b23:	inc    edx
  413b24:	std    
  413b25:	pop    ebx
  413b26:	mov    ecx,0x9b1a6df0
  413b2b:	and    DWORD PTR [eax+0x67],esi
  413b2e:	ret    0x4c75
  413b31:	sbb    BYTE PTR [eax-0x71c5feea],cl
  413b37:	inc    esp
  413b38:	jge    0x413b3a
  413b3a:	stc    
  413b3b:	pop    es
  413b3c:	mov    ch,0xb2
  413b3e:	mov    ecx,0x85f641b6
  413b43:	aad    0x99
  413b45:	leave  
  413b46:	dec    edi
  413b47:	cli    
  413b48:	call   0xffeb343a
  413b4d:	jae    0x413b4c
  413b4f:	std    
  413b50:	icebp  
  413b51:	imul   edi,DWORD PTR [esi-0x48b69187],0xffffffd6
  413b58:	or     ah,BYTE PTR [eax]
  413b5a:	mov    cl,0x67
  413b5c:	pop    edx
  413b5d:	cli    
  413b5e:	jle    0x413b2e
  413b60:	fstp   DWORD PTR [edx]
  413b62:	in     eax,dx
  413b63:	lods   al,BYTE PTR ds:[esi]
  413b64:	leave  
  413b65:	xchg   DWORD PTR [ebx],ebp
  413b67:	hlt    
  413b68:	mov    edx,0xb8d3c7b5
  413b6d:	mov    al,0x46
  413b6f:	push   ebp
  413b70:	inc    BYTE PTR [bp+0x63]
  413b74:	(bad)  
  413b75:	jb     0x413b87
  413b77:	push   ebp
  413b78:	push   es
  413b79:	out    dx,eax
  413b7a:	wrmsr  
  413b7c:	icebp  
  413b7d:	ds mov dh,0xff
  413b80:	sbb    esp,DWORD PTR [edi+0x2e353cf]
  413b86:	mov    ebx,0xd39eede0
  413b8b:	popf   
  413b8c:	int3   
  413b8d:	and    al,0x4a
  413b8f:	cmp    BYTE PTR [esi+eax*1+0x2e019388],bl
  413b96:	mov    edx,eax
  413b98:	ffree  st(4)
  413b9a:	jo     0x413b62
  413b9c:	mov    bh,0xf7
  413b9e:	mov    al,0x53
  413ba0:	sbb    bl,BYTE PTR [edi+0x49]
  413ba3:	jbe    0x413b72
  413ba5:	aas    
  413ba6:	cli    
  413ba7:	or     BYTE PTR [eax],dl
  413ba9:	popf   
  413baa:	cli    
  413bab:	setno  cl
  413bae:	sub    al,0xed
  413bb0:	pop    esp
  413bb1:	sbb    ch,BYTE PTR [esi]
  413bb3:	mov    ebx,0x738391d8
  413bb8:	ret    
  413bb9:	xor    ah,bl
  413bbb:	xor    al,0x8c
  413bbd:	and    BYTE PTR [eax],0x28
  413bc0:	jmp    0xef0bfd64
  413bc5:	sahf   
  413bc6:	fiadd  DWORD PTR [esi+edx*8]
  413bc9:	push   edi
  413bca:	out    0x4c,eax
  413bcc:	pop    ecx
  413bcd:	pop    ebx
  413bce:	jns    0x413c3b
  413bd0:	adc    al,0x4e
  413bd3:	arpl   WORD PTR [edi-0x3a3d5f11],sp
  413bd9:	pop    ecx
  413bda:	add    eax,0xfb0c7fa4
  413bdf:	mov    BYTE PTR fs:[edx],dh
  413be2:	cs mov bh,0x79
  413be5:	push   ecx
  413be6:	aam    0xbc
  413be8:	or     al,0x74
  413bea:	or     eax,eax
  413bec:	pop    ecx
  413bed:	push   ebx
  413bee:	loopne 0x413c53
  413bf0:	and    BYTE PTR [ecx+0x7f211e99],dh
  413bf6:	pop    ecx
  413bf7:	ins    BYTE PTR es:[edi],dx
  413bf8:	clc    
  413bf9:	and    eax,edx
  413bfb:	jnp    0x413b9b
  413bfd:	xor    bl,BYTE PTR [edi+0x5996cc15]
  413c03:	pop    eax
  413c04:	dec    ecx
  413c05:	push   edx
  413c06:	test   al,0xd6
  413c08:	fst    st(4)
  413c0a:	xchg   BYTE PTR [ebp-0x6485f712],ch
  413c10:	stos   DWORD PTR es:[edi],eax
  413c11:	sub    bl,BYTE PTR [edi]
  413c13:	les    eax,FWORD PTR [edx-0x3e8372b5]
  413c19:	fdivr  st(5),st
  413c1b:	adc    DWORD PTR [ecx],edi
  413c1d:	adc    cl,ch
  413c1f:	jle    0x413bc1
  413c21:	daa    
  413c22:	scas   al,BYTE PTR es:[edi]
  413c23:	ja     0x413c1d
  413c25:	lods   al,BYTE PTR ds:[esi]
  413c26:	or     al,ah
  413c28:	dec    edx
  413c29:	fdiv   st,st(3)
  413c2b:	or     eax,0x192af500
  413c30:	cmp    DWORD PTR [ebx],ebp
  413c32:	sub    eax,DWORD PTR [eax]
  413c34:	(bad)  
  413c35:	fcomp  DWORD PTR [ecx-0x6ef62f96]
  413c3b:	xchg   BYTE PTR [ebx+0x22],ch
  413c3e:	call   0x9360:0x5bcbcd6d
  413c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c46:	xchg   edi,eax
  413c47:	(bad)  
  413c48:	sub    al,0xe
  413c4a:	xor    DWORD PTR [ebp-0xc3ade9d],ecx
  413c50:	mov    eax,0x65ee1440
  413c55:	pop    edx
  413c56:	cmp    dh,BYTE PTR [edx-0x1fbce701]
  413c5c:	add    al,0xa3
  413c5e:	add    esp,DWORD PTR [ebx+0x5ae03f4c]
  413c64:	lock ss and eax,0xa1b58074
  413c6b:	xlat   BYTE PTR ds:[ebx]
  413c6c:	jns    0x413c92
  413c6e:	aam    0xcd
  413c70:	push   es
  413c71:	lock fstp QWORD PTR [esi+0x5d]
  413c75:	xor    BYTE PTR [esi],al
  413c77:	and    bl,BYTE PTR [ecx]
  413c79:	shl    ebp,cl
  413c7b:	and    ah,bh
  413c7d:	or     ebp,edx
  413c7f:	xchg   DWORD PTR [edi+eiz*1-0x3e4d93c1],ebx
  413c86:	js     0x413c54
  413c88:	ja     0x413c5d
  413c8a:	fsubr  QWORD PTR [esi]
  413c8c:	mov    ds:0x30d2f976,eax
  413c91:	in     al,0xeb
  413c93:	add    al,0x60
  413c95:	pop    esp
  413c96:	cdq    
  413c97:	cmp    eax,0x31f2e694
  413c9c:	fcmovnbe st,st(6)
  413c9e:	xchg   ebp,eax
  413c9f:	sub    eax,0xe3df23b8
  413ca4:	pop    ds
  413ca5:	aas    
  413ca6:	rcr    BYTE PTR [esi+eax*4+0x52],cl
  413caa:	xchg   BYTE PTR [edi],bl
  413cac:	pop    ss
  413cad:	dec    ebx
  413cae:	xchg   ebx,eax
  413caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb0:	sbb    edi,DWORD PTR [eax]
  413cb2:	in     eax,0xf1
  413cb4:	push   ecx
  413cb5:	inc    ebp
  413cb6:	cmp    eax,0xba0c54cf
  413cbb:	and    esp,DWORD PTR [eax-0x5f211b66]
  413cc1:	in     eax,dx
  413cc2:	jl     0x413c9a
  413cc4:	js     0x413c68
  413cc6:	or     DWORD PTR [edx],0x6d
  413cc9:	jno    0x413ce4
  413ccb:	xor    dl,BYTE PTR [eax]
  413ccd:	mov    ah,BYTE PTR [edx+0x35bfccf8]
  413cd3:	sbb    al,0xad
  413cd5:	xchg   esi,eax
  413cd6:	inc    esi
  413cd7:	jg     0x413c5e
  413cd9:	adc    eax,0xda2acb4d
  413cde:	(bad)  
  413cdf:	lock dec eax
  413ce1:	push   ss
  413ce2:	cmp    esi,esp
  413ce4:	outs   dx,BYTE PTR ds:[esi]
  413ce5:	fdivp  st(2),st
  413ce7:	cld    
  413ce8:	jmp    0x86f0:0x3666aab2
  413cef:	pop    ebx
  413cf0:	inc    edx
  413cf1:	pop    edi
  413cf2:	or     ecx,ebp
  413cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf5:	stos   DWORD PTR es:[edi],eax
  413cf6:	sub    cl,BYTE PTR [ecx]
  413cf8:	or     DWORD PTR ds:0x354d646,ebx
  413cfe:	repnz add edi,edi
  413d01:	sub    DWORD PTR [edi+0x1e0c858b],edi
  413d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d08:	pop    eax
  413d09:	cwde   
  413d0a:	loope  0x413ccb
  413d0c:	cli    
  413d0d:	arpl   WORD PTR [ecx+0x5ba8bd24],di
  413d13:	and    eax,0x22351dcc
  413d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d1a:	adc    BYTE PTR [ebx+edx*1+0x291091f8],cl
  413d21:	cs jg  0x413d36
  413d24:	xchg   ebp,eax
  413d25:	bound  ecx,QWORD PTR [ebp+0x3f27c073]
  413d2b:	xchg   ecx,eax
  413d2c:	js     0x413d8c
  413d2e:	ret    0xb426
  413d31:	(bad)  
  413d33:	retf   
  413d34:	repnz aam 0x3e
  413d37:	push   eax
  413d38:	dec    ebx
  413d39:	frstor [eax+0x7c47f740]
  413d3f:	inc    esp
  413d40:	pop    ecx
  413d41:	jns    0x413db8
  413d43:	rcr    DWORD PTR [eax-0x46247c49],cl
  413d49:	std    
  413d4a:	std    
  413d4b:	and    bh,BYTE PTR [ecx]
  413d4d:	adc    eax,0xaa863b8a
  413d52:	push   esp
  413d53:	xor    eax,DWORD PTR [ecx]
  413d55:	dec    edx
  413d56:	jbe    0x413d52
  413d58:	test   DWORD PTR [ebx-0x7890322b],0xaa767178
  413d62:	push   ecx
  413d63:	add    ecx,DWORD PTR [ebx]
  413d65:	inc    edi
  413d66:	enter  0xe99b,0x65
  413d6a:	mov    BYTE PTR [ebx+ebx*1-0x3fe9a01a],dl
  413d71:	mov    ah,0xa7
  413d73:	data16 push si
  413d76:	call   0x6036:0x5a0e0bfd
  413d7d:	push   ds
  413d7e:	test   BYTE PTR [edx-0x7a],dh
  413d81:	mov    ds:0x32f6cd08,eax
  413d86:	pop    es
  413d87:	push   esp
  413d88:	shl    edx,0xcf
  413d8b:	sub    al,0x71
  413d8d:	jl     0x413d77
  413d8f:	push   0xf69c2854
  413d94:	mov    bh,ah
  413d96:	pop    ds
  413d97:	out    dx,eax
  413d98:	mov    edx,0x6696239f
  413d9d:	ret    0xffb2
  413da0:	mov    al,0x65
  413da2:	mov    ah,0x2f
  413da4:	jecxz  0x413dca
  413da6:	gs push edx
  413da8:	pop    ds
  413da9:	push   es
  413daa:	out    dx,eax
  413dab:	(bad)  
  413dac:	and    al,0xff
  413dae:	mov    ah,0x2c
  413db0:	and    al,0x33
  413db2:	jbe    0x413e1a
  413db4:	push   ds
  413db5:	adc    al,0x3b
  413db7:	sbb    ecx,DWORD PTR [ebx-0x5e]
  413dba:	dec    esi
  413dbb:	pop    esi
  413dbc:	inc    esi
  413dbd:	stos   BYTE PTR es:[edi],al
  413dbe:	pop    ebx
  413dbf:	dec    edx
  413dc0:	mov    eax,ds:0x82ce7ecd
  413dc5:	pop    ss
  413dc6:	aas    
  413dc7:	outs   dx,BYTE PTR ds:[esi]
  413dc8:	popa   
  413dc9:	nop
  413dca:	loope  0x413e28
  413dcc:	push   ebp
  413dcd:	ret    
  413dce:	in     al,dx
  413dcf:	sti    
  413dd0:	mov    ch,0xec
  413dd2:	push   0xe59383d
  413dd7:	test   BYTE PTR [edx],bh
  413dd9:	push   ss
  413dda:	xchg   esp,eax
  413ddb:	cmp    DWORD PTR [ebp-0x44095eff],eax
  413de1:	mov    ecx,0xe0bd0de3
  413de6:	rcl    bl,cl
  413de8:	mov    edi,0x8389a6d2
  413ded:	sbb    DWORD PTR [ebp-0x4f],ecx
  413df0:	sar    DWORD PTR [edx+0x2f],1
  413df3:	jge    0x413e26
  413df5:	(bad)  
  413df6:	xor    al,0x4
  413df8:	shl    eax,cl
  413dfa:	fs mov ebp,0x63790ab1
  413e00:	sub    edi,DWORD PTR [ecx+0x1e]
  413e03:	add    ecx,0x451ae22b
  413e09:	retf   
  413e0a:	and    edi,DWORD PTR [ebp-0x27]
  413e0d:	hlt    
  413e0e:	xor    ebp,DWORD PTR [ecx]
  413e10:	pop    edi
  413e11:	sbb    bl,BYTE PTR [edi]
  413e13:	inc    ebp
  413e14:	int3   
  413e15:	mov    ds:0xc423fdd9,eax
  413e1b:	jne    0x413dcc
  413e1d:	mov    al,0xc6
  413e1f:	fisubr WORD PTR [eax]
  413e21:	fadd   QWORD PTR [edi+0x24]
  413e24:	pop    edi
  413e25:	sahf   
  413e26:	dec    edi
  413e27:	mov    al,0x18
  413e29:	pop    ecx
  413e2a:	imul   edx,DWORD PTR [esi+0x63a702e],0xc8ddabc0
  413e34:	cmp    dh,BYTE PTR [ecx]
  413e36:	inc    ebx
  413e37:	sub    al,0x5d
  413e39:	jl     0x413e22
  413e3b:	(bad)  
  413e3c:	pop    edi
  413e3d:	dec    eax
  413e3e:	cwde   
  413e3f:	fisubr WORD PTR [esi-0x4a]
  413e42:	outs   dx,DWORD PTR ds:[esi]
  413e43:	call   0x9c1d:0x645644c3
  413e4a:	mov    dl,0x4c
  413e4c:	xchg   esp,eax
  413e4d:	lds    eax,FWORD PTR [ecx+0x60423deb]
  413e53:	jns    0x413e2c
  413e55:	jmp    0x413e65
  413e57:	sbb    eax,0xc16a15e7
  413e5c:	cmp    edi,edi
  413e5e:	(bad)  
  413e5f:	pushf  
  413e60:	nop
  413e61:	clc    
  413e62:	in     eax,0xe
  413e64:	or     al,0x24
  413e66:	arpl   WORD PTR [ebx+0x65d87512],si
  413e6c:	dec    ecx
  413e6d:	xor    eax,0xc30a4b39
  413e72:	push   es
  413e73:	stc    
  413e74:	nop
  413e75:	dec    ebp
  413e76:	cmp    BYTE PTR [edx-0x2f],ah
  413e79:	adc    eax,0x4c6fdf
  413e7e:	mov    ds:0x680430d3,eax
  413e83:	pop    ss
  413e84:	pop    esi
  413e85:	mov    ebp,0x33468e94
  413e8a:	adc    eax,0xa8a4881a
  413e8f:	cmp    DWORD PTR [esi+0x4a],esp
  413e92:	mov    ch,0x70
  413e94:	add    dh,dh
  413e96:	adc    bh,BYTE PTR [ebx+0x37c59bdd]
  413e9c:	xchg   ecx,eax
  413e9d:	jecxz  0x413f15
  413e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ea0:	fisubr WORD PTR [esi+0x456e69fa]
  413ea6:	xor    BYTE PTR [ebp-0x3eb45e2f],bh
  413eac:	sbb    BYTE PTR ds:0x3d7c3dbb,ch
  413eb2:	push   0x2a
  413eb4:	cmp    esp,DWORD PTR [ebx]
  413eb6:	pop    ss
  413eb7:	or     DWORD PTR [eax-0x3acfbb5b],esi
  413ebd:	into   
  413ebe:	add    al,0x28
  413ec0:	jmp    0xb975103f
  413ec5:	add    eax,DWORD PTR [edx]
  413ec7:	mov    ds:0x555b8c21,al
  413ecc:	pushf  
  413ecd:	fsub   DWORD PTR [ebp-0x5]
  413ed0:	aam    0x40
  413ed2:	and    ebp,DWORD PTR [eax+0x4b4ba0c2]
  413ed8:	jecxz  0x413e6e
  413eda:	ror    al,0xa8
  413edd:	fstp   DWORD PTR [edx+0x3b]
  413ee0:	ror    BYTE PTR [edi+0x1cda0829],1
  413ee6:	mov    bh,0x93
  413ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee9:	je     0x413ed2
  413eeb:	loop   0x413eec
  413eed:	push   esp
  413eee:	aam    0xa
  413ef0:	dec    edi
  413ef1:	in     eax,0xda
  413ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef4:	sub    DWORD PTR [ecx-0x13],ebp
  413ef7:	push   ecx
  413ef8:	jno    0x413f12
  413efa:	push   0x68
  413efc:	test   DWORD PTR [esi+0x117d3d63],ebp
  413f02:	(bad)  
  413f03:	and    DWORD PTR [ebp+0x2],eax
  413f06:	pusha  
  413f07:	pop    edx
  413f08:	(bad)  
  413f09:	scas   eax,DWORD PTR es:[edi]
  413f0a:	lea    eax,[esi]
  413f0c:	out    dx,ax
  413f0e:	pop    es
  413f0f:	jg     0x413f6e
  413f11:	(bad)  
  413f12:	das    
  413f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f14:	(bad)  
  413f15:	and    esi,DWORD PTR [ebx-0x7726c6a6]
  413f1b:	popa   
  413f1c:	shl    DWORD PTR [ebx-0x65],0x77
  413f20:	xchg   dl,dl
  413f22:	ja     0x413f50
  413f24:	cmp    DWORD PTR [ebp-0x13d5244b],edi
  413f2a:	fcomp  QWORD PTR [ebx-0x19]
  413f2d:	adc    al,0xc2
  413f2f:	bound  edi,QWORD PTR ds:0xa6d15adf
  413f35:	dec    ebx
  413f36:	add    bl,BYTE PTR [esi+0x4a1f3b0b]
  413f3c:	pop    esi
  413f3d:	cs push ebp
  413f3f:	call   0x123f7f8a
  413f44:	xchg   ecx,eax
  413f45:	leave  
  413f46:	mov    ds:0x82d9b364,al
  413f4b:	jne    0x413ed1
  413f4d:	push   esp
  413f4e:	call   0x49dd3613
  413f53:	inc    esp
  413f54:	jmp    0x87e9780f
  413f59:	int3   
  413f5a:	cld    
  413f5b:	mov    dh,0x8f
  413f5d:	cwde   
  413f5e:	and    edi,ebp
  413f60:	scas   eax,DWORD PTR es:[edi]
  413f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f62:	(bad)  
  413f63:	(bad)  
  413f64:	sub    ch,bh
  413f66:	test   eax,0xdc77caac
  413f6b:	mov    ch,0xf5
  413f6d:	xor    ebx,esp
  413f6f:	cs mov ah,0x1
  413f72:	jmp    0x413f09
  413f74:	das    
  413f75:	push   edx
  413f76:	push   ds
  413f77:	add    al,0xad
  413f79:	std    
  413f7a:	sahf   
  413f7b:	jb     0x413f2a
  413f7d:	mov    eax,ds:0x17e82c52
  413f82:	push   ebp
  413f83:	push   ecx
  413f84:	adc    BYTE PTR [eax-0x1d],bl
  413f87:	out    0xe3,al
  413f89:	jge    0x413f70
  413f8b:	out    dx,eax
  413f8c:	mov    eax,ds:0x702cd163
  413f91:	imul   BYTE PTR [edi]
  413f93:	dec    ecx
  413f94:	call   0x7ecf06da
  413f99:	xor    edx,edx
  413f9b:	push   eax
  413f9c:	pop    ebx
  413f9d:	dec    esi
  413f9e:	and    dh,BYTE PTR [ecx]
  413fa0:	adc    eax,0x352c1607
  413fa5:	inc    esp
  413fa6:	mov    esi,0xd8fca293
  413fab:	pop    esi
  413fac:	cld    
  413fad:	pop    edi
  413fae:	xor    dl,BYTE PTR [eax]
  413fb0:	and    eax,0x9c0728c9
  413fb5:	inc    ecx
  413fb6:	in     al,dx
  413fb7:	sbb    cl,ah
  413fb9:	and    edi,DWORD PTR ds:0x8d033478
  413fbf:	jmp    0xcda3:0xdf6e2ceb
  413fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc7:	push   edx
  413fc8:	out    dx,eax
  413fc9:	test   eax,0x16bf10f5
  413fce:	sti    
  413fcf:	or     edi,DWORD PTR [edx-0x61]
  413fd2:	and    al,0x59
  413fd4:	xor    eax,0xdabf4fee
  413fd9:	rcr    BYTE PTR [eax+edx*8-0x5e11bc21],1
  413fe0:	outs   dx,BYTE PTR ds:[esi]
  413fe1:	cmp    al,0x33
  413fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe4:	daa    
  413fe5:	lahf   
  413fe6:	jns    0x413fe7
  413fe8:	(bad)
  413feb:	jbe    0x414035
  413fed:	sub    bh,cl
  413fef:	inc    eax
  413ff0:	cli    
  413ff1:	sbb    edx,DWORD PTR [eax-0x46]
  413ff4:	stc    
  413ff5:	pop    ecx
  413ff6:	sbb    eax,0x9d088fb8
  413ffb:	xchg   edx,eax
  413ffc:	cmp    ebp,DWORD PTR [edi-0x3d1f9396]
  414002:	sub    eax,0x98590c7b
  414007:	jo     0x414008
  414009:	shl    DWORD PTR [edx],0x22
  41400c:	mov    bh,0xc5
  41400e:	pop    DWORD PTR [ebp-0x141b5b96]
  414014:	cmp    ebp,DWORD PTR [ebx-0x36376fad]
  41401a:	and    eax,0x5485e264
  41401f:	jnp    0x41400e
  414021:	arpl   WORD PTR [eax-0x32786403],bp
  414027:	repz pop esp
  414029:	sti    
  41402a:	sti    
  41402b:	out    dx,al
  41402c:	shr    BYTE PTR [esi],1
  41402e:	cmc    
  41402f:	int3   
  414030:	mov    ah,BYTE PTR [eax]
  414032:	cdq    
  414033:	dec    eax
  414034:	jl     0x4140b1
  414036:	cld    
  414037:	xor    BYTE PTR ds:0x823b47b3,dl
  41403d:	mov    ebp,0xddfb3afd
  414042:	pusha  
  414043:	ret    
  414044:	cld    
  414045:	popa   
  414046:	sbb    edi,esp
  414048:	jg     0x413ffc
  41404a:	xchg   esp,eax
  41404b:	enter  0x7209,0xf5
  41404f:	or     eax,0x1a5a08b0
  414054:	mov    esp,0xba3de76d
  414059:	push   ecx
  41405a:	mov    ch,0x9b
  41405c:	jg     0x4140bc
  41405e:	sub    DWORD PTR [esi],edi
  414060:	xchg   ebp,eax
  414061:	stos   DWORD PTR es:[edi],eax
  414062:	ins    BYTE PTR es:[edi],dx
  414063:	push   edx
  414064:	pop    edi
  414065:	or     dl,dh
  414067:	arpl   WORD PTR [ebx+0x4d],bx
  41406a:	inc    eax
  41406b:	(bad)  
  41406c:	out    dx,eax
  41406d:	(bad)  
  41406e:	push   ecx
  41406f:	ins    BYTE PTR es:[edi],dx
  414070:	mov    ecx,0x13d75ed7
  414075:	push   eax
  414076:	push   ss
  414077:	mul    esp
  414079:	dec    edx
  41407a:	cmp    eax,edi
  41407c:	fadd   QWORD PTR ds:0x672b3d04
  414082:	es push esi
  414084:	xchg   esp,ebx
  414086:	jle    0x414036
  414088:	push   ds
  414089:	sub    BYTE PTR [ebp+0x3c17f216],al
  41408f:	out    dx,al
  414090:	stos   BYTE PTR es:[edi],al
  414091:	sub    DWORD PTR [ebx-0x5245e56a],ebp
  414097:	mov    WORD PTR [edi+0x6c34324c],ds
  41409d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41409e:	out    dx,al
  41409f:	jnp    0x414069
  4140a1:	stos   DWORD PTR es:[edi],eax
  4140a2:	dec    eax
  4140a3:	cmp    al,0xb6
  4140a5:	push   0x38029c20
  4140aa:	jle    0x4140a7
  4140ac:	jg     0x4140e9
  4140ae:	pop    ebp
  4140af:	and    eax,ebx
  4140b1:	mov    ebp,0x1a752f6
  4140b6:	data16 fistp DWORD PTR [ecx]
  4140b9:	maskmovq mm0,mm6
  4140bc:	mov    al,ds:0xd7cad4ad
  4140c1:	xchg   dl,ah
  4140c3:	js     0x414098
  4140c5:	xor    BYTE PTR [ebx+0x2d],ch
  4140c8:	jbe    0x4140fe
  4140ca:	gs xchg edi,eax
  4140cc:	outs   dx,DWORD PTR ds:[esi]
  4140cd:	push   0x5e338aeb
  4140d2:	out    dx,eax
  4140d3:	retf   
  4140d4:	mov    esi,0xd0333211
  4140d9:	inc    edx
  4140da:	scas   al,BYTE PTR es:[edi]
  4140db:	jge    0x4140d0
  4140dd:	fsub   QWORD PTR [eax]
  4140df:	arpl   WORD PTR [edi+0x291f9e],ax
  4140e5:	jae    0x4140ae
  4140e7:	pop    eax
  4140e8:	mov    ecx,0x5c5a85b2
  4140ed:	int    0x13
  4140ef:	mov    edi,0xf946ad76
  4140f4:	call   0x2605:0xf930c297
  4140fb:	ins    DWORD PTR es:[edi],dx
  4140fc:	scas   al,BYTE PTR es:[edi]
  4140fd:	mov    eax,0x655e82ab
  414102:	ds jg  0x4140ec
  414105:	icebp  
  414106:	push   edx
  414107:	fstp   TBYTE PTR [edx+0x951f6b9]
  41410d:	inc    edx
  41410e:	add    DWORD PTR [ebp+0x71],ebx
  414111:	dec    ebp
  414112:	or     eax,0x51f93323
  414117:	xchg   esi,eax
  414118:	pop    ebx
  414119:	je     0x41411c
  41411b:	hlt    
  41411c:	jbe    0x414126
  41411e:	sub    al,0xf4
  414120:	add    BYTE PTR ds:0x97ac7835,0x58
  414127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414128:	push   eax
  414129:	addr16 das 
  41412b:	(bad)  
  41412c:	vpcmpeqd ymm6,ymm4,YMMWORD PTR [edx+ecx*8-0x51]
  414132:	and    DWORD PTR [esi-0x3d5cf5d1],edx
  414138:	pop    ds
  414139:	mov    ah,0xaa
  41413b:	(bad)  
  41413c:	jl     0x4140e1
  41413e:	jns    0x414171
  414140:	and    eax,0x909508a1
  414145:	inc    ebx
  414146:	pop    ecx
  414147:	mov    al,ds:0x2b501f90
  41414c:	test   eax,0x8a8fccc
  414151:	inc    esi
  414152:	dec    esi
  414153:	repnz cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414156:	sub    al,0x6e
  414158:	pop    ebx
  414159:	mov    edx,0x622fe022
  41415e:	(bad)  [eax+0x60]
  414161:	lods   al,BYTE PTR ds:[esi]
  414162:	pop    esp
  414163:	push   es
  414164:	cld    
  414165:	jo     0x414135
  414167:	jno    0x414165
  414169:	jmp    0x41412f
  41416b:	jp     0x41413c
  41416d:	loope  0x41417f
  41416f:	enter  0xcae6,0xf
  414173:	xsave  [ecx-0x68041d4f]
  41417a:	xor    eax,0x32d7cfdf
  41417f:	repz pop ebx
  414181:	add    eax,0xde828eee
  414186:	loop   0x41410a
  414188:	mov    WORD PTR [ebp-0x38e93549],es
  41418e:	pop    esp
  41418f:	xchg   esi,eax
  414190:	mov    bh,0x90
  414192:	mov    DWORD PTR [eax],eax
  414194:	cdq    
  414195:	das    
  414196:	retf   0xf748
  414199:	icebp  
  41419a:	sbb    BYTE PTR [ebx+ebp*1-0x52],cl
  41419e:	xchg   esi,eax
  41419f:	add    edi,esp
  4141a1:	in     eax,dx
  4141a2:	jno    0x4141a0
  4141a4:	cmp    BYTE PTR [ecx+0x34963d57],0x3d
  4141ab:	or     edx,edx
  4141ad:	clc    
  4141ae:	xor    DWORD PTR [edi+0x38335a14],ebp
  4141b4:	pop    esi
  4141b5:	push   ecx
  4141b6:	adc    bh,ah
  4141b8:	lods   eax,DWORD PTR ds:[esi]
  4141b9:	mov    ch,0x9
  4141bb:	imul   eax,DWORD PTR [ebx],0x3307aa66
  4141c1:	enterw 0x6342,0x77
  4141c6:	mov    edi,0xd88a0f82
  4141cb:	ret    
  4141cc:	pop    esp
  4141ce:	inc    eax
  4141cf:	xor    eax,DWORD PTR [eax-0x3b0384c3]
  4141d5:	out    0xac,al
  4141d7:	bnd jnp 0x41422b
  4141da:	sub    edi,DWORD PTR [eax]
  4141dc:	jno    0x414173
  4141de:	pop    ds
  4141df:	pop    ebx
  4141e0:	repnz xchg ebp,eax
  4141e2:	fisttp WORD PTR [eax]
  4141e4:	or     al,0xe4
  4141e6:	adc    DWORD PTR [edi+edx*4],ecx
  4141e9:	mov    gs,WORD PTR [ebp-0x42]
  4141ec:	pop    ss
  4141ed:	mov    ch,0x86
  4141ef:	pushf  
  4141f0:	xchg   bh,dl
  4141f2:	mov    edi,0x804e3d60
  4141f7:	jae    0x41421a
  4141f9:	mov    ebp,0xed657d61
  4141fe:	sub    BYTE PTR [edi+0x3d17a3ce],dl
  414204:	lock je 0x4141ef
  414207:	rcr    BYTE PTR ds:0x79f01075,cl
  41420d:	xchg   ebp,eax
  41420e:	fwait
  41420f:	lds    esp,FWORD PTR [edx+0xdd970b0]
  414215:	or     eax,0x505ae218
  41421a:	(bad)  
  41421b:	pusha  
  41421c:	mov    ah,0x5
  41421e:	xchg   edx,eax
  41421f:	mov    edx,DWORD PTR [esi+0x17]
  414222:	inc    ebp
  414223:	xchg   edi,eax
  414224:	aas    
  414225:	xchg   esp,eax
  414226:	retf   
  414227:	and    ecx,esp
  414229:	test   al,0xd3
  41422b:	pop    ss
  41422c:	div    DWORD PTR [ecx]
  41422e:	mov    ch,0xf6
  414230:	jne    0x41423b
  414232:	cdq    
  414233:	in     eax,dx
  414234:	xor    eax,0xf785acad
  414239:	dec    edi
  41423a:	retf   
  41423b:	add    eax,0xea8bec60
  414240:	iret   
  414241:	sbb    eax,edi
  414243:	sbb    al,0xa6
  414245:	sub    dh,BYTE PTR [ebx+eiz*4+0xa00f709]
  41424c:	stc    
  41424d:	mov    ds:0xa739bd73,al
  414252:	out    dx,al
  414253:	sbb    eax,0x3ffa30fd
  414258:	fadd   QWORD PTR [esi]
  41425a:	outs   dx,BYTE PTR ds:[esi]
  41425b:	xchg   ecx,eax
  41425c:	push   edi
  41425d:	cmp    eax,0xe1c0b01e
  414262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414263:	arpl   WORD PTR [edi],sp
  414265:	shl    BYTE PTR [esi+edx*2],0xd3
  414269:	pop    esi
  41426a:	mov    ds:0x92f5e27b,eax
  41426f:	dec    esi
  414270:	cmp    eax,0x1248c442
  414275:	and    edx,DWORD PTR [esi-0x49018b19]
  41427b:	ja     0x4142ef
  41427d:	mov    ebx,0xaf89236c
  414282:	sub    esi,DWORD PTR [esi]
  414284:	aaa    
  414285:	pop    ss
  414286:	sbb    eax,0xb0fbf919
  41428b:	loop   0x414252
  41428d:	jmp    0x1cdd35c0
  414292:	fwait
  414293:	mov    cl,0x3d
  414295:	xchg   esp,eax
  414296:	dec    ecx
  414297:	outs   dx,BYTE PTR cs:[esi]
  414299:	stos   BYTE PTR es:[edi],al
  41429a:	loopne 0x414295
  41429c:	js     0x41429d
  41429e:	in     eax,dx
  41429f:	or     eax,DWORD PTR [edx+0x3b8c8409]
  4142a5:	xchg   esi,eax
  4142a6:	aaa    
  4142a7:	into   
  4142a8:	mov    cl,bl
  4142aa:	mov    dh,0x94
  4142ac:	adc    BYTE PTR [edx],ah
  4142ae:	sub    ebx,ebp
  4142b0:	jecxz  0x41428a
  4142b2:	dec    ecx
  4142b3:	or     BYTE PTR [edi+0x28],al
  4142b6:	or     eax,DWORD PTR [ebx-0x6c]
  4142b9:	xchg   bh,ch
  4142bb:	psubusb mm5,mm2
  4142be:	bound  ebp,QWORD PTR [eax-0x3a]
  4142c1:	add    al,0xca
  4142c3:	cmp    eax,0xa1b34259
  4142c8:	add    al,0x1e
  4142ca:	popa   
  4142cb:	or     eax,0x8051f783
  4142d0:	repnz inc edx
  4142d2:	add    cl,BYTE PTR cs:[ebp-0x1c86eb9b]
  4142d9:	jno    0x41432f
  4142db:	leave  
  4142dc:	jne    0x4142bc
  4142de:	test   DWORD PTR [ebx-0x3a],edi
  4142e1:	ja     0x414339
  4142e3:	fisubr WORD PTR [ecx]
  4142e5:	lahf   
  4142e6:	xchg   ebp,eax
  4142e7:	pop    ecx
  4142e8:	push   0x85ab2351
  4142ed:	dec    esi
  4142ee:	fsubr  QWORD PTR [eax+edi*8]
  4142f1:	ret    0xfeb2
  4142f4:	mov    bh,0x72
  4142f6:	mov    eax,0xa9f34022
  4142fb:	dec    ebx
  4142fc:	jmp    0x5c67:0x9dce4110
  414303:	es sahf 
  414305:	xchg   ebp,eax
  414306:	or     al,0xb5
  414308:	into   
  414309:	mov    DWORD PTR [ebp-0x30d08c6a],edx
  41430f:	or     WORD PTR [ebx],di
  414312:	mov    bl,dl
  414314:	inc    esi
  414315:	inc    edx
  414316:	into   
  414317:	and    DWORD PTR [edi],edi
  414319:	inc    edi
  41431a:	out    dx,eax
  41431b:	loopne 0x4142f6
  41431d:	fistp  QWORD PTR [esi+0x19]
  414320:	cmp    edi,ebx
  414322:	xor    ecx,DWORD PTR ds:0xa8944180
  414328:	adc    eax,0x4b5b1608
  41432d:	out    dx,al
  41432e:	pop    esi
  41432f:	in     al,0x8c
  414331:	ss inc ecx
  414333:	push   ds
  414334:	sahf   
  414335:	test   eax,0xa567e07
  41433a:	repz mov ecx,0xab0bd2c5
  414340:	es adc al,0x8b
  414343:	das    
  414344:	jns    0x4142c9
  414346:	popf   
  414347:	push   ss
  414348:	scas   eax,DWORD PTR es:[edi]
  414349:	xchg   edi,eax
  41434a:	jae    0x4142e6
  41434c:	sbb    DWORD PTR [edx+eiz*4+0x58d23c10],ebp
  414353:	stos   DWORD PTR es:[edi],eax
  414354:	addr16 retf 
  414356:	push   ebp
  414357:	iret   
  414358:	cmp    ah,BYTE PTR [ebp+ebp*8+0x7b]
  41435c:	mov    al,0x19
  41435e:	mov    ebx,0xdb73a5fc
  414363:	ror    DWORD PTR [edi],cl
  414365:	jnp    0x4143cf
  414367:	or     bl,ch
  414369:	shl    BYTE PTR [ebx+edi*1-0x51],0xf8
  41436e:	push   es
  41436f:	inc    ebp
  414370:	sub    esi,ebp
  414372:	daa    
  414373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414374:	adc    DWORD PTR [edi-0x177edfac],esi
  41437a:	or     cl,BYTE PTR [ebp-0x9]
  41437d:	mov    edx,0xccf257fc
  414382:	xchg   ebx,eax
  414383:	sbb    cl,cl
  414385:	sbb    al,0x3e
  414387:	mov    esi,0xeaa565d4
  41438c:	cmp    esi,eax
  41438e:	fild   DWORD PTR [edi]
  414390:	int3   
  414391:	stos   DWORD PTR es:[edi],eax
  414392:	fs (bad) 
  414394:	enter  0x798e,0xe8
  414398:	mov    ch,0x5d
  41439a:	adc    al,0x14
  41439c:	and    ebx,DWORD PTR [eax-0x47]
  41439f:	xchg   edi,eax
  4143a0:	mov    DWORD PTR [eax-0x2c6f1511],edx
  4143a6:	pop    ecx
  4143a7:	retf   0x7aeb
  4143aa:	hlt    
  4143ab:	lea    ebx,[edx]
  4143ad:	enter  0xf34b,0xf7
  4143b1:	nop
  4143b2:	xchg   ebx,eax
  4143b3:	inc    ebp
  4143b4:	xor    BYTE PTR ds:0x9dce39e8,al
  4143ba:	adc    eax,DWORD PTR [esi+eax*2+0x5b]
  4143be:	gs and al,0xbe
  4143c1:	push   edi
  4143c2:	test   al,0xe4
  4143c4:	dec    eax
  4143c5:	int3   
  4143c6:	sub    DWORD PTR [ecx-0x4918cbb9],ecx
  4143cc:	lods   eax,DWORD PTR ds:[esi]
  4143cd:	mov    edx,0xf6a4001f
  4143d2:	xchg   ebp,eax
  4143d3:	in     al,dx
  4143d4:	and    al,0x30
  4143d6:	or     BYTE PTR [esi],al
  4143d8:	mov    WORD PTR [eax],ds
  4143da:	test   al,0x9f
  4143dc:	fs add al,0x4f
  4143df:	inc    esp
  4143e0:	loope  0x4143e4
  4143e2:	push   ebx
  4143e3:	xchg   ecx,eax
  4143e4:	xchg   edx,eax
  4143e5:	and    ebx,DWORD PTR [eax-0x3]
  4143e8:	lods   eax,DWORD PTR ds:[esi]
  4143e9:	and    ah,BYTE PTR [ebx-0x6c804c8a]
  4143ef:	jae    0x414384
  4143f1:	dec    eax
  4143f2:	xor    ebp,ebx
  4143f4:	xchg   edx,eax
  4143f5:	int    0xd9
  4143f7:	mov    ds:0x79fe8ac8,eax
  4143fc:	mov    bl,0x71
  4143fe:	mov    eax,ds:0xa4483dae
  414403:	call   0xbfd6:0x8247ba36
  41440a:	mov    ds,WORD PTR [esi+0x12771b0d]
  414410:	ret    
  414411:	fldcw  WORD PTR [esi]
  414413:	clc    
  414414:	pop    es
  414415:	inc    esi
  414416:	xor    edi,DWORD PTR [eax]
  414418:	and    BYTE PTR [ebp-0x5ed51fc8],cl
  41441e:	mov    bl,0x64
  414420:	call   0x38c63591
  414425:	pushf  
  414426:	mov    bh,0x81
  414428:	push   ds
  414429:	dec    ebx
  41442a:	cmp    eax,0x345ce1b0
  41442f:	jle    0x414467
  414431:	test   eax,0xd1672b70
  414436:	and    bh,cl
  414438:	push   ecx
  414439:	add    ah,cl
  41443b:	adc    edx,ecx
  41443d:	adc    al,0xeb
  41443f:	arpl   WORD PTR [esp+ecx*1+0x3b],si
  414443:	mov    cl,0xe9
  414445:	scas   eax,DWORD PTR es:[edi]
  414446:	add    ch,BYTE PTR ds:0x962bb540
  41444c:	lods   eax,DWORD PTR ds:[esi]
  41444d:	dec    eax
  41444e:	hlt    
  41444f:	icebp  
  414450:	cmp    DWORD PTR ds:0x3a6c2bb0,edi
  414456:	es xchg ebp,eax
  414458:	push   esi
  414459:	pop    edi
  41445a:	cmp    al,0xc6
  41445c:	shl    DWORD PTR [ebx],0xce
  41445f:	out    0xd9,al
  414461:	sub    ecx,DWORD PTR [edx+0x401fb329]
  414467:	mov    dl,0x5f
  414469:	cmp    DWORD PTR [edi+edi*4+0x51],0xebc1e884
  414471:	or     ah,BYTE PTR [eax+0x31013988]
  414477:	imul   BYTE PTR [eax-0x5cc4616]
  41447d:	ss dec ecx
  41447f:	into   
  414480:	add    DWORD PTR [ebp-0x804ab3c],esp
  414486:	popf   
  414487:	cmp    BYTE PTR [ebx+0x6e],cl
  41448a:	sbb    dh,BYTE PTR [ebx+0x68]
  41448d:	fcomp  DWORD PTR [eax]
  41448f:	and    BYTE PTR [edi+0x5a],ch
  414492:	call   0xdd3f525f
  414497:	xor    al,0x77
  414499:	mov    ah,0xca
  41449b:	(bad)  
  41449d:	shl    DWORD PTR [ecx-0xc],cl
  4144a0:	sahf   
  4144a1:	(bad)  
  4144a2:	fnsave [esi-0x52af8609]
  4144a8:	jno    0x414522
  4144aa:	sar    DWORD PTR [eax-0x5ac0cfa4],cl
  4144b0:	ja     0x41446a
  4144b2:	dec    eax
  4144b3:	fucomp st(3)
  4144b5:	jae    0x414533
  4144b7:	das    
  4144b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b9:	dec    esi
  4144ba:	xor    BYTE PTR [eiz*1-0x37cf7e18],cl
  4144c1:	sub    eax,0xc03c0fb3
  4144c6:	xor    al,0x56
  4144c8:	(bad)  
  4144c9:	ins    BYTE PTR es:[edi],dx
  4144ca:	adc    al,0x65
  4144cc:	into   
  4144cd:	sbb    edx,DWORD PTR [ebp+0x18]
  4144d0:	inc    esi
  4144d1:	lods   al,BYTE PTR ds:[esi]
  4144d2:	add    ecx,DWORD PTR [edx+0x1d]
  4144d5:	push   0x1cca6e1
  4144da:	sti    
  4144db:	cmp    eax,0x3f0c8169
  4144e0:	lahf   
  4144e1:	bts    DWORD PTR [edx-0x6fcc4988],ebp
  4144e8:	push   es
  4144e9:	cmc    
  4144ea:	mov    bh,0xd5
  4144ec:	stc    
  4144ed:	dec    ebp
  4144ee:	aaa    
  4144ef:	pop    es
  4144f0:	mov    edx,0xb62dd06d
  4144f5:	in     al,dx
  4144f6:	into   
  4144f7:	push   ebx
  4144f8:	or     eax,0xe0fabe06
  4144fd:	cdq    
  4144fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144ff:	mov    ch,0xa1
  414501:	mov    ebp,0x8addcdb6
  414506:	stos   DWORD PTR es:[edi],eax
  414507:	adc    eax,0x4e6224f7
  41450c:	mov    esi,0xa9f2f552
  414511:	inc    ecx
  414512:	cmp    BYTE PTR [ebx-0x314c3a8],ch
  414518:	sub    BYTE PTR [eax],dl
  41451a:	inc    esp
  41451b:	out    dx,al
  41451c:	fs add al,0x73
  41451f:	sbb    al,0xee
  414521:	adc    dl,dh
  414523:	sub    ah,0xf3
  414526:	jns    0x414539
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	test   BYTE PTR [eax-0x4f],dl
  41452c:	cmp    DWORD PTR [esi],edx
  41452e:	pop    ds
  41452f:	stos   BYTE PTR es:[edi],al
  414530:	dec    eax
  414531:	lods   eax,DWORD PTR ds:[esi]
  414532:	cmp    ebx,DWORD PTR es:[ebx+0x578e47ff]
  414539:	jge    0x41450d
  41453b:	add    eax,0x31f75b18
  414540:	and    edx,DWORD PTR [esi-0x2b]
  414543:	jmp    0xaff6:0x3f0439c9
  41454a:	jle    0x4144e7
  41454c:	add    esi,DWORD PTR [edx]
  41454e:	or     edx,DWORD PTR [esi+0x74]
  414551:	je     0x41459b
  414553:	shl    DWORD PTR [edx+ebx*2+0x53],cl
  414557:	jae    0x41451a
  414559:	mov    dl,0xbc
  41455b:	addr16 (bad) 
  41455d:	sub    ch,BYTE PTR [ebp+ebp*4-0x9]
  414561:	mov    dl,0xaa
  414563:	(bad)  [ebx+0x2c]
  414566:	pop    ebp
  414567:	loopne 0x41454c
  414569:	es js  0x414540
  41456c:	out    0xec,al
  41456e:	cmp    dl,ch
  414570:	arpl   ax,bx
  414572:	sbb    ebx,DWORD PTR [esi+0x1fc483a9]
  414578:	leave  
  414579:	sar    ch,1
  41457b:	dec    edx
  41457c:	or     al,0x3c
  41457e:	rol    ebp,0x50
  414581:	pop    eax
  414582:	cmp    DWORD PTR [ebp-0x6f],edx
  414585:	dec    edi
  414586:	imul   esi,DWORD PTR [edx],0xffffff81
  414589:	stos   DWORD PTR es:[edi],eax
  41458a:	jecxz  0x414553
  41458c:	add    dh,dl
  41458e:	xor    ah,BYTE PTR [ecx]
  414590:	mov    edx,DWORD PTR [esi+ebp*1-0x29]
  414594:	fisttp QWORD PTR [di-0x25b9]
  414599:	aaa    
  41459a:	push   ebx
  41459b:	test   al,0xc3
  41459d:	nop
  41459e:	mov    ecx,0xc9fe4a89
  4145a3:	mov    dl,BYTE PTR [ecx+0x3b]
  4145a6:	sub    DWORD PTR [edx-0x17b917a9],0x23
  4145ad:	out    0xdc,al
  4145af:	pop    es
  4145b0:	inc    ecx
  4145b1:	fwait
  4145b2:	push   es
  4145b3:	add    esi,DWORD PTR [ebx]
  4145b5:	lock xor DWORD PTR [eax+0x6c],0xfa35a735
  4145bd:	ret    0xb392
  4145c0:	in     eax,0x55
  4145c2:	pop    ss
  4145c3:	dec    esi
  4145c4:	(bad)  
  4145c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c6:	push   ds
  4145c7:	mov    al,0x65
  4145c9:	in     al,0xd0
  4145cb:	retf   
  4145cc:	mov    ds:0x92765f57,eax
  4145d1:	les    edi,FWORD PTR [ecx]
  4145d3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d5:	stc    
  4145d6:	jge    0x414608
  4145d8:	cld    
  4145d9:	inc    ecx
  4145da:	mov    esp,0x67937c35
  4145df:	(bad)  
  4145e0:	std    
  4145e1:	sub    al,BYTE PTR [eax-0xf86a3d4]
  4145e7:	pop    ecx
  4145e8:	cmp    bh,BYTE PTR [ebx-0x74edf70b]
  4145ee:	adc    DWORD PTR [edi],ebp
  4145f0:	or     ah,BYTE PTR [ebx+0x89fe65f]
  4145f6:	fisubr WORD PTR [esp+ebp*4-0x6537e8b7]
  4145fd:	sbb    cl,BYTE PTR [esi+ebp*2]
  414600:	stc    
  414601:	enter  0x9c08,0x10
  414605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414606:	into   
  414607:	data16 mov ds:0x304fb232,al
  41460d:	shl    al,cl
  41460f:	out    0xa0,al
  414611:	mov    al,ds:0xcb6bbf3a
  414616:	shr    BYTE PTR [ebp+esi*2-0x7f116f36],cl
  41461d:	(bad)  
  41461e:	daa    
  41461f:	push   eax
  414620:	lahf   
  414621:	aaa    
  414622:	daa    
  414623:	arpl   WORD PTR [ecx+0x66],sp
  414626:	mov    ebp,DWORD PTR [ebp-0x17]
  414629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462a:	sahf   
  41462b:	inc    eax
  41462c:	inc    edx
  41462d:	ins    DWORD PTR es:[edi],dx
  41462e:	pop    esp
  41462f:	neg    BYTE PTR [esi]
  414631:	and    dh,BYTE PTR [esi]
  414633:	hlt    
  414634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414635:	cmp    al,0xe3
  414637:	pop    ds
  414638:	mov    ch,0xe2
  41463a:	aaa    
  41463b:	xchg   ebp,eax
  41463c:	sbb    ecx,DWORD PTR [edx]
  41463e:	push   cs
  41463f:	mov    ds:0xadf3753b,al
  414644:	jecxz  0x414689
  414646:	mov    ah,0xe7
  414648:	add    bl,BYTE PTR [edx+eiz*8-0x2e5dc6c5]
  41464f:	retf   0x37c5
  414652:	sub    DWORD PTR [edi-0x4d],ebp
  414655:	int3   
  414656:	int3   
  414657:	in     al,0x22
  414659:	adc    DWORD PTR [edx+0x46],edx
  41465c:	shr    DWORD PTR [ecx+eiz*8-0x1],0x49
  414661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414662:	outs   dx,BYTE PTR ds:[esi]
  414663:	call   0xe226cec8
  414668:	call   0xb314d347
  41466d:	cmc    
  41466e:	push   cs
  41466f:	inc    eax
  414670:	ins    BYTE PTR es:[edi],dx
  414671:	mov    esi,0x89bbada9
  414676:	add    DWORD PTR [ebx],esi
  414678:	inc    eax
  414679:	push   edi
  41467a:	xchg   edx,eax
  41467b:	dec    ebp
  41467c:	xlat   BYTE PTR ds:[ebx]
  41467d:	xor    ecx,DWORD PTR [edi+0xe]
  414680:	in     eax,dx
  414681:	jl     0x414621
  414683:	arpl   WORD PTR [edx],si
  414685:	adc    eax,0x2decc845
  41468a:	int3   
  41468b:	pop    edi
  41468c:	inc    edi
  41468d:	mov    al,0x7a
  41468f:	mov    edx,0x500fb04b
  414694:	xor    BYTE PTR [edi+eax*1+0x19f8a73],bl
  41469b:	pop    eax
  41469c:	outs   dx,BYTE PTR ds:[esi]
  41469d:	(bad)
  4146a0:	sub    BYTE PTR [ebx+0x5d],bl
  4146a3:	cdq    
  4146a4:	cmp    DWORD PTR [esi-0x5d9a8371],0xffffffcb
  4146ab:	popa   
  4146ac:	dec    esp
  4146ad:	stc    
  4146ae:	dec    eax
  4146af:	sub    BYTE PTR [ecx+0x3ac54a7c],al
  4146b5:	(bad)  
  4146b6:	sub    bl,BYTE PTR [eax+esi*4]
  4146b9:	test   DWORD PTR [ebx+0xe50b411],ebx
  4146bf:	gs add eax,0xf45536bb
  4146c5:	test   al,0xc6
  4146c7:	pop    ss
  4146c8:	loopne 0x414658
  4146ca:	outs   dx,BYTE PTR ds:[esi]
  4146cb:	scas   al,BYTE PTR es:[edi]
  4146cc:	js     0x4146c0
  4146ce:	jmp    0x85742c98
  4146d3:	(bad)  
  4146d4:	push   ss
  4146d5:	fwait
  4146d6:	mov    eax,0xd6c8f863
  4146db:	shl    esi,cl
  4146dd:	pop    ds
  4146de:	pop    eax
  4146df:	pop    ebx
  4146e0:	jbe    0x4146df
  4146e2:	inc    esp
  4146e3:	add    BYTE PTR [esi-0x54],ah
  4146e6:	(bad)  
  4146e7:	cwde   
  4146e8:	out    0x5,eax
  4146ea:	(bad)  
  4146eb:	(bad)
  4146ee:	popf   
  4146ef:	dec    ebp
  4146f0:	in     eax,0xbc
  4146f2:	mov    al,ds:0xc3a4c28
  4146f7:	dec    eax
  4146f8:	cld    
  4146f9:	test   eax,0x670856d0
  4146fe:	addr16 mov dl,0x20
  414701:	out    dx,al
  414702:	xor    esi,DWORD PTR [eax]
  414704:	imul   ebx,DWORD PTR [ecx-0xbdbf00c],0xffffffe6
  41470b:	icebp  
  41470c:	mov    ebx,0xa698f67c
  414711:	mov    si,0xe1e5
  414715:	call   0x5888:0x77c71849
  41471c:	push   0xffffffce
  41471e:	addr16 out 0x51,eax
  414721:	fmul   QWORD PTR [ebp+0x5b9557b]
  414727:	xchg   edx,eax
  414728:	pop    es
  414729:	dec    esp
  41472a:	popf   
  41472b:	lea    ebx,[edi]
  41472d:	adc    ebx,edi
  41472f:	or     eax,DWORD PTR [ebp+0x75]
  414732:	pop    esp
  414733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414734:	inc    edx
  414735:	or     bl,BYTE PTR [edx-0x57a186b9]
  41473b:	pop    ecx
  41473c:	add    al,0x2b
  41473e:	add    bh,ah
  414740:	mov    BYTE PTR [edi+0x75beffb9],dl
  414746:	js     0x414781
  414748:	shl    BYTE PTR [edi+eiz*4+0x2e14688b],0xc1
  414750:	fwait
  414751:	mov    dh,0x1e
  414753:	cli    
  414754:	ins    DWORD PTR es:[edi],dx
  414755:	push   ecx
  414756:	mov    dh,0xf4
  414758:	repz out 0x17,al
  41475b:	mov    bh,0xd6
  41475d:	add    DWORD PTR [esi],0x5f
  414760:	arpl   WORD PTR [edx+0x61],dx
  414763:	inc    edx
  414764:	loop   0x414724
  414766:	xchg   ebx,eax
  414767:	ss daa 
  414769:	std    
  41476a:	fs push ss
  41476c:	in     eax,dx
  41476d:	stos   BYTE PTR es:[edi],al
  41476e:	mov    eax,ds:0x2e652623
  414773:	pop    esp
  414774:	adc    ebp,DWORD PTR [edx]
  414776:	rcr    DWORD PTR [esi+0x22a379f6],1
  41477c:	mov    bh,0x21
  41477e:	popa   
  41477f:	mov    esp,DWORD PTR [ebx+0xadc2199]
  414785:	ss xchg edx,eax
  414787:	adc    cl,BYTE PTR [ebx-0x38]
  41478a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41478b:	and    DWORD PTR [esi-0x1c],esi
  41478e:	(bad)  
  414790:	idiv   ecx
  414792:	mov    ?,WORD PTR [ecx+eax*4]
  414795:	pusha  
  414796:	imul   eax,DWORD PTR [ecx-0x40],0x69
  41479a:	sub    al,0x93
  41479c:	icebp  
  41479d:	jnp    0x414807
  41479f:	xor    BYTE PTR [ebp-0x39fbd667],0x1b
  4147a6:	dec    edx
  4147a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a8:	jle    0x414804
  4147aa:	pushf  
  4147ab:	and    ch,BYTE PTR [esi-0x703ccb8e]
  4147b1:	and    bh,BYTE PTR [edx-0x5226939c]
  4147b7:	jbe    0x414786
  4147b9:	or     DWORD PTR [edi],ebp
  4147bb:	push   0x49
  4147bd:	jecxz  0x414794
  4147bf:	into   
  4147c0:	loop   0x414814
  4147c2:	xchg   esp,eax
  4147c3:	mov    bl,0x21
  4147c5:	adc    bh,BYTE PTR [ebx-0x43bce70d]
  4147cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147cc:	das    
  4147cd:	inc    eax
  4147ce:	xor    al,0x51
  4147d0:	and    esp,DWORD PTR [ecx+0x31]
  4147d3:	in     eax,0x86
  4147d5:	push   ebp
  4147d6:	add    eax,0x83ff105e
  4147db:	mov    ebx,0x9164500e
  4147e0:	mov    cl,0x1f
  4147e2:	neg    dh
  4147e4:	out    dx,eax
  4147e5:	cmp    bl,dl
  4147e7:	addr16 inc edi
  4147e9:	into   
  4147ea:	add    eax,0x3abab6b2
  4147ef:	sbb    eax,0x8fbe905a
  4147f4:	ds out 0x83,eax
  4147f7:	mov    ebx,0x53ecb37e
  4147fc:	pop    es
  4147fd:	mov    esi,0x2c279958
  414802:	push   edi
  414803:	out    dx,al
  414804:	cmc    
  414805:	fwait
  414806:	push   esp
  414807:	jns    0x41478e
  414809:	xor    esi,0x13
  41480c:	(bad)  
  41480d:	clc    
  41480e:	inc    edx
  41480f:	(bad)  
  414810:	sti    
  414811:	mov    DWORD PTR [ecx+0x36],ecx
  414814:	xor    BYTE PTR [eax],ah
  414816:	fmul   DWORD PTR [ebp-0x52]
  414819:	pop    eax
  41481a:	xlat   BYTE PTR ds:[ebx]
  41481b:	dec    esp
  41481c:	adc    al,0x23
  41481e:	or     esp,DWORD PTR [esi-0x3fe4cf11]
  414824:	xchg   BYTE PTR [edi],cl
  414826:	cmp    eax,0x1f27b75e
  41482b:	mov    dh,0xe1
  41482d:	xor    eax,0x9a95e7fa
  414832:	jg     0x414893
  414834:	ret    
  414835:	ja     0x414837
  414837:	dec    eax
  414838:	inc    ecx
  414839:	and    al,0xa5
  41483b:	and    eax,0x99920958
  414840:	stos   DWORD PTR es:[edi],eax
  414841:	mov    ds:0xb7757435,al
  414846:	iret   
  414847:	(bad)  
  414848:	daa    
  414849:	jno    0x414860
  41484b:	jns    0x41487b
  41484d:	cwde   
  41484e:	push   ss
  41484f:	fs xchg esi,eax
  414851:	(bad)  
  414854:	dec    ebp
  414855:	mov    BYTE PTR [ebp-0x1a2f1de4],dh
  41485b:	mov    al,0x4
  41485d:	(bad)  
  41485f:	push   ecx
  414860:	dec    BYTE PTR [esi+0x50]
  414863:	dec    ebp
  414864:	scas   eax,DWORD PTR es:[edi]
  414865:	dec    esi
  414866:	jg     0x4147ef
  414868:	pop    ss
  414869:	fld    st(2)
  41486b:	mov    ebp,0x77347646
  414870:	mov    es,WORD PTR [edi+0x48]
  414873:	adc    eax,DWORD PTR [eax-0x2d]
  414876:	rcr    BYTE PTR [ebx-0x4c502b63],0x3f
  41487d:	adc    eax,0x13935ee8
  414882:	pop    edi
  414883:	jnp    0x414826
  414885:	mov    bh,0x2e
  414887:	dec    eax
  414888:	jle    0x414906
  41488a:	and    al,0x42
  41488c:	cmc    
  41488d:	pop    eax
  41488e:	adc    eax,0xf0735de3
  414893:	loope  0x41482f
  414895:	daa    
  414896:	mov    esi,0xa93b0cc9
  41489b:	fld    QWORD PTR [ebx]
  41489d:	fcom   QWORD PTR [esi-0x22]
  4148a0:	lods   eax,DWORD PTR ds:[esi]
  4148a1:	push   ecx
  4148a2:	and    esi,DWORD PTR [edi]
  4148a4:	rcl    BYTE PTR [esi-0x11],0xc5
  4148a8:	adc    eax,0xfb4b6778
  4148ad:	pop    edi
  4148ae:	ror    BYTE PTR [esi+0x7e],0xa1
  4148b2:	imul   eax,DWORD PTR [ecx],0x626f39d0
  4148b8:	iret   
  4148b9:	lods   eax,DWORD PTR ds:[esi]
  4148ba:	lock mov dh,0xfb
  4148bd:	fldenv [edx-0x71]
  4148c0:	pop    edx
  4148c1:	add    edi,DWORD PTR [ebx]
  4148c3:	jp     0x414886
  4148c5:	test   al,0xf8
  4148c7:	sbb    ch,dh
  4148c9:	lock fist WORD PTR es:[edx]
  4148cd:	cmp    esp,DWORD PTR [ebx-0x1056aef8]
  4148d3:	mov    ebp,0x8ecdee2f
  4148d8:	and    dl,0x3c
  4148db:	add    eax,0x22c1a430
  4148e0:	xchg   BYTE PTR [edx],al
  4148e2:	xchg   ecx,eax
  4148e3:	fmul   st,st(2)
  4148e5:	sub    BYTE PTR [edi+0x7c462dd],bh
  4148eb:	mov    edx,eax
  4148ed:	and    DWORD PTR fs:[esi+0x797bced1],ebp
  4148f4:	sbb    BYTE PTR [ebx+0x934b66],dh
  4148fa:	arpl   WORD PTR [ebp+edx*8-0x2144f71d],bp
  414901:	fadd   st(2),st
  414903:	and    BYTE PTR [eax+0x27233d8a],dh
  414909:	jg     0x4148aa
  41490b:	dec    esi
  41490c:	nop
  41490d:	cmp    esi,DWORD PTR [ebp+0x5a]
  414910:	xor    al,0x33
  414912:	inc    eax
  414913:	jae    0x41495e
  414915:	fdivr  st(2),st
  414917:	outs   dx,BYTE PTR ds:[esi]
  414918:	aam    0x89
  41491a:	in     al,0x24
  41491c:	outs   dx,BYTE PTR ds:[esi]
  41491d:	hlt    
  41491e:	push   esi
  41491f:	out    dx,al
  414920:	hlt    
  414921:	es xchg ebx,eax
  414923:	popa   
  414924:	out    dx,eax
  414925:	add    BYTE PTR [edx-0x29400b75],dl
  41492b:	mov    bl,0x57
  41492d:	jmp    0x788a:0x1a44f627
  414934:	mov    ebp,esp
  414936:	pusha  
  414937:	mov    ecx,0xc0fb16e8
  41493c:	jo     0x414990
  41493e:	cmp    dl,BYTE PTR [eax-0x57]
  414941:	pop    ebp
  414942:	int    0xd1
  414944:	xchg   esp,eax
  414945:	inc    ecx
  414946:	fcomi  st,st(6)
  414948:	mov    al,0x12
  41494a:	pop    esi
  41494b:	imul   ebx,DWORD PTR [ebx-0x17],0xffffff8f
  41494f:	js     0x4148df
  414951:	stos   BYTE PTR es:[edi],al
  414952:	or     DWORD PTR [ecx+0x70],edi
  414955:	rdmsr  
  414957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414958:	xchg   edx,eax
  414959:	fild   QWORD PTR [edi+0x77a724df]
  41495f:	push   0x8311e62d
  414964:	aaa    
  414965:	stc    
  414966:	cmp    al,0xe5
  414968:	stc    
  414969:	or     dh,bh
  41496b:	fwait
  41496c:	lock pushf 
  41496e:	fbstp  TBYTE PTR [ebp-0x576d6f29]
  414974:	adc    eax,0x26acd747
  414979:	adc    bh,0xb7
  41497c:	dec    esi
  41497d:	pop    ecx
  41497e:	mov    ecx,0xae8e40f6
  414983:	mov    eax,0xa656ea01
  414988:	psubb  mm4,mm4
  41498b:	popf   
  41498c:	mov    ds:0xd89a8cec,al
  414991:	daa    
  414992:	push   ebx
  414993:	js     0x4149b7
  414995:	shl    BYTE PTR [eax],cl
  414997:	inc    eax
  414998:	out    0xe,eax
  41499a:	sar    DWORD PTR [eax-0x52],cl
  41499d:	xor    al,0xb9
  41499f:	test   BYTE PTR [edi-0x4f],0xf4
  4149a3:	and    DWORD PTR [ecx-0x4bb0cd75],edi
  4149a9:	inc    ecx
  4149aa:	xchg   DWORD PTR [edx+0x1a2b3287],ecx
  4149b0:	mov    BYTE PTR [edx],dl
  4149b2:	cmp    esi,DWORD PTR [esp+ecx*2+0x7816f895]
  4149b9:	jmp    0xe8546a8
  4149be:	daa    
  4149bf:	dec    edx
  4149c0:	pop    ss
  4149c1:	push   cx
  4149c3:	cmp    al,0x21
  4149c5:	lock out dx,al
  4149c7:	pop    eax
  4149c8:	adc    BYTE PTR [ecx-0x341cf90f],cl
  4149ce:	or     bh,BYTE PTR [eax+edx*8+0x8913736]
  4149d5:	mov    edi,0x40df720a
  4149da:	icebp  
  4149db:	sub    cl,cl
  4149dd:	jp     0x414a24
  4149df:	mov    bl,0x57
  4149e1:	jns    0x41499a
  4149e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e4:	(bad)  
  4149e5:	pop    ds
  4149e6:	jl     0x4149f6
  4149e8:	adc    BYTE PTR [esi+edi*1],ah
  4149eb:	std    
  4149ec:	jbe    0x414a57
  4149ee:	inc    ebp
  4149ef:	cmp    al,0xb6
  4149f1:	fcom   DWORD PTR [eax-0x25]
  4149f4:	jae    0x41499e
  4149f6:	sahf   
  4149f7:	jb     0x414a2f
  4149f9:	xchg   esp,eax
  4149fa:	(bad)  
  4149fb:	mov    BYTE PTR ds:0xab285546,bh
  414a01:	mov    al,bh
  414a03:	pop    ss
  414a04:	aas    
  414a05:	(bad)  
  414a06:	(bad)  
  414a07:	in     eax,0x88
  414a09:	mov    al,0x9f
  414a0b:	cmp    al,0xe2
  414a0d:	cmp    DWORD PTR [esi],edx
  414a0f:	xchg   edi,eax
  414a10:	jecxz  0x4149bf
  414a12:	jecxz  0x414a72
  414a14:	shl    DWORD PTR [ebx+ebp*4+0x73],1
  414a18:	mov    edx,0xefbe657
  414a1d:	bound  ebp,QWORD PTR [eax]
  414a1f:	push   ebp
  414a20:	data16 (bad) [edx-0x53]
  414a24:	push   ecx
  414a25:	fstp   st(2)
  414a27:	nop
  414a28:	ds scas eax,DWORD PTR es:[edi]
  414a2a:	jae    0x4149ed
  414a2c:	int3   
  414a2d:	pop    ebp
  414a2e:	std    
  414a2f:	pop    ecx
  414a30:	inc    ecx
  414a31:	xchg   edi,eax
  414a32:	pop    edx
  414a33:	nop
  414a34:	ficomp DWORD PTR [eax+ebx*1]
  414a37:	inc    esi
  414a38:	loope  0x414a44
  414a3a:	sub    al,0xe6
  414a3c:	in     eax,dx
  414a3d:	aaa    
  414a3e:	fisubr WORD PTR [edx-0x131f5d6]
  414a44:	int3   
  414a45:	jnp    0x414a18
  414a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a48:	cld    
  414a49:	lahf   
  414a4a:	(bad)  
  414a4b:	cli    
  414a4c:	jbe    0x4149e2
  414a4e:	xchg   edx,eax
  414a4f:	icebp  
  414a50:	jle    0x414a49
  414a52:	sbb    eax,0x38fd2133
  414a57:	pop    edi
  414a58:	pop    edi
  414a59:	aam    0xc9
  414a5b:	xchg   DWORD PTR [edi+0x2e0f97c9],ebp
  414a61:	out    dx,eax
  414a62:	into   
  414a63:	jg     0x414a27
  414a65:	lea    esi,[ebx+ebp*4-0x3]
  414a69:	pop    esi
  414a6a:	pop    esi
  414a6b:	mov    eax,ds:0x684be952
  414a70:	scas   eax,DWORD PTR es:[edi]
  414a71:	mov    BYTE PTR [ecx],cl
  414a73:	sub    dh,BYTE PTR [eax+0x54]
  414a76:	arpl   WORD PTR [ecx],si
  414a78:	push   0x4a
  414a7a:	jl     0x414a19
  414a7c:	aaa    
  414a7d:	push   edx
  414a7e:	add    cl,0xd4
  414a81:	arpl   WORD PTR [edx-0x2c],sp
  414a84:	mov    esi,0x43145113
  414a89:	mov    ch,0x36
  414a8b:	xor    eax,edx
  414a8d:	jle    0x414a8b
  414a8f:	adc    DWORD PTR [edi-0x4704b59e],eax
  414a95:	in     al,dx
  414a96:	pop    es
  414a97:	or     DWORD PTR [ebp-0x2],0x633680ad
  414a9e:	lods   eax,DWORD PTR ds:[esi]
  414a9f:	jmp    0xb6188a4c
  414aa4:	test   DWORD PTR [eax],edx
  414aa6:	sti    
  414aa7:	loopne 0x414acc
  414aa9:	cmp    al,0xad
  414aab:	repz dec edi
  414aad:	imul   ebx,DWORD PTR [eax],0xffffffec
  414ab0:	rol    bh,cl
  414ab2:	push   es
  414ab3:	outs   dx,BYTE PTR ds:[esi]
  414ab4:	push   edi
  414ab5:	lea    edx,[ecx+edi*2]
  414ab8:	dec    esp
  414ab9:	fsub   DWORD PTR [edi]
  414abb:	out    0xad,al
  414abd:	mov    esi,DWORD PTR [ebp+edi*4-0x23a2f8bb]
  414ac4:	repnz push edi
  414ac6:	ret    0x1b2e
  414ac9:	addr16 inc ebp
  414acb:	jl     0x414aa3
  414acd:	dec    eax
  414ace:	dec    ecx
  414acf:	mov    cl,0xa0
  414ad1:	or     al,0x53
  414ad3:	adc    BYTE PTR [esi-0x1f],ah
  414ad6:	inc    BYTE PTR [esi]
  414ad8:	jnp    0x414b20
  414ada:	clc    
  414adb:	es xor eax,edi
  414ade:	(bad)  
  414adf:	repz xor ecx,edx
  414ae2:	mov    WORD PTR [esi-0x41],cs
  414ae5:	jo     0x414adc
  414ae7:	mov    al,0xb1
  414ae9:	sub    edx,edi
  414aeb:	or     DWORD PTR [esp+eax*8],esi
  414aee:	mov    ds:0xe095dc09,al
  414af3:	sbb    DWORD PTR [ebx+0x34b7812d],esp
  414af9:	inc    edx
  414afa:	loope  0x414b17
  414afc:	inc    esi
  414afd:	or     al,0x4c
  414aff:	test   BYTE PTR [ecx+0x5b],bh
  414b02:	mov    bl,al
  414b04:	sub    DWORD PTR [esp+edi*4-0x37e588eb],eax
  414b0b:	fimul  DWORD PTR [esi+0xa]
  414b0e:	push   cs
  414b0f:	mov    ecx,0xf2429755
  414b14:	or     eax,0x5e118dab
  414b19:	call   0x826450d5
  414b1e:	push   0x81d140
  414b23:	jmp    0x4af6cfc3
  414b28:	jno    0x414b4c
  414b2a:	retf   
  414b2b:	or     al,al
  414b2d:	fsub   DWORD PTR [eax+esi*2+0x28]
  414b31:	jl     0x414b16
  414b33:	dec    ebp
  414b34:	push   0xffffffab
  414b36:	clc    
  414b37:	add    DWORD PTR ds:0xe6a35997,eax
  414b3d:	lods   al,BYTE PTR ds:[esi]
  414b3e:	in     eax,0xb1
  414b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b41:	mov    eax,0xf69b0eee
  414b46:	je     0x414b3f
  414b48:	xor    dl,dh
  414b4a:	aas    
  414b4b:	push   edi
  414b4c:	dec    ebx
  414b4d:	pusha  
  414b4e:	(bad)  
  414b51:	pop    ebx
  414b52:	and    al,0xe3
  414b54:	jno    0x414b9f
  414b56:	repnz sbb DWORD PTR [edi],ebp
  414b59:	frstor [ecx+edx*8]
  414b5c:	pushf  
  414b5d:	loopne 0x414b6d
  414b5f:	xchg   ebp,eax
  414b60:	add    DWORD PTR [ebx-0x46e52cb4],ebx
  414b66:	fwait
  414b67:	in     eax,dx
  414b68:	aad    0xc0
  414b6a:	and    eax,0xddbca001
  414b6f:	mov    fs,WORD PTR [edi+0x3]
  414b72:	jb     0x414b74
  414b74:	pop    ecx
  414b75:	out    0x47,eax
  414b77:	or     BYTE PTR [ebp-0x53],0xdf
  414b7b:	sub    al,0x67
  414b7d:	mov    ebx,DWORD PTR [edx+ebp*4]
  414b80:	dec    eax
  414b81:	inc    ebx
  414b82:	dec    ecx
  414b83:	pop    ebp
  414b84:	shl    DWORD PTR [edx+ebp*8+0x27ab70e2],cl
  414b8b:	cmp    eax,0x5d6a76a2
  414b90:	jo     0x414bf1
  414b92:	xchg   esi,eax
  414b93:	xchg   ecx,eax
  414b94:	mov    esp,ebx
  414b96:	cmpxchg BYTE PTR [edi],ah
  414b99:	jne    0x414ba9
  414b9b:	push   esi
  414b9c:	mov    edx,0x46324e46
  414ba1:	xchg   ebx,eax
  414ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba3:	xor    ebp,esi
  414ba5:	sbb    BYTE PTR [edx+0x16],cl
  414ba8:	xchg   edx,eax
  414ba9:	arpl   WORD PTR [ecx-0x6b00d869],cx
  414baf:	ss and eax,0x531946f9
  414bb5:	dec    esi
  414bb6:	jp     0x414b85
  414bb8:	bound  esi,QWORD PTR [edi-0x4817a168]
  414bbe:	sahf   
  414bbf:	icebp  
  414bc0:	adc    BYTE PTR [ebp-0x23b46b15],0x2b
  414bc7:	std    
  414bc8:	inc    edi
  414bc9:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bcb:	inc    ebx
  414bcc:	or     esi,DWORD PTR [edi+0x106f765a]
  414bd2:	aad    0x8e
  414bd4:	fidivr DWORD PTR [esi]
  414bd6:	jnp    0x414b7a
  414bd8:	sub    DWORD PTR [ecx],0x77
  414bdb:	mov    ch,0x1
  414bdd:	fisubr DWORD PTR [edx-0x4f]
  414be0:	stos   DWORD PTR es:[edi],eax
  414be1:	imul   ecx,ebx,0xffffffcd
  414be4:	(bad)  
  414be5:	dec    esi
  414be6:	hlt    
  414be7:	mov    ecx,0xb37b94fd
  414bec:	jnp    0x414bf2
  414bee:	ret    
  414bef:	(bad)  
  414bf0:	(bad)  
  414bf1:	and    esi,esi
  414bf3:	mov    edx,0xed59e481
  414bf8:	ins    DWORD PTR es:[edi],dx
  414bf9:	sbb    edi,0xc40a1656
  414bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c00:	data16 mov ds:0xdf092f48,al
  414c06:	xchg   ebx,eax
  414c07:	dec    edi
  414c08:	pop    ecx
  414c09:	and    BYTE PTR ds:0x30fceaf9,dh
  414c0f:	xchg   esi,eax
  414c10:	pop    esp
  414c11:	lods   eax,DWORD PTR ds:[esi]
  414c12:	pop    esi
  414c13:	and    BYTE PTR [ebx-0x53],bl
  414c16:	xchg   edx,eax
  414c17:	call   0x578f:0xd0a4ef18
  414c1e:	xchg   DWORD PTR cs:[esi+0x4d65349b],edx
  414c25:	fistp  WORD PTR [ecx-0x388d33f3]
  414c2b:	mov    esi,0xe92f4e91
  414c30:	mov    eax,ds:0x49495bfd
  414c35:	loopne 0x414bfa
  414c37:	mov    ?,WORD PTR [edi-0x4dd214e2]
  414c3d:	inc    eax
  414c3e:	push   eax
  414c3f:	scas   al,BYTE PTR es:[edi]
  414c40:	jp     0x414c46
  414c42:	mov    bl,0x92
  414c44:	jmp    0x414c4c
  414c46:	mov    ?,WORD PTR [edi-0x55]
  414c49:	les    ebx,FWORD PTR [ecx]
  414c4b:	fdivr  DWORD PTR [ebx+0x57da4181]
  414c51:	sub    al,0xe9
  414c53:	pop    es
  414c54:	jp     0x414be8
  414c56:	imul   esp,ecx,0xd
  414c59:	leave  
  414c5a:	push   ebx
  414c5b:	outs   dx,BYTE PTR ds:[esi]
  414c5c:	mov    edx,0x7f8413df
  414c61:	bound  edi,QWORD PTR [esi+0x41c2876]
  414c67:	rol    BYTE PTR [eax+0x14],cl
  414c6a:	add    eax,0xdeab07b3
  414c6f:	(bad)  
  414c71:	pop    ds
  414c72:	mov    eax,ds:0x93e9daad
  414c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c78:	dec    ebp
  414c79:	ficomp DWORD PTR [eax+0x70]
  414c7c:	out    dx,eax
  414c7d:	daa    
  414c7e:	mov    dh,0xb0
  414c80:	pop    edx
  414c81:	xchg   ax,ax
  414c83:	shl    BYTE PTR [esi-0xb136802],1
  414c89:	dec    esp
  414c8a:	cmp    BYTE PTR [edi-0x78],al
  414c8d:	mov    ch,0x1
  414c8f:	and    edi,ebx
  414c91:	add    eax,0x688416a2
  414c96:	stos   DWORD PTR es:[edi],eax
  414c97:	ficomp WORD PTR [esi]
  414c99:	sbb    al,BYTE PTR [eax+0xdf22292]
  414c9f:	loop   0x414cc8
  414ca1:	pop    edx
  414ca2:	inc    esi
  414ca3:	mov    ebp,0xded8129e
  414ca8:	lahf   
  414ca9:	mov    ecx,0xbc4267af
  414cae:	sub    DWORD PTR [ecx],ebx
  414cb0:	add    DWORD PTR [ebx-0xa1c4b2a],esp
  414cb6:	sub    al,0x16
  414cb8:	stos   DWORD PTR es:[edi],eax
  414cb9:	mov    bl,0x8
  414cbb:	pusha  
  414cbc:	adc    al,al
  414cbe:	cmc    
  414cbf:	hlt    
  414cc0:	cs adc BYTE PTR es:[eax+0x2ef8dc81],ch
  414cc8:	push   esp
  414cc9:	or     esi,DWORD PTR [edi-0x69]
  414ccc:	(bad)  
  414ccd:	mov    bh,0x5
  414ccf:	sbb    DWORD PTR [esi+esi*8-0x10],0x13
  414cd4:	xchg   ebx,eax
  414cd5:	mov    esp,0xead702e2
  414cda:	xor    esi,DWORD PTR [ebx]
  414cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cdd:	fcom   DWORD PTR [ebp-0x34bfb28b]
  414ce3:	push   esp
  414ce4:	push   edx
  414ce5:	cmp    DWORD PTR [ecx],esi
  414ce7:	jl     0x414cf6
  414ce9:	dec    eax
  414cea:	in     eax,0xb7
  414cec:	push   ebp
  414ced:	clc    
  414cee:	jmp    0x414cbb
  414cf0:	and    eax,0x43d36c91
  414cf5:	rol    BYTE PTR [edi],0x64
  414cf8:	test   edi,0x250f8f9a
  414cfe:	cli    
  414cff:	loope  0x414c93
  414d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d02:	lahf   
  414d03:	gs jge 0x414ce9
  414d06:	adc    esp,DWORD PTR [edi]
  414d08:	sti    
  414d09:	enter  0xf369,0x95
  414d0d:	(bad)  
  414d0f:	(bad)  
  414d10:	xor    cl,BYTE PTR [edi-0x16da0136]
  414d16:	aaa    
  414d17:	jns    0x414cca
  414d19:	jb     0x414cfc
  414d1b:	sub    BYTE PTR [ecx],bh
  414d1d:	mov    esi,0x8ab3487a
  414d22:	popf   
  414d23:	call   0x94c7:0x52046b2c
  414d2a:	mov    bl,BYTE PTR [eax-0x7c49672b]
  414d30:	(bad)  
  414d32:	push   edx
  414d33:	ficom  DWORD PTR [ecx+0x2c8f720c]
  414d39:	ins    BYTE PTR es:[edi],dx
  414d3a:	mov    ch,0x45
  414d3c:	sbb    esp,DWORD PTR [edx-0x80]
  414d3f:	pusha  
  414d40:	sub    BYTE PTR [ebp+0x78],dl
  414d43:	out    dx,al
  414d44:	into   
  414d45:	sub    al,0xf2
  414d47:	mov    al,0x98
  414d49:	cli    
  414d4a:	nop
  414d4b:	call   0xb9d8:0xaa8bf71
  414d52:	xor    BYTE PTR ss:[ebx],ah
  414d55:	loop   0x414d5d
  414d57:	sub    bl,bh
  414d59:	lea    ebx,[ebp-0x5d5ece16]
  414d5f:	in     eax,dx
  414d60:	pop    eax
  414d61:	jb     0x414d8a
  414d63:	rol    DWORD PTR [ecx-0x797b4d20],0xdf
  414d6a:	lods   eax,DWORD PTR ds:[esi]
  414d6b:	fdivr  DWORD PTR [ecx+0x3be28222]
  414d71:	dec    ecx
  414d72:	stos   DWORD PTR es:[edi],eax
  414d73:	fisub  WORD PTR [esi+0x68]
  414d76:	lahf   
  414d77:	jge    0x414de2
  414d79:	xchg   ebx,eax
  414d7a:	xor    al,0x7f
  414d7c:	sub    dl,dh
  414d7e:	aad    0xab
  414d80:	pop    ebp
  414d81:	addr16 add eax,0xb6c1b405
  414d87:	mov    ds:0x2325e61,al
  414d8c:	mov    BYTE PTR [edx],dl
  414d8e:	retf   0xd89a
  414d91:	repnz cmp bh,dh
  414d94:	fist   WORD PTR [ebx-0xa]
  414d97:	mov    edx,0x4b20b705
  414d9c:	fstp   DWORD PTR [edi+0xe]
  414d9f:	sub    ecx,DWORD PTR [eax-0x77]
  414da2:	sahf   
  414da3:	push   cs
  414da4:	mov    ah,0xfd
  414da6:	push   0xffffffcc
  414da8:	inc    ebp
  414da9:	add    al,0xd9
  414dab:	xor    edi,DWORD PTR [ebx-0x65]
  414dae:	lods   al,BYTE PTR ds:[esi]
  414daf:	scas   eax,DWORD PTR es:[edi]
  414db0:	dec    esp
  414db1:	jmp    0x6905f4e5
  414db6:	les    eax,FWORD PTR [edi*8+0xc9950d0]
  414dbd:	fs dec ebx
  414dbf:	pop    ds
  414dc0:	mov    cl,0x52
  414dc2:	push   es
  414dc3:	das    
  414dc4:	(bad)  
  414dc5:	in     al,0x8
  414dc7:	sub    eax,0x82fba6a2
  414dcc:	or     eax,0x7b5b4e07
  414dd1:	retf   0xf2be
  414dd4:	mov    ebx,0xf1351028
  414dd9:	in     eax,dx
  414dda:	mov    ch,0x41
  414ddc:	mov    cl,BYTE PTR [edx+0x32]
  414ddf:	jb     0x414e0d
  414de1:	pop    ecx
  414de2:	lahf   
  414de3:	daa    
  414de4:	mov    edx,ss
  414de6:	inc    esi
  414de7:	mov    al,0x13
  414de9:	xor    eax,0x1bd6673d
  414dee:	nop
  414def:	mov    BYTE PTR [edx+0x609d6e88],al
  414df5:	sbb    bl,BYTE PTR [ecx+0x783b97e2]
  414dfb:	fist   WORD PTR [esi]
  414dfd:	inc    eax
  414dfe:	xor    al,0xd1
  414e00:	cmp    al,0x9b
  414e02:	dec    ebp
  414e03:	loope  0x414da7
  414e05:	ret    
  414e06:	fcom   QWORD PTR [esi-0x3e28cba0]
  414e0c:	mov    ebx,0xc9af8a6c
  414e11:	cmp    BYTE PTR [eax+0x4d],0xbb
  414e15:	pop    edi
  414e16:	add    cl,0x4a
  414e19:	test   BYTE PTR [eax-0x60af2ebc],al
  414e1f:	pop    ebx
  414e20:	add    esp,DWORD PTR [edi-0x3f69f676]
  414e26:	sub    edi,DWORD PTR [ebx]
  414e28:	jecxz  0x414e13
  414e2a:	mov    ds,esp
  414e2c:	jno    0x414de2
  414e2e:	stos   DWORD PTR es:[edi],eax
  414e2f:	cmp    BYTE PTR [eax-0x49],bl
  414e32:	sub    eax,0x97074488
  414e37:	pop    ds
  414e38:	out    dx,al
  414e39:	or     esi,ecx
  414e3b:	or     esp,DWORD PTR [ebx]
  414e3d:	jecxz  0x414e52
  414e3f:	xchg   BYTE PTR [edi],cl
  414e41:	pop    ebx
  414e42:	ins    BYTE PTR es:[edi],dx
  414e43:	xchg   ecx,eax
  414e44:	adc    eax,0x14731de4
  414e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e4a:	sub    DWORD PTR ds:0xcfaec134,edi
  414e50:	xchg   BYTE PTR [eax],al
  414e52:	(bad)  
  414e53:	dec    esp
  414e54:	out    dx,al
  414e55:	cdq    
  414e56:	vpunpcklwd xmm0,xmm7,xmm4
  414e5a:	or     al,0xb8
  414e5c:	retf   0xecd0
  414e5f:	mov    ds:0xc1c54d35,al
  414e64:	sar    DWORD PTR [edx],cl
  414e66:	fsub   st,st(4)
  414e68:	ins    DWORD PTR es:[edi],dx
  414e69:	cdq    
  414e6a:	pop    esi
  414e6b:	jmp    0xf15e:0xecb3ba72
  414e72:	cdq    
  414e73:	adc    bh,BYTE PTR [ecx]
  414e75:	mov    dl,0x57
  414e77:	test   DWORD PTR [ebp-0x38fd43d6],esi
  414e7d:	lods   eax,DWORD PTR ds:[esi]
  414e7e:	push   edi
  414e7f:	mov    ecx,ebx
  414e81:	inc    esp
  414e82:	rcr    ebp,cl
  414e84:	popf   
  414e85:	and    al,BYTE PTR [ebx]
  414e87:	or     eax,0x5ed0d5f
  414e8c:	pavgw  mm0,QWORD PTR [esi+eiz*8-0x6785e6]
  414e94:	mov    bl,BYTE PTR [bp+0x11]
  414e98:	mov    ebx,edx
  414e9a:	xchg   ebx,eax
  414e9b:	hlt    
  414e9c:	mov    ch,0x4a
  414e9e:	jne    0x414e2c
  414ea0:	clc    
  414ea1:	push   ss
  414ea2:	stos   DWORD PTR es:[edi],eax
  414ea3:	add    DWORD PTR [edx+0x53430b0f],esi
  414ea9:	std    
  414eaa:	loop   0x414ed2
  414eac:	mov    dx,0xf14a
  414eb0:	mov    ch,0xbb
  414eb2:	fmul   DWORD PTR [edi]
  414eb4:	dec    ecx
  414eb5:	mov    ah,0xd8
  414eb7:	(bad)  
  414eb8:	adc    eax,0xb7c8ea5f
  414ebd:	jnp    0x414e89
  414ebf:	sub    eax,edi
  414ec1:	ret    0xae15
  414ec4:	mov    al,ds:0xe447ee74
  414ec9:	mov    cl,0xc1
  414ecb:	lods   eax,DWORD PTR ds:[esi]
  414ecc:	jle    0x414ed7
  414ece:	inc    ebx
  414ecf:	mov    dh,0xa3
  414ed1:	pusha  
  414ed2:	xchg   esi,eax
  414ed3:	pusha  
  414ed4:	ds xor al,0x37
  414ed7:	add    al,0x5a
  414ed9:	hlt    
  414eda:	dec    edx
  414edb:	bound  ecx,QWORD PTR [ebx-0x72be66dc]
  414ee1:	shl    DWORD PTR [ebp+0x6418919a],0x55
  414ee8:	fld    QWORD PTR [bp+0x4c]
  414eec:	pop    ss
  414eed:	fwait
  414eee:	ja     0x414e8f
  414ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef1:	mov    BYTE PTR [ecx-0x65],bl
  414ef4:	mov    ds:0x2e09d127,eax
  414ef9:	add    dh,BYTE PTR ds:0xf9670856
  414eff:	adc    DWORD PTR [edi-0x11],edx
  414f02:	enter  0xf506,0x77
  414f06:	(bad)  
  414f07:	ss pusha 
  414f09:	leave  
  414f0a:	sub    al,0xd6
  414f0c:	rcl    DWORD PTR [edi+ebx*8-0x46b65c42],1
  414f13:	add    eax,0x835c2963
  414f18:	adc    dl,ah
  414f1a:	std    
  414f1b:	nop
  414f1c:	pop    eax
  414f1d:	xor    BYTE PTR [ebx+0x71],al
  414f20:	cld    
  414f21:	jp     0x414f0c
  414f23:	lea    ebp,[ecx+0x4eb28778]
  414f29:	out    0x83,al
  414f2b:	push   esi
  414f2c:	push   ebp
  414f2d:	retf   0xcddd
  414f30:	and    al,0x23
  414f32:	call   0xfa7e5043
  414f37:	ret    0xd0b5
  414f3a:	xchg   ah,bh
  414f3c:	mov    ah,0xe1
  414f3e:	loope  0x414f84
  414f40:	cs push es
  414f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f43:	loopne 0x414f3c
  414f45:	in     al,0xff
  414f47:	sbb    bh,BYTE PTR [ebx-0xf6f5e1e]
  414f4d:	mov    ebx,esp
  414f4f:	push   esp
  414f50:	(bad)  
  414f51:	(bad)  
  414f52:	fcmovnb st,st(3)
  414f54:	neg    DWORD PTR [edi-0x50]
  414f57:	mov    cl,0xbc
  414f59:	(bad)  
  414f5a:	xchg   edx,eax
  414f5b:	cmp    DWORD PTR [ecx+0x3ecf1597],esp
  414f61:	or     edi,ebx
  414f63:	xchg   edx,eax
  414f64:	jl     0x414f3d
  414f66:	stos   BYTE PTR es:[edi],al
  414f67:	add    bl,BYTE PTR [ebp-0x3e]
  414f6a:	outs   dx,BYTE PTR ds:[esi]
  414f6b:	popa   
  414f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f6d:	jmp    0x8579:0xf2d4050d
  414f74:	les    ebp,FWORD PTR [eax]
  414f76:	mov    esp,fs
  414f78:	pop    edx
  414f79:	mov    esi,0xd692c737
  414f7e:	outs   dx,BYTE PTR ds:[esi]
  414f7f:	fmul   st(7),st
  414f81:	push   edx
  414f82:	clc    
  414f83:	mov    ebp,0xb67e4570
  414f88:	frstor [edi]
  414f8a:	xchg   ebx,eax
  414f8b:	and    BYTE PTR [eax+0x2f],cl
  414f8e:	mov    eax,0xfac62779
  414f93:	adc    bh,dl
  414f95:	adc    ah,ch
  414f97:	jge    0x414fca
  414f99:	out    0x98,eax
  414f9b:	(bad)  
  414f9c:	repz xchg ebx,eax
  414f9e:	add    ecx,DWORD PTR [ebp-0x70]
  414fa1:	arpl   WORD PTR [ebx],di
  414fa3:	cmp    eax,0x2c2b01d5
  414fa8:	cmp    al,0x96
  414faa:	adc    cl,BYTE PTR [ebx-0x6eec96e]
  414fb0:	xor    eax,0xec461748
  414fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb6:	dec    ebx
  414fb7:	test   DWORD PTR [edx+0x5e],esi
  414fba:	cld    
  414fbb:	mov    dl,BYTE PTR [edx]
  414fbd:	and    cl,BYTE PTR [eax+esi*1-0x238ee160]
  414fc4:	out    dx,eax
  414fc5:	fidivr DWORD PTR [esi+0x45]
  414fc8:	pusha  
  414fc9:	adc    ebx,DWORD PTR [esi+edi*4]
  414fcc:	dec    esp
  414fcd:	enter  0x74f0,0x67
  414fd1:	push   esp
  414fd2:	pop    es
  414fd3:	fdiv   QWORD PTR [esi-0x69e4af5a]
  414fd9:	mov    ebp,0x503ca13b
  414fde:	ret    0xd5d1
  414fe1:	scas   eax,DWORD PTR es:[edi]
  414fe2:	shl    BYTE PTR [esi+ecx*8-0x28],1
  414fe6:	mov    DWORD PTR [ecx+0x5bae7526],edx
  414fec:	test   eax,esi
  414fee:	or     al,0xb
  414ff0:	cmp    dh,BYTE PTR [esi+ebx*4+0x28f0e894]
  414ff7:	dec    esi
  414ff8:	mov    ebp,DWORD PTR [edx+0x37]
  414ffb:	add    BYTE PTR [edx+0x36],cl
  414ffe:	fld    TBYTE PTR ds:[edi]
  415001:	mov    eax,0xf5f2a83c
  415006:	jmp    0x414fb9
  415008:	push   edi
  415009:	xchg   BYTE PTR [esi-0x8],bh
  41500c:	jge    0x415075
  41500e:	nop
  41500f:	pop    ss
  415010:	int    0x8
  415012:	bnd ret 0x2f54
  415016:	bound  edi,QWORD PTR [ecx]
  415018:	pop    esp
  415019:	icebp  
  41501a:	push   ecx
  41501b:	push   ecx
  41501d:	dec    eax
  41501e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415020:	sbb    eax,0xa7991603
  415025:	out    0xc7,eax
  415027:	lea    ebp,[edi-0x42]
  41502a:	mov    dh,0x76
  41502c:	mov    BYTE PTR [ebx-0x20],bl
  41502f:	int3   
  415030:	cmp    BYTE PTR [esi+eiz*4],dh
  415033:	test   eax,0x5326db7e
  415038:	sub    eax,0x522c782c
  41503d:	and    BYTE PTR [ebx],ah
  41503f:	clc    
  415040:	loop   0x4150a5
  415042:	(bad)  
  415043:	pop    esi
  415044:	cli    
  415045:	stc    
  415046:	ret    0x4535
  415049:	fstp   DWORD PTR [esi+0x5f]
  41504c:	arpl   WORD PTR [ecx+0x4f],di
  41504f:	add    DWORD PTR [edi+0x31],edx
  415052:	(bad)  
  415053:	push   ds
  415054:	dec    ebx
  415055:	aaa    
  415056:	pop    ss
  415057:	mov    al,0xa4
  415059:	and    al,0xd6
  41505b:	mov    ecx,0xe310f168
  415060:	mov    ds:0x3035b74,eax
  415065:	cmc    
  415066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415067:	fwait
  415068:	mov    ebx,DWORD PTR [edx]
  41506a:	xor    BYTE PTR [edi],bh
  41506c:	stos   BYTE PTR es:[edi],al
  41506d:	cmp    dl,dl
  41506f:	repnz int3 
  415071:	repz adc eax,DWORD PTR [eax+0x5f]
  415075:	imul   edi,DWORD PTR [ebx],0xffffffc9
  415078:	in     al,0x71
  41507a:	icebp  
  41507b:	fisubr WORD PTR [ebx+0x1934bc45]
  415081:	out    0x78,al
  415083:	imul   eax,ebp,0xc2d2ccdc
  415089:	mov    cl,0xd7
  41508b:	bound  eax,QWORD PTR [ebp+0xbeae411]
  415091:	out    dx,al
  415092:	sbb    al,0xe0
  415094:	mov    al,0x6f
  415096:	ds (bad) 
  415098:	and    al,BYTE PTR [eax]
  41509a:	enter  0x3dc4,0x9f
  41509e:	dec    edi
  41509f:	(bad)  
  4150a0:	jns    0x415039
  4150a2:	out    0xed,eax
  4150a4:	pop    ds
  4150a5:	(bad)  
  4150a6:	fwait
  4150a7:	adc    eax,0xb209c72f
  4150ac:	dec    edi
  4150ad:	je     0x41503a
  4150af:	mov    ds:0xb82e5220,al
  4150b4:	mov    WORD PTR [eax],cs
  4150b6:	outs   dx,BYTE PTR ds:[esi]
  4150b7:	popf   
  4150b8:	mov    eax,0xb483460a
  4150bd:	sbb    DWORD PTR [ebx+0x2c],ebp
  4150c0:	loop   0x41511d
  4150c2:	pop    edi
  4150c3:	mov    al,0x98
  4150c5:	push   ds
  4150c6:	ror    ah,1
  4150c8:	in     eax,dx
  4150c9:	test   BYTE PTR [edx],dh
  4150cb:	lds    ebp,FWORD PTR [ecx-0x16ccadfa]
  4150d1:	sti    
  4150d2:	addr16 fs popa 
  4150d5:	popa   
  4150d6:	bound  esp,QWORD PTR [ebx+0x28]
  4150d9:	adc    edi,0xffffff89
  4150dc:	jns    0x4150a7
  4150de:	mov    ds:0x5bd24cad,eax
  4150e3:	sub    ecx,esi
  4150e5:	mov    cs:0x4b2c03ad,eax
  4150eb:	repz inc eax
  4150ed:	cld    
  4150ee:	(bad)  
  4150ef:	imul   esi,DWORD PTR [ebx-0x6c],0xffffff87
  4150f3:	xchg   BYTE PTR [esp-0x3193a99d],dl
  4150fa:	sub    BYTE PTR [ebx],dh
  4150fc:	add    al,0x84
  4150fe:	mov    al,ds:0x681a899b
  415103:	mov    ch,0x58
  415105:	push   0x50
  415107:	repnz pop DWORD PTR [si+0x314d]
  41510d:	xor    eax,0xf1ff57c7
  415112:	sbb    edx,eax
  415114:	and    BYTE PTR ds:0xedd6450c,cl
  41511a:	inc    eax
  41511b:	xor    ebp,DWORD PTR [ebx-0x16]
  41511e:	sti    
  41511f:	xchg   DWORD PTR [ecx],esp
  415121:	stc    
  415122:	push   ss
  415123:	cwde   
  415124:	js     0x41511e
  415126:	and    DWORD PTR [edx+ebx*1],edi
  415129:	mov    ds:0xcefbf544,al
  41512e:	bound  ebx,QWORD PTR [edx+eiz*4+0x4e]
  415132:	dec    edi
  415133:	adc    dh,BYTE PTR [edi-0x21932aa3]
  415139:	fbstp  TBYTE PTR [edx]
  41513b:	push   ss
  41513c:	mov    ebp,0x97a2e6ab
  415141:	dec    edi
  415142:	cmp    ch,bl
  415144:	(bad)  
  415146:	mov    al,ds:0x29723d45
  41514b:	mov    ebx,0x2363fafd
  415150:	imul   esi,DWORD PTR ds:0x78ea5338,0x41
  415157:	sub    al,0xa2
  415159:	and    DWORD PTR ds:0x5893411e,0xe
  415160:	push   es
  415161:	imul   eax,esi,0x750c4a06
  415167:	pushw  0xe6ee
  41516b:	stos   DWORD PTR es:[edi],eax
  41516c:	icebp  
  41516d:	push   edi
  41516e:	pop    es
  41516f:	sbb    al,0xc0
  415171:	lahf   
  415172:	xor    ebp,edi
  415174:	jmp    0x6c4dc350
  415179:	sbb    DWORD PTR [ecx],ebx
  41517b:	outs   dx,DWORD PTR ds:[esi]
  41517c:	cwde   
  41517d:	out    0xd8,eax
  41517f:	test   dh,0x69
  415182:	imul   ebp,DWORD PTR [esi],0x73361210
  415188:	jg     0x41510c
  41518a:	ins    BYTE PTR es:[edi],dx
  41518b:	pop    es
  41518c:	scas   eax,DWORD PTR es:[edi]
  41518d:	aad    0xb2
  41518f:	or     eax,0xd852b67
  415194:	pop    ecx
  415195:	imul   ecx,DWORD PTR [edx],0xc530a0dc
  41519b:	mov    esi,0xb8873129
  4151a0:	xchg   BYTE PTR [ecx],al
  4151a2:	dec    ebp
  4151a4:	mov    bl,0xe
  4151a6:	dec    ebp
  4151a7:	out    dx,eax
  4151a8:	mov    esi,0xd56f653a
  4151ad:	call   0x6a648e66
  4151b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b3:	adc    esp,DWORD PTR [ecx]
  4151b5:	mov    cl,0xa8
  4151b7:	cmp    edi,DWORD PTR [esi-0x32]
  4151ba:	mov    eax,0x9ac88781
  4151bf:	icebp  
  4151c0:	cmp    esi,DWORD PTR [ebp-0x67]
  4151c3:	inc    ebp
  4151c4:	cmp    BYTE PTR [edx+ebp*8+0x2a],bl
  4151c8:	bound  ebx,QWORD PTR [ebp+0x12dcd7d8]
  4151ce:	jl     0x415156
  4151d0:	cmp    ebp,esi
  4151d2:	jns    0x415222
  4151d4:	jg     0x4151a9
  4151d6:	sahf   
  4151d7:	inc    ebx
  4151d8:	and    ah,BYTE PTR [edi]
  4151da:	fisttp DWORD PTR [edx+0x2bfcd4dd]
  4151e0:	mov    ch,0x57
  4151e2:	sti    
  4151e3:	jo     0x4151ae
  4151e5:	jne    0x4151f0
  4151e7:	cmp    bh,BYTE PTR [ebx+0xa0738b4]
  4151ed:	sbb    DWORD PTR [edx+0x6b],0x53fd8841
  4151f4:	cmp    esi,DWORD PTR [esi-0x488dadf3]
  4151fa:	push   es
  4151fb:	adc    al,0xa7
  4151fd:	stc    
  4151fe:	mov    al,ds:0x9e4075a9
  415203:	xchg   ecx,eax
  415204:	ins    DWORD PTR es:[edi],dx
  415205:	mov    ds:0x1a735ae1,eax
  41520a:	mov    bl,bl
  41520c:	mov    WORD PTR [ebp+0x51],cs
  41520f:	pop    esi
  415210:	scas   al,BYTE PTR es:[edi]
  415211:	rcl    DWORD PTR [ecx-0x53d0547c],0x4b
  415218:	ds dec edx
  41521a:	push   ds
  41521b:	adc    DWORD PTR [ebx-0x6511f25f],esp
  415221:	jns    0x415275
  415223:	mov    bh,0x8b
  415225:	lods   al,BYTE PTR ds:[esi]
  415226:	ret    0xfb43
  415229:	jp     0x4152a2
  41522b:	jae    0x415296
  41522d:	dec    eax
  41522e:	or     al,BYTE PTR ds:0x778cba81
  415234:	push   ebx
  415235:	inc    ebx
  415236:	dec    ebp
  415237:	imul   eax,DWORD PTR [eax+eiz*2-0x5141462d],0x43
  41523f:	xor    al,0x19
  415241:	cmp    ah,BYTE PTR [eax+0x30d57ccb]
  415247:	cmc    
  415248:	mov    ds:0xb4713e56,al
  41524d:	cmp    al,0x4b
  41524f:	sub    al,0x5c
  415251:	push   edi
  415252:	push   ebp
  415253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415254:	sti    
  415255:	mov    ?,WORD PTR [edi]
  415257:	ret    0x6ba6
  41525a:	and    al,0x90
  41525c:	stc    
  41525d:	aaa    
  41525e:	pop    ss
  41525f:	fs xchg edx,eax
  415261:	xor    BYTE PTR fs:[edi+ecx*1],bh
  415265:	sub    ch,bl
  415267:	in     al,dx
  415268:	sbb    ecx,0x7b64ecf
  41526e:	jl     0x4152bb
  415270:	adc    ebx,DWORD PTR [ecx]
  415272:	cli    
  415273:	pop    ds
  415274:	pop    ecx
  415275:	fs mov eax,0xc803971
  41527b:	push   edx
  41527c:	in     al,dx
  41527d:	leave  
  41527e:	retf   0x42ef
  415281:	xor    DWORD PTR [ecx+0x5d],edx
  415284:	cld    
  415285:	mov    ds:0x5cc355ab,eax
  41528a:	fisttp QWORD PTR [ebp+0x29088488]
  415290:	je     0x41527f
  415292:	shl    DWORD PTR [ebp+0x32],1
  415295:	add    al,0xed
  415297:	(bad)  
  415298:	ds (bad) 
  41529a:	loopne 0x415285
  41529c:	push   ecx
  41529d:	div    DWORD PTR [ebx+0x7aeab7e]
  4152a3:	and    eax,0x181df26f
  4152a8:	xchg   esp,eax
  4152a9:	inc    ebp
  4152aa:	xor    DWORD PTR ds:0xc7ab94bb,ebp
  4152b0:	and    al,0x7
  4152b2:	push   edx
  4152b3:	(bad)  
  4152b4:	pop    ebx
  4152b5:	inc    eax
  4152b6:	sar    BYTE PTR [ecx],0xe4
  4152b9:	popf   
  4152ba:	jp     0x41530e
  4152bc:	lods   al,BYTE PTR ds:[esi]
  4152bd:	repz sub dh,0x5a
  4152c1:	cmp    bh,BYTE PTR [edx-0x33]
  4152c4:	pop    edx
  4152c5:	xor    ecx,DWORD PTR [ebx]
  4152c7:	or     BYTE PTR [esi+0x69],ah
  4152ca:	addr16 int3 
  4152cc:	call   DWORD PTR [esi+edx*8+0xf]
  4152d0:	and    al,0x16
  4152d2:	mov    ebp,0xbaa467ea
  4152d7:	popa   
  4152d8:	in     eax,dx
  4152d9:	test   BYTE PTR [ebp+edx*4+0x38af5b26],cl
  4152e0:	adc    eax,0x62a96e5d
  4152e5:	es in  al,0x8c
  4152e8:	xchg   edx,eax
  4152e9:	ins    DWORD PTR es:[edi],dx
  4152ea:	ins    DWORD PTR es:[edi],dx
  4152eb:	push   es
  4152ec:	ret    
  4152ed:	cli    
  4152ee:	lock adc cl,BYTE PTR [eax]
  4152f1:	in     al,dx
  4152f2:	test   DWORD PTR [esi+0x2d],esi
  4152f5:	adc    eax,0xf6c147cb
  4152fa:	mov    cl,0x74
  4152fc:	push   eax
  4152fd:	mov    ebx,0x3d50912a
  415302:	sbb    BYTE PTR [ebx-0x3b],bl
  415305:	mov    eax,ebp
  415307:	mov    al,0xf2
  415309:	fiadd  WORD PTR [esi-0x4b]
  41530c:	sub    BYTE PTR [edx+ebx*1+0x43],ah
  415310:	call   FWORD PTR [ecx]
  415312:	fiadd  DWORD PTR [edx]
  415314:	push   esi
  415315:	jmp    0x1434d13a
  41531a:	rcl    WORD PTR [ebx+0x4581b8b9],0x57
  415322:	sbb    BYTE PTR [edi-0x4f],cl
  415325:	and    al,0xc9
  415327:	mov    edx,ebx
  415329:	enter  0xf2fa,0x44
  41532d:	fdiv   st(6),st
  41532f:	aam    0xc4
  415331:	mov    eax,ds:0xb9fa629a
  415336:	sub    al,0x1e
  415338:	(bad)  
  41533a:	mov    ds:0xd9474226,al
  41533f:	xor    ch,BYTE PTR [edi-0x170fc802]
  415345:	pusha  
  415346:	push   ebp
  415347:	cmp    bh,BYTE PTR [esi-0x47]
  41534a:	int3   
  41534b:	mov    es,WORD PTR [edi+0x52583602]
  415351:	scas   al,BYTE PTR es:[edi]
  415352:	(bad)  [ebp+0x1afb86d1]
  415358:	jmp    0x4153c0
  41535a:	or     eax,DWORD PTR [esi]
  41535c:	sbb    DWORD PTR [ebx+edi*4-0x3bf6da16],edx
  415363:	pop    edi
  415364:	mov    ah,0x9b
  415366:	enter  0x7878,0xfa
  41536a:	mov    WORD PTR [eax-0x17452716],?
  415370:	add    al,0x6b
  415372:	jle    0x415346
  415374:	clc    
  415375:	jbe    0x41531c
  415377:	fwait
  415378:	(bad)  
  415379:	dec    edi
  41537a:	les    eax,FWORD PTR ds:[edi-0x58]
  41537e:	jmp    0xcf49:0x3d58621d
  415385:	test   BYTE PTR [eax+0x44e73f8a],0xae
  41538c:	ins    BYTE PTR es:[edi],dx
  41538d:	mov    DWORD PTR [esi+ebx*4-0x21],edx
  415391:	retf   0x35dd
  415394:	shr    bh,1
  415396:	lods   eax,DWORD PTR ds:[esi]
  415397:	fsubr  QWORD PTR [eax]
  415399:	(bad)
  41539c:	push   ss
  41539d:	aad    0xbb
  41539f:	add    eax,0xc926f378
  4153a4:	adc    bl,cl
  4153a6:	jle    0x4153f5
  4153a8:	(bad)  [esi]
  4153aa:	add    edx,DWORD PTR [edi+0x13401f42]
  4153b0:	mov    bl,bl
  4153b2:	nop
  4153b3:	push   es
  4153b4:	add    BYTE PTR [eax+0x21],dh
  4153b7:	adc    ebx,DWORD PTR [esp+esi*4+0x2b5714a2]
  4153be:	cli    
  4153bf:	cmp    dl,BYTE PTR [eax-0x2912e6e5]
  4153c5:	cmp    ecx,DWORD PTR [edx+0x2b]
  4153c8:	mov    ebx,0x12a56260
  4153cd:	mov    WORD PTR [ebx+0x5c],ss
  4153d0:	push   eax
  4153d1:	mov    ecx,ss
  4153d3:	mov    al,ds:0x35db4195
  4153d8:	push   esi
  4153d9:	inc    esi
  4153da:	adc    BYTE PTR [ecx-0x1cc5140b],ch
  4153e0:	sbb    edx,eax
  4153e2:	fsub   DWORD PTR [ebp-0x26]
  4153e5:	sbb    esi,DWORD PTR [ecx-0x2128d0b4]
  4153eb:	fwait
  4153ec:	(bad)  
  4153ed:	cmp    eax,0x63f8520
  4153f2:	xor    eax,0x8585a78d
  4153f7:	cmc    
  4153f8:	icebp  
  4153f9:	sub    bl,BYTE PTR [ebx+0x3d6648ed]
  4153ff:	daa    
  415400:	data16 or al,0xb6
  415403:	pushf  
  415404:	jae    0x4153b4
  415406:	cmc    
  415407:	out    dx,eax
  415408:	mov    ch,0xa6
  41540a:	fldenv [esi+esi*1]
  41540d:	(bad)  
  41540e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41540f:	aaa    
  415410:	ror    al,0xc3
  415413:	mov    ah,0x7d
  415415:	mov    cl,0xe9
  415417:	mov    al,ah
  415419:	int3   
  41541a:	sub    cl,cl
  41541c:	(bad)
  415420:	and    eax,0xb8072307
  415425:	es push esp
  415427:	xchg   esp,eax
  415428:	lods   eax,DWORD PTR ds:[esi]
  415429:	jo     0x41542c
  41542b:	loopne 0x415471
  41542d:	mov    cl,0xea
  41542f:	repnz fldenv [eax-0x76]
  415433:	sbb    cl,BYTE PTR [eax-0x60]
  415436:	shl    edx,1
  415438:	push   es
  415439:	xchg   esi,eax
  41543a:	std    
  41543b:	popf   
  41543c:	out    dx,eax
  41543d:	push   ss
  41543e:	std    
  41543f:	cwde   
  415440:	sbb    eax,0x2fa9e26
  415445:	enter  0xf376,0x96
  415449:	loopne 0x41548f
  41544b:	cmp    ebx,DWORD PTR [esi-0x5d0f575]
  415451:	fdivr  DWORD PTR [edi]
  415453:	xchg   esi,eax
  415454:	(bad)  
  415455:	aas    
  415456:	jg     0x41544c
  415458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415459:	mov    bl,0x54
  41545b:	cmp    ch,BYTE PTR [edx+esi*4+0x599f9e92]
  415462:	jbe    0x415422
  415464:	and    cl,al
  415466:	aad    0x61
  415468:	add    edi,ebp
  41546a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41546b:	mov    cl,0xf6
  41546d:	pop    es
  41546e:	pushf  
  41546f:	call   0xac2d:0xe3f909a8
  415476:	mov    ds:0x7931e777,al
  41547b:	cmp    al,0x6b
  41547d:	or     al,0xc7
  41547f:	or     DWORD PTR [edx+0x75d18569],ebp
  415485:	push   edx
  415486:	or     bl,BYTE PTR [ebx+ebp*4+0xa1baacf]
  41548d:	xor    eax,edx
  41548f:	dec    ebx
  415490:	or     BYTE PTR [ecx],cl
  415492:	js     0x4154ac
  415494:	in     eax,0xf9
  415496:	loopne 0x415460
  415498:	or     eax,esi
  41549a:	es ret 0xfff8
  41549e:	adc    BYTE PTR [ebp-0x51bcb71c],ch
  4154a4:	aam    0xa9
  4154a6:	adc    DWORD PTR [eax+0x4e],esi
  4154a9:	jp     0x415514
  4154ab:	pop    ebp
  4154ac:	sbb    DWORD PTR [esi+eiz*2],eax
  4154af:	mov    edi,0xa4ace99f
  4154b4:	jl     0x4154d3
  4154b6:	push   edi
  4154b7:	push   edx
  4154b8:	fwait
  4154b9:	sti    
  4154ba:	mov    WORD PTR [ecx+0x31],?
  4154bd:	js     0x415496
  4154bf:	add    al,0x4e
  4154c1:	or     edx,DWORD PTR [edi]
  4154c3:	stos   BYTE PTR es:[edi],al
  4154c4:	adc    eax,0x2c2c3695
  4154c9:	jne    0x4154c6
  4154cb:	in     al,dx
  4154cc:	mov    esi,0x96da8d75
  4154d1:	ret    0xa8d9
  4154d4:	mov    cl,0x7d
  4154d6:	cmp    al,0xb0
  4154d8:	cmp    eax,esi
  4154da:	mov    ecx,0xc9284e5b
  4154df:	leave  
  4154e0:	jnp    0x415498
  4154e2:	adc    BYTE PTR ds:0xa83c8eff,bh
  4154e8:	clc    
  4154e9:	(bad)  
  4154ea:	adc    DWORD PTR [eax+esi*4+0x9],ecx
  4154ee:	jmp    0x84917c01
  4154f3:	cdq    
  4154f4:	pop    edx
  4154f5:	ss jl  0x41550e
  4154f8:	fist   DWORD PTR [ebx+0x2b1d126c]
  4154fe:	push   esi
  4154ff:	mov    ebx,0xa594d12d
  415504:	pop    esi
  415505:	add    eax,edi
  415507:	scas   eax,DWORD PTR es:[edi]
  415508:	inc    esp
  415509:	fisubr WORD PTR [edx-0x2b39bf33]
  41550f:	mov    dl,0x37
  415511:	and    al,0x6
  415513:	or     ebx,DWORD PTR [ebx-0xb]
  415516:	dec    ecx
  415517:	fsubp  st(6),st
  415519:	nop
  41551a:	jge    0x4154ee
  41551c:	das    
  41551d:	retf   0x7256
  415520:	inc    edx
  415521:	push   eax
  415522:	mov    bl,0xad
  415524:	xchg   esp,esi
  415526:	aam    0x67
  415528:	daa    
  415529:	icebp  
  41552a:	ret    
  41552b:	cmp    al,0xf2
  41552d:	aad    0xc3
  41552f:	stos   BYTE PTR es:[edi],al
  415530:	jns    0x4154c6
  415532:	cmp    BYTE PTR [ebx+0x41],ah
  415535:	jo     0x41557b
  415537:	xchg   ebp,eax
  415538:	jmp    0x415528
  41553a:	loop   0x41552c
  41553c:	jae    0x41557e
  41553e:	adc    eax,0x79408b07
  415543:	inc    ecx
  415544:	or     eax,0x3948ec30
  415549:	das    
  41554a:	sub    edx,DWORD PTR [ecx-0x610bcada]
  415550:	rcl    DWORD PTR [edx-0x31a1427f],1
  415556:	add    eax,0x56ade05b
  41555b:	mov    al,ds:0xa21d96b2
  415560:	push   0x44b35885
  415565:	das    
  415566:	jne    0x415593
  415568:	in     eax,0x29
  41556a:	mov    bl,0x25
  41556c:	not    BYTE PTR [eax+0x5b]
  41556f:	test   DWORD PTR [edi],edi
  415571:	inc    esi
  415572:	pusha  
  415573:	mov    eax,ds:0x67c71662
  415578:	call   0xb553:0x9bb7eaf6
  41557f:	into   
  415580:	popf   
  415581:	or     eax,0x1b6563d8
  415586:	stos   DWORD PTR es:[edi],eax
  415587:	loopne 0x415511
  415589:	cld    
  41558a:	or     DWORD PTR [edi+0x70223d26],0xbdb4541b
  415594:	mov    esp,0x8ba61b2f
  415599:	mov    edx,0x7d8fab73
  41559e:	mov    bl,0xc1
  4155a0:	mov    esi,0xbca4f3fa
  4155a5:	imul   esp,DWORD PTR [edi+0x39a15ffd],0x2d
  4155ac:	xor    ah,BYTE PTR [edx-0x6f]
  4155af:	test   al,0xf2
  4155b1:	stc    
  4155b2:	add    edi,DWORD PTR [ebp-0x1e76311c]
  4155b8:	outs   dx,DWORD PTR ds:[esi]
  4155b9:	push   0x55a339d0
  4155be:	and    DWORD PTR ds:0x7a292030,0xfffffff7
  4155c5:	js     0x415602
  4155c7:	frstor [ecx-0x72]
  4155ca:	and    al,0x67
  4155cc:	int3   
  4155cd:	xchg   ebp,eax
  4155ce:	jnp    0x415624
  4155d0:	mov    edx,0x3dffa49
  4155d5:	mov    edi,0x41324eb0
  4155da:	push   ss
  4155db:	gs scas eax,DWORD PTR es:[edi]
  4155dd:	imul   eax,DWORD PTR [eax],0x49
  4155e0:	sub    BYTE PTR [esi],bh
  4155e2:	pusha  
  4155e3:	sbb    ecx,ecx
  4155e5:	(bad)  
  4155e7:	mov    BYTE PTR [edi-0x65],dh
  4155ea:	mov    eax,ds:0xc439aa09
  4155ef:	ds in  al,dx
  4155f1:	aaa    
  4155f2:	xor    DWORD PTR [eax+0x73],edx
  4155f5:	jae    0x41566c
  4155f7:	repnz mov esp,DWORD PTR [ebx+0x27]
  4155fb:	in     al,0xb6
  4155fd:	retf   0xe049
  415600:	les    ecx,FWORD PTR [ebx+0x418de0ad]
  415606:	ss mov ebp,0xceeb75f0
  41560c:	sbb    ebx,DWORD PTR [ebx+0x7c]
  41560f:	adc    al,0x38
  415611:	push   edx
  415612:	es inc edi
  415614:	mov    DWORD PTR [edx-0x654c714],edi
  41561a:	(bad)  
  41561b:	(bad)  
  41561d:	pop    ebp
  41561e:	jg     0x41567d
  415620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415621:	retf   0x91e9
  415624:	or     BYTE PTR [edx+ecx*8+0x12],0x7e
  415629:	adc    eax,0xf1af3d15
  41562e:	inc    esp
  415630:	dec    ebx
  415631:	aam    0xf7
  415633:	mov    BYTE PTR [eax+0x7e],dh
  415636:	sti    
  415637:	jae    0x4155e1
  415639:	sbb    eax,0xb561608d
  41563e:	pop    esi
  41563f:	gs (bad) 
  415641:	dec    esp
  415642:	inc    ebx
  415643:	das    
  415644:	mov    eax,ds:0xecf7f66f
  415649:	mov    edi,0x4f03bbd7
  41564e:	sbb    eax,0x6f3ae2cc
  415653:	adc    BYTE PTR [eax+0x33],bh
  415656:	mov    ecx,edx
  415658:	pusha  
  415659:	imul   ebp,DWORD PTR [ebx+0x1f],0xffffffe1
  41565d:	cmp    BYTE PTR [esp+ebp*2+0x666cced3],al
  415664:	jecxz  0x4156a9
  415666:	gs add al,0x54
  415669:	jb     0x415610
  41566b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41566c:	out    dx,al
  41566d:	jmp    DWORD PTR [ebp+0x42]
  415670:	and    esi,DWORD PTR [edi]
  415672:	mov    dh,0xf9
  415674:	sub    al,0xb9
  415676:	inc    esi
  415677:	adc    esi,DWORD PTR [ecx-0x47]
  41567a:	xchg   esi,eax
  41567b:	and    esp,DWORD PTR [edx]
  41567d:	mov    dh,0xe4
  41567f:	cld    
  415680:	mov    ds:0x219eaa6e,al
  415685:	ret    0xf328
  415688:	push   0x422d46d5
  41568d:	cmp    al,0x5e
  41568f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415691:	test   DWORD PTR [ebx-0x6473b36a],esi
  415697:	jne    0x415650
  415699:	je     0x41568b
  41569b:	mov    ds:0x53a921b1,al
  4156a0:	sbb    eax,0xc238c3da
  4156a5:	inc    esp
  4156a6:	sbb    al,0xa8
  4156a8:	ror    BYTE PTR [edi+edi*1+0x61891b30],0xba
  4156b0:	mov    ds:0x2bf5ce7,al
  4156b5:	cwde   
  4156b6:	int3   
  4156b7:	call   0xf8c9:0xc17160eb
  4156be:	scas   eax,DWORD PTR es:[edi]
  4156bf:	jp     0x415696
  4156c1:	mov    eax,0x444082d4
  4156c6:	pusha  
  4156c7:	dec    ebp
  4156c8:	push   esi
  4156c9:	xor    eax,0xb11404dd
  4156ce:	xlat   BYTE PTR ds:[ebx]
  4156cf:	and    al,0xf7
  4156d1:	push   edx
  4156d2:	clc    
  4156d3:	mov    BYTE PTR [eax+0x66],cl
  4156d6:	adc    al,0xa3
  4156d8:	push   edx
  4156d9:	mov    bl,0x47
  4156db:	out    0xef,al
  4156dd:	mov    ecx,0x68c0e60c
  4156e2:	outs   dx,DWORD PTR ds:[esi]
  4156e3:	push   cs
  4156e4:	cmp    al,0x7
  4156e6:	out    0x12,al
  4156e8:	gs addr16 std 
  4156eb:	aam    0xb1
  4156ed:	push   ecx
  4156ee:	xchg   esp,eax
  4156ef:	int3   
  4156f0:	mov    edx,0x932564c7
  4156f5:	das    
  4156f6:	xchg   esi,eax
  4156f7:	das    
  4156f8:	int3   
  4156f9:	sbb    al,BYTE PTR [ebx]
  4156fb:	popf   
  4156fc:	stos   DWORD PTR es:[edi],eax
  4156fd:	sahf   
  4156fe:	cmc    
  4156ff:	ror    DWORD PTR [ebp+0x6b71d723],cl
  415705:	and    eax,0x4061a530
  41570a:	shl    BYTE PTR [ebx+0x70c005ba],0x4b
  415711:	bound  esp,QWORD PTR [edi-0x2b1527a7]
  415717:	mov    bh,0x42
  415719:	gs call 0x78a:0x5dc7f55f
  415721:	mov    bl,0x79
  415723:	inc    BYTE PTR [edi-0x5f]
  415726:	sub    eax,0x7aa5c454
  41572b:	fbstp  TBYTE PTR [ecx]
  41572d:	aam    0x3e
  41572f:	jle    0x4157a6
  415731:	jne    0x415757
  415733:	ins    DWORD PTR es:[edi],dx
  415734:	cdq    
  415735:	mov    ch,0x9a
  415737:	pop    eax
  415738:	jge    0x41570a
  41573a:	push   ecx
  41573b:	mov    esp,0x14a42091
  415740:	add    al,BYTE PTR [ecx+0x0]
  415743:	jne    0x4157c1
  415745:	cmp    ah,BYTE PTR [edi-0x3e]
  415748:	ror    DWORD PTR [edi+0x3e18ca08],0x8b
  41574f:	xchg   ecx,eax
  415750:	mov    esi,0x30a8f024
  415755:	xchg   ebp,eax
  415756:	and    ch,0xa6
  415759:	or     DWORD PTR ss:[edi],edi
  41575c:	imul   ebp,DWORD PTR [ecx-0x6],0x2d
  415760:	and    eax,0x17b72df3
  415765:	(bad)  
  415766:	pop    ss
  415767:	mov    ch,0xdb
  415769:	leave  
  41576a:	scas   al,BYTE PTR es:[edi]
  41576b:	xor    ebp,ebp
  41576d:	jle    0x415796
  41576f:	test   al,0xe3
  415771:	xor    ebx,DWORD PTR [ebp+0x78125b4c]
  415777:	xor    eax,0x9af34074
  41577c:	jb     0x415759
  41577e:	jmp    0x4157a0
  415780:	stc    
  415781:	add    DWORD PTR [esi+0x4b],edi
  415784:	adc    al,0x37
  415786:	sub    BYTE PTR [ebp-0x13f3c667],bl
  41578c:	retf   0x8ba1
  41578f:	cmp    dh,BYTE PTR [eax]
  415791:	mov    ecx,0x82078572
  415796:	mov    edi,0xd7f62ee
  41579b:	adc    al,BYTE PTR [ebp-0x77]
  41579e:	outs   dx,DWORD PTR ds:[esi]
  41579f:	cs jl  0x415762
  4157a2:	aaa    
  4157a3:	into   
  4157a4:	cmp    eax,0xf3b44c77
  4157a9:	mov    ch,0x80
  4157ab:	and    ecx,edx
  4157ad:	push   esp
  4157ae:	mov    edi,0xa1b12df4
  4157b3:	ret    0xa084
  4157b6:	shr    BYTE PTR [ebx-0x2b],cl
  4157b9:	in     eax,dx
  4157ba:	loopne 0x415831
  4157bc:	mov    eax,ds:0xce321af8
  4157c1:	fs pop bp
  4157c4:	or     eax,0x1c8cca1a
  4157c9:	cmp    BYTE PTR [edx],ch
  4157cb:	cmp    al,0x8c
  4157cd:	pop    edi
  4157ce:	shr    BYTE PTR [esi],cl
  4157d0:	mov    ah,0x93
  4157d2:	mov    esi,0x88f0273d
  4157d7:	jb     0x41581e
  4157d9:	pop    es
  4157da:	sbb    eax,0x46b89a2c
  4157df:	push   ds
  4157e0:	aas    
  4157e1:	or     eax,0x47debd47
  4157e6:	or     BYTE PTR [eax-0x9],ch
  4157e9:	cmp    DWORD PTR [ecx-0x55],esp
  4157ec:	sti    
  4157ed:	or     dh,BYTE PTR [esi+0x394d63aa]
  4157f3:	popa   
  4157f4:	sbb    eax,0xbd2f5dbb
  4157f9:	es int3 
  4157fb:	add    eax,0x17629847
  415801:	mov    edx,eax
  415803:	mov    BYTE PTR [edi-0x4b],cl
  415806:	call   0xc18e43e
  41580b:	ins    DWORD PTR es:[edi],dx
  41580c:	das    
  41580d:	imul   ebx,DWORD PTR [edx],0x12
  415810:	sub    ebx,esp
  415812:	ret    0x2d2f
  415815:	push   es
  415816:	imul   eax,DWORD PTR [esi+0x1c737f60],0xfffffff2
  41581d:	mov    ecx,0x3652ca4b
  415822:	and    al,0xd1
  415824:	inc    esi
  415825:	jbe    0x41582f
  415827:	or     esp,DWORD PTR [esi]
  415829:	or     eax,0xb617e2b3
  41582e:	test   ch,0x83
  415831:	pop    ds
  415832:	add    eax,0xf274eb7b
  415837:	ficomp DWORD PTR [ebx+0x58e0f22d]
  41583d:	add    ebp,DWORD PTR [eax+0x64bbf22c]
  415843:	popf   
  415844:	(bad)  
  415846:	aaa    
  415847:	addr16 ds jne 0x41584d
  41584b:	call   0x3dc2fa96
  415850:	lods   al,BYTE PTR ds:[esi]
  415851:	lea    edi,[esi+0x165d4f88]
  415857:	imul   edi,DWORD PTR [esp+ecx*1],0x59
  41585b:	mov    ds:0x436b0b5b,al
  415860:	push   edi
  415861:	push   0xffffffc5
  415863:	ret    
  415864:	inc    ebx
  415865:	push   edi
  415866:	inc    edi
  415867:	inc    edx
  415868:	add    al,0xaf
  41586a:	add    esi,DWORD PTR [edx+0x50e3795f]
  415870:	add    DWORD PTR [eax],0xffffffc3
  415873:	iret   
  415874:	jbe    0x415830
  415876:	cmp    BYTE PTR [eax-0x6a],dh
  415879:	repz jbe 0x41585a
  41587c:	nop
  41587d:	repz mov cs,WORD PTR [edi+0x3413d774]
  415884:	in     al,0x89
  415886:	sbb    BYTE PTR [ebp+0x4c],0xec
  41588a:	ss jnp 0x4158ca
  41588d:	mov    ds:0x78738c5c,eax
  415892:	sbb    DWORD PTR [ebx],edi
  415894:	inc    ebp
  415895:	cdq    
  415896:	loop   0x41583f
  415898:	dec    eax
  415899:	retf   
  41589a:	mov    eax,eax
  41589c:	mov    edx,0x8f43e2c3
  4158a1:	push   0x22f41556
  4158a6:	adc    BYTE PTR [ecx+0xc5e0c3d],dh
  4158ac:	fisub  WORD PTR [edi]
  4158ae:	(bad)  
  4158af:	xchg   BYTE PTR fs:[ecx+ebx*1-0x7d00671d],dl
  4158b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b8:	jge    0x4158a0
  4158ba:	pop    edx
  4158bb:	je     0x4158fa
  4158bd:	stos   BYTE PTR es:[edi],al
  4158be:	xchg   BYTE PTR [ecx-0x3c89e8bc],dl
  4158c4:	rol    BYTE PTR ds:0x421fb835,cl
  4158ca:	xor    eax,0xcf92cd27
  4158cf:	jg     0x4158d5
  4158d1:	test   BYTE PTR [edi+0x290cd0e9],bl
  4158d7:	lahf   
  4158d8:	jnp    0x415959
  4158da:	ror    BYTE PTR [edx+ebx*4],1
  4158dd:	into   
  4158de:	pop    ecx
  4158df:	sub    DWORD PTR [esi-0x7c48c78a],edx
  4158e5:	sub    al,0x6
  4158e7:	fstp   QWORD PTR [ecx+0x5a]
  4158ea:	std    
  4158eb:	outs   dx,DWORD PTR ds:[esi]
  4158ec:	call   0x6b20:0x8530cf40
  4158f3:	les    eax,FWORD PTR [ecx+0x79]
  4158f6:	pop    edi
  4158f7:	cmp    ah,BYTE PTR [eax]
  4158f9:	mov    ah,0x76
  4158fb:	mov    ebp,DWORD PTR [ebp-0x49]
  4158fe:	sti    
  4158ff:	cmp    DWORD PTR [esi-0x37],ebp
  415902:	inc    eax
  415903:	mov    dh,0xe2
  415905:	mov    ds:0x5d2edc1,eax
  41590a:	jae    0x415952
  41590c:	jne    0x41594b
  41590e:	mov    DWORD PTR [ebp+0x73],ebx
  415911:	jae    0x41595d
  415913:	aad    0x9c
  415915:	fadd   DWORD PTR [eax-0x56]
  415918:	cdq    
  415919:	das    
  41591a:	add    esp,DWORD PTR [esp+edi*2-0x14]
  41591e:	mov    cl,0x8a
  415920:	push   ebp
  415921:	sub    al,0x84
  415923:	sar    BYTE PTR [eax+0x3254a38b],1
  415929:	pop    ecx
  41592a:	jae    0x4158c4
  41592c:	push   esi
  41592d:	lods   al,BYTE PTR ds:[esi]
  41592e:	cmp    BYTE PTR [esi],ch
  415930:	cmp    cl,dh
  415932:	and    eax,DWORD PTR [esp+eiz*8+0x300d48b]
  415939:	in     eax,dx
  41593a:	cmp    BYTE PTR [eax+0xb],cl
  41593d:	stos   DWORD PTR es:[edi],eax
  41593e:	jnp    0x4159b1
  415940:	cmp    edx,DWORD PTR [eax]
  415942:	pop    ds
  415943:	adc    al,0x7a
  415945:	imul   esp,DWORD PTR [ecx-0xc],0xfffffff1
  415949:	cmc    
  41594a:	in     eax,dx
  41594b:	sbb    al,0x60
  41594d:	fistp  QWORD PTR [ebx+0x7f]
  415950:	and    ecx,DWORD PTR [ebx-0x35]
  415953:	cmp    eax,0xd2fdf1fd
  415958:	cmp    al,0x12
  41595a:	add    dl,BYTE PTR [esi]
  41595c:	mov    bl,BYTE PTR [ebx+0x71]
  41595f:	loope  0x41593b
  415961:	std    
  415962:	jae    0x415906
  415964:	push   edi
  415965:	mov    cl,0xc1
  415967:	sbb    bl,ah
  415969:	popa   
  41596a:	dec    esp
  41596b:	and    al,0xc7
  41596d:	fs mov eax,0x6245a9a0
  415973:	push   ebx
  415974:	inc    ecx
  415975:	mov    edx,0x9a69d8eb
  41597a:	cmp    BYTE PTR [edx+ecx*4],ah
  41597d:	js     0x415901
  41597f:	dec    esp
  415980:	pop    ebp
  415981:	adc    DWORD PTR ds:0xa851e5cf,ecx
  415987:	int    0x4b
  415989:	or     al,0x3a
  41598b:	mov    dl,0x80
  41598d:	adc    bh,BYTE PTR [ebx]
  41598f:	xchg   edx,eax
  415990:	mov    al,0x38
  415992:	push   esp
  415993:	xchg   esp,eax
  415994:	js     0x415978
  415996:	sub    ebx,DWORD PTR [edx]
  415998:	out    dx,al
  415999:	pop    eax
  41599a:	(bad)  
  41599b:	stc    
  41599c:	sti    
  41599d:	sub    al,0xd5
  41599f:	pop    ebp
  4159a0:	enter  0x53cf,0x91
  4159a4:	mov    esi,0xdb278340
  4159a9:	out    dx,al
  4159aa:	add    ebx,DWORD PTR [edx-0x1e]
  4159ad:	cmp    al,0x54
  4159af:	or     DWORD PTR [ebp+0x305ebc72],edx
  4159b5:	nop    DWORD PTR [esi]
  4159b8:	fs mov ch,bl
  4159bb:	lds    ecx,FWORD PTR [ecx+0x33]
  4159be:	jmp    0x5027:0xe623898d
  4159c5:	out    dx,eax
  4159c6:	jns    0x4159ca
  4159c8:	pop    ebx
  4159c9:	dec    esp
  4159ca:	(bad)  
  4159cc:	test   BYTE PTR [ebp+0x53],0xe
  4159d0:	inc    ebx
  4159d1:	imul   ecx,DWORD PTR [edi+0x3d],0x24
  4159d5:	jno    0x4159cc
  4159d7:	shl    BYTE PTR [edi],cl
  4159d9:	outs   dx,BYTE PTR ds:[esi]
  4159da:	jbe    0x4159fc
  4159dc:	sbb    eax,0xde3a6dc5
  4159e1:	call   0xe986:0x5dcc2e0f
  4159e8:	cld    
  4159e9:	out    dx,eax
  4159ea:	lds    ebp,FWORD PTR [eax-0x342c943a]
  4159f0:	mov    esi,0x8724a243
  4159f5:	iret   
  4159f6:	jl     0x415a59
  4159f8:	gs in  eax,dx
  4159fa:	push   ds
  4159fb:	mov    al,ds:0x746ad936
  415a00:	aas    
  415a01:	mov    eax,ds:0x6ce4669
  415a06:	xchg   ebp,eax
  415a07:	mov    ecx,0x8be278c9
  415a0c:	cmp    cl,BYTE PTR [ebp-0x1e00a47f]
  415a12:	jge    0x4159a1
  415a14:	popa   
  415a15:	xor    eax,0x82fa137a
  415a1a:	fnstenv [edi-0x7e8b640e]
  415a20:	xor    esi,ebx
  415a22:	scas   al,BYTE PTR es:[edi]
  415a23:	ins    BYTE PTR es:[edi],dx
  415a24:	cmp    eax,0x7928d83c
  415a29:	fwait
  415a2a:	pop    ebp
  415a2b:	xchg   esp,eax
  415a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a2d:	inc    ebx
  415a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2f:	fnstenv ds:0x631669b1
  415a35:	push   ss
  415a36:	push   eax
  415a37:	pop    edi
  415a38:	std    
  415a39:	mov    ch,0x57
  415a3b:	imul   edi,DWORD PTR [ebx+ebp*8+0x1e3cd2d0],0xbbaf772e
  415a46:	xchg   edx,eax
  415a47:	jl     0x4159da
  415a49:	pop    es
  415a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4b:	add    edi,0xfffffffc
  415a4e:	scas   al,BYTE PTR es:[edi]
  415a4f:	shr    BYTE PTR [ebp-0x698122a7],1
  415a55:	sub    BYTE PTR [edi],cl
  415a57:	(bad)  
  415a58:	shl    BYTE PTR [ebx+0x2311712e],cl
  415a5e:	xchg   edx,eax
  415a5f:	fimul  DWORD PTR [esp+ebp*2+0x13]
  415a63:	jnp    0x4159eb
  415a65:	(bad)  
  415a67:	popa   
  415a68:	jp     0x415a3c
  415a6a:	sub    eax,0x2c40cc8a
  415a6f:	mov    cl,0xe0
  415a71:	clc    
  415a72:	sub    al,0xde
  415a74:	sub    DWORD PTR [edx-0x54],edx
  415a77:	jle    0x415aaa
  415a79:	aas    
  415a7a:	out    0x60,eax
  415a7c:	pop    eax
  415a7d:	push   es
  415a7e:	cmp    al,0xc7
  415a80:	cmp    bl,BYTE PTR [esi+0x4321c4ba]
  415a86:	xor    BYTE PTR [eax+0x65],bh
  415a89:	and    eax,0xc1643182
  415a8e:	mov    bl,BYTE PTR [edi+0x64]
  415a91:	jb     0x415a63
  415a93:	or     eax,0x85f4ed47
  415a98:	dec    esi
  415a99:	pop    ecx
  415a9a:	pop    ebp
  415a9b:	repz int3 
  415a9d:	jmp    0x415ac6
  415a9f:	mov    ah,0x98
  415aa1:	dec    esi
  415aa2:	std    
  415aa3:	jle    0x415a36
  415aa5:	call   0x5815:0x4a18e336
  415aac:	enter  0x79c2,0x4d
  415ab0:	push   ecx
  415ab1:	pop    ds
  415ab2:	add    ch,cl
  415ab4:	mov    dh,0xc3
  415ab6:	push   ecx
  415ab7:	int    0x28
  415ab9:	jns    0x415b17
  415abb:	pusha  
  415abc:	sub    eax,0x4f5499f4
  415ac1:	aam    0xcd
  415ac3:	rcr    BYTE PTR [eax],0xf
  415ac6:	or     eax,0x4d9e68e7
  415acb:	arpl   WORD PTR ds:0xb920e657,bx
  415ad1:	inc    ebp
  415ad2:	in     al,dx
  415ad3:	add    eax,0xba7d91c4
  415ad8:	rcl    BYTE PTR [ecx+0x31f8a38a],0x32
  415adf:	shl    DWORD PTR [edx-0x672a02fd],cl
  415ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ae6:	dec    eax
  415ae7:	mov    bh,BYTE PTR [ecx+0x64bec599]
  415aed:	das    
  415aee:	in     al,dx
  415aef:	das    
  415af0:	daa    
  415af1:	lock hlt 
  415af3:	jmp    0x415b5d
  415af5:	dec    edi
  415af6:	add    al,0xe5
  415af8:	add    al,0xa3
  415afa:	aam    0x54
  415afc:	js     0x415aa6
  415afe:	lods   eax,DWORD PTR ds:[esi]
  415aff:	jle    0x415af6
  415b01:	leave  
  415b02:	hlt    
  415b03:	jbe    0x415ae9
  415b05:	add    bh,dh
  415b07:	xchg   BYTE PTR [ecx-0x16],dh
  415b0a:	inc    edx
  415b0b:	imul   ebx,DWORD PTR [eax*4-0x7e1672fd],0x29c5651f
  415b16:	aad    0xfd
  415b18:	push   esp
  415b19:	pop    ebx
  415b1a:	pop    es
  415b1b:	out    dx,al
  415b1c:	int    0xb1
  415b1e:	jmp    DWORD PTR [ebx-0x62]
  415b21:	sub    dh,0xb
  415b24:	pop    esi
  415b25:	inc    edi
  415b26:	add    DWORD PTR [edi+0x2dd08b34],esi
  415b2c:	ds push ebx
  415b2e:	push   ds
  415b2f:	push   cs
  415b30:	inc    edx
  415b31:	pop    ebx
  415b32:	cmp    BYTE PTR [edx-0x14],ah
  415b35:	retf   0xd13e
  415b38:	or     BYTE PTR [edi-0x31a00feb],dh
  415b3e:	pop    ecx
  415b3f:	cmp    BYTE PTR [ebp-0x41],al
  415b42:	cmp    ebx,esi
  415b44:	add    BYTE PTR [eax],0xe5
  415b47:	sub    BYTE PTR [ebp-0x1a],ch
  415b4a:	ds iret 
  415b4c:	ret    0x7a06
  415b4f:	dec    esi
  415b50:	jmp    0x11d6e212
  415b55:	sub    edi,DWORD PTR [esi+0x51c00d6f]
  415b5b:	mov    WORD PTR [eax+0x2c6b091f],es
  415b61:	dec    ebp
  415b62:	bound  esi,QWORD PTR [eax-0x9]
  415b65:	add    al,0xa1
  415b67:	inc    edi
  415b68:	out    0xe5,al
  415b6a:	inc    ebx
  415b6b:	(bad)  
  415b6c:	xlat   BYTE PTR ds:[ebx]
  415b6d:	(bad)  
  415b6e:	in     eax,0x2a
  415b70:	gs sahf 
  415b72:	aam    0xe4
  415b74:	dec    ebx
  415b75:	ins    BYTE PTR es:[edi],dx
  415b76:	pop    edi
  415b77:	sub    dh,BYTE PTR [edi+0xfc63bf4]
  415b7d:	xchg   esp,eax
  415b7e:	push   ecx
  415b7f:	outs   dx,DWORD PTR ds:[esi]
  415b80:	dec    ebx
  415b81:	fsub   DWORD PTR [eax]
  415b83:	ss fwait
  415b85:	clc    
  415b86:	add    eax,0x7518e05
  415b8b:	not    DWORD PTR [edi-0x6d0c18de]
  415b91:	enter  0x58a4,0xe2
  415b95:	pop    ds
  415b96:	mov    DWORD PTR [edx],eax
  415b98:	fisttp WORD PTR [eax+0x40]
  415b9b:	aaa    
  415b9c:	dec    edi
  415b9d:	cmc    
  415b9e:	call   0x633b2a3b
  415ba3:	pop    edi
  415ba4:	push   0xffffffe9
  415ba6:	dec    ebx
  415ba7:	jg     0x415bb9
  415ba9:	sub    al,0xa5
  415bab:	rol    edi,0x49
  415bae:	add    eax,0x60e9f3f3
  415bb3:	jmp    0xff3aad89
  415bb8:	xchg   ebx,eax
  415bb9:	and    esp,DWORD PTR [eax+0x5887ce8d]
  415bbf:	dec    edi
  415bc0:	mov    DWORD PTR [ebx],eax
  415bc2:	mov    DWORD PTR [esi-0x44],edx
  415bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc6:	jmp    DWORD PTR [ecx-0x5c]
  415bc9:	mov    ah,0x51
  415bcb:	cmc    
  415bcc:	icebp  
  415bcd:	cmp    BYTE PTR [edi+0x13],ah
  415bd0:	xchg   ebp,eax
  415bd1:	push   si
  415bd3:	mov    al,ds:0x2e8de39f
  415bd8:	mov    dh,0xef
  415bda:	jne    0x415bdf
  415bdc:	jp     0x415c5c
  415bde:	mov    ecx,0x92a97cbc
  415be3:	retf   
  415be4:	clc    
  415be5:	scas   eax,DWORD PTR es:[edi]
  415be6:	dec    ecx
  415be7:	xor    DWORD PTR [ecx+0x3c],0xdb22c8aa
  415bee:	jle    0x415c2b
  415bf0:	cwde   
  415bf1:	popa   
  415bf2:	nop
  415bf3:	mov    cl,BYTE PTR [esi+0xed67126]
  415bf9:	outs   dx,DWORD PTR ds:[esi]
  415bfa:	loopne 0x415c5c
  415bfc:	mov    esi,DWORD PTR [ecx+0x4f]
  415bff:	ja     0x415bd5
  415c01:	and    eax,0xac7405a
  415c06:	push   es
  415c07:	mov    esp,0xb2cd156d
  415c0c:	lods   al,BYTE PTR ds:[esi]
  415c0d:	xchg   ebp,eax
  415c0e:	mov    cl,0x17
  415c10:	mov    al,BYTE PTR [esi+ebx*8]
  415c13:	push   ds
  415c14:	jne    0x415c66
  415c16:	popf   
  415c17:	call   0x812:0x9e58df39
  415c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c1f:	fisub  DWORD PTR [ebx-0x663290cc]
  415c25:	and    DWORD PTR [eax+0x6bb71ab5],0xffffffd9
  415c2c:	add    ch,bl
  415c2e:	test   BYTE PTR [eax],al
  415c30:	enter  0xce54,0xc8
  415c34:	mov    esp,0x48ff5d6b
  415c39:	and    eax,0x11e31125
  415c3e:	cmp    eax,eax
  415c40:	nop
  415c41:	dec    ebx
  415c42:	cmp    BYTE PTR ds:[eax+edx*8-0x63],0x87
  415c48:	pop    edx
  415c49:	mov    eax,0xb3ff4ce9
  415c4e:	cmp    al,0x2a
  415c50:	xchg   edi,eax
  415c51:	in     eax,0x50
  415c53:	std    
  415c54:	(bad)  
  415c55:	mov    edx,0xd06240ea
  415c5a:	mul    DWORD PTR [ebp+0x20]
  415c5d:	test   BYTE PTR [edx+0x5c03efc],ch
  415c63:	in     al,dx
  415c64:	mov    al,ds:0x7b1dbbd6
  415c69:	out    dx,al
  415c6a:	mov    esi,0x9e075b14
  415c6f:	mov    ebx,0x113fa95c
  415c74:	mov    BYTE PTR [edx],al
  415c76:	add    BYTE PTR [edi-0x4b],al
  415c79:	stos   DWORD PTR es:[edi],eax
  415c7a:	fisttp DWORD PTR [eax]
  415c7c:	aaa    
  415c7d:	ffreep st(5)
  415c7f:	push   ebp
  415c80:	and    BYTE PTR [edx-0x7b],dl
  415c83:	hlt    
  415c84:	add    dl,ah
  415c86:	and    BYTE PTR [eax-0x769c4d44],bl
  415c8c:	dec    esi
  415c8d:	hlt    
  415c8e:	add    ah,BYTE PTR [ebp-0x6e80b64e]
  415c94:	or     DWORD PTR ds:0x579a1b01,ebx
  415c9a:	fisttp QWORD PTR [ecx]
  415c9c:	push   edx
  415c9d:	ret    0xd147
  415ca0:	pop    esp
  415ca1:	cli    
  415ca2:	mov    ebp,0x189a3d95
  415ca7:	dec    edi
  415ca8:	cmp    esi,ebp
  415caa:	jo     0x415c32
  415cac:	inc    ebx
  415cad:	or     al,0xca
  415caf:	adc    BYTE PTR [ebp+0x69c9c696],bl
  415cb5:	mov    BYTE PTR [eax-0x16e76a66],0x6b
  415cbc:	dec    esp
  415cbd:	jg     0x415ccd
  415cbf:	ds popa 
  415cc1:	ins    BYTE PTR es:[edi],dx
  415cc2:	fsub   st,st(0)
  415cc4:	das    
  415cc5:	cdq    
  415cc6:	ins    DWORD PTR es:[edi],dx
  415cc7:	add    al,0x44
  415cc9:	fsubp  st(3),st
  415ccb:	js     0x415cdd
  415ccd:	jno    0x415ccf
  415ccf:	jo     0x415d01
  415cd1:	mov    DWORD PTR [esp+ebp*2-0x4d0f6098],ebx
  415cd8:	jmp    0x270d:0xd705098e
  415cdf:	mov    BYTE PTR [eax+ebx*2],bh
  415ce2:	daa    
  415ce3:	push   edx
  415ce4:	xchg   BYTE PTR [edi+0x7e],ah
  415ce7:	adc    edx,0x7a
  415cea:	retf   0xdc50
  415ced:	outs   dx,BYTE PTR ds:[esi]
  415cee:	dec    ecx
  415cef:	test   DWORD PTR [edi+0x5],eax
  415cf2:	rcr    DWORD PTR [ebx-0xc3c12ef],cl
  415cf8:	and    BYTE PTR [edi+0x4c],ah
  415cfb:	fadd   QWORD PTR [ebp+0x74]
  415cfe:	test   dh,ah
  415d00:	fsub   DWORD PTR [esi-0x6]
  415d03:	fisubr WORD PTR [ecx-0x717470e8]
  415d09:	mov    cl,0x1d
  415d0b:	shl    edx,0x17
  415d0e:	fidivr WORD PTR [eax]
  415d10:	repz mov eax,ds:0x8df4d23f
  415d16:	das    
  415d17:	or     al,0x5
  415d19:	dec    ebp
  415d1a:	ficomp WORD PTR [ebx-0x39adcc84]
  415d20:	call   0x616:0xba026ae8
  415d27:	fcmovne st,st(2)
  415d29:	dec    ecx
  415d2a:	cdq    
  415d2b:	sub    BYTE PTR [edx],dh
  415d2d:	in     al,0x67
  415d2f:	push   ebp
  415d30:	mov    ch,0xe6
  415d32:	inc    esp
  415d33:	push   0x45
  415d35:	adc    BYTE PTR [esi-0x15],bl
  415d38:	mov    DWORD PTR [ecx+0x39490c66],eax
  415d3e:	dec    esi
  415d3f:	sub    eax,0x2654e3f9
  415d44:	mov    DWORD PTR [edi+0x72],esp
  415d47:	mov    eax,0xd4206880
  415d4c:	jg     0x415cf0
  415d4e:	adc    BYTE PTR [edx],al
  415d50:	adc    eax,0x803f4425
  415d55:	mov    ah,0x56
  415d57:	xchg   cl,ch
  415d59:	stos   BYTE PTR es:[edi],al
  415d5a:	pop    ebx
  415d5b:	push   cs
  415d5c:	inc    esi
  415d5d:	jmp    0x3cb8:0x8df4e5ef
  415d64:	retw   
  415d66:	call   0xa2ce247c
  415d6b:	sub    ebp,DWORD PTR [esi-0x4a]
  415d6e:	sbb    esi,DWORD PTR [eax-0x5d]
  415d71:	xchg   edx,eax
  415d72:	jns    0x415da4
  415d74:	pop    ss
  415d75:	push   edx
  415d76:	iret   
  415d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d78:	lock test DWORD PTR [esp+eax*8-0x3ce288a5],esi
  415d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d81:	in     eax,dx
  415d82:	pop    ss
  415d83:	mov    eax,ds:0x22d22226
  415d88:	fstp   TBYTE PTR [ebx+ebx*8-0x76]
  415d8c:	pop    edx
  415d8d:	mov    edx,0x9588cb22
  415d92:	xchg   edx,eax
  415d93:	sub    DWORD PTR [eax],ecx
  415d95:	mov    ch,BYTE PTR [esi-0x51c36088]
  415d9b:	pop    es
  415d9c:	push   edx
  415d9d:	cmp    BYTE PTR [ecx+edx*4],ch
  415da0:	aas    
  415da1:	out    0x37,eax
  415da3:	cwde   
  415da4:	mov    ebx,0xaa299cc4
  415da9:	push   edx
  415daa:	stc    
  415dab:	sbb    dl,al
  415dad:	inc    esp
  415dae:	pop    ds
  415daf:	mov    edi,0xcff42f19
  415db4:	test   DWORD PTR [ecx],edx
  415db6:	push   ebp
  415db7:	xchg   ecx,eax
  415db8:	in     al,dx
  415db9:	mov    bl,0xad
  415dbb:	repz in al,dx
  415dbd:	popa   
  415dbe:	xchg   edi,eax
  415dbf:	add    esp,0xffffff9f
  415dc2:	xor    eax,0x48debe0
  415dc7:	add    BYTE PTR [edx],0x44
  415dca:	test   DWORD PTR [ecx-0xf17a1ec],esp
  415dd0:	outs   dx,DWORD PTR ds:[esi]
  415dd1:	nop
  415dd2:	pop    ss
  415dd3:	mov    eax,ds:0xcef839b8
  415dd8:	or     al,0x31
  415dda:	mov    ecx,0x45362fd9
  415ddf:	mov    cl,0x74
  415de1:	sub    eax,0xc62611a8
  415de6:	dec    esp
  415de7:	push   ebp
  415de8:	addr16 dec eax
  415dea:	mov    dh,0x57
  415dec:	in     eax,dx
  415ded:	out    dx,eax
  415dee:	fucom  st(4)
  415df0:	jge    0x415d8f
  415df2:	or     bh,BYTE PTR [ecx-0x52]
  415df5:	out    dx,eax
  415df6:	mov    ch,0xc9
  415df8:	jae    0x415e65
  415dfa:	sahf   
  415dfb:	xor    DWORD PTR [edx],ebx
  415dfd:	jecxz  0x415e3a
  415dff:	lea    esp,[edx+0x22afca1a]
  415e05:	nop
  415e06:	rcr    DWORD PTR [edi+0x63],cl
  415e09:	jb     0x415dda
  415e0b:	in     al,dx
  415e0c:	jmp    0xdecd:0xd735af66
  415e13:	or     eax,0xd82995a2
  415e18:	cmp    ecx,DWORD PTR [edx]
  415e1a:	stc    
  415e1b:	jnp    0x415e5d
  415e1d:	sbb    bh,dl
  415e1f:	stc    
  415e20:	jmp    0x415e29
  415e22:	add    BYTE PTR [ecx],bl
  415e24:	aaa    
  415e25:	cmp    ah,bl
  415e27:	pushf  
  415e28:	cs scas al,BYTE PTR es:[edi]
  415e2a:	nop
  415e2b:	imul   ebp,esp,0xffffffc6
  415e2e:	xchg   esi,eax
  415e2f:	repz inc esi
  415e31:	push   ds
  415e32:	shl    BYTE PTR [esi-0xc],1
  415e35:	loope  0x415ea5
  415e37:	push   edi
  415e38:	add    bh,BYTE PTR ds:0x8ba88ecf
  415e3e:	std    
  415e3f:	aam    0x2e
  415e41:	out    0x4a,al
  415e43:	jl     0x415dfc
  415e45:	stos   DWORD PTR es:[edi],eax
  415e46:	mov    WORD PTR [eax],es
  415e48:	clc    
  415e49:	jp     0x415e84
  415e4b:	add    DWORD PTR [eax],ebp
  415e4d:	jp     0x415deb
  415e4f:	push   edi
  415e50:	in     al,dx
  415e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e52:	mov    ds:0x288ad51f,eax
  415e57:	jg     0x415e0d
  415e59:	pop    ss
  415e5a:	push   ds
  415e5b:	jecxz  0x415ebb
  415e5d:	hlt    
  415e5e:	jmp    0x97615c56
  415e63:	mov    dl,0xec
  415e65:	js     0x415eae
  415e67:	iret   
  415e68:	pop    ebx
  415e69:	mov    cl,0x5d
  415e6b:	pop    esi
  415e6c:	mov    bh,0x2e
  415e6e:	(bad)  
  415e6f:	fadd   st(1),st
  415e71:	mov    bl,dl
  415e73:	xor    ecx,DWORD PTR es:[edx+ebx*4-0x52d336f5]
  415e7b:	retf   
  415e7c:	cdq    
  415e7d:	mov    dl,0xfb
  415e7f:	mov    esi,0xb71e87c4
  415e84:	in     al,dx
  415e85:	dec    ebx
  415e86:	mov    DWORD PTR [ebp-0x6a],ebx
  415e89:	imul   esi,edi,0xcd75c08c
  415e8f:	out    dx,al
  415e90:	jnp    0x415e77
  415e92:	loope  0x415ede
  415e94:	addr16 cli 
  415e96:	stc    
  415e97:	xchg   ebp,eax
  415e98:	xor    edx,ebp
  415e9a:	inc    ebx
  415e9b:	push   cs
  415e9c:	and    eax,0x8f8e8e62
  415ea1:	adc    ch,cl
  415ea3:	and    BYTE PTR [ecx+0x26],al
  415ea6:	xor    BYTE PTR [eax+0x2f277fae],cl
  415eac:	or     esi,DWORD PTR [ebx]
  415eae:	pop    es
  415eaf:	mov    bl,0x9b
  415eb1:	jecxz  0x415e49
  415eb3:	push   eax
  415eb4:	fild   QWORD PTR [esi-0x4b]
  415eb7:	mov    dh,0xc
  415eb9:	pop    DWORD PTR [eax+0x7d053a28]
  415ebf:	cdq    
  415ec0:	retf   
  415ec1:	sti    
  415ec2:	dec    ebp
  415ec3:	cli    
  415ec4:	ds sbb edx,0x9be19698
  415ecb:	push   cs
  415ecc:	sbb    ebx,edx
  415ece:	xchg   ebp,eax
  415ecf:	sub    al,0x5d
  415ed1:	and    esi,DWORD PTR [edi+0x0]
  415ed4:	aaa    
  415ed5:	mov    esi,0x2bc2b376
  415eda:	test   BYTE PTR [edx+0x5c],0xbb
  415ede:	sub    ch,BYTE PTR [edi]
  415ee0:	or     eax,ebp
  415ee2:	(bad)  
  415ee4:	hlt    
  415ee5:	mov    eax,0xa797be19
  415eea:	sbb    BYTE PTR [eax+0x7691fe00],0x9a
  415ef1:	ins    DWORD PTR es:[edi],dx
  415ef2:	in     al,dx
  415ef3:	sti    
  415ef4:	pushf  
  415ef5:	mov    ecx,0xa100f625
  415efa:	or     al,0xe0
  415efc:	sub    DWORD PTR [ecx+ebp*2+0x6e],esp
  415f00:	aaa    
  415f01:	nop
  415f02:	mov    esi,0x7e3a12c8
  415f07:	and    bl,cl
  415f09:	sti    
  415f0a:	jne    0x415f6f
  415f0c:	jmp    0x415f5c
  415f0e:	aaa    
  415f0f:	gs lahf 
  415f11:	pusha  
  415f12:	mov    edx,0x7f2e4255
  415f17:	xchg   edx,eax
  415f18:	fs mov ebp,0xa039be46
  415f1e:	pop    ebp
  415f1f:	and    eax,0xd881bca
  415f24:	cmp    ecx,0x59
  415f27:	data16 sub BYTE PTR [eax],bl
  415f2a:	ins    DWORD PTR es:[edi],dx
  415f2b:	stos   BYTE PTR es:[edi],al
  415f2c:	leave  
  415f2d:	push   ebp
  415f2e:	and    BYTE PTR [eax*2-0x1fa209e9],0xbd
  415f36:	push   es
  415f37:	inc    ecx
  415f38:	adc    dh,dh
  415f3a:	and    al,0x93
  415f3c:	sbb    BYTE PTR [esi],ah
  415f3e:	xor    DWORD PTR [ebx+ecx*2+0x61],0xffffffbb
  415f43:	mov    edi,DWORD PTR [edi+0x5020161d]
  415f49:	sbb    eax,0x5d7b242a
  415f4e:	mov    eax,0x7361e955
  415f53:	sub    al,dl
  415f55:	sbb    BYTE PTR [ebp-0xdef117d],cl
  415f5b:	jno    0x415f89
  415f5d:	dec    edx
  415f5e:	push   ebx
  415f5f:	repnz popa 
  415f61:	stc    
  415f62:	imul   ebp,DWORD PTR [eax],0xb46cc271
  415f68:	jmp    0x415f4f
  415f6a:	or     eax,0x52495d16
  415f6f:	push   esi
  415f70:	cmp    ch,ch
  415f72:	fidivr DWORD PTR [ebx-0x15]
  415f75:	sti    
  415f76:	push   esp
  415f77:	scas   eax,DWORD PTR es:[edi]
  415f78:	add    al,0x81
  415f7a:	fimul  WORD PTR [ebx+0x20589a]
  415f80:	loope  0x415f69
  415f82:	in     al,dx
  415f83:	out    dx,eax
  415f84:	aaa    
  415f85:	jecxz  0x415f18
  415f87:	or     al,0xd2
  415f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8a:	sub    ecx,DWORD PTR [esi+ecx*1-0x28655ec0]
  415f91:	dec    ebp
  415f92:	cli    
  415f93:	push   ebp
  415f94:	dec    edi
  415f95:	mov    edi,0x7dd96c1c
  415f9a:	xlat   BYTE PTR ds:[ebx]
  415f9b:	shr    DWORD PTR [ebx+eiz*4-0x72],cl
  415f9f:	sbb    BYTE PTR [ecx-0x20],dl
  415fa2:	pop    ss
  415fa3:	pop    es
  415fa4:	div    BYTE PTR [edi+0x117c58aa]
  415faa:	inc    esi
  415fab:	push   0x82e3e3
  415fb0:	adc    al,0x2b
  415fb2:	xor    BYTE PTR [ebx-0x50788fe8],ah
  415fb8:	(bad)  
  415fb9:	int    0x7e
  415fbb:	adc    bh,BYTE PTR [esi-0x73aaa2a0]
  415fc1:	ja     0x41602a
  415fc3:	cld    
  415fc4:	xchg   esp,eax
  415fc5:	(bad)  
  415fc6:	cmp    bh,BYTE PTR [esi+ebx*1]
  415fc9:	bound  esi,QWORD PTR [edx]
  415fcb:	xor    DWORD PTR ds:0x3e6aadbf,ecx
  415fd1:	jns    0x41601e
  415fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd4:	push   cs
  415fd5:	jns    0x415fdd
  415fd7:	sbb    eax,0x81e0012d
  415fdc:	mul    DWORD PTR [edx]
  415fde:	stos   BYTE PTR es:[edi],al
  415fdf:	es ds je 0x415f8c
  415fe3:	ins    DWORD PTR es:[edi],dx
  415fe4:	push   cs
  415fe5:	fstp   TBYTE PTR [edi+ecx*8+0x204f5eeb]
  415fec:	iret   
  415fed:	adc    ecx,edi
  415fef:	stos   BYTE PTR es:[edi],al
  415ff0:	mov    ch,0x3f
  415ff2:	ret    
  415ff3:	jnp    0x416048
  415ff5:	mov    ch,0xd9
  415ff7:	pusha  
  415ff8:	aad    0xba
  415ffa:	js     0x415fe5
  415ffc:	int    0xc3
  415ffe:	adc    edi,ebp
  416000:	add    BYTE PTR [edx],bl
  416002:	out    dx,eax
  416003:	or     ebp,ebp
  416005:	dec    esi
  416006:	call   0x13fde2b9
  41600b:	cdq    
  41600c:	dec    esp
  41600d:	rep outs dx,BYTE PTR ds:[esi]
  41600f:	push   0xffffff91
  416011:	mov    bh,0x61
  416013:	push   esi
  416014:	xlat   BYTE PTR ds:[ebx]
  416015:	or     cl,cl
  416017:	adc    eax,0x1ffdc1d3
  41601c:	inc    edx
  41601d:	and    bh,BYTE PTR [eax-0x4027fd50]
  416023:	loop   0x415fe6
  416025:	cs sub dl,bh
  416028:	fidivr WORD PTR es:[ebx-0x15ec3d21]
  41602f:	mov    eax,0xc8272822
  416034:	sti    
  416035:	or     DWORD PTR [esi],esi
  416037:	or     DWORD PTR [esi],eax
  416039:	dec    edi
  41603a:	pusha  
  41603b:	imul   ebx,DWORD PTR [ebp-0x1f248193],0x77
  416042:	xor    al,0x5a
  416044:	mov    ebp,0xb55f9aa6
  416049:	or     edx,DWORD PTR [ecx]
  41604b:	lahf   
  41604c:	adc    edx,edi
  41604e:	push   esp
  41604f:	mov    esp,0x35f0e149
  416054:	outs   dx,DWORD PTR ds:[esi]
  416055:	inc    esp
  416056:	push   eax
  416057:	mov    ds:0x5d87089a,al
  41605c:	pop    ebp
  41605d:	cmp    BYTE PTR [esi-0x689fb8e1],dl
  416063:	add    eax,0x908c1142
  416068:	xchg   ebx,eax
  416069:	mov    eax,0x866a62ad
  41606e:	cmp    eax,0x924c989
  416073:	(bad)  
  416074:	inc    DWORD PTR [ebp+0x0]
  416077:	or     al,0x1e
  416079:	repnz xchg ecx,eax
  41607b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41607c:	mov    bh,0xa1
  41607e:	mov    edx,0x7d38af64
  416083:	or     al,0x7f
  416085:	cwde   
  416086:	push   esp
  416087:	mov    BYTE PTR [ebx+ecx*1],0x97
  41608b:	lods   al,BYTE PTR ds:[esi]
  41608c:	mov    edx,0x86709422
  416091:	cmp    bl,dh
  416093:	xor    edi,esp
  416095:	mov    eax,ds:0xcf75eda8
  41609a:	mov    al,BYTE PTR [esi+0x63]
  41609d:	xlat   BYTE PTR ds:[ebx]
  41609e:	repnz mov al,0xee
  4160a1:	adc    dl,dl
  4160a3:	cld    
  4160a4:	push   ds
  4160a5:	and    bh,BYTE PTR [edx-0x4eb1eb2f]
  4160ab:	ins    BYTE PTR es:[edi],dx
  4160ac:	test   BYTE PTR [edx-0x7b6c4815],bh
  4160b2:	xchg   esp,eax
  4160b3:	push   ecx
  4160b4:	repz push ebx
  4160b6:	fsubp  st(3),st
  4160b8:	adc    ebx,eax
  4160ba:	ret    
  4160bb:	fdiv   DWORD PTR [ecx+0x7e97a3c4]
  4160c1:	cdq    
  4160c2:	test   eax,0x3cac4b6d
  4160c7:	neg    BYTE PTR ds:0x67a3cd74
  4160cd:	push   0x24
  4160cf:	add    eax,0x78080669
  4160d4:	pop    ss
  4160d5:	and    dh,BYTE PTR [edx+ebx*8+0x4badb7cd]
  4160dc:	xchg   edx,eax
  4160dd:	sub    al,0x1f
  4160df:	cmp    ch,BYTE PTR [ecx]
  4160e1:	pop    edx
  4160e2:	aaa    
  4160e3:	xor    eax,0x5faf0a60
  4160e8:	adc    esi,DWORD PTR [edi-0xc]
  4160eb:	or     ch,al
  4160ed:	or     BYTE PTR [ebx-0x39],cl
  4160f0:	ds inc esp
  4160f2:	sub    ebp,DWORD PTR [ebp-0x38]
  4160f5:	pop    ss
  4160f6:	xchg   DWORD PTR [ebx],eax
  4160f8:	nop
  4160f9:	mov    edi,0xc998a1ad
  4160fe:	fisttp WORD PTR [ecx+0x68e989c7]
  416104:	pop    ss
  416105:	(bad)  
  416106:	xchg   ecx,eax
  416107:	psubq  mm4,mm4
  41610a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41610b:	mov    ds:0x356a26b2,al
  416110:	pop    esp
  416111:	xor    al,0x48
  416113:	loopne 0x4160ac
  416115:	add    DWORD PTR [edx],esi
  416117:	or     ecx,esi
  416119:	jl     0x4160ec
  41611b:	int3   
  41611c:	pop    edi
  41611d:	pop    ss
  41611e:	gs icebp 
  416120:	inc    edi
  416121:	pop    ss
  416122:	cmp    DWORD PTR [edx],edi
  416124:	or     al,0xc8
  416126:	out    0x82,al
  416128:	mov    eax,ds:0x28ff40df
  41612d:	push   ecx
  41612e:	xor    BYTE PTR [esi-0x247c34c7],0x53
  416135:	mov    eax,0xc765ee7d
  41613a:	inc    ebx
  41613b:	mov    ds,WORD PTR [ebx+esi*4+0xd]
  41613f:	loop   0x416168
  416141:	jp     0x41617b
  416143:	out    0xf1,al
  416145:	test   eax,0xbfc10693
  41614a:	add    BYTE PTR [ebp-0x63],bl
  41614d:	lods   eax,DWORD PTR ds:[esi]
  41614e:	push   ebp
  41614f:	int    0xba
  416151:	fist   DWORD PTR [ebp-0x18]
  416154:	nop
  416155:	clc    
  416156:	test   BYTE PTR [ecx+ebp*2+0x73d6f381],dl
  41615d:	add    eax,0x8317deeb
  416162:	(bad)  
  416163:	pop    ebx
  416164:	fisubr WORD PTR [ebx+eax*2-0x429bf66]
  41616b:	jne    0x4161c7
  41616d:	test   eax,0x2d163b76
  416172:	in     eax,0x35
  416174:	ins    BYTE PTR es:[edi],dx
  416175:	dec    eax
  416176:	push   es
  416177:	xchg   ebx,eax
  416178:	push   edx
  416179:	enter  0x3698,0xce
  41617d:	xlat   BYTE PTR ds:[ebx]
  41617e:	aam    0x9f
  416180:	dec    esi
  416181:	xor    ah,BYTE PTR [eax]
  416183:	test   DWORD PTR [esi],esp
  416185:	sub    BYTE PTR [ecx],bl
  416187:	or     eax,0x4469cc71
  41618c:	es out dx,al
  41618e:	xor    BYTE PTR [eax],bh
  416190:	mov    dl,0x83
  416192:	std    
  416193:	stos   DWORD PTR es:[edi],eax
  416194:	and    eax,0x9764cd97
  416199:	xchg   ebx,eax
  41619a:	clc    
  41619b:	leave  
  41619c:	dec    ebp
  41619d:	loop   0x41619e
  41619f:	push   ebp
  4161a0:	dec    ebp
  4161a1:	and    edi,DWORD PTR [ebx]
  4161a3:	push   ebx
  4161a4:	shld   DWORD PTR [ebx+esi*8-0x4c],ebp,cl
  4161a9:	or     eax,0xd8bc1f03
  4161ae:	pop    edx
  4161af:	dec    ebx
  4161b0:	inc    ecx
  4161b1:	pop    DWORD PTR [eax]
  4161b3:	fcom   DWORD PTR [eax+0x19e2e84e]
  4161b9:	adc    DWORD PTR [edi],ebp
  4161bb:	das    
  4161bc:	and    ebx,DWORD PTR [eax]
  4161be:	add    esi,ecx
  4161c0:	inc    esp
  4161c1:	ja     0x4161c0
  4161c3:	adc    eax,0x2a327fc4
  4161c8:	sub    bl,BYTE PTR [ecx-0x558334ea]
  4161ce:	ds inc ebx
  4161d0:	stos   DWORD PTR es:[edi],eax
  4161d1:	test   DWORD PTR ds:0xa8e5da89,ecx
  4161d7:	mov    BYTE PTR [ebp+0x350aa6c5],bh
  4161dd:	daa    
  4161de:	in     eax,dx
  4161df:	xchg   ecx,eax
  4161e0:	arpl   WORD PTR [ecx],dx
  4161e2:	lods   al,BYTE PTR ds:[esi]
  4161e3:	mov    ah,0x5c
  4161e5:	mov    al,ch
  4161e7:	call   0x59a8:0x174980b2
  4161ee:	xor    eax,0x7ff4ef94
  4161f3:	dec    ecx
  4161f4:	mov    dh,bl
  4161f6:	mov    dh,0xfe
  4161f8:	sbb    esp,DWORD PTR ss:[esi-0x336eca41]
  4161ff:	add    al,0x61
  416201:	enter  0x194,0xfa
  416205:	aad    0x79
  416207:	xchg   edi,eax
  416208:	dec    ecx
  416209:	xchg   esi,eax
  41620a:	out    dx,eax
  41620b:	lds    edx,FWORD PTR [eax+0x28]
  41620e:	sub    eax,0x25bb718
  416213:	and    DWORD PTR [ebx-0x58],ebp
  416216:	mov    edi,0xcdcb6406
  41621b:	dec    DWORD PTR [ebp+0x10]
  41621e:	xor    edx,ecx
  416220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416221:	mov    bh,0x16
  416223:	scas   eax,DWORD PTR es:[edi]
  416224:	mov    WORD PTR [esp+edi*8+0x2c029e79],?
  41622b:	and    eax,0xbf29b820
  416230:	jno    0x4161d4
  416232:	(bad)  
  416233:	pop    edi
  416234:	and    ebp,DWORD PTR [edx]
  416236:	fcmove st,st(2)
  416238:	out    dx,eax
  416239:	test   DWORD PTR [edi-0x74],edi
  41623c:	scas   al,BYTE PTR es:[edi]
  41623d:	je     0x416264
  41623f:	div    BYTE PTR [esi+0x2c]
  416242:	jne    0x416248
  416244:	and    edi,edi
  416246:	sbb    al,0xc4
  416248:	outs   dx,DWORD PTR ds:[esi]
  416249:	pop    eax
  41624a:	(bad)  
  41624b:	in     al,0x37
  41624d:	or     DWORD PTR [edi],0x8dd76b94
  416253:	push   edx
  416254:	sub    ebx,DWORD PTR [ebp-0xfd47978]
  41625a:	jae    0x6cbe354d
  416260:	retf   
  416261:	je     0x4162a7
  416263:	(bad)  [edi]
  416265:	stos   BYTE PTR es:[edi],al
  416266:	dec    eax
  416267:	imul   eax,DWORD PTR [edi+0x2ce182c9],0x30
  41626e:	lods   al,BYTE PTR ds:[esi]
  41626f:	jo     0x41628a
  416271:	stc    
  416272:	jb     0x416224
  416274:	and    al,0x60
  416276:	(bad)  
  416277:	jne    0x41629b
  416279:	stos   DWORD PTR es:[edi],eax
  41627a:	mov    ds:0x1b0f249,al
  41627f:	lods   al,BYTE PTR ds:[esi]
  416280:	jb     0x41625c
  416282:	add    DWORD PTR [eax+0x5b],eax
  416285:	mov    edi,0x77135295
  41628a:	retf   
  41628b:	lods   al,BYTE PTR ds:[esi]
  41628c:	ret    
  41628d:	outs   dx,BYTE PTR ds:[esi]
  41628e:	mov    esp,0x3f7b077f
  416293:	push   ebx
  416294:	sub    ebx,DWORD PTR [eax-0x21]
  416297:	mov    DWORD PTR [eax],esi
  416299:	retf   
  41629a:	mov    eax,0xf85191d6
  41629f:	ja     0x41627a
  4162a1:	es leave 
  4162a3:	retf   0x5dd4
  4162a6:	outs   dx,BYTE PTR ds:[esi]
  4162a7:	pushf  
  4162a8:	ja     0x4162c3
  4162aa:	or     edi,DWORD PTR [ecx+0x44b84356]
  4162b0:	pop    esi
  4162b1:	push   eax
  4162b2:	jecxz  0x416244
  4162b4:	lods   eax,DWORD PTR ds:[esi]
  4162b5:	js     0x41632b
  4162b7:	mov    edi,0x5a073067
  4162bc:	pop    esi
  4162bd:	dec    esi
  4162be:	(bad)  
  4162bf:	jbe    0x416257
  4162c1:	mov    DWORD PTR [ebx],edi
  4162c3:	cmp    BYTE PTR [eax],bl
  4162c5:	jae    0x4162d6
  4162c7:	xbegin 0x8bd01fde
  4162cd:	jl     0x416300
  4162cf:	or     cl,BYTE PTR [edx]
  4162d1:	out    dx,eax
  4162d2:	retf   0x19e3
  4162d5:	dec    ebx
  4162d6:	mov    ebp,0xc4810521
  4162db:	pop    edx
  4162dc:	adc    BYTE PTR ds:0xc698d55c,ch
  4162e2:	mov    ebx,0x5e1b0b90
  4162e7:	inc    bh
  4162e9:	sub    al,0x9
  4162eb:	(bad)  
  4162ec:	fisubr DWORD PTR ds:0xa2e658c7
  4162f2:	or     esp,edx
  4162f4:	aam    0x96
  4162f6:	lds    edx,FWORD PTR [eax+eiz*8+0x77b93a9f]
  4162fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162fe:	dec    esp
  4162ff:	fnstsw WORD PTR [eax-0x32]
  416302:	inc    ebx
  416303:	inc    esi
  416304:	add    eax,0xbf53ea93
  416309:	cmp    DWORD PTR [ebx-0x40],ebx
  41630c:	test   al,0x74
  41630e:	mov    al,ds:0x95d110ce
  416313:	fild   DWORD PTR [edi+edx*1-0x56000b9]
  41631a:	mov    ebp,0xa4e14d3b
  41631f:	and    ecx,DWORD PTR [esi-0x38df2466]
  416325:	mov    edx,0x1cbee728
  41632a:	push   ss
  41632b:	(bad)  
  41632c:	pusha  
  41632d:	xchg   esi,eax
  41632e:	(bad)  
  41632f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416330:	mov    ah,0x4f
  416332:	sbb    eax,0xf841244f
  416337:	mov    DWORD PTR [ebx+edi*4-0x79],ecx
  41633b:	call   0x6ed7:0x998c5322
  416342:	and    BYTE PTR [edi-0x2f],bh
  416345:	xchg   ebx,eax
  416346:	and    eax,DWORD PTR [ecx]
  416348:	push   edi
  416349:	(bad)  
  41634a:	or     bh,dl
  41634c:	and    BYTE PTR [ebx+0x2c254c58],dh
  416352:	push   0xf4aa791f
  416357:	int3   
  416358:	stc    
  416359:	mov    dh,0x8c
  41635b:	ins    BYTE PTR es:[edi],dx
  41635c:	ret    
  41635d:	or     BYTE PTR [ebx],bl
  41635f:	loopne 0x41636e
  416361:	mov    eax,ds:0x11b5cc0b
  416366:	ins    BYTE PTR es:[edi],dx
  416367:	mov    bh,0xa8
  416369:	loop   0x416394
  41636b:	and    BYTE PTR [edi+0x231cd1df],dl
  416371:	cmp    eax,0x354fd428
  416376:	jmp    0x68e3d2e3
  41637b:	loope  0x416368
  41637d:	inc    ecx
  41637e:	cdq    
  41637f:	cs loop 0x4163e7
  416382:	xor    cl,ch
  416384:	das    
  416385:	or     DWORD PTR [edi-0x19],edx
  416388:	sar    DWORD PTR [edx+edi*8],0xf8
  41638c:	and    DWORD PTR gs:[edx+0x73eee874],edi
  416393:	mov    ah,BYTE PTR fs:[esi]
  416396:	clc    
  416397:	sbb    DWORD PTR [edi-0x511ab68d],esi
  41639d:	sbb    BYTE PTR [esp+ebx*8+0x6c],0x9f
  4163a2:	fistp  WORD PTR [edx+0x5a54aab1]
  4163a8:	fsub   DWORD PTR [ecx+eax*4+0x5]
  4163ac:	aaa    
  4163ad:	sbb    esp,DWORD PTR [edi-0x63c775c6]
  4163b3:	dec    edx
  4163b4:	dec    edi
  4163b5:	push   eax
  4163b6:	push   0xffffffe3
  4163b8:	iret   
  4163b9:	mov    ebx,0x21cbee8f
  4163be:	or     DWORD PTR [edx+ecx*4+0x7b],ecx
  4163c2:	fcmovnb st,st(6)
  4163c4:	push   es
  4163c5:	lds    esp,FWORD PTR [eax+0x47e2ce7c]
  4163cb:	push   ebx
  4163cc:	pusha  
  4163cd:	push   eax
  4163ce:	leave  
  4163cf:	add    DWORD PTR [edi],ecx
  4163d1:	pop    esi
  4163d2:	xchg   edi,eax
  4163d3:	mov    BYTE PTR [esi],0x8e
  4163d6:	push   ds
  4163d7:	popf   
  4163d8:	or     bl,dl
  4163da:	jae    0x4163ed
  4163dc:	stc    
  4163dd:	out    0x69,eax
  4163df:	aam    0xc
  4163e1:	outs   dx,BYTE PTR ds:[esi]
  4163e2:	outs   dx,BYTE PTR ds:[esi]
  4163e3:	sbb    DWORD PTR [ebx+ebx*1-0x68d9987a],ebp
  4163ea:	sbb    BYTE PTR [esi],bl
  4163ec:	sbb    eax,0x8d207ad5
  4163f1:	pushf  
  4163f2:	jmp    0x4163b2
  4163f4:	jl     0x416440
  4163f6:	ins    BYTE PTR es:[edi],dx
  4163f7:	jmp    0x2fae:0x24987356
  4163fe:	stos   DWORD PTR es:[edi],eax
  4163ff:	cs mov al,bl
  416402:	icebp  
  416403:	ret    0x88c5
  416406:	ss xchg bl,ah
  416409:	add    BYTE PTR [edx-0x1de380bf],ah
  41640f:	adc    DWORD PTR [esi-0x1b],ebx
  416412:	mov    DWORD PTR [ecx+0x7f],ecx
  416415:	lock inc ecx
  416417:	push   ecx
  416418:	outs   dx,BYTE PTR ds:[esi]
  416419:	imul   ecx,DWORD PTR [edi-0x28b6a895],0x1d2ff3f2
  416423:	mov    eax,ss
  416425:	frstor [ebx+0x1e]
  416428:	or     bl,0xc8
  41642b:	mov    ds:0xa1d66475,al
  416430:	jle    0x4164aa
  416432:	dec    ebx
  416433:	dec    ebp
  416434:	or     eax,0x35b02ea9
  416439:	div    edi
  41643b:	sahf   
  41643c:	or     BYTE PTR [eax+0x38],ah
  41643f:	or     BYTE PTR [ebp+ecx*4-0x35],ah
  416443:	xlat   BYTE PTR ds:[ebx]
  416444:	sbb    al,0x7d
  416446:	sahf   
  416447:	ret    
  416448:	push   edi
  416449:	test   eax,0x22c89786
  41644e:	xor    al,0x23
  416450:	das    
  416451:	cmp    esp,DWORD PTR [edx+eax*2+0x28]
  416455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416456:	dec    ebp
  416457:	inc    eax
  416458:	push   esi
  416459:	test   BYTE PTR [esi],ah
  41645b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645c:	test   BYTE PTR [ebp+0x2d],ch
  41645f:	imul   esi,DWORD PTR [eax-0x753b963a],0xdc5b6ae
  416469:	je     0x416430
  41646b:	scas   al,BYTE PTR es:[edi]
  41646c:	xchg   BYTE PTR [edi+eax*2+0x53],ch
  416470:	test   eax,0x7e0af810
  416475:	mov    edi,0x4e399737
  41647a:	rcl    edi,cl
  41647c:	ds (bad) 
  41647f:	push   ebp
  416480:	cld    
  416481:	ret    
  416482:	sbb    al,dl
  416484:	cs ret 0x8677
  416488:	xchg   esi,eax
  416489:	inc    eax
  41648a:	hlt    
  41648b:	xlat   BYTE PTR ds:[ebx]
  41648c:	retf   
  41648d:	push   ebx
  41648e:	fxch   st(3)
  416490:	popa   
  416491:	cmp    ch,BYTE PTR [edi+0x11]
  416494:	mov    ah,BYTE PTR [ecx]
  416496:	dec    ebx
  416497:	call   0x7b666384
  41649c:	cmp    DWORD PTR [ecx],0x25
  41649f:	mov    WORD PTR [esi+0x5c],es
  4164a2:	in     al,dx
  4164a3:	lahf   
  4164a4:	outs   dx,DWORD PTR ds:[esi]
  4164a5:	(bad)  
  4164a6:	jae    0x4164bf
  4164a8:	sbb    ecx,eax
  4164aa:	int    0x3
  4164ac:	scas   eax,DWORD PTR es:[edi]
  4164ad:	pop    esp
  4164ae:	out    0x70,eax
  4164b0:	xchg   esi,eax
  4164b1:	dec    edx
  4164b2:	push   esp
  4164b3:	jne    0x4164bc
  4164b5:	hlt    
  4164b6:	sub    ebp,DWORD PTR [eax-0x31]
  4164b9:	mov    ah,0x40
  4164bb:	ficomp WORD PTR [eax-0x29]
  4164be:	jmp    0x416460
  4164c0:	dec    esi
  4164c1:	dec    edx
  4164c2:	push   ss
  4164c3:	sub    al,BYTE PTR [esi+eiz*8-0x7d]
  4164c7:	pop    esp
  4164c8:	call   0xb96b:0xf1548bb7
  4164cf:	or     bh,BYTE PTR [eax-0x46]
  4164d2:	lds    ebp,FWORD PTR [edi-0x57f056f9]
  4164d8:	dec    esi
  4164d9:	inc    eax
  4164da:	mov    dl,0xe0
  4164dc:	popf   
  4164dd:	repz ja 0x416548
  4164e0:	scas   eax,DWORD PTR es:[edi]
  4164e1:	or     al,0xff
  4164e3:	es xchg ebx,eax
  4164e5:	xchg   DWORD PTR [eax+0x7a86c979],esp
  4164eb:	push   esi
  4164ec:	jbe    0x41650c
  4164ee:	les    ecx,FWORD PTR [bp+si+0x6e]
  4164f2:	xor    al,0x85
  4164f4:	cld    
  4164f5:	fisttp DWORD PTR [esi-0x5636d98c]
  4164fb:	sbb    eax,0x19d985c0
  416500:	jnp    0x416564
  416502:	push   ss
  416503:	push   cs
  416504:	jle    0x41652d
  416506:	(bad)  
  416507:	jg     0x4164da
  416509:	in     eax,dx
  41650a:	ror    BYTE PTR [eax-0x104279bd],1
  416510:	lds    edx,FWORD PTR [edx+0x1c]
  416513:	xchg   edx,eax
  416514:	cdq    
  416515:	jne    0x41656e
  416517:	xor    DWORD PTR [ecx-0x32fbf3c5],0xffffffbe
  41651e:	fisubr WORD PTR [edx]
  416520:	xor    eax,0x1c05fed9
  416525:	sub    al,0x16
  416527:	cmp    eax,0xffffffd8
  41652a:	rep lods ax,WORD PTR ds:[esi]
  41652d:	fdivr  DWORD PTR [ebx-0xe329c00]
  416533:	sub    al,0x8b
  416535:	fiadd  WORD PTR [ecx+edi*1-0x6]
  416539:	test   esi,ebx
  41653b:	leave  
  41653c:	(bad)  
  41653d:	data16 fwait
  41653f:	test   eax,0x4cd07298
  416544:	push   ds
  416545:	jne    0x41652d
  416547:	mov    dl,dl
  416549:	loop   0x416591
  41654b:	fdivr  DWORD PTR [eax-0x2ebc8d52]
  416551:	cwde   
  416552:	pop    ss
  416553:	dec    edi
  416554:	and    al,0x60
  416556:	push   es
  416557:	pop    esi
  416558:	test   BYTE PTR [edi+0x5bbb73fa],bl
  41655e:	lds    edx,FWORD PTR es:[edx-0x718aa3d5]
  416565:	dec    BYTE PTR [edx]
  416567:	mov    esi,cr1
  41656a:	adc    BYTE PTR [edx-0x5a],dl
  41656d:	jle    0x41659f
  41656f:	mov    dl,0x9d
  416571:	fmul   QWORD PTR [ebp*1+0x395692cc]
  416578:	retf   0xb941
  41657b:	ror    ch,cl
  41657d:	imul   ebp,esp,0xffffffea
  416580:	mov    esi,0xc2d66fdf
  416585:	and    al,0x4f
  416588:	add    DWORD PTR [edx+0x6503d0a9],ebp
  41658e:	pop    es
  41658f:	pop    esp
  416590:	push   edi
  416591:	inc    eax
  416592:	in     eax,0xe4
  416594:	add    eax,0xcc007f3c
  416599:	cmp    eax,DWORD PTR [eax+0xb]
  41659c:	in     al,dx
  41659d:	shl    DWORD PTR ds:0x30a10dfa,1
  4165a3:	add    esi,DWORD PTR [eax-0x2f]
  4165a6:	or     esi,DWORD PTR [eax+0x7b]
  4165a9:	(bad)  
  4165aa:	mov    al,ds:0xca84674e
  4165af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b0:	jo     0x4165c1
  4165b2:	mov    edx,0xbddead55
  4165b7:	call   0x56c1f12d
  4165bc:	aas    
  4165bd:	mov    bl,0xc3
  4165bf:	xor    BYTE PTR [ecx],cl
  4165c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c2:	data16 mov ds:0xbeb6344f,al
  4165c8:	mov    ds:0x64f0fe13,al
  4165cd:	fs jbe 0x4165ae
  4165d0:	lahf   
  4165d1:	add    DWORD PTR [eax+0x4f],0x7fa3cb52
  4165d8:	xor    ebx,ecx
  4165da:	ret    0xe40c
  4165dd:	mov    esi,0x6993f5cb
  4165e2:	pop    ss
  4165e3:	xor    al,0xda
  4165e5:	cmc    
  4165e6:	in     al,0x96
  4165e8:	xor    BYTE PTR ds:0x3ecbe4c1,ch
  4165ee:	out    0x0,al
  4165f0:	mov    ds:0xe1aa382f,eax
  4165f5:	cmc    
  4165f6:	scas   al,BYTE PTR es:[edi]
  4165f7:	ret    0xda81
  4165fa:	pop    ss
  4165fb:	pushf  
  4165fc:	test   esi,ecx
  4165fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ff:	sbb    eax,0xe7e9e002
  416604:	xchg   ebx,eax
  416605:	mov    bh,0xb9
  416607:	les    ebx,FWORD PTR [edx+0x3e67c444]
  41660d:	xchg   esp,eax
  41660e:	hlt    
  41660f:	pusha  
  416610:	dec    ebp
  416611:	and    eax,0x7747fd75
  416616:	loopne 0x41664e
  416618:	pop    edi
  416619:	sub    DWORD PTR [esi],edx
  41661b:	jecxz  0x4165ce
  41661d:	push   0x3d
  41661f:	sub    al,al
  416621:	out    dx,eax
  416622:	inc    ebp
  416623:	add    BYTE PTR [edx],ah
  416625:	mov    al,0xc4
  416627:	je     0x41661f
  416629:	cmp    eax,0x641c916d
  41662e:	fsub   st(0),st
  416630:	mov    esp,0xce25e43f
  416635:	ds dec edi
  416637:	xchg   ebp,eax
  416638:	jo     0x416608
  41663a:	inc    esp
  41663b:	jnp    0x41662c
  41663d:	push   ecx
  41663e:	xchg   DWORD PTR [edx+0x4625a24c],eax
  416644:	sub    al,BYTE PTR [esi+0x3882a81d]
  41664a:	push   esp
  41664b:	lock xchg edx,eax
  41664d:	and    bh,BYTE PTR [esi]
  41664f:	shr    BYTE PTR es:[edi],cl
  416652:	sub    BYTE PTR [ebx-0x4059b00e],cl
  416658:	add    DWORD PTR [ebp+0x12],esp
  41665b:	xor    eax,DWORD PTR [ebx+0xc642dc5]
  416661:	pop    eax
  416662:	mov    esp,0x9c053bf8
  416667:	mov    edi,0x52b47219
  41666c:	or     al,dh
  41666e:	lods   al,BYTE PTR ds:[esi]
  41666f:	inc    ebp
  416670:	sub    eax,0x13ff604f
  416675:	dec    eax
  416676:	push   cs
  416677:	in     eax,dx
  416678:	outs   dx,BYTE PTR ds:[esi]
  416679:	mov    bh,0xdd
  41667b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41667c:	cmp    eax,0xb24a9b3a
  416681:	pusha  
  416682:	je     0x4166c2
  416684:	loopne 0x416664
  416686:	sbb    ch,ch
  416688:	les    eax,FWORD PTR [edi]
  41668a:	inc    ebx
  41668b:	pop    eax
  41668c:	jmp    0x6058afd7
  416691:	jecxz  0x416640
  416693:	call   0x20790100
  416698:	sbb    eax,0xea3f069
  41669d:	cmc    
  41669e:	jne    0x4166f5
  4166a0:	je     0x416643
  4166a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166a3:	mov    eax,0x34f458f6
  4166a8:	sub    al,0x75
  4166aa:	jg     0x4166a2
  4166ac:	ret    
  4166ad:	fucomp st(1)
  4166af:	lock aam 0xfd
  4166b2:	(bad)  
  4166b3:	retf   0x91dd
  4166b6:	jmp    0x2767f0aa
  4166bb:	mov    ebp,0x3a450e52
  4166c0:	sbb    eax,0x93eea893
  4166c5:	mov    edx,0x70f26771
  4166ca:	mov    dl,ch
  4166cc:	das    
  4166cd:	pop    ecx
  4166ce:	mov    ds:0x46b346,al
  4166d3:	adc    ah,BYTE PTR [ebx]
  4166d5:	and    eax,0xdf27894b
  4166da:	add    bl,BYTE PTR [ebx-0x36]
  4166dd:	jno    0x416703
  4166df:	pop    edi
  4166e0:	fwait
  4166e1:	out    0x1f,eax
  4166e3:	paddb  mm1,QWORD PTR [edi-0x2b]
  4166e7:	cdq    
  4166e8:	xchg   DWORD PTR [ecx-0x2c],edx
  4166eb:	xor    eax,0xd3fd59e7
  4166f0:	add    esi,0x4f
  4166f3:	jge    0x416704
  4166f5:	adc    al,0x7c
  4166f7:	adc    eax,0xef6b516e
  4166fc:	sub    DWORD PTR [esi+0x6a],0xa0ad8a02
  416703:	and    BYTE PTR [ebp+0x59d3c33f],ch
  416709:	xor    DWORD PTR [eax-0x4b],ebp
  41670c:	imul   ebx,DWORD PTR [esi+0x4d72fa61],0xffffffb2
  416713:	mov    edx,?
  416715:	inc    edx
  416716:	xor    DWORD PTR [ebx],esp
  416718:	push   esp
  416719:	dec    esp
  41671a:	pop    ebx
  41671b:	adc    eax,0xc8375b15
  416720:	das    
  416721:	jbe    0x416730
  416723:	push   esp
  416724:	mov    dl,0xd9
  416726:	mov    ebp,0xb8929d35
  41672b:	mov    edi,0x5a13c817
  416730:	fidivr WORD PTR [edx+eax*2-0x3c]
  416734:	and    BYTE PTR [ecx+0x40],ah
  416737:	jnp    0x4166d9
  416739:	sbb    ebx,ebx
  41673b:	or     esi,esi
  41673d:	xchg   DWORD PTR [ebx-0x17],edi
  416740:	fdivr  DWORD PTR [eax-0x4e]
  416743:	jo     0x4166e3
  416745:	loopne 0x416792
  416747:	cdq    
  416748:	sbb    esp,esp
  41674a:	stc    
  41674b:	lods   eax,DWORD PTR ds:[esi]
  41674c:	fwait
  41674d:	dec    ebp
  41674e:	rcr    BYTE PTR [edi-0x436269cd],0x1e
  416755:	call   0xad3bd9ca
  41675a:	mov    cs:0xfecd0181,al
  416760:	call   0x1c48:0x630f67ee
  416767:	mov    cl,0xe4
  416769:	stos   BYTE PTR es:[edi],al
  41676a:	or     al,0x52
  41676c:	jl     0x41671c
  41676e:	xchg   ecx,eax
  41676f:	cwde   
  416770:	int    0xdc
  416772:	paddusb mm7,QWORD PTR [ecx-0x6d65dccc]
  416779:	inc    ebp
  41677a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677b:	mov    ah,0xc3
  41677d:	push   ecx
  41677e:	add    DWORD PTR [esi],esi
  416780:	dec    edi
  416781:	cmp    al,0x4d
  416783:	sbb    eax,0x1c9afcbd
  416788:	adc    BYTE PTR [eax],ch
  41678a:	int    0x50
  41678c:	lods   al,BYTE PTR ds:[esi]
  41678d:	jmp    0x4167a6
  41678f:	cdq    
  416790:	mov    bh,0x8d
  416792:	jmp    0xd176:0x76ea450f
  416799:	push   esi
  41679a:	fcomp  QWORD PTR [ebx-0x162c099a]
  4167a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a1:	int3   
  4167a2:	xchg   esp,eax
  4167a3:	scas   eax,DWORD PTR es:[edi]
  4167a4:	test   BYTE PTR [ecx],dh
  4167a6:	push   ebp
  4167a7:	jae    0x41673b
  4167a9:	push   ebx
  4167aa:	inc    eax
  4167ab:	mov    BYTE PTR [edx+0x5454a772],0x60
  4167b2:	cli    
  4167b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167b4:	push   0xd2e8e1e5
  4167b9:	popa   
  4167ba:	xchg   esi,eax
  4167bb:	mov    esp,0xa01347e9
  4167c0:	pop    ds
  4167c1:	mov    al,ds:0x153a8dce
  4167c6:	cmp    al,0x82
  4167c8:	mov    BYTE PTR [eax+ebp*1-0x6ec86ad6],ch
  4167cf:	(bad)  
  4167d0:	and    DWORD PTR [edx+ebx*1+0x75],0xffffffe0
  4167d5:	push   esi
  4167d6:	(bad)  
  4167d7:	push   eax
  4167d8:	mov    cl,0x6a
  4167da:	sub    eax,eax
  4167dc:	(bad)  [edx]
  4167de:	jl     0x4167b4
  4167e0:	call   edi
  4167e2:	xchg   ecx,eax
  4167e3:	push   ss
  4167e4:	test   al,0xef
  4167e6:	jnp    0x4167cb
  4167e8:	int3   
  4167e9:	xchg   ebx,eax
  4167ea:	dec    DWORD PTR [esi+0x3fa9bac0]
  4167f0:	rcl    bl,cl
  4167f2:	pop    ecx
  4167f3:	sub    BYTE PTR [edx],bl
  4167f5:	jmp    0x479149f2
  4167fa:	shr    DWORD PTR [eax+ebx*1],1
  4167fd:	cmp    DWORD PTR [eax+0x7d],ecx
  416800:	out    dx,al
  416801:	sub    dh,BYTE PTR [esi-0x1d]
  416804:	or     al,0xc5
  416806:	jecxz  0x416791
  416808:	jb     0x4167c7
  41680a:	rcl    ch,0xc0
  41680d:	ins    DWORD PTR es:[edi],dx
  41680e:	mov    ds:0x3f87de1,eax
  416813:	(bad)  
  416814:	push   cs
  416815:	pop    ss
  416816:	add    BYTE PTR ss:[edi+0xc4bfe16],cl
  41681d:	pushf  
  41681e:	add    eax,0x5ce937d9
  416823:	inc    esp
  416824:	cmp    eax,0xe5834a41
  416829:	scas   al,BYTE PTR es:[edi]
  41682a:	das    
  41682b:	mov    DWORD PTR [ecx+edi*8+0x5c9da743],eax
  416832:	and    eax,0xbf39f82b
  416837:	cmp    al,0xe3
  416839:	aas    
  41683a:	inc    eax
  41683b:	jae    0x416842
  41683d:	popa   
  41683e:	pop    ebx
  41683f:	cmp    al,BYTE PTR [edx+0x22429d86]
  416845:	(bad)  
  416846:	fild   DWORD PTR [ecx+ecx*8-0x2a7297e]
  41684d:	pop    ebp
  41684e:	xor    eax,edi
  416850:	nop
  416851:	adc    ebx,DWORD PTR [edi-0x649c00e3]
  416857:	stos   DWORD PTR es:[edi],eax
  416858:	xchg   edx,eax
  416859:	jbe    0x416883
  41685b:	push   esp
  41685c:	mov    dl,0xff
  41685e:	in     al,dx
  41685f:	and    BYTE PTR ds:0x2d1f179d,dl
  416865:	inc    edx
  416866:	mov    edi,0xdd76f338
  41686b:	fidiv  DWORD PTR [edi-0x5]
  41686e:	inc    eax
  41686f:	mov    ebp,0xa75d70f8
  416874:	data16 aas 
  416876:	xchg   DWORD PTR [edx-0x21d93287],eax
  41687c:	push   0x425ea3f0
  416881:	cmp    bl,dh
  416883:	or     dl,BYTE PTR [esi-0x12]
  416886:	mov    ds:0x7077feb6,al
  41688b:	addr16 in al,dx
  41688d:	push   ebp
  41688e:	push   ss
  41688f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416890:	mov    dl,0x2d
  416892:	jo     0x41689b
  416894:	enter  0x30b,0x0
  416898:	dec    esi
  416899:	fs dec ebx
  41689b:	jp     0x416848
  41689d:	push   edi
  41689e:	test   eax,0x875c37cf
  4168a3:	or     DWORD PTR [edx],edx
  4168a5:	(bad)  
  4168a6:	jl     0x41684d
  4168a8:	and    ah,BYTE PTR [edx]
  4168aa:	aaa    
  4168ab:	adc    al,0x9
  4168ad:	ins    DWORD PTR es:[edi],dx
  4168ae:	sbb    ebp,eax
  4168b0:	mov    bh,0xda
  4168b2:	mov    WORD PTR [ebx-0x472a15c8],cs
  4168b8:	cmp    ch,BYTE PTR [esp+ecx*4]
  4168bb:	clc    
  4168bc:	mov    esi,0x8579d850
  4168c1:	mov    BYTE PTR [eax+0x2dcf0b41],ah
  4168c7:	push   ebx
  4168c8:	jecxz  0x4168cf
  4168ca:	jle    0x4168f5
  4168cc:	push   edx
  4168cd:	dec    eax
  4168ce:	xchg   ecx,eax
  4168cf:	jle    0x4168bf
  4168d1:	xor    al,0xd
  4168d3:	neg    DWORD PTR [esi]
  4168d5:	data16 loopne 0x41688e
  4168d8:	repz mov eax,0x6e09947
  4168de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168df:	out    dx,eax
  4168e0:	pop    esi
  4168e1:	(bad)  
  4168e2:	enter  0x5416,0xf4
  4168e6:	je     0x416916
  4168e8:	cmc    
  4168e9:	dec    ecx
  4168ea:	aam    0x46
  4168ec:	jge    0x416968
  4168ee:	mov    ebx,0xe3549de4
  4168f3:	adc    bh,cl
  4168f5:	popa   
  4168f6:	outs   dx,DWORD PTR ds:[esi]
  4168f7:	call   0x5f9808b1
  4168fc:	dec    ebx
  4168fd:	xor    ah,BYTE PTR [edx-0x1e]
  416900:	test   al,0x13
  416902:	pop    es
  416903:	stos   DWORD PTR es:[edi],eax
  416904:	fbstp  TBYTE PTR [ebx]
  416906:	jno    0x4168da
  416908:	add    DWORD PTR [esi-0x6d],eax
  41690b:	hlt    
  41690c:	imul   edi,edi,0x1d168f36
  416912:	cmp    dl,0x7a
  416915:	clc    
  416916:	iret   
  416917:	add    BYTE PTR [eax-0x1e],ah
  41691a:	mov    ss,WORD PTR [ecx-0x5f73f1b8]
  416920:	mov    al,ds:0x49253319
  416925:	mov    ecx,0x8dfc9dc5
  41692a:	pushf  
  41692b:	lock mov eax,0x9ec1cd52
  416931:	lahf   
  416932:	ret    
  416933:	cmp    bh,ch
  416935:	jg     0x4168f6
  416937:	div    BYTE PTR [eax-0x66]
  41693a:	fisubr WORD PTR [edi]
  41693c:	fstp   DWORD PTR [edi+ecx*2+0x5e9746b5]
  416943:	out    0xc4,al
  416945:	or     DWORD PTR [ecx-0x58],ebp
  416948:	and    eax,0x60bd3ae4
  41694d:	cmp    BYTE PTR [eax+0x5eaf5b54],dh
  416953:	call   0xc2a4:0xf34713bd
  41695a:	sbb    ebx,esp
  41695c:	in     al,dx
  41695d:	or     eax,0x165e7e56
  416962:	mov    eax,ds:0x2479d897
  416967:	jns    0x4169db
  416969:	or     eax,0x4cd32d3b
  41696e:	das    
  41696f:	jbe    0x416920
  416971:	jge    0x41697a
  416973:	shr    DWORD PTR [edi+0x35],0x82
  416977:	jmp    0xd6322e24
  41697c:	stos   BYTE PTR es:[edi],al
  41697d:	dec    edi
  41697e:	adc    esp,0xe597bfc
  416984:	push   ebp
  416985:	push   0x41
  416987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416988:	mov    al,0x1f
  41698a:	and    esi,eax
  41698c:	mov    dl,0xe1
  41698e:	test   al,0xe5
  416990:	getsec 
  416992:	jge    0x41692b
  416994:	mov    dh,0x4b
  416996:	test   DWORD PTR [ecx],esp
  416998:	cmp    eax,0xc1fd83a6
  41699d:	cli    
  41699e:	imul   ebp,DWORD PTR [eax],0x8a4c69da
  4169a4:	pop    es
  4169a5:	adc    eax,ebp
  4169a7:	retf   
  4169a8:	xchg   edi,eax
  4169a9:	(bad)  
  4169ab:	inc    edi
  4169ac:	inc    ebp
  4169ad:	mov    ecx,ecx
  4169af:	sbb    ah,BYTE PTR [eax+0x73]
  4169b2:	stos   DWORD PTR es:[edi],eax
  4169b3:	fs imul esi,edx,0xdf39fe01
  4169ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169bb:	ret    
  4169bc:	int    0xa8
  4169be:	gs pop eax
  4169c0:	inc    eax
  4169c1:	scas   eax,DWORD PTR es:[edi]
  4169c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c3:	dec    ecx
  4169c4:	jmp    DWORD PTR ds:0x1254f51f
  4169ca:	shl    edi,1
  4169cc:	imul   ebp,DWORD PTR [edx],0xffffff9f
  4169cf:	into   
  4169d0:	jmp    0x4169b7
  4169d2:	inc    esp
  4169d4:	aad    0x97
  4169d6:	sub    ebx,esp
  4169d8:	test   ecx,ebx
  4169da:	pop    ecx
  4169db:	std    
  4169dc:	push   0xffffffaa
  4169de:	mov    edx,0xdab4c91d
  4169e3:	arpl   WORD PTR [esi],cx
  4169e5:	push   edi
  4169e6:	inc    eax
  4169e7:	inc    ebp
  4169e8:	pop    esp
  4169e9:	sbb    al,0xcd
  4169eb:	lahf   
  4169ec:	add    edx,DWORD PTR [edx]
  4169ee:	(bad)  
  4169ef:	xchg   esp,eax
  4169f0:	loopne 0x416a30
  4169f2:	hlt    
  4169f3:	neg    DWORD PTR [ebp+0x4e44fe74]
  4169f9:	lds    edx,FWORD PTR ds:0x7c11a885
  4169ff:	or     eax,0xacd91b48
  416a04:	loopne 0x4169a6
  416a06:	mov    bl,BYTE PTR [ecx+eiz*2-0x5e]
  416a0a:	push   ds
  416a0b:	cwde   
  416a0c:	test   DWORD PTR ds:0x219e4743,0x3efdd7dd
  416a16:	(bad)  
  416a17:	mov    eax,ds:0x131bd190
  416a1c:	push   0xffffffe8
  416a1e:	sbb    ebx,DWORD PTR [esi-0x74]
  416a21:	ins    BYTE PTR es:[edi],dx
  416a22:	xchg   ecx,edx
  416a24:	mov    dl,0x5c
  416a26:	add    ah,BYTE PTR [edx]
  416a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a29:	inc    eax
  416a2a:	add    BYTE PTR [edx-0x20],0x86
  416a2e:	sub    DWORD PTR [ecx],0xffffff9a
  416a31:	imul   edi,DWORD PTR [eax-0x32958e3],0x1461bcde
  416a3b:	(bad)  
  416a3c:	(bad)  
  416a3d:	and    al,0x1b
  416a3f:	dec    edi
  416a40:	inc    ebp
  416a41:	les    edx,FWORD PTR [edi+0x649428ae]
  416a47:	and    DWORD PTR [edx],0x7e48aa5c
  416a4d:	sbb    esi,DWORD PTR [ecx+0x71]
  416a50:	int3   
  416a51:	mov    al,0x82
  416a53:	mov    ah,0xfd
  416a55:	sub    eax,ecx
  416a57:	xchg   DWORD PTR [esp+ecx*1+0x4eb85226],ebp
  416a5e:	mov    DWORD PTR [ecx],0xaa9df4e0
  416a64:	or     ebx,DWORD PTR [ebp-0x3123b4e6]
  416a6a:	jmp    0xabf4:0x693704b0
  416a71:	or     al,0xcd
  416a73:	test   al,0x55
  416a75:	xor    DWORD PTR [edx+ecx*2+0x35],edi
  416a79:	xchg   ebx,eax
  416a7a:	and    edx,ecx
  416a7c:	daa    
  416a7d:	push   esp
  416a7e:	mov    ebx,0xecf30190
  416a83:	inc    ebp
  416a84:	sbb    eax,0x5d0cd890
  416a89:	pop    esi
  416a8a:	dec    ebp
  416a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8c:	lds    ecx,FWORD PTR [esi-0x62]
  416a8f:	and    ebx,DWORD PTR [edx]
  416a91:	xor    edi,DWORD PTR [ebp+0x2f940d78]
  416a97:	add    cl,BYTE PTR [esi]
  416a99:	mov    cs,WORD PTR [esi+0x1d6884cb]
  416a9f:	fisttp DWORD PTR [ebp+0x1be6ec9d]
  416aa5:	pushf  
  416aa6:	mov    cl,0x65
  416aa8:	fs or  esp,eax
  416aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aac:	mov    esp,0xa8a2416a
  416ab1:	fsub   QWORD PTR [eax]
  416ab3:	xchg   ecx,eax
  416ab4:	cwde   
  416ab5:	xor    DWORD PTR [edx-0x50],esi
  416ab8:	fdiv   st,st(7)
  416aba:	jp     0x416b24
  416abc:	popa   
  416abd:	sub    eax,0x78a8e57f
  416ac2:	cmp    DWORD PTR [ebx+0x3a],ebx
  416ac5:	jge    0x416af2
  416ac7:	xchg   edx,eax
  416ac8:	popa   
  416ac9:	out    0x4f,al
  416acb:	inc    ebx
  416acc:	mov    eax,ds:0xd795188
  416ad1:	inc    ebx
  416ad2:	mov    esp,0x38227f5b
  416ad7:	dec    ebx
  416ad8:	imul   ecx,eax,0x30988622
  416ade:	jo     0x416aa0
  416ae0:	mov    bl,dl
  416ae2:	fldenv [edx]
  416ae4:	ins    BYTE PTR es:[edi],dx
  416ae5:	add    DWORD PTR [edi+0x18],edx
  416ae8:	xchg   BYTE PTR [ecx-0x71b2596d],dl
  416aee:	pop    ss
  416aef:	xchg   DWORD PTR [esi-0x5b33043c],ecx
  416af5:	fwait
  416af6:	push   0x511feb06
  416afb:	test   al,0xbb
  416afd:	cmc    
  416afe:	and    eax,0x7f107ea8
  416b03:	stos   DWORD PTR es:[edi],eax
  416b04:	xchg   edi,eax
  416b05:	leave  
  416b06:	inc    ebp
  416b07:	leave  
  416b08:	pusha  
  416b09:	jnp    0x416b15
  416b0b:	xor    al,0x33
  416b0d:	xor    eax,0x5585d63b
  416b12:	in     eax,dx
  416b13:	lods   al,BYTE PTR ds:[esi]
  416b14:	ret    
  416b15:	aad    0xa1
  416b17:	inc    edi
  416b18:	sub    BYTE PTR [edi+0x59],bl
  416b1b:	and    DWORD PTR [ebp-0x29],esi
  416b1e:	jg     0x416b52
  416b20:	shr    ecx,cl
  416b22:	dec    ecx
  416b23:	pop    esp
  416b24:	enter  0x9a42,0x23
  416b28:	cwde   
  416b29:	push   ecx
  416b2a:	ins    DWORD PTR es:[edi],dx
  416b2b:	add    dl,BYTE PTR [ebx-0x1eb447eb]
  416b31:	jmp    0x3748bde4
  416b36:	inc    eax
  416b37:	cmp    al,0xee
  416b39:	popf   
  416b3a:	mov    edi,DWORD PTR [ebp-0x5a4ebc09]
  416b40:	fs addr16 xchg esi,eax
  416b43:	mov    cl,0xe8
  416b45:	fcom   DWORD PTR [ebx-0x1c]
  416b48:	enter  0xee0c,0xe7
  416b4c:	test   al,0x92
  416b4e:	data16 fisubr WORD PTR [esp+eiz*4+0x4ef7be3d]
  416b56:	dec    edx
  416b57:	out    dx,eax
  416b58:	sub    BYTE PTR [eax-0x7b],dh
  416b5b:	retf   
  416b5c:	jmp    0x416b90
  416b5e:	xor    cl,BYTE PTR [edx]
  416b60:	stc    
  416b61:	xor    eax,0xd90eb700
  416b66:	mov    edx,0xb4d46c55
  416b6b:	dec    eax
  416b6c:	push   0xefa227ff
  416b71:	xchg   ebp,eax
  416b72:	jl     0x416ba7
  416b74:	mov    bh,0x12
  416b76:	mov    ah,0xdf
  416b78:	in     al,0x37
  416b7a:	int3   
  416b7b:	test   al,0x1d
  416b7d:	push   edi
  416b7e:	out    0xd7,al
  416b80:	sbb    eax,0x3d5e9247
  416b85:	iret   
  416b86:	es sbb dh,al
  416b89:	and    eax,ebx
  416b8b:	pop    ebx
  416b8c:	push   ds
  416b8d:	stos   DWORD PTR es:[edi],eax
  416b8e:	mov    esp,DWORD PTR [edx+0x5daad0c2]
  416b94:	popf   
  416b95:	sti    
  416b96:	add    DWORD PTR [edx+0x7c2c8571],ecx
  416b9c:	push   cs
  416b9d:	cmp    DWORD PTR [edi],edx
  416b9f:	adc    ah,BYTE PTR [edi]
  416ba1:	mov    bh,0x8d
  416ba3:	xchg   ebx,eax
  416ba4:	sub    al,0x8c
  416ba6:	retf   0x1f6f
  416ba9:	cmp    bh,bh
  416bab:	xchg   ebx,eax
  416bac:	(bad)  
  416bae:	cmp    al,0xa6
  416bb0:	nop
  416bb1:	xchg   ebp,eax
  416bb2:	cli    
  416bb3:	fnstenv [eax-0xb]
  416bb6:	or     dh,BYTE PTR [ebx-0x27]
  416bb9:	sub    BYTE PTR [edi+0x43640e5],dl
  416bbf:	repz mov edx,0xb5c5ed88
  416bc5:	mov    cl,0x2e
  416bc7:	push   esi
  416bc8:	ror    ebp,0xd3
  416bcb:	cdq    
  416bcc:	xor    eax,0x65683d14
  416bd1:	xor    cl,BYTE PTR [esi-0x60c58e]
  416bd7:	jmp    0x235c6510
  416bdc:	ja     0x416c4a
  416bde:	daa    
  416bdf:	int3   
  416be0:	loopne 0x416c0c
  416be2:	cmp    bl,BYTE PTR [edi+0x6b25c9c8]
  416be8:	mov    eax,0x4ac0069a
  416bed:	mov    esi,0x2e93d82b
  416bf2:	mov    ecx,0xe8290f47
  416bf7:	pusha  
  416bf8:	into   
  416bf9:	pop    ecx
  416bfa:	pushf  
  416bfb:	mov    DWORD PTR [edi+0x6a004760],0x5e411374
  416c05:	repz add bh,BYTE PTR [eax]
  416c08:	mov    al,ds:0xb9f4a6a2
  416c0d:	push   esi
  416c0e:	jecxz  0x416c0e
  416c10:	mov    edx,0x2f55c774
  416c15:	ret    0xb4eb
  416c18:	cmc    
  416c19:	jnp    0x416c14
  416c1b:	jle    0x416c2d
  416c1d:	mov    al,ds:0x75eb2add
  416c22:	jge    0x416c16
  416c24:	pop    esi
  416c25:	push   ds
  416c26:	xchg   esi,eax
  416c27:	aad    0x63
  416c29:	lahf   
  416c2a:	dec    ecx
  416c2b:	pop    ss
  416c2c:	mov    WORD PTR [edi],cs
  416c2e:	or     BYTE PTR [eax+0x14],dl
  416c31:	aaa    
  416c32:	(bad)  
  416c33:	add    al,0xc1
  416c35:	(bad)
  416c38:	out    0xf4,al
  416c3a:	mov    bl,0xef
  416c3c:	nop
  416c3d:	mov    cl,BYTE PTR [edi+ebx*8-0x34161cc9]
  416c44:	push   esi
  416c45:	fsub   QWORD PTR [ebx+0x77]
  416c48:	add    ebp,DWORD PTR [edx+0x34f94530]
  416c4e:	popa   
  416c4f:	ficomp WORD PTR [eax+0x52]
  416c52:	cdq    
  416c53:	mov    ah,0x38
  416c55:	dec    esp
  416c56:	jmp    0x8f14:0xcec5c1b6
  416c5d:	fimul  DWORD PTR [esi]
  416c5f:	mov    edx,edi
  416c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c62:	mov    ebx,0x3c332e79
  416c67:	or     al,0x86
  416c69:	lods   eax,DWORD PTR ds:[esi]
  416c6a:	loope  0x416ca7
  416c6c:	ds adc eax,0xb5a04338
  416c72:	lods   eax,DWORD PTR ds:[esi]
  416c73:	mov    dl,0x12
  416c75:	ret    0x3204
  416c78:	(bad)  
  416c79:	inc    BYTE PTR [edi-0x1eaed6b0]
  416c7f:	int3   
  416c80:	in     eax,dx
  416c81:	pop    ebx
  416c82:	aas    
  416c83:	pushf  
  416c84:	jecxz  0x416cbd
  416c86:	jecxz  0x416c54
  416c88:	mov    ch,0xbc
  416c8a:	aam    0xda
  416c8c:	in     eax,dx
  416c8d:	(bad)  
  416c8e:	shl    BYTE PTR [ecx+0x58a4d57b],cl
  416c94:	mov    al,0x9
  416c96:	jl     0x416c5d
  416c98:	outs   dx,BYTE PTR ds:[esi]
  416c99:	mov    ebp,0xf735ea98
  416c9e:	inc    bh
  416ca0:	clc    
  416ca1:	sbb    DWORD PTR [ecx+0x14],0x72d0a8dc
  416ca8:	out    dx,al
  416ca9:	or     BYTE PTR [edx],ah
  416cab:	add    ebx,DWORD PTR [edi+0x2429dfdc]
  416cb1:	pop    es
  416cb2:	mov    al,0xdd
  416cb4:	(bad)  
  416cb5:	push   ecx
  416cb6:	adc    al,bl
  416cb8:	xor    ebx,DWORD PTR [ecx+0x66]
  416cbb:	xlat   BYTE PTR ds:[ebx]
  416cbc:	aam    0x49
  416cbe:	push   esi
  416cbf:	inc    eax
  416cc0:	aad    0x94
  416cc2:	fcomp  DWORD PTR gs:[esi]
  416cc5:	xchg   cl,bh
  416cc7:	and    ebx,esp
  416cc9:	mov    al,ds:0x3e4ee23f
  416cce:	or     al,0x19
  416cd1:	test   al,0x6e
  416cd3:	pop    edx
  416cd4:	or     dl,dl
  416cd6:	stos   BYTE PTR es:[edi],al
  416cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd8:	pushf  
  416cd9:	ins    DWORD PTR es:[edi],dx
  416cda:	test   BYTE PTR [edx+ebx*4-0x7d],al
  416cde:	scas   eax,DWORD PTR es:[edi]
  416cdf:	jg     0x416cd5
  416ce1:	in     eax,0x51
  416ce3:	sbb    DWORD PTR [ebp+0x234adb63],esp
  416ce9:	cli    
  416cea:	in     eax,dx
  416ceb:	ret    
  416cec:	pop    edx
  416ced:	jl     0x416d66
  416cef:	pusha  
  416cf0:	push   edx
  416cf1:	cld    
  416cf2:	not    dl
  416cf4:	xchg   edx,eax
  416cf5:	in     al,0xe4
  416cf7:	cmp    cl,BYTE PTR [edi-0x30]
  416cfa:	lahf   
  416cfb:	mov    DWORD PTR [eax-0xa1ab36d],ecx
  416d01:	fwait
  416d02:	cmp    BYTE PTR [eax+0x2ea0fece],0x9e
  416d09:	jns    0x416cce
  416d0b:	lea    esi,[ebp+0x761a810e]
  416d11:	enter  0x106e,0x5c
  416d15:	dec    ebx
  416d16:	(bad)  
  416d17:	mov    edi,es
  416d19:	mov    ch,0xdc
  416d1b:	jge    0x416d66
  416d1d:	mov    eax,ds:0x4e41ac1c
  416d22:	lahf   
  416d23:	and    cl,ah
  416d25:	call   0xca7c178a
  416d2a:	ins    DWORD PTR es:[edi],dx
  416d2b:	mov    WORD PTR [ebx],?
  416d2d:	push   0x44a64e7e
  416d32:	xchg   ebx,eax
  416d33:	outs   dx,DWORD PTR ds:[esi]
  416d34:	sbb    eax,0xad5cd604
  416d39:	add    eax,0xfda99b41
  416d3e:	(bad)  
  416d40:	xor    ch,BYTE PTR [eax]
  416d42:	inc    esi
  416d43:	repz jge 0x416d73
  416d46:	push   edx
  416d47:	retf   0xe1ae
  416d4a:	ins    DWORD PTR es:[edi],dx
  416d4b:	leave  
  416d4c:	mov    WORD PTR [ecx],es
  416d4e:	push   0xffffff99
  416d50:	push   ss
  416d51:	clc    
  416d52:	mov    DWORD PTR ds:0x6df13b73,ebp
  416d58:	les    esi,FWORD PTR [edx-0x42]
  416d5b:	cmp    BYTE PTR [ecx+0x3ac95c5c],ch
  416d61:	int3   
  416d62:	lds    eax,FWORD PTR [eax+0x1f]
  416d65:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416d67:	or     DWORD PTR [ecx],ecx
  416d69:	mov    ecx,0xc475cfdd
  416d6e:	jne    0x416d00
  416d70:	out    dx,al
  416d71:	mov    eax,edx
  416d73:	mov    al,0x13
  416d75:	mov    esp,0x2706f9fa
  416d7a:	push   0x7d
  416d7c:	sub    cl,bl
  416d7e:	das    
  416d7f:	sub    al,BYTE PTR [esp+ebx*8-0x7696257b]
  416d86:	xchg   esp,eax
  416d87:	dec    esi
  416d88:	fistp  QWORD PTR ds:0x3e5ce09
  416d8e:	jg     0x416d8b
  416d90:	mov    cl,0x96
  416d92:	dec    ecx
  416d93:	jle    0x416d23
  416d95:	mov    cl,BYTE PTR [ecx+0x70]
  416d98:	je     0x416d44
  416d9a:	add    dl,BYTE PTR [ecx]
  416d9c:	(bad)  
  416d9d:	cld    
  416d9e:	pop    ebx
  416d9f:	jmp    0x9c0f536e
  416da4:	xor    ecx,DWORD PTR [edi-0x167436f9]
  416daa:	test   DWORD PTR [ecx],edi
  416dac:	in     al,dx
  416dad:	dec    eax
  416dae:	pop    eax
  416daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db0:	in     al,dx
  416db1:	int3   
  416db2:	sbb    BYTE PTR [edx],dl
  416db4:	sbb    bl,dl
  416db6:	loope  0x416d6f
  416db8:	inc    ebx
  416db9:	jno    0x416d6b
  416dbb:	(bad)  
  416dbc:	jmp    0x9a82ab5
  416dc1:	test   esp,edx
  416dc3:	sub    DWORD PTR ds:0xd3b5080a,edx
  416dc9:	cmp    al,0x2c
  416dcb:	cmp    ch,BYTE PTR [ebp+ebx*2+0x4194623e]
  416dd2:	pop    es
  416dd3:	inc    esp
  416dd4:	sbb    BYTE PTR [edi],cl
  416dd6:	jmp    0xd8687457
  416ddb:	fadd   DWORD PTR [ebp+0x56]
  416dde:	iret   
  416ddf:	push   ebx
  416de0:	sbb    al,0xce
  416de2:	sahf   
  416de3:	retf   0x101d
  416de6:	aaa    
  416de7:	sar    BYTE PTR [ebp-0x3149bc9d],1
  416ded:	popf   
  416dee:	pop    ebx
  416def:	jnp    0x416e32
  416df1:	jecxz  0x416d88
  416df3:	mov    cl,BYTE PTR [ecx]
  416df5:	jp     0x416dc6
  416df7:	stos   DWORD PTR es:[edi],eax
  416df8:	inc    ebp
  416df9:	dec    edx
  416dfa:	in     al,dx
  416dfb:	pop    ss
  416dfc:	dec    ebx
  416dfd:	pop    ecx
  416dfe:	lock data16 jmp 0x416dce
  416e02:	mov    ebx,0x6f87ed19
  416e07:	and    BYTE PTR [ebp-0x48],cl
  416e0a:	mov    al,ds:0x2eaeaa7c
  416e0f:	push   eax
  416e10:	xlat   BYTE PTR ds:[ebx]
  416e11:	ss inc ebp
  416e13:	pop    es
  416e14:	or     eax,0x9931e0f9
  416e19:	(bad)  
  416e1a:	imul   ebp,edx,0xffffffed
  416e1d:	adc    DWORD PTR [ebp+0x54],ebx
  416e20:	lea    ebx,[esi+0x10be07cc]
  416e26:	jno    0x416e4b
  416e28:	xchg   ebp,eax
  416e29:	out    0x81,eax
  416e2b:	xchg   esi,eax
  416e2c:	mov    ds:0x30537364,al
  416e31:	dec    ecx
  416e32:	leave  
  416e33:	mov    esp,0xaec57135
  416e38:	(bad)  
  416e39:	sub    BYTE PTR [edx],bh
  416e3b:	call   0x3829:0x8c462306
  416e42:	add    al,0x9e
  416e44:	mov    ah,BYTE PTR [eax+eax*1]
  416e47:	add    eax,0x50af9bf
  416e4c:	xchg   DWORD PTR [esi-0x1c],ebx
  416e4f:	inc    edi
  416e50:	jmp    0x616ca339
  416e55:	mov    WORD PTR [esp+ebx*8+0x3c7378d1],?
  416e5c:	cmp    eax,0xf79a6165
  416e61:	add    bh,BYTE PTR [esi+eax*8-0x59]
  416e65:	mov    ecx,cs
  416e67:	mov    ch,BYTE PTR gs:[edi-0x4d]
  416e6b:	sar    DWORD PTR [ecx+0x1a],cl
  416e6e:	xor    eax,0xbee17734
  416e73:	adc    BYTE PTR [ebx-0x3ade62ea],0x9
  416e7a:	xor    dh,dh
  416e7c:	iret   
  416e7d:	fstp   DWORD PTR [ecx-0x523da777]
  416e83:	push   ebp
  416e84:	jle    0x416ed8
  416e86:	(bad)  
  416e87:	popf   
  416e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e89:	ins    DWORD PTR es:[edi],dx
  416e8a:	aaa    
  416e8b:	frstor [edi+0x67]
  416e8e:	lahf   
  416e8f:	add    al,0x88
  416e91:	lods   al,BYTE PTR ds:[esi]
  416e92:	ret    
  416e93:	jle    0x416eff
  416e95:	mov    edx,0x2f281928
  416e9a:	cmp    al,0xab
  416e9c:	add    eax,0xffffffe0
  416e9f:	xchg   esi,eax
  416ea0:	in     al,0x72
  416ea2:	dec    ebp
  416ea3:	xor    DWORD PTR [edx],ebp
  416ea5:	mov    ch,0xa8
  416ea7:	pop    esi
  416ea8:	loopne 0x416eea
  416eaa:	jnp    0x416e6c
  416eac:	enter  0x43c2,0x1f
  416eb0:	or     al,0xe
  416eb2:	or     ch,al
  416eb4:	push   es
  416eb5:	cmp    al,BYTE PTR [ebx+edi*4-0x13957221]
  416ebc:	dec    edx
  416ebd:	cli    
  416ebe:	pop    eax
  416ebf:	sub    DWORD PTR [ebx-0x204c1b0],0xfffffffa
  416ec6:	bound  edi,QWORD PTR [edi+0x6f]
  416ec9:	inc    ebx
  416eca:	dec    ecx
  416ecb:	ja     0x416e7c
  416ecd:	push   esp
  416ece:	bound  esi,QWORD PTR [ebx+0x5ed815cc]
  416ed4:	repnz push ebx
  416ed6:	fstp   QWORD PTR [ebx+0x9]
  416eda:	lock xchg ecx,eax
  416edc:	push   eax
  416edd:	(bad)  
  416ede:	pop    ebx
  416edf:	and    edx,esi
  416ee1:	add    al,0xc4
  416ee3:	fcom   DWORD PTR [eax]
  416ee5:	imul   ebx,DWORD PTR [ecx],0xffffff81
  416ee8:	es stc 
  416eea:	xlat   BYTE PTR ds:[ebx]
  416eeb:	in     eax,dx
  416eec:	or     edi,DWORD PTR [ebp-0x1bbf5caf]
  416ef2:	shl    BYTE PTR [edx],1
  416ef4:	mov    ah,0x43
  416ef6:	scas   eax,DWORD PTR es:[edi]
  416ef7:	sbb    eax,0xdd288c9f
  416efc:	sub    esi,DWORD PTR [eax+esi*1]
  416eff:	pop    ebp
  416f00:	out    dx,al
  416f01:	fwait
  416f02:	rol    BYTE PTR [ebx],cl
  416f04:	call   0xf145:0x819f1e6c
  416f0b:	fadd   DWORD PTR [esi-0x483f3537]
  416f11:	mov    bl,0x6d
  416f13:	mov    edi,0x358c5f91
  416f18:	les    eax,FWORD PTR [edx-0x21d9518d]
  416f1e:	and    DWORD PTR [edx+0x10f622a6],0x5f
  416f25:	adc    al,0x69
  416f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f28:	das    
  416f29:	sub    ecx,DWORD PTR gs:[edi-0x31cc1c9]
  416f30:	arpl   si,di
  416f32:	(bad)  
  416f33:	sahf   
  416f34:	sub    al,0x2
  416f36:	cmp    BYTE PTR [ecx+0x66d7c325],dh
  416f3c:	loop   0x416f03
  416f3e:	xlat   BYTE PTR ds:[ebx]
  416f3f:	stos   BYTE PTR es:[edi],al
  416f40:	repnz (bad) 
  416f42:	mov    ebx,0x77a10749
  416f47:	sub    al,0xb9
  416f49:	mov    dl,0xdb
  416f4b:	xchg   edx,eax
  416f4c:	push   ss
  416f4d:	adc    BYTE PTR [edx],0xf0
  416f50:	dec    esp
  416f51:	pop    es
  416f52:	mov    edi,0xcb3b168
  416f57:	xor    eax,DWORD PTR [ecx-0x6f0d44f0]
  416f5d:	mov    BYTE PTR [ecx-0x3137fdbe],ch
  416f63:	test   al,0x82
  416f65:	ss out dx,eax
  416f67:	outs   dx,BYTE PTR ds:[esi]
  416f68:	xchg   esi,eax
  416f69:	xchg   DWORD PTR fs:[edx+0x3a86c50b],edi
  416f70:	add    al,0x70
  416f72:	idiv   eax
  416f74:	and    DWORD PTR [ebx-0x39],edx
  416f77:	xchg   bh,cl
  416f79:	xor    bh,cl
  416f7b:	xor    eax,0x5d14024a
  416f80:	inc    esp
  416f81:	push   ds
  416f82:	rcr    al,cl
  416f84:	xlat   BYTE PTR ds:[ebx]
  416f85:	mov    BYTE PTR [eax-0x45],dh
  416f88:	out    dx,eax
  416f89:	repnz clc 
  416f8b:	or     bl,BYTE PTR [ebp+eiz*4-0x141acf89]
  416f92:	mov    ds:0xa83e9da4,al
  416f97:	add    al,0x72
  416f99:	adc    BYTE PTR [ecx-0x4f],ch
  416f9c:	xor    edi,esp
  416f9e:	stc    
  416f9f:	test   esp,ebx
  416fa1:	pop    esp
  416fa2:	test   eax,0xf162cbc
  416fa7:	shl    DWORD PTR [esi+0x69cdbebf],cl
  416fad:	xchg   ebp,eax
  416fae:	in     eax,0x70
  416fb0:	(bad)  
  416fb1:	cdq    
  416fb2:	pushf  
  416fb3:	retf   0x1e0a
  416fb6:	cmp    ebx,DWORD PTR [edi]
  416fb8:	cmp    esp,DWORD PTR [esi+0x2d]
  416fbb:	pop    ds
  416fbc:	mov    bh,BYTE PTR [edx+0xf]
  416fbf:	(bad)  
  416fc0:	cdq    
  416fc1:	sbb    al,0xde
  416fc3:	mov    BYTE PTR [edx-0x1e961f7d],dl
  416fc9:	aam    0xe7
  416fcb:	ss jecxz 0x41700d
  416fce:	or     DWORD PTR [eax-0x1c],esp
  416fd1:	cmp    edx,DWORD PTR [edi+0x62]
  416fd4:	adc    edx,DWORD PTR [esi-0x10]
  416fd7:	pop    ds
  416fd8:	cmp    bh,bh
  416fda:	aaa    
  416fdb:	mov    bh,0x9c
  416fdd:	or     al,BYTE PTR [edx+0x1537fe6e]
  416fe3:	push   edi
  416fe4:	jne    0x416ff1
  416fe6:	push   0xb2193757
  416feb:	inc    ebp
  416fec:	add    DWORD PTR [ebx-0x76bec9c],esp
  416ff2:	and    DWORD PTR [edx],0xc81e1007
  416ff8:	or     eax,0x4aa5282d
  416ffd:	mov    ds:0x241ced5e,al
  417002:	ins    BYTE PTR es:[edi],dx
  417003:	retf   0x7c4e
  417006:	or     bh,BYTE PTR [esi+0x16]
  417009:	sub    eax,0xf52cb8f4
  41700e:	xchg   esp,eax
  41700f:	addr16 pop edx
  417011:	call   0xe1a:0x659705f9
  417018:	mov    DWORD PTR [edx+0x246cc617],eax
  41701e:	cmp    al,0xa
  417020:	jp     0x416fb7
  417022:	inc    ebp
  417023:	mov    al,0xc7
  417025:	fidivr DWORD PTR [ebx-0x182b4784]
  41702b:	xchg   ecx,eax
  41702c:	add    DWORD PTR [esi+0x51],ebx
  41702f:	fst    DWORD PTR [esi+0x72]
  417032:	ins    BYTE PTR es:[edi],dx
  417033:	lods   al,BYTE PTR ds:[esi]
  417034:	sbb    ebp,DWORD PTR [esp+ebp*1]
  417037:	jns    0x417093
  417039:	pop    ecx
  41703a:	(bad)  
  41703c:	mov    ss,eax
  41703e:	jle    0x41709a
  417040:	es cmp eax,0x8c6b0e5f
  417046:	sbb    eax,0x40fff428
  41704b:	pop    es
  41704c:	scas   eax,DWORD PTR es:[edi]
  41704d:	xchg   ebp,eax
  41704e:	push   ecx
  41704f:	(bad)  [esi+0x74b0fbc9]
  417055:	adc    ecx,DWORD PTR [edi]
  417057:	ja     0x41701c
  417059:	push   es
  41705a:	xlat   BYTE PTR ds:[ebx]
  41705b:	lss    edx,FWORD PTR [eax-0x66d9b9e2]
  417062:	cmp    DWORD PTR ds:0x5c95cfad,esi
  417068:	mov    esi,0xbde95345
  41706d:	(bad)  
  41706e:	mov    cl,0x32
  417070:	push   ecx
  417071:	(bad)
  417074:	adc    BYTE PTR [eax+0x2b0d3433],cl
  41707a:	pop    ds
  41707b:	mov    eax,cs:0x76fdb9cf
  417081:	mov    WORD PTR [eax+0x385166b0],fs
  417087:	outs   dx,BYTE PTR ds:[esi]
  417088:	sub    al,0xd9
  41708a:	ins    BYTE PTR es:[edi],dx
  41708b:	aam    0xe
  41708d:	push   ebx
  41708e:	adc    ebx,ebx
  417090:	dec    esi
  417091:	pusha  
  417092:	push   eax
  417093:	inc    ebp
  417094:	jne    0x4170a3
  417096:	mov    edx,0x45bff5dc
  41709b:	stc    
  41709c:	inc    ecx
  41709d:	out    0xce,al
  41709f:	mov    bl,0x1f
  4170a1:	or     esp,ecx
  4170a3:	mov    ds:0x160cd22a,al
  4170a8:	sub    dl,BYTE PTR [ebx]
  4170aa:	in     al,dx
  4170ab:	out    dx,eax
  4170ac:	gs or  esp,edi
  4170af:	and    DWORD PTR [esi],ebp
  4170b1:	mov    ah,0x92
  4170b3:	aaa    
  4170b4:	fiadd  DWORD PTR [esi]
  4170b6:	les    edx,FWORD PTR [eax-0x2b]
  4170b9:	cmp    dh,BYTE PTR [edi-0x39]
  4170bc:	aam    0xd0
  4170be:	out    0x41,eax
  4170c0:	ret    
  4170c1:	mov    eax,ds:0x22c286dc
  4170c6:	cld    
  4170c7:	test   DWORD PTR [ecx+0x67005e33],edx
  4170cd:	aaa    
  4170ce:	mov    ecx,0xa4f9adb2
  4170d3:	ins    WORD PTR es:[edi],dx
  4170d5:	aam    0xd2
  4170d7:	push   edx
  4170d8:	fisub  DWORD PTR [edi+0x5ae8e6b2]
  4170de:	lahf   
  4170df:	ss dec ecx
  4170e1:	add    dl,BYTE PTR [edx+0x4]
  4170e4:	sub    DWORD PTR [edi+0x55],edx
  4170e7:	mov    esp,0xb3a58fe3
  4170ec:	pop    ss
  4170ed:	pop    ebx
  4170ee:	gs leave 
  4170f0:	jmp    0xf4c8:0xaf4e1127
  4170f7:	ret    
  4170f8:	adc    al,0x2e
  4170fa:	pop    DWORD PTR [esi-0x66]
  4170fd:	cmp    ebx,DWORD PTR [eax]
  4170ff:	retf   0xd1a0
  417102:	cmc    
  417103:	je     0x417108
  417105:	sub    al,0x76
  417107:	aad    0x38
  417109:	test   DWORD PTR [edi+0x47368e28],edx
  41710f:	arpl   WORD PTR [edx],cx
  417111:	std    
  417112:	xchg   DWORD PTR [esi+0x6f],esi
  417115:	pop    ecx
  417116:	test   eax,0xf0f577ea
  41711b:	inc    esi
  41711c:	pop    esp
  41711d:	and    esi,esp
  41711f:	rcl    BYTE PTR [ecx+0x352abe88],1
  417125:	mov    ebp,0x359b340d
  41712a:	int    0x6d
  41712c:	imul   edx,DWORD PTR [edx+0xffa20fb],0x59
  417133:	push   eax
  417134:	xchg   edi,eax
  417135:	fist   WORD PTR [eax]
  417137:	inc    eax
  417138:	in     eax,dx
  417139:	jo     0x417100
  41713b:	sub    edx,edi
  41713d:	fstp   QWORD PTR [ecx-0x34]
  417140:	and    DWORD PTR [ebx-0x2e],edi
  417143:	(bad)  
  417144:	jg     0x4171af
  417146:	xor    edx,0xe5361e62
  41714c:	pop    ebx
  41714d:	cdq    
  41714e:	sbb    al,0x2c
  417150:	mov    edi,0xf67afa0c
  417155:	push   ebp
  417156:	jnp    0x41716e
  417158:	div    BYTE PTR [ebx+eax*4+0x1c08b11]
  41715f:	ret    0xfa0f
  417162:	and    eax,0xf49888bd
  417167:	or     ecx,edx
  417169:	mov    ebp,0xba9cb105
  41716e:	aam    0xdc
  417170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417171:	sbb    bl,BYTE PTR [ebx+esi*1-0x7dbb251d]
  417178:	outs   dx,DWORD PTR ds:[esi]
  417179:	lds    ebx,FWORD PTR [ecx-0x5d2a5926]
  41717f:	aas    
  417180:	popf   
  417181:	and    dl,BYTE PTR [eax-0x3]
  417184:	pop    ebx
  417185:	scas   al,BYTE PTR es:[edi]
  417186:	cmp    eax,0xf6c8bddf
  41718b:	ja     0x417153
  41718d:	ret    
  41718e:	add    BYTE PTR [ebp-0x7c7f2eea],bh
  417194:	dec    edi
  417195:	dec    ebx
  417196:	and    ecx,DWORD PTR [edi]
  417198:	adc    BYTE PTR [ebx],0xe5
  41719b:	mov    dl,bl
  41719d:	ja     0x4171c9
  41719f:	cwde   
  4171a0:	fmul   st,st(7)
  4171a2:	enter  0xc831,0x7f
  4171a6:	sub    al,0x78
  4171a8:	mov    dl,0x3c
  4171aa:	mov    WORD PTR [edi-0x79],?
  4171ad:	cmp    DWORD PTR [eax+0x14],ebp
  4171b0:	jmp    0x417182
  4171b2:	(bad)  
  4171b4:	ret    0xa22
  4171b7:	jmp    0x1211:0x8b12c17c
  4171be:	xchg   ebx,eax
  4171bf:	and    eax,ebx
  4171c1:	mov    cl,0x81
  4171c3:	xor    edi,DWORD PTR [esp+ebx*1]
  4171c6:	jmp    0xf7e40a82
  4171cb:	in     al,dx
  4171cc:	inc    ebp
  4171cd:	fadd   st,st(0)
  4171cf:	int3   
  4171d0:	pop    ecx
  4171d1:	dec    edx
  4171d2:	push   ebx
  4171d3:	outs   dx,DWORD PTR ds:[esi]
  4171d4:	int3   
  4171d5:	sbb    cl,0xbd
  4171d8:	sbb    eax,0xbd444b20
  4171dd:	call   0xdf2e01bb
  4171e2:	pop    eax
  4171e3:	fbld   TBYTE PTR [edx]
  4171e5:	je     0x4171af
  4171e7:	stos   BYTE PTR es:[edi],al
  4171e8:	sub    DWORD PTR [eax],ebp
  4171ea:	inc    esp
  4171eb:	aaa    
  4171ec:	jnp    0x41721e
  4171ee:	cmc    
  4171ef:	(bad)  
  4171f0:	dec    edi
  4171f1:	adc    cl,BYTE PTR [esi-0x45]
  4171f4:	mov    esp,0x46a091ed
  4171f9:	fsubr  QWORD PTR [edx+0x6b]
  4171fc:	scas   eax,DWORD PTR es:[edi]
  4171fd:	adc    DWORD PTR [ebx-0x26],edx
  417200:	div    ebx
  417202:	pop    edx
  417203:	fistp  WORD PTR [ebx+0x1a33abb]
  417209:	mov    ecx,0x7dd9b674
  41720e:	xchg   ebp,eax
  41720f:	push   ebp
  417210:	xchg   ebp,eax
  417211:	in     eax,dx
  417212:	sub    ecx,0xffffffe4
  417215:	pusha  
  417216:	(bad)  
  417217:	jo     0x41728d
  417219:	jmp    0x4171cd
  41721b:	cld    
  41721c:	cmc    
  41721d:	sbb    al,0xa4
  41721f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417220:	pop    edi
  417221:	out    0xcc,eax
  417223:	(bad)  
  417224:	jecxz  0x417228
  417226:	enter  0x6a1,0x8f
  41722a:	jns    0x417250
  41722c:	mov    al,ds:0xc81bbb6c
  417231:	ret    
  417232:	dec    esi
  417233:	aas    
  417234:	sbb    al,0xa7
  417236:	xchg   ecx,eax
  417237:	adc    eax,0xfd89d188
  41723c:	nop
  41723d:	js     0x4171e8
  41723f:	sahf   
  417240:	pop    ss
  417241:	mov    esi,0xbea569b2
  417246:	mov    ds:0xdbeac081,eax
  41724b:	inc    ecx
  41724c:	add    ecx,ecx
  41724e:	shl    DWORD PTR [esi],1
  417250:	sbb    eax,0xc6eb5f91
  417256:	int3   
  417257:	mov    edi,0xcd452987
  41725c:	and    al,0x74
  41725e:	xchg   ebp,eax
  41725f:	test   DWORD PTR [esi],eax
  417261:	mov    dh,0x48
  417263:	inc    edi
  417264:	cmp    al,0x6
  417266:	mov    dl,bl
  417268:	inc    ecx
  417269:	arpl   WORD PTR [ebx],di
  41726b:	xor    al,0xaf
  41726d:	leave  
  41726e:	shl    BYTE PTR [ecx],0x80
  417271:	mov    ah,0x41
  417273:	ret    
  417274:	sub    DWORD PTR [edx+0x17],ebx
  417277:	sti    
  417278:	retf   0x5391
  41727b:	shr    cl,cl
  41727d:	ret    0xd948
  417280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417281:	dec    ecx
  417282:	test   eax,0x3ce71471
  417287:	add    BYTE PTR [esi+0x77],dl
  41728a:	mov    ds:0x88652593,eax
  41728f:	scas   eax,DWORD PTR es:[edi]
  417290:	adc    ch,BYTE PTR [ebx-0x40]
  417293:	inc    eax
  417294:	in     al,0x30
  417296:	stos   DWORD PTR es:[edi],eax
  417297:	hlt    
  417298:	xchg   DWORD PTR [ebx+eax*4+0x19641bc3],ecx
  41729f:	pop    ebp
  4172a0:	pop    ss
  4172a1:	outs   dx,BYTE PTR fs:[esi]
  4172a3:	jge    0x417309
  4172a5:	mov    ebx,0xace16170
  4172aa:	in     al,0x2a
  4172ac:	jb     0x4172b7
  4172ae:	test   BYTE PTR [eax],0xbb
  4172b1:	adc    esi,0xd4d980dc
  4172b7:	or     al,0x49
  4172b9:	(bad)  
  4172ba:	data16 icebp 
  4172bc:	mov    WORD PTR [ecx],es
  4172be:	inc    eax
  4172bf:	out    dx,eax
  4172c0:	retf   
  4172c1:	adc    edi,esp
  4172c3:	pop    esi
  4172c4:	inc    ebx
  4172c5:	pop    esi
  4172c6:	or     ebp,edx
  4172c8:	cmp    BYTE PTR [eax-0x5f],al
  4172cb:	sti    
  4172cc:	mov    ?,WORD PTR [edi]
  4172ce:	pop    ds
  4172cf:	mov    fs,WORD PTR [esi+ebx*4]
  4172d2:	xchg   edx,eax
  4172d3:	sbb    al,BYTE PTR [edx+0xa]
  4172d6:	out    dx,eax
  4172d7:	mov    esp,0x17fad3
  4172dc:	shl    eax,0x4a
  4172df:	fcom   st(1)
  4172e1:	in     al,dx
  4172e2:	dec    ebp
  4172e3:	adc    esi,ebx
  4172e5:	mov    BYTE PTR [esi-0x2e496caf],dl
  4172eb:	xor    al,0x42
  4172ed:	inc    ecx
  4172ee:	sbb    BYTE PTR [ecx+0x46],ch
  4172f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f2:	rol    DWORD PTR [ebx+0x4d],0xe3
  4172f6:	stc    
  4172f7:	pop    ss
  4172f8:	pop    ebp
  4172f9:	iret   
  4172fa:	in     al,0xd0
  4172fc:	rol    DWORD PTR [ebx],cl
  4172fe:	push   0x3
  417300:	(bad)  
  417302:	jno    0x4172f2
  417304:	call   0x7ac7:0x21a86ea1
  41730b:	fcom   QWORD PTR [ecx-0x51]
  41730e:	(bad)  
  41730f:	in     al,0xe3
  417311:	jmp    0x8b065e68
  417316:	or     eax,0x85306e68
  41731b:	sub    eax,0x27ff64b0
  417320:	shr    DWORD PTR ds:0x73452f9b,0x5d
  417327:	sub    dh,BYTE PTR [esi+0x72]
  41732a:	push   edi
  41732b:	fucom  st(7)
  41732d:	into   
  41732e:	sbb    edx,DWORD PTR ds:0xe74be49
  417334:	or     edi,DWORD PTR [bp+si-0x2635]
  417339:	(bad)  
  41733a:	sbb    DWORD PTR [eax+0x56],edx
  41733d:	inc    edx
  41733e:	xor    DWORD PTR [esi-0x7a],ebp
  417341:	sbb    ecx,edx
  417343:	mov    ah,0x5b
  417345:	xor    ebp,edi
  417347:	test   al,0xed
  417349:	sbb    al,0x55
  41734b:	(bad)  
  41734c:	leave  
  41734d:	les    edx,FWORD PTR [edi+0x25]
  417350:	xchg   edi,eax
  417351:	sbb    al,0xcf
  417353:	fwait
  417354:	cmp    BYTE PTR [edx+ebp*1],dh
  417357:	stos   DWORD PTR es:[edi],eax
  417358:	jne    0x4172ee
  41735a:	xchg   esp,eax
  41735b:	ins    DWORD PTR es:[edi],dx
  41735c:	addr16 add eax,0x8a5350cc
  417362:	or     BYTE PTR [ebp+0x297009d2],dh
  417368:	popf   
  417369:	inc    ecx
  41736a:	pushf  
  41736b:	ffree  st(7)
  41736d:	add    BYTE PTR [edi-0x18],dh
  417370:	icebp  
  417371:	pop    esi
  417372:	or     al,0xb7
  417374:	xchg   ebx,eax
  417375:	pop    esi
  417376:	shl    BYTE PTR [ebx],cl
  417378:	rcl    DWORD PTR [eax+0x22],1
  41737b:	(bad)  
  41737c:	adc    BYTE PTR [eax],cl
  41737e:	mov    dh,0xd4
  417380:	dec    edi
  417381:	push   eax
  417382:	and    DWORD PTR [edi+0x361ee7cb],0x12fb6c5b
  41738c:	je     0x417340
  41738e:	sahf   
  41738f:	or     edx,DWORD PTR [esi]
  417391:	sub    eax,0xe251aef1
  417396:	sbb    bh,bh
  417398:	shl    DWORD PTR [ebp+0x5b],1
  41739b:	icebp  
  41739c:	adc    DWORD PTR [ecx+0x79],0x7abfe9cb
  4173a3:	mov    al,0x29
  4173a5:	dec    ecx
  4173a6:	sbb    al,0x2a
  4173a8:	aam    0x93
  4173aa:	fcmovnu st,st(4)
  4173ac:	imul   ebp
  4173ae:	dec    edx
  4173af:	(bad)  
  4173b0:	imul   edi,DWORD PTR [ecx],0xf41f87af
  4173b6:	push   es
  4173b7:	pop    esi
  4173b8:	ja     0x4173db
  4173ba:	jne    0x417402
  4173bc:	cmp    eax,0x91e4668f
  4173c1:	scas   al,BYTE PTR es:[edi]
  4173c2:	jb     0x41734b
  4173c4:	sbb    DWORD PTR [ebp-0x4a],ecx
  4173c7:	sti    
  4173c8:	mov    WORD PTR ds:0xe5566be,ss
  4173ce:	inc    DWORD PTR [eax-0x5623878e]
  4173d4:	push   ss
  4173d5:	jecxz  0x41735c
  4173d7:	retf   0x2ee6
  4173da:	(bad)  
  4173db:	pop    ds
  4173dc:	xlat   BYTE PTR ds:[ebx]
  4173dd:	jg     0x4173eb
  4173df:	or     BYTE PTR [ecx],dl
  4173e1:	mov    ebp,0xfe6a4a0f
  4173e6:	daa    
  4173e7:	inc    edx
  4173e8:	inc    edx
  4173e9:	shl    DWORD PTR [eax-0xc],0xc1
  4173ed:	rcl    ebp,1
  4173ef:	int3   
  4173f0:	cmp    esi,edi
  4173f2:	xchg   DWORD PTR [eax],ebp
  4173f4:	and    ebp,DWORD PTR [ebp+0x40]
  4173f7:	mov    eax,ds:0x9338418e
  4173fc:	jnp    0x41743a
  4173fe:	int3   
  4173ff:	out    dx,eax
  417400:	scas   eax,DWORD PTR es:[edi]
  417401:	push   ebp
  417402:	xchg   edx,eax
  417403:	inc    ecx
  417404:	push   ecx
  417405:	iret   
  417406:	pop    ds
  417407:	cmp    dh,BYTE PTR [ecx+0x68]
  41740a:	cld    
  41740b:	jl     0x417401
  41740d:	stos   BYTE PTR es:[edi],al
  41740e:	jmp    0x417402
  417410:	retf   0x953f
  417413:	clc    
  417414:	div    BYTE PTR [ebx-0x23]
  417417:	sub    al,0x23
  417419:	adc    al,0xb0
  41741b:	scas   eax,DWORD PTR es:[edi]
  41741c:	neg    DWORD PTR [edx+0x49]
  41741f:	jbe    0x4173a9
  417421:	inc    ebp
  417422:	jmp    0xd7e2:0xc9bf145c
  417429:	scas   al,BYTE PTR es:[edi]
  41742a:	push   0xffffffd1
  41742c:	sbb    BYTE PTR [esi-0x1e],bl
  41742f:	test   DWORD PTR [esi+0x38],ebp
  417432:	xchg   edi,eax
  417433:	sub    eax,0x4b247531
  417438:	neg    ah
  41743a:	or     eax,0xd33cd32d
  41743f:	xchg   esp,eax
  417440:	sti    
  417441:	js     0x41740b
  417443:	push   eax
  417444:	repz cdq 
  417446:	cmp    BYTE PTR [ebp-0x7249692a],ch
  41744c:	xlat   BYTE PTR ds:[ebx]
  41744d:	dec    edi
  41744e:	out    dx,eax
  41744f:	mov    ebx,0x3d708051
  417454:	addr16 dec ebp
  417456:	pusha  
  417457:	gs js  0x41740e
  41745a:	dec    eax
  41745b:	scas   eax,DWORD PTR es:[edi]
  41745c:	and    al,0xea
  41745e:	mov    bl,0x9a
  417460:	scas   eax,DWORD PTR es:[edi]
  417461:	jecxz  0x4174de
  417463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417464:	xor    ebx,edi
  417466:	pop    ds
  417467:	(bad)  
  417468:	les    esi,FWORD PTR [ebp*2-0x752f5a7a]
  41746f:	ror    BYTE PTR [eax+0x32],cl
  417472:	pop    edi
  417473:	xchg   ebx,eax
  417474:	(bad)  
  417475:	jns    0x4174ef
  417477:	(bad)  
  417478:	jmp    0x41749c
  41747a:	bound  edx,QWORD PTR [edi+0x486aca0f]
  417480:	jmp    0x417436
  417482:	push   0x4c
  417484:	jae    0x417437
  417486:	inc    ebp
  417487:	je     0x41747e
  417489:	sbb    eax,esi
  41748b:	je     0x41749f
  41748d:	aad    0x2f
  41748f:	out    0xca,eax
  417491:	push   edx
  417492:	cmp    ecx,DWORD PTR [esi+0x4a46f842]
  417498:	(bad)  
  417499:	out    dx,al
  41749a:	leave  
  41749b:	dec    ebx
  41749c:	xor    bl,0x59
  41749f:	gs sti 
  4174a1:	pop    esi
  4174a2:	scas   eax,DWORD PTR es:[edi]
  4174a3:	lea    eax,[ebp+0x52a11a55]
  4174a9:	mov    BYTE PTR [ecx-0x2d],ch
  4174ac:	xchg   ebx,eax
  4174ad:	sub    bl,cl
  4174af:	mov    ds:0x20830393,eax
  4174b4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4174b6:	into   
  4174b7:	xor    ebp,ecx
  4174b9:	(bad)  
  4174ba:	mov    bh,0x73
  4174bc:	jmp    DWORD PTR [ebp-0x4d]
  4174bf:	mov    dl,BYTE PTR [edx+0x44]
  4174c2:	dec    ebx
  4174c3:	(bad)  
  4174c4:	std    
  4174c5:	fdivr  DWORD PTR [eax]
  4174c7:	test   DWORD PTR [eax-0x2e0bd506],0xd9465413
  4174d1:	(bad)  [edx-0x62166317]
  4174d7:	and    BYTE PTR [eax+0x2632abf6],cl
  4174dd:	sbb    ch,BYTE PTR [edi+0x50]
  4174e0:	mov    WORD PTR [eax+edx*8],gs
  4174e3:	cmp    al,BYTE PTR [ebx]
  4174e5:	push   es
  4174e6:	cmp    eax,0x67d3acc4
  4174eb:	retf   0x598d
  4174ee:	pop    ecx
  4174ef:	daa    
  4174f0:	sbb    BYTE PTR [edx],al
  4174f2:	into   
  4174f3:	fisub  DWORD PTR [edi+edx*4]
  4174f6:	sbb    eax,0x6fbdf162
  4174fb:	dec    edi
  4174fc:	xor    eax,0xfac0241a
  417501:	pop    es
  417502:	fisttp DWORD PTR [ebx-0x6]
  417505:	jmp    0x4d1af292
  41750a:	ret    
  41750b:	cmp    eax,0x792e38b2
  417510:	ss pusha 
  417512:	test   al,0xdb
  417514:	mov    al,0x48
  417516:	stos   BYTE PTR es:[edi],al
  417517:	(bad)  [edi-0x10]
  41751a:	imul   ebp,DWORD PTR [edi+0x49],0xffffff89
  41751e:	jno    0x417503
  417520:	stos   BYTE PTR es:[edi],al
  417521:	inc    esi
  417522:	mov    edx,0x2b0ddfc
  417527:	sbb    DWORD PTR [ebx+0x3],ebp
  41752a:	and    al,0xb7
  41752c:	or     ch,BYTE PTR [edx]
  41752e:	inc    esi
  41752f:	out    0x73,eax
  417531:	(bad)  
  417532:	jns    0x417552
  417534:	xchg   edx,eax
  417535:	sbb    BYTE PTR [ebp+0x72b9e539],al
  41753b:	fsub   DWORD PTR [ebx+esi*1-0x1e]
  41753f:	arpl   dx,ax
  417541:	enter  0x8465,0x4e
  417545:	js     0x417599
  417547:	sbb    DWORD PTR [eax-0x66704a3a],ecx
  41754d:	div    esp
  41754f:	jmp    0x2250ac56
  417554:	icebp  
  417555:	jne    0x41751a
  417557:	mov    esp,0x651cc470
  41755c:	push   ss
  41755d:	aaa    
  41755e:	push   ds
  41755f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417560:	adc    DWORD PTR [esi+0x10],esi
  417563:	xor    al,0x2c
  417565:	adc    DWORD PTR [edx+ebx*4-0x10],ebx
  417569:	cmp    eax,0x9f3adc62
  41756e:	ins    BYTE PTR es:[edi],dx
  41756f:	mov    ecx,DWORD PTR [ebx]
  417571:	jns    0x4175a8
  417573:	(bad)  
  417574:	imul   ecx,DWORD PTR [ecx+0x2380e7aa],0x6
  41757b:	and    dh,BYTE PTR [esi-0x48206efe]
  417581:	sbb    esp,edi
  417583:	mov    ds:0x14b67e6f,al
  417588:	enter  0x46b1,0x50
  41758c:	outs   dx,DWORD PTR ds:[esi]
  41758d:	(bad)  
  41758e:	ret    
  41758f:	mov    cl,0x9d
  417591:	or     ah,dh
  417593:	test   eax,0x290d9d93
  417598:	test   eax,eax
  41759a:	loop   0x417522
  41759c:	dec    esp
  41759d:	dec    esi
  41759e:	and    DWORD PTR [esi-0x43ea5f46],ebp
  4175a4:	das    
  4175a5:	popa   
  4175a6:	sub    eax,DWORD PTR [ebx-0x712673b5]
  4175ac:	pop    esi
  4175ad:	pop    ebx
  4175ae:	jmp    0x9c8b:0x6c23c1ba
  4175b5:	mov    ch,0x85
  4175b7:	cmp    esp,esi
  4175b9:	push   cs
  4175ba:	push   0xc7cc7505
  4175bf:	mov    ah,0xa4
  4175c1:	inc    ebx
  4175c2:	xchg   ecx,eax
  4175c3:	je     0x4175f6
  4175c5:	adc    edx,edi
  4175c7:	sbb    esi,DWORD PTR [eax]
  4175c9:	pop    esi
  4175ca:	dec    ebx
  4175cb:	jmp    0x7e257cf6
  4175d0:	les    ebp,FWORD PTR [eax-0x4b]
  4175d3:	inc    ebp
  4175d4:	cmp    eax,0x7cf2a19d
  4175d9:	test   eax,0xc761afc5
  4175de:	popa   
  4175df:	stc    
  4175e0:	cwde   
  4175e1:	jl     0x417605
  4175e3:	fisubr DWORD PTR [ebx+0x301d55cd]
  4175e9:	mov    al,0x40
  4175eb:	hlt    
  4175ec:	add    DWORD PTR ds:0x2ffc89fc,ebx
  4175f2:	sub    bh,cl
  4175f4:	xchg   edx,eax
  4175f5:	mov    ds:0xd1a6eda4,al
  4175fa:	xor    BYTE PTR ds:0x7c9c6845,dl
  417600:	test   eax,0x9db02edc
  417605:	dec    ebp
  417606:	jle    0x417677
  417608:	xor    ebp,DWORD PTR [edi+edx*2-0x47161200]
  41760f:	in     eax,0x95
  417611:	test   eax,0x46802b4f
  417616:	push   esp
  417617:	jle    0x41766d
  417619:	popf   
  41761a:	or     DWORD PTR [ebx],edi
  41761c:	pop    ecx
  41761d:	inc    esp
  41761e:	and    cl,BYTE PTR [edx-0x7e]
  417621:	loop   0x41767f
  417623:	xor    BYTE PTR [ecx+0x17666b8a],dh
  417629:	js     0x4175eb
  41762b:	sbb    DWORD PTR [eax+0xe],esi
  41762e:	inc    ebx
  41762f:	and    eax,0x36e8bca2
  417634:	bound  edi,QWORD PTR [esi+0x46]
  417637:	loope  0x4176af
  417639:	lds    eax,FWORD PTR [ebp-0x76]
  41763c:	cmp    ah,dh
  41763e:	sub    al,0x3f
  417640:	xchg   BYTE PTR [eax-0x5258be15],dh
  417646:	retf   0x4d48
  417649:	aaa    
  41764a:	and    BYTE PTR ds:0xdf56df2e,bl
  417650:	and    eax,0x5872021a
  417655:	or     edi,ecx
  417657:	test   DWORD PTR [ecx],esp
  417659:	dec    edi
  41765a:	push   ecx
  41765b:	mov    WORD PTR [ecx+eiz*2-0x5b],es
  41765f:	adc    BYTE PTR ss:[ebp+0x12fd5610],al
  417666:	jae    0x4176b3
  417668:	test   eax,0x2d03791b
  41766d:	push   edi
  41766e:	and    dl,bh
  417670:	fcom   DWORD PTR [esi-0x4c]
  417673:	jns    0x417638
  417675:	inc    eax
  417676:	xor    BYTE PTR [edi-0x28],bl
  417679:	in     eax,0x17
  41767b:	push   eax
  41767c:	aad    0xde
  41767e:	add    eax,0x2067e31f
  417683:	outs   dx,DWORD PTR ds:[esi]
  417684:	scas   eax,DWORD PTR es:[edi]
  417685:	clc    
  417686:	mov    ecx,0xda5fedf2
  41768b:	add    al,0x88
  41768d:	stc    
  41768e:	adc    DWORD PTR [eax],ebx
  417690:	nop
  417691:	retf   
  417692:	push   0x5c
  417694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417695:	into   
  417696:	das    
  417697:	inc    edi
  417698:	mov    eax,ds:0x28c31260
  41769d:	in     al,dx
  41769e:	stc    
  41769f:	mov    al,0xa4
  4176a1:	mov    bh,ch
  4176a3:	frstor [esi-0x5d611005]
  4176a9:	pcmpeqd mm6,QWORD PTR [ebx]
  4176ac:	add    DWORD PTR [edi],esi
  4176ae:	jg     0x417703
  4176b0:	lods   al,BYTE PTR ds:[esi]
  4176b1:	pop    eax
  4176b2:	test   BYTE PTR [edi+0x35a87bec],ah
  4176b8:	ins    BYTE PTR es:[edi],dx
  4176b9:	loopne 0x4176d7
  4176bb:	test   BYTE PTR [esp+ebx*2],dl
  4176be:	or     al,0xc8
  4176c0:	xchg   esp,eax
  4176c1:	push   eax
  4176c2:	cmp    al,0x41
  4176c4:	out    dx,al
  4176c5:	loope  0x417679
  4176c7:	or     DWORD PTR [edi],0x5504f0b
  4176cd:	jmp    0x417655
  4176cf:	mov    bh,0x9
  4176d1:	or     dl,BYTE PTR [ebx+0x28]
  4176d4:	pop    ebx
  4176d5:	pushf  
  4176d6:	add    eax,esp
  4176d8:	or     al,0x6e
  4176da:	into   
  4176db:	inc    eax
  4176dc:	rol    BYTE PTR [ebx-0x4ebf985],cl
  4176e2:	fistp  DWORD PTR [ebx-0x7139a6e5]
  4176e8:	fistp  DWORD PTR [ecx+0xe]
  4176eb:	into   
  4176ec:	lds    esi,FWORD PTR [ebp+0x0]
  4176ef:	mov    al,0xe1
  4176f1:	cld    
  4176f2:	retf   0x6cf7
  4176f5:	mov    ecx,DWORD PTR [edi]
  4176f7:	xor    edx,ebx
  4176f9:	and    DWORD PTR ds:0xb6e4be8a,0x6788bb5
  417703:	jl     0x41774b
  417705:	push   0xe7117553
  41770a:	or     BYTE PTR [ebx+0x6e],cl
  41770d:	mov    DWORD PTR [eax+0x74abb841],esi
  417713:	lods   al,BYTE PTR ds:[esi]
  417714:	mov    ecx,0x27de79b4
  417719:	dec    ebp
  41771a:	add    al,BYTE PTR [edi+ecx*8-0x16aa75bf]
  417721:	jns    0x417741
  417723:	mov    cs,WORD PTR [eax+0x3fd07006]
  417729:	xor    ebx,DWORD PTR [eax-0x9]
  41772c:	icebp  
  41772d:	adc    ecx,esi
  41772f:	adc    eax,0x574b2713
  417734:	pop    edi
  417735:	xor    eax,0x56ef1d82
  41773a:	shr    BYTE PTR [edx],1
  41773c:	xchg   DWORD PTR [ebp-0x2573a2eb],ebp
  417742:	sbb    eax,0x572008a6
  417747:	mov    esp,0xfd83c0e7
  41774c:	sbb    BYTE PTR fs:[edx-0x509f2d6f],cl
  417753:	push   ds
  417754:	sub    eax,0xb5a726cb
  417759:	aaa    
  41775a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775b:	cmp    DWORD PTR [eax+0x7852093c],eax
  417761:	iret   
  417762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417763:	clc    
  417764:	mov    dh,0xf4
  417766:	pop    edx
  417767:	mov    ecx,DWORD PTR [edi+0xb]
  41776a:	gs fwait
  41776c:	cmp    esi,DWORD PTR [edx+ebx*2+0x70]
  417770:	das    
  417771:	fild   WORD PTR [ebx+0x68]
  417774:	fdiv   QWORD PTR [eax+ebx*4]
  417777:	(bad)  
  417778:	sbb    eax,0x21dd4779
  41777d:	repnz mov esi,0xf1b10ed
  417783:	(bad)  
  417784:	or     ebx,DWORD PTR ds:0x50d9dee6
  41778a:	dec    ebx
  41778b:	and    ch,BYTE PTR [ebx-0x113a9902]
  417791:	enter  0x1d07,0x7e
  417795:	push   0x3f853c2d
  41779a:	or     ah,BYTE PTR [edx+eiz*8]
  41779d:	and    edx,DWORD PTR [edi]
  41779f:	inc    ebp
  4177a0:	mov    dh,0xb2
  4177a2:	xor    eax,ecx
  4177a4:	pop    edi
  4177a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a6:	jb     0x4177b9
  4177a8:	inc    edi
  4177a9:	ja     0x417828
  4177ab:	scas   eax,DWORD PTR es:[edi]
  4177ac:	add    edi,DWORD PTR [ebp+0x2b5a51fd]
  4177b2:	jae    0x417767
  4177b4:	push   ecx
  4177b5:	aam    0x3c
  4177b7:	push   es
  4177b8:	xlat   BYTE PTR ds:[ebx]
  4177b9:	add    eax,0xcb232156
  4177be:	xchg   edx,eax
  4177bf:	scas   al,BYTE PTR es:[edi]
  4177c0:	push   edi
  4177c1:	sti    
  4177c2:	jne    0x4177ca
  4177c4:	jge    0x41781a
  4177c6:	mov    esp,0x1ad67391
  4177cb:	pop    edi
  4177cc:	mov    eax,0xb90c7141
  4177d1:	mov    bl,0x24
  4177d3:	mov    DWORD PTR [eax+eiz*2],esi
  4177d6:	xor    esi,DWORD PTR [eax+0x45db5933]
  4177dc:	sti    
  4177dd:	xlat   BYTE PTR ds:[ebx]
  4177de:	stos   DWORD PTR es:[edi],eax
  4177df:	jns    0x417767
  4177e1:	xchg   esi,eax
  4177e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e3:	xchg   esp,eax
  4177e4:	mov    al,BYTE PTR [edx+0x4c]
  4177e7:	cmp    eax,0xfe125e44
  4177ec:	in     al,dx
  4177ed:	jno    0x4177c4
  4177ef:	mov    ebp,DWORD PTR [ecx+0x52f79b3b]
  4177f5:	jle    0x4177c9
  4177f7:	(bad)  
  4177f8:	iret   
  4177f9:	jae    0x41786d
  4177fb:	dec    ebp
  4177fc:	xchg   esi,eax
  4177fd:	aas    
  4177fe:	jg     0x417853
  417800:	lds    edx,FWORD PTR [edi+edx*2+0x41865ea8]
  417807:	xchg   BYTE PTR [ebp+0x4a7dd97f],dh
  41780d:	and    edx,DWORD PTR [edx-0x6b]
  417810:	inc    ebx
  417811:	jns    0x417803
  417813:	mov    esp,0x7cb2f80c
  417818:	sub    eax,DWORD PTR [esi+0x772bc51b]
  41781e:	scas   eax,DWORD PTR es:[edi]
  41781f:	fst    QWORD PTR [esi+0x3e35c2f3]
  417825:	mov    ds:0x80707940,eax
  41782a:	outs   dx,BYTE PTR ds:[esi]
  41782b:	fld    DWORD PTR [ecx-0x74ff4add]
  417831:	inc    ebx
  417832:	xor    edi,ebx
  417834:	stos   DWORD PTR es:[edi],eax
  417835:	into   
  417836:	jl     0x417801
  417838:	mov    ebp,0xccbe2b9f
  41783d:	mov    ebp,0xfc545d41
  417842:	add    al,0x1
  417844:	hlt    
  417845:	and    ebx,edx
  417847:	std    
  417848:	sub    ah,BYTE PTR [ebp+0x6a2438fe]
  41784e:	rol    DWORD PTR [ecx-0x5aa25cb4],0x8f
  417855:	mov    eax,ds:0x40e7b11f
  41785a:	pop    esi
  41785b:	mov    ch,0xca
  41785d:	inc    esi
  41785e:	mov    edi,0x78d623a9
  417863:	je     0x417870
  417865:	xor    eax,0x30c8ea0a
  41786a:	sub    ebp,DWORD PTR [ebx-0x28c6d70]
  417870:	lods   eax,DWORD PTR ds:[esi]
  417871:	(bad)  
  417872:	arpl   WORD PTR [ecx],ax
  417874:	std    
  417875:	loopne 0x4178d8
  417877:	in     eax,dx
  417878:	mul    DWORD PTR [esi+0x6f]
  41787b:	mov    ds:0xd35924ff,eax
  417880:	enter  0x87a7,0x85
  417884:	add    edi,DWORD PTR [edx-0xa]
  417887:	ja     0x417886
  417889:	xchg   BYTE PTR fs:[ebx],bl
  41788c:	test   BYTE PTR [ebp+0x63],cl
  41788f:	ins    DWORD PTR es:[edi],dx
  417890:	jnp    0x41786b
  417892:	inc    ecx
  417893:	xor    cx,bx
  417896:	pop    eax
  417897:	scas   al,BYTE PTR es:[edi]
  417898:	test   al,0x0
  41789a:	or     DWORD PTR [ecx+esi*4],edi
  41789d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41789e:	pushf  
  41789f:	mov    eax,0xb1b1899d
  4178a4:	mov    ebx,0xd0ae8207
  4178a9:	outs   dx,DWORD PTR ds:[esi]
  4178aa:	inc    cx
  4178ac:	mov    ebp,0x6f144c05
  4178b1:	jmp    0x9bdbc765
  4178b6:	adc    al,0xde
  4178b8:	or     esi,DWORD PTR [esi-0x66]
  4178bb:	jns    0x4178d1
  4178bd:	xor    BYTE PTR ds:0xd3871e5a,0x86
  4178c4:	dec    edi
  4178c5:	push   0xffffffb3
  4178c7:	fsubr  DWORD PTR ss:[eax-0x5a]
  4178cb:	cmp    ebp,DWORD PTR [edi-0x3b755d2f]
  4178d1:	das    
  4178d2:	or     ebx,ebx
  4178d4:	cdq    
  4178d5:	mov    esp,0xf52a487b
  4178da:	pushf  
  4178db:	and    al,0xbc
  4178dd:	es mov eax,0x6c65427e
  4178e3:	das    
  4178e4:	xor    al,0xf1
  4178e6:	gs stos BYTE PTR es:[edi],al
  4178e8:	push   ss
  4178e9:	mov    DWORD PTR [ebp+0x4f],esi
  4178ec:	pop    ds
  4178ed:	xor    edx,esp
  4178ef:	adc    BYTE PTR [edi],ch
  4178f1:	mov    esi,0x8ab363d8
  4178f6:	gs sar dl,1
  4178f9:	bound  eax,QWORD PTR [edi+0x6f481b96]
  4178ff:	outs   dx,BYTE PTR ds:[esi]
  417900:	mov    ds:0x92f99490,eax
  417905:	stc    
  417906:	dec    eax
  417907:	mov    ds:0xf13f392b,eax
  41790c:	sub    al,BYTE PTR [ecx+0x6e]
  41790f:	push   es
  417910:	xchg   ebp,eax
  417911:	ins    DWORD PTR es:[edi],dx
  417912:	xor    al,0x41
  417914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417915:	inc    edi
  417916:	mov    ebp,0xf1816c3
  41791b:	xchg   cl,dl
  41791d:	push   ecx
  41791e:	xchg   edi,eax
  41791f:	(bad)  
  417920:	dec    esi
  417921:	add    al,0xeb
  417923:	pushf  
  417924:	dec    ebx
  417925:	xlat   BYTE PTR ds:[ebx]
  417926:	mov    cs,WORD PTR [ebx+0x4895e9a8]
  41792c:	pop    eax
  41792d:	mov    al,0x1
  41792f:	out    dx,al
  417930:	icebp  
  417931:	xor    eax,0xeb0b494f
  417936:	addr16 (bad) 
  417938:	or     eax,0xa118c27a
  41793d:	sbb    ah,dl
  41793f:	mov    ebp,0x3e560647
  417944:	lods   al,BYTE PTR ds:[esi]
  417945:	int3   
  417946:	pop    ebp
  417947:	psubusb mm0,QWORD PTR ds:0xf26d70d8
  41794e:	out    dx,al
  41794f:	aam    0x7e
  417951:	push   0x313705d5
  417956:	popf   
  417957:	add    al,0xda
  417959:	jae    0x41799b
  41795b:	(bad)  
  41795c:	push   0x5cdaa678
  417961:	jg     0x417966
  417963:	or     esi,DWORD PTR [esi]
  417965:	cmp    al,0x9a
  417967:	aam    0x37
  417969:	scas   eax,DWORD PTR es:[edi]
  41796a:	loopne 0x4179e9
  41796c:	es cld 
  41796e:	push   0x22f62f05
  417973:	inc    ebx
  417974:	int    0x7
  417976:	push   ebx
  417977:	imul   esp,DWORD PTR ds:0x565d34ea,0xfffffff8
  41797e:	xchg   BYTE PTR [esi+0x45],bl
  417981:	mov    eax,DWORD PTR [edx]
  417983:	add    BYTE PTR [edi],al
  417985:	ja     0x41798c
  417987:	out    0xcd,eax
  417989:	imul   esp,DWORD PTR ds:0x61783a4b,0x11cc9175
  417993:	mov    esp,0x8fcb0ef3
  417998:	or     eax,0xb89be8f6
  41799d:	pusha  
  41799e:	in     al,dx
  41799f:	jl     0x417975
  4179a1:	pop    edi
  4179a2:	sbb    al,0x43
  4179a4:	mov    bh,cl
  4179a6:	mov    DWORD PTR [edi],edx
  4179a8:	out    0xd0,al
  4179aa:	mov    ds:0x66677f6a,eax
  4179af:	jle    0x417965
  4179b1:	fild   DWORD PTR [esi+0x1b]
  4179b4:	arpl   WORD PTR [ecx+0x4f],di
  4179b7:	inc    eax
  4179b8:	ds loopne 0x4179da
  4179bb:	pop    edi
  4179bc:	scas   al,BYTE PTR es:[edi]
  4179bd:	mov    ds:0x79524006,eax
  4179c2:	outs   dx,BYTE PTR ds:[esi]
  4179c3:	lea    edi,[edi-0x1e261581]
  4179c9:	les    ecx,FWORD PTR [edx+edx*4]
  4179cc:	or     ebp,DWORD PTR [esi+edi*2+0x24]
  4179d0:	xchg   ecx,eax
  4179d1:	(bad)  
  4179d2:	adc    cl,ah
  4179d4:	int3   
  4179d5:	lods   al,BYTE PTR ds:[esi]
  4179d6:	cld    
  4179d7:	or     DWORD PTR [esi+eiz*8-0x2b],0x578ecd63
  4179df:	stos   DWORD PTR es:[edi],eax
  4179e0:	pop    ebp
  4179e1:	sahf   
  4179e2:	push   edx
  4179e3:	pop    ss
  4179e4:	sti    
  4179e5:	outs   dx,BYTE PTR ds:[esi]
  4179e6:	add    DWORD PTR [edi],esp
  4179e8:	mov    al,ds:0xb3ff939
  4179ed:	int3   
  4179ee:	dec    eax
  4179ef:	cmc    
  4179f0:	sbb    esi,DWORD PTR [eax+ebx*8+0x7e]
  4179f4:	mov    edi,0x1a53db26
  4179f9:	inc    eax
  4179fa:	pop    esp
  4179fb:	loope  0x4179fa
  4179fd:	loop   0x417a22
  4179ff:	lahf   
  417a00:	inc    edi
  417a01:	outs   dx,DWORD PTR cs:[esi]
  417a03:	arpl   WORD PTR [eax-0x5abb40e0],di
  417a09:	pop    edi
  417a0a:	sahf   
  417a0b:	inc    esp
  417a0c:	inc    edi
  417a0d:	sub    edx,DWORD PTR [ebp-0x2914b8bf]
  417a13:	xlat   BYTE PTR ds:[ebx]
  417a14:	fild   QWORD PTR [ebp-0x3d]
  417a17:	inc    ecx
  417a18:	xchg   ebx,eax
  417a19:	clc    
  417a1a:	data16 (bad) 
  417a1c:	aad    0x9c
  417a1e:	test   BYTE PTR [ecx-0x266018ba],dh
  417a24:	pusha  
  417a25:	push   edx
  417a26:	sti    
  417a27:	or     edi,DWORD PTR [ebx-0x3e]
  417a2a:	repnz repz add BYTE PTR [eax+ebx*4+0x44],0xe9
  417a31:	adc    DWORD PTR [ebx+0x7f],edx
  417a34:	push   ebp
  417a35:	mov    cl,0xfd
  417a37:	and    eax,DWORD PTR [eax+0x3b]
  417a3a:	or     DWORD PTR [edx-0x74],edx
  417a3d:	and    eax,0xd96000f8
  417a42:	inc    ebx
  417a43:	js     0x417a50
  417a45:	xchg   edx,eax
  417a46:	js     0x4179f4
  417a48:	and    al,0x6
  417a4a:	div    DWORD PTR [ecx]
  417a4c:	jnp    0x417a5c
  417a4e:	push   ebx
  417a4f:	add    dl,ah
  417a51:	xor    edx,DWORD PTR [esi]
  417a53:	test   DWORD PTR [ebx+0x77],ebx
  417a56:	jnp    0x4179ee
  417a58:	jnp    0x417a30
  417a5a:	mov    cl,0x53
  417a5c:	pop    edx
  417a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a5e:	call   0x6e06d18f
  417a63:	(bad)  
  417a64:	ins    DWORD PTR es:[edi],dx
  417a65:	mov    BYTE PTR [edi-0x1c0c0d7],bl
  417a6b:	iret   
  417a6c:	test   al,0xab
  417a6e:	jb     0x417ac3
  417a70:	jo     0x417a59
  417a72:	rcl    al,cl
  417a74:	sbb    DWORD PTR [ebx-0x6d],ebx
  417a77:	add    DWORD PTR [ebx-0x57ebffc8],esp
  417a7d:	pusha  
  417a7e:	out    dx,al
  417a7f:	es and ebx,ebx
  417a82:	mov    dl,0xd1
  417a84:	fdiv   QWORD PTR [edi+ebx*4+0x35245728]
  417a8b:	and    edx,0x2840e8de
  417a91:	aaa    
  417a92:	popa   
  417a93:	mov    al,ds:0x6fe7c258
  417a98:	add    dl,BYTE PTR [edi]
  417a9a:	jmp    0x9ca65e49
  417a9f:	sbb    DWORD PTR [edx+ebp*8],ebx
  417aa2:	pop    ecx
  417aa3:	jl     0x417a8b
  417aa5:	movsx  eax,WORD PTR [ebx-0x3]
  417aa9:	mov    BYTE PTR [edx],al
  417aab:	cmp    ecx,DWORD PTR [edx-0x14c0c556]
  417ab1:	xor    BYTE PTR [ebx+0x612c9c90],cl
  417ab7:	jo     0x417b0e
  417ab9:	push   0x4be86f68
  417abe:	jb     0x417a54
  417ac0:	xchg   edi,eax
  417ac1:	mov    edi,0x9a9ccbf7
  417ac6:	shr    DWORD PTR [ebp-0x795f932b],0x67
  417acd:	mov    cl,0xce
  417acf:	sbb    al,0xb
  417ad1:	cwde   
  417ad2:	test   ch,dh
  417ad4:	add    DWORD PTR [ebp+0x2fdc226e],eax
  417ada:	push   ss
  417adb:	push   ebp
  417adc:	adc    DWORD PTR [esi+0x3f4b2012],edi
  417ae2:	repz jmp 0x417b54
  417ae5:	repnz mov bl,BYTE PTR [ebp-0x68]
  417ae9:	shl    DWORD PTR [ebx-0x139adf15],0x80
  417af0:	int3   
  417af1:	pop    edx
  417af2:	or     al,0xe0
  417af4:	add    dh,BYTE PTR [ebx+0x39a0d6c1]
  417afa:	inc    ecx
  417afb:	out    dx,eax
  417afc:	(bad)  
  417afd:	fisub  WORD PTR [ebp-0xd4af402]
  417b03:	add    dh,al
  417b05:	stos   DWORD PTR es:[edi],eax
  417b06:	add    al,0xb1
  417b08:	inc    ebp
  417b09:	hlt    
  417b0a:	add    eax,0xaaadcb2b
  417b0f:	out    dx,al
  417b10:	std    
  417b11:	pusha  
  417b12:	dec    ebx
  417b13:	xor    eax,0x8cf90c40
  417b18:	sub    cl,0x6c
  417b1b:	fistp  DWORD PTR [edi-0x37]
  417b1e:	dec    ebx
  417b1f:	xchg   DWORD PTR [esi],ebp
  417b21:	ja     0x417add
  417b23:	(bad)  [eax+0x40694b99]
  417b29:	ins    BYTE PTR es:[edi],dx
  417b2a:	(bad)  
  417b2b:	dec    ebx
  417b2c:	sar    ch,1
  417b2e:	loopne 0x417ab9
  417b30:	mov    esi,0x3c5fa925
  417b35:	or     BYTE PTR [edx+0x1a],ah
  417b38:	dec    esi
  417b39:	sub    eax,0x4d6394d7
  417b3e:	pop    edi
  417b3f:	dec    edx
  417b40:	adc    DWORD PTR [esi-0x19],ebx
  417b43:	retf   
  417b44:	jb     0x417b42
  417b46:	bound  ebp,QWORD PTR [ecx+0x64504325]
  417b4c:	ins    BYTE PTR es:[edi],dx
  417b4d:	(bad)  
  417b4f:	in     al,0x15
  417b51:	or     ecx,DWORD PTR ds:0x43607c30
  417b57:	and    eax,ebx
  417b59:	fild   WORD PTR [ebp-0x36]
  417b5c:	xor    ah,BYTE PTR [edi+ecx*4+0x9d6c012]
  417b63:	jbe    0x417b36
  417b65:	adc    al,0x28
  417b67:	mov    bh,0x47
  417b69:	cwde   
  417b6a:	mov    edi,0x27956fb5
  417b6f:	lahf   
  417b70:	imul   edx,ebx,0x175dbe16
  417b76:	hlt    
  417b77:	push   edi
  417b78:	jl     0x417b86
  417b7a:	push   ebp
  417b7b:	ja     0x417b8a
  417b7d:	sub    ecx,DWORD PTR [esi+ecx*8]
  417b80:	jmp    0x824155ea
  417b85:	ja     0x417bdf
  417b87:	cmp    edi,edi
  417b89:	pop    edx
  417b8a:	dec    ecx
  417b8b:	aas    
  417b8c:	ficomp DWORD PTR [eax+esi*1-0x4ea79cf4]
  417b93:	mov    eax,0x7bce2f32
  417b98:	bound  edi,QWORD PTR [edx+0x2c481293]
  417b9e:	hlt    
  417b9f:	cmp    edx,DWORD PTR [edx+0x261b1a73]
  417ba5:	adc    DWORD PTR [ebx+0x63db5638],ebp
  417bab:	call   0x53feedb7
  417bb0:	aas    
  417bb1:	fs stos DWORD PTR es:[edi],eax
  417bb3:	xor    edi,DWORD PTR [edx-0x2d]
  417bb6:	xchg   ebx,eax
  417bb7:	in     eax,0x1b
  417bb9:	fcom   st(1)
  417bbb:	shr    ebp,1
  417bbd:	dec    ecx
  417bbe:	dec    edi
  417bbf:	test   eax,0x9297897d
  417bc4:	mov    bl,0xa4
  417bc6:	cdq    
  417bc7:	and    DWORD PTR [edi+0x4d72da62],0x7c74829d
  417bd1:	aas    
  417bd2:	adc    al,dh
  417bd4:	inc    esp
  417bd5:	sub    DWORD PTR [edi],ebp
  417bd7:	adc    ch,ch
  417bd9:	imul   ebp,DWORD PTR [esi+0x50a14b5f],0x4af20b3f
  417be3:	push   0x488c7ce0
  417be8:	jbe    0x417c25
  417bea:	jmp    0x935b89df
  417bef:	rol    DWORD PTR [ecx+0x34],1
  417bf2:	xchg   esp,eax
  417bf3:	cdq    
  417bf4:	sahf   
  417bf5:	or     dh,BYTE PTR [eax-0x581c7331]
  417bfb:	jge    0x417b87
  417bfd:	xor    ch,BYTE PTR [edx]
  417bff:	push   es
  417c00:	mov    bl,0xdf
  417c02:	int3   
  417c03:	sbb    cl,BYTE PTR [eax+0x60]
  417c06:	or     BYTE PTR [esp+esi*4-0x4b8c4b96],bl
  417c0d:	loop   0x417c38
  417c0f:	and    DWORD PTR [edi+0x416b1957],eax
  417c15:	call   esp
  417c17:	push   ebp
  417c18:	jle    0x417bd5
  417c1a:	mov    ah,0xb1
  417c1c:	sbb    BYTE PTR [edi+edi*8+0x45],bh
  417c20:	dec    esi
  417c21:	or     eax,0x230f72af
  417c26:	mov    dl,0xdb
  417c28:	dec    eax
  417c29:	(bad)  
  417c2a:	and    eax,0x38225995
  417c2f:	dec    edx
  417c30:	call   0x7cc6:0x78c3a00
  417c37:	repz push ebx
  417c39:	mov    ds,WORD PTR [esi+0x6ba3d27e]
  417c3f:	sub    ebp,DWORD PTR [eax+0x34]
  417c42:	dec    esi
  417c43:	hlt    
  417c44:	icebp  
  417c45:	les    esp,FWORD PTR [ecx-0x7b22d660]
  417c4b:	outs   dx,BYTE PTR ds:[esi]
  417c4c:	adc    eax,0x8a19dc
  417c51:	cmp    al,0x3d
  417c53:	add    BYTE PTR [ebx+0xf],ch
  417c56:	adc    DWORD PTR [ecx],ebx
  417c58:	push   esi
  417c59:	xor    ch,BYTE PTR [edx+eax*2]
  417c5c:	push   0x6c30b3cd
  417c61:	sbb    bl,BYTE PTR ds:0xe10a8ab9
  417c67:	sub    BYTE PTR ds:0x98237ddb,al
  417c6d:	rcr    BYTE PTR es:[edx-0xd],cl
  417c71:	or     eax,ebp
  417c73:	mov    eax,ds:0x6eef6c65
  417c78:	lea    edi,[edx+0x4557043f]
  417c7e:	push   0xc33a4ff3
  417c83:	rcl    DWORD PTR [esi+0x42],cl
  417c86:	sub    esp,DWORD PTR [esi-0x68]
  417c89:	(bad)
  417c8c:	adc    BYTE PTR [esi+0x7a],cl
  417c8f:	push   es
  417c90:	dec    ecx
  417c91:	add    DWORD PTR [ecx-0x5a174f08],0xa59f8890
  417c9b:	ja     0x417c5c
  417c9d:	mov    bh,0x29
  417c9f:	in     eax,0xb7
  417ca1:	jl     0x417c70
  417ca3:	shl    DWORD PTR cs:[ecx+0x25a20c83],0x66
  417cab:	aas    
  417cac:	add    BYTE PTR [ecx],dh
  417cae:	jmp    0x417c6b
  417cb0:	fld    QWORD PTR [edi-0x5f0261f4]
  417cb6:	push   0x29
  417cb8:	adc    ebx,DWORD PTR [ebx+0xeff86d3]
  417cbe:	call   0x36b2:0xd6cbe8b4
  417cc5:	mov    BYTE PTR [edx-0x46aa5aef],dh
  417ccb:	stos   DWORD PTR es:[edi],eax
  417ccc:	js     0x417d08
  417cce:	lods   eax,DWORD PTR ds:[esi]
  417ccf:	test   DWORD PTR [eax-0x19],0x94408ec5
  417cd6:	mov    esp,0x89748f10
  417cdb:	jmp    0x50168eb1
  417ce0:	popa   
  417ce1:	mov    ds:0xbb29e6dd,eax
  417ce6:	sub    eax,0xedc1b9d2
  417ceb:	loop   0x417d54
  417ced:	into   
  417cee:	mov    esp,0x437b8e38
  417cf3:	pop    es
  417cf4:	imul   edi,DWORD PTR [esi+0x2d0032cc],0xadfcd267
  417cfe:	lods   al,BYTE PTR ds:[esi]
  417cff:	xchg   edi,eax
  417d00:	call   0xb5af7440
  417d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d06:	xlat   BYTE PTR ds:[ebx]
  417d07:	push   0xffffff8d
  417d09:	cld    
  417d0a:	mov    eax,0x2659ed3
  417d0f:	aad    0xd4
  417d11:	repz call 0xfcb4:0xb2d4d960
  417d19:	push   0xabab431a
  417d1e:	pop    edx
  417d1f:	mov    BYTE PTR [edi],dl
  417d21:	je     0x417d44
  417d23:	pop    ebx
  417d24:	dec    ecx
  417d25:	mov    esp,0x9e588e0f
  417d2a:	inc    esi
  417d2b:	call   0x3f3f:0x5d77b8c5
  417d32:	iret   
  417d33:	cmp    DWORD PTR [eax-0xd],ebp
  417d36:	xor    DWORD PTR [eax+0x5e77fce5],edi
  417d3c:	mov    eax,0x83b95787
  417d41:	xchg   BYTE PTR [ecx-0x108f758e],dh
  417d47:	push   0xdd7cbf34
  417d4c:	rcr    DWORD PTR [ebp-0x6003aea2],1
  417d52:	out    0x37,eax
  417d54:	jnp    0x417dd1
  417d56:	and    al,BYTE PTR [edi]
  417d58:	outs   dx,DWORD PTR ds:[esi]
  417d59:	lds    eax,FWORD PTR [ebx]
  417d5b:	inc    edx
  417d5c:	in     eax,0xb6
  417d5e:	mov    dl,0xc7
  417d60:	ss rcr dh,1
  417d63:	mov    esp,0x88939b74
  417d68:	sar    BYTE PTR [ebx+0x4aeaed8c],cl
  417d6e:	(bad)  
  417d6f:	int    0xc0
  417d71:	lea    esp,[eax+edx*2-0x24]
  417d75:	lds    ecx,FWORD PTR [esi]
  417d77:	(bad)  
  417d78:	lds    ebp,FWORD PTR [eax-0x26]
  417d7b:	fs retf 
  417d7d:	je     0x417d30
  417d7f:	pop    ebp
  417d80:	push   edx
  417d81:	(bad)  
  417d82:	scas   al,BYTE PTR es:[edi]
  417d83:	and    DWORD PTR [edx-0x5],0x4b72173f
  417d8a:	je     0x417d36
  417d8c:	mov    ch,0xa0
  417d8e:	inc    edx
  417d8f:	(bad)  
  417d90:	pop    esi
  417d91:	test   al,0xb2
  417d93:	aaa    
  417d94:	jp     0x417d63
  417d96:	inc    eax
  417d97:	jecxz  0x417dcd
  417d99:	scas   al,BYTE PTR es:[edi]
  417d9a:	(bad)  
  417d9b:	xchg   ebx,eax
  417d9c:	rcl    BYTE PTR [ecx-0x69],cl
  417d9f:	cmp    eax,edx
  417da1:	loop   0x417d63
  417da3:	mov    cl,0x20
  417da5:	jae    0x417d58
  417da7:	aam    0x5a
  417da9:	mov    ecx,0x342dc2b6
  417dae:	dec    ebp
  417daf:	repnz out 0x85,al
  417db2:	mov    edx,0xd1e2bc7f
  417db7:	data16 jmp 0x417d3f
  417dba:	std    
  417dbb:	xchg   ebp,eax
  417dbc:	adc    BYTE PTR [esi+0x6e],ah
  417dbf:	or     DWORD PTR [esi-0x7c1a558d],edx
  417dc5:	inc    edx
  417dc6:	out    dx,eax
  417dc7:	mov    edi,DWORD PTR [eax+eiz*2-0x542b20fe]
  417dce:	fsubr  QWORD PTR [esi-0x799f3d20]
  417dd4:	aad    0x16
  417dd6:	push   ebx
  417dd7:	aam    0x49
  417dd9:	cmp    eax,0x2627f88
  417dde:	popa   
  417ddf:	mov    ds:0xfa921233,eax
  417de4:	lods   al,BYTE PTR ds:[esi]
  417de5:	stos   BYTE PTR es:[edi],al
  417de6:	fidivr WORD PTR [edx+0x29]
  417de9:	ds int3 
  417deb:	das    
  417dec:	lds    edi,FWORD PTR [ecx]
  417dee:	hlt    
  417def:	ins    BYTE PTR es:[edi],dx
  417df0:	add    ebx,ecx
  417df2:	fimul  WORD PTR [esi+ebp*8+0x30166ab9]
  417df9:	push   0x7d
  417dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dfc:	cdq    
  417dfd:	push   edi
  417dfe:	jp     0x417e63
  417e00:	das    
  417e01:	outs   dx,BYTE PTR ds:[esi]
  417e02:	popf   
  417e03:	jmp    0x417df0
  417e05:	leave  
  417e06:	inc    edx
  417e07:	sub    al,0x54
  417e09:	(bad)  
  417e0a:	sahf   
  417e0b:	aas    
  417e0c:	imul   ebx,DWORD PTR [esi+ebp*4+0x49],0x1d
  417e11:	pop    ebp
  417e12:	mov    DWORD PTR [edx-0x2aaef490],esp
  417e18:	test   eax,0xae6ba0a1
  417e1d:	push   ebp
  417e1e:	cs xchg ecx,eax
  417e20:	(bad)  
  417e21:	call   0x6d40d65c
  417e26:	add    al,0xb9
  417e28:	jno    0x417e89
  417e2a:	stos   DWORD PTR es:[edi],eax
  417e2b:	push   cs
  417e2c:	ins    BYTE PTR es:[edi],dx
  417e2d:	and    al,0x9
  417e2f:	xchg   edi,eax
  417e30:	xchg   BYTE PTR [ebp+0x7b],bh
  417e33:	mov    ah,0x9c
  417e35:	sub    DWORD PTR [edi+edi*4+0xef8d9fd],ebx
  417e3c:	shr    DWORD PTR [ebp-0x14ec5846],1
  417e42:	push   edx
  417e43:	xchg   esp,eax
  417e44:	mov    cl,0x81
  417e46:	mov    BYTE PTR [edi+edx*4+0x682d3acd],ch
  417e4d:	loope  0x417e46
  417e4f:	sar    DWORD PTR [ecx],1
  417e51:	loope  0x417e83
  417e53:	mov    cl,0xdc
  417e55:	inc    DWORD PTR [ebx+0x7c]
  417e58:	mov    ebp,DWORD PTR [ebx-0x27]
  417e5b:	stos   BYTE PTR es:[edi],al
  417e5c:	jle    0x417e53
  417e5e:	(bad)  
  417e5f:	fisttp QWORD PTR [eax+0x3513b428]
  417e65:	fnsave ds:0x74f1b9b8
  417e6b:	xchg   edi,eax
  417e6c:	outs   dx,BYTE PTR ds:[esi]
  417e6d:	stos   DWORD PTR es:[edi],eax
  417e6e:	pushf  
  417e6f:	ss jle 0x417e8f
  417e72:	sbb    cl,BYTE PTR [edx+eax*1-0x3f]
  417e76:	imul   edx,DWORD PTR [esp+eax*8+0x4f],0x6f
  417e7b:	or     BYTE PTR [ebx+0xb2b1dbe],0xa8
  417e82:	lahf   
  417e83:	clc    
  417e84:	lods   eax,DWORD PTR ds:[esi]
  417e85:	ss xor al,0xc8
  417e88:	repz mov edi,0x29f00ae2
  417e8e:	cli    
  417e8f:	cmp    eax,0x92ea9181
  417e94:	add    bl,BYTE PTR [ebx+0x3e0c1887]
  417e9a:	cmc    
  417e9b:	sbb    bl,BYTE PTR [esi+0x47]
  417e9e:	fdiv   QWORD PTR [ecx]
  417ea0:	call   0xd0b6:0x4be66295
  417ea7:	or     al,0xdc
  417ea9:	(bad)  
  417eaa:	iret   
  417eab:	call   0x603f:0xaf7b08ac
  417eb2:	pusha  
  417eb3:	scas   eax,DWORD PTR es:[edi]
  417eb4:	leave  
  417eb5:	outs   dx,BYTE PTR ds:[esi]
  417eb6:	inc    edx
  417eb7:	es sbb cl,0x56
  417ebb:	or     al,0x67
  417ebd:	in     al,dx
  417ebe:	inc    eax
  417ebf:	fldcw  WORD PTR [ecx-0x31]
  417ec2:	add    al,BYTE PTR [esi-0x7a]
  417ec5:	out    dx,al
  417ec6:	int    0x29
  417ec8:	(bad)  
  417ec9:	sub    BYTE PTR [ebx-0x1d1397f9],cl
  417ecf:	add    al,0x81
  417ed1:	out    0xa9,eax
  417ed3:	ja     0x417eac
  417ed5:	mov    dl,0xd6
  417ed7:	cli    
  417ed8:	retf   
  417ed9:	mov    edi,0x72080a7c
  417ede:	pop    esp
  417edf:	push   ebx
  417ee0:	push   0x10697d8c
  417ee5:	mov    esp,DWORD PTR [eax+0x62]
  417ee8:	out    dx,eax
  417ee9:	cmc    
  417eea:	xchg   ecx,eax
  417eeb:	ins    DWORD PTR es:[edi],dx
  417eec:	ja     0x417f29
  417eee:	fdivr  DWORD PTR [edi]
  417ef0:	lahf   
  417ef1:	scas   al,BYTE PTR es:[edi]
  417ef2:	std    
  417ef3:	push   ebx
  417ef4:	and    eax,0x1de9d537
  417ef9:	fcom   QWORD PTR [edi]
  417efb:	mov    edi,0x9d991fc6
  417f00:	push   esi
  417f01:	arpl   WORD PTR [edi+0x2aaaaeb5],ax
  417f07:	mov    dh,0x14
  417f09:	jl     0x417f43
  417f0b:	imul   DWORD PTR [edx]
  417f0d:	adc    dl,dl
  417f0f:	ret    
  417f10:	test   BYTE PTR [ebp+0x232d7795],ah
  417f16:	loope  0x417f4d
  417f18:	jmp    0xc3bdeed
  417f1d:	or     ecx,ebx
  417f1f:	scas   eax,DWORD PTR es:[edi]
  417f20:	adc    DWORD PTR [edx],edi
  417f22:	push   ss
  417f23:	retf   
  417f24:	push   ss
  417f25:	jle    0x417f7f
  417f27:	in     eax,0x22
  417f29:	repnz push cs
  417f2b:	mov    ebx,0x7b946632
  417f30:	mov    bl,0x46
  417f32:	ins    BYTE PTR es:[edi],dx
  417f33:	scas   al,BYTE PTR es:[edi]
  417f34:	sbb    al,0x81
  417f36:	jg     0x417eda
  417f38:	jns    0x417f12
  417f3a:	and    BYTE PTR [ebp+0x574ccdf4],0xdd
  417f41:	xor    eax,0xe80c4cb5
  417f46:	push   eax
  417f47:	and    di,cx
  417f4a:	out    dx,eax
  417f4b:	(bad)  
  417f4c:	cmc    
  417f4d:	pop    ebx
  417f4e:	outs   dx,BYTE PTR ds:[esi]
  417f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f50:	(bad)  
  417f51:	mov    eax,edx
  417f53:	aas    
  417f54:	inc    DWORD PTR [eax+0x536f75fb]
  417f5a:	retf   
  417f5b:	jmp    0x2ad4af7b
  417f60:	lods   al,BYTE PTR ds:[esi]
  417f61:	mov    al,0xb8
  417f63:	jnp    0x417fb1
  417f65:	xchg   edx,eax
  417f66:	sbb    DWORD PTR [esi+0x73],ecx
  417f69:	push   ss
  417f6a:	jmp    0xd4c6856b
  417f6f:	retf   
  417f70:	jp     0x417f60
  417f72:	add    DWORD PTR [esi+eiz*4],edx
  417f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f76:	fdivrp st(2),st
  417f78:	xor    ch,BYTE PTR [ebx-0x75a489a7]
  417f7e:	(bad)
  417f82:	inc    ebp
  417f83:	imul   edi,DWORD PTR [ebx-0x5b758681],0x7e
  417f8a:	loope  0x417fa4
  417f8c:	dec    eax
  417f8d:	pop    esi
  417f8e:	in     al,dx
  417f8f:	jg     0x417f5b
  417f91:	sbb    BYTE PTR [ecx],dl
  417f93:	sti    
  417f94:	mov    esi,0x5c3d4c6a
  417f99:	cmp    eax,0x91bde33
  417f9e:	mov    dl,0x42
  417fa0:	adc    eax,0xf1a35112
  417fa5:	sub    al,0xea
  417fa7:	sbb    DWORD PTR [ecx],0xffffff94
  417faa:	xchg   BYTE PTR [eax],al
  417fac:	mov    ah,0x1d
  417fae:	mov    esi,0x331e2e4
  417fb3:	push   ebp
  417fb4:	inc    esi
  417fb5:	push   edi
  417fb6:	sbb    ebp,eax
  417fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb9:	dec    edi
  417fba:	ret    0x7d2b
  417fbd:	or     al,0x95
  417fbf:	fs push esp
  417fc1:	scas   al,BYTE PTR es:[edi]
  417fc2:	jl     0x417fb2
  417fc4:	fcom   QWORD PTR [ebx]
  417fc6:	int    0x1b
  417fc8:	ror    DWORD PTR [eax-0x45],1
  417fcb:	mov    eax,0xb29be5f5
  417fd0:	aam    0xf3
  417fd2:	jg     0x418017
  417fd4:	xchg   ebp,eax
  417fd5:	sar    ebp,cl
  417fd7:	jl     0x418021
  417fd9:	mov    ebp,0x1e88231e
  417fde:	das    
  417fdf:	push   esi
  417fe0:	pop    ebx
  417fe1:	arpl   WORD PTR [edi+0x25],di
  417fe4:	and    DWORD PTR [edx+0x6d],esi
  417fe7:	aad    0x96
  417fe9:	add    cl,BYTE PTR [ebx]
  417feb:	jo     0x41803e
  417fed:	mov    edi,0x517776d
  417ff2:	lock or bh,BYTE PTR [edi-0x2c]
  417ff6:	shl    BYTE PTR ds:0x8f774b3e,0xa8
  417ffd:	mov    esi,0xc6fc4a1b
  418002:	scas   al,BYTE PTR es:[edi]
  418003:	xchg   ebp,eax
  418004:	in     al,0xd2
  418006:	cli    
  418007:	lock out dx,al
  418009:	mov    ds:0x8542cf4f,eax
  41800e:	imul   eax,DWORD PTR [ebp-0x71ecffbe],0x2
  418015:	ror    cl,0x29
  418018:	push   ds
  418019:	nop
  41801a:	test   DWORD PTR [esi+0x4646095c],edx
  418020:	sbb    ebx,DWORD PTR [esi-0x66]
  418023:	mov    ?,WORD PTR [esi+eax*8-0x32bde531]
  41802a:	in     al,0xd0
  41802c:	push   ebp
  41802d:	mov    dl,0x3e
  41802f:	jno    0x418079
  418031:	pop    ebx
  418032:	add    eax,0x278909b8
  418037:	mov    al,0x4b
  418039:	and    BYTE PTR [ebp-0x54],bh
  41803c:	mov    eax,0x50179d6f
  418041:	lods   al,BYTE PTR ds:[esi]
  418042:	dec    eax
  418043:	mov    edx,0xe2abf7a7
  418048:	add    DWORD PTR [si],esp
  41804b:	jne    0x4180c6
  41804d:	pop    edi
  41804e:	out    dx,eax
  41804f:	retf   0x58a9
  418052:	popf   
  418053:	gs mov al,0x85
  418056:	xrelease mov DWORD PTR [ecx-0x17f58f9c],ecx
  41805d:	aaa    
  41805e:	outs   dx,DWORD PTR ds:[esi]
  41805f:	pop    ebp
  418060:	xchg   esp,eax
  418061:	jmp    0x22ed7d7
  418066:	in     al,dx
  418067:	sbb    al,0xba
  418069:	scas   al,BYTE PTR es:[edi]
  41806a:	outs   dx,BYTE PTR ds:[esi]
  41806b:	push   esp
  41806c:	int3   
  41806d:	and    eax,0xa77e794a
  418072:	std    
  418073:	stos   DWORD PTR es:[edi],eax
  418074:	mov    edi,eax
  418076:	nop
  418077:	ja     0x4180d6
  418079:	mov    edx,0x12ed75f5
  41807e:	sub    dl,BYTE PTR [ebx+0x50]
  418081:	call   0x940d34a0
  418086:	hlt    
  418087:	scas   al,BYTE PTR es:[edi]
  418088:	outs   dx,DWORD PTR ds:[esi]
  418089:	es or  al,bl
  41808c:	in     eax,dx
  41808d:	vmread DWORD PTR [edi-0x7],esp
  418091:	mov    dl,0x6f
  418093:	gs scas eax,DWORD PTR es:[edi]
  418095:	sub    al,BYTE PTR [eax-0x4d59ff67]
  41809b:	mov    dl,0x8b
  41809d:	cmp    DWORD PTR [ecx-0x25],esi
  4180a0:	dec    edx
  4180a1:	shr    eax,1
  4180a3:	sub    bh,al
  4180a5:	adc    eax,0x7fe6b795
  4180aa:	jns    0x4180c9
  4180ac:	mov    ch,0x7a
  4180ae:	popa   
  4180af:	push   edi
  4180b0:	mov    ah,0x11
  4180b2:	add    edi,DWORD PTR [esp+ecx*2-0x52]
  4180b6:	je     0x418111
  4180b8:	pop    ebx
  4180b9:	popa   
  4180ba:	loope  0x418121
  4180bc:	mov    edi,0x993b1974
  4180c1:	pusha  
  4180c2:	add    eax,0x71f495e9
  4180c7:	and    dh,dh
  4180c9:	mov    ds:0xf1cbc76b,al
  4180ce:	rcl    cl,0xe8
  4180d1:	int    0x80
  4180d3:	int    0x46
  4180d5:	repnz add BYTE PTR [ebp+0x13],0xf6
  4180da:	mov    gs,edx
  4180dc:	aas    
  4180dd:	push   esp
  4180de:	popa   
  4180df:	ins    BYTE PTR es:[edi],dx
  4180e0:	lods   eax,DWORD PTR ds:[esi]
  4180e1:	(bad)  
  4180e2:	pop    edi
  4180e3:	dec    edx
  4180e4:	pcmpgtb mm1,QWORD PTR [eax+0x4e]
  4180e8:	ja     0x418169
  4180ea:	call   0x10c5:0xf2ae5aca
  4180f1:	add    ecx,DWORD PTR [ecx+0x1737ddad]
  4180f7:	ret    0xd0e6
  4180fa:	out    dx,eax
  4180fb:	adc    esp,esp
  4180fd:	arpl   WORD PTR [ebx+0x7a],si
  418100:	and    edi,DWORD PTR [ebx-0x1f]
  418103:	and    dl,BYTE PTR [ebx-0x8]
  418106:	mov    ds:0x2b58865d,eax
  41810b:	pop    eax
  41810c:	(bad)  
  41810d:	dec    esi
  41810e:	rol    DWORD PTR [esp+ecx*4],1
  418111:	pop    ds
  418112:	jmp    edi
  418114:	mov    cl,0x83
  418116:	add    ebp,DWORD PTR [ebp+0x7b279595]
  41811c:	sub    al,BYTE PTR [ecx+ecx*4-0x46]
  418120:	sar    DWORD PTR [esp+ebx*1],1
  418123:	rcr    DWORD PTR [ebp-0x64],0x5c
  418127:	xor    DWORD PTR [esi+0x15],edi
  41812a:	fnsave [edi-0xf]
  41812d:	mov    bl,0x1e
  41812f:	xor    esi,DWORD PTR [eax-0x2]
  418132:	jne    0x418189
  418134:	aam    0xd0
  418136:	mov    ebx,0xd14e9e92
  41813b:	fsub   DWORD PTR [esi]
  41813d:	(bad)  
  41813e:	iret   
  41813f:	scas   al,BYTE PTR es:[edi]
  418140:	and    eax,0x8def165a
  418145:	in     eax,0x88
  418147:	sbb    DWORD PTR [edx-0x3499f32a],ebp
  41814d:	je     0x41817b
  41814f:	pop    edi
  418150:	cli    
  418151:	mov    dl,0x65
  418153:	jnp    0x418160
  418155:	sub    DWORD PTR [ebx+0x30],edx
  418158:	xchg   edi,eax
  418159:	mov    dl,0x10
  41815b:	dec    eax
  41815c:	fsubr  DWORD PTR ds:0x66c14ad0
  418162:	std    
  418163:	jmp    0x43cd:0x1d068561
  41816a:	mov    ch,0xe6
  41816c:	adc    DWORD PTR [edx+eiz*8+0x3bef666d],esi
  418173:	rcr    DWORD PTR [ecx+0x37036dd5],cl
  418179:	add    dl,cl
  41817b:	push   ebp
  41817c:	xor    eax,0x187c03c6
  418181:	xchg   ecx,eax
  418182:	shl    BYTE PTR [ebx+0x3526de74],0xad
  418189:	enter  0x7bd7,0x99
  41818d:	cmp    bl,BYTE PTR [esi]
  41818f:	mov    eax,ds:0xa7c3db9d
  418194:	push   edx
  418195:	sbb    dl,BYTE PTR [edx+ebx*4]
  418198:	or     DWORD PTR [esp+edi*1+0x32550617],0xf3a3fed2
  4181a3:	lods   al,BYTE PTR ds:[esi]
  4181a4:	lods   al,BYTE PTR ds:[esi]
  4181a5:	bnd jmp 0x4181c5
  4181a8:	adc    al,0xce
  4181aa:	mov    esp,0xbbd57eac
  4181af:	mov    esi,0xcf8c26fc
  4181b4:	cmp    ebp,esp
  4181b6:	jmp    0xa1f61821
  4181bb:	test   ebp,esi
  4181bd:	jb     0x41816d
  4181bf:	in     al,dx
  4181c0:	xor    BYTE PTR [ebx+esi*2],ah
  4181c3:	stc    
  4181c4:	push   esi
  4181c5:	es inc edx
  4181c7:	int3   
  4181c8:	repz xor al,0x7d
  4181cb:	push   ss
  4181cc:	sbb    al,0x11
  4181ce:	outs   dx,DWORD PTR ds:[esi]
  4181cf:	ins    BYTE PTR es:[edi],dx
  4181d0:	cdq    
  4181d1:	cld    
  4181d2:	cmp    BYTE PTR [edx-0x4a],ah
  4181d5:	push   ds
  4181d6:	mov    ds:0xc5868015,eax
  4181db:	inc    edi
  4181dc:	ja     0x41825b
  4181de:	pop    ecx
  4181df:	aaa    
  4181e0:	pop    edi
  4181e1:	mov    esp,0x5db577b3
  4181e6:	out    dx,eax
  4181e7:	mov    ah,bl
  4181e9:	ja     0x418225
  4181eb:	push   eax
  4181ec:	(bad)  
  4181ed:	lods   eax,DWORD PTR ds:[esi]
  4181ee:	inc    edi
  4181ef:	xchg   esp,eax
  4181f0:	inc    ecx
  4181f1:	dec    ecx
  4181f2:	mov    edx,0x416211a1
  4181f7:	lahf   
  4181f8:	mov    ebx,0x917addfa
  4181fd:	jg     0x418262
  4181ff:	fs jecxz 0x41825d
  418202:	not    edx
  418204:	push   0xda28aa1f
  418209:	mov    dl,0xa2
  41820b:	inc    eax
  41820c:	xchg   esi,eax
  41820d:	jmp    0x418225
  41820f:	and    ebx,DWORD PTR fs:[ebx]
  418212:	lods   al,BYTE PTR ds:[esi]
  418213:	outs   dx,BYTE PTR ds:[esi]
  418214:	push   eax
  418215:	sbb    BYTE PTR [edi],0xdf
  418218:	cdq    
  418219:	sbb    eax,esp
  41821b:	ins    DWORD PTR es:[edi],dx
  41821c:	sub    eax,0x19e7bc6f
  418221:	sbb    eax,0xa04754c9
  418226:	mov    al,0x99
  418228:	repnz adc ch,BYTE PTR [eax+ebx*1-0x51eff9d2]
  418230:	mov    eax,ds:0x4b10d959
  418235:	pop    edx
  418236:	addr16 out dx,eax
  418238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418239:	mov    bh,0x70
  41823b:	jbe    0x4181bd
  41823d:	repz popa 
  41823f:	(bad)  
  418240:	pop    esp
  418241:	sub    DWORD PTR [ecx+0x4f08b80e],esi
  418247:	div    DWORD PTR [edx]
  418249:	xlat   BYTE PTR ds:[ebx]
  41824a:	es jns 0x4181d5
  41824d:	jecxz  0x418294
  41824f:	mov    al,0x5d
  418251:	aam    0xfc
  418253:	push   esp
  418254:	cs test dh,bl
  418257:	stos   DWORD PTR es:[edi],eax
  418258:	sub    al,0x6d
  41825a:	test   DWORD PTR [ebx+ebp*8],ecx
  41825d:	enter  0x8c20,0x1e
  418261:	add    esi,DWORD PTR [edi]
  418263:	cmp    ecx,DWORD PTR [ebp+0x36]
  418266:	cmc    
  418267:	lock int3 
  418269:	aaa    
  41826a:	in     al,0x88
  41826c:	nop
  41826d:	sub    BYTE PTR [edi+eiz*2+0x6f37f514],dh
  418274:	or     edx,esi
  418276:	add    BYTE PTR [eax],dh
  418278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418279:	mov    dl,0xf8
  41827b:	adc    BYTE PTR [esi+0x37],0x8
  41827f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418280:	fwait
  418281:	adc    ebx,DWORD PTR [esi]
  418283:	and    al,0x39
  418285:	sbb    eax,0x7dfc2f3a
  41828a:	cmp    al,0xee
  41828c:	mov    esi,0x9a4c1479
  418291:	sub    BYTE PTR [edx+0x37],cl
  418294:	mov    edx,0xd0e6ee7f
  418299:	jne    0x418300
  41829b:	mov    ebp,DWORD PTR [edx-0x54033daf]
  4182a1:	jge    0x4182b9
  4182a3:	ficomp WORD PTR ds:0xc65c4508
  4182a9:	sub    dl,bl
  4182ab:	add    BYTE PTR [esi+0x2f],dh
  4182ae:	push   ebx
  4182af:	cmp    BYTE PTR [esi+edx*2-0x308e1603],dh
  4182b6:	mov    eax,DWORD PTR [edi+0x26]
  4182b9:	test   al,dh
  4182bb:	mov    bh,0xb
  4182bd:	inc    esi
  4182be:	xlat   BYTE PTR ds:[ebx]
  4182bf:	inc    ebp
  4182c0:	pop    eax
  4182c1:	enter  0x6f05,0xa4
  4182c5:	aad    0x27
  4182c7:	push   eax
  4182c8:	fidivr WORD PTR [eax+0x5eb2b2ba]
  4182ce:	sub    ecx,DWORD PTR [edx-0x1f]
  4182d1:	xchg   ecx,eax
  4182d2:	sub    BYTE PTR [edi],0xe0
  4182d5:	push   edi
  4182d6:	in     eax,dx
  4182d7:	mov    al,0xd2
  4182d9:	jge    0x418275
  4182db:	scas   al,BYTE PTR es:[edi]
  4182dc:	mov    al,ds:0x97306a45
  4182e1:	movsx  edx,BYTE PTR [edx-0x35]
  4182e5:	les    esp,FWORD PTR [ebx]
  4182e7:	and    al,0xf6
  4182e9:	pop    eax
  4182ea:	jg     0x4182aa
  4182ec:	shl    BYTE PTR [eax-0x4bb2bbb4],0xab
  4182f3:	and    BYTE PTR [ecx],dl
  4182f5:	push   ebx
  4182f6:	xor    DWORD PTR fs:[eax-0x4ad7bfb3],ecx
  4182fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182fe:	jbe    0x418371
  418300:	inc    esp
  418301:	call   FWORD PTR [edx-0xc654558]
  418307:	inc    eax
  418308:	(bad)  
  41830a:	inc    edx
  41830b:	fistp  WORD PTR [edx]
  41830d:	and    eax,0x980304d3
  418312:	sbb    eax,0xef565c87
  418317:	and    al,BYTE PTR [ebp+0x471f9ee7]
  41831d:	test   al,0xbf
  41831f:	xchg   ecx,eax
  418320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418321:	pop    ds
  418322:	or     DWORD PTR ds:0x5aa63f08,ebx
  418328:	sub    eax,0xe755a292
  41832d:	sub    bh,BYTE PTR [esp+ecx*1]
  418330:	push   esp
  418331:	out    0xff,al
  418333:	ror    BYTE PTR fs:[esi+esi*1-0x3e],0xc6
  418339:	test   eax,0x19638c4e
  41833e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833f:	pop    ecx
  418340:	jle    0x418359
  418342:	adc    al,BYTE PTR [esi]
  418344:	xchg   ebx,eax
  418345:	sbb    eax,0x6c92fa53
  41834a:	in     al,dx
  41834b:	or     DWORD PTR [edx+0x1cdbbd9d],ebp
  418351:	xor    DWORD PTR [esi-0x20],ecx
  418354:	xchg   ecx,eax
  418355:	shr    BYTE PTR [edx+ebp*8+0x1],1
  418359:	aam    0xfe
  41835b:	xor    BYTE PTR [ebp-0x54],al
  41835e:	adc    BYTE PTR [eax+0x5d2a6dad],bh
  418364:	add    eax,0x6544294
  418369:	shl    BYTE PTR [esi-0x66],0x92
  41836d:	scas   eax,DWORD PTR es:[edi]
  41836e:	out    0x99,eax
  418370:	add    DWORD PTR [esi+ebx*1-0x276ad66c],edi
  418377:	daa    
  418378:	sub    bh,BYTE PTR [ecx-0x7d]
  41837b:	pop    esi
  41837c:	and    edi,ecx
  41837e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41837f:	cmp    DWORD PTR [ebp-0x5ea0bc19],ebp
  418385:	sub    al,0x1c
  418387:	inc    ebp
  418388:	inc    esi
  418389:	mov    dl,BYTE PTR [esi-0x69]
  41838c:	out    0x6a,al
  41838e:	xchg   ebp,eax
  41838f:	sub    ebx,DWORD PTR [edi-0x5c]
  418392:	adc    al,0xed
  418394:	in     al,0x62
  418396:	out    dx,al
  418397:	sub    BYTE PTR [edi+0x68db2ade],bh
  41839d:	das    
  41839e:	add    di,WORD PTR ds:0x9229bfee
  4183a5:	inc    edi
  4183a6:	daa    
  4183a7:	xchg   DWORD PTR [esi-0x5ab91b36],ebp
  4183ad:	cmp    edi,DWORD PTR [ecx+eax*8+0x7832f7b9]
  4183b4:	loope  0x418426
  4183b6:	xchg   ebx,ebp
  4183b8:	adc    BYTE PTR [ebp-0x1b],bl
  4183bb:	popa   
  4183bc:	mov    ds:0xe24c3610,eax
  4183c1:	pushf  
  4183c2:	xchg   ebx,eax
  4183c3:	push   ebx
  4183c4:	jecxz  0x418351
  4183c6:	call   0x41e2:0x1c63d048
  4183cd:	imul   ecx,DWORD PTR [ebx+0x1c192908],0x25
  4183d4:	xor    esi,DWORD PTR [eax]
  4183d6:	jmp    0x418370
  4183d8:	sbb    al,0x9c
  4183da:	pushf  
  4183db:	out    dx,eax
  4183dc:	jecxz  0x4183a7
  4183de:	xor    ch,BYTE PTR [ebx+ebp*1+0x71]
  4183e2:	in     al,0x86
  4183e4:	jl     0x4183f7
  4183e6:	aas    
  4183e7:	call   0x6bc84ac4
  4183ec:	enter  0xd338,0xc1
  4183f0:	mov    edi,0x5b2c4fba
  4183f5:	adc    eax,0x4bf955da
  4183fa:	in     al,0x7d
  4183fc:	lea    esp,[edx+0x20661158]
  418402:	sbb    DWORD PTR [ebx-0x7edaced3],ebp
  418408:	repz mov eax,0x65643a1f
  41840e:	push   ss
  41840f:	mov    esi,DWORD PTR [esi+eax*4]
  418412:	cmp    DWORD PTR [ebp+0x52],edi
  418415:	add    esp,DWORD PTR [esi-0xfe570a0]
  41841b:	aaa    
  41841c:	mov    WORD PTR [eax+0x2004de9d],ss
  418422:	or     BYTE PTR [esi-0x9165283],dl
  418428:	cwde   
  418429:	add    bh,BYTE PTR [ecx]
  41842b:	pop    edi
  41842c:	shr    DWORD PTR [esi+ebp*8-0x383d8f79],1
  418433:	sahf   
  418434:	loopne 0x41845e
  418436:	xlat   BYTE PTR ds:[ebx]
  418437:	ds cmp bx,cx
  41843b:	or     dl,BYTE PTR ds:0xf85f2cfb
  418441:	call   FWORD PTR [ebp-0x6b]
  418444:	sub    esp,DWORD PTR [ebx-0x51]
  418447:	scas   eax,DWORD PTR es:[edi]
  418448:	(bad)  
  418449:	repnz inc ebp
  41844b:	pop    edi
  41844c:	mov    bh,0x67
  41844e:	or     DWORD PTR [ebx],edi
  418450:	mul    DWORD PTR [ebx]
  418452:	(bad)  
  418453:	shl    DWORD PTR [ebp+0x2a3e8fc5],0x64
  41845a:	push   cs
  41845b:	push   esp
  41845c:	pop    DWORD PTR [edi+0x2cb3ccae]
  418462:	lods   eax,DWORD PTR ds:[esi]
  418463:	adc    BYTE PTR [esi+0xce5fdc2],dh
  418469:	adc    eax,0x96de6389
  41846e:	inc    eax
  41846f:	and    DWORD PTR [esp+esi*8-0x4d],ebx
  418473:	jno    0x418478
  418475:	gs mov ah,0xd8
  418478:	cmp    esp,ebx
  41847a:	mov    edi,0x90c0550a
  41847f:	ds sub al,0x36
  418482:	push   0xffffffe0
  418484:	jmp    0x6971:0xadb362c1
  41848b:	dec    ecx
  41848c:	cmp    cl,BYTE PTR [edx+0x76]
  41848f:	sar    dl,cl
  418491:	sub    BYTE PTR [ecx],0x13
  418494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418495:	inc    ebp
  418496:	and    edi,edi
  418498:	push   ecx
  418499:	mov    eax,ds:0x64e5ce1
  41849e:	adc    DWORD PTR [ebx],0x338c7452
  4184a4:	(bad)  
  4184a5:	mov    edx,0x1a414d73
  4184aa:	aas    
  4184ab:	das    
  4184ac:	mov    cl,bl
  4184ae:	sub    ecx,DWORD PTR [edi-0x3d]
  4184b1:	dec    ebp
  4184b2:	clc    
  4184b3:	cs ret 
  4184b5:	bound  esi,QWORD PTR [ebp-0x7ebea4bc]
  4184bb:	ffree  st(1)
  4184bd:	inc    ecx
  4184be:	push   0x51
  4184c0:	and    al,0xfc
  4184c2:	lock clc 
  4184c4:	scas   eax,DWORD PTR es:[edi]
  4184c5:	in     al,0x5
  4184c7:	xor    BYTE PTR [ebp-0x3],0x38
  4184cb:	lock dec ebx
  4184cd:	inc    esp
  4184ce:	cmc    
  4184cf:	xchg   esp,eax
  4184d0:	retf   
  4184d1:	xor    DWORD PTR [edi-0x1c],ecx
  4184d4:	pop    eax
  4184d5:	jl     0x4184ae
  4184d7:	xor    BYTE PTR [edx],bl
  4184d9:	inc    eax
  4184da:	push   cs
  4184db:	mul    DWORD PTR [edx-0x59]
  4184de:	lea    esi,[edi-0x707e7905]
  4184e4:	fisttp WORD PTR [esi]
  4184e6:	(bad)  
  4184e7:	jns    0x4184a1
  4184e9:	or     DWORD PTR [eax],edx
  4184eb:	mov    edx,0x5d607431
  4184f0:	jg     0x418500
  4184f2:	sub    eax,0xd32eb930
  4184f7:	ror    DWORD PTR [ebp-0x9515728],0xee
  4184fe:	sbb    ebp,DWORD PTR [edx+0x2d8ac29b]
  418504:	mov    edx,ds
  418506:	aaa    
  418507:	into   
  418508:	dec    esp
  418509:	test   eax,0x372b991e
  41850e:	sub    eax,0x67517d14
  418513:	mov    ds:0x6bd74bbe,al
  418518:	pop    es
  418519:	mov    ?,WORD PTR [ecx-0x101b929f]
  41851f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418520:	lds    esp,FWORD PTR [ecx-0x4985c802]
  418526:	dec    ecx
  418527:	xlat   BYTE PTR ds:[ebx]
  418528:	js     0x4184ed
  41852a:	inc    ebx
  41852b:	sbb    ebx,esi
  41852d:	push   eax
  41852e:	dec    edi
  41852f:	push   0xffffffc5
  418531:	push   edi
  418532:	xor    DWORD PTR ds:0x2181edbf,ebx
  418538:	pop    ebx
  418539:	push   cs
  41853a:	sub    eax,0xfcc94dc9
  41853f:	imul   DWORD PTR [eax+0x38]
  418542:	lea    ebp,[ebp-0x75a99a5a]
  418548:	ins    BYTE PTR es:[edi],dx
  418549:	je     0x41856f
  41854b:	pop    ss
  41854c:	pop    ss
  41854d:	(bad)  
  41854e:	fisttp WORD PTR [eax+0x74]
  418551:	mov    bh,0xd8
  418553:	and    ebp,DWORD PTR [edx+0x21c74d3b]
  418559:	cmp    bh,BYTE PTR [edx-0x5e]
  41855c:	outs   dx,BYTE PTR ds:[esi]
  41855d:	push   ecx
  41855e:	cmp    edi,edi
  418560:	inc    ebx
  418561:	push   es
  418562:	outs   dx,DWORD PTR ds:[esi]
  418563:	and    DWORD PTR [ebp+0x652d5d4],0xc82a518d
  41856d:	jl     0x418561
  41856f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418571:	aaa    
  418572:	pop    ds
  418573:	fs xchg ebp,eax
  418575:	pusha  
  418576:	loopne 0x418512
  418578:	js     0x4185ea
  41857a:	or     al,BYTE PTR [edx-0x39]
  41857d:	ja     0x418555
  41857f:	and    BYTE PTR [esi],dh
  418581:	inc    ecx
  418582:	hlt    
  418583:	ret    
  418584:	xor    bl,BYTE PTR [ebx+0x4]
  418587:	pushf  
  418588:	adc    bh,BYTE PTR ds:0x194d549e
  41858e:	ins    DWORD PTR es:[edi],dx
  41858f:	fst    DWORD PTR [edx+0x4e749872]
  418595:	mov    ds:0x6a2154a9,al
  41859a:	mov    ebp,0x9beee579
  41859f:	inc    esp
  4185a0:	pop    ebx
  4185a1:	repz les esp,FWORD PTR [di-0x127e]
  4185a7:	hlt    
  4185a8:	add    eax,0xef096f9d
  4185ad:	data16 pop si
  4185b0:	xlat   BYTE PTR ds:[ebx]
  4185b1:	jb     0x4185f1
  4185b3:	or     esi,ebp
  4185b5:	sbb    esi,DWORD PTR [edi+0x7d9ea79c]
  4185bb:	mov    eax,0xfa77f348
  4185c0:	or     al,0xea
  4185c2:	les    eax,FWORD PTR [eax+0x4a]
  4185c5:	mov    ds:0xf75784ac,al
  4185ca:	js     0x4185ba
  4185cc:	arpl   di,cx
  4185ce:	fdivrp st(1),st
  4185d0:	hlt    
  4185d1:	pop    esi
  4185d2:	test   BYTE PTR [edx+0x50],ah
  4185d5:	xor    eax,0xde947543
  4185da:	(bad)  
  4185db:	sbb    ebp,DWORD PTR [ebx]
  4185dd:	push   esi
  4185de:	mov    WORD PTR [ebx-0x4c],ds
  4185e1:	push   ebx
  4185e2:	xor    BYTE PTR [esi+0x39],al
  4185e5:	add    eax,0x9ad7389a
  4185ea:	std    
  4185eb:	aaa    
  4185ec:	arpl   WORD PTR [ebx+ebp*4-0x16],cx
  4185f0:	sbb    al,0x4e
  4185f2:	mov    ds:0x989b7e68,eax
  4185f7:	push   esp
  4185f8:	mov    esp,0x39d0d7f1
  4185fd:	dec    edi
  4185fe:	sub    dh,bl
  418600:	mov    esi,0x9d8076a5
  418605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418606:	adc    eax,0x82ebeda5
  41860b:	pop    ecx
  41860d:	pop    edi
  41860e:	inc    esp
  41860f:	jle    0x41859b
  418611:	xchg   DWORD PTR [edi],eax
  418613:	sbb    BYTE PTR ds:0x940defb8,ah
  418619:	scas   eax,DWORD PTR es:[edi]
  41861a:	mov    dh,0x40
  41861c:	test   bh,al
  41861e:	mov    ebx,ds
  418620:	mov    bh,dl
  418622:	inc    esi
  418623:	call   0x9a0d58c3
  418628:	mov    edi,0x68592b43
  41862d:	out    dx,al
  41862e:	jge    0x41867d
  418630:	arpl   WORD PTR [edi+0x5b],si
  418633:	xor    BYTE PTR [eax-0x1c],bh
  418636:	add    edx,edi
  418638:	jbe    0x41868f
  41863a:	cld    
  41863b:	inc    esi
  41863c:	out    dx,al
  41863d:	ror    bl,0xd4
  418640:	shl    BYTE PTR [ecx+edx*8+0x2b],0x7c
  418645:	push   ss
  418646:	sbb    al,0x99
  418648:	pop    ebp
  418649:	arpl   WORD PTR [ecx+esi*4+0x48daddda],sp
  418650:	std    
  418651:	in     al,dx
  418652:	pop    es
  418653:	pop    esp
  418654:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418656:	shl    BYTE PTR [esi+edx*8-0x78],1
  41865a:	push   eax
  41865b:	iret   
  41865c:	jbe    0x4186c5
  41865e:	nop
  41865f:	or     dh,BYTE PTR [ecx]
  418661:	fist   WORD PTR [edi+0x4d]
  418664:	lods   eax,DWORD PTR ds:[esi]
  418665:	jp     0x4185fe
  418667:	mov    ebp,0xc21a1373
  41866c:	and    eax,0x25431648
  418671:	dec    ebp
  418672:	inc    edx
  418673:	jp     0x418642
  418675:	mov    eax,ds:0x3217b625
  41867a:	imul   ebp,DWORD PTR [eax+0x72749366],0xe
  418681:	xchg   ebp,eax
  418682:	ret    0xc0c7
  418685:	xchg   esp,eax
  418686:	dec    ecx
  418687:	loop   0x41864d
  418689:	jne    0x41865b
  41868b:	xchg   edi,eax
  41868d:	push   ebx
  41868e:	jbe    0x4186b0
  418690:	adc    eax,0xded1dd2b
  418695:	mov    edx,0xd078f874
  41869a:	xchg   ecx,eax
  41869b:	mov    dh,0xc6
  41869d:	addr16 cli 
  41869f:	cdq    
  4186a0:	inc    eax
  4186a1:	add    esi,ebp
  4186a3:	sti    
  4186a4:	jle    0x4186db
  4186a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a7:	fist   WORD PTR [ecx-0x2f6111f3]
  4186ad:	fistp  DWORD PTR [ebp-0x66]
  4186b0:	sub    BYTE PTR [ebp-0x78],bh
  4186b3:	mov    WORD PTR [ecx-0x5db88723],?
  4186b9:	pushf  
  4186ba:	ds das 
  4186bc:	push   es
  4186bd:	sub    BYTE PTR [esi],0x3b
  4186c0:	dec    edx
  4186c1:	out    dx,eax
  4186c2:	jae    0x418731
  4186c4:	shl    bh,cl
  4186c6:	out    0x93,al
  4186c8:	ja     0x418685
  4186ca:	les    esp,FWORD PTR [edi+ebx*8]
  4186cd:	rdtsc  
  4186cf:	mov    cl,0x3a
  4186d1:	int3   
  4186d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d3:	push   esp
  4186d4:	repz push ebp
  4186d6:	les    edi,FWORD PTR [ebx+0x9f274f7]
  4186dc:	pop    edx
  4186dd:	stos   DWORD PTR es:[edi],eax
  4186de:	jb     0x4186eb
  4186e0:	mov    ah,0xd4
  4186e2:	inc    esi
  4186e3:	cli    
  4186e4:	leave  
  4186e5:	(bad)  
  4186e6:	in     eax,dx
  4186e7:	outs   dx,BYTE PTR ds:[esi]
  4186e8:	jae    0x4186ce
  4186ea:	push   ebx
  4186eb:	lds    edi,FWORD PTR [ebx-0xf]
  4186ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ef:	inc    ebp
  4186f0:	call   0x4f6e:0x3ced34fe
  4186f7:	push   ebx
  4186f8:	inc    ebp
  4186f9:	jmp    0x32915346
  4186fe:	mov    ecx,0x6b66a79c
  418703:	fcom   QWORD PTR [ebp-0x30]
  418706:	and    al,0x59
  418708:	fs lock stos DWORD PTR es:[edi],eax
  41870b:	mov    eax,ds:0xabe5b37
  418710:	jmp    0x677cc116
  418715:	mov    al,al
  418717:	scas   eax,DWORD PTR es:[edi]
  418718:	sub    DWORD PTR [edx],esi
  41871a:	xchg   esp,eax
  41871b:	imul   esp,DWORD PTR [edi-0x2550c122],0xfffffff5
  418722:	mov    ah,0xbd
  418724:	fdiv   QWORD PTR [esi-0x21]
  418727:	ja     0x418785
  418729:	cmp    dl,BYTE PTR [eax+0x31]
  41872c:	aam    0x69
  41872e:	mov    al,ds:0xf78f7324
  418733:	dec    esi
  418734:	inc    edx
  418735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418736:	(bad)  [eax-0x4da7563c]
  41873c:	shr    BYTE PTR [ecx],0x1b
  41873f:	leave  
  418740:	or     bh,BYTE PTR [esi-0x5d514cbf]
  418746:	adc    ebp,0xffffffcf
  418749:	cmp    esp,DWORD PTR [esi+0x45df9a47]
  41874f:	cdq    
  418750:	imul   ebx,ebp,0xf857dae8
  418756:	dec    ebp
  418758:	or     edi,DWORD PTR [esi+eax*1]
  41875b:	daa    
  41875c:	or     eax,0x8df0bbd4
  418761:	push   ds
  418762:	push   es
  418763:	inc    esp
  418764:	sub    DWORD PTR [ebx],edx
  418766:	mov    ah,0xf3
  418768:	lahf   
  418769:	js     0x418764
  41876b:	(bad)  
  41876c:	mov    ds:0x4b92d70d,eax
  418771:	jp     0x4187ab
  418773:	and    eax,edi
  418775:	outs   dx,DWORD PTR ds:[esi]
  418776:	push   cs
  418777:	mov    edi,0xdefe6cd3
  41877c:	mov    ds:0x7c5fd046,al
  418781:	pop    edi
  418782:	inc    edx
  418783:	inc    ebx
  418784:	inc    eax
  418785:	xor    esi,DWORD PTR [edi-0x28]
  418788:	aad    0x31
  41878a:	and    BYTE PTR [esi],dh
  41878c:	loop   0x4187e9
  41878e:	mov    eax,ds:0x29813eba
  418793:	mov    eax,ds:0xfed47c37
  418798:	mov    edx,0xdb77ffc3
  41879d:	pop    ebp
  41879e:	sub    ch,bh
  4187a0:	mov    eax,0x1de2d8a
  4187a5:	jo     0x41876a
  4187a7:	sahf   
  4187a8:	sub    BYTE PTR [esi+0x422ab37b],dh
  4187ae:	popa   
  4187af:	repnz fldenv [ebx+0x11dcd0d4]
  4187b6:	cs lock pusha 
  4187b9:	mov    al,0x73
  4187bb:	mov    esp,0x59db8466
  4187c0:	pop    es
  4187c1:	rep ins BYTE PTR es:[edi],dx
  4187c3:	mov    ebx,0xeedbc357
  4187c8:	xchg   ecx,eax
  4187c9:	and    al,0x69
  4187cb:	pop    ds
  4187cc:	inc    esi
  4187cd:	push   ebp
  4187ce:	push   0x71
  4187d0:	push   0x2b6ec3e5
  4187d5:	mov    dl,0xfd
  4187d7:	pop    ds
  4187d8:	pop    eax
  4187d9:	(bad)  [edx+0x7631fcf0]
  4187df:	outs   dx,BYTE PTR ds:[esi]
  4187e0:	mov    esp,eax
  4187e2:	mov    ?,WORD PTR [ebx+ebx*1+0x1a]
  4187e6:	ss inc ecx
  4187e8:	call   0x11a2b69f
  4187ed:	repnz inc edi
  4187ef:	pop    esi
  4187f0:	jg     0x41886b
  4187f2:	int3   
  4187f3:	int    0x11
  4187f5:	inc    edx
  4187f6:	jle    0x418806
  4187f8:	and    BYTE PTR [edx],al
  4187fa:	add    al,0xb1
  4187fc:	imul   DWORD PTR [esi+0x71]
  4187ff:	dec    edi
  418800:	nop
  418801:	cmp    ch,BYTE PTR [ecx-0x633cd027]
  418807:	leave  
  418808:	sub    al,0x7b
  41880a:	fcmovu st,st(6)
  41880c:	lds    esp,FWORD PTR [ebp-0x75]
  41880f:	sbb    BYTE PTR [edx],dl
  418811:	jb     0x41879c
  418813:	sbb    cl,BYTE PTR [edx]
  418815:	mov    esp,0xfe4c6f34
  41881a:	push   esi
  41881b:	push   edx
  41881c:	and    dl,BYTE PTR [eax]
  41881e:	cdq    
  41881f:	bound  ecx,QWORD PTR [ecx+0x4e33f2f6]
  418825:	es cmc 
  418827:	(bad)
  41882b:	mov    DWORD PTR [edi-0x5e],ebx
  41882e:	add    BYTE PTR [ecx+0x787a179e],bl
  418834:	xor    ah,dl
  418836:	(bad)  
  418837:	push   ss
  418838:	test   eax,0x422fc1b3
  41883d:	out    dx,al
  41883e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41883f:	stc    
  418840:	jmp    0x9212:0xefaa754a
  418847:	aaa    
  418848:	pusha  
  418849:	mov    dh,0x32
  41884b:	ja     0x41884a
  41884d:	jmp    0x41884d
  41884f:	cmp    ah,BYTE PTR [edi]
  418851:	ja     0x418868
  418853:	lods   al,BYTE PTR ds:[esi]
  418854:	inc    ecx
  418855:	retf   
  418856:	mov    ebp,DWORD PTR es:[eax]
  418859:	xchg   ecx,eax
  41885a:	jl     0x4188c5
  41885c:	adc    BYTE PTR [ebp-0x29],bh
  41885f:	adc    DWORD PTR [edx-0x55],edi
  418862:	loope  0x418836
  418864:	jo     0x4187e6
  418866:	push   ecx
  418867:	scas   eax,DWORD PTR es:[edi]
  418868:	call   0xcd89:0x861a454e
  41886f:	imul   ebp,edi,0x1e
  418872:	test   DWORD PTR [eax],edi
  418874:	cs ss call 0xa87c7168
  41887b:	xor    ch,BYTE PTR [ebx]
  41887d:	push   esp
  41887e:	ja     0x4188b3
  418880:	sub    DWORD PTR [edi-0x40c3ed3c],edx
  418886:	dec    ebp
  418887:	mov    edi,0xa42530de
  41888c:	sbb    ah,ch
  41888e:	pop    ecx
  41888f:	add    cl,bl
  418891:	cmp    BYTE PTR [edi+0x3a],al
  418894:	jle    0x41888d
  418896:	sahf   
  418897:	retf   
  418898:	sti    
  418899:	loop   0x418839
  41889b:	(bad)  
  41889c:	ins    DWORD PTR es:[edi],dx
  41889d:	ins    DWORD PTR es:[edi],dx
  41889e:	test   DWORD PTR [ebp-0x6f],edi
  4188a1:	addr16 inc edx
  4188a3:	cs jp  0x418827
  4188a6:	ins    DWORD PTR es:[edi],dx
  4188a7:	sub    dh,dh
  4188a9:	sub    DWORD PTR [edi-0x67],ecx
  4188ac:	mov    al,BYTE PTR [esi-0x2523684]
  4188b2:	int    0xc2
  4188b4:	xchg   edi,eax
  4188b5:	ja     0x418888
  4188b7:	rcl    BYTE PTR [ecx],cl
  4188b9:	aaa    
  4188ba:	add    esi,DWORD PTR [edx-0xf]
  4188bd:	cmp    al,0x7b
  4188bf:	dec    edx
  4188c0:	mov    BYTE PTR [ebx+0x252f0367],dh
  4188c6:	sahf   
  4188c7:	xchg   edx,eax
  4188c8:	sbb    edx,DWORD PTR [ebx]
  4188ca:	int    0x5c
  4188cc:	sub    eax,0xe7011c37
  4188d1:	pop    esi
  4188d2:	mov    esi,0x2f98916e
  4188d7:	jno    0x41894a
  4188d9:	sbb    dl,bl
  4188db:	rcr    ecx,1
  4188dd:	lods   eax,DWORD PTR ds:[esi]
  4188de:	outs   dx,BYTE PTR ds:[esi]
  4188df:	pop    ds
  4188e0:	pop    eax
  4188e1:	cmp    BYTE PTR [edi-0x8],ah
  4188e4:	hlt    
  4188e5:	imul   ecx,DWORD PTR [eax],0xffffffd5
  4188e8:	sub    ax,0x1bb0
  4188ec:	push   ds
  4188ed:	add    al,0xdd
  4188ef:	or     BYTE PTR [edx+0x4a],ch
  4188f2:	xor    al,0xdf
  4188f4:	mov    esi,0x13d10c3c
  4188f9:	mov    ebx,0x4dbd1dd8
  4188fe:	out    dx,al
  4188ff:	test   eax,eax
  418901:	cmp    al,0xc5
  418903:	fsubr  st,st(5)
  418905:	pop    ss
  418906:	ins    DWORD PTR es:[edi],dx
  418907:	or     al,0x9
  418909:	cmp    bl,BYTE PTR ds:0x82606bb9
  41890f:	dec    ebx
  418910:	pop    ebx
  418911:	mov    ds:0xa3aa86ea,eax
  418916:	mov    bh,0xfe
  418918:	inc    edi
  418919:	and    eax,0xf989f08
  41891e:	mov    ecx,0x8c7653ae
  418923:	ins    DWORD PTR es:[edi],dx
  418924:	leave  
  418925:	aam    0x34
  418927:	pop    ss
  418928:	fwait
  418929:	dec    eax
  41892a:	fcomi  st,st(6)
  41892c:	out    dx,eax
  41892d:	inc    ecx
  41892e:	or     BYTE PTR [eax],ah
  418930:	xor    al,0x90
  418932:	sti    
  418933:	scas   al,BYTE PTR es:[edi]
  418934:	jb     0x418927
  418936:	mov    bl,0x56
  418938:	inc    ebx
  418939:	into   
  41893a:	lea    esp,[esi-0x7518c7b6]
  418940:	cld    
  418941:	call   0xfb8087f6
  418946:	pop    eax
  418947:	cwde   
  418948:	cmp    eax,0x37467e48
  41894d:	push   es
  41894e:	dec    eax
  41894f:	lods   eax,DWORD PTR ds:[esi]
  418950:	retf   
  418951:	dec    eax
  418952:	in     eax,0x97
  418954:	aaa    
  418955:	out    dx,al
  418956:	enter  0xecea,0x5d
  41895a:	repnz mov esp,0x7d3f18ef
  418960:	fsub   DWORD PTR [ebx-0x80]
  418963:	mov    ds:0xe7ba2bbb,eax
  418968:	int    0x4c
  41896a:	out    dx,eax
  41896b:	mov    ch,0x63
  41896d:	mov    WORD PTR [ebx+eiz*2-0x71f6227b],fs
  418974:	mov    ?,WORD PTR [ecx+0x11]
  418977:	(bad)  
  418978:	cld    
  418979:	cli    
  41897a:	(bad)  
  41897c:	retf   
  41897d:	mov    edi,0x4a97ae1f
  418982:	add    al,0x3
  418984:	aam    0xa5
  418986:	xchg   esi,eax
  418987:	icebp  
  418988:	jbe    0x418984
  41898a:	(bad)  
  41898b:	cli    
  41898c:	pop    es
  41898d:	add    dl,BYTE PTR [ecx+0x68]
  418990:	int3   
  418991:	stos   BYTE PTR es:[edi],al
  418992:	jecxz  0x418a0b
  418994:	out    0xa7,al
  418996:	jge    0x41899b
  418998:	xchg   ecx,eax
  418999:	repz icebp 
  41899b:	mov    dh,ch
  41899d:	fdiv   QWORD PTR [ebp-0x1caf28e5]
  4189a3:	or     eax,0xe080023a
  4189a8:	sbb    al,0x5d
  4189aa:	aam    0x7
  4189ac:	mov    bl,0x8e
  4189ae:	push   es
  4189af:	test   eax,0x4902199a
  4189b4:	(bad)  
  4189b5:	or     DWORD PTR [ebx],edi
  4189b7:	adc    esp,ebx
  4189b9:	in     al,0x92
  4189bb:	jle    0x418a02
  4189bd:	push   esi
  4189be:	mov    dh,0xfe
  4189c0:	jbe    0x41896e
  4189c2:	stos   DWORD PTR es:[edi],eax
  4189c3:	in     eax,dx
  4189c4:	mov    ebp,0x2982847d
  4189c9:	in     al,dx
  4189ca:	mov    al,0x4c
  4189cc:	data16 fdiv QWORD PTR [ecx+esi*4-0x1a]
  4189d1:	loop   0x418a23
  4189d3:	mov    edx,0xd4334f53
  4189d8:	ds test al,0xf
  4189db:	sub    bl,BYTE PTR ss:[edx+0x78a1bc6d]
  4189e2:	mov    ds:0xe79437a,eax
  4189e7:	stos   DWORD PTR es:[edi],eax
  4189e8:	inc    esp
  4189e9:	jnp    0x418a69
  4189eb:	enter  0x3e5,0x10
  4189ef:	xor    dh,al
  4189f1:	cmp    ecx,ebx
  4189f3:	pop    ebp
  4189f4:	cmp    edx,DWORD PTR [eax+0x18]
  4189f7:	(bad)  
  4189f8:	int3   
  4189f9:	sar    DWORD PTR [edi+0x8],cl
  4189fc:	add    al,0x6a
  4189fe:	adc    DWORD PTR [eax-0x7fb082bf],ebp
  418a04:	mov    BYTE PTR [ebx],bh
  418a06:	les    eax,FWORD PTR [ecx+ebp*2+0x4f]
  418a0a:	xchg   esp,eax
  418a0b:	rcr    DWORD PTR [ecx+0x3b],cl
  418a0e:	mov    dh,BYTE PTR [ecx]
  418a10:	sti    
  418a11:	stos   BYTE PTR es:[edi],al
  418a12:	fidiv  DWORD PTR [esi+0x2153e2d3]
  418a18:	push   eax
  418a19:	jmp    0xcf4f5720
  418a1e:	stc    
  418a1f:	out    0x55,eax
  418a21:	dec    ebx
  418a22:	enter  0x3f47,0x91
  418a26:	sbb    eax,0xc8f29194
  418a2b:	mov    ch,0x52
  418a2d:	dec    esi
  418a2e:	sar    eax,0x60
  418a31:	fwait
  418a32:	xor    bh,BYTE PTR [ebp-0x1defad1a]
  418a38:	push   0xfffffff3
  418a3a:	lods   al,BYTE PTR ds:[esi]
  418a3b:	dec    ebx
  418a3c:	xor    BYTE PTR [ebp-0xf742831],dl
  418a42:	pop    ebx
  418a43:	push   ecx
  418a44:	mov    ah,0x2a
  418a46:	ins    BYTE PTR es:[edi],dx
  418a47:	push   es
  418a48:	(bad)  
  418a49:	sbb    esp,DWORD PTR [edi]
  418a4b:	popf   
  418a4c:	ja     0x418acc
  418a4e:	xlat   BYTE PTR ds:[ebx]
  418a4f:	cld    
  418a50:	in     eax,0x88
  418a52:	inc    edi
  418a53:	int3   
  418a54:	push   edx
  418a55:	push   ebp
  418a56:	inc    eax
  418a57:	shr    DWORD PTR [edi],1
  418a59:	add    al,0x39
  418a5b:	ficom  WORD PTR [esi]
  418a5d:	sbb    edx,DWORD PTR [ebp+0x65fac7e1]
  418a63:	push   ecx
  418a64:	xor    BYTE PTR [eax+0x6fd1f964],0x54
  418a6b:	sahf   
  418a6c:	fmul   QWORD PTR [ebx-0x1d]
  418a6f:	xchg   ebp,eax
  418a70:	std    
  418a71:	popa   
  418a72:	push   eax
  418a73:	fmul   QWORD PTR [esi]
  418a75:	xchg   edi,eax
  418a76:	mov    ebp,0x7c06d0f5
  418a7b:	xor    edx,ebx
  418a7d:	dec    ecx
  418a7e:	test   eax,0xa42993ec
  418a83:	out    dx,eax
  418a84:	ins    BYTE PTR es:[edi],dx
  418a85:	xchg   ecx,eax
  418a86:	mov    dh,0x96
  418a88:	ins    DWORD PTR es:[edi],dx
  418a89:	ja     0x418a6e
  418a8b:	fcomp  st(7)
  418a8d:	push   ecx
  418a8e:	push   esp
  418a8f:	or     edi,DWORD PTR [edx-0x7a]
  418a92:	pop    es
  418a93:	push   ecx
  418a94:	mov    bh,0xd8
  418a96:	xchg   esp,eax
  418a97:	ret    
  418a98:	mov    esi,ecx
  418a9a:	repnz outs dx,DWORD PTR ds:[esi]
  418a9c:	dec    ebx
  418a9d:	(bad)  
  418a9e:	out    dx,al
  418a9f:	jne    0x418aa5
  418aa1:	jge    0x418aba
  418aa3:	sbb    BYTE PTR [esi+0x311d14ad],al
  418aa9:	pushf  
  418aaa:	sbb    ebp,0x586836ea
  418ab0:	adc    eax,0xd5f8091c
  418ab5:	ficomp DWORD PTR [esi+0xe8fa367]
  418abb:	pop    esp
  418abc:	loope  0x418a65
  418abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418abf:	and    bl,0x4f
  418ac2:	sbb    ebp,esi
  418ac4:	mov    eax,0xcd81ef76
  418ac9:	xor    al,0x2b
  418acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418acc:	xchg   bl,cl
  418ace:	js     0x418b2f
  418ad0:	mov    ch,0x36
  418ad2:	or     al,0xa3
  418ad4:	add    dh,BYTE PTR [ebp+0xe]
  418ad7:	outs   dx,DWORD PTR ds:[esi]
  418ad8:	lock mov dl,0xa5
  418adb:	out    0xec,eax
  418add:	sub    ecx,DWORD PTR ds:0x1aba16b6
  418ae3:	adc    al,0x21
  418ae5:	test   BYTE PTR es:[ecx+edi*4-0x27080880],dl
  418aed:	adc    DWORD PTR [ecx],ecx
  418aef:	out    0xcb,eax
  418af1:	xchg   DWORD PTR [esi-0x591978e3],edi
  418af7:	pop    ecx
  418af8:	xor    ah,BYTE PTR [ecx+0xe27b5d6]
  418afe:	add    eax,0xc72af8b2
  418b03:	ret    0x83bc
  418b06:	arpl   WORD PTR [edi],si
  418b08:	loope  0x418b16
  418b0a:	dec    esi
  418b0b:	sbb    ch,BYTE PTR [ebp-0x40]
  418b0e:	mov    edx,0x194800c0
  418b13:	jmp    0x22:0x9d12e94d
  418b1a:	and    eax,0x2c665ba0
  418b1f:	jle    0x418b58
  418b21:	loop   0x418b9e
  418b23:	ret    0x4ab0
  418b26:	fist   WORD PTR [ecx+0x49]
  418b29:	loopne 0x418af7
  418b2b:	out    0x42,eax
  418b2d:	iret   
  418b2e:	mov    ch,0x2b
  418b30:	int3   
  418b31:	daa    
  418b32:	(bad)  
  418b33:	out    dx,al
  418b34:	add    eax,eax
  418b36:	sbb    BYTE PTR [esi-0x36d423a3],0x6c
  418b3d:	ins    BYTE PTR es:[edi],dx
  418b3e:	sar    BYTE PTR [edx],cl
  418b40:	push   ecx
  418b41:	cmc    
  418b42:	adc    ch,BYTE PTR [ebx+edi*8]
  418b45:	ret    0xbd1a
  418b48:	xor    eax,0x7a0f3c61
  418b4d:	xchg   ebx,eax
  418b4e:	out    dx,eax
  418b4f:	pop    ecx
  418b50:	inc    edi
  418b51:	sub    al,0xe0
  418b53:	sti    
  418b54:	jne    0x418b34
  418b56:	rcr    DWORD PTR [edi+0x8],cl
  418b59:	jl     0x418bc3
  418b5b:	inc    ecx
  418b5c:	imul   DWORD PTR [ebx+0x2d]
  418b5f:	add    al,0x95
  418b61:	aas    
  418b62:	inc    esp
  418b63:	arpl   WORD PTR [eax+0x6542825c],sp
  418b69:	mov    ebp,0xb6543767
  418b6e:	mov    ebp,0x3c770738
  418b73:	push   0x68
  418b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b76:	cmp    BYTE PTR [edi-0x3b5e434d],dh
  418b7c:	push   esi
  418b7d:	xor    dh,dh
  418b7f:	or     esp,DWORD PTR [edx+ecx*8-0x5a]
  418b83:	jno    0x418b95
  418b85:	out    dx,al
  418b86:	mov    ebp,DWORD PTR [ecx+0x3b]
  418b89:	cmp    eax,0x26fcc896
  418b8e:	ins    DWORD PTR es:[edi],dx
  418b8f:	scas   al,BYTE PTR es:[edi]
  418b90:	inc    esp
  418b91:	mov    WORD PTR [ecx],fs
  418b93:	xchg   esi,eax
  418b94:	les    eax,FWORD PTR [edx+eiz*1-0x4f5bd81a]
  418b9b:	aaa    
  418b9c:	popf   
  418b9d:	xchg   ecx,eax
  418b9e:	out    dx,eax
  418b9f:	sbb    DWORD PTR [edx],esi
  418ba1:	ds jno 0x418c08
  418ba4:	pop    ebp
  418ba5:	mov    ch,0xc
  418ba7:	in     eax,dx
  418ba8:	cdq    
  418ba9:	mov    eax,ds:0x3d8f1c35
  418bae:	or     edx,DWORD PTR [edi]
  418bb0:	pop    ebx
  418bb1:	ret    
  418bb2:	sub    ch,BYTE PTR [edi+eax*1+0x2a6acaf6]
  418bb9:	stos   DWORD PTR es:[edi],eax
  418bba:	retf   0x1b67
  418bbd:	cmc    
  418bbe:	fs push cs
  418bc0:	jle    0x418c33
  418bc2:	mov    cl,0x4
  418bc4:	pinsrw mm2,WORD PTR [ebx-0x23ad63f2],0x36
  418bcc:	push   ebx
  418bcd:	aaa    
  418bce:	xor    ecx,DWORD PTR [edi+eiz*1+0x836615a]
  418bd5:	cdq    
  418bd6:	inc    ebx
  418bd7:	fld    DWORD PTR [esi-0x2a]
  418bda:	popf   
  418bdb:	inc    esi
  418bdc:	ja     0x418be2
  418bde:	mov    ds:0xdde0296,al
  418be3:	push   0x49c99e3d
  418be8:	fstp   DWORD PTR [edx]
  418bea:	std    
  418beb:	out    dx,eax
  418bec:	repnz out 0x30,eax
  418bef:	lock sbb DWORD PTR [edx],esp
  418bf2:	out    0x55,eax
  418bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf6:	or     dh,BYTE PTR [edx-0x36]
  418bf9:	and    cl,BYTE PTR [edi-0x1e]
  418bfc:	pop    es
  418bfd:	cmp    esp,DWORD PTR [ebp-0x12]
  418c00:	sub    DWORD PTR [eax+0x6e42878],ebp
  418c06:	cwde   
  418c07:	fwait
  418c08:	in     eax,0x2
  418c0a:	mov    bl,0x77
  418c0c:	out    0x5f,al
  418c0e:	pop    ecx
  418c0f:	adc    BYTE PTR [ecx+0x558ba6e7],0xac
  418c16:	stos   DWORD PTR es:[edi],eax
  418c17:	mov    WORD PTR [eax+0x7bcafcc0],gs
  418c1d:	cmp    dl,BYTE PTR [eax]
  418c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c20:	xor    ch,BYTE PTR [esp+ebp*2+0x41d0d661]
  418c27:	jl     0x418bde
  418c29:	push   ebp
  418c2a:	inc    eax
  418c2b:	or     al,0x64
  418c2d:	dec    edx
  418c2e:	dec    ebp
  418c2f:	retf   0xc56a
  418c32:	mov    ds:0x552140f2,al
  418c37:	scas   eax,DWORD PTR es:[edi]
  418c38:	idiv   BYTE PTR [ebx]
  418c3a:	jp     0x418c89
  418c3c:	jns    0x418be5
  418c3e:	dec    edx
  418c3f:	sbb    ebx,0xa131c74e
  418c45:	pop    ebp
  418c46:	adc    ah,dh
  418c48:	fwait
  418c49:	xor    ebx,DWORD PTR [ecx-0x61]
  418c4c:	add    bh,BYTE PTR [ebx]
  418c4e:	rcr    BYTE PTR ds:0x58f41daf,cl
  418c54:	ss and ch,ah
  418c57:	sbb    BYTE PTR [edx+0x3f],al
  418c5a:	repnz test eax,0x5e596448
  418c60:	dec    edi
  418c61:	scas   al,BYTE PTR es:[edi]
  418c62:	lahf   
  418c63:	xor    BYTE PTR ds:0x48074ea,cl
  418c69:	(bad)  [esi+esi*8-0x29]
  418c6d:	lds    ebx,FWORD PTR [esp+ecx*4]
  418c70:	popf   
  418c71:	icebp  
  418c72:	loopne 0x418c30
  418c74:	into   
  418c75:	es cmp eax,0x1d8d9aa2
  418c7b:	mov    al,0x7d
  418c7d:	push   ebx
  418c7e:	mov    bl,BYTE PTR [ecx+0x6d]
  418c81:	inc    esi
  418c82:	sub    eax,DWORD PTR [esi+ebp*4]
  418c85:	jg     0x418c60
  418c87:	ret    0x7278
  418c8a:	leave  
  418c8b:	pushf  
  418c8c:	mov    ds:0x4dcc7af9,eax
  418c91:	push   ss
  418c92:	pop    eax
  418c93:	fdiv   DWORD PTR [edi+0x79]
  418c96:	add    DWORD PTR [ebx],esp
  418c98:	fwait
  418c99:	dec    ebx
  418c9a:	xchg   ebp,eax
  418c9b:	fild   QWORD PTR [edx+0xb9cf921]
  418ca1:	jg     0x418cfb
  418ca3:	jmp    0x7512e3e4
  418ca8:	test   al,0xc4
  418caa:	(bad)  
  418cab:	pop    esp
  418cac:	xor    eax,0xc0a1d2d5
  418cb1:	in     eax,dx
  418cb2:	dec    esi
  418cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb4:	bound  esi,QWORD PTR [ebp+ebx*2+0x3f19a4f5]
  418cbb:	daa    
  418cbc:	push   esi
  418cbd:	pop    edx
  418cbe:	xchg   ebx,eax
  418cbf:	out    dx,al
  418cc0:	and    al,0xd
  418cc2:	xor    eax,ecx
  418cc4:	scas   eax,DWORD PTR es:[edi]
  418cc5:	imul   ebx,esi,0x10
  418cc8:	int    0xbb
  418cca:	dec    esp
  418ccb:	arpl   WORD PTR [ebx],bp
  418ccd:	imul   esp,DWORD PTR [eax],0xffffffff
  418cd0:	std    
  418cd1:	stos   DWORD PTR es:[edi],eax
  418cd2:	(bad)  
  418cd3:	out    0xee,eax
  418cd5:	or     DWORD PTR [eax+0x26],ebp
  418cd8:	pop    edi
  418cd9:	jmp    0x418d55
  418cdb:	imul   eax,ebp,0xc6fe1333
  418ce1:	mov    dh,0xa4
  418ce3:	cmp    DWORD PTR [ebp+0x18],esi
  418ce6:	pusha  
  418ce7:	mov    WORD PTR [edx],gs
  418ce9:	dec    edi
  418cea:	mov    eax,0xa3cfe7f5
  418cef:	fimul  WORD PTR [ebp+ebx*2+0x6e]
  418cf3:	out    dx,al
  418cf4:	or     cl,BYTE PTR [edi-0xf]
  418cf7:	xor    eax,esp
  418cf9:	jns    0x418d58
  418cfb:	out    0xd3,eax
  418cfd:	lods   al,BYTE PTR es:[esi]
  418cff:	leave  
  418d00:	in     al,dx
  418d01:	mov    edi,0x7c5e7c23
  418d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d07:	adc    edx,DWORD PTR [eax]
  418d09:	cmc    
  418d0a:	adc    eax,0x87cef411
  418d0f:	ins    DWORD PTR es:[edi],dx
  418d10:	inc    ebx
  418d11:	fdivr  DWORD PTR [edi-0x70b731e9]
  418d17:	push   edx
  418d18:	inc    ebx
  418d19:	adc    DWORD PTR [edi+0x72],0xffffff88
  418d1d:	mov    esp,0xcdd78a9
  418d22:	mov    esi,0x7e7f9a45
  418d27:	mov    bl,0x95
  418d29:	pushf  
  418d2a:	call   0xe7e5:0xe48dce6c
  418d31:	icebp  
  418d32:	pop    ss
  418d33:	fstp   QWORD PTR [eax+edx*4]
  418d36:	lahf   
  418d37:	inc    ecx
  418d38:	push   esi
  418d39:	jmp    0x418cf5
  418d3b:	sahf   
  418d3c:	or     al,0xb5
  418d3e:	mov    bl,BYTE PTR [eax+0x32df1c16]
  418d44:	popa   
  418d45:	pop    edi
  418d46:	push   ebx
  418d47:	jno    0x418d10
  418d49:	lea    edi,[edi-0x4b5eb2b]
  418d4f:	into   
  418d50:	aaa    
  418d51:	sub    DWORD PTR [edi],esp
  418d53:	inc    eax
  418d54:	out    dx,al
  418d55:	out    0xc,eax
  418d57:	jmp    0xa01f65a2
  418d5c:	(bad)  
  418d5d:	fs adc edx,ecx
  418d60:	lea    ebx,[esi-0x2a]
  418d63:	icebp  
  418d64:	nop
  418d65:	jmp    0x83066ef
  418d6a:	stos   DWORD PTR es:[edi],eax
  418d6b:	sbb    eax,0x847486bf
  418d70:	xchg   ebp,eax
  418d71:	clc    
  418d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d73:	adc    BYTE PTR [edx+ecx*4-0x50],dh
  418d77:	mov    BYTE PTR [esi-0x73],bl
  418d7a:	xlat   BYTE PTR ds:[ebx]
  418d7b:	aas    
  418d7c:	mov    edi,0x54dd57dc
  418d81:	mov    DWORD PTR [edi-0x19],edx
  418d84:	jbe    0x418db0
  418d86:	mov    ch,0x6d
  418d88:	out    0x75,al
  418d8a:	fldcw  WORD PTR [ebp+0x5b]
  418d8d:	ins    BYTE PTR es:[edi],dx
  418d8e:	jb     0x418d7c
  418d90:	push   ebp
  418d91:	in     eax,dx
  418d92:	cwde   
  418d93:	or     bh,bh
  418d95:	sar    DWORD PTR [ebp+ebp*8+0x6de53285],1
  418d9c:	sub    eax,DWORD PTR [esi+0x54]
  418d9f:	cli    
  418da0:	js     0x418d90
  418da2:	mov    dh,BYTE PTR [ebx-0x1d]
  418da5:	fs and eax,0xf8fe1bd2
  418dab:	push   edi
  418dac:	stc    
  418dad:	mov    DWORD PTR [edi],ecx
  418daf:	xor    ch,bl
  418db1:	mov    edx,0x297570a8
  418db6:	lods   eax,DWORD PTR ds:[esi]
  418db7:	scas   al,BYTE PTR es:[edi]
  418db8:	push   es
  418db9:	sbb    DWORD PTR [esi-0x78345a9a],ebx
  418dbf:	stc    
  418dc0:	call   FWORD PTR [edi+0x2f]
  418dc3:	sti    
  418dc4:	add    ebx,DWORD PTR [esi+0x67]
  418dc7:	inc    edx
  418dc8:	sbb    DWORD PTR [esp+edi*4+0x50],0x49
  418dcd:	les    ecx,FWORD PTR [ebx+0x1]
  418dd0:	jl     0x418da1
  418dd2:	sbb    DWORD PTR [ebp+ebp*2+0x48],edx
  418dd6:	call   0x13e1:0x1a170485
  418ddd:	aam    0x13
  418ddf:	cdq    
  418de0:	in     eax,dx
  418de1:	push   ds
  418de2:	adc    al,BYTE PTR [ecx-0x19]
  418de5:	mov    ebx,0xb5bbecca
  418dea:	sub    BYTE PTR [edx+0x4788ef15],cl
  418df0:	daa    
  418df1:	clc    
  418df2:	inc    DWORD PTR [edi+0x14f2df10]
  418df8:	rol    ecx,cl
  418dfa:	jnp    0x418e40
  418dfc:	xchg   esi,eax
  418dfd:	sbb    eax,0x1f0b80aa
  418e02:	push   0x2f4882c
  418e07:	test   di,cx
  418e0a:	les    ebx,FWORD PTR [edx+ebp*8+0x51]
  418e0e:	pop    edi
  418e0f:	or     BYTE PTR [ebx-0x65],cl
  418e12:	scas   eax,DWORD PTR es:[edi]
  418e13:	idiv   DWORD PTR [eax+0xc]
  418e16:	js     0x418e24
  418e18:	enter  0x14b5,0xff
  418e1c:	stc    
  418e1d:	pop    eax
  418e1e:	add    cl,al
  418e20:	aad    0xc6
  418e22:	fsubr  QWORD PTR [edx]
  418e24:	jo     0x418db0
  418e26:	(bad)  
  418e28:	add    eax,0x6d4e7d
  418e2d:	pop    esi
  418e2e:	sbb    BYTE PTR [edx+eax*1-0x11],al
  418e32:	push   ebx
  418e33:	icebp  
  418e34:	jge    0x418e57
  418e36:	addr16 cmc 
  418e38:	inc    edi
  418e39:	(bad)  
  418e3a:	and    eax,0x596cf23b
  418e3f:	mov    cl,BYTE PTR [esi]
  418e41:	pop    eax
  418e42:	mov    esi,esp
  418e44:	add    ebx,esi
  418e46:	sbb    ecx,DWORD PTR [ecx+0x41]
  418e49:	pop    edi
  418e4a:	daa    
  418e4b:	dec    edi
  418e4c:	sub    ecx,DWORD PTR [esi+0x14405aa2]
  418e52:	pusha  
  418e53:	xlat   BYTE PTR ds:[ebx]
  418e54:	inc    esp
  418e55:	push   ecx
  418e56:	cmp    esi,DWORD PTR [ebx+0x70]
  418e59:	pop    ebx
  418e5a:	sbb    esp,DWORD PTR [edi-0x44f0d589]
  418e60:	mov    WORD PTR [edi],?
  418e62:	(bad)  
  418e63:	cmp    DWORD PTR [ecx+0x1431e876],ebp
  418e69:	mov    ch,0xa9
  418e6b:	hlt    
  418e6c:	(bad)  
  418e6d:	jge    0x418e6e
  418e6f:	sub    edi,esp
  418e71:	in     eax,0xc9
  418e73:	bound  edx,QWORD PTR [esi+0x469eecc9]
  418e79:	(bad)  
  418e7a:	sbb    ebx,DWORD PTR [esi+eiz*2]
  418e7d:	push   ebx
  418e7e:	xor    dh,BYTE PTR [ecx-0x37eb3c1c]
  418e84:	iret   
  418e85:	cmp    ebp,DWORD PTR [ebx]
  418e87:	sbb    esp,esi
  418e89:	ss jle 0x418ea2
  418e8c:	add    eax,0x79176451
  418e91:	je     0x418e53
  418e93:	inc    esp
  418e94:	mov    ?,ecx
  418e96:	or     al,0xad
  418e98:	or     DWORD PTR [ecx+0x7],0x2c272d9f
  418e9f:	test   BYTE PTR [ebx*8+0x2278380f],dh
  418ea6:	inc    ebp
  418ea7:	cvtps2pi mm2,QWORD PTR gs:[ebx+0x11f1ac28]
  418eaf:	mov    ebp,0xed774cb
  418eb4:	push   edi
  418eb5:	ss pop ds
  418eb7:	mov    al,0x8e
  418eb9:	daa    
  418eba:	out    0xc1,al
  418ebc:	and    al,0xf3
  418ebe:	test   DWORD PTR [esi-0x1e],eax
  418ec1:	shr    DWORD PTR [ebx],0x40
  418ec4:	stos   BYTE PTR es:[edi],al
  418ec5:	inc    ebx
  418ec6:	pop    esi
  418ec7:	mov    ah,0x14
  418ec9:	mov    eax,ds:0x2d58a3c8
  418ece:	mov    eax,0x197a8fdf
  418ed3:	sub    dl,al
  418ed5:	(bad)  
  418ed6:	clc    
  418ed7:	add    al,0x15
  418ed9:	inc    ecx
  418eda:	lods   eax,DWORD PTR ds:[esi]
  418edb:	and    DWORD PTR [eax+0x71],edx
  418ede:	or     al,0x48
  418ee0:	sbb    eax,0x4957ead8
  418ee5:	popf   
  418ee6:	mov    dh,0xf4
  418ee8:	add    esi,DWORD PTR [eax]
  418eea:	cmp    dl,ch
  418eec:	jmp    0xf5bbb946
  418ef1:	mov    cs,eax
  418ef3:	jmp    0x6f71:0xd516d3ca
  418efa:	mov    cl,0x31
  418efc:	int3   
  418efd:	or     cl,BYTE PTR [edx]
  418eff:	nop
  418f00:	outs   dx,DWORD PTR ds:[esi]
  418f01:	add    DWORD PTR ds:0x5c841da7,ebp
  418f07:	rcr    BYTE PTR [edi],1
  418f09:	lock jg 0x418f66
  418f0c:	test   cl,cl
  418f0e:	push   esi
  418f0f:	pop    es
  418f10:	dec    edi
  418f11:	mov    edi,0xa0ce8f26
  418f16:	cmp    BYTE PTR [edx-0x34],dh
  418f19:	retf   0xd92c
  418f1c:	lea    edx,fs:[edi-0x7ad2f76b]
  418f23:	outs   dx,BYTE PTR ss:[esi]
  418f25:	xchg   DWORD PTR [eax+0x1a],ecx
  418f28:	mov    ds:0x926c3550,eax
  418f2d:	jg     0x418efa
  418f2f:	mov    ebx,0x64d59afb
  418f34:	jmp    0x418edc
  418f36:	lea    ebp,[ecx-0x72b33967]
  418f3c:	sbb    ah,BYTE PTR [ebx+0x2d4c6db4]
  418f42:	sahf   
  418f43:	xor    BYTE PTR [ebp+0x5c],ah
  418f46:	jns    0x418f25
  418f48:	into   
  418f49:	jg     0x418fa4
  418f4b:	mov    ebp,DWORD PTR [eax-0x5d]
  418f4e:	repnz out dx,eax
  418f50:	out    0x1a,eax
  418f52:	lods   eax,DWORD PTR ds:[esi]
  418f53:	sub    BYTE PTR [ebx],ch
  418f55:	mov    esp,0x3f6d05f3
  418f5a:	push   ecx
  418f5b:	mov    eax,ds:0xbfeacc2b
  418f60:	les    esi,FWORD PTR [edi+0x78]
  418f63:	repnz mov ds:0x1f3d66ed,eax
  418f69:	xlat   BYTE PTR ds:[ebx]
  418f6a:	repnz repnz popa 
  418f6d:	ins    DWORD PTR es:[edi],dx
  418f6e:	mov    WORD PTR [edi],?
  418f70:	and    al,0xd4
  418f72:	pop    edx
  418f73:	(bad)  
  418f74:	cmc    
  418f75:	dec    ecx
  418f76:	int3   
  418f77:	in     al,dx
  418f78:	cmc    
  418f79:	sub    DWORD PTR [eax+ebp*4-0x47],0xab47632e
  418f81:	mov    al,ds:0xa807e2ce
  418f86:	jb     0x418f97
  418f88:	jl     0x418fa6
  418f8a:	cmp    eax,0x8e5baec2
  418f8f:	daa    
  418f90:	fwait
  418f91:	and    BYTE PTR [ecx-0x20],cl
  418f94:	cmc    
  418f95:	popf   
  418f96:	shl    BYTE PTR [ebx-0x55],cl
  418f99:	gs scas eax,DWORD PTR es:[edi]
  418f9b:	fstp   QWORD PTR [edx]
  418f9d:	in     al,dx
  418f9e:	cld    
  418f9f:	adc    DWORD PTR [ecx],ebp
  418fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa2:	push   ebx
  418fa3:	nop
  418fa4:	cdq    
  418fa5:	cdq    
  418fa6:	jmp    FWORD PTR [ebx-0x6d]
  418fa9:	adc    edx,DWORD PTR [ebp+0x3b]
  418fac:	sbb    bl,BYTE PTR [ecx+0x6cf2dc24]
  418fb2:	pop    esi
  418fb3:	mov    ds:0xb4bc16e2,al
  418fb8:	pop    edi
  418fb9:	xor    bh,BYTE PTR [ebp+0x3e0354eb]
  418fbf:	out    dx,al
  418fc0:	cmp    DWORD PTR [eax-0xa],esp
  418fc3:	push   edx
  418fc4:	adc    al,0xa9
  418fc6:	sub    bl,0x6c
  418fc9:	test   eax,0xedf8fee1
  418fce:	xor    eax,0x76269117
  418fd3:	inc    edi
  418fd4:	fldcw  WORD PTR [ebx+esi*4+0x7acc2397]
  418fdb:	clc    
  418fdc:	xchg   ebp,eax
  418fdd:	xor    BYTE PTR [ebp-0x25],ch
  418fe0:	mov    bl,0x59
  418fe2:	cmp    BYTE PTR [edx],0x1d
  418fe5:	pop    edi
  418fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fe7:	sub    DWORD PTR [edi+0x1d],edx
  418fea:	fcmovnb st,st(6)
  418fec:	and    edi,DWORD PTR [ebp+0x649e1ca7]
  418ff2:	pop    ds
  418ff3:	cmp    eax,0xeaf60d95
  418ff8:	and    bl,BYTE PTR [esi-0x1256e1c]
  418ffe:	in     eax,0x84
  419000:	jns    0x418fcf
  419002:	loope  0x418ff6
  419004:	xlat   BYTE PTR ds:[ebx]
  419005:	aaa    
  419006:	push   0x815fa63a
  41900b:	(bad)  
  41900c:	shr    BYTE PTR ds:0x9eb26e2e,cl
  419012:	in     al,dx
  419013:	inc    ebp
  419014:	pop    ecx
  419015:	shl    eax,1
  419017:	arpl   si,bx
  419019:	js     0x41903d
  41901b:	lea    edi,[edi]
  41901d:	(bad)  
  41901e:	push   0xd6a8ae39
  419023:	fs in  eax,0x2e
  419026:	jns    0x419016
  419028:	mov    bh,ah
  41902a:	jmp    0x41905b
  41902c:	ds (bad) 
  41902e:	jp     0x419052
  419030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419031:	jmp    0x419023
  419033:	cmp    al,0xf0
  419035:	lock sbb esi,edx
  419038:	and    ecx,esi
  41903a:	push   edx
  41903b:	loopne 0x41900e
  41903d:	mov    cl,0xdf
  41903f:	mov    ebx,0x77be9fd6
  419044:	dec    eax
  419045:	adc    dl,dh
  419047:	ret    
  419048:	lea    edx,[eax+0x5e]
  41904b:	fmulp  st(7),st
  41904d:	push   0x41
  41904f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419050:	xor    dl,dh
  419052:	push   0xf3de553c
  419057:	nop
  419058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419059:	in     eax,dx
  41905a:	neg    BYTE PTR [edi]
  41905c:	xor    DWORD PTR [ebx-0x77],ebx
  41905f:	pop    esp
  419060:	xor    cl,BYTE PTR [ebx+ebx*4-0x37]
  419064:	xchg   esi,eax
  419065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419066:	and    ah,ch
  419068:	push   ecx
  419069:	stos   DWORD PTR es:[edi],eax
  41906a:	fldcw  WORD PTR [esi+0x774273ed]
  419070:	dec    esi
  419071:	fdiv   DWORD PTR [edi-0x69]
  419074:	lods   al,BYTE PTR ds:[esi]
  419075:	sub    al,0x1a
  419077:	dec    esp
  419078:	(bad)  
  419079:	jmp    0x76369b0d
  41907e:	inc    esi
  41907f:	mul    ch
  419081:	repnz test DWORD PTR [ebp-0x6d],ecx
  419085:	xchg   DWORD PTR [edi-0x2],ebp
  419088:	adc    edi,ecx
  41908a:	xor    BYTE PTR [edx+0x725be955],ch
  419090:	inc    edi
  419091:	in     al,0x63
  419093:	ins    BYTE PTR es:[edi],dx
  419094:	outs   dx,DWORD PTR ds:[esi]
  419095:	xchg   BYTE PTR [ebx],ch
  419097:	xor    cl,BYTE PTR fs:[edx]
  41909a:	rcr    BYTE PTR [ebp+0x75],1
  41909d:	mov    esp,0x3aae8e38
  4190a2:	fs loop 0x41911b
  4190a5:	mov    cl,0xe4
  4190a7:	lock cmc 
  4190a9:	xor    DWORD PTR [edx+0x1],0xd4252100
  4190b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b1:	sbb    ecx,edx
  4190b3:	in     al,dx
  4190b4:	sbb    bh,BYTE PTR [ebx+0x53c79596]
  4190ba:	sub    BYTE PTR [eax-0x1d8e8691],bh
  4190c0:	test   eax,0xffea3fb7
  4190c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c6:	or     eax,0x130614a8
  4190cb:	ret    0xd570
  4190ce:	sub    DWORD PTR [ebp-0x5628f9a7],ecx
  4190d4:	es pop edx
  4190d6:	add    DWORD PTR ds:0x37058e52,ebp
  4190dc:	aam    0x27
  4190de:	push   edi
  4190df:	imul   edi,edx,0x6e
  4190e2:	repz ret 0xcb9b
  4190e6:	and    eax,0x4ef2ef70
  4190eb:	aam    0xd9
  4190ed:	stos   BYTE PTR es:[edi],al
  4190ee:	hlt    
  4190ef:	into   
  4190f0:	mov    ch,0xda
  4190f2:	(bad)  
  4190f3:	mov    dh,0xc8
  4190f5:	or     BYTE PTR [edi+0x33faf0f5],ah
  4190fb:	repz jbe 0x4190a4
  4190fe:	imul   esp,ecx,0x5c9634ea
  419104:	cmp    cl,ch
  419106:	inc    esi
  419107:	icebp  
  419108:	xchg   ebx,eax
  419109:	aad    0x33
  41910b:	and    edx,DWORD PTR [edi]
  41910d:	xchg   edx,eax
  41910e:	add    cl,al
  419110:	stos   BYTE PTR es:[edi],al
  419111:	cmc    
  419112:	push   0xfffffffd
  419114:	stos   DWORD PTR es:[edi],eax
  419115:	in     al,0x8
  419117:	push   eax
  419118:	mov    esi,edx
  41911a:	mov    al,0x6c
  41911c:	stos   DWORD PTR es:[edi],eax
  41911d:	jnp    0x419137
  41911f:	inc    edx
  419120:	aad    0xd0
  419122:	pop    eax
  419123:	cld    
  419124:	adc    DWORD PTR [edi+0x25ed42c5],edi
  41912a:	dec    ecx
  41912b:	cmp    edx,ecx
  41912d:	sbb    al,0x78
  41912f:	test   al,0x43
  419131:	xor    eax,0x7ed2e782
  419136:	out    dx,al
  419137:	iret   
  419138:	push   edi
  419139:	rcr    BYTE PTR [esi+edi*8+0x3cac1986],0x3e
  419141:	jmp    0x4191b1
  419143:	sti    
  419144:	xchg   ebp,eax
  419145:	in     eax,0x46
  419147:	cmp    DWORD PTR [ebp-0x65ecc65b],0xffffffb1
  41914e:	int    0x85
  419150:	ja     0x4190dd
  419152:	ds pop esp
  419154:	lods   al,BYTE PTR ds:[esi]
  419155:	ficom  WORD PTR [esi+0x3b]
  419158:	stc    
  419159:	adc    eax,0xee0d3778
  41915e:	push   esi
  41915f:	jle    0x4190f9
  419161:	sbb    ebp,DWORD PTR [ecx]
  419163:	in     eax,0xc4
  419165:	enter  0x3796,0x40
  419169:	push   es
  41916a:	stos   DWORD PTR es:[edi],eax
  41916b:	loop   0x4191d3
  41916d:	add    eax,DWORD PTR [eax]
  41916f:	sbb    esi,DWORD PTR [edx+0x3]
  419172:	push   ebx
  419173:	lahf   
  419174:	aaa    
  419175:	(bad)  
  419176:	into   
  419177:	mov    bl,0x1c
  419179:	add    ah,BYTE PTR [ebx+0x229cecc3]
  41917f:	loopne 0x419113
  419181:	cs push ecx
  419183:	cmp    eax,DWORD PTR [edi]
  419185:	pop    ecx
  419186:	loope  0x41914a
  419188:	loopne 0x4191c4
  41918a:	nop
  41918b:	pusha  
  41918c:	dec    esp
  41918d:	xchg   ecx,eax
  41918e:	imul   esi,eax,0xffffff8c
  419191:	mov    ebp,0x626ceeff
  419196:	mov    DWORD PTR ds:0xadc9ccdf,edi
  41919c:	add    al,0xd6
  41919e:	stc    
  41919f:	adc    al,al
  4191a1:	cmp    eax,0xd8053fe0
  4191a6:	pop    ebp
  4191a7:	lds    eax,FWORD PTR [edx]
  4191a9:	xor    ecx,DWORD PTR [edx]
  4191ab:	cld    
  4191ac:	add    BYTE PTR [ebx],cl
  4191ae:	enter  0xc05b,0x2e
  4191b2:	cmp    BYTE PTR es:0xdcf6bbe7,0xf1
  4191ba:	xchg   BYTE PTR [esi],ah
  4191bc:	shl    BYTE PTR [ebp-0x4c7c1fa3],0x4d
  4191c3:	pop    edi
  4191c4:	add    eax,0x2554b8e1
  4191c9:	inc    ebp
  4191ca:	out    0x31,al
  4191cc:	repnz pusha 
  4191ce:	push   edi
  4191cf:	ret    
  4191d0:	xor    al,0x80
  4191d2:	dec    ebx
  4191d3:	test   eax,0x9d4779d8
  4191d8:	popa   
  4191d9:	cmp    eax,DWORD PTR [ecx]
  4191db:	jl     0x419199
  4191dd:	mov    ebp,0xb1f05206
  4191e2:	mov    al,0x96
  4191e4:	dec    ebx
  4191e5:	pop    ecx
  4191e6:	adc    eax,DWORD PTR cs:[edi]
  4191e9:	addr16 push 0xffffff9d
  4191ec:	leave  
  4191ed:	xor    edi,DWORD PTR [ebx-0x4233b329]
  4191f3:	fistp  DWORD PTR [ecx+0x36]
  4191f6:	cmp    ecx,esi
  4191f8:	sbb    al,0x1c
  4191fa:	mov    esp,0xc426b940
  4191ff:	add    DWORD PTR [edx+0x23],eax
  419202:	xlat   BYTE PTR ds:[ebx]
  419203:	int    0xc
  419205:	inc    edx
  419206:	or     BYTE PTR [eax-0x4b],cl
  419209:	sub    edi,0x293e5097
  41920f:	pop    es
  419210:	sbb    eax,0x939dda2b
  419215:	arpl   WORD PTR [edx+edx*8+0x66dad147],cx
  41921c:	lea    edi,[ecx]
  41921e:	gs out 0x14,eax
  419221:	sub    esp,ebp
  419223:	popa   
  419224:	adc    edx,DWORD PTR [ecx-0xcd27eb9]
  41922a:	scas   eax,DWORD PTR es:[edi]
  41922b:	jg     0x4191e4
  41922d:	cmp    ebp,eax
  41922f:	enter  0x2d7,0xa0
  419233:	or     al,0x3
  419235:	xor    eax,0x81638bac
  41923a:	inc    ecx
  41923b:	mov    DWORD PTR [esi],ebp
  41923d:	sbb    dh,BYTE PTR [ecx-0x6a]
  419240:	fisubr WORD PTR ds:[ebx+0x10258b46]
  419247:	or     eax,0x9b1d5284
  41924c:	add    eax,0xf92152a7
  419251:	or     al,0xb
  419253:	add    al,0x1
  419255:	or     dh,BYTE PTR [eax+ecx*4-0x53]
  419259:	push   edi
  41925a:	xchg   esp,edx
  41925c:	out    0x2f,al
  41925e:	bound  eax,QWORD PTR [edi]
  419260:	call   0x26d5:0xc53620a4
  419267:	xchg   esi,eax
  419268:	iret   
  419269:	add    al,0x69
  41926b:	push   eax
  41926c:	fcomip st,st(2)
  41926e:	or     ch,0xaf
  419271:	test   DWORD PTR [edx],edi
  419273:	cmp    eax,0xcfc5298
  419278:	js     0x41926e
  41927a:	fidiv  DWORD PTR [edx+0x13feadd2]
  419280:	cdq    
  419281:	or     al,bl
  419283:	fs ss push 0x76771eba
  41928a:	jnp    0x419250
  41928c:	dec    esp
  41928d:	jo     0x419224
  41928f:	(bad)  [eax+0x32]
  419292:	dec    ebp
  419293:	aas    
  419294:	cwde   
  419295:	les    edi,FWORD PTR [edi]
  419297:	rol    DWORD PTR [eax+0x47297f5e],cl
  41929d:	pop    ebp
  41929e:	dec    edx
  41929f:	std    
  4192a0:	leave  
  4192a1:	fwait
  4192a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192a3:	(bad)  
  4192a4:	xchg   edx,eax
  4192a5:	mov    cl,0x80
  4192a7:	repz ja 0x4192f6
  4192aa:	jb     0x419311
  4192ac:	inc    ebx
  4192ad:	mov    WORD PTR [edi+0xd],ss
  4192b0:	add    esi,esp
  4192b2:	push   ebp
  4192b3:	iret   
  4192b4:	sub    ch,BYTE PTR [edi]
  4192b6:	push   esp
  4192b7:	xor    DWORD PTR [edi],esp
  4192b9:	inc    ebx
  4192ba:	mov    gs,WORD PTR [eax]
  4192bc:	jecxz  0x419287
  4192be:	xor    bh,bh
  4192c0:	mov    al,ds:0x5dbc7ffd
  4192c5:	push   ss
  4192c6:	mov    WORD PTR [ecx],fs
  4192c8:	mov    WORD PTR [edi-0x44],es
  4192cb:	inc    edi
  4192cc:	and    BYTE PTR [esi+eax*1+0x3b],bl
  4192d0:	mov    esi,0x8763cf82
  4192d5:	(bad)
  4192d9:	push   ecx
  4192da:	jns    0x41930f
  4192dc:	mov    esi,0xe30eac29
  4192e1:	push   ds
  4192e2:	pop    ebx
  4192e3:	stc    
  4192e4:	xor    al,0x26
  4192e6:	add    DWORD PTR [eax+edi*2],0x87ac85d
  4192ed:	mov    esp,0x85c34e01
  4192f2:	mov    cl,0xcc
  4192f4:	shl    BYTE PTR [eax-0x42],cl
  4192f7:	out    0x17,al
  4192f9:	jmp    0x4192eb
  4192fb:	xor    BYTE PTR [edi],dh
  4192fd:	aam    0x77
  4192ff:	pop    ebx
  419300:	sub    ch,cl
  419302:	or     edx,DWORD PTR [ecx+edx*2]
  419305:	dec    ebx
  419306:	outs   dx,DWORD PTR ds:[esi]
  419307:	aad    0x9e
  419309:	adc    BYTE PTR [edi-0x789caa6b],dh
  41930f:	aaa    
  419310:	pop    ss
  419311:	pop    ss
  419312:	sbb    eax,0xf3409bf5
  419317:	sub    al,0x83
  419319:	pop    ebx
  41931a:	cmp    eax,0x1d0db4ab
  41931f:	stos   DWORD PTR es:[edi],eax
  419320:	add    BYTE PTR [ebp+0x3dfab835],cl
  419326:	xor    edx,DWORD PTR [ebx-0x6e]
  419329:	fsubr  DWORD PTR [ecx-0x65]
  41932c:	out    dx,eax
  41932d:	pop    ecx
  41932e:	push   es
  41932f:	test   al,0x6f
  419331:	add    al,BYTE PTR [eax+0x1f]
  419334:	or     al,0xb2
  419336:	pushf  
  419337:	dec    esp
  419338:	mov    ah,0x34
  41933a:	sti    
  41933b:	and    BYTE PTR [ebx],bh
  41933d:	jmp    0x974aec28
  419342:	clc    
  419343:	inc    edx
  419344:	sub    eax,0xfe00ab42
  419349:	retf   
  41934a:	in     eax,0x1f
  41934c:	(bad)  
  41934d:	stc    
  41934e:	jmp    DWORD PTR [edx]
  419350:	fld    DWORD PTR [ebx-0x2699980b]
  419356:	mov    WORD PTR [esi+0x3d],cs
  419359:	inc    esi
  41935a:	psubsw mm5,QWORD PTR [edi+eax*2-0x65]
  41935f:	push   esp
  419360:	xacquire xchg BYTE PTR [edi],dl
  419363:	ins    BYTE PTR es:[edi],dx
  419364:	loop   0x4192f3
  419366:	inc    eax
  419367:	int    0xba
  419369:	inc    ebx
  41936a:	sahf   
  41936b:	inc    ecx
  41936c:	pop    es
  41936d:	push   esi
  41936e:	add    eax,0x14947834
  419373:	pop    edi
  419374:	mov    al,ds:0x9748e5e6
  419379:	scas   eax,DWORD PTR es:[edi]
  41937a:	add    ah,ch
  41937c:	leave  
  41937d:	test   BYTE PTR [eax],bl
  41937f:	int3   
  419380:	jecxz  0x419359
  419382:	cmp    eax,0x5591cec0
  419387:	ftst   
  419389:	jae    0x4193b5
  41938b:	jae    0x4193cc
  41938d:	neg    bl
  41938f:	fisub  WORD PTR [edi-0x41204d98]
  419395:	bnd jns 0x4193c2
  419398:	lock jb 0x419327
  41939b:	lds    ecx,FWORD PTR [ebx+edx*2-0x617f3934]
  4193a2:	pushf  
  4193a3:	in     al,dx
  4193a4:	mov    esp,0x8ced0a53
  4193a9:	dec    edx
  4193aa:	push   0x1e
  4193ac:	mov    ds:0xbe370882,al
  4193b1:	mov    ebx,eax
  4193b3:	retf   0x4878
  4193b6:	sahf   
  4193b7:	add    BYTE PTR [esi-0x64],ch
  4193ba:	in     al,0x79
  4193bc:	sbb    bh,bl
  4193be:	fnsave [ecx-0x3983a77]
  4193c4:	icebp  
  4193c5:	xchg   esi,eax
  4193c6:	xchg   edi,eax
  4193c7:	addr16 aad 0xd1
  4193ca:	xor    BYTE PTR [edx],ah
  4193cc:	addr16 (bad) 
  4193ce:	outs   dx,DWORD PTR ds:[esi]
  4193cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193d0:	jecxz  0x41939d
  4193d2:	inc    ebx
  4193d3:	push   es
  4193d4:	mov    edi,ds
  4193d6:	test   eax,0x33c07cca
  4193db:	jmp    0x89fe:0xbb4c8a03
  4193e2:	popa   
  4193e3:	faddp  st(5),st
  4193e5:	xchg   ebx,eax
  4193e6:	mov    ds:0x8326c097,eax
  4193eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193ec:	repnz xor ebp,DWORD PTR ds:0x769812bd
  4193f3:	aas    
  4193f4:	and    DWORD PTR [ecx+0x3d],0x16
  4193f8:	and    eax,0xff264fb1
  4193fd:	scas   al,BYTE PTR es:[edi]
  4193fe:	xchg   DWORD PTR [edx],edx
  419400:	popf   
  419401:	outs   dx,BYTE PTR ds:[esi]
  419402:	out    0xab,al
  419404:	pop    edx
  419405:	out    0x3b,al
  419407:	(bad)  
  419409:	push   0xffffffe4
  41940b:	imul   esi,DWORD PTR [eax+0x57341f96],0xb38015a6
  419415:	push   ebx
  419416:	in     eax,0x78
  419418:	lahf   
  419419:	mov    BYTE PTR [edi],dl
  41941b:	stc    
  41941c:	add    ah,BYTE PTR [ecx+0x72fce81]
  419422:	jb     0x41947e
  419424:	push   edx
  419425:	push   esi
  419426:	inc    ebp
  419427:	cmc    
  419428:	pop    ecx
  419429:	(bad)  
  41942a:	in     al,dx
  41942b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942c:	mov    DWORD PTR [ebx-0x3d],esp
  41942f:	mov    ebp,0x75ee86af
  419434:	inc    eax
  419435:	jno    0x4193ba
  419437:	aaa    
  419438:	cmp    BYTE PTR ds:0xa6b77529,dh
  41943e:	sub    ebx,DWORD PTR [ecx-0x41]
  419441:	mul    DWORD PTR ds:0x2aed4316
  419447:	jle    0x419427
  419449:	pop    ebp
  41944a:	mov    eax,0x8f1adea7
  41944f:	test   eax,0xbee3aaea
  419454:	xor    DWORD PTR [esi],esi
  419456:	and    ecx,eax
  419458:	out    0x41,al
  41945a:	imul   ebx
  41945c:	bound  esp,QWORD PTR [edx-0x7255312f]
  419462:	adc    dh,BYTE PTR [esi+0x7b]
  419465:	dec    esp
  419466:	in     al,dx
  419467:	std    
  419468:	fisttp QWORD PTR [eax+0xe]
  41946b:	shl    DWORD PTR [ebp+0x6c],cl
  41946e:	xor    DWORD PTR [edx+0x2dfec26c],eax
  419474:	inc    ebx
  419475:	cmp    BYTE PTR [edx-0x50cd19da],0xa1
  41947c:	dec    edi
  41947d:	imul   BYTE PTR [ecx+ebx*4+0x2d]
  419481:	cmp    eax,0x4e847f82
  419486:	test   DWORD PTR [ebx],edi
  419488:	out    0xab,eax
  41948a:	jecxz  0x4194a8
  41948c:	xchg   edx,eax
  41948d:	pop    esi
  41948e:	pop    ecx
  41948f:	bound  ebp,QWORD PTR ds:0x8f82d2f0
  419495:	sub    BYTE PTR [edx],0x6
  419498:	ret    
  419499:	sahf   
  41949a:	int    0x72
  41949c:	popa   
  41949d:	stos   DWORD PTR es:[edi],eax
  41949e:	test   BYTE PTR [ecx+0x45],dh
  4194a1:	push   0x9
  4194a3:	adc    dh,dh
  4194a5:	out    dx,eax
  4194a6:	add    BYTE PTR [eax],al
  4194a8:	push   es
  4194a9:	xchg   DWORD PTR [ebx+0x67bb50ff],esi
  4194af:	lock push ebx
  4194b1:	fwait
  4194b2:	and    ecx,DWORD PTR [ecx+ecx*8-0x35f65a9a]
  4194b9:	(bad)  
  4194ba:	pandn  mm2,QWORD PTR ss:[ecx+0x6c]
  4194bf:	jg     0x4194e1
  4194c1:	jmp    0x50b06e2f
  4194c6:	nop
  4194c7:	jo     0x419463
  4194c9:	push   ds
  4194ca:	aaa    
  4194cb:	push   cs
  4194cc:	jo     0x419468
  4194ce:	push   es
  4194cf:	mov    edi,0x2f5cf5e7
  4194d4:	int    0xf1
  4194d6:	stos   DWORD PTR es:[edi],eax
  4194d7:	xchg   ecx,eax
  4194d8:	cmp    edx,ebp
  4194da:	call   DWORD PTR [edx+edi*8+0xa62dd69]
  4194e1:	out    dx,al
  4194e2:	dec    ebx
  4194e3:	enter  0x101b,0xf7
  4194e7:	xor    bl,ah
  4194e9:	push   cs
  4194ea:	js     0x4194c3
  4194ec:	dec    eax
  4194ed:	lock xor eax,0xa89c7a74
  4194f3:	mov    ebp,DWORD PTR [eax+eax*8+0x2a]
  4194f7:	aad    0x68
  4194f9:	dec    ebp
  4194fa:	fiadd  WORD PTR [edi-0x8]
  4194fd:	enter  0xbcd2,0x58
  419501:	push   edi
  419502:	jl     0x419536
  419504:	jmp    0x419516
  419506:	add    edx,0xa9e93c88
  41950c:	ins    DWORD PTR es:[edi],dx
  41950d:	imul   esi,DWORD PTR [esi-0x258c6db2],0xd332ba76
  419517:	es repnz jecxz 0x419585
  41951b:	rol    DWORD PTR [edi+ebx*8+0x54d60517],1
  419522:	dec    ebp
  419523:	mov    ebx,0xe1f63d42
  419528:	in     al,0xb0
  41952a:	jnp    0x4194ea
  41952c:	outs   dx,BYTE PTR ds:[esi]
  41952d:	inc    esp
  41952e:	and    ah,al
  419530:	stos   BYTE PTR es:[edi],al
  419531:	add    ch,0x55
  419534:	or     al,0x8
  419536:	and    DWORD PTR [eax-0x6761c52a],esp
  41953c:	xchg   edi,eax
  41953d:	add    BYTE PTR [esi+0x56],dl
  419540:	sub    edi,DWORD PTR ds:0x63d13816
  419546:	cli    
  419547:	mov    esi,0x92d279cd
  41954c:	add    DWORD PTR [ecx+eiz*8+0x4],0x5f687f89
  419554:	pop    es
  419555:	icebp  
  419556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419557:	jp     0x419530
  419559:	hlt    
  41955a:	pop    edi
  41955b:	jl     0x419545
  41955d:	inc    ebp
  41955e:	out    0x51,eax
  419560:	jg     0x419580
  419562:	mov    esp,eax
  419564:	add    bl,BYTE PTR [ebx]
  419566:	lods   al,BYTE PTR ds:[esi]
  419567:	pop    esi
  419568:	imul   edi,DWORD PTR ds:0x1ad62240,0xffffffdb
  41956f:	jb     0x4195d8
  419571:	xor    BYTE PTR [eax-0x128036b2],dh
  419577:	mov    WORD PTR [ebx],gs
  419579:	loop   0x4195b6
  41957b:	lock xor BYTE PTR [edi-0x563434c],bl
  419582:	inc    ebp
  419583:	xor    dl,BYTE PTR [esi+0x3d]
  419586:	loope  0x419553
  419588:	lar    edx,WORD PTR [ecx-0x6e]
  41958c:	add    al,0xe5
  41958e:	ror    DWORD PTR [ecx],0x91
  419591:	and    bh,BYTE PTR [eax]
  419593:	xchg   esp,eax
  419594:	scas   al,BYTE PTR es:[edi]
  419595:	mov    ds:0x3672e74d,al
  41959a:	fisub  WORD PTR ds:0xc1cbeb35
  4195a0:	(bad)  
  4195a1:	push   edx
  4195a2:	das    
  4195a3:	inc    edx
  4195a4:	call   0x8debdbe6
  4195a9:	lds    ebx,FWORD PTR [eax]
  4195ab:	xchg   ebx,eax
  4195ac:	retf   
  4195ad:	xor    DWORD PTR [edi+0x142f2ea0],esp
  4195b3:	xchg   DWORD PTR [eax+0x2a],esp
  4195b6:	cwde   
  4195b7:	icebp  
  4195b8:	xchg   edi,eax
  4195b9:	mov    DWORD PTR [ebx],esp
  4195bb:	push   ebp
  4195bc:	xchg   esi,eax
  4195bd:	pop    ss
  4195be:	ins    BYTE PTR es:[edi],dx
  4195bf:	push   bx
  4195c1:	pop    ebp
  4195c2:	outs   dx,BYTE PTR ds:[esi]
  4195c3:	jmp    0x419574
  4195c5:	in     al,0xdd
  4195c7:	xor    DWORD PTR [ebx-0x7],ebx
  4195ca:	repz push ebp
  4195cc:	into   
  4195cd:	and    cl,BYTE PTR [ecx]
  4195cf:	into   
  4195d0:	mov    cs,WORD PTR ds:0x76e17d4
  4195d6:	cmp    bh,dl
  4195d8:	retf   
  4195d9:	pusha  
  4195da:	es dec esp
  4195dc:	rcr    DWORD PTR [ebx],cl
  4195de:	adc    dh,0xc4
  4195e1:	hlt    
  4195e2:	xchg   DWORD PTR [esi+0xb],eax
  4195e5:	fadd   DWORD PTR [edx-0x42f101a]
  4195eb:	cmp    eax,0x2b69cda4
  4195f0:	leave  
  4195f1:	fnstcw WORD PTR [ebx+ecx*8-0x73]
  4195f5:	cdq    
  4195f6:	stos   BYTE PTR es:[edi],al
  4195f7:	mov    al,0xd7
  4195f9:	inc    ebx
  4195fa:	sbb    DWORD PTR [edi+edx*2+0x54c19e53],edx
  419601:	or     ebp,edx
  419603:	xchg   esi,eax
  419604:	mov    ds:0x4e0d1e25,al
  419609:	inc    eax
  41960a:	inc    esi
  41960b:	adc    al,0x47
  41960d:	push   0xffffffff
  41960f:	add    dh,BYTE PTR ss:[esi+0x6b]
  419613:	jg     0x419673
  419615:	in     al,0xd1
  419617:	shl    BYTE PTR [ebx+edi*8-0xc40fba1],cl
  41961e:	pop    ebp
  41961f:	mov    ebp,0x43ad0236
  419624:	sbb    esi,DWORD PTR [eax-0x51a0e9bb]
  41962a:	xchg   ebx,eax
  41962b:	or     eax,0xf8bdadb1
  419630:	add    DWORD PTR [ecx-0xc],0xffffffd6
  419634:	mov    ds:0xa77b0f85,eax
  419639:	jl     0x419685
  41963b:	mov    bx,0xbceb
  41963f:	fdivr  QWORD PTR [esi-0x4c7c7ecd]
  419645:	mov    ebp,0xb3246cd7
  41964a:	les    edx,FWORD PTR [ebx+ebx*4-0x5]
  41964e:	test   eax,0x1d0cd872
  419653:	imul   esp,DWORD PTR [edx+0x146ea384],0x97add480
  41965d:	call   0x9360:0x689caf72
  419664:	jmp    0xfff7f91a
  419669:	add    esp,ecx
  41966b:	and    DWORD PTR [edx-0x45dc46b1],eax
  419671:	sbb    ch,bh
  419673:	mov    ecx,0x56aa929c
  419678:	jmp    0x488d:0x4b8841e
  41967f:	jo     0x4196e6
  419681:	mov    esi,0xc77ba531
  419686:	stos   BYTE PTR es:[edi],al
  419687:	xchg   ebp,eax
  419688:	push   ss
  419689:	popa   
  41968a:	out    dx,al
  41968b:	pop    esi
  41968c:	out    dx,al
  41968d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41968e:	adc    al,0x89
  419690:	popf   
  419691:	cmp    bl,BYTE PTR [esi-0x2f]
  419694:	sbb    ecx,ecx
  419696:	call   0x32f32cb3
  41969b:	jns    0x4196ad
  41969d:	xor    esi,eax
  41969f:	xchg   esi,eax
  4196a0:	retf   0xea36
  4196a3:	jo     0x4196b8
  4196a5:	lock push ds
  4196a7:	std    
  4196a8:	push   ebp
  4196a9:	imul   edi,esp,0xbd7a864b
  4196af:	bound  edi,QWORD PTR [edi]
  4196b1:	bound  eax,QWORD PTR [esi]
  4196b3:	xchg   DWORD PTR [edx],esp
  4196b5:	fisttp DWORD PTR [edi]
  4196b7:	xacquire xchg BYTE PTR [eax],bl
  4196ba:	and    BYTE PTR [ebp+0x474fef8e],al
  4196c0:	mov    eax,ds:0x459bc61e
  4196c5:	fsubr  QWORD PTR [eax+0x1]
  4196c8:	adc    eax,DWORD PTR [ebp-0x6a]
  4196cb:	cmp    al,0xdf
  4196cd:	hlt    
  4196ce:	dec    ebp
  4196cf:	fs adc eax,0xe43a79cc
  4196d5:	outs   dx,DWORD PTR ds:[esi]
  4196d6:	aad    0x2e
  4196d8:	rcr    DWORD PTR ds:0x487a76d8,1
  4196de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196df:	sbb    al,0x64
  4196e1:	hlt    
  4196e2:	mov    bl,BYTE PTR [ebp+0x6d759f89]
  4196e8:	arpl   si,ax
  4196ea:	cwde   
  4196eb:	clc    
  4196ec:	and    eax,0x53d22b72
  4196f1:	sar    ecx,cl
  4196f3:	sar    DWORD PTR [ebx],1
  4196f5:	jb     0x419754
  4196f7:	jp     0x4196ce
  4196f9:	retf   0xec6b
  4196fc:	or     al,ch
  4196fe:	jp     0x4196f1
  419700:	or     BYTE PTR [eax],0xdc
  419703:	mov    edx,0x96f64f11
  419708:	cmc    
  419709:	push   cs
  41970a:	aam    0xb9
  41970c:	mov    al,ds:0x1f5d3e08
  419711:	cdq    
  419712:	es out dx,al
  419714:	xchg   ebx,eax
  419715:	jns    0x419735
  419717:	aaa    
  419718:	jl     0x419775
  41971a:	cmp    bl,BYTE PTR [esi-0xf]
  41971d:	dec    eax
  41971e:	shl    DWORD PTR [ebx],cl
  419720:	inc    ebx
  419721:	mov    ds:0xe1b36fd7,eax
  419726:	jbe    0x4196eb
  419728:	sub    bl,BYTE PTR [esp+eax*1-0x6a]
  41972c:	addr16 mov al,0x4d
  41972f:	fxch   st(7)
  419731:	mov    edi,0xcaf8017f
  419736:	in     al,0x42
  419738:	(bad)
  41973b:	xchg   esp,eax
  41973c:	leave  
  41973d:	sub    eax,0x441313f0
  419742:	sbb    DWORD PTR [edx-0x41],edi
  419745:	push   esi
  419746:	sbb    BYTE PTR [esi+0x51],ah
  419749:	arpl   WORD PTR [ecx+0x3],bp
  41974c:	mov    al,ds:0xd6c9c78f
  419751:	xor    esp,DWORD PTR [esi-0x53]
  419754:	jnp    0x41975e
  419756:	outs   dx,BYTE PTR ds:[esi]
  419757:	enter  0xf5bf,0x8e
  41975b:	mov    cl,0x82
  41975d:	bound  ecx,QWORD PTR [edx+0x6c]
  419760:	fsub   st,st(1)
  419762:	hlt    
  419763:	add    cl,BYTE PTR [si-0x2555]
  419768:	mov    bl,0x7d
  41976a:	les    ebx,FWORD PTR [esp+edx*8]
  41976d:	cmp    ch,ah
  41976f:	xchg   esi,eax
  419770:	cmp    al,0x95
  419772:	mov    ebx,0x71650850
  419777:	pop    ds
  419778:	mov    es,WORD PTR [edi+0x4]
  41977b:	ret    
  41977c:	xor    DWORD PTR [ebx],esp
  41977e:	adc    al,0xee
  419780:	and    edx,eax
  419782:	clc    
  419783:	ins    DWORD PTR es:[edi],dx
  419784:	out    dx,eax
  419785:	mov    edx,0x5c9f638e
  41978a:	adc    al,0x5b
  41978c:	or     DWORD PTR [edx],0x6f
  41978f:	(bad)  
  419790:	push   ebp
  419791:	xor    BYTE PTR [edi-0x5f],dh
  419794:	pop    edx
  419795:	shl    ebx,0xc5
  419798:	(bad)  
  419799:	mov    dh,0x52
  41979b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41979c:	ds into 
  41979e:	(bad)  
  41979f:	cmc    
  4197a0:	mov    ah,0x9f
  4197a2:	in     eax,dx
  4197a3:	pop    ebx
  4197a4:	popf   
  4197a5:	ja     0x41981e
  4197a7:	push   es
  4197a8:	cwde   
  4197a9:	pop    ebx
  4197aa:	sahf   
  4197ab:	bnd js 0x4197bb
  4197ae:	stc    
  4197af:	push   edx
  4197b0:	adc    DWORD PTR [esi+0x5a174c40],0x4417f3ce
  4197ba:	push   0x69cddaf5
  4197bf:	retf   0x70b9
  4197c2:	jp     0x41974d
  4197c4:	shl    BYTE PTR [ebp+0x5],cl
  4197c7:	push   esi
  4197c8:	arpl   bp,si
  4197ca:	retf   0x1eaf
  4197cd:	ret    0x4829
  4197d0:	cmp    BYTE PTR [ebx+0x7016a7c3],al
  4197d6:	mov    dl,0xbd
  4197d8:	fidivr WORD PTR [ecx]
  4197da:	aad    0x78
  4197dc:	mov    ds:0xce593f90,al
  4197e1:	(bad)  
  4197e2:	jmp    0x6d5652dd
  4197e7:	push   ecx
  4197e8:	xlat   BYTE PTR ds:[ebx]
  4197e9:	scas   al,BYTE PTR es:[edi]
  4197ea:	add    DWORD PTR [edx-0xba1ebea],eax
  4197f0:	xchg   ecx,eax
  4197f1:	and    BYTE PTR [eax+0xb],0x2f
  4197f5:	jle    0x419784
  4197f7:	fdiv   QWORD PTR [ebx-0x2]
  4197fa:	pop    ecx
  4197fb:	call   0xaac70d5c
  419800:	lea    ebp,[ecx]
  419802:	adc    al,0xc
  419804:	leave  
  419805:	add    al,0x74
  419807:	dec    ebp
  419808:	jl     0x419814
  41980a:	sub    eax,0xc997e0dd
  41980f:	cdq    
  419810:	mov    eax,0xe6576383
  419815:	out    0xd8,eax
  419817:	xor    BYTE PTR [ebx],al
  419819:	xchg   edi,eax
  41981a:	lods   al,BYTE PTR ds:[esi]
  41981b:	jmp    0x419811
  41981d:	jne    0x419812
  41981f:	fbstp  TBYTE PTR [esi-0x16]
  419822:	rcr    BYTE PTR [eax-0x3],1
  419825:	test   al,0x68
  419827:	popf   
  419828:	(bad)  [edx-0x14]
  41982b:	lahf   
  41982c:	out    dx,eax
  41982d:	pushf  
  41982e:	imul   edx,DWORD PTR [eiz*8-0x237786bd],0x7c86a8b4
  419839:	int    0x25
  41983b:	jg     0x419820
  41983d:	push   0xffffffb1
  41983f:	enter  0x6b02,0xf7
  419843:	pop    ss
  419844:	pop    esi
  419845:	jb     0x41981c
  419847:	mov    edx,0xc3e80d20
  41984c:	sub    DWORD PTR [eax-0x2f],esp
  41984f:	sub    ch,ah
  419851:	rcl    BYTE PTR [esi-0x3d],cl
  419854:	xlat   BYTE PTR ds:[ebx]
  419855:	retf   0x58be
  419858:	sbb    edx,edi
  41985a:	or     DWORD PTR [ebp-0xbc979a0],eax
  419860:	test   DWORD PTR [ecx+0x9],esp
  419863:	sbb    al,0x32
  419865:	mov    ebp,0xaf1792f8
  41986a:	mov    edi,DWORD PTR [esi+0x27]
  41986d:	fimul  WORD PTR [esi]
  41986f:	and    al,0x51
  419871:	nop
  419872:	mov    ecx,ds
  419874:	aaa    
  419875:	pop    esi
  419876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419877:	jmp    0x4198d9
  419879:	xor    eax,0xe5020d15
  41987e:	loop   0x4198ae
  419880:	jl     0x419860
  419882:	adc    al,BYTE PTR [esi+0x1b36614]
  419888:	inc    esp
  419889:	mov    ds:0xed827780,eax
  41988e:	mov    al,ds:0x266106f0
  419893:	mov    ebp,0x73d519ff
  419898:	test   BYTE PTR [ecx],0x51
  41989b:	ss fxam 
  41989e:	cmp    al,0x5d
  4198a0:	cmp    BYTE PTR [ecx+0x5e],bl
  4198a3:	jb     0x419867
  4198a5:	mov    ebp,0xd1c94a47
  4198aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ab:	cmp    BYTE PTR [esi-0x73e9b2f8],cl
  4198b1:	outs   dx,BYTE PTR ds:[esi]
  4198b2:	fldcw  WORD PTR [eax]
  4198b4:	mov    ebp,0xf7a9ef7
  4198b9:	pusha  
  4198ba:	test   dl,dl
  4198bc:	or     eax,0xdffba489
  4198c1:	jnp    0x419865
  4198c3:	bound  esi,QWORD PTR [edi]
  4198c5:	mov    ah,BYTE PTR [ecx]
  4198c7:	sub    ebx,DWORD PTR [ebx]
  4198c9:	ins    DWORD PTR es:[edi],dx
  4198ca:	es cwde 
  4198cc:	adc    esi,esp
  4198ce:	xchg   BYTE PTR [eax+0x59],ah
  4198d1:	push   ebp
  4198d2:	in     al,dx
  4198d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d4:	jnp    0x419949
  4198d6:	cwde   
  4198d7:	imul   esi,DWORD PTR [edx-0x12f9d944],0x23
  4198de:	lock fwait
  4198e0:	dec    eax
  4198e1:	add    al,0x6
  4198e3:	jns    0x419930
  4198e5:	jp     0x41994f
  4198e7:	sbb    DWORD PTR [ecx],esi
  4198e9:	js     0x4198d4
  4198eb:	out    dx,al
  4198ec:	or     BYTE PTR [eax],dl
  4198ee:	and    BYTE PTR [edi-0x40],ah
  4198f1:	jle    0x419956
  4198f3:	int3   
  4198f4:	xchg   edx,eax
  4198f5:	jbe    0x41996a
  4198f7:	mov    cr0,ebp
  4198fa:	xchg   edi,eax
  4198fb:	loope  0x4198a6
  4198fd:	jge    0x419946
  4198ff:	fld    st(1)
  419901:	mov    eax,ds:0x49e3bf08
  419906:	cmp    al,ah
  419908:	sbb    esi,DWORD PTR [ecx-0x3b6b0fa7]
  41990e:	push   es
  41990f:	in     eax,dx
  419910:	(bad)  [ebx-0x8ae36d2]
  419916:	push   es
  419917:	and    ebx,DWORD PTR [ebx-0x22]
  41991a:	or     DWORD PTR [eax+0x54],0x923ffff4
  419921:	cmp    BYTE PTR [edx+0x7a3e43f0],al
  419927:	pop    ebx
  419928:	dec    ebp
  419929:	lds    esp,FWORD PTR ds:0x5c065915
  41992f:	lods   eax,DWORD PTR ds:[esi]
  419930:	stos   DWORD PTR es:[edi],eax
  419931:	out    dx,eax
  419932:	jns    0x4198b5
  419934:	in     eax,0xfe
  419936:	and    eax,0x2469aea1
  41993b:	jmp    0x4199b8
  41993d:	int    0x43
  41993f:	add    eax,0x2cd96ef5
  419944:	aas    
  419945:	outs   dx,DWORD PTR ds:[esi]
  419946:	jl     0x419984
  419948:	ins    DWORD PTR es:[edi],dx
  419949:	icebp  
  41994a:	push   ss
  41994b:	mov    dh,0xad
  41994d:	xchg   esp,eax
  41994e:	lea    eax,[ecx]
  419950:	pop    ebx
  419951:	jle    0x41999f
  419953:	pusha  
  419954:	adc    eax,0xc21c47c2
  419959:	pop    edx
  41995a:	rcr    DWORD PTR [ebx],cl
  41995c:	add    DWORD PTR [esi-0x69],0xffffffc5
  419960:	lods   al,BYTE PTR ds:[esi]
  419961:	mov    dl,0x91
  419963:	jmp    0x83dbf1c7
  419968:	nop
  419969:	fdivr  DWORD PTR [edx*8+0x67426ed2]
  419970:	(bad)  
  419972:	not    DWORD PTR [esi+0x5c]
  419975:	fwait
  419976:	jno    0x41990b
  419978:	aas    
  419979:	mov    ah,0x6a
  41997b:	test   eax,0x1e3cca1c
  419980:	mov    ebx,0xecdeea74
  419985:	into   
  419986:	dec    edx
  419987:	inc    ecx
  419988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419989:	rol    BYTE PTR [edi+ebx*2-0x22],1
  41998d:	mov    esi,0xc9f98e67
  419992:	mov    dl,bl
  419994:	enter  0xb700,0xbf
  419998:	daa    
  419999:	js     0x419998
  41999b:	mov    WORD PTR ds:0x3d14e589,?
  4199a1:	fbstp  TBYTE PTR [eax+0x3f]
  4199a4:	shr    DWORD PTR [esi],1
  4199a6:	push   ss
  4199a7:	fild   DWORD PTR [esi]
  4199a9:	ret    0x58e6
  4199ac:	dec    edi
  4199ad:	icebp  
  4199ae:	pushf  
  4199af:	jbe    0x4199b7
  4199b1:	not    eax
  4199b3:	scas   eax,DWORD PTR es:[edi]
  4199b4:	or     eax,0x71c10b87
  4199b9:	cmp    dh,BYTE PTR [ecx+0xccbb078]
  4199bf:	push   ebp
  4199c0:	mov    ebp,DWORD PTR [ebx+0x73]
  4199c3:	adc    eax,0x5f1427bf
  4199c8:	mov    ds:0x1113296e,al
  4199cd:	imul   BYTE PTR [eax-0x61]
  4199d0:	leave  
  4199d1:	lods   al,BYTE PTR ds:[esi]
  4199d2:	dec    edx
  4199d3:	jge    0x4199d4
  4199d5:	lods   al,BYTE PTR fs:[esi]
  4199d7:	sub    al,0x4e
  4199d9:	mov    ecx,0xa95d295d
  4199de:	fwait
  4199df:	or     al,al
  4199e1:	push   ebp
  4199e2:	push   ebp
  4199e3:	dec    eax
  4199e4:	cmp    DWORD PTR [ecx-0x63],0x5c
  4199e8:	jle    0x41998f
  4199ea:	mov    eax,ds:0xa8edde69
  4199ef:	lea    esi,ds:0x945afc90
  4199f5:	inc    edx
  4199f6:	fsubr  DWORD PTR [esi-0x4f539415]
  4199fc:	or     al,0x25
  4199fe:	pop    esp
  4199ff:	dec    ecx
  419a00:	into   
  419a01:	push   ds
  419a02:	(bad)  
  419a03:	out    dx,eax
  419a04:	xor    al,0xb3
  419a06:	push   edi
  419a07:	sub    eax,DWORD PTR [eax-0x50]
  419a0a:	mov    dl,0x44
  419a0c:	push   eax
  419a0d:	int    0x99
  419a0f:	inc    esp
  419a10:	out    dx,al
  419a11:	inc    ebp
  419a12:	xchg   esp,eax
  419a13:	dec    ebx
  419a14:	in     eax,0xc1
  419a16:	pop    ebp
  419a17:	das    
  419a18:	sar    BYTE PTR [ecx+0x6b4b1116],0xc8
  419a1f:	and    eax,0x81c53708
  419a24:	and    bh,BYTE PTR [ebx-0x21]
  419a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a28:	pop    esi
  419a29:	outs   dx,BYTE PTR ds:[esi]
  419a2a:	ret    0xfd2d
  419a2d:	lahf   
  419a2e:	add    al,0x84
  419a30:	sub    al,0xbe
  419a32:	adc    DWORD PTR [esi+0x29],0xffffff9f
  419a36:	fcom   QWORD PTR [edx-0x37]
  419a39:	ds adc al,0x92
  419a3c:	inc    edi
  419a3d:	pusha  
  419a3e:	ins    BYTE PTR es:[edi],dx
  419a3f:	and    al,0x17
  419a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a42:	or     eax,0x1b72cd4b
  419a47:	sub    esi,edx
  419a49:	mov    ds:0x18ae12f3,al
  419a4e:	add    esp,DWORD PTR [eax+0xb201c19]
  419a54:	lea    ecx,[edi-0x8802489]
  419a5a:	mov    bl,0xed
  419a5c:	fisttp DWORD PTR [eax]
  419a5e:	mov    edi,0x7a938048
  419a63:	sar    ecx,1
  419a65:	or     edx,eax
  419a67:	inc    edi
  419a68:	rol    DWORD PTR [ebx],1
  419a6a:	inc    eax
  419a6b:	sbb    al,0xc1
  419a6d:	je     0x419a61
  419a6f:	push   ebx
  419a70:	adc    BYTE PTR [eax-0x14],dh
  419a73:	inc    esp
  419a74:	mov    ecx,0xb968805c
  419a79:	lds    ebx,FWORD PTR [edx+0x76]
  419a7c:	mov    al,ds:0x21267e90
  419a81:	jne    0x419aa1
  419a83:	rcr    al,cl
  419a85:	iret   
  419a86:	shl    BYTE PTR [edi],cl
  419a88:	push   ss
  419a89:	dec    edx
  419a8a:	pop    ebp
  419a8b:	mov    esp,0xdc6eeaf6
  419a90:	mov    eax,0x1ceac1b2
  419a95:	jo     0x419a80
  419a97:	adc    al,0xb0
  419a99:	std    
  419a9a:	mov    ecx,0xfb8d8b5b
  419a9f:	fisubr WORD PTR [esi+0x7d]
  419aa2:	sbb    bh,dl
  419aa4:	dec    edx
  419aa5:	out    0x81,al
  419aa7:	adc    cl,BYTE PTR [esi+0x3e]
  419aaa:	enter  0xb54a,0x2e
  419aae:	push   0x67f01014
  419ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ab4:	shl    BYTE PTR [esi+0x39],cl
  419ab7:	push   0x9
  419ab9:	idiv   DWORD PTR [edx-0x5a7b3430]
  419abf:	in     eax,dx
  419ac0:	xchg   BYTE PTR [ebx-0x1a327d2b],bh
  419ac6:	push   DWORD PTR [ebx-0x46]
  419ac9:	add    edx,ebp
  419acb:	pop    ds
  419acc:	scas   al,BYTE PTR es:[edi]
  419acd:	rcr    dl,0x77
  419ad0:	xor    eax,0xd0e1dd94
  419ad5:	jecxz  0x419b18
  419ad7:	jmp    0x61d80065
  419adc:	arpl   WORD PTR [ebp+0x17],cx
  419adf:	popa   
  419ae0:	dec    esp
  419ae1:	inc    ebp
  419ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ae3:	sti    
  419ae4:	leave  
  419ae5:	dec    ecx
  419ae6:	adc    esp,DWORD PTR [ebp+0x1f75d22d]
  419aec:	adc    BYTE PTR [edi-0x1c],bh
  419aef:	aas    
  419af0:	sbb    ah,dh
  419af2:	dec    ebx
  419af3:	pop    ds
  419af4:	mov    bl,0x8f
  419af6:	xor    eax,0xfe89d608
  419afb:	mov    esi,0xb5e9a525
  419b00:	lock fcom DWORD PTR [edi+0x7216a9bb]
  419b07:	dec    esp
  419b08:	push   ebx
  419b09:	cmp    DWORD PTR [ebp-0x17],ebx
  419b0c:	xchg   DWORD PTR [edx-0x6e8293d9],ebx
  419b12:	sub    edx,DWORD PTR [esp+ebx*4+0x6f]
  419b16:	es and edi,ebx
  419b19:	add    al,0x1
  419b1b:	push   ebp
  419b1c:	pop    es
  419b1d:	mov    bl,0x12
  419b1f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419b21:	xchg   DWORD PTR [ebp-0x14],esp
  419b24:	dec    edx
  419b25:	jge    0x419b3d
  419b27:	cmp    edx,DWORD PTR [edx+0xcb9316]
  419b2d:	push   ds
  419b2e:	add    esp,ecx
  419b30:	pop    ss
  419b31:	(bad)
  419b34:	ret    
  419b35:	int3   
  419b36:	cmp    DWORD PTR [ecx-0x41e1550c],esi
  419b3c:	sbb    al,0x3c
  419b3e:	fdiv   QWORD PTR [ecx]
  419b40:	push   ds
  419b41:	push   ebp
  419b42:	ror    DWORD PTR [edi-0x289a1c45],0xd9
  419b49:	dec    eax
  419b4a:	jns    0x419ada
  419b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b4d:	push   ebx
  419b4e:	push   esi
  419b4f:	mov    bh,0xe
  419b51:	xchg   esi,eax
  419b52:	sub    DWORD PTR [eax-0x1fe9f4b0],ebp
  419b58:	pop    ebx
  419b59:	jb     0x419b19
  419b5b:	out    dx,eax
  419b5c:	ds mov eax,0xd1ca95f2
  419b62:	aaa    
  419b63:	add    DWORD PTR [eax-0x68f9d839],0xe347c233
  419b6d:	xchg   esp,eax
  419b6e:	imul   esp,DWORD PTR [ecx-0x33],0xfeb39425
  419b75:	dec    esp
  419b76:	push   esp
  419b77:	adc    al,0x6a
  419b79:	xchg   edx,eax
  419b7a:	ror    BYTE PTR [ebp-0xd29b8a3],1
  419b80:	mov    ss:0x298968f5,eax
  419b86:	sbb    al,0xfa
  419b88:	inc    eax
  419b89:	add    al,0xef
  419b8b:	not    DWORD PTR [edi-0x5]
  419b8e:	pop    ecx
  419b8f:	xlat   BYTE PTR ds:[ebx]
  419b90:	pusha  
  419b91:	dec    ebx
  419b92:	cli    
  419b93:	ret    0xd430
  419b96:	dec    esp
  419b97:	jl     0x419b37
  419b99:	mov    ebx,0x1b8f92e1
  419b9e:	lods   eax,DWORD PTR ds:[esi]
  419b9f:	sbb    bl,cl
  419ba1:	push   esp
  419ba2:	push   cs
  419ba3:	inc    eax
  419ba4:	leave  
  419ba5:	data16 jecxz 0x419c1c
  419ba8:	or     al,0xe7
  419baa:	push   cs
  419bab:	and    al,al
  419bad:	in     eax,dx
  419bae:	fidivr DWORD PTR [ecx+0x1f9856a]
  419bb4:	mov    esp,0xffb9bc71
  419bb9:	lods   eax,DWORD PTR ds:[esi]
  419bba:	stos   DWORD PTR es:[edi],eax
  419bbb:	lahf   
  419bbc:	neg    BYTE PTR [eax-0x2ef167a5]
  419bc2:	jmp    0x419c2d
  419bc4:	inc    ecx
  419bc5:	mov    cl,0x46
  419bc7:	ror    BYTE PTR [edx+0x9],1
  419bca:	js     0x419c22
  419bcc:	mov    eax,0x1d756628
  419bd1:	sar    BYTE PTR [ebx+0x61cab949],cl
  419bd7:	mov    cl,0xa3
  419bd9:	sbb    al,0xff
  419bdc:	inc    edi
  419bdd:	out    dx,al
  419bde:	inc    edi
  419bdf:	sbb    DWORD PTR [edx],eax
  419be1:	mov    DWORD PTR [ecx+0x5d],esp
  419be4:	and    DWORD PTR [eax+esi*2],ebp
  419be7:	addr16 jmp 0x7b04c504
  419bed:	outs   dx,BYTE PTR ds:[esi]
  419bee:	xchg   ebp,eax
  419bef:	push   esi
  419bf0:	mov    gs,WORD PTR [esp+edx*1-0x23d23e06]
  419bf7:	loope  0x419c05
  419bf9:	sub    eax,0xc8236027
  419bfe:	pusha  
  419bff:	adc    esi,DWORD PTR [esi]
  419c01:	pop    esi
  419c02:	push   es
  419c03:	es jmp 0x2583609c
  419c09:	dec    ecx
  419c0a:	fimul  DWORD PTR [ebx+ecx*2-0x215ed082]
  419c11:	sbb    eax,0x2c7f05ca
  419c16:	int    0x68
  419c18:	and    cl,BYTE PTR [ecx+0x3d60ef73]
  419c1e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c20:	ret    
  419c21:	xor    DWORD PTR ds:0xbf4ba1f7,edx
  419c27:	pop    esp
  419c28:	and    eax,0x7c35cc67
  419c2d:	jge    0x419c10
  419c2f:	cwde   
  419c30:	aaa    
  419c31:	cmp    cl,BYTE PTR [edx+eax*4+0x35fd92da]
  419c38:	sbb    esi,DWORD PTR [edx-0x3c330557]
  419c3e:	jecxz  0x419c48
  419c40:	mov    BYTE PTR [ebx],bl
  419c42:	je     0x419c08
  419c44:	rol    BYTE PTR [ebp-0x1d6ad53],0x0
  419c4b:	or     esp,DWORD PTR [eax]
  419c4d:	pop    ds
  419c4e:	sub    BYTE PTR ds:[esi+0x7d],ah
  419c52:	and    ebp,DWORD PTR [edi+0x6b8866f9]
  419c58:	push   cs
  419c59:	mul    BYTE PTR [ebx+edx*2-0x45d0bb52]
  419c60:	pop    edx
  419c61:	fsub   DWORD PTR [ecx+0x2071c7af]
  419c67:	xchg   ebx,eax
  419c68:	push   eax
  419c69:	mov    edi,0xbaeb91dd
  419c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c6f:	sub    al,0xc9
  419c71:	mov    esi,0x84dda4c1
  419c76:	in     al,dx
  419c77:	dec    esi
  419c78:	xchg   edi,eax
  419c79:	aam    0x14
  419c7b:	call   0x6ad7:0xe1afd835
  419c82:	int3   
  419c83:	jl     0x419cca
  419c85:	add    dl,dl
  419c87:	scas   al,BYTE PTR es:[edi]
  419c88:	push   esi
  419c89:	mov    ecx,0xe871cc47
  419c8e:	mov    ebp,0xe75a6984
  419c93:	mov    si,0x69cf
  419c97:	cwde   
  419c98:	sub    ecx,DWORD PTR [eax-0x3f760131]
  419c9e:	fbld   TBYTE PTR [ecx-0x1a]
  419ca1:	icebp  
  419ca2:	push   ds
  419ca3:	xchg   ebx,eax
  419ca4:	lods   eax,DWORD PTR ds:[esi]
  419ca5:	in     al,dx
  419ca6:	mov    ss,esi
  419ca8:	bound  ebx,QWORD PTR [eax-0x3c]
  419cab:	into   
  419cac:	in     al,0xeb
  419cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419caf:	add    eax,edi
  419cb1:	fstp   DWORD PTR [ebx+edi*2]
  419cb4:	jne    0x419d2e
  419cb6:	or     DWORD PTR [ecx+0x26126b5b],edi
  419cbc:	fld    TBYTE PTR [esi+0x388e4adb]
  419cc2:	sbb    BYTE PTR [ebp+0x3b],bl
  419cc5:	pop    esi
  419cc6:	lods   al,BYTE PTR ds:[esi]
  419cc7:	stos   BYTE PTR es:[edi],al
  419cc8:	hlt    
  419cc9:	adc    esi,DWORD PTR [ebx+eiz*4+0x3fccd0ee]
  419cd0:	rol    BYTE PTR [ecx+0x4d2f1b84],0x16
  419cd7:	adc    al,0xbf
  419cd9:	and    ch,BYTE PTR [ebp+eax*1+0x94f2fd1]
  419ce0:	sti    
  419ce1:	jno    0x419d45
  419ce3:	test   BYTE PTR [edi-0x1a],bh
  419ce6:	out    dx,al
  419ce7:	and    ebp,DWORD PTR [ecx]
  419ce9:	je     0x419c7f
  419ceb:	adc    edx,DWORD PTR [ecx-0x6e6fbcf7]
  419cf1:	mov    dh,0xa4
  419cf3:	push   cs
  419cf4:	pop    ds
  419cf5:	out    0xf5,al
  419cf7:	or     ah,bl
  419cf9:	bnd jae 0x419ce7
  419cfc:	(bad)  
  419cfd:	lods   eax,DWORD PTR ds:[esi]
  419cfe:	ret    
  419cff:	dec    ebp
  419d00:	loopne 0x419d40
  419d02:	push   ds
  419d03:	leave  
  419d04:	mov    ch,0xf4
  419d06:	stos   DWORD PTR es:[edi],eax
  419d07:	add    DWORD PTR [esi+0xdc873f1],eax
  419d0d:	and    bh,BYTE PTR [edi+ebp*8-0x34bf4c05]
  419d14:	and    DWORD PTR [edi+0x40900759],ecx
  419d1a:	push   edi
  419d1b:	dec    ecx
  419d1c:	aad    0x3e
  419d1e:	repnz test eax,0x76c7703a
  419d24:	mov    esi,0x1529b952
  419d29:	icebp  
  419d2a:	pop    esp
  419d2b:	jle    0x419d73
  419d2d:	cmp    BYTE PTR [ebx-0x6e],bl
  419d30:	adc    BYTE PTR [ecx+0xf],cl
  419d33:	cmp    DWORD PTR [eax],esp
  419d35:	scas   eax,DWORD PTR es:[edi]
  419d36:	retf   
  419d37:	test   al,0x63
  419d39:	fstp   QWORD PTR [edx-0x49]
  419d3c:	xor    esi,DWORD PTR [edx+edx*4]
  419d3f:	fst    st(1)
  419d41:	call   0x79c595d3
  419d46:	and    ch,BYTE PTR [esi]
  419d48:	inc    esi
  419d49:	adc    eax,ecx
  419d4b:	scas   al,BYTE PTR es:[edi]
  419d4c:	scas   al,BYTE PTR es:[edi]
  419d4d:	ds inc edx
  419d4f:	xlat   BYTE PTR ds:[ebx]
  419d50:	jb     0x419d24
  419d52:	xor    BYTE PTR [esi-0x39],0xf7
  419d56:	ja     0x419d92
  419d58:	push   edx
  419d59:	outs   dx,BYTE PTR ds:[esi]
  419d5a:	into   
  419d5b:	jmp    0x1598a8e1
  419d60:	cld    
  419d61:	(bad)  
  419d62:	js     0x419cf8
  419d64:	das    
  419d65:	cmp    BYTE PTR [eax+edx*1],bh
  419d68:	jecxz  0x419d3c
  419d6a:	pop    ds
  419d6b:	dec    esp
  419d6c:	pop    eax
  419d6d:	popf   
  419d6e:	and    esi,0x2715f6c3
  419d74:	fistp  WORD PTR [esi]
  419d76:	xor    BYTE PTR [esi+0x4019bfda],0x24
  419d7d:	pop    ebx
  419d7e:	mov    eax,0xbbff7dfd
  419d83:	mov    eax,ds:0xf6178ed8
  419d88:	ror    BYTE PTR [edi-0x4634e303],1
  419d8e:	inc    esi
  419d8f:	xor    al,0xc8
  419d91:	popf   
  419d92:	xor    al,al
  419d94:	in     eax,dx
  419d95:	xchg   BYTE PTR [ebx-0x63beeb65],dl
  419d9b:	and    BYTE PTR [edx-0x75],0x85
  419d9f:	daa    
  419da0:	jp     0x419d2f
  419da2:	sahf   
  419da3:	cmp    bh,ah
  419da5:	mov    al,0x50
  419da7:	jno    0x419d69
  419da9:	or     BYTE PTR [ecx+0x4f],bh
  419dac:	xchg   ebx,eax
  419dad:	cmp    esi,DWORD PTR [ebx+ecx*2-0x703d11cb]
  419db4:	sub    al,0xa3
  419db6:	or     eax,0x8d224eab
  419dbb:	leave  
  419dbc:	push   cs
  419dbd:	or     ah,BYTE PTR ds:[ebx+edx*1+0x19]
  419dc2:	sti    
  419dc3:	push   0x1
  419dc5:	test   al,0xd9
  419dc7:	aaa    
  419dc8:	add    DWORD PTR [ebx+ecx*8+0x23],eax
  419dcc:	jge    0x419dec
  419dce:	mov    ds:0xc0cba595,eax
  419dd3:	stc    
  419dd4:	dec    esp
  419dd5:	mov    edi,0xb7616bb5
  419dda:	fiadd  DWORD PTR [edx-0x2d3f57c0]
  419de0:	fcmove st,st(7)
  419de2:	(bad)
  419de6:	ror    DWORD PTR [ecx-0x24b5fb85],1
  419dec:	xor    eax,0xf5bd5350
  419df1:	loop   0x419d73
  419df3:	hlt    
  419df4:	jg     0x419dd8
  419df6:	addr16 push ebx
  419df8:	xor    BYTE PTR [esi-0x51],ch
  419dfb:	call   0x31d8d2a5
  419e00:	retf   
  419e01:	adc    cl,BYTE PTR [edx-0x6d]
  419e04:	adc    ch,BYTE PTR [esi]
  419e06:	push   esp
  419e07:	daa    
  419e08:	mov    ds:0x4f9c30c3,al
  419e0d:	shl    DWORD PTR [edi],cl
  419e0f:	ss icebp 
  419e11:	xchg   ebx,eax
  419e12:	and    eax,0x99d6c616
  419e17:	sti    
  419e18:	retf   
  419e19:	adc    al,0xf
  419e1b:	loope  0x419e44
  419e1d:	test   DWORD PTR [ecx-0x4da7d6d3],ebx
  419e23:	inc    ebx
  419e24:	retf   
  419e25:	or     ch,0xb0
  419e28:	enter  0x3d9e,0x17
  419e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e2d:	shl    BYTE PTR [ebx],1
  419e2f:	ins    BYTE PTR es:[edi],dx
  419e30:	(bad)  [ebp+ebx*4+0x1d5e3c1e]
  419e37:	pop    esp
  419e38:	scas   al,BYTE PTR es:[edi]
  419e39:	in     al,0x40
  419e3b:	xor    al,BYTE PTR [esi-0x5b]
  419e3e:	lods   al,BYTE PTR ds:[esi]
  419e3f:	hlt    
  419e40:	clc    
  419e41:	sub    dl,al
  419e43:	sbb    eax,0x34ebefcd
  419e48:	mov    ds:0xb717d172,al
  419e4d:	dec    ebp
  419e4e:	adc    cl,BYTE PTR [esi-0x31]
  419e51:	fdivr  DWORD PTR [ebx-0x14]
  419e54:	adc    al,0x21
  419e56:	(bad)  
  419e57:	hlt    
  419e58:	push   ebp
  419e59:	ins    DWORD PTR es:[edi],dx
  419e5a:	or     ebx,DWORD PTR [esi+0x99b56fd]
  419e60:	inc    edi
  419e61:	mov    edi,0x11505ec9
  419e66:	mov    BYTE PTR [edx-0x7f106d93],ah
  419e6c:	dec    esi
  419e6d:	ss jae 0x419eef
  419e70:	pop    es
  419e71:	xlat   BYTE PTR ds:[ebx]
  419e72:	mov    ecx,0x2bb7da5c
  419e77:	or     eax,0x76ff2922
  419e7c:	iret   
  419e7d:	das    
  419e7e:	or     eax,0x2981b5d5
  419e83:	ret    
  419e84:	pop    ds
  419e85:	push   ebp
  419e86:	(bad)  
  419e87:	dec    esp
  419e88:	jmp    eax
  419e8a:	fisttp QWORD PTR [eax-0x4c53f5a6]
  419e90:	mov    ecx,0xc6fdcf3d
  419e95:	xchg   ecx,eax
  419e96:	mov    DWORD PTR [edx],edx
  419e98:	fwait
  419e99:	jl     0x419f07
  419e9b:	and    BYTE PTR [esi-0x2f],0x4f
  419e9f:	ror    BYTE PTR [esi+edi*8-0x66],cl
  419ea3:	mov    es,ebx
  419ea5:	push   esi
  419ea6:	inc    ebp
  419ea7:	inc    ebx
  419ea8:	push   edi
  419ea9:	shr    DWORD PTR [eax+ecx*4-0x624f2f1b],1
  419eb0:	push   ss
  419eb1:	mov    DWORD PTR [edi-0x5d],eax
  419eb4:	fs add al,0x3c
  419eb7:	cwde   
  419eb8:	dec    ecx
  419eb9:	int3   
  419eba:	mov    BYTE PTR [edi],dh
  419ebc:	call   0xeb971579
  419ec1:	jecxz  0x419eb6
  419ec3:	aaa    
  419ec4:	xchg   edx,eax
  419ec5:	imul   ecx,DWORD PTR [ebx],0x2ff4e1d
  419ecb:	fisub  DWORD PTR [edx-0x5]
  419ece:	int    0xce
  419ed0:	mov    WORD PTR [edi+eax*4+0x36],gs
  419ed4:	(bad)  
  419ed5:	dec    ebp
  419ed6:	inc    ecx
  419ed7:	xchg   ebx,eax
  419ed8:	jnp    0x419f13
  419eda:	or     ah,BYTE PTR [ebx]
  419edc:	or     edx,DWORD PTR [ebp+0x53]
  419edf:	sub    ch,BYTE PTR [bp+di-0x2ddb]
  419ee4:	xlat   BYTE PTR ds:[ebx]
  419ee5:	sub    BYTE PTR ss:[esi+0x58ee3f5d],cl
  419eec:	add    DWORD PTR [ecx],esi
  419eee:	mov    al,BYTE PTR [ecx+0x6925161f]
  419ef4:	fld    TBYTE PTR [ecx-0x775974]
  419efa:	adc    esp,ecx
  419efc:	mov    WORD PTR [ecx+0x178ae375],es
  419f02:	push   ds
  419f03:	mov    al,ds:0x35351091
  419f08:	jmp    0x80ad:0xe9acfade
  419f0f:	sbb    ebx,DWORD PTR [edi]
  419f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f12:	pop    DWORD PTR [edx+0x5]
  419f15:	add    edi,DWORD PTR [ecx+0x21398d33]
  419f1b:	inc    esi
  419f1c:	rcl    ecx,0xc2
  419f1f:	pop    edi
  419f21:	retf   
  419f22:	test   al,0xe5
  419f24:	inc    edi
  419f25:	mov    eax,ds:0xbdd7bd61
  419f2a:	cli    
  419f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f2c:	cdq    
  419f2d:	fwait
  419f2e:	mov    WORD PTR [ebx-0x273ed12],gs
  419f34:	dec    esi
  419f35:	jb     0x419f0f
  419f37:	or     cl,0x78
  419f3a:	mov    bh,al
  419f3c:	(bad)  
  419f3e:	invd   
  419f40:	pop    ebp
  419f41:	rcl    DWORD PTR [eax-0x6a],0xbd
  419f45:	fiadd  DWORD PTR [ecx+0x4c493fb2]
  419f4b:	add    eax,0xa2f7922
  419f50:	push   ebx
  419f51:	xlat   BYTE PTR ds:[ebx]
  419f52:	test   al,0xe4
  419f54:	adc    eax,0x444e53dd
  419f59:	enter  0xd13c,0x94
  419f5d:	mov    ch,0x1d
  419f5f:	add    al,0xd3
  419f61:	or     esp,DWORD PTR [edx+edx*8+0x23]
  419f65:	aam    0xe0
  419f67:	jp     0x419ef4
  419f69:	dec    ebp
  419f6a:	(bad)  
  419f6b:	fmul   QWORD PTR [edx]
  419f6d:	cvtps2pd xmm0,QWORD PTR [esi-0x45e90750]
  419f74:	mov    ds:0x71b5ce09,eax
  419f79:	mov    es,WORD PTR [ecx-0x6d]
  419f7c:	add    DWORD PTR [ebp-0xa88ef28],ecx
  419f82:	pop    ss
  419f83:	lahf   
  419f84:	cmp    BYTE PTR [edi],al
  419f86:	retf   
  419f87:	aaa    
  419f88:	in     al,0xe5
  419f8a:	xchg   DWORD PTR [esi],esi
  419f8c:	loopne 0x419faf
  419f8e:	mov    ds:0xabbcc2d2,al
  419f93:	inc    edx
  419f94:	inc    edx
  419f95:	jnp    0x419f61
  419f97:	aaa    
  419f98:	pop    ebp
  419f99:	mov    bh,0x3e
  419f9b:	mov    ch,0x90
  419f9d:	out    dx,eax
  419f9e:	test   eax,esi
  419fa0:	sbb    BYTE PTR [edx+0x48],al
  419fa3:	inc    edi
  419fa4:	call   0xe9d:0xed839b4f
  419fab:	lahf   
  419fac:	fwait
  419fad:	and    DWORD PTR [esp+eiz*4+0x6ea8e621],esi
  419fb4:	ins    BYTE PTR es:[edi],dx
  419fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb6:	pushf  
  419fb7:	mov    ebp,0xc9f6711c
  419fbc:	and    al,0x92
  419fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbf:	add    DWORD PTR [ecx],esi
  419fc1:	fstp   st(7)
  419fc3:	dec    ecx
  419fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc5:	jg     0x419f63
  419fc7:	xchg   ecx,eax
  419fc8:	test   DWORD PTR [ebp+0xd8ee2a],ebx
  419fce:	leave  
  419fcf:	sbb    ebp,DWORD PTR [edi-0x6bdb2871]
  419fd5:	xchg   edx,eax
  419fd6:	arpl   dx,si
  419fd8:	xor    eax,DWORD PTR [ebx-0x7f]
  419fdb:	mov    dl,0x15
  419fdd:	outs   dx,BYTE PTR es:[esi]
  419fdf:	inc    edi
  419fe0:	mov    DWORD PTR [ebx+0x78],ecx
  419fe3:	pop    es
  419fe4:	push   ds
  419fe5:	dec    edx
  419fe6:	sub    al,0xb1
  419fe8:	inc    esp
  419fe9:	xchg   ebp,eax
  419fea:	loope  0x41a005
  419fec:	xor    DWORD PTR [esi+0x38283469],edi
  419ff2:	dec    edx
  419ff3:	jge    0x419ffe
  419ff5:	dec    edx
  419ff6:	mov    ebp,0xb71c05f8
  419ffb:	in     al,dx
  419ffc:	out    dx,al
  419ffd:	test   BYTE PTR [edx-0x6f40552],0x2f
  41a004:	stc    
  41a005:	inc    ecx
  41a006:	and    eax,0x3cbdde0e
  41a00b:	mov    eax,ds:0x6c886fd0
  41a010:	enter  0x4295,0x14
  41a014:	pop    esi
  41a015:	ret    0xb60c
  41a018:	sub    BYTE PTR [edi-0x5e],dh
  41a01b:	enter  0x382,0x71
  41a01f:	cmc    
  41a020:	sbb    ecx,esp
  41a022:	sub    BYTE PTR [edx],0xcc
  41a025:	mov    al,0x81
  41a027:	xor    edx,ebp
  41a029:	data16 ficom DWORD PTR [edx+0x1ae0c771]
  41a030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a031:	xor    eax,0x1e803f79
  41a036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a037:	push   0xffffffc8
  41a039:	adc    cl,bh
  41a03b:	mov    esp,0x805db2dd
  41a040:	pop    ds
  41a041:	(bad)
  41a045:	and    BYTE PTR ds:0xaad450e1,dh
  41a04b:	adc    BYTE PTR [ebp-0x501ca778],0xbb
  41a052:	pop    DWORD PTR [eax+esi*8]
  41a055:	adc    BYTE PTR [ebp+0x1be79a3],dh
  41a05b:	fmul   DWORD PTR [edi-0x2604ecdc]
  41a061:	rdtsc  
  41a063:	and    al,0x2
  41a065:	sbb    al,0x44
  41a067:	push   cs
  41a068:	shl    BYTE PTR [eax+0x3d02ea21],1
  41a06e:	cli    
  41a06f:	xlat   BYTE PTR ds:[ebx]
  41a070:	arpl   WORD PTR [ebp-0x53],bp
  41a073:	loopne 0x41a061
  41a075:	int3   
  41a076:	add    dh,BYTE PTR [ebx-0x37]
  41a079:	aad    0x6d
  41a07b:	mov    eax,ds:0x938f1010
  41a080:	adc    al,0x75
  41a082:	shr    BYTE PTR [eax],1
  41a084:	stos   DWORD PTR es:[edi],eax
  41a085:	test   eax,0xeed0dbcb
  41a08a:	adc    dl,BYTE PTR [eax+0x64]
  41a08d:	ja     0x41a038
  41a08f:	sti    
  41a090:	aaa    
  41a091:	shr    BYTE PTR [edi],1
  41a093:	fwait
  41a094:	sbb    eax,0xe4e96f55
  41a099:	cmp    dh,dh
  41a09b:	ret    
  41a09c:	ds dec ebx
  41a09e:	mov    eax,ds:0x1e87c5a8
  41a0a3:	ins    BYTE PTR es:[edi],dx
  41a0a4:	dec    edx
  41a0a5:	adc    BYTE PTR [eax],cl
  41a0a7:	arpl   WORD PTR [edi+ebp*2+0x6c33866f],ax
  41a0ae:	(bad)  
  41a0af:	jl     0x41a0e7
  41a0b1:	loope  0x41a074
  41a0b3:	les    edx,FWORD PTR cs:[esi+0x109a288f]
  41a0ba:	cmp    BYTE PTR [ecx+ecx*4],bh
  41a0bd:	dec    edi
  41a0be:	add    al,0x24
  41a0c0:	and    bl,bl
  41a0c2:	mov    BYTE PTR [ecx+0x6b],dh
  41a0c5:	jo     0x41a0cb
  41a0c7:	shr    ch,cl
  41a0c9:	mov    ch,0x8a
  41a0cb:	add    bl,BYTE PTR [eax+ecx*4-0x5d]
  41a0cf:	ins    BYTE PTR es:[edi],dx
  41a0d0:	xor    BYTE PTR [ebx],bh
  41a0d2:	fisubr DWORD PTR [ebx]
  41a0d4:	fucomip st,st(2)
  41a0d6:	cmp    DWORD PTR [edx+edi*1-0x1b],ebp
  41a0da:	xor    dl,bh
  41a0dc:	ror    DWORD PTR [ebp+0x42],1
  41a0df:	inc    ecx
  41a0e0:	cld    
  41a0e1:	leave  
  41a0e2:	ins    DWORD PTR es:[edi],dx
  41a0e3:	xor    DWORD PTR [esi],esi
  41a0e5:	sub    dh,ah
  41a0e7:	and    eax,0xb2fc5ecd
  41a0ec:	ins    DWORD PTR es:[edi],dx
  41a0ed:	aas    
  41a0ee:	out    dx,eax
  41a0ef:	xchg   BYTE PTR [edx-0x1f],cl
  41a0f2:	jno    0x41a07e
  41a0f4:	outs   dx,BYTE PTR ds:[esi]
  41a0f5:	call   0x3946681b
  41a0fa:	aam    0xc9
  41a0fc:	or     bl,BYTE PTR [esi]
  41a0fe:	stos   DWORD PTR es:[edi],eax
  41a0ff:	inc    ecx
  41a100:	ret    
  41a101:	in     eax,0x1e
  41a103:	sbb    bh,ch
  41a105:	push   0x15
  41a107:	fld    QWORD PTR [edx-0x71]
  41a10a:	mov    ebx,0x77ca0d5e
  41a10f:	out    dx,al
  41a110:	pop    ecx
  41a111:	adc    BYTE PTR [ebx+0x77d0beb4],dl
  41a117:	xchg   edx,eax
  41a118:	int3   
  41a119:	rol    bl,cl
  41a11b:	mov    ecx,0x58736ba3
  41a120:	dec    edx
  41a121:	bswap  esi
  41a123:	pop    esi
  41a124:	sbb    DWORD PTR cs:[esi-0x73eec94a],ebp
  41a12b:	test   BYTE PTR [ecx-0x21],bh
  41a12e:	xchg   esp,eax
  41a12f:	jne    0x41a0d1
  41a131:	mov    ch,0x9
  41a133:	mov    ss,WORD PTR [edx]
  41a135:	pop    edx
  41a136:	push   es
  41a137:	xchg   BYTE PTR [ebx+0x45],ch
  41a13a:	out    0x5b,eax
  41a13c:	stos   BYTE PTR es:[edi],al
  41a13d:	xchg   esi,eax
  41a13e:	imul   esi,DWORD PTR [ebp+ecx*1-0x676bdf2],0xdfbf91da
  41a149:	push   edx
  41a14a:	dec    edx
  41a14b:	call   0xbe2a:0x899059e5
  41a152:	jbe    0x41a16c
  41a154:	pop    edi
  41a155:	(bad)  
  41a157:	rol    ah,1
  41a159:	sbb    al,0x92
  41a15b:	imul   esp,DWORD PTR [ebx-0x245bd278],0x9a622165
  41a165:	sub    DWORD PTR [edx-0x6db32523],0xffffffa9
  41a16c:	popa   
  41a16d:	dec    esp
  41a16e:	dec    esi
  41a16f:	jmp    0x4c1d51e6
  41a174:	pop    edi
  41a175:	pop    eax
  41a176:	inc    esi
  41a177:	adc    al,ah
  41a179:	loopne 0x41a137
  41a17b:	test   al,0xcf
  41a17d:	push   esi
  41a17e:	pusha  
  41a17f:	sub    DWORD PTR [esi+0x6a],0xffffffe5
  41a183:	and    DWORD PTR [ebp+0x64f5fa18],0xc76566cb
  41a18d:	hlt    
  41a18e:	(bad)  
  41a18f:	xchg   edx,eax
  41a190:	pushw  cs
  41a192:	and    esp,DWORD PTR [ecx-0x23]
  41a195:	inc    ebp
  41a196:	shl    BYTE PTR ds:0xd340109d,cl
  41a19c:	iret   
  41a19d:	xchg   BYTE PTR [edi-0x50fdc9c],dl
  41a1a3:	cmp    eax,0xb109caa3
  41a1a8:	mov    bh,0x25
  41a1aa:	adc    BYTE PTR [edx-0x17],cl
  41a1ad:	js     0x41a1ed
  41a1af:	(bad)  
  41a1b0:	push   esi
  41a1b1:	cmp    eax,0xd609b851
  41a1b6:	les    ebp,FWORD PTR [edi+0x519fc994]
  41a1bc:	pop    ecx
  41a1bd:	mov    ecx,0x4536eaa8
  41a1c2:	mov    ebp,DWORD PTR [ecx+0x6c]
  41a1c5:	inc    esp
  41a1c6:	cld    
  41a1c7:	mov    edi,0xdfbe114a
  41a1cc:	mov    ecx,0x2b55ea56
  41a1d1:	gs cmp eax,0xb3cb71e5
  41a1d7:	clc    
  41a1d8:	sti    
  41a1d9:	retf   
  41a1da:	mov    al,ds:0x3532c104
  41a1df:	xor    edi,DWORD PTR [ebp-0x2]
  41a1e2:	and    DWORD PTR [ebp-0xc],edi
  41a1e5:	dec    ecx
  41a1e6:	cdq    
  41a1e7:	and    eax,ecx
  41a1e9:	enter  0x26ca,0xe
  41a1ed:	leave  
  41a1ee:	push   0xf7606e
  41a1f3:	inc    ebp
  41a1f4:	cmp    eax,0x2a6fc14d
  41a1f9:	pop    ss
  41a1fa:	popf   
  41a1fb:	jno    0x41a279
  41a1fd:	inc    eax
  41a1fe:	sbb    BYTE PTR [eax-0x628b63be],bl
  41a204:	sar    DWORD PTR [edi],1
  41a206:	int3   
  41a207:	loope  0x41a1f8
  41a209:	cmp    BYTE PTR [edx-0x3],bl
  41a20c:	xchg   BYTE PTR [ebp-0x7b],bl
  41a20f:	sbb    ebx,DWORD PTR [ecx]
  41a211:	push   edi
  41a212:	mov    fs,WORD PTR [ebx-0x1d7b45b0]
  41a218:	aad    0x36
  41a21a:	bswap  edi
  41a21c:	or     esp,DWORD PTR [eax]
  41a21e:	inc    ebp
  41a21f:	pop    esp
  41a220:	or     bl,BYTE PTR [edi-0x5b]
  41a223:	xchg   esi,eax
  41a224:	lock dec ebp
  41a226:	and    bh,dh
  41a228:	and    eax,0x21ff3521
  41a22d:	jne    0x41a1fd
  41a22f:	mov    esp,0x6d56b1d4
  41a234:	or     ebp,DWORD PTR [esi+0x4838e99b]
  41a23a:	retf   0xded5
  41a23d:	jo     0x41a289
  41a23f:	push   esi
  41a240:	push   esi
  41a241:	neg    BYTE PTR [esi-0x71]
  41a244:	shl    BYTE PTR [ecx+0x2f],1
  41a247:	and    bh,BYTE PTR [esi-0x5ee6ec14]
  41a24d:	scas   al,BYTE PTR es:[edi]
  41a24e:	sub    DWORD PTR [ebp+0x169ac0e4],esi
  41a254:	test   al,0x51
  41a256:	(bad)  
  41a257:	or     bh,ah
  41a259:	mov    BYTE PTR es:[edx-0x79d80176],ch
  41a260:	out    0x32,eax
  41a262:	pop    esi
  41a263:	loopne 0x41a280
  41a265:	lock xor eax,0x3019be1
  41a26b:	lock jmp 0x41a238
  41a26e:	dec    edi
  41a26f:	ret    0x7daf
  41a272:	scas   eax,DWORD PTR es:[edi]
  41a273:	and    bl,al
  41a275:	fldenv ds:0x222ebe0a
  41a27b:	aam    0xf5
  41a27d:	add    BYTE PTR [esi+0x535e067d],bl
  41a283:	outs   dx,DWORD PTR ds:[esi]
  41a284:	push   eax
  41a285:	pop    eax
  41a286:	shl    BYTE PTR [ecx+0xf],1
  41a289:	retf   0xad19
  41a28c:	or     BYTE PTR [ebp+0x79],ah
  41a28f:	in     al,dx
  41a290:	cs fcmovbe st,st(4)
  41a293:	mov    dh,0x9b
  41a295:	push   eax
  41a296:	dec    esp
  41a297:	pop    esi
  41a298:	adc    ebx,DWORD PTR [edx-0x2f]
  41a29b:	les    ebp,FWORD PTR [esi-0x871018d]
  41a2a1:	arpl   WORD PTR [esp+eax*8],sp
  41a2a4:	adc    DWORD PTR [edi+0x5c4d68de],0xffffffa2
  41a2ab:	(bad)  
  41a2ac:	push   ds
  41a2ad:	pop    esi
  41a2ae:	fild   WORD PTR [esi-0x9]
  41a2b1:	cmp    edx,edi
  41a2b3:	push   cs
  41a2b4:	stos   DWORD PTR es:[edi],eax
  41a2b5:	push   esi
  41a2b6:	dec    edx
  41a2b7:	dec    ecx
  41a2b8:	fcomp  DWORD PTR [ebx+ebx*4]
  41a2bb:	mov    edi,0x4035e58
  41a2c0:	inc    eax
  41a2c1:	adc    eax,0x8c4ed772
  41a2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c7:	inc    edx
  41a2c8:	popa   
  41a2c9:	push   0xffffffa7
  41a2cb:	enter  0xe2d9,0xba
  41a2cf:	cmp    cl,BYTE PTR [esi-0x24]
  41a2d2:	push   0x9e02db4f
  41a2d7:	lock sub BYTE PTR [edi-0x39],ch
  41a2db:	adc    bh,cl
  41a2dd:	test   dl,ch
  41a2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e0:	inc    ebp
  41a2e1:	cmp    ch,bl
  41a2e3:	data16 mov bl,0x95
  41a2e6:	add    edi,DWORD PTR [eax]
  41a2e8:	xor    ebp,DWORD PTR [edi+0x27]
  41a2eb:	test   al,0x4e
  41a2ed:	call   0x321972e5
  41a2f2:	adc    al,0x78
  41a2f4:	dec    edi
  41a2f5:	sub    eax,0xb90d88f2
  41a2fa:	sahf   
  41a2fb:	loop   0x41a300
  41a2fd:	lods   eax,DWORD PTR ds:[esi]
  41a2fe:	adc    edi,DWORD PTR [esi+0x7a937907]
  41a304:	sbb    ch,BYTE PTR [ecx+eiz*1+0x39df8e6f]
  41a30b:	out    dx,al
  41a30c:	lahf   
  41a30d:	rcr    DWORD PTR ds:0x2a0c9e15,1
  41a313:	cld    
  41a314:	out    0x69,eax
  41a316:	stos   DWORD PTR es:[edi],eax
  41a317:	push   esi
  41a318:	in     eax,0x28
  41a31a:	sbb    bl,bl
  41a31c:	pop    eax
  41a31d:	iret   
  41a31e:	jae    0x41a2a4
  41a320:	je     0x41a2e9
  41a322:	add    al,0xad
  41a324:	inc    ebx
  41a325:	add    DWORD PTR [edx-0x52],esp
  41a328:	fnstcw WORD PTR [ecx+0x76]
  41a32b:	or     bh,BYTE PTR [edx]
  41a32d:	hlt    
  41a32e:	mov    WORD PTR [edx-0xeee59b9],es
  41a334:	mov    ds:0x42397cad,al
  41a339:	sbb    dl,BYTE PTR [edx-0x1a3395d9]
  41a33f:	cld    
  41a340:	enter  0xe1df,0x29
  41a344:	xor    dl,BYTE PTR ds:0xb788f8c4
  41a34a:	inc    ebx
  41a34b:	mov    ebx,0x96ad10b3
  41a350:	cmp    DWORD PTR [eax-0xa1c3462],ebp
  41a356:	(bad)  
  41a357:	fwait
  41a358:	add    DWORD PTR [ecx],ebp
  41a35a:	rcl    DWORD PTR [eax+0x3],cl
  41a35d:	ss in  eax,0x54
  41a360:	mov    esi,0xaf5cef5
  41a365:	jp     0x41a33b
  41a367:	gs jg  0x41a31c
  41a36a:	stc    
  41a36b:	mov    bl,0xa6
  41a36d:	ficomp DWORD PTR [eax-0x5b]
  41a370:	push   edi
  41a371:	xor    al,0x88
  41a373:	fistp  QWORD PTR [edi]
  41a375:	and    dh,BYTE PTR [edx-0x9]
  41a378:	mov    dh,BYTE PTR [edi+0x35]
  41a37b:	add    al,0x49
  41a37d:	dec    ebx
  41a37e:	dec    eax
  41a37f:	shl    BYTE PTR [eax],0x47
  41a382:	lds    edx,FWORD PTR ds:0x7be948da
  41a388:	jo     0x41a3f9
  41a38a:	ud1    ebx,DWORD PTR [ecx-0x2c22eebc]
  41a391:	lahf   
  41a392:	iret   
  41a393:	test   BYTE PTR [ebp-0x78143607],dl
  41a399:	or     cl,bh
  41a39b:	mov    ebx,DWORD PTR [edx+0x21cc7fb0]
  41a3a1:	xor    DWORD PTR [ebx+0x69f0af61],ebp
  41a3a7:	push   ebp
  41a3a8:	les    ebx,FWORD PTR [edi+0x53]
  41a3ab:	stos   BYTE PTR es:[edi],al
  41a3ac:	mov    ebp,0x39d64a57
  41a3b1:	adc    dh,BYTE PTR [ebx]
  41a3b3:	clc    
  41a3b4:	add    BYTE PTR [ebp+0x7e],bl
  41a3b7:	cmp    dl,BYTE PTR [esi]
  41a3b9:	xor    edi,DWORD PTR [eax-0x7ffa96a8]
  41a3bf:	mov    cl,0xff
  41a3c1:	and    BYTE PTR [edx+0xdfb377c],dl
  41a3c7:	inc    ebp
  41a3c8:	xchg   edi,eax
  41a3c9:	mov    ah,0xc7
  41a3cb:	ds aas 
  41a3cd:	dec    ebp
  41a3ce:	call   DWORD PTR [eax+0x731c12fb]
  41a3d4:	push   0xa041a5e6
  41a3d9:	popf   
  41a3da:	imul   eax,esp,0x35d9cfe3
  41a3e0:	imul   esp,DWORD PTR [esi+0x4be9e069],0xf81340f2
  41a3ea:	cmp    BYTE PTR [eax],bh
  41a3ec:	add    ch,0x98
  41a3ef:	mov    dh,0xf
  41a3f1:	in     al,dx
  41a3f2:	mov    eax,ds:0x287040e5
  41a3f7:	dec    ebx
  41a3f8:	dec    edx
  41a3f9:	mov    ah,0x92
  41a3fb:	xchg   edi,eax
  41a3fc:	pop    ds
  41a3fd:	adc    eax,0x54c1e8e3
  41a402:	and    al,0x9
  41a404:	xor    BYTE PTR [ebp-0x19f8bd3e],ch
  41a40a:	mov    ecx,0x51c57338
  41a40f:	mov    ebx,0x70ccb139
  41a414:	je     0x41a444
  41a416:	push   0x69dbc387
  41a41b:	cmp    ebx,DWORD PTR [ecx-0x10b17747]
  41a421:	(bad)  
  41a422:	ja     0x41a42a
  41a424:	fstp   TBYTE PTR [ecx+0x12]
  41a427:	adc    al,0xe7
  41a429:	call   edi
  41a42b:	jp     0x41a3d1
  41a42d:	sahf   
  41a42e:	and    DWORD PTR [esi],ebx
  41a430:	add    al,0xf2
  41a432:	ins    DWORD PTR es:[edi],dx
  41a433:	jg     0x41a3f7
  41a435:	ss test edx,0xe02e2d1a
  41a43c:	popf   
  41a43d:	or     BYTE PTR [eax],0x2b
  41a440:	xchg   ebp,eax
  41a441:	sbb    eax,0xfd844115
  41a446:	neg    cl
  41a448:	cmp    eax,0x693bb24
  41a44d:	(bad)  
  41a44e:	loop   0x41a426
  41a450:	popf   
  41a451:	xor    eax,0x4c3fab2b
  41a456:	sti    
  41a457:	inc    edi
  41a458:	cs mov eax,0xd0b5757
  41a45e:	leave  
  41a45f:	pop    ss
  41a460:	xchg   edi,eax
  41a461:	or     edx,DWORD PTR [eax]
  41a463:	mov    cl,0xb1
  41a465:	stos   BYTE PTR es:[edi],al
  41a466:	dec    edi
  41a467:	xor    eax,0x664aed11
  41a46c:	xchg   edx,eax
  41a46d:	inc    ebx
  41a46e:	ret    0x6c1e
  41a471:	clc    
  41a472:	(bad)  
  41a473:	mov    esi,0x60d5dddb
  41a478:	not    DWORD PTR [ebp+edx*2+0x4b831549]
  41a47f:	adc    esi,edx
  41a481:	aam    0x0
  41a483:	jg     0x41a44d
  41a485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a486:	dec    ecx
  41a487:	(bad)  
  41a488:	or     bh,BYTE PTR [eax]
  41a48a:	and    al,0x9d
  41a48c:	stos   BYTE PTR es:[edi],al
  41a48d:	daa    
  41a48e:	mov    edi,0x81b640b9
  41a493:	ds out dx,al
  41a495:	xor    al,0xe9
  41a497:	cmp    DWORD PTR ds:0xf0dbba8a,0x14
  41a49e:	pop    eax
  41a49f:	push   ebp
  41a4a0:	pushf  
  41a4a1:	adc    bh,BYTE PTR [edx]
  41a4a3:	mov    ds:0xa396b7f8,al
  41a4a8:	xchg   esp,eax
  41a4a9:	sar    DWORD PTR [ebx+0x4b],1
  41a4ac:	mov    ds:0xeff9f068,al
  41a4b1:	xor    al,0x2c
  41a4b3:	retf   0x27e3
  41a4b6:	stos   BYTE PTR es:[edi],al
  41a4b7:	xchg   DWORD PTR [ecx+0x443d8a00],ebp
  41a4bd:	and    bh,bl
  41a4bf:	rcl    edi,0x6b
  41a4c2:	dec    ebx
  41a4c3:	hlt    
  41a4c4:	fnstenv [eax-0x6e]
  41a4c7:	xchg   esi,eax
  41a4c8:	dec    edx
  41a4c9:	in     eax,0xed
  41a4cb:	adc    edi,edi
  41a4cd:	not    DWORD PTR [edi]
  41a4cf:	cdq    
  41a4d0:	call   0xb114:0x276e77d8
  41a4d7:	rcr    DWORD PTR [edi],cl
  41a4d9:	je     0x41a46e
  41a4db:	cmp    DWORD PTR [edi],edx
  41a4dd:	push   esi
  41a4de:	dec    ebx
  41a4df:	xor    BYTE PTR [edx-0xc],0xdd
  41a4e3:	mov    ch,0x6f
  41a4e5:	adc    DWORD PTR [ebx+0x23d1bc5b],ebx
  41a4eb:	fcmovu st,st(4)
  41a4ed:	sub    al,0xba
  41a4ef:	xchg   DWORD PTR [eax],edi
  41a4f1:	jbe    0x41a565
  41a4f3:	dec    ecx
  41a4f4:	in     al,dx
  41a4f5:	mov    ebx,0x321e1f33
  41a4fa:	dec    ebx
  41a4fb:	jmp    0xb66a:0x9e511751
  41a502:	mov    dh,0x6d
  41a504:	sar    DWORD PTR [edx-0x1c],1
  41a507:	sbb    BYTE PTR [esi-0x5a],cl
  41a50a:	pop    ds
  41a50b:	xor    eax,0xf6ef2007
  41a510:	push   eax
  41a511:	inc    ebp
  41a512:	les    edx,FWORD PTR ds:0xfce12df8
  41a518:	fistp  WORD PTR [edx+0x5b271231]
  41a51e:	retf   0x1b9e
  41a521:	ins    DWORD PTR es:[edi],dx
  41a522:	shl    ch,0xea
  41a525:	or     bl,al
  41a527:	mov    edx,0x68cda55e
  41a52c:	mov    dl,0xa3
  41a52e:	out    0xed,eax
  41a530:	test   eax,0x73f9e941
  41a535:	(bad)  
  41a537:	jg     0x41a4c9
  41a539:	cs or  al,0x8d
  41a53c:	shl    BYTE PTR [ebx-0x2cdfc38],1
  41a542:	lds    esp,FWORD PTR [eax+edi*2]
  41a545:	push   esp
  41a546:	in     eax,0x3f
  41a548:	shr    BYTE PTR [eax],cl
  41a54a:	scas   eax,DWORD PTR es:[edi]
  41a54b:	mov    BYTE PTR ds:0xb75b7da8,0x65
  41a552:	out    0x4d,al
  41a554:	or     ebp,DWORD PTR [esi+ebx*4]
  41a557:	pop    esi
  41a558:	sahf   
  41a559:	(bad)  
  41a55a:	sahf   
  41a55b:	sti    
  41a55c:	stos   DWORD PTR es:[edi],eax
  41a55d:	stos   BYTE PTR es:[edi],al
  41a55e:	out    dx,eax
  41a55f:	inc    esp
  41a560:	(bad)
  41a563:	pop    ebx
  41a564:	push   ebx
  41a565:	dec    ebx
  41a566:	outs   dx,DWORD PTR ds:[esi]
  41a567:	xor    dl,al
  41a569:	test   BYTE PTR [ebp-0x16],cl
  41a56c:	add    bh,cl
  41a56e:	push   esp
  41a56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a570:	jg     0x41a520
  41a572:	inc    eax
  41a573:	sbb    DWORD PTR [esi],0xd3c9de06
  41a579:	xor    al,0x94
  41a57b:	xor    dh,ah
  41a57d:	inc    ebx
  41a57e:	xchg   esi,eax
  41a57f:	xor    DWORD PTR ds:0x532e17c2,ebp
  41a585:	(bad)  
  41a586:	sub    bl,bh
  41a588:	mov    ds:0x7453c6cd,al
  41a58d:	in     al,dx
  41a58e:	mov    edx,0xe56c2324
  41a593:	call   FWORD PTR [ebx-0x1db86383]
  41a599:	push   ss
  41a59a:	sbb    DWORD PTR [ecx-0x15],0x4c
  41a59e:	retf   
  41a59f:	lods   al,BYTE PTR ds:[esi]
  41a5a0:	bound  edi,QWORD PTR [ebp-0x2d]
  41a5a3:	mov    bl,0x47
  41a5a5:	xchg   edi,eax
  41a5a6:	rcl    esp,0xa1
  41a5a9:	imul   ebp,edx,0x33877fb8
  41a5af:	sahf   
  41a5b0:	dec    edi
  41a5b1:	cli    
  41a5b2:	jbe    0x41a5bb
  41a5b4:	int    0xcf
  41a5b6:	test   BYTE PTR [ebx],bh
  41a5b8:	push   edx
  41a5b9:	push   0x10
  41a5bb:	add    DWORD PTR [eax+0x178dffba],esi
  41a5c1:	call   0x3b30:0x9b2ee757
  41a5c8:	shr    esi,1
  41a5ca:	push   cs
  41a5cb:	int    0xa
  41a5cd:	cmp    dl,BYTE PTR [eax+0x449796ca]
  41a5d3:	inc    ebp
  41a5d4:	jns    0x41a5b3
  41a5d6:	sub    DWORD PTR [esi+0x44c97dca],ebx
  41a5dc:	sbb    edi,DWORD PTR [eax+ecx*4]
  41a5df:	cwde   
  41a5e0:	lds    ebx,FWORD PTR [ebp+0x1d]
  41a5e3:	pop    ebp
  41a5e4:	add    DWORD PTR [esi+eiz*1],ebp
  41a5e7:	sbb    ebp,DWORD PTR [ebp-0x1a]
  41a5ea:	mov    dl,BYTE PTR [ebp+0x363f1be3]
  41a5f0:	shr    BYTE PTR [edx+0x7169cb83],cl
  41a5f6:	jp     0x41a630
  41a5f8:	sub    eax,0xcd352670
  41a5fd:	lods   eax,DWORD PTR ds:[esi]
  41a5fe:	arpl   WORD PTR [ebx-0x49c30062],di
  41a604:	lea    ebp,[eax]
  41a606:	ret    
  41a607:	xlat   BYTE PTR ds:[ebx]
  41a608:	scas   al,BYTE PTR es:[edi]
  41a609:	pushf  
  41a60a:	imul   DWORD PTR [edx]
  41a60c:	shr    DWORD PTR [edx],1
  41a60e:	mov    edx,0x69e1751c
  41a613:	stos   DWORD PTR es:[edi],eax
  41a614:	test   eax,0x99ed2d0c
  41a619:	jecxz  0x41a5d4
  41a61b:	add    DWORD PTR [edx+0x49],eax
  41a61e:	jo     0x41a5e2
  41a620:	gs mov edx,0xf346b67a
  41a626:	and    DWORD PTR [eax+0x2a3733f1],0x4e
  41a62d:	icebp  
  41a62e:	aam    0x58
  41a630:	fwait
  41a631:	cmc    
  41a632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a633:	idiv   cl
  41a635:	sahf   
  41a636:	xor    ch,BYTE PTR [ecx+0x6375555a]
  41a63c:	popa   
  41a63d:	sbb    bl,dh
  41a63f:	or     eax,0x4c994f6c
  41a644:	and    al,0xec
  41a646:	enter  0x67f9,0x91
  41a64a:	jle    0x41a6bd
  41a64c:	inc    esp
  41a64d:	out    0x79,al
  41a64f:	and    BYTE PTR [ebx+0x34],al
  41a652:	(bad)  
  41a654:	sub    BYTE PTR [ebp-0x2f],dh
  41a657:	jp     0x41a5f3
  41a659:	sahf   
  41a65a:	dec    ebp
  41a65b:	ror    BYTE PTR [ecx-0x4c8e2c80],1
  41a661:	loop   0x41a65c
  41a663:	js     0x41a6d2
  41a665:	mov    eax,0xbbc404ef
  41a66a:	lock or al,0x5f
  41a66d:	sub    DWORD PTR [edi+0x156834b8],ebx
  41a673:	jmp    FWORD PTR [edi]
  41a675:	mov    esp,0x2949a738
  41a67a:	jbe    0x41a60d
  41a67c:	jl     0x41a67b
  41a67e:	std    
  41a67f:	ja     0x41a683
  41a681:	xchg   ecx,ebx
  41a683:	iret   
  41a684:	xchg   esi,eax
  41a685:	jecxz  0x41a6ba
  41a687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a688:	int    0x22
  41a68a:	ins    BYTE PTR es:[edi],dx
  41a68b:	dec    esi
  41a68c:	xchg   ebx,eax
  41a68d:	fiadd  DWORD PTR [eax-0x7d190c72]
  41a693:	in     eax,dx
  41a694:	leave  
  41a695:	push   edx
  41a696:	or     ch,al
  41a698:	jno    0x41a6c9
  41a69a:	(bad)  
  41a69b:	jmp    0xe25999b9
  41a6a0:	sub    al,0xb1
  41a6a2:	fcomp  DWORD PTR [eax]
  41a6a4:	mov    esi,0x4fb5354e
  41a6a9:	inc    edx
  41a6aa:	mov    edx,0xd34a93e9
  41a6af:	inc    esi
  41a6b0:	and    eax,0x3c72e600
  41a6b5:	fsubp  st(5),st
  41a6b7:	sbb    al,0x5f
  41a6b9:	adc    esp,DWORD PTR [edi]
  41a6bb:	adc    al,0xf1
  41a6bd:	dec    edi
  41a6be:	test   DWORD PTR [ebp+0x54],esp
  41a6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c2:	jg     0x41a6fb
  41a6c4:	and    cl,BYTE PTR [ecx]
  41a6c6:	out    dx,eax
  41a6c7:	xchg   edi,eax
  41a6c8:	and    ch,ch
  41a6ca:	retf   
  41a6cb:	mov    dl,0xa1
  41a6cd:	dec    ecx
  41a6ce:	icebp  
  41a6cf:	jne    0x41a713
  41a6d1:	mov    ebp,0x2dc2bd1f
  41a6d6:	mov    dl,0xa3
  41a6d8:	add    al,0x30
  41a6da:	inc    eax
  41a6db:	jo     0x41a70c
  41a6dd:	imul   edx,eax,0x182768a9
  41a6e3:	dec    ecx
  41a6e4:	outs   dx,BYTE PTR ds:[esi]
  41a6e5:	jmp    0x85c5b69a
  41a6ea:	mov    ebp,0xfa6a70ff
  41a6ef:	enter  0x2bd0,0x49
  41a6f3:	dec    esp
  41a6f4:	out    0xc8,eax
  41a6f6:	ds fdivp st(1),st
  41a6f9:	cmp    eax,0xbcafb3b4
  41a6fe:	jmp    0x41a766
  41a700:	mov    esi,0x89fcaf5d
  41a705:	mov    eax,0x58168c2f
  41a70a:	int    0xa0
  41a70c:	(bad)  
  41a70d:	ins    BYTE PTR es:[edi],dx
  41a70e:	mov    al,0x6c
  41a710:	jae    0x41a6e2
  41a712:	mov    bh,0x50
  41a714:	inc    eax
  41a715:	loop   0x41a750
  41a717:	loope  0x41a72f
  41a719:	fidivr WORD PTR [ecx+ebx*8+0xc]
  41a71d:	push   esp
  41a71e:	scas   eax,DWORD PTR es:[edi]
  41a71f:	mov    cl,0xf9
  41a721:	cmp    DWORD PTR [esp+edi*2],ecx
  41a724:	push   edi
  41a725:	loope  0x41a6b1
  41a727:	and    ecx,edx
  41a729:	push   cs
  41a72a:	inc    esi
  41a72b:	xchg   ebp,eax
  41a72c:	push   ecx
  41a72d:	push   ecx
  41a72e:	pop    ds
  41a72f:	test   eax,0xbe572497
  41a734:	mov    al,ds:0x9d3959ef
  41a739:	aad    0x2
  41a73b:	dec    ebx
  41a73c:	mov    dh,BYTE PTR [esi-0x44d5c9c]
  41a742:	call   0xc7eb:0x5d5debf6
  41a749:	mov    dh,0xce
  41a74b:	mov    BYTE PTR [ebx],0xee
  41a74e:	hlt    
  41a74f:	jb     0x41a76e
  41a751:	outs   dx,DWORD PTR ds:[esi]
  41a752:	retf   0x2693
  41a755:	add    ebx,0x17df2f9c
  41a75b:	fild   QWORD PTR [ecx-0x3e706fb9]
  41a761:	imul   esi,DWORD PTR [esi+eax*1-0x7f],0x4d7d4b80
  41a769:	out    0xbe,eax
  41a76b:	aam    0xb4
  41a76d:	pushf  
  41a76e:	mov    ch,BYTE PTR [ebx]
  41a770:	cld    
  41a771:	and    al,bl
  41a773:	icebp  
  41a774:	cmp    al,0xa3
  41a776:	jl     0x41a6ff
  41a778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a779:	cmp    eax,0xdabf260
  41a77e:	(bad)  
  41a780:	in     eax,0x78
  41a782:	sub    eax,0x3a2adc54
  41a787:	lock add eax,0x65bf6828
  41a78d:	out    0x7f,al
  41a78f:	leave  
  41a790:	jnp    0x41a71d
  41a792:	rol    BYTE PTR [edx],cl
  41a794:	sbb    DWORD PTR [edx+0x529014b0],eax
  41a79a:	nop    DWORD PTR [esi-0x3a5e8b5d]
  41a7a1:	(bad)  
  41a7a2:	sbb    bh,ch
  41a7a4:	dec    eax
  41a7a5:	mov    cl,0x21
  41a7a7:	ret    
  41a7a8:	js     0x41a754
  41a7aa:	aam    0xa
  41a7ac:	lods   al,BYTE PTR fs:[esi]
  41a7ae:	sbb    eax,0x6d21489a
  41a7b3:	stc    
  41a7b4:	(bad)  
  41a7b5:	pushf  
  41a7b6:	adc    eax,0xb9b7c891
  41a7bb:	adc    eax,edx
  41a7bd:	das    
  41a7be:	or     dl,BYTE PTR ds:0x9b85fe90
  41a7c4:	dec    ebp
  41a7c5:	push   ds
  41a7c6:	adc    BYTE PTR [ebx+0x4f],bh
  41a7c9:	push   ebx
  41a7ca:	dec    ebx
  41a7cb:	repnz arpl ax,ax
  41a7ce:	es mov bl,0x7c
  41a7d1:	mov    ds:0xe479b1ba,al
  41a7d6:	(bad)  [esi]
  41a7d8:	adc    al,0x71
  41a7da:	test   eax,0xf7897b4b
  41a7df:	data16 test BYTE PTR ds:0x38bcc442,cl
  41a7e6:	jne    0x41a7e5
  41a7e8:	pop    ds
  41a7e9:	push   esi
  41a7ea:	or     eax,0xf6df03b3
  41a7ef:	inc    esp
  41a7f0:	dec    eax
  41a7f1:	mov    esp,0x4fb8931f
  41a7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f7:	(bad)  [eax]
  41a7f9:	adc    BYTE PTR [eax+0xd9e3674],ah
  41a7ff:	ja     0x41a781
  41a801:	ret    0xc62b
  41a804:	arpl   WORD PTR [ebp-0x44],dx
  41a807:	xor    al,0xec
  41a809:	cmp    edx,DWORD PTR [esp+edx*8-0xc]
  41a80d:	cmp    esp,DWORD PTR [ecx+0x3f7502db]
  41a813:	and    edi,DWORD PTR [ebx+0x38b8015a]
  41a819:	shr    DWORD PTR [esi],cl
  41a81b:	lock xchg DWORD PTR [ebx+ecx*1+0x3e],ebx
  41a820:	jecxz  0x41a7c6
  41a822:	test   eax,0xf36e8af3
  41a827:	mov    ah,0xd2
  41a829:	xchg   ecx,eax
  41a82a:	call   0x9dfd:0xab8fd507
  41a831:	rcr    DWORD PTR [ebx-0x3b],cl
  41a834:	test   BYTE PTR [eax+0x9],0xd6
  41a838:	jmp    0xed797a9a
  41a83d:	mov    eax,DWORD PTR [eax]
  41a83f:	stc    
  41a840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a841:	or     ebx,DWORD PTR [edx+ebp*4]
  41a844:	xchg   esi,eax
  41a845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a846:	push   ds
  41a847:	mov    ds:0x898d087c,eax
  41a84c:	ds pop ss
  41a84e:	mov    ebp,0x512463ea
  41a853:	lds    esp,FWORD PTR [eax]
  41a855:	dec    edx
  41a856:	in     al,dx
  41a857:	div    BYTE PTR [edi+0x603eb49e]
  41a85d:	loop   0x41a8da
  41a85f:	mov    bl,0xc6
  41a861:	imul   esp,edx,0x6d
  41a864:	and    BYTE PTR [esi-0x7d0db6cc],ch
  41a86a:	xchg   ebx,eax
  41a86b:	dec    edi
  41a86c:	dec    DWORD PTR [eax+0x55]
  41a86f:	xchg   DWORD PTR [edx+0x1c],esp
  41a872:	ret    
  41a873:	and    ah,dh
  41a875:	jb     0x41a823
  41a877:	in     eax,dx
  41a878:	dec    ebx
  41a879:	pop    ecx
  41a87a:	iret   
  41a87b:	adc    ecx,ebp
  41a87d:	jo     0x41a848
  41a87f:	mov    ebx,0xc71a104
  41a884:	push   ebx
  41a885:	push   0x5f010845
  41a88a:	mov    DWORD PTR [eax+0x2c7aaf21],ebp
  41a890:	jmp    0x41a8aa
  41a892:	jo     0x41a8e2
  41a894:	into   
  41a895:	mov    dl,0x89
  41a897:	jne    0x41a8fd
  41a899:	sbb    eax,0x34aa9769
  41a89e:	mov    edx,0x5cbe86ba
  41a8a3:	scas   eax,DWORD PTR es:[edi]
  41a8a4:	icebp  
  41a8a5:	jle    0x41a838
  41a8a7:	(bad)  
  41a8a8:	rcl    BYTE PTR [ebx+0xb],1
  41a8ab:	(bad)  
  41a8ae:	xor    BYTE PTR [esi-0x7c4876db],bl
  41a8b4:	sbb    ch,BYTE PTR [edi+0x69]
  41a8b7:	js     0x41a8bc
  41a8b9:	pop    edx
  41a8ba:	xlat   BYTE PTR ds:[ebx]
  41a8bb:	lock fsubr QWORD PTR [esi]
  41a8be:	adc    DWORD PTR [eax+eiz*8],esi
  41a8c1:	xlat   BYTE PTR ds:[ebx]
  41a8c2:	or     eax,0x23371ac5
  41a8c7:	jb     0x41a915
  41a8c9:	test   DWORD PTR [edi-0x71],eax
  41a8cc:	jno    0x41a869
  41a8ce:	or     eax,0x34b81992
  41a8d3:	jno    0x41a8dd
  41a8d5:	push   0x297bf1a8
  41a8da:	xchg   edi,ebx
  41a8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8dd:	mov    bl,0x4f
  41a8df:	or     eax,0x6be97705
  41a8e4:	cmp    al,BYTE PTR [ebx]
  41a8e6:	neg    DWORD PTR [eax+0x0]
  41a8e9:	xor    cl,BYTE PTR [edi+0x2d54704b]
  41a8ef:	sub    eax,0xb7d7e581
  41a8f4:	dec    ecx
  41a8f5:	je     0x41a913
  41a8f7:	leave  
  41a8f8:	loopne 0x41a898
  41a8fa:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a8fc:	lea    edi,ds:0x967e58ab
  41a902:	adc    esi,ecx
  41a904:	mov    eax,DWORD PTR ds:0xfcc6bf01
  41a90a:	cmp    dl,BYTE PTR [eax+ebp*1+0x56b1854e]
  41a911:	adc    BYTE PTR ds:0x5ee314cb,dl
  41a917:	mov    es,WORD PTR [ecx-0x5e]
  41a91a:	leave  
  41a91b:	cwde   
  41a91c:	cmp    eax,DWORD PTR ds:[ebx]
  41a91f:	adc    esi,eax
  41a921:	xor    eax,0xe9f56ad6
  41a926:	jle    0x41a8b3
  41a928:	test   al,0x49
  41a92a:	xor    BYTE PTR [eax],bh
  41a92c:	scas   al,BYTE PTR es:[edi]
  41a92d:	adc    DWORD PTR ds:0xddab7d60,eax
  41a933:	rcr    BYTE PTR [esi+0x45],cl
  41a936:	cld    
  41a937:	sbb    BYTE PTR [eax+0x5e],bl
  41a93a:	fidiv  DWORD PTR [eax]
  41a93c:	jmp    0x516c:0x9275f06
  41a943:	mov    ch,0xae
  41a945:	cmp    BYTE PTR [ecx],ch
  41a947:	es popf 
  41a949:	jno    0x41a8d8
  41a94b:	push   edi
  41a94c:	int    0xf2
  41a94e:	xor    DWORD PTR [ecx],0xffffff8c
  41a951:	mov    ds:0x5c2ff476,al
  41a956:	arpl   dx,di
  41a958:	sub    BYTE PTR [ebp+0x38],dl
  41a95b:	jecxz  0x41a962
  41a95d:	and    eax,0x9606a0a4
  41a962:	push   cs
  41a963:	test   al,0x1a
  41a965:	xchg   BYTE PTR [ebx+0x33b2b8d8],ah
  41a96b:	icebp  
  41a96c:	cmp    esi,ebp
  41a96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a96f:	arpl   WORD PTR [eax+0x6b],cx
  41a972:	mov    esi,0x587a647
  41a977:	lods   al,BYTE PTR ds:[esi]
  41a978:	sbb    bl,BYTE PTR [ecx+edi*4]
  41a97b:	mov    edx,0x8eeffbb3
  41a980:	push   ecx
  41a981:	jns    0x41a99b
  41a983:	or     edx,DWORD PTR [ecx-0x28225004]
  41a989:	inc    ebx
  41a98a:	call   0xbfc2:0x386b8966
  41a991:	or     DWORD PTR [edi+esi*2+0x68],esp
  41a995:	fst    DWORD PTR [eax]
  41a997:	or     eax,0x44839e28
  41a99c:	pop    edi
  41a99d:	clc    
  41a99e:	xchg   edx,eax
  41a99f:	push   ds
  41a9a0:	in     eax,0x47
  41a9a2:	mov    ds:0xb7847b85,al
  41a9a7:	fisttp QWORD PTR [edi]
  41a9a9:	pop    ecx
  41a9aa:	and    edx,ebx
  41a9ac:	shl    cl,cl
  41a9ae:	sub    al,0xde
  41a9b0:	dec    edx
  41a9b1:	dec    ebx
  41a9b2:	jle    0x41a981
  41a9b4:	repz in eax,0x6a
  41a9b7:	xor    ebx,DWORD PTR [ebx]
  41a9b9:	cmp    bh,BYTE PTR [ecx+eax*2-0xc]
  41a9bd:	jbe    0x41a9dd
  41a9bf:	sar    ah,0x1f
  41a9c2:	xor    bl,al
  41a9c4:	jl     0x41a97d
  41a9c6:	mov    cl,0xea
  41a9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c9:	mov    dl,0x45
  41a9cb:	mov    ch,0x32
  41a9cd:	pop    esi
  41a9ce:	push   edx
  41a9cf:	mov    ah,0xc2
  41a9d1:	pop    ebx
  41a9d2:	fist   DWORD PTR [edx]
  41a9d4:	int3   
  41a9d5:	mov    dh,BYTE PTR [ebx]
  41a9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d8:	clc    
  41a9d9:	popa   
  41a9da:	lods   al,BYTE PTR ds:[esi]
  41a9db:	outs   dx,DWORD PTR ds:[esi]
  41a9dc:	ror    dl,cl
  41a9de:	jno    0x41aa2c
  41a9e0:	mov    DWORD PTR [edi+0x3ad0319d],esi
  41a9e6:	push   0x12ad4ecf
  41a9eb:	test   esi,edi
  41a9ed:	push   ds
  41a9ee:	cmp    BYTE PTR [eax-0x6a],bl
  41a9f1:	test   al,0x68
  41a9f3:	lods   eax,DWORD PTR ds:[esi]
  41a9f4:	xchg   edi,eax
  41a9f5:	jl     0x41a9b5
  41a9f7:	fsubp  st(5),st
  41a9f9:	sub    BYTE PTR [edi+esi*8-0x73],ah
  41a9fd:	push   ds
  41a9fe:	mov    eax,0x7a30e96d
  41aa03:	xchg   bh,dh
  41aa05:	ins    BYTE PTR es:[edi],dx
  41aa06:	mov    eax,ds:0x606ef090
  41aa0b:	xor    eax,DWORD PTR [edi]
  41aa0d:	stos   BYTE PTR es:[edi],al
  41aa0e:	fs or  esp,edi
  41aa11:	xchg   ecx,eax
  41aa12:	retf   
  41aa13:	out    dx,al
  41aa14:	les    edi,FWORD PTR [ebx-0x34]
  41aa17:	ret    0xb77b
  41aa1a:	adc    bh,al
  41aa1c:	mov    eax,0x2ac52662
  41aa21:	inc    ebx
  41aa22:	cdq    
  41aa23:	dec    esi
  41aa24:	mov    esi,0x30e284bf
  41aa29:	xor    dh,dl
  41aa2b:	xlat   BYTE PTR ds:[ebx]
  41aa2c:	add    dh,BYTE PTR [eax]
  41aa2e:	js     0x41aaa9
  41aa30:	cdq    
  41aa31:	pop    edx
  41aa32:	lea    ebp,[edi]
  41aa34:	fwait
  41aa35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa36:	push   ss
  41aa37:	push   ebx
  41aa38:	(bad)  
  41aa39:	in     eax,0x74
  41aa3b:	popa   
  41aa3c:	pushf  
  41aa3d:	(bad)  
  41aa3e:	xchg   BYTE PTR [esi],bh
  41aa40:	out    0x98,eax
  41aa42:	push   ds
  41aa43:	aad    0xcf
  41aa45:	xor    eax,0x613e0d28
  41aa4a:	xchg   ecx,eax
  41aa4b:	pop    edi
  41aa4c:	and    BYTE PTR [eax+0x1f],dh
  41aa4f:	inc    ebp
  41aa50:	sbb    DWORD PTR [ecx+0x71],esp
  41aa53:	(bad)  
  41aa56:	dec    edi
  41aa57:	jp     0x41aa30
  41aa59:	fld    QWORD PTR [eax]
  41aa5b:	push   esi
  41aa5c:	push   esi
  41aa5d:	xchg   edx,eax
  41aa5e:	das    
  41aa5f:	cs out 0x25,eax
  41aa62:	push   ebp
  41aa63:	retf   
  41aa64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa65:	sub    eax,0x40733f96
  41aa6a:	call   0x580f806a
  41aa6f:	ins    BYTE PTR es:[edi],dx
  41aa70:	sbb    ebp,eax
  41aa72:	dec    eax
  41aa73:	fld    DWORD PTR [eax+0x3d]
  41aa76:	in     eax,dx
  41aa77:	inc    esp
  41aa78:	inc    edx
  41aa79:	mov    dl,0xc9
  41aa7b:	sub    edi,DWORD PTR [eax-0x47]
  41aa7e:	clc    
  41aa7f:	fld    DWORD PTR [esi+edi*2+0x1a]
  41aa83:	sub    BYTE PTR [esi-0x16e44d54],ch
  41aa89:	inc    ecx
  41aa8a:	fistp  WORD PTR [ebp+0x1a]
  41aa8d:	inc    ebx
  41aa8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa8f:	mov    eax,ds:0xff781ddd
  41aa94:	dec    edi
  41aa95:	push   0x3e3afecb
  41aa9a:	jge    0x41aae5
  41aa9c:	jge    0x41aae0
  41aa9e:	mov    edi,esi
  41aaa0:	cmp    eax,0x29a1fb18
  41aaa5:	jns    0x41aa44
  41aaa7:	or     eax,0x9adbdae1
  41aaac:	push   0x1e
  41aaae:	mov    bh,0xc5
  41aab0:	pop    es
  41aab1:	mov    es,WORD PTR [eax-0x5a4355e7]
  41aab7:	or     eax,0xb2f04706
  41aabc:	aas    
  41aabd:	adc    ch,dl
  41aabf:	mov    ds:0x3652e96a,eax
  41aac4:	nop
  41aac5:	xchg   ebx,eax
  41aac6:	pop    ds
  41aac7:	inc    ebp
  41aac8:	cmp    al,0xc0
  41aaca:	rcl    DWORD PTR [ebx-0x54b40566],1
  41aad0:	xchg   DWORD PTR [eax],edi
  41aad2:	rcl    BYTE PTR [ecx+ecx*4],1
  41aad5:	sub    al,0x87
  41aad7:	add    ebx,eax
  41aad9:	retf   
  41aada:	jle    0x41ab01
  41aadc:	enter  0x5df6,0xec
  41aae0:	outs   dx,BYTE PTR ds:[esi]
  41aae1:	data16 aas 
  41aae3:	es scas eax,DWORD PTR es:[edi]
  41aae5:	jb     0x41ab59
  41aae7:	out    0x26,al
  41aae9:	jmp    0xe373:0x193a18b9
  41aaf0:	mov    esi,0x9df41dbe
  41aaf5:	and    al,bh
  41aaf7:	data16 xlat BYTE PTR ds:[ebx]
  41aaf9:	mov    ch,BYTE PTR [ecx-0x401ff643]
  41aaff:	push   esi
  41ab00:	xor    edx,ebp
  41ab02:	mov    cl,0x61
  41ab04:	iret   
  41ab05:	test   al,0x32
  41ab07:	aas    
  41ab08:	into   
  41ab09:	sahf   
  41ab0a:	cmp    BYTE PTR [ecx],dl
  41ab0c:	cmp    al,0xf
  41ab0e:	cld    
  41ab0f:	into   
  41ab10:	cmp    al,0x26
  41ab12:	nop
  41ab13:	aam    0x55
  41ab15:	imul   edi,DWORD PTR [edx-0x4dad549c],0x33
  41ab1c:	test   al,0x35
  41ab1e:	and    BYTE PTR [esi],bl
  41ab20:	adc    esi,DWORD PTR [esi]
  41ab22:	and    ch,0x53
  41ab25:	mov    ah,0xc6
  41ab27:	clc    
  41ab28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab29:	mov    ds:0xfc09c7d3,eax
  41ab2e:	mov    dh,0x24
  41ab30:	cmp    DWORD PTR [ebx],esp
  41ab32:	fcom   QWORD PTR [ebx+0x26]
  41ab35:	in     eax,dx
  41ab36:	jnp    0x41ab57
  41ab38:	ins    BYTE PTR es:[edi],dx
  41ab39:	out    0x45,eax
  41ab3b:	sar    BYTE PTR [ecx+0x5cd0beb6],0x85
  41ab42:	scas   eax,DWORD PTR es:[edi]
  41ab43:	ja     0x41abb9
  41ab45:	jo     0x41ab7a
  41ab47:	(bad)  
  41ab49:	dec    ecx
  41ab4a:	jnp    0x41ab2a
  41ab4c:	in     eax,dx
  41ab4d:	xchg   DWORD PTR [edi],ecx
  41ab4f:	(bad)  
  41ab50:	and    BYTE PTR [ebp+ebp*8+0x70bd8c5d],bh
  41ab57:	inc    ecx
  41ab58:	stos   DWORD PTR es:[edi],eax
  41ab59:	retf   0x937c
  41ab5c:	sub    BYTE PTR [ebx],ah
  41ab5e:	push   esp
  41ab5f:	pop    bp
  41ab61:	inc    esp
  41ab62:	and    al,0xab
  41ab64:	pop    esp
  41ab65:	pop    ebx
  41ab66:	and    ebp,DWORD PTR [ecx]
  41ab68:	pop    ebx
  41ab69:	leave  
  41ab6a:	lods   eax,DWORD PTR ds:[esi]
  41ab6b:	inc    edx
  41ab6c:	cmp    DWORD PTR [ebp-0x23],eax
  41ab6f:	rcl    DWORD PTR [esi],1
  41ab71:	inc    ebx
  41ab72:	mov    ebx,0x9f834743
  41ab77:	(bad)
  41ab7b:	add    DWORD PTR [esi],0xffffffeb
  41ab7e:	test   DWORD PTR ds:0x180d9ca3,edx
  41ab84:	mov    dl,0x32
  41ab86:	pop    ebx
  41ab87:	pop    ebx
  41ab88:	sbb    eax,0x28330d98
  41ab8d:	(bad)  
  41ab8e:	jne    0x41ab7b
  41ab90:	xchg   edi,eax
  41ab91:	lods   al,BYTE PTR ds:[esi]
  41ab92:	fs ret 
  41ab94:	aas    
  41ab95:	jge    0x41ac0c
  41ab97:	and    dl,BYTE PTR [ebp-0xd]
  41ab9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab9b:	mov    bh,0xf
  41ab9d:	ja     0x41abbe
  41ab9f:	mov    ecx,0x8c0a9fb0
  41aba4:	adc    al,0xb1
  41aba6:	add    edx,DWORD PTR [ebx+0x6f]
  41aba9:	sar    DWORD PTR [ecx-0x47],1
  41abac:	gs or  al,0xe0
  41abaf:	ret    
  41abb0:	rcr    bl,cl
  41abb2:	aam    0x4f
  41abb4:	sub    ah,BYTE PTR [eax]
  41abb6:	ja     0x41ac17
  41abb8:	div    BYTE PTR [ebx+0x79]
  41abbb:	pop    ss
  41abbc:	bound  ebx,QWORD PTR [eax-0x4b]
  41abbf:	dec    edi
  41abc0:	xchg   edx,eax
  41abc1:	mov    al,0xd7
  41abc3:	jo     0x41abc7
  41abc5:	ret    
  41abc6:	adc    dh,ah
  41abc8:	in     eax,0x90
  41abca:	xchg   ecx,eax
  41abcb:	fiadd  WORD PTR [eax]
  41abcd:	xchg   edx,eax
  41abce:	jbe    0x41ab97
  41abd0:	sar    BYTE PTR [ebx-0xc],cl
  41abd3:	inc    eax
  41abd4:	push   eax
  41abd5:	sahf   
  41abd6:	outs   dx,BYTE PTR ds:[esi]
  41abd7:	in     eax,0x37
  41abd9:	xor    al,0x91
  41abdb:	popf   
  41abdc:	cmp    DWORD PTR [edx],eax
  41abde:	and    bl,dh
  41abe0:	test   BYTE PTR [edx-0x6],ah
  41abe3:	push   ebp
  41abe4:	popf   
  41abe5:	(bad)  
  41abe6:	or     dl,BYTE PTR [esi]
  41abe8:	xlat   BYTE PTR ds:[ebx]
  41abe9:	into   
  41abea:	push   0xdfb8b815
  41abef:	push   eax
  41abf0:	pop    ebx
  41abf1:	sbb    al,0x97
  41abf3:	dec    ecx
  41abf4:	lds    edi,FWORD PTR [eax]
  41abf6:	dec    ecx
  41abf7:	shr    DWORD PTR [edx],cl
  41abf9:	inc    edx
  41abfa:	dec    edi
  41abfb:	mov    BYTE PTR [edi],ch
  41abfd:	jo     0x41ac0b
  41abff:	xor    eax,ebp
  41ac01:	gs std 
  41ac03:	push   ebx
  41ac04:	std    
  41ac05:	xchg   esp,eax
  41ac06:	pop    ds
  41ac07:	aam    0x75
  41ac09:	push   edx
  41ac0a:	out    dx,eax
  41ac0b:	fild   QWORD PTR [ebx+esi*4+0x2e]
  41ac0f:	or     DWORD PTR [edx],esp
  41ac11:	cmp    al,BYTE PTR [ecx-0x44]
  41ac14:	xchg   esi,eax
  41ac15:	lock popa 
  41ac17:	dec    esp
  41ac18:	sbb    BYTE PTR [esi-0x8],dh
  41ac1b:	add    DWORD PTR [eax+0x45],ebx
  41ac1e:	xor    eax,0xad69cde7
  41ac23:	repnz mov edi,0xc8876225
  41ac29:	cld    
  41ac2a:	in     al,0x8c
  41ac2c:	mov    esp,0xc88ff37f
  41ac31:	cmp    ecx,DWORD PTR [edx+0x2f1e1119]
  41ac37:	sbb    esp,eax
  41ac39:	dec    ebp
  41ac3a:	shl    DWORD PTR [esi-0x5b5cc7c5],1
  41ac40:	(bad)  
  41ac41:	leave  
  41ac42:	xor    eax,0x529a800
  41ac47:	push   es
  41ac48:	dec    esi
  41ac49:	fcomp  QWORD PTR [eax+ebx*2+0x1e]
  41ac4d:	jmp    0x90e:0x7c4e1c35
  41ac54:	outs   dx,BYTE PTR ds:[esi]
  41ac55:	pop    edi
  41ac56:	gs adc ch,al
  41ac59:	fwait
  41ac5a:	into   
  41ac5b:	jns    0x41abde
  41ac5d:	fld    QWORD PTR [edx]
  41ac5f:	call   DWORD PTR ds:0x8c1f664b
  41ac65:	cwde   
  41ac66:	xlat   BYTE PTR ds:[ebx]
  41ac67:	push   ebx
  41ac69:	inc    eax
  41ac6a:	sub    dh,al
  41ac6c:	arpl   ax,bp
  41ac6e:	sbb    al,0x9a
  41ac70:	sbb    BYTE PTR [eax+0xc7c116f],cl
  41ac76:	inc    ebx
  41ac77:	xchg   ecx,eax
  41ac78:	mov    edi,0x2755f0ca
  41ac7d:	aam    0xc7
  41ac7f:	mov    esp,DWORD PTR gs:[esi+edi*4]
  41ac83:	ret    
  41ac84:	mov    eax,0xceb541ce
  41ac89:	retf   
  41ac8a:	jmp    0x41aca9
  41ac8c:	or     ebx,DWORD PTR [ebx+0x230e5e0e]
  41ac92:	leave  
  41ac93:	(bad)  
  41ac94:	mov    DWORD PTR [eax],ecx
  41ac96:	retf   0xda83
  41ac99:	inc    esi
  41ac9a:	add    bl,BYTE PTR ds:0x718e8c7b
  41aca0:	xchg   edx,eax
  41aca1:	or     ebp,DWORD PTR [edi+0x4dbdf299]
  41aca7:	and    eax,0x2f07f95a
  41acac:	mov    edx,0xce7e9ec
  41acb1:	mov    bh,ch
  41acb3:	pop    ecx
  41acb4:	xchg   ebp,eax
  41acb5:	xor    BYTE PTR fs:[ecx-0x261d5db1],dh
  41acbc:	clc    
  41acbd:	imul   edx,DWORD PTR [ebx-0x3a],0x44
  41acc1:	xchg   ebp,eax
  41acc2:	fadd   DWORD PTR [ebx+0x79a2c744]
  41acc8:	sbb    BYTE PTR [edi+ebx*8+0x4f56beb2],ah
  41accf:	in     al,dx
  41acd0:	ins    DWORD PTR es:[edi],dx
  41acd1:	add    esi,edi
  41acd3:	popf   
  41acd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd5:	mov    edx,0x544fbe4a
  41acda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acdb:	jg     0x41ad01
  41acdd:	xor    bl,BYTE PTR [esi-0x4765a834]
  41ace3:	out    0xa,eax
  41ace5:	dec    ebx
  41ace6:	cdq    
  41ace7:	or     DWORD PTR [edi+0x6b254b41],esp
  41aced:	dec    esp
  41acee:	xchg   edi,eax
  41acef:	sub    al,0xf2
  41acf1:	jnp    0x41acb3
  41acf3:	in     eax,dx
  41acf4:	mov    ebx,0x20f9f375
  41acf9:	lock retf 
  41acfb:	(bad)
  41acff:	cdq    
  41ad00:	fldcw  WORD PTR [esi+0x6b]
  41ad03:	jbe    0x41ad7d
  41ad05:	adc    BYTE PTR ds:0xab68c98,0xd4
  41ad0c:	or     al,0x11
  41ad0e:	add    BYTE PTR [bp-0x4645],0xb1
  41ad14:	gs mov edi,ebp
  41ad17:	mov    ss,esi
  41ad19:	add    DWORD PTR ds:0xec8fe0e7,0x57
  41ad20:	scas   eax,DWORD PTR es:[edi]
  41ad21:	xchg   edi,eax
  41ad22:	loop   0x41ad64
  41ad24:	ja     0x41acb6
  41ad26:	jne    0x41ad67
  41ad28:	aas    
  41ad29:	lods   al,BYTE PTR ds:[esi]
  41ad2a:	inc    DWORD PTR [edx+ecx*2+0x186032e9]
  41ad31:	sti    
  41ad32:	inc    esp
  41ad33:	sqrtps xmm4,XMMWORD PTR [ebp+0x44]
  41ad37:	int3   
  41ad38:	jnp    0x41acbb
  41ad3a:	das    
  41ad3b:	add    eax,DWORD PTR [ebx-0x325ca4da]
  41ad41:	cwde   
  41ad42:	xor    eax,0xa9d5d911
  41ad47:	test   DWORD PTR [ebp-0xc7edc7e],edi
  41ad4d:	mov    eax,ds:0x90da2b8b
  41ad52:	ins    DWORD PTR es:[edi],dx
  41ad53:	mov    DWORD PTR [esi+0x63d6e69c],esi
  41ad59:	jge    0x41ad3e
  41ad5b:	jno    0x41ad69
  41ad5d:	push   es
  41ad5e:	mov    dl,0xf8
  41ad60:	xchg   esi,eax
  41ad61:	push   ds
  41ad62:	jae    0x41ad8b
  41ad64:	rcl    ch,1
  41ad66:	and    ebx,DWORD PTR [edi+eiz*1+0x12ad406d]
  41ad6d:	call   0x83d:0x9531a3ef
  41ad74:	shl    BYTE PTR [ebp+0x23],0xd8
  41ad78:	dec    ebp
  41ad79:	sbb    DWORD PTR [edi-0x3dc31f7e],esi
  41ad7f:	lods   al,BYTE PTR ds:[esi]
  41ad80:	fld    DWORD PTR [esi+eax*8]
  41ad83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad84:	mov    ebx,0x69f2e556
  41ad89:	xor    esi,DWORD PTR [edx-0x455053b5]
  41ad8f:	push   ebx
  41ad90:	clc    
  41ad91:	xchg   esi,eax
  41ad92:	xchg   esp,eax
  41ad93:	xchg   DWORD PTR [edi],ebp
  41ad95:	mov    ah,0x1f
  41ad97:	push   edi
  41ad98:	stc    
  41ad99:	enter  0xbf6e,0x70
  41ad9d:	js     0x41ae02
  41ad9f:	jns    0x41adc5
  41ada1:	mov    ah,0x58
  41ada3:	mov    esp,0xd7422d48
  41ada8:	ds cdq 
  41adaa:	mov    esp,0x4f00aae8
  41adaf:	mov    dh,0x30
  41adb1:	dec    ecx
  41adb2:	adc    DWORD PTR [edx-0x7091d9ff],esi
  41adb8:	fld    DWORD PTR [edi+0x5f]
  41adbb:	rcr    BYTE PTR [eax],1
  41adbd:	mov    ch,0x30
  41adbf:	inc    ebx
  41adc0:	adc    cl,0xd1
  41adc3:	sbb    eax,0xedccbf0c
  41adc8:	pop    ebp
  41adc9:	mov    ch,0xbc
  41adcb:	mov    ch,0x7a
  41adcd:	or     edi,ebp
  41adcf:	mov    ch,0xff
  41add1:	mov    WORD PTR [esi+0x15217c6c],gs
  41add7:	jo     0x41ad73
  41add9:	add    BYTE PTR [ebp-0x1e7e3202],bh
  41addf:	inc    eax
  41ade0:	call   FWORD PTR [edi+0x42b1cd66]
  41ade6:	pop    ecx
  41ade7:	add    ecx,edx
  41ade9:	and    DWORD PTR [ebx+0x4272c287],eax
  41adef:	test   DWORD PTR [ecx-0x522f8cd],ebx
  41adf5:	call   0xe0e03d64
  41adfa:	xor    al,cl
  41adfc:	dec    ebp
  41adfd:	icebp  
  41adfe:	pushf  
  41adff:	pop    esi
  41ae00:	add    eax,0x234cd834
  41ae05:	out    dx,al
  41ae06:	je     0x41addf
  41ae08:	mov    ds:0xda6de3b0,al
  41ae0d:	in     al,0x75
  41ae0f:	xor    eax,0x3268048f
  41ae14:	(bad)  
  41ae16:	and    eax,0x510e4826
  41ae1c:	fcomp  QWORD PTR [ebx+0x3481e95d]
  41ae22:	push   ds
  41ae23:	jmp    0xe2d7:0xc865216
  41ae2a:	fcomp  DWORD PTR [edi-0x3a]
  41ae2d:	mov    esi,0x26da318
  41ae32:	inc    ecx
  41ae33:	mov    bl,ch
  41ae35:	pop    edi
  41ae36:	inc    ebx
  41ae37:	adc    ch,BYTE PTR [ebp+0x67]
  41ae3a:	jnp    0x41ae9f
  41ae3c:	inc    eax
  41ae3d:	retf   
  41ae3e:	or     eax,0xbf3d70be
  41ae43:	jbe    0x41ae83
  41ae45:	data16 not BYTE PTR [ebp+0x71]
  41ae49:	dec    eax
  41ae4a:	ror    edi,1
  41ae4c:	pop    ds
  41ae4d:	loope  0x41ade8
  41ae4f:	sbb    eax,0xd3124665
  41ae54:	mov    al,ds:0x23b959ef
  41ae59:	sbb    BYTE PTR [edx-0x3f89b388],al
  41ae5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae60:	add    eax,ebx
  41ae62:	loop   0x41ae7b
  41ae64:	mov    esi,0x234a6265
  41ae69:	mov    dl,0x9
  41ae6b:	pop    ebx
  41ae6c:	fwait
  41ae6d:	add    ch,al
  41ae6f:	icebp  
  41ae70:	and    dl,bh
  41ae72:	out    0x2e,al
  41ae74:	pop    ds
  41ae75:	inc    esp
  41ae76:	push   ss
  41ae77:	iret   
  41ae78:	lods   eax,DWORD PTR ds:[esi]
  41ae79:	(bad)  
  41ae7a:	sbb    dh,al
  41ae7c:	das    
  41ae7d:	or     al,0xb4
  41ae7f:	and    edi,ebp
  41ae81:	adc    DWORD PTR [ecx-0x66ee9bcf],0xffffffd0
  41ae88:	fnstsw WORD PTR [edx+0x1a7d8c26]
  41ae8e:	adc    eax,DWORD PTR [edi]
  41ae90:	mov    ss,WORD PTR [edx-0x2cb75736]
  41ae96:	mov    ecx,0x3417164f
  41ae9b:	inc    eax
  41ae9c:	adc    eax,0x8a32e89d
  41aea1:	jmp    0x827a683b
  41aea6:	(bad)  [ebp-0x5b]
  41aea9:	ror    esp,cl
  41aeab:	xor    esi,ebp
  41aead:	adc    BYTE PTR [edi+0x7f162de],0xf7
  41aeb4:	mov    bl,0xd
  41aeb6:	outs   dx,DWORD PTR ds:[esi]
  41aeb7:	call   0x99d2:0x38c236a1
  41aebe:	addr16 dec ecx
  41aec0:	test   al,0xaa
  41aec2:	stc    
  41aec3:	cwde   
  41aec4:	mov    ah,al
  41aec6:	mov    DWORD PTR [esi+0x4646af2b],eax
  41aecc:	xor    al,BYTE PTR [edx+0x2c]
  41aecf:	add    al,0x72
  41aed1:	arpl   WORD PTR [ebx+0x13e9727a],dx
  41aed7:	and    eax,0x4fb7d9ee
  41aedc:	jb     0x41af08
  41aede:	test   ebp,esi
  41aee0:	mov    fs,WORD PTR [ebx-0x5b]
  41aee3:	and    bh,BYTE PTR [eax-0x71d7f340]
  41aee9:	mov    BYTE PTR [edi-0x3ff77b7f],dl
  41aeef:	lods   eax,DWORD PTR ds:[esi]
  41aef0:	cmp    BYTE PTR [esi],dl
  41aef2:	mov    DWORD PTR [ebp+0x4a0f9319],ebp
  41aef8:	and    BYTE PTR [esi+0x5fdf883f],dl
  41aefe:	jmp    0xed51:0xa02bd7b0
  41af05:	daa    
  41af06:	pop    esi
  41af07:	xor    eax,0xf078ce1b
  41af0c:	mov    al,ds:0x22555446
  41af11:	jns    0x41af1c
  41af13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af14:	je     0x41af70
  41af16:	jp     0x41aef5
  41af18:	(bad)  
  41af19:	call   0xad26c6df
  41af1e:	imul   ecx,DWORD PTR [esp+esi*1+0x3c],0xffffffdb
  41af23:	imul   edx,DWORD PTR [edx+0x602727e],0x73
  41af2a:	ss sbb al,0xe8
  41af2d:	dec    ecx
  41af2e:	xchg   ebp,eax
  41af2f:	into   
  41af30:	add    BYTE PTR [edi+0x28],bl
  41af33:	jnp    0x41afaa
  41af35:	push   edi
  41af36:	inc    esp
  41af37:	mov    ds:0xa802d6ef,eax
  41af3c:	cld    
  41af3d:	pusha  
  41af3e:	mov    ds:0x62752a57,al
  41af43:	prefetch BYTE PTR [ebp-0x1]
  41af47:	int    0xc1
  41af49:	scas   al,BYTE PTR es:[edi]
  41af4a:	xchg   ebp,eax
  41af4b:	sbb    DWORD PTR ds:0x86fe76ff,edi
  41af51:	xchg   ebx,eax
  41af52:	clc    
  41af53:	ret    0x12c3
  41af56:	cwde   
  41af57:	dec    esp
  41af58:	fmul   QWORD PTR [esi-0x6a]
  41af5b:	std    
  41af5c:	xor    cl,cl
  41af5e:	scas   eax,DWORD PTR es:[edi]
  41af5f:	test   BYTE PTR [esi],dh
  41af61:	cmc    
  41af62:	popa   
  41af63:	sbb    bh,cl
  41af65:	and    BYTE PTR ds:0x4805d754,al
  41af6b:	pusha  
  41af6c:	push   esi
  41af6d:	loope  0x41af8c
  41af6f:	stos   DWORD PTR es:[edi],eax
  41af70:	mul    BYTE PTR [edi+0x6f]
  41af73:	jae    0x41af4e
  41af75:	popa   
  41af76:	push   edx
  41af77:	in     al,0x87
  41af79:	out    dx,al
  41af7a:	mov    ecx,0x19944fa
  41af7f:	lock dec edx
  41af81:	xchg   edx,eax
  41af82:	shl    BYTE PTR [edx],0x18
  41af85:	aad    0xf7
  41af87:	repz xor DWORD PTR [edx],ebp
  41af8a:	ds es dec esi
  41af8d:	cmp    eax,0xb3b302aa
  41af92:	mov    edi,0x61b3291
  41af97:	jnp    0x41af44
  41af99:	dec    edx
  41af9a:	push   esi
  41af9b:	out    0xc,eax
  41af9d:	sahf   
  41af9e:	and    eax,0x9283b79f
  41afa3:	jecxz  0x41afa3
  41afa5:	cmp    DWORD PTR [ecx],ecx
  41afa7:	shl    BYTE PTR [ebp-0x5f8bcd0d],0x83
  41afae:	retf   
  41afaf:	add    DWORD PTR [esi-0x6],edi
  41afb2:	mov    ds:0x11d362d9,al
  41afb7:	out    0xc7,eax
  41afb9:	mov    esi,DWORD PTR [ecx]
  41afbb:	and    eax,0x5f149021
  41afc0:	sti    
  41afc1:	or     bh,al
  41afc3:	cmp    ecx,DWORD PTR [ebp+0x3621bd22]
  41afc9:	addr16 jne 0x41afd7
  41afcc:	ret    
  41afcd:	mov    DWORD PTR ds:0x747d8123,eax
  41afd3:	xchg   ebp,eax
  41afd4:	mov    dh,0xbf
  41afd6:	int    0xef
  41afd8:	push   ss
  41afd9:	cs mov bh,0xdf
  41afdc:	jb     0x41afbf
  41afde:	outs   dx,BYTE PTR ds:[esi]
  41afdf:	add    al,0xa7
  41afe1:	sub    eax,0xf657771b
  41afe6:	xor    eax,0x17217133
  41afeb:	rcr    BYTE PTR [edx+0x8540c19],1
  41aff1:	and    BYTE PTR [edi-0x50ce8e62],dl
  41aff7:	dec    eax
  41aff8:	xor    cl,dh
  41affa:	enter  0x94db,0x8c
  41affe:	sub    al,0x3b
  41b000:	aad    0x2a
  41b002:	in     eax,dx
  41b003:	jmp    0x58bf:0x98f17c10
  41b00a:	jns    0x41afb1
  41b00c:	xor    eax,DWORD PTR [ebp+0x580cca6f]
  41b012:	or     al,0x90
  41b014:	sti    
  41b015:	retf   
  41b016:	pop    ecx
  41b017:	mov    ecx,0xc4106a0d
  41b01c:	mov    edi,0x684becee
  41b021:	mov    gs,WORD PTR [ecx-0x1f0cf61c]
  41b027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b028:	loop   0x41b098
  41b02a:	es jl  0x41b056
  41b02d:	add    DWORD PTR [edx],esi
  41b02f:	shl    BYTE PTR [ebp*8-0x66bca875],0xf1
  41b037:	jmp    0x6022:0x1f310e49
  41b03e:	fdiv   st,st(0)
  41b040:	pop    esi
  41b041:	xchg   edi,eax
  41b042:	xlat   BYTE PTR ds:[ebx]
  41b043:	mov    ds:0xa888eaf3,eax
  41b048:	scas   eax,DWORD PTR es:[edi]
  41b049:	call   0xcee8:0x60f389ca
  41b050:	repz pop edx
  41b052:	push   esp
  41b053:	push   edi
  41b054:	mov    esp,0x98d28ff3
  41b059:	cmp    DWORD PTR [eax-0x7489c110],esp
  41b05f:	rcl    DWORD PTR [esi+0x1e],0x0
  41b063:	fidiv  WORD PTR [esi-0x6edb3422]
  41b069:	inc    esi
  41b06a:	inc    ebx
  41b06b:	aam    0x70
  41b06d:	mul    ebx
  41b06f:	adc    al,0x77
  41b071:	dec    edx
  41b072:	mov    ds:0xf4fa2d6d,eax
  41b077:	xchg   esi,eax
  41b078:	popa   
  41b079:	out    dx,al
  41b07a:	ror    DWORD PTR [eax+0x42],0x40
  41b07e:	pop    esi
  41b07f:	xor    DWORD PTR [edx+0x4f],ecx
  41b082:	xor    dl,BYTE PTR ss:[esi]
  41b085:	adc    DWORD PTR [edx-0x107ea3d0],esi
  41b08b:	jbe    0x41b091
  41b08d:	stos   BYTE PTR es:[edi],al
  41b08e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b08f:	shr    DWORD PTR [eax],0x9a
  41b092:	pop    ebp
  41b093:	sbb    edx,esp
  41b095:	mov    ah,0xb5
  41b097:	xchg   ecx,eax
  41b098:	mov    edi,0x94f6c7c7
  41b09d:	adc    DWORD PTR ds:0x4ea724e0,edi
  41b0a3:	push   es
  41b0a4:	fiadd  DWORD PTR [ecx+0x70]
  41b0a7:	jl     0x41b0af
  41b0a9:	cdq    
  41b0aa:	and    DWORD PTR ds:0xc6c05904,edx
  41b0b0:	push   edi
  41b0b1:	adc    cl,BYTE PTR [esi+0x78]
  41b0b4:	add    eax,0x6bc4cee5
  41b0b9:	fstp   TBYTE PTR [esi+0x663e9b71]
  41b0bf:	xor    al,0x0
  41b0c1:	sbb    DWORD PTR [ecx],ebx
  41b0c3:	cld    
  41b0c4:	push   ebp
  41b0c5:	or     cl,BYTE PTR ds:0x8eabf8a9
  41b0cb:	cmp    eax,0xf5f99356
  41b0d0:	jle    0x41b0e5
  41b0d2:	imul   ecx,ebx,0x7e
  41b0d5:	ins    BYTE PTR es:[edi],dx
  41b0d6:	xchg   esp,eax
  41b0d7:	sbb    BYTE PTR [edi],ch
  41b0d9:	mov    cl,0xf8
  41b0db:	fild   QWORD PTR [eax-0x12]
  41b0de:	pushf  
  41b0df:	scas   eax,DWORD PTR es:[edi]
  41b0e0:	js     0x41b0bd
  41b0e2:	cmp    eax,DWORD PTR [edi-0x16ef1273]
  41b0e8:	stos   BYTE PTR es:[edi],al
  41b0e9:	call   0xcfe1b9b4
  41b0ee:	jge    0x41b15b
  41b0f0:	and    edx,ebx
  41b0f2:	dec    ebp
  41b0f3:	dec    ebp
  41b0f4:	mov    ds:0xf0b56a32,al
  41b0f9:	jns    0x41b081
  41b0fb:	xor    eax,0xa4eb20e9
  41b100:	adc    BYTE PTR [ebp+0xb34b745],cl
  41b106:	xor    esp,edx
  41b108:	add    eax,0x11376095
  41b10d:	pop    edx
  41b10e:	push   0x1b
  41b110:	ja     0x41b0b0
  41b112:	popf   
  41b113:	cmp    al,0x90
  41b115:	jmp    0x289e:0x3d1da1d
  41b11c:	shl    BYTE PTR [ebp+0x539f0514],0xe0
  41b123:	jnp    0x41b0f6
  41b125:	xor    DWORD PTR [eax],esi
  41b127:	out    0x1a,eax
  41b129:	in     eax,dx
  41b12a:	lds    esp,FWORD PTR [ebx-0x2]
  41b12d:	(bad)  
  41b12e:	test   al,0x5b
  41b130:	scas   eax,DWORD PTR es:[edi]
  41b131:	fnsave [ecx+eiz*8]
  41b134:	fcomp  QWORD PTR [edi+0x2844a10b]
  41b13a:	adc    eax,0xa1571814
  41b13f:	imul   ebp,DWORD PTR [eax+ecx*8+0x63],0xffffffb4
  41b144:	in     eax,0x29
  41b146:	push   0x4a
  41b148:	jecxz  0x41b191
  41b14a:	adc    BYTE PTR [ebp+edi*1+0x24d419f1],al
  41b151:	adc    edx,edi
  41b153:	pop    ss
  41b154:	fild   DWORD PTR [ebp+0x289e84f2]
  41b15a:	out    0x44,al
  41b15c:	jo     0x41b13d
  41b15e:	aam    0x3c
  41b160:	mov    al,0x29
  41b162:	and    eax,0x65351428
  41b167:	test   eax,0x7a53a2e0
  41b16c:	adc    eax,DWORD PTR [esi-0x2d327710]
  41b172:	add    cl,0xc5
  41b175:	out    dx,eax
  41b176:	pushf  
  41b177:	xchg   edi,eax
  41b178:	mov    edx,0xf5038e4f
  41b17d:	add    DWORD PTR [eax+0x63],edx
  41b180:	sti    
  41b181:	mov    esi,0x72323b33
  41b186:	fisub  WORD PTR [esi-0x3522495b]
  41b18c:	adc    edi,DWORD PTR [ebx-0x4beab9a4]
  41b192:	xchg   esp,eax
  41b193:	inc    eax
  41b194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b195:	dec    edi
  41b196:	int    0x4
  41b198:	test   al,0xa4
  41b19a:	ret    
  41b19b:	mov    dh,0x92
  41b19d:	aas    
  41b19e:	test   al,0xf4
  41b1a0:	fwait
  41b1a1:	xor    bl,BYTE PTR [edi+0x7bc66d18]
  41b1a7:	push   ds
  41b1a8:	adc    dl,al
  41b1aa:	scas   al,BYTE PTR es:[edi]
  41b1ab:	stos   BYTE PTR es:[edi],al
  41b1ac:	sub    BYTE PTR [ecx+0x73],bh
  41b1af:	and    ebp,esp
  41b1b1:	cmp    BYTE PTR [eax+0x3c],0x93
  41b1b5:	fisubr WORD PTR [esi]
  41b1b7:	xchg   esi,eax
  41b1b8:	inc    esp
  41b1b9:	(bad)  
  41b1ba:	je     0x41b1f3
  41b1bc:	inc    eax
  41b1bd:	jle    0x41b22b
  41b1bf:	call   0xf1b8:0x51817b1a
  41b1c6:	call   0xc50b4461
  41b1cb:	scas   al,BYTE PTR es:[edi]
  41b1cc:	or     edi,DWORD PTR [ebx-0x7e84bade]
  41b1d2:	sbb    BYTE PTR [edi-0x59],cl
  41b1d5:	sbb    DWORD PTR [edx+eiz*4-0x47],ebp
  41b1d9:	and    dh,BYTE PTR [ecx]
  41b1db:	dec    esp
  41b1dc:	adc    eax,0xa99fa3d
  41b1e1:	add    ah,dh
  41b1e3:	mov    dl,0xe7
  41b1e5:	xchg   DWORD PTR [ebx],ebp
  41b1e7:	dec    esi
  41b1e8:	jecxz  0x41b264
  41b1ea:	mov    esp,0xd29f16ef
  41b1ef:	rcr    ch,1
  41b1f1:	xor    ebx,0x1f
  41b1f4:	add    esi,DWORD PTR [esi+0x272b8154]
  41b1fa:	(bad)  
  41b1fb:	jg     0x41b220
  41b1fd:	jno    0x41b270
  41b1ff:	mov    ecx,DWORD PTR [edi+0x6d]
  41b202:	aaa    
  41b203:	jmp    0xf1dfcc7a
  41b208:	stos   BYTE PTR es:[edi],al
  41b209:	xchg   edx,eax
  41b20a:	or     DWORD PTR [ecx-0x57],ebx
  41b20d:	sbb    DWORD PTR [ebp-0x10],ecx
  41b210:	cmp    BYTE PTR [eax-0x40],bl
  41b213:	fdiv   DWORD PTR es:[esi]
  41b216:	mov    eax,0xf758af16
  41b21b:	or     ecx,DWORD PTR [ebx+0x1]
  41b21e:	lds    esi,FWORD PTR [edx]
  41b220:	dec    eax
  41b221:	das    
  41b222:	mov    edx,0x48d44a74
  41b227:	shr    DWORD PTR [esi-0x65],1
  41b22a:	fisubr DWORD PTR [esi+0x771442cf]
  41b230:	and    BYTE PTR [ecx],0xb7
  41b233:	mov    ds:0x7ef18929,eax
  41b238:	inc    edx
  41b239:	mov    ecx,0x6179cfda
  41b23e:	ds sub al,0x5a
  41b241:	cmc    
  41b242:	mov    ss,WORD PTR [edx]
  41b244:	fwait
  41b245:	add    DWORD PTR [ecx+0x7e],ecx
  41b248:	cmp    BYTE PTR [eax],bh
  41b24a:	stc    
  41b24b:	scas   al,BYTE PTR es:[edi]
  41b24c:	sub    bh,bl
  41b24e:	out    dx,eax
  41b24f:	jo     0x41b214
  41b251:	scas   al,BYTE PTR es:[edi]
  41b252:	or     ebx,eax
  41b254:	movntq QWORD PTR [eax-0x5a],mm5
  41b258:	or     BYTE PTR gs:[ecx-0x16],0xb9
  41b25d:	add    esp,edx
  41b25f:	cmp    eax,0xe9b37eea
  41b264:	repnz clc 
  41b266:	(bad)  
  41b267:	push   ecx
  41b268:	gs int 0x7
  41b26b:	and    BYTE PTR [ecx+0x54],0x51
  41b26f:	fmul   QWORD PTR [ecx-0x178eea66]
  41b275:	jge    0x41b252
  41b277:	test   al,0xf2
  41b279:	mov    eax,DWORD PTR [ebx-0x4d4e60a4]
  41b27f:	leave  
  41b280:	shl    BYTE PTR [ebx+0x2a4f69f4],0xd
  41b287:	fcmovu st,st(1)
  41b289:	inc    ecx
  41b28a:	into   
  41b28b:	xor    cl,BYTE PTR [edi+0x2e443933]
  41b291:	pushf  
  41b292:	jnp    0x41b2f3
  41b294:	hlt    
  41b295:	idiv   ch
  41b297:	mov    DWORD PTR [ecx+edi*2+0x41f671f0],ebx
  41b29e:	xchg   esi,eax
  41b29f:	in     al,0x92
  41b2a1:	adc    al,0x51
  41b2a3:	dec    esi
  41b2a4:	adc    eax,DWORD PTR [edi]
  41b2a6:	lea    eax,[edi]
  41b2a8:	ja     0x41b2e8
  41b2aa:	inc    edx
  41b2ab:	les    esi,FWORD PTR [edi+0x6e074f3]
  41b2b1:	jp     0x41b327
  41b2b3:	mov    esp,0xe4d1f0c4
  41b2b8:	dec    esp
  41b2b9:	std    
  41b2ba:	push   ss
  41b2bb:	jne    0x41b2fa
  41b2bd:	ffree  st(1)
  41b2bf:	sar    DWORD PTR [ecx+0x47dfdc38],cl
  41b2c5:	fisub  WORD PTR [ebx-0x55845dca]
  41b2cb:	leave  
  41b2cc:	fadd   QWORD PTR [ebp+0x3a]
  41b2cf:	and    eax,DWORD PTR ds:0xbfe56a64
  41b2d5:	push   es
  41b2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d7:	cwde   
  41b2d8:	xor    al,0xfa
  41b2da:	jge    0x41b2e7
  41b2dc:	frstor [edx]
  41b2de:	fwait
  41b2df:	div    bl
  41b2e1:	fadd   DWORD PTR ds:0xb253eabc
  41b2e7:	push   esi
  41b2e8:	ins    DWORD PTR es:[edi],dx
  41b2e9:	push   ebp
  41b2ea:	inc    esp
  41b2eb:	xchg   edi,eax
  41b2ec:	mov    dh,0x11
  41b2ee:	pop    esi
  41b2ef:	and    BYTE PTR [edi+eiz*8-0x1f],dl
  41b2f3:	xchg   ebx,eax
  41b2f4:	(bad)  
  41b2f5:	mov    ebp,0xf1c74a40
  41b2fa:	mov    dl,0xb3
  41b2fc:	js     0x41b2e0
  41b2fe:	cmc    
  41b2ff:	fnstenv [edi+0x701aed6]
  41b305:	fldcw  WORD PTR [esi]
  41b307:	push   0x1b
  41b309:	sub    dh,0x22
  41b30c:	xchg   ebp,eax
  41b30d:	xor    eax,DWORD PTR [edi]
  41b30f:	inc    ecx
  41b310:	xor    al,0xb5
  41b312:	ins    DWORD PTR es:[edi],dx
  41b313:	mov    bh,0x8d
  41b315:	rcr    BYTE PTR [edi-0x1b],1
  41b318:	cmp    al,ah
  41b31a:	or     DWORD PTR [ebp-0x3986df17],0xc17272d
  41b324:	push   0x61ba8be0
  41b329:	fisub  WORD PTR [edi-0x1a6f5b5d]
  41b32f:	mov    ds:0x1429358c,al
  41b334:	cld    
  41b335:	rcr    DWORD PTR fs:[ebp+0x44ee384b],1
  41b33c:	add    eax,0xd578e853
  41b341:	int    0xa8
  41b343:	inc    ebx
  41b344:	shl    DWORD PTR [ebx+0xc],1
  41b347:	out    dx,al
  41b348:	adc    edi,DWORD PTR [ebx+0x63d7e16d]
  41b34e:	ja     0x41b368
  41b350:	jp     0x41b2ec
  41b352:	cmp    BYTE PTR [ebp-0x57],bl
  41b355:	fs mov ebx,0x604f506e
  41b35b:	push   edi
  41b35c:	jne    0x41b307
  41b35e:	mov    BYTE PTR [eax],dh
  41b360:	xchg   edi,eax
  41b361:	inc    ebp
  41b362:	xlat   BYTE PTR ds:[ebx]
  41b363:	scas   al,BYTE PTR es:[edi]
  41b364:	mov    cl,0xde
  41b366:	(bad)  
  41b367:	fstp   TBYTE PTR [ecx]
  41b369:	lea    ebx,[ebp-0x4c]
  41b36c:	fs xchg edi,eax
  41b36e:	sub    al,0xad
  41b370:	mov    bh,0x4b
  41b372:	call   FWORD PTR [ebx+0x11]
  41b375:	std    
  41b376:	stc    
  41b377:	pop    edi
  41b378:	mov    al,ds:0x4d1d2ee3
  41b37d:	or     edi,DWORD PTR [ebx]
  41b37f:	sbb    al,0xa6
  41b381:	inc    ebx
  41b382:	add    eax,0x28ef4a0
  41b387:	mov    BYTE PTR [eax*1-0x47e963e4],cl
  41b38e:	mov    ebp,ebp
  41b390:	add    edx,edx
  41b392:	push   esi
  41b393:	jl     0x41b3ac
  41b395:	push   ebx
  41b396:	cmp    cl,BYTE PTR [edi+eiz*2-0x68d1bd15]
  41b39d:	mov    ecx,0x3263d578
  41b3a2:	jne    0x41b3ec
  41b3a4:	cmp    al,0x34
  41b3a6:	mov    bh,0x43
  41b3a8:	cmp    bl,BYTE PTR [esi-0x316aa5ce]
  41b3ae:	scas   eax,DWORD PTR es:[edi]
  41b3af:	mov    edx,0x6054cabc
  41b3b4:	addr16 xchg edx,eax
  41b3b6:	dec    esi
  41b3b7:	fwait
  41b3b8:	in     al,0x9e
  41b3ba:	pop    ds
  41b3bb:	xchg   ebx,eax
  41b3bc:	test   DWORD PTR [ecx+eiz*8-0x46c0c915],eax
  41b3c3:	sbb    eax,0xb5f99b89
  41b3c8:	xchg   ebx,eax
  41b3c9:	out    0x70,eax
  41b3cb:	xchg   ecx,eax
  41b3cc:	(bad)
  41b3cf:	jle    0x41b402
  41b3d1:	and    esp,DWORD PTR [edi-0x1bcff456]
  41b3d7:	stc    
  41b3d8:	push   eax
  41b3d9:	imul   DWORD PTR [esi-0x30]
  41b3dc:	aad    0x0
  41b3de:	mov    es:0xeff80777,eax
  41b3e4:	or     al,0xc5
  41b3e6:	sbb    bh,cl
  41b3e8:	adc    al,BYTE PTR [ebp-0x4c21b2cc]
  41b3ee:	inc    cl
  41b3f0:	cmp    cl,BYTE PTR ds:0x5473f1ae
  41b3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3f7:	xchg   edi,edi
  41b3f9:	cmp    dl,BYTE PTR ds:0xcf49a1be
  41b3ff:	hlt    
  41b400:	outs   dx,DWORD PTR ds:[esi]
  41b401:	bound  ecx,QWORD PTR [esi]
  41b403:	bound  ebp,QWORD PTR [ebx-0x66]
  41b406:	xor    eax,0x339c4f81
  41b40b:	rol    BYTE PTR ds:0x6509cdbf,1
  41b411:	xchg   edi,eax
  41b412:	fadd   st,st(1)
  41b414:	jge    0x41b410
  41b416:	inc    ebx
  41b417:	jne    0x41b3ea
  41b419:	fstp   QWORD PTR [esi+0x2a]
  41b41c:	add    edi,DWORD PTR [esi+0x70]
  41b41f:	ins    BYTE PTR es:[edi],dx
  41b420:	xor    eax,0xd7f6c6b1
  41b425:	pop    ebp
  41b426:	mov    BYTE PTR [eax+0x1b65f948],bl
  41b42c:	or     al,0x31
  41b42e:	cmp    ebx,DWORD PTR [ecx+edx*8+0x6e]
  41b432:	cmp    al,0x71
  41b434:	adc    ah,BYTE PTR [ebp+0x3c4f5404]
  41b43a:	or     dh,BYTE PTR [ebx+0x11]
  41b43d:	inc    edx
  41b43e:	fs pop ebp
  41b440:	hlt    
  41b441:	fist   WORD PTR ds:0x8db7adca
  41b447:	test   eax,0xcacef10a
  41b44c:	outs   dx,DWORD PTR ds:[esi]
  41b44d:	ret    0x322
  41b450:	xor    eax,0x3be45214
  41b455:	jp     0x41b47e
  41b457:	sbb    BYTE PTR [edx],0x28
  41b45a:	mov    ecx,0xe5649c63
  41b45f:	ret    
  41b460:	cmp    eax,0xfd2389c7
  41b465:	xor    al,0xe1
  41b467:	hlt    
  41b468:	into   
  41b469:	mov    dl,0x51
  41b46b:	(bad)  [eax]
  41b46d:	jmp    0x154:0x20c0ed84
  41b474:	mov    ds:0xdf050b27,eax
  41b479:	jmp    0xe88c42bc
  41b47e:	rcr    BYTE PTR ds:0xfa0ee6f,0x66
  41b485:	scas   al,BYTE PTR es:[edi]
  41b486:	out    0x2d,al
  41b488:	scas   al,BYTE PTR es:[edi]
  41b489:	fimul  WORD PTR [edx+0x1c]
  41b48c:	xor    ecx,DWORD PTR [edx+0x1a7e572a]
  41b492:	fcmovb st,st(4)
  41b494:	cmp    BYTE PTR [edx-0x59],dh
  41b497:	xchg   esp,eax
  41b498:	or     edx,edi
  41b49a:	stos   BYTE PTR es:[edi],al
  41b49b:	jg     0x41b436
  41b49d:	bound  eax,QWORD PTR [eax+0x29b3ff70]
  41b4a3:	xor    eax,0x1a2c8358
  41b4a8:	ins    DWORD PTR es:[edi],dx
  41b4a9:	fadd   st,st(7)
  41b4ac:	xchg   ebp,eax
  41b4ad:	push   cs
  41b4ae:	fbld   TBYTE PTR [edx-0x5333e61a]
  41b4b4:	shl    DWORD PTR [edi+0x44],cl
  41b4b7:	inc    esi
  41b4b8:	and    al,0x84
  41b4ba:	(bad)  
  41b4bb:	icebp  
  41b4bc:	xchg   esp,eax
  41b4bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4be:	mov    bh,al
  41b4c0:	add    eax,0x5eae5c25
  41b4c5:	imul   eax,DWORD PTR [eax],0xd119f436
  41b4cb:	xchg   esp,eax
  41b4cc:	mov    DWORD PTR [edi+ecx*1+0x310475a8],ebx
  41b4d3:	aaa    
  41b4d4:	mov    ecx,0xc457b5e0
  41b4d9:	or     al,0xae
  41b4db:	rcr    BYTE PTR [ebx],cl
  41b4dd:	xchg   esp,eax
  41b4de:	or     al,0x75
  41b4e0:	mov    BYTE PTR [esi],dl
  41b4e2:	mov    edx,0x1325d7ff
  41b4e7:	in     eax,0x1b
  41b4e9:	call   0x4c95:0xbaa00012
  41b4f0:	enter  0x930d,0xad
  41b4f4:	jp     0x41b547
  41b4f6:	ror    DWORD PTR [edi],0x9f
  41b4f9:	sbb    ebx,edx
  41b4fb:	ret    0xd0df
  41b4fe:	outs   dx,BYTE PTR ds:[esi]
  41b4ff:	pop    ds
  41b500:	(bad)  
  41b501:	lock jmp 0x41b550
  41b504:	push   ebx
  41b505:	(bad)  
  41b506:	or     esp,edi
  41b508:	lea    edi,[edx]
  41b50a:	into   
  41b50b:	dec    edx
  41b50c:	xchg   esp,eax
  41b50d:	fisttp QWORD PTR [ecx-0x9b7d38a]
  41b513:	imul   ebp,DWORD PTR [esi],0x29e0ff56
  41b519:	test   ah,dl
  41b51b:	sbb    al,0xfd
  41b51d:	inc    ebx
  41b51e:	lea    esi,[esi]
  41b520:	adc    ah,BYTE PTR cs:[esi-0x76b5523a]
  41b527:	test   BYTE PTR [ecx],ch
  41b529:	fild   DWORD PTR [ecx-0x748256ad]
  41b52f:	push   es
  41b530:	push   0x4185ea58
  41b535:	test   eax,0x31c9f891
  41b53a:	dec    edx
  41b53b:	arpl   bx,di
  41b53d:	es das 
  41b53f:	xchg   ebx,eax
  41b540:	pop    ds
  41b541:	arpl   WORD PTR [eax],bp
  41b543:	ins    DWORD PTR es:[edi],dx
  41b544:	test   al,0x8c
  41b546:	or     DWORD PTR [ecx-0x76],edi
  41b549:	push   ebx
  41b54a:	mov    bh,0x5b
  41b54c:	mov    esp,DWORD PTR [ebp-0xe]
  41b54f:	enter  0xed9b,0x97
  41b553:	pop    ebp
  41b554:	xor    al,0x4
  41b556:	mov    bh,0x76
  41b558:	(bad)  
  41b559:	bound  ebp,QWORD PTR [edi*2-0x71716078]
  41b560:	sbb    ah,BYTE PTR [eax+0x20d5e008]
  41b566:	dec    edi
  41b567:	pushf  
  41b568:	mov    esi,0x1df2b41
  41b56d:	icebp  
  41b56e:	xchg   esp,eax
  41b56f:	cli    
  41b570:	enter  0xf30f,0x74
  41b574:	mov    ebx,DWORD PTR [ecx]
  41b576:	in     al,dx
  41b577:	inc    ebp
  41b578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b579:	jns    0x41b5ed
  41b57b:	test   DWORD PTR [esi],ebx
  41b57d:	and    dh,BYTE PTR [eax-0x78077a36]
  41b583:	stos   BYTE PTR es:[edi],al
  41b584:	jmp    0xa4ea:0xdc0007da
  41b58b:	mov    cl,0x61
  41b58d:	out    0x18,eax
  41b58f:	bound  edx,QWORD PTR [esp+eax*4]
  41b592:	fdivrp st(3),st
  41b594:	adc    esp,DWORD PTR [edx-0x40049d69]
  41b59a:	call   0xee42b84b
  41b59f:	mov    ecx,0x3c3a967
  41b5a4:	jne    0x41b5a5
  41b5a6:	xor    DWORD PTR [ebp+0x60d1acef],edx
  41b5ac:	ret    0x23
  41b5af:	call   ecx
  41b5b1:	jl     0x41b592
  41b5b3:	adc    al,0x4d
  41b5b5:	push   eax
  41b5b6:	sar    BYTE PTR [edx],0xe1
  41b5b9:	xchg   BYTE PTR [ebx],dh
  41b5bb:	stos   DWORD PTR es:[edi],eax
  41b5bc:	adc    eax,0xb734f695
  41b5c1:	xor    eax,0xff0fbe89
  41b5c6:	cmp    ch,BYTE PTR [ebx]
  41b5c8:	push   ecx
  41b5c9:	jecxz  0x41b557
  41b5cb:	jmp    0x41b582
  41b5cd:	add    esp,DWORD PTR [eax+0x399cfe16]
  41b5d3:	ds stos BYTE PTR es:[edi],al
  41b5d5:	sbb    DWORD PTR [eax+0x7e],ebp
  41b5d8:	cmp    ebp,DWORD PTR [esp+edi*8]
  41b5db:	aad    0xeb
  41b5dd:	jl     0x41b642
  41b5df:	call   0x3ca4:0x38e18e01
  41b5e6:	aam    0x60
  41b5e8:	push   esp
  41b5ea:	sub    al,0x72
  41b5ec:	aas    
  41b5ed:	mov    ds:0x7f9cea6,eax
  41b5f2:	ss dec esp
  41b5f4:	sub    al,0x72
  41b5f6:	mov    ebp,cs
  41b5f8:	and    BYTE PTR [ecx+0x5a],cl
  41b5fb:	rcl    BYTE PTR [eax-0x73],1
  41b5fe:	imul   ecx,ecx,0xffffffb5
  41b601:	fwait
  41b602:	mov    bl,0x91
  41b604:	cli    
  41b605:	push   ebx
  41b606:	pop    edi
  41b607:	out    0x89,al
  41b609:	inc    ecx
  41b60a:	jns    0x41b66a
  41b60c:	jo     0x41b5b1
  41b60e:	je     0x41b5b3
  41b610:	jo     0x41b676
  41b612:	repz cwd 
  41b615:	push   edi
  41b616:	lock mov esi,0x5602bb4f
  41b61c:	mov    ah,0x86
  41b61e:	xchg   edi,eax
  41b61f:	mov    eax,ds:0x21ff4ded
  41b624:	enter  0x42ed,0x5d
  41b628:	add    DWORD PTR [eax],esp
  41b62a:	test   DWORD PTR [esp+edi*1-0x5],edi
  41b62e:	inc    esp
  41b62f:	adc    al,bh
  41b631:	mov    esi,DWORD PTR [eax]
  41b633:	jmp    0xf617:0x1649b937
  41b63a:	arpl   WORD PTR [ebp+0x1],bp
  41b63d:	adc    dh,cl
  41b63f:	mov    DWORD PTR [esi+0x3a7f4b12],0x65eac2ff
  41b649:	push   ecx
  41b64a:	push   0x51
  41b64c:	xchg   ebx,eax
  41b64d:	or     al,0x1e
  41b64f:	loopne 0x41b5f4
  41b651:	push   eax
  41b652:	clc    
  41b653:	ret    
  41b654:	cmp    al,0x51
  41b657:	or     DWORD PTR [ebx],0x14
  41b65a:	pusha  
  41b65b:	push   edx
  41b65c:	ret    
  41b65d:	ja     0x41b6c2
  41b65f:	test   eax,0x89bfe485
  41b664:	push   ds
  41b665:	lds    esp,FWORD PTR [edx+ebp*2-0x73]
  41b669:	sub    BYTE PTR [esi+0x7e],dh
  41b66c:	or     esi,edi
  41b66e:	loopne 0x41b6a6
  41b670:	push   ds
  41b671:	(bad)  [eax+0x64]
  41b674:	mov    esi,0x2c219474
  41b679:	jne    0x41b601
  41b67b:	out    dx,eax
  41b67c:	or     eax,0x56d20650
  41b681:	cmp    eax,0xe2074b38
  41b686:	ficom  WORD PTR [ecx-0x3]
  41b689:	ins    DWORD PTR es:[edi],dx
  41b68a:	(bad)  
  41b68b:	dec    ebx
  41b68c:	xor    eax,0xa747e6e
  41b691:	fstp   TBYTE PTR [esi+0x71]
  41b694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b695:	jg     0x41b6f4
  41b697:	jmp    0x982f:0xccc6be49
  41b69e:	mov    edi,DWORD PTR [ebx]
  41b6a0:	loope  0x41b665
  41b6a2:	(bad)  
  41b6a3:	repz icebp 
  41b6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a6:	popf   
  41b6a7:	sbb    BYTE PTR [esi+0x4a],0xd4
  41b6ab:	dec    esp
  41b6ac:	or     ebx,DWORD PTR [ebx+0x1d]
  41b6af:	dec    ebp
  41b6b0:	cmc    
  41b6b1:	sbb    DWORD PTR [ecx],esi
  41b6b3:	xchg   DWORD PTR [ebx-0x44],edi
  41b6b6:	inc    esp
  41b6b7:	test   esi,ebp
  41b6b9:	dec    edx
  41b6ba:	xchg   ecx,eax
  41b6bb:	mov    bl,0x37
  41b6bd:	jp     0x41b67b
  41b6bf:	mov    eax,ds:0x3a81b18
  41b6c4:	push   ds
  41b6c5:	pop    es
  41b6c6:	das    
  41b6c7:	and    ebx,DWORD PTR [esi+0x11378883]
  41b6cd:	mov    eax,ds:0x2e527bb1
  41b6d2:	sub    DWORD PTR [ebx+0x14bbc7e4],edx
  41b6d8:	retf   0x24e6
  41b6db:	pop    esi
  41b6dc:	dec    esi
  41b6dd:	jbe    0x41b6a0
  41b6df:	xor    BYTE PTR [edi-0x1b],bl
  41b6e2:	push   es
  41b6e3:	ror    BYTE PTR [esi+0x56],cl
  41b6e6:	sub    eax,0x510a6953
  41b6eb:	mov    gs:0x275b04e,eax
  41b6f1:	test   eax,0x67a1cd1b
  41b6f6:	gs (bad) 
  41b6f8:	out    dx,eax
  41b6f9:	xchg   esp,eax
  41b6fa:	retf   
  41b6fb:	jmp    0x41b6b1
  41b6fd:	cwde   
  41b6fe:	mov    esi,0xdd967f4d
  41b703:	inc    esi
  41b704:	fst    QWORD PTR [ebx]
  41b706:	xchg   ebx,eax
  41b707:	cs loope 0x41b732
  41b70a:	xchg   DWORD PTR [edi+0x75057e1e],edx
  41b710:	mov    ch,0x8c
  41b712:	repnz xchg ebp,eax
  41b714:	and    dh,al
  41b716:	and    eax,0x655ecdc6
  41b71b:	xchg   esi,eax
  41b71c:	pusha  
  41b71d:	push   eax
  41b71e:	jmp    0x41b6b3
  41b720:	push   ss
  41b721:	ins    BYTE PTR es:[edi],dx
  41b722:	pop    ebx
  41b723:	sbb    ecx,DWORD PTR ds:0xae3f2a8f
  41b729:	scas   al,BYTE PTR es:[edi]
  41b72a:	(bad)  
  41b72b:	sti    
  41b72c:	pushf  
  41b72d:	clc    
  41b72e:	jmp    0x65d8:0x5695ef3f
  41b735:	(bad)  
  41b736:	mov    eax,ds:0x81989ef2
  41b73b:	sub    cl,BYTE PTR [ebx+0x44]
  41b73e:	or     eax,eax
  41b740:	add    esi,0xfffffffa
  41b743:	push   ss
  41b744:	stc    
  41b745:	push   0xffffff97
  41b747:	loop   0x41b6e3
  41b749:	dec    ebp
  41b74a:	xchg   esi,eax
  41b74b:	(bad)  
  41b74c:	mov    ecx,0xbe5cf3e4
  41b751:	or     cl,BYTE PTR [ebx+0x3d]
  41b754:	imul   ebx,DWORD PTR [edx+0x208d2eca],0xffffffe9
  41b75b:	mov    ah,0x7b
  41b75d:	mov    ah,0x8a
  41b75f:	mov    ebx,DWORD PTR [ecx+0x4c]
  41b762:	xchg   edx,eax
  41b763:	int    0x3d
  41b765:	jecxz  0x41b74b
  41b767:	lock es sbb edx,edx
  41b76b:	xchg   BYTE PTR [edi+0x7f],bl
  41b76e:	push   0x8075c044
  41b773:	in     eax,0xb3
  41b775:	mov    al,ds:0xe28116f1
  41b77a:	xor    ebp,DWORD PTR [eax+edi*1-0x6a8f7ce3]
  41b781:	xchg   esi,eax
  41b782:	fcmovne st,st(0)
  41b784:	std    
  41b785:	es pop ds
  41b787:	pop    esi
  41b788:	hlt    
  41b789:	xchg   ebx,eax
  41b78a:	mul    BYTE PTR [edx+0x42]
  41b78d:	(bad)  
  41b78e:	retf   0xa911
  41b791:	ret    
  41b792:	cmc    
  41b793:	es push 0xa133f123
  41b799:	js     0x41b7fd
  41b79b:	xchg   ebx,eax
  41b79c:	push   edi
  41b79d:	and    BYTE PTR [esi-0x4c],cl
  41b7a0:	and    BYTE PTR [eax],cl
  41b7a2:	xor    BYTE PTR ds:0xc2776270,dh
  41b7a8:	shl    DWORD PTR [eax-0x35],cl
  41b7ab:	clc    
  41b7ac:	fwait
  41b7ad:	add    eax,edx
  41b7af:	mov    eax,0xa8cfa251
  41b7b4:	das    
  41b7b5:	xor    edi,DWORD PTR es:[edx]
  41b7b8:	mov    esp,0xb21f5f87
  41b7bd:	sub    al,0xed
  41b7bf:	into   
  41b7c0:	pop    ecx
  41b7c1:	sahf   
  41b7c2:	loope  0x41b7c3
  41b7c4:	mov    ebx,0x17a5446c
  41b7c9:	adc    esp,DWORD PTR [esi]
  41b7cb:	add    ebx,esi
  41b7cd:	push   ecx
  41b7ce:	fidivr WORD PTR [ecx+0x334b9c39]
  41b7d4:	sti    
  41b7d5:	std    
  41b7d6:	and    eax,0xb199d71f
  41b7db:	sub    ebx,eax
  41b7dd:	imul   eax,DWORD PTR [eax-0x337be316],0x9a9da96
  41b7e7:	js     0x41b7c2
  41b7e9:	aam    0x50
  41b7eb:	lds    ebx,FWORD PTR [eax]
  41b7ed:	outs   dx,BYTE PTR ds:[esi]
  41b7ee:	dec    esi
  41b7ef:	pop    ebp
  41b7f0:	sti    
  41b7f1:	xor    al,0x9c
  41b7f3:	and    al,0x2f
  41b7f5:	xchg   edi,eax
  41b7f6:	mov    ch,ch
  41b7f8:	sub    bh,BYTE PTR ds:0xc9f39e88
  41b7fe:	test   eax,0x2f9ab7dd
  41b803:	push   ebp
  41b804:	js     0x41b884
  41b806:	sub    BYTE PTR [edx+0x1d13679c],dl
  41b80c:	dec    BYTE PTR [ebp+0x7d]
  41b80f:	cli    
  41b810:	into   
  41b811:	lods   al,BYTE PTR ds:[esi]
  41b812:	mov    edi,0x5671b0b4
  41b817:	mov    WORD PTR [esi-0x2f59c517],cs
  41b81d:	fstp   QWORD PTR [esi+ebp*8]
  41b820:	adc    eax,DWORD PTR [ecx]
  41b822:	pop    es
  41b823:	sub    al,0xc7
  41b825:	out    0x69,eax
  41b827:	or     eax,0x2be2800a
  41b82c:	leave  
  41b82d:	mov    ds:0x80682c4d,al
  41b832:	push   0xcd61ce6d
  41b837:	mov    al,0xbb
  41b839:	icebp  
  41b83a:	or     esp,DWORD PTR [ebx]
  41b83c:	aaa    
  41b83d:	loop   0x41b8b0
  41b83f:	ficom  WORD PTR [edx]
  41b841:	lock sub eax,0x5a677bb9
  41b847:	sub    al,0x31
  41b849:	hlt    
  41b84a:	retf   0x1255
  41b84d:	add    eax,0x43249848
  41b852:	loope  0x41b8ca
  41b854:	fdivr  QWORD PTR [eax+0x3c075c22]
  41b85a:	fst    DWORD PTR [eax+0x9504341]
  41b860:	add    BYTE PTR ds:0x7ca7317b,ch
  41b866:	or     cl,BYTE PTR ds:0x6c6e5d7
  41b86c:	gs cs jo 0x41b802
  41b870:	mov    WORD PTR [edx-0x22],cs
  41b873:	push   esp
  41b874:	test   al,0x97
  41b876:	and    al,BYTE PTR [ebx+0x55cb0609]
  41b87c:	clc    
  41b87d:	mov    al,ds:0x99d30ad3
  41b882:	dec    eax
  41b883:	jbe    0x41b866
  41b885:	xchg   esi,eax
  41b886:	adc    edi,DWORD PTR [ebx]
  41b888:	imul   edi,DWORD PTR [edx+eax*2-0x7a135477],0xffffffa7
  41b890:	or     edx,eax
  41b892:	dec    ebp
  41b893:	stc    
  41b894:	ret    
  41b895:	sub    al,0x45
  41b897:	xor    bh,al
  41b899:	call   DWORD PTR cs:[ebx-0x11]
  41b89d:	je     0x41b8fd
  41b89f:	push   es
  41b8a0:	ret    0xe38a
  41b8a3:	and    BYTE PTR [edx],ch
  41b8a5:	test   DWORD PTR [eax-0x7b],edx
  41b8a8:	aaa    
  41b8a9:	jbe    0x41b926
  41b8ab:	push   ebp
  41b8ac:	mov    al,ds:0x5fdacd22
  41b8b1:	adc    esi,ebp
  41b8b3:	pop    es
  41b8b4:	neg    ecx
  41b8b6:	call   0x2080b994
  41b8bb:	xchg   esi,eax
  41b8bc:	mov    dl,0x58
  41b8be:	inc    ebp
  41b8bf:	daa    
  41b8c0:	push   edx
  41b8c1:	mov    eax,ds:0x7449d240
  41b8c6:	mov    BYTE PTR [ebx],ch
  41b8c8:	popf   
  41b8c9:	test   BYTE PTR [edi+eiz*4-0x218c77c9],al
  41b8d0:	repz sbb cl,0x43
  41b8d4:	xchg   edi,eax
  41b8d5:	inc    eax
  41b8d6:	mov    ds,esi
  41b8d8:	dec    ecx
  41b8d9:	inc    ecx
  41b8da:	adc    esp,DWORD PTR [ecx]
  41b8dc:	out    0xa3,eax
  41b8de:	pop    esp
  41b8df:	and    esi,0x7b
  41b8e2:	lea    esp,[edi]
  41b8e4:	inc    ebp
  41b8e5:	pop    ebp
  41b8e6:	data16 repnz shl BYTE PTR [ebp+0x796bf47f],1
  41b8ee:	adc    BYTE PTR [ecx-0x4d6a0b7d],dh
  41b8f4:	cld    
  41b8f5:	retf   
  41b8f6:	adc    eax,0x81bb3fdf
  41b8fb:	and    al,0x2c
  41b8fd:	inc    esp
  41b8fe:	loopne 0x41b8e4
  41b900:	mov    ecx,0x76671780
  41b905:	bound  ecx,QWORD PTR [eax-0x4658eae4]
  41b90b:	lea    esp,[edi]
  41b90d:	jecxz  0x41b906
  41b90f:	mov    bh,BYTE PTR [ecx-0xf]
  41b912:	push   0x4aeb38db
  41b917:	cwde   
  41b918:	not    ebp
  41b91a:	xchg   ecx,eax
  41b91b:	je     0x41b8c9
  41b91d:	or     BYTE PTR [edx-0x4d],0x6f
  41b921:	mov    BYTE PTR [edi+0x4f030949],bl
  41b927:	push   edx
  41b928:	xchg   ebx,eax
  41b929:	xchg   ebx,eax
  41b92a:	in     al,dx
  41b92b:	sbb    BYTE PTR [esi],dh
  41b92d:	or     eax,0xdf83d7e2
  41b932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b933:	push   0x23485a8a
  41b938:	and    al,0xbb
  41b93a:	sub    BYTE PTR [esi+ebp*2],0xf
  41b93e:	retf   
  41b93f:	(bad)  
  41b941:	aaa    
  41b942:	jle    0x41b972
  41b944:	nop
  41b945:	jnp    0x41b97f
  41b947:	cs sbb al,0xd3
  41b94a:	call   0xfe1b5b8e
  41b94f:	retf   0xa133
  41b952:	leave  
  41b953:	mov    ebp,0xaeb1065f
  41b958:	mul    DWORD PTR [ebx-0x954b8e2]
  41b95e:	xchg   BYTE PTR [ebp+0x33],dl
  41b961:	popf   
  41b962:	xchg   ebx,eax
  41b963:	cmp    ebx,ebx
  41b965:	retf   
  41b966:	out    dx,al
  41b967:	xor    dl,BYTE PTR [esi]
  41b969:	mov    WORD PTR [ebp-0x1bd5bfb2],es
  41b96f:	fnstenv [esi-0x38]
  41b972:	fcmovnbe st,st(1)
  41b974:	sbb    bl,BYTE PTR [ecx+0x194fd7c7]
  41b97a:	xor    ebp,edx
  41b97c:	enter  0xff2d,0x65
  41b980:	stos   BYTE PTR es:[edi],al
  41b981:	lock test BYTE PTR ss:[ebx-0x43934926],0x96
  41b98a:	lods   al,BYTE PTR ds:[esi]
  41b98b:	(bad)  
  41b98c:	sbb    DWORD PTR ds:0x48788020,edi
  41b992:	push   esi
  41b993:	xor    BYTE PTR [eax-0x454630f6],ah
  41b999:	cmp    DWORD PTR [edi-0x41],esp
  41b99c:	pop    ebp
  41b99d:	je     0x41b943
  41b99f:	lods   eax,DWORD PTR ds:[esi]
  41b9a0:	enter  0xb6e0,0x7
  41b9a4:	jmp    0x41b9f6
  41b9a6:	iret   
  41b9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a8:	mov    bl,0x9c
  41b9aa:	or     bl,BYTE PTR ds:0x2357b74d
  41b9b0:	push   edx
  41b9b1:	sub    al,0x36
  41b9b3:	xchg   esi,eax
  41b9b4:	imul   esp,DWORD PTR [ecx+0x76],0x36be9dd1
  41b9bb:	ficom  WORD PTR ss:[edi+eiz*8]
  41b9bf:	mov    dh,0x73
  41b9c1:	sar    cl,cl
  41b9c3:	aas    
  41b9c4:	stos   BYTE PTR es:[edi],al
  41b9c5:	mov    edi,0xf1e59b4d
  41b9ca:	mov    WORD PTR [ebp-0x7d],cs
  41b9cd:	mov    ah,0x8d
  41b9cf:	(bad)  
  41b9d0:	pusha  
  41b9d1:	popa   
  41b9d2:	test   BYTE PTR [ecx+0xd],cl
  41b9d5:	cmp    dl,ah
  41b9d7:	cli    
  41b9d8:	inc    edi
  41b9d9:	(bad)  
  41b9da:	fnstenv [ecx-0x5e7aa753]
  41b9e0:	xor    eax,0x4f1b520
  41b9e5:	or     al,0x85
  41b9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e8:	mov    dl,0x71
  41b9ea:	fisttp QWORD PTR [edi-0x8]
  41b9ed:	cmp    bl,BYTE PTR [ecx-0x57fb931b]
  41b9f3:	(bad)  
  41b9f5:	and    ebx,DWORD PTR ds:0xb05ea7f4
  41b9fb:	imul   sp,WORD PTR [edi+esi*1-0x4],0xffb1
  41ba01:	dec    ecx
  41ba02:	dec    esp
  41ba03:	jp     0x41ba7b
  41ba05:	fsub   DWORD PTR [ebx+0x5c]
  41ba08:	fdiv   DWORD PTR [edi-0x60]
  41ba0b:	(bad)  
  41ba0c:	pop    ebp
  41ba0d:	xchg   edi,eax
  41ba0e:	or     ebp,DWORD PTR [edi+ebx*4]
  41ba11:	rcl    BYTE PTR [edx+0xe],1
  41ba14:	stos   BYTE PTR es:[edi],al
  41ba15:	add    eax,0xaa0216c8
  41ba1a:	dec    esi
  41ba1b:	dec    edx
  41ba1c:	cmp    BYTE PTR [edi-0x1ed5697d],bl
  41ba22:	or     eax,0xfb42ad96
  41ba27:	jb     0x41ba17
  41ba29:	jnp    0x41ba29
  41ba2b:	dec    edi
  41ba2c:	xchg   ebx,eax
  41ba2d:	adc    ecx,DWORD PTR [eax+0x403da1b8]
  41ba33:	mov    edi,0xe6bfe857
  41ba38:	in     eax,0xac
  41ba3a:	dec    esp
  41ba3b:	adc    DWORD PTR ds:0xfe742b0a,0xb
  41ba42:	cmp    DWORD PTR [esi+0x6e],edi
  41ba45:	and    DWORD PTR [ebx+0xf],ebp
  41ba48:	or     eax,0x2abe4b4d
  41ba4d:	inc    ecx
  41ba4e:	sbb    al,0x97
  41ba50:	xor    al,0xf4
  41ba52:	lods   al,BYTE PTR ds:[esi]
  41ba53:	popa   
  41ba54:	mov    ds:0x95cb99b7,al
  41ba59:	mov    ecx,0x979ecef2
  41ba5e:	and    bh,ch
  41ba60:	sar    BYTE PTR [ecx+0x76],1
  41ba63:	repnz test dl,dl
  41ba66:	add    bh,al
  41ba68:	sti    
  41ba69:	aad    0xdd
  41ba6b:	jecxz  0x41ba61
  41ba6d:	xchg   esi,eax
  41ba6e:	pusha  
  41ba6f:	jl     0x41ba51
  41ba71:	sub    eax,0xd8e5256b
  41ba76:	push   esi
  41ba77:	lds    edx,FWORD PTR ds:0xcf6f6586
  41ba7d:	jle    0x41ba07
  41ba7f:	xor    ebx,DWORD PTR [edi+0x68]
  41ba82:	stos   DWORD PTR es:[edi],eax
  41ba83:	mov    ebp,0x36e64706
  41ba88:	mov    ch,0x5f
  41ba8a:	es or  eax,0x6f380392
  41ba90:	aad    0xcf
  41ba92:	dec    edx
  41ba93:	leave  
  41ba94:	in     al,0x75
  41ba96:	mov    ebx,0x9cfd41fb
  41ba9b:	sub    ebx,DWORD PTR [ebx]
  41ba9d:	jb     0x41bacc
  41ba9f:	mov    DWORD PTR [esi-0x50f1b643],eax
  41baa5:	js     0x41baa6
  41baa7:	fs ret 0x8f23
  41baab:	fcomp  QWORD PTR [ebp+0x61]
  41baae:	sbb    DWORD PTR [edx+0x1ceb6540],edx
  41bab4:	ja     0x41bb20
  41bab6:	cdq    
  41bab7:	pop    esi
  41bab8:	fstp   DWORD PTR [ecx+0x12]
  41babb:	test   BYTE PTR [edx+0x6adf46ad],0x6f
  41bac2:	(bad)  [ebp+0x43886d38]
  41bac8:	pushf  
  41bac9:	je     0x41bb39
  41bacb:	xor    al,BYTE PTR [ecx+0x68]
  41bace:	sbb    DWORD PTR [esi],ecx
  41bad0:	mov    esp,0xde165563
  41bad5:	jo     0x41ba7c
  41bad7:	cmp    BYTE PTR [ecx+ecx*8],dh
  41bada:	mov    bl,0xac
  41badc:	hlt    
  41badd:	jns    0x41bae7
  41badf:	in     al,0x66
  41bae1:	push   ecx
  41bae2:	daa    
  41bae3:	(bad)  
  41bae4:	aas    
  41bae5:	int    0x38
  41bae7:	mov    ah,0x99
  41bae9:	bound  esp,QWORD PTR [ebp+0x64]
  41baec:	pop    edx
  41baed:	and    eax,0xd36c565f
  41baf2:	inc    esi
  41baf3:	jge    0x41baf1
  41baf5:	(bad)  
  41baf6:	jb     0x41baa9
  41baf8:	outs   dx,DWORD PTR ds:[esi]
  41baf9:	xor    bl,BYTE PTR [ecx]
  41bafb:	sbb    al,dh
  41bafd:	xor    DWORD PTR [edi+0x17],ebp
  41bb00:	and    DWORD PTR [esi],edx
  41bb02:	out    0xb,al
  41bb04:	mov    cs,esp
  41bb06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb07:	mov    ?,WORD PTR [edx+ecx*2+0x6fe6c4b]
  41bb0e:	sar    ch,1
  41bb10:	mov    al,ds:0xac7ae80b
  41bb15:	call   0xaed9:0xf8e1c5a3
  41bb1c:	fstp   DWORD PTR [ecx-0x2a222603]
  41bb22:	jbe    0x41baaf
  41bb24:	scas   eax,DWORD PTR es:[edi]
  41bb25:	pusha  
  41bb26:	inc    ebp
  41bb27:	push   ds
  41bb28:	xor    dl,BYTE PTR [edx-0x1a]
  41bb2b:	push   edi
  41bb2c:	cmp    ecx,edi
  41bb2e:	lea    eax,[ebp+0x16]
  41bb31:	mov    edi,0x88ea25d7
  41bb36:	aas    
  41bb37:	icebp  
  41bb38:	add    cl,BYTE PTR [ebx+0x52]
  41bb3b:	leave  
  41bb3c:	mov    eax,ds:0xcb6c702e
  41bb41:	in     eax,dx
  41bb42:	mov    BYTE PTR [eax-0x39],dh
  41bb45:	push   esi
  41bb46:	lods   eax,DWORD PTR ds:[esi]
  41bb47:	and    BYTE PTR [ecx],dh
  41bb49:	mov    BYTE PTR ds:0xf2d3b6b3,bh
  41bb4f:	sbb    edx,0xffffffe0
  41bb52:	imul   eax,DWORD PTR [edx],0x53cf0f99
  41bb58:	xor    DWORD PTR [edi],esp
  41bb5a:	mov    edx,0x4cbb0f6a
  41bb5f:	ret    0x990a
  41bb62:	loope  0x41bba0
  41bb64:	pop    ebp
  41bb65:	mov    ah,0xf3
  41bb67:	and    ebp,DWORD PTR [ecx+0x26]
  41bb6a:	cld    
  41bb6b:	add    DWORD PTR [eax-0x52b3a9b8],esp
  41bb71:	adc    DWORD PTR ds:0x42965949,ebp
  41bb77:	jo     0x41bb4e
  41bb79:	sbb    esp,ebp
  41bb7b:	rol    DWORD PTR ds:0x2c106281,1
  41bb81:	mov    bh,0x8b
  41bb83:	and    esi,DWORD PTR [ecx]
  41bb85:	or     al,0xe2
  41bb87:	test   al,0x46
  41bb89:	xor    al,0x5d
  41bb8b:	sbb    edi,edi
  41bb8d:	retf   
  41bb8e:	das    
  41bb8f:	arpl   WORD PTR [ebx],sp
  41bb91:	dec    ebx
  41bb92:	fcmovb st,st(1)
  41bb94:	sub    cl,BYTE PTR [esi]
  41bb96:	xchg   ebp,eax
  41bb97:	mul    edi
  41bb99:	and    BYTE PTR ds:0x3ed98783,ah
  41bb9f:	mov    dh,0x2c
  41bba1:	pmuludq mm6,QWORD PTR [edx]
  41bba4:	sbb    al,0xc0
  41bba6:	cmp    eax,0x5f7a6cb4
  41bbab:	(bad)  
  41bbac:	lods   al,BYTE PTR ds:[esi]
  41bbad:	xchg   edx,eax
  41bbae:	(bad)  
  41bbaf:	and    eax,0xa2c8351b
  41bbb4:	shr    cl,0x19
  41bbb7:	addr16 retf 
  41bbb9:	sbb    DWORD PTR [edi+0x527636eb],eax
  41bbbf:	(bad)  
  41bbc1:	jge    0x41bb71
  41bbc3:	inc    edi
  41bbc4:	inc    eax
  41bbc5:	xor    al,0x31
  41bbc7:	pop    edi
  41bbc8:	mov    ecx,?
  41bbca:	push   esi
  41bbcb:	xor    DWORD PTR [esp+edi*2],ebx
  41bbce:	cli    
  41bbcf:	mov    ebx,0xebeb3eae
  41bbd4:	add    dl,ch
  41bbd6:	sub    BYTE PTR fs:[ecx-0xa435d63],ch
  41bbdd:	test   esp,0xdfbdba48
  41bbe3:	fild   WORD PTR [ebx+edx*1-0x73]
  41bbe7:	hlt    
  41bbe8:	adc    al,0x49
  41bbea:	outs   dx,DWORD PTR ds:[esi]
  41bbeb:	retf   
  41bbec:	mov    ebx,0x5f29b84f
  41bbf1:	je     0x41bbab
  41bbf3:	ss cwde 
  41bbf5:	shl    DWORD PTR [esp+edx*4-0x151f3ad2],0xa0
  41bbfd:	mov    cl,BYTE PTR [eax-0x40f812bf]
  41bc03:	mov    DWORD PTR [ecx],esi
  41bc05:	or     ch,BYTE PTR [ebx-0x4372047c]
  41bc0b:	ret    0x69b9
  41bc0e:	lods   eax,DWORD PTR ds:[esi]
  41bc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc10:	stc    
  41bc11:	push   ebp
  41bc12:	mov    eax,ds:0x5051ef93
  41bc17:	sub    BYTE PTR [ecx+0x18380051],cl
  41bc1d:	or     ecx,ebp
  41bc1f:	mov    dh,0x53
  41bc21:	ja     0x41bbce
  41bc23:	fisubr DWORD PTR [ebp-0xe8d001]
  41bc29:	xchg   ebx,eax
  41bc2a:	xchg   esp,eax
  41bc2b:	repnz fyl2xp1 
  41bc2e:	push   eax
  41bc2f:	and    bl,BYTE PTR [edi]
  41bc31:	adc    eax,0x20cd596c
  41bc36:	xchg   ecx,ebp
  41bc38:	fidiv  DWORD PTR [edi+0x3d8f8451]
  41bc3e:	xlat   BYTE PTR ds:[ebx]
  41bc3f:	je     0x41bc41
  41bc41:	adc    BYTE PTR fs:[ebx],0x77
  41bc45:	mov    DWORD PTR [ebx-0x64],ecx
  41bc48:	jg     0x41bc95
  41bc4a:	iret   
  41bc4b:	daa    
  41bc4c:	lods   eax,DWORD PTR ds:[esi]
  41bc4d:	(bad)  
  41bc50:	sbb    DWORD PTR [ecx-0x25],edx
  41bc53:	jp     0x41bc7f
  41bc55:	(bad)  
  41bc56:	xchg   ecx,eax
  41bc57:	ins    BYTE PTR es:[edi],dx
  41bc58:	pop    eax
  41bc59:	xor    al,0x3e
  41bc5b:	cwde   
  41bc5c:	daa    
  41bc5d:	aam    0xa0
  41bc5f:	ja     0x41bc37
  41bc61:	push   edx
  41bc62:	mov    esp,0xf7980566
  41bc67:	dec    ebx
  41bc68:	outs   dx,DWORD PTR ds:[esi]
  41bc69:	imul   esi,DWORD PTR [edx+0x2d544fd6],0x498dbe54
  41bc73:	push   0x44
  41bc75:	inc    esi
  41bc76:	pop    edx
  41bc77:	shr    al,0xc8
  41bc7a:	into   
  41bc7b:	bound  ecx,QWORD PTR [eax-0x553961c5]
  41bc81:	inc    ecx
  41bc82:	ftst   
  41bc84:	and    ch,dl
  41bc86:	xor    BYTE PTR [ecx+ebx*8+0x2bbb984e],bl
  41bc8d:	pop    esi
  41bc8e:	add    al,0xce
  41bc90:	jg     0x41bcd4
  41bc92:	pop    ecx
  41bc93:	test   al,0xc
  41bc95:	mov    ebx,0xffdd07ad
  41bc9a:	pushf  
  41bc9b:	outs   dx,BYTE PTR ds:[esi]
  41bc9c:	mov    edx,DWORD PTR [esi+eax*2+0x3d]
  41bca0:	mov    ds:0xd83fd58a,al
  41bca5:	xor    ah,bl
  41bca7:	outs   dx,BYTE PTR ds:[esi]
  41bca8:	mov    ecx,0x8533ae94
  41bcad:	out    0xd7,al
  41bcaf:	or     BYTE PTR [eax+0xa],0x2b
  41bcb3:	mov    bl,0xc8
  41bcb5:	or     eax,0x31be923d
  41bcba:	cmp    ecx,DWORD PTR [ebp+esi*2+0x6d69d6ae]
  41bcc1:	mov    eax,0x75d9543f
  41bcc6:	sub    DWORD PTR ds:0xbe9a6ae8,esp
  41bccc:	add    eax,0x4a96dbb1
  41bcd1:	mov    edi,0x1deb9950
  41bcd6:	add    bl,dl
  41bcd8:	add    esp,edi
  41bcda:	fs retf 0x4522
  41bcde:	jmp    0x44fa:0x7527af1c
  41bce5:	outs   dx,BYTE PTR ds:[esi]
  41bce6:	outs   dx,BYTE PTR ds:[esi]
  41bce7:	xor    BYTE PTR [ecx],dl
  41bce9:	xlat   BYTE PTR ds:[ebx]
  41bcea:	mov    ecx,cs
  41bcec:	add    BYTE PTR [ebx],dl
  41bcee:	add    DWORD PTR [ebx+eax*4],edi
  41bcf1:	and    eax,0x25bab6a9
  41bcf6:	les    esi,FWORD PTR [ecx+0x4]
  41bcf9:	dec    edx
  41bcfa:	adc    BYTE PTR [edx+0x3f59217e],bh
  41bd00:	out    0x61,al
  41bd02:	xchg   DWORD PTR [ebp-0x23c497a4],esi
  41bd08:	fisttp QWORD PTR [eax+0x7b]
  41bd0b:	iret   
  41bd0c:	imul   edi,ebp,0x44
  41bd0f:	push   ds
  41bd10:	call   0xb4bd394f
  41bd15:	mov    edx,DWORD PTR [edx+0x28]
  41bd18:	xchg   bp,ax
  41bd1a:	mov    eax,es
  41bd1c:	(bad)  
  41bd1d:	jl     0x41bd65
  41bd1f:	retf   0xf59b
  41bd22:	push   esi
  41bd23:	pop    ecx
  41bd24:	je     0x41bd07
  41bd26:	retf   
  41bd27:	inc    esp
  41bd28:	sbb    cl,BYTE PTR [eax-0xe]
  41bd2b:	mov    bl,0xa
  41bd2d:	test   eax,0x6181709c
  41bd32:	arpl   WORD PTR ds:0x74156376,dx
  41bd38:	mov    ch,0x1b
  41bd3a:	and    BYTE PTR [edi],ch
  41bd3c:	stos   DWORD PTR es:[edi],eax
  41bd3d:	(bad)  
  41bd3e:	lock dec ebx
  41bd40:	mov    edi,0x910b6e14
  41bd45:	push   ebp
  41bd46:	inc    ebp
  41bd47:	dec    ecx
  41bd48:	mov    BYTE PTR [ecx],0x4
  41bd4b:	mov    ds:0xb8364aad,al
  41bd50:	sbb    al,0x7a
  41bd52:	add    al,0xbd
  41bd54:	shr    BYTE PTR [ebp+0x6c],0x78
  41bd58:	(bad)  
  41bd5a:	xchg   edi,eax
  41bd5b:	dec    ebx
  41bd5c:	mov    edx,0xfb85b9cc
  41bd61:	dec    ebp
  41bd62:	ja     0x41bd69
  41bd64:	not    BYTE PTR [esi]
  41bd66:	push   0xffffffd1
  41bd68:	fsubr  st,st(3)
  41bd6a:	out    0xa3,eax
  41bd6c:	mov    al,ds:0x9c347a55
  41bd71:	pop    ebp
  41bd72:	mov    ah,0xf7
  41bd74:	xchg   BYTE PTR [edi+ebx*1-0x19a82dc6],bl
  41bd7b:	sub    DWORD PTR [edx*4-0x1a6c4fcf],eax
  41bd82:	out    dx,eax
  41bd83:	inc    ebx
  41bd84:	div    BYTE PTR [ecx]
  41bd86:	mov    ebp,0xd6bb3524
  41bd8b:	pop    edx
  41bd8c:	mov    dh,0x27
  41bd8e:	and    edx,edx
  41bd90:	sbb    ebx,DWORD PTR [eax+edx*1+0x3a2e62c2]
  41bd97:	test   DWORD PTR [edi+ebx*4+0x6601da68],edx
  41bd9e:	xor    ebp,DWORD PTR [edi]
  41bda0:	pushf  
  41bda1:	out    dx,al
  41bda2:	sub    DWORD PTR [ecx],ecx
  41bda4:	push   0x7f
  41bda6:	loop   0x41bde9
  41bda8:	es pop ebp
  41bdaa:	repz adc al,BYTE PTR [ebx+eiz*4]
  41bdae:	sub    BYTE PTR [eax-0x269d14d7],dl
  41bdb4:	cmp    bh,BYTE PTR [eax-0x15]
  41bdb7:	dec    eax
  41bdb8:	xor    BYTE PTR [esi],bl
  41bdba:	adc    edx,0x11
  41bdbd:	shr    DWORD PTR [ebp+0x265276bc],cl
  41bdc3:	mov    ah,0xff
  41bdc5:	and    al,0x6e
  41bdc7:	mov    edx,0xe38b29a8
  41bdcc:	add    cl,BYTE PTR [esi]
  41bdce:	fwait
  41bdcf:	add    BYTE PTR cs:[edi+0x3c],ah
  41bdd3:	shr    bl,cl
  41bdd5:	out    dx,al
  41bdd6:	pop    eax
  41bdd7:	fidiv  DWORD PTR [ebx+0x43c22999]
  41bddd:	enter  0xebe3,0x6a
  41bde1:	dec    ebp
  41bde2:	rcl    BYTE PTR [edi-0x4cf1dd5e],cl
  41bde8:	ins    DWORD PTR es:[edi],dx
  41bde9:	cmc    
  41bdea:	dec    ebp
  41bdeb:	dec    ebp
  41bdec:	xor    eax,DWORD PTR [edx]
  41bdee:	pop    es
  41bdef:	and    edx,DWORD PTR ds:[edi-0xd04a710]
  41bdf6:	adc    DWORD PTR [edi-0x5f],edi
  41bdf9:	scas   al,BYTE PTR es:[edi]
  41bdfa:	lea    edx,[edi+0x70]
  41bdfd:	jne    0x41bde7
  41bdff:	and    DWORD PTR [ebp+edx*4+0x1574d5],esi
  41be06:	repnz pushf 
  41be08:	cld    
  41be09:	clc    
  41be0a:	in     al,dx
  41be0b:	sbb    eax,0xab04ab92
  41be10:	sahf   
  41be11:	push   ebp
  41be12:	mov    dh,BYTE PTR [ebx-0x6791bef7]
  41be18:	cli    
  41be19:	mov    ecx,0x30a97e60
  41be1e:	or     al,0x6a
  41be20:	xchg   ebx,eax
  41be21:	add    al,0x63
  41be23:	lahf   
  41be24:	xchg   esi,eax
  41be25:	inc    ebp
  41be26:	and    DWORD PTR [ecx-0xa5fdabc],edi
  41be2c:	std    
  41be2d:	test   BYTE PTR [edx-0x3ed7d2f],dh
  41be33:	call   0xac64:0x2b12b749
  41be3a:	rcr    BYTE PTR ds:0x21958b58,0x68
  41be41:	fisttp WORD PTR ds:0xa20a2df3
  41be48:	mov    edi,0x40038d02
  41be4d:	lods   eax,DWORD PTR ds:[esi]
  41be4e:	pop    ds
  41be4f:	add    al,0xa9
  41be51:	repz sub ch,ch
  41be54:	popa   
  41be55:	sbb    cl,bl
  41be57:	into   
  41be58:	xor    bl,BYTE PTR [eax]
  41be5a:	xor    dl,BYTE PTR [esi]
  41be5c:	mov    BYTE PTR [ebp+0x5a562f43],ch
  41be62:	jle    0x41be4e
  41be64:	cmp    ebx,esi
  41be66:	fldcw  WORD PTR [edx+0x58]
  41be69:	jae    0x41be33
  41be6b:	pop    edx
  41be6c:	dec    ebp
  41be6d:	add    al,dl
  41be6f:	arpl   WORD PTR [edi+0x75],di
  41be72:	lock (bad) 
  41be74:	mov    ebp,0x94891347
  41be79:	dec    ebp
  41be7a:	ret    0xd814
  41be7d:	xor    eax,0x5ae3d9ce
  41be82:	loope  0x41be7c
  41be84:	in     eax,0x67
  41be86:	xchg   edi,eax
  41be87:	jg     0x41bec1
  41be89:	mov    ecx,0x96b2d73a
  41be8e:	sar    DWORD PTR [ebx],cl
  41be90:	cmp    eax,0xcda8a03c
  41be95:	scas   eax,DWORD PTR es:[edi]
  41be96:	stos   DWORD PTR es:[edi],eax
  41be97:	clc    
  41be98:	add    DWORD PTR [esi-0x2e],ecx
  41be9b:	adc    eax,DWORD PTR [edx]
  41be9d:	inc    ebx
  41be9e:	outs   dx,BYTE PTR ds:[esi]
  41be9f:	mov    dl,0xf5
  41bea1:	mov    eax,ds:0xd420f9c9
  41bea6:	fstp   QWORD PTR [eax-0x39]
  41bea9:	mov    ?,WORD PTR [ecx-0x58a10aa9]
  41beaf:	mov    bh,0xa1
  41beb1:	repnz mov ebp,0x9cd18310
  41beb7:	pop    ss
  41beb8:	dec    edx
  41beb9:	scas   al,BYTE PTR es:[edi]
  41beba:	push   0xffffff9d
  41bebc:	add    edx,DWORD PTR [ecx+0x38968aa1]
  41bec2:	jmp    0xe2e17e32
  41bec7:	outs   dx,DWORD PTR ds:[esi]
  41bec8:	aam    0xe4
  41beca:	push   ecx
  41becb:	add    ebp,edx
  41becd:	iret   
  41bece:	or     edx,DWORD PTR [esi+0x5d]
  41bed1:	fwait
  41bed2:	gs cmp al,0x91
  41bed5:	adc    BYTE PTR [esi-0x7c],dl
  41bed8:	imul   BYTE PTR [esi*8+0x113f4cde]
  41bedf:	jge    0x41bec8
  41bee1:	or     BYTE PTR [ebx],cl
  41bee3:	add    ecx,DWORD PTR [eax+0x46]
  41bee6:	or     edx,DWORD PTR [edx-0x38]
  41bee9:	(bad)  
  41beea:	jmp    0xa8b99bdd
  41beef:	adc    al,0x56
  41bef1:	inc    edi
  41bef2:	push   ebp
  41bef3:	sar    al,1
  41bef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef6:	or     esp,DWORD PTR [ebx+eiz*4+0x12e66ac9]
  41befd:	sub    al,0x3
  41beff:	ds mov esi,0xb4d22b1e
  41bf05:	hlt    
  41bf06:	inc    ebp
  41bf07:	xchg   BYTE PTR [edx+0x76],bl
  41bf0a:	ds inc esi
  41bf0c:	mov    ebp,0x3b3ed595
  41bf11:	(bad)  
  41bf12:	jl     0x41bf11
  41bf14:	mov    ds:0xd21e5cee,al
  41bf19:	pop    edi
  41bf1a:	punpckhbw mm7,QWORD PTR [esi]
  41bf1d:	cmp    DWORD PTR [eax+ecx*8],edx
  41bf20:	fsubp  st(4),st
  41bf22:	jg     0x41bf06
  41bf24:	cmovo  ebp,DWORD PTR [esi+0x41a88286]
  41bf2b:	aas    
  41bf2c:	popa   
  41bf2d:	jmp    0x78c9:0xe5dcf62b
  41bf34:	in     eax,0xa0
  41bf36:	mov    dh,0xef
  41bf38:	ret    0x518e
  41bf3b:	in     al,0x7e
  41bf3d:	push   ebx
  41bf3e:	pop    ebx
  41bf3f:	sub    al,BYTE PTR [edi]
  41bf41:	inc    edi
  41bf42:	push   ebx
  41bf43:	out    dx,eax
  41bf44:	mov    gs,WORD PTR [esp+ebx*2]
  41bf47:	not    DWORD PTR [eax+0x48a882d3]
  41bf4d:	push   edi
  41bf4e:	adc    DWORD PTR [ebx-0x132467eb],ecx
  41bf54:	jl     0x41bf22
  41bf56:	retf   0x55
  41bf59:	inc    ebp
  41bf5a:	xchg   ebp,eax
  41bf5b:	cmp    eax,ecx
  41bf5d:	mov    ?,WORD PTR [eax*4-0x1881233]
  41bf64:	jmp    FWORD PTR ds:0xcf90c934
  41bf6a:	dec    edx
  41bf6b:	push   ecx
  41bf6c:	es sahf 
  41bf6e:	xor    dl,cl
  41bf70:	xchg   edx,eax
  41bf71:	and    al,0x7a
  41bf73:	inc    ebx
  41bf74:	mov    dl,0x5a
  41bf76:	inc    eax
  41bf77:	aaa    
  41bf78:	jle    0x41bf64
  41bf7a:	cli    
  41bf7b:	enter  0xbcd8,0xad
  41bf7f:	scas   eax,DWORD PTR es:[edi]
  41bf80:	jbe    0x41bf9b
  41bf82:	addr16 es inc esi
  41bf85:	(bad)  
  41bf86:	mov    DWORD PTR [edi+ecx*2],edi
  41bf89:	imul   edi,DWORD PTR fs:[edx],0x21
  41bf8d:	mov    edi,0x96bf243
  41bf92:	retf   0x2df7
  41bf95:	hlt    
  41bf96:	jae    0x41c016
  41bf98:	cmp    DWORD PTR [ebp-0x4b35d40c],0x36
  41bf9f:	shr    DWORD PTR [ebx],0xae
  41bfa2:	mov    eax,0x92e10da0
  41bfa7:	std    
  41bfa8:	xchg   DWORD PTR ds:0xa79ffa0a,esp
  41bfae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfaf:	mov    al,ds:0xbf1e2ea9
  41bfb4:	sahf   
  41bfb5:	pop    ebp
  41bfb6:	ja     0x41bff4
  41bfb8:	push   eax
  41bfb9:	push   eax
  41bfba:	test   BYTE PTR ds:0x1557d90,0xa5
  41bfc1:	cwde   
  41bfc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfc3:	(bad)  
  41bfc4:	mov    ebp,0x869b65e2
  41bfc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfca:	push   ebp
  41bfcb:	inc    esi
  41bfcc:	out    0xa7,eax
  41bfce:	ds mov edi,ds
  41bfd1:	pop    es
  41bfd2:	in     eax,dx
  41bfd3:	int3   
  41bfd4:	enter  0x4150,0x12
  41bfd8:	mov    al,ds:0x36872641
  41bfdd:	nop
  41bfde:	xlat   BYTE PTR ds:[ebx]
  41bfdf:	loopne 0x41bfa5
  41bfe1:	xor    dl,al
  41bfe3:	jae    0x41c052
  41bfe5:	je     0x41c024
  41bfe7:	test   DWORD PTR [ebx-0x35373cc8],edi
  41bfed:	dec    edx
  41bfee:	sbb    al,0xa4
  41bff0:	mov    edx,ss
  41bff2:	in     eax,0x15
  41bff4:	fst    DWORD PTR [ebp+0x4d804dfe]
  41bffa:	dec    ecx
  41bffb:	sub    BYTE PTR [ebp+0xa],dl
  41bffe:	cmp    DWORD PTR [ecx-0x43],edi
  41c001:	add    ebx,DWORD PTR [ebp+0x5e]
  41c004:	cmp    eax,0xb291c9e0
  41c009:	aam    0x2c
  41c00b:	mov    bl,0xc8
  41c00d:	enter  0xe323,0xc5
  41c011:	jbe    0x41c042
  41c013:	ins    BYTE PTR es:[edi],dx
  41c014:	stos   BYTE PTR es:[edi],al
  41c015:	mov    DWORD PTR [eax-0x34c216f0],eax
  41c01b:	jmp    0x41bffb
  41c01d:	dec    eax
  41c01e:	lods   al,BYTE PTR ds:[esi]
  41c01f:	js     0x41c045
  41c021:	ret    
  41c022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c023:	fbstp  TBYTE PTR [esi-0x5]
  41c026:	unpcklps xmm3,XMMWORD PTR [eax]
  41c029:	jmp    0xf6c6970d
  41c02e:	pop    ds
  41c02f:	add    ebx,DWORD PTR [eax+0x586ab59]
  41c035:	inc    edx
  41c036:	jmp    0x39977fb9
  41c03b:	sub    eax,0x6b442f01
  41c040:	dec    ebp
  41c041:	jge    0x41c02e
  41c043:	adc    dl,BYTE PTR [esi]
  41c045:	xlat   BYTE PTR ds:[ebx]
  41c046:	jecxz  0x41c074
  41c048:	int3   
  41c049:	jo     0x41bff3
  41c04b:	in     eax,dx
  41c04c:	mov    ebp,0x3e754262
  41c051:	popf   
  41c052:	cmp    ebp,ebx
  41c054:	fs pop ebp
  41c056:	dec    edi
  41c057:	loope  0x41c070
  41c059:	or     eax,0x30afd64c
  41c05e:	out    0x7b,al
  41c060:	sahf   
  41c061:	xchg   ecx,eax
  41c062:	jo     0x41c0b3
  41c064:	cmp    bh,BYTE PTR [ebp-0x5f]
  41c067:	jle    0x41c044
  41c069:	iret   
  41c06a:	push   0xffffffa6
  41c06c:	mov    al,0x60
  41c06e:	(bad)  
  41c06f:	js     0x41c0b4
  41c071:	or     DWORD PTR [edi],esi
  41c073:	pop    edx
  41c074:	xor    cl,BYTE PTR [edx-0x1cf64bd]
  41c07a:	sub    DWORD PTR [edx+0x325253f5],0xfc73bd40
  41c084:	imul   ecx,DWORD PTR [esi],0xffffff80
  41c087:	adc    DWORD PTR [ebx-0x31341e13],edx
  41c08d:	scas   eax,DWORD PTR es:[edi]
  41c08e:	pusha  
  41c08f:	cmp    eax,0xe126c02c
  41c094:	push   es
  41c095:	ss cmc 
  41c097:	into   
  41c098:	out    dx,al
  41c099:	pop    ds
  41c09a:	aad    0x17
  41c09c:	adc    BYTE PTR [eax-0x10],0x47
  41c0a0:	xor    bh,BYTE PTR [ecx]
  41c0a2:	test   BYTE PTR [esi+0x6e6e2333],dl
  41c0a8:	add    eax,0xed3dedf8
  41c0ad:	pop    es
  41c0ae:	pop    esp
  41c0af:	inc    esp
  41c0b1:	and    al,bh
  41c0b3:	sbb    al,0xe1
  41c0b5:	pop    esp
  41c0b6:	iret   
  41c0b7:	int3   
  41c0b8:	test   al,0xe3
  41c0ba:	int3   
  41c0bb:	sub    DWORD PTR [ecx-0x7f],ecx
  41c0be:	and    eax,0xfbfa9d8d
  41c0c3:	add    eax,0xe931573b
  41c0c8:	cmp    al,0x47
  41c0ca:	ss call 0x6f642b71
  41c0d0:	mov    edx,0xa487f4f3
  41c0d5:	(bad)  
  41c0d6:	lds    eax,FWORD PTR ds:0xe6b93d8b
  41c0dc:	xor    esi,DWORD PTR [edx]
  41c0de:	jb     0x41c0cb
  41c0e0:	cld    
  41c0e1:	mov    dl,0x46
  41c0e3:	pop    esi
  41c0e4:	neg    BYTE PTR [esi+0x75]
  41c0e7:	aaa    
  41c0e8:	inc    edi
  41c0e9:	mov    fs,eax
  41c0eb:	ss cwde 
  41c0ed:	stc    
  41c0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ef:	(bad)  
  41c0f0:	lods   eax,DWORD PTR ds:[esi]
  41c0f1:	push   eax
  41c0f2:	cwde   
  41c0f3:	mov    edx,0xad3f51f0
  41c0f8:	adc    bh,dh
  41c0fa:	inc    edx
  41c0fb:	std    
  41c0fc:	fmul   DWORD PTR [edi]
  41c0fe:	in     eax,dx
  41c0ff:	mov    esi,0x615ff009
  41c104:	push   edx
  41c105:	leave  
  41c106:	jecxz  0x41c0dc
  41c108:	scas   eax,DWORD PTR es:[edi]
  41c109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c10a:	mov    al,0xcc
  41c10c:	adc    eax,0x1d05b31f
  41c111:	sar    DWORD PTR [eax+0x452b6d9a],1
  41c117:	loopne 0x41c0db
  41c119:	push   edi
  41c11a:	jge    0x41c14e
  41c11c:	scas   eax,DWORD PTR es:[edi]
  41c11d:	int3   
  41c11e:	jecxz  0x41c12c
  41c120:	cdq    
  41c121:	imul   edi,DWORD PTR [edx+0x1ed7ba45],0xc4417e11
  41c12b:	mov    eax,0xf9df582d
  41c130:	ficom  DWORD PTR [ebp+0x230e54c2]
  41c136:	jl     0x41c16a
  41c138:	cmp    al,0xac
  41c13a:	mov    ecx,0x29a23bfa
  41c13f:	jp     0x41c160
  41c141:	(bad)  
  41c142:	cmp    DWORD PTR ss:[ebx],ecx
  41c145:	adc    eax,0xef35d320
  41c14a:	out    dx,eax
  41c14b:	xor    al,0x2b
  41c14d:	aad    0x69
  41c14f:	sub    al,0x14
  41c151:	inc    edi
  41c152:	inc    eax
  41c153:	sub    DWORD PTR [esp-0x6f],ebx
  41c157:	inc    ecx
  41c158:	jno    0x41c12b
  41c15a:	pop    esp
  41c15b:	xchg   edx,eax
  41c15c:	gs sahf 
  41c15e:	lods   al,BYTE PTR ds:[esi]
  41c15f:	js     0x41c13b
  41c161:	xchg   edx,eax
  41c162:	call   0x23db698b
  41c167:	repz pop esi
  41c169:	mov    dl,0xab
  41c16b:	outs   dx,BYTE PTR ds:[esi]
  41c16c:	or     BYTE PTR [esi+0x42],ch
  41c16f:	cli    
  41c170:	jl     0x41c186
  41c172:	mov    esi,0x828d3f32
  41c177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c178:	int3   
  41c179:	mov    dh,0x3c
  41c17b:	cmp    BYTE PTR [ebp+0x5ee82925],bh
  41c181:	stc    
  41c182:	and    eax,0xc7e039e6
  41c187:	in     eax,dx
  41c188:	mov    esi,0x7d8cab96
  41c18d:	push   ebx
  41c18e:	sub    al,0x5b
  41c190:	sahf   
  41c191:	das    
  41c192:	inc    esi
  41c193:	(bad)  
  41c194:	fstp   DWORD PTR [edi-0x23b3a860]
  41c19a:	jg     0x41c1fe
  41c19c:	or     BYTE PTR [edx+0x44],0xad
  41c1a0:	or     DWORD PTR [edx+0x35926113],edi
  41c1a6:	imul   ecx,DWORD PTR gs:[eax-0x734a3b16],0x7b
  41c1ae:	push   ebp
  41c1af:	dec    esp
  41c1b0:	mov    ecx,DWORD PTR gs:[ebx+0x3e]
  41c1b4:	imul   ebx,DWORD PTR [ebp+edx*4-0x43ea252e],0xffffffaf
  41c1bc:	inc    edi
  41c1bd:	jmp    0x41c21b
  41c1bf:	pusha  
  41c1c0:	jns    0x41c17c
  41c1c2:	mov    ah,0xcc
  41c1c4:	lods   al,BYTE PTR ds:[esi]
  41c1c5:	into   
  41c1c6:	inc    esi
  41c1c7:	pop    ebx
  41c1c8:	inc    ebp
  41c1c9:	pop    esp
  41c1ca:	mov    esp,cs
  41c1cc:	xlat   BYTE PTR ds:[ebx]
  41c1cd:	fild   QWORD PTR [ebx-0x15439bce]
  41c1d3:	lea    esp,ds:0xf219ff3b
  41c1d9:	xchg   edi,eax
  41c1da:	rcr    edi,0x6e
  41c1dd:	jl     0x41c226
  41c1df:	imul   ecx,DWORD PTR [eax-0x23],0x5b
  41c1e3:	mov    esp,0xb18394cc
  41c1e8:	test   al,0x72
  41c1ea:	jo     0x41c17e
  41c1ec:	out    dx,al
  41c1ed:	jp     0x41c17c
  41c1ef:	sahf   
  41c1f0:	iret   
  41c1f1:	and    al,0xbb
  41c1f3:	add    eax,0x6dbfab12
  41c1f8:	aas    
  41c1f9:	stos   BYTE PTR es:[edi],al
  41c1fa:	sbb    BYTE PTR [esi+ebp*2+0x1c],dh
  41c1fe:	das    
  41c1ff:	dec    ecx
  41c200:	sbb    DWORD PTR [ecx-0x66],0xfffffff3
  41c204:	inc    ebx
  41c205:	pop    ds
  41c206:	pop    eax
  41c207:	dec    edx
  41c208:	mov    esp,0x5469dd95
  41c20d:	mov    ebx,0x94233f82
  41c212:	push   edi
  41c213:	or     dl,BYTE PTR [edi-0xc]
  41c216:	rcl    ah,cl
  41c218:	push   ebx
  41c219:	mov    eax,DWORD PTR [esi-0x5e]
  41c21c:	scas   eax,DWORD PTR es:[edi]
  41c21d:	in     eax,dx
  41c21e:	adc    DWORD PTR [ebx+0x2415bfd3],0xf4e27be9
  41c228:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c22a:	mov    eax,ds:0x6d5324b1
  41c22f:	imul   esp,DWORD PTR ds:[esi-0x20],0x1d064e3d
  41c237:	cmp    al,0xd8
  41c239:	xchg   ebx,eax
  41c23a:	aaa    
  41c23b:	dec    edi
  41c23c:	fucomi st,st(0)
  41c23e:	cmp    eax,0xee80bd36
  41c243:	mov    dl,0x2e
  41c245:	fnstcw WORD PTR [ecx-0x29]
  41c248:	call   0x7357:0x401c0503
  41c24f:	das    
  41c250:	jbe    0x41c29f
  41c252:	push   ds
  41c253:	stc    
  41c254:	arpl   WORD PTR [esp+eax*4],dx
  41c257:	inc    ebp
  41c258:	mov    bh,0x86
  41c25a:	fcmove st,st(2)
  41c25c:	pop    ebx
  41c25d:	rcr    BYTE PTR [edi-0xbca4d70],1
  41c263:	mov    ebp,DWORD PTR [edx+0x20d33007]
  41c269:	xchg   ecx,eax
  41c26a:	fisub  DWORD PTR [ebp+0x5aa6c261]
  41c270:	sub    al,0x29
  41c272:	fcom   QWORD PTR [eax+ebp*1+0x3dbbf76a]
  41c279:	sahf   
  41c27a:	outs   dx,BYTE PTR ds:[esi]
  41c27b:	jmp    0xa24bece3
  41c280:	cmc    
  41c281:	adc    al,BYTE PTR [ebp-0x6a]
  41c284:	loop   0x41c238
  41c286:	xlat   BYTE PTR ds:[ebx]
  41c287:	repz jmp 0xd929:0xab0c6c60
  41c28f:	(bad)  
  41c290:	pop    ebx
  41c291:	aas    
  41c292:	or     dl,ch
  41c294:	mov    bh,0xb4
  41c296:	add    al,0xce
  41c298:	dec    esi
  41c299:	addr16 xor al,0xa
  41c29c:	rcr    edi,1
  41c29e:	in     al,dx
  41c29f:	loopne 0x41c285
  41c2a1:	sub    dh,0xa7
  41c2a4:	xor    BYTE PTR [ebx+0xe98a050],dl
  41c2aa:	test   dl,ah
  41c2ac:	repnz push 0x8d170253
  41c2b2:	jg     0x41c333
  41c2b4:	popf   
  41c2b5:	mov    ds:0xd7310d50,al
  41c2ba:	xchg   edx,eax
  41c2bb:	cmp    BYTE PTR [edx+0x7cd8b8ab],ch
  41c2c1:	pop    ebx
  41c2c2:	adc    dl,dh
  41c2c4:	dec    esi
  41c2c5:	adc    ebp,ebp
  41c2c7:	sub    DWORD PTR [ebp+0x41476890],edi
  41c2cd:	clc    
  41c2ce:	push   esp
  41c2cf:	je     0x41c295
  41c2d1:	xchg   ebp,eax
  41c2d2:	push   cs
  41c2d3:	inc    esi
  41c2d4:	push   esi
  41c2d5:	mov    bh,0xce
  41c2d7:	sbb    BYTE PTR [ecx],bh
  41c2d9:	test   DWORD PTR [edx-0x4de9692f],eax
  41c2df:	test   al,0xe5
  41c2e1:	fist   WORD PTR [edi-0x688b1d3c]
  41c2e7:	adc    ebx,eax
  41c2e9:	imul   edx,DWORD PTR [ebp+0x24321ae1],0xffffff92
  41c2f0:	mov    bh,0x79
  41c2f2:	jo     0x41c294
  41c2f4:	test   eax,ecx
  41c2f6:	push   eax
  41c2f7:	jp     0x41c363
  41c2f9:	dec    esp
  41c2fa:	ret    
  41c2fb:	cmc    
  41c2fc:	jmp    0x731acd36
  41c301:	cmc    
  41c302:	enter  0x66ab,0xe
  41c306:	aas    
  41c307:	xchg   eax,esi
  41c309:	and    edi,DWORD PTR [ecx]
  41c30b:	jb     0x41c389
  41c30d:	xchg   DWORD PTR [esp+edi*2-0x1b],ebx
  41c311:	js     0x41c38f
  41c313:	(bad)  
  41c314:	rol    BYTE PTR [esp+ebp*1],1
  41c317:	jns    0x41c2a2
  41c319:	cmp    bl,BYTE PTR ds:0xe6e839fb
  41c31f:	jo     0x41c33a
  41c321:	push   ecx
  41c322:	mov    al,bh
  41c324:	stc    
  41c325:	xlat   BYTE PTR ds:[ebx]
  41c326:	fdiv   st(6),st
  41c328:	jmp    0xa0b7:0xff4f8795
  41c32f:	shr    ebx,cl
  41c331:	mov    edi,cs
  41c333:	push   edi
  41c334:	addr16 stc 
  41c336:	lods   eax,DWORD PTR ds:[esi]
  41c337:	inc    ebp
  41c338:	iret   
  41c339:	stos   BYTE PTR es:[edi],al
  41c33a:	(bad)  
  41c33b:	stos   DWORD PTR es:[edi],eax
  41c33c:	sub    DWORD PTR [ebp+0x47],ebp
  41c33f:	mov    DWORD PTR [ebp-0x8118c75],ebp
  41c345:	popf   
  41c346:	mov    al,0xb1
  41c348:	ficomp WORD PTR [ecx-0x66]
  41c34b:	les    ebp,FWORD PTR [esi+0x60]
  41c34e:	mov    esp,0xc799fa7d
  41c353:	and    BYTE PTR [ebp+0x573de025],bl
  41c359:	and    DWORD PTR [esi-0xbf5ab86],esi
  41c35f:	xor    BYTE PTR [eax],bl
  41c361:	pop    esp
  41c362:	push   edi
  41c363:	lds    edi,FWORD PTR [edi-0x11c997e7]
  41c369:	out    0xc0,eax
  41c36b:	push   es
  41c36c:	mov    fs,esp
  41c36e:	push   es
  41c36f:	mov    ecx,0x3cd7f532
  41c374:	inc    esp
  41c375:	jae    0x41c34f
  41c377:	loope  0x41c3e7
  41c379:	pop    ebx
  41c37a:	mov    al,0xee
  41c37c:	(bad)  
  41c37d:	repnz aaa 
  41c37f:	add    ecx,DWORD PTR [esi-0x76]
  41c382:	push   eax
  41c383:	(bad)  
  41c384:	ja     0x41c357
  41c386:	arpl   WORD PTR [ebx-0xe],dx
  41c389:	enter  0xe776,0xea
  41c38d:	or     al,0x80
  41c38f:	je     0x41c380
  41c391:	shl    ebx,0x95
  41c394:	push   es
  41c395:	test   eax,0x5a142c66
  41c39a:	ret    
  41c39b:	ins    DWORD PTR es:[edi],dx
  41c39c:	in     al,0x61
  41c39e:	or     DWORD PTR [ebp+0x38],esi
  41c3a1:	mov    edi,0x7e3847ac
  41c3a6:	or     eax,ebx
  41c3a8:	mov    ecx,0x1daf243e
  41c3ad:	out    dx,al
  41c3ae:	mov    ecx,0x11d73be7
  41c3b3:	pop    es
  41c3b4:	push   es
  41c3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b6:	ins    DWORD PTR es:[edi],dx
  41c3b7:	sub    al,0xc7
  41c3b9:	popa   
  41c3ba:	xchg   edx,eax
  41c3bb:	out    dx,eax
  41c3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3bd:	cdq    
  41c3be:	loop   0x41c37c
  41c3c0:	mov    ch,0xa3
  41c3c2:	stos   DWORD PTR es:[edi],eax
  41c3c3:	xor    esp,DWORD PTR [ecx+eiz*4]
  41c3c6:	(bad)  
  41c3c7:	and    al,0xd2
  41c3c9:	mov    ah,0x31
  41c3cb:	xor    al,0xa8
  41c3cd:	adc    BYTE PTR [ecx],ch
  41c3cf:	ret    
  41c3d0:	ss cs mov eax,0x600fc156
  41c3d7:	pop    ebp
  41c3d8:	cs push cs
  41c3da:	push   cs
  41c3db:	add    BYTE PTR [edx-0x5d],dh
  41c3de:	xor    eax,0x437d890a
  41c3e3:	jg     0x41c385
  41c3e5:	mov    ebp,0xb7b2b7ac
  41c3ea:	jne    0x41c38f
  41c3ec:	or     dl,bl
  41c3ee:	xchg   esp,eax
  41c3ef:	xor    eax,0x45657f4e
  41c3f4:	ja     0x41c3b7
  41c3f6:	inc    eax
  41c3f7:	out    dx,eax
  41c3f8:	pop    esi
  41c3f9:	dec    eax
  41c3fa:	jmp    0xec1e:0x123d2dc9
  41c401:	jbe    0x41c42d
  41c403:	(bad)  
  41c404:	and    al,0xa5
  41c406:	stos   BYTE PTR es:[edi],al
  41c407:	xchg   BYTE PTR [esi-0x7c147ec8],cl
  41c40d:	mov    gs,WORD PTR [ecx]
  41c40f:	jns    0x41c476
  41c411:	mov    dl,bl
  41c413:	shl    bh,cl
  41c415:	call   0x2f24:0xbb8a8fd1
  41c41c:	ret    
  41c41d:	addr16 mov ebp,0x3051f7ab
  41c423:	xor    edx,DWORD PTR ds:0xfa0a8fe3
  41c429:	(bad)  
  41c42b:	mov    esi,0x5d8f7d65
  41c430:	mov    al,dh
  41c432:	mov    BYTE PTR [edi+0x55],dh
  41c435:	popf   
  41c436:	mov    eax,ds:0x440bdcc2
  41c43b:	inc    ebp
  41c43c:	aad    0x91
  41c43e:	mov    bh,0x20
  41c440:	lods   eax,DWORD PTR ds:[esi]
  41c441:	(bad)  
  41c442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c443:	aaa    
  41c444:	dec    eax
  41c445:	add    ch,ah
  41c447:	sub    al,BYTE PTR [ebp-0x7c]
  41c44a:	sub    eax,0x4de359b4
  41c44f:	mov    ds:0x23e783f3,eax
  41c454:	mov    BYTE PTR [ebp-0x5a],ah
  41c457:	mov    al,ds:0x5782617d
  41c45c:	lds    ebp,FWORD PTR [edx+0x66]
  41c45f:	retf   0xed08
  41c462:	mov    bl,0xcb
  41c464:	push   esi
  41c465:	lods   al,BYTE PTR ds:[esi]
  41c466:	xor    DWORD PTR [ecx-0x72],edi
  41c469:	sbb    al,0x2a
  41c46b:	mov    ds,WORD PTR [eax-0x49]
  41c46e:	add    ebx,DWORD PTR [eax-0x76]
  41c471:	fsubr  st,st(4)
  41c473:	cmp    DWORD PTR [ebp+esi*1+0x16],ebx
  41c477:	test   edx,ebx
  41c479:	sbb    bh,ch
  41c47b:	outs   dx,DWORD PTR ds:[esi]
  41c47c:	cmp    ebp,DWORD PTR [esi+0x16f64949]
  41c482:	sub    eax,eax
  41c484:	(bad)  
  41c486:	jno    0x41c4df
  41c488:	ret    0x6aaa
  41c48b:	ret    0x291
  41c48e:	(bad)  
  41c48f:	call   edi
  41c491:	cmp    bl,BYTE PTR ds:0x66453814
  41c497:	pop    eax
  41c498:	daa    
  41c499:	jno    0x41c44b
  41c49b:	int3   
  41c49c:	pop    ds
  41c49d:	retf   0x6883
  41c4a0:	sbb    eax,0x272f70bc
  41c4a5:	push   ebx
  41c4a6:	scas   al,BYTE PTR es:[edi]
  41c4a7:	add    eax,0x6ed25799
  41c4ac:	xchg   edx,eax
  41c4ad:	mov    al,ds:0xf3bf1aed
  41c4b2:	sub    eax,0xb7f40360
  41c4b7:	jl     0x41c4db
  41c4b9:	popa   
  41c4ba:	inc    edx
  41c4bb:	es push esi
  41c4bd:	xchg   cl,dl
  41c4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4c0:	and    eax,0xc5778a7e
  41c4c5:	inc    edi
  41c4c6:	mov    dl,0x15
  41c4c8:	test   eax,0xdcc7f52d
  41c4cd:	xor    DWORD PTR [eax],0x9
  41c4d0:	ins    BYTE PTR es:[edi],dx
  41c4d1:	push   eax
  41c4d2:	pop    ecx
  41c4d3:	sti    
  41c4d4:	enter  0x49,0xc2
  41c4d8:	cld    
  41c4d9:	xor    edi,edx
  41c4db:	xor    BYTE PTR [eax+ebp*4+0x578b9a8a],ah
  41c4e2:	jmp    DWORD PTR [esi-0x44]
  41c4e5:	(bad)  
  41c4e6:	int    0x5d
  41c4e8:	nop
  41c4e9:	adc    al,dh
  41c4eb:	repnz sbb ecx,DWORD PTR [esi+0x18]
  41c4ef:	ja     0x41c51e
  41c4f1:	mov    ch,0x8e
  41c4f3:	dec    edx
  41c4f4:	jle    0x41c530
  41c4f6:	pop    esp
  41c4f7:	adc    eax,0x19e352cc
  41c4fc:	fld    TBYTE PTR ds:0xcc90a804
  41c502:	cvtps2pi mm7,xmm2
  41c505:	cmp    esi,DWORD PTR [edi-0x23b09256]
  41c50b:	mov    ds:0x9d59aa89,al
  41c510:	es dec ecx
  41c512:	outs   dx,DWORD PTR ds:[esi]
  41c513:	test   BYTE PTR [eax],cl
  41c515:	ret    0x2620
  41c518:	stos   BYTE PTR es:[edi],al
  41c519:	jl     0x41c4e2
  41c51b:	add    al,0x2f
  41c51d:	ret    0xd749
  41c520:	sub    esi,edx
  41c522:	dec    ebx
  41c523:	or     al,0xb4
  41c525:	inc    edx
  41c526:	add    DWORD PTR [ecx-0x1c],0x33
  41c52a:	cli    
  41c52b:	(bad)  
  41c52c:	mov    esp,0xe0fd8c
  41c531:	scas   eax,DWORD PTR es:[edi]
  41c532:	inc    ecx
  41c533:	daa    
  41c534:	mov    ebx,eax
  41c536:	jg     0x41c59b
  41c538:	inc    ebp
  41c539:	push   ecx
  41c53a:	ret    0x443f
  41c53d:	test   BYTE PTR [eax+0x225f9ac9],cl
  41c543:	rol    BYTE PTR [edx-0x37c26aa4],0x79
  41c54a:	popf   
  41c54b:	test   al,0xa0
  41c54d:	outs   dx,DWORD PTR ds:[esi]
  41c54e:	leave  
  41c54f:	xchg   esi,eax
  41c550:	mov    ds:0x10053b85,eax
  41c555:	stos   BYTE PTR es:[edi],al
  41c556:	mov    ebx,0xba3315eb
  41c55b:	mov    dh,0xb7
  41c55d:	push   edi
  41c55e:	(bad)  
  41c55f:	data16 out dx,al
  41c561:	xor    dl,BYTE PTR [edi]
  41c563:	xor    eax,0x22fd4d1a
  41c568:	in     eax,0xe1
  41c56a:	repz out 0x44,eax
  41c56d:	int3   
  41c56e:	mov    gs,WORD PTR [ebx+edx*8]
  41c571:	sbb    eax,0xb67573c3
  41c576:	mov    cl,0x6a
  41c578:	ins    DWORD PTR es:[edi],dx
  41c579:	adc    al,0x6e
  41c57b:	jbe    0x41c5b9
  41c57d:	ins    DWORD PTR es:[edi],dx
  41c57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c57f:	repz test al,0x38
  41c582:	inc    ebp
  41c583:	popf   
  41c584:	in     al,dx
  41c585:	and    BYTE PTR [ecx+0xc37d8c],bh
  41c58b:	jp     0x41c52c
  41c58d:	inc    ebx
  41c58e:	jbe    0x41c55e
  41c590:	jbe    0x41c5de
  41c592:	xor    DWORD PTR [edx],edi
  41c594:	rcl    BYTE PTR [esi],0x14
  41c597:	mov    bh,0xd
  41c599:	inc    edi
  41c59a:	pop    esp
  41c59b:	cli    
  41c59c:	pop    ecx
  41c59d:	out    0xfb,al
  41c59f:	call   0x58b1:0x8b78949b
  41c5a6:	pop    esp
  41c5a7:	xchg   ecx,eax
  41c5a8:	rcr    ebx,0x6e
  41c5ab:	xchg   ebp,eax
  41c5ac:	mov    ds:0xb813be65,eax
  41c5b1:	in     eax,dx
  41c5b2:	mov    bh,0x81
  41c5b4:	shl    BYTE PTR [edi],1
  41c5b6:	push   esi
  41c5b7:	add    eax,DWORD PTR ds:[esi]
  41c5ba:	js     0x41c615
  41c5bc:	xor    al,0xff
  41c5be:	pushf  
  41c5bf:	cmp    eax,0x4bb16d07
  41c5c4:	push   esp
  41c5c5:	xchg   DWORD PTR [edx+0x5a],ebp
  41c5c8:	jo     0x41c632
  41c5ca:	scas   eax,DWORD PTR es:[edi]
  41c5cb:	popf   
  41c5cc:	loop   0x41c62c
  41c5ce:	lods   al,BYTE PTR ds:[esi]
  41c5cf:	mov    ebx,0xaf63aa42
  41c5d4:	adc    ebx,DWORD PTR [ebp+0x6823dd5a]
  41c5da:	mov    ch,0x63
  41c5dc:	ffree  st(5)
  41c5de:	xchg   DWORD PTR [edx],ecx
  41c5e0:	loop   0x41c660
  41c5e2:	push   ebp
  41c5e3:	iret   
  41c5e4:	ins    BYTE PTR es:[edi],dx
  41c5e5:	mov    eax,ds:0x9e2d88d7
  41c5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5eb:	push   0xffffffd5
  41c5ed:	fs dec esi
  41c5ef:	jbe    0x41c663
  41c5f1:	vcvtpd2ps xmm5,XMMWORD PTR [ebx+eiz*8-0xa]
  41c5f7:	mov    ecx,0xa9e34bac
  41c5fc:	fwait
  41c5fd:	push   esi
  41c5fe:	adc    eax,0x6c6d3e9
  41c603:	repnz xchg esi,eax
  41c605:	xchg   DWORD PTR [esi],ebp
  41c607:	mov    ebp,0x38bc8a06
  41c60c:	mov    ecx,DWORD PTR [edi]
  41c60e:	sub    BYTE PTR [eax-0x46],0xeb
  41c612:	xor    al,0x60
  41c614:	jnp    0x41c61b
  41c616:	rcr    DWORD PTR [eax+0x11],0x2f
  41c61a:	or     al,0x83
  41c61c:	inc    esp
  41c61d:	jbe    0x41c620
  41c61f:	shl    DWORD PTR [eax+0x37],cl
  41c622:	cdq    
  41c623:	mov    eax,0xb8306e83
  41c628:	popf   
  41c629:	pop    ebx
  41c62a:	retf   0x63b3
  41c62d:	xchg   edx,eax
  41c62e:	in     al,dx
  41c62f:	(bad)  
  41c630:	fstp   QWORD PTR [edx+0x1b]
  41c633:	mov    cl,0xb7
  41c635:	lea    edx,[ebx+eax*8+0x3726799d]
  41c63c:	or     eax,DWORD PTR [edx]
  41c63e:	push   0xffffffda
  41c640:	and    BYTE PTR [esp-0x708ebeef],al
  41c647:	iret   
  41c648:	pop    ss
  41c649:	and    DWORD PTR [ebp+ecx*4+0x73],eax
  41c64d:	(bad)  
  41c64e:	mov    eax,0xf2ec4d49
  41c653:	push   esi
  41c654:	repz out 0x6,eax
  41c657:	pop    ebx
  41c658:	fisub  DWORD PTR ds:[edx+edi*1+0x79]
  41c65d:	lea    ecx,[esi-0xb]
  41c660:	cmp    ah,BYTE PTR [eax+0x6f95aef7]
  41c666:	inc    edx
  41c667:	pushw  ss
  41c669:	and    BYTE PTR [ebp+0x58],ah
  41c66c:	cmp    ebp,DWORD PTR [ecx+0x62]
  41c66f:	push   ecx
  41c670:	xor    al,0xdd
  41c672:	pop    ebp
  41c673:	jle    0x41c619
  41c675:	cmp    al,0x99
  41c677:	mov    eax,0xd55ab716
  41c67c:	int3   
  41c67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c67e:	adc    al,cl
  41c680:	aam    0x70
  41c682:	push   edi
  41c683:	out    dx,al
  41c684:	fs icebp 
  41c686:	mov    ds:0xd8a117d9,eax
  41c68b:	xchg   ebp,eax
  41c68c:	xchg   ecx,eax
  41c68d:	in     eax,dx
  41c68e:	les    edi,FWORD PTR [eax-0x4f]
  41c691:	cmp    edi,ecx
  41c693:	xor    eax,DWORD PTR [esi]
  41c695:	lods   al,BYTE PTR ds:[esi]
  41c696:	xor    eax,0x2326dd4b
  41c69b:	loop   0x41c71a
  41c69d:	lods   eax,DWORD PTR ds:[esi]
  41c69e:	add    eax,DWORD PTR [edx+0x47]
  41c6a1:	sbb    dh,bh
  41c6a3:	jnp    0x41c62f
  41c6a5:	clc    
  41c6a6:	in     eax,dx
  41c6a7:	stc    
  41c6a8:	std    
  41c6a9:	pop    esi
  41c6aa:	and    eax,0xdf39282a
  41c6af:	dec    eax
  41c6b0:	mov    edi,0x68112dbe
  41c6b5:	out    dx,al
  41c6b6:	imul   esi,DWORD PTR [ebp+0x2e],0xc
  41c6ba:	lock pop ax
  41c6be:	xlat   BYTE PTR ds:[ebx]
  41c6bf:	je     0x41c6c2
  41c6c1:	mov    cl,BYTE PTR [ecx-0x44]
  41c6c4:	es sbb al,0x9a
  41c6c7:	icebp  
  41c6c8:	stos   DWORD PTR es:[edi],eax
  41c6c9:	fnsetpm(287 only) 
  41c6cb:	push   ebp
  41c6cc:	push   eax
  41c6cd:	sub    eax,0xac6ed9cd
  41c6d2:	sbb    al,BYTE PTR [ecx+0x3fa2e207]
  41c6d8:	jbe    0x41c664
  41c6da:	push   ss
  41c6db:	jp     0x41c755
  41c6dd:	cwde   
  41c6de:	sub    al,0x4d
  41c6e0:	stos   BYTE PTR es:[edi],al
  41c6e1:	mov    ds:0x8f7a27f3,al
  41c6e6:	fwait
  41c6e7:	sahf   
  41c6e8:	cmp    eax,0xd02e904c
  41c6ed:	xchg   ecx,ebx
  41c6ef:	inc    BYTE PTR [eax+ebx*1]
  41c6f2:	jmp    0x41c764
  41c6f4:	scas   al,BYTE PTR es:[edi]
  41c6f5:	cdq    
  41c6f6:	pop    ecx
  41c6f7:	sahf   
  41c6f8:	mov    dh,0x1e
  41c6fa:	mov    ds:0x3a63c5f0,eax
  41c6ff:	aaa    
  41c700:	repz sbb edi,DWORD PTR [edx-0x73]
  41c704:	std    
  41c705:	and    al,0x6b
  41c707:	aad    0x9d
  41c709:	ffree  st(2)
  41c70b:	cdq    
  41c70c:	imul   edi,DWORD PTR [edi+0x53037cd4],0xffffffe3
  41c713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c714:	aam    0x8f
  41c716:	sti    
  41c717:	inc    esp
  41c718:	inc    esp
  41c719:	call   0xb378:0xf443036d
  41c720:	es jl  0x41c734
  41c723:	out    dx,al
  41c724:	push   cs
  41c725:	ss mov ah,dl
  41c728:	jp     0x41c768
  41c72a:	sub    bh,al
  41c72c:	sbb    BYTE PTR [edi+0x72433ed8],dl
  41c732:	jno    0x41c70a
  41c734:	or     ah,dl
  41c736:	out    0x5,al
  41c738:	cmp    bl,BYTE PTR [eax+0xf230ef6]
  41c73e:	pop    ss
  41c73f:	and    edx,esi
  41c741:	ror    DWORD PTR [eax-0x4f7a7606],1
  41c747:	pop    es
  41c748:	mov    eax,0x641e11cd
  41c74d:	fdivr  QWORD PTR [ecx*8+0x2fa9ce11]
  41c754:	into   
  41c755:	jb     0x41c775
  41c757:	adc    eax,0x9b60ed41
  41c75c:	in     al,dx
  41c75d:	fs xchg ch,bh
  41c760:	aas    
  41c761:	sbb    bh,BYTE PTR [ecx+eiz*4+0x124a7272]
  41c768:	push   ecx
  41c769:	xlat   BYTE PTR ds:[ebx]
  41c76a:	jb     0x41c6ec
  41c76c:	or     eax,0x50592f63
  41c771:	xchg   esp,eax
  41c772:	fistp  DWORD PTR [ecx]
  41c774:	sbb    dh,ah
  41c776:	lds    ebx,FWORD PTR [esi]
  41c778:	inc    DWORD PTR [edi+0x7d9527e5]
  41c77e:	adc    esi,esp
  41c780:	es xchg ah,dl
  41c783:	add    BYTE PTR [ebx+0x3a6a3f38],cl
  41c789:	repnz test DWORD PTR [eax+0x58],eax
  41c78d:	cmp    al,0xcb
  41c78f:	sar    BYTE PTR [eax+0x4a],cl
  41c792:	jae    0x41c7de
  41c794:	or     BYTE PTR [edi+0x6],dh
  41c797:	jle    0x41c7db
  41c799:	jo     0x41c742
  41c79b:	cdq    
  41c79c:	inc    esi
  41c79d:	pop    ebp
  41c79e:	leave  
  41c79f:	fs add eax,0x889fd3b3
  41c7a5:	int    0xe7
  41c7a7:	xchg   ebx,eax
  41c7a8:	mov    esi,0xbe7aba8c
  41c7ad:	mov    dh,0xd3
  41c7af:	jno    0x41c77c
  41c7b1:	imul   edx,edx,0xffffffd5
  41c7b4:	lods   al,BYTE PTR ds:[esi]
  41c7b5:	aas    
  41c7b6:	and    ebx,DWORD PTR [eax]
  41c7b8:	sti    
  41c7b9:	pop    edx
  41c7ba:	xor    eax,0x528c8400
  41c7bf:	out    dx,eax
  41c7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7c1:	or     eax,esp
  41c7c3:	xchg   esi,eax
  41c7c4:	xchg   ebp,eax
  41c7c5:	cld    
  41c7c6:	loope  0x41c772
  41c7c8:	enter  0x3222,0x52
  41c7cc:	jmp    0xe1e4b8d4
  41c7d1:	jae    0x41c7cd
  41c7d3:	sbb    eax,0xd16fad46
  41c7d8:	je     0x41c777
  41c7da:	sub    BYTE PTR [edi],0x9
  41c7dd:	rcl    bl,cl
  41c7df:	cld    
  41c7e0:	mov    bl,0x92
  41c7e2:	je     0x41c808
  41c7e4:	xchg   edx,eax
  41c7e5:	push   ebx
  41c7e6:	adc    ah,bh
  41c7e8:	dec    BYTE PTR [edx+0x65]
  41c7eb:	push   ebp
  41c7ec:	push   0x673856b2
  41c7f1:	mov    al,0x2
  41c7f3:	stos   DWORD PTR es:[edi],eax
  41c7f4:	mov    bl,0xca
  41c7f6:	ror    BYTE PTR [ebx-0x428fa2a3],cl
  41c7fc:	aas    
  41c7fd:	mov    al,ds:0xa2243483
  41c802:	addr16 js 0x41c7df
  41c805:	mov    ebp,0xb9da6894
  41c80a:	repz popa 
  41c80c:	outs   dx,BYTE PTR ds:[esi]
  41c80d:	ja     0x41c7e7
  41c80f:	adc    DWORD PTR [ebp-0x69],ebx
  41c812:	lahf   
  41c813:	jp     0x41c860
  41c815:	shr    DWORD PTR ds:0x651470c5,1
  41c81b:	sub    al,BYTE PTR [edx+0x25]
  41c81e:	hlt    
  41c81f:	and    eax,0x83b1d101
  41c824:	hlt    
  41c825:	lds    ecx,FWORD PTR [esi+ebp*2]
  41c828:	dec    eax
  41c829:	daa    
  41c82a:	mov    al,0xa2
  41c82c:	mov    cl,0x22
  41c82e:	outs   dx,BYTE PTR ds:[esi]
  41c82f:	je     0x41c808
  41c831:	jmp    0x7281:0xd4bab496
  41c838:	loope  0x41c7f3
  41c83a:	ins    BYTE PTR es:[edi],dx
  41c83b:	and    ebx,ebx
  41c83d:	xor    ch,0x80
  41c840:	lds    ebx,FWORD PTR [ecx-0x499c0791]
  41c846:	addr16 cld 
  41c848:	xchg   ebp,eax
  41c849:	cmp    BYTE PTR [ecx],bl
  41c84b:	mov    dh,0xbb
  41c84d:	inc    edx
  41c84e:	dec    ecx
  41c84f:	xlat   BYTE PTR ds:[ebx]
  41c850:	out    dx,al
  41c851:	inc    esp
  41c852:	add    eax,0x630cd75c
  41c857:	xlat   BYTE PTR ds:[ebx]
  41c858:	loope  0x41c8c5
  41c85a:	sbb    DWORD PTR [esi],0x48399fe9
  41c860:	inc    ebx
  41c861:	push   0xf5471454
  41c866:	push   cs
  41c867:	mov    al,ds:0xf8ff6250
  41c86c:	ja     0x41c8a7
  41c86e:	imul   edx,DWORD PTR [edx-0xe],0x452ee297
  41c875:	fscale 
  41c877:	xor    edx,ebx
  41c879:	push   esi
  41c87a:	repz inc eax
  41c87c:	mov    eax,0x35848160
  41c881:	sub    eax,0xb028eb95
  41c886:	xor    eax,0x12f187d
  41c88b:	dec    ecx
  41c88c:	popf   
  41c88d:	fidiv  WORD PTR [ecx-0x74]
  41c891:	mov    BYTE PTR [eax+0x2726f062],ah
  41c897:	jge    0x41c8b1
  41c899:	lahf   
  41c89a:	xchg   edx,eax
  41c89b:	xchg   DWORD PTR [ebp+ebp*1-0x1a8340dc],edx
  41c8a2:	mov    BYTE PTR [ecx-0x6849dcfc],ah
  41c8a8:	inc    eax
  41c8a9:	add    esi,DWORD PTR [edx-0x115e7c19]
  41c8af:	jae    0x41c831
  41c8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8b2:	jnp    0x41c874
  41c8b4:	push   esp
  41c8b5:	enter  0xb1ec,0xc4
  41c8b9:	dec    ebp
  41c8ba:	aad    0x33
  41c8bc:	mov    ecx,0x742837fa
  41c8c1:	and    edx,DWORD PTR [ecx+0x548ed994]
  41c8c7:	cli    
  41c8c8:	mov    cl,0x76
  41c8ca:	jbe    0x41c942
  41c8cc:	mov    ebp,0x4d45a888
  41c8d1:	sub    al,0x37
  41c8d3:	fst    QWORD PTR [edx]
  41c8d5:	imul   ecx,esi,0xa527c7c
  41c8db:	pop    ebx
  41c8dc:	pop    edi
  41c8dd:	sub    BYTE PTR cs:[edx+0x568f0fb6],ch
  41c8e4:	xchg   ch,cl
  41c8e6:	ins    DWORD PTR es:[edi],dx
  41c8e7:	std    
  41c8e8:	std    
  41c8e9:	xor    ecx,DWORD PTR [ebp+0x66]
  41c8ec:	cmc    
  41c8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ee:	enter  0x7629,0x75
  41c8f2:	xchg   ebx,eax
  41c8f3:	mov    edi,0x4b768e1f
  41c8f8:	sub    eax,0x4b5fb2aa
  41c8fd:	adc    BYTE PTR [ebx-0x58],ch
  41c900:	and    ah,BYTE PTR [esi+0x7512e8ff]
  41c906:	outs   dx,BYTE PTR ds:[esi]
  41c907:	xor    eax,0x629d2541
  41c90c:	dec    ebx
  41c90d:	les    esi,FWORD PTR [ebx-0x68]
  41c910:	out    0x92,eax
  41c912:	ret    
  41c913:	cld    
  41c914:	push   ebx
  41c915:	dec    eax
  41c916:	mov    ebx,0x2fe5263e
  41c91b:	icebp  
  41c91c:	in     al,0x6a
  41c91e:	cmp    eax,0x9ad9b6ad
  41c923:	sti    
  41c924:	cld    
  41c925:	in     al,0xcc
  41c927:	jle    0x41c8c9
  41c929:	int3   
  41c92a:	mov    al,ds:0xecee3428
  41c92f:	add    eax,0xe5f87991
  41c934:	fwait
  41c935:	call   0xa1c3b2e6
  41c93a:	shl    BYTE PTR ds:0x5cfe65a6,cl
  41c940:	mov    ds:0x6a61ba69,al
  41c945:	inc    ecx
  41c946:	and    BYTE PTR [ebx+0x70b94cdc],al
  41c94c:	mov    al,0x7a
  41c94e:	and    BYTE PTR [ecx+0x570dfeec],0xd3
  41c955:	(bad)  
  41c956:	and    ah,BYTE PTR [edx+ebx*8-0x5f]
  41c95a:	fmul   st(7),st
  41c95c:	xor    DWORD PTR [esi],0x40
  41c95f:	in     eax,dx
  41c960:	icebp  
  41c961:	shl    BYTE PTR [ebp-0x4b],cl
  41c964:	sti    
  41c965:	and    edx,DWORD PTR [esi+0x22c342a2]
  41c96b:	cmp    bh,dl
  41c96d:	fs or  bh,cl
  41c970:	ins    BYTE PTR es:[edi],dx
  41c971:	(bad)  
  41c972:	call   DWORD PTR [ebp+0x46ed27c6]
  41c978:	xchg   esp,eax
  41c979:	lods   eax,DWORD PTR ds:[esi]
  41c97a:	cmp    al,0x6a
  41c97c:	adc    DWORD PTR [eax],ebp
  41c97e:	dec    ecx
  41c97f:	cmp    eax,0xb708f0cc
  41c984:	and    DWORD PTR [ebp+0x47],0xffffffc2
  41c988:	jmp    0x41c918
  41c98a:	cmp    BYTE PTR [ebp-0x4e8bad80],bl
  41c990:	dec    edx
  41c991:	add    DWORD PTR [ebx],0x23
  41c994:	ins    DWORD PTR es:[edi],dx
  41c995:	addr16 adc ch,dl
  41c998:	jb     0x41c96a
  41c99a:	mov    ds:0x812e70ac,eax
  41c99f:	push   esp
  41c9a0:	cmovs  ebp,edi
  41c9a3:	or     al,BYTE PTR [ebx+0x80031e8]
  41c9a9:	div    DWORD PTR [ebx]
  41c9ab:	ret    
  41c9ac:	add    eax,0x4f7671e1
  41c9b1:	xchg   ecx,eax
  41c9b2:	or     bh,BYTE PTR [edi-0x48]
  41c9b5:	push   0x3
  41c9b7:	mov    ds:0x7dfb14e9,al
  41c9bc:	sub    eax,0x1b54ba0b
  41c9c1:	frstor [edi+0x476f855a]
  41c9c7:	not    BYTE PTR [esi]
  41c9c9:	mov    dl,0x89
  41c9cb:	dec    ebx
  41c9cc:	jp     0x41c9a4
  41c9ce:	push   0x8b5e618f
  41c9d3:	push   es
  41c9d4:	(bad)  
  41c9d5:	mov    dl,0x4e
  41c9d7:	ret    
  41c9d8:	or     DWORD PTR [ebx+0x6696a5d5],edi
  41c9de:	jmp    0x41ca34
  41c9e0:	jmp    0x8561:0x59e84a1c
  41c9e7:	sbb    bl,bl
  41c9e9:	push   es
  41c9ea:	in     al,dx
  41c9eb:	aad    0x52
  41c9ed:	push   esi
  41c9ee:	adc    esi,DWORD PTR [esi-0x6c]
  41c9f1:	push   esp
  41c9f2:	inc    ebp
  41c9f3:	mov    eax,ds:0x7473fa26
  41c9f8:	mov    bh,0x7b
  41c9fa:	fstp   QWORD PTR [esi+esi*2]
  41c9fd:	cwde   
  41c9fe:	aam    0x2f
  41ca00:	lock mov ecx,0x1dcdd494
  41ca06:	and    ch,BYTE PTR [esi+0x46]
  41ca09:	jnp    0x41c9d5
  41ca0b:	out    dx,eax
  41ca0c:	jl     0x41ca50
  41ca0e:	jp     0x41c9b3
  41ca10:	ss mov bl,0x27
  41ca13:	je     0x41ca7b
  41ca15:	popf   
  41ca16:	lods   al,BYTE PTR ds:[esi]
  41ca17:	xchg   BYTE PTR ds:0xf3a3efc4,ch
  41ca1d:	mov    edx,0xcbb85b03
  41ca22:	(bad)  
  41ca23:	cmc    
  41ca24:	sar    BYTE PTR [eax+ecx*2-0x58],1
  41ca28:	cmp    ebx,edx
  41ca2a:	mov    ds:0xb8f6e41c,eax
  41ca2f:	lea    ebp,[ebx+0x1ac988a2]
  41ca35:	jl     0x41ca77
  41ca37:	das    
  41ca38:	jno    0x41ca1b
  41ca3a:	push   ebp
  41ca3b:	xor    BYTE PTR [ebp-0x7f07f95e],ah
  41ca41:	add    BYTE PTR [edi+ebp*4-0x5c],0x23
  41ca46:	mov    dh,0xb0
  41ca48:	test   bh,ch
  41ca4a:	bound  esp,QWORD PTR es:[eax+0x5f]
  41ca4e:	sbb    eax,0x6d2b58c0
  41ca53:	bound  edx,QWORD PTR [eax-0xcc0b93]
  41ca59:	xchg   DWORD PTR [ebp-0x30],ecx
  41ca5c:	outs   dx,DWORD PTR ds:[esi]
  41ca5d:	mov    eax,ds:0x11f41a55
  41ca62:	es mov cl,0x4d
  41ca65:	out    dx,al
  41ca66:	pop    ss
  41ca67:	daa    
  41ca68:	cs pop ecx
  41ca6a:	dec    edx
  41ca6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca6c:	mov    esi,0x79673235
  41ca71:	pop    edi
  41ca72:	xchg   edx,eax
  41ca73:	inc    esi
  41ca74:	and    eax,0xedbaff0b
  41ca79:	mov    edi,0x7b406711
  41ca7e:	mov    ebx,0xcabca9e2
  41ca83:	add    eax,0xfb11b960
  41ca88:	sub    ah,BYTE PTR [ebp-0x38]
  41ca8b:	stos   BYTE PTR es:[edi],al
  41ca8c:	(bad)  
  41ca8e:	nop
  41ca8f:	adc    esp,ecx
  41ca91:	inc    ebx
  41ca92:	rcpps  xmm0,XMMWORD PTR [eax]
  41ca95:	xlat   BYTE PTR ds:[ebx]
  41ca96:	jg     0x41ca9b
  41ca98:	pop    ss
  41ca99:	xchg   edi,eax
  41ca9a:	sub    bh,cl
  41ca9c:	mov    ecx,0xf54a26ed
  41caa1:	loop   0x41cae5
  41caa3:	ss aaa 
  41caa5:	sbb    al,BYTE PTR [edi-0x56]
  41caa8:	lods   eax,DWORD PTR ds:[esi]
  41caa9:	(bad)  
  41caaa:	mov    al,ds:0x7db01875
  41caaf:	popf   
  41cab0:	call   0x833a53e7
  41cab5:	mov    eax,0xdd9be3ff
  41caba:	aad    0xbc
  41cabc:	hlt    
  41cabd:	mov    BYTE PTR [edi-0xd566155],dl
  41cac3:	jg     0x41ca69
  41cac5:	(bad)  
  41cac6:	rcl    BYTE PTR [ecx],cl
  41cac8:	mov    ecx,0xba2bd7c9
  41cacd:	sub    BYTE PTR [edi-0x4d],ch
  41cad0:	sbb    eax,0x6f0e868c
  41cad5:	sbb    DWORD PTR [esp+edi*8-0x7eff7e4b],esp
  41cadc:	test   al,0x76
  41cade:	mov    eax,0x77ffd4dd
  41cae3:	ret    0x26c4
  41cae6:	pop    ecx
  41cae7:	fsub   DWORD PTR [eax]
  41cae9:	aad    0x60
  41caeb:	pop    edi
  41caec:	aad    0x43
  41caee:	shr    BYTE PTR [edx-0x4b916fdc],1
  41caf4:	inc    edi
  41caf5:	mov    DWORD PTR [edx+0x71],0x4181b1c7
  41cafc:	pop    esp
  41cafd:	arpl   WORD PTR [ebx+0x71b696d2],di
  41cb03:	xor    BYTE PTR [eax+0x26b451e1],ah
  41cb09:	sti    
  41cb0a:	les    esi,FWORD PTR [eax-0x782c229d]
  41cb10:	sbb    DWORD PTR [esi+ebp*2-0x6c66c271],ecx
  41cb17:	xor    dh,BYTE PTR [ebp-0x6e46ac77]
  41cb1d:	pushf  
  41cb1e:	adc    al,0xaa
  41cb20:	bound  ebp,QWORD PTR [eiz*8-0x4f2cea46]
  41cb27:	scas   al,BYTE PTR es:[edi]
  41cb28:	test   cl,ah
  41cb2a:	add    eax,0xb27cb811
  41cb2f:	fdivr  st(4),st
  41cb31:	pop    eax
  41cb32:	jmp    0x3989:0x6f9eca88
  41cb39:	jno    0x41cafc
  41cb3b:	mov    esp,0xb918b65e
  41cb40:	add    dl,bh
  41cb42:	sahf   
  41cb43:	sbb    esp,ebx
  41cb45:	cmp    edx,DWORD PTR [edi]
  41cb47:	inc    edx
  41cb48:	imul   esp,DWORD PTR [edi+0x4d3bb4cc],0x8657f5de
  41cb52:	mov    bh,BYTE PTR [esi+0x53]
  41cb55:	add    al,0xff
  41cb57:	(bad)  
  41cb58:	fmul   DWORD PTR [eax+0x10]
  41cb5b:	mov    ebp,ebx
  41cb5d:	sar    BYTE PTR [ecx-0x1e],cl
  41cb60:	test   eax,0x746970a4
  41cb65:	jns    0x41cbb0
  41cb67:	out    dx,al
  41cb68:	jns    0x41cb30
  41cb6a:	out    0xe5,al
  41cb6c:	shr    BYTE PTR [esi+0x5a],0x72
  41cb70:	(bad)  
  41cb71:	inc    edi
  41cb72:	dec    edi
  41cb73:	in     eax,0x85
  41cb75:	push   esi
  41cb76:	out    0x21,eax
  41cb78:	inc    ebx
  41cb79:	fs pop esi
  41cb7b:	sbb    ebp,0x16
  41cb7e:	ret    
  41cb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb80:	adc    edx,DWORD PTR [edi-0x36]
  41cb83:	fucomip st,st(6)
  41cb85:	loop   0x41cb31
  41cb87:	sub    DWORD PTR [ebx-0xd],0xf38c8691
  41cb8e:	pop    esi
  41cb8f:	push   ds
  41cb90:	mov    cl,0x29
  41cb92:	pop    edx
  41cb93:	add    esp,eax
  41cb95:	cs das 
  41cb97:	adc    al,0x19
  41cb99:	cmc    
  41cb9a:	in     al,0xc5
  41cb9c:	adc    DWORD PTR [ebx],edx
  41cb9e:	sbb    dh,BYTE PTR [ecx]
  41cba0:	mov    WORD PTR [eax],cs
  41cba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cba3:	cld    
  41cba4:	sbb    eax,0xda2b318b
  41cba9:	into   
  41cbaa:	fcmovnbe st,st(4)
  41cbac:	inc    edi
  41cbad:	mov    bh,0x5a
  41cbaf:	in     al,0xcf
  41cbb1:	shr    BYTE PTR [eax],0x52
  41cbb4:	ins    BYTE PTR es:[edi],dx
  41cbb5:	mov    BYTE PTR [edi+ebx*4-0x21ae078],ch
  41cbbc:	fisubr DWORD PTR [edx-0x2678bb9]
  41cbc2:	iret   
  41cbc3:	pop    es
  41cbc4:	cs in  eax,0xbd
  41cbc7:	gs sahf 
  41cbc9:	add    dh,BYTE PTR [ebx]
  41cbcb:	icebp  
  41cbcc:	jo     0x41cc05
  41cbce:	dec    esp
  41cbcf:	mov    dl,0x18
  41cbd1:	test   eax,0x839e1e91
  41cbd6:	xor    dh,BYTE PTR [eax-0xb7b2912]
  41cbdc:	sbb    BYTE PTR [eax*4-0x3e9f5808],bl
  41cbe3:	loopne 0x41cc44
  41cbe5:	mov    cl,BYTE PTR [esp+eax*2]
  41cbe8:	adc    dh,BYTE PTR [esi+ebx*4-0x72]
  41cbec:	pop    ss
  41cbed:	test   DWORD PTR [ebp-0x1a],esp
  41cbf0:	test   eax,0xbd05343b
  41cbf5:	sbb    BYTE PTR [ebp-0x55c29b8d],cl
  41cbfb:	fldcw  WORD PTR [eax-0x4e]
  41cbfe:	mov    edi,0xb8940525
  41cc03:	rol    BYTE PTR [edx-0x150c2f5f],1
  41cc09:	fs ja  0x41cc83
  41cc0c:	push   cs
  41cc0d:	adc    eax,0xdf269df9
  41cc12:	loop   0x41cc65
  41cc14:	xchg   BYTE PTR [edx],dl
  41cc16:	pop    ds
  41cc17:	mov    dh,BYTE PTR [eax+0xfb4cd4c]
  41cc1d:	xchg   esp,eax
  41cc1e:	sub    al,0x83
  41cc20:	sub    eax,0x493fcd86
  41cc25:	xor    al,0x2c
  41cc27:	jp     0x41cc9d
  41cc29:	jle    0x41cc1c
  41cc2b:	inc    ebp
  41cc2c:	gs loop 0x41cc4c
  41cc2f:	pop    ebp
  41cc30:	call   0xb6f27d1f
  41cc35:	mov    eax,ds:0xc08a3f1f
  41cc3a:	sbb    BYTE PTR [ebx],0x66
  41cc3d:	nop
  41cc3e:	cld    
  41cc3f:	push   ecx
  41cc40:	and    cl,BYTE PTR [ecx+0x43]
  41cc43:	test   al,0x20
  41cc45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc46:	xor    ebx,DWORD PTR [ebx-0x5]
  41cc49:	iret   
  41cc4a:	aas    
  41cc4b:	jl     0x41cc5f
  41cc4d:	dec    esi
  41cc4e:	pop    esp
  41cc4f:	sti    
  41cc50:	mov    ah,0x4
  41cc52:	in     eax,0x2a
  41cc54:	aam    0xaa
  41cc56:	cmp    ebx,DWORD PTR [ebx]
  41cc58:	xlat   BYTE PTR ds:[ebx]
  41cc59:	nop
  41cc5a:	cdq    
  41cc5b:	js     0x41cc93
  41cc5d:	retf   
  41cc5e:	adc    ecx,DWORD PTR [edx-0x12dc939f]
  41cc64:	mov    al,ds:0xfd501fcd
  41cc69:	mov    ds,ebp
  41cc6b:	div    DWORD PTR [ebp+0x1e]
  41cc6e:	mov    DWORD PTR [ebx+ebp*8+0x57faa67f],eax
  41cc75:	fwait
  41cc76:	scas   al,BYTE PTR es:[edi]
  41cc77:	aas    
  41cc78:	cld    
  41cc79:	jnp    0x41cc65
  41cc7b:	sub    BYTE PTR [eax-0x4bd4c0b7],al
  41cc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc82:	cdq    
  41cc83:	inc    edi
  41cc84:	cdq    
  41cc85:	sub    eax,0x37baa62e
  41cc8a:	mov    dl,0x65
  41cc8c:	cli    
  41cc8d:	(bad)  
  41cc8e:	fwait
  41cc8f:	retf   0xb8ea
  41cc92:	sahf   
  41cc93:	inc    esp
  41cc94:	mov    bh,0x75
  41cc96:	mov    dh,0x99
  41cc98:	adc    eax,esp
  41cc9a:	pop    ds
  41cc9b:	dec    ecx
  41cc9c:	push   esi
  41cc9d:	lahf   
  41cc9e:	fcom   DWORD PTR [ecx+0x5fe9a0e5]
  41cca4:	lods   eax,DWORD PTR ds:[esi]
  41cca5:	sub    DWORD PTR ds:[bx+di+0x671b],0xf54b6e4b
  41ccaf:	jg     0x41cd1f
  41ccb1:	jl     0x41cced
  41ccb3:	ss loopne 0x41cca8
  41ccb6:	jns    0x41cd0f
  41ccb8:	sbb    DWORD PTR [esi],ecx
  41ccba:	inc    ebx
  41ccbb:	mov    cl,0x72
  41ccbd:	jbe    0x41ccee
  41ccbf:	jnp    0x41ccf6
  41ccc1:	mov    eax,0x7fff01e1
  41ccc6:	outs   dx,BYTE PTR ds:[esi]
  41ccc7:	add    dl,cl
  41ccc9:	adc    dl,BYTE PTR [esi]
  41cccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cccc:	repnz sbb DWORD PTR [ecx+0x16cffe9d],esp
  41ccd3:	inc    ebx
  41ccd4:	pop    esp
  41ccd5:	pop    edi
  41ccd6:	mov    al,ch
  41ccd8:	and    BYTE PTR [ebp+0x229c0c6d],ch
  41ccde:	inc    esi
  41ccdf:	mov    ebp,0x9b56e4a
  41cce4:	ds icebp 
  41cce6:	in     eax,dx
  41cce7:	inc    esp
  41cce8:	or     DWORD PTR [ebx],esi
  41ccea:	test   BYTE PTR [edx+ebx*8-0xe190031],bl
  41ccf1:	les    eax,FWORD PTR [ebp+0x10]
  41ccf4:	sbb    edx,DWORD PTR [ecx+0x7e]
  41ccf7:	fist   WORD PTR [esi-0x3]
  41ccfa:	mov    ecx,0xc708593d
  41ccff:	sub    bh,BYTE PTR [esi+0x4be64d0d]
  41cd05:	pop    ss
  41cd06:	add    DWORD PTR [esi-0x5d],eax
  41cd09:	inc    esp
  41cd0a:	sbb    eax,DWORD PTR [edi]
  41cd0c:	cld    
  41cd0d:	dec    ebp
  41cd0e:	pop    ecx
  41cd0f:	je     0x41cd6e
  41cd11:	(bad)  
  41cd12:	in     al,0x6b
  41cd14:	mov    ds:0xb7dc0376,eax
  41cd19:	adc    edi,DWORD PTR fs:[ebx]
  41cd1c:	enter  0x7545,0x53
  41cd20:	sub    BYTE PTR [eax],ah
  41cd22:	(bad)  
  41cd23:	jmp    0x9c6695e2
  41cd28:	in     al,0xc4
  41cd2a:	popf   
  41cd2b:	or     eax,0xef849e3
  41cd30:	enter  0xc633,0x8c
  41cd34:	int    0xfd
  41cd36:	cmp    edx,esi
  41cd38:	iret   
  41cd39:	dec    ebp
  41cd3a:	sub    ecx,DWORD PTR [edi-0x34f25c83]
  41cd40:	mov    bl,0x55
  41cd42:	add    bl,cl
  41cd44:	ret    
  41cd45:	xchg   esi,eax
  41cd46:	cmp    esp,ebp
  41cd48:	sar    BYTE PTR [edx+0x737bbd0b],0xa5
  41cd4f:	fstp   QWORD PTR [eax-0x42]
  41cd52:	inc    eax
  41cd53:	out    dx,eax
  41cd54:	ret    0x4d9b
  41cd57:	push   esi
  41cd58:	sbb    al,0x64
  41cd5a:	enter  0x20f0,0xaf
  41cd5e:	fdivr  DWORD PTR [eax]
  41cd60:	repnz fidivr DWORD PTR [ebx+0x51c293b1]
  41cd67:	xor    al,0xe4
  41cd69:	sar    DWORD PTR [ecx+0x5cc13dbc],cl
  41cd6f:	popa   
  41cd70:	popf   
  41cd71:	mov    eax,0x4acd8dd4
  41cd76:	sbb    ebx,ebx
  41cd78:	push   cs
  41cd79:	pop    ebp
  41cd7a:	jno    0x41cd4f
  41cd7c:	xor    al,0x75
  41cd7e:	inc    edi
  41cd7f:	add    cl,dh
  41cd81:	les    eax,FWORD PTR [ebx]
  41cd83:	xchg   esi,eax
  41cd84:	ins    DWORD PTR es:[edi],dx
  41cd85:	sbb    ah,BYTE PTR [ebp+0x7b]
  41cd88:	loope  0x41cd48
  41cd8a:	inc    esi
  41cd8b:	pop    edx
  41cd8c:	fimul  WORD PTR [esi+0x47]
  41cd8f:	adc    eax,DWORD PTR [ecx+0x4c]
  41cd92:	popf   
  41cd93:	(bad)  
  41cd95:	hlt    
  41cd96:	retf   
  41cd97:	inc    edx
  41cd98:	mov    ah,0xb6
  41cd9a:	nop
  41cd9b:	push   eax
  41cd9c:	rcr    DWORD PTR [ecx+0x32],cl
  41cd9f:	push   esp
  41cda0:	push   edi
  41cda1:	mov    ds:0xecb5614c,al
  41cda6:	ror    BYTE PTR [edi-0x3e],0x2c
  41cdaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdab:	aas    
  41cdac:	mov    ebp,DWORD PTR [eax+0xb]
  41cdaf:	push   edx
  41cdb0:	hlt    
  41cdb1:	mov    eax,ds:0x9bf2585e
  41cdb6:	add    edx,eax
  41cdb8:	jne    0x41cdae
  41cdba:	stc    
  41cdbb:	mov    ebp,0xa1ec18cd
  41cdc0:	mov    DWORD PTR [edi],ebx
  41cdc2:	sub    eax,edx
  41cdc4:	push   ebx
  41cdc5:	fdivr  QWORD PTR [edx-0x3141085e]
  41cdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdcc:	sub    eax,0x4a1d2f5b
  41cdd1:	leave  
  41cdd2:	inc    esi
  41cdd3:	arpl   WORD PTR [ebx+0x78],cx
  41cdd6:	inc    esi
  41cdd7:	mov    ds:0xad889e08,eax
  41cddc:	fxch   st(2)
  41cdde:	mov    cl,0x71
  41cde0:	add    al,cl
  41cde2:	aas    
  41cde3:	sbb    eax,0x819db3d4
  41cde8:	ret    
  41cde9:	jge    0x41cde1
  41cdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdec:	add    BYTE PTR [edi-0x7784823f],cl
  41cdf2:	or     eax,0xd286ae29
  41cdf7:	push   eax
  41cdf8:	jp     0x41ce31
  41cdfa:	xor    DWORD PTR [edi+0xc1c8972],edx
  41ce00:	test   al,0x83
  41ce02:	es das 
  41ce04:	in     eax,dx
  41ce05:	loope  0x41cddc
  41ce07:	fldenv [edx-0x4c475260]
  41ce0d:	inc    ebp
  41ce0e:	and    BYTE PTR [edx],bh
  41ce10:	sbb    edi,esp
  41ce12:	loope  0x41cdb2
  41ce14:	jns    0x41ce2d
  41ce16:	add    ecx,DWORD PTR [ebp+0x50]
  41ce19:	push   edx
  41ce1a:	cmp    BYTE PTR [eax-0x73071ff4],cl
  41ce20:	dec    ebx
  41ce21:	cs jo  0x41cdfc
  41ce24:	dec    edx
  41ce25:	(bad)  
  41ce26:	call   0x62bfb23e
  41ce2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce2c:	and    al,dh
  41ce2e:	mul    BYTE PTR ds:0x774eddd0
  41ce34:	outs   dx,BYTE PTR ds:[esi]
  41ce35:	cli    
  41ce36:	jl     0x41cdea
  41ce38:	pusha  
  41ce39:	(bad)  
  41ce3a:	daa    
  41ce3b:	push   0x5a
  41ce3d:	cmp    cl,al
  41ce3f:	out    0xca,eax
  41ce41:	pop    ecx
  41ce42:	mov    eax,ds:0x6ac9f974
  41ce47:	or     eax,DWORD PTR [esi+0x2283ef01]
  41ce4d:	imul   ecx,DWORD PTR [esp+ecx*2+0x1e46d509],0xffffffe7
  41ce55:	test   dh,0xa5
  41ce58:	xchg   DWORD PTR [edx+0x5f8e05f2],esi
  41ce5e:	xor    esi,DWORD PTR [edx+0x33]
  41ce61:	sbb    al,0x97
  41ce63:	dec    eax
  41ce64:	inc    ebx
  41ce65:	dec    ebp
  41ce66:	jo     0x41ce52
  41ce68:	and    BYTE PTR [eax],ah
  41ce6a:	add    DWORD PTR fs:[esi+edi*8],edx
  41ce6e:	scas   eax,DWORD PTR es:[edi]
  41ce6f:	stos   DWORD PTR es:[edi],eax
  41ce70:	mov    ds:0xe94a4a5b,al
  41ce75:	mov    ebp,0x3c30637c
  41ce7a:	mov    ebp,0x73cd34fb
  41ce7f:	dec    esi
  41ce80:	lds    ecx,FWORD PTR [ebp-0x3d]
  41ce83:	sbb    ch,BYTE PTR [edi-0x69551710]
  41ce89:	pop    gs
  41ce8b:	or     eax,DWORD PTR [esi-0x3d7d7160]
  41ce91:	inc    edx
  41ce92:	mov    dl,0x8e
  41ce94:	inc    edi
  41ce95:	stos   BYTE PTR es:[edi],al
  41ce96:	cli    
  41ce97:	sub    BYTE PTR [ecx+0x747252b3],bh
  41ce9d:	call   0x93867f54
  41cea2:	packuswb mm5,QWORD PTR [ebx+0x7fd15b96]
  41cea9:	call   0x98a37e8e
  41ceae:	and    al,0xcd
  41ceb0:	xchg   edx,eax
  41ceb1:	ds (bad) 
  41ceb3:	lock in eax,dx
  41ceb5:	ret    
  41ceb6:	imul   ecx,DWORD PTR [ecx-0x63],0xffffff90
  41ceba:	cmp    BYTE PTR [ebp-0x45982bb2],0x9b
  41cec1:	cwde   
  41cec2:	fnstsw WORD PTR [esi-0xaa57e8d]
  41cec8:	or     ecx,eax
  41ceca:	icebp  
  41cecb:	ret    
  41cecc:	inc    edx
  41cecd:	pusha  
  41cece:	dec    esp
  41cecf:	clc    
  41ced0:	mov    ebp,0xf0f86272
  41ced5:	xor    al,0x6c
  41ced7:	adc    al,0x3a
  41ced9:	push   ecx
  41ceda:	cwde   
  41cedb:	pop    esi
  41cedc:	dec    ebp
  41cedd:	in     eax,0x41
  41cedf:	mov    esp,0x1125fb2b
  41cee4:	xor    DWORD PTR ds:0xdd521b27,esp
  41ceea:	inc    ebp
  41ceeb:	dec    ecx
  41ceec:	push   edi
  41ceed:	xchg   esi,eax
  41ceee:	hlt    
  41ceef:	mov    ecx,0xbdb7226b
  41cef4:	das    
  41cef5:	xlat   BYTE PTR ds:[ebx]
  41cef6:	pop    esp
  41cef7:	nop
  41cef8:	jmp    0xce31:0xeb772d2e
  41ceff:	sbb    BYTE PTR [ebx+0x6caa8047],bh
  41cf05:	dec    ebp
  41cf06:	add    al,0x80
  41cf08:	arpl   WORD PTR [ebx-0x3fcabc66],dx
  41cf0e:	pop    esp
  41cf0f:	mov    esp,DWORD PTR [esi+0x7bdb52df]
  41cf15:	adc    bh,dl
  41cf17:	and    ah,BYTE PTR [edi]
  41cf19:	loope  0x41cf2e
  41cf1b:	push   esp
  41cf1c:	shr    DWORD PTR [ebp-0x1f],1
  41cf1f:	or     edx,esi
  41cf21:	jge    0x41cee8
  41cf23:	mov    ah,0xc6
  41cf25:	pop    edi
  41cf26:	jne    0x41cf23
  41cf28:	cmp    DWORD PTR [ebx],edi
  41cf2a:	sub    dl,dl
  41cf2c:	cmp    al,BYTE PTR [ebx-0x6dd05481]
  41cf32:	mov    dl,0x1b
  41cf34:	adc    al,0xec
  41cf36:	sub    ch,BYTE PTR [ecx]
  41cf38:	and    eax,0xda3b962d
  41cf3d:	or     eax,0x187595da
  41cf42:	xchg   esp,eax
  41cf43:	in     eax,dx
  41cf44:	jp     0x41cf59
  41cf46:	stos   BYTE PTR es:[edi],al
  41cf47:	jno    0x41cf70
  41cf49:	iret   
  41cf4a:	push   edx
  41cf4b:	push   edx
  41cf4c:	rcl    esp,cl
  41cf4e:	fcomp  QWORD PTR ss:0x194fb09d
  41cf55:	ds inc edi
  41cf57:	mov    ds:0x9787aea,eax
  41cf5c:	sub    DWORD PTR [ebx],0xffffff82
  41cf5f:	sbb    DWORD PTR [esi-0x75],edi
  41cf62:	test   al,0xae
  41cf64:	adc    edx,DWORD PTR [ebx+ebx*4]
  41cf67:	(bad)  
  41cf68:	or     BYTE PTR [esi-0x67],bl
  41cf6b:	jp     0x41cfc6
  41cf6d:	cmp    ebp,edi
  41cf6f:	sbb    eax,DWORD PTR [edx-0x2d]
  41cf72:	jecxz  0x41cf2f
  41cf74:	add    cl,BYTE PTR [eax]
  41cf76:	push   0x78a73341
  41cf7b:	outs   dx,DWORD PTR ds:[esi]
  41cf7c:	mov    eax,ds:0xe4ea9450
  41cf81:	sbb    bh,BYTE PTR [ebp-0x3c3be43f]
  41cf87:	jnp    0x41cffd
  41cf89:	xchg   esi,eax
  41cf8a:	loope  0x41cf1b
  41cf8c:	daa    
  41cf8d:	popa   
  41cf8e:	jb     0x41cf18
  41cf90:	jae    0x41d00f
  41cf92:	retf   0x3413
  41cf95:	pusha  
  41cf96:	add    BYTE PTR [ebp+0xb],0x6a
  41cf9a:	sub    edi,DWORD PTR [eax+0x71]
  41cf9d:	fmul   QWORD PTR [ecx-0x24]
  41cfa0:	xor    BYTE PTR [ebx+0x7be449fd],bh
  41cfa6:	scas   eax,DWORD PTR es:[edi]
  41cfa7:	scas   eax,DWORD PTR es:[edi]
  41cfa8:	xchg   esp,eax
  41cfa9:	or     DWORD PTR [ebx+ebx*1],ebx
  41cfac:	aad    0x72
  41cfae:	gs mov esi,0x46a7df07
  41cfb4:	jb     0x41cff6
  41cfb6:	out    0xba,al
  41cfb8:	sbb    eax,0x521672d2
  41cfbd:	push   cs
  41cfbe:	pop    ss
  41cfbf:	add    al,0x84
  41cfc1:	(bad)  
  41cfc2:	jle    0x41cfa3
  41cfc4:	test   dh,0xd4
  41cfc7:	push   ds
  41cfc8:	imul   ebx,DWORD PTR ds:0xa407e031,0xffffff9a
  41cfcf:	cmp    BYTE PTR [ecx],dh
  41cfd1:	xchg   esi,eax
  41cfd2:	ret    
  41cfd3:	cmp    eax,edx
  41cfd5:	in     al,dx
  41cfd6:	jmp    0x526a7575
  41cfdb:	push   es
  41cfdc:	ror    bh,1
  41cfde:	dec    esi
  41cfdf:	mov    ebp,0x6120c649
  41cfe4:	mov    edi,DWORD PTR [eax-0x54]
  41cfe7:	stc    
  41cfe8:	ins    BYTE PTR es:[edi],dx
  41cfe9:	inc    ebx
  41cfea:	sbb    eax,0xf9911bde
  41cfef:	pop    es
  41cff0:	rcr    BYTE PTR [ebp+0x64c2109e],cl
  41cff6:	or     ebx,0xd5dbe79b
  41cffc:	repz pusha 
  41cffe:	ins    BYTE PTR es:[edi],dx
  41cfff:	add    DWORD PTR [edx],esi
  41d001:	out    0xe8,al
  41d003:	xchg   dh,bh
  41d005:	xor    ebx,DWORD PTR [eax-0x320cc6c1]
  41d00b:	jl     0x598a3ce7
  41d011:	adc    edx,DWORD PTR [ebx+eax*1-0x29a8a189]
  41d018:	stos   DWORD PTR es:[edi],eax
  41d019:	cwde   
  41d01a:	mov    bh,0xc9
  41d01c:	pop    edi
  41d01d:	cdq    
  41d01e:	xor    al,0x92
  41d020:	xchg   esp,eax
  41d021:	imul   esp,ecx,0xffffffc2
  41d024:	imul   eax,DWORD PTR [esi-0x2c],0x1dcd3214
  41d02b:	mov    bl,0x95
  41d02d:	xchg   ah,dl
  41d02f:	and    esi,DWORD PTR [ecx+0x2d]
  41d032:	enter  0xc716,0xad
  41d036:	arpl   WORD PTR [eax-0x72],dx
  41d039:	xor    ebp,DWORD PTR [ebx]
  41d03b:	pop    edx
  41d03c:	pop    ebx
  41d03d:	es and eax,0x9ab97af1
  41d043:	loopne 0x41d041
  41d045:	mov    ebx,0x4e34d7a9
  41d04a:	mov    dh,0xa2
  41d04c:	mov    BYTE PTR [ebp+eiz*4-0x31],bh
  41d050:	lahf   
  41d051:	in     eax,dx
  41d052:	stc    
  41d053:	jbe    0x41d096
  41d055:	cld    
  41d056:	xor    al,0x72
  41d058:	mov    ecx,0xab0866ce
  41d05d:	test   al,0xb4
  41d05f:	jns    0x41d0a6
  41d061:	add    ah,BYTE PTR [ecx]
  41d063:	sahf   
  41d064:	push   ecx
  41d065:	retf   
  41d066:	cs push ss
  41d068:	xor    eax,0x1bf5a590
  41d06d:	xchg   edi,esi
  41d06f:	leave  
  41d070:	adc    al,0x5c
  41d072:	popa   
  41d073:	outs   dx,DWORD PTR ds:[esi]
  41d074:	ja     0x41d091
  41d076:	adc    cl,dh
  41d078:	add    eax,0x1e8cd075
  41d07d:	xchg   esp,eax
  41d07e:	not    BYTE PTR [ebx+ebx*1+0x1966f60d]
  41d085:	mov    ah,0x5d
  41d087:	test   DWORD PTR [ecx],eax
  41d089:	and    bh,ch
  41d08b:	inc    esp
  41d08c:	lods   al,BYTE PTR ds:[esi]
  41d08d:	add    dl,BYTE PTR [eax]
  41d08f:	jmp    0xdf3281b6
  41d094:	neg    ah
  41d096:	xchg   edx,eax
  41d097:	arpl   WORD PTR [edi+0x39],cx
  41d09a:	push   0x8b03efa2
  41d09f:	xchg   ecx,eax
  41d0a0:	js     0x41d076
  41d0a2:	sub    eax,0xe0a7cac3
  41d0a7:	pop    ds
  41d0a8:	leave  
  41d0a9:	add    BYTE PTR [ecx-0x76aa365],cl
  41d0af:	ins    BYTE PTR es:[edi],dx
  41d0b0:	ret    0x7f70
  41d0b3:	mov    edx,0x8bd9367a
  41d0b8:	adc    ebp,eax
  41d0ba:	popa   
  41d0bb:	cmc    
  41d0bc:	data16 fwait
  41d0be:	xchg   ecx,eax
  41d0bf:	pop    ebx
  41d0c0:	(bad)  
  41d0c1:	cmp    al,bh
  41d0c3:	(bad)  
  41d0c4:	(bad)  
  41d0c5:	mov    dh,0xb7
  41d0c7:	rol    BYTE PTR es:[ecx+0x6d],1
  41d0cb:	adc    ecx,DWORD PTR [edx]
  41d0cd:	add    esi,DWORD PTR [ecx]
  41d0cf:	cmp    DWORD PTR [edi+0x79686489],ebx
  41d0d5:	pop    esi
  41d0d6:	mov    ss,WORD PTR [esi-0x434c27f8]
  41d0dc:	loope  0x41d0f6
  41d0de:	fsub   QWORD PTR [ebx+eax*1-0x7f529c74]
  41d0e5:	mov    bh,0x5
  41d0e7:	inc    edx
  41d0e8:	pop    ecx
  41d0e9:	inc    ebx
  41d0ea:	imul   ecx,DWORD PTR [ecx],0x6
  41d0ed:	mov    al,0x70
  41d0ef:	shl    DWORD PTR [ebp+0x4b913696],0xf1
  41d0f6:	sbb    eax,0x5f2cd3f8
  41d0fb:	mov    al,ds:0x41bf5d7d
  41d100:	iret   
  41d101:	adc    DWORD PTR [ecx-0x44],eax
  41d104:	cmp    eax,0x3166f9aa
  41d109:	jmp    0x2cc:0x8644bc67
  41d110:	sbb    DWORD PTR [edi-0x2d3e40d8],esp
  41d116:	aas    
  41d117:	fdivr  QWORD PTR [edx-0x22ccd676]
  41d11d:	mov    dh,0xe8
  41d11f:	inc    ebx
  41d120:	out    dx,eax
  41d121:	repnz cmp esp,DWORD PTR [edi+0x19]
  41d125:	pop    ebp
  41d126:	sub    BYTE PTR [ebp+esi*8+0xe8f8fe8],dl
  41d12d:	call   0xae25:0x385072f5
  41d134:	pushf  
  41d135:	and    DWORD PTR [eax],esp
  41d137:	lods   al,BYTE PTR ds:[esi]
  41d138:	(bad)  
  41d139:	dec    esp
  41d13a:	inc    esi
  41d13b:	sub    al,0xab
  41d13d:	cmp    al,0x4d
  41d13f:	xchg   DWORD PTR [edi-0x441f3853],esi
  41d145:	int    0x78
  41d147:	jae    0x41d106
  41d149:	sahf   
  41d14a:	lock push ebp
  41d14c:	test   DWORD PTR [ecx-0xc1a3c4d],0x3f4c3551
  41d156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d157:	fild   QWORD PTR [ecx-0x76c2b453]
  41d15d:	pop    es
  41d15e:	icebp  
  41d15f:	pushf  
  41d160:	hlt    
  41d161:	dec    ecx
  41d162:	mov    ch,0x61
  41d164:	and    DWORD PTR [esi+0x7bd2d95e],ebx
  41d16a:	cmp    DWORD PTR [ecx+0x6979484d],0xe12a4cf3
  41d174:	je     0x41d174
  41d176:	dec    ecx
  41d177:	rol    dh,0xb1
  41d17a:	sbb    BYTE PTR [edi-0x6f],cl
  41d17d:	jbe    0x41d134
  41d17f:	rol    BYTE PTR [edi-0x210c50e7],1
  41d185:	(bad)  
  41d186:	jmp    0xbe96:0x91081eaa
  41d18d:	mov    ?,WORD PTR [eax-0x7e38b2e2]
  41d193:	aad    0xac
  41d195:	xchg   BYTE PTR [edi+edi*2-0x46ed7939],al
  41d19c:	daa    
  41d19d:	mov    cl,0x98
  41d19f:	(bad)
  41d1a2:	adc    cl,BYTE PTR [edx]
  41d1a4:	mov    ebp,0x5a876b5
  41d1a9:	pop    esi
  41d1aa:	shl    BYTE PTR [bx+si-0x5],0x17
  41d1af:	inc    esi
  41d1b0:	aam    0xd9
  41d1b2:	cmp    eax,0x9e515cea
  41d1b7:	jae    0x41d1f4
  41d1b9:	std    
  41d1ba:	jl     0x41d202
  41d1bc:	cmp    eax,0x337a4a09
  41d1c1:	push   0x51377a58
  41d1c6:	mov    bh,0x4e
  41d1c8:	adc    al,0xf0
  41d1ca:	pop    ebx
  41d1cb:	and    ebx,ebx
  41d1cd:	jp     0x41d190
  41d1cf:	aad    0x75
  41d1d1:	ds test eax,0x56a02d34
  41d1d7:	inc    esi
  41d1d8:	sub    eax,0x40bcc55e
  41d1dd:	out    dx,eax
  41d1de:	mov    al,ds:0x6054a6ee
  41d1e3:	aaa    
  41d1e4:	inc    ebp
  41d1e5:	mov    edi,0x421b65fc
  41d1ea:	popf   
  41d1eb:	xor    al,0x1a
  41d1ed:	test   BYTE PTR [edi],bh
  41d1ef:	ins    BYTE PTR es:[edi],dx
  41d1f0:	xchg   ebx,eax
  41d1f1:	xchg   edx,eax
  41d1f2:	pop    ds
  41d1f3:	neg    DWORD PTR [eax-0x73]
  41d1f6:	data16 jb 0x41d1e2
  41d1f9:	pop    eax
  41d1fa:	int    0x7b
  41d1fc:	pushf  
  41d1fd:	or     eax,DWORD PTR [edi-0x68]
  41d200:	xchg   DWORD PTR [ebx],ecx
  41d202:	sbb    esi,DWORD PTR [ebp-0x59d02a1e]
  41d208:	pushf  
  41d209:	pop    edi
  41d20a:	jbe    0x41d199
  41d20c:	dec    ecx
  41d20d:	cmp    DWORD PTR [ebx+ebx*2],0x60e37fa
  41d214:	bound  ebp,QWORD PTR [edx+ebx*8+0x38cc0048]
  41d21b:	mov    ch,0x13
  41d21d:	call   0xf1b7:0xf8bdac9e
  41d224:	pop    ebp
  41d225:	lahf   
  41d226:	lea    ebp,[edx+0x1c488abb]
  41d22c:	push   ss
  41d22d:	std    
  41d22e:	pop    ds
  41d22f:	add    edi,DWORD PTR [edi]
  41d231:	add    al,cl
  41d233:	pop    eax
  41d234:	clc    
  41d235:	fs (bad) 
  41d237:	push   ecx
  41d238:	fbld   TBYTE PTR [ebx-0xe]
  41d23b:	push   ss
  41d23c:	in     al,0x10
  41d23e:	push   ebp
  41d23f:	push   esp
  41d240:	ret    
  41d241:	in     eax,dx
  41d242:	xchg   edx,eax
  41d243:	cld    
  41d244:	inc    ecx
  41d245:	xor    al,0x3c
  41d247:	push   cs
  41d248:	mov    dl,0xe0
  41d24a:	push   cs
  41d24b:	sar    DWORD PTR [edx+0x1],1
  41d24e:	dec    ebx
  41d24f:	fdivr  DWORD PTR [ebx-0x464cab67]
  41d255:	sbb    eax,0xa477c04e
  41d25a:	inc    edx
  41d25b:	das    
  41d25c:	fs ficom WORD PTR fs:[ecx]
  41d260:	gs out 0x30,eax
  41d263:	inc    eax
  41d264:	ror    DWORD PTR [ebp+0x6f],0xe6
  41d268:	xlat   BYTE PTR ds:[ebx]
  41d269:	mov    ebx,DWORD PTR [esp+ebp*4+0x2d]
  41d26d:	popf   
  41d26e:	nop
  41d26f:	loopne 0x41d272
  41d271:	jl     0x41d29c
  41d273:	pop    ebx
  41d274:	and    al,0x4
  41d276:	ret    
  41d277:	stos   DWORD PTR es:[edi],eax
  41d278:	and    eax,0x782d26c7
  41d27d:	aaa    
  41d27e:	sahf   
  41d27f:	shl    DWORD PTR [ebp-0x80],0x48
  41d283:	dec    ebp
  41d284:	mov    fs:0xf856a93d,al
  41d28a:	fimul  DWORD PTR [ebx+0x52]
  41d28d:	imul   eax,DWORD PTR [eax+0x2e],0x985d28f0
  41d294:	es inc ebx
  41d296:	xor    BYTE PTR [edx+ebx*1+0x772bf5ab],bh
  41d29d:	mov    DWORD PTR [ecx+0x2f],eax
  41d2a0:	in     eax,dx
  41d2a1:	mov    ebp,DWORD PTR [ebx+0x1f5615bc]
  41d2a7:	cmp    BYTE PTR [ecx],bl
  41d2a9:	mov    esp,0x44d6c8df
  41d2ae:	xor    al,0x66
  41d2b0:	call   0x3e8:0x28a14d75
  41d2b7:	dec    ebp
  41d2b8:	mov    dh,0xb9
  41d2ba:	and    eax,0x49b4a850
  41d2bf:	inc    esi
  41d2c0:	xchg   edx,eax
  41d2c1:	mov    dh,0x36
  41d2c3:	xchg   ebx,eax
  41d2c4:	xchg   esi,eax
  41d2c5:	cli    
  41d2c6:	jp     0x41d27c
  41d2c8:	call   FWORD PTR [eiz*8+0x7cfba97f]
  41d2cf:	sbb    esp,DWORD PTR [ecx+0x6a]
  41d2d2:	sbb    al,BYTE PTR [eax]
  41d2d4:	mov    ecx,edi
  41d2d6:	imul   edx,DWORD PTR [eax-0x4f0ea2f3],0xaee6854
  41d2e0:	test   al,0xd8
  41d2e2:	jl     0x41d35b
  41d2e4:	mov    ebp,0xab921e35
  41d2e9:	cmc    
  41d2ea:	pop    esp
  41d2eb:	inc    edi
  41d2ec:	cli    
  41d2ed:	pop    edx
  41d2ee:	repnz repz imul edx,DWORD PTR [eax-0x3000182f],0xfb199c73
  41d2fa:	arpl   WORD PTR [ecx+0x747b998b],cx
  41d300:	nop
  41d301:	and    eax,0x65bde339
  41d306:	inc    esi
  41d307:	sbb    al,0xcf
  41d309:	dec    esi
  41d30a:	xor    eax,0x44f68602
  41d30f:	clc    
  41d310:	sti    
  41d311:	xchg   ecx,eax
  41d312:	aad    0x64
  41d314:	dec    edi
  41d315:	jmp    0x969a:0x13c4
  41d31b:	xchg   ebx,eax
  41d31c:	(bad)  
  41d31d:	mov    edi,0xc81ba25a
  41d322:	lock rcr DWORD PTR [edx-0x57e67159],cl
  41d329:	dec    esp
  41d32a:	sbb    eax,0x24199527
  41d32f:	sbb    al,0xf2
  41d331:	pusha  
  41d332:	push   0xc776143f
  41d337:	mov    bh,0xf4
  41d339:	ja     0x41d340
  41d33b:	xor    DWORD PTR [edx-0x52],edi
  41d33e:	jno    0x41d37d
  41d340:	or     esp,eax
  41d342:	loope  0x41d2dd
  41d344:	push   ss
  41d345:	push   eax
  41d346:	add    eax,0x2d9e803e
  41d34b:	cmp    DWORD PTR [eax+0x55],ecx
  41d34e:	adc    DWORD PTR [ebp-0x95a16ce],edi
  41d354:	pop    eax
  41d355:	mov    al,0x86
  41d357:	(bad)  
  41d358:	rcl    DWORD PTR [ebx],cl
  41d35a:	int    0x68
  41d35c:	arpl   WORD PTR [esi-0x36],bp
  41d35f:	adc    eax,0xb064c307
  41d364:	pop    es
  41d365:	inc    ebp
  41d366:	push   ebx
  41d367:	and    edi,eax
  41d369:	push   0x9fc3ace3
  41d36e:	pop    ds
  41d36f:	adc    edx,edx
  41d371:	push   cs
  41d372:	enter  0xb4ae,0xdc
  41d376:	cld    
  41d377:	retf   
  41d378:	mov    dl,0xc
  41d37a:	in     eax,0xc8
  41d37c:	fsub   st,st(0)
  41d37e:	mov    esi,0xbdf8f696
  41d383:	sar    BYTE PTR [edi-0x1405f2c7],cl
  41d389:	cmp    eax,0xcdc68da7
  41d38e:	cmp    BYTE PTR [eax+0x3880990a],0x85
  41d395:	call   FWORD PTR [ecx]
  41d397:	nop
  41d398:	cmp    eax,0xccb2c4b
  41d39d:	je     0x41d355
  41d39f:	in     al,dx
  41d3a0:	xlat   BYTE PTR ds:[ebx]
  41d3a1:	mov    eax,ds:0x2329680b
  41d3a6:	and    ch,BYTE PTR [ebx+esi*2]
  41d3a9:	or     dl,al
  41d3ab:	xchg   esi,eax
  41d3ac:	enter  0x42f7,0x80
  41d3b0:	sbb    BYTE PTR [edx],al
  41d3b2:	pushf  
  41d3b3:	xchg   BYTE PTR [edx+0x6e],dl
  41d3b6:	mov    BYTE PTR es:[eax],al
  41d3b9:	jmp    0xfff0e83f
  41d3be:	xor    esp,DWORD PTR [ebp+0x45b872a0]
  41d3c4:	jne    0x41d406
  41d3c6:	stos   BYTE PTR es:[edi],al
  41d3c7:	mov    ds:0xe3847121,al
  41d3cc:	or     eax,0x976d5174
  41d3d1:	xor    eax,0x9b11a58e
  41d3d6:	adc    eax,0xc4eac0c1
  41d3db:	adc    edi,DWORD PTR [edx+0x3bc363f2]
  41d3e1:	inc    edi
  41d3e2:	and    BYTE PTR [ecx],ch
  41d3e4:	add    ah,ah
  41d3e6:	in     al,0x77
  41d3e8:	sti    
  41d3e9:	shl    BYTE PTR [ebx+0x6170e5f9],1
  41d3ef:	jl     0x41d46d
  41d3f1:	(bad)  
  41d3f2:	repz int3 
  41d3f4:	add    esp,esi
  41d3f6:	mov    BYTE PTR [ebx+0x7a3e6933],ch
  41d3fc:	call   0xf649:0x15b06ac4
  41d403:	adc    BYTE PTR [esi+ecx*4-0x5f],0x15
  41d408:	stos   BYTE PTR es:[edi],al
  41d409:	out    dx,al
  41d40a:	ins    DWORD PTR es:[edi],dx
  41d40b:	add    al,0xeb
  41d40d:	icebp  
  41d40e:	add    DWORD PTR [edx-0x3c0360e1],edi
  41d414:	jmp    0x41d431
  41d416:	mov    dh,0xca
  41d418:	push   0xffffffae
  41d41a:	pop    edx
  41d41b:	xchg   edx,eax
  41d41c:	mov    esi,0x586ece35
  41d421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d422:	xchg   edi,eax
  41d423:	pmulhuw mm1,mm4
  41d426:	push   edx
  41d427:	rol    DWORD PTR ds:0x1eb75ec5,cl
  41d42d:	imul   esp,DWORD PTR [ebp-0x2c25b704],0xffffffc8
  41d434:	cdq    
  41d435:	pop    esp
  41d436:	jp     0x41d3ec
  41d438:	mov    ebx,0x293632fe
  41d43d:	mov    WORD PTR [edx-0x71d86952],ss
  41d443:	pop    ss
  41d444:	pop    esp
  41d445:	sbb    DWORD PTR [esi+0x3538bb96],edi
  41d44b:	iret   
  41d44c:	(bad)  
  41d44d:	jmp    0x41d46d
  41d44f:	sub    al,0xb5
  41d451:	out    dx,al
  41d452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d453:	or     eax,0xf6ced2d3
  41d458:	inc    eax
  41d459:	xor    DWORD PTR [ecx-0x1873902e],ebx
  41d45f:	push   es
  41d460:	fbstp  TBYTE PTR [ebx+eiz*8]
  41d463:	or     bh,ch
  41d465:	sub    bh,BYTE PTR [eax+0x3f]
  41d468:	xor    esi,eax
  41d46a:	mov    bl,0x97
  41d46c:	popa   
  41d46d:	int3   
  41d46e:	dec    ebx
  41d46f:	in     al,dx
  41d470:	xor    DWORD PTR [esi+0x3ed6322e],ebp
  41d476:	add    cl,bh
  41d478:	add    eax,0xab19c195
  41d47d:	leavew 
  41d47f:	xchg   BYTE PTR [edi+0x4c],dl
  41d482:	js     0x41d4c0
  41d484:	out    0x86,eax
  41d486:	sub    edi,ebx
  41d488:	jae    0x41d41f
  41d48a:	out    dx,al
  41d48b:	jle    0x41d4f8
  41d48d:	mov    ch,0x92
  41d48f:	push   eax
  41d490:	cmp    DWORD PTR [ecx],ebp
  41d492:	push   eax
  41d493:	adc    esi,ebx
  41d495:	test   DWORD PTR ds:0x212bfe21,ebp
  41d49b:	shl    DWORD PTR [eax-0x11832a0],0x1f
  41d4a2:	cmp    DWORD PTR [ebp+0x26a07c9d],ebp
  41d4a8:	jnp    0x41d4ad
  41d4aa:	pushf  
  41d4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ac:	inc    esi
  41d4ad:	jp     0x41d51d
  41d4af:	cld    
  41d4b0:	test   cl,dl
  41d4b2:	inc    eax
  41d4b3:	(bad)  
  41d4b4:	(bad)  
  41d4b5:	retf   
  41d4b6:	dec    esi
  41d4b7:	(bad)  
  41d4b8:	push   cs
  41d4b9:	inc    edx
  41d4ba:	aad    0x7f
  41d4bc:	mov    ah,0x89
  41d4be:	mov    edi,0x1acd66a5
  41d4c3:	scas   al,BYTE PTR es:[edi]
  41d4c4:	mov    ecx,0x38c884f5
  41d4c9:	outs   dx,DWORD PTR ds:[esi]
  41d4ca:	mov    ds:0x42bc4a1b,eax
  41d4cf:	pop    edx
  41d4d0:	out    0xb9,al
  41d4d2:	clc    
  41d4d3:	pop    eax
  41d4d4:	xchg   ebx,eax
  41d4d5:	lods   al,BYTE PTR ds:[esi]
  41d4d6:	jbe    0x41d4ad
  41d4d8:	(bad)  
  41d4d9:	aam    0xa7
  41d4db:	retf   0xc5a
  41d4de:	in     al,0x77
  41d4e0:	mov    BYTE PTR [ebx+edi*1],0xfe
  41d4e4:	push   ebp
  41d4e5:	sub    DWORD PTR ds:0xb73644ce,esp
  41d4eb:	sti    
  41d4ec:	jle    0x41d4cd
  41d4ee:	mov    dl,0xa7
  41d4f0:	mov    ds:0xd189d7e6,al
  41d4f5:	cmp    edx,DWORD PTR [esi+0x48]
  41d4f8:	xor    eax,0x2045a2d8
  41d4fd:	sub    dh,BYTE PTR [esp+ebx*1+0x37]
  41d501:	adc    edi,DWORD PTR [esi-0x69be0a22]
  41d507:	xor    bl,BYTE PTR [edi+eax*2]
  41d50a:	ret    
  41d50b:	retf   
  41d50c:	or     edi,DWORD PTR [ebx-0x9]
  41d50f:	add    DWORD PTR [edx-0x47],0x6e
  41d513:	inc    edx
  41d514:	inc    ebp
  41d515:	(bad)  
  41d516:	call   0xb066:0x6aca0a1e
  41d51d:	fs dec edi
  41d51f:	add    DWORD PTR [ebx-0x45e146f7],edx
  41d525:	es lock pop ss
  41d528:	sbb    cl,bh
  41d52a:	mov    edx,0x3883ca13
  41d52f:	mov    edi,DWORD PTR [ecx]
  41d531:	adc    eax,0xc92c220
  41d536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d537:	adc    BYTE PTR [ebx+0x2517196a],0xa3
  41d53e:	fs ins BYTE PTR es:[edi],dx
  41d540:	jmp    0xf4f7fa99
  41d545:	mov    BYTE PTR [edx+eax*4+0x46],ch
  41d549:	push   ebp
  41d54a:	retf   
  41d54b:	into   
  41d54c:	imul   ecx,DWORD PTR [edi],0x94363bf3
  41d552:	int3   
  41d553:	xchg   ebx,eax
  41d554:	mov    edi,0xba955e07
  41d559:	xor    al,0x64
  41d55b:	test   DWORD PTR [eax],eax
  41d55d:	outs   dx,DWORD PTR ds:[esi]
  41d55e:	sbb    edi,esp
  41d560:	pop    esi
  41d561:	sub    DWORD PTR [edi-0x58],ebx
  41d564:	or     ecx,DWORD PTR [ecx+0x45]
  41d567:	jnp    0x41d55a
  41d569:	outs   dx,DWORD PTR ds:[esi]
  41d56a:	xchg   ebp,eax
  41d56b:	add    dl,bl
  41d56d:	cmc    
  41d56e:	xchg   DWORD PTR gs:[esi-0x65],ebx
  41d572:	mov    esi,0x22034559
  41d577:	xor    eax,0xa360a2bd
  41d57c:	mov    esi,0xb3755805
  41d581:	ja     0x41d54e
  41d583:	cmc    
  41d584:	inc    ebp
  41d585:	cmp    DWORD PTR [ecx],ecx
  41d587:	call   0xdfd83e3b
  41d58c:	call   0x197b5ae9
  41d591:	lea    esp,[ebx-0x5b2c8e29]
  41d597:	mov    eax,ds:0xf46b5b6d
  41d59c:	ins    DWORD PTR es:[edi],dx
  41d59d:	ror    BYTE PTR [esi-0x60],1
  41d5a0:	push   0xf4d8e23e
  41d5a5:	ins    DWORD PTR es:[edi],dx
  41d5a6:	stos   DWORD PTR es:[edi],eax
  41d5a7:	adc    al,0x1f
  41d5a9:	pop    es
  41d5aa:	sbb    ah,dl
  41d5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ad:	addr16 ds mov bh,0x58
  41d5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b2:	loop   0x41d53f
  41d5b4:	adc    BYTE PTR [ecx+0x13],ch
  41d5b7:	stc    
  41d5b8:	cmp    bh,BYTE PTR [edx+ecx*4+0x724a4c79]
  41d5bf:	jmp    0x2977093b
  41d5c4:	int    0xa1
  41d5c6:	lods   eax,DWORD PTR ds:[esi]
  41d5c7:	pusha  
  41d5c8:	jnp    0x41d5b6
  41d5ca:	call   0xe47bea4f
  41d5cf:	dec    edi
  41d5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5d1:	ja     0x41d5d4
  41d5d3:	mov    ah,BYTE PTR [ebx]
  41d5d5:	es std 
  41d5d7:	pop    eax
  41d5d8:	cmp    eax,0xa94db984
  41d5dd:	push   edi
  41d5de:	je     0x7b8c79b4
  41d5e4:	or     al,0x1d
  41d5e6:	pop    ebx
  41d5e7:	and    DWORD PTR [edi],eax
  41d5e9:	mov    esi,0x68356923
  41d5ee:	and    BYTE PTR [ecx-0x164d6628],0xe
  41d5f5:	adc    BYTE PTR [ecx+0x6e],al
  41d5f8:	or     edx,0x65
  41d5fb:	cmp    al,0x35
  41d5fd:	cmp    DWORD PTR [edi-0x7b],edx
  41d600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d601:	xor    eax,0x55f495dd
  41d606:	inc    edx
  41d607:	xchg   edi,eax
  41d608:	pop    ss
  41d609:	test   esp,0xc06ac512
  41d60f:	mov    edx,0xec607a79
  41d614:	add    edi,DWORD PTR [ebp-0x43]
  41d617:	jae    0x41d59f
  41d619:	lahf   
  41d61a:	push   edi
  41d61b:	clc    
  41d61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61d:	test   BYTE PTR [ecx],al
  41d61f:	shl    DWORD PTR [edi+0x11],cl
  41d622:	(bad)  
  41d623:	or     DWORD PTR [ebp+0x2d31be4e],ebx
  41d629:	cld    
  41d62a:	cli    
  41d62b:	shr    BYTE PTR [edx],cl
  41d62d:	leave  
  41d62e:	adc    eax,0x280f5855
  41d633:	mov    esp,0xae4d8ba7
  41d638:	push   esi
  41d639:	iret   
  41d63a:	and    DWORD PTR [esp+eax*8-0x2],ebx
  41d63e:	in     al,dx
  41d63f:	cmp    eax,0x42325354
  41d644:	fs stc 
  41d646:	fstp   TBYTE PTR [edi+ebp*4]
  41d649:	loop   0x41d5d4
  41d64b:	push   ecx
  41d64c:	aam    0xa7
  41d64e:	enter  0xe3f,0x33
  41d652:	retf   0x87c3
  41d655:	scas   al,BYTE PTR es:[edi]
  41d656:	push   0xffffffb7
  41d658:	aam    0x38
  41d65a:	cmp    bh,bl
  41d65c:	add    BYTE PTR [edx-0x66],cl
  41d65f:	and    DWORD PTR [ecx],esi
  41d661:	xor    eax,0xac3ee314
  41d666:	inc    esp
  41d667:	xchg   ebx,eax
  41d668:	pop    ebx
  41d669:	add    ch,BYTE PTR [eax+0x7fb015e8]
  41d66f:	or     BYTE PTR [ecx+0x5f],ah
  41d672:	dec    eax
  41d673:	das    
  41d674:	outs   dx,BYTE PTR ds:[esi]
  41d675:	mov    ch,0x37
  41d677:	xchg   esp,eax
  41d678:	mov    dh,0xa7
  41d67a:	lods   al,BYTE PTR ds:[esi]
  41d67b:	xchg   edi,eax
  41d67c:	sub    edx,edx
  41d67e:	or     DWORD PTR [ebx+0x40],ebp
  41d681:	es mov ebx,0x87df0dfa
  41d687:	outs   dx,DWORD PTR ds:[esi]
  41d688:	lock fwait
  41d68a:	or     edx,DWORD PTR [eax]
  41d68c:	out    0xcd,eax
  41d68e:	(bad)  
  41d68f:	cmp    eax,0x8f632ab9
  41d694:	adc    dh,0x7
  41d697:	repz mov al,0xfb
  41d69a:	push   ds
  41d69b:	(bad)  [edx+0x56]
  41d69e:	ins    DWORD PTR es:[edi],dx
  41d69f:	int3   
  41d6a0:	mov    eax,0x445b7e4b
  41d6a5:	inc    eax
  41d6a6:	or     dh,BYTE PTR [esi-0x44]
  41d6a9:	lds    ebx,FWORD PTR [edx-0x6f7f7828]
  41d6af:	adc    cl,BYTE PTR [edi+0x515b8d35]
  41d6b5:	cwde   
  41d6b6:	cmc    
  41d6b7:	stos   DWORD PTR es:[edi],eax
  41d6b8:	(bad)  
  41d6ba:	lahf   
  41d6bb:	ret    
  41d6bc:	pop    edx
  41d6bd:	fsubr  DWORD PTR [edi]
  41d6bf:	nop
  41d6c0:	adc    BYTE PTR [edx+0x43],0xfc
  41d6c4:	mov    eax,ds:0x57d9dcd4
  41d6c9:	push   edi
  41d6ca:	lods   al,BYTE PTR ds:[esi]
  41d6cb:	adc    bl,BYTE PTR ds:0x8e781a6f
  41d6d1:	daa    
  41d6d2:	add    eax,0xbf374269
  41d6d7:	loop   0x41d722
  41d6d9:	pop    ebp
  41d6da:	jl     0x41d660
  41d6dc:	(bad)  
  41d6de:	aas    
  41d6df:	push   edi
  41d6e0:	pop    ds
  41d6e1:	fadd   DWORD PTR [ecx+0x1b]
  41d6e4:	push   eax
  41d6e5:	lods   eax,DWORD PTR ds:[esi]
  41d6e6:	jns    0x41d6f7
  41d6e8:	or     eax,0xba3fd3e2
  41d6ed:	dec    esp
  41d6ee:	mov    al,ds:0xf9d7349a
  41d6f3:	hlt    
  41d6f4:	cmc    
  41d6f5:	test   BYTE PTR [edi-0x29],dl
  41d6f8:	pop    ds
  41d6f9:	xchg   ebx,eax
  41d6fa:	jecxz  0x41d68d
  41d6fc:	sub    al,0x93
  41d6fe:	loopne 0x41d6e9
  41d700:	inc    eax
  41d701:	fnstcw WORD PTR [eax+0x44209d80]
  41d707:	push   ebp
  41d708:	dec    ebp
  41d709:	jo     0x41d6ed
  41d70b:	aad    0x22
  41d70d:	pop    esp
  41d70e:	mov    esp,0x2d0c529b
  41d713:	neg    bl
  41d715:	pop    ds
  41d716:	inc    esp
  41d717:	or     DWORD PTR [esi+0x1d],edx
  41d71a:	add    dh,0x54
  41d71d:	aad    0x0
  41d71f:	cmc    
  41d720:	adc    dl,ch
  41d722:	hlt    
  41d723:	loop   0x41d738
  41d725:	and    DWORD PTR [eax+ebp*2-0x7ee87f89],esp
  41d72c:	ret    0x8872
  41d72f:	mov    dh,0x9c
  41d731:	xchg   ecx,eax
  41d732:	jmp    0x7d0e9f42
  41d737:	cmp    dh,BYTE PTR [ebp-0x102212e1]
  41d73d:	loope  0x41d6fa
  41d73f:	add    al,bh
  41d741:	std    
  41d742:	mov    bh,0x94
  41d744:	add    dl,BYTE PTR [edi+0x43]
  41d747:	sar    DWORD PTR [eax+eax*4+0x76fc3d23],0x26
  41d74f:	sbb    DWORD PTR [ebx-0x6d9bb16f],ecx
  41d755:	stos   DWORD PTR es:[edi],eax
  41d756:	add    ah,BYTE PTR [eax]
  41d758:	sub    eax,0xeb36125a
  41d75d:	nop
  41d75e:	and    al,0x46
  41d760:	cld    
  41d761:	test   eax,0x46cb7408
  41d766:	sbb    BYTE PTR [ebx+eiz*2-0x3],ah
  41d76a:	inc    BYTE PTR [eax]
  41d76c:	leave  
  41d76d:	xor    al,0x79
  41d76f:	call   0xf4e9dfa8
  41d774:	addr16 dec ecx
  41d776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d777:	adc    DWORD PTR [esi-0x3b],ebx
  41d77a:	inc    esi
  41d77b:	dec    ebx
  41d77c:	mov    ebx,0xc182983e
  41d781:	ins    DWORD PTR es:[edi],dx
  41d782:	mov    cl,BYTE PTR [esi]
  41d784:	push   ss
  41d785:	or     DWORD PTR [esi],edx
  41d787:	pop    esp
  41d788:	add    al,0x42
  41d78a:	int    0x30
  41d78c:	imul   esi,DWORD PTR [esi-0x307c3040],0xffffff9c
  41d793:	dec    ebp
  41d794:	mov    al,0x35
  41d796:	xor    eax,0x25d23b9a
  41d79b:	inc    esp
  41d79c:	ror    DWORD PTR [edi-0x2b],0x45
  41d7a0:	in     eax,dx
  41d7a1:	test   BYTE PTR [ebp+0x4ba571cb],ch
  41d7a7:	mov    eax,0x5bebea4
  41d7ac:	xchg   BYTE PTR [eax-0x674decb7],dl
  41d7b2:	test   BYTE PTR [ebx],al
  41d7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b5:	cld    
  41d7b6:	sub    cl,BYTE PTR [esi-0x494cbc1c]
  41d7bc:	bound  edi,QWORD PTR [esi+eax*1]
  41d7bf:	cmp    eax,0x7724a750
  41d7c4:	adc    eax,0x51695ee4
  41d7c9:	dec    ecx
  41d7ca:	das    
  41d7cb:	mov    esp,DWORD PTR [edx+0x15]
  41d7ce:	arpl   si,cx
  41d7d0:	cs push ss
  41d7d2:	jae    0x41d787
  41d7d4:	or     DWORD PTR ds:0xc377ee2d,0x2e
  41d7db:	out    0xa5,al
  41d7dd:	pop    ebx
  41d7de:	out    dx,al
  41d7df:	je     0x41d831
  41d7e1:	xor    ah,BYTE PTR [esi+0x2e]
  41d7e4:	data16 test al,0xa0
  41d7e7:	push   cs
  41d7e8:	inc    ebx
  41d7e9:	fcmovu st,st(2)
  41d7eb:	jae    0x41d7a7
  41d7ed:	pop    ebp
  41d7ee:	jle    0x41d843
  41d7f0:	jbe    0x41d7dd
  41d7f2:	call   0x967f5fce
  41d7f7:	or     esi,DWORD PTR [ebx]
  41d7f9:	adc    al,0x17
  41d7fb:	sub    BYTE PTR [edi+0x7d6db7ca],0x39
  41d802:	lock call FWORD PTR [eax+0x12]
  41d806:	xchg   BYTE PTR [ebp-0x2df47987],ch
  41d80c:	sbb    DWORD PTR [esi-0x22],ebx
  41d80f:	inc    edi
  41d810:	fs add ecx,edx
  41d813:	xchg   edx,eax
  41d814:	hlt    
  41d815:	push   esp
  41d816:	mov    es,WORD PTR [esi-0xc8d0d78]
  41d81c:	add    bh,ah
  41d81e:	popf   
  41d81f:	fadd   DWORD PTR [eax]
  41d821:	mov    bh,0xe2
  41d823:	dec    eax
  41d824:	aaa    
  41d825:	inc    eax
  41d826:	fwait
  41d827:	test   al,0x1d
  41d829:	popa   
  41d82a:	(bad)  
  41d82b:	lock int3 
  41d82d:	add    al,0x62
  41d82f:	push   eax
  41d830:	xchg   esp,eax
  41d831:	outs   dx,BYTE PTR ds:[esi]
  41d832:	out    0x6,eax
  41d834:	imul   eax,ebp,0x901c304c
  41d83a:	pop    eax
  41d83b:	rep outs dx,DWORD PTR ds:[esi]
  41d83d:	mov    al,0xf2
  41d83f:	push   ebp
  41d840:	aaa    
  41d841:	test   BYTE PTR [esi-0x10f1021a],ch
  41d847:	bound  ebx,QWORD PTR [esi]
  41d849:	sbb    al,0x2d
  41d84b:	sbb    eax,DWORD PTR [edx-0x2]
  41d84e:	dec    ebx
  41d84f:	cmp    cl,BYTE PTR [edx-0x1e62fa86]
  41d855:	mov    ds,WORD PTR [eax-0x2c83a441]
  41d85b:	sbb    eax,0xb7ecc3bb
  41d860:	nop
  41d861:	jmp    0x41d815
  41d863:	adc    dl,BYTE PTR [ebx]
  41d865:	outs   dx,DWORD PTR ds:[esi]
  41d866:	and    BYTE PTR [esp+edi*8-0x6e78cdae],0xa
  41d86e:	(bad)  
  41d86f:	mov    BYTE PTR [ebp+0x303f5292],0xde
  41d876:	xor    BYTE PTR [edi],cl
  41d878:	ja     0x41d8d3
  41d87a:	mov    ebx,0x3e429148
  41d87f:	data16 fwait
  41d881:	jbe    0x41d85c
  41d883:	stos   DWORD PTR es:[edi],eax
  41d884:	sub    eax,0x3375aeb5
  41d889:	cmp    al,0x8c
  41d88b:	pop    edi
  41d88c:	int    0xfe
  41d88e:	pop    esi
  41d88f:	add    ebp,DWORD PTR [esi+0x0]
  41d892:	stos   BYTE PTR es:[edi],al
  41d893:	sub    BYTE PTR [ebx+0xb],0x43
  41d897:	add    eax,0x60d9f29e
  41d89c:	clc    
  41d89d:	dec    edx
  41d89e:	cmp    ah,BYTE PTR [esp+eiz*2+0x64]
  41d8a2:	dec    edx
  41d8a3:	iret   
  41d8a4:	fisub  WORD PTR [ebp-0x3a65ceed]
  41d8aa:	pop    ebx
  41d8ab:	leave  
  41d8ac:	xor    ecx,ecx
  41d8ae:	push   cs
  41d8af:	shl    BYTE PTR [eax+0x65cc638f],cl
  41d8b5:	or     BYTE PTR [ecx-0x51],0xd1
  41d8b9:	test   DWORD PTR [ecx+0x2a6988d5],ecx
  41d8bf:	inc    ebx
  41d8c0:	pop    es
  41d8c1:	inc    eax
  41d8c2:	inc    ebp
  41d8c3:	es stos BYTE PTR es:[edi],al
  41d8c5:	aam    0xed
  41d8c7:	mov    ch,0xf
  41d8c9:	jae    0x41d852
  41d8cb:	bound  esp,QWORD PTR [ecx-0x6e96bd0f]
  41d8d1:	cmp    edx,edx
  41d8d3:	xlat   BYTE PTR ds:[ebx]
  41d8d4:	stc    
  41d8d5:	sub    al,0xf1
  41d8d7:	ins    BYTE PTR es:[edi],dx
  41d8d8:	aaa    
  41d8d9:	cmp    dl,BYTE PTR [ebx]
  41d8db:	dec    ecx
  41d8dc:	pop    edi
  41d8dd:	sbb    BYTE PTR [eax],0x6f
  41d8e0:	fcom   DWORD PTR [ecx-0x77]
  41d8e3:	push   eax
  41d8e4:	jp     0x41d907
  41d8e6:	push   ecx
  41d8e7:	cld    
  41d8e8:	inc    edi
  41d8e9:	adc    DWORD PTR [esi+0x19],0xd
  41d8ed:	xor    al,0x4d
  41d8ef:	dec    esi
  41d8f0:	cwde   
  41d8f1:	jge    0x41d910
  41d8f3:	mov    ds:0x82e727da,eax
  41d8f8:	ja     0x41d911
  41d8fa:	iret   
  41d8fb:	cwde   
  41d8fc:	or     DWORD PTR [edi+0x27],0x665a3261
  41d903:	mov    cl,0x74
  41d905:	leave  
  41d906:	pop    ecx
  41d907:	adc    DWORD PTR [ecx+0x22],eax
  41d90a:	lock xor DWORD PTR [eax],0x5a
  41d90e:	or     bh,ch
  41d910:	cs shl ah,0x6f
  41d914:	js     0x41d8a0
  41d916:	fnstsw WORD PTR [eax]
  41d918:	scas   al,BYTE PTR es:[edi]
  41d919:	pop    edx
  41d91a:	dec    ecx
  41d91b:	fadd   QWORD PTR [esi+0x6d]
  41d91e:	addr16 pushf 
  41d920:	iret   
  41d921:	sbb    cl,BYTE PTR [ecx]
  41d923:	mov    ebp,0x8fe6aa34
  41d928:	push   esi
  41d929:	mov    edx,DWORD PTR [edi-0x3ba80be5]
  41d92f:	je     0x41d986
  41d931:	mov    edx,0xa15eba5e
  41d936:	ss leave 
  41d938:	mov    BYTE PTR [edx+edx*4+0x4e8dd9ff],bh
  41d93f:	sub    BYTE PTR [edi-0x7f],dh
  41d942:	ss in  al,dx
  41d944:	or     bh,BYTE PTR cs:[esi+eax*2]
  41d948:	sahf   
  41d949:	scas   eax,DWORD PTR es:[edi]
  41d94a:	pushf  
  41d94b:	mov    ebp,eax
  41d94d:	iret   
  41d94e:	or     al,0xf2
  41d950:	(bad)  
  41d951:	scas   eax,DWORD PTR es:[edi]
  41d952:	xor    eax,esi
  41d954:	imul   esp,DWORD PTR [eax-0x796a1a4a],0xe9e755de
  41d95e:	xchg   DWORD PTR [edi-0x5aaeeb80],ecx
  41d964:	ins    DWORD PTR es:[edi],dx
  41d965:	pop    ds
  41d966:	cli    
  41d967:	repz pop esi
  41d969:	out    0x96,eax
  41d96b:	jbe    0x41d9bf
  41d96d:	fadd   QWORD PTR [esi+0x2f9b9489]
  41d973:	inc    ecx
  41d974:	shl    BYTE PTR [esp+ebx*8-0x2e],0xc0
  41d979:	sbb    BYTE PTR [ebx+0x6a],0x8f
  41d97d:	mov    ds:0x88280a91,al
  41d982:	adc    DWORD PTR ss:[ebx],ecx
  41d985:	add    al,0x59
  41d987:	cwde   
  41d988:	lods   al,BYTE PTR ds:[esi]
  41d989:	nop
  41d98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d98b:	xchg   ebp,eax
  41d98c:	adc    edi,edx
  41d98e:	cmp    bh,BYTE PTR [esi]
  41d990:	push   ebp
  41d991:	loop   0x41d915
  41d993:	xor    ebx,0xffffffe2
  41d996:	retf   0xfd13
  41d999:	mov    ?,WORD PTR [edi+0x5b]
  41d99c:	inc    eax
  41d99d:	mov    WORD PTR [eax-0x5f4b079e],cs
  41d9a3:	mov    ds:0x8111fe18,eax
  41d9a8:	shl    BYTE PTR [eax],0x54
  41d9ab:	lds    edx,FWORD PTR [ecx+0x17]
  41d9ae:	les    esp,FWORD PTR [ebx+0x71]
  41d9b1:	cld    
  41d9b2:	lods   al,BYTE PTR ds:[esi]
  41d9b3:	sbb    al,0x8c
  41d9b5:	pop    esi
  41d9b6:	inc    BYTE PTR [esi]
  41d9b8:	inc    edi
  41d9b9:	test   al,0x8f
  41d9bb:	cdq    
  41d9bc:	jmp    0x89c6:0x5ab4ed92
  41d9c3:	bound  ecx,QWORD PTR [ecx+0x17]
  41d9c6:	jae    0x41d963
  41d9c8:	push   0xe232fd15
  41d9cd:	hlt    
  41d9ce:	sti    
  41d9cf:	push   es
  41d9d0:	(bad)  
  41d9d1:	fidivr DWORD PTR [edi+edx*2]
  41d9d4:	outs   dx,BYTE PTR ds:[esi]
  41d9d5:	cmp    al,0x9d
  41d9d7:	mov    ds:0xd5ed3221,al
  41d9dc:	cld    
  41d9dd:	sbb    BYTE PTR [ecx],bl
  41d9df:	mov    DWORD PTR [edi-0x99e4f67],esi
  41d9e5:	mov    ebx,0x8dbf0b03
  41d9ea:	pop    eax
  41d9eb:	jp     0x41d99e
  41d9ed:	call   0xa68e9694
  41d9f2:	lea    bp,[esi+0x6fdb8fe7]
  41d9f9:	aam    0x1c
  41d9fb:	cld    
  41d9fc:	ss add eax,0x715dce53
  41da02:	lock retf 
  41da04:	xchg   esp,eax
  41da05:	xor    BYTE PTR [edx-0x6018ef94],ah
  41da0b:	daa    
  41da0c:	sbb    al,0x77
  41da0e:	push   ebp
  41da0f:	addr16 (bad) 
  41da11:	mov    WORD PTR [ecx],cs
  41da13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da14:	jecxz  0x41d9f4
  41da16:	mov    ah,0x86
  41da18:	lea    esi,[edi+0x41defd0b]
  41da1e:	jg     0x41da90
  41da20:	ret    
  41da21:	jns    0x41d9e9
  41da23:	ins    BYTE PTR es:[edi],dx
  41da24:	mov    ah,BYTE PTR [esi+ebp*4]
  41da27:	div    BYTE PTR [edx+0x1ac52fa8]
  41da2d:	sub    al,0xa6
  41da2f:	retf   0xb639
  41da32:	loopne 0x41daaa
  41da34:	adc    al,0xe9
  41da36:	or     bh,dh
  41da38:	into   
  41da39:	dec    ebx
  41da3a:	xchg   ebp,eax
  41da3b:	je     0x41daa1
  41da3d:	aam    0x40
  41da3f:	push   edi
  41da40:	adc    eax,0xe242b049
  41da45:	ror    DWORD PTR [ebp+0xa],1
  41da48:	lds    ecx,FWORD PTR [eax]
  41da4a:	js     0x41da87
  41da4c:	hlt    
  41da4d:	mov    esi,DWORD PTR [edi]
  41da4f:	mov    eax,ds:0x3b247539
  41da54:	add    ecx,DWORD PTR [ebx+ecx*2-0x19]
  41da58:	aaa    
  41da59:	sbb    BYTE PTR [ebx],0x2e
  41da5c:	push   esp
  41da5d:	push   ebx
  41da5e:	ss std 
  41da60:	(bad)  
  41da61:	rcr    BYTE PTR [esp+edi*1+0x13],0xa9
  41da66:	cmp    eax,0x30fa0e8a
  41da6b:	push   ecx
  41da6c:	mov    bh,al
  41da6e:	in     al,dx
  41da6f:	ins    DWORD PTR es:[edi],dx
  41da70:	inc    eax
  41da71:	or     ch,bh
  41da73:	retf   0x38a9
  41da76:	and    eax,0x473d5130
  41da7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da7c:	xchg   esi,eax
  41da7d:	push   ecx
  41da7e:	xor    al,0x1e
  41da80:	outs   dx,BYTE PTR ds:[esi]
  41da81:	inc    edx
  41da82:	ja     0x41dade
  41da84:	pop    ecx
  41da85:	jecxz  0x41da2b
  41da87:	arpl   WORD PTR [eax],si
  41da89:	and    DWORD PTR [ebx+0x2c311cd6],edx
  41da8f:	cwde   
  41da90:	out    0xf6,eax
  41da92:	pop    edi
  41da93:	loope  0x41dabc
  41da95:	jmp    0x675f612f
  41da9a:	mov    DWORD PTR [ecx+0x41a89012],esp
  41daa0:	aad    0x96
  41daa2:	std    
  41daa3:	icebp  
  41daa4:	into   
  41daa5:	dec    esp
  41daa6:	or     edi,DWORD PTR [ebx-0x2ff53791]
  41daac:	test   dl,ch
  41daae:	popa   
  41daaf:	outs   dx,DWORD PTR ds:[esi]
  41dab0:	mov    dl,0x1f
  41dab2:	sub    ch,BYTE PTR [edx]
  41dab4:	inc    eax
  41dab5:	imul   esp,ebx,0x3d8e9ddc
  41dabb:	dec    ebp
  41dabc:	in     al,0xd5
  41dabe:	cmp    dh,BYTE PTR [ecx+edi*2+0x68]
  41dac2:	sub    ecx,esp
  41dac4:	mov    dh,0xb1
  41dac6:	xor    bl,al
  41dac8:	mov    al,ds:0x8f9a8cd1
  41dacd:	mov    WORD PTR ds:0xb53969fd,fs
  41dad3:	mov    ebx,0x342f69b8
  41dad8:	pop    esi
  41dad9:	add    esp,DWORD PTR [esp+ecx*2+0x246e77c8]
  41dae0:	test   eax,0x5d892c65
  41dae5:	dec    esi
  41dae6:	sar    esi,cl
  41dae8:	cs mov bl,0xc4
  41daeb:	and    ebp,ebp
  41daed:	sbb    al,0x7b
  41daef:	sbb    al,0x42
  41daf1:	or     ebx,DWORD PTR [ecx+edi*1+0x47ea5abd]
  41daf8:	xchg   edi,eax
  41daf9:	in     al,dx
  41dafa:	fwait
  41dafb:	addr16 pop ebp
  41dafe:	add    DWORD PTR [eax-0x34],ebx
  41db01:	mov    eax,ds:0x77ea39bf
  41db06:	imul   edx,DWORD PTR [edi+0x2f07171c],0xf3d57306
  41db10:	ror    BYTE PTR [edx-0x65],1
  41db13:	test   bh,dl
  41db15:	jge    0x41dab0
  41db17:	cmp    ecx,DWORD PTR [edx+0x49]
  41db1a:	inc    edi
  41db1b:	addr16 mov ebx,0x4f11568d
  41db21:	cmp    ecx,DWORD PTR [ebp-0x74]
  41db24:	jp     0x41dadf
  41db26:	fistp  QWORD PTR [ecx+eiz*4-0x36552cca]
  41db2d:	loop   0x41dabd
  41db2f:	adc    eax,0xbe62f578
  41db34:	int    0xc7
  41db36:	sub    eax,0x3843c637
  41db3b:	into   
  41db3c:	pop    esi
  41db3d:	rol    DWORD PTR [edi],1
  41db3f:	cmp    eax,0x93e7dd62
  41db44:	fidiv  DWORD PTR [edx]
  41db46:	sub    eax,0x4b2db18f
  41db4b:	inc    DWORD PTR [edi]
  41db4d:	xchg   ecx,eax
  41db4e:	retf   0xe89e
  41db51:	sbb    bh,BYTE PTR [ebx+0x49]
  41db54:	jb     0x41dba0
  41db56:	and    DWORD PTR [ebx-0x33],edx
  41db59:	jmp    0x5fe3:0x4fcfbdda
  41db60:	sub    ch,bh
  41db62:	or     esp,DWORD PTR [edx+0x5787c5e]
  41db68:	retf   
  41db69:	jle    0x41db81
  41db6b:	mov    esp,0x2eb1583d
  41db70:	out    dx,eax
  41db71:	stos   BYTE PTR es:[edi],al
  41db72:	stc    
  41db73:	ret    0xaada
  41db76:	inc    esp
  41db77:	inc    esi
  41db78:	add    BYTE PTR [ebx],cl
  41db7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db7b:	fld    DWORD PTR [ebx+0x45f95b5d]
  41db81:	in     al,0x8c
  41db83:	mov    eax,ds:0xaf853866
  41db88:	dec    edx
  41db89:	sub    ebx,DWORD PTR [ecx-0x54]
  41db8c:	pop    ss
  41db8d:	adc    ebp,edx
  41db8f:	mov    esi,DWORD PTR [ecx]
  41db91:	xchg   ebp,eax
  41db92:	cmp    DWORD PTR [esi+edx*2+0x35c65320],ecx
  41db99:	dec    ebp
  41db9a:	stc    
  41db9b:	xchg   ebx,eax
  41db9c:	xchg   BYTE PTR [edx-0x50],ch
  41db9f:	leave  
  41dba0:	(bad)  
  41dba1:	in     eax,dx
  41dba2:	dec    ebp
  41dba3:	mov    ebx,DWORD PTR [ecx]
  41dba5:	(bad)  
  41dba6:	xchg   ebx,eax
  41dba7:	outs   dx,DWORD PTR ds:[esi]
  41dba8:	retf   0x4ede
  41dbab:	and    eax,0x75d80e78
  41dbb0:	mov    al,0x96
  41dbb2:	push   eax
  41dbb3:	ds mov ch,ah
  41dbb6:	push   edx
  41dbb7:	push   edx
  41dbb8:	pop    esp
  41dbb9:	sbb    DWORD PTR [edi+0x3c],edx
  41dbbc:	cld    
  41dbbd:	hlt    
  41dbbe:	adc    ch,dh
  41dbc0:	xchg   esp,eax
  41dbc1:	xchg   edx,eax
  41dbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbc3:	scas   al,BYTE PTR es:[edi]
  41dbc4:	(bad)  
  41dbc5:	mov    ebx,0xb1ffc48
  41dbca:	shl    BYTE PTR [ecx],cl
  41dbcc:	jp     0x41dbcc
  41dbce:	xchg   ebx,eax
  41dbcf:	jbe    0x41dc46
  41dbd1:	mov    bl,0x8c
  41dbd3:	popf   
  41dbd4:	dec    ecx
  41dbd5:	inc    esp
  41dbd6:	mov    al,0x82
  41dbd8:	push   ss
  41dbd9:	jge    0x41dba7
  41dbdb:	jns    0x41db94
  41dbdd:	fxtract 
  41dbdf:	jb     0x41dbcd
  41dbe1:	out    0xc,eax
  41dbe3:	jl     0x41db9d
  41dbe5:	es dec esi
  41dbe7:	loopne 0x41dbdf
  41dbe9:	jns    0x41dc0a
  41dbeb:	mov    edx,0xc2d43656
  41dbf0:	ss dec ebx
  41dbf2:	inc    eax
  41dbf3:	adc    al,0xe3
  41dbf5:	pushf  
  41dbf6:	es retf 
  41dbf8:	cmp    DWORD PTR [edx+0x42],ecx
  41dbfb:	test   BYTE PTR [eax],bh
  41dbfd:	outs   dx,DWORD PTR ds:[esi]
  41dbfe:	in     eax,0x18
  41dc00:	push   0x8b9cf18e
  41dc05:	jno    0x41dbf7
  41dc07:	call   0x5b3f:0xae370686
  41dc0e:	lea    ecx,[eax]
  41dc10:	aaa    
  41dc11:	fs mov esp,edx
  41dc14:	outs   dx,BYTE PTR ds:[esi]
  41dc15:	mov    ebx,0x5c03c444
  41dc1a:	mov    dl,0x1b
  41dc1c:	and    esi,ecx
  41dc1e:	aam    0xc9
  41dc20:	pop    ds
  41dc21:	inc    esi
  41dc22:	sbb    al,0x2f
  41dc24:	mov    eax,ecx
  41dc26:	jne    0x41dbf9
  41dc28:	add    ah,BYTE PTR [edx]
  41dc2a:	dec    ebx
  41dc2b:	lods   al,BYTE PTR ds:[esi]
  41dc2c:	jmp    0x1eeabb22
  41dc31:	test   DWORD PTR [ecx+ebx*1+0x202109b0],0x26a49cc4
  41dc3c:	and    BYTE PTR [ebx],0x57
  41dc3f:	pop    ebp
  41dc40:	cmp    DWORD PTR [edx],ecx
  41dc42:	cmc    
  41dc43:	test   eax,0x418fa7b8
  41dc48:	mov    al,gs:0xab768245
  41dc4e:	iret   
  41dc4f:	xor    DWORD PTR [ecx-0x34],esi
  41dc52:	iret   
  41dc53:	dec    esi
  41dc54:	mov    edx,0x9a4b2d64
  41dc59:	inc    ecx
  41dc5a:	repz mov esp,0xc38ee596
  41dc60:	pop    esp
  41dc61:	scas   al,BYTE PTR es:[edi]
  41dc62:	mov    ebp,0xd34f638e
  41dc67:	xchg   edi,eax
  41dc68:	jle    0x41dcb5
  41dc6a:	stos   DWORD PTR es:[edi],eax
  41dc6b:	fsubrp st(1),st
  41dc6d:	imul   eax,ebx,0x9eb2a6d0
  41dc73:	out    dx,eax
  41dc74:	test   DWORD PTR [ebx+eiz*1+0x60],edx
  41dc78:	xchg   edx,eax
  41dc79:	inc    esi
  41dc7a:	push   0x4c66170d
  41dc7f:	push   ecx
  41dc80:	add    esi,edx
  41dc82:	shl    DWORD PTR [eax],cl
  41dc84:	test   BYTE PTR [eax+0x46],0x9
  41dc88:	lods   al,BYTE PTR ss:[esi]
  41dc8a:	add    bl,bl
  41dc8c:	xchg   esi,eax
  41dc8d:	dec    ebx
  41dc8e:	dec    ecx
  41dc8f:	(bad)  
  41dc90:	xor    eax,0x2106f642
  41dc95:	fstp   DWORD PTR [ebx-0x3a]
  41dc98:	not    BYTE PTR [edi-0x322f9bfc]
  41dc9e:	xchg   ecx,eax
  41dc9f:	das    
  41dca0:	jb     0x41dcab
  41dca2:	clc    
  41dca3:	cmp    DWORD PTR [edi+ecx*4+0x38],esi
  41dca7:	pop    eax
  41dca8:	xchg   cl,al
  41dcaa:	pop    es
  41dcab:	mov    esi,0x4843d90b
  41dcb0:	mov    al,0xa1
  41dcb2:	inc    bh
  41dcb4:	scas   al,BYTE PTR es:[edi]
  41dcb5:	xor    eax,0x43c9ab26
  41dcba:	iret   
  41dcbb:	int3   
  41dcbc:	cli    
  41dcbd:	loope  0x41dd32
  41dcbf:	stos   DWORD PTR es:[edi],eax
  41dcc0:	sub    BYTE PTR [ebp-0x301083e1],dl
  41dcc6:	xor    BYTE PTR [edx+0x40],bh
  41dcc9:	push   0xffffffae
  41dccb:	retf   
  41dccc:	pushf  
  41dccd:	or     eax,esi
  41dccf:	stc    
  41dcd0:	sbb    edi,DWORD PTR [esi-0x7c]
  41dcd3:	push   esp
  41dcd4:	adc    ch,BYTE PTR [edi]
  41dcd6:	repnz or eax,0x859415ff
  41dcdc:	mov    ch,0xea
  41dcde:	mov    dh,BYTE PTR [ebp+0x6e346aaf]
  41dce4:	inc    esi
  41dce5:	push   ss
  41dce6:	repz adc esp,DWORD PTR [ebp+esi*1-0x33873bf4]
  41dcee:	mov    cl,0x7d
  41dcf0:	and    al,bl
  41dcf2:	test   BYTE PTR [ebx+esi*1+0x2c],dl
  41dcf6:	inc    eax
  41dcf7:	clc    
  41dcf8:	and    cl,BYTE PTR [esi]
  41dcfa:	mov    al,ds:0x3a42389d
  41dcff:	mov    ds:0x5a6f6da6,eax
  41dd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd05:	jo     0x41dcf4
  41dd07:	add    eax,0xbe699cea
  41dd0c:	jg     0x41dce5
  41dd0e:	inc    edi
  41dd0f:	pop    esp
  41dd10:	aas    
  41dd11:	loope  0x41dcfb
  41dd13:	sub    DWORD PTR [edi+eiz*8],edi
  41dd16:	dec    eax
  41dd17:	dec    esp
  41dd18:	jmp    0x35cf:0x30736493
  41dd1f:	test   al,0x9d
  41dd21:	dec    edx
  41dd22:	xchg   ecx,eax
  41dd23:	imul   edx,DWORD PTR [ebx-0x10b4e9d3],0x2a
  41dd2a:	jge    0x41dd76
  41dd2c:	aad    0x64
  41dd2e:	jns    0x41dcc2
  41dd30:	pop    ss
  41dd31:	or     DWORD PTR [eax],edx
  41dd33:	hlt    
  41dd34:	xlat   BYTE PTR ds:[ebx]
  41dd35:	sbb    al,0x34
  41dd37:	mov    cl,0xdb
  41dd39:	mov    dh,0xc2
  41dd3b:	das    
  41dd3c:	into   
  41dd3d:	xchg   ebp,eax
  41dd3e:	fild   QWORD PTR [edi-0x5dc3d]
  41dd44:	inc    eax
  41dd45:	push   cs
  41dd46:	jecxz  0x41dd8d
  41dd48:	pop    ebx
  41dd49:	dec    esp
  41dd4a:	push   0xffffff83
  41dd4c:	stos   DWORD PTR es:[edi],eax
  41dd4d:	jno    0x41dd8d
  41dd4f:	mov    dl,0x70
  41dd51:	jns    0x41dd20
  41dd53:	adc    DWORD PTR [ebp-0x4f],ebx
  41dd56:	push   esi
  41dd57:	arpl   WORD PTR ds:0x2382a125,bp
  41dd5d:	mov    dl,0xd8
  41dd5f:	mov    esi,0xfa14ab2b
  41dd64:	cdq    
  41dd65:	mov    ds:0xf78aaf9f,eax
  41dd6a:	push   cs
  41dd6b:	pop    ecx
  41dd6c:	adc    eax,0x350d1bc2
  41dd71:	ins    BYTE PTR es:[edi],dx
  41dd72:	je     0x41dd55
  41dd74:	popa   
  41dd75:	imul   ebp,DWORD PTR [ecx+eax*8],0xd31e7233
  41dd7c:	repnz loop 0x41dd86
  41dd7f:	mov    edi,0xb959bf50
  41dd84:	daa    
  41dd85:	cmc    
  41dd86:	dec    eax
  41dd87:	mov    ah,0xbb
  41dd89:	repz xor eax,0xe655acc
  41dd8f:	sub    dh,bh
  41dd91:	cmp    cl,BYTE PTR [edx]
  41dd93:	pop    ebp
  41dd94:	push   ebp
  41dd95:	or     DWORD PTR ds:0xd500e993,esp
  41dd9b:	cmc    
  41dd9c:	sub    DWORD PTR [esi+0x36],ebx
  41dd9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda0:	jo     0x41de1a
  41dda2:	das    
  41dda3:	push   esp
  41dda4:	call   0x1ebf:0x8f025e6d
  41ddab:	nop
  41ddac:	pop    ecx
  41ddad:	xchg   esp,eax
  41ddae:	or     DWORD PTR [eax+0x51804e45],ecx
  41ddb4:	scas   eax,DWORD PTR es:[edi]
  41ddb5:	xor    BYTE PTR [eax+0x11041fb0],0xf1
  41ddbc:	hlt    
  41ddbd:	add    DWORD PTR [ebx+eiz*8-0x590f7041],esp
  41ddc4:	push   es
  41ddc5:	aas    
  41ddc6:	sar    DWORD PTR [ebx+esi*2-0x27],1
  41ddca:	fistp  QWORD PTR [eax+0x77affa1b]
  41ddd0:	xchg   esi,eax
  41ddd1:	fsubr  QWORD PTR [esi]
  41ddd3:	xor    DWORD PTR [eax*1-0x2bcb5fd2],ebp
  41ddda:	fisttp QWORD PTR [edx]
  41dddc:	jmp    0x375f:0xb249e651
  41dde3:	xchg   BYTE PTR [ecx+0x18],bl
  41dde6:	loope  0x41dd84
  41dde8:	ins    BYTE PTR es:[edi],dx
  41dde9:	pushf  
  41ddea:	inc    ebp
  41ddeb:	mov    bl,0xd6
  41dded:	icebp  
  41ddee:	icebp  
  41ddef:	push   cs
  41ddf0:	jmp    0xa0ad:0x7f4d2761
  41ddf7:	pop    edi
  41ddf8:	push   eax
  41ddf9:	call   0xc57c4e65
  41ddfe:	adc    al,0x82
  41de00:	mov    bh,0xf9
  41de02:	inc    esp
  41de03:	dec    esp
  41de04:	or     eax,0x922830f8
  41de09:	pop    es
  41de0a:	addr16 push ss
  41de0c:	mov    edx,DWORD PTR [eax]
  41de0e:	(bad)  
  41de0f:	mov    ?,WORD PTR [ebp-0x926dac1]
  41de15:	pop    edx
  41de17:	sti    
  41de18:	dec    esi
  41de19:	adc    DWORD PTR [ecx],ebx
  41de1b:	dec    ecx
  41de1c:	clc    
  41de1d:	inc    eax
  41de1e:	xchg   ebp,eax
  41de1f:	cmp    eax,DWORD PTR [edi]
  41de21:	add    BYTE PTR [ebx-0x16],dl
  41de24:	push   es
  41de25:	cli    
  41de26:	sbb    BYTE PTR [ecx],dl
  41de28:	lds    edi,FWORD PTR [ebx+0x4b]
  41de2b:	(bad)  
  41de2d:	int    0x5d
  41de2f:	test   ch,0x7a
  41de32:	dec    ecx
  41de33:	or     al,BYTE PTR [eax+0x76]
  41de36:	iret   
  41de37:	fwait
  41de38:	jmp    0x41dde2
  41de3a:	fs push ss
  41de3c:	iret   
  41de3d:	aas    
  41de3e:	fdivr  QWORD PTR ds:0x3d9dcc4b
  41de44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de45:	in     eax,0xea
  41de47:	xchg   ecx,eax
  41de48:	inc    edi
  41de49:	sub    esi,DWORD PTR [ecx]
  41de4b:	adc    eax,0xa4b2b27a
  41de50:	leave  
  41de51:	lock repz push 0xffffffe5
  41de55:	jle    0x41ddfd
  41de57:	push   eax
  41de58:	arpl   WORD PTR [ebx],si
  41de5a:	out    dx,al
  41de5b:	neg    DWORD PTR [ebx+0x1f94c250]
  41de61:	jmp    0xe1bb:0x21d01b0e
  41de68:	enter  0xc250,0x1c
  41de6c:	js     0x41de87
  41de6e:	dec    ecx
  41de6f:	adc    bl,al
  41de71:	add    ecx,DWORD PTR [esp+ebx*4]
  41de74:	pop    eax
  41de75:	ins    BYTE PTR es:[edi],dx
  41de76:	pop    ss
  41de77:	xchg   ecx,ecx
  41de79:	sub    DWORD PTR [esi+0x55841a4],0xfd05fb74
  41de83:	ror    dl,0x51
  41de86:	shl    DWORD PTR [eax-0x70],1
  41de89:	fs pusha 
  41de8b:	test   DWORD PTR [eax+edi*2],esi
  41de8e:	sub    BYTE PTR [esi+ecx*2-0x33],ch
  41de92:	cmp    ebx,ebx
  41de94:	lock adc al,0x5b
  41de97:	pop    esi
  41de98:	icebp  
  41de99:	or     ch,BYTE PTR [ebx]
  41de9b:	clc    
  41de9c:	scas   al,BYTE PTR es:[edi]
  41de9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9e:	popf   
  41de9f:	jg     0x41de7f
  41dea1:	loop   0x41df11
  41dea3:	inc    ebp
  41dea4:	dec    edi
  41dea5:	popa   
  41dea6:	mov    al,ds:0xaaab094
  41deab:	mov    dh,0x1c
  41dead:	dec    edi
  41deae:	mov    al,ds:0x62e2f34d
  41deb3:	sub    al,ch
  41deb5:	inc    edi
  41deb6:	mov    ebx,0xf3a8829b
  41debb:	(bad)  
  41debc:	push   ss
  41debd:	in     eax,dx
  41debe:	mov    ebp,DWORD PTR [esi-0x3682f05f]
  41dec4:	aad    0x8f
  41dec6:	adc    BYTE PTR [ecx],cl
  41dec8:	adc    DWORD PTR [edi+0x2],eax
  41decb:	push   ds
  41decc:	into   
  41decd:	jecxz  0x41dec5
  41decf:	jge    0x41dee2
  41ded1:	xchg   esp,eax
  41ded2:	mov    al,ds:0x60cab4e8
  41ded7:	or     BYTE PTR ds:0x31a3c8fb,0x14
  41dede:	xor    ecx,DWORD PTR [ebx]
  41dee0:	frstor [edi-0x333a9db1]
  41dee6:	sub    BYTE PTR [edx-0x5],dl
  41dee9:	jle    0x41ded6
  41deeb:	sbb    edx,esi
  41deed:	push   esp
  41deee:	shr    BYTE PTR [esi-0x1e5357d2],cl
  41def4:	mov    DWORD PTR [eax-0x16bcb232],edx
  41defa:	outs   dx,BYTE PTR ds:[esi]
  41defb:	test   al,0xe3
  41defd:	jg     0x41de94
  41deff:	std    
  41df00:	mov    DWORD PTR cs:0x375a890b,ecx
  41df07:	call   0xa629:0xfebee98b
  41df0e:	cmp    esi,DWORD PTR [ebx]
  41df10:	sbb    cl,BYTE PTR [ecx+0x77]
  41df13:	imul   BYTE PTR [eax+0x326ead98]
  41df19:	mov    edi,0x25a31a5e
  41df1e:	mov    edi,ebp
  41df20:	repz cdq 
  41df22:	pop    edx
  41df23:	push   esi
  41df24:	fild   QWORD PTR [esi]
  41df26:	cli    
  41df27:	xor    ah,BYTE PTR [edi]
  41df29:	shl    BYTE PTR [ebx+0x74],cl
  41df2c:	pop    edi
  41df2d:	xor    BYTE PTR [eax+0x69],dh
  41df30:	stc    
  41df31:	shl    BYTE PTR [ebp-0x3342a2d9],1
  41df37:	xchg   ecx,eax
  41df38:	dec    ebx
  41df39:	lds    edi,FWORD PTR [esi-0x7ea8b715]
  41df3f:	rcl    ah,1
  41df41:	sub    eax,0xac71876
  41df46:	and    eax,0x9513ab27
  41df4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df4c:	jge    0x41df92
  41df4e:	mov    BYTE PTR [eax-0x5c],bh
  41df51:	shr    BYTE PTR [ebx],cl
  41df53:	xchg   edi,eax
  41df54:	in     al,0x78
  41df56:	mov    bl,0x41
  41df58:	push   ss
  41df59:	stos   BYTE PTR es:[edi],al
  41df5a:	into   
  41df5b:	or     bl,BYTE PTR ds:0xf4e66ed5
  41df61:	xor    bl,BYTE PTR [edx+esi*4-0x2c]
  41df65:	adc    ecx,esp
  41df67:	cmp    edi,DWORD PTR [ebp-0x80]
  41df6a:	jnp    0x41df06
  41df6c:	add    eax,0x6030389b
  41df71:	ds je  0x41df74
  41df74:	and    DWORD PTR [eax+0x68],ebx
  41df77:	out    0x12,eax
  41df79:	push   ss
  41df7a:	jl     0x41df76
  41df7c:	scas   eax,DWORD PTR es:[edi]
  41df7d:	add    ecx,edi
  41df7f:	mov    al,ds:0x79fc6366
  41df84:	fild   QWORD PTR ds:0x3784733
  41df8a:	inc    ecx
  41df8b:	sub    edi,DWORD PTR [esi-0x2f]
  41df8e:	push   ebx
  41df8f:	test   BYTE PTR [ebx+0x1d05a8b6],bh
  41df95:	mul    ch
  41df97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df98:	(bad)  [ebp+0x13]
  41df9b:	dec    ebp
  41df9c:	mov    esi,0x9e642424
  41dfa1:	xchg   esp,eax
  41dfa2:	cdq    
  41dfa3:	mov    ds:0x606e57f1,eax
  41dfa8:	push   0x49
  41dfaa:	int    0x3
  41dfac:	pop    edx
  41dfad:	inc    ebp
  41dfae:	push   ss
  41dfaf:	add    al,BYTE PTR [edi]
  41dfb1:	add    al,0xb0
  41dfb3:	fstp   DWORD PTR [ebp+0x16]
  41dfb6:	es retf 0x80bc
  41dfba:	iret   
  41dfbb:	push   cs
  41dfbc:	jbe    0x41dfa2
  41dfbe:	push   0x21
  41dfc0:	ins    DWORD PTR es:[edi],dx
  41dfc1:	ror    dl,cl
  41dfc3:	fdiv   QWORD PTR [ebx+0x69]
  41dfc6:	rcl    DWORD PTR [ebp-0x29],0xd2
  41dfca:	push   ecx
  41dfcb:	inc    ecx
  41dfcc:	(bad)  
  41dfce:	ror    DWORD PTR [edi-0x71da4efd],0x8c
  41dfd5:	sbb    al,0xf6
  41dfd7:	(bad)  
  41dfd8:	idiv   DWORD PTR [edi-0x25]
  41dfdb:	mov    cl,0xda
  41dfdd:	pop    edi
  41dfde:	aaa    
  41dfdf:	mov    ah,0x5
  41dfe1:	jns    0x41dfb0
  41dfe3:	sub    esi,esi
  41dfe5:	scas   eax,DWORD PTR es:[edi]
  41dfe6:	int    0x11
  41dfe8:	mov    ch,BYTE PTR [ebx+0x22542929]
  41dfee:	iret   
  41dfef:	pop    eax
  41dff0:	sbb    al,BYTE PTR [ebx+0x768fd5f7]
  41dff6:	mov    ebp,0x990e39a4
  41dffb:	cmp    bl,BYTE PTR [ebp-0x51ffad79]
  41e001:	loope  0x41dfe0
  41e003:	cli    
  41e004:	push   ss
  41e005:	pop    ebx
  41e006:	jg     0x41dff4
  41e008:	ins    DWORD PTR es:[edi],dx
  41e009:	inc    ecx
  41e00a:	out    0xab,eax
  41e00c:	stos   DWORD PTR es:[edi],eax
  41e00d:	arpl   WORD PTR [bx],bx
  41e010:	cmp    ecx,DWORD PTR ds:0x2313c0e6
  41e016:	aas    
  41e017:	and    bh,ch
  41e019:	pop    ecx
  41e01a:	mov    al,ds:0x8008fd17
  41e01f:	gs dec edx
  41e021:	sub    al,0xb5
  41e023:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e025:	jnp    0x41e00e
  41e027:	xor    eax,DWORD PTR [ebp+0x6d]
  41e02a:	sbb    BYTE PTR [ecx-0x2],dh
  41e02d:	sbb    dl,BYTE PTR ds:0x8e9da84e
  41e033:	cli    
  41e034:	repnz lock pop ecx
  41e037:	(bad)  
  41e038:	outs   dx,BYTE PTR ds:[esi]
  41e039:	stos   DWORD PTR es:[edi],eax
  41e03a:	mov    DWORD PTR [edx+0x52],edx
  41e03d:	sub    DWORD PTR [ebp-0x333799f7],esp
  41e043:	jno    0x41e04c
  41e045:	push   es
  41e046:	fimul  DWORD PTR [eax]
  41e048:	rcl    BYTE PTR [esi+0x22],cl
  41e04b:	test   eax,0x75803d06
  41e050:	aad    0x6
  41e052:	jmp    0x41e05d
  41e054:	hlt    
  41e055:	mov    ds:0xd44818bd,eax
  41e05a:	ficom  DWORD PTR [edx]
  41e05c:	sub    ch,BYTE PTR [ebx+0x5de00b6a]
  41e062:	adc    al,0x45
  41e064:	xchg   edx,eax
  41e065:	mov    edi,0xed77d13e
  41e06a:	je     0x41e0a8
  41e06c:	cmp    eax,DWORD PTR ss:[di]
  41e070:	sub    BYTE PTR [edx],0x6e
  41e073:	cwde   
  41e074:	mov    dh,0xe0
  41e076:	mov    bh,0x81
  41e078:	(bad)  
  41e079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07a:	cli    
  41e07b:	(bad)  
  41e07c:	sti    
  41e07d:	sub    DWORD PTR [eax-0x39757891],eax
  41e083:	repz pop edi
  41e085:	daa    
  41e086:	dec    BYTE PTR [ebx]
  41e088:	xchg   edi,eax
  41e089:	int    0xe2
  41e08b:	mov    cl,BYTE PTR [ecx-0x5b]
  41e08e:	xchg   ecx,eax
  41e08f:	fmul   QWORD PTR [esi]
  41e091:	add    eax,DWORD PTR ds:0x303d7bd7
  41e097:	cmp    al,0xe
  41e099:	push   edx
  41e09a:	in     eax,dx
  41e09b:	(bad)  
  41e09c:	push   esp
  41e09d:	mov    esi,eax
  41e09f:	and    al,0x59
  41e0a1:	cmp    eax,0x96ff3102
  41e0a6:	inc    edx
  41e0a7:	lahf   
  41e0a8:	adc    eax,0x22ac37d7
  41e0ad:	(bad)  
  41e0ae:	jmp    0x1551574f
  41e0b3:	push   edi
  41e0b4:	sub    al,0x32
  41e0b6:	rol    DWORD PTR [ebp-0x50],cl
  41e0b9:	push   edx
  41e0ba:	nop
  41e0bb:	dec    esi
  41e0bc:	pop    ss
  41e0bd:	dec    edx
  41e0be:	setb   BYTE PTR [ecx+edi*2-0x30]
  41e0c3:	and    al,0x38
  41e0c5:	dec    ecx
  41e0c6:	call   0xb796:0x6ad2aae
  41e0cd:	push   0xffffffc1
  41e0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0d0:	sub    dl,BYTE PTR [edi-0x3e26f3fc]
  41e0d6:	push   cs
  41e0d7:	add    ebx,edi
  41e0d9:	jl     0x41e0e3
  41e0db:	out    0x16,eax
  41e0dd:	cmp    eax,0xf02d57fe
  41e0e2:	cmp    cl,BYTE PTR [ebp+eiz*4+0x3965a1d]
  41e0e9:	mov    ch,0xb4
  41e0eb:	and    eax,0xefa56626
  41e0f0:	inc    ebp
  41e0f1:	nop
  41e0f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f3:	lods   al,BYTE PTR ds:[esi]
  41e0f4:	aam    0x60
  41e0f6:	pop    es
  41e0f7:	dec    edx
  41e0f8:	cmp    cl,BYTE PTR [ebx-0x66bfa5b]
  41e0fe:	ins    DWORD PTR es:[edi],dx
  41e0ff:	dec    ecx
  41e100:	(bad)  
  41e101:	mov    ebp,0xba7181b2
  41e106:	fisttp DWORD PTR [eax]
  41e108:	xchg   DWORD PTR [esi],edx
  41e10a:	pusha  
  41e10b:	mov    bl,0x9
  41e10d:	dec    ecx
  41e10e:	adc    eax,0x47af0d34
  41e113:	mov    bl,0x50
  41e115:	pop    esp
  41e116:	sbb    BYTE PTR [esp+esi*8],dh
  41e119:	dec    DWORD PTR [ecx+eiz*1+0x50]
  41e11d:	loopne 0x41e0bc
  41e11f:	fisttp QWORD PTR [ecx-0x2464e1d5]
  41e125:	pop    eax
  41e126:	retf   
  41e127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e128:	cdq    
  41e129:	retf   0x9bd7
  41e12c:	dec    esp
  41e12d:	dec    esi
  41e12e:	test   eax,0x1cf4c9fe
  41e133:	push   ebx
  41e134:	mov    edx,eax
  41e136:	fcomp  QWORD PTR [esp+eax*8]
  41e139:	aam    0xb5
  41e13b:	clc    
  41e13c:	or     bh,0x4e
  41e13f:	inc    ebx
  41e140:	xchg   esp,eax
  41e141:	js     0x41e147
  41e143:	ins    BYTE PTR es:[edi],dx
  41e144:	inc    edi
  41e145:	add    DWORD PTR [edi+0x32045243],0x88a19c0
  41e14f:	mov    ebp,0x229adfc1
  41e154:	xchg   DWORD PTR [eax],edi
  41e156:	pop    es
  41e157:	pop    ecx
  41e158:	pop    edi
  41e159:	js     0x41e121
  41e15b:	out    dx,eax
  41e15c:	sbb    DWORD PTR [eax-0x79],ecx
  41e15f:	sub    DWORD PTR [ecx-0x42],ebx
  41e162:	dec    edi
  41e163:	sar    BYTE PTR [ecx+0x64],0x85
  41e167:	jl     0x41e11a
  41e169:	mov    eax,0x6f43be33
  41e16e:	data16 int3 
  41e170:	mov    eax,ss
  41e172:	ins    BYTE PTR es:[edi],dx
  41e173:	mov    dl,0x29
  41e175:	push   0xfe0fdfa5
  41e17a:	mov    esp,0x5c25f122
  41e17f:	aas    
  41e180:	fdivr  QWORD PTR [esi+edx*1]
  41e183:	sub    DWORD PTR [edx-0x400f5806],edx
  41e189:	dec    esp
  41e18a:	sbb    dl,BYTE PTR [esi-0x41]
  41e18d:	inc    edx
  41e18e:	cmp    BYTE PTR [eax+0x188405f7],0x16
  41e195:	mov    WORD PTR [eax-0x1a],es
  41e198:	pop    edx
  41e199:	jb     0x41e1a1
  41e19b:	jp     0x41e14a
  41e19d:	adc    eax,0x16ceef72
  41e1a2:	jp     0x41e1fb
  41e1a4:	loop   0x41e200
  41e1a6:	fisttp WORD PTR [esi+eax*2+0x50a938e2]
  41e1ad:	cmc    
  41e1ae:	nop
  41e1af:	(bad)  
  41e1b0:	stos   DWORD PTR es:[edi],eax
  41e1b1:	fwait
  41e1b2:	add    al,0xb4
  41e1b4:	outs   dx,BYTE PTR ds:[esi]
  41e1b5:	imul   BYTE PTR [esi]
  41e1b7:	sahf   
  41e1b8:	into   
  41e1b9:	mov    ds:0x13c5d5e5,al
  41e1be:	dec    esp
  41e1bf:	adc    DWORD PTR [eax+0xc],ebp
  41e1c2:	loopne 0x41e1cd
  41e1c4:	pop    edx
  41e1c5:	jmp    0x41e1eb
  41e1c7:	pushf  
  41e1c8:	inc    esp
  41e1c9:	and    al,0xa8
  41e1cb:	mov    al,0xdf
  41e1cd:	dec    esi
  41e1ce:	dec    edi
  41e1cf:	mov    ebx,ebx
  41e1d1:	adc    eax,0x8a0adfe8
  41e1d6:	cli    
  41e1d7:	or     dh,BYTE PTR [ebx]
  41e1d9:	scas   al,BYTE PTR es:[edi]
  41e1da:	cmc    
  41e1db:	(bad)  
  41e1dc:	jae    0x41e238
  41e1de:	push   ecx
  41e1df:	inc    ebx
  41e1e0:	sub    esp,DWORD PTR fs:[eax+0x4e71fc68]
  41e1e7:	jmp    0xf2f6:0xf9a5cbc2
  41e1ee:	mov    ss,WORD PTR [esi-0x89c1ae2]
  41e1f4:	sbb    eax,0x81fb794d
  41e1f9:	out    0xc8,eax
  41e1fb:	popa   
  41e1fc:	fdivr  DWORD PTR [ecx]
  41e1fe:	(bad)  
  41e1ff:	int3   
  41e200:	jmp    0x12dd9c6c
  41e205:	(bad)  
  41e207:	int    0x5f
  41e209:	and    edx,DWORD PTR [esi-0xddbf7e9]
  41e20f:	daa    
  41e210:	dec    ebx
  41e211:	leave  
  41e212:	push   ebp
  41e213:	jno    0x41e200
  41e215:	cmp    BYTE PTR [ecx-0x7374a76e],ah
  41e21b:	inc    BYTE PTR [ecx]
  41e21d:	dec    edx
  41e21e:	lods   eax,DWORD PTR ds:[esi]
  41e21f:	aas    
  41e220:	int3   
  41e221:	std    
  41e222:	push   cs
  41e223:	std    
  41e224:	push   0xfeaf2b6c
  41e229:	call   0x60dd0a9b
  41e22e:	mov    dl,0x60
  41e230:	sbb    eax,0x6e7a6718
  41e235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e236:	jb     0x41e260
  41e238:	push   edx
  41e239:	ja     0x41e1f9
  41e23b:	adc    dh,BYTE PTR [ebx-0x785d05ed]
  41e241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e242:	icebp  
  41e243:	nop
  41e244:	mov    esi,0x3511201d
  41e249:	mov    eax,0x3c8b40a1
  41e24e:	jmp    0x41e2c0
  41e250:	and    ebp,DWORD PTR [ecx+0x6aad534c]
  41e256:	mov    DWORD PTR [esi],edx
  41e258:	pop    eax
  41e259:	sbb    BYTE PTR [ecx],ch
  41e25b:	sub    esi,DWORD PTR [ebp+eiz*2+0x3f]
  41e25f:	aaa    
  41e260:	pop    edx
  41e261:	push   esi
  41e262:	adc    DWORD PTR [ecx],esp
  41e264:	cmp    ecx,DWORD PTR [ecx-0x69]
  41e267:	pop    esi
  41e268:	aaa    
  41e269:	xchg   esp,eax
  41e26a:	cmpxchg BYTE PTR [edi],ch
  41e26d:	adc    BYTE PTR [ebx+0xf97b3bf],cl
  41e273:	enter  0x3a8a,0xf5
  41e277:	mov    ebx,0x48c0019b
  41e27c:	cwde   
  41e27d:	(bad)  [ecx-0x7c]
  41e280:	stos   BYTE PTR es:[edi],al
  41e281:	mov    dh,0x60
  41e283:	aam    0x23
  41e285:	push   es
  41e286:	push   ecx
  41e287:	and    DWORD PTR [ecx],esi
  41e289:	je     0x41e2e8
  41e28b:	hlt    
  41e28c:	fdiv   DWORD PTR [ebp-0x76fc8a83]
  41e292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e293:	sub    eax,0xf34f2dc6
  41e298:	mov    bh,0xbe
  41e29a:	dec    ebx
  41e29b:	fadd   DWORD PTR [ebp+edx*2-0x648db16]
  41e2a2:	outs   dx,DWORD PTR ds:[esi]
  41e2a3:	ins    DWORD PTR es:[edi],dx
  41e2a4:	rcr    BYTE PTR [edi-0x69c641e3],0xbd
  41e2ab:	add    eax,0xa833327f
  41e2b0:	push   esi
  41e2b1:	sbb    BYTE PTR [edx+eax*4],cl
  41e2b4:	pop    ebp
  41e2b5:	mov    ch,0x3a
  41e2b7:	xor    eax,0x1885e804
  41e2bc:	jg     0x41e31d
  41e2be:	in     al,dx
  41e2bf:	push   ebp
  41e2c0:	test   DWORD PTR [edx],ebx
  41e2c2:	sbb    eax,0x36e1606b
  41e2c7:	and    bh,ch
  41e2c9:	sbb    ebx,edi
  41e2cb:	and    ebp,DWORD PTR gs:[esi+ebx*8]
  41e2cf:	into   
  41e2d0:	jns    0x41e263
  41e2d2:	in     al,dx
  41e2d3:	imul   esi,DWORD PTR [edx],0x17
  41e2d6:	or     eax,0x61e1045a
  41e2db:	scas   al,BYTE PTR es:[edi]
  41e2dc:	ds hlt 
  41e2de:	popf   
  41e2df:	or     ebx,esp
  41e2e1:	std    
  41e2e2:	(bad)  
  41e2e3:	jg     0x41e303
  41e2e5:	cwde   
  41e2e6:	adc    BYTE PTR [esi],cl
  41e2e8:	out    0xde,al
  41e2ea:	xlat   BYTE PTR ds:[ebx]
  41e2eb:	call   0xfc8c:0xd9eb05d3
  41e2f2:	fcom   QWORD PTR [ecx-0x26]
  41e2f5:	fnstenv [esp+edx*1+0x12780644]
  41e2fc:	push   esi
  41e2fd:	in     al,dx
  41e2fe:	out    dx,eax
  41e2ff:	gs retf 
  41e301:	mov    al,0xe2
  41e303:	cmp    eax,0x13d8624d
  41e308:	jecxz  0x41e297
  41e30a:	inc    ebp
  41e30b:	xor    ch,BYTE PTR [esi+0x14f78748]
  41e311:	xor    eax,0xe7599e70
  41e316:	(bad)  
  41e317:	fnstsw WORD PTR [esi-0x50]
  41e31a:	(bad)  
  41e31c:	pop    edx
  41e31d:	shr    DWORD PTR [edx],1
  41e31f:	mov    esp,0xc897571
  41e324:	and    dh,dh
  41e326:	cmc    
  41e327:	scas   al,BYTE PTR es:[edi]
  41e328:	mov    ch,0x9d
  41e32a:	cld    
  41e32b:	mov    bh,0x1b
  41e32d:	inc    edx
  41e32e:	pop    ss
  41e32f:	or     edx,DWORD PTR [ebp+0x54f59abc]
  41e335:	sub    ebp,DWORD PTR [edx]
  41e337:	ret    
  41e338:	fld    TBYTE PTR [eax]
  41e33a:	mov    WORD PTR [ebx+0x52],ds
  41e33d:	sub    eax,0xb566f136
  41e342:	div    BYTE PTR [ebx-0x4c6c9e66]
  41e348:	lds    edi,FWORD PTR [ebx]
  41e34a:	mov    bh,0x59
  41e34c:	cmp    DWORD PTR [edx-0x6423d6b9],ebp
  41e352:	push   ebp
  41e353:	mov    ch,0xc
  41e355:	xchg   ebx,eax
  41e356:	in     al,dx
  41e357:	or     BYTE PTR [edx+0x46],dl
  41e35a:	pop    es
  41e35b:	pop    esp
  41e35c:	mov    esi,0x86cb9dea
  41e361:	cdq    
  41e362:	std    
  41e363:	enter  0xf51a,0x9
  41e367:	push   edx
  41e368:	out    dx,eax
  41e369:	push   esi
  41e36a:	xor    DWORD PTR [edi-0x4a54d5fe],ecx
  41e370:	mov    es,WORD PTR [edx]
  41e372:	lods   eax,DWORD PTR ds:[esi]
  41e373:	mov    ah,0x9b
  41e375:	inc    ecx
  41e376:	call   0x420b:0xcc71c3bf
  41e37d:	push   eax
  41e37e:	mov    edi,0xffbf1a20
  41e383:	pop    eax
  41e384:	push   es
  41e385:	inc    ecx
  41e386:	call   0xf116:0x3b16f31b
  41e38d:	adc    bh,BYTE PTR [esi]
  41e38f:	xchg   esi,eax
  41e390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e391:	rcr    BYTE PTR [eax+0x6a],0xe1
  41e395:	ins    BYTE PTR es:[edi],dx
  41e396:	sbb    DWORD PTR [edx-0x45499579],ebp
  41e39c:	enter  0x4ed5,0x8c
  41e3a0:	shr    edx,cl
  41e3a2:	jle    0x41e34f
  41e3a4:	sbb    al,cl
  41e3a6:	cli    
  41e3a7:	cmp    bh,BYTE PTR [ebp-0x5f]
  41e3aa:	jmp    0x845b:0x33286d61
  41e3b1:	out    dx,al
  41e3b2:	shr    DWORD PTR [eax],0x1a
  41e3b5:	cli    
  41e3b6:	int3   
  41e3b7:	inc    esi
  41e3b8:	xor    al,0x3a
  41e3ba:	sbb    BYTE PTR [ebp+0x5c],0xd8
  41e3be:	and    DWORD PTR [edi-0xe5e5b9],ebp
  41e3c4:	out    0x7e,al
  41e3c6:	adc    eax,DWORD PTR [edi-0xfb55a7a]
  41e3cc:	sub    eax,0x8069e0ec
  41e3d1:	dec    edi
  41e3d2:	jecxz  0x41e3ad
  41e3d4:	(bad)  
  41e3d5:	cmp    eax,0x930b58ca
  41e3da:	lahf   
  41e3db:	nop
  41e3dc:	std    
  41e3dd:	add    al,0xfb
  41e3df:	into   
  41e3e0:	test   al,0x89
  41e3e2:	jle    0x41e3aa
  41e3e4:	repnz xchg ebp,edi
  41e3e7:	pop    es
  41e3e8:	sbb    ebp,DWORD PTR [ebx+0x3b392868]
  41e3ee:	or     edx,esp
  41e3f0:	pop    ecx
  41e3f1:	inc    ebx
  41e3f2:	in     al,dx
  41e3f3:	dec    esp
  41e3f4:	fistp  WORD PTR [edx-0x55]
  41e3f7:	(bad)  
  41e3f9:	jp     0x41e426
  41e3fb:	or     eax,0xc30b1771
  41e400:	xchg   esp,eax
  41e401:	outs   dx,BYTE PTR ds:[esi]
  41e402:	ror    DWORD PTR [ebx*8-0x7dbd7dd6],0xf5
  41e40a:	inc    esp
  41e40b:	shr    DWORD PTR [esi+eiz*1-0x44],0xc0
  41e410:	dec    ebp
  41e411:	cmp    BYTE PTR ds:0xefda9302,dl
  41e417:	dec    edi
  41e418:	mov    al,ds:0xe4166fec
  41e41d:	in     eax,dx
  41e41e:	adc    cl,BYTE PTR [eax]
  41e420:	ror    BYTE PTR [ecx],1
  41e422:	ret    
  41e423:	and    ecx,DWORD PTR [ecx]
  41e425:	test   BYTE PTR [esi-0x6f6fb4c6],ch
  41e42b:	gs mov ebx,0xd483b826
  41e431:	fwait
  41e432:	ins    DWORD PTR es:[edi],dx
  41e433:	fild   DWORD PTR [edx]
  41e435:	lods   al,BYTE PTR ds:[esi]
  41e436:	xchg   BYTE PTR [edx],ah
  41e438:	push   ecx
  41e439:	sahf   
  41e43a:	pop    edx
  41e43b:	es push ds
  41e43d:	push   eax
  41e43e:	sub    al,BYTE PTR [esp+edi*2]
  41e441:	jp     0x41e457
  41e443:	add    eax,ebp
  41e445:	mov    eax,0x273c062a
  41e44a:	mov    ebx,0x8ec0a18d
  41e44f:	mov    ebp,DWORD PTR [edi+0x1]
  41e452:	ins    DWORD PTR es:[edi],dx
  41e453:	xchg   ecx,eax
  41e454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e455:	icebp  
  41e456:	aaa    
  41e457:	push   0x33
  41e459:	pop    ds
  41e45a:	xchg   esp,eax
  41e45b:	aam    0xc7
  41e45d:	ja     0x41e41e
  41e45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e460:	mov    ecx,0x836e4f7b
  41e465:	sahf   
  41e466:	stos   DWORD PTR es:[edi],eax
  41e467:	(bad)  
  41e468:	stc    
  41e469:	sbb    BYTE PTR [esp+0x3],ch
  41e46d:	(bad)  
  41e46e:	mul    DWORD PTR [ebp-0x65]
  41e471:	shl    ah,0xf1
  41e474:	dec    esi
  41e475:	fwait
  41e476:	adc    DWORD PTR [esi-0x656954cf],esp
  41e47c:	or     al,BYTE PTR [edx+0x48aa73e0]
  41e482:	dec    ebp
  41e483:	fisttp DWORD PTR [edx-0x20b8a04e]
  41e489:	sbb    ecx,DWORD PTR [ebp-0x11a76234]
  41e48f:	stos   DWORD PTR es:[edi],eax
  41e490:	(bad)  
  41e491:	ficom  DWORD PTR [esi+0x2d]
  41e494:	add    esi,edx
  41e496:	cmp    eax,DWORD PTR ds:0x9eb7b11b
  41e49c:	xor    ecx,DWORD PTR [esi]
  41e49e:	ins    BYTE PTR es:[edi],dx
  41e49f:	push   esp
  41e4a0:	jp     0x41e4d3
  41e4a2:	sti    
  41e4a3:	mov    WORD PTR [edx],ss
  41e4a5:	int    0xa9
  41e4a7:	int    0xbc
  41e4a9:	cs in  eax,dx
  41e4ab:	mov    ebx,es
  41e4ad:	jp     0x41e514
  41e4af:	cmp    al,0xb
  41e4b1:	cmp    esp,DWORD PTR [ebp+0x15]
  41e4b4:	imul   edx,DWORD PTR [eax+ebx*4+0x4e0c168e],0x5b2618c7
  41e4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4c0:	sahf   
  41e4c1:	mov    esi,0x44d21db0
  41e4c6:	dec    ebx
  41e4c7:	aas    
  41e4c8:	cmp    ah,BYTE PTR [eax]
  41e4ca:	xchg   ebx,eax
  41e4cb:	pop    ebx
  41e4cc:	repz stc 
  41e4ce:	mov    al,0x9e
  41e4d0:	jb     0x41e47e
  41e4d2:	jp     0x41e4fe
  41e4d4:	push   esi
  41e4d5:	(bad)  
  41e4d6:	or     dh,BYTE PTR [eax+0x22]
  41e4d9:	sub    BYTE PTR [ebp+0x76],ah
  41e4dc:	out    0x31,eax
  41e4de:	loopne 0x41e4ff
  41e4e0:	xchg   edi,eax
  41e4e1:	cld    
  41e4e2:	test   al,0x45
  41e4e4:	pop    ss
  41e4e5:	or     DWORD PTR [esi+0xc0a0cca],edx
  41e4eb:	sbb    DWORD PTR [ecx-0x677f6abe],0x96b29926
  41e4f5:	xchg   BYTE PTR [ebx-0x2d7428cc],bh
  41e4fb:	(bad)  
  41e4fc:	dec    ebp
  41e4fd:	push   es
  41e4fe:	repnz fnstcw WORD PTR [eax+eiz*2]
  41e502:	add    al,0xbc
  41e504:	dec    ebp
  41e505:	daa    
  41e506:	scas   al,BYTE PTR es:[edi]
  41e507:	jbe    0x41e586
  41e509:	aaa    
  41e50a:	push   0xdf989c17
  41e50f:	and    bl,BYTE PTR [eax-0x31]
  41e512:	les    esp,FWORD PTR [eax+0x32]
  41e515:	mov    ebp,0xaeb27fb9
  41e51a:	push   esi
  41e51b:	mov    WORD PTR [eax-0xf],fs
  41e51e:	adc    ch,BYTE PTR [ecx]
  41e520:	push   ecx
  41e521:	cmp    al,0x8e
  41e523:	ret    
  41e524:	xor    DWORD PTR ds:0x83bf7a35,edi
  41e52a:	mov    ds:0xa8c6929c,al
  41e52f:	mov    bh,0xb5
  41e531:	shl    DWORD PTR [edi+0x53],cl
  41e534:	mov    esi,0x65c9e305
  41e539:	xchg   edi,eax
  41e53a:	retf   
  41e53b:	fsub   QWORD PTR [ebx]
  41e53d:	mov    al,0x66
  41e53f:	loopne 0x41e55e
  41e541:	lods   al,BYTE PTR ds:[esi]
  41e542:	add    al,0x95
  41e544:	jmp    0xba82:0x2e6dcd1d
  41e54b:	pusha  
  41e54c:	call   0x61fc389e
  41e551:	push   0x6e0e84fd
  41e556:	xor    eax,0x7ab428b9
  41e55b:	fild   DWORD PTR [ecx]
  41e55d:	jmp    0xd2f1eb7e
  41e562:	push   ds
  41e563:	daa    
  41e564:	mov    DWORD PTR [edx+0x4e],edx
  41e567:	dec    esp
  41e568:	and    ecx,esi
  41e56a:	(bad)  
  41e56c:	pop    esp
  41e56d:	rcr    DWORD PTR [edx-0x60],cl
  41e570:	xchg   esi,eax
  41e571:	test   al,0x11
  41e573:	test   DWORD PTR [edi-0x46],0x672eba27
  41e57a:	inc    esp
  41e57b:	pop    edi
  41e57c:	cmp    dh,BYTE PTR [edx]
  41e57e:	cmp    eax,0xd12a758a
  41e583:	sahf   
  41e584:	sbb    BYTE PTR [ebp+0x73cc8ede],0x4c
  41e58b:	sub    DWORD PTR [ecx+0x26],ebx
  41e58e:	ret    0x2a62
  41e591:	inc    eax
  41e592:	add    al,BYTE PTR [esi+ecx*8]
  41e595:	arpl   dx,si
  41e597:	dec    esp
  41e598:	test   al,0x57
  41e59a:	cld    
  41e59b:	cmp    BYTE PTR [ebp-0x63cb390],ah
  41e5a1:	cdq    
  41e5a2:	leave  
  41e5a3:	rcr    BYTE PTR [ebp+0x6d],cl
  41e5a6:	pop    ds
  41e5a7:	mov    ebp,0xa0ebd3f7
  41e5ac:	and    esi,ebx
  41e5ae:	popf   
  41e5af:	adc    eax,0xcf8120fa
  41e5b4:	fstp   st(0)
  41e5b6:	add    dh,ch
  41e5b8:	cwde   
  41e5b9:	mov    esp,0x68793e8
  41e5be:	sahf   
  41e5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c0:	xor    edi,DWORD PTR [ebx]
  41e5c2:	sbb    bl,bh
  41e5c4:	pop    ebx
  41e5c5:	adc    eax,0x7895e15b
  41e5ca:	or     eax,0xb6de2822
  41e5cf:	pop    esp
  41e5d0:	or     dl,BYTE PTR [edx+0x78ffc50]
  41e5d6:	jns    0x41e640
  41e5d8:	scas   al,BYTE PTR es:[edi]
  41e5d9:	sub    ebx,ebp
  41e5db:	mov    ecx,0xff177ae1
  41e5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5e1:	jns    0x41e5bc
  41e5e3:	aaa    
  41e5e4:	sub    esp,DWORD PTR [ecx+ecx*8]
  41e5e7:	call   0x916e:0xf324e6b1
  41e5ee:	mov    cl,0x45
  41e5f0:	test   al,0xb4
  41e5f2:	aas    
  41e5f3:	div    bh
  41e5f5:	and    ch,0x77
  41e5f8:	es scas al,BYTE PTR es:[edi]
  41e5fa:	and    eax,0x3195c668
  41e5ff:	aaa    
  41e600:	popf   
  41e601:	out    dx,al
  41e602:	pop    ecx
  41e603:	and    BYTE PTR [ebx+eiz*8+0x50],0x96
  41e608:	mov    ebp,0x6247ebf8
  41e60d:	daa    
  41e60e:	cmp    al,0x46
  41e610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e612:	and    BYTE PTR [eax],0x7b
  41e615:	mov    dh,0xd1
  41e617:	xchg   edx,eax
  41e618:	popf   
  41e619:	shl    DWORD PTR [ebx+eax*2+0x69],0x69
  41e61e:	jmp    0xc0cceefb
  41e623:	adc    eax,0xbbe2226d
  41e628:	sbb    DWORD PTR [ebx],edx
  41e62a:	iret   
  41e62b:	xor    edx,DWORD PTR [ecx]
  41e62d:	jmp    0xf74:0x14324e92
  41e634:	add    BYTE PTR [ebx+eax*4-0x7cece425],0x64
  41e63c:	push   ebx
  41e63d:	hlt    
  41e63e:	cli    
  41e63f:	std    
  41e640:	jle    0x41e695
  41e642:	add    bl,ah
  41e644:	and    edx,edx
  41e646:	cmp    cl,BYTE PTR ds:0x4915a445
  41e64c:	les    ebx,FWORD PTR [ebp+0x2f83c624]
  41e652:	loop   0x41e620
  41e654:	hlt    
  41e655:	inc    edx
  41e656:	es mov dl,0x3c
  41e659:	ins    BYTE PTR es:[edi],dx
  41e65a:	push   edx
  41e65b:	das    
  41e65c:	cmp    al,BYTE PTR [eax]
  41e65e:	mov    ebx,0x8d2e3310
  41e663:	sub    BYTE PTR [ebx],bh
  41e665:	xchg   DWORD PTR [esi-0x60],ecx
  41e668:	sbb    eax,0xd461001e
  41e66d:	(bad)  
  41e66f:	sbb    DWORD PTR ds:0x6bc49b90,ecx
  41e675:	jne    0x41e5ff
  41e677:	mov    eax,ds:0x40652466
  41e67c:	xchg   edi,eax
  41e67d:	adc    DWORD PTR [eax],0x46
  41e680:	xlat   BYTE PTR ds:[ebx]
  41e681:	inc    edx
  41e682:	lods   al,BYTE PTR ds:[esi]
  41e683:	push   0xe8ffc687
  41e688:	ja     0x41e689
  41e68a:	inc    ebx
  41e68b:	retf   
  41e68c:	pop    es
  41e68d:	sub    BYTE PTR [ecx+0x57],bh
  41e690:	les    esi,FWORD PTR [esi-0x29804d98]
  41e696:	(bad)  
  41e697:	mov    ah,0x12
  41e699:	mov    ebp,0x9b33365f
  41e69e:	mov    ah,0x6b
  41e6a0:	es pushw 0x2f
  41e6a4:	popf   
  41e6a5:	cmp    ch,BYTE PTR [esi-0x43d55dc]
  41e6ab:	xor    BYTE PTR [ecx],dh
  41e6ad:	mov    ebx,0x7e69346f
  41e6b2:	sbb    ebp,DWORD PTR [eax+0x36]
  41e6b5:	mov    ebx,DWORD PTR [ecx+0x6f3c2bb9]
  41e6bb:	out    dx,eax
  41e6bc:	mov    ds:0x7f5a1473,al
  41e6c1:	ins    DWORD PTR es:[edi],dx
  41e6c2:	iret   
  41e6c3:	lds    ecx,FWORD PTR [edx+edi*2+0x13e4fcfd]
  41e6ca:	sbb    BYTE PTR [esp+ecx*4],bh
  41e6cd:	ss stos BYTE PTR es:[edi],al
  41e6cf:	stos   WORD PTR es:[edi],ax
  41e6d1:	imul   ebx,edi,0x62
  41e6d4:	cmp    bl,BYTE PTR [eax]
  41e6d6:	bnd jge 0x41e756
  41e6d9:	jmp    0x2ef8f4ee
  41e6de:	mov    edx,0xa5658edd
  41e6e3:	inc    edi
  41e6e4:	or     eax,DWORD PTR [esp+ebp*2-0x51]
  41e6e8:	outs   dx,BYTE PTR ds:[esi]
  41e6e9:	(bad)  
  41e6eb:	and    cl,BYTE PTR [eax-0x1]
  41e6ee:	mov    al,BYTE PTR [edx]
  41e6f0:	mov    esp,DWORD PTR [ebx+0x155442e2]
  41e6f6:	hlt    
  41e6f7:	cmc    
  41e6f8:	adc    al,0x23
  41e6fa:	add    eax,0xf9f5e293
  41e6ff:	jp     0x41e700
  41e701:	lahf   
  41e702:	mov    ?,WORD PTR [ecx+0x74]
  41e705:	mov    ecx,DWORD PTR ds:0xb2feb33c
  41e70b:	int3   
  41e70c:	ret    
  41e70d:	or     eax,0x16b67ea5
  41e712:	cmp    ebx,DWORD PTR [esi-0x7e384ab2]
  41e718:	nop
  41e719:	out    dx,eax
  41e71a:	mov    eax,0x4ec82b9f
  41e71f:	imul   esi,DWORD PTR [eax],0xfc312cb5
  41e725:	call   0xfdf82fe
  41e72a:	(bad)  
  41e72c:	into   
  41e72d:	ja     0x41e6d7
  41e72f:	call   0xd36b:0xa19e8348
  41e736:	(bad)  
  41e737:	add    ebp,DWORD PTR [ebx+0x18]
  41e73a:	push   eax
  41e73b:	xchg   esp,eax
  41e73c:	mov    ebx,0xeb51650c
  41e741:	or     eax,0x579f1cfb
  41e746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e747:	sub    bl,bh
  41e749:	xchg   esi,eax
  41e74a:	test   al,0xb5
  41e74c:	dec    ebp
  41e74d:	push   es
  41e74e:	xchg   esi,eax
  41e74f:	sub    edx,ebx
  41e751:	(bad)  
  41e752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e753:	jb     0x41e788
  41e755:	sub    al,0xc8
  41e757:	sub    ch,BYTE PTR [ebx-0x9]
  41e75a:	sbb    BYTE PTR [esp+esi*1-0x67],0x88
  41e75f:	inc    eax
  41e760:	sbb    bh,BYTE PTR [edx-0x15b8efe0]
  41e766:	popf   
  41e767:	dec    esp
  41e768:	loope  0x41e72e
  41e76a:	mov    dl,0x20
  41e76c:	add    edx,esi
  41e76e:	add    esp,edx
  41e770:	outs   dx,DWORD PTR ds:[esi]
  41e771:	xor    esi,0x710b06e8
  41e777:	pop    ebp
  41e778:	and    ah,BYTE PTR [edx-0x49]
  41e77b:	div    DWORD PTR [ecx+edi*4-0x9]
  41e77f:	mov    bh,0xd2
  41e781:	sub    cl,dh
  41e783:	jns    0x41e724
  41e785:	jo     0x41e74f
  41e787:	inc    esi
  41e788:	adc    dl,BYTE PTR [ecx]
  41e78a:	loop   0x41e72f
  41e78c:	out    dx,al
  41e78d:	test   esi,eax
  41e78f:	pushf  
  41e790:	call   0x57b0:0x2a8b1ecc
  41e797:	es xor al,0x40
  41e79a:	xchg   esi,eax
  41e79b:	outs   dx,BYTE PTR ds:[esi]
  41e79c:	mov    ch,0x14
  41e79e:	push   ebx
  41e79f:	adc    DWORD PTR [eax],0xffffffcc
  41e7a2:	sbb    cl,BYTE PTR [ecx]
  41e7a4:	and    esp,DWORD PTR ds:0x79e8c770
  41e7aa:	mov    WORD PTR [ebp+0x2c],?
  41e7ad:	cmc    
  41e7ae:	or     edi,DWORD PTR [esi-0xf6669e3]
  41e7b4:	xchg   esi,eax
  41e7b5:	ror    bl,1
  41e7b7:	pop    ebx
  41e7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7b9:	cmp    al,0x9d
  41e7bb:	icebp  
  41e7bc:	not    dh
  41e7be:	or     ebp,DWORD PTR [ebx+0x77edb329]
  41e7c4:	jae    0x41e829
  41e7c6:	out    dx,eax
  41e7c7:	inc    esi
  41e7c8:	sbb    al,0x19
  41e7ca:	int3   
  41e7cb:	add    BYTE PTR [ecx+0x2a],bh
  41e7ce:	push   esi
  41e7cf:	scas   al,BYTE PTR es:[edi]
  41e7d0:	adc    ah,BYTE PTR [ecx+0x29]
  41e7d3:	add    ah,ch
  41e7d5:	fwait
  41e7d6:	pop    ebx
  41e7d7:	int    0x3e
  41e7d9:	arpl   WORD PTR [edx],di
  41e7db:	sub    edx,eax
  41e7dd:	imul   ebp,ebp,0x461ccc81
  41e7e3:	sar    BYTE PTR [edx-0x23],1
  41e7e6:	dec    esp
  41e7e7:	repnz (bad) 
  41e7e9:	push   edi
  41e7ea:	lods   eax,DWORD PTR cs:[esi]
  41e7ec:	or     al,0xff
  41e7ee:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f0:	cmp    edi,edx
  41e7f2:	movlps QWORD PTR [edi+eax*2],xmm1
  41e7f6:	dec    eax
  41e7f7:	adc    eax,0x23cfe784
  41e7fc:	sub    dh,ah
  41e7fe:	and    eax,0x4f479af9
  41e803:	mov    ds:0x726d15de,eax
  41e808:	call   0x9eca4636
  41e80d:	cwde   
  41e80e:	loope  0x41e7b2
  41e810:	jmp    0x82013ca6
  41e815:	inc    ecx
  41e816:	push   0x3c2c8a75
  41e81b:	add    bh,BYTE PTR [edi+0x1d]
  41e81e:	mov    edi,0x67aff4be
  41e823:	outs   dx,BYTE PTR ds:[esi]
  41e824:	lahf   
  41e825:	popa   
  41e826:	adc    eax,0x5ae23a69
  41e82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e82c:	daa    
  41e82d:	repnz inc edi
  41e82f:	mov    ah,0xf9
  41e831:	retf   0x1cca
  41e834:	aam    0xaf
  41e836:	cmp    al,0x40
  41e838:	jns    0x41e839
  41e83a:	fnstenv [eax+eiz*4]
  41e83d:	loopne 0x41e80b
  41e83f:	xchg   ebx,eax
  41e840:	xchg   ebp,eax
  41e841:	and    DWORD PTR [esi+0x3101aa04],ebp
  41e847:	push   ss
  41e848:	dec    ebp
  41e849:	add    DWORD PTR [ebx-0x3],ebp
  41e84c:	icebp  
  41e84d:	add    BYTE PTR [ecx-0x4a08bd0c],ah
  41e853:	gs xchg esi,eax
  41e855:	sti    
  41e856:	call   0x49f1:0x9ff9abbd
  41e85d:	pop    ds
  41e85e:	xchg   edi,eax
  41e85f:	je     0x41e7e2
  41e861:	mov    eax,0xb4860c00
  41e866:	repnz clc 
  41e868:	xchg   ecx,eax
  41e869:	adc    eax,0x2685578
  41e86e:	or     eax,0x87b35216
  41e873:	nop
  41e874:	jne    0x41e81d
  41e876:	push   es
  41e877:	mov    ah,0xaa
  41e879:	and    al,0xaa
  41e87b:	dec    eax
  41e87c:	xchg   BYTE PTR [ebp-0x2eccf71d],bl
  41e882:	push   ds
  41e883:	push   ebx
  41e884:	mov    al,ds:0x647546f1
  41e889:	mov    eax,0xd0ee78dc
  41e88e:	test   al,0x8f
  41e890:	mov    eax,0xafd586
  41e895:	retf   
  41e896:	clc    
  41e897:	mov    WORD PTR [edi-0x6e26fbe0],fs
  41e89d:	mov    WORD PTR [esi-0x6c],ds
  41e8a0:	cmp    ecx,DWORD PTR [edx+ebp*4-0x23]
  41e8a4:	pop    ds
  41e8a5:	js     0x41e8e4
  41e8a7:	test   BYTE PTR [ebp+0x2c98ddb5],0x4a
  41e8ae:	pop    edx
  41e8af:	scas   eax,DWORD PTR es:[edi]
  41e8b0:	xor    eax,0x30a6562b
  41e8b5:	aad    0x70
  41e8b7:	push   ecx
  41e8b8:	cld    
  41e8b9:	inc    edi
  41e8ba:	mov    WORD PTR [ebp+ecx*4-0x61],?
  41e8be:	cmp    edi,edx
  41e8c0:	jecxz  0x41e8dd
  41e8c2:	and    eax,eax
  41e8c4:	mov    gs,WORD PTR [eax+0x45]
  41e8c7:	or     eax,0x5a214386
  41e8cc:	in     eax,dx
  41e8cd:	pop    ds
  41e8ce:	mov    DWORD PTR [edx],0x7dd7d937
  41e8d4:	shl    ebx,0xb7
  41e8d7:	outs   dx,DWORD PTR ds:[esi]
  41e8d8:	adc    BYTE PTR [esi+0x753087a],bh
  41e8de:	jecxz  0x41e95f
  41e8e0:	sar    DWORD PTR [ebx-0x5ee9f618],0x7b
  41e8e7:	ins    DWORD PTR es:[edi],dx
  41e8e8:	iret   
  41e8e9:	popf   
  41e8ea:	inc    ebx
  41e8eb:	ret    
  41e8ec:	out    dx,eax
  41e8ed:	xor    dh,BYTE PTR [eax+0x71]
  41e8f0:	xor    al,0x43
  41e8f2:	mov    esi,0xe099952
  41e8f7:	push   0x2c852556
  41e8fc:	int    0x33
  41e8fe:	jmp    0xbfe5:0x7491467a
  41e905:	cmp    eax,DWORD PTR [ecx+ecx*8+0x66]
  41e909:	xor    al,BYTE PTR [esi]
  41e90b:	or     BYTE PTR [eax-0x1e],al
  41e90e:	lds    ebx,FWORD PTR [ecx+ebx*8]
  41e911:	jecxz  0x41e8fa
  41e913:	cmp    al,0xb3
  41e915:	fimul  DWORD PTR [esi-0x52]
  41e918:	add    DWORD PTR [eax+0x79],ebp
  41e91b:	dec    esp
  41e91c:	out    0x1f,al
  41e91e:	dec    eax
  41e91f:	xor    DWORD PTR [eax-0x6f],esp
  41e922:	ret    
  41e923:	xor    edi,DWORD PTR ds:0xae4150de
  41e929:	push   0x5a
  41e92b:	or     dl,BYTE PTR [eax]
  41e92d:	pusha  
  41e92e:	rol    DWORD PTR [edi+0x4dc2a8d4],cl
  41e934:	jbe    0x41e954
  41e936:	cmp    DWORD PTR [ebx+0x2d],0x7062683
  41e93d:	add    eax,DWORD PTR [ebx+0x4c2dcd6b]
  41e943:	outs   dx,BYTE PTR ds:[esi]
  41e944:	in     al,0xe2
  41e946:	int    0x9b
  41e948:	or     eax,0x5b5a024a
  41e94d:	xchg   DWORD PTR [edi],edx
  41e94f:	sub    eax,edi
  41e951:	test   al,0xf9
  41e953:	cmp    esp,DWORD PTR ds:0xeedbf7c8
  41e959:	sub    eax,0x6d3779dd
  41e95e:	call   0xdc80:0xd4a8865b
  41e965:	sti    
  41e966:	(bad)  
  41e967:	call   0x67c20d2b
  41e96c:	sub    DWORD PTR [ebx+0x71],0xffffff92
  41e970:	pusha  
  41e971:	inc    edx
  41e972:	cmp    DWORD PTR [ebx+0x6d],edx
  41e975:	inc    esi
  41e976:	into   
  41e977:	or     al,0x36
  41e979:	aas    
  41e97a:	(bad)  
  41e97b:	fmul   QWORD PTR [edi]
  41e97d:	das    
  41e97e:	jno    0x41e9e7
  41e980:	jecxz  0x41e9b7
  41e982:	fstp   DWORD PTR ss:[esi-0x49e93625]
  41e989:	xchg   edi,edx
  41e98b:	mov    al,ds:0x37ba37e9
  41e990:	mov    ah,0xd2
  41e992:	das    
  41e993:	sbb    eax,0x1c187b57
  41e998:	outs   dx,BYTE PTR ds:[esi]
  41e999:	mov    bl,0x1f
  41e99b:	pop    ds
  41e99c:	jns    0x41e9f8
  41e99e:	test   bh,bl
  41e9a0:	mov    ds:0xf85f7f46,al
  41e9a5:	mov    edi,0xe1158f2b
  41e9aa:	fadd   QWORD PTR [esi]
  41e9ac:	sbb    edx,DWORD PTR [edx]
  41e9ae:	mov    ebx,0x6a7678e7
  41e9b3:	and    DWORD PTR [eax-0x388473c2],ebp
  41e9b9:	push   cs
  41e9ba:	fucomip st,st(6)
  41e9bc:	push   es
  41e9bd:	sbb    BYTE PTR [esi-0x5d],al
  41e9c0:	and    al,0x26
  41e9c2:	aas    
  41e9c3:	pop    ds
  41e9c4:	scas   al,BYTE PTR es:[edi]
  41e9c5:	clc    
  41e9c6:	xchg   esp,eax
  41e9c7:	fnstcw WORD PTR [ebx+0x32]
  41e9ca:	in     al,dx
  41e9cb:	push   eax
  41e9cc:	jle    0x41e9e7
  41e9ce:	mov    edx,0x17744f76
  41e9d3:	pop    ebx
  41e9d4:	lods   eax,DWORD PTR ds:[esi]
  41e9d5:	cmp    BYTE PTR [eax-0x72],dh
  41e9d8:	mov    eax,ds:0x971102ca
  41e9dd:	std    
  41e9de:	(bad)  
  41e9e0:	cmp    edi,ebp
  41e9e2:	popa   
  41e9e3:	mov    ecx,0xb742f8d7
  41e9e8:	lods   al,BYTE PTR ds:[esi]
  41e9e9:	sbb    eax,0x1a253f4f
  41e9ee:	push   ds
  41e9ef:	mov    gs:0x765ca082,al
  41e9f5:	rcl    DWORD PTR [eax-0x15352099],cl
  41e9fb:	clc    
  41e9fc:	pop    ds
  41e9fd:	std    
  41e9fe:	mov    ah,0x88
  41ea00:	test   DWORD PTR [eax],ecx
  41ea02:	adc    al,0x96
  41ea04:	cmp    DWORD PTR [ecx+eiz*4+0x8752ada],0xffffff83
  41ea0c:	rcpps  xmm1,xmm1
  41ea0f:	push   ss
  41ea10:	cli    
  41ea11:	jmp    0xf3b1:0xbe0a280a
  41ea18:	(bad)  
  41ea19:	jns    0x41e99d
  41ea1b:	repz fsubr QWORD PTR [ebp-0x54]
  41ea1f:	xchg   BYTE PTR [ebp+0x35],bl
  41ea22:	mov    ebx,0x1e75d690
  41ea27:	ret    
  41ea28:	sub    dh,BYTE PTR [eax]
  41ea2a:	add    WORD PTR es:[ecx+edi*1-0x38],0xfff9
  41ea31:	or     eax,0x8f6da794
  41ea36:	mov    ch,0xb4
  41ea38:	fstp   DWORD PTR [bx+di]
  41ea3b:	sub    ah,BYTE PTR [edx+0x78]
  41ea3e:	xchg   edx,eax
  41ea3f:	inc    edx
  41ea40:	mov    cl,0x66
  41ea42:	pop    edi
  41ea43:	adc    dl,ah
  41ea45:	add    DWORD PTR [ebp+ecx*4+0x28],0x156d6cec
  41ea4d:	cmp    BYTE PTR [eax-0x2a],bh
  41ea50:	cmp    DWORD PTR [eax+0x41],esi
  41ea53:	out    dx,al
  41ea54:	loope  0x41ea83
  41ea56:	mov    ds:0xed48b11d,eax
  41ea5b:	add    eax,0x64048fe5
  41ea60:	inc    esp
  41ea61:	cmovg  edx,DWORD PTR [ebx]
  41ea64:	xchg   edi,eax
  41ea65:	lea    edx,[ecx-0x3e]
  41ea68:	cmp    ah,dh
  41ea6a:	fnsave [ecx+0x64729992]
  41ea70:	mov    ds:0x3e9917b4,al
  41ea75:	mov    ds:0x884679ca,eax
  41ea7a:	neg    DWORD PTR [edi]
  41ea7c:	les    ecx,FWORD PTR [esi]
  41ea7e:	jle    0x41eaa5
  41ea80:	clc    
  41ea81:	pop    edi
  41ea82:	pop    edi
  41ea83:	sbb    bh,bl
  41ea85:	ret    
  41ea86:	addr16 dec ebx
  41ea88:	cli    
  41ea89:	sbb    esp,edi
  41ea8b:	push   cs
  41ea8c:	ret    
  41ea8d:	stos   BYTE PTR es:[edi],al
  41ea8e:	lods   al,BYTE PTR ds:[esi]
  41ea8f:	imul   edi,DWORD PTR fs:[edi],0x4215b09d
  41ea96:	cli    
  41ea97:	mov    edi,0xba26dfb3
  41ea9c:	aad    0x4c
  41ea9e:	mov    bh,0x76
  41eaa0:	out    dx,eax
  41eaa1:	into   
  41eaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa3:	or     DWORD PTR fs:[ebx-0x11],0x6af665c5
  41eaab:	ins    DWORD PTR es:[edi],dx
  41eaac:	push   ds
  41eaad:	jne    0x41ea55
  41eaaf:	sub    ecx,DWORD PTR [ebp-0x43]
  41eab2:	in     eax,dx
  41eab3:	je     0x41eaef
  41eab5:	adc    DWORD PTR [ebx],edx
  41eab7:	enter  0x2701,0x46
  41eabb:	or     BYTE PTR [ebx+0x76],0xdd
  41eabf:	rol    BYTE PTR [eax],1
  41eac1:	mov    ah,0x91
  41eac3:	fstp   DWORD PTR [edx-0x69]
  41eac6:	xchg   esp,eax
  41eac7:	scas   al,BYTE PTR es:[edi]
  41eac8:	jg     0x41eb1d
  41eaca:	jbe    0x41eae8
  41eacc:	call   0x6e8676b6
  41ead1:	(bad)  
  41ead2:	ds xor al,0x21
  41ead5:	pop    edi
  41ead6:	pop    edx
  41ead7:	lea    edi,[edx]
  41ead9:	lods   eax,DWORD PTR ds:[esi]
  41eada:	out    dx,al
  41eadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eadc:	in     eax,dx
  41eadd:	add    DWORD PTR [edi+ebp*4-0x2b77d4c4],edx
  41eae4:	sbb    bl,dl
  41eae6:	jo     0x41eacb
  41eae8:	call   DWORD PTR [eax+ecx*4-0xd]
  41eaec:	pop    es
  41eaed:	fisubr WORD PTR [ecx+0x70cb5896]
  41eaf3:	dec    ebx
  41eaf4:	xor    eax,0xae2e0fc9
  41eaf9:	push   cs
  41eafa:	sbb    DWORD PTR ds:0x1b66d12c,edi
  41eb00:	cmp    DWORD PTR [ebx-0x6a],ebx
  41eb03:	and    ecx,0x76ec089e
  41eb09:	gs mov ch,0x5d
  41eb0c:	inc    edx
  41eb0d:	push   ebx
  41eb0e:	mov    ds:0xc219949a,al
  41eb13:	mov    ah,0x1a
  41eb15:	clc    
  41eb16:	jmp    0xc61d:0x7d242ba8
  41eb1d:	daa    
  41eb1e:	jmp    esp
  41eb20:	js     0x41eb9a
  41eb22:	cmp    eax,0x3b94c937
  41eb27:	mov    bl,0xe4
  41eb29:	pop    es
  41eb2a:	repnz ins BYTE PTR es:[edi],dx
  41eb2c:	or     al,0x56
  41eb2e:	cmc    
  41eb2f:	pop    es
  41eb30:	imul   esp,DWORD PTR [esi-0x381dbd63],0x5b
  41eb37:	imul   DWORD PTR [ecx-0x46]
  41eb3a:	cmp    eax,0xe2cef53b
  41eb3f:	bound  edi,QWORD PTR [esi-0x29d004b]
  41eb45:	sub    al,0x3b
  41eb47:	push   esp
  41eb48:	mul    edx
  41eb4a:	xor    BYTE PTR [edx+ebp*1],0x18
  41eb4e:	and    eax,0x8e8c3ce0
  41eb53:	xchg   edi,eax
  41eb54:	mov    ah,BYTE PTR [ecx+0x6a]
  41eb57:	(bad)  
  41eb58:	mov    ebp,0x2010449e
  41eb5d:	fisttp DWORD PTR [ecx+0x32]
  41eb60:	mov    ebx,0xecf1b22
  41eb65:	jg     0x41eb2c
  41eb67:	sahf   
  41eb68:	pop    esi
  41eb69:	cwde   
  41eb6a:	xor    ecx,DWORD PTR [ebx+edx*4+0x2cb60700]
  41eb71:	scas   eax,DWORD PTR es:[edi]
  41eb72:	bound  edx,QWORD PTR [edx+0x8]
  41eb75:	mov    DWORD PTR [edx+0x1e],ecx
  41eb78:	mov    bh,0xfb
  41eb7a:	xor    esi,ebx
  41eb7c:	push   ds
  41eb7d:	inc    eax
  41eb7e:	stc    
  41eb7f:	jmp    0x80ad:0xf0beea6d
  41eb86:	add    eax,0x33c013a3
  41eb8b:	fmul   DWORD PTR ds:0x89a944cd
  41eb91:	jp     0x41ebae
  41eb93:	outs   dx,BYTE PTR ds:[esi]
  41eb94:	int    0xd1
  41eb96:	sti    
  41eb97:	jge    0x41ec13
  41eb99:	mov    esi,0x9af0b7a3
  41eb9e:	dec    ebx
  41eb9f:	sub    edx,ecx
  41eba1:	adc    eax,0x72bf46e9
  41eba6:	push   edx
  41eba7:	sub    al,0x9a
  41eba9:	nop
  41ebaa:	fild   DWORD PTR [ebp-0x52]
  41ebad:	jno    0x41ec06
  41ebaf:	mov    ecx,0x2c902867
  41ebb4:	mov    edx,0xdf9af2ae
  41ebb9:	xlat   BYTE PTR ds:[ebx]
  41ebba:	mov    esi,0x6914b209
  41ebbf:	shl    DWORD PTR [ecx+edi*4],1
  41ebc2:	mov    dl,0x45
  41ebc4:	fidiv  WORD PTR [esi+0x534d030e]
  41ebca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebcb:	and    ebp,DWORD PTR [ecx]
  41ebcd:	push   edi
  41ebce:	and    DWORD PTR [eax-0x43],ebx
  41ebd1:	jmp    0xc79b:0x147a677c
  41ebd8:	iret   
  41ebd9:	adc    al,cl
  41ebdb:	retf   
  41ebdc:	add    BYTE PTR [esi],bh
  41ebde:	dec    ecx
  41ebdf:	cmp    bl,BYTE PTR [esi-0xf]
  41ebe2:	mov    cs,WORD PTR [ebp-0x59e1b4b4]
  41ebe8:	ret    0xcdc4
  41ebeb:	push   ebx
  41ebec:	mov    BYTE PTR [esi+0x52562af8],bl
  41ebf2:	mov    eax,0xf3e24fed
  41ebf7:	xchg   edx,eax
  41ebf8:	push   ss
  41ebf9:	test   esi,0xeb35ffe5
  41ebff:	add    al,BYTE PTR [edi]
  41ec01:	fcom   QWORD PTR [eax+0x2534da61]
  41ec07:	(bad)  
  41ec08:	xchg   esi,eax
  41ec09:	and    dl,BYTE PTR [edi+0x9112c]
  41ec0f:	pusha  
  41ec10:	mov    ds:0xcdcaa4b6,eax
  41ec15:	or     al,0x67
  41ec17:	push   ss
  41ec18:	jb     0x41ec45
  41ec1a:	push   edi
  41ec1b:	clc    
  41ec1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec1d:	push   esp
  41ec1e:	xchg   ah,cl
  41ec20:	mov    ebx,es
  41ec22:	push   ebp
  41ec23:	lock pop ecx
  41ec25:	mov    eax,0xcf475672
  41ec2a:	lods   eax,DWORD PTR ds:[esi]
  41ec2b:	pop    edx
  41ec2c:	cmp    al,0x1
  41ec2e:	out    0x38,al
  41ec30:	fdivr  QWORD PTR [edi+0x15c59bdc]
  41ec36:	push   eax
  41ec37:	sub    al,0xce
  41ec39:	fidivr WORD PTR [ecx+edi*1-0x1f]
  41ec3d:	mov    bh,BYTE PTR [esp+ebx*4+0x4b]
  41ec41:	ja     0x41ebd3
  41ec43:	inc    ebx
  41ec44:	add    edx,DWORD PTR [edx-0x41]
  41ec47:	je     0x41ebdf
  41ec49:	dec    eax
  41ec4a:	jp     0x41ecc6
  41ec4c:	push   esp
  41ec4d:	inc    esi
  41ec4e:	xchg   ebx,eax
  41ec4f:	(bad)  
  41ec50:	out    0x3,al
  41ec52:	mov    ecx,0xda83c6aa
  41ec57:	int    0x93
  41ec59:	cmp    eax,0x7ac22ebe
  41ec5e:	cmp    BYTE PTR [esi-0x1c],0xc4
  41ec62:	jg     0x41eca9
  41ec64:	mov    ebx,0x35ae1a2b
  41ec69:	popa   
  41ec6a:	xor    eax,0xb57247
  41ec6f:	je     0x41ec90
  41ec71:	sti    
  41ec72:	adc    eax,0xadd84253
  41ec77:	rol    DWORD PTR [ecx+0x7],0x91
  41ec7b:	inc    ebp
  41ec7c:	aas    
  41ec7d:	push   ebp
  41ec7e:	mov    eax,ds:0x7148b2c0
  41ec83:	mov    ds:0xb90f74c3,al
  41ec88:	fsubr  st,st(5)
  41ec8a:	pop    esi
  41ec8b:	(bad)  
  41ec8c:	mov    eax,0x9422f150
  41ec91:	(bad)  [edi+ebx*2+0x39]
  41ec95:	cdq    
  41ec96:	or     DWORD PTR [ebp+0x23],0x7dffcfac
  41ec9d:	or     BYTE PTR [edx+0x64630051],0x2e
  41eca4:	xchg   ecx,eax
  41eca5:	jo     0x41ec31
  41eca7:	loope  0x41ec5e
  41eca9:	pop    esi
  41ecaa:	fbld   TBYTE PTR [esi]
  41ecac:	inc    ebx
  41ecad:	retf   0xa961
  41ecb0:	es fwait
  41ecb2:	jb     0x41ec59
  41ecb4:	(bad)  
  41ecb6:	mov    esi,0x1e04109c
  41ecbb:	hlt    
  41ecbc:	aad    0xe0
  41ecbe:	or     edi,DWORD PTR [esi+ecx*1]
  41ecc1:	sbb    bl,al
  41ecc3:	adc    ch,BYTE PTR [eax+0x3c]
  41ecc6:	cs ror edx,cl
  41ecc9:	inc    edx
  41ecca:	outs   dx,DWORD PTR ds:[esi]
  41eccb:	std    
  41eccc:	fistp  QWORD PTR [ecx]
  41ecce:	adc    ch,BYTE PTR [ebp+0x2e]
  41ecd1:	iret   
  41ecd2:	jno    0x41ecc5
  41ecd4:	mov    bh,0x94
  41ecd6:	xchg   esp,eax
  41ecd7:	or     BYTE PTR ds:0xbc3b0cd,bl
  41ecdd:	popf   
  41ecde:	and    eax,0xca900964
  41ece3:	push   0x40
  41ece5:	push   eax
  41ece6:	scas   eax,DWORD PTR es:[edi]
  41ece7:	xchg   esp,eax
  41ece8:	aaa    
  41ece9:	ds jb  0x41ec7d
  41ecec:	or     esi,DWORD PTR [ebp-0x3d]
  41ecef:	clc    
  41ecf0:	js     0x41ec80
  41ecf2:	retf   
  41ecf3:	ret    0x4344
  41ecf6:	ret    0xb1ea
  41ecf9:	xor    ebx,ebp
  41ecfb:	mov    WORD PTR [edi+0x3b],ds
  41ecfe:	pop    ss
  41ecff:	push   esi
  41ed00:	jmp    0x41ed7c
  41ed02:	into   
  41ed03:	mov    ch,0x83
  41ed05:	pop    esi
  41ed06:	retf   0x9dc0
  41ed09:	push   0x2afd1cd0
  41ed0e:	jb     0x41ed1a
  41ed10:	or     DWORD PTR [esi+0x39],0x92d57d9f
  41ed17:	mov    ds:0xeb35bc,al
  41ed1c:	add    eax,0xb3e41dea
  41ed21:	imul   eax,DWORD PTR [esi-0x66f8a667],0xea389227
  41ed2b:	mov    al,ds:0xdd9c329
  41ed30:	repnz xchg edi,eax
  41ed32:	adc    ch,BYTE PTR [eax]
  41ed34:	sbb    DWORD PTR [ecx],edx
  41ed36:	ret    0xe9b6
  41ed39:	jg     0x41ecbb
  41ed3b:	xchg   DWORD PTR [esi+0x3a],ebp
  41ed3e:	mov    ds:0x6a74ae37,eax
  41ed43:	sub    edx,DWORD PTR [ecx]
  41ed45:	rdmsr  
  41ed47:	call   0x99f:0x6ea7578c
  41ed4e:	dec    edx
  41ed4f:	int    0xa3
  41ed51:	xor    DWORD PTR ds:0x20902293,ebx
  41ed57:	push   edi
  41ed58:	test   esp,ecx
  41ed5a:	sub    DWORD PTR [esi],edx
  41ed5c:	stos   BYTE PTR es:[edi],al
  41ed5d:	ins    BYTE PTR es:[edi],dx
  41ed5e:	outs   dx,BYTE PTR ds:[esi]
  41ed5f:	and    al,0x1a
  41ed61:	popf   
  41ed62:	sub    esi,DWORD PTR [ecx+0x324b6bbd]
  41ed68:	jecxz  0x41ed4f
  41ed6a:	adc    bh,BYTE PTR [edx+ebx*8-0x5e]
  41ed6e:	in     al,dx
  41ed6f:	xchg   ebp,eax
  41ed70:	fld    QWORD PTR [esi]
  41ed72:	add    al,0xbd
  41ed74:	dec    eax
  41ed75:	xor    ax,dx
  41ed78:	into   
  41ed79:	in     al,dx
  41ed7a:	mov    al,ds:0xfc8b22d5
  41ed7f:	ins    BYTE PTR es:[edi],dx
  41ed80:	dec    edi
  41ed81:	jnp    0x41ed56
  41ed83:	mov    cs,WORD PTR [edi]
  41ed85:	add    bl,ah
  41ed87:	and    al,0x97
  41ed89:	and    DWORD PTR [eax+0x145afc0f],eax
  41ed8f:	mov    ebp,ebx
  41ed91:	popa   
  41ed92:	je     0x41ee09
  41ed94:	out    0x53,al
  41ed96:	stc    
  41ed97:	mov    edx,0x1e5e9c89
  41ed9c:	sbb    eax,0x9b0b1fea
  41eda1:	leave  
  41eda2:	mov    ds:0xd0066a6,al
  41eda7:	mov    dl,0xcd
  41eda9:	(bad)  es:[edx]
  41edac:	sub    al,0xfe
  41edae:	sti    
  41edaf:	add    eax,0x575d050b
  41edb4:	test   eax,0xff983875
  41edb9:	fnstcw WORD PTR [ebx+0x12]
  41edbc:	dec    ecx
  41edbd:	std    
  41edbe:	fisttp WORD PTR [ecx]
  41edc0:	dec    ebp
  41edc1:	pop    edx
  41edc2:	sub    bl,BYTE PTR [edi-0x28c6da32]
  41edc8:	jecxz  0x41edf4
  41edca:	and    DWORD PTR [eax],0x18695539
  41edd0:	mov    ds:0x82e7a5ab,eax
  41edd5:	test   eax,0x4ddd84b6
  41edda:	cwde   
  41eddb:	aaa    
  41eddc:	push   0x49
  41edde:	repnz clc 
  41ede0:	retf   0xa496
  41ede3:	js     0x41ee2c
  41ede5:	loopne 0x41ee65
  41ede7:	cmp    DWORD PTR [ebx-0x58b56aef],0x2dde86e9
  41edf1:	jecxz  0x41ee6f
  41edf3:	sub    BYTE PTR [edi-0x9],ah
  41edf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edf7:	inc    ebx
  41edf8:	(bad)  
  41edf9:	leave  
  41edfa:	outs   dx,DWORD PTR ds:[esi]
  41edfb:	in     al,dx
  41edfc:	sti    
  41edfd:	stos   DWORD PTR es:[edi],eax
  41edfe:	test   bl,bl
  41ee00:	or     cl,0x47
  41ee03:	push   0x892e642c
  41ee08:	mov    ah,BYTE PTR [esi]
  41ee0a:	ror    BYTE PTR [ecx+0x6ab1ab97],0xd9
  41ee11:	out    dx,eax
  41ee12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee13:	fs mov cl,0x7a
  41ee16:	lds    ebx,FWORD PTR [eax+0x10977369]
  41ee1c:	icebp  
  41ee1d:	jge    0x41ee3a
  41ee1f:	fwait
  41ee20:	jb     0x41edc7
  41ee22:	inc    esi
  41ee23:	sahf   
  41ee24:	fcomp  QWORD PTR [eax-0x2f3c9e96]
  41ee2a:	loopne 0x41ee91
  41ee2c:	(bad)  
  41ee2d:	loopne 0x41ee19
  41ee2f:	mov    dl,dh
  41ee31:	mov    al,0xb2
  41ee33:	mov    ecx,ebp
  41ee35:	pop    ss
  41ee36:	fiadd  DWORD PTR [ebp+0x28c28d0a]
  41ee3c:	or     al,0xb9
  41ee3e:	clc    
  41ee3f:	sub    ah,BYTE PTR [ecx-0x64]
  41ee42:	xor    eax,DWORD PTR [eax]
  41ee44:	xor    eax,0x4e9a9193
  41ee49:	mov    ecx,0xbee3d740
  41ee4e:	and    DWORD PTR [esp+eiz*2+0x45],eax
  41ee52:	xor    DWORD PTR [ecx+0x509bba79],0xfec04d45
  41ee5c:	sub    DWORD PTR [eax+0x545aca14],ebx
  41ee62:	push   ebp
  41ee63:	inc    ebp
  41ee64:	dec    ecx
  41ee65:	les    esi,FWORD PTR [esi+0x46]
  41ee68:	or     dl,bl
  41ee6a:	fs das 
  41ee6c:	mov    dh,0x8
  41ee6e:	leave  
  41ee6f:	mov    dh,0xc3
  41ee71:	dec    edi
  41ee72:	inc    edx
  41ee73:	shl    BYTE PTR [eax],cl
  41ee75:	cmc    
  41ee76:	push   0x9c247f2c
  41ee7b:	inc    eax
  41ee7c:	inc    edx
  41ee7d:	cmp    DWORD PTR [ebx-0x4da50c1f],ebx
  41ee83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee84:	cmp    al,0x35
  41ee86:	cmp    DWORD PTR [edx+0x4c],edi
  41ee89:	cmp    DWORD PTR [ebp+0xe],esp
  41ee8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8d:	call   ebx
  41ee8f:	jbe    0x41ee33
  41ee91:	sbb    dl,BYTE PTR [ebp-0x4a1d756e]
  41ee97:	pop    ecx
  41ee98:	and    ebp,DWORD PTR [edx-0x7a13fc42]
  41ee9e:	push   ds
  41ee9f:	sub    bl,BYTE PTR [ecx-0x3d]
  41eea2:	jae    0x41eef1
  41eea4:	(bad)  
  41eea5:	sub    al,0x8d
  41eea7:	sbb    ecx,DWORD PTR [eax]
  41eea9:	cli    
  41eeaa:	in     eax,dx
  41eeab:	jl     0x41eeaf
  41eead:	xor    ebx,DWORD PTR [ebx-0x50]
  41eeb0:	add    al,0xb9
  41eeb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb3:	stos   BYTE PTR es:[edi],al
  41eeb4:	jne    0x41ee9e
  41eeb6:	lods   eax,DWORD PTR ds:[esi]
  41eeb7:	mov    ds:0x93798c3c,eax
  41eebc:	loop   0x41eeb3
  41eebe:	add    dh,dh
  41eec0:	std    
  41eec1:	xlat   BYTE PTR ds:[ebx]
  41eec2:	ins    BYTE PTR es:[edi],dx
  41eec3:	pop    edi
  41eec4:	addr16 pop ebp
  41eec6:	dec    edx
  41eec7:	ja     0x41ee73
  41eec9:	lods   eax,DWORD PTR ds:[esi]
  41eeca:	aaa    
  41eecb:	jno    0x41eebe
  41eecd:	pop    ss
  41eece:	lock addr16 pop ds
  41eed1:	jmp    0x9a92:0xd53865d8
  41eed8:	lds    esp,FWORD PTR [edx-0x66]
  41eedb:	xchg   ebp,eax
  41eedc:	ret    0x9108
  41eedf:	xchg   esp,eax
  41eee0:	sub    BYTE PTR [ebp+0x1b191065],cl
  41eee6:	push   ecx
  41eee7:	das    
  41eee8:	gs push ds
  41eeea:	test   DWORD PTR [eiz*1+0x6d91cef0],0xe5f3e53a
  41eef5:	in     eax,0xf7
  41eef7:	out    dx,al
  41eef8:	pop    ebp
  41eef9:	stos   WORD PTR es:[edi],ax
  41eefb:	dec    eax
  41eefc:	jbe    0x41eeb6
  41eefe:	(bad)  
  41eeff:	scas   al,BYTE PTR es:[edi]
  41ef00:	xchg   edi,eax
  41ef01:	mov    dl,0x6f
  41ef03:	sub    DWORD PTR [edi-0x43],esi
  41ef06:	xchg   bh,cl
  41ef08:	mov    ds:0x3542042e,al
  41ef0d:	mov    edx,0xd86a2b59
  41ef12:	xchg   dl,ah
  41ef14:	add    ebp,DWORD PTR [esi+0x1c8e6a42]
  41ef1a:	xchg   ebx,eax
  41ef1b:	adc    ebx,edx
  41ef1d:	clc    
  41ef1e:	test   eax,0xe1f24ca3
  41ef23:	arpl   WORD PTR [edx+ebp*4-0x5a7b9b16],sp
  41ef2a:	scas   eax,DWORD PTR es:[edi]
  41ef2b:	in     al,0xa7
  41ef2d:	mov    edi,0x9fccf2e1
  41ef32:	(bad)  
  41ef33:	mov    BYTE PTR [esi+0x3869ccf8],dl
  41ef39:	xchg   edi,eax
  41ef3a:	jl     0x41eeef
  41ef3c:	je     0x41ef2f
  41ef3e:	outs   dx,BYTE PTR ds:[esi]
  41ef3f:	stos   BYTE PTR es:[edi],al
  41ef40:	(bad)  
  41ef41:	lock hlt 
  41ef43:	jb     0x41ef2d
  41ef45:	aaa    
  41ef46:	out    dx,eax
  41ef47:	adc    al,0x47
  41ef49:	dec    eax
  41ef4a:	mov    esp,0x8f96b75b
  41ef4f:	fnsetpm(287 only) 
  41ef51:	test   BYTE PTR [ecx+0x2c],bh
  41ef54:	clc    
  41ef55:	and    cl,BYTE PTR [ecx]
  41ef57:	cmp    cl,BYTE PTR [esi+0x616ebdbe]
  41ef5d:	call   0xd0eaf85a
  41ef62:	icebp  
  41ef63:	das    
  41ef64:	sub    DWORD PTR ds:0x85c3,edx
  41ef69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef6a:	fist   DWORD PTR [ebp-0x2d]
  41ef6d:	mov    esi,0x3c34e30a
  41ef72:	loopne 0x41ef1b
  41ef74:	ret    
  41ef75:	out    dx,al
  41ef76:	pop    eax
  41ef77:	jge    0x41ef5a
  41ef79:	mov    bl,0xda
  41ef7b:	and    eax,0x1f786ace
  41ef80:	clc    
  41ef81:	dec    esi
  41ef82:	jge    0x41ef59
  41ef84:	int    0x4f
  41ef86:	out    dx,eax
  41ef87:	repz loop 0x41efbe
  41ef8a:	mov    cl,0xc0
  41ef8c:	mov    al,ds:0xfd7efc5
  41ef91:	cmp    eax,0x451f0211
  41ef96:	xlat   BYTE PTR ds:[ebx]
  41ef97:	imul   edx,esi,0xfffffff6
  41ef9a:	ror    DWORD PTR [eax-0x588fbd9a],cl
  41efa0:	add    bl,BYTE PTR [edi]
  41efa2:	xchg   edi,eax
  41efa3:	xchg   ecx,eax
  41efa4:	(bad)  
  41efa6:	pop    ss
  41efa7:	clc    
  41efa8:	xor    eax,DWORD PTR [eax]
  41efaa:	rcl    DWORD PTR [esp+edx*1+0x7943a8ab],1
  41efb1:	xchg   edi,eax
  41efb2:	aas    
  41efb3:	sbb    eax,0xdf4e4211
  41efb8:	scas   eax,DWORD PTR es:[edi]
  41efb9:	rol    DWORD PTR [edi+0x3d],0xf0
  41efbd:	aaa    
  41efbe:	and    dh,BYTE PTR [esi-0x52]
  41efc1:	mov    ss,WORD PTR [eax+0x54]
  41efc4:	sbb    eax,0x1917764a
  41efc9:	jbe    0x41efcf
  41efcb:	sbb    dl,BYTE PTR [ecx+0x46c3496b]
  41efd1:	jnp    0x41efc6
  41efd3:	sub    BYTE PTR [ebp-0x340c4bdb],ch
  41efd9:	retf   0x71c4
  41efdc:	add    BYTE PTR [ebp+0x38a6869c],dh
  41efe2:	xlat   BYTE PTR ds:[ebx]
  41efe3:	sbb    bl,bh
  41efe5:	out    0x89,eax
  41efe7:	push   edi
  41efe8:	adc    BYTE PTR [eax],0xf1
  41efeb:	push   0xffffffd2
  41efed:	ins    DWORD PTR es:[edi],dx
  41efee:	je     0x41f043
  41eff0:	mov    al,ds:0xccd986a5
  41eff5:	sbb    edi,DWORD PTR [ebx+0x4a]
  41eff8:	mov    eax,ds:0xc97b534d
  41effd:	or     esp,DWORD PTR [ecx]
  41efff:	add    al,0xfe
  41f001:	push   0x12e4840f
  41f006:	or     BYTE PTR [ecx-0x66657ad4],ch
  41f00c:	sbb    ch,ah
  41f00e:	mov    ds:0x7d387661,al
  41f013:	fistp  WORD PTR ds:0xd7db7a10
  41f019:	pop    ebp
  41f01a:	icebp  
  41f01b:	dec    ecx
  41f01c:	mov    bl,0xb3
  41f01e:	icebp  
  41f01f:	and    eax,0xe7ef9b76
  41f024:	hlt    
  41f025:	adc    eax,0xa7bff1e5
  41f02a:	test   al,0x8c
  41f02c:	and    ebp,edx
  41f02e:	ret    0xa702
  41f031:	mov    esp,0xa65d3961
  41f036:	fld    QWORD PTR [ecx]
  41f038:	inc    esp
  41f039:	jne    0x41efd2
  41f03b:	stos   DWORD PTR es:[edi],eax
  41f03c:	lods   al,BYTE PTR ds:[esi]
  41f03d:	mov    edi,0x6b0a8fdd
  41f042:	stos   DWORD PTR es:[edi],eax
  41f043:	jne    0x41f031
  41f045:	jns    0x41efea
  41f047:	adc    al,0x2
  41f049:	dec    edi
  41f04a:	jmp    0x9811b884
  41f04f:	add    BYTE PTR [esi],cl
  41f051:	adc    ax,0x71fd
  41f055:	dec    ecx
  41f056:	scas   al,BYTE PTR es:[edi]
  41f057:	or     eax,0x6739bef
  41f05c:	jno    0x41f021
  41f05e:	nop
  41f05f:	dec    esi
  41f060:	pushf  
  41f061:	inc    ebp
  41f062:	lods   al,BYTE PTR ds:[esi]
  41f063:	inc    eax
  41f064:	sub    ah,BYTE PTR [edx]
  41f066:	jmp    0x41f0a1
  41f068:	and    al,ch
  41f06a:	mov    ebx,0xfc861653
  41f06f:	icebp  
  41f070:	jecxz  0x41f051
  41f072:	pop    ebp
  41f073:	jo     0x41f019
  41f075:	lock add bh,0xb8
  41f079:	jae    0x41f075
  41f07b:	in     al,dx
  41f07c:	mov    BYTE PTR [eax+0x3c],0x47
  41f080:	push   eax
  41f081:	cdq    
  41f082:	sub    eax,0x23711a44
  41f087:	and    edi,DWORD PTR [ebp-0x6c]
  41f08a:	mov    edi,fs
  41f08c:	push   edx
  41f08d:	in     eax,0xb2
  41f08f:	inc    esp
  41f090:	dec    esi
  41f091:	xlat   BYTE PTR ds:[ebx]
  41f092:	jecxz  0x41f06f
  41f094:	add    esi,ebx
  41f096:	mov    ch,0x30
  41f098:	push   ss
  41f099:	rcl    edx,cl
  41f09b:	jo     0x41f072
  41f09d:	fs mov ebx,0x6047de23
  41f0a3:	inc    ecx
  41f0a4:	add    ah,BYTE PTR [eax-0x72]
  41f0a7:	push   ecx
  41f0a8:	sbb    BYTE PTR [edx+0x2020648],ah
  41f0ae:	and    bl,BYTE PTR [ecx]
  41f0b0:	push   0xffffffbc
  41f0b2:	xchg   edx,eax
  41f0b3:	or     DWORD PTR [ecx+0x35c30f97],edi
  41f0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ba:	ins    DWORD PTR es:[edi],dx
  41f0bb:	pop    eax
  41f0bc:	cwde   
  41f0bd:	cmp    DWORD PTR [edx],ebp
  41f0bf:	xchg   edx,eax
  41f0c0:	fldl2e 
  41f0c2:	push   eax
  41f0c3:	add    esp,edx
  41f0c5:	push   eax
  41f0c6:	xchg   esp,eax
  41f0c7:	pop    ss
  41f0c8:	sbb    DWORD PTR [edi+0x3a],ebp
  41f0cb:	push   esi
  41f0cc:	pop    esi
  41f0cd:	es inc edi
  41f0cf:	adc    al,0x15
  41f0d1:	cs je  0x41f06e
  41f0d4:	xchg   edi,eax
  41f0d5:	scas   al,BYTE PTR es:[edi]
  41f0d6:	test   DWORD PTR [edi-0x4a0d87e4],0x50c2dc0d
  41f0e0:	mov    ah,0x6e
  41f0e2:	aas    
  41f0e3:	jmp    0x8463:0x24db43b8
  41f0ea:	xor    al,0xd5
  41f0ec:	ror    DWORD PTR [ebp-0x5e1603a6],0x6b
  41f0f3:	cs mov ebx,?
  41f0f6:	push   esi
  41f0f7:	mov    fs,WORD PTR [edi]
  41f0f9:	jno    0x41f0c6
  41f0fb:	push   ecx
  41f0fc:	(bad)  
  41f0fd:	fcmovu st,st(1)
  41f0ff:	not    DWORD PTR [ecx]
  41f101:	bound  ebx,QWORD PTR [edi-0x68ae4363]
  41f107:	add    eax,0x54ab7e82
  41f10c:	cmp    BYTE PTR [edi-0x43],bl
  41f10f:	ret    0xd6ec
  41f112:	mov    ecx,cs
  41f114:	pushf  
  41f115:	mov    ss,WORD PTR [edx-0x6b]
  41f118:	imul   esi,DWORD PTR [esp+edi*1],0xffffffc3
  41f11c:	jp     0x41f0d0
  41f11e:	clc    
  41f11f:	add    esi,DWORD PTR [edi]
  41f121:	cdq    
  41f122:	ror    cl,1
  41f124:	push   cs
  41f125:	or     bh,ch
  41f127:	je     0x41f17b
  41f129:	ins    BYTE PTR es:[edi],dx
  41f12a:	push   edx
  41f12b:	repz jne 0x41f121
  41f12e:	jbe    0x41f181
  41f130:	je     0x41f15f
  41f132:	shl    DWORD PTR [edi],0x7b
  41f135:	cwde   
  41f136:	mov    ebp,0xd8f18868
  41f13b:	jecxz  0x41f13a
  41f13d:	jbe    0x41f182
  41f13f:	jae    0x41f15f
  41f141:	(bad)  
  41f142:	daa    
  41f143:	sub    BYTE PTR [ebx+ebp*4-0x618f14e8],0xc7
  41f14b:	out    dx,al
  41f14c:	icebp  
  41f14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f14e:	xor    eax,0xae2d9c8f
  41f153:	and    DWORD PTR [ebx],ebx
  41f155:	mov    ecx,DWORD PTR [edx-0xc1a08d3]
  41f15b:	stos   BYTE PTR es:[edi],al
  41f15c:	inc    eax
  41f15d:	(bad)  
  41f15e:	mov    ds:0xad2f15e7,eax
  41f163:	cdq    
  41f164:	mov    eax,ds:0x2cc34304
  41f169:	jmp    0x41f15b
  41f16b:	fld    QWORD PTR ds:0x269ad663
  41f171:	mov    bl,0x5d
  41f173:	nop
  41f174:	sub    edx,DWORD PTR [ecx]
  41f176:	jl     0x41f189
  41f178:	fmul   DWORD PTR [esi]
  41f17a:	jmp    0x56c9158d
  41f17f:	push   0x377e6dfa
  41f184:	push   0xffffffec
  41f186:	push   cs
  41f187:	shl    DWORD PTR [bx+di-0xb],0x90
  41f18c:	or     al,0x3
  41f18e:	nop
  41f18f:	jle    0x41f1ef
  41f191:	mov    cl,0xe4
  41f193:	div    ch
  41f195:	lea    eax,[ebx+0x19]
  41f198:	das    
  41f199:	sub    DWORD PTR [ebp-0x4a],edi
  41f19c:	nop
  41f19d:	sub    ecx,ebp
  41f19f:	cmp    eax,0xa454e928
  41f1a4:	add    BYTE PTR [ebx],cl
  41f1a6:	cld    
  41f1a7:	(bad)  
  41f1a8:	dec    edx
  41f1a9:	sti    
  41f1aa:	xchg   esi,eax
  41f1ab:	and    al,BYTE PTR [eax-0x70]
  41f1ae:	cwde   
  41f1af:	loope  0x41f13f
  41f1b1:	inc    edx
  41f1b2:	mov    ah,0x30
  41f1b4:	sub    eax,0xa6b5ad6d
  41f1b9:	das    
  41f1ba:	lock push es
  41f1bc:	ret    
  41f1bd:	add    al,0x51
  41f1bf:	jmp    0xbaae:0x5be91aaa
  41f1c6:	dec    edi
  41f1c7:	mov    ?,WORD PTR [edi]
  41f1c9:	mov    ds:0x1086b3cb,eax
  41f1ce:	pop    ecx
  41f1cf:	inc    eax
  41f1d0:	in     eax,dx
  41f1d1:	out    dx,al
  41f1d2:	icebp  
  41f1d3:	add    eax,0x78d1245b
  41f1d8:	xchg   al,al
  41f1da:	fnstenv [edx-0x5f37b62a]
  41f1e0:	and    ebx,esp
  41f1e2:	cdq    
  41f1e3:	std    
  41f1e4:	adc    DWORD PTR [eax-0x2fddc873],esi
  41f1ea:	fnsave [edi]
  41f1ec:	pop    ebx
  41f1ed:	aas    
  41f1ee:	xor    BYTE PTR [edi],bh
  41f1f0:	jmp    0x6940bb37
  41f1f5:	adc    edx,DWORD PTR [esi]
  41f1f7:	clc    
  41f1f8:	rcl    BYTE PTR [ecx-0x28e0622c],cl
  41f1fe:	lea    eax,[ebp+0x623e971a]
  41f204:	push   ebx
  41f205:	(bad)
  41f209:	pop    ecx
  41f20a:	jo     0x41f1bc
  41f20c:	jb     0x41f218
  41f20e:	lods   eax,DWORD PTR ds:[esi]
  41f20f:	dec    esp
  41f210:	sbb    BYTE PTR [ebp-0x5e],0xe9
  41f214:	call   0x6ee3:0x72d7e460
  41f21b:	and    al,0x3a
  41f21d:	out    0x72,eax
  41f21f:	cmp    bl,BYTE PTR [ecx-0x5f]
  41f222:	cld    
  41f223:	icebp  
  41f224:	imul   edx,DWORD PTR [edi+0x4fa22332],0x35
  41f22b:	mov    ebx,0xa1331b8a
  41f230:	stc    
  41f231:	aaa    
  41f232:	pop    ss
  41f233:	jle    0x41f26c
  41f235:	xor    cl,BYTE PTR [edi+0x2d]
  41f238:	fcomp  QWORD PTR [eax]
  41f23a:	add    al,BYTE PTR [ecx]
  41f23c:	sub    DWORD PTR [eax],0xe6b0d5a1
  41f242:	pop    bp
  41f244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f245:	aad    0x19
  41f247:	pop    ecx
  41f248:	pop    ebp
  41f249:	sub    BYTE PTR [edx-0x51],0xd9
  41f24d:	xchg   ebp,eax
  41f24e:	adc    dh,ch
  41f250:	cmp    BYTE PTR [eax],dl
  41f252:	pop    esi
  41f253:	and    dh,BYTE PTR [edx]
  41f255:	xchg   ebp,eax
  41f256:	mov    edi,0x3609608e
  41f25b:	popa   
  41f25c:	push   0x12
  41f25e:	dec    eax
  41f25f:	xor    eax,DWORD PTR [eax]
  41f261:	mov    BYTE PTR [esi-0x47d88382],dl
  41f267:	test   BYTE PTR [ecx-0x81efcd4],cl
  41f26d:	add    al,0xfb
  41f26f:	aas    
  41f270:	or     al,0x97
  41f272:	add    BYTE PTR ds:0xea6fb072,0xda
  41f279:	loop   0x41f1fc
  41f27b:	rol    DWORD PTR fs:0x65d8556e,0x12
  41f283:	out    dx,al
  41f284:	mov    dh,0x18
  41f286:	call   0xcdad:0x6444714e
  41f28d:	out    0x65,al
  41f28f:	and    DWORD PTR [edx+0xf],esp
  41f292:	shl    BYTE PTR [ebx+0x6e2c48e6],cl
  41f298:	rol    ebp,0x5b
  41f29b:	sbb    eax,DWORD PTR [ecx+0x8]
  41f29e:	push   cs
  41f29f:	(bad)  
  41f2a1:	pop    edx
  41f2a2:	xchg   ebp,eax
  41f2a3:	pop    esp
  41f2a4:	cmp    al,0xa
  41f2a6:	mov    ah,0x12
  41f2a8:	jp     0x41f243
  41f2aa:	popa   
  41f2ab:	xchg   ebp,eax
  41f2ac:	xchg   ecx,eax
  41f2ad:	pop    esi
  41f2ae:	lock rcr BYTE PTR [edi+0x6d04cd40],cl
  41f2b5:	rol    DWORD PTR [ebp+0x35],1
  41f2b8:	xor    DWORD PTR [ebp-0x6a71934b],ecx
  41f2be:	scas   eax,DWORD PTR es:[edi]
  41f2bf:	cmp    eax,0xa8ad17c5
  41f2c4:	inc    edx
  41f2c5:	xor    al,0xc7
  41f2c7:	and    al,0x60
  41f2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2ca:	push   eax
  41f2cb:	adc    ch,bh
  41f2cd:	ret    0x5267
  41f2d0:	adc    dl,bl
  41f2d2:	enter  0xf16b,0xf1
  41f2d6:	sahf   
  41f2d7:	push   edi
  41f2d8:	jo     0x41f26d
  41f2da:	pushf  
  41f2db:	cs jl  0x41f354
  41f2de:	call   0x56b4:0xa74c9f39
  41f2e5:	push   es
  41f2e6:	jle    0x41f288
  41f2e8:	dec    eax
  41f2e9:	push   esp
  41f2ea:	bound  ebx,QWORD PTR [edi-0x4c]
  41f2ed:	adc    bh,BYTE PTR [ecx-0xf2a8a20]
  41f2f3:	ds cld 
  41f2f5:	cmp    DWORD PTR [edx+0x5c],eax
  41f2f8:	lea    ebp,[eax-0x368e2bad]
  41f2fe:	or     eax,DWORD PTR [ebx+0x65]
  41f301:	aad    0x17
  41f303:	jmp    0x41f34f
  41f305:	in     eax,0xd2
  41f307:	sub    al,0xa5
  41f309:	jne    0x41f344
  41f30b:	test   al,0xbd
  41f30d:	mov    dl,0x6f
  41f30f:	mov    gs,ecx
  41f311:	jp     0x41f32f
  41f313:	ret    
  41f314:	loope  0x41f2b9
  41f316:	imul   ebp,DWORD PTR [ecx],0xffffffa1
  41f319:	xor    eax,0xf2d0e162
  41f31e:	cmp    edx,0x10
  41f321:	(bad)  
  41f322:	cwde   
  41f323:	test   BYTE PTR [ebx+0x61733fda],ah
  41f329:	jl     0x41f367
  41f32b:	mov    ecx,0x427b0d82
  41f330:	jle    0x41f329
  41f332:	and    eax,0x4be27b28
  41f337:	adc    ebx,edx
  41f339:	cmc    
  41f33a:	scas   al,BYTE PTR es:[edi]
  41f33b:	(bad)  
  41f33d:	pop    ds
  41f33e:	jle    0x41f2fb
  41f340:	mov    esi,0xfe482aec
  41f345:	sub    ebx,DWORD PTR [esi-0x907b571]
  41f34b:	fsub   st,st(4)
  41f34d:	sub    BYTE PTR [ecx],ah
  41f34f:	pop    esi
  41f350:	mov    ch,0x37
  41f352:	dec    esi
  41f353:	jbe    0x41f308
  41f355:	jns    0x41f35b
  41f357:	lahf   
  41f358:	hlt    
  41f359:	aas    
  41f35a:	xor    ebp,DWORD PTR [eax+0x2eea183a]
  41f360:	fsub   DWORD PTR [edi+0x307ba04f]
  41f366:	xor    ecx,DWORD PTR [eax]
  41f368:	test   DWORD PTR [ebx],edx
  41f36a:	dec    eax
  41f36b:	inc    ebp
  41f36c:	inc    ecx
  41f36d:	in     eax,0xe6
  41f36f:	or     eax,0x5de2ffb1
  41f374:	out    0x4c,eax
  41f376:	fwait
  41f377:	out    0x2e,al
  41f379:	jne    0x41f38a
  41f37b:	inc    ebx
  41f37c:	or     eax,0x179dd24d
  41f381:	sbb    al,0x37
  41f383:	push   edi
  41f384:	retf   0x8636
  41f387:	and    cl,ch
  41f389:	mov    eax,ds:0x4fff4541
  41f38e:	and    eax,0xb94a5190
  41f393:	dec    ebp
  41f394:	xor    DWORD PTR [esi+eiz*2-0x40e5f5e2],esi
  41f39b:	jmp    0xbc91:0x271ad297
  41f3a2:	mov    cl,0x40
  41f3a4:	xor    edi,DWORD PTR [ebp+eax*2-0x55]
  41f3a8:	(bad)
  41f3ab:	sub    ah,BYTE PTR [ebx+0x52]
  41f3ae:	dec    ebx
  41f3af:	in     al,dx
  41f3b0:	iret   
  41f3b1:	xchg   edx,eax
  41f3b2:	scas   eax,DWORD PTR es:[edi]
  41f3b3:	fcmovnu st,st(3)
  41f3b5:	sub    BYTE PTR [edi+0x5b09a079],dl
  41f3bb:	dec    esi
  41f3bc:	cmp    ecx,DWORD PTR [eax-0x2e605237]
  41f3c2:	jne    0x41f3e7
  41f3c4:	mov    edx,0xad7f1a82
  41f3c9:	rcr    BYTE PTR [esi+0x62d16dae],0x84
  41f3d0:	loopne 0x41f3ae
  41f3d2:	cs cmp al,0xf6
  41f3d5:	repz enter 0x933b,0x8b
  41f3da:	add    DWORD PTR [edx],eax
  41f3dc:	adc    ecx,eax
  41f3de:	push   ebp
  41f3df:	xor    BYTE PTR [edi+0x1ed6cb30],bh
  41f3e5:	sbb    eax,0x75cbeaad
  41f3ea:	(bad)  
  41f3eb:	iret   
  41f3ec:	adc    DWORD PTR [ebx-0x41356a2e],eax
  41f3f2:	inc    ebp
  41f3f3:	sub    esi,esp
  41f3f5:	adc    cl,0x1e
  41f3f8:	gs jne 0x41f3c1
  41f3fb:	fld    DWORD PTR ds:0x361953be
  41f401:	out    dx,al
  41f402:	cli    
  41f403:	pushf  
  41f404:	mov    ss:0x215d992e,eax
  41f40a:	sti    
  41f40b:	call   0x84af456f
  41f410:	imul   esi,DWORD PTR [edi-0x7a0945e6],0x2c
  41f417:	sub    dh,bl
  41f419:	and    ch,BYTE PTR [esi]
  41f41b:	bound  esp,QWORD PTR [edi+ecx*2+0x5c9eb026]
  41f422:	dec    eax
  41f423:	in     al,dx
  41f424:	jle    0x41f3de
  41f426:	(bad)  
  41f427:	es push eax
  41f429:	(bad)  
  41f42a:	scas   eax,DWORD PTR es:[edi]
  41f42b:	scas   al,BYTE PTR es:[edi]
  41f42c:	fadd   DWORD PTR ds:0x4a5f9c29
  41f432:	stos   BYTE PTR es:[edi],al
  41f433:	mov    ds:0x59865ba9,al
  41f438:	call   0xce0ae058
  41f43d:	xor    BYTE PTR [ebp+eiz*8-0x59b280fd],dh
  41f444:	sub    ecx,DWORD PTR [ebx-0x398ebc5]
  41f44a:	jmp    0x6cad:0xa5253549
  41f451:	lods   eax,DWORD PTR es:[esi]
  41f453:	dec    esp
  41f454:	pop    edx
  41f455:	adc    al,ch
  41f457:	mov    bl,0xfb
  41f459:	jmp    0x41f3ea
  41f45b:	not    dh
  41f45d:	lods   eax,DWORD PTR ds:[esi]
  41f45e:	popf   
  41f45f:	test   DWORD PTR [esi],ebp
  41f461:	cmp    edx,esi
  41f463:	push   esi
  41f464:	xchg   edx,eax
  41f465:	lea    esp,[eax+esi*4+0x5]
  41f469:	mov    DWORD PTR [esi-0x34],esi
  41f46c:	mov    esi,0x8bb91352
  41f471:	jmp    0x1bed2c30
  41f476:	mov    ah,0xcc
  41f478:	into   
  41f479:	and    DWORD PTR [edx+0x5a5507d0],ebx
  41f47f:	and    BYTE PTR ds:0x3a99b0f4,dh
  41f485:	inc    esp
  41f486:	out    0x79,eax
  41f488:	inc    eax
  41f489:	jg     0x41f4e6
  41f48b:	enter  0x6b7f,0x94
  41f48f:	mov    al,0x78
  41f491:	or     ebx,DWORD PTR [ecx-0x34]
  41f494:	out    0x89,al
  41f496:	jle    0x41f426
  41f498:	or     DWORD PTR [edx+0x37],edi
  41f49b:	dec    edx
  41f49c:	push   edi
  41f49d:	jge    0x41f4d4
  41f49f:	fsubr  DWORD PTR [eax+0x3bd52c6e]
  41f4a5:	mov    ds:0xf6ee03e6,eax
  41f4aa:	and    eax,esi
  41f4ac:	and    eax,0x9ca7cc07
  41f4b1:	pop    ss
  41f4b2:	(bad)  
  41f4b3:	xor    eax,0xaaba8de0
  41f4b8:	retf   0x872a
  41f4bb:	push   edx
  41f4bc:	popf   
  41f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4be:	xchg   esi,edx
  41f4c0:	jmp    0xb60d:0x9b585fa6
  41f4c7:	jne    0x41f509
  41f4c9:	xchg   esp,eax
  41f4ca:	dec    ecx
  41f4cb:	push   ecx
  41f4cc:	scas   al,BYTE PTR es:[edi]
  41f4cd:	aad    0x1a
  41f4cf:	cmc    
  41f4d0:	lods   al,BYTE PTR ds:[esi]
  41f4d1:	repz jle 0x41f4c6
  41f4d4:	or     DWORD PTR [eax],edi
  41f4d6:	push   ebx
  41f4d7:	sbb    esi,DWORD PTR [esi+0x56e3a49]
  41f4dd:	xchg   ebx,eax
  41f4de:	cmp    eax,0xb2ba03b
  41f4e3:	aaa    
  41f4e4:	popf   
  41f4e5:	(bad)  [edx+esi*2+0x13]
  41f4e9:	push   ss
  41f4ea:	dec    ebp
  41f4eb:	sub    ebx,edx
  41f4ed:	jecxz  0x41f4ce
  41f4ef:	mov    bl,0x7a
  41f4f1:	pop    esi
  41f4f2:	fadd   QWORD PTR [ecx+0x16ca114d]
  41f4f8:	inc    ebx
  41f4f9:	fmul   QWORD PTR [esi+ebx*4+0x7fb04263]
  41f500:	jmp    FWORD PTR [ebx-0x3e]
  41f503:	test   al,0x30
  41f505:	adc    dl,BYTE PTR [eax]
  41f507:	in     eax,0x37
  41f509:	mov    al,ds:0x73e07087
  41f50e:	and    esi,ebp
  41f510:	call   0xb9206301
  41f515:	xor    eax,0x1f15f780
  41f51a:	loopne 0x41f571
  41f51c:	dec    edx
  41f51d:	in     al,0x5a
  41f51f:	ret    0xc2e6
  41f522:	test   BYTE PTR [edi-0x73],ch
  41f525:	nop
  41f526:	sbb    eax,0xb8fdbf6f
  41f52b:	fst    DWORD PTR ds:0xb36ee2b7
  41f531:	cmp    eax,0xb446e7c7
  41f536:	sbb    DWORD PTR [eax+eax*1+0x5b64b901],esp
  41f53d:	or     eax,DWORD PTR [ebx-0x72]
  41f540:	mov    ds:0x2165e783,eax
  41f545:	pop    edx
  41f546:	loop   0x41f538
  41f548:	mov    dl,0x4b
  41f54a:	inc    edx
  41f54b:	cmp    BYTE PTR [edx+0x55],ch
  41f54e:	ja     0x41f51c
  41f550:	sahf   
  41f551:	push   esp
  41f552:	fmul   DWORD PTR [edx+0x50c17ea4]
  41f558:	add    eax,0x408138cb
  41f55d:	mov    eax,DWORD PTR [ecx+ebx*1]
  41f560:	dec    eax
  41f561:	mov    cs,WORD PTR [ecx]
  41f563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f564:	test   eax,0x75192e15
  41f569:	stc    
  41f56a:	pop    ds
  41f56b:	mov    eax,ds:0x4719c6cf
  41f570:	hlt    
  41f571:	mov    DWORD PTR [edx-0x1a1f9bde],esi
  41f577:	push   edi
  41f578:	fcomip st,st(6)
  41f57a:	dec    ebp
  41f57b:	out    0xb3,al
  41f57d:	push   eax
  41f57e:	in     al,dx
  41f57f:	popa   
  41f580:	enter  0xd87f,0xb3
  41f584:	cs cli 
  41f586:	sbb    al,0x39
  41f588:	push   edi
  41f589:	push   es
  41f58a:	gs cmp al,0x64
  41f58d:	fstp   TBYTE PTR [esp+esi*4-0x2d]
  41f591:	inc    eax
  41f592:	sti    
  41f593:	lock enter 0xa1e8,0x9e
  41f598:	shl    BYTE PTR [ebp-0x38],cl
  41f59b:	es dec edx
  41f59d:	ja     0x41f610
  41f59f:	clc    
  41f5a0:	pop    ds
  41f5a1:	mov    ah,0xd
  41f5a3:	sub    eax,0x973d378a
  41f5a8:	mov    ds:0x32ac7969,eax
  41f5ad:	add    BYTE PTR [ecx-0x4e],al
  41f5b0:	lea    esp,[edi]
  41f5b2:	sub    esp,edx
  41f5b4:	mov    al,ds:0x8bc142b5
  41f5b9:	jno    0x41f5fe
  41f5bb:	lds    ebx,FWORD PTR [ecx]
  41f5bd:	jno    0x41f563
  41f5bf:	cdq    
  41f5c0:	and    al,0xfc
  41f5c2:	enter  0x57b6,0x37
  41f5c6:	sub    eax,0xb8f43b19
  41f5cb:	inc    edi
  41f5cc:	aaa    
  41f5cd:	pop    eax
  41f5ce:	and    ecx,DWORD PTR [ebp+0x62]
  41f5d1:	ror    DWORD PTR [edi+0x23],0x3e
  41f5d5:	mov    al,ds:0x8180635c
  41f5da:	test   eax,0x68d0e2e7
  41f5df:	fist   DWORD PTR [edx+eax*2+0x24]
  41f5e3:	jns    0x41f609
  41f5e5:	xlat   BYTE PTR ds:[ebx]
  41f5e6:	or     al,0xc2
  41f5e8:	mov    ecx,0x8c5e8a97
  41f5ed:	hlt    
  41f5ee:	fistp  WORD PTR [eax+edx*2]
  41f5f1:	mov    BYTE PTR [ecx],dl
  41f5f3:	daa    
  41f5f4:	pshufw mm2,QWORD PTR [edi-0x78d375b3],0x37
  41f5fc:	sbb    dl,dh
  41f5fe:	xchg   DWORD PTR [esi+0x79],ecx
  41f601:	nop
  41f602:	inc    edi
  41f603:	cmp    esp,ebp
  41f605:	xor    al,0xe7
  41f607:	dec    eax
  41f608:	push   cs
  41f609:	enter  0xc27a,0xf6
  41f60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f60e:	rcl    BYTE PTR [edx],0x71
  41f611:	je     0x41f5f7
  41f613:	popf   
  41f614:	je     0x41f66b
  41f616:	pop    eax
  41f617:	arpl   WORD PTR [ebx],ax
  41f619:	retfw  
  41f61b:	fist   WORD PTR [esi]
  41f61d:	aaa    
  41f61e:	stos   BYTE PTR es:[edi],al
  41f61f:	dec    esi
  41f620:	add    al,0x12
  41f622:	jecxz  0x41f699
  41f624:	xor    edi,ebx
  41f626:	push   eax
  41f627:	xchg   bl,cl
  41f629:	cmp    ebp,eax
  41f62b:	mov    WORD PTR [ecx+0x5c8389dd],?
  41f631:	nop
  41f632:	loope  0x41f5bb
  41f634:	pop    es
  41f635:	jno    0x41f68d
  41f637:	push   esp
  41f638:	or     eax,0x2e913208
  41f63d:	sub    eax,0x53fb688
  41f642:	fwait
  41f643:	sbb    al,0xc
  41f645:	jae    0x41f671
  41f647:	add    BYTE PTR [edx-0x325566f4],al
  41f64d:	push   eax
  41f64e:	mov    edi,0xcb9f8522
  41f653:	inc    edx
  41f654:	lea    ecx,[ebp+ebx*2+0x43cae72]
  41f65b:	in     eax,dx
  41f65c:	adc    al,BYTE PTR [ebp+0x22367f38]
  41f662:	shr    dh,0xf
  41f665:	(bad)  
  41f666:	int    0x2b
  41f668:	test   esi,ecx
  41f66a:	cmp    al,0x64
  41f66c:	cmp    WORD PTR [edi-0x314bbad1],0xfedd
  41f675:	adc    DWORD PTR [ebx],edi
  41f677:	lods   eax,DWORD PTR ds:[esi]
  41f678:	ins    DWORD PTR es:[edi],dx
  41f679:	adc    BYTE PTR [ebx+edx*2-0x605b0806],bl
  41f680:	daa    
  41f681:	mov    al,0x48
  41f683:	fld    TBYTE PTR [ecx+0x261fa317]
  41f689:	dec    ecx
  41f68a:	mov    eax,0x3bc0479
  41f68f:	stc    
  41f690:	rcr    BYTE PTR [ecx],0x33
  41f693:	sbb    BYTE PTR [ebx],ah
  41f695:	lock mov cl,0x9
  41f698:	out    dx,eax
  41f699:	sbb    BYTE PTR [esi],0x5b
  41f69c:	jmp    DWORD PTR [eax]
  41f69e:	pop    eax
  41f69f:	jns    0x41f70d
  41f6a1:	retf   
  41f6a2:	arpl   WORD PTR ds:0x18fe71db,sp
  41f6a8:	lahf   
  41f6a9:	ss mov bl,0xbe
  41f6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ad:	mov    ds:0x6d22cb6b,eax
  41f6b2:	or     BYTE PTR [edx+esi*1],ah
  41f6b5:	scas   al,BYTE PTR es:[edi]
  41f6b6:	sbb    ecx,DWORD PTR [eiz*1+0x78760b49]
  41f6bd:	jp     0x41f6f9
  41f6bf:	mov    bl,0xa8
  41f6c1:	(bad)  
  41f6c2:	push   cs
  41f6c3:	fwait
  41f6c4:	mov    ch,0xf4
  41f6c6:	push   edi
  41f6c7:	push   ebx
  41f6c8:	(bad)  [ecx+0x6aad9b33]
  41f6ce:	je     0x41f6d1
  41f6d0:	data16 lahf 
  41f6d2:	inc    ebp
  41f6d3:	cmp    BYTE PTR [ecx+esi*2-0x1f675842],ch
  41f6da:	add    al,0xb
  41f6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6dd:	add    edx,DWORD PTR [ebx]
  41f6df:	mov    al,0x88
  41f6e1:	ja     0x41f6fd
  41f6e3:	fistp  WORD PTR [edi+0x35fd7ca]
  41f6e9:	pusha  
  41f6ea:	adc    DWORD PTR [ebx],ebp
  41f6ec:	lea    esi,[esi+0x5b]
  41f6ef:	xor    ebx,DWORD PTR [esi-0x34]
  41f6f2:	adc    DWORD PTR [edi],ecx
  41f6f4:	xor    BYTE PTR [eax-0x67c68c3],cl
  41f6fa:	cmp    dh,bl
  41f6fc:	das    
  41f6fd:	xchg   BYTE PTR [edx+0x7b5d7bc],al
  41f703:	jle    0x41f6e3
  41f705:	jl     0x41f762
  41f707:	sbb    DWORD PTR cs:[edx-0xe],edx
  41f70b:	add    bl,BYTE PTR [ecx]
  41f70d:	sub    al,BYTE PTR [edi+0x53]
  41f710:	push   ecx
  41f711:	xchg   esi,eax
  41f712:	jb     0x41f6b7
  41f714:	(bad)  
  41f715:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41f717:	push   0x7ffe1d1d
  41f71c:	xchg   ecx,eax
  41f71d:	dec    esi
  41f71e:	in     al,0xac
  41f720:	pop    es
  41f721:	mov    ds:0x521e2054,eax
  41f726:	jmp    0xaeb56b25
  41f72b:	sti    
  41f72c:	rcr    BYTE PTR [eax-0x248b1699],0x98
  41f733:	idiv   DWORD PTR [ebp+0x41]
  41f736:	mov    WORD PTR ds:0x2a852d43,es
  41f73c:	aam    0xdc
  41f73e:	push   esp
  41f73f:	addr16 push edi
  41f741:	(bad)  
  41f742:	in     eax,0xd6
  41f744:	mov    esi,0x159e88fd
  41f749:	pop    es
  41f74a:	add    esp,DWORD PTR [eax]
  41f74c:	xchg   esi,eax
  41f74d:	jl     0x41f796
  41f74f:	clc    
  41f750:	outs   dx,BYTE PTR ds:[esi]
  41f751:	mov    eax,0x64effacc
  41f756:	das    
  41f757:	cld    
  41f758:	loope  0x41f74f
  41f75a:	retf   0x4f25
  41f75d:	xchg   BYTE PTR [ebx+0xd30bf41],cl
  41f763:	and    edi,edx
  41f765:	or     ch,dl
  41f767:	mov    ecx,0x6009f67c
  41f76c:	aas    
  41f76d:	pop    ebp
  41f76e:	xchg   ebx,eax
  41f76f:	in     al,dx
  41f770:	shl    DWORD PTR [ebx],1
  41f772:	jne    0x41f788
  41f774:	xchg   ebx,eax
  41f775:	add    BYTE PTR [ecx+0x345289ee],ch
  41f77b:	pusha  
  41f77c:	mov    ds:0x97d3f6c7,eax
  41f781:	pop    ss
  41f782:	xchg   edi,eax
  41f783:	fmulp  st(5),st
  41f785:	and    al,0x6d
  41f787:	int    0x4
  41f789:	retf   
  41f78a:	mov    DWORD PTR [edi+esi*8+0x3a],0xe435503e
  41f792:	pop    edi
  41f793:	int    0xfe
  41f795:	jmp    FWORD PTR es:[ecx-0x22]
  41f799:	mov    ebx,0x7f468891
  41f79e:	mov    esp,0xb7a5156d
  41f7a3:	pextrw ecx,(bad),0xc5
  41f7a5:	or     edi,DWORD PTR [ebx]
  41f7a7:	mov    ah,0xc2
  41f7a9:	xchg   esi,eax
  41f7aa:	mov    eax,ds:0x386f768c
  41f7af:	inc    ebp
  41f7b0:	repnz xor edi,DWORD PTR [ebx+ecx*8-0x39]
  41f7b5:	xor    bl,BYTE PTR [edi+0x1a0ca260]
  41f7bb:	les    esp,FWORD PTR [eax+ecx*2]
  41f7be:	addr16 stc 
  41f7c0:	xor    BYTE PTR [ecx-0x4c9f3124],0xab
  41f7c7:	ror    al,0x3c
  41f7ca:	dec    esp
  41f7cb:	mov    ch,0x6d
  41f7cd:	cld    
  41f7ce:	int    0xd4
  41f7d0:	jle    0x41f7ff
  41f7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d3:	cmp    bh,BYTE PTR [eax+ecx*2-0x73]
  41f7d7:	sbb    dl,BYTE PTR [esi]
  41f7d9:	into   
  41f7da:	sub    dl,ah
  41f7dc:	aad    0x12
  41f7de:	test   DWORD PTR [eax+0x65],0x41059d72
  41f7e5:	ror    DWORD PTR [edi+0x777d72da],cl
  41f7eb:	fcomi  st,st(2)
  41f7ed:	inc    esi
  41f7ee:	push   edi
  41f7ef:	aas    
  41f7f0:	xor    DWORD PTR [edi+0x5bae381e],ebx
  41f7f6:	xchg   BYTE PTR [edx+0x76c13f39],cl
  41f7fc:	pop    edx
  41f7fd:	push   edx
  41f7fe:	mov    fs,ebx
  41f800:	js     0x41f7f1
  41f802:	sub    eax,DWORD PTR [ebp+0xb]
  41f805:	mov    bl,BYTE PTR [eax]
  41f807:	ret    
  41f808:	and    al,0x4c
  41f80a:	mov    WORD PTR [edi+0x389d24e3],?
  41f810:	fcmovnbe st,st(5)
  41f812:	inc    ecx
  41f813:	fldenv ds:0xe8c48475
  41f819:	pop    esi
  41f81a:	sub    BYTE PTR [edi],dh
  41f81c:	dec    ch
  41f81e:	mov    edi,0x72ae7e50
  41f823:	dec    edi
  41f824:	in     eax,dx
  41f825:	and    ecx,edx
  41f827:	cld    
  41f828:	sub    ebp,DWORD PTR [edi-0x1d2cd5ed]
  41f82e:	dec    edi
  41f82f:	fld    DWORD PTR [ecx]
  41f831:	stos   BYTE PTR es:[edi],al
  41f832:	mov    edi,0x2c107293
  41f837:	jns    0x41f89b
  41f839:	pop    esi
  41f83a:	mov    dl,0xe6
  41f83c:	mov    bl,0xb2
  41f83e:	pop    esi
  41f83f:	xchg   BYTE PTR [edi+esi*2-0x3c],bl
  41f843:	ds pop eax
  41f845:	sub    cl,BYTE PTR [ebp+0x18bfaab]
  41f84b:	scas   al,BYTE PTR es:[edi]
  41f84c:	ss aad 0xa3
  41f84f:	imul   edx,DWORD PTR [ebp-0x59],0x38628cd6
  41f856:	push   ds
  41f857:	sub    al,0x7e
  41f859:	or     ch,BYTE PTR ds:0xbb8ee165
  41f85f:	(bad)  
  41f860:	scas   al,BYTE PTR es:[edi]
  41f861:	sahf   
  41f862:	mov    esi,0xf71547b0
  41f867:	sbb    eax,0xb67a71cc
  41f86c:	mov    WORD PTR [ecx],ds
  41f86e:	jo     0x41f8c7
  41f870:	pop    edi
  41f872:	repnz xor DWORD PTR fs:[ecx],ebx
  41f876:	sahf   
  41f877:	jp     0x41f851
  41f879:	lahf   
  41f87a:	push   es
  41f87b:	jg     0x41f869
  41f87d:	xchg   esi,eax
  41f87e:	sbb    al,0xc3
  41f880:	jl     0x41f85b
  41f882:	jb     0x41f8b0
  41f884:	mov    ebp,0x14b50d82
  41f889:	jle    0x41f80f
  41f88b:	or     dl,BYTE PTR [ecx+0x21de6c19]
  41f891:	sub    BYTE PTR [edx+0x6f6a4d0d],0x65
  41f898:	mov    edx,0xa0233cc8
  41f89d:	(bad)
  41f8a0:	mov    cl,0x48
  41f8a2:	sbb    eax,0x3b020203
  41f8a7:	pop    ecx
  41f8a8:	cmc    
  41f8a9:	ins    DWORD PTR es:[edi],dx
  41f8aa:	popf   
  41f8ab:	fs pusha 
  41f8ad:	(bad)  
  41f8ae:	jne    0x41f8b9
  41f8b0:	mov    al,ds:0xa4e5411b
  41f8b5:	xor    BYTE PTR [ecx],bl
  41f8b7:	and    ecx,DWORD PTR [eax]
  41f8b9:	loop   0x41f855
  41f8bb:	sbb    eax,0x638a1e5
  41f8c0:	call   DWORD PTR [ecx-0x74f378f0]
  41f8c6:	je     0x41f92f
  41f8c8:	in     al,0xfd
  41f8ca:	loop   0x41f8ad
  41f8cc:	jl     0x41f8fa
  41f8ce:	fisttp DWORD PTR [ebp+ecx*4+0x361dc43b]
  41f8d5:	ss repnz int3 
  41f8d8:	xor    bl,BYTE PTR [esi-0x25]
  41f8db:	in     al,dx
  41f8dc:	mov    eax,0x5c27e766
  41f8e1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f8e3:	push   ecx
  41f8e4:	xchg   BYTE PTR [edx],ah
  41f8e6:	jno    0x41f902
  41f8e8:	xchg   DWORD PTR [ecx-0x30],esi
  41f8eb:	push   0x2f2a1c15
  41f8f0:	iret   
  41f8f1:	stc    
  41f8f2:	mov    DWORD PTR ss:[esi-0x1f604738],eax
  41f8f9:	adc    dl,BYTE PTR ds:0x98e07e27
  41f8ff:	fcomip st,st(4)
  41f901:	int    0x95
  41f903:	in     al,0x80
  41f905:	aam    0x3f
  41f907:	pop    ebx
  41f908:	iret   
  41f909:	pushf  
  41f90a:	rcl    edi,0xde
  41f90d:	mov    bl,0xdb
  41f90f:	mov    BYTE PTR [edi+0x7faa44ac],dl
  41f915:	push   cs
  41f916:	jge    0x41f98c
  41f918:	dec    ebp
  41f919:	add    al,0xcd
  41f91b:	ffreep st(1)
  41f91d:	mov    ah,0x7
  41f91f:	add    BYTE PTR [edi-0x20474998],dh
  41f925:	push   es
  41f926:	call   0x3988004
  41f92b:	dec    ecx
  41f92d:	ins    DWORD PTR es:[edi],dx
  41f92e:	dec    ebx
  41f92f:	mov    ebp,0xf6f1b93c
  41f934:	sbb    bl,BYTE PTR [edi+ebp*1-0x37ac9481]
  41f93b:	mov    ebx,0x3d28c1ab
  41f940:	add    eax,0xe430784b
  41f945:	ret    0x14bb
  41f948:	fcomp  QWORD PTR [ebx-0x5906095a]
  41f94e:	repz loop 0x41f9c1
  41f951:	and    BYTE PTR [eax-0x27],dl
  41f954:	call   0x2271:0xd75c3a2d
  41f95b:	jge    0x41f933
  41f95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95e:	pop    ebp
  41f95f:	nop
  41f960:	jle    0x41f9b0
  41f962:	aaa    
  41f963:	and    DWORD PTR [esi+0x2f],edi
  41f966:	add    eax,0x82e75cf9
  41f96b:	aad    0x79
  41f96d:	inc    ebx
  41f96e:	push   edx
  41f96f:	inc    esi
  41f970:	rcr    DWORD PTR ds:0x3e12988e,1
  41f976:	jl     0x41f9d9
  41f978:	xor    DWORD PTR [edi+0x386713ac],esp
  41f97e:	aaa    
  41f97f:	cmp    al,0x55
  41f981:	xchg   esi,eax
  41f982:	fnstcw WORD PTR ss:[ebp+esi*4+0x63c1ceb6]
  41f98a:	(bad)  
  41f98c:	xchg   esp,eax
  41f98d:	jg     0x41f9d6
  41f98f:	(bad)  
  41f990:	ins    BYTE PTR es:[edi],dx
  41f991:	cmp    al,0x12
  41f993:	inc    edi
  41f994:	or     dl,BYTE PTR ds:0xcca19e8a
  41f99a:	inc    esi
  41f99b:	dec    ebp
  41f99c:	in     eax,dx
  41f99d:	dec    esp
  41f99e:	stos   DWORD PTR es:[edi],eax
  41f99f:	jb     0x41f9d0
  41f9a1:	jns    0x41fa0d
  41f9a3:	imul   esi,DWORD PTR [esi-0x699ea712],0x51
  41f9aa:	push   es
  41f9ab:	fcmovb st,st(2)
  41f9ad:	pop    ds
  41f9ae:	push   edx
  41f9af:	(bad)  cs:[ebx+0x7f]
  41f9b3:	xlat   BYTE PTR ds:[ebx]
  41f9b4:	push   esp
  41f9b5:	dec    ch
  41f9b7:	bound  edi,QWORD PTR [edx+edx*1-0x6c81fd38]
  41f9be:	pushf  
  41f9bf:	sub    DWORD PTR [ebx-0x29942167],edi
  41f9c5:	push   ds
  41f9c6:	outs   dx,BYTE PTR ds:[esi]
  41f9c7:	mov    WORD PTR [ebx],gs
  41f9c9:	ins    BYTE PTR es:[edi],dx
  41f9ca:	fstp   QWORD PTR [ebp-0x2f]
  41f9cd:	stos   DWORD PTR es:[edi],eax
  41f9ce:	add    DWORD PTR [ebp-0x25],ebp
  41f9d1:	outs   dx,BYTE PTR ds:[esi]
  41f9d2:	add    al,0x65
  41f9d4:	adc    BYTE PTR [esi],cl
  41f9d6:	mov    ds:0xb982f308,eax
  41f9db:	loope  0x41f9f8
  41f9dd:	sbb    BYTE PTR [edx+0x47],ch
  41f9e0:	and    esi,DWORD PTR [ecx-0x6a54b08c]
  41f9e6:	adc    ecx,DWORD PTR [ecx+0x384b078b]
  41f9ec:	std    
  41f9ed:	fisubr WORD PTR [ebp+ebx*1+0x14]
  41f9f1:	shl    BYTE PTR [ecx-0x16],0x10
  41f9f5:	fwait
  41f9f6:	cdq    
  41f9f7:	xchg   ecx,eax
  41f9f8:	jnp    0x41fa2c
  41f9fa:	pop    ecx
  41f9fb:	xchg   esp,eax
  41f9fc:	fcomp  st(3)
  41f9fe:	push   ebx
  41f9ff:	push   esi
  41fa00:	std    
  41fa01:	push   ebp
  41fa02:	inc    ebx
  41fa03:	inc    esi
  41fa04:	(bad)  
  41fa05:	scas   eax,DWORD PTR es:[edi]
  41fa06:	sub    BYTE PTR [edi+0x74],0xc2
  41fa0a:	retf   0xbe97
  41fa0d:	iret   
  41fa0e:	mov    al,ds:0x37855191
  41fa13:	(bad)  [edi]
  41fa15:	mov    ds:0x45f2e77,eax
  41fa1a:	push   edx
  41fa1b:	xchg   DWORD PTR ss:[esi-0x114efa89],esp
  41fa22:	mov    al,0x90
  41fa24:	cmp    dh,bl
  41fa26:	xor    al,0x16
  41fa28:	mov    ebx,0xdd9f9e2b
  41fa2d:	cli    
  41fa2e:	int3   
  41fa2f:	dec    ecx
  41fa30:	sbb    dh,BYTE PTR [ecx-0x65]
  41fa33:	jbe    0x41fa29
  41fa35:	(bad)  
  41fa36:	pop    edx
  41fa37:	loope  0x41fa72
  41fa39:	js     0x41fab0
  41fa3b:	stos   DWORD PTR es:[edi],eax
  41fa3c:	sub    ecx,DWORD PTR [ebx]
  41fa3e:	or     DWORD PTR [edi+edi*8-0x7090d78],edi
  41fa45:	or     al,0x81
  41fa47:	(bad)  
  41fa48:	jmp    0x3ebf23e5
  41fa4d:	jp     0x41fa95
  41fa4f:	stc    
  41fa50:	test   DWORD PTR [ebx],eax
  41fa52:	repnz sbb DWORD PTR [ebp+0x45d467e4],edi
  41fa59:	enter  0x5b04,0x15
  41fa5d:	(bad)  
  41fa5e:	xor    ch,BYTE PTR [edi-0xf]
  41fa61:	enter  0xc880,0x85
  41fa65:	cmc    
  41fa66:	cmp    al,BYTE PTR [ebx+0x1776b4ac]
  41fa6c:	mov    edx,0x9f72a45
  41fa71:	ins    DWORD PTR es:[edi],dx
  41fa72:	dec    esp
  41fa73:	jnp    0x41fa98
  41fa75:	(bad)  
  41fa76:	(bad)
  41fa7a:	sbb    ah,BYTE PTR [edi+0x27b195dd]
  41fa80:	or     BYTE PTR [esi+0x41],al
  41fa83:	pop    esp
  41fa84:	ja     0x41faaa
  41fa86:	xor    ebp,DWORD PTR [ebx]
  41fa88:	into   
  41fa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa8a:	imul   edx,edi,0x79db51d3
  41fa90:	leave  
  41fa91:	pop    eax
  41fa92:	xor    eax,0x5d0bc0f5
  41fa97:	shl    DWORD PTR [ebx+eax*2],0x2a
  41fa9b:	(bad)
  41fa9e:	dec    esi
  41fa9f:	push   edi
  41faa0:	push   0x33a06e7c
  41faa5:	inc    ebx
  41faa6:	adc    esp,DWORD PTR [ecx+0x11e2c964]
  41faac:	add    al,bh
  41faae:	push   ebx
  41faaf:	add    DWORD PTR [esi],eax
  41fab1:	mov    ch,0xd2
  41fab3:	cs lahf 
  41fab5:	add    cl,ah
  41fab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab8:	pop    es
  41fab9:	xor    DWORD PTR [edx-0x713b6cb8],esp
  41fabf:	das    
  41fac0:	mov    ebx,0x5b77ef18
  41fac5:	mov    ebp,0x26b5e8f5
  41faca:	popf   
  41facb:	mov    ch,0x9
  41facd:	xchg   esp,eax
  41face:	pop    ss
  41facf:	mov    BYTE PTR [esi+0x64853c3f],cl
  41fad5:	push   ebp
  41fad6:	mov    BYTE PTR [ecx+edi*1],dl
  41fad9:	jne    0x41fa6a
  41fadb:	fld    QWORD PTR [esi*1+0xcf1bdc7]
  41fae2:	pushf  
  41fae3:	fsub   DWORD PTR [esi-0x307b898e]
  41fae9:	mov    WORD PTR [ebp-0x3],gs
  41faec:	jb     0x41fa98
  41faee:	push   cs
  41faef:	(bad)  
  41faf0:	sub    eax,0x2543f96a
  41faf5:	sahf   
  41faf6:	ss and eax,0x7d9f5be2
  41fafc:	xlat   BYTE PTR ds:[ebx]
  41fafd:	fidiv  DWORD PTR ds:0xee11ad2f
  41fb03:	mov    esp,gs
  41fb05:	or     eax,0x50eee2f5
  41fb0a:	aaa    
  41fb0b:	(bad)  
  41fb0c:	js     0x41fa9a
  41fb0e:	das    
  41fb0f:	clc    
  41fb10:	add    eax,0xf43065bd
  41fb15:	shr    DWORD PTR [ebp-0x30],0x98
  41fb19:	mov    ebx,0x57588a23
  41fb1e:	loop   0x41fb5a
  41fb20:	sub    ebp,DWORD PTR [esi]
  41fb22:	mov    cl,0x4a
  41fb24:	mov    al,0xe6
  41fb26:	xlat   BYTE PTR ds:[ebx]
  41fb27:	test   al,0x5b
  41fb29:	test   eax,0xb8860e80
  41fb2e:	xor    DWORD PTR [ecx+0x39428d8],0x1b49f54b
  41fb38:	arpl   di,ax
  41fb3a:	adc    esp,ecx
  41fb3c:	aaa    
  41fb3d:	retf   
  41fb3e:	fsub   DWORD PTR [ebx+0x606250a8]
  41fb44:	add    ecx,ecx
  41fb46:	pop    ds
  41fb47:	mov    esp,0x1595a62f
  41fb4c:	cmp    DWORD PTR [ecx+0x7d9649be],ecx
  41fb52:	jmp    0x4864b87
  41fb57:	test   eax,0x48b8035f
  41fb5c:	xor    al,0x45
  41fb5e:	dec    ebp
  41fb5f:	imul   ecx,esi,0x6658aed3
  41fb65:	inc    cl
  41fb67:	add    dh,BYTE PTR cs:[ebx]
  41fb6a:	icebp  
  41fb6b:	xor    edx,DWORD PTR [esi-0x7f]
  41fb6e:	repnz adc BYTE PTR [edx+0x16256b35],dl
  41fb75:	cmp    edi,DWORD PTR [ecx]
  41fb77:	test   BYTE PTR [edi+ebx*2-0x1f168ada],cl
  41fb7e:	lahf   
  41fb7f:	cmp    BYTE PTR ds:0x71ecc049,ah
  41fb85:	je     0x41fb15
  41fb87:	ds sub bl,al
  41fb8a:	ret    0xdf3
  41fb8d:	in     eax,dx
  41fb8e:	dec    ebx
  41fb8f:	lods   al,BYTE PTR ds:[esi]
  41fb90:	jmp    FWORD PTR [esi+0x16fbbf5]
  41fb96:	aaa    
  41fb97:	and    al,0x57
  41fb99:	sub    al,BYTE PTR [eax]
  41fb9b:	sti    
  41fb9c:	sar    ebx,0xd2
  41fb9f:	(bad)  [esi-0x3bedc9aa]
  41fba5:	mov    ds:0xab240577,eax
  41fbaa:	test   edx,edx
  41fbac:	xor    edx,ebp
  41fbae:	jae    0x41fc29
  41fbb0:	and    BYTE PTR [eax],dl
  41fbb2:	outs   dx,DWORD PTR ds:[esi]
  41fbb3:	sub    eax,0x46b5079b
  41fbb8:	in     eax,dx
  41fbb9:	je     0x41fc03
  41fbbb:	inc    eax
  41fbbc:	fsubr  DWORD PTR [esi]
  41fbbe:	inc    esp
  41fbbf:	fs and al,0x80
  41fbc2:	(bad)  
  41fbc3:	enter  0x31e4,0xe0
  41fbc7:	call   0x8571de13
  41fbcc:	sub    eax,0xc8c28736
  41fbd1:	cld    
  41fbd2:	add    edi,0xbf2c9b57
  41fbd8:	je     0x41fc46
  41fbda:	mov    BYTE PTR [ebp-0x372a4189],dh
  41fbe0:	cdq    
  41fbe1:	ror    DWORD PTR [eax+0x61],cl
  41fbe4:	pop    eax
  41fbe5:	call   0x208a:0xfc333734
  41fbec:	(bad)  
  41fbed:	jne    0x41fbd0
  41fbef:	dec    ebp
  41fbf0:	xchg   ebx,eax
  41fbf1:	scas   eax,DWORD PTR es:[edi]
  41fbf2:	jne    0x41fbdd
  41fbf4:	jne    0x41fb9d
  41fbf6:	pushf  
  41fbf7:	inc    esi
  41fbf8:	sbb    eax,0x6d6d71fa
  41fbfd:	ror    BYTE PTR [edi],1
  41fbff:	inc    ecx
  41fc00:	leave  
  41fc01:	inc    edx
  41fc02:	mov    dh,0x6e
  41fc04:	pushf  
  41fc05:	bound  edx,QWORD PTR [eax+0x6558816]
  41fc0b:	mov    eax,ds:0x70ffbbfd
  41fc10:	xlat   BYTE PTR ds:[ebx]
  41fc11:	cmp    eax,0x26f9503
  41fc16:	repz ror ebp,cl
  41fc19:	dec    edx
  41fc1a:	and    DWORD PTR [edi+0x3e31a4ec],ebx
  41fc20:	mov    edx,0x4d6e12f7
  41fc25:	stc    
  41fc26:	dec    edi
  41fc27:	nop    edi
  41fc2a:	dec    ebp
  41fc2b:	repnz aad 0xea
  41fc2e:	sbb    al,0xb2
  41fc30:	pop    ebp
  41fc31:	ret    
  41fc32:	retf   0xd831
  41fc35:	(bad)  
  41fc36:	mov    eax,ds:0x4c0720b6
  41fc3b:	and    al,bl
  41fc3d:	stos   DWORD PTR es:[edi],eax
  41fc3e:	scas   eax,DWORD PTR es:[edi]
  41fc3f:	push   ebp
  41fc40:	cmp    BYTE PTR [edi+0x1881439c],cl
  41fc46:	mov    BYTE PTR [edx+0x58ad010d],dl
  41fc4c:	(bad)  
  41fc4d:	pusha  
  41fc4e:	jmp    0x41fc87
  41fc50:	push   0xffffffa5
  41fc52:	xchg   edx,eax
  41fc53:	and    BYTE PTR [edi+0x21],ah
  41fc56:	or     eax,0x49a635c7
  41fc5b:	push   0x68d6aaed
  41fc60:	jmp    0x41fc62
  41fc62:	jle    0x41fc0a
  41fc64:	scas   eax,DWORD PTR es:[edi]
  41fc65:	xchg   ebx,eax
  41fc66:	dec    ebp
  41fc67:	call   0xd2c36d25
  41fc6c:	imul   edx,DWORD PTR [edx+0x4ac6a2fb],0x5d
  41fc73:	fdivr  st,st(1)
  41fc75:	cmp    DWORD PTR [esi-0x1],edx
  41fc78:	add    BYTE PTR [eax-0x2a5caf1],al
  41fc7e:	jecxz  0x41fc7a
  41fc80:	das    
  41fc81:	cmp    eax,0x1678e9c8
  41fc86:	(bad)  
  41fc88:	xor    eax,0xab482bf2
  41fc8d:	loopne 0x41fcd7
  41fc8f:	and    BYTE PTR [ecx+0x7f827752],0x8c
  41fc96:	cmp    al,0xdb
  41fc98:	mov    ecx,0xce4cd23e
  41fc9d:	cmc    
  41fc9e:	(bad)  
  41fc9f:	pop    ebx
  41fca0:	fwait
  41fca1:	psubusb mm2,QWORD PTR [edi+0x4a]
  41fca5:	add    BYTE PTR [ebx],ch
  41fca7:	xlat   BYTE PTR ds:[ebx]
  41fca8:	vorps  ymm2,ymm5,YMMWORD PTR [esi]
  41fcac:	adc    ebp,0xa1194ac
  41fcb2:	repz fs pop edi
  41fcb5:	dec    ebx
  41fcb6:	mov    WORD PTR [ecx],?
  41fcb8:	scas   eax,DWORD PTR es:[edi]
  41fcb9:	mov    dh,0xb8
  41fcbb:	aaa    
  41fcbc:	out    0xf8,al
  41fcbe:	(bad)  
  41fcbf:	dec    ebp
  41fcc0:	mov    WORD PTR [ecx-0x5b],ss
  41fcc3:	and    esp,ebp
  41fcc5:	sbb    DWORD PTR [esi],edi
  41fcc7:	lods   al,BYTE PTR ds:[esi]
  41fcc8:	jae    0x41fcd5
  41fcca:	jmp    0x41fd0a
  41fccc:	(bad)  
  41fcce:	inc    edx
  41fccf:	jl     0x41fd15
  41fcd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcd2:	aaa    
  41fcd3:	int3   
  41fcd4:	cli    
  41fcd5:	pop    ebp
  41fcd6:	jmp    0x1f5aeb61
  41fcdb:	rcl    DWORD PTR [edx],cl
  41fcdd:	dec    eax
  41fcde:	jmp    0x41fcb5
  41fce0:	shr    DWORD PTR [ecx-0x1c3c1548],1
  41fce6:	mov    cl,0xa8
  41fce8:	xor    dh,ch
  41fcea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fceb:	xor    BYTE PTR [edx+edx*1],cl
  41fcee:	or     DWORD PTR [esi+0x37],edx
  41fcf1:	mov    esp,0xcd0207ba
  41fcf6:	das    
  41fcf7:	aam    0x78
  41fcf9:	je     0x41fd75
  41fcfb:	popf   
  41fcfc:	mov    ebp,0xb54eb089
  41fd01:	mov    esi,0x75fb4697
  41fd06:	ja     0x41fcf7
  41fd08:	mov    esp,0xbf03e1fa
  41fd0d:	test   eax,0x2091b4e1
  41fd12:	rcr    DWORD PTR [edi-0x49],0xf8
  41fd16:	jb     0x41fcb3
  41fd18:	mov    ds,edx
  41fd1a:	dec    ebp
  41fd1b:	imul   esp,ebp,0xc62b0667
  41fd21:	cmp    cl,BYTE PTR [eax+0x1b]
  41fd24:	pop    esp
  41fd25:	add    BYTE PTR [edi-0x4d19c38e],cl
  41fd2b:	jbe    0x41fcf4
  41fd2d:	fucom  st(6)
  41fd2f:	push   ebp
  41fd30:	lock stos BYTE PTR es:[edi],al
  41fd32:	mov    bl,0x19
  41fd34:	fnstsw WORD PTR [edi-0x30d59182]
  41fd3a:	push   esp
  41fd3b:	in     al,dx
  41fd3c:	dec    ebx
  41fd3d:	push   ss
  41fd3e:	mov    dl,0xe2
  41fd40:	ss jmp 0x9f59999b
  41fd46:	lds    ebx,FWORD PTR [eax]
  41fd48:	lock test DWORD PTR [eax],ebp
  41fd4b:	ss or  edi,eax
  41fd4e:	stos   DWORD PTR es:[edi],eax
  41fd4f:	ret    
  41fd50:	mov    esp,DWORD PTR [edx-0x5b]
  41fd53:	xchg   ebx,eax
  41fd54:	mov    al,0xd7
  41fd56:	push   esp
  41fd57:	sub    bh,BYTE PTR [ebp-0x72]
  41fd5a:	cmp    ebx,edi
  41fd5c:	arpl   si,bx
  41fd5e:	enter  0x2b9c,0x9d
  41fd62:	mov    edi,0x8995d380
  41fd67:	shl    ecx,cl
  41fd69:	inc    ebp
  41fd6a:	dec    edx
  41fd6b:	add    DWORD PTR [esi-0x68],edx
  41fd6e:	les    edx,FWORD PTR [esi-0x1b]
  41fd71:	in     al,0xb9
  41fd73:	push   esi
  41fd74:	test   BYTE PTR [esp+edx*2],dl
  41fd77:	inc    ebp
  41fd78:	inc    esi
  41fd79:	pop    edx
  41fd7a:	aas    
  41fd7b:	imul   ecx,DWORD PTR [ecx]
  41fd7e:	and    eax,0xaf20f0a3
  41fd83:	mov    esp,0xa6dc32c2
  41fd88:	ins    BYTE PTR es:[edi],dx
  41fd89:	fs ins DWORD PTR es:[edi],dx
  41fd8b:	adc    esp,esi
  41fd8d:	xor    DWORD PTR [esi-0x5],0x6f
  41fd91:	(bad)
  41fd94:	imul   ebx,DWORD PTR cs:[ebp-0x302f6448],0xfffffff8
  41fd9c:	sub    cl,dh
  41fd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd9f:	xor    al,0xbe
  41fda1:	(bad)  
  41fda2:	ss pushf 
  41fda4:	das    
  41fda5:	mov    bl,0x81
  41fda7:	add    al,0x3
  41fda9:	or     eax,0x9d22b97d
  41fdae:	ja     0x41fd70
  41fdb0:	xlat   BYTE PTR ds:[ebx]
  41fdb1:	int3   
  41fdb2:	push   eax
  41fdb3:	dec    ebp
  41fdb4:	sahf   
  41fdb5:	pop    esp
  41fdb6:	in     eax,0x3b
  41fdb8:	xor    eax,DWORD PTR ds:0x137555e4
  41fdbe:	icebp  
  41fdbf:	adc    al,0xfc
  41fdc1:	pop    ebp
  41fdc2:	jg     0x41fe00
  41fdc4:	retf   
  41fdc5:	in     al,dx
  41fdc6:	inc    edi
  41fdc7:	inc    eax
  41fdc8:	and    al,0xfa
  41fdca:	fbstp  TBYTE PTR [ebx+0x13e41c4d]
  41fdd0:	mov    ds:0x798bdab,eax
  41fdd5:	sbb    edx,ebp
  41fdd7:	mov    al,0xad
  41fdd9:	add    al,0xa9
  41fddb:	stos   DWORD PTR es:[edi],eax
  41fddc:	or     ah,BYTE PTR [ecx+eiz*4-0x47]
  41fde0:	repnz and DWORD PTR [ebp-0x39875233],esp
  41fde7:	leave  
  41fde8:	(bad)  
  41fde9:	call   0x75cf0be6
  41fdee:	mov    bl,0x4
  41fdf0:	xor    al,0x53
  41fdf2:	pusha  
  41fdf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf4:	and    al,0x23
  41fdf6:	jmp    0x2ce8:0xa95f2e47
  41fdfd:	or     al,0xa6
  41fdff:	lods   eax,DWORD PTR ds:[esi]
  41fe00:	or     dl,BYTE PTR [ecx+esi*1+0x7d]
  41fe04:	(bad)  
  41fe05:	pop    ebx
  41fe06:	push   esi
  41fe07:	(bad)  [ecx]
  41fe09:	lahf   
  41fe0a:	(bad)
  41fe0d:	loop   0x41fdf1
  41fe0f:	dec    esp
  41fe10:	add    ecx,ecx
  41fe12:	mov    edx,0x2eef1d39
  41fe17:	in     al,0x67
  41fe19:	outs   dx,DWORD PTR ds:[esi]
  41fe1a:	mov    BYTE PTR [edx],al
  41fe1c:	ret    
  41fe1d:	mov    bl,0x67
  41fe1f:	inc    ecx
  41fe20:	add    al,0xb
  41fe22:	iret   
  41fe23:	imul   edi,ecx,0xc686912e
  41fe29:	scas   al,BYTE PTR es:[edi]
  41fe2a:	dec    ebp
  41fe2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe2c:	lahf   
  41fe2d:	dec    ecx
  41fe2e:	ret    0x6600
  41fe31:	out    dx,eax
  41fe32:	lods   al,BYTE PTR ds:[esi]
  41fe33:	sub    al,0xf6
  41fe35:	(bad)  
  41fe37:	and    eax,0xa02e3a3a
  41fe3c:	jg     0x41fe0b
  41fe3e:	xor    esi,DWORD PTR [eax+0x2d]
  41fe41:	mov    ebx,0xc23ad3ff
  41fe46:	fwait
  41fe47:	cdq    
  41fe48:	xchg   bl,cl
  41fe4a:	mov    bl,0xb4
  41fe4c:	(bad)  
  41fe4d:	push   esi
  41fe4f:	xlat   BYTE PTR ds:[ebx]
  41fe50:	int    0x16
  41fe52:	add    esp,DWORD PTR [ebx+0x16]
  41fe55:	daa    
  41fe56:	xchg   ebp,eax
  41fe57:	fcmovu st,st(4)
  41fe59:	or     DWORD PTR [ebp-0x79],ebx
  41fe5c:	test   al,0x58
  41fe5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe60:	into   
  41fe61:	xor    bl,ch
  41fe63:	mov    al,ds:0x47e8a9bc
  41fe68:	cmp    ecx,0x1789eaa
  41fe6e:	mov    eax,ds:0x68457fcb
  41fe73:	push   cs
  41fe74:	push   esp
  41fe75:	add    al,0x93
  41fe77:	icebp  
  41fe78:	mov    ds:0x621e97b6,eax
  41fe7d:	mov    ebx,DWORD PTR [eax-0x73]
  41fe80:	aaa    
  41fe81:	in     eax,dx
  41fe82:	jge    0x41fe07
  41fe84:	mov    ebx,0xf46b4941
  41fe89:	inc    ecx
  41fe8a:	or     al,0xb9
  41fe8c:	push   esp
  41fe8d:	lock push ebp
  41fe8f:	xchg   ebx,eax
  41fe90:	push   ecx
  41fe91:	push   ds
  41fe92:	jp     0x41fe3d
  41fe94:	or     eax,0x114d93a6
  41fe99:	mov    dh,0xd8
  41fe9b:	jbe    0x41fe58
  41fe9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9e:	and    esi,esi
  41fea0:	push   0xffffff8d
  41fea2:	pop    edx
  41fea3:	int3   
  41fea4:	in     al,dx
  41fea5:	repnz cmp eax,0xff37fc35
  41feab:	(bad)  
  41feac:	jne    0x41fea6
  41feae:	pop    ebx
  41feaf:	lods   eax,DWORD PTR ds:[esi]
  41feb0:	outs   dx,BYTE PTR ds:[esi]
  41feb1:	mov    ebx,DWORD PTR [esi+ecx*2+0x2a6ed86c]
  41feb8:	mov    DWORD PTR [edx+0x45],edx
  41febb:	mov    edi,0x62370ce3
  41fec0:	clc    
  41fec1:	outs   dx,BYTE PTR ds:[esi]
  41fec2:	pop    edx
  41fec3:	aas    
  41fec4:	iret   
  41fec5:	stos   DWORD PTR es:[edi],eax
  41fec6:	repnz push edx
  41fec8:	jecxz  0x41ff0f
  41feca:	dec    ebp
  41fecb:	sbb    esp,DWORD PTR [eax-0x9]
  41fece:	into   
  41fecf:	cmp    ch,BYTE PTR es:[ecx+0x66]
  41fed3:	jge    0x41ff02
  41fed5:	push   ecx
  41fed6:	ins    BYTE PTR es:[edi],dx
  41fed7:	xchg   edx,eax
  41fed8:	outs   dx,DWORD PTR ds:[esi]
  41fed9:	dec    esi
  41feda:	push   0xe49ada07
  41fedf:	inc    edx
  41fee0:	daa    
  41fee1:	push   ebp
  41fee2:	mov    ch,0x40
  41fee4:	fmul   DWORD PTR [ecx-0x5002220c]
  41feea:	aad    0x3a
  41feec:	xchg   DWORD PTR [ecx+0x5c14ac3b],eax
  41fef2:	and    al,BYTE PTR [eax+0x53]
  41fef5:	test   ax,0x19a6
  41fef9:	cdq    
  41fefa:	mov    edi,0x502fce63
  41feff:	cld    
  41ff00:	pop    ebx
  41ff01:	je     0x41ff75
  41ff03:	adc    al,0xae
  41ff05:	inc    ebx
  41ff06:	cmp    edx,DWORD PTR [ecx+0x4c]
  41ff09:	(bad)  
  41ff0b:	xor    al,0x5a
  41ff0d:	lahf   
  41ff0e:	mov    ch,0xa9
  41ff10:	in     eax,dx
  41ff11:	mov    DWORD PTR [ebx-0x6e],ecx
  41ff14:	fxch   st(3)
  41ff16:	cwde   
  41ff17:	xor    al,0xcd
  41ff19:	xchg   edx,eax
  41ff1a:	das    
  41ff1b:	push   0x592d3dcf
  41ff20:	xchg   ebx,eax
  41ff21:	loopne 0x41feac
  41ff23:	enter  0x1e29,0x8f
  41ff27:	call   0x3b8a3881
  41ff2c:	pusha  
  41ff2d:	or     BYTE PTR [eax],ah
  41ff2f:	inc    edx
  41ff30:	cs int 0xb8
  41ff33:	inc    esp
  41ff34:	fild   WORD PTR ds:0x38a97b7e
  41ff3a:	(bad)  
  41ff3b:	mov    dl,0xf9
  41ff3d:	retf   
  41ff3e:	mov    edi,0x5833fd7a
  41ff43:	pop    edi
  41ff44:	xor    BYTE PTR [esi],0xa6
  41ff47:	stos   BYTE PTR es:[edi],al
  41ff48:	popf   
  41ff49:	cmp    eax,0x5ff9539
  41ff4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff4f:	cmp    BYTE PTR ds:0x999259e7,ch
  41ff55:	jo     0x41fede
  41ff57:	xchg   ebx,eax
  41ff58:	add    al,0x77
  41ff5a:	push   esi
  41ff5b:	ds add eax,0x39a023af
  41ff61:	retf   0x9544
  41ff64:	push   esi
  41ff65:	jp     0x41ff53
  41ff67:	mov    al,ds:0x82d0781
  41ff6c:	cmp    edi,0x41
  41ff6f:	ret    
  41ff70:	xchg   ebx,eax
  41ff71:	jmp    0x388b:0xeda8fb62
  41ff78:	jo     0x41ff85
  41ff7a:	fwait
  41ff7b:	mov    edi,0x4a46c7c6
  41ff80:	inc    ebx
  41ff81:	jmp    0x41ffd2
  41ff83:	js     0x41ff9b
  41ff85:	pop    edx
  41ff86:	outs   dx,DWORD PTR ds:[esi]
  41ff87:	mov    esi,DWORD PTR [edx+edx*2]
  41ff8a:	jne    0x41ff5c
  41ff8c:	pop    ecx
  41ff8d:	fwait
  41ff8e:	out    0xc4,al
  41ff90:	mov    ds:0xe5826bd7,al
  41ff95:	cdq    
  41ff96:	xor    ecx,DWORD PTR [ebx+0x54f2ffe9]
  41ff9c:	mov    cl,bh
  41ff9e:	test   DWORD PTR [ecx-0x45754c3a],edx
  41ffa4:	(bad)  
  41ffa5:	sub    DWORD PTR [ebx+0x6706671a],ebx
  41ffab:	xchg   edx,eax
  41ffac:	push   es
  41ffad:	or     esi,DWORD PTR [ecx]
  41ffaf:	cs popa 
  41ffb1:	mov    esi,cs
  41ffb3:	push   ss
  41ffb4:	adc    DWORD PTR [ebx-0x2c],edi
  41ffb7:	aad    0x9c
  41ffb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffba:	(bad)  
  41ffbb:	adc    eax,0x1baba908
  41ffc0:	xor    eax,0x8c4f0e8b
  41ffc5:	mov    ah,0x46
  41ffc7:	mov    edx,0xe7c85f7d
  41ffcc:	or     al,0x53
  41ffce:	leave  
  41ffcf:	xchg   ebx,eax
  41ffd0:	mov    ah,0x3f
  41ffd2:	dec    edi
  41ffd3:	ins    DWORD PTR es:[edi],dx
  41ffd4:	cli    
  41ffd5:	mov    eax,ds:0x286bc063
  41ffda:	mov    ebp,0xd4cdf8c8
  41ffdf:	mov    ebp,0xf267ff70
  41ffe4:	jno    0x420050
  41ffe6:	aas    
  41ffe7:	sbb    dl,bh
  41ffe9:	out    0x1,al
  41ffeb:	lahf   
  41ffec:	in     al,0x3
  41ffee:	call   0xe5a1:0x73f7c486
  41fff5:	or     ebx,ebp
  41fff7:	test   edx,0x24d86bf8
  41fffd:	xlat   BYTE PTR ds:[ebx]
  41fffe:	bound  ebp,QWORD PTR [edx-0x3f88497b]
  420004:	(bad)  
  420005:	popf   
  420006:	cmc    
  420007:	not    BYTE PTR [esi]
  420009:	cmp    BYTE PTR [ecx-0x7346aeed],0xef
  420010:	ins    DWORD PTR es:[edi],dx
  420011:	and    esi,DWORD PTR [ecx]
  420013:	mov    ebp,0x882802fb
  420018:	jo     0x42001a
  42001a:	push   0x56
  42001c:	jl     0x41ffce
  42001e:	and    DWORD PTR [ebx+0x34],edx
  420021:	out    0xa8,eax
  420023:	xchg   esi,eax
  420024:	call   DWORD PTR [ebx]
  420026:	mov    edx,DWORD PTR [edi]
  420028:	pop    es
  420029:	hlt    
  42002a:	mov    ebp,0x79526089
  42002f:	je     0x420041
  420031:	pusha  
  420032:	ja     0x42001c
  420034:	jmp    0xeb3bbde1
  420039:	or     BYTE PTR [esi],al
  42003b:	lods   eax,DWORD PTR ds:[esi]
  42003c:	sbb    eax,esi
  42003e:	sahf   
  42003f:	push   esp
  420040:	stos   BYTE PTR es:[edi],al
  420041:	mov    dh,0xb5
  420043:	js     0x420070
  420045:	jne    0x4200b6
  420047:	enter  0x9c9e,0xa6
  42004b:	mov    ebx,0x6f66ce1
  420050:	jmp    0xa7d0:0x9fea1810
  420057:	getsec 
  420059:	inc    ebx
  42005a:	add    DWORD PTR [ebx],ebx
  42005c:	xchg   edx,eax
  42005d:	dec    esi
  42005e:	and    ch,BYTE PTR [esi-0x78]
  420061:	es test ah,al
  420064:	sub    al,0x2d
  420066:	stc    
  420067:	dec    edi
  420068:	sbb    BYTE PTR [ecx+ebx*4-0x59b1c971],dh
  42006f:	arpl   bx,dx
  420071:	add    al,0x35
  420073:	daa    
  420074:	adc    al,0x57
  420076:	push   es
  420077:	dec    esp
  420078:	lahf   
  420079:	jecxz  0x4200f3
  42007b:	iret   
  42007c:	stos   DWORD PTR es:[edi],eax
  42007d:	popf   
  42007e:	mov    BYTE PTR [ecx+0x3a],dl
  420081:	fadd   QWORD PTR [ebp+0x1c]
  420084:	add    BYTE PTR [edx],ch
  420086:	imul   edi,DWORD PTR [esp+ecx*1+0x12],0xffffff89
  42008b:	xor    DWORD PTR [ecx],edx
  42008d:	mov    ds:0x965f670,eax
  420092:	mov    ecx,0x715c30fe
  420097:	ja     0x4200f2
  420099:	pop    eax
  42009a:	xor    al,0xd7
  42009c:	dec    edi
  42009d:	adc    al,0x90
  42009f:	loopne 0x420115
  4200a1:	dec    esp
  4200a2:	dec    edx
  4200a3:	aas    
  4200a4:	mov    edi,0x9f4d5ddf
  4200a9:	rol    edi,1
  4200ab:	test   ch,dl
  4200ad:	jmp    0xcac6ed12
  4200b2:	mov    bl,ch
  4200b4:	mov    ch,0xe1
  4200b6:	mov    edx,0x205f67dc
  4200bb:	push   esp
  4200bc:	inc    eax
  4200bd:	sbb    BYTE PTR [edi+0xecf248e],bl
  4200c3:	mov    esi,0xb19eb381
  4200c8:	pop    eax
  4200c9:	ins    DWORD PTR es:[edi],dx
  4200ca:	retf   0xa60e
  4200cd:	test   al,0xc7
  4200cf:	adc    DWORD PTR [edx],edi
  4200d1:	adc    ebx,DWORD PTR [edx+0x3b784363]
  4200d7:	retf   0x52cb
  4200da:	and    ch,BYTE PTR ds:0x461668f8
  4200e0:	sar    DWORD PTR [ebp+ecx*4-0x18],1
  4200e4:	or     eax,0xfa4a4378
  4200e9:	test   BYTE PTR [eax-0x55],bl
  4200ec:	cmp    esi,DWORD PTR [ebp+eiz*1-0x47475dee]
  4200f3:	gs sub bh,ah
  4200f6:	in     eax,dx
  4200f7:	cmc    
  4200f8:	enter  0x39c1,0x64
  4200fc:	pusha  
  4200fd:	xchg   ecx,eax
  4200fe:	xor    al,0xf1
  420100:	cmp    ch,ch
  420102:	ret    
  420103:	pop    esi
  420104:	sahf   
  420105:	push   ebx
  420106:	cmc    
  420107:	jno    0x4200f9
  420109:	xor    BYTE PTR [ebp+0x612334e4],al
  42010f:	pop    ss
  420110:	scas   eax,DWORD PTR es:[di]
  420112:	and    DWORD PTR [esi],edx
  420114:	div    BYTE PTR ds:[ebp+0x7a]
  420118:	sub    eax,0xfce6aedf
  42011d:	or     DWORD PTR [edx+0x6f],ecx
  420120:	dec    ebp
  420121:	or     bl,BYTE PTR [ecx+0x3386e6d4]
  420127:	cmp    ax,WORD PTR [ebx+0x28]
  42012b:	out    0x98,al
  42012d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012e:	in     al,0x75
  420130:	clc    
  420131:	sbb    esi,DWORD PTR [bx+di]
  420134:	or     eax,0xa220660f
  420139:	or     BYTE PTR [ebx],0x35
  42013c:	fisub  WORD PTR [ebx+eiz*4]
  42013f:	push   ebx
  420140:	aad    0x62
  420142:	cs test eax,0xc81e5486
  420148:	lods   eax,DWORD PTR ds:[esi]
  420149:	into   
  42014a:	test   eax,0x14c85bf8
  42014f:	pop    edx
  420150:	loop   0x42011e
  420152:	daa    
  420153:	ds test esp,ebx
  420156:	sub    ah,dh
  420158:	ret    0x1511
  42015b:	jp     0x42016d
  42015d:	maxps  xmm2,xmm7
  420160:	mov    ch,0x13
  420162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420163:	cmp    BYTE PTR [edx-0x7621e03a],0x39
  42016a:	inc    eax
  42016b:	push   esi
  42016c:	mov    ch,0xe0
  42016e:	fwait
  42016f:	add    BYTE PTR [edx+0xa7781d7],0xc8
  420176:	adc    DWORD PTR [ebx-0x1d63ce90],ebp
  42017c:	in     eax,0x4d
  42017e:	(bad)  
  420180:	jbe    0x420128
  420182:	ins    DWORD PTR es:[edi],dx
  420183:	pop    esp
  420184:	fadd   DWORD PTR ds:0x795fae5e
  42018a:	xchg   DWORD PTR [eax-0x79],ebx
  42018d:	inc    esp
  42018e:	jo     0x420118
  420190:	jne    0x420169
  420192:	cmp    DWORD PTR [ecx-0x12],ecx
  420195:	mov    cl,0x88
  420197:	push   ecx
  420198:	out    0x7d,al
  42019a:	rcl    ecx,0x73
  42019d:	add    al,0xdd
  42019f:	xchg   edi,eax
  4201a0:	in     eax,dx
  4201a1:	jl     0x420192
  4201a3:	jecxz  0x420206
  4201a5:	push   edx
  4201a6:	and    DWORD PTR [eax-0x466dbf0c],ecx
  4201ac:	ds jmp 0x79ddd0b1
  4201b2:	(bad)  
  4201b3:	cld    
  4201b4:	stc    
  4201b5:	mov    ecx,0xb5295432
  4201ba:	fsubrp st(6),st
  4201bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201bd:	addr16 mov edi,0x68314ab
  4201c3:	mov    cl,bh
  4201c5:	jmp    0xc280bcb3
  4201ca:	inc    eax
  4201cb:	fmul   DWORD PTR [edx-0x3b]
  4201ce:	ins    DWORD PTR es:[edi],dx
  4201cf:	cmc    
  4201d0:	imul   esp,DWORD PTR ds:0xdf97fbe9,0xffffff83
  4201d7:	sub    di,WORD PTR [esi+esi*1-0x6700ef87]
  4201df:	in     al,dx
  4201e0:	arpl   WORD PTR [eax-0x4e],sp
  4201e3:	xchg   esp,eax
  4201e4:	mov    al,0x97
  4201e6:	push   cs
  4201e7:	or     edi,DWORD PTR [edx]
  4201e9:	fs ins BYTE PTR es:[edi],dx
  4201eb:	bound  edi,QWORD PTR [ecx-0x36]
  4201ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ef:	sbb    DWORD PTR [ebx+0x37],esp
  4201f2:	jne    0x42020b
  4201f4:	mul    BYTE PTR [ebx]
  4201f6:	jnp    0x42026a
  4201f8:	jno    0x420221
  4201fa:	in     al,dx
  4201fb:	out    0x29,al
  4201fd:	fdiv   QWORD PTR [edi+0x5e91bcb1]
  420203:	and    DWORD PTR [ebx+ecx*4-0x37],esi
  420207:	fimul  WORD PTR [edx+0x6623ce4a]
  42020d:	jo     0x4201a5
  42020f:	lds    ebp,FWORD PTR [ebx-0x3a778551]
  420215:	addr16 sti 
  420217:	imul   esi,DWORD PTR [ebp*4-0x686fc250],0xffffffc9
  42021f:	rcr    BYTE PTR [edi+0x7f],1
  420222:	xchg   ebp,eax
  420223:	lods   al,BYTE PTR ds:[esi]
  420224:	jge    0x4201a7
  420226:	js     0x420290
  420228:	mov    edx,0x7d0f0b55
  42022d:	int3   
  42022e:	jne    0x420275
  420230:	xchg   DWORD PTR [ebp+0x34314c54],esp
  420236:	cmp    DWORD PTR [edi],0xffffff81
  420239:	adc    BYTE PTR [ebx-0x55ab9f53],0x6a
  420240:	out    0x36,eax
  420242:	mov    BYTE PTR [edx],dl
  420244:	xor    BYTE PTR [ecx-0x548e3b9c],ah
  42024a:	test   al,0xba
  42024c:	aas    
  42024d:	pop    ebp
  42024e:	add    BYTE PTR [esi+0x53198cd7],dl
  420254:	xchg   ebx,eax
  420255:	ins    BYTE PTR es:[edi],dx
  420256:	mov    eax,ds:0x6255af04
  42025b:	inc    ebx
  42025c:	add    DWORD PTR [edi-0x15],eax
  42025f:	fidiv  DWORD PTR [edi-0x6f]
  420262:	jge    0x4202a0
  420264:	mov    edx,DWORD PTR [edi+0x77d67348]
  42026a:	mov    edx,0xd9717565
  42026f:	shl    BYTE PTR [esi-0x687fc7e1],0x32
  420276:	stos   BYTE PTR es:[edi],al
  420277:	stos   BYTE PTR es:[edi],al
  420278:	call   0xa86410d2
  42027d:	retf   
  42027e:	idiv   edx
  420280:	ja     0x42023d
  420282:	add    ecx,DWORD PTR [edx+0x5]
  420285:	mov    bh,0x21
  420287:	in     al,0x2f
  420289:	jo     0x4202e1
  42028b:	lods   eax,DWORD PTR ds:[esi]
  42028c:	lds    ecx,FWORD PTR [ebp+0x769ded2d]
  420292:	mov    esi,0x346d349e
  420297:	sti    
  420298:	push   edx
  420299:	scas   al,BYTE PTR es:[edi]
  42029a:	imul   ebx,DWORD PTR [esi],0xffffffc1
  42029d:	jmp    0x216889a3
  4202a2:	in     al,dx
  4202a3:	mov    edi,0xb4b1f94e
  4202a8:	adc    edi,DWORD PTR ds:0x2b1020f3
  4202ae:	mov    ?,eax
  4202b0:	mov    al,ds:0xe21aa259
  4202b5:	mov    dl,0x6d
  4202b7:	outs   dx,DWORD PTR ds:[esi]
  4202b8:	outs   dx,BYTE PTR ds:[esi]
  4202b9:	pushf  
  4202ba:	or     eax,0xafe32d58
  4202bf:	retf   0x44e1
  4202c2:	inc    edi
  4202c3:	dec    esi
  4202c4:	cdq    
  4202c5:	lea    ebx,ds:0x1a74e73d
  4202cb:	mov    al,0xaa
  4202cd:	lahf   
  4202ce:	iret   
  4202cf:	sub    eax,0xca0b1f2
  4202d4:	loope  0x420349
  4202d6:	xor    al,bl
  4202d8:	loop   0x4202d9
  4202da:	sub    edi,DWORD PTR [ebp-0x1f]
  4202dd:	(bad)  
  4202de:	mov    ah,0xdd
  4202e0:	sbb    BYTE PTR [ebx-0x4ca2001f],ch
  4202e6:	and    BYTE PTR [edi-0x4c],dl
  4202e9:	sub    BYTE PTR [edi-0x21],0x33
  4202ed:	aaa    
  4202ee:	add    bh,BYTE PTR [eax]
  4202f0:	and    BYTE PTR [ebp+0x389dc795],bl
  4202f6:	in     eax,0x49
  4202f8:	add    edx,DWORD PTR [eax-0x28994e51]
  4202fe:	(bad)  
  4202ff:	imul   eax,DWORD PTR [esi-0x7ed50bd],0x0
  420306:	not    BYTE PTR [edi+0x327c762d]
  42030c:	jb     0x420381
  42030e:	jmp    0x420312
  420310:	cmp    bh,ah
  420312:	ins    DWORD PTR es:[edi],dx
  420313:	sub    edx,0x75
  420316:	push   ebx
  420317:	pushf  
  420318:	sub    al,dl
  42031a:	or     ecx,ebp
  42031c:	es dec edx
  42031e:	sbb    DWORD PTR cs:[esi-0x39],edx
  420322:	mov    ecx,0xf7f94c55
  420327:	in     al,dx
  420328:	scas   al,BYTE PTR es:[edi]
  420329:	adc    ecx,DWORD PTR [ebx+0x6]
  42032c:	xchg   BYTE PTR [edx+0xaa92a93],al
  420332:	inc    BYTE PTR [edi]
  420334:	aad    0x7c
  420336:	(bad)  
  420337:	fld    st(2)
  420339:	mov    eax,ds:0xfcf8c01a
  42033e:	(bad)  
  42033f:	and    eax,0x58750a1a
  420344:	fistp  QWORD PTR [esi+0x7f]
  420347:	mov    cl,0x13
  420349:	imul   ebp,DWORD PTR [eax],0xffffffe3
  42034c:	retf   0xe7ce
  42034f:	mov    dl,0x2
  420351:	xor    DWORD PTR [edi+0x2fb0ebcf],eax
  420357:	ja     0x420367
  420359:	das    
  42035a:	mov    bl,0x34
  42035c:	enter  0xe58b,0x38
  420360:	(bad)  
  420361:	pop    edi
  420362:	inc    edi
  420363:	mov    cl,0x10
  420365:	pop    edx
  420366:	xor    dh,cl
  420368:	xchg   DWORD PTR ds:0x1f6e066b,eax
  42036e:	aas    
  42036f:	jns    0x420337
  420371:	adc    dh,ah
  420373:	imul   ebx,ebp,0xad0c28dc
  420379:	xchg   edi,eax
  42037a:	out    0x5,al
  42037c:	adc    DWORD PTR [edx],esi
  42037e:	or     eax,0xd78b8e20
  420383:	adc    cl,bl
  420385:	out    0x7d,eax
  420387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420388:	sti    
  420389:	mov    edi,0xa0f1567c
  42038e:	test   al,0x31
  420390:	and    BYTE PTR [eax+0x257383c0],0x19
  420397:	cmp    DWORD PTR [edi+0x5c2b4fdf],0x72
  42039e:	adc    esp,eax
  4203a0:	pop    ecx
  4203a1:	sub    bl,ah
  4203a3:	fbld   TBYTE PTR [ecx]
  4203a5:	cld    
  4203a6:	mov    edi,0xba5ea339
  4203ab:	mov    ah,0x63
  4203ad:	test   eax,0xbfd78a09
  4203b2:	ds pop ds
  4203b4:	sub    dl,BYTE PTR [ecx+0x70]
  4203b7:	jo     0x42040d
  4203b9:	fdiv   DWORD PTR [edx+edi*8-0x55e3ac22]
  4203c0:	sub    eax,0xb13bb52b
  4203c5:	or     al,0xd1
  4203c7:	test   eax,0x338fac0f
  4203cc:	mov    bl,BYTE PTR fs:[edx-0x24c944f]
  4203d3:	dec    eax
  4203d4:	ficomp WORD PTR [ecx]
  4203d6:	fnstcw WORD PTR [ebx+0x75cf081d]
  4203dc:	inc    ebx
  4203dd:	outs   dx,BYTE PTR ds:[esi]
  4203de:	adc    eax,0x5eabd394
  4203e3:	push   eax
  4203e4:	outs   dx,DWORD PTR ds:[esi]
  4203e5:	(bad)  
  4203e6:	jne    0x42041e
  4203e8:	push   eax
  4203e9:	or     dh,ch
  4203eb:	out    0x4d,al
  4203ed:	dec    ebx
  4203ee:	sub    ah,BYTE PTR [ebp+edi*2+0x3f74264a]
  4203f5:	cmp    al,0xde
  4203f7:	(bad)
  4203fb:	ror    bh,cl
  4203fd:	adc    bh,ah
  4203ff:	xor    al,0x78
  420401:	push   edi
  420402:	dec    edi
  420403:	cmp    ah,ch
  420405:	xor    DWORD PTR [edi+0x3be9e5ee],esi
  42040b:	rsqrtps xmm1,xmm4
  42040e:	or     esp,DWORD PTR [edi-0x53fae341]
  420414:	leave  
  420415:	mov    ds:0xa431deaf,eax
  42041a:	mov    esp,0xb77065c5
  42041f:	push   eax
  420420:	sbb    al,0x8e
  420422:	call   0x7bfc:0x65534824
  420429:	mov    bh,0xa8
  42042b:	dec    ebx
  42042c:	mov    eax,0x98a18657
  420431:	cmp    ecx,DWORD PTR [edx]
  420433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420434:	psubusw mm6,QWORD PTR [esi]
  420437:	dec    esi
  420438:	call   0x8619:0xf0b0d27f
  42043f:	sahf   
  420440:	and    bh,dl
  420442:	mov    bl,0x2b
  420444:	add    DWORD PTR [ebp-0x74],ebx
  420447:	push   ebp
  420448:	gs jmp eax
  42044b:	dec    ebx
  42044c:	bound  ecx,QWORD PTR [ebx+0x52d41393]
  420452:	dec    edi
  420453:	mov    DWORD PTR [ebx-0x1c],edi
  420456:	int3   
  420457:	fwait
  420458:	test   eax,0x19100834
  42045d:	pop    ebp
  42045e:	mov    BYTE PTR [ecx+0x31f54747],ah
  420464:	enter  0x3688,0xaa
  420468:	pop    ebp
  420469:	aas    
  42046a:	push   ebx
  42046b:	fisttp QWORD PTR [ebx+0x61]
  42046e:	fucomi st,st(4)
  420470:	hlt    
  420471:	es and eax,0xa43ee009
  420477:	cli    
  420478:	in     eax,dx
  420479:	xchg   DWORD PTR [edx],esp
  42047b:	add    ebx,DWORD PTR [esi+0x35969f6a]
  420481:	clc    
  420482:	push   edi
  420483:	adc    edi,DWORD PTR [ebx]
  420485:	ret    0xb60a
  420488:	push   ds
  420489:	inc    ebx
  42048a:	pop    esp
  42048b:	inc    ebp
  42048c:	add    bl,dl
  42048e:	mov    DWORD PTR [esp+ebx*1],esi
  420491:	jmp    0xcab7:0x5104ae63
  420498:	inc    edx
  420499:	test   BYTE PTR [ecx-0x6e],al
  42049c:	lahf   
  42049d:	pop    edx
  42049e:	xor    al,0xd2
  4204a0:	add    BYTE PTR [edx],dl
  4204a2:	sub    BYTE PTR [ebx],dl
  4204a4:	pushf  
  4204a5:	xchg   ecx,eax
  4204a6:	sub    ch,BYTE PTR [ecx+0x54bfde1f]
  4204ac:	sub    al,0x5b
  4204ae:	cmp    al,0x2a
  4204b0:	pop    ecx
  4204b1:	and    ecx,ebx
  4204b3:	cmp    eax,0x5416f8a6
  4204b8:	inc    eax
  4204b9:	jp     0x420476
  4204bb:	xchg   esi,eax
  4204bc:	icebp  
  4204bd:	ins    DWORD PTR es:[edi],dx
  4204be:	inc    esp
  4204bf:	lds    esp,FWORD PTR [edi-0x1ce22ec6]
  4204c5:	or     ebp,0x49
  4204c8:	jb     0x4204b4
  4204ca:	pop    eax
  4204cb:	cmc    
  4204cc:	dec    esp
  4204cd:	test   dl,al
  4204cf:	adc    al,0x57
  4204d1:	mov    al,0xa0
  4204d3:	ficom  DWORD PTR [esi-0x41]
  4204d6:	lea    ecx,[eax-0x2ea63abb]
  4204dc:	out    dx,al
  4204dd:	icebp  
  4204de:	int3   
  4204df:	ins    DWORD PTR es:[edi],dx
  4204e0:	mov    ebx,0xe1a7b621
  4204e5:	inc    edi
  4204e6:	jns    0x4204d3
  4204e8:	daa    
  4204e9:	ret    0x294a
  4204ec:	jae    0x4204bf
  4204ee:	fbld   TBYTE PTR [ebx+ebp*4+0x788dd5c7]
  4204f5:	sub    eax,0x8a65833e
  4204fa:	in     al,0x58
  4204fc:	mov    eax,edi
  4204fe:	clc    
  4204ff:	dec    ebp
  420500:	cmp    DWORD PTR [esi],edx
  420502:	sub    dh,BYTE PTR [ebp-0x6b346150]
  420508:	lahf   
  420509:	loop   0x420506
  42050b:	inc    ecx
  42050c:	int    0x1
  42050e:	dec    edi
  42050f:	retf   0xe8a4
  420512:	lods   eax,DWORD PTR ds:[esi]
  420513:	leave  
  420514:	int    0xee
  420516:	xor    eax,0xca17e6a8
  42051b:	mov    esp,0x9b125c49
  420520:	or     al,0x58
  420522:	or     DWORD PTR [ebx-0x72],ebp
  420525:	dec    eax
  420526:	sti    
  420527:	inc    ecx
  420528:	sbb    eax,ebp
  42052a:	sbb    bl,ch
  42052c:	mov    ss,WORD PTR [ebp-0x434156e4]
  420532:	cs je  0x420551
  420535:	ins    DWORD PTR es:[edi],dx
  420536:	pop    edx
  420537:	mov    al,ds:0x6f115983
  42053c:	enter  0xaa2,0x90
  420540:	(bad)  
  420541:	leave  
  420542:	inc    edi
  420543:	(bad)  
  420544:	sti    
  420545:	arpl   bx,ax
  420547:	mov    cl,0xfe
  420549:	sub    esi,ebx
  42054b:	dec    ecx
  42054c:	inc    ebx
  42054d:	ja     0x420589
  42054f:	mov    bh,0x73
  420551:	jbe    0x4204fd
  420553:	sub    al,0xce
  420555:	sub    BYTE PTR [esi],dh
  420557:	(bad)  
  420558:	cmp    al,0x5
  42055a:	push   0x70100886
  42055f:	or     al,0x2c
  420561:	hlt    
  420562:	daa    
  420563:	outs   dx,DWORD PTR ds:[esi]
  420564:	nop
  420565:	(bad)  
  420566:	dec    edi
  420567:	and    eax,DWORD PTR [edx+0x32]
  42056a:	cmp    DWORD PTR ds:0xb4ffbfca,edi
  420570:	lds    ebx,FWORD PTR [ecx+0x23]
  420573:	or     DWORD PTR [ecx],esi
  420575:	repz inc ecx
  420577:	retf   0x3
  42057a:	das    
  42057b:	test   BYTE PTR [eax+0x6],cl
  42057e:	jmp    0x420534
  420580:	mov    eax,ds:0x97eb49b1
  420585:	push   ss
  420586:	adc    eax,0x505a8aec
  42058b:	mov    BYTE PTR [ebp-0x37edcabf],dl
  420591:	ret    
  420592:	mov    al,0xf5
  420594:	and    BYTE PTR [ebx],al
  420596:	lods   al,BYTE PTR ds:[esi]
  420597:	or     ch,al
  420599:	mov    dl,0x9c
  42059b:	jo     0x4205ef
  42059d:	loop   0x420587
  42059f:	in     eax,dx
  4205a0:	mov    WORD PTR [edx-0x454b5d1a],ds
  4205a6:	mov    BYTE PTR [bp+si+0x3c],cl
  4205aa:	inc    esi
  4205ab:	fbstp  TBYTE PTR [ebx+ebx*8]
  4205ae:	xchg   ecx,eax
  4205af:	rcl    DWORD PTR [eax-0x7d],1
  4205b2:	frstor [edi+edx*1]
  4205b5:	in     al,dx
  4205b6:	push   esp
  4205b7:	sbb    DWORD PTR ds:0x86995858,eax
  4205bd:	xchg   ecx,eax
  4205be:	push   ss
  4205bf:	scas   eax,DWORD PTR es:[edi]
  4205c0:	nop
  4205c1:	es test bl,al
  4205c4:	(bad)  
  4205c5:	stc    
  4205c6:	iret   
  4205c7:	push   edx
  4205c8:	pop    ss
  4205c9:	es (bad) 
  4205cb:	call   0xd9cb:0xf692d91a
  4205d2:	stos   DWORD PTR es:[edi],eax
  4205d3:	inc    DWORD PTR [ebx-0x13]
  4205d6:	je     0x42057b
  4205d8:	dec    edx
  4205d9:	and    ebp,DWORD PTR [edx+0x28f5deb9]
  4205df:	mov    ch,cl
  4205e1:	scas   eax,DWORD PTR es:[edi]
  4205e2:	loope  0x4205ec
  4205e4:	je     0x420608
  4205e6:	arpl   WORD PTR ds:0x196a5378,cx
  4205ec:	sbb    eax,0x42a2306b
  4205f1:	cmp    BYTE PTR [edx-0x6c],ah
  4205f4:	adc    BYTE PTR [ecx-0x51128a74],ah
  4205fa:	adc    eax,0xdb141625
  4205ff:	mov    eax,0x530172d9
  420604:	cmc    
  420605:	rcl    BYTE PTR [ebp-0x5f],1
  420608:	pop    edi
  420609:	mov    bh,0xf
  42060b:	push   eax
  42060c:	xchg   edi,eax
  42060d:	mov    ebx,0x4ab2ba0d
  420612:	fdivr  DWORD PTR [eax+0x7c]
  420615:	in     al,0x1e
  420617:	jecxz  0x4205c8
  420619:	jb     0x4205f7
  42061b:	jecxz  0x42068b
  42061d:	jo     0x42067e
  42061f:	mov    ds:0x2b1af555,eax
  420624:	(bad)  
  420625:	sub    bh,BYTE PTR [ebx]
  420627:	cmc    
  420628:	jmp    0x15e783d2
  42062d:	mov    ds,WORD PTR [eax+ebp*8+0x4f]
  420631:	aaa    
  420632:	hlt    
  420633:	jg     0x4206a0
  420635:	pop    esp
  420636:	shl    BYTE PTR [esi-0x25817181],cl
  42063c:	jb     0x4205fc
  42063e:	fs js  0x4206a4
  420641:	retf   0x11ea
  420644:	test   eax,0xb231b749
  420649:	xor    BYTE PTR [edx+0x53],bh
  42064c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064d:	add    al,0xbf
  42064f:	idiv   ebx
  420651:	mov    ah,0xc2
  420653:	mov    eax,ds:0xb264d107
  420658:	popa   
  420659:	dec    ebp
  42065a:	sbb    al,0x56
  42065c:	lods   eax,DWORD PTR ds:[esi]
  42065d:	mov    bl,0x63
  42065f:	cs adc bh,ch
  420662:	popa   
  420663:	mov    dh,0x84
  420665:	in     al,0x37
  420667:	(bad)  
  420668:	idiv   ebx
  42066a:	test   DWORD PTR [ebx+0x59],edi
  42066d:	fisub  DWORD PTR [edx]
  42066f:	into   
  420670:	call   0xad4e:0xba68f28a
  420677:	pusha  
  420678:	xor    esi,DWORD PTR ds:0x35424897
  42067e:	sub    al,0x24
  420680:	xchg   esp,eax
  420681:	xchg   esp,eax
  420682:	jge    0x4206b6
  420684:	mov    ebp,DWORD PTR [ecx+0x5e]
  420687:	popf   
  420688:	add    DWORD PTR [eax+ecx*4-0x3f],ebx
  42068c:	inc    eax
  42068d:	outs   dx,BYTE PTR ds:[esi]
  42068e:	fstp   QWORD PTR [esi]
  420690:	into   
  420691:	push   0x7dc4433
  420696:	cs adc edx,ebp
  420699:	sub    eax,0xb8160d38
  42069e:	jbe    0x42070e
  4206a0:	push   0xffffffa3
  4206a2:	lahf   
  4206a3:	scas   eax,DWORD PTR es:[edi]
  4206a4:	ins    BYTE PTR es:[edi],dx
  4206a5:	inc    ecx
  4206a6:	arpl   WORD PTR [esi],di
  4206a8:	leave  
  4206a9:	pop    edx
  4206aa:	out    0xae,al
  4206ac:	sbb    al,0x3d
  4206ae:	pop    ss
  4206af:	add    al,0x2b
  4206b1:	sub    bl,BYTE PTR [edx+0x4a0125a7]
  4206b7:	ret    0xe7ec
  4206ba:	aas    
  4206bb:	mov    dl,0x28
  4206bd:	xlat   BYTE PTR ds:[ebx]
  4206be:	jnp    0x420644
  4206c0:	data16 mov ch,0xc5
  4206c3:	stos   DWORD PTR es:[edi],eax
  4206c4:	aas    
  4206c5:	sbb    BYTE PTR ds:0xa69c942f,0x9d
  4206cc:	dec    eax
  4206cd:	pop    ecx
  4206ce:	repz shl DWORD PTR [edi],cl
  4206d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d2:	sbb    esi,DWORD PTR [edi+0x2b]
  4206d5:	ins    DWORD PTR es:[edi],dx
  4206d6:	repz pop edx
  4206d8:	push   ds
  4206d9:	js     0x4206ea
  4206db:	jl     0x420679
  4206dd:	into   
  4206de:	push   eax
  4206df:	pop    edx
  4206e0:	and    DWORD PTR [ecx],edi
  4206e2:	les    ebx,FWORD PTR [edx]
  4206e4:	xor    DWORD PTR [ecx-0x763d8de3],esp
  4206ea:	ret    
  4206eb:	aam    0x4
  4206ed:	rcl    DWORD PTR [edi-0x37f779a1],1
  4206f3:	stos   DWORD PTR es:[edi],eax
  4206f4:	or     esi,0xffffffad
  4206f7:	mov    ecx,0x84c7ade2
  4206fc:	pop    eax
  4206fd:	xor    eax,0x690d900e
  420702:	mov    ebp,0x32a632d1
  420707:	and    ecx,edi
  420709:	inc    esp
  42070a:	imul   ebp,ebx,0xffffffee
  42070d:	loope  0x42078a
  42070f:	xchg   DWORD PTR [edx],eax
  420711:	cli    
  420712:	not    BYTE PTR [ebp-0x19]
  420715:	cmp    eax,0x505d48bf
  42071a:	popa   
  42071b:	xor    al,0x76
  42071d:	jp     0x4206fc
  42071f:	pop    edi
  420720:	sbb    eax,0x8a5ef550
  420725:	ds mov edx,0x4a078f39
  42072b:	sub    esp,esi
  42072d:	mov    edx,0x159ffe68
  420732:	es push esp
  420734:	inc    ebx
  420735:	inc    edi
  420736:	ret    0x800c
  420739:	ret    
  42073a:	mov    ah,0xce
  42073c:	mov    BYTE PTR [esi-0x80],0xa9
  420740:	lods   al,BYTE PTR ds:[esi]
  420741:	aas    
  420742:	xchg   esi,eax
  420743:	jns    0x42073f
  420745:	sbb    esp,DWORD PTR [edi]
  420747:	(bad)  
  420748:	fimul  WORD PTR [ecx+0x6e]
  42074b:	add    ebx,DWORD PTR [ecx]
  42074d:	hlt    
  42074e:	es pop esp
  420750:	(bad)  
  420751:	les    edi,FWORD PTR [ecx-0x10b6839e]
  420757:	and    al,0x8f
  420759:	push   0x5
  42075b:	pop    ecx
  42075c:	ja     0x420760
  42075e:	jo     0x4207b2
  420760:	dec    edi
  420761:	lds    ebp,FWORD PTR [ebx]
  420763:	adc    bl,BYTE PTR [esi]
  420765:	test   eax,0xe380b114
  42076a:	outs   dx,DWORD PTR ds:[esi]
  42076b:	retf   0xbfda
  42076e:	loope  0x420752
  420770:	rcl    dl,0xc6
  420773:	icebp  
  420774:	inc    edx
  420775:	mov    fs,ecx
  420777:	mul    BYTE PTR [edx+0x7f]
  42077a:	pop    ebp
  42077b:	daa    
  42077c:	xchg   esp,eax
  42077d:	sbb    BYTE PTR [ebx+0x57],cl
  420780:	mov    DWORD PTR [edi-0x26883b86],esp
  420786:	xchg   BYTE PTR [eax+0x29],dh
  420789:	jecxz  0x4207db
  42078b:	jns    0x420785
  42078d:	mov    ah,0xd8
  42078f:	inc    ecx
  420790:	push   ds
  420791:	add    eax,0x531fffa2
  420796:	ins    BYTE PTR es:[edi],dx
  420797:	adc    edi,DWORD PTR [edx-0x5f52c12b]
  42079d:	(bad)  
  42079e:	lahf   
  42079f:	inc    ebx
  4207a0:	inc    esi
  4207a1:	enter  0x71e6,0x3f
  4207a5:	mov    ebp,0x378415bf
  4207aa:	jmp    0x48d8:0xb35b06ff
  4207b1:	mov    ebx,0xb60280e1
  4207b6:	xor    dl,BYTE PTR [ecx]
  4207b8:	in     eax,dx
  4207b9:	in     eax,0xea
  4207bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207bc:	ds or  al,0xe4
  4207bf:	cmp    al,0x48
  4207c1:	add    eax,0x2cff8a99
  4207c6:	outs   dx,BYTE PTR ds:[esi]
  4207c7:	icebp  
  4207c8:	repz rcl DWORD PTR [eax+ebx*2],0xd3
  4207cd:	fld    TBYTE PTR [ebp-0x27]
  4207d0:	add    BYTE PTR [ebp-0x70],0x31
  4207d4:	cmp    edi,edx
  4207d6:	fild   DWORD PTR [eax+edx*4]
  4207d9:	retf   
  4207da:	icebp  
  4207db:	xchg   edi,eax
  4207dc:	lahf   
  4207dd:	pushf  
  4207de:	dec    edx
  4207df:	call   0xb3c118a1
  4207e4:	scas   eax,DWORD PTR es:[edi]
  4207e5:	call   0xa7c8:0x373aab30
  4207ec:	(bad)  
  4207ed:	dec    BYTE PTR [ecx-0x4e]
  4207f0:	cmp    BYTE PTR [esi-0x2944ed4f],bh
  4207f6:	dec    edi
  4207f7:	(bad)
  4207fb:	std    
  4207fc:	inc    edx
  4207fd:	(bad)  
  4207fe:	lods   eax,DWORD PTR ds:[esi]
  4207ff:	mov    dh,0x5b
  420801:	imul   BYTE PTR [ebx-0x1235fef2]
  420807:	jl     0x420789
  420809:	cmc    
  42080a:	pop    ds
  42080b:	cmc    
  42080c:	les    esp,FWORD PTR [edi+edi*1-0x4e]
  420810:	and    al,0x5a
  420812:	addr16 cmp esi,esp
  420815:	mov    bl,0xc2
  420817:	inc    ebx
  420818:	lods   al,BYTE PTR ds:[esi]
  420819:	ret    
  42081a:	(bad)  
  42081b:	out    dx,eax
  42081c:	push   ds
  42081d:	or     eax,0xcc91c973
  420822:	pop    eax
  420823:	pop    esp
  420824:	jno    0x4207a6
  420826:	mov    ah,0xa7
  420828:	inc    esi
  420829:	push   esi
  42082a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42082b:	adc    eax,DWORD PTR [eax+eax*8]
  42082e:	mov    bh,BYTE PTR [ebp-0x51]
  420831:	push   cs
  420832:	add    DWORD PTR [ebp+0x7e],ebp
  420835:	and    al,BYTE PTR [eax-0x62a99c82]
  42083b:	lock fcmovnbe st,st(5)
  42083e:	fistp  WORD PTR [ecx-0x56]
  420841:	jge    0x4207c4
  420843:	push   ss
  420844:	mov    edx,?
  420846:	ss push esp
  420848:	shl    BYTE PTR [edx-0x55bee628],1
  42084e:	xor    al,0xf8
  420850:	lahf   
  420851:	mov    ah,BYTE PTR gs:[ecx]
  420854:	pop    edx
  420855:	push   edi
  420856:	xchg   esi,eax
  420857:	push   esi
  420858:	cmp    BYTE PTR [edx+0x66],dl
  42085b:	std    
  42085c:	test   DWORD PTR [esi+0xfdccfce],ebp
  420862:	inc    esp
  420863:	adc    esi,DWORD PTR [ebx-0x6]
  420866:	fld    QWORD PTR [esi+ebp*8]
  420869:	add    edi,DWORD PTR [edi-0x23649ff]
  42086f:	std    
  420870:	call   0xde74:0xe57c74f4
  420877:	mov    al,0xcf
  420879:	out    dx,al
  42087a:	cmp    al,0x8
  42087c:	cwde   
  42087d:	stos   BYTE PTR es:[edi],al
  42087e:	push   esi
  42087f:	das    
  420880:	fild   QWORD PTR [ebx+eax*4]
  420883:	int    0x86
  420885:	push   eax
  420886:	cdq    
  420887:	sbb    edx,ebx
  420889:	jnp    0x4208e0
  42088b:	and    esi,DWORD PTR [edx+0x2b]
  42088e:	or     eax,0x90a9d695
  420893:	sbb    al,0xb5
  420895:	push   cs
  420896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420897:	add    eax,0x362ec73a
  42089c:	nop
  42089d:	shr    ebx,0xb9
  4208a0:	xor    eax,0x9ab65359
  4208a5:	in     al,dx
  4208a6:	mov    ebp,0xbacd7d1a
  4208ab:	cmp    bl,bh
  4208ad:	mov    bh,0x25
  4208af:	and    dh,BYTE PTR [edi+0x743c52fa]
  4208b5:	(bad)  
  4208b6:	push   edx
  4208b7:	and    dl,al
  4208b9:	jmp    0x36efd839
  4208be:	fistp  WORD PTR [ebx+0x59]
  4208c1:	jnp    0x42092c
  4208c3:	dec    edi
  4208c4:	lds    ebx,FWORD PTR [edi-0x1804f73b]
  4208ca:	repnz ss call 0xd30e:0x9495
  4208d2:	leave  
  4208d3:	(bad)  
  4208d4:	retf   
  4208d5:	jb     0x42091d
  4208d7:	or     DWORD PTR [edi-0x24],ecx
  4208da:	test   al,0x9c
  4208dc:	mov    esp,0x99db2ef
  4208e1:	das    
  4208e2:	daa    
  4208e3:	dec    esp
  4208e4:	dec    esi
  4208e5:	jmp    0x420939
  4208e7:	sbb    bh,BYTE PTR [ebx+0x4ce3a2b2]
  4208ed:	ja     0x42091b
  4208ef:	pusha  
  4208f0:	aas    
  4208f1:	or     eax,0xdd539584
  4208f6:	inc    ebx
  4208f7:	sti    
  4208f8:	in     al,dx
  4208f9:	dec    ebp
  4208fa:	mov    bh,0x72
  4208fc:	cmp    bh,cl
  4208fe:	imul   esi,DWORD PTR [edx],0xffffffa2
  420901:	leave  
  420902:	cmp    esp,esi
  420904:	rcl    esp,cl
  420906:	or     DWORD PTR es:[edx-0x4a8d136],ecx
  42090d:	jmp    FWORD PTR ds:0x89c5d05d
  420913:	ss pop es
  420915:	and    dl,BYTE PTR [ecx+0x59a20ba9]
  42091b:	mov    esp,0x4c811b
  420920:	push   ecx
  420921:	bound  ebx,QWORD PTR ds:0x8045482d
  420927:	out    dx,eax
  420928:	dec    esi
  420929:	(bad)  
  42092b:	push   eax
  42092c:	inc    ebx
  42092d:	inc    ecx
  42092e:	push   eax
  42092f:	mov    ch,0x68
  420931:	cld    
  420932:	bound  ebp,QWORD PTR [esi]
  420934:	sbb    eax,0xc2cc2061
  420939:	cwde   
  42093a:	mov    cl,0xf9
  42093c:	sbb    ebp,ebp
  42093e:	sub    DWORD PTR [esp+ebx*2+0x69],esi
  420942:	lds    ecx,FWORD PTR [edx+0xb47c64]
  420948:	inc    ebp
  420949:	sbb    ebp,DWORD PTR [ecx-0x606537df]
  42094f:	mov    ecx,0x207eebc6
  420954:	push   edx
  420955:	ffreep st(6)
  420957:	loop   0x4209be
  420959:	push   edx
  42095a:	mul    BYTE PTR [ecx-0x77]
  42095d:	inc    esi
  42095e:	rcr    dl,0x2
  420961:	mov    bl,0x66
  420963:	inc    ecx
  420964:	lock fcmovnbe st,st(7)
  420967:	fisub  WORD PTR [edi-0xc3d2c2a]
  42096d:	dec    esp
  42096e:	xor    al,0x95
  420970:	jecxz  0x4209aa
  420972:	mov    bl,0x5
  420974:	retf   0x4bc6
  420977:	mov    ah,BYTE PTR [esi+0x14]
  42097a:	rcr    DWORD PTR [si-0x27e8],0x60
  420980:	arpl   cx,bx
  420982:	rcl    BYTE PTR [ebx+0x339311db],cl
  420988:	je     0x42090b
  42098a:	shl    eax,0x57
  42098d:	mov    dl,BYTE PTR [ebx-0x264215e4]
  420993:	pop    esi
  420994:	cmp    al,0xae
  420996:	(bad)  
  420997:	push   esp
  420998:	icebp  
  420999:	pop    eax
  42099a:	mov    edi,0x7cb0ea2e
  42099f:	add    al,0x55
  4209a1:	das    
  4209a2:	push   eax
  4209a3:	add    eax,0xeea96e01
  4209a8:	jae    0x420960
  4209aa:	jmp    0xf394:0x6b14106f
  4209b1:	jecxz  0x42094c
  4209b3:	xchg   BYTE PTR [ebx],ah
  4209b5:	push   eax
  4209b6:	aad    0x2
  4209b8:	enter  0x77e0,0x49
  4209bc:	je     0x420a03
  4209be:	ss mov BYTE PTR ds:[eax-0x3e],bl
  4209c3:	mov    cl,0x85
  4209c5:	add    eax,0xd155a4e5
  4209ca:	mov    bh,BYTE PTR [edx]
  4209cc:	mov    edi,0x8e07bf72
  4209d1:	xor    eax,DWORD PTR [ecx+0x3dafa5b2]
  4209d7:	pop    eax
  4209d8:	iret   
  4209d9:	sub    al,BYTE PTR [edx]
  4209db:	test   al,0xf6
  4209dd:	bswap  edx
  4209df:	cld    
  4209e0:	push   cs
  4209e1:	ins    BYTE PTR es:[edi],dx
  4209e2:	push   edx
  4209e3:	sub    al,0xfd
  4209e5:	pusha  
  4209e6:	push   ebx
  4209e7:	(bad)  
  4209e8:	sub    eax,0xa7f817c4
  4209ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ee:	js     0x420a49
  4209f0:	lock mov ebp,0xc2dad197
  4209f6:	pop    ebx
  4209f7:	ss sbb al,0x13
  4209fa:	ins    DWORD PTR es:[edi],dx
  4209fb:	push   0x670aea7a
  420a00:	(bad)  
  420a02:	cdq    
  420a03:	dec    esi
  420a04:	dec    edx
  420a05:	mov    bl,ah
  420a07:	(bad)  
  420a08:	mov    al,ds:0xabd945d6
  420a0d:	les    edi,FWORD PTR [ebp+0x72]
  420a10:	jge    0x420a83
  420a12:	jmp    0xcbd9:0x7a47f810
  420a19:	sbb    edx,0xffffff83
  420a1c:	lock push 0xffffffb0
  420a1f:	pushaw 
  420a21:	push   cs
  420a22:	mov    dh,0x69
  420a24:	jle    0x420a52
  420a26:	xor    al,0x3a
  420a28:	push   0xda0eb440
  420a2d:	jmp    0x281248a7
  420a32:	test   al,0x4d
  420a34:	push   edi
  420a35:	mov    eax,0x10630f9
  420a3a:	lods   eax,DWORD PTR ds:[esi]
  420a3b:	cmp    esi,DWORD PTR [edi+0x45]
  420a3e:	jbe    0x420a29
  420a40:	fist   WORD PTR [ecx-0x42]
  420a43:	cmp    dh,al
  420a45:	add    al,BYTE PTR [edi-0x1aa75d71]
  420a4b:	mov    eax,ds:0xde413118
  420a50:	pop    ss
  420a51:	jp     0x420a36
  420a53:	pop    eax
  420a54:	add    al,0x19
  420a56:	push   ss
  420a57:	out    0x5a,eax
  420a59:	or     ecx,edi
  420a5b:	fist   DWORD PTR [eax]
  420a5d:	adc    al,0x7f
  420a5f:	js     0x420ad1
  420a61:	dec    esp
  420a62:	fisub  WORD PTR [ebx-0x7835cb94]
  420a68:	inc    edx
  420a69:	inc    edx
  420a6a:	outs   dx,DWORD PTR ds:[esi]
  420a6b:	cmp    eax,0x93b18001
  420a70:	push   ss
  420a71:	sbb    al,0xf7
  420a73:	out    0xd6,al
  420a75:	push   edi
  420a76:	adc    esp,edx
  420a78:	sbb    eax,0x63445f5d
  420a7d:	mov    eax,0x2c695f
  420a82:	mov    cl,0x15
  420a84:	loope  0x420a1a
  420a86:	test   eax,0xdd1dc149
  420a8b:	fcom   QWORD PTR [ebx+ebp*1+0x7f]
  420a8f:	popaw  
  420a91:	bound  esp,QWORD PTR [ecx+0x6a6066c2]
  420a97:	mov    cl,0xd8
  420a99:	pushf  
  420a9a:	sub    eax,0x13c970af
  420a9f:	les    esp,FWORD PTR gs:[ebx+eiz*4]
  420aa3:	sbb    DWORD PTR [esi],ebp
  420aa5:	pop    es
  420aa6:	cmp    ecx,DWORD PTR [ebx+0x23d6dae]
  420aac:	mov    ds:0x75cad3a2,eax
  420ab1:	in     eax,dx
  420ab2:	push   es
  420ab3:	xor    ch,dh
  420ab5:	outs   dx,DWORD PTR ds:[esi]
  420ab6:	fidiv  DWORD PTR [eax+0x6a]
  420ab9:	mov    edi,0xf0b69d45
  420abe:	xchg   DWORD PTR [ebp+edi*2+0xc],ecx
  420ac2:	je     0x420a7b
  420ac4:	dec    esp
  420ac5:	inc    esi
  420ac6:	mov    ecx,0xb68c8c64
  420acb:	mov    DWORD PTR [ebp+0xac21783],ecx
  420ad1:	jbe    0x420aca
  420ad3:	sub    BYTE PTR [edx+0x2c96e37b],cl
  420ad9:	cdq    
  420ada:	(bad)  
  420adb:	sbb    ebx,DWORD PTR [ebx]
  420add:	pop    dx
  420adf:	or     eax,0x6c7afa7d
  420ae4:	retf   0x6e80
  420ae7:	stc    
  420ae8:	jno    0x420abd
  420aea:	sahf   
  420aeb:	mov    edi,0xc3bed375
  420af0:	add    esp,DWORD PTR [eax-0x30]
  420af3:	sbb    DWORD PTR [edi],0xfeb72bca
  420af9:	mov    cs,WORD PTR [edx]
  420afb:	int    0xd7
  420afd:	dec    ebx
  420afe:	jge    0x420ad3
  420b00:	add    BYTE PTR [edi-0x728a28cb],ch
  420b06:	pop    ebp
  420b07:	sbb    ebp,DWORD PTR [eax-0x3c]
  420b0a:	ja     0x420a91
  420b0c:	xor    eax,0xa083c8d5
  420b11:	adc    BYTE PTR [ebx+esi*1-0x5c822a0],0x42
  420b19:	xchg   edi,eax
  420b1a:	mov    bl,0x52
  420b1c:	mov    ebp,0xbc755721
  420b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b22:	or     ch,al
  420b24:	cmc    
  420b25:	jae    0x420b5b
  420b27:	jnp    0x420b5b
  420b29:	in     al,0xc0
  420b2b:	or     ebx,DWORD PTR es:[ecx+0x63]
  420b2f:	mov    edi,0xd2c8312f
  420b34:	(bad)  
  420b35:	ror    BYTE PTR [edx+esi*8],cl
  420b38:	mov    edi,0xcc7ae076
  420b3d:	mov    bh,0xf5
  420b3f:	mov    edi,0x9a34662e
  420b44:	fnstenv [ebp-0x2716dd78]
  420b4a:	add    eax,0xe5938307
  420b4f:	mov    esp,0x134ba763
  420b54:	stos   DWORD PTR es:[edi],eax
  420b55:	les    ecx,FWORD PTR [eax+0x1e]
  420b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b59:	and    BYTE PTR [ebp-0x18],0xf4
  420b5d:	test   al,0x45
  420b5f:	add    esp,eax
  420b61:	jne    0x420bda
  420b63:	data16 fst st(4)
  420b66:	enter  0x4e48,0x27
  420b6a:	stc    
  420b6b:	shl    DWORD PTR [edi+0x1f],cl
  420b6e:	push   ss
  420b6f:	mov    ebp,0xd0b96a79
  420b74:	push   ebx
  420b75:	arpl   WORD PTR [edx-0x2615da1f],si
  420b7b:	popf   
  420b7c:	or     ah,dh
  420b7e:	push   edx
  420b7f:	aaa    
  420b80:	bound  ebp,QWORD PTR [ebp-0x61d1faa6]
  420b86:	push   ebx
  420b87:	enter  0xea0a,0xf7
  420b8b:	pop    edx
  420b8c:	scas   eax,DWORD PTR es:[edi]
  420b8d:	push   esp
  420b8e:	mov    fs,ecx
  420b90:	xchg   ebx,eax
  420b91:	xor    esp,ebx
  420b93:	cmp    ch,dl
  420b95:	push   ecx
  420b96:	adc    bl,ah
  420b98:	ret    
  420b99:	hlt    
  420b9a:	push   ecx
  420b9b:	cmp    DWORD PTR [eax],ecx
  420b9d:	arpl   sp,bp
  420b9f:	xchg   ebx,eax
  420ba0:	jnp    0x420bfb
  420ba2:	out    dx,eax
  420ba3:	or     DWORD PTR [ebx+eiz*8],0xc8c372f5
  420baa:	mov    cl,0x4e
  420bac:	inc    edx
  420bad:	sti    
  420bae:	imul   ebx,DWORD PTR [esi+esi*1+0x47757322],0x42
  420bb6:	daa    
  420bb7:	and    al,ch
  420bb9:	fldenv [eax]
  420bbb:	lds    esi,FWORD PTR [edx]
  420bbd:	xchg   esp,eax
  420bbe:	pop    ebx
  420bbf:	mov    al,0x48
  420bc1:	adc    eax,DWORD PTR [ebp+0x67]
  420bc4:	dec    ebp
  420bc5:	push   0xffffffb2
  420bc7:	xchg   edx,eax
  420bc8:	pop    es
  420bc9:	rcl    ebx,0x38
  420bcc:	clc    
  420bcd:	je     0x420b8a
  420bcf:	mov    esp,0x488b66b
  420bd4:	fidiv  WORD PTR [ecx+0x3b1e4304]
  420bda:	rol    BYTE PTR ds:0xdc7b8232,1
  420be0:	dec    edi
  420be1:	imul   edx,edx,0x32
  420be4:	daa    
  420be5:	mov    dl,0x7b
  420be7:	adc    eax,0xa9f5b7be
  420bec:	xor    al,0x83
  420bee:	push   esp
  420bef:	xchg   edx,eax
  420bf0:	jmp    0xb92d:0x26dd1f96
  420bf7:	out    0xdd,al
  420bf9:	pmulhw mm4,QWORD PTR [ecx+0x71]
  420bfd:	xor    esp,eax
  420bff:	fxch   st(6)
  420c01:	out    dx,al
  420c02:	jnp    0x420c66
  420c04:	aaa    
  420c05:	push   eax
  420c06:	in     eax,0x78
  420c08:	or     al,0x4
  420c0a:	xchg   esi,eax
  420c0b:	add    ah,0x79
  420c0e:	xchg   DWORD PTR [edx*4-0x67932ec7],edi
  420c15:	hlt    
  420c16:	push   es
  420c17:	xor    BYTE PTR [eax],al
  420c19:	inc    eax
  420c1a:	push   0x9c3e6200
  420c1f:	jno    0x420c50
  420c21:	and    bh,BYTE PTR [ecx]
  420c23:	fdivr  st(2),st
  420c25:	mov    ecx,0xeb2ca79
  420c2a:	stos   BYTE PTR es:[edi],al
  420c2b:	or     al,0x74
  420c2d:	mov    al,ds:0x722ef7f4
  420c32:	push   edi
  420c33:	mov    ch,0x21
  420c35:	icebp  
  420c36:	sub    dh,BYTE PTR [eax-0x7355dd5d]
  420c3c:	pop    ebp
  420c3d:	test   al,0xbb
  420c3f:	pop    edx
  420c40:	dec    eax
  420c41:	jge    0x420c8d
  420c43:	iret   
  420c44:	inc    ebp
  420c45:	inc    edi
  420c46:	push   edx
  420c47:	mov    ebx,0xa9e92b0a
  420c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c4d:	sub    eax,DWORD PTR [edi-0x35]
  420c50:	jnp    0x420c91
  420c52:	pop    ss
  420c53:	cdq    
  420c54:	or     BYTE PTR [ebx+eiz*1],bh
  420c57:	ja     0x420be4
  420c59:	fld    DWORD PTR [edi-0x5e]
  420c5c:	ds inc ebx
  420c5e:	sub    ecx,0xffffffaa
  420c61:	sub    DWORD PTR [di-0x7c],ecx
  420c65:	fisub  WORD PTR [eax-0xc64d70c]
  420c6b:	adc    al,0x80
  420c6d:	nop
  420c6e:	bswap  ecx
  420c70:	pop    es
  420c71:	dec    esi
  420c72:	rcl    BYTE PTR [ecx-0x52d24dbd],0x97
  420c79:	xchg   edx,eax
  420c7a:	push   0xce1de153
  420c7f:	pop    esp
  420c80:	mov    ah,0x8f
  420c82:	lds    edx,FWORD PTR [eax+0x2e50a59e]
  420c88:	ret    
  420c89:	adc    BYTE PTR [ebp-0x15],cl
  420c8c:	mov    esp,0x9d06a49d
  420c91:	adc    al,0x2b
  420c93:	add    ebp,ebx
  420c95:	shr    BYTE PTR [ebp-0x4b],0xc6
  420c99:	mov    esp,ds
  420c9b:	fistp  DWORD PTR [eax+0x69]
  420c9e:	int    0x9
  420ca0:	icebp  
  420ca1:	repz push ss
  420ca3:	std    
  420ca4:	mov    eax,DWORD PTR [esi]
  420ca6:	jno    0x420ca2
  420ca8:	jmp    0x1e625d55
  420cad:	xchg   ebp,eax
  420cae:	ins    DWORD PTR es:[edi],dx
  420caf:	mov    ebp,0x5ba078eb
  420cb4:	out    dx,eax
  420cb5:	out    dx,al
  420cb6:	int    0x41
  420cb8:	dec    ebx
  420cb9:	jle    0x420ce0
  420cbb:	and    eax,0x73357d86
  420cc0:	mov    ecx,?
  420cc2:	outs   dx,BYTE PTR ds:[esi]
  420cc3:	cmp    eax,0x919c856b
  420cc8:	add    eax,0x2abb1765
  420ccd:	sub    BYTE PTR [esi],0x98
  420cd0:	xor    BYTE PTR [edi+0x19],ah
  420cd3:	retf   
  420cd4:	sub    eax,0x5d85a1d8
  420cd9:	or     eax,0xe86931e8
  420cde:	dec    esp
  420cdf:	add    bh,BYTE PTR ds:0xea7f2e34
  420ce5:	adc    eax,0x1ddf498b
  420cea:	mov    edx,0xaaa130f9
  420cef:	(bad)  
  420cf0:	ins    DWORD PTR es:[edi],dx
  420cf1:	sub    al,cl
  420cf3:	sbb    DWORD PTR [esi+ecx*1],edi
  420cf6:	fbld   TBYTE PTR [ebp-0x16efca5d]
  420cfc:	mov    al,0xbc
  420cfe:	pop    esp
  420cff:	sbb    ah,BYTE PTR [esi-0x1c]
  420d02:	imul   ebx,DWORD PTR [eax+eiz*4+0x2d],0xbc687d93
  420d0a:	rol    BYTE PTR [ebx-0x53],0xcd
  420d0e:	adc    edi,DWORD PTR [ebx]
  420d10:	jo     0x420d4d
  420d12:	shl    ebp,cl
  420d14:	xchg   ebp,eax
  420d15:	sar    BYTE PTR [edx+0x5c],cl
  420d18:	pop    edx
  420d19:	lods   eax,DWORD PTR ds:[esi]
  420d1a:	outs   dx,BYTE PTR ds:[esi]
  420d1b:	imul   esp,DWORD PTR [esi+0x487759a7],0x4
  420d22:	mov    ds:0xf97b7eec,al
  420d27:	imul   BYTE PTR [ecx-0x68]
  420d2a:	and    DWORD PTR [edx+0x31],eax
  420d2d:	sub    bh,BYTE PTR [eax]
  420d2f:	lods   al,BYTE PTR ds:[esi]
  420d30:	repz dec ebx
  420d32:	out    dx,eax
  420d33:	outs   dx,BYTE PTR ds:[esi]
  420d34:	or     DWORD PTR [ebx-0x2c],ebx
  420d37:	out    0xa,al
  420d39:	xor    ah,ah
  420d3b:	pop    ebx
  420d3c:	jp     0x420d57
  420d3e:	pop    ebx
  420d3f:	adc    BYTE PTR [ebx],cl
  420d41:	xchg   ebp,eax
  420d42:	(bad)  
  420d44:	xor    al,BYTE PTR [esi-0x6c1e6d37]
  420d4a:	aaa    
  420d4b:	cdq    
  420d4c:	fiadd  DWORD PTR [ebx-0x66]
  420d4f:	rol    DWORD PTR [esi+eiz*8+0x6e4fca19],0x38
  420d57:	mov    dh,0xef
  420d59:	xor    BYTE PTR [ecx-0x55f3d57b],ah
  420d5f:	int    0x67
  420d61:	xchg   edx,eax
  420d62:	stos   BYTE PTR es:[edi],al
  420d63:	mov    WORD PTR [ebx+ecx*1+0x5c],fs
  420d67:	jb     0x420d48
  420d69:	mov    dl,0x5f
  420d6b:	inc    edx
  420d6c:	ror    DWORD PTR [eax-0x5c],0xf7
  420d70:	mov    cl,0x6b
  420d72:	sti    
  420d73:	push   0x2ab61230
  420d78:	and    edx,DWORD PTR [ecx-0x2ca754af]
  420d7e:	cmp    ecx,DWORD PTR [ebx+0xf]
  420d81:	(bad)  
  420d82:	aam    0xd3
  420d84:	lock inc BYTE PTR [esi]
  420d87:	ret    
  420d88:	xchg   ebx,eax
  420d89:	mov    eax,ds:0xd3b7e553
  420d8e:	mov    eax,ds:0x1147570
  420d93:	push   edi
  420d94:	lds    ecx,FWORD PTR [esi-0x54]
  420d97:	push   0x93171503
  420d9c:	fistp  DWORD PTR [ecx-0x21]
  420d9f:	mov    eax,ds:0x29a04612
  420da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420da5:	cdq    
  420da6:	push   cs
  420da7:	addr16 push ecx
  420da9:	jmp    0x420dad
  420dab:	mov    esp,0xdd2c4968
  420db0:	lods   eax,DWORD PTR ds:[esi]
  420db1:	test   DWORD PTR [ebp-0x4be667e],esi
  420db7:	xor    BYTE PTR [edi+0x469eb3c4],bh
  420dbd:	xor    al,0x8d
  420dbf:	sbb    BYTE PTR [ebp+esi*8+0x2a5823d2],dh
  420dc6:	(bad)  
  420dc8:	in     al,dx
  420dc9:	xor    eax,0x44f724c4
  420dce:	icebp  
  420dcf:	fiadd  WORD PTR fs:[edi]
  420dd2:	mov    bh,0xb4
  420dd4:	pop    ss
  420dd5:	outs   dx,BYTE PTR ds:[esi]
  420dd6:	xor    esp,edi
  420dd8:	xchg   esi,eax
  420dd9:	adc    bl,BYTE PTR [esi+0x3e]
  420ddc:	add    dh,BYTE PTR [ebp+0x75]
  420ddf:	rcr    DWORD PTR [esi],0x60
  420de2:	fdiv   st(6),st
  420de4:	jmp    0x420d81
  420de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420de7:	call   0xa54d70b1
  420dec:	sti    
  420ded:	pop    esi
  420dee:	adc    BYTE PTR [edx],bh
  420df0:	and    DWORD PTR [ebp-0x76],0x8875232c
  420df7:	push   edi
  420df8:	mov    ch,0xe4
  420dfb:	and    DWORD PTR [edi+edi*1-0x22],ebp
  420dff:	sbb    edx,eax
  420e01:	in     eax,0x12
  420e03:	(bad)  
  420e05:	scas   al,BYTE PTR es:[edi]
  420e06:	dec    esp
  420e07:	push   eax
  420e08:	mov    ebp,0xe81f4df9
  420e0d:	mov    ah,0x3f
  420e0f:	mov    eax,0x6f471eec
  420e14:	cmp    eax,ecx
  420e16:	xchg   edi,eax
  420e17:	arpl   WORD PTR ds:0xe87fec7,di
  420e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e1e:	enter  0xea8d,0xe
  420e22:	add    ah,BYTE PTR [bp+si+0x29]
  420e26:	push   ebx
  420e27:	dec    esi
  420e28:	sub    al,0x4d
  420e2a:	scas   al,BYTE PTR es:[edi]
  420e2b:	or     esp,ebp
  420e2d:	sahf   
  420e2e:	sar    BYTE PTR [esi+0x77275400],cl
  420e34:	jmp    0x28ff005c
  420e39:	mov    BYTE PTR [edi+0x4e4d4501],al
  420e3f:	loopne 0x420dd4
  420e41:	fistp  QWORD PTR [ebx]
  420e43:	sahf   
  420e44:	adc    DWORD PTR [ebx-0x1a],edi
  420e47:	dec    esp
  420e48:	mov    bl,0xe8
  420e4a:	mov    al,ds:0x6a5b17fb
  420e4f:	mov    ch,0x4
  420e51:	cmp    BYTE PTR [edi+0x54],ah
  420e54:	mov    al,ds:0x26e251fc
  420e59:	xchg   ecx,eax
  420e5a:	enter  0x8ec1,0xb0
  420e5e:	inc    edi
  420e5f:	xchg   BYTE PTR ds:0x6a7fd1d3,dl
  420e65:	adc    al,BYTE PTR [eax]
  420e67:	daa    
  420e68:	fnstsw WORD PTR [ebp+ebp*4-0x44bb96dd]
  420e6f:	mov    ebx,0x67718abb
  420e74:	fsub   DWORD PTR [ebp-0x78]
  420e77:	pop    eax
  420e78:	pop    esi
  420e79:	retf   
  420e7a:	ret    
  420e7b:	hlt    
  420e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e7d:	repnz mov bh,0x96
  420e80:	fs ret 
  420e82:	or     al,0x5c
  420e84:	cmp    eax,0xd77c9a11
  420e89:	and    ebx,DWORD PTR ds:0xba4ec52d
  420e8f:	adc    dl,BYTE PTR [ebx-0x29]
  420e92:	xor    ecx,ebp
  420e94:	aas    
  420e95:	xchg   ebp,eax
  420e96:	adc    BYTE PTR [esi],0xad
  420e99:	mov    dl,0xa4
  420e9b:	add    esp,DWORD PTR [esi+esi*4]
  420e9e:	leave  
  420e9f:	stos   DWORD PTR es:[edi],eax
  420ea0:	test   al,0x17
  420ea2:	push   ecx
  420ea3:	sbb    cl,BYTE PTR [esp+esi*1]
  420ea6:	fldenv [edi+edx*2]
  420ea9:	mov    bl,0xfc
  420eab:	test   eax,esp
  420ead:	fcom   st(4)
  420eaf:	mov    ds:0xcfd06fe4,eax
  420eb4:	pop    eax
  420eb5:	sub    bh,BYTE PTR [eax-0x1c656c75]
  420ebb:	adc    al,0x42
  420ebd:	xor    DWORD PTR [esi],esp
  420ebf:	inc    edx
  420ec0:	imul   edi,DWORD PTR ds:0x1ff9e232,0xd8ca3862
  420eca:	icebp  
  420ecb:	inc    ebx
  420ecc:	mov    es,esi
  420ece:	and    ch,bh
  420ed0:	adc    al,0x20
  420ed2:	mov    bl,0x70
  420ed4:	in     al,0x86
  420ed6:	test   eax,0x3023678d
  420edb:	sbb    al,0x2b
  420edd:	jmp    0x420ef6
  420edf:	repz (bad) 
  420ee1:	jecxz  0x420e71
  420ee3:	into   
  420ee4:	mov    esp,0x1d92685e
  420ee9:	fistp  DWORD PTR [eax-0x3fa32f15]
  420eef:	xchg   edi,eax
  420ef0:	rcr    bh,1
  420ef2:	adc    DWORD PTR [ebp+0x47f3d7f5],esp
  420ef8:	push   esi
  420ef9:	mov    esi,0xdd908ed2
  420efe:	fwait
  420eff:	push   ebp
  420f00:	ja     0x420f5c
  420f02:	mov    bh,0x30
  420f04:	(bad)  
  420f05:	ss repz mov edx,0xf838db90
  420f0c:	fsub   DWORD PTR [edi+esi*4]
  420f0f:	push   esi
  420f10:	jmp    0xa094:0x3cd4458b
  420f17:	xor    al,0x58
  420f19:	sahf   
  420f1a:	xchg   esp,eax
  420f1b:	out    dx,al
  420f1c:	mov    ah,0x11
  420f1e:	pushf  
  420f1f:	and    BYTE PTR [esp+esi*2+0x42],ah
  420f23:	pop    ebp
  420f24:	invd   
  420f26:	jmp    0x3dc1:0x361f35b4
  420f2d:	sbb    eax,0x9fce1fe5
  420f32:	jno    0x3cf4cb1
  420f38:	mov    esp,0x596ad5c6
  420f3d:	ret    
  420f3e:	add    al,0x7f
  420f40:	mov    ch,0x62
  420f42:	pop    eax
  420f43:	loopne 0x420ef1
  420f45:	jae    0x420f8a
  420f47:	aas    
  420f48:	adc    al,dh
  420f4a:	retf   
  420f4b:	ja     0x420f97
  420f4d:	jnp    0x420f0a
  420f4f:	sahf   
  420f50:	or     eax,0xb8e69c1d
  420f55:	and    DWORD PTR [edx+0x52694d6c],ecx
  420f5b:	dec    edi
  420f5c:	es in  eax,0xc
  420f5f:	repz and BYTE PTR [esi+0x4f],ch
  420f63:	pop    eax
  420f64:	inc    ebp
  420f65:	jnp    0x420f74
  420f67:	sbb    DWORD PTR [edi],edi
  420f69:	jecxz  0x420f7c
  420f6b:	inc    edx
  420f6c:	and    bl,ah
  420f6e:	ret    
  420f6f:	and    BYTE PTR [ebx-0x47ac7982],0x5e
  420f76:	push   esi
  420f77:	sub    DWORD PTR ds:0xae71d4a2,ebx
  420f7d:	rcl    DWORD PTR [ebx],1
  420f7f:	stos   DWORD PTR es:[edi],eax
  420f80:	pop    esi
  420f81:	sahf   
  420f82:	stos   BYTE PTR es:[edi],al
  420f83:	(bad)  
  420f84:	iret   
  420f85:	fs jo  0x420fb4
  420f88:	adc    DWORD PTR [eax+0x2e02f82e],edi
  420f8e:	repz leave 
  420f90:	mov    ds:0xa11a1cd9,eax
  420f95:	sti    
  420f96:	adc    al,bl
  420f98:	scas   eax,DWORD PTR es:[edi]
  420f99:	leave  
  420f9a:	neg    DWORD PTR [ecx-0x4d0c3784]
  420fa0:	shl    bh,1
  420fa2:	stc    
  420fa3:	stos   BYTE PTR es:[edi],al
  420fa4:	leave  
  420fa5:	dec    ecx
  420fa6:	mov    bh,0x3
  420fa8:	mov    ds:0x926d752a,al
  420fad:	dec    edi
  420fae:	addr16 loope 0x420f5a
  420fb1:	sub    eax,0x559115d7
  420fb6:	test   dh,0x9a
  420fb9:	xchg   edi,eax
  420fba:	mov    edi,0x31f9ec95
  420fbf:	and    BYTE PTR [ecx+0x51],dh
  420fc2:	push   ebp
  420fc3:	and    cl,bl
  420fc5:	dec    esi
  420fc6:	fs xchg ebx,eax
  420fc8:	icebp  
  420fc9:	adc    al,0x10
  420fcb:	fwait
  420fcc:	adc    ch,BYTE PTR [esi+0x19c30c0f]
  420fd2:	mov    eax,0x2fb29810
  420fd7:	pop    edi
  420fd8:	popa   
  420fd9:	jge    0x420fba
  420fdb:	jo     0x420f65
  420fdd:	adc    ch,bl
  420fdf:	sbb    DWORD PTR [ebx+0x7bc6be5b],esi
  420fe5:	xor    cl,bh
  420fe7:	sbb    eax,0xe6a6da18
  420fec:	xchg   edi,eax
  420fed:	pop    edx
  420fee:	mov    esp,0x576e2753
  420ff3:	xor    bl,cl
  420ff5:	mov    cl,BYTE PTR [esi+0x47]
  420ff8:	inc    esp
  420ff9:	rol    DWORD PTR [ebx-0x13],0x6d
  420ffd:	cmp    BYTE PTR [edx-0x52],dh
  421000:	daa    
  421001:	rcr    DWORD PTR [ebx+0x40c1a794],0xec
  421008:	xor    ecx,DWORD PTR [eax-0x73]
  42100b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100c:	xor    esi,DWORD PTR ds:0x597f
  421011:	outs   dx,BYTE PTR ds:[esi]
  421012:	dec    esp
  421013:	test   BYTE PTR [ebx+0x11ec14e4],dl
  421019:	sub    al,0x8c
  42101b:	test   eax,0x4c2e17a7
  421020:	xor    bh,BYTE PTR [edx+0x78]
  421023:	ror    DWORD PTR [edx],1
  421025:	in     eax,dx
  421026:	push   ebp
  421027:	sub    ah,BYTE PTR [eax]
  421029:	out    dx,al
  42102a:	xchg   edx,eax
  42102b:	push   esp
  42102c:	bound  esp,QWORD PTR [edx+0x67]
  42102f:	push   cs
  421030:	outs   dx,DWORD PTR ds:[esi]
  421031:	stos   DWORD PTR es:[edi],eax
  421032:	inc    ebp
  421033:	mov    esi,0x56462dc3
  421038:	cmp    DWORD PTR ds:0xfc372477,0xbf6ced8a
  421042:	xor    ebx,DWORD PTR ds:0x5025b0ea
  421048:	xor    DWORD PTR [edi+0x14],ebp
  42104b:	(bad)  
  42104c:	lods   al,BYTE PTR ds:[esi]
  42104d:	fcomp  QWORD PTR [eax+0x51]
  421050:	mov    edx,0xe84a3357
  421055:	ror    BYTE PTR [ecx+0x11],cl
  421058:	(bad)  
  421059:	jecxz  0x421071
  42105b:	addr16 and bh,dh
  42105e:	neg    DWORD PTR [edx+ecx*8+0x16]
  421062:	sub    DWORD PTR [ebp+eax*4-0x515757b3],ecx
  421069:	das    
  42106a:	adc    edi,DWORD PTR [ebx-0x5e7e1f4c]
  421070:	scas   eax,DWORD PTR es:[edi]
  421071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421072:	aas    
  421073:	jae    0x42104f
  421075:	int    0x8a
  421077:	popa   
  421078:	mov    edx,0x1dcb950
  42107d:	fdivr  DWORD PTR [eax-0x50ecfe80]
  421083:	inc    ecx
  421084:	aam    0x74
  421086:	out    0xf,eax
  421088:	popf   
  421089:	xlat   BYTE PTR ds:[ebx]
  42108a:	pusha  
  42108b:	cs addr16 push ss
  42108e:	sbb    BYTE PTR [eax-0x11],0xf8
  421092:	add    esi,0x8f21216b
  421098:	xor    DWORD PTR [edx],ebp
  42109a:	cmp    DWORD PTR [esi+0x6b1c7130],ebx
  4210a0:	lds    eax,FWORD PTR [esi-0x62]
  4210a3:	test   eax,0x9fa86a2e
  4210a8:	fwait
  4210a9:	scas   eax,DWORD PTR es:[edi]
  4210aa:	call   0xdeb3:0xfc832624
  4210b1:	sbb    cl,cl
  4210b3:	inc    esp
  4210b4:	mov    al,0x6d
  4210b6:	inc    ecx
  4210b7:	dec    ebp
  4210b8:	lds    edi,FWORD PTR [ebx-0x53]
  4210bb:	fld    TBYTE PTR [ecx+0x47]
  4210be:	and    ch,BYTE PTR [ebx]
  4210c0:	or     al,0x43
  4210c2:	imul   ecx,DWORD PTR [ebx-0x7a],0xc17b417f
  4210c9:	jp     0x42112b
  4210cb:	sbb    dh,bl
  4210cd:	stc    
  4210ce:	pop    es
  4210cf:	lea    ebp,[ebx]
  4210d1:	arpl   WORD PTR [esi],si
  4210d3:	jge    0x4210ee
  4210d5:	mov    esi,0xd7438341
  4210da:	std    
  4210db:	call   0x88d0:0x568af9ee
  4210e2:	les    ebx,FWORD PTR [esi+0x3d]
  4210e5:	test   DWORD PTR [eax+0x2b],0x6f9a3a71
  4210ec:	daa    
  4210ed:	outs   dx,DWORD PTR ds:[esi]
  4210ee:	xchg   esi,eax
  4210ef:	out    dx,eax
  4210f0:	pop    edi
  4210f1:	push   ebx
  4210f2:	call   0xd81b:0xf20300c4
  4210f9:	call   0xd76997a6
  4210fe:	add    al,0xb7
  421100:	in     eax,dx
  421101:	in     eax,0xd4
  421103:	leave  
  421104:	loope  0x421146
  421106:	sub    al,0x96
  421108:	push   ds
  421109:	jo     0x4210d0
  42110b:	add    BYTE PTR [esi],bl
  42110d:	(bad)  
  42110e:	aas    
  42110f:	rol    BYTE PTR [ebp+0x6e],0x55
  421113:	shr    DWORD PTR [edi-0x24],cl
  421116:	xchg   esp,eax
  421117:	arpl   WORD PTR [ecx+0x4b96866f],bp
  42111d:	mov    al,ds:0xa7d05076
  421122:	lds    eax,FWORD PTR [eax+eax*4-0x7d]
  421126:	cld    
  421127:	dec    ecx
  421128:	rcr    ebp,cl
  42112a:	xor    al,cl
  42112c:	mov    BYTE PTR [ecx+0x63c8366b],0x69
  421133:	div    DWORD PTR [edx]
  421135:	push   edi
  421136:	cmp    al,0x9e
  421138:	push   0x3713ad9
  42113d:	lods   eax,DWORD PTR ds:[esi]
  42113e:	inc    ebx
  42113f:	and    al,al
  421141:	fadd   DWORD PTR [ebx]
  421143:	sub    al,0xd0
  421145:	jo     0x421106
  421147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421148:	inc    esp
  421149:	mov    dh,0xe0
  42114b:	and    cl,bh
  42114d:	sub    eax,0x7092d320
  421152:	stos   DWORD PTR es:[edi],eax
  421153:	sub    DWORD PTR [edi-0x66],ebx
  421156:	clc    
  421157:	out    0xc2,eax
  421159:	retf   0xbd58
  42115c:	out    dx,al
  42115d:	mov    al,ds:0x30851311
  421162:	pusha  
  421163:	push   ss
  421164:	xchg   ecx,eax
  421165:	ja     0x421164
  421167:	mov    eax,ds:0x9acaf0e
  42116c:	int3   
  42116d:	xchg   ebp,eax
  42116e:	mov    ds:0x266e7fff,al
  421173:	adc    al,0xb4
  421175:	iret   
  421176:	in     eax,0x17
  421178:	xor    DWORD PTR [ecx-0x116264db],ebp
  42117e:	mov    cs,WORD PTR ss:[ebx]
  421181:	test   eax,0x4aeec700
  421186:	stc    
  421187:	jb     0x421161
  421189:	aaa    
  42118a:	dec    ebx
  42118b:	push   edx
  42118c:	and    bl,BYTE PTR [eax]
  42118e:	jl     0x42119b
  421190:	nop
  421191:	scas   eax,DWORD PTR es:[edi]
  421192:	or     dl,bl
  421194:	shl    BYTE PTR [ecx],1
  421196:	repnz inc ebx
  421198:	(bad)  
  421199:	stc    
  42119a:	mov    ds:0xcc3dcd78,eax
  42119f:	sti    
  4211a0:	lahf   
  4211a1:	pop    ss
  4211a2:	ins    DWORD PTR es:[edi],dx
  4211a3:	pop    ds
  4211a4:	inc    ebp
  4211a5:	adc    eax,0x4d33a38f
  4211aa:	or     eax,0xdf797f8a
  4211af:	jmp    eax
  4211b1:	push   cs
  4211b2:	jge    0x42113b
  4211b4:	xchg   esi,eax
  4211b5:	gs je  0x42122b
  4211b8:	xchg   dh,al
  4211ba:	cmp    ch,ah
  4211bc:	mov    BYTE PTR [eax+0x68127173],dh
  4211c2:	mov    ?,WORD PTR [ebx+0x4c]
  4211c5:	sti    
  4211c6:	add    BYTE PTR [esi-0x6b],0x6
  4211ca:	icebp  
  4211cb:	and    esi,edx
  4211cd:	in     eax,0xc0
  4211cf:	cmp    ecx,esi
  4211d1:	fld    st(5)
  4211d3:	dec    DWORD PTR [eax+0x7c]
  4211d6:	pop    esi
  4211d7:	mov    edi,0x33dd7e5c
  4211dc:	jmp    0x42120d
  4211de:	jo     0x4211fa
  4211e0:	pop    eax
  4211e1:	cmc    
  4211e2:	jmp    0x1d1022d2
  4211e7:	inc    ecx
  4211e8:	sahf   
  4211e9:	jl     0x4211b4
  4211eb:	mov    ah,0xd7
  4211ed:	cmp    DWORD PTR [ecx+ebx*4-0x61],ebx
  4211f1:	mov    eax,0x135f72f9
  4211f6:	mov    edi,0x80e4e2a9
  4211fb:	mov    ?,WORD PTR ds:[ecx-0x781c7f2a]
  421202:	shl    DWORD PTR [ebp+eiz*2-0x4f6559e8],1
  421209:	mov    edi,0x8b38cc4
  42120e:	cs retf 
  421210:	adc    DWORD PTR [ebx-0x2fcfa2a9],edi
  421216:	dec    ebp
  421217:	fs and bl,cl
  42121a:	adc    BYTE PTR [eax-0x7cfa583d],dh
  421220:	sub    eax,0x7f660ef9
  421225:	xor    DWORD PTR [ebx],0x680813a3
  42122b:	sub    DWORD PTR [ebx],ebp
  42122d:	jg     0x4211b8
  42122f:	(bad)  
  421230:	lea    ecx,[edi-0x72bc90e9]
  421236:	mov    gs,ecx
  421238:	mov    DWORD PTR [ebp-0x78fb67f],edi
  42123e:	or     esi,edi
  421240:	dec    edx
  421241:	mov    eax,ds:0x37b6f535
  421246:	cmp    ecx,edx
  421248:	arpl   WORD PTR ds:0x45258b04,bp
  42124e:	xchg   esp,eax
  42124f:	cmp    eax,0x53c15fa7
  421254:	shl    BYTE PTR [esi],cl
  421256:	mov    esi,0xf071ac8f
  42125b:	in     eax,0xa2
  42125d:	pusha  
  42125e:	(bad)  
  42125f:	jecxz  0x421242
  421261:	pushf  
  421262:	sbb    DWORD PTR ds:0xb6c978ff,ebx
  421268:	add    ch,BYTE PTR [eax]
  42126a:	xchg   edx,eax
  42126b:	sbb    eax,0xbc50e3c9
  421270:	nop
  421271:	lods   eax,DWORD PTR ds:[esi]
  421272:	jne    0x4212bf
  421274:	pop    ecx
  421275:	cmp    al,0x15
  421277:	dec    ebp
  421278:	or     eax,0x3a636bd6
  42127d:	(bad)  
  42127e:	fdiv   DWORD PTR [eax+0x31221ddf]
  421284:	pushf  
  421285:	out    0x21,al
  421287:	add    ebp,esp
  421289:	jae    0x42125d
  42128b:	mov    al,0x94
  42128d:	and    eax,0x7da973d0
  421292:	xchg   esi,eax
  421293:	sbb    eax,ecx
  421295:	sbb    DWORD PTR [ebx-0x42073a0c],0x7a
  42129c:	out    0x85,al
  42129e:	sbb    BYTE PTR [ebp-0x7c2c482e],dh
  4212a4:	xor    ah,ch
  4212a6:	mov    ecx,0x77741e15
  4212ab:	dec    ebx
  4212ac:	das    
  4212ad:	jp     0x42127d
  4212af:	test   BYTE PTR es:[ebx],dl
  4212b2:	jbe    0x4212d2
  4212b4:	cld    
  4212b5:	jo     0x421289
  4212b7:	mov    ds:0xcd166272,al
  4212bc:	cwde   
  4212bd:	out    dx,eax
  4212be:	inc    esp
  4212bf:	outs   dx,DWORD PTR ds:[esi]
  4212c0:	retf   0x1888
  4212c3:	and    eax,0xcac6f0ec
  4212c8:	loopne 0x42127f
  4212ca:	cmp    DWORD PTR ss:[ecx+ecx*1-0x3f0316cf],ecx
  4212d2:	xchg   ebp,eax
  4212d3:	jae    0x421278
  4212d5:	sub    edi,DWORD PTR [esi]
  4212d7:	hlt    
  4212d8:	mov    al,ds:0xd08c63b0
  4212dd:	dec    eax
  4212de:	jge    0x4212cf
  4212e0:	or     al,bl
  4212e2:	and    esp,DWORD PTR [ecx]
  4212e4:	jmp    0x86921ef8
  4212e9:	gs jg  0x4212ca
  4212ec:	(bad)  
  4212ed:	mov    edx,0xc45a0d11
  4212f2:	jecxz  0x4212bb
  4212f4:	mov    cl,BYTE PTR [ecx+0x7e17481b]
  4212fa:	retf   
  4212fb:	push   ebx
  4212fc:	inc    eax
  4212fd:	push   ebx
  4212fe:	in     eax,dx
  4212ff:	addr16 int 0x73
  421302:	push   ds
  421303:	rol    bh,1
  421305:	ret    0xf80a
  421308:	(bad)  
  421309:	cs jns 0x4212a3
  42130c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130d:	dec    esi
  42130e:	gs xchg ecx,eax
  421310:	leave  
  421311:	dec    esp
  421312:	cmp    dh,BYTE PTR [esi]
  421314:	sbb    DWORD PTR [ebx-0x35],0x1c5e2c82
  42131b:	xchg   DWORD PTR [edi+0x2dfb6bb3],ecx
  421321:	shl    BYTE PTR [ecx+esi*8+0x2d],1
  421325:	cmp    edi,0xffffffe4
  421328:	bound  eax,QWORD PTR [edi-0x4d4f9e1]
  42132e:	out    0x53,al
  421330:	xor    ebp,DWORD PTR [edi+0x22]
  421333:	in     eax,dx
  421334:	popa   
  421335:	inc    esi
  421336:	pop    esp
  421337:	(bad)
  42133a:	push   0x3d9b7f54
  42133f:	mov    dl,0x68
  421341:	xchg   ecx,eax
  421342:	fnsave [ecx]
  421344:	fisubr DWORD PTR [ecx]
  421346:	enter  0xe15e,0xe4
  42134a:	pop    edi
  42134b:	pop    edi
  42134c:	rcr    DWORD PTR [ebx],cl
  42134e:	adc    ebx,0x67
  421351:	cmc    
  421352:	pop    edx
  421353:	test   ch,ah
  421355:	mov    es,WORD PTR [ebp+ecx*2+0x44]
  421359:	into   
  42135a:	fsub   st(0),st
  42135c:	sub    DWORD PTR [ecx+ebx*2],0xffffff91
  421360:	mov    ch,BYTE PTR [eax]
  421362:	call   0x15df17bc
  421367:	xor    al,0xfb
  421369:	mov    ecx,DWORD PTR [ecx]
  42136b:	mov    al,ds:0x428d2f1a
  421371:	xchg   BYTE PTR [edx-0x5b],bl
  421374:	mov    ?,WORD PTR [eax]
  421376:	(bad)  
  421377:	out    0x1a,al
  421379:	fld    DWORD PTR [edx]
  42137b:	int    0xbf
  42137d:	jmp    0x515c:0xe096633
  421384:	mov    esp,0xb1ffba8c
  421389:	mov    edi,0x5d531d56
  42138e:	in     eax,0x86
  421390:	push   es
  421391:	out    dx,eax
  421392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421393:	loopne 0x4213b6
  421395:	aaa    
  421396:	jbe    0x421328
  421398:	sbb    BYTE PTR [eax+0x4b],ah
  42139b:	popa   
  42139c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42139d:	dec    ebx
  42139e:	mov    bl,0xe
  4213a0:	outs   dx,DWORD PTR ds:[esi]
  4213a1:	aad    0x18
  4213a3:	pop    ebx
  4213a4:	shufps xmm1,XMMWORD PTR [esi+0x58],0xb
  4213a9:	or     al,0x2c
  4213ab:	sub    al,0x67
  4213ad:	pop    edi
  4213ae:	cmp    al,0x6c
  4213b0:	jecxz  0x421414
  4213b2:	jne    0x421349
  4213b4:	and    BYTE PTR [esi-0x28],ah
  4213b7:	out    0xbc,al
  4213b9:	jmp    ecx
  4213bb:	test   eax,0x85c2eb43
  4213c0:	jl     0x4213b9
  4213c2:	add    al,0x2a
  4213c4:	jmp    0x1ee9d023
  4213c9:	jmp    0x7d03:0xbfcaf5e1
  4213d0:	nop
  4213d1:	xchg   edx,eax
  4213d2:	cld    
  4213d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d4:	jge    0x4213af
  4213d6:	ins    BYTE PTR es:[edi],dx
  4213d7:	bound  esp,QWORD PTR [ebp+0x2e5dfc4e]
  4213dd:	test   eax,0x5303f79e
  4213e2:	mov    ecx,0xd227b5c0
  4213e7:	lea    ebp,es:0x69a35d07
  4213ee:	mov    bh,0xa3
  4213f0:	das    
  4213f1:	dec    ebp
  4213f2:	cli    
  4213f3:	mov    esp,0xae83b330
  4213f8:	fwait
  4213f9:	scas   eax,DWORD PTR es:[edi]
  4213fa:	jb     0x421402
  4213fc:	xchg   ebp,eax
  4213fd:	pop    ds
  4213fe:	loopne 0x421455
  421400:	arpl   WORD PTR [esp+0x6e],ax
  421404:	mov    ?,WORD PTR [ecx-0x2a521d28]
  42140a:	sbb    eax,0xc7df6543
  42140f:	dec    edi
  421410:	les    ebp,FWORD PTR [edx]
  421412:	adc    DWORD PTR [edi+0x5f52781],esp
  421418:	fdiv   DWORD PTR [ebp+0x101cfa81]
  42141e:	outs   dx,BYTE PTR ds:[esi]
  42141f:	xor    eax,0xcc58b80c
  421424:	aas    
  421425:	or     DWORD PTR [edi-0x43],esp
  421428:	(bad)  
  421429:	cli    
  42142a:	mov    eax,0x5e12a2ee
  42142f:	push   ecx
  421430:	pusha  
  421431:	aas    
  421432:	icebp  
  421433:	add    ch,BYTE PTR ds:0xe0190a5f
  421439:	loope  0x421451
  42143b:	push   0x85e1840a
  421440:	test   DWORD PTR [ebp-0x6e],0x223ae3aa
  421447:	and    eax,ebx
  421449:	xor    eax,DWORD PTR ds:0x5dd332c4
  42144f:	or     DWORD PTR ds:0xf775b460,0x10962df8
  421459:	daa    
  42145a:	ficomp DWORD PTR [eax-0x2fc58964]
  421460:	inc    ebp
  421461:	push   esp
  421462:	pop    ecx
  421463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421464:	pop    ebx
  421465:	push   ecx
  421466:	push   ds
  421467:	sub    bl,BYTE PTR [ecx+0x5c2defb7]
  42146d:	js     0x4213ef
  42146f:	call   DWORD PTR [ecx+0xa]
  421472:	fs jb  0x421403
  421475:	or     cl,BYTE PTR [ecx]
  421477:	ret    
  421478:	sbb    BYTE PTR [edi+0x23],dh
  42147b:	outs   dx,DWORD PTR ds:[esi]
  42147c:	mov    edi,0x889c946b
  421481:	scas   eax,DWORD PTR es:[edi]
  421482:	stos   BYTE PTR es:[edi],al
  421483:	push   ss
  421484:	inc    edi
  421485:	in     eax,dx
  421486:	xor    ah,BYTE PTR [edi]
  421488:	int3   
  421489:	repz push ss
  42148b:	mov    edi,0xeb02a4bd
  421490:	jmp    0x42145b
  421492:	jne    0x42146d
  421494:	jmp    0x4214a2
  421496:	push   ebp
  421497:	add    eax,0x2f1bee0d
  42149c:	(bad)  
  42149d:	pop    esi
  42149e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42149f:	xchg   ebx,eax
  4214a0:	jle    0x421519
  4214a2:	imul   edi,DWORD PTR [esi],0x6b
  4214a5:	(bad)  
  4214a6:	dec    edi
  4214a7:	add    eax,DWORD PTR ds:0xb04599fd
  4214ad:	adc    al,BYTE PTR [eax+0x17]
  4214b0:	jmp    0x4214c1
  4214b2:	push   ecx
  4214b3:	dec    edi
  4214b4:	lea    eax,[ebx+0x17]
  4214b7:	push   esi
  4214b8:	xchg   esp,eax
  4214b9:	or     al,0x18
  4214bb:	imul   esp,DWORD PTR [edi+0x6cbeecc4],0xfffffffc
  4214c2:	aam    0xb
  4214c4:	dec    edi
  4214c5:	jle    0x421521
  4214c7:	xchg   DWORD PTR [ecx],esi
  4214c9:	loopne 0x4214a5
  4214cb:	inc    edx
  4214cc:	mov    ebp,0xe77e3267
  4214d1:	cld    
  4214d2:	fnsave [edi-0xd]
  4214d5:	idiv   BYTE PTR [ebx+0x7f]
  4214d8:	out    dx,al
  4214d9:	cmp    BYTE PTR [eax+0x57],al
  4214dc:	imul   BYTE PTR [edx+edi*8+0x5]
  4214e0:	sub    dh,BYTE PTR gs:0x70fd372
  4214e7:	mov    edi,0x4e751c77
  4214ec:	inc    esp
  4214ed:	sbb    eax,0xbf70b494
  4214f2:	xchg   edi,eax
  4214f3:	mov    dl,0xe1
  4214f5:	xchg   edx,eax
  4214f6:	and    al,0x9d
  4214f8:	jl     0x42149a
  4214fa:	gs in  eax,dx
  4214fc:	push   0x2387021b
  421501:	mov    edi,0x43e4ef8c
  421506:	fcmovnu st,st(4)
  421508:	xchg   esp,eax
  421509:	sub    dl,BYTE PTR [edx+ebx*1]
  42150c:	rol    ch,cl
  42150e:	jns    0x4214db
  421510:	fnsave [esi+0x482be20]
  421516:	daa    
  421517:	add    DWORD PTR [esi],eax
  421519:	mov    eax,DWORD PTR [edi+0x9ec0e]
  42151f:	imul   ecx,DWORD PTR [ebx-0x59],0xffffff82
  421523:	sbb    ah,BYTE PTR [ebx+0x6a526b5e]
  421529:	xlat   BYTE PTR ds:[ebx]
  42152a:	ins    BYTE PTR es:[edi],dx
  42152b:	and    al,0x2a
  42152d:	std    
  42152e:	adc    esp,DWORD PTR [ebx-0x3e]
  421531:	pop    ebp
  421532:	cdq    
  421533:	loope  0x42150d
  421535:	jo     0x421549
  421537:	xchg   ebx,eax
  421538:	shr    DWORD PTR [edi-0x7f],0xe3
  42153c:	popf   
  42153d:	push   esp
  42153e:	into   
  42153f:	and    dh,BYTE PTR [esi+0x35cd5f9d]
  421545:	mov    ds:0xd8337c14,eax
  42154a:	fcomp  DWORD PTR [edi-0x7254e43a]
  421550:	es popa 
  421552:	enter  0xb290,0x63
  421556:	xchg   DWORD PTR [ecx-0x339f10ff],ecx
  42155c:	add    ah,BYTE PTR [ebp+ebp*4+0x27]
  421560:	sub    BYTE PTR [eax],0x0
  421563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421564:	sar    BYTE PTR [esi+0x40],cl
  421567:	pop    ebx
  421568:	mov    ecx,0x504d389d
  42156d:	and    al,0xe
  421570:	push   edi
  421571:	sbb    ch,dh
  421573:	xor    ch,BYTE PTR [edi]
  421575:	xchg   edi,eax
  421576:	xlat   BYTE PTR ds:[ebx]
  421577:	mov    edi,0x49f50812
  42157c:	jg     0x421547
  42157e:	(bad)  
  42157f:	push   0xffffffcf
  421581:	daa    
  421582:	inc    ecx
  421583:	gs sahf 
  421585:	arpl   WORD PTR [eax],si
  421587:	gs loope 0x4215bf
  42158a:	push   edi
  42158b:	jb     0x4215e8
  42158d:	mov    BYTE PTR [edx*1-0x1195c744],0x92
  421595:	out    dx,al
  421596:	and    ch,dl
  421598:	aad    0xba
  42159a:	pop    edx
  42159b:	mov    bl,0x46
  42159d:	daa    
  42159e:	cmc    
  42159f:	xchg   edx,eax
  4215a0:	je     0x42154f
  4215a2:	and    BYTE PTR [edx],dl
  4215a4:	push   eax
  4215a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215a6:	shl    DWORD PTR [esi+0x5717a5a2],cl
  4215ac:	dec    BYTE PTR [ebx+0x1b96448b]
  4215b2:	cwde   
  4215b3:	dec    ecx
  4215b4:	pop    esp
  4215b5:	mov    ecx,0x39312a57
  4215ba:	jo     0x42160a
  4215bc:	push   eax
  4215bd:	jb     0x4215da
  4215bf:	ins    BYTE PTR es:[edi],dx
  4215c0:	sbb    edx,DWORD PTR ds:0x10bbef57
  4215c6:	push   ds
  4215c7:	cmp    dl,BYTE PTR [ebp-0x2e]
  4215ca:	xchg   DWORD PTR [edx+0xe],ebp
  4215cd:	(bad)  
  4215ce:	sub    ebp,esi
  4215d0:	jl     0x42155c
  4215d2:	xchg   dl,bh
  4215d4:	pop    ebx
  4215d5:	in     eax,0xb7
  4215d7:	mov    bl,BYTE PTR [esi]
  4215d9:	jnp    0x421575
  4215db:	add    esp,0xffffffc3
  4215de:	add    al,BYTE PTR [edx]
  4215e0:	mov    cl,0x8c
  4215e2:	ins    DWORD PTR es:[edi],dx
  4215e3:	and    DWORD PTR ds:0xf593303,0x3dba4fdf
  4215ed:	push   edx
  4215ee:	cli    
  4215ef:	fcomp  QWORD PTR [ecx+esi*2]
  4215f2:	inc    ebp
  4215f3:	arpl   WORD PTR es:[edi],bp
  4215f6:	mov    cl,0x7b
  4215f8:	mov    ds:0xd86080b6,eax
  4215fd:	js     0x421613
  4215ff:	push   edx
  421600:	js     0x4215a0
  421602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421603:	enter  0x7a1a,0xfe
  421607:	add    ebp,DWORD PTR [ecx+0x3]
  42160a:	xor    al,0x51
  42160c:	loop   0x421662
  42160e:	jg     0x4215f7
  421610:	dec    ecx
  421611:	fwait
  421612:	mov    edi,0x7b8a8f7e
  421617:	jecxz  0x42167c
  421619:	jnp    0x421643
  42161b:	sbb    al,0xcc
  42161d:	or     eax,0x7884110d
  421622:	or     edx,DWORD PTR [edi]
  421624:	sub    BYTE PTR [esi],ch
  421626:	fimul  WORD PTR [ebx]
  421628:	jecxz  0x421632
  42162a:	push   ebp
  42162b:	xor    DWORD PTR [edx],ecx
  42162d:	mov    ds:0x280d5888,eax
  421632:	sahf   
  421633:	or     edx,0x8b4e3ceb
  421639:	jle    0x421684
  42163b:	and    eax,DWORD PTR [ebx]
  42163d:	jb     0x4216ac
  42163f:	popf   
  421640:	call   0x3a6dda3a
  421645:	sub    esi,DWORD PTR [ebp+esi*4+0x12]
  421649:	fdiv   DWORD PTR [ecx]
  42164b:	sbb    dh,dl
  42164d:	sub    ebx,edx
  42164f:	dec    esp
  421650:	add    esp,DWORD PTR [ebp+eax*8+0x47]
  421654:	addr16 dec edx
  421656:	call   0x8774be07
  42165b:	and    al,0xe
  42165e:	jb     0x421681
  421660:	adc    bl,bh
  421662:	xchg   edx,eax
  421663:	out    dx,eax
  421664:	lock add al,0x7d
  421667:	mov    al,ds:0xd4cbed23
  42166c:	pusha  
  42166d:	xor    bl,ch
  42166f:	mov    DWORD PTR [ecx+ecx*2-0x4b],esp
  421673:	xchg   esi,eax
  421674:	add    bl,dh
  421676:	test   eax,0x99f8f671
  42167b:	dec    eax
  42167c:	ins    DWORD PTR es:[edi],dx
  42167d:	push   eax
  42167e:	jge    0x4216d6
  421680:	dec    edx
  421681:	sub    bl,BYTE PTR [edx]
  421683:	sbb    ebp,DWORD PTR [ebx+0x1a200fa4]
  421689:	sar    esi,cl
  42168b:	outs   dx,BYTE PTR ds:[esi]
  42168c:	jl     0x421708
  42168e:	sub    eax,0x7d2e82e7
  421693:	sbb    BYTE PTR [ecx+0x2c],ah
  421696:	sbb    DWORD PTR [ecx],esi
  421698:	retf   
  421699:	sub    eax,eax
  42169b:	(bad)  
  42169c:	jmp    0x42170c
  42169e:	dec    esi
  42169f:	pop    ds
  4216a0:	adc    eax,0x8d0fd956
  4216a5:	pop    ss
  4216a6:	sub    DWORD PTR [ebx+0x28c439a1],ebp
  4216ac:	jle    0x42165c
  4216ae:	dec    eax
  4216af:	mov    esi,0x73fdb9a8
  4216b4:	adc    esp,ebp
  4216b6:	cmp    DWORD PTR [eax-0x1c],ebp
  4216b9:	sub    DWORD PTR [esi],eax
  4216bb:	sub    dl,BYTE PTR [edi+eax*8+0x438ee597]
  4216c2:	push   ebx
  4216c3:	cmp    edx,esi
  4216c5:	stc    
  4216c6:	pop    eax
  4216c7:	mov    cs,WORD PTR [ebp-0x32d4b3]
  4216cd:	lods   eax,DWORD PTR ds:[esi]
  4216ce:	jne    0x42172a
  4216d0:	(bad)  
  4216d1:	sbb    esp,DWORD PTR [edi+0x64]
  4216d4:	mov    edi,0x9ee80586
  4216d9:	and    al,0xc
  4216db:	sub    esp,esp
  4216dd:	icebp  
  4216de:	sar    DWORD PTR [edx-0x7ffc44ab],1
  4216e4:	mov    eax,ds:0xdce3bc8a
  4216e9:	sbb    eax,0x92a348e7
  4216ee:	cmp    edx,DWORD PTR [esi-0x21]
  4216f1:	dec    esi
  4216f2:	fldenv [ebx-0x27b2cc95]
  4216f8:	inc    ebx
  4216f9:	sub    dh,BYTE PTR [ebx]
  4216fb:	jae    0x421693
  4216fd:	mov    ds:0xdf25cf0d,eax
  421702:	pop    es
  421703:	pop    DWORD PTR [esi+edi*8]
  421706:	pop    edx
  421707:	push   ss
  421708:	rol    BYTE PTR ds:0xf26af405,0x18
  42170f:	addr16 (bad) 
  421712:	or     al,0xd6
  421714:	dec    ebp
  421715:	daa    
  421716:	pop    esi
  421717:	and    al,0xc9
  421719:	in     eax,0x8e
  42171b:	inc    edx
  42171c:	out    dx,eax
  42171d:	call   0xec4f:0x7e5a0981
  421724:	jae    0x421797
  421726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421727:	or     DWORD PTR [ebx],ecx
  421729:	mov    ebp,?
  42172b:	in     eax,dx
  42172c:	mov    al,0xce
  42172e:	xor    al,0xe0
  421730:	jmp    0xca9f:0x35bba166
  421737:	sub    eax,0x27eb2062
  42173c:	xor    eax,0x6af62362
  421741:	push   ds
  421742:	jp     0x42174b
  421744:	mov    edi,0xdf0f89c5
  421749:	test   DWORD PTR [edi-0x6b],edi
  42174c:	add    DWORD PTR [esi],edi
  42174e:	mov    ds,WORD PTR [ebp+0x2f]
  421751:	sub    al,0x84
  421753:	lods   eax,DWORD PTR ds:[esi]
  421754:	inc    esi
  421755:	jge    0x4217aa
  421757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421758:	out    dx,al
  421759:	hlt    
  42175a:	leave  
  42175b:	lods   eax,DWORD PTR ds:[esi]
  42175c:	aad    0x7a
  42175e:	adc    DWORD PTR [ebp-0x3b],ecx
  421761:	rcl    DWORD PTR [edx-0x35811a78],cl
  421767:	or     al,0xf7
  421769:	je     0x421784
  42176b:	js     0x4216ef
  42176d:	sbb    DWORD PTR [esi+0x30b5e788],edx
  421773:	sub    ebx,edx
  421775:	dec    eax
  421776:	mov    esp,0xd505d159
  42177b:	and    esi,0xffffffac
  42177e:	fisub  DWORD PTR [esi+ebx*2-0x57]
  421782:	mov    esp,0xaefcf24b
  421787:	lods   eax,DWORD PTR ds:[esi]
  421788:	rcr    DWORD PTR [edi+0x291eb820],0x72
  42178f:	mov    al,0xe7
  421791:	sbb    ecx,DWORD PTR [edx+0x242a21c0]
  421797:	aaa    
  421798:	pusha  
  421799:	adc    eax,0xc325c994
  42179e:	dec    edx
  42179f:	dec    ecx
  4217a0:	xchg   edi,eax
  4217a1:	pop    ss
  4217a2:	mov    cs,WORD PTR [edi+0x7b3705cc]
  4217a8:	jp     0x42172d
  4217aa:	mov    ebp,0x467d2b74
  4217af:	(bad)  
  4217b0:	pop    edx
  4217b1:	inc    ebp
  4217b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b3:	jne    0x4217ea
  4217b5:	aad    0x1b
  4217b7:	push   esi
  4217b8:	xchg   esi,eax
  4217b9:	sbb    BYTE PTR [eax-0x37435196],cl
  4217bf:	cmp    BYTE PTR [ebx-0x7832db1b],bl
  4217c5:	jge    0x4217ce
  4217c7:	mov    cl,0xa7
  4217c9:	mov    dh,0xda
  4217cb:	nop
  4217cc:	pop    edx
  4217cd:	mov    dh,0x44
  4217cf:	ss icebp 
  4217d1:	lods   eax,DWORD PTR ds:[esi]
  4217d2:	iret   
  4217d3:	maskmovq mm1,(bad)
  4217d4:	test   DWORD PTR [edx],0xf35647ad
  4217da:	cli    
  4217db:	hlt    
  4217dc:	aas    
  4217dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217de:	pop    es
  4217df:	lds    ebp,FWORD PTR [ecx-0x14]
  4217e2:	outs   dx,BYTE PTR ds:[esi]
  4217e3:	jnp    0x421797
  4217e5:	imul   ebp,edi,0x7402fa6c
  4217eb:	cmp    ah,BYTE PTR [edx-0x24736f26]
  4217f1:	gs sti 
  4217f3:	xor    DWORD PTR [edi+esi*1+0x37],ebx
  4217f7:	pushf  
  4217f8:	test   BYTE PTR [esi-0x1f527c38],bl
  4217fe:	mov    ecx,0xc365d537
  421803:	push   0x57
  421805:	popf   
  421806:	jno    0x421873
  421808:	or     BYTE PTR [edi-0x3d6f552d],al
  42180e:	push   DWORD PTR [eax-0x655c3c07]
  421814:	sub    BYTE PTR [ebx+eax*2],dh
  421817:	arpl   dx,si
  421819:	aaa    
  42181a:	adc    eax,0x546bb69c
  42181f:	dec    edi
  421820:	lods   al,BYTE PTR ds:[esi]
  421821:	or     ch,BYTE PTR [ecx-0x53]
  421824:	sbb    eax,DWORD PTR [esi+0x4e]
  421827:	sub    dh,BYTE PTR [eax]
  421829:	imul   ebx,DWORD PTR [edi+0x28],0xfffffff1
  42182d:	pop    esi
  42182e:	imul   eax,DWORD PTR [eax-0x297850c7],0xf92076c2
  421838:	mov    ah,BYTE PTR [edi-0x18a4fe5b]
  42183e:	xchg   DWORD PTR ds:[ecx-0x6f9d3865],esp
  421845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421846:	add    DWORD PTR [ebx],0xbd69b286
  42184c:	jae    0x421879
  42184e:	dec    esi
  42184f:	or     al,0x3b
  421851:	mov    ah,0xaa
  421853:	pop    ds
  421854:	lock inc esi
  421856:	cs ja  0x42184e
  421859:	mov    ds:0xa005cd82,al
  42185e:	js     0x4218ad
  421860:	in     eax,0xe0
  421862:	mov    cl,0x56
  421864:	pop    edx
  421865:	mov    bh,0xd9
  421867:	cmp    BYTE PTR [ecx-0x357d003d],bh
  42186d:	test   eax,0xe17d0b44
  421872:	fs pop es
  421874:	push   edx
  421875:	mov    ds:0xf0459eef,al
  42187a:	daa    
  42187b:	xchg   esp,eax
  42187c:	fisttp WORD PTR [edi+0x6]
  42187f:	in     al,0xc3
  421881:	stos   DWORD PTR es:[edi],eax
  421882:	lahf   
  421883:	jecxz  0x421864
  421885:	mov    esi,0x2c39dd2a
  42188a:	lock lahf 
  42188c:	jp     0x42185f
  42188e:	lods   eax,DWORD PTR ds:[esi]
  42188f:	ss ret 0x2b41
  421893:	adc    ecx,0xadf47637
  421899:	rcl    DWORD PTR [eax-0x462307b2],cl
  42189f:	inc    ecx
  4218a0:	jge    0x421853
  4218a2:	fist   WORD PTR ds:0x87d6f0e8
  4218a8:	sbb    BYTE PTR [esi+0x3cbbe712],bl
  4218ae:	in     al,0x7b
  4218b0:	outs   dx,BYTE PTR ds:[esi]
  4218b1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4218b3:	leave  
  4218b4:	mov    esp,0x814d1ee3
  4218b9:	test   BYTE PTR [eax-0x5ee51cf7],al
  4218bf:	idiv   BYTE PTR [eax+edx*4+0x11]
  4218c3:	mov    bl,0x3c
  4218c5:	jnp    0x421910
  4218c7:	mov    esp,0x7cb5b76a
  4218cc:	add    eax,0xf923123d
  4218d1:	jmp    0x46f3f6df
  4218d6:	mov    ds:0x83298588,al
  4218db:	stos   BYTE PTR es:[edi],al
  4218dc:	(bad)  [ebx+0x48034b1f]
  4218e2:	or     BYTE PTR [edx+0x6f],al
  4218e5:	push   ebx
  4218e6:	cs mov bh,0x9a
  4218e9:	test   eax,0xbccd3d2
  4218ee:	rep stos DWORD PTR es:[edi],eax
  4218f0:	and    ebx,DWORD PTR [ebx+0x48]
  4218f3:	jle    0x421941
  4218f5:	jo     0x4218e5
  4218f7:	stos   DWORD PTR es:[edi],eax
  4218f8:	inc    edx
  4218f9:	add    ebp,edx
  4218fb:	inc    eax
  4218fc:	js     0x4218d9
  4218fe:	out    dx,al
  4218ff:	inc    edi
  421900:	push   edx
  421901:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421903:	inc    ecx
  421904:	and    DWORD PTR [ecx],ecx
  421906:	add    ch,dl
  421908:	sbb    al,0x93
  42190a:	inc    esi
  42190b:	daa    
  42190c:	leave  
  42190d:	push   edi
  42190e:	fdiv   DWORD PTR [ebx-0x10]
  421911:	sbb    ebp,esi
  421913:	push   0xb8a18ecd
  421918:	mov    ds:0x501bcea0,al
  42191d:	iret   
  42191e:	dec    esp
  42191f:	pop    esp
  421920:	mov    BYTE PTR [esi+0x4b],al
  421923:	sar    DWORD PTR [ecx-0x5d],0xd7
  421927:	pushf  
  421928:	pop    ds
  421929:	and    eax,0x31763ed1
  42192e:	add    BYTE PTR [eax+eax*8],0xc0
  421932:	adc    eax,eax
  421934:	push   esp
  421935:	add    ecx,esi
  421937:	sub    eax,0xa056ffc9
  42193c:	(bad)  
  42193e:	add    al,0x85
  421940:	loop   0x42199e
  421942:	ss pop ds
  421944:	jns    0x421955
  421946:	mov    esi,0x8f3fe439
  42194b:	mov    bl,cl
  42194d:	cli    
  42194e:	xchg   ecx,eax
  42194f:	sbb    eax,0x5ef9cdba
  421954:	test   BYTE PTR [ebp-0x7b591af1],bh
  42195a:	aas    
  42195b:	mov    bl,0x5c
  42195d:	test   al,ah
  42195f:	pop    edi
  421960:	lahf   
  421961:	rol    al,0x57
  421964:	out    0x6,al
  421966:	and    al,BYTE PTR fs:[edx]
  421969:	and    al,0x49
  42196b:	or     BYTE PTR [ecx+0x60d7e95b],cl
  421971:	test   al,0x6f
  421973:	dec    esp
  421974:	iret   
  421975:	(bad)  
  421976:	pop    esi
  421977:	dec    edx
  421978:	call   0x4fb4f8b5
  42197d:	mov    ebp,DWORD PTR [ecx-0x46d9d93d]
  421983:	sub    cl,BYTE PTR [eax-0x5fb51de5]
  421989:	mov    esp,0x6697b1e0
  42198e:	std    
  42198f:	daa    
  421990:	or     al,0x8a
  421992:	cmp    dh,ah
  421994:	add    esp,edi
  421996:	push   0xffffffc8
  421998:	ss mov al,0x3c
  42199b:	push   eax
  42199c:	shl    DWORD PTR [ecx],1
  42199e:	jmp    0xf69e:0xa364595
  4219a5:	push   eax
  4219a6:	rol    DWORD PTR [ecx],cl
  4219a8:	inc    esp
  4219a9:	or     edx,ebx
  4219ab:	fwait
  4219ac:	rcr    dh,cl
  4219ae:	lss    esi,FWORD PTR [eax]
  4219b1:	test   BYTE PTR [ebx-0x66e89467],dl
  4219b7:	(bad)  
  4219b8:	xchg   ecx,eax
  4219b9:	loopne 0x4219d7
  4219bb:	jno    0x421a07
  4219bd:	jmp    0xdf907777
  4219c2:	inc    edx
  4219c3:	iret   
  4219c4:	sub    bl,BYTE PTR [edi]
  4219c6:	cmp    eax,0x1972c98e
  4219cb:	(bad)  
  4219cd:	add    ebp,esi
  4219cf:	hlt    
  4219d0:	pop    esi
  4219d1:	pop    ecx
  4219d2:	mov    dl,0x47
  4219d4:	mov    ch,0x4
  4219d6:	aad    0x36
  4219d8:	or     cl,dl
  4219da:	ret    0x8fd3
  4219dd:	not    DWORD PTR [eax+0x31]
  4219e0:	or     edi,esi
  4219e2:	adc    esi,ecx
  4219e4:	das    
  4219e5:	cdq    
  4219e6:	cmp    al,bl
  4219e8:	push   ss
  4219e9:	shr    BYTE PTR [esp+edi*4+0x23],0x5
  4219ee:	pop    esp
  4219ef:	dec    edi
  4219f0:	or     eax,0x74d855bb
  4219f5:	add    bh,BYTE PTR [ecx]
  4219f7:	mov    DWORD PTR [edi+0x4317ef53],esi
  4219fd:	stos   DWORD PTR es:[edi],eax
  4219fe:	push   esp
  4219ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a00:	pop    edx
  421a01:	cld    
  421a02:	inc    ecx
  421a03:	sbb    DWORD PTR [ecx+ecx*2-0x1f09faa1],0xffffffb3
  421a0b:	inc    ecx
  421a0c:	add    eax,0x4e4b820a
  421a11:	mov    eax,ds:0x529a893c
  421a16:	or     eax,0x9c876c01
  421a1b:	pop    edx
  421a1c:	ds int 0xff
  421a1f:	mov    ebp,0x7630794b
  421a24:	pop    esp
  421a25:	mov    ebp,0x3131d71b
  421a2a:	fdivr  st(2),st
  421a2c:	pop    ecx
  421a2d:	dec    ecx
  421a2e:	inc    ecx
  421a2f:	jae    0x421a3c
  421a31:	mov    ds:0x441d769e,eax
  421a36:	xchg   edi,eax
  421a37:	xor    dh,bh
  421a39:	push   ebp
  421a3a:	int3   
  421a3b:	xchg   ebp,eax
  421a3c:	fimul  DWORD PTR [edx-0x1e]
  421a3f:	sbb    BYTE PTR [esi-0x22],ah
  421a42:	pop    edi
  421a43:	inc    esi
  421a44:	and    bh,BYTE PTR [edi*8-0xed02182]
  421a4b:	dec    edx
  421a4c:	add    edi,eax
  421a4e:	fs mov bl,0x3e
  421a51:	out    0xad,al
  421a53:	mov    DWORD PTR [ecx-0x463921a8],ebp
  421a59:	(bad)  
  421a5a:	lods   al,BYTE PTR ds:[esi]
  421a5b:	cdq    
  421a5c:	sbb    al,bh
  421a5e:	mov    al,0x61
  421a60:	not    BYTE PTR [esi]
  421a62:	imul   edi,DWORD PTR [esi+0x15],0x16
  421a66:	jmp    0x1414903e
  421a6b:	jg     0x421a8c
  421a6d:	mov    ah,0xd8
  421a6f:	test   al,0x95
  421a71:	adc    eax,ebp
  421a73:	jns    0x421a90
  421a75:	jae    0x421a12
  421a77:	mov    edi,0x3b41d5be
  421a7c:	xor    eax,0x51443c21
  421a81:	(bad)
  421a84:	lods   al,BYTE PTR ds:[esi]
  421a85:	and    DWORD PTR [ecx],ecx
  421a87:	int3   
  421a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a89:	mov    al,0x6
  421a8b:	pop    esp
  421a8c:	sbb    al,0x39
  421a8e:	sub    eax,0x575a7bf
  421a93:	stos   DWORD PTR es:[edi],eax
  421a94:	ins    BYTE PTR es:[edi],dx
  421a95:	(bad)  [edx-0x25180071]
  421a9b:	sbb    DWORD PTR [ebx],edi
  421a9d:	mov    ah,bl
  421a9f:	sub    ecx,DWORD PTR ds:0x7799b9e7
  421aa5:	dec    ebp
  421aa6:	pop    ss
  421aa7:	xchg   edi,eax
  421aa8:	in     eax,0x3f
  421aaa:	inc    edi
  421aab:	xchg   esp,eax
  421aac:	mov    ebp,0x69b4611
  421ab1:	mov    cl,0xa9
  421ab3:	rcr    BYTE PTR [esi+0x1b],cl
  421ab6:	imul   ebp,DWORD PTR [edi+ecx*1-0xd96ade2],0x1ac554c6
  421ac1:	add    DWORD PTR [ecx],ebp
  421ac3:	aas    
  421ac4:	mov    cl,0x92
  421ac6:	mov    BYTE PTR [ecx+0x2a1ba80d],dh
  421acc:	out    dx,eax
  421acd:	rcl    DWORD PTR [esp+ecx*8-0x124383f3],1
  421ad4:	dec    edx
  421ad5:	out    0xf8,eax
  421ad7:	scas   eax,DWORD PTR es:[edi]
  421ad8:	sbb    eax,0xc2f3305e
  421add:	and    al,0x85
  421adf:	test   ah,dl
  421ae1:	mov    ebp,DWORD PTR [esi+0xb]
  421ae4:	inc    edi
  421ae5:	(bad)  
  421ae7:	adc    DWORD PTR ds:0xe16b5225,0x34
  421aee:	dec    ecx
  421aef:	ret    0x23dd
  421af2:	lods   al,BYTE PTR ds:[esi]
  421af3:	ja     0x421a88
  421af5:	and    eax,ebp
  421af7:	popf   
  421af8:	pop    ebx
  421af9:	out    0x21,al
  421afb:	mov    ds:0xce0f928c,al
  421b00:	pop    ecx
  421b01:	and    BYTE PTR [esp+ebx*2],0x45
  421b05:	and    DWORD PTR [ebx-0x35d3ab46],ecx
  421b0b:	les    esi,FWORD PTR [edi]
  421b0d:	iret   
  421b0e:	adc    DWORD PTR ds:0x76f196a8,edx
  421b14:	push   ecx
  421b15:	pop    ss
  421b16:	repz cmp BYTE PTR [edx],al
  421b19:	sbb    BYTE PTR [eax+0x6d41e9b6],ah
  421b1f:	aam    0x51
  421b21:	mov    al,0x68
  421b23:	lahf   
  421b24:	sbb    dl,bl
  421b26:	sbb    eax,0x26
  421b29:	sub    BYTE PTR [ebx+0x75],cl
  421b2c:	out    dx,eax
  421b2d:	xor    eax,0xb577921c
  421b32:	lea    ebp,[eax+0x512bc530]
  421b38:	ds cmc 
  421b3a:	inc    ebx
  421b3b:	test   eax,0x1e51ff86
  421b40:	popf   
  421b41:	xchg   esp,eax
  421b42:	sbb    BYTE PTR [ebp+0x7e],dl
  421b45:	mov    ebp,0x1f5f7027
  421b4a:	fiadd  DWORD PTR [ecx-0x427dc130]
  421b50:	jp     0x421b64
  421b52:	lahf   
  421b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b54:	push   ebx
  421b55:	push   edi
  421b56:	mov    esp,0x28fe4b4f
  421b5b:	or     BYTE PTR [ecx],0x40
  421b5e:	loopne 0x421bab
  421b60:	inc    esi
  421b61:	xchg   ebp,eax
  421b62:	pop    eax
  421b63:	cmp    al,0x6b
  421b65:	push   es
  421b66:	cmp    eax,DWORD PTR [ecx-0x74c8433e]
  421b6c:	lods   al,BYTE PTR ds:[esi]
  421b6d:	push   0xd
  421b6f:	pop    ss
  421b70:	(bad)  
  421b71:	mov    edi,0xa853bf96
  421b76:	and    BYTE PTR [esi],dh
  421b78:	mov    ebp,0x57d13cf2
  421b7d:	and    eax,0xa89f6ae3
  421b82:	jne    0x421bc3
  421b84:	icebp  
  421b85:	and    DWORD PTR [esi+0x7],esp
  421b88:	xor    al,0x57
  421b8a:	clc    
  421b8b:	mov    edi,0x20765d7e
  421b90:	inc    dx
  421b92:	mov    ebx,0x36642684
  421b97:	iret   
  421b98:	test   al,0x2d
  421b9a:	sbb    cl,BYTE PTR [ecx+0x6d]
  421b9d:	test   BYTE PTR [ecx],cl
  421b9f:	add    esp,eax
  421ba1:	dec    edx
  421ba2:	not    BYTE PTR [eax+eiz*8]
  421ba5:	pop    ecx
  421ba6:	icebp  
  421ba7:	shl    DWORD PTR [ebx+0x52474cac],0x4f
  421bae:	(bad)  
  421baf:	loopne 0x421b92
  421bb1:	call   0xa49597f6
  421bb6:	xchg   DWORD PTR ds:0xd8a4b0c4,eax
  421bbc:	rcl    DWORD PTR [esi+0x20],1
  421bbf:	or     al,0x6b
  421bc1:	or     eax,0x1af48491
  421bc6:	call   0xfd29:0xd865bf7d
  421bcd:	adc    DWORD PTR [edi],edi
  421bcf:	out    dx,al
  421bd0:	sar    BYTE PTR [ebx-0x57c9b98a],1
  421bd6:	add    al,0x80
  421bd8:	jns    0x421c52
  421bda:	fisub  WORD PTR [edx+eax*2]
  421bdd:	mov    ah,0x89
  421bdf:	xor    bl,BYTE PTR [ebx-0x1a4f3288]
  421be5:	xor    eax,DWORD PTR [eax-0x161e75be]
  421beb:	push   ebx
  421bec:	ja     0x421c08
  421bee:	mov    al,es:0xe6426d37
  421bf4:	mov    al,0xdc
  421bf6:	mov    eax,0xbf39c9a0
  421bfb:	jne    0x421c69
  421bfd:	bound  ecx,QWORD PTR [esp+edx*8+0x2e]
  421c01:	ja     0x421c5b
  421c03:	into   
  421c04:	jmp    esp
  421c06:	inc    ebp
  421c07:	dec    ebx
  421c08:	(bad)  
  421c09:	xor    ecx,DWORD PTR [ebx+0x17133ada]
  421c0f:	test   BYTE PTR [esi-0x72],cl
  421c12:	test   ecx,ebx
  421c14:	or     DWORD PTR [eax],ebp
  421c16:	inc    ebp
  421c17:	push   ebp
  421c18:	sub    eax,0x5144889
  421c1d:	jne    0x421bc6
  421c1f:	mov    esp,DWORD PTR [ecx+ebp*4+0x17]
  421c23:	jmp    0x421c4d
  421c25:	adc    eax,0xd46d9368
  421c2a:	cdq    
  421c2b:	jae    0x421c8a
  421c2d:	hlt    
  421c2e:	jnp    0x421c34
  421c30:	stos   DWORD PTR es:[edi],eax
  421c31:	pop    ebx
  421c32:	hlt    
  421c33:	pop    esi
  421c34:	and    DWORD PTR [esi+ebp*4],0xffffffc2
  421c38:	and    al,bl
  421c3a:	xor    cl,BYTE PTR [eax-0x7a]
  421c3d:	ins    DWORD PTR es:[edi],dx
  421c3e:	add    DWORD PTR [ecx],0x0
  421c41:	scas   al,BYTE PTR es:[edi]
  421c42:	hlt    
  421c43:	mov    al,0xa8
  421c45:	pop    ss
  421c46:	ss pop es
  421c48:	adc    eax,DWORD PTR [edx]
  421c4a:	ins    BYTE PTR es:[edi],dx
  421c4b:	push   ss
  421c4c:	or     edx,DWORD PTR [esp+eax*8]
  421c4f:	pop    es
  421c50:	pop    eax
  421c51:	repnz hlt 
  421c53:	idiv   DWORD PTR [edi+0x420d5eea]
  421c59:	out    dx,eax
  421c5a:	pop    ss
  421c5b:	xor    cl,cl
  421c5d:	pop    eax
  421c5e:	cmp    edx,ecx
  421c60:	mov    dl,0x80
  421c62:	xchg   esi,ecx
  421c64:	out    dx,al
  421c65:	jmp    0xb068aae1
  421c6a:	rcl    DWORD PTR [edi+0x52],cl
  421c6d:	outs   dx,DWORD PTR ds:[esi]
  421c6e:	dec    esi
  421c6f:	jmp    0x615c:0xc7a10c60
  421c76:	push   cs
  421c77:	ficomp WORD PTR [ecx-0x56e5b33c]
  421c7d:	imul   esp,DWORD PTR [ecx+0xa],0x7b0bcea9
  421c84:	(bad)  
  421c85:	(bad)  
  421c86:	fs pop esi
  421c88:	retf   0xc50d
  421c8b:	mov    edx,0xbbd79aa
  421c90:	in     eax,dx
  421c91:	adc    dh,BYTE PTR [ebx]
  421c93:	and    eax,0x974beb20
  421c98:	imul   esp,DWORD PTR [ecx*4+0x64178101],0xffffff93
  421ca0:	ins    BYTE PTR es:[edi],dx
  421ca1:	fnstsw WORD PTR [edx-0x43896531]
  421ca7:	mov    eax,0x3da1f93a
  421cac:	push   ebp
  421cad:	xor    al,0xeb
  421caf:	nop
  421cb0:	test   al,0x54
  421cb2:	mov    dl,dl
  421cb4:	jae    0x421cd4
  421cb6:	pop    ecx
  421cb7:	leave  
  421cb8:	ins    BYTE PTR es:[edi],dx
  421cb9:	push   edi
  421cba:	mov    edi,0xfae5420e
  421cbf:	mov    edx,DWORD PTR [ecx]
  421cc1:	mov    ah,0xf9
  421cc3:	mov    eax,0x4d7fd6e
  421cc8:	jns    0x421c97
  421cca:	das    
  421ccb:	jbe    0x421d06
  421ccd:	shl    ebx,cl
  421ccf:	bnd je 0x421c86
  421cd2:	inc    ebp
  421cd3:	pop    esi
  421cd4:	jae    0x421c79
  421cd6:	loopne 0x421ccf
  421cd8:	fwait
  421cd9:	cdq    
  421cda:	repnz mov ah,0xda
  421cdd:	push   ds
  421cde:	dec    edi
  421cdf:	in     eax,dx
  421ce0:	repz ror DWORD PTR [edx-0x42],cl
  421ce4:	cmp    dl,BYTE PTR [ecx+eax*1]
  421ce7:	jno    0x421d03
  421ce9:	repz and BYTE PTR [edx-0xe],0xb3
  421cee:	lock loope 0x421d3e
  421cf1:	jnp    0x421d5f
  421cf3:	inc    eax
  421cf4:	int3   
  421cf5:	ins    DWORD PTR es:[edi],dx
  421cf6:	aad    0x9e
  421cf8:	rol    ch,cl
  421cfa:	std    
  421cfb:	cmp    DWORD PTR [edi-0xd6a5a05],ecx
  421d01:	ror    BYTE PTR [ebp-0x76],0x63
  421d05:	add    DWORD PTR [ebx-0x10dc4196],0x35fe13b9
  421d0f:	mov    gs,ebx
  421d11:	mov    bl,0x5
  421d13:	push   ebx
  421d14:	xor    BYTE PTR [eax],0x42
  421d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d18:	iret   
  421d19:	mov    eax,0x59554d18
  421d1e:	in     al,0xfc
  421d20:	cmp    BYTE PTR ds:0x18c91bce,dl
  421d26:	mov    al,ds:0xea3bd773
  421d2b:	shr    esp,0xaf
  421d2e:	jmp    0x9c69:0x274664f6
  421d35:	loopne 0x421d91
  421d37:	add    BYTE PTR [ecx+0x53],ah
  421d3a:	push   edi
  421d3b:	(bad)  
  421d3c:	in     eax,0x37
  421d3e:	ja     0x421d76
  421d40:	(bad)  
  421d41:	fistp  QWORD PTR [ebp+0x5e6c038f]
  421d47:	lahf   
  421d48:	dec    esi
  421d49:	and    eax,0xf83038c2
  421d4e:	jle    0x421daa
  421d50:	or     edx,ebp
  421d52:	ret    
  421d53:	cs fs xchg ebx,eax
  421d56:	pop    edi
  421d57:	adc    eax,0x75a52f0
  421d5c:	ins    BYTE PTR es:[edi],dx
  421d5d:	mov    ds:0x600098eb,eax
  421d62:	or     DWORD PTR [esi+0x17192bf4],0x20089826
  421d6c:	dec    esi
  421d6d:	cmp    dh,ah
  421d6f:	sub    eax,0xad245c1d
  421d74:	add    eax,0x7404780d
  421d79:	dec    ecx
  421d7a:	push   ecx
  421d7b:	lods   al,BYTE PTR ds:[esi]
  421d7c:	fistp  QWORD PTR [eax]
  421d7e:	out    0xa,eax
  421d80:	push   cs
  421d81:	push   esp
  421d82:	ja     0x421d94
  421d84:	popa   
  421d85:	add    al,0x4c
  421d87:	fiadd  WORD PTR [ecx+edx*2+0x56ba388f]
  421d8e:	cwde   
  421d8f:	cli    
  421d90:	aaa    
  421d91:	mov    ?,WORD PTR [ebx-0x7f]
  421d94:	xchg   edx,eax
  421d95:	popa   
  421d96:	dec    edx
  421d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d98:	js     0x421d79
  421d9a:	mov    cl,0x3e
  421d9c:	mov    cl,0x9c
  421d9e:	cmp    BYTE PTR [edi+0x33a8b036],al
  421da4:	or     dl,BYTE PTR [ebx-0x5911802]
  421daa:	push   eax
  421dab:	cdq    
  421dac:	lods   al,BYTE PTR ds:[esi]
  421dad:	lods   al,BYTE PTR ds:[esi]
  421dae:	sub    al,0xff
  421db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db1:	outs   dx,BYTE PTR ds:[esi]
  421db2:	pop    ecx
  421db3:	pop    esi
  421db4:	ds ins DWORD PTR es:[edi],dx
  421db6:	rol    BYTE PTR [esi],cl
  421db8:	call   0x4fcb18c
  421dbd:	ja     0x421d6d
  421dbf:	pop    ebx
  421dc0:	mov    ds:0x18823985,eax
  421dc5:	rcl    BYTE PTR [ebx+0x7e],0x1c
  421dc9:	ret    0x29bd
  421dcc:	ret    
  421dcd:	call   0x69f39b43
  421dd2:	mov    ch,0x35
  421dd4:	mov    ch,0xf6
  421dd6:	sub    eax,DWORD PTR [ebx]
  421dd8:	add    cl,BYTE PTR [edx-0x2d54183d]
  421dde:	xchg   edi,eax
  421ddf:	fs shr esi,cl
  421de2:	dec    eax
  421de3:	add    BYTE PTR [edx+0x6],ah
  421de6:	or     eax,0x333bf49d
  421deb:	xor    al,0xf4
  421ded:	push   0xcc6e52c1
  421df2:	jne    0x421e36
  421df4:	inc    ebx
  421df5:	ss push 0xffffffa3
  421df8:	call   0x21e0e532
  421dfd:	push   ebx
  421dfe:	jo     0x421e63
  421e00:	or     al,0x28
  421e02:	dec    edx
  421e03:	out    dx,al
  421e04:	sub    BYTE PTR [esi-0x3e76d529],ch
  421e0a:	(bad)  
  421e0b:	fstp   QWORD PTR [ebp+0x1e]
  421e0e:	jl     0x421e84
  421e10:	neg    cl
  421e12:	or     DWORD PTR [esi+0x5bae0c14],ebx
  421e18:	pop    es
  421e19:	sbb    ebx,DWORD PTR [ecx+0x31]
  421e1c:	outs   dx,BYTE PTR ds:[esi]
  421e1d:	out    0x43,al
  421e1f:	inc    edx
  421e20:	xor    dl,BYTE PTR [edx]
  421e22:	(bad)  
  421e23:	and    DWORD PTR [esi-0x2ec579df],esp
  421e29:	leave  
  421e2a:	ins    DWORD PTR es:[edi],dx
  421e2b:	arpl   WORD PTR [eax+0xc],di
  421e2e:	cmp    esp,0x5d
  421e31:	je     0x421eaa
  421e33:	hlt    
  421e34:	mov    ch,0x9d
  421e36:	shl    DWORD PTR [ecx+0x28],cl
  421e39:	clc    
  421e3a:	cmp    ebp,ebx
  421e3c:	das    
  421e3d:	or     al,0x41
  421e3f:	jnp    0x421e33
  421e41:	(bad)  
  421e42:	in     eax,0xa1
  421e44:	scas   al,BYTE PTR es:[edi]
  421e45:	xchg   ebp,eax
  421e46:	test   ch,dh
  421e48:	fidivr DWORD PTR [eax-0x59]
  421e4b:	push   cs
  421e4c:	imul   bx,WORD PTR es:[ebx],0xb5fc
  421e52:	xlat   BYTE PTR ds:[ebx]
  421e53:	dec    ecx
  421e54:	push   edi
  421e55:	iret   
  421e56:	and    eax,0x8659c287
  421e5b:	fchs   
  421e5d:	sbb    al,0xff
  421e5f:	mov    bh,BYTE PTR [edi-0x4ac2a0b3]
  421e65:	or     esi,eax
  421e67:	push   ds
  421e68:	jne    0x421e4d
  421e6a:	loop   0x421eeb
  421e6c:	adc    al,0x4a
  421e6e:	add    esp,ebp
  421e70:	mov    edi,0x57f8e692
  421e75:	add    DWORD PTR [esi],0x4c
  421e78:	lds    edi,FWORD PTR [ecx+0x4670f9f1]
  421e7e:	ror    BYTE PTR [ebp+eax*8-0x31],0xd5
  421e83:	add    al,dl
  421e85:	mov    ebp,DWORD PTR [ebx-0x6e]
  421e88:	call   DWORD PTR [eax-0x4d]
  421e8b:	adc    BYTE PTR [edx],dl
  421e8d:	ficom  DWORD PTR [ebx-0x4d]
  421e90:	ss in  eax,dx
  421e92:	jg     0x421ef6
  421e94:	add    eax,0xf4b872c2
  421e99:	repz into 
  421e9b:	(bad)  
  421e9c:	jnp    0x421ef6
  421e9e:	das    
  421e9f:	(bad)  
  421ea0:	cli    
  421ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea2:	jecxz  0x421e6f
  421ea4:	mov    ebx,0x508ba61b
  421ea9:	das    
  421eaa:	gs pop edi
  421eac:	mov    ds:0x903da4ca,al
  421eb1:	data16 repnz addr16 adc al,0x0
  421eb6:	dec    ebp
  421eb7:	ins    DWORD PTR es:[edi],dx
  421eb8:	fld    QWORD PTR [ebx-0x76]
  421ebb:	ret    
  421ebc:	leave  
  421ebd:	mul    cl
  421ebf:	(bad)  
  421ec0:	sub    eax,0x7ae8781a
  421ec5:	mov    eax,DWORD PTR [esi]
  421ec7:	fs or  cl,cl
  421eca:	sub    BYTE PTR [esi],cl
  421ecc:	(bad)  
  421ece:	add    al,0x41
  421ed0:	mov    al,ds:0x13b272fc
  421ed5:	outs   dx,BYTE PTR ds:[esi]
  421ed6:	retf   0x7a1e
  421ed9:	stos   BYTE PTR es:[edi],al
  421eda:	xchg   DWORD PTR [ecx+ebp*2],eax
  421edd:	sbb    bh,BYTE PTR [ecx]
  421edf:	call   0x245f:0x6cf32065
  421ee6:	into   
  421ee7:	mov    ds:0x9a72ae81,eax
  421eec:	pop    ss
  421eed:	out    0x96,al
  421eef:	pop    ebx
  421ef0:	call   0xac57:0xf468867a
  421ef7:	lea    ecx,ds:[ebx+ebx*1+0x79]
  421efc:	mov    ebp,0xfdfa3390
  421f01:	inc    edi
  421f02:	stos   BYTE PTR es:[edi],al
  421f03:	shl    dl,0xf5
  421f06:	fadd   st,st(3)
  421f08:	out    dx,al
  421f09:	pusha  
  421f0a:	fild   QWORD PTR [ecx]
  421f0c:	mov    cl,BYTE PTR ds:0x1cb26584
  421f12:	and    esi,ebp
  421f14:	and    DWORD PTR [esp+edx*8],0xffffff90
  421f18:	sbb    dh,BYTE PTR [ebx]
  421f1a:	cmp    esi,DWORD PTR [esi-0x455b90c1]
  421f20:	int3   
  421f21:	sub    BYTE PTR [eax],al
  421f23:	dec    ecx
  421f24:	pop    esi
  421f25:	cdq    
  421f26:	mov    ebx,esi
  421f28:	cmp    DWORD PTR [ebp-0x3c932b5f],ebx
  421f2e:	aas    
  421f2f:	iret   
  421f30:	jge    0x421ef5
  421f32:	inc    esp
  421f33:	std    
  421f34:	test   al,0x19
  421f36:	add    ax,bp
  421f39:	je     0x421ef6
  421f3b:	mov    esp,gs
  421f3d:	sub    dl,bh
  421f3f:	pop    esi
  421f40:	lods   al,BYTE PTR ds:[esi]
  421f41:	inc    ecx
  421f42:	xor    ebp,DWORD PTR [eax]
  421f44:	add    al,0x82
  421f46:	jle    0x421ed2
  421f48:	pop    edi
  421f49:	lods   al,BYTE PTR ds:[esi]
  421f4a:	sbb    al,0x6f
  421f4c:	pop    ss
  421f4d:	push   ebx
  421f4e:	and    al,0x37
  421f50:	sahf   
  421f51:	int3   
  421f52:	sbb    eax,0xca40439
  421f57:	dec    esi
  421f58:	push   edi
  421f59:	mov    bh,0x43
  421f5b:	ret    0xceba
  421f5e:	cli    
  421f5f:	xor    esp,edi
  421f61:	aam    0x44
  421f63:	and    eax,0xd7ff049
  421f68:	mov    eax,ds:0x10544fc7
  421f6d:	retf   
  421f6e:	int    0x7d
  421f70:	add    bl,BYTE PTR [edi-0x4171291c]
  421f76:	jb     0x421f59
  421f78:	lods   al,BYTE PTR ds:[esi]
  421f79:	add    esi,eax
  421f7b:	and    DWORD PTR [esi+0x1de0e9a],eax
  421f81:	das    
  421f82:	or     BYTE PTR [eax+0x4fb7a05c],0x9e
  421f89:	mov    dh,BYTE PTR [edx+ebp*4]
  421f8c:	outs   dx,BYTE PTR ds:[esi]
  421f8d:	sbb    BYTE PTR [ecx-0x6b],dh
  421f90:	add    BYTE PTR [edx+0x664798be],0xab
  421f97:	out    dx,al
  421f98:	xchg   DWORD PTR [ebx-0x16],ebx
  421f9b:	push   ecx
  421f9c:	shl    BYTE PTR [edx],0x72
  421f9f:	enter  0x407e,0x1b
  421fa3:	sbb    BYTE PTR [edx-0x58],al
  421fa6:	and    bl,BYTE PTR [ebx-0x31]
  421fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421faa:	(bad)  
  421fab:	scas   al,BYTE PTR es:[edi]
  421fac:	out    0xe3,al
  421fae:	je     0x421f59
  421fb0:	loopne 0x421f35
  421fb2:	jge    0x421faa
  421fb4:	repz repz enter 0xd69e,0xe8
  421fba:	aam    0x51
  421fbc:	shl    BYTE PTR [ebx-0x25],1
  421fbf:	ret    0x6453
  421fc2:	jg     0x421fdf
  421fc4:	xor    cl,ch
  421fc6:	sbb    DWORD PTR [ecx+0x1c671822],eax
  421fcc:	mul    DWORD PTR [esi+0x7eb4011e]
  421fd2:	jno    0x421f92
  421fd4:	test   al,0x41
  421fd6:	xor    edx,DWORD PTR [edi-0x33]
  421fd9:	lods   al,BYTE PTR ds:[esi]
  421fda:	(bad)  
  421fdb:	imul   edx,DWORD PTR [edi],0xffffffc9
  421fde:	xchg   edi,eax
  421fdf:	push   edx
  421fe0:	enter  0xe7c6,0xcf
  421fe4:	mov    ecx,0xee1e3c64
  421fe9:	jmp    0x51d02de4
  421fee:	enter  0xe7a2,0x4b
  421ff2:	fsubr  DWORD PTR [ebp+0xb9abf7d]
  421ff8:	shr    ebx,1
  421ffa:	jmp    0x1f68:0xa664ba6a
  422001:	mov    WORD PTR [eax-0x2c27ae86],cs
  422007:	stos   BYTE PTR es:[edi],al
  422008:	push   ebp
  422009:	cmp    DWORD PTR [esi],esi
  42200b:	pop    ebp
  42200c:	cmp    bh,BYTE PTR [esi+eiz*8]
  42200f:	push   ebx
  422010:	test   al,0x49
  422012:	scas   eax,DWORD PTR es:[edi]
  422013:	in     eax,dx
  422014:	mov    esp,edi
  422016:	sub    bl,BYTE PTR [ebx+0x79]
  422019:	jb     0x421faf
  42201b:	fisttp QWORD PTR [edx+ebp*4-0x62]
  42201f:	into   
  422020:	cmp    BYTE PTR [edi],0xbe
  422023:	arpl   WORD PTR [edx],cx
  422025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422026:	test   eax,0xb93e688c
  42202b:	cdq    
  42202c:	mov    eax,0x3239aade
  422031:	nop
  422032:	mov    ebx,DWORD PTR [eax+0x2a81ff22]
  422038:	xor    eax,0x3cb32606
  42203d:	sbb    al,0x7
  42203f:	jnp    0x42203c
  422041:	mov    ds:0x4727d151,eax
  422046:	dec    esi
  422047:	imul   eax,DWORD PTR fs:[edi+eax*1],0x376b4ac7
  42204f:	rol    BYTE PTR [ecx+0x11],cl
  422052:	xlat   BYTE PTR ds:[ebx]
  422053:	gs pop ebp
  422055:	jp     0x422097
  422057:	sub    DWORD PTR [eax+0x53c9d244],esi
  42205d:	sbb    al,0xdf
  42205f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422060:	sub    ebx,eax
  422062:	in     eax,dx
  422063:	sbb    ecx,DWORD PTR [eax+0x1a13457c]
  422069:	dec    esi
  42206a:	pop    ecx
  42206b:	fild   DWORD PTR [edi+ecx*4]
  42206e:	mov    ds:0x2fa0790c,al
  422073:	push   edi
  422074:	std    
  422075:	jle    0x422018
  422077:	jmp    0x4220ad
  422079:	std    
  42207a:	push   0x4ec5318a
  42207f:	dec    edi
  422080:	dec    edx
  422081:	repz pop esp
  422083:	push   0xffffffd8
  422085:	jecxz  0x4220ea
  422087:	add    eax,0xb9b3496
  42208c:	in     al,0x81
  42208e:	jno    0x422054
  422090:	inc    esi
  422091:	sub    al,ch
  422093:	dec    ebx
  422094:	ds dec ecx
  422096:	fwait
  422097:	xlat   BYTE PTR ds:[ebx]
  422098:	repnz sub al,0xd8
  42209b:	mov    cl,BYTE PTR [edi]
  42209d:	jb     0x42207b
  42209f:	push   0xeb36ce21
  4220a4:	and    BYTE PTR [ebp+edi*2-0x19],0xd8
  4220a9:	pop    edx
  4220aa:	dec    edx
  4220ab:	adc    al,0xd9
  4220ad:	jns    0x4220ba
  4220af:	js     0x422044
  4220b1:	fimul  DWORD PTR [edi]
  4220b3:	or     ebx,DWORD PTR [edx+ebx*8-0x6d]
  4220b7:	push   es
  4220b8:	mov    ds:0xdf895c19,al
  4220bd:	sub    esi,DWORD PTR [edx+0x1b50f110]
  4220c3:	ftst   
  4220c5:	sub    al,0xb4
  4220c7:	or     cl,BYTE PTR [edi+0x12]
  4220ca:	fidiv  DWORD PTR [ebx-0x4b6ec36f]
  4220d0:	mov    al,ds:0x1ec73f6a
  4220d5:	xchg   ebp,eax
  4220d6:	mov    ah,0x22
  4220d8:	ja     0x4220df
  4220da:	add    eax,0xa3667a08
  4220df:	fs aam 0x9a
  4220e2:	jno    0x4220a4
  4220e4:	push   esp
  4220e5:	fwait
  4220e6:	lea    esi,[ecx+ebx*1+0x1e]
  4220ea:	pop    ebp
  4220eb:	push   0x5931057f
  4220f0:	mov    ah,0x2d
  4220f2:	mov    eax,DWORD PTR [esi-0x6e]
  4220f5:	(bad)  
  4220f7:	in     eax,0x8f
  4220f9:	or     eax,0xc770eefd
  4220fe:	dec    edx
  4220ff:	add    BYTE PTR [esi-0x6f],0x27
  422103:	xchg   ecx,eax
  422104:	in     eax,dx
  422105:	std    
  422106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422107:	mov    dh,0xce
  422109:	inc    ecx
  42210a:	jnp    0x42210d
  42210c:	inc    ebx
  42210d:	mov    ds:0xbad2e27d,eax
  422112:	sar    DWORD PTR [edi-0x3e],cl
  422115:	push   edx
  422116:	add    BYTE PTR [esi],ch
  422118:	les    ecx,FWORD PTR [esi+0x62153169]
  42211e:	adc    al,0x72
  422120:	int3   
  422121:	pop    eax
  422122:	popf   
  422123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422124:	push   cs
  422125:	mov    WORD PTR ds:0x466a7f40,ds
  42212b:	(bad)  
  42212c:	mov    bl,0x86
  42212e:	aam    0x18
  422130:	xlat   BYTE PTR ds:[ebx]
  422131:	fisubr WORD PTR [ecx+0x79]
  422134:	je     0x4220d9
  422136:	push   edi
  422137:	jns    0x4220f5
  422139:	pop    eax
  42213a:	imul   DWORD PTR [edx]
  42213c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42213d:	scas   al,BYTE PTR es:[edi]
  42213e:	add    esp,esi
  422140:	movd   edx,mm5
  422143:	enter  0x6b2b,0xab
  422147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422148:	mov    eax,esp
  42214a:	daa    
  42214b:	lock dec esp
  42214d:	inc    eax
  42214e:	and    eax,0x85671194
  422153:	dec    edx
  422154:	arpl   bx,dx
  422156:	push   0xd3efe58d
  42215b:	retf   0xce5c
  42215e:	jle    0x4220f4
  422160:	scas   al,BYTE PTR es:[edi]
  422161:	sar    ch,cl
  422163:	sbb    dh,BYTE PTR [ebp+0x3]
  422166:	xor    BYTE PTR [eax],cl
  422168:	cmc    
  422169:	cmp    edi,esi
  42216b:	push   edx
  42216c:	in     eax,dx
  42216d:	fstp   QWORD PTR [edi+0x16]
  422170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422171:	or     BYTE PTR [edx-0xf027a59],ah
  422177:	repnz mov esp,0xa3f55848
  42217d:	xchg   esi,eax
  42217e:	mov    ds:0xc09defa1,al
  422183:	pusha  
  422184:	push   0x11a12b22
  422189:	fnsave [eax+0x45080a92]
  42218f:	dec    edi
  422190:	gs jno 0x4221ed
  422193:	imul   edi,DWORD PTR [ecx+ebp*2],0xffffff98
  422197:	aaa    
  422198:	mov    ch,0xc4
  42219a:	or     esp,ecx
  42219c:	aas    
  42219d:	or     edx,esp
  42219f:	shl    esp,0x4d
  4221a2:	push   ebx
  4221a3:	fwait
  4221a4:	cmp    DWORD PTR [edi],ebx
  4221a6:	mov    edi,0xdc840646
  4221ab:	rol    BYTE PTR [eax+esi*1-0x7697614f],1
  4221b2:	push   ds
  4221b3:	xor    BYTE PTR [eax-0x54f5656c],cl
  4221b9:	dec    ebx
  4221ba:	dec    esp
  4221bb:	jb     0x422178
  4221bd:	fisttp DWORD PTR [eax]
  4221c0:	or     al,0xa1
  4221c2:	xchg   esp,eax
  4221c3:	and    eax,0xd92f9c68
  4221c8:	mov    ds:0xe45a1575,eax
  4221cd:	pop    eax
  4221ce:	dec    esp
  4221cf:	das    
  4221d0:	outs   dx,DWORD PTR ds:[esi]
  4221d1:	repz xor edx,DWORD PTR [edi]
  4221d4:	fsub   QWORD PTR [edi+esi*8]
  4221d7:	adc    al,0xba
  4221da:	mov    cl,0x88
  4221dc:	lahf   
  4221dd:	ins    DWORD PTR es:[edi],dx
  4221de:	fst    DWORD PTR [ebx+esi*1+0x6b782772]
  4221e5:	push   edx
  4221e6:	lods   al,BYTE PTR ds:[esi]
  4221e7:	mov    ebx,0x4948fb07
  4221ec:	shr    edi,0xf7
  4221ef:	fdivr  DWORD PTR [ebx]
  4221f1:	fdivr  DWORD PTR [ebp-0x405f0272]
  4221f7:	adc    ah,al
  4221f9:	bound  esi,QWORD PTR ds:0x3839847c
  4221ff:	inc    esp
  422200:	push   esp
  422201:	aad    0x16
  422203:	mov    edx,0x1c024944
  422208:	dec    eax
  422209:	(bad)  
  42220a:	sbb    al,0x7c
  42220c:	lods   eax,DWORD PTR ds:[esi]
  42220d:	loope  0x4221ea
  42220f:	xchg   ebx,eax
  422210:	aad    0xa
  422212:	ss add ax,0x6b7a
  422217:	dec    esp
  422218:	and    DWORD PTR [bx+di],eax
  42221b:	clc    
  42221c:	test   eax,0xd08f2ff7
  422221:	mov    edi,0x31a707bd
  422226:	cmc    
  422227:	stos   DWORD PTR es:[edi],eax
  422228:	test   DWORD PTR [eax-0x29],esi
  42222b:	fisttp DWORD PTR ds:0xbd64869a
  422231:	out    0x18,eax
  422233:	jle    0x422280
  422235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422236:	mov    ?,WORD PTR [edi+ebp*2-0x23]
  42223a:	repnz mov eax,ds:0x4c79bf7c
  422240:	inc    edi
  422241:	push   ecx
  422242:	cs retf 
  422244:	sub    ah,BYTE PTR [edx-0xb70a4f7]
  42224a:	push   esi
  42224b:	jo     0x4221ea
  42224d:	ds ret 0x5259
  422251:	int3   
  422252:	fsubr  DWORD PTR fs:[ecx+0x7ae0205a]
  422259:	pop    ecx
  42225a:	inc    esp
  42225b:	js     0x4222a3
  42225d:	(bad)  
  42225e:	les    esi,FWORD PTR [eax]
  422260:	mov    ecx,0xde0b25e2
  422265:	mov    esi,DWORD PTR [edi-0x2]
  422268:	cmp    eax,0x5add23fa
  42226d:	idiv   al
  42226f:	in     eax,dx
  422270:	dec    ebx
  422271:	cmp    DWORD PTR [ebp+0x28],esp
  422274:	test   DWORD PTR [esi+0x4b],esp
  422277:	dec    esi
  422278:	sbb    al,0x3f
  42227a:	xchg   ecx,eax
  42227b:	mov    ebp,edi
  42227d:	mov    ecx,0x401703db
  422282:	pop    ecx
  422283:	push   esp
  422284:	retf   
  422285:	add    bl,BYTE PTR [ecx-0x3ae2183f]
  42228b:	das    
  42228c:	int    0x15
  42228e:	jl     0x422224
  422290:	mov    al,ds:0xdba6c2cb
  422295:	push   ebx
  422296:	outs   dx,BYTE PTR ds:[esi]
  422297:	in     eax,0x4c
  422299:	inc    ebx
  42229a:	sbb    eax,0x2db84743
  42229f:	das    
  4222a0:	mov    ebp,0x71d525a4
  4222a5:	aad    0x51
  4222a7:	into   
  4222a8:	js     0x422255
  4222aa:	daa    
  4222ab:	and    al,0xfa
  4222ad:	ret    
  4222ae:	fdiv   DWORD PTR [ebx-0x5456240b]
  4222b4:	scas   al,BYTE PTR es:[edi]
  4222b5:	retf   
  4222b6:	stc    
  4222b7:	pop    ecx
  4222b8:	adc    al,0x96
  4222ba:	lods   al,BYTE PTR ds:[esi]
  4222bb:	or     bh,BYTE PTR [edx-0x8]
  4222be:	mov    ah,0xb8
  4222c0:	inc    ecx
  4222c2:	inc    eax
  4222c3:	jp     0x4222e9
  4222c5:	add    al,0xcd
  4222c7:	cmp    bh,BYTE PTR [ecx-0x6b]
  4222ca:	sub    BYTE PTR [ecx+eax*2+0x41217605],0x45
  4222d2:	shl    DWORD PTR [ebp+0x7d216a50],cl
  4222d8:	fs fcomip st,st(0)
  4222db:	cmp    ch,BYTE PTR [eax-0x231e47cd]
  4222e1:	xor    ebx,DWORD PTR [eax+0x6a]
  4222e4:	mov    al,0xd7
  4222e6:	add    BYTE PTR [eax],bh
  4222e8:	test   al,0xc5
  4222ea:	fxam   
  4222ec:	imul   ebx,DWORD PTR [edi],0xffffffee
  4222ef:	or     edi,DWORD PTR [edx]
  4222f1:	ds out dx,eax
  4222f3:	cdq    
  4222f4:	loopne 0x4222c0
  4222f6:	fidiv  WORD PTR [eax-0x63a0d9ca]
  4222fc:	out    0x8f,al
  4222fe:	loopne 0x4222ba
  422300:	mov    al,ch
  422302:	xchg   edi,eax
  422303:	jnp    0x422303
  422305:	stos   BYTE PTR es:[edi],al
  422306:	jns    0x422386
  422308:	xor    BYTE PTR [ebp-0x1140489],bl
  42230e:	test   BYTE PTR [edi-0x692a8094],dh
  422314:	jne    0x4222e1
  422316:	(bad)  
  422317:	jo     0x4222bf
  422319:	jnp    0x42237f
  42231b:	xor    eax,0x1069e889
  422320:	jo     0x42232a
  422322:	(bad)  
  422323:	arpl   WORD PTR [ebp+0x198737e],si
  422329:	(bad)  
  42232a:	stc    
  42232b:	aaa    
  42232c:	ins    DWORD PTR es:[edi],dx
  42232d:	outs   dx,BYTE PTR ds:[esi]
  42232e:	(bad)  
  42232f:	aad    0x3f
  422331:	test   DWORD PTR [ecx],edx
  422333:	dec    edi
  422334:	push   ebp
  422335:	pop    ecx
  422336:	cwde   
  422337:	(bad)  
  422338:	adc    al,0x62
  42233a:	aam    0x8f
  42233c:	cdq    
  42233d:	(bad)  
  42233e:	mov    eax,0x7ac318ad
  422343:	fnstsw WORD PTR [edx+eax*1]
  422346:	in     al,0xfc
  422348:	xchg   edx,eax
  422349:	scas   al,BYTE PTR es:[edi]
  42234a:	add    BYTE PTR [ecx+edx*1],0xa1
  42234e:	dec    ebx
  42234f:	dec    ecx
  422350:	mov    ds:0xd83918e4,eax
  422355:	push   0xd0ad79ad
  42235a:	sub    eax,0x4b261f24
  42235f:	lds    edx,FWORD PTR [ebp*8+0x79937cb8]
  422366:	int3   
  422367:	rcl    bh,1
  422369:	pmaxsw mm2,QWORD PTR [edi]
  42236c:	popf   
  42236d:	int    0x48
  42236f:	jl     0x422395
  422371:	ja     0x422301
  422373:	mov    ch,0xfa
  422375:	es pop ebp
  422377:	call   0xc120e68b
  42237c:	pop    ss
  42237d:	and    DWORD PTR [edx+0x5b1e7ac9],ecx
  422383:	xor    eax,0x70decc5e
  422388:	imul   esp,DWORD PTR [edx],0xffffffbe
  42238b:	and    eax,0xbc512f17
  422390:	popa   
  422391:	or     ebp,DWORD PTR [edi-0x137d9db1]
  422397:	ror    BYTE PTR [esi],cl
  422399:	or     BYTE PTR [ecx+0x5223b784],0x13
  4223a0:	xchg   edi,eax
  4223a1:	cmp    esi,DWORD PTR [edx]
  4223a3:	mov    ecx,DWORD PTR [ecx]
  4223a5:	loop   0x4223ac
  4223a7:	arpl   WORD PTR [ecx-0x48ef234c],ax
  4223ad:	add    BYTE PTR [esi],0xe8
  4223b0:	dec    esp
  4223b1:	js     0x4223d7
  4223b3:	(bad)  
  4223b4:	das    
  4223b5:	clc    
  4223b6:	adc    BYTE PTR [eax-0x5132ea0],dl
  4223bc:	das    
  4223bd:	cmc    
  4223be:	jecxz  0x422430
  4223c0:	xchg   ebx,eax
  4223c1:	sbb    eax,0xa0222f0
  4223c6:	dec    esi
  4223c7:	or     BYTE PTR [eax+0xa],ch
  4223ca:	xchg   edi,eax
  4223cb:	stos   BYTE PTR es:[edi],al
  4223cc:	add    BYTE PTR [ecx+0x5b],ch
  4223cf:	mov    ah,BYTE PTR ds:0xd0eb3ce
  4223d5:	(bad)  
  4223d6:	outs   dx,BYTE PTR ds:[esi]
  4223d7:	ret    0xe63a
  4223da:	jno    0x4223e1
  4223dc:	mov    bh,0x6e
  4223de:	mov    ah,0xee
  4223e0:	xchg   ebp,eax
  4223e1:	jmp    0x9dd3:0xa6f58078
  4223e8:	jmp    0x4223a0
  4223ea:	push   0xffffffc7
  4223ec:	jno    0x42241a
  4223ee:	jne    0x422467
  4223f0:	xor    ebx,DWORD PTR [esi]
  4223f2:	push   ss
  4223f3:	jne    0x422428
  4223f5:	addr16 loope 0x4223b4
  4223f8:	dec    ebx
  4223f9:	(bad)  
  4223fa:	stc    
  4223fb:	dec    edi
  4223fc:	adc    al,0x86
  4223fe:	cmp    eax,0x3630823f
  422403:	rcr    edx,cl
  422405:	mov    ebp,0xa4ca29cc
  42240a:	jno    0x4223c5
  42240c:	fnstcw WORD PTR [edi]
  42240e:	es stos DWORD PTR es:[edi],eax
  422410:	loope  0x4223c6
  422412:	aaa    
  422413:	xchg   ecx,eax
  422414:	sub    BYTE PTR [eax+0x70],bl
  422417:	pop    esi
  422418:	inc    eax
  422419:	add    al,0x9c
  42241b:	or     DWORD PTR [ebx+0x28],edx
  42241e:	sbb    dh,al
  422420:	mov    WORD PTR [edx-0x3b],cs
  422423:	inc    esp
  422424:	push   0xffffffa0
  422426:	pusha  
  422427:	add    eax,0x7141d782
  42242c:	mov    al,0x86
  42242e:	and    DWORD PTR [ebx+0x2c3f28ca],eax
  422434:	aaa    
  422435:	mov    ch,al
  422437:	bound  eax,QWORD PTR [edi]
  422439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42243a:	leave  
  42243b:	sar    ebx,0xad
  42243e:	push   esi
  42243f:	add    bl,BYTE PTR [edi+0x52]
  422442:	add    eax,0x77d26b92
  422447:	retf   
  422448:	push   ss
  422449:	pop    es
  42244a:	and    DWORD PTR [esi],esp
  42244c:	and    edi,esp
  42244e:	icebp  
  42244f:	es pop ecx
  422451:	inc    esi
  422452:	mov    edi,0xf03a2581
  422457:	jp     0x422436
  422459:	sbb    bh,al
  42245b:	sbb    eax,0xde6acaa6
  422460:	outs   dx,DWORD PTR ds:[esi]
  422461:	fs push ecx
  422463:	ins    DWORD PTR es:[edi],dx
  422464:	mov    ecx,DWORD PTR ds:0xb319ed1e
  42246a:	add    dh,BYTE PTR [edi-0x15fa8183]
  422470:	jno    0x42240b
  422472:	mov    bh,dl
  422474:	jecxz  0x42249e
  422476:	or     DWORD PTR [edi],0x31
  422479:	mov    fs,ebx
  42247b:	adc    ebx,DWORD PTR [ebp-0x1c]
  42247e:	inc    ebx
  42247f:	adc    ebx,DWORD PTR [esi-0x105b5a90]
  422485:	and    DWORD PTR [ecx],esp
  422487:	sbb    al,0x5b
  422489:	imul   ecx,DWORD PTR [ebx+0x7b],0x70
  42248d:	xchg   edx,eax
  42248e:	cmp    cl,BYTE PTR [ecx]
  422490:	mov    BYTE PTR [ebx-0x44eff9b2],dl
  422496:	ins    DWORD PTR es:[edi],dx
  422497:	lea    ecx,[ecx-0x3aa0a193]
  42249d:	or     eax,0xa21faff
  4224a2:	mov    ah,0x48
  4224a4:	or     DWORD PTR [ebp-0x32902b81],edi
  4224aa:	adc    BYTE PTR cs:[edi-0xea1695f],dh
  4224b1:	cmp    dl,ah
  4224b3:	mov    dl,0x91
  4224b5:	loop   0x422487
  4224b7:	fwait
  4224b8:	or     al,0x9c
  4224ba:	sub    eax,0x5d96bb5c
  4224bf:	pop    eax
  4224c0:	out    0xe7,eax
  4224c2:	dec    edi
  4224c3:	and    BYTE PTR [ebx-0x4bf72b4d],0x52
  4224ca:	and    edx,DWORD PTR [eax+0x46]
  4224cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ce:	test   WORD PTR [ecx],ax
  4224d1:	pop    ecx
  4224d2:	cmp    al,0x3b
  4224d4:	xchg   edx,eax
  4224d5:	push   ds
  4224d6:	cdq    
  4224d7:	dec    eax
  4224d8:	xchg   ebp,eax
  4224d9:	ins    BYTE PTR es:[edi],dx
  4224da:	add    eax,edx
  4224dc:	mov    esi,DWORD PTR [edx+0x31]
  4224df:	ins    DWORD PTR es:[edi],dx
  4224e0:	fadd   st,st(2)
  4224e2:	mov    bl,BYTE PTR [ebx-0x29]
  4224e5:	popf   
  4224e6:	in     eax,dx
  4224e7:	dec    ecx
  4224e8:	aam    0xf4
  4224ea:	pusha  
  4224eb:	in     al,dx
  4224ec:	pop    esi
  4224ed:	pop    ds
  4224ee:	mov    ah,0x38
  4224f0:	xor    DWORD PTR [edx-0x11],edx
  4224f3:	and    dh,BYTE PTR [eax]
  4224f5:	dec    eax
  4224f6:	aas    
  4224f7:	adc    DWORD PTR [eax],0xffffffa8
  4224fa:	jmp    0xfbd5cf85
  4224ff:	lock add eax,0x3bd2a953
  422505:	fucomi st,st(5)
  422507:	cmp    DWORD PTR [edx],edi
  422509:	and    esp,edx
  42250b:	int3   
  42250c:	pop    edx
  42250d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42250e:	pop    ecx
  42250f:	fisttp DWORD PTR [ecx+ebp*8+0x32]
  422513:	jg     0x422577
  422515:	leave  
  422516:	inc    ecx
  422517:	inc    eax
  422518:	test   eax,0x5680a6d3
  42251d:	cmp    cl,BYTE PTR [edx]
  42251f:	push   edi
  422520:	fadd   DWORD PTR [ecx]
  422522:	and    al,BYTE PTR [ebx+0x33]
  422525:	or     esi,edx
  422527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422528:	fadd   st,st(4)
  42252a:	mov    ch,0x87
  42252c:	gs (bad) 
  42252e:	ja     0x422565
  422530:	mov    ds:0xc07c0f84,eax
  422535:	xor    BYTE PTR [edx-0x6b],0x31
  422539:	cmp    dl,BYTE PTR [edi]
  42253b:	retf   0xf770
  42253e:	fsub   st(0),st
  422540:	loopne 0x4224c4
  422542:	cmp    ch,bh
  422544:	dec    ebp
  422545:	mov    ch,0x52
  422547:	fcomp  QWORD PTR [edx-0x70]
  42254a:	cli    
  42254b:	outs   dx,BYTE PTR ds:[esi]
  42254c:	sub    eax,0x268ee8ac
  422551:	inc    ecx
  422552:	mov    bh,BYTE PTR [ebp-0xd]
  422555:	ins    BYTE PTR es:[edi],dx
  422556:	rol    BYTE PTR [edi-0x6ea6d090],0x99
  42255d:	mov    eax,0x3636bc8
  422562:	pop    ds
  422563:	pop    ecx
  422564:	mov    edi,0x69950ecc
  422569:	push   ecx
  42256a:	and    DWORD PTR [edi-0x51],ebp
  42256d:	dec    edx
  42256e:	push   ds
  42256f:	(bad)  
  422571:	inc    ebx
  422572:	jmp    0x4225bf
  422574:	fcom   QWORD PTR [ebx-0x37fd9851]
  42257a:	pop    ss
  42257b:	mov    BYTE PTR [esi],cl
  42257d:	dec    ebx
  42257e:	gs ret 
  422580:	inc    ebp
  422581:	dec    eax
  422582:	inc    bh
  422584:	xchg   edx,eax
  422585:	add    BYTE PTR [edx+ecx*2+0x5b],bl
  422589:	pop    edx
  42258a:	out    dx,eax
  42258b:	inc    esp
  42258c:	arpl   WORD PTR [esi],dx
  42258e:	fdivr  st(4),st
  422590:	xrelease mov DWORD PTR gs:[edx],eax
  422594:	jnp    0x422540
  422596:	cwde   
  422597:	or     cl,0x5f
  42259a:	sub    edx,0xfffffff4
  42259d:	not    BYTE PTR [ebx+esi*2-0x57]
  4225a1:	es iret 
  4225a3:	test   al,0xac
  4225a5:	rcl    DWORD PTR ds:0x18497ff1,0xb5
  4225ac:	jae    0x42254a
  4225ae:	loop   0x422541
  4225b0:	rcr    BYTE PTR [esi-0x77],0x1d
  4225b4:	adc    edi,DWORD PTR [esi+0x1f]
  4225b7:	test   BYTE PTR [eax+0x123a8df5],cl
  4225bd:	mov    DWORD PTR [ecx+0x5c],edx
  4225c0:	push   cs
  4225c1:	dec    edi
  4225c2:	jmp    0xf3e7e9a9
  4225c7:	pushf  
  4225c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ca:	fisub  DWORD PTR [edx+edx*8-0x430670f1]
  4225d1:	cmc    
  4225d2:	shl    esi,cl
  4225d4:	sbb    eax,DWORD PTR [ebp+0x7d]
  4225d7:	aad    0x1a
  4225d9:	inc    ecx
  4225da:	dec    ecx
  4225db:	dec    edx
  4225dc:	cli    
  4225dd:	push   edi
  4225de:	mov    ds:0x63735c27,al
  4225e3:	and    al,0x82
  4225e5:	ss iret 
  4225e7:	arpl   WORD PTR [esi-0x2f],di
  4225ea:	inc    ebx
  4225eb:	pusha  
  4225ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ed:	cs mov ecx,ebp
  4225f0:	fcmovnu st,st(4)
  4225f2:	sub    eax,DWORD PTR [esi]
  4225f4:	xor    edx,DWORD PTR [edi]
  4225f6:	in     eax,dx
  4225f7:	in     eax,dx
  4225f8:	cwde   
  4225f9:	or     DWORD PTR ds:0xb3d40ce4,ebp
  4225ff:	sub    BYTE PTR [ebp-0x3668c920],dh
  422605:	rcr    BYTE PTR [ecx],cl
  422607:	das    
  422608:	pusha  
  422609:	xchg   BYTE PTR [edi],ah
  42260b:	push   0xf
  42260d:	ss loopne 0x422678
  422610:	adc    BYTE PTR [edx+0x1e],bl
  422613:	adc    DWORD PTR [ecx+0x6c00b807],esp
  422619:	or     ebp,DWORD PTR [ecx+0x9]
  42261c:	mov    esp,0xf8ab5c04
  422621:	nop
  422622:	fstp   TBYTE PTR [ebx]
  422624:	cdq    
  422625:	mov    bl,0x9e
  422627:	dec    ebp
  422628:	cwde   
  422629:	mov    WORD PTR [eax-0x5704e42a],ss
  42262f:	push   es
  422630:	mov    ds:0xbd9af04b,al
  422635:	jbe    0x422648
  422637:	push   0xe6dfc28e
  42263c:	shl    DWORD PTR [esi-0x6],cl
  42263f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422640:	loop   0x4226a4
  422642:	jb     0x4225e8
  422644:	ins    BYTE PTR es:[edi],dx
  422645:	repnz push DWORD PTR [edx+ebp*1+0x3b]
  42264a:	mov    DWORD PTR [ebx],esi
  42264c:	dec    ebx
  42264d:	xor    al,0xba
  422650:	add    DWORD PTR [esi],0xffffff85
  422653:	daa    
  422654:	or     eax,0xe0852ac2
  422659:	mov    BYTE PTR [ecx-0x45],al
  42265c:	push   ebx
  42265d:	push   ecx
  42265e:	in     eax,0xa4
  422660:	jge    0x4226cb
  422662:	pop    ds
  422663:	sub    dl,bh
  422665:	fsubr  DWORD PTR [edx]
  422667:	or     DWORD PTR [esi+0x3c],eax
  42266a:	dec    esi
  42266b:	pop    ebx
  42266c:	mov    ebx,esi
  42266e:	and    DWORD PTR ds:0xb5fb6eff,eax
  422674:	mov    ds:0x7ce6aef5,al
  422679:	retf   0xc524
  42267c:	add    dh,BYTE PTR [ecx+eiz*2]
  42267f:	or     ebx,0xc4f4589f
  422685:	push   ss
  422686:	mov    ah,cl
  422688:	mov    esi,0x54e35ac8
  42268d:	push   0x17
  42268f:	iret   
  422690:	inc    esi
  422691:	mov    edi,0x4a162870
  422696:	push   edx
  422697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422698:	shl    DWORD PTR [edi+0x59],0x2a
  42269c:	es je  0x422652
  42269f:	out    dx,eax
  4226a0:	outs   dx,BYTE PTR ds:[esi]
  4226a2:	inc    ecx
  4226a3:	int    0x41
  4226a5:	mov    edx,0xb19eb289
  4226aa:	pop    eax
  4226ab:	pusha  
  4226ac:	xor    eax,0x363ffa5f
  4226b1:	nop
  4226b2:	addr16 push 0x5bf37fc7
  4226b8:	repnz adc dh,dl
  4226bb:	test   DWORD PTR [edx-0x3a],ebx
  4226be:	rol    BYTE PTR [ebx+0x1fb414d4],1
  4226c4:	jo     0x422732
  4226c6:	retf   
  4226c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c8:	inc    edi
  4226c9:	sbb    al,0xf5
  4226cb:	ins    DWORD PTR es:[edi],dx
  4226cc:	cs jbe 0x422711
  4226cf:	pop    ds
  4226d0:	enter  0xecb9,0x59
  4226d4:	sahf   
  4226d5:	add    edi,DWORD PTR [ebx+0xc78c14e]
  4226db:	into   
  4226dc:	inc    ebp
  4226dd:	(bad)  
  4226de:	mov    al,0x62
  4226e0:	loope  0x4226e9
  4226e2:	and    al,0x21
  4226e4:	pushf  
  4226e5:	(bad)  
  4226e7:	sub    ebx,DWORD PTR [eax+0x2e]
  4226ea:	pop    eax
  4226eb:	mov    ds:0xe01db154,al
  4226f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f1:	adc    ebx,ebx
  4226f3:	lahf   
  4226f4:	ds addr16 loop 0x42274c
  4226f8:	jl     0x4226ba
  4226fa:	inc    edi
  4226fb:	pop    ebp
  4226fc:	xchg   esp,eax
  4226fd:	enter  0xaf9,0x4c
  422701:	out    dx,eax
  422702:	mov    ecx,0x9fbc10ad
  422707:	int    0x50
  422709:	popa   
  42270a:	daa    
  42270b:	or     DWORD PTR [ebx-0x69],0x6f
  42270f:	(bad)  
  422710:	pop    ds
  422711:	imul   edi,DWORD PTR [eax-0x5598c647],0xb8addae1
  42271b:	inc    ebx
  42271c:	push   ss
  42271d:	lahf   
  42271e:	fcmovnbe st,st(6)
  422720:	outs   dx,DWORD PTR ds:[esi]
  422721:	loopne 0x42277b
  422723:	jle    0x42276d
  422725:	mov    ch,0xe7
  422727:	sbb    ebp,ebp
  422729:	rol    edi,0xf2
  42272c:	pop    es
  42272d:	pushf  
  42272e:	rcr    bh,0x9
  422731:	dec    ebp
  422732:	pop    edx
  422733:	pop    ds
  422734:	in     eax,0xb5
  422736:	add    al,0xd8
  422738:	les    ecx,FWORD PTR [ecx+eiz*1+0x1f2dd39e]
  42273f:	leave  
  422740:	inc    edx
  422741:	mov    ebx,0x245d42b7
  422746:	inc    ebx
  422747:	call   0x6c6732a6
  42274c:	dec    ecx
  42274d:	ret    
  42274e:	cli    
  42274f:	fs call 0x3b1b1ee2
  422755:	jge    0x4227d4
  422757:	ss xchg esp,eax
  422759:	dec    ebx
  42275a:	sub    al,0x6e
  42275c:	(bad)
  422760:	(bad)  
  422761:	sbb    ebp,DWORD PTR [edi+ebx*8+0x7b4cff38]
  422768:	jl     0x422757
  42276a:	dec    ebx
  42276b:	mov    BYTE PTR [ebp+0x7bdd8160],dl
  422771:	push   ecx
  422772:	pop    edi
  422773:	mov    ebx,0xb999fea0
  422778:	pop    ebp
  422779:	xor    BYTE PTR [ebx-0x4ffc45c],dh
  42277f:	mov    bl,0x44
  422781:	or     eax,0x276241b7
  422786:	retf   0xab4e
  422789:	stos   DWORD PTR es:[edi],eax
  42278a:	add    BYTE PTR [ecx-0x75fdeecc],bl
  422790:	shl    esi,cl
  422792:	stc    
  422793:	dec    esp
  422794:	jno    0x42276b
  422796:	mov    ebx,0xef2f10c
  42279b:	pushf  
  42279c:	fbld   TBYTE PTR [eax-0x75]
  42279f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a0:	sbb    esi,eax
  4227a2:	adc    dl,BYTE PTR [edi+0x38]
  4227a5:	stc    
  4227a6:	push   esp
  4227a7:	xor    BYTE PTR [edi],bh
  4227a9:	sbb    al,0x15
  4227ab:	loope  0x42277d
  4227ad:	fwait
  4227ae:	ror    BYTE PTR [edi+eax*8],0x90
  4227b2:	inc    ebx
  4227b3:	or     ebx,DWORD PTR [eax-0x63e1fea5]
  4227b9:	dec    ebp
  4227ba:	lods   eax,DWORD PTR ds:[esi]
  4227bb:	dec    esp
  4227bc:	adc    eax,0x4afe9fa9
  4227c1:	push   ebx
  4227c2:	stc    
  4227c3:	and    ebx,DWORD PTR ds:0x95806c0c
  4227c9:	in     eax,0x0
  4227cb:	mov    eax,DWORD PTR [eax-0x77]
  4227ce:	sub    dl,dl
  4227d0:	dec    ebx
  4227d1:	inc    BYTE PTR [eax+eax*4+0x16]
  4227d5:	adc    BYTE PTR fs:[eax],cl
  4227d8:	stos   BYTE PTR es:[edi],al
  4227d9:	push   ebp
  4227da:	jle    0x4227a5
  4227dc:	mov    edx,0xcdadf63
  4227e1:	adc    dh,BYTE PTR [edi+0xd]
  4227e4:	fiadd  DWORD PTR [ecx+0x41]
  4227e7:	call   0x38d31b8c
  4227ec:	call   DWORD PTR [ebp+0x53fbb9d0]
  4227f2:	push   eax
  4227f3:	loopne 0x4227a1
  4227f5:	iret   
  4227f6:	das    
  4227f7:	std    
  4227f8:	adc    ebx,DWORD PTR [esi-0x10209411]
  4227fe:	inc    edx
  4227ff:	mov    WORD PTR [eax-0x71],fs
  422802:	das    
  422803:	into   
  422804:	mov    bh,0x52
  422806:	mov    ?,WORD PTR cs:[esi]
  422809:	xchg   ecx,eax
  42280a:	mov    ecx,0x10414968
  42280f:	clc    
  422810:	or     DWORD PTR [ebx+edi*2],eax
  422813:	push   ebx
  422814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422815:	outs   dx,DWORD PTR ds:[esi]
  422816:	sbb    DWORD PTR [eax+0x21eb5e94],esp
  42281c:	mov    ecx,0x344e4acc
  422821:	pop    ss
  422822:	or     DWORD PTR [ecx-0x7516bf45],0x311eb4f2
  42282c:	inc    ecx
  42282d:	aad    0x7a
  42282f:	mov    ds:0x734097e8,al
  422834:	jns    0x422811
  422836:	mov    ecx,0x42dcb634
  42283b:	mov    ch,0xb2
  42283d:	push   edi
  42283e:	mov    edx,0xfd0866ef
  422843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422844:	mov    ds:0x904b9215,eax
  422849:	shl    BYTE PTR [ebx+0x74],cl
  42284c:	in     al,dx
  42284d:	aas    
  42284e:	imul   esp,DWORD PTR [eax-0x2b9a67d5],0x9
  422855:	pop    esp
  422856:	aas    
  422857:	xchg   esp,eax
  422858:	adc    eax,0xbbb821ba
  42285d:	pushf  
  42285e:	sar    BYTE PTR [edx],1
  422860:	out    0x35,eax
  422862:	ret    
  422863:	adc    al,0x4e
  422865:	dec    esp
  422866:	xchg   edi,eax
  422867:	push   ecx
  422868:	jge    0x422804
  42286a:	pop    ss
  42286b:	add    al,0xc1
  42286d:	cwde   
  42286e:	mov    BYTE PTR [ecx-0x67207ee],bh
  422874:	add    ecx,0xffffffbd
  422877:	in     eax,0xde
  422879:	add    ebp,DWORD PTR [ebx-0x4f]
  42287c:	cmp    eax,0xb84bd5f2
  422881:	retf   
  422882:	or     BYTE PTR [edx-0x5919dc23],bl
  422888:	out    dx,eax
  422889:	sbb    BYTE PTR [edi+0x65],0x4a
  42288d:	push   ss
  42288e:	in     al,0xaf
  422890:	call   0x801:0x4ee49923
  422897:	cmp    bl,bl
  422899:	fsubr  QWORD PTR [edx-0x2b3f2944]
  42289f:	pop    edx
  4228a0:	push   ebp
  4228a1:	aam    0x7
  4228a3:	xchg   esi,eax
  4228a4:	push   es
  4228a5:	daa    
  4228a6:	dec    edi
  4228a7:	pop    ss
  4228a8:	jb     0x42285b
  4228aa:	pop    esp
  4228ab:	xor    eax,0x58f6e4e5
  4228b0:	shr    DWORD PTR [edx+0x5c700d73],0x3b
  4228b7:	sar    BYTE PTR [esi],0x49
  4228ba:	cmp    ch,dl
  4228bc:	adc    BYTE PTR [esi-0x58],bh
  4228bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c0:	jno    0x4228c3
  4228c2:	jbe    0x422927
  4228c4:	cmp    eax,0x754a4b1
  4228c9:	cld    
  4228ca:	dec    eax
  4228cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228cd:	pop    edx
  4228ce:	jp     0x422917
  4228d0:	mov    ebx,0x97d2b7a1
  4228d5:	loope  0x422881
  4228d7:	jnp    0x422878
  4228d9:	clc    
  4228da:	ins    DWORD PTR es:[edi],dx
  4228db:	xor    DWORD PTR [ecx-0x26],esp
  4228de:	lahf   
  4228df:	ds xor al,0x70
  4228e2:	xchg   DWORD PTR [ecx+0x2c0c7aaf],ebx
  4228e8:	push   eax
  4228e9:	jecxz  0x4228c1
  4228eb:	xor    eax,0x43255825
  4228f0:	icebp  
  4228f1:	dec    ebp
  4228f2:	lods   eax,DWORD PTR ds:[esi]
  4228f3:	sub    BYTE PTR [esi-0x58],cl
  4228f6:	push   ebx
  4228f7:	dec    edi
  4228f8:	outs   dx,DWORD PTR ds:[esi]
  4228f9:	and    DWORD PTR [ebp+0x55],edx
  4228fc:	dec    eax
  4228fd:	sahf   
  4228fe:	jnp    0x422970
  422900:	fld    DWORD PTR [eax-0x2d]
  422903:	frstor [edi]
  422905:	loope  0x422896
  422907:	push   edi
  422908:	cmp    al,0x31
  42290a:	dec    esi
  42290b:	fidivr DWORD PTR [ebp+edi*2+0x7f]
  42290f:	inc    ebp
  422910:	lahf   
  422911:	inc    esi
  422912:	imul   ecx,DWORD PTR [ebx+0x56],0xffffffed
  422916:	mov    dh,0x8d
  422918:	xlat   BYTE PTR ds:[ebx]
  422919:	dec    esi
  42291a:	fxch   st(7)
  42291c:	cmp    ch,ch
  42291e:	xchg   DWORD PTR [edi],ebx
  422920:	stos   DWORD PTR es:[edi],eax
  422921:	in     eax,dx
  422922:	xchg   esi,eax
  422923:	and    dl,dl
  422925:	xor    ebp,edx
  422927:	mov    ch,dl
  422929:	xor    dl,BYTE PTR [ebp-0x1]
  42292c:	in     al,dx
  42292d:	mov    edx,ecx
  42292f:	adc    DWORD PTR [edi-0x2816e6e5],ebx
  422935:	lods   eax,DWORD PTR ds:[esi]
  422937:	sub    eax,0x94d7ca88
  42293c:	fdiv   st(4),st
  42293e:	pop    ebx
  42293f:	cwde   
  422940:	aam    0x93
  422942:	jnp    0x4229aa
  422944:	and    BYTE PTR [eax-0x21],0xec
  422948:	jge    0x4228fb
  42294a:	lds    ebp,FWORD PTR [eax-0x27d20cb9]
  422950:	ins    DWORD PTR es:[edi],dx
  422951:	lea    eax,[edx-0x5cb363dd]
  422957:	mov    BYTE PTR ds:0xce83a2f6,al
  42295d:	push   ebx
  42295e:	dec    ebx
  42295f:	out    dx,eax
  422960:	leave  
  422961:	pop    esp
  422962:	cmp    ebx,DWORD PTR [esi]
  422964:	mov    cl,0xda
  422966:	inc    edx
  422967:	mov    ds:0x9d3d644d,al
  42296c:	(bad)  
  42296d:	push   ebx
  42296e:	or     al,0x36
  422970:	mov    ebp,0xb1d61081
  422975:	int3   
  422976:	jb     0x422977
  422978:	jo     0x42291b
  42297a:	mov    ebp,0xd7fb9eed
  42297f:	arpl   WORD PTR [eax+eax*8-0x757967dd],di
  422986:	xchg   DWORD PTR [edi+eiz*2+0xd],ebx
  42298a:	mov    dl,0x24
  42298c:	ds jb  0x42295b
  42298f:	lahf   
  422990:	sbb    ch,BYTE PTR [esi]
  422992:	mov    bl,0xfb
  422994:	push   edx
  422995:	inc    eax
  422996:	and    BYTE PTR [edx+0x63],0x63
  42299a:	cmp    eax,0xe0e1d4c8
  42299f:	jge    0x4229c6
  4229a1:	in     eax,0xd3
  4229a3:	xchg   eax,edi
  4229a5:	add    al,0xc5
  4229a7:	jmp    FWORD PTR [edx-0x4b98c7f7]
  4229ad:	leave  
  4229ae:	dec    esp
  4229af:	jnp    0x4229de
  4229b1:	jmp    0x1979:0x6b6a7fed
  4229b8:	mov    dh,0x6b
  4229ba:	adc    bl,al
  4229bc:	pop    es
  4229bd:	and    dh,BYTE PTR [ebx*2+0x1d67a2ef]
  4229c4:	pop    edi
  4229c5:	cmp    ebp,esp
  4229c7:	retf   
  4229c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c9:	add    eax,0xd21d7c8a
  4229ce:	mov    cl,0x7
  4229d0:	jle    0x4229e9
  4229d2:	ret    
  4229d3:	loope  0x422a3f
  4229d5:	cli    
  4229d6:	xchg   cl,ah
  4229d8:	dec    ebx
  4229d9:	sub    ah,BYTE PTR [edi]
  4229db:	jmp    0xe2ac:0xa66efc64
  4229e2:	inc    edx
  4229e3:	mov    ecx,0xc30dc28f
  4229e8:	popf   
  4229e9:	loop   0x422978
  4229eb:	adc    al,0x57
  4229ed:	sahf   
  4229ee:	sbb    DWORD PTR [eax-0x709e2618],eax
  4229f4:	jae    0x422a1d
  4229f6:	mov    al,ds:0x3b647a23
  4229fb:	ds pop ds
  4229fd:	retf   0x20bb
  422a00:	or     bl,bl
  422a02:	cmp    BYTE PTR [edi+edx*1],ah
  422a05:	shl    BYTE PTR [edx],cl
  422a07:	push   edi
  422a08:	pop    edx
  422a09:	cli    
  422a0a:	ins    DWORD PTR es:[edi],dx
  422a0b:	inc    esp
  422a0c:	xchg   edx,eax
  422a0d:	mov    edi,0xeb0dc3
  422a12:	mov    eax,0xc07f58b3
  422a17:	aas    
  422a18:	in     eax,dx
  422a19:	or     al,0x15
  422a1b:	xor    ebx,DWORD PTR [esi+0x3db86e90]
  422a21:	pop    edx
  422a22:	inc    esi
  422a23:	xor    al,0x4e
  422a25:	jbe    0x422a8f
  422a27:	mov    ebx,0x14b89635
  422a2c:	test   DWORD PTR [ecx+ecx*8-0x2f],ebx
  422a30:	das    
  422a31:	mov    cl,0x7b
  422a33:	cld    
  422a34:	dec    ebx
  422a35:	clc    
  422a36:	clc    
  422a37:	xor    DWORD PTR ds:0xf3108470,edx
  422a3d:	mov    esi,0x2e6b186d
  422a42:	mov    esi,0x87549d30
  422a47:	mov    ecx,edi
  422a49:	and    eax,0xcce1c7c2
  422a4e:	mul    DWORD PTR [esi+esi*8]
  422a51:	push   edx
  422a52:	addr16 and eax,esi
  422a55:	sub    ecx,edx
  422a57:	ins    BYTE PTR es:[edi],dx
  422a58:	add    DWORD PTR [esi-0x7f],ebp
  422a5b:	les    ecx,FWORD PTR [ebp-0x2d47577f]
  422a61:	ins    DWORD PTR es:[edi],dx
  422a62:	les    edi,FWORD PTR [ebp+ebp*8+0x3c5dc2a1]
  422a69:	jb     0x422a7b
  422a6b:	sahf   
  422a6c:	sbb    eax,0x1cd9f971
  422a72:	loope  0x422ae4
  422a74:	jb     0x422ad9
  422a76:	jne    0x422ace
  422a78:	or     cl,bh
  422a7a:	push   edx
  422a7b:	repnz outs dx,BYTE PTR fs:[esi]
  422a7e:	push   ebp
  422a7f:	stos   BYTE PTR es:[edi],al
  422a80:	push   0x6a
  422a82:	(bad)  
  422a83:	aas    
  422a84:	jmp    0x422aa5
  422a86:	retf   0x7901
  422a89:	adc    al,0xc
  422a8b:	and    bh,bh
  422a8d:	jmp    0x7b6:0xb0ed6cb1
  422a94:	repz sti 
  422a96:	imul   esp,DWORD PTR [edx],0xd520f7df
  422a9c:	cmp    ebx,DWORD PTR [ebx+0x5c]
  422a9f:	push   es
  422aa0:	add    eax,0x9cb5e46a
  422aa5:	cmp    ch,bh
  422aa7:	cmp    eax,0x65a50cfb
  422aac:	jne    0x422b28
  422aae:	vandnpd xmm4,xmm3,XMMWORD PTR [edx]
  422ab2:	ja     0x422ac8
  422ab4:	dec    edx
  422ab5:	mov    edx,DWORD PTR [edi+ebp*4+0x6a81dad8]
  422abc:	cmp    BYTE PTR [esi+ebp*4-0x225ed48f],cl
  422ac3:	ss jp  0x422a71
  422ac6:	cmp    BYTE PTR [ebx-0x79],0x1e
  422aca:	and    DWORD PTR [ebx+0x238baea8],0xffffffa1
  422ad1:	clc    
  422ad2:	and    bl,BYTE PTR [eax+0x7d]
  422ad5:	rol    DWORD PTR [ebx-0x72],cl
  422ad8:	push   cs
  422ad9:	mov    ebx,0xa4b5d4e2
  422ade:	add    DWORD PTR [esi-0x619b4d2a],edx
  422ae4:	fdivr  DWORD PTR [eax-0x7f6288e5]
  422aea:	pusha  
  422aeb:	cmp    esp,DWORD PTR [ecx]
  422aed:	pop    eax
  422aee:	fld    DWORD PTR [ebp+0x58]
  422af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af2:	mov    es:0x67fc6f8,eax
  422af8:	int    0x52
  422afa:	cld    
  422afb:	popf   
  422afc:	xor    BYTE PTR [ecx-0x253bcd8d],cl
  422b02:	push   esi
  422b03:	mov    cl,0x67
  422b05:	mov    edx,esi
  422b07:	inc    eax
  422b08:	addr16 jb 0x422b5c
  422b0b:	iret   
  422b0c:	adc    BYTE PTR fs:[esi+0x42],al
  422b10:	jmp    0xc713:0x7ff0dcdb
  422b17:	dec    ecx
  422b18:	clc    
  422b19:	adc    BYTE PTR [edi],bl
  422b1b:	inc    eax
  422b1c:	rcl    BYTE PTR [edx],cl
  422b1e:	in     al,0x6a
  422b20:	mov    BYTE PTR [edi+eax*1+0x49],dl
  422b24:	or     cl,ah
  422b26:	pop    eax
  422b27:	lods   al,BYTE PTR ds:[esi]
  422b28:	mov    ds:0x83f7bf6e,eax
  422b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b2e:	call   0x5378:0x1dbe9f6d
  422b35:	mov    eax,ds:0xcca219f6
  422b3a:	or     DWORD PTR es:[edx-0x9],0x6259b1ca
  422b42:	mov    bh,al
  422b44:	repz out 0x92,eax
  422b47:	nop
  422b48:	and    al,BYTE PTR [edx]
  422b4a:	retf   
  422b4b:	mov    esp,0xaf084bd9
  422b50:	mov    ds:0x7e5e9308,al
  422b55:	(bad)  
  422b56:	loope  0x422b13
  422b58:	test   al,0x8f
  422b5a:	xor    DWORD PTR [ecx-0x60],ebp
  422b5d:	shl    DWORD PTR [edi+eiz*4-0x135367d9],cl
  422b64:	shl    BYTE PTR [esi-0x772dd1ff],cl
  422b6a:	pop    ebx
  422b6b:	jae    0x422bc3
  422b6d:	pop    es
  422b6e:	pop    esi
  422b6f:	scas   eax,DWORD PTR es:[edi]
  422b70:	pop    esi
  422b71:	mov    cl,0xab
  422b73:	cmp    ebx,ebp
  422b75:	xchg   ebp,eax
  422b76:	pop    edx
  422b77:	int    0x53
  422b79:	icebp  
  422b7a:	pushf  
  422b7b:	std    
  422b7c:	imul   ebp,DWORD PTR [ecx+0x29dc5d63],0xffffff94
  422b83:	rcr    DWORD PTR [ebp-0x4a344df7],0x13
  422b8a:	add    DWORD PTR [eax-0x2e2202c9],ecx
  422b90:	(bad)  
  422b91:	sbb    al,al
  422b93:	mov    bl,0x4b
  422b95:	or     ecx,eax
  422b97:	or     dl,ah
  422b99:	pop    eax
  422b9a:	mov    WORD PTR [ebp+0x6d039f10],?
  422ba0:	cwde   
  422ba1:	dec    ebp
  422ba2:	lock pop ecx
  422ba4:	inc    BYTE PTR [eax]
  422ba6:	aas    
  422ba7:	dec    esp
  422ba8:	add    bl,ch
  422baa:	pop    esp
  422bab:	loope  0x422c00
  422bad:	xchg   DWORD PTR [edi],edx
  422baf:	repz fs pop ebp
  422bb2:	ret    0x28a5
  422bb5:	xor    BYTE PTR ds:0x5e2255e2,ch
  422bbb:	sub    DWORD PTR [eax],ebx
  422bbd:	jae    0x422b5f
  422bbf:	shl    edi,cl
  422bc1:	xchg   BYTE PTR [esi],bh
  422bc3:	adc    cl,BYTE PTR [ebp-0x2d3d2dc2]
  422bc9:	mov    ds:0x9189a333,eax
  422bce:	outs   dx,BYTE PTR ds:[esi]
  422bcf:	jmp    0x2662bb7d
  422bd4:	pop    edi
  422bd5:	mov    ebx,0x4082bfb
  422bda:	adc    al,0x12
  422bdc:	pop    eax
  422bdd:	or     BYTE PTR [edx+eax*8-0x6],cl
  422be1:	in     al,0x64
  422be3:	int    0xb7
  422be5:	pop    ebx
  422be6:	push   ds
  422be7:	push   edx
  422be8:	dec    esi
  422be9:	sub    edx,DWORD PTR [ebx-0x2aa64e2]
  422bef:	sub    cl,BYTE PTR es:[ebp-0x784e8fa7]
  422bf6:	scas   eax,DWORD PTR es:[edi]
  422bf7:	lods   al,BYTE PTR ds:[esi]
  422bf8:	neg    BYTE PTR [edi+0x6300f213]
  422bfe:	push   ebp
  422bff:	test   DWORD PTR [ebx-0x519956b6],esi
  422c05:	sub    ebx,edi
  422c07:	jmp    0x422ba7
  422c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c0a:	fwait
  422c0b:	jl     0x422c53
  422c0d:	inc    eax
  422c0e:	outs   dx,DWORD PTR ds:[esi]
  422c0f:	dec    ebx
  422c10:	xchg   edx,eax
  422c11:	mov    eax,ds:0x5c9301c
  422c16:	jnp    0x422bf9
  422c18:	sub    DWORD PTR ss:[edx+0x2755fd05],eax
  422c1f:	xlat   BYTE PTR ds:[ebx]
  422c20:	xor    BYTE PTR [ebx+0x612ffb60],ch
  422c26:	mov    gs,edx
  422c28:	mov    ebx,0xfb29d99
  422c2d:	pop    es
  422c2e:	loop   0x422c11
  422c30:	cmp    bl,BYTE PTR [ebx+eiz*2-0x49]
  422c34:	xchg   BYTE PTR [edx+0x13],ah
  422c37:	(bad)  
  422c38:	mov    dh,0xdc
  422c3a:	das    
  422c3b:	cdq    
  422c3c:	mov    ah,0x2f
  422c3e:	les    ebx,FWORD PTR [edx-0x68a23504]
  422c44:	(bad)  
  422c45:	jmp    0xec094caa
  422c4a:	inc    ecx
  422c4b:	cs sti 
  422c4d:	shl    BYTE PTR [ebx+0x576821aa],1
  422c53:	pop    esi
  422c54:	data16 arpl WORD PTR [ebx+0x5797994a],cx
  422c5b:	retf   0xeafd
  422c5e:	cwde   
  422c5f:	ffree  st(3)
  422c61:	push   0xffffff8a
  422c63:	and    eax,DWORD PTR [edi]
  422c65:	int3   
  422c66:	(bad)  
  422c67:	xchg   edi,eax
  422c68:	mul    BYTE PTR [esi]
  422c6a:	pop    ecx
  422c6b:	test   al,bh
  422c6d:	adc    DWORD PTR [ebx+0x7e],edx
  422c70:	fwait
  422c71:	mov    ecx,0xc6532749
  422c76:	cmp    ebp,edx
  422c78:	enter  0x25bd,0xe4
  422c7c:	jb     0x422c2d
  422c7e:	add    eax,0x22b93616
  422c83:	retf   
  422c84:	or     edi,DWORD PTR [ebx-0x21]
  422c87:	stos   BYTE PTR es:[edi],al
  422c88:	retf   
  422c89:	mov    ah,0xf7
  422c8b:	sub    eax,0xfc81c435
  422c90:	mov    al,ds:0xe8d9c6e3
  422c95:	fcmovbe st,st(1)
  422c97:	mov    dl,0x6
  422c99:	gs jmp 0x422c91
  422c9c:	dec    eax
  422c9d:	jmp    0x604addb3
  422ca2:	fprem  
  422ca4:	push   ds
  422ca5:	sbb    al,0x7f
  422ca7:	test   eax,0xf329e772
  422cac:	and    al,0x6d
  422cae:	jmp    0x6eb127d3
  422cb3:	jg     0x422cb4
  422cb5:	adc    BYTE PTR [edi+0x2e68b611],0x87
  422cbc:	jne    0x422c69
  422cbe:	dec    edx
  422cbf:	sub    esp,ebp
  422cc1:	lock fisttp DWORD PTR [ebp-0x55]
  422cc5:	dec    ebp
  422cc6:	dec    ebp
  422cc7:	xchg   esi,eax
  422cc8:	fisubr DWORD PTR cs:[ecx]
  422ccb:	mov    dh,0x61
  422ccd:	(bad)
  422cd0:	sub    ebp,ecx
  422cd2:	mov    ebp,0x515e2647
  422cd7:	inc    ebx
  422cd8:	scas   al,BYTE PTR es:[edi]
  422cd9:	test   eax,0xdeacd454
  422cde:	cs aad 0xdb
  422ce1:	out    dx,eax
  422ce2:	jbe    0x422cde
  422ce4:	sub    ch,BYTE PTR [esi+0xf8940b7]
  422cea:	std    
  422ceb:	(bad)  
  422cec:	mov    ds:0xf0c21294,eax
  422cf1:	pop    esi
  422cf2:	into   
  422cf3:	stos   BYTE PTR es:[edi],al
  422cf4:	or     esp,edx
  422cf6:	push   edi
  422cf7:	sar    edx,0xcc
  422cfa:	adc    eax,ebx
  422cfc:	or     DWORD PTR ds:0x13741ebb,ebx
  422d02:	or     al,0x5d
  422d04:	or     cl,dl
  422d06:	jmp    0x68ede810
  422d0b:	test   eax,eax
  422d0d:	push   0xffffffe1
  422d0f:	out    dx,eax
  422d10:	cmp    bl,bl
  422d12:	fs cwde 
  422d14:	mov    dh,0x94
  422d16:	mov    ebp,0x866ec121
  422d1b:	push   cs
  422d1c:	pop    ss
  422d1d:	fidivr WORD PTR [ebp+0x45144b20]
  422d23:	xor    DWORD PTR [ecx-0x68],edi
  422d26:	int3   
  422d27:	dec    esi
  422d28:	mov    bl,0x1a
  422d2a:	inc    esi
  422d2b:	sub    al,0x13
  422d2d:	xchg   esi,eax
  422d2e:	jo     0x422d84
  422d30:	inc    esp
  422d31:	mov    edx,DWORD PTR [esi]
  422d33:	jl     0x422d75
  422d35:	adc    DWORD PTR es:[esi+0x32],esp
  422d39:	jp     0x422d8e
  422d3b:	mov    al,0x18
  422d3d:	sbb    cl,dh
  422d3f:	es cmp ch,cl
  422d42:	jecxz  0x422cf5
  422d44:	inc    ebx
  422d45:	dec    edx
  422d46:	mov    esp,ecx
  422d48:	(bad)  
  422d49:	lods   al,BYTE PTR ds:[esi]
  422d4a:	ficomp WORD PTR [eax]
  422d4c:	pop    ds
  422d4d:	ss mov ah,0x50
  422d50:	sysenter 
  422d52:	pop    eax
  422d53:	mov    ds:0x15948ef6,eax
  422d58:	xchg   edi,eax
  422d59:	mov    esp,0x22bfa6df
  422d5e:	stos   DWORD PTR es:[edi],eax
  422d5f:	lea    ebp,[ebx-0x3a8817ab]
  422d65:	adc    BYTE PTR [edi],ch
  422d67:	pop    ecx
  422d68:	lock aas 
  422d6a:	sbb    ch,BYTE PTR cs:[ecx]
  422d6d:	mov    ebp,0x104755c2
  422d72:	mov    edx,0x8a323bd2
  422d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d78:	out    dx,al
  422d79:	das    
  422d7a:	inc    ecx
  422d7b:	shr    DWORD PTR ds:0x124340b3,0x77
  422d82:	push   edx
  422d83:	jbe    0x422d24
  422d85:	jmp    DWORD PTR [eax]
  422d87:	add    dh,dl
  422d89:	call   0x3eab6bf4
  422d8e:	mov    dl,0x49
  422d90:	and    al,0xd2
  422d92:	int    0x0
  422d94:	pop    ds
  422d95:	ficom  DWORD PTR [edx-0x21e001f9]
  422d9b:	ficom  WORD PTR [edi+0x1f]
  422d9e:	jae    0x422dc2
  422da0:	xor    eax,0xc41d57bd
  422da5:	inc    ebp
  422da6:	lods   al,BYTE PTR fs:[esi]
  422da8:	rol    esp,1
  422daa:	in     eax,dx
  422dab:	int    0x94
  422dad:	retf   0x3813
  422db0:	fdiv   QWORD PTR [edi-0x761b6ff0]
  422db6:	jg     0x422e16
  422db8:	ficomp DWORD PTR [ebp+0x49]
  422dbb:	pop    edi
  422dbc:	jmp    DWORD PTR [esi-0x30]
  422dbf:	inc    eax
  422dc0:	cld    
  422dc1:	adc    ah,BYTE PTR [edi]
  422dc3:	cmp    DWORD PTR [esi+0x6e],ebx
  422dc6:	pop    esp
  422dc7:	test   BYTE PTR [ebp+0x48089297],ch
  422dcd:	jns    0x422dbe
  422dcf:	lock (bad) 
  422dd1:	xlat   BYTE PTR ds:[ebx]
  422dd2:	adc    DWORD PTR [esi-0x3c],edx
  422dd5:	outs   dx,DWORD PTR ds:[esi]
  422dd6:	adc    edx,DWORD PTR [eax-0x32927683]
  422ddc:	jo     0x422db2
  422dde:	ret    
  422ddf:	pop    ds
  422de0:	(bad)  
  422de1:	cld    
  422de2:	jl     0x422daf
  422de4:	and    al,BYTE PTR [ecx-0x13]
  422de7:	mov    eax,0xd85ef51b
  422dec:	pop    ebp
  422ded:	clc    
  422dee:	mov    eax,0x1
  422df3:	mov    esp,ebp
  422df5:	pop    ebp
  422df6:	ret    
  422df7:	int3   
  422df8:	int3   
  422df9:	int3   
  422dfa:	int3   
  422dfb:	int3   
  422dfc:	int3   
  422dfd:	int3   
  422dfe:	int3   
  422dff:	int3   
  422e00:	push   ebp
  422e01:	mov    ebp,esp
  422e03:	sub    esp,0x8
  422e06:	push   esi
  422e07:	push   0xffff
  422e0c:	push   0x0
  422e0e:	mov    DWORD PTR [ebp-0x4],0x0
  422e15:	call   DWORD PTR ds:0x42902c
  422e1b:	mov    esi,DWORD PTR ds:0x429034
  422e21:	push   0xa
  422e23:	push   0x0
  422e25:	push   0x0
  422e27:	push   0xffffffff
  422e29:	mov    DWORD PTR [ebp-0x8],esi
  422e2c:	call   0x424340
  422e31:	test   esi,esi
  422e33:	jne    0x422e3f
  422e35:	push   esi
  422e36:	push   0x1
  422e38:	push   esi
  422e39:	call   DWORD PTR ds:0x429028
  422e3f:	push   0x0
  422e41:	push   0x4e
  422e43:	push   0x1e
  422e45:	push   0x0
  422e47:	call   DWORD PTR ds:0x429024
  422e4d:	test   eax,eax
  422e4f:	je     0x422e59
  422e51:	push   0x0
  422e53:	call   DWORD PTR ds:0x429008
  422e59:	mov    esi,DWORD PTR [ebp-0x8]
  422e5c:	call   esi
  422e5e:	mov    DWORD PTR [ebp-0x4],eax
  422e61:	mov    esi,DWORD PTR [ebp-0x4]
  422e64:	cmp    esi,0x57
  422e67:	jne    0x422e7e
  422e69:	push   0x6b850311
  422e6e:	call   0x411080
  422e73:	add    esp,0x4
  422e76:	push   0x0
  422e78:	call   DWORD PTR ds:0x429020
  422e7e:	push   0x5
  422e80:	push   esi
  422e81:	call   DWORD PTR ds:0x42913c
  422e87:	xor    eax,eax
  422e89:	pop    esi
  422e8a:	mov    esp,ebp
  422e8c:	pop    ebp
  422e8d:	ret    
  422e8e:	nop
  422e8f:	nop
  422e90:	sub    esp,0x10
  422e93:	push   0x0
  422e95:	push   0x0
  422e97:	push   0x0
  422e99:	call   DWORD PTR ds:0x429038
  422e9f:	push   0x0
  422ea1:	push   0x0
  422ea3:	call   DWORD PTR ds:0x429148
  422ea9:	lea    eax,[esp+0x0]
  422ead:	push   eax
  422eae:	call   DWORD PTR ds:0x429054
  422eb4:	call   DWORD PTR ds:0x429034
  422eba:	push   0x0
  422ebc:	push   0x0
  422ebe:	push   0x0
  422ec0:	call   0x424346
  422ec5:	cmp    WORD PTR [esp+0x0],0x0
  422ecb:	push   0x0
  422ecd:	je     0x422ee6
  422ecf:	push   0x0
  422ed1:	call   DWORD PTR ds:0x429130
  422ed7:	push   0x0
  422ed9:	call   0x422e00
  422ede:	add    esp,0x4
  422ee1:	jmp    0x42431e
  422ee6:	push   0x14
  422ee8:	push   0x0
  422eea:	push   0x0
  422eec:	call   DWORD PTR ds:0x429010
  422ef2:	call   ebp
  422ef4:	in     eax,0xfb
  422ef6:	mov    ecx,0x2ad53b2f
  422efb:	lea    esp,[ebx+0x35]
  422efe:	jl     0x422f0e
  422f00:	addr16 mov edi,0x3b2c016b
  422f06:	aad    0x2a
  422f08:	mov    DWORD PTR [ebx+0x35],esp
  422f0b:	cmp    al,0xf1
  422f0d:	cwde   
  422f0e:	mov    edi,0x3b2cb96b
  422f13:	aad    0x2a
  422f15:	mov    DWORD PTR [ebx+0x35],esp
  422f18:	jl     0x422f0b
  422f1a:	cwde   
  422f1b:	mov    edi,0x3b2cb96b
  422f20:	aad    0x2a
  422f22:	mov    DWORD PTR [ebx+0x35],esp
  422f25:	jl     0x422f18
  422f27:	cwde   
  422f28:	mov    edi,0x3b2cb96b
  422f2d:	aad    0x2a
  422f2f:	jno    0x422f94
  422f31:	xor    eax,0x587ff7c
  422f36:	gs mov ecx,0xb183298
  422f3c:	xor    DWORD PTR [edx+0x79],esp
  422f3f:	mov    cl,0xd0
  422f41:	int3   
  422f42:	xlat   BYTE PTR ds:[ebx]
  422f43:	add    cl,dl
  422f45:	or     al,0x4b
  422f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f48:	inc    ebp
  422f49:	out    dx,al
  422f4a:	adc    DWORD PTR [ecx+edx*1-0x2f],edx
  422f4e:	sti    
  422f4f:	fiadd  WORD PTR ds:0xf54f43d7
  422f55:	dec    eax
  422f56:	in     al,dx
  422f57:	inc    ebx
  422f58:	inc    edi
  422f59:	or     DWORD PTR [edi-0x66fa2948],ebx
  422f5f:	push   0xe40a8674
  422f64:	or     al,0x51
  422f66:	sbb    edi,ebx
  422f68:	xchg   ebp,eax
  422f69:	mov    dl,0x61
  422f6b:	popf   
  422f6c:	sub    al,0x3b
  422f6e:	aad    0x2a
  422f70:	mov    DWORD PTR [ebx+0x35],esp
  422f73:	jnp    0x422fdd
  422f75:	fs out 0x28,al
  422f78:	inc    ecx
  422f79:	mov    esi,0x1bd29631
  422f7e:	imul   esi,DWORD PTR [esi-0x7c],0xee79263
  422f85:	mov    ch,0x26
  422f87:	fs sub eax,0x503b83b8
  422f8d:	inc    esp
  422f8e:	sti    
  422f8f:	pop    edx
  422f90:	inc    edi
  422f91:	stc    
  422f92:	mov    bl,0x74
  422f94:	pop    esi
  422f95:	in     al,dx
  422f96:	and    cl,ah
  422f98:	fwait
  422f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f9a:	jbe    0x422f79
  422f9c:	push   ss
  422f9d:	xchg   BYTE PTR [ecx-0x1],ah
  422fa0:	aam    0xa9
  422fa2:	fbld   TBYTE PTR [eax+0x9]
  422fa5:	jb     0x422fe6
  422fa7:	or     DWORD PTR ss:[edx],ecx
  422faa:	mov    ch,0x21
  422fac:	cmp    DWORD PTR ds:0x1bd28d31,ebp
  422fb2:	imul   esi,DWORD PTR [esi-0x7c],0x92979262
  422fb9:	sub    esp,DWORD PTR [esi]
  422fbb:	test   BYTE PTR ds:0xcd2e83aa,cl
  422fc1:	out    dx,al
  422fc2:	sti    
  422fc3:	rcr    dl,0x56
  422fc6:	mov    bl,0x24
  422fc8:	ret    
  422fc9:	inc    edi
  422fca:	and    cl,dl
  422fcc:	push   es
  422fcd:	cmp    eax,0x2d60b376
  422fd2:	popa   
  422fd3:	loope  0x42301e
  422fd5:	xor    al,0xdf
  422fd7:	push   0x2e3ff171
  422fdc:	cwde   
  422fdd:	sti    
  422fde:	xlat   BYTE PTR ds:[ebx]
  422fdf:	sub    BYTE PTR [ecx-0x42],al
  422fe2:	xor    ebp,edx
  422fe4:	sub    cl,BYTE PTR [ecx-0xe83ca9d]
  422fea:	cwde   
  422feb:	out    dx,eax
  422fec:	cs mov ecx,0x28d4772c
  422ff2:	mov    DWORD PTR [edi-0x6741dc2a],ecx
  422ff8:	mov    edi,0x3b2cb96b
  422ffd:	aad    0x2a
  422fff:	imul   esp,DWORD PTR [ebx+0x36],0xb599fa7d
  423006:	imul   edi,DWORD PTR [ecx+0x2ad53fc0],0xffffff8d
  42300d:	gs xor eax,0xbf98f17c
  423013:	push   0x4
  423015:	sub    al,0x3b
  423017:	aad    0x3a
  423019:	mov    DWORD PTR [ebx+0x35],esp
  42301c:	jl     0x423012
  42301e:	cwde   
  42301f:	mov    edi,0x3b2cf86b
  423024:	lds    ebp,FWORD PTR [edx]
  423026:	mov    DWORD PTR [ebx+0x37],esp
  423029:	jl     0x42301c
  42302b:	popf   
  42302c:	mov    edi,0x3b2cb96a
  423031:	aad    0x2a
  423033:	mov    WORD PTR [ebx+0x34],fs
  423036:	jl     0x423029
  423038:	cwde   
  423039:	mov    edi,0x30acb96b
  42303e:	aad    0x2a
  423040:	lea    esp,[ebx+0x35]
  423043:	rol    eax,0x9d
  423046:	mov    edi,0xbb2cb969
  42304b:	aad    0x2a
  42304d:	cdq    
  42304e:	arpl   WORD PTR ds:0xbf98f16c,si
  423054:	imul   ebp,DWORD PTR [ecx+0x2ac53b2c],0xffffff89
  42305b:	arpl   WORD PTR ds:0xbf88f17c,si
  423061:	imul   edi,DWORD PTR [ecx+0x2ad53b2c],0xffffff89
  423068:	arpl   WORD PTR ds:0xb4f6757c,si
  42306e:	imul   edx,eax,0x2f
  423071:	cmp    edx,ebp
  423073:	sub    bh,BYTE PTR [ecx-0x334cca98]
  423079:	cwde   
  42307a:	mov    edi,0x3b2cb96b
  42307f:	aad    0x2a
  423081:	mov    DWORD PTR [ebx+0x35],esp
  423084:	jl     0x423077
  423086:	cwde   
  423087:	mov    edi,0x3b2cb96b
  42308c:	aad    0x2a
  42308e:	mov    DWORD PTR [ebx+0x35],esp
  423091:	jl     0x423084
  423093:	cwde   
  423094:	mov    edi,0x3b2cb96b
  423099:	aad    0x2a
  42309b:	mov    DWORD PTR [ebx+0x35],esp
  42309e:	jl     0x423091
  4230a0:	cwde   
  4230a1:	mov    edi,0x3b2cb96b
  4230a6:	aad    0x2a
  4230a8:	mov    DWORD PTR [ebx+0x35],esp
  4230ab:	jl     0x42309e
  4230ad:	cwde   
  4230ae:	mov    edi,0x3b2cb96b
  4230b3:	aad    0x2a
  4230b5:	mov    DWORD PTR [ebx+0x35],esp
  4230b8:	jl     0x4230ab
  4230ba:	cwde   
  4230bb:	mov    edi,0x3b2cb96b
  4230c0:	aad    0x2a
  4230c2:	mov    DWORD PTR [ebx+0x35],esp
  4230c5:	jl     0x4230b8
  4230c7:	cwde   
  4230c8:	mov    edi,0x3b2cb96b
  4230cd:	aad    0x2a
  4230cf:	mov    DWORD PTR [ebx+0x35],esp
  4230d2:	jl     0x4230c5
  4230d4:	cwde   
  4230d5:	mov    edi,0x3b2cb96b
  4230da:	aad    0x2a
  4230dc:	mov    DWORD PTR [ebx+0x35],esp
  4230df:	jl     0x4230d2
  4230e1:	cwde   
  4230e2:	mov    edi,0x4349cd45
  4230e7:	mov    eax,ds:0x3563892a
  4230ec:	pop    esp
  4230ed:	cli    
  4230ee:	cwde   
  4230ef:	mov    edi,0x3b2cb97b
  4230f4:	out    dx,eax
  4230f5:	mov    DWORD PTR cs:[ebx+0x31],esp
  4230f9:	jl     0x4230ec
  4230fb:	enter  0x28fa,0x8b
  4230ff:	js     0x423175
  423101:	aad    0x2a
  423103:	mov    DWORD PTR [ebx+0x35],esp
  423106:	jl     0x4230d9
  423108:	cwde   
  423109:	mov    edi,0x485e978b
  42310e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42310f:	dec    ecx
  423110:	mov    DWORD PTR [ebx+0x35],esp
  423113:	jl     0x4230b6
  423115:	cwde   
  423116:	mov    edi,0x3b27896b
  42311b:	aad    0x7a
  42311d:	mov    DWORD PTR [ebx+0x35],esp
  423120:	inc    edx
  423121:	cmc    
  423122:	cwde   
  423123:	mov    edi,0x3b2cb96b
  423128:	aad    0x2a
  42312a:	mov    DWORD PTR [ebx+0x35],esp
  42312d:	jl     0x423120
  42312f:	mov    eax,0x2c596bbf
  423134:	cmp    edx,ebp
  423136:	sub    cl,BYTE PTR [ecx-0xe83ca9d]
  42313c:	cwde   
  42313d:	mov    edi,0x3b2cb96b
  423142:	aad    0x2a
  423144:	mov    DWORD PTR [ebx+0x35],esp
  423147:	jl     0x42313a
  423149:	cwde   
  42314a:	mov    edi,0x3b2cb96b
  42314f:	aad    0x2a
  423151:	mov    DWORD PTR [ebx+0x35],esp
  423154:	jl     0x423147
  423156:	cwde   
  423157:	mov    edi,0x3b2cb96b
  42315c:	aad    0x2a
  42315e:	mov    DWORD PTR [ebx+0x35],esp
  423161:	jl     0x423154
  423163:	cwde   
  423164:	mov    edi,0x3b2cb96b
  423169:	aad    0x2a
  42316b:	mov    DWORD PTR [ebx+0x35],esp
  42316e:	jl     0x423161
  423170:	cwde   
  423171:	mov    edi,0x3b2cb96b
  423176:	aad    0x2a
  423178:	mov    DWORD PTR [ebx+0x35],esp
  42317b:	jl     0x42316e
  42317d:	cwde   
  42317e:	mov    edi,0x3b2cb96b
  423183:	aad    0x2a
  423185:	mov    DWORD PTR [ebx+0x35],esp
  423188:	jl     0x42317b
  42318a:	cwde   
  42318b:	mov    edi,0x3b2cb96b
  423190:	aad    0x2a
  423192:	mov    DWORD PTR [ebx+0x35],esp
  423195:	jl     0x423188
  423197:	cwde   
  423198:	mov    edi,0x3b2cb96b
  42319d:	aad    0x2a
  42319f:	mov    DWORD PTR [ebx+0x35],esp
  4231a2:	jl     0x423195
  4231a4:	cwde   
  4231a5:	mov    edi,0x3b2cb96b
  4231aa:	aad    0x2a
  4231ac:	mov    DWORD PTR [ebx+0x35],esp
  4231af:	jl     0x4231a2
  4231b1:	cwde   
  4231b2:	mov    edi,0x3b2cb96b
  4231b7:	aad    0x2a
  4231b9:	mov    DWORD PTR [ebx+0x35],esp
  4231bc:	jl     0x4231af
  4231be:	cwde   
  4231bf:	mov    edi,0x3b2cb96b
  4231c4:	aad    0x2a
  4231c6:	mov    DWORD PTR [ebx+0x35],esp
  4231c9:	jl     0x4231bc
  4231cb:	cwde   
  4231cc:	mov    edi,0x3b2cb96b
  4231d1:	aad    0x2a
  4231d3:	mov    DWORD PTR [ebx+0x35],esp
  4231d6:	jl     0x4231c9
  4231d8:	cwde   
  4231d9:	mov    edi,0x3b2cb96b
  4231de:	aad    0x2a
  4231e0:	mov    DWORD PTR [ebx+0x35],esp
  4231e3:	jl     0x4231d6
  4231e5:	cwde   
  4231e6:	mov    edi,0x3b2cb96b
  4231eb:	aad    0x2a
  4231ed:	mov    DWORD PTR [ebx+0x35],esp
  4231f0:	jl     0x4231e3
  4231f2:	cwde   
  4231f3:	mov    edi,0x3b2cb96b
  4231f8:	aad    0x2a
  4231fa:	mov    DWORD PTR [ebx+0x35],esp
  4231fd:	jl     0x4231f0
  4231ff:	cwde   
  423200:	mov    edi,0x3b2cb96b
  423205:	aad    0x2a
  423207:	mov    DWORD PTR [ebx+0x35],esp
  42320a:	jl     0x4231fd
  42320c:	cwde   
  42320d:	mov    edi,0x3b2cb96b
  423212:	aad    0x2a
  423214:	mov    DWORD PTR [ebx+0x35],esp
  423217:	jl     0x42320a
  423219:	cwde   
  42321a:	mov    edi,0x3b2cb96b
  42321f:	aad    0x2a
  423221:	mov    DWORD PTR [ebx+0x35],esp
  423224:	jl     0x423217
  423226:	cwde   
  423227:	mov    edi,0x3b2cb96b
  42322c:	aad    0x2a
  42322e:	mov    DWORD PTR [ebx+0x35],esp
  423231:	jl     0x423224
  423233:	cwde   
  423234:	mov    edi,0x3b2cb96b
  423239:	aad    0x2a
  42323b:	mov    DWORD PTR [ebx+0x35],esp
  42323e:	jl     0x423231
  423240:	cwde   
  423241:	mov    edi,0x3b2cb96b
  423246:	aad    0x2a
  423248:	mov    DWORD PTR [ebx+0x35],esp
  42324b:	jl     0x42323e
  42324d:	cwde   
  42324e:	mov    edi,0x3b2cb96b
  423253:	aad    0x2a
  423255:	mov    DWORD PTR [ebx+0x35],esp
  423258:	jl     0x42324b
  42325a:	cwde   
  42325b:	mov    edi,0x3b2cb96b
  423260:	aad    0x2a
  423262:	mov    DWORD PTR [ebx+0x35],esp
  423265:	jl     0x423258
  423267:	cwde   
  423268:	mov    edi,0x3b2cb96b
  42326d:	aad    0x2a
  42326f:	mov    DWORD PTR [ebx+0x35],esp
  423272:	jl     0x423265
  423274:	cwde   
  423275:	mov    edi,0x3b2cb96b
  42327a:	aad    0x2a
  42327c:	mov    DWORD PTR [ebx+0x35],esp
  42327f:	jl     0x423272
  423281:	cwde   
  423282:	mov    edi,0x3b2cb96b
  423287:	aad    0x2a
  423289:	mov    DWORD PTR [ebx+0x35],esp
  42328c:	jl     0x42327f
  42328e:	cwde   
  42328f:	mov    edi,0x3b2cb96b
  423294:	aad    0x2a
  423296:	mov    DWORD PTR [ebx+0x35],esp
  423299:	jl     0x42328c
  42329b:	cwde   
  42329c:	mov    edi,0x3b2cb96b
  4232a1:	aad    0x2a
  4232a3:	mov    DWORD PTR [ebx+0x35],esp
  4232a6:	jl     0x423299
  4232a8:	cwde   
  4232a9:	mov    edi,0x3b2cb96b
  4232ae:	aad    0x2a
  4232b0:	mov    DWORD PTR [ebx+0x35],esp
  4232b3:	jl     0x4232a6
  4232b5:	cwde   
  4232b6:	mov    edi,0x3b2cb96b
  4232bb:	aad    0x2a
  4232bd:	mov    DWORD PTR [ebx+0x35],esp
  4232c0:	jl     0x4232b3
  4232c2:	cwde   
  4232c3:	mov    edi,0x3b2cb96b
  4232c8:	aad    0x2a
  4232ca:	mov    DWORD PTR [ebx+0x35],esp
  4232cd:	jl     0x4232c0
  4232cf:	cwde   
  4232d0:	mov    edi,0x3b2cb96b
  4232d5:	aad    0x2a
  4232d7:	mov    DWORD PTR [ebx+0x35],esp
  4232da:	jl     0x4232cd
  4232dc:	cwde   
  4232dd:	mov    edi,0x3b2cb96b
  4232e2:	aad    0x2a
  4232e4:	mov    DWORD PTR [ebx+0x35],esp
  4232e7:	jl     0x4232da
  4232e9:	cwde   
  4232ea:	mov    edi,0x3b2cb96b
  4232ef:	aad    0x2a
  4232f1:	mov    DWORD PTR [ebx+0x72],esp
  4232f4:	xchg   edx,eax
  4232f5:	sti    
  4232f6:	cwde   
  4232f7:	nop
  4232f8:	imul   edi,DWORD PTR [ecx+0xd53b3c],0x2b
  4232ff:	mov    ecx,0xb50e1a44
  423304:	and    esp,ebp
  423306:	jmp    0x397f40cc
  42330b:	cmp    eax,0x750d53f6
  423310:	ret    0xdaac
  423313:	push   cs
  423314:	cmp    dl,BYTE PTR [esi+0x31]
  423317:	mov    al,ds:0x1e1ba508
  42331c:	popa   
  42331d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42331e:	xchg   BYTE PTR [eax-0xa],bl
  423321:	popf   
  423322:	sub    al,0xf7
  423324:	sub    ch,BYTE PTR [esi-0x5fd6423c]
  42332a:	cmc    
  42332b:	push   ss
  42332c:	pop    ecx
  42332d:	test   cl,dh
  42332f:	das    
  423330:	fs dec edx
  423332:	cdq    
  423333:	cmp    BYTE PTR [ebx],dl
  423335:	ins    DWORD PTR es:[edi],dx
  423336:	push   ds
  423337:	icebp  
  423338:	push   ds
  423339:	pop    es
  42333a:	pop    esi
  42333b:	xchg   esi,eax
  42333c:	pop    ss
  42333d:	adc    ah,BYTE PTR [edi+0xc039ddd]
  423343:	cmp    al,0x1
  423345:	mov    ebp,0xac2870cb
  42334a:	lods   al,BYTE PTR ds:[esi]
  42334b:	adc    eax,0xcd281695
  423350:	pop    edi
  423351:	dec    edi
  423352:	and    al,0xb3
  423354:	(bad)  
  423355:	data16 aaa 
  423357:	pushf  
  423358:	daa    
  423359:	in     eax,0xd9
  42335b:	mov    edi,0x5966b971
  423360:	pushf  
  423361:	test   BYTE PTR [esi],ah
  423363:	pop    esi
  423364:	sbb    DWORD PTR [edx+ecx*2+0x271cf5fd],0xffffffd3
  42336c:	cld    
  42336d:	(bad)  
  42336e:	pop    ebx
  42336f:	(bad)
  423372:	test   eax,0x78954851
  423377:	sbb    dl,BYTE PTR [ebx]
  423379:	and    DWORD PTR [edi],ebp
  42337b:	pop    ebx
  42337c:	sti    
  42337d:	dec    ecx
  42337e:	imul   BYTE PTR ds:0x5de5b0a4
  423384:	xchg   esp,eax
  423385:	ret    0x55f7
  423388:	call   0xfed92b3c
  42338d:	bound  esp,QWORD PTR [ecx-0x23]
  423390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423391:	cmp    ebx,DWORD PTR [edx-0x11]
  423394:	inc    esi
  423395:	lahf   
  423396:	bound  ecx,QWORD PTR [ebp-0x5f92a812]
  42339c:	mov    bh,cl
  42339e:	mov    eax,ds:0x9259dc06
  4233a3:	popf   
  4233a4:	int3   
  4233a5:	cmp    dl,bh
  4233a7:	jo     0x42332d
  4233a9:	(bad)  
  4233aa:	repnz cmp al,dl
  4233ad:	xlat   BYTE PTR ds:[ebx]
  4233ae:	inc    esi
  4233af:	shr    DWORD PTR [eax],cl
  4233b1:	rcr    DWORD PTR [ebx+0x6d],0xf
  4233b5:	sti    
  4233b6:	psrad  mm0,QWORD PTR [edi]
  4233b9:	xchg   ecx,eax
  4233ba:	cmp    edx,eax
  4233bc:	mov    al,0xf9
  4233be:	cmc    
  4233bf:	jbe    0x42334e
  4233c1:	pop    ecx
  4233c2:	mov    bh,0x2b
  4233c4:	(bad)  
  4233c6:	inc    edx
  4233c7:	addr16 mov al,0x85
  4233ca:	sbb    BYTE PTR [ecx],cl
  4233cc:	cmp    DWORD PTR [ecx+0x39],ecx
  4233cf:	or     al,0x24
  4233d1:	sahf   
  4233d2:	in     al,dx
  4233d3:	jecxz  0x4233c0
  4233d5:	mov    edi,0x4516bdeb
  4233da:	adc    ebx,ebx
  4233dc:	hlt    
  4233dd:	mov    cl,0xb7
  4233df:	and    bh,BYTE PTR [esi]
  4233e1:	fs sub al,0x92
  4233e4:	ja     0x42338e
  4233e6:	adc    DWORD PTR [eax-0x58783485],ebx
  4233ec:	dec    ebp
  4233ed:	fwait
  4233ee:	in     al,0x8
  4233f0:	jmp    0xfa16:0x64543d97
  4233f7:	push   esi
  4233f8:	bound  ecx,QWORD PTR [ebx+ebx*4-0x1cedbfd0]
  4233ff:	jle    0x423410
  423401:	sbb    bh,ch
  423403:	and    eax,0xfdadb7a
  423408:	mov    ecx,0xa5fb389d
  42340d:	(bad)  
  42340e:	mov    ebx,0x2c1f4f18
  423413:	mov    ah,0xa3
  423415:	and    DWORD PTR [esi+ebp*4-0x68392a41],eax
  42341c:	dec    ecx
  42341d:	popa   
  42341e:	leave  
  42341f:	mov    ch,BYTE PTR [esp+edi*8+0x6c]
  423423:	mov    DWORD PTR [eax+0x48],ecx
  423426:	and    ch,BYTE PTR [edi+eax*8+0x70]
  42342a:	es addr16 test al,cl
  42342e:	jge    0x4233e5
  423430:	xchg   esp,eax
  423431:	xchg   ebp,eax
  423432:	pop    edx
  423433:	or     esp,DWORD PTR [eax-0x3fc59740]
  423439:	mov    dh,BYTE PTR [edx]
  42343b:	dec    esi
  42343c:	mov    eax,0x5385eb2b
  423441:	and    eax,0x205f8524
  423446:	cmp    DWORD PTR [edi+esi*2+0x7b],ebx
  42344a:	(bad)  
  42344b:	outs   dx,DWORD PTR ds:[esi]
  42344c:	addr16 enter 0x5428,0x2f
  423451:	xchg   edx,eax
  423452:	mov    ecx,DWORD PTR [ebx+0xf7e2ad8]
  423458:	das    
  423459:	rcr    DWORD PTR [eax-0x7c93e3dc],0x8d
  423460:	cs jns 0x42345a
  423463:	or     al,0xf0
  423465:	push   ebp
  423466:	daa    
  423467:	mov    DWORD PTR [edx-0x3b8fead9],ecx
  42346d:	jmp    0x9a9b57e0
  423472:	js     0x423480
  423474:	inc    ebp
  423475:	loope  0x4234ac
  423477:	xlat   BYTE PTR ds:[ebx]
  423478:	stc    
  423479:	or     DWORD PTR [esi-0x6e],esi
  42347c:	mov    ah,0x5e
  42347e:	shl    ebx,0x48
  423481:	push   es
  423482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423483:	xor    eax,0x31eff174
  423488:	sub    esp,esi
  42348a:	xchg   esi,eax
  42348b:	scas   eax,DWORD PTR es:[edi]
  42348c:	jmp    0x423446
  42348e:	test   BYTE PTR [ecx*2+0x1ac5aa0e],cl
  423495:	inc    esi
  423496:	popa   
  423497:	mov    ds:0xac917888,al
  42349c:	popf   
  42349d:	push   esi
  42349e:	and    DWORD PTR [ebp-0x50],edx
  4234a1:	fwait
  4234a2:	dec    ebx
  4234a3:	lea    ecx,[eax]
  4234a5:	js     0x42347e
  4234a7:	cmc    
  4234a8:	ins    BYTE PTR es:[edi],dx
  4234a9:	push   eax
  4234aa:	add    BYTE PTR [esi+0x18],0x52
  4234ae:	push   eax
  4234af:	icebp  
  4234b0:	ins    DWORD PTR es:[edi],dx
  4234b1:	pusha  
  4234b2:	(bad)
  4234b5:	mov    DWORD PTR [ebx],esp
  4234b7:	lds    edi,FWORD PTR [eax-0x46]
  4234ba:	pop    ss
  4234bb:	ret    0x3e81
  4234be:	dec    ebx
  4234bf:	fcomp  DWORD PTR [esi]
  4234c1:	loop   0x423458
  4234c3:	icebp  
  4234c4:	out    0xa2,al
  4234c6:	call   0x112dccf4
  4234cb:	(bad)  
  4234cc:	jmp    0x9d0e5355
  4234d1:	pop    DWORD PTR [eax-0x10627284]
  4234d7:	out    0x4a,al
  4234d9:	aaa    
  4234da:	or     ebx,eax
  4234dc:	mov    bl,0x7c
  4234de:	and    al,0x9d
  4234e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234e1:	aad    0x28
  4234e3:	or     DWORD PTR [ebx+0x54b27685],ebx
  4234e9:	lods   al,BYTE PTR ds:[esi]
  4234ea:	mov    edx,0x532dcd25
  4234ef:	imul   ebx,DWORD PTR [ebp-0x4eb6b7f0],0xd3e666f0
  4234f9:	pop    ds
  4234fa:	jns    0x84d16660
  423500:	jo     0x42356f
  423502:	test   al,dl
  423504:	push   edx
  423505:	mov    edi,0xd95c16cf
  42350a:	xor    al,BYTE PTR [ecx+eiz*4]
  42350d:	inc    esi
  42350e:	inc    esi
  42350f:	jecxz  0x4234e9
  423511:	cld    
  423512:	cmc    
  423513:	sub    BYTE PTR [edi+ebx*2+0x6e6020c7],cl
  42351a:	jge    0x423556
  42351c:	enter  0x24f0,0x8a
  423520:	xchg   edx,eax
  423521:	ja     0x42357c
  423523:	add    DWORD PTR [eax+0xe6ef5ce],edi
  423529:	xchg   esi,eax
  42352a:	push   esi
  42352b:	xchg   edx,eax
  42352c:	ror    edi,cl
  42352e:	cmp    al,0x3a
  423530:	mov    ch,0x6b
  423532:	sahf   
  423533:	scas   al,BYTE PTR es:[edi]
  423534:	adc    al,0xd5
  423536:	mov    BYTE PTR [edi+0x1d],dl
  423539:	test   al,0xd5
  42353b:	leave  
  42353c:	cld    
  42353d:	addr16 inc ebp
  42353f:	fsub   st(4),st
  423541:	(bad)  
  423543:	(bad)  
  423544:	loope  0x4234f8
  423546:	out    0x9f,eax
  423548:	outs   dx,BYTE PTR ds:[esi]
  423549:	call   0x42572848
  42354e:	add    eax,0xf414e5eb
  423553:	push   edi
  423554:	mov    ah,0x6
  423556:	test   BYTE PTR [edi-0x2c9e9a7c],bl
  42355c:	sub    DWORD PTR [eax-0x7f68f757],esi
  423562:	pop    edi
  423563:	or     BYTE PTR [esi-0x6a9d86a8],bh
  423569:	shr    bh,cl
  42356b:	outs   dx,BYTE PTR ds:[esi]
  42356c:	and    BYTE PTR [ebx],ch
  42356e:	mov    ch,0xfa
  423570:	pop    ds
  423571:	inc    esp
  423572:	lahf   
  423573:	jg     0x423544
  423575:	clc    
  423576:	push   edx
  423577:	iret   
  423578:	sub    ebp,ecx
  42357a:	out    dx,eax
  42357b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42357c:	mov    DWORD PTR [esi-0x6c],ecx
  42357f:	cld    
  423580:	add    al,cl
  423582:	add    esp,DWORD PTR [eax]
  423584:	js     0x4235bd
  423586:	(bad)  
  423587:	push   0x861c5e1f
  42358c:	or     cl,BYTE PTR ds:0x9643f8e
  423592:	dec    edx
  423593:	inc    eax
  423594:	cmp    ebp,DWORD PTR [edx+ebx*2]
  423597:	repz xchg edx,eax
  423599:	jmp    0x20f9aed5
  42359e:	mov    ds:0x5eae2fdf,al
  4235a3:	js     0x4235a6
  4235a5:	push   0xd5443c92
  4235aa:	adc    eax,0xf96eaa3c
  4235af:	ins    BYTE PTR es:[edi],dx
  4235b0:	adc    eax,0x75609f2c
  4235b5:	mov    ah,0x40
  4235b7:	xor    DWORD PTR [edx-0x14b2d832],ebx
  4235bd:	mov    DWORD PTR [ebp+0x4e],edx
  4235c0:	add    eax,DWORD PTR es:[ebx]
  4235c3:	(bad)  
  4235c4:	xchg   ebx,eax
  4235c5:	loopne 0x42363a
  4235c7:	jle    0x42356a
  4235c9:	scas   al,BYTE PTR es:[edi]
  4235ca:	popa   
  4235cb:	mov    DWORD PTR [ecx],edi
  4235cd:	jl     0x42359a
  4235cf:	cmp    al,al
  4235d1:	stc    
  4235d2:	aaa    
  4235d3:	cdq    
  4235d4:	and    ah,BYTE PTR ds:0x85290e06
  4235da:	push   edx
  4235db:	pusha  
  4235dc:	shl    BYTE PTR [edi],cl
  4235de:	dec    esp
  4235df:	fsub   QWORD PTR [edi+0x2]
  4235e2:	out    0x2e,al
  4235e4:	jmp    0x4235c1
  4235e6:	cmp    edi,DWORD PTR ds:0x97206aa4
  4235ec:	mov    ebp,0xd03f8f68
  4235f1:	dec    ecx
  4235f2:	(bad)  
  4235f3:	fdivr  QWORD PTR [edx-0x1d]
  4235f6:	or     eax,0x9282c36c
  4235fb:	mov    ds:0xba3a06ac,eax
  423600:	push   ss
  423601:	enter  0x3e95,0xb6
  423605:	mov    ebx,0xaa192d3c
  42360a:	imul   ecx,DWORD PTR [edx],0x1aaddf6c
  423610:	les    eax,FWORD PTR [ebp-0x12]
  423613:	ret    
  423614:	adc    ah,BYTE PTR [edx+0x64]
  423617:	push   ds
  423618:	and    ecx,DWORD PTR [ebp-0x3b]
  42361b:	or     ebx,edi
  42361d:	stos   DWORD PTR es:[edi],eax
  42361e:	imul   edx,ebp,0xffffffaf
  423621:	aaa    
  423622:	xor    BYTE PTR es:[edi],0x3f
  423626:	sbb    ebx,DWORD PTR [edx+0xb]
  423629:	add    ah,dh
  42362b:	repz add eax,0x2c37cd35
  423631:	test   eax,0x4a8cadc6
  423636:	sahf   
  423637:	pop    ss
  423638:	in     al,0x4f
  42363a:	je     0x423659
  42363c:	xor    bh,BYTE PTR [ecx]
  42363e:	mov    eax,0x849efa4d
  423643:	mov    eax,0x8deaaa7c
  423648:	or     al,0xcc
  42364a:	xor    dl,BYTE PTR [edx-0x68]
  42364d:	int    0x6f
  42364f:	popa   
  423650:	push   ebx
  423651:	jmp    0xad1a:0x26bba726
  423658:	(bad)  
  423659:	out    dx,eax
  42365a:	fist   DWORD PTR [edi+0x2a]
  42365d:	or     bl,BYTE PTR [esi+0x7a]
  423660:	scas   eax,DWORD PTR es:[edi]
  423661:	fwait
  423662:	adc    eax,eax
  423664:	hlt    
  423665:	xor    ebx,ebp
  423667:	mov    esi,0xf145540c
  42366c:	sub    cl,BYTE PTR [edi-0x66e146cc]
  423672:	cmc    
  423673:	xchg   BYTE PTR [ecx+0x13f9091d],dl
  423679:	dec    ecx
  42367a:	lock icebp 
  42367c:	std    
  42367d:	mov    BYTE PTR [ecx],bl
  42367f:	push   eax
  423680:	inc    esi
  423681:	jne    0x42361a
  423683:	arpl   bp,ax
  423685:	jg     0x423664
  423687:	addr16 (bad) 
  423689:	adc    al,0xd3
  42368b:	pusha  
  42368c:	test   DWORD PTR [ecx],eax
  42368e:	fisubr DWORD PTR ds:0xebb18f71
  423694:	xlat   BYTE PTR ds:[ebx]
  423695:	shr    BYTE PTR [esi+ebx*8-0x3e],1
  423699:	mov    DWORD PTR [esi-0x57f4cd70],eax
  42369f:	mov    esi,0xdceaf5bd
  4236a4:	or     al,0x5f
  4236a6:	ds pushf 
  4236a8:	push   cs
  4236a9:	jle    0x423656
  4236ab:	retf   0x42f6
  4236ae:	out    0xdd,al
  4236b0:	xor    BYTE PTR [eax+ecx*4+0x6ca1400e],cl
  4236b7:	rcl    DWORD PTR [ebp+0x45],1
  4236ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236bb:	hlt    
  4236bc:	and    ebp,DWORD PTR [ebx+0x4d]
  4236bf:	mov    ebx,0x88ce8e40
  4236c4:	mov    ds:0xaaf6876d,eax
  4236c9:	out    0xc4,eax
  4236cb:	cmc    
  4236cc:	sahf   
  4236cd:	inc    eax
  4236ce:	enter  0x2afd,0xe7
  4236d2:	shl    BYTE PTR [edi-0x147f0833],1
  4236d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236d9:	pusha  
  4236da:	lds    ebx,FWORD PTR [esi+0x6d2a2549]
  4236e0:	lea    edx,[ecx]
  4236e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236e3:	cmc    
  4236e4:	adc    eax,0xfb9dc683
  4236e9:	std    
  4236ea:	or     al,0xc4
  4236ec:	jnp    0x42372e
  4236ee:	adc    BYTE PTR [edi+0x62],al
  4236f1:	add    bh,BYTE PTR [edi+ebp*2-0x67de2c3c]
  4236f8:	out    0x6e,al
  4236fa:	mov    ds:0x98b31d59,eax
  4236ff:	js     0x423770
  423701:	add    ah,BYTE PTR [eax+eax*1-0x4f]
  423705:	das    
  423706:	outs   dx,BYTE PTR ds:[esi]
  423707:	adc    al,0x64
  423709:	(bad)  
  42370a:	(bad)  
  42370b:	lods   al,BYTE PTR ds:[esi]
  42370c:	push   eax
  42370d:	mov    WORD PTR [esi-0x16],cs
  423710:	ds in  eax,dx
  423712:	loopne 0x4236dc
  423714:	jmp    0x423775
  423716:	xlat   BYTE PTR ds:[ebx]
  423717:	push   0x1fa1a3ca
  42371c:	mov    bl,bl
  42371e:	inc    edx
  42371f:	add    al,0xa9
  423721:	mov    bl,0xd7
  423723:	rcl    BYTE PTR [eax],0x46
  423726:	mov    ah,0xcc
  423728:	test   ecx,esp
  42372a:	xor    ah,BYTE PTR [ecx]
  42372c:	leave  
  42372d:	fs fwait
  42372f:	xchg   ebp,eax
  423730:	cli    
  423731:	jae    0x4236e5
  423733:	dec    ebp
  423734:	dec    ecx
  423735:	jmp    0x4236c8
  423737:	push   ds
  423738:	addr16 fs mov edx,0x51fe447d
  42373f:	pop    edi
  423740:	lock mov ch,0x3b
  423743:	fcmovb st,st(1)
  423745:	es aas 
  423747:	mov    cl,0xb8
  423749:	jecxz  0x423747
  42374b:	das    
  42374c:	mov    ebp,DWORD PTR [ecx-0x32]
  42374f:	inc    edx
  423750:	add    al,0x87
  423753:	push   es
  423754:	dec    eax
  423755:	mov    ah,0xec
  423757:	push   ds
  423758:	sahf   
  423759:	test   DWORD PTR [esp+edi*8],eax
  42375c:	rol    bh,cl
  42375e:	(bad)
  423762:	and    BYTE PTR [ebx-0x387f0b31],0xe8
  423769:	mov    esp,DWORD PTR [ebx+0x6d]
  42376c:	cld    
  42376d:	ja     0x4236fe
  42376f:	push   ds
  423770:	ret    0x3e2
  423773:	inc    edx
  423774:	xchg   edx,eax
  423775:	adc    eax,0x11eb7823
  42377a:	sub    al,0xaf
  42377c:	je     0x4237c1
  42377e:	add    al,0x57
  423780:	aas    
  423781:	jg     0x42379b
  423783:	in     eax,0xfc
  423785:	and    DWORD PTR [esp+edi*2+0x10],ebp
  423789:	test   eax,0x6c93a4a1
  42378e:	aam    0xb
  423790:	aaa    
  423791:	inc    ebx
  423792:	stos   DWORD PTR es:[edi],eax
  423793:	fbstp  TBYTE PTR [ecx+ebx*2+0x58355008]
  42379a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42379b:	fnstenv [ecx-0x49]
  42379e:	pop    ds
  42379f:	imul   edi,DWORD PTR [edi+eax*2+0x3c246c1f],0xe66a7110
  4237aa:	dec    eax
  4237ab:	xlat   BYTE PTR ds:[ebx]
  4237ac:	idiv   dh
  4237ae:	jne    0x42379a
  4237b0:	lock mov cs,WORD PTR [ecx+0x5e998d2f]
  4237b7:	adc    eax,0x5f091b19
  4237bc:	lods   eax,DWORD PTR ds:[esi]
  4237bd:	jmp    DWORD PTR [ebx]
  4237bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237c0:	pusha  
  4237c1:	sub    eax,0x900673f9
  4237c6:	and    eax,0xc828d6cd
  4237cb:	call   0xc283ecd2
  4237d0:	rcl    BYTE PTR [edx-0x9],0xff
  4237d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d5:	imul   esi,ebx,0x3a
  4237d8:	jle    0x423835
  4237da:	adc    eax,0x348af4f
  4237df:	iret   
  4237e0:	and    al,0xea
  4237e2:	punpckhwd mm6,QWORD PTR [ebx+0x20]
  4237e6:	aad    0x79
  4237e8:	fadd   DWORD PTR [esi]
  4237ea:	arpl   WORD PTR [ebx],cx
  4237ec:	ss clc 
  4237ee:	aad    0x3c
  4237f0:	push   ss
  4237f1:	cmp    dh,ch
  4237f3:	(bad)  
  4237f4:	cmp    bl,bl
  4237f6:	outs   dx,BYTE PTR ds:[esi]
  4237f7:	push   edx
  4237f8:	adc    BYTE PTR [edx],0x7f
  4237fb:	retf   
  4237fc:	push   edx
  4237fd:	lods   eax,DWORD PTR ds:[esi]
  4237fe:	and    eax,0xb1d38b6e
  423803:	lea    edi,[esi-0x1e]
  423806:	sbb    esi,edx
  423808:	jne    0x4237d4
  42380a:	jb     0x42383b
  42380c:	into   
  42380d:	mov    edx,0xab9b9a0c
  423812:	and    DWORD PTR [esi],ebp
  423814:	fwait
  423815:	push   es
  423816:	mov    edi,0x966b5f25
  42381b:	inc    esp
  42381c:	xor    DWORD PTR [ebp+0x3],ebp
  42381f:	push   cs
  423820:	and    ebp,edi
  423822:	cmp    al,BYTE PTR ds:0x73b72158
  423828:	dec    esi
  423829:	mov    al,ds:0xba2d101c
  42382e:	xchg   ebp,eax
  42382f:	push   es
  423830:	mov    cl,BYTE PTR [esi+0x5d]
  423833:	(bad)  
  423834:	retf   0x53ff
  423837:	call   0xbe5a:0xa3f31bca
  42383e:	xlat   BYTE PTR ds:[ebx]
  42383f:	das    
  423840:	fistp  DWORD PTR [ebx+eax*4]
  423843:	and    DWORD PTR [eax+ebx*1+0x51],0x53
  423848:	and    esi,DWORD PTR [ebp+edi*4-0x6cda6244]
  42384f:	test   eax,0x9c3c5280
  423854:	mov    al,ds:0x174483ef
  423859:	add    ebx,eax
  42385b:	out    dx,eax
  42385c:	or     al,0xd7
  42385e:	dec    ebp
  42385f:	or     ah,BYTE PTR [ecx+eiz*2]
  423862:	sahf   
  423863:	js     0x423878
  423865:	inc    eax
  423866:	ret    
  423867:	mov    fs,WORD PTR [edx+0x865fea7]
  42386d:	in     al,0x9e
  42386f:	(bad)  
  423870:	icebp  
  423871:	pop    edi
  423872:	ror    BYTE PTR [esp+ebp*2+0x3a],1
  423876:	lods   al,BYTE PTR ds:[esi]
  423877:	nop
  423878:	pop    edx
  423879:	loopne 0x423880
  42387b:	cli    
  42387c:	in     al,0x8d
  42387e:	lds    ebp,FWORD PTR [edi-0x69263684]
  423884:	cld    
  423885:	test   eax,0x19720de0
  42388a:	add    dl,0x2
  42388d:	push   ebp
  42388e:	pop    ecx
  42388f:	out    0x9d,eax
  423891:	and    ebx,DWORD PTR [ebp+0x38]
  423894:	jb     0x423875
  423896:	add    DWORD PTR [eax],esi
  423898:	mov    dh,BYTE PTR [edi]
  42389a:	pop    ecx
  42389b:	push   ecx
  42389c:	mov    edx,0x2bf0554a
  4238a1:	xchg   BYTE PTR [ecx+eiz*8+0x7d],dl
  4238a5:	ficomp WORD PTR [esi]
  4238a7:	push   esp
  4238a8:	test   eax,edx
  4238aa:	xor    al,0xb0
  4238ac:	xor    eax,0x170c6d2c
  4238b1:	mov    esi,0x43484e7
  4238b6:	mov    eax,ds:0x903699c8
  4238bb:	scas   eax,DWORD PTR es:[edi]
  4238bc:	lods   al,BYTE PTR ds:[esi]
  4238bd:	mov    dh,0x22
  4238bf:	mov    bl,0x9a
  4238c1:	cmp    BYTE PTR [ecx+0x2d],cl
  4238c4:	xor    BYTE PTR [esi+0x7f],cl
  4238c7:	or     BYTE PTR [ebx],bl
  4238c9:	mov    edi,0x14c47f52
  4238ce:	pop    es
  4238cf:	fiadd  WORD PTR [esi-0x255add60]
  4238d5:	cdq    
  4238d6:	xchg   ebx,eax
  4238d7:	inc    ebp
  4238d8:	loopne 0x42390c
  4238da:	jecxz  0x4238d6
  4238dc:	inc    edx
  4238dd:	cmp    dl,BYTE PTR [edx]
  4238df:	arpl   WORD PTR [edx+edi*8-0x59],sp
  4238e3:	cmp    eax,0x99385644
  4238e8:	adc    esi,ecx
  4238ea:	mov    bl,ah
  4238ec:	sti    
  4238ed:	push   ss
  4238ee:	xor    DWORD PTR fs:0x6bdd08ee,edx
  4238f5:	push   es
  4238f6:	jb     0x423952
  4238f8:	or     eax,0x47aaa37b
  4238fd:	dec    ecx
  4238fe:	lahf   
  4238ff:	rcr    BYTE PTR [edx+0x45],cl
  423902:	mov    DWORD PTR gs:[esi],esp
  423905:	xchg   edx,eax
  423906:	imul   edx,DWORD PTR [edx-0x55],0x630665ba
  42390d:	cmp    al,BYTE PTR [eax+edx*8-0x66d038cf]
  423914:	and    bl,bh
  423916:	in     eax,0x1c
  423918:	xrelease xchg BYTE PTR [ebp-0x52],al
  42391c:	cmc    
  42391d:	(bad)  [edx+0x2e935f80]
  423923:	in     al,dx
  423924:	xchg   esp,eax
  423925:	ret    0x3c8b
  423928:	pop    ebp
  423929:	mov    edi,0x70e162b1
  42392e:	xchg   ecx,eax
  42392f:	fist   WORD PTR [ebx-0x2e8e6a03]
  423935:	lock mov eax,ds:0x475f6c05
  42393b:	out    0xe7,al
  42393d:	push   0xffffffdb
  42393f:	cwde   
  423940:	mov    ebp,0xaacebf8c
  423945:	jbe    0x4238dc
  423947:	lock and bh,BYTE PTR [ecx-0x6a]
  42394b:	test   DWORD PTR [ebp+0x181236c0],esp
  423951:	sbb    DWORD PTR [ebx+edx*4+0x27],ecx
  423955:	add    DWORD PTR [edx],ecx
  423957:	sub    DWORD PTR [ebx+ebp*4],0xffffffc6
  42395b:	nop
  42395c:	mov    ecx,0x29bfad9
  423961:	adc    BYTE PTR [edx-0x7fc825ec],0x36
  423968:	sbb    BYTE PTR [esi+0x2d7246e9],0x8c
  42396f:	mov    bh,0x8d
  423971:	mov    BYTE PTR ds:[esi+0x38],dh
  423975:	cwde   
  423976:	out    dx,al
  423977:	jmp    0x7e14:0x1f34e503
  42397e:	inc    eax
  42397f:	inc    esp
  423980:	imul   edi,DWORD PTR [esi],0x53
  423983:	xor    BYTE PTR [ebx-0x7d],bl
  423986:	fdiv   DWORD PTR [eax-0x79]
  423989:	xchg   edi,eax
  42398a:	dec    edx
  42398b:	lock cli 
  42398d:	sti    
  42398e:	call   0xbecf:0xf5f79ba6
  423995:	ins    DWORD PTR es:[edi],dx
  423996:	leave  
  423997:	retf   
  423998:	(bad)  
  423999:	cdq    
  42399a:	js     0x4239a9
  42399c:	fild   QWORD PTR [edi]
  42399e:	xor    edi,DWORD PTR [esi+eiz*4]
  4239a1:	retf   0x6fa1
  4239a4:	add    al,0x58
  4239a6:	mov    ch,0x7d
  4239a8:	cld    
  4239a9:	shr    DWORD PTR [edx+0x7a64bd0d],1
  4239af:	adc    eax,0xd09b86d2
  4239b4:	cld    
  4239b5:	out    0xe1,al
  4239b7:	cmp    esp,DWORD PTR [eax-0x68]
  4239ba:	pop    esi
  4239bb:	inc    esi
  4239bc:	adc    al,0x6
  4239be:	ds cli 
  4239c0:	xor    eax,0x8e311b4b
  4239c5:	xlat   BYTE PTR ds:[ebx]
  4239c6:	xchg   DWORD PTR [eax+0x7d],ecx
  4239c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239ca:	and    bh,BYTE PTR [eax-0x2a6e155a]
  4239d0:	fs js  0x4239fb
  4239d3:	mov    eax,ds:0x375e39b8
  4239d8:	imul   esp,esi,0xffffffb7
  4239db:	sbb    al,0x68
  4239dd:	fdivr  QWORD PTR [eax]
  4239df:	add    DWORD PTR [ecx+0x5ad9e806],ebp
  4239e5:	adc    DWORD PTR [edx],0xffffffcf
  4239e8:	dec    eax
  4239e9:	bound  edi,QWORD PTR [ebp-0x31]
  4239ec:	das    
  4239ed:	inc    esi
  4239ef:	mov    BYTE PTR [edi+0x28],cl
  4239f2:	mov    al,ds:0x8bf2da03
  4239f7:	jg     0x42397f
  4239f9:	lock and BYTE PTR [ebx+0x1f],al
  4239fd:	jecxz  0x423a2d
  4239ff:	mov    ds:0x2b45c5c6,eax
  423a04:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  423a06:	dec    ecx
  423a07:	xchg   esp,eax
  423a08:	in     al,0xd0
  423a0a:	popf   
  423a0b:	mov    ch,0xeb
  423a0d:	cmp    BYTE PTR [edx+0xe44750c],cl
  423a13:	push   ebp
  423a14:	iret   
  423a15:	les    ecx,FWORD PTR [esi-0x77cc0663]
  423a1b:	rcr    bl,1
  423a1d:	sub    ebp,esi
  423a1f:	mov    BYTE PTR [ecx-0x5b],ch
  423a22:	or     eax,DWORD PTR [esi-0x72]
  423a25:	mov    ebx,DWORD PTR [esi-0xd]
  423a28:	loop   0x4239b3
  423a2a:	inc    eax
  423a2b:	loop   0x423a72
  423a2d:	shl    BYTE PTR [edx+esi*1-0x5975c06f],cl
  423a34:	sbb    eax,0x6e0942d5
  423a39:	lds    edi,FWORD PTR [edi]
  423a3b:	into   
  423a3c:	pushf  
  423a3d:	pop    ds
  423a3e:	pop    esi
  423a3f:	shl    al,0xf7
  423a42:	add    ecx,DWORD PTR [ecx]
  423a44:	mov    ?,WORD PTR [eax+0x1e70d5c5]
  423a4a:	es or  al,0x5f
  423a4d:	mov    bh,0x31
  423a4f:	jo     0x423a42
  423a51:	js     0x423a9f
  423a53:	inc    ebx
  423a54:	out    dx,eax
  423a55:	sub    al,0xdf
  423a57:	out    dx,eax
  423a58:	ror    BYTE PTR es:[ebx],cl
  423a5b:	inc    ebx
  423a5c:	pop    ecx
  423a5d:	add    al,0x1e
  423a5f:	imul   esp,ebx,0x936e2b5a
  423a65:	mov    ebp,0x2c478c86
  423a6a:	mov    ebp,0xa87271b1
  423a6f:	(bad)  
  423a70:	and    dh,BYTE PTR [ecx+0x29]
  423a73:	dec    ebp
  423a74:	cmp    DWORD PTR [esi-0x4c],eax
  423a77:	out    0x77,al
  423a79:	pushf  
  423a7a:	stos   BYTE PTR es:[edi],al
  423a7b:	outs   dx,BYTE PTR ds:[esi]
  423a7c:	inc    bl
  423a7e:	cwde   
  423a7f:	rcr    DWORD PTR [edx-0x29fd8a0c],1
  423a85:	or     BYTE PTR [edx+ebx*2-0x20765fad],cl
  423a8c:	mov    esp,0xfa73b2fa
  423a91:	cli    
  423a92:	mov    al,ds:0x2496ffa8
  423a97:	sub    ah,BYTE PTR [edi+ecx*4+0x70]
  423a9b:	mov    dh,0x21
  423a9d:	cmp    DWORD PTR ss:[eax-0x7aaacba8],edx
  423aa4:	out    0x9,eax
  423aa6:	in     al,0xbc
  423aa8:	xor    al,0xd3
  423aaa:	nop
  423aab:	xchg   esp,eax
  423aac:	mov    bh,0x2a
  423aae:	stos   DWORD PTR es:[edi],eax
  423aaf:	ret    
  423ab0:	jmp    0x97b1e717
  423ab5:	mov    ecx,esp
  423ab7:	shl    DWORD PTR [ebx-0x48],cl
  423aba:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  423abc:	dec    dx
  423abe:	sahf   
  423abf:	mov    al,0x9b
  423ac1:	rcr    DWORD PTR [eax+0x4b],0x44
  423ac5:	xor    ah,dh
  423ac7:	dec    ebp
  423ac8:	xchg   edi,eax
  423ac9:	test   al,0x95
  423acb:	mov    esp,0x39bdc582
  423ad0:	iret   
  423ad1:	fstp   QWORD PTR [ecx+ebp*8-0x38]
  423ad5:	sbb    BYTE PTR [edx-0x4178f4ee],ch
  423adb:	mov    dh,0xc4
  423add:	adc    cl,ch
  423adf:	mov    edx,0x3a3e3f68
  423ae4:	scas   eax,DWORD PTR es:[edi]
  423ae5:	sub    BYTE PTR [ebp+esi*2+0x11],cl
  423ae9:	shl    dl,cl
  423aeb:	cmp    bh,ah
  423aed:	xor    al,0x12
  423aef:	adc    edi,DWORD PTR [esi+0x9]
  423af2:	xchg   esi,eax
  423af3:	scas   eax,DWORD PTR es:[edi]
  423af4:	cld    
  423af5:	sub    DWORD PTR [edx-0x64],edx
  423af8:	js     0x423b58
  423afa:	retf   
  423afb:	or     DWORD PTR [ebx+0x66cbe7c2],esi
  423b01:	loopne 0x423a96
  423b03:	xor    BYTE PTR [esi-0x2],al
  423b06:	xlat   BYTE PTR ds:[ebx]
  423b07:	ror    ebp,1
  423b09:	cwde   
  423b0a:	xor    ebp,DWORD PTR [esi-0x2]
  423b0d:	sbb    ah,BYTE PTR [edi+0x16]
  423b10:	jl     0x423b14
  423b12:	xor    eax,0xa74cda0c
  423b17:	enter  0x63e0,0x7a
  423b1b:	sbb    DWORD PTR [edx-0x59beff0],esi
  423b21:	gs js  0x423afb
  423b24:	outs   dx,DWORD PTR ds:[esi]
  423b25:	fsub   st,st(5)
  423b27:	int    0x88
  423b29:	pop    eax
  423b2a:	xchg   esi,eax
  423b2b:	push   ebx
  423b2c:	inc    esp
  423b2d:	mov    cl,0x8c
  423b2f:	lods   al,BYTE PTR ds:[esi]
  423b30:	push   ebp
  423b31:	xchg   esp,edi
  423b33:	scas   al,BYTE PTR es:[edi]
  423b34:	repnz mov al,0xde
  423b37:	adc    bh,bh
  423b39:	mov    ah,BYTE PTR [ecx]
  423b3b:	cmc    
  423b3c:	mov    eax,0x7a0f0316
  423b41:	mov    ebp,DWORD PTR ss:[ecx+0x71]
  423b45:	push   edi
  423b46:	test   BYTE PTR [edx+0x6e],dh
  423b49:	mov    cl,0x4e
  423b4b:	aad    0x20
  423b4d:	(bad)  
  423b4e:	repnz cmp esp,edi
  423b51:	or     BYTE PTR [ecx],ch
  423b53:	cdq    
  423b54:	mov    esp,0xc77e959b
  423b59:	call   0xcbd224e3
  423b5e:	pusha  
  423b5f:	or     ecx,ebx
  423b61:	leave  
  423b62:	mov    DWORD PTR [ecx+0x38],esp
  423b65:	pop    esi
  423b66:	repnz cmp ebx,esp
  423b69:	push   cs
  423b6a:	sbb    al,0xb6
  423b6c:	aam    0x6a
  423b6e:	scas   eax,DWORD PTR es:[edi]
  423b6f:	xchg   ecx,eax
  423b70:	add    ah,BYTE PTR [esi-0x8]
  423b73:	das    
  423b74:	inc    esi
  423b75:	(bad)  [edx-0x71]
  423b78:	push   edx
  423b79:	sub    al,0xba
  423b7b:	inc    ebp
  423b7c:	(bad)  
  423b7d:	pusha  
  423b7e:	jo     0x423bcd
  423b80:	mov    ch,0xa9
  423b82:	int3   
  423b83:	add    ebx,DWORD PTR [eax+0x4824ee6c]
  423b89:	out    dx,al
  423b8a:	clc    
  423b8b:	sub    BYTE PTR [edx],dl
  423b8d:	outs   dx,BYTE PTR ds:[esi]
  423b8e:	push   eax
  423b8f:	lods   eax,DWORD PTR ds:[esi]
  423b90:	cmp    eax,0x28d688b
  423b95:	mov    bh,0x6d
  423b97:	mov    ebx,0x1129ab74
  423b9c:	pushf  
  423b9d:	ret    0xbd2d
  423ba0:	inc    edx
  423ba1:	scas   eax,DWORD PTR es:[edi]
  423ba2:	and    eax,DWORD PTR [ebx+edi*2-0x46eb4b3a]
  423ba9:	sub    DWORD PTR [edi],ebp
  423bab:	nop
  423bac:	outs   dx,BYTE PTR ds:[esi]
  423bad:	sbb    dh,BYTE PTR [edx+0x4a]
  423bb0:	push   ds
  423bb1:	or     dh,bl
  423bb3:	cdq    
  423bb4:	pop    edx
  423bb5:	pop    edi
  423bb6:	mov    ah,0xda
  423bb8:	mov    ecx,0xca61b066
  423bbd:	mov    DWORD PTR [ebp+0x50],0x3543462b
  423bc4:	cld    
  423bc5:	xchg   BYTE PTR [eax+0x64a05fbf],ah
  423bcb:	push   edx
  423bcc:	mov    bh,0x8
  423bce:	int    0x29
  423bd0:	mov    edx,edi
  423bd2:	pop    es
  423bd3:	in     al,0xc1
  423bd5:	pop    esi
  423bd6:	or     eax,0x25ba5793
  423bdb:	add    BYTE PTR [eax],ch
  423bdd:	add    DWORD PTR [edx],esi
  423bdf:	clc    
  423be0:	mov    es,WORD PTR ds:0x720b0460
  423be6:	dec    eax
  423be7:	cmp    ebx,DWORD PTR [edx+0x4e]
  423bea:	fs fcmovbe st,st(1)
  423bed:	xchg   ebx,eax
  423bee:	mov    esp,0x493cb2f6
  423bf3:	sbb    eax,0x90fd18fc
  423bf8:	inc    edi
  423bf9:	iret   
  423bfa:	cmp    BYTE PTR [ebp+ebx*1+0x97f616],ah
  423c01:	hlt    
  423c02:	xor    eax,DWORD PTR [esi+0x32]
  423c05:	xchg   DWORD PTR [ebp+eax*2-0x53164e4],eax
  423c0c:	jge    0x423bac
  423c0e:	sbb    eax,0x1e8b852c
  423c13:	push   edx
  423c14:	add    edi,ecx
  423c16:	mov    ecx,0xfc243d74
  423c1b:	test   DWORD PTR [ebx-0x75],edi
  423c1e:	add    DWORD PTR [ebx+0x3f778274],ebx
  423c24:	push   ecx
  423c25:	jmp    0x5ed3e30
  423c2a:	push   esp
  423c2b:	and    al,0x17
  423c2d:	(bad)  
  423c2e:	add    DWORD PTR [ecx],0x5
  423c31:	xchg   edx,eax
  423c32:	adc    eax,0xd4415c1f
  423c37:	fcmovnu st,st(0)
  423c39:	mov    al,0x2d
  423c3b:	push   esp
  423c3c:	adc    cl,dl
  423c3e:	adc    al,0xc2
  423c40:	cwde   
  423c41:	adc    eax,0x85e4d1f3
  423c46:	stos   DWORD PTR es:[edi],eax
  423c47:	pop    ebp
  423c48:	fidivr DWORD PTR [ebp-0xf]
  423c4b:	sbb    esp,edx
  423c4d:	aaa    
  423c4e:	ins    DWORD PTR es:[edi],dx
  423c4f:	jl     0x423c27
  423c51:	jb     0x423c4b
  423c53:	pop    ecx
  423c54:	fild   WORD PTR [eax-0x7592a241]
  423c5a:	add    eax,0xb0d1e20d
  423c5f:	xchg   BYTE PTR [esi+0x6232a92c],dh
  423c65:	popf   
  423c66:	jne    0x423cdd
  423c68:	add    ah,BYTE PTR [ebx-0x584e8196]
  423c6e:	and    al,0xfa
  423c70:	scas   eax,DWORD PTR es:[edi]
  423c71:	mov    ah,0x66
  423c73:	popa   
  423c74:	in     al,0xe4
  423c76:	imul   eax,DWORD PTR [ebx]
  423c79:	add    ah,bl
  423c7b:	sub    BYTE PTR [ebx-0x8],0x3a
  423c7f:	mov    edi,0x4a238a73
  423c84:	mov    ecx,0x1c5673d1
  423c89:	mov    dh,0x26
  423c8b:	cmp    BYTE PTR ds:0x39eeeb9a,dl
  423c91:	dec    esp
  423c92:	popa   
  423c93:	dec    esi
  423c94:	add    esp,DWORD PTR [edi-0x6a]
  423c97:	lock shr DWORD PTR [esi],0x5
  423c9b:	dec    eax
  423c9c:	xor    eax,0x9c7d5cb7
  423ca1:	push   cs
  423ca2:	int    0x14
  423ca4:	lods   al,BYTE PTR ds:[esi]
  423ca5:	gs xchg esp,eax
  423ca7:	fldcw  WORD PTR [eax]
  423ca9:	mov    ebp,0x28a94917
  423cae:	jmp    0x423c95
  423cb0:	mov    dh,0x41
  423cb2:	jne    0x423cff
  423cb4:	dec    eax
  423cb5:	mov    cl,0xc7
  423cb7:	xchg   ecx,eax
  423cb8:	add    DWORD PTR ds:0x2d07e1e8,0x727739f3
  423cc2:	repz pop ds
  423cc4:	xchg   BYTE PTR [eax+0x6ba6c30b],al
  423cca:	xchg   edi,eax
  423ccb:	jmp    0xbe70:0x6bee7461
  423cd2:	and    BYTE PTR [ebp+0x4429c37b],bh
  423cd8:	pusha  
  423cd9:	stos   BYTE PTR es:[edi],al
  423cda:	mov    dl,cl
  423cdc:	mov    esi,0x774d8a05
  423ce1:	fdivr  DWORD PTR [ecx]
  423ce3:	sub    cl,BYTE PTR [edx]
  423ce5:	les    esi,FWORD PTR [edx]
  423ce7:	xchg   edi,eax
  423ce8:	and    BYTE PTR [edi],ah
  423cea:	inc    eax
  423ceb:	imul   ebx,DWORD PTR [esi-0x34eff7c3],0xffffffe5
  423cf2:	ins    BYTE PTR es:[edi],dx
  423cf3:	xor    BYTE PTR cs:[edi-0x9],dl
  423cf7:	push   esi
  423cf8:	ss imul edx,esp,0x20af438a
  423cff:	pop    ebx
  423d00:	mov    ah,0x96
  423d02:	inc    eax
  423d03:	jle    0x423ccc
  423d05:	mov    ds:0xebafe3ea,eax
  423d0a:	test   al,0xb5
  423d0c:	xchg   DWORD PTR [ecx-0x7],edi
  423d0f:	and    esi,DWORD PTR [eax+0x60de3a16]
  423d15:	adc    BYTE PTR [esi-0x4bebf831],0xd1
  423d1c:	jae    0x423ca6
  423d1e:	mov    BYTE PTR [ebx],bh
  423d20:	mov    cl,0xb0
  423d22:	ins    BYTE PTR es:[edi],dx
  423d23:	sar    al,cl
  423d25:	mov    WORD PTR es:[esp-0x3d],es
  423d2a:	jg     0x423ce1
  423d2c:	stos   DWORD PTR es:[edi],eax
  423d2d:	dec    esi
  423d2e:	fst    DWORD PTR [ecx]
  423d30:	cld    
  423d31:	xchg   esi,eax
  423d32:	pusha  
  423d33:	push   cs
  423d34:	mov    WORD PTR [edx],fs
  423d36:	dec    esi
  423d37:	jecxz  0x423cfc
  423d39:	xor    ecx,DWORD PTR [ebx-0x103429f5]
  423d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d40:	in     eax,dx
  423d41:	sbb    DWORD PTR [edi],esp
  423d43:	push   0x70
  423d45:	popf   
  423d46:	nop
  423d47:	(bad)  
  423d49:	push   ebp
  423d4a:	dec    edi
  423d4b:	loope  0x423d4f
  423d4d:	ins    DWORD PTR es:[edi],dx
  423d4e:	or     eax,eax
  423d50:	lods   eax,DWORD PTR ds:[esi]
  423d51:	(bad)  
  423d52:	ja     0x423d6f
  423d54:	jno    0x423d78
  423d56:	jp     0x423d67
  423d58:	out    0xfe,al
  423d5a:	cld    
  423d5b:	mov    bh,0xc5
  423d5d:	call   0xc4a5f908
  423d62:	push   ebx
  423d63:	mov    DWORD PTR [ebx],ebp
  423d65:	adc    eax,0x3c18efd9
  423d6a:	loopne 0x423d98
  423d6c:	cmp    esi,DWORD PTR [ebx+eiz*4-0x11]
  423d70:	mov    eax,0x5683d65d
  423d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d76:	xacquire xchg BYTE PTR [esi-0x12555f72],ch
  423d7d:	jne    0x423d0d
  423d7f:	mov    al,ds:0x6420e994
  423d84:	mov    bl,0x0
  423d86:	dec    ebx
  423d87:	mov    dl,al
  423d89:	(bad)  
  423d8a:	jae    0x423dc0
  423d8c:	xchg   edi,eax
  423d8d:	jnp    0x423d2f
  423d8f:	dec    ebp
  423d90:	mov    ch,0x42
  423d92:	mov    al,ds:0x43e56236
  423d97:	inc    esp
  423d98:	sbb    BYTE PTR [edx],al
  423d9a:	js     0x423dd8
  423d9c:	dec    ecx
  423d9d:	(bad)  
  423d9e:	mov    dl,0xa2
  423da0:	out    dx,al
  423da1:	les    ebp,FWORD PTR [esi-0x5afb5164]
  423da7:	push   ds
  423da8:	ja     0x423da7
  423daa:	dec    esp
  423dab:	retf   
  423dac:	push   ebx
  423dad:	push   edi
  423dae:	(bad)  
  423daf:	pop    ebx
  423db0:	fadd   DWORD PTR [edi+0xcddc46d]
  423db6:	sbb    DWORD PTR [ebp-0x9],ebp
  423db9:	out    dx,al
  423dba:	imul   ebp,DWORD PTR [ebx],0x78
  423dbd:	xor    DWORD PTR [eax+0x49],ebx
  423dc0:	stos   DWORD PTR es:[edi],eax
  423dc1:	jae    0x423db4
  423dc3:	xchg   edx,eax
  423dc4:	ins    DWORD PTR es:[edi],dx
  423dc5:	mov    eax,ebx
  423dc7:	mov    eax,ds:0x13249f12
  423dcc:	add    ecx,ecx
  423dce:	jae    0x423e23
  423dd0:	mov    BYTE PTR [edx+edx*1-0x44],ch
  423dd4:	xchg   esp,eax
  423dd5:	and    DWORD PTR [edx-0x1516ccf],esi
  423ddb:	mov    esi,0x3043224c
  423de0:	jo     0x423dfb
  423de2:	push   esp
  423de3:	aam    0x5a
  423de5:	xchg   edi,eax
  423de6:	into   
  423de7:	stos   DWORD PTR es:[edi],eax
  423de8:	mov    esi,0x42e1b633
  423ded:	dec    esp
  423dee:	ja     0x423df3
  423df0:	jns    0x423e51
  423df2:	pushf  
  423df3:	lock out dx,eax
  423df5:	jb     0x423ddb
  423df7:	pop    ebx
  423df8:	adc    dh,0x2f
  423dfb:	and    ebx,DWORD PTR [edi+0x70]
  423dfe:	ret    0x4ce8
  423e01:	or     al,0x8e
  423e03:	leavew 
  423e05:	push   es
  423e06:	aam    0x29
  423e08:	or     al,0x4b
  423e0a:	out    dx,eax
  423e0b:	loope  0x423e4a
  423e0d:	mov    edi,0x8083d12
  423e12:	adc    DWORD PTR [ecx],eax
  423e14:	mov    edi,0x91131937
  423e19:	jbe    0x423e17
  423e1b:	xor    edi,DWORD PTR [ebp+0x5041ab1b]
  423e21:	std    
  423e22:	clc    
  423e23:	lea    edi,[ebx+0x20f68951]
  423e29:	dec    esp
  423e2a:	dec    ebp
  423e2b:	mov    BYTE PTR [ebx+eiz*1+0x69690c4],dl
  423e32:	scas   eax,DWORD PTR es:[edi]
  423e33:	in     eax,0xd8
  423e35:	and    al,0x0
  423e37:	ucomiss xmm3,DWORD PTR ds:0xd687092e
  423e3e:	mov    bl,0x77
  423e40:	dec    esi
  423e41:	cld    
  423e42:	mov    ecx,0xa1c9b490
  423e47:	enter  0x3f18,0xf2
  423e4b:	sbb    BYTE PTR [eax-0x74b2b445],0xec
  423e52:	pop    ebx
  423e53:	fisttp QWORD PTR [edi+0x466f8f45]
  423e59:	push   cs
  423e5a:	xchg   ebp,eax
  423e5b:	mov    bl,0xa5
  423e5d:	mov    esi,0xc083178d
  423e62:	loop   0x423ec6
  423e64:	fmulp  st(6),st
  423e66:	sti    
  423e67:	jg     0x423eaa
  423e69:	lock repnz retf 
  423e6c:	mov    es,WORD PTR ds:0xf3dc2197
  423e72:	sub    al,0xe9
  423e74:	push   ebp
  423e75:	or     sp,WORD PTR [edx]
  423e78:	and    bl,BYTE PTR [esi+0x79]
  423e7b:	inc    ecx
  423e7c:	sub    al,0x48
  423e7e:	jmp    0x423eef
  423e80:	dec    eax
  423e81:	inc    ebx
  423e82:	mov    eax,ds:0x8330a9b2
  423e87:	cs pop ss
  423e89:	bound  ebp,QWORD PTR [esp+ebx*8-0x42]
  423e8d:	sub    DWORD PTR [esi-0x75448fa6],edx
  423e93:	je     0x423e94
  423e95:	and    al,0x87
  423e97:	frstor [esi-0x682da04e]
  423e9d:	xchg   esi,eax
  423e9e:	xchg   ecx,eax
  423e9f:	pusha  
  423ea0:	mov    edi,DWORD PTR [eax+0x7f]
  423ea3:	fisttp QWORD PTR [ebx]
  423ea5:	shl    dl,cl
  423ea7:	or     ch,BYTE PTR [esi-0x5bfad687]
  423ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eae:	or     BYTE PTR [edx-0x2d1cb973],cl
  423eb4:	daa    
  423eb5:	inc    eax
  423eb6:	jae    0x423ed7
  423eb8:	rcr    bh,1
  423eba:	(bad)  
  423ebb:	sbb    eax,0xb760b52b
  423ec0:	mov    ds:0xfc7f7327,al
  423ec5:	xchg   ecx,eax
  423ec6:	xor    BYTE PTR [ecx+0x62b9d9b9],dh
  423ecc:	ins    BYTE PTR es:[edi],dx
  423ecd:	nop
  423ece:	repz or eax,0x8235dc4a
  423ed4:	mov    dh,0xd7
  423ed6:	fcomp  QWORD PTR ds:0x9610a837
  423edc:	xlat   BYTE PTR ds:[ebx]
  423edd:	cmp    bh,BYTE PTR [esi-0x78]
  423ee0:	stos   BYTE PTR es:[edi],al
  423ee1:	jecxz  0x423f1f
  423ee3:	arpl   WORD PTR [edx+0x478e1be7],bx
  423ee9:	add    dl,BYTE PTR [eax-0x2e42f15d]
  423eef:	call   0xc96a:0x6a2120d8
  423ef6:	fdiv   DWORD PTR [ecx-0x3611c70d]
  423efc:	(bad)
  423eff:	in     al,dx
  423f00:	shr    DWORD PTR [ecx-0x5d],1
  423f03:	fnsave [ecx+0x6]
  423f06:	dec    ebp
  423f07:	cmp    esi,DWORD PTR [esi-0x65]
  423f0a:	jmp    0x423ed4
  423f0c:	popa   
  423f0d:	xor    esi,DWORD PTR [esi+0x34]
  423f10:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f12:	dec    edi
  423f13:	out    0x83,eax
  423f15:	or     eax,0x242a7d10
  423f1a:	scas   eax,DWORD PTR es:[edi]
  423f1b:	and    BYTE PTR [ebp+0x3ce8a493],bl
  423f21:	dec    ebx
  423f22:	loope  0x423f05
  423f24:	addr16 retf 0xda08
  423f28:	js     0x423f86
  423f2a:	sub    al,0x66
  423f2c:	inc    esp
  423f2d:	fs jmp 0xbf63:0x74a4c2d9
  423f35:	cmp    DWORD PTR [ebx],esp
  423f37:	xor    ah,ch
  423f39:	xor    DWORD PTR [edx+0x27411e4d],eax
  423f3f:	ret    0x575a
  423f42:	in     eax,dx
  423f43:	fcomip st,st(7)
  423f45:	xor    ecx,edi
  423f47:	pcmpgtb mm4,mm1
  423f4a:	mov    esi,DWORD PTR [ebp-0x14fa7399]
  423f50:	lods   eax,DWORD PTR ds:[esi]
  423f51:	cmp    edi,edx
  423f53:	int3   
  423f54:	push   cs
  423f55:	add    dh,BYTE PTR [eax-0x65]
  423f58:	push   ds
  423f59:	in     eax,0x89
  423f5b:	jecxz  0x423f87
  423f5d:	inc    esp
  423f5e:	pop    ebp
  423f5f:	mov    esp,0x2043594e
  423f64:	aam    0x40
  423f66:	jmp    0x9387:0x5845bf9
  423f6d:	(bad)  
  423f6e:	and    BYTE PTR [ecx-0x67],cl
  423f71:	push   eax
  423f72:	shr    DWORD PTR [edi+0x17],cl
  423f75:	sub    ebx,DWORD PTR [ebp+0x9]
  423f78:	push   cs
  423f79:	sub    eax,0x8be475b7
  423f7e:	adc    eax,ebx
  423f80:	pop    ebx
  423f81:	iret   
  423f82:	call   esp
  423f84:	mov    dl,0x2e
  423f86:	fisub  DWORD PTR [edx-0x61]
  423f89:	out    dx,eax
  423f8a:	add    ebp,DWORD PTR [edx-0x6d2fcbf3]
  423f90:	(bad)  
  423f91:	mov    eax,0x74eb64bf
  423f96:	sub    al,0x14
  423f98:	shl    BYTE PTR ds:[edx],0x42
  423f9c:	xor    BYTE PTR [esp+ebp*1-0xeebca4b],al
  423fa3:	dec    esp
  423fa4:	xchg   DWORD PTR ds:0xd5864580,esi
  423faa:	std    
  423fab:	mov    ah,0x1e
  423fad:	aas    
  423fae:	cmp    BYTE PTR [ebx-0x1a],cl
  423fb1:	add    al,0xa7
  423fb3:	push   ebp
  423fb4:	sbb    ebx,eax
  423fb6:	mov    eax,0xb3e8e8
  423fbb:	push   ebx
  423fbc:	mov    eax,ds:0x808764bb
  423fc1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  423fc3:	cmp    BYTE PTR [ebp+0x4b6f5f1e],dh
  423fc9:	push   ds
  423fca:	mov    al,0x7f
  423fcc:	cld    
  423fcd:	inc    ecx
  423fce:	mov    edi,0xc1a710d
  423fd3:	push   es
  423fd4:	enter  0x4e73,0x96
  423fd8:	add    eax,0x22e22740
  423fdd:	jmp    0x4d00:0xdef3050c
  423fe4:	pop    esp
  423fe5:	(bad)  
  423fe6:	mov    ecx,0xb4d9835a
  423feb:	fsubr  st,st(1)
  423fed:	and    al,0x2b
  423fef:	call   0x33b5:0xb259ffb6
  423ff6:	std    
  423ff7:	fiadd  DWORD PTR [edi]
  423ff9:	mov    ch,0xf2
  423ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ffd:	inc    eax
  423ffe:	stos   DWORD PTR es:[edi],eax
  423fff:	pop    edx
  424000:	mov    ebx,0x3921a26b
  424005:	stc    
  424006:	fcmovne st,st(6)
  424008:	pop    edx
  424009:	repz add eax,0x38768686
  42400f:	in     al,0x6e
  424011:	and    DWORD PTR [ebp+0x23],esi
  424014:	pop    esp
  424015:	adc    eax,0xa43c4aef
  42401a:	std    
  42401b:	daa    
  42401c:	ret    0x12de
  42401f:	push   ebp
  424020:	or     DWORD PTR [esi+0x2ca0bfcc],edx
  424026:	inc    eax
  424027:	cmp    DWORD PTR [esp+esi*1+0x6bcd8ab0],ebx
  42402e:	jge    0x424088
  424030:	push   eax
  424031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424032:	or     ah,BYTE PTR [edx-0x6]
  424035:	xchg   ebp,eax
  424036:	push   ebx
  424037:	pushf  
  424038:	dec    ecx
  424039:	jmp    DWORD PTR ds:0xf1015ca7
  42403f:	loop   0x423fd2
  424041:	outs   dx,DWORD PTR ds:[esi]
  424042:	adc    DWORD PTR [edi-0x55],eax
  424045:	lahf   
  424046:	mov    bl,0xa0
  424048:	jmp    0x424020
  42404a:	shl    DWORD PTR [ebx],cl
  42404c:	push   esp
  42404d:	fwait
  42404e:	or     al,BYTE PTR [eax]
  424050:	enter  0x392e,0xf0
  424054:	xchg   esi,eax
  424055:	aas    
  424056:	out    0xf9,al
  424058:	sbb    eax,0x8a40f90
  42405d:	and    dl,BYTE PTR [edi-0x57]
  424060:	cld    
  424061:	gs test esp,edi
  424064:	push   ecx
  424065:	or     eax,0x549f9410
  42406a:	fisub  WORD PTR [esi-0x43]
  42406d:	rcr    DWORD PTR [ebx],0xea
  424070:	push   ecx
  424071:	xchg   ecx,eax
  424072:	adc    eax,0x7d88739
  424077:	push   0x6b
  424079:	jmp    0x4240ed
  42407b:	in     al,dx
  42407c:	(bad)  
  42407d:	lods   al,BYTE PTR ds:[esi]
  42407e:	adc    eax,0x236fa346
  424083:	call   0x72d4:0x3476a4ac
  42408a:	cs out 0xde,al
  42408d:	pop    esi
  42408e:	loope  0x4240eb
  424090:	(bad)  
  424091:	mov    ebp,0x8d976d60
  424096:	lds    edx,FWORD PTR [ebp+0x1ba28266]
  42409c:	jo     0x4240d6
  42409e:	dec    edi
  42409f:	ins    DWORD PTR es:[edi],dx
  4240a0:	sub    edx,edi
  4240a2:	cmc    
  4240a3:	adc    DWORD PTR [ecx+0x63b65cdd],ebx
  4240a9:	icebp  
  4240aa:	outs   dx,DWORD PTR ds:[esi]
  4240ab:	es pop edi
  4240ad:	adc    al,al
  4240af:	add    al,0xd5
  4240b1:	mov    ebp,0xa7e84423
  4240b6:	push   ecx
  4240b7:	xor    BYTE PTR [eax-0x3e1da80],0xc2
  4240be:	xchg   esi,ebp
  4240c0:	mov    edi,0x167a2685
  4240c5:	and    ecx,esp
  4240c7:	pop    ebx
  4240c8:	addr16 (bad) 
  4240ca:	int    0xcd
  4240cc:	das    
  4240cd:	sub    DWORD PTR [edx+ebp*2],edi
  4240d0:	pop    edx
  4240d1:	mov    ecx,0x817cc534
  4240d6:	push   0x76
  4240d8:	lea    esi,[ecx]
  4240da:	icebp  
  4240db:	in     eax,0x15
  4240dd:	add    DWORD PTR [esi],ebx
  4240df:	push   ss
  4240e0:	data16 jg 0x424161
  4240e3:	cwde   
  4240e4:	dec    ebx
  4240e5:	push   edx
  4240e6:	(bad)  
  4240e7:	xor    DWORD PTR [edx+0x23],esi
  4240ea:	sbb    DWORD PTR [edi+0x5c824cc0],ebp
  4240f0:	test   DWORD PTR [edx+0x5f],ecx
  4240f3:	sub    BYTE PTR [esi+0x3d],bh
  4240f6:	popa   
  4240f7:	dec    esp
  4240f8:	mov    BYTE PTR [edx],bh
  4240fa:	adc    dh,cl
  4240fc:	xor    DWORD PTR [ecx-0x33e1f6f2],eax
  424102:	ja     0x424119
  424104:	ret    
  424105:	out    0xce,al
  424107:	pop    es
  424108:	dec    esi
  424109:	lods   eax,DWORD PTR ds:[esi]
  42410a:	sub    BYTE PTR [ecx-0xf4a5d3],ah
  424110:	add    eax,0x7771a573
  424115:	push   edx
  424116:	repnz xchg esp,eax
  424118:	and    BYTE PTR [eax-0x4adf9a32],bh
  42411e:	rcl    BYTE PTR [ebp-0x8],cl
  424121:	neg    BYTE PTR [ecx-0x71588a86]
  424127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424128:	cmp    dl,ch
  42412a:	mov    ebp,0xaebe2335
  42412f:	dec    esp
  424130:	xchg   DWORD PTR [ecx-0x2d1ab170],edi
  424136:	or     eax,0x650a402a
  42413b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42413c:	cmp    eax,0x35431cf5
  424141:	sbb    DWORD PTR [ecx],0xa93c4a30
  424147:	lods   al,BYTE PTR ds:[esi]
  424148:	addr16 and eax,0xbf86f3c9
  42414e:	xchg   DWORD PTR [eax+0xb],eax
  424151:	das    
  424152:	xchg   ebp,eax
  424153:	and    eax,0x6a09327b
  424158:	pushf  
  424159:	fwait
  42415a:	pop    ds
  42415b:	xchg   ebp,eax
  42415c:	sti    
  42415d:	pop    esp
  42415e:	loopne 0x424163
  424160:	mov    dl,BYTE PTR [eax]
  424162:	pop    esi
  424163:	pop    esp
  424164:	sub    al,0x8f
  424166:	test   DWORD PTR [edi+0x16],ebp
  424169:	aaa    
  42416a:	mov    BYTE PTR [edi+0x16],cl
  42416d:	pop    ebx
  42416e:	adc    DWORD PTR [ecx-0x456c7fbe],edi
  424174:	scas   al,BYTE PTR es:[edi]
  424175:	mov    ds:0xe62185c6,al
  42417a:	pop    ds
  42417b:	sahf   
  42417c:	jp     0x42414e
  42417e:	test   DWORD PTR [edx-0x6],0x29d504ec
  424185:	rcr    ecx,0x6d
  424188:	lds    ebp,FWORD PTR [eax-0x4c7adbd7]
  42418e:	pushf  
  42418f:	ins    BYTE PTR es:[edi],dx
  424190:	mov    ecx,0x213c014b
  424195:	mov    ebx,0x1f99723f
  42419a:	sub    cl,dh
  42419c:	sbb    al,0xce
  42419e:	inc    ebx
  42419f:	out    dx,eax
  4241a0:	jp     0x42412e
  4241a2:	xchg   ebx,eax
  4241a3:	pop    es
  4241a4:	and    al,0xa2
  4241a6:	cdq    
  4241a7:	out    dx,al
  4241a8:	cmc    
  4241a9:	xchg   ebx,eax
  4241aa:	popf   
  4241ab:	pop    ebp
  4241ac:	mov    eax,ds:0xef535a15
  4241b1:	pop    ebp
  4241b2:	jp     0x42415e
  4241b4:	enter  0xb401,0x52
  4241b8:	or     DWORD PTR [esi],eax
  4241ba:	jl     0x42415b
  4241bc:	cwde   
  4241bd:	cmp    eax,0x80badc08
  4241c2:	aam    0xf6
  4241c4:	jecxz  0x4241c6
  4241c6:	shr    eax,1
  4241c8:	repnz icebp 
  4241ca:	push   ecx
  4241cb:	ja     0x4241e8
  4241cd:	mov    ebp,0xe6527ce7
  4241d2:	xlat   BYTE PTR ds:[ebx]
  4241d3:	in     al,0x35
  4241d5:	jnp    0x4241cc
  4241d7:	rcpps  xmm1,XMMWORD PTR [edi-0xa]
  4241db:	cmp    bh,bh
  4241dd:	jns    0x424193
  4241df:	shl    BYTE PTR [edi],cl
  4241e1:	xchg   ebp,eax
  4241e2:	inc    edi
  4241e3:	rcl    BYTE PTR [edx-0x45fa5d79],cl
  4241e9:	sub    ch,BYTE PTR [ecx]
  4241eb:	enter  0xcf02,0xf9
  4241ef:	sahf   
  4241f0:	retf   
  4241f1:	cmp    ah,BYTE PTR [ebx+0x4f005506]
  4241f7:	mov    ebp,0xaed97060
  4241fc:	xchg   DWORD PTR [eax],edi
  4241fe:	pushw  cs
  424200:	xor    eax,0x693b3bb7
  424205:	xor    DWORD PTR [ebp+esi*1-0x342cf67c],edx
  42420c:	in     eax,dx
  42420d:	and    ah,bh
  42420f:	sub    esp,edx
  424211:	and    cl,BYTE PTR [eax]
  424213:	push   esp
  424214:	int    0xdf
  424216:	fwait
  424217:	mov    bh,0xb9
  424219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42421a:	(bad)  
  42421b:	sbb    BYTE PTR [eax+0x50],bh
  42421e:	test   ecx,ecx
  424220:	pop    edx
  424221:	mov    eax,0xb041a388
  424226:	in     al,dx
  424227:	mov    ah,BYTE PTR ds:0xcdde68b2
  42422d:	adc    eax,0x72c29548
  424232:	mov    ebx,0x81cb477b
  424237:	jnp    0x42422d
  424239:	pushf  
  42423a:	mov    ds:0x7e7611a5,eax
  42423f:	test   ebp,0x8382eae5
  424245:	cdq    
  424246:	arpl   WORD PTR ds:0xdf1ea9ee,bx
  42424c:	nop
  42424d:	data16 jmp 0x4241f3
  424250:	cmc    
  424251:	loop   0x424263
  424253:	xor    eax,0x503176cd
  424258:	pushf  
  424259:	mov    edi,0x14dc6b0
  42425e:	push   0x35adfe33
  424263:	aam    0xc8
  424265:	nop
  424266:	push   eax
  424267:	mov    bh,0x8c
  424269:	pop    ebx
  42426a:	sub    bl,BYTE PTR [ebx+esi*1+0x549a32d9]
  424271:	mov    al,ds:0x3c3a4b60
  424276:	jp     0x424210
  424278:	leave  
  424279:	jb     0x424271
  42427b:	iret   
  42427c:	mov    dh,0x8e
  42427e:	and    eax,0x467bca05
  424283:	xchg   dh,ah
  424285:	push   0xfffffffb
  424287:	or     DWORD PTR [ebp-0x27c33a90],0x2
  42428e:	xchg   ebp,eax
  42428f:	sahf   
  424290:	push   ds
  424291:	xor    al,0xd5
  424293:	aaa    
  424294:	mov    ah,0x9
  424296:	retf   0xf68e
  424299:	cmc    
  42429a:	jmp    0x893e86d4
  42429f:	repnz push ds
  4242a1:	xor    DWORD PTR cs:[esi+0x54377306],eax
  4242a8:	xlat   BYTE PTR ds:[ebx]
  4242a9:	sub    BYTE PTR [ebp+0x4e9c88dd],dl
  4242af:	mov    ebp,0x83ab1b86
  4242b4:	xor    al,0x2d
  4242b6:	pushf  
  4242b7:	dec    ecx
  4242b8:	add    esp,DWORD PTR [ebp+0x1ca8dc65]
  4242be:	jbe    0x4242c4
  4242c0:	jnp    0x424286
  4242c2:	sar    BYTE PTR [ebx+0x2f],cl
  4242c5:	add    cl,dl
  4242c7:	sub    DWORD PTR [esi+0x5348fed],esp
  4242cd:	mov    ebx,0x901ca7fe
  4242d2:	xchg   edx,eax
  4242d3:	and    bl,bl
  4242d5:	sti    
  4242d6:	call   0xfdc4:0xf6000354
  4242dd:	jo     0x42426b
  4242df:	call   0x5522343f
  4242e4:	test   DWORD PTR [eax],ebp
  4242e6:	or     al,0xd4
  4242e8:	arpl   WORD PTR [ecx-0x11],dx
  4242eb:	and    ecx,DWORD PTR [ebp-0x69f35c3e]
  4242f1:	fdivrp st(7),st
  4242f3:	fdivr  DWORD PTR [edi]
  4242f5:	(bad)  
  4242f7:	xchg   ebx,eax
  4242f8:	xor    esp,esi
  4242fa:	dec    edx
  4242fb:	push   0x30af91b
  424300:	rcr    BYTE PTR ds:0xec4a9be5,0x9c
  424307:	lea    esi,es:0x45155748
  42430e:	hlt    
  42430f:	push   ebp
  424310:	in     eax,0x91
  424312:	inc    ecx
  424313:	std    
  424314:	gs inc esp
  424316:	scas   eax,DWORD PTR es:[edi]
  424317:	mov    ds:0xa5be6249,al
  42431c:	mov    ss,WORD PTR [eax]
  42431e:	push   0x2
  424320:	push   0xa0
  424325:	push   0x0
  424327:	call   DWORD PTR ds:0x429030
  42432d:	push   0x0
  42432f:	push   0x0
  424331:	call   DWORD PTR ds:0x429138
  424337:	xor    eax,eax
  424339:	add    esp,0x10
  42433c:	ret    0x10
  42433f:	nop
  424340:	jmp    DWORD PTR ds:0x429124
  424346:	jmp    DWORD PTR ds:0x429128
  42434c:	jmp    DWORD PTR ds:0x42911c
  424352:	jmp    DWORD PTR ds:0x429118
  424358:	cmp    DWORD PTR ds:0x46707c,0x1
  42435f:	jne    0x424366
  424361:	call   0x4248a4
  424366:	push   DWORD PTR [esp+0x4]
  42436a:	call   0x42472d
  42436f:	push   0xff
  424374:	call   DWORD PTR ds:0x466774
  42437a:	pop    ecx
  42437b:	pop    ecx
  42437c:	ret    
  42437d:	cmp    DWORD PTR ds:0x46707c,0x1
  424384:	jne    0x42438b
  424386:	call   0x4248a4
  42438b:	push   DWORD PTR [esp+0x4]
  42438f:	call   0x42472d
  424394:	push   0xff
  424399:	call   0x424573
  42439e:	pop    ecx
  42439f:	pop    ecx
  4243a0:	ret    
  4243a1:	push   0x60
  4243a3:	push   0x429170
  4243a8:	call   0x425290
  4243ad:	mov    edi,0x94
  4243b2:	mov    eax,edi
  4243b4:	call   0x4252e0
  4243b9:	mov    DWORD PTR [ebp-0x18],esp
  4243bc:	mov    esi,esp
  4243be:	mov    DWORD PTR [esi],edi
  4243c0:	push   esi
  4243c1:	call   DWORD PTR ds:0x42906c
  4243c7:	mov    ecx,DWORD PTR [esi+0x10]
  4243ca:	mov    DWORD PTR ds:0x467084,ecx
  4243d0:	mov    eax,DWORD PTR [esi+0x4]
  4243d3:	mov    ds:0x467090,eax
  4243d8:	mov    edx,DWORD PTR [esi+0x8]
  4243db:	mov    DWORD PTR ds:0x467094,edx
  4243e1:	mov    esi,DWORD PTR [esi+0xc]
  4243e4:	and    esi,0x7fff
  4243ea:	mov    DWORD PTR ds:0x467088,esi
  4243f0:	cmp    ecx,0x2
  4243f3:	je     0x424401
  4243f5:	or     esi,0x8000
  4243fb:	mov    DWORD PTR ds:0x467088,esi
  424401:	shl    eax,0x8
  424404:	add    eax,edx
  424406:	mov    ds:0x46708c,eax
  42440b:	xor    esi,esi
  42440d:	push   esi
  42440e:	mov    edi,DWORD PTR ds:0x429044
  424414:	call   edi
  424416:	cmp    WORD PTR [eax],0x5a4d
  42441b:	jne    0x42443c
  42441d:	mov    ecx,DWORD PTR [eax+0x3c]
  424420:	add    ecx,eax
  424422:	cmp    DWORD PTR [ecx],0x4550
  424428:	jne    0x42443c
  42442a:	movzx  eax,WORD PTR [ecx+0x18]
  42442e:	cmp    eax,0x10b
  424433:	je     0x424454
  424435:	cmp    eax,0x20b
  42443a:	je     0x424441
  42443c:	mov    DWORD PTR [ebp-0x1c],esi
  42443f:	jmp    0x424468
  424441:	cmp    DWORD PTR [ecx+0x84],0xe
  424448:	jbe    0x42443c
  42444a:	xor    eax,eax
  42444c:	cmp    DWORD PTR [ecx+0xf8],esi
  424452:	jmp    0x424462
  424454:	cmp    DWORD PTR [ecx+0x74],0xe
  424458:	jbe    0x42443c
  42445a:	xor    eax,eax
  42445c:	cmp    DWORD PTR [ecx+0xe8],esi
  424462:	setne  al
  424465:	mov    DWORD PTR [ebp-0x1c],eax
  424468:	push   0x1
  42446a:	call   0x42523f
  42446f:	pop    ecx
  424470:	test   eax,eax
  424472:	jne    0x42447c
  424474:	push   0x1c
  424476:	call   0x42437d
  42447b:	pop    ecx
  42447c:	call   0x4251b6
  424481:	test   eax,eax
  424483:	jne    0x42448d
  424485:	push   0x10
  424487:	call   0x42437d
  42448c:	pop    ecx
  42448d:	call   0x42509f
  424492:	mov    DWORD PTR [ebp-0x4],esi
  424495:	call   0x424ea1
  42449a:	test   eax,eax
  42449c:	jge    0x4244a6
  42449e:	push   0x1b
  4244a0:	call   0x424358
  4244a5:	pop    ecx
  4244a6:	call   DWORD PTR ds:0x429068
  4244ac:	mov    ds:0x467834,eax
  4244b1:	call   0x424d7f
  4244b6:	mov    ds:0x467074,eax
  4244bb:	call   0x424cdd
  4244c0:	test   eax,eax
  4244c2:	jge    0x4244cc
  4244c4:	push   0x8
  4244c6:	call   0x424358
  4244cb:	pop    ecx
  4244cc:	call   0x424aaa
  4244d1:	test   eax,eax
  4244d3:	jge    0x4244dd
  4244d5:	push   0x9
  4244d7:	call   0x424358
  4244dc:	pop    ecx
  4244dd:	call   0x4245b5
  4244e2:	mov    DWORD PTR [ebp-0x20],eax
  4244e5:	cmp    eax,esi
  4244e7:	je     0x4244f0
  4244e9:	push   eax
  4244ea:	call   0x424358
  4244ef:	pop    ecx
  4244f0:	mov    DWORD PTR [ebp-0x38],esi
  4244f3:	lea    eax,[ebp-0x64]
  4244f6:	push   eax
  4244f7:	call   DWORD PTR ds:0x429064
  4244fd:	call   0x424a41
  424502:	mov    DWORD PTR [ebp-0x68],eax
  424505:	test   BYTE PTR [ebp-0x38],0x1
  424509:	je     0x424511
  42450b:	movzx  eax,WORD PTR [ebp-0x34]
  42450f:	jmp    0x424514
  424511:	push   0xa
  424513:	pop    eax
  424514:	push   eax
  424515:	push   DWORD PTR [ebp-0x68]
  424518:	push   esi
  424519:	push   esi
  42451a:	call   edi
  42451c:	push   eax
  42451d:	call   0x422e90
  424522:	mov    edi,eax
  424524:	mov    DWORD PTR [ebp-0x6c],edi
  424527:	cmp    DWORD PTR [ebp-0x1c],esi
  42452a:	jne    0x424532
  42452c:	push   edi
  42452d:	call   0x4246ed
  424532:	call   0x42470f
  424537:	jmp    0x424564
  424539:	mov    eax,DWORD PTR [ebp-0x14]
  42453c:	mov    ecx,DWORD PTR [eax]
  42453e:	mov    ecx,DWORD PTR [ecx]
  424540:	mov    DWORD PTR [ebp-0x70],ecx
  424543:	push   eax
  424544:	push   ecx
  424545:	call   0x4248dd
  42454a:	pop    ecx
  42454b:	pop    ecx
  42454c:	ret    
  42454d:	mov    esp,DWORD PTR [ebp-0x18]
  424550:	mov    edi,DWORD PTR [ebp-0x70]
  424553:	cmp    DWORD PTR [ebp-0x1c],0x0
  424557:	jne    0x42455f
  424559:	push   edi
  42455a:	call   0x4246fe
  42455f:	call   0x42471e
  424564:	or     DWORD PTR [ebp-0x4],0xffffffff
  424568:	mov    eax,edi
  42456a:	lea    esp,[ebp-0x7c]
  42456d:	call   0x4252cb
  424572:	ret    
  424573:	push   0x42918c
  424578:	call   DWORD PTR ds:0x429044
  42457e:	test   eax,eax
  424580:	je     0x424598
  424582:	push   0x42917c
  424587:	push   eax
  424588:	call   DWORD PTR ds:0x429048
  42458e:	test   eax,eax
  424590:	je     0x424598
  424592:	push   DWORD PTR [esp+0x4]
  424596:	call   eax
  424598:	push   DWORD PTR [esp+0x4]
  42459c:	call   DWORD PTR ds:0x429070
  4245a2:	int3   
  4245a3:	push   0x8
  4245a5:	call   0x42544f
  4245aa:	pop    ecx
  4245ab:	ret    
  4245ac:	push   0x8
  4245ae:	call   0x4253bb
  4245b3:	pop    ecx
  4245b4:	ret    
  4245b5:	mov    eax,ds:0x467830
  4245ba:	test   eax,eax
  4245bc:	je     0x4245c0
  4245be:	call   eax
  4245c0:	push   esi
  4245c1:	push   edi
  4245c2:	mov    ecx,0x42b00c
  4245c7:	mov    edi,0x42b018
  4245cc:	xor    eax,eax
  4245ce:	cmp    ecx,edi
  4245d0:	mov    esi,ecx
  4245d2:	jae    0x4245eb
  4245d4:	test   eax,eax
  4245d6:	jne    0x424617
  4245d8:	mov    ecx,DWORD PTR [esi]
  4245da:	test   ecx,ecx
  4245dc:	je     0x4245e0
  4245de:	call   ecx
  4245e0:	add    esi,0x4
  4245e3:	cmp    esi,edi
  4245e5:	jb     0x4245d4
  4245e7:	test   eax,eax
  4245e9:	jne    0x424617
  4245eb:	push   0x4250e3
  4245f0:	call   0x425560
  4245f5:	mov    esi,0x42b000
  4245fa:	mov    eax,esi
  4245fc:	mov    edi,0x42b008
  424601:	cmp    eax,edi
  424603:	pop    ecx
  424604:	jae    0x424615
  424606:	mov    eax,DWORD PTR [esi]
  424608:	test   eax,eax
  42460a:	je     0x42460e
  42460c:	call   eax
  42460e:	add    esi,0x4
  424611:	cmp    esi,edi
  424613:	jb     0x424606
  424615:	xor    eax,eax
  424617:	pop    edi
  424618:	pop    esi
  424619:	ret    
  42461a:	push   ebp
  42461b:	mov    ebp,esp
  42461d:	push   esi
  42461e:	push   edi
  42461f:	push   0x8
  424621:	call   0x42544f
  424626:	xor    esi,esi
  424628:	inc    esi
  424629:	cmp    DWORD PTR ds:0x4670c4,esi
  42462f:	pop    ecx
  424630:	jne    0x424642
  424632:	push   DWORD PTR [ebp+0x8]
  424635:	call   DWORD PTR ds:0x429078
  42463b:	push   eax
  42463c:	call   DWORD PTR ds:0x429074
  424642:	cmp    DWORD PTR [ebp+0xc],0x0
  424646:	mov    al,BYTE PTR [ebp+0x10]
  424649:	mov    DWORD PTR ds:0x4670c0,esi
  42464f:	mov    ds:0x4670bc,al
  424654:	jne    0x4246a8
  424656:	mov    ecx,DWORD PTR ds:0x467828
  42465c:	test   ecx,ecx
  42465e:	je     0x424689
  424660:	mov    eax,ds:0x467824
  424665:	sub    eax,0x4
  424668:	cmp    eax,ecx
  42466a:	jmp    0x424682
  42466c:	mov    eax,DWORD PTR [eax]
  42466e:	test   eax,eax
  424670:	je     0x424674
  424672:	call   eax
  424674:	mov    eax,ds:0x467824
  424679:	sub    eax,0x4
  42467c:	cmp    eax,DWORD PTR ds:0x467828
  424682:	mov    ds:0x467824,eax
  424687:	jae    0x42466c
  424689:	mov    eax,0x42b01c
  42468e:	mov    esi,0x42b020
  424693:	cmp    eax,esi
  424695:	mov    edi,eax
  424697:	jae    0x4246a8
  424699:	mov    eax,DWORD PTR [edi]
  42469b:	test   eax,eax
  42469d:	je     0x4246a1
  42469f:	call   eax
  4246a1:	add    edi,0x4
  4246a4:	cmp    edi,esi
  4246a6:	jb     0x424699
  4246a8:	mov    eax,0x42b024
  4246ad:	mov    esi,0x42b028
  4246b2:	cmp    eax,esi
  4246b4:	mov    edi,eax
  4246b6:	jae    0x4246c7
  4246b8:	mov    eax,DWORD PTR [edi]
  4246ba:	test   eax,eax
  4246bc:	je     0x4246c0
  4246be:	call   eax
  4246c0:	add    edi,0x4
  4246c3:	cmp    edi,esi
  4246c5:	jb     0x4246b8
  4246c7:	cmp    DWORD PTR [ebp+0x10],0x0
  4246cb:	pop    edi
  4246cc:	pop    esi
  4246cd:	je     0x4246d8
  4246cf:	push   0x8
  4246d1:	call   0x4253bb
  4246d6:	jmp    0x4246ea
  4246d8:	push   DWORD PTR [ebp+0x8]
  4246db:	mov    DWORD PTR ds:0x4670c4,0x1
  4246e5:	call   0x424573
  4246ea:	pop    ecx
  4246eb:	pop    ebp
  4246ec:	ret    
  4246ed:	push   0x0
  4246ef:	push   0x0
  4246f1:	push   DWORD PTR [esp+0xc]
  4246f5:	call   0x42461a
  4246fa:	add    esp,0xc
  4246fd:	ret    
  4246fe:	push   0x0
  424700:	push   0x1
  424702:	push   DWORD PTR [esp+0xc]
  424706:	call   0x42461a
  42470b:	add    esp,0xc
  42470e:	ret    
  42470f:	push   0x1
  424711:	push   0x0
  424713:	push   0x0
  424715:	call   0x42461a
  42471a:	add    esp,0xc
  42471d:	ret    
  42471e:	push   0x1
  424720:	push   0x1
  424722:	push   0x0
  424724:	call   0x42461a
  424729:	add    esp,0xc
  42472c:	ret    
  42472d:	push   ebp
  42472e:	mov    ebp,esp
  424730:	sub    esp,0x10c
  424736:	mov    eax,ds:0x4669f0
  42473b:	xor    eax,DWORD PTR [ebp+0x4]
  42473e:	mov    ecx,DWORD PTR [ebp+0x8]
  424741:	push   ebx
  424742:	push   esi
  424743:	mov    DWORD PTR [ebp-0x4],eax
  424746:	xor    edx,edx
  424748:	push   edi
  424749:	xor    eax,eax
  42474b:	cmp    ecx,DWORD PTR [eax*8+0x466780]
  424752:	je     0x42475a
  424754:	inc    eax
  424755:	cmp    eax,0x12
  424758:	jb     0x42474b
  42475a:	mov    esi,eax
  42475c:	shl    esi,0x3
  42475f:	cmp    ecx,DWORD PTR [esi+0x466780]
  424765:	jne    0x42488e
  42476b:	mov    eax,ds:0x46707c
  424770:	cmp    eax,0x1
  424773:	je     0x424869
  424779:	cmp    eax,edx
  42477b:	jne    0x42478a
  42477d:	cmp    DWORD PTR ds:0x466778,0x1
  424784:	je     0x424869
  42478a:	cmp    ecx,0xfc
  424790:	je     0x42488e
  424796:	push   0x104
  42479b:	lea    eax,[ebp-0x10c]
  4247a1:	push   eax
  4247a2:	push   edx
  4247a3:	mov    BYTE PTR [ebp-0x8],dl
  4247a6:	call   DWORD PTR ds:0x429084
  4247ac:	test   eax,eax
  4247ae:	jne    0x4247c3
  4247b0:	lea    eax,[ebp-0x10c]
  4247b6:	push   0x4294e4
  4247bb:	push   eax
  4247bc:	call   0x425670
  4247c1:	pop    ecx
  4247c2:	pop    ecx
  4247c3:	lea    eax,[ebp-0x10c]
  4247c9:	push   eax
  4247ca:	lea    edi,[ebp-0x10c]
  4247d0:	call   0x4258a0
  4247d5:	inc    eax
  4247d6:	cmp    eax,0x3c
  4247d9:	pop    ecx
  4247da:	jbe    0x424805
  4247dc:	lea    eax,[ebp-0x10c]
  4247e2:	push   eax
  4247e3:	call   0x4258a0
  4247e8:	mov    edi,eax
  4247ea:	lea    eax,[ebp-0x10c]
  4247f0:	sub    eax,0x3b
  4247f3:	push   0x3
  4247f5:	add    edi,eax
  4247f7:	push   0x4294e0
  4247fc:	push   edi
  4247fd:	call   0x425770
  424802:	add    esp,0x10
  424805:	push   edi
  424806:	call   0x4258a0
  42480b:	push   DWORD PTR [esi+0x466784]
  424811:	mov    ebx,eax
  424813:	call   0x4258a0
  424818:	lea    eax,[ebx+eax*1+0x1c]
  42481c:	pop    ecx
  42481d:	add    eax,0x3
  424820:	pop    ecx
  424821:	and    eax,0xfffffffc
  424824:	call   0x4252e0
  424829:	mov    ebx,esp
  42482b:	push   0x4294c4
  424830:	push   ebx
  424831:	call   0x425670
  424836:	push   edi
  424837:	push   ebx
  424838:	call   0x425680
  42483d:	push   0x4294c0
  424842:	push   ebx
  424843:	call   0x425680
  424848:	push   DWORD PTR [esi+0x466784]
  42484e:	push   ebx
  42484f:	call   0x425680
  424854:	push   0x12010
  424859:	push   0x429498
  42485e:	push   ebx
  42485f:	call   0x425572
  424864:	add    esp,0x2c
  424867:	jmp    0x42488e
  424869:	push   edx
  42486a:	lea    eax,[ebp+0x8]
  42486d:	push   eax
  42486e:	lea    esi,[esi+0x466784]
  424874:	push   DWORD PTR [esi]
  424876:	call   0x4258a0
  42487b:	pop    ecx
  42487c:	push   eax
  42487d:	push   DWORD PTR [esi]
  42487f:	push   0xfffffff4
  424881:	call   DWORD PTR ds:0x429080
  424887:	push   eax
  424888:	call   DWORD PTR ds:0x42907c
  42488e:	lea    esp,[ebp-0x118]
  424894:	mov    ecx,DWORD PTR [ebp-0x4]
  424897:	xor    ecx,DWORD PTR [ebp+0x4]
  42489a:	call   0x42595c
  42489f:	pop    edi
  4248a0:	pop    esi
  4248a1:	pop    ebx
  4248a2:	leave  
  4248a3:	ret    
  4248a4:	mov    eax,ds:0x46707c
  4248a9:	cmp    eax,0x1
  4248ac:	je     0x4248bb
  4248ae:	test   eax,eax
  4248b0:	jne    0x4248dc
  4248b2:	cmp    DWORD PTR ds:0x466778,0x1
  4248b9:	jne    0x4248dc
  4248bb:	push   0xfc
  4248c0:	call   0x42472d
  4248c5:	mov    eax,ds:0x4670c8
  4248ca:	test   eax,eax
  4248cc:	pop    ecx
  4248cd:	je     0x4248d1
  4248cf:	call   eax
  4248d1:	push   0xff
  4248d6:	call   0x42472d
  4248db:	pop    ecx
  4248dc:	ret    
  4248dd:	push   ebp
  4248de:	mov    ebp,esp
  4248e0:	push   ecx
  4248e1:	push   ebx
  4248e2:	push   esi
  4248e3:	push   edi
  4248e4:	call   0x425145
  4248e9:	mov    edi,DWORD PTR [ebp+0x8]
  4248ec:	mov    esi,eax
  4248ee:	mov    edx,DWORD PTR [esi+0x54]
  4248f1:	mov    eax,ds:0x466894
  4248f6:	mov    ecx,edx
  4248f8:	cmp    DWORD PTR [ecx],edi
  4248fa:	je     0x424909
  4248fc:	lea    ebx,[eax+eax*2]
  4248ff:	add    ecx,0xc
  424902:	lea    ebx,[edx+ebx*4]
  424905:	cmp    ecx,ebx
  424907:	jb     0x4248f8
  424909:	lea    eax,[eax+eax*2]
  42490c:	lea    eax,[edx+eax*4]
  42490f:	cmp    ecx,eax
  424911:	jae    0x424917
  424913:	cmp    DWORD PTR [ecx],edi
  424915:	je     0x424919
  424917:	xor    ecx,ecx
  424919:	test   ecx,ecx
  42491b:	je     0x424a33
  424921:	mov    ebx,DWORD PTR [ecx+0x8]
  424924:	test   ebx,ebx
  424926:	mov    DWORD PTR [ebp+0x8],ebx
  424929:	je     0x424a33
  42492f:	cmp    ebx,0x5
  424932:	jne    0x424940
  424934:	and    DWORD PTR [ecx+0x8],0x0
  424938:	xor    eax,eax
  42493a:	inc    eax
  42493b:	jmp    0x424a3c
  424940:	cmp    ebx,0x1
  424943:	je     0x424a2e
  424949:	mov    eax,DWORD PTR [esi+0x58]
  42494c:	mov    DWORD PTR [ebp-0x4],eax
  42494f:	mov    eax,DWORD PTR [ebp+0xc]
  424952:	mov    DWORD PTR [esi+0x58],eax
  424955:	mov    eax,DWORD PTR [ecx+0x4]
  424958:	cmp    eax,0x8
  42495b:	jne    0x424a20
  424961:	mov    edx,DWORD PTR ds:0x466888
  424967:	mov    eax,ds:0x46688c
  42496c:	add    eax,edx
  42496e:	cmp    edx,eax
  424970:	jge    0x424999
  424972:	lea    eax,[edx+edx*2]
  424975:	shl    eax,0x2
  424978:	mov    edi,DWORD PTR [esi+0x54]
  42497b:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424980:	mov    edi,DWORD PTR ds:0x466888
  424986:	mov    ebx,DWORD PTR ds:0x46688c
  42498c:	inc    edx
  42498d:	add    ebx,edi
  42498f:	add    eax,0xc
  424992:	cmp    edx,ebx
  424994:	jl     0x424978
  424996:	mov    ebx,DWORD PTR [ebp+0x8]
  424999:	mov    ecx,DWORD PTR [ecx]
  42499b:	cmp    ecx,0xc000008e
  4249a1:	mov    edi,DWORD PTR [esi+0x5c]
  4249a4:	jne    0x4249af
  4249a6:	mov    DWORD PTR [esi+0x5c],0x83
  4249ad:	jmp    0x424a13
  4249af:	cmp    ecx,0xc0000090
  4249b5:	jne    0x4249c0
  4249b7:	mov    DWORD PTR [esi+0x5c],0x81
  4249be:	jmp    0x424a13
  4249c0:	cmp    ecx,0xc0000091
  4249c6:	jne    0x4249d1
  4249c8:	mov    DWORD PTR [esi+0x5c],0x84
  4249cf:	jmp    0x424a13
  4249d1:	cmp    ecx,0xc0000093
  4249d7:	jne    0x4249e2
  4249d9:	mov    DWORD PTR [esi+0x5c],0x85
  4249e0:	jmp    0x424a13
  4249e2:	cmp    ecx,0xc000008d
  4249e8:	jne    0x4249f3
  4249ea:	mov    DWORD PTR [esi+0x5c],0x82
  4249f1:	jmp    0x424a13
  4249f3:	cmp    ecx,0xc000008f
  4249f9:	jne    0x424a04
  4249fb:	mov    DWORD PTR [esi+0x5c],0x86
  424a02:	jmp    0x424a13
  424a04:	cmp    ecx,0xc0000092
  424a0a:	jne    0x424a13
  424a0c:	mov    DWORD PTR [esi+0x5c],0x8a
  424a13:	push   DWORD PTR [esi+0x5c]
  424a16:	push   0x8
  424a18:	call   ebx
  424a1a:	pop    ecx
  424a1b:	mov    DWORD PTR [esi+0x5c],edi
  424a1e:	jmp    0x424a27
  424a20:	and    DWORD PTR [ecx+0x8],0x0
  424a24:	push   eax
  424a25:	call   ebx
  424a27:	mov    eax,DWORD PTR [ebp-0x4]
  424a2a:	pop    ecx
  424a2b:	mov    DWORD PTR [esi+0x58],eax
  424a2e:	or     eax,0xffffffff
  424a31:	jmp    0x424a3c
  424a33:	push   DWORD PTR [ebp+0xc]
  424a36:	call   DWORD PTR ds:0x429088
  424a3c:	pop    edi
  424a3d:	pop    esi
  424a3e:	pop    ebx
  424a3f:	leave  
  424a40:	ret    
  424a41:	cmp    DWORD PTR ds:0x46782c,0x0
  424a48:	jne    0x424a4f
  424a4a:	call   0x425e7c
  424a4f:	push   esi
  424a50:	mov    esi,DWORD PTR ds:0x467834
  424a56:	test   esi,esi
  424a58:	jne    0x424a61
  424a5a:	mov    esi,0x4294fb
  424a5f:	jmp    0x424aa6
  424a61:	mov    al,BYTE PTR [esi]
  424a63:	cmp    al,0x22
  424a65:	jne    0x424a8f
  424a67:	inc    esi
  424a68:	mov    al,BYTE PTR [esi]
  424a6a:	cmp    al,0x22
  424a6c:	je     0x424a9f
  424a6e:	test   al,al
  424a70:	je     0x424a88
  424a72:	movzx  eax,al
  424a75:	push   eax
  424a76:	call   0x42599b
  424a7b:	test   eax,eax
  424a7d:	pop    ecx
  424a7e:	je     0x424a81
  424a80:	inc    esi
  424a81:	inc    esi
  424a82:	mov    al,BYTE PTR [esi]
  424a84:	cmp    al,0x22
  424a86:	jne    0x424a6e
  424a88:	cmp    BYTE PTR [esi],0x22
  424a8b:	jne    0x424aa0
  424a8d:	jmp    0x424a9f
  424a8f:	cmp    al,0x20
  424a91:	jbe    0x424aa0
  424a93:	inc    esi
  424a94:	cmp    BYTE PTR [esi],0x20
  424a97:	ja     0x424a93
  424a99:	jmp    0x424aa0
  424a9b:	cmp    al,0x20
  424a9d:	ja     0x424aa6
  424a9f:	inc    esi
  424aa0:	mov    al,BYTE PTR [esi]
  424aa2:	test   al,al
  424aa4:	jne    0x424a9b
  424aa6:	mov    eax,esi
  424aa8:	pop    esi
  424aa9:	ret    
  424aaa:	push   ebx
  424aab:	xor    ebx,ebx
  424aad:	cmp    DWORD PTR ds:0x46782c,ebx
  424ab3:	push   esi
  424ab4:	push   edi
  424ab5:	jne    0x424abc
  424ab7:	call   0x425e7c
  424abc:	mov    esi,DWORD PTR ds:0x467074
  424ac2:	xor    edi,edi
  424ac4:	cmp    esi,ebx
  424ac6:	jne    0x424ada
  424ac8:	jmp    0x424afa
  424aca:	cmp    al,0x3d
  424acc:	je     0x424acf
  424ace:	inc    edi
  424acf:	push   esi
  424ad0:	call   0x4258a0
  424ad5:	pop    ecx
  424ad6:	lea    esi,[esi+eax*1+0x1]
  424ada:	mov    al,BYTE PTR [esi]
  424adc:	cmp    al,bl
  424ade:	jne    0x424aca
  424ae0:	lea    eax,[edi*4+0x4]
  424ae7:	push   eax
  424ae8:	call   0x425fb2
  424aed:	mov    edi,eax
  424aef:	cmp    edi,ebx
  424af1:	pop    ecx
  424af2:	mov    DWORD PTR ds:0x4670a4,edi
  424af8:	jne    0x424aff
  424afa:	or     eax,0xffffffff
  424afd:	jmp    0x424b57
  424aff:	mov    esi,DWORD PTR ds:0x467074
  424b05:	push   ebp
  424b06:	jmp    0x424b32
  424b08:	push   esi
  424b09:	call   0x4258a0
  424b0e:	mov    ebp,eax
  424b10:	inc    ebp
  424b11:	cmp    BYTE PTR [esi],0x3d
  424b14:	pop    ecx
  424b15:	je     0x424b30
  424b17:	push   ebp
  424b18:	call   0x425fb2
  424b1d:	cmp    eax,ebx
  424b1f:	pop    ecx
  424b20:	mov    DWORD PTR [edi],eax
  424b22:	je     0x424b5b
  424b24:	push   esi
  424b25:	push   eax
  424b26:	call   0x425670
  424b2b:	pop    ecx
  424b2c:	pop    ecx
  424b2d:	add    edi,0x4
  424b30:	add    esi,ebp
  424b32:	cmp    BYTE PTR [esi],bl
  424b34:	jne    0x424b08
  424b36:	push   DWORD PTR ds:0x467074
  424b3c:	call   0x425e9a
  424b41:	mov    DWORD PTR ds:0x467074,ebx
  424b47:	mov    DWORD PTR [edi],ebx
  424b49:	mov    DWORD PTR ds:0x467820,0x1
  424b53:	xor    eax,eax
  424b55:	pop    ecx
  424b56:	pop    ebp
  424b57:	pop    edi
  424b58:	pop    esi
  424b59:	pop    ebx
  424b5a:	ret    
  424b5b:	push   DWORD PTR ds:0x4670a4
  424b61:	call   0x425e9a
  424b66:	mov    DWORD PTR ds:0x4670a4,ebx
  424b6c:	or     eax,0xffffffff
  424b6f:	jmp    0x424b55
  424b71:	push   ebp
  424b72:	mov    ebp,esp
  424b74:	push   ecx
  424b75:	push   ebx
  424b76:	mov    ebx,DWORD PTR [ebp+0xc]
  424b79:	xor    edx,edx
  424b7b:	cmp    DWORD PTR [ebp+0x8],edx
  424b7e:	push   edi
  424b7f:	mov    DWORD PTR [esi],edx
  424b81:	mov    edi,ecx
  424b83:	mov    DWORD PTR [ebx],0x1
  424b89:	je     0x424b94
  424b8b:	mov    ecx,DWORD PTR [ebp+0x8]
  424b8e:	add    DWORD PTR [ebp+0x8],0x4
  424b92:	mov    DWORD PTR [ecx],edi
  424b94:	cmp    BYTE PTR [eax],0x22
  424b97:	jne    0x424ba7
  424b99:	xor    ecx,ecx
  424b9b:	test   edx,edx
  424b9d:	sete   cl
  424ba0:	inc    eax
  424ba1:	mov    edx,ecx
  424ba3:	mov    cl,0x22
  424ba5:	jmp    0x424bd4
  424ba7:	inc    DWORD PTR [esi]
  424ba9:	test   edi,edi
  424bab:	je     0x424bb2
  424bad:	mov    cl,BYTE PTR [eax]
  424baf:	mov    BYTE PTR [edi],cl
  424bb1:	inc    edi
  424bb2:	mov    cl,BYTE PTR [eax]
  424bb4:	movzx  ebx,cl
  424bb7:	inc    eax
  424bb8:	test   BYTE PTR [ebx+0x4674e1],0x4
  424bbf:	je     0x424bcd
  424bc1:	inc    DWORD PTR [esi]
  424bc3:	test   edi,edi
  424bc5:	je     0x424bcc
  424bc7:	mov    bl,BYTE PTR [eax]
  424bc9:	mov    BYTE PTR [edi],bl
  424bcb:	inc    edi
  424bcc:	inc    eax
  424bcd:	test   cl,cl
  424bcf:	mov    ebx,DWORD PTR [ebp+0xc]
  424bd2:	je     0x424c06
  424bd4:	test   edx,edx
  424bd6:	jne    0x424b94
  424bd8:	cmp    cl,0x20
  424bdb:	je     0x424be2
  424bdd:	cmp    cl,0x9
  424be0:	jne    0x424b94
  424be2:	test   edi,edi
  424be4:	je     0x424bea
  424be6:	and    BYTE PTR [edi-0x1],0x0
  424bea:	and    DWORD PTR [ebp-0x4],0x0
  424bee:	cmp    BYTE PTR [eax],0x0
  424bf1:	je     0x424ccd
  424bf7:	mov    cl,BYTE PTR [eax]
  424bf9:	cmp    cl,0x20
  424bfc:	je     0x424c03
  424bfe:	cmp    cl,0x9
  424c01:	jne    0x424c09
  424c03:	inc    eax
  424c04:	jmp    0x424bf7
  424c06:	dec    eax
  424c07:	jmp    0x424bea
  424c09:	cmp    BYTE PTR [eax],0x0
  424c0c:	je     0x424ccd
  424c12:	cmp    DWORD PTR [ebp+0x8],0x0
  424c16:	je     0x424c21
  424c18:	mov    ecx,DWORD PTR [ebp+0x8]
  424c1b:	add    DWORD PTR [ebp+0x8],0x4
  424c1f:	mov    DWORD PTR [ecx],edi
  424c21:	inc    DWORD PTR [ebx]
  424c23:	xor    ebx,ebx
  424c25:	inc    ebx
  424c26:	xor    edx,edx
  424c28:	jmp    0x424c2c
  424c2a:	inc    eax
  424c2b:	inc    edx
  424c2c:	cmp    BYTE PTR [eax],0x5c
  424c2f:	je     0x424c2a
  424c31:	cmp    BYTE PTR [eax],0x22
  424c34:	jne    0x424c5c
  424c36:	test   dl,0x1
  424c39:	jne    0x424c5a
  424c3b:	cmp    DWORD PTR [ebp-0x4],0x0
  424c3f:	je     0x424c4d
  424c41:	lea    ecx,[eax+0x1]
  424c44:	cmp    BYTE PTR [ecx],0x22
  424c47:	jne    0x424c4d
  424c49:	mov    eax,ecx
  424c4b:	jmp    0x424c4f
  424c4d:	xor    ebx,ebx
  424c4f:	xor    ecx,ecx
  424c51:	cmp    DWORD PTR [ebp-0x4],ecx
  424c54:	sete   cl
  424c57:	mov    DWORD PTR [ebp-0x4],ecx
  424c5a:	shr    edx,1
  424c5c:	test   edx,edx
  424c5e:	je     0x424c6d
  424c60:	test   edi,edi
  424c62:	je     0x424c68
  424c64:	mov    BYTE PTR [edi],0x5c
  424c67:	inc    edi
  424c68:	inc    DWORD PTR [esi]
  424c6a:	dec    edx
  424c6b:	jne    0x424c60
  424c6d:	mov    cl,BYTE PTR [eax]
  424c6f:	test   cl,cl
  424c71:	je     0x424cbb
  424c73:	cmp    DWORD PTR [ebp-0x4],0x0
  424c77:	jne    0x424c83
  424c79:	cmp    cl,0x20
  424c7c:	je     0x424cbb
  424c7e:	cmp    cl,0x9
  424c81:	je     0x424cbb
  424c83:	test   ebx,ebx
  424c85:	je     0x424cb5
  424c87:	test   edi,edi
  424c89:	je     0x424ca4
  424c8b:	movzx  edx,cl
  424c8e:	test   BYTE PTR [edx+0x4674e1],0x4
  424c95:	je     0x424c9d
  424c97:	mov    BYTE PTR [edi],cl
  424c99:	inc    edi
  424c9a:	inc    eax
  424c9b:	inc    DWORD PTR [esi]
  424c9d:	mov    cl,BYTE PTR [eax]
  424c9f:	mov    BYTE PTR [edi],cl
  424ca1:	inc    edi
  424ca2:	jmp    0x424cb3
  424ca4:	movzx  ecx,cl
  424ca7:	test   BYTE PTR [ecx+0x4674e1],0x4
  424cae:	je     0x424cb3
  424cb0:	inc    eax
  424cb1:	inc    DWORD PTR [esi]
  424cb3:	inc    DWORD PTR [esi]
  424cb5:	inc    eax
  424cb6:	jmp    0x424c23
  424cbb:	test   edi,edi
  424cbd:	je     0x424cc3
  424cbf:	and    BYTE PTR [edi],0x0
  424cc2:	inc    edi
  424cc3:	inc    DWORD PTR [esi]
  424cc5:	mov    ebx,DWORD PTR [ebp+0xc]
  424cc8:	jmp    0x424bee
  424ccd:	mov    eax,DWORD PTR [ebp+0x8]
  424cd0:	test   eax,eax
  424cd2:	je     0x424cd7
  424cd4:	and    DWORD PTR [eax],0x0
  424cd7:	inc    DWORD PTR [ebx]
  424cd9:	pop    edi
  424cda:	pop    ebx
  424cdb:	leave  
  424cdc:	ret    
  424cdd:	push   ebp
  424cde:	mov    ebp,esp
  424ce0:	push   ecx
  424ce1:	push   ecx
  424ce2:	push   ebx
  424ce3:	push   esi
  424ce4:	push   edi
  424ce5:	xor    edi,edi
  424ce7:	cmp    DWORD PTR ds:0x46782c,edi
  424ced:	jne    0x424cf4
  424cef:	call   0x425e7c
  424cf4:	and    BYTE PTR ds:0x4671d4,0x0
  424cfb:	push   0x104
  424d00:	mov    esi,0x4670d0
  424d05:	push   esi
  424d06:	push   edi
  424d07:	call   DWORD PTR ds:0x429084
  424d0d:	mov    eax,ds:0x467834
  424d12:	cmp    eax,edi
  424d14:	mov    DWORD PTR ds:0x4670b4,esi
  424d1a:	je     0x424d23
  424d1c:	cmp    BYTE PTR [eax],0x0
  424d1f:	mov    ebx,eax
  424d21:	jne    0x424d25
  424d23:	mov    ebx,esi
  424d25:	lea    eax,[ebp-0x4]
  424d28:	push   eax
  424d29:	push   edi
  424d2a:	lea    esi,[ebp-0x8]
  424d2d:	xor    ecx,ecx
  424d2f:	mov    eax,ebx
  424d31:	call   0x424b71
  424d36:	mov    esi,DWORD PTR [ebp-0x4]
  424d39:	mov    eax,DWORD PTR [ebp-0x8]
  424d3c:	shl    esi,0x2
  424d3f:	add    eax,esi
  424d41:	push   eax
  424d42:	call   0x425fb2
  424d47:	mov    edi,eax
  424d49:	add    esp,0xc
  424d4c:	test   edi,edi
  424d4e:	jne    0x424d55
  424d50:	or     eax,0xffffffff
  424d53:	jmp    0x424d7a
  424d55:	lea    eax,[ebp-0x4]
  424d58:	push   eax
  424d59:	lea    ecx,[esi+edi*1]
  424d5c:	push   edi
  424d5d:	lea    esi,[ebp-0x8]
  424d60:	mov    eax,ebx
  424d62:	call   0x424b71
  424d67:	mov    eax,DWORD PTR [ebp-0x4]
  424d6a:	dec    eax
  424d6b:	pop    ecx
  424d6c:	mov    ds:0x467098,eax
  424d71:	pop    ecx
  424d72:	mov    DWORD PTR ds:0x46709c,edi
  424d78:	xor    eax,eax
  424d7a:	pop    edi
  424d7b:	pop    esi
  424d7c:	pop    ebx
  424d7d:	leave  
  424d7e:	ret    
  424d7f:	push   ecx
  424d80:	push   ecx
  424d81:	mov    eax,ds:0x4671d8
  424d86:	push   ebx
  424d87:	push   ebp
  424d88:	push   esi
  424d89:	push   edi
  424d8a:	mov    edi,DWORD PTR ds:0x42909c
  424d90:	xor    ebx,ebx
  424d92:	xor    esi,esi
  424d94:	cmp    eax,ebx
  424d96:	push   0x2
  424d98:	pop    ebp
  424d99:	jne    0x424dc8
  424d9b:	call   edi
  424d9d:	mov    esi,eax
  424d9f:	cmp    esi,ebx
  424da1:	je     0x424daf
  424da3:	mov    DWORD PTR ds:0x4671d8,0x1
  424dad:	jmp    0x424dcd
  424daf:	call   DWORD PTR ds:0x429034
  424db5:	cmp    eax,0x78
  424db8:	jne    0x424dc3
  424dba:	mov    eax,ebp
  424dbc:	mov    ds:0x4671d8,eax
  424dc1:	jmp    0x424dc8
  424dc3:	mov    eax,ds:0x4671d8
  424dc8:	cmp    eax,0x1
  424dcb:	jne    0x424e4a
  424dcd:	cmp    esi,ebx
  424dcf:	jne    0x424dd9
  424dd1:	call   edi
  424dd3:	mov    esi,eax
  424dd5:	cmp    esi,ebx
  424dd7:	je     0x424e52
  424dd9:	cmp    WORD PTR [esi],bx
  424ddc:	mov    eax,esi
  424dde:	je     0x424dee
  424de0:	add    eax,ebp
  424de2:	cmp    WORD PTR [eax],bx
  424de5:	jne    0x424de0
  424de7:	add    eax,ebp
  424de9:	cmp    WORD PTR [eax],bx
  424dec:	jne    0x424de0
  424dee:	mov    edi,DWORD PTR ds:0x429098
  424df4:	push   ebx
  424df5:	push   ebx
  424df6:	push   ebx
  424df7:	sub    eax,esi
  424df9:	push   ebx
  424dfa:	sar    eax,1
  424dfc:	inc    eax
  424dfd:	push   eax
  424dfe:	push   esi
  424dff:	push   ebx
  424e00:	push   ebx
  424e01:	mov    DWORD PTR [esp+0x34],eax
  424e05:	call   edi
  424e07:	mov    ebp,eax
  424e09:	cmp    ebp,ebx
  424e0b:	je     0x424e3f
  424e0d:	push   ebp
  424e0e:	call   0x425fb2
  424e13:	cmp    eax,ebx
  424e15:	pop    ecx
  424e16:	mov    DWORD PTR [esp+0x10],eax
  424e1a:	je     0x424e3f
  424e1c:	push   ebx
  424e1d:	push   ebx
  424e1e:	push   ebp
  424e1f:	push   eax
  424e20:	push   DWORD PTR [esp+0x24]
  424e24:	push   esi
  424e25:	push   ebx
  424e26:	push   ebx
  424e27:	call   edi
  424e29:	test   eax,eax
  424e2b:	jne    0x424e3b
  424e2d:	push   DWORD PTR [esp+0x10]
  424e31:	call   0x425e9a
  424e36:	pop    ecx
  424e37:	mov    DWORD PTR [esp+0x10],ebx
  424e3b:	mov    ebx,DWORD PTR [esp+0x10]
  424e3f:	push   esi
  424e40:	call   DWORD PTR ds:0x429094
  424e46:	mov    eax,ebx
  424e48:	jmp    0x424e9a
  424e4a:	cmp    eax,ebp
  424e4c:	je     0x424e56
  424e4e:	cmp    eax,ebx
  424e50:	je     0x424e56
  424e52:	xor    eax,eax
  424e54:	jmp    0x424e9a
  424e56:	call   DWORD PTR ds:0x429090
  424e5c:	mov    esi,eax
  424e5e:	cmp    esi,ebx
  424e60:	je     0x424e52
  424e62:	cmp    BYTE PTR [esi],bl
  424e64:	je     0x424e70
  424e66:	inc    eax
  424e67:	cmp    BYTE PTR [eax],bl
  424e69:	jne    0x424e66
  424e6b:	inc    eax
  424e6c:	cmp    BYTE PTR [eax],bl
  424e6e:	jne    0x424e66
  424e70:	sub    eax,esi
  424e72:	inc    eax
  424e73:	mov    ebp,eax
  424e75:	push   ebp
  424e76:	call   0x425fb2
  424e7b:	mov    edi,eax
  424e7d:	cmp    edi,ebx
  424e7f:	pop    ecx
  424e80:	jne    0x424e86
  424e82:	xor    edi,edi
  424e84:	jmp    0x424e91
  424e86:	push   ebp
  424e87:	push   esi
  424e88:	push   edi
  424e89:	call   0x425fd0
  424e8e:	add    esp,0xc
  424e91:	push   esi
  424e92:	call   DWORD PTR ds:0x42908c
  424e98:	mov    eax,edi
  424e9a:	pop    edi
  424e9b:	pop    esi
  424e9c:	pop    ebp
  424e9d:	pop    ebx
  424e9e:	pop    ecx
  424e9f:	pop    ecx
  424ea0:	ret    
  424ea1:	sub    esp,0x48
  424ea4:	push   ebx
  424ea5:	mov    ebx,0x480
  424eaa:	push   ebx
  424eab:	call   0x425fb2
  424eb0:	test   eax,eax
  424eb2:	pop    ecx
  424eb3:	jne    0x424ebd
  424eb5:	or     eax,0xffffffff
  424eb8:	jmp    0x42509a
  424ebd:	mov    ds:0x467720,eax
  424ec2:	mov    DWORD PTR ds:0x467708,0x20
  424ecc:	lea    ecx,[eax+0x480]
  424ed2:	jmp    0x424ef2
  424ed4:	and    BYTE PTR [eax+0x4],0x0
  424ed8:	or     DWORD PTR [eax],0xffffffff
  424edb:	and    DWORD PTR [eax+0x8],0x0
  424edf:	mov    BYTE PTR [eax+0x5],0xa
  424ee3:	mov    ecx,DWORD PTR ds:0x467720
  424ee9:	add    eax,0x24
  424eec:	add    ecx,0x480
  424ef2:	cmp    eax,ecx
  424ef4:	jb     0x424ed4
  424ef6:	push   ebp
  424ef7:	push   esi
  424ef8:	push   edi
  424ef9:	lea    eax,[esp+0x14]
  424efd:	push   eax
  424efe:	call   DWORD PTR ds:0x429064
  424f04:	cmp    WORD PTR [esp+0x46],0x0
  424f0a:	je     0x424ff9
  424f10:	mov    eax,DWORD PTR [esp+0x48]
  424f14:	test   eax,eax
  424f16:	je     0x424ff9
  424f1c:	mov    edi,DWORD PTR [eax]
  424f1e:	lea    ebp,[eax+0x4]
  424f21:	lea    eax,[edi+ebp*1]
  424f24:	mov    DWORD PTR [esp+0x10],eax
  424f28:	mov    eax,0x800
  424f2d:	cmp    edi,eax
  424f2f:	jl     0x424f33
  424f31:	mov    edi,eax
  424f33:	cmp    DWORD PTR ds:0x467708,edi
  424f39:	jge    0x424f89
  424f3b:	mov    esi,0x467724
  424f40:	push   ebx
  424f41:	call   0x425fb2
  424f46:	test   eax,eax
  424f48:	pop    ecx
  424f49:	je     0x424f83
  424f4b:	add    DWORD PTR ds:0x467708,0x20
  424f52:	mov    DWORD PTR [esi],eax
  424f54:	lea    ecx,[eax+0x480]
  424f5a:	jmp    0x424f72
  424f5c:	and    BYTE PTR [eax+0x4],0x0
  424f60:	or     DWORD PTR [eax],0xffffffff
  424f63:	and    DWORD PTR [eax+0x8],0x0
  424f67:	mov    BYTE PTR [eax+0x5],0xa
  424f6b:	mov    ecx,DWORD PTR [esi]
  424f6d:	add    eax,0x24
  424f70:	add    ecx,ebx
  424f72:	cmp    eax,ecx
  424f74:	jb     0x424f5c
  424f76:	add    esi,0x4
  424f79:	cmp    DWORD PTR ds:0x467708,edi
  424f7f:	jl     0x424f40
  424f81:	jmp    0x424f89
  424f83:	mov    edi,DWORD PTR ds:0x467708
  424f89:	xor    ebx,ebx
  424f8b:	test   edi,edi
  424f8d:	jle    0x424ff9
  424f8f:	mov    eax,DWORD PTR [esp+0x10]
  424f93:	mov    eax,DWORD PTR [eax]
  424f95:	cmp    eax,0xffffffff
  424f98:	je     0x424fee
  424f9a:	mov    cl,BYTE PTR [ebp+0x0]
  424f9d:	test   cl,0x1
  424fa0:	je     0x424fee
  424fa2:	test   cl,0x8
  424fa5:	jne    0x424fb2
  424fa7:	push   eax
  424fa8:	call   DWORD PTR ds:0x4290a4
  424fae:	test   eax,eax
  424fb0:	je     0x424fee
  424fb2:	mov    ecx,ebx
  424fb4:	mov    eax,ebx
  424fb6:	and    eax,0x1f
  424fb9:	lea    eax,[eax+eax*8]
  424fbc:	sar    ecx,0x5
  424fbf:	mov    ecx,DWORD PTR [ecx*4+0x467720]
  424fc6:	lea    esi,[ecx+eax*4]
  424fc9:	mov    eax,DWORD PTR [esp+0x10]
  424fcd:	mov    eax,DWORD PTR [eax]
  424fcf:	mov    DWORD PTR [esi],eax
  424fd1:	mov    al,BYTE PTR [ebp+0x0]
  424fd4:	mov    BYTE PTR [esi+0x4],al
  424fd7:	lea    eax,[esi+0xc]
  424fda:	push   0xfa0
  424fdf:	push   eax
  424fe0:	call   0x42631d
  424fe5:	test   eax,eax
  424fe7:	pop    ecx
  424fe8:	pop    ecx
  424fe9:	je     0x425019
  424feb:	inc    DWORD PTR [esi+0x8]
  424fee:	add    DWORD PTR [esp+0x10],0x4
  424ff3:	inc    ebx
  424ff4:	inc    ebp
  424ff5:	cmp    ebx,edi
  424ff7:	jl     0x424f8f
  424ff9:	xor    ebx,ebx
  424ffb:	mov    ecx,DWORD PTR ds:0x467720
  425001:	lea    eax,[ebx+ebx*8]
  425004:	lea    esi,[ecx+eax*4]
  425007:	cmp    DWORD PTR [esi],0xffffffff
  42500a:	jne    0x42507b
  42500c:	test   ebx,ebx
  42500e:	mov    BYTE PTR [esi+0x4],0x81
  425012:	jne    0x42501e
  425014:	push   0xfffffff6
  425016:	pop    eax
  425017:	jmp    0x425028
  425019:	or     eax,0xffffffff
  42501c:	jmp    0x425097
  42501e:	mov    eax,ebx
  425020:	dec    eax
  425021:	neg    eax
  425023:	sbb    eax,eax
  425025:	add    eax,0xfffffff5
  425028:	push   eax
  425029:	call   DWORD PTR ds:0x429080
  42502f:	mov    edi,eax
  425031:	cmp    edi,0xffffffff
  425034:	je     0x425075
  425036:	push   edi
  425037:	call   DWORD PTR ds:0x4290a4
  42503d:	test   eax,eax
  42503f:	je     0x425075
  425041:	and    eax,0xff
  425046:	cmp    eax,0x2
  425049:	mov    DWORD PTR [esi],edi
  42504b:	jne    0x425053
  42504d:	or     BYTE PTR [esi+0x4],0x40
  425051:	jmp    0x42505c
  425053:	cmp    eax,0x3
  425056:	jne    0x42505c
  425058:	or     BYTE PTR [esi+0x4],0x8
  42505c:	lea    eax,[esi+0xc]
  42505f:	push   0xfa0
  425064:	push   eax
  425065:	call   0x42631d
  42506a:	test   eax,eax
  42506c:	pop    ecx
  42506d:	pop    ecx
  42506e:	je     0x425019
  425070:	inc    DWORD PTR [esi+0x8]
  425073:	jmp    0x42507f
  425075:	or     BYTE PTR [esi+0x4],0x40
  425079:	jmp    0x42507f
  42507b:	or     BYTE PTR [esi+0x4],0x80
  42507f:	inc    ebx
  425080:	cmp    ebx,0x3
  425083:	jl     0x424ffb
  425089:	push   DWORD PTR ds:0x467708
  42508f:	call   DWORD PTR ds:0x4290a0
  425095:	xor    eax,eax
  425097:	pop    edi
  425098:	pop    esi
  425099:	pop    ebp
  42509a:	pop    ebx
  42509b:	add    esp,0x48
  42509e:	ret    
  42509f:	push   0xc
  4250a1:	push   0x429500
  4250a6:	call   0x425290
  4250ab:	mov    DWORD PTR [ebp-0x1c],0x429f58
  4250b2:	cmp    DWORD PTR [ebp-0x1c],0x429f58
  4250b9:	jae    0x4250dd
  4250bb:	and    DWORD PTR [ebp-0x4],0x0
  4250bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4250c2:	mov    eax,DWORD PTR [eax]
  4250c4:	test   eax,eax
  4250c6:	je     0x4250d3
  4250c8:	call   eax
  4250ca:	jmp    0x4250d3
  4250cc:	xor    eax,eax
  4250ce:	inc    eax
  4250cf:	ret    
  4250d0:	mov    esp,DWORD PTR [ebp-0x18]
  4250d3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4250d7:	add    DWORD PTR [ebp-0x1c],0x4
  4250db:	jmp    0x4250b2
  4250dd:	call   0x4252cb
  4250e2:	ret    
  4250e3:	push   0xc
  4250e5:	push   0x429510
  4250ea:	call   0x425290
  4250ef:	mov    DWORD PTR [ebp-0x1c],0x429f60
  4250f6:	cmp    DWORD PTR [ebp-0x1c],0x429f60
  4250fd:	jae    0x425121
  4250ff:	and    DWORD PTR [ebp-0x4],0x0
  425103:	mov    eax,DWORD PTR [ebp-0x1c]
  425106:	mov    eax,DWORD PTR [eax]
  425108:	test   eax,eax
  42510a:	je     0x425117
  42510c:	call   eax
  42510e:	jmp    0x425117
  425110:	xor    eax,eax
  425112:	inc    eax
  425113:	ret    
  425114:	mov    esp,DWORD PTR [ebp-0x18]
  425117:	or     DWORD PTR [ebp-0x4],0xffffffff
  42511b:	add    DWORD PTR [ebp-0x1c],0x4
  42511f:	jmp    0x4250f6
  425121:	call   0x4252cb
  425126:	ret    
  425127:	call   0x425366
  42512c:	mov    eax,ds:0x4668bc
  425131:	cmp    eax,0xffffffff
  425134:	je     0x425144
  425136:	push   eax
  425137:	call   DWORD PTR ds:0x4290ac
  42513d:	or     DWORD PTR ds:0x4668bc,0xffffffff
  425144:	ret    
  425145:	push   ebx
  425146:	push   esi
  425147:	call   DWORD PTR ds:0x429034
  42514d:	push   DWORD PTR ds:0x4668bc
  425153:	mov    ebx,eax
  425155:	call   DWORD PTR ds:0x4290bc
  42515b:	mov    esi,eax
  42515d:	test   esi,esi
  42515f:	jne    0x4251aa
  425161:	push   0x88
  425166:	push   0x1
  425168:	call   0x4263a8
  42516d:	mov    esi,eax
  42516f:	test   esi,esi
  425171:	pop    ecx
  425172:	pop    ecx
  425173:	je     0x4251a2
  425175:	push   esi
  425176:	push   DWORD PTR ds:0x4668bc
  42517c:	call   DWORD PTR ds:0x4290b8
  425182:	test   eax,eax
  425184:	je     0x4251a2
  425186:	mov    DWORD PTR [esi+0x54],0x466810
  42518d:	mov    DWORD PTR [esi+0x14],0x1
  425194:	call   DWORD PTR ds:0x4290b4
  42519a:	or     DWORD PTR [esi+0x4],0xffffffff
  42519e:	mov    DWORD PTR [esi],eax
  4251a0:	jmp    0x4251aa
  4251a2:	push   0x10
  4251a4:	call   0x424358
  4251a9:	pop    ecx
  4251aa:	push   ebx
  4251ab:	call   DWORD PTR ds:0x4290b0
  4251b1:	mov    eax,esi
  4251b3:	pop    esi
  4251b4:	pop    ebx
  4251b5:	ret    
  4251b6:	call   0x42531d
  4251bb:	test   eax,eax
  4251bd:	je     0x4251cf
  4251bf:	call   DWORD PTR ds:0x4290c0
  4251c5:	cmp    eax,0xffffffff
  4251c8:	mov    ds:0x4668bc,eax
  4251cd:	jne    0x4251d7
  4251cf:	call   0x425127
  4251d4:	xor    eax,eax
  4251d6:	ret    
  4251d7:	push   esi
  4251d8:	push   0x88
  4251dd:	push   0x1
  4251df:	call   0x4263a8
  4251e4:	mov    esi,eax
  4251e6:	test   esi,esi
  4251e8:	pop    ecx
  4251e9:	pop    ecx
  4251ea:	je     0x42521c
  4251ec:	push   esi
  4251ed:	push   DWORD PTR ds:0x4668bc
  4251f3:	call   DWORD PTR ds:0x4290b8
  4251f9:	test   eax,eax
  4251fb:	je     0x42521c
  4251fd:	mov    DWORD PTR [esi+0x54],0x466810
  425204:	mov    DWORD PTR [esi+0x14],0x1
  42520b:	call   DWORD PTR ds:0x4290b4
  425211:	or     DWORD PTR [esi+0x4],0xffffffff
  425215:	mov    DWORD PTR [esi],eax
  425217:	xor    eax,eax
  425219:	inc    eax
  42521a:	pop    esi
  42521b:	ret    
  42521c:	call   0x425127
  425221:	xor    eax,eax
  425223:	pop    esi
  425224:	ret    
  425225:	cmp    DWORD PTR ds:0x467084,0x2
  42522c:	jne    0x42523b
  42522e:	cmp    DWORD PTR ds:0x467090,0x5
  425235:	jb     0x42523b
  425237:	xor    eax,eax
  425239:	inc    eax
  42523a:	ret    
  42523b:	push   0x3
  42523d:	pop    eax
  42523e:	ret    
  42523f:	xor    eax,eax
  425241:	cmp    DWORD PTR [esp+0x4],eax
  425245:	push   0x0
  425247:	sete   al
  42524a:	push   0x1000
  42524f:	push   eax
  425250:	call   DWORD PTR ds:0x429038
  425256:	test   eax,eax
  425258:	mov    ds:0x467700,eax
  42525d:	je     0x425289
  42525f:	call   0x425225
  425264:	cmp    eax,0x3
  425267:	mov    ds:0x467704,eax
  42526c:	jne    0x42528c
  42526e:	push   0x3f8
  425273:	call   0x42662a
  425278:	test   eax,eax
  42527a:	pop    ecx
  42527b:	jne    0x42528c
  42527d:	push   DWORD PTR ds:0x467700
  425283:	call   DWORD PTR ds:0x429020
  425289:	xor    eax,eax
  42528b:	ret    
  42528c:	xor    eax,eax
  42528e:	inc    eax
  42528f:	ret    
  425290:	push   0x427158
  425295:	mov    eax,fs:0x0
  42529b:	push   eax
  42529c:	mov    eax,DWORD PTR [esp+0x10]
  4252a0:	mov    DWORD PTR [esp+0x10],ebp
  4252a4:	lea    ebp,[esp+0x10]
  4252a8:	sub    esp,eax
  4252aa:	push   ebx
  4252ab:	push   esi
  4252ac:	push   edi
  4252ad:	mov    eax,DWORD PTR [ebp-0x8]
  4252b0:	mov    DWORD PTR [ebp-0x18],esp
  4252b3:	push   eax
  4252b4:	mov    eax,DWORD PTR [ebp-0x4]
  4252b7:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4252be:	mov    DWORD PTR [ebp-0x8],eax
  4252c1:	lea    eax,[ebp-0x10]
  4252c4:	mov    fs:0x0,eax
  4252ca:	ret    
  4252cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4252ce:	mov    DWORD PTR fs:0x0,ecx
  4252d5:	pop    ecx
  4252d6:	pop    edi
  4252d7:	pop    esi
  4252d8:	pop    ebx
  4252d9:	leave  
  4252da:	push   ecx
  4252db:	ret    
  4252dc:	int3   
  4252dd:	int3   
  4252de:	int3   
  4252df:	int3   
  4252e0:	cmp    eax,0x1000
  4252e5:	jae    0x4252f5
  4252e7:	neg    eax
  4252e9:	add    eax,esp
  4252eb:	add    eax,0x4
  4252ee:	test   DWORD PTR [eax],eax
  4252f0:	xchg   esp,eax
  4252f1:	mov    eax,DWORD PTR [eax]
  4252f3:	push   eax
  4252f4:	ret    
  4252f5:	push   ecx
  4252f6:	lea    ecx,[esp+0x8]
  4252fa:	sub    ecx,0x1000
  425300:	sub    eax,0x1000
  425305:	test   DWORD PTR [ecx],eax
  425307:	cmp    eax,0x1000
  42530c:	jae    0x4252fa
  42530e:	sub    ecx,eax
  425310:	mov    eax,esp
  425312:	test   DWORD PTR [ecx],eax
  425314:	mov    esp,ecx
  425316:	mov    ecx,DWORD PTR [eax]
  425318:	mov    eax,DWORD PTR [eax+0x4]
  42531b:	push   eax
  42531c:	ret    
  42531d:	push   esi
  42531e:	push   edi
  42531f:	xor    esi,esi
  425321:	mov    edi,0x4671e0
  425326:	cmp    DWORD PTR [esi*8+0x4668d4],0x1
  42532e:	jne    0x42534e
  425330:	lea    eax,[esi*8+0x4668d0]
  425337:	mov    DWORD PTR [eax],edi
  425339:	push   0xfa0
  42533e:	push   DWORD PTR [eax]
  425340:	add    edi,0x18
  425343:	call   0x42631d
  425348:	test   eax,eax
  42534a:	pop    ecx
  42534b:	pop    ecx
  42534c:	je     0x42535a
  42534e:	inc    esi
  42534f:	cmp    esi,0x24
  425352:	jl     0x425326
  425354:	xor    eax,eax
  425356:	inc    eax
  425357:	pop    edi
  425358:	pop    esi
  425359:	ret    
  42535a:	and    DWORD PTR [esi*8+0x4668d0],0x0
  425362:	xor    eax,eax
  425364:	jmp    0x425357
  425366:	push   ebx
  425367:	mov    ebx,DWORD PTR ds:0x4290a8
  42536d:	push   esi
  42536e:	mov    esi,0x4668d0
  425373:	push   edi
  425374:	mov    edi,DWORD PTR [esi]
  425376:	test   edi,edi
  425378:	je     0x42538d
  42537a:	cmp    DWORD PTR [esi+0x4],0x1
  42537e:	je     0x42538d
  425380:	push   edi
  425381:	call   ebx
  425383:	push   edi
  425384:	call   0x425e9a
  425389:	and    DWORD PTR [esi],0x0
  42538c:	pop    ecx
  42538d:	add    esi,0x8
  425390:	cmp    esi,0x4669f0
  425396:	jl     0x425374
  425398:	mov    esi,0x4668d0
  42539d:	pop    edi
  42539e:	mov    eax,DWORD PTR [esi]
  4253a0:	test   eax,eax
  4253a2:	je     0x4253ad
  4253a4:	cmp    DWORD PTR [esi+0x4],0x1
  4253a8:	jne    0x4253ad
  4253aa:	push   eax
  4253ab:	call   ebx
  4253ad:	add    esi,0x8
  4253b0:	cmp    esi,0x4669f0
  4253b6:	jl     0x42539e
  4253b8:	pop    esi
  4253b9:	pop    ebx
  4253ba:	ret    
  4253bb:	push   ebp
  4253bc:	mov    ebp,esp
  4253be:	mov    eax,DWORD PTR [ebp+0x8]
  4253c1:	push   DWORD PTR [eax*8+0x4668d0]
  4253c8:	call   DWORD PTR ds:0x4290c4
  4253ce:	pop    ebp
  4253cf:	ret    
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	push   esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x8]
  4253d7:	lea    esi,[esi*8+0x4668d0]
  4253de:	cmp    DWORD PTR [esi],0x0
  4253e1:	je     0x4253e8
  4253e3:	xor    eax,eax
  4253e5:	inc    eax
  4253e6:	jmp    0x42544c
  4253e8:	push   edi
  4253e9:	push   0x18
  4253eb:	call   0x425fb2
  4253f0:	mov    edi,eax
  4253f2:	test   edi,edi
  4253f4:	pop    ecx
  4253f5:	jne    0x425406
  4253f7:	call   0x427230
  4253fc:	mov    DWORD PTR [eax],0xc
  425402:	xor    eax,eax
  425404:	jmp    0x42544b
  425406:	push   0xa
  425408:	call   0x42544f
  42540d:	cmp    DWORD PTR [esi],0x0
  425410:	pop    ecx
  425411:	jne    0x425439
  425413:	push   0xfa0
  425418:	push   edi
  425419:	call   0x42631d
  42541e:	test   eax,eax
  425420:	pop    ecx
  425421:	pop    ecx
  425422:	jne    0x425435
  425424:	push   edi
  425425:	call   0x425e9a
  42542a:	push   0xa
  42542c:	call   0x4253bb
  425431:	pop    ecx
  425432:	pop    ecx
  425433:	jmp    0x4253f7
  425435:	mov    DWORD PTR [esi],edi
  425437:	jmp    0x425440
  425439:	push   edi
  42543a:	call   0x425e9a
  42543f:	pop    ecx
  425440:	push   0xa
  425442:	call   0x4253bb
  425447:	xor    eax,eax
  425449:	pop    ecx
  42544a:	inc    eax
  42544b:	pop    edi
  42544c:	pop    esi
  42544d:	pop    ebp
  42544e:	ret    
  42544f:	push   ebp
  425450:	mov    ebp,esp
  425452:	mov    eax,DWORD PTR [ebp+0x8]
  425455:	push   esi
  425456:	lea    esi,[eax*8+0x4668d0]
  42545d:	cmp    DWORD PTR [esi],0x0
  425460:	jne    0x425475
  425462:	push   eax
  425463:	call   0x4253d0
  425468:	test   eax,eax
  42546a:	pop    ecx
  42546b:	jne    0x425475
  42546d:	push   0x11
  42546f:	call   0x424358
  425474:	pop    ecx
  425475:	push   DWORD PTR [esi]
  425477:	call   DWORD PTR ds:0x4290c8
  42547d:	pop    esi
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   esi
  425481:	push   DWORD PTR ds:0x467828
  425487:	call   0x4273e6
  42548c:	pop    ecx
  42548d:	mov    ecx,DWORD PTR ds:0x467824
  425493:	mov    esi,eax
  425495:	mov    eax,ds:0x467828
  42549a:	mov    edx,ecx
  42549c:	sub    edx,eax
  42549e:	add    edx,0x4
  4254a1:	cmp    esi,edx
  4254a3:	jae    0x4254f3
  4254a5:	mov    ecx,0x800
  4254aa:	cmp    esi,ecx
  4254ac:	jae    0x4254b0
  4254ae:	mov    ecx,esi
  4254b0:	add    ecx,esi
  4254b2:	push   ecx
  4254b3:	push   eax
  4254b4:	call   0x427239
  4254b9:	test   eax,eax
  4254bb:	pop    ecx
  4254bc:	pop    ecx
  4254bd:	jne    0x4254d6
  4254bf:	add    esi,0x10
  4254c2:	push   esi
  4254c3:	push   DWORD PTR ds:0x467828
  4254c9:	call   0x427239
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254d6
  4254d4:	pop    esi
  4254d5:	ret    
  4254d6:	mov    ecx,DWORD PTR ds:0x467824
  4254dc:	sub    ecx,DWORD PTR ds:0x467828
  4254e2:	mov    ds:0x467828,eax
  4254e7:	sar    ecx,0x2
  4254ea:	lea    ecx,[eax+ecx*4]
  4254ed:	mov    DWORD PTR ds:0x467824,ecx
  4254f3:	mov    DWORD PTR [ecx],edi
  4254f5:	add    DWORD PTR ds:0x467824,0x4
  4254fc:	mov    eax,edi
  4254fe:	pop    esi
  4254ff:	ret    
  425500:	push   0x80
  425505:	call   0x425fb2
  42550a:	test   eax,eax
  42550c:	pop    ecx
  42550d:	mov    ds:0x467828,eax
  425512:	jne    0x425518
  425514:	push   0x18
  425516:	pop    eax
  425517:	ret    
  425518:	and    DWORD PTR [eax],0x0
  42551b:	mov    eax,ds:0x467828
  425520:	mov    ds:0x467824,eax
  425525:	xor    eax,eax
  425527:	ret    
  425528:	push   0xc
  42552a:	push   0x429520
  42552f:	call   0x425290
  425534:	call   0x4245a3
  425539:	and    DWORD PTR [ebp-0x4],0x0
  42553d:	mov    edi,DWORD PTR [ebp+0x8]
  425540:	call   0x425480
  425545:	mov    DWORD PTR [ebp-0x1c],eax
  425548:	or     DWORD PTR [ebp-0x4],0xffffffff
  42554c:	call   0x42555a
  425551:	mov    eax,DWORD PTR [ebp-0x1c]
  425554:	call   0x4252cb
  425559:	ret    
  42555a:	call   0x4245ac
  42555f:	ret    
  425560:	push   DWORD PTR [esp+0x4]
  425564:	call   0x425528
  425569:	neg    eax
  42556b:	sbb    eax,eax
  42556d:	neg    eax
  42556f:	pop    ecx
  425570:	dec    eax
  425571:	ret    
  425572:	push   ebp
  425573:	mov    ebp,esp
  425575:	sub    esp,0x10
  425578:	push   ebx
  425579:	xor    ebx,ebx
  42557b:	cmp    DWORD PTR ds:0x467330,ebx
  425581:	push   esi
  425582:	push   edi
  425583:	jne    0x4255f2
  425585:	push   0x429590
  42558a:	call   DWORD PTR ds:0x4290cc
  425590:	mov    edi,eax
  425592:	cmp    edi,ebx
  425594:	je     0x42562d
  42559a:	mov    esi,DWORD PTR ds:0x429048
  4255a0:	push   0x429584
  4255a5:	push   edi
  4255a6:	call   esi
  4255a8:	test   eax,eax
  4255aa:	mov    ds:0x467330,eax
  4255af:	je     0x42562d
  4255b1:	push   0x429574
  4255b6:	push   edi
  4255b7:	call   esi
  4255b9:	push   0x429560
  4255be:	push   edi
  4255bf:	mov    ds:0x467334,eax
  4255c4:	call   esi
  4255c6:	cmp    DWORD PTR ds:0x467084,0x2
  4255cd:	mov    ds:0x467338,eax
  4255d2:	jne    0x4255f2
  4255d4:	push   0x429544
  4255d9:	push   edi
  4255da:	call   esi
  4255dc:	test   eax,eax
  4255de:	mov    ds:0x467340,eax
  4255e3:	je     0x4255f2
  4255e5:	push   0x42952c
  4255ea:	push   edi
  4255eb:	call   esi
  4255ed:	mov    ds:0x46733c,eax
  4255f2:	mov    eax,ds:0x46733c
  4255f7:	test   eax,eax
  4255f9:	je     0x425637
  4255fb:	call   eax
  4255fd:	test   eax,eax
  4255ff:	je     0x42561e
  425601:	lea    ecx,[ebp-0x4]
  425604:	push   ecx
  425605:	push   0xc
  425607:	lea    ecx,[ebp-0x10]
  42560a:	push   ecx
  42560b:	push   0x1
  42560d:	push   eax
  42560e:	call   DWORD PTR ds:0x467340
  425614:	test   eax,eax
  425616:	je     0x42561e
  425618:	test   BYTE PTR [ebp-0x8],0x1
  42561c:	jne    0x425637
  42561e:	cmp    DWORD PTR ds:0x467090,0x4
  425625:	jb     0x425631
  425627:	or     BYTE PTR [ebp+0x12],0x20
  42562b:	jmp    0x425656
  42562d:	xor    eax,eax
  42562f:	jmp    0x425666
  425631:	or     BYTE PTR [ebp+0x12],0x4
  425635:	jmp    0x425656
  425637:	mov    eax,ds:0x467334
  42563c:	test   eax,eax
  42563e:	je     0x425656
  425640:	call   eax
  425642:	mov    ebx,eax
  425644:	test   ebx,ebx
  425646:	je     0x425656
  425648:	mov    eax,ds:0x467338
  42564d:	test   eax,eax
  42564f:	je     0x425656
  425651:	push   ebx
  425652:	call   eax
  425654:	mov    ebx,eax
  425656:	push   DWORD PTR [ebp+0x10]
  425659:	push   DWORD PTR [ebp+0xc]
  42565c:	push   DWORD PTR [ebp+0x8]
  42565f:	push   ebx
  425660:	call   DWORD PTR ds:0x467330
  425666:	pop    edi
  425667:	pop    esi
  425668:	pop    ebx
  425669:	leave  
  42566a:	ret    
  42566b:	int3   
  42566c:	int3   
  42566d:	int3   
  42566e:	int3   
  42566f:	int3   
  425670:	push   edi
  425671:	mov    edi,DWORD PTR [esp+0x8]
  425675:	jmp    0x4256e5
  425677:	lea    esp,[esp+0x0]
  42567e:	mov    edi,edi
  425680:	mov    ecx,DWORD PTR [esp+0x4]
  425684:	push   edi
  425685:	test   ecx,0x3
  42568b:	je     0x4256a0
  42568d:	mov    al,BYTE PTR [ecx]
  42568f:	add    ecx,0x1
  425692:	test   al,al
  425694:	je     0x4256d3
  425696:	test   ecx,0x3
  42569c:	jne    0x42568d
  42569e:	mov    edi,edi
  4256a0:	mov    eax,DWORD PTR [ecx]
  4256a2:	mov    edx,0x7efefeff
  4256a7:	add    edx,eax
  4256a9:	xor    eax,0xffffffff
  4256ac:	xor    eax,edx
  4256ae:	add    ecx,0x4
  4256b1:	test   eax,0x81010100
  4256b6:	je     0x4256a0
  4256b8:	mov    eax,DWORD PTR [ecx-0x4]
  4256bb:	test   al,al
  4256bd:	je     0x4256e2
  4256bf:	test   ah,ah
  4256c1:	je     0x4256dd
  4256c3:	test   eax,0xff0000
  4256c8:	je     0x4256d8
  4256ca:	test   eax,0xff000000
  4256cf:	je     0x4256d3
  4256d1:	jmp    0x4256a0
  4256d3:	lea    edi,[ecx-0x1]
  4256d6:	jmp    0x4256e5
  4256d8:	lea    edi,[ecx-0x2]
  4256db:	jmp    0x4256e5
  4256dd:	lea    edi,[ecx-0x3]
  4256e0:	jmp    0x4256e5
  4256e2:	lea    edi,[ecx-0x4]
  4256e5:	mov    ecx,DWORD PTR [esp+0xc]
  4256e9:	test   ecx,0x3
  4256ef:	je     0x42570e
  4256f1:	mov    dl,BYTE PTR [ecx]
  4256f3:	add    ecx,0x1
  4256f6:	test   dl,dl
  4256f8:	je     0x425760
  4256fa:	mov    BYTE PTR [edi],dl
  4256fc:	add    edi,0x1
  4256ff:	test   ecx,0x3
  425705:	jne    0x4256f1
  425707:	jmp    0x42570e
  425709:	mov    DWORD PTR [edi],edx
  42570b:	add    edi,0x4
  42570e:	mov    edx,0x7efefeff
  425713:	mov    eax,DWORD PTR [ecx]
  425715:	add    edx,eax
  425717:	xor    eax,0xffffffff
  42571a:	xor    eax,edx
  42571c:	mov    edx,DWORD PTR [ecx]
  42571e:	add    ecx,0x4
  425721:	test   eax,0x81010100
  425726:	je     0x425709
  425728:	test   dl,dl
  42572a:	je     0x425760
  42572c:	test   dh,dh
  42572e:	je     0x425757
  425730:	test   edx,0xff0000
  425736:	je     0x42574a
  425738:	test   edx,0xff000000
  42573e:	je     0x425742
  425740:	jmp    0x425709
  425742:	mov    DWORD PTR [edi],edx
  425744:	mov    eax,DWORD PTR [esp+0x8]
  425748:	pop    edi
  425749:	ret    
  42574a:	mov    WORD PTR [edi],dx
  42574d:	mov    eax,DWORD PTR [esp+0x8]
  425751:	mov    BYTE PTR [edi+0x2],0x0
  425755:	pop    edi
  425756:	ret    
  425757:	mov    WORD PTR [edi],dx
  42575a:	mov    eax,DWORD PTR [esp+0x8]
  42575e:	pop    edi
  42575f:	ret    
  425760:	mov    BYTE PTR [edi],dl
  425762:	mov    eax,DWORD PTR [esp+0x8]
  425766:	pop    edi
  425767:	ret    
  425768:	int3   
  425769:	int3   
  42576a:	int3   
  42576b:	int3   
  42576c:	int3   
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	mov    ecx,DWORD PTR [esp+0xc]
  425774:	push   edi
  425775:	test   ecx,ecx
  425777:	je     0x42580f
  42577d:	push   esi
  42577e:	push   ebx
  42577f:	mov    ebx,ecx
  425781:	mov    esi,DWORD PTR [esp+0x14]
  425785:	test   esi,0x3
  42578b:	mov    edi,DWORD PTR [esp+0x10]
  42578f:	jne    0x42579c
  425791:	shr    ecx,0x2
  425794:	jne    0x42581f
  42579a:	jmp    0x4257c3
  42579c:	mov    al,BYTE PTR [esi]
  42579e:	add    esi,0x1
  4257a1:	mov    BYTE PTR [edi],al
  4257a3:	add    edi,0x1
  4257a6:	sub    ecx,0x1
  4257a9:	je     0x4257d6
  4257ab:	test   al,al
  4257ad:	je     0x4257de
  4257af:	test   esi,0x3
  4257b5:	jne    0x42579c
  4257b7:	mov    ebx,ecx
  4257b9:	shr    ecx,0x2
  4257bc:	jne    0x42581f
  4257be:	and    ebx,0x3
  4257c1:	je     0x4257d6
  4257c3:	mov    al,BYTE PTR [esi]
  4257c5:	add    esi,0x1
  4257c8:	mov    BYTE PTR [edi],al
  4257ca:	add    edi,0x1
  4257cd:	test   al,al
  4257cf:	je     0x425808
  4257d1:	sub    ebx,0x1
  4257d4:	jne    0x4257c3
  4257d6:	mov    eax,DWORD PTR [esp+0x10]
  4257da:	pop    ebx
  4257db:	pop    esi
  4257dc:	pop    edi
  4257dd:	ret    
  4257de:	test   edi,0x3
  4257e4:	je     0x4257fc
  4257e6:	mov    BYTE PTR [edi],al
  4257e8:	add    edi,0x1
  4257eb:	sub    ecx,0x1
  4257ee:	je     0x42588c
  4257f4:	test   edi,0x3
  4257fa:	jne    0x4257e6
  4257fc:	mov    ebx,ecx
  4257fe:	shr    ecx,0x2
  425801:	jne    0x425877
  425803:	mov    BYTE PTR [edi],al
  425805:	add    edi,0x1
  425808:	sub    ebx,0x1
  42580b:	jne    0x425803
  42580d:	pop    ebx
  42580e:	pop    esi
  42580f:	mov    eax,DWORD PTR [esp+0x8]
  425813:	pop    edi
  425814:	ret    
  425815:	mov    DWORD PTR [edi],edx
  425817:	add    edi,0x4
  42581a:	sub    ecx,0x1
  42581d:	je     0x4257be
  42581f:	mov    edx,0x7efefeff
  425824:	mov    eax,DWORD PTR [esi]
  425826:	add    edx,eax
  425828:	xor    eax,0xffffffff
  42582b:	xor    eax,edx
  42582d:	mov    edx,DWORD PTR [esi]
  42582f:	add    esi,0x4
  425832:	test   eax,0x81010100
  425837:	je     0x425815
  425839:	test   dl,dl
  42583b:	je     0x425869
  42583d:	test   dh,dh
  42583f:	je     0x42585f
  425841:	test   edx,0xff0000
  425847:	je     0x425855
  425849:	test   edx,0xff000000
  42584f:	jne    0x425815
  425851:	mov    DWORD PTR [edi],edx
  425853:	jmp    0x42586d
  425855:	and    edx,0xffff
  42585b:	mov    DWORD PTR [edi],edx
  42585d:	jmp    0x42586d
  42585f:	and    edx,0xff
  425865:	mov    DWORD PTR [edi],edx
  425867:	jmp    0x42586d
  425869:	xor    edx,edx
  42586b:	mov    DWORD PTR [edi],edx
  42586d:	add    edi,0x4
  425870:	xor    eax,eax
  425872:	sub    ecx,0x1
  425875:	je     0x425883
  425877:	xor    eax,eax
  425879:	mov    DWORD PTR [edi],eax
  42587b:	add    edi,0x4
  42587e:	sub    ecx,0x1
  425881:	jne    0x425879
  425883:	and    ebx,0x3
  425886:	jne    0x425803
  42588c:	mov    eax,DWORD PTR [esp+0x10]
  425890:	pop    ebx
  425891:	pop    esi
  425892:	pop    edi
  425893:	ret    
  425894:	int3   
  425895:	int3   
  425896:	int3   
  425897:	int3   
  425898:	int3   
  425899:	int3   
  42589a:	int3   
  42589b:	int3   
  42589c:	int3   
  42589d:	int3   
  42589e:	int3   
  42589f:	int3   
  4258a0:	mov    ecx,DWORD PTR [esp+0x4]
  4258a4:	test   ecx,0x3
  4258aa:	je     0x4258d0
  4258ac:	mov    al,BYTE PTR [ecx]
  4258ae:	add    ecx,0x1
  4258b1:	test   al,al
  4258b3:	je     0x425903
  4258b5:	test   ecx,0x3
  4258bb:	jne    0x4258ac
  4258bd:	add    eax,0x0
  4258c2:	lea    esp,[esp+0x0]
  4258c9:	lea    esp,[esp+0x0]
  4258d0:	mov    eax,DWORD PTR [ecx]
  4258d2:	mov    edx,0x7efefeff
  4258d7:	add    edx,eax
  4258d9:	xor    eax,0xffffffff
  4258dc:	xor    eax,edx
  4258de:	add    ecx,0x4
  4258e1:	test   eax,0x81010100
  4258e6:	je     0x4258d0
  4258e8:	mov    eax,DWORD PTR [ecx-0x4]
  4258eb:	test   al,al
  4258ed:	je     0x425921
  4258ef:	test   ah,ah
  4258f1:	je     0x425917
  4258f3:	test   eax,0xff0000
  4258f8:	je     0x42590d
  4258fa:	test   eax,0xff000000
  4258ff:	je     0x425903
  425901:	jmp    0x4258d0
  425903:	lea    eax,[ecx-0x1]
  425906:	mov    ecx,DWORD PTR [esp+0x4]
  42590a:	sub    eax,ecx
  42590c:	ret    
  42590d:	lea    eax,[ecx-0x2]
  425910:	mov    ecx,DWORD PTR [esp+0x4]
  425914:	sub    eax,ecx
  425916:	ret    
  425917:	lea    eax,[ecx-0x3]
  42591a:	mov    ecx,DWORD PTR [esp+0x4]
  42591e:	sub    eax,ecx
  425920:	ret    
  425921:	lea    eax,[ecx-0x4]
  425924:	mov    ecx,DWORD PTR [esp+0x4]
  425928:	sub    eax,ecx
  42592a:	ret    
  42592b:	push   0x8
  42592d:	push   0x4295a0
  425932:	call   0x425290
  425937:	and    DWORD PTR [ebp-0x4],0x0
  42593b:	push   0x0
  42593d:	push   0x1
  42593f:	call   0x4274b2
  425944:	pop    ecx
  425945:	pop    ecx
  425946:	jmp    0x42594f
  425948:	xor    eax,eax
  42594a:	inc    eax
  42594b:	ret    
  42594c:	mov    esp,DWORD PTR [ebp-0x18]
  42594f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425953:	push   0x3
  425955:	call   DWORD PTR ds:0x429070
  42595b:	int3   
  42595c:	cmp    ecx,DWORD PTR ds:0x4669f0
  425962:	jne    0x425965
  425964:	ret    
  425965:	jmp    0x42592b
  42596a:	movzx  eax,BYTE PTR [esp+0x4]
  42596f:	mov    cl,BYTE PTR [esp+0xc]
  425973:	test   BYTE PTR [eax+0x4674e1],cl
  425979:	jne    0x425997
  42597b:	cmp    DWORD PTR [esp+0x8],0x0
  425980:	je     0x425990
  425982:	movzx  eax,WORD PTR [eax*2+0x42999a]
  42598a:	and    eax,DWORD PTR [esp+0x8]
  42598e:	jmp    0x425992
  425990:	xor    eax,eax
  425992:	test   eax,eax
  425994:	jne    0x425997
  425996:	ret    
  425997:	xor    eax,eax
  425999:	inc    eax
  42599a:	ret    
  42599b:	push   0x4
  42599d:	push   0x0
  42599f:	push   DWORD PTR [esp+0xc]
  4259a3:	call   0x42596a
  4259a8:	add    esp,0xc
  4259ab:	ret    
  4259ac:	sub    eax,0x3a4
  4259b1:	je     0x4259d5
  4259b3:	sub    eax,0x4
  4259b6:	je     0x4259cf
  4259b8:	sub    eax,0xd
  4259bb:	je     0x4259c9
  4259bd:	dec    eax
  4259be:	je     0x4259c3
  4259c0:	xor    eax,eax
  4259c2:	ret    
  4259c3:	mov    eax,0x404
  4259c8:	ret    
  4259c9:	mov    eax,0x412
  4259ce:	ret    
  4259cf:	mov    eax,0x804
  4259d4:	ret    
  4259d5:	mov    eax,0x411
  4259da:	ret    
  4259db:	push   edi
  4259dc:	push   0x40
  4259de:	xor    eax,eax
  4259e0:	pop    ecx
  4259e1:	mov    edi,0x4674e0
  4259e6:	rep stos DWORD PTR es:[edi],eax
  4259e8:	stos   BYTE PTR es:[edi],al
  4259e9:	xor    eax,eax
  4259eb:	mov    ds:0x4675e4,eax
  4259f0:	mov    ds:0x4674dc,eax
  4259f5:	mov    ds:0x4674d4,eax
  4259fa:	mov    edi,0x4675f0
  4259ff:	stos   DWORD PTR es:[edi],eax
  425a00:	stos   DWORD PTR es:[edi],eax
  425a01:	stos   DWORD PTR es:[edi],eax
  425a02:	pop    edi
  425a03:	ret    
  425a04:	push   ebp
  425a05:	mov    ebp,esp
  425a07:	sub    esp,0x518
  425a0d:	mov    eax,ds:0x4669f0
  425a12:	xor    eax,DWORD PTR [ebp+0x4]
  425a15:	push   esi
  425a16:	mov    DWORD PTR [ebp-0x4],eax
  425a19:	lea    eax,[ebp-0x18]
  425a1c:	push   eax
  425a1d:	push   DWORD PTR ds:0x4675e4
  425a23:	call   DWORD PTR ds:0x4290d8
  425a29:	cmp    eax,0x1
  425a2c:	mov    esi,0x100
  425a31:	jne    0x425b44
  425a37:	xor    eax,eax
  425a39:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425a40:	inc    eax
  425a41:	cmp    eax,esi
  425a43:	jb     0x425a39
  425a45:	mov    al,BYTE PTR [ebp-0x12]
  425a48:	test   al,al
  425a4a:	mov    BYTE PTR [ebp-0x118],0x20
  425a51:	je     0x425a89
  425a53:	push   ebx
  425a54:	lea    edx,[ebp-0x11]
  425a57:	push   edi
  425a58:	movzx  ecx,BYTE PTR [edx]
  425a5b:	movzx  eax,al
  425a5e:	cmp    eax,ecx
  425a60:	ja     0x425a7f
  425a62:	sub    ecx,eax
  425a64:	inc    ecx
  425a65:	mov    ebx,ecx
  425a67:	shr    ecx,0x2
  425a6a:	lea    edi,[ebp+eax*1-0x118]
  425a71:	mov    eax,0x20202020
  425a76:	rep stos DWORD PTR es:[edi],eax
  425a78:	mov    ecx,ebx
  425a7a:	and    ecx,0x3
  425a7d:	rep stos BYTE PTR es:[edi],al
  425a7f:	inc    edx
  425a80:	mov    al,BYTE PTR [edx]
  425a82:	inc    edx
  425a83:	test   al,al
  425a85:	jne    0x425a58
  425a87:	pop    edi
  425a88:	pop    ebx
  425a89:	push   0x0
  425a8b:	push   DWORD PTR ds:0x4674d4
  425a91:	lea    eax,[ebp-0x518]
  425a97:	push   DWORD PTR ds:0x4675e4
  425a9d:	push   eax
  425a9e:	push   esi
  425a9f:	lea    eax,[ebp-0x118]
  425aa5:	push   eax
  425aa6:	push   0x1
  425aa8:	call   0x4279b8
  425aad:	push   0x0
  425aaf:	push   DWORD PTR ds:0x4675e4
  425ab5:	lea    eax,[ebp-0x218]
  425abb:	push   esi
  425abc:	push   eax
  425abd:	push   esi
  425abe:	lea    eax,[ebp-0x118]
  425ac4:	push   eax
  425ac5:	push   esi
  425ac6:	push   DWORD PTR ds:0x4674d4
  425acc:	call   0x4275fc
  425ad1:	push   0x0
  425ad3:	push   DWORD PTR ds:0x4675e4
  425ad9:	lea    eax,[ebp-0x318]
  425adf:	push   esi
  425ae0:	push   eax
  425ae1:	push   esi
  425ae2:	lea    eax,[ebp-0x118]
  425ae8:	push   eax
  425ae9:	push   0x200
  425aee:	push   DWORD PTR ds:0x4674d4
  425af4:	call   0x4275fc
  425af9:	add    esp,0x5c
  425afc:	xor    eax,eax
  425afe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425b06:	test   cl,0x1
  425b09:	je     0x425b21
  425b0b:	or     BYTE PTR [eax+0x4674e1],0x10
  425b12:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425b19:	mov    BYTE PTR [eax+0x467600],cl
  425b1f:	jmp    0x425b3d
  425b21:	test   cl,0x2
  425b24:	je     0x425b36
  425b26:	or     BYTE PTR [eax+0x4674e1],0x20
  425b2d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425b34:	jmp    0x425b19
  425b36:	and    BYTE PTR [eax+0x467600],0x0
  425b3d:	inc    eax
  425b3e:	cmp    eax,esi
  425b40:	jb     0x425afe
  425b42:	jmp    0x425b88
  425b44:	xor    eax,eax
  425b46:	cmp    eax,0x41
  425b49:	jb     0x425b64
  425b4b:	cmp    eax,0x5a
  425b4e:	ja     0x425b64
  425b50:	or     BYTE PTR [eax+0x4674e1],0x10
  425b57:	mov    cl,al
  425b59:	add    cl,0x20
  425b5c:	mov    BYTE PTR [eax+0x467600],cl
  425b62:	jmp    0x425b83
  425b64:	cmp    eax,0x61
  425b67:	jb     0x425b7c
  425b69:	cmp    eax,0x7a
  425b6c:	ja     0x425b7c
  425b6e:	or     BYTE PTR [eax+0x4674e1],0x20
  425b75:	mov    cl,al
  425b77:	sub    cl,0x20
  425b7a:	jmp    0x425b5c
  425b7c:	and    BYTE PTR [eax+0x467600],0x0
  425b83:	inc    eax
  425b84:	cmp    eax,esi
  425b86:	jb     0x425b46
  425b88:	mov    ecx,DWORD PTR [ebp-0x4]
  425b8b:	xor    ecx,DWORD PTR [ebp+0x4]
  425b8e:	pop    esi
  425b8f:	call   0x42595c
  425b94:	leave  
  425b95:	ret    
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x1c
  425b9c:	mov    eax,ds:0x4669f0
  425ba1:	xor    eax,DWORD PTR [ebp+0x4]
  425ba4:	push   ebx
  425ba5:	push   esi
  425ba6:	mov    esi,DWORD PTR [ebp+0x8]
  425ba9:	xor    ebx,ebx
  425bab:	cmp    esi,ebx
  425bad:	mov    DWORD PTR [ebp-0x4],eax
  425bb0:	push   edi
  425bb1:	je     0x425d0b
  425bb7:	xor    edx,edx
  425bb9:	xor    eax,eax
  425bbb:	cmp    DWORD PTR [eax+0x466a00],esi
  425bc1:	je     0x425c28
  425bc3:	add    eax,0x30
  425bc6:	inc    edx
  425bc7:	cmp    eax,0xf0
  425bcc:	jb     0x425bbb
  425bce:	lea    eax,[ebp-0x1c]
  425bd1:	push   eax
  425bd2:	push   esi
  425bd3:	call   DWORD PTR ds:0x4290d8
  425bd9:	cmp    eax,0x1
  425bdc:	jne    0x425d03
  425be2:	push   0x40
  425be4:	xor    eax,eax
  425be6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425bea:	pop    ecx
  425beb:	mov    edi,0x4674e0
  425bf0:	rep stos DWORD PTR es:[edi],eax
  425bf2:	stos   BYTE PTR es:[edi],al
  425bf3:	mov    DWORD PTR ds:0x4675e4,esi
  425bf9:	mov    DWORD PTR ds:0x4674d4,ebx
  425bff:	jbe    0x425cf1
  425c05:	cmp    BYTE PTR [ebp-0x16],0x0
  425c09:	je     0x425cc9
  425c0f:	lea    ecx,[ebp-0x15]
  425c12:	mov    dl,BYTE PTR [ecx]
  425c14:	test   dl,dl
  425c16:	je     0x425cc9
  425c1c:	movzx  eax,BYTE PTR [ecx-0x1]
  425c20:	movzx  edx,dl
  425c23:	jmp    0x425cb9
  425c28:	push   0x40
  425c2a:	xor    eax,eax
  425c2c:	pop    ecx
  425c2d:	mov    edi,0x4674e0
  425c32:	rep stos DWORD PTR es:[edi],eax
  425c34:	lea    ecx,[edx+edx*2]
  425c37:	shl    ecx,0x4
  425c3a:	mov    DWORD PTR [ebp-0x8],ebx
  425c3d:	stos   BYTE PTR es:[edi],al
  425c3e:	lea    ebx,[ecx+0x466a10]
  425c44:	mov    al,BYTE PTR [ebx]
  425c46:	mov    esi,ebx
  425c48:	jmp    0x425c73
  425c4a:	mov    dl,BYTE PTR [esi+0x1]
  425c4d:	test   dl,dl
  425c4f:	je     0x425c77
  425c51:	movzx  eax,al
  425c54:	movzx  edi,dl
  425c57:	cmp    eax,edi
  425c59:	ja     0x425c6f
  425c5b:	mov    edx,DWORD PTR [ebp-0x8]
  425c5e:	mov    dl,BYTE PTR [edx+0x4669f8]
  425c64:	or     BYTE PTR [eax+0x4674e1],dl
  425c6a:	inc    eax
  425c6b:	cmp    eax,edi
  425c6d:	jbe    0x425c64
  425c6f:	inc    esi
  425c70:	inc    esi
  425c71:	mov    al,BYTE PTR [esi]
  425c73:	test   al,al
  425c75:	jne    0x425c4a
  425c77:	inc    DWORD PTR [ebp-0x8]
  425c7a:	add    ebx,0x8
  425c7d:	cmp    DWORD PTR [ebp-0x8],0x4
  425c81:	jb     0x425c44
  425c83:	mov    eax,DWORD PTR [ebp+0x8]
  425c86:	mov    ds:0x4675e4,eax
  425c8b:	mov    DWORD PTR ds:0x4674dc,0x1
  425c95:	call   0x4259ac
  425c9a:	lea    ecx,[ecx+0x466a04]
  425ca0:	mov    esi,ecx
  425ca2:	mov    edi,0x4675f0
  425ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca9:	mov    ds:0x4674d4,eax
  425cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425caf:	jmp    0x425d10
  425cb1:	or     BYTE PTR [eax+0x4674e1],0x4
  425cb8:	inc    eax
  425cb9:	cmp    eax,edx
  425cbb:	jbe    0x425cb1
  425cbd:	inc    ecx
  425cbe:	inc    ecx
  425cbf:	cmp    BYTE PTR [ecx-0x1],0x0
  425cc3:	jne    0x425c12
  425cc9:	xor    ecx,ecx
  425ccb:	inc    ecx
  425ccc:	mov    eax,ecx
  425cce:	or     BYTE PTR [eax+0x4674e1],0x8
  425cd5:	inc    eax
  425cd6:	cmp    eax,0xff
  425cdb:	jb     0x425cce
  425cdd:	mov    eax,esi
  425cdf:	call   0x4259ac
  425ce4:	mov    ds:0x4674d4,eax
  425ce9:	mov    DWORD PTR ds:0x4674dc,ecx
  425cef:	jmp    0x425cf7
  425cf1:	mov    DWORD PTR ds:0x4674dc,ebx
  425cf7:	xor    eax,eax
  425cf9:	mov    edi,0x4675f0
  425cfe:	stos   DWORD PTR es:[edi],eax
  425cff:	stos   DWORD PTR es:[edi],eax
  425d00:	stos   DWORD PTR es:[edi],eax
  425d01:	jmp    0x425d10
  425d03:	cmp    DWORD PTR ds:0x467344,ebx
  425d09:	je     0x425d19
  425d0b:	call   0x4259db
  425d10:	call   0x425a04
  425d15:	xor    eax,eax
  425d17:	jmp    0x425d1c
  425d19:	or     eax,0xffffffff
  425d1c:	mov    ecx,DWORD PTR [ebp-0x4]
  425d1f:	xor    ecx,DWORD PTR [ebp+0x4]
  425d22:	pop    edi
  425d23:	pop    esi
  425d24:	pop    ebx
  425d25:	call   0x42595c
  425d2a:	leave  
  425d2b:	ret    
  425d2c:	push   0x14
  425d2e:	push   0x4295b0
  425d33:	call   0x425290
  425d38:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425d3c:	push   0xd
  425d3e:	call   0x42544f
  425d43:	pop    ecx
  425d44:	xor    edi,edi
  425d46:	mov    DWORD PTR [ebp-0x4],edi
  425d49:	mov    DWORD PTR ds:0x467344,edi
  425d4f:	mov    eax,DWORD PTR [ebp+0x8]
  425d52:	cmp    eax,0xfffffffe
  425d55:	jne    0x425d69
  425d57:	mov    DWORD PTR ds:0x467344,0x1
  425d61:	call   DWORD PTR ds:0x4290d4
  425d67:	jmp    0x425d94
  425d69:	cmp    eax,0xfffffffd
  425d6c:	jne    0x425d80
  425d6e:	mov    DWORD PTR ds:0x467344,0x1
  425d78:	call   DWORD PTR ds:0x4290d0
  425d7e:	jmp    0x425d94
  425d80:	cmp    eax,0xfffffffc
  425d83:	jne    0x425d94
  425d85:	mov    DWORD PTR ds:0x467344,0x1
  425d8f:	mov    eax,ds:0x467374
  425d94:	mov    DWORD PTR [ebp+0x8],eax
  425d97:	cmp    eax,DWORD PTR ds:0x4675e4
  425d9d:	je     0x425e5e
  425da3:	mov    esi,DWORD PTR ds:0x4674d8
  425da9:	mov    DWORD PTR [ebp-0x20],esi
  425dac:	cmp    esi,edi
  425dae:	je     0x425db4
  425db0:	cmp    DWORD PTR [esi],edi
  425db2:	je     0x425dc4
  425db4:	push   0x220
  425db9:	call   0x425fb2
  425dbe:	pop    ecx
  425dbf:	mov    esi,eax
  425dc1:	mov    DWORD PTR [ebp-0x20],esi
  425dc4:	cmp    esi,edi
  425dc6:	je     0x425e47
  425dc8:	push   DWORD PTR [ebp+0x8]
  425dcb:	call   0x425b96
  425dd0:	pop    ecx
  425dd1:	mov    DWORD PTR [ebp-0x1c],eax
  425dd4:	cmp    eax,edi
  425dd6:	jne    0x425e47
  425dd8:	mov    DWORD PTR [esi],edi
  425dda:	mov    eax,ds:0x4675e4
  425ddf:	mov    DWORD PTR [esi+0x4],eax
  425de2:	mov    eax,ds:0x4674dc
  425de7:	mov    DWORD PTR [esi+0x8],eax
  425dea:	mov    eax,ds:0x4674d4
  425def:	mov    DWORD PTR [esi+0xc],eax
  425df2:	xor    eax,eax
  425df4:	mov    DWORD PTR [ebp-0x24],eax
  425df7:	cmp    eax,0x5
  425dfa:	jge    0x425e0c
  425dfc:	mov    cx,WORD PTR [eax*2+0x4675f0]
  425e04:	mov    WORD PTR [esi+eax*2+0x10],cx
  425e09:	inc    eax
  425e0a:	jmp    0x425df4
  425e0c:	xor    eax,eax
  425e0e:	mov    DWORD PTR [ebp-0x24],eax
  425e11:	cmp    eax,0x101
  425e16:	jge    0x425e25
  425e18:	mov    cl,BYTE PTR [eax+0x4674e0]
  425e1e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425e22:	inc    eax
  425e23:	jmp    0x425e0e
  425e25:	xor    eax,eax
  425e27:	mov    DWORD PTR [ebp-0x24],eax
  425e2a:	cmp    eax,0x100
  425e2f:	jge    0x425e41
  425e31:	mov    cl,BYTE PTR [eax+0x467600]
  425e37:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425e3e:	inc    eax
  425e3f:	jmp    0x425e27
  425e41:	mov    DWORD PTR ds:0x4674d8,esi
  425e47:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425e4b:	jne    0x425e61
  425e4d:	cmp    esi,DWORD PTR ds:0x4674d8
  425e53:	je     0x425e61
  425e55:	push   esi
  425e56:	call   0x425e9a
  425e5b:	pop    ecx
  425e5c:	jmp    0x425e61
  425e5e:	mov    DWORD PTR [ebp-0x1c],edi
  425e61:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e65:	call   0x425e73
  425e6a:	mov    eax,DWORD PTR [ebp-0x1c]
  425e6d:	call   0x4252cb
  425e72:	ret    
  425e73:	push   0xd
  425e75:	call   0x4253bb
  425e7a:	pop    ecx
  425e7b:	ret    
  425e7c:	cmp    DWORD PTR ds:0x46782c,0x0
  425e83:	jne    0x425e97
  425e85:	push   0xfffffffd
  425e87:	call   0x425d2c
  425e8c:	pop    ecx
  425e8d:	mov    DWORD PTR ds:0x46782c,0x1
  425e97:	xor    eax,eax
  425e99:	ret    
  425e9a:	push   0xc
  425e9c:	push   0x4295c0
  425ea1:	call   0x425290
  425ea6:	mov    esi,DWORD PTR [ebp+0x8]
  425ea9:	test   esi,esi
  425eab:	je     0x425f05
  425ead:	cmp    DWORD PTR ds:0x467704,0x3
  425eb4:	jne    0x425ef6
  425eb6:	push   0x4
  425eb8:	call   0x42544f
  425ebd:	pop    ecx
  425ebe:	and    DWORD PTR [ebp-0x4],0x0
  425ec2:	push   esi
  425ec3:	call   0x426672
  425ec8:	pop    ecx
  425ec9:	mov    DWORD PTR [ebp-0x1c],eax
  425ecc:	test   eax,eax
  425ece:	je     0x425ed9
  425ed0:	push   esi
  425ed1:	push   eax
  425ed2:	call   0x42669d
  425ed7:	pop    ecx
  425ed8:	pop    ecx
  425ed9:	or     DWORD PTR [ebp-0x4],0xffffffff
  425edd:	call   0x425eed
  425ee2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ee6:	jne    0x425f05
  425ee8:	push   DWORD PTR [ebp+0x8]
  425eeb:	jmp    0x425ef7
  425eed:	push   0x4
  425eef:	call   0x4253bb
  425ef4:	pop    ecx
  425ef5:	ret    
  425ef6:	push   esi
  425ef7:	push   0x0
  425ef9:	push   DWORD PTR ds:0x467700
  425eff:	call   DWORD PTR ds:0x429058
  425f05:	call   0x4252cb
  425f0a:	ret    
  425f0b:	push   0xc
  425f0d:	push   0x4295d0
  425f12:	call   0x425290
  425f17:	mov    esi,DWORD PTR [ebp+0x8]
  425f1a:	cmp    DWORD PTR ds:0x467704,0x3
  425f21:	jne    0x425f51
  425f23:	cmp    esi,DWORD PTR ds:0x4674c4
  425f29:	ja     0x425f51
  425f2b:	push   0x4
  425f2d:	call   0x42544f
  425f32:	pop    ecx
  425f33:	and    DWORD PTR [ebp-0x4],0x0
  425f37:	push   esi
  425f38:	call   0x426e51
  425f3d:	pop    ecx
  425f3e:	mov    DWORD PTR [ebp-0x1c],eax
  425f41:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f45:	call   0x425f7d
  425f4a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f4d:	test   eax,eax
  425f4f:	jne    0x425f74
  425f51:	test   esi,esi
  425f53:	jne    0x425f56
  425f55:	inc    esi
  425f56:	cmp    DWORD PTR ds:0x467704,0x1
  425f5d:	je     0x425f65
  425f5f:	add    esi,0xf
  425f62:	and    esi,0xfffffff0
  425f65:	push   esi
  425f66:	push   0x0
  425f68:	push   DWORD PTR ds:0x467700
  425f6e:	call   DWORD PTR ds:0x4290dc
  425f74:	call   0x4252cb
  425f79:	ret    
  425f7a:	mov    esi,DWORD PTR [ebp+0x8]
  425f7d:	push   0x4
  425f7f:	call   0x4253bb
  425f84:	pop    ecx
  425f85:	ret    
  425f86:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  425f8b:	ja     0x425faf
  425f8d:	push   DWORD PTR [esp+0x4]
  425f91:	call   0x425f0b
  425f96:	test   eax,eax
  425f98:	pop    ecx
  425f99:	jne    0x425fb1
  425f9b:	cmp    DWORD PTR [esp+0x8],eax
  425f9f:	je     0x425fb1
  425fa1:	push   DWORD PTR [esp+0x4]
  425fa5:	call   0x427b72
  425faa:	test   eax,eax
  425fac:	pop    ecx
  425fad:	jne    0x425f8d
  425faf:	xor    eax,eax
  425fb1:	ret    
  425fb2:	push   DWORD PTR ds:0x467388
  425fb8:	push   DWORD PTR [esp+0x8]
  425fbc:	call   0x425f86
  425fc1:	pop    ecx
  425fc2:	pop    ecx
  425fc3:	ret    
  425fc4:	int3   
  425fc5:	int3   
  425fc6:	int3   
  425fc7:	int3   
  425fc8:	int3   
  425fc9:	int3   
  425fca:	int3   
  425fcb:	int3   
  425fcc:	int3   
  425fcd:	int3   
  425fce:	int3   
  425fcf:	int3   
  425fd0:	push   ebp
  425fd1:	mov    ebp,esp
  425fd3:	push   edi
  425fd4:	push   esi
  425fd5:	mov    esi,DWORD PTR [ebp+0xc]
  425fd8:	mov    ecx,DWORD PTR [ebp+0x10]
  425fdb:	mov    edi,DWORD PTR [ebp+0x8]
  425fde:	mov    eax,ecx
  425fe0:	mov    edx,ecx
  425fe2:	add    eax,esi
  425fe4:	cmp    edi,esi
  425fe6:	jbe    0x425ff0
  425fe8:	cmp    edi,eax
  425fea:	jb     0x42616c
  425ff0:	test   edi,0x3
  425ff6:	jne    0x42600c
  425ff8:	shr    ecx,0x2
  425ffb:	and    edx,0x3
  425ffe:	cmp    ecx,0x8
  426001:	jb     0x42602c
  426003:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jmp    DWORD PTR [edx*4+0x42611c]
  42600c:	mov    eax,edi
  42600e:	mov    edx,0x3
  426013:	sub    ecx,0x4
  426016:	jb     0x426024
  426018:	and    eax,0x3
  42601b:	add    ecx,eax
  42601d:	jmp    DWORD PTR [eax*4+0x426030]
  426024:	jmp    DWORD PTR [ecx*4+0x42612c]
  42602b:	nop
  42602c:	jmp    DWORD PTR [ecx*4+0x4260b0]
  426033:	nop
  426034:	inc    eax
  426035:	pusha  
  426036:	inc    edx
  426037:	add    BYTE PTR [eax+eiz*2+0x42],ch
  42603b:	add    BYTE PTR [eax+0x23004260],dl
  426041:	ror    DWORD PTR [edx-0x75f877fa],1
  426047:	inc    esi
  426048:	add    DWORD PTR [eax+0x468a0147],ecx
  42604e:	add    al,cl
  426050:	jmp    0x289e857
  426055:	add    esi,0x3
  426058:	add    edi,0x3
  42605b:	cmp    ecx,0x8
  42605e:	jb     0x42602c
  426060:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426062:	jmp    DWORD PTR [edx*4+0x42611c]
  426069:	lea    ecx,[ecx+0x0]
  42606c:	and    edx,ecx
  42606e:	mov    al,BYTE PTR [esi]
  426070:	mov    BYTE PTR [edi],al
  426072:	mov    al,BYTE PTR [esi+0x1]
  426075:	shr    ecx,0x2
  426078:	mov    BYTE PTR [edi+0x1],al
  42607b:	add    esi,0x2
  42607e:	add    edi,0x2
  426081:	cmp    ecx,0x8
  426084:	jb     0x42602c
  426086:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426088:	jmp    DWORD PTR [edx*4+0x42611c]
  42608f:	nop
  426090:	and    edx,ecx
  426092:	mov    al,BYTE PTR [esi]
  426094:	mov    BYTE PTR [edi],al
  426096:	add    esi,0x1
  426099:	shr    ecx,0x2
  42609c:	add    edi,0x1
  42609f:	cmp    ecx,0x8
  4260a2:	jb     0x42602c
  4260a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260a6:	jmp    DWORD PTR [edx*4+0x42611c]
  4260ad:	lea    ecx,[ecx+0x0]
  4260b0:	adc    esp,DWORD PTR [ecx+0x42]
  4260b3:	add    BYTE PTR [eax],al
  4260b5:	popa   
  4260b6:	inc    edx
  4260b7:	add    al,bh
  4260b9:	pusha  
  4260ba:	inc    edx
  4260bb:	add    al,dh
  4260bd:	pusha  
  4260be:	inc    edx
  4260bf:	add    al,ch
  4260c1:	pusha  
  4260c2:	inc    edx
  4260c3:	add    al,ah
  4260c5:	pusha  
  4260c6:	inc    edx
  4260c7:	add    al,bl
  4260c9:	pusha  
  4260ca:	inc    edx
  4260cb:	add    al,dl
  4260cd:	pusha  
  4260ce:	inc    edx
  4260cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4260d5:	inc    esp
  4260d6:	(bad)  
  4260d7:	in     al,0x8b
  4260d9:	inc    esp
  4260da:	mov    gs,eax
  4260dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4260e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4260e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4260e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4260ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4260f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4260f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4260f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4260fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426100:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426104:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426108:	lea    eax,[ecx*4+0x0]
  42610f:	add    esi,eax
  426111:	add    edi,eax
  426113:	jmp    DWORD PTR [edx*4+0x42611c]
  42611a:	mov    edi,edi
  42611c:	sub    al,0x61
  42611e:	inc    edx
  42611f:	add    BYTE PTR [ecx+eiz*2],dh
  426122:	inc    edx
  426123:	add    BYTE PTR [eax+0x61],al
  426126:	inc    edx
  426127:	add    BYTE PTR [ecx+eiz*2+0x42],dl
  42612b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426131:	leave  
  426132:	ret    
  426133:	nop
  426134:	mov    al,BYTE PTR [esi]
  426136:	mov    BYTE PTR [edi],al
  426138:	mov    eax,DWORD PTR [ebp+0x8]
  42613b:	pop    esi
  42613c:	pop    edi
  42613d:	leave  
  42613e:	ret    
  42613f:	nop
  426140:	mov    al,BYTE PTR [esi]
  426142:	mov    BYTE PTR [edi],al
  426144:	mov    al,BYTE PTR [esi+0x1]
  426147:	mov    BYTE PTR [edi+0x1],al
  42614a:	mov    eax,DWORD PTR [ebp+0x8]
  42614d:	pop    esi
  42614e:	pop    edi
  42614f:	leave  
  426150:	ret    
  426151:	lea    ecx,[ecx+0x0]
  426154:	mov    al,BYTE PTR [esi]
  426156:	mov    BYTE PTR [edi],al
  426158:	mov    al,BYTE PTR [esi+0x1]
  42615b:	mov    BYTE PTR [edi+0x1],al
  42615e:	mov    al,BYTE PTR [esi+0x2]
  426161:	mov    BYTE PTR [edi+0x2],al
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	pop    esi
  426168:	pop    edi
  426169:	leave  
  42616a:	ret    
  42616b:	nop
  42616c:	lea    esi,[ecx+esi*1-0x4]
  426170:	lea    edi,[ecx+edi*1-0x4]
  426174:	test   edi,0x3
  42617a:	jne    0x4261a0
  42617c:	shr    ecx,0x2
  42617f:	and    edx,0x3
  426182:	cmp    ecx,0x8
  426185:	jb     0x426194
  426187:	std    
  426188:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618a:	cld    
  42618b:	jmp    DWORD PTR [edx*4+0x4262b8]
  426192:	mov    edi,edi
  426194:	neg    ecx
  426196:	jmp    DWORD PTR [ecx*4+0x426268]
  42619d:	lea    ecx,[ecx+0x0]
  4261a0:	mov    eax,edi
  4261a2:	mov    edx,0x3
  4261a7:	cmp    ecx,0x4
  4261aa:	jb     0x4261b8
  4261ac:	and    eax,0x3
  4261af:	sub    ecx,eax
  4261b1:	jmp    DWORD PTR [eax*4+0x4261bc]
  4261b8:	jmp    DWORD PTR [ecx*4+0x4262b8]
  4261bf:	nop
  4261c0:	int3   
  4261c1:	popa   
  4261c2:	inc    edx
  4261c3:	add    al,dh
  4261c5:	popa   
  4261c6:	inc    edx
  4261c7:	add    BYTE PTR [eax],bl
  4261c9:	bound  eax,QWORD PTR [edx+0x0]
  4261cc:	mov    al,BYTE PTR [esi+0x3]
  4261cf:	and    edx,ecx
  4261d1:	mov    BYTE PTR [edi+0x3],al
  4261d4:	sub    esi,0x1
  4261d7:	shr    ecx,0x2
  4261da:	sub    edi,0x1
  4261dd:	cmp    ecx,0x8
  4261e0:	jb     0x426194
  4261e2:	std    
  4261e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	cld    
  4261e6:	jmp    DWORD PTR [edx*4+0x4262b8]
  4261ed:	lea    ecx,[ecx+0x0]
  4261f0:	mov    al,BYTE PTR [esi+0x3]
  4261f3:	and    edx,ecx
  4261f5:	mov    BYTE PTR [edi+0x3],al
  4261f8:	mov    al,BYTE PTR [esi+0x2]
  4261fb:	shr    ecx,0x2
  4261fe:	mov    BYTE PTR [edi+0x2],al
  426201:	sub    esi,0x2
  426204:	sub    edi,0x2
  426207:	cmp    ecx,0x8
  42620a:	jb     0x426194
  42620c:	std    
  42620d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620f:	cld    
  426210:	jmp    DWORD PTR [edx*4+0x4262b8]
  426217:	nop
  426218:	mov    al,BYTE PTR [esi+0x3]
  42621b:	and    edx,ecx
  42621d:	mov    BYTE PTR [edi+0x3],al
  426220:	mov    al,BYTE PTR [esi+0x2]
  426223:	mov    BYTE PTR [edi+0x2],al
  426226:	mov    al,BYTE PTR [esi+0x1]
  426229:	shr    ecx,0x2
  42622c:	mov    BYTE PTR [edi+0x1],al
  42622f:	sub    esi,0x3
  426232:	sub    edi,0x3
  426235:	cmp    ecx,0x8
  426238:	jb     0x426194
  42623e:	std    
  42623f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426241:	cld    
  426242:	jmp    DWORD PTR [edx*4+0x4262b8]
  426249:	lea    ecx,[ecx+0x0]
  42624c:	ins    BYTE PTR es:[edi],dx
  42624d:	bound  eax,QWORD PTR [edx+0x0]
  426250:	je     0x4262b4
  426252:	inc    edx
  426253:	add    BYTE PTR [edx+eiz*2+0x42],bh
  426257:	add    BYTE PTR [edx+eiz*2+0x628c0042],al
  42625e:	inc    edx
  42625f:	add    BYTE PTR [edx+eiz*2+0x629c0042],dl
  426266:	inc    edx
  426267:	add    BYTE PTR [edi-0x74ffbd9e],ch
  42626d:	inc    esp
  42626e:	mov    ds,WORD PTR [ecx+ecx*4]
  426271:	inc    esp
  426272:	(bad)  
  426273:	sbb    al,0x8b
  426275:	inc    esp
  426276:	mov    ds,WORD PTR [eax]
  426278:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42627c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426280:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426284:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426288:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42628c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426290:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426294:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426298:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42629c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4262a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4262a4:	lea    eax,[ecx*4+0x0]
  4262ab:	add    esi,eax
  4262ad:	add    edi,eax
  4262af:	jmp    DWORD PTR [edx*4+0x4262b8]
  4262b6:	mov    edi,edi
  4262b8:	enter  0x4262,0x0
  4262bc:	shl    BYTE PTR [edx+0x42],1
  4262bf:	add    al,ah
  4262c1:	bound  eax,QWORD PTR [edx+0x0]
  4262c4:	hlt    
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	mov    eax,DWORD PTR [ebp+0x8]
  4262cb:	pop    esi
  4262cc:	pop    edi
  4262cd:	leave  
  4262ce:	ret    
  4262cf:	nop
  4262d0:	mov    al,BYTE PTR [esi+0x3]
  4262d3:	mov    BYTE PTR [edi+0x3],al
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	pop    esi
  4262da:	pop    edi
  4262db:	leave  
  4262dc:	ret    
  4262dd:	lea    ecx,[ecx+0x0]
  4262e0:	mov    al,BYTE PTR [esi+0x3]
  4262e3:	mov    BYTE PTR [edi+0x3],al
  4262e6:	mov    al,BYTE PTR [esi+0x2]
  4262e9:	mov    BYTE PTR [edi+0x2],al
  4262ec:	mov    eax,DWORD PTR [ebp+0x8]
  4262ef:	pop    esi
  4262f0:	pop    edi
  4262f1:	leave  
  4262f2:	ret    
  4262f3:	nop
  4262f4:	mov    al,BYTE PTR [esi+0x3]
  4262f7:	mov    BYTE PTR [edi+0x3],al
  4262fa:	mov    al,BYTE PTR [esi+0x2]
  4262fd:	mov    BYTE PTR [edi+0x2],al
  426300:	mov    al,BYTE PTR [esi+0x1]
  426303:	mov    BYTE PTR [edi+0x1],al
  426306:	mov    eax,DWORD PTR [ebp+0x8]
  426309:	pop    esi
  42630a:	pop    edi
  42630b:	leave  
  42630c:	ret    
  42630d:	push   DWORD PTR [esp+0x4]
  426311:	call   DWORD PTR ds:0x4290e0
  426317:	xor    eax,eax
  426319:	inc    eax
  42631a:	ret    0x8
  42631d:	push   0x10
  42631f:	push   0x429618
  426324:	call   0x425290
  426329:	mov    eax,ds:0x467348
  42632e:	test   eax,eax
  426330:	jne    0x426369
  426332:	cmp    DWORD PTR ds:0x467084,0x1
  426339:	je     0x42635f
  42633b:	push   0x429604
  426340:	call   DWORD PTR ds:0x429044
  426346:	test   eax,eax
  426348:	je     0x42635f
  42634a:	push   0x4295dc
  42634f:	push   eax
  426350:	call   DWORD PTR ds:0x429048
  426356:	mov    ds:0x467348,eax
  42635b:	test   eax,eax
  42635d:	jne    0x426369
  42635f:	mov    eax,0x42630d
  426364:	mov    ds:0x467348,eax
  426369:	and    DWORD PTR [ebp-0x4],0x0
  42636d:	push   DWORD PTR [ebp+0xc]
  426370:	push   DWORD PTR [ebp+0x8]
  426373:	call   eax
  426375:	mov    DWORD PTR [ebp-0x1c],eax
  426378:	jmp    0x42639e
  42637a:	mov    eax,DWORD PTR [ebp-0x14]
  42637d:	mov    eax,DWORD PTR [eax]
  42637f:	mov    eax,DWORD PTR [eax]
  426381:	mov    DWORD PTR [ebp-0x20],eax
  426384:	xor    eax,eax
  426386:	inc    eax
  426387:	ret    
  426388:	mov    esp,DWORD PTR [ebp-0x18]
  42638b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426392:	jne    0x42639c
  426394:	push   0x8
  426396:	call   DWORD PTR ds:0x4290b0
  42639c:	xor    eax,eax
  42639e:	or     DWORD PTR [ebp-0x4],0xffffffff
  4263a2:	call   0x4252cb
  4263a7:	ret    
  4263a8:	push   0x10
  4263aa:	push   0x429628
  4263af:	call   0x425290
  4263b4:	mov    esi,DWORD PTR [ebp+0x8]
  4263b7:	imul   esi,DWORD PTR [ebp+0xc]
  4263bb:	mov    DWORD PTR [ebp-0x1c],esi
  4263be:	test   esi,esi
  4263c0:	jne    0x4263c3
  4263c2:	inc    esi
  4263c3:	xor    edi,edi
  4263c5:	mov    DWORD PTR [ebp-0x20],edi
  4263c8:	cmp    esi,0xffffffe0
  4263cb:	ja     0x426432
  4263cd:	cmp    DWORD PTR ds:0x467704,0x3
  4263d4:	jne    0x42641d
  4263d6:	add    esi,0xf
  4263d9:	and    esi,0xfffffff0
  4263dc:	mov    DWORD PTR [ebp+0xc],esi
  4263df:	mov    ebx,DWORD PTR [ebp-0x1c]
  4263e2:	cmp    ebx,DWORD PTR ds:0x4674c4
  4263e8:	ja     0x42641d
  4263ea:	push   0x4
  4263ec:	call   0x42544f
  4263f1:	pop    ecx
  4263f2:	and    DWORD PTR [ebp-0x4],edi
  4263f5:	push   ebx
  4263f6:	call   0x426e51
  4263fb:	pop    ecx
  4263fc:	mov    DWORD PTR [ebp-0x20],eax
  4263ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  426403:	call   0x426452
  426408:	mov    edi,DWORD PTR [ebp-0x20]
  42640b:	test   edi,edi
  42640d:	je     0x426421
  42640f:	push   DWORD PTR [ebp-0x1c]
  426412:	push   0x0
  426414:	push   edi
  426415:	call   0x427b90
  42641a:	add    esp,0xc
  42641d:	test   edi,edi
  42641f:	jne    0x42645b
  426421:	push   esi
  426422:	push   0x8
  426424:	push   DWORD PTR ds:0x467700
  42642a:	call   DWORD PTR ds:0x4290dc
  426430:	mov    edi,eax
  426432:	test   edi,edi
  426434:	jne    0x42645b
  426436:	cmp    DWORD PTR ds:0x467388,edi
  42643c:	je     0x42645b
  42643e:	push   esi
  42643f:	call   0x427b72
  426444:	pop    ecx
  426445:	test   eax,eax
  426447:	jne    0x4263c3
  42644d:	jmp    0x42645d
  42644f:	mov    esi,DWORD PTR [ebp+0xc]
  426452:	push   0x4
  426454:	call   0x4253bb
  426459:	pop    ecx
  42645a:	ret    
  42645b:	mov    eax,edi
  42645d:	call   0x4252cb
  426462:	ret    
  426463:	push   esi
  426464:	mov    esi,DWORD PTR [esp+0x8]
  426468:	mov    eax,DWORD PTR [esi+0x3c]
  42646b:	push   edi
  42646c:	xor    edi,edi
  42646e:	cmp    eax,DWORD PTR ds:0x467394
  426474:	je     0x4264d9
  426476:	cmp    eax,edi
  426478:	je     0x4264d9
  42647a:	mov    eax,DWORD PTR [esi+0x2c]
  42647d:	cmp    DWORD PTR [eax],edi
  42647f:	jne    0x4264d9
  426481:	mov    eax,DWORD PTR [esi+0x34]
  426484:	cmp    eax,edi
  426486:	je     0x4264a4
  426488:	cmp    DWORD PTR [eax],edi
  42648a:	jne    0x4264a4
  42648c:	cmp    eax,DWORD PTR ds:0x4674b0
  426492:	je     0x4264a4
  426494:	push   eax
  426495:	call   0x425e9a
  42649a:	push   DWORD PTR [esi+0x3c]
  42649d:	call   0x427ddf
  4264a2:	pop    ecx
  4264a3:	pop    ecx
  4264a4:	mov    eax,DWORD PTR [esi+0x30]
  4264a7:	cmp    eax,edi
  4264a9:	je     0x4264c7
  4264ab:	cmp    DWORD PTR [eax],edi
  4264ad:	jne    0x4264c7
  4264af:	cmp    eax,DWORD PTR ds:0x4674b4
  4264b5:	je     0x4264c7
  4264b7:	push   eax
  4264b8:	call   0x425e9a
  4264bd:	push   DWORD PTR [esi+0x3c]
  4264c0:	call   0x427d80
  4264c5:	pop    ecx
  4264c6:	pop    ecx
  4264c7:	push   DWORD PTR [esi+0x2c]
  4264ca:	call   0x425e9a
  4264cf:	push   DWORD PTR [esi+0x3c]
  4264d2:	call   0x425e9a
  4264d7:	pop    ecx
  4264d8:	pop    ecx
  4264d9:	mov    eax,DWORD PTR [esi+0x40]
  4264dc:	cmp    eax,DWORD PTR ds:0x4674ac
  4264e2:	je     0x4264fc
  4264e4:	cmp    eax,edi
  4264e6:	je     0x4264fc
  4264e8:	cmp    DWORD PTR [eax],edi
  4264ea:	jne    0x4264fc
  4264ec:	push   eax
  4264ed:	call   0x425e9a
  4264f2:	push   DWORD PTR [esi+0x44]
  4264f5:	call   0x425e9a
  4264fa:	pop    ecx
  4264fb:	pop    ecx
  4264fc:	mov    eax,DWORD PTR [esi+0x50]
  4264ff:	cmp    eax,DWORD PTR ds:0x467390
  426505:	je     0x426523
  426507:	cmp    eax,edi
  426509:	je     0x426523
  42650b:	cmp    DWORD PTR [eax+0xb4],edi
  426511:	jne    0x426523
  426513:	push   eax
  426514:	call   0x427bf0
  426519:	push   DWORD PTR [esi+0x50]
  42651c:	call   0x425e9a
  426521:	pop    ecx
  426522:	pop    ecx
  426523:	push   esi
  426524:	call   0x425e9a
  426529:	pop    ecx
  42652a:	pop    edi
  42652b:	pop    esi
  42652c:	ret    
  42652d:	push   esi
  42652e:	call   0x425145
  426533:	mov    esi,eax
  426535:	mov    eax,DWORD PTR [esi+0x64]
  426538:	cmp    eax,DWORD PTR ds:0x466b4c
  42653e:	je     0x4265ea
  426544:	test   eax,eax
  426546:	je     0x426577
  426548:	mov    ecx,DWORD PTR [eax+0x2c]
  42654b:	dec    DWORD PTR [eax]
  42654d:	test   ecx,ecx
  42654f:	je     0x426553
  426551:	dec    DWORD PTR [ecx]
  426553:	mov    ecx,DWORD PTR [eax+0x34]
  426556:	test   ecx,ecx
  426558:	je     0x42655c
  42655a:	dec    DWORD PTR [ecx]
  42655c:	mov    ecx,DWORD PTR [eax+0x30]
  42655f:	test   ecx,ecx
  426561:	je     0x426565
  426563:	dec    DWORD PTR [ecx]
  426565:	mov    ecx,DWORD PTR [eax+0x40]
  426568:	test   ecx,ecx
  42656a:	je     0x42656e
  42656c:	dec    DWORD PTR [ecx]
  42656e:	mov    ecx,DWORD PTR [eax+0x4c]
  426571:	dec    DWORD PTR [ecx+0xb4]
  426577:	mov    ecx,DWORD PTR ds:0x466b4c
  42657d:	mov    DWORD PTR [esi+0x64],ecx
  426580:	mov    ecx,DWORD PTR ds:0x466b4c
  426586:	inc    DWORD PTR [ecx]
  426588:	mov    ecx,DWORD PTR ds:0x466b4c
  42658e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426591:	test   ecx,ecx
  426593:	je     0x426597
  426595:	inc    DWORD PTR [ecx]
  426597:	mov    ecx,DWORD PTR ds:0x466b4c
  42659d:	mov    ecx,DWORD PTR [ecx+0x34]
  4265a0:	test   ecx,ecx
  4265a2:	je     0x4265a6
  4265a4:	inc    DWORD PTR [ecx]
  4265a6:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ac:	mov    ecx,DWORD PTR [ecx+0x30]
  4265af:	test   ecx,ecx
  4265b1:	je     0x4265b5
  4265b3:	inc    DWORD PTR [ecx]
  4265b5:	mov    ecx,DWORD PTR ds:0x466b4c
  4265bb:	mov    ecx,DWORD PTR [ecx+0x40]
  4265be:	test   ecx,ecx
  4265c0:	je     0x4265c4
  4265c2:	inc    DWORD PTR [ecx]
  4265c4:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ca:	mov    ecx,DWORD PTR [ecx+0x4c]
  4265cd:	inc    DWORD PTR [ecx+0xb4]
  4265d3:	test   eax,eax
  4265d5:	je     0x4265ea
  4265d7:	cmp    DWORD PTR [eax],0x0
  4265da:	jne    0x4265ea
  4265dc:	cmp    eax,0x466af8
  4265e1:	je     0x4265ea
  4265e3:	push   eax
  4265e4:	call   0x426463
  4265e9:	pop    ecx
  4265ea:	mov    eax,DWORD PTR [esi+0x64]
  4265ed:	pop    esi
  4265ee:	ret    
  4265ef:	push   0xc
  4265f1:	push   0x4297b8
  4265f6:	call   0x425290
  4265fb:	push   0xc
  4265fd:	call   0x42544f
  426602:	pop    ecx
  426603:	and    DWORD PTR [ebp-0x4],0x0
  426607:	call   0x42652d
  42660c:	mov    DWORD PTR [ebp-0x1c],eax
  42660f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426613:	call   0x426621
  426618:	mov    eax,DWORD PTR [ebp-0x1c]
  42661b:	call   0x4252cb
  426620:	ret    
  426621:	push   0xc
  426623:	call   0x4253bb
  426628:	pop    ecx
  426629:	ret    
  42662a:	push   0x140
  42662f:	push   0x0
  426631:	push   DWORD PTR ds:0x467700
  426637:	call   DWORD PTR ds:0x4290dc
  42663d:	test   eax,eax
  42663f:	mov    ds:0x4674c0,eax
  426644:	jne    0x426647
  426646:	ret    
  426647:	mov    ecx,DWORD PTR [esp+0x4]
  42664b:	and    DWORD PTR ds:0x4674b8,0x0
  426652:	and    DWORD PTR ds:0x4674bc,0x0
  426659:	mov    ds:0x4674c8,eax
  42665e:	xor    eax,eax
  426660:	mov    DWORD PTR ds:0x4674c4,ecx
  426666:	mov    DWORD PTR ds:0x4674cc,0x10
  426670:	inc    eax
  426671:	ret    
  426672:	mov    eax,ds:0x4674bc
  426677:	lea    ecx,[eax+eax*4]
  42667a:	mov    eax,ds:0x4674c0
  42667f:	lea    ecx,[eax+ecx*4]
  426682:	jmp    0x426696
  426684:	mov    edx,DWORD PTR [esp+0x4]
  426688:	sub    edx,DWORD PTR [eax+0xc]
  42668b:	cmp    edx,0x100000
  426691:	jb     0x42669c
  426693:	add    eax,0x14
  426696:	cmp    eax,ecx
  426698:	jb     0x426684
  42669a:	xor    eax,eax
  42669c:	ret    
  42669d:	push   ebp
  42669e:	mov    ebp,esp
  4266a0:	sub    esp,0x10
  4266a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4266a6:	mov    eax,DWORD PTR [ecx+0x10]
  4266a9:	push   esi
  4266aa:	mov    esi,DWORD PTR [ebp+0xc]
  4266ad:	push   edi
  4266ae:	mov    edi,esi
  4266b0:	sub    edi,DWORD PTR [ecx+0xc]
  4266b3:	add    esi,0xfffffffc
  4266b6:	shr    edi,0xf
  4266b9:	mov    ecx,edi
  4266bb:	imul   ecx,ecx,0x204
  4266c1:	lea    ecx,[ecx+eax*1+0x144]
  4266c8:	mov    DWORD PTR [ebp-0x10],ecx
  4266cb:	mov    ecx,DWORD PTR [esi]
  4266cd:	dec    ecx
  4266ce:	test   cl,0x1
  4266d1:	mov    DWORD PTR [ebp-0x4],ecx
  4266d4:	jne    0x4269b1
  4266da:	push   ebx
  4266db:	lea    ebx,[ecx+esi*1]
  4266de:	mov    edx,DWORD PTR [ebx]
  4266e0:	mov    DWORD PTR [ebp-0xc],edx
  4266e3:	mov    edx,DWORD PTR [esi-0x4]
  4266e6:	mov    DWORD PTR [ebp-0x8],edx
  4266e9:	mov    edx,DWORD PTR [ebp-0xc]
  4266ec:	test   dl,0x1
  4266ef:	mov    DWORD PTR [ebp+0xc],ebx
  4266f2:	jne    0x426768
  4266f4:	sar    edx,0x4
  4266f7:	dec    edx
  4266f8:	cmp    edx,0x3f
  4266fb:	jbe    0x426700
  4266fd:	push   0x3f
  4266ff:	pop    edx
  426700:	mov    ecx,DWORD PTR [ebx+0x4]
  426703:	cmp    ecx,DWORD PTR [ebx+0x8]
  426706:	jne    0x42674a
  426708:	cmp    edx,0x20
  42670b:	mov    ebx,0x80000000
  426710:	jae    0x42672b
  426712:	mov    ecx,edx
  426714:	shr    ebx,cl
  426716:	lea    ecx,[edx+eax*1+0x4]
  42671a:	not    ebx
  42671c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  426720:	dec    BYTE PTR [ecx]
  426722:	jne    0x426747
  426724:	mov    ecx,DWORD PTR [ebp+0x8]
  426727:	and    DWORD PTR [ecx],ebx
  426729:	jmp    0x426747
  42672b:	lea    ecx,[edx-0x20]
  42672e:	shr    ebx,cl
  426730:	lea    ecx,[edx+eax*1+0x4]
  426734:	not    ebx
  426736:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  42673d:	dec    BYTE PTR [ecx]
  42673f:	jne    0x426747
  426741:	mov    ecx,DWORD PTR [ebp+0x8]
  426744:	and    DWORD PTR [ecx+0x4],ebx
  426747:	mov    ebx,DWORD PTR [ebp+0xc]
  42674a:	mov    edx,DWORD PTR [ebx+0x8]
  42674d:	mov    ebx,DWORD PTR [ebx+0x4]
  426750:	mov    ecx,DWORD PTR [ebp-0x4]
  426753:	add    ecx,DWORD PTR [ebp-0xc]
  426756:	mov    DWORD PTR [edx+0x4],ebx
  426759:	mov    edx,DWORD PTR [ebp+0xc]
  42675c:	mov    ebx,DWORD PTR [edx+0x4]
  42675f:	mov    edx,DWORD PTR [edx+0x8]
  426762:	mov    DWORD PTR [ebx+0x8],edx
  426765:	mov    DWORD PTR [ebp-0x4],ecx
  426768:	mov    edx,ecx
  42676a:	sar    edx,0x4
  42676d:	dec    edx
  42676e:	cmp    edx,0x3f
  426771:	jbe    0x426776
  426773:	push   0x3f
  426775:	pop    edx
  426776:	mov    ebx,DWORD PTR [ebp-0x8]
  426779:	and    ebx,0x1
  42677c:	mov    DWORD PTR [ebp-0xc],ebx
  42677f:	jne    0x426814
  426785:	sub    esi,DWORD PTR [ebp-0x8]
  426788:	mov    ebx,DWORD PTR [ebp-0x8]
  42678b:	sar    ebx,0x4
  42678e:	push   0x3f
  426790:	mov    DWORD PTR [ebp+0xc],esi
  426793:	dec    ebx
  426794:	pop    esi
  426795:	cmp    ebx,esi
  426797:	jbe    0x42679b
  426799:	mov    ebx,esi
  42679b:	add    ecx,DWORD PTR [ebp-0x8]
  42679e:	mov    edx,ecx
  4267a0:	sar    edx,0x4
  4267a3:	dec    edx
  4267a4:	cmp    edx,esi
  4267a6:	mov    DWORD PTR [ebp-0x4],ecx
  4267a9:	jbe    0x4267ad
  4267ab:	mov    edx,esi
  4267ad:	cmp    ebx,edx
  4267af:	je     0x42680f
  4267b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4267b4:	mov    esi,DWORD PTR [ecx+0x4]
  4267b7:	cmp    esi,DWORD PTR [ecx+0x8]
  4267ba:	jne    0x4267f7
  4267bc:	cmp    ebx,0x20
  4267bf:	mov    esi,0x80000000
  4267c4:	jae    0x4267dd
  4267c6:	mov    ecx,ebx
  4267c8:	shr    esi,cl
  4267ca:	not    esi
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],esi
  4267d0:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267d4:	jne    0x4267f7
  4267d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d9:	and    DWORD PTR [ecx],esi
  4267db:	jmp    0x4267f7
  4267dd:	lea    ecx,[ebx-0x20]
  4267e0:	shr    esi,cl
  4267e2:	not    esi
  4267e4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4267eb:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],esi
  4267f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4267fa:	mov    esi,DWORD PTR [ecx+0x8]
  4267fd:	mov    ecx,DWORD PTR [ecx+0x4]
  426800:	mov    DWORD PTR [esi+0x4],ecx
  426803:	mov    ecx,DWORD PTR [ebp+0xc]
  426806:	mov    esi,DWORD PTR [ecx+0x4]
  426809:	mov    ecx,DWORD PTR [ecx+0x8]
  42680c:	mov    DWORD PTR [esi+0x8],ecx
  42680f:	mov    esi,DWORD PTR [ebp+0xc]
  426812:	jmp    0x426817
  426814:	mov    ebx,DWORD PTR [ebp+0x8]
  426817:	cmp    DWORD PTR [ebp-0xc],0x0
  42681b:	jne    0x426825
  42681d:	cmp    ebx,edx
  42681f:	je     0x4268a5
  426825:	mov    ecx,DWORD PTR [ebp-0x10]
  426828:	lea    ecx,[ecx+edx*8]
  42682b:	mov    ebx,DWORD PTR [ecx+0x4]
  42682e:	mov    DWORD PTR [esi+0x8],ecx
  426831:	mov    DWORD PTR [esi+0x4],ebx
  426834:	mov    DWORD PTR [ecx+0x4],esi
  426837:	mov    ecx,DWORD PTR [esi+0x4]
  42683a:	mov    DWORD PTR [ecx+0x8],esi
  42683d:	mov    ecx,DWORD PTR [esi+0x4]
  426840:	cmp    ecx,DWORD PTR [esi+0x8]
  426843:	jne    0x4268a5
  426845:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426849:	mov    BYTE PTR [ebp+0xf],cl
  42684c:	inc    cl
  42684e:	cmp    edx,0x20
  426851:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426855:	jae    0x42687c
  426857:	cmp    BYTE PTR [ebp+0xf],0x0
  42685b:	jne    0x42686b
  42685d:	mov    ecx,edx
  42685f:	mov    ebx,0x80000000
  426864:	shr    ebx,cl
  426866:	mov    ecx,DWORD PTR [ebp+0x8]
  426869:	or     DWORD PTR [ecx],ebx
  42686b:	mov    ebx,0x80000000
  426870:	mov    ecx,edx
  426872:	shr    ebx,cl
  426874:	lea    eax,[eax+edi*4+0x44]
  426878:	or     DWORD PTR [eax],ebx
  42687a:	jmp    0x4268a5
  42687c:	cmp    BYTE PTR [ebp+0xf],0x0
  426880:	jne    0x426892
  426882:	lea    ecx,[edx-0x20]
  426885:	mov    ebx,0x80000000
  42688a:	shr    ebx,cl
  42688c:	mov    ecx,DWORD PTR [ebp+0x8]
  42688f:	or     DWORD PTR [ecx+0x4],ebx
  426892:	lea    ecx,[edx-0x20]
  426895:	mov    edx,0x80000000
  42689a:	shr    edx,cl
  42689c:	lea    eax,[eax+edi*4+0xc4]
  4268a3:	or     DWORD PTR [eax],edx
  4268a5:	mov    eax,DWORD PTR [ebp-0x4]
  4268a8:	mov    DWORD PTR [esi],eax
  4268aa:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4268ae:	mov    eax,DWORD PTR [ebp-0x10]
  4268b1:	dec    DWORD PTR [eax]
  4268b3:	jne    0x4269b0
  4268b9:	mov    eax,ds:0x4674b8
  4268be:	test   eax,eax
  4268c0:	je     0x4269a2
  4268c6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268cc:	mov    esi,DWORD PTR ds:0x42904c
  4268d2:	push   0x4000
  4268d7:	shl    ecx,0xf
  4268da:	add    ecx,DWORD PTR [eax+0xc]
  4268dd:	mov    ebx,0x8000
  4268e2:	push   ebx
  4268e3:	push   ecx
  4268e4:	call   esi
  4268e6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268ec:	mov    eax,ds:0x4674b8
  4268f1:	mov    edx,0x80000000
  4268f6:	shr    edx,cl
  4268f8:	or     DWORD PTR [eax+0x8],edx
  4268fb:	mov    eax,ds:0x4674b8
  426900:	mov    eax,DWORD PTR [eax+0x10]
  426903:	mov    ecx,DWORD PTR ds:0x4674d0
  426909:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426911:	mov    eax,ds:0x4674b8
  426916:	mov    eax,DWORD PTR [eax+0x10]
  426919:	dec    BYTE PTR [eax+0x43]
  42691c:	mov    eax,ds:0x4674b8
  426921:	mov    ecx,DWORD PTR [eax+0x10]
  426924:	cmp    BYTE PTR [ecx+0x43],0x0
  426928:	jne    0x426933
  42692a:	and    DWORD PTR [eax+0x4],0xfffffffe
  42692e:	mov    eax,ds:0x4674b8
  426933:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426937:	jne    0x4269a2
  426939:	push   ebx
  42693a:	push   0x0
  42693c:	push   DWORD PTR [eax+0xc]
  42693f:	call   esi
  426941:	mov    eax,ds:0x4674b8
  426946:	push   DWORD PTR [eax+0x10]
  426949:	push   0x0
  42694b:	push   DWORD PTR ds:0x467700
  426951:	call   DWORD PTR ds:0x429058
  426957:	mov    eax,ds:0x4674bc
  42695c:	mov    edx,DWORD PTR ds:0x4674c0
  426962:	lea    eax,[eax+eax*4]
  426965:	shl    eax,0x2
  426968:	mov    ecx,eax
  42696a:	mov    eax,ds:0x4674b8
  42696f:	sub    ecx,eax
  426971:	lea    ecx,[ecx+edx*1-0x14]
  426975:	push   ecx
  426976:	lea    ecx,[eax+0x14]
  426979:	push   ecx
  42697a:	push   eax
  42697b:	call   0x4281d0
  426980:	mov    eax,DWORD PTR [ebp+0x8]
  426983:	add    esp,0xc
  426986:	dec    DWORD PTR ds:0x4674bc
  42698c:	cmp    eax,DWORD PTR ds:0x4674b8
  426992:	jbe    0x426998
  426994:	sub    DWORD PTR [ebp+0x8],0x14
  426998:	mov    eax,ds:0x4674c0
  42699d:	mov    ds:0x4674c8,eax
  4269a2:	mov    eax,DWORD PTR [ebp+0x8]
  4269a5:	mov    ds:0x4674b8,eax
  4269aa:	mov    DWORD PTR ds:0x4674d0,edi
  4269b0:	pop    ebx
  4269b1:	pop    edi
  4269b2:	pop    esi
  4269b3:	leave  
  4269b4:	ret    
  4269b5:	mov    eax,ds:0x4674bc
  4269ba:	mov    ecx,DWORD PTR ds:0x4674cc
  4269c0:	push   edi
  4269c1:	xor    edi,edi
  4269c3:	cmp    eax,ecx
  4269c5:	jne    0x4269fb
  4269c7:	lea    eax,[ecx+ecx*4+0x50]
  4269cb:	shl    eax,0x2
  4269ce:	push   eax
  4269cf:	push   DWORD PTR ds:0x4674c0
  4269d5:	push   edi
  4269d6:	push   DWORD PTR ds:0x467700
  4269dc:	call   DWORD PTR ds:0x4290e8
  4269e2:	cmp    eax,edi
  4269e4:	jne    0x4269ea
  4269e6:	xor    eax,eax
  4269e8:	pop    edi
  4269e9:	ret    
  4269ea:	add    DWORD PTR ds:0x4674cc,0x10
  4269f1:	mov    ds:0x4674c0,eax
  4269f6:	mov    eax,ds:0x4674bc
  4269fb:	mov    ecx,DWORD PTR ds:0x4674c0
  426a01:	push   esi
  426a02:	push   0x41c4
  426a07:	push   0x8
  426a09:	push   DWORD PTR ds:0x467700
  426a0f:	lea    eax,[eax+eax*4]
  426a12:	lea    esi,[ecx+eax*4]
  426a15:	call   DWORD PTR ds:0x4290dc
  426a1b:	cmp    eax,edi
  426a1d:	mov    DWORD PTR [esi+0x10],eax
  426a20:	jne    0x426a26
  426a22:	xor    eax,eax
  426a24:	jmp    0x426a69
  426a26:	push   0x4
  426a28:	push   0x2000
  426a2d:	push   0x100000
  426a32:	push   edi
  426a33:	call   DWORD PTR ds:0x4290e4
  426a39:	cmp    eax,edi
  426a3b:	mov    DWORD PTR [esi+0xc],eax
  426a3e:	jne    0x426a52
  426a40:	push   DWORD PTR [esi+0x10]
  426a43:	push   edi
  426a44:	push   DWORD PTR ds:0x467700
  426a4a:	call   DWORD PTR ds:0x429058
  426a50:	jmp    0x426a22
  426a52:	or     DWORD PTR [esi+0x8],0xffffffff
  426a56:	mov    DWORD PTR [esi],edi
  426a58:	mov    DWORD PTR [esi+0x4],edi
  426a5b:	inc    DWORD PTR ds:0x4674bc
  426a61:	mov    eax,DWORD PTR [esi+0x10]
  426a64:	or     DWORD PTR [eax],0xffffffff
  426a67:	mov    eax,esi
  426a69:	pop    esi
  426a6a:	pop    edi
  426a6b:	ret    
  426a6c:	push   ebp
  426a6d:	mov    ebp,esp
  426a6f:	push   ecx
  426a70:	push   ecx
  426a71:	mov    ecx,DWORD PTR [ebp+0x8]
  426a74:	mov    eax,DWORD PTR [ecx+0x8]
  426a77:	push   ebx
  426a78:	push   esi
  426a79:	mov    esi,DWORD PTR [ecx+0x10]
  426a7c:	push   edi
  426a7d:	xor    ebx,ebx
  426a7f:	jmp    0x426a84
  426a81:	shl    eax,1
  426a83:	inc    ebx
  426a84:	test   eax,eax
  426a86:	jge    0x426a81
  426a88:	mov    eax,ebx
  426a8a:	imul   eax,eax,0x204
  426a90:	lea    eax,[eax+esi*1+0x144]
  426a97:	push   0x3f
  426a99:	mov    DWORD PTR [ebp-0x8],eax
  426a9c:	pop    edx
  426a9d:	mov    DWORD PTR [eax+0x8],eax
  426aa0:	mov    DWORD PTR [eax+0x4],eax
  426aa3:	add    eax,0x8
  426aa6:	dec    edx
  426aa7:	jne    0x426a9d
  426aa9:	push   0x4
  426aab:	mov    edi,ebx
  426aad:	push   0x1000
  426ab2:	shl    edi,0xf
  426ab5:	add    edi,DWORD PTR [ecx+0xc]
  426ab8:	push   0x8000
  426abd:	push   edi
  426abe:	call   DWORD PTR ds:0x4290e4
  426ac4:	test   eax,eax
  426ac6:	jne    0x426ad0
  426ac8:	or     eax,0xffffffff
  426acb:	jmp    0x426b6d
  426ad0:	lea    edx,[edi+0x7000]
  426ad6:	cmp    edi,edx
  426ad8:	mov    DWORD PTR [ebp-0x4],edx
  426adb:	ja     0x426b20
  426add:	mov    ecx,edx
  426adf:	sub    ecx,edi
  426ae1:	shr    ecx,0xc
  426ae4:	lea    eax,[edi+0x10]
  426ae7:	inc    ecx
  426ae8:	or     DWORD PTR [eax-0x8],0xffffffff
  426aec:	or     DWORD PTR [eax+0xfec],0xffffffff
  426af3:	lea    edx,[eax+0xffc]
  426af9:	mov    DWORD PTR [eax],edx
  426afb:	lea    edx,[eax-0x1004]
  426b01:	mov    DWORD PTR [eax-0x4],0xff0
  426b08:	mov    DWORD PTR [eax+0x4],edx
  426b0b:	mov    DWORD PTR [eax+0xfe8],0xff0
  426b15:	add    eax,0x1000
  426b1a:	dec    ecx
  426b1b:	jne    0x426ae8
  426b1d:	mov    edx,DWORD PTR [ebp-0x4]
  426b20:	mov    eax,DWORD PTR [ebp-0x8]
  426b23:	add    eax,0x1f8
  426b28:	lea    ecx,[edi+0xc]
  426b2b:	mov    DWORD PTR [eax+0x4],ecx
  426b2e:	mov    DWORD PTR [ecx+0x8],eax
  426b31:	lea    ecx,[edx+0xc]
  426b34:	mov    DWORD PTR [eax+0x8],ecx
  426b37:	mov    DWORD PTR [ecx+0x4],eax
  426b3a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426b3f:	xor    edi,edi
  426b41:	inc    edi
  426b42:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426b49:	mov    al,BYTE PTR [esi+0x43]
  426b4c:	mov    cl,al
  426b4e:	inc    cl
  426b50:	test   al,al
  426b52:	mov    eax,DWORD PTR [ebp+0x8]
  426b55:	mov    BYTE PTR [esi+0x43],cl
  426b58:	jne    0x426b5d
  426b5a:	or     DWORD PTR [eax+0x4],edi
  426b5d:	mov    edx,0x80000000
  426b62:	mov    ecx,ebx
  426b64:	shr    edx,cl
  426b66:	not    edx
  426b68:	and    DWORD PTR [eax+0x8],edx
  426b6b:	mov    eax,ebx
  426b6d:	pop    edi
  426b6e:	pop    esi
  426b6f:	pop    ebx
  426b70:	leave  
  426b71:	ret    
  426b72:	push   ebp
  426b73:	mov    ebp,esp
  426b75:	sub    esp,0xc
  426b78:	mov    ecx,DWORD PTR [ebp+0x8]
  426b7b:	mov    eax,DWORD PTR [ecx+0x10]
  426b7e:	push   ebx
  426b7f:	push   esi
  426b80:	mov    esi,DWORD PTR [ebp+0x10]
  426b83:	push   edi
  426b84:	mov    edi,DWORD PTR [ebp+0xc]
  426b87:	mov    edx,edi
  426b89:	sub    edx,DWORD PTR [ecx+0xc]
  426b8c:	add    esi,0x17
  426b8f:	shr    edx,0xf
  426b92:	mov    ecx,edx
  426b94:	imul   ecx,ecx,0x204
  426b9a:	lea    ecx,[ecx+eax*1+0x144]
  426ba1:	mov    DWORD PTR [ebp-0xc],ecx
  426ba4:	mov    ecx,DWORD PTR [edi-0x4]
  426ba7:	and    esi,0xfffffff0
  426baa:	dec    ecx
  426bab:	cmp    esi,ecx
  426bad:	lea    edi,[ecx+edi*1-0x4]
  426bb1:	mov    ebx,DWORD PTR [edi]
  426bb3:	mov    DWORD PTR [ebp+0x10],ecx
  426bb6:	mov    DWORD PTR [ebp-0x4],ebx
  426bb9:	jle    0x426d14
  426bbf:	test   bl,0x1
  426bc2:	jne    0x426d0d
  426bc8:	add    ebx,ecx
  426bca:	cmp    esi,ebx
  426bcc:	jg     0x426d0d
  426bd2:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd5:	sar    ecx,0x4
  426bd8:	dec    ecx
  426bd9:	cmp    ecx,0x3f
  426bdc:	mov    DWORD PTR [ebp-0x8],ecx
  426bdf:	jbe    0x426be7
  426be1:	push   0x3f
  426be3:	pop    ecx
  426be4:	mov    DWORD PTR [ebp-0x8],ecx
  426be7:	mov    ebx,DWORD PTR [edi+0x4]
  426bea:	cmp    ebx,DWORD PTR [edi+0x8]
  426bed:	jne    0x426c32
  426bef:	cmp    ecx,0x20
  426bf2:	mov    ebx,0x80000000
  426bf7:	jae    0x426c13
  426bf9:	shr    ebx,cl
  426bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  426bfe:	lea    ecx,[ecx+eax*1+0x4]
  426c02:	not    ebx
  426c04:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426c08:	dec    BYTE PTR [ecx]
  426c0a:	jne    0x426c32
  426c0c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c0f:	and    DWORD PTR [ecx],ebx
  426c11:	jmp    0x426c32
  426c13:	add    ecx,0xffffffe0
  426c16:	shr    ebx,cl
  426c18:	mov    ecx,DWORD PTR [ebp-0x8]
  426c1b:	lea    ecx,[ecx+eax*1+0x4]
  426c1f:	not    ebx
  426c21:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426c28:	dec    BYTE PTR [ecx]
  426c2a:	jne    0x426c32
  426c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2f:	and    DWORD PTR [ecx+0x4],ebx
  426c32:	mov    ecx,DWORD PTR [edi+0x8]
  426c35:	mov    ebx,DWORD PTR [edi+0x4]
  426c38:	mov    DWORD PTR [ecx+0x4],ebx
  426c3b:	mov    ecx,DWORD PTR [edi+0x4]
  426c3e:	mov    edi,DWORD PTR [edi+0x8]
  426c41:	mov    DWORD PTR [ecx+0x8],edi
  426c44:	mov    ecx,DWORD PTR [ebp+0x10]
  426c47:	sub    ecx,esi
  426c49:	add    DWORD PTR [ebp-0x4],ecx
  426c4c:	cmp    DWORD PTR [ebp-0x4],0x0
  426c50:	jle    0x426cfb
  426c56:	mov    edi,DWORD PTR [ebp-0x4]
  426c59:	mov    ecx,DWORD PTR [ebp+0xc]
  426c5c:	sar    edi,0x4
  426c5f:	dec    edi
  426c60:	cmp    edi,0x3f
  426c63:	lea    ecx,[ecx+esi*1-0x4]
  426c67:	jbe    0x426c6c
  426c69:	push   0x3f
  426c6b:	pop    edi
  426c6c:	mov    ebx,DWORD PTR [ebp-0xc]
  426c6f:	lea    ebx,[ebx+edi*8]
  426c72:	mov    DWORD PTR [ebp+0x10],ebx
  426c75:	mov    ebx,DWORD PTR [ebx+0x4]
  426c78:	mov    DWORD PTR [ecx+0x4],ebx
  426c7b:	mov    ebx,DWORD PTR [ebp+0x10]
  426c7e:	mov    DWORD PTR [ecx+0x8],ebx
  426c81:	mov    DWORD PTR [ebx+0x4],ecx
  426c84:	mov    ebx,DWORD PTR [ecx+0x4]
  426c87:	mov    DWORD PTR [ebx+0x8],ecx
  426c8a:	mov    ebx,DWORD PTR [ecx+0x4]
  426c8d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426c90:	jne    0x426ce9
  426c92:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426c96:	mov    BYTE PTR [ebp+0x13],cl
  426c99:	inc    cl
  426c9b:	cmp    edi,0x20
  426c9e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426ca2:	jae    0x426cc0
  426ca4:	cmp    BYTE PTR [ebp+0x13],0x0
  426ca8:	jne    0x426cb8
  426caa:	mov    ecx,edi
  426cac:	mov    ebx,0x80000000
  426cb1:	shr    ebx,cl
  426cb3:	mov    ecx,DWORD PTR [ebp+0x8]
  426cb6:	or     DWORD PTR [ecx],ebx
  426cb8:	lea    eax,[eax+edx*4+0x44]
  426cbc:	mov    ecx,edi
  426cbe:	jmp    0x426ce0
  426cc0:	cmp    BYTE PTR [ebp+0x13],0x0
  426cc4:	jne    0x426cd6
  426cc6:	lea    ecx,[edi-0x20]
  426cc9:	mov    ebx,0x80000000
  426cce:	shr    ebx,cl
  426cd0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cd3:	or     DWORD PTR [ecx+0x4],ebx
  426cd6:	lea    eax,[eax+edx*4+0xc4]
  426cdd:	lea    ecx,[edi-0x20]
  426ce0:	mov    edx,0x80000000
  426ce5:	shr    edx,cl
  426ce7:	or     DWORD PTR [eax],edx
  426ce9:	mov    edx,DWORD PTR [ebp+0xc]
  426cec:	mov    ecx,DWORD PTR [ebp-0x4]
  426cef:	lea    eax,[edx+esi*1-0x4]
  426cf3:	mov    DWORD PTR [eax],ecx
  426cf5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426cf9:	jmp    0x426cfe
  426cfb:	mov    edx,DWORD PTR [ebp+0xc]
  426cfe:	lea    eax,[esi+0x1]
  426d01:	mov    DWORD PTR [edx-0x4],eax
  426d04:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426d08:	jmp    0x426e49
  426d0d:	xor    eax,eax
  426d0f:	jmp    0x426e4c
  426d14:	jge    0x426e49
  426d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  426d1d:	sub    DWORD PTR [ebp+0x10],esi
  426d20:	lea    ecx,[esi+0x1]
  426d23:	mov    DWORD PTR [ebx-0x4],ecx
  426d26:	lea    ebx,[ebx+esi*1-0x4]
  426d2a:	mov    esi,DWORD PTR [ebp+0x10]
  426d2d:	sar    esi,0x4
  426d30:	dec    esi
  426d31:	cmp    esi,0x3f
  426d34:	mov    DWORD PTR [ebp+0xc],ebx
  426d37:	mov    DWORD PTR [ebx-0x4],ecx
  426d3a:	jbe    0x426d3f
  426d3c:	push   0x3f
  426d3e:	pop    esi
  426d3f:	test   BYTE PTR [ebp-0x4],0x1
  426d43:	jne    0x426dc9
  426d49:	mov    esi,DWORD PTR [ebp-0x4]
  426d4c:	sar    esi,0x4
  426d4f:	dec    esi
  426d50:	cmp    esi,0x3f
  426d53:	jbe    0x426d58
  426d55:	push   0x3f
  426d57:	pop    esi
  426d58:	mov    ecx,DWORD PTR [edi+0x4]
  426d5b:	cmp    ecx,DWORD PTR [edi+0x8]
  426d5e:	jne    0x426da2
  426d60:	cmp    esi,0x20
  426d63:	mov    ebx,0x80000000
  426d68:	jae    0x426d83
  426d6a:	mov    ecx,esi
  426d6c:	shr    ebx,cl
  426d6e:	lea    esi,[esi+eax*1+0x4]
  426d72:	not    ebx
  426d74:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426d78:	dec    BYTE PTR [esi]
  426d7a:	jne    0x426d9f
  426d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  426d7f:	and    DWORD PTR [ecx],ebx
  426d81:	jmp    0x426d9f
  426d83:	lea    ecx,[esi-0x20]
  426d86:	shr    ebx,cl
  426d88:	lea    ecx,[esi+eax*1+0x4]
  426d8c:	not    ebx
  426d8e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426d95:	dec    BYTE PTR [ecx]
  426d97:	jne    0x426d9f
  426d99:	mov    ecx,DWORD PTR [ebp+0x8]
  426d9c:	and    DWORD PTR [ecx+0x4],ebx
  426d9f:	mov    ebx,DWORD PTR [ebp+0xc]
  426da2:	mov    ecx,DWORD PTR [edi+0x8]
  426da5:	mov    esi,DWORD PTR [edi+0x4]
  426da8:	mov    DWORD PTR [ecx+0x4],esi
  426dab:	mov    esi,DWORD PTR [edi+0x8]
  426dae:	mov    ecx,DWORD PTR [edi+0x4]
  426db1:	mov    DWORD PTR [ecx+0x8],esi
  426db4:	mov    esi,DWORD PTR [ebp+0x10]
  426db7:	add    esi,DWORD PTR [ebp-0x4]
  426dba:	mov    DWORD PTR [ebp+0x10],esi
  426dbd:	sar    esi,0x4
  426dc0:	dec    esi
  426dc1:	cmp    esi,0x3f
  426dc4:	jbe    0x426dc9
  426dc6:	push   0x3f
  426dc8:	pop    esi
  426dc9:	mov    ecx,DWORD PTR [ebp-0xc]
  426dcc:	lea    ecx,[ecx+esi*8]
  426dcf:	mov    edi,DWORD PTR [ecx+0x4]
  426dd2:	mov    DWORD PTR [ebx+0x8],ecx
  426dd5:	mov    DWORD PTR [ebx+0x4],edi
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [ebx+0x4]
  426dde:	mov    DWORD PTR [ecx+0x8],ebx
  426de1:	mov    ecx,DWORD PTR [ebx+0x4]
  426de4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426de7:	jne    0x426e40
  426de9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ded:	mov    BYTE PTR [ebp+0xf],cl
  426df0:	inc    cl
  426df2:	cmp    esi,0x20
  426df5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426df9:	jae    0x426e17
  426dfb:	cmp    BYTE PTR [ebp+0xf],0x0
  426dff:	jne    0x426e0f
  426e01:	mov    ecx,esi
  426e03:	mov    edi,0x80000000
  426e08:	shr    edi,cl
  426e0a:	mov    ecx,DWORD PTR [ebp+0x8]
  426e0d:	or     DWORD PTR [ecx],edi
  426e0f:	lea    eax,[eax+edx*4+0x44]
  426e13:	mov    ecx,esi
  426e15:	jmp    0x426e37
  426e17:	cmp    BYTE PTR [ebp+0xf],0x0
  426e1b:	jne    0x426e2d
  426e1d:	lea    ecx,[esi-0x20]
  426e20:	mov    edi,0x80000000
  426e25:	shr    edi,cl
  426e27:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2a:	or     DWORD PTR [ecx+0x4],edi
  426e2d:	lea    eax,[eax+edx*4+0xc4]
  426e34:	lea    ecx,[esi-0x20]
  426e37:	mov    edx,0x80000000
  426e3c:	shr    edx,cl
  426e3e:	or     DWORD PTR [eax],edx
  426e40:	mov    eax,DWORD PTR [ebp+0x10]
  426e43:	mov    DWORD PTR [ebx],eax
  426e45:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426e49:	xor    eax,eax
  426e4b:	inc    eax
  426e4c:	pop    edi
  426e4d:	pop    esi
  426e4e:	pop    ebx
  426e4f:	leave  
  426e50:	ret    
  426e51:	push   ebp
  426e52:	mov    ebp,esp
  426e54:	sub    esp,0x14
  426e57:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5a:	mov    eax,ds:0x4674bc
  426e5f:	mov    edx,DWORD PTR ds:0x4674c0
  426e65:	add    ecx,0x17
  426e68:	and    ecx,0xfffffff0
  426e6b:	push   ebx
  426e6c:	mov    DWORD PTR [ebp-0x10],ecx
  426e6f:	sar    ecx,0x4
  426e72:	push   esi
  426e73:	lea    eax,[eax+eax*4]
  426e76:	push   edi
  426e77:	dec    ecx
  426e78:	cmp    ecx,0x20
  426e7b:	lea    edi,[edx+eax*4]
  426e7e:	mov    DWORD PTR [ebp-0x4],edi
  426e81:	jge    0x426e8e
  426e83:	or     esi,0xffffffff
  426e86:	shr    esi,cl
  426e88:	or     DWORD PTR [ebp-0x8],0xffffffff
  426e8c:	jmp    0x426e9b
  426e8e:	add    ecx,0xffffffe0
  426e91:	or     eax,0xffffffff
  426e94:	xor    esi,esi
  426e96:	shr    eax,cl
  426e98:	mov    DWORD PTR [ebp-0x8],eax
  426e9b:	mov    eax,ds:0x4674c8
  426ea0:	mov    ebx,eax
  426ea2:	mov    DWORD PTR [ebp-0xc],esi
  426ea5:	cmp    ebx,edi
  426ea7:	jmp    0x426ebd
  426ea9:	mov    ecx,DWORD PTR [ebx+0x4]
  426eac:	mov    edi,DWORD PTR [ebx]
  426eae:	and    ecx,DWORD PTR [ebp-0x8]
  426eb1:	and    edi,esi
  426eb3:	or     ecx,edi
  426eb5:	jne    0x426ec2
  426eb7:	add    ebx,0x14
  426eba:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ebd:	mov    DWORD PTR [ebp+0x8],ebx
  426ec0:	jb     0x426ea9
  426ec2:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ec5:	jne    0x426eeb
  426ec7:	mov    ebx,edx
  426ec9:	jmp    0x426edc
  426ecb:	mov    ecx,DWORD PTR [ebx+0x4]
  426ece:	mov    edi,DWORD PTR [ebx]
  426ed0:	and    ecx,DWORD PTR [ebp-0x8]
  426ed3:	and    edi,esi
  426ed5:	or     ecx,edi
  426ed7:	jne    0x426ee3
  426ed9:	add    ebx,0x14
  426edc:	cmp    ebx,eax
  426ede:	mov    DWORD PTR [ebp+0x8],ebx
  426ee1:	jb     0x426ecb
  426ee3:	cmp    ebx,eax
  426ee5:	je     0x426f7f
  426eeb:	mov    DWORD PTR ds:0x4674c8,ebx
  426ef1:	mov    eax,DWORD PTR [ebx+0x10]
  426ef4:	mov    edx,DWORD PTR [eax]
  426ef6:	cmp    edx,0xffffffff
  426ef9:	mov    DWORD PTR [ebp-0x4],edx
  426efc:	je     0x426f12
  426efe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f05:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426f09:	and    ecx,DWORD PTR [ebp-0x8]
  426f0c:	and    edi,esi
  426f0e:	or     ecx,edi
  426f10:	jne    0x426f48
  426f12:	mov    edx,DWORD PTR [eax+0xc4]
  426f18:	and    edx,DWORD PTR [ebp-0x8]
  426f1b:	and    DWORD PTR [ebp-0x4],0x0
  426f1f:	lea    ecx,[eax+0x44]
  426f22:	mov    esi,DWORD PTR [ecx]
  426f24:	and    esi,DWORD PTR [ebp-0xc]
  426f27:	or     edx,esi
  426f29:	mov    esi,DWORD PTR [ebp-0xc]
  426f2c:	jne    0x426f45
  426f2e:	mov    edx,DWORD PTR [ecx+0x84]
  426f34:	and    edx,DWORD PTR [ebp-0x8]
  426f37:	inc    DWORD PTR [ebp-0x4]
  426f3a:	add    ecx,0x4
  426f3d:	mov    edi,DWORD PTR [ecx]
  426f3f:	and    edi,esi
  426f41:	or     edx,edi
  426f43:	je     0x426f2e
  426f45:	mov    edx,DWORD PTR [ebp-0x4]
  426f48:	mov    ecx,edx
  426f4a:	imul   ecx,ecx,0x204
  426f50:	lea    ecx,[ecx+eax*1+0x144]
  426f57:	mov    DWORD PTR [ebp-0xc],ecx
  426f5a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  426f5e:	xor    edi,edi
  426f60:	and    ecx,esi
  426f62:	jne    0x426fd1
  426f64:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f6b:	and    ecx,DWORD PTR [ebp-0x8]
  426f6e:	push   0x20
  426f70:	pop    edi
  426f71:	jmp    0x426fd1
  426f73:	cmp    DWORD PTR [ebx+0x8],0x0
  426f77:	jne    0x426f84
  426f79:	add    ebx,0x14
  426f7c:	mov    DWORD PTR [ebp+0x8],ebx
  426f7f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f82:	jb     0x426f73
  426f84:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426faf
  426f89:	mov    ebx,edx
  426f8b:	jmp    0x426f96
  426f8d:	cmp    DWORD PTR [ebx+0x8],0x0
  426f91:	jne    0x426f9d
  426f93:	add    ebx,0x14
  426f96:	cmp    ebx,eax
  426f98:	mov    DWORD PTR [ebp+0x8],ebx
  426f9b:	jb     0x426f8d
  426f9d:	cmp    ebx,eax
  426f9f:	jne    0x426faf
  426fa1:	call   0x4269b5
  426fa6:	mov    ebx,eax
  426fa8:	test   ebx,ebx
  426faa:	mov    DWORD PTR [ebp+0x8],ebx
  426fad:	je     0x426fc7
  426faf:	push   ebx
  426fb0:	call   0x426a6c
  426fb5:	pop    ecx
  426fb6:	mov    ecx,DWORD PTR [ebx+0x10]
  426fb9:	mov    DWORD PTR [ecx],eax
  426fbb:	mov    eax,DWORD PTR [ebx+0x10]
  426fbe:	cmp    DWORD PTR [eax],0xffffffff
  426fc1:	jne    0x426eeb
  426fc7:	xor    eax,eax
  426fc9:	jmp    0x427148
  426fce:	shl    ecx,1
  426fd0:	inc    edi
  426fd1:	test   ecx,ecx
  426fd3:	jge    0x426fce
  426fd5:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  426fdc:	mov    ecx,DWORD PTR [edx]
  426fde:	sub    ecx,DWORD PTR [ebp-0x10]
  426fe1:	mov    esi,ecx
  426fe3:	sar    esi,0x4
  426fe6:	dec    esi
  426fe7:	cmp    esi,0x3f
  426fea:	mov    DWORD PTR [ebp-0x8],ecx
  426fed:	jle    0x426ff2
  426fef:	push   0x3f
  426ff1:	pop    esi
  426ff2:	cmp    esi,edi
  426ff4:	je     0x4270fb
  426ffa:	mov    ecx,DWORD PTR [edx+0x4]
  426ffd:	cmp    ecx,DWORD PTR [edx+0x8]
  427000:	jne    0x42705e
  427002:	cmp    edi,0x20
  427005:	mov    ebx,0x80000000
  42700a:	jge    0x427032
  42700c:	mov    ecx,edi
  42700e:	shr    ebx,cl
  427010:	mov    ecx,DWORD PTR [ebp-0x4]
  427013:	lea    edi,[eax+edi*1+0x4]
  427017:	not    ebx
  427019:	mov    DWORD PTR [ebp-0x14],ebx
  42701c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  427020:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  427024:	dec    BYTE PTR [edi]
  427026:	jne    0x42705b
  427028:	mov    ecx,DWORD PTR [ebp-0x14]
  42702b:	mov    ebx,DWORD PTR [ebp+0x8]
  42702e:	and    DWORD PTR [ebx],ecx
  427030:	jmp    0x42705e
  427032:	lea    ecx,[edi-0x20]
  427035:	shr    ebx,cl
  427037:	mov    ecx,DWORD PTR [ebp-0x4]
  42703a:	lea    ecx,[eax+ecx*4+0xc4]
  427041:	lea    edi,[eax+edi*1+0x4]
  427045:	not    ebx
  427047:	and    DWORD PTR [ecx],ebx
  427049:	dec    BYTE PTR [edi]
  42704b:	mov    DWORD PTR [ebp-0x14],ebx
  42704e:	jne    0x42705b
  427050:	mov    ebx,DWORD PTR [ebp+0x8]
  427053:	mov    ecx,DWORD PTR [ebp-0x14]
  427056:	and    DWORD PTR [ebx+0x4],ecx
  427059:	jmp    0x42705e
  42705b:	mov    ebx,DWORD PTR [ebp+0x8]
  42705e:	cmp    DWORD PTR [ebp-0x8],0x0
  427062:	mov    ecx,DWORD PTR [edx+0x8]
  427065:	mov    edi,DWORD PTR [edx+0x4]
  427068:	mov    DWORD PTR [ecx+0x4],edi
  42706b:	mov    ecx,DWORD PTR [edx+0x4]
  42706e:	mov    edi,DWORD PTR [edx+0x8]
  427071:	mov    DWORD PTR [ecx+0x8],edi
  427074:	je     0x427107
  42707a:	mov    ecx,DWORD PTR [ebp-0xc]
  42707d:	lea    ecx,[ecx+esi*8]
  427080:	mov    edi,DWORD PTR [ecx+0x4]
  427083:	mov    DWORD PTR [edx+0x8],ecx
  427086:	mov    DWORD PTR [edx+0x4],edi
  427089:	mov    DWORD PTR [ecx+0x4],edx
  42708c:	mov    ecx,DWORD PTR [edx+0x4]
  42708f:	mov    DWORD PTR [ecx+0x8],edx
  427092:	mov    ecx,DWORD PTR [edx+0x4]
  427095:	cmp    ecx,DWORD PTR [edx+0x8]
  427098:	jne    0x4270f8
  42709a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42709e:	mov    BYTE PTR [ebp+0xb],cl
  4270a1:	inc    cl
  4270a3:	cmp    esi,0x20
  4270a6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4270aa:	jge    0x4270cf
  4270ac:	cmp    BYTE PTR [ebp+0xb],0x0
  4270b0:	jne    0x4270bd
  4270b2:	mov    edi,0x80000000
  4270b7:	mov    ecx,esi
  4270b9:	shr    edi,cl
  4270bb:	or     DWORD PTR [ebx],edi
  4270bd:	mov    ecx,esi
  4270bf:	mov    edi,0x80000000
  4270c4:	shr    edi,cl
  4270c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4270cd:	jmp    0x4270f8
  4270cf:	cmp    BYTE PTR [ebp+0xb],0x0
  4270d3:	jne    0x4270e2
  4270d5:	lea    ecx,[esi-0x20]
  4270d8:	mov    edi,0x80000000
  4270dd:	shr    edi,cl
  4270df:	or     DWORD PTR [ebx+0x4],edi
  4270e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4270e5:	lea    edi,[eax+ecx*4+0xc4]
  4270ec:	lea    ecx,[esi-0x20]
  4270ef:	mov    esi,0x80000000
  4270f4:	shr    esi,cl
  4270f6:	or     DWORD PTR [edi],esi
  4270f8:	mov    ecx,DWORD PTR [ebp-0x8]
  4270fb:	test   ecx,ecx
  4270fd:	je     0x42710a
  4270ff:	mov    DWORD PTR [edx],ecx
  427101:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  427105:	jmp    0x42710a
  427107:	mov    ecx,DWORD PTR [ebp-0x8]
  42710a:	mov    esi,DWORD PTR [ebp-0x10]
  42710d:	add    edx,ecx
  42710f:	lea    ecx,[esi+0x1]
  427112:	mov    DWORD PTR [edx],ecx
  427114:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  427118:	mov    esi,DWORD PTR [ebp-0xc]
  42711b:	mov    ecx,DWORD PTR [esi]
  42711d:	test   ecx,ecx
  42711f:	lea    edi,[ecx+0x1]
  427122:	mov    DWORD PTR [esi],edi
  427124:	jne    0x427140
  427126:	cmp    ebx,DWORD PTR ds:0x4674b8
  42712c:	jne    0x427140
  42712e:	mov    ecx,DWORD PTR [ebp-0x4]
  427131:	cmp    ecx,DWORD PTR ds:0x4674d0
  427137:	jne    0x427140
  427139:	and    DWORD PTR ds:0x4674b8,0x0
  427140:	mov    ecx,DWORD PTR [ebp-0x4]
  427143:	mov    DWORD PTR [eax],ecx
  427145:	lea    eax,[edx+0x4]
  427148:	pop    edi
  427149:	pop    esi
  42714a:	pop    ebx
  42714b:	leave  
  42714c:	ret    
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	push   esi
  427151:	inc    ebx
  427152:	xor    dh,BYTE PTR [eax]
  427154:	pop    eax
  427155:	inc    ebx
  427156:	xor    BYTE PTR [eax],dh
  427158:	push   ebp
  427159:	mov    ebp,esp
  42715b:	sub    esp,0x8
  42715e:	push   ebx
  42715f:	push   esi
  427160:	push   edi
  427161:	push   ebp
  427162:	cld    
  427163:	mov    ebx,DWORD PTR [ebp+0xc]
  427166:	mov    eax,DWORD PTR [ebp+0x8]
  427169:	test   DWORD PTR [eax+0x4],0x6
  427170:	jne    0x4271f8
  427176:	mov    DWORD PTR [ebp-0x8],eax
  427179:	mov    eax,DWORD PTR [ebp+0x10]
  42717c:	mov    DWORD PTR [ebp-0x4],eax
  42717f:	lea    eax,[ebp-0x8]
  427182:	mov    DWORD PTR [ebx-0x4],eax
  427185:	mov    esi,DWORD PTR [ebx+0xc]
  427188:	mov    edi,DWORD PTR [ebx+0x8]
  42718b:	cmp    esi,0xffffffff
  42718e:	je     0x4271f1
  427190:	lea    ecx,[esi+esi*2]
  427193:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427198:	je     0x4271df
  42719a:	push   esi
  42719b:	push   ebp
  42719c:	lea    ebp,[ebx+0x10]
  42719f:	call   DWORD PTR [edi+ecx*4+0x4]
  4271a3:	pop    ebp
  4271a4:	pop    esi
  4271a5:	mov    ebx,DWORD PTR [ebp+0xc]
  4271a8:	or     eax,eax
  4271aa:	je     0x4271df
  4271ac:	js     0x4271ea
  4271ae:	mov    edi,DWORD PTR [ebx+0x8]
  4271b1:	push   ebx
  4271b2:	call   0x4280e0
  4271b7:	add    esp,0x4
  4271ba:	lea    ebp,[ebx+0x10]
  4271bd:	push   esi
  4271be:	push   ebx
  4271bf:	call   0x428122
  4271c4:	add    esp,0x8
  4271c7:	lea    ecx,[esi+esi*2]
  4271ca:	push   0x1
  4271cc:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4271d0:	call   0x4281b6
  4271d5:	mov    eax,DWORD PTR [edi+ecx*4]
  4271d8:	mov    DWORD PTR [ebx+0xc],eax
  4271db:	call   DWORD PTR [edi+ecx*4+0x8]
  4271df:	mov    edi,DWORD PTR [ebx+0x8]
  4271e2:	lea    ecx,[esi+esi*2]
  4271e5:	mov    esi,DWORD PTR [edi+ecx*4]
  4271e8:	jmp    0x42718b
  4271ea:	mov    eax,0x0
  4271ef:	jmp    0x42720d
  4271f1:	mov    eax,0x1
  4271f6:	jmp    0x42720d
  4271f8:	push   ebp
  4271f9:	lea    ebp,[ebx+0x10]
  4271fc:	push   0xffffffff
  4271fe:	push   ebx
  4271ff:	call   0x428122
  427204:	add    esp,0x8
  427207:	pop    ebp
  427208:	mov    eax,0x1
  42720d:	pop    ebp
  42720e:	pop    edi
  42720f:	pop    esi
  427210:	pop    ebx
  427211:	mov    esp,ebp
  427213:	pop    ebp
  427214:	ret    
  427215:	push   ebp
  427216:	mov    ecx,DWORD PTR [esp+0x8]
  42721a:	mov    ebp,DWORD PTR [ecx]
  42721c:	mov    eax,DWORD PTR [ecx+0x1c]
  42721f:	push   eax
  427220:	mov    eax,DWORD PTR [ecx+0x18]
  427223:	push   eax
  427224:	call   0x428122
  427229:	add    esp,0x8
  42722c:	pop    ebp
  42722d:	ret    0x4
  427230:	call   0x425145
  427235:	add    eax,0x8
  427238:	ret    
  427239:	push   0x14
  42723b:	push   0x4297c8
  427240:	call   0x425290
  427245:	mov    edi,DWORD PTR [ebp+0x8]
  427248:	xor    ebx,ebx
  42724a:	cmp    edi,ebx
  42724c:	jne    0x42725c
  42724e:	push   DWORD PTR [ebp+0xc]
  427251:	call   0x425fb2
  427256:	pop    ecx
  427257:	jmp    0x4273e0
  42725c:	mov    esi,DWORD PTR [ebp+0xc]
  42725f:	cmp    esi,ebx
  427261:	jne    0x42726f
  427263:	push   edi
  427264:	call   0x425e9a
  427269:	pop    ecx
  42726a:	jmp    0x4273de
  42726f:	cmp    DWORD PTR ds:0x467704,0x3
  427276:	jne    0x4273aa
  42727c:	mov    DWORD PTR [ebp-0x1c],ebx
  42727f:	cmp    esi,0xffffffe0
  427282:	ja     0x427379
  427288:	push   0x4
  42728a:	call   0x42544f
  42728f:	pop    ecx
  427290:	mov    DWORD PTR [ebp-0x4],ebx
  427293:	push   edi
  427294:	call   0x426672
  427299:	pop    ecx
  42729a:	mov    DWORD PTR [ebp-0x20],eax
  42729d:	cmp    eax,ebx
  42729f:	je     0x427349
  4272a5:	cmp    esi,DWORD PTR ds:0x4674c4
  4272ab:	ja     0x4272f9
  4272ad:	push   esi
  4272ae:	push   edi
  4272af:	push   eax
  4272b0:	call   0x426b72
  4272b5:	add    esp,0xc
  4272b8:	test   eax,eax
  4272ba:	je     0x4272c1
  4272bc:	mov    DWORD PTR [ebp-0x1c],edi
  4272bf:	jmp    0x4272f9
  4272c1:	push   esi
  4272c2:	call   0x426e51
  4272c7:	pop    ecx
  4272c8:	mov    DWORD PTR [ebp-0x1c],eax
  4272cb:	cmp    eax,ebx
  4272cd:	je     0x4272f9
  4272cf:	mov    eax,DWORD PTR [edi-0x4]
  4272d2:	dec    eax
  4272d3:	mov    DWORD PTR [ebp-0x24],eax
  4272d6:	cmp    eax,esi
  4272d8:	jb     0x4272dc
  4272da:	mov    eax,esi
  4272dc:	push   eax
  4272dd:	push   edi
  4272de:	push   DWORD PTR [ebp-0x1c]
  4272e1:	call   0x425fd0
  4272e6:	push   edi
  4272e7:	call   0x426672
  4272ec:	mov    DWORD PTR [ebp-0x20],eax
  4272ef:	push   edi
  4272f0:	push   eax
  4272f1:	call   0x42669d
  4272f6:	add    esp,0x18
  4272f9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4272fc:	jne    0x427349
  4272fe:	cmp    esi,ebx
  427300:	jne    0x427308
  427302:	xor    esi,esi
  427304:	inc    esi
  427305:	mov    DWORD PTR [ebp+0xc],esi
  427308:	add    esi,0xf
  42730b:	and    esi,0xfffffff0
  42730e:	mov    DWORD PTR [ebp+0xc],esi
  427311:	push   esi
  427312:	push   ebx
  427313:	push   DWORD PTR ds:0x467700
  427319:	call   DWORD PTR ds:0x4290dc
  42731f:	mov    DWORD PTR [ebp-0x1c],eax
  427322:	cmp    eax,ebx
  427324:	je     0x427349
  427326:	mov    eax,DWORD PTR [edi-0x4]
  427329:	dec    eax
  42732a:	mov    DWORD PTR [ebp-0x24],eax
  42732d:	cmp    eax,esi
  42732f:	jb     0x427333
  427331:	mov    eax,esi
  427333:	push   eax
  427334:	push   edi
  427335:	push   DWORD PTR [ebp-0x1c]
  427338:	call   0x425fd0
  42733d:	push   edi
  42733e:	push   DWORD PTR [ebp-0x20]
  427341:	call   0x42669d
  427346:	add    esp,0x14
  427349:	or     DWORD PTR [ebp-0x4],0xffffffff
  42734d:	call   0x4273a1
  427352:	cmp    DWORD PTR [ebp-0x20],ebx
  427355:	jne    0x427379
  427357:	cmp    esi,ebx
  427359:	jne    0x42735e
  42735b:	xor    esi,esi
  42735d:	inc    esi
  42735e:	add    esi,0xf
  427361:	and    esi,0xfffffff0
  427364:	mov    DWORD PTR [ebp+0xc],esi
  427367:	push   esi
  427368:	push   edi
  427369:	push   ebx
  42736a:	push   DWORD PTR ds:0x467700
  427370:	call   DWORD PTR ds:0x4290e8
  427376:	mov    DWORD PTR [ebp-0x1c],eax
  427379:	mov    eax,DWORD PTR [ebp-0x1c]
  42737c:	cmp    eax,ebx
  42737e:	jne    0x4273e0
  427380:	cmp    DWORD PTR ds:0x467388,ebx
  427386:	je     0x4273e0
  427388:	push   esi
  427389:	call   0x427b72
  42738e:	pop    ecx
  42738f:	test   eax,eax
  427391:	jne    0x42727c
  427397:	jmp    0x4273de
  427399:	xor    ebx,ebx
  42739b:	mov    esi,DWORD PTR [ebp+0xc]
  42739e:	mov    edi,DWORD PTR [ebp+0x8]
  4273a1:	push   0x4
  4273a3:	call   0x4253bb
  4273a8:	pop    ecx
  4273a9:	ret    
  4273aa:	xor    eax,eax
  4273ac:	cmp    esi,0xffffffe0
  4273af:	ja     0x4273c7
  4273b1:	cmp    esi,ebx
  4273b3:	jne    0x4273b8
  4273b5:	xor    esi,esi
  4273b7:	inc    esi
  4273b8:	push   esi
  4273b9:	push   edi
  4273ba:	push   ebx
  4273bb:	push   DWORD PTR ds:0x467700
  4273c1:	call   DWORD PTR ds:0x4290e8
  4273c7:	cmp    eax,ebx
  4273c9:	jne    0x4273e0
  4273cb:	cmp    DWORD PTR ds:0x467388,ebx
  4273d1:	je     0x4273e0
  4273d3:	push   esi
  4273d4:	call   0x427b72
  4273d9:	pop    ecx
  4273da:	test   eax,eax
  4273dc:	jne    0x4273aa
  4273de:	xor    eax,eax
  4273e0:	call   0x4252cb
  4273e5:	ret    
  4273e6:	push   0x10
  4273e8:	push   0x4297d8
  4273ed:	call   0x425290
  4273f2:	cmp    DWORD PTR ds:0x467704,0x3
  4273f9:	jne    0x427435
  4273fb:	push   0x4
  4273fd:	call   0x42544f
  427402:	pop    ecx
  427403:	and    DWORD PTR [ebp-0x4],0x0
  427407:	mov    esi,DWORD PTR [ebp+0x8]
  42740a:	push   esi
  42740b:	call   0x426672
  427410:	pop    ecx
  427411:	mov    DWORD PTR [ebp-0x1c],eax
  427414:	test   eax,eax
  427416:	je     0x427423
  427418:	mov    esi,DWORD PTR [esi-0x4]
  42741b:	sub    esi,0x9
  42741e:	mov    DWORD PTR [ebp-0x20],esi
  427421:	jmp    0x427426
  427423:	mov    esi,DWORD PTR [ebp-0x20]
  427426:	or     DWORD PTR [ebp-0x4],0xffffffff
  42742a:	call   0x427453
  42742f:	cmp    DWORD PTR [ebp-0x1c],0x0
  427433:	jne    0x427448
  427435:	push   DWORD PTR [ebp+0x8]
  427438:	push   0x0
  42743a:	push   DWORD PTR ds:0x467700
  427440:	call   DWORD PTR ds:0x4290ec
  427446:	mov    esi,eax
  427448:	mov    eax,esi
  42744a:	call   0x4252cb
  42744f:	ret    
  427450:	mov    esi,DWORD PTR [ebp-0x20]
  427453:	push   0x4
  427455:	call   0x4253bb
  42745a:	pop    ecx
  42745b:	ret    
  42745c:	push   ebp
  42745d:	mov    ebp,esp
  42745f:	sub    esp,0x10
  427462:	push   esi
  427463:	lea    eax,[ebp-0x8]
  427466:	push   eax
  427467:	call   DWORD PTR ds:0x4290fc
  42746d:	mov    esi,DWORD PTR [ebp-0x4]
  427470:	xor    esi,DWORD PTR [ebp-0x8]
  427473:	call   DWORD PTR ds:0x4290f8
  427479:	xor    esi,eax
  42747b:	call   DWORD PTR ds:0x4290b4
  427481:	xor    esi,eax
  427483:	call   DWORD PTR ds:0x4290f4
  427489:	xor    esi,eax
  42748b:	lea    eax,[ebp-0x10]
  42748e:	push   eax
  42748f:	call   DWORD PTR ds:0x4290f0
  427495:	mov    eax,DWORD PTR [ebp-0xc]
  427498:	xor    eax,DWORD PTR [ebp-0x10]
  42749b:	xor    esi,eax
  42749d:	mov    DWORD PTR ds:0x4669f0,esi
  4274a3:	jne    0x4274af
  4274a5:	mov    DWORD PTR ds:0x4669f0,0xbb40e64e
  4274af:	pop    esi
  4274b0:	leave  
  4274b1:	ret    
  4274b2:	push   0x118
  4274b7:	push   0x429988
  4274bc:	call   0x425290
  4274c1:	mov    eax,ds:0x4669f0
  4274c6:	xor    eax,DWORD PTR [ebp+0x4]
  4274c9:	mov    DWORD PTR [ebp-0x1c],eax
  4274cc:	mov    eax,ds:0x467358
  4274d1:	xor    ecx,ecx
  4274d3:	cmp    eax,ecx
  4274d5:	je     0x4274f6
  4274d7:	mov    DWORD PTR [ebp-0x4],ecx
  4274da:	push   DWORD PTR [ebp+0xc]
  4274dd:	push   DWORD PTR [ebp+0x8]
  4274e0:	call   eax
  4274e2:	pop    ecx
  4274e3:	pop    ecx
  4274e4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274e8:	jmp    0x4275f4
  4274ed:	xor    eax,eax
  4274ef:	inc    eax
  4274f0:	ret    
  4274f1:	mov    esp,DWORD PTR [ebp-0x18]
  4274f4:	jmp    0x4274e4
  4274f6:	mov    eax,DWORD PTR [ebp+0x8]
  4274f9:	dec    eax
  4274fa:	je     0x42750f
  4274fc:	mov    edi,0x429964
  427501:	mov    DWORD PTR [ebp-0x20],0x4298b0
  427508:	mov    esi,0xd4
  42750d:	jmp    0x427520
  42750f:	mov    edi,0x429890
  427514:	mov    DWORD PTR [ebp-0x20],0x4297f0
  42751b:	mov    esi,0xb9
  427520:	mov    BYTE PTR [ebp-0x24],cl
  427523:	push   0x104
  427528:	lea    eax,[ebp-0x128]
  42752e:	push   eax
  42752f:	push   ecx
  427530:	call   DWORD PTR ds:0x429084
  427536:	test   eax,eax
  427538:	jne    0x42754d
  42753a:	push   0x4294e4
  42753f:	lea    eax,[ebp-0x128]
  427545:	push   eax
  427546:	call   0x425670
  42754b:	pop    ecx
  42754c:	pop    ecx
  42754d:	lea    ebx,[ebp-0x128]
  427553:	lea    eax,[ebp-0x128]
  427559:	push   eax
  42755a:	call   0x4258a0
  42755f:	pop    ecx
  427560:	add    eax,0xb
  427563:	cmp    eax,0x3c
  427566:	jbe    0x427591
  427568:	lea    eax,[ebp-0x128]
  42756e:	push   eax
  42756f:	call   0x4258a0
  427574:	mov    ebx,eax
  427576:	lea    eax,[ebp-0x128]
  42757c:	sub    eax,0x31
  42757f:	add    ebx,eax
  427581:	push   0x3
  427583:	push   0x4294e0
  427588:	push   ebx
  427589:	call   0x425770
  42758e:	add    esp,0x10
  427591:	push   ebx
  427592:	call   0x4258a0
  427597:	pop    ecx
  427598:	lea    eax,[eax+esi*1+0xc]
  42759c:	add    eax,0x3
  42759f:	and    eax,0xfffffffc
  4275a2:	call   0x4252e0
  4275a7:	mov    DWORD PTR [ebp-0x18],esp
  4275aa:	mov    esi,esp
  4275ac:	push   edi
  4275ad:	push   esi
  4275ae:	call   0x425670
  4275b3:	mov    edi,0x4294c0
  4275b8:	push   edi
  4275b9:	push   esi
  4275ba:	call   0x425680
  4275bf:	push   0x4297e4
  4275c4:	push   esi
  4275c5:	call   0x425680
  4275ca:	push   ebx
  4275cb:	push   esi
  4275cc:	call   0x425680
  4275d1:	push   edi
  4275d2:	push   esi
  4275d3:	call   0x425680
  4275d8:	push   DWORD PTR [ebp-0x20]
  4275db:	push   esi
  4275dc:	call   0x425680
  4275e1:	push   0x12010
  4275e6:	push   0x429498
  4275eb:	push   esi
  4275ec:	call   0x425572
  4275f1:	add    esp,0x3c
  4275f4:	push   0x3
  4275f6:	call   0x4246fe
  4275fb:	int3   
  4275fc:	push   0x38
  4275fe:	push   0x429da8
  427603:	call   0x425290
  427608:	xor    ebx,ebx
  42760a:	cmp    DWORD PTR ds:0x46737c,ebx
  427610:	jne    0x42764a
  427612:	push   ebx
  427613:	push   ebx
  427614:	xor    esi,esi
  427616:	inc    esi
  427617:	push   esi
  427618:	push   0x429da4
  42761d:	push   0x100
  427622:	push   ebx
  427623:	call   DWORD PTR ds:0x429108
  427629:	test   eax,eax
  42762b:	je     0x427635
  42762d:	mov    DWORD PTR ds:0x46737c,esi
  427633:	jmp    0x42764a
  427635:	call   DWORD PTR ds:0x429034
  42763b:	cmp    eax,0x78
  42763e:	jne    0x42764a
  427640:	mov    DWORD PTR ds:0x46737c,0x2
  42764a:	cmp    DWORD PTR [ebp+0x14],ebx
  42764d:	jle    0x42766a
  42764f:	mov    ecx,DWORD PTR [ebp+0x14]
  427652:	mov    eax,DWORD PTR [ebp+0x10]
  427655:	dec    ecx
  427656:	cmp    BYTE PTR [eax],bl
  427658:	je     0x427662
  42765a:	inc    eax
  42765b:	cmp    ecx,ebx
  42765d:	jne    0x427655
  42765f:	or     ecx,0xffffffff
  427662:	or     eax,0xffffffff
  427665:	sub    eax,ecx
  427667:	add    DWORD PTR [ebp+0x14],eax
  42766a:	mov    eax,ds:0x46737c
  42766f:	cmp    eax,0x2
  427672:	je     0x427854
  427678:	cmp    eax,ebx
  42767a:	je     0x427854
  427680:	cmp    eax,0x1
  427683:	jne    0x427887
  427689:	xor    edi,edi
  42768b:	mov    DWORD PTR [ebp-0x1c],edi
  42768e:	mov    DWORD PTR [ebp-0x20],ebx
  427691:	mov    DWORD PTR [ebp-0x24],ebx
  427694:	cmp    DWORD PTR [ebp+0x20],ebx
  427697:	jne    0x4276a1
  427699:	mov    eax,ds:0x467374
  42769e:	mov    DWORD PTR [ebp+0x20],eax
  4276a1:	push   ebx
  4276a2:	push   ebx
  4276a3:	push   DWORD PTR [ebp+0x14]
  4276a6:	push   DWORD PTR [ebp+0x10]
  4276a9:	xor    eax,eax
  4276ab:	cmp    DWORD PTR [ebp+0x24],ebx
  4276ae:	setne  al
  4276b1:	lea    eax,[eax*8+0x1]
  4276b8:	push   eax
  4276b9:	push   DWORD PTR [ebp+0x20]
  4276bc:	call   DWORD PTR ds:0x429104
  4276c2:	mov    esi,eax
  4276c4:	mov    DWORD PTR [ebp-0x28],esi
  4276c7:	cmp    esi,ebx
  4276c9:	je     0x427887
  4276cf:	mov    DWORD PTR [ebp-0x4],0x1
  4276d6:	lea    eax,[esi+esi*1]
  4276d9:	add    eax,0x3
  4276dc:	and    eax,0xfffffffc
  4276df:	call   0x4252e0
  4276e4:	mov    DWORD PTR [ebp-0x18],esp
  4276e7:	mov    eax,esp
  4276e9:	mov    DWORD PTR [ebp-0x2c],eax
  4276ec:	or     DWORD PTR [ebp-0x4],0xffffffff
  4276f0:	jmp    0x42770d
  4276f2:	xor    eax,eax
  4276f4:	inc    eax
  4276f5:	ret    
  4276f6:	mov    esp,DWORD PTR [ebp-0x18]
  4276f9:	call   0x428725
  4276fe:	xor    ebx,ebx
  427700:	mov    DWORD PTR [ebp-0x2c],ebx
  427703:	or     DWORD PTR [ebp-0x4],0xffffffff
  427707:	mov    edi,DWORD PTR [ebp-0x1c]
  42770a:	mov    esi,DWORD PTR [ebp-0x28]
  42770d:	cmp    DWORD PTR [ebp-0x2c],ebx
  427710:	jne    0x42772e
  427712:	lea    eax,[esi+esi*1]
  427715:	push   eax
  427716:	call   0x425fb2
  42771b:	pop    ecx
  42771c:	mov    DWORD PTR [ebp-0x2c],eax
  42771f:	cmp    eax,ebx
  427721:	je     0x427887
  427727:	mov    DWORD PTR [ebp-0x20],0x1
  42772e:	push   esi
  42772f:	push   DWORD PTR [ebp-0x2c]
  427732:	push   DWORD PTR [ebp+0x14]
  427735:	push   DWORD PTR [ebp+0x10]
  427738:	push   0x1
  42773a:	push   DWORD PTR [ebp+0x20]
  42773d:	call   DWORD PTR ds:0x429104
  427743:	test   eax,eax
  427745:	je     0x427831
  42774b:	push   ebx
  42774c:	push   ebx
  42774d:	push   esi
  42774e:	push   DWORD PTR [ebp-0x2c]
  427751:	push   DWORD PTR [ebp+0xc]
  427754:	push   DWORD PTR [ebp+0x8]
  427757:	call   DWORD PTR ds:0x429108
  42775d:	mov    edi,eax
  42775f:	mov    DWORD PTR [ebp-0x1c],edi
  427762:	cmp    edi,ebx
  427764:	je     0x427831
  42776a:	test   BYTE PTR [ebp+0xd],0x4
  42776e:	je     0x42779d
  427770:	cmp    DWORD PTR [ebp+0x1c],ebx
  427773:	je     0x427831
  427779:	cmp    edi,DWORD PTR [ebp+0x1c]
  42777c:	jg     0x427831
  427782:	push   DWORD PTR [ebp+0x1c]
  427785:	push   DWORD PTR [ebp+0x18]
  427788:	push   esi
  427789:	push   DWORD PTR [ebp-0x2c]
  42778c:	push   DWORD PTR [ebp+0xc]
  42778f:	push   DWORD PTR [ebp+0x8]
  427792:	call   DWORD PTR ds:0x429108
  427798:	jmp    0x427831
  42779d:	mov    DWORD PTR [ebp-0x4],0x2
  4277a4:	lea    eax,[edi+edi*1]
  4277a7:	add    eax,0x3
  4277aa:	and    eax,0xfffffffc
  4277ad:	call   0x4252e0
  4277b2:	mov    DWORD PTR [ebp-0x18],esp
  4277b5:	mov    eax,esp
  4277b7:	mov    DWORD PTR [ebp-0x30],eax
  4277ba:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277be:	jmp    0x4277db
  4277c0:	xor    eax,eax
  4277c2:	inc    eax
  4277c3:	ret    
  4277c4:	mov    esp,DWORD PTR [ebp-0x18]
  4277c7:	call   0x428725
  4277cc:	xor    ebx,ebx
  4277ce:	mov    DWORD PTR [ebp-0x30],ebx
  4277d1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277d5:	mov    edi,DWORD PTR [ebp-0x1c]
  4277d8:	mov    esi,DWORD PTR [ebp-0x28]
  4277db:	cmp    DWORD PTR [ebp-0x30],ebx
  4277de:	jne    0x4277f8
  4277e0:	lea    eax,[edi+edi*1]
  4277e3:	push   eax
  4277e4:	call   0x425fb2
  4277e9:	pop    ecx
  4277ea:	mov    DWORD PTR [ebp-0x30],eax
  4277ed:	cmp    eax,ebx
  4277ef:	je     0x427831
  4277f1:	mov    DWORD PTR [ebp-0x24],0x1
  4277f8:	push   edi
  4277f9:	push   DWORD PTR [ebp-0x30]
  4277fc:	push   esi
  4277fd:	push   DWORD PTR [ebp-0x2c]
  427800:	push   DWORD PTR [ebp+0xc]
  427803:	push   DWORD PTR [ebp+0x8]
  427806:	call   DWORD PTR ds:0x429108
  42780c:	test   eax,eax
  42780e:	je     0x427831
  427810:	push   ebx
  427811:	push   ebx
  427812:	cmp    DWORD PTR [ebp+0x1c],ebx
  427815:	jne    0x42781b
  427817:	push   ebx
  427818:	push   ebx
  427819:	jmp    0x427821
  42781b:	push   DWORD PTR [ebp+0x1c]
  42781e:	push   DWORD PTR [ebp+0x18]
  427821:	push   edi
  427822:	push   DWORD PTR [ebp-0x30]
  427825:	push   ebx
  427826:	push   DWORD PTR [ebp+0x20]
  427829:	call   DWORD PTR ds:0x429098
  42782f:	mov    edi,eax
  427831:	cmp    DWORD PTR [ebp-0x24],ebx
  427834:	je     0x42783f
  427836:	push   DWORD PTR [ebp-0x30]
  427839:	call   0x425e9a
  42783e:	pop    ecx
  42783f:	cmp    DWORD PTR [ebp-0x20],ebx
  427842:	je     0x42784d
  427844:	push   DWORD PTR [ebp-0x2c]
  427847:	call   0x425e9a
  42784c:	pop    ecx
  42784d:	mov    eax,edi
  42784f:	jmp    0x4279af
  427854:	mov    DWORD PTR [ebp-0x34],ebx
  427857:	xor    edi,edi
  427859:	mov    DWORD PTR [ebp-0x38],ebx
  42785c:	cmp    DWORD PTR [ebp+0x8],ebx
  42785f:	jne    0x427869
  427861:	mov    eax,ds:0x467364
  427866:	mov    DWORD PTR [ebp+0x8],eax
  427869:	cmp    DWORD PTR [ebp+0x20],ebx
  42786c:	jne    0x427876
  42786e:	mov    eax,ds:0x467374
  427873:	mov    DWORD PTR [ebp+0x20],eax
  427876:	push   DWORD PTR [ebp+0x8]
  427879:	call   0x42850d
  42787e:	pop    ecx
  42787f:	mov    DWORD PTR [ebp-0x3c],eax
  427882:	cmp    eax,0xffffffff
  427885:	jne    0x42788e
  427887:	xor    eax,eax
  427889:	jmp    0x4279af
  42788e:	cmp    eax,DWORD PTR [ebp+0x20]
  427891:	je     0x427985
  427897:	push   ebx
  427898:	push   ebx
  427899:	lea    ecx,[ebp+0x14]
  42789c:	push   ecx
  42789d:	push   DWORD PTR [ebp+0x10]
  4278a0:	push   eax
  4278a1:	push   DWORD PTR [ebp+0x20]
  4278a4:	call   0x428556
  4278a9:	add    esp,0x18
  4278ac:	mov    DWORD PTR [ebp-0x34],eax
  4278af:	cmp    eax,ebx
  4278b1:	je     0x427887
  4278b3:	push   ebx
  4278b4:	push   ebx
  4278b5:	push   DWORD PTR [ebp+0x14]
  4278b8:	push   eax
  4278b9:	push   DWORD PTR [ebp+0xc]
  4278bc:	push   DWORD PTR [ebp+0x8]
  4278bf:	call   DWORD PTR ds:0x429100
  4278c5:	mov    esi,eax
  4278c7:	mov    DWORD PTR [ebp-0x40],esi
  4278ca:	cmp    esi,ebx
  4278cc:	je     0x427974
  4278d2:	mov    DWORD PTR [ebp-0x4],ebx
  4278d5:	add    eax,0x3
  4278d8:	and    eax,0xfffffffc
  4278db:	call   0x4252e0
  4278e0:	mov    DWORD PTR [ebp-0x18],esp
  4278e3:	mov    edi,esp
  4278e5:	mov    DWORD PTR [ebp-0x44],edi
  4278e8:	push   esi
  4278e9:	push   ebx
  4278ea:	push   edi
  4278eb:	call   0x427b90
  4278f0:	add    esp,0xc
  4278f3:	jmp    0x427905
  4278f5:	xor    eax,eax
  4278f7:	inc    eax
  4278f8:	ret    
  4278f9:	mov    esp,DWORD PTR [ebp-0x18]
  4278fc:	call   0x428725
  427901:	xor    ebx,ebx
  427903:	xor    edi,edi
  427905:	or     DWORD PTR [ebp-0x4],0xffffffff
  427909:	cmp    edi,ebx
  42790b:	jne    0x427930
  42790d:	push   DWORD PTR [ebp-0x40]
  427910:	call   0x425fb2
  427915:	pop    ecx
  427916:	mov    edi,eax
  427918:	cmp    edi,ebx
  42791a:	je     0x42794d
  42791c:	push   DWORD PTR [ebp-0x40]
  42791f:	push   ebx
  427920:	push   edi
  427921:	call   0x427b90
  427926:	add    esp,0xc
  427929:	mov    DWORD PTR [ebp-0x38],0x1
  427930:	push   DWORD PTR [ebp-0x40]
  427933:	push   edi
  427934:	push   DWORD PTR [ebp+0x14]
  427937:	push   DWORD PTR [ebp-0x34]
  42793a:	push   DWORD PTR [ebp+0xc]
  42793d:	push   DWORD PTR [ebp+0x8]
  427940:	call   DWORD PTR ds:0x429100
  427946:	mov    DWORD PTR [ebp-0x40],eax
  427949:	cmp    eax,ebx
  42794b:	jne    0x427951
  42794d:	xor    esi,esi
  42794f:	jmp    0x427977
  427951:	push   DWORD PTR [ebp+0x1c]
  427954:	push   DWORD PTR [ebp+0x18]
  427957:	lea    eax,[ebp-0x40]
  42795a:	push   eax
  42795b:	push   edi
  42795c:	push   DWORD PTR [ebp+0x20]
  42795f:	push   DWORD PTR [ebp-0x3c]
  427962:	call   0x428556
  427967:	add    esp,0x18
  42796a:	mov    esi,eax
  42796c:	neg    esi
  42796e:	sbb    esi,esi
  427970:	neg    esi
  427972:	jmp    0x427977
  427974:	mov    esi,DWORD PTR [ebp-0x48]
  427977:	cmp    DWORD PTR [ebp-0x38],ebx
  42797a:	je     0x42799f
  42797c:	push   edi
  42797d:	call   0x425e9a
  427982:	pop    ecx
  427983:	jmp    0x42799f
  427985:	push   DWORD PTR [ebp+0x1c]
  427988:	push   DWORD PTR [ebp+0x18]
  42798b:	push   DWORD PTR [ebp+0x14]
  42798e:	push   DWORD PTR [ebp+0x10]
  427991:	push   DWORD PTR [ebp+0xc]
  427994:	push   DWORD PTR [ebp+0x8]
  427997:	call   DWORD PTR ds:0x429100
  42799d:	mov    esi,eax
  42799f:	cmp    DWORD PTR [ebp-0x34],ebx
  4279a2:	je     0x4279ad
  4279a4:	push   DWORD PTR [ebp-0x34]
  4279a7:	call   0x425e9a
  4279ac:	pop    ecx
  4279ad:	mov    eax,esi
  4279af:	lea    esp,[ebp-0x54]
  4279b2:	call   0x4252cb
  4279b7:	ret    
  4279b8:	push   0x1c
  4279ba:	push   0x429dd0
  4279bf:	call   0x425290
  4279c4:	xor    esi,esi
  4279c6:	cmp    DWORD PTR ds:0x467380,esi
  4279cc:	jne    0x427a03
  4279ce:	lea    eax,[ebp-0x1c]
  4279d1:	push   eax
  4279d2:	xor    edi,edi
  4279d4:	inc    edi
  4279d5:	push   edi
  4279d6:	push   0x429da4
  4279db:	push   edi
  4279dc:	call   DWORD PTR ds:0x429110
  4279e2:	test   eax,eax
  4279e4:	je     0x4279ee
  4279e6:	mov    DWORD PTR ds:0x467380,edi
  4279ec:	jmp    0x427a03
  4279ee:	call   DWORD PTR ds:0x429034
  4279f4:	cmp    eax,0x78
  4279f7:	jne    0x427a03
  4279f9:	mov    DWORD PTR ds:0x467380,0x2
  427a03:	mov    eax,ds:0x467380
  427a08:	cmp    eax,0x2
  427a0b:	je     0x427afb
  427a11:	cmp    eax,esi
  427a13:	je     0x427afb
  427a19:	cmp    eax,0x1
  427a1c:	jne    0x427b21
  427a22:	mov    DWORD PTR [ebp-0x20],esi
  427a25:	mov    DWORD PTR [ebp-0x24],esi
  427a28:	cmp    DWORD PTR [ebp+0x18],esi
  427a2b:	jne    0x427a35
  427a2d:	mov    eax,ds:0x467374
  427a32:	mov    DWORD PTR [ebp+0x18],eax
  427a35:	push   esi
  427a36:	push   esi
  427a37:	push   DWORD PTR [ebp+0x10]
  427a3a:	push   DWORD PTR [ebp+0xc]
  427a3d:	xor    eax,eax
  427a3f:	cmp    DWORD PTR [ebp+0x20],esi
  427a42:	setne  al
  427a45:	lea    eax,[eax*8+0x1]
  427a4c:	push   eax
  427a4d:	push   DWORD PTR [ebp+0x18]
  427a50:	call   DWORD PTR ds:0x429104
  427a56:	mov    edi,eax
  427a58:	mov    DWORD PTR [ebp-0x28],edi
  427a5b:	test   edi,edi
  427a5d:	je     0x427b21
  427a63:	and    DWORD PTR [ebp-0x4],0x0
  427a67:	lea    ebx,[edi+edi*1]
  427a6a:	mov    eax,ebx
  427a6c:	add    eax,0x3
  427a6f:	and    eax,0xfffffffc
  427a72:	call   0x4252e0
  427a77:	mov    DWORD PTR [ebp-0x18],esp
  427a7a:	mov    esi,esp
  427a7c:	mov    DWORD PTR [ebp-0x2c],esi
  427a7f:	push   ebx
  427a80:	push   0x0
  427a82:	push   esi
  427a83:	call   0x427b90
  427a88:	add    esp,0xc
  427a8b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427a8f:	jmp    0x427aa6
  427a91:	xor    eax,eax
  427a93:	inc    eax
  427a94:	ret    
  427a95:	mov    esp,DWORD PTR [ebp-0x18]
  427a98:	call   0x428725
  427a9d:	xor    esi,esi
  427a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa3:	mov    edi,DWORD PTR [ebp-0x28]
  427aa6:	test   esi,esi
  427aa8:	jne    0x427ac1
  427aaa:	push   edi
  427aab:	push   0x2
  427aad:	call   0x4263a8
  427ab2:	pop    ecx
  427ab3:	pop    ecx
  427ab4:	mov    esi,eax
  427ab6:	test   esi,esi
  427ab8:	je     0x427b21
  427aba:	mov    DWORD PTR [ebp-0x24],0x1
  427ac1:	push   edi
  427ac2:	push   esi
  427ac3:	push   DWORD PTR [ebp+0x10]
  427ac6:	push   DWORD PTR [ebp+0xc]
  427ac9:	push   0x1
  427acb:	push   DWORD PTR [ebp+0x18]
  427ace:	call   DWORD PTR ds:0x429104
  427ad4:	test   eax,eax
  427ad6:	je     0x427ae9
  427ad8:	push   DWORD PTR [ebp+0x14]
  427adb:	push   eax
  427adc:	push   esi
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429110
  427ae6:	mov    DWORD PTR [ebp-0x20],eax
  427ae9:	cmp    DWORD PTR [ebp-0x24],0x0
  427aed:	je     0x427af6
  427aef:	push   esi
  427af0:	call   0x425e9a
  427af5:	pop    ecx
  427af6:	mov    eax,DWORD PTR [ebp-0x20]
  427af9:	jmp    0x427b69
  427afb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427afe:	cmp    ebx,esi
  427b00:	jne    0x427b08
  427b02:	mov    ebx,DWORD PTR ds:0x467364
  427b08:	mov    edi,DWORD PTR [ebp+0x18]
  427b0b:	test   edi,edi
  427b0d:	jne    0x427b15
  427b0f:	mov    edi,DWORD PTR ds:0x467374
  427b15:	push   ebx
  427b16:	call   0x42850d
  427b1b:	pop    ecx
  427b1c:	cmp    eax,0xffffffff
  427b1f:	jne    0x427b25
  427b21:	xor    eax,eax
  427b23:	jmp    0x427b69
  427b25:	cmp    eax,edi
  427b27:	je     0x427b47
  427b29:	push   0x0
  427b2b:	push   0x0
  427b2d:	lea    ecx,[ebp+0x10]
  427b30:	push   ecx
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   eax
  427b35:	push   edi
  427b36:	call   0x428556
  427b3b:	add    esp,0x18
  427b3e:	mov    esi,eax
  427b40:	test   esi,esi
  427b42:	je     0x427b21
  427b44:	mov    DWORD PTR [ebp+0xc],esi
  427b47:	push   DWORD PTR [ebp+0x14]
  427b4a:	push   DWORD PTR [ebp+0x10]
  427b4d:	push   DWORD PTR [ebp+0xc]
  427b50:	push   DWORD PTR [ebp+0x8]
  427b53:	push   ebx
  427b54:	call   DWORD PTR ds:0x42910c
  427b5a:	mov    edi,eax
  427b5c:	test   esi,esi
  427b5e:	je     0x427b67
  427b60:	push   esi
  427b61:	call   0x425e9a
  427b66:	pop    ecx
  427b67:	mov    eax,edi
  427b69:	lea    esp,[ebp-0x38]
  427b6c:	call   0x4252cb
  427b71:	ret    
  427b72:	mov    eax,ds:0x467384
  427b77:	test   eax,eax
  427b79:	je     0x427b8a
  427b7b:	push   DWORD PTR [esp+0x4]
  427b7f:	call   eax
  427b81:	test   eax,eax
  427b83:	pop    ecx
  427b84:	je     0x427b8a
  427b86:	xor    eax,eax
  427b88:	inc    eax
  427b89:	ret    
  427b8a:	xor    eax,eax
  427b8c:	ret    
  427b8d:	int3   
  427b8e:	int3   
  427b8f:	int3   
  427b90:	mov    edx,DWORD PTR [esp+0xc]
  427b94:	mov    ecx,DWORD PTR [esp+0x4]
  427b98:	test   edx,edx
  427b9a:	je     0x427beb
  427b9c:	xor    eax,eax
  427b9e:	mov    al,BYTE PTR [esp+0x8]
  427ba2:	push   edi
  427ba3:	mov    edi,ecx
  427ba5:	cmp    edx,0x4
  427ba8:	jb     0x427bdb
  427baa:	neg    ecx
  427bac:	and    ecx,0x3
  427baf:	je     0x427bbd
  427bb1:	sub    edx,ecx
  427bb3:	mov    BYTE PTR [edi],al
  427bb5:	add    edi,0x1
  427bb8:	sub    ecx,0x1
  427bbb:	jne    0x427bb3
  427bbd:	mov    ecx,eax
  427bbf:	shl    eax,0x8
  427bc2:	add    eax,ecx
  427bc4:	mov    ecx,eax
  427bc6:	shl    eax,0x10
  427bc9:	add    eax,ecx
  427bcb:	mov    ecx,edx
  427bcd:	and    edx,0x3
  427bd0:	shr    ecx,0x2
  427bd3:	je     0x427bdb
  427bd5:	rep stos DWORD PTR es:[edi],eax
  427bd7:	test   edx,edx
  427bd9:	je     0x427be5
  427bdb:	mov    BYTE PTR [edi],al
  427bdd:	add    edi,0x1
  427be0:	sub    edx,0x1
  427be3:	jne    0x427bdb
  427be5:	mov    eax,DWORD PTR [esp+0x8]
  427be9:	pop    edi
  427bea:	ret    
  427beb:	mov    eax,DWORD PTR [esp+0x4]
  427bef:	ret    
  427bf0:	push   esi
  427bf1:	mov    esi,DWORD PTR [esp+0x8]
  427bf5:	test   esi,esi
  427bf7:	je     0x427d7e
  427bfd:	push   DWORD PTR [esi+0x4]
  427c00:	call   0x425e9a
  427c05:	push   DWORD PTR [esi+0x8]
  427c08:	call   0x425e9a
  427c0d:	push   DWORD PTR [esi+0xc]
  427c10:	call   0x425e9a
  427c15:	push   DWORD PTR [esi+0x10]
  427c18:	call   0x425e9a
  427c1d:	push   DWORD PTR [esi+0x14]
  427c20:	call   0x425e9a
  427c25:	push   DWORD PTR [esi+0x18]
  427c28:	call   0x425e9a
  427c2d:	push   DWORD PTR [esi]
  427c2f:	call   0x425e9a
  427c34:	push   DWORD PTR [esi+0x20]
  427c37:	call   0x425e9a
  427c3c:	push   DWORD PTR [esi+0x24]
  427c3f:	call   0x425e9a
  427c44:	push   DWORD PTR [esi+0x28]
  427c47:	call   0x425e9a
  427c4c:	push   DWORD PTR [esi+0x2c]
  427c4f:	call   0x425e9a
  427c54:	push   DWORD PTR [esi+0x30]
  427c57:	call   0x425e9a
  427c5c:	push   DWORD PTR [esi+0x34]
  427c5f:	call   0x425e9a
  427c64:	push   DWORD PTR [esi+0x1c]
  427c67:	call   0x425e9a
  427c6c:	push   DWORD PTR [esi+0x38]
  427c6f:	call   0x425e9a
  427c74:	push   DWORD PTR [esi+0x3c]
  427c77:	call   0x425e9a
  427c7c:	add    esp,0x40
  427c7f:	push   DWORD PTR [esi+0x40]
  427c82:	call   0x425e9a
  427c87:	push   DWORD PTR [esi+0x44]
  427c8a:	call   0x425e9a
  427c8f:	push   DWORD PTR [esi+0x48]
  427c92:	call   0x425e9a
  427c97:	push   DWORD PTR [esi+0x4c]
  427c9a:	call   0x425e9a
  427c9f:	push   DWORD PTR [esi+0x50]
  427ca2:	call   0x425e9a
  427ca7:	push   DWORD PTR [esi+0x54]
  427caa:	call   0x425e9a
  427caf:	push   DWORD PTR [esi+0x58]
  427cb2:	call   0x425e9a
  427cb7:	push   DWORD PTR [esi+0x5c]
  427cba:	call   0x425e9a
  427cbf:	push   DWORD PTR [esi+0x60]
  427cc2:	call   0x425e9a
  427cc7:	push   DWORD PTR [esi+0x64]
  427cca:	call   0x425e9a
  427ccf:	push   DWORD PTR [esi+0x68]
  427cd2:	call   0x425e9a
  427cd7:	push   DWORD PTR [esi+0x6c]
  427cda:	call   0x425e9a
  427cdf:	push   DWORD PTR [esi+0x70]
  427ce2:	call   0x425e9a
  427ce7:	push   DWORD PTR [esi+0x74]
  427cea:	call   0x425e9a
  427cef:	push   DWORD PTR [esi+0x78]
  427cf2:	call   0x425e9a
  427cf7:	push   DWORD PTR [esi+0x7c]
  427cfa:	call   0x425e9a
  427cff:	add    esp,0x40
  427d02:	push   DWORD PTR [esi+0x80]
  427d08:	call   0x425e9a
  427d0d:	push   DWORD PTR [esi+0x84]
  427d13:	call   0x425e9a
  427d18:	push   DWORD PTR [esi+0x88]
  427d1e:	call   0x425e9a
  427d23:	push   DWORD PTR [esi+0x8c]
  427d29:	call   0x425e9a
  427d2e:	push   DWORD PTR [esi+0x90]
  427d34:	call   0x425e9a
  427d39:	push   DWORD PTR [esi+0x94]
  427d3f:	call   0x425e9a
  427d44:	push   DWORD PTR [esi+0x98]
  427d4a:	call   0x425e9a
  427d4f:	push   DWORD PTR [esi+0x9c]
  427d55:	call   0x425e9a
  427d5a:	push   DWORD PTR [esi+0xa0]
  427d60:	call   0x425e9a
  427d65:	push   DWORD PTR [esi+0xa4]
  427d6b:	call   0x425e9a
  427d70:	push   DWORD PTR [esi+0xa8]
  427d76:	call   0x425e9a
  427d7b:	add    esp,0x2c
  427d7e:	pop    esi
  427d7f:	ret    
  427d80:	push   esi
  427d81:	mov    esi,DWORD PTR [esp+0x8]
  427d85:	test   esi,esi
  427d87:	je     0x427ddd
  427d89:	mov    eax,DWORD PTR [esi]
  427d8b:	mov    ecx,DWORD PTR ds:0x466ef4
  427d91:	cmp    eax,DWORD PTR [ecx]
  427d93:	je     0x427da4
  427d95:	cmp    eax,DWORD PTR ds:0x466ec4
  427d9b:	je     0x427da4
  427d9d:	push   eax
  427d9e:	call   0x425e9a
  427da3:	pop    ecx
  427da4:	mov    eax,DWORD PTR [esi+0x4]
  427da7:	mov    ecx,DWORD PTR ds:0x466ef4
  427dad:	cmp    eax,DWORD PTR [ecx+0x4]
  427db0:	je     0x427dc1
  427db2:	cmp    eax,DWORD PTR ds:0x466ec8
  427db8:	je     0x427dc1
  427dba:	push   eax
  427dbb:	call   0x425e9a
  427dc0:	pop    ecx
  427dc1:	mov    esi,DWORD PTR [esi+0x8]
  427dc4:	mov    eax,ds:0x466ef4
  427dc9:	cmp    esi,DWORD PTR [eax+0x8]
  427dcc:	je     0x427ddd
  427dce:	cmp    esi,DWORD PTR ds:0x466ecc
  427dd4:	je     0x427ddd
  427dd6:	push   esi
  427dd7:	call   0x425e9a
  427ddc:	pop    ecx
  427ddd:	pop    esi
  427dde:	ret    
  427ddf:	push   esi
  427de0:	mov    esi,DWORD PTR [esp+0x8]
  427de4:	test   esi,esi
  427de6:	je     0x427eb6
  427dec:	mov    eax,DWORD PTR [esi+0xc]
  427def:	mov    ecx,DWORD PTR ds:0x466ef4
  427df5:	cmp    eax,DWORD PTR [ecx+0xc]
  427df8:	je     0x427e09
  427dfa:	cmp    eax,DWORD PTR ds:0x466ed0
  427e00:	je     0x427e09
  427e02:	push   eax
  427e03:	call   0x425e9a
  427e08:	pop    ecx
  427e09:	mov    eax,DWORD PTR [esi+0x10]
  427e0c:	mov    ecx,DWORD PTR ds:0x466ef4
  427e12:	cmp    eax,DWORD PTR [ecx+0x10]
  427e15:	je     0x427e26
  427e17:	cmp    eax,DWORD PTR ds:0x466ed4
  427e1d:	je     0x427e26
  427e1f:	push   eax
  427e20:	call   0x425e9a
  427e25:	pop    ecx
  427e26:	mov    eax,DWORD PTR [esi+0x14]
  427e29:	mov    ecx,DWORD PTR ds:0x466ef4
  427e2f:	cmp    eax,DWORD PTR [ecx+0x14]
  427e32:	je     0x427e43
  427e34:	cmp    eax,DWORD PTR ds:0x466ed8
  427e3a:	je     0x427e43
  427e3c:	push   eax
  427e3d:	call   0x425e9a
  427e42:	pop    ecx
  427e43:	mov    eax,DWORD PTR [esi+0x18]
  427e46:	mov    ecx,DWORD PTR ds:0x466ef4
  427e4c:	cmp    eax,DWORD PTR [ecx+0x18]
  427e4f:	je     0x427e60
  427e51:	cmp    eax,DWORD PTR ds:0x466edc
  427e57:	je     0x427e60
  427e59:	push   eax
  427e5a:	call   0x425e9a
  427e5f:	pop    ecx
  427e60:	mov    eax,DWORD PTR [esi+0x1c]
  427e63:	mov    ecx,DWORD PTR ds:0x466ef4
  427e69:	cmp    eax,DWORD PTR [ecx+0x1c]
  427e6c:	je     0x427e7d
  427e6e:	cmp    eax,DWORD PTR ds:0x466ee0
  427e74:	je     0x427e7d
  427e76:	push   eax
  427e77:	call   0x425e9a
  427e7c:	pop    ecx
  427e7d:	mov    eax,DWORD PTR [esi+0x20]
  427e80:	mov    ecx,DWORD PTR ds:0x466ef4
  427e86:	cmp    eax,DWORD PTR [ecx+0x20]
  427e89:	je     0x427e9a
  427e8b:	cmp    eax,DWORD PTR ds:0x466ee4
  427e91:	je     0x427e9a
  427e93:	push   eax
  427e94:	call   0x425e9a
  427e99:	pop    ecx
  427e9a:	mov    esi,DWORD PTR [esi+0x24]
  427e9d:	mov    eax,ds:0x466ef4
  427ea2:	cmp    esi,DWORD PTR [eax+0x24]
  427ea5:	je     0x427eb6
  427ea7:	cmp    esi,DWORD PTR ds:0x466ee8
  427ead:	je     0x427eb6
  427eaf:	push   esi
  427eb0:	call   0x425e9a
  427eb5:	pop    ecx
  427eb6:	pop    esi
  427eb7:	ret    
  427eb8:	int3   
  427eb9:	int3   
  427eba:	int3   
  427ebb:	int3   
  427ebc:	int3   
  427ebd:	int3   
  427ebe:	int3   
  427ebf:	int3   
  427ec0:	push   ebp
  427ec1:	mov    ebp,esp
  427ec3:	push   esi
  427ec4:	xor    eax,eax
  427ec6:	push   eax
  427ec7:	push   eax
  427ec8:	push   eax
  427ec9:	push   eax
  427eca:	push   eax
  427ecb:	push   eax
  427ecc:	push   eax
  427ecd:	push   eax
  427ece:	mov    edx,DWORD PTR [ebp+0xc]
  427ed1:	lea    ecx,[ecx+0x0]
  427ed4:	mov    al,BYTE PTR [edx]
  427ed6:	or     al,al
  427ed8:	je     0x427ee3
  427eda:	add    edx,0x1
  427edd:	bts    DWORD PTR [esp],eax
  427ee1:	jmp    0x427ed4
  427ee3:	mov    esi,DWORD PTR [ebp+0x8]
  427ee6:	or     ecx,0xffffffff
  427ee9:	lea    ecx,[ecx+0x0]
  427eec:	add    ecx,0x1
  427eef:	mov    al,BYTE PTR [esi]
  427ef1:	or     al,al
  427ef3:	je     0x427efe
  427ef5:	add    esi,0x1
  427ef8:	bt     DWORD PTR [esp],eax
  427efc:	jae    0x427eec
  427efe:	mov    eax,ecx
  427f00:	add    esp,0x20
  427f03:	pop    esi
  427f04:	leave  
  427f05:	ret    
  427f06:	int3   
  427f07:	int3   
  427f08:	int3   
  427f09:	int3   
  427f0a:	int3   
  427f0b:	int3   
  427f0c:	int3   
  427f0d:	int3   
  427f0e:	int3   
  427f0f:	int3   
  427f10:	mov    edx,DWORD PTR [esp+0x4]
  427f14:	mov    ecx,DWORD PTR [esp+0x8]
  427f18:	test   edx,0x3
  427f1e:	jne    0x427f5c
  427f20:	mov    eax,DWORD PTR [edx]
  427f22:	cmp    al,BYTE PTR [ecx]
  427f24:	jne    0x427f54
  427f26:	or     al,al
  427f28:	je     0x427f50
  427f2a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f2d:	jne    0x427f54
  427f2f:	or     ah,ah
  427f31:	je     0x427f50
  427f33:	shr    eax,0x10
  427f36:	cmp    al,BYTE PTR [ecx+0x2]
  427f39:	jne    0x427f54
  427f3b:	or     al,al
  427f3d:	je     0x427f50
  427f3f:	cmp    ah,BYTE PTR [ecx+0x3]
  427f42:	jne    0x427f54
  427f44:	add    ecx,0x4
  427f47:	add    edx,0x4
  427f4a:	or     ah,ah
  427f4c:	jne    0x427f20
  427f4e:	mov    edi,edi
  427f50:	xor    eax,eax
  427f52:	ret    
  427f53:	nop
  427f54:	sbb    eax,eax
  427f56:	shl    eax,1
  427f58:	add    eax,0x1
  427f5b:	ret    
  427f5c:	test   edx,0x1
  427f62:	je     0x427f7c
  427f64:	mov    al,BYTE PTR [edx]
  427f66:	add    edx,0x1
  427f69:	cmp    al,BYTE PTR [ecx]
  427f6b:	jne    0x427f54
  427f6d:	add    ecx,0x1
  427f70:	or     al,al
  427f72:	je     0x427f50
  427f74:	test   edx,0x2
  427f7a:	je     0x427f20
  427f7c:	mov    ax,WORD PTR [edx]
  427f7f:	add    edx,0x2
  427f82:	cmp    al,BYTE PTR [ecx]
  427f84:	jne    0x427f54
  427f86:	or     al,al
  427f88:	je     0x427f50
  427f8a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f8d:	jne    0x427f54
  427f8f:	or     ah,ah
  427f91:	je     0x427f50
  427f93:	add    ecx,0x2
  427f96:	jmp    0x427f20
  427f98:	int3   
  427f99:	int3   
  427f9a:	int3   
  427f9b:	int3   
  427f9c:	int3   
  427f9d:	int3   
  427f9e:	int3   
  427f9f:	int3   
  427fa0:	mov    eax,DWORD PTR [esp+0xc]
  427fa4:	test   eax,eax
  427fa6:	je     0x427ff2
  427fa8:	mov    edx,DWORD PTR [esp+0x4]
  427fac:	push   esi
  427fad:	push   edi
  427fae:	mov    esi,edx
  427fb0:	mov    edi,DWORD PTR [esp+0x10]
  427fb4:	or     edx,edi
  427fb6:	and    edx,0x3
  427fb9:	je     0x427ff3
  427fbb:	test   eax,0x1
  427fc0:	je     0x427fd3
  427fc2:	mov    cl,BYTE PTR [esi]
  427fc4:	cmp    cl,BYTE PTR [edi]
  427fc6:	jne    0x428020
  427fc8:	add    esi,0x1
  427fcb:	add    edi,0x1
  427fce:	sub    eax,0x1
  427fd1:	je     0x427ff0
  427fd3:	mov    cl,BYTE PTR [esi]
  427fd5:	mov    dl,BYTE PTR [edi]
  427fd7:	cmp    cl,dl
  427fd9:	jne    0x428020
  427fdb:	mov    cl,BYTE PTR [esi+0x1]
  427fde:	mov    dl,BYTE PTR [edi+0x1]
  427fe1:	cmp    cl,dl
  427fe3:	jne    0x428020
  427fe5:	add    edi,0x2
  427fe8:	add    esi,0x2
  427feb:	sub    eax,0x2
  427fee:	jne    0x427fd3
  427ff0:	pop    edi
  427ff1:	pop    esi
  427ff2:	ret    
  427ff3:	mov    ecx,eax
  427ff5:	and    eax,0x3
  427ff8:	shr    ecx,0x2
  427ffb:	je     0x428028
  427ffd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fff:	je     0x428028
  428001:	mov    ecx,DWORD PTR [esi-0x4]
  428004:	mov    edx,DWORD PTR [edi-0x4]
  428007:	cmp    cl,dl
  428009:	jne    0x42801b
  42800b:	cmp    ch,dh
  42800d:	jne    0x42801b
  42800f:	shr    ecx,0x10
  428012:	shr    edx,0x10
  428015:	cmp    cl,dl
  428017:	jne    0x42801b
  428019:	cmp    ch,dh
  42801b:	mov    eax,0x0
  428020:	sbb    eax,eax
  428022:	pop    edi
  428023:	sbb    eax,0xffffffff
  428026:	pop    esi
  428027:	ret    
  428028:	test   eax,eax
  42802a:	je     0x427ff0
  42802c:	mov    edx,DWORD PTR [esi]
  42802e:	mov    ecx,DWORD PTR [edi]
  428030:	cmp    dl,cl
  428032:	jne    0x42801b
  428034:	sub    eax,0x1
  428037:	je     0x428055
  428039:	cmp    dh,ch
  42803b:	jne    0x42801b
  42803d:	sub    eax,0x1
  428040:	je     0x428055
  428042:	and    ecx,0xff0000
  428048:	and    edx,0xff0000
  42804e:	cmp    edx,ecx
  428050:	jne    0x42801b
  428052:	sub    eax,0x1
  428055:	pop    edi
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   edi
  428064:	push   esi
  428065:	push   ebx
  428066:	mov    ecx,DWORD PTR [ebp+0x10]
  428069:	jecxz  0x428092
  42806b:	mov    ebx,ecx
  42806d:	mov    edi,DWORD PTR [ebp+0x8]
  428070:	mov    esi,edi
  428072:	xor    eax,eax
  428074:	repnz scas al,BYTE PTR es:[edi]
  428076:	neg    ecx
  428078:	add    ecx,ebx
  42807a:	mov    edi,esi
  42807c:	mov    esi,DWORD PTR [ebp+0xc]
  42807f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428081:	mov    al,BYTE PTR [esi-0x1]
  428084:	xor    ecx,ecx
  428086:	cmp    al,BYTE PTR [edi-0x1]
  428089:	ja     0x428090
  42808b:	je     0x428092
  42808d:	sub    ecx,0x2
  428090:	not    ecx
  428092:	mov    eax,ecx
  428094:	pop    ebx
  428095:	pop    esi
  428096:	pop    edi
  428097:	leave  
  428098:	ret    
  428099:	int3   
  42809a:	int3   
  42809b:	int3   
  42809c:	int3   
  42809d:	int3   
  42809e:	int3   
  42809f:	int3   
  4280a0:	push   ebp
  4280a1:	mov    ebp,esp
  4280a3:	push   esi
  4280a4:	xor    eax,eax
  4280a6:	push   eax
  4280a7:	push   eax
  4280a8:	push   eax
  4280a9:	push   eax
  4280aa:	push   eax
  4280ab:	push   eax
  4280ac:	push   eax
  4280ad:	push   eax
  4280ae:	mov    edx,DWORD PTR [ebp+0xc]
  4280b1:	lea    ecx,[ecx+0x0]
  4280b4:	mov    al,BYTE PTR [edx]
  4280b6:	or     al,al
  4280b8:	je     0x4280c3
  4280ba:	add    edx,0x1
  4280bd:	bts    DWORD PTR [esp],eax
  4280c1:	jmp    0x4280b4
  4280c3:	mov    esi,DWORD PTR [ebp+0x8]
  4280c6:	mov    edi,edi
  4280c8:	mov    al,BYTE PTR [esi]
  4280ca:	or     al,al
  4280cc:	je     0x4280da
  4280ce:	add    esi,0x1
  4280d1:	bt     DWORD PTR [esp],eax
  4280d5:	jae    0x4280c8
  4280d7:	lea    eax,[esi-0x1]
  4280da:	add    esp,0x20
  4280dd:	pop    esi
  4280de:	leave  
  4280df:	ret    
  4280e0:	push   ebp
  4280e1:	mov    ebp,esp
  4280e3:	push   ebx
  4280e4:	push   esi
  4280e5:	push   edi
  4280e6:	push   ebp
  4280e7:	push   0x0
  4280e9:	push   0x0
  4280eb:	push   0x4280f8
  4280f0:	push   DWORD PTR [ebp+0x8]
  4280f3:	call   0x428b6e
  4280f8:	pop    ebp
  4280f9:	pop    edi
  4280fa:	pop    esi
  4280fb:	pop    ebx
  4280fc:	mov    esp,ebp
  4280fe:	pop    ebp
  4280ff:	ret    
  428100:	mov    ecx,DWORD PTR [esp+0x4]
  428104:	test   DWORD PTR [ecx+0x4],0x6
  42810b:	mov    eax,0x1
  428110:	je     0x428121
  428112:	mov    eax,DWORD PTR [esp+0x8]
  428116:	mov    edx,DWORD PTR [esp+0x10]
  42811a:	mov    DWORD PTR [edx],eax
  42811c:	mov    eax,0x3
  428121:	ret    
  428122:	push   ebx
  428123:	push   esi
  428124:	push   edi
  428125:	mov    eax,DWORD PTR [esp+0x10]
  428129:	push   eax
  42812a:	push   0xfffffffe
  42812c:	push   0x428100
  428131:	push   DWORD PTR fs:0x0
  428138:	mov    DWORD PTR fs:0x0,esp
  42813f:	mov    eax,DWORD PTR [esp+0x20]
  428143:	mov    ebx,DWORD PTR [eax+0x8]
  428146:	mov    esi,DWORD PTR [eax+0xc]
  428149:	cmp    esi,0xffffffff
  42814c:	je     0x42817c
  42814e:	cmp    esi,DWORD PTR [esp+0x24]
  428152:	je     0x42817c
  428154:	lea    esi,[esi+esi*2]
  428157:	mov    ecx,DWORD PTR [ebx+esi*4]
  42815a:	mov    DWORD PTR [esp+0x8],ecx
  42815e:	mov    DWORD PTR [eax+0xc],ecx
  428161:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428166:	jne    0x42817a
  428168:	push   0x101
  42816d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428171:	call   0x4281b6
  428176:	call   DWORD PTR [ebx+esi*4+0x8]
  42817a:	jmp    0x42813f
  42817c:	pop    DWORD PTR fs:0x0
  428183:	add    esp,0xc
  428186:	pop    edi
  428187:	pop    esi
  428188:	pop    ebx
  428189:	ret    
  42818a:	xor    eax,eax
  42818c:	mov    ecx,DWORD PTR fs:0x0
  428193:	cmp    DWORD PTR [ecx+0x4],0x428100
  42819a:	jne    0x4281ac
  42819c:	mov    edx,DWORD PTR [ecx+0xc]
  42819f:	mov    edx,DWORD PTR [edx+0xc]
  4281a2:	cmp    DWORD PTR [ecx+0x8],edx
  4281a5:	jne    0x4281ac
  4281a7:	mov    eax,0x1
  4281ac:	ret    
  4281ad:	push   ebx
  4281ae:	push   ecx
  4281af:	mov    ebx,0x466f0c
  4281b4:	jmp    0x4281c0
  4281b6:	push   ebx
  4281b7:	push   ecx
  4281b8:	mov    ebx,0x466f0c
  4281bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4281c0:	mov    DWORD PTR [ebx+0x8],ecx
  4281c3:	mov    DWORD PTR [ebx+0x4],eax
  4281c6:	mov    DWORD PTR [ebx+0xc],ebp
  4281c9:	pop    ecx
  4281ca:	pop    ebx
  4281cb:	ret    0x4
  4281ce:	int3   
  4281cf:	int3   
  4281d0:	push   ebp
  4281d1:	mov    ebp,esp
  4281d3:	push   edi
  4281d4:	push   esi
  4281d5:	mov    esi,DWORD PTR [ebp+0xc]
  4281d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4281db:	mov    edi,DWORD PTR [ebp+0x8]
  4281de:	mov    eax,ecx
  4281e0:	mov    edx,ecx
  4281e2:	add    eax,esi
  4281e4:	cmp    edi,esi
  4281e6:	jbe    0x4281f0
  4281e8:	cmp    edi,eax
  4281ea:	jb     0x42836c
  4281f0:	test   edi,0x3
  4281f6:	jne    0x42820c
  4281f8:	shr    ecx,0x2
  4281fb:	and    edx,0x3
  4281fe:	cmp    ecx,0x8
  428201:	jb     0x42822c
  428203:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428205:	jmp    DWORD PTR [edx*4+0x42831c]
  42820c:	mov    eax,edi
  42820e:	mov    edx,0x3
  428213:	sub    ecx,0x4
  428216:	jb     0x428224
  428218:	and    eax,0x3
  42821b:	add    ecx,eax
  42821d:	jmp    DWORD PTR [eax*4+0x428230]
  428224:	jmp    DWORD PTR [ecx*4+0x42832c]
  42822b:	nop
  42822c:	jmp    DWORD PTR [ecx*4+0x4282b0]
  428233:	nop
  428234:	inc    eax
  428235:	add    BYTE PTR [edx+0x0],0x6c
  428239:	add    BYTE PTR [edx+0x0],0x90
  42823d:	add    BYTE PTR [edx+0x0],0x23
  428241:	ror    DWORD PTR [edx-0x75f877fa],1
  428247:	inc    esi
  428248:	add    DWORD PTR [eax+0x468a0147],ecx
  42824e:	add    al,cl
  428250:	jmp    0x28a0a57
  428255:	add    esi,0x3
  428258:	add    edi,0x3
  42825b:	cmp    ecx,0x8
  42825e:	jb     0x42822c
  428260:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428262:	jmp    DWORD PTR [edx*4+0x42831c]
  428269:	lea    ecx,[ecx+0x0]
  42826c:	and    edx,ecx
  42826e:	mov    al,BYTE PTR [esi]
  428270:	mov    BYTE PTR [edi],al
  428272:	mov    al,BYTE PTR [esi+0x1]
  428275:	shr    ecx,0x2
  428278:	mov    BYTE PTR [edi+0x1],al
  42827b:	add    esi,0x2
  42827e:	add    edi,0x2
  428281:	cmp    ecx,0x8
  428284:	jb     0x42822c
  428286:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428288:	jmp    DWORD PTR [edx*4+0x42831c]
  42828f:	nop
  428290:	and    edx,ecx
  428292:	mov    al,BYTE PTR [esi]
  428294:	mov    BYTE PTR [edi],al
  428296:	add    esi,0x1
  428299:	shr    ecx,0x2
  42829c:	add    edi,0x1
  42829f:	cmp    ecx,0x8
  4282a2:	jb     0x42822c
  4282a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282a6:	jmp    DWORD PTR [edx*4+0x42831c]
  4282ad:	lea    ecx,[ecx+0x0]
  4282b0:	adc    eax,DWORD PTR [ebx-0x7cffffbe]
  4282b6:	inc    edx
  4282b7:	add    al,bh
  4282b9:	add    BYTE PTR [edx+0x0],0xf0
  4282bd:	add    BYTE PTR [edx+0x0],0xe8
  4282c1:	add    BYTE PTR [edx+0x0],0xe0
  4282c5:	add    BYTE PTR [edx+0x0],0xd8
  4282c9:	add    BYTE PTR [edx+0x0],0xd0
  4282cd:	add    BYTE PTR [edx+0x0],0x8b
  4282d1:	inc    esp
  4282d2:	mov    fs,esp
  4282d4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4282d8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4282dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4282e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4282e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4282e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4282ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4282f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4282f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4282f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4282fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  428300:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  428304:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  428308:	lea    eax,[ecx*4+0x0]
  42830f:	add    esi,eax
  428311:	add    edi,eax
  428313:	jmp    DWORD PTR [edx*4+0x42831c]
  42831a:	mov    edi,edi
  42831c:	sub    al,0x83
  42831e:	inc    edx
  42831f:	add    BYTE PTR [ebx+eax*4],dh
  428322:	inc    edx
  428323:	add    BYTE PTR [eax-0x7d],al
  428326:	inc    edx
  428327:	add    BYTE PTR [ebx+eax*4+0x42],dl
  42832b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  428331:	leave  
  428332:	ret    
  428333:	nop
  428334:	mov    al,BYTE PTR [esi]
  428336:	mov    BYTE PTR [edi],al
  428338:	mov    eax,DWORD PTR [ebp+0x8]
  42833b:	pop    esi
  42833c:	pop    edi
  42833d:	leave  
  42833e:	ret    
  42833f:	nop
  428340:	mov    al,BYTE PTR [esi]
  428342:	mov    BYTE PTR [edi],al
  428344:	mov    al,BYTE PTR [esi+0x1]
  428347:	mov    BYTE PTR [edi+0x1],al
  42834a:	mov    eax,DWORD PTR [ebp+0x8]
  42834d:	pop    esi
  42834e:	pop    edi
  42834f:	leave  
  428350:	ret    
  428351:	lea    ecx,[ecx+0x0]
  428354:	mov    al,BYTE PTR [esi]
  428356:	mov    BYTE PTR [edi],al
  428358:	mov    al,BYTE PTR [esi+0x1]
  42835b:	mov    BYTE PTR [edi+0x1],al
  42835e:	mov    al,BYTE PTR [esi+0x2]
  428361:	mov    BYTE PTR [edi+0x2],al
  428364:	mov    eax,DWORD PTR [ebp+0x8]
  428367:	pop    esi
  428368:	pop    edi
  428369:	leave  
  42836a:	ret    
  42836b:	nop
  42836c:	lea    esi,[ecx+esi*1-0x4]
  428370:	lea    edi,[ecx+edi*1-0x4]
  428374:	test   edi,0x3
  42837a:	jne    0x4283a0
  42837c:	shr    ecx,0x2
  42837f:	and    edx,0x3
  428382:	cmp    ecx,0x8
  428385:	jb     0x428394
  428387:	std    
  428388:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42838a:	cld    
  42838b:	jmp    DWORD PTR [edx*4+0x4284b8]
  428392:	mov    edi,edi
  428394:	neg    ecx
  428396:	jmp    DWORD PTR [ecx*4+0x428468]
  42839d:	lea    ecx,[ecx+0x0]
  4283a0:	mov    eax,edi
  4283a2:	mov    edx,0x3
  4283a7:	cmp    ecx,0x4
  4283aa:	jb     0x4283b8
  4283ac:	and    eax,0x3
  4283af:	sub    ecx,eax
  4283b1:	jmp    DWORD PTR [eax*4+0x4283bc]
  4283b8:	jmp    DWORD PTR [ecx*4+0x4284b8]
  4283bf:	nop
  4283c0:	int3   
  4283c1:	add    DWORD PTR [edx+0x0],0xfffffff0
  4283c5:	add    DWORD PTR [edx+0x0],0x18
  4283c9:	test   BYTE PTR [edx+0x0],al
  4283cc:	mov    al,BYTE PTR [esi+0x3]
  4283cf:	and    edx,ecx
  4283d1:	mov    BYTE PTR [edi+0x3],al
  4283d4:	sub    esi,0x1
  4283d7:	shr    ecx,0x2
  4283da:	sub    edi,0x1
  4283dd:	cmp    ecx,0x8
  4283e0:	jb     0x428394
  4283e2:	std    
  4283e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e5:	cld    
  4283e6:	jmp    DWORD PTR [edx*4+0x4284b8]
  4283ed:	lea    ecx,[ecx+0x0]
  4283f0:	mov    al,BYTE PTR [esi+0x3]
  4283f3:	and    edx,ecx
  4283f5:	mov    BYTE PTR [edi+0x3],al
  4283f8:	mov    al,BYTE PTR [esi+0x2]
  4283fb:	shr    ecx,0x2
  4283fe:	mov    BYTE PTR [edi+0x2],al
  428401:	sub    esi,0x2
  428404:	sub    edi,0x2
  428407:	cmp    ecx,0x8
  42840a:	jb     0x428394
  42840c:	std    
  42840d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840f:	cld    
  428410:	jmp    DWORD PTR [edx*4+0x4284b8]
  428417:	nop
  428418:	mov    al,BYTE PTR [esi+0x3]
  42841b:	and    edx,ecx
  42841d:	mov    BYTE PTR [edi+0x3],al
  428420:	mov    al,BYTE PTR [esi+0x2]
  428423:	mov    BYTE PTR [edi+0x2],al
  428426:	mov    al,BYTE PTR [esi+0x1]
  428429:	shr    ecx,0x2
  42842c:	mov    BYTE PTR [edi+0x1],al
  42842f:	sub    esi,0x3
  428432:	sub    edi,0x3
  428435:	cmp    ecx,0x8
  428438:	jb     0x428394
  42843e:	std    
  42843f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428441:	cld    
  428442:	jmp    DWORD PTR [edx*4+0x4284b8]
  428449:	lea    ecx,[ecx+0x0]
  42844c:	ins    BYTE PTR es:[edi],dx
  42844d:	test   BYTE PTR [edx+0x0],al
  428450:	je     0x4283d6
  428452:	inc    edx
  428453:	add    BYTE PTR [esp+eax*4+0x42],bh
  428457:	add    BYTE PTR [esp+eax*4-0x7b73ffbe],al
  42845e:	inc    edx
  42845f:	add    BYTE PTR [esp+eax*4-0x7b63ffbe],dl
  428466:	inc    edx
  428467:	add    BYTE PTR [edi-0x74ffbd7c],ch
  42846d:	inc    esp
  42846e:	mov    ds,WORD PTR [ecx+ecx*4]
  428471:	inc    esp
  428472:	(bad)  
  428473:	sbb    al,0x8b
  428475:	inc    esp
  428476:	mov    ds,WORD PTR [eax]
  428478:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42847c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428480:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428484:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428488:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42848c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428490:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428494:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428498:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42849c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4284a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4284a4:	lea    eax,[ecx*4+0x0]
  4284ab:	add    esi,eax
  4284ad:	add    edi,eax
  4284af:	jmp    DWORD PTR [edx*4+0x4284b8]
  4284b6:	mov    edi,edi
  4284b8:	enter  0x4284,0x0
  4284bc:	rol    BYTE PTR [edx+eax*2+0x4284e000],1
  4284c3:	add    ah,dh
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	mov    eax,DWORD PTR [ebp+0x8]
  4284cb:	pop    esi
  4284cc:	pop    edi
  4284cd:	leave  
  4284ce:	ret    
  4284cf:	nop
  4284d0:	mov    al,BYTE PTR [esi+0x3]
  4284d3:	mov    BYTE PTR [edi+0x3],al
  4284d6:	mov    eax,DWORD PTR [ebp+0x8]
  4284d9:	pop    esi
  4284da:	pop    edi
  4284db:	leave  
  4284dc:	ret    
  4284dd:	lea    ecx,[ecx+0x0]
  4284e0:	mov    al,BYTE PTR [esi+0x3]
  4284e3:	mov    BYTE PTR [edi+0x3],al
  4284e6:	mov    al,BYTE PTR [esi+0x2]
  4284e9:	mov    BYTE PTR [edi+0x2],al
  4284ec:	mov    eax,DWORD PTR [ebp+0x8]
  4284ef:	pop    esi
  4284f0:	pop    edi
  4284f1:	leave  
  4284f2:	ret    
  4284f3:	nop
  4284f4:	mov    al,BYTE PTR [esi+0x3]
  4284f7:	mov    BYTE PTR [edi+0x3],al
  4284fa:	mov    al,BYTE PTR [esi+0x2]
  4284fd:	mov    BYTE PTR [edi+0x2],al
  428500:	mov    al,BYTE PTR [esi+0x1]
  428503:	mov    BYTE PTR [edi+0x1],al
  428506:	mov    eax,DWORD PTR [ebp+0x8]
  428509:	pop    esi
  42850a:	pop    edi
  42850b:	leave  
  42850c:	ret    
  42850d:	push   ebp
  42850e:	mov    ebp,esp
  428510:	sub    esp,0xc
  428513:	mov    eax,ds:0x4669f0
  428518:	xor    eax,DWORD PTR [ebp+0x4]
  42851b:	and    BYTE PTR [ebp-0x6],0x0
  42851f:	push   0x6
  428521:	mov    DWORD PTR [ebp-0x4],eax
  428524:	lea    eax,[ebp-0xc]
  428527:	push   eax
  428528:	push   0x1004
  42852d:	push   DWORD PTR [ebp+0x8]
  428530:	call   DWORD PTR ds:0x429060
  428536:	test   eax,eax
  428538:	jne    0x42853f
  42853a:	or     eax,0xffffffff
  42853d:	jmp    0x428549
  42853f:	lea    eax,[ebp-0xc]
  428542:	push   eax
  428543:	call   0x42884e
  428548:	pop    ecx
  428549:	mov    ecx,DWORD PTR [ebp-0x4]
  42854c:	xor    ecx,DWORD PTR [ebp+0x4]
  42854f:	call   0x42595c
  428554:	leave  
  428555:	ret    
  428556:	push   0x38
  428558:	push   0x429f08
  42855d:	call   0x425290
  428562:	mov    eax,ds:0x4669f0
  428567:	xor    eax,DWORD PTR [ebp+0x4]
  42856a:	mov    DWORD PTR [ebp-0x1c],eax
  42856d:	xor    edi,edi
  42856f:	mov    DWORD PTR [ebp-0x20],edi
  428572:	mov    DWORD PTR [ebp-0x24],edi
  428575:	mov    eax,DWORD PTR [ebp+0x14]
  428578:	mov    ebx,DWORD PTR [eax]
  42857a:	mov    DWORD PTR [ebp-0x28],ebx
  42857d:	mov    DWORD PTR [ebp-0x2c],edi
  428580:	mov    eax,DWORD PTR [ebp+0x8]
  428583:	cmp    eax,DWORD PTR [ebp+0xc]
  428586:	je     0x4286ff
  42858c:	lea    ecx,[ebp-0x40]
  42858f:	push   ecx
  428590:	push   eax
  428591:	mov    esi,DWORD PTR ds:0x4290d8
  428597:	call   esi
  428599:	test   eax,eax
  42859b:	je     0x4285bd
  42859d:	cmp    DWORD PTR [ebp-0x40],0x1
  4285a1:	jne    0x4285bd
  4285a3:	lea    eax,[ebp-0x40]
  4285a6:	push   eax
  4285a7:	push   DWORD PTR [ebp+0xc]
  4285aa:	call   esi
  4285ac:	test   eax,eax
  4285ae:	je     0x4285bd
  4285b0:	cmp    DWORD PTR [ebp-0x40],0x1
  4285b4:	jne    0x4285bd
  4285b6:	mov    DWORD PTR [ebp-0x2c],0x1
  4285bd:	cmp    DWORD PTR [ebp-0x2c],edi
  4285c0:	je     0x4285dc
  4285c2:	cmp    ebx,0xffffffff
  4285c5:	je     0x4285cb
  4285c7:	mov    esi,ebx
  4285c9:	jmp    0x4285d7
  4285cb:	push   DWORD PTR [ebp+0x10]
  4285ce:	call   0x4258a0
  4285d3:	pop    ecx
  4285d4:	mov    esi,eax
  4285d6:	inc    esi
  4285d7:	mov    DWORD PTR [ebp-0x44],esi
  4285da:	jmp    0x4285df
  4285dc:	mov    esi,DWORD PTR [ebp-0x44]
  4285df:	cmp    DWORD PTR [ebp-0x2c],edi
  4285e2:	jne    0x4285fe
  4285e4:	push   edi
  4285e5:	push   edi
  4285e6:	push   ebx
  4285e7:	push   DWORD PTR [ebp+0x10]
  4285ea:	push   0x1
  4285ec:	push   DWORD PTR [ebp+0x8]
  4285ef:	call   DWORD PTR ds:0x429104
  4285f5:	mov    esi,eax
  4285f7:	mov    DWORD PTR [ebp-0x44],esi
  4285fa:	cmp    esi,edi
  4285fc:	je     0x428656
  4285fe:	mov    DWORD PTR [ebp-0x4],edi
  428601:	lea    eax,[esi+esi*1]
  428604:	add    eax,0x3
  428607:	and    eax,0xfffffffc
  42860a:	call   0x4252e0
  42860f:	mov    DWORD PTR [ebp-0x18],esp
  428612:	mov    ebx,esp
  428614:	mov    DWORD PTR [ebp-0x48],ebx
  428617:	lea    eax,[esi+esi*1]
  42861a:	push   eax
  42861b:	push   edi
  42861c:	push   ebx
  42861d:	call   0x427b90
  428622:	add    esp,0xc
  428625:	or     DWORD PTR [ebp-0x4],0xffffffff
  428629:	jmp    0x428642
  42862b:	xor    eax,eax
  42862d:	inc    eax
  42862e:	ret    
  42862f:	mov    esp,DWORD PTR [ebp-0x18]
  428632:	call   0x428725
  428637:	xor    edi,edi
  428639:	xor    ebx,ebx
  42863b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42863f:	mov    esi,DWORD PTR [ebp-0x44]
  428642:	cmp    ebx,edi
  428644:	jne    0x428664
  428646:	push   esi
  428647:	push   0x2
  428649:	call   0x4263a8
  42864e:	pop    ecx
  42864f:	pop    ecx
  428650:	mov    ebx,eax
  428652:	cmp    ebx,edi
  428654:	jne    0x42865d
  428656:	xor    eax,eax
  428658:	jmp    0x428711
  42865d:	mov    DWORD PTR [ebp-0x24],0x1
  428664:	push   esi
  428665:	push   ebx
  428666:	push   DWORD PTR [ebp-0x28]
  428669:	push   DWORD PTR [ebp+0x10]
  42866c:	push   0x1
  42866e:	push   DWORD PTR [ebp+0x8]
  428671:	call   DWORD PTR ds:0x429104
  428677:	test   eax,eax
  428679:	je     0x428702
  42867f:	cmp    DWORD PTR [ebp+0x18],edi
  428682:	je     0x4286a4
  428684:	push   edi
  428685:	push   edi
  428686:	push   DWORD PTR [ebp+0x1c]
  428689:	push   DWORD PTR [ebp+0x18]
  42868c:	push   esi
  42868d:	push   ebx
  42868e:	push   edi
  42868f:	push   DWORD PTR [ebp+0xc]
  428692:	call   DWORD PTR ds:0x429098
  428698:	test   eax,eax
  42869a:	je     0x428702
  42869c:	mov    eax,DWORD PTR [ebp+0x18]
  42869f:	mov    DWORD PTR [ebp-0x20],eax
  4286a2:	jmp    0x428702
  4286a4:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a7:	jne    0x4286bf
  4286a9:	push   edi
  4286aa:	push   edi
  4286ab:	push   edi
  4286ac:	push   edi
  4286ad:	push   esi
  4286ae:	push   ebx
  4286af:	push   edi
  4286b0:	push   DWORD PTR [ebp+0xc]
  4286b3:	call   DWORD PTR ds:0x429098
  4286b9:	mov    esi,eax
  4286bb:	cmp    esi,edi
  4286bd:	je     0x428702
  4286bf:	push   esi
  4286c0:	push   0x1
  4286c2:	call   0x4263a8
  4286c7:	pop    ecx
  4286c8:	pop    ecx
  4286c9:	mov    DWORD PTR [ebp-0x20],eax
  4286cc:	cmp    eax,edi
  4286ce:	je     0x428702
  4286d0:	push   edi
  4286d1:	push   edi
  4286d2:	push   esi
  4286d3:	push   eax
  4286d4:	push   esi
  4286d5:	push   ebx
  4286d6:	push   edi
  4286d7:	push   DWORD PTR [ebp+0xc]
  4286da:	call   DWORD PTR ds:0x429098
  4286e0:	cmp    eax,edi
  4286e2:	jne    0x4286f2
  4286e4:	push   DWORD PTR [ebp-0x20]
  4286e7:	call   0x425e9a
  4286ec:	pop    ecx
  4286ed:	mov    DWORD PTR [ebp-0x20],edi
  4286f0:	jmp    0x428702
  4286f2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4286f6:	je     0x428702
  4286f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4286fb:	mov    DWORD PTR [ecx],eax
  4286fd:	jmp    0x428702
  4286ff:	mov    ebx,DWORD PTR [ebp-0x48]
  428702:	cmp    DWORD PTR [ebp-0x24],edi
  428705:	je     0x42870e
  428707:	push   ebx
  428708:	call   0x425e9a
  42870d:	pop    ecx
  42870e:	mov    eax,DWORD PTR [ebp-0x20]
  428711:	lea    esp,[ebp-0x54]
  428714:	mov    ecx,DWORD PTR [ebp-0x1c]
  428717:	xor    ecx,DWORD PTR [ebp+0x4]
  42871a:	call   0x42595c
  42871f:	call   0x4252cb
  428724:	ret    
  428725:	push   ebp
  428726:	mov    ebp,esp
  428728:	sub    esp,0x48
  42872b:	push   ebx
  42872c:	push   esi
  42872d:	push   edi
  42872e:	push   0x4
  428730:	pop    eax
  428731:	call   0x4252e0
  428736:	mov    ebx,esp
  428738:	push   0x1c
  42873a:	lea    eax,[ebp-0x24]
  42873d:	push   eax
  42873e:	push   ebx
  42873f:	call   DWORD PTR ds:0x42903c
  428745:	test   eax,eax
  428747:	je     0x4287ba
  428749:	mov    edi,DWORD PTR [ebp-0x20]
  42874c:	lea    eax,[ebp-0x48]
  42874f:	push   eax
  428750:	call   DWORD PTR ds:0x429040
  428756:	mov    eax,DWORD PTR [ebp-0x44]
  428759:	lea    esi,[eax-0x1]
  42875c:	not    esi
  42875e:	and    esi,ebx
  428760:	sub    esi,eax
  428762:	mov    DWORD PTR [ebp-0x4],eax
  428765:	mov    eax,ds:0x467084
  42876a:	mov    ecx,eax
  42876c:	dec    ecx
  42876d:	neg    ecx
  42876f:	sbb    ecx,ecx
  428771:	and    ecx,0xffff1000
  428777:	add    ecx,0x11000
  42877d:	add    ecx,edi
  42877f:	cmp    esi,ecx
  428781:	jb     0x4287ba
  428783:	cmp    eax,0x1
  428786:	je     0x4287d2
  428788:	mov    ebx,edi
  42878a:	mov    edi,0x1000
  42878f:	push   0x1c
  428791:	lea    eax,[ebp-0x24]
  428794:	push   eax
  428795:	push   ebx
  428796:	call   DWORD PTR ds:0x42903c
  42879c:	test   eax,eax
  42879e:	je     0x4287ba
  4287a0:	add    ebx,DWORD PTR [ebp-0x18]
  4287a3:	test   DWORD PTR [ebp-0x14],edi
  4287a6:	je     0x42878f
  4287a8:	test   BYTE PTR [ebp-0xf],0x1
  4287ac:	mov    ebx,DWORD PTR [ebp-0x24]
  4287af:	je     0x4287b6
  4287b1:	xor    eax,eax
  4287b3:	inc    eax
  4287b4:	jmp    0x4287ee
  4287b6:	cmp    esi,ebx
  4287b8:	jae    0x4287be
  4287ba:	xor    eax,eax
  4287bc:	jmp    0x4287ee
  4287be:	push   0x4
  4287c0:	push   edi
  4287c1:	push   DWORD PTR [ebp-0x4]
  4287c4:	push   ebx
  4287c5:	call   DWORD PTR ds:0x4290e4
  4287cb:	mov    eax,ds:0x467084
  4287d0:	jmp    0x4287d4
  4287d2:	mov    ebx,esi
  4287d4:	dec    eax
  4287d5:	neg    eax
  4287d7:	sbb    eax,eax
  4287d9:	and    eax,0x103
  4287de:	lea    ecx,[ebp-0x8]
  4287e1:	push   ecx
  4287e2:	inc    eax
  4287e3:	push   eax
  4287e4:	push   DWORD PTR [ebp-0x4]
  4287e7:	push   ebx
  4287e8:	call   DWORD PTR ds:0x429024
  4287ee:	lea    esp,[ebp-0x54]
  4287f1:	pop    edi
  4287f2:	pop    esi
  4287f3:	pop    ebx
  4287f4:	leave  
  4287f5:	ret    
  4287f6:	int3   
  4287f7:	int3   
  4287f8:	int3   
  4287f9:	int3   
  4287fa:	int3   
  4287fb:	int3   
  4287fc:	int3   
  4287fd:	int3   
  4287fe:	int3   
  4287ff:	int3   
  428800:	push   ebp
  428801:	mov    ebp,esp
  428803:	push   edi
  428804:	push   esi
  428805:	push   ebx
  428806:	mov    esi,DWORD PTR [ebp+0xc]
  428809:	mov    edi,DWORD PTR [ebp+0x8]
  42880c:	mov    al,0xff
  42880e:	mov    edi,edi
  428810:	or     al,al
  428812:	je     0x428846
  428814:	mov    al,BYTE PTR [esi]
  428816:	add    esi,0x1
  428819:	mov    ah,BYTE PTR [edi]
  42881b:	add    edi,0x1
  42881e:	cmp    ah,al
  428820:	je     0x428810
  428822:	sub    al,0x41
  428824:	cmp    al,0x1a
  428826:	sbb    cl,cl
  428828:	and    cl,0x20
  42882b:	add    al,cl
  42882d:	add    al,0x41
  42882f:	xchg   al,ah
  428831:	sub    al,0x41
  428833:	cmp    al,0x1a
  428835:	sbb    cl,cl
  428837:	and    cl,0x20
  42883a:	add    al,cl
  42883c:	add    al,0x41
  42883e:	cmp    al,ah
  428840:	je     0x428810
  428842:	sbb    al,al
  428844:	sbb    al,0xff
  428846:	movsx  eax,al
  428849:	pop    ebx
  42884a:	pop    esi
  42884b:	pop    edi
  42884c:	leave  
  42884d:	ret    
  42884e:	push   esi
  42884f:	push   edi
  428850:	call   0x425145
  428855:	mov    edi,DWORD PTR [eax+0x64]
  428858:	cmp    edi,DWORD PTR ds:0x466b4c
  42885e:	je     0x428867
  428860:	call   0x4265ef
  428865:	mov    edi,eax
  428867:	mov    esi,DWORD PTR [esp+0xc]
  42886b:	cmp    DWORD PTR [edi+0x28],0x1
  42886f:	movzx  eax,BYTE PTR [esi]
  428872:	jle    0x428882
  428874:	push   0x8
  428876:	push   eax
  428877:	push   edi
  428878:	call   0x4288d6
  42887d:	add    esp,0xc
  428880:	jmp    0x42888c
  428882:	mov    ecx,DWORD PTR [edi+0x48]
  428885:	movzx  eax,BYTE PTR [ecx+eax*2]
  428889:	and    eax,0x8
  42888c:	test   eax,eax
  42888e:	je     0x428893
  428890:	inc    esi
  428891:	jmp    0x42886b
  428893:	movzx  ecx,BYTE PTR [esi]
  428896:	inc    esi
  428897:	cmp    ecx,0x2d
  42889a:	mov    edx,ecx
  42889c:	je     0x4288a3
  42889e:	cmp    ecx,0x2b
  4288a1:	jne    0x4288a7
  4288a3:	movzx  ecx,BYTE PTR [esi]
  4288a6:	inc    esi
  4288a7:	xor    eax,eax
  4288a9:	cmp    ecx,0x30
  4288ac:	jl     0x4288b8
  4288ae:	cmp    ecx,0x39
  4288b1:	jg     0x4288b8
  4288b3:	sub    ecx,0x30
  4288b6:	jmp    0x4288bb
  4288b8:	or     ecx,0xffffffff
  4288bb:	cmp    ecx,0xffffffff
  4288be:	je     0x4288cc
  4288c0:	lea    eax,[eax+eax*4]
  4288c3:	lea    eax,[ecx+eax*2]
  4288c6:	movzx  ecx,BYTE PTR [esi]
  4288c9:	inc    esi
  4288ca:	jmp    0x4288a9
  4288cc:	cmp    edx,0x2d
  4288cf:	pop    edi
  4288d0:	pop    esi
  4288d1:	jne    0x4288d5
  4288d3:	neg    eax
  4288d5:	ret    
  4288d6:	push   ebp
  4288d7:	mov    ebp,esp
  4288d9:	push   ecx
  4288da:	mov    eax,DWORD PTR [ebp+0xc]
  4288dd:	lea    ecx,[eax+0x1]
  4288e0:	cmp    ecx,0x100
  4288e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4288e9:	ja     0x4288f4
  4288eb:	mov    ecx,DWORD PTR [ecx+0x48]
  4288ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4288f2:	jmp    0x428948
  4288f4:	push   esi
  4288f5:	mov    edx,eax
  4288f7:	sar    edx,0x8
  4288fa:	push   edi
  4288fb:	mov    edi,DWORD PTR [ecx+0x48]
  4288fe:	movzx  esi,dl
  428901:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428906:	pop    edi
  428907:	pop    esi
  428908:	je     0x428919
  42890a:	and    BYTE PTR [ebp-0x2],0x0
  42890e:	push   0x2
  428910:	mov    BYTE PTR [ebp-0x3],al
  428913:	mov    BYTE PTR [ebp-0x4],dl
  428916:	pop    eax
  428917:	jmp    0x428923
  428919:	and    BYTE PTR [ebp-0x3],0x0
  42891d:	mov    BYTE PTR [ebp-0x4],al
  428920:	xor    eax,eax
  428922:	inc    eax
  428923:	push   0x1
  428925:	push   DWORD PTR [ecx+0x14]
  428928:	push   DWORD PTR [ecx+0x4]
  42892b:	lea    ecx,[ebp+0xe]
  42892e:	push   ecx
  42892f:	push   eax
  428930:	lea    eax,[ebp-0x4]
  428933:	push   eax
  428934:	push   0x1
  428936:	call   0x4279b8
  42893b:	add    esp,0x1c
  42893e:	test   eax,eax
  428940:	jne    0x428944
  428942:	leave  
  428943:	ret    
  428944:	movzx  eax,WORD PTR [ebp+0xe]
  428948:	and    eax,DWORD PTR [ebp+0x10]
  42894b:	leave  
  42894c:	ret    
  42894d:	int3   
  42894e:	int3   
  42894f:	int3   
  428950:	mov    eax,DWORD PTR [esp+0x8]
  428954:	mov    ecx,DWORD PTR [esp+0x10]
  428958:	or     ecx,eax
  42895a:	mov    ecx,DWORD PTR [esp+0xc]
  42895e:	jne    0x428969
  428960:	mov    eax,DWORD PTR [esp+0x4]
  428964:	mul    ecx
  428966:	ret    0x10
  428969:	push   ebx
  42896a:	mul    ecx
  42896c:	mov    ebx,eax
  42896e:	mov    eax,DWORD PTR [esp+0x8]
  428972:	mul    DWORD PTR [esp+0x14]
  428976:	add    ebx,eax
  428978:	mov    eax,DWORD PTR [esp+0x8]
  42897c:	mul    ecx
  42897e:	add    edx,ebx
  428980:	pop    ebx
  428981:	ret    0x10
  428984:	int3   
  428985:	int3   
  428986:	int3   
  428987:	int3   
  428988:	int3   
  428989:	int3   
  42898a:	int3   
  42898b:	int3   
  42898c:	int3   
  42898d:	int3   
  42898e:	int3   
  42898f:	int3   
  428990:	push   ebp
  428991:	mov    ebp,esp
  428993:	push   edi
  428994:	push   esi
  428995:	push   ebx
  428996:	mov    ecx,DWORD PTR [ebp+0x10]
  428999:	or     ecx,ecx
  42899b:	je     0x4289ea
  42899d:	mov    esi,DWORD PTR [ebp+0x8]
  4289a0:	mov    edi,DWORD PTR [ebp+0xc]
  4289a3:	mov    bh,0x41
  4289a5:	mov    bl,0x5a
  4289a7:	mov    dh,0x20
  4289a9:	lea    ecx,[ecx+0x0]
  4289ac:	mov    ah,BYTE PTR [esi]
  4289ae:	or     ah,ah
  4289b0:	mov    al,BYTE PTR [edi]
  4289b2:	je     0x4289db
  4289b4:	or     al,al
  4289b6:	je     0x4289db
  4289b8:	add    esi,0x1
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,bh
  4289c0:	jb     0x4289c8
  4289c2:	cmp    ah,bl
  4289c4:	ja     0x4289c8
  4289c6:	add    ah,dh
  4289c8:	cmp    al,bh
  4289ca:	jb     0x4289d2
  4289cc:	cmp    al,bl
  4289ce:	ja     0x4289d2
  4289d0:	add    al,dh
  4289d2:	cmp    ah,al
  4289d4:	jne    0x4289e1
  4289d6:	sub    ecx,0x1
  4289d9:	jne    0x4289ac
  4289db:	xor    ecx,ecx
  4289dd:	cmp    ah,al
  4289df:	je     0x4289ea
  4289e1:	mov    ecx,0xffffffff
  4289e6:	jb     0x4289ea
  4289e8:	neg    ecx
  4289ea:	mov    eax,ecx
  4289ec:	pop    ebx
  4289ed:	pop    esi
  4289ee:	pop    edi
  4289ef:	leave  
  4289f0:	ret    
  4289f1:	int3   
  4289f2:	int3   
  4289f3:	int3   
  4289f4:	int3   
  4289f5:	int3   
  4289f6:	int3   
  4289f7:	int3   
  4289f8:	int3   
  4289f9:	int3   
  4289fa:	int3   
  4289fb:	int3   
  4289fc:	int3   
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	push   esi
  428a01:	mov    eax,DWORD PTR [esp+0x14]
  428a05:	or     eax,eax
  428a07:	jne    0x428a31
  428a09:	mov    ecx,DWORD PTR [esp+0x10]
  428a0d:	mov    eax,DWORD PTR [esp+0xc]
  428a11:	xor    edx,edx
  428a13:	div    ecx
  428a15:	mov    ebx,eax
  428a17:	mov    eax,DWORD PTR [esp+0x8]
  428a1b:	div    ecx
  428a1d:	mov    esi,eax
  428a1f:	mov    eax,ebx
  428a21:	mul    DWORD PTR [esp+0x10]
  428a25:	mov    ecx,eax
  428a27:	mov    eax,esi
  428a29:	mul    DWORD PTR [esp+0x10]
  428a2d:	add    edx,ecx
  428a2f:	jmp    0x428a78
  428a31:	mov    ecx,eax
  428a33:	mov    ebx,DWORD PTR [esp+0x10]
  428a37:	mov    edx,DWORD PTR [esp+0xc]
  428a3b:	mov    eax,DWORD PTR [esp+0x8]
  428a3f:	shr    ecx,1
  428a41:	rcr    ebx,1
  428a43:	shr    edx,1
  428a45:	rcr    eax,1
  428a47:	or     ecx,ecx
  428a49:	jne    0x428a3f
  428a4b:	div    ebx
  428a4d:	mov    esi,eax
  428a4f:	mul    DWORD PTR [esp+0x14]
  428a53:	mov    ecx,eax
  428a55:	mov    eax,DWORD PTR [esp+0x10]
  428a59:	mul    esi
  428a5b:	add    edx,ecx
  428a5d:	jb     0x428a6d
  428a5f:	cmp    edx,DWORD PTR [esp+0xc]
  428a63:	ja     0x428a6d
  428a65:	jb     0x428a76
  428a67:	cmp    eax,DWORD PTR [esp+0x8]
  428a6b:	jbe    0x428a76
  428a6d:	dec    esi
  428a6e:	sub    eax,DWORD PTR [esp+0x10]
  428a72:	sbb    edx,DWORD PTR [esp+0x14]
  428a76:	xor    ebx,ebx
  428a78:	sub    eax,DWORD PTR [esp+0x8]
  428a7c:	sbb    edx,DWORD PTR [esp+0xc]
  428a80:	neg    edx
  428a82:	neg    eax
  428a84:	sbb    edx,0x0
  428a87:	mov    ecx,edx
  428a89:	mov    edx,ebx
  428a8b:	mov    ebx,ecx
  428a8d:	mov    ecx,eax
  428a8f:	mov    eax,esi
  428a91:	pop    esi
  428a92:	ret    0x10
  428a95:	int3   
  428a96:	int3   
  428a97:	int3   
  428a98:	int3   
  428a99:	int3   
  428a9a:	int3   
  428a9b:	int3   
  428a9c:	int3   
  428a9d:	int3   
  428a9e:	int3   
  428a9f:	int3   
  428aa0:	lea    eax,[edx-0x1]
  428aa3:	pop    ebx
  428aa4:	ret    
  428aa5:	lea    esp,[esp+0x0]
  428aac:	lea    esp,[esp+0x0]
  428ab0:	xor    eax,eax
  428ab2:	mov    al,BYTE PTR [esp+0x8]
  428ab6:	push   ebx
  428ab7:	mov    ebx,eax
  428ab9:	shl    eax,0x8
  428abc:	mov    edx,DWORD PTR [esp+0x8]
  428ac0:	test   edx,0x3
  428ac6:	je     0x428add
  428ac8:	mov    cl,BYTE PTR [edx]
  428aca:	add    edx,0x1
  428acd:	cmp    cl,bl
  428acf:	je     0x428aa0
  428ad1:	test   cl,cl
  428ad3:	je     0x428b26
  428ad5:	test   edx,0x3
  428adb:	jne    0x428ac8
  428add:	or     ebx,eax
  428adf:	push   edi
  428ae0:	mov    eax,ebx
  428ae2:	shl    ebx,0x10
  428ae5:	push   esi
  428ae6:	or     ebx,eax
  428ae8:	mov    ecx,DWORD PTR [edx]
  428aea:	mov    edi,0x7efefeff
  428aef:	mov    eax,ecx
  428af1:	mov    esi,edi
  428af3:	xor    ecx,ebx
  428af5:	add    esi,eax
  428af7:	add    edi,ecx
  428af9:	xor    ecx,0xffffffff
  428afc:	xor    eax,0xffffffff
  428aff:	xor    ecx,edi
  428b01:	xor    eax,esi
  428b03:	add    edx,0x4
  428b06:	and    ecx,0x81010100
  428b0c:	jne    0x428b2a
  428b0e:	and    eax,0x81010100
  428b13:	je     0x428ae8
  428b15:	and    eax,0x1010100
  428b1a:	jne    0x428b24
  428b1c:	and    esi,0x80000000
  428b22:	jne    0x428ae8
  428b24:	pop    esi
  428b25:	pop    edi
  428b26:	pop    ebx
  428b27:	xor    eax,eax
  428b29:	ret    
  428b2a:	mov    eax,DWORD PTR [edx-0x4]
  428b2d:	cmp    al,bl
  428b2f:	je     0x428b67
  428b31:	test   al,al
  428b33:	je     0x428b24
  428b35:	cmp    ah,bl
  428b37:	je     0x428b60
  428b39:	test   ah,ah
  428b3b:	je     0x428b24
  428b3d:	shr    eax,0x10
  428b40:	cmp    al,bl
  428b42:	je     0x428b59
  428b44:	test   al,al
  428b46:	je     0x428b24
  428b48:	cmp    ah,bl
  428b4a:	je     0x428b52
  428b4c:	test   ah,ah
  428b4e:	je     0x428b24
  428b50:	jmp    0x428ae8
  428b52:	pop    esi
  428b53:	pop    edi
  428b54:	lea    eax,[edx-0x1]
  428b57:	pop    ebx
  428b58:	ret    
  428b59:	lea    eax,[edx-0x2]
  428b5c:	pop    esi
  428b5d:	pop    edi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	lea    eax,[edx-0x3]
  428b63:	pop    esi
  428b64:	pop    edi
  428b65:	pop    ebx
  428b66:	ret    
  428b67:	lea    eax,[edx-0x4]
  428b6a:	pop    esi
  428b6b:	pop    edi
  428b6c:	pop    ebx
  428b6d:	ret    
  428b6e:	jmp    DWORD PTR ds:0x42905c
