
04eef241e8c50ceb49245f3e906c1289ea9edd8d554471ec89d9d4e62b6bba64.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401065
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	ja     0x401065
  40103e:	jmp    0x401053
  401043:	push   0x42a28a
  401048:	push   0x4291e3
  40104d:	call   DWORD PTR ds:0x42a3f2
  401053:	mov    ecx,DWORD PTR ds:0x42a266
  401059:	dec    ecx
  40105a:	mov    DWORD PTR ds:0x42a266,ecx
  401060:	jmp    0x401024
  401065:	push   edi
  401066:	and    DWORD PTR ds:0x42a2b6,0x0
  401070:	mov    esi,DWORD PTR ds:0x42a2b6
  401076:	inc    esi
  401077:	mov    DWORD PTR ds:0x42a2b6,esi
  40107d:	cmp    DWORD PTR ds:0x42a2b6,0x4
  401084:	jg     0x4010ce
  40108a:	jmp    0x4010a5
  40108f:	push   0x5221
  401094:	push   0x42a2ce
  401099:	push   DWORD PTR [ebp-0x10]
  40109c:	push   DWORD PTR [ebp-0x14]
  40109f:	call   DWORD PTR ds:0x42a3f6
  4010a5:	cmp    DWORD PTR ds:0x42a2b6,0x3
  4010ac:	jne    0x4010c1
  4010b2:	xor    esi,esi
  4010b4:	or     esi,DWORD PTR ds:0x42a2b6
  4010ba:	inc    esi
  4010bb:	mov    DWORD PTR ds:0x42a2b6,esi
  4010c1:	cmp    DWORD PTR ds:0x42a2b6,0x15
  4010c8:	jb     0x401070
  4010ce:	mov    esi,0x75108aa
  4010d3:	mov    ecx,DWORD PTR ds:0x42a376
  4010d9:	mov    ecx,DWORD PTR [ecx]
  4010db:	add    DWORD PTR ds:0x42a256,ecx
  4010e1:	xor    eax,esi
  4010e3:	and    DWORD PTR ds:0x42a286,0x0
  4010ed:	mov    ecx,DWORD PTR ds:0x42a286
  4010f3:	inc    ecx
  4010f4:	mov    DWORD PTR ds:0x42a286,ecx
  4010fa:	cmp    DWORD PTR ds:0x42a286,0x1f
  401101:	jge    0x40112c
  401107:	jmp    0x40111f
  40110c:	push   DWORD PTR [ebp-0xc]
  40110f:	push   0x429231
  401114:	push   0x42916d
  401119:	call   DWORD PTR ds:0x42a3b6
  40111f:	cmp    DWORD PTR ds:0x42a286,0x1e
  401126:	jb     0x4010ed
  40112c:	mov    edi,0x3272f1
  401131:	add    eax,edi
  401133:	and    DWORD PTR ds:0x42a292,0x0
  40113d:	jmp    0x401151
  401142:	xor    ecx,ecx
  401144:	xor    ecx,DWORD PTR ds:0x42a292
  40114a:	inc    ecx
  40114b:	mov    DWORD PTR ds:0x42a292,ecx
  401151:	cmp    DWORD PTR ds:0x42a292,0x1e
  401158:	jae    0x40119f
  40115e:	cmp    DWORD PTR ds:0x42a292,0xe
  401165:	ja     0x40119f
  40116b:	jmp    0x40117e
  401170:	push   0x42916d
  401175:	push   DWORD PTR [ebp-0x18]
  401178:	call   DWORD PTR ds:0x42a3ba
  40117e:	cmp    DWORD PTR ds:0x42a292,0xd
  401185:	jne    0x40119a
  40118b:	xor    ecx,ecx
  40118d:	or     ecx,DWORD PTR ds:0x42a292
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a292,ecx
  40119a:	jmp    0x401142
  40119f:	mov    DWORD PTR [ebp-0x40],eax
  4011a2:	mov    eax,ds:0x42a2ca
  4011a7:	sbb    DWORD PTR ds:0x42a25a,eax
  4011ad:	mov    eax,ds:0x42929e
  4011b2:	sub    DWORD PTR ds:0x42a2fa,ecx
  4011b8:	mov    eax,DWORD PTR [eax]
  4011ba:	mov    DWORD PTR [ebp-0x3c],eax
  4011bd:	inc    eax
  4011be:	mov    eax,ds:0x4294ae
  4011c3:	and    DWORD PTR ds:0x42a26a,0x0
  4011cd:	jmp    0x4011df
  4011d2:	mov    ecx,DWORD PTR ds:0x42a26a
  4011d8:	inc    ecx
  4011d9:	mov    DWORD PTR ds:0x42a26a,ecx
  4011df:	cmp    DWORD PTR ds:0x42a26a,0x1f
  4011e6:	jae    0x401233
  4011ec:	cmp    DWORD PTR ds:0x42a26a,0x4
  4011f3:	jge    0x401233
  4011f9:	jmp    0x401214
  4011fe:	push   0x586f
  401203:	push   DWORD PTR [ebp-0x18]
  401206:	push   DWORD PTR [ebp-0x14]
  401209:	push   0x8d08
  40120e:	call   DWORD PTR ds:0x42a3be
  401214:	cmp    DWORD PTR ds:0x42a26a,0x3
  40121b:	jne    0x40122e
  401221:	mov    ecx,DWORD PTR ds:0x42a26a
  401227:	inc    ecx
  401228:	mov    DWORD PTR ds:0x42a26a,ecx
  40122e:	jmp    0x4011d2
  401233:	mov    eax,DWORD PTR [eax]
  401235:	add    ecx,0x507d
  40123b:	mov    DWORD PTR [ebp-0x1c],eax
  40123e:	xor    ecx,0x7815
  401244:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  40124b:	or     DWORD PTR ds:0x42a2da,0x4fa4
  401255:	mov    eax,DWORD PTR [ebp-0x34]
  401258:	xor    eax,esi
  40125a:	sub    ecx,DWORD PTR ds:0x42a2ce
  401260:	add    eax,edi
  401262:	and    DWORD PTR ds:0x42a266,edi
  401268:	mov    DWORD PTR [ebp-0x40],eax
  40126b:	mov    eax,ds:0x42941e
  401270:	jmp    0x403621
  401275:	retf   
  401276:	sbb    al,0x56
  401278:	or     eax,DWORD PTR [esi+0x409c8605]
  40127e:	sub    eax,0x69d00c0c
  401283:	in     al,dx
  401284:	mov    DWORD PTR [ebx-0x107c7c7d],eax
  40128a:	pop    esi
  40128b:	add    DWORD PTR [ebx+0x38262d24],0x20
  401292:	xor    al,0x22
  401294:	cs je  0x4012d4
  401297:	jo     0x401310
  401299:	dec    esi
  40129a:	jo     0x40130f
  40129c:	jae    0x40130a
  40129e:	dec    ebx
  40129f:	aam    0xdd
  4012a1:	clc    
  4012a2:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012a9:	ins    BYTE PTR es:[edi],dx
  4012aa:	pusha  
  4012ab:	into   
  4012ac:	pop    esp
  4012ad:	push   ebx
  4012ae:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012b4:	dec    esp
  4012b5:	jle    0x4012fd
  4012b7:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012bd:	sub    eax,0x3dd77fe
  4012c2:	push   0x7e
  4012c4:	pop    ds
  4012c5:	in     al,dx
  4012c6:	inc    eax
  4012c7:	int3   
  4012c8:	ret    
  4012c9:	in     al,dx
  4012ca:	xchg   esi,eax
  4012cb:	sub    bl,bh
  4012cd:	xchg   edx,eax
  4012ce:	xor    BYTE PTR [esi],cl
  4012d0:	pusha  
  4012d1:	mov    dl,0x93
  4012d3:	aad    0x6
  4012d5:	ins    BYTE PTR es:[edi],dx
  4012d6:	fcom   QWORD PTR ds:0x37030fe5
  4012dc:	and    DWORD PTR [ecx+0xd],edx
  4012df:	aaa    
  4012e0:	jb     0x401353
  4012e2:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  4012e9:	lock push eax
  4012eb:	xor    al,BYTE PTR [ebp+0x62d14b]
  4012f1:	and    eax,DWORD PTR [ebx]
  4012f3:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  4012fd:	fwait
  4012fe:	dec    eax
  4012ff:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401305:	jecxz  0x401333
  401307:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40130f:	xor    BYTE PTR [eax-0x6e323937],dl
  401315:	push   0x4d6b54f5
  40131a:	or     eax,0x1a470a3f
  40131f:	lods   al,BYTE PTR ds:[esi]
  401320:	push   edx
  401321:	shl    DWORD PTR [esi+0x6715d949],cl
  401327:	cld    
  401328:	imul   esp,DWORD PTR [edi-0x4c],0x0
  40132c:	jno    0x4012ec
  40132e:	add    DWORD PTR [ebx+0x23],ebx
  401331:	and    esi,DWORD PTR [edx]
  401333:	fcom   DWORD PTR [ebx]
  401335:	je     0x401340
  401337:	mov    ds:0xd429941e,eax
  40133c:	arpl   WORD PTR [ecx-0x5dafbd0a],dx
  401342:	fs das 
  401344:	cwde   
  401345:	test   BYTE PTR [edx-0xc5c8651],dl
  40134b:	sahf   
  40134c:	loopne 0x401399
  40134e:	sub    eax,DWORD PTR [edx-0x6ef548fd]
  401354:	ret    
  401355:	cmp    eax,0xf866b8a1
  40135a:	xor    ah,BYTE PTR [ecx]
  40135c:	fild   WORD PTR [ecx]
  40135e:	jecxz  0x401319
  401360:	sub    al,0x27
  401362:	xchg   DWORD PTR [ebx-0x5e343c1b],ecx
  401368:	int3   
  401369:	jns    0x4013d8
  40136b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40136c:	test   eax,0xecc11239
  401371:	ins    DWORD PTR es:[edi],dx
  401372:	(bad)  
  401373:	retf   0x8f7e
  401376:	mov    ebx,0x9c609c28
  40137b:	cmp    al,0x70
  40137d:	dec    eax
  40137e:	mov    ebx,0x3a17b6b3
  401383:	jmp    0xb6df:0xc3500ba8
  40138a:	xchg   edi,eax
  40138b:	(bad)  
  40138d:	fldenv [edi+0xa553125]
  401393:	add    edx,DWORD PTR [edi+0x2c]
  401396:	in     al,dx
  401397:	cmp    bl,0xf
  40139a:	aad    0x53
  40139c:	out    0x4d,al
  40139e:	enter  0x4cf1,0x69
  4013a2:	(bad)
  4013a5:	adc    esi,DWORD PTR [edx]
  4013a7:	and    DWORD PTR [esi+ebp*1+0x42],edi
  4013ab:	add    edx,ebp
  4013ad:	in     eax,dx
  4013ae:	popf   
  4013af:	jnp    0x401341
  4013b1:	scas   eax,DWORD PTR es:[edi]
  4013b2:	mov    edi,0x6ed6cfc0
  4013b7:	add    DWORD PTR [ebx],ebp
  4013b9:	sub    BYTE PTR [ebp+0x73],ah
  4013bc:	popa   
  4013bd:	cdq    
  4013be:	test   BYTE PTR [edx+ebx*4+0x7141d040],ah
  4013c5:	mov    eax,ds:0x46834e5d
  4013ca:	popf   
  4013cb:	aam    0x6b
  4013cd:	jo     0x401403
  4013cf:	add    eax,0x4f6dae95
  4013d4:	fdiv   st(0),st
  4013d6:	fsubr  st,st(5)
  4013d8:	outs   dx,DWORD PTR ds:[esi]
  4013d9:	jo     0x401453
  4013db:	mov    ebx,0x9bf086d5
  4013e0:	outs   dx,BYTE PTR ds:[esi]
  4013e1:	cdq    
  4013e2:	setb   BYTE PTR [eax-0x1b23823c]
  4013e9:	mov    edx,0x4649eb34
  4013ee:	ja     0x401385
  4013f0:	xchg   ebx,eax
  4013f1:	sbb    BYTE PTR [eax+0x386dbf2e],0xed
  4013f8:	mov    esi,0x6dc464d6
  4013fd:	xchg   ebx,eax
  4013fe:	pop    esp
  4013ff:	mov    esp,0x89ae0ed5
  401404:	fisubr DWORD PTR ds:0xcb4a22a9
  40140a:	mov    bh,BYTE PTR [esi+eax*8-0xa]
  40140e:	int    0xad
  401410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401411:	inc    edx
  401412:	mov    cl,0xa3
  401414:	and    dl,dh
  401416:	gs cmp bl,al
  401419:	and    eax,0x71fe981
  40141e:	sub    edi,DWORD PTR [ecx-0x9]
  401421:	cmp    edi,esi
  401423:	or     eax,0xb0a40f9a
  401428:	in     eax,0x23
  40142a:	sbb    bh,BYTE PTR [ebx+0xc47bc33]
  401430:	(bad)
  401433:	mov    ah,0xd6
  401435:	stos   DWORD PTR es:[edi],eax
  401436:	daa    
  401437:	sbb    cl,ch
  401439:	int3   
  40143a:	cmp    BYTE PTR [ebx],bh
  40143c:	jl     0x4014b7
  40143e:	adc    esi,DWORD PTR [eax+0x2d989d8f]
  401444:	mov    dh,0xb4
  401446:	jmp    FWORD PTR [edx]
  401448:	fiadd  DWORD PTR [eax]
  40144a:	dec    esi
  40144b:	inc    ecx
  40144c:	xor    BYTE PTR [esi-0x27],0xc6
  401450:	mov    ds:0xc6afcd42,al
  401455:	xlat   BYTE PTR ds:[ebx]
  401456:	sub    BYTE PTR [edx-0x2468c438],ah
  40145c:	pusha  
  40145d:	inc    ecx
  40145e:	push   0xffffffdf
  401460:	dec    DWORD PTR [ebx+0x6e4761b3]
  401466:	sbb    al,0xf1
  401468:	les    ebp,FWORD PTR [ecx]
  40146a:	mov    ah,0xf4
  40146c:	shl    DWORD PTR [edx-0x3e8f9a59],cl
  401472:	mov    bh,0xb3
  401474:	mov    edi,0xf258f254
  401479:	sbb    dh,ch
  40147b:	sbb    DWORD PTR [ebx],0xdc18a8ba
  401481:	dec    edi
  401482:	dec    esp
  401483:	push   ebx
  401484:	ds (bad) 
  401486:	pop    edi
  401487:	pop    ebp
  401488:	mov    edx,0x6c9268b5
  40148d:	dec    esp
  40148e:	int3   
  40148f:	ins    DWORD PTR es:[edi],dx
  401490:	imul   ebp,DWORD PTR [ecx-0x72e1cd00],0x5f
  401497:	jae    0x401473
  401499:	jg     0x4014b1
  40149b:	std    
  40149c:	sub    DWORD PTR [edx],ecx
  40149e:	and    eax,0xe1d7b9a6
  4014a3:	sub    BYTE PTR [edx-0x1a],dh
  4014a6:	mov    esp,?
  4014a8:	test   eax,0x9c20e239
  4014ad:	arpl   WORD PTR [ebp+ecx*4-0x63fb1230],dx
  4014b4:	xor    BYTE PTR [ebx+edi*8-0x44aed49c],ch
  4014bb:	or     BYTE PTR [eax+0x3cb8e22f],0xf3
  4014c2:	dec    ebp
  4014c3:	in     al,0x58
  4014c5:	push   cs
  4014c6:	ss test eax,0xd84e39d1
  4014cc:	sub    al,0xd0
  4014ce:	rol    DWORD PTR [esi-0x1c],0x2b
  4014d2:	dec    ecx
  4014d3:	getsec 
  4014d5:	test   al,0x6c
  4014d7:	and    al,0x1a
  4014d9:	in     al,0x3b
  4014db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014dd:	dec    edx
  4014de:	shl    DWORD PTR [edx],0xe
  4014e1:	retf   0xb7ec
  4014e4:	jge    0x4014ab
  4014e6:	inc    esp
  4014e7:	fs inc ecx
  4014e9:	mov    bl,BYTE PTR [ecx-0x71]
  4014ec:	dec    ebx
  4014ed:	ds push 0xffffffce
  4014f0:	jnp    0x40149c
  4014f2:	daa    
  4014f3:	mov    cl,0x43
  4014f5:	fcomp  DWORD PTR [esi+0x53a6845a]
  4014fb:	or     eax,0x7909952f
  401500:	shl    DWORD PTR [esp+ebp*1-0x45],cl
  401504:	push   eax
  401505:	xlat   BYTE PTR ds:[ebx]
  401506:	adc    DWORD PTR [edx+0x765e73e5],esi
  40150c:	and    ebp,edx
  40150e:	ret    
  40150f:	std    
  401510:	stos   DWORD PTR es:[edi],eax
  401511:	cld    
  401512:	clc    
  401513:	in     al,0xf7
  401515:	mov    ch,0x7a
  401517:	mov    eax,ds:0x4c2cae40
  40151c:	(bad)  
  40151d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40151e:	mov    al,ds:0xf505e6dd
  401523:	fistp  WORD PTR [esi+ebp*1-0x2bd7da1b]
  40152a:	xchg   esi,eax
  40152b:	xor    ebp,edx
  40152d:	cmp    ebx,ebp
  40152f:	jp     0x4014d0
  401531:	mov    ch,bl
  401533:	fsubr  DWORD PTR [ebx]
  401535:	jge    0x401523
  401537:	sti    
  401538:	mov    DWORD PTR [eax+0x5dcb6bbe],eax
  40153e:	test   BYTE PTR [edi],ah
  401540:	lahf   
  401541:	mov    ds:0xf1f5b933,al
  401546:	dec    ebp
  401547:	jo     0x401582
  401549:	jae    0x4015a5
  40154b:	jb     0x401536
  40154d:	inc    edx
  40154e:	ficomp DWORD PTR [edx]
  401550:	imul   ebx,DWORD PTR [ecx],0x61
  401553:	pusha  
  401554:	pop    esi
  401555:	test   eax,0xe60e729a
  40155a:	aad    0x69
  40155c:	dec    ebx
  40155d:	sbb    ah,0x47
  401560:	popa   
  401561:	xor    DWORD PTR [edx],ebx
  401563:	scas   eax,DWORD PTR es:[edi]
  401564:	mov    al,ds:0xa57994a4
  401569:	jns    0x4015e1
  40156b:	mov    al,0xfc
  40156d:	inc    esi
  40156e:	lahf   
  40156f:	mov    bl,0x70
  401571:	fucom  st(3)
  401573:	in     eax,dx
  401574:	and    esp,DWORD PTR [esi]
  401576:	inc    esi
  401577:	in     eax,dx
  401578:	and    BYTE PTR [ebx+0x44612e44],0x5e
  40157f:	or     dh,BYTE PTR [eax+0x304e83e7]
  401585:	mov    eax,0x453ebefb
  40158a:	(bad)  
  40158b:	xchg   ebx,eax
  40158c:	scas   al,BYTE PTR es:[edi]
  40158d:	adc    al,ch
  40158f:	inc    eax
  401590:	mov    ds:0x619120b0,al
  401595:	cwde   
  401596:	jmp    0x37f4f765
  40159b:	mov    ch,0xf4
  40159d:	xor    DWORD PTR [esi],edi
  40159f:	inc    esp
  4015a0:	mov    eax,esi
  4015a2:	sbb    al,0xf9
  4015a4:	inc    edi
  4015a5:	ss pop ebx
  4015a7:	les    ebp,FWORD PTR [ecx]
  4015a9:	scas   eax,DWORD PTR es:[edi]
  4015aa:	mov    bl,0xdf
  4015ac:	sahf   
  4015ad:	in     eax,0x9a
  4015af:	sub    bh,ah
  4015b1:	jge    0x40154f
  4015b3:	sub    dh,ah
  4015b5:	stos   DWORD PTR es:[edi],eax
  4015b6:	xlat   BYTE PTR ds:[ebx]
  4015b7:	adc    eax,0xbf090e1d
  4015bc:	popf   
  4015bd:	pushf  
  4015be:	and    ecx,DWORD PTR [eax]
  4015c0:	sub    al,0x63
  4015c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c3:	mov    bl,0x26
  4015c5:	lods   eax,DWORD PTR ds:[esi]
  4015c6:	sbb    BYTE PTR [ebx],bh
  4015c8:	imul   edi,esp,0xb55dbd43
  4015ce:	push   edi
  4015cf:	dec    esp
  4015d0:	cmc    
  4015d1:	push   edi
  4015d2:	mov    eax,DWORD PTR [edx-0x2d]
  4015d5:	(bad)  
  4015d6:	cmp    eax,0x624c30d4
  4015db:	test   eax,0x4d2bb102
  4015e0:	outs   dx,BYTE PTR ds:[esi]
  4015e1:	test   DWORD PTR [eax],eax
  4015e3:	mov    al,ds:0xdb77b8d
  4015e8:	fwait
  4015e9:	in     al,0xe9
  4015eb:	push   ss
  4015ec:	sbb    bl,BYTE PTR [ebp-0x43d77d28]
  4015f2:	out    0xe2,eax
  4015f4:	jg     0x401637
  4015f6:	inc    esp
  4015f8:	fmul   st,st(0)
  4015fa:	xchg   ecx,eax
  4015fb:	jg     0x4015b1
  4015fd:	bound  esp,QWORD PTR [esi+0x1e]
  401600:	mov    dl,0xfe
  401602:	fcom   DWORD PTR [edi+0x5523ad5c]
  401608:	sbb    eax,0x93a0fb4c
  40160d:	or     BYTE PTR [ebp+0x1941006b],al
  401613:	scas   eax,DWORD PTR es:[edi]
  401614:	cmc    
  401615:	sub    BYTE PTR [esi+0x31dfa253],al
  40161b:	push   eax
  40161c:	cmp    cl,BYTE PTR [esi-0x1b056707]
  401622:	in     eax,0xbc
  401624:	popa   
  401625:	mov    edx,0xa7b8c2dc
  40162a:	fsub   DWORD PTR [edx-0x50]
  40162d:	js     0x4015de
  40162f:	jns    0x40165c
  401631:	xchg   ecx,eax
  401632:	mov    eax,0x9856409e
  401637:	cmp    BYTE PTR [eax-0x19d6bf8f],0x8c
  40163e:	dec    edx
  40163f:	mov    dl,0x51
  401641:	sub    eax,0xc8ce515
  401646:	cmp    eax,DWORD PTR [ebp-0x5b]
  401649:	fiadd  WORD PTR [ebx]
  40164b:	int    0xac
  40164d:	call   0xd112:0x1694c964
  401654:	inc    edi
  401655:	sub    al,BYTE PTR [eax+0x66e95929]
  40165b:	enter  0xbc07,0x7b
  40165f:	enter  0x8cd7,0xfc
  401663:	lea    ebp,[ebx]
  401665:	bound  edx,QWORD PTR [edx+0x14]
  401668:	sub    al,0x96
  40166a:	ja     0x401635
  40166c:	dec    edi
  40166d:	mov    edi,0xb02b7d3e
  401672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401673:	jecxz  0x40166f
  401675:	stos   DWORD PTR es:[edi],eax
  401676:	adc    ah,dl
  401678:	or     DWORD PTR [edx+0x1a],edx
  40167b:	inc    esp
  40167c:	into   
  40167d:	ficom  WORD PTR [ebp-0x63]
  401680:	cli    
  401681:	rcr    BYTE PTR [ebx-0x53],1
  401684:	rol    DWORD PTR [ebx-0x1c6112b8],cl
  40168a:	mov    edx,0x5d04ebdd
  40168f:	cli    
  401690:	xor    bl,BYTE PTR [ebx+0x4f]
  401693:	inc    ecx
  401694:	imul   ebx,DWORD PTR [edi],0x126b3659
  40169a:	pushf  
  40169b:	outs   dx,BYTE PTR ds:[esi]
  40169c:	adc    al,0x66
  40169e:	outs   dx,BYTE PTR ds:[esi]
  40169f:	mov    bl,0xde
  4016a1:	push   ss
  4016a2:	pop    ss
  4016a3:	sahf   
  4016a4:	aad    0xf7
  4016a6:	ss pop ebx
  4016a8:	sbb    BYTE PTR [ebp+0x5b305c3d],cl
  4016ae:	inc    ebx
  4016af:	sbb    ah,BYTE PTR [ebx]
  4016b1:	mov    edx,0xdd6a6eec
  4016b6:	and    DWORD PTR [edx-0x53],esp
  4016b9:	push   cs
  4016ba:	jle    0x401683
  4016bc:	loopne 0x4016c8
  4016be:	call   FWORD PTR [ecx+0x8]
  4016c1:	dec    edi
  4016c2:	push   es
  4016c3:	pusha  
  4016c4:	mov    ecx,ebp
  4016c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016c7:	fwait
  4016c8:	mov    eax,ds:0xa5500960
  4016cd:	test   al,0x0
  4016cf:	or     eax,0x6152f4ce
  4016d4:	cmp    al,0xf9
  4016d6:	int    0x90
  4016d8:	jae    0x40169c
  4016da:	(bad)  
  4016db:	sbb    al,0xaf
  4016dd:	cwde   
  4016de:	and    BYTE PTR [ecx],cl
  4016e0:	pop    es
  4016e1:	push   edx
  4016e2:	(bad)  [ebx+0x6697ed26]
  4016e8:	ss add al,bh
  4016eb:	lahf   
  4016ec:	dec    esi
  4016ed:	jno    0x401694
  4016ef:	cs inc esi
  4016f1:	push   0x38
  4016f3:	push   es
  4016f4:	out    dx,al
  4016f5:	sbb    esi,DWORD PTR [ecx+0x29]
  4016f8:	mov    esi,0x8299e28
  4016fd:	(bad)  
  4016fe:	mov    ch,0x55
  401700:	js     0x401684
  401702:	cmp    al,0x8f
  401704:	and    ch,BYTE PTR [edi]
  401706:	addr16 loop 0x401734
  401709:	je     0x401756
  40170b:	sub    eax,DWORD PTR [eax]
  40170d:	out    0xe0,al
  40170f:	mov    bl,BYTE PTR [ebx+0x1c64dd87]
  401715:	jne    0x401705
  401717:	sahf   
  401718:	fist   WORD PTR ds:0x85384079
  40171e:	(bad)  
  40171f:	ror    DWORD PTR [edx-0x70],cl
  401722:	pop    ecx
  401723:	mov    WORD PTR [edx+0x44349898],?
  401729:	daa    
  40172a:	ins    DWORD PTR es:[edi],dx
  40172b:	repz fdivr QWORD PTR [ecx-0x24ebb253]
  401732:	hlt    
  401733:	push   cs
  401734:	xor    ch,BYTE PTR [esi+0x62]
  401737:	sub    al,0x8b
  401739:	imul   ebp,DWORD PTR [edx-0x6a],0xffffff9c
  40173d:	sbb    al,0x2
  40173f:	gs pop ss
  401741:	mov    ebp,0x5ae70a17
  401746:	jne    0x4016d2
  401748:	in     al,0x93
  40174a:	sbb    DWORD PTR [eax-0x8be379a],esp
  401750:	pop    ds
  401751:	lods   al,BYTE PTR ds:[esi]
  401752:	push   edi
  401753:	sbb    eax,0x15eb4957
  401758:	push   ecx
  401759:	mov    dl,0xd0
  40175b:	push   ss
  40175c:	dec    ebx
  40175d:	jg     0x401771
  40175f:	fist   DWORD PTR [edi+0x5e]
  401762:	repz in eax,0xbf
  401765:	adc    eax,0x8545ccea
  40176a:	je     0x401791
  40176c:	jno    0x401770
  40176e:	jns    0x401745
  401770:	add    bl,BYTE PTR [edi-0x7a463039]
  401776:	cmp    ebx,DWORD PTR [edi+0x616f8c62]
  40177c:	or     BYTE PTR [ebx+0x65],al
  40177f:	mov    WORD PTR [esp+ebx*1],ss
  401782:	xor    DWORD PTR [edx+edi*4+0x51],esp
  401786:	into   
  401787:	jns    0x40177b
  401789:	sbb    ch,BYTE PTR [esi]
  40178b:	out    0xd2,al
  40178d:	std    
  40178e:	into   
  40178f:	pop    ds
  401790:	mov    ebp,0x2bdd8c3d
  401795:	xchg   esi,eax
  401796:	mov    ebx,DWORD PTR [edi]
  401798:	sbb    dh,BYTE PTR [ecx+0x33]
  40179b:	dec    eax
  40179c:	les    edi,FWORD PTR [ebp+0x66]
  40179f:	dec    esp
  4017a0:	sbb    esp,DWORD PTR [edx]
  4017a2:	mov    ds,WORD PTR [esi-0x3591d327]
  4017a8:	mov    eax,ds:0x3af4737f
  4017ad:	adc    DWORD PTR [esi-0x21],ebx
  4017b0:	lods   al,BYTE PTR ds:[esi]
  4017b1:	sub    ch,bh
  4017b3:	fiadd  WORD PTR [edx-0x1b]
  4017b6:	pop    ds
  4017b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017b8:	jmp    0x401820
  4017ba:	cmp    ah,BYTE PTR [esi+0x6d]
  4017bd:	fs aad 0xd2
  4017c0:	or     DWORD PTR [edx+0x15860bb9],edi
  4017c6:	adc    eax,0x69b85f1
  4017cb:	outs   dx,DWORD PTR ds:[esi]
  4017cc:	in     eax,0xd9
  4017ce:	inc    ebx
  4017cf:	ja     0x401829
  4017d1:	push   0xc5f98709
  4017d6:	xchg   ebp,eax
  4017d7:	push   es
  4017d8:	test   BYTE PTR [ebp-0x37],ch
  4017db:	stos   BYTE PTR es:[edi],al
  4017dc:	repnz pop edx
  4017de:	call   0xf2283e67
  4017e3:	vpshlb xmm14,[eax+r9d*4],xmm2
  4017e9:	sahf   
  4017ea:	mov    edx,0xbc62f0f6
  4017ef:	push   edx
  4017f0:	xor    al,0x3f
  4017f2:	push   es
  4017f3:	inc    eax
  4017f4:	jmp    0x4017f1
  4017f6:	std    
  4017f7:	mov    BYTE PTR [esi+0x23],ah
  4017fa:	cdq    
  4017fb:	ins    BYTE PTR es:[edi],dx
  4017fc:	cmc    
  4017fd:	cmc    
  4017fe:	sbb    al,0x9e
  401800:	cmp    eax,0x8922f5c2
  401805:	popa   
  401806:	push   ebx
  401807:	lahf   
  401808:	hlt    
  401809:	and    esi,DWORD PTR [eax+0x7d]
  40180c:	pop    ecx
  40180d:	cs shl edx,0xdd
  401811:	(bad)  
  401812:	push   ecx
  401813:	fisttp QWORD PTR [ebx+esi*1-0x25738a94]
  40181a:	fldcw  WORD PTR [esi-0x1a]
  40181d:	pop    ss
  40181e:	push   0xffffff95
  401820:	mov    DWORD PTR ds:0xb9f2173f,0xab7d1969
  40182a:	addr16 dec edx
  40182c:	mov    bh,0x37
  40182e:	enter  0x490f,0x4a
  401832:	sahf   
  401833:	fimul  WORD PTR [ebp+0x5d]
  401836:	pop    es
  401837:	mov    ebx,0x34543b05
  40183c:	push   ds
  40183d:	pop    esp
  40183e:	cld    
  40183f:	add    al,0x95
  401841:	mov    BYTE PTR cs:[si],0x88
  401846:	test   BYTE PTR [ebx+edi*8],bl
  401849:	or     BYTE PTR [eax],dh
  40184b:	inc    esi
  40184c:	ret    
  40184d:	sbb    BYTE PTR [edi-0x25],bh
  401850:	lods   al,BYTE PTR ds:[esi]
  401851:	test   DWORD PTR [eax+esi*2],ebx
  401854:	aaa    
  401855:	inc    ebp
  401856:	scas   al,BYTE PTR es:[edi]
  401857:	std    
  401858:	jmp    eax
  40185a:	pop    esp
  40185b:	jecxz  0x40183d
  40185d:	pop    ebx
  40185e:	pop    ebx
  40185f:	(bad)  
  401860:	repz mov bh,0x28
  401863:	xchg   ecx,eax
  401864:	add    ebx,eax
  401866:	push   ss
  401867:	pop    es
  401868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401869:	push   esp
  40186a:	lea    eax,ds:0x8b7ee950
  401870:	push   esp
  401871:	mov    ebp,0xef01984c
  401876:	xchg   esi,eax
  401877:	inc    esp
  401878:	inc    ebp
  401879:	test   al,0xff
  40187b:	pop    ebx
  40187c:	pushf  
  40187d:	lahf   
  40187e:	daa    
  40187f:	retf   0xdbf9
  401882:	or     eax,0x7f2c052
  401887:	ja     0x401834
  401889:	or     al,0x93
  40188b:	bound  edi,QWORD PTR ds:0xfa0bcc2
  401891:	jb     0x40181d
  401893:	xor    al,bl
  401895:	add    cl,BYTE PTR [eax+edx*4+0x1d]
  401899:	pop    edx
  40189a:	retf   0xbb1f
  40189d:	stos   BYTE PTR es:[edi],al
  40189e:	inc    ebx
  40189f:	mov    esp,0x3c9eb656
  4018a4:	aam    0x46
  4018a6:	pop    ebp
  4018a7:	push   0x2dea95e9
  4018ac:	or     BYTE PTR [ecx-0x56],0x3b
  4018b0:	dec    esi
  4018b1:	call   0x4f0f:0xbdf17363
  4018b8:	or     DWORD PTR [esi-0x3e9228d9],edx
  4018be:	arpl   bp,sp
  4018c0:	mov    eax,0x1a7a810d
  4018c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018c6:	das    
  4018c7:	jecxz  0x40185e
  4018c9:	fcmovu st,st(1)
  4018cb:	dec    ecx
  4018cc:	enter  0x1c79,0xac
  4018d0:	inc    eax
  4018d1:	cmp    bl,bh
  4018d3:	dec    ebp
  4018d4:	neg    DWORD PTR [eax+eax*2+0x1b]
  4018d8:	xchg   DWORD PTR [esi],esi
  4018da:	stos   BYTE PTR es:[edi],al
  4018db:	xchg   esi,eax
  4018dc:	jo     0x4018b5
  4018de:	dec    esi
  4018df:	lock mov ecx,0xe5f3141c
  4018e5:	mov    dl,0x25
  4018e7:	mov    ecx,0x6e379ea5
  4018ec:	iret   
  4018ed:	add    al,0x5b
  4018ef:	in     al,0x4f
  4018f1:	mov    ch,0x84
  4018f3:	push   0xf2859504
  4018f8:	cmp    edx,ebp
  4018fa:	gs inc esi
  4018fc:	pusha  
  4018fd:	pushf  
  4018fe:	mov    ah,0xa9
  401900:	push   0x8
  401902:	iret   
  401903:	push   esi
  401904:	repz inc DWORD PTR [ecx+eax*1+0x30]
  401909:	push   ds
  40190a:	lea    esi,[edi+0x3d]
  40190d:	push   ss
  40190e:	or     BYTE PTR [ecx],0xe3
  401911:	outs   dx,BYTE PTR ds:[esi]
  401912:	cmp    BYTE PTR [edx],dl
  401914:	and    al,0xe1
  401916:	repnz out 0xd1,al
  401919:	dec    esi
  40191a:	jl     0x40194b
  40191c:	loopne 0x40191b
  40191e:	adc    ch,dl
  401920:	leave  
  401921:	sub    eax,0x7dcf2fca
  401926:	inc    ebp
  401927:	pop    ss
  401928:	adc    ecx,DWORD PTR [edx-0x19e40540]
  40192e:	test   ah,0x1
  401931:	fstp   DWORD PTR [ecx]
  401933:	mov    DWORD PTR [edi+0x30],ecx
  401936:	cdq    
  401937:	ja     0x40190d
  401939:	out    dx,eax
  40193a:	test   eax,0xf0375851
  40193f:	adc    BYTE PTR [ecx+0x32],0x5f
  401943:	xlat   BYTE PTR ds:[ebx]
  401944:	pop    ss
  401945:	in     al,0x9d
  401947:	out    0x2c,al
  401949:	dec    edi
  40194a:	jp     0x401952
  40194c:	sahf   
  40194d:	test   BYTE PTR [edi-0x7e],cl
  401950:	cs clc 
  401952:	popf   
  401953:	jmp    0xcbe2053
  401958:	icebp  
  401959:	out    0x60,eax
  40195b:	imul   ecx,DWORD PTR [eax],0x68a01590
  401961:	push   edi
  401962:	test   BYTE PTR [esi-0x35],bl
  401965:	inc    ebp
  401966:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401968:	inc    eax
  401969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40196a:	mov    esi,eax
  40196c:	cli    
  40196d:	push   esp
  40196e:	dec    esp
  40196f:	dec    ebx
  401970:	dec    esp
  401971:	push   ecx
  401972:	mov    al,0x56
  401974:	repnz adc dl,BYTE PTR [edi+esi*1]
  401978:	sbb    DWORD PTR [ecx-0x16],eax
  40197b:	pop    ecx
  40197c:	(bad)  [edi]
  40197e:	pop    DWORD PTR [eax]
  401980:	or     eax,DWORD PTR [esi]
  401982:	jl     0x401920
  401984:	outs   dx,BYTE PTR ds:[esi]
  401985:	dec    esi
  401986:	and    edx,DWORD PTR [ecx+0x79fde660]
  40198c:	sbb    esi,DWORD PTR [eax+edx*1-0x15]
  401990:	in     eax,0x5d
  401992:	in     eax,0x33
  401994:	(bad)  
  401995:	sbb    al,0x17
  401997:	sbb    eax,0x36ee28ce
  40199c:	test   DWORD PTR ds:0x12507857,ebx
  4019a2:	cmp    DWORD PTR [ebx-0x65],edi
  4019a5:	push   es
  4019a6:	xor    eax,0x523cf9dd
  4019ab:	add    bl,al
  4019ad:	aam    0xdf
  4019af:	in     al,0x22
  4019b1:	nop
  4019b2:	add    eax,0x9e96b338
  4019b7:	pop    ebp
  4019b8:	cmp    DWORD PTR [ecx+0x77],0xffffffdd
  4019bc:	sti    
  4019bd:	aas    
  4019be:	inc    ebp
  4019bf:	jmp    0xf7211282
  4019c4:	mov    esi,0x9c69015e
  4019c9:	ins    DWORD PTR es:[edi],dx
  4019ca:	fs jae 0x401984
  4019cd:	pop    es
  4019ce:	dec    edi
  4019cf:	push   es
  4019d0:	dec    ebp
  4019d1:	leave  
  4019d2:	or     al,0x79
  4019d4:	inc    eax
  4019d5:	inc    ecx
  4019d6:	shl    BYTE PTR [edi-0x3f6becce],cl
  4019dc:	sub    BYTE PTR [eax+0x34],ch
  4019df:	test   ebx,edx
  4019e1:	fnstcw WORD PTR [ebx+eax*4]
  4019e4:	popa   
  4019e5:	das    
  4019e6:	and    DWORD PTR [edx-0x4a],ebx
  4019e9:	or     BYTE PTR ds:0x9b168395,bh
  4019ef:	dec    edi
  4019f0:	outs   dx,DWORD PTR ds:[esi]
  4019f1:	sub    ah,dl
  4019f3:	pop    eax
  4019f4:	mov    edi,0xca865480
  4019f9:	es and eax,0x85bc1772
  4019ff:	or     esp,ebx
  401a01:	pop    ebx
  401a02:	adc    eax,DWORD PTR [ecx-0x3abbb16c]
  401a08:	in     al,0x47
  401a0a:	aad    0x39
  401a0c:	js     0x401a6e
  401a0e:	cmp    BYTE PTR [esi-0x7c],dl
  401a11:	out    0x69,eax
  401a13:	lea    edx,[edi]
  401a15:	loop   0x401a71
  401a17:	or     eax,0x53a40908
  401a1c:	xchg   BYTE PTR [esi],ch
  401a1e:	std    
  401a1f:	jbe    0x401a21
  401a21:	in     eax,0xcd
  401a23:	dec    ebx
  401a24:	fwait
  401a25:	xor    DWORD PTR [esi],edi
  401a27:	je     0x401a03
  401a29:	test   DWORD PTR [eax+ebx*8-0x60],0x4014956b
  401a31:	dec    edx
  401a32:	xchg   edx,eax
  401a33:	mov    dl,0xb1
  401a35:	loope  0x4019f1
  401a37:	cmp    bl,al
  401a39:	popa   
  401a3a:	aad    0x2e
  401a3c:	dec    esp
  401a3d:	xor    cl,BYTE PTR [ebx]
  401a3f:	add    edi,DWORD PTR cs:[edx-0x77]
  401a43:	add    DWORD PTR [esi+eiz*4+0x2996731b],ecx
  401a4a:	fist   DWORD PTR [eax-0x5d]
  401a4d:	jbe    0x401a1c
  401a4f:	cld    
  401a50:	mov    ebx,DWORD PTR [edi+0x4f]
  401a53:	sbb    eax,0xe6a868d0
  401a58:	popf   
  401a59:	pop    edx
  401a5a:	cdq    
  401a5b:	in     al,0x4
  401a5d:	sub    eax,DWORD PTR [esi+eax*8]
  401a60:	mov    bl,0xe0
  401a62:	pop    esi
  401a63:	jb     0x401a27
  401a65:	outs   dx,DWORD PTR ds:[esi]
  401a66:	fisttp QWORD PTR ds:0x4af9e51b
  401a6c:	popf   
  401a6d:	aas    
  401a6e:	sbb    dl,0x45
  401a71:	inc    edi
  401a72:	std    
  401a73:	push   ebx
  401a74:	repz cli 
  401a76:	ss scas al,BYTE PTR es:[edi]
  401a78:	sbb    edx,DWORD PTR [edi+0x18]
  401a7b:	(bad)  
  401a7d:	and    DWORD PTR ds:[eax],esp
  401a80:	(bad)  
  401a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a82:	jns    0x401a7d
  401a84:	mov    al,0x17
  401a86:	outs   dx,DWORD PTR ds:[esi]
  401a87:	je     0x401af4
  401a89:	push   ds
  401a8a:	test   al,0x92
  401a8c:	neg    DWORD PTR [edi]
  401a8e:	std    
  401a8f:	in     al,dx
  401a90:	xchg   BYTE PTR [edx],bl
  401a92:	rol    bl,cl
  401a94:	add    ah,bh
  401a96:	mov    BYTE PTR [eax+0x269038b3],ah
  401a9c:	into   
  401a9d:	or     esi,ebp
  401a9f:	push   ebx
  401aa0:	jl     0x401b19
  401aa2:	push   eax
  401aa3:	mov    ds:0xed9716f2,eax
  401aa8:	outs   dx,BYTE PTR ds:[esi]
  401aa9:	and    DWORD PTR [esi+0x50],ebx
  401aac:	(bad)  
  401aad:	das    
  401aae:	sbb    ah,BYTE PTR [esp+esi*1-0x46]
  401ab2:	or     esi,DWORD PTR [edi+eax*4+0x11d80fd]
  401ab9:	jno    0x401b08
  401abb:	push   edx
  401abc:	fucom  st(4)
  401abe:	xlat   BYTE PTR ds:[ebx]
  401abf:	cmp    eax,0x365839eb
  401ac4:	jbe    0x401abf
  401ac6:	cmp    esp,DWORD PTR [ebx]
  401ac8:	and    eax,0xd9bc8011
  401acd:	xor    al,0x5d
  401acf:	cmp    BYTE PTR ds:0xdac8d63f,0x9a
  401ad6:	(bad)  
  401ad7:	adc    eax,0xd1980353
  401adc:	cmp    edi,DWORD PTR [edi-0x6e]
  401adf:	sbb    DWORD PTR [eax+0x7d],eax
  401ae2:	ds dec esi
  401ae4:	out    dx,eax
  401ae5:	das    
  401ae6:	lods   eax,DWORD PTR ds:[esi]
  401ae7:	sub    ch,BYTE PTR [esi]
  401ae9:	cmp    dh,cl
  401aeb:	arpl   WORD PTR [ebp-0x63dee331],dx
  401af1:	jb     0x401a86
  401af3:	(bad)  
  401af4:	mov    ch,0x21
  401af6:	push   cs
  401af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401af8:	sub    DWORD PTR [edi],eax
  401afa:	jecxz  0x401ac3
  401afc:	inc    edx
  401afd:	push   ebp
  401afe:	ja     0x401ac7
  401b00:	ins    BYTE PTR es:[edi],dx
  401b01:	shl    dh,0x5b
  401b04:	shl    DWORD PTR [ebx],cl
  401b06:	add    al,0x47
  401b08:	push   ecx
  401b09:	nop
  401b0a:	mov    ebx,0xf5ad1a1b
  401b0f:	ss xchg esp,eax
  401b11:	arpl   WORD PTR [eax],sp
  401b13:	push   ss
  401b14:	xor    ebp,esi
  401b16:	push   ss
  401b17:	jo     0x401b3d
  401b19:	mov    edx,0x8a25d706
  401b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b1f:	or     bh,BYTE PTR [eax]
  401b21:	push   ebx
  401b22:	dec    ecx
  401b23:	cmp    BYTE PTR cs:[esi-0xd],bl
  401b27:	mov    ecx,DWORD PTR [ecx]
  401b29:	out    0xb9,al
  401b2b:	outs   dx,BYTE PTR ds:[esi]
  401b2c:	call   0xe3bd:0x305c6ca1
  401b33:	xchg   DWORD PTR [ecx-0x4923e8f5],esp
  401b39:	fdiv   QWORD PTR [esi-0x2cbfa86b]
  401b3f:	int    0x7f
  401b41:	sub    al,0x67
  401b43:	pop    ecx
  401b44:	test   eax,0x124a7099
  401b49:	adc    eax,0x8b0c6d0c
  401b4e:	mov    WORD PTR ds:0xc9a9e616,fs
  401b54:	inc    esi
  401b55:	xor    eax,0x660f1edb
  401b5a:	ins    DWORD PTR es:[edi],dx
  401b5b:	and    al,0xb1
  401b5d:	xchg   edx,eax
  401b5e:	pop    ds
  401b5f:	or     ebp,esi
  401b61:	mov    cl,BYTE PTR ds:0x2d855898
  401b67:	pop    ecx
  401b68:	mov    dl,0xd9
  401b6a:	fnsave [edx+edi*1-0x7db163e2]
  401b71:	clc    
  401b72:	rcr    bh,0xc0
  401b75:	pushf  
  401b76:	or     al,0x6
  401b78:	xchg   ecx,eax
  401b79:	cdq    
  401b7a:	push   esp
  401b7b:	stc    
  401b7c:	aad    0x5
  401b7e:	mov    esp,0x4bbf891
  401b83:	jb     0x401b39
  401b85:	jl     0x401bb5
  401b87:	(bad)  
  401b88:	cmc    
  401b89:	xchg   esp,eax
  401b8a:	jmp    0x79d2:0xe9fa1750
  401b91:	mov    ecx,0xe98ab805
  401b96:	xor    ch,dh
  401b98:	adc    BYTE PTR [edx],0x33
  401b9b:	cmp    DWORD PTR ds:0xa96cbec7,esp
  401ba1:	add    ebp,DWORD PTR [edi+0x4c]
  401ba4:	jle    0x401c11
  401ba6:	leave  
  401ba7:	ret    0x7d58
  401baa:	lock repz jg 0x401b9e
  401bae:	stos   BYTE PTR es:[edi],al
  401baf:	jns    0x401be3
  401bb1:	data16 jmp 0x401bbc
  401bb4:	or     DWORD PTR [edi-0x50],ebp
  401bb7:	xchg   ebp,eax
  401bb8:	fiadd  WORD PTR [eax]
  401bba:	inc    ebx
  401bbb:	(bad)  
  401bbc:	sub    al,0x90
  401bbe:	or     dh,BYTE PTR [ebx+ebx*1+0x47f65c30]
  401bc5:	outs   dx,BYTE PTR ds:[esi]
  401bc6:	lahf   
  401bc7:	in     al,dx
  401bc8:	inc    edi
  401bc9:	pop    ebp
  401bca:	cmp    ebx,DWORD PTR [edx-0x60d599e0]
  401bd0:	bound  ecx,QWORD PTR [bx+0x33]
  401bd4:	sub    ecx,esi
  401bd6:	mov    cl,BYTE PTR [esi-0x16175ce4]
  401bdc:	add    dh,BYTE PTR [eax]
  401bde:	mov    eax,ds:0x31c5846a
  401be3:	jle    0x401be5
  401be5:	aad    0x47
  401be7:	ret    0x8b25
  401bea:	nop
  401beb:	mov    ds:0x246dff92,eax
  401bf0:	addr16 fs gs pop edi
  401bf4:	xchg   esp,eax
  401bf5:	dec    edx
  401bf6:	fist   DWORD PTR [ecx+0x27]
  401bf9:	in     al,0x3d
  401bfb:	pop    DWORD PTR [eax-0x1e24bb81]
  401c01:	xor    eax,0x5265d601
  401c06:	sti    
  401c07:	loop   0x401bc6
  401c09:	dec    esi
  401c0a:	loop   0x401bfc
  401c0c:	repz fadd DWORD PTR ds:0x723ad9a9
  401c13:	test   eax,0x19bb6877
  401c18:	push   0xce6a8ac8
  401c1d:	out    dx,eax
  401c1e:	mov    al,ds:0x43a47d19
  401c23:	shl    BYTE PTR [ecx+0x4580ddd7],1
  401c29:	inc    edi
  401c2a:	dec    esp
  401c2b:	pusha  
  401c2c:	pusha  
  401c2d:	add    al,0xe0
  401c2f:	xlat   BYTE PTR ds:[ebx]
  401c30:	push   cs
  401c31:	add    eax,0x161b33f7
  401c36:	mov    ds:0xe78b118e,eax
  401c3b:	cmp    al,0x2d
  401c3d:	adc    eax,0x311a20c9
  401c42:	aam    0xa0
  401c44:	push   cs
  401c45:	and    BYTE PTR [edx-0x71728e70],bl
  401c4b:	or     al,0xef
  401c4d:	jl     0x401bde
  401c4f:	retf   
  401c50:	push   esp
  401c51:	(bad)  
  401c52:	push   cs
  401c53:	out    dx,eax
  401c54:	add    ch,al
  401c56:	call   0x5320:0xcb49b31d
  401c5d:	or     eax,0x1e6e9101
  401c62:	jne    0x401cad
  401c64:	mov    ss,ebx
  401c66:	(bad)  
  401c67:	daa    
  401c68:	addr16 jne 0x401c97
  401c6b:	(bad)  
  401c6c:	cs and al,0x41
  401c6f:	je     0x401c42
  401c71:	loope  0x401c39
  401c73:	inc    ebp
  401c74:	sti    
  401c75:	icebp  
  401c76:	add    al,BYTE PTR [ebx+0x6]
  401c79:	aaa    
  401c7a:	jb     0x401c2b
  401c7c:	fmul   DWORD PTR [ecx+0x5a]
  401c7f:	jmp    0x401c69
  401c81:	inc    esp
  401c82:	add    cl,BYTE PTR [ebp+0x30]
  401c85:	mov    dh,0xb1
  401c87:	daa    
  401c88:	mov    bh,BYTE PTR [esi]
  401c8a:	mov    dl,0x9f
  401c8c:	and    eax,0x9819afe3
  401c91:	sbb    ah,cl
  401c93:	rol    BYTE PTR [esi-0x49],1
  401c96:	in     al,dx
  401c97:	scas   eax,DWORD PTR es:[edi]
  401c98:	and    DWORD PTR [eax],0x7
  401c9b:	(bad)
  401c9e:	ret    
  401c9f:	enter  0xafc0,0x13
  401ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca4:	test   al,0xa3
  401ca6:	or     al,0x11
  401ca8:	xor    DWORD PTR [eax-0x12],edi
  401cab:	cmp    BYTE PTR [eax],0x1a
  401cae:	mov    ds:0xb76a71ff,eax
  401cb3:	fidivr DWORD PTR [esi+edi*8-0x24]
  401cb7:	icebp  
  401cb8:	inc    edx
  401cb9:	imul   eax,DWORD PTR [edi],0xffffffd1
  401cbc:	ja     0x401c99
  401cbe:	les    ebx,FWORD PTR [eax]
  401cc0:	and    DWORD PTR [ebx-0x248dc32a],ebp
  401cc6:	jo     0x401c54
  401cc8:	repz and eax,0x91e7153a
  401cce:	mov    cl,0xd1
  401cd0:	and    eax,DWORD PTR [edi]
  401cd2:	xor    DWORD PTR [esi],edx
  401cd4:	mov    dh,0xd
  401cd6:	sbb    ecx,DWORD PTR [edx-0x1a1982a3]
  401cdc:	jp     0x401cb0
  401cde:	xor    eax,0xf7bb40ba
  401ce4:	xlat   BYTE PTR ds:[ebx]
  401ce5:	leave  
  401ce6:	push   esp
  401ce7:	pop    es
  401ce8:	es adc al,0x65
  401ceb:	dec    edx
  401cec:	and    ecx,esp
  401cee:	call   DWORD PTR ds:0x97d410a8
  401cf4:	dec    ebx
  401cf5:	cmp    cl,BYTE PTR [edi-0x1b]
  401cf8:	or     eax,0x8636ffff
  401cfd:	clc    
  401cfe:	stc    
  401cff:	sar    ebp,1
  401d01:	inc    ebx
  401d02:	(bad)  
  401d03:	dec    esi
  401d04:	ds test eax,0x4f9de27a
  401d0a:	mov    ds:0x17fac087,eax
  401d0f:	jo     0x401d18
  401d11:	lods   al,BYTE PTR ds:[esi]
  401d12:	and    al,0xfe
  401d14:	(bad)  
  401d16:	jmp    0x401cfd
  401d18:	xor    al,0xc8
  401d1a:	cmp    ch,BYTE PTR [edx+0x20]
  401d1d:	push   ecx
  401d1e:	outs   dx,BYTE PTR ds:[esi]
  401d1f:	icebp  
  401d20:	(bad)  
  401d23:	fmul   DWORD PTR [ecx+0x6f55f4d3]
  401d29:	fild   QWORD PTR [ebx+0x75]
  401d2c:	mov    eax,ds:0x6d92087f
  401d31:	fwait
  401d32:	cmp    ecx,DWORD PTR [ecx-0x3c]
  401d35:	test   eax,0x6c505f85
  401d3a:	mov    esi,esp
  401d3c:	ret    0xec5f
  401d3f:	mov    gs,WORD PTR [eax+0x6c6d6169]
  401d45:	inc    edx
  401d46:	in     eax,0x18
  401d48:	nop
  401d49:	retf   
  401d4a:	jle    0x401db0
  401d4c:	imul   BYTE PTR [ecx*8-0x280ac41a]
  401d53:	sub    DWORD PTR [ecx+0x669b007d],ebp
  401d59:	mov    ch,0x2d
  401d5b:	sub    BYTE PTR [ecx+0x64788e7e],ch
  401d61:	cmp    al,0xdc
  401d63:	mov    bl,0x2
  401d65:	outs   dx,DWORD PTR ds:[esi]
  401d66:	cmp    dl,BYTE PTR [eax+0x53]
  401d69:	mov    ah,0x70
  401d6b:	cdq    
  401d6c:	adc    ebx,ecx
  401d6e:	idiv   BYTE PTR [edx+esi*4-0x1aaf126c]
  401d75:	push   esp
  401d76:	shr    DWORD PTR [eax],1
  401d78:	rcr    al,1
  401d7a:	adc    cl,ah
  401d7c:	adc    eax,0xc48a340f
  401d81:	test   al,0x12
  401d83:	repz jno 0x401dfc
  401d86:	shl    DWORD PTR [esp+ebx*2-0x10],1
  401d8a:	mov    ds:0xd6a2a633,eax
  401d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d90:	sbb    esp,DWORD PTR [eax]
  401d92:	(bad)  [ebp-0x5f12c156]
  401d98:	ror    DWORD PTR [ecx+0x58],1
  401d9b:	nop
  401d9c:	lods   eax,DWORD PTR ds:[esi]
  401d9d:	cmp    DWORD PTR [ecx+0x256b6093],esp
  401da3:	mov    bl,0xf7
  401da5:	in     al,dx
  401da6:	lods   eax,DWORD PTR ds:[esi]
  401da7:	push   sp
  401da9:	std    
  401daa:	push   eax
  401dab:	pop    ds
  401dac:	out    0x7d,eax
  401dae:	dec    ebp
  401daf:	push   eax
  401db0:	mov    ah,0x7d
  401db2:	cmp    dl,ah
  401db4:	daa    
  401db5:	ins    DWORD PTR es:[edi],dx
  401db6:	sbb    eax,0xac9f20cb
  401dbb:	jge    0x401de1
  401dbd:	rcr    DWORD PTR [edi-0x78],1
  401dc0:	inc    ecx
  401dc1:	mov    dl,0xec
  401dc3:	push   cs
  401dc4:	shl    edi,cl
  401dc6:	sub    BYTE PTR [edx-0x72ea5015],0xbe
  401dcd:	fwait
  401dce:	add    BYTE PTR [edx+0x7fca3ff4],bh
  401dd4:	or     ebx,DWORD PTR [ebp+0x4b2f98a]
  401dda:	dec    esp
  401ddb:	lds    ebx,FWORD PTR [edi+ecx*4-0x7b]
  401ddf:	mov    ah,0xb9
  401de1:	fisub  WORD PTR [edx+0x49c50e82]
  401de7:	xor    cl,BYTE PTR [ebx]
  401de9:	mov    DWORD PTR [esi+0x6d],ebp
  401dec:	xchg   esp,eax
  401ded:	dec    edi
  401dee:	dec    esi
  401def:	sub    DWORD PTR [edx-0x7d6fb9a3],esp
  401df5:	push   0xfffffffd
  401df7:	cmp    BYTE PTR [edi+ecx*2-0x393f6981],0x34
  401dff:	bt     esi,0x50
  401e03:	loope  0x401e5e
  401e05:	xchg   ebx,eax
  401e06:	retf   0xbcce
  401e09:	mov    WORD PTR [ebx-0x4a79822c],cs
  401e0f:	or     DWORD PTR [ebx-0x23b85c7],esi
  401e15:	inc    ebp
  401e16:	push   0xef3640e6
  401e1b:	add    al,cl
  401e1d:	test   edi,eax
  401e1f:	test   al,0x18
  401e21:	test   al,0xe6
  401e23:	cld    
  401e24:	cs jo  0x401e41
  401e27:	adc    eax,0xb7ab5811
  401e2c:	mov    esi,0x4f3f58ec
  401e31:	or     eax,0x88fb6f02
  401e36:	mov    bh,ch
  401e38:	imul   eax,DWORD PTR [eax-0x62199925],0x38
  401e3f:	stos   BYTE PTR es:[edi],al
  401e40:	xchg   edx,eax
  401e41:	jle    0x401e19
  401e43:	jno    0x401dc8
  401e45:	inc    esi
  401e46:	ds jle 0x401e61
  401e49:	popa   
  401e4a:	jmp    0xf808ee8a
  401e4f:	cmp    BYTE PTR fs:[edi+0x741f195f],0x88
  401e57:	cld    
  401e58:	inc    ebp
  401e59:	pop    ss
  401e5a:	sub    BYTE PTR [edi],bh
  401e5c:	mov    esp,0x64f5501f
  401e61:	mov    bl,0x9a
  401e63:	add    BYTE PTR [edx+0x2b],dh
  401e66:	loope  0x401e50
  401e68:	xor    DWORD PTR [esi-0x35],ebx
  401e6b:	jmp    0x401e8f
  401e6d:	sar    DWORD PTR [esi-0x458daee8],0x5c
  401e74:	out    0x65,eax
  401e76:	shl    BYTE PTR [ebx],cl
  401e78:	jne    0x401ee2
  401e7a:	sub    DWORD PTR [esi],0xffffff96
  401e7d:	cmp    bl,BYTE PTR [eax-0x68512319]
  401e83:	icebp  
  401e84:	xor    eax,0xc0c8249b
  401e89:	retf   
  401e8a:	mov    ?,WORD PTR [ebp-0x48070d5a]
  401e90:	cmp    al,0x8e
  401e92:	retf   
  401e93:	push   edi
  401e94:	rcl    esp,0x77
  401e97:	out    0x8d,eax
  401e99:	dec    edx
  401e9a:	cdq    
  401e9b:	xor    al,0xdb
  401e9d:	dec    edi
  401e9e:	jb     0x401eaa
  401ea0:	es xchg esi,eax
  401ea2:	jae    0x401f04
  401ea4:	mov    edx,0x8e8eebeb
  401ea9:	jns    0x401eb5
  401eab:	shr    ah,cl
  401ead:	test   al,0x1e
  401eaf:	and    dl,BYTE PTR ds:0x1abe265a
  401eb5:	jmp    0x401f07
  401eb7:	cmp    ebp,esi
  401eb9:	sbb    BYTE PTR [edx-0x69],bl
  401ebc:	or     al,0xdb
  401ebe:	mov    ah,0xa
  401ec0:	pop    esp
  401ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec2:	outs   dx,BYTE PTR ds:[esi]
  401ec3:	pop    eax
  401ec4:	cmc    
  401ec5:	lea    edi,[edx+0x26]
  401ec8:	sti    
  401ec9:	adc    DWORD PTR [ebp+0x50],0x7a
  401ecd:	jl     0x401ede
  401ecf:	jmp    0x838f:0xdb0a87fb
  401ed6:	mov    ch,0x53
  401ed8:	lods   eax,DWORD PTR ds:[esi]
  401ed9:	aam    0xb7
  401edb:	sbb    BYTE PTR [eax+0x26],dh
  401ede:	aam    0xf8
  401ee0:	mov    dh,0xb
  401ee2:	sub    bh,BYTE PTR [edi+eiz*8]
  401ee5:	adc    sp,WORD PTR [ecx]
  401ee8:	pop    ebx
  401ee9:	jb     0x401eb8
  401eeb:	cld    
  401eec:	sub    esi,ebx
  401eee:	mov    ch,0xf9
  401ef0:	(bad)  
  401ef1:	stos   DWORD PTR es:[edi],eax
  401ef2:	mov    BYTE PTR [ebx+0x5c5bf1b2],dh
  401ef8:	add    esp,eax
  401efa:	dec    ebx
  401efb:	stos   DWORD PTR es:[edi],eax
  401efc:	(bad)  
  401efd:	outs   dx,BYTE PTR ds:[esi]
  401efe:	adc    DWORD PTR [edi-0xe632692],0x4d
  401f05:	test   cl,cl
  401f07:	ds daa 
  401f09:	or     BYTE PTR [esi+0x57],bl
  401f0c:	test   esi,esp
  401f0e:	scas   al,BYTE PTR es:[edi]
  401f0f:	(bad)  
  401f10:	sub    dh,al
  401f12:	mov    edx,0x9a288588
  401f17:	mov    ah,0x50
  401f19:	pop    ebp
  401f1a:	aas    
  401f1b:	mov    eax,ds:0x6ebfaf90
  401f20:	(bad)  
  401f21:	sbb    DWORD PTR gs:[esi],ebx
  401f24:	ds inc edi
  401f26:	and    edx,DWORD PTR [eax-0x59023fe0]
  401f2c:	sbb    DWORD PTR [edx+ebp*8+0x7b],ecx
  401f30:	mov    edx,DWORD PTR [edx+0xa272326]
  401f36:	ret    
  401f37:	pop    ds
  401f38:	mov    edi,0xd1c8e5bf
  401f3d:	and    DWORD PTR [ebx],esi
  401f3f:	and    al,0x68
  401f41:	sar    BYTE PTR [edx-0x1a],cl
  401f44:	sahf   
  401f45:	aaa    
  401f46:	(bad)  
  401f48:	repz sahf 
  401f4a:	jl     0x401edb
  401f4c:	sbb    al,0x62
  401f4e:	jnp    0x401f5a
  401f50:	pop    edi
  401f51:	fsubp  st(6),st
  401f53:	mov    bl,0x6
  401f55:	arpl   di,di
  401f57:	popf   
  401f58:	pop    eax
  401f59:	std    
  401f5a:	fdivrp st(6),st
  401f5c:	push   ebx
  401f5d:	and    eax,0x67bd24f7
  401f62:	or     al,0x1d
  401f64:	retf   
  401f65:	imul   BYTE PTR [edx-0x60618913]
  401f6b:	mov    al,0xc9
  401f6d:	push   edx
  401f6e:	frndint 
  401f70:	inc    esi
  401f71:	lahf   
  401f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f73:	and    esp,DWORD PTR [edi+0x7f]
  401f76:	and    dl,BYTE PTR [ebx]
  401f78:	cmp    eax,0x9c4bae03
  401f7d:	in     al,dx
  401f7e:	jae    0x401f85
  401f80:	mov    eax,0x3888b407
  401f85:	mov    edi,0x1c46ce75
  401f8a:	nop
  401f8b:	int    0x83
  401f8d:	in     eax,dx
  401f8e:	out    dx,al
  401f8f:	cs mov ah,0x51
  401f92:	mov    ds:0xa2d44153,al
  401f97:	add    edx,DWORD PTR [ebx+0x47]
  401f9a:	lock out dx,al
  401f9c:	js     0x401fc4
  401f9e:	and    eax,0x5a151b88
  401fa3:	ror    DWORD PTR [eax],cl
  401fa5:	mov    edi,0x4c6e48ce
  401faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fab:	cld    
  401fac:	mov    dl,0xa8
  401fae:	ja     0x401fd4
  401fb0:	fnstsw WORD PTR ds:0xb686f078
  401fb6:	sub    ebx,DWORD PTR [eax]
  401fb8:	retf   0xafd6
  401fbb:	push   ss
  401fbc:	icebp  
  401fbd:	cmp    al,0x23
  401fbf:	inc    edi
  401fc0:	retf   
  401fc1:	mov    al,0xda
  401fc3:	sbb    ch,BYTE PTR [edx]
  401fc5:	jns    0x401fb7
  401fc7:	add    eax,0x541f0c7
  401fcc:	inc    ecx
  401fcd:	or     esp,eax
  401fcf:	stc    
  401fd0:	pop    esp
  401fd1:	mov    esi,0x854d4d17
  401fd6:	stc    
  401fd7:	inc    eax
  401fd8:	push   esp
  401fd9:	fisub  WORD PTR [edi-0x43361926]
  401fdf:	push   edx
  401fe0:	push   ebp
  401fe1:	jno    0x401ffc
  401fe3:	pop    ds
  401fe4:	nop
  401fe5:	jle    0x401f9a
  401fe7:	out    dx,eax
  401fe8:	or     DWORD PTR [ecx],edi
  401fea:	xchg   ebx,eax
  401feb:	ja     0x401f7d
  401fed:	pop    ss
  401fee:	adc    eax,0xff5f85ed
  401ff3:	ja     0x401f98
  401ff5:	(bad)  
  401ff6:	push   ebx
  401ff7:	or     edx,DWORD PTR ds:0xf35bdd82
  401ffd:	sub    al,0xd6
  401fff:	and    al,0x8a
  402001:	fild   WORD PTR [eax+esi*2]
  402004:	stc    
  402005:	cmp    al,0x9e
  402007:	dec    eax
  402008:	jns    0x40205e
  40200a:	test   BYTE PTR [edx],al
  40200c:	cmp    bl,BYTE PTR [edx]
  40200e:	jno    0x401fb0
  402010:	xchg   esi,eax
  402011:	popa   
  402012:	jnp    0x402085
  402014:	das    
  402015:	mov    ch,0xb0
  402017:	stc    
  402018:	jle    0x40207f
  40201a:	out    0x9f,al
  40201c:	sub    DWORD PTR [ecx+0x3e],ebx
  40201f:	cmc    
  402020:	scas   eax,DWORD PTR es:[edi]
  402021:	xchg   ebp,eax
  402022:	scas   eax,DWORD PTR es:[edi]
  402023:	test   BYTE PTR [ebx+eax*2+0x4f6350ea],0x30
  40202b:	cmp    eax,DWORD PTR [edi+edx*2+0xbcc68b3]
  402032:	dec    edi
  402033:	lock lods al,BYTE PTR ds:[esi]
  402035:	fistp  WORD PTR [edi]
  402037:	push   ds
  402038:	pushf  
  402039:	cmp    BYTE PTR [ebx],dl
  40203b:	mov    cl,0x38
  40203d:	ret    
  40203e:	imul   esi,ecx,0x1
  402041:	xor    edi,DWORD PTR [esi+0x7be2f8a1]
  402047:	xor    BYTE PTR [ebx+ebx*2+0x2499a590],cl
  40204e:	mov    cl,0x63
  402050:	retf   
  402051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402052:	rcl    DWORD PTR [eax+ebx*1-0x166a0345],1
  402059:	cmp    dl,bl
  40205b:	lahf   
  40205c:	push   edi
  40205d:	sbb    DWORD PTR [ecx+0x2fa11053],edi
  402063:	xchg   ebp,eax
  402064:	jmp    0x4020c2
  402066:	loope  0x4020e7
  402068:	xlat   BYTE PTR ds:[ebx]
  402069:	(bad)  
  40206c:	arpl   WORD PTR [edx],si
  40206e:	push   esi
  40206f:	dec    ebp
  402070:	mov    esi,?
  402072:	inc    BYTE PTR [ebp-0x1d96c7a8]
  402078:	shl    edx,cl
  40207a:	sub    ebp,edx
  40207c:	pop    ecx
  40207d:	cmp    al,0x61
  40207f:	sahf   
  402080:	dec    ebp
  402081:	fwait
  402082:	loope  0x40206f
  402084:	mov    esi,0xc09ee7e9
  402089:	dec    edx
  40208a:	pop    edx
  40208b:	in     al,0x91
  40208d:	adc    bl,BYTE PTR [ebx-0x32]
  402090:	out    0xf4,al
  402092:	xchg   DWORD PTR [edx+0x34b5b053],esi
  402098:	out    dx,al
  402099:	dec    ecx
  40209a:	push   ebp
  40209b:	push   ds
  40209c:	scas   eax,DWORD PTR es:[edi]
  40209d:	lods   al,BYTE PTR ds:[esi]
  40209e:	fistp  WORD PTR [ebx+0x26de4037]
  4020a4:	adc    BYTE PTR [esi],0x44
  4020a7:	inc    edx
  4020a8:	imul   esp,ebp,0x2a
  4020ab:	imul   BYTE PTR [eax+ecx*1-0x49196ff]
  4020b2:	jns    0x40207f
  4020b4:	jge    0x402054
  4020b6:	jbe    0x4020f6
  4020b8:	leave  
  4020b9:	sbb    eax,0x885a3d97
  4020be:	sbb    BYTE PTR [eax],dh
  4020c0:	xchg   ebp,eax
  4020c1:	sbb    DWORD PTR [eax],0xffffff90
  4020c4:	or     DWORD PTR [ecx-0x18],0x399d4acd
  4020cb:	mov    dl,0x19
  4020cd:	dec    eax
  4020ce:	xor    ah,BYTE PTR [ecx+0x5959d8f4]
  4020d4:	test   BYTE PTR [esi],dl
  4020d6:	mov    DWORD PTR [eax+0x4b],esi
  4020d9:	inc    ecx
  4020da:	xor    esi,ecx
  4020dc:	aad    0x24
  4020de:	mov    bl,0x50
  4020e0:	pop    ebx
  4020e1:	retf   0xea1c
  4020e4:	jmp    0x402094
  4020e6:	fstp   QWORD PTR [eax]
  4020e8:	jb     0x4020b7
  4020ea:	sar    BYTE PTR [eax],1
  4020ec:	mov    cl,0x5e
  4020ee:	popf   
  4020ef:	mov    WORD PTR [ecx-0x5c],es
  4020f2:	inc    edi
  4020f3:	gs inc ecx
  4020f5:	and    edi,0xffffff9f
  4020f8:	mov    edx,0xef9dfb88
  4020fd:	push   esp
  4020fe:	or     DWORD PTR [ebp+0x75],esi
  402101:	mov    dh,0xc8
  402103:	jle    0x402156
  402105:	(bad)  
  402106:	push   edx
  402107:	jb     0x4020b6
  402109:	fcomip st,st(3)
  40210b:	adc    eax,0xb2c86c02
  402110:	dec    esp
  402111:	sub    eax,0x3a8a1847
  402116:	add    DWORD PTR [edx+0x2a],edx
  402119:	fs mov al,0xcf
  40211c:	push   0xffffffa2
  40211e:	je     0x4020f3
  402120:	fcom   DWORD PTR [ebx+0x7c]
  402123:	xchg   ebx,eax
  402124:	sub    al,0x1e
  402126:	pop    eax
  402127:	jno    0x402158
  402129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40212a:	fisttp QWORD PTR [edx-0x48a35a0e]
  402130:	jecxz  0x40219c
  402132:	test   dl,al
  402134:	jo     0x402128
  402136:	sub    al,0xc2
  402138:	add    DWORD PTR [ebp-0x5ba9ac4b],edi
  40213e:	jmp    FWORD PTR [edx+ebx*4+0x1cea5921]
  402145:	retf   0xe966
  402148:	push   0x3e120c01
  40214d:	retf   
  40214e:	mov    ah,BYTE PTR [edx-0xf]
  402151:	sbb    DWORD PTR [ebp+0x1d],esi
  402154:	(bad)  
  402155:	jne    0x402135
  402157:	outs   dx,BYTE PTR ds:[esi]
  402158:	jmp    0x4021d1
  40215a:	sbb    eax,0xf3861d0f
  40215f:	push   ss
  402160:	retf   
  402161:	xlat   BYTE PTR ds:[ebx]
  402162:	push   0xffffffd2
  402164:	mov    ds:0xa36818bc,al
  402169:	loop   0x4020f8
  40216b:	icebp  
  40216c:	xlat   BYTE PTR ds:[ebx]
  40216d:	loope  0x402172
  40216f:	test   BYTE PTR [esi],bl
  402171:	and    BYTE PTR [esi-0x5d],ch
  402174:	in     al,0x1
  402176:	imul   ebp,edx,0xfffffff6
  402179:	lea    esp,[ecx+ecx*2+0x47ee5b81]
  402180:	cmp    al,0xb4
  402182:	and    DWORD PTR [esi],ecx
  402184:	rol    BYTE PTR [ebx],1
  402186:	inc    ebp
  402187:	xchg   DWORD PTR [esi],edi
  402189:	cs sahf 
  40218b:	out    dx,eax
  40218c:	dec    edi
  40218d:	add    eax,DWORD PTR [esi+0x7e]
  402190:	arpl   WORD PTR [edi+ebx*2],ax
  402193:	cmp    al,0xaa
  402195:	fs popa 
  402197:	push   edx
  402198:	adc    bh,BYTE PTR [edx]
  40219a:	mov    bl,0x1c
  40219c:	pop    edi
  40219d:	mov    ecx,0x3f87f709
  4021a2:	out    0xa7,eax
  4021a4:	add    BYTE PTR [ecx+0x7a],bh
  4021a7:	lahf   
  4021a8:	jle    0x402199
  4021aa:	enter  0x9638,0xdd
  4021ae:	and    BYTE PTR [ebp-0x4a],dh
  4021b1:	push   ds
  4021b2:	mov    dl,0x33
  4021b4:	jnp    0x402141
  4021b6:	pop    es
  4021b7:	xchg   ebx,eax
  4021b8:	pop    es
  4021b9:	fcom   DWORD PTR [ebp-0x43]
  4021bc:	sbb    al,0x35
  4021be:	or     DWORD PTR [ecx-0x45fa9198],edi
  4021c4:	or     BYTE PTR [edi+0x64ed1aa7],ah
  4021ca:	mov    ds:0xc86cf9ed,eax
  4021cf:	sub    ecx,ebx
  4021d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021d2:	fwait
  4021d3:	xchg   ecx,eax
  4021d4:	aaa    
  4021d5:	mov    bh,0xc3
  4021d7:	imul   eax,DWORD PTR [eiz*1+0x4f828c9d],0x19
  4021df:	pop    edi
  4021e0:	or     BYTE PTR [edx+ebx*4-0x11],bh
  4021e4:	shl    BYTE PTR [edi],0x83
  4021e7:	or     eax,0x8206246
  4021ec:	out    0x8e,eax
  4021ee:	iret   
  4021ef:	mov    ebx,0xa097f5e9
  4021f4:	push   cs
  4021f5:	and    eax,0xe16358f6
  4021fa:	in     al,0x30
  4021fc:	(bad)  
  4021fd:	dec    esi
  4021fe:	jp     0x4021a4
  402200:	xchg   ecx,eax
  402201:	jnp    0x40227a
  402203:	dec    esp
  402204:	push   ds
  402205:	xor    BYTE PTR fs:[ecx+0x7267e5af],bh
  40220c:	cmp    ebp,DWORD PTR [ecx]
  40220e:	cmp    eax,0x13341158
  402213:	pop    eax
  402214:	cmp    dh,BYTE PTR es:[ebx]
  402217:	cli    
  402218:	icebp  
  402219:	scas   al,BYTE PTR es:[edi]
  40221a:	pop    ss
  40221b:	xor    bh,dl
  40221d:	or     ah,BYTE PTR [ebx-0x43]
  402220:	ror    DWORD PTR [edi],0x67
  402223:	ss jp  0x4021b8
  402226:	jmp    0x89d0:0xd6c0ba92
  40222d:	nop
  40222e:	sbb    eax,0xee7de2c2
  402233:	mov    ecx,esi
  402235:	jl     0x4021d4
  402237:	xchg   edx,eax
  402238:	and    ecx,DWORD PTR [ebx]
  40223a:	lds    eax,FWORD PTR [ebp-0x2f]
  40223d:	adc    edx,DWORD PTR [eax]
  40223f:	jae    0x4022ab
  402241:	xchg   esp,eax
  402242:	fimul  DWORD PTR [edx+0x71]
  402245:	push   eax
  402246:	clc    
  402247:	ss push ebx
  402249:	xchg   edi,eax
  40224a:	adc    eax,0xae6548d8
  40224f:	sbb    DWORD PTR [edi],0xf7d44488
  402255:	jmp    0xedeb1fe8
  40225a:	xor    DWORD PTR [ebp-0x5f2defb],ecx
  402260:	and    esp,eax
  402262:	xchg   ecx,eax
  402263:	imul   edx,DWORD PTR [edx],0x56c08aff
  402269:	and    cl,bh
  40226b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40226c:	outs   dx,BYTE PTR ds:[esi]
  40226d:	test   eax,0xdc72544a
  402272:	js     0x40227d
  402274:	int    0x64
  402276:	mov    eax,0xbcfa36b0
  40227b:	mov    ds:0xc261b46a,eax
  402280:	mov    ecx,0xf34aa0b4
  402285:	pop    esi
  402286:	int3   
  402287:	add    eax,0x86799cb6
  40228c:	or     eax,0x24fc371b
  402291:	and    DWORD PTR [eax+0x2928d079],esi
  402297:	(bad)  
  402299:	cli    
  40229a:	(bad)  
  40229b:	and    cl,cl
  40229d:	in     al,dx
  40229e:	stc    
  40229f:	mov    dh,0xfc
  4022a1:	ret    
  4022a2:	data16 (bad) 
  4022a4:	arpl   WORD PTR [ebx+0x660bf6f7],si
  4022aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ab:	icebp  
  4022ac:	xchg   ax,ax
  4022ae:	add    esp,DWORD PTR [ebx]
  4022b0:	jbe    0x4022a9
  4022b2:	(bad)  
  4022b3:	outs   dx,BYTE PTR ds:[esi]
  4022b4:	jne    0x40228c
  4022b6:	pop    edi
  4022b7:	hlt    
  4022b8:	imul   ebx,DWORD PTR [edi+0x3],0x12
  4022bc:	or     eax,0xdcddabf8
  4022c1:	in     eax,dx
  4022c2:	dec    edx
  4022c3:	mov    eax,ds:0xeef7a3c6
  4022c8:	loope  0x40226b
  4022ca:	mov    dh,0x4a
  4022cc:	cmp    ch,BYTE PTR [edx]
  4022ce:	dec    esp
  4022cf:	in     al,0x7f
  4022d1:	mov    cl,0x4c
  4022d3:	fiadd  WORD PTR [ecx+0x6]
  4022d6:	adc    al,0x77
  4022d8:	and    eax,DWORD PTR [ecx-0x7e]
  4022db:	dec    BYTE PTR [edx+0x4c]
  4022de:	retf   0x8a1c
  4022e1:	mov    bl,BYTE PTR [edi+0xe757912]
  4022e7:	mov    edx,0xd178bcda
  4022ec:	ja     0x40231f
  4022ee:	jo     0x40227b
  4022f0:	adc    al,ch
  4022f2:	mov    ecx,0x3c67e700
  4022f7:	scas   eax,DWORD PTR es:[edi]
  4022f8:	mov    es,WORD PTR [esi-0x2a57052f]
  4022fe:	ret    0x3d2c
  402301:	or     eax,0x90549f99
  402306:	popf   
  402307:	sahf   
  402308:	retf   0x7baa
  40230b:	xor    esp,ecx
  40230d:	(bad)  
  40230e:	js     0x4022f3
  402310:	and    eax,0xa3ce808f
  402315:	in     al,dx
  402316:	xchg   esi,eax
  402317:	imul   ecx,DWORD PTR [ebp-0x1b4e140e],0x672cdcf8
  402321:	imul   esi
  402323:	outs   dx,BYTE PTR ds:[esi]
  402324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402325:	jge    0x402399
  402327:	xchg   edi,eax
  402328:	into   
  402329:	int    0xf6
  40232b:	(bad)  [ebx+0x31753f9f]
  402331:	shr    DWORD PTR [edi+eiz*1],cl
  402334:	sub    bl,BYTE PTR [ebx-0x8]
  402337:	inc    edi
  402338:	loop   0x4022c3
  40233a:	aad    0x5a
  40233c:	arpl   WORD PTR [eax-0x37ec6b65],sp
  402342:	data16 (bad) 
  402344:	mov    dh,0x5c
  402346:	dec    eax
  402347:	add    DWORD PTR [ebp-0x1462b1f8],eax
  40234d:	pop    eax
  40234e:	test   DWORD PTR [esi],edx
  402350:	mov    bl,0x1e
  402352:	adc    BYTE PTR [esi-0x5a],al
  402355:	add    eax,0x9e99f4e9
  40235a:	retf   0x89a9
  40235d:	pop    ebp
  40235e:	loopne 0x402316
  402360:	dec    ebp
  402361:	(bad)  [edi-0x4b]
  402364:	jae    0x4023ab
  402366:	sahf   
  402367:	and    eax,0x14
  40236a:	(bad)  
  40236b:	xor    al,0xd6
  40236d:	jmp    0x25c7:0x12992fef
  402374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402375:	sbb    BYTE PTR ds:0x1e64414b,al
  40237b:	jmp    0xe5e4:0xbcc4502b
  402382:	ret    0x8e4e
  402385:	or     al,BYTE PTR ds:0x998060f0
  40238b:	shl    BYTE PTR [eax],0x5c
  40238e:	(bad)  
  40238f:	add    DWORD PTR [esi],esi
  402391:	push   edx
  402392:	pop    ds
  402393:	push   ecx
  402394:	out    0x9d,al
  402396:	push   0x19
  402398:	xor    cl,BYTE PTR [ebp-0x12a712e0]
  40239e:	bound  edi,QWORD PTR [ecx+0x1f]
  4023a1:	dec    ebp
  4023a2:	mov    esp,0xe65cb3d1
  4023a7:	(bad)  
  4023a8:	mov    ebp,DWORD PTR [esi-0xf]
  4023ab:	ret    0x6790
  4023ae:	int    0x8c
  4023b0:	push   cs
  4023b1:	dec    ebp
  4023b2:	xchg   DWORD PTR [edx+ebp*2-0x526b6145],ecx
  4023b9:	dec    ebp
  4023ba:	call   0x2b29:0xc130
  4023c0:	mov    ecx,ss
  4023c2:	xchg   ebx,eax
  4023c3:	pmulhw mm0,QWORD PTR [edi]
  4023c6:	ss repnz pop edi
  4023c9:	pop    ebp
  4023ca:	cli    
  4023cb:	pop    ebx
  4023cc:	test   DWORD PTR [ecx+0x26],0xb2be0c0a
  4023d3:	cli    
  4023d4:	or     al,0x65
  4023d6:	mov    ch,0x33
  4023d8:	push   edx
  4023d9:	mov    al,ds:0x92ee8162
  4023de:	out    dx,al
  4023df:	push   esp
  4023e0:	(bad)  
  4023e1:	push   edx
  4023e2:	fadd   QWORD PTR ds:0x8076d7a5
  4023e8:	sub    dh,BYTE PTR [eax+0x20]
  4023eb:	das    
  4023ec:	fwait
  4023ed:	imul   eax,esp,0x9f39bbf5
  4023f3:	lock aad 0xf2
  4023f6:	or     bh,BYTE PTR [ebp-0x13]
  4023f9:	fnsave [edi-0x44]
  4023fc:	add    dh,BYTE PTR [edi+0x2fed89c8]
  402402:	mov    dl,0x82
  402404:	or     BYTE PTR [esi-0xf],bh
  402407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402408:	jecxz  0x40240a
  40240a:	jnp    0x402394
  40240c:	mov    eax,ds:0x165f2b9
  402411:	fisttp QWORD PTR ds:0xa9da35c8
  402417:	neg    BYTE PTR [edi+0x478742ca]
  40241d:	xor    BYTE PTR ds:0x344d7a2a,al
  402423:	sbb    al,0xef
  402425:	xchg   ebp,eax
  402426:	push   esp
  402427:	xchg   edx,eax
  402428:	sub    BYTE PTR [ebp-0x6e],al
  40242b:	fwait
  40242c:	cmp    BYTE PTR [ebx-0x26],dh
  40242f:	imul   esi,DWORD PTR [edi+0x1d],0xffffff80
  402433:	mov    ecx,0x7ad31406
  402438:	call   0x28f9e78f
  40243d:	pop    ebx
  40243e:	sub    edx,DWORD PTR [eax+0x4e]
  402441:	popa   
  402442:	aas    
  402443:	int    0x62
  402445:	dec    eax
  402446:	(bad)  
  402447:	lds    ecx,FWORD PTR [eax-0x40]
  40244a:	inc    esp
  40244b:	push   0x4d
  40244d:	jns    0x40242b
  40244f:	lea    esi,[ebx+0xa914847]
  402455:	cdq    
  402456:	lods   eax,DWORD PTR ds:[esi]
  402457:	imul   esp,DWORD PTR ds:0x6fb0c759,0xfffffffb
  40245e:	sbb    al,0x91
  402460:	ds jo  0x4023ec
  402463:	jmp    0x57b7:0xac4cc58b
  40246a:	xchg   ebx,eax
  40246b:	jp     0x40246c
  40246d:	pop    eax
  40246e:	mov    ecx,0x6163c268
  402473:	push   edi
  402474:	jnp    0x4023fa
  402476:	(bad)  
  402477:	jg     0x402419
  402479:	(bad)  
  40247a:	into   
  40247b:	popa   
  40247c:	cmp    esp,DWORD PTR [edx-0x2b773b55]
  402482:	out    dx,al
  402483:	cmp    dh,0x73
  402486:	mov    al,0xc4
  402488:	dec    ecx
  402489:	jmp    0x402415
  40248b:	pop    edx
  40248c:	stos   DWORD PTR es:[edi],eax
  40248d:	mov    al,BYTE PTR [ecx]
  40248f:	std    
  402490:	stos   BYTE PTR es:[edi],al
  402491:	pop    ebx
  402492:	shr    BYTE PTR [edi*2+0x12086f01],cl
  402499:	scas   al,BYTE PTR es:[edi]
  40249a:	(bad)  
  40249b:	xchg   edi,eax
  40249c:	pop    ebp
  40249d:	sbb    eax,0x72af1471
  4024a2:	ficom  WORD PTR [ebp+eiz*2+0x18]
  4024a6:	lock pop bx
  4024a9:	or     ebp,DWORD PTR [edx+ebx*4-0xa]
  4024ad:	mov    al,0xeb
  4024af:	in     al,0x2e
  4024b1:	outs   dx,DWORD PTR ds:[esi]
  4024b2:	ss xchg edx,eax
  4024b4:	fsubr  DWORD PTR [edi]
  4024b6:	pop    ss
  4024b7:	adc    al,0xa6
  4024b9:	loope  0x4024b3
  4024bb:	sub    bh,BYTE PTR [ebx+0x31]
  4024be:	or     eax,0x535aad12
  4024c3:	mov    ch,0xac
  4024c5:	mov    bh,0xde
  4024c7:	or     DWORD PTR [esp+esi*4-0x44],ebp
  4024cb:	sbb    BYTE PTR [edi-0x40448d46],0x70
  4024d2:	add    al,0xbe
  4024d4:	push   ds
  4024d5:	rcl    BYTE PTR [ebx-0x42],0xf9
  4024d9:	test   BYTE PTR [eax],dh
  4024db:	shl    dl,1
  4024dd:	jle    0x40246a
  4024df:	jge    0x4024c1
  4024e1:	aas    
  4024e2:	add    DWORD PTR [ebx+0x43d83c3e],0x5b
  4024e9:	imul   ecx,DWORD PTR [esp+eax*1+0x42],0xffffff94
  4024ee:	fdivr  st,st(0)
  4024f1:	scas   al,BYTE PTR es:[edi]
  4024f2:	fdiv   DWORD PTR [ecx+edx*4]
  4024f5:	inc    ecx
  4024f6:	(bad)  
  4024f7:	sbb    bl,BYTE PTR [esi]
  4024f9:	fst    DWORD PTR [eax]
  4024fb:	mov    ebp,0xe625466f
  402500:	xor    dh,BYTE PTR [esi+ebp*4]
  402503:	adc    eax,0x968b3d8f
  402508:	sbb    BYTE PTR [ebx-0x1e],al
  40250b:	pushf  
  40250c:	adc    bh,BYTE PTR [eax]
  40250e:	in     al,dx
  40250f:	enter  0xe9cf,0xa8
  402513:	and    DWORD PTR [ebp-0x38],0x30
  402517:	inc    ecx
  402518:	sub    BYTE PTR [esi-0x51420dd9],bh
  40251e:	stos   DWORD PTR es:[edi],eax
  40251f:	jb     0x402518
  402521:	xchg   ebp,eax
  402522:	icebp  
  402523:	xor    esp,ebp
  402525:	(bad)  
  402526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402527:	pop    edx
  402528:	xor    BYTE PTR [esi+ebp*4+0x1],ah
  40252c:	sbb    ecx,DWORD PTR [ebx+ecx*4+0x5d]
  402530:	adc    BYTE PTR [ebx+eax*2],ch
  402533:	mov    al,0x90
  402535:	(bad)  
  402537:	aas    
  402538:	shl    dh,1
  40253a:	call   0x21f39fc6
  40253f:	xchg   esp,eax
  402540:	push   ss
  402541:	mov    dl,0x17
  402543:	test   BYTE PTR [esp+ebx*4+0x4c],0xef
  402548:	mov    esp,DWORD PTR [ecx+esi*8-0x5b3f1782]
  40254f:	in     eax,0x28
  402551:	retf   0xcf75
  402554:	test   al,0x8c
  402556:	idiv   DWORD PTR [eax+0x1835643]
  40255c:	repz jno 0x4025a4
  40255f:	(bad)  
  402560:	fcomp  QWORD PTR [esi-0x8]
  402563:	arpl   WORD PTR ds:0x8924dd7f,di
  402569:	cdq    
  40256a:	mov    esp,0xff9aacd7
  40256f:	xor    BYTE PTR ds:0x6860e25d,dl
  402575:	push   0xe951069b
  40257a:	add    esi,0x7d
  40257d:	lea    esi,[ebp-0x6c]
  402580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402581:	sahf   
  402582:	sub    cl,BYTE PTR [ecx+esi*1+0x52]
  402586:	or     DWORD PTR [ecx+0x9bf6bdc],ecx
  40258c:	mov    dl,0x16
  40258f:	jp     0x4025bb
  402591:	not    bl
  402593:	inc    edi
  402594:	sbb    ah,dl
  402596:	xchg   ebp,eax
  402597:	sub    ecx,eax
  402599:	or     ah,BYTE PTR [edi-0x1e]
  40259c:	shr    DWORD PTR [ebp+eiz*1-0x70],1
  4025a0:	inc    eax
  4025a1:	scas   al,BYTE PTR es:[edi]
  4025a2:	dec    edi
  4025a3:	std    
  4025a4:	rcl    DWORD PTR [edx],cl
  4025a6:	repnz fucomi st,st(5)
  4025a9:	in     al,0xf6
  4025ab:	add    bh,BYTE PTR [ebx+0x3acc71a5]
  4025b1:	mov    esi,0x1cc4a453
  4025b6:	pop    esp
  4025b7:	jle    0x4025c6
  4025b9:	xor    ax,WORD PTR ds:0xc75d9510
  4025c0:	mov    ah,0xd2
  4025c2:	shl    eax,1
  4025c4:	xor    ah,dl
  4025c6:	ret    
  4025c7:	pop    ebx
  4025c8:	icebp  
  4025c9:	fistp  DWORD PTR [esi+0x6adec991]
  4025cf:	mov    ds:0x9d5d3e0c,eax
  4025d4:	out    dx,al
  4025d5:	mov    edx,0x139568fd
  4025da:	sahf   
  4025db:	mov    es,WORD PTR [edx-0x56]
  4025de:	inc    ebx
  4025df:	add    DWORD PTR [ebx-0xa],ecx
  4025e2:	or     DWORD PTR [edi],0xef54da27
  4025e8:	sub    BYTE PTR [ebx+eiz*2-0x5c],dl
  4025ec:	fcomi  st,st(2)
  4025ee:	pop    es
  4025ef:	mov    eax,ds:0x1f80f80a
  4025f4:	rep outs dx,BYTE PTR ds:[esi]
  4025f6:	repnz cs in eax,0x5f
  4025fa:	shr    BYTE PTR [ebx-0x45],1
  4025fd:	call   0x5708:0xb27afe5e
  402604:	dec    ecx
  402605:	xlat   BYTE PTR ds:[ebx]
  402606:	mov    edi,0xcafbe8f8
  40260b:	or     BYTE PTR [ecx-0x2011236d],al
  402611:	or     eax,0x55672859
  402616:	adc    bh,BYTE PTR [ebp+0x66]
  402619:	xchg   cl,dh
  40261b:	rcl    DWORD PTR [edx+0x2f],0x41
  40261f:	fistp  DWORD PTR [ebp-0x2e5e2bef]
  402625:	int    0x9
  402627:	inc    esp
  402628:	icebp  
  402629:	mov    ah,0x56
  40262b:	aad    0x12
  40262d:	or     eax,0x2447c28e
  402632:	aas    
  402633:	pusha  
  402634:	jl     0x402613
  402636:	cmc    
  402637:	dec    esi
  402638:	inc    esi
  402639:	mov    ?,ebx
  40263b:	dec    edx
  40263c:	pop    ds
  40263d:	(bad)  
  40263e:	icebp  
  40263f:	pop    edx
  402640:	jns    0x40269d
  402642:	daa    
  402643:	mov    ebp,0x977c4bdd
  402648:	add    dl,BYTE PTR [ecx-0x437c018]
  40264e:	mov    dh,0x97
  402650:	inc    esi
  402651:	mov    esi,0x7a236636
  402656:	and    BYTE PTR [edi+0x16],0xff
  40265a:	xchg   BYTE PTR [ecx],bh
  40265c:	xchg   DWORD PTR [edi],ecx
  40265e:	cmp    esp,ebx
  402660:	lock cli 
  402662:	inc    ecx
  402663:	retf   
  402664:	pop    ds
  402665:	shl    al,cl
  402667:	jmp    0x4026d7
  402669:	imul   esi,DWORD PTR [ebp+0x4b],0xffffffcf
  40266d:	js     0x402620
  40266f:	push   ds
  402670:	or     eax,0x5a700e4d
  402675:	mov    ah,BYTE PTR [ecx+edx*2+0x69eeaec6]
  40267c:	icebp  
  40267d:	jns    0x402619
  40267f:	lea    eax,[esi+0x2a]
  402682:	push   0xffffffa7
  402684:	mov    ah,0x85
  402686:	dec    edx
  402687:	inc    ebx
  402688:	mov    bh,0xcb
  40268a:	loopne 0x4026f0
  40268c:	cwde   
  40268d:	sahf   
  40268e:	je     0x40265c
  402690:	mov    ch,0xb8
  402692:	cwde   
  402693:	jns    0x402707
  402695:	sub    ebx,DWORD PTR [edx]
  402697:	fistp  WORD PTR [ebx*2-0x24a58e3e]
  40269e:	(bad)  
  40269f:	clc    
  4026a0:	ds test eax,0x739c4224
  4026a6:	fcom   DWORD PTR [edi+ebx*8-0x1e]
  4026aa:	js     0x40272a
  4026ac:	out    dx,al
  4026ad:	imul   DWORD PTR [edi+0x6a820f1c]
  4026b3:	addr16 pop ds
  4026b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026b6:	bound  ebx,QWORD PTR [eax+eiz*8-0x5d1a4eef]
  4026bd:	scas   eax,DWORD PTR es:[edi]
  4026be:	xchg   esi,eax
  4026bf:	add    bh,BYTE PTR ds:0x4fae2a44
  4026c5:	ficomp WORD PTR [eax+esi*8-0x3b]
  4026c9:	stos   DWORD PTR es:[edi],eax
  4026ca:	data16 jl 0x402650
  4026cd:	jg     0x4026e3
  4026cf:	dec    esp
  4026d0:	sub    ecx,edx
  4026d2:	retf   
  4026d3:	out    0x36,eax
  4026d5:	inc    BYTE PTR [edx-0x2e]
  4026d8:	imul   esp,DWORD PTR [eax-0x70],0xfffffff4
  4026dc:	loopne 0x40268c
  4026de:	aas    
  4026df:	cmc    
  4026e0:	mov    ds:0xde3a2762,eax
  4026e5:	loop   0x40271a
  4026e7:	jnp    0x402752
  4026e9:	scas   al,BYTE PTR es:[edi]
  4026ea:	imul   ebx
  4026ec:	gs lahf 
  4026ee:	js     0x402702
  4026f0:	aaa    
  4026f1:	add    esp,ebp
  4026f3:	mov    fs,WORD PTR [esi]
  4026f5:	cdq    
  4026f6:	push   esi
  4026f7:	popf   
  4026f8:	xchg   esi,eax
  4026f9:	mov    BYTE PTR [ecx-0x50e56bda],dl
  4026ff:	je     0x402779
  402701:	pop    ecx
  402702:	(bad)  
  402703:	je     0x402693
  402705:	sub    esi,eax
  402707:	mov    bl,0x76
  402709:	or     eax,0x53e4cb67
  40270e:	mov    ds:0xae440bc6,eax
  402713:	ds jp  0x4026d4
  402716:	jge    0x40273e
  402718:	adc    ebp,DWORD PTR [edi-0x1e]
  40271b:	cdq    
  40271c:	lahf   
  40271d:	lods   al,BYTE PTR ds:[esi]
  40271e:	popf   
  40271f:	add    bl,BYTE PTR [esi]
  402721:	pop    ebx
  402722:	out    0xd5,al
  402724:	pop    ebp
  402725:	mov    ebp,0x4d8373df
  40272a:	fist   DWORD PTR [esp+ecx*8-0x41]
  40272e:	retf   
  40272f:	xchg   esi,eax
  402730:	shl    DWORD PTR [ecx+eiz*2],0xc3
  402734:	cld    
  402735:	xor    eax,0xffffffa7
  402738:	out    dx,eax
  402739:	int3   
  40273a:	mov    edi,0xa11b058e
  40273f:	sahf   
  402740:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  402742:	or     eax,0x99d2c68b
  402747:	pop    ecx
  402748:	ficom  WORD PTR [edx+edx*4+0x42f91ff5]
  40274f:	sbb    eax,0xd5a2eee8
  402754:	and    DWORD PTR [eax],ebx
  402756:	rcr    BYTE PTR [edx+0x1b],cl
  402759:	sub    al,0x6b
  40275b:	ja     0x4026fb
  40275d:	and    al,BYTE PTR [ebp-0x23d7d256]
  402763:	xchg   edi,eax
  402764:	inc    ebx
  402765:	(bad)  
  402766:	outs   dx,DWORD PTR ds:[esi]
  402767:	mov    bl,0x5d
  402769:	inc    ecx
  40276a:	push   eax
  40276b:	xor    al,0x31
  40276d:	inc    esi
  40276e:	cmp    BYTE PTR [edx],dl
  402770:	sub    ebx,DWORD PTR [ebp-0x539a95f7]
  402776:	aas    
  402777:	mov    ecx,0x473a036c
  40277c:	pop    edi
  40277e:	adc    DWORD PTR [edi],edi
  402780:	into   
  402781:	xchg   esp,eax
  402782:	fmulp  st(0),st
  402784:	pusha  
  402785:	popa   
  402786:	ja     0x4027d1
  402788:	adc    edi,DWORD PTR gs:[edx+0x79]
  40278c:	sbb    eax,0x2e8360e5
  402791:	push   ebx
  402792:	out    0xfa,al
  402794:	sub    BYTE PTR ds:[esi],ch
  402797:	icebp  
  402798:	loope  0x402787
  40279a:	pop    ebp
  40279b:	or     BYTE PTR [ebx+0xe],bh
  40279e:	jmp    DWORD PTR [esi-0x22]
  4027a1:	sbb    BYTE PTR [ecx],0x25
  4027a4:	cmp    al,0x4a
  4027a6:	int3   
  4027a7:	dec    esi
  4027a8:	fcmovne st,st(1)
  4027aa:	mov    dh,0xf8
  4027ac:	imul   esp,DWORD PTR [edi-0x4c],0xffffff9f
  4027b0:	pusha  
  4027b1:	xchg   DWORD PTR [esp+edi*1],edx
  4027b4:	cmp    DWORD PTR [esi+0x53d64539],0x990d3aee
  4027be:	nop
  4027bf:	dec    edx
  4027c0:	outs   dx,DWORD PTR ds:[esi]
  4027c1:	adc    ecx,DWORD PTR [esi+0x78033ba]
  4027c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c8:	loope  0x402765
  4027ca:	je     0x40283f
  4027cc:	or     ebx,DWORD PTR [edi]
  4027ce:	sbb    DWORD PTR [edi+ebp*8+0x6c],0x6a4fbc5f
  4027d6:	push   cs
  4027d7:	and    esp,ebp
  4027d9:	mov    esi,0x7c0d37d
  4027de:	leave  
  4027df:	mov    ds,WORD PTR [ecx]
  4027e1:	in     eax,0x92
  4027e3:	push   0x46
  4027e5:	mov    ds:0xd5b6d939,eax
  4027ea:	jbe    0x402843
  4027ec:	repz xor al,0xcc
  4027ef:	dec    ebx
  4027f0:	arpl   sp,cx
  4027f2:	mov    ebp,0x272002a8
  4027f7:	iret   
  4027f8:	push   es
  4027f9:	mov    bl,0xe3
  4027fb:	sti    
  4027fc:	in     eax,0xb8
  4027fe:	stos   BYTE PTR es:[edi],al
  4027ff:	adc    eax,0xac36b075
  402804:	popf   
  402805:	test   eax,0xbed7c632
  40280a:	pushf  
  40280b:	and    ah,dh
  40280d:	jne    0x4027be
  40280f:	push   ebx
  402810:	xlat   BYTE PTR ds:[ebx]
  402811:	test   al,0x6b
  402813:	into   
  402814:	inc    edi
  402815:	test   al,0x10
  402817:	mov    ecx,DWORD PTR [esi]
  402819:	mov    ds:0x78668dd1,eax
  40281e:	jae    0x4027d6
  402820:	jae    0x4027f9
  402822:	xchg   ecx,eax
  402823:	jmp    0xff5b165d
  402828:	das    
  402829:	in     al,dx
  40282a:	int    0xcd
  40282c:	fucom  st(4)
  40282e:	(bad)
  402832:	pop    esp
  402833:	xor    DWORD PTR [edi+0x56ca7644],ebp
  402839:	jo     0x40280b
  40283b:	in     eax,dx
  40283c:	inc    ebx
  40283d:	jae    0x4028b1
  40283f:	aad    0x8
  402841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402842:	rcl    eax,0x8f
  402845:	dec    esp
  402846:	push   ds
  402847:	sub    bl,al
  402849:	gs popa 
  40284b:	lea    ecx,[esi]
  40284d:	cmc    
  40284e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40284f:	push   edx
  402850:	sar    edi,cl
  402852:	cmc    
  402853:	pop    ss
  402854:	sbb    ah,cl
  402856:	rol    BYTE PTR [ebx+0x6c754ceb],cl
  40285c:	jmp    0xb57c:0x64f7e81f
  402863:	popa   
  402864:	test   eax,0x8af80fd3
  402869:	or     al,0xdf
  40286b:	call   FWORD PTR [eax]
  40286d:	loope  0x40281f
  40286f:	cmp    dh,BYTE PTR [ecx]
  402871:	lea    esi,fs:[eax+edi*8-0x2382c2e2]
  402879:	add    esi,DWORD PTR [eax-0x4183eb7f]
  40287f:	sub    BYTE PTR [eax+0x4b26fab],bl
  402885:	push   ds
  402886:	cmp    BYTE PTR [ecx-0x5b],0xf5
  40288a:	jle    0x402894
  40288c:	loopne 0x4028e9
  40288e:	or     dh,BYTE PTR [edx+eax*4-0x5f5b7343]
  402895:	jp     0x40283e
  402897:	ret    
  402898:	ins    DWORD PTR es:[edi],dx
  402899:	push   edi
  40289a:	dec    edx
  40289b:	test   eax,0xa28f37ad
  4028a0:	out    0x27,eax
  4028a2:	fwait
  4028a3:	into   
  4028a4:	jns    0x402881
  4028a6:	jmp    0xeaeb:0x9c4113f1
  4028ad:	imul   ebx,DWORD PTR [edi+ebp*1-0x1e78e69d],0xc4d7c22b
  4028b8:	pop    ds
  4028b9:	inc    edi
  4028ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028bb:	sub    DWORD PTR [eax-0x43],0xffffffeb
  4028bf:	(bad)  
  4028c0:	in     eax,dx
  4028c1:	dec    edx
  4028c2:	scas   eax,DWORD PTR es:[edi]
  4028c3:	mov    ebp,DWORD PTR [edx]
  4028c5:	out    0x16,al
  4028c7:	mov    cs,WORD PTR [esi-0x2a]
  4028ca:	mov    bl,0xfa
  4028cc:	and    al,0x58
  4028ce:	sub    BYTE PTR [edi],bh
  4028d0:	xor    eax,0x8319e77d
  4028d5:	pop    edi
  4028d6:	sub    eax,0xa2cc8cf1
  4028db:	lock out dx,al
  4028dd:	call   FWORD PTR [edi]
  4028df:	mov    ebp,0x6964024c
  4028e4:	xlat   BYTE PTR ds:[ebx]
  4028e5:	lods   eax,DWORD PTR ds:[esi]
  4028e6:	outs   dx,BYTE PTR ds:[esi]
  4028e7:	loope  0x40293e
  4028e9:	jbe    0x40293b
  4028eb:	jecxz  0x40287b
  4028ed:	cmp    ch,BYTE PTR [esi-0x74988a69]
  4028f3:	xor    eax,0x4a5a76a9
  4028f8:	mov    WORD PTR [esi+ebp*2],ds
  4028fb:	dec    edx
  4028fc:	imul   edi,DWORD PTR [ebp+0x4b],0xcd411f55
  402903:	mov    bh,0x2d
  402905:	adc    BYTE PTR [esi],0x8f
  402908:	out    0xf2,al
  40290a:	cdq    
  40290b:	or     al,0x68
  40290d:	adc    bh,BYTE PTR [edx+0x45486083]
  402913:	and    al,0xbb
  402915:	repnz std 
  402917:	into   
  402918:	ror    DWORD PTR [ecx],0xf9
  40291b:	fisub  DWORD PTR [ebx]
  40291d:	repz cld 
  40291f:	sub    al,0x21
  402921:	mov    DWORD PTR [ecx+0x3ea67b83],esp
  402927:	cmp    BYTE PTR [esi+0x4a],0x76
  40292b:	leave  
  40292c:	(bad)  
  40292d:	sbb    eax,ebp
  40292f:	xor    ecx,DWORD PTR ds:0x436b443b
  402935:	push   cs
  402936:	lds    esp,FWORD PTR [ecx]
  402938:	cdq    
  402939:	imul   eax,ecx,0x4acdc664
  40293f:	inc    ebx
  402940:	cld    
  402941:	add    esi,DWORD PTR [ebp+0x7ae72e23]
  402947:	sti    
  402948:	push   edi
  402949:	push   0xe
  40294b:	push   eax
  40294c:	pop    edi
  40294d:	inc    edi
  40294e:	pop    ecx
  40294f:	mov    bh,0xff
  402951:	xchg   ecx,eax
  402952:	(bad)  
  402953:	in     eax,dx
  402954:	or     eax,0xca7689d2
  402959:	or     esp,DWORD PTR [edx+0x33]
  40295c:	xchg   edi,eax
  40295d:	push   esp
  40295e:	adc    eax,0x91d40462
  402963:	lods   eax,DWORD PTR ds:[esi]
  402964:	fdivr  DWORD PTR [ebp-0x51f2d340]
  40296a:	ja     0x4825467
  402970:	(bad)  
  402971:	lods   al,BYTE PTR ds:[esi]
  402972:	ret    
  402973:	ins    DWORD PTR es:[edi],dx
  402974:	add    DWORD PTR [esi-0x4da47413],esp
  40297a:	jmp    0xb1c4e632
  40297f:	mov    BYTE PTR gs:[eax+0x11],ah
  402983:	aas    
  402984:	sub    BYTE PTR [ecx],bl
  402986:	mov    dh,0xa8
  402988:	pop    ss
  402989:	fist   WORD PTR [ebx-0x58]
  40298c:	cmp    BYTE PTR [edx+edx*8-0x546aa310],cl
  402993:	shr    DWORD PTR [esi],1
  402995:	aas    
  402996:	adc    dh,al
  402998:	cdq    
  402999:	loop   0x402987
  40299b:	add    DWORD PTR [esi-0x5005d253],0xffffffb1
  4029a2:	mov    ebx,0xdff37398
  4029a7:	push   cs
  4029a8:	mov    WORD PTR [esi-0x14],es
  4029ab:	cmp    BYTE PTR [eax+0x7ed05604],bh
  4029b1:	call   0x937f:0x1c97d35f
  4029b8:	or     BYTE PTR [edi-0x20],dh
  4029bb:	call   DWORD PTR [esi]
  4029bd:	lahf   
  4029be:	stos   DWORD PTR es:[edi],eax
  4029bf:	sub    ebx,ebx
  4029c1:	sbb    BYTE PTR [edx-0x73ed05d0],dh
  4029c7:	pushf  
  4029c8:	cdq    
  4029c9:	(bad)  
  4029ca:	(bad)  
  4029cc:	bound  esi,QWORD PTR [ecx]
  4029ce:	sbb    eax,0xc38452d0
  4029d3:	fstp   DWORD PTR [edi+0x33]
  4029d6:	div    DWORD PTR [ecx+0x19d3921b]
  4029dc:	mov    ebp,0x56acb0eb
  4029e1:	push   esi
  4029e2:	mov    ds:0xcf6ec2b,eax
  4029e7:	pushf  
  4029e8:	add    eax,0x68d6a72b
  4029ed:	out    0xd0,al
  4029ef:	fs hlt 
  4029f1:	shl    DWORD PTR [ebx],0xe0
  4029f4:	adc    eax,0x1e6fdbb1
  4029f9:	shr    ah,1
  4029fb:	ret    0xbb19
  4029fe:	inc    edx
  4029ff:	dec    ebp
  402a00:	int3   
  402a01:	jnp    0x4029f4
  402a03:	push   edi
  402a04:	xchg   edi,eax
  402a05:	imul   DWORD PTR ds:0xaf11984b
  402a0b:	jl     0x4029bd
  402a0d:	or     DWORD PTR [ebx+0x3a],eax
  402a10:	mov    eax,0x12f0db66
  402a15:	mov    esp,0x7e06cc24
  402a1a:	push   ecx
  402a1b:	data16 lods al,BYTE PTR ds:[esi]
  402a1d:	cwde   
  402a1e:	xlat   BYTE PTR ds:[ebx]
  402a1f:	cmp    al,0xa
  402a21:	cwde   
  402a22:	or     al,0xac
  402a24:	inc    eax
  402a25:	xchg   ebx,eax
  402a26:	pop    esi
  402a27:	cdq    
  402a28:	xor    eax,0x797f8ed8
  402a2d:	xchg   edi,eax
  402a2e:	jecxz  0x402a05
  402a30:	iret   
  402a31:	jns    0x4029eb
  402a33:	out    0x6c,eax
  402a35:	inc    ebp
  402a36:	jmp    0x402a93
  402a38:	xchg   DWORD PTR [eax],ecx
  402a3a:	retf   0xcb2a
  402a3d:	pusha  
  402a3e:	scas   eax,DWORD PTR es:[edi]
  402a3f:	push   edi
  402a40:	fnstsw WORD PTR [ebx]
  402a42:	in     al,0xfd
  402a44:	push   edx
  402a45:	xor    al,0xc8
  402a47:	ret    0x626
  402a4a:	push   ds
  402a4b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4d:	push   edi
  402a4e:	sub    esi,edx
  402a50:	mov    WORD PTR [ebx+0x2a15823],?
  402a56:	dec    edi
  402a57:	ret    0xa6ba
  402a5a:	rcr    DWORD PTR [ebp+0x63],0x5e
  402a5e:	daa    
  402a5f:	pop    edi
  402a60:	pop    eax
  402a61:	mov    esi,0x1fc0ae36
  402a66:	add    eax,0x17cb81b1
  402a6b:	add    eax,0xdc8f26da
  402a70:	mov    ebp,0x1f3f8aad
  402a75:	dec    ebp
  402a76:	mov    bh,0x77
  402a78:	retf   0x576a
  402a7b:	mov    ebx,0x4b861c30
  402a80:	cmc    
  402a81:	push   esp
  402a82:	xchg   BYTE PTR [eax],dh
  402a84:	pop    ss
  402a85:	mul    BYTE PTR [ebx]
  402a87:	int    0x1f
  402a89:	stc    
  402a8a:	test   BYTE PTR [ebx],cl
  402a8c:	dec    eax
  402a8d:	push   ebx
  402a8e:	xchg   BYTE PTR ds:0x1bfe77d8,ah
  402a94:	jno    0x402a75
  402a96:	je     0x402a33
  402a98:	les    ebx,FWORD PTR [ebp-0x74]
  402a9b:	dec    eax
  402a9c:	xor    eax,0x5d43a6d5
  402aa1:	je     0x402b20
  402aa3:	ss scas eax,DWORD PTR es:[edi]
  402aa5:	pop    esi
  402aa6:	dec    ebp
  402aa7:	lock cmp eax,0xa7ac7d4a
  402aad:	lods   eax,DWORD PTR ds:[esi]
  402aae:	mov    dh,0xfc
  402ab0:	jl     0x402a32
  402ab2:	xchg   esi,eax
  402ab3:	call   0x1fa:0xf9c2fef
  402aba:	leavew 
  402abc:	xor    al,0xa
  402abe:	add    al,0x21
  402ac0:	(bad)  
  402ac1:	xchg   ebp,eax
  402ac2:	pop    esp
  402ac3:	sbb    al,0xb5
  402ac5:	add    esi,esi
  402ac7:	push   ebx
  402ac8:	push   0xd4125c16
  402acd:	fdiv   st,st(4)
  402acf:	inc    DWORD PTR es:[eax-0x65]
  402ad3:	rcl    DWORD PTR [esi-0x67],0x54
  402ad7:	push   ss
  402ad8:	push   0xe99ed646
  402add:	leave  
  402ade:	xlat   BYTE PTR ds:[ebx]
  402adf:	in     al,0x19
  402ae1:	inc    eax
  402ae2:	mov    ds,WORD PTR [ebp+0x25a6a6a0]
  402ae8:	or     DWORD PTR [eax+0x37ef41ec],esi
  402aee:	ret    
  402aef:	pop    ecx
  402af0:	push   cs
  402af1:	hlt    
  402af2:	nop
  402af3:	and    al,0xf9
  402af5:	cmp    ecx,ebp
  402af7:	push   esp
  402af8:	hlt    
  402af9:	xor    ebx,edx
  402afb:	cdq    
  402afc:	out    dx,eax
  402afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402afe:	out    0x37,al
  402b00:	and    ebx,0x4e
  402b03:	imul   ecx,edx,0x3df37fae
  402b09:	jl     0x402ac4
  402b0b:	or     BYTE PTR [ebx-0x11],dh
  402b0e:	enter  0x417e,0x9e
  402b12:	mov    dh,0xf5
  402b14:	shl    BYTE PTR [ebx],cl
  402b16:	adc    dh,BYTE PTR [eax*1+0x1c2d986f]
  402b1d:	mov    BYTE PTR [ecx],cl
  402b1f:	or     DWORD PTR [eax],ebx
  402b21:	dec    edi
  402b22:	loope  0x402ae6
  402b24:	add    DWORD PTR [ecx+0x48b73f47],ebp
  402b2a:	fcmovne st,st(3)
  402b2c:	and    al,0x39
  402b2e:	and    dh,dh
  402b30:	inc    edx
  402b31:	pop    eax
  402b32:	xor    BYTE PTR ds:[eax+0x4e],cl
  402b36:	jmp    0x59fee49f
  402b3b:	test   BYTE PTR [ebx-0x58ecd09d],bh
  402b41:	add    esp,DWORD PTR [ebx-0x2c3164b4]
  402b47:	lds    esp,FWORD PTR [ebx-0x674bccea]
  402b4d:	add    bh,BYTE PTR [ecx+eiz*2]
  402b50:	xchg   esi,eax
  402b51:	or     al,0xdb
  402b53:	mov    dh,dl
  402b55:	xlat   BYTE PTR ds:[ebx]
  402b57:	mov    ecx,0x8e03cf1
  402b5c:	push   es
  402b5d:	fwait
  402b5e:	push   ecx
  402b5f:	popf   
  402b60:	jns    0x402bd6
  402b62:	(bad)  
  402b64:	jno    0x402b13
  402b66:	mov    ch,0xd1
  402b68:	ja     0x402b52
  402b6a:	cmovns esi,DWORD PTR [edx*8+0x4fcbe5f4]
  402b72:	(bad)  
  402b73:	adc    ebp,DWORD PTR [edx+0x1c]
  402b76:	adc    edi,DWORD PTR [ebp-0x4eea3a54]
  402b7c:	mov    al,ds:0x106a5ee4
  402b81:	int3   
  402b82:	mov    edi,0xa9b2754c
  402b87:	xchg   edx,eax
  402b88:	out    dx,al
  402b89:	ins    DWORD PTR es:[edi],dx
  402b8a:	cli    
  402b8b:	pop    ss
  402b8c:	popf   
  402b8d:	popa   
  402b8e:	(bad)  
  402b8f:	sub    al,0xe8
  402b91:	aas    
  402b92:	jge    0x402b23
  402b94:	test   edi,ebx
  402b96:	pop    ecx
  402b97:	sbb    esp,DWORD PTR [edx]
  402b99:	mov    dh,0xbf
  402b9b:	(bad)  
  402b9c:	sbb    eax,0xc34506ab
  402ba1:	sbb    dh,0xa1
  402ba4:	popf   
  402ba5:	loope  0x402b68
  402ba7:	mov    ebx,0xf1ed59b5
  402bac:	mul    DWORD PTR [ebx]
  402bae:	pop    esi
  402baf:	rcr    DWORD PTR [ecx+0xd],cl
  402bb2:	ja     0x402b3d
  402bb4:	mov    eax,ds:0xba9e33cd
  402bb9:	and    cl,BYTE PTR [ebx+0x4]
  402bbc:	(bad)  
  402bbe:	jne    0x402bcd
  402bc0:	lods   al,BYTE PTR ds:[esi]
  402bc1:	adc    BYTE PTR [edx+0x6c925a11],0x24
  402bc8:	mov    eax,ds:0x9e5cbd9c
  402bcd:	aam    0x14
  402bcf:	cli    
  402bd0:	jecxz  0x402ba7
  402bd2:	bnd jb 0x402b86
  402bd5:	sbb    bl,bl
  402bd7:	mov    esi,0x1670ff78
  402bdc:	dec    esp
  402bdd:	and    BYTE PTR gs:[ebp+0x42],dh
  402be1:	loope  0x402c1c
  402be3:	xchg   BYTE PTR [edx],bh
  402be5:	inc    eax
  402be6:	mov    ch,0x2e
  402be8:	add    al,0x83
  402bea:	mov    DWORD PTR [eax+esi*2-0x6f],eax
  402bee:	cs popf 
  402bf0:	cwde   
  402bf1:	aam    0xd7
  402bf3:	cmc    
  402bf4:	stos   BYTE PTR es:[edi],al
  402bf5:	loop   0x402be6
  402bf7:	add    dl,BYTE PTR [ebx+0x284a2a7b]
  402bfd:	std    
  402bfe:	outs   dx,BYTE PTR ds:[esi]
  402bff:	cmc    
  402c00:	or     ah,BYTE PTR [edi]
  402c02:	cdq    
  402c03:	(bad)  
  402c04:	test   DWORD PTR [edi],edi
  402c06:	sub    BYTE PTR [eax],ch
  402c08:	stc    
  402c09:	jmp    0x402c0d
  402c0b:	adc    al,0x53
  402c0d:	mov    eax,ds:0xb4296f1d
  402c12:	xchg   DWORD PTR [esi+edx*1+0x6be648ed],esp
  402c19:	push   ebp
  402c1a:	std    
  402c1b:	inc    ecx
  402c1c:	outs   dx,BYTE PTR ds:[esi]
  402c1d:	in     eax,dx
  402c1e:	cdq    
  402c1f:	ror    DWORD PTR [ecx],1
  402c21:	inc    ebp
  402c22:	les    esi,FWORD PTR [eax+0x27]
  402c25:	pop    esi
  402c26:	pusha  
  402c27:	adc    ebx,esp
  402c29:	or     DWORD PTR [ebx-0x75],0xffffff8f
  402c2d:	jae    0x402c6e
  402c2f:	xchg   edx,eax
  402c30:	aaa    
  402c31:	mov    al,ds:0x73aabc26
  402c36:	(bad)  
  402c37:	aam    0xdd
  402c39:	xchg   esp,eax
  402c3a:	fcmovbe st,st(7)
  402c3c:	jmp    0x9ec4d9bc
  402c41:	ja     0x402c66
  402c43:	stos   BYTE PTR es:[edi],al
  402c44:	and    DWORD PTR ss:[eax-0x2a],esp
  402c48:	(bad)  
  402c49:	mov    ah,0x3e
  402c4b:	(bad)  
  402c4c:	xor    ebp,DWORD PTR [ecx+0x6d]
  402c4f:	stos   BYTE PTR es:[edi],al
  402c50:	push   esp
  402c51:	jns    0x402bdc
  402c53:	pop    es
  402c54:	sbb    BYTE PTR [ebx+0x5de07e94],bl
  402c5a:	into   
  402c5b:	push   ss
  402c5c:	nop
  402c5d:	mov    eax,ds:0xe068732c
  402c62:	mov    al,0x1b
  402c64:	scas   al,BYTE PTR es:[edi]
  402c65:	loope  0x402cd1
  402c67:	retf   0xff9c
  402c6a:	xor    al,0x16
  402c6c:	inc    eax
  402c6d:	push   ss
  402c6e:	test   eax,0xf288015c
  402c73:	shl    DWORD PTR [edi+0x6ee7ac3d],0x6b
  402c7a:	xchg   edi,eax
  402c7b:	fwait
  402c7c:	or     DWORD PTR [ebx+ebp*1+0xe],ebx
  402c80:	jecxz  0x402c23
  402c82:	fadd   QWORD PTR [edx+0x2]
  402c85:	pop    ebp
  402c86:	js     0x402c49
  402c88:	or     BYTE PTR [edx],al
  402c8a:	dec    ecx
  402c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c8c:	jae    0x402ce2
  402c8e:	push   edi
  402c8f:	sahf   
  402c90:	mov    bl,BYTE PTR [eax]
  402c92:	aad    0xec
  402c94:	dec    eax
  402c95:	cld    
  402c96:	jne    0x402c9f
  402c98:	and    al,0xfb
  402c9a:	call   0x757e:0x757d33ac
  402ca1:	addr16 xchg esi,eax
  402ca3:	fnstsw WORD PTR [edx-0x4e]
  402ca6:	pusha  
  402ca7:	pop    esi
  402ca8:	lahf   
  402ca9:	mov    ch,0xae
  402cab:	repnz inc edi
  402cad:	scas   al,BYTE PTR es:[edi]
  402cae:	pop    esp
  402caf:	sub    DWORD PTR [esi+0x1c926785],esi
  402cb5:	sub    BYTE PTR [eax-0x7baf3015],0x75
  402cbc:	dec    edi
  402cbd:	ror    BYTE PTR [esi+0x7f],1
  402cc0:	mov    eax,edi
  402cc2:	or     eax,0xd72ad32b
  402cc7:	push   ebx
  402cc8:	mov    ?,WORD PTR [ebx]
  402cca:	and    bl,al
  402ccc:	dec    ebx
  402ccd:	jle    0x402d07
  402ccf:	lock ret 0x2f7
  402cd3:	xor    ebp,DWORD PTR [ebp+0x72]
  402cd6:	sub    BYTE PTR [esi],al
  402cd8:	sbb    ah,BYTE PTR [eax+0x1341c373]
  402cde:	or     DWORD PTR ds:0x40881c67,ebp
  402ce4:	push   edi
  402ce5:	es sbb ah,BYTE PTR ss:[edx+0x27bb203e]
  402ced:	fbstp  TBYTE PTR [ecx-0x6c]
  402cf0:	adc    eax,0xa6725882
  402cf5:	cdq    
  402cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf7:	sub    eax,0x75e34225
  402cfc:	(bad)  
  402cfd:	out    dx,eax
  402cfe:	lahf   
  402cff:	std    
  402d00:	inc    ecx
  402d01:	xchg   ebp,ebp
  402d03:	inc    ebp
  402d04:	xchg   edi,eax
  402d05:	pusha  
  402d06:	xchg   ebx,eax
  402d07:	rcl    BYTE PTR [edi+eiz*4],cl
  402d0a:	dec    edi
  402d0b:	inc    ebx
  402d0c:	es mov esi,0x8f48b10f
  402d12:	xchg   ebp,eax
  402d13:	test   DWORD PTR [ebp+0x1d1f7bcb],0x32d5415d
  402d1d:	lods   eax,DWORD PTR ds:[esi]
  402d1e:	mov    cl,0xc1
  402d20:	test   BYTE PTR [ecx],dh
  402d22:	ins    BYTE PTR es:[edi],dx
  402d23:	xchg   ebx,eax
  402d24:	add    BYTE PTR [edi+0x2cae347c],ah
  402d2a:	into   
  402d2b:	outs   dx,BYTE PTR ds:[esi]
  402d2c:	push   edi
  402d2d:	mov    bh,0xb9
  402d2f:	out    0x5,eax
  402d31:	(bad)  
  402d32:	ins    BYTE PTR es:[edi],dx
  402d33:	inc    esp
  402d34:	fisub  WORD PTR [ebx+0x27fa4187]
  402d3a:	xchg   ebx,eax
  402d3b:	mov    ebp,0x751fa6d4
  402d40:	sbb    eax,0xa1c865ea
  402d45:	ja     0x402cd7
  402d47:	call   0x5081:0xe0f7b381
  402d4e:	xor    BYTE PTR ds:0xc94e3418,al
  402d54:	nop
  402d55:	mov    edx,0xe68aa873
  402d5a:	jp     0x402d73
  402d5c:	std    
  402d5d:	dec    eax
  402d5e:	cmc    
  402d5f:	push   ebp
  402d60:	push   edi
  402d61:	std    
  402d62:	sar    DWORD PTR [ecx],cl
  402d64:	fdivr  QWORD PTR [edi+esi*8]
  402d67:	xor    al,0x81
  402d69:	ja     0x402d5a
  402d6b:	xchg   edi,eax
  402d6c:	mov    DWORD PTR [eax-0xc37dd41],esp
  402d72:	int3   
  402d73:	mov    ecx,0x3d84abe5
  402d78:	rcr    DWORD PTR [ecx+0x791ad0f7],1
  402d7e:	stc    
  402d7f:	cwde   
  402d80:	popf   
  402d81:	inc    edx
  402d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d83:	in     al,dx
  402d84:	rcr    DWORD PTR [eax+0xb6d864c],0x4b
  402d8b:	test   DWORD PTR [edx+edx*4-0x7a],0xccac5d5d
  402d93:	les    eax,FWORD PTR [eax]
  402d95:	add    eax,0xf52f2365
  402d9a:	sbb    dl,BYTE PTR [ebx-0x1b]
  402d9d:	mov    al,ds:0xfc7d6e5a
  402da2:	mov    eax,ds:0x2c81ba69
  402da7:	retf   
  402da8:	scas   eax,DWORD PTR es:[edi]
  402da9:	push   edx
  402daa:	lock dec esi
  402dac:	push   cs
  402dad:	push   ebp
  402dae:	pop    edx
  402daf:	retf   
  402db0:	push   ecx
  402db1:	aaa    
  402db2:	retf   0x47fb
  402db5:	jmp    0x402dc5
  402db7:	cmc    
  402db8:	arpl   WORD PTR [ecx],si
  402dba:	xchg   ebx,eax
  402dbb:	addr16 das 
  402dbd:	jge    0x402d54
  402dbf:	stos   DWORD PTR es:[edi],eax
  402dc0:	push   esi
  402dc1:	add    DWORD PTR [edx+eax*1-0x4abd8ded],0xffffff8f
  402dc9:	dec    ebx
  402dca:	jnp    0x402dc1
  402dcc:	pop    esp
  402dcd:	mov    ah,0xdf
  402dcf:	adc    al,0x63
  402dd1:	mov    eax,ds:0x163fb29c
  402dd6:	mov    ds:0x4eb14e74,eax
  402ddb:	jge    0x402e3c
  402ddd:	jbe    0x402e04
  402ddf:	addr16 cs leave 
  402de2:	mov    WORD PTR [ebx+0x57d42047],gs
  402de8:	scas   al,BYTE PTR es:[edi]
  402de9:	inc    ecx
  402dea:	cmp    DWORD PTR [edi-0x2f568c5c],eax
  402df0:	mov    ecx,fs
  402df2:	call   0x31e3abb8
  402df7:	fisttp DWORD PTR [ebp+0x68]
  402dfa:	mov    BYTE PTR [eax-0x6e],ch
  402dfd:	jae    0x402e32
  402dff:	and    al,0x8d
  402e01:	es out dx,al
  402e03:	mov    al,0x5b
  402e05:	jle    0x402da9
  402e07:	mov    edx,esp
  402e09:	mov    ecx,DWORD PTR [ebx+0x52170486]
  402e0f:	fwait
  402e10:	aaa    
  402e11:	adc    BYTE PTR [ebx+0x5d52529],al
  402e17:	(bad)  
  402e19:	pop    ebp
  402e1a:	sub    dl,BYTE PTR [edi]
  402e1c:	es pop ds
  402e1e:	push   es
  402e1f:	jle    0x402e3b
  402e21:	dec    eax
  402e22:	mov    esi,0x168c529f
  402e27:	sbb    DWORD PTR [ebx],ecx
  402e29:	push   cs
  402e2a:	ret    
  402e2b:	test   DWORD PTR [esi],ebx
  402e2d:	pop    ebp
  402e2e:	aad    0x65
  402e30:	pusha  
  402e31:	mov    bh,0xab
  402e33:	xlat   BYTE PTR ds:[ebx]
  402e34:	addr16 lahf 
  402e36:	mov    ah,0x89
  402e38:	xchg   BYTE PTR [edx],ah
  402e3a:	mov    edi,0xf7df49a9
  402e3f:	xchg   ebp,eax
  402e40:	cwde   
  402e41:	ins    DWORD PTR es:[edi],dx
  402e42:	or     eax,DWORD PTR [esp+edi*4]
  402e45:	xchg   BYTE PTR [ebp+0x7c36324c],ch
  402e4b:	ss scas al,BYTE PTR es:[edi]
  402e4d:	mov    dh,0x3
  402e4f:	mov    bl,0xe7
  402e51:	scas   al,BYTE PTR es:[edi]
  402e52:	loop   0x402e14
  402e54:	xor    BYTE PTR [eax-0x1b3d4161],dl
  402e5a:	jl     0x402e76
  402e5c:	jge    0x402df3
  402e5e:	pop    ecx
  402e5f:	mov    esp,0xa7b4ee56
  402e64:	jmp    0xa4f2:0xd740ca8c
  402e6b:	jne    0x402e79
  402e6d:	das    
  402e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e6f:	dec    edi
  402e70:	pop    ds
  402e71:	aam    0x91
  402e73:	loope  0x402e31
  402e75:	adc    eax,ecx
  402e77:	in     eax,0x72
  402e79:	arpl   WORD PTR ds:0x3235a57f,sp
  402e7f:	hlt    
  402e80:	ins    DWORD PTR es:[edi],dx
  402e81:	in     al,dx
  402e82:	push   ss
  402e83:	or     al,0x5d
  402e85:	and    ebx,DWORD PTR [ebp+edx*1-0x2c]
  402e89:	or     eax,0x59f578c8
  402e8e:	hlt    
  402e8f:	in     eax,0xe5
  402e91:	test   DWORD PTR [eax],0x9153fd78
  402e97:	out    0x0,eax
  402e99:	mov    dl,0x1d
  402e9b:	imul   edi,DWORD PTR [edx-0x4480bc80],0x9
  402ea2:	pop    edx
  402ea3:	call   0x3cb21174
  402ea8:	out    dx,al
  402ea9:	xchg   DWORD PTR [esi+0x6d],ecx
  402eac:	daa    
  402ead:	inc    ebx
  402eae:	push   0x60
  402eb0:	mov    al,0xb2
  402eb2:	push   eax
  402eb3:	ja     0x402e3e
  402eb5:	xor    DWORD PTR [ecx],eax
  402eb7:	sub    al,0x9d
  402eb9:	adc    al,0x74
  402ebb:	inc    esp
  402ebc:	sbb    BYTE PTR [edi-0x2120653b],ch
  402ec2:	inc    eax
  402ec3:	cli    
  402ec4:	outs   dx,DWORD PTR ds:[esi]
  402ec5:	loopne 0x402ec3
  402ec7:	jmp    0x9a3a:0x51927657
  402ece:	adc    edx,DWORD PTR [ecx-0x39c4531d]
  402ed4:	add    eax,0xc4eddbb7
  402ed9:	pop    eax
  402eda:	cmp    al,0x83
  402edc:	adc    eax,DWORD PTR [ebx+eax*8+0x357ed935]
  402ee3:	jno    0x402eca
  402ee5:	pop    ecx
  402ee6:	cli    
  402ee7:	(bad)  
  402ee8:	push   edi
  402ee9:	jae    0x402eb5
  402eeb:	test   bh,al
  402eed:	in     eax,dx
  402eee:	mov    ds:0x2cea10a7,al
  402ef3:	in     al,0x76
  402ef5:	sbb    DWORD PTR [ebp+0x5849210e],esp
  402efb:	or     esp,DWORD PTR [edi]
  402efd:	xor    eax,0x31de8c90
  402f02:	pop    esp
  402f03:	inc    eax
  402f04:	dec    esp
  402f05:	add    edx,edi
  402f07:	mov    dl,0x8a
  402f09:	aaa    
  402f0a:	mov    al,0x7f
  402f0c:	jmp    0x18260630
  402f11:	sbb    al,ch
  402f13:	inc    esi
  402f14:	les    esi,FWORD PTR ds:0xb729245d
  402f1a:	cmc    
  402f1b:	or     DWORD PTR [esi-0x211a4a60],0xe2a8ca5b
  402f25:	popf   
  402f26:	cdq    
  402f27:	sub    DWORD PTR [esi],ebx
  402f29:	mov    esi,0x3d5c7f40
  402f2e:	aaa    
  402f2f:	xor    DWORD PTR [edx-0x2b],esi
  402f32:	xchg   edi,eax
  402f33:	xor    BYTE PTR [ebx-0x1f],ah
  402f36:	nop
  402f37:	cli    
  402f38:	pushf  
  402f39:	and    ecx,DWORD PTR [edx+edi*4+0x44]
  402f3d:	inc    esi
  402f3e:	mov    ah,0x5b
  402f40:	test   DWORD PTR [ebx-0x61182fcd],ebx
  402f46:	mov    al,0xba
  402f48:	iret   
  402f49:	rcl    DWORD PTR [eax-0x7],cl
  402f4c:	(bad)  
  402f4d:	ror    BYTE PTR ss:[ecx],1
  402f50:	xor    DWORD PTR [eax],ebx
  402f52:	mov    esi,0x5b5c2e54
  402f57:	xchg   DWORD PTR ds:0xf9c80fae,ebx
  402f5d:	mov    edx,0xb530e548
  402f62:	mov    esi,0x4f5aff17
  402f67:	xor    eax,0x8cedb803
  402f6c:	cs loop 0x402f51
  402f6f:	mov    esi,ecx
  402f71:	fwait
  402f72:	maxps  xmm1,XMMWORD PTR [edi]
  402f75:	iret   
  402f76:	and    DWORD PTR [edi+0x387d007c],eax
  402f7c:	popf   
  402f7d:	sbb    bl,ch
  402f7f:	pop    ds
  402f80:	out    dx,al
  402f81:	mov    esp,0x24b9f7b2
  402f86:	mov    cl,0x12
  402f88:	(bad)  
  402f89:	aad    0x3e
  402f8b:	sar    BYTE PTR [edi+0x5],cl
  402f8e:	adc    bh,al
  402f90:	arpl   WORD PTR [ecx+0x3e],di
  402f93:	push   ss
  402f94:	cwde   
  402f95:	push   ds
  402f96:	cs (bad) 
  402f98:	ins    DWORD PTR es:[edi],dx
  402f99:	xor    esi,DWORD PTR [ebp-0x697accf]
  402f9f:	in     eax,0x19
  402fa1:	add    DWORD PTR ds:0xf4a9a856,esp
  402fa7:	dec    esi
  402fa8:	mov    DWORD PTR [ecx+0x4b],esp
  402fab:	mov    cl,0x66
  402fad:	sbb    eax,0x63dabcd7
  402fb2:	jb     0x402fcf
  402fb4:	aas    
  402fb5:	test   BYTE PTR [esi+0x56],cl
  402fb8:	sar    cl,0x7c
  402fbb:	icebp  
  402fbc:	dec    eax
  402fbd:	push   cs
  402fbe:	daa    
  402fbf:	jmp    0xed86be9f
  402fc4:	inc    esp
  402fc5:	mov    dh,0xa4
  402fc7:	adc    edi,ebp
  402fc9:	sbb    al,0x3d
  402fcb:	adc    al,0xab
  402fcd:	push   ecx
  402fce:	adc    dh,ah
  402fd0:	scas   eax,DWORD PTR es:[edi]
  402fd1:	jb     0x402f6f
  402fd3:	dec    eax
  402fd4:	jmp    0x6e136bb
  402fd9:	gs loope 0x40303b
  402fdc:	push   ecx
  402fdd:	xchg   edx,eax
  402fde:	(bad)  
  402fdf:	xor    eax,edi
  402fe1:	jo     0x402fef
  402fe3:	xor    BYTE PTR [ebx],ah
  402fe5:	call   0x6795:0x7a624aea
  402fec:	test   eax,0xbdf45067
  402ff1:	or     dh,BYTE PTR [esi+0x6c74d2cb]
  402ff7:	int3   
  402ff8:	xchg   ecx,eax
  402ff9:	scas   al,BYTE PTR es:[edi]
  402ffa:	out    0x7d,al
  402ffc:	xchg   ebx,eax
  402ffd:	pop    DWORD PTR [esi]
  402fff:	jne    0x402fcc
  403001:	(bad)  
  403003:	fs jl  0x402f98
  403006:	cmp    DWORD PTR [ecx],eax
  403008:	popf   
  403009:	xor    cl,BYTE PTR [ebp+0x7ca6c2aa]
  40300f:	and    ebp,ebx
  403011:	dec    eax
  403012:	je     0x403060
  403014:	push   edx
  403015:	loopne 0x40308c
  403017:	scas   al,BYTE PTR es:[edi]
  403018:	inc    esp
  403019:	cmp    DWORD PTR [eax+0x7a92dff9],ecx
  40301f:	pop    ds
  403020:	int    0xf3
  403022:	jb     0x403005
  403024:	adc    eax,0xf6baa807
  403029:	adc    BYTE PTR [esi-0x142771cc],al
  40302f:	xchg   edi,eax
  403030:	pop    esp
  403031:	and    dh,BYTE PTR [edi]
  403033:	push   eax
  403034:	test   eax,0x7115f3f8
  403039:	cli    
  40303a:	xor    esp,edx
  40303c:	xchg   ebp,eax
  40303d:	repz aas 
  40303f:	push   esp
  403040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403041:	shr    DWORD PTR [edx+0x3fd26a44],cl
  403047:	rcr    DWORD PTR [ebx+0x7f302d9c],1
  40304d:	jo     0x4030b5
  40304f:	je     0x4030bc
  403051:	stc    
  403052:	mov    ?,WORD PTR [ebx+0x1b]
  403055:	out    dx,al
  403056:	loope  0x4030d0
  403058:	mov    fs,WORD PTR [ebx+ebp*8]
  40305b:	jb     0x403053
  40305d:	into   
  40305e:	jmp    0x54a3:0xa8efa708
  403065:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403067:	cwde   
  403068:	sbb    al,0xc0
  40306a:	aam    0x23
  40306c:	mov    dl,0xa4
  40306e:	hlt    
  40306f:	push   0xffffffcb
  403071:	(bad)  
  403072:	enter  0xc530,0x9a
  403076:	or     al,0x98
  403078:	dec    edi
  403079:	push   esp
  40307a:	mov    ecx,eax
  40307c:	test   BYTE PTR [esi],0x33
  40307f:	jnp    0x403072
  403081:	adc    eax,0x5fe77ea7
  403086:	mov    ch,0x9
  403088:	test   DWORD PTR [ecx],0x7f951218
  40308e:	test   eax,0xba29370
  403093:	jb     0x403033
  403095:	loop   0x40306c
  403097:	arpl   WORD PTR [ecx+0x596030e8],si
  40309d:	sub    al,BYTE PTR [eax+0x31]
  4030a0:	cld    
  4030a1:	in     al,dx
  4030a2:	cmp    al,0x79
  4030a4:	mov    dl,0x0
  4030a6:	sti    
  4030a7:	mov    ecx,0xdfa8695a
  4030ac:	dec    esi
  4030ad:	lods   eax,DWORD PTR ds:[esi]
  4030ae:	mov    ecx,0x483770ca
  4030b3:	push   cs
  4030b4:	inc    ebx
  4030b5:	(bad)  
  4030b7:	dec    esi
  4030b8:	in     eax,dx
  4030b9:	mov    ebx,0x6ffbeac0
  4030be:	xabort 0xbf
  4030c1:	push   0x55439c1
  4030c6:	add    eax,0x6b11c518
  4030cb:	add    al,0xd1
  4030cd:	enter  0x8b8d,0x1
  4030d1:	and    eax,0x97e16c25
  4030d6:	ins    DWORD PTR es:[edi],dx
  4030d7:	popf   
  4030d8:	and    DWORD PTR [edi-0x53],ecx
  4030db:	leave  
  4030dc:	aas    
  4030dd:	fst    DWORD PTR [edx-0x2577b995]
  4030e3:	out    0xa7,al
  4030e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030e6:	(bad)  
  4030e8:	frstor [esi+0x24d89e85]
  4030ee:	xchg   esp,eax
  4030ef:	lods   al,BYTE PTR ds:[esi]
  4030f0:	ss or  al,0xfe
  4030f3:	test   ah,dl
  4030f5:	xor    ch,BYTE PTR [esp+eax*2+0x439ba85b]
  4030fc:	stos   BYTE PTR es:[edi],al
  4030fd:	mov    ecx,0xc05e36e5
  403102:	or     al,BYTE PTR [eax+0x4dc19e74]
  403108:	add    WORD PTR [esi+0x25],cx
  40310c:	push   esi
  40310d:	mov    edi,DWORD PTR [edx-0x30]
  403110:	data16 or al,0x73
  403113:	dec    ecx
  403114:	bound  ebx,QWORD PTR [edi+0x4c]
  403117:	and    ecx,edi
  403119:	dec    esi
  40311a:	pop    es
  40311b:	je     0x4030aa
  40311d:	xchg   edi,eax
  40311e:	mov    bl,0xfa
  403120:	lahf   
  403121:	adc    BYTE PTR [eax-0xfcbb44b],dl
  403127:	sub    dl,al
  403129:	cmp    eax,0x152f3c3e
  40312e:	iret   
  40312f:	xchg   BYTE PTR [bp+di-0x65],ch
  403133:	sti    
  403134:	int3   
  403135:	mov    eax,0x4671ec29
  40313a:	cmp    DWORD PTR [edx+0x23],ebp
  40313d:	lds    eax,FWORD PTR [edi]
  40313f:	sub    BYTE PTR [ebx+0x6a],cl
  403142:	mov    DWORD PTR [edi+0x2d],esp
  403145:	inc    esi
  403146:	and    al,0xec
  403148:	sbb    DWORD PTR [ebx],esp
  40314a:	sbb    BYTE PTR [edx],0x49
  40314d:	adc    ebx,DWORD PTR [esi+eiz*8-0x3f]
  403151:	mov    cl,BYTE PTR [ebx-0x253cf01e]
  403157:	loopne 0x40314e
  403159:	push   0x1f
  40315b:	mov    esi,ss
  40315d:	sbb    BYTE PTR [esi-0xa3c18a4],dl
  403163:	adc    esi,DWORD PTR [ebp-0x2]
  403166:	je     0x4031c4
  403168:	mov    esi,0x9abb2482
  40316d:	adc    edx,ebx
  40316f:	ret    0x79b0
  403172:	add    esp,edx
  403174:	push   eax
  403175:	pop    ebx
  403176:	mov    dh,BYTE PTR [ebp-0x56bb577c]
  40317c:	call   0xb4fcc90d
  403181:	or     al,0x9f
  403183:	ins    DWORD PTR es:[edi],dx
  403184:	mov    ?,WORD PTR [ecx-0x6c9474bd]
  40318a:	adc    eax,0x811397da
  40318f:	pop    esp
  403190:	sub    eax,0x6db02abf
  403195:	mov    ds:0x6c7e1ba4,eax
  40319a:	adc    DWORD PTR [edx],0xe22680fb
  4031a0:	cmp    al,ch
  4031a2:	jb     0x403181
  4031a4:	mov    ecx,0x8d1ae7e4
  4031a9:	xor    al,0x94
  4031ab:	ret    0x1cea
  4031ae:	inc    esi
  4031af:	pop    edx
  4031b0:	inc    edi
  4031b1:	ret    0x40ff
  4031b4:	sbb    edi,DWORD PTR [ecx]
  4031b6:	push   ebx
  4031b7:	sbb    dl,cl
  4031b9:	xchg   edx,eax
  4031ba:	xchg   ebx,eax
  4031bb:	shr    DWORD PTR [ebx+0x5a653fcc],0xb9
  4031c2:	dec    esi
  4031c3:	xor    BYTE PTR [ecx+0x22],0xf8
  4031c7:	adc    BYTE PTR [ebp-0x6b],dh
  4031ca:	add    DWORD PTR [esi+eiz*8],0xfe0277f0
  4031d1:	jp     0x40321c
  4031d3:	sub    esi,DWORD PTR [eax]
  4031d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d6:	add    al,0xe9
  4031d8:	test   al,0x25
  4031da:	sbb    eax,0xec080ab5
  4031df:	stos   DWORD PTR es:[edi],eax
  4031e0:	and    eax,0x409a4c95
  4031e5:	ds mov esi,0x9b08c865
  4031eb:	and    cl,BYTE PTR ds:[esi]
  4031ee:	pop    ecx
  4031ef:	cmp    eax,0x1c318147
  4031f4:	jecxz  0x40321a
  4031f6:	pop    edx
  4031f7:	mov    ebx,0x1b6c1c8d
  4031fc:	loopne 0x40323e
  4031fe:	test   DWORD PTR [edx+eax*1-0x62],esp
  403202:	push   ebp
  403203:	lea    ebp,[ebp-0x50]
  403206:	icebp  
  403207:	mov    cl,BYTE PTR [esi+ebp*2-0x74]
  40320b:	out    0x84,eax
  40320d:	je     0x4031e0
  40320f:	jns    0x4031ef
  403211:	mov    al,0x4b
  403213:	inc    esp
  403214:	cdq    
  403215:	loopne 0x40319e
  403217:	shl    BYTE PTR [ecx],1
  403219:	jbe    0x40320c
  40321b:	xchg   ecx,eax
  40321c:	mov    ebx,0xe31c346d
  403221:	aas    
  403222:	push   ss
  403223:	ret    0xe3a3
  403226:	jo     0x403269
  403228:	(bad)  
  403229:	or     eax,0x4efee93b
  40322e:	dec    esp
  40322f:	and    BYTE PTR [edx+0x8],dl
  403232:	(bad)  
  403233:	xor    ebx,ebx
  403235:	jns    0x4031dc
  403237:	aaa    
  403238:	sahf   
  403239:	retfw  
  40323b:	js     0x403223
  40323d:	mov    esp,0x8e2d828
  403242:	test   eax,0xe967634e
  403247:	cmp    ebx,0x95a7b2a0
  40324d:	pop    esp
  40324e:	fucom  st(2)
  403250:	hlt    
  403251:	call   0x7e41c7da
  403256:	xor    ebp,edi
  403258:	vpmaxub xmm1,xmm4,XMMWORD PTR [edx-0x119b6b17]
  403260:	or     dh,BYTE PTR [edx-0x4807f986]
  403266:	push   cs
  403267:	je     0x4032e6
  403269:	mov    al,ds:0xa4e3ead3
  40326e:	pop    DWORD PTR [ecx-0x20918c72]
  403274:	sbb    ecx,DWORD PTR [edi+0x731a8ac0]
  40327a:	xlat   BYTE PTR ds:[ebx]
  40327b:	jns    0x40325a
  40327d:	or     DWORD PTR [esp+ebx*2-0x4f017f13],0xffffffa2
  403285:	pop    ebx
  403286:	and    DWORD PTR [edi-0x52],esi
  403289:	lods   eax,DWORD PTR ds:[esi]
  40328a:	stc    
  40328b:	sub    eax,0xed8f631e
  403290:	adc    al,0xf1
  403292:	inc    esp
  403293:	or     al,0x1d
  403295:	inc    esp
  403296:	int    0x3e
  403298:	jbe    0x403259
  40329a:	pop    edi
  40329b:	push   ss
  40329c:	call   0xbe77918c
  4032a1:	jnp    0x403263
  4032a3:	jp     0x403290
  4032a5:	jbe    0x40326a
  4032a7:	add    ah,ch
  4032a9:	js     0x4032af
  4032ab:	push   ss
  4032ac:	push   es
  4032ad:	neg    BYTE PTR [ebp+0x6a1e5d54]
  4032b3:	add    al,BYTE PTR ds:0xabdad260
  4032b9:	(bad)  
  4032ba:	lods   eax,DWORD PTR ds:[esi]
  4032bb:	repnz (bad) 
  4032bd:	fsubr  QWORD PTR ds:0x64af763f
  4032c3:	inc    edi
  4032c4:	les    ecx,FWORD PTR [ebp-0x4d]
  4032c7:	mov    ebx,0x3c407506
  4032cc:	fldenv [esi]
  4032ce:	push   esp
  4032cf:	xor    dh,BYTE PTR [esi+ecx*4-0x359620a5]
  4032d6:	inc    esi
  4032d7:	leave  
  4032d8:	outs   dx,BYTE PTR ds:[esi]
  4032d9:	sbb    BYTE PTR ds:0x3f8af48c,ch
  4032df:	pop    ds
  4032e0:	out    0x8a,eax
  4032e2:	jns    0x40333a
  4032e4:	(bad)  
  4032e5:	out    dx,eax
  4032e6:	inc    esp
  4032e7:	retf   0x9014
  4032ea:	in     al,dx
  4032eb:	cmp    BYTE PTR [eax],dh
  4032ed:	retf   0x92bb
  4032f0:	or     al,0xab
  4032f2:	das    
  4032f3:	popa   
  4032f4:	imul   eax,eax,0x24c8dbdf
  4032fa:	sar    DWORD PTR [edi],1
  4032fc:	pop    ebp
  4032fd:	sbb    eax,0xa4f6f6d8
  403302:	jmp    0x4032ce
  403304:	mov    eax,DWORD PTR [esp+eiz*8+0x653a9e9c]
  40330b:	ret    
  40330c:	call   0x22f4:0xf66cf3f5
  403313:	aas    
  403314:	lea    ecx,[ebx+0x76]
  403317:	push   cs
  403318:	scas   al,BYTE PTR es:[edi]
  403319:	test   BYTE PTR [ecx+0x49],ch
  40331c:	xchg   edi,eax
  40331d:	int3   
  40331e:	mov    edx,DWORD PTR [eax+0x6984a49d]
  403324:	int3   
  403325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403326:	sahf   
  403327:	out    0x46,al
  403329:	pop    es
  40332a:	inc    edx
  40332b:	imul   ebp
  40332d:	cmp    DWORD PTR [ebx],0xffffff90
  403330:	mov    esi,?
  403332:	sub    bh,0x5
  403335:	push   edi
  403336:	(bad)  
  403337:	sub    esi,DWORD PTR [eax]
  403339:	or     DWORD PTR [ebp+eiz*8-0x266abef5],edx
  403340:	pop    eax
  403341:	inc    eax
  403342:	mov    es,WORD PTR ds:0x824eb392
  403348:	shr    DWORD PTR [edi],cl
  40334a:	lahf   
  40334b:	daa    
  40334c:	cmp    DWORD PTR [ebx],ebx
  40334e:	mov    BYTE PTR [ecx+0x37a80740],dl
  403354:	pop    eax
  403355:	cmp    ebx,ebx
  403357:	cmp    al,BYTE PTR gs:[edx-0x15168d38]
  40335e:	test   DWORD PTR [ebp+0x43c2c06a],esi
  403364:	cmc    
  403365:	sbb    DWORD PTR [esi],0x1a325a78
  40336b:	aad    0xf3
  40336d:	repnz (bad) 
  40336f:	repz in eax,dx
  403371:	(bad)  
  403372:	ins    BYTE PTR es:[edi],dx
  403373:	int    0x70
  403375:	dec    edx
  403376:	mov    dh,0xbb
  403378:	push   esp
  403379:	sub    DWORD PTR [ecx],0xc8515933
  40337f:	inc    edx
  403380:	mov    edi,0x375a0f5d
  403385:	mov    eax,ds:0xcb6e3fae
  40338a:	inc    edx
  40338b:	jp     0x4033af
  40338d:	lock in eax,dx
  40338f:	xor    al,0x46
  403391:	jae    0x4033b9
  403393:	lods   eax,DWORD PTR ds:[esi]
  403394:	jns    0x4033af
  403396:	xor    BYTE PTR [ebp-0x2f],dl
  403399:	push   ebp
  40339a:	test   al,0xd
  40339c:	pop    ecx
  40339d:	mov    ds:0x6afa3a7,al
  4033a2:	jno    0x40341e
  4033a4:	bound  edx,QWORD PTR [ecx]
  4033a6:	or     DWORD PTR [esi-0x108e25fa],0x162e1342
  4033b0:	arpl   si,bp
  4033b2:	test   BYTE PTR [ebx],bl
  4033b4:	dec    esp
  4033b5:	repz aas 
  4033b7:	sbb    eax,0xe95b3425
  4033bc:	cwde   
  4033bd:	fisub  WORD PTR [ecx+0x3f]
  4033c0:	sti    
  4033c1:	mov    edi,0x363e9bd2
  4033c6:	dec    edi
  4033c7:	push   si
  4033c9:	pop    eax
  4033ca:	jge    0x4033ed
  4033cc:	mov    bh,0x4b
  4033ce:	repz cmp BYTE PTR [ecx],bl
  4033d1:	je     0x4033d0
  4033d3:	jbe    0x4033d8
  4033d5:	sti    
  4033d6:	jbe    0x40336e
  4033d8:	xchg   esp,edx
  4033da:	jmp    0x463c7c70
  4033df:	inc    esi
  4033e0:	mov    cl,0x1d
  4033e2:	push   esp
  4033e3:	ins    DWORD PTR es:[edi],dx
  4033e4:	pop    esi
  4033e5:	sar    ebx,1
  4033e7:	retf   
  4033e8:	jbe    0x40341c
  4033ea:	or     eax,0x1499ac1
  4033ef:	mov    BYTE PTR [eax-0x4f],0x2e
  4033f3:	test   edi,ecx
  4033f5:	ret    
  4033f6:	pop    edx
  4033f7:	into   
  4033f8:	scas   al,BYTE PTR es:[edi]
  4033f9:	or     BYTE PTR [ecx+0x7fa80efd],dh
  4033ff:	addr16 cwde 
  403401:	push   ds
  403402:	(bad)  
  403404:	and    DWORD PTR [esi+0x23],ebx
  403407:	jl     0x40345b
  403409:	or     al,0x2b
  40340b:	clc    
  40340c:	cmp    al,0x97
  40340e:	int3   
  40340f:	xchg   edi,eax
  403410:	push   ebp
  403411:	xlat   BYTE PTR ds:[ebx]
  403412:	xchg   DWORD PTR [edi],esp
  403414:	ins    DWORD PTR es:[edi],dx
  403415:	push   esi
  403416:	ror    DWORD PTR [ebx-0x20a4c076],cl
  40341c:	icebp  
  40341d:	push   ebx
  40341e:	dec    ecx
  40341f:	ins    DWORD PTR es:[edi],dx
  403420:	(bad)
  403423:	jnp    0x403458
  403425:	cmp    ch,BYTE PTR [ebx]
  403427:	scas   al,BYTE PTR es:[edi]
  403428:	in     eax,dx
  403429:	jmp    0xd5ca:0x4439a73b
  403430:	sub    BYTE PTR [ecx-0x71],bl
  403433:	and    dh,cl
  403435:	xchg   esp,eax
  403436:	fadd   st,st(7)
  403438:	push   ss
  403439:	sbb    eax,DWORD PTR [ecx]
  40343b:	imul   ebp,DWORD PTR [ebx+0x22],0xcc8df6fa
  403442:	hlt    
  403443:	ror    ebp,cl
  403445:	jmp    0x471d:0xce71fce
  40344c:	and    BYTE PTR [ecx],0xa2
  40344f:	sti    
  403450:	push   cs
  403451:	fild   DWORD PTR [edi+0x56]
  403454:	cwde   
  403455:	arpl   WORD PTR [eax],ax
  403457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403458:	call   0x79f1:0x57f2ea62
  40345f:	aad    0x7b
  403461:	stos   DWORD PTR es:[edi],eax
  403462:	add    DWORD PTR [esi-0x65],esi
  403465:	(bad)  
  403466:	or     DWORD PTR ds:0xd42b9105,edi
  40346c:	(bad)  
  40346d:	cli    
  40346e:	jnp    0x403448
  403470:	push   esp
  403471:	add    edx,ecx
  403473:	and    cl,BYTE PTR [ebx]
  403475:	cs jno 0x403489
  403478:	popa   
  403479:	ins    DWORD PTR es:[edi],dx
  40347a:	push   es
  40347b:	mov    WORD PTR [esi+0x7b72b179],?
  403481:	mov    dh,0x78
  403483:	inc    eax
  403484:	cwde   
  403485:	sub    al,0x7f
  403487:	pusha  
  403488:	sbb    dh,BYTE PTR [ebp+0x5b]
  40348b:	push   es
  40348c:	push   0xffffffa2
  40348e:	(bad)
  403492:	push   ecx
  403493:	test   eax,0xdb4b136a
  403498:	out    0x75,eax
  40349a:	retf   0xf16f
  40349d:	mov    ah,BYTE PTR [esi+0x1f]
  4034a0:	jle    0x40351f
  4034a2:	add    dh,ah
  4034a4:	pop    esp
  4034a5:	or     bl,dh
  4034a7:	les    edx,FWORD PTR [edx+0x9a8f10c]
  4034ad:	daa    
  4034ae:	pop    ebp
  4034af:	sub    BYTE PTR [ebx-0xcef8c8c],ch
  4034b5:	sub    al,0xef
  4034b7:	shl    BYTE PTR [esp+eiz*8+0x4cc5b7a2],cl
  4034be:	push   ebx
  4034bf:	jl     0x4034ab
  4034c1:	fisttp WORD PTR [ecx-0x6abd960e]
  4034c7:	xchg   ebp,eax
  4034c8:	xchg   esi,eax
  4034c9:	retf   
  4034ca:	(bad)  [eax+0x16d623b6]
  4034d0:	fistp  WORD PTR ds:0x55b318e9
  4034d6:	sbb    cl,BYTE PTR [edx]
  4034d8:	push   esp
  4034d9:	cmc    
  4034da:	fdivr  QWORD PTR [eax+0x6c45ca49]
  4034e0:	push   ecx
  4034e1:	jnp    0x403548
  4034e3:	ja     0x403467
  4034e5:	adc    DWORD PTR [edx-0x1835e5d4],0x51
  4034ec:	ss jae 0x403500
  4034ef:	(bad)  
  4034f0:	xor    eax,ebx
  4034f2:	xor    eax,0x43aaf34e
  4034f7:	gs jae 0x403569
  4034fa:	xchg   DWORD PTR [edi+0x54],ebp
  4034fd:	jmp    0x8c82:0xde380ee8
  403504:	xchg   ecx,eax
  403505:	mov    ds,esi
  403507:	test   ecx,esi
  403509:	pop    edx
  40350a:	mov    eax,ds:0x1cbb4b56
  40350f:	pop    ebx
  403510:	(bad)  
  403511:	out    dx,eax
  403512:	clc    
  403513:	push   es
  403514:	push   dx
  403516:	fwait
  403517:	inc    esp
  403518:	pop    es
  403519:	call   0x246f:0xb9a8fd15
  403520:	xchg   edi,eax
  403521:	mov    fs,ebx
  403523:	cmp    bh,BYTE PTR [edi+0x20175219]
  403529:	ror    DWORD PTR ds:0xcfce0898,cl
  40352f:	sub    dl,BYTE PTR [ecx+0x2f60a3cd]
  403535:	dec    ebx
  403536:	ja     0x40352f
  403538:	jle    0x403589
  40353a:	pop    ss
  40353b:	sub    BYTE PTR [esi],bh
  40353d:	nop
  40353e:	mov    edi,0x7ad8e70c
  403543:	arpl   ax,sp
  403545:	mov    dh,0x7f
  403547:	adc    BYTE PTR [ebx-0x4ac4ec99],al
  40354d:	psrad  mm4,QWORD PTR [edx]
  403550:	mov    esp,DWORD PTR [ecx]
  403552:	aas    
  403553:	pop    ss
  403554:	push   es
  403555:	je     0x403537
  403557:	pop    ebp
  403558:	sub    ch,ah
  40355a:	(bad)  
  40355b:	mov    bh,ah
  40355d:	out    0x88,eax
  40355f:	repz sbb ebp,DWORD PTR [esi]
  403562:	jmp    DWORD PTR [ebx]
  403564:	pusha  
  403565:	jmp    0x403597
  403567:	pop    edx
  403568:	(bad)  
  403569:	mov    eax,0x42b7dfa9
  40356e:	test   esp,0x5bbcd10e
  403574:	mov    al,ds:0xf61bbd7e
  403579:	push   ds
  40357a:	aam    0x2d
  40357c:	(bad)  
  40357d:	fist   DWORD PTR [eax-0x2f]
  403580:	(bad)  
  403581:	adc    eax,0x104d1d39
  403586:	dec    eax
  403587:	mov    bh,BYTE PTR [edx+0x5c]
  40358a:	mov    ecx,0x70040088
  40358f:	ret    0xd05
  403592:	xchg   ebx,eax
  403593:	ret    0xcbe3
  403596:	ja     0x403572
  403598:	mov    cl,0x24
  40359a:	jecxz  0x403558
  40359c:	xchg   DWORD PTR [ebx+0x65],edi
  40359f:	ret    
  4035a0:	in     eax,0xe4
  4035a2:	es jo  0x4035b6
  4035a5:	in     al,0xf4
  4035a7:	mov    al,0x91
  4035a9:	clc    
  4035aa:	es push ss
  4035ac:	fstp   DWORD PTR [edx]
  4035ae:	push   edx
  4035af:	push   ebp
  4035b0:	jo     0x403612
  4035b2:	call   0x4627:0x2270f21d
  4035b9:	popf   
  4035ba:	pop    es
  4035bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035bc:	push   esi
  4035bd:	aas    
  4035be:	test   al,0xfb
  4035c0:	and    eax,DWORD PTR [esi]
  4035c2:	std    
  4035c3:	int3   
  4035c4:	xor    BYTE PTR [ecx+0x5b],dl
  4035c7:	inc    eax
  4035c8:	mov    eax,0x6bdf2216
  4035cd:	inc    ebp
  4035ce:	mov    ds:0xe387e889,al
  4035d3:	cmp    al,0x6e
  4035d5:	lods   eax,DWORD PTR ds:[esi]
  4035d6:	jo     0x403602
  4035d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d9:	push   edi
  4035da:	mov    bh,0x3f
  4035dc:	jge    0x403601
  4035de:	mov    edi,0xc07585f0
  4035e3:	lods   al,BYTE PTR ds:[esi]
  4035e4:	dec    edi
  4035e5:	pop    edx
  4035e6:	js     0x40358c
  4035e8:	and    DWORD PTR [ebx+0x49],esp
  4035eb:	push   0x777de6f4
  4035f0:	cli    
  4035f1:	cmp    eax,0xf0aa5ec1
  4035f6:	addr16 cdq 
  4035f8:	dec    edi
  4035f9:	push   ds
  4035fa:	(bad)  
  4035fb:	ins    DWORD PTR es:[edi],dx
  4035fc:	mov    eax,ds:0x818aacf2
  403601:	inc    esi
  403602:	sub    edi,DWORD PTR [edx]
  403604:	loopne 0x4035fe
  403606:	mov    cs,WORD PTR [edx-0x3]
  403609:	and    BYTE PTR [ebp-0x564fd55e],al
  40360f:	push   esi
  403610:	ror    DWORD PTR [ebx],cl
  403612:	sub    BYTE PTR [esi-0x3b],ah
  403615:	jo     0x4035cc
  403617:	or     ecx,edx
  403619:	inc    edx
  40361a:	comiss xmm4,xmm0
  40361d:	test   al,0xbe
  40361f:	lods   al,BYTE PTR ds:[esi]
  403620:	push   edx
  403621:	mov    DWORD PTR [ebp-0x40],eax
  403624:	xor    eax,0x2e62
  403629:	mov    eax,DWORD PTR [ebp-0x3c]
  40362c:	mov    DWORD PTR [ebp-0x14],eax
  40362f:	and    DWORD PTR ds:0x42a2de,0x0
  403639:	xor    ecx,ecx
  40363b:	xor    ecx,DWORD PTR ds:0x42a2de
  403641:	inc    ecx
  403642:	mov    DWORD PTR ds:0x42a2de,ecx
  403648:	cmp    DWORD PTR ds:0x42a2de,0xb
  40364f:	ja     0x40368d
  403655:	jmp    0x403666
  40365a:	push   DWORD PTR [ebp-0x10]
  40365d:	push   DWORD PTR [ebp-0x18]
  403660:	call   DWORD PTR ds:0x42a3c2
  403666:	cmp    DWORD PTR ds:0x42a2de,0xa
  40366d:	jne    0x403680
  403673:	mov    ecx,DWORD PTR ds:0x42a2de
  403679:	inc    ecx
  40367a:	mov    DWORD PTR ds:0x42a2de,ecx
  403680:	cmp    DWORD PTR ds:0x42a2de,0x12
  403687:	jb     0x403639
  40368d:	mov    eax,DWORD PTR [ebp-0x14]
  403690:	adc    DWORD PTR ds:0x42a2ee,edx
  403696:	push   0x4
  403698:	pop    ecx
  403699:	or     DWORD PTR ds:0x42a256,0x42a2ba
  4036a3:	sub    ecx,eax
  4036a5:	and    DWORD PTR ds:0x42a2ae,edx
  4036ab:	add    ecx,DWORD PTR [ebp-0x1c]
  4036ae:	sub    DWORD PTR ds:0x42a25a,0x29a3
  4036b8:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  4036bf:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  4036c9:	mov    DWORD PTR [ebp-0x18],ecx
  4036cc:	xor    eax,eax
  4036ce:	xor    eax,DWORD PTR ds:0x42a2c2
  4036d4:	or     DWORD PTR ds:0x42a276,eax
  4036da:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  4036e4:	mov    eax,ds:0x42a27e
  4036e9:	or     DWORD PTR ds:0x42a27a,eax
  4036ef:	mov    eax,DWORD PTR [ebp-0x14]
  4036f2:	mov    DWORD PTR [ebp-0x9c],eax
  4036f8:	adc    DWORD PTR ds:0x42a29a,ecx
  4036fe:	mov    eax,DWORD PTR [ebp-0x18]
  403701:	mov    DWORD PTR [ebp-0x98],eax
  403707:	sbb    DWORD PTR ds:0x42a28a,0x5122
  403711:	mov    eax,DWORD PTR [ebp-0x2c]
  403714:	xor    eax,esi
  403716:	add    eax,edi
  403718:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  403722:	mov    DWORD PTR [ebp-0x94],eax
  403728:	lea    eax,[ebp-0x48]
  40372b:	mov    DWORD PTR [ebp-0x90],eax
  403731:	mov    eax,DWORD PTR [ebp-0xa0]
  403737:	xor    eax,esi
  403739:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  403743:	add    eax,edi
  403745:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40374f:	mov    DWORD PTR [ebp-0xa0],eax
  403755:	sub    DWORD PTR ds:0x42a272,0x1d49
  40375f:	lea    eax,[ebp-0xa0]
  403765:	push   eax
  403766:	neg    eax
  403768:	mov    eax,DWORD PTR [ebp+0xc]
  40376b:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403775:	xor    eax,esi
  403777:	add    eax,edi
  403779:	push   eax
  40377a:	mov    eax,ds:0x42943e
  40377f:	push   0x429394
  403784:	mov    DWORD PTR ds:0x42a286,0x524d
  40378e:	push   DWORD PTR [eax]
  403790:	call   0x40a988
  403795:	xor    edx,edx
  403797:	add    edx,DWORD PTR ds:0x42a29e
  40379d:	and    DWORD PTR ds:0x42a28e,edx
  4037a3:	mov    ebx,DWORD PTR [ebp-0x14]
  4037a6:	mov    eax,DWORD PTR [ebp-0x18]
  4037a9:	mov    DWORD PTR [ebp-0x58],eax
  4037ac:	mov    eax,ds:0x42a306
  4037b1:	mov    edx,DWORD PTR ds:0x42a34e
  4037b7:	sub    edx,eax
  4037b9:	sub    eax,DWORD PTR [eax+edx*1]
  4037bc:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4037c3:	mov    eax,0xf89c85bb
  4037c8:	mov    DWORD PTR [ebp-0x1c],eax
  4037cb:	xor    DWORD PTR ds:0x42a286,0x37ec
  4037d5:	lea    ecx,[eax-0x16]
  4037d8:	and    DWORD PTR ds:0x42a2e2,0x0
  4037e2:	jmp    0x4037f4
  4037e7:	mov    edx,DWORD PTR ds:0x42a2e2
  4037ed:	inc    edx
  4037ee:	mov    DWORD PTR ds:0x42a2e2,edx
  4037f4:	cmp    DWORD PTR ds:0x42a2e2,0x18
  4037fb:	jae    0x40383b
  403801:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403808:	jge    0x40383b
  40380e:	jmp    0x40381c
  403813:	push   DWORD PTR [ebp-0x14]
  403816:	call   DWORD PTR ds:0x42a3c6
  40381c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403823:	jne    0x403836
  403829:	mov    edx,DWORD PTR ds:0x42a2e2
  40382f:	inc    edx
  403830:	mov    DWORD PTR ds:0x42a2e2,edx
  403836:	jmp    0x4037e7
  40383b:	mov    DWORD PTR [ebp-0x28],ecx
  40383e:	sub    edx,DWORD PTR ds:0x42a2d6
  403844:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40384b:	mov    edx,DWORD PTR ds:0x42a38a
  403851:	mov    edx,DWORD PTR [edx]
  403853:	xor    DWORD PTR ds:0x42a29a,edx
  403859:	mov    DWORD PTR [ebp-0x8],eax
  40385c:	mov    eax,DWORD PTR [ebp-0x10]
  40385f:	neg    edx
  403861:	xor    eax,esi
  403863:	mov    edx,0xffcd8d8f
  403868:	sub    edx,eax
  40386a:	mov    eax,ds:0x42a2fe
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  403879:	mov    eax,DWORD PTR [ebp-0x8]
  40387c:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  403886:	mov    DWORD PTR [ebp-0x3c],ebx
  403889:	mov    DWORD PTR ds:0x42a286,0xb52
  403893:	cmp    eax,ecx
  403895:	mov    DWORD PTR ds:0x42a2d2,0x1900
  40389f:	je     0x40a6a8
  4038a5:	xor    DWORD PTR ds:0x42a2b6,edx
  4038ab:	mov    eax,DWORD PTR [ebp-0x10]
  4038ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4038b1:	sub    DWORD PTR ds:0x42a266,0x42a2e2
  4038bb:	xor    eax,esi
  4038bd:	add    DWORD PTR ds:0x42a2ea,0x138
  4038c7:	xor    ecx,esi
  4038c9:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4038d0:	and    DWORD PTR ds:0x42a26a,0x0
  4038da:	xor    eax,eax
  4038dc:	or     eax,DWORD PTR ds:0x42a26a
  4038e2:	inc    eax
  4038e3:	mov    ds:0x42a26a,eax
  4038e8:	cmp    DWORD PTR ds:0x42a26a,0x7
  4038ef:	jge    0x403935
  4038f5:	jmp    0x403910
  4038fa:	push   DWORD PTR [ebp-0x10]
  4038fd:	push   DWORD PTR [ebp-0x28]
  403900:	push   0x5cc9
  403905:	push   0x429181
  40390a:	call   DWORD PTR ds:0x42a3ca
  403910:	cmp    DWORD PTR ds:0x42a26a,0x6
  403917:	jne    0x403928
  40391d:	mov    eax,ds:0x42a26a
  403922:	inc    eax
  403923:	mov    ds:0x42a26a,eax
  403928:	cmp    DWORD PTR ds:0x42a26a,0x11
  40392f:	jb     0x4038da
  403935:	mov    eax,DWORD PTR [ebp-0xc]
  403938:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  403942:	xor    edx,edx
  403944:	or     DWORD PTR ds:0x42a29e,0x16dc
  40394e:	div    ecx
  403950:	or     eax,ecx
  403952:	mov    eax,DWORD PTR [ebp-0x8]
  403955:	xor    ecx,ecx
  403957:	xor    ecx,DWORD PTR ds:0x42a292
  40395d:	sbb    DWORD PTR ds:0x42a2fa,ecx
  403963:	mov    ecx,DWORD PTR [ebp-0x10]
  403966:	xor    eax,esi
  403968:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  403972:	xor    ecx,esi
  403974:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  40397e:	sub    eax,ecx
  403980:	cmp    edx,eax
  403982:	jne    0x408281
  403988:	mov    eax,DWORD PTR [ebp-0xc]
  40398b:	neg    ecx
  40398d:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403994:	adc    ecx,eax
  403996:	jmp    0x405d47
  40399b:	inc    ebx
  40399c:	nop
  40399d:	jl     0x403948
  40399f:	rol    BYTE PTR [ecx-0x52337d56],1
  4039a5:	mov    ch,0x5d
  4039a7:	and    DWORD PTR [edi-0x1a],0xffffffcb
  4039ab:	out    dx,eax
  4039ac:	pop    esi
  4039ad:	add    DWORD PTR [ebx-0x7c7ca111],0xffffffe1
  4039b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039b5:	data16 jb 0x403959
  4039b8:	fmul   st(0),st
  4039ba:	pop    esp
  4039bb:	icebp  
  4039bc:	mov    ah,0x45
  4039be:	call   0x66d7c3eb
  4039c3:	mov    ebp,0x1050fac1
  4039c8:	popf   
  4039c9:	sbb    al,ch
  4039cb:	mov    eax,0xdcd0d672
  4039d0:	fbld   TBYTE PTR [edx+0x7604aefa]
  4039d6:	imul   ebx,ecx,0x97133713
  4039dc:	test   al,0x22
  4039de:	into   
  4039df:	sbb    BYTE PTR [eax+0x4b02e0d8],0x38
  4039e6:	iret   
  4039e7:	dec    ecx
  4039e8:	or     ebp,DWORD PTR [ebx+0x47ff6ae8]
  4039ee:	add    edx,DWORD PTR [ebx]
  4039f0:	(bad)  
  4039f1:	in     al,dx
  4039f2:	jb     0x4039fb
  4039f4:	lods   eax,DWORD PTR ds:[esi]
  4039f5:	xor    al,0xa5
  4039f7:	sbb    al,bh
  4039f9:	inc    edi
  4039fa:	gs mov bh,0xd1
  4039fd:	jmp    0xcbee998a
  403a02:	and    al,0xe1
  403a04:	pop    ebx
  403a05:	mov    dl,cl
  403a07:	out    dx,al
  403a08:	daa    
  403a09:	int3   
  403a0a:	mov    eax,ds:0x566f21d1
  403a0f:	push   ds
  403a10:	adc    DWORD PTR [ebp+0x30caa0fe],esp
  403a16:	xor    al,0xc5
  403a18:	cmp    BYTE PTR [esi],cl
  403a1a:	ja     0x403a0b
  403a1c:	(bad)  [ebx+esi*2-0x3c]
  403a20:	out    0x2e,al
  403a22:	cmp    edx,DWORD PTR [ebx-0x6fa8e429]
  403a28:	or     BYTE PTR [ebp+0x60],cl
  403a2b:	outs   dx,BYTE PTR ds:[esi]
  403a2c:	add    ah,bh
  403a2e:	mov    eax,0xd915d5e5
  403a34:	xor    esi,DWORD PTR [eax+0x2a3e3fee]
  403a3a:	jecxz  0x403a56
  403a3c:	je     0x403a84
  403a3e:	and    BYTE PTR [ebp+0x5c8a3f78],bh
  403a44:	mov    esp,DWORD PTR [edx]
  403a46:	mov    DWORD PTR [edx],ecx
  403a48:	push   edx
  403a49:	aad    0xf3
  403a4b:	mov    edx,0x346f6df2
  403a50:	pop    edx
  403a51:	les    ecx,FWORD PTR [ebp+0x45]
  403a54:	inc    eax
  403a55:	cs inc esi
  403a57:	lods   al,BYTE PTR ds:[esi]
  403a58:	mov    BYTE PTR [esi+0x36],ch
  403a5b:	sahf   
  403a5c:	xor    esp,DWORD PTR [edx-0x3a]
  403a5f:	mov    ch,0xf8
  403a61:	sbb    ah,dh
  403a63:	xchg   DWORD PTR [ebx-0x20],edi
  403a66:	push   ecx
  403a67:	pop    ebx
  403a68:	loopne 0x403a7a
  403a6a:	cs cmp ch,cl
  403a6d:	out    0x8,al
  403a6f:	(bad)  
  403a70:	fimul  WORD PTR [ebx+0x42]
  403a73:	lds    ecx,FWORD PTR [edx+0x4a]
  403a76:	add    DWORD PTR [edx],ecx
  403a78:	mov    edi,0x85948f55
  403a7d:	and    bh,BYTE PTR [esi+0x1e]
  403a80:	or     esp,DWORD PTR [edi-0x1f2b5692]
  403a86:	(bad)  
  403a87:	mov    dl,BYTE PTR [edx]
  403a89:	xor    BYTE PTR [eax+0x6d],bh
  403a8c:	stc    
  403a8d:	aam    0x62
  403a8f:	dec    edx
  403a90:	lods   eax,DWORD PTR ds:[esi]
  403a91:	xchg   esi,eax
  403a92:	xchg   DWORD PTR [eax],eax
  403a94:	out    dx,eax
  403a95:	arpl   WORD PTR [esi+edx*2+0x2a802ed1],dx
  403a9c:	aad    0x20
  403a9e:	inc    DWORD PTR gs:[eax-0x6f]
  403aa2:	fcmove st,st(4)
  403aa4:	inc    esp
  403aa5:	icebp  
  403aa6:	data16 stc 
  403aa8:	xor    al,0x97
  403aaa:	icebp  
  403aab:	rol    esp,cl
  403aad:	(bad)  
  403aaf:	in     al,dx
  403ab0:	jmp    0x403a58
  403ab2:	jo     0x403a55
  403ab4:	pusha  
  403ab5:	push   ecx
  403ab6:	jle    0x403abd
  403ab8:	enter  0x4b19,0x19
  403abc:	test   BYTE PTR [ebx+ebp*1-0x3],bl
  403ac0:	scas   eax,DWORD PTR es:[edi]
  403ac1:	test   ah,al
  403ac3:	mov    ecx,0x82527998
  403ac8:	xor    DWORD PTR [ebx-0x6f],ebp
  403acb:	pmulhw mm7,QWORD PTR [edx+0x4c]
  403acf:	ins    WORD PTR es:[edi],dx
  403ad1:	pop    edx
  403ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ad3:	mov    WORD PTR [ebx-0x1ad9f3a],ds
  403ad9:	fisubr DWORD PTR [edi-0x4862ce55]
  403adf:	loop   0x403afe
  403ae1:	add    DWORD PTR [ecx+0x2e],edi
  403ae4:	mov    ds:0xc1f80dc9,eax
  403ae9:	jne    0x403a7a
  403aeb:	cmp    al,0xfb
  403aed:	sub    DWORD PTR [eax+0x21],edi
  403af0:	sbb    edx,ebp
  403af2:	fdiv   st,st(7)
  403af4:	mov    ebp,0x76c0db7b
  403af9:	mov    dh,0xf9
  403afb:	ds xchg ecx,eax
  403afd:	pop    ebx
  403afe:	in     al,dx
  403aff:	and    BYTE PTR [edi+0x7f],ah
  403b02:	es adc al,0x25
  403b05:	stos   BYTE PTR es:[edi],al
  403b06:	add    eax,0x3cb41a38
  403b0b:	lods   eax,DWORD PTR ds:[esi]
  403b0c:	fstp   QWORD PTR [ebp-0x598435a4]
  403b12:	iret   
  403b13:	mov    ds:0xac55c378,eax
  403b18:	push   ecx
  403b19:	mov    ch,0xa0
  403b1b:	out    dx,al
  403b1c:	ss dec esi
  403b1e:	fnstenv [esi+0x28]
  403b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b22:	popf   
  403b23:	sub    DWORD PTR [edi-0x3dabfdd6],edi
  403b29:	mov    ds:0x8d69606a,eax
  403b2e:	icebp  
  403b2f:	out    0xc4,al
  403b31:	iret   
  403b32:	lds    ebx,FWORD PTR ds:0xf33b94e
  403b38:	jo     0x403b5c
  403b3a:	push   edx
  403b3b:	xchg   ecx,eax
  403b3c:	mov    ah,0x69
  403b3e:	mov    al,0xf6
  403b40:	mov    dl,0xad
  403b42:	add    dl,BYTE PTR ds:0xc57c8374
  403b48:	inc    ebp
  403b49:	mov    esp,0xb76947e
  403b4e:	pop    edx
  403b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b50:	sub    BYTE PTR [ecx+edx*2],0x19
  403b54:	inc    ecx
  403b55:	mov    ebp,0x4f123788
  403b5a:	nop
  403b5b:	fdivr  QWORD PTR [eax-0x40]
  403b5e:	jmp    0xeab9:0xcdf1522f
  403b65:	sbb    esp,esi
  403b67:	pop    ds
  403b68:	dec    ebx
  403b69:	popa   
  403b6a:	xchg   BYTE PTR [eax+eax*8-0x6ea676e1],bh
  403b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b72:	or     BYTE PTR [edi+0x51],0x72
  403b76:	jg     0x403b34
  403b78:	mov    ch,0xc
  403b7a:	jmp    0x403b94
  403b7c:	add    al,0xb4
  403b7e:	inc    esp
  403b7f:	mov    al,ds:0x2a492451
  403b84:	jp     0x403b46
  403b86:	lods   eax,DWORD PTR ds:[esi]
  403b87:	imul   esi,DWORD PTR [ecx+edi*2],0x72636c64
  403b8e:	cpuid  
  403b90:	xchg   edi,eax
  403b91:	std    
  403b92:	cld    
  403b93:	lock stos BYTE PTR es:[edi],al
  403b95:	pop    edi
  403b97:	cmp    DWORD PTR [eax],esp
  403b99:	adc    eax,0x4237f465
  403b9e:	in     al,dx
  403b9f:	or     BYTE PTR [edx+eax*2],bl
  403ba2:	inc    edx
  403ba3:	cmp    eax,0xa3ced99
  403ba8:	les    ebx,FWORD PTR ds:0xc348c0b5
  403bae:	mov    ebx,DWORD PTR [esi]
  403bb0:	mov    al,ds:0x43577297
  403bb5:	lods   al,BYTE PTR ds:[esi]
  403bb6:	or     eax,0x52de3218
  403bbb:	inc    ebx
  403bbc:	adc    BYTE PTR [ebx+eiz*1-0x329b8438],al
  403bc3:	xchg   ebp,eax
  403bc4:	cwde   
  403bc5:	add    esp,0x3b
  403bc8:	adc    BYTE PTR [ebx-0x55],ah
  403bcb:	cmp    bl,ah
  403bcd:	in     al,dx
  403bce:	and    BYTE PTR [ecx+eiz*4],dl
  403bd1:	push   ebp
  403bd2:	dec    eax
  403bd3:	outs   dx,BYTE PTR fs:[esi]
  403bd5:	out    0x2f,eax
  403bd7:	jge    0x403c2d
  403bd9:	cli    
  403bda:	rcl    DWORD PTR [ecx+edi*4],cl
  403bdd:	loope  0x403bb3
  403bdf:	sbb    al,0xf0
  403be1:	gs mov bh,0x4
  403be4:	stc    
  403be5:	jp     0x403bd6
  403be7:	fsubr  st,st(5)
  403be9:	sub    ah,0xc2
  403bec:	and    eax,0x416ae93b
  403bf1:	into   
  403bf2:	xchg   BYTE PTR [esi+0x5],ah
  403bf5:	(bad)  
  403bf6:	in     al,0x8f
  403bf8:	mov    WORD PTR [edi],gs
  403bfa:	sub    esp,DWORD PTR [ebx+0x74ee3ab9]
  403c00:	out    0xd,al
  403c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c03:	faddp  st(0),st
  403c05:	sbb    al,0x8d
  403c07:	sar    BYTE PTR [ebx+0x18],1
  403c0a:	xor    DWORD PTR [esi-0x68],edx
  403c0d:	pop    eax
  403c0e:	dec    esp
  403c0f:	arpl   WORD PTR [ebp-0x7df49460],dx
  403c15:	fnstsw WORD PTR [ebp+0x53]
  403c18:	mov    ecx,0x6c9d203a
  403c1d:	mov    edi,0x1bbaaf69
  403c22:	std    
  403c23:	pop    ecx
  403c24:	ror    dh,cl
  403c26:	xor    eax,0xd2811a43
  403c2b:	fdiv   QWORD PTR [edi+0x55f7a85a]
  403c31:	mov    cl,0xd4
  403c33:	dec    edx
  403c34:	xchg   esi,eax
  403c35:	retf   0x8243
  403c38:	loopne 0x403c9f
  403c3a:	mov    al,0xe3
  403c3c:	(bad)  
  403c3d:	jns    0x403c59
  403c3f:	out    0xc3,eax
  403c41:	or     ecx,DWORD PTR [eax+0xb78b9b2]
  403c47:	inc    edi
  403c48:	cmp    DWORD PTR [eax-0x501adcf8],edx
  403c4e:	addr16 out dx,eax
  403c50:	dec    esi
  403c51:	nop
  403c52:	std    
  403c53:	fmul   QWORD PTR [esi-0x45db1de3]
  403c59:	sar    BYTE PTR [esi],cl
  403c5b:	std    
  403c5c:	(bad)  
  403c5d:	test   ecx,eax
  403c5f:	dec    edi
  403c60:	shl    DWORD PTR [ebp+esi*2+0x70],1
  403c64:	(bad)  
  403c65:	(bad)  
  403c66:	mov    bh,0xb1
  403c68:	fcomp  DWORD PTR [ebx+ebp*8]
  403c6b:	bound  eax,QWORD PTR [ebx+0x6c]
  403c6e:	adc    eax,0x129e834c
  403c73:	test   ebx,ebp
  403c75:	daa    
  403c76:	xchg   edx,eax
  403c77:	and    BYTE PTR [eax+0x51507c94],dl
  403c7d:	das    
  403c7e:	scas   al,BYTE PTR es:[edi]
  403c7f:	call   0x14893c0a
  403c84:	arpl   WORD PTR [ecx+ecx*4+0x5c6226ae],ax
  403c8b:	push   esi
  403c8c:	adc    DWORD PTR [eax],esp
  403c8e:	rcl    ecx,0xce
  403c91:	icebp  
  403c92:	rcr    BYTE PTR [ebx-0x49],0x6f
  403c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c97:	mov    ds:0xbe279878,eax
  403c9c:	into   
  403c9d:	je     0x403ca0
  403c9f:	inc    esi
  403ca0:	xchg   ebx,eax
  403ca1:	in     eax,0x9e
  403ca3:	mov    cl,BYTE PTR [esp+eax*1-0x7f980b75]
  403caa:	imul   ecx,DWORD PTR [esp+eiz*2+0x7bdcf7d],0x6e
  403cb2:	fsub   QWORD PTR [ebx]
  403cb4:	lods   eax,DWORD PTR ds:[esi]
  403cb5:	xlat   BYTE PTR ds:[ebx]
  403cb6:	rol    BYTE PTR [esi+0x75],1
  403cb9:	rol    ah,1
  403cbb:	and    eax,0xf71b9a
  403cc0:	in     eax,dx
  403cc1:	add    al,0xca
  403cc3:	retf   
  403cc4:	xchg   edx,eax
  403cc5:	inc    ecx
  403cc6:	repz scas eax,DWORD PTR es:[edi]
  403cc8:	mov    ebx,DWORD PTR [ecx]
  403cca:	push   ebx
  403ccb:	out    dx,eax
  403ccc:	mov    bl,0x42
  403cce:	imul   esi,DWORD PTR [eax-0x6458f5e8],0xffffffcd
  403cd5:	jmp    0x5256ae3
  403cda:	mov    ds,WORD PTR es:[edx]
  403cdd:	pop    esp
  403cde:	(bad)
  403ce1:	imul   ebp,DWORD PTR cs:[ebx*8-0x56212501],0xfffffff4
  403cea:	mov    WORD PTR [edx-0x3f7e95cd],gs
  403cf0:	mov    cl,0xde
  403cf2:	cmp    ah,BYTE PTR [ebx]
  403cf4:	add    BYTE PTR [ecx],0xa1
  403cf7:	es push 0xc320c879
  403cfd:	add    DWORD PTR [ebx-0x10],0x1fcc6ba0
  403d04:	fmul   QWORD PTR [ebx]
  403d06:	popa   
  403d07:	enter  0xf612,0x86
  403d0b:	push   edi
  403d0c:	ins    BYTE PTR es:[edi],dx
  403d0d:	(bad)  
  403d0e:	call   0xc75a9dd2
  403d13:	pushf  
  403d14:	idiv   ebp
  403d16:	ja     0x403d79
  403d18:	js     0x403d27
  403d1a:	and    bl,BYTE PTR [esi+0x16c4f7a8]
  403d20:	push   0xa4086e9e
  403d25:	and    dh,BYTE PTR [edi-0x5ae8407f]
  403d2b:	stc    
  403d2c:	sub    BYTE PTR [eax],bh
  403d2e:	and    DWORD PTR [ecx-0x44bd3fe9],ebx
  403d34:	scas   al,BYTE PTR es:[edi]
  403d35:	mov    eax,ds:0xaad68f24
  403d3a:	mov    ebp,0x69f7b26b
  403d3f:	push   cs
  403d40:	jmp    0x403d37
  403d42:	push   ecx
  403d43:	clc    
  403d44:	push   0x1897dae8
  403d49:	(bad)  
  403d4a:	mov    eax,ds:0x54f4435a
  403d4f:	add    esi,DWORD PTR [eax-0x24]
  403d52:	or     DWORD PTR [eax],edx
  403d54:	mov    DWORD PTR [eax],ebp
  403d56:	js     0x403d1b
  403d58:	dec    ebx
  403d59:	repz imul edi,ecx,0xb430ce0b
  403d60:	add    dh,BYTE PTR [edi-0x46]
  403d63:	lahf   
  403d64:	add    BYTE PTR [ecx+0x46ddba8c],dl
  403d6a:	xchg   edx,eax
  403d6b:	frstor [esi-0x337e4c76]
  403d71:	push   cs
  403d72:	ins    DWORD PTR es:[edi],dx
  403d73:	mov    bh,0xd1
  403d75:	pop    ebx
  403d76:	(bad)  
  403d77:	repnz dec esi
  403d79:	mov    al,ds:0xa75468d4
  403d7e:	push   edx
  403d7f:	cmp    eax,0x243141d9
  403d84:	push   ss
  403d85:	sub    eax,0xf18ce9ae
  403d8a:	sub    BYTE PTR [ebx+0x7b41b3d2],bl
  403d90:	inc    esi
  403d91:	mov    dh,0xb4
  403d93:	lods   eax,DWORD PTR ds:[esi]
  403d94:	in     al,0xa8
  403d96:	mov    dl,0x3
  403d98:	das    
  403d99:	push   ebp
  403d9a:	das    
  403d9b:	and    al,0x3e
  403d9d:	jmp    0x403def
  403d9f:	mov    eax,ds:0x670440da
  403da4:	adc    DWORD PTR [esi-0x79],edi
  403da7:	not    DWORD PTR [ecx+0xfb7d7ba]
  403dad:	(bad)
  403db1:	mov    edx,0x4253620
  403db6:	iret   
  403db7:	repz xor al,0x6
  403dba:	inc    esi
  403dbb:	xor    al,0x32
  403dbd:	fstp   DWORD PTR [edx]
  403dbf:	adc    al,dh
  403dc1:	fimul  DWORD PTR [ebx-0x25]
  403dc4:	adc    BYTE PTR [esi-0x6fe1a1d0],ch
  403dca:	sub    ah,BYTE PTR [edi]
  403dcc:	push   cs
  403dcd:	cmp    bl,BYTE PTR ds:0xcd6ef5c0
  403dd3:	lods   al,BYTE PTR ds:[esi]
  403dd4:	lahf   
  403dd5:	nop
  403dd6:	into   
  403dd7:	mov    cl,0x26
  403dd9:	push   0x32
  403ddb:	jae    0x403e2d
  403ddd:	push   cs
  403dde:	and    ecx,DWORD PTR [esi-0x65]
  403de1:	sub    eax,0x4c0e27c3
  403de6:	test   al,0xd3
  403de8:	mov    edi,0xe5e3c30a
  403ded:	push   es
  403dee:	(bad)  
  403def:	mov    esp,DWORD PTR [ebp-0x1e]
  403df2:	shl    al,1
  403df4:	and    BYTE PTR [esi-0x77790be6],ch
  403dfa:	add    BYTE PTR [ecx+ebp*2-0x42],bl
  403dfe:	ror    DWORD PTR [esi+0x22a99abb],cl
  403e04:	ss repz pop ss
  403e07:	test   DWORD PTR [edx+ebx*4+0x1b781cf],0x9b6fcb26
  403e12:	fnsave [edi+0x0]
  403e15:	ss xor eax,0xac9e614c
  403e1b:	jp     0x403e72
  403e1d:	cld    
  403e1e:	imul   edx,DWORD PTR [ebx],0xe2a686e7
  403e24:	je     0x403ea2
  403e26:	sbb    eax,0x3f11e23d
  403e2b:	into   
  403e2c:	mov    edi,0xf2d53c0
  403e31:	mov    eax,0xe67407e5
  403e36:	(bad)
  403e3b:	cwde   
  403e3c:	shl    BYTE PTR [ebp-0x7f],cl
  403e3f:	adc    eax,0xa5bad9ea
  403e44:	ret    
  403e45:	cmc    
  403e46:	out    0xfb,al
  403e48:	mov    al,ds:0xbf517317
  403e4d:	inc    ebx
  403e4e:	xchg   ebp,eax
  403e4f:	loopne 0x403def
  403e51:	loop   0x403e59
  403e53:	pop    ds
  403e54:	lds    ebp,FWORD PTR [ebp-0x428b981c]
  403e5a:	jbe    0x403ecc
  403e5c:	add    cl,0xa4
  403e5f:	jl     0x403eb1
  403e61:	bnd ja 0x403ebd
  403e64:	push   cs
  403e65:	repz in al,0x73
  403e68:	enter  0x1e3c,0x8c
  403e6c:	(bad)  
  403e6d:	out    0xc9,eax
  403e6f:	sub    dl,BYTE PTR [edx+0x5a]
  403e72:	ss and al,dl
  403e75:	pop    esi
  403e76:	mov    ebp,0x9891fd72
  403e7b:	pushf  
  403e7c:	pop    ebp
  403e7d:	sub    al,0x65
  403e7f:	je     0x403edd
  403e81:	adc    DWORD PTR [ebx-0x48],esi
  403e84:	xor    ebx,ecx
  403e86:	push   ebx
  403e87:	pop    esp
  403e88:	retf   
  403e89:	imul   ebp,DWORD PTR [edi-0x62ba92d0],0x56
  403e90:	mov    ebp,0x5d187cb4
  403e95:	pop    ss
  403e96:	pop    ebx
  403e97:	repz dec edx
  403e99:	(bad)  [edi+0x154916f9]
  403e9f:	fild   WORD PTR [ebp+0x36]
  403ea2:	jmp    0xf18d3585
  403ea7:	mov    dl,BYTE PTR [edi]
  403ea9:	push   0x2c
  403eab:	stc    
  403eac:	add    DWORD PTR [ebp+0x3c],ebx
  403eaf:	mov    cs,WORD PTR [ebx+0x2d399ecd]
  403eb5:	xchg   ecx,eax
  403eb6:	mov    ds:0xda60101e,eax
  403ebb:	cdq    
  403ebc:	fist   DWORD PTR [ecx+0x133c0e18]
  403ec2:	shl    BYTE PTR [eax+0x5ef41875],1
  403ec8:	mov    eax,ds:0x1ae29ed1
  403ecd:	mov    ?,WORD PTR [eax]
  403ecf:	mov    edi,DWORD PTR [eax+0x4d1e4ccc]
  403ed5:	cwde   
  403ed6:	jbe    0x403e76
  403ed8:	xchg   ecx,eax
  403ed9:	adc    al,0xf2
  403edb:	ss pop edi
  403edd:	and    eax,0x8e036896
  403ee2:	xor    eax,0x224a95a1
  403ee7:	cdq    
  403ee8:	sub    ah,bl
  403eea:	cmp    al,0x71
  403eec:	or     edx,ebp
  403eee:	out    0x3c,al
  403ef0:	dec    edi
  403ef1:	adc    al,BYTE PTR [eax]
  403ef3:	cs retf 0x3cd1
  403ef7:	ins    BYTE PTR es:[edi],dx
  403ef8:	mov    cl,0x58
  403efa:	mov    esp,DWORD PTR [ebx-0x6e]
  403efd:	loop   0x403e98
  403eff:	arpl   WORD PTR [ecx],di
  403f01:	fdiv   st(2),st
  403f03:	add    eax,0x6335b14d
  403f08:	add    DWORD PTR [eax-0x289af562],ebp
  403f0e:	jp     0x403f19
  403f10:	fadd   QWORD PTR [eax-0x3347d881]
  403f16:	and    ah,al
  403f18:	sub    ebp,DWORD PTR [edx+0x6b]
  403f1b:	or     ebp,DWORD PTR [ebp+eax*8-0x7a926d46]
  403f22:	jmp    0x4285:0xace23dfd
  403f29:	out    dx,al
  403f2a:	lahf   
  403f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2c:	mov    dh,0x90
  403f2e:	int    0x27
  403f30:	sub    al,0xd5
  403f32:	out    dx,eax
  403f33:	inc    esi
  403f34:	mov    edi,0xc3c1eb4b
  403f39:	push   eax
  403f3a:	cs (bad) 
  403f3c:	fild   WORD PTR [ecx+eax*8+0x281c90bd]
  403f43:	mov    al,0x18
  403f45:	not    al
  403f47:	push   ecx
  403f48:	sbb    eax,edx
  403f4a:	aam    0x69
  403f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4d:	les    esi,FWORD PTR [edi+0x15]
  403f50:	or     bh,cl
  403f52:	xchg   esi,eax
  403f53:	je     0x403f25
  403f55:	and    esi,DWORD PTR [edx-0x673a2a8f]
  403f5b:	and    BYTE PTR [ecx-0x2bc76534],bl
  403f61:	mov    bh,0xe7
  403f63:	ret    
  403f64:	xlat   BYTE PTR ds:[ebx]
  403f65:	adc    ch,dh
  403f67:	jne    0x403fbb
  403f69:	sub    cl,BYTE PTR [ebp+0xaf4e20]
  403f6f:	rcl    DWORD PTR [eax-0x7d],1
  403f72:	fistp  WORD PTR [eax]
  403f74:	mov    al,al
  403f76:	xor    esp,DWORD PTR [esi+0x2a35360f]
  403f7c:	lea    ebp,[eax+ecx*4+0x21]
  403f80:	adc    al,0x28
  403f82:	test   eax,0xa840722c
  403f87:	bswap  esp
  403f89:	arpl   WORD PTR [ebx],bx
  403f8b:	js     0x403fd5
  403f8d:	mov    edi,0x86bbe56
  403f92:	add    ebx,DWORD PTR [ebx+0x29]
  403f95:	repz xor BYTE PTR [ebp+0x54],0xaa
  403f9a:	std    
  403f9b:	rcl    BYTE PTR [edx+esi*2-0x21],0x73
  403fa0:	test   eax,0x31de6552
  403fa5:	sub    al,0xdc
  403fa7:	(bad)  
  403fa8:	mov    ecx,0xc8faad2b
  403fad:	jnp    0x403f6b
  403faf:	xchg   esp,eax
  403fb0:	pop    ecx
  403fb1:	ins    BYTE PTR es:[edi],dx
  403fb2:	out    0xd,eax
  403fb4:	movq   QWORD PTR [esi],mm1
  403fb7:	adc    al,0x55
  403fb9:	lods   al,BYTE PTR ds:[esi]
  403fba:	scas   al,BYTE PTR es:[edi]
  403fbb:	jl     0x403f7f
  403fbd:	cmp    BYTE PTR [ebx+edi*8],bl
  403fc0:	jbe    0x40401f
  403fc2:	sub    eax,0x159c765
  403fc7:	cmp    eax,0x13b007d6
  403fcc:	fxch   st(7)
  403fce:	daa    
  403fcf:	jnp    0x403f7d
  403fd1:	push   edx
  403fd2:	ret    
  403fd3:	sbb    BYTE PTR [edx],ch
  403fd5:	dec    ecx
  403fd6:	adc    eax,DWORD PTR [ebx-0x8]
  403fd9:	xor    ebp,eax
  403fdb:	adc    ecx,DWORD PTR [esi]
  403fdd:	mov    ds:0xbe224a26,al
  403fe2:	or     al,0xc8
  403fe4:	lods   al,BYTE PTR ds:[esi]
  403fe5:	int3   
  403fe6:	add    eax,0xa17ec71c
  403feb:	add    eax,0x350e0a81
  403ff0:	lods   eax,DWORD PTR ds:[esi]
  403ff1:	push   es
  403ff2:	adc    BYTE PTR [eax-0x32986859],0xa4
  403ff9:	inc    esp
  403ffa:	inc    ebx
  403ffb:	das    
  403ffc:	mov    ebp,0x88e054f
  404001:	rol    BYTE PTR [edx+0x6d],0x2b
  404005:	lea    ebp,[edx+0x7a]
  404008:	mov    ebp,0x17571ba
  40400d:	push   eax
  40400e:	cmp    DWORD PTR [ecx],esp
  404010:	mov    ebp,0xe1bd30d4
  404015:	(bad)  
  404016:	or     al,0x2a
  404018:	in     eax,0x7f
  40401a:	or     ah,ch
  40401c:	lds    esp,FWORD PTR [ecx]
  40401e:	xchg   ebx,eax
  40401f:	call   0xd51d:0x3b3c7a8b
  404026:	cmp    esp,DWORD PTR [ebp-0x56]
  404029:	lods   al,BYTE PTR ds:[esi]
  40402a:	jle    0x403ff8
  40402c:	int    0xb1
  40402e:	xor    al,0x9d
  404030:	mov    al,ds:0xa478ad5e
  404035:	imul   eax,DWORD PTR [eax-0x21],0xffffff8d
  404039:	push   cs
  40403a:	rcr    DWORD PTR [eax+0x58],0xea
  40403e:	rol    BYTE PTR [ecx-0x1c16c78a],0x23
  404045:	loop   0x40408e
  404047:	sub    eax,0x4fba0516
  40404c:	iret   
  40404d:	(bad)  
  40404f:	retf   0x5442
  404052:	arpl   WORD PTR [edx+0x58],si
  404055:	xor    BYTE PTR [ebx],0x8
  404058:	sub    ecx,DWORD PTR [ebp+0x327b2772]
  40405e:	jnp    0x40409a
  404060:	es dec edi
  404062:	mov    dl,0xe7
  404064:	cmp    DWORD PTR [edi-0x6f],edx
  404067:	pop    ds
  404068:	adc    BYTE PTR ds:0xafb12cd,cl
  40406e:	jnp    0x40400b
  404070:	mov    ebx,0x7f1420e6
  404075:	in     eax,dx
  404076:	imul   ebx,DWORD PTR ss:[ecx+0x14],0x16
  40407b:	ja     0x4040a4
  40407d:	out    dx,al
  40407e:	adc    BYTE PTR [eax+0x2f],ah
  404081:	in     al,0x35
  404083:	xchg   ebx,eax
  404084:	jle    0x404034
  404086:	jl     0x4040c7
  404088:	xor    ebp,edx
  40408a:	jbe    0x404078
  40408c:	ins    DWORD PTR es:[edi],dx
  40408d:	pop    esp
  40408e:	aas    
  40408f:	retf   
  404090:	mov    bl,0xc9
  404092:	in     al,0xb6
  404094:	scas   al,BYTE PTR es:[edi]
  404095:	add    esp,edx
  404097:	sub    DWORD PTR [edi+0x61],edi
  40409a:	sub    al,0xee
  40409c:	or     al,0x5b
  40409e:	sbb    al,0xa
  4040a0:	add    dh,dh
  4040a2:	mov    ebx,0x6f1cda64
  4040a7:	inc    esp
  4040a8:	in     eax,dx
  4040a9:	sbb    BYTE PTR [ebx+0x62],0x58
  4040ad:	xlat   BYTE PTR ds:[ebx]
  4040ae:	push   edx
  4040af:	dec    esp
  4040b0:	fs enter 0x445,0x1
  4040b5:	sbb    al,0x86
  4040b7:	loopne 0x4040f8
  4040b9:	dec    ebp
  4040ba:	rol    BYTE PTR [ebp+0x17],1
  4040bd:	mov    ecx,0x5dec9537
  4040c2:	inc    ebp
  4040c3:	cdq    
  4040c4:	sbb    esi,DWORD PTR [ebx-0x1834c75f]
  4040ca:	test   al,0xdc
  4040cc:	call   0x5437:0x61bf5eb2
  4040d3:	call   0x8195:0x1bb7b9ef
  4040da:	lods   al,BYTE PTR ds:[esi]
  4040db:	sbb    al,0xfe
  4040dd:	test   DWORD PTR [edx+0x12],edi
  4040e0:	sar    BYTE PTR [edi],1
  4040e2:	out    dx,al
  4040e3:	mov    ch,0xc7
  4040e5:	imul   DWORD PTR [eax+0x5626a5fb]
  4040eb:	jle    0x404115
  4040ed:	sbb    dh,0xd9
  4040f0:	xchg   ecx,ebx
  4040f2:	div    BYTE PTR [ecx+ebp*4+0x246bb770]
  4040f9:	mov    ch,0x9c
  4040fb:	push   es
  4040fc:	mov    bl,0x2f
  4040fe:	fist   DWORD PTR [edx]
  404100:	add    eax,0xf78c6763
  404105:	inc    esp
  404106:	outs   dx,BYTE PTR ds:[esi]
  404107:	retf   0x66a
  40410a:	sbb    BYTE PTR [ebp+0x373c7d4],0xbb
  404111:	pop    ebp
  404112:	cmp    eax,0x86ab8a89
  404117:	(bad)  
  404118:	outs   dx,DWORD PTR ds:[esi]
  404119:	loop   0x404179
  40411b:	test   DWORD PTR [eax],esi
  40411d:	pop    ds
  40411e:	jmp    0x923:0xab3640a2
  404125:	jae    0x404192
  404127:	cwde   
  404128:	lea    edx,[esi]
  40412a:	dec    edi
  40412b:	mov    ebx,0x4d1bb20d
  404130:	imul   ebx,DWORD PTR [eax-0x7c],0xffffff94
  404134:	xor    ah,BYTE PTR [edi-0x31]
  404137:	fldcw  WORD PTR [edi+0x4b]
  40413a:	(bad)  
  40413b:	bound  edx,QWORD PTR [ebx+eiz*8-0x4620a54]
  404142:	daa    
  404143:	arpl   WORD PTR [eax-0x74bbf6b],bx
  404149:	sub    cl,BYTE PTR [ecx+esi*2]
  40414c:	push   0xe21c0781
  404151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404152:	add    al,dl
  404154:	mov    BYTE PTR [edi],cl
  404156:	lea    ebx,[eax]
  404158:	jle    0x4041ac
  40415a:	rol    BYTE PTR [esi],cl
  40415c:	inc    ebp
  40415d:	sub    dl,BYTE PTR [edx+ecx*2-0x1e]
  404161:	mov    DWORD PTR [eax+0x2e],esi
  404164:	mov    WORD PTR ds:[edi+0x7f718253],ss
  40416b:	pushf  
  40416c:	xor    edi,eax
  40416e:	inc    esp
  40416f:	mov    ebx,0xa07956c3
  404174:	xor    ah,BYTE PTR [ebp-0x16]
  404177:	push   ss
  404178:	lods   eax,DWORD PTR ds:[esi]
  404179:	cmp    cl,BYTE PTR [ecx-0x35]
  40417c:	xor    BYTE PTR [ebp-0x26],bh
  40417f:	sti    
  404180:	je     0x404167
  404182:	fwait
  404183:	pop    ecx
  404184:	jb     0x4041a9
  404186:	inc    ebx
  404187:	cmp    esp,DWORD PTR [edx+0x3c651c38]
  40418d:	jb     0x4041b8
  40418f:	(bad)  
  404191:	dec    edi
  404192:	xor    ebp,DWORD PTR [edi-0x34]
  404195:	lock (bad) 
  404197:	cmp    BYTE PTR [ebx-0x2005d069],bh
  40419d:	mov    ebp,DWORD PTR [eax]
  40419f:	stc    
  4041a0:	test   DWORD PTR [esi+ebx*1],edx
  4041a3:	outs   dx,DWORD PTR ds:[esi]
  4041a4:	clc    
  4041a5:	loope  0x4041b1
  4041a7:	cmp    esp,DWORD PTR [edx+0xe]
  4041aa:	outs   dx,BYTE PTR ds:[esi]
  4041ab:	and    DWORD PTR [esi+0x343a3bd7],0x85b3c90c
  4041b5:	push   eax
  4041b6:	icebp  
  4041b7:	call   0x7b58:0x8f37252a
  4041be:	and    al,0x65
  4041c0:	and    eax,0x89891993
  4041c5:	xchg   esi,eax
  4041c6:	inc    ebx
  4041c7:	jae    0x404173
  4041c9:	sbb    eax,0x3bded35c
  4041ce:	test   DWORD PTR [ecx],esp
  4041d0:	scas   eax,DWORD PTR es:[edi]
  4041d1:	pop    es
  4041d2:	bound  ecx,QWORD PTR [edi+edx*4]
  4041d5:	test   DWORD PTR [ebp-0x7f],esp
  4041d8:	pop    es
  4041d9:	lods   eax,DWORD PTR ds:[esi]
  4041da:	mov    ah,0x87
  4041dc:	scas   al,BYTE PTR es:[edi]
  4041dd:	arpl   WORD PTR [esp+ebx*2],di
  4041e0:	inc    ebp
  4041e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041e2:	out    0xce,eax
  4041e4:	sub    DWORD PTR [edi+0x58],esi
  4041e7:	fcmove st,st(1)
  4041e9:	jae    0x4041cd
  4041eb:	mov    eax,ds:0x1a0128ab
  4041f0:	out    dx,al
  4041f1:	outs   dx,BYTE PTR ds:[esi]
  4041f2:	or     al,0x50
  4041f4:	sbb    eax,0x82b96076
  4041f9:	cdq    
  4041fa:	retf   0x1bdc
  4041fd:	sbb    ah,BYTE PTR [edi]
  4041ff:	dec    edi
  404200:	cmp    esp,DWORD PTR [esi]
  404202:	xlat   BYTE PTR ds:[ebx]
  404203:	mul    BYTE PTR [ebp-0x354a642a]
  404209:	push   esp
  40420a:	mov    dl,0xaa
  40420c:	push   DWORD PTR [esi+eax*8]
  40420f:	stos   BYTE PTR es:[edi],al
  404210:	fstp   QWORD PTR [ebp+0x60c91c33]
  404216:	data16 ficom WORD PTR [ebp-0x25]
  40421a:	mov    fs,WORD PTR [edi]
  40421c:	les    esp,FWORD PTR ds:0x8ff8019c
  404222:	ss int 0x4
  404225:	shl    bl,cl
  404227:	test   BYTE PTR [ecx+0x5b],dl
  40422a:	sub    esi,DWORD PTR [edx]
  40422c:	dec    ebx
  40422d:	jmp    0x4cab:0xc98d01a5
  404234:	mov    bh,0xd5
  404236:	or     bl,BYTE PTR [eax]
  404238:	test   eax,0x8dd33189
  40423d:	inc    esp
  40423e:	jmp    0xa2568580
  404243:	(bad)  
  404244:	mov    ebx,0xdc1d6287
  404249:	jnp    0x40428c
  40424b:	and    edx,DWORD PTR [ebx+0x43]
  40424e:	add    DWORD PTR [bp+di-0x76f5],ecx
  404253:	adc    al,0x63
  404255:	jns    0x40426c
  404257:	add    ah,bl
  404259:	inc    ebp
  40425a:	cmp    dh,0x59
  40425d:	jg     0x40425d
  40425f:	stos   BYTE PTR es:[edi],al
  404260:	outs   dx,DWORD PTR ds:[esi]
  404261:	pop    edx
  404262:	push   ds
  404263:	dec    edx
  404264:	push   eax
  404265:	rcl    dh,cl
  404267:	adc    al,0x4
  404269:	mov    ?,edi
  40426b:	xchg   ecx,eax
  40426c:	jbe    0x4042e0
  40426e:	in     al,0x89
  404270:	inc    edi
  404271:	jns    0x404226
  404273:	(bad)  
  404274:	addr16 add eax,0x3bb646df
  40427a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40427b:	rcr    DWORD PTR [ebp-0x60],cl
  40427e:	retf   0xb23a
  404281:	sub    DWORD PTR [eax-0x42],ebx
  404284:	adc    al,0x9b
  404286:	push   ecx
  404287:	cli    
  404288:	adc    DWORD PTR [esi+0xfa94a9e],ebx
  40428e:	cs pop esi
  404290:	jmp    0x70439521
  404295:	cmp    bh,BYTE PTR [esi+ebx*8]
  404298:	sar    DWORD PTR [esi+0x4037f537],1
  40429e:	in     eax,dx
  40429f:	xor    dh,bh
  4042a1:	pop    ss
  4042a2:	cmp    bh,BYTE PTR [esi]
  4042a4:	dec    eax
  4042a5:	cli    
  4042a6:	sahf   
  4042a7:	dec    eax
  4042a8:	imul   eax,DWORD PTR [ebx+0x2e],0xb9a77f3f
  4042af:	addr16 push edi
  4042b1:	data16 mov ds:0x2c1b53f9,al
  4042b7:	nop
  4042b8:	jp     0x40426e
  4042ba:	sub    bh,bh
  4042bc:	jl     0x4042ae
  4042be:	cmp    ebx,edi
  4042c0:	sub    al,0xf1
  4042c2:	pop    ebp
  4042c3:	push   0x963072fb
  4042c8:	inc    ecx
  4042c9:	pusha  
  4042ca:	mov    al,ds:0x193c25bd
  4042cf:	jns    0x40426e
  4042d1:	fadd   QWORD PTR [ebp+0x3141c48e]
  4042d7:	push   0x47c0abe2
  4042dc:	rcr    BYTE PTR [ecx-0x5d49bd7c],0x38
  4042e3:	mul    DWORD PTR ss:[ebx-0x57e86156]
  4042ea:	add    DWORD PTR [ebx-0x317cdb0],ecx
  4042f0:	pop    edx
  4042f1:	and    DWORD PTR [edi],esp
  4042f3:	nop
  4042f4:	sar    BYTE PTR [ecx+edx*4+0x2cd2fa0d],0x86
  4042fc:	test   eax,0x919c18b
  404301:	into   
  404302:	arpl   WORD PTR [esi-0x45],sp
  404305:	jl     0x404328
  404307:	sbb    eax,0x9f918a4d
  40430c:	arpl   cx,cx
  40430e:	stos   BYTE PTR es:[edi],al
  40430f:	ja     0x404354
  404311:	mov    DWORD PTR [edx-0x25],ecx
  404314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404315:	test   DWORD PTR [edi],esp
  404317:	pop    ebp
  404318:	mov    ebx,0x428482a6
  40431d:	or     eax,DWORD PTR [edi+eiz*1-0x30]
  404321:	xchg   DWORD PTR [eax+0x43],ebp
  404324:	push   edi
  404325:	aad    0x99
  404327:	(bad)  
  404329:	push   eax
  40432a:	in     eax,0x2b
  40432c:	(bad)  
  40432d:	leave  
  40432e:	repnz xchg edx,eax
  404330:	xchg   edx,eax
  404331:	f2xm1  
  404333:	add    eax,0x4dec01a6
  404339:	push   ebx
  40433a:	cmc    
  40433b:	pop    ebx
  40433c:	mov    bl,0xc9
  40433e:	sahf   
  40433f:	xor    DWORD PTR [edx+0xba1fdb4],edi
  404345:	and    DWORD PTR [ebp+0x54],ebx
  404348:	mov    al,0xa1
  40434a:	dec    eax
  40434b:	sbb    eax,0xe142f4b3
  404350:	les    edx,FWORD PTR [ecx+eiz*4]
  404353:	es int 0x26
  404356:	mov    edi,0x1b5df189
  40435b:	fidiv  DWORD PTR [esp+ebp*8-0x21cd8d51]
  404362:	jne    0x4042f1
  404364:	push   0x695dcbac
  404369:	je     0x404321
  40436b:	push   0xecc06853
  404370:	mov    ah,0x79
  404372:	loop   0x404300
  404374:	jno    0x4042f7
  404376:	xchg   edx,eax
  404377:	jmp    0x40434d
  404379:	xlat   BYTE PTR ds:[ebx]
  40437a:	stc    
  40437b:	mov    ds:0x1bb9a32b,al
  404380:	cmp    eax,0xb089f39d
  404385:	dec    ebp
  404386:	and    eax,0x466e2b35
  40438b:	lock int3 
  40438d:	out    0x55,eax
  40438f:	(bad)  
  404390:	adc    ah,BYTE PTR [edi+0x245757c6]
  404396:	sbb    dl,ah
  404398:	xchg   ebp,eax
  404399:	mov    ah,0x85
  40439b:	cli    
  40439c:	jp     0x4043c7
  40439e:	mov    edx,0x47830687
  4043a3:	call   0x83fbbb21
  4043a8:	xchg   ebp,eax
  4043a9:	push   cs
  4043aa:	aas    
  4043ab:	pop    edi
  4043ac:	pop    eax
  4043ad:	pop    ecx
  4043ae:	pop    es
  4043af:	inc    edi
  4043b0:	in     eax,0x7f
  4043b2:	dec    ebx
  4043b3:	ins    DWORD PTR es:[edi],dx
  4043b4:	int3   
  4043b5:	test   DWORD PTR ds:0x6796e1e3,edi
  4043bb:	inc    edi
  4043bc:	push   0x262a16c2
  4043c1:	inc    ebp
  4043c2:	add    eax,0x1f41eb7a
  4043c7:	aaa    
  4043c8:	jmp    0x404421
  4043ca:	outs   dx,DWORD PTR ds:[esi]
  4043cb:	mov    ah,0xdc
  4043cd:	sub    al,0xe8
  4043cf:	sub    DWORD PTR [esi-0x70],ebp
  4043d2:	push   esi
  4043d3:	push   ecx
  4043d4:	adc    ah,BYTE PTR [ebx+edx*4-0x42]
  4043d8:	dec    esp
  4043d9:	enter  0x6c22,0xcf
  4043dd:	ror    esi,cl
  4043df:	stos   DWORD PTR es:[edi],eax
  4043e0:	cmc    
  4043e1:	stos   DWORD PTR es:[edi],eax
  4043e2:	dec    edx
  4043e3:	cs mov ebp,0xfe696cc1
  4043e9:	inc    esi
  4043ea:	ret    
  4043eb:	pusha  
  4043ec:	outs   dx,DWORD PTR ds:[esi]
  4043ed:	add    dl,cl
  4043ef:	xchg   edi,eax
  4043f0:	shr    BYTE PTR [ecx+edx*1+0x2b],cl
  4043f4:	push   ds
  4043f5:	mov    edi,0x78fb0960
  4043fa:	ret    
  4043fb:	and    BYTE PTR [edx+eiz*4-0x818cd4e],dh
  404402:	mov    ecx,0x24de5eb9
  404407:	xor    ebx,DWORD PTR [ebx-0xd]
  40440a:	jle    0x404429
  40440c:	push   ds
  40440d:	stc    
  40440e:	pop    edx
  40440f:	sbb    al,0xff
  404411:	call   0x5b71:0x1cc413eb
  404418:	fs adc al,0xc1
  40441b:	xchg   esi,eax
  40441c:	adc    bh,BYTE PTR [esi+0x5a]
  40441f:	push   edi
  404420:	dec    ebp
  404421:	popa   
  404422:	push   ebx
  404423:	in     eax,0x83
  404425:	(bad)  
  404426:	(bad)  
  404427:	nop
  404428:	retf   
  404429:	xchg   esi,eax
  40442a:	and    ah,BYTE PTR [edx]
  40442c:	out    0x76,al
  40442e:	gs in  eax,0x6c
  404431:	sahf   
  404432:	adc    BYTE PTR ds:0x30dfcc44,bl
  404438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404439:	push   cs
  40443a:	mov    ds:0xf9e103bf,eax
  40443f:	inc    esp
  404440:	push   ss
  404441:	cmp    esp,DWORD PTR [eax]
  404443:	push   0xd80250f1
  404448:	mov    ecx,DWORD PTR [ecx+0x6503bf72]
  40444e:	mov    eax,ds:0x7f92027f
  404453:	lods   al,BYTE PTR ds:[esi]
  404454:	adc    al,0xc7
  404456:	fucomi st,st(1)
  404458:	inc    esp
  404459:	push   ebp
  40445a:	gs stc 
  40445c:	hlt    
  40445d:	mov    ah,0xec
  40445f:	mov    cl,0x7a
  404461:	push   edi
  404462:	xor    ch,BYTE PTR [edx]
  404464:	push   edi
  404465:	pushf  
  404466:	inc    dl
  404468:	jmp    FWORD PTR [ecx-0x6f628e81]
  40446e:	mov    bl,0xca
  404470:	xchg   edi,eax
  404471:	mov    cl,0x7
  404473:	ins    DWORD PTR es:[edi],dx
  404474:	adc    BYTE PTR [ecx+0x73b5f569],dh
  40447a:	aas    
  40447b:	fcomp  DWORD PTR [ebx-0x54f84ff8]
  404481:	aaa    
  404482:	lods   al,BYTE PTR ds:[esi]
  404483:	(bad)  
  404485:	out    0xf0,eax
  404487:	add    al,ch
  404489:	dec    edx
  40448a:	sbb    BYTE PTR [esi],al
  40448c:	out    dx,al
  40448d:	sbb    eax,0x523abd7b
  404492:	loope  0x4044df
  404494:	jmp    0xb58839a4
  404499:	ja     0x404494
  40449b:	mov    esi,DWORD PTR [ebx-0x66]
  40449e:	xchg   edx,eax
  40449f:	outs   dx,DWORD PTR ds:[esi]
  4044a0:	lods   eax,DWORD PTR ds:[esi]
  4044a1:	scas   al,BYTE PTR es:[edi]
  4044a2:	mov    bl,BYTE PTR [eax+0x47]
  4044a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a6:	pop    edx
  4044a7:	xchg   ebx,eax
  4044a8:	js     0x404431
  4044aa:	aas    
  4044ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ac:	inc    ecx
  4044ad:	repz push es
  4044af:	lock out dx,al
  4044b1:	pushf  
  4044b2:	push   0x5b3c9b55
  4044b7:	retf   
  4044b8:	mov    bh,0x65
  4044ba:	cld    
  4044bb:	push   edi
  4044bc:	lods   al,BYTE PTR ds:[esi]
  4044bd:	add    al,0x36
  4044bf:	add    ebx,DWORD PTR [edx+ecx*4-0x388fa4d2]
  4044c6:	or     eax,ebx
  4044c8:	jb     0x40447b
  4044ca:	iret   
  4044cb:	pop    eax
  4044cc:	xor    eax,0x63c9f0a6
  4044d1:	loope  0x404530
  4044d3:	add    al,0x9c
  4044d5:	sbb    al,0xdd
  4044d7:	das    
  4044d8:	pop    ecx
  4044d9:	ss in  eax,0x22
  4044dc:	ud2    
  4044de:	mov    dh,0x5a
  4044e0:	inc    esp
  4044e1:	cmc    
  4044e2:	mov    BYTE PTR [esi-0x39],0xd7
  4044e6:	xchg   ecx,eax
  4044e7:	cmp    DWORD PTR [ecx-0x6],0xffffffaf
  4044eb:	cmove  ecx,edx
  4044ee:	pop    edx
  4044ef:	jecxz  0x4044b4
  4044f1:	sub    dh,dh
  4044f3:	dec    ebp
  4044f4:	inc    eax
  4044f5:	shr    ch,0xf7
  4044f8:	inc    ecx
  4044f9:	nop
  4044fa:	mov    ebx,gs
  4044fc:	sub    bh,BYTE PTR [ecx-0x44b50916]
  404502:	sbb    edi,DWORD PTR [edi+ecx*4+0xc]
  404506:	xchg   edx,eax
  404507:	and    al,0x11
  404509:	ret    0x1526
  40450c:	arpl   WORD PTR [eax],cx
  40450e:	xor    eax,0xb3cd4a2e
  404513:	cmp    BYTE PTR [eax+0x42d35f4a],ch
  404519:	and    al,0x35
  40451b:	jns    0x404599
  40451d:	shr    BYTE PTR [edx],0xbd
  404520:	icebp  
  404521:	adc    al,0xca
  404523:	jnp    0x404585
  404525:	call   0x5d2d7083
  40452a:	sub    edx,DWORD PTR [eax+0x75601888]
  404530:	or     eax,0x428ba1bf
  404535:	push   esp
  404536:	gs lods eax,DWORD PTR fs:[esi]
  404539:	lock cwde 
  40453b:	fcmovb st,st(6)
  40453d:	mov    ebx,0xb1e9f597
  404542:	mov    cl,0x14
  404544:	sbb    edi,edi
  404546:	into   
  404547:	adc    BYTE PTR [ebp+0x15cb285a],0x74
  40454e:	sub    al,0xa5
  404550:	repnz lahf 
  404552:	pusha  
  404553:	cmc    
  404554:	sbb    eax,0xc4b40dce
  404559:	push   ebx
  40455a:	sub    eax,0x3d0920bd
  40455f:	imul   ebp,esi,0xc5305d13
  404565:	pop    ebp
  404566:	and    bh,BYTE PTR [esi-0x55bae9a3]
  40456c:	fcomp  DWORD PTR [ebp-0x70ce82e9]
  404572:	pop    esp
  404573:	mov    eax,ds:0xd9aefc84
  404578:	adc    edi,DWORD PTR [esi+0x11153a76]
  40457e:	jecxz  0x4045be
  404580:	push   edx
  404581:	cmp    esp,esp
  404583:	xlat   BYTE PTR ds:[ebx]
  404584:	sti    
  404585:	imul   eax,DWORD PTR [esi],0x47a5b9c5
  40458b:	or     eax,0x5667169d
  404590:	loope  0x4045e8
  404592:	and    esp,edx
  404594:	xchg   ch,dh
  404596:	enter  0x21a6,0xa2
  40459a:	aaa    
  40459b:	inc    edx
  40459c:	sub    cl,dl
  40459e:	sbb    edx,0xe0bf5e35
  4045a4:	repnz int3 
  4045a6:	sbb    al,0x7e
  4045a8:	jns    0x4045bd
  4045aa:	ins    BYTE PTR es:[edi],dx
  4045ab:	loope  0x4045e0
  4045ad:	fwait
  4045ae:	sub    al,0xdf
  4045b0:	sbb    al,0xca
  4045b2:	pop    ebp
  4045b3:	jne    0x40459f
  4045b5:	(bad)  
  4045b6:	cld    
  4045b7:	xor    eax,0x2b0bc5f5
  4045bc:	xor    eax,0x11e84f62
  4045c1:	pushf  
  4045c2:	js     0x4045fa
  4045c4:	das    
  4045c5:	shr    BYTE PTR [ebx-0x51858991],0xb4
  4045cc:	sub    cl,BYTE PTR [ecx+esi*4+0x2a]
  4045d0:	mov    ecx,0x4effba5c
  4045d5:	pop    ebx
  4045d6:	and    BYTE PTR [edi],dl
  4045d8:	out    0x16,eax
  4045da:	push   ecx
  4045db:	lahf   
  4045dc:	enter  0x7afc,0xb
  4045e0:	jl     0x404641
  4045e2:	lds    ecx,FWORD PTR [esi+0x62]
  4045e5:	sar    bh,0x28
  4045e8:	scas   eax,DWORD PTR es:[edi]
  4045e9:	inc    esi
  4045ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045eb:	repnz mov ch,0xb6
  4045ee:	inc    edx
  4045ef:	fmul   QWORD PTR [edx+0x4951b717]
  4045f5:	and    dh,bh
  4045f7:	push   ebx
  4045f8:	popf   
  4045f9:	lea    esp,[esp+edi*4]
  4045fc:	outs   dx,DWORD PTR ds:[esi]
  4045fd:	jne    0x4045be
  4045ff:	and    al,0x85
  404601:	jle    0x404585
  404603:	sbb    eax,0xec3a483e
  404608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404609:	add    cl,BYTE PTR [ecx+0x527d8447]
  40460f:	and    eax,0x2751c685
  404614:	iret   
  404615:	div    eax
  404617:	cmp    BYTE PTR [ebp*8+0x1b0597a0],bh
  40461e:	and    esp,ecx
  404620:	cli    
  404621:	push   edi
  404622:	jecxz  0x4045fa
  404624:	fdiv   QWORD PTR [ebx-0x4f]
  404627:	or     dh,BYTE PTR [edi+0x235c78a7]
  40462d:	pop    edi
  40462e:	push   ebx
  40462f:	(bad)  
  404630:	adc    eax,0x84455a5f
  404635:	jbe    0x404686
  404637:	sub    DWORD PTR [ebx-0x4a],eax
  40463a:	leave  
  40463b:	fnstsw WORD PTR [ecx+0x3b]
  40463e:	pop    ds
  40463f:	aam    0xb2
  404641:	stc    
  404642:	cmovge edi,ecx
  404645:	cmc    
  404646:	sbb    dh,bl
  404648:	ss pop ds
  40464a:	cmp    ah,BYTE PTR [ebx]
  40464c:	mov    dh,0x9c
  40464e:	mov    cl,BYTE PTR [ebp-0x74e58824]
  404654:	pusha  
  404655:	les    ebx,FWORD PTR [ebx+eax*4-0x22]
  404659:	and    DWORD PTR [ecx+0x5a],esi
  40465c:	arpl   WORD PTR [ebx-0x16],cx
  40465f:	cld    
  404660:	jge    0x404633
  404662:	in     al,dx
  404663:	mov    ebp,0x6fd76acd
  404668:	out    0x47,eax
  40466a:	jns    0x404604
  40466c:	sar    dl,0x7f
  40466f:	lods   eax,DWORD PTR ds:[esi]
  404670:	mov    cl,0xf0
  404672:	and    esp,DWORD PTR [edi+edx*4]
  404675:	mov    eax,ss
  404677:	adc    DWORD PTR [eax],ebp
  404679:	jmp    0xaa7ef933
  40467e:	sub    eax,0x6ad94a44
  404683:	mov    cl,0xba
  404685:	retf   0x2ac9
  404688:	bound  esp,QWORD PTR [ebp-0x5098211a]
  40468e:	rol    BYTE PTR [esi+esi*1],0x9e
  404692:	je     0x404669
  404694:	jno    0x404635
  404696:	ror    BYTE PTR [ebx+0x4d31c87b],1
  40469c:	icebp  
  40469d:	mov    WORD PTR [edi],cs
  40469f:	jae    0x4046d9
  4046a1:	inc    ebp
  4046a2:	test   BYTE PTR ds:0x58fb7750,bh
  4046a8:	push   ecx
  4046a9:	dec    esi
  4046aa:	jmp    0x404663
  4046ac:	sub    al,0xa7
  4046ae:	add    DWORD PTR [edi+0x3871c08e],ebp
  4046b4:	fnstenv [eax]
  4046b6:	test   eax,0x89e0f1f8
  4046bb:	leave  
  4046bc:	push   0xa137d09d
  4046c1:	sbb    ebx,ecx
  4046c3:	pop    ebp
  4046c4:	pop    esp
  4046c5:	mov    ebx,0xb85a4909
  4046ca:	lds    ebx,FWORD PTR [esi]
  4046cc:	jmp    0x5976:0xfae97d65
  4046d3:	mov    ebx,0x193c7f1c
  4046d8:	jno    0x4046fd
  4046da:	cmp    ecx,DWORD PTR [esi]
  4046dc:	mov    ds:0xe47dcd49,al
  4046e1:	sbb    dh,BYTE PTR [edx]
  4046e3:	xor    al,0x86
  4046e5:	push   es
  4046e6:	pop    ds
  4046e7:	out    0xa8,eax
  4046e9:	pop    esi
  4046ea:	les    eax,FWORD PTR [edx-0x10]
  4046ed:	into   
  4046ee:	lods   eax,DWORD PTR ds:[esi]
  4046ef:	jmp    0x15a5fb16
  4046f4:	or     DWORD PTR [edx+ecx*1],eax
  4046f7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f9:	push   ebp
  4046fa:	jge    0x404779
  4046fc:	mov    ebp,0xa697a8
  404701:	fsubr  DWORD PTR [edx+ebp*2-0x2c08ae7]
  404708:	adc    esi,DWORD PTR [edi+0x3c]
  40470b:	add    DWORD PTR [eax-0x17],eax
  40470e:	mov    ds:0xe39aed2f,al
  404713:	fst    DWORD PTR [edx]
  404715:	push   ds
  404716:	dec    eax
  404717:	mov    ds:0xd7c8204b,al
  40471c:	xchg   ebp,eax
  40471d:	shl    BYTE PTR [ecx*1-0xe01d6ec],cl
  404724:	sub    DWORD PTR [edi+esi*8+0x50],ebx
  404728:	shl    DWORD PTR [esi],1
  40472a:	iret   
  40472b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472c:	std    
  40472d:	iret   
  40472e:	mov    esp,0x9d15d255
  404733:	and    al,0xe8
  404735:	cmp    BYTE PTR [ebx+esi*4],al
  404738:	add    bh,BYTE PTR [esi+0x7e]
  40473b:	out    0xf2,eax
  40473d:	xchg   edx,eax
  40473e:	adc    eax,0x73b091b6
  404743:	je     0x40478a
  404745:	jae    0x404740
  404747:	aas    
  404748:	shl    BYTE PTR [esi+0x7c2cfee3],1
  40474e:	lods   eax,DWORD PTR ds:[esi]
  40474f:	retf   
  404750:	mov    ecx,0xb5f1e3b4
  404755:	and    BYTE PTR [ebp+0xa],ah
  404758:	push   ss
  404759:	jns    0x404709
  40475b:	ret    0xa270
  40475e:	jmp    0x9bf17651
  404763:	mov    dl,0xfe
  404765:	stc    
  404766:	call   0x22fde25a
  40476b:	and    esi,eax
  40476d:	rcr    DWORD PTR [eax-0x5f7a67c8],0x97
  404774:	fdivrp st(2),st
  404776:	cmp    eax,0x6f4c00a0
  40477b:	cmp    ch,BYTE PTR [ecx+0x56]
  40477e:	loopne 0x404748
  404780:	jno    0x404798
  404782:	sbb    eax,0x1d6030e4
  404787:	into   
  404788:	mov    ds:0x9af96433,al
  40478d:	lea    esi,[eax]
  40478f:	(bad)  
  404790:	stos   BYTE PTR es:[edi],al
  404791:	mov    ds:0xc18e014,al
  404796:	(bad)  
  404797:	pop    esi
  404798:	xor    bh,BYTE PTR ds:0x9998be71
  40479e:	ret    
  40479f:	aam    0x70
  4047a1:	adc    DWORD PTR [esi],edi
  4047a3:	push   es
  4047a4:	icebp  
  4047a5:	jb     0x404794
  4047a7:	mov    ecx,0xeaaa3c94
  4047ac:	cmp    DWORD PTR [edi+0x9],ecx
  4047af:	stc    
  4047b0:	add    bl,dh
  4047b2:	dec    eax
  4047b3:	xlat   BYTE PTR ds:[ebx]
  4047b4:	pop    esi
  4047b5:	je     0x404752
  4047b7:	and    BYTE PTR es:[eax],bl
  4047ba:	jmp    0x7e12:0x8a1af89c
  4047c1:	jg     0x4047d3
  4047c3:	sub    ecx,ebp
  4047c5:	mov    al,ah
  4047c7:	shl    cl,cl
  4047c9:	jns    0x40482d
  4047cb:	or     DWORD PTR [eax+0x1e3d79fb],0x399ce9bf
  4047d5:	mov    ah,0x78
  4047d7:	jnp    0x4047a0
  4047d9:	jbe    0x404841
  4047db:	adc    ch,BYTE PTR ds:0xe3aa9fab
  4047e1:	pop    es
  4047e2:	fild   QWORD PTR [ecx+eax*4-0x6aed0a5a]
  4047e9:	xchg   DWORD PTR [esi+eax*2+0x563ead2a],edx
  4047f0:	(bad)  
  4047f1:	imul   esp,DWORD PTR [ebx],0x66
  4047f4:	mov    al,ds:0xebf62e80
  4047f9:	gs cs retf 0xe6ba
  4047fe:	xchg   ebx,eax
  4047ff:	push   edx
  404800:	(bad)  
  404801:	jbe    0x4047f4
  404803:	xchg   esi,eax
  404804:	ds mov cl,0xaf
  404807:	add    DWORD PTR cs:[edi],edi
  40480a:	or     al,BYTE PTR [ecx-0x62b80748]
  404810:	cs aas 
  404812:	cmp    DWORD PTR [esi],edi
  404814:	xchg   DWORD PTR [esi-0x32ffd4bb],ebp
  40481a:	mov    al,0x28
  40481c:	mov    esp,0xd84f2f5e
  404821:	jne    0x404854
  404823:	(bad)  
  404825:	pop    es
  404826:	mov    WORD PTR [ebp+0x429c37a0],fs
  40482c:	mov    eax,0x47e5a6c7
  404831:	jb     0x4047ba
  404833:	retf   0x67b
  404836:	in     eax,0xc9
  404838:	cmc    
  404839:	aaa    
  40483a:	mov    dh,0x8a
  40483c:	cmp    al,0xfc
  40483e:	and    BYTE PTR [ecx],ch
  404840:	loop   0x404819
  404842:	stc    
  404843:	or     esp,esi
  404845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404846:	pop    es
  404847:	xor    al,BYTE PTR [ebp+0x54e94e47]
  40484d:	out    dx,eax
  40484e:	mov    al,ds:0x7056766c
  404853:	sub    al,0x72
  404855:	retf   0xb5b2
  404858:	push   edx
  404859:	loop   0x404886
  40485b:	call   0xb7c3f6ba
  404860:	mov    WORD PTR [edx-0x3a],fs
  404863:	or     BYTE PTR [esi+edi*1-0x7f12d7f4],0x3
  40486b:	jl     0x4047ed
  40486d:	push   eax
  40486e:	jmp    0x4048cf
  404870:	push   ecx
  404871:	pop    edi
  404872:	cmp    DWORD PTR [esi+0x0],eax
  404875:	cmp    DWORD PTR [edi-0x80],0xffffffd4
  404879:	inc    esi
  40487a:	mov    al,BYTE PTR [eax+0x1c018991]
  404880:	xchg   DWORD PTR [ebx-0x46f163a4],ebx
  404886:	ret    0x5850
  404889:	mov    ds:0x9e0e3407,eax
  40488e:	fcomp  DWORD PTR [ebx+0x47]
  404891:	pop    ecx
  404892:	xchg   BYTE PTR [ecx+0x48202ec7],al
  404898:	fidiv  WORD PTR [eax+edx*4-0x40221c23]
  40489f:	leave  
  4048a0:	mov    eax,ds:0xea162b18
  4048a5:	pop    edx
  4048a6:	mov    ebp,0x343716a8
  4048ab:	or     BYTE PTR [esi],bh
  4048ad:	add    DWORD PTR [ebx],esi
  4048af:	into   
  4048b0:	in     eax,0x5f
  4048b2:	cdq    
  4048b3:	test   BYTE PTR [ebp-0x76a87b31],cl
  4048b9:	test   al,0xc0
  4048bb:	int3   
  4048bc:	loopne 0x404935
  4048be:	add    al,0x1f
  4048c0:	call   0xd9469628
  4048c5:	das    
  4048c6:	jnp    0x4048e1
  4048c8:	bound  esp,QWORD PTR [eiz*4-0x1e3e703e]
  4048cf:	sub    BYTE PTR [ebx],al
  4048d1:	jns    0x404880
  4048d3:	iret   
  4048d4:	push   0xfffffffc
  4048d6:	fwait
  4048d7:	mov    DWORD PTR [edx+0x7a],ebp
  4048da:	xlat   BYTE PTR ds:[ebx]
  4048db:	sar    bl,1
  4048dd:	pop    esp
  4048de:	repz pop ecx
  4048e0:	enter  0x75e9,0x2d
  4048e4:	sahf   
  4048e5:	minps  xmm2,XMMWORD PTR [ecx-0x4639fb4f]
  4048ec:	jmp    0xd35f3e6
  4048f1:	xchg   edx,eax
  4048f2:	repz clc 
  4048f4:	dec    ebx
  4048f5:	cmp    ah,bl
  4048f7:	test   al,0xf4
  4048f9:	fs inc edx
  4048fb:	es ds lahf 
  4048fe:	jmp    0xee6d:0xbbbeb8d
  404905:	aas    
  404906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404907:	mov    fs,WORD PTR [esi]
  404909:	adc    eax,0x27e30020
  40490e:	xlat   BYTE PTR ds:[ebx]
  40490f:	lahf   
  404910:	push   ds
  404911:	hlt    
  404912:	in     al,dx
  404913:	dec    esp
  404914:	mov    BYTE PTR [ebx+0x3cafc72],dh
  40491a:	mov    esp,0xbb7c1475
  40491f:	cdq    
  404920:	sbb    BYTE PTR [edx],cl
  404922:	call   0xa4df:0xd56376e1
  404929:	mov    bl,0xd4
  40492b:	sub    dh,BYTE PTR [ebx+edx*2-0x1d63915]
  404932:	in     eax,0xf4
  404934:	mov    BYTE PTR [edx],al
  404936:	pop    es
  404937:	leave  
  404938:	xor    DWORD PTR [ebp+0x73e0b49],ebp
  40493e:	psllw  mm3,mm3
  404941:	mov    eax,0xff5c9487
  404946:	jns    0x40496a
  404948:	popa   
  404949:	loope  0x40497b
  40494b:	push   eax
  40494c:	shl    DWORD PTR [eax+0x7199661f],0x68
  404953:	aaa    
  404954:	mov    ebx,0xebde1fca
  404959:	je     0x40493e
  40495b:	mov    esp,fs
  40495d:	xor    ebp,DWORD PTR [edi-0x284b6664]
  404963:	je     0x4049be
  404965:	(bad)  
  404966:	out    dx,al
  404967:	stos   BYTE PTR es:[edi],al
  404968:	stc    
  404969:	imul   ebx,ecx,0x2a4b9165
  40496f:	gs loope 0x40496f
  404972:	stos   DWORD PTR es:[edi],eax
  404973:	int    0x53
  404975:	adc    BYTE PTR [edi-0x11],0x54
  404979:	call   0xe33e:0x6c3dfc95
  404980:	mov    edx,0xdfd1a9a4
  404985:	(bad)  
  404986:	cld    
  404987:	and    edx,ebx
  404989:	out    0x20,al
  40498b:	jbe    0x404958
  40498d:	pop    edx
  40498f:	inc    eax
  404990:	pop    ss
  404991:	fcmovu st,st(7)
  404993:	push   ecx
  404994:	push   0xc97b2ed5
  404999:	cmp    bl,BYTE PTR ds:0xbb274a7f
  40499f:	xor    BYTE PTR [ecx+0x2f],ch
  4049a2:	push   ds
  4049a3:	add    ebx,esp
  4049a5:	stos   BYTE PTR es:[edi],al
  4049a6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4049a8:	arpl   WORD PTR [edi],ax
  4049aa:	xchg   esp,eax
  4049ab:	rcl    BYTE PTR [ebx+esi*2],cl
  4049ae:	cmp    dl,0xf6
  4049b1:	sbb    eax,0xc8c0d891
  4049b6:	in     al,dx
  4049b7:	adc    DWORD PTR [eax+0x4a],edx
  4049ba:	push   esp
  4049bb:	pushf  
  4049bc:	pop    ebp
  4049bd:	(bad)  
  4049be:	sbb    al,0x78
  4049c0:	sub    eax,0x456def16
  4049c5:	shl    DWORD PTR [esi-0x2f4dab5b],1
  4049cb:	xchg   esi,eax
  4049cc:	dec    eax
  4049cd:	pop    edi
  4049ce:	std    
  4049cf:	lods   eax,DWORD PTR ds:[esi]
  4049d0:	mov    ds:0x4d6283,al
  4049d5:	jns    0x4049d5
  4049d7:	or     ebp,DWORD PTR [edi+0x72]
  4049da:	cmp    DWORD PTR [ebx+edi*2],edx
  4049dd:	repnz mov ebp,0xeaab06de
  4049e3:	mov    edi,0x90b2157d
  4049e8:	adc    al,0xf1
  4049ea:	inc    esp
  4049eb:	out    0x82,al
  4049ed:	push   es
  4049ee:	cmp    eax,0x182cf5e7
  4049f3:	out    0x6f,al
  4049f5:	fsub   QWORD PTR [ecx]
  4049f7:	mov    esp,0x112a64f8
  4049fc:	aam    0x7b
  4049fe:	sub    eax,0x8e7df20c
  404a03:	cli    
  404a04:	jl     0x404a38
  404a06:	push   0xffffffb6
  404a08:	dec    edx
  404a09:	ret    
  404a0a:	mov    dl,0xc3
  404a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a0d:	sub    eax,DWORD PTR [edi-0x31872698]
  404a13:	sub    eax,0x648575df
  404a18:	mov    dl,0x57
  404a1a:	into   
  404a1b:	aad    0xfe
  404a1d:	cmp    al,0xc5
  404a1f:	gs jnp 0x404a09
  404a22:	loopne 0x404a83
  404a24:	or     DWORD PTR [edx-0xe],ecx
  404a27:	outs   dx,BYTE PTR ds:[esi]
  404a28:	out    dx,eax
  404a29:	push   esp
  404a2a:	sahf   
  404a2b:	dec    edi
  404a2c:	cli    
  404a2d:	cmc    
  404a2e:	jae    0x404a0a
  404a30:	push   ss
  404a31:	and    DWORD PTR [ecx+0x1ed5e865],esi
  404a37:	ins    DWORD PTR es:[edi],dx
  404a38:	or     BYTE PTR [ebx],dh
  404a3a:	or     eax,0x2015685a
  404a3f:	mov    eax,esp
  404a41:	cmc    
  404a42:	and    dl,BYTE PTR [ecx]
  404a44:	mov    bh,0xc
  404a46:	retf   0x62ef
  404a49:	je     0x4049d7
  404a4b:	loop   0x404a98
  404a4d:	int3   
  404a4e:	loopne 0x404ab1
  404a50:	sub    BYTE PTR [eax-0x183cfca3],al
  404a56:	push   ds
  404a57:	xlat   BYTE PTR ds:[ebx]
  404a58:	call   0x236970d0
  404a5d:	jns    0x404a62
  404a5f:	aam    0x1
  404a61:	and    eax,0xa0002420
  404a66:	iret   
  404a67:	rcr    dh,cl
  404a69:	iret   
  404a6a:	pushf  
  404a6b:	fist   DWORD PTR [ebp-0x32d5f366]
  404a71:	sub    BYTE PTR [edx+0x4a],bl
  404a74:	jns    0x404a1e
  404a76:	les    ebx,FWORD PTR [esi+0x46e8856e]
  404a7c:	dec    ecx
  404a7d:	sar    ebp,0x20
  404a80:	enter  0xa9f8,0x17
  404a84:	xchg   ecx,eax
  404a85:	sub    DWORD PTR [ecx-0x38],esp
  404a88:	mov    DWORD PTR [edx+0x39],esi
  404a8b:	inc    ebx
  404a8c:	addr16 inc ebp
  404a8e:	sub    eax,0xb9d10f68
  404a93:	sub    al,0xa2
  404a95:	scas   eax,DWORD PTR es:[edi]
  404a96:	inc    edx
  404a97:	popf   
  404a98:	push   cs
  404a99:	push   esi
  404a9a:	and    ch,cl
  404a9c:	bound  edx,QWORD PTR [ecx]
  404a9e:	inc    edx
  404a9f:	(bad)  
  404aa0:	fidiv  DWORD PTR [ebp+edi*2-0x45]
  404aa4:	and    dh,BYTE PTR [edi+edi*1-0x21749d46]
  404aab:	sub    edx,edi
  404aad:	mov    ebx,0xf93a7f70
  404ab2:	fcom   QWORD PTR [ebp-0x31de9512]
  404ab8:	mov    cl,0x98
  404aba:	fisub  DWORD PTR [edi-0x19]
  404abd:	jl     0x404a5d
  404abf:	sbb    bl,BYTE PTR [eax-0x57]
  404ac2:	xchg   BYTE PTR [edx],al
  404ac4:	test   BYTE PTR [esi-0x1d],dh
  404ac7:	mov    ecx,0xcada3abd
  404acc:	aaa    
  404acd:	jecxz  0x404aed
  404acf:	imul   ecx,DWORD PTR [esi+0x7d8e046a],0xfffffff8
  404ad6:	pop    ss
  404ad7:	cmp    cl,bl
  404ad9:	in     al,0x3b
  404adb:	push   edx
  404adc:	ja     0x404aff
  404ade:	mov    cl,0x4e
  404ae0:	int    0x53
  404ae2:	sbb    al,0x5f
  404ae4:	test   eax,0xf48bd9fa
  404ae9:	in     eax,dx
  404aea:	xor    al,0x5b
  404aec:	mov    bl,0x2e
  404aee:	daa    
  404aef:	scas   al,BYTE PTR es:[edi]
  404af0:	jo     0x404a92
  404af2:	bound  ebp,QWORD PTR [ecx-0x7ee2f8db]
  404af8:	xchg   ebp,eax
  404af9:	inc    esp
  404afa:	pop    es
  404afb:	lea    ecx,[ebx]
  404afd:	out    dx,eax
  404afe:	xor    bh,BYTE PTR [edx+edi*4]
  404b01:	xchg   edx,eax
  404b02:	mov    al,0x48
  404b04:	inc    DWORD PTR [eax]
  404b06:	pop    ecx
  404b07:	mov    WORD PTR [edx-0xa],cs
  404b0a:	in     al,0xca
  404b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b0e:	hlt    
  404b0f:	fstp   QWORD PTR [ebx-0x1fcb5d52]
  404b15:	push   ebx
  404b16:	pop    edi
  404b17:	popa   
  404b18:	sub    BYTE PTR [edx+0x15602534],cl
  404b1e:	pushf  
  404b1f:	popf   
  404b20:	add    eax,0x5cbde11c
  404b25:	lods   al,BYTE PTR ds:[esi]
  404b26:	lods   al,BYTE PTR ds:[esi]
  404b27:	jae    0x404ab8
  404b29:	lds    edx,FWORD PTR [eax*4-0x68565205]
  404b30:	(bad)  
  404b32:	pop    edx
  404b33:	xor    ah,BYTE PTR ds:0x96137408
  404b39:	addr16 inc esi
  404b3b:	pop    eax
  404b3c:	jecxz  0x404ad7
  404b3e:	in     al,0xbe
  404b40:	lock sbb al,BYTE PTR [edx+0x73e69041]
  404b47:	sbb    dl,BYTE PTR [ebx+0x76]
  404b4a:	jmp    0xe38e:0x32b7096c
  404b51:	jo     0x404b7b
  404b53:	sbb    esp,ebp
  404b55:	pop    es
  404b56:	add    al,dl
  404b58:	mov    ds:0x7cafec63,eax
  404b5d:	arpl   bx,si
  404b5f:	call   0x6093f72c
  404b64:	inc    ebp
  404b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b66:	adc    dl,BYTE PTR [ecx+0x633d9b4b]
  404b6c:	jecxz  0x404b96
  404b6e:	or     DWORD PTR [esi-0x128fbbc6],0x43
  404b75:	(bad)  
  404b77:	iret   
  404b78:	mov    ch,0xd
  404b7a:	in     eax,0xab
  404b7c:	ret    
  404b7d:	mov    dl,0x73
  404b7f:	shr    BYTE PTR [edi],1
  404b81:	shl    BYTE PTR ss:[ecx+0x43d205c7],cl
  404b88:	push   cs
  404b89:	pop    ds
  404b8a:	mov    ch,0x2e
  404b8c:	dec    ebx
  404b8d:	and    al,0x31
  404b8f:	ins    DWORD PTR es:[di],dx
  404b91:	shl    ch,1
  404b93:	stos   DWORD PTR es:[edi],eax
  404b94:	dec    ebx
  404b95:	push   ecx
  404b96:	into   
  404b97:	shl    BYTE PTR [esi-0x14407f24],cl
  404b9d:	mov    DWORD PTR [ebp+0x3c842074],0x82d9ee73
  404ba7:	popa   
  404ba8:	ins    DWORD PTR es:[edi],dx
  404ba9:	jge    0x404be2
  404bab:	jl     0x404bd7
  404bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bae:	outs   dx,DWORD PTR ds:[esi]
  404baf:	add    eax,0xf96b5f27
  404bb4:	fldcw  WORD PTR [ecx]
  404bb6:	pop    ds
  404bb7:	rol    al,1
  404bb9:	arpl   WORD PTR [ebx+0x3],dx
  404bbc:	test   al,0xbd
  404bbe:	lock shr BYTE PTR [edi-0xcd1c2b8],0xf4
  404bc6:	in     eax,dx
  404bc7:	and    dh,BYTE PTR [edi+0x590a4131]
  404bcd:	dec    edx
  404bce:	jo     0x404c23
  404bd0:	je     0x404bbe
  404bd2:	adc    ebp,DWORD PTR [eax+0x50]
  404bd5:	imul   edi,edx,0x1a
  404bd8:	std    
  404bd9:	mov    bh,0xbd
  404bdb:	lods   eax,DWORD PTR ds:[esi]
  404bdc:	sub    esp,DWORD PTR [edx]
  404bde:	mov    al,0xb7
  404be0:	fcos   
  404be2:	jmp    0x89c6:0xd3a8006f
  404be9:	rcl    dl,cl
  404beb:	stos   BYTE PTR es:[edi],al
  404bec:	inc    edi
  404bed:	sbb    bh,bl
  404bef:	mov    al,0x58
  404bf1:	jmp    0x404be0
  404bf3:	mov    BYTE PTR [ebp-0x48],cl
  404bf6:	pop    eax
  404bf7:	or     ah,BYTE PTR [edx-0x3e]
  404bfa:	fist   DWORD PTR [eax]
  404bfc:	(bad)  gs:[edi+0x3683c542]
  404c04:	scas   eax,DWORD PTR es:[edi]
  404c05:	or     eax,DWORD PTR [edi-0x1c]
  404c08:	or     ecx,DWORD PTR [ebx]
  404c0a:	sub    eax,0x4f513212
  404c0f:	es mov al,0x78
  404c12:	cmp    eax,0xf3635388
  404c17:	ja     0x404c33
  404c19:	dec    ebx
  404c1a:	gs sub al,0x1f
  404c1d:	retf   
  404c1e:	lock fistp WORD PTR [esi+0x5ecb003e]
  404c25:	push   ss
  404c26:	loope  0x404c7f
  404c28:	sbb    esp,esi
  404c2a:	mov    bh,0xe2
  404c2c:	xchg   esp,eax
  404c2d:	cmp    al,0x6f
  404c2f:	cdq    
  404c30:	jmp    0xaf9c:0xcc60e2d3
  404c37:	inc    ebp
  404c38:	push   ds
  404c39:	iret   
  404c3a:	shl    BYTE PTR [eax+ebx*4+0x9],0xdf
  404c3f:	and    ebx,DWORD PTR [eax-0x53]
  404c42:	call   0x38e1:0x357b0541
  404c49:	mov    esp,0x541a5e8f
  404c4e:	retf   
  404c4f:	sbb    al,0x48
  404c51:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404c53:	in     eax,0xbd
  404c55:	sti    
  404c56:	jo     0x404c55
  404c58:	pop    esi
  404c59:	aaa    
  404c5a:	rol    BYTE PTR [edi+0x7bcc49a8],0x9
  404c61:	mov    al,0x1b
  404c63:	clc    
  404c64:	dec    ebx
  404c65:	mov    ebx,0xf23453ee
  404c6a:	fadd   DWORD PTR [ecx+eiz*8+0x73]
  404c6e:	sti    
  404c6f:	inc    esp
  404c70:	int    0xba
  404c72:	out    dx,al
  404c73:	push   0x39125bb1
  404c78:	fwait
  404c79:	ss push ebx
  404c7b:	clc    
  404c7c:	jle    0x404cf6
  404c7e:	les    edi,FWORD PTR [edx+0x77]
  404c81:	scas   eax,DWORD PTR es:[edi]
  404c82:	push   eax
  404c83:	sbb    eax,0xcedf34c7
  404c88:	xor    esi,ebx
  404c8a:	mov    bl,0x39
  404c8c:	scas   al,BYTE PTR es:[edi]
  404c8d:	ror    DWORD PTR [ebx],0xd
  404c90:	(bad)  
  404c91:	stos   DWORD PTR es:[edi],eax
  404c92:	jo     0x404ca4
  404c94:	mov    edx,0xe62bfaad
  404c99:	pop    ebx
  404c9a:	add    DWORD PTR [edx+esi*4+0x67ae1ede],edi
  404ca1:	cmp    al,0x15
  404ca3:	push   ds
  404ca4:	shl    DWORD PTR [edx-0x22f3f32c],0xc7
  404cab:	jb     0x404c9e
  404cad:	inc    ecx
  404cae:	in     al,dx
  404caf:	jns    0x404c50
  404cb1:	into   
  404cb2:	leave  
  404cb3:	push   edx
  404cb4:	xor    al,0xd9
  404cb6:	and    DWORD PTR [eax],esp
  404cb8:	cmp    esp,DWORD PTR [edx+eiz*4]
  404cbb:	xor    BYTE PTR [eax+edx*1+0x48],0x95
  404cc0:	push   ecx
  404cc1:	xor    eax,0x88ed4ebd
  404cc6:	fld    TBYTE PTR [eax+edx*4]
  404cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cca:	pop    esp
  404ccb:	inc    esp
  404ccc:	in     al,dx
  404ccd:	jmp    0x6f179776
  404cd2:	(bad)  
  404cd3:	dec    esp
  404cd4:	fiadd  WORD PTR [edx+esi*1+0xdb17132]
  404cdb:	retf   0xf509
  404cde:	imul   BYTE PTR [edx-0x144eb8d5]
  404ce4:	xchg   edx,eax
  404ce5:	dec    ebp
  404ce6:	arpl   WORD PTR [ebx],bp
  404ce8:	cmp    al,0x7c
  404cea:	(bad)  
  404ceb:	aas    
  404cec:	popf   
  404ced:	arpl   WORD PTR [ecx],dx
  404cef:	mov    ebp,0xfc1f883c
  404cf4:	xor    ecx,DWORD PTR [ebx-0x6e]
  404cf7:	popf   
  404cf8:	jge    0x404cd9
  404cfa:	jne    0x404c8e
  404cfc:	pop    ecx
  404cfd:	sbb    BYTE PTR [ebx-0x71],al
  404d00:	shr    DWORD PTR [ebx+edi*8+0x7c004130],cl
  404d07:	loop   0x404d54
  404d09:	pop    ebx
  404d0a:	and    al,0x74
  404d0c:	xchg   edx,eax
  404d0d:	sbb    ebp,DWORD PTR [ebx]
  404d0f:	xor    BYTE PTR [eax+0x86b2406],cl
  404d15:	xor    ch,BYTE PTR [eax-0x55e02ac3]
  404d1b:	shl    DWORD PTR [edi-0x61ae09b8],1
  404d21:	xchg   esi,eax
  404d22:	jmp    0x88f2:0xf4bab31f
  404d29:	enter  0x42e1,0x73
  404d2d:	inc    edx
  404d2e:	sub    BYTE PTR [ecx-0x23],ch
  404d31:	pop    esp
  404d32:	sbb    al,BYTE PTR [eax]
  404d34:	mov    al,ds:0x9aac24f5
  404d39:	arpl   WORD PTR ds:0xc31c95ce,si
  404d3f:	dec    esp
  404d40:	cmc    
  404d41:	push   0xf224b072
  404d46:	sub    DWORD PTR [esi-0x61d2463e],0x84003c02
  404d50:	mov    edi,0x87210f7b
  404d55:	fldpi  
  404d57:	sub    DWORD PTR [edi],eax
  404d59:	dec    edi
  404d5a:	aas    
  404d5b:	adc    al,0x1c
  404d5d:	rol    BYTE PTR [edi+edx*2-0xa],1
  404d61:	jnp    0x404dc8
  404d63:	cs iret 
  404d65:	push   ebx
  404d66:	jge    0x404d4d
  404d68:	sub    BYTE PTR [esi+0x7662b9cf],dl
  404d6e:	shl    dl,cl
  404d70:	lahf   
  404d71:	cli    
  404d72:	xor    edi,DWORD PTR [edi]
  404d74:	or     ah,dh
  404d76:	cmp    ebx,DWORD PTR [ebx-0x75]
  404d79:	jmp    0x404de0
  404d7b:	sbb    eax,0x383bdf07
  404d80:	or     al,0x25
  404d82:	(bad)  
  404d83:	call   0x1d7ddd30
  404d88:	inc    ecx
  404d89:	loope  0x404d83
  404d8b:	and    ah,cl
  404d8d:	mov    edi,DWORD PTR ss:[edi+0x87de8f1]
  404d94:	and    eax,0x245a9d3d
  404d99:	dec    ecx
  404d9a:	mov    ch,0xff
  404d9c:	pop    es
  404d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9e:	mov    edx,0x77edd124
  404da3:	lock les eax,FWORD PTR [ebx]
  404da6:	jbe    0x404d8e
  404da8:	jno    0x404da0
  404daa:	je     0x404d3e
  404dac:	adc    esi,DWORD PTR [edi]
  404dae:	push   edx
  404daf:	sbb    edx,ebx
  404db1:	ins    DWORD PTR es:[edi],dx
  404db2:	or     ebp,esi
  404db4:	outs   dx,DWORD PTR ds:[esi]
  404db5:	fstp   QWORD PTR [edx-0x69e24b10]
  404dbb:	mov    esi,cs
  404dbd:	inc    eax
  404dbe:	cwde   
  404dbf:	cmp    ch,BYTE PTR [edx]
  404dc1:	pop    es
  404dc2:	mul    ah
  404dc4:	lds    edi,FWORD PTR [edi+0x34bd6dd3]
  404dca:	or     bh,ch
  404dcc:	adc    ch,ch
  404dce:	sub    BYTE PTR [eax-0x41],0x6c
  404dd2:	pop    ss
  404dd3:	mov    ah,0x2c
  404dd5:	push   esp
  404dd6:	(bad)  
  404dd7:	adc    ebx,DWORD PTR [edi+0x64537cc]
  404ddd:	call   0xf2dcd481
  404de2:	dec    esi
  404de3:	inc    esi
  404de4:	inc    edi
  404de5:	add    edi,DWORD PTR ds:0x35ced03e
  404deb:	lock mov bh,bl
  404dee:	or     ebp,edi
  404df0:	fidiv  WORD PTR [ebx]
  404df2:	call   0x1ff2:0x473d76e9
  404df9:	pop    esp
  404dfa:	push   esi
  404dfb:	mov    bh,0xcd
  404dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dfe:	or     al,0xe9
  404e00:	js     0x404dbb
  404e02:	push   es
  404e03:	sbb    eax,DWORD PTR [ebp+0x12e1e671]
  404e09:	mov    BYTE PTR [edi+eax*1],dl
  404e0c:	mov    ?,WORD PTR [ebx+0x3e6c0154]
  404e12:	inc    edi
  404e13:	cmp    bl,BYTE PTR [ecx-0x2cd27217]
  404e19:	inc    eax
  404e1a:	addr16 js 0x404db9
  404e1d:	addr16 (bad) 
  404e20:	xor    ecx,ebx
  404e22:	jb     0x404e77
  404e24:	pop    ebx
  404e25:	xor    eax,0xc05227
  404e2a:	retf   0x7f6d
  404e2d:	scas   al,BYTE PTR es:[edi]
  404e2e:	pop    esp
  404e2f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404e31:	inc    edi
  404e32:	aas    
  404e33:	xchg   ecx,eax
  404e34:	mov    ch,bh
  404e36:	jnp    0x404dd5
  404e38:	sub    BYTE PTR [edi-0x28],dl
  404e3b:	call   0x4116:0x7beea737
  404e42:	push   esi
  404e43:	test   edi,ebp
  404e45:	push   0xf
  404e47:	pop    es
  404e48:	pop    ecx
  404e49:	inc    ebp
  404e4a:	gs out dx,eax
  404e4c:	or     edi,DWORD PTR [edx-0x304feaee]
  404e52:	dec    edx
  404e53:	sbb    DWORD PTR [ecx-0x349ffe9c],esi
  404e59:	mov    edi,0xe1ac597e
  404e5e:	xchg   edx,eax
  404e5f:	pop    esp
  404e60:	jp     0x404df9
  404e62:	push   ds
  404e63:	dec    edi
  404e64:	adc    DWORD PTR [esi+0x4d],edx
  404e67:	icebp  
  404e68:	jle    0x404e61
  404e6a:	xchg   ebx,eax
  404e6b:	(bad)  
  404e6c:	sbb    esi,edx
  404e6e:	in     eax,0x6b
  404e70:	pop    es
  404e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e72:	mov    esi,0x6a02cae3
  404e77:	lea    esp,[esi]
  404e79:	push   esi
  404e7a:	test   eax,0xd7d35abf
  404e7f:	adc    BYTE PTR [edi],ch
  404e81:	pusha  
  404e82:	and    dh,BYTE PTR [ebx]
  404e84:	dec    edx
  404e85:	sbb    DWORD PTR [ebx+0x391e1b71],ebp
  404e8b:	call   0x38a:0xfc9d4620
  404e92:	xchg   esp,eax
  404e93:	jmp    0x404e5f
  404e95:	lds    esi,FWORD PTR [edx]
  404e97:	ds push esp
  404e99:	int3   
  404e9a:	jg     0x404e1c
  404e9c:	dec    eax
  404e9d:	pop    esi
  404e9e:	fnstenv [ecx+ebp*4-0x62]
  404ea2:	mov    cs,WORD PTR [edx+ecx*2-0x43]
  404ea6:	adc    eax,ebp
  404ea8:	mov    ah,0xef
  404eaa:	push   ss
  404eab:	pushf  
  404eac:	push   esi
  404ead:	mov    dl,0x6d
  404eaf:	inc    ebp
  404eb0:	gs cmp esp,ebx
  404eb3:	lods   al,BYTE PTR ds:[esi]
  404eb4:	shl    BYTE PTR [ecx+0x6e22fa64],1
  404eba:	pusha  
  404ebb:	ss mov eax,0x3df62553
  404ec1:	mov    esi,0x9c60ccd0
  404ec6:	adc    esi,esp
  404ec8:	inc    ecx
  404ec9:	sub    bh,0x62
  404ecc:	(bad)  
  404ecd:	xor    BYTE PTR [edx+0x51],ch
  404ed0:	mov    edx,ds
  404ed2:	jmp    0x82e13968
  404ed7:	pusha  
  404ed8:	and    ecx,DWORD PTR [edx]
  404eda:	aam    0x4f
  404edc:	jp     0x404f30
  404ede:	jl     0x404edf
  404ee0:	test   BYTE PTR [edx],dl
  404ee2:	das    
  404ee3:	jecxz  0x404eda
  404ee5:	cmp    eax,0x98822001
  404eea:	xchg   edx,eax
  404eeb:	and    eax,0x7d9d2273
  404ef0:	jg     0x404ee1
  404ef2:	or     eax,0x1c48ccda
  404ef7:	sbb    al,0xae
  404ef9:	lods   al,BYTE PTR ds:[esi]
  404efa:	jo     0x404f67
  404efc:	mov    dh,0xbf
  404efe:	dec    esi
  404eff:	jl     0x404edc
  404f01:	data16 fmul DWORD PTR ds:0xdd3de1a9
  404f08:	and    ecx,DWORD PTR [esi*1+0x7ae54de3]
  404f0f:	sbb    DWORD PTR ds:0xba9316d,esi
  404f15:	loop   0x404f68
  404f17:	pop    ecx
  404f18:	mov    WORD PTR [ecx],fs
  404f1a:	add    bh,BYTE PTR [ebx-0x38]
  404f1d:	dec    eax
  404f1e:	or     al,0x74
  404f20:	test   DWORD PTR [ecx-0x34],ecx
  404f23:	aam    0x24
  404f25:	imul   edx,DWORD PTR [edi+0x3e],0xce74eda5
  404f2c:	or     esp,ebx
  404f2e:	mov    ch,BYTE PTR [ecx+0x772b26f8]
  404f34:	push   es
  404f35:	sar    DWORD PTR [eax*4+0x9f7fd13],cl
  404f3c:	enter  0x3bac,0x2b
  404f40:	sub    DWORD PTR [ebx+0x60],esi
  404f43:	mov    ah,0xaa
  404f45:	mov    ?,WORD PTR [edi-0x8b3e8c4]
  404f4b:	retf   0x5ee5
  404f4e:	mov    al,ds:0x3f72efe7
  404f53:	fistp  WORD PTR [edx+0x56]
  404f56:	mov    ebp,0xdf125b1a
  404f5b:	jmp    0x79d3:0xf7b2c953
  404f62:	(bad)  
  404f63:	lods   eax,DWORD PTR ds:[esi]
  404f64:	push   ss
  404f65:	bound  ebx,QWORD PTR [edx+0x5e494005]
  404f6b:	aad    0x62
  404f6d:	adc    dh,bl
  404f6f:	nop
  404f70:	cdq    
  404f71:	(bad)  
  404f72:	repnz (bad) [edi+0x25]
  404f76:	mov    ds:0x82c9d6aa,al
  404f7b:	jns    0x404f3b
  404f7d:	fwait
  404f7e:	mov    dl,0x59
  404f80:	loop   0x404f10
  404f82:	daa    
  404f83:	leave  
  404f84:	cdq    
  404f85:	jno    0x404f4f
  404f87:	mov    dh,0x6f
  404f89:	pop    es
  404f8a:	mov    BYTE PTR ds:0x24539325,dl
  404f90:	ret    
  404f91:	pop    esp
  404f92:	enter  0x578e,0x78
  404f96:	or     al,0x2e
  404f98:	dec    edx
  404f99:	push   edi
  404f9a:	mov    ds:0x82ad9958,al
  404f9f:	push   edi
  404fa0:	jae    0x404f5b
  404fa2:	popa   
  404fa3:	inc    ebp
  404fa4:	mov    eax,0x5c1c9846
  404fa9:	dec    eax
  404faa:	and    eax,0xd2ebf4e
  404faf:	push   es
  404fb0:	fsubrp st(4),st
  404fb2:	fadd   DWORD PTR [esi-0x14ea4841]
  404fb8:	jecxz  0x404fa6
  404fba:	inc    ebx
  404fbb:	jno    0x404fd4
  404fbd:	xor    dl,BYTE PTR [ebx-0x5d]
  404fc0:	(bad)  
  404fc1:	stos   BYTE PTR es:[edi],al
  404fc2:	cmovno edx,esi
  404fc5:	jb     0x404f61
  404fc7:	test   eax,0x58d175cc
  404fcc:	out    0x74,al
  404fce:	bound  ebp,QWORD PTR [eax-0x36]
  404fd1:	dec    ebp
  404fd2:	enter  0x1519,0xad
  404fd6:	xchg   DWORD PTR [edx-0x47d7db8e],eax
  404fdc:	mov    ch,0x95
  404fde:	lea    ebx,[edi-0xb]
  404fe1:	pop    es
  404fe2:	dec    esi
  404fe3:	outs   dx,BYTE PTR ds:[esi]
  404fe4:	sahf   
  404fe5:	es or  eax,0x41e6de41
  404feb:	rcr    BYTE PTR [eax],cl
  404fed:	loope  0x405055
  404fef:	sub    ebp,eax
  404ff1:	aad    0x35
  404ff3:	int3   
  404ff4:	jge    0x405072
  404ff6:	inc    ebx
  404ff7:	int    0xaf
  404ff9:	mov    edx,0x90abc377
  404ffe:	mov    gs:0xfc8e465b,eax
  405004:	inc    eax
  405005:	sbb    al,0x92
  405007:	int    0x1a
  405009:	or     DWORD PTR cs:[esi+0x27],esi
  40500d:	add    esp,DWORD PTR [edx]
  40500f:	sbb    DWORD PTR [edi],ecx
  405011:	iret   
  405012:	inc    ebp
  405013:	jo     0x405057
  405015:	lods   eax,DWORD PTR ds:[esi]
  405016:	int3   
  405017:	inc    ebx
  405018:	aas    
  405019:	lods   al,BYTE PTR ds:[esi]
  40501a:	adc    esi,DWORD PTR [ecx+0x4ae8b4dd]
  405020:	cmp    DWORD PTR [ecx+0x2f],ecx
  405023:	pop    eax
  405024:	scas   eax,DWORD PTR es:[edi]
  405025:	out    0x3c,al
  405027:	(bad)  
  405028:	push   0x8
  40502a:	loop   0x40505d
  40502c:	xchg   esp,eax
  40502d:	dec    ebx
  40502e:	adc    al,0x24
  405030:	inc    edx
  405031:	mov    eax,0xacea312d
  405036:	(bad)  
  405037:	int3   
  405038:	add    esi,DWORD PTR [ebx]
  40503a:	mov    WORD PTR [esi],ds
  40503c:	push   0xffffffc6
  40503e:	add    esi,edx
  405040:	pusha  
  405041:	mov    ah,0xcc
  405043:	sub    eax,0x82475db5
  405048:	mov    eax,0x9e310275
  40504e:	call   0x883b:0x2e8110ab
  405055:	into   
  405056:	lahf   
  405057:	jne    0x405010
  405059:	(bad)  
  40505a:	cmc    
  40505b:	scas   al,BYTE PTR es:[edi]
  40505c:	pop    eax
  40505d:	das    
  40505e:	sub    esp,DWORD PTR [ecx-0x15]
  405061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405062:	popf   
  405063:	xchg   edi,eax
  405064:	xor    cl,BYTE PTR [ebx+0x54]
  405067:	mov    WORD PTR [eax],es
  405069:	shl    BYTE PTR [eax+0x31],0x71
  40506d:	aas    
  40506e:	nop
  40506f:	xchg   esi,eax
  405070:	xchg   esi,eax
  405071:	xor    edx,DWORD PTR [eax+0x6faf1d9b]
  405077:	sbb    eax,0xb8ecddce
  40507c:	adc    al,0xe8
  40507e:	mov    ebp,0xa726ebb1
  405083:	adc    ebp,DWORD PTR [esi]
  405085:	lea    esp,[edi-0x34]
  405088:	pop    ebx
  405089:	dec    ebx
  40508a:	or     DWORD PTR [esp+edx*4-0x6aa72ba0],eax
  405091:	ffree  st(5)
  405093:	outs   dx,DWORD PTR ds:[esi]
  405094:	jmp    0x84c9a90f
  405099:	arpl   WORD PTR [esi],cx
  40509b:	xchg   ebx,eax
  40509c:	out    dx,al
  40509d:	sub    bh,BYTE PTR [esp+ebp*2+0x6e2e3989]
  4050a4:	rcr    DWORD PTR ds:[ebp+0x22a175e7],0x1b
  4050ac:	or     BYTE PTR [edi+0x46],0xca
  4050b0:	imul   edx,DWORD PTR [edx+edi*1-0x26],0x183ef414
  4050b8:	mov    esi,ecx
  4050ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050bb:	jae    0x4050d6
  4050bd:	push   esp
  4050be:	das    
  4050bf:	fldenv [esp+ebp*1-0x7b769b46]
  4050c6:	icebp  
  4050c7:	test   BYTE PTR [edx-0x1c],0xb4
  4050cb:	adc    al,0x1
  4050cd:	mov    esi,0x2ecdc598
  4050d2:	push   es
  4050d3:	int    0xae
  4050d5:	add    eax,0x80c442e
  4050da:	cmp    dh,0xe6
  4050dd:	aaa    
  4050de:	jl     0x40514f
  4050e0:	es jns 0x405094
  4050e3:	jmp    0x5985:0xa897f16f
  4050ea:	xchg   cl,cl
  4050ec:	in     al,0xb0
  4050ee:	pop    ecx
  4050ef:	mov    ebp,0x1596b2b0
  4050f4:	dec    ecx
  4050f5:	into   
  4050f6:	adc    dl,ch
  4050f8:	ficomp WORD PTR [edx+0x24]
  4050fb:	enter  0x9674,0xd
  4050ff:	pop    ebp
  405100:	sbb    al,0x9
  405102:	popf   
  405103:	out    0xf9,al
  405105:	retf   0x6f8f
  405108:	dec    eax
  405109:	mov    cl,0x2a
  40510b:	out    dx,eax
  40510c:	mov    dh,BYTE PTR [esi-0x8]
  40510f:	pop    edx
  405110:	in     eax,dx
  405111:	int3   
  405112:	loope  0x4050a8
  405114:	xchg   DWORD PTR [ecx+0x57],edi
  405117:	rcr    BYTE PTR [ebp-0x256fb9ac],0xce
  40511e:	mov    dl,0x5e
  405120:	xchg   edi,eax
  405121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405122:	sbb    eax,DWORD PTR [ebx]
  405124:	hlt    
  405125:	push   edx
  405126:	(bad)
  40512b:	push   0xfffffff0
  40512d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40512e:	xchg   esp,eax
  40512f:	xlat   BYTE PTR ds:[ebx]
  405130:	(bad)  
  405132:	mov    DWORD PTR [ecx+0x37],eax
  405135:	lea    ebx,[eax]
  405137:	stc    
  405138:	nop
  405139:	out    0x86,eax
  40513b:	adc    dl,BYTE PTR [eax+ecx*1+0x194f74eb]
  405142:	sysexit 
  405144:	daa    
  405145:	test   BYTE PTR [eax+edi*1-0x6b],bl
  405149:	sahf   
  40514a:	xchg   BYTE PTR [ecx-0x2f07264a],cl
  405150:	out    0x50,eax
  405152:	or     BYTE PTR [esi+0x1d51f03a],dl
  405158:	mov    ebx,0xbfc7454c
  40515d:	pop    es
  40515e:	cwde   
  40515f:	lea    edx,[esi+edx*2-0x7c]
  405163:	js     0x4051e0
  405165:	mov    cl,0x3f
  405167:	adc    dh,BYTE PTR [ebp+0x52]
  40516a:	add    BYTE PTR [edx+0x4a],dh
  40516d:	push   0x4c
  40516f:	or     BYTE PTR [ebp-0x65896b10],ch
  405175:	sbb    esp,DWORD PTR [eax]
  405177:	pusha  
  405178:	enter  0xab55,0x44
  40517c:	dec    esi
  40517d:	dec    esi
  40517e:	inc    eax
  40517f:	xchg   BYTE PTR ds:0x3e789a7a,cl
  405185:	sub    BYTE PTR [edx-0x10],bh
  405188:	pop    es
  405189:	push   ds
  40518a:	pop    eax
  40518b:	fcmovnu st,st(2)
  40518d:	aad    0x1e
  40518f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405190:	fst    DWORD PTR [eax+0x4f4fb28b]
  405196:	dec    eax
  405197:	or     cl,BYTE PTR [ecx]
  405199:	clc    
  40519a:	jb     0x405210
  40519c:	shl    BYTE PTR [edx+0x49],0x54
  4051a0:	mov    WORD PTR [edi-0x2172d74d],?
  4051a6:	loop   0x4051da
  4051a8:	push   0xffffffd5
  4051aa:	std    
  4051ab:	cdq    
  4051ac:	dec    esi
  4051ad:	push   esp
  4051ae:	mov    DWORD PTR [ebx-0x5f],ecx
  4051b1:	mov    al,ds:0x4529eb0a
  4051b6:	jno    0x4051b9
  4051b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051b9:	mov    al,ds:0x36b1a8f5
  4051be:	sbb    al,0x85
  4051c0:	sub    al,0xc2
  4051c2:	xor    ch,BYTE PTR [edi]
  4051c4:	outs   dx,DWORD PTR ds:[esi]
  4051c5:	mov    eax,ds:0x84ecb91e
  4051ca:	push   edi
  4051cb:	sub    ebp,esi
  4051cd:	xchg   ecx,eax
  4051ce:	aas    
  4051cf:	jmp    0x578:0xa108ac74
  4051d6:	mov    bl,0xa1
  4051d8:	xchg   esi,eax
  4051d9:	test   DWORD PTR [esi+0x3a],0x6e995f6d
  4051e0:	dec    esp
  4051e1:	and    cl,bh
  4051e3:	sub    eax,0x50a09612
  4051e8:	fist   WORD PTR [edx]
  4051ea:	pusha  
  4051eb:	fcom   DWORD PTR [edx]
  4051ed:	loopne 0x40522a
  4051ef:	sub    DWORD PTR [ecx],esi
  4051f1:	sub    esi,DWORD PTR [eax]
  4051f3:	jnp    0x40525a
  4051f5:	jb     0x4051d3
  4051f7:	inc    eax
  4051f8:	inc    esp
  4051f9:	inc    ecx
  4051fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051fb:	push   esp
  4051fc:	lds    esi,FWORD PTR [esi]
  4051fe:	push   0xd11bc8e3
  405203:	je     0x40525e
  405205:	jecxz  0x405236
  405207:	inc    ebp
  405208:	mov    cl,0x51
  40520a:	push   ecx
  40520b:	dec    esp
  40520c:	mov    BYTE PTR [eax],ah
  40520e:	add    eax,0xb34e43d2
  405213:	sub    dh,BYTE PTR [ebp-0x11]
  405216:	dec    ecx
  405217:	bound  ebx,QWORD PTR [ebx+0x2c581939]
  40521d:	sub    al,0x2c
  40521f:	sahf   
  405220:	mov    esp,DWORD PTR [ebp+0x3c]
  405223:	addr16 (bad) 
  405226:	rol    DWORD PTR [ebp*1+0x62a00dc3],0x8a
  40522e:	cmp    bl,BYTE PTR [ebx+0x2d71ade2]
  405234:	cmp    ebp,DWORD PTR ds:0xb6d09dd4
  40523a:	ret    
  40523b:	pop    ebp
  40523c:	iret   
  40523d:	nop
  40523e:	in     al,dx
  40523f:	jb     0x40526c
  405241:	arpl   sp,bx
  405243:	and    edi,DWORD PTR [ebx-0x62]
  405246:	push   es
  405247:	test   eax,0xa589f27d
  40524c:	icebp  
  40524d:	mov    eax,ds:0x1b1c749
  405252:	mov    ebp,0x8a7e34ba
  405257:	jo     0x405267
  405259:	cmp    bl,BYTE PTR [ebx-0x2cb73ba4]
  40525f:	cld    
  405260:	popf   
  405261:	test   eax,0xca3cd8f0
  405266:	aas    
  405267:	fdivr  DWORD PTR [eax-0x71]
  40526a:	lea    ecx,[edi]
  40526c:	mov    bl,0xd4
  40526e:	inc    ebx
  40526f:	xchg   ebx,eax
  405270:	fmulp  st(6),st
  405272:	jno    0x40527b
  405274:	sbb    al,0x9a
  405276:	mov    ds:0xd68b4127,eax
  40527b:	push   edx
  40527c:	ret    0xf4ee
  40527f:	jl     0x405221
  405281:	pop    edi
  405282:	xchg   esi,eax
  405283:	sub    ecx,DWORD PTR [ecx]
  405285:	xchg   edi,eax
  405286:	repnz inc ebp
  405288:	push   esp
  405289:	fst    DWORD PTR [edi-0x47]
  40528c:	into   
  40528d:	(bad)  
  40528e:	cmp    DWORD PTR [ebp+0x20],edi
  405291:	adc    DWORD PTR ds:0x7046f7e8,0x1b
  405298:	xor    BYTE PTR [ebx+0x5e54969d],0x26
  40529f:	cdq    
  4052a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a1:	jle    0x40527a
  4052a3:	mov    edx,0x2f3e33d6
  4052a8:	shl    esi,cl
  4052aa:	push   eax
  4052ab:	jmp    0x7317:0x6cce966c
  4052b2:	dec    ecx
  4052b3:	adc    eax,0x3f6a6a18
  4052b8:	add    DWORD PTR [esi-0x45],ebp
  4052bb:	mov    bl,0x3
  4052bd:	rol    eax,1
  4052bf:	xchg   bh,dl
  4052c1:	jne    0x4052f1
  4052c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052c4:	mov    ecx,edi
  4052c6:	cmp    al,0xb6
  4052c8:	dec    ecx
  4052c9:	imul   edi,DWORD PTR [edx+0x50],0xaf8a2dab
  4052d0:	scas   eax,DWORD PTR es:[edi]
  4052d1:	loopne 0x4052d9
  4052d3:	mov    ah,0xf
  4052d5:	rcl    DWORD PTR [eax],cl
  4052d7:	dec    ecx
  4052d8:	mov    ?,ebp
  4052da:	xor    BYTE PTR [esi],0x3
  4052dd:	dec    esp
  4052de:	pusha  
  4052df:	es sqrtps xmm0,xmm0
  4052e3:	push   eax
  4052e4:	retf   
  4052e5:	cmp    eax,0x1e663c5d
  4052ea:	stc    
  4052eb:	xor    eax,esi
  4052ed:	cli    
  4052ee:	xor    BYTE PTR [esi+0x64],dl
  4052f1:	add    bl,0x90
  4052f4:	retf   0x251
  4052f7:	int    0x6a
  4052f9:	mov    bh,0x3
  4052fb:	mov    BYTE PTR [eax+edi*2-0x6fc95766],dh
  405302:	out    dx,al
  405303:	adc    DWORD PTR [edx+0x19],ebp
  405306:	sbb    ebp,DWORD PTR [eax+0x394e67d4]
  40530c:	popa   
  40530d:	inc    esp
  40530e:	fist   DWORD PTR [eax]
  405310:	rcl    DWORD PTR [ebp-0xe],0x4d
  405314:	push   0x57
  405316:	sbb    al,0x64
  405318:	fwait
  405319:	mov    edx,DWORD PTR [esi+0x15e9c8cb]
  40531f:	mov    al,0xe7
  405321:	sub    al,0x92
  405323:	mov    dh,0x42
  405325:	and    edi,ecx
  405327:	lea    eax,[ecx-0x49]
  40532a:	mov    esp,0xcf6dbd4a
  40532f:	pop    ebx
  405330:	jge    0x4052b7
  405332:	aam    0x43
  405334:	ret    0x6192
  405337:	push   ebx
  405338:	inc    ebx
  405339:	dec    ecx
  40533a:	mov    ah,0xd7
  40533c:	mov    esi,0xb07c3b98
  405341:	inc    esi
  405342:	pusha  
  405343:	rcl    BYTE PTR [edi-0x6e],cl
  405346:	adc    BYTE PTR [ebp-0xecbb794],dl
  40534c:	pushf  
  40534d:	daa    
  40534e:	pop    eax
  40534f:	out    dx,al
  405350:	xchg   edx,eax
  405351:	add    ecx,0x313ea5ae
  405357:	loope  0x405368
  405359:	cmp    bh,al
  40535b:	aam    0x21
  40535d:	xchg   BYTE PTR [ecx+eiz*8-0x4a23895a],ah
  405364:	(bad)  
  405365:	jecxz  0x4053d5
  405367:	enter  0xe514,0xd9
  40536b:	push   0xa206634c
  405370:	lods   eax,DWORD PTR ds:[esi]
  405371:	pop    esi
  405372:	dec    BYTE PTR [ebp-0x902835f]
  405378:	loop   0x405372
  40537a:	pop    edx
  40537b:	pushf  
  40537c:	test   BYTE PTR [esi+0x2eed44bd],al
  405382:	mov    ah,0x87
  405384:	out    0x68,eax
  405386:	aaa    
  405387:	mov    bl,0xf5
  405389:	mov    bh,0x12
  40538b:	jo     0x4053d3
  40538d:	sub    eax,0xca74fe38
  405392:	rol    BYTE PTR [edi],0x73
  405395:	stos   DWORD PTR es:[edi],eax
  405396:	mov    DWORD PTR [ebp-0x5d],ebp
  405399:	loopne 0x4053c5
  40539b:	lock call 0xdc8c5d3b
  4053a1:	or     dh,BYTE PTR [ebx-0x6a]
  4053a4:	(bad)  
  4053a6:	dec    ecx
  4053a7:	push   ss
  4053a8:	daa    
  4053a9:	mov    bl,ch
  4053ab:	dec    esi
  4053ac:	and    bl,ch
  4053ae:	push   cs
  4053af:	push   eax
  4053b0:	in     eax,0xbb
  4053b2:	or     al,BYTE PTR [eax+0x3e]
  4053b5:	shl    DWORD PTR [esi+ebx*4-0x12],cl
  4053b9:	call   0x3736090a
  4053be:	rcl    DWORD PTR [ebp+0x0],cl
  4053c1:	or     bl,ch
  4053c3:	mov    esp,0x99822944
  4053c8:	mov    ch,0x25
  4053ca:	mov    ebx,0x71dab20f
  4053cf:	mov    bh,0xf5
  4053d1:	pop    esi
  4053d2:	nop
  4053d3:	mov    ds:0x66c03cb9,al
  4053d8:	ins    BYTE PTR es:[edi],dx
  4053d9:	xchg   esi,eax
  4053da:	fadd   QWORD PTR [eax-0x6b]
  4053dd:	(bad)
  4053e1:	imul   ebx,DWORD PTR [ebp+0x47],0xffffffe6
  4053e5:	outs   dx,DWORD PTR ds:[esi]
  4053e6:	stc    
  4053e7:	std    
  4053e8:	inc    ebp
  4053e9:	outs   dx,BYTE PTR ds:[esi]
  4053ea:	stos   DWORD PTR es:[edi],eax
  4053eb:	pop    eax
  4053ec:	cmp    eax,ebx
  4053ee:	cwde   
  4053ef:	fwait
  4053f0:	inc    esi
  4053f1:	sbb    ch,BYTE PTR [ecx+0x12f3d8f2]
  4053f7:	ja     0x4053b5
  4053f9:	sahf   
  4053fa:	les    esi,FWORD PTR gs:[eax+eiz*2]
  4053fe:	inc    esi
  4053ff:	sub    al,0xc6
  405401:	aas    
  405402:	mov    ch,0xc9
  405404:	sbb    ecx,esp
  405406:	mov    cl,0xa7
  405408:	mov    edi,0xb9c65f52
  40540d:	xchg   ebx,eax
  40540e:	outs   dx,DWORD PTR ds:[esi]
  40540f:	lods   al,BYTE PTR ds:[esi]
  405410:	mov    esi,?
  405412:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405414:	or     esi,edx
  405416:	repz addr16 pop ebp
  405419:	push   ds
  40541a:	repnz and ah,BYTE PTR [esi-0x4]
  40541e:	or     eax,0xce7977aa
  405423:	lock dec edi
  405425:	hlt    
  405426:	adc    esi,edi
  405428:	sbb    DWORD PTR [edi-0x6b],eax
  40542b:	call   0xd07b631b
  405430:	neg    BYTE PTR [ecx]
  405432:	cmc    
  405433:	dec    esi
  405434:	imul   edi,DWORD PTR [ebx],0x19
  405437:	iret   
  405438:	push   ecx
  405439:	adc    BYTE PTR [edi-0x7f],dl
  40543c:	dec    ecx
  40543d:	push   DWORD PTR [ebx+0x66]
  405440:	adc    BYTE PTR [ecx+eiz*1],cl
  405443:	pushf  
  405444:	sti    
  405445:	mov    al,ds:0x56d12138
  40544a:	mov    edx,0x60d44f01
  40544f:	retf   0x60bd
  405452:	xchg   eax,edi
  405454:	jns    0x405499
  405456:	push   ds
  405457:	pop    eax
  405458:	lods   al,BYTE PTR ds:[esi]
  405459:	loopne 0x4054c9
  40545b:	push   esp
  40545c:	pop    esi
  40545d:	imul   eax,DWORD PTR [edx],0xe1de66d0
  405463:	adc    BYTE PTR [edx+0x8],dh
  405466:	ins    DWORD PTR es:[edi],dx
  405467:	aam    0xdc
  405469:	push   ebp
  40546a:	out    0x55,eax
  40546c:	in     eax,0x74
  40546e:	and    dh,BYTE PTR [ecx-0x46750e66]
  405474:	and    al,0x8d
  405476:	mov    eax,0x723fa40e
  40547b:	cdq    
  40547c:	dec    esp
  40547d:	imul   esi,DWORD PTR [eax-0x7d20a387],0x5f387904
  405487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405488:	push   cs
  405489:	(bad)  
  40548a:	arpl   WORD PTR [edi+0x5e],cx
  40548d:	(bad)  
  40548e:	daa    
  40548f:	(bad)  
  405490:	mov    ds:0x2e2e8269,al
  405495:	and    al,0x5f
  405497:	mov    dh,BYTE PTR [ebx+0x48]
  40549a:	pop    esi
  40549b:	dec    edi
  40549c:	popf   
  40549d:	es cli 
  40549f:	popa   
  4054a0:	ins    BYTE PTR es:[edi],dx
  4054a1:	jbe    0x4054b9
  4054a3:	cdq    
  4054a4:	fstp   st(1)
  4054a6:	xor    al,0xad
  4054a8:	js     0x4054cf
  4054aa:	inc    ecx
  4054ab:	out    dx,eax
  4054ac:	ret    
  4054ad:	add    ch,0x10
  4054b0:	pop    eax
  4054b1:	lea    esi,[ebx]
  4054b3:	add    esi,DWORD PTR ds:0x2a4fdc92
  4054b9:	jecxz  0x405445
  4054bb:	out    0xcc,eax
  4054bd:	pop    ss
  4054be:	pop    ebx
  4054bf:	inc    esi
  4054c0:	cmp    DWORD PTR [edi+eax*4-0x53ac7f01],esi
  4054c7:	sbb    eax,0xd377c6cd
  4054cc:	mov    dl,BYTE PTR [ebx]
  4054ce:	(bad)  
  4054d0:	and    al,0xec
  4054d2:	dec    edi
  4054d3:	adc    BYTE PTR [ebp-0x3e033064],bl
  4054d9:	xchg   DWORD PTR [ebx-0x520cc695],edx
  4054df:	sbb    ch,BYTE PTR [edi]
  4054e1:	iret   
  4054e2:	fisubr WORD PTR ds:[ecx]
  4054e5:	inc    esi
  4054e6:	cdq    
  4054e7:	cmp    bh,BYTE PTR [ebp+0x3b]
  4054ea:	sub    ah,BYTE PTR [ecx]
  4054ec:	retf   
  4054ed:	bound  eax,QWORD PTR [ebp+0x45]
  4054f0:	push   0x1a
  4054f2:	jmp    0xec43cf11
  4054f7:	(bad)  
  4054f8:	push   eax
  4054f9:	pop    ebx
  4054fa:	mov    esp,0xaac727bc
  4054ff:	arpl   WORD PTR [edx],ax
  405501:	jmp    0xb416:0x4afb1d6d
  405508:	loopne 0x405556
  40550a:	adc    eax,0x7543859
  40550f:	out    dx,eax
  405510:	add    bh,BYTE PTR ss:[edx+eax*4+0x75df931]
  405518:	xor    eax,0x706b16e9
  40551d:	pop    ecx
  40551e:	dec    edx
  40551f:	fdivr  DWORD PTR [ecx]
  405521:	pop    edx
  405522:	fucomip st,st(5)
  405524:	adc    esp,DWORD PTR [edi+0x27]
  405527:	into   
  405528:	or     eax,esp
  40552a:	test   al,0x4a
  40552c:	push   esp
  40552d:	pop    edi
  40552e:	xchg   ebp,eax
  40552f:	xchg   ebp,eax
  405530:	fbstp  TBYTE PTR [ebx-0x60]
  405533:	(bad)  
  405535:	mov    dh,0x69
  405537:	mov    cl,0x66
  405539:	(bad)  
  40553a:	or     eax,0x782ddb99
  40553f:	and    cl,BYTE PTR [ecx-0xa]
  405542:	inc    ebx
  405543:	fisttp WORD PTR [ebx]
  405545:	inc    esp
  405546:	push   esp
  405547:	xchg   ebx,eax
  405548:	mov    bh,0x59
  40554a:	stos   DWORD PTR es:[edi],eax
  40554b:	imul   eax,DWORD PTR [edi+eax*4-0x1c],0x66
  405550:	and    edi,edx
  405552:	and    edx,DWORD PTR [eax-0x1a07d7a3]
  405558:	fs test al,0xb0
  40555b:	xchg   BYTE PTR [edi],bh
  40555d:	inc    esi
  40555e:	gs inc eax
  405560:	adc    BYTE PTR [ecx-0x5d680b58],al
  405566:	call   FWORD PTR [ebx+0x621c63b1]
  40556c:	(bad)  
  40556d:	sbb    eax,0xe9be907a
  405572:	add    DWORD PTR [edx-0x40],0x500abae8
  405579:	(bad)  
  40557a:	aad    0x4a
  40557c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40557d:	jns    0x4055eb
  40557f:	and    eax,0x313a7d86
  405584:	pop    ebx
  405585:	test   BYTE PTR [edi-0x6d],0xf1
  405589:	adc    DWORD PTR [edx],ebx
  40558b:	xchg   edi,eax
  40558c:	pop    es
  40558d:	xor    esi,DWORD PTR [ecx+0x126bc200]
  405593:	jae    0x405599
  405595:	sub    DWORD PTR [ebx-0x45c13d07],esi
  40559b:	fcmovu st,st(1)
  40559d:	and    cl,dl
  40559f:	ins    BYTE PTR es:[edi],dx
  4055a0:	addr16 inc edx
  4055a2:	adc    al,0xc0
  4055a4:	jne    0x4055bb
  4055a6:	fidiv  DWORD PTR [ecx+eiz*8+0x5e13ea09]
  4055ad:	jmp    0xa13a967a
  4055b2:	stc    
  4055b3:	hlt    
  4055b4:	jo     0x405561
  4055b6:	rcr    bl,cl
  4055b8:	mov    bh,0x85
  4055ba:	push   ebp
  4055bb:	shr    BYTE PTR [ebx-0x2811a52e],cl
  4055c1:	fnsave [esi-0x25]
  4055c4:	push   ss
  4055c5:	mov    ch,0x6f
  4055c7:	xchg   esp,eax
  4055c8:	add    eax,0xa158567f
  4055cd:	mov    esi,0xae5f6154
  4055d2:	push   edi
  4055d3:	xor    al,al
  4055d5:	cmp    eax,0x456ba25c
  4055da:	mov    BYTE PTR [edx+ecx*1+0x11],ah
  4055de:	stc    
  4055df:	dec    esp
  4055e0:	xchg   edi,eax
  4055e1:	cdq    
  4055e2:	(bad)  
  4055e3:	je     0x405607
  4055e5:	and    ecx,DWORD PTR ds:0x9f23a320
  4055eb:	mov    bh,0x8c
  4055ed:	mov    eax,ds:0xea0268c3
  4055f2:	jmp    0x74c2fa39
  4055f7:	neg    DWORD PTR [ecx+0x49254b5a]
  4055fd:	xor    cl,cl
  4055ff:	je     0x405667
  405601:	push   ds
  405602:	mov    esi,0x8c21c91b
  405607:	dec    ebp
  405608:	pop    edi
  405609:	ret    
  40560a:	mov    al,ds:0xd2052974
  40560f:	dec    ecx
  405610:	out    0x9e,eax
  405612:	sbb    al,0x57
  405614:	(bad)  
  405615:	into   
  405616:	adc    eax,DWORD PTR [edx]
  405618:	and    al,bh
  40561a:	sub    ebx,DWORD PTR [edi+eiz*4]
  40561d:	lods   al,BYTE PTR ds:[esi]
  40561e:	mov    dh,BYTE PTR [ebx]
  405620:	aaa    
  405621:	pop    esi
  405622:	or     DWORD PTR [esi+0x5c],eax
  405625:	lods   al,BYTE PTR ds:[esi]
  405626:	add    ax,0x605f
  40562a:	cmp    al,0x85
  40562c:	aad    0x24
  40562e:	fwait
  40562f:	loop   0x405646
  405631:	sbb    BYTE PTR [eax+0x24fc28de],dh
  405637:	sub    al,0xbb
  405639:	std    
  40563a:	mov    bl,BYTE PTR [esp-0x3d4005c0]
  405641:	xlat   BYTE PTR ds:[ebx]
  405642:	das    
  405643:	adc    al,0x40
  405645:	mov    ebx,0x3391fd67
  40564a:	cwde   
  40564b:	clc    
  40564c:	pop    ebx
  40564d:	mul    DWORD PTR [eax]
  40564f:	stos   DWORD PTR es:[edi],eax
  405650:	ins    BYTE PTR es:[edi],dx
  405651:	jns    0x405646
  405653:	pmovmskb ebp,mm0
  405656:	stos   DWORD PTR es:[edi],eax
  405657:	jo     0x4056aa
  405659:	pusha  
  40565a:	push   cs
  40565b:	lods   eax,DWORD PTR ds:[esi]
  40565c:	sub    eax,0x420b5f1e
  405661:	popf   
  405662:	push   ds
  405663:	lods   al,BYTE PTR ds:[esi]
  405664:	xchg   ecx,eax
  405665:	rol    DWORD PTR [eax],0x27
  405668:	rol    BYTE PTR [ecx],0x61
  40566b:	pop    ecx
  40566c:	int3   
  40566d:	cmp    BYTE PTR [ebx],bl
  40566f:	sti    
  405670:	sbb    dh,ch
  405672:	repnz cld 
  405674:	repz pop ebx
  405676:	fisub  DWORD PTR [eax-0x4a]
  405679:	dec    ebx
  40567a:	cmp    eax,0xfd70e61a
  40567f:	push   esi
  405680:	cli    
  405681:	mov    ds,WORD PTR [ecx-0x26bcbd90]
  405687:	test   eax,0x860b49d7
  40568c:	outs   dx,BYTE PTR ds:[esi]
  40568d:	mov    ebx,0xe4a7f4e0
  405692:	jbe    0x4056da
  405694:	stc    
  405695:	sbb    dh,BYTE PTR [edi+ebp*1]
  405698:	sub    ebx,edi
  40569a:	and    BYTE PTR [ebp+ebp*4+0x25eb51aa],bh
  4056a1:	es pop ebp
  4056a3:	pop    esi
  4056a4:	mov    ?,WORD PTR [ecx-0x126ec1d0]
  4056aa:	jp     0x4056b6
  4056ac:	dec    ecx
  4056ad:	stc    
  4056ae:	push   edx
  4056af:	push   cs
  4056b0:	mov    cl,0xe0
  4056b2:	mov    dl,0x94
  4056b4:	jne    0x405697
  4056b6:	retf   0xc5de
  4056b9:	or     al,0xc
  4056bb:	sub    BYTE PTR [edi],dh
  4056bd:	cmp    ebp,DWORD PTR [esi-0x41]
  4056c0:	push   ss
  4056c1:	xor    eax,0x7a8247b1
  4056c6:	les    eax,FWORD PTR [ebp+0xf]
  4056c9:	scas   eax,DWORD PTR es:[edi]
  4056ca:	inc    ebx
  4056cb:	retf   0x773f
  4056ce:	mov    al,0x32
  4056d0:	or     al,0x8c
  4056d2:	push   eax
  4056d3:	add    eax,0xb4eb0cdb
  4056d8:	pop    edi
  4056d9:	out    0xb5,eax
  4056db:	push   esp
  4056dc:	pop    ss
  4056dd:	retf   0x2a9
  4056e0:	retf   0x9caf
  4056e3:	and    esp,DWORD PTR [eax+0x4a0f4b1d]
  4056e9:	into   
  4056ea:	and    ebp,DWORD PTR [ecx]
  4056ec:	in     eax,0x64
  4056ee:	imul   edx,DWORD PTR [esi+edi*2+0x54d656e3],0xe750639f
  4056f9:	dec    ecx
  4056fa:	mov    ebp,DWORD PTR [edx]
  4056fc:	mov    ch,0xcf
  4056fe:	dec    edx
  4056ff:	sbb    al,0x35
  405701:	xchg   BYTE PTR [ebp-0x5d],cl
  405704:	cmp    DWORD PTR [esi],edx
  405706:	mov    DWORD PTR [esi+0x4d],edi
  405709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40570a:	cmp    DWORD PTR [eax],edx
  40570c:	mov    al,0x6c
  40570e:	cdq    
  40570f:	xadd   esi,ebx
  405712:	mov    al,ds:0x53d548a9
  405717:	adc    dh,BYTE PTR [eax+ecx*2-0x79]
  40571b:	push   es
  40571c:	sub    ebp,DWORD PTR [edi+ebp*2-0x35]
  405720:	sbb    edi,DWORD PTR [ecx-0x59]
  405723:	stos   DWORD PTR es:[edi],eax
  405724:	sub    edx,DWORD PTR [ecx+edi*8]
  405727:	mov    ds:0x559bf2b2,eax
  40572c:	pop    es
  40572d:	shl    BYTE PTR [ecx-0x7c4da30c],0xd5
  405734:	mov    BYTE PTR [ebx+0x48df095d],bl
  40573a:	add    al,0xdb
  40573c:	adc    eax,DWORD PTR [esi+0x4e59fe03]
  405742:	lods   al,BYTE PTR ds:[esi]
  405743:	add    edi,ecx
  405745:	cld    
  405746:	add    al,0xe2
  405748:	cmp    bl,BYTE PTR [ebx+0x4c]
  40574b:	cdq    
  40574c:	push   eax
  40574d:	in     al,dx
  40574e:	jbe    0x405783
  405750:	test   DWORD PTR [esi+0xa3ecabe],0x1b4a6fd0
  40575a:	out    dx,al
  40575b:	ins    BYTE PTR es:[edi],dx
  40575c:	pop    ebx
  40575d:	jo     0x40573b
  40575f:	cmp    al,0x7e
  405761:	mov    ebx,0x96ca36e6
  405766:	mov    ebp,0x46a84a7d
  40576b:	repnz sbb dl,BYTE PTR [ebp-0x6ccbf619]
  405772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405773:	mov    bl,BYTE PTR [esp+eiz*8+0x2c]
  405777:	push   ss
  405778:	xor    BYTE PTR [eax+0x6fd39954],al
  40577e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40577f:	fbld   TBYTE PTR [ebx-0x50858771]
  405785:	adc    DWORD PTR [ecx-0x4911b981],ebx
  40578b:	jl     0x405757
  40578d:	out    0xe6,eax
  40578f:	sahf   
  405790:	sub    DWORD PTR [ecx-0x57],eax
  405793:	bound  esi,QWORD PTR [ebp+0x526e83ef]
  405799:	mov    bh,0x4a
  40579b:	push   ebp
  40579c:	dec    esp
  40579d:	lods   eax,DWORD PTR ds:[esi]
  40579e:	pushf  
  40579f:	dec    esi
  4057a0:	ficomp WORD PTR [esi+0x4f]
  4057a3:	mov    es,WORD PTR [ecx]
  4057a5:	or     BYTE PTR [edi],ah
  4057a7:	mov    eax,ds:0x2c4511bd
  4057ac:	mov    bl,BYTE PTR [ebp+0x7d]
  4057af:	shl    BYTE PTR [eax],cl
  4057b1:	and    esp,DWORD PTR [eax]
  4057b3:	sub    ebx,DWORD PTR [eax]
  4057b5:	lods   eax,DWORD PTR ds:[esi]
  4057b6:	cmc    
  4057b7:	(bad)  
  4057b8:	(bad)  
  4057b9:	test   al,0xe9
  4057bb:	into   
  4057bc:	pop    ebp
  4057bd:	jg     0x40577a
  4057bf:	and    al,0x45
  4057c1:	jmp    0x98e0b611
  4057c6:	pop    eax
  4057c7:	pop    edi
  4057c8:	sbb    DWORD PTR [ebx+0x33],ebp
  4057cb:	inc    esi
  4057cc:	test   eax,0x6cbc2c05
  4057d1:	js     0x40582f
  4057d3:	or     al,0xc5
  4057d5:	mov    al,0x7b
  4057d7:	add    eax,0xecd7da7c
  4057dc:	std    
  4057dd:	mov    ecx,0x5272cd5e
  4057e2:	fld    DWORD PTR [ecx+0x3d93c00c]
  4057e8:	add    DWORD PTR [eax-0x6a],ebp
  4057eb:	xchg   esp,eax
  4057ec:	ror    BYTE PTR [esi+0x5c],cl
  4057ef:	ins    BYTE PTR es:[edi],dx
  4057f0:	add    ebp,DWORD PTR [ebp+eiz*4+0x7bc1be44]
  4057f7:	jo     0x4057d2
  4057f9:	out    0x34,eax
  4057fb:	in     eax,dx
  4057fc:	call   0xa2d86f83
  405801:	pop    ebx
  405802:	xchg   esi,eax
  405803:	icebp  
  405804:	cli    
  405805:	sbb    DWORD PTR [edx],0xffffffe1
  405808:	(bad)  
  405809:	fisubr WORD PTR ds:0xc44481b0
  40580f:	lds    esp,FWORD PTR [ebp+ebx*2-0x50]
  405813:	jns    0x4057f3
  405815:	and    DWORD PTR [esi+0x6e8ad9f6],esp
  40581b:	ins    BYTE PTR es:[edi],dx
  40581c:	clc    
  40581d:	push   edx
  40581e:	push   es
  40581f:	push   ebp
  405820:	arpl   WORD PTR [esi+eax*2-0x6e9b66a],ax
  405827:	test   eax,0x367aafd0
  40582c:	(bad)  
  40582d:	pop    ds
  40582e:	mov    ebx,0xf3ca05c8
  405833:	sti    
  405834:	add    eax,0xb0841d1e
  405839:	xor    esi,DWORD PTR [edi-0x73]
  40583c:	mov    cl,0x74
  40583e:	xchg   BYTE PTR [esi-0x6b0e646f],cl
  405844:	mov    bh,0xde
  405846:	retf   
  405847:	rcr    BYTE PTR [ebx+eiz*4-0xf63ec1b],1
  40584e:	inc    ecx
  40584f:	pusha  
  405850:	repnz retf 
  405852:	mov    esi,0x2b88daa5
  405857:	cmp    cx,cx
  40585a:	js     0x40584e
  40585c:	int    0x81
  40585e:	int    0xb8
  405860:	data16 fadd DWORD PTR [edx]
  405863:	pusha  
  405864:	mov    dl,0x3c
  405866:	in     al,dx
  405867:	clc    
  405868:	repz addr16 je 0x4058bd
  40586c:	mov    eax,0xe61961f1
  405871:	adc    ecx,DWORD PTR [ecx+0x1]
  405874:	add    bl,BYTE PTR [esi]
  405876:	out    dx,al
  405877:	adc    al,ch
  405879:	hlt    
  40587a:	shl    BYTE PTR [edx],0x2b
  40587d:	jne    0x405872
  40587f:	in     eax,0xa1
  405881:	jecxz  0x4058e7
  405883:	loop   0x405839
  405885:	cmp    BYTE PTR [ecx],al
  405887:	sar    DWORD PTR [ebp-0x3a096b25],1
  40588d:	into   
  40588e:	out    0x5e,al
  405890:	inc    ebp
  405891:	loopne 0x40583f
  405893:	outs   dx,BYTE PTR ds:[esi]
  405894:	sar    BYTE PTR [edi-0x61],1
  405897:	data16 sbb BYTE PTR [edx-0x288aa058],ah
  40589e:	inc    ecx
  40589f:	or     al,0x7a
  4058a1:	scas   al,BYTE PTR es:[edi]
  4058a2:	int    0x56
  4058a4:	push   ebx
  4058a5:	push   ss
  4058a6:	xor    bh,dh
  4058a8:	mov    al,ds:0xbe4ee4b5
  4058ad:	xor    eax,0x40c1a2b
  4058b2:	pop    ebp
  4058b3:	push   0x2c
  4058b5:	pop    ebx
  4058b6:	xchg   edi,eax
  4058b7:	lock clc 
  4058b9:	inc    edi
  4058ba:	cdq    
  4058bb:	lahf   
  4058bc:	das    
  4058bd:	xchg   edx,eax
  4058be:	fidivr WORD PTR [eax-0x3d]
  4058c1:	pop    ss
  4058c2:	jo     0x405893
  4058c4:	dec    eax
  4058c5:	cwde   
  4058c6:	add    bl,bh
  4058c8:	dec    esi
  4058c9:	sbb    DWORD PTR [eax+0x3f],ebp
  4058cc:	fld    QWORD PTR [ebx+eiz*8-0x122538ec]
  4058d3:	(bad)  
  4058d4:	push   0xf915148c
  4058d9:	and    esp,DWORD PTR [edi-0x1a]
  4058dc:	aaa    
  4058dd:	int3   
  4058de:	fdiv   st,st(4)
  4058e0:	adc    bl,dl
  4058e2:	mov    ebx,0xa59cbc0a
  4058e7:	mov    DWORD PTR [eax-0x68d837e6],ecx
  4058ed:	add    esp,DWORD PTR [edx+0x43]
  4058f0:	or     al,0x60
  4058f2:	js     0x40596f
  4058f4:	(bad)  
  4058f5:	mov    edi,0xee881bd3
  4058fa:	sbb    al,0x18
  4058fc:	push   es
  4058fd:	mov    dh,bl
  4058ff:	mov    edi,0x753b050e
  405904:	lods   eax,DWORD PTR ds:[esi]
  405905:	pusha  
  405906:	jcxz   0x4058bd
  405909:	and    al,0x3a
  40590b:	enter  0x2f1b,0x2d
  40590f:	outs   dx,BYTE PTR ds:[esi]
  405910:	fldcw  WORD PTR [edi+0xa]
  405913:	in     eax,dx
  405914:	mov    dl,0x87
  405916:	cmp    eax,0x4b2e7b5d
  40591b:	aaa    
  40591c:	mov    al,ds:0x2401bac5
  405921:	test   al,bl
  405923:	jnp    0x405995
  405925:	mov    ecx,DWORD PTR [ecx+0x4]
  405928:	and    BYTE PTR [ebp+0x383eb9c4],bl
  40592e:	lods   eax,DWORD PTR ds:[esi]
  40592f:	stos   DWORD PTR es:[edi],eax
  405930:	xlat   BYTE PTR ds:[ebx]
  405931:	and    eax,0x1c2b66dd
  405936:	mov    ebp,0x24bb84f7
  40593b:	push   0xeccc943c
  405940:	xor    DWORD PTR fs:[eax],esp
  405943:	fst    DWORD PTR [esi-0x605c5b01]
  405949:	xor    BYTE PTR [esi+0x1b8d10c5],0xdc
  405950:	adc    eax,0x928cf109
  405955:	(bad)  
  405956:	dec    ebx
  405957:	fidiv  WORD PTR [edx-0x17]
  40595a:	pushf  
  40595b:	fs jp  0x40595d
  40595e:	arpl   sp,bx
  405960:	idiv   BYTE PTR [esi-0x4d]
  405963:	retf   0x93ac
  405966:	test   eax,0x7fb3c8a9
  40596b:	push   ds
  40596c:	inc    eax
  40596d:	sub    eax,ecx
  40596f:	in     eax,dx
  405970:	or     DWORD PTR [eax-0x5],esp
  405973:	mov    ?,WORD PTR [esp+eax*2-0x2f]
  405977:	mov    BYTE PTR [ecx],cl
  405979:	cld    
  40597a:	mov    ebx,DWORD PTR [edi-0x71]
  40597d:	mov    edi,0xfe788a4b
  405982:	(bad)  
  405984:	jmp    0x4059e9
  405986:	push   ds
  405987:	ret    
  405988:	xchg   ecx,eax
  405989:	lods   eax,DWORD PTR ds:[esi]
  40598a:	ss aaa 
  40598c:	test   eax,0x78b08bc9
  405991:	sbb    eax,esi
  405993:	int    0xbe
  405995:	dec    esi
  405996:	jne    0x40592f
  405998:	mov    ah,0x2f
  40599a:	outs   dx,DWORD PTR ds:[esi]
  40599b:	imul   edi,DWORD PTR [esi+0x76],0x20efaecc
  4059a2:	mov    eax,0x23d71d6
  4059a7:	xor    eax,0xcf4fd4af
  4059ac:	sbb    dl,BYTE PTR [eax]
  4059ae:	xchg   ebx,eax
  4059af:	gs push edx
  4059b1:	adc    ch,BYTE PTR [esp+edi*1+0x17]
  4059b5:	mov    DWORD PTR [edi+0x7674def2],esi
  4059bb:	sbb    edi,DWORD PTR [eax]
  4059bd:	fst    DWORD PTR ds:0xa1662640
  4059c3:	jnp    0x4059b8
  4059c5:	popa   
  4059c6:	and    DWORD PTR [ebx-0x2a],eax
  4059c9:	xor    DWORD PTR [ecx+0x4b],0x2e
  4059cd:	mov    al,ds:0xb8477a28
  4059d2:	scas   eax,DWORD PTR es:[edi]
  4059d3:	push   cs
  4059d4:	or     bh,ch
  4059d6:	push   cs
  4059d7:	sahf   
  4059d8:	into   
  4059d9:	cli    
  4059da:	(bad)  
  4059db:	dec    edi
  4059dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059dd:	test   DWORD PTR [ebp-0x42],ecx
  4059e0:	shr    DWORD PTR [eax*1-0x1b611be1],1
  4059e7:	push   edi
  4059e8:	(bad)  
  4059e9:	pop    esp
  4059ea:	not    ebx
  4059ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ed:	xchg   ebx,eax
  4059ee:	loopne 0x4059ce
  4059f0:	div    DWORD PTR [ecx-0x7218078]
  4059f6:	es jo  0x405a2b
  4059f9:	imul   esp,DWORD PTR [ebx+0x7019c439],0x41
  405a00:	mov    al,0x2c
  405a02:	arpl   WORD PTR [ecx],di
  405a04:	data16 cmc 
  405a06:	(bad)  
  405a07:	out    0xd8,eax
  405a09:	and    ah,al
  405a0b:	xlat   BYTE PTR ds:[ebx]
  405a0c:	shr    dl,cl
  405a0e:	mov    ds:0xfd0e75ca,eax
  405a13:	inc    ecx
  405a14:	jns    0x4059a1
  405a16:	shl    BYTE PTR [esi-0x7bb74b80],0x14
  405a1d:	daa    
  405a1e:	and    edi,eax
  405a20:	inc    esp
  405a21:	mov    ?,WORD PTR [ebx]
  405a23:	jo     0x4059fc
  405a25:	cwde   
  405a26:	iret   
  405a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a28:	dec    eax
  405a29:	ins    BYTE PTR es:[edi],dx
  405a2a:	push   esi
  405a2b:	sbb    ecx,esi
  405a2d:	push   edi
  405a2e:	adc    esi,DWORD PTR [ebx+0x18d86996]
  405a34:	cmp    BYTE PTR [edx],bl
  405a36:	mov    ?,WORD PTR [ebx-0x453ddd32]
  405a3c:	and    esp,0x120ea894
  405a42:	mov    ah,0x5a
  405a44:	fsub   st,st(1)
  405a46:	loope  0x405a99
  405a48:	test   BYTE PTR [esi],dh
  405a4a:	jnp    0x405a93
  405a4c:	xchg   BYTE PTR [esi],dh
  405a4e:	adc    al,0x98
  405a50:	cmp    eax,0xee9f74f3
  405a55:	sbb    DWORD PTR [edx],ebx
  405a57:	jge    0x405a11
  405a59:	test   eax,0xcdd89e49
  405a5e:	test   DWORD PTR es:[edx],0x2c52e3e9
  405a65:	xchg   ebp,eax
  405a66:	dec    esi
  405a67:	daa    
  405a68:	je     0x405a90
  405a6a:	imul   esp,ebp,0xfffffffa
  405a6d:	cmp    dh,BYTE PTR [ebx+0x21]
  405a70:	pop    es
  405a71:	adc    bh,bl
  405a73:	jmp    0x405ac6
  405a75:	popa   
  405a76:	sbb    BYTE PTR [eax+0x7c],bl
  405a79:	dec    edi
  405a7a:	mov    eax,0x8b87d25
  405a7f:	mov    bl,0x19
  405a81:	mov    ebp,0xf9abe709
  405a86:	jno    0x405b00
  405a88:	push   edx
  405a89:	jne    0x405ab8
  405a8b:	xor    dh,BYTE PTR [ecx+ebp*4-0x1a194c69]
  405a92:	rcr    BYTE PTR [ebp+edx*2+0x3d],0x48
  405a97:	mov    cl,0xa5
  405a99:	or     BYTE PTR [ecx-0x57245d8],cl
  405a9f:	pop    eax
  405aa0:	mov    ds:0x4ac49809,al
  405aa5:	mov    ecx,0x742aa30c
  405aaa:	das    
  405aab:	clc    
  405aac:	or     BYTE PTR [esi+0x1825eb1c],al
  405ab2:	loope  0x405b16
  405ab4:	push   esp
  405ab5:	(bad)  
  405ab6:	jnp    0x405a4f
  405ab8:	and    dl,BYTE PTR [edx+0x5]
  405abb:	or     eax,0x23d87356
  405ac0:	xchg   ebx,eax
  405ac1:	sbb    eax,0x78cec622
  405ac6:	scas   eax,DWORD PTR es:[edi]
  405ac7:	sahf   
  405ac8:	xchg   esi,eax
  405ac9:	mov    esi,0xad294c4f
  405ace:	xor    DWORD PTR [ecx+eiz*4-0x69],ebx
  405ad2:	pusha  
  405ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ad4:	into   
  405ad5:	test   al,ch
  405ad7:	sti    
  405ad8:	mov    cl,0xbf
  405ada:	ret    
  405adb:	icebp  
  405adc:	into   
  405add:	or     DWORD PTR [edx-0x42],eax
  405ae0:	int    0x5b
  405ae2:	int3   
  405ae3:	xor    DWORD PTR [esi+0xe0b13cc],0xffffffe9
  405aea:	mov    ecx,0xbc81dec1
  405aef:	ja     0x405b17
  405af1:	push   esp
  405af2:	ret    
  405af3:	dec    edi
  405af4:	jmp    0x405b4b
  405af6:	fwait
  405af7:	mov    ecx,0x2ec480b1
  405afc:	call   0x241c93a2
  405b01:	pop    eax
  405b02:	push   esp
  405b03:	add    al,0x8f
  405b05:	dec    eax
  405b06:	rcr    DWORD PTR [edx],1
  405b08:	out    0x97,eax
  405b0a:	dec    ebx
  405b0b:	out    dx,al
  405b0c:	mov    gs,WORD PTR [esp+eax*1]
  405b0f:	xchg   DWORD PTR [ebx+0xf],esi
  405b12:	cmp    ah,BYTE PTR [esi-0x2f65618b]
  405b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b19:	ss sbb cl,cl
  405b1c:	jmp    0x7e34061b
  405b21:	lock loope 0x405ac7
  405b24:	mov    DWORD PTR [esi],ebp
  405b26:	xchg   ebx,eax
  405b27:	and    bl,BYTE PTR ds:0x9220a4eb
  405b2d:	sbb    al,0xb3
  405b2f:	push   esp
  405b30:	push   cs
  405b31:	adc    al,0xca
  405b33:	inc    eax
  405b34:	push   edx
  405b35:	hlt    
  405b36:	push   edi
  405b37:	nop
  405b38:	dec    eax
  405b39:	add    BYTE PTR [edi+0x35],bh
  405b3c:	loop   0x405b9b
  405b3e:	lock push edi
  405b40:	push   ebp
  405b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b42:	jmp    0x771d:0xcbdf100b
  405b49:	adc    eax,0x95b4aa22
  405b4e:	aas    
  405b4f:	mov    ecx,DWORD PTR [ecx+0x44]
  405b52:	cmp    BYTE PTR [ebp+0x33],dh
  405b55:	or     eax,0xa402317c
  405b5a:	std    
  405b5b:	js     0x405af7
  405b5d:	sbb    BYTE PTR [edi],al
  405b5f:	xor    BYTE PTR [edx+0x519cd04b],ah
  405b65:	scas   eax,DWORD PTR es:[edi]
  405b66:	(bad)  
  405b67:	xor    ch,ch
  405b69:	mov    ch,0x9c
  405b6b:	outs   dx,BYTE PTR ds:[esi]
  405b6c:	mov    edx,0xe4db51e
  405b71:	rol    DWORD PTR [ecx+0x4964846e],1
  405b77:	cmp    edx,DWORD PTR [edi+ebp*1]
  405b7a:	in     al,dx
  405b7b:	jno    0x405b78
  405b7d:	push   esp
  405b7e:	pusha  
  405b7f:	sahf   
  405b80:	outs   dx,DWORD PTR ds:[esi]
  405b82:	daa    
  405b83:	dec    esp
  405b84:	rcl    DWORD PTR [ebp+edx*8+0x70ba537],1
  405b8b:	mov    ds:0xf363c34f,al
  405b90:	mov    ds:0x29189eb7,eax
  405b95:	lods   al,BYTE PTR ds:[esi]
  405b96:	mov    ch,BYTE PTR [edi+0x3c]
  405b99:	dec    esi
  405b9a:	retf   
  405b9b:	enter  0x3108,0xbf
  405b9f:	xor    ah,BYTE PTR [ebp-0x980f6c7]
  405ba5:	jmp    0x9d77:0xb1fb6ea2
  405bac:	rcr    BYTE PTR [ebx],1
  405bae:	jbe    0x405baa
  405bb0:	sbb    eax,0x994cd25c
  405bb5:	dec    esp
  405bb6:	or     ecx,DWORD PTR [eax+0x65]
  405bb9:	mov    bh,0x61
  405bbb:	imul   BYTE PTR [ebp+0x9]
  405bbe:	push   ss
  405bbf:	mov    esi,0x2fb285c8
  405bc4:	add    al,0xdb
  405bc6:	adc    BYTE PTR [esp+edx*2+0x30],cl
  405bca:	mov    ds:0xe2a76429,eax
  405bcf:	leave  
  405bd0:	pop    ss
  405bd1:	cmp    edi,ecx
  405bd3:	xor    eax,0xf5f7b792
  405bd8:	in     eax,0x9a
  405bda:	cmp    dl,dh
  405bdc:	add    ecx,DWORD PTR [eax]
  405bde:	xchg   edx,eax
  405bdf:	adc    ebp,DWORD PTR [eax]
  405be1:	out    dx,al
  405be2:	mov    dl,0xea
  405be4:	mov    edi,?
  405be6:	pavgw  mm4,QWORD PTR [ecx+0x4e]
  405bea:	ret    
  405beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bec:	jns    0x405bfe
  405bee:	je     0x405c3b
  405bf0:	(bad)  
  405bf2:	cmp    edi,0xffffffd4
  405bf5:	sub    ch,BYTE PTR [esi]
  405bf7:	lods   al,BYTE PTR ds:[esi]
  405bf8:	pusha  
  405bf9:	pop    ecx
  405bfa:	outs   dx,BYTE PTR ds:[esi]
  405bfb:	mov    ebx,0x2c43ca58
  405c00:	lahf   
  405c01:	call   0xd38f:0x73ed7d4d
  405c08:	push   ds
  405c09:	fisttp QWORD PTR [edi]
  405c0b:	adc    eax,0x5e7866fb
  405c10:	leave  
  405c11:	mov    bl,0x4b
  405c13:	sub    ebx,DWORD PTR [esi]
  405c15:	ss retf 0xd0c5
  405c19:	cmp    BYTE PTR [edx+0x50],ch
  405c1c:	jnp    0x405bcc
  405c1e:	(bad)  
  405c1f:	out    dx,al
  405c20:	add    bh,cl
  405c22:	xchg   esp,esp
  405c24:	je     0x405bb6
  405c26:	addr16 xor eax,0x89986a0d
  405c2c:	test   esi,ebx
  405c2e:	pop    ebp
  405c2f:	(bad)
  405c33:	sub    eax,0x3ea4a318
  405c38:	mov    edi,0x550af98e
  405c3d:	sub    esp,esi
  405c3f:	into   
  405c40:	and    dh,BYTE PTR [ebp+0xc]
  405c43:	ss cwde 
  405c45:	push   ebp
  405c46:	push   es
  405c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c48:	xchg   esi,eax
  405c49:	in     eax,0x98
  405c4b:	in     al,dx
  405c4c:	add    DWORD PTR [eax-0x4],ebp
  405c4f:	ret    
  405c50:	mov    ah,0x64
  405c52:	jg     0x405c2f
  405c54:	add    DWORD PTR [ebx-0x42],eax
  405c57:	cmc    
  405c58:	lods   eax,DWORD PTR ds:[esi]
  405c59:	call   0xbf27:0x78c65165
  405c60:	into   
  405c61:	in     eax,0x88
  405c63:	and    edx,DWORD PTR [esi+ebp*2-0x21]
  405c67:	sub    ecx,DWORD PTR [esi+ecx*4+0x35a388da]
  405c6e:	push   ss
  405c6f:	in     eax,0xe4
  405c71:	mov    cl,0xce
  405c73:	ja     0x405c69
  405c75:	push   es
  405c76:	clc    
  405c77:	dec    ecx
  405c78:	dec    edi
  405c79:	pop    esp
  405c7a:	call   0x87e25a1b
  405c7f:	jnp    0x405caa
  405c81:	daa    
  405c82:	ja     0x405c79
  405c84:	orps   xmm7,XMMWORD PTR [ebp+esi*1-0x2d7b9e1f]
  405c8c:	js     0x405c22
  405c8e:	jecxz  0x405c8f
  405c90:	das    
  405c91:	repz mul DWORD PTR [eax]
  405c94:	out    dx,al
  405c95:	sub    DWORD PTR [ecx-0x65],0xffffffb6
  405c99:	dec    edi
  405c9a:	retf   0xaffb
  405c9d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca0:	rcr    BYTE PTR [ebp+0x10941a38],1
  405ca6:	popa   
  405ca7:	(bad)  
  405ca8:	mov    ah,0x89
  405caa:	xor    eax,0x5d5c4aca
  405caf:	xor    esi,edi
  405cb1:	ret    0x769e
  405cb4:	sbb    bl,BYTE PTR [ecx+0x1764d8a4]
  405cba:	addr16 pop edi
  405cbc:	push   ebx
  405cbd:	adc    al,0x88
  405cbf:	js     0x405cb2
  405cc1:	xchg   BYTE PTR [edi],ch
  405cc3:	in     al,dx
  405cc4:	dec    edx
  405cc5:	shr    BYTE PTR [ebp*2-0x1fae88d],0xeb
  405ccd:	rol    BYTE PTR [ecx+0x1f29db5d],1
  405cd3:	sub    BYTE PTR [ecx-0x71],dh
  405cd6:	dec    esi
  405cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd8:	je     0x405d2a
  405cda:	sub    DWORD PTR [esi+edi*4+0x7ad26de0],ebx
  405ce1:	push   ebx
  405ce2:	mov    esp,0x6b4f0ea6
  405ce7:	test   BYTE PTR [esi-0x57fdca41],ah
  405ced:	mov    al,0xa
  405cef:	cmp    eax,0xfd27b7c4
  405cf4:	sbb    BYTE PTR [ecx-0x1ab65887],0xb8
  405cfb:	push   es
  405cfc:	push   esp
  405cfd:	out    0xa6,eax
  405cff:	fidivr WORD PTR [edi]
  405d01:	lock pop eax
  405d03:	mov    bh,0x32
  405d05:	sbb    edx,DWORD PTR [edi]
  405d07:	or     BYTE PTR [ecx+ebp*1+0x3c607da1],ch
  405d0e:	cli    
  405d0f:	push   ebp
  405d10:	(bad)  
  405d11:	cmc    
  405d12:	xchg   esi,eax
  405d13:	push   ds
  405d14:	pop    edi
  405d15:	jmp    0xb73e0bc0
  405d1a:	test   bl,al
  405d1c:	sub    dl,BYTE PTR [ecx+0x33]
  405d1f:	in     al,dx
  405d20:	push   es
  405d21:	mov    dl,0x2
  405d23:	dec    ebx
  405d24:	lock test BYTE PTR [ebx],0xeb
  405d28:	jg     0x405cbd
  405d2a:	xchg   esi,eax
  405d2b:	inc    eax
  405d2c:	fisub  DWORD PTR [ecx]
  405d2e:	popf   
  405d2f:	pop    ss
  405d30:	sbb    bh,BYTE PTR [ebx-0x12]
  405d33:	fwait
  405d34:	jnp    0x405cf8
  405d36:	sub    DWORD PTR [ebp-0x246ae7a8],0x85dfa027
  405d40:	enter  0xe1b8,0x99
  405d44:	shl    DWORD PTR [ebp-0x71],cl
  405d47:	mov    eax,DWORD PTR [ebp-0x28]
  405d4a:	mov    ecx,DWORD PTR [ebp-0x18]
  405d4d:	not    DWORD PTR ds:0x42a2da
  405d53:	xor    eax,esi
  405d55:	or     DWORD PTR ds:0x42a2fa,0xa4f
  405d5f:	xor    ecx,esi
  405d61:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  405d6b:	add    eax,edi
  405d6d:	add    ecx,edi
  405d6f:	mov    BYTE PTR [ebp-0x21],dl
  405d72:	cmp    eax,ecx
  405d74:	jae    0x408235
  405d7a:	add    edx,DWORD PTR ds:0x42a2a2
  405d80:	lea    ecx,[eax-0x3272f1]
  405d86:	mov    DWORD PTR [ebp-0x14],ecx
  405d89:	sub    DWORD PTR ds:0x42a27a,0x2374
  405d93:	mov    edx,DWORD PTR [ebp-0x14]
  405d96:	add    DWORD PTR ds:0x42a2a2,0x6412
  405da0:	xor    edx,esi
  405da2:	add    edx,0x7f55d8fb
  405da8:	lea    ecx,[ebp+eax*4-0xb4]
  405daf:	mov    DWORD PTR ds:0x42a25a,0x798e
  405db9:	mov    DWORD PTR [ecx],edx
  405dbb:	mov    edx,0x1097
  405dc0:	mov    edx,DWORD PTR [ecx]
  405dc2:	cmp    edx,0x244ecb98
  405dc8:	jbe    0x405de3
  405dce:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  405dd8:	add    DWORD PTR [ecx],0x405fcd9
  405dde:	jmp    0x405de9
  405de3:	add    DWORD PTR [ecx],0xfdaf4327
  405de9:	or     DWORD PTR ds:0x42a2f6,edi
  405def:	mov    ecx,DWORD PTR [ebp-0x18]
  405df2:	xor    ecx,esi
  405df4:	and    DWORD PTR ds:0x42a25e,0x42a27a
  405dfe:	inc    eax
  405dff:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  405e09:	inc    DWORD PTR [ebp-0x14]
  405e0c:	add    ecx,edi
  405e0e:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  405e18:	cmp    eax,ecx
  405e1a:	mov    DWORD PTR ds:0x42a2fe,0x33af
  405e24:	jb     0x405d89
  405e2a:	and    DWORD PTR ds:0x42a25e,0x0
  405e34:	mov    eax,ds:0x42a25e
  405e39:	inc    eax
  405e3a:	mov    ds:0x42a25e,eax
  405e3f:	cmp    DWORD PTR ds:0x42a25e,0x1c
  405e46:	jge    0x405e81
  405e4c:	jmp    0x405e74
  405e51:	push   0x42a28e
  405e56:	push   0x8ee8
  405e5b:	push   DWORD PTR [ebp-0xc]
  405e5e:	push   0x2324
  405e63:	push   0x4718
  405e68:	push   DWORD PTR [ebp-0x20]
  405e6b:	push   DWORD PTR [ebp-0x18]
  405e6e:	call   DWORD PTR ds:0x42a3ce
  405e74:	cmp    DWORD PTR ds:0x42a25e,0x18
  405e7b:	jb     0x405e34
  405e81:	mov    dl,BYTE PTR [ebp-0x21]
  405e84:	jmp    0x408235
  405e89:	test   eax,0xe897f33e
  405e8e:	add    BYTE PTR [ecx-0x2fc9eefa],0xf5
  405e95:	xchg   ecx,eax
  405e96:	(bad)  
  405e97:	aam    0x1c
  405e99:	pop    ebx
  405e9a:	cmp    al,BYTE PTR [ebx-0x7ca1107d]
  405ea0:	add    eax,0xfffffff6
  405ea3:	pop    edx
  405ea4:	adc    DWORD PTR [esi-0x17],0x0
  405ea8:	push   ds
  405ea9:	add    eax,0x5008809
  405eae:	je     0x405e44
  405eb0:	push   DWORD PTR [eax-0x58]
  405eb3:	adc    DWORD PTR [esi+0x51],ebx
  405eb6:	sub    bh,BYTE PTR [esi-0x7ab767ce]
  405ebc:	jno    0x405e41
  405ebe:	fstp   DWORD PTR [edx+ebx*1]
  405ec1:	jg     0x405e6b
  405ec3:	shl    DWORD PTR [edi+0x3c429b99],0xcd
  405eca:	pop    esp
  405ecb:	sti    
  405ecc:	clc    
  405ecd:	xchg   esi,eax
  405ece:	dec    bl
  405ed0:	jbe    0x405ebb
  405ed2:	mov    edi,0x46333eb7
  405ed7:	dec    edx
  405ed8:	sub    DWORD PTR [edi+0x58],esp
  405edb:	pop    edi
  405edc:	cld    
  405edd:	or     eax,0x97435b2f
  405ee2:	fwait
  405ee3:	push   ss
  405ee4:	add    al,0x28
  405ee6:	xchg   esi,eax
  405ee7:	(bad)  
  405ee8:	xlat   BYTE PTR ds:[ebx]
  405ee9:	adc    DWORD PTR [edx-0x34a68f10],ecx
  405eef:	xchg   ecx,eax
  405ef0:	pop    es
  405ef1:	fidivr DWORD PTR [ecx+0x69]
  405ef4:	cld    
  405ef5:	jmp    0x405ead
  405ef7:	mov    DWORD PTR [eax+0x4e14bb10],ecx
  405efd:	pop    esi
  405efe:	loope  0x405f19
  405f00:	xor    eax,0xd88e69a8
  405f05:	and    BYTE PTR [esi-0x51],ch
  405f08:	jecxz  0x405eb4
  405f0a:	mov    ch,0x3b
  405f0c:	pop    edx
  405f0d:	les    eax,FWORD PTR [ecx]
  405f0f:	pop    ds
  405f10:	aam    0xb1
  405f12:	xor    ecx,edx
  405f14:	jl     0x405eb6
  405f16:	sahf   
  405f17:	xchg   edx,edi
  405f19:	sbb    al,BYTE PTR [eax]
  405f1b:	shr    edi,1
  405f1d:	clc    
  405f1e:	(bad)  
  405f1f:	sbb    DWORD PTR [ebx],eax
  405f21:	int    0x99
  405f23:	(bad)  [edx]
  405f25:	sbb    ch,ch
  405f27:	clc    
  405f28:	jmp    0x94e9:0x93f20646
  405f2f:	call   0x64ec3d93
  405f34:	mov    al,0x72
  405f36:	pop    es
  405f37:	cmp    edx,DWORD PTR [esi]
  405f39:	fidivr WORD PTR [edi+ebp*1+0x66b28074]
  405f40:	push   eax
  405f41:	in     eax,0xe5
  405f43:	jl     0x405ee6
  405f45:	out    dx,eax
  405f46:	pop    DWORD PTR [edi+0x31a33291]
  405f4c:	arpl   WORD PTR [esi-0x3a079712],dx
  405f52:	loopne 0x405f33
  405f54:	xchg   edx,eax
  405f55:	pusha  
  405f56:	hlt    
  405f57:	cli    
  405f58:	push   bp
  405f5a:	or     BYTE PTR cs:[eax],dh
  405f5d:	(bad)  
  405f5e:	fld    TBYTE PTR [ebx+0x7aa47a96]
  405f64:	push   edx
  405f65:	xor    DWORD PTR [esi-0x15013a7e],0xb0890d33
  405f6f:	cld    
  405f70:	push   cs
  405f71:	aas    
  405f72:	mov    al,0xa8
  405f74:	dec    ebp
  405f75:	push   esp
  405f76:	(bad)  
  405f78:	out    0xfe,al
  405f7a:	adc    al,0xa9
  405f7c:	test   BYTE PTR [ebx+0x2b],dl
  405f7f:	mov    WORD PTR [eax],es
  405f81:	cld    
  405f82:	outs   dx,DWORD PTR ds:[esi]
  405f83:	jp     0x405fa8
  405f85:	inc    edi
  405f86:	dec    ecx
  405f87:	jne    0x405fa9
  405f89:	mov    dh,0xd2
  405f8b:	inc    ebx
  405f8c:	aaa    
  405f8d:	mov    bh,0xb3
  405f8f:	lods   eax,DWORD PTR ds:[esi]
  405f90:	jno    0x405ff6
  405f92:	sub    dh,al
  405f94:	fbld   TBYTE PTR [esi-0x345fc2ec]
  405f9a:	fnstenv [edx+ebp*8+0x56]
  405f9e:	out    dx,al
  405f9f:	fs xchg esi,eax
  405fa1:	cmc    
  405fa2:	sbb    al,0xbc
  405fa4:	jns    0x40600e
  405fa6:	loop   0x405fe2
  405fa8:	retf   
  405fa9:	clc    
  405faa:	out    dx,al
  405fab:	add    DWORD PTR [esi-0x19b319d6],ecx
  405fb1:	jns    0x406005
  405fb3:	or     ah,BYTE PTR [eax-0x1442204d]
  405fb9:	fnstenv [edi-0x80]
  405fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fbd:	fsubr  DWORD PTR [edx-0x5d40d6cf]
  405fc3:	dec    eax
  405fc4:	cmp    eax,0x79ca970a
  405fc9:	push   ebp
  405fca:	lea    ebp,[esi+0x23]
  405fcd:	adc    al,0x8f
  405fcf:	dec    ecx
  405fd0:	jae    0x405fb4
  405fd2:	push   es
  405fd3:	(bad)  
  405fd4:	outs   dx,BYTE PTR ds:[esi]
  405fd5:	push   ebp
  405fd6:	cmp    DWORD PTR [edx],0x67
  405fd9:	test   al,0xb1
  405fdb:	jnp    0x406028
  405fdd:	stos   BYTE PTR es:[edi],al
  405fde:	frstor [ebx-0x311be2e3]
  405fe4:	stos   BYTE PTR es:[edi],al
  405fe5:	int    0xdd
  405fe7:	jle    0x405f6f
  405fe9:	mov    esp,0x76f9af60
  405fee:	lea    edx,[ebp-0x75]
  405ff1:	add    BYTE PTR [ebp-0x23fe3914],0xb3
  405ff8:	(bad)  
  405ff9:	pop    ds
  405ffa:	xor    eax,0x9a16b14a
  405fff:	push   ss
  406000:	pop    es
  406001:	xchg   ecx,eax
  406002:	test   BYTE PTR [eax-0x2bd28405],dl
  406008:	retf   0xc743
  40600b:	sbb    eax,0x478d5d1f
  406010:	sbb    ebp,DWORD PTR ds:0xcfc708a4
  406016:	pop    es
  406017:	inc    edx
  406018:	xlat   BYTE PTR ds:[ebx]
  406019:	mov    bh,0x9c
  40601b:	lock pop eax
  40601d:	icebp  
  40601e:	mov    dh,0x0
  406020:	dec    eax
  406021:	out    dx,eax
  406022:	test   al,0x9d
  406024:	inc    ebx
  406025:	dec    ebx
  406026:	fst    DWORD PTR [ecx-0x2d9df9f1]
  40602c:	out    0x6d,al
  40602e:	adc    al,0x10
  406030:	and    eax,0x5c916d75
  406035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406036:	and    al,BYTE PTR [ebx]
  406038:	xchg   DWORD PTR [ebp+0x6b4eb6bc],ebp
  40603e:	fsubr  QWORD PTR [edx+0x7a61b025]
  406044:	in     al,0x5
  406046:	cmp    BYTE PTR [ebx+ebx*1+0x32],bh
  40604a:	inc    ebp
  40604b:	ss dec ecx
  40604d:	dec    ebp
  40604e:	xchg   ch,ah
  406050:	add    bh,bl
  406052:	(bad)  
  406053:	cmp    bh,al
  406055:	fcmovnb st,st(7)
  406057:	jmp    0x406004
  406059:	das    
  40605a:	sbb    esp,DWORD PTR ds:0x94ed28ff
  406060:	mov    eax,es:0xb51aac12
  406066:	mov    esi,0x30297cfb
  40606b:	test   al,0xdb
  40606d:	dec    ecx
  40606e:	arpl   WORD PTR [edx],dx
  406070:	mov    esp,ebx
  406072:	dec    esi
  406073:	repz xchg esi,eax
  406075:	add    eax,0x64d22c09
  40607a:	out    dx,al
  40607b:	and    cl,0x0
  40607e:	and    al,0xb9
  406080:	inc    eax
  406081:	shl    esp,0xaa
  406084:	mov    bh,0x98
  406086:	sbb    BYTE PTR [esi],dl
  406088:	(bad)  
  406089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40608a:	rcl    BYTE PTR [ecx],0x7c
  40608d:	sbb    al,BYTE PTR [ebx]
  40608f:	xlat   BYTE PTR ds:[ebx]
  406090:	dec    ebx
  406091:	enter  0x4b0c,0x8a
  406095:	sar    BYTE PTR [eax-0x353cdf8c],0xce
  40609c:	dec    edi
  40609d:	dec    eax
  40609e:	cmp    ebp,DWORD PTR [ecx+eiz*1-0x4d]
  4060a2:	add    bh,BYTE PTR [esi]
  4060a4:	push   ebp
  4060a5:	neg    ah
  4060a7:	jmp    0x1692:0xc53a7e43
  4060ae:	pushf  
  4060af:	mov    eax,0xbb8fc305
  4060b4:	cmp    eax,0xcbb9edcf
  4060b9:	mov    edi,0xe13da959
  4060be:	mov    edx,0x86ceefcf
  4060c3:	es push es
  4060c5:	ja     0x4060e5
  4060c7:	push   ss
  4060c8:	xor    cl,cl
  4060ca:	div    DWORD PTR [edi+edx*2]
  4060cd:	push   ss
  4060ce:	shr    BYTE PTR [ebp+0x37],1
  4060d1:	push   ds
  4060d2:	repz xchg esp,eax
  4060d4:	repnz mov edi,0x38b7fda8
  4060da:	fs cmp bh,BYTE PTR ds:[ebp+0x11]
  4060df:	xchg   ebp,eax
  4060e0:	pop    edi
  4060e1:	sbb    edx,DWORD PTR [eax+0x4d684bb1]
  4060e7:	fcomp  st(2)
  4060e9:	cs pop ds
  4060eb:	sbb    al,0x16
  4060ed:	add    edx,DWORD PTR [ecx+0x38d76869]
  4060f3:	mov    edi,0xc3f20da8
  4060f8:	addr16 int 0xd1
  4060fb:	and    ebx,esi
  4060fd:	(bad)  
  4060fe:	call   0xff9d43
  406103:	outs   dx,DWORD PTR ds:[esi]
  406104:	jae    0x4060f5
  406106:	adc    dh,BYTE PTR [ecx-0x2a818cec]
  40610c:	and    eax,0xe719eb2f
  406111:	imul   ebp,ecx,0xffffff8a
  406114:	sbb    DWORD PTR [edx],ecx
  406116:	jge    0x406172
  406118:	xor    cl,BYTE PTR [ecx+eiz*8]
  40611b:	stos   BYTE PTR es:[edi],al
  40611c:	pop    ebp
  40611d:	and    ebp,DWORD PTR [esi]
  40611f:	(bad)  
  406120:	xor    ebx,DWORD PTR [ebp-0x1503f2a5]
  406126:	xchg   DWORD PTR ds:0xefcfba32,esi
  40612c:	aaa    
  40612d:	into   
  40612e:	scas   al,BYTE PTR es:[edi]
  40612f:	scas   al,BYTE PTR es:[edi]
  406130:	retf   0xec30
  406133:	mov    eax,0xfba7bf5e
  406138:	add    dh,ch
  40613a:	int    0xa5
  40613c:	mov    ebp,ebx
  40613e:	daa    
  40613f:	not    BYTE PTR [edi]
  406141:	cmc    
  406142:	gs xchg esi,eax
  406144:	enter  0xaee1,0xff
  406148:	daa    
  406149:	out    dx,al
  40614a:	fnstsw WORD PTR [eax+0x65]
  40614d:	aaa    
  40614e:	mov    esp,0x1d0d913d
  406153:	dec    esp
  406154:	fst    QWORD PTR [edi+edx*1+0x5ff68e15]
  40615b:	push   ecx
  40615c:	jl     0x406190
  40615e:	push   ss
  40615f:	sbb    DWORD PTR [ecx+0x14],eax
  406162:	push   ebx
  406163:	scas   al,BYTE PTR es:[edi]
  406164:	popa   
  406165:	cmc    
  406166:	inc    eax
  406167:	test   BYTE PTR [ecx-0x1d33d48],cl
  40616d:	push   0x18
  40616f:	mov    ds:0xdfab947e,eax
  406174:	and    DWORD PTR [eax-0xa],0x22e942e5
  40617b:	jge    0x406148
  40617d:	iret   
  40617e:	scas   eax,DWORD PTR es:[edi]
  40617f:	mov    edx,0xc2400df6
  406184:	lds    edi,FWORD PTR [ecx-0x6b54bc9a]
  40618a:	mov    ecx,0x5be4a174
  40618f:	sub    edx,DWORD PTR [ecx+eiz*2+0x382d6d8b]
  406196:	call   0xbc3af25f
  40619b:	shl    DWORD PTR [edi-0xa],0x4a
  40619f:	cwde   
  4061a0:	push   ss
  4061a1:	loop   0x4061b7
  4061a3:	dec    ebx
  4061a4:	cmp    DWORD PTR [ecx+0x45],edi
  4061a7:	imul   ebx,DWORD PTR [ebp-0x1f],0xffffffe4
  4061ab:	or     al,0xe6
  4061ad:	dec    ebx
  4061ae:	imul   edx,DWORD PTR ds:0x5b86232,0x710a8630
  4061b8:	sub    esp,DWORD PTR [ebx+0x6008307]
  4061be:	(bad)  
  4061bf:	test   BYTE PTR [eax-0x55],0xdf
  4061c3:	xchg   esi,eax
  4061c4:	ins    BYTE PTR es:[edi],dx
  4061c5:	fist   DWORD PTR [ebp-0x4b73b564]
  4061cb:	cmp    cl,bl
  4061cd:	repnz mov ebp,0x667f9840
  4061d3:	adc    BYTE PTR ds:0x3ce44b99,dh
  4061d9:	or     eax,0x6446f17a
  4061de:	loopne 0x406253
  4061e0:	mov    al,ds:0xb6e61897
  4061e5:	pop    ebp
  4061e6:	clc    
  4061e7:	and    eax,0xe5692f1
  4061ec:	xchg   ebp,eax
  4061ed:	mov    eax,0xad5b5e10
  4061f2:	or     DWORD PTR [edx],esp
  4061f4:	popa   
  4061f5:	repz loopne 0x40619e
  4061f8:	fist   WORD PTR [ecx+esi*1-0x5f3ac2ca]
  4061ff:	push   esp
  406200:	cwde   
  406201:	jns    0x4061e7
  406203:	or     eax,ebx
  406205:	inc    DWORD PTR [edi]
  406207:	add    BYTE PTR [edx-0x392abe09],ah
  40620d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40620e:	stos   DWORD PTR es:[edi],eax
  40620f:	mov    ah,0xd9
  406211:	xor    DWORD PTR ds:0xbcc0f373,ebp
  406217:	sbb    al,0x3f
  406219:	(bad)  
  40621a:	loopne 0x4061fe
  40621c:	lahf   
  40621d:	jnp    0x40620e
  40621f:	es stos DWORD PTR es:[edi],eax
  406221:	pop    ds
  406222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406223:	mov    ds:0x62acb9a6,eax
  406228:	das    
  406229:	fisttp QWORD PTR [ecx+0x3f]
  40622c:	enter  0xcfbe,0x2c
  406230:	xchg   edx,eax
  406231:	ret    
  406232:	push   esp
  406233:	sar    DWORD PTR [eax-0x66b65cd1],1
  406239:	cmp    eax,0x3005af3f
  40623e:	aas    
  40623f:	jae    0x406292
  406241:	pop    edx
  406242:	leave  
  406243:	jne    0x406293
  406245:	(bad)  
  406246:	lea    ebp,[eax-0x5e050ec6]
  40624c:	mov    al,bl
  40624e:	sub    eax,0x453cdb82
  406253:	out    dx,eax
  406254:	xchg   DWORD PTR [ebx-0x2b],esp
  406257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406258:	in     eax,dx
  406259:	jae    0x40625f
  40625b:	jbe    0x4062a9
  40625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625e:	jecxz  0x406235
  406260:	mov    edi,0x5abde074
  406265:	sbb    esi,ebp
  406267:	mov    ecx,0xab12ac3b
  40626c:	pop    esp
  40626d:	dec    ecx
  40626e:	xchg   BYTE PTR [edx],ah
  406270:	ds ret 
  406272:	mov    ds:0xff92874a,al
  406277:	outs   dx,DWORD PTR ds:[esi]
  406278:	or     dl,dl
  40627a:	mov    al,0x5f
  40627c:	xchg   edx,eax
  40627d:	lock cmp ebp,DWORD PTR [esi+0x63a0589e]
  406284:	jmp    0xe730:0xcd1bc866
  40628b:	sbb    al,0x3e
  40628d:	ficom  WORD PTR [ecx+0x39]
  406290:	rcr    bl,1
  406292:	mov    esp,0xe582248e
  406297:	sbb    al,0x35
  406299:	aas    
  40629a:	mov    ebp,0xdcc6b0c1
  40629f:	fs aad 0x93
  4062a2:	mov    ebp,0xd1ff9d03
  4062a7:	jae    0x406314
  4062a9:	rol    DWORD PTR [edi-0x3afd6bd9],0xd3
  4062b0:	mov    edx,0xcbd15f64
  4062b5:	ss jmp 0x4062f7
  4062b8:	sub    esp,esp
  4062ba:	xor    eax,0xb84c15bc
  4062bf:	adc    BYTE PTR [ebx+0x52],dh
  4062c2:	inc    edi
  4062c3:	mov    dl,0xaf
  4062c5:	imul   ebx,DWORD PTR [eax+0x68b469e0],0x1f29b96
  4062cf:	scas   eax,DWORD PTR es:[edi]
  4062d0:	dec    esi
  4062d1:	outs   dx,DWORD PTR ds:[esi]
  4062d2:	adc    ebp,DWORD PTR [edi+edx*4-0x1b]
  4062d6:	push   ds
  4062d7:	sbb    dh,ch
  4062d9:	mov    al,ds:0x1b5d0c11
  4062de:	fidivr WORD PTR [edi-0x27abc833]
  4062e4:	ror    ebp,0x19
  4062e7:	push   es
  4062e8:	sti    
  4062e9:	pop    ecx
  4062ea:	out    0x33,eax
  4062ec:	adc    bl,BYTE PTR [ebx+0x6a]
  4062ef:	or     ah,BYTE PTR [ecx+eax*8]
  4062f2:	push   edx
  4062f3:	push   cs
  4062f4:	fwait
  4062f5:	dec    ecx
  4062f6:	add    BYTE PTR [ecx+0x66],bh
  4062f9:	int    0x1f
  4062fb:	sahf   
  4062fc:	mov    ?,WORD PTR [eax]
  4062fe:	into   
  4062ff:	outs   dx,DWORD PTR ds:[esi]
  406300:	add    BYTE PTR [eax+ebx*2],ah
  406303:	shr    esi,1
  406305:	enter  0x8ab4,0x12
  406309:	xchg   esp,eax
  40630a:	ret    0x82b6
  40630d:	or     BYTE PTR cs:[edx+0x1e],0x3c
  406312:	call   0xe0bffcee
  406317:	mov    WORD PTR [ecx],fs
  406319:	cmp    eax,0xb3b23436
  40631e:	jne    0x4062e7
  406320:	lods   al,BYTE PTR ds:[esi]
  406321:	and    dh,BYTE PTR [ecx+0x46fec90f]
  406327:	dec    esp
  406328:	adc    esp,DWORD PTR [esi+0x4c22e033]
  40632e:	mov    edi,0x1eb90da1
  406333:	lahf   
  406334:	dec    eax
  406335:	and    ecx,DWORD PTR [edi+0x74]
  406338:	xchg   ebp,eax
  406339:	jle    0x4063b8
  40633b:	aad    0xcd
  40633d:	sbb    bh,bh
  40633f:	out    0x78,al
  406341:	xor    BYTE PTR [ebx+0x36587499],0x48
  406348:	nop
  406349:	les    eax,FWORD PTR [ecx+0x27]
  40634c:	push   es
  40634d:	mov    dl,0xf2
  40634f:	adc    ecx,edi
  406351:	ja     0x406334
  406353:	fwait
  406354:	or     dl,bh
  406356:	nop
  406357:	and    dl,BYTE PTR [esi-0x4]
  40635a:	lods   eax,DWORD PTR ds:[esi]
  40635b:	ja     0x4062fe
  40635d:	sub    DWORD PTR [esi],ecx
  40635f:	pusha  
  406360:	shl    BYTE PTR [eax+0x7b],0x88
  406364:	xlat   BYTE PTR ds:[ebx]
  406365:	jo     0x4063db
  406367:	xor    ch,bl
  406369:	ss popa 
  40636b:	and    al,0xfa
  40636d:	push   ebx
  40636e:	ret    
  40636f:	ss gs jmp 0x574c:0x105125b4
  406378:	int3   
  406379:	or     cl,cl
  40637b:	ret    
  40637c:	pop    ss
  40637d:	loopne 0x40634b
  40637f:	ficomp DWORD PTR [edi+edi*4-0xcbb57cb]
  406386:	jnp    0x406339
  406388:	pop    eax
  406389:	pop    es
  40638a:	pop    ebx
  40638b:	mov    dh,0x6c
  40638d:	gs (bad) 
  40638f:	or     eax,0x58bc1208
  406394:	jmp    0x928898d0
  406399:	xor    DWORD PTR [ebx+0x5d33209a],ecx
  40639f:	mul    BYTE PTR [edi-0x66]
  4063a2:	jmp    0x5a2139bc
  4063a7:	add    eax,0xfc2ab43e
  4063ac:	dec    ebx
  4063ad:	hlt    
  4063ae:	test   eax,0xde859dd4
  4063b3:	xor    esp,DWORD PTR [ebx]
  4063b5:	sbb    esi,esi
  4063b7:	sbb    eax,0x6ebc728c
  4063bc:	aam    0xa4
  4063be:	cmp    DWORD PTR [esi-0x18533e9f],eax
  4063c4:	call   0xffb9:0x89a40915
  4063cb:	jp     0x406449
  4063cd:	add    ebx,DWORD PTR [eax]
  4063cf:	rcl    BYTE PTR [ebp-0x63],cl
  4063d2:	pop    ebp
  4063d3:	std    
  4063d4:	pop    ds
  4063d5:	jge    0x4063ec
  4063d7:	add    bl,0x91
  4063da:	in     al,0x59
  4063dc:	push   es
  4063dd:	cmp    eax,0x794a9b88
  4063e2:	(bad)  
  4063e3:	rol    BYTE PTR [edi+0x38],cl
  4063e6:	int3   
  4063e7:	fxch   st(6)
  4063e9:	xchg   ebx,eax
  4063ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063eb:	push   edx
  4063ec:	jns    0x4063d7
  4063ee:	sbb    DWORD PTR [esi+edx*1-0x234718fa],ebx
  4063f5:	sahf   
  4063f6:	pop    esi
  4063f7:	ficomp DWORD PTR [esi-0x1a8095d2]
  4063fd:	js     0x40644a
  4063ff:	xchg   ebx,eax
  406400:	push   edx
  406401:	arpl   WORD PTR [esi],ax
  406403:	rdmsr  
  406405:	mov    dl,0x72
  406407:	mov    dl,0x0
  406409:	sub    bl,dh
  40640b:	cwde   
  40640c:	xchg   ebp,eax
  40640d:	or     cl,BYTE PTR [ecx+0x25b2d949]
  406413:	add    edx,edx
  406415:	mov    al,0xf5
  406417:	lods   al,BYTE PTR ds:[esi]
  406418:	call   0x24c7:0x83333ee5
  40641f:	aaa    
  406420:	and    al,0x24
  406422:	mov    ah,0xd3
  406424:	(bad)  
  406425:	imul   esi,ebp,0xffffffe6
  406428:	push   0xfffffff8
  40642a:	fist   DWORD PTR [ecx+0x6f]
  40642d:	fidiv  WORD PTR [eax+esi*4+0x7c4d11d6]
  406434:	into   
  406435:	call   0xbf7c:0x9956b78
  40643c:	pop    edx
  40643d:	push   es
  40643e:	sub    eax,0x450b6cb
  406443:	sbb    al,0x7a
  406445:	icebp  
  406446:	int3   
  406447:	and    eax,0xa3670014
  40644c:	retf   
  40644d:	cmc    
  40644e:	or     al,0x55
  406450:	mov    ebx,0x1294e22c
  406455:	fsub   st(1),st
  406457:	pop    esi
  406458:	sub    al,0xe6
  40645a:	jbe    0x4064d1
  40645c:	adc    eax,ecx
  40645e:	jecxz  0x4064a7
  406460:	or     al,0xc0
  406462:	cs dec ebp
  406464:	outs   dx,BYTE PTR ds:[esi]
  406465:	jle    0x406449
  406467:	std    
  406468:	mov    esp,0xed657109
  40646d:	repz push ds
  40646f:	leave  
  406470:	xchg   edi,eax
  406471:	pusha  
  406472:	mov    dh,0xca
  406474:	xchg   edx,eax
  406475:	push   esi
  406476:	xor    DWORD PTR [ecx+0x125c2a64],eax
  40647c:	sub    al,0xf1
  40647e:	retf   0xeb43
  406481:	sub    DWORD PTR [ebx+0x72],edi
  406484:	dec    edi
  406485:	gs jl  0x406415
  406488:	ins    DWORD PTR es:[edi],dx
  406489:	in     al,dx
  40648a:	sahf   
  40648b:	clc    
  40648c:	add    eax,ebp
  40648e:	lock lods al,BYTE PTR ds:[esi]
  406490:	cmc    
  406491:	clc    
  406492:	es or  al,0x32
  406495:	data16 sub al,0x4c
  406498:	and    BYTE PTR [eax+0xa08c606],cl
  40649e:	push   ebx
  40649f:	gs push esp
  4064a1:	in     al,dx
  4064a2:	lock lahf 
  4064a4:	hlt    
  4064a5:	pop    edi
  4064a6:	sar    DWORD PTR [edi-0x5e],cl
  4064a9:	fs std 
  4064ab:	loop   0x4064b6
  4064ad:	dec    ebx
  4064ae:	out    dx,al
  4064af:	aad    0x69
  4064b1:	call   FWORD PTR [edx-0x36b144e4]
  4064b7:	ja     0x406440
  4064b9:	loop   0x406461
  4064bb:	mov    es,WORD PTR [ecx-0x2d]
  4064be:	push   cs
  4064bf:	add    DWORD PTR [eax],edi
  4064c1:	fsubp  st(5),st
  4064c3:	ja     0x406514
  4064c5:	pop    ecx
  4064c6:	iret   
  4064c7:	imul   esi,esp,0xcdc7fd8d
  4064cd:	fst    QWORD PTR [ebx+0x24eae90d]
  4064d3:	mov    BYTE PTR [edx],ch
  4064d5:	imul   edx,DWORD PTR ds:0xba713ef3,0x5c9a853b
  4064df:	outs   dx,BYTE PTR ds:[esi]
  4064e0:	fldcw  WORD PTR [edx-0x20fe9704]
  4064e6:	pop    esi
  4064e7:	nop
  4064e8:	retf   0x7a44
  4064eb:	scas   eax,DWORD PTR es:[edi]
  4064ec:	jae    0x40647e
  4064ee:	fnstcw WORD PTR [edx+0x559090fc]
  4064f4:	je     0x4064f5
  4064f6:	xchg   BYTE PTR [edi],al
  4064f8:	xor    BYTE PTR [esi-0x28a4a3b9],ah
  4064fe:	push   0x1a
  406500:	or     ebx,DWORD PTR [ecx]
  406502:	push   edx
  406503:	jp     0x4064dd
  406505:	xor    DWORD PTR [eax+0x5dfbed25],edx
  40650b:	push   0xf
  40650d:	ds sbb al,0xfc
  406510:	shl    ecx,0x6
  406513:	sub    ebx,eax
  406515:	enter  0x1f2a,0xad
  406519:	dec    ebp
  40651a:	xchg   BYTE PTR [eax+0x1a],bl
  40651d:	xor    BYTE PTR [esi],dl
  40651f:	into   
  406520:	jae    0x4064c4
  406522:	adc    BYTE PTR [edi],bh
  406524:	mov    BYTE PTR [edi-0x78],bh
  406527:	mov    ebp,0x62f656f
  40652c:	sbb    bl,dl
  40652e:	rcl    DWORD PTR [esi-0x49],0x87
  406532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406533:	std    
  406534:	inc    esi
  406535:	sbb    DWORD PTR [eax+0x37],ecx
  406538:	mov    BYTE PTR [eax+0x5209e84b],bl
  40653e:	adc    cl,bl
  406540:	popf   
  406541:	imul   esp,DWORD PTR [edx-0x6b],0xffffff92
  406545:	ins    DWORD PTR es:[edi],dx
  406546:	pop    ds
  406547:	fbld   TBYTE PTR [ecx-0x68832ffb]
  40654d:	mov    eax,ds:0x5d01ceed
  406552:	lahf   
  406553:	shl    DWORD PTR [ecx],cl
  406555:	std    
  406556:	lods   al,BYTE PTR ds:[esi]
  406557:	stos   BYTE PTR es:[edi],al
  406558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406559:	or     BYTE PTR [esi],bl
  40655b:	inc    eax
  40655c:	pop    ds
  40655d:	stc    
  40655e:	aas    
  40655f:	adc    dl,0xb1
  406562:	mov    ah,0x1
  406564:	xchg   ebp,eax
  406565:	cmp    ch,al
  406567:	(bad)  
  406568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406569:	loop   0x4064f5
  40656b:	les    eax,FWORD PTR ss:[esi-0x66]
  40656f:	cli    
  406570:	je     0x4065dc
  406572:	ss int 0xf2
  406575:	cmp    al,0xf2
  406577:	fwait
  406578:	mov    dh,0x59
  40657a:	aaa    
  40657b:	dec    ebx
  40657c:	or     ah,BYTE PTR [ebp+0x49]
  40657f:	adc    DWORD PTR [edx+0x54],eax
  406582:	outs   dx,BYTE PTR ds:[esi]
  406583:	xchg   esp,eax
  406584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406585:	sbb    al,0x29
  406587:	push   0xcb6ac323
  40658c:	mov    cl,0x5b
  40658e:	mov    ebp,0x116c3910
  406593:	ds push ebp
  406595:	pop    ds
  406596:	pop    esp
  406597:	(bad)  
  406598:	dec    ebp
  406599:	add    BYTE PTR [eax],bl
  40659b:	sub    al,0xbd
  40659d:	in     eax,dx
  40659e:	jno    0x406596
  4065a0:	aam    0x11
  4065a2:	push   edx
  4065a3:	push   esp
  4065a4:	scas   al,BYTE PTR es:[edi]
  4065a5:	adc    BYTE PTR ds:0xac13b13f,bh
  4065ab:	sub    bl,cl
  4065ad:	add    dh,BYTE PTR [ebp+0x41141c3a]
  4065b3:	mov    al,0x1b
  4065b5:	test   BYTE PTR [esp+0x17],cl
  4065b9:	or     BYTE PTR [esi+edx*2-0x45],dh
  4065bd:	sub    al,0x27
  4065bf:	popa   
  4065c0:	dec    ecx
  4065c1:	sbb    eax,0x880f2751
  4065c6:	retf   
  4065c7:	ret    0xd8dc
  4065ca:	push   eax
  4065cb:	ret    0xcba9
  4065ce:	jae    0x406583
  4065d0:	sbb    BYTE PTR [ecx],bh
  4065d2:	(bad)  
  4065d3:	or     BYTE PTR [esi],ch
  4065d5:	fistp  QWORD PTR [edi]
  4065d7:	xor    BYTE PTR [ebx+0x5],bl
  4065da:	jns    0x406651
  4065dc:	mov    ds:0x6306b0dc,eax
  4065e1:	loop   0x4065d6
  4065e3:	jg     0x4065fc
  4065e5:	imul   edx,DWORD PTR [esi+0x5a],0xffffff8f
  4065e9:	rol    DWORD PTR [ebx+0x2f52d6cb],1
  4065ef:	xchg   DWORD PTR [esi],ebx
  4065f1:	jl     0x40658a
  4065f3:	inc    ecx
  4065f4:	mov    eax,ds:0x39b3ed71
  4065f9:	and    eax,0x5b8ccc12
  4065fe:	inc    esi
  4065ff:	std    
  406600:	add    BYTE PTR [ebp+0x42],bl
  406603:	aaa    
  406604:	sub    al,0xa9
  406606:	fisttp DWORD PTR [esi-0x3a]
  406609:	aad    0x38
  40660b:	scas   al,BYTE PTR es:[edi]
  40660c:	pop    edi
  40660d:	add    DWORD PTR [ebp-0x26],eax
  406610:	add    DWORD PTR [eax-0x5f],esi
  406613:	aas    
  406614:	cmp    al,0x8b
  406616:	xlat   BYTE PTR ds:[ebx]
  406617:	test   eax,0x46a271e7
  40661c:	xor    eax,DWORD PTR [ebp+0x3]
  40661f:	shr    dh,cl
  406621:	ret    
  406622:	scas   eax,DWORD PTR es:[edi]
  406623:	ja     0x4065de
  406625:	enter  0x6899,0x0
  406629:	das    
  40662a:	pop    ebp
  40662b:	dec    edi
  40662c:	xor    ah,BYTE PTR ds:0x5604be8
  406632:	cdq    
  406633:	in     al,dx
  406634:	xor    eax,0xc3ec0ec1
  406639:	mov    ebp,0x4141070b
  40663e:	push   ecx
  40663f:	jge    0x4066a8
  406641:	jnp    0x406607
  406643:	stos   BYTE PTR es:[edi],al
  406644:	mov    eax,ds:0x4c50c562
  406649:	pop    esi
  40664a:	sub    dh,BYTE PTR [ecx-0x61]
  40664d:	adc    DWORD PTR [ecx+0x74463dda],ebp
  406653:	bound  edi,QWORD PTR [eax+0x20]
  406656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406657:	and    DWORD PTR ds:0xcbbcdba0,ecx
  40665d:	adc    ch,BYTE PTR [edi+0x61]
  406660:	sar    BYTE PTR [ebx+edi*8+0x42],1
  406664:	in     eax,dx
  406665:	mov    edi,0x7efe2032
  40666a:	fwait
  40666b:	in     al,dx
  40666c:	sbb    eax,0x83432ec2
  406671:	push   eax
  406672:	rcr    DWORD PTR [edi-0x32c9f81a],0x58
  406679:	xor    al,BYTE PTR [edx-0x4b]
  40667c:	mov    edi,eax
  40667e:	lds    esi,FWORD PTR [esi+0x753572fd]
  406684:	sti    
  406685:	cmp    bl,cl
  406687:	stc    
  406688:	sbb    ch,cl
  40668a:	in     al,dx
  40668b:	fmul   DWORD PTR [edi]
  40668d:	dec    esi
  40668e:	fisttp DWORD PTR [eax]
  406690:	jb     0x406624
  406692:	inc    esp
  406693:	test   BYTE PTR [eax+ebp*1-0x2e],0x4c
  406698:	(bad)  
  406699:	dec    ecx
  40669a:	popa   
  40669b:	mov    bl,0x58
  40669d:	jg     0x40662e
  40669f:	(bad)  
  4066a0:	aad    0x9b
  4066a2:	in     al,0x89
  4066a4:	dec    esp
  4066a5:	sbb    al,0xbd
  4066a7:	and    eax,0xced0c263
  4066ac:	daa    
  4066ad:	fstp   TBYTE PTR ds:0x7ac332f8
  4066b3:	mov    dl,0x25
  4066b5:	nop
  4066b6:	xor    eax,0xc76e2bf3
  4066bb:	lahf   
  4066bc:	mov    al,ds:0xc77f2249
  4066c1:	(bad)  
  4066c3:	mov    esi,0x3618a4f4
  4066c8:	mov    ebx,0x3a378c85
  4066cd:	das    
  4066ce:	mov    ch,0xbc
  4066d0:	xchg   edx,eax
  4066d1:	lods   eax,DWORD PTR ds:[esi]
  4066d2:	mov    ah,0xd
  4066d4:	push   es
  4066d5:	scas   al,BYTE PTR es:[edi]
  4066d6:	jmp    ebp
  4066d8:	xchg   BYTE PTR [edx+0xd],dl
  4066db:	sahf   
  4066dc:	mov    al,0x46
  4066de:	mov    bh,0xa7
  4066e0:	ret    
  4066e1:	sar    BYTE PTR [eax+0x3457f0fc],cl
  4066e7:	ss xor al,0x1d
  4066ea:	retf   0x3891
  4066ed:	in     al,0xb1
  4066ef:	repz test BYTE PTR ds:0x5e4a7bd9,dl
  4066f6:	fwait
  4066f7:	jg     0x4066df
  4066f9:	adc    al,0xb4
  4066fb:	js     0x406694
  4066fd:	push   ds
  4066fe:	mov    ebx,0xeb7218de
  406703:	shr    DWORD PTR [ebx-0x68],0x5d
  406707:	hlt    
  406708:	sbb    BYTE PTR [edx+0x2c],0x9f
  40670c:	sbb    al,0x16
  40670e:	lahf   
  40670f:	std    
  406710:	je     0x406717
  406712:	cmp    al,0xda
  406714:	call   0x852736a9
  406719:	jg     0x4066eb
  40671b:	add    al,0xef
  40671d:	lods   al,BYTE PTR ds:[esi]
  40671e:	add    edx,DWORD PTR [edi+0x39]
  406721:	out    dx,eax
  406722:	sub    esi,esp
  406724:	mov    WORD PTR [ebx+0x72],cs
  406727:	clc    
  406728:	push   ebx
  406729:	and    eax,0xfbb7e151
  40672e:	ins    DWORD PTR es:[edi],dx
  40672f:	jmp    0xf9a:0xe007cd55
  406736:	dec    esi
  406737:	adc    al,bh
  406739:	jo     0x4066c3
  40673b:	or     BYTE PTR [edi],0xec
  40673e:	mov    ecx,0x2f963274
  406743:	sahf   
  406744:	icebp  
  406745:	lods   al,BYTE PTR ds:[esi]
  406746:	mov    ds:0xd7ffa98a,eax
  40674b:	test   BYTE PTR [eax+edi*4],ch
  40674e:	in     al,dx
  40674f:	add    ch,bh
  406751:	mov    esi,0xbf146b0c
  406756:	xchg   ebx,eax
  406757:	(bad)  
  406759:	sub    DWORD PTR [ebp+0x1fd9b5f0],edi
  40675f:	out    0x11,eax
  406761:	add    edi,DWORD PTR [ebp+0x2331280a]
  406767:	fisub  DWORD PTR [eax+ecx*8+0x46]
  40676b:	sbb    BYTE PTR [edi+ebp*1],ah
  40676e:	or     DWORD PTR [ecx+0x4031c86f],ecx
  406774:	sbb    eax,0x87e48774
  406779:	bound  ecx,QWORD PTR [ebx-0x5dbb1c73]
  40677f:	jns    0x4067e5
  406781:	xchg   esp,edx
  406783:	fs gs test ah,ch
  406787:	xchg   ecx,eax
  406788:	jae    0x4067b8
  40678a:	add    ebp,DWORD PTR [ebx+eax*4+0x36]
  40678e:	lods   al,BYTE PTR ds:[esi]
  40678f:	into   
  406790:	aam    0x3d
  406792:	sbb    DWORD PTR [ecx+0x48],edx
  406795:	sbb    eax,0x56adb14a
  40679a:	data16 and dl,BYTE PTR [ebx+0x75c39c7a]
  4067a1:	fcomp  DWORD PTR [eax]
  4067a3:	lods   al,BYTE PTR ds:[esi]
  4067a4:	in     eax,dx
  4067a5:	dec    esi
  4067a6:	mov    BYTE PTR ds:0x570ecb9c,dh
  4067ac:	xchg   edx,eax
  4067ad:	cmp    edx,eax
  4067af:	and    BYTE PTR [edx-0x15f99ab3],bl
  4067b5:	sbb    DWORD PTR [ebx],0x70
  4067b8:	in     al,dx
  4067b9:	adc    edi,esi
  4067bb:	test   DWORD PTR [eax],0xbfdc88d0
  4067c1:	rcl    DWORD PTR [edi+0x48],1
  4067c4:	lahf   
  4067c5:	pushf  
  4067c6:	dec    edi
  4067c7:	xchg   esp,eax
  4067c8:	and    eax,0x183c070
  4067cd:	leave  
  4067ce:	int    0x81
  4067d0:	xor    esp,DWORD PTR [edi]
  4067d2:	clc    
  4067d3:	pushf  
  4067d4:	or     DWORD PTR [esi-0x79],esi
  4067d7:	pushf  
  4067d8:	mov    es,eax
  4067da:	mov    ch,0x34
  4067dc:	retf   0x225a
  4067df:	sbb    ch,BYTE PTR [ecx]
  4067e1:	iret   
  4067e2:	ins    BYTE PTR es:[edi],dx
  4067e3:	scas   eax,DWORD PTR es:[edi]
  4067e4:	jbe    0x4067b4
  4067e6:	loopne 0x406811
  4067e8:	xor    BYTE PTR [esi+0x76faa325],dh
  4067ee:	mov    dh,0xf5
  4067f0:	cmp    eax,eax
  4067f2:	xchg   DWORD PTR [edx+0x256b1fe],esp
  4067f8:	ja     0x406785
  4067fa:	out    dx,eax
  4067fb:	add    al,0x71
  4067fd:	hlt    
  4067fe:	adc    BYTE PTR [edi],ah
  406800:	cmp    al,0xe4
  406802:	jmp    0x5bb:0x6b3581e2
  406809:	dec    esi
  40680a:	xor    al,0x6e
  40680c:	pusha  
  40680d:	add    DWORD PTR [eax-0x6207e24c],ebx
  406813:	test   BYTE PTR [ebx],0x34
  406816:	js     0x40684b
  406818:	cwde   
  406819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40681a:	pop    ds
  40681b:	into   
  40681c:	dec    ebp
  40681d:	(bad)  
  40681e:	jl     0x406883
  406820:	and    DWORD PTR [eax],ebp
  406822:	int3   
  406823:	bound  ebp,QWORD PTR [eax+eax*2+0x72a1b827]
  40682a:	into   
  40682b:	es gs sahf 
  40682e:	out    dx,eax
  40682f:	mov    ds:0x9b254220,al
  406834:	mov    BYTE PTR [ecx],ch
  406836:	pop    eax
  406837:	cmp    dl,cl
  406839:	outs   dx,DWORD PTR ds:[esi]
  40683a:	inc    esi
  40683b:	push   esp
  40683c:	pop    ebx
  40683d:	(bad)  
  40683e:	loopne 0x4068b8
  406840:	xchg   ecx,eax
  406841:	mov    DWORD PTR [esi],eax
  406843:	cmp    eax,0xbfd96fa6
  406848:	out    0xcb,eax
  40684a:	(bad)  
  40684b:	mov    ebx,0xa697b862
  406850:	stos   BYTE PTR es:[edi],al
  406851:	pop    edi
  406852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406853:	es sbb al,0xb3
  406856:	subps  xmm6,XMMWORD PTR [edi+0x25b92f9f]
  40685d:	xchg   ebx,eax
  40685e:	pusha  
  40685f:	(bad)
  406862:	push   ss
  406863:	xchg   DWORD PTR [ebx-0x1],ecx
  406866:	xor    DWORD PTR ds:0x34cdc957,ecx
  40686c:	jb     0x40684d
  40686e:	(bad)  
  406870:	sbb    eax,0x5585a763
  406875:	shl    dl,1
  406877:	push   ecx
  406878:	(bad)  
  406879:	and    esp,DWORD PTR [edi+0x48d5a85b]
  40687f:	cmp    al,0x8a
  406882:	imul   ecx,DWORD PTR [edx],0xffffff94
  406885:	xchg   esp,eax
  406886:	std    
  406887:	xchg   esp,eax
  406888:	gs jno 0x406905
  40688b:	popf   
  40688c:	push   ds
  40688d:	jl     0x4068d4
  40688f:	mov    ah,0xb1
  406891:	clc    
  406892:	loopne 0x4068be
  406894:	pop    edx
  406895:	and    edi,DWORD PTR [ecx-0x15]
  406898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406899:	jmp    0x406838
  40689b:	dec    edi
  40689c:	pop    edx
  40689d:	dec    ecx
  40689e:	push   ss
  40689f:	jle    0x406838
  4068a1:	jmp    0x406868
  4068a3:	mov    ah,0xdc
  4068a5:	push   esi
  4068a6:	cmc    
  4068a7:	xchg   edi,eax
  4068a8:	push   ecx
  4068a9:	scas   al,BYTE PTR es:[edi]
  4068aa:	fcomp  DWORD PTR [edi+esi*4+0x77]
  4068ae:	sahf   
  4068af:	add    ah,ch
  4068b1:	sbb    al,0xd0
  4068b3:	jb     0x40686a
  4068b5:	mov    dl,al
  4068b7:	test   DWORD PTR [esp+eax*8+0x33d92026],edi
  4068be:	es aad 0xef
  4068c1:	out    dx,eax
  4068c2:	pause  
  4068c4:	shr    DWORD PTR [eax],cl
  4068c6:	push   ds
  4068c7:	pushf  
  4068c8:	pop    es
  4068c9:	mov    dl,0xa6
  4068cb:	sbb    eax,0xa6b7732f
  4068d0:	jo     0x406855
  4068d2:	stos   BYTE PTR es:[edi],al
  4068d3:	and    al,0xb8
  4068d5:	into   
  4068d6:	mov    ebx,0x5868e8e
  4068db:	inc    ebp
  4068dc:	fdivr  QWORD PTR [eax-0x7517dc55]
  4068e2:	mov    dh,0x2b
  4068e4:	xlat   BYTE PTR ds:[ebx]
  4068e5:	xchg   ebx,eax
  4068e6:	cmp    al,BYTE PTR [eax]
  4068e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e9:	push   ss
  4068ea:	sbb    cl,BYTE PTR [ebp+0xcc8e8f4]
  4068f0:	je     0x4068d6
  4068f2:	test   bl,dl
  4068f4:	sbb    DWORD PTR [ecx+0x36],esp
  4068f7:	mov    edx,?
  4068f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068fa:	or     esp,DWORD PTR [eax+ebx*8-0x65]
  4068fe:	pusha  
  4068ff:	jb     0x40694b
  406901:	(bad)  
  406902:	push   esi
  406903:	pop    ds
  406904:	jns    0x40693c
  406906:	icebp  
  406907:	es or  bl,ch
  40690a:	(bad)  
  40690b:	popa   
  40690c:	add    ch,ch
  40690e:	dec    edx
  40690f:	ins    BYTE PTR es:[edi],dx
  406910:	push   esi
  406911:	push   ebp
  406912:	sub    DWORD PTR [edi+ebx*2+0x2ae8fce3],ecx
  406919:	(bad)  
  40691b:	std    
  40691c:	inc    edi
  40691d:	xor    BYTE PTR ss:[ecx-0x6508b9e7],0x44
  406925:	mov    bl,BYTE PTR [esi-0x2993c8ab]
  40692b:	and    edx,eax
  40692d:	aam    0x80
  40692f:	jbe    0x406952
  406931:	push   edx
  406932:	jns    0x4068b7
  406934:	add    eax,0xc5f0ee88
  406939:	or     ecx,ebp
  40693b:	push   esp
  40693c:	xchg   esi,eax
  40693d:	mov    cs:0x32b063a1,eax
  406943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406944:	lods   eax,DWORD PTR ds:[esi]
  406945:	jb     0x4068dd
  406947:	ror    BYTE PTR [eax],0x82
  40694a:	push   edi
  40694b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40694d:	mov    al,0x9c
  40694f:	dec    edx
  406950:	add    esi,DWORD PTR [edx+0x7bf5a7aa]
  406956:	fisttp DWORD PTR [ecx]
  406958:	push   edx
  406959:	mov    dl,ch
  40695b:	cs dec edi
  40695d:	int3   
  40695e:	pop    ss
  40695f:	dec    ebx
  406960:	dec    esi
  406961:	or     DWORD PTR [edi-0x7960c58d],esi
  406967:	icebp  
  406968:	add    ah,BYTE PTR [edi+eiz*2+0x5a9e49c0]
  40696f:	xor    dl,bh
  406971:	push   ebx
  406972:	xchg   ebp,eax
  406973:	xchg   BYTE PTR [edx+0x6f0d84ad],al
  406979:	push   ecx
  40697a:	call   0xaccaf960
  40697f:	xchg   esp,eax
  406980:	in     eax,0xef
  406982:	int3   
  406983:	xor    ecx,DWORD PTR [edx-0xb7eb11]
  406989:	jno    0x4069ec
  40698b:	dec    ecx
  40698c:	pop    eax
  40698d:	mov    ds:0x106cfa4c,al
  406992:	cmp    al,0xe8
  406994:	inc    ecx
  406995:	jmp    0xa016:0x8e7f2190
  40699c:	sub    eax,DWORD PTR [edi+0x3081480]
  4069a2:	sub    eax,0x69ac103d
  4069a7:	(bad)  
  4069a8:	mov    esp,0x4e4abf6a
  4069ad:	cmp    bh,BYTE PTR [ecx]
  4069af:	pop    es
  4069b0:	mov    ebp,0x10e436d0
  4069b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b6:	leave  
  4069b7:	call   0x834d9b8f
  4069bc:	cwde   
  4069bd:	or     DWORD PTR [edi+0x10f3e5c7],0x3be8b43e
  4069c7:	mov    al,0xb9
  4069c9:	push   0xc2b47f2c
  4069ce:	sub    al,0xbb
  4069d0:	ss mov eax,0xab6624b7
  4069d6:	pop    esp
  4069d7:	xchg   ecx,eax
  4069d8:	scas   al,BYTE PTR es:[edi]
  4069d9:	(bad)  
  4069da:	jecxz  0x406a27
  4069dc:	into   
  4069dd:	(bad)  
  4069de:	pop    edx
  4069df:	repnz or BYTE PTR [eax],bl
  4069e2:	push   esi
  4069e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e4:	pop    es
  4069e5:	stc    
  4069e6:	fcomp  DWORD PTR gs:[ebp+0x1fba8eba]
  4069ed:	dec    edx
  4069ee:	idiv   esi
  4069f0:	mov    esp,DWORD PTR [ebp+0x35]
  4069f3:	cmp    BYTE PTR [ecx],0x3c
  4069f6:	add    dh,BYTE PTR [ecx]
  4069f8:	xchg   esp,eax
  4069f9:	mov    eax,ds:0xe62a1e05
  4069fe:	mov    dl,0x2e
  406a00:	push   ebp
  406a01:	and    esp,DWORD PTR [edi]
  406a03:	mov    BYTE PTR [ecx-0x78],ah
  406a06:	jl     0x406998
  406a08:	xchg   ebp,eax
  406a09:	dec    ebx
  406a0a:	inc    edx
  406a0b:	mov    bl,0xee
  406a0d:	push   ebx
  406a0e:	mov    bh,0xb0
  406a10:	out    dx,al
  406a11:	cmp    BYTE PTR [ebp-0x5ce7e508],dl
  406a17:	mov    ch,BYTE PTR [ebx-0x32]
  406a1a:	mov    dl,0xc3
  406a1c:	and    DWORD PTR [ebp+edi*2+0x67aa686c],edi
  406a23:	test   eax,0x2a313d91
  406a28:	fcmovb st,st(4)
  406a2a:	popa   
  406a2b:	xor    al,BYTE PTR [ebx]
  406a2d:	pop    edx
  406a2e:	pop    ds
  406a2f:	dec    ebp
  406a30:	cdq    
  406a31:	ins    BYTE PTR es:[edi],dx
  406a32:	mov    esp,DWORD PTR [esi]
  406a34:	(bad)  
  406a35:	mov    esi,0x65638f9c
  406a3a:	out    0xa3,eax
  406a3c:	fucomip st,st(3)
  406a3e:	push   es
  406a3f:	iret   
  406a40:	loopne 0x406abd
  406a42:	xlat   BYTE PTR ds:[ebx]
  406a43:	(bad)  
  406a45:	iret   
  406a46:	imul   ebp,DWORD PTR [esi-0x34baf81],0xfc562f28
  406a50:	repnz mov ebp,0xd6a3860c
  406a56:	int3   
  406a57:	inc    esp
  406a58:	pop    es
  406a59:	adc    BYTE PTR [ebx-0x18],dh
  406a5c:	jnp    0x406a94
  406a5e:	test   DWORD PTR [edi],esi
  406a60:	jmp    0x406a80
  406a62:	ret    
  406a63:	cmp    al,0xa
  406a65:	js     0x406aad
  406a67:	cmp    DWORD PTR [ebx-0x4837ba68],ecx
  406a6d:	imul   edx
  406a6f:	mov    cl,0x6a
  406a71:	frstor [edi+0x5e]
  406a74:	xchg   BYTE PTR [edx],dh
  406a76:	or     dl,BYTE PTR [esi+0x1d]
  406a79:	jp     0x406a75
  406a7b:	pop    esi
  406a7c:	xlat   BYTE PTR ds:[ebx]
  406a7d:	adc    DWORD PTR ds:0x92643490,0xffffff89
  406a84:	adc    al,0x60
  406a86:	(bad)  
  406a87:	fisttp DWORD PTR [edi-0x648b499e]
  406a8d:	xchg   DWORD PTR [ecx-0x42],ecx
  406a90:	loope  0x406a4f
  406a92:	test   eax,0x6685798d
  406a98:	adc    al,0xa6
  406a9a:	jnp    0x406a83
  406a9c:	packuswb mm3,QWORD PTR [edx-0x52538901]
  406aa3:	mov    cl,0x17
  406aa5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aa7:	inc    eax
  406aa8:	neg    DWORD PTR [ebx+0x52e9d926]
  406aae:	mov    eax,ds:0xcc898685
  406ab3:	inc    ecx
  406ab4:	push   es
  406ab5:	add    eax,0x893dab9a
  406aba:	and    BYTE PTR [eax],ch
  406abc:	ss push 0x5e
  406abf:	push   ebp
  406ac0:	imul   ecx,DWORD PTR [eax],0xfffffff4
  406ac3:	xchg   DWORD PTR [ebx],esi
  406ac5:	ffreep st(2)
  406ac7:	mov    ah,0x5c
  406ac9:	inc    BYTE PTR [eax-0x2b]
  406acc:	repnz pushf 
  406ace:	pop    ss
  406acf:	in     eax,dx
  406ad0:	adc    BYTE PTR [eax+0x32],al
  406ad3:	sub    esp,esi
  406ad5:	pop    esi
  406ad6:	fdiv   DWORD PTR [edi]
  406ad8:	dec    edx
  406ad9:	mov    BYTE PTR [edx-0x6269dc7f],al
  406adf:	xchg   ebp,eax
  406ae0:	push   ss
  406ae1:	push   edi
  406ae2:	push   ebx
  406ae3:	fisubr DWORD PTR [edx+ebp*2-0x79]
  406ae7:	push   edi
  406ae8:	pop    es
  406ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aea:	es js  0x406aff
  406aed:	sbb    BYTE PTR [esi+0x4a7c4e97],dl
  406af3:	mov    WORD PTR [ecx],?
  406af5:	or     DWORD PTR [eax],eax
  406af7:	mov    cl,0x5c
  406af9:	jl     0x406b04
  406afb:	leave  
  406afc:	shr    DWORD PTR [edi+0x6281f8],1
  406b02:	loop   0x406b5f
  406b04:	mov    ebp,0xdcbf79fe
  406b09:	iret   
  406b0a:	cmp    eax,0x3ca16685
  406b0f:	mov    ch,0xaf
  406b11:	fcmovbe st,st(7)
  406b13:	mov    ecx,?
  406b15:	jmp    0xd255:0x66857c3f
  406b1c:	mov    edx,DWORD PTR [esi-0x3ad96dd2]
  406b22:	ja     0x406b06
  406b24:	fnstcw WORD PTR [edi+edi*2-0x41]
  406b28:	mov    BYTE PTR [ebp+0x64fe1233],al
  406b2e:	outs   dx,BYTE PTR ds:[esi]
  406b2f:	cli    
  406b30:	xor    edx,DWORD PTR [eax]
  406b32:	(bad)  
  406b33:	mov    ecx,ebx
  406b35:	imul   ecx,DWORD PTR [eax],0xffffffeb
  406b38:	clc    
  406b39:	push   ss
  406b3a:	cmp    BYTE PTR [ecx+0x38],bl
  406b3d:	cmp    ebx,DWORD PTR [edi+0x19]
  406b40:	pop    edx
  406b41:	cs push 0xc706df8c
  406b47:	ficomp WORD PTR [esi+0x74fa0da5]
  406b4d:	das    
  406b4e:	sbb    esp,DWORD PTR [esp+edx*4-0x6c]
  406b52:	mov    eax,ds:0xd29f65fb
  406b57:	adc    al,0x46
  406b59:	inc    eax
  406b5a:	sub    eax,0x72bf25d3
  406b5f:	ret    
  406b60:	jp     0x406af9
  406b62:	fmul   DWORD PTR [edx]
  406b64:	call   0x20b3:0x9bdf6d0d
  406b6b:	mov    ebx,0x2cab863d
  406b70:	iret   
  406b71:	pop    esp
  406b72:	push   0x78149f6e
  406b77:	cwde   
  406b78:	test   BYTE PTR cs:[ebx],0x87
  406b7c:	pusha  
  406b7d:	iret   
  406b7e:	fs sub dl,bh
  406b81:	nop
  406b82:	cld    
  406b83:	inc    edi
  406b84:	add    cl,BYTE PTR [edx+0x195d21e6]
  406b8a:	jge    0x406b8f
  406b8c:	lahf   
  406b8d:	fimul  WORD PTR [edi+0xfd4c4bb]
  406b93:	mov    al,ds:0xdc01c71f
  406b98:	jmp    0x406be6
  406b9a:	jnp    0x406b42
  406b9c:	fldenv [eax-0x29]
  406b9f:	xchg   esp,eax
  406ba0:	adc    ebp,DWORD PTR [esi-0x5fa96ce1]
  406ba6:	mov    dh,0x2c
  406ba8:	push   ecx
  406ba9:	mov    ds:0xd2dd5499,al
  406bae:	inc    ebp
  406baf:	add    dh,BYTE PTR [eax-0x20]
  406bb2:	push   DWORD PTR [ebx-0x58db0021]
  406bb8:	div    DWORD PTR [ebx+eiz*2-0x16]
  406bbc:	jmp    0x60993bbd
  406bc1:	loope  0x406bbf
  406bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bc4:	xchg   esp,eax
  406bc5:	push   edx
  406bc6:	pop    eax
  406bc7:	push   ecx
  406bc8:	xchg   ebp,eax
  406bc9:	sub    bh,cl
  406bcb:	xlat   BYTE PTR ds:[ebx]
  406bcc:	jge    0x406c2b
  406bce:	addr16 test eax,0x9fecb0ed
  406bd4:	xor    al,0x3d
  406bd6:	adc    BYTE PTR [edi-0x2001184a],cl
  406bdc:	cwde   
  406bdd:	scas   ax,WORD PTR es:[edi]
  406bdf:	xchg   ebp,eax
  406be0:	pop    ss
  406be1:	mov    ecx,esi
  406be3:	sub    ch,BYTE PTR [edi+0x73326d5a]
  406be9:	ja     0x406b98
  406beb:	data16 js 0x406c54
  406bee:	stos   BYTE PTR es:[edi],al
  406bef:	xchg   cl,dl
  406bf1:	push   ecx
  406bf2:	cmp    eax,0x734ec929
  406bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf8:	jnp    0x406c4e
  406bfa:	test   al,0x75
  406bfc:	xor    eax,0xa86691e2
  406c01:	ins    DWORD PTR es:[edi],dx
  406c02:	adc    DWORD PTR [eax+0x1ce1cf66],0x59
  406c09:	xchg   esi,eax
  406c0a:	push   esi
  406c0b:	outs   dx,BYTE PTR ds:[esi]
  406c0c:	ss into 
  406c0e:	call   0xae2f815c
  406c13:	jo     0x406c3f
  406c15:	ja     0x406c89
  406c17:	xchg   ecx,eax
  406c18:	pop    esi
  406c19:	mov    edi,0xfef19b75
  406c1e:	mov    ecx,DWORD PTR ds:0x79f45248
  406c24:	mov    ah,0x67
  406c26:	scas   eax,DWORD PTR es:[edi]
  406c27:	hlt    
  406c28:	test   al,0x4d
  406c2a:	enter  0x31b3,0xca
  406c2e:	int    0x92
  406c30:	mov    ebp,0x7596b2e0
  406c35:	mov    al,ch
  406c37:	lods   al,BYTE PTR ds:[esi]
  406c38:	cmp    edx,DWORD PTR [ecx+0x332076b]
  406c3e:	ret    0x30da
  406c41:	xor    DWORD PTR [esi],ebp
  406c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c44:	and    ebp,ebp
  406c46:	add    BYTE PTR [eax+ebx*4-0x231212da],dl
  406c4d:	inc    esp
  406c4e:	sbb    al,0x49
  406c50:	jmp    0xfa55:0x7158bd3f
  406c57:	xor    eax,0xc434f6be
  406c5c:	adc    BYTE PTR [edi+ebx*1-0x14a89fcf],ah
  406c63:	aam    0x65
  406c65:	jae    0x406c38
  406c67:	or     edx,DWORD PTR [edx]
  406c69:	sbb    DWORD PTR [esi+0x16],ecx
  406c6c:	sub    edi,ebx
  406c6e:	call   0x3c1d:0x56f518aa
  406c75:	mov    cs,edx
  406c77:	jbe    0x406ca7
  406c79:	xchg   esi,eax
  406c7a:	retf   0x1b69
  406c7d:	mov    ds:0x6ec2859f,al
  406c82:	inc    ecx
  406c83:	je     0x406c54
  406c85:	pop    esp
  406c86:	imul   edx,DWORD PTR [eax+0x4f],0x5f
  406c8a:	(bad)  
  406c8c:	xchg   BYTE PTR [ebp-0x2a],al
  406c8f:	xchg   esi,eax
  406c90:	jmp    0x4d9f85f8
  406c95:	sub    esi,DWORD PTR [ecx+ebx*1]
  406c98:	call   0xdab0:0x3221d873
  406c9f:	retf   
  406ca0:	test   DWORD PTR ds:[ebx+0x15],ecx
  406ca4:	sub    BYTE PTR [ebx],ch
  406ca6:	std    
  406ca7:	js     0x406c8a
  406ca9:	inc    ebx
  406caa:	ucomiss xmm3,xmm5
  406cad:	(bad)  
  406cae:	cmp    ah,BYTE PTR [eax+0x5f]
  406cb1:	jns    0x406cd3
  406cb3:	mov    ah,0xba
  406cb5:	scas   eax,DWORD PTR es:[edi]
  406cb6:	ins    BYTE PTR es:[edi],dx
  406cb7:	or     esi,DWORD PTR cs:[ebx+0x2]
  406cbb:	push   eax
  406cbc:	fdiv   DWORD PTR [ecx]
  406cbe:	add    BYTE PTR [edi-0x524005a9],0x11
  406cc5:	dec    edi
  406cc6:	xor    DWORD PTR [edi],edi
  406cc8:	add    al,0x88
  406cca:	pop    ebp
  406ccb:	call   FWORD PTR [eax]
  406ccd:	pusha  
  406cce:	cmp    BYTE PTR [ebx],bl
  406cd0:	pop    edx
  406cd1:	arpl   WORD PTR [edx+0x1a],ax
  406cd4:	les    eax,FWORD PTR [edi-0x3e]
  406cd7:	add    eax,0xc0eecc25
  406cdc:	jae    0x406cc1
  406cde:	nop
  406cdf:	pop    eax
  406ce0:	cmp    DWORD PTR [ebp-0xa],ebx
  406ce3:	retf   
  406ce4:	std    
  406ce5:	pop    edx
  406ce6:	das    
  406ce7:	pop    ebp
  406ce8:	pop    es
  406ce9:	fistp  WORD PTR [edi+0x3f9f2982]
  406cef:	xor    BYTE PTR [esi+ecx*1+0x34],bh
  406cf3:	xchg   dh,dh
  406cf5:	shl    BYTE PTR [eax],0x56
  406cf8:	push   es
  406cf9:	mov    cl,0x40
  406cfb:	adc    eax,0x24e25825
  406d00:	mov    ds:0x7814ca9a,eax
  406d05:	add    esp,DWORD PTR [edx]
  406d07:	or     eax,0x45d19ec1
  406d0c:	std    
  406d0d:	sbb    al,0x6b
  406d0f:	leave  
  406d10:	ss inc ecx
  406d12:	(bad)  
  406d13:	xchg   esi,eax
  406d14:	mov    ch,0x10
  406d16:	inc    ebx
  406d17:	and    al,0x76
  406d19:	inc    DWORD PTR [ebp-0x3688d15e]
  406d1f:	push   ecx
  406d20:	sub    al,0x22
  406d22:	mov    ebp,0x5c6efa4e
  406d27:	lds    eax,FWORD PTR [eax+0x13]
  406d2a:	push   ebx
  406d2b:	sub    dl,BYTE PTR [ebp-0x4563b45f]
  406d31:	(bad)  
  406d32:	and    eax,0xf15a53d1
  406d37:	out    0xfc,eax
  406d39:	inc    esp
  406d3a:	dec    esi
  406d3b:	pusha  
  406d3c:	iret   
  406d3d:	data16 int3 
  406d3f:	push   eax
  406d40:	bound  ebx,QWORD PTR [edx+0xe66c863]
  406d46:	sub    dl,bh
  406d48:	adc    BYTE PTR [ebx-0x33],dh
  406d4b:	adc    ebp,DWORD PTR [edi-0x60]
  406d4e:	test   eax,0xdc41f7b5
  406d53:	test   eax,0x77f64830
  406d58:	shr    BYTE PTR [ecx],1
  406d5a:	mov    ds,WORD PTR [ecx-0x61]
  406d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5e:	in     eax,0xae
  406d60:	sub    BYTE PTR [eax+ebx*8],ch
  406d63:	dec    ecx
  406d64:	or     eax,0xe632d58
  406d69:	push   esi
  406d6a:	jo     0x406d7f
  406d6c:	xchg   edx,eax
  406d6d:	or     ah,BYTE PTR [ebp+0x55546e16]
  406d73:	scas   al,BYTE PTR es:[edi]
  406d74:	test   BYTE PTR [ecx+0x4a],0x25
  406d78:	push   ebx
  406d79:	mov    al,0xb8
  406d7b:	mov    ch,0xf8
  406d7d:	aaa    
  406d7e:	lahf   
  406d7f:	jne    0x406da2
  406d81:	shl    DWORD PTR fs:[esi],1
  406d84:	rcr    esp,0xf4
  406d87:	sub    BYTE PTR [ecx-0x5ebbcc5c],0x95
  406d8e:	xor    eax,0x379d4187
  406d93:	jnp    0x406d6f
  406d95:	cmp    DWORD PTR [eax-0x38d75ab3],edi
  406d9b:	push   edx
  406d9c:	pop    ss
  406d9d:	adc    cl,BYTE PTR [eax]
  406d9f:	mov    ebp,0x5ab116c8
  406da4:	sbb    DWORD PTR [edx-0x48],eax
  406da7:	clc    
  406da8:	in     al,0x88
  406daa:	call   0x93ae:0xff7af1f2
  406db1:	push   ebp
  406db2:	or     dh,BYTE PTR [edx+0x555b860e]
  406db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db9:	call   0xd273c6c9
  406dbe:	pop    ebx
  406dbf:	adc    BYTE PTR [edi],al
  406dc1:	inc    ecx
  406dc2:	jns    0x406e02
  406dc4:	add    al,0x28
  406dc6:	xchg   esp,eax
  406dc7:	int    0xc6
  406dc9:	xor    BYTE PTR [edi],bl
  406dcb:	mov    al,0xc7
  406dcd:	loope  0x406e14
  406dcf:	sbb    bl,ah
  406dd1:	or     DWORD PTR [ecx+0x6c],ebx
  406dd4:	or     eax,0x7ec60fe1
  406dd9:	cmp    DWORD PTR [edx+0x1f3d394b],ebx
  406ddf:	mov    edi,0x53f961f4
  406de4:	sub    BYTE PTR [edx-0x7e],dl
  406de7:	pop    es
  406de8:	inc    eax
  406de9:	mov    dl,0x10
  406deb:	aas    
  406dec:	xchg   ebx,eax
  406ded:	iret   
  406dee:	mov    BYTE PTR [ebx],bh
  406df0:	sbb    al,0xbb
  406df2:	icebp  
  406df3:	sbb    al,BYTE PTR [ebx+eiz*8+0x60]
  406df7:	mov    cl,0xa8
  406df9:	fnstenv [ebp+0x5d]
  406dfc:	push   esi
  406dfd:	mov    bl,0x71
  406dff:	sets   BYTE PTR [ebx-0x35]
  406e03:	outs   dx,BYTE PTR ds:[esi]
  406e04:	adc    eax,0x90d477f7
  406e09:	fstp   QWORD PTR [edi+0x38376554]
  406e0f:	mov    ds:0x35764870,eax
  406e14:	sub    esp,DWORD PTR [ebx+0x2b]
  406e17:	xchg   ecx,eax
  406e18:	jo     0x406e50
  406e1a:	inc    ecx
  406e1b:	inc    ebx
  406e1c:	lds    edx,FWORD PTR [esi-0x57]
  406e1f:	js     0x406e24
  406e21:	push   esp
  406e22:	jmp    FWORD PTR [edi]
  406e24:	out    0xfd,eax
  406e26:	outs   dx,BYTE PTR ds:[esi]
  406e27:	adc    cl,BYTE PTR [eax-0x58aac4ee]
  406e2d:	or     dh,0x33
  406e30:	pushf  
  406e31:	sbb    al,0xf1
  406e33:	sub    bl,dl
  406e35:	and    DWORD PTR [ebp-0x34a84a50],esp
  406e3b:	inc    ebp
  406e3c:	mov    edi,0x476e3b59
  406e41:	mov    sp,WORD PTR ds:0xa16b8734
  406e48:	sub    DWORD PTR [ebp+0x3d9d687d],esi
  406e4e:	(bad)  
  406e4f:	jns    0x406ec2
  406e51:	sbb    al,0x40
  406e53:	or     esi,ebp
  406e55:	in     al,0xe8
  406e57:	pop    edx
  406e58:	and    dh,BYTE PTR [esi+0x52]
  406e5b:	mov    esp,?
  406e5d:	rcr    DWORD PTR [ebp+0x60299cb8],cl
  406e63:	push   eax
  406e64:	cs into 
  406e66:	pop    esi
  406e67:	(bad)  
  406e68:	sbb    eax,0xb6a4f494
  406e6d:	inc    esp
  406e6e:	loopne 0x406e7d
  406e70:	sub    al,0x97
  406e72:	or     dh,bh
  406e74:	bound  eax,QWORD PTR [ebp-0x1d484c9b]
  406e7a:	push   esp
  406e7b:	loop   0x406e42
  406e7d:	sbb    dh,ch
  406e7f:	ret    0x3e10
  406e82:	ins    BYTE PTR es:[edi],dx
  406e83:	(bad)  
  406e84:	rol    DWORD PTR [ecx+eax*1+0x707668a5],cl
  406e8b:	iret   
  406e8c:	add    al,BYTE PTR [ecx-0x16122e53]
  406e92:	xor    eax,0x45400e5f
  406e97:	mov    esi,0x7417f5aa
  406e9c:	call   edx
  406e9e:	shr    BYTE PTR [bp+di+0x2730],1
  406ea3:	int    0xfe
  406ea5:	stos   BYTE PTR es:[edi],al
  406ea6:	daa    
  406ea7:	aad    0x42
  406ea9:	push   esp
  406eaa:	int    0x6c
  406eac:	sbb    eax,0x9e291229
  406eb1:	sbb    BYTE PTR [ecx-0x6a],0x57
  406eb5:	dec    esi
  406eb6:	sub    edi,DWORD PTR [ecx-0x7]
  406eb9:	aad    0xf1
  406ebb:	dec    eax
  406ebc:	jmp    0xf3d8:0x44670859
  406ec3:	enter  0x5080,0xf3
  406ec7:	int    0x26
  406ec9:	inc    edx
  406eca:	jns    0x406e87
  406ecc:	cmp    DWORD PTR [ebx-0x19],ecx
  406ecf:	mov    edx,0x7f3b6748
  406ed4:	aaa    
  406ed5:	xor    BYTE PTR [edx+esi*2],cl
  406ed8:	add    dl,BYTE PTR [edi]
  406eda:	(bad)  
  406edb:	pusha  
  406edc:	push   ss
  406edd:	pop    ebx
  406ede:	dec    eax
  406edf:	jecxz  0x406e8a
  406ee1:	push   0xb1f8e4b2
  406ee6:	cs repnz daa 
  406ee9:	sub    DWORD PTR [edi+0x23543c29],edi
  406eef:	(bad)  [edx-0x1e]
  406ef2:	fnstcw WORD PTR [edx]
  406ef4:	dec    edx
  406ef5:	sbb    bl,BYTE PTR [edi]
  406ef7:	dec    eax
  406ef8:	mov    ebp,0xe948fe69
  406efd:	ficomp WORD PTR [ecx+0x7f]
  406f00:	jp     0x406ea6
  406f02:	pop    edx
  406f03:	xor    BYTE PTR [esi],ch
  406f05:	xchg   DWORD PTR cs:[edx-0x305fdd3c],edx
  406f0c:	les    ebx,FWORD PTR [ebp+0x6ef8e19c]
  406f12:	fmulp  st(7),st
  406f14:	es fwait
  406f16:	cmp    DWORD PTR [edx+0x48],esi
  406f19:	pop    esi
  406f1a:	imul   eax,DWORD PTR [ebp-0x427aff14],0xd8a7c2a8
  406f24:	fcomp  st(3)
  406f26:	clc    
  406f27:	add    al,ch
  406f29:	out    0x91,eax
  406f2b:	int3   
  406f2c:	sbb    eax,0x9ac8112d
  406f31:	mov    eax,ds:0xae824ff7
  406f36:	ret    0xca3b
  406f39:	int    0xf1
  406f3b:	lods   al,BYTE PTR ds:[esi]
  406f3c:	push   0xfad14660
  406f41:	mov    sp,0x980
  406f45:	add    BYTE PTR [edx],dh
  406f47:	ret    0x1814
  406f4a:	xchg   esp,eax
  406f4b:	xchg   edi,eax
  406f4c:	dec    esp
  406f4d:	xlat   BYTE PTR ds:[ebx]
  406f4e:	and    ch,ch
  406f50:	add    DWORD PTR [edx],edx
  406f52:	or     eax,0x2db78746
  406f57:	test   BYTE PTR [eax+0x6],ah
  406f5a:	xor    BYTE PTR [eax],bh
  406f5c:	call   0x769cf6
  406f61:	lods   al,BYTE PTR ds:[esi]
  406f62:	jecxz  0x406f16
  406f64:	aad    0x83
  406f66:	xchg   esp,eax
  406f67:	imul   esp,DWORD PTR [ebx+0x4],0xa6b0e302
  406f6e:	fld    TBYTE PTR [esi]
  406f70:	jae    0x406f2e
  406f72:	arpl   si,dx
  406f74:	sbb    BYTE PTR [esi-0x4147d509],bh
  406f7a:	cmp    DWORD PTR [ebx+ebx*1-0x11],ebp
  406f7e:	sub    edx,ebx
  406f80:	sub    DWORD PTR [edx],0x94c056af
  406f86:	out    0x4c,al
  406f88:	mov    al,0x3d
  406f8a:	xchg   esp,eax
  406f8b:	jg     0x406f92
  406f8d:	repz push ds
  406f8f:	xchg   edi,eax
  406f90:	cmp    DWORD PTR [ecx-0x4d],ebp
  406f93:	push   edx
  406f94:	and    DWORD PTR gs:[eax],0x3132bdf7
  406f9b:	xchg   al,bl
  406f9d:	repnz stos BYTE PTR es:[edi],al
  406f9f:	mov    esi,0x19203b5
  406fa4:	mov    fs,WORD PTR [ecx+edx*4+0x2a93cdb]
  406fab:	repnz add DWORD PTR [esi-0xc5e348],esp
  406fb2:	push   edi
  406fb3:	push   ds
  406fb4:	xchg   ebp,eax
  406fb5:	push   ecx
  406fb6:	repnz adc ecx,ecx
  406fb9:	fst    DWORD PTR [ebp-0x7d3b1564]
  406fbf:	pushaw 
  406fc1:	cs popf 
  406fc3:	sbb    DWORD PTR [esi],edx
  406fc5:	or     bl,ah
  406fc7:	cmp    DWORD PTR [edi-0x3e29ed40],esp
  406fcd:	sub    WORD PTR [esi-0x701b84c3],ax
  406fd4:	daa    
  406fd5:	push   edi
  406fd6:	push   cs
  406fd7:	out    0x99,al
  406fd9:	(bad)  
  406fda:	stc    
  406fdb:	sub    esp,esp
  406fdd:	push   edx
  406fde:	popa   
  406fdf:	inc    esp
  406fe0:	shl    BYTE PTR [edi],1
  406fe2:	push   ds
  406fe3:	jmp    0x406fca
  406fe5:	sbb    al,0xaf
  406fe7:	(bad)  
  406fe8:	cdq    
  406fe9:	ins    BYTE PTR es:[edi],dx
  406fea:	shl    eax,cl
  406fec:	ss pop eax
  406fee:	aam    0xdd
  406ff0:	jne    0x406f97
  406ff2:	add    eax,0x3d67da07
  406ff7:	addr16 xor edi,ebx
  406ffa:	mov    bl,0xf7
  406ffc:	and    eax,0x689c5c64
  407001:	rcr    BYTE PTR [esi+esi*1+0x2b506ee3],0xba
  407009:	mov    bl,0x49
  40700b:	fisubr WORD PTR [ebx+ebx*4-0x1f3e3ddb]
  407012:	sub    eax,0x4264ffe0
  407017:	fs xor al,0x9d
  40701a:	sbb    cl,ah
  40701c:	repnz sub BYTE PTR [ebx-0x20088f82],cl
  407023:	daa    
  407024:	scas   al,BYTE PTR es:[edi]
  407025:	push   ebp
  407026:	mov    ds:0x2d666daa,al
  40702b:	aad    0x73
  40702d:	push   esp
  40702e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40702f:	mov    al,ds:0xff449fc7
  407034:	icebp  
  407035:	(bad)  
  407036:	xchg   esi,eax
  407037:	ss call 0xbd4c:0xccd9a0c8
  40703f:	jg     0x406fda
  407041:	or     bl,BYTE PTR gs:[ebp-0x5c437990]
  407048:	out    dx,eax
  407049:	sbb    eax,0x243ed6b8
  40704e:	dec    eax
  40704f:	pop    ebx
  407050:	inc    eax
  407051:	(bad)  
  407052:	dec    esp
  407053:	mov    bl,BYTE PTR [edi+0x36]
  407056:	and    al,BYTE PTR ds:0x31b77955
  40705c:	push   edi
  40705d:	imul   eax,ebx,0xd45a04f5
  407063:	cmp    DWORD PTR [edi+ebp*4-0x4966fec9],eax
  40706a:	icebp  
  40706b:	add    eax,0xb8f65ff0
  407070:	fld    DWORD PTR [esi]
  407072:	pop    ebx
  407073:	test   DWORD PTR [ebp-0x398aae81],eax
  407079:	mov    ecx,eax
  40707b:	in     al,dx
  40707c:	mov    edi,0x9ba5e628
  407081:	cli    
  407082:	push   0xffffffe7
  407084:	fsubr  QWORD PTR [ebx-0x38]
  407087:	(bad)  
  407088:	ss push esp
  40708a:	xchg   eax,ecx
  40708c:	push   ebp
  40708d:	out    0x85,al
  40708f:	ins    DWORD PTR es:[edi],dx
  407090:	addr16 int 0xb2
  407093:	ds (bad) 
  407095:	jmp    DWORD PTR [ecx+edx*2-0x10]
  40709a:	sbb    esp,ebx
  40709c:	mov    DWORD PTR [esi],0xb332af6
  4070a2:	popf   
  4070a3:	cs int3 
  4070a5:	inc    ecx
  4070a6:	add    al,0x62
  4070a8:	sti    
  4070a9:	mov    ah,0x5e
  4070ab:	dec    edx
  4070ac:	cdq    
  4070ad:	jns    0x407091
  4070af:	outs   dx,BYTE PTR ds:[esi]
  4070b0:	out    dx,eax
  4070b1:	inc    ebp
  4070b2:	mov    bl,0xb1
  4070b4:	and    bh,BYTE PTR [edx]
  4070b6:	xor    eax,DWORD PTR [eax+0x25]
  4070b9:	scas   eax,DWORD PTR es:[edi]
  4070ba:	cmp    edi,esp
  4070bc:	scas   eax,DWORD PTR es:[edi]
  4070bd:	call   0x422b:0x75e6448b
  4070c4:	add    ah,BYTE PTR [edi-0x4b]
  4070c7:	dec    esp
  4070c8:	push   0x8a17e415
  4070cd:	and    eax,0x6e427838
  4070d2:	jmp    0x407135
  4070d4:	sub    esi,DWORD PTR [ebx+eax*8+0x31]
  4070d8:	hlt    
  4070d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070da:	mov    esi,0x12901da9
  4070df:	jno    0x407076
  4070e1:	in     eax,0xcf
  4070e3:	jp     0x40707d
  4070e5:	cmp    DWORD PTR [ebx],eax
  4070e7:	sub    al,0xad
  4070e9:	popf   
  4070ea:	add    DWORD PTR ds:[edx-0x1b7b493b],edx
  4070f1:	fimul  WORD PTR [ecx+0x27b52c11]
  4070f7:	pop    edx
  4070f8:	jne    0x40709e
  4070fa:	loope  0x407096
  4070fc:	xchg   edx,eax
  4070fd:	xor    DWORD PTR [ecx+edx*2],0xffffffb9
  407101:	ret    
  407102:	(bad)  
  407103:	fidivr DWORD PTR [esi+ebp*4]
  407106:	xchg   BYTE PTR [edi+edx*1],dh
  407109:	sub    ah,bl
  40710b:	sub    eax,0xc6c64c6
  407110:	push   0xffffffbc
  407112:	scas   al,BYTE PTR es:[edi]
  407113:	pop    ss
  407114:	ins    BYTE PTR es:[edi],dx
  407115:	fdivr  DWORD PTR [edx+0x7d66833c]
  40711b:	mov    WORD PTR [ecx],es
  40711d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40711e:	call   0xfe31:0x854a4077
  407125:	jecxz  0x4070fd
  407127:	mov    edi,0x102df131
  40712c:	pop    edx
  40712d:	rcl    edx,cl
  40712f:	sbb    DWORD PTR [ebx],0x14b26b3e
  407135:	mov    ds:0x9016bd1f,eax
  40713a:	add    bl,al
  40713c:	push   eax
  40713d:	mov    DWORD PTR [edx+0x19],ecx
  407140:	addr16 dec ebp
  407142:	jnp    0x4071a8
  407144:	sahf   
  407145:	dec    DWORD PTR [esi+ebp*2]
  407148:	and    eax,0x7281f463
  40714d:	nop
  40714e:	xchg   edx,eax
  40714f:	cld    
  407150:	cdq    
  407151:	addr16 adc eax,0x1c791fa9
  407157:	test   eax,0xe8816fb3
  40715c:	loop   0x40714d
  40715e:	xchg   DWORD PTR [ebp-0x2fca8821],eax
  407164:	add    eax,0x53d41850
  407169:	repnz ficom DWORD PTR [edi+0x5e594032]
  407170:	fist   DWORD PTR [eax]
  407172:	addr16 mov ebp,0x33eaf888
  407178:	js     0x407147
  40717a:	imul   eax,DWORD PTR [ecx],0xf62bbbcf
  407180:	in     eax,0x55
  407182:	mov    al,ds:0x6b632256
  407187:	inc    ecx
  407188:	fwait
  407189:	sar    BYTE PTR [edi],0x65
  40718c:	mov    ebx,0x61414ee
  407191:	inc    esp
  407192:	pusha  
  407193:	pop    ebp
  407194:	or     bh,BYTE PTR [ecx]
  407196:	mov    DWORD PTR [ecx+0x33cf2d57],ebx
  40719c:	sub    eax,0x9b8f3290
  4071a1:	shl    BYTE PTR [esi-0x72],0x40
  4071a5:	pop    edx
  4071a6:	and    al,0x82
  4071a8:	jno    0x407162
  4071aa:	jle    0x407224
  4071ac:	popa   
  4071ad:	(bad)  
  4071af:	lock mov ds:0xa70b0914,al
  4071b5:	(bad)  
  4071b6:	sar    ch,1
  4071b8:	shr    BYTE PTR [ebx+0x7f9c677a],cl
  4071be:	mov    edx,0x128bd784
  4071c3:	mov    ch,0x7a
  4071c5:	add    eax,0x9bb920f6
  4071ca:	outs   dx,BYTE PTR ds:[esi]
  4071cb:	lods   eax,DWORD PTR ds:[esi]
  4071cc:	int3   
  4071cd:	adc    DWORD PTR [edx],ecx
  4071cf:	xor    al,BYTE PTR [edi+0x172024e0]
  4071d5:	mov    ebx,0x85da9bcc
  4071da:	fist   WORD PTR [eax]
  4071dc:	dec    edx
  4071dd:	xchg   ebp,eax
  4071de:	lods   ax,WORD PTR ds:[esi]
  4071e0:	mov    al,0x7
  4071e2:	cmc    
  4071e3:	sti    
  4071e4:	sti    
  4071e5:	push   ds
  4071e6:	pop    eax
  4071e7:	inc    edi
  4071e8:	jns    0x4071e1
  4071ea:	mov    DWORD PTR [edi+0x2],edx
  4071ed:	mov    dh,0x18
  4071ef:	lods   eax,DWORD PTR ds:[esi]
  4071f0:	ret    
  4071f1:	pop    edi
  4071f2:	cmp    esp,ebp
  4071f4:	lock dec esp
  4071f6:	out    0xde,eax
  4071f8:	mov    ?,WORD PTR [esp+edi*2+0x20fd66f]
  4071ff:	mov    esp,0x233d6c2c
  407204:	xchg   esi,eax
  407205:	cmp    ah,dh
  407207:	shl    DWORD PTR [ebp+0xa],0x3c
  40720b:	xor    eax,0xcade80be
  407210:	sbb    ebx,ebx
  407212:	and    BYTE PTR [esi-0x16],cl
  407215:	xor    DWORD PTR [edi+ebp*2],esp
  407218:	stos   DWORD PTR es:[edi],eax
  407219:	mov    ch,0x4e
  40721b:	repz and DWORD PTR ss:[eax-0x42],edi
  407220:	pop    es
  407221:	add    cl,BYTE PTR [ebx-0x4ea72892]
  407227:	pushf  
  407228:	test   edx,ebx
  40722a:	and    cl,BYTE PTR [eax-0x68]
  40722d:	mov    ah,BYTE PTR ds:0x28188800
  407233:	ja     0x40728f
  407235:	cmp    bh,bl
  407237:	pop    ds
  407238:	jb     0x4071c9
  40723a:	jne    0x40727d
  40723c:	mov    ecx,ss
  40723e:	lods   eax,DWORD PTR ds:[esi]
  40723f:	popa   
  407240:	fs mov dl,0x17
  407243:	pusha  
  407244:	sub    ecx,DWORD PTR [ebp+ecx*8+0x43]
  407248:	dec    ebx
  407249:	fxch   st(2)
  40724b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724c:	inc    ecx
  40724d:	sbb    ecx,DWORD PTR [edi+0x55a07b1c]
  407253:	fisub  DWORD PTR [ecx+0x33]
  407256:	xchg   ebx,eax
  407257:	pop    esi
  407258:	dec    ebx
  407259:	add    dl,BYTE PTR [eax+0x9]
  40725c:	sub    eax,0xa086e355
  407261:	add    al,bh
  407263:	push   ebp
  407264:	sub    eax,0x1d75b154
  407269:	test   al,0x1e
  40726b:	sub    al,0x51
  40726d:	ret    0xeae7
  407270:	pop    ebx
  407271:	sti    
  407272:	pop    ebx
  407273:	jmp    0x4cd8:0x7c5787e6
  40727a:	cmp    ch,ah
  40727c:	ficomp WORD PTR [ebx-0x3998719d]
  407282:	sti    
  407283:	mov    edx,0x3a665b2e
  407288:	adc    DWORD PTR [ebp-0xf],0x75
  40728c:	jns    0x407249
  40728e:	std    
  40728f:	xchg   ebp,eax
  407290:	fdivr  DWORD PTR [eax-0x41]
  407293:	push   0x5c
  407295:	jb     0x407226
  407297:	rcr    dl,cl
  407299:	or     al,0x6b
  40729b:	out    0xd1,al
  40729d:	lods   eax,DWORD PTR ds:[esi]
  40729e:	ja     0x407248
  4072a0:	arpl   ax,bp
  4072a2:	pop    esi
  4072a3:	aad    0xc7
  4072a5:	cs jecxz 0x40725a
  4072a8:	adc    al,0xc6
  4072aa:	popf   
  4072ab:	mov    bh,0x6e
  4072ad:	and    bl,BYTE PTR [edx-0x80]
  4072b0:	cmp    dh,BYTE PTR [ebx-0x7e]
  4072b3:	in     al,0xa1
  4072b5:	sub    eax,0x21289fd4
  4072ba:	rol    BYTE PTR [esi-0x1f],1
  4072bd:	ins    BYTE PTR es:[edi],dx
  4072be:	mov    eax,0xb05fc1a8
  4072c3:	mov    cl,BYTE PTR [esp+edx*1-0x4c73eaae]
  4072ca:	int3   
  4072cb:	rol    bh,0x81
  4072ce:	scas   eax,DWORD PTR es:[edi]
  4072cf:	les    ebx,FWORD PTR [eax]
  4072d1:	rcl    DWORD PTR [edx-0x2aa87006],cl
  4072d7:	fisubr WORD PTR [esi]
  4072d9:	push   edx
  4072da:	(bad)  
  4072db:	and    eax,DWORD PTR [ecx+0x59314626]
  4072e1:	mov    edx,0xc45840ed
  4072e6:	gs retf 
  4072e8:	mov    eax,ds:0x39e19f13
  4072ed:	mov    BYTE PTR [ecx+edi*4],al
  4072f0:	dec    ecx
  4072f1:	iret   
  4072f2:	scas   al,BYTE PTR es:[edi]
  4072f3:	push   ebp
  4072f4:	loopne 0x4072ac
  4072f6:	clc    
  4072f7:	fst    DWORD PTR [ebp-0x7e]
  4072fa:	pop    esi
  4072fb:	pop    ecx
  4072fc:	or     DWORD PTR [eax],0x1eb66188
  407302:	pop    esi
  407303:	fs out 0x87,eax
  407306:	shl    BYTE PTR [ebx+0x4decb84e],cl
  40730c:	mov    ds:0xfedce2c0,al
  407311:	jno    0x407317
  407313:	or     eax,eax
  407315:	fnsave [ebx]
  407317:	popf   
  407318:	mov    eax,0x64d2b22f
  40731d:	dec    ebp
  40731e:	popf   
  40731f:	push   0x78
  407321:	push   cs
  407322:	xchg   esi,eax
  407323:	mov    ah,0xa0
  407325:	ins    DWORD PTR es:[edi],dx
  407326:	sbb    eax,eax
  407328:	dec    esp
  407329:	add    al,0x41
  40732b:	jbe    0x407369
  40732d:	and    ch,BYTE PTR [eax+0x1cbc1909]
  407333:	ds cmp al,0x42
  407336:	jmp    0x407393
  407338:	jnp    0x407368
  40733a:	lock and eax,0x8613677c
  407340:	pop    eax
  407341:	enter  0xa983,0x31
  407345:	iret   
  407346:	xor    DWORD PTR [ebx+0x477bbf2f],edi
  40734c:	cdq    
  40734d:	(bad)  
  40734e:	shr    BYTE PTR [esi-0x6d53c211],cl
  407354:	add    eax,DWORD PTR [edx]
  407356:	pushf  
  407357:	test   eax,0xc0d27162
  40735c:	fs push eax
  40735e:	sub    DWORD PTR [ebp+0x79b4abca],ebp
  407364:	mov    al,BYTE PTR [ebx-0x72]
  407367:	sub    esi,DWORD PTR [eax]
  407369:	rol    DWORD PTR [edi+0x62],cl
  40736c:	mov    ds:0x6e970bda,al
  407371:	(bad)  
  407372:	push   esp
  407373:	dec    ebp
  407374:	and    bh,BYTE PTR [esi+0x5e]
  407377:	inc    ebp
  407378:	cli    
  407379:	sub    dh,al
  40737b:	in     eax,0xe3
  40737d:	jae    0x40731f
  40737f:	xor    al,0xe6
  407381:	lods   eax,DWORD PTR ds:[esi]
  407382:	pop    ebx
  407383:	sub    esp,edi
  407385:	dec    edi
  407386:	adc    ebp,edi
  407388:	and    BYTE PTR [edx+0x358649e7],0xd3
  40738f:	repnz inc esi
  407391:	(bad)  
  407392:	in     al,dx
  407393:	fld    DWORD PTR ds:0xbc02cc59
  407399:	sbb    al,0xca
  40739b:	mov    edx,DWORD PTR [edi]
  40739d:	or     eax,0x63d7bf80
  4073a2:	retf   
  4073a3:	mov    ecx,esi
  4073a5:	dec    ebx
  4073a6:	adc    ch,BYTE PTR [ebp+0x3a943c4a]
  4073ac:	pop    eax
  4073ad:	xchg   esp,eax
  4073ae:	xchg   DWORD PTR [esi-0x36],eax
  4073b1:	jmp    DWORD PTR [ecx]
  4073b3:	fs cli 
  4073b5:	and    esp,edi
  4073b7:	lods   eax,DWORD PTR ds:[esi]
  4073b8:	jo     0x4073fe
  4073ba:	test   BYTE PTR [ebp-0x75fea8b],cl
  4073c0:	mov    esi,0x103c23c6
  4073c5:	bound  esi,QWORD PTR [edx]
  4073c7:	inc    edi
  4073c8:	jb     0x407413
  4073ca:	in     al,0xaa
  4073cc:	mov    ebp,ecx
  4073ce:	sbb    al,0xe
  4073d0:	(bad)  
  4073d1:	push   esi
  4073d2:	adc    DWORD PTR [eax-0x75],edx
  4073d5:	sbb    cl,BYTE PTR [edi]
  4073d7:	add    DWORD PTR [ebp+0x2c53d21],ecx
  4073dd:	xchg   esp,eax
  4073de:	and    ah,cl
  4073e0:	retf   0x263a
  4073e3:	cli    
  4073e4:	adc    BYTE PTR [ebx],al
  4073e6:	stos   DWORD PTR es:[edi],eax
  4073e7:	push   ds
  4073e8:	or     eax,0xb5993603
  4073ed:	cmp    DWORD PTR [edi-0x1e],ebx
  4073f0:	daa    
  4073f1:	and    ebx,DWORD PTR [esi-0x74]
  4073f4:	fsubr  QWORD PTR [edx+0x7d4dab16]
  4073fa:	sub    al,bh
  4073fc:	scas   eax,DWORD PTR es:[edi]
  4073fd:	cmp    al,0x11
  4073ff:	mov    bh,0xb6
  407401:	fwait
  407402:	push   0xffffff8d
  407404:	jge    0x4073fe
  407406:	fcomp  QWORD PTR [ebp+0x27342358]
  40740c:	jmp    0x9b73d953
  407411:	into   
  407412:	cmp    DWORD PTR [ebp+0x3f],esi
  407415:	iret   
  407416:	ins    BYTE PTR es:[edi],dx
  407417:	inc    ecx
  407418:	out    0x64,eax
  40741a:	jmp    0xcf298f5
  40741f:	outs   dx,BYTE PTR ds:[esi]
  407420:	dec    ecx
  407421:	cmp    ah,BYTE PTR [edi+ecx*1+0x54]
  407425:	mov    eax,ds:0x299c1938
  40742a:	jmp    0xce5f790e
  40742f:	xchg   esp,eax
  407430:	cmp    al,0x68
  407432:	imul   ecx,DWORD PTR [edi],0x715e8a7c
  407438:	inc    esp
  407439:	in     eax,0xc6
  40743b:	stc    
  40743c:	imul   edi,DWORD PTR [eax],0xffffff9b
  40743f:	test   DWORD PTR [ebx-0x9a12c50],esp
  407445:	cmp    ah,0x51
  407448:	jae    0x4074a8
  40744a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744c:	inc    edi
  40744d:	lahf   
  40744e:	in     al,dx
  40744f:	sub    al,0xce
  407451:	dec    ecx
  407452:	push   0xffffffb4
  407454:	(bad)  
  407455:	leave  
  407456:	mov    dh,0x6b
  407458:	push   edi
  407459:	mov    dl,BYTE PTR [edx+0x6b]
  40745c:	mov    ebx,0xafb96f9f
  407461:	ficomp DWORD PTR [eax-0x69]
  407464:	mov    gs,WORD PTR [esi+0x65]
  407467:	sbb    eax,0xded2a221
  40746c:	mov    esp,0x7a7cc24c
  407471:	mov    al,0x19
  407473:	fdiv   DWORD PTR [esi*2+0x7bdc03d8]
  40747a:	inc    ebp
  40747b:	mov    DWORD PTR [edi-0x7c],ebx
  40747e:	leave  
  40747f:	jae    0x407451
  407481:	ins    DWORD PTR es:[edi],dx
  407482:	xchg   esi,eax
  407483:	shl    dl,cl
  407485:	clc    
  407486:	(bad)  
  407487:	fimul  DWORD PTR [ebx+0x42ba0f8e]
  40748d:	push   0x61c29daf
  407492:	bound  ebx,QWORD PTR [edx+0x1]
  407495:	outs   dx,DWORD PTR ds:[esi]
  407496:	mov    eax,ds:0xaac5c7e1
  40749b:	sahf   
  40749c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40749d:	dec    ecx
  40749e:	es shr ah,0xa8
  4074a2:	sub    eax,0xf19393e5
  4074a7:	fild   DWORD PTR [edx]
  4074a9:	cmp    ecx,DWORD PTR [edi]
  4074ab:	(bad)  
  4074ad:	sbb    edi,ebx
  4074af:	imul   edi,DWORD PTR [edi-0x16efbef1],0xfffffff4
  4074b6:	mov    ds:0x228a815d,al
  4074bb:	mov    ebp,?
  4074bd:	bound  ecx,QWORD PTR [ebx]
  4074bf:	xchg   ecx,eax
  4074c0:	push   edx
  4074c1:	(bad)  
  4074c2:	cmp    bl,bl
  4074c4:	jg     0x4074c8
  4074c6:	test   BYTE PTR [ecx+0x6a8e0aa],ch
  4074cc:	nop
  4074cd:	dec    edx
  4074ce:	fdivr  QWORD PTR [edx-0x28ca08f]
  4074d4:	jmp    0x407473
  4074d6:	xchg   ebp,eax
  4074d7:	xchg   ebp,eax
  4074d8:	lea    esi,[esi-0x6d]
  4074db:	(bad)  
  4074dd:	pop    ds
  4074de:	fwait
  4074df:	or     DWORD PTR [esp+edi*8],esi
  4074e2:	mov    bh,0x73
  4074e4:	retf   0x858d
  4074e7:	jecxz  0x407516
  4074e9:	or     esp,DWORD PTR [ebp-0x57]
  4074ec:	out    0x34,al
  4074ee:	and    eax,0x1b91aa43
  4074f3:	jmp    0x7753:0x892a781b
  4074fa:	jle    0x407480
  4074fc:	sub    BYTE PTR [ebx+0x2ca55797],dl
  407502:	or     al,0xe
  407504:	call   0x7f8f605c
  407509:	dec    edx
  40750a:	sbb    DWORD PTR [ebp+0x234ed376],0xa4e722b4
  407514:	jl     0x4074b6
  407516:	mov    DWORD PTR [eax-0x59],esi
  407519:	or     ecx,esi
  40751b:	mov    ecx,0xa5a4337c
  407520:	jmp    FWORD PTR [eax]
  407522:	or     BYTE PTR [ebp+edi*1+0xc466125],0xed
  40752a:	push   edi
  40752b:	gs xchg ebx,eax
  40752d:	popa   
  40752e:	add    edi,DWORD PTR [esi+0x71]
  407531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407532:	int3   
  407533:	pop    ebx
  407534:	aam    0x8
  407536:	pop    es
  407537:	loope  0x40759a
  407539:	es in  al,dx
  40753b:	fcom   st(0)
  40753d:	(bad)  
  40753e:	xor    al,0xc
  407540:	add    DWORD PTR [eax+0x33ce16a],0xb4cdd818
  40754a:	mov    ds:0x1e6224dc,al
  40754f:	ins    BYTE PTR es:[edi],dx
  407550:	(bad)  
  407551:	fmul   st(1),st
  407553:	mov    eax,ds:0xe95e269c
  407558:	jae    0x407538
  40755a:	cli    
  40755b:	js     0x4075bd
  40755d:	mov    ecx,0x4b739250
  407562:	xor    eax,0xcc2c7de1
  407567:	popa   
  407568:	out    0x39,eax
  40756a:	mov    ds:0x2356de5,eax
  40756f:	fadd   st(3),st
  407571:	mov    ebx,0x54a1e2bc
  407576:	adc    DWORD PTR [edi-0x6998f6f8],ecx
  40757c:	jmp    0x71fcb3e5
  407581:	mov    edx,0x2bae0d32
  407586:	shl    DWORD PTR [esi],0x67
  407589:	dec    edi
  40758a:	mov    eax,ds:0x84d19d71
  40758f:	or     eax,0xf6699754
  407594:	cmp    DWORD PTR [ebx],ebp
  407596:	add    eax,0xc037c2df
  40759b:	mov    BYTE PTR [ebx+0x1f],cl
  40759e:	xlat   BYTE PTR ds:[ebx]
  40759f:	mov    al,0x57
  4075a1:	fistp  DWORD PTR [edi+0x178b088b]
  4075a7:	sahf   
  4075a8:	or     cl,BYTE PTR [edi-0x5eef74d7]
  4075ae:	lods   eax,DWORD PTR ds:[esi]
  4075af:	mov    ?,WORD PTR [edx-0x7e]
  4075b2:	xchg   esi,eax
  4075b3:	xlat   BYTE PTR ds:[ebx]
  4075b4:	(bad)  
  4075b5:	stos   BYTE PTR es:[edi],al
  4075b6:	lahf   
  4075b7:	sbb    DWORD PTR [eax],ebp
  4075b9:	outs   dx,DWORD PTR ds:[esi]
  4075ba:	and    ah,BYTE PTR [edi]
  4075bc:	dec    ecx
  4075bd:	aam    0x43
  4075bf:	(bad)  
  4075c1:	div    BYTE PTR [ecx]
  4075c3:	ja     0x407566
  4075c5:	inc    eax
  4075c6:	popa   
  4075c7:	add    DWORD PTR [esi+edx*8+0x261a3d7c],ebx
  4075ce:	inc    esi
  4075cf:	iret   
  4075d0:	inc    eax
  4075d1:	ret    
  4075d2:	out    0x64,eax
  4075d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d5:	and    al,0xe2
  4075d7:	js     0x4075d1
  4075d9:	and    DWORD PTR [edi-0x5a],esp
  4075dc:	ds in  al,0x1d
  4075df:	je     0x40759d
  4075e1:	sub    eax,0xbb985736
  4075e6:	iret   
  4075e7:	fstp   TBYTE PTR [edi-0x4d]
  4075ea:	dec    eax
  4075eb:	xor    eax,0xf471ee87
  4075f0:	jecxz  0x407641
  4075f2:	lock sti 
  4075f4:	mov    eax,ds:0x162964fb
  4075f9:	xchg   ebx,eax
  4075fa:	ficom  DWORD PTR [ebp-0x9]
  4075fd:	fstp   QWORD PTR [ebp+0x6603596]
  407603:	int3   
  407604:	loop   0x407683
  407606:	jge    0x4075c5
  407608:	jnp    0x407596
  40760a:	add    DWORD PTR [esi-0x78387711],0x47
  407611:	test   dh,0x9d
  407614:	dec    esp
  407615:	popa   
  407616:	pop    es
  407617:	xlat   BYTE PTR ds:[ebx]
  407618:	or     al,dl
  40761a:	icebp  
  40761b:	jge    0x4075f8
  40761d:	lea    ebp,[esi+0x2cfd12ec]
  407623:	sbb    al,0xe7
  407625:	cmp    ebp,ecx
  407627:	es xchg ecx,ebp
  40762a:	or     al,0x24
  40762c:	repz cmp DWORD PTR [edx],ebx
  40762f:	test   DWORD PTR [eax],0x33386d3d
  407635:	jo     0x407697
  407637:	das    
  407638:	push   edi
  407639:	retf   
  40763a:	shr    DWORD PTR [ebx],cl
  40763c:	sub    edi,edi
  40763e:	adc    bl,BYTE PTR [ebx+0x30]
  407641:	jge    0x4075dc
  407643:	popf   
  407644:	jmp    0x9a78851
  407649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40764a:	test   al,0xfb
  40764c:	out    dx,al
  40764d:	cmp    DWORD PTR [ebx],ebp
  40764f:	mul    BYTE PTR [esi]
  407651:	mov    ds:0x6dd6edbd,eax
  407656:	call   0x5652:0x524446b5
  40765d:	ins    DWORD PTR es:[edi],dx
  40765e:	mov    ch,0x0
  407660:	dec    edi
  407661:	(bad)  
  407662:	and    edx,DWORD PTR [eax+0x6d]
  407665:	jae    0x407641
  407667:	push   eax
  407668:	les    eax,FWORD PTR [eax+0x4a]
  40766b:	cs jne 0x4076ec
  40766e:	repnz xor DWORD PTR [esp+eax*8+0x650d24cd],ebp
  407676:	mov    dl,0x29
  407678:	in     eax,0xc4
  40767a:	push   edx
  40767b:	outs   dx,DWORD PTR ds:[esi]
  40767c:	icebp  
  40767d:	in     al,dx
  40767e:	int3   
  40767f:	fsub   st,st(4)
  407681:	sub    eax,0x8aa483c9
  407686:	or     ecx,eax
  407688:	adc    BYTE PTR [esi+0x55],0x92
  40768c:	popf   
  40768d:	fdivr  QWORD PTR [edi+edi*1-0x6b53b972]
  407694:	sahf   
  407695:	lods   al,BYTE PTR ds:[esi]
  407696:	push   0x1
  407698:	ret    
  407699:	cld    
  40769a:	xor    al,0xab
  40769c:	outs   dx,BYTE PTR ds:[esi]
  40769d:	mov    cl,0x39
  40769f:	mov    al,ds:0x6dbade0d
  4076a4:	xchg   ebp,eax
  4076a5:	out    0x88,eax
  4076a7:	pop    edx
  4076a8:	aad    0x73
  4076aa:	stos   BYTE PTR es:[edi],al
  4076ab:	in     al,dx
  4076ac:	hlt    
  4076ad:	pop    es
  4076ae:	mov    ds:0x3eb33799,eax
  4076b3:	mov    al,ds:0x8e344479
  4076b8:	push   ecx
  4076b9:	into   
  4076ba:	pop    esi
  4076bb:	iret   
  4076bc:	sub    DWORD PTR [esi],edx
  4076be:	pop    ss
  4076bf:	jae    0x40764b
  4076c1:	scas   al,BYTE PTR es:[edi]
  4076c2:	inc    eax
  4076c3:	loope  0x4076db
  4076c5:	jne    0x407722
  4076c7:	xchg   ecx,eax
  4076c8:	inc    ebp
  4076c9:	aam    0x35
  4076cb:	ror    DWORD PTR [eax+0x4f46a5e7],1
  4076d1:	es ins DWORD PTR es:[edi],dx
  4076d3:	fst    QWORD PTR [esi+ebp*8-0x16dee58a]
  4076da:	dec    edi
  4076db:	mov    cl,0x2e
  4076dd:	adc    BYTE PTR [esi+esi*8-0x4c],bh
  4076e1:	ror    DWORD PTR [edi],0x88
  4076e4:	mov    edi,0x45fcb1ab
  4076e9:	(bad)  
  4076ea:	cmovg  edx,DWORD PTR [ebx]
  4076ed:	in     eax,0xb2
  4076ef:	fs mov bl,0xe1
  4076f2:	or     al,0xc
  4076f4:	ret    
  4076f5:	and    cl,BYTE PTR [ebx+eax*2]
  4076f8:	mov    esp,0xdd5da000
  4076fd:	arpl   WORD PTR [edx-0x10912430],si
  407703:	loope  0x4076d1
  407705:	iret   
  407706:	or     al,0xd0
  407708:	inc    esp
  407709:	pop    esi
  40770a:	dec    eax
  40770b:	mov    ecx,0xeae7d2d9
  407710:	rep stos BYTE PTR es:[edi],al
  407712:	jle    0x407735
  407714:	(bad)  
  407715:	out    dx,al
  407716:	adc    bl,BYTE PTR [ebx-0x5d]
  407719:	xchg   edx,eax
  40771a:	xchg   edx,eax
  40771b:	out    dx,al
  40771c:	push   esp
  40771d:	jno    0x40774a
  40771f:	inc    edi
  407720:	out    dx,eax
  407721:	xchg   BYTE PTR [edi+0x61],ch
  407724:	xor    DWORD PTR [edx],eax
  407726:	push   ebx
  407727:	in     al,dx
  407728:	add    al,0x7d
  40772a:	cdq    
  40772b:	test   BYTE PTR [ecx-0x10],bl
  40772e:	mov    cs,WORD PTR [ebp+0x53]
  407731:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407733:	call   0x25672d1e
  407738:	retf   
  407739:	add    DWORD PTR [edx-0x6c8aa5c4],ebp
  40773f:	js     0x4076db
  407741:	in     eax,dx
  407742:	sbb    al,0xbb
  407744:	jo     0x407727
  407746:	nop
  407747:	inc    edx
  407748:	sbb    al,0x3f
  40774a:	cld    
  40774b:	fidiv  WORD PTR [edx-0x76d22ea]
  407751:	lods   al,BYTE PTR ds:[esi]
  407752:	push   ebp
  407753:	xor    DWORD PTR [edx+0x5826bd77],0xffffffc8
  40775a:	stos   DWORD PTR es:[edi],eax
  40775b:	icebp  
  40775c:	dec    eax
  40775d:	aam    0x31
  40775f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407760:	lea    esi,[esp+edx*8+0x5e]
  407764:	sar    edi,1
  407766:	sbb    dh,cl
  407768:	add    BYTE PTR [edx-0x24],bh
  40776b:	les    ebx,FWORD PTR [edx]
  40776d:	test   eax,0x4f3d7d45
  407772:	mov    BYTE PTR [ebp+0x2d760a3f],cl
  407778:	imul   eax,eax,0x96083256
  40777e:	dec    BYTE PTR [eax]
  407780:	mov    esp,0xb7040cc9
  407785:	or     BYTE PTR [esi],dh
  407787:	ror    ebp,cl
  407789:	je     0x4077e0
  40778b:	aas    
  40778c:	mov    dh,0x98
  40778e:	bound  esi,QWORD PTR [esi]
  407790:	cs aas 
  407792:	mov    ecx,0x39654694
  407797:	mov    ch,BYTE PTR [ebp+0x37]
  40779a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40779b:	sub    DWORD PTR [edi+ebp*8-0x40],edx
  40779f:	fcmovnbe st,st(3)
  4077a1:	or     DWORD PTR [ebp+0x47],0x43dab0f9
  4077a8:	hlt    
  4077a9:	add    BYTE PTR [edx+0x4d],cl
  4077ac:	ficomp WORD PTR [ecx-0x55]
  4077af:	ret    0xfa0f
  4077b2:	out    dx,eax
  4077b3:	mov    cl,0x63
  4077b5:	xlat   BYTE PTR ds:[ebx]
  4077b6:	inc    eax
  4077b7:	outs   dx,BYTE PTR ds:[esi]
  4077b8:	mov    ds:0x1bc53e0e,eax
  4077bd:	fisttp DWORD PTR [esi-0x79915602]
  4077c3:	cmc    
  4077c4:	loopne 0x407750
  4077c6:	pop    ebx
  4077c7:	rcl    BYTE PTR [esi+ebp*1-0x20f73cb8],cl
  4077ce:	or     edi,DWORD PTR ds:0xd999b78a
  4077d4:	lods   eax,DWORD PTR ds:[esi]
  4077d5:	and    BYTE PTR [edi-0x34],bl
  4077d8:	popa   
  4077d9:	cli    
  4077da:	cmp    DWORD PTR [eax-0x35542bc8],ebx
  4077e0:	cmp    BYTE PTR [edx+0x59dc13a1],dh
  4077e6:	imul   DWORD PTR [eax]
  4077e8:	pop    edx
  4077e9:	xor    BYTE PTR [ecx-0xb],cl
  4077ec:	lock xchg ebx,eax
  4077ee:	mov    edx,0x549cc0fa
  4077f3:	cs sub al,0xe6
  4077f6:	dec    esi
  4077f7:	mov    BYTE PTR [esi],al
  4077f9:	push   eax
  4077fa:	gs clc 
  4077fc:	jns    0x407800
  4077fe:	es in  al,dx
  407800:	jp     0x407814
  407802:	push   ebx
  407803:	inc    esi
  407804:	dec    ecx
  407805:	push   edi
  407806:	mov    ah,0xfc
  407808:	or     ebp,ebx
  40780a:	dec    ebp
  40780b:	sti    
  40780c:	daa    
  40780d:	loopne 0x40780f
  40780f:	push   esi
  407810:	inc    bh
  407812:	stos   BYTE PTR es:[edi],al
  407813:	mov    esp,0xc55c8521
  407818:	push   edx
  407819:	push   esp
  40781a:	pop    ebp
  40781b:	retf   0x559b
  40781e:	popa   
  40781f:	adc    bl,BYTE PTR [esp+eiz*2]
  407822:	mov    al,ds:0xbb6638cb
  407827:	jecxz  0x4077ba
  407829:	dec    edx
  40782a:	mov    ah,dl
  40782c:	fld    DWORD PTR ds:0x4d9ea737
  407832:	mul    bh
  407834:	xchg   ecx,ebx
  407836:	jg     0x407879
  407838:	or     ebp,eax
  40783a:	mov    esi,0x9bd000f6
  40783f:	neg    ebp
  407841:	popa   
  407842:	ss lock loop 0x40784f
  407846:	fisttp DWORD PTR [edi-0x1b]
  407849:	cs jecxz 0x407880
  40784c:	in     eax,dx
  40784d:	popf   
  40784e:	ficomp DWORD PTR [eax+0x71565a72]
  407854:	push   ds
  407855:	or     ah,BYTE PTR [ebx]
  407857:	stos   BYTE PTR es:[edi],al
  407858:	neg    edi
  40785a:	mul    BYTE PTR [ecx]
  40785c:	adc    eax,0x75f08403
  407861:	call   0xb3ba:0xa8622b55
  407868:	add    al,0x89
  40786a:	scas   eax,DWORD PTR es:[edi]
  40786b:	push   esi
  40786c:	inc    eax
  40786d:	jge    0x4078c7
  40786f:	imul   edx,esi,0xffffff94
  407872:	in     eax,dx
  407873:	hlt    
  407874:	cld    
  407875:	ret    
  407876:	jno    0x4078a6
  407878:	cwde   
  407879:	(bad)  
  40787a:	retf   0x2cc4
  40787d:	test   DWORD PTR ds:0x9c5ba7a3,ebp
  407883:	mov    esp,DWORD PTR gs:[edi-0x49f64a4b]
  40788a:	or     al,0xce
  40788c:	test   BYTE PTR [ecx-0x6c3d174e],0x8a
  407893:	popa   
  407894:	pop    edi
  407895:	jne    0x40788f
  407897:	xchg   ebx,eax
  407898:	cwde   
  407899:	adc    BYTE PTR [edi-0x669eecb9],bl
  40789f:	push   esi
  4078a0:	mov    esp,0x88d17c66
  4078a5:	(bad)  
  4078a6:	mul    DWORD PTR [ebx]
  4078a8:	daa    
  4078a9:	cdq    
  4078aa:	retf   0xcb00
  4078ad:	push   esi
  4078ae:	inc    edx
  4078af:	jg     0x4078c8
  4078b1:	aam    0xa0
  4078b3:	push   esp
  4078b4:	rol    DWORD PTR [ebp+0x62],0xaa
  4078b8:	(bad)  
  4078b9:	jg     0x407842
  4078bb:	push   ss
  4078bc:	adc    BYTE PTR [edi+0x78],bl
  4078bf:	add    edi,DWORD PTR [ebp+0x40630158]
  4078c5:	or     ah,0x7f
  4078c8:	(bad)  
  4078c9:	scas   eax,DWORD PTR es:[edi]
  4078ca:	inc    edi
  4078cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078cc:	xchg   edi,eax
  4078cd:	pushf  
  4078ce:	popf   
  4078cf:	fwait
  4078d0:	mov    ah,0x61
  4078d2:	pop    ds
  4078d3:	jmp    0x44f5ded9
  4078d8:	int3   
  4078d9:	in     al,0x5d
  4078db:	fsub   QWORD PTR ds:[edx-0x5c]
  4078df:	sbb    cl,ah
  4078e1:	add    BYTE PTR [ebx],al
  4078e3:	push   edx
  4078e4:	das    
  4078e5:	jnp    0x407946
  4078e7:	shr    BYTE PTR [eax-0x68],cl
  4078ea:	push   ss
  4078eb:	or     DWORD PTR [esp+eiz*4-0x41],edi
  4078ef:	in     eax,0xaf
  4078f1:	mov    BYTE PTR [esi],ch
  4078f3:	adc    eax,0xb9337189
  4078f8:	and    edx,ebp
  4078fa:	add    DWORD PTR [edx+0x35],0x3b
  4078fe:	add    al,0x54
  407900:	mov    edi,0x726925d7
  407905:	shl    dh,1
  407907:	sub    eax,0x30bf6c8a
  40790c:	jno    0x407953
  40790e:	out    0xd1,al
  407910:	mov    bh,0x25
  407912:	sub    DWORD PTR [ebx+ebp*8],eax
  407915:	rol    WORD PTR [ebx],cl
  407918:	mov    ebp,0xf07393ca
  40791d:	test   BYTE PTR [ebp+0x3df23064],ah
  407923:	pop    esi
  407924:	pop    edx
  407925:	lods   al,BYTE PTR ds:[esi]
  407926:	mov    WORD PTR [edi+0x5],ds
  407929:	pushfw 
  40792b:	sub    al,0x84
  40792d:	jecxz  0x407957
  40792f:	sub    al,0x26
  407931:	add    dh,ch
  407933:	inc    eax
  407934:	arpl   WORD PTR [edx+0x4c],dx
  407937:	mov    ecx,0xb617c5aa
  40793c:	je     0x407912
  40793e:	mov    eax,0xf10111ce
  407943:	jb     0x4078e9
  407945:	push   esi
  407946:	sub    al,BYTE PTR [edi-0x27ca2edb]
  40794c:	mov    al,ds:0x6e236b3d
  407951:	mov    dl,0xa6
  407953:	cmp    eax,DWORD PTR [bx]
  407956:	xchg   BYTE PTR [esi],bh
  407958:	mov    edx,0xfc9c977f
  40795d:	jle    0x4079ca
  40795f:	sub    al,0x6c
  407961:	add    DWORD PTR ds:0x113a2068,ecx
  407967:	push   eax
  407968:	shr    esi,cl
  40796a:	inc    edi
  40796b:	add    edx,eax
  40796d:	adc    eax,0xe7ecf9f8
  407972:	pop    ecx
  407973:	out    0xfc,eax
  407975:	and    eax,0xe43ea172
  40797a:	adc    BYTE PTR [ebp+0x6f9b3437],cl
  407980:	push   ss
  407981:	sub    BYTE PTR [ecx+0x450019eb],ah
  407987:	aam    0xcd
  407989:	(bad)  
  40798a:	stos   DWORD PTR es:[edi],eax
  40798b:	call   0xff46:0xadb17652
  407992:	jo     0x407973
  407994:	sub    eax,esp
  407996:	pop    ds
  407997:	test   eax,0x4b36c9cb
  40799c:	mov    ecx,0x1335cbb8
  4079a1:	(bad)  
  4079a2:	imul   esi,DWORD PTR [edi-0x6c],0x20650ebd
  4079a9:	jnp    0x4079a7
  4079ab:	jle    0x407a2c
  4079ad:	push   eax
  4079ae:	sti    
  4079af:	fidivr WORD PTR [edi-0x26]
  4079b2:	or     DWORD PTR [ecx+esi*4],0x11
  4079b6:	nop
  4079b7:	mov    dl,0x87
  4079b9:	cld    
  4079ba:	dec    ebx
  4079bb:	mov    eax,0x34618242
  4079c0:	cmp    DWORD PTR [ecx+0xad07617],0x4b389a34
  4079ca:	es mov dh,0x36
  4079cd:	fnstcw WORD PTR [ecx-0x6ab70027]
  4079d3:	scas   al,BYTE PTR es:[edi]
  4079d4:	mov    ds:0x2245d6cc,al
  4079d9:	inc    edx
  4079da:	mov    eax,ds:0x11129464
  4079df:	movhps xmm6,QWORD PTR [esi]
  4079e2:	xchg   edx,eax
  4079e3:	clc    
  4079e4:	test   eax,0xf6bc3aaa
  4079e9:	(bad)  
  4079ea:	cs adc al,dl
  4079ed:	dec    ecx
  4079ee:	adc    eax,0xfbda09fe
  4079f3:	dec    ebp
  4079f4:	int3   
  4079f5:	mov    esp,0xf3f03688
  4079fa:	jp     0x40797f
  4079fc:	arpl   WORD PTR [edi+0x7d],bp
  4079ff:	int3   
  407a00:	sub    al,cl
  407a02:	push   ebp
  407a03:	jecxz  0x407a6a
  407a05:	jecxz  0x407a3c
  407a07:	mov    bh,BYTE PTR [esi+0x2b6449b0]
  407a0d:	test   BYTE PTR [ebp+ecx*4-0x36],ch
  407a11:	push   edi
  407a12:	mov    DWORD PTR [ebx-0x65bee24],ecx
  407a18:	mov    WORD PTR [esi-0xee77aff],?
  407a1e:	xchg   DWORD PTR [esi-0x5a],eax
  407a21:	mov    bl,0x14
  407a23:	pop    esi
  407a24:	pop    es
  407a25:	fimul  WORD PTR [eax]
  407a27:	sub    al,0x31
  407a29:	mov    edx,0xcde07f9b
  407a2e:	(bad)  
  407a2f:	cmc    
  407a30:	inc    eax
  407a31:	rcl    dh,1
  407a33:	cmp    BYTE PTR [ebx+0x2f882c8e],al
  407a39:	lds    eax,FWORD PTR [ecx]
  407a3b:	shr    DWORD PTR [ebp+0x5d],1
  407a3e:	clc    
  407a3f:	mov    eax,ds:0xef39152e
  407a44:	xchg   ebx,eax
  407a45:	popf   
  407a46:	call   0xb7718ea6
  407a4b:	loope  0x407a10
  407a4d:	ins    BYTE PTR es:[edi],dx
  407a4e:	xlat   BYTE PTR ds:[ebx]
  407a4f:	mov    cl,0xe9
  407a51:	clc    
  407a52:	push   edi
  407a53:	cmc    
  407a54:	push   ecx
  407a55:	(bad)  
  407a56:	push   ebp
  407a57:	inc    ebp
  407a58:	nop
  407a59:	adc    ebp,DWORD PTR [ecx+0x5b]
  407a5c:	cmc    
  407a5d:	pop    edx
  407a5e:	fild   DWORD PTR [ebx+0x16a906eb]
  407a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a65:	xchg   esi,eax
  407a66:	jp     0x407a72
  407a68:	sbb    ch,BYTE PTR ds:0xa212ceb8
  407a6e:	adc    al,0x42
  407a70:	cmc    
  407a71:	xor    ah,BYTE PTR [edi-0x1e]
  407a74:	inc    ebx
  407a75:	mov    bh,ch
  407a77:	stos   DWORD PTR es:[edi],eax
  407a78:	mov    al,ds:0x9f032835
  407a7d:	xor    eax,0x4e36238e
  407a82:	aad    0x95
  407a84:	fbld   TBYTE PTR [ecx+eax*8]
  407a87:	cdq    
  407a88:	adc    eax,DWORD PTR [esi-0x6df322ed]
  407a8e:	or     DWORD PTR [eax+0x1ffcc3f3],edx
  407a94:	in     eax,0x58
  407a96:	cmp    al,0x94
  407a98:	sub    edx,esp
  407a9a:	push   0x334d1cfa
  407a9f:	xor    eax,0x1d59ad6c
  407aa4:	mov    ecx,0xb10899c7
  407aa9:	mov    ebp,0xd595f65d
  407aae:	retf   
  407aaf:	dec    edi
  407ab0:	sub    dh,BYTE PTR ds:0xb716c044
  407ab6:	and    DWORD PTR [edi-0x1faf29d2],esi
  407abc:	fsub   QWORD PTR [edx+0x4b]
  407abf:	(bad)  
  407ac0:	outs   dx,BYTE PTR ds:[esi]
  407ac1:	mov    eax,ds:0x46d11bc8
  407ac6:	dec    edi
  407ac7:	mov    ah,0x97
  407ac9:	jge    0x407ab6
  407acb:	icebp  
  407acc:	mov    ebx,ds
  407ace:	int3   
  407acf:	fnstcw WORD PTR ds:0xfc121565
  407ad5:	add    ebp,DWORD PTR [ebp-0x36d34519]
  407adb:	jo     0x407b37
  407add:	dec    esi
  407ade:	inc    esp
  407adf:	cmp    WORD PTR [edi-0xd305f70],dx
  407ae6:	push   ss
  407ae7:	jl     0x407b0c
  407ae9:	pop    ss
  407aea:	imul   ebp,DWORD PTR [ecx+0x33],0xe41ad8b9
  407af1:	add    BYTE PTR es:[esi+0x421dffb0],bh
  407af8:	test   DWORD PTR [ecx+0x51],ecx
  407afb:	out    0x35,al
  407afd:	mov    esp,0x84351b73
  407b02:	or     DWORD PTR [edx],eax
  407b04:	and    ebx,DWORD PTR [eax-0x2d]
  407b07:	pop    esi
  407b08:	retf   
  407b09:	and    eax,0xffffffa8
  407b0c:	mov    DWORD PTR [esi],0xc6f9e6e8
  407b12:	jae    0x407a97
  407b14:	fidiv  DWORD PTR [ebx]
  407b16:	pusha  
  407b17:	jmp    0x78d38b59
  407b1c:	push   0xc742bfd9
  407b21:	inc    esp
  407b22:	scas   eax,DWORD PTR es:[edi]
  407b23:	test   al,0xb3
  407b25:	fstp   QWORD PTR [eax-0x38]
  407b28:	or     edx,DWORD PTR [ecx]
  407b2a:	and    eax,0x8c3ff16f
  407b2f:	(bad)  
  407b30:	hlt    
  407b31:	and    ecx,DWORD PTR [edi-0x288aeca2]
  407b37:	jl     0x407ac9
  407b39:	movntq QWORD PTR [ecx-0x2f06de41],mm6
  407b40:	cmp    edi,0xf19706c
  407b46:	mov    eax,ds:0xdc0a2013
  407b4b:	scas   al,BYTE PTR es:[edi]
  407b4c:	outs   dx,BYTE PTR ds:[esi]
  407b4d:	xchg   edx,eax
  407b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b4f:	sahf   
  407b50:	(bad)  
  407b51:	sub    DWORD PTR [ebx-0x7f],ecx
  407b54:	push   ecx
  407b55:	out    dx,eax
  407b56:	cmc    
  407b57:	scas   al,BYTE PTR es:[edi]
  407b58:	sahf   
  407b59:	xchg   esi,eax
  407b5a:	jbe    0x407b7a
  407b5c:	sbb    al,0x7b
  407b5e:	sar    BYTE PTR [edx],cl
  407b60:	adc    bh,BYTE PTR [ecx+0x72c4b315]
  407b66:	shl    BYTE PTR [ecx],0xcc
  407b69:	dec    eax
  407b6a:	xor    BYTE PTR [edx],al
  407b6c:	sub    ecx,DWORD PTR [edx]
  407b6e:	imul   eax,DWORD PTR [ebx+0x5],0x52
  407b72:	gs mov ebp,0x4dc41794
  407b78:	pop    ebp
  407b79:	popf   
  407b7a:	push   esp
  407b7b:	xor    DWORD PTR [eax],ebx
  407b7d:	repz mov eax,0x9dafb200
  407b83:	jne    0x407b57
  407b85:	sti    
  407b86:	push   ebx
  407b87:	push   cs
  407b88:	fstp   st(4)
  407b8a:	mov    ebx,0x4dcb055b
  407b8f:	stos   DWORD PTR es:[edi],eax
  407b90:	out    dx,al
  407b91:	sbb    bh,BYTE PTR [ebp-0x7af35268]
  407b97:	mov    DWORD PTR [esi+0x45],eax
  407b9a:	sti    
  407b9b:	ret    0x556e
  407b9e:	clc    
  407b9f:	jnp    0x407bae
  407ba1:	dec    ecx
  407ba2:	dec    ecx
  407ba3:	or     al,0xe
  407ba5:	pop    ebx
  407ba6:	xor    bh,ch
  407ba8:	in     eax,0x79
  407baa:	in     eax,0x98
  407bac:	push   ds
  407bad:	adc    BYTE PTR [esi+0x5f699f98],bl
  407bb3:	push   ecx
  407bb4:	and    BYTE PTR fs:[eax+0x431f3847],ch
  407bbb:	cmp    al,0xe7
  407bbd:	fnstsw WORD PTR [ecx+0x4f]
  407bc0:	adc    ch,BYTE PTR [ebx+0x7e]
  407bc3:	xchg   ebx,eax
  407bc4:	(bad)  
  407bc5:	jge    0x407c40
  407bc7:	jl     0x407c02
  407bc9:	adc    DWORD PTR [edi-0x2b89bee],ebx
  407bcf:	cmp    BYTE PTR [edi],bh
  407bd1:	in     al,dx
  407bd2:	loope  0x407c1a
  407bd4:	mov    eax,0x582d5320
  407bd9:	scas   eax,DWORD PTR es:[edi]
  407bda:	or     bh,bh
  407bdc:	(bad)  
  407bdd:	shl    DWORD PTR [eax+0x3ccddb74],cl
  407be3:	mov    ds:0x7e30bdbb,eax
  407be8:	pop    ebx
  407be9:	adc    BYTE PTR [edx+ecx*8+0x36ab0a41],bl
  407bf0:	pop    edi
  407bf1:	icebp  
  407bf2:	pop    edx
  407bf3:	sub    eax,edi
  407bf5:	icebp  
  407bf6:	xor    al,0x8a
  407bf8:	xor    ah,BYTE PTR [eax+0x3a]
  407bfb:	dec    ebp
  407bfc:	lods   eax,DWORD PTR ds:[esi]
  407bfd:	popa   
  407bfe:	loopne 0x407b92
  407c00:	xlat   BYTE PTR ds:[ebx]
  407c01:	mov    al,0x22
  407c03:	scas   ax,WORD PTR es:[edi]
  407c05:	or     al,0xf6
  407c07:	sbb    eax,0xb4500c35
  407c0c:	mov    edx,0xcaf9ff13
  407c11:	in     eax,0x72
  407c13:	dec    edx
  407c14:	dec    ebx
  407c15:	pop    edi
  407c16:	jbe    0x407c28
  407c18:	(bad)  
  407c19:	cmc    
  407c1a:	es mov bh,0x97
  407c1d:	inc    ecx
  407c1e:	ja     0x407c99
  407c20:	jmp    0xec05dc96
  407c25:	jb     0x407bbe
  407c27:	push   ebp
  407c28:	push   esi
  407c29:	mov    DWORD PTR [edi-0x480d8659],esi
  407c2f:	jns    0x407be2
  407c31:	xor    al,0xc7
  407c33:	pop    ebx
  407c34:	sub    ebx,DWORD PTR [eax+0xa7e4e18]
  407c3a:	pop    esp
  407c3b:	pop    ss
  407c3c:	mov    BYTE PTR [ebx-0x6f50732d],dh
  407c42:	and    esi,ebp
  407c44:	fstp   QWORD PTR [ebx+0x30b6c747]
  407c4a:	sub    al,0x64
  407c4c:	xchg   cl,al
  407c4e:	mov    ds:0x9ca3797,al
  407c53:	sub    dh,bh
  407c55:	icebp  
  407c56:	adc    edx,DWORD PTR [ecx+0x76328c34]
  407c5c:	sub    cl,BYTE PTR [eax]
  407c5e:	out    0xd5,al
  407c60:	ins    BYTE PTR es:[edi],dx
  407c61:	adc    eax,0xdea39aa9
  407c66:	lods   eax,DWORD PTR ds:[esi]
  407c67:	sub    al,0x66
  407c69:	push   ebp
  407c6a:	lds    eax,FWORD PTR [ebx]
  407c6c:	rol    DWORD PTR [edi],0x63
  407c6f:	out    0x69,al
  407c71:	(bad)  
  407c73:	leave  
  407c74:	cmp    bl,dh
  407c76:	pop    ebx
  407c77:	bound  esi,QWORD PTR [ebx-0x33237766]
  407c7d:	xor    al,0x6e
  407c7f:	into   
  407c80:	cld    
  407c81:	adc    dl,BYTE PTR [ebp+0x7e]
  407c84:	enter  0xe4a1,0xef
  407c88:	and    dh,BYTE PTR ds:0xd76f3cc8
  407c8e:	hlt    
  407c8f:	enter  0xa3a6,0x1b
  407c93:	es push esi
  407c95:	cmp    eax,0x7a3e0312
  407c9a:	cmp    BYTE PTR [ecx+0x597d06ba],0xcd
  407ca1:	xor    esp,DWORD PTR [esi]
  407ca3:	fwait
  407ca4:	hlt    
  407ca5:	les    ebp,FWORD PTR [ecx]
  407ca7:	mov    ebp,DWORD PTR [edi]
  407ca9:	outs   dx,BYTE PTR ds:[esi]
  407caa:	xor    BYTE PTR [esi-0x3e781ce],0x50
  407cb1:	dec    edx
  407cb2:	hlt    
  407cb3:	bound  ecx,QWORD PTR [edi-0x790f3c2a]
  407cb9:	push   ebp
  407cba:	into   
  407cbb:	call   0x8af1:0x2b216357
  407cc2:	or     eax,0x65530742
  407cc7:	retf   0xf922
  407cca:	adc    eax,0xd46bf3a8
  407ccf:	(bad)  
  407cd1:	nop
  407cd2:	mov    eax,0xc3ae3019
  407cd7:	outs   dx,DWORD PTR ds:[esi]
  407cd8:	popa   
  407cd9:	ret    
  407cda:	mov    eax,0xc6b31f6b
  407cdf:	loope  0x407cd4
  407ce1:	and    bh,ah
  407ce3:	xchg   edx,eax
  407ce4:	sub    DWORD PTR [ecx+0x2d],eax
  407ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce8:	add    edi,DWORD PTR [ebp+0x12]
  407ceb:	aas    
  407cec:	xchg   ecx,eax
  407ced:	jp     0x407c88
  407cef:	int    0x13
  407cf1:	and    DWORD PTR [ecx+eiz*4],0x7
  407cf5:	push   eax
  407cf6:	push   edi
  407cf7:	cli    
  407cf8:	imul   edx,DWORD PTR [edx-0x4f],0xffffffea
  407cfc:	stos   BYTE PTR es:[edi],al
  407cfd:	adc    bl,ch
  407cff:	fs mov ah,0xe6
  407d02:	sub    DWORD PTR [esp+ebp*2],esi
  407d05:	clc    
  407d06:	push   0xfbd6b071
  407d0b:	xor    eax,0x6d0cfd68
  407d10:	inc    ebp
  407d11:	jmp    0x5dd876f6
  407d16:	dec    ecx
  407d17:	xor    eax,0x1167062
  407d1c:	sub    al,0x4c
  407d1e:	and    DWORD PTR [ebx+0x35],0xffffffbd
  407d22:	inc    esi
  407d23:	cmp    eax,0xcc8f0fb9
  407d28:	out    0x13,al
  407d2a:	in     al,dx
  407d2b:	mov    BYTE PTR ds:0x3bdec2cb,ah
  407d31:	mov    esp,0xeaf69494
  407d36:	xchg   DWORD PTR [edi],edx
  407d38:	call   0x59794463
  407d3d:	dec    ecx
  407d3e:	inc    DWORD PTR [ecx+0x62d7b38d]
  407d44:	or     ch,dh
  407d46:	dec    esp
  407d47:	inc    ebx
  407d48:	add    al,BYTE PTR [eax+0x4a]
  407d4b:	xor    eax,0x61f40866
  407d50:	pop    ecx
  407d51:	jmp    0x407d8e
  407d53:	repnz pop ecx
  407d55:	lods   al,BYTE PTR ds:[esi]
  407d56:	sub    ch,BYTE PTR [edi+0x4f5e61aa]
  407d5c:	jnp    0x407d65
  407d5e:	(bad)  
  407d5f:	sbb    bl,BYTE PTR [ebp-0x25]
  407d62:	repnz loopne 0x407d4b
  407d65:	push   eax
  407d66:	ins    BYTE PTR es:[edi],dx
  407d67:	ret    0xd83a
  407d6a:	sbb    BYTE PTR [ebp-0x39735442],ah
  407d70:	outs   dx,BYTE PTR ds:[esi]
  407d71:	fiadd  WORD PTR [esi]
  407d73:	or     BYTE PTR [ebx-0x43],ch
  407d76:	push   ebx
  407d77:	gs in  al,dx
  407d79:	or     DWORD PTR [edx-0x5409344d],eax
  407d7f:	cs mov bh,bh
  407d82:	std    
  407d83:	xchg   esp,eax
  407d84:	push   es
  407d85:	mov    al,ds:0x48045ac8
  407d8a:	push   cs
  407d8b:	iret   
  407d8c:	inc    edx
  407d8d:	sbb    edi,DWORD PTR [eax+0x5a6abef5]
  407d93:	lds    ebp,FWORD PTR [eax-0x5114c003]
  407d99:	clc    
  407d9a:	mov    ds:0xfd6d6c8c,al
  407d9f:	sub    eax,0xfe641b90
  407da4:	sub    BYTE PTR [ebp+0x55],0xa6
  407da8:	xor    DWORD PTR [edx-0x143b77],ecx
  407dae:	mov    WORD PTR [ecx+ebp*1],?
  407db1:	jnp    0x407d4f
  407db3:	fldcw  WORD PTR [ecx+edx*8+0x19]
  407db7:	cmp    edi,DWORD PTR [edx+0x36]
  407dba:	xor    al,0x5e
  407dbc:	mov    al,ds:0x23f8c211
  407dc1:	or     bh,al
  407dc3:	inc    bl
  407dc5:	test   BYTE PTR [ebx-0x2af81c80],0xa8
  407dcc:	mov    ebp,ds
  407dce:	mov    fs,WORD PTR [edx]
  407dd0:	es push 0x7e
  407dd3:	or     bh,al
  407dd5:	push   ebp
  407dd6:	jne    0x407e00
  407dd8:	js     0x407dfe
  407dda:	adc    BYTE PTR ds:0xcdcf7741,ah
  407de0:	das    
  407de1:	ins    BYTE PTR es:[edi],dx
  407de2:	mov    dh,0xbe
  407de4:	and    BYTE PTR [ebx],dl
  407de6:	iret   
  407de7:	add    BYTE PTR [edx-0x29],ah
  407dea:	cmp    BYTE PTR [ecx],dl
  407dec:	test   al,0x78
  407dee:	and    DWORD PTR [edi-0x13],edx
  407df1:	add    BYTE PTR [edi],al
  407df3:	sub    eax,0xbd61a3c4
  407df8:	mov    BYTE PTR [edx-0x3641c3cd],ch
  407dfe:	std    
  407dff:	mov    edi,ebp
  407e01:	xchg   ecx,eax
  407e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e03:	cmp    eax,0xcfeef7c9
  407e08:	pop    esp
  407e09:	mov    al,ds:0xf9aa87e8
  407e0e:	fsubrp st(2),st
  407e10:	xor    ah,ch
  407e12:	lods   eax,DWORD PTR ds:[esi]
  407e13:	xor    esi,DWORD PTR [eax-0x1863a425]
  407e19:	and    BYTE PTR ds:0x14a1f8d2,dl
  407e1f:	jae    0x407e3b
  407e21:	loope  0x407e40
  407e23:	shl    DWORD PTR [edi],0xa9
  407e26:	add    eax,DWORD PTR [esi-0x51ecc017]
  407e2c:	cs dec esp
  407e2e:	dec    ecx
  407e2f:	pop    edx
  407e30:	lds    edx,FWORD PTR [ecx+ecx*4]
  407e33:	mov    eax,0x6ce864c9
  407e38:	cmp    DWORD PTR [edx],0xffffffb3
  407e3b:	out    dx,al
  407e3c:	mov    esp,0x6ee469c0
  407e41:	or     ch,BYTE PTR [ebp-0xf]
  407e44:	pop    es
  407e45:	and    dl,BYTE PTR [ecx+0x56]
  407e48:	fwait
  407e49:	pusha  
  407e4a:	lahf   
  407e4b:	pop    ss
  407e4c:	mov    eax,0x6f26c544
  407e51:	mov    dl,0x23
  407e53:	push   edi
  407e54:	into   
  407e55:	add    dl,BYTE PTR [ebp-0x3b]
  407e58:	repz push esi
  407e5a:	cli    
  407e5b:	lods   al,BYTE PTR ds:[esi]
  407e5c:	jne    0x407e1c
  407e5e:	outs   dx,DWORD PTR ds:[esi]
  407e5f:	(bad)  
  407e60:	jne    0x407e20
  407e62:	dec    ecx
  407e63:	push   0xfc57c2cc
  407e68:	ins    BYTE PTR es:[edi],dx
  407e69:	test   eax,0x35f939aa
  407e6e:	inc    ebp
  407e6f:	fiadd  WORD PTR [eax]
  407e71:	pop    edi
  407e72:	test   al,0xfc
  407e74:	sar    BYTE PTR [esi+0x58],0x7e
  407e78:	rol    bh,0x87
  407e7b:	xchg   DWORD PTR [edi],eax
  407e7d:	icebp  
  407e7e:	push   edx
  407e7f:	xor    BYTE PTR [edx-0x78],bl
  407e82:	enter  0x429b,0xe
  407e86:	rcr    eax,0xd4
  407e89:	push   eax
  407e8a:	js     0x407e15
  407e8c:	cli    
  407e8d:	iret   
  407e8e:	gs adc eax,0x2ed86e23
  407e94:	adc    BYTE PTR [ebx+0xe62dfbc],cl
  407e9a:	call   0xe5a818c0
  407e9f:	int    0x34
  407ea1:	enter  0xe599,0x12
  407ea5:	dec    edx
  407ea6:	enter  0xd81,0x13
  407eaa:	mov    esp,0x46074b5d
  407eaf:	clc    
  407eb0:	cmp    ebp,edi
  407eb2:	inc    eax
  407eb3:	pusha  
  407eb4:	fucom  st(2)
  407eb6:	sub    edi,edx
  407eb8:	xchg   ecx,eax
  407eb9:	inc    edi
  407eba:	scas   al,BYTE PTR es:[edi]
  407ebb:	dec    esp
  407ebc:	scas   al,BYTE PTR es:[edi]
  407ebd:	int    0x9c
  407ebf:	jnp    0x407ef4
  407ec1:	xor    esp,DWORD PTR [ebx-0x5b]
  407ec4:	xchg   ebp,eax
  407ec5:	ss push ecx
  407ec7:	stc    
  407ec8:	jmp    0x1f52d57b
  407ecd:	fwait
  407ece:	hlt    
  407ecf:	outs   dx,DWORD PTR ds:[esi]
  407ed0:	sbb    ah,BYTE PTR [edi]
  407ed2:	pop    ss
  407ed3:	rcr    DWORD PTR [edx+eax*8+0x62d10a3e],cl
  407eda:	sbb    al,0xa0
  407edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407edd:	sub    BYTE PTR [edi-0x2d5250d3],ch
  407ee3:	div    BYTE PTR [ebx-0x31866aa6]
  407ee9:	pop    ecx
  407eea:	out    0x85,eax
  407eec:	or     eax,0x9fecb1bd
  407ef1:	out    dx,eax
  407ef2:	gs and bl,dl
  407ef5:	and    eax,0x2f13d414
  407efa:	jle    0x407ed9
  407efc:	jb     0x407edf
  407efe:	pop    esp
  407eff:	mov    BYTE PTR ds:0xfcc1f6e3,ch
  407f05:	mov    eax,0xed94e37e
  407f0a:	or     ecx,0xffffffd1
  407f0d:	sub    edi,0xc934b46a
  407f13:	sub    ch,BYTE PTR [esp+ebx*1-0x1c45545d]
  407f1a:	in     al,0x28
  407f1c:	adc    DWORD PTR [edx-0x5249b425],ecx
  407f22:	pop    ecx
  407f23:	pop    es
  407f24:	pop    esi
  407f25:	clc    
  407f26:	jmp    0x1acc:0x9531725a
  407f2d:	daa    
  407f2e:	inc    esi
  407f2f:	fld    DWORD PTR [esp+esi*8]
  407f32:	dec    ebp
  407f33:	mov    al,0x61
  407f35:	inc    ebp
  407f36:	dec    ebp
  407f37:	in     al,dx
  407f38:	stos   BYTE PTR es:[edi],al
  407f39:	dec    DWORD PTR [edx]
  407f3b:	xchg   ebx,eax
  407f3c:	(bad)  
  407f3d:	mov    eax,edi
  407f3f:	rcr    dh,1
  407f41:	outs   dx,BYTE PTR ds:[esi]
  407f42:	mov    dl,0x72
  407f44:	rol    BYTE PTR [edx+eiz*1-0x5f113e11],0xb0
  407f4c:	sbb    dh,bh
  407f4e:	dec    ebp
  407f4f:	jmp    0x7bdb275
  407f54:	test   al,0x50
  407f56:	imul   ecx,DWORD PTR [ecx+eax*4],0x1568e332
  407f5d:	jne    0x407fc0
  407f5f:	xor    ah,0xb2
  407f62:	push   ebp
  407f63:	cmp    BYTE PTR [eax],bl
  407f65:	adc    ah,ch
  407f67:	in     al,dx
  407f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f69:	mov    WORD PTR [edi+edx*8+0x2f98d7c],es
  407f70:	stc    
  407f71:	sub    al,BYTE PTR [ebx+eiz*8-0x31]
  407f75:	imul   edx,DWORD PTR [esi+eiz*4-0x69],0xc979b30e
  407f7d:	jl     0x407f4e
  407f7f:	shr    DWORD PTR [ebp+0x3ed45fe9],1
  407f85:	gs cmc 
  407f87:	adc    eax,esp
  407f89:	(bad)  
  407f8a:	or     dh,bh
  407f8c:	and    edx,DWORD PTR [eax+esi*1]
  407f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f90:	xor    al,BYTE PTR [esi*4-0x357a0f7a]
  407f97:	xor    ebp,eax
  407f99:	sub    BYTE PTR es:0xe1218d8d,al
  407fa0:	jns    0x407f77
  407fa2:	xchg   esp,eax
  407fa3:	mov    esi,0x99a93c1c
  407fa8:	push   es
  407fa9:	and    ch,BYTE PTR [esi-0x62d0bad0]
  407faf:	mov    al,cl
  407fb1:	xor    al,0x39
  407fb3:	shr    BYTE PTR [ecx+0x4],1
  407fb6:	mov    eax,ds:0xd3fd3951
  407fbb:	inc    eax
  407fbc:	mov    bh,0x6d
  407fbe:	xor    BYTE PTR ss:[ecx],bh
  407fc1:	outs   dx,DWORD PTR ds:[esi]
  407fc2:	fist   WORD PTR [edx+0x24]
  407fc5:	outs   dx,BYTE PTR ds:[esi]
  407fc6:	jno    0x407fab
  407fc8:	push   0xffffff80
  407fca:	das    
  407fcb:	shl    DWORD PTR [esp+ebx*8+0x71],cl
  407fcf:	out    dx,al
  407fd0:	rcr    edi,1
  407fd2:	popa   
  407fd3:	fisttp QWORD PTR [ecx-0x70]
  407fd6:	sub    dl,BYTE PTR [eax-0x5f1c8de5]
  407fdc:	dec    esi
  407fdd:	cmp    BYTE PTR [edi+0x70f12e90],dl
  407fe3:	inc    edx
  407fe4:	push   ebp
  407fe5:	(bad)  
  407fe6:	mov    edi,0x3e106971
  407feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fec:	mov    edx,0x2e059ec1
  407ff1:	in     al,dx
  407ff2:	xchg   edx,eax
  407ff3:	stc    
  407ff4:	in     al,0x20
  407ff6:	xor    eax,0x466dc236
  407ffb:	pop    esi
  407ffc:	call   0xafd7:0x57862386
  408003:	das    
  408004:	popa   
  408005:	mov    ecx,0x4220aebc
  40800a:	push   esi
  40800b:	jge    0x408083
  40800d:	xchg   DWORD PTR [eax+eiz*2-0x68aa879],ecx
  408014:	xor    bh,ch
  408016:	mov    edx,0x6230f728
  40801b:	popa   
  40801c:	(bad)  
  40801d:	ins    BYTE PTR es:[edi],dx
  40801e:	adc    al,0xe0
  408020:	lds    eax,FWORD PTR [ecx]
  408022:	adc    ecx,DWORD PTR [ebp-0x78]
  408025:	loop   0x408067
  408027:	ins    DWORD PTR es:[edi],dx
  408028:	mov    al,ds:0xca6a0e83
  40802d:	call   0x5aef8055
  408032:	cs mov al,0x75
  408035:	jle    0x408006
  408037:	data16 fidivr DWORD PTR [esp+ebx*2]
  40803b:	mov    edx,esp
  40803d:	pop    ebp
  40803e:	cmc    
  40803f:	mov    ds:0xdc292bea,al
  408044:	xchg   ebx,eax
  408045:	fisubr DWORD PTR [ebx+ecx*8+0x6acdc898]
  40804c:	xchg   esi,eax
  40804d:	adc    DWORD PTR [ecx+0x5dddbe27],ecx
  408053:	jg     0x407ff2
  408055:	out    0xa5,al
  408057:	adc    dh,ch
  408059:	cmp    eax,0x3c8ffc64
  40805e:	pop    esi
  40805f:	inc    ebx
  408060:	pop    ds
  408061:	sub    ah,BYTE PTR [eax+0x64cd61a9]
  408067:	sub    eax,0x6d5bebee
  40806c:	inc    esp
  40806d:	xchg   BYTE PTR [esi+0x6c8b84d0],dh
  408073:	jecxz  0x408093
  408075:	xchg   DWORD PTR [edx+0x7c],esp
  408078:	jle    0x40806c
  40807a:	dec    edi
  40807b:	adc    esp,DWORD PTR [esi+0x41]
  40807e:	jl     0x408014
  408080:	dec    esp
  408081:	xchg   edi,eax
  408082:	sahf   
  408083:	rol    BYTE PTR [edx+0x1b],cl
  408086:	mov    ah,0xb
  408088:	push   0xcf13b0aa
  40808d:	sbb    dh,BYTE PTR [esp+eiz*8-0x74d1e8a8]
  408094:	fsubrp st(7),st
  408096:	call   0xee0a:0xff2345aa
  40809d:	out    dx,al
  40809e:	xchg   di,ax
  4080a0:	lods   eax,DWORD PTR ds:[esi]
  4080a1:	xchg   edi,eax
  4080a2:	jg     0x408058
  4080a4:	loopne 0x40811f
  4080a6:	ss aad 0x17
  4080a9:	push   eax
  4080aa:	out    dx,eax
  4080ab:	jns    0x408078
  4080ad:	stc    
  4080ae:	mov    WORD PTR [eax-0x23d83f7b],fs
  4080b4:	sbb    ah,BYTE PTR [ebp-0x48e7afb4]
  4080ba:	pushf  
  4080bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080bc:	repnz icebp 
  4080be:	fmul   st,st(1)
  4080c0:	or     eax,0xd9f834b6
  4080c5:	lea    eax,[edx+0x17005c19]
  4080cb:	(bad)  
  4080cd:	or     BYTE PTR [ecx-0x31],cl
  4080d0:	js     0x4080a2
  4080d2:	adc    edx,DWORD PTR [ecx]
  4080d4:	fcomp  QWORD PTR [esi]
  4080d6:	in     eax,dx
  4080d7:	and    al,0x6b
  4080d9:	sub    ebp,DWORD PTR [esi+0x3d]
  4080dc:	push   0x3189cd22
  4080e1:	inc    esi
  4080e2:	and    eax,0xaaeeb0c6
  4080e7:	adc    eax,0xd1c6e844
  4080ec:	call   0x19b42f2c
  4080f1:	popa   
  4080f2:	popa   
  4080f3:	stc    
  4080f4:	lods   eax,DWORD PTR ds:[esi]
  4080f5:	sbb    edi,DWORD PTR [esi+ebx*8-0x3089c68d]
  4080fc:	call   0xd77e465
  408101:	mov    esi,DWORD PTR [eax-0x7398baf6]
  408107:	jmp    0x44f911e1
  40810c:	imul   edi,DWORD PTR [eax+0x14],0x5fb5d89e
  408113:	lods   eax,DWORD PTR ds:[esi]
  408114:	ss push 0x39
  408117:	fldcw  WORD PTR [ebp+0x70a3aac5]
  40811d:	call   0x94032eb9
  408122:	pop    eax
  408123:	inc    ebx
  408124:	lds    eax,FWORD PTR ds:0xf47a5b8e
  40812a:	in     eax,dx
  40812b:	sub    ecx,DWORD PTR [ebx]
  40812d:	in     eax,dx
  40812e:	sub    BYTE PTR [edi-0x6e],bh
  408131:	mul    al
  408133:	adc    al,0xdb
  408135:	fwait
  408136:	in     eax,dx
  408137:	mov    edx,0x29383f88
  40813c:	inc    esi
  40813d:	in     eax,0xed
  40813f:	mov    ah,0xe
  408141:	out    0xb0,al
  408143:	test   DWORD PTR ds:0x9afcd7d2,0x634a270a
  40814d:	and    eax,0x20c3f697
  408152:	sub    edi,DWORD PTR [esp+eax*2-0xb]
  408156:	ins    BYTE PTR es:[edi],dx
  408157:	nop
  408158:	inc    edi
  408159:	loopne 0x40819d
  40815b:	jle    0x40819c
  40815d:	sbb    DWORD PTR [edi-0x656849de],edi
  408163:	loope  0x40813f
  408165:	sti    
  408166:	push   ebp
  408167:	outs   dx,BYTE PTR ds:[esi]
  408168:	dec    edx
  408169:	cs out 0xda,eax
  40816c:	push   esi
  40816d:	push   esp
  40816e:	mov    cl,0x48
  408170:	inc    edi
  408171:	dec    esi
  408172:	aam    0x5
  408174:	nop
  408175:	inc    eax
  408176:	xor    al,0xd3
  408178:	add    al,BYTE PTR [esp+eiz*8]
  40817b:	jae    0x4081c6
  40817d:	and    esi,DWORD PTR [ecx+0x7a]
  408180:	sub    ah,BYTE PTR [ebp+ebp*4-0x6680c6f2]
  408187:	inc    eax
  408188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408189:	inc    edx
  40818a:	out    dx,eax
  40818b:	mov    esi,0x983f1e0d
  408190:	and    DWORD PTR [edi-0x361f78ff],edi
  408196:	sahf   
  408197:	shl    DWORD PTR [eax+0x34e309bc],cl
  40819d:	inc    esi
  40819e:	push   edx
  40819f:	call   DWORD PTR [edi-0x72977452]
  4081a5:	dec    ebx
  4081a6:	mov    BYTE PTR [edx+0x75],ah
  4081a9:	scas   al,BYTE PTR es:[edi]
  4081aa:	cmp    ebp,0x13b71229
  4081b0:	pusha  
  4081b1:	adc    edi,esi
  4081b3:	pop    ecx
  4081b4:	jbe    0x40818f
  4081b6:	pop    edx
  4081b7:	sub    ecx,DWORD PTR [eax+0x35]
  4081ba:	test   eax,0x2bbc1ca0
  4081bf:	leave  
  4081c0:	dec    ebp
  4081c1:	inc    ecx
  4081c2:	mov    dl,0xcf
  4081c4:	cld    
  4081c5:	loope  0x40815a
  4081c7:	fidivr DWORD PTR [ebp-0x3df6d7e9]
  4081cd:	das    
  4081ce:	mov    eax,ds:0x57c84328
  4081d3:	xchg   ebp,edx
  4081d5:	jns    0x4081ce
  4081d7:	aas    
  4081d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d9:	mov    dh,0xbf
  4081db:	add    al,0xfc
  4081dd:	mov    eax,0x8b230b5a
  4081e2:	adc    eax,0xde7f0c1e
  4081e7:	in     al,0x24
  4081e9:	rcl    ecx,cl
  4081eb:	push   esi
  4081ec:	dec    edx
  4081ed:	jns    0x4081da
  4081ef:	test   al,0x98
  4081f1:	xor    BYTE PTR [esi-0x6c190211],bh
  4081f7:	jne    0x4081ee
  4081f9:	int    0xa0
  4081fb:	shl    BYTE PTR [ebp+0x33ef99c6],1
  408201:	mov    ch,0x67
  408203:	fnstsw WORD PTR [edi-0x4ef60f32]
  408209:	(bad)  
  40820a:	mov    ebx,0x51410e88
  40820f:	sub    bh,bh
  408211:	or     cl,0xfd
  408214:	sbb    BYTE PTR [ecx+0x25],al
  408217:	sbb    eax,0x1050eb00
  40821c:	inc    edx
  40821d:	dec    ecx
  40821e:	or     al,0xca
  408220:	xor    eax,0x20f10303
  408225:	fld    QWORD PTR es:0xccc81c27
  40822c:	(bad)  
  40822d:	jmp    0x867cc37e
  408232:	loopne 0x4081b9
  408234:	cmp    cl,BYTE PTR [ebx+0x3581cc45]
  40823a:	mov    dl,0xa2
  40823c:	inc    edx
  40823d:	add    BYTE PTR [ebp+0x7a],bl
  408240:	add    BYTE PTR [eax],al
  408242:	xor    al,0xaa
  408244:	mov    cl,0xf
  408246:	sub    cl,al
  408248:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  408252:	add    dl,cl
  408254:	or     DWORD PTR ds:0x42a266,edi
  40825a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40825d:	xor    cl,0xaa
  408260:	sub    cl,0xf
  408263:	ror    dl,cl
  408265:	sub    DWORD PTR ds:0x42a27e,edi
  40826b:	xor    eax,eax
  40826d:	mov    eax,DWORD PTR [ebp-0xc]
  408270:	sub    DWORD PTR ds:0x42a2d6,0x42a2fa
  40827a:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  408281:	adc    ecx,DWORD PTR ds:0x42a292
  408287:	jmp    0x40a638
  40828c:	or     ch,BYTE PTR [ebp-0x21]
  40828f:	mov    WORD PTR [eax+0x5de90a8a],ds
  408295:	hlt    
  408296:	jne    0x408240
  408298:	arpl   cx,bp
  40829a:	idiv   DWORD PTR [ecx-0x7c7cea39]
  4082a0:	out    dx,eax
  4082a1:	pop    esi
  4082a2:	add    DWORD PTR [ebx-0x6e34b583],0xffffffa8
  4082a9:	cmp    BYTE PTR [ecx+ecx*1],dl
  4082ac:	xor    eax,0x860377e7
  4082b1:	pop    ss
  4082b2:	mov    cl,cl
  4082b4:	cwde   
  4082b5:	adc    edi,DWORD PTR [edi+0x7c1790cf]
  4082bb:	ins    BYTE PTR es:[edi],dx
  4082bc:	push   ds
  4082bd:	fwait
  4082be:	push   ebx
  4082bf:	adc    esi,DWORD PTR [edx+0x54]
  4082c2:	scas   eax,DWORD PTR es:[edi]
  4082c3:	loopne 0x40825a
  4082c5:	dec    esi
  4082c6:	pusha  
  4082c7:	sbb    DWORD PTR [ebx-0x53],edx
  4082ca:	cld    
  4082cb:	push   esi
  4082cc:	sub    eax,0x79811ab7
  4082d1:	lods   eax,DWORD PTR ds:[esi]
  4082d2:	inc    ebp
  4082d3:	xor    BYTE PTR [esi+eax*2+0x1e],ch
  4082d7:	sbb    DWORD PTR [ebp-0x3a],eax
  4082da:	scas   al,BYTE PTR es:[edi]
  4082db:	mov    eax,ds:0xdcf8e0
  4082e0:	out    0x4b,al
  4082e2:	pusha  
  4082e3:	push   eax
  4082e4:	fisttp DWORD PTR [edx]
  4082e6:	mov    ah,0x62
  4082e8:	repnz inc esp
  4082ea:	jno    0x408360
  4082ec:	daa    
  4082ed:	xor    esi,DWORD PTR [edi+ebp*1]
  4082f0:	xchg   ebx,eax
  4082f1:	adc    eax,0x960b6bab
  4082f6:	adc    eax,0x1c2606b6
  4082fb:	mov    bh,0x32
  4082fd:	iret   
  4082fe:	inc    ebp
  4082ff:	xor    BYTE PTR [ebx],bl
  408301:	mov    eax,DWORD PTR ds:0x46a67cce
  408307:	xchg   BYTE PTR [esi],ch
  408309:	mov    ecx,0xe4825e99
  40830e:	pop    esi
  40830f:	adc    ecx,DWORD PTR [edi]
  408311:	jae    0x4082f0
  408313:	sub    BYTE PTR [ecx],al
  408315:	(bad)  
  408316:	sbb    DWORD PTR [edx-0x17],esi
  408319:	in     al,0x90
  40831b:	jnp    0x4082c1
  40831d:	push   ds
  40831e:	jbe    0x4082f4
  408320:	out    0x60,eax
  408322:	xor    al,0xc3
  408324:	jge    0x408309
  408326:	or     eax,0x7373c6ea
  40832b:	push   ebx
  40832c:	pop    edx
  40832d:	ret    
  40832e:	xlat   BYTE PTR ds:[ebx]
  40832f:	pop    ss
  408330:	aaa    
  408331:	inc    edx
  408332:	add    DWORD PTR [ebx-0x33f92ee4],0xadd99bd9
  40833c:	mov    dh,0x36
  40833e:	mov    ecx,0xb5ba41f
  408343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408344:	xor    al,BYTE PTR [ebx-0x13df195b]
  40834a:	(bad)  
  40834b:	mov    bl,0x11
  40834d:	xor    BYTE PTR [edx],0x61
  408350:	nop
  408351:	in     eax,dx
  408352:	test   cl,0x96
  408355:	ffreep st(4)
  408357:	xchg   cl,bl
  408359:	mov    ebp,0x90ac1862
  40835e:	retf   
  40835f:	mov    BYTE PTR [ecx-0x75],ah
  408362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408363:	xchg   esi,eax
  408364:	dec    esi
  408365:	arpl   ax,cx
  408367:	enter  0x3bff,0xc9
  40836b:	(bad)
  40836e:	xchg   bl,cl
  408370:	test   BYTE PTR ds:0x9e69bf3e,dh
  408376:	cmp    BYTE PTR [edx-0x3d],dh
  408379:	loopne 0x40837b
  40837b:	and    BYTE PTR [ecx],bh
  40837d:	loop   0x40834e
  40837f:	sub    bh,BYTE PTR [ebx-0x2c]
  408382:	cmp    ebx,DWORD PTR [ebp-0x7c294c93]
  408388:	xor    ch,BYTE PTR [ecx-0xb]
  40838b:	sbb    ecx,edx
  40838d:	xchg   ebp,eax
  40838e:	hlt    
  40838f:	cwde   
  408390:	rcl    BYTE PTR [ecx-0x37],0x60
  408394:	push   0xffffffc1
  408396:	(bad)
  408399:	xchg   DWORD PTR [edx+0x42],esi
  40839c:	sbb    ebp,edi
  40839e:	xor    al,0xde
  4083a0:	xchg   ebx,eax
  4083a1:	fs pop edi
  4083a3:	ins    BYTE PTR es:[edi],dx
  4083a4:	mov    edi,0x947bceb2
  4083a9:	mov    ?,esp
  4083ab:	das    
  4083ac:	sbb    al,0x1e
  4083ae:	lea    ebp,[edx-0x53576308]
  4083b4:	xchg   edx,eax
  4083b5:	xchg   BYTE PTR [eax-0x68],bl
  4083b8:	lahf   
  4083b9:	mov    DWORD PTR [ecx+0x4b6f3363],esi
  4083bf:	xor    BYTE PTR [ecx+0x7b31cdbd],0xf
  4083c6:	add    dl,BYTE PTR [eax-0x70]
  4083c9:	imul   eax,edi,0xffffffc1
  4083cc:	jecxz  0x408421
  4083ce:	push   ecx
  4083cf:	fld    st(6)
  4083d1:	test   al,0x41
  4083d3:	ss push esp
  4083d5:	test   BYTE PTR [eax],dh
  4083d7:	(bad)
  4083da:	mov    ?,eax
  4083dc:	fiadd  WORD PTR [eax+edx*2-0x69a78ad5]
  4083e3:	sub    ch,BYTE PTR [edx]
  4083e5:	test   BYTE PTR [edx-0x6dfcffda],al
  4083eb:	inc    ebp
  4083ec:	sub    al,0x2f
  4083ee:	and    bh,BYTE PTR [esp+eiz*4]
  4083f1:	clc    
  4083f2:	sub    edx,DWORD PTR [eax]
  4083f4:	mov    cl,0x51
  4083f6:	fld    TBYTE PTR [edi-0x7089a6a5]
  4083fc:	push   eax
  4083fd:	mov    esp,0x69f083f
  408402:	add    BYTE PTR [esi+0x3952a72f],dh
  408408:	scas   al,BYTE PTR es:[edi]
  408409:	jae    0x40844e
  40840b:	gs in  al,dx
  40840d:	sbb    ecx,eax
  40840f:	push   eax
  408410:	push   esi
  408411:	sub    ebp,ecx
  408413:	std    
  408414:	or     DWORD PTR [ebx-0x69],eax
  408417:	inc    ecx
  408418:	sbb    DWORD PTR [edi],eax
  40841a:	in     al,dx
  40841b:	pop    edx
  40841c:	mov    ?,ebp
  40841e:	dec    esi
  40841f:	dec    edi
  408420:	inc    esp
  408421:	dec    edx
  408422:	inc    edx
  408423:	loopne 0x408402
  408425:	shl    BYTE PTR [edi+0x46],0xa9
  408429:	(bad)  
  40842a:	dec    ecx
  40842b:	pushf  
  40842c:	push   es
  40842d:	imul   ecx,DWORD PTR [eax-0xd0275b],0x65
  408434:	dec    eax
  408435:	mov    WORD PTR [esi],?
  408437:	adc    BYTE PTR [ebp+0x2450f30],0x85
  40843e:	pop    edx
  40843f:	sbb    eax,0x973627ba
  408444:	ret    0x7406
  408447:	mov    esp,0x87ac3690
  40844c:	sahf   
  40844d:	bound  ebp,QWORD PTR [ecx-0xb79d375]
  408453:	(bad)  
  408454:	jecxz  0x408413
  408456:	push   0x3a
  408458:	daa    
  408459:	sbb    eax,0xa6f51134
  40845e:	mov    al,0x53
  408460:	mov    gs,eax
  408462:	pop    ss
  408463:	lea    eax,[esi-0x69]
  408466:	jmp    0xf205:0xaaf8fd94
  40846d:	fwait
  40846e:	dec    eax
  40846f:	out    dx,al
  408470:	repz mov eax,ds:0x1b0c6570
  408476:	stos   BYTE PTR es:[edi],al
  408477:	mov    al,ds:0x70571831
  40847c:	mov    al,BYTE PTR [esi]
  40847e:	adc    ah,BYTE PTR [eax-0x281f70c9]
  408484:	add    esp,ebx
  408486:	ror    BYTE PTR [esi+0x6],1
  408489:	add    dh,BYTE PTR [esi+edx*4-0x12]
  40848d:	and    bl,BYTE PTR [ecx+0x5bf7e1f0]
  408493:	int3   
  408494:	adc    DWORD PTR [ecx-0x6],ecx
  408497:	push   ebx
  408498:	xchg   esi,eax
  408499:	push   edx
  40849a:	jbe    0x40845d
  40849c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40849d:	push   cs
  40849e:	push   edi
  40849f:	cld    
  4084a0:	and    eax,0x12a108d8
  4084a5:	and    eax,0x83f4a440
  4084aa:	push   cs
  4084ab:	aaa    
  4084ac:	dec    ebx
  4084ad:	xor    esp,edi
  4084af:	lahf   
  4084b0:	jno    0x4084fd
  4084b2:	adc    ch,dh
  4084b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084b5:	(bad)  
  4084b7:	cwde   
  4084b8:	push   ecx
  4084b9:	rcr    BYTE PTR [edx+0x700d4ee0],0xd3
  4084c0:	xlat   BYTE PTR ds:[ebx]
  4084c1:	xchg   edx,eax
  4084c2:	daa    
  4084c3:	scas   al,BYTE PTR es:[edi]
  4084c4:	mov    ecx,DWORD PTR [ebx+0x21407965]
  4084ca:	lods   eax,DWORD PTR ds:[esi]
  4084cb:	mov    esi,0x6604aa08
  4084d0:	and    esi,DWORD PTR [ebp+eiz*4+0x22]
  4084d4:	retf   0xadcb
  4084d7:	cmp    eax,0x5fadc099
  4084dc:	mov    BYTE PTR [esi],cl
  4084de:	adc    ebp,ecx
  4084e0:	cld    
  4084e1:	push   edx
  4084e2:	push   ss
  4084e3:	aas    
  4084e4:	adc    eax,DWORD PTR [esi-0x71]
  4084e7:	sub    eax,ebx
  4084e9:	dec    edi
  4084ea:	bound  edx,QWORD PTR [edi]
  4084ec:	sti    
  4084ed:	test   BYTE PTR [ebx+0x36],ah
  4084f0:	scas   eax,DWORD PTR es:[edi]
  4084f1:	mov    BYTE PTR gs:[eax],ah
  4084f4:	xor    cl,BYTE PTR [edx]
  4084f6:	mov    bl,0x8e
  4084f8:	fs xchg esi,eax
  4084fa:	xchg   ebx,eax
  4084fb:	mov    ebp,0x4be4fc0d
  408500:	fidiv  DWORD PTR [edx-0x29e44988]
  408506:	test   eax,0xae720770
  40850b:	hlt    
  40850c:	mov    ebx,0x379ca00
  408511:	xor    dl,BYTE PTR [ebp+0x592e41f0]
  408517:	jne    0x408582
  408519:	mov    edi,0x68787d9a
  40851e:	pop    ebx
  40851f:	popa   
  408520:	or     al,0x8f
  408522:	sub    BYTE PTR [ebx+esi*8-0x54],dl
  408526:	repnz into 
  408528:	stos   DWORD PTR es:[edi],eax
  408529:	stc    
  40852a:	xchg   edi,eax
  40852b:	cli    
  40852c:	enter  0xcf73,0x8d
  408530:	mov    eax,0xbbff2dc9
  408535:	cmp    DWORD PTR [esi+0x3ebb31db],0x7a3f6fc9
  40853f:	mov    WORD PTR [edx],es
  408541:	lods   eax,DWORD PTR ds:[esi]
  408542:	out    dx,al
  408543:	jne    0x40858a
  408545:	nop
  408546:	xor    esi,eax
  408548:	mov    bl,0x34
  40854a:	scas   eax,DWORD PTR es:[edi]
  40854b:	xor    DWORD PTR [edi-0x51],edx
  40854e:	scas   al,BYTE PTR es:[edi]
  40854f:	sahf   
  408550:	loopne 0x4084dc
  408552:	repnz ds lahf 
  408555:	cmp    DWORD PTR [ecx+esi*4],esi
  408558:	ins    BYTE PTR es:[edi],dx
  408559:	ss retf 0x3534
  40855d:	scas   eax,DWORD PTR es:[edi]
  40855e:	fdecstp 
  408560:	dec    edx
  408561:	test   ch,dl
  408563:	jbe    0x40856e
  408565:	test   DWORD PTR [ecx-0x23],esp
  408568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408569:	fcmove st,st(1)
  40856b:	and    DWORD PTR [edi-0x28],esp
  40856e:	ins    BYTE PTR es:[edi],dx
  40856f:	das    
  408570:	xchg   edx,eax
  408571:	mov    bl,0x1e
  408573:	push   0x71f8f7b2
  408578:	js     0x408587
  40857a:	loop   0x40852b
  40857c:	mov    cl,0x76
  40857e:	stos   DWORD PTR es:[edi],eax
  40857f:	jl     0x40852c
  408581:	(bad)  
  408582:	addr16 cdq 
  408584:	repnz push ds
  408586:	mov    esi,DWORD PTR [eax+ebx*2+0x16dd24dd]
  40858d:	mov    eax,0x2a39b794
  408592:	leave  
  408593:	pop    edi
  408594:	xor    BYTE PTR [ebx],0xdc
  408597:	daa    
  408598:	aaa    
  408599:	xlat   BYTE PTR ds:[ebx]
  40859a:	cs aaa 
  40859c:	stos   DWORD PTR es:[edi],eax
  40859d:	lahf   
  40859e:	repnz xchg ebx,eax
  4085a0:	in     eax,0xb9
  4085a2:	jae    0x408556
  4085a4:	mov    al,0x47
  4085a6:	dec    ebp
  4085a7:	or     eax,0x4210c946
  4085ac:	sbb    ch,bl
  4085ae:	iret   
  4085af:	sub    eax,0x6fb52ecc
  4085b4:	aad    0x1e
  4085b6:	lea    esi,[ebx]
  4085b8:	mov    edx,0x2515ab8a
  4085bd:	outs   dx,BYTE PTR ds:[esi]
  4085be:	push   es
  4085bf:	pop    esi
  4085c0:	jns    0x4085e5
  4085c2:	jl     0x4085ab
  4085c4:	retf   0x5fa7
  4085c7:	bound  esi,QWORD PTR [esi-0x14996ff2]
  4085cd:	xlat   BYTE PTR ds:[ebx]
  4085ce:	ret    
  4085cf:	adc    eax,0xea2f4a15
  4085d4:	dec    esi
  4085d5:	push   es
  4085d6:	fild   WORD PTR [esi+0x30]
  4085d9:	test   eax,0x63dca326
  4085de:	in     al,dx
  4085df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e0:	adc    BYTE PTR [edi],0x5c
  4085e3:	cmp    DWORD PTR [ebx],0xffffff91
  4085e6:	mov    dl,0x1c
  4085e8:	pop    edi
  4085e9:	jbe    0x40856f
  4085eb:	out    0x97,al
  4085ed:	ss push 0xcb80f228
  4085f3:	sbb    ch,BYTE PTR [ecx-0x586811c1]
  4085f9:	dec    ecx
  4085fa:	cld    
  4085fb:	inc    BYTE PTR [ebx+0x6b9c7c2]
  408601:	jge    0x408649
  408603:	(bad)  
  408604:	jbe    0x4085ce
  408606:	aam    0x40
  408608:	mov    fs,WORD PTR [edx+0x49fbd63a]
  40860e:	inc    esp
  40860f:	jmp    0x4085fb
  408611:	sub    al,0xa8
  408613:	enter  0x76f2,0x9b
  408617:	(bad)  
  408619:	icebp  
  40861a:	(bad)  
  40861b:	in     al,0xf
  40861d:	push   0xffffffdd
  40861f:	pushf  
  408620:	mov    edx,DWORD PTR [edx+edx*8-0x37]
  408624:	out    dx,eax
  408625:	xor    al,0xa9
  408627:	iret   
  408628:	aaa    
  408629:	xor    DWORD PTR [esi+ebp*4+0x605ccea1],ebx
  408630:	mov    esp,0xdd416fc1
  408635:	jne    0x408648
  408637:	pop    ss
  408638:	mov    bh,0x3
  40863a:	sbb    al,0xb3
  40863c:	mov    bl,BYTE PTR [ecx+0x1a0950f2]
  408642:	outs   dx,DWORD PTR ds:[esi]
  408643:	pop    es
  408644:	xor    BYTE PTR [eax-0x64],ah
  408647:	retf   
  408648:	pop    esi
  408649:	dec    ecx
  40864a:	loop   0x4086b1
  40864c:	stc    
  40864d:	rcl    DWORD PTR [ebx-0x29ba99b2],cl
  408653:	(bad)  
  408654:	push   eax
  408655:	or     BYTE PTR ds:0x5a7fee14,ah
  40865b:	data16 add cl,BYTE PTR [esi+0x57]
  40865f:	in     al,dx
  408660:	inc    eax
  408661:	sbb    ebp,eax
  408663:	push   edx
  408664:	repnz retf 
  408666:	inc    eax
  408667:	lahf   
  408668:	pop    es
  408669:	sbb    eax,0xd5919962
  40866e:	ss ds loope 0x40869a
  408672:	add    BYTE PTR [ebp+0x42957e6e],bh
  408678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408679:	dec    ebx
  40867a:	jmp    0x4086d8
  40867c:	mov    al,ds:0x9ba8dfb
  408681:	idiv   DWORD PTR [edi]
  408683:	ret    0x3a66
  408686:	xchg   ebp,eax
  408687:	cwde   
  408688:	mov    BYTE PTR [ecx],ah
  40868a:	jbe    0x4086cb
  40868c:	test   eax,0x5300f058
  408691:	jle    0x40862f
  408693:	push   ecx
  408694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408695:	push   ebx
  408696:	je     0x40864e
  408698:	lea    esp,[ecx-0x357ddba0]
  40869e:	cwde   
  40869f:	dec    esp
  4086a0:	mov    ds:0xf7ea9603,al
  4086a5:	jecxz  0x408680
  4086a7:	xor    al,0xd8
  4086a9:	add    esp,ebx
  4086ab:	and    bl,BYTE PTR [esi+0x52e55124]
  4086b1:	add    ah,BYTE PTR [ecx-0xe7ae34]
  4086b7:	repz repz bound ebx,QWORD PTR [ecx+ecx*4-0x58]
  4086bd:	push   cs
  4086be:	mov    edi,?
  4086c0:	mov    edx,0x7a2a5c76
  4086c5:	inc    esp
  4086c6:	mov    al,0x9a
  4086c8:	pushf  
  4086c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ca:	sbb    DWORD PTR [esp+esi*8+0x7d],edx
  4086ce:	sub    DWORD PTR [edi-0x32],eax
  4086d1:	shl    bh,cl
  4086d3:	dec    ecx
  4086d4:	cli    
  4086d5:	or     BYTE PTR [ebx+ecx*8],bh
  4086d8:	cmc    
  4086d9:	je     0x408754
  4086db:	or     al,0x85
  4086dd:	loope  0x408662
  4086df:	mov    eax,ds:0x27adbc88
  4086e4:	jge    0x4086b7
  4086e6:	sahf   
  4086e7:	and    BYTE PTR [edx+0x3],0x2c
  4086eb:	out    dx,al
  4086ec:	sbb    esp,DWORD PTR [ecx+0x38]
  4086ef:	jae    0x408695
  4086f1:	scas   eax,DWORD PTR es:[edi]
  4086f2:	adc    bl,BYTE PTR ds:0xf2b68ca7
  4086f8:	cmp    BYTE PTR [ebx+ecx*4+0x66],0xd5
  4086fd:	repnz ins BYTE PTR es:[edi],dx
  4086ff:	stc    
  408700:	mov    al,0x5a
  408702:	(bad)  
  408703:	mov    esi,0xf62bdc20
  408708:	mov    eax,ds:0xb3b1de24
  40870d:	pushw  0x5f04
  408711:	into   
  408712:	mov    BYTE PTR ds:0x21944d9f,dh
  408718:	xchg   esi,eax
  408719:	nop    DWORD PTR [edx-0x62]
  40871d:	sbb    esi,DWORD PTR [esi+edx*1+0x6e]
  408721:	iret   
  408722:	ret    
  408723:	inc    edx
  408724:	loope  0x4086f3
  408726:	xor    BYTE PTR [edi+0x66739ff7],bl
  40872c:	xor    DWORD PTR [ebp+eiz*8-0x472dee70],esi
  408733:	mov    eax,ds:0x919ecb72
  408738:	cld    
  408739:	mov    ebx,0x3e84e01c
  40873e:	xor    eax,DWORD PTR [edi+ebx*2-0x67e34595]
  408745:	dec    eax
  408746:	or     edx,DWORD PTR [eax+0x4c]
  408749:	int    0xe2
  40874b:	fcomip st,st(0)
  40874d:	out    0x27,al
  40874f:	test   eax,0x68924813
  408754:	cs dec edi
  408756:	add    al,BYTE PTR [esp+edi*4+0x13]
  40875a:	pop    ebp
  40875b:	ins    BYTE PTR es:[edi],dx
  40875c:	cli    
  40875d:	push   0x64
  40875f:	push   ss
  408760:	sub    edx,edx
  408762:	adc    eax,0xd6ac55a3
  408767:	es sti 
  408769:	inc    ecx
  40876a:	mov    esp,0xeedb95dc
  40876f:	pop    edx
  408770:	loopne 0x40870f
  408772:	ror    DWORD PTR [ecx+0xf],1
  408775:	test   al,0xc2
  408777:	mov    WORD PTR [ebp+0x551ce22b],?
  40877d:	call   0xa156:0xea1a4a12
  408784:	aas    
  408785:	bound  ebp,QWORD PTR [ecx-0x38]
  408788:	pop    ebx
  408789:	sti    
  40878a:	in     eax,dx
  40878b:	fcom   QWORD PTR [esi-0x3b]
  40878e:	cmp    BYTE PTR [ecx+0x10],dl
  408791:	pop    esp
  408792:	mov    ch,0x16
  408794:	scas   al,BYTE PTR es:[edi]
  408795:	out    dx,al
  408796:	pop    ebp
  408797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408798:	push   esi
  408799:	pop    edx
  40879a:	xchg   esi,eax
  40879b:	push   0xffffffd1
  40879d:	push   ecx
  40879e:	jnp    0x40877a
  4087a0:	mov    esi,0x28d6af06
  4087a5:	xchg   ebx,eax
  4087a6:	mov    eax,0xd4f549e3
  4087ab:	ret    
  4087ac:	jne    0x40882c
  4087ae:	and    ebx,ecx
  4087b0:	mov    fs,WORD PTR [ebx-0x44]
  4087b3:	xchg   esp,eax
  4087b4:	out    dx,eax
  4087b5:	out    dx,eax
  4087b6:	mov    esi,0x940e8ec9
  4087bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087bc:	pusha  
  4087bd:	ss push ss
  4087bf:	sbb    bh,dl
  4087c1:	pop    ss
  4087c2:	in     al,0xc6
  4087c4:	mov    ebp,DWORD PTR [ebp+0x36]
  4087c7:	push   ebx
  4087c8:	xor    eax,0x680a1c62
  4087cd:	xor    DWORD PTR [ebx+0x8e494e8],esi
  4087d3:	xchg   DWORD PTR [ecx],eax
  4087d5:	pop    esp
  4087d6:	mov    dh,dh
  4087d8:	adc    al,BYTE PTR [ecx-0x14]
  4087db:	(bad)  
  4087dc:	cmp    cl,dh
  4087de:	pcmpgtb mm0,QWORD PTR [ebp+0x33]
  4087e2:	mov    esp,?
  4087e4:	jge    0x40885a
  4087e6:	adc    dl,BYTE PTR [ecx]
  4087e8:	mov    BYTE PTR [esi+0xf],bl
  4087eb:	(bad)  
  4087ec:	div    BYTE PTR [ebx]
  4087ee:	cmp    DWORD PTR [ebx-0x6d],esi
  4087f1:	sub    ah,ch
  4087f3:	xchg   esp,eax
  4087f4:	leave  
  4087f5:	fdivr  DWORD PTR [eax*4+0x7f4892a6]
  4087fc:	lahf   
  4087fd:	xchg   ebp,eax
  4087fe:	mov    BYTE PTR [edx-0x61],bl
  408801:	pop    edx
  408802:	gs jp  0x4087c5
  408805:	add    DWORD PTR [eax-0x1746e3b9],0xffffffc2
  40880c:	test   al,0x36
  40880e:	test   eax,0xf6583484
  408813:	sub    al,0x3c
  408815:	test   eax,0xbe19a7c5
  40881a:	mov    esi,DWORD PTR [eax+0x11bcecf0]
  408820:	cmp    al,0x6a
  408822:	ja     0x40883f
  408824:	sahf   
  408825:	push   edx
  408826:	mov    ds:0x9e177c3a,al
  40882b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40882c:	pop    ecx
  40882d:	in     eax,0xe6
  40882f:	adc    edx,DWORD PTR [esi]
  408831:	enter  0x1414,0x7e
  408835:	push   edi
  408836:	xchg   edi,eax
  408837:	inc    edx
  408838:	mov    BYTE PTR es:[eax],0x2c
  40883c:	pop    ebp
  40883d:	push   eax
  40883e:	enter  0x428,0x93
  408842:	mov    ah,0x57
  408844:	stos   DWORD PTR es:[edi],eax
  408845:	out    dx,al
  408846:	std    
  408847:	dec    esp
  408848:	lods   eax,DWORD PTR ds:[esi]
  408849:	or     DWORD PTR [eax+0x41],edx
  40884c:	outs   dx,DWORD PTR ds:[esi]
  40884d:	jns    0x408811
  40884f:	out    0xec,al
  408851:	jp     0x40889d
  408853:	into   
  408854:	pop    esi
  408855:	jl     0x408879
  408857:	sbb    eax,0xaa22e2e8
  40885c:	test   esi,esp
  40885e:	test   bh,bh
  408860:	lods   al,BYTE PTR ds:[esi]
  408861:	adc    al,0x26
  408863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408864:	mov    eax,0x3fc6abcd
  408869:	pop    esp
  40886a:	mov    ch,0xf2
  40886c:	mov    esp,0xf256a3f5
  408871:	bound  esi,QWORD PTR [edi+0x3b]
  408874:	leave  
  408875:	jecxz  0x4088ab
  408877:	inc    ebx
  408878:	int3   
  408879:	lock push ebp
  40887b:	xchg   ebx,eax
  40887c:	cmp    BYTE PTR [eax+ecx*4-0x5ea9e34c],0xa5
  408884:	xchg   ebx,eax
  408885:	or     ebx,DWORD PTR [ecx+0x6eec0e04]
  40888b:	ror    BYTE PTR [ebx+0x75],cl
  40888e:	mov    DWORD PTR [ecx],esi
  408890:	fisttp WORD PTR [ebx]
  408892:	(bad)
  408895:	aad    0x95
  408897:	stc    
  408898:	test   DWORD PTR [esi],ebp
  40889a:	dec    eax
  40889b:	dec    ebx
  40889c:	sbb    al,BYTE PTR [esi]
  40889e:	adc    al,0xe
  4088a0:	fstp   TBYTE PTR [ebx+0x2b2c6263]
  4088a6:	shl    BYTE PTR [ebx+0x6e7d0d4e],0x8b
  4088ad:	dec    ebx
  4088ae:	idiv   DWORD PTR [ebx]
  4088b0:	call   0x937d:0x329b4145
  4088b7:	call   0x6f38:0xa6b49430
  4088be:	(bad)  
  4088bf:	xor    eax,0xcced150a
  4088c4:	mov    dh,0x59
  4088c6:	add    dl,cl
  4088c8:	mov    ebx,0x896b664e
  4088cd:	dec    edi
  4088ce:	retf   0x8ed
  4088d1:	lock ins BYTE PTR es:[edi],dx
  4088d3:	ins    BYTE PTR es:[edi],dx
  4088d4:	repz retf 0xf2f6
  4088d8:	test   al,0x74
  4088da:	push   edx
  4088db:	call   0xd325:0x634a5c7
  4088e2:	push   ds
  4088e3:	sub    al,0x1a
  4088e5:	sar    BYTE PTR [eax+eax*1-0x69],cl
  4088e9:	xchg   esp,eax
  4088ea:	repnz scas al,BYTE PTR es:[edi]
  4088ec:	mov    ebp,0xa66f5833
  4088f1:	or     al,0x3d
  4088f3:	jmp    0xd47fa255
  4088f8:	add    dl,BYTE PTR [ecx+eax*8-0x5f]
  4088fc:	sub    cl,bh
  4088fe:	ror    BYTE PTR [ebp+0x65],cl
  408901:	pusha  
  408902:	dec    edi
  408903:	push   edx
  408904:	xchg   ecx,eax
  408905:	push   esi
  408906:	dec    ebx
  408907:	mov    ah,0x6b
  408909:	mov    eax,ds:0xd5df5b07
  40890e:	into   
  40890f:	shr    DWORD PTR ds:0x8b302594,cl
  408915:	adc    DWORD PTR [edx-0x979a76d],eax
  40891b:	nop
  40891c:	sbb    esi,DWORD PTR [esi+0x7c9edc73]
  408922:	push   eax
  408923:	and    esi,ecx
  408925:	retf   
  408926:	cmc    
  408927:	outs   dx,BYTE PTR ds:[esi]
  408928:	scas   al,BYTE PTR es:[edi]
  408929:	and    eax,0xbcaa91dc
  40892e:	cmp    bl,BYTE PTR [esi-0x63163c9a]
  408934:	fwait
  408935:	or     al,0xad
  408937:	mov    edx,0x28715cf0
  40893c:	sbb    al,0x30
  40893e:	ficom  WORD PTR [edi]
  408940:	mov    ds:0x336ceb55,al
  408945:	or     al,0xcf
  408947:	cwde   
  408948:	pop    ebx
  408949:	outs   dx,BYTE PTR ds:[esi]
  40894a:	out    0x80,eax
  40894c:	or     al,0xc0
  40894e:	mov    WORD PTR [ebx+eax*2],es
  408951:	aad    0x1e
  408953:	jae    0x4088d5
  408955:	sbb    ebx,ebp
  408957:	xor    al,0xe
  408959:	aad    0xc7
  40895b:	fisubr DWORD PTR [ebp+0x6d]
  40895e:	fcmovb st,st(7)
  408960:	inc    esi
  408961:	pop    ss
  408962:	xor    bh,dh
  408964:	ror    DWORD PTR ds:0x495c8b8c,0x9b
  40896b:	and    DWORD PTR [ebp+0x561511d1],0x57
  408972:	cwde   
  408973:	mov    dh,dh
  408975:	and    DWORD PTR [esi-0x5b0006da],esi
  40897b:	mov    bh,0xc9
  40897d:	sub    eax,0x59674b90
  408982:	xchg   edx,eax
  408983:	(bad)  
  408984:	cmp    DWORD PTR [esi-0x2a],edx
  408987:	nop
  408988:	pop    ss
  408989:	inc    ecx
  40898a:	xchg   ecx,eax
  40898b:	adc    al,0x49
  40898d:	mov    bl,0xd8
  40898f:	fidivr WORD PTR [esi-0x4d]
  408992:	mov    ds:0x6df423fe,al
  408997:	ror    BYTE PTR [ebx],0xe3
  40899a:	and    al,0xbf
  40899c:	loopne 0x408935
  40899e:	iret   
  40899f:	xlat   BYTE PTR ds:[ebx]
  4089a0:	or     bl,bl
  4089a2:	retf   0xb81d
  4089a5:	lock mov BYTE PTR [esp+ebx*1],bh
  4089a9:	mov    DWORD PTR [esi-0xa],esi
  4089ac:	jp     0x408974
  4089ae:	mov    BYTE PTR [ecx],ah
  4089b0:	aas    
  4089b1:	mov    ?,WORD PTR [bp+di]
  4089b4:	stos   DWORD PTR es:[edi],eax
  4089b5:	xchg   esp,eax
  4089b6:	sti    
  4089b7:	lock cmp ch,BYTE PTR [eax-0x2b]
  4089bb:	pop    eax
  4089bc:	mov    dh,0x7f
  4089be:	cld    
  4089bf:	and    BYTE PTR [esi-0x1a72cbe8],bl
  4089c5:	push   0xfffffff9
  4089c7:	fdiv   QWORD PTR [ebx-0x1c]
  4089ca:	in     eax,dx
  4089cb:	in     al,dx
  4089cc:	outs   dx,BYTE PTR ds:[esi]
  4089cd:	in     eax,0xf1
  4089cf:	adc    BYTE PTR [eax+0x5e1d2ad2],ch
  4089d5:	loope  0x4089c8
  4089d7:	jp     0x408a0c
  4089d9:	outs   dx,BYTE PTR ds:[esi]
  4089da:	sub    ebp,DWORD PTR [edx]
  4089dc:	loop   0x408a03
  4089de:	lea    edx,[eax-0x3f]
  4089e1:	mov    ah,dh
  4089e3:	(bad)  
  4089e5:	xchg   esp,eax
  4089e6:	mov    ds:0x19933824,al
  4089eb:	mov    bh,0x7c
  4089ed:	mov    eax,0xe1d95605
  4089f2:	ins    BYTE PTR es:[edi],dx
  4089f3:	(bad)  
  4089f4:	dec    eax
  4089f5:	push   ss
  4089f6:	cmp    eax,DWORD PTR [edi]
  4089f8:	(bad)  
  4089f9:	(bad)  
  4089fa:	mov    ch,0xe9
  4089fc:	loopne 0x408a6c
  4089fe:	and    cl,BYTE PTR [edx+0xb]
  408a01:	sub    edi,DWORD PTR [edi*1-0x6014dc72]
  408a08:	cmp    eax,0xa85afdd
  408a0d:	xor    ah,BYTE PTR [esi]
  408a0f:	lods   eax,DWORD PTR ds:[esi]
  408a10:	arpl   WORD PTR [eax],si
  408a12:	xchg   edi,eax
  408a13:	xchg   ecx,eax
  408a14:	(bad)  
  408a15:	popa   
  408a16:	and    cl,dh
  408a18:	out    0x71,al
  408a1a:	nop
  408a1b:	icebp  
  408a1c:	call   0x3cf2:0xaf53281e
  408a23:	scas   eax,DWORD PTR es:[edi]
  408a24:	ja     0x4089d7
  408a26:	data16 outs dx,BYTE PTR ds:[si]
  408a29:	cmp    cl,bl
  408a2b:	inc    eax
  408a2c:	adc    ah,BYTE PTR [edx+0x25]
  408a2f:	pop    ds
  408a30:	xchg   ebx,eax
  408a31:	xchg   DWORD PTR [edx-0x61],esp
  408a34:	pop    ds
  408a35:	push   ss
  408a36:	jp     0x4089d3
  408a38:	dec    eax
  408a39:	pop    es
  408a3a:	dec    edx
  408a3b:	retf   
  408a3c:	loop   0x408aad
  408a3e:	jecxz  0x408a0a
  408a40:	push   ss
  408a41:	inc    eax
  408a42:	in     eax,dx
  408a43:	arpl   WORD PTR [ebx-0x2a],bp
  408a46:	jbe    0x408a9e
  408a48:	mov    ebp,0x17becf22
  408a4d:	and    DWORD PTR [edi+0x2063c4ff],ebx
  408a53:	(bad)  
  408a54:	(bad)  [ebx+0x59]
  408a57:	jge    0x408a07
  408a59:	std    
  408a5a:	jmp    0x408a25
  408a5c:	sbb    eax,DWORD PTR [ebx-0x5804702e]
  408a62:	sbb    DWORD PTR [ecx],edx
  408a64:	pop    ds
  408a65:	arpl   di,bx
  408a67:	or     dl,al
  408a69:	out    0x4,al
  408a6b:	pop    esi
  408a6c:	ins    DWORD PTR es:[edi],dx
  408a6d:	inc    eax
  408a6e:	pop    ebp
  408a6f:	pop    esi
  408a70:	mov    edi,0x9eac579c
  408a75:	and    dh,cl
  408a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a78:	lods   eax,DWORD PTR ds:[esi]
  408a79:	jo     0x408a50
  408a7b:	adc    dl,BYTE PTR [esi+0x5ac773d9]
  408a81:	push   ecx
  408a82:	cmp    bh,dl
  408a84:	or     al,0x53
  408a86:	retf   
  408a87:	mov    bl,0x2f
  408a89:	cmp    BYTE PTR [edi],bl
  408a8b:	jge    0x408a28
  408a8d:	xor    eax,0xee5756e1
  408a92:	mov    WORD PTR [eax+0x45],ds
  408a95:	mov    ebx,DWORD PTR [ebx]
  408a97:	mov    edx,0x7ef59314
  408a9c:	call   0x93dddc85
  408aa1:	fist   DWORD PTR [eax+ecx*8-0x39822555]
  408aa8:	pop    es
  408aa9:	pushf  
  408aaa:	(bad)  
  408aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aac:	imul   edi,DWORD PTR [ebx-0x438432c1],0x6c28515c
  408ab6:	lods   eax,DWORD PTR ds:[esi]
  408ab7:	dec    ebx
  408ab8:	jge    0x408a7f
  408aba:	popf   
  408abb:	push   ebp
  408abc:	fistp  QWORD PTR [eax-0x39c93796]
  408ac2:	ja     0x408a6a
  408ac4:	data16 in al,dx
  408ac6:	out    dx,eax
  408ac7:	daa    
  408ac8:	or     al,0xea
  408aca:	imul   esp,DWORD PTR [edi-0x75],0x30
  408ace:	mov    cl,0xd0
  408ad0:	xor    DWORD PTR [ebp-0x40137614],edi
  408ad6:	push   ebp
  408ad7:	sahf   
  408ad8:	loope  0x408a60
  408ada:	cld    
  408adb:	retf   0xf1ee
  408ade:	cmp    edx,edx
  408ae0:	cmp    al,0x2d
  408ae2:	cmp    ebx,ebp
  408ae4:	call   0x1a8d:0xb4f895c4
  408aeb:	mov    edx,0xd47b4540
  408af0:	push   edx
  408af1:	pop    ebp
  408af2:	dec    ebp
  408af3:	add    eax,0xa34ff95c
  408af8:	outs   dx,DWORD PTR ds:[esi]
  408af9:	cmc    
  408afa:	push   edx
  408afb:	adc    DWORD PTR [edx],esi
  408afd:	push   edi
  408afe:	lea    esi,[ebx]
  408b00:	jmp    FWORD PTR [edi-0x300057b4]
  408b06:	mov    ebp,0x77baa067
  408b0b:	cmp    edi,DWORD PTR [ebp+0x2e]
  408b0e:	call   0xcb1022a3
  408b13:	fs mov ebp,0xc65d1239
  408b19:	cmp    DWORD PTR [edx+0x73],ecx
  408b1c:	xchg   esp,eax
  408b1d:	imul   eax,DWORD PTR [edi+0x7c],0x70
  408b21:	sub    dh,BYTE PTR [edx]
  408b23:	cmp    eax,0x13e2e600
  408b28:	mov    dl,0x36
  408b2a:	std    
  408b2b:	stos   DWORD PTR es:[edi],eax
  408b2c:	add    al,0xc2
  408b2e:	js     0x408b81
  408b30:	neg    DWORD PTR [edx]
  408b32:	mov    esp,DWORD PTR [ebx-0xd]
  408b35:	jno    0x408b07
  408b37:	mov    ch,0x4f
  408b39:	push   esi
  408b3a:	pop    ecx
  408b3b:	jg     0x408b9d
  408b3d:	pop    edi
  408b3e:	pop    esi
  408b3f:	sub    eax,0xc73f37a5
  408b44:	xchg   ecx,eax
  408b45:	push   es
  408b46:	nop
  408b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b48:	inc    edx
  408b49:	aad    0xd9
  408b4b:	adc    al,0x1a
  408b4d:	xchg   BYTE PTR [edx],dl
  408b4f:	mov    esi,edx
  408b51:	leave  
  408b52:	add    BYTE PTR [esi],dl
  408b54:	jmp    0x4d415782
  408b59:	or     esi,esi
  408b5b:	loope  0x408b18
  408b5d:	popa   
  408b5e:	cmp    ebx,DWORD PTR [edx]
  408b60:	xor    BYTE PTR [esi-0x5a5ece4a],bh
  408b66:	(bad)  
  408b67:	icebp  
  408b68:	push   0xfe1f34d2
  408b6d:	iret   
  408b6e:	add    DWORD PTR [eax-0x3ef80d2],eax
  408b74:	sub    dh,ch
  408b76:	sub    al,0xbb
  408b78:	inc    ebp
  408b79:	scas   al,BYTE PTR es:[edi]
  408b7a:	(bad)  
  408b7b:	inc    ebx
  408b7c:	adc    dh,ah
  408b7e:	test   DWORD PTR [eax-0x48319dee],edi
  408b84:	mov    ds:0xf3ec9432,eax
  408b89:	xchg   edx,eax
  408b8a:	popf   
  408b8b:	retf   0xa0aa
  408b8e:	dec    ecx
  408b8f:	cld    
  408b90:	(bad)  
  408b91:	sbb    DWORD PTR [edi+edx*4+0x75b2b848],ecx
  408b98:	inc    ebp
  408b99:	push   cs
  408b9a:	lds    ebp,FWORD PTR [edx-0x28]
  408b9d:	sbb    al,0xcb
  408b9f:	scas   eax,DWORD PTR es:[edi]
  408ba0:	xchg   edx,eax
  408ba1:	or     dh,ch
  408ba3:	fwait
  408ba4:	lods   al,BYTE PTR ds:[esi]
  408ba5:	aaa    
  408ba6:	xor    eax,0x4d1bac04
  408bab:	loop   0x408bee
  408bad:	aad    0x21
  408baf:	jecxz  0x408bfa
  408bb1:	push   ebx
  408bb2:	mov    bh,dh
  408bb4:	adc    BYTE PTR [ebp+0x77c68ad4],dh
  408bba:	popa   
  408bbb:	out    dx,al
  408bbc:	pop    ds
  408bbd:	pop    ss
  408bbe:	aaa    
  408bbf:	xor    eax,esp
  408bc1:	push   esp
  408bc2:	adc    DWORD PTR [edi-0x57653279],esi
  408bc8:	mov    edi,0xbaf1b282
  408bcd:	scas   al,BYTE PTR es:[edi]
  408bce:	cmp    eax,0x7c8962a1
  408bd3:	inc    eax
  408bd4:	popf   
  408bd5:	mov    ebp,DWORD PTR [ecx]
  408bd7:	jnp    0x408b93
  408bd9:	aaa    
  408bda:	lock mov ecx,0xa838da76
  408be0:	adc    al,BYTE PTR [ebx-0x10]
  408be3:	cli    
  408be4:	ret    
  408be5:	pop    ebp
  408be6:	add    DWORD PTR [esi],ecx
  408be8:	xor    BYTE PTR [edi+0x1621a6ae],cl
  408bee:	out    dx,al
  408bef:	fdivr  st,st(4)
  408bf1:	or     ecx,DWORD PTR [esi]
  408bf3:	sub    al,0xa4
  408bf5:	dec    esi
  408bf6:	mov    al,0x9b
  408bf8:	mov    bh,0xf7
  408bfa:	fsqrt  
  408bfc:	iret   
  408bfd:	push   edx
  408bfe:	inc    ecx
  408bff:	add    DWORD PTR [eax-0x56],0x5e0d569a
  408c06:	dec    edx
  408c07:	mov    fs,WORD PTR [ebx+0x75e70630]
  408c0d:	xchg   BYTE PTR [eax+0x7ef7c2fd],ah
  408c13:	ins    BYTE PTR es:[edi],dx
  408c14:	js     0x408c95
  408c16:	hlt    
  408c17:	mov    ecx,0x4ec8d291
  408c1c:	mov    ebp,DWORD PTR [ebx]
  408c1e:	(bad)  
  408c1f:	retf   0xc712
  408c22:	int3   
  408c23:	jp     0x408c78
  408c25:	iret   
  408c26:	inc    ecx
  408c27:	nop
  408c28:	(bad)  
  408c29:	faddp  st(6),st
  408c2b:	out    0xa1,eax
  408c2d:	stc    
  408c2e:	xchg   edx,eax
  408c2f:	ja     0x408bf0
  408c31:	cmp    cl,bl
  408c33:	aaa    
  408c34:	xor    ebx,ebp
  408c36:	gs icebp 
  408c38:	(bad)  
  408c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c3a:	mov    bl,0xb1
  408c3c:	in     eax,0xb2
  408c3e:	out    0x0,eax
  408c40:	scas   eax,DWORD PTR es:[edi]
  408c41:	sbb    eax,0xf4ccadda
  408c46:	jae    0x408be7
  408c48:	ror    BYTE PTR [esi+0x68192733],0x9a
  408c4f:	sahf   
  408c50:	(bad)  
  408c52:	adc    al,0xc1
  408c54:	xchg   esi,eax
  408c55:	mov    dl,0x38
  408c57:	mov    bl,0x11
  408c59:	sub    eax,0x78dc3055
  408c5e:	add    ch,ch
  408c60:	loop   0x408caa
  408c62:	jbe    0x408c21
  408c64:	not    BYTE PTR [edx-0x6ddbbf90]
  408c6a:	in     eax,0xbe
  408c6c:	push   edi
  408c6d:	add    DWORD PTR [edx],0xffffffd0
  408c70:	sub    BYTE PTR [ebx],al
  408c72:	aas    
  408c73:	ins    BYTE PTR es:[edi],dx
  408c74:	pop    esi
  408c75:	repnz imul edi,DWORD PTR [ebx+eiz*2],0x58f9ac56
  408c7d:	gs push eax
  408c7f:	xor    DWORD PTR ss:[ecx+0x7082101d],ecx
  408c86:	sahf   
  408c87:	sar    BYTE PTR [ecx],cl
  408c89:	mov    esi,0xfb7c49c8
  408c8e:	int    0xcd
  408c90:	or     esi,ecx
  408c92:	push   ss
  408c93:	js     0x408ca3
  408c95:	inc    ebp
  408c96:	mov    bh,0xe3
  408c98:	or     DWORD PTR [ebp-0x1],esi
  408c9b:	push   esi
  408c9c:	jo     0x408cfb
  408c9e:	pop    DWORD PTR [ebx+0x29]
  408ca1:	sub    eax,0x49c7fe9
  408ca6:	mov    ch,BYTE PTR [esi+0x42f90151]
  408cac:	xor    ebp,esi
  408cae:	ror    DWORD PTR [edx-0x19],1
  408cb1:	out    0x8c,eax
  408cb3:	xor    ch,BYTE PTR [ecx]
  408cb5:	sbb    eax,0xb5c76135
  408cba:	mov    edx,DWORD PTR [edi+0xc]
  408cbd:	call   0x87e3f6b0
  408cc2:	mov    cs,WORD PTR [ebp-0x5b]
  408cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc6:	leave  
  408cc7:	pavgb  mm6,QWORD PTR [ebx+0x4f]
  408ccb:	out    0xef,al
  408ccd:	je     0x408d0d
  408ccf:	pop    es
  408cd0:	pop    ebp
  408cd1:	sbb    al,0x65
  408cd3:	out    dx,al
  408cd4:	in     eax,0x5e
  408cd6:	bound  ebp,QWORD PTR [edi-0x74]
  408cd9:	pop    es
  408cda:	test   al,0xf5
  408cdc:	adc    eax,0x1815051c
  408ce1:	dec    esp
  408ce2:	inc    edx
  408ce3:	push   0xe211b722
  408ce8:	sbb    eax,0x90f37d8
  408ced:	sbb    eax,0xdab7da7b
  408cf2:	and    eax,0x149bc680
  408cf7:	iret   
  408cf8:	push   cs
  408cf9:	cdq    
  408cfa:	xchg   BYTE PTR [ecx*4-0x60ab8caa],al
  408d01:	mov    BYTE PTR [eax+0x26],bh
  408d04:	mov    ecx,0xf1802c18
  408d09:	fild   WORD PTR [ecx-0x2acdd2fb]
  408d0f:	jnp    0x408cef
  408d11:	jp     0x408cf0
  408d13:	push   es
  408d14:	data16 mov bl,0x91
  408d17:	ins    DWORD PTR es:[edi],dx
  408d18:	shl    esp,0x34
  408d1b:	scas   eax,DWORD PTR es:[edi]
  408d1c:	sub    BYTE PTR [ecx],ah
  408d1e:	jb     0x408d0e
  408d20:	push   ds
  408d21:	fnstenv [ebx]
  408d23:	sti    
  408d24:	stc    
  408d25:	jmp    0x408cc8
  408d27:	jne    0x408cc2
  408d29:	outs   dx,BYTE PTR ds:[esi]
  408d2a:	mov    edx,0x2a91f510
  408d2f:	sbb    edx,DWORD PTR [edi-0x6716a0bd]
  408d35:	mov    ebx,0xd3db2aaf
  408d3a:	in     eax,0x2b
  408d3c:	loop   0x408d81
  408d3e:	test   DWORD PTR [eax+0x61],ebp
  408d41:	jae    0x408d22
  408d43:	ret    
  408d44:	mov    eax,0x29eb184
  408d49:	xchg   edx,eax
  408d4a:	mov    bh,0x81
  408d4c:	in     eax,dx
  408d4d:	sti    
  408d4e:	xor    BYTE PTR [eax-0x3a],ch
  408d51:	stos   DWORD PTR es:[edi],eax
  408d52:	ror    BYTE PTR [eax+ebp*4-0x4e65e920],1
  408d59:	sbb    edx,DWORD PTR [eax+0x3f]
  408d5c:	add    DWORD PTR [edx-0x708bece],ebp
  408d62:	add    al,0xd
  408d64:	(bad)  [edx+0x18cbe25e]
  408d6a:	or     bh,dh
  408d6c:	and    BYTE PTR [eax+esi*8-0x42],dl
  408d70:	mov    ebx,eax
  408d72:	mov    al,ds:0xa0e2a260
  408d77:	push   esp
  408d78:	mov    ah,0x6
  408d7a:	dec    esp
  408d7b:	cmc    
  408d7c:	dec    sp
  408d7e:	ja     0x408d50
  408d80:	pushf  
  408d81:	adc    al,0xd9
  408d83:	add    eax,0x6dbde61a
  408d88:	fist   WORD PTR [edi+eax*2]
  408d8b:	pop    ss
  408d8c:	das    
  408d8d:	mov    esp,0xd9355007
  408d92:	push   ebp
  408d93:	and    ah,BYTE PTR [eax-0x27]
  408d96:	jo     0x408d8b
  408d98:	push   esi
  408d99:	adc    DWORD PTR [edi],esp
  408d9b:	or     esi,DWORD PTR [ecx-0x42d9ff11]
  408da1:	sub    dl,BYTE PTR [esi-0x7a4810e1]
  408da7:	stos   DWORD PTR es:[edi],eax
  408da8:	repz and WORD PTR [edi+edi*1],dx
  408dad:	inc    ebx
  408dae:	or     al,0xaf
  408db0:	les    edx,FWORD PTR ds:0xbc14a024
  408db6:	fisubr DWORD PTR ds:0xfdc7bf57
  408dbc:	jns    0x408e03
  408dbe:	xchg   ebp,eax
  408dbf:	nop
  408dc0:	bound  esp,QWORD PTR ds:0xdeb763e9
  408dc6:	mov    dl,0x69
  408dc8:	cmp    DWORD PTR [eax+0x505a9eab],esi
  408dce:	jns    0x408d9f
  408dd0:	pop    ebx
  408dd1:	je     0x408e2d
  408dd3:	jmp    0xd684647a
  408dd8:	outs   dx,BYTE PTR ds:[esi]
  408dd9:	pop    ebp
  408dda:	adc    BYTE PTR [edi],bl
  408ddc:	xchg   esi,eax
  408ddd:	mov    al,0xb7
  408ddf:	fistp  QWORD PTR [edi-0x13895217]
  408de5:	cwde   
  408de6:	arpl   WORD PTR [ebx+0x6],si
  408de9:	(bad)  
  408dea:	out    0x8a,eax
  408dec:	in     al,0xe5
  408dee:	(bad)  
  408def:	push   ebx
  408df0:	(bad)  
  408df2:	loop   0x408e1b
  408df4:	jns    0x408ddc
  408df6:	jo     0x408d9b
  408df8:	xor    DWORD PTR [ecx],eax
  408dfa:	fnstenv [ebp-0x2]
  408dfd:	loop   0x408da0
  408dff:	pop    ds
  408e00:	cwde   
  408e01:	mov    DWORD PTR [esi+0x5b00affb],eax
  408e07:	xor    eax,0x4f7e0a8a
  408e0c:	loopne 0x408e8c
  408e0e:	pushf  
  408e0f:	dec    edi
  408e10:	test   al,0xeb
  408e12:	pop    eax
  408e13:	sub    al,0x54
  408e15:	fdivr  QWORD PTR [eax]
  408e17:	mov    esi,0x5d19ed05
  408e1c:	cmp    eax,0xa0111c6b
  408e21:	mov    eax,0x4e1b15a6
  408e26:	imul   ebx,DWORD PTR [ebp+eiz*8-0x6f396cf9],0xc
  408e2e:	sbb    eax,0x4e1da579
  408e33:	arpl   WORD PTR [edx+0x6261461c],dx
  408e39:	in     al,dx
  408e3a:	retf   
  408e3b:	jl     0x408e59
  408e3d:	jns    0x408e5b
  408e3f:	arpl   cx,bx
  408e41:	(bad)  
  408e42:	mov    ds:0xfdcd92ba,eax
  408e47:	add    ebx,DWORD PTR [ebp+0x7c098fa]
  408e4d:	mov    al,0x4e
  408e4f:	mov    DWORD PTR [ebx],eax
  408e51:	jmp    0x8161568
  408e56:	push   edx
  408e57:	mov    ecx,0xbe7c2b93
  408e5c:	retf   0xbd25
  408e5f:	mov    al,0x43
  408e61:	jle    0x408e15
  408e63:	push   edi
  408e64:	sub    DWORD PTR [esi+ebp*4-0x57],esp
  408e68:	cmp    DWORD PTR [eax-0x6b],ecx
  408e6b:	iret   
  408e6c:	call   0x857c67ab
  408e71:	iret   
  408e72:	adc    eax,0xc034cfb5
  408e77:	lods   eax,DWORD PTR ds:[esi]
  408e78:	push   ebp
  408e79:	sub    bl,ch
  408e7b:	or     al,0x68
  408e7d:	mov    al,ds:0xbca40d74
  408e82:	jl     0x408eba
  408e84:	add    al,0xb8
  408e86:	sub    cl,ah
  408e88:	inc    edx
  408e89:	jb     0x408e6c
  408e8b:	enter  0xb957,0x34
  408e8f:	cdq    
  408e90:	out    0x6f,eax
  408e92:	cdq    
  408e93:	fstp   TBYTE PTR [eax+0x15]
  408e96:	push   ecx
  408e97:	daa    
  408e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e99:	data16 or BYTE PTR [ecx+edx*2-0x7c5a76c1],ah
  408ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea2:	xchg   esi,eax
  408ea3:	push   edi
  408ea4:	daa    
  408ea5:	xchg   edx,eax
  408ea6:	stos   DWORD PTR es:[edi],eax
  408ea7:	mov    ch,ah
  408ea9:	jae    0x408ea7
  408eab:	outs   dx,DWORD PTR ds:[esi]
  408eac:	sub    BYTE PTR [eax+0x23],dh
  408eaf:	hlt    
  408eb0:	clc    
  408eb1:	fisub  WORD PTR ds:0x671fece6
  408eb7:	addr16 xor al,0x51
  408eba:	cli    
  408ebb:	pop    eax
  408ebc:	sbb    eax,0x2f443de3
  408ec1:	sub    DWORD PTR [edx+esi*1+0x51],esi
  408ec5:	push   esi
  408ec6:	push   ecx
  408ec7:	push   ebx
  408ec8:	add    ax,0x3b52
  408ecc:	sbb    BYTE PTR [ecx+0x9],ah
  408ecf:	loopne 0x408e91
  408ed1:	push   cs
  408ed2:	test   BYTE PTR ds:0xb642c8b9,dl
  408ed8:	leave  
  408ed9:	mov    es,WORD PTR [edi+ebp*1-0x2e]
  408edd:	sbb    ebp,DWORD PTR [edi+ebp*2-0x1a]
  408ee1:	test   al,0xe9
  408ee3:	scas   al,BYTE PTR es:[edi]
  408ee4:	adc    BYTE PTR [esi],0x34
  408ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee8:	mul    edx
  408eea:	(bad)  
  408eeb:	jbe    0x408e9c
  408eed:	sbb    eax,0x26080d45
  408ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef3:	adc    edi,ebx
  408ef5:	mov    eax,ds:0x58839ea
  408efa:	jne    0x408f43
  408efc:	mov    bh,0xc0
  408efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eff:	add    eax,0x64da4f75
  408f04:	mov    eax,0xd6aaad8d
  408f09:	js     0x408ea7
  408f0b:	fiadd  WORD PTR [ebp-0x38]
  408f0e:	retf   
  408f0f:	mov    al,ds:0x188f73b3
  408f14:	sahf   
  408f15:	inc    edx
  408f16:	xor    edx,0x2504d152
  408f1c:	sbb    ecx,ebx
  408f1e:	es dec eax
  408f20:	xor    DWORD PTR [esi+0x99e8598],edx
  408f26:	xor    al,0xb9
  408f28:	inc    ebx
  408f29:	nop
  408f2a:	(bad)  
  408f2b:	cmp    eax,0xd8204524
  408f30:	push   edi
  408f31:	call   0x1a00:0xfe7c071d
  408f38:	jmp    0x408fab
  408f3a:	inc    esp
  408f3b:	(bad)  ds:0x33df5f23
  408f41:	test   al,0xab
  408f43:	imul   ecx,DWORD PTR [edx-0x4],0x44
  408f47:	mov    edi,0xfb278d45
  408f4c:	in     al,0x86
  408f4e:	cs ins BYTE PTR es:[edi],dx
  408f50:	jae    0x408f94
  408f52:	call   DWORD PTR ds:0x30b074d8
  408f58:	sub    BYTE PTR [edi+0x62528a5e],ah
  408f5e:	gs pop edx
  408f60:	dec    esi
  408f61:	jg     0x408f65
  408f63:	icebp  
  408f64:	jne    0x408f13
  408f66:	(bad)  
  408f68:	xchg   ecx,eax
  408f69:	ret    
  408f6a:	sub    eax,DWORD PTR [esi+0x43]
  408f6d:	or     edx,eax
  408f6f:	sti    
  408f70:	sbb    edx,DWORD PTR [edx+0x26f03762]
  408f76:	cld    
  408f77:	adc    DWORD PTR [edi-0x543cdd2b],eax
  408f7d:	stos   BYTE PTR es:[edi],al
  408f7e:	sbb    edi,eax
  408f80:	mov    ecx,0x59bf1c34
  408f85:	into   
  408f86:	mov    ah,0x72
  408f88:	aam    0x46
  408f8a:	sub    ebp,DWORD PTR [eax+0x5dce7466]
  408f90:	xchg   esp,eax
  408f91:	callw  0x99f6
  408f95:	adc    DWORD PTR [ebx],0x79
  408f98:	ja     0x408f4e
  408f9a:	data16 xor al,0xa0
  408f9d:	adc    edx,DWORD PTR [edx]
  408f9f:	cmc    
  408fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fa1:	jno    0x408f52
  408fa3:	ins    DWORD PTR es:[edi],dx
  408fa4:	shl    BYTE PTR [esi-0x5c],cl
  408fa7:	xor    esi,DWORD PTR [ebp-0x5a2a88f2]
  408fad:	mov    esi,0xeb823e3b
  408fb2:	mov    esp,0x104777ce
  408fb7:	inc    edx
  408fb8:	inc    edi
  408fb9:	rcl    BYTE PTR [edx],0x62
  408fbc:	xchg   esi,eax
  408fbd:	shl    bh,1
  408fbf:	ror    BYTE PTR [ecx+0x58808e52],1
  408fc5:	and    DWORD PTR [ebp+0x51],edi
  408fc8:	(bad)  
  408fca:	test   ch,bh
  408fcc:	push   es
  408fcd:	jle    0x408f6f
  408fcf:	dec    ebp
  408fd0:	and    al,0x99
  408fd2:	sti    
  408fd3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408fd5:	outs   dx,BYTE PTR ds:[esi]
  408fd6:	dec    ebx
  408fd7:	mov    edi,0x356a3053
  408fdc:	mov    al,ds:0x74d97ba6
  408fe1:	dec    edi
  408fe2:	xchg   edi,eax
  408fe3:	jno    0x408ff5
  408fe5:	ret    
  408fe6:	ja     0x409032
  408fe8:	shr    bl,0xa2
  408feb:	jb     0x408fb6
  408fed:	xchg   esi,eax
  408fee:	addr16 int 0xaf
  408ff1:	adc    eax,0x96534a06
  408ff6:	push   es
  408ff7:	fdivr  QWORD PTR [eax-0x56]
  408ffa:	jns    0x409009
  408ffc:	pop    ds
  408ffd:	sub    DWORD PTR [esi-0x36],ebp
  409000:	cmp    DWORD PTR [esi+0x2c],edx
  409003:	scas   eax,DWORD PTR es:[edi]
  409004:	dec    ebp
  409005:	xchg   DWORD PTR [ebx],edx
  409007:	scas   eax,DWORD PTR es:[edi]
  409008:	pop    esi
  409009:	push   ebp
  40900a:	mov    dh,0x5d
  40900c:	ret    0xcf43
  40900f:	mov    ds:0xb1cd5281,eax
  409014:	push   ebp
  409015:	xor    esp,DWORD PTR [eax]
  409017:	inc    edx
  409018:	(bad)  
  409019:	enter  0x4e6f,0xbb
  40901d:	and    BYTE PTR [ebx-0x34],0xd8
  409021:	fs mov esp,0x61e2c370
  409027:	fadd   st,st(4)
  409029:	out    0xaa,eax
  40902b:	out    0x95,eax
  40902d:	icebp  
  40902e:	fdiv   st,st(2)
  409030:	dec    esp
  409031:	test   al,0x4c
  409033:	jp     0x408fe2
  409035:	pop    ss
  409036:	out    0x26,al
  409038:	mov    ds:0x7683da02,eax
  40903d:	fnstenv [ebp+0x7c885f6b]
  409043:	mov    ebx,0xc771daea
  409048:	es push edi
  40904a:	xor    BYTE PTR [ecx+0x6544866a],0x6d
  409051:	fwait
  409052:	inc    esi
  409053:	rcl    DWORD PTR [ecx],1
  409055:	add    al,0x6c
  409057:	(bad)  
  409058:	mov    ds:0xbc755be9,al
  40905d:	push   eax
  40905e:	mov    ds:0x8f4a989b,al
  409063:	clc    
  409064:	popf   
  409065:	jle    0x409010
  409067:	push   bx
  409069:	stos   DWORD PTR es:[edi],eax
  40906a:	rcl    DWORD PTR [esi-0x31dc44c4],0x9a
  409071:	les    ebp,FWORD PTR [esi+0x40159994]
  409077:	mov    BYTE PTR [eax-0x80],ah
  40907a:	outs   dx,BYTE PTR ds:[esi]
  40907b:	sub    DWORD PTR [esi-0xd],edi
  40907e:	cmc    
  40907f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409080:	mov    eax,ds:0xac9c1faf
  409085:	mov    dl,0x7e
  409087:	sub    bl,bl
  409089:	out    0x4a,eax
  40908b:	out    dx,al
  40908c:	cwde   
  40908d:	test   DWORD PTR ds:0x525a0edb,ecx
  409093:	test   eax,0xddadf634
  409098:	(bad)  
  409099:	int3   
  40909a:	jno    0x4090ce
  40909c:	dec    edx
  40909d:	sbb    al,0xa1
  40909f:	jmp    0x409046
  4090a1:	adc    BYTE PTR [edi-0x784a99df],ah
  4090a7:	repnz mov ah,0x16
  4090aa:	fnsave [edx+esi*4+0x2c]
  4090ae:	sbb    BYTE PTR [edi],ah
  4090b0:	and    al,0x4
  4090b2:	rol    DWORD PTR [eax+0x1c6703de],0x37
  4090b9:	aas    
  4090ba:	inc    ecx
  4090bb:	stc    
  4090bc:	imul   ecx,DWORD PTR [edx-0x4],0x2ef72794
  4090c3:	in     al,0x8c
  4090c5:	or     al,cl
  4090c7:	mov    ecx,0xbcbfa6fc
  4090cc:	add    dl,BYTE PTR [edi]
  4090ce:	ja     0x4090f6
  4090d0:	in     eax,0x96
  4090d2:	mov    ch,BYTE PTR [edi+0x7d]
  4090d5:	in     eax,0x94
  4090d7:	push   edx
  4090d8:	dec    ebp
  4090d9:	mov    ds:0xe9f221fa,al
  4090de:	xor    al,0xbb
  4090e0:	test   BYTE PTR [edi-0x325ed80e],bl
  4090e6:	enter  0x758a,0x7e
  4090ea:	and    eax,0xfa94dd22
  4090ef:	and    eax,0x89d74425
  4090f4:	imul   ebx,ecx,0xd8cefc78
  4090fa:	lahf   
  4090fb:	sub    cx,WORD PTR [esi+0x6bdfe304]
  409102:	mov    ebx,0x58ed1d0f
  409107:	sub    DWORD PTR [ecx+edx*4-0x20b08119],ebx
  40910e:	add    eax,0xa638886c
  409113:	inc    esi
  409114:	inc    ecx
  409115:	push   ds
  409116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409117:	sub    eax,0xf6931721
  40911c:	inc    esi
  40911d:	xor    ch,0x13
  409120:	add    edi,ecx
  409122:	push   esp
  409123:	rol    DWORD PTR fs:[ebx],1
  409126:	test   al,0x99
  409128:	pop    eax
  409129:	into   
  40912a:	ins    DWORD PTR es:[edi],dx
  40912b:	enter  0xfd18,0xe9
  40912f:	pop    edi
  409130:	jecxz  0x409143
  409132:	add    bh,BYTE PTR [ebx+edx*2+0x51]
  409136:	icebp  
  409137:	xlat   BYTE PTR ds:[ebx]
  409138:	xchg   ecx,eax
  409139:	stos   DWORD PTR es:[edi],eax
  40913a:	(bad)  
  40913b:	out    0x15,al
  40913d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913e:	mov    esp,0xf10a5b9c
  409143:	repz and al,0xa0
  409146:	or     esp,DWORD PTR [ebp+0x6b]
  409149:	cdq    
  40914a:	shl    DWORD PTR [esi],1
  40914c:	sub    DWORD PTR ss:[ebp-0x582cc2a0],0x959f9f0b
  409157:	cli    
  409158:	sub    al,0x3a
  40915a:	push   cs
  40915b:	and    BYTE PTR [edx+0x5072fc36],dh
  409161:	jg     0x4091bc
  409163:	lods   al,BYTE PTR ds:[esi]
  409164:	mov    esi,0xe61ac856
  409169:	mov    esi,0x22b5559e
  40916e:	mul    DWORD PTR [ebx]
  409170:	pop    eax
  409171:	js     0x4091e5
  409173:	stos   BYTE PTR es:[edi],al
  409174:	ins    BYTE PTR es:[edi],dx
  409175:	sbb    DWORD PTR [esi-0x62],eax
  409178:	and    eax,DWORD PTR [ebx-0x7a965f54]
  40917e:	cmp    DWORD PTR [ebx-0x6f0e59a1],0x58
  409185:	fdivr  st(1),st
  409187:	cmc    
  409188:	or     dh,dh
  40918a:	mov    ecx,0x71b25f5f
  40918f:	or     esi,esi
  409191:	xchg   ebx,eax
  409192:	dec    esi
  409193:	ins    BYTE PTR es:[edi],dx
  409194:	rol    BYTE PTR [ecx+0x4847b7ee],cl
  40919a:	jl     0x40916b
  40919c:	xor    eax,esp
  40919e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40919f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a0:	adc    eax,0x153e02e0
  4091a5:	ins    DWORD PTR es:[edi],dx
  4091a6:	clc    
  4091a7:	sti    
  4091a8:	cld    
  4091a9:	or     DWORD PTR [ebx+0x38],esi
  4091ac:	fwait
  4091ad:	cld    
  4091ae:	retf   0x3aee
  4091b1:	lea    ecx,[ebx]
  4091b3:	lods   al,BYTE PTR ds:[esi]
  4091b4:	inc    esp
  4091b5:	das    
  4091b6:	jbe    0x409204
  4091b8:	or     ebp,ecx
  4091ba:	cdq    
  4091bb:	push   esp
  4091bc:	and    al,0x12
  4091be:	or     bl,ah
  4091c0:	mov    bl,ch
  4091c2:	and    DWORD PTR [ebp+0x4ae26285],ecx
  4091c8:	xchg   ecx,eax
  4091c9:	push   ebp
  4091ca:	mov    cl,0xbc
  4091cc:	(bad)  
  4091cd:	push   ss
  4091ce:	(bad)  
  4091cf:	imul   esi,DWORD PTR [ebx+0x22],0xfffffffc
  4091d3:	sub    edx,ebp
  4091d5:	xchg   ecx,eax
  4091d6:	leave  
  4091d7:	scas   al,BYTE PTR es:[edi]
  4091d8:	xchg   edi,eax
  4091d9:	sbb    al,ah
  4091db:	ficom  WORD PTR [edi+0x4a53bf58]
  4091e1:	mov    ds:0x3ac07cff,eax
  4091e6:	pop    ecx
  4091e7:	arpl   si,sp
  4091e9:	daa    
  4091ea:	inc    esp
  4091eb:	loop   0x409251
  4091ed:	in     eax,0xa4
  4091ef:	shl    BYTE PTR [edi+ecx*1-0x3a],0xd0
  4091f4:	jae    0x4091a0
  4091f6:	aam    0xa0
  4091f8:	xchg   edx,eax
  4091f9:	pop    esp
  4091fa:	scas   al,BYTE PTR es:[edi]
  4091fb:	add    esi,DWORD PTR [ebp+ebx*1+0x46]
  4091ff:	and    al,0xb1
  409201:	aaa    
  409202:	fs cbw 
  409205:	scas   al,BYTE PTR es:[edi]
  409206:	mul    DWORD PTR [ecx+0x23]
  409209:	inc    esp
  40920a:	out    dx,eax
  40920b:	cld    
  40920c:	in     al,0xf4
  40920e:	retf   
  40920f:	sbb    edx,esp
  409211:	jmp    0x409220
  409213:	sbb    DWORD PTR [edi],ecx
  409215:	jmp    0xf9a1:0xdd48f6e3
  40921c:	or     al,0xcb
  40921e:	(bad)  
  409221:	mov    edi,0xa5ed6460
  409226:	imul   eax,DWORD PTR [ebx],0x332f6fb2
  40922c:	outs   dx,BYTE PTR ds:[esi]
  40922d:	xchg   ebp,eax
  40922e:	loopne 0x409279
  409230:	lds    ecx,FWORD PTR [esi+0x7f]
  409233:	add    edx,ebp
  409235:	loop   0x409204
  409237:	imul   eax,DWORD PTR [ebx+0x1840505f],0x8bf03a64
  409241:	aam    0x73
  409243:	jno    0x4092ac
  409245:	jae    0x40922a
  409247:	es in  eax,dx
  409249:	adc    ecx,DWORD PTR [edx+0x73073fc2]
  40924f:	out    0x7f,eax
  409251:	push   esp
  409252:	sbb    al,0x2a
  409254:	jno    0x4091e6
  409256:	dec    esi
  409257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409258:	sbb    BYTE PTR [edi],0x31
  40925b:	out    0xc4,al
  40925d:	lods   eax,DWORD PTR ds:[esi]
  40925e:	loopne 0x4092a0
  409260:	outs   dx,DWORD PTR ds:[esi]
  409261:	pusha  
  409262:	aam    0xcb
  409264:	shl    DWORD PTR [eax-0x9],1
  409267:	pop    edx
  409268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409269:	jno    0x40922a
  40926b:	scas   al,BYTE PTR es:[edi]
  40926c:	jns    0x409212
  40926e:	(bad)  
  40926f:	aam    0x13
  409271:	cmp    al,0x4e
  409273:	ins    DWORD PTR es:[edi],dx
  409274:	enter  0xd26a,0x21
  409278:	mov    ah,0x12
  40927a:	cld    
  40927b:	frstor [ebx+ecx*4+0x1c]
  40927f:	dec    esi
  409280:	push   ds
  409281:	sti    
  409282:	mov    ecx,esi
  409284:	pop    eax
  409285:	sahf   
  409286:	ss dec esi
  409288:	addr16 ret 
  40928a:	outs   dx,BYTE PTR ds:[esi]
  40928b:	and    al,0x43
  40928d:	test   eax,0xd0ec8d87
  409292:	stos   BYTE PTR es:[edi],al
  409293:	or     BYTE PTR [ecx+edi*4-0xe],bh
  409297:	or     edx,DWORD PTR [edi-0x22]
  40929a:	pop    eax
  40929b:	call   0x6eb8:0x4f84cb89
  4092a2:	jns    0x4092b7
  4092a4:	jle    0x40922e
  4092a6:	stos   DWORD PTR es:[edi],eax
  4092a7:	(bad)  
  4092a8:	xor    al,0x2d
  4092aa:	sub    edx,DWORD PTR [edx+ebx*2]
  4092ad:	sbb    bh,BYTE PTR [eax-0x123ecc7a]
  4092b3:	mov    al,0xec
  4092b5:	ret    0x9338
  4092b8:	and    al,0xab
  4092ba:	pop    es
  4092bb:	and    eax,0x7eb28829
  4092c0:	jae    0x4092b6
  4092c2:	and    esp,esi
  4092c4:	mov    edi,edx
  4092c6:	sbb    ecx,eax
  4092c8:	jo     0x409272
  4092ca:	xchg   edi,eax
  4092cb:	test   eax,0x9f8bebe4
  4092d0:	leave  
  4092d1:	std    
  4092d2:	mov    dh,0x84
  4092d4:	dec    ecx
  4092d5:	and    eax,0x59ab2a00
  4092da:	sbb    al,BYTE PTR [ebx-0x627a7dc4]
  4092e0:	cmp    BYTE PTR ds:0x9c997cf,cl
  4092e6:	mov    ds:0x50007171,al
  4092eb:	outs   dx,DWORD PTR ds:[esi]
  4092ec:	inc    esp
  4092ed:	add    al,0xa6
  4092ef:	mov    ebp,0x86d6d406
  4092f4:	xor    ecx,ecx
  4092f6:	sbb    ch,BYTE PTR [edi+0x45]
  4092f9:	fcom   DWORD PTR [edi]
  4092fb:	ss in  eax,dx
  4092fd:	ins    DWORD PTR es:[edi],dx
  4092fe:	mov    eax,ds:0x53f28e7c
  409303:	sub    ebp,DWORD PTR [eax+0x71]
  409306:	loop   0x409363
  409308:	inc    ecx
  409309:	mov    ecx,0xd6a75860
  40930e:	jb     0x40935e
  409310:	cwde   
  409311:	add    eax,0x2c490eee
  409316:	pusha  
  409317:	xor    al,ah
  409319:	push   eax
  40931a:	xor    eax,0xb4c51cf8
  40931f:	es sahf 
  409321:	mov    BYTE PTR [edx],cl
  409323:	outs   dx,BYTE PTR ds:[esi]
  409324:	or     cl,BYTE PTR [ecx+0x79f43388]
  40932a:	jae    0x4092b1
  40932c:	pop    ds
  40932d:	fadd   QWORD PTR [esi+0x20]
  409330:	mov    dh,0xb6
  409332:	daa    
  409333:	and    eax,0x70afcdcf
  409338:	out    0xee,eax
  40933a:	rcl    BYTE PTR [edi+0x45],1
  40933d:	cmp    BYTE PTR [edi],bl
  40933f:	fld    TBYTE PTR ds:0x4cbdd063
  409345:	xchg   ebx,eax
  409346:	fs or  eax,0x24b253e1
  40934c:	jne    0x4093a1
  40934e:	call   0x252d:0x31680fe
  409355:	ss push ecx
  409357:	mov    al,ds:0x706c0e8c
  40935c:	cmc    
  40935d:	inc    sp
  40935f:	mov    ah,BYTE PTR ds:0xfbaa6ee0
  409365:	imul   esi
  409367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409368:	arpl   WORD PTR [ebx-0x53],ax
  40936b:	in     eax,0x3c
  40936d:	cs cmp al,0xbb
  409370:	lods   al,BYTE PTR ds:[esi]
  409371:	xor    dh,BYTE PTR [eax]
  409373:	je     0x4093bc
  409375:	mov    al,ds:0xd79cc897
  40937a:	(bad)  
  40937b:	lds    edi,FWORD PTR [ebx+edi*4+0x36c2ead4]
  409382:	push   esi
  409383:	xchg   ebx,eax
  409384:	repnz leave 
  409386:	inc    eax
  409387:	pop    edi
  409388:	aaa    
  409389:	in     eax,dx
  40938a:	icebp  
  40938b:	(bad)  
  40938c:	and    dh,BYTE PTR [eax+0x76]
  40938f:	in     al,0x59
  409391:	jecxz  0x409358
  409393:	jmp    0xed63dbdc
  409398:	test   DWORD PTR [eax+ecx*4+0x1537a895],0x5401f8db
  4093a3:	aaa    
  4093a4:	enter  0x6bd2,0x9c
  4093a8:	push   0xffffff94
  4093aa:	xor    ecx,ecx
  4093ac:	push   ss
  4093ad:	inc    esi
  4093ae:	popf   
  4093af:	push   edi
  4093b0:	push   eax
  4093b1:	mov    ds:0x9b2a1798,eax
  4093b6:	xchg   DWORD PTR [edi+ebp*1-0x2c],ecx
  4093ba:	or     al,0xe1
  4093bc:	pop    ecx
  4093bd:	call   0x63db:0x8a7b2391
  4093c4:	fstp   DWORD PTR [esi-0x27]
  4093c7:	scas   al,BYTE PTR es:[edi]
  4093c8:	(bad)  
  4093c9:	adc    BYTE PTR [ebx],cl
  4093cb:	cmp    al,BYTE PTR [eax-0x3f74626d]
  4093d1:	cmp    eax,0x95db623e
  4093d6:	(bad)  
  4093d7:	sar    DWORD PTR [eax-0x2],0x5
  4093db:	pop    ecx
  4093dc:	in     al,dx
  4093dd:	xchg   DWORD PTR [esi+edi*4+0x5c],eax
  4093e1:	inc    esp
  4093e2:	cmp    ebx,DWORD PTR [edx]
  4093e4:	jle    0x4093ce
  4093e6:	imul   edx,DWORD PTR gs:[esi+0x26],0xb2bb084
  4093ee:	xor    ecx,edi
  4093f0:	mov    ds:0x8f8429e,eax
  4093f5:	cld    
  4093f6:	mov    al,0x17
  4093f8:	adc    al,0xe1
  4093fa:	int3   
  4093fb:	mov    dl,0xf5
  4093fd:	jmp    0x5152:0xb3ba4051
  409404:	jns    0x4093e8
  409406:	mov    bh,0x9d
  409408:	push   edi
  409409:	test   DWORD PTR [edx+ebx*8-0x27b407e2],edi
  409410:	fxch   st(0)
  409412:	stc    
  409413:	loop   0x40939d
  409415:	sbb    dl,BYTE PTR [eax]
  409417:	pusha  
  409418:	inc    esi
  409419:	xchg   esp,eax
  40941b:	xor    DWORD PTR [eax],edx
  40941d:	mov    ?,WORD PTR [edi+ebx*2]
  409420:	xor    BYTE PTR [ecx],bl
  409422:	mov    eax,0x8fa52cc9
  409427:	add    DWORD PTR [edi+0x11],esi
  40942a:	xchg   BYTE PTR [ecx-0x71bba413],al
  409430:	or     edi,DWORD PTR ds:0xe5491c63
  409436:	mov    edi,0x64f64061
  40943b:	outs   dx,BYTE PTR ds:[esi]
  40943d:	lock neg DWORD PTR es:[edx]
  409441:	jl     0x409402
  409443:	(bad)  
  409445:	sbb    al,0x76
  409447:	pop    ss
  409448:	scas   eax,DWORD PTR es:[edi]
  409449:	aaa    
  40944a:	jp     0x409433
  40944c:	dec    ebp
  40944d:	xor    BYTE PTR [ebp+ebx*8+0x53],dl
  409451:	test   eax,0x1138337d
  409456:	out    dx,al
  409457:	into   
  409458:	adc    eax,0xd799a026
  40945d:	pop    edx
  40945e:	aad    0xf9
  409460:	in     al,0x1c
  409462:	int    0xe0
  409464:	mov    al,BYTE PTR [edx]
  409466:	sub    esi,0xffffffc2
  409469:	xchg   esi,eax
  40946a:	clc    
  40946b:	aad    0x4
  40946d:	add    ebx,DWORD PTR [ebx]
  40946f:	xchg   ecx,eax
  409470:	cmp    DWORD PTR [ebx],edi
  409472:	jnp    0x4094f0
  409474:	push   cs
  409475:	mov    eax,ds:0xa429c0f5
  40947a:	int3   
  40947b:	mov    ecx,0x6420372
  409480:	call   0x6139:0x84a04162
  409487:	sbb    ah,BYTE PTR [bx+di-0x1d]
  40948b:	or     ebx,DWORD PTR [edx+0x5d357897]
  409491:	jl     0x40949d
  409493:	pop    ecx
  409494:	xchg   edi,eax
  409495:	test   esi,esi
  409497:	lahf   
  409498:	add    eax,0xd1bd260
  40949d:	call   0xe699:0xa3743107
  4094a4:	adc    al,0x4b
  4094a6:	cmp    ah,BYTE PTR ds:0xdf7c6ea5
  4094ac:	enter  0x41e6,0xe2
  4094b0:	cld    
  4094b1:	int    0x71
  4094b3:	sbb    BYTE PTR [ecx],ah
  4094b5:	jns    0x409438
  4094b7:	ret    
  4094b8:	ror    ch,0x78
  4094bb:	jbe    0x4094e4
  4094bd:	mov    ch,0x13
  4094bf:	lea    edi,[esi+0x57fbe29f]
  4094c5:	dec    eax
  4094c6:	mov    eax,0x9b837cc4
  4094cb:	jno    0x4094a4
  4094cd:	les    ecx,FWORD PTR [esi-0x2a]
  4094d0:	aas    
  4094d1:	pop    ebx
  4094d2:	ds ss push esp
  4094d5:	mov    eax,0xabebbe4b
  4094da:	mov    dh,BYTE PTR [edx-0x4b]
  4094dd:	jp     0x4094a2
  4094df:	mov    al,ds:0xacf6b86d
  4094e4:	test   BYTE PTR [edi-0x39],bl
  4094e7:	and    bl,bl
  4094e9:	cwde   
  4094ea:	hlt    
  4094eb:	sbb    BYTE PTR [esi],ah
  4094ed:	mov    cl,0x82
  4094ef:	scas   eax,DWORD PTR es:[edi]
  4094f0:	or     eax,DWORD PTR [edx]
  4094f2:	frstor [eax+0x0]
  4094f5:	outs   dx,DWORD PTR ds:[esi]
  4094f6:	cmp    BYTE PTR [edi-0x5b258055],dh
  4094fc:	xchg   esi,ebx
  4094fe:	adc    BYTE PTR [edx],dl
  409500:	xlat   BYTE PTR ds:[ebx]
  409501:	enter  0x42,0xd
  409505:	inc    edx
  409506:	(bad)  
  409508:	scas   eax,DWORD PTR es:[edi]
  409509:	mov    cl,0x56
  40950b:	jge    0x40957f
  40950d:	imul   ebp,DWORD PTR [eax],0xffffffaf
  409510:	int    0x2d
  409512:	ss mov edi,0x969886ec
  409518:	aad    0x4
  40951a:	dec    esi
  40951b:	add    ah,ah
  40951d:	sbb    esi,edx
  40951f:	(bad)  
  409520:	rol    BYTE PTR [edx+0x75f5c711],1
  409526:	in     al,dx
  409527:	aaa    
  409528:	jb     0x4094af
  40952a:	sub    DWORD PTR [edi],esp
  40952c:	ja     0x40957b
  40952e:	adc    eax,0x5a02986b
  409533:	jmp    0x2eb3:0x71d5e32a
  40953a:	jp     0x4094cd
  40953c:	ret    
  40953d:	mov    eax,0x6720a4f9
  409542:	enter  0xfe9a,0xaa
  409546:	popa   
  409547:	imul   eax,DWORD PTR [ecx-0x44],0x27
  40954b:	inc    esp
  40954c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40954d:	push   0x8
  40954f:	cmp    DWORD PTR [ebp-0x47],ecx
  409552:	in     eax,dx
  409553:	inc    ebx
  409554:	pop    edx
  409555:	aam    0x99
  409557:	inc    eax
  409558:	cdq    
  409559:	in     al,dx
  40955a:	stos   DWORD PTR es:[edi],eax
  40955b:	leave  
  40955c:	pop    ebx
  40955d:	cld    
  40955e:	iret   
  40955f:	pop    ebx
  409560:	mov    bh,0x84
  409562:	pop    es
  409563:	iret   
  409564:	sbb    bh,BYTE PTR [edx-0x178f2603]
  40956a:	sbb    DWORD PTR [ecx+0x710624d1],ecx
  409570:	fisub  DWORD PTR [edi]
  409572:	in     al,0x85
  409574:	mov    WORD PTR [ebx],es
  409576:	inc    eax
  409577:	add    ch,dh
  409579:	mov    esp,0x72de8dd
  40957e:	push   ecx
  40957f:	and    al,0xfa
  409581:	mov    bl,0xbc
  409583:	jne    0x4095d2
  409585:	push   ds
  409586:	push   ss
  409587:	retf   
  409588:	jb     0x40957e
  40958a:	hlt    
  40958b:	mov    ?,WORD PTR [eax]
  40958d:	push   ss
  40958e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40958f:	mov    al,BYTE PTR [edi-0x1a]
  409592:	mov    edx,DWORD PTR [eax-0x3d]
  409595:	or     BYTE PTR [ecx-0x42ea9dde],cl
  40959b:	imul   edi,DWORD PTR [ebx+0x3b32e813],0x4a
  4095a2:	sbb    DWORD PTR [edx-0x5d],esi
  4095a5:	xor    al,0xce
  4095a7:	repz iret 
  4095a9:	inc    esi
  4095aa:	adc    BYTE PTR [esi+0x3f],bh
  4095ad:	mov    ah,BYTE PTR [edi-0x6b]
  4095b0:	pushf  
  4095b1:	(bad)  
  4095b2:	xchg   ebp,eax
  4095b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b4:	idiv   BYTE PTR ds:0x12ee781a
  4095ba:	jge    0x409574
  4095bc:	adc    al,0xad
  4095be:	mov    al,0xae
  4095c0:	fiadd  WORD PTR [esi+0x440b6a86]
  4095c6:	cdq    
  4095c7:	icebp  
  4095c8:	xor    BYTE PTR [eax+0x8],cl
  4095cb:	cmp    al,0xca
  4095cd:	dec    edi
  4095ce:	push   edi
  4095cf:	fs js  0x4095fe
  4095d2:	imul   eax,DWORD PTR [edx+0x5b],0x70aa6c84
  4095d9:	fcmovnb st,st(5)
  4095db:	inc    ebp
  4095dc:	mov    edx,0x361d841
  4095e1:	jmp    0x4095c4
  4095e3:	ins    DWORD PTR es:[edi],dx
  4095e4:	inc    ebp
  4095e5:	jo     0x40961f
  4095e7:	add    eax,0x4561184
  4095ec:	mov    ecx,0x57babe68
  4095f1:	repnz mov esi,0xdaf51b2c
  4095f7:	and    al,0x0
  4095f9:	hlt    
  4095fa:	adc    ebp,ebx
  4095fc:	ins    DWORD PTR es:[edi],dx
  4095fd:	push   edi
  4095fe:	cmp    eax,0x246d09e2
  409603:	jmp    0x7a880953
  409608:	stc    
  409609:	jl     0x40963c
  40960b:	dec    ecx
  40960c:	jp     0x4095a2
  40960e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40960f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409610:	pop    ss
  409611:	mov    esi,0x297b8a12
  409616:	repz int 0x27
  409619:	popf   
  40961a:	imul   bx,bp,0xffa9
  40961e:	jge    0x409677
  409620:	imul   edx,DWORD PTR [eax-0x1698705f],0xffffff9a
  409627:	push   edx
  409628:	dec    edi
  409629:	std    
  40962a:	rol    BYTE PTR [ecx-0x3c],1
  40962d:	dec    esi
  40962e:	inc    ebx
  40962f:	clc    
  409630:	jbe    0x409689
  409632:	adc    esp,DWORD PTR [ecx]
  409634:	lock repz stc 
  409637:	bound  edi,QWORD PTR gs:[ecx-0x5f]
  40963b:	pop    ss
  40963c:	adc    eax,0x38515725
  409641:	xor    eax,0xbbb20ebc
  409646:	dec    edx
  409647:	call   0x6898:0x6a837f50
  40964e:	xor    esp,DWORD PTR [edx-0x69]
  409651:	jg     0x40960d
  409653:	aam    0xfe
  409655:	sub    eax,0x5316b6f6
  40965a:	mov    ch,0x52
  40965c:	inc    ecx
  40965d:	stos   BYTE PTR es:[edi],al
  40965e:	xor    eax,0xc377a707
  409663:	mov    ebx,0x4b7e0e64
  409668:	fcmovb st,st(2)
  40966a:	xor    eax,0xf9bdf5a6
  40966f:	push   ebp
  409670:	cmp    al,0x89
  409672:	dec    ebx
  409673:	repz push ecx
  409675:	xor    ch,BYTE PTR [ebx+0x3]
  409678:	mov    ch,0x7b
  40967a:	ja     0x4096cf
  40967c:	rol    DWORD PTR [esi-0x32],1
  40967f:	pop    ebp
  409680:	clc    
  409681:	jae    0x40961a
  409683:	xor    dh,ch
  409685:	addr16 and eax,0xbbae8ac3
  40968b:	test   BYTE PTR ds:0x63466fb9,ch
  409691:	nop
  409692:	cmc    
  409693:	xor    BYTE PTR [edi],bl
  409695:	loopne 0x409711
  409697:	mov    ds,esi
  409699:	sbb    al,BYTE PTR [edx-0x3950ae82]
  40969f:	data16 ins BYTE PTR es:[edi],dx
  4096a1:	ins    DWORD PTR es:[edi],dx
  4096a2:	test   DWORD PTR [ebp+eax*4+0x52],edi
  4096a6:	pushf  
  4096a7:	dec    ecx
  4096a8:	and    eax,0xc287ff28
  4096ad:	clc    
  4096ae:	loop   0x4096bc
  4096b0:	and    al,0x80
  4096b2:	leave  
  4096b3:	mov    ds:0xdd2a8f2,eax
  4096b8:	jo     0x4096f4
  4096ba:	push   ebx
  4096bb:	sbb    al,0x40
  4096bd:	or     al,BYTE PTR [edx+0x30]
  4096c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c1:	sbb    al,0x0
  4096c3:	sub    eax,0x784caec2
  4096c8:	or     DWORD PTR [eax-0x73],edx
  4096cb:	inc    ebx
  4096cc:	push   0x773670de
  4096d1:	push   ebp
  4096d2:	cvtps2pd xmm4,QWORD PTR [ebx+0x7b]
  4096d6:	and    al,0x4f
  4096d8:	cld    
  4096d9:	xor    DWORD PTR [ebx],edx
  4096db:	out    dx,al
  4096dc:	nop
  4096dd:	xchg   BYTE PTR [edx-0x7],al
  4096e0:	mov    cs,WORD PTR [edx-0x691878ff]
  4096e6:	js     0x409679
  4096e8:	into   
  4096e9:	shl    BYTE PTR [edx],0x6e
  4096ec:	icebp  
  4096ed:	xchg   ecx,eax
  4096ee:	sbb    ch,BYTE PTR [esi+0x63]
  4096f1:	mov    ch,0xa1
  4096f3:	and    bl,al
  4096f5:	(bad)  
  4096f6:	imul   esp,esp,0x4160cfd5
  4096fc:	std    
  4096fd:	not    DWORD PTR [ecx-0x43]
  409700:	dec    ecx
  409701:	and    ch,ch
  409703:	adc    eax,0x95e73875
  409708:	std    
  409709:	aad    0x62
  40970b:	inc    eax
  40970c:	and    al,0x5f
  40970e:	inc    ebx
  40970f:	bnd jmp 0xb9b930ba
  409715:	retf   
  409716:	cmp    al,0xa3
  409718:	fs mov al,ch
  40971b:	not    BYTE PTR [esi]
  40971d:	mov    DWORD PTR [ebx-0x72],eax
  409720:	inc    esi
  409721:	repnz xor ebx,DWORD PTR [esi]
  409724:	mov    ah,0xcd
  409726:	ror    cl,0xd8
  409729:	out    0xfb,al
  40972b:	int3   
  40972c:	ror    BYTE PTR [eax],cl
  40972e:	jae    0x40972e
  409730:	test   al,0x6b
  409732:	sub    BYTE PTR [ecx+0x3a2277e9],0xf0
  409739:	shl    ecx,0x2a
  40973c:	dec    esp
  40973d:	sub    DWORD PTR [ecx+0x29],eax
  409740:	xchg   edi,eax
  409741:	ins    DWORD PTR es:[edi],dx
  409742:	push   cs
  409743:	call   0x81a9dfd3
  409748:	xor    ebx,DWORD PTR [esi-0x5453d40d]
  40974e:	aam    0x4
  409750:	xor    ebp,DWORD PTR [esi-0x3e]
  409753:	pop    es
  409754:	and    ah,BYTE PTR [esp+esi*1-0x507e4599]
  40975b:	shl    DWORD PTR [esi],0x8a
  40975e:	push   esp
  40975f:	stos   DWORD PTR es:[edi],eax
  409760:	test   BYTE PTR [eax-0x37],ah
  409763:	(bad)  
  409764:	std    
  409765:	scas   eax,DWORD PTR es:[edi]
  409766:	ins    DWORD PTR es:[edi],dx
  409767:	imul   esi,DWORD PTR [ebp-0x46],0x77
  40976b:	stc    
  40976c:	lds    edi,FWORD PTR [esi+eiz*8+0x75f68606]
  409773:	and    ch,BYTE PTR [edi+0x619d25cb]
  409779:	jge    0x4097cf
  40977b:	(bad)  
  40977c:	loope  0x4097dc
  40977e:	pop    edx
  40977f:	(bad)  [edx-0x39]
  409782:	out    dx,eax
  409783:	cmp    eax,0xb0fce553
  409788:	xor    al,0x24
  40978a:	fimul  DWORD PTR [edx+0x73]
  40978d:	mov    al,0xe4
  40978f:	mov    dh,BYTE PTR [edx-0x68484a02]
  409795:	gs stc 
  409797:	popf   
  409798:	xlat   BYTE PTR ds:[ebx]
  409799:	dec    esp
  40979a:	cwde   
  40979b:	mov    ds:0xd5e76ea7,al
  4097a0:	fisttp WORD PTR [eax+0x46]
  4097a3:	or     bl,BYTE PTR [eax]
  4097a5:	cli    
  4097a6:	fld    TBYTE PTR [ecx+0x5e87d022]
  4097ac:	into   
  4097ad:	fist   WORD PTR [edx-0x73005837]
  4097b3:	imul   ebp,DWORD PTR [edx+esi*4+0x415ee4f6],0x58
  4097bb:	or     ah,BYTE PTR [ecx+edx*8]
  4097be:	pop    si
  4097c0:	and    eax,0x8b7e5257
  4097c5:	test   eax,0x228640bf
  4097ca:	jnp    0x409832
  4097cc:	(bad)  
  4097cd:	jge    0x40980f
  4097cf:	inc    ecx
  4097d0:	dec    esi
  4097d1:	sti    
  4097d2:	enter  0x7837,0x3
  4097d6:	stos   BYTE PTR es:[edi],al
  4097d7:	adc    edx,DWORD PTR [edx]
  4097d9:	(bad)  
  4097da:	ds ds xchg edi,eax
  4097dd:	and    edi,DWORD PTR [ebx]
  4097df:	(bad)  
  4097e0:	leave  
  4097e1:	dec    esp
  4097e2:	pushf  
  4097e3:	add    ch,bl
  4097e5:	add    BYTE PTR [esi-0x4d7b7e32],bh
  4097eb:	pushf  
  4097ec:	xchg   DWORD PTR [esi-0x6b5e9fce],esi
  4097f2:	hlt    
  4097f3:	outs   dx,DWORD PTR ds:[esi]
  4097f4:	in     al,dx
  4097f5:	push   ds
  4097f6:	mov    eax,ds:0x509ac4c4
  4097fb:	imul   esi,DWORD PTR [ecx+0x2b],0xb0924e30
  409802:	retf   
  409803:	bound  edi,QWORD PTR [edi-0x66ff7be4]
  409809:	mov    ecx,0xac574364
  40980e:	fldl2e 
  409810:	xchg   esp,eax
  409811:	ror    bl,cl
  409813:	pusha  
  409814:	jnp    0x40988b
  409816:	jp     0x409862
  409818:	jp     0x4097a4
  40981a:	test   DWORD PTR [eax-0x2efad777],eax
  409820:	xchg   edx,eax
  409821:	fcom   DWORD PTR [ecx-0x31]
  409824:	mov    esi,0x9292353b
  409829:	mov    ecx,0xaa7b491f
  40982e:	addr16 repnz adc al,0x5c
  409832:	mov    ebp,es
  409834:	jl     0x4097fe
  409836:	xchg   DWORD PTR [ebx-0x49],ecx
  409839:	(bad)  
  40983b:	popa   
  40983c:	xor    bh,BYTE PTR ds:0xa9e541d9
  409842:	dec    ecx
  409843:	xor    eax,0x4c75556a
  409848:	mov    edi,cs
  40984a:	test   al,0x82
  40984c:	(bad)  ds:[edi-0x27]
  409850:	call   0x7e3d:0x704af0a5
  409857:	int    0x57
  409859:	xchg   ebx,eax
  40985a:	push   edi
  40985b:	nop
  40985c:	arpl   WORD PTR [eax],di
  40985e:	bound  ecx,QWORD PTR [eax+ebp*2+0x4b637b0d]
  409865:	inc    ecx
  409866:	mov    dl,0x19
  409868:	adc    cl,BYTE PTR [ebp+ecx*1+0x6c1202fc]
  40986f:	pushf  
  409870:	mov    ds:0xc6c04130,al
  409875:	or     dl,BYTE PTR [esp+eiz*2]
  409878:	stc    
  409879:	std    
  40987a:	cmp    al,0xa8
  40987c:	or     DWORD PTR [ecx+ebp*8],esp
  40987f:	in     al,0x12
  409881:	sar    DWORD PTR [ebx],cl
  409883:	jb     0x4098a2
  409885:	arpl   WORD PTR [ecx],bx
  409887:	js     0x4098a3
  409889:	arpl   WORD PTR [ebp-0x1d],di
  40988c:	sahf   
  40988d:	mov    ds:0xbca53191,eax
  409892:	out    0x39,al
  409894:	push   cs
  409895:	jo     0x40989a
  409897:	gs add ch,0x32
  40989b:	push   edi
  40989c:	in     eax,dx
  40989d:	push   edi
  40989e:	cs (bad) 
  4098a0:	ret    0xb95e
  4098a3:	mov    dl,ch
  4098a5:	sbb    ecx,DWORD PTR [ebx]
  4098a7:	in     al,0xc2
  4098a9:	out    dx,al
  4098aa:	fnstsw WORD PTR [ebx-0x529218db]
  4098b0:	sub    eax,0x177c52a9
  4098b5:	lock call 0xa13df1b
  4098bb:	out    0xee,al
  4098bd:	cmp    BYTE PTR [eax],cl
  4098bf:	pop    ss
  4098c0:	cmp    al,0xde
  4098c2:	xor    bh,BYTE PTR [eax+0x46]
  4098c5:	mov    edi,0xf44ad13c
  4098ca:	or     BYTE PTR [eax+0x4a],bl
  4098cd:	add    al,0xc3
  4098cf:	test   al,0x14
  4098d1:	gs std 
  4098d3:	dec    esp
  4098d4:	mov    gs,WORD PTR [ebp-0x23e43617]
  4098da:	inc    edx
  4098db:	jg     0x40991c
  4098dd:	retf   0xb50f
  4098e0:	jmp    0xca3ad790
  4098e5:	mov    dh,0x77
  4098e7:	and    DWORD PTR [ecx+0x43cf8d82],esp
  4098ed:	push   cs
  4098ee:	jo     0x4098eb
  4098f0:	retf   
  4098f1:	dec    edi
  4098f2:	xchg   dl,ah
  4098f4:	push   0xffffffc1
  4098f6:	out    0x8f,eax
  4098f8:	dec    edx
  4098f9:	retf   0x4c92
  4098fc:	sub    esp,DWORD PTR [ebp+0x41]
  4098ff:	push   ebp
  409900:	mov    BYTE PTR [esi-0x6],0xb0
  409904:	lods   eax,DWORD PTR ds:[esi]
  409905:	mov    ds:0x1271fc13,al
  40990a:	cmc    
  40990b:	loopne 0x409895
  40990d:	add    DWORD PTR [ecx],ebx
  40990f:	(bad)  
  409911:	pop    edx
  409912:	pop    ecx
  409913:	fs xchg edi,eax
  409915:	fiadd  DWORD PTR [edx+0x2fea873a]
  40991b:	xchg   edx,eax
  40991c:	and    DWORD PTR [esi-0x77cc1fc2],esp
  409922:	jns    0x409920
  409924:	pop    edi
  409925:	cwde   
  409926:	xchg   esp,eax
  409927:	adc    dh,BYTE PTR [ecx+0x3b]
  40992a:	test   BYTE PTR [edx+0x33b9ef92],dl
  409930:	mov    ebx,0x20108bb6
  409935:	xor    DWORD PTR [eax-0x2b1b2c6f],ecx
  40993b:	sub    eax,0xca1f541e
  409940:	sti    
  409941:	pop    ecx
  409942:	push   esi
  409944:	test   eax,0x7be66308
  409949:	xchg   DWORD PTR [ebx-0x4],esi
  40994c:	inc    ebp
  40994d:	test   DWORD PTR [esi],ebp
  40994f:	mov    eax,0x5929907e
  409954:	div    BYTE PTR [ecx+0x42]
  409957:	test   al,0x37
  40995a:	mov    fs,WORD PTR [edx-0x33f764c0]
  409960:	or     dl,BYTE PTR [esi]
  409962:	out    dx,al
  409963:	ja     0x40996b
  409965:	les    ebx,FWORD PTR [edi+0x2c335d00]
  40996b:	cdq    
  40996c:	in     eax,0x14
  40996e:	adc    bl,al
  409970:	or     ecx,DWORD PTR ds:0x89826f3f
  409976:	adc    eax,0x6c8b54eb
  40997b:	repz adc edi,DWORD PTR [esi]
  40997e:	imul   edx,DWORD PTR [eax+0x71a2a666],0xffffff9c
  409985:	mov    ds,WORD PTR [ebx-0x68e0ad5d]
  40998b:	pop    ss
  40998c:	retf   0x8001
  40998f:	stc    
  409990:	push   ecx
  409991:	xor    edx,0x199d70e3
  409997:	fld    st(5)
  409999:	test   ebx,edx
  40999b:	mov    edi,0xd28c8618
  4099a0:	into   
  4099a1:	fdivr  st(2),st
  4099a3:	xor    al,0xa0
  4099a5:	push   eax
  4099a6:	pop    es
  4099a7:	sbb    esp,DWORD PTR [eax-0x63a0bbc4]
  4099ad:	ret    
  4099ae:	inc    ebx
  4099af:	outs   dx,DWORD PTR ds:[esi]
  4099b0:	dec    edi
  4099b1:	in     al,dx
  4099b2:	and    eax,0x3b46a27b
  4099b7:	dec    edx
  4099b8:	sbb    ebp,DWORD PTR [ecx+0x78]
  4099bb:	icebp  
  4099bc:	gs leave 
  4099be:	cmp    ch,BYTE PTR [ebp+0x5d]
  4099c1:	jo     0x4099d8
  4099c3:	adc    al,BYTE PTR [edi+edx*1]
  4099c6:	and    eax,0x74888f11
  4099cb:	cmp    edi,ebx
  4099cd:	dec    edi
  4099ce:	pop    eax
  4099cf:	push   edi
  4099d0:	ss xchg edx,eax
  4099d2:	les    ebp,FWORD PTR [eax]
  4099d4:	out    0xd3,ax
  4099d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d8:	mov    edx,0x94361d9f
  4099dd:	cmp    eax,0x93bd8981
  4099e2:	push   eax
  4099e3:	(bad)  
  4099e4:	jne    0x409a36
  4099e6:	pop    ebx
  4099e7:	bound  eax,QWORD PTR [edi+0x7a]
  4099ea:	les    ecx,FWORD PTR [ecx]
  4099ec:	rcl    bh,1
  4099ee:	shl    DWORD PTR [eax+edi*2-0x3],cl
  4099f2:	out    0x5f,al
  4099f4:	ficom  DWORD PTR [edi+0x79]
  4099f7:	jb     0x409a49
  4099f9:	push   0xffffffef
  4099fb:	xchg   ecx,eax
  4099fc:	das    
  4099fd:	cmp    eax,0x8d2efddf
  409a02:	cdq    
  409a03:	rcl    BYTE PTR [esi],1
  409a05:	cmp    BYTE PTR [ebp-0x55],cl
  409a08:	lods   al,BYTE PTR ds:[esi]
  409a09:	xlat   BYTE PTR ds:[ebx]
  409a0a:	mov    BYTE PTR [ebx+0x6ec2ffb3],ch
  409a10:	nop
  409a11:	xlat   BYTE PTR ds:[ebx]
  409a12:	inc    ebp
  409a13:	imul   ecx,ebx,0x41
  409a16:	or     ch,ah
  409a18:	cmp    ah,cl
  409a1a:	push   0xffffff9b
  409a1c:	adc    esp,edi
  409a1e:	ss in  eax,dx
  409a20:	mov    ds:0xee1c427b,eax
  409a25:	lods   al,BYTE PTR ds:[esi]
  409a26:	lds    esi,FWORD PTR [ebx+0x77]
  409a29:	pop    esi
  409a2a:	and    DWORD PTR [edx-0x6c2e0fa1],edi
  409a30:	fisub  WORD PTR [edx+0x442be68d]
  409a36:	push   ss
  409a37:	popf   
  409a38:	add    DWORD PTR [edi-0x23],0x39
  409a3c:	dec    ebp
  409a3d:	stc    
  409a3e:	fcos   
  409a40:	inc    ecx
  409a41:	dec    esi
  409a42:	push   ebx
  409a43:	inc    eax
  409a44:	aam    0xdb
  409a46:	cmp    cl,0x5a
  409a49:	mov    edi,0xbfb879ff
  409a4e:	mov    ch,0x78
  409a50:	xlat   BYTE PTR ds:[ebx]
  409a51:	jecxz  0x4099de
  409a53:	add    bh,0xa0
  409a56:	lods   eax,DWORD PTR ds:[esi]
  409a57:	xor    eax,0x5492f874
  409a5c:	fs mov al,0xf8
  409a5f:	mov    cl,0xf4
  409a61:	push   esp
  409a62:	sub    ch,dl
  409a64:	pop    es
  409a65:	stos   BYTE PTR es:[edi],al
  409a66:	je     0x409a06
  409a68:	push   0xffffff8b
  409a6a:	push   0xd43a11ca
  409a6f:	add    DWORD PTR [esi],edx
  409a71:	repz cmp BYTE PTR [ebx],dl
  409a74:	cli    
  409a75:	lock test DWORD PTR [edx-0x76],0xd6c08e83
  409a7d:	(bad)
  409a81:	je     0x409b01
  409a83:	shl    BYTE PTR [eax-0x67],cl
  409a86:	dec    DWORD PTR [edi]
  409a88:	jge    0x409aa5
  409a8a:	jecxz  0x409a67
  409a8c:	cwde   
  409a8d:	sar    BYTE PTR [edi],1
  409a8f:	cwde   
  409a90:	vpunpcklbw ymm5,ymm4,YMMWORD PTR [eax]
  409a94:	xchg   esi,eax
  409a95:	leave  
  409a96:	xchg   esp,eax
  409a97:	cdq    
  409a98:	or     ebx,DWORD PTR [edi-0x72]
  409a9b:	cli    
  409a9c:	out    dx,al
  409a9d:	inc    esi
  409a9e:	mov    bh,0x80
  409aa0:	add    esi,esi
  409aa2:	jmp    0x409a87
  409aa4:	jae    0x409af2
  409aa6:	out    0xb7,eax
  409aa8:	enter  0xb5f1,0x43
  409aac:	popa   
  409aad:	clc    
  409aae:	and    eax,DWORD PTR [ecx]
  409ab0:	int3   
  409ab1:	ror    eax,0xe8
  409ab4:	mov    ecx,0xba6e0ee8
  409ab9:	ja     0x409a68
  409abb:	xor    dl,BYTE PTR [edi-0x7d5842dc]
  409ac1:	cld    
  409ac2:	in     eax,0x35
  409ac4:	in     eax,0xf0
  409ac6:	test   al,0x27
  409ac8:	mov    al,ds:0x6af7a77e
  409acd:	lahf   
  409ace:	loopne 0x409b26
  409ad0:	retf   
  409ad1:	mov    ch,0x96
  409ad3:	aaa    
  409ad4:	xchg   edx,eax
  409ad5:	ins    BYTE PTR es:[edi],dx
  409ad6:	outs   dx,DWORD PTR ds:[esi]
  409ad7:	cmp    DWORD PTR [ebx+0x799b83ff],ecx
  409add:	(bad)  
  409ade:	cmp    al,0x75
  409ae0:	test   al,0xd
  409ae2:	pop    esi
  409ae3:	pop    ds
  409ae4:	(bad)  
  409ae5:	in     al,dx
  409ae6:	inc    ch
  409ae8:	js     0x409b50
  409aea:	outs   dx,BYTE PTR ds:[esi]
  409aeb:	jg     0x409b55
  409aed:	enter  0x1613,0x4b
  409af1:	or     al,0x0
  409af3:	imul   edx,esi,0xffffff91
  409af6:	adc    eax,DWORD PTR [ebp+0x6f30a834]
  409afc:	test   DWORD PTR ds:0x67ba7cb6,ebp
  409b02:	dec    edx
  409b03:	mov    ch,0xb8
  409b05:	mov    esp,0xdc06f212
  409b0a:	aad    0xaa
  409b0c:	pop    eax
  409b0d:	int3   
  409b0e:	xor    edi,DWORD PTR [ebx+0xf]
  409b11:	out    dx,al
  409b12:	test   BYTE PTR [edi],bh
  409b14:	daa    
  409b15:	imul   BYTE PTR ds:0x91ba3e9f
  409b1b:	mov    cl,0xe7
  409b1d:	push   es
  409b1e:	push   ss
  409b1f:	lods   eax,DWORD PTR ds:[esi]
  409b20:	in     al,0x3
  409b22:	push   esp
  409b23:	mov    fs,WORD PTR [esi+ebp*8+0x33]
  409b27:	les    esp,FWORD PTR [ebp+0x795bd760]
  409b2d:	cld    
  409b2e:	add    eax,0x20ff3368
  409b34:	cmp    eax,0x264a35bf
  409b39:	xor    eax,0x825df49c
  409b3e:	xchg   ecx,eax
  409b3f:	jo     0x409b4f
  409b41:	les    edx,FWORD PTR [ebx]
  409b43:	inc    ch
  409b45:	pushf  
  409b46:	sahf   
  409b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b48:	xchg   ebp,eax
  409b49:	push   0xf217ed7e
  409b4e:	cmp    al,0xf6
  409b50:	mov    bl,0x6b
  409b52:	mov    BYTE PTR [ebp-0x7009081c],cl
  409b58:	hlt    
  409b59:	das    
  409b5a:	or     eax,0x63f81df
  409b5f:	push   ebp
  409b60:	shl    DWORD PTR [ebp-0x4918032d],cl
  409b66:	inc    esi
  409b67:	arpl   WORD PTR [ebx+0x1b],bx
  409b6a:	popa   
  409b6b:	jp     0x409be6
  409b6d:	pop    edi
  409b6e:	mov    eax,ds:0x92b04ec3
  409b73:	shr    DWORD PTR [eax],cl
  409b75:	sbb    ebp,eax
  409b77:	cmp    DWORD PTR ds:0x59bfc15b,esp
  409b7d:	cmp    edi,DWORD PTR [eax+0x67]
  409b80:	ror    DWORD PTR ds:[esi],cl
  409b83:	cmp    eax,0x5bd8671b
  409b88:	mov    bh,0xf2
  409b8a:	in     al,0x21
  409b8c:	jae    0x409b90
  409b8e:	jle    0x409bdf
  409b90:	mov    esp,0x8e18bb47
  409b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b96:	sbb    dl,BYTE PTR [eax-0x7992f5d2]
  409b9c:	add    al,0xde
  409b9e:	jbe    0x409b2f
  409ba0:	mov    dh,0x68
  409ba2:	xchg   BYTE PTR [edi-0x4de07a93],ah
  409ba8:	ss push 0x5f
  409bab:	mov    esp,0xfcaeb88e
  409bb0:	xchg   esp,eax
  409bb1:	inc    edx
  409bb2:	jae    0x409b4c
  409bb4:	mov    DWORD PTR [ecx-0x69b7ce2d],eax
  409bba:	ret    
  409bbb:	iret   
  409bbc:	inc    edx
  409bbd:	lock (bad) 
  409bbf:	cmp    eax,0x78d2ccf9
  409bc4:	(bad)  
  409bc5:	and    DWORD PTR [ebp+0x2e88ae14],esp
  409bcb:	inc    ecx
  409bcc:	push   ss
  409bcd:	xor    DWORD PTR [ecx+0x3c],0x9d4cdf48
  409bd4:	mov    edx,DWORD PTR [eax]
  409bd6:	adc    DWORD PTR [eax+0x2c],esp
  409bd9:	mov    ds:0xb7c27fb3,al
  409bde:	lock adc bh,BYTE PTR [edi-0x48]
  409be2:	sbb    eax,0xb9896073
  409be7:	mov    dh,0x46
  409be9:	push   edx
  409bea:	sbb    ah,BYTE PTR [edi-0x37]
  409bed:	xchg   DWORD PTR ds:0x2e5e1cfc,edx
  409bf3:	pop    ebx
  409bf4:	aaa    
  409bf5:	(bad)  
  409bf6:	jecxz  0x409ba8
  409bf8:	xchg   edx,eax
  409bf9:	sbb    cl,BYTE PTR [ebp-0x4e129d2e]
  409bff:	mov    edx,0x1b4d39a3
  409c04:	fild   DWORD PTR [ebp-0x39]
  409c07:	stos   BYTE PTR es:[edi],al
  409c08:	lahf   
  409c09:	ja     0x409b90
  409c0b:	shr    DWORD PTR [esi-0x47],1
  409c0e:	add    ch,BYTE PTR [esi+0x438db0d1]
  409c14:	push   0x27
  409c16:	xor    al,0x50
  409c18:	xlat   BYTE PTR ds:[ebx]
  409c19:	daa    
  409c1a:	xchg   edi,eax
  409c1b:	popf   
  409c1c:	cmp    DWORD PTR [edx],esi
  409c1e:	sar    BYTE PTR [eax],0xc7
  409c21:	xor    BYTE PTR [ebx+0x406db47d],bl
  409c27:	add    ebp,ecx
  409c29:	mov    ecx,0x99192664
  409c2e:	shr    edx,1
  409c30:	gs and eax,0x8b2f0c73
  409c36:	mov    dh,0xe9
  409c38:	push   esi
  409c39:	(bad)  
  409c3a:	jge    0x409ca4
  409c3c:	pop    ss
  409c3d:	mov    ch,0x8e
  409c3f:	outs   dx,DWORD PTR ds:[esi]
  409c40:	mov    DWORD PTR [esi+0x1abb3a54],ebp
  409c46:	retf   0xf0f1
  409c49:	mov    ds:0x5c13e0,eax
  409c4e:	add    eax,0x49b6be43
  409c53:	retf   
  409c54:	int3   
  409c55:	aam    0x69
  409c57:	ror    DWORD PTR [edx-0x2f],1
  409c5a:	and    ebp,DWORD PTR [esi+ecx*8]
  409c5d:	inc    esp
  409c5e:	popa   
  409c5f:	xor    eax,0xb7b9f321
  409c64:	ror    ecx,1
  409c66:	mov    ds:0xd33a243d,eax
  409c6b:	rcr    BYTE PTR [esi+ebx*2],0x99
  409c6f:	scas   eax,DWORD PTR es:[edi]
  409c70:	push   edi
  409c71:	retf   
  409c72:	cmc    
  409c73:	test   al,0xdf
  409c75:	sub    BYTE PTR [edi+0x50],ah
  409c78:	mov    esi,esp
  409c7a:	mov    dl,0x79
  409c7c:	xchg   ecx,eax
  409c7d:	xor    ecx,DWORD PTR [eax+0x32]
  409c80:	push   0x7066f4a3
  409c85:	out    dx,al
  409c86:	mov    DWORD PTR [eax-0x189413b2],0x779ff847
  409c90:	cs daa 
  409c92:	mov    ds:0xe88f6c08,eax
  409c97:	repz push ss
  409c99:	sbb    eax,0x7003f535
  409c9e:	jp     0x409ce2
  409ca0:	mov    eax,ds:0xef5a31f4
  409ca5:	mov    DWORD PTR [eax-0x7ce4b486],esp
  409cab:	addr16 push esi
  409cad:	push   0xffffff8a
  409caf:	and    al,0x6f
  409cb1:	in     eax,0x1e
  409cb3:	lds    ebp,FWORD PTR [esi+ecx*1]
  409cb6:	loop   0x409cb1
  409cb8:	push   0x59
  409cba:	daa    
  409cbb:	adc    esp,DWORD PTR [ecx+0x5ae4d540]
  409cc1:	add    eax,0x5d2d0a69
  409cc6:	daa    
  409cc7:	rcr    dh,cl
  409cc9:	xor    BYTE PTR [ecx],dl
  409ccb:	dec    ebx
  409ccc:	jle    0x409d06
  409cce:	test   eax,0x399005f7
  409cd3:	imul   esp,esi,0xffffffd9
  409cd6:	adc    al,0x76
  409cd8:	inc    esp
  409cd9:	push   edi
  409cda:	(bad)  
  409cdb:	or     al,0x3b
  409cdd:	test   eax,0x79274ce5
  409ce2:	into   
  409ce3:	frstor ds:0x101c9f27
  409ce9:	add    ebx,DWORD PTR [eax+0xa9e4d35]
  409cef:	sub    esi,DWORD PTR [ebx]
  409cf1:	lds    edi,FWORD PTR [edi-0x7933d1e8]
  409cf7:	ins    BYTE PTR es:[edi],dx
  409cf8:	dec    eax
  409cf9:	scas   eax,DWORD PTR es:[edi]
  409cfa:	repz mov esp,0x6b353455
  409d00:	pop    esi
  409d01:	dec    esp
  409d02:	test   BYTE PTR [edx-0x54],bh
  409d05:	mov    ds:0x31d5619a,eax
  409d0a:	fist   WORD PTR [edi+0x50]
  409d0d:	ss pop ebp
  409d0f:	ror    bh,0xd3
  409d12:	imul   edx,DWORD PTR [esi-0x7a],0xffffffcc
  409d16:	call   0x4e99:0xbc151897
  409d1d:	jl     0x409cf4
  409d1f:	add    DWORD PTR [ecx+0x2bd984ee],ebx
  409d25:	pop    edi
  409d26:	fnstcw WORD PTR [si+0x3488]
  409d2b:	test   al,0x30
  409d2d:	js     0x409d28
  409d2f:	mov    ds:0x32cf4d05,eax
  409d34:	xor    eax,0xe634f8f0
  409d39:	lods   eax,DWORD PTR ds:[esi]
  409d3a:	jae    0x409d8c
  409d3c:	sub    ebx,esi
  409d3e:	mov    ch,bh
  409d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d41:	rcl    dl,0x76
  409d44:	pop    esp
  409d45:	out    dx,eax
  409d46:	pop    ebp
  409d47:	call   FWORD PTR [edi+0x60aca70e]
  409d4d:	lods   al,BYTE PTR ds:[esi]
  409d4e:	int    0xac
  409d50:	push   edx
  409d51:	dec    edx
  409d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d53:	add    eax,DWORD PTR [edi+0x7c]
  409d56:	test   al,0xf3
  409d58:	fld    QWORD PTR [edi]
  409d5a:	shl    BYTE PTR [esi+0x74],0xaf
  409d5e:	and    DWORD PTR [esi-0x502bf2aa],ebx
  409d64:	xchg   ecx,eax
  409d65:	mov    eax,ds:0xdde3defe
  409d6a:	and    DWORD PTR [eax+0x3dca5c27],edx
  409d70:	repz adc BYTE PTR [esi+0xfa17976],dl
  409d77:	mov    ebp,0x771f2442
  409d7c:	xchg   ecx,eax
  409d7d:	inc    ebx
  409d7e:	scas   al,BYTE PTR es:[edi]
  409d7f:	rol    BYTE PTR [eax],cl
  409d81:	sub    eax,0x2f346273
  409d86:	pushf  
  409d87:	shl    DWORD PTR [eax],cl
  409d89:	cs in  eax,dx
  409d8b:	mov    al,0x87
  409d8d:	mov    al,0x74
  409d8f:	test   DWORD PTR [esi],0x3fb0c13d
  409d95:	push   eax
  409d96:	cmp    BYTE PTR [esi],dh
  409d98:	mov    eax,ds:0xfd864606
  409d9d:	push   0xea86dc98
  409da2:	sar    BYTE PTR [edi],0x7f
  409da5:	js     0x409dfc
  409da7:	push   cs
  409da8:	test   eax,0xd18ef31f
  409dad:	sbb    al,bh
  409daf:	xor    ah,BYTE PTR [eax+0x57def13a]
  409db5:	add    DWORD PTR [eax],edx
  409db7:	sbb    DWORD PTR [esp+ebp*8],0x76
  409dbb:	lods   eax,DWORD PTR ds:[esi]
  409dbc:	and    al,0x38
  409dbe:	xchg   ecx,eax
  409dbf:	push   0x7e78ff2f
  409dc4:	mov    esi,0x3f7942e3
  409dc9:	inc    esi
  409dca:	inc    eax
  409dcb:	cli    
  409dcc:	push   ds
  409dcd:	outs   dx,DWORD PTR ds:[esi]
  409dce:	pop    edi
  409dcf:	dec    ecx
  409dd0:	xlat   BYTE PTR ds:[ebx]
  409dd1:	mov    edi,0x2d7a6d91
  409dd6:	jecxz  0x409dc3
  409dd8:	int3   
  409dd9:	ficomp DWORD PTR [ebx]
  409ddb:	dec    edx
  409ddc:	sub    dl,BYTE PTR [edi+ecx*2-0x7a]
  409de0:	cmp    al,0xc4
  409de2:	push   edx
  409de3:	lahf   
  409de4:	inc    edx
  409de5:	mov    ds:0x6bd6cbfe,al
  409dea:	ja     0x409e57
  409dec:	cs jno 0x409dc3
  409def:	adc    ch,BYTE PTR [ebx]
  409df1:	push   cs
  409df2:	mov    edi,0x9e79fca0
  409df7:	jnp    0x409e0c
  409df9:	jle    0x409e70
  409dfb:	or     BYTE PTR [ebx+edx*8-0x6bf88d82],bl
  409e02:	inc    esp
  409e03:	dec    esp
  409e04:	dec    edi
  409e05:	(bad)  
  409e06:	in     eax,0x9d
  409e08:	cmp    DWORD PTR [edx+ebp*1-0x26],ebp
  409e0c:	neg    BYTE PTR [esi+0x70a283b2]
  409e12:	adc    eax,0x2bcf669f
  409e17:	ret    
  409e18:	lods   eax,DWORD PTR ds:[esi]
  409e19:	and    bh,dl
  409e1b:	iret   
  409e1c:	es add eax,0xf11a40b3
  409e22:	adc    cl,BYTE PTR [edx]
  409e24:	mov    DWORD PTR [ecx-0x2e],ebp
  409e27:	dec    eax
  409e28:	cli    
  409e29:	dec    edx
  409e2a:	xchg   edi,eax
  409e2b:	adc    DWORD PTR [edx+0xe],esi
  409e2e:	hlt    
  409e2f:	je     0x409e72
  409e31:	sbb    al,0xcf
  409e33:	lea    ebx,[edx+ebx*8+0x50066e65]
  409e3a:	dec    edx
  409e3b:	jo     0x409e98
  409e3d:	and    esp,esp
  409e3f:	cs dec eax
  409e41:	push   gs
  409e43:	sbb    ch,BYTE PTR [eax+ebx*8]
  409e46:	adc    ecx,esp
  409e48:	inc    ebx
  409e49:	scas   al,BYTE PTR es:[edi]
  409e4a:	rcr    BYTE PTR [ebp+0x6d],1
  409e4d:	cmp    eax,0xc76ad672
  409e52:	outs   dx,BYTE PTR ds:[esi]
  409e53:	data16 into 
  409e55:	(bad)  
  409e56:	pop    esp
  409e57:	push   edx
  409e58:	inc    ecx
  409e59:	xor    esp,DWORD PTR [edx-0x22]
  409e5c:	dec    edx
  409e5d:	lds    ebp,FWORD PTR [eax-0x18008e2d]
  409e63:	mov    edx,0x2147b6a7
  409e68:	push   ss
  409e69:	jl     0x409e25
  409e6b:	mov    BYTE PTR [eax-0x75],dh
  409e6e:	mov    WORD PTR [ebp+0x76bc8f83],?
  409e74:	or     ebp,DWORD PTR [edx]
  409e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e77:	lds    edi,FWORD PTR [edx+ebp*8]
  409e7a:	or     eax,0xd503174e
  409e7f:	xchg   esi,eax
  409e80:	stos   DWORD PTR es:[edi],eax
  409e81:	outs   dx,DWORD PTR ds:[esi]
  409e82:	add    ebp,ebx
  409e84:	leave  
  409e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e86:	call   0x1d78dc0f
  409e8b:	xor    BYTE PTR [ebx],bl
  409e8d:	xor    BYTE PTR [eax+0x14cecad0],al
  409e93:	sahf   
  409e94:	pop    ds
  409e95:	test   ch,0xa4
  409e98:	fisttp WORD PTR [esi]
  409e9a:	push   edi
  409e9b:	pop    esi
  409e9c:	inc    ebx
  409e9d:	add    eax,0xb6e7bcb7
  409ea2:	dec    esp
  409ea3:	(bad)  
  409ea4:	call   0xb5de2fa1
  409ea9:	cwde   
  409eaa:	pop    edx
  409eab:	loopne 0x409e59
  409ead:	ret    0xa657
  409eb0:	mov    cl,bh
  409eb2:	jle    0x409e9d
  409eb4:	pop    edi
  409eb5:	loopne 0x409ef4
  409eb7:	mov    BYTE PTR [edi+0xf194ec4],al
  409ebd:	push   ecx
  409ebe:	into   
  409ebf:	mov    bl,0xb1
  409ec1:	fst    DWORD PTR [eax+0x4914325c]
  409ec7:	sbb    DWORD PTR [esi+ebx*1+0x6dfd2fd0],ecx
  409ece:	sub    al,0x76
  409ed0:	adc    al,0xb8
  409ed2:	sbb    BYTE PTR [ebx+0xaaba628],dl
  409ed8:	popa   
  409ed9:	or     al,al
  409edb:	aas    
  409edc:	fsub   st(5),st
  409ede:	fldenv [eax]
  409ee0:	jmp    0xfb65:0x598d0d8c
  409ee7:	jae    0x409e83
  409ee9:	enter  0x6e7a,0x49
  409eed:	out    dx,eax
  409eee:	jmp    0x409ee1
  409ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef1:	jmp    0x25dd583f
  409ef6:	data16 cmp dl,BYTE PTR [ebx-0x51]
  409efa:	jb     0x409ed1
  409efc:	jmp    0x3ea4dd7f
  409f01:	mov    BYTE PTR [esi],dl
  409f03:	jbe    0x409f08
  409f05:	jns    0x409f66
  409f07:	inc    ebp
  409f08:	imul   ebx,DWORD PTR ds:0xd96b0fe1,0x1f758b4e
  409f12:	adc    ebp,ebp
  409f14:	(bad)  
  409f15:	fldenv [eax+0x3d]
  409f18:	cs inc eax
  409f1a:	lds    esp,FWORD PTR [ecx-0x30]
  409f1d:	pushf  
  409f1e:	and    ch,BYTE PTR [esi]
  409f20:	sbb    eax,0x463bc1cd
  409f25:	jl     0x409f54
  409f27:	or     esi,DWORD PTR [ecx-0x629f687e]
  409f2d:	jmp    0x409f47
  409f2f:	fidiv  WORD PTR [edi]
  409f31:	xor    BYTE PTR [ecx],dh
  409f33:	dec    ecx
  409f34:	mov    ds:0x7a6f591e,al
  409f39:	cmovnp ebx,DWORD PTR [ecx+0x2b]
  409f3d:	aam    0x5a
  409f3f:	arpl   si,di
  409f41:	es add esp,ebp
  409f44:	cmp    BYTE PTR [ecx-0xe],cl
  409f47:	clc    
  409f48:	sub    DWORD PTR [ebx+ebx*1],ebx
  409f4b:	and    al,0x98
  409f4d:	push   cs
  409f4e:	mov    ds:0x65f44e77,al
  409f53:	inc    ebx
  409f54:	repnz add BYTE PTR [ecx+0x6e],bl
  409f58:	push   ebx
  409f59:	jnp    0x409f73
  409f5b:	mov    eax,0xc7b0b5d1
  409f60:	mov    dl,0xb3
  409f62:	lods   al,BYTE PTR ds:[esi]
  409f63:	neg    cl
  409f65:	cld    
  409f66:	sbb    edx,DWORD PTR [edx]
  409f68:	repnz xor DWORD PTR [edi+0x3f],ecx
  409f6c:	push   0xb68c4053
  409f71:	lahf   
  409f72:	test   eax,0xb0bb8bc8
  409f77:	push   0xffffffc5
  409f79:	and    eax,0x87e454a1
  409f7e:	mov    dh,0x8b
  409f80:	ds mov bl,ah
  409f83:	aaa    
  409f84:	inc    esi
  409f85:	sub    al,0x75
  409f87:	(bad)
  409f8a:	sahf   
  409f8b:	lods   eax,DWORD PTR ds:[esi]
  409f8c:	jno    0x409f9c
  409f8e:	call   0xcd21:0xfb095686
  409f95:	retf   0xcd01
  409f98:	mov    BYTE PTR [edx+eax*2+0x225e1a7],ch
  409f9f:	add    eax,0xf52f59cb
  409fa4:	inc    ebp
  409fa5:	push   DWORD PTR [edx]
  409fa7:	or     ebp,edx
  409fa9:	ja     0x409fca
  409fab:	jne    0x409fe2
  409fad:	es inc edx
  409faf:	mov    eax,0x36d3337e
  409fb4:	pop    ebx
  409fb5:	pop    edi
  409fb6:	jle    0x40a033
  409fb8:	call   0xa1d96608
  409fbd:	push   0xb821a97e
  409fc2:	and    DWORD PTR ds:0x534df7fd,edi
  409fc8:	shl    DWORD PTR [eax+0x5124898b],cl
  409fce:	icebp  
  409fcf:	shr    DWORD PTR [esi-0x4ee475c4],cl
  409fd5:	sbb    DWORD PTR [edx],ecx
  409fd7:	xchg   edx,eax
  409fd8:	xchg   esp,eax
  409fd9:	sbb    bh,BYTE PTR [edx+ecx*4+0x7b]
  409fdd:	dec    edx
  409fde:	adc    BYTE PTR [edi],dl
  409fe0:	pop    ecx
  409fe1:	ss add ah,BYTE PTR ss:[esi]
  409fe5:	(bad)  
  409fe6:	ins    BYTE PTR es:[edi],dx
  409fe7:	enter  0x9c58,0xb8
  409feb:	mov    edx,0xfa5bd5a8
  409ff0:	jecxz  0x409fdb
  409ff2:	adc    bh,ah
  409ff4:	add    bl,al
  409ff6:	cld    
  409ff7:	idiv   DWORD PTR [eax+0x28f70b8a]
  409ffd:	jecxz  0x409ff5
  409fff:	sub    al,0xfb
  40a001:	aaa    
  40a002:	inc    esp
  40a003:	mov    ebp,0xa9302b9d
  40a008:	jns    0x409fba
  40a00a:	nop
  40a00b:	sbb    DWORD PTR [edi],0x23cdb236
  40a011:	dec    ecx
  40a012:	sbb    dh,BYTE PTR [esi+0x42ab8ff2]
  40a018:	(bad)  
  40a019:	jnp    0x40a089
  40a01b:	and    ebx,edx
  40a01d:	iret   
  40a01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a01f:	mov    DWORD PTR [ecx-0x6a6f6631],edx
  40a025:	mov    eax,ds:0x8b0104b
  40a02a:	ret    
  40a02b:	dec    esi
  40a02c:	add    ebp,DWORD PTR [eax]
  40a02e:	mov    cl,0xc7
  40a030:	xchg   ecx,eax
  40a031:	cmp    DWORD PTR [edx+0x1db0814d],edi
  40a037:	push   es
  40a038:	cwde   
  40a039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a03a:	cmp    bl,BYTE PTR [eax+0x47]
  40a03d:	repz cmp eax,0x14d36d99
  40a043:	mov    ebx,?
  40a045:	in     al,0x15
  40a047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a048:	pop    ebx
  40a049:	pop    esp
  40a04a:	pop    edi
  40a04b:	dec    ecx
  40a04c:	gs pop ecx
  40a04e:	sti    
  40a04f:	jecxz  0x40a067
  40a051:	xchg   BYTE PTR [edx+0x7656a421],bl
  40a057:	add    eax,eax
  40a059:	fwait
  40a05a:	lock scas eax,DWORD PTR es:[edi]
  40a05c:	ja     0x40a0d5
  40a05e:	mov    eax,0x271ea00a
  40a063:	or     DWORD PTR [ecx+0x3236fc28],ecx
  40a069:	pop    eax
  40a06a:	mov    WORD PTR [ebx-0x16af14eb],?
  40a070:	sub    BYTE PTR ds:0x542eebb9,ch
  40a076:	loope  0x40a0c3
  40a078:	or     cl,dh
  40a07a:	sub    esp,DWORD PTR [ecx-0x4fbc3c83]
  40a080:	cmp    eax,0x1c0ffd30
  40a085:	push   esi
  40a086:	pop    esp
  40a087:	inc    edi
  40a088:	push   ebp
  40a089:	and    bh,0x16
  40a08c:	mov    ds:0xebfcf626,al
  40a091:	or     DWORD PTR [eax-0x2f231bdc],0x675fc3c1
  40a09b:	js     0x40a06b
  40a09d:	sbb    DWORD PTR [esi+0x3d],esi
  40a0a0:	repz or eax,0xc01960ee
  40a0a6:	sub    DWORD PTR [eax+esi*4],edi
  40a0a9:	in     al,0x68
  40a0ab:	inc    esi
  40a0ac:	mov    ds:0xa242a118,al
  40a0b1:	dec    ebx
  40a0b2:	jns    0x40a0b4
  40a0b4:	out    dx,eax
  40a0b5:	(bad)  
  40a0b6:	mov    ecx,0x9e24b7e3
  40a0bb:	sbb    al,0xa5
  40a0bd:	clc    
  40a0be:	push   esp
  40a0bf:	not    edi
  40a0c1:	in     al,dx
  40a0c2:	xlat   BYTE PTR ds:[ebx]
  40a0c3:	mov    ?,ebp
  40a0c5:	xchg   ebx,eax
  40a0c6:	sub    DWORD PTR [ebx+0x2c],0x7642c0b
  40a0cd:	pusha  
  40a0ce:	jp     0x40a0e0
  40a0d0:	mov    BYTE PTR [esi+0x2809dae8],ah
  40a0d6:	sbb    al,BYTE PTR [ecx]
  40a0d8:	mov    WORD PTR [ebp+0x551585e4],?
  40a0de:	add    DWORD PTR [ecx-0x60fb4300],0x38
  40a0e5:	jne    0x40a0c8
  40a0e7:	push   ss
  40a0e8:	xchg   esi,eax
  40a0e9:	push   ebx
  40a0ea:	and    eax,0x92ffad5
  40a0ef:	push   es
  40a0f0:	repnz xchg ebp,eax
  40a0f2:	mov    edi,DWORD PTR [esi-0x5f92d0b2]
  40a0f8:	pop    esp
  40a0f9:	das    
  40a0fa:	pop    esp
  40a0fb:	inc    ebp
  40a0fc:	adc    BYTE PTR [ebx+0x19fc7c6d],dl
  40a102:	mov    esp,0x2827ae1f
  40a107:	stos   DWORD PTR es:[edi],eax
  40a108:	das    
  40a109:	into   
  40a10a:	(bad)  
  40a10b:	and    eax,esp
  40a10d:	jg     0x40a180
  40a10f:	cli    
  40a110:	xchg   esp,eax
  40a111:	pop    edi
  40a112:	push   es
  40a113:	rcl    BYTE PTR ds:0x2dd9f067,0x6a
  40a11a:	and    eax,0x1e15a9e2
  40a11f:	dec    BYTE PTR [esi+0x6e9eab91]
  40a125:	pusha  
  40a126:	pop    es
  40a127:	aam    0x5f
  40a129:	mov    ch,0xd5
  40a12b:	scas   al,BYTE PTR es:[edi]
  40a12c:	adc    eax,DWORD PTR [ecx]
  40a12e:	lods   al,BYTE PTR ds:[esi]
  40a12f:	mov    esi,edx
  40a131:	adc    BYTE PTR [edi-0x1a],bh
  40a134:	sub    al,0x58
  40a136:	mov    ecx,DWORD PTR [edx+0x40824c5c]
  40a13c:	ret    0x38c3
  40a13f:	push   0xffffff96
  40a141:	pop    ebp
  40a142:	pop    edi
  40a143:	fs jb  0x40a117
  40a146:	data16 lods al,BYTE PTR ds:[esi]
  40a148:	repnz in eax,dx
  40a14a:	add    BYTE PTR [ecx-0x7b],0xef
  40a14e:	mov    dh,0x74
  40a150:	push   ecx
  40a151:	pop    ebp
  40a152:	dec    edi
  40a153:	or     BYTE PTR [ecx],al
  40a155:	adc    DWORD PTR ds:0x4f908302,edx
  40a15b:	ss pop eax
  40a15d:	ss dec edi
  40a15f:	adc    edi,DWORD PTR [eax]
  40a161:	sub    eax,0x9cb67d33
  40a166:	adc    ch,al
  40a168:	adc    edx,DWORD PTR [eax-0x54c99344]
  40a16e:	ins    DWORD PTR es:[edi],dx
  40a16f:	xor    ah,0x5f
  40a172:	js     0x40a196
  40a174:	ss xchg esp,eax
  40a176:	jecxz  0x40a1e8
  40a178:	out    0xae,al
  40a17a:	test   DWORD PTR [edx],edx
  40a17c:	scas   al,BYTE PTR es:[edi]
  40a17d:	outs   dx,DWORD PTR ds:[esi]
  40a17e:	popf   
  40a17f:	imul   esp,DWORD PTR [eax+edx*8-0x4933d87f],0xffffffcc
  40a187:	jge    0x40a1f3
  40a189:	out    dx,al
  40a18a:	cmc    
  40a18b:	or     BYTE PTR [ebp+0x691d138f],0x89
  40a192:	xlat   BYTE PTR ds:[ebx]
  40a193:	xchg   BYTE PTR [edi],bh
  40a195:	call   DWORD PTR [eax-0x3f]
  40a198:	xchg   edx,eax
  40a199:	es mov edx,0xe199bfd7
  40a19f:	inc    edi
  40a1a0:	fnstsw WORD PTR [ecx+edx*1-0x6b5021d3]
  40a1a7:	ss je  0x40a1af
  40a1aa:	lods   al,BYTE PTR ds:[esi]
  40a1ab:	push   edx
  40a1ac:	(bad)  
  40a1ad:	addr16 mov al,ds:0xe6a9
  40a1b1:	clc    
  40a1b2:	xchg   ebx,eax
  40a1b3:	and    BYTE PTR [eax],dl
  40a1b5:	sbb    ecx,edx
  40a1b7:	jns    0x40a19a
  40a1b9:	cmp    DWORD PTR [edi],edi
  40a1bb:	int3   
  40a1bc:	js     0x40a22c
  40a1be:	mov    dh,0xec
  40a1c0:	pop    edx
  40a1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1c2:	shl    DWORD PTR [edx],cl
  40a1c4:	xor    ecx,DWORD PTR [eax]
  40a1c6:	(bad)  
  40a1c7:	xchg   ebx,eax
  40a1c8:	sub    BYTE PTR [ebp-0x1e],bh
  40a1cb:	repnz in eax,dx
  40a1cd:	mov    esi,0xe5259d32
  40a1d2:	pop    eax
  40a1d3:	fsubr  DWORD PTR [ecx-0x1c]
  40a1d6:	and    DWORD PTR [edi],0xb0b99b3e
  40a1dc:	and    dl,BYTE PTR [edi]
  40a1de:	mov    dh,0xfe
  40a1e0:	leave  
  40a1e1:	imul   ah
  40a1e3:	sti    
  40a1e4:	test   ebp,0x4fc307ac
  40a1ea:	inc    eax
  40a1eb:	xchg   ecx,eax
  40a1ec:	or     eax,0x59
  40a1ef:	add    ebx,DWORD PTR [edx]
  40a1f1:	ins    DWORD PTR es:[edi],dx
  40a1f2:	cmovb  edx,DWORD PTR [eax+ebx*4+0x71662e2f]
  40a1fa:	jmp    0xfac:0xf48bf01e
  40a201:	sbb    esi,ecx
  40a203:	xchg   edx,eax
  40a204:	loope  0x40a1ac
  40a206:	add    DWORD PTR [ebx],esi
  40a208:	jge    0x40a1f0
  40a20a:	cmp    eax,0xffd288a0
  40a20f:	mov    esp,0xa767a472
  40a214:	sar    DWORD PTR [esi-0x38],0x37
  40a218:	cmp    al,0xa
  40a21a:	lods   eax,DWORD PTR ds:[esi]
  40a21b:	sbb    esi,DWORD PTR [eax-0x3f926a61]
  40a221:	sub    esp,esi
  40a223:	dec    ecx
  40a224:	in     eax,dx
  40a225:	outs   dx,BYTE PTR ds:[esi]
  40a226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a227:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40a229:	xchg   esi,eax
  40a22a:	rcr    BYTE PTR [ebx-0x27],cl
  40a22d:	into   
  40a22e:	iret   
  40a22f:	sbb    edx,DWORD PTR [ebp+0x62537cb8]
  40a235:	imul   ecx,DWORD PTR [edx+0x15695eb],0xc32adb38
  40a23f:	sub    al,0x8a
  40a241:	mov    ds:0xa66b086c,eax
  40a246:	ins    DWORD PTR es:[edi],dx
  40a247:	icebp  
  40a248:	je     0x40a25b
  40a24a:	mov    esp,0xe145f642
  40a24f:	dec    ebp
  40a250:	aam    0xc7
  40a252:	in     al,dx
  40a253:	(bad)  
  40a255:	push   ebp
  40a256:	and    DWORD PTR [esi+0x7d7e3e9e],edi
  40a25c:	push   0x53
  40a25e:	ret    0x1d2e
  40a261:	loopne 0x40a1fa
  40a263:	scas   al,BYTE PTR es:[edi]
  40a264:	outs   dx,DWORD PTR ds:[esi]
  40a265:	xchg   BYTE PTR [edi-0x513d4fc6],dh
  40a26b:	adc    BYTE PTR [ecx-0x2a73a09d],0x3e
  40a272:	jg     0x40a246
  40a274:	neg    ecx
  40a276:	mov    edx,ecx
  40a278:	xchg   DWORD PTR [esi-0x5095e03e],ecx
  40a27e:	jb     0x40a2c2
  40a280:	jmp    0xb5d1482c
  40a285:	lock mov cl,BYTE PTR [esi+ebx*2]
  40a289:	sbb    esp,DWORD PTR [esi]
  40a28b:	shr    al,cl
  40a28d:	ret    
  40a28e:	aad    0x37
  40a290:	mov    esi,0x26b3547e
  40a295:	sbb    al,0xd6
  40a297:	xchg   dl,bl
  40a299:	in     eax,dx
  40a29a:	rol    DWORD PTR [ecx+eiz*8-0x37],0x85
  40a29f:	mov    DWORD PTR [eax],eax
  40a2a1:	mov    al,0xc0
  40a2a3:	xchg   esi,eax
  40a2a4:	sbb    BYTE PTR [edi-0x3a],cl
  40a2a7:	pop    ebp
  40a2a8:	retf   0x5152
  40a2ab:	xor    eax,0x267f7218
  40a2b0:	push   edi
  40a2b1:	sub    eax,0x8d8b6711
  40a2b6:	xor    bl,BYTE PTR [ecx]
  40a2b8:	and    edi,ebx
  40a2ba:	jle    0x40a327
  40a2bc:	mov    al,0xb9
  40a2be:	loop   0x40a285
  40a2c0:	cmp    ah,dl
  40a2c2:	into   
  40a2c3:	inc    ebx
  40a2c4:	jns    0x40a2cb
  40a2c6:	xor    ch,BYTE PTR [ebx-0x48]
  40a2c9:	mov    ecx,0x8cc236a5
  40a2ce:	push   0xff66f378
  40a2d3:	sbb    eax,0x6fe19747
  40a2d8:	mov    edi,0x90ec0419
  40a2dd:	into   
  40a2de:	mov    edi,0x76a0fea7
  40a2e3:	jo     0x40a348
  40a2e5:	cmp    DWORD PTR [ebp-0x64495b5f],0x67b021a0
  40a2ef:	pushf  
  40a2f0:	pushf  
  40a2f1:	sub    esp,DWORD PTR [ecx-0x1b]
  40a2f4:	(bad)  
  40a2f5:	lods   al,BYTE PTR ds:[esi]
  40a2f6:	scas   eax,DWORD PTR es:[edi]
  40a2f7:	push   eax
  40a2f8:	cmc    
  40a2f9:	(bad)  
  40a2fb:	cmp    DWORD PTR [ebp+0x7a98ad9a],ecx
  40a301:	rcl    DWORD PTR [ebx],0xd0
  40a304:	repz pop edx
  40a306:	jo     0x40a2bc
  40a308:	or     bl,BYTE PTR [edi+0x5a24dfaa]
  40a30e:	nop
  40a30f:	lahf   
  40a310:	cmp    DWORD PTR [eax-0x55],eax
  40a313:	xchg   esp,eax
  40a314:	jbe    0x40a33c
  40a316:	loope  0x40a311
  40a318:	lods   eax,DWORD PTR ds:[esi]
  40a319:	popa   
  40a31a:	dec    esp
  40a31b:	mov    ds:0x22b29d63,eax
  40a320:	pushf  
  40a321:	and    bl,BYTE PTR [edx+0x17]
  40a324:	repnz out dx,al
  40a326:	or     dh,dh
  40a328:	div    DWORD PTR [edx-0x27be638d]
  40a32e:	into   
  40a32f:	out    dx,eax
  40a330:	ds das 
  40a332:	call   0x324d75ae
  40a337:	(bad)  
  40a338:	cmp    DWORD PTR [edx],ebx
  40a33a:	dec    esp
  40a33b:	sub    al,0x18
  40a33d:	lea    esi,[ecx+esi*4+0x3e]
  40a341:	rol    BYTE PTR [edi+0x54],0xd9
  40a345:	add    DWORD PTR [ebp-0x23],eax
  40a348:	mov    DWORD PTR [eax-0x3453d3ff],ebx
  40a34e:	mov    ch,0xc5
  40a350:	mov    bh,0x54
  40a352:	scas   al,BYTE PTR es:[edi]
  40a353:	lock xor dl,BYTE PTR [edi]
  40a356:	mov    ebp,0x5e1cb2aa
  40a35b:	and    esp,DWORD PTR [esi+eiz*8+0x60a479a7]
  40a362:	aaa    
  40a363:	mov    ds:0x36e52ca,eax
  40a368:	add    esp,ecx
  40a36a:	(bad)  
  40a36b:	in     eax,dx
  40a36c:	and    al,0x79
  40a36e:	sbb    al,0x77
  40a370:	xchg   ebx,eax
  40a371:	sub    BYTE PTR [edx+0x36],al
  40a374:	ja     0x40a30b
  40a376:	lods   al,BYTE PTR ds:[esi]
  40a377:	in     eax,dx
  40a378:	mov    dl,BYTE PTR [edx+0x67721970]
  40a37e:	pusha  
  40a37f:	push   ecx
  40a380:	scas   eax,DWORD PTR es:[edi]
  40a381:	mov    ebx,0xd61c161a
  40a386:	cmc    
  40a387:	and    ebp,DWORD PTR [ebp+0x2c31810f]
  40a38d:	sub    eax,0xde7a2612
  40a392:	or     eax,0x62caaad1
  40a397:	scas   eax,DWORD PTR es:[edi]
  40a398:	mov    bl,0xb0
  40a39a:	xor    BYTE PTR [esi+0x701c4aaa],dl
  40a3a0:	mov    ah,al
  40a3a2:	xchg   ebp,eax
  40a3a3:	js     0x40a3bf
  40a3a5:	push   ebp
  40a3a6:	or     al,0x16
  40a3a9:	xchg   BYTE PTR [eax*4-0x32b9921b],al
  40a3b0:	xor    bl,BYTE PTR [ebx]
  40a3b2:	out    dx,eax
  40a3b3:	adc    eax,DWORD PTR [edi+0x6]
  40a3b6:	inc    edi
  40a3b7:	sub    dh,BYTE PTR [eax]
  40a3b9:	mov    al,ds:0xad909e48
  40a3be:	in     al,0x1f
  40a3c0:	outs   dx,BYTE PTR ds:[esi]
  40a3c2:	jmp    DWORD PTR [edx+0x15]
  40a3c5:	cmp    edi,ebp
  40a3c7:	jne    0x40a379
  40a3c9:	mov    ds:0x9db8e598,eax
  40a3ce:	push   ss
  40a3cf:	icebp  
  40a3d0:	push   ds
  40a3d1:	jg     0x40a40a
  40a3d3:	cmp    cl,BYTE PTR [ecx+eiz*8+0x24]
  40a3d7:	dec    esp
  40a3d8:	outs   dx,BYTE PTR ds:[esi]
  40a3d9:	outs   dx,DWORD PTR ds:[esi]
  40a3da:	and    dl,cl
  40a3dc:	mov    dl,BYTE PTR [esi-0x7eb76484]
  40a3e2:	mov    eax,0x2d0d68d0
  40a3e7:	jno    0x40a45d
  40a3e9:	in     al,0xb5
  40a3eb:	lds    eax,FWORD PTR [esi-0x3f]
  40a3ee:	test   bl,0x50
  40a3f1:	or     edi,ebx
  40a3f3:	dec    ax
  40a3f5:	loopne 0x40a407
  40a3f7:	and    sp,cx
  40a3fa:	mov    cl,0xa5
  40a3fc:	repnz in eax,0x17
  40a3ff:	fld    QWORD PTR [eax+ebx*4]
  40a402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a403:	cld    
  40a404:	icebp  
  40a405:	or     BYTE PTR [edi+edx*4-0x48f143e6],0x6a
  40a40d:	pop    edx
  40a40e:	pusha  
  40a40f:	in     eax,dx
  40a410:	jmp    0xcbe353cf
  40a415:	inc    esi
  40a416:	call   0x910:0xea5d6f84
  40a41d:	lods   eax,DWORD PTR ds:[esi]
  40a41e:	xlat   BYTE PTR ds:[ebx]
  40a41f:	push   ebx
  40a420:	enter  0xae73,0xc3
  40a424:	or     dh,cl
  40a426:	sub    esp,DWORD PTR [ecx]
  40a428:	mov    ah,0xe1
  40a42a:	dec    edx
  40a42b:	test   eax,0x716afe4b
  40a430:	outs   dx,BYTE PTR ds:[esi]
  40a431:	rcl    BYTE PTR [eax],cl
  40a433:	mov    dh,0xae
  40a435:	std    
  40a436:	mov    ecx,0x5e4439ea
  40a43b:	sbb    DWORD PTR [ebp-0x5c],esp
  40a43e:	push   ss
  40a43f:	or     eax,DWORD PTR ds:[esi]
  40a442:	sti    
  40a443:	sbb    bl,BYTE PTR [edi*8-0x5456961]
  40a44a:	ror    ah,cl
  40a44c:	push   es
  40a44d:	or     BYTE PTR [esi],0x72
  40a450:	mov    ds:0xeb45ddd8,eax
  40a455:	nop
  40a456:	pop    esi
  40a457:	dec    eax
  40a458:	push   ss
  40a459:	xchg   edx,eax
  40a45a:	pop    ebx
  40a45b:	jp     0x40a3f3
  40a45d:	dec    eax
  40a45e:	add    BYTE PTR [eax+ebx*8-0x61],bh
  40a462:	fadd   QWORD PTR [ebx-0x723b67af]
  40a468:	xchg   BYTE PTR [ebp+0x2be6ea51],cl
  40a46e:	mov    dl,0x4
  40a470:	xor    ch,BYTE PTR ds:0x874256a3
  40a476:	pop    esp
  40a477:	ret    0x9552
  40a47a:	popf   
  40a47b:	jg     0x40a47c
  40a47d:	jne    0x40a447
  40a47f:	jnp    0x40a440
  40a481:	data16 out 0x96,al
  40a484:	pop    esp
  40a485:	gs jmp 0x40a417
  40a488:	adc    DWORD PTR ds:0x8af92a72,esi
  40a48e:	hlt    
  40a48f:	mov    edx,0x47d98f4
  40a494:	fisub  DWORD PTR [eax-0x36]
  40a497:	test   BYTE PTR [esi+0x6c],bh
  40a49a:	jle    0x40a4d9
  40a49c:	out    dx,eax
  40a49d:	jmp    0xd5d5b93a
  40a4a2:	cmp    al,0x18
  40a4a4:	dec    eax
  40a4a5:	xor    DWORD PTR [ebx-0x60],ecx
  40a4a8:	lods   al,BYTE PTR ds:[esi]
  40a4a9:	aas    
  40a4aa:	dec    ebx
  40a4ab:	popf   
  40a4ac:	cld    
  40a4ad:	mov    ecx,0x39c046e0
  40a4b2:	fmul   QWORD PTR [esi+0x20]
  40a4b5:	jp     0x40a500
  40a4b7:	(bad)  
  40a4b8:	loope  0x40a4fc
  40a4ba:	sahf   
  40a4bb:	push   0x6ddba83
  40a4c0:	sbb    BYTE PTR [ebx],ch
  40a4c2:	mov    ds:0x69115483,eax
  40a4c7:	std    
  40a4c8:	adc    al,0x55
  40a4cb:	mov    dh,0x8c
  40a4cd:	mov    eax,ds:0x885b1b48
  40a4d2:	dec    edi
  40a4d3:	ja     0x40a4b6
  40a4d5:	jg     0x40a4a0
  40a4d7:	std    
  40a4d8:	adc    ah,dl
  40a4da:	and    eax,0x33e973f5
  40a4df:	and    dl,BYTE PTR [eax+0x1f]
  40a4e2:	xor    ch,0x68
  40a4e5:	std    
  40a4e6:	xor    ah,BYTE PTR [edx+0x4169e455]
  40a4ec:	mov    bl,0xde
  40a4ee:	cld    
  40a4ef:	daa    
  40a4f0:	je     0x40a484
  40a4f2:	fild   QWORD PTR [ebx-0x4790c6bd]
  40a4f8:	fist   WORD PTR [ebx+edx*4-0x1c]
  40a4fc:	cmc    
  40a4fd:	jg     0x40a552
  40a4ff:	inc    edi
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	xchg   ecx,eax
  40a502:	mov    WORD PTR [edx],fs
  40a504:	xchg   esp,eax
  40a505:	mov    ?,WORD PTR [eax-0x2eb48173]
  40a50b:	ret    0xb7f1
  40a50e:	pop    ebp
  40a50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a510:	retf   0x6c1e
  40a513:	dec    esp
  40a514:	mov    esi,0x4b54665a
  40a519:	daa    
  40a51a:	imul   esi,DWORD PTR [ecx],0xffffffec
  40a51d:	out    dx,eax
  40a51e:	repz inc esp
  40a520:	cld    
  40a521:	jl     0x40a52f
  40a523:	les    eax,FWORD PTR [ecx-0x227393f4]
  40a529:	cmc    
  40a52a:	lods   eax,DWORD PTR ds:[esi]
  40a52b:	ds push cs
  40a52d:	repz jne 0x40a5a5
  40a530:	or     DWORD PTR [ebx+0x45a5807c],ebx
  40a536:	in     eax,dx
  40a537:	mov    esp,0x2f4a1e64
  40a53c:	shl    BYTE PTR [ebx+0x79a359d2],cl
  40a542:	int3   
  40a543:	dec    ecx
  40a544:	inc    edi
  40a545:	jp     0x40a5bf
  40a547:	push   ds
  40a548:	(bad)  
  40a549:	sub    BYTE PTR [eax+0x44],cl
  40a54c:	mov    ds:0x859445eb,al
  40a551:	lahf   
  40a552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a553:	add    BYTE PTR [edi],bl
  40a555:	in     al,0xc5
  40a557:	es icebp 
  40a559:	enter  0x6869,0x57
  40a55d:	ret    0xbf0e
  40a560:	xchg   esi,eax
  40a561:	ja     0x40a5b2
  40a563:	call   0x3cfa:0x412ff683
  40a56a:	scas   eax,DWORD PTR es:[edi]
  40a56b:	inc    esi
  40a56c:	clc    
  40a56d:	cmc    
  40a56e:	div    BYTE PTR [ecx+0x54]
  40a571:	and    al,bh
  40a573:	push   ecx
  40a574:	push   cs
  40a575:	mov    al,0xa
  40a577:	or     eax,0x88ac67f5
  40a57c:	push   0x9
  40a57e:	xor    ecx,DWORD PTR [ebx+0x71]
  40a581:	stc    
  40a582:	test   al,0x21
  40a584:	scas   eax,DWORD PTR es:[edi]
  40a585:	leave  
  40a586:	ins    BYTE PTR es:[edi],dx
  40a587:	div    BYTE PTR [ebp+edx*8+0x60eaf5c8]
  40a58e:	pop    edi
  40a58f:	les    eax,FWORD PTR [edi-0x1d4f08c6]
  40a595:	dec    edi
  40a596:	out    0x4d,eax
  40a598:	test   BYTE PTR [ecx],bl
  40a59a:	out    dx,al
  40a59b:	sub    BYTE PTR [di-0x2b],bh
  40a59f:	pushf  
  40a5a0:	enter  0x1d6f,0xb
  40a5a4:	adc    BYTE PTR [ebx+edi*4],al
  40a5a7:	dec    edx
  40a5a8:	inc    eax
  40a5a9:	xlat   BYTE PTR ds:[ebx]
  40a5aa:	push   edx
  40a5ab:	pop    edi
  40a5ac:	sbb    DWORD PTR [edi*1+0x36799e25],edx
  40a5b3:	mov    DWORD PTR [edx+0x13],esi
  40a5b6:	cdq    
  40a5b7:	rol    BYTE PTR [eax+edi*2+0x4b],0xa2
  40a5bc:	ret    0xa1f8
  40a5bf:	loope  0x40a579
  40a5c1:	aas    
  40a5c2:	jge    0x40a619
  40a5c4:	bound  edi,QWORD PTR [edx+ebx*4-0xcafc50a]
  40a5cb:	push   ebp
  40a5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5cd:	jae    0x40a5fe
  40a5cf:	call   0x10cc:0xf398ba77
  40a5d6:	(bad)  
  40a5d7:	sub    eax,0x5bd20509
  40a5dc:	ss cmp eax,0x45bcd17
  40a5e2:	xchg   ebx,eax
  40a5e3:	adc    edi,ebp
  40a5e5:	pop    edi
  40a5e6:	mov    ebx,0xf7264939
  40a5eb:	cmp    DWORD PTR [esi-0x7eda794b],edi
  40a5f1:	mov    al,0x9f
  40a5f3:	xchg   edi,eax
  40a5f4:	push   edx
  40a5f5:	lods   eax,DWORD PTR ds:[esi]
  40a5f6:	lock cmp al,0xf5
  40a5f9:	int3   
  40a5fa:	pop    ebx
  40a5fb:	jns    0x40a679
  40a5fd:	dec    ebp
  40a5fe:	addr16 xchg esp,eax
  40a600:	and    BYTE PTR [eax],bl
  40a602:	repnz popa 
  40a604:	adc    edi,esi
  40a606:	cs stos BYTE PTR es:[edi],al
  40a608:	dec    eax
  40a609:	aam    0x63
  40a60b:	jae    0x40a5c7
  40a60d:	call   0x70029a23
  40a612:	ret    
  40a613:	jle    0x40a5ae
  40a615:	nop
  40a616:	rol    DWORD PTR [edi-0x1f],0xa6
  40a61a:	add    bh,al
  40a61c:	jmp    0xfbac:0x55a5f15a
  40a623:	test   edi,0x7086b8d3
  40a629:	fstp   DWORD PTR [eax+0x3267b381]
  40a62f:	cdq    
  40a630:	xor    BYTE PTR [edx],cl
  40a632:	sbb    DWORD PTR [edi+0x671681b4],edx
  40a638:	mov    eax,DWORD PTR [ebp-0xc]
  40a63b:	adc    DWORD PTR ds:0x42a2c6,ecx
  40a641:	mov    ecx,DWORD PTR [ebp-0x28]
  40a644:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  40a64e:	sub    eax,edi
  40a650:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  40a65a:	xor    eax,esi
  40a65c:	cmp    eax,ecx
  40a65e:	jne    0x40a688
  40a664:	mov    eax,DWORD PTR [ebp-0x8]
  40a667:	mov    ecx,DWORD PTR [ebp-0x10]
  40a66a:	xor    eax,esi
  40a66c:	xor    ecx,esi
  40a66e:	sub    eax,ecx
  40a670:	sub    eax,edi
  40a672:	xor    eax,esi
  40a674:	mov    DWORD PTR [ebp-0x8],eax
  40a677:	mov    eax,DWORD PTR [ebp-0x10]
  40a67a:	xor    eax,esi
  40a67c:	mov    ecx,0xffcd8d8f
  40a681:	sub    ecx,eax
  40a683:	jmp    0x40a697
  40a688:	mov    eax,DWORD PTR [ebp-0x10]
  40a68b:	xor    eax,esi
  40a68d:	mov    ecx,0xffcd8d0f
  40a692:	sub    ecx,eax
  40a694:	add    ecx,DWORD PTR [ebp-0xc]
  40a697:	mov    DWORD PTR [ebp-0xc],ecx
  40a69a:	mov    eax,DWORD PTR [ebp-0x8]
  40a69d:	cmp    eax,0xf89c85a5
  40a6a2:	jne    0x4038a5
  40a6a8:	mov    DWORD PTR [ebp-0x34],0x9
  40a6af:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6b2:	xor    ecx,esi
  40a6b4:	add    ecx,edi
  40a6b6:	jmp    0x40a916
  40a6bb:	lea    eax,[ecx+ebx*1]
  40a6be:	mov    DWORD PTR [ebp-0x2c],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x58]
  40a6c4:	sub    eax,ecx
  40a6c6:	mov    DWORD PTR [ebp-0x1c],eax
  40a6c9:	mov    eax,DWORD PTR [ebp-0x1c]
  40a6cc:	mov    DWORD PTR [ebp-0x14],eax
  40a6cf:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6d2:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  40a6d9:	mov    DWORD PTR [ebp-0x54],eax
  40a6dc:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40a6e3:	mov    eax,DWORD PTR [ebp-0x38]
  40a6e6:	xor    eax,esi
  40a6e8:	add    eax,edi
  40a6ea:	mov    DWORD PTR [ebp-0x10],eax
  40a6ed:	mov    eax,DWORD PTR [ebp-0x38]
  40a6f0:	xor    eax,esi
  40a6f2:	add    eax,edi
  40a6f4:	mov    DWORD PTR [ebp-0x8],eax
  40a6f7:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  40a6fe:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40a705:	mov    eax,DWORD PTR [ebp-0x38]
  40a708:	mov    edx,DWORD PTR [ebp-0x14]
  40a70b:	xor    eax,esi
  40a70d:	add    eax,edi
  40a70f:	cmp    edx,eax
  40a711:	je     0x40a90a
  40a717:	mov    eax,DWORD PTR [ebp-0x20]
  40a71a:	xor    eax,esi
  40a71c:	mov    edx,0xffcd8d0f
  40a721:	sub    edx,eax
  40a723:	add    edx,DWORD PTR [ebp-0x14]
  40a726:	mov    eax,DWORD PTR [ebp-0x20]
  40a729:	mov    ebx,DWORD PTR [ebp-0x10]
  40a72c:	xor    eax,esi
  40a72e:	add    eax,edi
  40a730:	imul   eax,ebx
  40a733:	cmp    eax,edx
  40a735:	ja     0x40a907
  40a73b:	mov    edx,DWORD PTR [ebp-0x10]
  40a73e:	mov    eax,DWORD PTR [ebp-0x14]
  40a741:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a744:	sub    eax,edx
  40a746:	xor    ebx,esi
  40a748:	xor    edx,edx
  40a74a:	add    ebx,edi
  40a74c:	div    ebx
  40a74e:	mov    DWORD PTR [ebp-0x8],eax
  40a751:	mov    eax,DWORD PTR [ebp-0x44]
  40a754:	mov    edx,DWORD PTR [ebp-0x8]
  40a757:	xor    eax,esi
  40a759:	add    eax,edi
  40a75b:	cmp    edx,eax
  40a75d:	jbe    0x40a76d
  40a763:	mov    eax,DWORD PTR [ebp-0x44]
  40a766:	xor    eax,esi
  40a768:	add    eax,edi
  40a76a:	mov    DWORD PTR [ebp-0x8],eax
  40a76d:	mov    eax,DWORD PTR [ebp-0x2c]
  40a770:	mov    edx,DWORD PTR [ebp-0x8]
  40a773:	xor    eax,esi
  40a775:	add    eax,edi
  40a777:	imul   eax,edx
  40a77a:	mov    DWORD PTR [ebp-0x8],eax
  40a77d:	mov    eax,DWORD PTR [ebp-0x38]
  40a780:	mov    edx,DWORD PTR [ebp-0x8]
  40a783:	xor    eax,esi
  40a785:	add    eax,edi
  40a787:	cmp    edx,eax
  40a789:	je     0x40a8f0
  40a78f:	mov    eax,DWORD PTR [ebp-0x8]
  40a792:	mov    DWORD PTR [ebp-0x18],eax
  40a795:	mov    eax,DWORD PTR [ebp-0x10]
  40a798:	add    eax,DWORD PTR [ebp-0x54]
  40a79b:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40a7a2:	mov    DWORD PTR [ebp-0x8],eax
  40a7a5:	mov    eax,0xf89c85ba
  40a7aa:	mov    DWORD PTR [ebp-0x28],eax
  40a7ad:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40a7b4:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  40a7bb:	mov    DWORD PTR [ebp-0x30],eax
  40a7be:	mov    eax,DWORD PTR [ebp-0x1c]
  40a7c1:	xor    eax,esi
  40a7c3:	add    eax,edi
  40a7c5:	jmp    0x40a8ac
  40a7ca:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  40a7d1:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40a7d8:	mov    eax,DWORD PTR [ebp-0x30]
  40a7db:	mov    edx,DWORD PTR [ebp-0xc]
  40a7de:	xor    eax,esi
  40a7e0:	add    eax,edi
  40a7e2:	imul   eax,edx
  40a7e5:	mov    edx,DWORD PTR [ebp-0x8]
  40a7e8:	mov    al,BYTE PTR [eax+edx*1]
  40a7eb:	mov    BYTE PTR [ebp-0x1],al
  40a7ee:	mov    eax,DWORD PTR [ebp-0x30]
  40a7f1:	mov    edx,DWORD PTR [ebp-0xc]
  40a7f4:	xor    eax,esi
  40a7f6:	add    eax,edi
  40a7f8:	imul   eax,edx
  40a7fb:	mov    edx,DWORD PTR [ebp-0x5c]
  40a7fe:	xor    edx,esi
  40a800:	add    eax,edx
  40a802:	mov    edx,DWORD PTR [ebp-0x8]
  40a805:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a80d:	mov    edx,DWORD PTR [ebp-0x4c]
  40a810:	xor    edx,esi
  40a812:	lea    eax,[edx+eax*1+0x3272f1]
  40a819:	movzx  edx,BYTE PTR [ebp-0x1]
  40a81d:	xor    edx,eax
  40a81f:	mov    BYTE PTR [ebp-0x1],dl
  40a822:	mov    al,BYTE PTR [ebp-0x1]
  40a825:	mov    edx,DWORD PTR [ebp-0x30]
  40a828:	mov    ebx,DWORD PTR [ebp-0xc]
  40a82b:	xor    edx,esi
  40a82d:	add    edx,edi
  40a82f:	imul   edx,ebx
  40a832:	mov    ebx,DWORD PTR [ebp-0x8]
  40a835:	mov    BYTE PTR [edx+ebx*1],al
  40a838:	mov    eax,DWORD PTR [ebp-0x30]
  40a83b:	mov    edx,DWORD PTR [ebp-0xc]
  40a83e:	xor    eax,esi
  40a840:	add    eax,edi
  40a842:	imul   eax,edx
  40a845:	mov    edx,DWORD PTR [ebp-0x8]
  40a848:	mov    al,BYTE PTR [eax+edx*1]
  40a84b:	mov    BYTE PTR [ebp-0x1],al
  40a84e:	mov    eax,DWORD PTR [ebp-0x30]
  40a851:	mov    edx,DWORD PTR [ebp-0xc]
  40a854:	xor    eax,esi
  40a856:	add    eax,edi
  40a858:	imul   eax,edx
  40a85b:	mov    edx,DWORD PTR [ebp-0x28]
  40a85e:	xor    edx,esi
  40a860:	add    eax,edx
  40a862:	mov    edx,DWORD PTR [ebp-0x8]
  40a865:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a86d:	mov    edx,DWORD PTR [ebp-0x50]
  40a870:	xor    edx,esi
  40a872:	lea    eax,[edx+eax*1+0x3272f1]
  40a879:	movzx  edx,BYTE PTR [ebp-0x1]
  40a87d:	xor    edx,eax
  40a87f:	mov    BYTE PTR [ebp-0x1],dl
  40a882:	mov    al,BYTE PTR [ebp-0x1]
  40a885:	mov    edx,DWORD PTR [ebp-0x30]
  40a888:	mov    ebx,DWORD PTR [ebp-0xc]
  40a88b:	xor    edx,esi
  40a88d:	add    edx,edi
  40a88f:	imul   edx,ebx
  40a892:	mov    ebx,DWORD PTR [ebp-0x8]
  40a895:	mov    BYTE PTR [edx+ebx*1],al
  40a898:	mov    eax,DWORD PTR [ebp-0x40]
  40a89b:	mov    edx,DWORD PTR [ebp-0x28]
  40a89e:	xor    eax,esi
  40a8a0:	xor    edx,esi
  40a8a2:	add    eax,edi
  40a8a4:	add    edx,edi
  40a8a6:	imul   eax,edx
  40a8a9:	add    eax,DWORD PTR [ebp-0xc]
  40a8ac:	mov    DWORD PTR [ebp-0xc],eax
  40a8af:	mov    eax,DWORD PTR [ebp-0xc]
  40a8b2:	mov    edx,DWORD PTR [ebp-0x18]
  40a8b5:	cmp    edx,eax
  40a8b7:	jb     0x40a7ca
  40a8bd:	mov    eax,DWORD PTR [ebp-0x28]
  40a8c0:	mov    edx,DWORD PTR [ebp-0x18]
  40a8c3:	xor    eax,esi
  40a8c5:	add    eax,edi
  40a8c7:	imul   eax,edx
  40a8ca:	mov    edx,DWORD PTR [ebp-0x1c]
  40a8cd:	xor    edx,esi
  40a8cf:	add    edx,edi
  40a8d1:	or     eax,edx
  40a8d3:	mov    edx,DWORD PTR [ebp-0x20]
  40a8d6:	xor    edx,esi
  40a8d8:	add    eax,edx
  40a8da:	mov    edx,DWORD PTR [ebp-0x20]
  40a8dd:	xor    edx,esi
  40a8df:	add    eax,edx
  40a8e1:	mov    edx,DWORD PTR [ebp-0x10]
  40a8e4:	lea    eax,[eax+edx*1+0x64e5e2]
  40a8eb:	jmp    0x40a8ff
  40a8f0:	mov    eax,DWORD PTR [ebp-0x20]
  40a8f3:	mov    edx,DWORD PTR [ebp-0x10]
  40a8f6:	xor    eax,esi
  40a8f8:	lea    eax,[eax+edx*1+0x3272f1]
  40a8ff:	mov    DWORD PTR [ebp-0x10],eax
  40a902:	jmp    0x40a717
  40a907:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a90a:	mov    eax,DWORD PTR [ebp+0xc]
  40a90d:	xor    eax,esi
  40a90f:	lea    ecx,[ecx+eax*1+0x3272f1]
  40a916:	lea    eax,[ecx-0x3272f1]
  40a91c:	xor    eax,esi
  40a91e:	cmp    eax,0xf89c95a5
  40a923:	jne    0x40a6bb
  40a929:	dec    DWORD PTR [ebp-0x34]
  40a92c:	jne    0x40a6af
  40a932:	mov    eax,DWORD PTR [ebp+0x8]
  40a935:	mov    ecx,DWORD PTR [ebp+0xc]
  40a938:	mov    edx,DWORD PTR [ebp+0x8]
  40a93b:	xor    ecx,esi
  40a93d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  40a944:	xor    eax,esi
  40a946:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  40a94d:	xor    edx,esi
  40a94f:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  40a956:	mov    ecx,DWORD PTR [ebp+0xc]
  40a959:	xor    ecx,esi
  40a95b:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  40a962:	mov    eax,DWORD PTR [ebp+0xc]
  40a965:	xor    eax,esi
  40a967:	add    eax,edi
  40a969:	pop    edi
  40a96a:	pop    esi
  40a96b:	pop    ebx
  40a96c:	leave  
  40a96d:	ret    0x8
  40a970:	and    DWORD PTR ds:0x42a2e6,0x42a28a
  40a97a:	xor    eax,eax
  40a97c:	sbb    DWORD PTR ds:0x42a2c2,0x42a2ae
  40a986:	inc    eax
  40a987:	ret    
  40a988:	push   ebp
  40a989:	mov    ebp,esp
  40a98b:	sub    esp,0x38
  40a98e:	movzx  eax,WORD PTR ds:0x42a2f6
  40a995:	sbb    DWORD PTR ds:0x42a276,eax
  40a99b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40a9a2:	push   ebx
  40a9a3:	add    DWORD PTR ds:0x42a2e6,0x20e2
  40a9ad:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a9b4:	and    DWORD PTR ds:0x42a2be,0x0
  40a9be:	jmp    0x40a9d1
  40a9c3:	xor    eax,eax
  40a9c5:	or     eax,DWORD PTR ds:0x42a2be
  40a9cb:	inc    eax
  40a9cc:	mov    ds:0x42a2be,eax
  40a9d1:	cmp    DWORD PTR ds:0x42a2be,0x1e
  40a9d8:	jae    0x40aa03
  40a9de:	cmp    DWORD PTR ds:0x42a2be,0x1f
  40a9e5:	jge    0x40aa03
  40a9eb:	jmp    0x40a9fe
  40a9f0:	push   DWORD PTR [ebp-0x1c]
  40a9f3:	push   0x42a2de
  40a9f8:	call   DWORD PTR ds:0x42a3fa
  40a9fe:	jmp    0x40a9c3
  40aa03:	mov    eax,DWORD PTR [ebp-0x4]
  40aa06:	or     DWORD PTR ds:0x42a296,0x3f2f
  40aa10:	push   esi
  40aa11:	xor    esi,esi
  40aa13:	xor    esi,DWORD PTR ds:0x42a2f2
  40aa19:	or     esi,DWORD PTR ds:0x42a28e
  40aa1f:	mov    DWORD PTR ds:0x42a2f2,esi
  40aa25:	mov    esi,0x75108aa
  40aa2a:	xor    eax,esi
  40aa2c:	push   edi
  40aa2d:	mov    DWORD PTR ds:0x42a2ce,0x1b
  40aa37:	cmp    DWORD PTR ds:0x42a2ce,0x0
  40aa3e:	je     0x40aa8f
  40aa44:	cmp    DWORD PTR ds:0x42a2ce,0x4
  40aa4b:	jb     0x40aa8f
  40aa51:	jmp    0x40aa61
  40aa56:	push   0x724e
  40aa5b:	call   DWORD PTR ds:0x42a3d6
  40aa61:	cmp    DWORD PTR ds:0x42a2ce,0x5
  40aa68:	jne    0x40aa7d
  40aa6e:	xor    edi,edi
  40aa70:	xor    edi,DWORD PTR ds:0x42a2ce
  40aa76:	dec    edi
  40aa77:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa7d:	mov    edi,DWORD PTR ds:0x42a2ce
  40aa83:	dec    edi
  40aa84:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa8a:	jmp    0x40aa37
  40aa8f:	mov    edi,0x3272f1
  40aa94:	add    eax,edi
  40aa96:	mov    DWORD PTR [ebp-0x1c],eax
  40aa99:	and    DWORD PTR ds:0x42a26e,0x0
  40aaa3:	jmp    0x40aab3
  40aaa8:	mov    eax,ds:0x42a26e
  40aaad:	inc    eax
  40aaae:	mov    ds:0x42a26e,eax
  40aab3:	cmp    DWORD PTR ds:0x42a26e,0x1b
  40aaba:	jae    0x40aae6
  40aac0:	cmp    DWORD PTR ds:0x42a26e,0x24
  40aac7:	ja     0x40aae6
  40aacd:	jmp    0x40aae1
  40aad2:	push   DWORD PTR [ebp-0x24]
  40aad5:	push   DWORD PTR [ebp-0x1c]
  40aad8:	push   DWORD PTR [ebp-0x28]
  40aadb:	call   DWORD PTR ds:0x42a3da
  40aae1:	jmp    0x40aaa8
  40aae6:	mov    eax,DWORD PTR [ebp+0x14]
  40aae9:	sub    DWORD PTR ds:0x42a28a,0x606e
  40aaf3:	test   eax,eax
  40aaf5:	je     0x40ab5c
  40aafb:	mov    eax,DWORD PTR [ebp+0x14]
  40aafe:	mov    eax,DWORD PTR [eax]
  40ab00:	and    DWORD PTR ds:0x42a2fe,0x0
  40ab0a:	jmp    0x40ab1c
  40ab0f:	mov    ebx,DWORD PTR ds:0x42a2fe
  40ab15:	inc    ebx
  40ab16:	mov    DWORD PTR ds:0x42a2fe,ebx
  40ab1c:	cmp    DWORD PTR ds:0x42a2fe,0x11
  40ab23:	jae    0x40ab59
  40ab29:	cmp    DWORD PTR ds:0x42a2fe,0x1c
  40ab30:	jge    0x40ab59
  40ab36:	jmp    0x40ab54
  40ab3b:	push   DWORD PTR [ebp-0x20]
  40ab3e:	push   DWORD PTR [ebp-0x10]
  40ab41:	push   0x1b8e
  40ab46:	push   DWORD PTR [ebp-0xc]
  40ab49:	push   0x42a28e
  40ab4e:	call   DWORD PTR ds:0x42a3de
  40ab54:	jmp    0x40ab0f
  40ab59:	mov    DWORD PTR [ebp-0x1c],eax
  40ab5c:	sub    DWORD PTR ds:0x42a2f2,0x6975
  40ab66:	mov    eax,DWORD PTR [ebp-0x4]
  40ab69:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  40ab73:	xor    eax,esi
  40ab75:	add    eax,edi
  40ab77:	mov    ebx,DWORD PTR ds:0x42a306
  40ab7d:	mov    ebx,DWORD PTR [ebx]
  40ab7f:	and    DWORD PTR ds:0x42a2e6,ebx
  40ab85:	mov    DWORD PTR [ebp-0x8],eax
  40ab88:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  40ab92:	mov    eax,DWORD PTR [ebp-0xc]
  40ab95:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  40ab9f:	xor    eax,esi
  40aba1:	add    eax,edi
  40aba3:	dec    DWORD PTR ds:0x42a2be
  40aba9:	mov    DWORD PTR [ebp-0x24],eax
  40abac:	mov    eax,DWORD PTR [ebp-0x4]
  40abaf:	and    DWORD PTR ds:0x42a2be,0x0
  40abb9:	jmp    0x40abcb
  40abbe:	mov    ebx,DWORD PTR ds:0x42a2be
  40abc4:	inc    ebx
  40abc5:	mov    DWORD PTR ds:0x42a2be,ebx
  40abcb:	cmp    DWORD PTR ds:0x42a2be,0x13
  40abd2:	jae    0x40ac19
  40abd8:	cmp    DWORD PTR ds:0x42a2be,0x4
  40abdf:	jb     0x40ac19
  40abe5:	jmp    0x40abfa
  40abea:	push   0x68db
  40abef:	push   0x42a266
  40abf4:	call   DWORD PTR ds:0x42a40a
  40abfa:	cmp    DWORD PTR ds:0x42a2be,0x3
  40ac01:	jne    0x40ac14
  40ac07:	mov    ebx,DWORD PTR ds:0x42a2be
  40ac0d:	inc    ebx
  40ac0e:	mov    DWORD PTR ds:0x42a2be,ebx
  40ac14:	jmp    0x40abbe
  40ac19:	xor    eax,esi
  40ac1b:	movzx  ebx,WORD PTR ds:0x42a266
  40ac22:	or     DWORD PTR ds:0x42a2ae,ebx
  40ac28:	add    eax,edi
  40ac2a:	mov    DWORD PTR [ebp-0x30],eax
  40ac2d:	mov    ebx,DWORD PTR [ebp-0x4]
  40ac30:	sbb    DWORD PTR ds:0x42a2c2,edi
  40ac36:	xor    ebx,esi
  40ac38:	and    DWORD PTR ds:0x42a292,0x0
  40ac42:	jmp    0x40ac52
  40ac47:	mov    eax,ds:0x42a292
  40ac4c:	inc    eax
  40ac4d:	mov    ds:0x42a292,eax
  40ac52:	cmp    DWORD PTR ds:0x42a292,0x1c
  40ac59:	jae    0x40ac82
  40ac5f:	cmp    DWORD PTR ds:0x42a292,0x26
  40ac66:	jbe    0x40ac82
  40ac6c:	jmp    0x40ac7d
  40ac71:	push   DWORD PTR [ebp-0x1c]
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42a3e2
  40ac7d:	jmp    0x40ac47
  40ac82:	add    ebx,edi
  40ac84:	mov    eax,DWORD PTR [ebp-0x24]
  40ac87:	sbb    DWORD PTR ds:0x42a2d2,0x3c99
  40ac91:	sub    eax,edi
  40ac93:	adc    DWORD PTR ds:0x42a2be,0x42a266
  40ac9d:	lea    ecx,[ebx-0x3272f1]
  40aca3:	inc    DWORD PTR ds:0x42a272
  40aca9:	xor    eax,esi
  40acab:	xor    ecx,esi
  40acad:	cmp    ecx,eax
  40acaf:	mov    DWORD PTR ds:0x42a28e,0x7ce
  40acb9:	je     0x40f5ba
  40acbf:	mov    eax,DWORD PTR [ebp-0x4]
  40acc2:	xor    eax,esi
  40acc4:	add    eax,edi
  40acc6:	mov    DWORD PTR ds:0x42a2be,0x2860
  40acd0:	cmp    ebx,eax
  40acd2:	jne    0x40f597
  40acd8:	xor    DWORD PTR ds:0x42a27e,0x42a2f2
  40ace2:	push   DWORD PTR [ebp+0x8]
  40ace5:	call   0x424fe2
  40acea:	mov    DWORD PTR [ebp-0x14],eax
  40aced:	and    DWORD PTR ds:0x42a2ca,0x0
  40acf7:	jmp    0x40ad07
  40acfc:	mov    eax,ds:0x42a2ca
  40ad01:	inc    eax
  40ad02:	mov    ds:0x42a2ca,eax
  40ad07:	cmp    DWORD PTR ds:0x42a2ca,0x1f
  40ad0e:	jae    0x40ad4c
  40ad14:	cmp    DWORD PTR ds:0x42a2ca,0xa
  40ad1b:	jge    0x40ad4c
  40ad21:	jmp    0x40ad2f
  40ad26:	push   DWORD PTR [ebp-0x18]
  40ad29:	call   DWORD PTR ds:0x42a3ea
  40ad2f:	cmp    DWORD PTR ds:0x42a2ca,0x9
  40ad36:	jne    0x40ad47
  40ad3c:	mov    eax,ds:0x42a2ca
  40ad41:	inc    eax
  40ad42:	mov    ds:0x42a2ca,eax
  40ad47:	jmp    0x40acfc
  40ad4c:	mov    eax,DWORD PTR [ebp-0x4]
  40ad4f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad52:	add    DWORD PTR ds:0x42a2a6,0x42a28e
  40ad5c:	jmp    0x40d0d8
  40ad61:	sub    bl,BYTE PTR [ebp-0xd]
  40ad64:	mov    BYTE PTR es:[esi+0x15a851a2],al
  40ad6b:	pop    ds
  40ad6c:	sub    DWORD PTR [ecx-0xf],0x9
  40ad70:	push   esi
  40ad71:	xor    esi,ecx
  40ad73:	add    DWORD PTR [ebx-0x7c7ca1de],0xffffffdb
  40ad7a:	xchg   ebx,eax
  40ad7b:	push   0xb1685fbe
  40ad80:	leave  
  40ad81:	mov    ds:0xaec6204e,eax
  40ad86:	outs   dx,DWORD PTR ds:[esi]
  40ad87:	(bad)  
  40ad89:	js     0x40ae08
  40ad8b:	ret    
  40ad8c:	dec    ecx
  40ad8d:	sub    BYTE PTR [eax-0x3e],0x44
  40ad91:	(bad)  [edi-0xb03efee]
  40ad97:	test   ecx,ebx
  40ad99:	cs pop edi
  40ad9b:	(bad)  
  40ad9c:	jmp    0xab55eefb
  40ada1:	mov    al,BYTE PTR [eax+ecx*4]
  40ada4:	add    al,0x42
  40ada6:	(bad)  
  40ada7:	mov    edi,0xbc96d9ba
  40adac:	out    dx,al
  40adad:	pop    esp
  40adae:	inc    esp
  40adaf:	push   esp
  40adb0:	or     eax,DWORD PTR ds:0xd98f15d2
  40adb6:	xor    ch,bl
  40adb8:	push   esp
  40adb9:	(bad)  
  40adba:	cmp    eax,0x4fea5c4e
  40adbf:	mov    ds:0x90a59e31,eax
  40adc4:	mov    WORD PTR [eax+0xe482b9e],fs
  40adca:	lahf   
  40adcb:	pop    esp
  40adcc:	jmp    0xb76b:0x7ee303fe
  40add3:	adc    ch,BYTE PTR [ecx]
  40add5:	dec    edi
  40add6:	xchg   ebp,eax
  40add7:	adc    edx,DWORD PTR [eax+0x7a78019a]
  40addd:	imul   edx,DWORD PTR [ecx],0xacae7183
  40ade3:	loopne 0x40ae59
  40ade5:	cdq    
  40ade6:	jle    0x40ae3e
  40ade8:	push   cs
  40ade9:	jg     0x40adef
  40adeb:	test   eax,0x6922c91a
  40adf0:	xor    BYTE PTR ds:0x12ce535c,bl
  40adf6:	call   0x19c0:0xb8348b83
  40adfd:	test   al,0xcf
  40adff:	xchg   esi,eax
  40ae00:	loope  0x40ae2c
  40ae02:	push   edx
  40ae03:	or     edi,esi
  40ae05:	iret   
  40ae06:	stos   BYTE PTR es:[edi],al
  40ae07:	mov    bl,bl
  40ae09:	shl    DWORD PTR [edx+edi*1+0x6b945300],0xc6
  40ae11:	pop    ds
  40ae12:	test   eax,0x3b2c8e5
  40ae17:	lea    ebx,[edi]
  40ae19:	scas   al,BYTE PTR es:[edi]
  40ae1a:	popa   
  40ae1b:	pop    esi
  40ae1c:	push   ss
  40ae1d:	jmp    0xa107:0x770c520c
  40ae24:	lea    edx,[esi]
  40ae26:	ja     0x40adf9
  40ae28:	jno    0x40ae3c
  40ae2a:	ret    
  40ae2b:	test   eax,0x913c5e51
  40ae30:	mov    esp,0xd24d1b0c
  40ae35:	out    0x14,eax
  40ae37:	outs   dx,DWORD PTR ds:[esi]
  40ae38:	sub    eax,DWORD PTR [edi+0xab377a7]
  40ae3e:	ds hlt 
  40ae40:	sbb    al,0xeb
  40ae42:	mov    al,0x4f
  40ae44:	(bad)  
  40ae45:	popf   
  40ae46:	cmc    
  40ae47:	mov    esi,0x9cc94085
  40ae4c:	stos   BYTE PTR es:[edi],al
  40ae4d:	mov    ds:0xb6d45494,eax
  40ae52:	mov    esi,0x88ad12f2
  40ae57:	outs   dx,DWORD PTR es:[esi]
  40ae59:	jg     0x40ae25
  40ae5b:	dec    esi
  40ae5c:	sti    
  40ae5d:	and    al,BYTE PTR [esi-0xa]
  40ae60:	in     al,dx
  40ae61:	adc    al,BYTE PTR [ebx]
  40ae63:	out    0xb5,al
  40ae65:	leave  
  40ae66:	xor    ebp,0x5
  40ae69:	inc    ebp
  40ae6a:	xchg   edi,eax
  40ae6b:	cmp    al,0x47
  40ae6d:	gs inc ebx
  40ae6f:	xchg   BYTE PTR [edi-0x36],bh
  40ae72:	in     eax,dx
  40ae73:	add    al,0xab
  40ae76:	pop    ds
  40ae77:	mov    dl,0x26
  40ae79:	arpl   WORD PTR [eax+0x55],bp
  40ae7c:	or     al,0x6f
  40ae7e:	adc    DWORD PTR [esi],edi
  40ae80:	mov    BYTE PTR [esi],al
  40ae82:	aaa    
  40ae83:	faddp  st(4),st
  40ae85:	dec    ecx
  40ae86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae87:	fld    QWORD PTR [edi+esi*4-0x3fe8ceec]
  40ae8e:	sub    DWORD PTR [edi],ebx
  40ae90:	mov    esp,0x848149c1
  40ae95:	sti    
  40ae96:	shl    DWORD PTR [esi],cl
  40ae98:	pop    ss
  40ae99:	push   cs
  40ae9a:	xchg   BYTE PTR [esi],bh
  40ae9c:	xchg   esi,eax
  40ae9d:	retf   
  40ae9e:	imul   eax,edi,0xffffffde
  40aea1:	and    dh,ah
  40aea3:	dec    eax
  40aea4:	cmp    eax,0x65fc1bb8
  40aea9:	mov    ds:0x54a51e15,al
  40aeae:	xor    esp,DWORD PTR [eax+ebp*8-0x64289051]
  40aeb5:	or     edx,0x4e0763ac
  40aebb:	sub    dh,BYTE PTR [eax+0x4b3f6e6]
  40aec1:	cs xor al,0x7e
  40aec4:	pop    ds
  40aec5:	pop    esp
  40aec6:	xor    BYTE PTR [eax-0x6b],bl
  40aec9:	pop    ecx
  40aeca:	or     ecx,DWORD PTR [eax+0x28]
  40aecd:	ss rol ecx,0xfc
  40aed1:	mov    ecx,0xa8309a20
  40aed6:	inc    edi
  40aed7:	jb     0x40aec3
  40aed9:	cli    
  40aeda:	int    0x9e
  40aedc:	push   esp
  40aedd:	cld    
  40aede:	jmp    0x40aea8
  40aee0:	push   eax
  40aee1:	je     0x40aed1
  40aee3:	cs mov bh,0x34
  40aee6:	(bad)  
  40aee7:	cmp    eax,0xcdc340cf
  40aeec:	retf   0x19ee
  40aeef:	cmp    edx,DWORD PTR [ecx]
  40aef1:	mov    dh,0xb4
  40aef3:	outs   dx,BYTE PTR ds:[esi]
  40aef4:	scas   eax,DWORD PTR es:[edi]
  40aef5:	std    
  40aef6:	sub    al,0xd9
  40aef8:	mov    ds,WORD PTR [edi+0x67]
  40aefb:	cmp    eax,0x6bd99081
  40af00:	ror    bl,cl
  40af02:	fmul   QWORD PTR [ebx-0x95a1922]
  40af08:	arpl   sp,di
  40af0a:	pop    esi
  40af0b:	es mov esi,0x8b84b4c4
  40af11:	dec    ebp
  40af12:	mov    ebp,0xb29fde54
  40af17:	sbb    esi,esp
  40af19:	pusha  
  40af1a:	cld    
  40af1b:	adc    esp,esp
  40af1d:	sbb    eax,edi
  40af1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af20:	adc    al,0xd7
  40af22:	adc    al,0x84
  40af24:	add    eax,0xb6894ab1
  40af29:	ds push edx
  40af2b:	xor    al,0x39
  40af2d:	xor    DWORD PTR [edx],edi
  40af2f:	aam    0x8d
  40af31:	sbb    edx,DWORD PTR [eax-0x31c16a92]
  40af37:	arpl   cx,dx
  40af39:	cmc    
  40af3a:	adc    DWORD PTR [eax],ecx
  40af3c:	or     DWORD PTR [edi+0x26beeee],0x88a78238
  40af46:	mov    dh,0xb9
  40af48:	mov    ch,0xac
  40af4a:	into   
  40af4b:	cld    
  40af4c:	in     eax,dx
  40af4d:	jg     0x40af33
  40af4f:	repnz sbb DWORD PTR [ecx],esp
  40af52:	test   esp,0x57f5085
  40af58:	xchg   edx,eax
  40af59:	and    DWORD PTR [esi],0xffffffa1
  40af5c:	loop   0x40af45
  40af5e:	mov    al,ds:0x386fd317
  40af63:	mov    ebx,0x8ae0f517
  40af68:	arpl   bx,di
  40af6a:	jns    0x40afc7
  40af6c:	mov    ah,0x2c
  40af6e:	(bad)  
  40af70:	xor    cl,ch
  40af72:	xor    eax,DWORD PTR ds:0x896838ab
  40af78:	inc    esp
  40af79:	or     eax,0x42a7c572
  40af7e:	mov    ebp,0x52a2b268
  40af83:	scas   eax,DWORD PTR es:[edi]
  40af84:	mov    eax,ds:0x7fb922eb
  40af89:	inc    edi
  40af8a:	dec    edx
  40af8b:	test   eax,0x94cd0215
  40af90:	test   al,0x9e
  40af92:	mov    dl,0xda
  40af94:	adc    eax,0xfac585ba
  40af99:	push   0x938c47c8
  40af9e:	ret    
  40af9f:	push   edx
  40afa0:	pop    esi
  40afa1:	add    al,0xc1
  40afa3:	or     al,0x6e
  40afa5:	mov    esp,0x8c2c59a7
  40afaa:	test   BYTE PTR ds:0xc85095dd,cl
  40afb0:	outs   dx,DWORD PTR ds:[esi]
  40afb1:	mov    DWORD PTR [edi],esi
  40afb3:	scas   al,BYTE PTR es:[edi]
  40afb4:	or     ah,cl
  40afb6:	retf   
  40afb7:	outs   dx,DWORD PTR ds:[esi]
  40afb8:	stc    
  40afb9:	inc    ecx
  40afba:	nop
  40afbb:	into   
  40afbc:	out    0xdc,eax
  40afbe:	pop    ds
  40afbf:	cmp    eax,ebx
  40afc1:	inc    ecx
  40afc2:	inc    esp
  40afc3:	popa   
  40afc4:	fdivr  QWORD PTR [edx]
  40afc6:	imul   eax,DWORD PTR [edx-0x67e85057],0x4c
  40afcd:	stos   DWORD PTR es:[edi],eax
  40afce:	inc    esi
  40afcf:	pop    es
  40afd0:	out    dx,eax
  40afd1:	leave  
  40afd2:	and    BYTE PTR [edx-0x4cd1417b],cl
  40afd8:	mov    al,ds:0x6ce5d55b
  40afdd:	push   edx
  40afde:	xchg   esp,eax
  40afdf:	add    al,BYTE PTR ss:[edx-0x8]
  40afe3:	inc    BYTE PTR [ecx+0x56]
  40afe6:	mov    eax,ds:0xf4ec8171
  40afeb:	repnz imul BYTE PTR [esi-0x2e]
  40afef:	in     al,dx
  40aff0:	cmp    BYTE PTR [esp+edx*4-0x12],bl
  40aff4:	hlt    
  40aff5:	fwait
  40aff6:	push   edx
  40aff7:	xchg   ebp,eax
  40aff8:	lds    esp,FWORD PTR [edx]
  40affa:	scas   eax,DWORD PTR es:[edi]
  40affb:	pop    edi
  40affc:	repz dec BYTE PTR [esi+0x1cc0353c]
  40b003:	or     dl,BYTE PTR [ecx]
  40b005:	mov    dl,0xcd
  40b007:	ss daa 
  40b009:	or     eax,0xf13a53e8
  40b00e:	sahf   
  40b00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b010:	pop    ebp
  40b011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b012:	xchg   esp,eax
  40b013:	fist   DWORD PTR [eax+0x169356cb]
  40b019:	icebp  
  40b01a:	jle    0x40b015
  40b01c:	xchg   ebp,eax
  40b01d:	push   edx
  40b01e:	idiv   dh
  40b020:	es cdq 
  40b022:	rol    BYTE PTR [eax-0x8f4feed],0x6f
  40b029:	sbb    DWORD PTR [esi-0x4d4af0f9],ebx
  40b02f:	sub    BYTE PTR [esi-0x73c1f451],0xba
  40b036:	jnp    0x40b014
  40b038:	add    eax,0x4f55b679
  40b03d:	jp     0x40b069
  40b03f:	cli    
  40b040:	or     bh,al
  40b042:	or     al,0x5f
  40b044:	popa   
  40b045:	jo     0x40b08e
  40b047:	dec    ebp
  40b048:	(bad)  
  40b049:	shl    DWORD PTR ds:0x63a9535c,1
  40b04f:	outs   dx,DWORD PTR ds:[esi]
  40b050:	mov    edi,0x7c232660
  40b055:	and    al,0x99
  40b057:	dec    ecx
  40b058:	xor    BYTE PTR [esp+edi*2],dh
  40b05b:	fcom   DWORD PTR [ebx-0x6631a8a8]
  40b061:	lock xor al,0x6a
  40b064:	mov    ebx,edx
  40b066:	push   0x2b2d1167
  40b06b:	xchg   edi,eax
  40b06c:	sub    edi,ecx
  40b06e:	arpl   sp,bx
  40b070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b071:	lds    esi,FWORD PTR [edi]
  40b073:	mov    ch,0x67
  40b075:	jmp    0xb832:0x93902fdb
  40b07c:	popa   
  40b07d:	pop    edx
  40b07e:	in     al,0x65
  40b080:	cmp    BYTE PTR [eax+ebp*8-0x7],bl
  40b084:	fs shl al,1
  40b087:	mov    eax,0xd5571f4e
  40b08c:	(bad)  [eax-0x14]
  40b08f:	cs out 0xe8,eax
  40b092:	inc    edx
  40b093:	xchg   BYTE PTR [edx],dl
  40b095:	daa    
  40b096:	xor    eax,0x446fe751
  40b09b:	and    BYTE PTR [ebx],bl
  40b09d:	xor    eax,0xb8bb974b
  40b0a2:	ds and ebp,0x1e
  40b0a6:	xchg   edx,eax
  40b0a7:	scas   eax,DWORD PTR es:[edi]
  40b0a8:	mov    esp,fs
  40b0aa:	loop   0x40b09c
  40b0ac:	dec    edx
  40b0ad:	adc    bl,BYTE PTR [edi-0x728c1bb]
  40b0b3:	call   0x8796:0x757f35d7
  40b0ba:	add    DWORD PTR [eax+0x3d91f756],ebp
  40b0c0:	outs   dx,DWORD PTR ds:[esi]
  40b0c1:	xlat   BYTE PTR ds:[ebx]
  40b0c2:	mov    esp,edx
  40b0c4:	xchg   edx,eax
  40b0c5:	repnz sbb DWORD PTR [ebx+0x3b],ebp
  40b0c9:	push   esp
  40b0ca:	inc    eax
  40b0cb:	pmaddwd mm6,QWORD PTR [ebx-0x60]
  40b0cf:	jbe    0x40b0d3
  40b0d1:	adc    al,dh
  40b0d3:	outs   dx,BYTE PTR ds:[esi]
  40b0d4:	push   ebx
  40b0d5:	jl     0x40b0c9
  40b0d7:	nop
  40b0d8:	rcr    edx,1
  40b0da:	in     eax,0x87
  40b0dc:	jle    0x40b0ae
  40b0de:	scas   eax,DWORD PTR es:[edi]
  40b0df:	xchg   ebp,eax
  40b0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e1:	push   0x97f54393
  40b0e6:	and    al,0x19
  40b0e8:	fild   WORD PTR [ebx-0x7]
  40b0eb:	or     al,0xc1
  40b0ed:	hlt    
  40b0ee:	inc    esi
  40b0ef:	and    ecx,DWORD PTR [ebx-0x2e]
  40b0f2:	mov    edx,DWORD PTR ds:0xcb8dc691
  40b0f8:	mov    esi,0x69a78a46
  40b0fd:	lahf   
  40b0fe:	or     al,0xa1
  40b100:	cdq    
  40b101:	sbb    edi,DWORD PTR ds:0x956337e
  40b107:	loope  0x40b0f0
  40b109:	hlt    
  40b10a:	ss test al,0x6a
  40b10d:	jg     0x40b0db
  40b10f:	cwde   
  40b110:	ss jnp 0x40b0c7
  40b113:	fs jl  0x40b128
  40b116:	inc    esi
  40b117:	repz and al,0xe8
  40b11a:	xchg   edx,eax
  40b11b:	add    eax,ebx
  40b11d:	pop    esi
  40b11e:	lea    esp,[ecx+0x5c]
  40b121:	push   ss
  40b122:	cmp    DWORD PTR [ebp-0x5b],esp
  40b125:	cwde   
  40b126:	mov    esp,0xe6c363dc
  40b12b:	adc    al,0x31
  40b12d:	or     DWORD PTR [eax],edx
  40b12f:	xor    al,0x24
  40b131:	clts   
  40b133:	dec    edi
  40b134:	loope  0x40b191
  40b136:	ds stos DWORD PTR es:[edi],eax
  40b138:	pop    esi
  40b139:	dec    esi
  40b13a:	mov    ch,BYTE PTR [ebx]
  40b13c:	leave  
  40b13d:	sub    DWORD PTR [ebx],0x4718b4c4
  40b143:	imul   eax,esi,0x16
  40b146:	cli    
  40b147:	fadd   st(3),st
  40b149:	inc    esp
  40b14a:	or     DWORD PTR [ebp+0x59f8bf0f],0x5aac031a
  40b154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b155:	add    DWORD PTR [ecx],ebp
  40b157:	lods   eax,DWORD PTR ds:[esi]
  40b158:	repnz mov al,ds:0x2dde6d9
  40b15e:	adc    BYTE PTR [edx-0xe],0xd5
  40b162:	lods   eax,DWORD PTR ds:[esi]
  40b163:	fucomi st,st(2)
  40b165:	xchg   ebp,eax
  40b166:	sub    bh,BYTE PTR [ebp+0x64483cab]
  40b16c:	mov    dl,0x32
  40b16e:	pop    ss
  40b16f:	sub    BYTE PTR [esi-0x5a],dh
  40b172:	xchg   esi,eax
  40b173:	dec    edx
  40b174:	imul   edi,esi,0xc19a52
  40b17a:	test   DWORD PTR [edi],0x571f1e52
  40b180:	mov    dl,0xa4
  40b182:	fnstenv [esi+0x4e]
  40b185:	popa   
  40b186:	push   ebp
  40b187:	sbb    BYTE PTR [edi],ch
  40b189:	shr    BYTE PTR [ecx],cl
  40b18b:	cdq    
  40b18c:	mov    ch,0xcf
  40b18e:	mov    bl,0x68
  40b190:	icebp  
  40b191:	sar    BYTE PTR [edi+0x65],1
  40b194:	in     eax,dx
  40b195:	(bad)  
  40b196:	lock mov dl,0xa8
  40b199:	xchg   DWORD PTR [edx],edi
  40b19b:	pusha  
  40b19c:	mov    dh,0xda
  40b19e:	repnz and eax,DWORD PTR [esi-0x5ebce731]
  40b1a5:	adc    BYTE PTR ds:0x7ce92657,bl
  40b1ab:	sti    
  40b1ac:	ds sbb dh,ch
  40b1af:	mov    ebx,0x7dcf13a4
  40b1b4:	and    eax,0x4d24412c
  40b1b9:	and    DWORD PTR [edi],ebp
  40b1bb:	ja     0x40b189
  40b1bd:	stc    
  40b1be:	out    dx,al
  40b1bf:	push   edx
  40b1c0:	mov    esp,0x51aa9343
  40b1c5:	push   es
  40b1c6:	xor    al,0x46
  40b1c8:	adc    eax,0xb96208cd
  40b1cd:	jle    0x40b1a0
  40b1cf:	fmul   st,st(6)
  40b1d1:	pushf  
  40b1d2:	mov    dh,0x39
  40b1d4:	mov    ch,0x41
  40b1d6:	or     bh,BYTE PTR [eax-0x75]
  40b1d9:	fdivrp st(0),st
  40b1db:	in     al,0x29
  40b1dd:	cmc    
  40b1de:	fbld   TBYTE PTR [ebp+0xb]
  40b1e1:	cmp    ch,BYTE PTR [ecx]
  40b1e3:	lods   eax,DWORD PTR ds:[esi]
  40b1e4:	xchg   BYTE PTR [ebx+0x66],al
  40b1e7:	xchg   ecx,eax
  40b1e8:	push   0xffffffdc
  40b1ea:	jo     0x40b20c
  40b1ec:	pop    esp
  40b1ed:	mov    ecx,0x8f37aa4
  40b1f2:	icebp  
  40b1f3:	and    al,bh
  40b1f5:	mov    esi,0x95d6b32a
  40b1fa:	jnp    0x40b1a2
  40b1fc:	jmp    0x40b1d0
  40b1fe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b200:	outs   dx,BYTE PTR ds:[esi]
  40b201:	mov    al,0x54
  40b203:	icebp  
  40b204:	retf   0xfbf4
  40b207:	loop   0x40b1da
  40b209:	sbb    dl,cl
  40b20b:	mov    dh,0xcc
  40b20d:	daa    
  40b20e:	popf   
  40b20f:	rol    ch,cl
  40b211:	jge    0x40b28f
  40b213:	(bad)  
  40b215:	and    ebp,DWORD PTR [ecx-0x5bd01c6]
  40b21b:	xchg   ecx,eax
  40b21c:	scas   eax,DWORD PTR es:[edi]
  40b21d:	jne    0x40b1b6
  40b21f:	pop    es
  40b220:	mov    ch,0x9
  40b222:	mov    ch,0x7d
  40b224:	adc    BYTE PTR [ebp+ebx*1+0x36],0xe6
  40b229:	int3   
  40b22a:	sahf   
  40b22b:	sbb    bh,BYTE PTR [esi]
  40b22d:	mov    dl,0xdf
  40b22f:	adc    DWORD PTR [ebp+0x427235d4],0x335ae374
  40b239:	mov    ebp,0xae7a7872
  40b23e:	push   ds
  40b23f:	js     0x40b237
  40b241:	lea    edi,[edx]
  40b243:	cli    
  40b244:	push   ecx
  40b245:	adc    BYTE PTR [esi+0x16f9c534],dl
  40b24b:	loope  0x40b226
  40b24d:	call   0xe2cc:0x26e01ab5
  40b254:	sub    BYTE PTR [eax],al
  40b256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b257:	or     al,BYTE PTR ss:[esi]
  40b25a:	sub    BYTE PTR [ebx+0x2f],cl
  40b25d:	adc    BYTE PTR [ebx+0x6],dl
  40b260:	es jmp 0x9ea81add
  40b266:	and    eax,DWORD PTR [ebp-0x4e2cc02e]
  40b26c:	jnp    0x40b2b0
  40b26e:	(bad)  
  40b26f:	sub    bl,bl
  40b271:	mov    ch,0xcd
  40b273:	add    DWORD PTR [esi-0x66c903c7],esi
  40b279:	push   esi
  40b27a:	ins    DWORD PTR es:[edi],dx
  40b27b:	cmp    BYTE PTR [eax],0x71
  40b27e:	jmp    0x40b2a6
  40b280:	xlat   BYTE PTR ds:[ebx]
  40b281:	mov    al,0x0
  40b283:	fdivr  QWORD PTR [edi+0x5b]
  40b286:	and    ecx,DWORD PTR es:[edi+0x78]
  40b28a:	cvtdq2ps xmm6,XMMWORD PTR [ecx+0x1412fe89]
  40b291:	in     eax,0xdc
  40b293:	inc    eax
  40b294:	lds    eax,FWORD PTR [ebx]
  40b296:	cmp    dh,bh
  40b298:	into   
  40b299:	leave  
  40b29a:	mov    esi,edx
  40b29c:	cmp    DWORD PTR [ebp+0x7a60d6ff],esi
  40b2a2:	fld    st(5)
  40b2a4:	stc    
  40b2a5:	pop    ebx
  40b2a6:	cmp    BYTE PTR [ecx],bh
  40b2a8:	jb     0x40b2e4
  40b2aa:	jno    0x40b239
  40b2ac:	inc    esp
  40b2ad:	cld    
  40b2ae:	outs   dx,BYTE PTR ds:[esi]
  40b2af:	mov    bh,0x91
  40b2b1:	outs   dx,DWORD PTR ds:[esi]
  40b2b2:	jo     0x40b328
  40b2b4:	sbb    eax,DWORD PTR [ebx]
  40b2b6:	and    al,0x5e
  40b2b8:	retf   
  40b2b9:	rcr    DWORD PTR [eax-0x123c387d],cl
  40b2bf:	repz dec edx
  40b2c1:	sar    DWORD PTR [edx-0x7d8b6fce],cl
  40b2c7:	ffree  st(0)
  40b2c9:	dec    ebp
  40b2ca:	ficom  DWORD PTR [esi+0x3d2bda34]
  40b2d0:	push   ebp
  40b2d1:	cmp    al,BYTE PTR [ebx-0x74]
  40b2d4:	inc    esp
  40b2d5:	int    0x9d
  40b2d7:	adc    BYTE PTR [ebp+0x29d6ccde],dh
  40b2dd:	mov    bl,0xea
  40b2df:	push   ecx
  40b2e0:	jmp    0x40b2ca
  40b2e2:	into   
  40b2e3:	xchg   esp,eax
  40b2e4:	mov    al,ds:0xdc7ceb1d
  40b2e9:	js     0x40b292
  40b2eb:	leave  
  40b2ec:	sub    eax,0xc3a86e00
  40b2f1:	stos   DWORD PTR es:[edi],eax
  40b2f2:	jne    0x40b2ec
  40b2f4:	dec    ebp
  40b2f5:	push   0x3a
  40b2f7:	test   DWORD PTR [ebx],eax
  40b2f9:	xor    eax,0x3d8593f7
  40b2fe:	sahf   
  40b2ff:	push   esp
  40b300:	sahf   
  40b301:	push   ds
  40b302:	mov    fs,WORD PTR [edx+0x75]
  40b305:	call   0xd170:0xc305ce5c
  40b30c:	push   ecx
  40b30d:	mov    ch,0x49
  40b30f:	sub    esi,esp
  40b311:	pop    ecx
  40b312:	xchg   ecx,eax
  40b313:	jmp    0x58eb:0xc97a71e4
  40b31a:	xor    ebp,esp
  40b31c:	mov    bh,0xb6
  40b31e:	dec    edx
  40b31f:	jae    0x40b312
  40b321:	std    
  40b322:	sar    BYTE PTR [ecx-0x25f82af9],cl
  40b328:	mov    ebp,0x5f9c1d81
  40b32d:	inc    ebp
  40b32e:	mov    bh,0xf
  40b330:	cmp    eax,0x85028e4
  40b335:	ins    BYTE PTR es:[edi],dx
  40b336:	je     0x40b342
  40b338:	mov    dl,0xb7
  40b33a:	sub    dl,BYTE PTR [edx-0x17]
  40b33d:	xchg   ebp,eax
  40b33e:	xlat   BYTE PTR ds:[ebx]
  40b33f:	cmp    bl,BYTE PTR [ebx+0x78]
  40b342:	in     al,dx
  40b343:	lods   al,BYTE PTR ds:[esi]
  40b344:	sub    al,0xd2
  40b346:	ss jb  0x40b3b2
  40b349:	jne    0x6a39a208
  40b34f:	ror    DWORD PTR [eax],1
  40b351:	cmp    BYTE PTR [ecx],0xc8
  40b354:	sub    al,0xbd
  40b356:	and    al,al
  40b358:	jne    0x40b381
  40b35a:	leave  
  40b35b:	ror    BYTE PTR [ebp+ebp*1-0x29c47f10],cl
  40b362:	(bad)  [edx-0x4fbaee67]
  40b368:	(bad)  
  40b369:	xchg   edx,eax
  40b36a:	sti    
  40b36b:	fmul   st,st(6)
  40b36d:	or     BYTE PTR es:[edx+0x56858dff],ah
  40b374:	cmc    
  40b375:	(bad)  
  40b376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b377:	fstp   QWORD PTR [eax]
  40b379:	adc    al,0x23
  40b37b:	test   BYTE PTR [ebp+edi*2-0x72],cl
  40b37f:	push   ss
  40b380:	in     eax,0xc6
  40b382:	cs dec edi
  40b384:	inc    eax
  40b385:	leave  
  40b386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b387:	inc    edi
  40b388:	jmp    0xefa8:0x82156780
  40b38f:	xchg   esp,eax
  40b390:	jae    0x40b36d
  40b392:	test   eax,0xcd30189a
  40b397:	mov    edx,0x775a4749
  40b39c:	dec    DWORD PTR [edx]
  40b39e:	cmp    al,0x72
  40b3a0:	push   0x2b75c57b
  40b3a5:	ss sub eax,0x9105603a
  40b3ab:	pop    eax
  40b3ac:	cmp    al,0x1d
  40b3ae:	out    0x63,al
  40b3b0:	test   DWORD PTR [eax+0x24],0x51ca8a06
  40b3b7:	inc    ebx
  40b3b8:	pop    ds
  40b3b9:	mov    ds:0xcc1a8283,al
  40b3be:	clc    
  40b3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c0:	(bad)  
  40b3c1:	mov    dl,0x2e
  40b3c3:	xchg   esp,eax
  40b3c4:	mov    ebp,0xcda70e31
  40b3c9:	inc    edx
  40b3ca:	rcl    eax,cl
  40b3cc:	and    bl,0x61
  40b3cf:	ror    bl,cl
  40b3d1:	jp     0x40b38b
  40b3d3:	inc    edi
  40b3d4:	push   ebx
  40b3d5:	dec    eax
  40b3d6:	push   eax
  40b3d7:	sahf   
  40b3d8:	daa    
  40b3d9:	sub    DWORD PTR [eax-0x13090d6f],esp
  40b3df:	rol    BYTE PTR [ebx-0x1429da9e],cl
  40b3e5:	leave  
  40b3e6:	cli    
  40b3e7:	jbe    0x40b3d0
  40b3e9:	cwde   
  40b3ea:	sub    al,0x30
  40b3ec:	lods   eax,DWORD PTR ds:[esi]
  40b3ed:	aas    
  40b3ee:	jo     0x40b378
  40b3f0:	loop   0x40b413
  40b3f2:	fidiv  WORD PTR [edx]
  40b3f4:	out    dx,al
  40b3f5:	add    al,0x74
  40b3f7:	dec    BYTE PTR [esp+ebp*2+0x21]
  40b3fb:	std    
  40b3fc:	jbe    0x40b3b0
  40b3fe:	xor    al,0xe
  40b400:	inc    esp
  40b401:	adc    ebp,DWORD PTR [esp+edx*4]
  40b404:	jmp    0x1034c7ad
  40b409:	arpl   WORD PTR ds:[edi-0x1a087e9b],dx
  40b410:	scas   eax,DWORD PTR es:[edi]
  40b411:	inc    edx
  40b412:	mov    al,0x2e
  40b414:	mov    BYTE PTR [ebx+ebp*1+0xb5ad158],cl
  40b41b:	lock mov dh,0xb3
  40b41e:	out    0x9b,eax
  40b420:	retf   
  40b421:	dec    edi
  40b422:	cmp    ebx,edx
  40b424:	mov    edx,0x4b2a68e8
  40b429:	imul   DWORD PTR [ebx+0x56d03915]
  40b42f:	dec    edx
  40b430:	mov    bl,0x45
  40b432:	fstp   TBYTE PTR [ebp+eax*4+0x7af2696]
  40b439:	inc    edx
  40b43a:	ins    DWORD PTR es:[edi],dx
  40b43b:	add    cl,BYTE PTR [eax-0x3e]
  40b43e:	inc    sp
  40b440:	adc    cl,BYTE PTR [esi]
  40b442:	adc    DWORD PTR [ebp+0x326817f4],eax
  40b448:	loopne 0x40b3e1
  40b44a:	test   DWORD PTR [ecx+0x675f921c],ecx
  40b450:	jnp    0x40b4cf
  40b452:	xchg   esp,eax
  40b453:	dec    esi
  40b454:	loopne 0x40b3fd
  40b456:	push   ecx
  40b457:	icebp  
  40b458:	pop    edx
  40b459:	stc    
  40b45a:	lock rcl DWORD PTR [edx+0x14],cl
  40b45e:	retf   
  40b45f:	mov    dh,0x24
  40b461:	sbb    BYTE PTR ds:0x111cb0f4,bh
  40b467:	jnp    0x40b49e
  40b469:	xchg   ebx,eax
  40b46a:	cmp    eax,0x706ae961
  40b46f:	xchg   ah,bl
  40b471:	sbb    DWORD PTR [ebx+0x1fd8c93c],0x17
  40b478:	lahf   
  40b479:	push   ds
  40b47a:	mov    ch,0x41
  40b47c:	push   ecx
  40b47d:	push   ebp
  40b47e:	imul   edi,ecx,0xaa5c8ed7
  40b484:	mov    ebx,0xf53336a0
  40b489:	inc    edi
  40b48a:	mov    cl,BYTE PTR [edi+0x66]
  40b48d:	iret   
  40b48e:	cmp    BYTE PTR [ebp+0x4c],0xec
  40b492:	test   eax,0x7272121
  40b498:	ins    BYTE PTR es:[edi],dx
  40b499:	arpl   WORD PTR [eax],bp
  40b49b:	(bad)  
  40b49c:	loope  0x40b4eb
  40b49e:	dec    ebx
  40b49f:	int    0x7c
  40b4a1:	call   0x193e:0x2e80a456
  40b4a8:	stos   DWORD PTR es:[edi],eax
  40b4a9:	retf   0x5378
  40b4ac:	ds jne 0x40b4bc
  40b4af:	and    dl,BYTE PTR [eax+ebp*8]
  40b4b2:	adc    BYTE PTR ds:0x21622d61,al
  40b4b8:	xchg   ecx,eax
  40b4b9:	test   BYTE PTR [esi-0x1b37a225],ch
  40b4bf:	cs (bad) 
  40b4c1:	xchg   edi,eax
  40b4c2:	pop    ds
  40b4c3:	stos   BYTE PTR es:[edi],al
  40b4c4:	out    0xf0,eax
  40b4c6:	mov    ch,0xb9
  40b4c8:	sbb    al,0xd0
  40b4ca:	cli    
  40b4cb:	std    
  40b4cc:	(bad)  
  40b4cd:	aad    0xe7
  40b4cf:	loopne 0x40b456
  40b4d1:	cmp    dl,dh
  40b4d3:	dec    ecx
  40b4d4:	shl    BYTE PTR [ecx],0xe1
  40b4d7:	adc    al,0x5
  40b4d9:	pop    edi
  40b4da:	xor    ch,al
  40b4dc:	sbb    cl,ah
  40b4de:	mov    ah,0x46
  40b4e0:	push   edi
  40b4e1:	jne    0x40b4fb
  40b4e3:	in     al,0x42
  40b4e5:	cmp    edi,0x2c
  40b4e8:	sbb    esp,esi
  40b4ea:	mov    bl,0xaf
  40b4ec:	adc    ebx,esi
  40b4ee:	sub    eax,0x50b32396
  40b4f3:	mov    ds:0xd84d44d0,al
  40b4f8:	xchg   esi,eax
  40b4f9:	mov    esp,DWORD PTR [ebx]
  40b4fb:	data16 sahf 
  40b4fd:	arpl   bp,si
  40b4ff:	and    al,0x6a
  40b501:	jmp    0x7370:0x72558a34
  40b508:	adc    DWORD PTR [edx-0x24],eax
  40b50b:	sti    
  40b50c:	add    cl,BYTE PTR [edi+0xc9789d2]
  40b512:	mov    ecx,0x9db22992
  40b517:	fcomip st,st(4)
  40b519:	loope  0x40b517
  40b51b:	ret    0xf4b5
  40b51e:	mov    edx,0xe0cc2282
  40b523:	or     eax,DWORD PTR [esi]
  40b525:	pop    DWORD PTR [edi+0x33]
  40b528:	xchg   ebx,eax
  40b529:	sbb    eax,0x361ac6fe
  40b52e:	lods   eax,DWORD PTR ds:[esi]
  40b52f:	jecxz  0x40b509
  40b531:	sti    
  40b532:	sbb    al,0x13
  40b534:	push   ds
  40b535:	ds gs jno 0x40b5b5
  40b539:	enter  0xe7b8,0xac
  40b53d:	jmp    0x40b4d0
  40b53f:	inc    edi
  40b540:	dec    ecx
  40b541:	jbe    0x40b53f
  40b543:	xchg   esp,eax
  40b544:	int3   
  40b545:	mov    ss,WORD PTR [eax+ecx*8+0x28a2bbba]
  40b54c:	and    cl,ch
  40b54e:	aaa    
  40b54f:	cmp    DWORD PTR [ecx-0x27],ecx
  40b552:	fnstsw WORD PTR [esi+eiz*4]
  40b555:	fsubr  QWORD PTR [edx]
  40b557:	dec    esp
  40b558:	push   es
  40b559:	jmp    0xd3f52a2f
  40b55e:	fnstsw WORD PTR [ebx]
  40b560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b561:	cli    
  40b562:	test   eax,0x9d6d76d9
  40b567:	jns    0x40b503
  40b569:	xchg   edi,eax
  40b56a:	adc    dh,cl
  40b56c:	sbb    edx,DWORD PTR [ebp-0x2e]
  40b56f:	adc    al,0x13
  40b571:	push   0xac4d69ee
  40b576:	addr16 jle 0x40b512
  40b579:	push   ecx
  40b57a:	xchg   esi,eax
  40b57b:	test   BYTE PTR [esi-0x9],0xb6
  40b57f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b581:	cmp    BYTE PTR [ebx+edx*2+0x72809116],cl
  40b588:	or     al,0xb8
  40b58a:	adc    BYTE PTR [ebx+0x38b70e82],cl
  40b590:	outs   dx,BYTE PTR ds:[esi]
  40b591:	add    eax,0x516513d7
  40b596:	repz sbb bh,BYTE PTR [esi+0x5]
  40b59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b59b:	cmp    ebx,edx
  40b59d:	in     eax,dx
  40b59e:	sbb    esi,DWORD PTR [ebp-0x36]
  40b5a1:	call   0xd2c0:0xcab50b58
  40b5a8:	in     al,dx
  40b5a9:	xchg   ecx,eax
  40b5aa:	xchg   ebx,eax
  40b5ab:	pusha  
  40b5ac:	sbb    DWORD PTR [ebx+0xa7e7235],0xce8a4746
  40b5b6:	jne    0x40b622
  40b5b8:	xchg   BYTE PTR [ebx+eax*1-0xf],ch
  40b5bc:	or     bl,BYTE PTR ds:0x8cdaef73
  40b5c2:	mov    ds,WORD PTR [edx+0xd]
  40b5c5:	sub    eax,0x96706160
  40b5ca:	cdq    
  40b5cb:	mov    BYTE PTR [edx],ah
  40b5cd:	daa    
  40b5ce:	aaa    
  40b5cf:	push   0xcdf97d6b
  40b5d4:	and    BYTE PTR [esi+eax*2],0x21
  40b5d8:	mov    dh,0xf7
  40b5da:	lods   eax,DWORD PTR ds:[esi]
  40b5db:	lock outs dx,BYTE PTR ds:[esi]
  40b5dd:	or     ebx,ebx
  40b5df:	or     eax,0x15ac1ede
  40b5e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e5:	xchg   ebp,eax
  40b5e6:	push   cs
  40b5e7:	cmp    eax,0xc0b1dd53
  40b5ec:	mov    BYTE PTR [edx],al
  40b5ee:	stc    
  40b5ef:	int3   
  40b5f0:	push   esp
  40b5f1:	mov    bh,0x48
  40b5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5f4:	xchg   esp,eax
  40b5f5:	int3   
  40b5f6:	rcr    BYTE PTR [esi-0x3a66e44],cl
  40b5fc:	daa    
  40b5fd:	mov    al,0x60
  40b5ff:	mov    ecx,0xdb94c78b
  40b604:	mov    BYTE PTR [edx+edx*4],bl
  40b607:	ret    
  40b608:	fsub   QWORD PTR [esi+0x34]
  40b60b:	mov    ecx,0xacae99c2
  40b610:	mov    esi,0x4681d17f
  40b615:	fwait
  40b616:	pusha  
  40b617:	push   eax
  40b618:	sahf   
  40b619:	push   esp
  40b61a:	pusha  
  40b61b:	pop    ebp
  40b61c:	out    dx,eax
  40b61d:	hlt    
  40b61e:	jecxz  0x40b61e
  40b620:	xlat   BYTE PTR ds:[ebx]
  40b621:	or     al,0xcb
  40b623:	je     0x40b64c
  40b625:	sbb    edx,esp
  40b627:	sar    DWORD PTR [esi+0x75b77161],1
  40b62d:	cdq    
  40b62e:	mov    bh,0x40
  40b630:	in     al,dx
  40b631:	pcmpeqw mm1,QWORD PTR [edx+edx*8-0x1b]
  40b636:	(bad)  
  40b637:	fnsave [edi]
  40b639:	or     eax,0x8abfe31
  40b63e:	outs   dx,DWORD PTR ds:[esi]
  40b63f:	xchg   esi,eax
  40b640:	and    esi,esp
  40b642:	mov    dl,0xd
  40b644:	popa   
  40b645:	add    ch,BYTE PTR [edx-0x249bbbd5]
  40b64b:	dec    esp
  40b64c:	icebp  
  40b64d:	rol    al,1
  40b64f:	push   ecx
  40b650:	adc    bh,bl
  40b652:	adc    DWORD PTR [edi+0x731c3983],edi
  40b658:	pop    esi
  40b659:	jmp    0x40b652
  40b65b:	retf   0x6cfb
  40b65e:	(bad)  
  40b65f:	mov    ds:0x65983405,al
  40b664:	push   ebp
  40b665:	pop    edx
  40b666:	cmp    eax,DWORD PTR [esi-0x66ccd3d8]
  40b66c:	lea    cx,[edi+0x45]
  40b670:	stc    
  40b671:	cwde   
  40b672:	retf   
  40b673:	imul   ebx,DWORD PTR [ecx],0x494c092e
  40b679:	lahf   
  40b67a:	pop    edi
  40b67b:	mov    esi,0x8b613f5d
  40b680:	daa    
  40b681:	xlat   BYTE PTR ds:[ebx]
  40b682:	xchg   edi,eax
  40b683:	cmp    eax,0xb0a7ce5a
  40b688:	cmc    
  40b689:	test   al,0x3d
  40b68b:	cmp    dl,dl
  40b68d:	ror    cl,1
  40b68f:	dec    ebx
  40b690:	pop    ss
  40b691:	mov    ebp,0xffe8b46a
  40b696:	pop    edx
  40b697:	sub    cl,BYTE PTR [edi-0x58]
  40b69a:	or     eax,esi
  40b69c:	inc    esp
  40b69d:	and    edx,DWORD PTR [edx-0x59a78368]
  40b6a3:	push   ds
  40b6a4:	xor    DWORD PTR [ebx+0x23e0872c],edx
  40b6aa:	ds push es
  40b6ac:	xchg   ebp,eax
  40b6ad:	pop    es
  40b6ae:	pop    ebx
  40b6af:	inc    ebx
  40b6b0:	imul   ebp,ebx,0x5d8ece7
  40b6b6:	sahf   
  40b6b7:	xor    eax,0xcf3f1478
  40b6bc:	sbb    ecx,DWORD PTR [ecx+edi*2+0x1d]
  40b6c0:	jne    0x40b734
  40b6c2:	clc    
  40b6c3:	mov    ch,0x28
  40b6c5:	xchg   ebp,eax
  40b6c6:	out    dx,al
  40b6c7:	add    bh,0x5f
  40b6ca:	ffree  st(7)
  40b6cc:	or     al,0x44
  40b6ce:	cdq    
  40b6cf:	xor    al,0xd2
  40b6d1:	sbb    eax,0xd8a5e3a9
  40b6d6:	sbb    DWORD PTR [edx-0x36],eax
  40b6d9:	inc    esi
  40b6da:	das    
  40b6db:	and    al,0xae
  40b6dd:	push   esi
  40b6de:	and    al,0xbb
  40b6e0:	in     al,dx
  40b6e1:	shl    BYTE PTR [esi-0x23],1
  40b6e4:	jnp    0x40b690
  40b6e6:	ja     0x40b6c1
  40b6e8:	ds mov eax,0x3c1b4f5f
  40b6ee:	mov    dh,0xcb
  40b6f0:	(bad)  
  40b6f1:	mov    ds:0x87bd263c,al
  40b6f6:	cmp    ch,dh
  40b6f8:	jb     0x40b6db
  40b6fa:	mov    al,ds:0xc429e819
  40b6ff:	push   ss
  40b700:	xor    eax,0xf94e44ae
  40b705:	jne    0x40b6cb
  40b707:	jmp    0x20352a82
  40b70c:	push   ebx
  40b70d:	mov    cl,0xf7
  40b70f:	frstor [edx]
  40b711:	bound  edi,QWORD PTR [eax+eiz*1-0x1c]
  40b715:	test   eax,0x6ae900f0
  40b71a:	inc    eax
  40b71b:	ja     0x40b6dd
  40b71d:	shl    dl,1
  40b71f:	icebp  
  40b720:	add    ch,BYTE PTR [eax+0x75]
  40b723:	pop    edi
  40b724:	push   0xe4920996
  40b729:	xlat   BYTE PTR ds:[ebx]
  40b72a:	pushf  
  40b72b:	cmc    
  40b72c:	jns    0x40b763
  40b72e:	nop
  40b72f:	arpl   WORD PTR [edi-0x69],si
  40b732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b733:	lahf   
  40b734:	jg     0x40b7aa
  40b736:	mov    bh,0xdd
  40b738:	jns    0x40b715
  40b73a:	add    DWORD PTR [eax+ebp*8+0x37539a97],0x45
  40b742:	or     al,0xdc
  40b744:	mov    ebx,0xcfa51957
  40b749:	sbb    bh,cl
  40b74b:	inc    eax
  40b74c:	cdq    
  40b74d:	mov    ah,BYTE PTR ds:0x26bda7
  40b753:	push   0x7937fa97
  40b758:	cs inc ebp
  40b75a:	mov    edi,0x2c24f727
  40b75f:	out    dx,eax
  40b760:	mov    dh,0xc6
  40b762:	xchg   cl,al
  40b764:	add    esp,DWORD PTR [esi]
  40b766:	rcr    BYTE PTR [ebp+0x46],1
  40b769:	push   esp
  40b76a:	icebp  
  40b76b:	xchg   DWORD PTR [ebx-0x63fad398],ebx
  40b771:	(bad)  
  40b772:	mov    ch,0x44
  40b774:	int3   
  40b775:	scas   al,BYTE PTR es:[edi]
  40b776:	je     0x40b7e1
  40b778:	mov    edx,0x9745bab7
  40b77d:	jae    0x40b765
  40b77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b780:	inc    esp
  40b781:	je     0x40b791
  40b783:	int3   
  40b784:	inc    ecx
  40b785:	les    ecx,FWORD PTR [edi]
  40b787:	inc    esi
  40b788:	inc    ecx
  40b789:	jl     0x40b7a3
  40b78b:	dec    ebx
  40b78c:	(bad)  
  40b78d:	scas   eax,DWORD PTR es:[edi]
  40b78e:	jg     0x40b7ab
  40b790:	ret    0xbce9
  40b793:	pop    edi
  40b794:	into   
  40b795:	xor    BYTE PTR [eax],al
  40b797:	or     ebp,eax
  40b799:	or     DWORD PTR [ecx-0x39],edi
  40b79c:	mov    ebx,0xce34bfea
  40b7a1:	mov    esi,0x8e37376c
  40b7a6:	and    BYTE PTR [ebp+0x1ef0ea44],0x7f
  40b7ad:	ds jmp 0xcf90f7d2
  40b7b3:	bound  ecx,QWORD PTR [eax+0x6f]
  40b7b6:	cmp    dh,BYTE PTR [ebx]
  40b7b8:	les    ecx,FWORD PTR [ebp+0x41]
  40b7bb:	sbb    ah,bl
  40b7bd:	imul   ecx,DWORD PTR [edx],0xdcdd17b3
  40b7c3:	into   
  40b7c4:	es mov dh,0xca
  40b7c7:	lahf   
  40b7c8:	pusha  
  40b7c9:	stos   DWORD PTR es:[edi],eax
  40b7ca:	push   edi
  40b7cb:	push   edi
  40b7cc:	push   0x1
  40b7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7cf:	push   edi
  40b7d0:	xor    al,0xf7
  40b7d2:	push   esp
  40b7d3:	cs dec edi
  40b7d5:	ret    0xe4e8
  40b7d8:	aam    0x97
  40b7da:	pop    ebx
  40b7db:	inc    eax
  40b7dc:	or     dh,0x36
  40b7df:	sub    al,0x46
  40b7e1:	mov    BYTE PTR [esi],dl
  40b7e3:	daa    
  40b7e4:	push   esp
  40b7e5:	fst    QWORD PTR [ecx+0x79]
  40b7e8:	clc    
  40b7e9:	call   0x4dfb:0xb7d898fa
  40b7f0:	push   cs
  40b7f1:	shr    BYTE PTR [edx],1
  40b7f3:	pop    edi
  40b7f4:	shl    DWORD PTR [ecx-0x59],0xbf
  40b7f8:	jmp    esi
  40b7fa:	add    eax,0x5ba2d08a
  40b7ff:	jge    0x40b7e6
  40b801:	push   0xdf2755f4
  40b806:	add    eax,0xf43d5069
  40b80b:	aaa    
  40b80c:	pop    ds
  40b80d:	xor    ah,BYTE PTR [ecx]
  40b80f:	sbb    al,0x10
  40b811:	xor    ah,BYTE PTR [edi-0x44]
  40b814:	mov    dh,0x11
  40b816:	inc    ebx
  40b817:	push   ss
  40b818:	ficom  DWORD PTR [ebx+0xe]
  40b81b:	inc    edx
  40b81c:	mov    eax,ds:0xef4bca4b
  40b821:	and    BYTE PTR [ebx-0x5dcc8ba3],ch
  40b827:	shl    edi,0xba
  40b82a:	and    BYTE PTR [ebx+0x7f],0x3a
  40b82e:	sbb    edi,DWORD PTR [eax+0x7a3038d8]
  40b834:	stos   BYTE PTR es:[di],al
  40b836:	push   eax
  40b837:	sbb    cl,BYTE PTR [esi-0x5d633967]
  40b83d:	inc    eax
  40b83e:	div    eax
  40b840:	repz xchg edx,eax
  40b842:	push   ebp
  40b843:	pop    ss
  40b844:	jmp    0x5477:0x5f2dab8c
  40b84b:	or     al,bl
  40b84d:	mov    edi,0xfeced4bb
  40b852:	add    ebx,DWORD PTR [edi]
  40b854:	or     al,0xb1
  40b856:	arpl   WORD PTR [ecx],dx
  40b858:	mov    eax,0x8aa53c04
  40b85d:	mov    cl,0x57
  40b85f:	out    0x55,eax
  40b861:	or     edi,ecx
  40b863:	aad    0xa5
  40b865:	xor    esp,ebx
  40b867:	cld    
  40b868:	fisttp QWORD PTR [esi+0xca5f7c9]
  40b86e:	xor    eax,0x37c756cf
  40b873:	xor    al,0x5e
  40b875:	and    ebx,DWORD PTR [edx]
  40b877:	pushf  
  40b878:	mov    ch,0xf8
  40b87a:	out    dx,eax
  40b87b:	xchg   edx,eax
  40b87c:	call   0xbcdf5f09
  40b881:	sbb    al,0x1e
  40b883:	xor    ebp,DWORD PTR [esi+0x12]
  40b886:	(bad)  
  40b887:	outs   dx,DWORD PTR ds:[esi]
  40b888:	jmp    0x40b8bc
  40b88a:	fiadd  DWORD PTR [eax-0x226062f8]
  40b890:	pop    esp
  40b891:	mov    bl,0x2b
  40b893:	xchg   ecx,eax
  40b894:	in     eax,dx
  40b895:	sbb    BYTE PTR [ecx+0x21],0x7c
  40b899:	test   al,0xc3
  40b89b:	dec    edi
  40b89c:	lock cmp eax,0xc4ecfb5f
  40b8a2:	pop    ss
  40b8a3:	das    
  40b8a4:	out    dx,eax
  40b8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8a6:	clc    
  40b8a7:	pop    esp
  40b8a8:	jae    0x40b849
  40b8aa:	xor    ebx,DWORD PTR [ecx-0x12]
  40b8ad:	retf   
  40b8ae:	test   al,0xb4
  40b8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8b1:	mov    al,ds:0x5cb87625
  40b8b6:	add    al,0x56
  40b8b8:	cmc    
  40b8b9:	ins    DWORD PTR es:[edi],dx
  40b8ba:	mov    ebp,0xc7b51b31
  40b8bf:	mov    ebp,0x3dc0dcdc
  40b8c4:	mov    edi,0x1adc1c2d
  40b8c9:	stc    
  40b8ca:	sahf   
  40b8cb:	xchg   esi,eax
  40b8cc:	int    0xb9
  40b8ce:	loopne 0x40b876
  40b8d0:	mov    bl,0xce
  40b8d2:	pop    ebp
  40b8d3:	xchg   edi,eax
  40b8d4:	ja     0x40b8e0
  40b8d6:	int3   
  40b8d7:	inc    edi
  40b8d8:	pusha  
  40b8d9:	cmp    al,0xba
  40b8db:	xchg   edi,eax
  40b8dc:	fsubr  QWORD PTR [esp+ecx*1]
  40b8df:	pop    ebx
  40b8e0:	addr16 sub edi,edx
  40b8e3:	sub    DWORD PTR ds:[esi],0x973a17e8
  40b8ea:	cmp    DWORD PTR [edi+0x759ee099],0xfffffffa
  40b8f1:	imul   eax,DWORD PTR [edi-0x7928eb5a],0xffffff93
  40b8f8:	mov    WORD PTR [esi-0x44],bx
  40b8fc:	ins    DWORD PTR es:[edi],dx
  40b8fd:	xor    bl,BYTE PTR [eax-0x7d12137f]
  40b903:	sbb    al,0x64
  40b905:	push   ds
  40b906:	stos   DWORD PTR es:[edi],eax
  40b907:	sbb    al,0x58
  40b909:	out    0x84,eax
  40b90b:	out    0x44,eax
  40b90d:	loopne 0x40b890
  40b90f:	outs   dx,DWORD PTR ds:[esi]
  40b910:	fsub   DWORD PTR [ecx]
  40b912:	xchg   ecx,eax
  40b913:	cmc    
  40b914:	cdq    
  40b915:	popa   
  40b916:	push   ebp
  40b917:	dec    edi
  40b918:	popf   
  40b919:	xchg   edi,eax
  40b91a:	aam    0xc9
  40b91c:	sti    
  40b91d:	jge    0x40b964
  40b91f:	inc    ebp
  40b920:	retf   0x3c67
  40b923:	sbb    al,0xd5
  40b925:	js     0x40b8e2
  40b927:	push   es
  40b928:	test   eax,0x6bfc5de
  40b92d:	mov    eax,0x39da257f
  40b932:	jo     0x40b8eb
  40b934:	stos   DWORD PTR es:[edi],eax
  40b935:	cmp    DWORD PTR [edi+0x41],0x297e275b
  40b93c:	fisub  WORD PTR [esi-0x73ab4572]
  40b942:	jb     0xcf276410
  40b948:	sbb    eax,0x9882a70f
  40b94d:	mov    WORD PTR [edi-0xb44eb46],ds
  40b953:	arpl   di,si
  40b955:	push   ds
  40b956:	in     al,dx
  40b957:	push   esi
  40b958:	push   0x2a99bae5
  40b95d:	mov    ds:0x6eb07fcb,al
  40b962:	rcr    ebx,1
  40b964:	xor    al,0x7c
  40b966:	mov    si,0x1485
  40b96a:	sar    BYTE PTR [edx-0x2d],0xa1
  40b96e:	(bad)  
  40b96f:	cdq    
  40b970:	jmp    0x40b9e0
  40b972:	mov    dh,0xf
  40b974:	push   edx
  40b975:	pushf  
  40b976:	out    0x4a,al
  40b978:	or     dh,BYTE PTR [edx-0x11]
  40b97b:	loope  0x40b9f4
  40b97d:	xchg   ebx,eax
  40b97e:	test   dl,al
  40b980:	div    DWORD PTR [edi+0x3e]
  40b983:	in     eax,dx
  40b984:	mov    eax,0x1caf117c
  40b989:	les    ebx,FWORD PTR [ecx+0x7d]
  40b98c:	gs rcl eax,1
  40b98f:	dec    ebp
  40b990:	xchg   ecx,eax
  40b991:	mov    ah,0x9d
  40b993:	imul   esi,eax,0xb1679b4e
  40b999:	hlt    
  40b99a:	sub    eax,0x3ceef91a
  40b99f:	mov    edx,0xf6166955
  40b9a4:	ds mov eax,0x63dd322f
  40b9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ab:	jns    0x40ba29
  40b9ad:	in     eax,0xeb
  40b9af:	fistp  WORD PTR [ebp-0x61]
  40b9b2:	nop
  40b9b3:	adc    ah,ah
  40b9b5:	pushf  
  40b9b6:	xchg   BYTE PTR [esi-0x1b],dh
  40b9b9:	shl    BYTE PTR [esi+ebx*4-0x2c],cl
  40b9bd:	mov    bl,BYTE PTR [edx+edx*1-0x5d]
  40b9c1:	jle    0x40ba18
  40b9c3:	add    ebx,DWORD PTR [ebx-0x46]
  40b9c6:	fst    st(1)
  40b9c8:	(bad)  
  40b9ca:	into   
  40b9cb:	and    BYTE PTR [esi+eiz*2-0x4b],bh
  40b9cf:	sar    bl,0x13
  40b9d2:	imul   ebx,ebx,0xe1b9f517
  40b9d8:	dec    edi
  40b9d9:	sbb    al,0xba
  40b9db:	jmp    0xbd65b6bc
  40b9e0:	push   0xa6435bf0
  40b9e5:	xchg   esp,eax
  40b9e6:	cld    
  40b9e7:	add    al,0xfd
  40b9e9:	sbb    bh,BYTE PTR [ecx]
  40b9eb:	xchg   ecx,eax
  40b9ec:	sub    edi,DWORD PTR [edx]
  40b9ee:	mov    ebx,0x271c1378
  40b9f3:	push   edi
  40b9f4:	outs   dx,DWORD PTR ds:[esi]
  40b9f5:	out    dx,eax
  40b9f6:	out    dx,eax
  40b9f7:	pop    esp
  40b9f8:	push   es
  40b9f9:	sti    
  40b9fa:	jl     0x40ba04
  40b9fc:	sbb    BYTE PTR [esi],al
  40b9fe:	ja     0x40b9ef
  40ba00:	repnz ins DWORD PTR es:[edi],dx
  40ba02:	(bad)  
  40ba03:	mov    ch,0x7c
  40ba05:	cs pop ebx
  40ba07:	mov    bh,0xd
  40ba09:	mov    esi,0x79709685
  40ba0e:	imul   eax,edx,0x914fe369
  40ba14:	cmp    BYTE PTR cs:[eax+eax*2+0x69],bh
  40ba19:	dec    esi
  40ba1a:	xchg   edi,eax
  40ba1b:	inc    esp
  40ba1c:	mov    ecx,0x82fe281d
  40ba21:	dec    ebx
  40ba22:	sub    eax,0x1a1acc74
  40ba27:	inc    esi
  40ba28:	pop    ecx
  40ba29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba2a:	mov    ds:0xcae871f0,al
  40ba2f:	and    BYTE PTR [edx],ah
  40ba31:	fsubr  DWORD PTR [esi+0x1e]
  40ba34:	mov    bh,0xdd
  40ba36:	loopne 0x40b9cd
  40ba38:	cmp    dh,BYTE PTR [ebx+0xe]
  40ba3b:	cmp    DWORD PTR [ecx-0x40],esi
  40ba3e:	or     eax,0x6eb1a842
  40ba43:	pop    ecx
  40ba44:	in     al,dx
  40ba45:	jle    0x40ba4c
  40ba47:	dec    ebx
  40ba48:	pop    edi
  40ba49:	fwait
  40ba4a:	pushf  
  40ba4b:	(bad)  
  40ba4d:	stos   BYTE PTR es:[edi],al
  40ba4e:	in     eax,0x4a
  40ba50:	popa   
  40ba51:	and    eax,DWORD PTR [eax-0x4]
  40ba54:	jno    0x40ba80
  40ba56:	mov    BYTE PTR [ebx+0x79c30eb0],ah
  40ba5c:	jl     0x40ba07
  40ba5e:	mov    ch,0x52
  40ba60:	sub    edx,DWORD PTR [edx-0x7f1c81c4]
  40ba66:	loope  0x40ba50
  40ba68:	sbb    ebp,DWORD PTR [edx]
  40ba6a:	(bad)  
  40ba6b:	test   cl,al
  40ba6d:	or     DWORD PTR ds:0xc65a9e1f,edi
  40ba73:	sbb    ebp,DWORD PTR [ebx]
  40ba75:	xor    al,0xd9
  40ba77:	call   0x1321:0x117a5405
  40ba7e:	loop   0x40bac8
  40ba80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba81:	or     dh,BYTE PTR [edi-0x57]
  40ba84:	test   dh,0x1f
  40ba87:	jnp    0x40bac4
  40ba89:	cmp    al,0x23
  40ba8b:	and    al,0xb1
  40ba8d:	ins    DWORD PTR es:[edi],dx
  40ba8e:	add    edi,DWORD PTR [ecx+0xb]
  40ba91:	retf   
  40ba92:	ins    DWORD PTR es:[edi],dx
  40ba93:	in     al,dx
  40ba94:	pop    edx
  40ba95:	pop    esi
  40ba96:	inc    edi
  40ba97:	or     BYTE PTR [ebp-0x15],al
  40ba9a:	out    dx,al
  40ba9b:	cld    
  40ba9c:	or     al,0x45
  40ba9e:	add    al,dl
  40baa0:	mov    edx,0xc11601d0
  40baa5:	mov    edi,0x31c16505
  40baaa:	or     eax,0xf7c6f83
  40baaf:	mov    ds:0xa35ce6b7,eax
  40bab4:	lods   al,BYTE PTR ds:[esi]
  40bab5:	iret   
  40bab6:	(bad)
  40baba:	pop    ebx
  40babb:	fld    TBYTE PTR [eax]
  40babd:	push   edx
  40babe:	in     al,dx
  40babf:	rcl    BYTE PTR [ebx+0x0],cl
  40bac2:	pop    DWORD PTR ds:0x17550134
  40bac8:	dec    ecx
  40bac9:	ret    0x4ce4
  40bacc:	cld    
  40bacd:	stos   DWORD PTR es:[edi],eax
  40bace:	inc    esi
  40bacf:	sbb    esp,0x802fd752
  40bad5:	or     al,0x6a
  40bad7:	sub    BYTE PTR [esi],0x3a
  40bada:	shr    BYTE PTR [edx+0x29],0x3c
  40bade:	push   eax
  40badf:	fstp   TBYTE PTR [ebp-0xf108cb8]
  40bae5:	aas    
  40bae6:	inc    edx
  40bae7:	mov    ecx,0x1c0a11a5
  40baec:	sbb    al,0xe
  40baee:	mov    ebx,0x707c2b02
  40baf3:	or     al,0x87
  40baf5:	or     DWORD PTR [edi],esp
  40baf7:	shl    BYTE PTR [eax+0x71],0x8f
  40bafb:	xchg   edx,eax
  40bafc:	adc    BYTE PTR [ebp+0x1eabf2b9],bh
  40bb02:	arpl   WORD PTR [edi+0xf],si
  40bb05:	retf   0x52f4
  40bb08:	fnstenv [edi+0x51]
  40bb0b:	add    edx,DWORD PTR [ebx]
  40bb0d:	test   al,0x6
  40bb0f:	jle    0x40bab2
  40bb11:	push   eax
  40bb12:	les    edi,FWORD PTR [eax]
  40bb14:	jmp    0xb1d:0x6207b086
  40bb1b:	xchg   edi,eax
  40bb1c:	cwde   
  40bb1d:	jnp    0x40bb52
  40bb1f:	fwait
  40bb20:	cmp    edi,DWORD PTR [ecx+0x52]
  40bb23:	or     DWORD PTR [eax],ebp
  40bb25:	ds (bad) 
  40bb27:	not    edi
  40bb29:	lds    ecx,FWORD PTR [eax+0x20]
  40bb2c:	mov    ds:0x7e268069,al
  40bb31:	outs   dx,BYTE PTR ds:[esi]
  40bb32:	mov    eax,0x49db2681
  40bb37:	cdq    
  40bb38:	sub    eax,0x96bba5c8
  40bb3d:	pop    es
  40bb3e:	adc    ebp,0x43
  40bb41:	and    esp,esi
  40bb43:	fs ins DWORD PTR es:[edi],dx
  40bb45:	dec    esi
  40bb46:	outs   dx,DWORD PTR ds:[esi]
  40bb47:	dec    edx
  40bb48:	push   edx
  40bb49:	mov    al,0x9c
  40bb4b:	push   eax
  40bb4c:	rol    ecx,cl
  40bb4e:	mov    dl,0xa9
  40bb50:	fdivr  QWORD PTR [ecx]
  40bb52:	cdq    
  40bb53:	lods   al,BYTE PTR ds:[esi]
  40bb54:	pop    esi
  40bb55:	push   cs
  40bb56:	lea    edi,[ebp+0x18]
  40bb59:	scas   al,BYTE PTR es:[edi]
  40bb5a:	fidiv  WORD PTR [ebp-0x70]
  40bb5d:	pop    es
  40bb5e:	(bad)  
  40bb5f:	sbb    ch,BYTE PTR [edx-0x77]
  40bb62:	cmp    al,ch
  40bb64:	(bad)  [ebx-0x49]
  40bb67:	jp     0x40bb99
  40bb69:	push   eax
  40bb6a:	xchg   ebp,eax
  40bb6b:	xchg   ebx,eax
  40bb6c:	adc    esp,DWORD PTR ds:0xd015f6c1
  40bb72:	add    edi,DWORD PTR [eax+ebp*2]
  40bb75:	dec    esp
  40bb76:	jnp    0x40bba9
  40bb78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb79:	mov    cl,0x4a
  40bb7b:	push   esi
  40bb7c:	sti    
  40bb7d:	repz ret 0x62d6
  40bb81:	int    0x46
  40bb83:	mov    ch,0xb6
  40bb85:	xchg   ecx,eax
  40bb86:	sar    ah,1
  40bb88:	in     al,dx
  40bb89:	jg     0x40bbde
  40bb8b:	call   0x271a:0xd2412bb6
  40bb92:	xor    edi,DWORD PTR ds:0x887abd3d
  40bb98:	mov    ah,0xbe
  40bb9a:	loop   0x40bb3d
  40bb9c:	ds dec ebp
  40bb9e:	dec    ebx
  40bb9f:	jl     0x40bbb9
  40bba1:	retf   0xda44
  40bba4:	test   ecx,edi
  40bba6:	arpl   WORD PTR [ebp-0x4b],di
  40bba9:	fistp  QWORD PTR ds:[edx+0x7e]
  40bbad:	mov    BYTE PTR [edi+0x73049032],cl
  40bbb3:	int    0x53
  40bbb5:	lds    esp,FWORD PTR [edi+edx*8]
  40bbb8:	mov    esi,0xded7fc7c
  40bbbd:	loope  0x40bc18
  40bbbf:	ins    BYTE PTR es:[edi],dx
  40bbc0:	cmp    eax,0x9219d0ae
  40bbc5:	mov    esi,DWORD PTR [ebx+0x8]
  40bbc8:	sub    al,ch
  40bbca:	push   ebx
  40bbcb:	repz stc 
  40bbcd:	sbb    edx,ebp
  40bbcf:	(bad)  
  40bbd1:	es mov bh,0xb9
  40bbd4:	mov    BYTE PTR [edx-0x42],cl
  40bbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd8:	xor    DWORD PTR [esi+0x52d68fd4],edi
  40bbde:	jle    0x40bbce
  40bbe0:	loop   0x40bbb4
  40bbe2:	push   0x525d3227
  40bbe7:	fstp   TBYTE PTR [eax+ebx*8]
  40bbea:	ins    DWORD PTR es:[edi],dx
  40bbeb:	sub    ch,ch
  40bbed:	scas   al,BYTE PTR es:[edi]
  40bbee:	(bad)  
  40bbef:	retf   
  40bbf0:	pop    ebx
  40bbf1:	cmc    
  40bbf2:	pop    ds
  40bbf3:	pop    ds
  40bbf4:	pop    edi
  40bbf5:	xchg   edx,eax
  40bbf6:	iret   
  40bbf7:	push   esp
  40bbf8:	dec    ebx
  40bbf9:	sub    DWORD PTR ds:0x4de85f10,0xffffffb6
  40bc00:	test   eax,0x84e83c72
  40bc05:	and    ch,bl
  40bc07:	sar    DWORD PTR [ebx],1
  40bc09:	fwait
  40bc0a:	or     DWORD PTR [ebp+0x33cb2f5e],esi
  40bc10:	push   esi
  40bc11:	test   DWORD PTR [eax],esi
  40bc13:	pop    es
  40bc14:	dec    ecx
  40bc15:	add    BYTE PTR [ecx+0x11],ah
  40bc18:	pop    ss
  40bc19:	cld    
  40bc1a:	mov    ebp,0xbca0f934
  40bc1f:	cmp    al,0x3
  40bc21:	dec    esp
  40bc22:	(bad)  
  40bc23:	fsubr  st,st(6)
  40bc25:	push   eax
  40bc26:	mov    edx,DWORD PTR [ebx+0x72]
  40bc29:	arpl   WORD PTR [eax+edx*8-0x77],cx
  40bc2d:	mov    esi,0x8b7accea
  40bc32:	mov    BYTE PTR [edx+0x33],0x88
  40bc36:	xor    al,0x1f
  40bc38:	stos   DWORD PTR es:[edi],eax
  40bc39:	pop    esi
  40bc3a:	jo     0x40bbdb
  40bc3c:	sub    al,0xec
  40bc3e:	out    0x8b,al
  40bc40:	dec    ebx
  40bc41:	fild   QWORD PTR [edx+0x30]
  40bc44:	(bad)  
  40bc46:	xor    eax,0x61ad0a7d
  40bc4b:	lahf   
  40bc4c:	iret   
  40bc4d:	cmp    edx,ebx
  40bc4f:	push   esi
  40bc50:	mov    ch,0xbd
  40bc52:	or     eax,0x795466ea
  40bc57:	inc    ebp
  40bc58:	mov    eax,ds:0x580c30d1
  40bc5d:	sar    DWORD PTR ds:0x3b99ddaa,cl
  40bc63:	ss clc 
  40bc65:	jb     0x40bcb4
  40bc67:	aaa    
  40bc68:	cli    
  40bc69:	mov    bh,0x67
  40bc6b:	jp     0x40bc56
  40bc6d:	sbb    BYTE PTR [eax],dl
  40bc6f:	mov    cl,0x2e
  40bc71:	sub    DWORD PTR [edx+edx*2+0x31afc5b3],eax
  40bc78:	jge    0x40bc82
  40bc7a:	imul   esp,DWORD PTR [esi-0x739b5fbe],0x94c2933b
  40bc84:	jg     0x40bc6c
  40bc86:	pop    ebp
  40bc87:	mov    esp,0x8779026b
  40bc8c:	sbb    eax,0x7230ae73
  40bc91:	(bad)  
  40bc93:	fisttp WORD PTR [edx+0x23]
  40bc96:	xchg   edx,eax
  40bc97:	imul   ebp,DWORD PTR [esi+0x2c],0xd08b9f3d
  40bc9e:	lods   al,BYTE PTR ds:[esi]
  40bc9f:	das    
  40bca0:	sub    bh,BYTE PTR [ecx]
  40bca2:	sub    ebp,DWORD PTR [edi+0x25]
  40bca5:	and    eax,0x85416581
  40bcaa:	imul   edi,DWORD PTR [ebp+0x68],0x608830f2
  40bcb1:	test   al,0x58
  40bcb3:	push   esi
  40bcb4:	lahf   
  40bcb5:	sub    bl,0x1a
  40bcb8:	or     al,0xdd
  40bcba:	jno    0x40bce6
  40bcbc:	mov    al,ds:0x94d8b271
  40bcc1:	stos   DWORD PTR es:[edi],eax
  40bcc2:	imul   ecx,DWORD PTR [ebp+0x17],0xa6453bb0
  40bcc9:	adc    bl,al
  40bccb:	mov    ecx,0x1e52202f
  40bcd0:	lods   eax,DWORD PTR ds:[esi]
  40bcd1:	sbb    DWORD PTR [ebx-0x497f7d04],eax
  40bcd7:	add    BYTE PTR [edx],0xc9
  40bcda:	test   eax,0x4694c81
  40bcdf:	push   esi
  40bce0:	cmp    DWORD PTR es:[esi+0x3532ed80],ecx
  40bce7:	mov    ch,0xb1
  40bce9:	jle    0x40bc92
  40bceb:	push   ecx
  40bcec:	repz push ebx
  40bcee:	and    eax,0xd638da45
  40bcf3:	sbb    ah,bh
  40bcf5:	loop   0x40bd6e
  40bcf7:	pop    ds
  40bcf8:	scas   eax,DWORD PTR es:[edi]
  40bcf9:	cmp    eax,0x129abd98
  40bcfe:	(bad)  ds:0x7e0ba7a2
  40bd04:	enter  0xefab,0x7a
  40bd08:	icebp  
  40bd09:	mov    dh,0xbc
  40bd0b:	(bad)  [eax-0x2a016ad1]
  40bd11:	iret   
  40bd12:	fcom   st(4)
  40bd14:	lods   eax,DWORD PTR ds:[esi]
  40bd15:	mov    edx,0xb10461c7
  40bd1a:	lods   eax,DWORD PTR ds:[esi]
  40bd1b:	lahf   
  40bd1c:	jns    0x40bcb2
  40bd1e:	cli    
  40bd1f:	cli    
  40bd20:	lock pop ebp
  40bd22:	mov    esp,0xc69f6c09
  40bd27:	popa   
  40bd28:	out    dx,eax
  40bd29:	and    esi,DWORD PTR [ecx+0x3799de62]
  40bd2f:	cmp    ch,dh
  40bd31:	pop    eax
  40bd32:	out    dx,al
  40bd33:	mov    bh,0x50
  40bd35:	stos   BYTE PTR es:[edi],al
  40bd36:	or     dl,BYTE PTR [ecx+eiz*2]
  40bd39:	fadd   QWORD PTR [edi-0x5220ce7c]
  40bd3f:	jecxz  0x40bd5f
  40bd41:	adc    eax,0xe15c9401
  40bd46:	imul   eax,ecx,0xb04c3bc9
  40bd4c:	xchg   ebp,eax
  40bd4d:	mov    ds:0xf6433afb,eax
  40bd52:	retf   0xfb69
  40bd55:	dec    eax
  40bd56:	repnz push ss
  40bd58:	dec    edi
  40bd59:	and    ebx,edx
  40bd5b:	cmp    eax,0xc5d041c8
  40bd60:	fst    st(7)
  40bd62:	xor    dl,BYTE PTR [ebp-0x77df05e5]
  40bd68:	push   esi
  40bd69:	inc    ebx
  40bd6a:	jmp    DWORD PTR [esi+0x30e55775]
  40bd70:	cmp    eax,0x14ad6ca
  40bd75:	add    DWORD PTR ss:[eax],0xffffffa3
  40bd79:	es jbe 0x40bd3b
  40bd7c:	pop    ebp
  40bd7d:	scas   eax,DWORD PTR es:[edi]
  40bd7e:	outs   dx,BYTE PTR ds:[esi]
  40bd7f:	mov    dl,0xcf
  40bd81:	dec    ah
  40bd83:	cmp    ecx,DWORD PTR [edx+0x1d2081a0]
  40bd89:	stos   DWORD PTR es:[edi],eax
  40bd8a:	enter  0xfa51,0xe3
  40bd8e:	ret    
  40bd8f:	ins    DWORD PTR es:[edi],dx
  40bd90:	jge    0x40bdb1
  40bd92:	jp     0x40bddf
  40bd94:	shl    DWORD PTR [esi+0x4f],0xe1
  40bd98:	test   ecx,eax
  40bd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd9b:	xor    DWORD PTR [ebx+0x43],esp
  40bd9e:	fwait
  40bd9f:	cmp    eax,0xdf12433b
  40bda4:	jmp    0xa1a3698e
  40bda9:	sbb    esi,0x3cf613f7
  40bdaf:	rdtsc  
  40bdb1:	add    al,0x67
  40bdb3:	mov    ds:0x584599b0,al
  40bdb8:	sub    ch,BYTE PTR [ebx-0x67]
  40bdbb:	stos   DWORD PTR es:[edi],eax
  40bdbc:	and    al,0xd0
  40bdbe:	dec    eax
  40bdbf:	dec    esp
  40bdc0:	xchg   ebx,eax
  40bdc1:	icebp  
  40bdc2:	sbb    DWORD PTR [ecx-0x221b408a],esi
  40bdc8:	rcl    DWORD PTR [esi],cl
  40bdca:	bnd jp 0x40be42
  40bdcd:	xor    ecx,edx
  40bdcf:	or     al,0x9f
  40bdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd2:	sbb    edi,DWORD PTR [esi+0x6d]
  40bdd5:	cmp    bl,cl
  40bdd7:	iret   
  40bdd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd9:	push   ebp
  40bdda:	jbe    0x40bd85
  40bddc:	mov    esi,0x74159a10
  40bde1:	cmp    edx,DWORD PTR [edx-0x24]
  40bde4:	pop    ebx
  40bde5:	or     ebp,DWORD PTR ds:0xf2b88401
  40bdeb:	mov    ds:0xf022eb14,al
  40bdf0:	hlt    
  40bdf1:	dec    edx
  40bdf2:	inc    ecx
  40bdf3:	shr    esi,0xa8
  40bdf6:	xor    dh,BYTE PTR [edi+ecx*8+0x2]
  40bdfa:	jecxz  0x40bdae
  40bdfc:	cli    
  40bdfd:	push   ebx
  40bdfe:	inc    edx
  40bdff:	sbb    dh,ch
  40be01:	fcomp  DWORD PTR [edi-0x17]
  40be04:	xchg   esi,eax
  40be05:	jecxz  0x40be2a
  40be07:	addr16 pop ebp
  40be09:	(bad)  
  40be0b:	aaa    
  40be0c:	fimul  WORD PTR [edi+0x396637c8]
  40be12:	jg     0x40be55
  40be14:	dec    si
  40be16:	jne    0x40be7e
  40be18:	test   eax,0x93329d2b
  40be1d:	addr16 hlt 
  40be1f:	cmp    al,BYTE PTR [edi]
  40be21:	stos   BYTE PTR es:[edi],al
  40be22:	bswap  edi
  40be24:	mov    ?,WORD PTR [eax+ebp*2-0x13]
  40be28:	push   ebp
  40be29:	das    
  40be2a:	int3   
  40be2b:	mov    ah,0xc6
  40be2d:	or     eax,0x660b33e9
  40be32:	(bad)  
  40be33:	outs   dx,DWORD PTR ds:[esi]
  40be34:	jae    0x40be1b
  40be36:	daa    
  40be37:	and    BYTE PTR [esi],dh
  40be39:	loop   0x40bdff
  40be3b:	(bad)  
  40be3c:	mov    eax,0x32ccbe38
  40be41:	das    
  40be42:	xchg   ebx,eax
  40be43:	mov    BYTE PTR [eax-0x20d03263],ch
  40be49:	mov    gs,ebx
  40be4b:	sub    DWORD PTR [edi+0x52],0xffffffe8
  40be4f:	jmp    0x40be31
  40be51:	aam    0x66
  40be53:	sar    DWORD PTR [ebp+0x32d38d5b],1
  40be59:	adc    BYTE PTR [ebx-0x76],cl
  40be5c:	mov    ecx,0x46f5abf
  40be61:	xchg   esi,eax
  40be62:	and    BYTE PTR [edx-0x31],dl
  40be65:	add    DWORD PTR [ecx+0x49],0x33cbaebf
  40be6c:	loopne 0x40be9c
  40be6e:	clc    
  40be6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be70:	jns    0x40bebd
  40be72:	inc    ecx
  40be73:	repnz sub ebp,ecx
  40be76:	pop    ds
  40be77:	and    al,BYTE PTR [ebp-0x30bbd85f]
  40be7d:	into   
  40be7e:	xor    DWORD PTR [esi-0x77673525],eax
  40be84:	cmp    DWORD PTR [esi-0x368657ed],ebp
  40be8a:	pop    ss
  40be8b:	or     eax,0x16b849ab
  40be90:	mov    bh,0x7
  40be92:	mov    WORD PTR [eax+0xc],gs
  40be95:	dec    ecx
  40be96:	div    DWORD PTR [eax-0x1f54676a]
  40be9c:	pusha  
  40be9d:	mov    bl,BYTE PTR [ebx]
  40be9f:	fistp  WORD PTR [ecx]
  40bea1:	mov    edx,0x5515b169
  40bea6:	xchg   ecx,eax
  40bea7:	xchg   esp,eax
  40bea8:	cmc    
  40bea9:	hlt    
  40beaa:	jae    0x40be9e
  40beac:	scas   al,BYTE PTR es:[edi]
  40bead:	jmp    0x8949065
  40beb2:	data16 test al,0x2b
  40beb5:	sub    al,0xd8
  40beb7:	push   es
  40beb8:	sbb    dl,ch
  40beba:	(bad)  [edx]
  40bebc:	push   esi
  40bebd:	cli    
  40bebe:	mov    cl,0x9
  40bec0:	xor    DWORD PTR [edi+0x32],0x1e204afc
  40bec7:	mov    ?,WORD PTR [edx+0x59]
  40beca:	cmp    BYTE PTR [ecx+0x6],cl
  40becd:	sbb    ebx,DWORD PTR ds:0x29161c33
  40bed3:	inc    ebp
  40bed4:	(bad)  
  40bed5:	ret    0x8608
  40bed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed9:	ss jnp 0x40be8c
  40bedc:	jnp    0x40bef4
  40bede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bedf:	or     eax,0x4b09479b
  40bee4:	sbb    DWORD PTR [edi-0x2d5b476],edi
  40beea:	js     0x40beca
  40beec:	push   ecx
  40beed:	shr    ebp,0x87
  40bef0:	jo     0x40bf71
  40bef2:	inc    ebp
  40bef3:	push   ds
  40bef4:	in     al,dx
  40bef5:	pop    ss
  40bef6:	mov    edx,0x3d53009a
  40befb:	inc    eax
  40befc:	popf   
  40befd:	std    
  40befe:	adc    edi,eax
  40bf00:	aad    0x49
  40bf02:	push   edx
  40bf03:	adc    esi,DWORD PTR [edx]
  40bf05:	fidiv  DWORD PTR [esi-0x6a]
  40bf08:	mov    edx,0x9f41dc4
  40bf0d:	add    bh,BYTE PTR ds:0x2fbfb2cd
  40bf13:	mov    dh,0x9
  40bf15:	cwde   
  40bf16:	mov    ch,0x51
  40bf18:	mov    eax,ds:0x416c4222
  40bf1d:	adc    dl,BYTE PTR [ecx-0x793683de]
  40bf23:	dec    edi
  40bf24:	mov    al,bh
  40bf26:	mov    eax,edi
  40bf28:	sbb    al,BYTE PTR [edx+0x279421c2]
  40bf2e:	push   es
  40bf2f:	xor    eax,0xbc8e71a2
  40bf34:	(bad)  
  40bf35:	dec    eax
  40bf36:	mov    ebp,0x8c75017e
  40bf3b:	in     al,dx
  40bf3c:	jno    0x40bf18
  40bf3e:	retf   
  40bf3f:	(bad)  
  40bf40:	jns    0x40bf68
  40bf42:	inc    esp
  40bf43:	mov    bl,0x54
  40bf45:	mul    DWORD PTR [ecx]
  40bf47:	dec    ebp
  40bf48:	pop    ecx
  40bf49:	add    eax,0x85a0b593
  40bf4e:	mov    dh,0x8c
  40bf50:	(bad)  
  40bf51:	mov    ds:0xac90f525,al
  40bf56:	lods   al,BYTE PTR ds:[esi]
  40bf57:	sbb    edi,ebx
  40bf59:	dec    edx
  40bf5a:	repnz fld DWORD PTR [esi-0x56]
  40bf5e:	sbb    eax,DWORD PTR [eax-0x67ebef07]
  40bf64:	dec    eax
  40bf65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf66:	call   0x77369b63
  40bf6b:	push   cs
  40bf6c:	ds fs xchg esp,eax
  40bf6f:	lods   eax,DWORD PTR ds:[esi]
  40bf70:	adc    BYTE PTR [edx-0x28db6d4d],dl
  40bf76:	lahf   
  40bf77:	adc    al,0xfb
  40bf79:	aas    
  40bf7a:	xchg   ebp,eax
  40bf7b:	xchg   esp,eax
  40bf7c:	sub    eax,DWORD PTR [edi]
  40bf7e:	push   ss
  40bf7f:	dec    esi
  40bf80:	dec    edi
  40bf81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf82:	adc    bh,BYTE PTR [edx+ebx*2]
  40bf85:	aas    
  40bf86:	(bad)  
  40bf87:	cdq    
  40bf88:	(bad)  
  40bf89:	adc    esp,edi
  40bf8b:	int3   
  40bf8c:	arpl   WORD PTR [ecx],bp
  40bf8e:	mov    WORD PTR [edi+0x1c],ds
  40bf91:	inc    ebp
  40bf92:	xchg   ebp,eax
  40bf93:	cmp    eax,0x62036848
  40bf98:	or     esp,DWORD PTR [edi+0x63]
  40bf9b:	inc    ebp
  40bf9c:	mov    ?,WORD PTR [eax+esi*2]
  40bf9f:	jmp    0x40bfc8
  40bfa1:	test   eax,0xb910616c
  40bfa6:	mov    esp,0xb7d1f6e5
  40bfab:	pusha  
  40bfac:	je     0x40bf91
  40bfae:	clc    
  40bfaf:	retf   
  40bfb0:	aam    0x39
  40bfb2:	fs pop ds
  40bfb4:	test   BYTE PTR [edi+0x45e2941f],ah
  40bfba:	out    0x71,al
  40bfbc:	cmp    bl,BYTE PTR ds:0xf1660a19
  40bfc2:	aad    0xbb
  40bfc4:	mov    ebx,0xa465e681
  40bfc9:	mov    eax,0x88494916
  40bfce:	leave  
  40bfcf:	cmp    BYTE PTR [edx+0x70fe91ca],bh
  40bfd5:	addr16 sub al,0x76
  40bfd8:	aam    0x8a
  40bfda:	xchg   esp,eax
  40bfdb:	mov    edx,0xd9fbcfbe
  40bfe0:	push   ecx
  40bfe1:	xor    BYTE PTR [esi+0x3546c5e1],bh
  40bfe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe8:	ret    0x91b1
  40bfeb:	and    ah,BYTE PTR [eax-0x62e2622]
  40bff1:	dec    edx
  40bff2:	sub    BYTE PTR [ebp-0x41],0x64
  40bff6:	and    dl,BYTE PTR [eax]
  40bff8:	cmp    al,0x96
  40bffa:	iret   
  40bffb:	pusha  
  40bffc:	fild   DWORD PTR [esi]
  40bffe:	dec    ecx
  40bfff:	push   edx
  40c000:	mov    ebp,0x2a4a17d2
  40c005:	cmc    
  40c006:	ds push edi
  40c008:	push   0x35
  40c00a:	aaa    
  40c00b:	fwait
  40c00c:	pushf  
  40c00d:	pop    edi
  40c00e:	fcmove st,st(3)
  40c010:	scas   al,BYTE PTR es:[edi]
  40c011:	test   DWORD PTR [esi+ecx*1+0x2565d87f],ecx
  40c018:	or     BYTE PTR [esi],0x1e
  40c01b:	push   ds
  40c01c:	jo     0x40c082
  40c01e:	xor    dl,bl
  40c020:	adc    esp,ecx
  40c022:	mov    esi,0xa905bcf4
  40c027:	jne    0x40bfce
  40c029:	push   0x48
  40c02b:	inc    ecx
  40c02c:	retf   
  40c02d:	retf   0x5767
  40c030:	in     eax,dx
  40c031:	aam    0xcf
  40c033:	outs   dx,BYTE PTR ds:[esi]
  40c034:	call   0x6389:0x48ce9a15
  40c03b:	test   al,bh
  40c03d:	mov    cl,BYTE PTR [esi]
  40c03f:	iret   
  40c040:	and    dl,0x34
  40c043:	pop    ebx
  40c044:	mov    dl,0x9d
  40c046:	xor    DWORD PTR [edi+0x4cd0a266],eax
  40c04c:	enter  0xac8b,0x2a
  40c050:	adc    DWORD PTR [esi-0x12c9e3ff],esp
  40c056:	mov    cl,0x74
  40c058:	pop    ebp
  40c059:	not    BYTE PTR [ecx+0x59]
  40c05c:	xchg   ebx,eax
  40c05d:	xchg   edx,eax
  40c05e:	into   
  40c05f:	pop    ebp
  40c060:	push   ss
  40c061:	jno    0x40c0df
  40c063:	lods   eax,DWORD PTR ds:[esi]
  40c064:	xor    BYTE PTR [edi-0x8],dl
  40c067:	cmp    ebx,DWORD PTR [edx-0x36746be9]
  40c06d:	mov    ?,WORD PTR [edx-0x2b]
  40c070:	mov    ecx,0xae590c77
  40c075:	adc    eax,0x172a9156
  40c07a:	leave  
  40c07b:	pop    es
  40c07c:	das    
  40c07d:	jge    0x40c00e
  40c07f:	aad    0x6e
  40c081:	or     eax,0xd06e58a4
  40c086:	stos   BYTE PTR es:[edi],al
  40c087:	sub    eax,0x14d997ce
  40c08c:	jo     0x40c082
  40c08e:	aaa    
  40c08f:	aas    
  40c090:	cmc    
  40c091:	out    0x4e,al
  40c093:	jmp    0x40c0de
  40c095:	popf   
  40c096:	retf   0xe8d7
  40c099:	add    BYTE PTR [esi+edi*1],0x6a
  40c09d:	mov    ds:0x95bc3b86,al
  40c0a2:	jae    0x40c0de
  40c0a4:	inc    ecx
  40c0a5:	sbb    ebp,eax
  40c0a7:	sub    eax,0x3e922cb3
  40c0ac:	std    
  40c0ad:	out    0x54,al
  40c0af:	add    eax,0xf5e25045
  40c0b4:	mov    edi,0x3b3ed25
  40c0b9:	lds    edi,FWORD PTR [eax-0x733ffc3c]
  40c0bf:	mov    bh,0xae
  40c0c1:	lahf   
  40c0c2:	retf   0x50a5
  40c0c5:	iret   
  40c0c6:	inc    ebp
  40c0c7:	mov    al,0xa3
  40c0c9:	fdivr  DWORD PTR [ebx]
  40c0cb:	adc    eax,0x735e449c
  40c0d0:	mov    ecx,?
  40c0d2:	loopne 0x40c0e6
  40c0d4:	(bad)  
  40c0d5:	retf   0x8cd7
  40c0d8:	inc    ebx
  40c0d9:	(bad)  
  40c0da:	shl    esi,cl
  40c0dc:	and    edx,DWORD PTR [esi+0x56]
  40c0df:	test   BYTE PTR [eax+edi*2+0x36ab44a1],dl
  40c0e6:	or     al,0xc2
  40c0e8:	xor    ebp,DWORD PTR [ecx-0x41bf31c]
  40c0ee:	inc    eax
  40c0ef:	sbb    ecx,DWORD PTR [eax-0x14]
  40c0f2:	add    eax,0x570245f
  40c0f7:	add    eax,0x176067a8
  40c0fc:	pop    edx
  40c0fd:	repz out dx,eax
  40c0ff:	in     al,dx
  40c100:	mov    dl,0x2d
  40c102:	mov    al,BYTE PTR [ebp+0x49f7675]
  40c108:	daa    
  40c109:	fnstsw WORD PTR [eax]
  40c10b:	adc    esi,DWORD PTR [eax]
  40c10d:	or     al,0x7b
  40c10f:	or     bl,BYTE PTR [esi+edi*8-0x1a]
  40c113:	pusha  
  40c114:	mov    DWORD PTR [edx+0x61],esi
  40c117:	fstp   QWORD PTR [ebx]
  40c119:	int    0xf0
  40c11b:	out    dx,al
  40c11c:	sti    
  40c11d:	xor    BYTE PTR [ebp+0x61417b0],0xc7
  40c124:	xchg   ecx,eax
  40c125:	cli    
  40c126:	repz sti 
  40c128:	leavew 
  40c12a:	mov    al,ds:0x62dd403b
  40c12f:	jbe    0x40c17c
  40c131:	pusha  
  40c132:	jle    0x40c17f
  40c134:	inc    esp
  40c135:	mov    edi,0x7c348b5e
  40c13a:	xchg   edx,eax
  40c13b:	and    al,0x3b
  40c13d:	jno    0x40c0ee
  40c13f:	pop    ebx
  40c140:	sub    esi,DWORD PTR [edx]
  40c142:	lock mov ds:0xfe0ae6c4,eax
  40c148:	scas   al,BYTE PTR es:[edi]
  40c149:	(bad)  
  40c14a:	in     al,dx
  40c14b:	xor    BYTE PTR [ebx-0x33346f7e],ch
  40c151:	out    dx,al
  40c152:	adc    al,BYTE PTR [esi-0x5c]
  40c155:	cmc    
  40c156:	sbb    esp,DWORD PTR [edx+0xcf95021]
  40c15c:	push   ebx
  40c15d:	ret    
  40c15e:	pop    ebx
  40c15f:	call   0xda99:0x2872ba02
  40c166:	jne    0x40c1a7
  40c168:	test   al,0x4f
  40c16a:	test   eax,0x1070d13b
  40c16f:	mov    eax,ds:0xef2b244b
  40c174:	add    al,0xcc
  40c176:	pop    esp
  40c177:	dec    ecx
  40c178:	std    
  40c179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c17a:	pop    ecx
  40c17b:	out    dx,eax
  40c17c:	mov    cl,0x83
  40c17e:	pop    ebp
  40c17f:	cld    
  40c180:	sub    eax,0x73dd6d20
  40c185:	sbb    eax,0x1360d447
  40c18a:	xchg   esi,eax
  40c18b:	in     al,0x6f
  40c18d:	outs   dx,DWORD PTR ds:[esi]
  40c18e:	inc    ecx
  40c18f:	out    dx,al
  40c190:	mov    al,0x7b
  40c192:	or     eax,0xa61aefdc
  40c197:	das    
  40c198:	inc    esp
  40c199:	imul   ebx,ebx,0xffffffe5
  40c19c:	adc    DWORD PTR [edi-0x17357891],ebx
  40c1a2:	push   0xffffffa9
  40c1a4:	or     ecx,DWORD PTR [edi-0x7772fd]
  40c1aa:	retf   0xe8da
  40c1ad:	ret    
  40c1ae:	cwde   
  40c1af:	sbb    esp,DWORD PTR [esp+eax*1]
  40c1b2:	jo     0x40c1ca
  40c1b4:	xchg   edi,eax
  40c1b5:	dec    ecx
  40c1b6:	mov    bh,0x4a
  40c1b8:	adc    al,0xaa
  40c1ba:	data16 sub al,0x29
  40c1bd:	lds    edi,FWORD PTR [ecx]
  40c1bf:	bound  eax,QWORD PTR [edx]
  40c1c1:	fisttp WORD PTR [ecx-0x52]
  40c1c4:	jno    0x40c19d
  40c1c6:	es test bl,al
  40c1c9:	lahf   
  40c1ca:	lds    eax,FWORD PTR [ecx+0x4]
  40c1cd:	cmovns ecx,DWORD PTR [edx-0x70491bc5]
  40c1d4:	push   esp
  40c1d5:	outs   dx,DWORD PTR ds:[esi]
  40c1d6:	mov    edx,0x7ef56ab7
  40c1db:	push   cs
  40c1dc:	push   ebx
  40c1dd:	cwde   
  40c1de:	pusha  
  40c1df:	div    eax
  40c1e1:	and    BYTE PTR [ecx-0x21a56bca],dl
  40c1e7:	jb     0x40c1cd
  40c1e9:	div    DWORD PTR [edi]
  40c1eb:	inc    edi
  40c1ec:	retf   
  40c1ed:	mov    ebp,0xdbed3b75
  40c1f2:	rol    ecx,cl
  40c1f4:	out    0x23,al
  40c1f6:	cwde   
  40c1f7:	loope  0x40c234
  40c1f9:	jne    0x40c20b
  40c1fb:	lahf   
  40c1fc:	es pop esi
  40c1fe:	push   eax
  40c1ff:	xor    bl,BYTE PTR gs:[eax+0x7dd8d258]
  40c206:	cwde   
  40c207:	int    0xc7
  40c209:	shr    DWORD PTR [ebp-0x2c],cl
  40c20c:	push   ebx
  40c20d:	imul   ebp,edx,0x61
  40c210:	or     edx,DWORD PTR [ebp+0x40b7f430]
  40c216:	stc    
  40c217:	pushf  
  40c218:	les    ebx,FWORD PTR [edx]
  40c21a:	ror    DWORD PTR [eax+0x1a9afc6a],0xed
  40c221:	les    ebx,FWORD PTR [ebx-0x1f]
  40c224:	or     edi,DWORD PTR [ebp-0x724ad3ee]
  40c22a:	fcmovbe st,st(7)
  40c22c:	jno    0x40c275
  40c22e:	or     cl,0xf9
  40c231:	ror    DWORD PTR [eax+0x5c],1
  40c234:	pop    eax
  40c235:	mov    bl,0xf4
  40c237:	inc    edi
  40c238:	dec    esp
  40c239:	out    0xea,eax
  40c23b:	adc    BYTE PTR [edi],dl
  40c23d:	stc    
  40c23e:	int    0xb9
  40c240:	ficomp WORD PTR [edx-0x46]
  40c243:	sub    eax,0x5840619a
  40c248:	stos   DWORD PTR es:[edi],eax
  40c249:	bound  eax,QWORD PTR ds:0x1d7eade7
  40c24f:	fstp   DWORD PTR [esi]
  40c251:	sbb    eax,0xf8199c9f
  40c256:	(bad)  
  40c257:	adc    BYTE PTR [edx+0x2a868224],ch
  40c25d:	sbb    BYTE PTR [edx-0x6b2cd6f9],bl
  40c263:	or     eax,0xb08fd407
  40c268:	test   BYTE PTR [edi-0x6a],ch
  40c26b:	fsubr  st,st(7)
  40c26d:	xchg   esp,eax
  40c26e:	(bad)  
  40c26f:	pusha  
  40c270:	test   cl,bh
  40c272:	pop    eax
  40c273:	dec    ebx
  40c274:	and    BYTE PTR [ebx+ecx*8],bl
  40c277:	mov    al,0x55
  40c279:	jbe    0x40c2c5
  40c27b:	in     eax,0xf9
  40c27d:	mov    dl,0x6c
  40c27f:	inc    esi
  40c280:	mov    WORD PTR [edx+0x39ff4a1c],ss
  40c286:	mov    ch,0x27
  40c288:	push   cs
  40c289:	ret    
  40c28a:	add    DWORD PTR [edx-0x6e519934],esp
  40c290:	push   cs
  40c291:	inc    ebp
  40c292:	in     eax,dx
  40c293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c294:	and    DWORD PTR [ebx-0x6b],edi
  40c297:	sbb    bl,BYTE PTR [esi+0x10]
  40c29a:	ret    0xd78a
  40c29d:	cli    
  40c29e:	neg    DWORD PTR [ebx]
  40c2a0:	iret   
  40c2a1:	xchg   esi,eax
  40c2a2:	inc    esp
  40c2a3:	adc    DWORD PTR [ebp-0x29],0x5f
  40c2a7:	icebp  
  40c2a8:	cdq    
  40c2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2aa:	jnp    0x40c2e2
  40c2ac:	dec    edi
  40c2ad:	enter  0xadec,0x35
  40c2b1:	sub    bh,dl
  40c2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b4:	icebp  
  40c2b5:	das    
  40c2b6:	push   0x37150600
  40c2bb:	mov    edx,0x4934e386
  40c2c0:	nop
  40c2c1:	call   0x1819:0x16622a63
  40c2c8:	inc    ecx
  40c2c9:	into   
  40c2ca:	push   edx
  40c2cb:	(bad)  
  40c2cc:	mov    esp,0x525db193
  40c2d1:	add    edi,eax
  40c2d3:	leave  
  40c2d4:	test   al,0xb4
  40c2d6:	mov    ebp,0x97cdd3fe
  40c2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2dd:	inc    edi
  40c2de:	push   ds
  40c2df:	fcomp  DWORD PTR [edi]
  40c2e1:	cld    
  40c2e2:	sub    DWORD PTR [edx+ecx*4],eax
  40c2e5:	xor    edx,DWORD PTR [ecx+0x29]
  40c2e8:	pop    edx
  40c2e9:	unpcklps xmm5,XMMWORD PTR ds:0x329e6a07
  40c2f0:	ret    0x81f6
  40c2f3:	imul   esp,edi,0x5f96c068
  40c2f9:	fisubr WORD PTR [esp+esi*2+0x6f9f9765]
  40c300:	xor    BYTE PTR [edx],ah
  40c302:	dec    esp
  40c303:	xchg   edx,eax
  40c304:	dec    esi
  40c305:	jae    0x40c365
  40c307:	idiv   bh
  40c309:	stos   DWORD PTR es:[edi],eax
  40c30a:	sub    ch,BYTE PTR [ecx-0x55]
  40c30d:	bound  ecx,QWORD PTR [esi-0x5234e213]
  40c313:	and    ebx,DWORD PTR [eax-0x30857066]
  40c319:	jbe    0x40c315
  40c31b:	clc    
  40c31c:	sbb    edx,esp
  40c31e:	sar    BYTE PTR [edx-0x52],1
  40c321:	in     eax,0x28
  40c323:	(bad)  
  40c324:	sub    esi,esp
  40c326:	sub    DWORD PTR [ebx+0x8c3b4cd],0x46389e8e
  40c330:	stos   BYTE PTR es:[edi],al
  40c331:	dec    edi
  40c332:	in     al,0xf8
  40c334:	inc    ebp
  40c335:	loop   0x40c398
  40c337:	inc    ecx
  40c338:	adc    al,cl
  40c33a:	pop    eax
  40c33b:	dec    esi
  40c33c:	adc    cl,dh
  40c33e:	sub    esp,DWORD PTR [edx]
  40c340:	lea    esi,[esi]
  40c342:	or     DWORD PTR [ebx],ecx
  40c344:	pop    edi
  40c345:	fild   DWORD PTR [eax-0x41]
  40c348:	into   
  40c349:	iret   
  40c34a:	inc    esp
  40c34b:	retf   
  40c34c:	cld    
  40c34d:	add    ecx,DWORD PTR [ebp+0x6d03eae3]
  40c353:	leave  
  40c354:	mov    ebx,0x85edce34
  40c359:	pushf  
  40c35a:	aas    
  40c35b:	(bad)  [ebx+0x384642d]
  40c361:	mov    WORD PTR [esi-0x7dba028e],?
  40c367:	rcr    BYTE PTR [ecx-0x2718df71],1
  40c36d:	test   BYTE PTR [esi-0x72e89838],ah
  40c373:	sub    esp,DWORD PTR [ecx+esi*4+0x69f1445a]
  40c37a:	call   0xdc59:0xc9cdbb03
  40c381:	push   edi
  40c382:	xchg   esi,esi
  40c384:	dec    esp
  40c385:	push   esi
  40c386:	or     ebx,0x52dc9852
  40c38c:	es xchg edx,eax
  40c38e:	(bad)  
  40c38f:	retf   
  40c390:	adc    al,0x34
  40c392:	std    
  40c393:	and    BYTE PTR [eax],0xa7
  40c396:	cmp    ah,BYTE PTR [esi-0x37bc7477]
  40c39c:	lds    edx,FWORD PTR [edi+0x54]
  40c39f:	cmp    ah,dh
  40c3a1:	inc    ebx
  40c3a2:	and    al,0xa7
  40c3a4:	sbb    esp,DWORD PTR cs:[edx+0x586b32b2]
  40c3ab:	retf   
  40c3ac:	pop    eax
  40c3ad:	imul   ebp,edx,0xffffffc6
  40c3b0:	push   esi
  40c3b1:	popf   
  40c3b2:	sbb    DWORD PTR [edx+0xf413278],edi
  40c3b8:	inc    esi
  40c3b9:	ja     0x40c40d
  40c3bb:	add    bl,cl
  40c3bd:	popa   
  40c3be:	xor    DWORD PTR [ebp+0x72],esi
  40c3c1:	int3   
  40c3c2:	repnz rcr DWORD PTR [ebx+0x3c25b318],0x71
  40c3ca:	jo     0x40c401
  40c3cc:	mov    DWORD PTR [edi+0x52],esp
  40c3cf:	sar    DWORD PTR [ebp+0x49020221],1
  40c3d5:	add    eax,DWORD PTR [eax]
  40c3d7:	xchg   DWORD PTR [eax],ebp
  40c3d9:	outs   dx,BYTE PTR ds:[si]
  40c3db:	xor    BYTE PTR [edx],bl
  40c3dd:	jecxz  0x40c373
  40c3df:	out    0x9d,eax
  40c3e1:	outs   dx,BYTE PTR ds:[esi]
  40c3e2:	stc    
  40c3e3:	retf   0xc978
  40c3e6:	push   edi
  40c3e7:	push   0x53
  40c3e9:	sub    DWORD PTR [edi+ecx*8+0x56],ecx
  40c3ed:	dec    edx
  40c3ee:	cmp    BYTE PTR [edx],al
  40c3f0:	cdq    
  40c3f1:	ins    BYTE PTR es:[edi],dx
  40c3f2:	push   ecx
  40c3f3:	pop    ss
  40c3f4:	aad    0x6f
  40c3f6:	aaa    
  40c3f7:	and    dh,al
  40c3f9:	xor    ecx,ebx
  40c3fb:	fld    QWORD PTR [esi+0x4f]
  40c3fe:	inc    eax
  40c3ff:	aaa    
  40c400:	mov    esp,0x359cc967
  40c405:	ret    
  40c406:	jp     0x40c3b4
  40c408:	in     eax,0xde
  40c40a:	add    BYTE PTR [ebx-0xcad151a],dh
  40c410:	inc    eax
  40c411:	mov    ecx,0xd307f609
  40c416:	inc    esi
  40c417:	lahf   
  40c418:	out    dx,eax
  40c419:	cld    
  40c41a:	aam    0x50
  40c41c:	push   ebx
  40c41d:	aad    0xbf
  40c41f:	ins    DWORD PTR es:[edi],dx
  40c420:	dec    ecx
  40c421:	add    ch,cl
  40c423:	jo     0x40c3c9
  40c425:	mov    bl,dh
  40c427:	sbb    ah,ch
  40c429:	mov    bl,0x89
  40c42b:	rol    DWORD PTR [ebx],0x75
  40c42e:	adc    eax,0xe2353bca
  40c433:	lods   al,BYTE PTR ds:[esi]
  40c434:	mov    edi,0x70fb76e7
  40c439:	jae    0x40c467
  40c43b:	add    BYTE PTR [ecx+ebp*1+0x7d],dl
  40c43f:	push   eax
  40c440:	(bad)  
  40c441:	mov    eax,0x1cab2c2f
  40c446:	push   ecx
  40c447:	inc    ecx
  40c448:	and    ax,0xc813
  40c44c:	dec    edi
  40c44d:	and    ch,BYTE PTR [esi+0x40]
  40c450:	scas   al,BYTE PTR es:[edi]
  40c451:	stos   BYTE PTR es:[edi],al
  40c452:	imul   cl
  40c454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c455:	push   es
  40c456:	push   cs
  40c457:	lods   eax,DWORD PTR ds:[esi]
  40c458:	push   ebx
  40c459:	mov    eax,gs
  40c45b:	pusha  
  40c45c:	outs   dx,DWORD PTR ds:[esi]
  40c45d:	in     eax,0xbc
  40c45f:	jg     0x40c4cc
  40c461:	int3   
  40c462:	sar    BYTE PTR [eax],cl
  40c464:	jecxz  0x40c3ee
  40c466:	dec    ecx
  40c467:	adc    DWORD PTR [ecx+ebx*4],edx
  40c46a:	inc    ebx
  40c46b:	das    
  40c46c:	fdiv   DWORD PTR [eax+ebx*8-0x2fba57b6]
  40c473:	mov    WORD PTR [edi+0x4f39afd2],?
  40c479:	ds sub eax,0x666cd77c
  40c47f:	adc    bh,BYTE PTR [eax-0x36c2aaa0]
  40c485:	and    dl,BYTE PTR [ebp+0x10]
  40c488:	mov    eax,0xa6808935
  40c48d:	sbb    al,0xb4
  40c48f:	clc    
  40c490:	test   eax,0xbecf85df
  40c495:	out    dx,al
  40c496:	ret    
  40c497:	in     al,dx
  40c498:	(bad)  
  40c499:	clc    
  40c49a:	repnz inc edi
  40c49c:	cli    
  40c49d:	test   al,0x8a
  40c49f:	or     BYTE PTR [edi],al
  40c4a1:	push   ebp
  40c4a2:	clc    
  40c4a3:	jnp    0x40c502
  40c4a5:	add    BYTE PTR [eax],0x95
  40c4a8:	cmp    al,0x14
  40c4aa:	xor    esp,DWORD PTR [ebx-0x1]
  40c4ad:	mov    edi,DWORD PTR [edi-0x6b]
  40c4b0:	push   ss
  40c4b1:	lea    eax,[ebx+0x1d]
  40c4b4:	push   edx
  40c4b5:	dec    esi
  40c4b6:	sbb    eax,edi
  40c4b8:	into   
  40c4b9:	ins    BYTE PTR es:[edi],dx
  40c4ba:	sbb    bl,BYTE PTR [edi]
  40c4bc:	pop    ss
  40c4bd:	lods   al,BYTE PTR ds:[esi]
  40c4be:	das    
  40c4bf:	scas   eax,DWORD PTR es:[edi]
  40c4c0:	jle    0x40c4d9
  40c4c2:	mov    eax,edx
  40c4c4:	lahf   
  40c4c5:	fist   DWORD PTR [esi+0x7ca81321]
  40c4cb:	ret    0xf726
  40c4ce:	not    DWORD PTR [ebx+0x34]
  40c4d1:	dec    esi
  40c4d2:	adc    esi,ecx
  40c4d4:	jmp    0x40c552
  40c4d6:	cmc    
  40c4d7:	rcl    DWORD PTR [eax+edx*1],cl
  40c4da:	mov    cl,0xa7
  40c4dc:	jp     0x40c4cf
  40c4de:	sbb    esi,0x36b8ff75
  40c4e4:	and    DWORD PTR [esi],0xffffff9a
  40c4e7:	add    BYTE PTR [edi],0x7e
  40c4ea:	out    dx,eax
  40c4eb:	pxor   mm3,mm2
  40c4ee:	fst    QWORD PTR [esi]
  40c4f0:	xchg   edx,eax
  40c4f1:	clc    
  40c4f2:	inc    eax
  40c4f3:	shl    DWORD PTR [esi-0x65],1
  40c4f6:	sub    WORD PTR [edx],di
  40c4f9:	jmp    FWORD PTR [edi+0x3e]
  40c4fc:	popf   
  40c4fd:	inc    ebp
  40c4fe:	and    ah,BYTE PTR [ebp-0x7e730c9c]
  40c504:	pusha  
  40c505:	add    bh,BYTE PTR [ecx+0x473f9f6e]
  40c50b:	and    DWORD PTR [edi+0x3d4d0b3e],esp
  40c511:	(bad)  
  40c512:	xor    al,0xc9
  40c514:	fcomp  DWORD PTR [edx]
  40c516:	xchg   ebx,eax
  40c517:	fist   WORD PTR [ebx]
  40c519:	popf   
  40c51a:	cmp    esi,esp
  40c51c:	addr16 aam 0xab
  40c51f:	push   ebx
  40c520:	push   ss
  40c521:	repz mov edx,0x1bee4d65
  40c527:	lea    eax,[esi+0x4bfa2c0a]
  40c52d:	(bad)  
  40c52e:	jo     0x40c55e
  40c530:	and    esi,DWORD PTR [ebx+0x34]
  40c533:	xor    BYTE PTR [esi+ebp*8],al
  40c536:	dec    edx
  40c537:	test   al,0x32
  40c539:	xchg   ebx,eax
  40c53a:	add    ebp,DWORD PTR [edx]
  40c53c:	(bad)
  40c53f:	rol    BYTE PTR [esi-0x3b4780f1],0xb8
  40c546:	mov    al,ds:0x6ffef050
  40c54b:	stc    
  40c54c:	ins    DWORD PTR es:[edi],dx
  40c54d:	stos   DWORD PTR es:[edi],eax
  40c54e:	jns    0x40c549
  40c550:	dec    edi
  40c551:	in     eax,0xe0
  40c553:	adc    DWORD PTR [ebx-0x38],edx
  40c556:	mov    al,cl
  40c558:	pop    ebp
  40c559:	jg     0x40c4ee
  40c55b:	add    al,0x3e
  40c55d:	adc    DWORD PTR [ebx-0x14],esi
  40c560:	in     al,0xab
  40c562:	mov    eax,ds:0x8a5880b0
  40c567:	and    esi,DWORD PTR [ebx]
  40c569:	adc    DWORD PTR [esi+edx*2],esi
  40c56c:	push   cs
  40c56d:	(bad)
  40c571:	mov    esp,0xd5efde7e
  40c576:	loopne 0x40c514
  40c578:	ret    
  40c579:	fs sub al,0x9f
  40c57c:	or     BYTE PTR [esi-0x7095b86e],ah
  40c582:	pop    es
  40c583:	adc    dl,dh
  40c585:	mov    ecx,0xb4a9264e
  40c58a:	xchg   esi,eax
  40c58b:	jb     0x40c5aa
  40c58d:	in     al,dx
  40c58e:	mov    ds:0x8c40f5a7,eax
  40c593:	cmp    ch,BYTE PTR [edi+0xbb4940c]
  40c599:	lock gs jmp 0x9658ee63
  40c5a0:	xor    ecx,DWORD PTR [edi-0x18f0d0]
  40c5a6:	push   edx
  40c5a7:	mov    bl,0xc0
  40c5a9:	add    esp,DWORD PTR [ecx-0x130f5bde]
  40c5af:	mov    edx,0xecd8d422
  40c5b4:	cmp    eax,0xe45c220a
  40c5b9:	in     eax,0xce
  40c5bb:	push   ebp
  40c5bc:	jbe    0x40c568
  40c5be:	sti    
  40c5bf:	jno    0x40c5e2
  40c5c1:	js     0x40c560
  40c5c3:	jns    0x40c635
  40c5c5:	js     0x40c552
  40c5c7:	and    al,0x8b
  40c5c9:	xchg   ebx,eax
  40c5ca:	out    0x3c,eax
  40c5cc:	add    ah,0x2b
  40c5cf:	imul   BYTE PTR [edi-0x75]
  40c5d2:	adc    eax,0x4b0b3435
  40c5d7:	mov    ebx,DWORD PTR [ecx]
  40c5d9:	xchg   edi,eax
  40c5da:	jmp    0x8066c9bd
  40c5df:	aad    0x61
  40c5e1:	popa   
  40c5e2:	xlat   BYTE PTR ds:[ebx]
  40c5e3:	retf   
  40c5e4:	lods   eax,DWORD PTR ds:[esi]
  40c5e5:	push   0x5d
  40c5e7:	mov    al,ds:0xf334c2bf
  40c5ec:	xor    BYTE PTR ds:0xe7fa5187,cl
  40c5f2:	popa   
  40c5f3:	fldenv [ecx+0x18cbdb65]
  40c5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fa:	lea    ebx,[ebp-0x3e]
  40c5fd:	sar    esi,1
  40c5ff:	int3   
  40c600:	aam    0xbe
  40c602:	push   esi
  40c603:	addr16 pop edi
  40c605:	aaa    
  40c606:	retf   0xba8f
  40c609:	cwde   
  40c60a:	inc    esi
  40c60b:	hlt    
  40c60c:	adc    BYTE PTR ds:0x8c731160,cl
  40c612:	popa   
  40c613:	ds dec ebp
  40c615:	setb   BYTE PTR [ebp-0x42]
  40c619:	fiadd  WORD PTR [eax+0x28340f05]
  40c61f:	cs jl  0x54c3092
  40c626:	ins    BYTE PTR es:[edi],dx
  40c627:	mov    ds:0xbe748051,al
  40c62c:	dec    esp
  40c62d:	repz in al,dx
  40c62f:	out    dx,al
  40c630:	pop    eax
  40c631:	jno    0x40c6a8
  40c633:	mov    eax,ds:0xb642d8a0
  40c638:	(bad)  
  40c639:	lock dec ebp
  40c63b:	dec    DWORD PTR [edx]
  40c63d:	inc    esi
  40c63e:	mov    esp,0x595585e5
  40c643:	sub    BYTE PTR [ebp+0x25],0xd8
  40c647:	push   es
  40c648:	or     BYTE PTR [ebp+0x4d],ch
  40c64b:	fst    QWORD PTR [eax+0xb48ba8]
  40c651:	jbe    0x40c64e
  40c653:	outs   dx,BYTE PTR ds:[esi]
  40c654:	sub    al,0xd0
  40c656:	mov    ah,0xac
  40c658:	outs   dx,BYTE PTR ds:[esi]
  40c659:	fmul   QWORD PTR cs:[eax+0x58e6c9f2]
  40c660:	std    
  40c661:	hlt    
  40c662:	shl    BYTE PTR [edx],cl
  40c664:	mov    esi,0x508800d0
  40c669:	cmp    eax,0xb9ec3f13
  40c66e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66f:	retf   0x85e6
  40c672:	adc    DWORD PTR [esp+esi*1],edi
  40c675:	cmp    BYTE PTR [edi+0x33db9bfc],0x77
  40c67c:	outs   dx,BYTE PTR ds:[esi]
  40c67d:	adc    BYTE PTR ds:0x47dcfd84,bl
  40c683:	adc    cl,dl
  40c685:	ins    BYTE PTR es:[edi],dx
  40c686:	(bad)  
  40c687:	imul   edx
  40c689:	sub    bl,dl
  40c68b:	(bad)  
  40c68d:	adc    eax,0xe43dd1ce
  40c692:	and    dl,BYTE PTR [esi-0xa]
  40c695:	lods   al,BYTE PTR ds:[esi]
  40c696:	or     DWORD PTR [edi],ecx
  40c698:	psubw  mm6,QWORD PTR [ecx+0x41]
  40c69c:	push   cs
  40c69d:	or     edi,ebp
  40c69f:	popa   
  40c6a0:	addr16 xor eax,0x77c3bbe1
  40c6a6:	adc    eax,0xa68cd1f1
  40c6ab:	add    ah,ch
  40c6ad:	(bad)  
  40c6ae:	fsub   DWORD PTR [eax]
  40c6b0:	mov    ebx,0xffa2b424
  40c6b5:	adc    al,0xf
  40c6b7:	pop    ecx
  40c6b8:	xchg   esp,eax
  40c6b9:	stc    
  40c6ba:	lods   eax,DWORD PTR ds:[esi]
  40c6bb:	inc    esi
  40c6bc:	add    eax,0xbae2dc63
  40c6c1:	dec    ebx
  40c6c2:	mov    al,ds:0x60bc38fc
  40c6c7:	dec    ecx
  40c6c8:	(bad)  
  40c6c9:	into   
  40c6ca:	ss popf 
  40c6cc:	cmp    BYTE PTR [edx-0x32c2b6a4],ah
  40c6d2:	mov    ah,0x39
  40c6d4:	sahf   
  40c6d5:	inc    esp
  40c6d6:	(bad)  
  40c6d7:	(bad)  
  40c6d8:	dec    eax
  40c6d9:	mov    WORD PTR [ecx+0x6eb991fc],?
  40c6df:	stos   DWORD PTR es:[edi],eax
  40c6e0:	dec    ebp
  40c6e1:	adc    cl,BYTE PTR [ecx+edi*4-0x3033cc90]
  40c6e8:	xchg   edx,eax
  40c6e9:	inc    edi
  40c6ea:	stc    
  40c6eb:	xchg   edx,eax
  40c6ec:	mov    ah,0x11
  40c6ee:	adc    edi,ebx
  40c6f0:	sub    BYTE PTR [ebp-0x463ad944],ah
  40c6f6:	and    BYTE PTR [edi],ch
  40c6f8:	pushf  
  40c6f9:	mov    al,0x42
  40c6fb:	div    BYTE PTR [edi]
  40c6fd:	adc    esi,DWORD PTR [edx-0x6f]
  40c700:	lods   eax,DWORD PTR ds:[esi]
  40c701:	xor    al,0x6c
  40c703:	sahf   
  40c704:	es clc 
  40c706:	mov    al,ds:0x3f84ac6e
  40c70b:	sahf   
  40c70c:	pushf  
  40c70d:	sbb    BYTE PTR [esi+ebp*1+0x10],ah
  40c711:	(bad)
  40c715:	inc    ecx
  40c716:	sub    edi,esi
  40c718:	loopne 0x40c70c
  40c71a:	in     al,dx
  40c71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c71c:	stos   DWORD PTR es:[edi],eax
  40c71d:	leave  
  40c71e:	aas    
  40c71f:	out    0xeb,al
  40c721:	pushf  
  40c722:	fwait
  40c723:	je     0x40c70b
  40c725:	mov    esi,0xd2a3e41b
  40c72a:	sbb    DWORD PTR [ebp+0x34],esi
  40c72d:	lea    edx,[eax-0x39]
  40c730:	pop    es
  40c731:	adc    al,0x18
  40c733:	inc    ecx
  40c734:	lea    ebx,[esi+ecx*8]
  40c737:	and    ebp,DWORD PTR [ecx]
  40c739:	jg     0x40c768
  40c73b:	xchg   ebx,eax
  40c73c:	sbb    eax,0x986dfd6f
  40c741:	adc    ebp,DWORD PTR [edx+0x8]
  40c744:	loope  0x40c7b6
  40c746:	add    DWORD PTR [ebx+0x60],edx
  40c749:	mov    ch,ah
  40c74b:	dec    eax
  40c74c:	sbb    al,cl
  40c74e:	push   esi
  40c74f:	fnsave [ebx+0x4975b083]
  40c755:	mov    DWORD PTR [ebx+0x5c],edi
  40c758:	aaa    
  40c759:	rcl    DWORD PTR [edx-0x37f1d2be],0xdb
  40c760:	lock add eax,0x8484731b
  40c766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c767:	xor    cl,BYTE PTR [edi-0x13]
  40c76a:	adc    ebp,DWORD PTR [ebx+0x47]
  40c76d:	fnstenv [ebx+0x1b72312]
  40c773:	mov    ecx,0x394bce6f
  40c778:	jns    0x40c783
  40c77a:	xchg   DWORD PTR [edx-0x738f0cf8],eax
  40c780:	lock (bad) 
  40c782:	push   ebp
  40c783:	mov    al,ds:0xbda9f25c
  40c788:	adc    DWORD PTR [ebp+0x3b3a0fe1],esp
  40c78e:	shl    BYTE PTR [edi+0x59],cl
  40c791:	pop    es
  40c792:	adc    al,BYTE PTR [ecx-0x993ee63]
  40c798:	popa   
  40c799:	and    BYTE PTR [ebp+0x7f9c69fe],bl
  40c79f:	cmp    bl,BYTE PTR [ecx+0x3171e020]
  40c7a5:	mov    cl,0x27
  40c7a7:	std    
  40c7a8:	out    dx,al
  40c7a9:	jmp    0x277f:0x108a55ae
  40c7b0:	pop    esi
  40c7b1:	outs   dx,DWORD PTR ds:[esi]
  40c7b2:	stos   DWORD PTR es:[edi],eax
  40c7b3:	add    eax,esp
  40c7b5:	mov    edx,0xd9c96c9e
  40c7ba:	cld    
  40c7bb:	push   esi
  40c7bc:	sub    al,0x2f
  40c7be:	repnz mov ss:0xa814f01d,al
  40c7c5:	lea    edi,[edi+0x46]
  40c7c8:	xchg   edx,eax
  40c7c9:	in     eax,0x7b
  40c7cb:	and    al,0x7a
  40c7cd:	fbstp  TBYTE PTR [edx]
  40c7cf:	pop    eax
  40c7d0:	sbb    eax,0x86aa9b27
  40c7d5:	cwde   
  40c7d6:	mov    esp,DWORD PTR [ebx]
  40c7d8:	xor    DWORD PTR [ecx+0x2fceb0ce],0x4751eca8
  40c7e2:	add    eax,0x8f71161d
  40c7e7:	cmp    ecx,ebx
  40c7e9:	or     al,0x8a
  40c7eb:	icebp  
  40c7ec:	push   ss
  40c7ed:	add    ecx,ecx
  40c7ef:	je     0x40c7d7
  40c7f1:	loop   0x40c7e3
  40c7f3:	inc    ebp
  40c7f4:	stos   DWORD PTR es:[edi],eax
  40c7f5:	push   ecx
  40c7f6:	inc    ebx
  40c7f7:	cmp    BYTE PTR ds:0x62a93229,bh
  40c7fd:	xchg   esi,eax
  40c7fe:	(bad)  
  40c7ff:	(bad)  
  40c800:	in     eax,dx
  40c801:	jne    0x40c868
  40c803:	in     al,dx
  40c804:	not    BYTE PTR [ebx+0x14]
  40c807:	mov    ebp,0x80a291a9
  40c80c:	xchg   DWORD PTR [esi],ebx
  40c80e:	int3   
  40c80f:	ins    BYTE PTR es:[edi],dx
  40c810:	leave  
  40c811:	pop    ebx
  40c812:	xor    ebp,DWORD PTR [ebp-0x6e570173]
  40c818:	or     esp,0xce5f9d78
  40c81e:	xchg   edi,eax
  40c81f:	cmp    cl,BYTE PTR [edx-0x3a]
  40c822:	push   edx
  40c823:	inc    esi
  40c824:	mov    al,BYTE PTR [eax+0x76b40cfd]
  40c82a:	mov    DWORD PTR [esi-0x2e],ebp
  40c82d:	(bad)  
  40c82e:	in     eax,0x61
  40c830:	mov    bl,0x1c
  40c832:	cdq    
  40c833:	nop
  40c834:	push   ebp
  40c835:	pop    eax
  40c836:	xor    eax,0x6524027f
  40c83b:	in     al,dx
  40c83c:	fs xchg ebp,eax
  40c83e:	je     0x40c84f
  40c840:	mov    ch,0x8f
  40c842:	int    0xd7
  40c844:	bound  edx,QWORD PTR [ebx-0xe]
  40c847:	or     eax,0x8dbe0989
  40c84c:	adc    al,BYTE PTR [edx-0x1b62f35a]
  40c852:	push   edi
  40c853:	inc    esi
  40c854:	retf   0x463f
  40c857:	xchg   esp,eax
  40c858:	int    0x62
  40c85a:	test   DWORD PTR [ebx-0x7e],ecx
  40c85d:	push   ebx
  40c85e:	adc    DWORD PTR [edi],ebp
  40c860:	cmp    esi,edx
  40c862:	mov    DWORD PTR [ecx+eax*8+0x7a],edx
  40c866:	add    edi,0xffffff99
  40c869:	and    dh,0xf7
  40c86c:	mov    cs,WORD PTR [eax]
  40c86e:	pop    ebp
  40c86f:	rol    DWORD PTR [eax-0x70418c58],0x47
  40c876:	clc    
  40c877:	cmp    al,BYTE PTR [edi]
  40c879:	sbb    dl,BYTE PTR [edi]
  40c87b:	mov    dh,0xff
  40c87d:	dec    edx
  40c87e:	(bad)  
  40c87f:	das    
  40c880:	ja     0x40c892
  40c882:	sub    DWORD PTR [ebx],edi
  40c884:	push   edx
  40c885:	or     bl,BYTE PTR [ebx-0x4b]
  40c888:	test   eax,0xc6b5561f
  40c88d:	inc    BYTE PTR ds:0xeefc096b
  40c893:	jle    0x40c890
  40c895:	retf   
  40c896:	cmp    ah,ah
  40c898:	mov    ebp,0x50163ce8
  40c89d:	pop    ss
  40c89e:	(bad)  
  40c89f:	pop    esi
  40c8a0:	nop    DWORD PTR [ebx+0x16]
  40c8a4:	or     al,0xe7
  40c8a6:	inc    esp
  40c8a7:	ret    
  40c8a8:	aam    0xff
  40c8aa:	and    cl,BYTE PTR [ebp-0x18]
  40c8ad:	lea    ebp,[edx-0x8617254]
  40c8b3:	mov    esi,0xcb2db2ad
  40c8b8:	inc    esp
  40c8b9:	sbb    DWORD PTR [eax+0x6a],edi
  40c8bc:	sbb    al,0x60
  40c8be:	dec    edx
  40c8bf:	pop    edx
  40c8c0:	jle    0x40c90a
  40c8c2:	xchg   edx,eax
  40c8c3:	rol    cl,1
  40c8c5:	(bad)  
  40c8c6:	push   ecx
  40c8c7:	mov    esi,0xf8b46491
  40c8cc:	pop    esp
  40c8cd:	mov    ecx,0x86c818c9
  40c8d2:	aaa    
  40c8d3:	mov    ebx,0x74b97876
  40c8d8:	mov    eax,ds:0xed77576b
  40c8dd:	call   0x311e3d00
  40c8e2:	mov    eax,0x5ec783b1
  40c8e7:	push   es
  40c8e8:	test   eax,0x652ef2e5
  40c8ed:	inc    ebx
  40c8ee:	hlt    
  40c8ef:	popf   
  40c8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f1:	scas   eax,DWORD PTR es:[edi]
  40c8f2:	ror    DWORD PTR [edx+0x27],cl
  40c8f5:	jle    0x40c96c
  40c8f7:	dec    esp
  40c8f8:	shl    DWORD PTR [eax+0x203b832a],1
  40c8fe:	push   cs
  40c8ff:	add    cl,cl
  40c901:	imul   ebp,DWORD PTR [edx+0x53],0x17
  40c905:	mov    al,0xb4
  40c907:	xchg   edx,eax
  40c908:	enter  0x5e4c,0x63
  40c90c:	cwde   
  40c90d:	xlat   BYTE PTR ds:[ebx]
  40c90e:	(bad)  
  40c90f:	popf   
  40c910:	icebp  
  40c911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c912:	push   ebx
  40c913:	arpl   WORD PTR [ecx+0x6d],cx
  40c916:	(bad)  
  40c917:	cmc    
  40c918:	rcl    DWORD PTR [edi+0x72],0x53
  40c91c:	shr    BYTE PTR [ebp-0x4a70981],1
  40c922:	loopne 0x40c938
  40c924:	push   esi
  40c925:	fistp  WORD PTR [eax]
  40c927:	pop    edi
  40c928:	jp     0x40c8ee
  40c92a:	fild   QWORD PTR ds:0x6844395d
  40c930:	mov    cl,0xf6
  40c932:	js     0x40c96a
  40c934:	sbb    al,0xd8
  40c936:	inc    ebx
  40c937:	pop    es
  40c938:	test   al,0x31
  40c93a:	scas   eax,DWORD PTR es:[edi]
  40c93b:	jecxz  0x40c968
  40c93d:	pop    esi
  40c93e:	and    al,0xbe
  40c940:	ins    DWORD PTR es:[edi],dx
  40c941:	dec    ecx
  40c942:	jmp    0x22b6c149
  40c947:	popa   
  40c948:	mov    esi,DWORD PTR [ebp-0x112620ea]
  40c94e:	ss inc edx
  40c950:	lods   eax,DWORD PTR ds:[esi]
  40c951:	enter  0x95ea,0x91
  40c955:	adc    eax,0x9bf1806e
  40c95a:	out    dx,eax
  40c95b:	loop   0x40c94b
  40c95d:	imul   esi,DWORD PTR [esi],0xd0b0e45d
  40c963:	into   
  40c964:	xchg   ebp,eax
  40c965:	mov    ebp,0xebe4a022
  40c96a:	sbb    eax,0xf6b09f49
  40c96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c970:	fdivr  QWORD PTR [edx+eax*8]
  40c973:	push   ecx
  40c974:	mov    al,ds:0x913f7e2e
  40c979:	mov    DWORD PTR [ebx-0x2d],ebp
  40c97c:	fwait
  40c97d:	or     DWORD PTR [ebx-0x41c640d1],edx
  40c983:	sub    eax,0xa7914250
  40c988:	ret    0xdf7e
  40c98b:	cmp    ebx,DWORD PTR [esi-0x51]
  40c98e:	sub    BYTE PTR [ecx+0x20],dl
  40c991:	ins    BYTE PTR es:[edi],dx
  40c992:	jle    0x40c9e1
  40c994:	xor    eax,0xba0d6251
  40c999:	push   ds
  40c99a:	pusha  
  40c99b:	ficom  DWORD PTR [esi+edx*4]
  40c99e:	mov    ds:0xd8b89544,al
  40c9a3:	jl     0x40c939
  40c9a5:	mov    dl,0x30
  40c9a7:	jle    0x40c9f3
  40c9a9:	repnz sbb al,0x3e
  40c9ac:	dec    DWORD PTR [eax+0x587fb9df]
  40c9b2:	push   ebp
  40c9b3:	out    dx,al
  40c9b4:	lods   eax,DWORD PTR ds:[esi]
  40c9b5:	loope  0x40c9db
  40c9b7:	dec    edx
  40c9b8:	jge    0x40ca30
  40c9ba:	pop    ss
  40c9bb:	mov    ecx,0xb28ab64e
  40c9c0:	cli    
  40c9c1:	pop    ds
  40c9c2:	test   al,0x9a
  40c9c4:	mov    esi,0x28190796
  40c9c9:	call   0x1ebd956c
  40c9ce:	lsl    esp,WORD PTR [eax-0x6a979ff8]
  40c9d5:	mov    ebp,0x86de721e
  40c9da:	cld    
  40c9db:	pop    ds
  40c9dc:	sbb    dl,BYTE PTR [ecx-0x78138006]
  40c9e2:	int    0xf5
  40c9e4:	mov    ch,0xd9
  40c9e6:	xchg   ecx,eax
  40c9e7:	cmp    al,0xd2
  40c9e9:	push   edx
  40c9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9eb:	scas   eax,DWORD PTR es:[edi]
  40c9ec:	(bad)  
  40c9ed:	icebp  
  40c9ee:	jno    0x40c9bd
  40c9f0:	xlat   BYTE PTR ds:[ebx]
  40c9f1:	stos   BYTE PTR es:[edi],al
  40c9f2:	rcl    BYTE PTR [ebp+0x65e61b65],0x41
  40c9f9:	scas   eax,DWORD PTR es:[edi]
  40c9fa:	sbb    DWORD PTR [ebp-0x213de826],edi
  40ca00:	scas   eax,DWORD PTR es:[edi]
  40ca01:	push   ss
  40ca02:	sti    
  40ca03:	mov    WORD PTR [eax+0x38],?
  40ca06:	dec    edi
  40ca07:	cmp    al,0xaa
  40ca09:	inc    esi
  40ca0a:	ror    BYTE PTR [eax],0x5b
  40ca0d:	jno    0x40c9c9
  40ca0f:	ins    BYTE PTR es:[edi],dx
  40ca10:	cmp    al,0xfb
  40ca12:	xchg   BYTE PTR [edx],dl
  40ca14:	lods   eax,DWORD PTR ds:[esi]
  40ca15:	push   eax
  40ca16:	outs   dx,DWORD PTR ds:[esi]
  40ca17:	sar    edx,cl
  40ca19:	push   esi
  40ca1a:	into   
  40ca1b:	out    dx,al
  40ca1c:	push   edx
  40ca1d:	fadd   QWORD PTR [edx+0x1b537f4c]
  40ca23:	aas    
  40ca24:	pop    edx
  40ca25:	xor    dl,BYTE PTR [edx+0x34]
  40ca28:	cmp    ch,BYTE PTR [ebx-0x11]
  40ca2b:	std    
  40ca2c:	inc    edi
  40ca2d:	fsub   st(6),st
  40ca2f:	mov    ds:0xf8034a3f,eax
  40ca34:	mov    ds:0x646baa66,eax
  40ca39:	cmp    ah,bh
  40ca3b:	outs   dx,BYTE PTR ds:[esi]
  40ca3c:	add    BYTE PTR [edx+0x10147b9b],0x95
  40ca43:	sahf   
  40ca44:	dec    ebx
  40ca45:	idiv   esi
  40ca47:	jp     0x40ca3a
  40ca49:	cmp    eax,0x8d02039e
  40ca4e:	test   ch,bh
  40ca50:	shl    BYTE PTR [edi+0x2b],1
  40ca53:	aaa    
  40ca54:	shl    DWORD PTR [ebx-0xc],cl
  40ca57:	and    ebx,edx
  40ca59:	hlt    
  40ca5a:	jmp    0xf4ea:0xe6b7406b
  40ca61:	push   cs
  40ca62:	push   es
  40ca63:	call   0x30d7:0x6dfe8387
  40ca6a:	repnz xchg ebx,eax
  40ca6c:	xchg   esp,eax
  40ca6d:	retf   
  40ca6e:	bound  ebp,QWORD PTR [ebx-0x23217005]
  40ca74:	outs   dx,BYTE PTR ds:[esi]
  40ca75:	stos   BYTE PTR es:[edi],al
  40ca76:	loope  0x40caa3
  40ca78:	int3   
  40ca79:	scas   eax,DWORD PTR es:[edi]
  40ca7a:	and    eax,0x19f43c47
  40ca7f:	cmc    
  40ca80:	stos   DWORD PTR es:[edi],eax
  40ca81:	cmp    eax,0xccb2f85b
  40ca86:	add    al,0xa6
  40ca88:	xchg   BYTE PTR [ebp-0x27],cl
  40ca8b:	in     al,dx
  40ca8c:	push   esi
  40ca8d:	aad    0xf
  40ca8f:	jp     0x40caf0
  40ca91:	mov    dl,0x49
  40ca93:	test   eax,0x4f4ba756
  40ca98:	pop    es
  40ca99:	xor    BYTE PTR [ebx+ebx*8-0x5de552],dh
  40caa0:	push   ebx
  40caa1:	ret    
  40caa2:	and    DWORD PTR [esi+0x7],edx
  40caa5:	mov    bh,dh
  40caa7:	ror    DWORD PTR [esi+0x4cb25589],0xd5
  40caae:	loop   0x40ca6e
  40cab0:	fild   DWORD PTR ds:0xf5be5cf7
  40cab6:	xor    BYTE PTR [ecx],bh
  40cab8:	xchg   ecx,eax
  40cab9:	arpl   WORD PTR [ebx+0x22],sp
  40cabc:	push   0x1be78d0f
  40cac1:	hlt    
  40cac2:	mov    ch,0x22
  40cac4:	aaa    
  40cac5:	sub    dh,bh
  40cac7:	ror    BYTE PTR [edx],0x8c
  40caca:	retf   0xfc39
  40cacd:	push   es
  40cace:	shl    BYTE PTR [edx],cl
  40cad0:	push   ss
  40cad1:	push   cs
  40cad2:	(bad)  
  40cad3:	sbb    dl,BYTE PTR [esi]
  40cad5:	loope  0x40cb3d
  40cad7:	repz or eax,DWORD PTR [ebp+eax*8+0x1f]
  40cadc:	dec    DWORD PTR [ecx-0x2c]
  40cadf:	ins    DWORD PTR es:[edi],dx
  40cae0:	pop    ds
  40cae1:	mov    ss,WORD PTR [ecx-0x58]
  40cae4:	(bad)  
  40cae6:	bound  edi,QWORD PTR [ebp+0x333cdb58]
  40caec:	jnp    0x40cb41
  40caee:	adc    DWORD PTR [edx+edi*1],esp
  40caf1:	adc    DWORD PTR [edx-0x3e],edi
  40caf4:	xchg   BYTE PTR [ebp+0x63342d84],ah
  40cafa:	xor    edi,esi
  40cafc:	inc    ebx
  40cafd:	in     eax,dx
  40cafe:	enter  0xadb6,0xe
  40cb02:	push   esp
  40cb03:	jno    0x40cb60
  40cb05:	mov    dl,0x66
  40cb07:	fcomi  st,st(7)
  40cb09:	jmp    0x264d:0x93dcb1e9
  40cb10:	add    esp,DWORD PTR [edx]
  40cb12:	pop    esp
  40cb13:	adc    BYTE PTR [edi+0xf43a8be],cl
  40cb19:	pop    es
  40cb1a:	lock jne 0x40cb58
  40cb1d:	cmp    DWORD PTR [ecx],ecx
  40cb1f:	xor    BYTE PTR [ebx],bl
  40cb21:	aad    0x63
  40cb23:	add    BYTE PTR [edi],0x44
  40cb26:	test   eax,0x4f9c0cba
  40cb2b:	ins    BYTE PTR es:[edi],dx
  40cb2c:	sub    al,0x74
  40cb2e:	xchg   esp,eax
  40cb2f:	jno    0x40cb99
  40cb31:	repz hlt 
  40cb33:	dec    edi
  40cb34:	mov    edx,ebx
  40cb36:	ret    
  40cb37:	dec    ecx
  40cb38:	inc    eax
  40cb39:	lock pop ebp
  40cb3b:	xchg   esi,eax
  40cb3c:	sbb    eax,0xcb0b13bc
  40cb41:	and    eax,DWORD PTR [ebx+0x59b700df]
  40cb47:	(bad)  [ebx+0x6a]
  40cb4a:	pop    esi
  40cb4b:	push   esi
  40cb4c:	xchg   esp,eax
  40cb4d:	or     edx,0x67
  40cb50:	stos   DWORD PTR es:[edi],eax
  40cb51:	jnp    0x40cb36
  40cb53:	das    
  40cb54:	mov    es,ebp
  40cb56:	mov    bh,0xec
  40cb58:	push   0xffffffdd
  40cb5a:	call   0x1531:0x1f8292f3
  40cb61:	xchg   BYTE PTR [ecx],al
  40cb63:	jp     0x40cb28
  40cb65:	inc    DWORD PTR [esi+eiz*2]
  40cb68:	cmp    ah,BYTE PTR [ecx]
  40cb6a:	scas   eax,DWORD PTR es:[edi]
  40cb6b:	jbe    0x40cbae
  40cb6d:	in     eax,0xb5
  40cb6f:	and    ah,BYTE PTR [ebp+0x71f3f152]
  40cb75:	mov    ds:0x1002321e,al
  40cb7a:	or     esi,esi
  40cb7c:	test   eax,0xcf73c763
  40cb82:	cmp    ebx,eax
  40cb84:	pop    esi
  40cb85:	addr16 js 0x40cb39
  40cb88:	stos   DWORD PTR es:[edi],eax
  40cb89:	addr16 call 0xa360:0x2b1712c3
  40cb91:	and    al,0x1c
  40cb93:	sub    eax,0xce2f8b75
  40cb98:	daa    
  40cb99:	fcomp  QWORD PTR [edi+eax*1+0x17]
  40cb9d:	out    dx,al
  40cb9e:	aaa    
  40cb9f:	pop    ds
  40cba0:	fstp   DWORD PTR [ecx+ecx*4-0x40]
  40cba4:	jnp    0x40cb76
  40cba6:	mov    ch,0xb6
  40cba8:	fnstcw WORD PTR [eax+0x64fa0ab3]
  40cbae:	push   edx
  40cbaf:	mov    eax,ds:0x5f94520f
  40cbb4:	jb     0x40cbd3
  40cbb6:	adc    eax,0xde095257
  40cbbb:	cwde   
  40cbbc:	and    BYTE PTR [edx],ch
  40cbbe:	sbb    eax,0x52cd85bd
  40cbc3:	cmp    al,0xa7
  40cbc5:	out    dx,eax
  40cbc6:	dec    esi
  40cbc7:	sub    BYTE PTR [edi-0x5f4f2aa5],bh
  40cbcd:	mov    ds:0x650959b,eax
  40cbd2:	push   cs
  40cbd3:	dec    eax
  40cbd4:	fstp   QWORD PTR [ebx+0x5c725784]
  40cbda:	stos   BYTE PTR es:[edi],al
  40cbdb:	and    eax,0x82951bac
  40cbe0:	sub    bh,0x96
  40cbe3:	call   0x82de:0x1ef09219
  40cbea:	pop    ds
  40cbeb:	inc    edx
  40cbec:	outs   dx,BYTE PTR ds:[esi]
  40cbed:	mov    dh,0xeb
  40cbef:	ins    BYTE PTR es:[edi],dx
  40cbf0:	sbb    ebp,DWORD PTR gs:[esi+0x12]
  40cbf4:	neg    ecx
  40cbf6:	add    ebp,DWORD PTR [edi-0x28]
  40cbf9:	cwde   
  40cbfa:	movntq QWORD PTR [ebx-0x8],mm4
  40cbfe:	add    DWORD PTR [edi-0xcec67e8],ebx
  40cc04:	xchg   ebx,eax
  40cc05:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40cc07:	pop    ebp
  40cc08:	jo     0x40cc28
  40cc0a:	out    dx,al
  40cc0b:	nop    DWORD PTR [esi+0x68]
  40cc0f:	gs mov ch,0x6d
  40cc12:	push   0x62e80274
  40cc17:	lea    eax,[ecx-0x7]
  40cc1a:	retf   
  40cc1b:	fs es xchg eax,eax
  40cc1f:	jp     0x40cc53
  40cc21:	and    DWORD PTR [eax],ebx
  40cc23:	cmp    dh,BYTE PTR [ecx+0x4e]
  40cc26:	xlat   BYTE PTR ds:[ebx]
  40cc27:	gs not edx
  40cc2a:	mov    al,ds:0xf915cdd3
  40cc2f:	lods   al,BYTE PTR ds:[esi]
  40cc30:	pshufw mm6,QWORD PTR [ecx+0xcfbdfc6],0x32
  40cc38:	cld    
  40cc39:	xchg   edx,eax
  40cc3a:	ja     0x40cc2b
  40cc3c:	cld    
  40cc3d:	cmp    BYTE PTR [ebp+ecx*1+0x1e6b3f73],bh
  40cc44:	and    al,BYTE PTR [esi-0x79132e22]
  40cc4a:	mov    ebx,DWORD PTR [ebx-0x7104866b]
  40cc50:	fimul  WORD PTR [edx*1-0x7a3ec98]
  40cc57:	or     BYTE PTR [ebx+0x468383e1],bl
  40cc5d:	stc    
  40cc5e:	mov    al,0x37
  40cc60:	xchg   esp,eax
  40cc61:	push   esp
  40cc62:	icebp  
  40cc63:	fidiv  WORD PTR [eax+0x68a35fdf]
  40cc69:	or     al,0x51
  40cc6b:	sbb    eax,0x96e67599
  40cc70:	jne    0x40cc76
  40cc72:	stos   DWORD PTR es:[edi],eax
  40cc73:	push   es
  40cc74:	outs   dx,DWORD PTR ds:[esi]
  40cc75:	pop    ss
  40cc76:	sbb    eax,0xe8947ce6
  40cc7b:	call   0xa95004d6
  40cc80:	je     0x40cc34
  40cc82:	fist   WORD PTR [eax]
  40cc84:	sub    ch,BYTE PTR [ebx+0x75588d7c]
  40cc8a:	shr    DWORD PTR ds:[ebx-0x27d48c0e],1
  40cc91:	scas   eax,DWORD PTR es:[edi]
  40cc92:	inc    edx
  40cc93:	mov    al,ds:0x64ff4195
  40cc98:	cli    
  40cc99:	retf   0x6ab9
  40cc9c:	fstp   TBYTE PTR ds:0x2ede7a52
  40cca2:	pop    ss
  40cca3:	xor    DWORD PTR [eax+0x27],esp
  40cca6:	loope  0x40ccc7
  40cca8:	inc    ebx
  40cca9:	pusha  
  40ccaa:	cmc    
  40ccab:	sbb    BYTE PTR [ebp+eiz*2+0x5d],0x52
  40ccb0:	push   ds
  40ccb1:	arpl   dx,bp
  40ccb3:	stos   DWORD PTR es:[edi],eax
  40ccb4:	and    BYTE PTR [ecx-0x3a],cl
  40ccb7:	fcomp  st(5)
  40ccb9:	pop    edx
  40ccba:	cmp    BYTE PTR ds:0xa7b0ed58,dl
  40ccc0:	cmp    eax,0xf34e60d7
  40ccc5:	hlt    
  40ccc6:	mov    ds:0xd6c46978,eax
  40cccb:	imul   esi,ecx,0xe7500b80
  40ccd1:	out    dx,al
  40ccd2:	rcl    BYTE PTR [edi-0x74f94a88],0x1b
  40ccd9:	pop    esi
  40ccda:	in     eax,0xd7
  40ccdc:	stos   DWORD PTR es:[edi],eax
  40ccdd:	popf   
  40ccde:	ja     0x40ccf1
  40cce0:	jmp    0x175646c0
  40cce5:	popa   
  40cce6:	pop    ebx
  40cce7:	sub    DWORD PTR [edi-0x5cadb6e3],ebx
  40cced:	imul   esi,DWORD PTR [edx-0xc],0xffffffd4
  40ccf1:	ja     0x40cc86
  40ccf3:	or     eax,0x9c670968
  40ccf8:	add    DWORD PTR ds:0x750f8480,0x32
  40ccff:	jl     0x40ccf8
  40cd01:	xchg   edi,eax
  40cd02:	rcl    DWORD PTR [si-0x5d],1
  40cd06:	and    edx,DWORD PTR [edi-0x288552]
  40cd0c:	adc    ch,BYTE PTR [edi+ebx*1-0x4a]
  40cd10:	dec    ebp
  40cd11:	mov    bl,0x17
  40cd13:	push   ebp
  40cd14:	cli    
  40cd15:	jl     0x40cd80
  40cd17:	int3   
  40cd18:	push   ss
  40cd19:	add    al,0x9f
  40cd1b:	pop    ss
  40cd1c:	sti    
  40cd1d:	mov    ebp,0x7e50046b
  40cd22:	push   cs
  40cd23:	dec    ebp
  40cd24:	push   0x4f5600bf
  40cd29:	in     al,dx
  40cd2a:	shr    DWORD PTR [edi+0x58],0x52
  40cd2e:	mov    ebx,0x2f497785
  40cd33:	ret    0x4cef
  40cd36:	jns    0x40cda5
  40cd38:	xchg   ebx,eax
  40cd39:	loopne 0x40cd72
  40cd3b:	xchg   edx,edx
  40cd3d:	loopne 0x40cd9e
  40cd3f:	mov    ebp,0x763f57ce
  40cd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd45:	or     BYTE PTR [edi+0x12],cl
  40cd48:	daa    
  40cd49:	fisttp QWORD PTR [edi-0x63]
  40cd4c:	fdiv   DWORD PTR [esp+edx*8+0x6b5778d5]
  40cd53:	dec    edi
  40cd54:	ins    BYTE PTR es:[edi],dx
  40cd55:	aas    
  40cd56:	mov    ebx,0x6795e2dc
  40cd5b:	ficomp WORD PTR [eax+0x65]
  40cd5e:	sbb    ecx,DWORD PTR [edx]
  40cd60:	fwait
  40cd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd62:	jmp    0x3fee652d
  40cd67:	add    al,0xad
  40cd69:	test   DWORD PTR [ebx-0x1e396a94],edx
  40cd6f:	or     eax,0xb795e7da
  40cd74:	or     bl,0x2a
  40cd77:	sbb    eax,0x4e1c8211
  40cd7c:	xor    dh,BYTE PTR [ebx]
  40cd7e:	mov    eax,0x14f4afe2
  40cd83:	ja     0x40cd14
  40cd85:	stos   BYTE PTR es:[edi],al
  40cd86:	xor    BYTE PTR [edx],cl
  40cd88:	mov    eax,ds:0x24112788
  40cd8d:	and    al,0xe2
  40cd8f:	test   edx,ecx
  40cd91:	jmp    0x40cd15
  40cd93:	mov    BYTE PTR [esi+0x5be3dd33],al
  40cd99:	or     BYTE PTR [esi+ebx*1+0x3029a29f],cl
  40cda0:	jbe    0x40cd46
  40cda2:	pop    eax
  40cda3:	call   0x86d8:0x78aba75e
  40cdaa:	dec    ebp
  40cdab:	(bad)  
  40cdac:	cdq    
  40cdad:	in     al,0x87
  40cdaf:	xor    DWORD PTR [edi+0x1d557c1],edi
  40cdb5:	sub    DWORD PTR [esi+0x834da8],edi
  40cdbb:	pop    esi
  40cdbc:	stos   BYTE PTR es:[edi],al
  40cdbd:	ins    DWORD PTR es:[edi],dx
  40cdbe:	pop    ebp
  40cdbf:	and    eax,0x895fba73
  40cdc4:	sti    
  40cdc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc6:	dec    edx
  40cdc7:	inc    esi
  40cdc9:	pop    ebx
  40cdca:	shl    DWORD PTR [ebx+0x495b15a9],0x27
  40cdd1:	mov    edi,DWORD PTR [eax-0x1a]
  40cdd4:	clc    
  40cdd5:	out    0xb6,eax
  40cdd7:	xor    ch,BYTE PTR [edx+0x50]
  40cdda:	into   
  40cddb:	sub    dh,BYTE PTR [ebx+0x2e788ea]
  40cde1:	sar    DWORD PTR [edi-0x15],cl
  40cde4:	inc    edi
  40cde5:	jns    0x40ce65
  40cde7:	retf   
  40cde8:	xchg   esi,eax
  40cde9:	mov    BYTE PTR [edi-0x4a9793f4],dh
  40cdef:	cmp    al,0x70
  40cdf1:	lods   eax,DWORD PTR ds:[esi]
  40cdf2:	mov    eax,ds:0x1dc99f64
  40cdf7:	and    BYTE PTR [edx+eax*2],0x83
  40cdfb:	fstp   DWORD PTR [eax+0x75]
  40cdfe:	stos   BYTE PTR es:[edi],al
  40cdff:	ret    0x6ca5
  40ce02:	dec    edx
  40ce03:	mov    dh,bl
  40ce05:	hlt    
  40ce06:	jg     0x40cdc9
  40ce08:	xchg   esi,eax
  40ce09:	out    dx,eax
  40ce0a:	adc    al,0x31
  40ce0c:	mov    edx,0x4b45a1f3
  40ce11:	test   BYTE PTR [ebx-0x3c],bh
  40ce14:	mov    ebx,0xbfa4e6ca
  40ce19:	xchg   edi,eax
  40ce1a:	push   eax
  40ce1b:	cs in  eax,0x1
  40ce1e:	jg     0x40cdea
  40ce20:	mov    edx,0xb71d789
  40ce25:	xlat   BYTE PTR ds:[ebx]
  40ce26:	pop    ecx
  40ce27:	jmp    0x40ce00
  40ce29:	sbb    edx,edx
  40ce2b:	dec    ebp
  40ce2c:	mov    esp,0x33a57520
  40ce31:	push   ebp
  40ce32:	fnstenv [esi+ebx*4]
  40ce35:	inc    ecx
  40ce36:	inc    esp
  40ce37:	jo     0x40ce22
  40ce39:	mov    bh,BYTE PTR [esi]
  40ce3b:	(bad)  
  40ce3c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce3e:	add    al,0x97
  40ce40:	aas    
  40ce41:	sub    DWORD PTR [esi+0x23],eax
  40ce44:	pop    ds
  40ce45:	jecxz  0x40cdd3
  40ce47:	aaa    
  40ce48:	bound  esp,QWORD PTR [eax]
  40ce4a:	push   esi
  40ce4b:	aad    0x84
  40ce4d:	test   al,0x87
  40ce4f:	das    
  40ce50:	inc    ebx
  40ce51:	sub    al,0x45
  40ce53:	mov    ds:0xe316b863,al
  40ce58:	rol    DWORD PTR [edx+0x6864e53f],cl
  40ce5e:	mov    dl,BYTE PTR [ecx+eax*2+0x2e]
  40ce62:	retf   
  40ce63:	pop    esp
  40ce64:	es add eax,0x6d5a5dc7
  40ce6a:	dec    ecx
  40ce6b:	inc    ebp
  40ce6c:	ret    
  40ce6d:	ret    0x90cc
  40ce70:	test   eax,0x385fccbb
  40ce75:	cmp    eax,DWORD PTR [ecx-0x1ba6248]
  40ce7b:	leave  
  40ce7c:	inc    ecx
  40ce7d:	in     al,dx
  40ce7e:	xchg   esi,eax
  40ce7f:	xor    cl,dh
  40ce81:	(bad)  
  40ce82:	in     eax,dx
  40ce83:	call   0xefc:0xd221a1cf
  40ce8a:	out    dx,eax
  40ce8b:	sti    
  40ce8c:	push   ds
  40ce8d:	jmp    0x40ce74
  40ce8f:	mov    WORD PTR [esi-0x78],ds
  40ce92:	inc    ebx
  40ce93:	xor    BYTE PTR [ebp+0x60910203],dl
  40ce99:	push   ecx
  40ce9a:	icebp  
  40ce9b:	jp     0x40ced5
  40ce9d:	fwait
  40ce9e:	mov    bh,0x81
  40cea0:	ins    DWORD PTR es:[edi],dx
  40cea1:	dec    ecx
  40cea2:	cmc    
  40cea3:	sbb    ebp,esp
  40cea5:	sbb    al,0xc4
  40cea7:	mov    dh,0x4a
  40cea9:	fucomp st(6)
  40ceab:	jae    0x40cebd
  40cead:	adc    BYTE PTR [edx],0xdb
  40ceb0:	mov    eax,ds:0xc4435ed6
  40ceb5:	icebp  
  40ceb6:	ret    
  40ceb7:	mov    ?,WORD PTR [edi-0x66]
  40ceba:	xchg   ebx,eax
  40cebb:	repz fiadd DWORD PTR [esi-0x38387025]
  40cec2:	into   
  40cec3:	out    0x8,al
  40cec5:	fs add al,0x4f
  40cec8:	idiv   BYTE PTR [ecx-0x276c5750]
  40cece:	mov    al,0x4e
  40ced0:	jmp    0x65d373fb
  40ced5:	inc    ecx
  40ced6:	pop    ebx
  40ced7:	mov    edx,0x3604cf3
  40cedc:	outs   dx,DWORD PTR ds:[esi]
  40cedd:	pop    fs
  40cedf:	xchg   edi,eax
  40cee0:	call   0x7175:0x9afc742
  40cee7:	mov    ah,0x7c
  40cee9:	test   al,0x5e
  40ceeb:	in     al,dx
  40ceec:	in     eax,0x9e
  40ceee:	popf   
  40ceef:	out    dx,al
  40cef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef1:	popf   
  40cef2:	ret    
  40cef3:	es fs call 0xa190a076
  40cefa:	out    dx,eax
  40cefb:	std    
  40cefc:	fcmovnu st,st(6)
  40cefe:	mov    BYTE PTR [edi],cl
  40cf00:	div    BYTE PTR es:[edi]
  40cf03:	aam    0x47
  40cf05:	push   0x43419385
  40cf0a:	jb     0x40cece
  40cf0c:	mov    bh,0xc7
  40cf0e:	jae    0x40cf75
  40cf10:	push   ss
  40cf11:	dec    ecx
  40cf12:	retf   
  40cf13:	imul   ebx,DWORD PTR [ecx],0xfdb70cd0
  40cf19:	sbb    al,0x35
  40cf1b:	push   ecx
  40cf1c:	xchg   edi,eax
  40cf1d:	jno    0x40cf36
  40cf1f:	add    eax,0x6d90e9a7
  40cf24:	add    BYTE PTR [esp+ebx*2-0x4],0xa5
  40cf29:	sti    
  40cf2a:	xor    esi,0x3d
  40cf2d:	mov    ch,0x58
  40cf2f:	pop    ebx
  40cf30:	imul   edx,DWORD PTR [edx+0x3abd394a],0x1772435b
  40cf3a:	ds stos DWORD PTR es:[edi],eax
  40cf3c:	sar    DWORD PTR [esi],1
  40cf3e:	test   al,0x5b
  40cf40:	push   cs
  40cf41:	mov    ebx,0x5f87240c
  40cf46:	xlat   BYTE PTR ds:[ebx]
  40cf47:	loope  0x40cee5
  40cf49:	repnz or edi,DWORD PTR [eax]
  40cf4c:	fcomp  DWORD PTR [ebx]
  40cf4e:	mov    bl,bh
  40cf50:	addr16 dec esi
  40cf52:	in     al,0xb4
  40cf54:	je     0x40cfcf
  40cf56:	xor    al,0xc2
  40cf58:	push   es
  40cf59:	ins    BYTE PTR es:[edi],dx
  40cf5a:	jp     0x40cf93
  40cf5c:	in     al,dx
  40cf5d:	add    eax,0xaf842364
  40cf62:	mov    ah,0xa6
  40cf64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf65:	pushf  
  40cf66:	push   eax
  40cf67:	int    0x92
  40cf69:	fdiv   st,st(6)
  40cf6b:	jbe    0x40cf33
  40cf6d:	pop    ebx
  40cf6e:	cld    
  40cf6f:	or     BYTE PTR [esi+edi*8-0x1a1e7209],dl
  40cf76:	ror    DWORD PTR [ebp+0x6e3b92d6],cl
  40cf7c:	mov    edx,DWORD PTR [ebp+0x5042203f]
  40cf82:	(bad)  
  40cf83:	fdiv   QWORD PTR [eax-0x72]
  40cf86:	sbb    eax,0x279bb06a
  40cf8b:	scas   eax,DWORD PTR es:[edi]
  40cf8c:	push   ebx
  40cf8d:	pusha  
  40cf8e:	xchg   BYTE PTR [edx-0x32],bl
  40cf91:	shl    DWORD PTR [ebx+ebx*8+0x5],1
  40cf95:	mov    edx,0xf0dff4b2
  40cf9a:	cmp    DWORD PTR [ecx],ebp
  40cf9c:	scas   al,BYTE PTR es:[edi]
  40cf9d:	sub    BYTE PTR [edx+0x72281bb7],al
  40cfa3:	test   DWORD PTR [edx],0xcc6250f0
  40cfa9:	cmovne ebx,DWORD PTR [edi+0x4f]
  40cfad:	pop    ebp
  40cfae:	or     eax,0xd1263dd8
  40cfb3:	and    dh,BYTE PTR [edx-0x4a661253]
  40cfb9:	fld    DWORD PTR [eax-0x25b97225]
  40cfbf:	xchg   ebx,eax
  40cfc0:	pop    esi
  40cfc1:	mov    bh,0x46
  40cfc3:	add    al,0x9a
  40cfc5:	or     eax,0x82f947eb
  40cfca:	aaa    
  40cfcb:	inc    esi
  40cfcc:	add    eax,0x9a3d21b9
  40cfd1:	mov    ds:0xcca4fd2e,eax
  40cfd6:	jno    0x40cf62
  40cfd8:	aam    0x7f
  40cfda:	mov    ch,0x47
  40cfdc:	retf   0xe7d5
  40cfdf:	into   
  40cfe0:	push   eax
  40cfe1:	push   eax
  40cfe2:	bnd jmp 0x40cf92
  40cfe5:	cdq    
  40cfe6:	fs jo  0x40cf77
  40cfe9:	jmp    0x5a43c504
  40cfee:	add    al,cl
  40cff0:	cmp    edx,ebp
  40cff2:	bound  ecx,QWORD PTR [edi-0x5b]
  40cff5:	add    eax,DWORD PTR [esi-0x4ad7ef5b]
  40cffb:	aaa    
  40cffc:	je     0x40cfe8
  40cffe:	ror    bh,0xde
  40d001:	popa   
  40d002:	or     DWORD PTR [ebx],0x98001e37
  40d008:	push   edi
  40d009:	jbe    0x40cf8f
  40d00b:	jl     0x40cffd
  40d00d:	add    al,0x3
  40d00f:	xchg   esi,eax
  40d010:	out    dx,al
  40d011:	mov    edx,0xddf00947
  40d016:	loop   0x40d03b
  40d018:	and    BYTE PTR [edi-0x1d],0x52
  40d01c:	fs ins BYTE PTR es:[edi],dx
  40d01e:	rcl    BYTE PTR [edi],0x9a
  40d021:	jae    0x40d083
  40d023:	dec    eax
  40d024:	jle    0x40d06a
  40d026:	adc    al,0xd0
  40d028:	mov    dh,0x35
  40d02a:	(bad)  
  40d02e:	pop    ebx
  40d02f:	xchg   ecx,eax
  40d030:	idiv   BYTE PTR [ebp-0x3880d223]
  40d036:	sbb    BYTE PTR [edi-0x64],dl
  40d039:	es stos DWORD PTR es:[edi],eax
  40d03b:	sub    DWORD PTR [edi],ebx
  40d03d:	mov    bh,0xe9
  40d03f:	xor    al,0xbd
  40d041:	cwde   
  40d042:	clc    
  40d043:	les    ebx,FWORD PTR [ebx-0x26202833]
  40d049:	dec    edx
  40d04a:	imul   esp,DWORD PTR [eax+0x7f],0xf00a4257
  40d051:	bound  edx,QWORD PTR ds:0x61988ba7
  40d057:	call   0x7020:0x359b04a0
  40d05e:	arpl   WORD PTR [edx+0x29],di
  40d061:	fdiv   DWORD PTR [ecx]
  40d063:	lods   eax,DWORD PTR ds:[esi]
  40d064:	sbb    DWORD PTR [ebx+0x51],esp
  40d067:	scas   al,BYTE PTR es:[edi]
  40d068:	lods   al,BYTE PTR ds:[esi]
  40d069:	inc    eax
  40d06a:	out    0x1,eax
  40d06c:	fs pop ss
  40d06e:	jbe    0x40d024
  40d070:	out    0xd0,al
  40d072:	jmp    0x9ec98084
  40d077:	dec    edx
  40d078:	xor    eax,0x87910c10
  40d07d:	dec    esp
  40d07e:	ret    
  40d07f:	clc    
  40d080:	and    ch,BYTE PTR ds:0xe07d2631
  40d086:	icebp  
  40d087:	fiadd  WORD PTR [esi-0x3cc04d30]
  40d08d:	dec    ecx
  40d08e:	out    dx,eax
  40d08f:	aaa    
  40d090:	test   al,0x28
  40d092:	gs int 0x19
  40d095:	adc    eax,0x5a35fec6
  40d09a:	idiv   BYTE PTR [ecx+esi*4-0x1]
  40d09e:	into   
  40d09f:	push   es
  40d0a0:	xor    DWORD PTR [ebp-0xd],0x463ac5cb
  40d0a7:	jnp    0x40d075
  40d0a9:	jle    0x40d0bf
  40d0ab:	dec    ecx
  40d0ac:	xchg   esp,eax
  40d0ad:	lock push esp
  40d0af:	sub    BYTE PTR [esi-0x86e6e46],al
  40d0b5:	adc    al,0xd6
  40d0b7:	in     al,dx
  40d0b8:	int    0xa
  40d0ba:	push   0x50686a4b
  40d0bf:	sub    bh,BYTE PTR [edi]
  40d0c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c2:	adc    ecx,ebx
  40d0c4:	(bad)  
  40d0c5:	cmp    bl,BYTE PTR [ebp+0x68aa5cb7]
  40d0cb:	and    eax,0x13de3bb5
  40d0d0:	pop    ss
  40d0d1:	xor    esp,DWORD PTR [esi+0x5e853217]
  40d0d7:	jnp    0x40d10c
  40d0d9:	mov    BYTE PTR [ecx+0x42a29635],0x0
  40d0e0:	out    0xa2,al
  40d0e2:	inc    edx
  40d0e3:	add    BYTE PTR [ebx],al
  40d0e5:	mov    edi,0x42a2ce05
  40d0eb:	add    al,ch
  40d0ed:	sbb    al,BYTE PTR [eax]
  40d0ef:	add    BYTE PTR [ebx],bh
  40d0f1:	enter  0x840f,0x25
  40d0f5:	ins    BYTE PTR es:[edi],dx
  40d0f6:	add    BYTE PTR [eax],al
  40d0f8:	xor    DWORD PTR ds:0x42a26e,0x42a2e6
  40d102:	push   DWORD PTR [ebp-0x14]
  40d105:	push   DWORD PTR [ebp+0x8]
  40d108:	call   0x4250bf
  40d10d:	sub    DWORD PTR ds:0x42a266,edi
  40d113:	jmp    0x40f48f
  40d118:	scas   eax,DWORD PTR es:[edi]
  40d119:	cdq    
  40d11a:	and    DWORD PTR [ebx],edx
  40d11c:	add    DWORD PTR [ebx+0x10ba9981],ecx
  40d122:	cwde   
  40d123:	int    0xfd
  40d125:	lea    ebx,[edi+0x2d]
  40d128:	ror    ah,cl
  40d12a:	add    DWORD PTR [ebx-0x7c7ca1de],0xfffffff5
  40d131:	lods   eax,DWORD PTR ds:[esi]
  40d132:	jo     0x40d0e5
  40d134:	repz fdivr QWORD PTR [eax+esi*4+0x21ab0432]
  40d13c:	mov    eax,0x3dad6120
  40d141:	outs   dx,DWORD PTR ds:[esi]
  40d142:	pop    ss
  40d143:	imul   ecx,DWORD PTR [ecx-0x219057dc],0xc0fb0dc0
  40d14d:	je     0x40d126
  40d14f:	cmp    BYTE PTR [edi-0x3f8efb71],cl
  40d155:	mov    ds:0xd52e0086,al
  40d15a:	xchg   bh,al
  40d15c:	je     0x40d187
  40d15e:	fwait
  40d15f:	jge    0x40d173
  40d161:	xchg   ebp,eax
  40d162:	push   ebx
  40d163:	push   0x287e5616
  40d168:	les    esi,FWORD PTR [edi-0x5e]
  40d16b:	jle    0x40d176
  40d16d:	inc    esp
  40d16e:	push   ebp
  40d16f:	sti    
  40d170:	add    al,0x43
  40d172:	adc    ah,ah
  40d174:	in     al,0x94
  40d176:	ja     0x40d173
  40d178:	ds push es
  40d17a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17c:	xlat   BYTE PTR ds:[ebx]
  40d17d:	pushf  
  40d17e:	xchg   ebp,eax
  40d17f:	call   0x5ef7:0x24c5737
  40d186:	mov    ecx,0xe7509971
  40d18b:	or     ah,dl
  40d18d:	call   0x4446:0xbf429061
  40d194:	lds    ebx,FWORD PTR [ebx]
  40d196:	enter  0x6c9c,0xce
  40d19a:	imul   ebx,esi,0xf35ba868
  40d1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1a1:	push   eax
  40d1a2:	add    eax,DWORD PTR [edi-0x71]
  40d1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a6:	xor    esp,DWORD PTR [edi-0x1afbb900]
  40d1ac:	ss hlt 
  40d1ae:	enter  0x587c,0xdc
  40d1b2:	sbb    eax,0xa986e751
  40d1b7:	push   esi
  40d1b8:	or     DWORD PTR [edi],esi
  40d1ba:	or     esi,esp
  40d1bc:	in     al,dx
  40d1bd:	inc    ecx
  40d1be:	out    dx,eax
  40d1bf:	sub    cl,dh
  40d1c1:	in     eax,dx
  40d1c2:	jb     0x40d1f3
  40d1c4:	loop   0x40d1d4
  40d1c6:	pop    edi
  40d1c7:	aad    0x62
  40d1c9:	inc    edx
  40d1ca:	stc    
  40d1cb:	push   ss
  40d1cc:	push   0xc553a904
  40d1d1:	jle    0x40d191
  40d1d3:	sbb    BYTE PTR [eax-0x77e4e8d5],bh
  40d1d9:	sub    eax,0xb671c941
  40d1de:	fstp   TBYTE PTR [edi+0x1ad13891]
  40d1e4:	popf   
  40d1e5:	sbb    al,0x3d
  40d1e7:	and    eax,0x4243f840
  40d1ec:	sub    ebp,ecx
  40d1ee:	dec    eax
  40d1ef:	jo     0x40d1f9
  40d1f1:	jecxz  0x40d20f
  40d1f3:	or     DWORD PTR [ebx-0xfc9c957],edx
  40d1f9:	add    al,0x97
  40d1fb:	sub    dh,al
  40d1fd:	inc    ecx
  40d1fe:	pop    eax
  40d1ff:	aad    0x20
  40d201:	add    BYTE PTR [edx-0x3e],bh
  40d204:	mov    ch,BYTE PTR [edi]
  40d206:	and    BYTE PTR [eax],0x1d
  40d209:	mov    ebp,DWORD PTR [ebx-0x55dd4cd0]
  40d20f:	call   FWORD PTR [esi-0x6f]
  40d212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d213:	jnp    0x40d1c7
  40d215:	cli    
  40d216:	imul   ebp,eax,0xffffffaa
  40d219:	jg     0x40d27c
  40d21b:	sbb    bl,dl
  40d21d:	arpl   WORD PTR [esi],sp
  40d21f:	imul   ebx,DWORD PTR [edx],0xdd3b135c
  40d225:	out    dx,al
  40d226:	push   ecx
  40d227:	retf   
  40d228:	push   ebx
  40d229:	test   DWORD PTR [eax],0x1bf124b3
  40d22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d230:	je     0x40d22b
  40d232:	pop    ebp
  40d233:	jle    0x40d277
  40d235:	ret    
  40d236:	(bad)  
  40d237:	ss sbb bl,bl
  40d23a:	mov    DWORD PTR [ecx-0x54],edi
  40d23d:	fimul  DWORD PTR [ecx+0x4aaac234]
  40d243:	or     ah,BYTE PTR [eax]
  40d245:	and    eax,0xcad590d2
  40d24a:	(bad)  
  40d24b:	jl     0x40d23e
  40d24d:	outs   dx,DWORD PTR ds:[esi]
  40d24e:	imul   ebx,DWORD PTR [eax+ebx*4],0x76
  40d252:	mov    ecx,0x3f328511
  40d257:	into   
  40d258:	icebp  
  40d259:	mov    edi,0x74e59660
  40d25e:	leave  
  40d25f:	test   DWORD PTR [eax],esi
  40d261:	push   edx
  40d262:	lock mov edi,0x64117ed9
  40d268:	inc    ebx
  40d269:	sub    eax,0x771b1e5d
  40d26e:	or     al,0x7a
  40d270:	mov    ebp,0xcfc27a4f
  40d275:	pop    esp
  40d276:	mov    esi,0x92fac4a
  40d27b:	mov    ebx,esp
  40d27d:	push   esi
  40d27e:	mov    eax,DWORD PTR [esi-0x58]
  40d281:	jmp    0x1b2a060d
  40d286:	dec    ebp
  40d287:	mov    dl,0x4
  40d289:	imul   esi,DWORD PTR [edi],0xffffffd8
  40d28c:	mov    esi,0x877f3739
  40d291:	jle    0x40d271
  40d293:	sub    al,BYTE PTR [esi+ebp*8-0x1359ba72]
  40d29a:	or     ebp,DWORD PTR [edx+0x71954849]
  40d2a0:	xor    eax,0xdd9c128c
  40d2a5:	idiv   al
  40d2a7:	(bad)  
  40d2a8:	dec    ebp
  40d2a9:	test   BYTE PTR ds:0xd54eda95,bh
  40d2af:	mov    edx,0xaaead6b6
  40d2b4:	inc    esi
  40d2b5:	jge    0x40d268
  40d2b7:	(bad)  
  40d2b8:	mov    esi,0x45fa4ec7
  40d2bd:	push   ss
  40d2be:	mov    edi,0x2f820a7f
  40d2c3:	add    al,0x1f
  40d2c5:	fwait
  40d2c6:	ins    BYTE PTR es:[edi],dx
  40d2c7:	mov    BYTE PTR [ebp-0x4a60affc],bh
  40d2cd:	jmp    0x3b4c:0xbe820ef3
  40d2d4:	and    esi,DWORD PTR [edi-0x64c002a]
  40d2da:	loopne 0x40d349
  40d2dc:	jecxz  0x40d261
  40d2de:	lods   al,BYTE PTR ds:[esi]
  40d2df:	sub    eax,0xffe46580
  40d2e4:	test   al,0xa6
  40d2e6:	push   ss
  40d2e7:	fistp  DWORD PTR [edi+0x61]
  40d2ea:	pop    esi
  40d2eb:	fiadd  WORD PTR [ebx+0x5a6b72c1]
  40d2f1:	out    0xdb,al
  40d2f3:	adc    esi,esp
  40d2f5:	sub    DWORD PTR [eax-0x6264c928],edx
  40d2fb:	test   eax,0x298d53cf
  40d300:	mov    WORD PTR [edi+0x24],fs
  40d303:	push   eax
  40d304:	fbstp  TBYTE PTR [ecx+0x15]
  40d307:	inc    esi
  40d308:	scas   eax,DWORD PTR es:[edi]
  40d309:	retf   
  40d30a:	in     al,dx
  40d30b:	cmp    eax,0xa79db055
  40d310:	out    dx,eax
  40d311:	scas   al,BYTE PTR es:[edi]
  40d312:	sbb    dh,BYTE PTR [ebp-0x2f51f564]
  40d318:	(bad)  cs:[edi-0x1c]
  40d31c:	imul   eax,DWORD PTR ds:0x46ebdb16,0x8
  40d323:	mov    edi,?
  40d325:	mov    esi,0x747a0b61
  40d32a:	mov    al,0x69
  40d32c:	cmp    ecx,edx
  40d32e:	jns    0x40d2ec
  40d330:	stos   DWORD PTR es:[edi],eax
  40d331:	fisub  WORD PTR [esi]
  40d333:	in     al,0x42
  40d335:	out    dx,al
  40d336:	mov    ds:0xb1675c64,al
  40d33b:	adc    eax,0xbc39b542
  40d340:	in     eax,0xc9
  40d342:	leave  
  40d343:	push   ebx
  40d344:	dec    esi
  40d345:	call   0xa43a89c0
  40d34a:	add    eax,0x8b0bb37d
  40d34f:	test   esp,ebp
  40d351:	or     BYTE PTR [ecx+0x7b],bh
  40d354:	add    BYTE PTR [ebx+0x57ef65d9],0x29
  40d35b:	call   0xb9579a90
  40d360:	xchg   esi,eax
  40d361:	xchg   ebp,eax
  40d362:	adc    eax,0xc5a1e90a
  40d367:	sub    DWORD PTR [eax-0x7e],eax
  40d36a:	cmp    bh,BYTE PTR [edx+0x19087561]
  40d370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d371:	movsx  ecx,cl
  40d374:	lock in al,0x9b
  40d377:	loope  0x40d351
  40d379:	jns    0x40d3a3
  40d37b:	lds    esp,FWORD PTR [eax]
  40d37d:	jmp    FWORD PTR [eax+0x3fc3d79]
  40d383:	loop   0x40d36d
  40d385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d386:	out    0xab,al
  40d388:	icebp  
  40d389:	ror    DWORD PTR [ebp-0x49],cl
  40d38c:	mov    ebx,0xc882a08a
  40d391:	nop
  40d392:	(bad)  
  40d393:	int    0xf5
  40d395:	jl     0x40d3ec
  40d397:	adc    eax,0xe4475b5f
  40d39c:	push   ss
  40d39d:	lahf   
  40d39e:	or     BYTE PTR [edx+0x21],ah
  40d3a1:	jns    0x40d3bd
  40d3a3:	pop    es
  40d3a4:	mov    ebx,0x72a5168e
  40d3a9:	or     eax,0x87534814
  40d3ae:	fmul   QWORD PTR [ebx]
  40d3b0:	rol    BYTE PTR [esi],1
  40d3b2:	outs   dx,DWORD PTR ds:[esi]
  40d3b3:	pop    es
  40d3b4:	jnp    0x40d41a
  40d3b6:	cmp    DWORD PTR [esi],eax
  40d3b8:	inc    ebx
  40d3b9:	add    ecx,DWORD PTR [edi]
  40d3bb:	push   ebp
  40d3bc:	(bad)  
  40d3bd:	jp     0x40d3d3
  40d3bf:	inc    esi
  40d3c0:	dec    eax
  40d3c1:	and    BYTE PTR [eax],cl
  40d3c3:	cmp    dl,BYTE PTR [ebx]
  40d3c5:	imul   eax,DWORD PTR [ebp+0x6362373],0xffffff90
  40d3cc:	lods   al,BYTE PTR ds:[esi]
  40d3cd:	add    BYTE PTR es:[eax-0x59],al
  40d3d1:	xor    al,0xef
  40d3d3:	stc    
  40d3d4:	fcomp  DWORD PTR [esi+ebp*2-0x39]
  40d3d8:	lahf   
  40d3d9:	mov    bh,0xd8
  40d3db:	enter  0x93b3,0x0
  40d3df:	jl     0x40d43f
  40d3e1:	fstp   TBYTE PTR [ebx-0xc]
  40d3e4:	imul   ecx,DWORD PTR [ecx+0x2],0xd4961040
  40d3eb:	xlat   BYTE PTR ds:[ebx]
  40d3ec:	adc    al,0xc1
  40d3ee:	in     al,dx
  40d3ef:	fcomp  QWORD PTR [eax-0x1a]
  40d3f2:	leave  
  40d3f3:	xor    edi,esp
  40d3f5:	fld    QWORD PTR [ebx+0x2438a17a]
  40d3fb:	push   edi
  40d3fc:	ins    DWORD PTR es:[edi],dx
  40d3fd:	mov    ebx,0x4f590153
  40d402:	clc    
  40d403:	dec    DWORD PTR [eax+0x79]
  40d406:	dec    eax
  40d407:	nop
  40d408:	ss and eax,0x3f71201d
  40d40e:	xor    edi,DWORD PTR ds:0x49dd6641
  40d414:	bound  edi,QWORD PTR [edi+0x20d08555]
  40d41a:	mov    esp,DWORD PTR [ecx+0x48df59cb]
  40d420:	pop    esp
  40d421:	ins    DWORD PTR es:[edi],dx
  40d422:	pavgw  mm5,QWORD PTR [ecx-0xf83d61a]
  40d429:	jp     0x40d41e
  40d42b:	pop    es
  40d42c:	leave  
  40d42d:	xor    ah,BYTE PTR gs:[edx]
  40d430:	test   DWORD PTR [edx-0x2f],esp
  40d433:	or     ebp,ebp
  40d435:	nop
  40d436:	aas    
  40d437:	xchg   esi,eax
  40d438:	test   cl,ch
  40d43a:	or     DWORD PTR [edx-0x60],ecx
  40d43d:	xchg   edx,eax
  40d43e:	daa    
  40d43f:	inc    edi
  40d440:	in     al,dx
  40d441:	mov    al,ds:0x5229b234
  40d446:	aam    0xda
  40d448:	fld    DWORD PTR [edx]
  40d44a:	pop    ds
  40d44b:	add    ebx,ebp
  40d44d:	xchg   BYTE PTR [ebp-0x355bd3b3],dl
  40d453:	cmp    BYTE PTR [eax],0x11
  40d456:	cmp    bh,BYTE PTR ds:0x11d3e2eb
  40d45c:	rcr    BYTE PTR [edx-0x7c9c53f6],cl
  40d462:	(bad)  
  40d463:	dec    eax
  40d464:	pop    es
  40d465:	(bad)  
  40d467:	int3   
  40d468:	sub    eax,0x51de9910
  40d46d:	loope  0x40d4c3
  40d46f:	and    DWORD PTR [ecx],ebx
  40d471:	pop    eax
  40d472:	mov    al,BYTE PTR [esi+edi*8+0x1fb54490]
  40d479:	addr16 icebp 
  40d47b:	cwde   
  40d47c:	dec    esp
  40d47d:	cli    
  40d47e:	in     al,0xe8
  40d480:	clc    
  40d481:	inc    edx
  40d482:	push   ebx
  40d483:	pop    ss
  40d484:	data16 stc 
  40d486:	push   es
  40d487:	mov    edx,0x39c81b2a
  40d48c:	lods   al,BYTE PTR ds:[esi]
  40d48d:	mov    al,0x63
  40d48f:	pop    edi
  40d490:	inc    eax
  40d491:	lahf   
  40d492:	inc    esi
  40d493:	add    edi,DWORD PTR [bp+di]
  40d496:	setns  BYTE PTR [ebx-0x10]
  40d49a:	and    BYTE PTR [ebx-0x41],cl
  40d49d:	push   esi
  40d49e:	es ins DWORD PTR es:[edi],dx
  40d4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4a1:	int3   
  40d4a2:	call   0xbe6699d9
  40d4a7:	xor    eax,0x2fea3e8f
  40d4ac:	sub    DWORD PTR [eax-0x10716344],0xffffff94
  40d4b3:	sti    
  40d4b4:	aas    
  40d4b5:	push   esi
  40d4b6:	pop    ebx
  40d4b7:	scas   eax,DWORD PTR es:[edi]
  40d4b8:	test   BYTE PTR [eax],0xd1
  40d4bb:	add    edx,DWORD PTR [edi]
  40d4bd:	jo     0x40d47c
  40d4bf:	fs ret 0xca15
  40d4c3:	xor    eax,0xdf00a0a9
  40d4c8:	icebp  
  40d4c9:	mov    WORD PTR [ebp-0x10],?
  40d4cc:	add    al,0x47
  40d4ce:	adc    ah,BYTE PTR [ebp-0x14]
  40d4d1:	jmp    0x9f10:0xe067d46c
  40d4d8:	test   BYTE PTR [ebp-0x20b54392],ch
  40d4de:	and    ebx,0x3d
  40d4e1:	cs push es
  40d4e3:	jmp    0x2fb1:0x45fda90a
  40d4ea:	ficomp WORD PTR [esi-0x12]
  40d4ed:	(bad)  
  40d4ee:	push   edi
  40d4ef:	mov    ecx,0xb7b31bca
  40d4f4:	shr    ebx,0xc1
  40d4f7:	int    0x96
  40d4f9:	call   FWORD PTR [edx+0x37]
  40d4fc:	xchg   BYTE PTR [eax],bh
  40d4fe:	retf   0xdc91
  40d501:	sub    BYTE PTR [ebx-0x7f],0x70
  40d505:	mov    ecx,DWORD PTR [esp+eiz*8]
  40d508:	add    edx,DWORD PTR [esi-0x7cb1a002]
  40d50e:	enter  0xdd7f,0x42
  40d512:	gs in  eax,0x17
  40d515:	mov    edi,0xfe70446a
  40d51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51b:	add    ebp,DWORD PTR [ebp+0x4f085e70]
  40d521:	adc    bh,0x20
  40d524:	cdq    
  40d525:	rcr    BYTE PTR ds:[ebp+0x41],cl
  40d529:	mov    bl,0xef
  40d52b:	ror    DWORD PTR [esi-0x39],0x3a
  40d52f:	adc    bh,dl
  40d531:	sar    BYTE PTR [si+0x60],0x2b
  40d536:	jb     0x40d4fd
  40d538:	div    DWORD PTR [ebp+edi*8-0x4]
  40d53c:	adc    eax,0x2e797a98
  40d541:	sub    DWORD PTR [esi+edi*4],ebx
  40d544:	lea    esi,[esi-0x1c13fac4]
  40d54a:	and    BYTE PTR [ebx+ebx*1],0x8
  40d54e:	imul   BYTE PTR [ecx-0x3b16d2e1]
  40d554:	sbb    ch,BYTE PTR [edx]
  40d556:	jbe    0x40d553
  40d558:	test   BYTE PTR [edx],cl
  40d55a:	pop    eax
  40d55b:	outs   dx,BYTE PTR ds:[esi]
  40d55c:	adc    DWORD PTR ds:0x8fb8e4e,edx
  40d562:	sbb    bl,bh
  40d564:	xchg   ebx,eax
  40d565:	out    0x5b,eax
  40d567:	or     al,0x63
  40d569:	and    DWORD PTR [eax-0x7e7e6237],ecx
  40d56f:	mov    bh,BYTE PTR [edx]
  40d571:	jne    0x40d555
  40d573:	pop    esi
  40d574:	sub    BYTE PTR [ebx],cl
  40d576:	xchg   edi,eax
  40d577:	jnp    0x40d516
  40d579:	inc    edx
  40d57a:	xchg   esp,eax
  40d57b:	push   es
  40d57c:	sub    al,0x12
  40d57e:	rcl    DWORD PTR [eax],cl
  40d580:	jl     0x40d5c5
  40d582:	aaa    
  40d583:	pop    edx
  40d584:	inc    eax
  40d585:	in     eax,dx
  40d586:	add    eax,0x2d6b4a32
  40d58b:	in     eax,0x74
  40d58d:	out    0xc1,eax
  40d58f:	pop    esi
  40d590:	popa   
  40d591:	fdivr  QWORD PTR [ebp-0x205b161d]
  40d597:	push   ss
  40d598:	lahf   
  40d599:	cmc    
  40d59a:	imul   esp,DWORD PTR [ebp+0x67],0x313b46ab
  40d5a1:	es or  al,0x70
  40d5a4:	inc    ebx
  40d5a5:	(bad)  
  40d5a6:	aas    
  40d5a7:	push   ds
  40d5a8:	add    al,0x79
  40d5aa:	std    
  40d5ab:	sub    ebp,DWORD PTR [ebp-0x56]
  40d5ae:	retf   0xf913
  40d5b1:	push   ss
  40d5b2:	mov    al,ds:0x56737f6a
  40d5b7:	jb     0x40d5a5
  40d5b9:	aad    0x25
  40d5bb:	sub    ebp,eax
  40d5bd:	or     ebx,DWORD PTR [esi-0x47b7cc8c]
  40d5c3:	adc    al,0x5c
  40d5c5:	mov    eax,0x74706e3e
  40d5ca:	adc    al,0x1
  40d5cc:	out    0xf9,al
  40d5ce:	jo     0x40d5dd
  40d5d0:	inc    ebp
  40d5d1:	jae    0x40d581
  40d5d3:	or     eax,0x50fbf765
  40d5d8:	push   edi
  40d5d9:	shr    DWORD PTR [edx],0x12
  40d5dc:	push   ss
  40d5dd:	loope  0x40d5c6
  40d5df:	xor    al,0xee
  40d5e1:	retf   0xc9cf
  40d5e4:	int    0xb0
  40d5e6:	cs push esp
  40d5e8:	outs   dx,BYTE PTR ds:[esi]
  40d5e9:	xor    esp,DWORD PTR [ebx-0x48c05c69]
  40d5ef:	push   ebx
  40d5f0:	or     eax,0xe4f9edba
  40d5f5:	xchg   BYTE PTR [ebp+0x65dbe104],cl
  40d5fb:	aad    0x85
  40d5fd:	and    DWORD PTR [ebx-0x1fab8c92],eax
  40d603:	jl     0x40d677
  40d605:	push   0xffffffc3
  40d607:	jo     0x40d5ef
  40d609:	(bad)  
  40d60a:	and    ah,dh
  40d60c:	jne    0x40d666
  40d60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d60f:	mov    DWORD PTR [edx+0x4fa397e],ecx
  40d615:	dec    esp
  40d616:	xrelease mov BYTE PTR [eax+0x70bab417],al
  40d61d:	rcl    BYTE PTR [eax+0x6da3f77],0xfc
  40d624:	sub    BYTE PTR [edi+0x62],0xef
  40d628:	cs aas 
  40d62a:	test   DWORD PTR [ebx+eax*1-0x511d01af],ecx
  40d631:	sar    edi,1
  40d633:	cmp    eax,0xddf18ec9
  40d638:	sbb    bl,BYTE PTR [edi-0x288233ff]
  40d63e:	in     eax,dx
  40d63f:	gs sbb eax,0xbf5fa1a2
  40d645:	rcr    ch,cl
  40d647:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d649:	adc    edi,DWORD PTR [eax-0x39]
  40d64c:	shl    DWORD PTR [edi-0x5e],0x31
  40d650:	fsubr  DWORD PTR [edi]
  40d652:	int    0x1c
  40d654:	loop   0x40d6d0
  40d656:	mov    dh,BYTE PTR [eax+ebp*2]
  40d659:	loopne 0x40d68a
  40d65b:	shl    DWORD PTR [eax-0x3436802],cl
  40d661:	adc    DWORD PTR [eax-0x7f8ebed0],ecx
  40d667:	dec    edx
  40d668:	mov    ebx,0xc8d3cf42
  40d66d:	xor    BYTE PTR [esi],cl
  40d66f:	push   ebx
  40d670:	and    al,ch
  40d672:	xlat   BYTE PTR ds:[ebx]
  40d673:	jno    0x40d6c5
  40d675:	push   eax
  40d676:	mov    cl,0x58
  40d678:	ret    0x8fd5
  40d67b:	push   0xf
  40d67d:	cmp    BYTE PTR [eax+0x1b],bh
  40d680:	and    ebp,DWORD PTR [esi-0x3b]
  40d683:	popf   
  40d684:	daa    
  40d685:	mov    dh,0xe0
  40d687:	xchg   esp,eax
  40d688:	sub    eax,0x6ff5182b
  40d68d:	xchg   dl,bh
  40d68f:	inc    esi
  40d690:	loopne 0x40d635
  40d692:	inc    edi
  40d693:	jo     0x40d6a9
  40d695:	mov    bl,0xe2
  40d697:	fwait
  40d698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d69a:	cmp    ecx,ebp
  40d69c:	pop    esp
  40d69d:	cmp    DWORD PTR [ebx+0x0],ecx
  40d6a0:	or     ebx,DWORD PTR [edi+0x2514fd3b]
  40d6a6:	retf   0x1ab4
  40d6a9:	stos   DWORD PTR es:[edi],eax
  40d6aa:	xlat   BYTE PTR ds:[ebx]
  40d6ab:	jbe    0x40d6d9
  40d6ad:	push   es
  40d6ae:	cld    
  40d6af:	scas   eax,DWORD PTR es:[edi]
  40d6b0:	pop    ds
  40d6b1:	jg     0x40d6d6
  40d6b3:	mov    al,0x67
  40d6b5:	add    esp,esp
  40d6b7:	mov    ah,0x38
  40d6b9:	push   es
  40d6ba:	cmc    
  40d6bb:	sahf   
  40d6bc:	xchg   edi,eax
  40d6bd:	pop    eax
  40d6be:	stc    
  40d6bf:	push   esi
  40d6c0:	mov    bh,0xeb
  40d6c2:	cmp    dl,BYTE PTR [edx+ebx*4-0x6cf9ed4c]
  40d6c9:	call   0xb1d285bd
  40d6ce:	jle    0x40d68a
  40d6d0:	and    al,0x22
  40d6d2:	and    DWORD PTR [edi+edi*1],eax
  40d6d5:	fstp   DWORD PTR [esi]
  40d6d7:	add    edi,ebx
  40d6d9:	test   al,0x73
  40d6db:	loope  0x40d6f6
  40d6dd:	pop    ebp
  40d6de:	mov    cl,0xa6
  40d6e0:	rcl    BYTE PTR [ecx-0x7a],cl
  40d6e3:	xlat   BYTE PTR ds:[ebx]
  40d6e4:	icebp  
  40d6e5:	mov    eax,ds:0x25fc8aeb
  40d6ea:	push   ebp
  40d6eb:	xchg   ebp,eax
  40d6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ed:	pop    esi
  40d6ee:	ss loopne 0x40d76a
  40d6f1:	or     ebx,ebp
  40d6f3:	test   dh,dh
  40d6f5:	xor    eax,0x8fe4c322
  40d6fa:	mov    bl,0xc3
  40d6fc:	pusha  
  40d6fd:	sub    al,0xb4
  40d6ff:	adc    bh,BYTE PTR [esi]
  40d701:	stc    
  40d702:	cmp    eax,0x80f00ab2
  40d707:	mov    ebp,0x89888f15
  40d70c:	jno    0x40d6c1
  40d70e:	js     0x40d6f7
  40d710:	push   eax
  40d711:	xchg   esi,eax
  40d712:	lahf   
  40d713:	push   ecx
  40d714:	mov    BYTE PTR [ebx],bh
  40d716:	jb     0x40d77d
  40d718:	test   eax,0xa9c259c4
  40d71d:	cmc    
  40d71e:	fcmove st,st(5)
  40d720:	inc    edx
  40d721:	dec    ecx
  40d722:	(bad)  [edi]
  40d724:	push   edx
  40d725:	aaa    
  40d726:	cwde   
  40d727:	data16 jecxz 0x40d6da
  40d72a:	xor    eax,0x7c4573b1
  40d72f:	fstp   TBYTE PTR [eax-0x71]
  40d732:	push   esi
  40d733:	add    al,0xd1
  40d735:	pop    ebx
  40d736:	fbld   TBYTE PTR [edx]
  40d738:	daa    
  40d739:	call   0xb101:0xf7a2c55d
  40d740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d742:	inc    eax
  40d743:	xlat   BYTE PTR ds:[ebx]
  40d744:	sahf   
  40d745:	lahf   
  40d746:	push   0x408d5e30
  40d74b:	jmp    0x40d6d1
  40d74d:	xchg   edx,eax
  40d74e:	inc    ecx
  40d74f:	jle    0x40d6fe
  40d751:	jmp    0x40d7b9
  40d753:	daa    
  40d754:	loop   0x40d734
  40d756:	jno    0x40d7b4
  40d758:	enter  0xb28e,0xb5
  40d75c:	iret   
  40d75d:	dec    esi
  40d75e:	mov    eax,0x59fe8795
  40d763:	fldenv ds:0xf6bd9bd7
  40d769:	ret    
  40d76a:	out    0xdf,al
  40d76c:	test   BYTE PTR [esi+0x4d],cl
  40d76f:	arpl   WORD PTR [edi-0x34],di
  40d772:	fsub   DWORD PTR fs:[ecx-0x5f]
  40d776:	xchg   ebx,eax
  40d777:	es ins DWORD PTR es:[edi],dx
  40d779:	xchg   ebx,eax
  40d77a:	ins    BYTE PTR es:[edi],dx
  40d77b:	fs pop ebp
  40d77d:	push   cs
  40d77e:	sub    DWORD PTR [edi+0x6cf8a77b],ebx
  40d784:	popf   
  40d785:	jmp    0xc6ca:0x7ce5887
  40d78c:	mov    esi,0x70cfea46
  40d791:	sar    DWORD PTR [edi],0xb4
  40d794:	stos   DWORD PTR es:[edi],eax
  40d795:	xchg   edx,eax
  40d796:	jl     0x40d77d
  40d798:	mov    al,0x14
  40d79a:	cmp    eax,DWORD PTR [edx]
  40d79c:	outs   dx,DWORD PTR ds:[esi]
  40d79d:	(bad)  
  40d79e:	push   ebx
  40d79f:	xchg   esi,eax
  40d7a0:	jg     0x40d81f
  40d7a2:	or     BYTE PTR [edi+edx*2-0x7415faa4],0x36
  40d7aa:	call   0x283c3583
  40d7af:	cmp    DWORD PTR [ebp-0x76],ebp
  40d7b2:	push   ecx
  40d7b3:	ret    
  40d7b4:	lods   al,BYTE PTR ds:[esi]
  40d7b5:	sbb    ebx,DWORD PTR [ebp-0x418f3142]
  40d7bb:	xchg   edx,eax
  40d7bc:	push   edi
  40d7bd:	popa   
  40d7be:	call   0x37302882
  40d7c3:	lahf   
  40d7c4:	rcr    ah,0x4d
  40d7c7:	inc    ecx
  40d7c8:	cli    
  40d7c9:	inc    edi
  40d7ca:	jle    0x976a2c37
  40d7d0:	mov    ch,0xec
  40d7d2:	sbb    edi,DWORD PTR [edx-0x570b0544]
  40d7d8:	pop    ss
  40d7d9:	jecxz  0x40d7cc
  40d7db:	fcomp  st(5)
  40d7dd:	adc    al,0x96
  40d7df:	mov    esi,0xba001150
  40d7e4:	xor    ebx,DWORD PTR [edx+0x2db3ab27]
  40d7ea:	mov    edx,0x6e20c858
  40d7ef:	or     al,0xbf
  40d7f1:	loope  0x40d858
  40d7f3:	loope  0x40d866
  40d7f5:	out    dx,al
  40d7f6:	and    eax,0xda20c6b4
  40d7fb:	or     eax,0x1d053f7d
  40d800:	and    BYTE PTR [edx+0x1788668a],bh
  40d806:	push   edi
  40d807:	imul   esi,DWORD PTR [edx-0x2],0x53
  40d80b:	shl    BYTE PTR [eax+ebx*1],cl
  40d80e:	or     esp,esp
  40d810:	cmp    DWORD PTR [esi+0x1c],eax
  40d813:	dec    edi
  40d814:	mov    edx,0x47fc5a12
  40d819:	sti    
  40d81a:	(bad)  
  40d81b:	pop    ss
  40d81c:	push   esp
  40d81d:	jmp    0x2e842369
  40d822:	xor    DWORD PTR [edx-0xb9ec7a],esp
  40d828:	mov    cl,0x0
  40d82a:	stc    
  40d82b:	mov    ds:0xd9df80e7,eax
  40d830:	or     DWORD PTR [ebx],eax
  40d832:	into   
  40d833:	aam    0x74
  40d835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d836:	mov    ebp,DWORD PTR [edx]
  40d838:	jns    0x40d800
  40d83a:	loope  0x40d899
  40d83c:	push   ds
  40d83d:	call   0xe70cad30
  40d842:	mov    ecx,0x352e5b46
  40d847:	loop   0x40d8a1
  40d849:	dec    ecx
  40d84a:	xor    cl,BYTE PTR [edx-0x26fc8de6]
  40d850:	sti    
  40d851:	cdq    
  40d852:	(bad)  
  40d853:	shr    dh,1
  40d855:	ret    
  40d856:	fistp  QWORD PTR [ebx+ebp*4+0x2c]
  40d85a:	xor    bh,BYTE PTR [ecx]
  40d85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d85d:	scas   al,BYTE PTR es:[edi]
  40d85e:	and    eax,0xbbafbe1c
  40d863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d864:	sub    DWORD PTR [eax+0x60e677b8],0x16
  40d86b:	xchg   BYTE PTR [edx+ebx*8-0x3f407a83],ah
  40d872:	jp     0x40d897
  40d874:	add    al,0xc7
  40d876:	retf   0xfc31
  40d879:	mov    BYTE PTR [edx-0x76733d1a],dl
  40d87f:	mov    ebp,0x8e997518
  40d884:	adc    edx,ebp
  40d886:	arpl   WORD PTR [edi-0x3f8b5e72],si
  40d88c:	xor    BYTE PTR [ebx+0x58702538],ah
  40d892:	aam    0x7a
  40d894:	cmp    al,0xed
  40d896:	addr16 sahf 
  40d898:	iret   
  40d899:	sbb    al,0x99
  40d89b:	pop    ebx
  40d89c:	push   esp
  40d89d:	std    
  40d89e:	fadd   DWORD PTR [ebx-0x1ef9c9cf]
  40d8a4:	xchg   esi,eax
  40d8a5:	enter  0x598d,0xfa
  40d8a9:	pop    edi
  40d8aa:	jge    0x40d8a7
  40d8ac:	imul   esp,DWORD PTR [eax+0x72],0x6898f3e6
  40d8b3:	add    al,0x14
  40d8b5:	and    eax,0xee7ed7c7
  40d8ba:	out    dx,al
  40d8bb:	test   eax,0x24637a15
  40d8c0:	adc    al,0x9f
  40d8c2:	jecxz  0x40d8c6
  40d8c4:	xor    cl,BYTE PTR [esi-0x32]
  40d8c7:	scas   al,BYTE PTR es:[edi]
  40d8c8:	push   esi
  40d8c9:	push   es
  40d8ca:	icebp  
  40d8cb:	add    ch,bh
  40d8cd:	fcom   QWORD PTR [ebp+0x9]
  40d8d0:	sub    bl,BYTE PTR [esi+0x3c4500b9]
  40d8d6:	jb     0x40d8a1
  40d8d8:	fsub   QWORD PTR [edi]
  40d8da:	push   ebp
  40d8db:	mov    bh,BYTE PTR [edx]
  40d8dd:	dec    esp
  40d8de:	add    BYTE PTR [edi+0x78240a51],ch
  40d8e4:	inc    DWORD PTR [edx]
  40d8e6:	hlt    
  40d8e7:	xor    BYTE PTR [ebx-0x2f],ch
  40d8ea:	mov    ds:0x46b1513e,eax
  40d8ef:	or     ah,ah
  40d8f1:	pop    ebx
  40d8f2:	xor    esi,DWORD PTR [ebp+0x753d1105]
  40d8f8:	push   esi
  40d8f9:	outs   dx,DWORD PTR ds:[esi]
  40d8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8fb:	jl     0x40d8ab
  40d8fd:	call   0xc39cfd7f
  40d902:	in     eax,0xf2
  40d904:	pusha  
  40d905:	or     eax,0x4e473ed3
  40d90a:	xchg   ebx,edi
  40d90c:	daa    
  40d90d:	ret    
  40d90e:	mov    bh,cl
  40d910:	push   ebp
  40d911:	mov    bl,0x94
  40d913:	inc    ebx
  40d914:	lds    edx,FWORD PTR [esp+ecx*1+0x56]
  40d918:	mov    WORD PTR [ebx+0x56dc3311],es
  40d91e:	mov    ebp,ecx
  40d920:	shl    BYTE PTR [ebp-0x25f5e428],1
  40d926:	adc    al,BYTE PTR ds:0x5882a5f1
  40d92c:	in     al,dx
  40d92d:	jp     0x40d961
  40d92f:	push   cs
  40d930:	sub    BYTE PTR [ecx-0x56],dl
  40d933:	sub    al,BYTE PTR [eax+eiz*1+0x43e6c208]
  40d93a:	dec    edx
  40d93b:	adc    al,0x4f
  40d93d:	push   0x1d
  40d93f:	ja     0x40d9a7
  40d941:	cwde   
  40d942:	mov    esp,esi
  40d944:	std    
  40d945:	and    BYTE PTR [ebp-0x31516b53],ch
  40d94b:	inc    edx
  40d94c:	sub    ah,dl
  40d94e:	jae    0x40d900
  40d950:	mov    eax,0x82e171bb
  40d955:	mov    dl,0xb6
  40d957:	pop    edi
  40d958:	aas    
  40d959:	dec    ebx
  40d95a:	add    edx,esi
  40d95c:	ins    BYTE PTR es:[edi],dx
  40d95d:	stos   BYTE PTR es:[edi],al
  40d95e:	dec    ebx
  40d95f:	pop    es
  40d960:	gs ret 
  40d962:	and    DWORD PTR [edi],esi
  40d964:	xchg   ebp,eax
  40d965:	xchg   ebx,eax
  40d966:	dec    ecx
  40d967:	xchg   edx,eax
  40d968:	xchg   DWORD PTR [edx],ecx
  40d96a:	jmp    0x9429:0xad8efa30
  40d971:	lea    ebp,[ecx-0x45]
  40d974:	std    
  40d975:	imul   BYTE PTR [ebp+0x4bfd765a]
  40d97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d97c:	dec    ebx
  40d97d:	fsub   DWORD PTR [edi]
  40d97f:	lods   al,BYTE PTR ds:[esi]
  40d980:	push   0x17
  40d982:	xchg   edi,eax
  40d983:	jnp    0x40d9df
  40d985:	lahf   
  40d986:	and    DWORD PTR [ecx-0x73],esi
  40d989:	mov    edx,0xfa23a68c
  40d98e:	and    dh,bl
  40d990:	cmp    eax,0x7c838b70
  40d995:	scas   eax,DWORD PTR es:[edi]
  40d996:	mov    al,ds:0xecd56845
  40d99b:	pop    esi
  40d99c:	pop    ss
  40d99d:	and    eax,0xf63a0bc3
  40d9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a3:	das    
  40d9a4:	es std 
  40d9a6:	sahf   
  40d9a7:	mov    edx,0xc97013e7
  40d9ac:	pop    ecx
  40d9ad:	push   edx
  40d9ae:	fs ja  0x40da28
  40d9b1:	stos   DWORD PTR es:[edi],eax
  40d9b2:	push   esp
  40d9b3:	pop    ebx
  40d9b4:	scas   al,BYTE PTR es:[edi]
  40d9b5:	aad    0xf0
  40d9b7:	mov    al,0xca
  40d9b9:	push   ebp
  40d9ba:	je     0x40d995
  40d9bc:	ins    BYTE PTR es:[edi],dx
  40d9bd:	dec    ecx
  40d9be:	popf   
  40d9bf:	pop    esp
  40d9c0:	push   esp
  40d9c1:	pop    ecx
  40d9c2:	adc    BYTE PTR [ebx+0x168b750],0xe9
  40d9c9:	pop    ebp
  40d9ca:	dec    esp
  40d9cb:	out    dx,eax
  40d9cc:	cmpxchg DWORD PTR [edx-0x61],ebx
  40d9d0:	data16 (bad) 
  40d9d2:	sbb    al,0x53
  40d9d4:	pop    ecx
  40d9d5:	or     DWORD PTR [ebx-0x2b],ebp
  40d9d8:	push   esi
  40d9d9:	or     al,0x55
  40d9db:	inc    ecx
  40d9dc:	mov    ch,0xaa
  40d9de:	jmp    0x40da5e
  40d9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e2:	push   ecx
  40d9e3:	xchg   cl,cl
  40d9e5:	mov    al,0xce
  40d9e7:	hlt    
  40d9e8:	ss xor al,0xaa
  40d9eb:	adc    BYTE PTR ss:[edx],cl
  40d9ee:	ins    BYTE PTR es:[edi],dx
  40d9ef:	and    BYTE PTR [ebp-0x1c],0x8
  40d9f3:	lods   eax,DWORD PTR ds:[esi]
  40d9f4:	mov    bl,0x49
  40d9f6:	popf   
  40d9f7:	int    0xda
  40d9f9:	mov    ebx,0x5c3d7fe5
  40d9fe:	es test al,0xba
  40da01:	push   edi
  40da02:	xchg   DWORD PTR [ebx+0x78966272],ebp
  40da08:	sar    DWORD PTR [ecx],cl
  40da0a:	jae    0x40d9a9
  40da0c:	fcmovu st,st(2)
  40da0e:	div    al
  40da10:	int3   
  40da11:	ficomp WORD PTR [edx+ebx*2-0x25]
  40da15:	addr16 loopne 0x40da7d
  40da18:	dec    edi
  40da19:	dec    esp
  40da1a:	adc    al,0x1c
  40da1c:	sbb    eax,0x2fa0f685
  40da21:	and    BYTE PTR ds:[esi+0x17748431],al
  40da28:	nop
  40da29:	out    dx,eax
  40da2a:	mov    al,ds:0x5a58f869
  40da2f:	add    ah,BYTE PTR [edx+eiz*2]
  40da32:	sub    dh,BYTE PTR [eax+0x43ff75bd]
  40da38:	mov    BYTE PTR [ebp-0x78],dh
  40da3b:	or     DWORD PTR [esi],0x67d642f2
  40da41:	push   ebp
  40da42:	jo     0x40d9e3
  40da44:	xchg   esi,eax
  40da45:	pop    eax
  40da46:	popa   
  40da47:	clc    
  40da48:	or     al,0x50
  40da4a:	xchg   ecx,eax
  40da4b:	push   ecx
  40da4c:	dec    edx
  40da4d:	je     0x40da2f
  40da4f:	aaa    
  40da50:	mov    cl,0x5f
  40da52:	rcl    DWORD PTR [edi+0x7d],cl
  40da55:	mov    esi,0xe8b79b0d
  40da5a:	mov    edi,0x52e499f8
  40da5f:	pop    es
  40da60:	loop   0x40da82
  40da62:	xor    eax,DWORD PTR [edi+0x47]
  40da65:	dec    dh
  40da67:	popa   
  40da68:	sbb    eax,0xc5d3575d
  40da6d:	adc    edx,ebx
  40da6f:	arpl   WORD PTR [ebp-0x684f069e],sp
  40da75:	mov    BYTE PTR [ebp+0x5af0da4f],0xe5
  40da7c:	ds mov al,0xed
  40da7f:	adc    BYTE PTR ds:[esi+0x2d],0x4a
  40da84:	arpl   WORD PTR [edx+0x77acac36],bx
  40da8a:	cs add al,0x4e
  40da8d:	call   0x1f1b:0x5a72c9c4
  40da94:	push   cs
  40da95:	inc    esp
  40da96:	es jge 0x40db0e
  40da99:	push   edx
  40da9a:	in     al,dx
  40da9b:	mov    ch,0xed
  40da9d:	xchg   esi,eax
  40da9e:	pop    edi
  40da9f:	jmp    0x31fc:0xb3e77ba6
  40daa6:	jae    0x40da39
  40daa8:	xchg   BYTE PTR [eax],bl
  40daaa:	xchg   DWORD PTR [ebx+0x6dff89a1],ebp
  40dab0:	lods   al,BYTE PTR ds:[esi]
  40dab1:	iret   
  40dab2:	mov    esi,0x868b95a1
  40dab7:	sub    eax,0xef52eea
  40dabc:	jecxz  0x40db03
  40dabe:	das    
  40dabf:	mov    edi,0xb6b2fbdd
  40dac4:	push   es
  40dac5:	call   0xd9e248e1
  40daca:	add    edx,DWORD PTR [edi+0x7df165e4]
  40dad0:	(bad)  
  40dad1:	loop   0x40db14
  40dad3:	dec    esi
  40dad4:	loopne 0x40dad3
  40dad6:	sbb    BYTE PTR [ebx+edx*4-0x7bcd84d7],ah
  40dadd:	and    eax,0xf798c8d7
  40dae2:	aas    
  40dae3:	pop    esi
  40dae4:	lods   eax,DWORD PTR ds:[esi]
  40dae5:	push   ebp
  40dae6:	data16 jmp 0x40dae2
  40dae9:	je     0x40db31
  40daeb:	pop    eax
  40daec:	jno    0x40dabc
  40daee:	or     DWORD PTR [ecx],ecx
  40daf0:	mov    ch,0xb2
  40daf2:	ss inc cx
  40daf5:	mov    ecx,0x8b29022b
  40dafa:	clc    
  40dafb:	lgs    ecx,FWORD PTR [ebp-0x1b]
  40daff:	cmp    DWORD PTR [edx+0x1d162eba],ecx
  40db05:	jmp    0x40db1f
  40db07:	mov    edi,DWORD PTR [eax-0x74]
  40db0a:	mov    ah,0xdd
  40db0c:	hlt    
  40db0d:	test   dh,cl
  40db0f:	or     al,BYTE PTR [esi*8+0x15d07b16]
  40db16:	pop    edi
  40db17:	(bad)  
  40db18:	mov    eax,0x4e8dedc2
  40db1d:	or     DWORD PTR ds:0x65ec7bc1,edx
  40db23:	mov    al,ds:0xc182292f
  40db28:	in     al,dx
  40db29:	fmul   QWORD PTR [ebx+0x4136bdd6]
  40db2f:	imul   edx,DWORD PTR [ebx+0x67],0x9c2df638
  40db36:	mov    bl,0x66
  40db38:	pop    ecx
  40db39:	push   esi
  40db3a:	pop    ds
  40db3b:	inc    esp
  40db3c:	and    DWORD PTR ds:0x4cf9888e,edi
  40db42:	xchg   esi,eax
  40db43:	pop    edx
  40db44:	fsubp  st(7),st
  40db46:	add    dl,al
  40db48:	xchg   edx,eax
  40db49:	test   DWORD PTR [eax-0x6c7c72f7],0x445d1090
  40db53:	xor    ch,BYTE PTR [eax+eiz*4+0xca4917a]
  40db5a:	mov    esp,0x9c7faa00
  40db5f:	stos   BYTE PTR es:[edi],al
  40db60:	sub    DWORD PTR ds:0x197c4f55,0x7a9af7ef
  40db6a:	xor    al,0x7
  40db6c:	das    
  40db6d:	(bad)  [esi+0x6d]
  40db70:	jecxz  0x40dbd0
  40db72:	push   ds
  40db73:	xor    eax,0x2231f9ed
  40db78:	jbe    0x40db50
  40db7a:	or     edx,DWORD PTR ds:0x740bda09
  40db80:	jno    0x40db06
  40db82:	es loopne 0x40dbfc
  40db85:	dec    eax
  40db86:	push   edi
  40db87:	inc    ebp
  40db88:	int3   
  40db89:	sub    dh,ah
  40db8b:	dec    esi
  40db8c:	push   0xffffffe4
  40db8e:	xor    eax,DWORD PTR [ecx-0x321049]
  40db94:	and    dl,ch
  40db96:	or     edi,DWORD PTR [ebx+0x477dd09c]
  40db9c:	sub    al,ch
  40db9e:	jne    0x40db26
  40dba0:	(bad)  
  40dba1:	adc    DWORD PTR [edi-0x4ed67a55],0xffffffa6
  40dba8:	dec    esp
  40dba9:	addr16 push es
  40dbab:	and    cl,0x73
  40dbae:	outs   dx,DWORD PTR ds:[esi]
  40dbaf:	pusha  
  40dbb0:	(bad)  
  40dbb1:	jb     0x40db86
  40dbb3:	popa   
  40dbb4:	or     al,0x9d
  40dbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb7:	jp     0x40dbec
  40dbb9:	(bad)  
  40dbba:	scas   eax,DWORD PTR es:[edi]
  40dbbb:	loope  0x40dba3
  40dbbd:	popa   
  40dbbe:	ins    BYTE PTR es:[edi],dx
  40dbbf:	xchg   edx,eax
  40dbc0:	imul   ebp,ecx,0xa5ba8d6a
  40dbc6:	(bad)  
  40dbc7:	call   0x983eeff5
  40dbcc:	add    DWORD PTR [edx-0x35],ebp
  40dbcf:	push   es
  40dbd0:	mov    dh,0x32
  40dbd2:	add    BYTE PTR [edx+edi*2-0x19a0ce8b],al
  40dbd9:	mov    cl,0x31
  40dbdb:	mov    WORD PTR [edx-0x13],es
  40dbde:	jmp    0x40dbcd
  40dbe0:	ds pop es
  40dbe2:	fcmovnu st,st(6)
  40dbe4:	sahf   
  40dbe5:	adc    DWORD PTR [esi],ebp
  40dbe7:	aad    0xe9
  40dbe9:	mov    ecx,0x8ec34c8b
  40dbee:	int3   
  40dbef:	imul   ebx,DWORD PTR [ebx-0x3cd3ef00],0x84fe8305
  40dbf9:	and    BYTE PTR [ecx],dl
  40dbfb:	jle    0x40dc00
  40dbfd:	adc    cl,al
  40dbff:	fistp  WORD PTR [edi+esi*2-0x6b]
  40dc03:	(bad)  
  40dc04:	outs   dx,DWORD PTR ds:[esi]
  40dc05:	jae    0x40dbc8
  40dc07:	mov    al,ds:0xeea7b122
  40dc0c:	jne    0x40dc59
  40dc0e:	inc    eax
  40dc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc10:	or     al,0x5e
  40dc12:	jl     0x40dbb4
  40dc14:	jae    0x40dc5a
  40dc16:	fwait
  40dc17:	sub    BYTE PTR [edx],0xc5
  40dc1a:	sbb    DWORD PTR [ebx-0x633f2324],edi
  40dc20:	xchg   BYTE PTR [ebx-0x57],ch
  40dc23:	pushf  
  40dc24:	mov    bl,0xa9
  40dc26:	mov    esp,DWORD PTR ds:0x76c2ec34
  40dc2c:	imul   edi,DWORD PTR [ecx-0x446088d],0x956aad22
  40dc36:	repz pop ss
  40dc38:	fisttp QWORD PTR [ebx]
  40dc3a:	cmp    ch,dh
  40dc3c:	fcomp  st(1)
  40dc3e:	das    
  40dc3f:	fadd   st,st(2)
  40dc41:	aas    
  40dc42:	imul   edx,DWORD PTR [ecx+esi*2],0xcc28e330
  40dc49:	call   0x3964:0x4798735c
  40dc50:	fidivr DWORD PTR [esi-0x12]
  40dc53:	sbb    esp,DWORD PTR [eax]
  40dc55:	jbe    0x40dc4a
  40dc57:	stos   DWORD PTR es:[edi],eax
  40dc58:	push   0xffffff99
  40dc5a:	mov    bh,0x4d
  40dc5c:	mov    edx,0x672a8ce7
  40dc61:	je     0x40dc4b
  40dc63:	sahf   
  40dc64:	jb     0x40dcbd
  40dc66:	and    BYTE PTR [ebx+0x3ea07e46],cl
  40dc6c:	pop    esp
  40dc6d:	adc    BYTE PTR [edi],ah
  40dc6f:	cmp    BYTE PTR [edi],bl
  40dc71:	dec    eax
  40dc72:	pop    ebp
  40dc73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc74:	pop    ebx
  40dc75:	stos   DWORD PTR es:[edi],eax
  40dc76:	cdq    
  40dc77:	sub    al,0x62
  40dc79:	jg     0x40dc94
  40dc7b:	rol    DWORD PTR [edi-0x7],cl
  40dc7e:	ret    
  40dc7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc80:	add    DWORD PTR [ecx+0x4d],ebp
  40dc83:	push   cs
  40dc84:	retf   0x7927
  40dc87:	and    al,BYTE PTR [ebp-0x72]
  40dc8a:	je     0x40dc76
  40dc8c:	inc    eax
  40dc8d:	shr    DWORD PTR [ebx],0x3d
  40dc90:	add    dl,ch
  40dc92:	ficom  DWORD PTR [ecx-0x54]
  40dc95:	add    BYTE PTR [eax-0x2509509a],0x21
  40dc9c:	sbb    BYTE PTR [esi-0x42],bl
  40dc9f:	sbb    DWORD PTR [edi+0x2a16f7ca],edx
  40dca5:	fist   DWORD PTR [esi-0x7e186272]
  40dcab:	pop    ds
  40dcac:	adc    al,0xde
  40dcae:	inc    ebp
  40dcaf:	push   esp
  40dcb0:	inc    eax
  40dcb1:	outs   dx,DWORD PTR ds:[esi]
  40dcb2:	jp     0x40dc5e
  40dcb4:	inc    ebp
  40dcb5:	mov    bh,0xc6
  40dcb7:	lahf   
  40dcb8:	fild   WORD PTR ds:0x47636111
  40dcbe:	adc    BYTE PTR [esi+0x77828a7f],cl
  40dcc4:	imul   edx,DWORD PTR [ebx+0x757cfc4e],0xffffffd8
  40dccb:	icebp  
  40dccc:	cs pusha 
  40dcce:	stc    
  40dccf:	or     edx,DWORD PTR [edx-0x31]
  40dcd2:	xlat   BYTE PTR ds:[ebx]
  40dcd3:	push   esi
  40dcd4:	(bad)  
  40dcd5:	mov    BYTE PTR [edi+0x34c75bcf],0xf6
  40dcdc:	div    DWORD PTR [edi-0x2727886b]
  40dce2:	and    DWORD PTR [edx+0x17a9b0a0],edx
  40dce8:	sar    DWORD PTR [edi],0x6e
  40dceb:	mov    dl,BYTE PTR [edx+0x13]
  40dcee:	jb     0x40dcb6
  40dcf0:	or     DWORD PTR [edi-0x70489d2d],esi
  40dcf6:	imul   esp,DWORD PTR [esi],0x34
  40dcf9:	push   ebx
  40dcfa:	jl     0x40dca3
  40dcfc:	mov    eax,ds:0x320fd137
  40dd01:	jo     0x40dd20
  40dd03:	and    eax,DWORD PTR [ebp+0x2e]
  40dd06:	jb     0x40dc8b
  40dd08:	in     eax,0xd1
  40dd0a:	rep stos DWORD PTR es:[edi],eax
  40dd0c:	outs   dx,DWORD PTR ds:[esi]
  40dd0d:	pop    eax
  40dd0e:	mov    esp,0x47a75ac7
  40dd13:	popa   
  40dd14:	cmc    
  40dd15:	fwait
  40dd16:	pop    edi
  40dd17:	je     0x40dc9c
  40dd19:	jmp    0x57741a84
  40dd1e:	mov    al,ds:0xbdf37ba
  40dd23:	pop    esi
  40dd24:	sbb    DWORD PTR [esi+edi*2+0x3f],eax
  40dd28:	(bad)  
  40dd29:	mov    ch,0x18
  40dd2b:	sbb    ah,BYTE PTR [eax+edi*1]
  40dd2e:	inc    ebx
  40dd2f:	mov    es,WORD PTR [esi]
  40dd31:	mov    esi,0xd70e874d
  40dd36:	fdivr  QWORD PTR [edx+eiz*1-0x20]
  40dd3a:	test   al,0x13
  40dd3c:	or     ch,BYTE PTR [ebp+0x304a06ec]
  40dd42:	cmp    eax,0x75d16f1e
  40dd47:	jl     0x40dd37
  40dd49:	add    DWORD PTR [esi-0x3684d97f],0x4d
  40dd50:	fmul   st,st(6)
  40dd52:	into   
  40dd53:	mov    esi,0xb4d611d1
  40dd58:	push   ebx
  40dd59:	das    
  40dd5a:	mov    bl,0xd9
  40dd5c:	mov    ch,0xe1
  40dd5e:	ror    ebx,1
  40dd60:	adc    BYTE PTR [esi],ah
  40dd62:	push   0xffffffc5
  40dd64:	jmp    0x184f:0x33530eaa
  40dd6b:	dec    ebp
  40dd6c:	loope  0x40ddc4
  40dd6e:	jo     0x40dd67
  40dd70:	ins    DWORD PTR es:[edi],dx
  40dd71:	or     DWORD PTR [ebp+0x49],0x40
  40dd75:	sar    DWORD PTR [ebx+0x5469be67],1
  40dd7b:	push   cs
  40dd7c:	jmp    0xc034:0x16b85cd7
  40dd83:	pop    edx
  40dd84:	div    esp
  40dd86:	bound  ebx,QWORD PTR [edx]
  40dd88:	daa    
  40dd89:	or     ah,ch
  40dd8b:	retf   0x6be2
  40dd8e:	out    0x29,al
  40dd90:	sub    al,0x91
  40dd92:	push   esi
  40dd93:	inc    ebx
  40dd94:	data16 jbe 0x40ddb2
  40dd97:	sbb    al,0x56
  40dd99:	mov    esp,0x867c42ad
  40dd9e:	icebp  
  40dd9f:	dec    eax
  40dda0:	mov    al,ds:0xebf47ed1
  40dda5:	cli    
  40dda6:	mov    bl,ah
  40dda8:	call   0x2fb5691b
  40ddad:	pop    ds
  40ddae:	rol    DWORD PTR [esi+0x7cb6aa2b],cl
  40ddb4:	adc    ebx,DWORD PTR [ecx+0x5c]
  40ddb7:	hlt    
  40ddb8:	mov    ds:0x7e2e9f4f,al
  40ddbd:	sbb    bl,BYTE PTR [edx-0x5416fbd7]
  40ddc3:	sub    al,BYTE PTR [ebx+0x36]
  40ddc6:	test   al,0x52
  40ddc8:	inc    BYTE PTR [ebp+0x64]
  40ddcb:	inc    ebx
  40ddcc:	inc    edx
  40ddcd:	xchg   esi,eax
  40ddce:	out    0xcf,eax
  40ddd0:	fld    st(3)
  40ddd2:	fst    DWORD PTR [ebx+0xa]
  40ddd5:	sub    eax,0x2e1661ab
  40ddda:	cmp    al,0xcb
  40dddc:	xchg   edx,eax
  40dddd:	sti    
  40ddde:	fiadd  DWORD PTR [ebx-0x34]
  40dde1:	enter  0xc3d,0xb7
  40dde5:	dec    esp
  40dde6:	(bad)  
  40dde7:	out    0x67,eax
  40dde9:	gs popa 
  40ddeb:	rep stos DWORD PTR es:[edi],eax
  40dded:	in     al,dx
  40ddee:	inc    edx
  40ddef:	and    dl,BYTE PTR [edi+eiz*8+0x1d]
  40ddf3:	inc    ecx
  40ddf4:	jo     0x40de6b
  40ddf6:	xor    al,0x3b
  40ddf8:	inc    ebx
  40ddf9:	pop    esi
  40ddfa:	or     ah,BYTE PTR [esi]
  40ddfc:	cmp    ecx,ebx
  40ddfe:	dec    edx
  40ddff:	cmp    eax,0x55d0750a
  40de04:	push   edi
  40de05:	stc    
  40de06:	mov    ds:0x8297435e,eax
  40de0b:	mov    edx,0x20eb7360
  40de10:	lods   eax,DWORD PTR ds:[esi]
  40de11:	ret    
  40de12:	in     al,dx
  40de13:	cwde   
  40de14:	inc    ecx
  40de15:	clc    
  40de16:	xchg   ebx,eax
  40de17:	xor    BYTE PTR [esp+edx*4],0xd6
  40de1b:	lock sahf 
  40de1d:	xchg   DWORD PTR [ebx],esi
  40de1f:	in     al,0xed
  40de21:	addr16 mov eax,0x195bb7c7
  40de27:	sub    BYTE PTR [eax],ah
  40de29:	mov    dh,0xda
  40de2b:	push   es
  40de2c:	fwait
  40de2d:	or     DWORD PTR [edx-0x18],edx
  40de30:	loopne 0x40de8f
  40de32:	push   esp
  40de33:	lods   eax,DWORD PTR ds:[esi]
  40de34:	xor    DWORD PTR [ebp-0x50],edi
  40de37:	mov    DWORD PTR [ecx-0x31],esi
  40de3a:	popa   
  40de3b:	pop    esp
  40de3c:	hlt    
  40de3d:	test   al,0xe3
  40de3f:	loope  0x40ddf0
  40de41:	xor    BYTE PTR [eax-0x1cff5894],bh
  40de47:	out    dx,eax
  40de48:	(bad)  
  40de4a:	shl    DWORD PTR [edx],1
  40de4c:	pop    edx
  40de4d:	popf   
  40de4e:	mov    esp,0xcba33217
  40de53:	jp     0x40de22
  40de55:	arpl   WORD PTR [ecx-0x5],cx
  40de58:	in     al,dx
  40de59:	outs   dx,BYTE PTR ds:[esi]
  40de5a:	test   al,0xa9
  40de5c:	shl    esi,1
  40de5e:	sbb    BYTE PTR [ebx+eax*4-0x38],ah
  40de62:	inc    edi
  40de63:	and    ebx,DWORD PTR [edi]
  40de65:	mov    bl,0xc7
  40de67:	ja     0x40dee6
  40de69:	fld    QWORD PTR [edx+0x53]
  40de6c:	(bad)  
  40de6d:	xrelease xchg BYTE PTR [esi+0x31],ah
  40de71:	lock xchg ch,bh
  40de74:	stc    
  40de75:	neg    bl
  40de77:	mov    ah,0x95
  40de79:	pop    esp
  40de7a:	sar    ecx,cl
  40de7c:	or     eax,0x2a1537c1
  40de81:	xor    BYTE PTR [eax],bh
  40de83:	into   
  40de84:	jp     0x40de51
  40de86:	rep outs dx,BYTE PTR ds:[esi]
  40de88:	and    eax,0xc3ba75e8
  40de8d:	pop    esp
  40de8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de8f:	xchg   ebp,edi
  40de91:	xor    eax,DWORD PTR [edi-0x64]
  40de94:	popa   
  40de95:	ffree  st(2)
  40de97:	stos   BYTE PTR es:[edi],al
  40de98:	xchg   edx,eax
  40de99:	xor    BYTE PTR [ecx-0x306dae86],ah
  40de9f:	arpl   di,bp
  40dea1:	and    eax,0x41a835a
  40dea6:	mov    bh,0xea
  40dea8:	neg    BYTE PTR [eax+0x6e9ba59]
  40deae:	cmp    cl,0xa2
  40deb1:	sbb    DWORD PTR [eax-0x176f4b0a],esp
  40deb7:	stc    
  40deb8:	aas    
  40deb9:	push   cs
  40deba:	clc    
  40debb:	bound  ecx,QWORD PTR [ecx-0x76e6860c]
  40dec1:	xor    ecx,DWORD PTR [ebp-0x24fc38cf]
  40dec7:	fnsave [ebp+0x1c]
  40deca:	stc    
  40decb:	xchg   edi,eax
  40decc:	outs   dx,BYTE PTR ds:[esi]
  40decd:	int3   
  40dece:	pop    eax
  40decf:	cwde   
  40ded0:	sub    esi,edx
  40ded2:	pop    ebx
  40ded3:	jae    0x40dec3
  40ded5:	push   esp
  40ded6:	outs   dx,BYTE PTR ds:[esi]
  40ded7:	pop    ebx
  40ded8:	sbb    dl,BYTE PTR [ecx]
  40deda:	dec    eax
  40dedb:	mov    gs,WORD PTR [esi]
  40dedd:	inc    edi
  40dede:	call   0x95ca755f
  40dee3:	dec    esi
  40dee4:	sub    DWORD PTR [ebx+eiz*2-0x38224547],0x4c549bb3
  40deef:	pop    ss
  40def0:	and    edx,DWORD PTR gs:[ebp-0x442b5965]
  40def7:	inc    ebx
  40def8:	jecxz  0x40df05
  40defa:	ja     0x40df40
  40defc:	lock jmp 0xc0400ac4
  40df02:	imul   ecx,DWORD PTR [esi],0xbd37a70a
  40df08:	call   0x4dbd049d
  40df0d:	jge    0x40df38
  40df0f:	cmc    
  40df10:	jo     0x40df0a
  40df12:	and    al,BYTE PTR [ecx+edi*4-0x6b5b1895]
  40df19:	jnp    0x40deb8
  40df1b:	shl    BYTE PTR [eax-0x43170522],0x3f
  40df22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df23:	jo     0x40dec0
  40df25:	pop    edi
  40df26:	fidivr DWORD PTR [eax]
  40df28:	idiv   DWORD PTR [esi+0x219c22fc]
  40df2e:	cli    
  40df2f:	xchg   edi,eax
  40df30:	mov    bh,al
  40df32:	sti    
  40df33:	push   edi
  40df34:	sub    dh,BYTE PTR [edx-0x53]
  40df37:	mov    al,0xf0
  40df39:	loope  0x40def2
  40df3b:	dec    ecx
  40df3c:	lock lods al,BYTE PTR ds:[esi]
  40df3e:	out    0xc0,al
  40df40:	mov    cl,0x4
  40df42:	cli    
  40df43:	fisub  WORD PTR [edi]
  40df45:	inc    DWORD PTR [ebp-0x75a036a6]
  40df4b:	jp     0x40dfb0
  40df4d:	xadd   BYTE PTR [edi+0x24],ch
  40df51:	or     ah,dl
  40df53:	aam    0xfa
  40df55:	inc    ebp
  40df56:	stc    
  40df57:	xchg   ecx,eax
  40df58:	jno    0x40df4f
  40df5a:	lods   eax,DWORD PTR ds:[esi]
  40df5b:	out    dx,eax
  40df5c:	adc    eax,0x17d3bfb0
  40df61:	jbe    0x40df21
  40df63:	test   edx,esp
  40df65:	jle    0x40defe
  40df67:	jbe    0x40dfe6
  40df69:	bound  edi,QWORD PTR [ebx+0x2d]
  40df6c:	xchg   ebp,eax
  40df6d:	add    edi,DWORD PTR [eax]
  40df6f:	push   eax
  40df70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df71:	adc    DWORD PTR [ecx+edx*8],0x584f0001
  40df78:	pop    edx
  40df79:	sbb    DWORD PTR [ecx-0x21],0xffffffb2
  40df7d:	sar    BYTE PTR [ebx-0x7c7029],cl
  40df83:	hlt    
  40df84:	jb     0x40df37
  40df86:	out    0x86,al
  40df88:	mov    dl,0x80
  40df8a:	and    ebx,DWORD PTR [edi-0x39262265]
  40df90:	adc    DWORD PTR [esi],ecx
  40df92:	es inc eax
  40df94:	inc    edi
  40df95:	mov    ecx,0x5321ed81
  40df9a:	add    al,0x2c
  40df9c:	inc    ebx
  40df9d:	ins    BYTE PTR es:[edi],dx
  40df9e:	mov    esp,0xe1e503d5
  40dfa3:	and    esp,ecx
  40dfa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa6:	push   ss
  40dfa7:	mov    dh,0xf9
  40dfa9:	data16 ror BYTE PTR ds:0x341d040a,1
  40dfb0:	cli    
  40dfb1:	jne    0x40dfce
  40dfb3:	adc    cl,BYTE PTR [edi+eax*8-0x5acf91e2]
  40dfba:	imul   esi,DWORD PTR [edi-0x39ed6e1b],0xf592b3f7
  40dfc4:	and    al,0xb2
  40dfc6:	push   eax
  40dfc7:	and    cl,BYTE PTR [edi]
  40dfc9:	pop    ebp
  40dfca:	das    
  40dfcb:	xor    eax,0x1574bd2a
  40dfd0:	popa   
  40dfd1:	sub    BYTE PTR [eax+0x2bbf240a],al
  40dfd7:	xor    eax,DWORD PTR [edi-0x2]
  40dfda:	pop    ecx
  40dfdb:	cmp    edi,DWORD PTR [eax+0x5]
  40dfde:	pusha  
  40dfdf:	add    al,0x57
  40dfe1:	push   0x7c
  40dfe3:	cmp    ebp,DWORD PTR ds:0x795eaafc
  40dfe9:	mov    esp,0xc7cf6c0a
  40dfee:	imul   esi,DWORD PTR [edx-0x349d5aa1],0xaff1620c
  40dff8:	lods   al,BYTE PTR ds:[esi]
  40dff9:	call   0xba67:0xe0930ebc
  40e000:	retf   0x5b6e
  40e003:	jg     0x40dfe0
  40e005:	lods   al,BYTE PTR ds:[esi]
  40e006:	das    
  40e007:	and    BYTE PTR [ebp+0x2f],0x4d
  40e00b:	sti    
  40e00c:	std    
  40e00d:	jle    0x40e028
  40e00f:	add    BYTE PTR [ebx+0x39],dh
  40e012:	push   es
  40e013:	or     esp,DWORD PTR [esp-0x491d8960]
  40e01a:	push   eax
  40e01b:	add    al,0xf6
  40e01d:	call   0x2dd58244
  40e022:	adc    BYTE PTR [ebx-0x6f],dh
  40e025:	pop    edi
  40e026:	sbb    ah,BYTE PTR [edi+esi*4]
  40e029:	jns    0x40e041
  40e02b:	popa   
  40e02c:	mov    ebx,0x4ede2a75
  40e031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e032:	adc    eax,0x91c8ec5a
  40e037:	xchg   DWORD PTR [ecx],ebp
  40e039:	jg     0x40e04d
  40e03b:	cmp    eax,0x3e70e152
  40e040:	push   edi
  40e041:	ret    0x6e21
  40e044:	xlat   BYTE PTR ds:[ebx]
  40e045:	mov    ebx,eax
  40e047:	ja     0x40e06f
  40e049:	inc    edi
  40e04a:	fsub   QWORD PTR [ebp+0x357a71e9]
  40e050:	cli    
  40e051:	xchg   edi,eax
  40e052:	pop    ebx
  40e053:	jmp    0xbfba:0xbd588d0e
  40e05a:	lods   al,BYTE PTR ds:[esi]
  40e05b:	(bad)  
  40e05d:	add    BYTE PTR [ebx+0x78],dh
  40e060:	inc    ecx
  40e061:	jge    0x40dff2
  40e063:	mov    esp,eax
  40e065:	inc    ecx
  40e066:	sbb    DWORD PTR [eax-0x4c],edi
  40e069:	jne    0x40e05d
  40e06b:	inc    eax
  40e06c:	xchg   edx,eax
  40e06d:	or     ecx,0xa9ca0931
  40e073:	fsub   QWORD PTR [edi-0x4fc90859]
  40e079:	jl     0x40e0c3
  40e07b:	cmp    BYTE PTR [ebx-0x22ae81bc],dl
  40e081:	xchg   edx,eax
  40e082:	inc    ebx
  40e083:	gs mov ebx,0xdf58464b
  40e089:	inc    edi
  40e08a:	push   ebx
  40e08b:	in     eax,dx
  40e08c:	iret   
  40e08d:	push   edx
  40e08e:	cwde   
  40e08f:	fneni(8087 only) 
  40e091:	mov    ebp,esi
  40e093:	pop    edx
  40e094:	inc    edx
  40e095:	xor    bh,BYTE PTR [ebx+0x2a]
  40e098:	sub    BYTE PTR [ebx+0x8],bh
  40e09b:	gs inc ebp
  40e09d:	or     esi,esp
  40e09f:	sar    DWORD PTR [edi-0x3fcb1e78],1
  40e0a5:	xchg   esi,eax
  40e0a6:	pop    esi
  40e0a7:	mov    eax,ds:0x7d4a372
  40e0ac:	(bad)  
  40e0ad:	push   cs
  40e0ae:	xor    DWORD PTR [ecx-0x1d],ecx
  40e0b1:	mov    bh,0xe8
  40e0b3:	sbb    ah,BYTE PTR [edx]
  40e0b5:	mov    ds:0x54a442af,eax
  40e0ba:	xor    DWORD PTR [edx],esp
  40e0bc:	xchg   bh,cl
  40e0be:	dec    edi
  40e0bf:	sbb    al,0x39
  40e0c1:	test   ebp,ebx
  40e0c3:	mov    bh,al
  40e0c5:	arpl   WORD PTR [ebx],dx
  40e0c7:	sub    esi,ebp
  40e0c9:	cwde   
  40e0ca:	cwde   
  40e0cb:	rcr    BYTE PTR [edx+0x41],cl
  40e0ce:	out    0xfb,al
  40e0d0:	cdq    
  40e0d1:	in     eax,0xbb
  40e0d3:	test   al,0xb7
  40e0d5:	mov    esp,0x694af6d5
  40e0da:	adc    ebp,ebp
  40e0dc:	test   eax,0x9d793dd6
  40e0e1:	jl     0x40e0dd
  40e0e3:	cmp    al,BYTE PTR [ebx+0x35]
  40e0e6:	retf   0x6aa4
  40e0e9:	xchg   ebp,eax
  40e0ea:	in     eax,dx
  40e0eb:	stos   DWORD PTR es:[edi],eax
  40e0ec:	sub    al,0x50
  40e0ee:	sbb    DWORD PTR [ebx-0x2cac0477],ecx
  40e0f4:	adc    DWORD PTR [edx],esp
  40e0f6:	shl    ch,0x4d
  40e0f9:	lods   al,BYTE PTR ds:[esi]
  40e0fa:	sub    ecx,edx
  40e0fc:	dec    edi
  40e0fd:	mov    al,0x51
  40e0ff:	sbb    eax,0x1e66c443
  40e104:	xor    bh,BYTE PTR [esi+0x705bd536]
  40e10a:	fisttp DWORD PTR [esi+ebp*2-0x59577712]
  40e111:	addr16 sbb eax,0x744b1d75
  40e117:	pop    ss
  40e118:	in     eax,0xd4
  40e11a:	sub    al,BYTE PTR [ebx+0x30102a71]
  40e120:	fadd   QWORD PTR ds:0x916816dc
  40e126:	or     bh,bl
  40e128:	jge    0x40e0e5
  40e12a:	inc    eax
  40e12b:	dec    edx
  40e12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e12d:	std    
  40e12e:	leave  
  40e12f:	add    DWORD PTR [esi],edx
  40e131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e132:	inc    eax
  40e133:	stos   DWORD PTR es:[edi],eax
  40e134:	sbb    al,0xc4
  40e136:	loope  0x40e163
  40e138:	outs   dx,DWORD PTR ds:[esi]
  40e139:	and    DWORD PTR [ebx-0x6a],ecx
  40e13c:	out    dx,eax
  40e13d:	ja     0x40e193
  40e13f:	jb     0x40e15b
  40e141:	xchg   esp,eax
  40e142:	sub    al,0xff
  40e144:	into   
  40e145:	mov    ebp,0xe0edc43e
  40e14a:	mov    ebx,0xd256df17
  40e14f:	inc    eax
  40e150:	inc    ecx
  40e151:	ja     0x40e114
  40e153:	xchg   edi,eax
  40e154:	lock idiv DWORD PTR [ebx+0xc]
  40e158:	push   0x36
  40e15a:	lea    ecx,[eax-0x48]
  40e15d:	jbe    0x40e19d
  40e15f:	sti    
  40e160:	int    0x6d
  40e162:	das    
  40e163:	sbb    esi,DWORD PTR [ebx-0x78]
  40e166:	mov    eax,ds:0x8ec92ef1
  40e16b:	sub    eax,DWORD PTR [eax-0x3b59c79b]
  40e171:	xchg   ebx,eax
  40e172:	loope  0x40e172
  40e174:	dec    esi
  40e175:	xchg   esi,eax
  40e176:	int3   
  40e177:	call   0x265a:0x1b57b0e
  40e17e:	bound  edi,QWORD PTR [ebx]
  40e180:	sbb    al,BYTE PTR [esi+0x5771f808]
  40e186:	(bad)  
  40e188:	lock xor bl,cl
  40e18b:	dec    edi
  40e18c:	outs   dx,BYTE PTR ds:[esi]
  40e18d:	(bad)  
  40e18e:	(bad)  
  40e18f:	sbb    ebp,edx
  40e191:	in     al,dx
  40e192:	icebp  
  40e193:	out    0xc6,al
  40e195:	fdivp  st(2),st
  40e197:	(bad)  
  40e198:	outs   dx,DWORD PTR ds:[esi]
  40e199:	mov    ch,0xb1
  40e19b:	adc    bl,BYTE PTR [eax]
  40e19d:	pop    ebp
  40e19e:	xchg   edi,eax
  40e1a0:	xchg   ebp,eax
  40e1a1:	mov    esi,0x2a9beaa2
  40e1a6:	mov    ebp,0xc113b2b0
  40e1ab:	jo     0x40e160
  40e1ad:	cdq    
  40e1ae:	add    eax,0xcf38ba9b
  40e1b3:	imul   edx,eax,0x6b
  40e1b6:	repnz stos DWORD PTR es:[edi],eax
  40e1b8:	or     ebp,DWORD PTR [esi-0x66]
  40e1bb:	sub    BYTE PTR [ebp-0x74977d4b],bh
  40e1c1:	aas    
  40e1c2:	in     eax,0xd9
  40e1c4:	(bad)  
  40e1c6:	jnp    0x40e1ac
  40e1c8:	imul   ecx,DWORD PTR [edi+0x79],0xbd5875e2
  40e1cf:	cmp    eax,0x48ace0a1
  40e1d4:	outs   dx,DWORD PTR ds:[esi]
  40e1d5:	adc    BYTE PTR [ecx-0x2d22f7a3],0xfa
  40e1dc:	xor    al,bh
  40e1de:	cld    
  40e1df:	inc    edi
  40e1e0:	mov    edi,ebp
  40e1e2:	dec    esi
  40e1e3:	sub    BYTE PTR [ebx],cl
  40e1e5:	add    ecx,edi
  40e1e7:	outs   dx,BYTE PTR ds:[esi]
  40e1e8:	fdiv   DWORD PTR [ecx]
  40e1ea:	(bad)  
  40e1eb:	call   0xb0c964ce
  40e1f0:	lods   eax,DWORD PTR ds:[esi]
  40e1f1:	in     eax,dx
  40e1f2:	lods   al,BYTE PTR ds:[esi]
  40e1f3:	xchg   edx,eax
  40e1f4:	js     0x40e1ba
  40e1f6:	cld    
  40e1f7:	pop    ss
  40e1f8:	fistp  WORD PTR [edx+0x36953764]
  40e1fe:	jg     0x40e252
  40e200:	sbb    edi,ebp
  40e202:	ins    BYTE PTR es:[edi],dx
  40e203:	ss inc ebx
  40e205:	ins    BYTE PTR es:[edi],dx
  40e206:	mov    eax,DWORD PTR [ebp+0x474e0f3f]
  40e20c:	icebp  
  40e20d:	sbb    bh,bl
  40e20f:	sbb    BYTE PTR [edx+0x317d283e],cl
  40e215:	repnz pushf 
  40e217:	or     BYTE PTR [edi+0x5eab2808],ch
  40e21d:	jg     0x40e233
  40e21f:	gs test eax,0x4256d597
  40e225:	xor    al,0x9a
  40e227:	ret    
  40e228:	xlat   BYTE PTR ds:[ebx]
  40e229:	stos   DWORD PTR es:[edi],eax
  40e22a:	test   BYTE PTR [ecx+0x1d],dh
  40e22d:	paddb  mm5,QWORD PTR [esi-0x3f]
  40e231:	xchg   esp,eax
  40e232:	or     edx,DWORD PTR [esi]
  40e234:	push   ecx
  40e235:	jae    0x40e236
  40e237:	mov    ebp,0xe7331039
  40e23c:	pop    ebx
  40e23d:	mov    ds:0x4d7d03fb,al
  40e242:	inc    ebx
  40e243:	mov    dl,0x93
  40e245:	std    
  40e246:	cmp    ax,0x1044
  40e24a:	push   eax
  40e24b:	lods   eax,DWORD PTR ds:[esi]
  40e24c:	hlt    
  40e24d:	lods   al,BYTE PTR ds:[esi]
  40e24e:	out    0x4e,eax
  40e250:	xor    dl,BYTE PTR [ebx+0x50]
  40e253:	sbb    DWORD PTR [ebp+0x15e06649],edx
  40e259:	int    0x71
  40e25b:	imul   esi,DWORD PTR [ebx-0x14ddb53b],0x12
  40e262:	push   esp
  40e263:	pop    ebp
  40e264:	cmp    BYTE PTR cs:[esi+0x3913a623],dh
  40e26b:	inc    esi
  40e26c:	inc    esp
  40e26d:	fld    QWORD PTR [esi+eax*4+0x3f]
  40e271:	jnp    0x40e235
  40e273:	icebp  
  40e274:	int    0xae
  40e276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e277:	pop    eax
  40e278:	cld    
  40e279:	sahf   
  40e27a:	sbb    esi,edi
  40e27c:	fbstp  TBYTE PTR [esi+0x68]
  40e27f:	cli    
  40e280:	mov    al,ds:0xce93fb25
  40e285:	aad    0x1b
  40e287:	xchg   DWORD PTR [eax],eax
  40e289:	mov    al,0xbd
  40e28b:	lahf   
  40e28c:	push   ecx
  40e28d:	mov    bh,0xe9
  40e28f:	cmc    
  40e290:	push   esp
  40e291:	cld    
  40e292:	fcom   QWORD PTR [eax]
  40e294:	inc    eax
  40e295:	(bad)  
  40e296:	adc    al,BYTE PTR [ebx+0x3db0e5e8]
  40e29c:	jmp    FWORD PTR [edi]
  40e29e:	scas   eax,DWORD PTR es:[edi]
  40e29f:	or     al,BYTE PTR ds:0x384a67c7
  40e2a5:	dec    ecx
  40e2a6:	cmc    
  40e2a7:	imul   ebx,DWORD PTR [eax-0x52],0xcd89cff1
  40e2ae:	xchg   ecx,eax
  40e2af:	mulps  xmm7,XMMWORD PTR [ebp-0x32]
  40e2b3:	test   DWORD PTR [ecx],0x7d21d817
  40e2b9:	sub    eax,0xedf615ba
  40e2be:	adc    BYTE PTR [edx],cl
  40e2c0:	mov    dl,0x4
  40e2c2:	out    dx,eax
  40e2c3:	push   edi
  40e2c4:	adc    DWORD PTR [ebx],0xf6c32c0d
  40e2ca:	cmp    eax,0x31512ad9
  40e2cf:	ror    DWORD PTR cs:[edi],0x93
  40e2d3:	jno    0x40e32d
  40e2d5:	sub    eax,0xa3572db1
  40e2da:	aas    
  40e2db:	out    0x76,eax
  40e2dd:	xchg   esi,eax
  40e2de:	push   es
  40e2df:	out    dx,al
  40e2e0:	xchg   edi,eax
  40e2e1:	sub    eax,0x24e25a0f
  40e2e6:	xor    DWORD PTR [ecx+0x59],ebx
  40e2e9:	sbb    ebp,DWORD PTR [ecx+0x20]
  40e2ec:	mov    bh,0x8
  40e2ee:	mov    esi,0xa1fc9c16
  40e2f3:	nop
  40e2f4:	dec    eax
  40e2f5:	mov    edx,0xbeef3ca7
  40e2fa:	mov    eax,0x52aae680
  40e2ff:	js     0x40e37b
  40e301:	mov    al,0xc1
  40e303:	sbb    DWORD PTR [edx],0xfffffff6
  40e306:	popa   
  40e307:	popf   
  40e308:	and    dl,BYTE PTR [edi]
  40e30a:	mov    dh,0xdb
  40e30c:	in     eax,0x3c
  40e30e:	sbb    BYTE PTR [ebx+0x7],dl
  40e311:	mov    ch,0x95
  40e313:	sub    al,0xf9
  40e315:	fs int3 
  40e317:	mov    bl,0x51
  40e319:	outs   dx,BYTE PTR ds:[esi]
  40e31a:	mov    BYTE PTR [ebp+0x70],cl
  40e31d:	sub    ecx,DWORD PTR [ebp+0x27]
  40e320:	mov    ebx,0xe7a695a8
  40e325:	dec    ebp
  40e326:	sub    al,0x6f
  40e328:	mov    bl,0xe8
  40e32a:	sbb    eax,0xd285a127
  40e32f:	ss mov bh,0x85
  40e332:	into   
  40e333:	popa   
  40e334:	sbb    edx,0x20
  40e337:	xlat   BYTE PTR ds:[ebx]
  40e338:	xor    ah,BYTE PTR [edx+esi*1+0x53a226b9]
  40e33f:	imul   ebp,esp,0x305b9e5a
  40e345:	jno    0x40e3a5
  40e347:	sar    edi,1
  40e349:	(bad)  
  40e34a:	sbb    DWORD PTR [edi],ebx
  40e34c:	stos   BYTE PTR es:[edi],al
  40e34d:	sbb    eax,0x67706be
  40e352:	mov    ch,0xe6
  40e354:	jns    0x40e387
  40e356:	sub    BYTE PTR [eax-0x73],0x86
  40e35a:	and    dh,dh
  40e35c:	bound  ecx,QWORD PTR [eax-0x9df5e1d]
  40e362:	std    
  40e363:	mov    ds:0x2fd0e9ec,eax
  40e368:	mov    ds:0x90d5e740,al
  40e36d:	enter  0x34c,0x8e
  40e371:	adc    eax,0x8dd4e704
  40e376:	mov    bl,0x8
  40e378:	test   DWORD PTR [edx+0x19b02c4],edi
  40e37e:	and    esi,esp
  40e380:	mov    eax,0x49745dcf
  40e385:	push   0xffffffe8
  40e387:	fs add ecx,edi
  40e38a:	loopne 0x40e359
  40e38c:	arpl   WORD PTR [ebx-0x2d],di
  40e38f:	or     dl,ch
  40e391:	dec    ebx
  40e392:	inc    eax
  40e393:	je     0x40e376
  40e395:	dec    edi
  40e396:	test   BYTE PTR [edi+0x47],cl
  40e399:	mov    ebp,0xcfa53f39
  40e39e:	pop    eax
  40e39f:	sub    DWORD PTR [ecx+0x70],ecx
  40e3a2:	and    esi,edi
  40e3a4:	dec    eax
  40e3a5:	jg     0x40e334
  40e3a7:	xor    al,0xfa
  40e3a9:	fwait
  40e3aa:	out    dx,al
  40e3ab:	lahf   
  40e3ac:	push   es
  40e3ad:	jp     0x40e373
  40e3af:	mov    esi,ebx
  40e3b1:	fwait
  40e3b2:	mulps  xmm4,XMMWORD PTR [edx-0x6]
  40e3b6:	inc    ebx
  40e3b7:	pop    ss
  40e3b8:	imul   ebx,edx,0x61
  40e3bb:	les    edi,FWORD PTR [edx]
  40e3bd:	jmp    0x451f:0xcba7444b
  40e3c4:	cmp    DWORD PTR [esi+ebx*8-0x1a20ea62],edx
  40e3cb:	xchg   edx,edx
  40e3cd:	xor    eax,0xfc56283d
  40e3d2:	sub    BYTE PTR [esi-0x5d],bl
  40e3d5:	mov    dh,0xc9
  40e3d7:	add    ebp,ecx
  40e3d9:	sbb    DWORD PTR [ebx],ebp
  40e3db:	and    BYTE PTR [esi],0x73
  40e3de:	or     edi,DWORD PTR [ebp-0x7d9fbd58]
  40e3e4:	and    BYTE PTR ds:0x8b35d216,ch
  40e3ea:	jnp    0xd95a7613
  40e3f0:	xchg   ebp,eax
  40e3f1:	jmp    0x40e40a
  40e3f3:	outs   dx,DWORD PTR ds:[esi]
  40e3f4:	stos   DWORD PTR es:[edi],eax
  40e3f5:	dec    ebp
  40e3f6:	xor    ah,dh
  40e3f8:	popf   
  40e3f9:	xor    eax,0x92df598
  40e3fe:	push   esi
  40e3ff:	into   
  40e400:	push   ebx
  40e401:	jp     0x40e3c9
  40e403:	(bad)  
  40e406:	sub    BYTE PTR [ecx+ebp*2-0x4048f837],cl
  40e40d:	outs   dx,BYTE PTR ds:[esi]
  40e40e:	sbb    ecx,edx
  40e410:	mov    bh,0x2c
  40e412:	mov    ebx,0xdabfb97b
  40e417:	sbb    ecx,DWORD PTR [edx-0xadcf1b8]
  40e41d:	adc    ebx,DWORD PTR [ebp-0x335c7541]
  40e423:	in     al,0xd6
  40e425:	retw   0x4525
  40e429:	jne    0x40e3db
  40e42b:	ss xchg edi,eax
  40e42d:	sub    ebp,DWORD PTR [ecx+0x22ce1c07]
  40e433:	mov    dh,0x4e
  40e435:	mov    ah,0xf1
  40e437:	scas   eax,DWORD PTR es:[edi]
  40e438:	adc    DWORD PTR [ecx+0x83f0888],0x43
  40e43f:	outs   dx,DWORD PTR ds:[esi]
  40e440:	js     0x40e400
  40e442:	ror    BYTE PTR ds:0xb7e0d47e,1
  40e448:	es sbb eax,0xb0c7a822
  40e44e:	lock xchg ebx,eax
  40e450:	push   ebp
  40e451:	mov    edi,0x58980192
  40e456:	adc    ch,BYTE PTR [ebx-0x76]
  40e459:	out    0x76,al
  40e45b:	push   edx
  40e45c:	mov    ah,dl
  40e45e:	scas   eax,DWORD PTR es:[edi]
  40e45f:	adc    eax,0x73367642
  40e464:	sbb    dl,BYTE PTR [ebx]
  40e466:	jbe    0x40e483
  40e468:	xor    eax,0x34903524
  40e46d:	jno    0x40e46d
  40e46f:	cmp    DWORD PTR [edi+0xb],edx
  40e472:	fdiv   st,st(3)
  40e474:	inc    ecx
  40e475:	call   0xad9c:0x726faa42
  40e47c:	mov    WORD PTR [ebx-0x1fe483a4],fs
  40e482:	sbb    cl,ch
  40e484:	mov    al,0x1
  40e486:	mov    ebp,0xe0e0199e
  40e48b:	div    BYTE PTR [eax]
  40e48d:	fs xchg ebx,eax
  40e48f:	lds    esi,FWORD PTR [ebx-0x57b3e973]
  40e495:	pop    esp
  40e496:	mov    esp,0xfd0f092b
  40e49b:	push   esi
  40e49c:	sub    BYTE PTR ds:0x6dfc3c44,cl
  40e4a2:	addr16 idiv ch
  40e4a5:	outs   dx,DWORD PTR ds:[esi]
  40e4a6:	stos   BYTE PTR es:[edi],al
  40e4a7:	sub    edi,DWORD PTR [eax+0x76883e98]
  40e4ad:	scas   al,BYTE PTR es:[edi]
  40e4ae:	add    DWORD PTR [eax-0x46d13fb],ebp
  40e4b4:	xchg   BYTE PTR [ebp-0x77],ch
  40e4b7:	cld    
  40e4b8:	and    al,0x21
  40e4ba:	adc    ch,cl
  40e4bc:	shl    BYTE PTR [edi+0x1b0c6b85],0x9
  40e4c3:	in     eax,dx
  40e4c4:	mov    dl,0x98
  40e4c6:	test   eax,0x74c2dfb2
  40e4cb:	cmp    dl,BYTE PTR [ecx+0x77]
  40e4ce:	adc    BYTE PTR [ecx-0x20359c97],bh
  40e4d4:	cmp    eax,0xb7b8c418
  40e4d9:	arpl   WORD PTR [eax],ax
  40e4db:	sub    al,0x81
  40e4dd:	jecxz  0x40e4cb
  40e4df:	lds    ecx,FWORD PTR [bp-0x331c]
  40e4e4:	mov    bl,0x97
  40e4e6:	mov    dh,0x8f
  40e4e8:	xor    BYTE PTR [esi+0x6b],al
  40e4eb:	repnz and eax,0x7023d00b
  40e4f1:	adc    bl,BYTE PTR [edx]
  40e4f3:	js     0x40e519
  40e4f5:	ret    0x956
  40e4f8:	add    DWORD PTR ds:0xa65d1971,0xffffffc3
  40e4ff:	popf   
  40e500:	arpl   si,sp
  40e502:	adc    DWORD PTR es:0x7a62b95,ebx
  40e509:	ret    0x1f86
  40e50c:	cli    
  40e50d:	xlat   BYTE PTR ds:[ebx]
  40e50e:	add    eax,0xaf79d849
  40e513:	push   cs
  40e514:	fdiv   DWORD PTR [edx]
  40e516:	daa    
  40e517:	inc    edx
  40e518:	jae    0x40e546
  40e51a:	add    DWORD PTR [ecx+0x12b84a0f],edx
  40e520:	stos   BYTE PTR es:[edi],al
  40e521:	inc    edx
  40e522:	popf   
  40e523:	jle    0x40e584
  40e525:	cld    
  40e526:	lea    ecx,[ebx-0x7a]
  40e529:	push   ebx
  40e52a:	mov    al,ds:0x6b40478d
  40e52f:	js     0x40e513
  40e531:	xor    edi,DWORD PTR [edx]
  40e533:	jo     0x40e590
  40e535:	mov    bh,0xc5
  40e537:	mov    fs,esi
  40e539:	sbb    ebx,DWORD PTR [eax]
  40e53b:	push   0x31
  40e53d:	stos   DWORD PTR es:[edi],eax
  40e53e:	xchg   ecx,eax
  40e53f:	adc    bh,ah
  40e541:	je     0x40e4d1
  40e543:	push   ebp
  40e544:	imul   eax,DWORD PTR [eax-0x35],0xfffffffa
  40e548:	cdq    
  40e549:	leave  
  40e54a:	jle    0x40e4db
  40e54c:	jbe    0x40e54f
  40e54e:	inc    ecx
  40e54f:	mov    ecx,0x67f8ead3
  40e554:	jecxz  0x40e534
  40e556:	adc    eax,0xbfb9ff7e
  40e55b:	dec    edi
  40e55c:	(bad)  
  40e55d:	out    0xde,al
  40e55f:	jl     0x40e4fa
  40e561:	daa    
  40e562:	test   DWORD PTR [esi+0x12f3263],0x5e0ddf36
  40e56c:	loope  0x40e5b1
  40e56e:	dec    eax
  40e56f:	dec    edx
  40e570:	jl     0x40e587
  40e572:	sub    DWORD PTR [edx+0x2fbf1495],ebx
  40e578:	enter  0xa052,0x6d
  40e57c:	(bad)  [eax]
  40e57e:	iret   
  40e57f:	inc    esi
  40e580:	jae    0x2e6b4f0f
  40e586:	sbb    al,0x9d
  40e588:	xor    dl,al
  40e58a:	xchg   esp,eax
  40e58b:	sbb    dl,dl
  40e58d:	test   al,0x4f
  40e58f:	in     eax,dx
  40e590:	aaa    
  40e591:	xchg   BYTE PTR [ebx+0x2d],dl
  40e594:	pop    ebx
  40e595:	push   esi
  40e596:	xchg   edx,eax
  40e597:	ds mov esp,0x25c26e90
  40e59d:	ja     0x40e553
  40e59f:	ret    0xf3e5
  40e5a2:	stc    
  40e5a3:	test   BYTE PTR [ebx-0x6946603b],ch
  40e5a9:	mov    ch,0x94
  40e5ab:	mov    edx,0x2834f1ba
  40e5b0:	rcr    BYTE PTR [eax],1
  40e5b2:	mov    dh,0xa8
  40e5b4:	arpl   WORD PTR [ebp-0x1087eab],bx
  40e5ba:	shl    BYTE PTR [edi-0x62],0x1
  40e5be:	inc    esp
  40e5bf:	lea    ebx,[edx+0x5f]
  40e5c2:	mov    al,ds:0x1d48c84f
  40e5c7:	jb     0x40e5e2
  40e5c9:	imul   esi,DWORD PTR cs:0x184e5073,0xf77dc742
  40e5d4:	inc    esi
  40e5d5:	clc    
  40e5d6:	sar    ecx,cl
  40e5d8:	xchg   esp,eax
  40e5d9:	mov    esi,0xf8d481de
  40e5de:	jns    0x40e5a1
  40e5e0:	daa    
  40e5e1:	out    dx,eax
  40e5e2:	jmp    0x3687:0x429a11eb
  40e5e9:	mov    bl,0x9b
  40e5eb:	ss jno 0x40e619
  40e5ee:	int3   
  40e5ef:	jg     0x40e623
  40e5f1:	in     eax,0xc8
  40e5f3:	ins    BYTE PTR es:[edi],dx
  40e5f4:	daa    
  40e5f5:	cmp    al,bh
  40e5f7:	inc    edi
  40e5f8:	(bad)  
  40e5f9:	pop    ebx
  40e5fa:	inc    edi
  40e5fb:	mov    al,ds:0xdd16a09b
  40e600:	push   ebp
  40e601:	in     al,dx
  40e602:	dec    ebx
  40e603:	jne    0x40e675
  40e605:	pop    esp
  40e606:	xor    al,0xcd
  40e608:	dec    ebp
  40e609:	retf   
  40e60a:	inc    edi
  40e60b:	pushf  
  40e60c:	enter  0xdad5,0x78
  40e610:	stos   BYTE PTR es:[edi],al
  40e611:	adc    esi,0x59
  40e614:	push   ebx
  40e615:	jns    0x40e627
  40e617:	fild   WORD PTR [esi-0x4c]
  40e61a:	aad    0x3a
  40e61c:	push   0x47
  40e61e:	jecxz  0x40e614
  40e620:	pop    ebx
  40e621:	xor    edi,DWORD PTR [esi+0x7bb8c3f5]
  40e627:	test   eax,0x9ab66a47
  40e62c:	xchg   esp,eax
  40e62d:	fdivr  QWORD PTR [esi]
  40e62f:	into   
  40e630:	in     al,dx
  40e631:	daa    
  40e632:	pop    esi
  40e633:	aad    0xb8
  40e635:	arpl   bp,di
  40e637:	mov    ebx,?
  40e639:	cdq    
  40e63a:	sbb    eax,0x697d7e07
  40e63f:	dec    esi
  40e640:	push   edi
  40e641:	mov    eax,0xbcc0a486
  40e646:	push   0x67d2c91e
  40e64b:	test   DWORD PTR [ebp+edi*4+0x8152a8d],0x78f02010
  40e656:	sub    esp,esp
  40e658:	shl    BYTE PTR [edx-0x4eec4500],1
  40e65e:	jl     0x40e601
  40e660:	imul   ecx,DWORD PTR [edx-0x6891e898],0x76
  40e667:	add    eax,0xb5eaa611
  40e66c:	mov    ebp,0xc546adf3
  40e671:	xlat   BYTE PTR ds:[ebx]
  40e672:	jae    0x40e641
  40e674:	leave  
  40e675:	cs pop es
  40e677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e678:	add    eax,0xa1944d5f
  40e67d:	ds test eax,0xddd98535
  40e683:	adc    eax,0xeae5fd9c
  40e688:	je     0x40e694
  40e68a:	cmp    DWORD PTR [edx+ecx*8-0x58a0b1dc],0x12cd2f19
  40e695:	outs   dx,BYTE PTR ds:[esi]
  40e696:	pop    ds
  40e697:	push   cs
  40e698:	mov    ah,0xdf
  40e69a:	fmul   QWORD PTR [esi+0xa]
  40e69d:	dec    edi
  40e69e:	jle    0x40e68a
  40e6a0:	xchg   esp,eax
  40e6a1:	sbb    BYTE PTR ds:0xdd87423,al
  40e6a7:	pop    es
  40e6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a9:	jl     0x40e6c0
  40e6ab:	pop    eax
  40e6ac:	mov    ds:0xbfaa0095,al
  40e6b1:	(bad)  
  40e6b2:	fistp  QWORD PTR [eax-0x5]
  40e6b5:	lahf   
  40e6b6:	imul   eax,DWORD PTR [edx+0x15],0x9c5c24d1
  40e6bd:	sub    al,0x18
  40e6bf:	pop    es
  40e6c0:	push   0xd6589e05
  40e6c5:	jp     0x40e6d6
  40e6c7:	mov    eax,ds:0x89822cc3
  40e6cc:	shl    BYTE PTR [ebx-0x11],1
  40e6cf:	jbe    0x40e733
  40e6d1:	push   edx
  40e6d2:	imul   eax,DWORD PTR [ecx],0x3698d9a2
  40e6d8:	inc    ebx
  40e6d9:	cmp    eax,0xffc21181
  40e6de:	push   0x18
  40e6e0:	mov    bh,0xbf
  40e6e2:	ror    ch,0x3
  40e6e5:	retf   0xc423
  40e6e8:	adc    bh,dh
  40e6ea:	xchg   ebp,eax
  40e6eb:	adc    DWORD PTR [ebx-0x46],ebx
  40e6ee:	dec    esi
  40e6ef:	fcmove st,st(7)
  40e6f1:	pop    esi
  40e6f2:	sysenter 
  40e6f4:	push   ds
  40e6f5:	or     cl,dl
  40e6f7:	lds    ecx,FWORD PTR [edx-0x2693a2ec]
  40e6fd:	fs retf 0xb574
  40e701:	xor    eax,0xf0f42c1b
  40e706:	lea    eax,[edi*8+0x1f2c7d79]
  40e70d:	icebp  
  40e70e:	sar    esp,cl
  40e710:	mov    ebp,0x4a9105ec
  40e715:	std    
  40e716:	cmp    al,0x48
  40e718:	aas    
  40e719:	fisubr DWORD PTR [ebx+0x7207b113]
  40e71f:	or     BYTE PTR [edi],cl
  40e721:	das    
  40e722:	shr    DWORD PTR [edi+0x48bc68f7],1
  40e728:	jecxz  0x40e6f0
  40e72a:	rcl    BYTE PTR [ecx+ebx*8+0x15],1
  40e72e:	ss daa 
  40e730:	jge    0x40e733
  40e732:	fcom   DWORD PTR [eax+eax*8]
  40e735:	cmp    DWORD PTR [ecx+0x5db1b6c9],esp
  40e73b:	retf   
  40e73c:	and    al,0xcf
  40e73e:	cdq    
  40e73f:	jne    0x40e794
  40e741:	and    ch,BYTE PTR fs:[edi+0x74b6e00a]
  40e748:	jmp    0x6b21:0x9b7d3cbf
  40e74f:	add    al,0x2f
  40e751:	pop    ebx
  40e752:	mov    ch,0x9a
  40e754:	sbb    DWORD PTR [ebp+0x65],edx
  40e757:	mov    eax,0x1ebc9303
  40e75c:	stos   BYTE PTR es:[edi],al
  40e75d:	imul   ecx,ebx,0x16
  40e760:	jbe    0x40e72c
  40e762:	pop    edx
  40e763:	sti    
  40e764:	xchg   edi,eax
  40e765:	ja     0x40e726
  40e767:	shl    BYTE PTR [ebx],cl
  40e769:	jno    0x40e721
  40e76b:	rcr    ch,cl
  40e76d:	add    BYTE PTR [edx+0x104cb379],0x3a
  40e774:	sub    BYTE PTR [edi],0xf6
  40e777:	xchg   edi,eax
  40e778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e779:	lds    esi,FWORD PTR [edi+0x242052a7]
  40e77f:	pop    eax
  40e780:	and    cl,BYTE PTR [ebp+0x31]
  40e783:	lds    ecx,FWORD PTR [ecx-0x13]
  40e786:	retf   
  40e787:	jns    0x40e758
  40e789:	or     al,ch
  40e78b:	sbb    BYTE PTR [esi-0x26],cl
  40e78e:	ds sti 
  40e790:	lahf   
  40e791:	pop    ss
  40e792:	cmp    edi,DWORD PTR ds:0x43663976
  40e798:	xor    DWORD PTR [ebx+0x6f],eax
  40e79b:	fild   DWORD PTR [edi-0x5f274b39]
  40e7a1:	mov    WORD PTR [eax+0x4],fs
  40e7a4:	aas    
  40e7a5:	cli    
  40e7a6:	sbb    eax,0x484f9ea5
  40e7ab:	js     0x40e7e0
  40e7ad:	cld    
  40e7ae:	sti    
  40e7af:	inc    ebp
  40e7b0:	fist   WORD PTR [ebp+0x20]
  40e7b3:	pop    ds
  40e7b4:	daa    
  40e7b5:	dec    edi
  40e7b6:	xchg   esp,eax
  40e7b7:	mov    al,ds:0x167e52b9
  40e7bc:	scas   eax,DWORD PTR es:[edi]
  40e7bd:	mov    dh,0xa9
  40e7bf:	cwde   
  40e7c0:	sub    bh,BYTE PTR [eax-0x1006e951]
  40e7c6:	sbb    DWORD PTR [eax+0x181cd79a],ebp
  40e7cc:	dec    ecx
  40e7cd:	fwait
  40e7ce:	jno    0x40e7f6
  40e7d0:	je     0x40e776
  40e7d2:	and    BYTE PTR [ebp+0x5873070f],dl
  40e7d8:	inc    edx
  40e7d9:	cmp    al,0x7a
  40e7db:	pop    ebx
  40e7dc:	push   ebx
  40e7dd:	sub    BYTE PTR [edx+0x3],ch
  40e7e0:	sub    eax,0x7bd1e868
  40e7e5:	jne    0x40e85c
  40e7e7:	cmp    DWORD PTR [ecx-0x24],0xffffff8c
  40e7eb:	sub    edi,DWORD PTR [ebx]
  40e7ed:	in     eax,0x93
  40e7ef:	push   esi
  40e7f0:	mov    bl,0x6e
  40e7f2:	aaa    
  40e7f3:	enter  0xea24,0x3e
  40e7f7:	add    al,dl
  40e7f9:	inc    edi
  40e7fa:	adc    bh,bl
  40e7fc:	aaa    
  40e7fd:	fs jle 0x40e7e0
  40e800:	pop    edx
  40e801:	push   ebx
  40e802:	(bad)  
  40e803:	out    dx,eax
  40e804:	cmc    
  40e805:	std    
  40e806:	sbb    ch,BYTE PTR [edx]
  40e808:	in     eax,dx
  40e809:	push   0xe734f013
  40e80e:	xor    DWORD PTR [esi-0x3be5f9eb],edx
  40e814:	retf   
  40e815:	add    dh,BYTE PTR [ebx+0x400f4779]
  40e81b:	push   ds
  40e81c:	lahf   
  40e81d:	outs   dx,DWORD PTR ds:[esi]
  40e81e:	fsub   DWORD PTR [ecx]
  40e820:	cli    
  40e821:	and    BYTE PTR es:[ecx],0x3d
  40e825:	(bad)  
  40e826:	mov    ebx,0x4f949994
  40e82b:	xchg   edi,eax
  40e82c:	icebp  
  40e82d:	iret   
  40e82e:	or     bl,ch
  40e830:	nop
  40e831:	or     eax,0x66140f3a
  40e836:	fld    QWORD PTR [edx]
  40e838:	jecxz  0x40e85a
  40e83a:	add    BYTE PTR [ecx+0x7e],0xbe
  40e83e:	les    edi,FWORD PTR [eax]
  40e840:	mov    ah,0xa9
  40e842:	and    DWORD PTR ds:0xc0fe653c,eax
  40e848:	arpl   si,ax
  40e84a:	sub    al,0xdc
  40e84c:	fiadd  DWORD PTR [ebx+0x8bb16b]
  40e852:	xchg   edi,eax
  40e853:	sub    BYTE PTR [ecx-0x42706695],bh
  40e859:	rcr    DWORD PTR [eax],cl
  40e85b:	lods   eax,DWORD PTR ds:[esi]
  40e85c:	int    0xd2
  40e85e:	push   esp
  40e85f:	js     0x40e8d7
  40e861:	sahf   
  40e862:	mov    dh,0x65
  40e864:	cli    
  40e865:	add    DWORD PTR [edi-0x2927fe5c],ebp
  40e86b:	and    eax,DWORD PTR [ecx]
  40e86d:	xor    DWORD PTR [edx-0x48],ebx
  40e870:	cmp    BYTE PTR [edx],cl
  40e872:	xchg   esi,eax
  40e873:	dec    eax
  40e874:	sti    
  40e875:	test   al,0xdd
  40e877:	loop   0x40e8b2
  40e879:	sar    DWORD PTR [edx+0x43],cl
  40e87c:	test   al,0xb0
  40e87e:	mov    DWORD PTR [ecx+0x4a],ebx
  40e881:	mov    ds:0x63951068,al
  40e886:	retf   
  40e887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e888:	fiadd  DWORD PTR [esi-0x29]
  40e88b:	sub    esi,DWORD PTR [edx]
  40e88d:	ret    
  40e88e:	xor    bh,bl
  40e890:	fnstenv [eax+0x34]
  40e893:	or     dh,BYTE PTR [eax-0x3e]
  40e896:	scas   al,BYTE PTR es:[edi]
  40e897:	dec    edx
  40e898:	cmp    eax,0xcf60407e
  40e89d:	loopne 0x40e8f6
  40e89f:	cmp    eax,edx
  40e8a1:	in     al,0x8e
  40e8a3:	hlt    
  40e8a4:	push   ebx
  40e8a5:	hlt    
  40e8a6:	repnz or eax,0x3ea8ddb9
  40e8ac:	pop    esp
  40e8ad:	sub    ebx,DWORD PTR [ebp+0xb]
  40e8b0:	es mov edi,0xbb032af5
  40e8b6:	push   edx
  40e8b7:	add    eax,0xe1a93af9
  40e8bc:	in     al,0xd7
  40e8be:	cmp    ecx,esi
  40e8c0:	popf   
  40e8c1:	xor    eax,0x393f9cd6
  40e8c6:	push   0x5c27c2fc
  40e8cb:	retf   
  40e8cc:	cmp    DWORD PTR [ecx],esp
  40e8ce:	sbb    BYTE PTR [esi],al
  40e8d0:	and    ah,BYTE PTR [esi-0x7e4b6557]
  40e8d6:	mov    al,ch
  40e8d8:	mov    cl,0x45
  40e8da:	rcr    edx,cl
  40e8dc:	push   ds
  40e8dd:	xchg   BYTE PTR [esi-0x6f],bh
  40e8e0:	in     eax,0x63
  40e8e2:	xor    bh,BYTE PTR [ebp-0x7d]
  40e8e5:	std    
  40e8e6:	xor    al,ch
  40e8e8:	enter  0x4e39,0x50
  40e8ec:	push   0xffffffac
  40e8ee:	test   DWORD PTR [esi+0x73],esi
  40e8f1:	pop    edi
  40e8f2:	in     eax,dx
  40e8f3:	jno    0x40e949
  40e8f5:	dec    eax
  40e8f6:	xor    BYTE PTR [ebx+ebx*8-0x2f],al
  40e8fa:	fbstp  TBYTE PTR [edi-0x2d320520]
  40e900:	stos   BYTE PTR es:[edi],al
  40e901:	pop    es
  40e902:	xor    DWORD PTR [esi+edx*2],esi
  40e905:	mov    ds:0xe61b69d1,al
  40e90a:	xor    BYTE PTR [ecx],al
  40e90c:	ins    BYTE PTR es:[edi],dx
  40e90d:	or     ah,BYTE PTR [esi-0x14a6d6]
  40e913:	pop    ds
  40e914:	jne    0x40e927
  40e916:	jmp    DWORD PTR [esi-0x78]
  40e919:	cwde   
  40e91a:	lahf   
  40e91b:	xchg   esp,eax
  40e91c:	jo     0x40e999
  40e91e:	xlat   BYTE PTR ds:[ebx]
  40e91f:	push   es
  40e920:	bound  eax,QWORD PTR ds:0x51f01831
  40e926:	dec    ebx
  40e927:	or     DWORD PTR [eax],eax
  40e929:	xchg   DWORD PTR [ebx],ecx
  40e92b:	pop    es
  40e92c:	adc    ah,bh
  40e92e:	or     edi,DWORD PTR [ebx+0x565c2751]
  40e934:	and    ch,BYTE PTR [eax]
  40e936:	xchg   ebx,eax
  40e937:	in     eax,dx
  40e938:	adc    BYTE PTR [esi+0x22],bl
  40e93b:	es mov dh,0xa2
  40e93e:	jne    0x40e96a
  40e940:	jecxz  0x40e8d4
  40e942:	mov    ?,WORD PTR [esi+0x4dffdda3]
  40e948:	dec    ebp
  40e949:	aas    
  40e94a:	hlt    
  40e94b:	sbb    eax,DWORD PTR [esi+edi*2]
  40e94e:	sub    cl,0x28
  40e951:	test   al,0x25
  40e953:	shl    BYTE PTR [esi-0xbda3902],1
  40e959:	push   edi
  40e95a:	clc    
  40e95b:	inc    edx
  40e95c:	cli    
  40e95d:	sub    edi,ebx
  40e95f:	lahf   
  40e960:	pop    ss
  40e961:	std    
  40e962:	cmp    DWORD PTR [eax],eax
  40e964:	xor    DWORD PTR [ebx-0x65],edx
  40e967:	adc    esp,esi
  40e969:	xor    ecx,esp
  40e96b:	mov    ds:0x2848e270,eax
  40e970:	push   ebx
  40e971:	jne    0x40e98f
  40e973:	sbb    BYTE PTR [esi+0x70],al
  40e976:	xchg   ecx,eax
  40e977:	out    dx,al
  40e978:	dec    ebx
  40e979:	jmp    0x40e9c5
  40e97b:	pop    ds
  40e97c:	neg    BYTE PTR [ecx-0x78]
  40e97f:	xlat   BYTE PTR ds:[ebx]
  40e980:	clc    
  40e981:	cmp    eax,0xd6f550ee
  40e986:	xchg   ecx,eax
  40e987:	(bad)  
  40e988:	clc    
  40e989:	fisubr DWORD PTR [ecx-0x73b3deb1]
  40e98f:	and    ah,BYTE PTR [ecx-0x7e]
  40e992:	push   ebp
  40e993:	js     0x40e93a
  40e995:	jl     0x40e96c
  40e997:	xor    al,0xdc
  40e999:	sub    ebp,DWORD PTR [ebp-0x53]
  40e99c:	mov    ecx,0x9150744f
  40e9a1:	gs clc 
  40e9a3:	add    eax,esi
  40e9a5:	push   es
  40e9a6:	push   esi
  40e9a7:	and    DWORD PTR [edi],ebx
  40e9a9:	mov    ebx,0xe727a2b9
  40e9ae:	mov    ds:0xaa2db2e2,al
  40e9b3:	xor    DWORD PTR [edi],ecx
  40e9b5:	adc    DWORD PTR [ebx+ecx*8+0x31],edx
  40e9b9:	lea    edx,[ebx+0x6f77b5be]
  40e9bf:	jle    0x40e974
  40e9c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9c2:	sub    eax,0xad5fa793
  40e9c7:	xor    esp,DWORD PTR [esi-0x6a]
  40e9ca:	jo     0x40e9c2
  40e9cc:	cdq    
  40e9cd:	fxch   st(7)
  40e9cf:	or     ah,BYTE PTR [ebx+esi*2-0x470c3a09]
  40e9d6:	jle    0x40e9c7
  40e9d8:	daa    
  40e9d9:	and    eax,0x51106e61
  40e9de:	xor    BYTE PTR [ecx-0x701da361],cl
  40e9e4:	fwait
  40e9e5:	mov    ebx,0x87e41cda
  40e9ea:	inc    esi
  40e9eb:	sti    
  40e9ec:	fs fs dec ecx
  40e9ef:	adc    al,0xcf
  40e9f1:	xor    esi,ecx
  40e9f3:	stc    
  40e9f4:	fist   WORD PTR [edx]
  40e9f6:	jmp    0xda6592b1
  40e9fb:	mov    esp,0x7b65157c
  40ea00:	dec    esi
  40ea01:	out    dx,eax
  40ea02:	sub    DWORD PTR [edi+0x6c9c231a],esi
  40ea08:	cmp    BYTE PTR [edx],bl
  40ea0a:	sub    al,0xc8
  40ea0c:	sar    ebp,cl
  40ea0e:	mov    edx,DWORD PTR [eax-0x4049af13]
  40ea14:	cmp    DWORD PTR [esi],eax
  40ea16:	pop    ecx
  40ea17:	sub    DWORD PTR [ebx-0x9],edx
  40ea1a:	add    al,0x72
  40ea1c:	hlt    
  40ea1d:	dec    ebp
  40ea1e:	adc    al,0xf8
  40ea20:	mov    ecx,0x55315f34
  40ea25:	mov    ecx,DWORD PTR [ebx-0x69]
  40ea28:	jmp    0x31698293
  40ea2d:	loope  0x40ea0d
  40ea2f:	and    ebp,DWORD PTR [ecx+edx*2]
  40ea32:	sbb    eax,0x8cf7c2c2
  40ea37:	mov    BYTE PTR [ebx-0x5a59731f],bh
  40ea3d:	call   0x1a57:0x649186d2
  40ea44:	cmp    bh,ah
  40ea46:	setg   BYTE PTR [edi-0x2b53a04a]
  40ea4d:	mov    DWORD PTR [di-0x1a],ebp
  40ea51:	mov    edx,0xf1ec46e
  40ea56:	xchg   edi,eax
  40ea57:	sub    BYTE PTR [edi],al
  40ea59:	xor    al,0xdc
  40ea5b:	inc    ecx
  40ea5c:	xchg   edi,eax
  40ea5d:	jmp    0x40ea27
  40ea5f:	fld    TBYTE PTR [edi]
  40ea61:	rcl    BYTE PTR [edx],0xb3
  40ea64:	sar    DWORD PTR [edx],1
  40ea66:	xor    al,0xa2
  40ea68:	ins    BYTE PTR es:[edi],dx
  40ea69:	fucom  st(5)
  40ea6b:	mov    cl,0x8c
  40ea6d:	mov    al,ds:0x62807a15
  40ea72:	mov    eax,ds:0x596776a
  40ea77:	je     0x40eaa5
  40ea79:	jle    0x40eaa3
  40ea7b:	push   edi
  40ea7c:	add    al,cl
  40ea7e:	adc    DWORD PTR [edi-0x57],ebx
  40ea81:	retf   0xc71e
  40ea84:	push   es
  40ea85:	stos   BYTE PTR es:[edi],al
  40ea86:	fdivr  DWORD PTR [esi+0x26]
  40ea89:	xchg   edi,eax
  40ea8a:	pusha  
  40ea8b:	shl    BYTE PTR [ecx],0xca
  40ea8e:	dec    esp
  40ea8f:	mov    ecx,esp
  40ea91:	mov    al,0x27
  40ea93:	cmp    ecx,DWORD PTR [ebp-0x48]
  40ea96:	jp     0x40ea1b
  40ea98:	fwait
  40ea99:	pop    DWORD PTR [edi]
  40ea9b:	cmp    eax,ecx
  40ea9d:	inc    ecx
  40ea9e:	cmp    eax,0x7f0afc18
  40eaa3:	sub    al,0xf8
  40eaa5:	js     0x40ea7b
  40eaa7:	in     al,0x73
  40eaa9:	jecxz  0x40ea63
  40eaab:	inc    edx
  40eaac:	loopne 0x40ea6e
  40eaae:	sbb    edx,DWORD PTR [ebx+0x6e6b0fa0]
  40eab4:	fistp  DWORD PTR [ebp+0x6ca78024]
  40eaba:	out    dx,al
  40eabb:	pop    esi
  40eabc:	pop    esi
  40eabd:	sbb    esp,DWORD PTR [esi+eax*1-0x5b]
  40eac1:	sbb    eax,0x97cc9659
  40eac6:	or     DWORD PTR [ecx],edi
  40eac8:	imul   ebx,DWORD PTR [eax-0x41],0xffffffe8
  40eacc:	fidivr DWORD PTR [esp+ebx*4]
  40eacf:	push   0xfffffff6
  40ead1:	hlt    
  40ead2:	mov    ecx,0x41f73d16
  40ead7:	out    0x62,al
  40ead9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eada:	ins    BYTE PTR es:[edi],dx
  40eadb:	ss pop ss
  40eadd:	add    al,0x42
  40eadf:	jo     0x40ea7b
  40eae1:	aad    0x35
  40eae3:	iret   
  40eae4:	scas   eax,DWORD PTR es:[edi]
  40eae5:	jne    0x40eac0
  40eae7:	sahf   
  40eae8:	popa   
  40eae9:	and    BYTE PTR [eax-0x605536c2],ch
  40eaef:	xor    DWORD PTR [eax],ebx
  40eaf1:	add    ebp,DWORD PTR [esp+edx*2+0x5e]
  40eaf5:	jb     0x40ead0
  40eaf7:	adc    ah,BYTE PTR [edi+0x3c3414f3]
  40eafd:	xor    al,0xf9
  40eaff:	sahf   
  40eb00:	dec    esi
  40eb01:	arpl   bp,di
  40eb03:	pop    ds
  40eb04:	push   ds
  40eb05:	jl     0x40eabf
  40eb07:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40eb09:	mov    al,ds:0x3ab3f855
  40eb0e:	enter  0xeb1f,0x59
  40eb12:	clc    
  40eb13:	and    edi,esi
  40eb15:	cmp    al,BYTE PTR [edi-0x645176c3]
  40eb1b:	add    DWORD PTR [esi-0x58],esp
  40eb1e:	mov    ds:0x596ddb84,ax
  40eb24:	mov    edi,0x98e754a4
  40eb29:	dec    eax
  40eb2a:	retf   
  40eb2b:	ja     0x40eb69
  40eb2d:	mov    al,0x66
  40eb2f:	mov    ebx,0xb67f552c
  40eb34:	jge    0x40eaeb
  40eb36:	push   es
  40eb37:	lock inc ebp
  40eb39:	enter  0x68c6,0x9d
  40eb3d:	fisttp DWORD PTR [ebp+0x2adbc0ec]
  40eb43:	jnp    0x40eaff
  40eb45:	sbb    eax,0xae3224df
  40eb4a:	retf   0x3d0e
  40eb4d:	and    ecx,DWORD PTR ds:0x661f08d7
  40eb53:	iret   
  40eb54:	and    eax,0x2c5eadbe
  40eb59:	dec    edi
  40eb5a:	js     0x40eb50
  40eb5c:	and    al,0x7a
  40eb5e:	push   esp
  40eb5f:	adc    ch,ch
  40eb61:	add    edx,edx
  40eb63:	mov    esi,gs
  40eb65:	adc    BYTE PTR [edi],ch
  40eb67:	add    DWORD PTR [esi+ebx*8-0x76a303db],0x7eacb18e
  40eb72:	out    dx,al
  40eb73:	ins    DWORD PTR es:[edi],dx
  40eb74:	xor    esp,DWORD PTR [edx]
  40eb76:	push   cs
  40eb77:	mov    esi,0x73c378f3
  40eb7c:	test   DWORD PTR [eax],esi
  40eb7e:	test   BYTE PTR [ecx-0x70],dh
  40eb81:	(bad)  
  40eb83:	test   BYTE PTR [esi],ah
  40eb85:	sbb    dl,cl
  40eb87:	adc    al,0x2a
  40eb89:	xchg   ecx,eax
  40eb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb8b:	inc    ebx
  40eb8c:	mov    esp,0xfd11b45b
  40eb91:	adc    bl,bl
  40eb93:	xchg   ebp,eax
  40eb94:	cmp    BYTE PTR [edi-0x8],ch
  40eb97:	pop    ds
  40eb98:	jmp    0xe5b3:0xe074a85b
  40eb9f:	cmp    eax,ebx
  40eba1:	adc    ebp,DWORD PTR [ebx+eiz*4-0x79bbcac7]
  40eba8:	jg     0x40eb45
  40ebaa:	inc    esp
  40ebab:	cmc    
  40ebac:	je     0x40eb7a
  40ebae:	pop    eax
  40ebaf:	arpl   WORD PTR fs:[esi+0x424fb789],sp
  40ebb6:	int3   
  40ebb7:	cmp    eax,esp
  40ebb9:	test   DWORD PTR [ebx+0x74a81cf1],edi
  40ebbf:	push   edi
  40ebc0:	out    0x9a,eax
  40ebc2:	or     dl,cl
  40ebc4:	sti    
  40ebc5:	push   ss
  40ebc6:	iret   
  40ebc7:	jbe    0x40ebca
  40ebc9:	ins    BYTE PTR es:[edi],dx
  40ebca:	repz call 0x564c6c5b
  40ebd0:	mov    ebx,0x829b3bb0
  40ebd5:	nop
  40ebd6:	(bad)
  40ebda:	in     eax,dx
  40ebdb:	add    dl,dl
  40ebdd:	(bad)
  40ebe1:	std    
  40ebe2:	pop    eax
  40ebe3:	xchg   edi,eax
  40ebe4:	cmp    eax,0x4f3004de
  40ebe9:	les    ecx,FWORD PTR [edx]
  40ebeb:	lock mov al,ds:0xc610743
  40ebf1:	inc    esi
  40ebf2:	call   ebp
  40ebf4:	(bad)  
  40ebf6:	sahf   
  40ebf7:	cmp    eax,0x12f1509c
  40ebfc:	push   esi
  40ebfd:	(bad)  
  40ebfe:	and    ah,0xce
  40ec01:	jns    0x40ec30
  40ec03:	sbb    al,0xef
  40ec05:	pop    ebx
  40ec06:	push   ss
  40ec07:	pusha  
  40ec08:	retf   0x5523
  40ec0b:	enter  0x7ea0,0x45
  40ec0f:	xor    ecx,ebp
  40ec11:	test   eax,0x6f24495c
  40ec16:	add    eax,0x27910f4
  40ec1b:	xor    al,0x7d
  40ec1d:	push   edi
  40ec1e:	sbb    esp,ebx
  40ec20:	mov    dh,0xf2
  40ec22:	nop
  40ec23:	nop
  40ec24:	scas   eax,DWORD PTR es:[edi]
  40ec25:	cwde   
  40ec26:	xor    BYTE PTR [ebx-0x69],bl
  40ec29:	out    dx,al
  40ec2a:	adc    esi,DWORD PTR [ebx]
  40ec2c:	(bad)  
  40ec2d:	sub    dx,cx
  40ec30:	xchg   BYTE PTR [edx],bh
  40ec32:	mov    al,ds:0x3f589d6c
  40ec37:	iret   
  40ec38:	inc    ebx
  40ec39:	lods   eax,DWORD PTR ds:[esi]
  40ec3a:	and    ah,al
  40ec3c:	outs   dx,BYTE PTR ds:[esi]
  40ec3d:	pop    ebx
  40ec3e:	call   0xc85ff8d5
  40ec43:	jmp    0xbe78:0xe2e494b6
  40ec4a:	adc    ah,BYTE PTR [ecx]
  40ec4c:	xor    DWORD PTR [ecx],0xffffffea
  40ec4f:	ficomp WORD PTR [ecx+0x55670d20]
  40ec55:	jmp    0x40ecaf
  40ec57:	xchg   esi,eax
  40ec58:	scas   al,BYTE PTR es:[edi]
  40ec59:	jo     0x40ebde
  40ec5b:	out    dx,al
  40ec5c:	stos   DWORD PTR es:[edi],eax
  40ec5d:	js     0x40ec3a
  40ec5f:	mov    ch,0x4f
  40ec61:	dec    esp
  40ec62:	in     al,0x76
  40ec64:	test   al,0x8a
  40ec66:	(bad)  
  40ec67:	jns    0x40ec1c
  40ec69:	jno    0x40ecde
  40ec6b:	data16 data16 aaa 
  40ec6e:	sbb    al,0xbc
  40ec70:	stc    
  40ec71:	pop    ebx
  40ec72:	enter  0xa18,0xf0
  40ec76:	pop    ebx
  40ec77:	push   es
  40ec78:	gs fsin 
  40ec7b:	(bad)  
  40ec7c:	nop
  40ec7d:	loop   0x40ece4
  40ec7f:	jle    0x40eca2
  40ec81:	push   0x4639b9ec
  40ec86:	xor    al,0x47
  40ec88:	pop    ss
  40ec89:	and    DWORD PTR [edx-0x15],eax
  40ec8c:	mov    dh,BYTE PTR [edi+0x52ac86d2]
  40ec92:	xchg   ebx,eax
  40ec93:	outs   dx,BYTE PTR es:[esi]
  40ec95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec96:	out    0xfb,eax
  40ec98:	lods   eax,DWORD PTR ds:[esi]
  40ec99:	enter  0x5896,0xc6
  40ec9d:	test   ecx,edx
  40ec9f:	dec    DWORD PTR [edi]
  40eca1:	(bad)  
  40eca2:	sub    DWORD PTR [ebx-0x68918cf7],edx
  40eca8:	add    BYTE PTR [edx-0x4b05b721],bh
  40ecae:	push   edi
  40ecaf:	push   es
  40ecb0:	loope  0x40ed1d
  40ecb2:	jp     0x40ece0
  40ecb4:	in     eax,dx
  40ecb5:	imul   ecx,DWORD PTR [eax-0x5357d5ec],0xffffffbf
  40ecbc:	inc    ebp
  40ecbd:	jo     0x40ece5
  40ecbf:	into   
  40ecc0:	js     0x40ec68
  40ecc2:	call   DWORD PTR [ebx-0xb]
  40ecc5:	fwait
  40ecc6:	xchg   ecx,eax
  40ecc7:	int3   
  40ecc8:	xchg   BYTE PTR [ebx],cl
  40ecca:	cmovb  eax,DWORD PTR [ebp+0x41]
  40ecce:	or     al,0x4b
  40ecd0:	mov    ebp,DWORD PTR [edi+0x20]
  40ecd3:	scas   eax,DWORD PTR es:[edi]
  40ecd4:	inc    esi
  40ecd5:	pop    ss
  40ecd6:	push   eax
  40ecd7:	je     0x40ecb7
  40ecd9:	retf   
  40ecda:	retf   
  40ecdb:	in     eax,dx
  40ecdc:	jmp    0xbfb464da
  40ece1:	dec    ebp
  40ece2:	cld    
  40ece3:	dec    ebx
  40ece4:	sub    esi,eax
  40ece6:	cmp    BYTE PTR [esi-0x5e],bh
  40ece9:	(bad)  [edi-0x5e]
  40ecec:	xchg   ebx,eax
  40eced:	and    edx,ecx
  40ecef:	popf   
  40ecf0:	outs   dx,DWORD PTR ds:[esi]
  40ecf1:	push   esi
  40ecf2:	dec    eax
  40ecf3:	cli    
  40ecf4:	pop    ss
  40ecf5:	int    0xc2
  40ecf7:	daa    
  40ecf8:	sbb    esp,0x3e
  40ecfb:	mov    edx,0x2df0b40c
  40ed00:	(bad)
  40ed03:	cmp    esi,DWORD PTR [edx]
  40ed05:	pushw  es
  40ed07:	int    0x74
  40ed09:	cwde   
  40ed0a:	push   edi
  40ed0b:	iret   
  40ed0c:	jg     0x40ece0
  40ed0e:	(bad)  
  40ed0f:	cld    
  40ed10:	mov    edx,0x162694c7
  40ed15:	or     al,0xd8
  40ed17:	out    0x2b,al
  40ed19:	call   0x3a89:0xb4f1e9eb
  40ed20:	xchg   esp,eax
  40ed21:	ja     0x40ecc6
  40ed23:	dec    ax
  40ed25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed26:	push   eax
  40ed27:	inc    ecx
  40ed28:	pusha  
  40ed29:	mov    ebp,ebp
  40ed2b:	stc    
  40ed2c:	sbb    al,0xc6
  40ed2e:	mov    DWORD PTR [edi],edx
  40ed30:	je     0x40ed5b
  40ed32:	loop   0x40ed13
  40ed34:	popa   
  40ed35:	mov    edi,0xf967b464
  40ed3a:	sbb    al,ch
  40ed3c:	hlt    
  40ed3d:	test   BYTE PTR [ecx],0xa2
  40ed40:	ret    0x793e
  40ed43:	push   0xffffff89
  40ed45:	(bad)  
  40ed46:	cmp    BYTE PTR [edi+0x35],bl
  40ed49:	xor    DWORD PTR [esi+0x4c],esp
  40ed4c:	int3   
  40ed4d:	mov    cl,0xa7
  40ed4f:	arpl   WORD PTR [esi],bp
  40ed51:	jno    0x40ed4f
  40ed53:	sub    al,0x94
  40ed55:	retf   0x429d
  40ed58:	add    DWORD PTR [ebx],eax
  40ed5a:	ror    BYTE PTR [edi-0xa],cl
  40ed5d:	lds    esi,FWORD PTR ds:0xaf0582c1
  40ed63:	xor    bl,ch
  40ed65:	mov    WORD PTR [ebp-0x3a],gs
  40ed68:	mov    bl,0xc3
  40ed6a:	or     ecx,DWORD PTR [eax-0x4]
  40ed6d:	or     BYTE PTR [ebx+eiz*2-0x23e492a4],bh
  40ed74:	mov    eax,0xcda30c04
  40ed79:	sub    eax,0x90066be9
  40ed7e:	push   ss
  40ed7f:	ss sbb eax,0xaa17133d
  40ed85:	mov    cl,BYTE PTR [eax]
  40ed87:	out    0x5,eax
  40ed89:	cdq    
  40ed8a:	shr    BYTE PTR [ebp+0x35],1
  40ed8d:	popf   
  40ed8e:	push   ebp
  40ed8f:	mov    dl,0xb6
  40ed91:	mov    ch,0x67
  40ed93:	(bad)  
  40ed94:	sete   BYTE PTR [esi]
  40ed97:	jl     0x40ee01
  40ed99:	int3   
  40ed9a:	push   0x36a64e29
  40ed9f:	mov    ebx,0x596ce49
  40eda4:	sbb    BYTE PTR [ebp+0x2e605e8a],ch
  40edaa:	pop    esp
  40edab:	cdq    
  40edac:	jnp    0x40ed8a
  40edae:	mov    esi,0x7f2bd76a
  40edb3:	cmp    DWORD PTR [ebp-0x1af1c7a5],eax
  40edb9:	push   ebp
  40edba:	mov    dh,0x25
  40edbc:	ss aaa 
  40edbe:	outs   dx,BYTE PTR ds:[esi]
  40edbf:	mov    BYTE PTR [eax],bh
  40edc1:	repnz shl al,0x10
  40edc5:	cmp    DWORD PTR [edx-0x28e2a92],ebp
  40edcb:	jle    0x40edb7
  40edcd:	test   BYTE PTR [esi],al
  40edcf:	sti    
  40edd0:	in     al,0xee
  40edd2:	dec    esp
  40edd3:	mov    bh,0xfe
  40edd5:	dec    ecx
  40edd6:	stos   DWORD PTR es:[edi],eax
  40edd7:	add    esp,esi
  40edd9:	clc    
  40edda:	out    dx,al
  40eddb:	lds    edi,FWORD PTR [edx]
  40eddd:	adc    al,0x3f
  40eddf:	adc    al,0xdc
  40ede1:	mov    bl,0x86
  40ede3:	daa    
  40ede4:	repnz dec esp
  40ede6:	or     al,0x59
  40ede8:	mov    eax,ebx
  40edea:	(bad)  
  40edeb:	hlt    
  40edec:	sbb    ebx,DWORD PTR [edi+edi*1+0x6a9e9664]
  40edf3:	adc    ecx,DWORD PTR [ecx+0x31b2afb2]
  40edf9:	aas    
  40edfa:	and    ch,dh
  40edfc:	sub    dh,BYTE PTR [edx+0x351e888f]
  40ee02:	adc    DWORD PTR [eax+0x50],edx
  40ee05:	and    BYTE PTR [ebx-0x67],0x19
  40ee09:	push   0xffffffe6
  40ee0b:	out    0xf6,eax
  40ee0d:	xor    eax,DWORD PTR [edx]
  40ee0f:	leave  
  40ee10:	clc    
  40ee11:	repnz sti 
  40ee13:	in     al,0x62
  40ee15:	(bad)
  40ee1a:	in     al,0x27
  40ee1c:	sbb    al,0x44
  40ee1e:	inc    esi
  40ee1f:	xchg   BYTE PTR [edx-0x284ecc53],dh
  40ee25:	clc    
  40ee26:	(bad)  
  40ee27:	mov    al,0x3
  40ee29:	out    dx,al
  40ee2a:	not    DWORD PTR [ebx-0x314a8f66]
  40ee30:	push   DWORD PTR [ebx]
  40ee32:	test   ebx,edi
  40ee34:	pop    esp
  40ee35:	adc    ecx,DWORD PTR [ebx-0x23]
  40ee38:	mov    al,0xbf
  40ee3a:	mov    bh,0x1a
  40ee3c:	adc    BYTE PTR [edi],dl
  40ee3e:	into   
  40ee3f:	cmp    ebp,DWORD PTR [esi+0x56]
  40ee42:	and    DWORD PTR [edi],esp
  40ee44:	pusha  
  40ee45:	pop    esi
  40ee46:	mov    bh,0xda
  40ee48:	mov    esp,0xb9993a9f
  40ee4d:	cmovs  ecx,DWORD PTR [esi]
  40ee50:	ror    BYTE PTR [esi+eax*8+0x20],1
  40ee54:	sub    al,0xfb
  40ee56:	sub    eax,0xe06223f9
  40ee5b:	ror    DWORD PTR [esi-0x29],cl
  40ee5e:	dec    esi
  40ee5f:	sub    BYTE PTR [esi+edx*2],al
  40ee62:	or     BYTE PTR [edx-0x39],ah
  40ee65:	push   es
  40ee66:	dec    ebp
  40ee67:	add    BYTE PTR [ebp-0x78429a68],ch
  40ee6d:	fwait
  40ee6e:	mov    ebp,0xc082fcf0
  40ee73:	dec    edi
  40ee74:	out    dx,al
  40ee75:	inc    ecx
  40ee76:	sahf   
  40ee77:	popa   
  40ee78:	cmp    ebp,eax
  40ee7a:	mov    BYTE PTR [esp+ebx*4+0x63],bh
  40ee7e:	jmp    0xa1ea:0x64076f41
  40ee85:	mov    edx,0x8ab67a37
  40ee8a:	aam    0x93
  40ee8c:	sbb    ecx,DWORD PTR [edx+0x6b84f79e]
  40ee92:	cmp    ebp,ebx
  40ee94:	sbb    al,0x70
  40ee96:	cli    
  40ee97:	or     BYTE PTR [esi],0x67
  40ee9a:	sub    bh,ch
  40ee9c:	jle    0x40ee1f
  40ee9e:	adc    eax,0x6ac815c6
  40eea3:	mov    ah,0xae
  40eea5:	push   ecx
  40eea6:	icebp  
  40eea7:	test   DWORD PTR [eax],0x39a28fd4
  40eead:	hlt    
  40eeae:	push   ecx
  40eeaf:	push   eax
  40eeb0:	xor    DWORD PTR [ecx],0x5bb908e9
  40eeb6:	push   0xe1714db7
  40eebb:	idiv   BYTE PTR [ecx+0x40fb659f]
  40eec1:	hlt    
  40eec2:	cmp    eax,edx
  40eec4:	(bad)  
  40eec5:	aaa    
  40eec6:	or     eax,0xe9ca36ac
  40eecb:	mov    dl,0x49
  40eecd:	js     0x8933c404
  40eed3:	xchg   ebx,eax
  40eed4:	xchg   DWORD PTR [edi],edx
  40eed6:	cdq    
  40eed7:	call   0x21fcadf2
  40eedc:	es or  bl,al
  40eedf:	lahf   
  40eee0:	js     0x40ef29
  40eee2:	inc    eax
  40eee3:	jle    0x40eeec
  40eee5:	iret   
  40eee6:	jp     0x40eebc
  40eee8:	cmp    al,0x74
  40eeea:	add    al,0xa2
  40eeec:	sub    eax,0xbe8ed88e
  40eef1:	jnp    0x40eeef
  40eef3:	das    
  40eef4:	xor    eax,0x14fa5fd
  40eef9:	cmp    eax,0xdc926f37
  40eefe:	(bad)  
  40eeff:	sahf   
  40ef00:	in     al,dx
  40ef01:	push   es
  40ef02:	sub    al,0x1e
  40ef04:	push   ebp
  40ef05:	jmp    0x40eea3
  40ef07:	push   cs
  40ef08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef09:	sbb    eax,0x7766d83c
  40ef0e:	sar    al,cl
  40ef10:	enter  0x75a1,0x77
  40ef14:	imul   esp,ecx,0x8ab590db
  40ef1a:	and    ebp,DWORD PTR [ecx]
  40ef1c:	or     BYTE PTR [ebp+0x29c61104],0xbc
  40ef23:	test   BYTE PTR [edx+0x16f287c5],bh
  40ef29:	adc    al,0xe1
  40ef2b:	(bad)  
  40ef2c:	pop    edi
  40ef2d:	dec    esi
  40ef2e:	sahf   
  40ef2f:	adc    bl,bl
  40ef31:	jle    0x40ef8c
  40ef33:	cmp    BYTE PTR [edx+0x57],cl
  40ef36:	mov    esi,0x9390be06
  40ef3b:	adc    edx,ebp
  40ef3d:	cmp    al,0x89
  40ef3f:	xchg   edx,eax
  40ef40:	mov    ds:0x728d989f,eax
  40ef45:	mov    WORD PTR ds:0x9674a81c,?
  40ef4b:	fs xchg ebx,eax
  40ef4d:	test   eax,0x18bb9871
  40ef52:	leave  
  40ef53:	lock or al,0x1a
  40ef56:	mov    BYTE PTR ds:0xdc731c72,dh
  40ef5c:	push   ss
  40ef5d:	push   edx
  40ef5e:	jg     0x40ef24
  40ef60:	dec    esp
  40ef61:	or     eax,0xdacf06d4
  40ef66:	sbb    DWORD PTR [ecx+edx*8],edi
  40ef69:	cmp    BYTE PTR [edx+edx*2],dl
  40ef6c:	jae    0x40efcd
  40ef6e:	xlat   BYTE PTR ds:[ebx]
  40ef6f:	mov    esp,0xa90917c8
  40ef74:	dec    ebx
  40ef75:	sbb    DWORD PTR [ebx+0xa],0x7a1e092c
  40ef7c:	sti    
  40ef7d:	inc    ecx
  40ef7e:	push   0xe8fea17e
  40ef83:	adc    eax,ebx
  40ef85:	hlt    
  40ef86:	mov    al,0xdf
  40ef88:	lahf   
  40ef89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef8a:	in     eax,dx
  40ef8b:	push   0x6f
  40ef8d:	push   ebx
  40ef8e:	inc    ecx
  40ef8f:	push   edx
  40ef90:	cmp    al,0x31
  40ef92:	das    
  40ef93:	push   eax
  40ef94:	in     al,0xa2
  40ef96:	lea    ebp,[ecx+edi*4-0x705463bc]
  40ef9d:	pusha  
  40ef9e:	xchg   BYTE PTR [edi+0x46d2e3e4],bl
  40efa4:	loop   0x40ef4f
  40efa6:	inc    esp
  40efa7:	fmul   DWORD PTR [edi-0x10cdfb9d]
  40efad:	(bad)  
  40efb0:	sbb    cl,BYTE PTR [ebp+0x43]
  40efb3:	fwait
  40efb4:	(bad)  
  40efb5:	ret    0x65ba
  40efb8:	push   eax
  40efb9:	add    DWORD PTR [ebp+0x5a],esi
  40efbc:	lahf   
  40efbd:	pop    eax
  40efbe:	arpl   WORD PTR [esi-0x64c53375],bx
  40efc4:	repnz add bl,BYTE PTR [ecx-0x3a]
  40efc8:	dec    edi
  40efc9:	mov    edi,0xc63ea747
  40efce:	pop    edx
  40efcf:	dec    eax
  40efd0:	mov    WORD PTR [eax],es
  40efd2:	imul   ebp,DWORD PTR [eax],0xffffffbb
  40efd5:	mov    eax,ds:0x5c472055
  40efda:	int3   
  40efdb:	ss and ah,ah
  40efde:	xor    cl,BYTE PTR [ebp+0x77]
  40efe1:	or     al,0x4a
  40efe3:	jbe    0x40f036
  40efe5:	add    edx,DWORD PTR [ecx+edi*4]
  40efe8:	jp     0x40ef8b
  40efea:	add    BYTE PTR [eax],bh
  40efec:	and    edi,DWORD PTR [edx-0x36b699bb]
  40eff2:	add    DWORD PTR [ebp+0x3da4c5d9],esi
  40eff8:	mov    eax,0x983c0fa
  40effd:	mov    cs,WORD PTR [edi-0x15]
  40f000:	clc    
  40f001:	out    dx,eax
  40f002:	ja     0x40f045
  40f004:	popf   
  40f005:	push   edi
  40f006:	and    DWORD PTR [eax+0x1099be7c],edi
  40f00c:	lahf   
  40f00d:	jecxz  0x40efbc
  40f00f:	fcom   QWORD PTR [eax-0x3720e67]
  40f015:	outs   dx,BYTE PTR ds:[esi]
  40f016:	add    cl,BYTE PTR ds:0x8f44f114
  40f01c:	(bad)  
  40f01d:	(bad)  
  40f01e:	sbb    DWORD PTR [ebp+edx*4-0x11b2a1be],ebx
  40f025:	mov    al,ds:0x4c1686b8
  40f02a:	xchg   DWORD PTR [ecx],ecx
  40f02c:	hlt    
  40f02d:	adc    al,0xf1
  40f02f:	jb     0x40eff6
  40f031:	xor    DWORD PTR [ebp+0x72],ecx
  40f034:	pop    edx
  40f035:	or     eax,0xfd9b0178
  40f03a:	daa    
  40f03b:	xor    DWORD PTR [eax+0x4e0a871e],0x46
  40f042:	adc    al,0xe1
  40f044:	add    eax,0x4cdfd187
  40f049:	dec    ecx
  40f04a:	out    0x42,eax
  40f04c:	daa    
  40f04d:	adc    eax,0xb3ce2120
  40f052:	inc    esp
  40f053:	and    al,BYTE PTR [esi]
  40f055:	pop    eax
  40f056:	arpl   WORD PTR [ebx],cx
  40f058:	ins    DWORD PTR es:[edi],dx
  40f059:	retf   
  40f05a:	scas   eax,DWORD PTR es:[edi]
  40f05b:	(bad)  
  40f05c:	push   edx
  40f05d:	sub    eax,0x771bf4b
  40f062:	pop    edi
  40f063:	xchg   esp,eax
  40f064:	int    0x25
  40f066:	scas   al,BYTE PTR es:[edi]
  40f067:	sbb    eax,0xeadcf278
  40f06c:	jmp    0x11cc:0xaf1e6f89
  40f073:	sti    
  40f074:	mov    dh,0x21
  40f076:	cld    
  40f077:	mov    bp,0x3e5e
  40f07b:	stos   BYTE PTR es:[edi],al
  40f07c:	pop    ecx
  40f07d:	cld    
  40f07e:	mov    ds:0xb30118bf,al
  40f083:	or     bl,BYTE PTR [ebp-0x71e877e1]
  40f089:	into   
  40f08a:	stc    
  40f08b:	iret   
  40f08c:	and    ecx,edi
  40f08e:	inc    edx
  40f08f:	inc    edi
  40f090:	or     eax,0xdb8563e2
  40f095:	push   ebx
  40f096:	push   ebp
  40f097:	cmp    eax,0x9b410517
  40f09c:	std    
  40f09d:	cmp    eax,0x2d42a45d
  40f0a2:	push   esp
  40f0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a4:	xchg   esi,eax
  40f0a5:	shr    ah,cl
  40f0a7:	and    eax,0x39c5750c
  40f0ac:	imul   esp,esi,0xf2cb926e
  40f0b2:	and    al,0x59
  40f0b4:	test   DWORD PTR [ebx+0x4b],0x86e634b0
  40f0bb:	rcl    BYTE PTR [ecx+esi*2],cl
  40f0be:	xchg   ecx,eax
  40f0bf:	ins    BYTE PTR es:[edi],dx
  40f0c0:	fild   QWORD PTR [ebp+0x49fef0a7]
  40f0c6:	shr    BYTE PTR [bp+di+0x4b],cl
  40f0ca:	out    0x8e,al
  40f0cc:	inc    esp
  40f0cd:	mov    ds:0x3225a33,eax
  40f0d2:	aas    
  40f0d3:	shr    DWORD PTR ds:0xdbd86c40,0x84
  40f0da:	mov    esp,0x3d610f
  40f0df:	pop    edx
  40f0e0:	mov    al,0x7a
  40f0e2:	xchg   ebx,eax
  40f0e3:	mov    dh,0xe3
  40f0e5:	mov    ecx,0x10443885
  40f0ea:	mov    edi,0xb685a712
  40f0ef:	pop    esi
  40f0f0:	mov    edx,0x2268079
  40f0f5:	out    dx,eax
  40f0f6:	daa    
  40f0f7:	pop    edx
  40f0f8:	add    BYTE PTR [ecx-0x5fda72eb],ch
  40f0fe:	xchg   esp,eax
  40f0ff:	sbb    DWORD PTR [esi],edx
  40f101:	gs push cs
  40f103:	push   ecx
  40f104:	mov    ds:0xb59e33b8,eax
  40f109:	lahf   
  40f10a:	dec    edx
  40f10b:	adc    ecx,DWORD PTR [edx]
  40f10d:	xchg   esp,eax
  40f10e:	add    al,0xc7
  40f110:	push   edi
  40f111:	imul   edx,ebp,0x1c2061ef
  40f117:	cmp    BYTE PTR [eax+0x36255dba],0xe4
  40f11e:	in     al,0xf1
  40f120:	and    al,ch
  40f122:	(bad)  
  40f123:	pop    ecx
  40f124:	xor    BYTE PTR [edi+edi*8],0x81
  40f128:	call   0x77a2631
  40f12d:	sahf   
  40f12e:	cmc    
  40f12f:	cmp    eax,DWORD PTR [edx-0x6d3b00cc]
  40f135:	cmp    DWORD PTR [ebx+0x47],ecx
  40f138:	jecxz  0x40f0e6
  40f13a:	pushf  
  40f13b:	scas   eax,DWORD PTR es:[edi]
  40f13c:	imul   edx,DWORD PTR [ebx-0x5b],0x8fc9fde5
  40f143:	xor    ebx,0xa675b9db
  40f149:	in     al,0xce
  40f14b:	outs   dx,BYTE PTR ds:[esi]
  40f14c:	cmp    DWORD PTR [esi-0x2551a748],ebp
  40f152:	lods   eax,DWORD PTR ds:[esi]
  40f153:	jno    0x40f150
  40f155:	hlt    
  40f156:	sub    edx,DWORD PTR [ebx-0x66]
  40f159:	mov    ebx,0xcc7a8255
  40f15e:	pop    ds
  40f15f:	into   
  40f160:	or     al,0x47
  40f162:	mul    DWORD PTR [esi-0x65ee4b96]
  40f168:	outs   dx,DWORD PTR ds:[esi]
  40f169:	xchg   bl,cl
  40f16b:	jp     0xd6bbde67
  40f171:	sbb    bh,bh
  40f173:	in     al,0xa9
  40f175:	or     esp,DWORD PTR [edi]
  40f177:	xchg   esp,eax
  40f178:	add    DWORD PTR [esp+eax*1],ebx
  40f17b:	dec    edx
  40f17c:	adc    eax,0x996799da
  40f181:	imul   edi,DWORD PTR [ebx+esi*1-0x8],0xb879284
  40f189:	nop
  40f18a:	sbb    ebx,DWORD PTR [ebx-0x44]
  40f18d:	mov    WORD PTR [ebx-0x69],es
  40f190:	xor    eax,0x83457220
  40f195:	enter  0x17b5,0x7b
  40f199:	mul    ah
  40f19b:	sub    BYTE PTR [ecx],dh
  40f19d:	test   eax,0x47dcee86
  40f1a2:	dec    eax
  40f1a3:	sub    ebp,DWORD PTR ss:[esi]
  40f1a6:	xchg   ebx,eax
  40f1a7:	(bad)  
  40f1a8:	loope  0x40f1be
  40f1aa:	adc    BYTE PTR [edi],ch
  40f1ac:	push   ds
  40f1ad:	xchg   dh,cl
  40f1af:	inc    esp
  40f1b0:	mov    ebp,0x36db227c
  40f1b5:	or     DWORD PTR [ecx+0x73],0x5a
  40f1b9:	dec    eax
  40f1ba:	pushf  
  40f1bb:	(bad)
  40f1c0:	(bad)
  40f1c3:	icebp  
  40f1c4:	in     eax,dx
  40f1c5:	jg     0x40f1f7
  40f1c7:	push   ebp
  40f1c8:	imul   BYTE PTR [ebx-0x53d781d7]
  40f1ce:	jle    0x40f161
  40f1d0:	adc    BYTE PTR [edx+0x48aed4b9],bh
  40f1d6:	jae    0x40f1aa
  40f1d8:	loop   0x40f235
  40f1da:	cld    
  40f1db:	fadd   QWORD PTR gs:[eax]
  40f1de:	and    BYTE PTR [eax+0xb],ah
  40f1e1:	xor    edx,DWORD PTR ds:0x718f33df
  40f1e7:	mov    eax,ds:0x4cc2c98e
  40f1ec:	push   ebx
  40f1ed:	mov    al,0xff
  40f1ef:	test   BYTE PTR [edi+0x4d84d183],dl
  40f1f5:	dec    esp
  40f1f6:	mov    esi,0xc702f015
  40f1fb:	mov    bl,0xe9
  40f1fd:	cwde   
  40f1fe:	add    al,0xa9
  40f200:	stos   DWORD PTR es:[edi],eax
  40f201:	out    0xb,eax
  40f203:	daa    
  40f204:	inc    ebx
  40f205:	sbb    al,0x29
  40f207:	and    eax,0x6b4cda7d
  40f20c:	imul   edx,DWORD PTR [edx-0x11c9e4f4],0xffffffd8
  40f213:	cmp    eax,esp
  40f215:	in     al,dx
  40f216:	(bad)  
  40f217:	shl    DWORD PTR [ecx+0x43],1
  40f21a:	sub    al,0x92
  40f21c:	sub    dl,BYTE PTR [ebx-0x42]
  40f21f:	mov    eax,ds:0xc91131e4
  40f224:	imul   esp,edi,0x8148e85c
  40f22a:	adc    DWORD PTR [esi-0x23ed59ff],edi
  40f230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f231:	ficom  WORD PTR [ecx+0x28]
  40f234:	leave  
  40f235:	lahf   
  40f236:	add    BYTE PTR [edi],ah
  40f238:	jge    0x40f1d2
  40f23a:	push   ds
  40f23b:	and    eax,esi
  40f23d:	out    dx,eax
  40f23e:	int3   
  40f23f:	sbb    eax,edx
  40f241:	aaa    
  40f242:	inc    ecx
  40f243:	mov    ebx,0x37d371a3
  40f248:	inc    esi
  40f249:	sub    ecx,DWORD PTR [ebp+0x12]
  40f24c:	out    dx,al
  40f24d:	dec    ebx
  40f24e:	sar    DWORD PTR [ebx-0x26dba153],0x9
  40f255:	sbb    esp,DWORD PTR ds:0x569916e
  40f25b:	jno    0x40f1fa
  40f25d:	sub    ebp,DWORD PTR [eax+0x6beacbed]
  40f263:	lods   eax,DWORD PTR ds:[esi]
  40f264:	jno    0x40f2b2
  40f266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f267:	and    al,0xfe
  40f269:	call   0x45c5020a
  40f26e:	jns    0x40f26c
  40f270:	dec    esp
  40f271:	push   ss
  40f272:	fsubr  QWORD PTR [ebp-0x4c87d548]
  40f278:	ret    0x4e77
  40f27b:	aas    
  40f27c:	pop    edi
  40f27d:	sub    eax,0x24c03c4b
  40f282:	cli    
  40f283:	sbb    esi,DWORD PTR [ecx+0x2a]
  40f286:	jg     0x40f285
  40f288:	mov    esp,0x8f9c4e58
  40f28d:	push   0xffffff8f
  40f28f:	cld    
  40f290:	sub    esi,eax
  40f292:	jne    0x40f305
  40f294:	mov    BYTE PTR [ebp+0x58],dl
  40f297:	call   DWORD PTR [ecx]
  40f299:	push   ds
  40f29a:	fcomp  QWORD PTR ds:0x859e2e9d
  40f2a0:	dec    ecx
  40f2a1:	cwd    
  40f2a3:	dec    esi
  40f2a4:	xlat   BYTE PTR ds:[ebx]
  40f2a5:	std    
  40f2a6:	pop    ebx
  40f2a7:	das    
  40f2a8:	icebp  
  40f2a9:	xor    DWORD PTR [edx],0x16
  40f2ac:	cmp    DWORD PTR [eax+0x64],esp
  40f2af:	test   eax,0x1bc04ecf
  40f2b4:	fist   WORD PTR [edi]
  40f2b6:	ds je  0x40f335
  40f2b9:	xchg   edi,eax
  40f2ba:	adc    BYTE PTR [esi+0x3a],0x57
  40f2be:	xlat   BYTE PTR ds:[ebx]
  40f2bf:	adc    al,0x6b
  40f2c1:	inc    eax
  40f2c2:	push   edi
  40f2c3:	sbb    BYTE PTR es:[ebx],ah
  40f2c6:	mov    dl,0x43
  40f2c8:	cmp    edi,DWORD PTR [ecx+0x48]
  40f2cb:	xlat   BYTE PTR ds:[ebx]
  40f2cc:	neg    DWORD PTR [edi-0x61]
  40f2cf:	sbb    al,0x5
  40f2d1:	and    al,0x3
  40f2d3:	arpl   WORD PTR [edi+0x41648e53],si
  40f2d9:	jo     0x40f359
  40f2db:	(bad)  
  40f2dc:	pushf  
  40f2dd:	mov    ch,0xc9
  40f2df:	out    0x93,al
  40f2e1:	add    DWORD PTR [ebx-0x3aaa29e1],ebx
  40f2e7:	pop    ecx
  40f2e8:	and    dh,BYTE PTR [esi+0x64e06610]
  40f2ee:	shld   ebx,edi,0x1f
  40f2f2:	imul   esi,DWORD PTR ds:0xea54e6fb,0xb74c8134
  40f2fc:	push   ebx
  40f2fd:	inc    ebp
  40f2fe:	and    cl,BYTE PTR [esi+edi*8+0x3e44c9f1]
  40f305:	and    DWORD PTR [ecx+eax*2-0x77],ecx
  40f309:	sti    
  40f30a:	add    BYTE PTR [ebx+esi*8-0x2e],ah
  40f30e:	sub    DWORD PTR ds:0xc28fea04,edi
  40f314:	jg     0x40f37e
  40f316:	iret   
  40f317:	les    edi,FWORD PTR [edx]
  40f319:	jmp    0x6149:0x3ae31023
  40f320:	test   DWORD PTR [edi-0x78],edx
  40f323:	pusha  
  40f324:	or     BYTE PTR [ecx-0x2bdc5c95],bl
  40f32a:	xchg   edi,eax
  40f32b:	mov    eax,ds:0x4b0fe3fb
  40f330:	stos   DWORD PTR es:[edi],eax
  40f331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f332:	adc    al,0xdf
  40f334:	mov    edx,0xc40cbd69
  40f339:	fcomp  QWORD PTR [edx]
  40f33b:	jle    0x40f3b4
  40f33d:	fdiv   DWORD PTR [edi-0x67]
  40f340:	inc    ebx
  40f341:	pop    ss
  40f342:	nop
  40f343:	rcr    BYTE PTR [edi+ebp*2-0x63],1
  40f347:	adc    bh,dl
  40f349:	sti    
  40f34a:	sbb    eax,esp
  40f34c:	sub    eax,0x674d9b71
  40f351:	jnp    0x40f32f
  40f353:	scas   eax,DWORD PTR es:[edi]
  40f354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f355:	daa    
  40f356:	jae    0x40f399
  40f358:	nop
  40f359:	mov    ebx,fs
  40f35b:	and    DWORD PTR [eax+esi*8-0x443c8978],0x6ee86d83
  40f366:	ins    DWORD PTR es:[edi],dx
  40f367:	in     al,dx
  40f368:	shr    BYTE PTR [esi],0x5e
  40f36b:	cld    
  40f36c:	mov    dl,0x6f
  40f36e:	and    al,0x6e
  40f370:	sbb    BYTE PTR [edi-0x6d],ch
  40f373:	xor    ebx,DWORD PTR [eax]
  40f375:	adc    al,0x1f
  40f377:	jle    0x40f351
  40f379:	sti    
  40f37a:	push   ebp
  40f37b:	dec    esi
  40f37c:	in     al,dx
  40f37d:	adc    DWORD PTR [eax],edx
  40f37f:	ins    BYTE PTR es:[edi],dx
  40f380:	jno    0x40f378
  40f382:	fisttp WORD PTR [eax]
  40f384:	outs   dx,BYTE PTR ds:[esi]
  40f385:	(bad)  
  40f386:	mov    gs,WORD PTR [ecx-0x50]
  40f389:	shr    ecx,cl
  40f38b:	pop    esp
  40f38c:	mov    ecx,esi
  40f38e:	push   ds
  40f38f:	gs pop esi
  40f391:	add    eax,0x96807fe2
  40f396:	ficomp WORD PTR [edi]
  40f398:	mov    ah,0x56
  40f39a:	and    eax,0x2e3d9789
  40f39f:	sub    edi,DWORD PTR ss:[ecx+0x6d]
  40f3a3:	add    ch,BYTE PTR [edx+ecx*1+0x2]
  40f3a7:	sbb    ebx,DWORD PTR ds:0x7ef1a4f2
  40f3ad:	xor    esi,DWORD PTR [ecx]
  40f3af:	aas    
  40f3b0:	icebp  
  40f3b1:	ss jle 0x40f3d2
  40f3b4:	xchg   esp,eax
  40f3b5:	dec    ecx
  40f3b6:	and    al,0x82
  40f3b8:	cwde   
  40f3b9:	retf   
  40f3ba:	test   dh,bh
  40f3bc:	pop    eax
  40f3bd:	and    BYTE PTR [edi-0x470876b8],0x4d
  40f3c4:	xor    edi,edi
  40f3c6:	popf   
  40f3c7:	lss    edx,FWORD PTR [ebx+0x1782d7eb]
  40f3ce:	pop    edx
  40f3cf:	jmp    0x7d4e:0xcf3a668a
  40f3d6:	add    DWORD PTR [ebx],esi
  40f3d8:	in     eax,dx
  40f3d9:	ret    0x8f70
  40f3dc:	call   0x3c7b21cf
  40f3e1:	or     DWORD PTR [esi+eax*2+0x5bf5653e],0x4f
  40f3e9:	or     ebx,ebx
  40f3eb:	hlt    
  40f3ec:	or     BYTE PTR es:[edx+ebx*4+0x45],ch
  40f3f1:	xchg   edi,eax
  40f3f2:	fisttp WORD PTR [ebp-0x3]
  40f3f5:	xchg   ecx,eax
  40f3f6:	jg     0x40f437
  40f3f8:	inc    esi
  40f3f9:	xchg   ebx,eax
  40f3fa:	push   edx
  40f3fb:	inc    ebp
  40f3fc:	lock mov ch,0x22
  40f3ff:	arpl   WORD PTR [eax+0x39],sp
  40f402:	inc    esi
  40f403:	sbb    BYTE PTR [ebx+ebx*2-0x76e551a4],bh
  40f40a:	jbe    0x40f433
  40f40c:	retf   0x591c
  40f40f:	sub    dl,BYTE PTR [ebx-0x6d0e3da8]
  40f415:	inc    edi
  40f416:	mov    ch,0xd0
  40f418:	mov    edx,0x8df25d13
  40f41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f41e:	mov    esp,0x6f54b983
  40f423:	jo     0x40f3fe
  40f425:	mov    ebp,0xcf3184a8
  40f42a:	(bad)  
  40f42b:	cld    
  40f42c:	cli    
  40f42d:	push   ss
  40f42e:	inc    edi
  40f42f:	gs fmul st(7),st
  40f432:	repz jp 0x40f3f9
  40f435:	jecxz  0x40f3dd
  40f437:	dec    edx
  40f438:	add    eax,0xad152fa0
  40f43d:	sahf   
  40f43e:	pop    edx
  40f43f:	cs jmp 0x40f3e4
  40f442:	mov    esi,0xbc419fb3
  40f447:	sbb    cl,BYTE PTR [edx+0xa6c9820]
  40f44d:	in     eax,dx
  40f44e:	jne    0x40f3dc
  40f450:	rcr    BYTE PTR [ebp+0x2f],1
  40f453:	call   0xf82c:0x26c1e14c
  40f45a:	push   ebx
  40f45b:	loopne 0x40f44e
  40f45d:	push   esp
  40f45e:	jg     0x40f406
  40f460:	scas   eax,DWORD PTR es:[edi]
  40f461:	adc    dh,BYTE PTR ds:0xb376ffbc
  40f467:	sub    BYTE PTR [edx+edi*2+0xa],dl
  40f46b:	mov    edx,0x75d4d746
  40f470:	or     eax,0xdc998f21
  40f475:	int    0x13
  40f477:	jne    0x40f4a6
  40f479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f47a:	xor    DWORD PTR [ecx+0x65cb77a4],ebx
  40f480:	or     DWORD PTR [esp+eiz*8],edi
  40f483:	xchg   ebp,eax
  40f484:	xchg   edi,eax
  40f485:	xor    dh,ah
  40f487:	and    BYTE PTR [esi],cl
  40f489:	sbb    al,dl
  40f48b:	out    0xac,al
  40f48d:	add    BYTE PTR [edx-0x3813ba77],dh
  40f493:	add    eax,0x42a2aa
  40f498:	pop    ds
  40f499:	add    BYTE PTR [eax],al
  40f49b:	add    BYTE PTR [ebx+0x42a2aa3d],al
  40f4a1:	add    BYTE PTR [eax],al
  40f4a3:	je     0x40f4e0
  40f4a9:	cmp    DWORD PTR ds:0x42a2aa,0x2b
  40f4b0:	jg     0x40f4e0
  40f4b6:	jmp    0x40f4ce
  40f4bb:	push   DWORD PTR [ebp-0x20]
  40f4be:	push   0x68ce
  40f4c3:	push   0x13fc
  40f4c8:	call   DWORD PTR ds:0x42a40e
  40f4ce:	mov    ecx,DWORD PTR ds:0x42a2aa
  40f4d4:	dec    ecx
  40f4d5:	mov    DWORD PTR ds:0x42a2aa,ecx
  40f4db:	jmp    0x40f49c
  40f4e0:	mov    eax,DWORD PTR [ebp-0x4]
  40f4e3:	mov    ecx,DWORD PTR ds:0x42a2ea
  40f4e9:	adc    ecx,DWORD PTR ds:0x42a2fe
  40f4ef:	mov    DWORD PTR ds:0x42a2ea,ecx
  40f4f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f4f8:	sub    DWORD PTR ds:0x42a256,0x42a2c6
  40f502:	xor    eax,esi
  40f504:	xor    DWORD PTR ds:0x42a27a,0x42a276
  40f50e:	add    eax,edi
  40f510:	mov    DWORD PTR ds:0x42a26a,0x50b9
  40f51a:	cmp    ecx,eax
  40f51c:	je     0x413d1d
  40f522:	xor    ecx,DWORD PTR ds:0x42a2ee
  40f528:	mov    eax,DWORD PTR [ebp-0x14]
  40f52b:	xor    ecx,0x6e1c
  40f531:	mov    eax,DWORD PTR [eax+0x18]
  40f534:	mov    DWORD PTR [ebp-0x24],eax
  40f537:	mov    eax,DWORD PTR [ebp-0x14]
  40f53a:	xor    ecx,ecx
  40f53c:	or     ecx,DWORD PTR ds:0x42a29e
  40f542:	xor    DWORD PTR ds:0x42a2aa,ecx
  40f548:	mov    ecx,DWORD PTR [ebp+0x8]
  40f54b:	xor    DWORD PTR ds:0x42a2e6,0x42a2f6
  40f555:	add    ecx,DWORD PTR [eax+0x20]
  40f558:	mov    DWORD PTR [ebp-0x2c],ecx
  40f55b:	mov    eax,ds:0x42a2d6
  40f560:	and    DWORD PTR ds:0x42a29e,eax
  40f566:	mov    eax,DWORD PTR [ebp-0x14]
  40f569:	mov    ecx,DWORD PTR [ebp+0x8]
  40f56c:	adc    DWORD PTR ds:0x42a2c2,0xc51
  40f576:	add    ecx,DWORD PTR [eax+0x24]
  40f579:	xor    DWORD PTR ds:0x42a28a,0x42a29e
  40f583:	mov    DWORD PTR [ebp-0x34],ecx
  40f586:	mov    eax,DWORD PTR [ebp-0x14]
  40f589:	mov    ecx,DWORD PTR [ebp+0x8]
  40f58c:	add    ecx,DWORD PTR [eax+0x1c]
  40f58f:	mov    DWORD PTR [ebp-0x14],ecx
  40f592:	jmp    0x411969
  40f597:	mov    eax,DWORD PTR [ebp-0x2c]
  40f59a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f59d:	add    ecx,DWORD PTR [eax+ebx*4]
  40f5a0:	mov    DWORD PTR [ebp-0x28],ecx
  40f5a3:	mov    eax,DWORD PTR [ebp-0x4]
  40f5a6:	mov    ecx,DWORD PTR [ebp-0x28]
  40f5a9:	xor    eax,esi
  40f5ab:	add    eax,edi
  40f5ad:	cmp    ecx,eax
  40f5af:	je     0x411969
  40f5b5:	jmp    0x41195a
  40f5ba:	mov    eax,DWORD PTR [ebp-0x4]
  40f5bd:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5c0:	xor    eax,esi
  40f5c2:	add    eax,edi
  40f5c4:	cmp    ecx,eax
  40f5c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f5c9:	je     0x413d20
  40f5cf:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5d2:	xor    eax,esi
  40f5d4:	add    eax,edi
  40f5d6:	cmp    ecx,eax
  40f5d8:	je     0x413d29
  40f5de:	jmp    0x41195a
  40f5e3:	or     al,BYTE PTR es:[edx-0x17]
  40f5e7:	inc    edx
  40f5e8:	mov    eax,ds:0x1d8d8286
  40f5ed:	ins    DWORD PTR es:[edi],dx
  40f5ee:	mov    al,ds:0xedc49093
  40f5f3:	jno    0x40f59d
  40f5f5:	add    DWORD PTR [ebx-0x7c7ca1de],0x25
  40f5fc:	sub    cl,ah
  40f5fe:	pop    ds
  40f5ff:	fisttp DWORD PTR [esi-0x2c]
  40f602:	pop    edx
  40f603:	cmp    ah,al
  40f605:	and    BYTE PTR [edx+0x29],cl
  40f608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f609:	stos   DWORD PTR es:[edi],eax
  40f60a:	into   
  40f60b:	fnsave [eax-0x192533b7]
  40f611:	mov    bl,0x51
  40f613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f614:	mov    al,ds:0x72c74532
  40f619:	pop    eax
  40f61a:	sbb    edi,DWORD PTR [ebx]
  40f61c:	jmp    0x4a6c:0xfbc19301
  40f623:	push   eax
  40f624:	adc    ah,dh
  40f626:	inc    ebp
  40f627:	cmp    DWORD PTR [ecx-0x660f0412],esp
  40f62d:	or     al,0x35
  40f62f:	sbb    BYTE PTR [ecx-0x41],al
  40f632:	xchg   edx,eax
  40f633:	jno    0x40f6aa
  40f635:	and    cl,BYTE PTR [ebx+0x348425a3]
  40f63b:	inc    edi
  40f63c:	dec    ecx
  40f63d:	std    
  40f63e:	sbb    BYTE PTR [ecx+0x23],ah
  40f641:	inc    esp
  40f642:	xor    dl,bl
  40f644:	enter  0xa31f,0x4f
  40f648:	mov    esi,0xc1da9709
  40f64d:	jnp    0x40f5e8
  40f64f:	popa   
  40f650:	repnz imul ebp,DWORD PTR [esi],0xffffff84
  40f654:	bound  eax,QWORD PTR [edi]
  40f656:	fld    QWORD PTR [ecx+0xc7aed0e]
  40f65c:	add    DWORD PTR [ecx+0x161059b2],edx
  40f662:	test   al,0x18
  40f664:	or     eax,0x544e1689
  40f669:	out    dx,eax
  40f66a:	or     cl,dl
  40f66c:	retf   0x1366
  40f66f:	inc    BYTE PTR [esi]
  40f671:	dec    ebp
  40f672:	imul   esi,DWORD PTR [esi+0x2c],0x237cfa59
  40f679:	aaa    
  40f67a:	jmp    0x40f665
  40f67c:	xchg   ebx,eax
  40f67d:	or     DWORD PTR [ebx-0x4f],ebx
  40f680:	(bad)  
  40f681:	sbb    edi,DWORD PTR [edx]
  40f683:	pop    esi
  40f684:	inc    ebx
  40f685:	cmc    
  40f686:	jno    0x40f64a
  40f688:	mov    DWORD PTR [edi+0x4a],ebp
  40f68b:	jmp    0xf5fd32a3
  40f690:	mov    dh,0x16
  40f692:	out    dx,al
  40f693:	pushf  
  40f694:	loope  0x40f69d
  40f696:	sub    eax,0xa81d5cc3
  40f69b:	mov    WORD PTR [esp+esi*1-0x42],ss
  40f69f:	xor    dh,BYTE PTR [ebx]
  40f6a1:	test   eax,0x9e913b8d
  40f6a6:	xchg   esp,eax
  40f6a7:	jb     0x40f66e
  40f6a9:	dec    edx
  40f6aa:	cld    
  40f6ab:	loopne 0x40f6ba
  40f6ad:	int3   
  40f6ae:	and    edi,DWORD PTR [ecx+edi*1]
  40f6b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b2:	arpl   WORD PTR [ebx+0x78791940],bp
  40f6b8:	jmp    0x40f66f
  40f6ba:	repnz inc ebp
  40f6bc:	fs in  al,dx
  40f6be:	je     0x40f711
  40f6c0:	mov    al,0x11
  40f6c2:	mov    dh,0x92
  40f6c4:	sub    DWORD PTR [ebp-0x21],esi
  40f6c7:	addr16 cwde 
  40f6c9:	adc    edi,DWORD PTR [ebp+0x2972001e]
  40f6cf:	fisttp QWORD PTR [ebx]
  40f6d1:	xchg   ebx,eax
  40f6d2:	mov    ah,BYTE PTR ds:0x7e996833
  40f6d8:	and    ebp,DWORD PTR [edi]
  40f6da:	ror    BYTE PTR [esi-0x7b3bde43],0x19
  40f6e1:	nop
  40f6e2:	pop    ebx
  40f6e3:	add    eax,0x3432ceb8
  40f6e8:	pop    ds
  40f6e9:	mov    eax,ds:0x26602e7
  40f6ee:	adc    ebp,DWORD PTR [ebx-0xa]
  40f6f1:	frstor [edi+0x38]
  40f6f4:	pop    DWORD PTR [eax+eiz*1+0x6417912]
  40f6fb:	mov    eax,ds:0x834062a2
  40f700:	jmp    0x5415468b
  40f705:	cs pop esi
  40f707:	dec    edi
  40f709:	mov    eax,cs
  40f70b:	xlat   BYTE PTR ds:[ebx]
  40f70c:	and    esi,DWORD PTR [esi+0x3bd1d70b]
  40f712:	pop    edi
  40f713:	or     DWORD PTR [esi],esi
  40f715:	fisub  DWORD PTR [ebx]
  40f717:	nop
  40f718:	lahf   
  40f719:	fdiv   DWORD PTR [ecx-0x4aa5f806]
  40f71f:	imul   ebp,DWORD PTR ds:0xe77c3bc1,0x40
  40f726:	loope  0x40f767
  40f728:	and    BYTE PTR [ecx-0x789136d5],al
  40f72e:	mov    WORD PTR [esi],cs
  40f730:	and    esp,DWORD PTR [ebp-0x23ba7ffc]
  40f736:	ins    DWORD PTR es:[edi],dx
  40f737:	dec    ebx
  40f738:	jg     0x40f6e8
  40f73a:	xchg   edx,eax
  40f73b:	pop    esp
  40f73c:	xor    dh,BYTE PTR [eax-0x2]
  40f73f:	retf   
  40f740:	dec    esp
  40f741:	pop    es
  40f742:	mov    BYTE PTR [esi+edi*8+0x165fac94],bl
  40f749:	aam    0x91
  40f74b:	ror    ah,1
  40f74d:	mov    al,0x94
  40f74f:	jns    0x40f788
  40f751:	pop    ecx
  40f752:	fld    DWORD PTR [eax+0x12]
  40f755:	inc    esi
  40f756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f757:	add    BYTE PTR [edx-0x106ee2a2],ch
  40f75d:	mov    al,ds:0x3c426cc3
  40f762:	adc    al,0xbd
  40f764:	jo     0x40f738
  40f766:	cli    
  40f767:	xchg   cl,dl
  40f769:	sysret 
  40f76b:	bound  edi,QWORD PTR [ebx+0x5a0c7bbe]
  40f771:	shl    DWORD PTR [edx+0x39],1
  40f774:	fs cdq 
  40f776:	(bad)  
  40f777:	in     al,dx
  40f778:	scas   eax,DWORD PTR es:[edi]
  40f779:	fistp  WORD PTR gs:[eax+0x51]
  40f77d:	es iret 
  40f77f:	push   0xadd4a26a
  40f784:	(bad)  
  40f785:	out    dx,eax
  40f786:	sti    
  40f787:	call   0xfe223944
  40f78c:	mov    bl,BYTE PTR [edi-0x66f031b6]
  40f792:	and    DWORD PTR [ebp-0x5ab2710b],edi
  40f798:	mov    ecx,0xf35a74e7
  40f79d:	clc    
  40f79e:	inc    esp
  40f79f:	adc    DWORD PTR [ecx],edx
  40f7a1:	or     eax,0xea414406
  40f7a6:	in     al,dx
  40f7a7:	cwde   
  40f7a8:	or     ch,BYTE PTR [edx-0x221fb653]
  40f7ae:	les    eax,FWORD PTR [ebx+0x10ea89f8]
  40f7b4:	jmp    0xd8286ac5
  40f7b9:	dec    ebp
  40f7ba:	adc    DWORD PTR [edi-0x1db83ec2],edi
  40f7c0:	xchg   ebp,eax
  40f7c1:	xor    DWORD PTR [esp+ebx*8-0x34],ebx
  40f7c5:	push   ecx
  40f7c6:	pusha  
  40f7c7:	xchg   DWORD PTR [edi+edi*8-0x60],edi
  40f7cb:	mov    ds:0x43c8cf10,eax
  40f7d0:	repnz cmp eax,0x29869fe2
  40f7d6:	inc    ecx
  40f7d7:	push   eax
  40f7d8:	cmp    al,0x27
  40f7da:	or     DWORD PTR [ebp-0x48],0xfbe560f7
  40f7e1:	sub    cl,bh
  40f7e3:	adc    al,0xf1
  40f7e5:	xchg   BYTE PTR [esi+esi*2+0x781cd4ba],bh
  40f7ec:	ss cmp ch,cl
  40f7ef:	push   esp
  40f7f0:	push   ebx
  40f7f1:	add    dh,ch
  40f7f3:	in     al,dx
  40f7f4:	pop    es
  40f7f5:	shl    DWORD PTR [edi+0x1a7dd2e4],0x7
  40f7fc:	jmp    0xd866cd0a
  40f801:	jae    0x40f846
  40f803:	gs inc ebp
  40f805:	call   0xcdfc:0xd7429739
  40f80c:	add    al,0x8e
  40f80e:	(bad)  
  40f811:	mov    bl,0xc7
  40f813:	push   ebp
  40f814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f815:	fadd   st,st(0)
  40f817:	or     BYTE PTR [ecx],ch
  40f819:	fisub  DWORD PTR [eax-0x423d56e7]
  40f81f:	addr16 int 0x75
  40f822:	add    eax,DWORD PTR [esi]
  40f824:	ss or  dh,0x7d
  40f828:	aaa    
  40f829:	je     0x40f878
  40f82b:	and    eax,0xa1db4e21
  40f830:	rol    BYTE PTR [esi-0x5d39c58b],cl
  40f836:	sub    edx,ecx
  40f838:	xor    BYTE PTR [eax+0x1c827d46],0xde
  40f83f:	call   0xd8d9:0x7ce7e656
  40f846:	push   edx
  40f847:	or     eax,0x44d3f37a
  40f84c:	iret   
  40f84d:	and    eax,0x8ae112f3
  40f852:	call   0xe6e157de
  40f857:	add    eax,DWORD PTR [ebx-0x3e]
  40f85a:	sub    ah,BYTE PTR [edi]
  40f85c:	jl     0x40f83b
  40f85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f85f:	push   eax
  40f860:	imul   ecx,esp,0x4a69cd4a
  40f866:	or     bl,BYTE PTR [ebp-0x41]
  40f869:	arpl   WORD PTR [edi-0x5bd4f529],sp
  40f86f:	mov    esi,0xa8e427ae
  40f874:	(bad)  
  40f876:	or     BYTE PTR [ebx-0x58],bl
  40f879:	ret    
  40f87a:	jb     0x40f8de
  40f87c:	out    0xe2,eax
  40f87e:	fsubp  st(3),st
  40f880:	test   DWORD PTR [ecx],esi
  40f882:	stos   BYTE PTR es:[edi],al
  40f883:	lods   al,BYTE PTR ds:[esi]
  40f884:	pushf  
  40f885:	cmp    BYTE PTR [ecx+0x38f30988],bh
  40f88b:	test   eax,0x5bc2994
  40f890:	and    dh,BYTE PTR [ecx]
  40f892:	repnz sbb eax,0x90343279
  40f898:	jl     0x40f864
  40f89a:	jnp    0x40f827
  40f89c:	sahf   
  40f89d:	jle    0x40f84b
  40f89f:	in     al,0x22
  40f8a1:	das    
  40f8a2:	ret    
  40f8a3:	call   0xc3a05316
  40f8a8:	push   ebx
  40f8a9:	jnp    0x40f87a
  40f8ab:	rol    DWORD PTR [ebp+0x46d67e51],1
  40f8b1:	xchg   ecx,eax
  40f8b2:	and    al,0x43
  40f8b4:	mov    bl,0x1e
  40f8b6:	push   edx
  40f8b7:	aaa    
  40f8b8:	int    0x27
  40f8ba:	inc    edx
  40f8bb:	jecxz  0x40f86a
  40f8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8be:	mov    esi,0x24fa0707
  40f8c3:	jo     0x40f868
  40f8c5:	in     al,0x30
  40f8c7:	pop    ebx
  40f8c8:	adc    eax,0xd7343c7d
  40f8cd:	pop    ebp
  40f8ce:	pop    ds
  40f8cf:	arpl   WORD PTR [ecx+0x7c],bp
  40f8d2:	add    esp,esp
  40f8d4:	mov    eax,ds:0xeb253edd
  40f8d9:	sub    edx,edi
  40f8db:	test   BYTE PTR [ecx+0x169dc032],dh
  40f8e1:	clc    
  40f8e2:	int3   
  40f8e3:	adc    DWORD PTR [eax],0x9ec8d21f
  40f8e9:	sbb    eax,0x2fed1ca4
  40f8ee:	pop    edx
  40f8ef:	adc    eax,0x44e3c9b1
  40f8f4:	dec    ecx
  40f8f5:	add    eax,0x72b5e12e
  40f8fa:	lock xchg ebx,eax
  40f8fc:	mov    BYTE PTR ds:0x41079594,bh
  40f902:	aam    0xbb
  40f904:	jecxz  0x40f947
  40f906:	lods   eax,DWORD PTR ds:[esi]
  40f907:	xor    BYTE PTR [edx-0x29d29229],dh
  40f90d:	xchg   ebx,eax
  40f90e:	arpl   WORD PTR [edi-0x705c9433],di
  40f914:	loope  0x40f900
  40f916:	jno    0x40f91b
  40f918:	into   
  40f919:	hlt    
  40f91a:	int3   
  40f91b:	icebp  
  40f91c:	sar    esi,cl
  40f91e:	pop    eax
  40f91f:	jmp    0x40f90a
  40f921:	sbb    DWORD PTR [eax],edi
  40f923:	in     al,0x43
  40f925:	inc    eax
  40f926:	mov    ebp,DWORD PTR [ecx+0x5c]
  40f929:	or     eax,0x6fc2a47f
  40f92e:	enter  0x89a6,0x49
  40f932:	sub    eax,0x85ecd30f
  40f937:	ins    DWORD PTR es:[edi],dx
  40f938:	test   DWORD PTR ds:0xfbb7d2f7,0x5e71997e
  40f942:	not    DWORD PTR [ecx+esi*8-0x3e377f23]
  40f949:	mov    edi,0x4dfa6b84
  40f94e:	push   ebx
  40f94f:	xchg   ecx,eax
  40f950:	jno    0x40f92f
  40f952:	je     0x40f8d5
  40f954:	fs iret 
  40f956:	jge    0x40f93f
  40f958:	jp     0x40f970
  40f95a:	xchg   edi,eax
  40f95b:	retf   0x4c39
  40f95e:	inc    esp
  40f95f:	xor    al,0xc4
  40f961:	imul   esi,DWORD PTR [edi],0x34
  40f964:	cdq    
  40f965:	daa    
  40f966:	and    edx,DWORD PTR [edi+edx*2-0x3de120a9]
  40f96d:	push   0xffffffcc
  40f96f:	addr16 cmp eax,0xe4daeeef
  40f975:	add    ecx,DWORD PTR [eax]
  40f977:	jg     0x40f96e
  40f979:	mov    esp,ss
  40f97b:	jl     0x40f90d
  40f97d:	inc    edi
  40f97e:	pushf  
  40f97f:	mov    ch,0x76
  40f981:	and    BYTE PTR [ebp-0x29],bl
  40f984:	xchg   esp,eax
  40f985:	add    al,0xb2
  40f987:	jmp    0x92b4:0xebe11542
  40f98e:	retf   0xa01b
  40f991:	aaa    
  40f992:	pushf  
  40f993:	dec    edx
  40f994:	mov    ebp,0xf2072ace
  40f999:	loope  0x40f990
  40f99b:	stc    
  40f99c:	call   esp
  40f99e:	cdq    
  40f99f:	rol    ch,0x11
  40f9a2:	xchg   esi,eax
  40f9a3:	jno    0x40f9b2
  40f9a5:	add    DWORD PTR [ebx],edi
  40f9a7:	adc    BYTE PTR [edx+0x56b24f7f],cl
  40f9ad:	jae    0x40f9d5
  40f9af:	ins    DWORD PTR es:[edi],dx
  40f9b0:	mov    ebx,0x43af7d3f
  40f9b5:	cmp    eax,0xf80a3f28
  40f9ba:	leave  
  40f9bb:	or     eax,0xc5af3151
  40f9c0:	loopne 0x40f95f
  40f9c2:	jmp    0x645f:0xe5a4459
  40f9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ca:	stos   DWORD PTR es:[edi],eax
  40f9cb:	mov    al,ds:0xbc6998fd
  40f9d0:	adc    bl,bh
  40f9d2:	push   edi
  40f9d3:	lods   al,BYTE PTR ds:[esi]
  40f9d4:	and    esi,ebx
  40f9d6:	or     dh,0xf
  40f9d9:	push   ds
  40f9da:	popf   
  40f9db:	ins    DWORD PTR es:[edi],dx
  40f9dc:	push   edx
  40f9dd:	pop    ss
  40f9de:	adc    eax,0x8198b1e6
  40f9e3:	les    esi,FWORD PTR [ecx+eiz*4-0x3ef5ccee]
  40f9ea:	jmp    0x1380be61
  40f9ef:	shr    eax,cl
  40f9f1:	dec    ebx
  40f9f2:	ret    
  40f9f3:	sbb    eax,0x62c9df42
  40f9f8:	inc    ebx
  40f9f9:	scas   eax,DWORD PTR es:[edi]
  40f9fa:	retf   
  40f9fb:	push   edi
  40f9fc:	not    dl
  40f9fe:	lods   eax,DWORD PTR ds:[esi]
  40f9ff:	sub    eax,0xc07ec83b
  40fa04:	inc    edx
  40fa05:	inc    esi
  40fa06:	nop
  40fa07:	dec    esp
  40fa08:	stc    
  40fa09:	test   edx,ebp
  40fa0b:	sub    BYTE PTR [ecx+0x59],0xdf
  40fa0f:	jge    0x40fa15
  40fa11:	mov    esp,DWORD PTR [ebx-0x5fbfbb3d]
  40fa17:	fstp   DWORD PTR [ebx+0x30]
  40fa1a:	sahf   
  40fa1b:	rol    DWORD PTR [edx+0x424cf593],cl
  40fa21:	fild   DWORD PTR [ecx]
  40fa23:	test   BYTE PTR [ecx+0xcb55954],bh
  40fa29:	and    cl,BYTE PTR [esi-0x76]
  40fa2c:	das    
  40fa2d:	inc    ebx
  40fa2e:	retf   0xb178
  40fa31:	mov    esp,0xfdfbe093
  40fa36:	adc    bh,BYTE PTR [ebx-0x7a]
  40fa39:	adc    dh,BYTE PTR [ebx-0x29a38e18]
  40fa3f:	retf   
  40fa40:	push   esp
  40fa41:	gs dec edi
  40fa43:	jne    0x40f9c5
  40fa45:	test   dh,ah
  40fa47:	pop    esi
  40fa48:	push   esi
  40fa49:	cwde   
  40fa4a:	clc    
  40fa4b:	cmp    al,bl
  40fa4d:	shr    BYTE PTR [edi],1
  40fa4f:	push   ds
  40fa50:	jecxz  0x40fac7
  40fa52:	mov    al,ds:0x7bbbbd03
  40fa57:	fstp   TBYTE PTR [edx+0x2df6c537]
  40fa5d:	mov    bl,BYTE PTR [edi-0x2c]
  40fa60:	jne    0x40fa0a
  40fa62:	jmp    0x3fd74321
  40fa67:	call   0xb0e5:0x864aba4a
  40fa6e:	imul   esp,DWORD PTR [ecx+0x3f37ad67],0x99ff5ab6
  40fa78:	aad    0xd9
  40fa7a:	jb     0x40fa50
  40fa7c:	out    dx,al
  40fa7d:	add    ebx,edx
  40fa7f:	push   ebx
  40fa80:	stc    
  40fa81:	push   eax
  40fa82:	cdq    
  40fa83:	or     bh,BYTE PTR [edi]
  40fa85:	bound  ebp,QWORD PTR [eax]
  40fa87:	cs pusha 
  40fa89:	mov    WORD PTR [edi],cs
  40fa8b:	inc    DWORD PTR [ebp-0x736309a0]
  40fa91:	lods   al,BYTE PTR ds:[esi]
  40fa92:	mov    ch,0xbf
  40fa94:	add    ebp,DWORD PTR [ecx]
  40fa96:	scas   al,BYTE PTR es:[edi]
  40fa97:	popa   
  40fa98:	mov    dh,0x69
  40fa9a:	add    edi,eax
  40fa9c:	cwde   
  40fa9d:	fstp   DWORD PTR [eax+eiz*2+0x4e]
  40faa1:	retf   0x655c
  40faa4:	push   cs
  40faa5:	mov    ds:0xc713905f,al
  40faaa:	mov    ah,0xb1
  40faac:	xchg   BYTE PTR [eax+0x7d],bl
  40faaf:	(bad)  
  40fab0:	rcl    BYTE PTR [edx],cl
  40fab2:	mov    ecx,0x7f87a592
  40fab7:	ror    bh,1
  40fab9:	outs   dx,DWORD PTR ds:[esi]
  40faba:	xor    dh,0x3
  40fabd:	sahf   
  40fabe:	in     eax,dx
  40fabf:	int    0x1
  40fac1:	mov    al,ds:0xe1ff7bab
  40fac6:	(bad)  
  40fac7:	and    DWORD PTR [edi+ecx*8-0x1c],esp
  40facb:	fld    st(1)
  40facd:	retf   
  40face:	jle    0x40faf8
  40fad0:	cmp    al,0x10
  40fad2:	fcom   DWORD PTR [ecx+eiz*1-0x4530ce87]
  40fad9:	nop
  40fada:	mov    esi,0xcbd9861c
  40fadf:	push   ecx
  40fae0:	mov    esp,0x59afe543
  40fae5:	mov    al,ds:0xd832f404
  40faea:	int3   
  40faeb:	test   BYTE PTR [ebx],bh
  40faed:	aam    0x64
  40faef:	stos   BYTE PTR es:[edi],al
  40faf0:	sub    al,0x3a
  40faf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faf3:	dec    esp
  40faf4:	ret    
  40faf5:	cmp    eax,0x80687793
  40fafa:	cmc    
  40fafb:	test   DWORD PTR [ecx+0x47],ecx
  40fafe:	stos   BYTE PTR es:[di],al
  40fb00:	jae    0x40fa82
  40fb02:	jl     0x40faaf
  40fb04:	or     bh,BYTE PTR [eax]
  40fb06:	(bad)  
  40fb07:	hlt    
  40fb08:	lods   eax,DWORD PTR ds:[esi]
  40fb09:	repnz xchg ecx,eax
  40fb0b:	retf   0xef33
  40fb0e:	xor    al,0x5f
  40fb10:	dec    edi
  40fb11:	adc    BYTE PTR [eax-0x437c3534],dh
  40fb17:	test   BYTE PTR [esi-0x6614cc43],ch
  40fb1d:	push   es
  40fb1e:	test   DWORD PTR [ebp-0x2],esp
  40fb21:	push   ss
  40fb22:	(bad)  
  40fb23:	mov    ds:0x60c7d67b,al
  40fb28:	js     0x40fb4c
  40fb2a:	dec    edi
  40fb2b:	jno    0x40fb9a
  40fb2d:	jno    0x40fad0
  40fb2f:	aad    0x61
  40fb31:	out    dx,eax
  40fb32:	shr    BYTE PTR [eax],cl
  40fb34:	add    ebx,DWORD PTR ds:[ebp-0x374033c0]
  40fb3b:	(bad)  
  40fb3c:	cwde   
  40fb3d:	xchg   DWORD PTR [ebp-0x1a37f477],ebp
  40fb43:	(bad)  
  40fb44:	adc    esi,ebx
  40fb46:	ja     0x40fb2a
  40fb48:	xor    al,0xf0
  40fb4a:	push   ds
  40fb4b:	inc    esp
  40fb4c:	push   eax
  40fb4d:	lods   eax,DWORD PTR ds:[esi]
  40fb4e:	mov    ecx,DWORD PTR ds:0x312219aa
  40fb54:	mov    ecx,0x21689afe
  40fb59:	inc    esi
  40fb5a:	repz cmp al,0x9e
  40fb5d:	push   edx
  40fb5e:	test   eax,0x21f8d49a
  40fb63:	repz mov ah,0xbe
  40fb66:	jno    0x40fb4c
  40fb68:	test   DWORD PTR [eax-0x62],ecx
  40fb6b:	dec    DWORD PTR [eax-0x10]
  40fb6e:	ds and eax,0xfd99a71d
  40fb74:	jge    0x40fbe0
  40fb76:	lock cwde 
  40fb78:	adc    BYTE PTR [eax],bh
  40fb7a:	arpl   WORD PTR [ebx+0xf],di
  40fb7d:	popa   
  40fb7e:	lods   eax,DWORD PTR ds:[esi]
  40fb7f:	mov    ebx,0x61d43b94
  40fb84:	cld    
  40fb85:	xor    ah,BYTE PTR [eax-0x4a0d161d]
  40fb8b:	xor    edi,ebp
  40fb8d:	cwde   
  40fb8e:	add    esp,DWORD PTR [ebp+0x55e56b1f]
  40fb94:	mov    dh,0xc8
  40fb96:	or     esi,DWORD PTR [edi]
  40fb98:	jb     0x40fb66
  40fb9a:	add    edi,ecx
  40fb9c:	mov    esi,0x3391c0
  40fba1:	push   ds
  40fba2:	xchg   ebx,eax
  40fba3:	sub    BYTE PTR [eax+0x6e],ah
  40fba6:	add    ch,al
  40fba8:	fs mov bl,0x40
  40fbab:	je     0x40fc05
  40fbad:	scas   eax,DWORD PTR es:[edi]
  40fbae:	jne    0x40fb64
  40fbb0:	cmp    eax,ebx
  40fbb2:	or     al,0x2b
  40fbb4:	push   0xffffff8d
  40fbb6:	inc    esi
  40fbb7:	xor    al,0xe3
  40fbb9:	pop    ebp
  40fbba:	cwde   
  40fbbb:	mov    al,0x1
  40fbbd:	and    eax,0xbf4ae28a
  40fbc2:	cwde   
  40fbc3:	add    ecx,DWORD PTR [ecx+0x53]
  40fbc6:	aad    0xd2
  40fbc8:	inc    ecx
  40fbc9:	jg     0x40fbd3
  40fbcb:	xchg   ecx,eax
  40fbcc:	xor    bl,bl
  40fbce:	scas   al,BYTE PTR es:[edi]
  40fbcf:	dec    ebp
  40fbd0:	and    ecx,DWORD PTR cs:[edx+edi*4-0xc]
  40fbd5:	idiv   DWORD PTR [eax-0x229c577f]
  40fbdb:	push   0xfe0a0ebe
  40fbe0:	cwde   
  40fbe1:	fdivr  st(0),st
  40fbe3:	lods   eax,DWORD PTR ds:[esi]
  40fbe4:	lds    eax,FWORD PTR [edx]
  40fbe6:	xchg   BYTE PTR [ebp+ebx*2+0x2e],bl
  40fbea:	mov    al,0xcf
  40fbec:	add    edi,edx
  40fbee:	retf   0x507b
  40fbf1:	and    eax,0xa0fc9831
  40fbf6:	out    0xa8,al
  40fbf8:	adc    DWORD PTR [edx],eax
  40fbfa:	in     al,dx
  40fbfb:	into   
  40fbfc:	loopne 0x40fb7e
  40fbfe:	mov    esi,0xd367f010
  40fc03:	pushf  
  40fc04:	push   ss
  40fc05:	in     eax,dx
  40fc06:	pop    DWORD PTR [ecx+0x65]
  40fc09:	loopne 0x40fc2b
  40fc0b:	stos   DWORD PTR es:[edi],eax
  40fc0c:	sbb    eax,0x848e4ed8
  40fc11:	sbb    bl,BYTE PTR [eax+0x60350d37]
  40fc17:	and    cl,cl
  40fc19:	jmp    0x3644cf57
  40fc1e:	fisub  DWORD PTR [ebx-0x2a9137be]
  40fc24:	enter  0xe4aa,0x29
  40fc28:	mov    DWORD PTR [esi],esp
  40fc2a:	int3   
  40fc2b:	lods   eax,DWORD PTR fs:[esi]
  40fc2d:	sub    eax,0x54677d21
  40fc32:	mov    edx,DWORD PTR [esi+0x7e]
  40fc35:	xor    bl,BYTE PTR [edi-0x9693505]
  40fc3b:	xchg   esp,eax
  40fc3c:	mov    ebx,0xd9b5490a
  40fc41:	inc    edx
  40fc42:	jmp    0x3988:0x143a7684
  40fc49:	mov    ah,0x23
  40fc4b:	icebp  
  40fc4c:	push   ecx
  40fc4d:	addr16 xor eax,0xf661f98e
  40fc53:	push   cs
  40fc54:	mov    dh,0x1e
  40fc56:	adc    al,0x5d
  40fc58:	mov    ah,dl
  40fc5a:	xchg   esi,eax
  40fc5b:	xor    BYTE PTR [edx],bh
  40fc5d:	rol    bh,cl
  40fc5f:	out    dx,eax
  40fc60:	dec    esi
  40fc61:	fadd   DWORD PTR [ecx-0x3a1c624b]
  40fc67:	mov    esi,0x52e0230e
  40fc6c:	pop    es
  40fc6d:	ret    0xb530
  40fc70:	call   0x6cb7bfab
  40fc75:	pop    esp
  40fc76:	mov    dl,0x47
  40fc78:	push   edx
  40fc79:	xor    DWORD PTR [ebx+0xf],esp
  40fc7c:	xor    al,0x98
  40fc7e:	mov    bh,0xf9
  40fc80:	or     al,0x84
  40fc82:	enter  0x6c3c,0xb7
  40fc86:	bnd jb 0x40fc6e
  40fc89:	int    0xcd
  40fc8b:	push   ds
  40fc8c:	xchg   ebp,eax
  40fc8d:	scas   al,BYTE PTR es:[edi]
  40fc8e:	(bad)  
  40fc8f:	dec    ebp
  40fc90:	(bad)  [eax]
  40fc92:	push   ebx
  40fc93:	jb     0x40fcc7
  40fc95:	cmp    al,0x45
  40fc97:	pop    ecx
  40fc98:	jne    0x40fc99
  40fc9a:	xor    al,BYTE PTR [eax+ecx*1-0x63828cd9]
  40fca1:	xchg   edi,eax
  40fca2:	lods   eax,DWORD PTR ds:[esi]
  40fca3:	das    
  40fca4:	mov    edx,0xe71d140f
  40fca9:	jb     0x40fcc2
  40fcab:	cs or  esp,ebp
  40fcae:	jnp    0x40fc87
  40fcb0:	xor    BYTE PTR [ecx],dh
  40fcb2:	outs   dx,DWORD PTR ds:[esi]
  40fcb3:	jmp    FWORD PTR [eax]
  40fcb5:	cwde   
  40fcb6:	sbb    ch,cl
  40fcb8:	add    BYTE PTR [ecx+0x6c],ah
  40fcbb:	retf   
  40fcbc:	sbb    esp,eax
  40fcbe:	ss loope 0x40fcfc
  40fcc1:	js     0x40fc8f
  40fcc3:	push   es
  40fcc4:	mov    al,ds:0x4ce3611f
  40fcc9:	add    eax,0x7d87f0e4
  40fcce:	pop    edx
  40fccf:	addr16 pop es
  40fcd1:	xlat   BYTE PTR ds:[ebx]
  40fcd2:	sub    edx,DWORD PTR [ebp+0x6353ea5c]
  40fcd8:	lods   al,BYTE PTR ds:[esi]
  40fcd9:	cmp    al,0xf3
  40fcdb:	or     DWORD PTR [esi-0x196b8ff],esi
  40fce1:	imul   ecx,DWORD PTR [edx-0xf],0xecb603b3
  40fce8:	fnstcw WORD PTR [edx]
  40fcea:	imul   esp,DWORD PTR gs:[esi-0x53],0xef960ab7
  40fcf2:	or     DWORD PTR [eax+eax*1-0x585c67b2],0x74f600a
  40fcfd:	push   ss
  40fcfe:	push   es
  40fcff:	call   0x1d968b5c
  40fd04:	scas   al,BYTE PTR es:[edi]
  40fd05:	cmp    al,0xe7
  40fd07:	cmp    edx,DWORD PTR [edx-0x6d53837a]
  40fd0d:	or     DWORD PTR [ecx-0x49a140a5],0x657969c8
  40fd17:	xchg   ebx,eax
  40fd18:	xor    DWORD PTR [esp+eiz*2+0x4d],ebx
  40fd1c:	add    eax,DWORD PTR [edi+ebp*2-0x3604a8a5]
  40fd23:	sbb    dh,0xb3
  40fd26:	mov    esp,0xaa0d7ecf
  40fd2b:	push   esp
  40fd2c:	fild   DWORD PTR [edi+0x6ad4a39f]
  40fd32:	push   ss
  40fd33:	scas   al,BYTE PTR es:[edi]
  40fd34:	and    eax,0xc29e4163
  40fd39:	jmp    0xc22039a3
  40fd3e:	mov    ebx,0x7a976d7f
  40fd43:	ins    BYTE PTR es:[edi],dx
  40fd44:	prefetch (bad)
  40fd45:	or     eax,0xad40b0c5
  40fd4a:	xchg   ecx,eax
  40fd4b:	in     eax,0xc1
  40fd4d:	xchg   ebp,eax
  40fd4e:	cmp    ebp,DWORD PTR [edi]
  40fd50:	xchg   edx,eax
  40fd51:	jno    0x40fd5b
  40fd53:	push   0xe8efaff8
  40fd58:	xor    bh,BYTE PTR [esi-0x6c]
  40fd5b:	mov    ah,0x56
  40fd5d:	xchg   ebx,eax
  40fd5e:	push   esi
  40fd5f:	jb     0x40fd0c
  40fd61:	push   ebp
  40fd62:	pop    ss
  40fd63:	xor    dl,BYTE PTR [ecx+0x78]
  40fd66:	enter  0xcfec,0xb7
  40fd6a:	xor    DWORD PTR [ecx+0x66],esi
  40fd6d:	inc    edx
  40fd6e:	xor    DWORD PTR [ebx],ecx
  40fd70:	fld    QWORD PTR [edx]
  40fd72:	or     DWORD PTR [edx-0x7b],0x7b
  40fd76:	jecxz  0x40fdc1
  40fd78:	std    
  40fd79:	push   es
  40fd7a:	ror    ebp,cl
  40fd7c:	adc    BYTE PTR [edi+0x2fc4d83e],dl
  40fd82:	mov    esp,0x7c1eff3f
  40fd87:	and    DWORD PTR [edx+0x32],eax
  40fd8a:	sbb    ebp,DWORD PTR [esi]
  40fd8c:	pop    edx
  40fd8d:	inc    esp
  40fd8e:	cmp    DWORD PTR [eax-0x4b],ebx
  40fd91:	cmp    edi,DWORD PTR [ebx+0x25c523b]
  40fd97:	mov    dl,0xba
  40fd99:	mov    WORD PTR [ebx-0x5a2d56c1],es
  40fd9f:	es mov cl,0xe4
  40fda2:	mov    ecx,0xa528562b
  40fda7:	fs inc ebp
  40fda9:	psubw  mm5,QWORD PTR [edx+0x47]
  40fdad:	outs   dx,BYTE PTR ds:[esi]
  40fdae:	adc    dl,bl
  40fdb0:	jno    0x40fdca
  40fdb2:	xor    BYTE PTR [edi-0x2a9a338b],bl
  40fdb8:	fstp   QWORD PTR [esi]
  40fdba:	xchg   DWORD PTR [ebx],eax
  40fdbc:	cmova  ebp,DWORD PTR cs:[edx-0x3]
  40fdc1:	jp     0x40fd59
  40fdc3:	shl    cl,0x5b
  40fdc6:	addr16 pop eax
  40fdc8:	dec    ebp
  40fdc9:	out    0x2a,eax
  40fdcb:	js     0x40fd5c
  40fdcd:	jnp    0x40fe22
  40fdcf:	sbb    al,0x2c
  40fdd1:	iret   
  40fdd2:	add    eax,ebp
  40fdd4:	mov    ecx,0xdcf1a31e
  40fdd9:	jne    0x40fe23
  40fddb:	mov    ecx,0xadaf4fd6
  40fde0:	nop
  40fde1:	dec    eax
  40fde2:	dec    BYTE PTR [esi+0x629914b9]
  40fde8:	jmp    edi
  40fdea:	fwait
  40fdeb:	clc    
  40fdec:	leave  
  40fded:	popa   
  40fdee:	xchg   ebx,eax
  40fdef:	lock fmul QWORD PTR [ebx]
  40fdf2:	repz ret 
  40fdf4:	fild   DWORD PTR [edx]
  40fdf6:	mov    ah,0x72
  40fdf8:	outs   dx,BYTE PTR ds:[esi]
  40fdf9:	pop    esi
  40fdfa:	adc    DWORD PTR [ebx+0x5e3123c6],ecx
  40fe00:	add    ch,BYTE PTR [ebx+0x6f4b7b59]
  40fe06:	ret    
  40fe07:	loop   0x40fe3a
  40fe09:	jge    0x40fdf2
  40fe0b:	shr    BYTE PTR [edx+0x718e7f4d],1
  40fe11:	popa   
  40fe12:	btr    ebp,ecx
  40fe15:	cli    
  40fe16:	and    ah,BYTE PTR [ebx]
  40fe18:	mov    WORD PTR [ebx-0x631700fb],es
  40fe1e:	shl    BYTE PTR [ebx-0x30928482],cl
  40fe24:	xchg   esp,eax
  40fe25:	mov    esi,0x77a09f36
  40fe2a:	jns    0x40fdbd
  40fe2c:	push   edx
  40fe2d:	mov    ecx,0x73a4357b
  40fe32:	shr    edx,1
  40fe34:	fild   WORD PTR [edi+0x56b61f78]
  40fe3a:	inc    esi
  40fe3b:	sub    ebp,DWORD PTR [eax+edi*8+0x17]
  40fe3f:	je     0x40fe4c
  40fe41:	or     DWORD PTR [ebx+ebp*4],0xb6f66261
  40fe48:	and    eax,0x4ff138e7
  40fe4d:	xlat   BYTE PTR ds:[ebx]
  40fe4e:	pop    ds
  40fe4f:	pusha  
  40fe50:	jl     0x40fe7a
  40fe52:	cmc    
  40fe53:	inc    eax
  40fe54:	xor    eax,0xf4de7908
  40fe59:	mov    ah,0xb0
  40fe5b:	(bad)  
  40fe5c:	jnp    0x40fe2a
  40fe5e:	mov    al,0x74
  40fe60:	sub    al,BYTE PTR [eax+0x10732a51]
  40fe66:	in     eax,0x9d
  40fe68:	lods   eax,DWORD PTR ds:[esi]
  40fe69:	push   0x65
  40fe6b:	or     esp,eax
  40fe6d:	fadd   QWORD PTR [esi+0x33]
  40fe70:	(bad)  
  40fe71:	test   eax,0xc5472f95
  40fe76:	inc    ebx
  40fe77:	in     al,0x18
  40fe79:	jp     0x40fe85
  40fe7b:	fwait
  40fe7c:	inc    eax
  40fe7d:	les    esi,FWORD PTR ds:[ebp+0x6412eb7b]
  40fe84:	clc    
  40fe85:	sbb    DWORD PTR [ecx],esi
  40fe87:	cdq    
  40fe88:	stc    
  40fe89:	ret    
  40fe8a:	jbe    0x40fe59
  40fe8c:	pop    ds
  40fe8d:	sti    
  40fe8e:	into   
  40fe8f:	jge    0x40fee4
  40fe91:	mov    ebx,DWORD PTR [ebx+0x71]
  40fe94:	or     al,0x58
  40fe96:	call   0x71e2be71
  40fe9b:	sbb    DWORD PTR [edx-0x3bbe5275],0xffffff80
  40fea2:	sahf   
  40fea3:	out    dx,eax
  40fea4:	xor    al,0x20
  40fea6:	jp     0x40fefd
  40fea8:	cmp    eax,0x2eeacd9
  40fead:	cmp    eax,0x4ae43d2c
  40feb2:	cmp    cl,BYTE PTR [ecx+0x485558c5]
  40feb8:	push   ss
  40feb9:	stos   BYTE PTR es:[edi],al
  40feba:	mov    edi,0xe1cd9543
  40febf:	cmp    eax,0x952d9fa6
  40fec4:	mov    bl,0x45
  40fec6:	add    eax,0xfef41759
  40fecb:	rol    dh,1
  40fecd:	(bad)  [eax+edi*2]
  40fed0:	ret    0x7824
  40fed3:	scas   eax,DWORD PTR es:[edi]
  40fed4:	shl    BYTE PTR [ecx-0x470f41c0],cl
  40feda:	push   ebp
  40fedb:	or     bl,BYTE PTR [eax-0x76]
  40fede:	push   ebx
  40fedf:	inc    esi
  40fee0:	add    esi,esp
  40fee2:	in     eax,dx
  40fee3:	ror    BYTE PTR [edx-0x4e],1
  40fee6:	add    eax,0x3dda2269
  40feeb:	mov    ss,ecx
  40feed:	mov    cl,BYTE PTR [ebx+0x50]
  40fef0:	push   esi
  40fef1:	and    ebp,DWORD PTR [edx-0x2d]
  40fef4:	cmp    al,0x63
  40fef6:	lock and al,0xbf
  40fef9:	add    bl,ch
  40fefb:	call   0x9c77:0xb35fd5a4
  40ff02:	loope  0x40ff1f
  40ff04:	pop    ebx
  40ff05:	or     al,0x7e
  40ff07:	out    0xd3,al
  40ff09:	mov    bl,0x96
  40ff0b:	xor    BYTE PTR [esi-0x47bfc52b],bl
  40ff11:	or     dl,BYTE PTR [esi+0x57]
  40ff14:	xchg   DWORD PTR [ebp+0x7214d625],ebx
  40ff1a:	ror    ebx,0x55
  40ff1d:	icebp  
  40ff1e:	mov    edx,0xac7ebbb2
  40ff23:	add    al,0x93
  40ff25:	cmp    DWORD PTR [esp+edx*1],ebx
  40ff28:	adc    eax,0x89999487
  40ff2d:	ins    BYTE PTR es:[edi],dx
  40ff2e:	out    0xca,al
  40ff30:	inc    esp
  40ff31:	movzx  eax,WORD PTR [eax]
  40ff34:	add    dh,ah
  40ff36:	xchg   edi,eax
  40ff37:	shr    DWORD PTR [esi],0x35
  40ff3a:	mov    ebx,0xf13979b6
  40ff3f:	(bad)
  40ff43:	or     eax,0xed278aa7
  40ff48:	pop    ebp
  40ff49:	ss pop edx
  40ff4b:	jmp    0x6bfb:0x3023c453
  40ff52:	push   es
  40ff53:	pop    ebx
  40ff54:	loop   0x40ff3f
  40ff56:	xchg   ecx,eax
  40ff57:	pop    ds
  40ff58:	out    0xb4,eax
  40ff5a:	in     eax,dx
  40ff5b:	ret    
  40ff5c:	and    al,0xc4
  40ff5e:	xor    al,0xf3
  40ff60:	bound  esp,QWORD PTR [ebx]
  40ff62:	(bad)  
  40ff63:	jae    0x40feed
  40ff65:	imul   ebp,DWORD PTR [ebp-0x3ea4d2d3],0x1bbedb39
  40ff6f:	jg     0x40ff5b
  40ff71:	stc    
  40ff72:	das    
  40ff73:	enter  0xb69f,0xdb
  40ff77:	lods   al,BYTE PTR ds:[esi]
  40ff78:	adc    cl,BYTE PTR [ebx+ecx*8+0x7c7424e8]
  40ff7f:	cmp    DWORD PTR [esi-0x6a524297],ecx
  40ff85:	imul   ecx,ecx,0x19
  40ff88:	pusha  
  40ff89:	popa   
  40ff8a:	dec    ebx
  40ff8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8c:	(bad)  
  40ff8d:	(bad)  [ecx]
  40ff8f:	sub    DWORD PTR [ebx-0x75],esi
  40ff92:	jl     0x40ffcd
  40ff94:	outs   dx,DWORD PTR ds:[esi]
  40ff95:	sub    eax,DWORD PTR [ebp+0x3c]
  40ff98:	add    bh,ch
  40ff9a:	xchg   ebp,eax
  40ff9b:	fsubr  st(6),st
  40ff9d:	jecxz  0x40ff78
  40ff9f:	mov    bl,bh
  40ffa1:	loop   0x40ffdc
  40ffa3:	sbb    ecx,esp
  40ffa5:	jno    0x40ff69
  40ffa7:	mov    ch,0xe5
  40ffa9:	jmp    0x40ffdf
  40ffab:	in     eax,dx
  40ffac:	jmp    0x40ffd7
  40ffae:	or     al,0x8
  40ffb0:	call   0x7a5c:0xc84d9718
  40ffb7:	test   BYTE PTR [esi+0x54aef177],ah
  40ffbd:	lahf   
  40ffbe:	enter  0x684d,0xda
  40ffc2:	and    DWORD PTR [ecx+0x5f8fdec0],ebx
  40ffc8:	mov    bh,0xc0
  40ffca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffcb:	mov    dl,0x26
  40ffcd:	nop
  40ffce:	cmp    eax,0xfc7336f2
  40ffd3:	jl     0x40ffab
  40ffd5:	scas   al,BYTE PTR es:[edi]
  40ffd6:	ins    DWORD PTR es:[edi],dx
  40ffd7:	(bad)  
  40ffd8:	dec    esp
  40ffd9:	pop    eax
  40ffda:	outs   dx,BYTE PTR ds:[esi]
  40ffdb:	in     al,0x7c
  40ffdd:	sbb    DWORD PTR [edx+0x761c831],edi
  40ffe3:	mov    ebx,0x20ec78ee
  40ffe8:	pop    ds
  40ffe9:	cmp    DWORD PTR [eax],edx
  40ffeb:	call   DWORD PTR [edi]
  40ffed:	daa    
  40ffee:	ret    0x5a2e
  40fff1:	lods   eax,DWORD PTR ds:[esi]
  40fff2:	out    dx,eax
  40fff3:	std    
  40fff4:	repz jl 0x40ff82
  40fff7:	xor    eax,0x1422e16c
  40fffc:	dec    ebp
  40fffd:	scas   al,BYTE PTR es:[edi]
  40fffe:	in     eax,dx
  40ffff:	cdq    
  410000:	cmp    eax,DWORD PTR [edx]
  410002:	mov    ds:0x6f954ff,eax
  410007:	add    bh,BYTE PTR ds:0x35bd2396
  41000d:	aam    0xe2
  41000f:	ret    0xbcec
  410012:	sub    ebp,edi
  410014:	xor    edx,DWORD PTR [ecx+0x7a]
  410017:	mov    cl,0x8a
  410019:	test   eax,0xbba3fa8d
  41001e:	push   es
  41001f:	outs   dx,DWORD PTR ds:[esi]
  410020:	sbb    eax,0x1a8767fc
  410025:	iret   
  410026:	pop    DWORD PTR [edx+0x60e14315]
  41002c:	cmp    bh,ch
  41002e:	nop
  41002f:	sahf   
  410030:	add    al,0x7f
  410032:	push   edi
  410033:	mov    eax,0x2a40bfd1
  410038:	jb     0x40ffff
  41003a:	cmp    DWORD PTR [ecx+0x6a5b8495],edi
  410040:	ja     0x40ffe6
  410042:	fld    QWORD PTR [edi]
  410044:	rol    cl,0x99
  410047:	mov    WORD PTR ds:[ecx-0x6e31bfd2],?
  41004e:	aad    0xb1
  410050:	mov    esp,0xe3c701bd
  410055:	xchg   DWORD PTR [edx+0x5f],ebp
  410058:	dec    esp
  410059:	xchg   edi,eax
  41005a:	adc    DWORD PTR [edx+0x51],esi
  41005d:	and    ch,BYTE PTR [edi+0x49]
  410060:	es pusha 
  410062:	in     al,dx
  410063:	add    eax,eax
  410065:	call   0x2f25:0x5b700dfd
  41006c:	test   WORD PTR [esi-0x10],di
  410070:	and    eax,DWORD PTR [ebx]
  410072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410073:	cli    
  410074:	mov    edx,0x7e0b181d
  410079:	pop    ecx
  41007a:	jge    0x41006a
  41007c:	es xchg esp,eax
  41007e:	sub    BYTE PTR [esi-0x75],bh
  410081:	in     al,0x49
  410083:	mov    eax,ds:0x850f6ba8
  410088:	loope  0x410015
  41008a:	(bad)
  41008d:	pop    ds
  41008e:	inc    ebp
  41008f:	pop    ss
  410090:	push   ecx
  410091:	dec    ebx
  410092:	arpl   WORD PTR [ebx+0x4f],dx
  410095:	push   eax
  410096:	add    DWORD PTR [ebp+0x5fe3b11b],ebp
  41009c:	ds push cs
  41009e:	mov    eax,ds:0x154b04e8
  4100a3:	bound  eax,QWORD PTR [eax-0x51]
  4100a6:	push   edi
  4100a7:	lea    esp,[ebx-0x638f6ebc]
  4100ad:	mov    WORD PTR ds:0x8c45,cs
  4100b2:	mov    al,ds:0xf94fa536
  4100b7:	dec    ecx
  4100b8:	or     BYTE PTR [ecx],0xb
  4100bb:	jno    0x4100ce
  4100bd:	push   esp
  4100be:	das    
  4100bf:	aad    0x82
  4100c1:	inc    eax
  4100c2:	lea    ebp,[edx]
  4100c4:	arpl   sp,sp
  4100c6:	add    eax,0x604e4e22
  4100cb:	xor    BYTE PTR [ebp-0x74],bh
  4100ce:	rcl    DWORD PTR [ebp-0x572b8cff],1
  4100d4:	xchg   ecx,eax
  4100d5:	dec    edi
  4100d6:	into   
  4100d7:	div    BYTE PTR [ecx+0x3f]
  4100da:	test   DWORD PTR [eax],0xe43339d6
  4100e0:	mov    bl,0xbe
  4100e2:	cmp    bh,bh
  4100e4:	mov    esp,0x21207f6b
  4100e9:	mov    eax,0xc7743fa0
  4100ee:	inc    ebx
  4100ef:	push   esi
  4100f0:	mov    eax,ds:0xce7fa81e
  4100f5:	leave  
  4100f6:	bound  edi,QWORD PTR [ecx-0x6f]
  4100f9:	and    ch,BYTE PTR [edi+0x56]
  4100fc:	pop    edi
  4100fd:	mov    al,0xc9
  4100ff:	lds    esp,FWORD PTR [ebx-0x3e]
  410102:	pop    esp
  410103:	and    DWORD PTR [edi-0x48b5509],0x21b2d634
  41010d:	pop    edx
  41010e:	dec    edx
  41010f:	ss mov ecx,cs
  410112:	lods   al,BYTE PTR ds:[esi]
  410113:	icebp  
  410114:	mov    dl,0x8c
  410116:	mov    bh,ah
  410118:	adc    eax,DWORD PTR [ebx]
  41011a:	repz mov eax,ds:0x625d588d
  410120:	pop    es
  410121:	or     DWORD PTR [esi-0x28],ecx
  410124:	call   0x2d68:0xae69378e
  41012b:	mov    ecx,gs
  41012d:	mov    esp,0x943fadff
  410132:	out    0x38,al
  410134:	dec    ecx
  410135:	inc    esp
  410136:	or     DWORD PTR [edx],edx
  410138:	inc    ebp
  410139:	xchg   ebp,eax
  41013a:	popf   
  41013b:	sbb    eax,0x1898b2b5
  410140:	and    BYTE PTR [edi],al
  410142:	rol    BYTE PTR [ecx+0x5d],cl
  410145:	dec    esp
  410146:	add    BYTE PTR [ebx],0x57
  410149:	pop    ebp
  41014a:	inc    esi
  41014b:	call   0x9ecece31
  410150:	inc    ebx
  410151:	pop    ds
  410152:	das    
  410153:	out    dx,eax
  410154:	jb     0x410164
  410156:	push   edi
  410157:	cmp    ah,BYTE PTR [eax-0x1e378cd8]
  41015d:	sti    
  41015e:	xchg   esi,eax
  410160:	pop    esi
  410161:	mov    eax,0x2e6e2b74
  410166:	jno    0x41015f
  410168:	cmc    
  410169:	rcr    edi,1
  41016b:	jns    0x410174
  41016d:	in     eax,dx
  41016e:	imul   ebp,DWORD PTR [esi],0xd86fd9dc
  410174:	pushf  
  410175:	jmp    0x4101d2
  410177:	jae    0x410116
  410179:	aas    
  41017a:	push   ds
  41017b:	(bad)  
  41017c:	fs push ds
  41017e:	shl    BYTE PTR [ecx+esi*8+0x892a4eb],cl
  410185:	xchg   ebx,eax
  410186:	mov    eax,ds:0xfa7822c1
  41018b:	rcl    BYTE PTR [esi+0x7e6b917f],0x85
  410192:	fs cmp ah,ah
  410195:	mov    ch,0x79
  410197:	pop    ebx
  410198:	rol    DWORD PTR [ebx+ebp*1],1
  41019b:	int3   
  41019c:	push   edx
  41019d:	test   DWORD PTR ds:0x8f448d30,eax
  4101a3:	mov    cl,BYTE PTR [edx+0x5d]
  4101a6:	push   edx
  4101a7:	dec    esi
  4101a8:	test   DWORD PTR [edi],0xb5122ec0
  4101ae:	xchg   ebp,eax
  4101af:	in     al,dx
  4101b0:	aas    
  4101b1:	test   edi,ecx
  4101b3:	sbb    eax,0xac538758
  4101b8:	test   eax,0x7ab41d11
  4101bd:	fwait
  4101be:	push   edx
  4101bf:	sub    eax,0x78e718cc
  4101c4:	(bad)  [ecx+0x2b28d4a3]
  4101ca:	(bad)  
  4101cb:	xchg   esp,eax
  4101cc:	test   eax,0x9edc22
  4101d1:	and    eax,DWORD PTR [edx-0x4]
  4101d4:	jmp    0x410201
  4101d6:	push   edx
  4101d7:	and    DWORD PTR [ecx+0x28df244f],ebx
  4101dd:	(bad)  
  4101de:	xchg   esi,eax
  4101df:	xchg   BYTE PTR [esi-0x5a90d829],cl
  4101e5:	lea    edx,[eax-0x2506ce20]
  4101eb:	lods   al,BYTE PTR ds:[esi]
  4101ec:	mov    ecx,0xad7e9b09
  4101f1:	in     eax,dx
  4101f2:	popa   
  4101f3:	adc    BYTE PTR [edx+eax*4],ch
  4101f6:	out    dx,al
  4101f7:	ins    DWORD PTR es:[edi],dx
  4101f8:	pop    esp
  4101f9:	jbe    0x410213
  4101fb:	leave  
  4101fc:	mov    WORD PTR ds:0x6d3c741f,gs
  410202:	jo     0x410251
  410204:	push   0x66
  410206:	imul   ebx,eax,0xffffffa6
  410209:	nop
  41020a:	dec    edi
  41020b:	sbb    al,0x51
  41020d:	dec    ecx
  41020e:	inc    eax
  41020f:	popf   
  410210:	jle    0x410200
  410212:	lods   al,BYTE PTR ds:[esi]
  410213:	es or  ebp,ebx
  410216:	cld    
  410217:	dec    esi
  410218:	inc    ecx
  410219:	in     al,dx
  41021a:	xchg   esp,eax
  41021b:	mov    WORD PTR [ebp-0x6c6776e7],cs
  410221:	into   
  410222:	fild   DWORD PTR [edi]
  410224:	stos   BYTE PTR es:[edi],al
  410225:	das    
  410226:	pop    esp
  410227:	pop    ebp
  410228:	add    edi,ecx
  41022a:	mov    edx,0xf5b1306f
  41022f:	cmc    
  410230:	cwde   
  410231:	lods   eax,DWORD PTR ds:[esi]
  410232:	cdq    
  410233:	adc    bl,BYTE PTR cs:[esp+eax*1]
  410237:	stc    
  410238:	(bad)
  41023b:	inc    eax
  41023c:	sbb    ecx,eax
  41023e:	retf   
  41023f:	inc    BYTE PTR [ebp-0x65]
  410242:	pop    edx
  410243:	call   0xbe80:0x3a83d696
  41024a:	sbb    ebx,DWORD PTR [ebp+0x60997881]
  410250:	outs   dx,DWORD PTR ds:[esi]
  410251:	adc    BYTE PTR [ebx],0x22
  410254:	ror    DWORD PTR [ebx-0x59],1
  410257:	dec    eax
  410258:	sbb    esi,esp
  41025a:	inc    ecx
  41025b:	js     0x41025e
  41025d:	out    0x51,eax
  41025f:	jb     0x410213
  410261:	sub    al,0x31
  410263:	cs pop eax
  410265:	xor    DWORD PTR [edi+0x159dc3c8],esi
  41026b:	cli    
  41026c:	mov    dl,0xcd
  41026e:	lahf   
  41026f:	je     0x4102c5
  410271:	sub    ecx,DWORD PTR [esi-0x33]
  410274:	dec    edx
  410275:	xor    al,0xe5
  410277:	add    ebp,ecx
  410279:	out    dx,eax
  41027a:	(bad)  
  41027c:	mov    BYTE PTR [edx],bl
  41027e:	in     eax,0xae
  410280:	in     eax,dx
  410281:	(bad)  
  410282:	icebp  
  410283:	jbe    0x410273
  410285:	and    dh,BYTE PTR [esi-0x2d]
  410288:	int    0xc7
  41028a:	gs retf 
  41028c:	repz fs xchg esp,eax
  41028f:	dec    esp
  410290:	mov    edx,0xe65fbf89
  410295:	popa   
  410296:	cmp    BYTE PTR [ebx],al
  410298:	xchg   BYTE PTR [edi],ah
  41029a:	cmc    
  41029b:	loopne 0x4102da
  41029d:	mov    ch,0xaf
  41029f:	out    dx,eax
  4102a0:	and    al,0x74
  4102a2:	inc    edx
  4102a3:	push   ebx
  4102a4:	(bad)  
  4102a5:	mov    BYTE PTR [esi+0x5d],al
  4102a8:	sbb    BYTE PTR [edi+0x3d9891eb],cl
  4102ae:	pop    ecx
  4102af:	inc    ecx
  4102b0:	es inc ecx
  4102b2:	sub    eax,DWORD PTR [edi-0x30956072]
  4102b8:	sbb    BYTE PTR [esi],al
  4102ba:	cmp    ah,bl
  4102bc:	(bad)  
  4102bd:	xor    al,0x4c
  4102bf:	mov    ds:0x53e895d5,eax
  4102c4:	jo     0x410278
  4102c6:	and    edi,ebp
  4102c8:	and    eax,0x192397eb
  4102cd:	cld    
  4102ce:	clc    
  4102cf:	push   cs
  4102d0:	icebp  
  4102d1:	xchg   ebx,eax
  4102d2:	out    0x67,al
  4102d4:	loopne 0x410267
  4102d6:	and    eax,0xb30dd175
  4102db:	(bad)  
  4102dc:	loopne 0x410337
  4102de:	adc    DWORD PTR [ecx+0x34bceb1f],ebx
  4102e4:	ins    BYTE PTR es:[edi],dx
  4102e5:	ret    0xe88d
  4102e8:	sub    eax,0x2b539589
  4102ed:	aaa    
  4102ee:	loope  0x4102ba
  4102f0:	je     0x4102e8
  4102f2:	mov    esi,eax
  4102f4:	loope  0x4102ef
  4102f6:	jl     0x4316c62a
  4102fc:	jl     0x410306
  4102fe:	(bad)  
  4102ff:	iret   
  410300:	cli    
  410301:	ds pop esp
  410303:	dec    edx
  410304:	adc    al,0xfa
  410306:	jo     0x4102df
  410308:	pusha  
  410309:	test   DWORD PTR [esi+0x5f],esp
  41030c:	mov    edx,0xba69903a
  410311:	std    
  410312:	pusha  
  410313:	adc    BYTE PTR [ebx],0x47
  410316:	lds    esi,FWORD PTR [ecx-0x682d0cbf]
  41031c:	(bad)  
  41031d:	fist   WORD PTR [eax-0x44]
  410320:	lea    edi,[edx+0x7f2610c0]
  410326:	sahf   
  410327:	add    BYTE PTR [edi],0xab
  41032a:	jle    0x410308
  41032c:	push   ds
  41032d:	shl    bl,0x90
  410330:	jae    0x4102d1
  410332:	into   
  410333:	sub    edx,DWORD PTR [ebx+0x756334f4]
  410339:	cmp    ah,BYTE PTR [eax]
  41033b:	popa   
  41033c:	xchg   edx,eax
  41033d:	ja     0x4102de
  41033f:	add    DWORD PTR [ebp-0x4866586c],ebp
  410345:	or     edx,DWORD PTR [edx*8-0x5cef9f65]
  41034c:	sub    dl,BYTE PTR [esi+0x4eb51f39]
  410352:	fs stos DWORD PTR es:[edi],eax
  410354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410355:	outs   dx,BYTE PTR ds:[esi]
  410356:	sbb    bh,BYTE PTR [edi+0x56]
  410359:	xchg   edi,eax
  41035a:	pop    esi
  41035b:	dec    esi
  41035c:	lds    esp,FWORD PTR ds:0x9e00c7e
  410362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410363:	ret    
  410364:	cmp    dh,ah
  410366:	xor    ebp,edx
  410368:	push   edi
  410369:	test   eax,0xfdc617e
  41036e:	psubsw mm7,QWORD PTR [ebx]
  410371:	push   ss
  410372:	sub    esp,DWORD PTR [ecx-0x1ec8ca9b]
  410378:	dec    ecx
  410379:	xchg   ebx,eax
  41037a:	fiadd  WORD PTR [esi-0x6c208f84]
  410380:	and    dh,dh
  410382:	add    ebp,ebx
  410384:	xor    edx,eax
  410386:	or     eax,0xe5c07be6
  41038b:	cdq    
  41038c:	in     eax,0x11
  41038e:	(bad)  
  41038f:	pop    eax
  410390:	sbb    edx,esi
  410392:	push   eax
  410393:	and    dl,0xc8
  410396:	je     0x410359
  410398:	shl    BYTE PTR [edi-0x5760cbee],1
  41039e:	je     0x4103bd
  4103a0:	ret    0xb6a7
  4103a3:	mov    al,ds:0x226ba2fd
  4103a8:	loope  0x410383
  4103aa:	xlat   BYTE PTR ds:[ebx]
  4103ab:	add    edi,eax
  4103ad:	or     ecx,ebx
  4103af:	neg    DWORD PTR [esi+edi*4]
  4103b2:	mov    esp,0xb443f061
  4103b7:	shr    DWORD PTR [eax-0x10a14edf],1
  4103bd:	mov    eax,0x4171af44
  4103c2:	inc    ebx
  4103c3:	push   ebp
  4103c4:	mov    ecx,0xdedd7509
  4103c9:	jmp    0x410355
  4103cb:	pop    esi
  4103cc:	ret    
  4103cd:	xchg   esi,eax
  4103ce:	int3   
  4103cf:	inc    eax
  4103d0:	sar    BYTE PTR [edx+edi*4-0x1f],cl
  4103d4:	or     al,0x6d
  4103d6:	push   ss
  4103d7:	sbb    al,BYTE PTR [ebx+ebp*4-0x1f]
  4103db:	dec    esi
  4103dc:	(bad)  
  4103dd:	fdiv   DWORD PTR [eax]
  4103df:	fisttp QWORD PTR fs:[esi-0x76]
  4103e3:	sbb    esi,DWORD PTR [esi+0x49d73af]
  4103e9:	add    eax,0x75c75e38
  4103ee:	lds    edi,FWORD PTR [edx]
  4103f0:	call   0x619b4495
  4103f5:	mov    al,0x1d
  4103f7:	xchg   ebx,eax
  4103f8:	call   0x81dc81e
  4103fd:	mov    ecx,0xa09fe021
  410402:	xor    bl,BYTE PTR [esi+0x64]
  410405:	(bad)  
  410406:	push   cs
  410407:	jbe    0x410447
  410409:	dec    ecx
  41040a:	div    DWORD PTR [ecx-0x2e]
  41040d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41040e:	adc    al,0xf1
  410410:	or     al,0x5e
  410412:	mov    bh,0x71
  410414:	jg     0x410452
  410416:	sub    al,BYTE PTR [edi]
  410418:	es push ecx
  41041a:	in     al,0x74
  41041c:	in     eax,dx
  41041d:	sbb    esp,esp
  41041f:	cdq    
  410420:	in     al,dx
  410421:	dec    ebx
  410422:	xor    bh,BYTE PTR [eax-0x4e]
  410425:	mov    bh,0x62
  410427:	inc    esp
  410428:	and    ch,BYTE PTR [eax+0x62e2a0f2]
  41042e:	mov    al,0x87
  410430:	lea    ebp,[ebp+0x47]
  410433:	js     0x410495
  410435:	pop    esp
  410436:	sbb    ch,BYTE PTR [edx+0xc]
  410439:	inc    ebp
  41043a:	jmp    0x4103db
  41043c:	inc    ebx
  41043d:	mov    ?,esp
  41043f:	adc    al,0x6a
  410441:	stos   DWORD PTR es:[edi],eax
  410442:	push   ss
  410443:	dec    ebp
  410444:	shl    DWORD PTR [ebp+ebp*1-0x62],1
  410448:	clc    
  410449:	pop    ds
  41044a:	add    edx,DWORD PTR [edx+0x5ce6c135]
  410450:	sub    DWORD PTR [ebx+0x2eda3cec],edx
  410456:	lock into 
  410458:	mov    esp,0xb932ccd0
  41045d:	ret    0xd6f
  410460:	dec    esp
  410461:	sub    ch,ch
  410463:	and    BYTE PTR [edi+0x3b],bh
  410466:	adc    BYTE PTR [eax+0x1e48cd49],0xb6
  41046d:	shl    DWORD PTR [ecx+0x43e3bd01],1
  410473:	xor    ebp,edx
  410475:	stc    
  410476:	and    DWORD PTR [ecx-0x15522952],edx
  41047c:	inc    esp
  41047d:	mov    esi,0x8c64a994
  410482:	(bad)  
  410483:	mov    bl,0xec
  410485:	test   al,0x57
  410487:	add    cl,bl
  410489:	mov    ds,WORD PTR [eax]
  41048b:	jmp    0x33d4:0xe5c0447d
  410492:	pop    edx
  410493:	stos   BYTE PTR es:[edi],al
  410494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410495:	fadd   st,st(3)
  410497:	mov    bl,0xc4
  410499:	pop    esp
  41049a:	fmul   st(2),st
  41049c:	sbb    eax,0x4b2961c0
  4104a1:	cld    
  4104a2:	iret   
  4104a3:	repz dec edi
  4104a5:	add    eax,0x90a3f358
  4104aa:	mov    ds:0xca86fc1,eax
  4104af:	push   cs
  4104b0:	xlat   BYTE PTR ds:[ebx]
  4104b1:	mov    BYTE PTR [edx-0x7d],ah
  4104b4:	ins    DWORD PTR es:[edi],dx
  4104b5:	adc    dl,BYTE PTR [ebp+0x1c]
  4104b8:	adc    BYTE PTR [ebp-0x28],0x87
  4104bc:	int    0x4e
  4104be:	adc    DWORD PTR [eax-0xc],ebp
  4104c1:	sub    eax,0xb15d4092
  4104c6:	pusha  
  4104c7:	loop   0x410531
  4104c9:	sbb    edi,DWORD PTR [edx]
  4104cb:	pusha  
  4104cc:	xchg   esi,eax
  4104cd:	sbb    BYTE PTR ds:0x8b7be49e,ah
  4104d3:	cmp    al,BYTE PTR [eax-0x7deaa471]
  4104d9:	stos   DWORD PTR es:[edi],eax
  4104da:	bound  ebx,QWORD PTR [ebp+0x13]
  4104dd:	xchg   ebx,eax
  4104de:	cmc    
  4104df:	sbb    al,0x9c
  4104e1:	add    eax,0x64d6fe81
  4104e6:	int    0x77
  4104e8:	cmp    BYTE PTR [ecx-0x6c],bh
  4104eb:	xlat   BYTE PTR ds:[ebx]
  4104ec:	jecxz  0x410536
  4104ee:	hlt    
  4104ef:	retf   0x5b79
  4104f2:	pop    ebx
  4104f3:	pop    esp
  4104f4:	jo     0x41054b
  4104f6:	mov    dl,BYTE PTR [esi+0x350a7d2d]
  4104fc:	int3   
  4104fd:	push   edi
  4104fe:	(bad)  
  410500:	cs pop ebp
  410502:	cmp    al,0x4d
  410504:	into   
  410505:	out    dx,eax
  410506:	ret    0xe83e
  410509:	clc    
  41050a:	mov    edx,0xc46f4519
  41050f:	jecxz  0x410515
  410511:	inc    edi
  410512:	idiv   BYTE PTR [edx+0x52]
  410515:	and    BYTE PTR [ebp+0x67ab908a],ch
  41051b:	dec    ecx
  41051c:	jp     0x41051d
  41051e:	ds mov dl,0xc9
  410521:	retf   0xec9f
  410524:	and    eax,0x582d8ed7
  410529:	sub    al,0x72
  41052b:	or     ah,BYTE PTR [ebx+0x44f8d410]
  410531:	nop
  410532:	xchg   edx,eax
  410533:	arpl   WORD PTR [eax],dx
  410535:	stc    
  410536:	pop    ss
  410537:	arpl   WORD PTR [ebp+0x416632b8],sp
  41053d:	mov    bl,0x7
  41053f:	sbb    eax,0x98c9339a
  410544:	xor    al,0xd0
  410546:	dec    ecx
  410547:	out    dx,eax
  410548:	fscale 
  41054a:	call   0x3da2:0xcd483f98
  410551:	mov    dh,0x3c
  410553:	xor    DWORD PTR [ecx-0x76672b89],eax
  410559:	or     al,al
  41055b:	and    al,0x6
  41055d:	lea    esi,[eax+0x26]
  410560:	(bad)  
  410562:	mov    BYTE PTR [ecx-0x6c],bl
  410565:	jo     0x4105e1
  410567:	lds    esp,FWORD PTR [edx]
  410569:	push   0xf879ecbe
  41056e:	adc    al,0xde
  410570:	cmp    eax,0x2f759f91
  410575:	(bad)  
  410577:	fstp   TBYTE PTR [esi]
  410579:	push   es
  41057a:	test   eax,0xed9476f8
  41057f:	int3   
  410580:	test   DWORD PTR [edx+0x1e],edx
  410583:	jne    0x41059b
  410585:	or     al,0xf9
  410587:	lea    ebp,[edi]
  410589:	clc    
  41058a:	xchg   ecx,eax
  41058b:	xchg   ebp,eax
  41058c:	mov    eax,0xbdfadbd3
  410591:	ss inc ebp
  410593:	js     0x410579
  410595:	xchg   ebx,eax
  410596:	pop    esp
  410597:	add    DWORD PTR [edx],eax
  410599:	out    0x62,eax
  41059b:	xor    eax,0xab38b65e
  4105a0:	cmp    BYTE PTR [eax+0x130ed5bb],dh
  4105a6:	mov    ebp,0x8b1855b2
  4105ab:	cwde   
  4105ac:	dec    esi
  4105ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ae:	clc    
  4105af:	mov    edi,0x4e2bcf5c
  4105b4:	push   eax
  4105b5:	sbb    bl,BYTE PTR [esi+0x21d01d51]
  4105bb:	sub    BYTE PTR [edx-0x5eb50e23],0x1f
  4105c2:	pop    edx
  4105c3:	push   edi
  4105c4:	loopne 0x4105f8
  4105c6:	imul   esp
  4105c8:	and    eax,0xa5a55d86
  4105cd:	pop    edi
  4105ce:	outs   dx,BYTE PTR ds:[esi]
  4105cf:	(bad)  
  4105d0:	stc    
  4105d1:	xchg   ebx,eax
  4105d2:	(bad)  
  4105d3:	xor    ebx,DWORD PTR [eax+0x436b166a]
  4105d9:	aas    
  4105da:	mov    esp,0x478aa57c
  4105df:	jmp    0xec02:0xd42ddc7b
  4105e6:	loope  0x4105e1
  4105e8:	or     edi,DWORD PTR [esi]
  4105ea:	sub    eax,0x48536097
  4105ef:	fsubr  DWORD PTR [ebx+0x4aa6bb26]
  4105f5:	mov    al,0x4f
  4105f7:	add    al,0x9c
  4105f9:	xor    BYTE PTR [edi-0x3e2c9c8d],dl
  4105ff:	out    dx,al
  410600:	call   0x28c1:0xc18fb583
  410607:	or     ebp,DWORD PTR [ecx+0x27e76320]
  41060d:	adc    bh,BYTE PTR [ebx-0x78]
  410610:	int3   
  410611:	inc    edi
  410612:	adc    esi,esp
  410614:	icebp  
  410615:	sbb    BYTE PTR [esi+edx*2],bh
  410618:	enter  0xc6c4,0x40
  41061c:	es cwde 
  41061e:	jb     0x4105b8
  410620:	sbb    al,0xf5
  410622:	mov    dh,0xba
  410624:	int3   
  410625:	scas   eax,DWORD PTR es:[edi]
  410626:	and    ah,BYTE PTR [esi-0xe]
  410629:	xor    esi,ebp
  41062b:	popa   
  41062c:	cs or  eax,0x4fff4165
  410632:	pop    ds
  410633:	xor    ecx,eax
  410635:	jle    0x410679
  410637:	dec    eax
  410638:	das    
  410639:	pop    edi
  41063a:	leave  
  41063b:	sub    DWORD PTR [edx-0x7deb9afc],esp
  410641:	mov    cl,al
  410643:	ins    DWORD PTR es:[edi],dx
  410644:	retf   
  410645:	in     al,0xd2
  410647:	iret   
  410648:	or     al,al
  41064a:	xor    BYTE PTR [ebx-0x394b44c2],0x27
  410651:	xor    BYTE PTR [edx+0x49],bh
  410654:	sar    al,cl
  410656:	jne    0x4106cc
  410658:	xchg   ebp,eax
  410659:	and    BYTE PTR ds:0x6ac64327,ah
  41065f:	inc    ebp
  410660:	call   0xbb69eef5
  410665:	or     BYTE PTR [esi+0xa],bl
  410668:	mov    bh,0xbb
  41066a:	rcl    DWORD PTR [eax-0x5e],1
  41066d:	fcom   DWORD PTR [esi-0x33]
  410670:	xor    dl,BYTE PTR [edx+0x74]
  410673:	xchg   DWORD PTR [eax+0x14],ecx
  410676:	addr16 push esp
  410678:	xchg   ebx,eax
  410679:	jg     0x410638
  41067b:	add    BYTE PTR [edx-0x5e5ff54],ch
  410681:	stos   DWORD PTR es:[edi],eax
  410682:	pop    ebp
  410683:	stc    
  410684:	cmp    DWORD PTR [esi+eiz*2],esi
  410687:	pminub mm0,QWORD PTR [ebp+0x58ebe9f7]
  41068e:	into   
  41068f:	jae    0x41070f
  410691:	jbe    0x410634
  410693:	cmp    al,0xcd
  410695:	xor    edi,esp
  410697:	pop    es
  410698:	ins    DWORD PTR es:[edi],dx
  410699:	add    eax,0xcb6f767d
  41069e:	pop    es
  41069f:	jbe    0x4106a0
  4106a1:	(bad)  [ebx-0x6cc2e69b]
  4106a7:	test   al,0xb9
  4106a9:	adc    ebp,DWORD PTR [eax-0x4654748a]
  4106af:	(bad)  
  4106b0:	fs aaa 
  4106b2:	sbb    bh,BYTE PTR [ecx+0x41]
  4106b5:	cs pop edx
  4106b7:	into   
  4106b8:	push   esi
  4106b9:	icebp  
  4106ba:	ret    0xd13
  4106bd:	jne    0x410670
  4106bf:	into   
  4106c0:	push   ss
  4106c1:	lods   eax,DWORD PTR ds:[esi]
  4106c2:	dec    esp
  4106c3:	inc    ecx
  4106c4:	push   eax
  4106c5:	out    0x7a,al
  4106c7:	sti    
  4106c8:	add    eax,0x30ddab8
  4106cd:	mov    ebp,0x1d9014ce
  4106d2:	test   eax,0xc6125b1c
  4106d7:	pop    ss
  4106d8:	mov    ds:0x4cbe2a9d,eax
  4106dd:	out    dx,eax
  4106de:	push   ds
  4106df:	push   es
  4106e0:	ins    BYTE PTR es:[edi],dx
  4106e1:	pop    edi
  4106e2:	mov    edx,ebx
  4106e4:	cmovle esi,DWORD PTR [ebx]
  4106e7:	lea    esp,[ebp+0x7b5490b2]
  4106ed:	mov    dl,0xe4
  4106ef:	jl     0x410674
  4106f1:	mov    ebp,0x66dd1dd4
  4106f6:	mov    bl,0x29
  4106f8:	dec    esi
  4106f9:	mov    ecx,0xf3f08e64
  4106fe:	lds    esi,FWORD PTR [ebp+0x64]
  410701:	retf   
  410702:	cli    
  410703:	lea    esi,[edi+edx*2-0x5f]
  410707:	fstp   TBYTE PTR [edx*1+0x173dff33]
  41070e:	adc    esp,DWORD PTR [ecx+edx*2+0x15e9642f]
  410715:	inc    esp
  410716:	mov    bl,0xe
  410718:	adc    al,ch
  41071a:	cmp    eax,0x65e312dd
  41071f:	out    dx,al
  410720:	push   ebp
  410721:	ret    
  410722:	inc    ecx
  410723:	cdq    
  410724:	mov    ds:0x3784d0e7,eax
  410729:	push   eax
  41072a:	(bad)  
  41072b:	(bad)  
  41072c:	setbe  BYTE PTR [esi]
  41072f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410730:	sahf   
  410731:	cld    
  410732:	dec    ebp
  410733:	jg     0x4106e9
  410735:	lahf   
  410736:	leave  
  410737:	addr16 enter 0x38fc,0xa3
  41073c:	cld    
  41073d:	retf   0xe4d4
  410740:	jmp    0x41076d
  410742:	sub    dl,ah
  410744:	ds xor cl,ch
  410747:	or     BYTE PTR [ebx],bh
  410749:	out    dx,al
  41074a:	mov    ebx,0x3b02b717
  41074f:	mov    esi,0xe41b8f72
  410754:	ss stc 
  410756:	popa   
  410757:	sub    eax,0xe07d8af1
  41075c:	pop    ss
  41075d:	dec    eax
  41075e:	imul   esi,DWORD PTR [esi-0x21],0x8c8f1549
  410765:	test   al,0x58
  410767:	sub    ebp,DWORD PTR [edi]
  410769:	fldenv [ebx-0x6c383459]
  41076f:	mov    cl,0xe0
  410771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410772:	mov    BYTE PTR [ebx-0x584f2499],0xbc
  410779:	pushf  
  41077a:	dec    ebp
  41077b:	cs addr16 push ebp
  41077e:	test   BYTE PTR [edi],ah
  410780:	test   eax,0x682fa22
  410785:	adc    eax,0xce0fbe01
  41078a:	sbb    dh,BYTE PTR [eax+eiz*8+0x15]
  41078e:	xchg   ah,bl
  410790:	sub    BYTE PTR [eax-0x7f77dafb],bh
  410796:	adc    ecx,DWORD PTR [edx-0x30]
  410799:	bts    edx,esi
  41079c:	dec    edi
  41079d:	lea    ebx,[ebx-0x1e0ae3b7]
  4107a3:	fild   QWORD PTR ds:[eax+eiz*4-0x42]
  4107a8:	sub    DWORD PTR [edi],esi
  4107aa:	into   
  4107ab:	mov    ch,0xe3
  4107ad:	inc    ebx
  4107ae:	retf   
  4107af:	xchg   edx,eax
  4107b0:	fdivr  QWORD PTR [ecx-0x79]
  4107b3:	xor    al,0xe9
  4107b5:	cs dec ecx
  4107b7:	add    dh,cl
  4107b9:	jb     0x410822
  4107bb:	popf   
  4107bc:	and    al,0x82
  4107be:	lods   al,BYTE PTR ds:[esi]
  4107bf:	add    ch,BYTE PTR [edi-0x71]
  4107c2:	pushf  
  4107c3:	adc    DWORD PTR ds:0x12957865,ebx
  4107c9:	sbb    bl,dh
  4107cb:	in     eax,0xa3
  4107cd:	sbb    BYTE PTR [ebp-0x2c],al
  4107d0:	ret    
  4107d1:	and    eax,0xf607d791
  4107d6:	inc    ecx
  4107d7:	ja     0x41076f
  4107d9:	stos   DWORD PTR es:[edi],eax
  4107da:	das    
  4107db:	cmp    eax,0xceb00ca6
  4107e0:	add    DWORD PTR [edi],edi
  4107e2:	and    al,BYTE PTR [edi+esi*2+0x37]
  4107e6:	pop    edi
  4107e7:	rcl    edi,1
  4107e9:	out    dx,eax
  4107ea:	and    eax,0x82745d84
  4107ef:	shl    DWORD PTR [ebp+0x36],0xe0
  4107f3:	in     eax,dx
  4107f4:	cwde   
  4107f5:	or     BYTE PTR [ecx],0x3c
  4107f8:	mov    edi,ecx
  4107fa:	leave  
  4107fb:	jnp    0x41083e
  4107fd:	ins    BYTE PTR es:[edi],dx
  4107fe:	sub    BYTE PTR [esi],0xbf
  410801:	jecxz  0x4107cc
  410803:	mov    eax,ds:0x9100ae7
  410808:	mov    al,ds:0x3306c90c
  41080d:	adc    al,0x49
  41080f:	js     0x410877
  410811:	cmp    al,0x57
  410813:	repnz xor eax,DWORD PTR [ebx]
  410816:	lods   eax,DWORD PTR ds:[esi]
  410817:	bound  edi,QWORD PTR [eax-0x5216a7d]
  41081d:	lods   eax,DWORD PTR es:[esi]
  41081f:	into   
  410820:	mov    ah,0x5b
  410822:	fucomp st(1)
  410824:	xchg   esp,eax
  410825:	pop    ebp
  410826:	mov    cl,0xc6
  410828:	xor    ebx,DWORD PTR [edi+edx*8-0x61d3e824]
  41082f:	retf   0x5b3c
  410832:	inc    ecx
  410833:	mov    gs,ecx
  410835:	imul   ebp
  410837:	cld    
  410838:	dec    eax
  410839:	clc    
  41083a:	pavgw  mm5,QWORD PTR [edi]
  41083d:	push   es
  41083e:	lock or BYTE PTR ss:[edx+eax*2-0x5bc9e67f],ch
  410847:	bound  esi,QWORD PTR [ebp-0x31dafb70]
  41084d:	and    eax,0xe41907a3
  410852:	mov    ch,0x93
  410854:	push   ss
  410855:	dec    esi
  410856:	jle    0x4107da
  410858:	je     0x4107ef
  41085a:	jg     0x410897
  41085c:	lods   al,BYTE PTR ds:[esi]
  41085d:	xor    BYTE PTR [ecx+0x22],bh
  410860:	mov    DWORD PTR ds:0xacce928,edx
  410866:	mov    dh,BYTE PTR [ebx-0x47379ea9]
  41086c:	pushf  
  41086d:	mov    eax,ds:0xcbbe7f09
  410872:	mov    dl,0x17
  410874:	inc    ecx
  410875:	mov    edx,0x4360771d
  41087a:	mov    dh,0xff
  41087c:	mov    ecx,0x84a6bd28
  410881:	in     eax,dx
  410882:	daa    
  410883:	mov    eax,ds:0x85e75c16
  410888:	fiadd  WORD PTR [eax]
  41088a:	lods   eax,DWORD PTR ds:[esi]
  41088b:	adc    edx,DWORD PTR [edx-0x25]
  41088e:	aam    0x56
  410890:	xchg   ebx,eax
  410891:	pop    ebp
  410892:	call   0x6497:0x332b2138
  410899:	outs   dx,BYTE PTR ds:[esi]
  41089a:	dec    esi
  41089b:	xchg   ah,bl
  41089d:	xchg   DWORD PTR [esi+0x59],eax
  4108a0:	add    eax,0x7fb2ea7b
  4108a5:	je     0x4108be
  4108a7:	jmp    0x41091c
  4108a9:	or     al,0x61
  4108ab:	iret   
  4108ac:	sar    bh,0xed
  4108af:	rol    ah,1
  4108b1:	and    esi,DWORD PTR [eax+0x6de2fa5f]
  4108b7:	add    edx,DWORD PTR [ebp-0x5cdd12bc]
  4108bd:	mov    esi,0x5a9011e8
  4108c2:	xor    al,BYTE PTR [ecx-0x58]
  4108c5:	xor    edi,DWORD PTR [eax+0x1db1e676]
  4108cb:	inc    edx
  4108cc:	in     eax,0x9a
  4108ce:	shl    BYTE PTR [ebx-0x3f],0x15
  4108d2:	enter  0x7628,0xc0
  4108d6:	sbb    DWORD PTR [edx],esi
  4108d8:	mov    al,0x67
  4108da:	nop
  4108db:	cmp    bh,bl
  4108dd:	xchg   ecx,eax
  4108de:	mov    ebp,0x1d473e81
  4108e3:	wbinvd 
  4108e5:	adc    eax,0x56b58a98
  4108ea:	jbe    0x4108b8
  4108ec:	mov    DWORD PTR [eax+0x6cfc106e],edi
  4108f2:	mov    ecx,0x6375baa0
  4108f7:	pushf  
  4108f8:	test   eax,0xd4e89122
  4108fd:	push   cs
  4108fe:	imul   edx,DWORD PTR [edx+edx*2-0x49],0xfffffff9
  410903:	and    al,cl
  410905:	pop    esi
  410906:	jl     0x4108c5
  410908:	retf   0xd219
  41090b:	push   ebx
  41090c:	mov    DWORD PTR [ebx],esi
  41090e:	xor    BYTE PTR [ecx+0x5c],cl
  410911:	fnstsw WORD PTR [ecx-0x53]
  410914:	cmp    ebp,DWORD PTR [ebp-0x44d77e3f]
  41091a:	lahf   
  41091b:	cwde   
  41091c:	adc    eax,0x423c54fb
  410921:	(bad)  
  410922:	lock mov al,0x72
  410925:	sub    BYTE PTR [edx],0xeb
  410928:	in     al,0xa0
  41092a:	icebp  
  41092b:	rol    DWORD PTR [edx-0x41],0x4f
  41092f:	call   0x6bb2:0xb9fc291c
  410936:	push   esp
  410937:	(bad)  
  410938:	mov    ebx,0x4e71a03f
  41093d:	inc    eax
  41093e:	pop    esi
  41093f:	repz push 0x4287f5e5
  410945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410946:	pop    ebx
  410947:	outs   dx,DWORD PTR ds:[esi]
  410948:	nop
  410949:	mov    ch,0xef
  41094b:	sbb    ch,0xc2
  41094e:	test   DWORD PTR [ebx+0x61],0xcf9dff6e
  410955:	cmp    dl,cl
  410957:	cmc    
  410958:	dec    edx
  410959:	es inc ebx
  41095b:	wbinvd 
  41095d:	cmp    ecx,DWORD PTR [edi-0x120fea2d]
  410963:	dec    edi
  410964:	cmp    dh,ah
  410966:	fcmovb st,st(5)
  410968:	or     ecx,DWORD PTR [eax-0x7a]
  41096b:	fninit 
  41096d:	push   esp
  41096e:	add    DWORD PTR [eax-0x708c61f9],edx
  410974:	pop    ebx
  410975:	scas   eax,DWORD PTR es:[edi]
  410976:	ss inc esp
  410978:	pop    ds
  410979:	jb     0x4109ef
  41097b:	int3   
  41097c:	mov    ds,WORD PTR [ebx-0x2fe06bb1]
  410982:	fdivr  st(4),st
  410984:	push   0x5c
  410986:	mov    al,ds:0x8cd9dd00
  41098b:	or     DWORD PTR [ebx],ecx
  41098d:	dec    esp
  41098e:	pusha  
  41098f:	ret    0x6b34
  410992:	retf   
  410993:	dec    eax
  410994:	adc    al,0xf2
  410996:	and    dh,al
  410998:	jns    0x410957
  41099a:	sub    al,0x79
  41099c:	or     ch,BYTE PTR [edx]
  41099e:	shl    DWORD PTR [ebp-0x63],cl
  4109a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a2:	rol    bh,0x86
  4109a5:	xchg   edi,eax
  4109a6:	mov    dl,dl
  4109a8:	pop    es
  4109a9:	pop    esi
  4109aa:	fst    QWORD PTR ss:[edx]
  4109ad:	out    0x4d,al
  4109af:	sub    DWORD PTR ds:0xe1339a47,ecx
  4109b5:	mov    eax,0x192c92e1
  4109ba:	and    eax,0x2087272c
  4109bf:	cs jle 0x410a0c
  4109c2:	add    DWORD PTR [eax+0x3c],ebp
  4109c5:	pop    esp
  4109c6:	stos   BYTE PTR es:[edi],al
  4109c7:	inc    esi
  4109c8:	mov    eax,ds:0x446269eb
  4109cd:	ja     0x41098f
  4109cf:	imul   eax,ecx,0xffffff83
  4109d2:	add    eax,0xee4d82ed
  4109d7:	dec    esi
  4109d8:	into   
  4109d9:	ret    0x186
  4109dc:	lahf   
  4109dd:	adc    dh,BYTE PTR [edx-0x74711b45]
  4109e3:	shl    DWORD PTR [eax],cl
  4109e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e6:	rol    DWORD PTR [ecx-0x5b],0xd7
  4109ea:	retf   0x2dc
  4109ed:	retf   0xb512
  4109f0:	mov    al,ds:0x72527f1d
  4109f5:	call   0x92343ec0
  4109fa:	jl     0x4109b9
  4109fc:	div    BYTE PTR [di+0x558f]
  410a01:	(bad)  
  410a02:	out    0x3d,eax
  410a04:	imul   esp,DWORD PTR ds:0x7243f92d,0x60
  410a0b:	jbe    0x410a01
  410a0d:	push   ebp
  410a0e:	sub    DWORD PTR [eax],edx
  410a10:	add    eax,0x8d1f163d
  410a15:	adc    DWORD PTR [edx+0x15ba9649],0xffffffe6
  410a1c:	call   0x53af348c
  410a21:	bound  ecx,QWORD PTR [edx-0x2300a58f]
  410a27:	push   ss
  410a28:	arpl   sp,si
  410a2a:	shl    DWORD PTR [edx+0x7f2ed910],0xae
  410a31:	adc    DWORD PTR [edx+0x6b06a31],edi
  410a37:	mov    cl,BYTE PTR [ebx]
  410a39:	aas    
  410a3a:	jmp    0x410a82
  410a3c:	lods   eax,DWORD PTR ds:[esi]
  410a3d:	shl    DWORD PTR [eax+0x41bc2c01],0xe2
  410a44:	adc    DWORD PTR [edx],esp
  410a46:	sbb    BYTE PTR [esi-0x55ebd8a7],0x95
  410a4d:	cmp    ecx,edi
  410a4f:	xchg   edi,eax
  410a50:	cmp    DWORD PTR [edx-0x6b],edx
  410a53:	add    al,0x8a
  410a55:	push   ebp
  410a56:	inc    ebp
  410a57:	adc    eax,0x27347d71
  410a5c:	test   BYTE PTR [eax+eax*8],bl
  410a5f:	mov    ebx,0x67ecfc
  410a64:	cmp    edi,ecx
  410a66:	(bad)  
  410a67:	bound  eax,QWORD PTR [edi]
  410a69:	loope  0x410ac1
  410a6b:	mov    bl,0x6e
  410a6d:	mov    ch,0x95
  410a6f:	and    eax,0x312a93b4
  410a74:	and    al,0xd1
  410a76:	cli    
  410a77:	test   DWORD PTR [ecx-0x15792484],0xff5924fc
  410a81:	outs   dx,BYTE PTR ds:[esi]
  410a82:	dec    esi
  410a83:	jmp    0xb320a04e
  410a88:	outs   dx,DWORD PTR ds:[esi]
  410a89:	xlat   BYTE PTR ds:[ebx]
  410a8a:	outs   dx,BYTE PTR ds:[esi]
  410a8b:	jne    0x410b05
  410a8d:	xchg   edi,eax
  410a8e:	int    0xe
  410a90:	(bad)  
  410a91:	jns    0x410a3b
  410a93:	dec    esp
  410a94:	jb     0x410ab2
  410a96:	and    al,0x41
  410a98:	lahf   
  410a99:	jge    0x410ae5
  410a9b:	adc    DWORD PTR [edx],edx
  410a9d:	repnz or al,0xc
  410aa0:	push   ebx
  410aa1:	adc    al,0xed
  410aa3:	(bad)  
  410aa4:	xchg   ebx,eax
  410aa5:	sub    eax,0xea618cc2
  410aaa:	les    esp,FWORD PTR [edx+0x4361e789]
  410ab0:	inc    ebp
  410ab2:	xor    DWORD PTR ds:0xf067a3d1,ecx
  410ab8:	sbb    eax,0x73cc8eb6
  410abd:	in     eax,dx
  410abe:	xchg   edx,eax
  410abf:	in     al,0x9f
  410ac1:	xor    BYTE PTR [edx],bl
  410ac3:	(bad)  
  410ac4:	and    eax,DWORD PTR [ecx+0x48]
  410ac7:	ins    BYTE PTR es:[edi],dx
  410ac8:	retf   
  410ac9:	(bad)  
  410aca:	sahf   
  410acb:	test   BYTE PTR [ebx+0x2a],al
  410ace:	cmp    BYTE PTR [edi],ch
  410ad0:	pop    es
  410ad1:	mov    esi,DWORD PTR ds:0x8e592a56
  410ad7:	xchg   ebx,eax
  410ad8:	sti    
  410ad9:	leave  
  410ada:	leave  
  410adb:	icebp  
  410adc:	mov    ch,0x14
  410ade:	retf   
  410adf:	push   ebx
  410ae0:	test   BYTE PTR [esi+eiz*2],0x8b
  410ae4:	xor    al,0x82
  410ae6:	or     edx,DWORD PTR [edx+0x7]
  410ae9:	int    0xb4
  410aeb:	xchg   edi,eax
  410aec:	dec    edi
  410aed:	out    dx,ax
  410aef:	xor    DWORD PTR [esi],ebx
  410af1:	clc    
  410af2:	jg     0x410ab2
  410af4:	lds    ebx,FWORD PTR ds:0x3c7407a2
  410afa:	stos   DWORD PTR es:[edi],eax
  410afb:	test   al,0xb8
  410afd:	sub    al,0x20
  410aff:	sbb    BYTE PTR [esi-0x3a],0x9c
  410b03:	and    al,0x7
  410b05:	popa   
  410b06:	push   ecx
  410b07:	es imul si,di,0xffaa
  410b0c:	jmp    0xea297c19
  410b11:	repz ret 0xe920
  410b15:	push   0x709ede8a
  410b1a:	xchg   BYTE PTR ds:0xd3161d40,ch
  410b20:	dec    esi
  410b21:	mov    ebp,0x5b692b73
  410b26:	popa   
  410b27:	les    esi,FWORD PTR [ecx]
  410b29:	mov    esp,0xbb248af9
  410b2e:	inc    esi
  410b2f:	pop    ss
  410b30:	scas   al,BYTE PTR es:[edi]
  410b31:	dec    edx
  410b32:	jg     0x410b2a
  410b34:	xor    al,0x26
  410b36:	cld    
  410b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b38:	cmp    al,0x68
  410b3a:	out    dx,eax
  410b3b:	xor    BYTE PTR [esi+0x75],dh
  410b3e:	test   BYTE PTR [esi-0x9],dl
  410b41:	push   cs
  410b42:	dec    ecx
  410b43:	in     eax,dx
  410b44:	push   ecx
  410b45:	sbb    eax,0x38670594
  410b4a:	aad    0x0
  410b4c:	sub    bl,BYTE PTR [eax+eiz*4-0x3b5808be]
  410b53:	data16 jbe 0x410b0a
  410b56:	jno    0x410b02
  410b58:	jo     0x410ae0
  410b5a:	dec    edi
  410b5b:	int    0x40
  410b5d:	jmp    esi
  410b5f:	lea    esi,[edx]
  410b61:	inc    eax
  410b62:	enter  0x48a0,0xa4
  410b66:	mov    BYTE PTR [ebx+ecx*2],al
  410b69:	and    BYTE PTR [eax],bh
  410b6b:	mov    dl,ch
  410b6d:	xlat   BYTE PTR ds:[ebx]
  410b6e:	pushf  
  410b6f:	repnz test BYTE PTR [edi],0x4c
  410b73:	mov    al,ds:0xd98869d8
  410b78:	push   ss
  410b79:	jge    0x410bca
  410b7b:	mov    cl,0x44
  410b7d:	mov    ebx,0x215f6c96
  410b82:	in     al,dx
  410b83:	jns    0x410be9
  410b85:	pop    eax
  410b86:	add    eax,0x832684f1
  410b8b:	popf   
  410b8c:	pop    ebx
  410b8d:	test   al,0x29
  410b8f:	into   
  410b90:	fs or  eax,0x359996c
  410b96:	dec    ebp
  410b97:	xchg   ecx,eax
  410b98:	xor    eax,0x1f7ae3ea
  410b9d:	gs xor eax,0x60ceb1f9
  410ba3:	dec    eax
  410ba4:	rol    BYTE PTR [edx+0x2735a1cc],0x1e
  410bab:	rcl    BYTE PTR [ebp+0x7f],0xd5
  410baf:	adc    DWORD PTR [edi],0x36e72d76
  410bb5:	dec    esi
  410bb6:	xor    DWORD PTR [ebx],0x5a
  410bb9:	push   0x18
  410bbb:	add    ch,dh
  410bbd:	mov    edi,0xde910dbc
  410bc2:	cmp    al,0x40
  410bc4:	addr16 sub cl,dl
  410bc7:	ss jnp 0x410ba8
  410bca:	fwait
  410bcb:	rcl    BYTE PTR [ebx-0x26],1
  410bce:	(bad)  
  410bcf:	loopne 0x410b58
  410bd1:	cs mov cl,0x71
  410bd4:	data16 or al,0xc5
  410bd7:	jmp    0x2c4b:0xc440be4a
  410bde:	cmp    DWORD PTR [ecx+0x3c905aac],edx
  410be4:	gs pop esi
  410be6:	mov    ds:0x3bf23a9d,al
  410beb:	cli    
  410bec:	sbb    edx,DWORD PTR [esi+0x7d6406e1]
  410bf2:	out    dx,al
  410bf3:	das    
  410bf4:	jmp    0xa99e93a6
  410bf9:	xchg   esi,eax
  410bfa:	xor    cl,BYTE PTR [ecx]
  410bfc:	add    BYTE PTR [edi+edi*8],0xd5
  410c00:	add    DWORD PTR [ecx-0x7f2e3b59],esi
  410c06:	xchg   esp,eax
  410c07:	push   ss
  410c08:	outs   dx,DWORD PTR ds:[esi]
  410c09:	cld    
  410c0a:	lods   eax,DWORD PTR ds:[esi]
  410c0b:	das    
  410c0c:	inc    ecx
  410c0d:	and    BYTE PTR [ebx+edi*8],ch
  410c10:	pushf  
  410c11:	add    DWORD PTR [edi+0x274b242b],esp
  410c17:	dec    esi
  410c18:	jecxz  0x410c84
  410c1a:	pop    ebp
  410c1b:	push   edx
  410c1c:	push   eax
  410c1d:	inc    esi
  410c1e:	and    DWORD PTR [ebp-0x427bc222],0xe5076fc8
  410c28:	iret   
  410c29:	xchg   ebp,eax
  410c2a:	dec    esi
  410c2b:	cmp    esi,DWORD PTR [ebx-0x60]
  410c2e:	cli    
  410c2f:	xlat   BYTE PTR ds:[ebx]
  410c30:	leave  
  410c31:	jg     0x410c14
  410c33:	shl    DWORD PTR [ebx],cl
  410c35:	mov    ds:0xb72e3c8f,eax
  410c3a:	fadd   st,st(1)
  410c3c:	mov    cl,0x69
  410c3e:	adc    al,dh
  410c40:	sbb    ah,cl
  410c42:	std    
  410c43:	mov    dl,0xb9
  410c45:	xchg   ebx,ebx
  410c47:	push   cs
  410c48:	shl    BYTE PTR [edi+eiz*2],cl
  410c4b:	xchg   edx,eax
  410c4c:	aas    
  410c4d:	lahf   
  410c4e:	and    DWORD PTR [esi-0x27],eax
  410c51:	shr    DWORD PTR ds:0x3e381831,1
  410c57:	inc    ecx
  410c58:	xchg   BYTE PTR [ecx],cl
  410c5a:	mov    ebp,DWORD PTR [ebx+0x2dceb78f]
  410c60:	mov    edx,0xbb7146bd
  410c65:	hlt    
  410c66:	push   cs
  410c67:	scas   eax,DWORD PTR es:[edi]
  410c68:	mov    edx,0x988f2335
  410c6d:	cmc    
  410c6e:	mov    ds:0x96e551f5,eax
  410c73:	test   DWORD PTR [edx],ebp
  410c75:	stos   BYTE PTR es:[edi],al
  410c76:	add    BYTE PTR [esi-0x9],dl
  410c79:	jbe    0x410c29
  410c7b:	inc    edx
  410c7c:	xchg   edi,eax
  410c7d:	cmp    ah,BYTE PTR [ebp+0x62]
  410c80:	leave  
  410c81:	jne    0x410c5c
  410c83:	punpckhwd mm3,QWORD PTR [ebp-0x8677b64]
  410c8a:	dec    esi
  410c8b:	gs stos BYTE PTR es:[edi],al
  410c8d:	call   0x52d8:0xcc1142f8
  410c94:	in     al,dx
  410c95:	gs add eax,0x9ddd1147
  410c9b:	fst    DWORD PTR [edi+ebx*1]
  410c9e:	iret   
  410c9f:	add    cl,cl
  410ca1:	inc    esi
  410ca2:	cld    
  410ca3:	retf   0x544
  410ca6:	xor    BYTE PTR [esi],cl
  410ca8:	test   eax,0xbd7e7321
  410cad:	pushf  
  410cae:	int3   
  410caf:	rcl    DWORD PTR [eax+0x24],1
  410cb2:	mov    ah,0xb6
  410cb4:	mov    ?,WORD PTR [ebp+ecx*1+0x1a]
  410cb8:	dec    esp
  410cb9:	and    BYTE PTR [ebp+0xa],bl
  410cbc:	jmp    0x8df840f6
  410cc1:	dec    esp
  410cc2:	jl     0x410d23
  410cc4:	or     BYTE PTR [esi+0x4f0be2dd],bh
  410cca:	retf   
  410ccb:	jl     0x410c74
  410ccd:	stc    
  410cce:	inc    edx
  410ccf:	fbstp  TBYTE PTR [eax+ecx*8-0x6836ca59]
  410cd6:	mov    fs,WORD PTR [eax+0xc52d6cb]
  410cdc:	fs jnp 0x410d34
  410cdf:	repnz mov BYTE PTR [ebx],ah
  410ce2:	push   edi
  410ce3:	add    DWORD PTR [edx+0x3e],ebp
  410ce6:	sub    al,0xa9
  410ce8:	cwde   
  410ce9:	je     0x410cfc
  410ceb:	and    al,0x27
  410ced:	xor    al,0x7c
  410cef:	add    bh,ah
  410cf1:	int3   
  410cf2:	not    DWORD PTR [eax]
  410cf4:	add    DWORD PTR [ecx-0x71],esp
  410cf7:	push   ecx
  410cf8:	xor    esp,DWORD PTR [edx-0x2c]
  410cfb:	xlat   BYTE PTR ds:[ebx]
  410cfc:	or     bh,BYTE PTR [edx]
  410cfe:	bound  edx,QWORD PTR [ebp-0x6c]
  410d01:	push   ebp
  410d02:	jmp    0xdf03:0x5ae55699
  410d09:	mov    cs,WORD PTR [esi+0x42]
  410d0c:	(bad)  
  410d0d:	retf   0x3a56
  410d10:	sbb    BYTE PTR [ebx],bl
  410d12:	out    dx,al
  410d13:	clc    
  410d14:	nop
  410d15:	mov    ds:0x6052d87a,eax
  410d1a:	cdq    
  410d1b:	in     al,0x8b
  410d1d:	imul   ebx,DWORD PTR [eax+0x263f484a],0x4e
  410d24:	lea    ebp,[esi]
  410d26:	cmp    ebp,DWORD PTR [ecx-0x49]
  410d29:	cmp    al,0x90
  410d2b:	xor    DWORD PTR [eax-0xb],ebx
  410d2e:	sub    BYTE PTR [edi],0x56
  410d31:	gs inc edx
  410d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d34:	jae    0x410d96
  410d36:	retf   0x8347
  410d39:	add    eax,0x7074e43d
  410d3e:	daa    
  410d3f:	ja     0x410cc5
  410d41:	push   edi
  410d42:	sub    ebx,DWORD PTR [ebx+edi*2-0x6f]
  410d46:	mov    esp,0x17e6f465
  410d4b:	add    BYTE PTR [edi],dl
  410d4d:	stos   BYTE PTR es:[edi],al
  410d4e:	das    
  410d4f:	adc    al,BYTE PTR ds:0xcece2c7e
  410d55:	mov    BYTE PTR [esi+0x6a16a7e7],ch
  410d5b:	fcmovu st,st(6)
  410d5d:	jns    0x410da2
  410d5f:	cld    
  410d60:	mov    eax,ds:0x7b8a904f
  410d65:	aas    
  410d66:	outs   dx,BYTE PTR ds:[esi]
  410d67:	nop
  410d68:	add    al,0xf5
  410d6a:	(bad)  
  410d6c:	push   0x8fac8f1c
  410d71:	fdiv   QWORD PTR [edx+0x52adc9ac]
  410d77:	or     dh,bh
  410d79:	sub    eax,0xaf498efa
  410d7e:	xor    DWORD PTR [ebx-0x32],0xffffffc0
  410d82:	jg     0x410d99
  410d84:	cs sub eax,0xf66a3d48
  410d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d8b:	out    dx,eax
  410d8c:	cmp    eax,0xec5d6c6c
  410d91:	push   ss
  410d92:	adc    al,0x68
  410d94:	stos   DWORD PTR es:[edi],eax
  410d95:	ss pop esi
  410d97:	and    esp,edi
  410d99:	sar    BYTE PTR [edi+0x61c3dafb],0xfd
  410da0:	inc    ebx
  410da1:	idiv   BYTE PTR [ebx+eiz*8-0x1564b612]
  410da8:	jecxz  0x410d43
  410daa:	mov    DWORD PTR [eax+0x614b6755],eax
  410db0:	addr16 and al,0x1b
  410db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db4:	mov    dl,0xc4
  410db6:	lds    edx,FWORD PTR [ebp-0x1e]
  410db9:	test   eax,0xf18d7b30
  410dbe:	dec    ebx
  410dbf:	adc    al,0x1c
  410dc1:	(bad)  es:[ebp+0x40813183]
  410dc8:	dec    ebx
  410dc9:	pop    esp
  410dca:	push   ebx
  410dcb:	xor    cl,BYTE PTR [edx-0x75515372]
  410dd1:	cld    
  410dd2:	dec    ecx
  410dd3:	sbb    al,bh
  410dd5:	fld    TBYTE PTR [ebx-0x56]
  410dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd9:	sub    dh,BYTE PTR [edi-0x7f]
  410ddc:	(bad)  
  410ddd:	fadd   DWORD PTR [ebp+0x39397a74]
  410de3:	cli    
  410de4:	adc    eax,0xc24fd215
  410de9:	es test al,dl
  410dec:	pop    edi
  410ded:	and    ecx,0xffffffae
  410df0:	sub    DWORD PTR [eax*4-0x7e7804ea],esi
  410df7:	leave  
  410df8:	ret    
  410df9:	js     0x410e10
  410dfb:	sbb    al,0x8e
  410dfd:	dec    edi
  410dfe:	jae    0x410ddb
  410e00:	jb     0x410dec
  410e02:	xchg   edx,eax
  410e03:	cli    
  410e04:	aam    0x75
  410e06:	jne    0x410e76
  410e08:	add    al,BYTE PTR [esi-0x79ae767e]
  410e0e:	pop    edi
  410e0f:	les    ebx,FWORD PTR [edx+esi*8+0xa]
  410e13:	mov    dh,0xf9
  410e15:	push   ds
  410e16:	jno    0x410d9d
  410e18:	sbb    DWORD PTR [edx],ecx
  410e1a:	js     0x410e30
  410e1c:	xor    ebp,DWORD PTR [ebx+0x77]
  410e1f:	sbb    eax,0xf9f4b1dc
  410e24:	lods   eax,DWORD PTR ds:[esi]
  410e25:	pop    ebp
  410e26:	add    edx,DWORD PTR [eax]
  410e28:	add    cl,cl
  410e2a:	out    dx,eax
  410e2b:	bound  ebx,QWORD PTR [ebx-0x4e]
  410e2e:	pop    edi
  410e2f:	mov    eax,0x2843c4b0
  410e34:	not    DWORD PTR [ecx-0x3de90cd6]
  410e3a:	mov    ebx,edi
  410e3c:	and    DWORD PTR [ecx-0x7309475d],eax
  410e42:	mov    eax,0x32490438
  410e47:	cmp    eax,ebx
  410e49:	je     0x410e7e
  410e4b:	push   ebp
  410e4c:	scas   al,BYTE PTR es:[edi]
  410e4d:	stc    
  410e4e:	xor    esi,DWORD PTR [esi-0x554e6a12]
  410e54:	mov    ch,0x53
  410e56:	rcl    DWORD PTR [eax+0x315e2be6],cl
  410e5c:	mul    BYTE PTR ds:[ebx]
  410e5f:	mov    al,0xc8
  410e61:	bsr    ebx,DWORD PTR [ebx]
  410e64:	jle    0x410e7d
  410e66:	pushf  
  410e67:	lock jne 0x410e95
  410e6a:	inc    eax
  410e6b:	and    ah,dh
  410e6d:	int    0x3c
  410e6f:	or     eax,DWORD PTR [esi]
  410e71:	jnp    0x410e31
  410e73:	sub    dh,BYTE PTR [esi]
  410e75:	popa   
  410e76:	and    edx,DWORD PTR [edi-0x2ef9e44c]
  410e7c:	cdq    
  410e7d:	mov    ds:0xd857be1a,al
  410e82:	add    al,0x15
  410e84:	fs jmp 0x410e61
  410e87:	xor    DWORD PTR [esi-0x1474f763],ecx
  410e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8e:	add    DWORD PTR [esi-0x36],esp
  410e91:	scas   eax,DWORD PTR es:[edi]
  410e92:	aaa    
  410e93:	mov    al,ds:0x3c88730a
  410e98:	jp     0x410e60
  410e9a:	jg     0x410edf
  410e9c:	scas   eax,DWORD PTR es:[edi]
  410e9d:	fwait
  410e9e:	push   ebp
  410e9f:	cli    
  410ea0:	in     al,0xbc
  410ea2:	ss inc edi
  410ea4:	jmp    0xf4224250
  410ea9:	cmc    
  410eaa:	or     ebp,esi
  410eac:	loopne 0x410e3a
  410eae:	(bad)  
  410eaf:	pop    ebx
  410eb0:	push   eax
  410eb1:	adc    eax,0x87174e71
  410eb6:	dec    edx
  410eb7:	adc    BYTE PTR [ecx-0x3e],bh
  410eba:	cmp    cl,BYTE PTR [ebp-0x52]
  410ebd:	arpl   WORD PTR [esi],di
  410ebf:	pop    ds
  410ec0:	dec    esi
  410ec1:	dec    ecx
  410ec2:	cmc    
  410ec3:	out    0x7b,al
  410ec5:	sub    DWORD PTR [esi],edx
  410ec7:	xchg   BYTE PTR [ebp-0x72c476aa],bh
  410ecd:	xor    al,0xfa
  410ecf:	sbb    ah,BYTE PTR [edi-0x45]
  410ed2:	in     eax,dx
  410ed3:	push   eax
  410ed4:	dec    ecx
  410ed5:	cld    
  410ed6:	popf   
  410ed7:	cdq    
  410ed8:	xchg   edx,eax
  410ed9:	xchg   esp,eax
  410eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410edb:	aad    0x6c
  410edd:	loopne 0x410f2c
  410edf:	pop    ebx
  410ee0:	gs into 
  410ee2:	mov    fs,WORD PTR [esi-0x40]
  410ee5:	cmp    dh,BYTE PTR ds:0x4022a839
  410eeb:	fisub  WORD PTR [ebp-0x592b821c]
  410ef1:	xchg   edi,eax
  410ef2:	inc    edi
  410ef3:	mov    esp,DWORD PTR [eax]
  410ef5:	inc    eax
  410ef6:	mov    ah,0xc2
  410ef8:	repz lds edx,FWORD PTR [ebx]
  410efb:	std    
  410efc:	inc    edi
  410efd:	iret   
  410efe:	aas    
  410eff:	xchg   ecx,eax
  410f00:	sub    DWORD PTR [esi],edx
  410f02:	addr16 xchg ecx,eax
  410f04:	and    dl,BYTE PTR ds:0xe4c88ebe
  410f0a:	mov    ch,0xd9
  410f0c:	dec    esp
  410f0d:	sbb    al,0x55
  410f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f10:	inc    DWORD PTR [edx]
  410f12:	pop    esp
  410f13:	pop    esi
  410f14:	mov    eax,ds:0x593884e9
  410f19:	dec    ebx
  410f1a:	shl    BYTE PTR ds:0xd4ab41fe,0x20
  410f21:	add    eax,0xcd847d0d
  410f26:	push   ebp
  410f27:	mov    ds:0xca171a3d,eax
  410f2c:	jp     0x410f2d
  410f2e:	or     DWORD PTR [ebx+0x5b18f596],0x68119211
  410f38:	out    dx,al
  410f39:	dec    ecx
  410f3a:	cld    
  410f3b:	dec    edi
  410f3c:	jbe    0x410f7d
  410f3e:	or     bl,al
  410f40:	lahf   
  410f41:	cmp    BYTE PTR [ecx+0xce749c4],bl
  410f47:	xor    al,dh
  410f49:	lea    edx,[ecx-0x4d]
  410f4c:	xor    BYTE PTR [ebx],al
  410f4e:	pop    edx
  410f4f:	jge    0x410f9f
  410f51:	js     0x410f1a
  410f53:	sahf   
  410f54:	aad    0xc9
  410f56:	enter  0x10d9,0x63
  410f5a:	pop    ds
  410f5b:	add    dh,bh
  410f5d:	outs   dx,BYTE PTR ds:[esi]
  410f5e:	ror    DWORD PTR [esp+esi*1],1
  410f61:	popa   
  410f62:	retf   0xaf26
  410f65:	cmp    eax,0xb305d74a
  410f6a:	or     BYTE PTR [eax],0xc7
  410f6d:	pop    ebx
  410f6e:	mov    cl,0xfe
  410f70:	stos   DWORD PTR es:[edi],eax
  410f71:	outs   dx,DWORD PTR ds:[esi]
  410f72:	fwait
  410f73:	and    eax,0x637fdd30
  410f78:	mov    edi,0x3dc0d55e
  410f7d:	dec    edx
  410f7e:	xor    DWORD PTR [ebx],0x99e860df
  410f84:	cmp    al,0x2a
  410f86:	push   ecx
  410f87:	lods   eax,DWORD PTR ds:[esi]
  410f88:	pop    ds
  410f89:	mov    ch,0xc0
  410f8b:	mov    ebp,0xbe7f47e3
  410f90:	fcom   DWORD PTR [eax+0x39535f0c]
  410f96:	and    DWORD PTR [ebx-0x58fea9bd],ebp
  410f9c:	test   DWORD PTR [ebp-0x30f498df],ebp
  410fa2:	push   edi
  410fa3:	mov    ds:0x4dc3ce42,eax
  410fa8:	iret   
  410fa9:	repz pop ecx
  410fab:	fstp   TBYTE PTR [ecx-0x67]
  410fae:	test   eax,0xb0f55af
  410fb3:	dec    esp
  410fb4:	lahf   
  410fb5:	or     al,0x94
  410fb7:	daa    
  410fb8:	std    
  410fb9:	stc    
  410fba:	pop    ecx
  410fbb:	xchg   edi,eax
  410fbc:	test   al,0xfe
  410fbe:	out    dx,al
  410fbf:	cwde   
  410fc0:	cmp    ch,al
  410fc2:	sub    dh,dl
  410fc4:	leavew 
  410fc6:	icebp  
  410fc7:	pop    edx
  410fc8:	sbb    al,0x6d
  410fca:	add    bh,dh
  410fcc:	xchg   DWORD PTR [ebx+0x3b08c0cc],ebp
  410fd2:	dec    ebp
  410fd4:	sub    edi,DWORD PTR [bx]
  410fd7:	add    eax,0x823abc43
  410fdc:	and    ebp,esi
  410fde:	pop    esi
  410fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fe0:	pop    eax
  410fe1:	outs   dx,BYTE PTR ds:[esi]
  410fe2:	adc    BYTE PTR [eax],ah
  410fe4:	xor    ebp,DWORD PTR [ebx+esi*4-0x4e]
  410fe8:	div    DWORD PTR [ecx+0x7fbdc3e8]
  410fee:	fldz   
  410ff0:	jo     0x410ff3
  410ff2:	iret   
  410ff3:	ret    0x9980
  410ff6:	mov    edx,ecx
  410ff8:	push   cs
  410ff9:	cdq    
  410ffa:	ss mov cl,0xbd
  410ffd:	lahf   
  410ffe:	iret   
  410fff:	mov    esi,0xdc72fe0b
  411004:	test   bh,dl
  411006:	sub    edx,esi
  411008:	dec    eax
  411009:	retf   
  41100a:	add    esi,DWORD PTR [edi]
  41100c:	or     DWORD PTR [edx],edx
  41100e:	cmp    dh,BYTE PTR [ebp-0x694cdf88]
  411014:	int3   
  411015:	scas   eax,DWORD PTR es:[edi]
  411016:	cmp    BYTE PTR [edx-0x40618af2],dl
  41101c:	mov    al,ds:0xb722f4c4
  411021:	aad    0x2a
  411023:	js     0x410fc4
  411025:	xchg   BYTE PTR [eax+0x1b38c2b],al
  41102b:	lds    ebp,FWORD PTR [eax+esi*2]
  41102e:	and    al,BYTE PTR [esi]
  411030:	shl    BYTE PTR [ebp+0xa],1
  411033:	mov    ebx,DWORD PTR [ecx]
  411035:	dec    esp
  411036:	mov    cl,0x98
  411038:	addr16 pusha 
  41103a:	aad    0x11
  41103c:	mov    WORD PTR [ecx],ss
  41103e:	jecxz  0x410fc7
  411040:	enter  0x227a,0xfa
  411044:	xchg   ecx,eax
  411045:	mov    edx,0x759cf8b
  41104a:	ret    0x1db6
  41104d:	push   edx
  41104e:	cld    
  41104f:	xchg   ebx,eax
  411050:	xor    BYTE PTR cs:[eax],0xf8
  411054:	mov    esi,0xff753afd
  411059:	mov    ebp,0xa25907c0
  41105e:	rcr    BYTE PTR [edi-0x28203d53],0xfc
  411065:	lods   eax,DWORD PTR ds:[esi]
  411066:	cmp    al,0xa8
  411068:	xor    bl,dl
  41106a:	(bad)  
  41106b:	adc    DWORD PTR [ebx+0x702d3473],edx
  411071:	cmp    edi,DWORD PTR [ecx]
  411073:	dec    esi
  411074:	pop    esp
  411075:	xlat   BYTE PTR ds:[ebx]
  411076:	pop    esi
  411077:	ins    BYTE PTR es:[edi],dx
  411078:	mov    ecx,0xe9e53467
  41107d:	mov    cl,0xf8
  41107f:	xchg   DWORD PTR [edx+0x76],ecx
  411082:	je     0x4110e2
  411084:	nop
  411085:	or     al,BYTE PTR [eax]
  411087:	jnp    0x4110b0
  411089:	push   0x75
  41108b:	push   edi
  41108c:	retf   
  41108d:	inc    ebx
  41108e:	movlps QWORD PTR [ecx+ebp*4],xmm3
  411092:	ja     0x4110ae
  411094:	add    al,0x9f
  411096:	mov    dh,0x1
  411098:	cs pop ds
  41109a:	sub    ah,ah
  41109c:	call   0x1b699433
  4110a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a2:	(bad)  
  4110a3:	inc    ebx
  4110a4:	jae    0x4110e7
  4110a6:	sub    ebp,DWORD PTR [esi+0x1c4a167]
  4110ac:	(bad)  [edx+0x21]
  4110af:	div    DWORD PTR [edi+ebx*8]
  4110b2:	int    0x61
  4110b4:	sbb    dl,ch
  4110b6:	jg     0x4110c9
  4110b8:	sub    bl,BYTE PTR [esi+eax*1-0x68bc859f]
  4110bf:	stos   BYTE PTR es:[edi],al
  4110c0:	push   ebp
  4110c1:	retf   0xb4fe
  4110c4:	pop    ecx
  4110c5:	pop    ecx
  4110c6:	pusha  
  4110c7:	(bad)  
  4110c8:	mov    al,0x68
  4110ca:	mov    edi,0xb179435f
  4110cf:	test   eax,0xb67a97ce
  4110d4:	neg    DWORD PTR [ebx+eiz*1+0x7e37b664]
  4110db:	sbb    BYTE PTR [edx+ebx*4+0x64d55472],ch
  4110e2:	pop    ebp
  4110e3:	xor    DWORD PTR [edx+0x3c6cf95c],esp
  4110e9:	sbb    eax,0xb35b2109
  4110ee:	(bad)  
  4110ef:	inc    esi
  4110f1:	mov    DWORD PTR [ecx+eax*4],edx
  4110f4:	pop    edx
  4110f5:	les    edi,FWORD PTR [esi+0x50]
  4110f8:	push   ecx
  4110f9:	inc    edx
  4110fa:	xor    ebx,DWORD PTR [edx-0x6dff27c7]
  411100:	inc    ebx
  411101:	jecxz  0x411139
  411103:	mov    al,ds:0x433d333c
  411108:	sti    
  411109:	xor    esi,edi
  41110b:	ins    DWORD PTR es:[edi],dx
  41110c:	sub    BYTE PTR [edx],ch
  41110e:	(bad)  
  41110f:	jp     0x4110a6
  411111:	cld    
  411112:	imul   edx,ecx,0xffffffd3
  411115:	push   cs
  411116:	dec    esi
  411117:	dec    edi
  411118:	inc    ecx
  411119:	aas    
  41111a:	push   edi
  41111b:	stc    
  41111c:	add    esp,edi
  41111e:	sub    ecx,ebp
  411120:	ret    
  411121:	ror    BYTE PTR [esi-0x5e9b855e],0xf1
  411128:	stc    
  411129:	and    DWORD PTR [ecx],ecx
  41112b:	ficomp WORD PTR [edi-0x6e]
  41112e:	add    al,0xd8
  411130:	jo     0x41110c
  411132:	shl    ebx,cl
  411134:	jb     0x4110d5
  411136:	in     al,dx
  411137:	sahf   
  411138:	pop    ss
  411139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41113a:	stos   BYTE PTR es:[edi],al
  41113b:	pop    eax
  41113c:	push   es
  41113d:	(bad)
  411141:	pop    eax
  411142:	test   eax,0xafc0a702
  411147:	fmul   st,st(2)
  411149:	or     esi,edi
  41114b:	push   eax
  41114c:	pop    ds
  41114d:	lock leave 
  41114f:	pop    edi
  411150:	mov    bl,0xe7
  411152:	bound  edi,QWORD PTR fs:[ecx-0x2e]
  411156:	fidiv  WORD PTR [ebp+0x9]
  411159:	lds    esp,FWORD PTR [ecx]
  41115b:	cmp    eax,0x24e1c89f
  411160:	clc    
  411161:	test   al,0xe4
  411163:	or     DWORD PTR [ebx-0x4f],eax
  411166:	xchg   ebp,eax
  411167:	mov    cl,0xda
  411169:	mov    ch,0xdd
  41116b:	not    bh
  41116d:	in     eax,dx
  41116e:	ficomp DWORD PTR [edx+0x0]
  411171:	inc    esi
  411172:	aam    0x3
  411174:	sti    
  411175:	mov    ?,WORD PTR [eax]
  411177:	fsub   DWORD PTR [ebp-0x45e7bed5]
  41117d:	dec    esp
  41117e:	mov    eax,ebx
  411180:	rcl    DWORD PTR [esi],cl
  411182:	add    ebp,DWORD PTR [ebp+0x7ae9f13e]
  411188:	scas   al,BYTE PTR es:[edi]
  411189:	jne    0x411139
  41118b:	outs   dx,BYTE PTR ds:[esi]
  41118c:	jge    0x41111f
  41118e:	jb     0x41115a
  411190:	aaa    
  411191:	inc    esp
  411192:	lods   al,BYTE PTR ds:[esi]
  411193:	fbstp  TBYTE PTR [edi]
  411195:	jb     0x4111b9
  411197:	retf   
  411198:	inc    ecx
  411199:	mov    ?,WORD PTR [edx-0x78]
  41119c:	inc    edi
  41119d:	pop    es
  41119e:	mov    al,0xfb
  4111a0:	push   eax
  4111a1:	sti    
  4111a2:	pop    edx
  4111a3:	add    edx,0x35
  4111a6:	xor    eax,0xe243c3f
  4111ab:	push   ds
  4111ac:	xor    dh,BYTE PTR [edx-0x228f65f8]
  4111b2:	push   edi
  4111b3:	lahf   
  4111b4:	mov    eax,0xf204d5dd
  4111b9:	pusha  
  4111ba:	pop    es
  4111bb:	int3   
  4111bc:	xchg   BYTE PTR [eax],ah
  4111be:	lea    esi,[ebx-0x2884a612]
  4111c4:	inc    edx
  4111c5:	(bad)  
  4111c6:	popa   
  4111c7:	out    dx,al
  4111c8:	ins    BYTE PTR es:[edi],dx
  4111c9:	out    dx,al
  4111ca:	imul   edx,esp,0x6e
  4111cd:	data16 fiadd DWORD PTR [eax]
  4111d0:	cs xchg ebp,eax
  4111d2:	ins    BYTE PTR es:[edi],dx
  4111d3:	loop   0x411196
  4111d5:	imul   esi,DWORD PTR [edi],0x33a4bcae
  4111db:	imul   esi,esi,0xffffffc0
  4111de:	loope  0x41120e
  4111e0:	jge    0x411245
  4111e2:	mov    dh,0x1d
  4111e4:	mov    ds:0x7e7284ae,eax
  4111e9:	cdq    
  4111ea:	xor    eax,0xaddfee11
  4111ef:	retf   0x4254
  4111f2:	stos   BYTE PTR es:[edi],al
  4111f3:	push   esi
  4111f4:	stc    
  4111f5:	dec    edi
  4111f6:	aad    0x6c
  4111f8:	dec    esi
  4111f9:	xchg   DWORD PTR [esi],edi
  4111fb:	js     0xe3787736
  411201:	mov    ebx,0x1cf69a78
  411206:	sub    BYTE PTR [edx+0x573b4555],dh
  41120c:	lock jecxz 0x4111a5
  41120f:	pop    es
  411210:	mov    ds:0x3b9aaf1d,al
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	xchg   esi,eax
  411217:	in     eax,0x19
  411219:	dec    edi
  41121a:	test   al,0x8b
  41121c:	leave  
  41121d:	cs sbb bh,al
  411220:	outs   dx,DWORD PTR ds:[esi]
  411221:	loope  0x4111ce
  411223:	icebp  
  411224:	pop    ecx
  411225:	adc    al,0xa7
  411227:	fcmovu st,st(4)
  411229:	or     al,0x62
  41122b:	fild   WORD PTR [edx]
  41122d:	test   DWORD PTR [ebx],0xa5a14bc9
  411233:	jl     0x411272
  411235:	mov    eax,ds:0x3e9dc96f
  41123a:	sar    ch,1
  41123c:	adc    BYTE PTR [eax+0xc6ee504],bh
  411242:	pop    edx
  411243:	mov    ebx,0xedb78d6
  411248:	xor    al,0x4d
  41124a:	cmc    
  41124b:	mov    eax,0xd2f92dc1
  411250:	(bad)  
  411251:	xchg   esi,eax
  411252:	adc    bh,dl
  411254:	add    cl,bh
  411256:	jl     0x41129d
  411258:	cwde   
  411259:	imul   eax,esi,0x12
  41125c:	ins    DWORD PTR es:[edi],dx
  41125d:	(bad)  
  41125e:	cli    
  41125f:	in     eax,0x96
  411261:	bsf    esi,DWORD PTR [eax+ebp*1-0x3ec9a0af]
  411269:	sbb    al,0x20
  41126b:	retf   
  41126c:	js     0x411288
  41126e:	adc    edi,edi
  411270:	add    bh,BYTE PTR [esi-0x2e]
  411273:	jmp    0x4112a8
  411275:	les    edx,FWORD PTR [ebx+0x1d]
  411278:	xchg   BYTE PTR [edx],ch
  41127a:	or     BYTE PTR [ecx+0x6f],0x40
  41127e:	hlt    
  41127f:	lea    edi,[edi+ecx*2+0x71bd180]
  411286:	cwde   
  411287:	cmp    bh,BYTE PTR [edi+ebp*1-0x5f]
  41128b:	out    0x6b,eax
  41128d:	xor    BYTE PTR [edi+0x5a0e9864],ch
  411293:	aad    0x46
  411295:	xchg   ebp,eax
  411296:	mov    DWORD PTR [ebp-0xa],edi
  411299:	push   ebp
  41129a:	push   cs
  41129b:	jbe    0x41129d
  41129d:	inc    edi
  41129e:	sbb    al,0x27
  4112a0:	sub    al,0x58
  4112a2:	dec    esi
  4112a3:	mov    bh,0xf8
  4112a5:	mov    eax,ds:0x84072a4f
  4112aa:	or     al,0xd7
  4112ac:	jae    0x4112c5
  4112ae:	leave  
  4112af:	fwait
  4112b0:	shl    BYTE PTR [ecx+0x54a5a8c0],cl
  4112b6:	adc    cl,BYTE PTR [ebx-0x3b]
  4112b9:	mov    bl,BYTE PTR [esi]
  4112bb:	mov    WORD PTR [edi+0x4b],fs
  4112be:	(bad)  
  4112bf:	and    BYTE PTR [ebx+ebx*4],bl
  4112c2:	mov    ah,0xf7
  4112c4:	push   eax
  4112c5:	inc    edx
  4112c6:	cmp    al,0x69
  4112c8:	xchg   ebx,eax
  4112c9:	sbb    al,0xdc
  4112cb:	xor    bl,ah
  4112cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ce:	rcl    DWORD PTR [esi+0x148f3a94],0x48
  4112d5:	scas   al,BYTE PTR es:[edi]
  4112d6:	(bad)  
  4112d7:	cmp    eax,0xb9b2a9cd
  4112dc:	mov    ds,WORD PTR [ebp+0x34f1c462]
  4112e2:	adc    BYTE PTR [ebp-0x4d],dh
  4112e5:	shl    DWORD PTR [esi+0x29],0xfb
  4112e9:	and    DWORD PTR [esi-0xf],esp
  4112ec:	outs   dx,DWORD PTR ds:[esi]
  4112ed:	sbb    al,0x16
  4112ef:	mul    DWORD PTR [ebx]
  4112f1:	push   es
  4112f2:	mov    dl,BYTE PTR [ebx]
  4112f4:	adc    DWORD PTR [edi-0x3c],esp
  4112f7:	psrlw  mm7,mm7
  4112fa:	mov    ecx,0x48e05ea2
  4112ff:	leave  
  411300:	dec    edi
  411301:	popa   
  411302:	dec    edi
  411303:	pushf  
  411304:	test   BYTE PTR [edi+eiz*2-0x74],dh
  411308:	test   eax,0xc922d120
  41130d:	test   eax,0xb85f1308
  411312:	dec    ecx
  411313:	adc    DWORD PTR [ebx+0x54abf356],ebx
  411319:	inc    edi
  41131a:	clc    
  41131b:	push   ebx
  41131c:	mov    ds:0x5cafbd66,eax
  411321:	test   DWORD PTR [edi-0x9b94b8c],0xe9db96f5
  41132b:	or     eax,DWORD PTR [ebx+0x4fb0b09b]
  411331:	pop    eax
  411332:	iret   
  411333:	loop   0x4112bb
  411335:	lods   al,BYTE PTR ds:[esi]
  411336:	dec    esi
  411337:	shl    DWORD PTR [esi+0x6c],cl
  41133a:	js     0x4112df
  41133c:	mov    ebx,0x9f2ccd76
  411341:	inc    esp
  411342:	cmp    dh,BYTE PTR [esi+ecx*8+0x1a3b3fd5]
  411349:	ror    DWORD PTR [esi+0x23],1
  41134c:	sbb    DWORD PTR [edx-0x23ed24a2],esi
  411352:	(bad)  
  411353:	shl    BYTE PTR [edx],0x17
  411356:	frstor [esp+edx*4+0x2d8de2f9]
  41135d:	add    ebp,DWORD PTR [ecx-0x54]
  411360:	pop    edi
  411361:	ror    BYTE PTR [edx-0x24],cl
  411364:	into   
  411365:	dec    eax
  411366:	sar    DWORD PTR [edx],cl
  411368:	sbb    eax,0x9b73d758
  41136d:	mov    BYTE PTR [ebx+0x6cf102ef],bh
  411373:	add    al,0x62
  411375:	add    esi,DWORD PTR [esi-0xddc37e]
  41137b:	jmp    0x349c:0xc0265190
  411382:	add    esp,DWORD PTR [edx+0x52e94593]
  411388:	arpl   si,sp
  41138a:	fistp  DWORD PTR [edx-0x37b1fdb3]
  411390:	or     eax,DWORD PTR [ecx]
  411392:	cwde   
  411393:	sub    ch,ch
  411395:	inc    esi
  411396:	fimul  WORD PTR [edi]
  411398:	xchg   ebp,eax
  411399:	rol    ebx,cl
  41139b:	mov    ebx,0xefa80cec
  4113a0:	xor    esi,DWORD PTR [ebp+0x7c93edbd]
  4113a6:	rcl    BYTE PTR [eax],0x20
  4113a9:	ss cs xchg esi,ebp
  4113ad:	ja     0x4113d4
  4113af:	aam    0xc3
  4113b1:	sub    esi,eax
  4113b3:	jge    0x4113b4
  4113b5:	jp     0x4113ca
  4113b7:	xchg   esi,eax
  4113b8:	jp     0x411343
  4113ba:	ins    DWORD PTR es:[edi],dx
  4113bb:	dec    edi
  4113bc:	and    esi,ebx
  4113be:	xchg   DWORD PTR [eax],esp
  4113c0:	push   ecx
  4113c1:	cmp    BYTE PTR [edx-0x4d],ch
  4113c4:	popa   
  4113c5:	ins    DWORD PTR es:[edi],dx
  4113c6:	or     DWORD PTR [esi-0x33950918],ebp
  4113cc:	push   esp
  4113cd:	add    edi,DWORD PTR [ebx]
  4113cf:	xlat   BYTE PTR ds:[ebx]
  4113d0:	loope  0x4113f2
  4113d2:	jp     0x411391
  4113d4:	popf   
  4113d5:	cs mov dh,0xb
  4113d8:	into   
  4113d9:	sbb    BYTE PTR [ebp-0x45d21b8],ch
  4113df:	fs call 0xd9f3:0x9516f646
  4113e7:	in     eax,dx
  4113e8:	jmp    0xb30b:0x38595c2c
  4113ef:	sub    al,0xfb
  4113f1:	mov    ecx,0x9c77a538
  4113f6:	dec    edi
  4113f7:	xchg   ebp,eax
  4113f8:	out    0x5f,eax
  4113fa:	inc    ebx
  4113fb:	imul   esi,DWORD PTR [ebx-0x3a40c3d8],0xffffffed
  411402:	sahf   
  411403:	jle    0x4113b4
  411405:	into   
  411406:	or     DWORD PTR [esi-0x525af04e],0x1dad567d
  411410:	or     eax,0xdccb27a1
  411415:	pop    edx
  411416:	and    ch,0x3
  411419:	or     bh,dl
  41141b:	test   eax,0xda206d83
  411420:	cld    
  411421:	test   eax,0xa7e14791
  411426:	push   es
  411427:	sub    eax,0x62a39fde
  41142c:	in     eax,dx
  41142d:	and    eax,0xe5ad8735
  411432:	enter  0x4e7,0xc7
  411436:	test   BYTE PTR [esi],bh
  411438:	inc    eax
  411439:	aam    0x41
  41143b:	mov    WORD PTR [edi+0x5993ab0e],ss
  411441:	jl     0x41148c
  411443:	ja     0x411471
  411445:	adc    dl,ch
  411447:	cmp    eax,0x5b3a560d
  41144c:	pop    ecx
  41144d:	es inc edi
  41144f:	cmp    DWORD PTR [esi-0x2d],ebp
  411452:	lods   al,BYTE PTR ds:[esi]
  411453:	jns    0x41141e
  411455:	outs   dx,BYTE PTR ds:[esi]
  411456:	inc    dh
  411458:	xor    bl,0xd9
  41145b:	jg     0x4113e4
  41145d:	stos   BYTE PTR es:[edi],al
  41145e:	push   ebx
  41145f:	mov    edi,0xa57c25fa
  411464:	adc    ebx,DWORD PTR [ebp+0x620f768c]
  41146a:	outs   dx,DWORD PTR ds:[esi]
  41146b:	and    dl,bl
  41146d:	dec    eax
  41146e:	ror    BYTE PTR [eax+esi*1],1
  411471:	mov    ah,0x7e
  411473:	dec    ebx
  411474:	jbe    0x41148b
  411476:	mov    bh,0xc5
  411478:	cmp    esi,DWORD PTR [esi]
  41147a:	sti    
  41147b:	dec    BYTE PTR [ebp+0x2567d3af]
  411481:	mov    bh,0x73
  411483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411484:	inc    esi
  411485:	pop    ebp
  411486:	jmp    0x41142b
  411488:	sub    esi,edi
  41148a:	push   0x2f
  41148c:	aam    0xc
  41148e:	xor    cl,0x3
  411491:	push   es
  411492:	jmp    0x5045549a
  411497:	dec    edi
  411498:	cmp    dh,BYTE PTR [eax+ebx*8+0x3e]
  41149c:	adc    eax,0xd835f88a
  4114a1:	jae    0x4114df
  4114a3:	sbb    eax,0x5d81876e
  4114a8:	xor    al,0xc6
  4114aa:	mov    edx,0xd3bb1843
  4114af:	jnp    0x4114c1
  4114b1:	fld    TBYTE PTR [eax-0x2fbb562e]
  4114b7:	icebp  
  4114b8:	out    dx,al
  4114b9:	(bad)  
  4114ba:	jle    0x411499
  4114bc:	sub    ah,cl
  4114be:	in     al,0x49
  4114c0:	scas   eax,DWORD PTR es:[edi]
  4114c1:	mov    esi,0x6b556219
  4114c6:	or     ah,BYTE PTR [eax-0x5]
  4114c9:	cmp    ebx,DWORD PTR [esp+ebx*2]
  4114cc:	fistp  DWORD PTR [ebp-0x68bba07]
  4114d2:	and    BYTE PTR [ebp+0xfd6e22c],dl
  4114d8:	sub    ch,BYTE PTR [esi-0x1ff49e70]
  4114de:	arpl   bp,ax
  4114e0:	stos   BYTE PTR es:[edi],al
  4114e1:	mov    BYTE PTR [esi-0x19],cl
  4114e4:	adc    esi,DWORD PTR [ebp-0x77]
  4114e7:	inc    eax
  4114e8:	cmp    al,BYTE PTR [edi+eiz*4-0xce5cc]
  4114ef:	bound  eax,QWORD PTR [ebx+0x57]
  4114f2:	gs sahf 
  4114f4:	fs xchg edi,eax
  4114f6:	pop    ecx
  4114f7:	das    
  4114f8:	pop    ss
  4114f9:	or     eax,0x21872070
  4114fe:	cmp    ebp,esi
  411500:	fidiv  WORD PTR [edx+0x14]
  411503:	mov    DWORD PTR [ecx-0xeaf297b],ebp
  411509:	mov    ch,0xfa
  41150b:	lahf   
  41150c:	(bad)  
  41150d:	fwait
  41150e:	cmp    DWORD PTR [ebx],ebx
  411510:	ins    BYTE PTR es:[edi],dx
  411511:	sti    
  411512:	adc    edi,DWORD PTR [ebx]
  411514:	stos   BYTE PTR es:[edi],al
  411515:	ja     0x411534
  411517:	pop    ds
  411518:	rcl    BYTE PTR [ecx-0x2763b4f],0x60
  41151f:	or     esi,DWORD PTR [ecx]
  411521:	dec    edi
  411522:	in     eax,dx
  411523:	lods   eax,DWORD PTR ds:[esi]
  411524:	hlt    
  411525:	sub    al,0xd5
  411527:	sub    esi,ebx
  411529:	pop    ecx
  41152a:	jne    0x411598
  41152c:	inc    ecx
  41152d:	or     DWORD PTR [esi-0x9],0xcf4171fc
  411534:	add    BYTE PTR [esi],ah
  411536:	ds inc eax
  411538:	cli    
  411539:	adc    BYTE PTR [esi+0x44b0ec35],al
  41153f:	push   esp
  411540:	mov    esp,0x8db26ddd
  411545:	or     al,0xb0
  411547:	cmp    edi,DWORD PTR [ecx+0x7505cb6e]
  41154d:	lock push eax
  41154f:	outs   dx,DWORD PTR ds:[esi]
  411550:	rcl    DWORD PTR [esi+0x2d0a6830],1
  411556:	into   
  411557:	ja     0x411576
  411559:	popw   ds
  41155b:	jmp    0xdb7c:0xf37ded48
  411562:	mov    al,0x66
  411564:	out    dx,eax
  411565:	sub    BYTE PTR [edi-0x788b8004],dh
  41156b:	mov    ebx,0x27ecbcf0
  411570:	jno    0x411590
  411572:	mov    ebx,gs
  411574:	lods   eax,DWORD PTR ds:[esi]
  411575:	inc    ebx
  411576:	inc    ebp
  411577:	cmp    al,0x6e
  411579:	mov    eax,0x269f1540
  41157e:	cli    
  41157f:	jbe    0x411584
  411581:	xchg   edx,eax
  411582:	add    BYTE PTR [ecx],dl
  411584:	idiv   DWORD PTR [esi+0x3eb1aca7]
  41158a:	or     eax,0x6d320c20
  41158f:	or     al,0xfe
  411591:	push   edi
  411592:	dec    ecx
  411593:	mov    ecx,0x221c612b
  411598:	pop    ds
  411599:	adc    al,0xcf
  41159b:	inc    ecx
  41159c:	push   esp
  41159d:	stos   BYTE PTR es:[edi],al
  41159e:	mov    eax,ds:0xf65b1205
  4115a3:	pop    edx
  4115a4:	mov    ebp,0x24020c38
  4115a9:	shl    BYTE PTR [esi+0x5cb290f3],1
  4115af:	cmp    eax,0xebb792b8
  4115b4:	test   BYTE PTR [ebx],dl
  4115b6:	pop    ecx
  4115b7:	in     al,dx
  4115b8:	imul   eax,DWORD PTR [ebx-0x23],0x69
  4115bc:	jle    0x411604
  4115be:	adc    eax,0xa37209fe
  4115c3:	adc    al,0xf1
  4115c5:	iret   
  4115c6:	stc    
  4115c7:	ret    0x9950
  4115ca:	jno    0x41154f
  4115cc:	mov    eax,0x9b2a2681
  4115d1:	xchg   DWORD PTR [ebp-0x4b],ebx
  4115d4:	repnz xchg ecx,eax
  4115d6:	add    edx,edi
  4115d8:	out    0x34,al
  4115da:	out    0xca,eax
  4115dc:	cmp    eax,0xe2eb2b1e
  4115e1:	jne    0x411660
  4115e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e4:	mov    esp,0x56603b18
  4115e9:	pop    ebx
  4115ea:	popf   
  4115eb:	in     al,0x4
  4115ed:	adc    dh,BYTE PTR [esi-0x5]
  4115f0:	mov    dh,0xac
  4115f2:	mov    ecx,0x1f44535e
  4115f7:	pop    ebp
  4115f8:	or     BYTE PTR [ebp-0x56],al
  4115fb:	outs   dx,DWORD PTR ds:[esi]
  4115fc:	out    dx,eax
  4115fd:	mov    ah,0x3e
  4115ff:	sub    al,0xc1
  411601:	aas    
  411602:	repnz xchg ecx,eax
  411604:	cli    
  411605:	jnp    0x41162f
  411607:	or     al,0x9d
  411609:	mov    dh,0xc9
  41160b:	adc    DWORD PTR [edi],edx
  41160d:	xor    eax,0xbe4c0208
  411612:	pop    es
  411613:	outs   dx,BYTE PTR ds:[esi]
  411614:	lea    ecx,[ebx]
  411616:	out    0x6c,al
  411618:	int3   
  411619:	cmp    al,BYTE PTR [esi-0x3c21e0eb]
  41161f:	(bad)  ds:0x9a32f726
  411625:	xlat   BYTE PTR ds:[ebx]
  411626:	(bad)  
  411628:	sbb    eax,0x434ef00
  41162d:	pusha  
  41162e:	or     al,al
  411630:	jns    0x411699
  411632:	clc    
  411633:	(bad)  
  411634:	in     al,dx
  411635:	or     BYTE PTR ds:0x64f1b4a9,0x21
  41163c:	mov    edx,edx
  41163e:	inc    edx
  41163f:	add    BYTE PTR [ecx+0x42],bh
  411642:	mov    ecx,0x124cafc3
  411647:	daa    
  411648:	mov    edx,0x1f371557
  41164d:	rcr    BYTE PTR [esi-0x37d23862],0x21
  411654:	ss mov ebx,0x68ce0c5f
  41165a:	cmp    dl,cl
  41165c:	repnz shl DWORD PTR [ebp+0x10ac7696],1
  411663:	xchg   edi,eax
  411664:	std    
  411665:	sub    eax,0xe6512c6d
  41166a:	(bad)  
  41166b:	retf   
  41166c:	sub    BYTE PTR [eax],dh
  41166e:	loopne 0x4115fc
  411670:	or     edx,esp
  411672:	test   BYTE PTR [eax-0x62],0x73
  411676:	in     eax,dx
  411677:	jno    0x411626
  411679:	push   ebp
  41167a:	into   
  41167b:	das    
  41167c:	fild   DWORD PTR [edx]
  41167e:	cmp    BYTE PTR [ecx],bl
  411680:	cmp    BYTE PTR [edi],dh
  411682:	xlat   BYTE PTR ds:[ebx]
  411683:	fild   QWORD PTR ds:0x8cfd55c8
  411689:	lea    edi,[edx]
  41168b:	call   0x1317a081
  411690:	dec    eax
  411691:	stos   DWORD PTR es:[edi],eax
  411692:	ins    BYTE PTR es:[edi],dx
  411693:	es jecxz 0x41170a
  411696:	dec    edi
  411697:	xchg   DWORD PTR [ebp+edx*1-0x69b1c2bd],edi
  41169e:	sahf   
  41169f:	dec    edi
  4116a0:	cs add eax,0x93921472
  4116a6:	pop    es
  4116a7:	mov    cl,0x71
  4116a9:	test   bh,al
  4116ab:	adc    BYTE PTR [eax+0x2a452554],al
  4116b1:	jmp    0xa2c1c4ef
  4116b6:	(bad)  
  4116b7:	cmc    
  4116b8:	push   cs
  4116b9:	push   es
  4116ba:	fimul  WORD PTR ss:[bp+si-0x14]
  4116bf:	mov    ds:0xbc053d8,al
  4116c4:	push   edx
  4116c5:	inc    ebp
  4116c6:	and    al,0x70
  4116c8:	jb     0x41171e
  4116ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116cb:	xchg   ebp,eax
  4116cc:	xchg   edi,eax
  4116cd:	mov    eax,ds:0x9fa160d7
  4116d2:	js     0x41174e
  4116d4:	mov    ah,0x95
  4116d6:	dec    esp
  4116d7:	jecxz  0x411755
  4116d9:	repz das 
  4116db:	mov    dh,0xc7
  4116dd:	and    eax,0xb9af63b7
  4116e3:	adc    al,0x4b
  4116e5:	stos   DWORD PTR es:[edi],eax
  4116e6:	and    al,0x4b
  4116e8:	jae    0x4116ff
  4116ea:	push   cs
  4116eb:	xor    ah,BYTE PTR [esi-0x19]
  4116ee:	or     DWORD PTR [edx+ecx*1],ebp
  4116f1:	mov    dh,0x12
  4116f3:	(bad)  
  4116f4:	jns    0x41167d
  4116f6:	fnstsw WORD PTR [ecx-0xa]
  4116f9:	sub    bl,bl
  4116fb:	add    edi,DWORD PTR [ebp-0xa6f1b27]
  411701:	jmp    0x4116a4
  411703:	xchg   esi,edx
  411705:	ror    DWORD PTR [eax+0x7f9ba3cf],0x98
  41170c:	icebp  
  41170d:	xchg   esp,eax
  41170e:	adc    eax,0x1bb42b0e
  411713:	fadd   DWORD PTR [eax-0x21]
  411716:	dec    edi
  411717:	add    edi,ebx
  411719:	adc    ch,bh
  41171b:	mov    WORD PTR [esi],es
  41171d:	xchg   edi,eax
  41171e:	aaa    
  41171f:	xchg   ebx,eax
  411720:	loope  0x4116cf
  411722:	add    DWORD PTR [ebx],ecx
  411724:	xor    ah,cl
  411726:	fnsave [edx]
  411728:	sub    al,0x2b
  41172a:	pop    ds
  41172b:	lds    edx,FWORD PTR [edi-0x4a]
  41172e:	mov    dl,0x5a
  411730:	cmp    DWORD PTR [ecx],esp
  411732:	fidivr WORD PTR gs:[edx]
  411735:	retf   0xd8f6
  411738:	les    ecx,FWORD PTR [ebx]
  41173a:	dec    ecx
  41173b:	xor    eax,0x3ad48666
  411740:	mov    eax,ds:0xc8cb4c55
  411745:	call   0x686327d1
  41174a:	fs sub eax,0x4eabc53f
  411750:	xor    BYTE PTR [edi+0x7e],ch
  411753:	(bad)  cs:[ebx]
  411756:	clc    
  411757:	cmp    DWORD PTR [edi-0x7b],esp
  41175a:	mov    ebx,0x91eb20ad
  41175f:	call   0xf712:0xf81041d7
  411766:	jae    0x4117c3
  411768:	addr16 out 0xdd,eax
  41176b:	aam    0x40
  41176d:	xchg   BYTE PTR [ecx+0x24],dl
  411770:	fdivr  st(5),st
  411772:	mov    ebp,0x373cab46
  411777:	inc    edi
  411778:	enter  0x106a,0xf7
  41177c:	adc    al,0x48
  41177e:	mov    al,ds:0x3e9a710a
  411783:	shl    edi,1
  411785:	sbb    bh,ah
  411787:	or     edx,DWORD PTR [esi-0x7e106046]
  41178d:	aaa    
  41178e:	in     al,dx
  41178f:	mov    bl,0x7a
  411791:	add    DWORD PTR [ecx+edx*1+0x254bf94],ecx
  411798:	jmp    0x4117ef
  41179a:	out    dx,eax
  41179b:	sub    al,0xda
  41179d:	pusha  
  41179e:	rcl    DWORD PTR [ebx],cl
  4117a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a1:	mov    ah,0x45
  4117a3:	sub    esi,eax
  4117a5:	add    dl,BYTE PTR [edx+0x31a404a8]
  4117ab:	mov    ebx,0xaf49c71d
  4117b0:	inc    edi
  4117b1:	jl     0x4117c7
  4117b3:	mov    BYTE PTR [eax],bl
  4117b5:	lock test BYTE PTR [ecx],bh
  4117b8:	mov    ?,ecx
  4117ba:	cmp    BYTE PTR [esi+0x6d25b268],bh
  4117c0:	aam    0x81
  4117c2:	in     eax,dx
  4117c3:	push   edx
  4117c4:	cwde   
  4117c5:	adc    eax,0x7545868e
  4117ca:	sti    
  4117cb:	sbb    DWORD PTR [ecx],ebp
  4117cd:	xor    esi,DWORD PTR [esp+edi*4]
  4117d0:	dec    esp
  4117d1:	cmp    al,0xd8
  4117d3:	cmp    eax,0x58a38b38
  4117d8:	aas    
  4117d9:	lea    edi,[edi-0x562d4d3c]
  4117df:	or     DWORD PTR [ecx+0x2b20a9eb],esi
  4117e5:	imul   edi,DWORD PTR [eax+0x40face95],0x5cfbe12a
  4117ef:	pop    eax
  4117f0:	inc    ebp
  4117f1:	sbb    al,0xd0
  4117f3:	pop    esi
  4117f4:	fdiv   DWORD PTR [esi-0x79]
  4117f7:	dec    eax
  4117f8:	int3   
  4117f9:	mov    ds,WORD PTR [edi+0x1cde02b3]
  4117ff:	jmp    0x4117d9
  411801:	xchg   ebp,eax
  411802:	dec    ebp
  411803:	js     0x4117bc
  411805:	xchg   edx,eax
  411806:	fwait
  411807:	or     al,0xad
  41180a:	scas   al,BYTE PTR es:[edi]
  41180b:	or     DWORD PTR [ecx],0xffffffc1
  41180e:	mov    cl,0x55
  411810:	popa   
  411811:	sub    DWORD PTR [eax-0x10],eax
  411814:	sub    BYTE PTR [edi+0x2c],dh
  411817:	adc    DWORD PTR [eax-0x79],ecx
  41181a:	inc    esi
  41181b:	ret    0xbd79
  41181e:	sub    BYTE PTR [edx+0x53],0xac
  411822:	lods   eax,DWORD PTR ds:[esi]
  411823:	repnz stc 
  411825:	jno    0x411895
  411827:	xchg   esi,eax
  411828:	call   0x6772:0x96ffcae0
  41182f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411830:	adc    al,0x18
  411832:	add    BYTE PTR ds:0x2aaa17f8,dl
  411838:	outs   dx,BYTE PTR ds:[esi]
  411839:	mov    DWORD PTR [ebx+0x4a],esi
  41183c:	test   al,0x8e
  41183e:	mov    fs,WORD PTR [eax-0x7e]
  411841:	jbe    0x4117e8
  411843:	cmp    BYTE PTR [ebp-0x627e317e],cl
  411849:	fwait
  41184a:	lahf   
  41184b:	es push esp
  41184d:	mov    dh,0x39
  41184f:	pop    ebx
  411850:	scas   al,BYTE PTR es:[edi]
  411851:	aas    
  411852:	lods   al,BYTE PTR ds:[esi]
  411853:	shl    DWORD PTR [ecx+ebx*1-0x37fee470],cl
  41185a:	adc    BYTE PTR [esp+eiz*8+0x62],0xfe
  41185f:	push   ss
  411860:	add    eax,0x9b14086c
  411865:	dec    esi
  411866:	and    DWORD PTR [edi+ebp*4+0x42549026],edi
  41186d:	xchg   esi,eax
  41186e:	dec    ebp
  41186f:	(bad)  
  411870:	retf   
  411871:	sbb    eax,0xe6d0a523
  411876:	adc    ah,0x5d
  411879:	mov    edx,0x41f7025
  41187e:	xor    al,0x3
  411880:	in     al,dx
  411881:	fst    st(6)
  411883:	loop   0x41187a
  411885:	scas   al,BYTE PTR es:[edi]
  411886:	sbb    al,0x49
  411888:	test   DWORD PTR [esi+0x1c],ebx
  41188b:	and    esp,DWORD PTR [ecx]
  41188d:	jo     0x411904
  41188f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411890:	ret    
  411891:	or     esi,ebp
  411893:	inc    BYTE PTR [ebx+0x6b]
  411896:	shl    BYTE PTR [eax+0x7510ce1],cl
  41189c:	sub    dl,ch
  41189e:	pop    ds
  41189f:	xor    eax,0xf0920a56
  4118a4:	inc    edi
  4118a5:	or     al,0x57
  4118a7:	cmp    ebx,DWORD PTR [edx+0x63196118]
  4118ad:	mov    cl,0xfa
  4118af:	push   ebp
  4118b0:	add    esp,DWORD PTR [ecx-0x4973b6e1]
  4118b6:	in     eax,0xec
  4118b8:	data16 loop 0x41188a
  4118bb:	adc    edx,DWORD PTR [esi]
  4118bd:	xor    bh,al
  4118bf:	fst    DWORD PTR [edi+0x69]
  4118c2:	cmp    eax,0x60bc05d4
  4118c7:	pop    eax
  4118c8:	push   edx
  4118c9:	retf   0x64f6
  4118cc:	jne    0x4118f3
  4118ce:	cli    
  4118cf:	aas    
  4118d0:	lahf   
  4118d1:	inc    ecx
  4118d2:	mov    ch,0x5e
  4118d4:	xchg   esi,ecx
  4118d6:	push   esp
  4118d7:	aaa    
  4118d8:	mov    ebp,0x80c8b06e
  4118dd:	adc    al,0x26
  4118df:	in     eax,0x71
  4118e1:	loop   0x4118a2
  4118e3:	jno    0x411883
  4118e5:	test   BYTE PTR [ebx],0x5c
  4118e8:	cli    
  4118e9:	pop    edi
  4118ea:	mov    edi,0x98172095
  4118ef:	stos   DWORD PTR es:[edi],eax
  4118f0:	cmp    al,0x8c
  4118f2:	lods   al,BYTE PTR ds:[esi]
  4118f3:	mov    ds,WORD PTR [ecx]
  4118f5:	int    0x90
  4118f7:	std    
  4118f8:	adc    bh,BYTE PTR ds:0xe9e70869
  4118fe:	inc    esi
  4118ff:	inc    esi
  411900:	sub    BYTE PTR [eax-0x5baab975],bl
  411906:	aaa    
  411907:	(bad)  
  411908:	adc    al,0xcd
  41190a:	jmp    0xd3f55371
  41190f:	pop    ecx
  411910:	and    dh,BYTE PTR fs:0x254f7683
  411917:	test   dh,0xf9
  41191a:	pop    ss
  41191b:	inc    eax
  41191c:	and    dl,BYTE PTR ds:0x67ee878e
  411922:	mov    dl,0x8d
  411924:	(bad)  [eax-0x1d9238ab]
  41192a:	ins    BYTE PTR es:[edi],dx
  41192b:	cmp    cl,dl
  41192d:	mov    ah,0xd9
  41192f:	ds fwait
  411931:	xor    al,0x32
  411933:	mov    eax,0xac3128ef
  411938:	cmp    bl,bh
  41193a:	js     0x4118f8
  41193c:	xor    al,0x61
  41193e:	loope  0x411997
  411940:	add    esp,DWORD PTR [edi+0x579215c3]
  411946:	push   edi
  411947:	js     0x4119b5
  411949:	sub    eax,0xb631a6bc
  41194e:	pop    esp
  41194f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411950:	xor    bl,BYTE PTR [esi+0x1a]
  411953:	out    dx,eax
  411954:	shl    DWORD PTR [ebp-0x3e114b43],0x8d
  41195b:	inc    ebp
  41195c:	clc    
  41195d:	push   eax
  41195e:	push   DWORD PTR [ebp-0x28]
  411961:	push   DWORD PTR [ebp+0xc]
  411964:	call   0x413f1f
  411969:	mov    eax,DWORD PTR [ebp-0x4]
  41196c:	mov    ecx,DWORD PTR [ebp-0x8]
  41196f:	xor    eax,esi
  411971:	add    eax,edi
  411973:	cmp    ecx,eax
  411975:	je     0x413d0c
  41197b:	mov    eax,DWORD PTR [ebp-0x34]
  41197e:	movzx  eax,WORD PTR [eax+ebx*2]
  411982:	jmp    0x413cfe
  411987:	mov    esp,0x8265841a
  41198c:	loope  0x41192c
  41198e:	add    BYTE PTR [eax+0x74],0x97
  411992:	es inc esi
  411994:	add    eax,0x8b10147a
  411999:	add    DWORD PTR [ebx-0x7c7ca1de],0xffffff9c
  4119a0:	mov    eax,cs
  4119a2:	mov    edx,0xc9fa5178
  4119a7:	scas   eax,DWORD PTR es:[edi]
  4119a8:	mov    BYTE PTR [ecx-0x7c],ah
  4119ab:	(bad)  
  4119ac:	cdq    
  4119ad:	sbb    eax,0xbdadef5e
  4119b2:	addr16 cmp eax,0x4b54960a
  4119b8:	pop    edx
  4119b9:	or     BYTE PTR [edi],bl
  4119bb:	sub    BYTE PTR [esi+0x53],ah
  4119be:	cmp    dl,BYTE PTR [edi+0x7c]
  4119c1:	cmp    eax,0x2ccacd13
  4119c6:	call   0x8134:0x8337187e
  4119cd:	push   0x13d895e5
  4119d2:	mov    ch,0xb0
  4119d4:	cmc    
  4119d5:	pop    edx
  4119d6:	fst    QWORD PTR [eax+0x42defcd]
  4119dc:	jmp    0x411989
  4119de:	xor    bh,ah
  4119e0:	stc    
  4119e1:	fist   DWORD PTR [edx]
  4119e3:	test   DWORD PTR [esi-0xe],ecx
  4119e6:	addr16 push esi
  4119e8:	dec    ebx
  4119e9:	pusha  
  4119ea:	sbb    BYTE PTR [edx+eax*4+0xa],0x8a
  4119ef:	dec    ebx
  4119f0:	mov    esp,0x5238236
  4119f5:	mov    esi,DWORD PTR [edi+0x35]
  4119f8:	pop    ss
  4119f9:	iret   
  4119fa:	xor    dh,dl
  4119fc:	mov    ebx,0x33623195
  411a01:	out    0xae,al
  411a03:	pop    ecx
  411a04:	and    ebx,DWORD PTR [esi+0x78]
  411a07:	push   esi
  411a08:	ss cli 
  411a0a:	jbe    0x411a2b
  411a0c:	or     esp,edi
  411a0e:	gs dec ebx
  411a10:	xor    ebp,DWORD PTR [edi-0x7d]
  411a13:	pop    edi
  411a14:	jbe    0x411a86
  411a16:	push   ebx
  411a17:	and    DWORD PTR [esi-0x7d],edx
  411a1a:	data16 and BYTE PTR [esi],0xf5
  411a1e:	lods   eax,DWORD PTR ds:[esi]
  411a1f:	adc    ah,BYTE PTR [edx-0x699b7219]
  411a25:	xlat   BYTE PTR ds:[ebx]
  411a26:	pop    ss
  411a27:	repz out 0x80,eax
  411a2a:	dec    esp
  411a2b:	xchg   esi,eax
  411a2c:	add    dl,BYTE PTR [ebp-0x33]
  411a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a30:	dec    eax
  411a31:	xlat   BYTE PTR ds:[ebx]
  411a32:	out    0xd9,eax
  411a34:	and    ecx,DWORD PTR [ecx]
  411a36:	pop    ebx
  411a37:	das    
  411a38:	outs   dx,BYTE PTR ds:[esi]
  411a39:	push   edi
  411a3a:	outs   dx,DWORD PTR ds:[esi]
  411a3b:	and    eax,0xe399bfa9
  411a40:	enter  0x7670,0x46
  411a44:	sub    cl,BYTE PTR [esi]
  411a46:	(bad)  
  411a47:	cwde   
  411a48:	cli    
  411a49:	out    0xef,al
  411a4b:	call   0x87b6abe
  411a50:	ds aad 0x83
  411a53:	lahf   
  411a54:	ds push ebx
  411a56:	fwait
  411a57:	and    bl,al
  411a59:	imul   eax,DWORD PTR [ecx+0x2004589a],0x44
  411a60:	lods   eax,DWORD PTR ds:[esi]
  411a61:	jb     0x411aa6
  411a63:	and    eax,0xf9b79295
  411a68:	pop    esi
  411a69:	pop    edx
  411a6a:	cmp    ebp,ebp
  411a6c:	loop   0x411aa3
  411a6e:	pop    edi
  411a6f:	cmp    bh,al
  411a71:	int3   
  411a72:	into   
  411a73:	lock inc ebp
  411a75:	pop    ds
  411a76:	fsub   DWORD PTR [edx-0x6602164d]
  411a7c:	jge    0x411ae2
  411a7e:	mov    WORD PTR [esp+ebp*2+0xd],ss
  411a82:	push   eax
  411a83:	mov    esi,0xf0a47349
  411a88:	lock test dh,cl
  411a8b:	outs   dx,BYTE PTR ds:[esi]
  411a8c:	push   esi
  411a8d:	xchg   DWORD PTR [edx-0x6faab398],eax
  411a93:	jge    0x411ad6
  411a95:	mov    ah,0x29
  411a97:	or     esi,esp
  411a99:	xchg   ebp,eax
  411a9a:	popa   
  411a9b:	out    dx,al
  411a9c:	add    ch,bh
  411a9e:	popa   
  411a9f:	test   eax,0x684635e9
  411aa4:	sub    ebp,DWORD PTR [ebp-0x2026efc3]
  411aaa:	stos   BYTE PTR es:[edi],al
  411aab:	mov    eax,ds:0x4b7bdcdb
  411ab0:	xchg   ebp,eax
  411ab1:	in     al,0x95
  411ab3:	aad    0xe9
  411ab5:	(bad)
  411ab8:	push   ecx
  411ab9:	loopne 0x411b1f
  411abb:	pop    ds
  411abc:	jg     0x411a5d
  411abe:	call   0xb0cc639d
  411ac3:	scas   eax,DWORD PTR es:[edi]
  411ac4:	dec    esp
  411ac5:	aam    0x3a
  411ac7:	jmp    0x411b13
  411ac9:	and    BYTE PTR [edi-0x1d],0xae
  411acd:	and    cl,BYTE PTR [edx-0x2b]
  411ad0:	outs   dx,BYTE PTR ds:[esi]
  411ad1:	arpl   dx,si
  411ad3:	pushf  
  411ad4:	idiv   BYTE PTR [esi+ebp*1]
  411ad7:	push   ds
  411ad8:	(bad)  
  411ad9:	cld    
  411ada:	ror    DWORD PTR [edx-0x27],1
  411add:	int3   
  411ade:	(bad)  
  411adf:	jno    0x411a6f
  411ae1:	xchg   bl,ch
  411ae3:	jmp    0x2a81:0x53375834
  411aea:	inc    edi
  411aeb:	xchg   BYTE PTR [edi+0x5b60b764],al
  411af1:	ret    
  411af2:	mov    ebx,0xd0b30ddd
  411af7:	mov    ch,0xa9
  411af9:	push   ss
  411afa:	push   eax
  411afb:	sub    DWORD PTR [esi],0xd4e53bfe
  411b01:	fnsave [edi]
  411b03:	aaa    
  411b04:	fwait
  411b05:	mov    dl,0xe6
  411b07:	outs   dx,BYTE PTR ds:[esi]
  411b08:	jp     0x411b31
  411b0a:	cmp    esp,edx
  411b0c:	outs   dx,DWORD PTR ds:[esi]
  411b0d:	mov    ds:0xe15283fe,al
  411b12:	or     cl,bh
  411b14:	into   
  411b15:	mov    bl,0x10
  411b17:	lods   al,BYTE PTR ds:[esi]
  411b18:	ja     0x411b4e
  411b1a:	cdq    
  411b1b:	test   bh,cl
  411b1d:	js     0x411aa7
  411b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b20:	xchg   ecx,eax
  411b21:	jle    0x411aee
  411b23:	popa   
  411b24:	sbb    BYTE PTR [ebx-0x6],ah
  411b27:	loop   0x411b8f
  411b29:	sub    al,0x9a
  411b2b:	dec    edx
  411b2c:	cld    
  411b2d:	or     cl,bh
  411b2f:	fwait
  411b30:	jmp    0x99115fde
  411b35:	push   eax
  411b36:	sbb    BYTE PTR [ebp+ecx*8-0x64],dl
  411b3a:	imul   edx,edi,0x32
  411b3d:	cmp    dl,BYTE PTR [edi]
  411b3f:	stos   DWORD PTR es:[edi],eax
  411b40:	ss test BYTE PTR ss:[ebp+0x32],0x43
  411b46:	outs   dx,DWORD PTR ds:[esi]
  411b47:	push   0x2723b9c
  411b4c:	sahf   
  411b4d:	aas    
  411b4e:	and    eax,DWORD PTR [ebp+0xc]
  411b51:	dec    ebx
  411b52:	and    BYTE PTR [ebx-0x4],ch
  411b55:	and    eax,0x73357d5c
  411b5a:	and    al,0x8f
  411b5c:	dec    edi
  411b5d:	int    0xdd
  411b5f:	mov    ah,0xd6
  411b61:	mov    esi,0x167518a6
  411b66:	outs   dx,DWORD PTR ds:[esi]
  411b67:	(bad)  
  411b69:	rcl    BYTE PTR [edx],1
  411b6b:	pop    ss
  411b6c:	shl    BYTE PTR [eax],0x6a
  411b6f:	adc    DWORD PTR [ecx+0x276f546d],ebp
  411b75:	add    DWORD PTR [edx-0x19],0xffffffc9
  411b79:	and    ebp,DWORD PTR [eax]
  411b7b:	jge    0x411b23
  411b7d:	std    
  411b7e:	(bad)  
  411b7f:	(bad)  fs:0xff2fdaa
  411b86:	pop    ebp
  411b87:	and    al,0xf0
  411b89:	std    
  411b8a:	adc    DWORD PTR [eax+0x7c],0xa921d47d
  411b91:	xchg   esp,eax
  411b92:	sbb    esp,edi
  411b94:	jp     0x411bea
  411b96:	sbb    ah,BYTE PTR [edi+0x6fdca33]
  411b9c:	aas    
  411b9d:	mov    ss,ecx
  411b9f:	daa    
  411ba0:	test   DWORD PTR [ecx-0x10c695ce],edi
  411ba6:	push   edx
  411ba7:	jecxz  0x411b32
  411ba9:	jg     0x411bde
  411bab:	out    0x77,al
  411bad:	inc    ebx
  411bae:	pop    ebp
  411baf:	cs mov dl,0x99
  411bb2:	dec    ebp
  411bb3:	std    
  411bb4:	push   esi
  411bb5:	and    esi,edx
  411bb7:	loope  0x411c22
  411bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bba:	mov    DWORD PTR [ebp+0x11cf17bf],esp
  411bc0:	xchg   edx,eax
  411bc1:	pop    ebp
  411bc2:	mov    DWORD PTR [edx+eiz*2+0xdf3af0a],ebx
  411bc9:	jnp    0x411b51
  411bcb:	adc    eax,0xf4c0e41c
  411bd0:	xchg   edi,eax
  411bd1:	dec    edi
  411bd2:	mov    al,ds:0xa0d5e988
  411bd7:	cld    
  411bd8:	mov    esp,0xf7fc9558
  411bdd:	adc    ebx,DWORD PTR [edx+0x8]
  411be0:	test   ecx,ecx
  411be2:	and    BYTE PTR [ebx+0x3],bh
  411be5:	lea    edi,[edi+0x49bd8d7f]
  411beb:	lock push ss
  411bed:	ret    
  411bee:	pop    ebx
  411bef:	repnz hlt 
  411bf1:	fisubr WORD PTR ds:0xf7ded5ab
  411bf7:	mov    ah,0x1d
  411bf9:	or     bl,BYTE PTR [ebx-0x5f3a1232]
  411bff:	and    al,0x27
  411c01:	cmp    DWORD PTR [esp+edx*2],0x7b5121b
  411c08:	mov    WORD PTR [esi+0x23],ss
  411c0b:	mov    esp,0x158a1290
  411c10:	pop    edi
  411c11:	sub    DWORD PTR [ebx],0x21
  411c14:	dec    ecx
  411c15:	inc    esi
  411c16:	or     al,0xe4
  411c18:	mov    edx,DWORD PTR [ecx+0x76]
  411c1b:	add    DWORD PTR [edi+0x2e],0x572ffa26
  411c22:	outs   dx,DWORD PTR ds:[esi]
  411c23:	clc    
  411c24:	in     al,0x5d
  411c26:	jb     0x411c92
  411c28:	mov    al,0x84
  411c2a:	sub    al,0x7a
  411c2c:	jmp    0x411c5c
  411c2e:	in     eax,dx
  411c2f:	pop    edi
  411c30:	mov    al,0x25
  411c32:	mov    ebx,0x666463b0
  411c37:	push   edi
  411c38:	adc    DWORD PTR [ebx-0x2e22918d],ecx
  411c3e:	push   eax
  411c3f:	xchg   BYTE PTR [edi-0x1a],dh
  411c42:	iret   
  411c43:	in     al,dx
  411c44:	sub    BYTE PTR [esi],bl
  411c46:	ins    BYTE PTR es:[edi],dx
  411c47:	cdq    
  411c48:	xchg   esi,eax
  411c49:	and    al,0xc4
  411c4b:	imul   esi,DWORD PTR [esi],0x36eb902b
  411c51:	push   edx
  411c52:	mov    bh,0x38
  411c54:	adc    al,0x47
  411c56:	test   DWORD PTR [edx],0x2cb1217a
  411c5c:	mov    ecx,0xeae6f6f7
  411c61:	(bad)  
  411c62:	mov    ebp,0x30912957
  411c67:	test   DWORD PTR [esp+edi*1],0xd1b4a110
  411c6e:	inc    ebp
  411c6f:	add    ch,BYTE PTR [esp+eiz*8+0x1a499976]
  411c76:	or     eax,0x8e09fa86
  411c7b:	push   0xffffffea
  411c7d:	push   ecx
  411c7e:	pop    esi
  411c7f:	test   DWORD PTR [ebp+0x5],ebx
  411c82:	fs xor al,0x2f
  411c85:	jo     0x411cb2
  411c87:	cs pop ss
  411c89:	cdq    
  411c8a:	dec    ebp
  411c8b:	imul   esp,DWORD PTR [ebx],0x5e
  411c8e:	xchg   DWORD PTR [eax+0x33],eax
  411c91:	mov    eax,ds:0x2ed58ec9
  411c96:	enter  0xf658,0x9d
  411c9a:	aam    0xd8
  411c9c:	sub    eax,0x2c48c3d2
  411ca1:	ins    DWORD PTR es:[edi],dx
  411ca2:	repnz lea eax,[ecx+0x64275597]
  411ca9:	pushf  
  411caa:	je     0x411c51
  411cac:	sbb    DWORD PTR [esi],ebp
  411cae:	div    DWORD PTR ds:0xb915e5cb
  411cb4:	push   ebx
  411cb5:	push   ebx
  411cb6:	pop    esp
  411cb7:	ret    0x42a5
  411cba:	loop   0x411c59
  411cbc:	mov    ebp,0xbfaf1b07
  411cc1:	mov    ds:0x561f8364,al
  411cc6:	xchg   esp,eax
  411cc7:	(bad)  
  411cc8:	or     DWORD PTR [ebx],edx
  411cca:	mov    ecx,0x630b1631
  411ccf:	stc    
  411cd0:	xchg   edi,eax
  411cd1:	jg     0x411c8e
  411cd3:	int3   
  411cd4:	fld    DWORD PTR [eax-0x105df444]
  411cda:	ret    
  411cdb:	sbb    al,0x43
  411cdd:	xchg   esp,eax
  411cde:	movups XMMWORD PTR [eax+0x66],xmm1
  411ce2:	sub    dl,BYTE PTR [ebp-0x1d3e4865]
  411ce8:	inc    esp
  411ce9:	cmp    DWORD PTR [ebx-0x4],0x64b0093f
  411cf0:	dec    edx
  411cf1:	(bad)  
  411cf3:	sbb    cl,BYTE PTR [eax-0x40]
  411cf6:	int    0xf1
  411cf8:	push   0x49
  411cfa:	add    al,0x74
  411cfc:	sub    dl,BYTE PTR ds:0xf09d3d37
  411d02:	jns    0x411ccf
  411d04:	xor    al,0xbd
  411d06:	pushf  
  411d07:	cmp    BYTE PTR [esp+ebx*2+0x1504a15b],cl
  411d0e:	je     0x411d3f
  411d10:	mov    al,ds:0x5ec832a8
  411d15:	xchg   ecx,eax
  411d16:	pop    es
  411d17:	dec    eax
  411d18:	cdq    
  411d19:	mov    BYTE PTR [eax],dh
  411d1b:	sub    ebx,DWORD PTR [ecx]
  411d1d:	jle    0x411cba
  411d1f:	jg     0x411d98
  411d21:	ds jp  0x411cb2
  411d24:	sub    edx,DWORD PTR ds:0xf77e44db
  411d2a:	in     al,0xd7
  411d2c:	div    BYTE PTR [ecx+0x42]
  411d2f:	adc    eax,0xffffffb8
  411d32:	inc    edi
  411d33:	scas   al,BYTE PTR es:[edi]
  411d34:	call   0x616ee94d
  411d39:	pop    ss
  411d3a:	adc    cl,BYTE PTR [ebx-0x1b]
  411d3d:	ror    ecx,0x4b
  411d40:	mov    edx,0xe532c9ce
  411d45:	imul   esi,DWORD PTR [edi-0x45],0xffffffcb
  411d49:	jecxz  0x411d8d
  411d4b:	jns    0x411d02
  411d4d:	bound  eax,QWORD PTR [ebp-0x3]
  411d50:	mov    esp,0xb3a1ef55
  411d55:	loopne 0x411d55
  411d57:	aas    
  411d58:	sub    eax,0x8e9ae232
  411d5d:	out    dx,al
  411d5e:	mov    cl,0x1c
  411d60:	xor    DWORD PTR [ecx-0x84260b7],edi
  411d66:	loope  0x411d65
  411d68:	in     al,dx
  411d69:	pop    ds
  411d6a:	aam    0x15
  411d6c:	push   esp
  411d6d:	clc    
  411d6e:	jmp    0x411d2b
  411d70:	sbb    al,0xb7
  411d72:	ins    DWORD PTR es:[edi],dx
  411d73:	rol    DWORD PTR [ecx],1
  411d75:	cdq    
  411d76:	mov    eax,0x66a9dbf4
  411d7b:	xchg   BYTE PTR [ecx-0x8ff968],dh
  411d81:	pop    ss
  411d82:	sub    edi,ebx
  411d84:	push   0x73
  411d86:	bound  edx,QWORD PTR [ebp+0x37]
  411d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8a:	fstp   DWORD PTR [edi+0x1f0f1fc2]
  411d90:	out    dx,eax
  411d91:	out    dx,al
  411d92:	pop    ebx
  411d93:	adc    bl,ch
  411d95:	mov    eax,ds:0x8aba602e
  411d9a:	mov    es,WORD PTR [ebp-0x57]
  411d9d:	cmp    DWORD PTR [ebx-0x5cfb60a2],0x4768fe25
  411da7:	or     eax,0x52946937
  411dac:	xchg   ebx,eax
  411dad:	inc    edi
  411dae:	mov    dl,0xfd
  411db0:	dec    edi
  411db1:	cmc    
  411db2:	mov    bh,BYTE PTR [ebx+0x34608443]
  411db8:	imul   ebx,DWORD PTR [esi+0x50190936],0xffffffcd
  411dbf:	jl     0x411dd5
  411dc1:	dec    esp
  411dc2:	popf   
  411dc3:	stos   BYTE PTR es:[edi],al
  411dc4:	mov    DWORD PTR [ebx],ecx
  411dc6:	imul   edx,DWORD PTR [ecx+0x4b05651c],0x3f
  411dcd:	and    bh,0x89
  411dd0:	mov    ecx,0xef405f1c
  411dd5:	dec    esi
  411dd6:	mov    DWORD PTR [esi-0x7c],ebx
  411dd9:	pop    ebx
  411dda:	(bad)  
  411ddb:	std    
  411ddc:	fmul   DWORD PTR [edx-0x2103fb2b]
  411de2:	and    BYTE PTR [ecx+0x4a],bl
  411de5:	mov    dh,0xe5
  411de7:	push   edx
  411de8:	in     al,0x37
  411dea:	xor    esi,DWORD PTR [esi+0x5f]
  411ded:	mov    eax,ds:0xb1b959a9
  411df2:	pushf  
  411df3:	lods   eax,DWORD PTR ds:[esi]
  411df4:	lods   eax,DWORD PTR ds:[esi]
  411df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df6:	imul   esp,DWORD PTR [eax+ebx*2],0x5f417c45
  411dfd:	(bad)  
  411dfe:	cli    
  411dff:	pop    ebp
  411e00:	pusha  
  411e01:	xor    BYTE PTR [eax+0x6],ch
  411e04:	mov    esi,0x8455dfad
  411e09:	arpl   WORD PTR [ecx],cx
  411e0b:	clc    
  411e0c:	mov    bh,0x49
  411e0e:	ins    BYTE PTR es:[edi],dx
  411e0f:	cwde   
  411e10:	push   ecx
  411e11:	call   DWORD PTR [eax+0x1529c3d1]
  411e17:	adc    dh,ch
  411e19:	xchg   DWORD PTR [ecx-0x3c],esi
  411e1c:	sub    BYTE PTR [esi],ch
  411e1e:	(bad)  
  411e1f:	fist   DWORD PTR [ecx+ebp*1]
  411e22:	xchg   ecx,eax
  411e23:	jp     0x411e29
  411e25:	inc    ebx
  411e26:	retf   
  411e27:	dec    esp
  411e28:	fdiv   QWORD PTR [ecx-0x37]
  411e2b:	and    esi,DWORD PTR [ebx-0xd]
  411e2e:	loope  0x411e20
  411e30:	adc    DWORD PTR [edx-0x69],edi
  411e33:	outs   dx,DWORD PTR ds:[esi]
  411e34:	ja     0x411e22
  411e36:	jae    0x411e4b
  411e38:	lahf   
  411e39:	mov    al,ds:0x90a66cc2
  411e3e:	mov    eax,0x3bf5e495
  411e43:	jmp    0xbafbc98a
  411e48:	jecxz  0x411e17
  411e4a:	sar    DWORD PTR [edi-0x42],0x80
  411e4e:	dec    ebx
  411e4f:	sbb    esi,0xe4f4fe17
  411e55:	inc    esp
  411e56:	cdq    
  411e57:	(bad)  
  411e58:	lds    ebp,FWORD PTR [eax-0x3b]
  411e5b:	pushf  
  411e5c:	and    DWORD PTR [ebx+0x5cd91f94],ebp
  411e62:	push   esi
  411e63:	jge    0x411e5c
  411e65:	rcr    cl,1
  411e67:	mov    cl,0x82
  411e69:	test   ch,0x63
  411e6c:	cmc    
  411e6d:	iret   
  411e6e:	jecxz  0x411e4c
  411e70:	jmp    esp
  411e72:	inc    ecx
  411e73:	sbb    bl,ch
  411e75:	cmp    edi,DWORD PTR [ecx]
  411e77:	or     edx,DWORD PTR [ebx]
  411e79:	push   cs
  411e7a:	fisubr DWORD PTR [edx]
  411e7c:	icebp  
  411e7d:	cs add ecx,edi
  411e80:	xchg   esp,eax
  411e81:	cmc    
  411e82:	aam    0x5
  411e84:	fisub  DWORD PTR [esi+0x3]
  411e87:	xor    ah,BYTE PTR [esi+0x6d]
  411e8a:	adc    BYTE PTR [eax+0x556bdf52],al
  411e90:	je     0x411e80
  411e92:	into   
  411e93:	pop    edi
  411e94:	xchg   BYTE PTR [edi+eiz*8+0x405e6203],cl
  411e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e9c:	or     eax,0xbfa7b1b
  411ea1:	fisub  DWORD PTR [eax+0x48fd0f1e]
  411ea7:	mov    ah,0xb8
  411ea9:	pop    es
  411eaa:	push   cs
  411eab:	bt     DWORD PTR [ebp+0x0],edx
  411eaf:	xchg   DWORD PTR [eax+0x71],edi
  411eb2:	cli    
  411eb3:	int    0xa
  411eb5:	outs   dx,DWORD PTR ds:[esi]
  411eb6:	repnz cmc 
  411eb8:	in     eax,0xe7
  411eba:	push   0x6621794d
  411ebf:	jp     0x411e9b
  411ec1:	sbb    cl,BYTE PTR [esi+esi*4+0x18]
  411ec5:	cdq    
  411ec6:	nop
  411ec7:	sbb    BYTE PTR [ebp+0x4c890391],dh
  411ecd:	imul   esp,DWORD PTR [ecx-0x76],0xffffffdd
  411ed1:	dec    edi
  411ed2:	mov    cl,0x1f
  411ed4:	xchg   DWORD PTR [ebx],edi
  411ed6:	in     eax,dx
  411ed7:	test   BYTE PTR [ebp+0x424e6647],ch
  411edd:	iret   
  411ede:	sti    
  411edf:	in     eax,0xf7
  411ee1:	repz pop ss
  411ee3:	mov    ah,0x2a
  411ee5:	add    DWORD PTR [edx-0x46],ebp
  411ee8:	cmp    ch,ah
  411eea:	sub    DWORD PTR [ecx],edi
  411eec:	fcomp  QWORD PTR [esi+0x7a]
  411eef:	mov    eax,ds:0xa184d362
  411ef4:	jmp    0x9854:0x974da3f9
  411efb:	jb     0x411f74
  411efd:	or     dl,bl
  411eff:	lea    edi,[ebx-0x2]
  411f02:	fnstsw WORD PTR [ebx-0x74d5d792]
  411f08:	pop    edi
  411f09:	fnstcw WORD PTR [edi+ecx*1+0x7e0e94ad]
  411f10:	adc    dh,bl
  411f12:	lods   eax,DWORD PTR ds:[esi]
  411f13:	mov    ?,WORD PTR [ebp-0x6001b5c8]
  411f19:	mov    edx,0xbe0b8289
  411f1e:	pop    ebx
  411f1f:	pop    es
  411f20:	push   ecx
  411f21:	or     al,0xc1
  411f23:	aas    
  411f24:	push   ebx
  411f25:	sub    DWORD PTR [ebp+0x26],0x65ff6ef6
  411f2c:	add    ebx,DWORD PTR [ebx+0x67]
  411f2f:	and    esi,DWORD PTR [esp+esi*4]
  411f32:	pop    edx
  411f33:	or     al,0xd8
  411f35:	(bad)
  411f38:	jg     0x411f4b
  411f3a:	mov    ah,BYTE PTR [ebx+0x317cb666]
  411f40:	mov    BYTE PTR [edi+0x6d],ah
  411f43:	(bad)  
  411f44:	cdq    
  411f45:	fwait
  411f46:	ret    
  411f47:	mov    ds:0x7f4f30b3,eax
  411f4c:	ja     0x411f4f
  411f4e:	in     eax,dx
  411f4f:	jnp    0x411fc8
  411f51:	and    DWORD PTR [esi-0x188d3cee],ecx
  411f57:	outs   dx,DWORD PTR ds:[esi]
  411f58:	test   eax,0xf8c109d5
  411f5d:	push   ebp
  411f5e:	cmp    eax,0x53e35038
  411f63:	pop    edi
  411f64:	pusha  
  411f65:	les    ebx,FWORD PTR [esi]
  411f67:	int3   
  411f68:	fs ins DWORD PTR es:[edi],dx
  411f6a:	fldenv [si-0x13]
  411f6e:	in     eax,dx
  411f6f:	add    BYTE PTR [ebx],bl
  411f71:	scas   eax,DWORD PTR es:[edi]
  411f72:	call   0x966c:0x2541cbd2
  411f79:	aad    0xf
  411f7b:	jnp    0x411f38
  411f7d:	cdq    
  411f7e:	or     edi,DWORD PTR [ecx+ebp*4]
  411f81:	(bad)  
  411f83:	mov    cl,0x93
  411f85:	xchg   edi,eax
  411f86:	adc    ebx,DWORD PTR [ebx]
  411f88:	and    BYTE PTR [eax-0x37],0xff
  411f8c:	push   edx
  411f8d:	in     al,0x34
  411f8f:	and    ebx,edi
  411f91:	jo     0x411f8d
  411f93:	and    BYTE PTR [edi],bl
  411f95:	push   DWORD PTR [eax-0x2c]
  411f98:	lock mov esp,0x7a1bd241
  411f9e:	sub    DWORD PTR [edi],ebp
  411fa0:	ds nop
  411fa2:	into   
  411fa3:	lods   eax,DWORD PTR ds:[esi]
  411fa4:	fwait
  411fa5:	into   
  411fa6:	ret    
  411fa7:	test   DWORD PTR [esi+0x3acaacfa],edx
  411fad:	lods   al,BYTE PTR ds:[esi]
  411fae:	(bad)  [ecx+0x6cc19546]
  411fb4:	cmp    BYTE PTR [edx-0xe],bh
  411fb7:	adc    BYTE PTR [ebp+ebp*8+0x16],bl
  411fbb:	test   BYTE PTR [eax+0xfe24639],cl
  411fc1:	inc    edx
  411fc2:	cmp    eax,0x6669b1f3
  411fc7:	aaa    
  411fc8:	or     bl,BYTE PTR [eax]
  411fca:	adc    eax,DWORD PTR ds:0x6a010d6a
  411fd0:	out    0xfa,eax
  411fd2:	icebp  
  411fd3:	inc    ecx
  411fd4:	push   esp
  411fd5:	jle    0x411fa7
  411fd7:	dec    edi
  411fd8:	mov    dh,0x58
  411fda:	hlt    
  411fdb:	adc    DWORD PTR [edi-0x39],esi
  411fde:	daa    
  411fdf:	fiadd  WORD PTR [esi]
  411fe1:	adc    ah,bl
  411fe3:	inc    edi
  411fe4:	out    dx,al
  411fe5:	pusha  
  411fe6:	nop
  411fe7:	inc    eax
  411fe8:	pusha  
  411fe9:	xor    al,0x0
  411feb:	shl    ebx,1
  411fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fee:	test   edx,edi
  411ff0:	mov    eax,0x7fb6837e
  411ff5:	xchg   ebx,eax
  411ff6:	test   eax,0x7485b3dd
  411ffb:	mov    ah,0xdf
  411ffd:	xor    DWORD PTR [esi],eax
  411fff:	daa    
  412000:	dec    edx
  412001:	into   
  412002:	jmp    0x41206c
  412004:	mov    ebp,0x954f590d
  412009:	push   es
  41200a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41200b:	shl    DWORD PTR [edx+0x2e],0xb0
  41200f:	sbb    eax,0xd73b8b66
  412014:	fldl2t 
  412016:	sub    ecx,esp
  412018:	mov    ch,0x91
  41201a:	out    0xfc,eax
  41201c:	addr16 mov bl,0xf9
  41201f:	inc    esi
  412020:	mov    esi,0xa1391c45
  412025:	sbb    al,0xea
  412027:	sbb    al,BYTE PTR [eax+0x49]
  41202a:	call   0xcdc4:0x5cc40f08
  412031:	xchg   esi,eax
  412032:	sub    ah,dh
  412034:	push   ebx
  412035:	sub    eax,0xd51747ec
  41203a:	ficomp WORD PTR [edx]
  41203c:	sbb    al,0xa3
  41203e:	jmp    0x229893d7
  412043:	aaa    
  412044:	jne    0x41209f
  412046:	adc    DWORD PTR [edx+0x26],ebx
  412049:	adc    BYTE PTR [edi-0x4f],0x68
  41204d:	test   al,0xe5
  41204f:	enter  0x5a44,0x9b
  412053:	xor    ch,BYTE PTR [ecx]
  412055:	cwde   
  412056:	jge    0x412079
  412058:	sahf   
  412059:	rcr    DWORD PTR [ecx+0x42],cl
  41205c:	loope  0x412052
  41205e:	mov    cl,0x5f
  412060:	ss jmp 0x25a2:0xa3b4de0f
  412068:	(bad)  
  41206b:	inc    ecx
  41206c:	daa    
  41206d:	adc    edi,edi
  41206f:	std    
  412070:	ss pop edi
  412073:	push   ecx
  412074:	inc    ebx
  412075:	sbb    dl,BYTE PTR [ecx-0x1b]
  412078:	test   eax,0x636d6048
  41207d:	in     al,0x1c
  41207f:	push   eax
  412080:	and    al,0xb8
  412082:	(bad)  
  412083:	int    0x1a
  412085:	ja     0x4120a3
  412087:	adc    al,0x3d
  412089:	sub    eax,0xb1be41db
  41208e:	ins    BYTE PTR es:[edi],dx
  41208f:	rcl    BYTE PTR [edi-0x2f201a0a],0x73
  412096:	dec    BYTE PTR [ecx]
  412098:	or     bh,0xa6
  41209b:	push   ebp
  41209c:	jg     0x412110
  41209e:	and    al,0xb5
  4120a0:	or     eax,0x3d2e77d3
  4120a5:	jno    0x412059
  4120a7:	stos   DWORD PTR es:[edi],eax
  4120a8:	ss jecxz 0x4120cf
  4120ab:	pop    ebp
  4120ac:	and    eax,0x3487e340
  4120b1:	add    cl,cl
  4120b3:	or     BYTE PTR [edi+0x7e],cl
  4120b6:	ins    BYTE PTR es:[edi],dx
  4120b7:	pop    ebp
  4120b8:	jno    0x412081
  4120ba:	pop    edx
  4120bb:	clc    
  4120bc:	shl    edx,1
  4120be:	jle    0x412043
  4120c0:	mov    bl,0x7d
  4120c2:	adc    bl,BYTE PTR [ecx+0x58a5ce3a]
  4120c8:	cmp    DWORD PTR [edx+0x63231619],0xee9f7bdc
  4120d2:	jae    0x412063
  4120d4:	call   0x1aeb7a69
  4120d9:	inc    BYTE PTR ds:0x4e90ca4a
  4120df:	loope  0x4120cb
  4120e1:	dec    esi
  4120e2:	pop    esp
  4120e3:	gs cdq 
  4120e5:	mov    bh,0xb
  4120e7:	fsub   DWORD PTR [ebp+0x647f66ca]
  4120ed:	inc    eax
  4120ee:	pop    esp
  4120ef:	and    BYTE PTR [eax],bh
  4120f1:	pop    ds
  4120f2:	mov    ebx,0x26786137
  4120f7:	ret    0x21b2
  4120fa:	push   cs
  4120fb:	sub    DWORD PTR [esi-0x56f7a41e],0x6f
  412102:	adc    esp,DWORD PTR ds:0x993c9592
  412108:	les    ecx,FWORD PTR [ecx]
  41210a:	jle    0x412119
  41210c:	test   eax,0x89e247ef
  412111:	pop    edi
  412112:	lods   eax,DWORD PTR ds:[esi]
  412113:	jae    0x412104
  412115:	aad    0xc3
  412117:	inc    edx
  412118:	outs   dx,DWORD PTR ds:[esi]
  412119:	call   0x42f4:0x44c0f820
  412120:	adc    DWORD PTR [esi],ebx
  412122:	jge    0x4120ca
  412124:	xor    ah,0xaf
  412127:	xchg   ebx,eax
  412128:	daa    
  412129:	pop    ds
  41212a:	fsubrp st(1),st
  41212c:	and    al,0x2
  41212e:	pop    esp
  41212f:	or     eax,0xdf80584a
  412134:	xor    eax,0x433a51de
  412139:	sbb    DWORD PTR [esp+eiz*8],esp
  41213c:	xor    BYTE PTR [ecx-0x1d],0x26
  412140:	ins    BYTE PTR es:[edi],dx
  412141:	jge    0x41211f
  412143:	jae    0x4120e9
  412145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412146:	mov    ?,WORD PTR [ecx+0x3eb6fc12]
  41214c:	or     BYTE PTR [edi-0x23],bh
  41214f:	addr16 or al,0x43
  412152:	inc    edx
  412153:	fcmovnb st,st(5)
  412155:	imul   eax,DWORD PTR [ebx-0x59],0x7eb64daa
  41215c:	sbb    ah,BYTE PTR [edi+0x77ba6a3]
  412162:	cs mov ah,0x5a
  412165:	push   ss
  412166:	(bad)  
  412167:	in     al,0xbb
  412169:	push   ebx
  41216a:	cmp    DWORD PTR [edi+0x14144930],edx
  412170:	into   
  412171:	sti    
  412172:	lods   eax,DWORD PTR ds:[esi]
  412173:	test   al,0x7b
  412175:	fadd   QWORD PTR [edi-0x1a]
  412178:	je     0x4121ae
  41217a:	pop    ss
  41217b:	retf   0x2c0e
  41217e:	xchg   edi,eax
  41217f:	mov    ecx,0xdac5e78b
  412184:	jo     0x4121ef
  412186:	push   esi
  412187:	in     al,dx
  412188:	mov    BYTE PTR [edi+0x22],ah
  41218b:	in     al,0x49
  41218d:	push   0x79
  41218f:	mov    al,ds:0xce665615
  412194:	aad    0xa
  412196:	mov    eax,0xdff7f5f5
  41219b:	push   ss
  41219c:	xor    dl,BYTE PTR [edx+0x29016bed]
  4121a2:	(bad)  
  4121a3:	call   0x2c55:0xb2fa8ab6
  4121aa:	repnz inc ebx
  4121ac:	pushf  
  4121ad:	cdq    
  4121ae:	xchg   ecx,eax
  4121af:	dec    edi
  4121b0:	push   esi
  4121b1:	les    ecx,FWORD PTR [esi+0x6ff50292]
  4121b7:	les    edi,FWORD PTR [edi+0x30]
  4121ba:	xadd   DWORD PTR [ebp-0x6358b4d8],esi
  4121c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c3:	bound  edx,QWORD PTR ds:0xc84cbdfc
  4121c9:	sub    eax,DWORD PTR [eax]
  4121cb:	mov    cl,0x75
  4121cd:	mov    edi,ebx
  4121cf:	lods   al,BYTE PTR ds:[esi]
  4121d0:	adc    DWORD PTR [eax+ebx*2-0x362b8bed],eax
  4121d7:	dec    ebx
  4121d8:	push   edx
  4121d9:	inc    edx
  4121da:	inc    bp
  4121dc:	xlat   BYTE PTR ds:[ebx]
  4121dd:	int    0x60
  4121df:	fwait
  4121e0:	loope  0x41225e
  4121e2:	cmp    edi,ebx
  4121e4:	or     BYTE PTR [ecx+0x4fb01ce7],0x6b
  4121eb:	clc    
  4121ec:	push   esp
  4121ed:	mov    esi,0xe474936b
  4121f2:	or     DWORD PTR [edx+0x11],0xe98eb8f1
  4121f9:	sbb    ecx,ecx
  4121fb:	mov    eax,0x814ffb11
  412200:	jae    0x4121c9
  412202:	push   esi
  412203:	outs   dx,BYTE PTR ds:[esi]
  412204:	adc    al,0xdb
  412206:	mov    ebp,0x8fb199c1
  41220b:	push   esp
  41220c:	loopne 0x412279
  41220e:	(bad)  
  41220f:	sbb    al,0xce
  412211:	cs mov dh,0x40
  412214:	xchg   edi,eax
  412215:	cli    
  412216:	mov    esi,0xd8630663
  41221b:	mov    ebp,0xf10f57d8
  412220:	pushf  
  412221:	out    dx,eax
  412222:	dec    ecx
  412223:	fstp   TBYTE PTR [ebx]
  412225:	mov    ds:0x4a4646b6,al
  41222a:	mov    dh,0x12
  41222c:	retf   
  41222d:	int    0xa
  41222f:	repnz (bad) 
  412231:	and    DWORD PTR [edi-0xba7bde2],ebx
  412237:	ret    
  412238:	mov    ds:0xfa8eacc1,eax
  41223d:	pop    ebx
  41223e:	adc    dh,bl
  412240:	mov    esp,0x603c4408
  412245:	adc    ebp,DWORD PTR [eax+0xb]
  412248:	add    DWORD PTR [ecx-0x7b42217c],esp
  41224e:	mov    edx,0x83a0c01b
  412253:	or     eax,DWORD PTR [ebx+0x6b]
  412256:	cmp    al,0xf3
  412258:	in     eax,0x81
  41225a:	xchg   esi,eax
  41225b:	fisub  WORD PTR [esi+0x5c]
  41225e:	or     esi,DWORD PTR [esi+0x6be29715]
  412264:	mov    dh,0x70
  412266:	out    0x4a,al
  412268:	and    esi,0x9ca19a18
  41226e:	mov    dh,0x12
  412270:	neg    DWORD PTR [esi-0x2c892d53]
  412276:	scas   eax,DWORD PTR es:[edi]
  412277:	pusha  
  412278:	push   0xd2b3c260
  41227d:	push   edi
  41227e:	fisub  DWORD PTR [ecx+0x9ebb8aa]
  412284:	inc    esp
  412285:	cld    
  412286:	fst    QWORD PTR [edx-0x68]
  412289:	(bad)  
  41228a:	xor    eax,0xc3e36f5b
  41228f:	scas   al,BYTE PTR es:[edi]
  412290:	jp     0x4122a7
  412292:	leave  
  412293:	js     0x4122c7
  412295:	inc    edx
  412296:	fs ins BYTE PTR es:[edi],dx
  412298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412299:	rcl    DWORD PTR [esp+edx*4-0x75e15f23],0xa7
  4122a1:	pop    esp
  4122a2:	mov    dl,0x5a
  4122a4:	retf   0xe29c
  4122a7:	gs (bad) 
  4122a9:	sub    eax,0x900b7e34
  4122ae:	jg     0x4122c5
  4122b0:	pop    ecx
  4122b1:	(bad)  
  4122b2:	jl     0x412278
  4122b4:	ror    BYTE PTR [ecx-0xd],cl
  4122b7:	add    BYTE PTR [eax-0x42],bl
  4122ba:	std    
  4122bb:	out    dx,al
  4122bc:	pushf  
  4122bd:	mov    edi,ss
  4122bf:	sahf   
  4122c0:	int    0x58
  4122c2:	xor    al,0x4c
  4122c4:	test   BYTE PTR [eax+edi*1+0x12],bh
  4122c8:	fisubr DWORD PTR [esp+edi*8-0x3b6c525a]
  4122cf:	enter  0x78a7,0x52
  4122d3:	jp     0x41232d
  4122d5:	mov    ebx,0x9c395115
  4122da:	mov    bl,al
  4122dc:	inc    esi
  4122dd:	pop    ss
  4122de:	(bad)  
  4122df:	jns    0x4122f2
  4122e1:	into   
  4122e2:	push   esi
  4122e3:	mov    cl,BYTE PTR [edx+0x5d1fc20c]
  4122e9:	stc    
  4122ea:	push   ss
  4122eb:	and    ecx,esp
  4122ed:	mov    ebp,0xa728d25a
  4122f2:	and    DWORD PTR [ecx-0x25],ebx
  4122f5:	out    dx,eax
  4122f6:	mov    al,ds:0xede1d336
  4122fb:	jno    0x412287
  4122fd:	mov    ?,WORD PTR [eax-0x5d]
  412300:	sbb    DWORD PTR [eax],ecx
  412302:	icebp  
  412303:	daa    
  412304:	mov    esi,0x553e710c
  412309:	mov    DWORD PTR [edx],edx
  41230b:	test   al,0x9d
  41230d:	ss (bad) 
  41230f:	adc    edi,DWORD PTR [esi-0x61040dac]
  412315:	add    eax,DWORD PTR [edi+0x4b]
  412318:	xor    al,0x38
  41231a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41231b:	imul   ebp,DWORD PTR [eax-0xefd8cb2],0xffffffe9
  412322:	rcl    BYTE PTR [edi+0x3e02179f],1
  412328:	es push 0x2c178667
  41232e:	ftst   
  412330:	outs   dx,DWORD PTR ds:[esi]
  412331:	add    ebp,edx
  412333:	sub    eax,0xd8de8128
  412338:	push   edx
  412339:	inc    ebp
  41233a:	(bad)  
  41233b:	mov    edx,0x4232b65b
  412340:	pop    ecx
  412341:	loop   0x412386
  412343:	rol    DWORD PTR [esi-0x2d69bca7],1
  412349:	ds jmp 0xbac3:0xfad76d0f
  412351:	push   es
  412352:	push   esp
  412353:	jp     0x412374
  412355:	pop    ebp
  412356:	or     dh,BYTE PTR [esi]
  412358:	aas    
  412359:	shr    bh,cl
  41235b:	pop    edi
  41235c:	jnp    0x412392
  41235e:	(bad)  
  41235f:	mov    dh,0xd
  412361:	(bad)
  412365:	adc    eax,0x68b7d63e
  41236a:	jne    0x4123e7
  41236c:	inc    edi
  41236d:	stos   BYTE PTR es:[edi],al
  41236e:	push   ds
  41236f:	in     eax,0xd
  412371:	and    BYTE PTR [edi],0x23
  412374:	and    al,0x4e
  412376:	arpl   WORD PTR [esi+0x6d2935c1],sp
  41237c:	sahf   
  41237d:	jmp    0x83256715
  412382:	xchg   ebx,eax
  412383:	xor    ch,BYTE PTR [ebx]
  412385:	aas    
  412386:	mov    eax,0x8e4d20b1
  41238b:	mov    esi,0x6552061f
  412390:	or     eax,0xaa745835
  412395:	(bad)  
  412396:	mov    ds:0xb35257b1,al
  41239c:	dec    eax
  41239d:	gs mov edx,0xb563eff4
  4123a3:	and    bl,bl
  4123a5:	mov    eax,0x8714703d
  4123aa:	fnstenv [ebx+0x262ea47]
  4123b0:	dec    ecx
  4123b1:	icebp  
  4123b2:	imul   edx,ebp,0xa0164989
  4123b8:	fwait
  4123b9:	popa   
  4123ba:	sub    BYTE PTR [esi],cl
  4123bc:	push   cs
  4123bd:	sub    BYTE PTR [edx],ch
  4123bf:	inc    ecx
  4123c0:	fwait
  4123c1:	sbb    dh,bl
  4123c3:	xchg   esp,eax
  4123c4:	iret   
  4123c5:	cmp    BYTE PTR [ebx],al
  4123c7:	js     0x412357
  4123c9:	pop    edx
  4123ca:	jb     0x41238f
  4123cc:	cmc    
  4123cd:	or     eax,0xed5dd58
  4123d2:	leave  
  4123d3:	xchg   ecx,eax
  4123d4:	outs   dx,DWORD PTR ds:[esi]
  4123d5:	pop    edi
  4123d6:	pop    eax
  4123d7:	jp     0x412413
  4123d9:	ss pmaxub mm2,mm0
  4123dd:	repz bound edx,QWORD PTR [ebx-0x41]
  4123e1:	fwait
  4123e2:	mov    esi,0x9250a6a8
  4123e7:	hlt    
  4123e8:	outs   dx,BYTE PTR ds:[esi]
  4123e9:	jmp    0x91ae:0xc8887a58
  4123f0:	or     eax,DWORD PTR ds:0x4193dde2
  4123f6:	xchg   DWORD PTR [edx+0xe],edx
  4123f9:	push   es
  4123fa:	sub    cl,BYTE PTR [edi-0x58]
  4123fd:	push   ebp
  4123fe:	jle    0x4123a3
  412400:	xchg   edx,eax
  412401:	mov    cl,0x56
  412403:	pop    ebp
  412404:	ins    BYTE PTR es:[edi],dx
  412405:	jns    0x412479
  412407:	in     eax,0xb9
  412409:	or     al,0x5f
  41240b:	xchg   ecx,eax
  41240c:	or     ebx,DWORD PTR [ebx+0x54]
  41240f:	sahf   
  412410:	iret   
  412411:	inc    edi
  412412:	cmp    BYTE PTR [ebp-0x65b5398],0xc9
  412419:	cmp    bh,BYTE PTR [ecx+0x7e45e904]
  41241f:	fild   QWORD PTR [ebx]
  412421:	pop    es
  412422:	popf   
  412423:	and    edx,DWORD PTR [eiz*8-0x685a48cb]
  41242a:	mov    cl,0x55
  41242c:	je     0x41243b
  41242e:	mov    esp,0x9187dcc1
  412433:	cld    
  412434:	fs cmp esi,edx
  412437:	mov    DWORD PTR [ecx+0x4e],edi
  41243a:	ret    0xe839
  41243d:	mov    bh,0x6b
  41243f:	jbe    0x412415
  412441:	hlt    
  412442:	push   ebx
  412443:	imul   ebx,edi,0x35fc837f
  412449:	nop
  41244a:	push   esi
  41244b:	push   ebx
  41244c:	jns    0x412402
  41244e:	call   0xf76833c3
  412453:	lea    eax,[esi+0x1]
  412456:	(bad)  
  412457:	leave  
  412458:	dec    esi
  412459:	dec    ecx
  41245a:	popf   
  41245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41245c:	pop    ebx
  41245d:	in     eax,0x11
  41245f:	sar    DWORD PTR [eax],1
  412461:	out    0x59,al
  412463:	cmp    eax,0x925daf3e
  412468:	clc    
  412469:	aaa    
  41246a:	push   edi
  41246b:	cwde   
  41246c:	fsub   QWORD PTR [edx-0x1d]
  41246f:	test   al,0xd6
  412471:	popa   
  412472:	xor    dh,ah
  412474:	call   0x79a5b851
  412479:	lods   al,BYTE PTR ds:[esi]
  41247a:	and    esi,DWORD PTR [ebx]
  41247c:	shr    DWORD PTR [eax],0xf7
  41247f:	xchg   esi,eax
  412480:	in     al,dx
  412481:	or     cl,BYTE PTR [eax-0x51]
  412484:	mov    bl,0x7b
  412486:	add    bh,0x9b
  412489:	xchg   edi,eax
  41248a:	dec    esi
  41248b:	or     cl,BYTE PTR [ecx-0x7d]
  41248e:	loope  0x41244c
  412490:	mov    dh,0x87
  412492:	cmp    BYTE PTR [esi+eiz*2],bl
  412495:	jecxz  0x412476
  412497:	mov    esp,0x430f896d
  41249c:	sub    DWORD PTR [ecx-0x2b448d7b],esp
  4124a2:	out    0xe8,al
  4124a4:	das    
  4124a5:	jmp    DWORD PTR [edi+0x7e]
  4124a8:	add    ah,BYTE PTR [ecx-0xa]
  4124ab:	mov    ebx,0xbb61b18d
  4124b0:	sahf   
  4124b1:	cmp    al,BYTE PTR [ebp+0x2da2870a]
  4124b7:	mov    edx,0x4c2ec935
  4124bc:	popf   
  4124bd:	repz inc edi
  4124bf:	mov    edi,0x6330948f
  4124c4:	sub    al,0x98
  4124c6:	cmp    al,0xe9
  4124c8:	outs   dx,BYTE PTR ds:[esi]
  4124c9:	pop    ecx
  4124ca:	daa    
  4124cb:	fcom   QWORD PTR [edx+0x37cab7e7]
  4124d1:	add    BYTE PTR [esi+0x24],dl
  4124d4:	xchg   edx,eax
  4124d5:	sbb    BYTE PTR [ebp-0x6a],ah
  4124d8:	xlat   BYTE PTR ds:[ebx]
  4124d9:	(bad)  
  4124da:	imul   esp,DWORD PTR ds:0xbebaa28d,0xc0c722e3
  4124e4:	rcr    DWORD PTR [edx-0x4911efcd],1
  4124ea:	inc    eax
  4124eb:	sbb    ah,bh
  4124ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ee:	mov    ds:0x48aa82c3,eax
  4124f3:	ror    ecx,cl
  4124f5:	push   ebx
  4124f6:	call   0xac35dcc0
  4124fb:	mov    dh,0x1a
  4124fd:	mov    eax,DWORD PTR [ebx+0x192bddf9]
  412503:	inc    esp
  412504:	inc    edi
  412505:	jo     0x412549
  412507:	dec    esi
  412508:	push   eax
  412509:	xor    bh,ch
  41250b:	ds dec ecx
  41250d:	pusha  
  41250e:	push   ss
  41250f:	nop
  412510:	pop    esp
  412511:	clc    
  412512:	test   DWORD PTR [eax],eax
  412514:	ret    0xa48f
  412517:	sub    BYTE PTR [ecx+edx*2],al
  41251a:	aaa    
  41251b:	je     0x412529
  41251d:	xchg   esp,eax
  41251e:	jp     0x412543
  412520:	adc    eax,0x60f07337
  412525:	pusha  
  412526:	inc    ecx
  412527:	pop    ebx
  412528:	fs push edx
  41252a:	cdq    
  41252b:	push   edi
  41252c:	loopne 0x4124bd
  41252e:	dec    esp
  41252f:	or     dl,BYTE PTR [ecx*2-0x4488c4a3]
  412536:	push   es
  412537:	addr16 mov dl,0xfb
  41253a:	sar    DWORD PTR [ecx],cl
  41253c:	cmp    al,ah
  41253e:	and    bl,BYTE PTR [edi]
  412540:	push   ebx
  412541:	(bad)  
  412542:	ins    DWORD PTR es:[edi],dx
  412543:	push   ecx
  412544:	mov    cl,0x52
  412546:	adc    DWORD PTR [eax-0x12d5a4cd],edi
  41254c:	cmovle ebx,DWORD PTR [esi]
  41254f:	inc    eax
  412550:	jl     0x41258b
  412552:	dec    esi
  412553:	stos   DWORD PTR es:[edi],eax
  412554:	int3   
  412555:	mov    eax,0x80fd8ced
  41255a:	xchg   ebp,eax
  41255b:	cmp    eax,0xee34e8cb
  412560:	xlat   BYTE PTR ds:[ebx]
  412561:	xchg   ebx,eax
  412562:	mov    esp,0x2ecc982a
  412567:	dec    edx
  412568:	mov    edx,0x78934142
  41256d:	add    al,0xd4
  41256f:	mov    al,ds:0xdb40e7cb
  412574:	push   es
  412575:	arpl   WORD PTR [ebx+edi*8],cx
  412578:	and    eax,0xdc6e638c
  41257d:	in     al,dx
  41257e:	das    
  41257f:	stos   BYTE PTR es:[edi],al
  412580:	jp     0x412508
  412582:	mov    edx,0xb0c9f287
  412587:	and    ebp,DWORD PTR [edi+ecx*2]
  41258a:	fisttp DWORD PTR ds:0xcb79ae51
  412590:	sbb    ebx,esp
  412592:	or     DWORD PTR [esi],ecx
  412594:	mov    esi,eax
  412596:	cmp    al,0x7c
  412598:	xlat   BYTE PTR ds:[ebx]
  412599:	fst    st(7)
  41259b:	or     DWORD PTR ds:0xb0115fae,0x5f1fe450
  4125a5:	test   BYTE PTR [eax+0x83e4cd6],ch
  4125ab:	adc    eax,0xca282765
  4125b0:	pusha  
  4125b1:	mov    ah,0xc1
  4125b3:	popf   
  4125b4:	mov    eax,0x44e5b9f5
  4125b9:	stos   DWORD PTR es:[edi],eax
  4125ba:	xchg   ebp,eax
  4125bb:	and    BYTE PTR [ecx+ebp*4+0x42a76404],dh
  4125c2:	fisttp WORD PTR [eax+0x5f58a48e]
  4125c8:	loopne 0x41256f
  4125ca:	push   edx
  4125cb:	xchg   ebp,eax
  4125cc:	mov    al,ds:0x6daf0eea
  4125d1:	std    
  4125d2:	(bad)  
  4125d4:	jmp    0xf399:0xfb65727
  4125db:	sub    DWORD PTR [edi-0x378fa7ee],edi
  4125e1:	arpl   bp,di
  4125e3:	push   eax
  4125e4:	fidiv  WORD PTR [esi+eiz*8-0x7]
  4125e8:	sbb    ch,al
  4125ea:	mov    dl,0xdb
  4125ec:	add    DWORD PTR [esp+edx*4],ebp
  4125ef:	add    eax,0x2590ea7c
  4125f4:	xchg   DWORD PTR [eax],eax
  4125f6:	retf   0xca56
  4125f9:	je     0x41259a
  4125fb:	mov    al,ds:0xb7d32903
  412600:	xor    DWORD PTR [ecx+eax*4],esp
  412603:	cld    
  412604:	loope  0x412673
  412606:	mov    BYTE PTR [ecx+0x22],cl
  412609:	adc    esi,DWORD PTR [eax+0x44028eec]
  41260f:	jl     0x412605
  412611:	stc    
  412612:	inc    esp
  412613:	arpl   WORD PTR [eax-0x33003dad],si
  412619:	hlt    
  41261a:	les    esi,FWORD PTR [edx-0x46]
  41261d:	nop
  41261e:	popa   
  41261f:	inc    esp
  412620:	push   ebx
  412621:	mov    bl,0x2c
  412623:	(bad)  
  412624:	sbb    eax,0x1e877fe3
  412629:	xor    BYTE PTR [edi+ebx*4],ch
  41262c:	clc    
  41262d:	or     dl,bh
  41262f:	mov    ebp,0x38a6408e
  412634:	aas    
  412635:	lods   al,BYTE PTR ds:[esi]
  412636:	pop    ecx
  412637:	(bad)  
  412638:	push   eax
  412639:	cwde   
  41263a:	sub    DWORD PTR [edx],ebx
  41263c:	inc    edx
  41263d:	add    BYTE PTR [ebx-0x3a4db151],dh
  412643:	out    0xfb,eax
  412645:	xchg   edx,eax
  412646:	adc    al,0xa8
  412648:	or     eax,0x8be73d42
  41264d:	mov    ah,0x1
  41264f:	xor    dl,al
  412651:	sub    bh,BYTE PTR [edi+0x7047edc0]
  412657:	lods   al,BYTE PTR ds:[esi]
  412658:	dec    ebx
  412659:	ja     0x4125f8
  41265b:	xor    eax,0x68f21f4d
  412660:	outs   dx,BYTE PTR ds:[esi]
  412661:	sbb    dh,bl
  412663:	jge    0x41267e
  412665:	pop    ss
  412666:	jmp    0x79e9:0xf8040fc4
  41266d:	dec    ebp
  41266e:	push   es
  41266f:	jg     0x4126af
  412671:	adc    al,0xdb
  412673:	sub    al,0x53
  412675:	imul   edi,DWORD PTR ss:0xfd0b343e,0x7d0ad0d2
  412680:	retf   
  412681:	imul   edx,DWORD PTR ds:0x471e7de7,0xffffffe0
  412688:	je     0x412625
  41268a:	cdq    
  41268b:	test   BYTE PTR [esi+0x4d08a829],al
  412691:	out    dx,al
  412692:	pop    esi
  412693:	jmp    0x1337:0x57f3da94
  41269a:	xor    al,0x34
  41269c:	sbb    al,0xc9
  41269e:	dec    ebp
  41269f:	stc    
  4126a0:	dec    ebp
  4126a1:	sti    
  4126a2:	sub    eax,DWORD PTR [esi-0x21]
  4126a5:	jmp    0x15a9:0xb38891e0
  4126ac:	push   ds
  4126ad:	mov    ecx,0x658fb668
  4126b2:	out    dx,al
  4126b3:	shl    BYTE PTR [esi+0x6b],cl
  4126b6:	fstp   DWORD PTR [esi+edi*8+0x6fa0fd2a]
  4126bd:	mov    ebp,0x6a5f1c57
  4126c2:	jmp    0xbc4c:0xa3f637d9
  4126c9:	xchg   BYTE PTR [ebp-0x2e53ef4d],ch
  4126cf:	cmp    DWORD PTR [edx+0x1b57d5a2],esp
  4126d5:	pop    eax
  4126d6:	push   ecx
  4126d7:	daa    
  4126d8:	mov    edx,0x531a954a
  4126dd:	push   edi
  4126de:	sub    ah,0xa0
  4126e1:	xor    bl,dl
  4126e3:	mov    ds:0x9062811d,al
  4126e8:	pop    ds
  4126e9:	addr16 shr edx,1
  4126ec:	push   0xfffffff8
  4126ee:	dec    ebp
  4126ef:	(bad)  
  4126f0:	adc    al,0x1a
  4126f2:	repz mov edx,0x86fcab85
  4126f8:	xor    al,BYTE PTR [esi]
  4126fa:	inc    eax
  4126fb:	loope  0x4126f4
  4126fd:	shl    DWORD PTR [edx+0x2863c7f4],1
  412703:	stos   BYTE PTR es:[edi],al
  412704:	aam    0x55
  412706:	std    
  412707:	xlat   BYTE PTR ds:[ebx]
  412708:	add    al,0x17
  41270a:	pop    esp
  41270b:	push   0x56
  41270d:	imul   esi,esp,0xec9efcd5
  412713:	cmp    al,0xc1
  412715:	sbb    al,0x6c
  412717:	dec    ebp
  412718:	(bad)  
  412719:	lods   al,BYTE PTR ds:[esi]
  41271a:	loope  0x4126b3
  41271c:	xor    eax,0xd1630385
  412721:	ror    DWORD PTR [ecx+0x2a7ec804],0x82
  412728:	jge    0x4126c9
  41272a:	xchg   ebx,eax
  41272b:	inc    esi
  41272c:	loop   0x4127a0
  41272e:	jmp    0x412721
  412730:	mov    WORD PTR [edi+0x35],?
  412733:	xchg   BYTE PTR [esi+0x8a15acf],al
  412739:	ror    DWORD PTR [ebx-0x3a359755],cl
  41273f:	adc    al,0xf6
  412741:	mov    ebp,0xb48d1940
  412746:	push   edx
  412747:	push   0x3c
  412749:	out    0x2f,al
  41274b:	mov    dh,0xd
  41274d:	stc    
  41274e:	stos   BYTE PTR es:[edi],al
  41274f:	mov    eax,DWORD PTR [edi-0x45442a6f]
  412755:	test   eax,0xc115eb7e
  41275a:	out    0x3d,eax
  41275c:	pop    ebx
  41275d:	pop    ecx
  41275e:	pop    ss
  41275f:	ror    DWORD PTR [eax-0x30a3bfc2],cl
  412765:	push   cs
  412766:	push   es
  412767:	ds jmp 0x412718
  41276a:	or     BYTE PTR [edi+0x10],0x14
  41276e:	pop    edx
  41276f:	adc    eax,0x83ef700c
  412774:	mov    al,0x10
  412776:	aas    
  412777:	cs dec esi
  412779:	dec    eax
  41277a:	dec    esi
  41277b:	ret    0x4165
  41277e:	pop    edx
  41277f:	cmp    BYTE PTR [eax+edi*1+0x6e249ae9],ah
  412786:	xchg   esi,ecx
  412788:	xchg   esp,eax
  412789:	adc    edi,esi
  41278b:	loop   0x412741
  41278d:	js     0x41270f
  41278f:	mov    WORD PTR [edi-0x4f17a72],ds
  412795:	or     DWORD PTR [eax-0x2e],ecx
  412798:	push   ecx
  412799:	aam    0x44
  41279b:	jmp    0xbbaa:0x3776fcb4
  4127a2:	imul   ecx,DWORD PTR [esi],0xdd8c004e
  4127a8:	add    BYTE PTR [edi-0x28f90f44],bl
  4127ae:	ja     0x412760
  4127b0:	xchg   ebx,eax
  4127b1:	into   
  4127b2:	add    BYTE PTR [edx],bl
  4127b4:	js     0x41280f
  4127b6:	fucom  st(4)
  4127b8:	cmp    DWORD PTR [eax],ebp
  4127ba:	(bad)  
  4127bb:	(bad)  
  4127bc:	frstor [ebp+esi*2-0x19]
  4127c0:	pop    ebx
  4127c1:	int    0x96
  4127c3:	data16 jl 0x412755
  4127c6:	call   0xb9ba4712
  4127cb:	sub    DWORD PTR [ebp-0x7f74b7fc],esi
  4127d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d2:	(bad)  
  4127d4:	cmc    
  4127d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d6:	push   ebp
  4127d7:	and    esi,DWORD PTR [ebx]
  4127d9:	icebp  
  4127da:	mov    BYTE PTR [edx],dl
  4127dc:	cmp    ah,BYTE PTR [ebx]
  4127de:	arpl   WORD PTR [eax],bx
  4127e0:	sbb    cl,BYTE PTR [edi-0x25]
  4127e3:	add    eax,DWORD PTR [edx+0x54]
  4127e6:	repz cdq 
  4127e8:	fwait
  4127e9:	mov    BYTE PTR [ebp+0x2e],dh
  4127ec:	dec    ebp
  4127ed:	je     0x412770
  4127ef:	jns    0x4127c2
  4127f1:	and    al,0xa
  4127f3:	int    0x46
  4127f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127f6:	out    dx,al
  4127f7:	(bad)  
  4127f8:	(bad)  
  4127f9:	pop    esp
  4127fa:	cmp    esp,0x53072ee8
  412800:	xchg   edx,eax
  412801:	int3   
  412802:	mov    ds:0xa3982e7d,eax
  412807:	and    eax,0xe9e7deeb
  41280c:	imul   edi,DWORD PTR [edx-0x1d],0x182c917d
  412813:	inc    edx
  412814:	sti    
  412815:	in     al,0x1d
  412817:	and    ecx,DWORD PTR [ecx+0x1011caf]
  41281d:	rcr    bl,0x56
  412820:	retf   
  412821:	stc    
  412822:	into   
  412823:	inc    ecx
  412824:	into   
  412825:	adc    al,0x91
  412827:	lods   eax,DWORD PTR ds:[esi]
  412828:	dec    ebx
  412829:	cmp    DWORD PTR [ebp+edi*4-0x4900c0b9],esi
  412830:	enter  0xac8b,0xef
  412834:	call   0x4e2116f0
  412839:	sbb    bl,BYTE PTR [eax+0x1a24e011]
  41283f:	jbe    0x41289d
  412841:	rol    ebp,cl
  412843:	inc    ebx
  412844:	push   cs
  412845:	aaa    
  412846:	adc    al,0x1e
  412848:	mov    DWORD PTR [edx*8-0x2d1ee211],esi
  41284f:	mov    bh,0xca
  412851:	add    eax,0xe2ad11b5
  412856:	mov    ebx,DWORD PTR [edi]
  412858:	mov    eax,0x8294f8b3
  41285d:	jo     0x412839
  41285f:	jmp    0x140be82c
  412864:	mov    eax,0x533541f5
  412869:	jae    0x4128cf
  41286b:	xlat   BYTE PTR ds:[ebx]
  41286c:	shl    BYTE PTR [ebp+0x5e40648c],1
  412872:	inc    edx
  412873:	push   0xffffffd9
  412875:	jae    0x412833
  412877:	jns    0x41280f
  412879:	pop    edi
  41287a:	pop    eax
  41287b:	into   
  41287c:	cmp    WORD PTR [ebx+0x27c13ad1],si
  412883:	or     DWORD PTR [ecx],ecx
  412885:	mov    ebx,0xc4ef8409
  41288a:	sbb    DWORD PTR [esi+0x5436ac9],ecx
  412890:	mov    bh,0xb2
  412892:	push   ss
  412893:	jns    0x41281b
  412895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412896:	mov    dh,0x1e
  412898:	das    
  412899:	mov    esp,0xb90e38a8
  41289e:	mov    bh,cl
  4128a0:	pushf  
  4128a1:	push   esi
  4128a2:	lds    ecx,FWORD PTR [ecx-0x80]
  4128a5:	cdq    
  4128a6:	fisub  WORD PTR [edx+esi*8-0x59]
  4128aa:	inc    esi
  4128ab:	ds pop ebp
  4128ad:	gs sub al,0x9f
  4128b0:	mov    esi,0x16788352
  4128b5:	mov    DWORD PTR [edx],ebp
  4128b7:	cmp    eax,0x7adf1530
  4128bc:	dec    ecx
  4128bd:	or     bh,BYTE PTR [ebp+0x78]
  4128c0:	aam    0x95
  4128c2:	mov    eax,ds:0xe19f1f04
  4128c7:	jb     0x41293b
  4128c9:	inc    edx
  4128ca:	mov    cl,0x12
  4128cc:	add    ebp,esp
  4128ce:	jecxz  0x4128c0
  4128d0:	fsub   DWORD PTR [edx+ecx*4-0x7d88aed4]
  4128d7:	jmp    0x4128a3
  4128d9:	cs inc eax
  4128db:	push   0x51fdf520
  4128e0:	lods   al,BYTE PTR ds:[esi]
  4128e1:	imul   edx,esi,0x69
  4128e4:	out    dx,al
  4128e5:	imul   esi,DWORD PTR [eax+0x62],0xffffffe0
  4128e9:	xchg   DWORD PTR [edi],ebp
  4128eb:	lock ret 0x7124
  4128ef:	out    dx,al
  4128f0:	fadd   DWORD PTR [ebp+0xcb931a0]
  4128f6:	inc    eax
  4128f7:	repz je 0x412925
  4128fa:	sbb    BYTE PTR ds:0x709951ea,bl
  412900:	push   cs
  412901:	sti    
  412902:	cmp    BYTE PTR [ebp-0xb],dl
  412905:	ror    DWORD PTR ds:0x19d4752d,cl
  41290b:	addr16 lock inc eax
  41290e:	sub    eax,0xd83a676f
  412913:	loopne 0x4128be
  412915:	push   0xffffffd3
  412917:	fist   DWORD PTR [edi-0x411bafa3]
  41291d:	xchg   BYTE PTR [ecx],dl
  41291f:	jmp    esp
  412921:	sar    dl,cl
  412923:	push   esp
  412924:	dec    ebx
  412925:	inc    ecx
  412926:	pushf  
  412927:	inc    esp
  412928:	pop    ebp
  412929:	mov    ah,0xbc
  41292b:	idiv   esp
  41292d:	pushf  
  41292e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292f:	call   0x90672b4b
  412934:	loopne 0x4128ec
  412936:	mov    DWORD PTR [eax+ecx*8-0x45],edi
  41293a:	es aaa 
  41293c:	xor    eax,esp
  41293e:	jmp    DWORD PTR [ecx+0x4b74d5bd]
  412944:	cs jbe 0x412978
  412947:	jmpw   0x8750
  41294b:	jo     0x4129bd
  41294d:	dec    eax
  41294e:	mov    cl,0x76
  412950:	retf   
  412951:	cwde   
  412952:	pusha  
  412953:	jle    0x412929
  412955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412956:	cdq    
  412957:	xor    ebx,DWORD PTR [esi-0x56]
  41295a:	inc    ecx
  41295b:	xchg   BYTE PTR [edx],ah
  41295d:	int    0x3c
  41295f:	retf   0x712e
  412962:	mov    bh,0x50
  412964:	fld    QWORD PTR [ecx]
  412966:	js     0x41297c
  412968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412969:	add    edi,DWORD PTR [ecx]
  41296b:	pop    ebx
  41296c:	ins    DWORD PTR es:[edi],dx
  41296d:	retf   
  41296e:	dec    edx
  41296f:	inc    esi
  412970:	xchg   ecx,eax
  412971:	xchg   esi,eax
  412972:	push   esp
  412973:	lock aam 0x59
  412976:	pop    ebx
  412977:	(bad)  
  412978:	shr    ch,1
  41297a:	imul   edi,DWORD PTR fs:[eax-0x65],0x11
  41297f:	mov    ebx,0x9acd2911
  412984:	out    0x6c,eax
  412986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412987:	and    dl,BYTE PTR [edx+0x51]
  41298a:	iret   
  41298b:	mov    ecx,0x40a5457f
  412990:	dec    esp
  412991:	jno    0x412999
  412993:	fwait
  412994:	addr16 pushf 
  412996:	int    0x67
  412998:	pop    es
  412999:	sbb    BYTE PTR [esi+0x49b6dc54],0xbb
  4129a0:	push   esp
  4129a1:	pop    ss
  4129a2:	cs jmp 0x522b:0x82a24284
  4129aa:	pushf  
  4129ab:	loop   0x412947
  4129ad:	pop    ss
  4129ae:	inc    ebx
  4129af:	cmp    BYTE PTR [eax+edi*1],cl
  4129b2:	sub    cl,BYTE PTR [ebx+0x344c289f]
  4129b8:	addr16 push edx
  4129ba:	jp     0x4129f5
  4129bc:	ret    
  4129bd:	jle    0x412999
  4129bf:	mov    esi,0xf84cad37
  4129c4:	or     DWORD PTR [ecx],ebp
  4129c6:	mov    al,0x9e
  4129c8:	loopne 0x41299a
  4129ca:	jmp    0xf8a:0x6ad4cc59
  4129d1:	jp     0x4129a1
  4129d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129d4:	mov    ds:0xa7bd4075,eax
  4129d9:	lahf   
  4129da:	les    ecx,FWORD PTR [edi+0x358b36da]
  4129e0:	push   cs
  4129e1:	jb     0x4129ce
  4129e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e4:	pop    ebx
  4129e5:	in     al,0xe
  4129e7:	adc    esp,DWORD PTR [ebx+0x39]
  4129ea:	int3   
  4129eb:	in     eax,dx
  4129ec:	sti    
  4129ed:	fld    QWORD PTR cs:[ecx-0x373469d4]
  4129f4:	(bad)  
  4129f5:	in     eax,dx
  4129f6:	fistp  DWORD PTR [ebp-0x7b]
  4129f9:	stos   DWORD PTR es:[edi],eax
  4129fa:	and    al,0x98
  4129fc:	jae    0x412a58
  4129fe:	xchg   DWORD PTR [ebx-0xf],edi
  412a01:	cmp    BYTE PTR [ecx-0x11],cl
  412a04:	inc    ecx
  412a05:	and    al,BYTE PTR [ecx+0x1c]
  412a08:	cmp    BYTE PTR [edi],dh
  412a0a:	dec    esi
  412a0b:	add    BYTE PTR [edx+eiz*8-0x7f5eac51],al
  412a12:	or     BYTE PTR [ebp+0x2a],ch
  412a15:	pop    eax
  412a16:	in     al,dx
  412a17:	int    0x93
  412a19:	(bad)  
  412a1a:	dec    esp
  412a1b:	pushf  
  412a1c:	cwde   
  412a1d:	fdivr  st(3),st
  412a1f:	bound  ebx,QWORD PTR [edx]
  412a21:	adc    DWORD PTR [eax-0xa],eax
  412a24:	repz sbb edi,0xffffffef
  412a28:	push   es
  412a29:	push   ecx
  412a2a:	das    
  412a2b:	xchg   edi,eax
  412a2c:	cli    
  412a2d:	add    DWORD PTR [ebx+0x4f],edi
  412a30:	das    
  412a31:	adc    bl,al
  412a33:	mov    dh,0x19
  412a35:	xchg   edx,eax
  412a36:	mov    eax,0xb23b64e3
  412a3b:	jmp    0x3e87:0x63787261
  412a42:	mov    ah,0x8
  412a44:	xchg   ecx,eax
  412a45:	jo     0x4129d3
  412a47:	adc    edx,ebx
  412a49:	je     0x4129d2
  412a4b:	(bad)  
  412a4c:	sub    al,0x1d
  412a4e:	jne    0x412ace
  412a50:	mov    fs,WORD PTR [ebp*2+0x54c9046a]
  412a57:	std    
  412a58:	rcl    esi,1
  412a5a:	sub    al,0xe5
  412a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a5d:	out    dx,eax
  412a5e:	sub    eax,0x20884663
  412a63:	dec    esi
  412a64:	and    DWORD PTR [ebp-0x23755c8d],eax
  412a6a:	popf   
  412a6b:	iret   
  412a6c:	mov    esp,0x31fb8956
  412a71:	jnp    0x4129fc
  412a73:	adc    dl,BYTE PTR [edi]
  412a75:	cmc    
  412a76:	mov    ah,0xe2
  412a78:	inc    esp
  412a79:	lea    ebx,[ebp-0x13]
  412a7c:	pop    ecx
  412a7d:	xchg   esp,eax
  412a7e:	ss test eax,0x33a858ae
  412a84:	repz fcmovnbe st,st(7)
  412a87:	adc    eax,0x45e6b7ea
  412a8c:	cmp    eax,0xd5f2d0f0
  412a91:	jns    0x412ade
  412a93:	jne    0x412a56
  412a95:	or     esp,esi
  412a97:	inc    eax
  412a98:	xchg   edi,eax
  412a99:	pop    edx
  412a9a:	sahf   
  412a9b:	repz fisub WORD PTR [ecx-0x23]
  412a9f:	mov    ebp,0x42ec2227
  412aa4:	xor    esp,edi
  412aa6:	dec    ecx
  412aa7:	adc    BYTE PTR [edx-0x57],0xbb
  412aab:	inc    edx
  412aac:	add    esp,ebx
  412aae:	inc    ebx
  412aaf:	xor    al,bl
  412ab1:	cmp    al,0xe
  412ab3:	push   ss
  412ab4:	mov    ah,0xda
  412ab6:	int3   
  412ab7:	sub    eax,0x8369f7d1
  412abc:	jae    0x412b2e
  412abe:	cdq    
  412abf:	add    eax,0xeca88888
  412ac4:	or     ecx,ebx
  412ac6:	mov    ds:0xcefce1f8,al
  412acb:	pop    ecx
  412acc:	outs   dx,DWORD PTR ds:[esi]
  412acd:	adc    al,0x57
  412acf:	xchg   edx,eax
  412ad0:	cdq    
  412ad1:	lock syscall 
  412ad4:	cmp    DWORD PTR ds:0x83c35aaf,0x3111dc00
  412ade:	(bad)  
  412ae0:	jbe    0x412b57
  412ae2:	sbb    eax,DWORD PTR [ebx+edi*8+0x6ca1189b]
  412ae9:	(bad)  
  412aea:	push   cs
  412aeb:	push   edx
  412aec:	xlat   BYTE PTR ds:[ebx]
  412aed:	pop    ds
  412aee:	sbb    BYTE PTR [ebx],dl
  412af0:	mov    ss,WORD PTR [edx+0x402210dc]
  412af6:	mov    dl,0x58
  412af8:	loopne 0x412aa2
  412afa:	add    BYTE PTR [edx+0x34],bh
  412afd:	leave  
  412afe:	push   ecx
  412aff:	cld    
  412b00:	jns    0x412a86
  412b02:	xor    eax,0xf98896e8
  412b07:	stos   BYTE PTR es:[edi],al
  412b08:	fwait
  412b09:	imul   eax,DWORD PTR [eax+ecx*2-0x35b284c9],0x60e3e309
  412b14:	out    dx,al
  412b15:	mov    bl,0x38
  412b17:	pop    ebp
  412b18:	inc    ebp
  412b19:	clc    
  412b1a:	shl    BYTE PTR [esi+0x79],cl
  412b1d:	sub    eax,0xf82f3697
  412b22:	repnz mov ?,esp
  412b25:	cmp    eax,0x4d3e7061
  412b2a:	and    DWORD PTR [ecx+ecx*8+0x2b107f62],ebx
  412b31:	sbb    edx,esi
  412b33:	sub    eax,0x84ad24e0
  412b38:	add    ebx,DWORD PTR [ecx+eax*4]
  412b3b:	and    eax,0xcbc8d1eb
  412b40:	dec    ebx
  412b41:	xor    al,0xac
  412b43:	mov    WORD PTR [esi-0x73d74460],?
  412b49:	scas   eax,DWORD PTR es:[edi]
  412b4a:	(bad)  
  412b4b:	mov    esi,0xbf3aeea8
  412b50:	mov    ecx,0x9d5e1bad
  412b55:	or     DWORD PTR [edi],ebp
  412b57:	lock or BYTE PTR [ebp+0x74b5b3cb],0xce
  412b5f:	ret    
  412b60:	pop    ss
  412b61:	rcr    BYTE PTR [esi+0x51],cl
  412b64:	mov    dh,0xb7
  412b66:	pop    eax
  412b67:	dec    ebx
  412b68:	jb     0x412b71
  412b6a:	mov    al,0x68
  412b6c:	or     DWORD PTR [edi-0x1c],edi
  412b6f:	push   0x78
  412b71:	daa    
  412b72:	push   0xfffffff0
  412b74:	inc    eax
  412b75:	adc    ah,BYTE PTR [edi]
  412b77:	outs   dx,BYTE PTR ds:[esi]
  412b78:	adc    edi,edx
  412b7a:	loope  0x412b91
  412b7c:	jne    0x412b42
  412b7e:	push   edx
  412b7f:	mov    cl,0x65
  412b81:	call   0xff88e3a4
  412b86:	mov    edx,0xdc50c88e
  412b8b:	fld    QWORD PTR [edx]
  412b8d:	cld    
  412b8e:	je     0x412bbf
  412b90:	rcl    DWORD PTR [esi+0x2e37924b],1
  412b96:	mov    ebp,0x4767a8be
  412b9b:	jno    0x412bc8
  412b9d:	and    edx,0x9af50b51
  412ba3:	hlt    
  412ba4:	fwait
  412ba5:	xor    al,0xfc
  412ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba8:	jne    0x412bd0
  412baa:	ins    DWORD PTR es:[edi],dx
  412bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bac:	das    
  412bad:	sbb    BYTE PTR ds:0xb2c75ddc,0x5c
  412bb4:	in     eax,dx
  412bb5:	jl     0x412b5d
  412bb7:	adc    DWORD PTR [eax+ebx*8+0x3],edi
  412bbb:	push   eax
  412bbc:	data16 jne 0x412b85
  412bbf:	stc    
  412bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc2:	jge    0x412c23
  412bc4:	or     esp,DWORD PTR [edx-0x1de882]
  412bca:	cmp    al,0x28
  412bcc:	ins    DWORD PTR es:[edi],dx
  412bcd:	outs   dx,BYTE PTR ds:[esi]
  412bce:	loop   0x412bfc
  412bd0:	xchg   ebx,eax
  412bd1:	ds jmp 0x6ba9d424
  412bd7:	push   0xa
  412bd9:	mov    ch,0x8f
  412bdb:	test   eax,0x48b7598f
  412be0:	mov    ds:0x6efdbdd5,al
  412be5:	or     ebx,DWORD PTR [edi]
  412be7:	pop    esi
  412be8:	push   ss
  412be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bea:	pop    esp
  412beb:	push   ebp
  412bec:	adc    eax,0x50ef1ee8
  412bf1:	sbb    DWORD PTR [eax],0xd15d166e
  412bf7:	xchg   ecx,eax
  412bf8:	test   al,0x28
  412bfa:	jmp    0x412c03
  412bfc:	xchg   esi,eax
  412bfd:	hlt    
  412bfe:	in     al,dx
  412bff:	stos   BYTE PTR es:[edi],al
  412c00:	lahf   
  412c01:	scas   eax,DWORD PTR es:[edi]
  412c02:	rcl    DWORD PTR [ecx],1
  412c04:	popf   
  412c05:	sbb    esp,DWORD PTR [edx+0x6a32bf1b]
  412c0b:	sti    
  412c0c:	call   0x7435:0xc48508dc
  412c13:	addr16 jmp 0x67e68c2e
  412c19:	mov    cl,BYTE PTR [ebp+0x2c]
  412c1c:	cmp    al,0xc8
  412c1e:	mov    dl,0x34
  412c20:	fidiv  WORD PTR [ebp+0x7a]
  412c23:	jmp    0xc81508f8
  412c28:	cmp    BYTE PTR [edi+0x4a6bc6b5],bl
  412c2e:	mov    cl,dl
  412c30:	and    DWORD PTR [esi+0x6966258],eax
  412c36:	jp     0x412c7f
  412c38:	sbb    eax,0xa05ffea0
  412c3d:	stc    
  412c3e:	dec    ecx
  412c3f:	lea    edi,[edx+0x1e]
  412c42:	mov    ds:0x852d7e21,eax
  412c47:	jnp    0x412ca6
  412c49:	in     eax,0x93
  412c4b:	scas   eax,DWORD PTR es:[edi]
  412c4c:	inc    eax
  412c4d:	stos   DWORD PTR es:[edi],eax
  412c4e:	sub    al,0xbc
  412c50:	inc    edx
  412c51:	fistp  QWORD PTR [ebp+0x2c331248]
  412c57:	xchg   esp,eax
  412c58:	and    DWORD PTR [esi+0x10],ecx
  412c5b:	pop    ds
  412c5c:	push   es
  412c5d:	mov    ch,0x6a
  412c5f:	xor    BYTE PTR [edi],al
  412c61:	mov    dl,0x95
  412c63:	nop
  412c64:	das    
  412c65:	inc    esp
  412c66:	rol    bl,cl
  412c68:	les    ebx,FWORD PTR [edi+0x26]
  412c6b:	push   esp
  412c6c:	xor    ebp,ecx
  412c6e:	inc    ecx
  412c6f:	test   BYTE PTR ds:0x2d9b0d5e,dh
  412c76:	push   0x573ab07e
  412c7b:	push   ecx
  412c7c:	test   DWORD PTR [ecx+0x3cd4066b],0xa0f1d27d
  412c86:	shl    ah,cl
  412c88:	shl    cl,0x9
  412c8b:	adc    DWORD PTR [ebx+0x24],ecx
  412c8e:	mov    al,ds:0xf1342166
  412c93:	sbb    edi,DWORD PTR [esi+eiz*8]
  412c96:	imul   esp,DWORD PTR [eax+0x63],0xb799b900
  412c9d:	jp     0x412cae
  412c9f:	dec    ecx
  412ca0:	pushf  
  412ca1:	inc    esp
  412ca2:	test   eax,0x3b744d75
  412ca7:	xor    al,0x6c
  412ca9:	xchg   ebp,eax
  412caa:	jp     0x412d28
  412cac:	xor    dl,BYTE PTR [esi-0x4504b051]
  412cb2:	push   ebp
  412cb3:	jbe    0x412c66
  412cb5:	lahf   
  412cb6:	mov    ah,0x9e
  412cb8:	add    ebx,DWORD PTR [ecx]
  412cba:	rol    ebx,cl
  412cbc:	xor    DWORD PTR [ebx+0x4e7a4cfc],edi
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	enter  0x1ee7,0x11
  412cc7:	lods   al,BYTE PTR ds:[esi]
  412cc8:	mov    edi,0xa213b9b1
  412ccd:	(bad)  
  412ccf:	sub    BYTE PTR [ecx],0x90
  412cd2:	add    eax,0x9c6d6a8b
  412cd7:	fwait
  412cd8:	inc    esi
  412cd9:	popf   
  412cda:	jbe    0x412d22
  412cdc:	fwait
  412cdd:	out    dx,al
  412cde:	mov    eax,0x230fd6e5
  412ce3:	cmp    eax,0x59557f35
  412ce8:	add    eax,0xb3c385ed
  412ced:	sub    al,bl
  412cef:	push   edi
  412cf0:	push   ecx
  412cf1:	mov    cl,0x9
  412cf3:	cmp    esp,DWORD PTR [eax]
  412cf5:	sub    al,0xed
  412cf7:	cwde   
  412cf8:	in     al,0xbf
  412cfa:	call   0x491c:0x24538a9c
  412d01:	add    al,0xee
  412d03:	add    eax,0xc34481db
  412d08:	push   esi
  412d09:	cwde   
  412d0a:	loope  0x412ca6
  412d0c:	aad    0xed
  412d0e:	adc    BYTE PTR [edx+edx*1],0x79
  412d12:	shl    DWORD PTR [edx+ebx*1-0x580f51c],cl
  412d19:	jo     0x412d69
  412d1b:	lock mov cs,WORD PTR [ebp+0x7db4d1b7]
  412d22:	adc    eax,0x9292d000
  412d27:	retf   
  412d28:	mov    eax,ds:0x468247e1
  412d2d:	adc    al,0xcd
  412d2f:	xor    ecx,esp
  412d31:	sbb    BYTE PTR [esi],ch
  412d33:	jnp    0x412d2d
  412d35:	xchg   edi,edx
  412d37:	xchg   esp,eax
  412d38:	dec    esi
  412d39:	fwait
  412d3a:	jp     0x412d13
  412d3c:	es das 
  412d3e:	pop    eax
  412d3f:	fwait
  412d40:	cmp    dh,dh
  412d42:	or     cl,BYTE PTR ds:0xc10c960
  412d48:	sub    al,0x2e
  412d4a:	xchg   ecx,eax
  412d4b:	and    cl,al
  412d4d:	ret    
  412d4e:	dec    esi
  412d4f:	stos   DWORD PTR es:[edi],eax
  412d50:	stos   DWORD PTR es:[edi],eax
  412d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d52:	mov    ?,WORD PTR [ebp+0x51]
  412d55:	lahf   
  412d56:	into   
  412d57:	dec    ebx
  412d58:	neg    DWORD PTR ds:0x86e59511
  412d5e:	js     0x412cf5
  412d60:	mov    ds:0x3b73f21,eax
  412d65:	jae    0x412d21
  412d67:	(bad)  
  412d69:	ins    BYTE PTR es:[di],dx
  412d6b:	or     eax,0x4488b6b4
  412d70:	(bad)  
  412d71:	or     DWORD PTR [esi],ecx
  412d73:	adc    dh,dl
  412d75:	stos   BYTE PTR es:[edi],al
  412d76:	cmp    eax,0x4a80e1f6
  412d7b:	lds    ebx,FWORD PTR [edx]
  412d7d:	add    BYTE PTR [ebp+0x7084ab7e],bh
  412d83:	lods   ax,WORD PTR ds:[esi]
  412d85:	test   al,0x27
  412d87:	mov    ecx,0xbbc1845d
  412d8c:	inc    esi
  412d8d:	not    DWORD PTR [eax]
  412d8f:	or     DWORD PTR [esi+0x28c9042f],ebp
  412d95:	stos   DWORD PTR es:[edi],eax
  412d96:	femms  
  412d98:	xchg   esp,eax
  412d99:	or     DWORD PTR [eax+0x41],eax
  412d9c:	jae    0x412e14
  412d9e:	sar    BYTE PTR [edi-0x7c],cl
  412da1:	xchg   ecx,eax
  412da2:	mov    dh,0xeb
  412da4:	lea    edi,[ebx+0x674b3231]
  412daa:	fild   WORD PTR [eax]
  412dac:	ds add al,0xc4
  412daf:	xchg   ebp,eax
  412db0:	sub    BYTE PTR [edi],bh
  412db2:	push   esi
  412db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db4:	mov    dh,0xcf
  412db6:	pop    eax
  412db7:	data16 jo 0x412d5e
  412dba:	and    eax,0x4750cd65
  412dbf:	repz mov esi,0x2261e317
  412dc5:	cmp    DWORD PTR [esi-0x7316c6f7],esi
  412dcb:	out    0xff,eax
  412dcd:	mov    WORD PTR [edi-0x4a8302ec],gs
  412dd3:	lahf   
  412dd4:	pusha  
  412dd5:	cli    
  412dd6:	not    bl
  412dd8:	retf   0x894b
  412ddb:	mov    eax,ds:0x76cd1465
  412de0:	mov    bh,ch
  412de2:	fnsave [edi]
  412de4:	mul    BYTE PTR [edi+0x420595bf]
  412dea:	xchg   ebx,eax
  412deb:	push   0xffffffd1
  412ded:	fcmovbe st,st(6)
  412def:	inc    ebx
  412df0:	xlat   BYTE PTR ds:[ebx]
  412df1:	xor    al,0x30
  412df3:	sar    edx,cl
  412df5:	mov    esp,0x37faf08b
  412dfa:	inc    edi
  412dfb:	push   esi
  412dfc:	mov    bh,0x70
  412dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dff:	and    DWORD PTR [esi-0x3b],0x2f20994e
  412e06:	clc    
  412e07:	in     al,0xe0
  412e09:	sbb    bl,cl
  412e0b:	mov    BYTE PTR [esi-0x6f],cl
  412e0e:	rdtsc  
  412e10:	sbb    BYTE PTR [ecx-0x3d43c7b5],ch
  412e16:	nop
  412e17:	and    DWORD PTR [edi+0x65e594ff],0x1a394faa
  412e21:	je     0x412dc9
  412e23:	dec    eax
  412e24:	imul   esp,DWORD PTR [ecx+ebp*8-0x59bee682],0x6a
  412e2c:	and    al,0xc6
  412e2e:	xchg   esp,eax
  412e2f:	pushf  
  412e30:	cmp    BYTE PTR [ebx-0x5c],ch
  412e33:	cmc    
  412e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e35:	push   ebp
  412e36:	add    edi,DWORD PTR [ecx-0x6f]
  412e39:	sbb    BYTE PTR [esp+edi*1-0x16],bl
  412e3d:	push   ecx
  412e3e:	inc    edi
  412e3f:	ficom  WORD PTR [ebx+edx*2+0x2f813d30]
  412e46:	pop    edx
  412e47:	addr16 dec cl
  412e4a:	or     cl,al
  412e4c:	inc    edx
  412e4d:	add    BYTE PTR [edx+0x9],cl
  412e50:	jle    0x412e37
  412e52:	sti    
  412e53:	sbb    ebx,DWORD PTR [eax]
  412e55:	jp     0x412e4a
  412e57:	(bad)  
  412e58:	fmul   DWORD PTR [edi+0xbc389be]
  412e5e:	das    
  412e5f:	jb     0x412e06
  412e61:	sbb    al,0x19
  412e63:	lods   eax,DWORD PTR ds:[esi]
  412e64:	dec    esi
  412e65:	fcmovnbe st,st(1)
  412e67:	not    DWORD PTR [esp+edi*2+0x16]
  412e6b:	in     al,dx
  412e6c:	jns    0x412e04
  412e6e:	stc    
  412e6f:	int3   
  412e70:	and    al,0x62
  412e72:	dec    ebp
  412e73:	ficom  WORD PTR [ebp+0x2d438d1c]
  412e79:	and    bh,ah
  412e7b:	jbe    0x412e8f
  412e7d:	mov    ecx,0x91f757ef
  412e82:	or     eax,0xa05e14aa
  412e87:	mov    ds:0xeb606a9b,eax
  412e8c:	rol    DWORD PTR [ebp+0x70],0xed
  412e90:	retf   0x2bc4
  412e93:	push   cs
  412e94:	mov    gs:0x5c515d8,al
  412e9a:	or     DWORD PTR [ebx-0x23b59544],esi
  412ea0:	jo     0x412ec7
  412ea2:	mov    ebx,0x557cc61c
  412ea7:	loopne 0x412f23
  412ea9:	mov    ah,0x4b
  412eab:	xchg   edx,eax
  412eac:	xchg   edx,eax
  412ead:	push   0xffffffeb
  412eaf:	(bad)  
  412eb0:	sub    al,0xc7
  412eb2:	std    
  412eb3:	mov    ecx,0x58d7cff7
  412eb8:	inc    edx
  412eb9:	out    dx,eax
  412eba:	xrelease xchg DWORD PTR ds:0xbf372a76,esi
  412ec1:	dec    esp
  412ec2:	inc    ebp
  412ec3:	(bad)  [ecx-0x626ef0f4]
  412ec9:	xchg   ecx,eax
  412eca:	lock and bh,0x92
  412ece:	cli    
  412ecf:	push   ebx
  412ed0:	pop    eax
  412ed1:	enter  0xf529,0xdc
  412ed5:	adc    BYTE PTR [ecx+0x43e29328],0x66
  412edc:	xor    edx,DWORD PTR [eax+ecx*1-0x30fdbf22]
  412ee3:	pop    esp
  412ee4:	mul    DWORD PTR [ebp-0xf]
  412ee7:	ret    
  412ee8:	mov    ah,0xbb
  412eea:	aaa    
  412eeb:	sti    
  412eec:	sub    BYTE PTR [eax+0x58],0xaa
  412ef0:	xchg   esi,eax
  412ef1:	jno    0x412ece
  412ef3:	lods   al,BYTE PTR ds:[esi]
  412ef4:	gs es fmul st(3),st
  412ef8:	fstp   QWORD PTR [edx+0x4ff7ba4a]
  412efe:	ins    DWORD PTR es:[edi],dx
  412eff:	push   esp
  412f00:	jp     0x412e8f
  412f02:	or     bl,ch
  412f04:	jae    0x412e8c
  412f06:	and    DWORD PTR [edx+0x4c],ebx
  412f09:	rcl    BYTE PTR ds:0x7e8a3551,cl
  412f0f:	ins    BYTE PTR es:[edi],dx
  412f10:	jmp    0x59cf1f41
  412f15:	or     eax,0x7a44a617
  412f1a:	sbb    ebp,DWORD PTR [esi+0x4abe78ef]
  412f20:	nop
  412f21:	lods   al,BYTE PTR ds:[esi]
  412f22:	addr16 out dx,al
  412f24:	xor    al,0xe5
  412f26:	pop    ecx
  412f27:	out    0x41,al
  412f29:	push   esp
  412f2a:	dec    esp
  412f2b:	lods   eax,DWORD PTR ds:[esi]
  412f2c:	and    ebx,ebp
  412f2e:	jmp    0x412ed2
  412f30:	pop    edi
  412f31:	sahf   
  412f32:	xchg   ecx,eax
  412f33:	lock inc ebx
  412f35:	or     eax,0x66
  412f38:	div    BYTE PTR [edi-0x179c433a]
  412f3e:	cmp    al,0x65
  412f40:	push   eax
  412f41:	outs   dx,BYTE PTR ds:[esi]
  412f42:	repnz push 0xffffffa7
  412f45:	dec    ecx
  412f46:	mov    ch,0xec
  412f48:	out    0x63,eax
  412f4a:	cmc    
  412f4b:	jne    0x412f98
  412f4d:	or     BYTE PTR [edx+0x1e97cc64],bl
  412f53:	or     DWORD PTR [eax-0x4219cc78],ecx
  412f59:	data16 icebp 
  412f5b:	aas    
  412f5c:	pop    esp
  412f5d:	inc    ecx
  412f5e:	ja     0x412f75
  412f60:	out    dx,eax
  412f61:	push   ecx
  412f62:	dec    edx
  412f63:	sbb    edi,ebx
  412f65:	fmul   QWORD PTR [edx+ecx*1]
  412f68:	push   cs
  412f69:	and    bh,BYTE PTR [esi-0x7]
  412f6c:	mov    dl,0x86
  412f6e:	mov    bh,0x23
  412f70:	(bad)
  412f73:	or     al,0x3d
  412f75:	dec    esp
  412f76:	repz dec ebx
  412f78:	push   ecx
  412f79:	mov    esi,0x2b72f8aa
  412f7e:	xor    esp,DWORD PTR [edi-0x24]
  412f81:	outs   dx,BYTE PTR ds:[esi]
  412f82:	(bad)  
  412f83:	ds pop ecx
  412f85:	or     eax,DWORD PTR [edx]
  412f87:	jle    0x412fdc
  412f89:	test   eax,0xafe8259a
  412f8e:	mov    cl,0x28
  412f90:	mov    cs,WORD PTR [ebp+ecx*8-0x37b7a4e]
  412f97:	pop    es
  412f98:	inc    eax
  412f99:	cld    
  412f9a:	leave  
  412f9b:	jnp    0x412f1e
  412f9d:	sub    esi,ebx
  412f9f:	sti    
  412fa0:	ret    
  412fa1:	lods   eax,DWORD PTR ds:[esi]
  412fa2:	push   eax
  412fa3:	jnp    0x412ffe
  412fa5:	inc    eax
  412fa6:	ret    
  412fa7:	ret    0x3475
  412faa:	ror    DWORD PTR [edx+edi*4+0x73],0xd3
  412faf:	push   edx
  412fb0:	push   es
  412fb1:	clc    
  412fb2:	adc    eax,0xaf79d0f3
  412fb7:	fwait
  412fb8:	xchg   ebx,eax
  412fb9:	popf   
  412fba:	cmp    BYTE PTR [esp+edi*2],0x76
  412fbe:	pop    ecx
  412fbf:	push   edx
  412fc0:	jbe    0x412f6f
  412fc2:	enter  0x4783,0xfe
  412fc6:	clc    
  412fc7:	enter  0x6da2,0xe0
  412fcb:	out    dx,al
  412fcc:	addr16 int 0x8d
  412fcf:	and    DWORD PTR [ecx],esi
  412fd1:	das    
  412fd2:	fldcw  WORD PTR [ecx+0x560f5bf3]
  412fd8:	jmp    0x8fd1:0x4e4ef11a
  412fdf:	daa    
  412fe0:	mov    al,0x9e
  412fe2:	mov    dl,0xca
  412fe4:	mov    al,ds:0x6203b95d
  412fe9:	mov    ds:0xec78538c,eax
  412fee:	test   BYTE PTR [edi+edi*4],dl
  412ff1:	mov    ds:0x4cfb76cf,al
  412ff6:	(bad)  
  412ff7:	xor    dh,BYTE PTR [ecx+0x16]
  412ffa:	nop
  412ffb:	loopne 0x41300c
  412ffd:	outs   dx,DWORD PTR ds:[esi]
  412ffe:	push   0xffffff8e
  413000:	mov    es,WORD PTR [ecx+0x68]
  413003:	xchg   ebp,eax
  413004:	mul    al
  413006:	arpl   di,di
  413008:	mov    eax,0xeb4a49e0
  41300d:	clc    
  41300e:	ds mov esp,ebx
  413011:	test   DWORD PTR [eax-0x510c42e4],0x9800fcb5
  41301b:	ja     0x412fce
  41301d:	xchg   ebp,eax
  41301e:	jb     0x41301c
  413020:	arpl   WORD PTR [edx+eax*8+0x2f],dx
  413024:	idiv   DWORD PTR [esi-0x8f4a614]
  41302a:	lds    ebp,FWORD PTR [ecx-0x3b]
  41302d:	xor    bl,BYTE PTR [eax-0x73]
  413030:	out    dx,eax
  413031:	js     0x412ff7
  413033:	data16 jns 0x41309c
  413036:	xlat   BYTE PTR ds:[ebx]
  413037:	pop    esp
  413038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413039:	dec    ecx
  41303a:	jle    0x4130b8
  41303c:	adc    DWORD PTR [edi],edi
  41303e:	pop    esi
  41303f:	mov    dl,0xed
  413041:	ins    BYTE PTR es:[edi],dx
  413042:	jmp    0x412fc5
  413044:	outs   dx,BYTE PTR ds:[esi]
  413045:	xchg   ecx,eax
  413046:	(bad)  
  413047:	adc    BYTE PTR [ebp+0x13c1d6ed],dl
  41304d:	xchg   DWORD PTR ss:[edi],edx
  413050:	pop    esi
  413051:	cmp    eax,0x325cdc41
  413056:	jae    0x412ff8
  413058:	jmp    FWORD PTR [esi+0x75]
  41305b:	push   eax
  41305c:	daa    
  41305d:	xor    ecx,DWORD PTR [ecx+0x71224444]
  413063:	inc    ecx
  413064:	lods   al,BYTE PTR ds:[esi]
  413065:	sti    
  413066:	jl     0x413007
  413068:	xor    esp,DWORD PTR [edi]
  41306a:	loope  0x41309a
  41306c:	jmp    0xa137:0xaa4df2f3
  413073:	pushf  
  413074:	lods   eax,DWORD PTR ds:[esi]
  413076:	stos   BYTE PTR es:[edi],al
  413077:	inc    ecx
  413078:	push   edx
  413079:	stos   DWORD PTR es:[edi],eax
  41307a:	mov    ah,0x4d
  41307c:	shr    DWORD PTR [ebp-0x2d],cl
  41307f:	mov    eax,0x1818e388
  413084:	jge    0x4130df
  413086:	push   ss
  413087:	jns    0x41302d
  413089:	ins    BYTE PTR es:[edi],dx
  41308a:	add    eax,0x6817579d
  41308f:	or     DWORD PTR [ebx],esi
  413091:	adc    eax,0x56f58fe5
  413096:	pop    esi
  413097:	sub    cl,BYTE PTR [edx+0x3d6ce1a4]
  41309d:	rol    bh,cl
  41309f:	push   ebp
  4130a0:	ss ret 0xf23e
  4130a4:	popf   
  4130a5:	js     0x4130c6
  4130a7:	lahf   
  4130a8:	addr16 mov ebp,0xa923cfbc
  4130ae:	adc    ebp,esp
  4130b0:	cmp    esi,edx
  4130b2:	mov    ds:0xad9b078a,al
  4130b7:	push   esi
  4130b8:	and    al,dh
  4130ba:	leave  
  4130bb:	mov    ch,0x5d
  4130bd:	dec    edx
  4130be:	push   esi
  4130bf:	nop
  4130c0:	mov    al,0x65
  4130c2:	leave  
  4130c3:	jmp    0x4fbde1ba
  4130c8:	xchg   esi,eax
  4130c9:	sub    esi,DWORD PTR [esi]
  4130cb:	imul   edx,DWORD PTR [edx+0x201b24be],0xcf588a95
  4130d5:	pop    edx
  4130d6:	pusha  
  4130d7:	inc    esp
  4130d8:	std    
  4130d9:	jnp    0x4130fc
  4130db:	cdq    
  4130dc:	inc    eax
  4130dd:	jge    0x413099
  4130df:	int3   
  4130e0:	aas    
  4130e1:	jnp    0x4130d7
  4130e3:	ficom  DWORD PTR [ebx-0x72]
  4130e6:	fs enter 0xf4b6,0x3f
  4130eb:	add    dl,BYTE PTR [ecx+ecx*4-0x23]
  4130ef:	jmp    0x8c3a:0xa3deea53
  4130f6:	jg     0x41313c
  4130f8:	mov    WORD PTR [edi+0x25215849],es
  4130fe:	jmp    0xd2cf:0xc5a5c87b
  413105:	fdiv   DWORD PTR [ecx+edx*4-0x23]
  413109:	repz mov edi,0x3415992d
  41310f:	jnp    0x4130d9
  413111:	(bad)  
  413112:	mov    ds:0xcc6b7c58,al
  413117:	lea    esi,[ebp-0x656b4f3e]
  41311d:	jge    0x413197
  41311f:	jmp    0xb0984fa1
  413124:	jae    0x413159
  413126:	aam    0x3f
  413128:	icebp  
  413129:	(bad)  
  41312a:	push   ds
  41312b:	(bad)  [esi+0x47108e1]
  413131:	jo     0x41319d
  413133:	and    eax,0x5effd670
  413138:	sahf   
  413139:	call   0xe07147be
  41313e:	xor    bl,BYTE PTR [edi-0x9]
  413141:	mov    edx,0x3d2927ac
  413146:	jne    0x413155
  413148:	pop    ss
  413149:	cmp    BYTE PTR [ecx-0x10f5dbff],bl
  41314f:	xor    DWORD PTR [ebx-0x69053ffe],0x2736c47e
  413159:	jo     0x413199
  41315b:	sbb    eax,0xe685865c
  413160:	in     al,0xe7
  413162:	ret    0xfb93
  413165:	js     0x413143
  413167:	cld    
  413168:	inc    edx
  413169:	cmp    dl,BYTE PTR [esi]
  41316b:	xchg   ebx,eax
  41316c:	mov    al,ds:0x7199b1e
  413171:	retf   0xc5b
  413174:	call   0x82c7:0xc7a8252a
  41317b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41317c:	jnp    0x41312c
  41317e:	fcom   QWORD PTR [eax]
  413180:	shl    BYTE PTR [ebp-0x6da2d5b6],0xfc
  413187:	pushf  
  413188:	adc    ecx,edi
  41318a:	fimul  DWORD PTR [ebx]
  41318c:	xor    DWORD PTR [eax],esp
  41318e:	outs   dx,BYTE PTR ds:[esi]
  41318f:	sub    esi,DWORD PTR [esi]
  413191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413192:	xor    al,0x39
  413194:	cmp    al,0x28
  413196:	stc    
  413197:	outs   dx,BYTE PTR ds:[esi]
  413198:	leave  
  413199:	jp     0x4131db
  41319b:	outs   dx,BYTE PTR fs:[esi]
  41319d:	adc    eax,0x333963f7
  4131a2:	mov    eax,0xfa4dcf4c
  4131a7:	aam    0xc9
  4131a9:	sahf   
  4131aa:	jb     0x4131fb
  4131ac:	inc    eax
  4131ad:	dec    esp
  4131ae:	xor    dh,BYTE PTR [edi+0x3]
  4131b1:	shl    DWORD PTR [ecx-0xf],0x2a
  4131b5:	out    dx,eax
  4131b6:	dec    esi
  4131b7:	push   ds
  4131b8:	xor    al,0x86
  4131ba:	cmp    DWORD PTR [ecx],edi
  4131bc:	jne    0x413168
  4131be:	mov    esp,0xf8fa56c6
  4131c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131c4:	push   ecx
  4131c5:	sti    
  4131c6:	sbb    BYTE PTR [edx-0x2a],al
  4131c9:	int    0xaf
  4131cb:	dec    esi
  4131cc:	and    bh,bl
  4131ce:	or     BYTE PTR [edi],0x55
  4131d1:	mov    ds:0xdb835040,eax
  4131d6:	es jb  0x413181
  4131d9:	xchg   ecx,eax
  4131da:	xchg   dh,al
  4131dc:	xor    DWORD PTR [ecx],eax
  4131de:	mov    ebp,0x2620602b
  4131e3:	pop    esi
  4131e4:	arpl   dx,si
  4131e6:	or     dh,al
  4131e8:	outs   dx,BYTE PTR ds:[esi]
  4131e9:	arpl   WORD PTR [esi],bx
  4131eb:	nop
  4131ec:	xchg   ebp,eax
  4131ed:	sbb    al,0x2e
  4131ef:	jmp    0xf9f0:0xd3320554
  4131f6:	mov    WORD PTR [eax-0x6c],cs
  4131f9:	arpl   bp,cx
  4131fb:	les    edi,FWORD PTR [edi+esi*1-0x347c160e]
  413202:	push   ecx
  413203:	pop    esp
  413204:	sub    eax,0x96be50dc
  413209:	pop    eax
  41320a:	lods   al,BYTE PTR ds:[esi]
  41320b:	bnd fs jbe 0x41320c
  41320f:	std    
  413210:	retf   0x54f7
  413213:	push   0xfffffff8
  413215:	addr16 aam 0x21
  413218:	outs   dx,DWORD PTR ds:[esi]
  413219:	xchg   ecx,eax
  41321a:	sbb    DWORD PTR [ebx-0x6b],eax
  41321d:	and    eax,0x6485c94b
  413222:	push   edi
  413223:	lods   eax,DWORD PTR ds:[esi]
  413224:	inc    ebp
  413225:	sti    
  413226:	mov    ah,0xf9
  413228:	jl     0x4131d4
  41322a:	mov    al,ds:0xc8585318
  41322f:	mov    dh,0x8c
  413231:	pop    ecx
  413232:	inc    esi
  413233:	fwait
  413234:	call   esi
  413236:	nop
  413237:	pop    ss
  413238:	sbb    DWORD PTR es:[edi],edi
  41323b:	cmp    bl,BYTE PTR [eax-0x4a]
  41323e:	out    0x66,eax
  413240:	aam    0x6e
  413242:	mov    al,ds:0x2089e5bc
  413247:	cwde   
  413248:	mov    bh,0xbd
  41324a:	mov    dh,0xeb
  41324c:	pop    ecx
  41324d:	jbe    0x413286
  41324f:	hlt    
  413250:	(bad)  
  413251:	shl    DWORD PTR [ebx+0x75],1
  413254:	jmp    0xe95d:0x59ccc03a
  41325b:	dec    eax
  41325c:	cld    
  41325d:	mov    esp,0x6afb0895
  413262:	mov    bl,BYTE PTR [eax-0x1f]
  413265:	add    DWORD PTR [esi-0x24],0x96fd8b91
  41326c:	mov    cl,BYTE PTR [ebx-0x6e]
  41326f:	dec    edi
  413270:	ja     0x41322a
  413272:	std    
  413273:	fs jbe 0x41320f
  413276:	repnz fild DWORD PTR [eax+0x77487550]
  41327d:	sbb    DWORD PTR [edx+0x24f68de1],esp
  413283:	add    BYTE PTR [ebx],0xe8
  413286:	call   0x97e80788
  41328b:	outs   dx,BYTE PTR ds:[esi]
  41328c:	es inc ebx
  41328e:	call   0x7acc3d20
  413293:	or     BYTE PTR [ebx+0x2f5e708c],bl
  413299:	sub    DWORD PTR [ebp+0x19e16510],0x8d5d2ba1
  4132a3:	mov    ah,al
  4132a5:	pop    ebp
  4132a6:	sub    al,0x8e
  4132a8:	lea    ebp,ds:0xb44ac1b7
  4132ae:	or     DWORD PTR [ebp-0x1044dab9],ebp
  4132b4:	inc    esi
  4132b5:	arpl   WORD PTR [edi-0x6e8abcf4],ax
  4132bb:	xchg   edi,eax
  4132bc:	cmc    
  4132bd:	lods   al,BYTE PTR ds:[esi]
  4132be:	mov    bl,BYTE PTR [ebp+0x346bf16f]
  4132c4:	sub    BYTE PTR [eax],bh
  4132c6:	icebp  
  4132c7:	ds aad 0xf5
  4132ca:	shl    edi,0x8
  4132cd:	xacquire xchg BYTE PTR [bp+0x1e],dh
  4132d2:	data16 aad 0x4e
  4132d5:	hlt    
  4132d6:	sbb    al,0x2f
  4132d8:	arpl   WORD PTR [edx],sp
  4132da:	jmp    0x6d0c4fcb
  4132df:	push   0x3
  4132e1:	pop    esp
  4132e2:	xor    cl,al
  4132e4:	stos   DWORD PTR es:[edi],eax
  4132e5:	cmp    BYTE PTR [esi],0x16
  4132e8:	mov    ds:0x8b23dee2,al
  4132ed:	or     BYTE PTR [eax+0x5ee444e1],dl
  4132f3:	sub    BYTE PTR [edi],0xc
  4132f6:	shl    BYTE PTR [edx-0x7a2ce980],1
  4132fc:	xchg   ebp,eax
  4132fd:	add    eax,0xfee39036
  413302:	shl    bh,cl
  413304:	scas   al,BYTE PTR es:[edi]
  413305:	inc    edx
  413306:	aad    0x8e
  413308:	and    DWORD PTR [ecx],0x2
  41330b:	les    edi,FWORD PTR ds:0x37734dc4
  413311:	retf   
  413312:	dec    edi
  413313:	xchg   edx,eax
  413314:	ret    0x60d5
  413317:	add    eax,0xb6de32a4
  41331c:	xchg   esp,eax
  41331d:	or     BYTE PTR [ecx-0x3acd640e],0x12
  413324:	pop    edi
  413325:	xor    eax,DWORD PTR [edx]
  413327:	mov    cl,0x5a
  413329:	scas   eax,DWORD PTR es:[edi]
  41332a:	adc    eax,0x1a850bd7
  41332f:	and    BYTE PTR [ecx+ecx*1],cl
  413332:	xchg   edi,eax
  413333:	lods   eax,DWORD PTR ds:[esi]
  413334:	push   ebp
  413335:	xor    BYTE PTR [ecx-0x2464586e],dl
  41333b:	xor    al,0x3
  41333d:	in     eax,dx
  41333e:	fld    DWORD PTR [eax+eiz*2-0x67f77386]
  413345:	cmp    al,0xa6
  413347:	add    al,0xc9
  413349:	add    cl,BYTE PTR [ecx+0x7fce57e4]
  41334f:	jp     0x41334c
  413351:	repz add BYTE PTR [eax],al
  413354:	pop    edi
  413355:	push   0x31
  413357:	(bad)  
  413358:	gs pop ds
  41335a:	xchg   dl,dh
  41335c:	retf   
  41335d:	mov    ds:0xe2d56e1c,al
  413362:	mov    bh,0xf2
  413364:	pusha  
  413365:	inc    ebx
  413366:	test   DWORD PTR [edi-0x75],ebp
  413369:	cmp    eax,0xb6afb62f
  41336e:	adc    eax,0x18f2aa5e
  413373:	inc    ebp
  413374:	or     eax,0xa5549026
  413379:	(bad)  [edi]
  41337b:	or     BYTE PTR [edi+0x2a],dh
  41337e:	add    DWORD PTR [esp+ecx*2-0x5f],ebx
  413382:	cwde   
  413383:	push   ebx
  413384:	(bad)  
  413385:	clc    
  413386:	cld    
  413387:	test   al,0xd3
  413389:	mov    DWORD PTR gs:[esi-0x48],edx
  41338d:	shr    dl,0x77
  413390:	arpl   bx,bx
  413392:	retf   0xf8ba
  413395:	jbe    0x4133a1
  413397:	jg     0x413328
  413399:	cli    
  41339a:	jmp    0xeef854dd
  41339f:	pusha  
  4133a0:	jecxz  0x413365
  4133a2:	push   ecx
  4133a3:	sbb    cl,dh
  4133a5:	lods   eax,DWORD PTR ds:[esi]
  4133a6:	(bad)  
  4133a7:	(bad)  
  4133a8:	call   0xca305018
  4133ad:	loopne 0x41341e
  4133af:	xchg   edi,eax
  4133b0:	clc    
  4133b1:	repnz std 
  4133b3:	xor    al,ah
  4133b5:	scas   al,BYTE PTR es:[edi]
  4133b6:	repz jnp 0x413340
  4133b9:	jne    0x4133a2
  4133bb:	fnstsw WORD PTR [eax]
  4133bd:	sbb    al,0xbb
  4133bf:	xor    eax,0x645b5210
  4133c4:	fdivr  QWORD PTR [edi+ecx*2-0x6569747a]
  4133cb:	adc    DWORD PTR [edi],esp
  4133cd:	dec    edx
  4133ce:	jl     0x413370
  4133d0:	mov    bh,0x53
  4133d2:	push   ecx
  4133d3:	std    
  4133d4:	les    esi,FWORD PTR [ebx-0x13]
  4133d7:	icebp  
  4133d8:	(bad)  [esi-0x126a8b0f]
  4133de:	fsub   DWORD PTR [ecx-0x340bc94e]
  4133e4:	outs   dx,BYTE PTR ds:[esi]
  4133e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e6:	sar    DWORD PTR [edi-0x62],1
  4133e9:	pop    eax
  4133ea:	dec    edi
  4133eb:	fild   QWORD PTR [edi-0x19306cf9]
  4133f1:	or     al,0xc8
  4133f3:	test   al,0xd8
  4133f5:	das    
  4133f6:	sbb    DWORD PTR [edi],edi
  4133f8:	xchg   BYTE PTR ds:0x2e638100,al
  4133fe:	xor    eax,ebp
  413400:	mov    edx,0x44ba5774
  413405:	ror    edx,0x30
  413408:	xchg   ebp,eax
  413409:	(bad)  
  41340a:	jno    0x4133b0
  41340c:	das    
  41340d:	xchg   edx,eax
  41340e:	sub    eax,0xb452f417
  413413:	and    ch,BYTE PTR [esi-0x39]
  413416:	add    ebx,DWORD PTR [edi]
  413418:	shl    DWORD PTR [eax-0x19],1
  41341b:	dec    ebx
  41341c:	call   0xd1e10ff7
  413421:	sbb    ebp,ebx
  413423:	adc    ah,cl
  413425:	mov    al,ds:0xf38ee28b
  41342a:	jb     0x413407
  41342c:	inc    esi
  41342d:	jecxz  0x413494
  41342f:	(bad)  
  413430:	jae    0x413449
  413432:	pop    esi
  413433:	dec    eax
  413434:	imul   ebp,DWORD PTR [ecx-0xe],0xffffff98
  413438:	adc    esi,eax
  41343a:	hlt    
  41343b:	fld    TBYTE PTR [ecx-0x6d7e86b]
  413441:	pop    ecx
  413442:	retf   
  413443:	push   esi
  413444:	pop    edx
  413445:	add    BYTE PTR [ecx-0x3ad21e9e],bh
  41344b:	inc    eax
  41344c:	and    DWORD PTR [esi+0x40],esp
  41344f:	in     eax,0x8f
  413451:	pop    es
  413452:	push   ecx
  413453:	add    bh,BYTE PTR [esi]
  413455:	dec    edi
  413456:	shl    DWORD PTR [ebx],cl
  413458:	mov    ecx,0x9539cf26
  41345d:	sbb    al,0x3d
  41345f:	inc    eax
  413460:	es ja  0x413446
  413463:	out    0xc2,eax
  413465:	xchg   ebp,eax
  413466:	fst    QWORD PTR [eax]
  413468:	dec    esi
  413469:	lds    esi,FWORD PTR [edx]
  41346b:	test   eax,0xc8a26150
  413470:	arpl   WORD PTR [edi+eiz*4-0x36f183c7],bp
  413477:	mov    ebp,0xea3ed62a
  41347c:	outs   dx,DWORD PTR ds:[esi]
  41347d:	xchg   edx,eax
  41347e:	push   edx
  41347f:	jp     0x413439
  413481:	xor    ebp,DWORD PTR [ebx-0x2ea350f2]
  413487:	imul   edi,DWORD PTR [edi-0x465490ab],0xffffffdd
  41348e:	in     eax,dx
  41348f:	ja     0x41347f
  413491:	iret   
  413492:	mov    eax,ds
  413494:	pop    esi
  413495:	and    esi,DWORD PTR [edi-0x3b]
  413498:	push   esp
  413499:	mov    esi,0xd0bbc531
  41349e:	push   ecx
  41349f:	mov    edi,0x4657d610
  4134a4:	push   0x8dcdf338
  4134a9:	mov    eax,ds:0x7889f46b
  4134ae:	mov    ds:0x4c6d0fe0,eax
  4134b3:	pop    es
  4134b4:	aad    0x21
  4134b6:	mov    edx,0x7899b13f
  4134bb:	imul   ebx,DWORD PTR cs:[ebx],0x78d6d3fd
  4134c2:	push   esi
  4134c3:	push   ebx
  4134c4:	pop    es
  4134c5:	jmp    0x84d15bde
  4134ca:	sub    BYTE PTR ds:0x4d616184,bl
  4134d0:	inc    ebx
  4134d1:	out    0x8e,eax
  4134d3:	loope  0x413549
  4134d5:	daa    
  4134d6:	mov    DWORD PTR [eax+0x4],eax
  4134d9:	xchg   esp,eax
  4134da:	ret    0xcacc
  4134dd:	mov    bl,0xd6
  4134df:	xchg   edi,eax
  4134e0:	lods   al,BYTE PTR ds:[esi]
  4134e1:	enter  0x84e,0x19
  4134e5:	(bad)  
  4134e7:	pop    ecx
  4134e8:	push   cs
  4134e9:	icebp  
  4134ea:	push   ecx
  4134eb:	xor    edi,DWORD PTR [ebp-0xfe2a087]
  4134f1:	mov    ebp,0x61401d90
  4134f6:	pop    ss
  4134f7:	mov    esp,0xe5a35d4a
  4134fc:	dec    ebx
  4134fd:	aad    0x82
  4134ff:	mov    bl,0x9e
  413501:	outs   dx,BYTE PTR ds:[esi]
  413502:	push   edi
  413503:	fwait
  413504:	xchg   esp,eax
  413505:	scas   al,BYTE PTR es:[edi]
  413506:	mov    eax,ds:0x149ef910
  41350b:	popa   
  41350c:	xchg   esi,eax
  41350d:	ret    0xa9dd
  413510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413511:	daa    
  413512:	jae    0x41349b
  413514:	dec    esi
  413515:	cdq    
  413516:	sub    eax,0x283a4672
  41351b:	je     0x413584
  41351d:	add    DWORD PTR ds:0xd9ea2a40,ebx
  413523:	js     0x4134e4
  413525:	loope  0x413576
  413527:	mov    edx,0x5de38ccc
  41352c:	arpl   WORD PTR [ebp-0x336745cc],dx
  413532:	adc    eax,edx
  413534:	push   ds
  413535:	mov    ebp,0xfb0f909d
  41353a:	xor    eax,0x42e0d188
  41353f:	and    DWORD PTR [edx+eax*8],esp
  413542:	pop    esp
  413543:	sub    ecx,edi
  413545:	(bad)  
  413547:	mov    bh,0xad
  413549:	pop    ebx
  41354a:	cs int3 
  41354c:	stc    
  41354d:	out    0x11,al
  41354f:	push   edx
  413550:	rol    DWORD PTR [ebx+ecx*8],1
  413553:	aam    0x81
  413555:	cld    
  413556:	push   esp
  413557:	sti    
  413558:	popa   
  413559:	and    eax,DWORD PTR ds:0xd2ac8c1d
  41355f:	hlt    
  413560:	push   ebp
  413561:	retf   0x6909
  413564:	dec    edi
  413565:	fdivr  st,st(7)
  413567:	sbb    esi,DWORD PTR [esi]
  413569:	in     al,dx
  41356a:	and    eax,0x632d34b0
  41356f:	gs ret 
  413571:	into   
  413572:	rcr    DWORD PTR [edi+ecx*4+0x61aa6f72],cl
  413579:	jb     0x41354e
  41357b:	mov    bh,0x4a
  41357d:	repnz fmul QWORD PTR [esi+0xa]
  413581:	pop    ecx
  413582:	lea    ebp,[eax+0x62]
  413585:	(bad)  
  413586:	mov    ds:0x12c66421,eax
  41358b:	mov    eax,ds:0x87a7bdf2
  413590:	jo     0x41353b
  413592:	nop
  413593:	idiv   DWORD PTR [ebx]
  413595:	popf   
  413596:	sbb    ebx,DWORD PTR [esi]
  413598:	addr16 lock inc eax
  41359b:	(bad)  
  41359c:	jg     0x413555
  41359e:	jns    0x4135e0
  4135a0:	add    DWORD PTR [esi+0x6ee3a662],edx
  4135a6:	nop
  4135a7:	int3   
  4135a8:	iret   
  4135a9:	xchg   ecx,ebp
  4135ab:	nop
  4135ac:	xor    al,BYTE PTR [ebx+edi*4+0x74]
  4135b0:	cmp    BYTE PTR [ebx-0x29108159],bl
  4135b6:	mov    dl,0x24
  4135b8:	xchg   DWORD PTR [esi],eax
  4135ba:	dec    ebp
  4135bb:	popa   
  4135bc:	xor    al,0xc2
  4135be:	scas   al,BYTE PTR es:[edi]
  4135bf:	mov    ?,WORD PTR [esi+0x12]
  4135c2:	rcl    edi,1
  4135c4:	cmp    eax,0xc2506c87
  4135c9:	int    0xf8
  4135cb:	pusha  
  4135cc:	call   0x49f0:0xabb78a33
  4135d3:	dec    edx
  4135d4:	jb     0x413601
  4135d6:	data16 fnclex 
  4135d9:	sahf   
  4135da:	or     BYTE PTR [eax+eax*8-0x15],0x55
  4135df:	ins    DWORD PTR es:[edi],dx
  4135e0:	mov    ds:0xd9989407,al
  4135e5:	pop    ebp
  4135e6:	xchg   edx,eax
  4135e7:	mov    esi,es
  4135e9:	sub    ebx,DWORD PTR [edx+ecx*1+0x5396a498]
  4135f0:	lods   eax,DWORD PTR ds:[esi]
  4135f1:	jl     0x413626
  4135f3:	sub    eax,0xbe6561dd
  4135f8:	iret   
  4135f9:	cmp    esp,ebp
  4135fb:	jmp    0x413645
  4135fd:	mov    eax,ds:0xa26a6d6
  413602:	(bad)  
  413604:	push   eax
  413605:	mov    ebx,0x7b3f59de
  41360a:	mov    ah,0x41
  41360c:	aaa    
  41360d:	(bad)  
  41360e:	call   0x2e41:0xaa86addc
  413615:	jmp    0x92ebe6f2
  41361a:	push   edi
  41361b:	mov    esp,0xc0a95031
  413620:	lds    esp,FWORD PTR [ebx]
  413622:	push   es
  413623:	sahf   
  413624:	or     bl,ah
  413626:	test   eax,0x15989270
  41362b:	imul   DWORD PTR [edi+edx*4]
  41362e:	cwde   
  41362f:	daa    
  413630:	adc    ebx,ebx
  413632:	and    al,0x93
  413634:	repz and al,BYTE PTR ds:0x556c4364
  41363b:	addr16 out dx,eax
  41363d:	jbe    0x41364c
  41363f:	fist   DWORD PTR [edx-0x6c]
  413642:	jns    0x413662
  413644:	sub    BYTE PTR [eax+ebp*2],cl
  413647:	repz sahf 
  413649:	arpl   WORD PTR [eax+0x20],si
  41364c:	loop   0x413692
  41364e:	push   ecx
  41364f:	xor    ebp,ebx
  413651:	addr16 retf 
  413653:	stos   DWORD PTR es:[edi],eax
  413654:	mov    eax,0x1e87baa3
  413659:	mov    edx,0x146b2dfd
  41365e:	cs stos BYTE PTR es:[edi],al
  413660:	dec    eax
  413661:	(bad)  
  413663:	push   edi
  413664:	cmp    eax,0x30b706f0
  413669:	lods   al,BYTE PTR ds:[esi]
  41366a:	leave  
  41366b:	mov    ds:0xdfe0c69f,al
  413670:	lds    edx,FWORD PTR ss:[esi-0x20f73bde]
  413677:	(bad)  
  413678:	(bad)  
  413679:	loopne 0x4136d3
  41367b:	std    
  41367c:	xchg   BYTE PTR [edx+0x15],cl
  41367f:	pop    edi
  413680:	fdivr  QWORD PTR [ecx+0x50fd229e]
  413686:	mov    bh,0x2e
  413688:	xor    al,0xb
  41368a:	dec    edx
  41368b:	test   al,0xf9
  41368d:	mov    bh,0x6b
  41368f:	push   esi
  413690:	or     eax,0xa04d4234
  413695:	add    ecx,DWORD PTR [edx+0x7f]
  413698:	pop    ds
  413699:	mov    ah,0x8
  41369b:	pop    edx
  41369c:	lods   al,BYTE PTR ds:[esi]
  41369d:	jb     0x4136a7
  41369f:	mov    ds:0x6e320f57,eax
  4136a4:	dec    edi
  4136a5:	mov    ebx,0xf9c572c5
  4136aa:	cwde   
  4136ab:	mov    bl,0x9
  4136ad:	fldcw  WORD PTR [eax+0x7c1fbea9]
  4136b3:	stc    
  4136b4:	xchg   edx,eax
  4136b5:	jb     0x413672
  4136b7:	mov    ebx,0x3b7466cb
  4136bc:	sub    DWORD PTR [edx],0xb3ac8635
  4136c2:	lock mov ds:0x51028435,eax
  4136c8:	daa    
  4136c9:	and    eax,0x9a59138b
  4136ce:	dec    ecx
  4136cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136d0:	popa   
  4136d1:	or     DWORD PTR ds:0xa39b743c,esp
  4136d7:	rcl    bl,0x92
  4136da:	cmp    eax,0x9fcc401e
  4136df:	inc    eax
  4136e0:	into   
  4136e1:	fnstsw WORD PTR [ebx+0x7029b01b]
  4136e7:	xchg   edx,eax
  4136e8:	jle    0x9fd4b04b
  4136ee:	inc    edx
  4136ef:	mov    bh,0x6d
  4136f1:	push   esi
  4136f2:	sbb    bh,BYTE PTR [eax-0x1fa92623]
  4136f8:	sti    
  4136f9:	lea    ebx,[esi+0x656a88b2]
  4136ff:	cmp    BYTE PTR [ecx-0x71eb890a],dh
  413705:	sti    
  413706:	cld    
  413707:	mov    cl,0xf4
  413709:	pop    edx
  41370a:	xchg   esp,eax
  41370b:	and    BYTE PTR [esi+0x7727c8b],0x32
  413712:	fistp  WORD PTR [esi+ebx*2]
  413715:	mov    ah,BYTE PTR [edi+0x6d8e68de]
  41371b:	jp     0x41372d
  41371d:	jmp    0x413783
  41371f:	cwde   
  413720:	jle    0x41373a
  413722:	adc    bh,bh
  413724:	jmp    0xc4b7:0x336b50d1
  41372b:	loopne 0x4136cc
  41372d:	fisttp QWORD PTR [edi-0x4f]
  413730:	or     eax,0x5fecde62
  413735:	xor    dl,BYTE PTR [ebp-0x3b]
  413738:	dec    esi
  413739:	sub    ebp,DWORD PTR [edi+ecx*8+0x3c]
  41373d:	push   cs
  41373e:	lods   eax,DWORD PTR ds:[esi]
  41373f:	sbb    eax,0x932faa32
  413744:	jne    0x413759
  413746:	repnz push eax
  413748:	lock and cl,BYTE PTR [esi]
  41374b:	fstp   DWORD PTR [edi]
  41374d:	push   ebx
  41374e:	cli    
  41374f:	sbb    BYTE PTR [eax+ebp*2-0x7ed583c4],dl
  413756:	arpl   cx,ax
  413758:	mov    eax,ds:0xcf99a87c
  41375d:	mov    ds:0x3cf6c269,eax
  413762:	pop    esp
  413763:	retf   0x1b01
  413766:	call   0xd9f0:0x40d951e3
  41376d:	mov    al,BYTE PTR [eax-0x49]
  413770:	test   al,0x9c
  413772:	bts    DWORD PTR [ecx],esi
  413775:	pusha  
  413776:	mov    edi,0xf1b48d7d
  41377b:	jge    0x4137a0
  41377d:	fs jno 0x413749
  413780:	leave  
  413781:	stc    
  413782:	cwde   
  413783:	push   0x69
  413785:	jae    0x41378f
  413787:	mov    ch,0x2a
  413789:	test   DWORD PTR [edi+eax*4-0x20],esi
  41378d:	jne    0x4137f2
  41378f:	inc    eax
  413790:	adc    DWORD PTR [eax-0x19],ebx
  413793:	mov    al,0x35
  413795:	test   bh,bh
  413797:	lods   al,BYTE PTR ds:[esi]
  413798:	aaa    
  413799:	or     cl,BYTE PTR [esi]
  41379b:	mov    dl,0xc7
  41379d:	sti    
  41379e:	gs fs retf 
  4137a1:	sti    
  4137a2:	adc    eax,DWORD PTR [ecx]
  4137a4:	fwait
  4137a5:	out    dx,eax
  4137a6:	clc    
  4137a7:	sub    DWORD PTR [ebx-0x1e64ea32],ebp
  4137ad:	mov    ah,0x16
  4137af:	(bad)  
  4137b0:	xlat   BYTE PTR ds:[ebx]
  4137b1:	adc    DWORD PTR [ebx+0x28],0xffffffae
  4137b5:	int3   
  4137b6:	es lock les ebx,FWORD PTR fs:[edi-0x4f]
  4137bc:	ds pop ecx
  4137be:	and    dl,dh
  4137c0:	std    
  4137c1:	push   ecx
  4137c2:	mov    esi,0xabb510ab
  4137c7:	fs jg  0x4137b3
  4137ca:	repz adc eax,0x21ec1bef
  4137d0:	and    al,0x43
  4137d2:	xchg   esp,eax
  4137d3:	push   0x3436c923
  4137d8:	fbstp  TBYTE PTR [edx-0x312177f6]
  4137de:	inc    ebx
  4137df:	bound  esi,QWORD PTR [ebx-0x2b819f2d]
  4137e5:	fs xchg ecx,eax
  4137e7:	and    ch,ch
  4137e9:	call   DWORD PTR [esp+edi*8+0x3a31ec10]
  4137f0:	shr    BYTE PTR [eax+0x564a361],1
  4137f6:	jno    0x413865
  4137f8:	int3   
  4137f9:	adc    bl,BYTE PTR [bx+si]
  4137fc:	fcom   QWORD PTR [eiz*1+0x4b201def]
  413803:	jno    0x4137fe
  413805:	or     edx,DWORD PTR [ebp-0x31415a99]
  41380b:	jns    0x413836
  41380d:	lds    ebp,FWORD PTR [ebx-0x4631cee8]
  413813:	gs std 
  413815:	jae    0x4137f5
  413817:	and    al,0xc2
  413819:	cld    
  41381a:	xchg   BYTE PTR [ebp+esi*4+0x44],bh
  41381e:	jl     0x41385b
  413820:	xor    al,0x18
  413822:	das    
  413823:	dec    edi
  413824:	and    edi,DWORD PTR [eax+0x57]
  413827:	adc    eax,0xabffc4a0
  41382c:	test   BYTE PTR [esi],bl
  41382e:	jg     0x4137b2
  413830:	pop    esp
  413831:	add    BYTE PTR [eax],al
  413833:	ins    DWORD PTR es:[edi],dx
  413834:	cld    
  413835:	push   ebx
  413836:	test   dl,bl
  413838:	loopne 0x41389b
  41383a:	dec    ebp
  41383b:	xor    BYTE PTR [ecx-0x60f7d4ab],cl
  413841:	call   0xcd4e364d
  413846:	repz mov ebx,0x3fe942d
  41384c:	and    ecx,DWORD PTR [edi-0x6d5b152]
  413852:	adc    al,0xb3
  413854:	dec    edx
  413855:	inc    edi
  413856:	ds (bad) 
  413858:	mov    ?,WORD PTR [ebx-0x1e]
  41385b:	add    eax,0x6a0838a4
  413860:	das    
  413861:	out    dx,eax
  413862:	xchg   bh,al
  413864:	ret    0x6c3a
  413867:	aaa    
  413868:	loop   0x413884
  41386a:	inc    ebx
  41386b:	(bad)  
  41386c:	ds pop esp
  41386e:	or     edx,ecx
  413870:	int3   
  413871:	cmp    bl,ch
  413873:	test   BYTE PTR [eax-0x11f6c0d6],0xbb
  41387a:	rol    DWORD PTR [esi-0x526e910c],0x46
  413881:	test   BYTE PTR [ebp+0x0],al
  413884:	loop   0x413833
  413886:	add    al,0xc0
  413888:	sahf   
  413889:	nop
  41388a:	inc    edi
  41388b:	rcr    BYTE PTR ds:0x90206048,1
  413891:	mov    BYTE PTR [edx],cl
  413893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413894:	xor    eax,0xa5c7b334
  413899:	aas    
  41389a:	cmp    cl,BYTE PTR [eax+0x1a]
  41389d:	mov    dl,bh
  41389f:	adc    DWORD PTR [esi+0x342a06da],ebp
  4138a5:	fistp  DWORD PTR [esi-0x34]
  4138a8:	add    BYTE PTR [edi+eax*8],al
  4138ab:	fstp   QWORD PTR [edx-0x38]
  4138ae:	or     DWORD PTR ds:0xca307315,eax
  4138b4:	sbb    al,0xbf
  4138b6:	sbb    eax,0x42a920b2
  4138bb:	frstor [ecx+0x5ccbd4c2]
  4138c1:	and    esp,edx
  4138c3:	and    esp,DWORD PTR ds:0xf12987bc
  4138c9:	lds    eax,FWORD PTR [edi+ebx*8-0x630304ca]
  4138d0:	push   esp
  4138d1:	push   eax
  4138d2:	jns    0x41385e
  4138d4:	fwait
  4138d5:	adc    ah,BYTE PTR [eax-0x3a72dc3c]
  4138db:	pop    ecx
  4138dc:	fsubr  QWORD PTR [esi+0x7d0eacd6]
  4138e2:	clc    
  4138e3:	pop    es
  4138e4:	and    edi,edi
  4138e6:	imul   esp,DWORD PTR [ebp+0x35],0x39e87b80
  4138ed:	js     0x41396e
  4138ef:	fimul  WORD PTR [edx+0x3f]
  4138f2:	push   cs
  4138f3:	jae    0x4138d4
  4138f5:	loop   0x4138b4
  4138f7:	mov    ebp,0xf3f77803
  4138fc:	cld    
  4138fd:	adc    WORD PTR [ebx+0x6abbb2fd],sp
  413904:	mov    WORD PTR ds:0xb89e9acb,ss
  41390a:	call   0x7a9a0d7a
  41390f:	add    DWORD PTR [eax-0x77],esp
  413912:	push   eax
  413913:	aas    
  413914:	retf   0x866f
  413917:	scas   eax,DWORD PTR es:[edi]
  413918:	jmp    0x1392:0xdb376f1
  41391f:	rol    BYTE PTR [ebp+0x1e76aeca],0x10
  413926:	fistp  DWORD PTR [edi+0x5034da9c]
  41392c:	outs   dx,DWORD PTR ds:[esi]
  41392d:	sub    BYTE PTR [eax-0x6b7c80a4],bh
  413933:	addr16 add al,0xf9
  413936:	and    eax,0xfa7c81fb
  41393b:	lea    esp,[esi+ebp*8]
  41393e:	outs   dx,DWORD PTR ds:[esi]
  41393f:	sahf   
  413940:	fs jae 0x4138d2
  413943:	xchg   edi,eax
  413944:	dec    ecx
  413945:	shr    BYTE PTR [esi+0x17dbe467],cl
  41394b:	cs pop ecx
  41394d:	fidivr WORD PTR [edx+0x42]
  413950:	retf   
  413951:	cmp    ecx,DWORD PTR [edi+0x56]
  413954:	xor    eax,0xa597b17c
  413959:	cs xchg esp,eax
  41395b:	sub    DWORD PTR [ecx],esi
  41395d:	fmul   QWORD PTR [eax]
  41395f:	xor    BYTE PTR [ebx+0x495f6419],bh
  413965:	dec    esp
  413966:	sub    DWORD PTR [edx-0x66],ebx
  413969:	sub    edi,DWORD PTR [ecx-0x412642b]
  41396f:	push   ebx
  413970:	pop    ebx
  413971:	rcl    DWORD PTR [eax+0x1f8e0cb2],0xff
  413978:	xor    eax,0x8b7387ab
  41397d:	aam    0x59
  41397f:	sbb    eax,0x2b042ee4
  413984:	sub    al,dl
  413986:	cdq    
  413987:	adc    bl,ch
  413989:	jb     0x413990
  41398b:	pop    esp
  41398c:	popf   
  41398d:	(bad)  
  41398e:	aad    0xcc
  413990:	and    esp,edx
  413992:	cli    
  413993:	lea    ecx,[esi+0x7543e1e8]
  413999:	mov    cl,0xce
  41399b:	int3   
  41399c:	xchg   ebx,eax
  41399d:	jmp    0x2f69:0xfbf9b3e3
  4139a4:	push   edi
  4139a5:	repnz ins BYTE PTR es:[edi],dx
  4139a7:	outs   dx,DWORD PTR ds:[esi]
  4139a8:	inc    ebp
  4139a9:	xor    BYTE PTR [esi],bh
  4139ab:	mov    ebp,0x14e42c7b
  4139b0:	shl    DWORD PTR [eax+eiz*1],1
  4139b3:	jo     0x4139e8
  4139b5:	jge    0x413945
  4139b7:	popa   
  4139b8:	into   
  4139b9:	mov    edi,0x60141f66
  4139bf:	or     BYTE PTR [ebx],bl
  4139c1:	cwde   
  4139c2:	push   ebp
  4139c3:	pop    eax
  4139c4:	sbb    dl,ah
  4139c6:	jmp    0x59e1:0x15dc4c70
  4139cd:	pop    ebp
  4139ce:	xlat   BYTE PTR ds:[bx]
  4139d0:	arpl   sp,ax
  4139d2:	mov    edi,0x380c15b7
  4139d7:	outs   dx,BYTE PTR ds:[esi]
  4139d8:	(bad)  
  4139d9:	sbb    dh,dh
  4139db:	mov    edx,0xb4d1c912
  4139e0:	cwde   
  4139e1:	shr    BYTE PTR [ecx+0x3f1cfce4],0xdf
  4139e8:	cwde   
  4139e9:	repnz inc eax
  4139eb:	outs   dx,DWORD PTR ds:[esi]
  4139ec:	or     al,0xc0
  4139ee:	and    al,0x7d
  4139f0:	fs sahf 
  4139f2:	mov    dl,bl
  4139f4:	sbb    ah,BYTE PTR [edx]
  4139f6:	xchg   edi,eax
  4139f7:	out    0x72,eax
  4139f9:	and    eax,DWORD PTR [ebx-0x75]
  4139fc:	xchg   DWORD PTR [ebx+0x1e],esp
  4139ff:	add    esp,DWORD PTR [eax]
  413a01:	daa    
  413a02:	add    DWORD PTR [ebx-0x404767b8],ebp
  413a08:	mov    bl,0x12
  413a0a:	lock ss pushf 
  413a0d:	push   0x4f30db30
  413a12:	(bad)  [ebx+0x4a]
  413a15:	mov    ch,0xcc
  413a17:	gs mov al,0x43
  413a1a:	cmp    eax,0x7754d6cb
  413a1f:	imul   ecx,esi,0x34806e47
  413a25:	sar    BYTE PTR [ecx*2-0x1cc267c0],cl
  413a2c:	sub    al,0x9d
  413a2e:	(bad)  
  413a2f:	cmc    
  413a30:	test   DWORD PTR [esi],ebx
  413a32:	in     al,0xdc
  413a34:	xor    bl,bl
  413a36:	imul   ebp
  413a38:	add    bl,BYTE PTR [edx]
  413a3a:	sti    
  413a3b:	lahf   
  413a3c:	mov    cl,0x7d
  413a3e:	dec    esp
  413a3f:	daa    
  413a40:	ins    BYTE PTR es:[edi],dx
  413a41:	fstp   QWORD PTR [edx-0x13]
  413a44:	std    
  413a45:	lock mov ebp,0x59bffa2d
  413a4b:	cmp    esp,DWORD PTR [edx-0x1e873ff7]
  413a51:	lods   eax,DWORD PTR ds:[esi]
  413a52:	icebp  
  413a53:	mov    al,ds:0x32b2dd90
  413a58:	(bad)
  413a5c:	nop
  413a5d:	mul    DWORD PTR [ecx-0x1928dc0e]
  413a63:	xor    DWORD PTR [esi+0x26],0x72
  413a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a68:	push   ds
  413a69:	cmp    eax,0xaa459d3d
  413a6e:	lods   al,BYTE PTR ds:[esi]
  413a6f:	out    dx,eax
  413a70:	pop    edi
  413a71:	or     eax,ecx
  413a73:	stos   BYTE PTR es:[edi],al
  413a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a75:	shl    ah,cl
  413a77:	push   edi
  413a78:	loopne 0x413a46
  413a7a:	inc    ecx
  413a7b:	dec    ebp
  413a7c:	test   al,0xfd
  413a7e:	inc    eax
  413a7f:	js     0x413af8
  413a81:	repz shl DWORD PTR [ecx-0x349eeaa7],0xeb
  413a89:	dec    edx
  413a8a:	mov    BYTE PTR [ebx-0x466dd5e5],cl
  413a90:	cmp    BYTE PTR [edi-0x3d3999d8],cl
  413a96:	dec    ecx
  413a97:	jmp    0x47a1:0x59eb5427
  413a9e:	cdq    
  413a9f:	push   0xfb5615a4
  413aa4:	popf   
  413aa5:	sub    BYTE PTR [edx+0x2f53445f],dl
  413aab:	nop
  413aac:	scas   eax,DWORD PTR es:[edi]
  413aad:	adc    edi,esi
  413aaf:	inc    edx
  413ab0:	jl     0x413a94
  413ab2:	add    DWORD PTR cs:[edi+0x2ade4a65],ebx
  413ab9:	inc    eax
  413aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413abb:	scas   eax,DWORD PTR es:[edi]
  413abc:	es retf 
  413abe:	xor    dh,BYTE PTR [edi-0x15da1136]
  413ac4:	inc    ebp
  413ac5:	stos   DWORD PTR es:[edi],eax
  413ac6:	inc    esi
  413ac7:	pop    edx
  413ac8:	mov    al,ds:0x8bc56365
  413acd:	push   DWORD PTR [edi+ebp*8]
  413ad0:	mov    ds:0x2a8b9363,al
  413ad5:	icebp  
  413ad6:	or     al,0x30
  413ad8:	scas   eax,DWORD PTR es:[edi]
  413ad9:	mov    al,0x51
  413adb:	neg    DWORD PTR [eax-0x6a]
  413ade:	mov    eax,ds:0xbb87ed56
  413ae3:	lahf   
  413ae4:	jmp    0x413b40
  413ae6:	fld    QWORD PTR [ecx-0x3f]
  413ae9:	dec    esi
  413aea:	pop    eax
  413aeb:	add    BYTE PTR [ebx+eiz*8+0x38c16c84],dh
  413af2:	and    al,0x66
  413af4:	sbb    BYTE PTR [ecx+0x7f196bd5],ch
  413afa:	sti    
  413afb:	outs   dx,BYTE PTR ds:[esi]
  413afc:	mov    esi,0x1a5e9b33
  413b01:	fs inc ecx
  413b03:	sub    BYTE PTR [ebx],dl
  413b05:	fild   DWORD PTR [eax+eiz*4-0x26]
  413b09:	ret    0x62ec
  413b0c:	mov    edx,0x68391d6c
  413b11:	xchg   ebp,eax
  413b12:	sbb    cl,BYTE PTR [edi+0x25]
  413b15:	xchg   ebp,eax
  413b16:	das    
  413b17:	jge    0x413b90
  413b19:	pop    edi
  413b1a:	mov    ch,0x1e
  413b1c:	popa   
  413b1d:	pop    ds
  413b1e:	ffreep st(5)
  413b20:	inc    ecx
  413b21:	shr    BYTE PTR [ebx-0x37],0x34
  413b25:	cmp    al,0xbb
  413b27:	xor    eax,0xf62b8f2e
  413b2c:	retf   0x92b1
  413b2f:	(bad)  
  413b31:	(bad)  
  413b32:	fnstsw WORD PTR [eax-0x45]
  413b35:	and    BYTE PTR [eax+ebp*2],al
  413b38:	fcmovu st,st(7)
  413b3a:	stos   DWORD PTR es:[edi],eax
  413b3b:	jmp    0x83d3fe8b
  413b40:	data16 fldcw WORD PTR [esi]
  413b43:	and    eax,0xf95dfe9e
  413b48:	pushf  
  413b49:	loop   0x413b3e
  413b4b:	mov    edx,0xfec65082
  413b50:	cmp    edx,0xc3e0eefa
  413b56:	fiadd  WORD PTR [ecx]
  413b58:	cmp    bl,BYTE PTR [ebp+ecx*8-0x12]
  413b5c:	xchg   ebx,eax
  413b5d:	shr    DWORD PTR [edi-0x26e6e476],1
  413b63:	mov    ah,BYTE PTR [eax+0x2e]
  413b66:	xor    DWORD PTR [eax],esi
  413b68:	push   es
  413b69:	ins    DWORD PTR es:[edi],dx
  413b6a:	fs aaa 
  413b6c:	arpl   cx,bx
  413b6e:	(bad)  
  413b6f:	nop
  413b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b71:	add    ecx,DWORD PTR [ebp+0x1]
  413b74:	jmp    0xc0939756
  413b79:	(bad)  
  413b7a:	idiv   DWORD PTR [eiz*2-0x732a2e25]
  413b81:	jp     0x413bbc
  413b83:	sti    
  413b84:	xchg   BYTE PTR [edx-0x44003afe],ch
  413b8a:	dec    edi
  413b8b:	push   esi
  413b8c:	cwde   
  413b8d:	(bad)  
  413b8e:	jo     0x413b9f
  413b90:	test   eax,0x28338d35
  413b95:	jns    0x413b7d
  413b97:	mov    esp,0x8d8ff25e
  413b9c:	jmp    0x196ded2e
  413ba1:	jge    0x413b81
  413ba3:	cmp    eax,0xb989d65a
  413ba8:	retf   0xad71
  413bab:	inc    esi
  413bac:	cld    
  413bad:	adc    ch,BYTE PTR [ebp+0x39]
  413bb0:	ja     0x413c2a
  413bb2:	xchg   edx,eax
  413bb3:	and    eax,0x206e7268
  413bb8:	imul   ebp,DWORD PTR [esi+0x560c7215],0x7fb75d57
  413bc2:	push   0xffffffb3
  413bc4:	xchg   edx,eax
  413bc5:	xchg   esp,eax
  413bc6:	xor    al,0xb6
  413bc8:	and    BYTE PTR [esp+edx*8+0x69cee2cb],dl
  413bcf:	mov    eax,0xbdf7f18d
  413bd4:	and    ebx,esp
  413bd6:	cmc    
  413bd7:	rcr    BYTE PTR [ecx+0x62],cl
  413bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bdb:	dec    esi
  413bdc:	add    ebx,ebx
  413bde:	retf   0x6ad9
  413be1:	bswap  eax
  413be3:	pop    edx
  413be4:	pop    edx
  413be5:	jno    0x413baf
  413be7:	xchg   esi,eax
  413be8:	aad    0x80
  413bea:	xor    al,ch
  413bec:	sahf   
  413bed:	inc    ebx
  413bee:	jg     0x413c45
  413bf0:	shl    DWORD PTR [eax-0x7360e656],1
  413bf6:	popa   
  413bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf8:	je     0x413c68
  413bfa:	in     al,0xe0
  413bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bfd:	popa   
  413bfe:	vpaddsw ymm6,ymm7,YMMWORD PTR [ebx-0xb]
  413c03:	pop    ecx
  413c04:	(bad)  
  413c05:	out    dx,al
  413c06:	test   BYTE PTR [edi],cl
  413c08:	aad    0x97
  413c0a:	cmovbe ebp,DWORD PTR [ebx]
  413c0d:	leave  
  413c0e:	jno    0x413c2c
  413c10:	xchg   edx,eax
  413c11:	scas   eax,DWORD PTR es:[edi]
  413c12:	xchg   esi,eax
  413c13:	ret    
  413c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c15:	push   eax
  413c16:	jmp    0x81d0b3d2
  413c1b:	jb     0x413bdc
  413c1d:	cli    
  413c1e:	test   al,0x41
  413c20:	adc    eax,DWORD PTR [ebp-0x63d8f691]
  413c26:	fwait
  413c27:	sub    DWORD PTR [ebx+ebp*4],ecx
  413c2a:	sar    DWORD PTR [ebx+0x20],1
  413c2d:	pop    ds
  413c2e:	ss ret 0x6159
  413c32:	pop    eax
  413c33:	add    al,0xc5
  413c35:	sbb    al,0x3
  413c37:	js     0x413beb
  413c39:	imul   esp,ebx,0xffffffea
  413c3c:	adc    edi,ebx
  413c3e:	sub    BYTE PTR [ebx-0x80],cl
  413c41:	aam    0xf0
  413c43:	cli    
  413c44:	fdiv   QWORD PTR [edx+0xd]
  413c47:	mov    al,0x4a
  413c49:	jmp    FWORD PTR [ebp+0x143fa2ea]
  413c4f:	(bad)  
  413c50:	xor    eax,0x6d4beb55
  413c55:	xchg   ecx,eax
  413c56:	add    al,0x12
  413c58:	xchg   esi,eax
  413c59:	addr16 mov ecx,cs
  413c5c:	pop    es
  413c5d:	mov    esp,0x93aa285e
  413c62:	bound  ecx,QWORD PTR [eax-0x6d4906bb]
  413c68:	daa    
  413c69:	pop    DWORD PTR [esi+esi*2-0x4a26d434]
  413c70:	xor    al,0x7e
  413c72:	push   es
  413c73:	xchg   BYTE PTR [edx+edx*4],bh
  413c76:	stc    
  413c77:	xchg   edx,eax
  413c78:	xchg   DWORD PTR [ecx],eax
  413c7a:	and    BYTE PTR [edi+0x12],ch
  413c7d:	or     ebp,0xfce8b1d9
  413c83:	pop    eax
  413c84:	xor    DWORD PTR [edi],ecx
  413c86:	bound  ebp,QWORD PTR [ebx+0x62]
  413c89:	test   al,0x4b
  413c8b:	xor    ah,BYTE PTR [edi]
  413c8d:	jmp    0x413c12
  413c8f:	dec    eax
  413c90:	and    al,0x0
  413c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c93:	or     DWORD PTR ds:0x904b9595,esi
  413c99:	mov    edx,0x70ab6a44
  413c9e:	fsubr  st(0),st
  413ca0:	sub    cl,BYTE PTR [ecx+0x5a8d38e7]
  413ca6:	shr    DWORD PTR [eax+0x13],1
  413ca9:	mov    eax,ds:0x7a6844a9
  413cae:	sbb    eax,0x28c8c39
  413cb3:	mov    bh,0xa2
  413cb5:	cmc    
  413cb6:	mov    bh,0xb9
  413cb8:	mov    ah,BYTE PTR [edx+0x6fb6a95a]
  413cbe:	add    ecx,ebp
  413cc0:	repnz push ds
  413cc2:	std    
  413cc3:	push   edx
  413cc4:	pop    esi
  413cc5:	sti    
  413cc6:	in     eax,0x20
  413cc8:	daa    
  413cc9:	jno    0x413cde
  413ccb:	mov    dl,0x7d
  413ccd:	sbb    esp,DWORD PTR [ebx+0x75da29aa]
  413cd3:	xor    BYTE PTR [ebp-0x12],ah
  413cd6:	pop    ebx
  413cd7:	inc    ecx
  413cd8:	xor    ch,BYTE PTR [esi-0x605ca628]
  413cde:	push   ds
  413cdf:	ret    
  413ce0:	sti    
  413ce1:	xor    edx,esp
  413ce3:	mov    ecx,0x7b68f4bb
  413ce8:	scas   eax,DWORD PTR es:[edi]
  413ce9:	out    0x44,al
  413ceb:	aaa    
  413cec:	fcom   st(7)
  413cee:	mov    bl,0xed
  413cf0:	pusha  
  413cf1:	or     DWORD PTR [esi-0x3],ebx
  413cf4:	clc    
  413cf5:	lock imul esi,DWORD PTR [edi-0x24e30ca6],0x4d8be6c3
  413d00:	in     al,dx
  413d01:	mov    eax,DWORD PTR [ecx+eax*4]
  413d04:	mov    DWORD PTR [ebp-0x38],eax
  413d07:	jmp    0x40f5ba
  413d0c:	mov    eax,DWORD PTR [ebp-0xc]
  413d0f:	xor    eax,esi
  413d11:	lea    ebx,[ebx+eax*1+0x3272f1]
  413d18:	jmp    0x40ac84
  413d1d:	mov    eax,DWORD PTR [ebp-0x4]
  413d20:	xor    eax,esi
  413d22:	add    eax,edi
  413d24:	jmp    0x413e48
  413d29:	mov    eax,DWORD PTR [ebp-0x38]
  413d2c:	add    eax,DWORD PTR [ebp+0x8]
  413d2f:	mov    DWORD PTR [ebp-0x18],eax
  413d32:	mov    eax,DWORD PTR [ebp-0x1c]
  413d35:	test   eax,eax
  413d37:	je     0x413dd1
  413d3d:	mov    DWORD PTR [ebp-0x20],0x0
  413d44:	push   0x3
  413d46:	xor    edx,edx
  413d48:	pop    edx
  413d49:	add    edx,0x8
  413d4c:	push   edx
  413d4d:	pop    ecx
  413d4e:	push   0x6
  413d50:	dec    ecx
  413d51:	pop    ebx
  413d52:	dec    ebx
  413d53:	xchg   ebx,ecx
  413d55:	sub    ebx,ecx
  413d57:	xchg   ebx,ecx
  413d59:	dec    ecx
  413d5a:	mov    eax,DWORD PTR [ebp-0x1c]
  413d5d:	imul   eax,ecx
  413d60:	sub    esp,eax
  413d62:	mov    DWORD PTR [ebp-0x20],esp
  413d65:	mov    eax,DWORD PTR [ebp-0x4]
  413d68:	xor    eax,esi
  413d6a:	add    eax,edi
  413d6c:	jmp    0x413daa
  413d71:	mov    ecx,DWORD PTR [ebp-0xc]
  413d74:	mov    eax,DWORD PTR [ebp+0x8]
  413d77:	mov    edx,DWORD PTR [ebp+0x14]
  413d7a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413d7e:	xor    ecx,esi
  413d80:	add    ecx,edi
  413d82:	xor    edx,edx
  413d84:	div    ecx
  413d86:	mov    ecx,DWORD PTR [ebp-0x4]
  413d89:	xor    ecx,esi
  413d8b:	lea    eax,[ecx+eax*1+0x3272f1]
  413d92:	mov    ecx,DWORD PTR [ebp+0x8]
  413d95:	mov    edx,DWORD PTR [ebp-0x20]
  413d98:	mov    DWORD PTR [edx+ecx*4],eax
  413d9b:	mov    eax,DWORD PTR [ebp-0xc]
  413d9e:	mov    ecx,DWORD PTR [ebp+0x8]
  413da1:	xor    eax,esi
  413da3:	lea    eax,[eax+ecx*1+0x3272f1]
  413daa:	mov    DWORD PTR [ebp+0x8],eax
  413dad:	mov    eax,DWORD PTR [ebp-0xc]
  413db0:	mov    ecx,DWORD PTR [ebp+0x14]
  413db3:	xor    eax,esi
  413db5:	add    eax,edi
  413db7:	imul   eax,DWORD PTR [ecx]
  413dba:	mov    ecx,DWORD PTR [ebp-0x4]
  413dbd:	mov    edx,DWORD PTR [ebp+0x8]
  413dc0:	xor    ecx,esi
  413dc2:	lea    ecx,[ecx+edx*1+0x3272f1]
  413dc9:	cmp    ecx,eax
  413dcb:	jne    0x413d71
  413dd1:	mov    eax,DWORD PTR [ebp-0x4]
  413dd4:	xor    eax,esi
  413dd6:	add    eax,edi
  413dd8:	mov    DWORD PTR [ebp-0x10],eax
  413ddb:	mov    ebx,0x65655
  413de0:	add    ebx,0x3234
  413de6:	xchg   ebx,esi
  413de8:	xor    ebx,ebx
  413dea:	push   esi
  413deb:	mov    esi,ebx
  413ded:	pop    ebx
  413dee:	mov    edx,esi
  413df0:	add    ebx,0x1002
  413df6:	lea    eax,[ebp-0x18]
  413df9:	add    edx,eax
  413dfb:	add    edx,0x5
  413dfe:	push   edx
  413dff:	inc    esi
  413e00:	pop    ecx
  413e01:	dec    ecx
  413e02:	xchg   ecx,eax
  413e03:	dec    eax
  413e04:	xchg   ecx,eax
  413e05:	dec    ecx
  413e06:	xchg   ecx,edx
  413e08:	dec    edx
  413e09:	push   edx
  413e0a:	mov    edx,ebx
  413e0c:	pop    ebx
  413e0d:	dec    ebx
  413e0e:	call   DWORD PTR [ebx]
  413e10:	cmp    DWORD PTR [ebp+0x10],esi
  413e13:	je     0x413e34
  413e19:	xchg   edx,eax
  413e1a:	push   0xc
  413e1c:	pop    ecx
  413e1d:	dec    ecx
  413e1e:	push   0x3
  413e20:	pop    ebx
  413e21:	inc    ebx
  413e22:	xchg   ebx,ecx
  413e24:	inc    ecx
  413e25:	sub    ebx,ecx
  413e27:	xchg   ebx,ecx
  413e29:	dec    ecx
  413e2a:	dec    ecx
  413e2b:	mov    eax,DWORD PTR [ebp-0x1c]
  413e2e:	imul   eax,ecx
  413e31:	add    esp,eax
  413e33:	xchg   edx,eax
  413e34:	push   eax
  413e35:	xor    ebx,ebx
  413e37:	mov    edx,esp
  413e39:	dec    edx
  413e3a:	inc    ebx
  413e3b:	add    ebx,DWORD PTR [edx+ebx*1]
  413e3e:	dec    ebx
  413e3f:	xor    edx,edx
  413e41:	add    DWORD PTR [ebp-0x10],ebx
  413e44:	pop    ebx
  413e45:	mov    eax,DWORD PTR [ebp-0x10]
  413e48:	pop    edi
  413e49:	pop    esi
  413e4a:	pop    ebx
  413e4b:	leave  
  413e4c:	ret    0x10
  413e4f:	push   ebp
  413e50:	mov    ebp,esp
  413e52:	push   ecx
  413e53:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413e5a:	sub    ecx,edx
  413e5c:	mov    eax,DWORD PTR [ebp-0x4]
  413e5f:	mov    edx,DWORD PTR [ebp+0x10]
  413e62:	adc    DWORD PTR ds:0x42a2aa,ecx
  413e68:	mov    ecx,0x75108aa
  413e6d:	xor    eax,ecx
  413e6f:	sub    DWORD PTR ds:0x42a2d2,0x42a2ee
  413e79:	add    eax,0x3272f1
  413e7e:	mov    DWORD PTR [edx],eax
  413e80:	movzx  eax,BYTE PTR ds:0x42a2b6
  413e87:	sub    eax,DWORD PTR ds:0x42a2b2
  413e8d:	mov    ds:0x42a2b6,eax
  413e92:	mov    eax,DWORD PTR [ebp+0xc]
  413e95:	xor    eax,ecx
  413e97:	push   esi
  413e98:	mov    esi,DWORD PTR [ebp+0x10]
  413e9b:	and    DWORD PTR ds:0x42a2ae,0x0
  413ea5:	jmp    0x413eb7
  413eaa:	mov    edx,DWORD PTR ds:0x42a2ae
  413eb0:	inc    edx
  413eb1:	mov    DWORD PTR ds:0x42a2ae,edx
  413eb7:	cmp    DWORD PTR ds:0x42a2ae,0x15
  413ebe:	jae    0x413eee
  413ec4:	cmp    DWORD PTR ds:0x42a2ae,0x1b
  413ecb:	jl     0x413eee
  413ed1:	jmp    0x413ee9
  413ed6:	push   0x4a7a
  413edb:	push   0x52a4
  413ee0:	push   DWORD PTR [ebp-0x20]
  413ee3:	call   DWORD PTR ds:0x42a412
  413ee9:	jmp    0x413eaa
  413eee:	mov    edx,0x3272f1
  413ef3:	add    eax,edx
  413ef5:	mov    DWORD PTR [esi+0x4],eax
  413ef8:	mov    eax,DWORD PTR [ebp+0x14]
  413efb:	mov    esi,DWORD PTR [ebp+0x10]
  413efe:	mov    DWORD PTR [esi+0x8],eax
  413f01:	mov    eax,DWORD PTR [ebp+0x18]
  413f04:	mov    esi,DWORD PTR [ebp+0x10]
  413f07:	mov    DWORD PTR [esi+0xc],eax
  413f0a:	mov    eax,DWORD PTR [ebp+0x1c]
  413f0d:	mov    esi,DWORD PTR [ebp+0x10]
  413f10:	mov    DWORD PTR [esi+0x10],eax
  413f13:	mov    eax,DWORD PTR [ebp+0x8]
  413f16:	xor    eax,ecx
  413f18:	add    eax,edx
  413f1a:	pop    esi
  413f1b:	leave  
  413f1c:	ret    0x18
  413f1f:	push   ebp
  413f20:	mov    ebp,esp
  413f22:	sub    esp,0x9c
  413f28:	mov    ecx,DWORD PTR [ebp+0x8]
  413f2b:	add    DWORD PTR ds:0x42a2be,ecx
  413f31:	mov    eax,0x8a98
  413f36:	adc    DWORD PTR ds:0x42a2de,0x457a
  413f40:	xor    ax,WORD PTR [ecx+0x20]
  413f44:	mov    ecx,0x3b5a
  413f49:	adc    DWORD PTR ds:0x42a296,0x42a262
  413f53:	add    ax,cx
  413f56:	movzx  eax,ax
  413f59:	sub    ecx,DWORD PTR ds:0x42a276
  413f5f:	mov    DWORD PTR [ebp-0x10],eax
  413f62:	mov    BYTE PTR [ebp-0x1],0x7c
  413f66:	sbb    ecx,DWORD PTR ds:0x42a28e
  413f6c:	lea    eax,[ebp-0x1]
  413f6f:	mov    DWORD PTR [ebp-0xc],eax
  413f72:	mov    al,BYTE PTR [ebp-0x1]
  413f75:	sbb    DWORD PTR ds:0x42a276,0x42a2a6
  413f7f:	mov    ecx,DWORD PTR [ebp-0xc]
  413f82:	xor    al,0x7c
  413f84:	xor    DWORD PTR ds:0x42a27e,0x42a2d2
  413f8e:	inc    al
  413f90:	and    DWORD PTR ds:0x42a262,0x42a2fa
  413f9a:	mov    BYTE PTR [ecx],al
  413f9c:	add    eax,ecx
  413f9e:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  413fa5:	add    DWORD PTR ds:0x42a272,0x42a28e
  413faf:	push   ebx
  413fb0:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  413fb7:	mov    ecx,DWORD PTR [ebp-0x18]
  413fba:	push   esi
  413fbb:	mov    esi,DWORD PTR ds:0x42a346
  413fc1:	mov    eax,ds:0x42a372
  413fc6:	sub    eax,esi
  413fc8:	or     esi,DWORD PTR [esi+eax*1]
  413fcb:	mov    eax,0x75108aa
  413fd0:	sub    esi,DWORD PTR ds:0x42a2a6
  413fd6:	xor    ecx,eax
  413fd8:	mov    esi,0x3272f1
  413fdd:	push   edi
  413fde:	sbb    DWORD PTR ds:0x42a2fa,0x42a2f6
  413fe8:	add    ecx,esi
  413fea:	mov    DWORD PTR ds:0x42a2ee,0x6562
  413ff4:	jmp    0x414004
  413ff9:	mov    dl,BYTE PTR [ebp-0x1]
  413ffc:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  414003:	inc    ecx
  414004:	mov    DWORD PTR ds:0x42a2de,0x1651
  41400e:	cmp    ecx,0x40
  414011:	jb     0x413ff9
  414017:	mov    DWORD PTR ds:0x42a2ce,0x1c
  414021:	cmp    DWORD PTR ds:0x42a2ce,0x0
  414028:	je     0x414081
  41402e:	cmp    DWORD PTR ds:0x42a2ce,0x5
  414035:	jbe    0x414081
  41403b:	jmp    0x414055
  414040:	push   0x5b36
  414045:	push   0x4291e3
  41404a:	push   0x429247
  41404f:	call   DWORD PTR ds:0x42a3b6
  414055:	cmp    DWORD PTR ds:0x42a2ce,0x6
  41405c:	jne    0x41406f
  414062:	mov    edx,DWORD PTR ds:0x42a2ce
  414068:	dec    edx
  414069:	mov    DWORD PTR ds:0x42a2ce,edx
  41406f:	mov    edx,DWORD PTR ds:0x42a2ce
  414075:	dec    edx
  414076:	mov    DWORD PTR ds:0x42a2ce,edx
  41407c:	jmp    0x414021
  414081:	mov    edx,DWORD PTR [ebp-0x18]
  414084:	and    DWORD PTR ds:0x42a272,0x42a2aa
  41408e:	xor    edx,eax
  414090:	add    DWORD PTR ds:0x42a2d6,0x7605
  41409a:	add    edx,esi
  41409c:	mov    DWORD PTR ds:0x42a2c2,0x2718
  4140a6:	jmp    0x414179
  4140ab:	mov    edi,DWORD PTR [ebp+0x8]
  4140ae:	add    DWORD PTR ds:0x42a2a2,0x1c2b
  4140b8:	mov    ecx,0x8a98
  4140bd:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4140c2:	and    DWORD PTR ds:0x42a26e,0x0
  4140cc:	jmp    0x4140de
  4140d1:	mov    edi,DWORD PTR ds:0x42a26e
  4140d7:	inc    edi
  4140d8:	mov    DWORD PTR ds:0x42a26e,edi
  4140de:	cmp    DWORD PTR ds:0x42a26e,0x1f
  4140e5:	jae    0x414112
  4140eb:	cmp    DWORD PTR ds:0x42a26e,0x20
  4140f2:	jbe    0x414112
  4140f8:	jmp    0x41410d
  4140fd:	push   0x42a2d6
  414102:	push   0x4291fd
  414107:	call   DWORD PTR ds:0x42a3f2
  41410d:	jmp    0x4140d1
  414112:	mov    edi,0x3b5a
  414117:	sbb    DWORD PTR ds:0x42a2f6,0x4902
  414121:	add    cx,di
  414124:	add    DWORD PTR ds:0x42a2ae,0x42a296
  41412e:	movzx  ecx,cx
  414131:	xor    DWORD PTR ds:0x42a29e,0x6377
  41413b:	mov    DWORD PTR [ebp-0xc],ecx
  41413e:	sbb    ecx,DWORD PTR ds:0x42a2f6
  414144:	mov    ecx,DWORD PTR [ebp+0x8]
  414147:	movzx  ecx,WORD PTR [ecx+edx*4]
  41414b:	or     DWORD PTR ds:0x42a2ca,0x42a276
  414155:	xor    ecx,0x8a98
  41415b:	add    ecx,edi
  41415d:	movzx  edi,WORD PTR ds:0x42a2ea
  414164:	mov    edi,DWORD PTR [ebp-0xc]
  414167:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41416e:	mov    DWORD PTR ds:0x42a2c6,0x2666
  414178:	inc    edx
  414179:	mov    DWORD PTR ds:0x42a2d6,edi
  41417f:	mov    ecx,DWORD PTR [ebp-0x10]
  414182:	mov    DWORD PTR ds:0x42a2be,0x12d3
  41418c:	cmp    edx,ecx
  41418e:	mov    DWORD PTR ds:0x42a2de,0x4c7d
  414198:	jne    0x4140ab
  41419e:	or     edx,ecx
  4141a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4141a3:	and    DWORD PTR ds:0x42a2e6,0x0
  4141ad:	xor    edi,edi
  4141af:	add    edi,DWORD PTR ds:0x42a2e6
  4141b5:	inc    edi
  4141b6:	mov    DWORD PTR ds:0x42a2e6,edi
  4141bc:	cmp    DWORD PTR ds:0x42a2e6,0x2b
  4141c3:	jl     0x4141eb
  4141c9:	jmp    0x4141de
  4141ce:	push   0x42919f
  4141d3:	push   0x400000
  4141d8:	call   DWORD PTR ds:0x42a3ba
  4141de:	cmp    DWORD PTR ds:0x42a2e6,0x1b
  4141e5:	jb     0x4141ad
  4141eb:	mov    edx,DWORD PTR [ebp+0x10]
  4141ee:	mov    edi,DWORD PTR ds:0x42a27e
  4141f4:	sub    DWORD PTR ds:0x42a2f6,edi
  4141fa:	xor    ecx,eax
  4141fc:	and    edi,0x65ef
  414202:	add    ecx,esi
  414204:	adc    DWORD PTR ds:0x42a25e,0x5774
  41420e:	mov    DWORD PTR [edx],ecx
  414210:	mov    ecx,DWORD PTR [ebp-0x18]
  414213:	xor    ecx,eax
  414215:	add    ecx,esi
  414217:	mov    DWORD PTR ds:0x42a262,0x13
  414221:	cmp    DWORD PTR ds:0x42a262,0x0
  414228:	je     0x41426c
  41422e:	cmp    DWORD PTR ds:0x42a262,0x19
  414235:	jle    0x41426c
  41423b:	jmp    0x414258
  414240:	push   0x34ab
  414245:	push   0x42a2d2
  41424a:	push   DWORD PTR [ebp-0x14]
  41424d:	push   0x8eb1
  414252:	call   DWORD PTR ds:0x42a3f6
  414258:	xor    edi,edi
  41425a:	xor    edi,DWORD PTR ds:0x42a262
  414260:	dec    edi
  414261:	mov    DWORD PTR ds:0x42a262,edi
  414267:	jmp    0x414221
  41426c:	mov    DWORD PTR [ebp-0xc],ecx
  41426f:	mov    DWORD PTR ds:0x42a25a,0x1f
  414279:	cmp    DWORD PTR ds:0x42a25a,0x0
  414280:	je     0x4142c0
  414286:	cmp    DWORD PTR ds:0x42a25a,0x28
  41428d:	ja     0x4142c0
  414293:	jmp    0x4142ae
  414298:	push   0x2e6d
  41429d:	push   DWORD PTR [ebp-0x1c]
  4142a0:	push   DWORD PTR [ebp-0x28]
  4142a3:	push   0x29af
  4142a8:	call   DWORD PTR ds:0x42a3be
  4142ae:	mov    edi,DWORD PTR ds:0x42a25a
  4142b4:	dec    edi
  4142b5:	mov    DWORD PTR ds:0x42a25a,edi
  4142bb:	jmp    0x414279
  4142c0:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4142c7:	neg    edi
  4142c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4142d0:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4142d7:	mov    ecx,DWORD PTR [ebp-0x14]
  4142da:	mov    DWORD PTR [ebp+0x8],ecx
  4142dd:	adc    DWORD PTR ds:0x42a28e,0xc59
  4142e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4142ea:	xor    DWORD PTR ds:0x42a2e6,ecx
  4142f0:	xor    ecx,eax
  4142f2:	add    ecx,esi
  4142f4:	mov    ecx,0x242ebc9
  4142f9:	mov    edi,DWORD PTR ds:0x42a29a
  4142ff:	mov    edi,0xf641bc8
  414304:	je     0x41b4b4
  41430a:	mov    ebx,DWORD PTR ds:0x42a256
  414310:	adc    DWORD PTR ds:0x42a25e,ebx
  414316:	mov    edx,DWORD PTR [ebp+0x8]
  414319:	and    DWORD PTR ds:0x42a2ae,0x0
  414323:	jmp    0x414337
  414328:	xor    ebx,ebx
  41432a:	add    ebx,DWORD PTR ds:0x42a2ae
  414330:	inc    ebx
  414331:	mov    DWORD PTR ds:0x42a2ae,ebx
  414337:	cmp    DWORD PTR ds:0x42a2ae,0x12
  41433e:	jae    0x414383
  414344:	cmp    DWORD PTR ds:0x42a2ae,0xc
  41434b:	jle    0x414383
  414351:	jmp    0x414362
  414356:	push   DWORD PTR [ebp-0xc]
  414359:	push   DWORD PTR [ebp-0x18]
  41435c:	call   DWORD PTR ds:0x42a3c2
  414362:	cmp    DWORD PTR ds:0x42a2ae,0xb
  414369:	jne    0x41437e
  41436f:	xor    ebx,ebx
  414371:	or     ebx,DWORD PTR ds:0x42a2ae
  414377:	inc    ebx
  414378:	mov    DWORD PTR ds:0x42a2ae,ebx
  41437e:	jmp    0x414328
  414383:	mov    ebx,DWORD PTR [ebp-0x8]
  414386:	xor    edx,eax
  414388:	adc    DWORD PTR ds:0x42a276,0x42a272
  414392:	xor    ebx,eax
  414394:	sub    edx,ebx
  414396:	sub    DWORD PTR ds:0x42a256,0x2df9
  4143a0:	sub    edx,esi
  4143a2:	and    DWORD PTR ds:0x42a27e,0x0
  4143ac:	jmp    0x4143be
  4143b1:	mov    ebx,DWORD PTR ds:0x42a27e
  4143b7:	inc    ebx
  4143b8:	mov    DWORD PTR ds:0x42a27e,ebx
  4143be:	cmp    DWORD PTR ds:0x42a27e,0x1e
  4143c5:	jae    0x414409
  4143cb:	cmp    DWORD PTR ds:0x42a27e,0x9
  4143d2:	jb     0x414409
  4143d8:	jmp    0x4143e8
  4143dd:	push   0x1065
  4143e2:	call   DWORD PTR ds:0x42a3c6
  4143e8:	cmp    DWORD PTR ds:0x42a27e,0x8
  4143ef:	jne    0x414404
  4143f5:	xor    ebx,ebx
  4143f7:	or     ebx,DWORD PTR ds:0x42a27e
  4143fd:	inc    ebx
  4143fe:	mov    DWORD PTR ds:0x42a27e,ebx
  414404:	jmp    0x4143b1
  414409:	xor    edx,eax
  41440b:	or     ebx,0x35b
  414411:	mov    DWORD PTR [ebp+0x8],edx
  414414:	xor    DWORD PTR ds:0x42a27a,0x56cb
  41441e:	mov    edx,DWORD PTR [ebp+0x8]
  414421:	mov    DWORD PTR ds:0x42a2b2,0x1c
  41442b:	cmp    DWORD PTR ds:0x42a2b2,0x0
  414432:	je     0x41446a
  414438:	cmp    DWORD PTR ds:0x42a2b2,0x1f
  41443f:	jl     0x41446a
  414445:	jmp    0x414458
  41444a:	push   DWORD PTR [ebp-0x18]
  41444d:	push   0x42a2e2
  414452:	call   DWORD PTR ds:0x42a3fa
  414458:	mov    ebx,DWORD PTR ds:0x42a2b2
  41445e:	dec    ebx
  41445f:	mov    DWORD PTR ds:0x42a2b2,ebx
  414465:	jmp    0x41442b
  41446a:	mov    ebx,DWORD PTR [ebp-0x58]
  41446d:	add    edx,0x5708fa
  414473:	sub    DWORD PTR ds:0x42a2ae,0x42a262
  41447d:	imul   edx,ebx
  414480:	movzx  ebx,WORD PTR ds:0x42a2b6
  414487:	sbb    DWORD PTR ds:0x42a2e2,ebx
  41448d:	mov    DWORD PTR [ebp-0x58],edx
  414490:	mov    edx,DWORD PTR [ebp+0x8]
  414493:	and    DWORD PTR ds:0x42a2de,0x0
  41449d:	xor    ebx,ebx
  41449f:	xor    ebx,DWORD PTR ds:0x42a2de
  4144a5:	inc    ebx
  4144a6:	mov    DWORD PTR ds:0x42a2de,ebx
  4144ac:	cmp    DWORD PTR ds:0x42a2de,0x7
  4144b3:	jl     0x4144f3
  4144b9:	jmp    0x4144cc
  4144be:	push   DWORD PTR [ebp-0x20]
  4144c1:	push   0x42a286
  4144c6:	call   DWORD PTR ds:0x42a40a
  4144cc:	cmp    DWORD PTR ds:0x42a2de,0x6
  4144d3:	jne    0x4144e6
  4144d9:	mov    ebx,DWORD PTR ds:0x42a2de
  4144df:	inc    ebx
  4144e0:	mov    DWORD PTR ds:0x42a2de,ebx
  4144e6:	cmp    DWORD PTR ds:0x42a2de,0x14
  4144ed:	jb     0x41449d
  4144f3:	mov    ebx,DWORD PTR [ebp-0x54]
  4144f6:	adc    DWORD PTR ds:0x42a296,0x1f0e
  414500:	add    edx,0x64f898
  414506:	sub    DWORD PTR ds:0x42a2aa,0x42a2d6
  414510:	or     edx,ebx
  414512:	and    DWORD PTR ds:0x42a2ca,0x0
  41451c:	mov    ebx,DWORD PTR ds:0x42a2ca
  414522:	inc    ebx
  414523:	mov    DWORD PTR ds:0x42a2ca,ebx
  414529:	cmp    DWORD PTR ds:0x42a2ca,0x22
  414530:	jb     0x414559
  414536:	jmp    0x41454c
  41453b:	push   DWORD PTR [ebp-0x1c]
  41453e:	push   DWORD PTR [ebp-0x1c]
  414541:	push   0x5112
  414546:	call   DWORD PTR ds:0x42a40e
  41454c:	cmp    DWORD PTR ds:0x42a2ca,0x19
  414553:	jb     0x41451c
  414559:	mov    DWORD PTR [ebp-0x54],edx
  41455c:	sbb    DWORD PTR ds:0x42a2a6,0x5e0b
  414566:	mov    edx,DWORD PTR [ebp+0x8]
  414569:	mov    ebx,DWORD PTR [ebp-0x50]
  41456c:	and    DWORD PTR ds:0x42a2fa,0x42a25e
  414576:	add    edx,ecx
  414578:	add    DWORD PTR ds:0x42a2ae,0x23c2
  414582:	xor    edx,ebx
  414584:	mov    DWORD PTR [ebp-0x50],edx
  414587:	sbb    edx,edx
  414589:	mov    edx,DWORD PTR [ebp+0x8]
  41458c:	add    ebx,DWORD PTR ds:0x42a2f6
  414592:	mov    ebx,DWORD PTR [ebp-0x4c]
  414595:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  41459f:	add    edx,edi
  4145a1:	and    edx,ebx
  4145a3:	mov    DWORD PTR [ebp-0x4c],edx
  4145a6:	and    DWORD PTR ds:0x42a2ee,0x0
  4145b0:	jmp    0x4145c2
  4145b5:	mov    edx,DWORD PTR ds:0x42a2ee
  4145bb:	inc    edx
  4145bc:	mov    DWORD PTR ds:0x42a2ee,edx
  4145c2:	cmp    DWORD PTR ds:0x42a2ee,0x1d
  4145c9:	jae    0x4145fc
  4145cf:	cmp    DWORD PTR ds:0x42a2ee,0x2d
  4145d6:	jbe    0x4145fc
  4145dc:	jmp    0x4145f7
  4145e1:	push   DWORD PTR [ebp-0x14]
  4145e4:	push   DWORD PTR [ebp-0x20]
  4145e7:	push   0x1476
  4145ec:	push   0x4291d1
  4145f1:	call   DWORD PTR ds:0x42a3ca
  4145f7:	jmp    0x4145b5
  4145fc:	mov    edx,DWORD PTR [ebp+0x8]
  4145ff:	mov    ebx,DWORD PTR [ebp-0x48]
  414602:	adc    DWORD PTR ds:0x42a29a,0x42a25e
  41460c:	lea    edx,[ebx+edx*1+0x241fcdf]
  414613:	adc    DWORD PTR ds:0x42a292,0x5ee0
  41461d:	mov    DWORD PTR [ebp-0x48],edx
  414620:	mov    edx,DWORD PTR [ebp+0x8]
  414623:	neg    ebx
  414625:	mov    ebx,0xfa5e1524
  41462a:	sub    ebx,edx
  41462c:	add    ebx,DWORD PTR [ebp-0x44]
  41462f:	mov    DWORD PTR [ebp-0x44],ebx
  414632:	mov    edx,DWORD PTR ds:0x42a36a
  414638:	mov    edx,DWORD PTR [edx]
  41463a:	and    DWORD PTR ds:0x42a2fa,edx
  414640:	mov    edx,DWORD PTR [ebp+0x8]
  414643:	xor    edx,eax
  414645:	mov    DWORD PTR ds:0x42a2f6,0x6c5b
  41464f:	add    edx,esi
  414651:	jne    0x41430a
  414657:	jmp    0x41b4b4
  41465c:	sub    DWORD PTR ds:0x42a286,0x1976
  414666:	mov    edx,DWORD PTR [ebp-0xc]
  414669:	and    DWORD PTR ds:0x42a2f6,0x0
  414673:	jmp    0x414685
  414678:	mov    ebx,DWORD PTR ds:0x42a2f6
  41467e:	inc    ebx
  41467f:	mov    DWORD PTR ds:0x42a2f6,ebx
  414685:	cmp    DWORD PTR ds:0x42a2f6,0x16
  41468c:	jae    0x4146bc
  414692:	cmp    DWORD PTR ds:0x42a2f6,0x26
  414699:	ja     0x4146bc
  41469f:	jmp    0x4146b7
  4146a4:	push   0x71cf
  4146a9:	push   DWORD PTR [ebp-0x24]
  4146ac:	push   0x8216
  4146b1:	call   DWORD PTR ds:0x42a412
  4146b7:	jmp    0x414678
  4146bc:	sub    edx,esi
  4146be:	xor    ebx,DWORD PTR ds:0x42a296
  4146c4:	xor    edx,eax
  4146c6:	sub    DWORD PTR ds:0x42a292,edx
  4146cc:	mov    DWORD PTR [ebp-0x5c],edx
  4146cf:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  4146d9:	mov    edx,DWORD PTR [ebp-0x10]
  4146dc:	mov    ebx,DWORD PTR [ebp-0x8]
  4146df:	mov    DWORD PTR ds:0x42a2a6,0x1dc1
  4146e9:	xor    edx,eax
  4146eb:	and    DWORD PTR ds:0x42a2f2,0x42a2aa
  4146f5:	xor    ebx,eax
  4146f7:	sub    edx,ebx
  4146f9:	or     DWORD PTR ds:0x42a2a2,0x5c58
  414703:	sub    edx,esi
  414705:	xor    DWORD PTR ds:0x42a2ee,0x42a272
  41470f:	xor    edx,eax
  414711:	mov    DWORD PTR ds:0x42a2c6,0x43a7
  41471b:	mov    DWORD PTR [ebp-0x10],edx
  41471e:	mov    edx,DWORD PTR [ebp-0x14]
  414721:	mov    DWORD PTR ds:0x42a27a,0x5a8e
  41472b:	mov    DWORD PTR [ebp+0x8],edx
  41472e:	jmp    0x416bda
  414733:	and    DWORD PTR ds:0x42a262,0x0
  41473d:	xor    edx,edx
  41473f:	or     edx,DWORD PTR ds:0x42a262
  414745:	inc    edx
  414746:	mov    DWORD PTR ds:0x42a262,edx
  41474c:	cmp    DWORD PTR ds:0x42a262,0xb
  414753:	jge    0x4147a6
  414759:	jmp    0x41477f
  41475e:	push   0x42a28a
  414763:	push   DWORD PTR [ebp-0x18]
  414766:	push   DWORD PTR [ebp-0x14]
  414769:	push   0x686f
  41476e:	push   0x7e68
  414773:	push   DWORD PTR [ebp-0x1c]
  414776:	push   DWORD PTR [ebp-0x14]
  414779:	call   DWORD PTR ds:0x42a3ce
  41477f:	cmp    DWORD PTR ds:0x42a262,0xa
  414786:	jne    0x414799
  41478c:	mov    edx,DWORD PTR ds:0x42a262
  414792:	inc    edx
  414793:	mov    DWORD PTR ds:0x42a262,edx
  414799:	cmp    DWORD PTR ds:0x42a262,0x18
  4147a0:	jb     0x41473d
  4147a6:	mov    edx,DWORD PTR [ebp+0x8]
  4147a9:	adc    DWORD PTR ds:0x42a2e2,edi
  4147af:	mov    ebx,DWORD PTR [ebp-0x8]
  4147b2:	adc    DWORD PTR ds:0x42a25e,0x42a292
  4147bc:	xor    edx,eax
  4147be:	add    DWORD PTR ds:0x42a29e,0x4f03
  4147c8:	xor    ebx,eax
  4147ca:	sbb    DWORD PTR ds:0x42a2e2,0x7f15
  4147d4:	sub    edx,ebx
  4147d6:	and    DWORD PTR ds:0x42a2d2,0x0
  4147e0:	mov    ebx,DWORD PTR ds:0x42a2d2
  4147e6:	inc    ebx
  4147e7:	mov    DWORD PTR ds:0x42a2d2,ebx
  4147ed:	cmp    DWORD PTR ds:0x42a2d2,0x21
  4147f4:	jle    0x414817
  4147fa:	jmp    0x41480a
  4147ff:	push   0x5080
  414804:	call   DWORD PTR ds:0x42a3d6
  41480a:	cmp    DWORD PTR ds:0x42a2d2,0x1a
  414811:	jb     0x4147e0
  414817:	sub    edx,esi
  414819:	xor    edx,eax
  41481b:	mov    DWORD PTR [ebp+0x8],edx
  41481e:	mov    edx,DWORD PTR [ebp+0x8]
  414821:	mov    ebx,DWORD PTR [ebp-0x58]
  414824:	add    edx,0x5708fa
  41482a:	imul   edx,ebx
  41482d:	mov    DWORD PTR [ebp-0x58],edx
  414830:	mov    edx,DWORD PTR [ebp+0x8]
  414833:	mov    ebx,DWORD PTR [ebp-0x54]
  414836:	add    edx,0x64f898
  41483c:	or     edx,ebx
  41483e:	mov    DWORD PTR [ebp-0x54],edx
  414841:	mov    edx,DWORD PTR [ebp+0x8]
  414844:	mov    ebx,DWORD PTR [ebp-0x50]
  414847:	add    edx,ecx
  414849:	xor    edx,ebx
  41484b:	mov    DWORD PTR [ebp-0x50],edx
  41484e:	mov    edx,DWORD PTR [ebp+0x8]
  414851:	mov    ebx,DWORD PTR [ebp-0x4c]
  414854:	add    edx,edi
  414856:	and    edx,ebx
  414858:	mov    DWORD PTR [ebp-0x4c],edx
  41485b:	mov    edx,DWORD PTR [ebp+0x8]
  41485e:	mov    ebx,DWORD PTR [ebp-0x48]
  414861:	lea    edx,[ebx+edx*1+0x241fcdf]
  414868:	mov    DWORD PTR [ebp-0x48],edx
  41486b:	mov    edx,DWORD PTR [ebp+0x8]
  41486e:	mov    ebx,0xfa5e1524
  414873:	sub    ebx,edx
  414875:	add    ebx,DWORD PTR [ebp-0x44]
  414878:	mov    DWORD PTR [ebp-0x44],ebx
  41487b:	jmp    0x416bda
  414880:	inc    esp
  414881:	arpl   WORD PTR [esi+esi*8],di
  414884:	and    al,0x96
  414886:	xchg   ch,cl
  414888:	sahf   
  414889:	pushf  
  41488a:	ja     0x41486e
  41488c:	addr16 and ch,ah
  41488f:	lds    esi,FWORD PTR [edi+0x3d837c66]
  414895:	pop    esi
  414896:	add    DWORD PTR [ebx-0x55987264],0xffffff95
  41489d:	ins    BYTE PTR es:[edi],dx
  41489e:	xchg   ecx,eax
  41489f:	jecxz  0x4148c6
  4148a1:	adc    dl,BYTE PTR ds:0xdae626c
  4148a7:	lock sub eax,0xb326ac6f
  4148ad:	xor    DWORD PTR [ecx+edi*2],edx
  4148b0:	out    0x9f,al
  4148b2:	pop    es
  4148b3:	sbb    DWORD PTR [esi+ecx*8-0x74],edx
  4148b7:	dec    esp
  4148b8:	pop    edx
  4148b9:	inc    ecx
  4148ba:	jmp    0x414914
  4148bc:	cs scas al,BYTE PTR es:[edi]
  4148be:	in     al,0xe0
  4148c0:	iret   
  4148c1:	jge    0x4148ae
  4148c3:	jns    0x414876
  4148c5:	dec    eax
  4148c6:	jmp    0x414909
  4148c8:	mov    bl,0x50
  4148ca:	add    esp,DWORD PTR [edi-0x6ed6f05a]
  4148d0:	pop    ds
  4148d1:	fld    DWORD PTR [ecx+ebp*2+0x2389b0ed]
  4148d8:	jns    0x414870
  4148da:	mov    cl,0x92
  4148dc:	dec    esp
  4148dd:	pop    ebp
  4148de:	jle    0x414914
  4148e0:	pop    esi
  4148e1:	pop    eax
  4148e2:	xchg   edx,eax
  4148e3:	sbb    eax,0x2a82b19c
  4148e8:	adc    DWORD PTR [esi],ebp
  4148ea:	ficomp DWORD PTR [edi]
  4148ec:	test   al,0xec
  4148ee:	adc    ch,dh
  4148f0:	pop    es
  4148f1:	leave  
  4148f2:	mov    BYTE PTR [edx+edx*2+0x12bd5484],al
  4148f9:	xchg   edx,eax
  4148fa:	inc    esi
  4148fb:	fnstcw WORD PTR [ebp-0xe]
  4148fe:	pop    eax
  4148ff:	jl     0x4148a9
  414901:	cmp    eax,0x5f48c78d
  414906:	ins    BYTE PTR es:[edi],dx
  414907:	leave  
  414908:	das    
  414909:	sub    DWORD PTR [edx+0x1812c697],edx
  41490f:	cld    
  414910:	and    esp,DWORD PTR [esi+0x2f]
  414913:	das    
  414914:	mov    al,ds:0xc9d65fa2
  414919:	sub    BYTE PTR [eax-0x1cadf08d],dl
  41491f:	adc    BYTE PTR [eax-0x2953c645],bh
  414925:	int    0xf8
  414927:	fadd   QWORD PTR [eax-0x28]
  41492a:	dec    edi
  41492b:	popa   
  41492c:	lds    ebx,FWORD PTR ds:0xc4c021fc
  414932:	mov    ebp,0x15864676
  414937:	pop    edx
  414938:	push   ebx
  414939:	pushf  
  41493a:	mov    ebx,0xe436da48
  41493f:	jg     0x4149a0
  414941:	xchg   ebx,eax
  414942:	push   es
  414943:	(bad)  
  414944:	pop    esp
  414945:	jp     0x41494e
  414947:	mov    ecx,0xb9ae7d90
  41494c:	mov    BYTE PTR [edi],dl
  41494e:	mov    ds,eax
  414950:	cmp    DWORD PTR ds:0xd607b4,esp
  414956:	in     al,dx
  414957:	add    al,0x63
  414959:	dec    edx
  41495a:	sbb    al,0x76
  41495c:	je     0x414935
  41495e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41495f:	pop    es
  414960:	push   ecx
  414961:	and    DWORD PTR [ecx-0x14],ebp
  414964:	in     eax,dx
  414965:	test   BYTE PTR [ebx+0x71e5a175],dl
  41496b:	repnz or BYTE PTR [esi-0x57],0xa0
  414970:	cld    
  414971:	mov    eax,fs
  414973:	pop    edi
  414974:	dec    esi
  414975:	jne    0x41497c
  414977:	xchg   edi,eax
  414978:	repnz outs dx,DWORD PTR ds:[esi]
  41497a:	sub    eax,0x8db9d503
  41497f:	mov    ah,0xe3
  414981:	ds ja  0x41495a
  414984:	push   esp
  414985:	fs sub eax,0xc3c41232
  41498b:	xor    BYTE PTR [edi+0x7b],bh
  41498e:	(bad)  
  41498f:	out    0x21,al
  414991:	jbe    0x41499f
  414993:	fadd   QWORD PTR [edi]
  414995:	and    BYTE PTR [esi-0x18],0x5
  414999:	or     al,0x24
  41499b:	aad    0x21
  41499d:	out    dx,al
  41499e:	adc    al,0xa8
  4149a0:	jg     0x41495e
  4149a2:	mov    bl,BYTE PTR [ecx-0x5]
  4149a5:	pop    edx
  4149a6:	popf   
  4149a7:	out    0x40,al
  4149a9:	jmp    0x414968
  4149ab:	jbe    0x414a2b
  4149ad:	cli    
  4149ae:	add    ebx,DWORD PTR [eax]
  4149b0:	and    al,BYTE PTR [ebx]
  4149b2:	add    esp,DWORD PTR [eax]
  4149b4:	test   BYTE PTR [edi+ecx*8-0x3],ch
  4149b8:	or     ah,BYTE PTR [ecx]
  4149ba:	clc    
  4149bb:	cdq    
  4149bc:	je     0x4149f5
  4149be:	jmp    0x4bd0:0xd431ec73
  4149c5:	ror    DWORD PTR [edx-0x3956493],0x78
  4149cc:	fcomp  st(4)
  4149ce:	int    0x23
  4149d0:	hlt    
  4149d1:	xor    al,0x95
  4149d3:	pop    ecx
  4149d4:	xchg   esi,eax
  4149d5:	add    eax,0x66974b53
  4149da:	or     dl,BYTE PTR [ebp+0x6ba0323c]
  4149e0:	mov    WORD PTR [eax+edi*4],ss
  4149e3:	out    0x9d,eax
  4149e5:	stos   BYTE PTR es:[edi],al
  4149e6:	adc    BYTE PTR [esi-0x68b6a91a],al
  4149ec:	xchg   edx,eax
  4149ed:	in     al,0x35
  4149ef:	popf   
  4149f0:	pop    esi
  4149f1:	push   esp
  4149f2:	imul   ecx,esi,0x1a
  4149f5:	scas   eax,DWORD PTR es:[edi]
  4149f6:	cld    
  4149f7:	sbb    BYTE PTR ds:0x95e05c74,0x83
  4149fe:	frstor [eax-0x58]
  414a01:	mov    bh,BYTE PTR [ebx]
  414a03:	and    eax,0x68a36a60
  414a08:	bound  esi,QWORD PTR [eax+0x59]
  414a0b:	and    al,0x6e
  414a0d:	sub    eax,0xd4cb41bf
  414a12:	repz retf 
  414a14:	xor    DWORD PTR [edx],eax
  414a16:	pusha  
  414a17:	mov    al,BYTE PTR ds:0xe0d4049b
  414a1d:	neg    DWORD PTR [edi]
  414a1f:	(bad)  
  414a20:	sub    esi,DWORD PTR [eax-0x5d]
  414a23:	sbb    BYTE PTR [edx-0x5a],bh
  414a26:	mov    dh,0x2
  414a28:	ins    DWORD PTR es:[edi],dx
  414a29:	mov    eax,0xe1e46859
  414a2e:	sbb    edx,0x54
  414a31:	repnz push edx
  414a33:	shl    DWORD PTR [ecx],cl
  414a35:	hlt    
  414a36:	push   ebx
  414a37:	pop    ss
  414a38:	jp     0x414a3d
  414a3a:	xchg   ebx,esi
  414a3c:	add    bl,bh
  414a3e:	mov    edx,0xcca03eee
  414a43:	test   al,0xab
  414a45:	mov    esp,0x54f3ef0e
  414a4a:	inc    esp
  414a4b:	push   esi
  414a4c:	data16 daa 
  414a4e:	mov    eax,ds:0xbce2fd2
  414a53:	sub    al,0x70
  414a55:	mov    esi,0x4d3e67a3
  414a5a:	pop    esp
  414a5b:	es test DWORD PTR ds:[ebx-0x6],esi
  414a60:	stos   BYTE PTR es:[edi],al
  414a61:	lods   al,BYTE PTR ds:[esi]
  414a62:	int    0x7
  414a64:	test   DWORD PTR [edx],ecx
  414a66:	push   cs
  414a67:	mov    al,ds:0xb14135c6
  414a6c:	jp     0x414a81
  414a6e:	das    
  414a6f:	sub    ebx,esi
  414a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a72:	mov    BYTE PTR [edi+0x4535d8b9],dh
  414a78:	inc    ebx
  414a79:	inc    eax
  414a7a:	loope  0x414aaa
  414a7c:	mov    ah,0x8b
  414a7e:	in     al,0x71
  414a80:	das    
  414a81:	and    edi,DWORD PTR [edi]
  414a83:	test   DWORD PTR [ebx],edi
  414a85:	pop    edx
  414a86:	ins    BYTE PTR es:[edi],dx
  414a87:	bound  edi,QWORD PTR [ecx]
  414a89:	push   ebx
  414a8a:	mov    esp,0x19270894
  414a8f:	adc    edx,DWORD PTR [ecx+0x5b214ad2]
  414a95:	(bad)  
  414a97:	jno    0x414a9c
  414a99:	push   edi
  414a9a:	(bad)  
  414a9b:	(bad)  
  414a9c:	in     al,0xe2
  414a9e:	xor    DWORD PTR [esi-0x19743a3e],edx
  414aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aa5:	or     DWORD PTR [edx-0x4dfc4412],ebp
  414aab:	lock icebp 
  414aad:	dec    esp
  414aae:	rol    DWORD PTR [ecx+0x79d0222],cl
  414ab4:	pop    eax
  414ab5:	mov    DWORD PTR [eax-0x31],ebp
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	rcl    DWORD PTR [ebx+ebx*2-0x3e7e58ed],0xa9
  414ac1:	repz mov eax,0xb8879914
  414ac7:	or     BYTE PTR [ebx+0x6f],ah
  414aca:	cwde   
  414acb:	sub    BYTE PTR [ecx*1+0x7610ac66],bh
  414ad2:	push   0x21
  414ad4:	jno    0x414acd
  414ad6:	out    dx,eax
  414ad7:	and    DWORD PTR [eax+0x403b58b7],ebx
  414add:	adc    eax,0x138acf5
  414ae2:	dec    ebx
  414ae3:	jmp    0xbe84:0xe8879162
  414aea:	imul   ebp,ecx,0x2a
  414aed:	fisttp WORD PTR [edi+ebp*8-0xd4859fb]
  414af4:	mov    ?,WORD PTR [esp+ecx*8+0x228164ce]
  414afb:	pop    eax
  414afc:	rcr    eax,0x2a
  414aff:	mov    ds:0x88abad65,al
  414b04:	scas   al,BYTE PTR es:[edi]
  414b05:	and    DWORD PTR [ebx+0x62],esi
  414b08:	mov    bl,bl
  414b0a:	mov    bl,0xb2
  414b0c:	pop    edx
  414b0d:	popa   
  414b0e:	repz jmp 0x414b07
  414b11:	cmp    ah,BYTE PTR [ebx-0x1e]
  414b14:	dec    ebp
  414b15:	or     eax,0x211ca91c
  414b1a:	pop    edi
  414b1b:	xor    ecx,DWORD PTR [ebx]
  414b1d:	mov    DWORD PTR [bx+di+0x5409],edi
  414b22:	xchg   ebp,eax
  414b23:	pop    eax
  414b24:	pop    ss
  414b25:	and    ecx,DWORD PTR [edx]
  414b27:	push   edi
  414b28:	mov    esi,DWORD PTR [bp+di-0x76]
  414b2c:	sub    dl,dl
  414b2e:	int3   
  414b2f:	ins    DWORD PTR es:[edi],dx
  414b30:	ret    
  414b31:	(bad)  [ebx+0x48a88444]
  414b37:	push   ebx
  414b38:	jl     0x414acb
  414b3a:	adc    al,0x12
  414b3c:	out    dx,al
  414b3d:	mov    dl,BYTE PTR [ebx+0x19]
  414b40:	rcl    DWORD PTR [edx-0x17],1
  414b43:	loopne 0x414b31
  414b45:	pop    ss
  414b46:	mov    dl,0x60
  414b48:	and    DWORD PTR [ecx+edi*8],0xe
  414b4c:	mov    bl,0xb3
  414b4e:	pop    ebx
  414b4f:	cli    
  414b50:	jnp    0x414adb
  414b52:	pop    edx
  414b53:	in     al,0x8c
  414b55:	stos   DWORD PTR es:[edi],eax
  414b56:	mov    al,ds:0x35f4566
  414b5b:	jns    0x414add
  414b5d:	test   DWORD PTR [ebx+eax*4],0x95fdb298
  414b64:	pusha  
  414b65:	jg     0x414b5b
  414b67:	xor    BYTE PTR [ecx-0x1b397364],0xd1
  414b6e:	rcl    DWORD PTR [edx-0x4f99d7ab],cl
  414b74:	(bad)  
  414b75:	jle    0x414b50
  414b77:	push   ebx
  414b78:	add    eax,0xdbcc7817
  414b7d:	push   esi
  414b7e:	sub    al,0x60
  414b80:	cld    
  414b81:	dec    eax
  414b82:	leave  
  414b83:	fs cli 
  414b85:	scas   al,BYTE PTR es:[edi]
  414b86:	inc    eax
  414b87:	mov    esp,DWORD PTR [edi-0x7b]
  414b8a:	push   0xffffff8f
  414b8c:	pop    esp
  414b8d:	aas    
  414b8e:	les    ebx,FWORD PTR [ebx-0x7c3c71c8]
  414b94:	dec    eax
  414b95:	mul    BYTE PTR [ecx+eax*2]
  414b98:	lds    esi,FWORD PTR [ebx]
  414b9a:	aaa    
  414b9b:	ror    BYTE PTR [ecx+ebp*2-0x4e],cl
  414b9f:	add    esi,DWORD PTR [edx]
  414ba1:	and    al,0xfe
  414ba3:	repnz in eax,dx
  414ba5:	aaa    
  414ba6:	je     0x414b70
  414ba8:	sar    DWORD PTR [eax+0x71],1
  414bab:	pushf  
  414bac:	add    ch,ah
  414bae:	test   DWORD PTR [ebx-0x9],eax
  414bb1:	es pop ebp
  414bb3:	sti    
  414bb4:	lock push edx
  414bb6:	adc    al,0xa
  414bb8:	or     BYTE PTR [ecx-0x5572f5e4],al
  414bbe:	shl    DWORD PTR [edx],1
  414bc0:	mov    al,ds:0xdca23f15
  414bc5:	pop    ss
  414bc6:	xchg   ebp,eax
  414bc7:	dec    esp
  414bc8:	sbb    BYTE PTR [edi+esi*4+0x5b39338e],dh
  414bcf:	jmp    0x414b9f
  414bd1:	mov    cl,0x7a
  414bd3:	push   0xaa294941
  414bd8:	dec    eax
  414bd9:	xchg   ebx,eax
  414bda:	lock clc 
  414bdc:	in     al,0x24
  414bde:	push   es
  414bdf:	mov    al,ds:0x69544904
  414be4:	and    DWORD PTR [ebx-0x4c],ecx
  414be7:	scas   al,BYTE PTR es:[edi]
  414be8:	lods   al,BYTE PTR ds:[esi]
  414be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bea:	daa    
  414beb:	dec    esp
  414bec:	jbe    0x414be1
  414bee:	lods   eax,DWORD PTR ds:[esi]
  414bef:	push   0x5
  414bf1:	(bad)  
  414bf3:	inc    ebp
  414bf4:	(bad)  
  414bf5:	sub    ah,BYTE PTR [eax-0x6fb6aa8]
  414bfb:	inc    edx
  414bfc:	(bad)  
  414bfe:	cli    
  414bff:	es out dx,al
  414c01:	popa   
  414c02:	dec    ecx
  414c03:	test   DWORD PTR [ecx],ecx
  414c05:	dec    edx
  414c06:	push   esi
  414c07:	loopne 0x414bd4
  414c09:	test   BYTE PTR ds:0xa97bea8e,ah
  414c0f:	fisub  WORD PTR [eax-0x7]
  414c12:	outs   dx,DWORD PTR ds:[si]
  414c14:	push   ebx
  414c15:	jbe    0x414c69
  414c17:	popa   
  414c18:	mov    ebx,0x414902b0
  414c1d:	jnp    0x414c19
  414c1f:	mov    ah,0x15
  414c21:	scas   al,BYTE PTR es:[edi]
  414c22:	pop    esi
  414c23:	stos   BYTE PTR es:[edi],al
  414c24:	xor    al,0x26
  414c26:	mov    edi,0x8dfc769b
  414c2b:	dec    esi
  414c2c:	outs   dx,BYTE PTR ds:[esi]
  414c2d:	pop    esp
  414c2e:	shl    BYTE PTR [edx],cl
  414c30:	hlt    
  414c31:	mov    BYTE PTR [ebp-0x1c],ah
  414c34:	in     eax,0x21
  414c36:	(bad)  
  414c37:	lock popf 
  414c39:	adc    al,0xb0
  414c3b:	sub    DWORD PTR [ebp+ebx*2-0x3b7f555f],edx
  414c42:	push   ss
  414c43:	sbb    DWORD PTR [esi-0x73],0x27
  414c47:	mov    ebp,0x2b0fc5f4
  414c4c:	daa    
  414c4d:	aas    
  414c4e:	mov    esp,DWORD PTR [ecx+0xb]
  414c51:	push   cs
  414c52:	js     0x414be2
  414c54:	adc    al,0x13
  414c56:	adc    DWORD PTR ds:0x9b091533,eax
  414c5c:	inc    edx
  414c5d:	ret    0xc215
  414c60:	clc    
  414c61:	mov    ds:0xd8275cce,eax
  414c66:	sub    eax,edi
  414c68:	or     eax,0xcd139c30
  414c6d:	cmp    DWORD PTR [ebx+0x44],0xffffffb7
  414c71:	pusha  
  414c72:	(bad)  
  414c73:	pop    edx
  414c74:	inc    esp
  414c75:	xor    eax,0x934a6beb
  414c7a:	out    dx,eax
  414c7b:	ror    ah,cl
  414c7d:	retf   
  414c7e:	adc    ebp,DWORD PTR [edi+0x24]
  414c81:	lods   eax,DWORD PTR ds:[esi]
  414c82:	add    ebp,ebx
  414c84:	sub    eax,0x6cdceebd
  414c89:	outs   dx,DWORD PTR ds:[esi]
  414c8a:	loope  0x414c67
  414c8c:	xchg   ebx,eax
  414c8d:	clc    
  414c8e:	stos   BYTE PTR es:[edi],al
  414c8f:	mov    esi,0x92f5e7ea
  414c94:	pop    esp
  414c95:	(bad)  
  414c96:	or     eax,0xd0241c09
  414c9b:	dec    edi
  414c9c:	cmp    edx,DWORD PTR [ebx]
  414c9e:	adc    al,0x55
  414ca0:	sub    al,BYTE PTR [ebp+0x4f]
  414ca3:	sbb    eax,0xbc9bd3db
  414ca8:	aad    0xaf
  414caa:	int    0x1e
  414cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cad:	pop    DWORD PTR [ebx-0x4fd3a3]
  414cb3:	lods   eax,DWORD PTR ds:[esi]
  414cb4:	cld    
  414cb5:	cmp    esi,0x101a2df7
  414cbb:	mov    dh,0x17
  414cbd:	gs and eax,0xa3ec0a46
  414cc3:	nop
  414cc4:	jmp    0x5e4a:0x414405e4
  414ccb:	test   bh,0x4f
  414cce:	imul   ebp,DWORD PTR ds:0x9f801bef,0x70
  414cd5:	xor    DWORD PTR [edi],edx
  414cd7:	call   0x66b9f172
  414cdc:	popf   
  414cdd:	xchg   edi,eax
  414cde:	clc    
  414cdf:	mov    WORD PTR [edi+0x7e],cs
  414ce2:	add    ebx,DWORD PTR [edx-0x2b71df0d]
  414ce8:	and    BYTE PTR [edi+0x54],0xd7
  414cec:	scas   al,BYTE PTR es:[edi]
  414ced:	sti    
  414cee:	aad    0x3e
  414cf0:	add    esp,DWORD PTR [eax+0x3087c7c4]
  414cf6:	xor    al,0x99
  414cf8:	imul   esp,DWORD PTR [esi],0x88e42cd0
  414cfe:	add    esp,DWORD PTR [eax+0xc]
  414d01:	shl    BYTE PTR [ecx+0x23],0x41
  414d05:	sbb    DWORD PTR [edi-0x7ff90f03],ebx
  414d0b:	psllq  mm5,QWORD PTR [ebp-0x34]
  414d0f:	ficom  WORD PTR [ebx]
  414d11:	jg     0x414d3a
  414d13:	or     al,0xc0
  414d15:	inc    ecx
  414d16:	push   esp
  414d17:	push   0x29
  414d19:	ret    
  414d1a:	aam    0x1
  414d1c:	mov    ebx,eax
  414d1e:	nop
  414d1f:	sbb    eax,esi
  414d21:	adc    ecx,DWORD PTR [ebx]
  414d23:	and    DWORD PTR [esi+0x7cccd00f],edi
  414d29:	cli    
  414d2a:	add    edx,DWORD PTR [edx+0x52610103]
  414d30:	sbb    ah,BYTE PTR [esi+0x4ca7ade6]
  414d36:	and    BYTE PTR [ebp-0x20],bh
  414d39:	lods   eax,DWORD PTR ds:[esi]
  414d3a:	out    0x47,eax
  414d3c:	xor    edx,ebp
  414d3e:	dec    esi
  414d3f:	cdq    
  414d40:	sbb    BYTE PTR [edi-0x1e],cl
  414d43:	aad    0xf8
  414d45:	(bad)
  414d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d4a:	inc    ebx
  414d4b:	nop
  414d4c:	dec    edx
  414d4d:	add    al,0x2c
  414d4f:	pop    ecx
  414d50:	pop    edi
  414d51:	sbb    DWORD PTR [ebx],ecx
  414d53:	mov    esp,0xfc1c7f06
  414d58:	sbb    DWORD PTR [edx+0x67efdc5c],ebx
  414d5e:	mov    ds:0xf8295147,al
  414d63:	pop    ss
  414d64:	shl    DWORD PTR [ecx+0x4e1d3192],0xc5
  414d6b:	push   edx
  414d6c:	xor    DWORD PTR [esi],ecx
  414d6e:	stos   DWORD PTR es:[edi],eax
  414d6f:	loopne 0x414da8
  414d71:	addr16 popa 
  414d73:	dec    edi
  414d74:	lea    ebx,[ebx-0xba116f9]
  414d7a:	ret    0x295b
  414d7d:	in     eax,0x6f
  414d7f:	ins    BYTE PTR es:[edi],dx
  414d80:	inc    ebp
  414d81:	mov    esp,0xa1813d10
  414d86:	xor    esi,DWORD PTR [ebx-0x14806760]
  414d8c:	enter  0x5ca4,0xb
  414d90:	ss mov ah,0xc4
  414d93:	push   esi
  414d94:	jno    0x414e0d
  414d96:	call   0x81bd9b85
  414d9b:	nop
  414d9c:	in     al,0x7d
  414d9e:	sbb    edi,0xae2cfd08
  414da4:	sar    ebx,1
  414da6:	or     al,0x5a
  414da8:	hlt    
  414da9:	leave  
  414daa:	ror    DWORD PTR [edi-0x4acbf941],0x46
  414db1:	dec    ecx
  414db2:	popf   
  414db3:	retf   0x9280
  414db6:	xchg   esp,eax
  414db7:	dec    eax
  414db8:	inc    edi
  414db9:	and    DWORD PTR [ebx],ecx
  414dbb:	jp     0x414d83
  414dbd:	test   BYTE PTR cs:[esi],ch
  414dc0:	jge    0x414dc6
  414dc2:	fwait
  414dc3:	loopne 0x414d57
  414dc5:	inc    BYTE PTR ds:0x8eadc6bf
  414dcb:	sbb    BYTE PTR [ecx-0x662d2346],al
  414dd1:	rol    BYTE PTR [esi+0x7a99fe86],cl
  414dd7:	xchg   edx,eax
  414dd8:	test   DWORD PTR ds:0x7c65461a,0xc4088518
  414de2:	out    0xf8,eax
  414de4:	inc    esp
  414de5:	bnd jnp 0x414dc6
  414de8:	idiv   BYTE PTR [edi+ebx*2-0x191178bf]
  414def:	cmp    DWORD PTR [edx-0x7f],edi
  414df2:	jl     0x414d98
  414df4:	push   edi
  414df5:	mov    cl,0x38
  414df7:	ds jbe 0x414d83
  414dfa:	int    0x41
  414dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfd:	mov    bh,0x69
  414dff:	xchg   ebx,eax
  414e00:	and    DWORD PTR [eax],0x62bc9a31
  414e06:	ret    0x598
  414e09:	add    al,0xbb
  414e0b:	xchg   esi,eax
  414e0c:	mov    ah,0xf6
  414e0e:	push   ss
  414e0f:	sar    BYTE PTR [ecx],1
  414e11:	add    ch,0x56
  414e14:	cld    
  414e15:	(bad)  
  414e17:	addr16 cli 
  414e19:	shr    DWORD PTR [eax-0xc],1
  414e1c:	test   eax,0x2e3e5062
  414e21:	stos   BYTE PTR es:[edi],al
  414e22:	in     eax,dx
  414e23:	adc    DWORD PTR [esi+esi*4+0x770b06d],eax
  414e2a:	sub    edx,esp
  414e2c:	xchg   ebp,eax
  414e2d:	scas   eax,DWORD PTR es:[edi]
  414e2e:	arpl   WORD PTR [ebx],sp
  414e30:	jmp    0xc353b17
  414e35:	(bad)  
  414e36:	jg     0x414e8a
  414e38:	xor    al,0x64
  414e3a:	retf   0xc1b8
  414e3d:	mov    ecx,?
  414e3f:	daa    
  414e40:	icebp  
  414e41:	add    DWORD PTR [ebx+0x40],0xcbf52060
  414e48:	jne    0x414de7
  414e4a:	pop    ss
  414e4b:	add    eax,0x41726829
  414e50:	mov    eax,DWORD PTR [edx]
  414e52:	xchg   ebp,eax
  414e53:	int    0x1d
  414e55:	or     DWORD PTR [edi],0x2f
  414e58:	call   0xb3bf993c
  414e5d:	outs   dx,DWORD PTR ds:[esi]
  414e5e:	push   esi
  414e5f:	mov    bl,0x58
  414e61:	mov    gs,WORD PTR [edx]
  414e63:	in     eax,0x10
  414e65:	cdq    
  414e66:	fnstsw WORD PTR cs:[eax+0x10]
  414e6a:	data16 adc al,0xfe
  414e6d:	mov    BYTE PTR [eax+0x4],al
  414e70:	push   ds
  414e71:	push   es
  414e72:	sbb    edx,DWORD PTR [esp+eax*2]
  414e75:	jno    0x414eb8
  414e77:	mov    eax,0x870cf8e4
  414e7c:	fwait
  414e7d:	jmp    0x1140:0x9e7121c6
  414e84:	xor    DWORD PTR [ebx],esi
  414e86:	cmp    DWORD PTR [edx],0xe1fa9eb6
  414e8c:	jmp    0x22f9:0xbdcc1aec
  414e93:	pop    esp
  414e94:	pop    esi
  414e95:	pop    es
  414e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e97:	sbb    al,0x69
  414e99:	inc    esp
  414e9a:	mov    ch,0xf5
  414e9c:	mov    edi,0x63ef523
  414ea1:	(bad)  
  414ea2:	pop    ebx
  414ea3:	or     DWORD PTR [edi+0x12],esi
  414ea6:	(bad)  
  414ea7:	mov    eax,ds:0x704ca486
  414eac:	sub    DWORD PTR [edx+0x7e3b06cf],edi
  414eb2:	stos   BYTE PTR es:[edi],al
  414eb3:	leave  
  414eb4:	clc    
  414eb5:	stos   BYTE PTR es:[edi],al
  414eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb7:	in     al,dx
  414eb8:	and    ebx,DWORD PTR [ebx+0x5]
  414ebb:	dec    edx
  414ebc:	fst    QWORD PTR [edx+0x5d]
  414ebf:	imul   DWORD PTR [edx-0x2c]
  414ec2:	fsubr  DWORD PTR [eax-0x9022875]
  414ec8:	addr16 test al,0xd0
  414ecb:	(bad)  
  414ecc:	sub    esp,DWORD PTR [esi+0x5d]
  414ecf:	mov    eax,0xd281ea88
  414ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed5:	mov    eax,0xf2e8e875
  414eda:	aaa    
  414edb:	xor    al,0xae
  414edd:	jne    0x414e8a
  414edf:	inc    esi
  414ee0:	sbb    BYTE PTR [esi-0x58],ch
  414ee3:	cmc    
  414ee4:	adc    DWORD PTR [bx+di-0x31],0x992b9240
  414eec:	dec    edi
  414eed:	jae    0x414efc
  414eef:	pop    ebx
  414ef0:	add    DWORD PTR [ebx*1-0x3ef6b5a],edx
  414ef7:	or     eax,0x89b5424a
  414efc:	mov    BYTE PTR [eax],ah
  414efe:	bound  ebx,QWORD PTR [ebx-0x43]
  414f01:	adc    eax,0x6f53f571
  414f06:	adc    dl,BYTE PTR [edi+eax*1]
  414f09:	pop    edx
  414f0a:	sar    esp,0xe0
  414f0d:	sbb    edi,0xffffffa6
  414f10:	sbb    cl,BYTE PTR [ecx]
  414f12:	fild   WORD PTR [ecx+0x5]
  414f15:	pusha  
  414f16:	repnz mov ds:0xac4d5e1c,eax
  414f1c:	jg     0x414f96
  414f1e:	test   eax,0x3c24eb57
  414f23:	cmp    dh,dl
  414f25:	mov    ah,0x45
  414f27:	adc    bl,BYTE PTR [eax-0x2d3b826b]
  414f2d:	ss sbb eax,0x21830cb9
  414f33:	pop    esi
  414f34:	mov    bl,0xc4
  414f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f37:	jo     0x414f30
  414f39:	mov    esp,0x4b9332ce
  414f3e:	popf   
  414f3f:	push   edi
  414f40:	ret    0x68ca
  414f43:	ja     0x414ee1
  414f45:	sbb    bl,ch
  414f47:	cmp    ebp,DWORD PTR [eax+0x4a]
  414f4a:	push   ss
  414f4b:	mov    ch,0xc9
  414f4d:	xchg   edx,eax
  414f4e:	mov    ebx,0x616cd1ff
  414f53:	stc    
  414f54:	sti    
  414f55:	lods   al,BYTE PTR ds:[esi]
  414f56:	pop    ecx
  414f57:	mov    dh,0x17
  414f59:	jae    0x414f98
  414f5b:	in     eax,dx
  414f5c:	aam    0x6d
  414f5e:	pop    es
  414f5f:	mov    esp,0x649e7734
  414f64:	jmp    0x414faf
  414f66:	push   cs
  414f67:	xor    esi,ebp
  414f69:	lods   eax,DWORD PTR ds:[esi]
  414f6a:	je     0x414eec
  414f6c:	adc    ecx,edx
  414f6e:	call   0xfe1936c6
  414f73:	mov    BYTE PTR [ecx+0x6a],dl
  414f76:	inc    eax
  414f77:	mov    ah,0x4f
  414f79:	fwait
  414f7a:	push   0xffffff8d
  414f7c:	fisttp QWORD PTR [edi-0x57]
  414f7f:	push   ebx
  414f80:	hlt    
  414f81:	pop    ds
  414f82:	test   DWORD PTR [edi+0x66],0x27911220
  414f89:	xor    dl,dh
  414f8b:	xchg   ecx,eax
  414f8c:	outs   dx,DWORD PTR ds:[esi]
  414f8d:	sbb    ebp,DWORD PTR [ebx]
  414f8f:	scas   eax,DWORD PTR es:[edi]
  414f90:	mov    DWORD PTR [esi],esi
  414f92:	shr    DWORD PTR [ecx+0x31],cl
  414f95:	sti    
  414f96:	cmp    ch,BYTE PTR [ebp+0x6da784f7]
  414f9c:	sub    bh,al
  414f9e:	fs mov esp,0x6ec1ddfe
  414fa4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414fa6:	or     eax,0x49641df2
  414fab:	push   ecx
  414fac:	and    cl,BYTE PTR [ecx-0x1448998a]
  414fb2:	jmp    FWORD PTR [edx+esi*2+0x75]
  414fb6:	push   es
  414fb7:	mov    eax,DWORD PTR [ecx*1+0x71d55b8a]
  414fbe:	test   BYTE PTR [esp+edx*8+0x58d8af27],ch
  414fc5:	pop    ebx
  414fc6:	ss mov ah,0xbd
  414fc9:	push   ss
  414fca:	sub    DWORD PTR [eax],edx
  414fcc:	stos   BYTE PTR es:[edi],al
  414fcd:	mov    ebx,0x144e8516
  414fd2:	out    0xd,eax
  414fd4:	and    bl,BYTE PTR [ecx+0x7a72dc19]
  414fda:	jnp    0x41505b
  414fdc:	sahf   
  414fdd:	push   edx
  414fde:	int    0x30
  414fe0:	call   0x3b8fb836
  414fe5:	cld    
  414fe6:	js     0x41505f
  414fe8:	mov    esi,0xc5cd7def
  414fed:	out    dx,eax
  414fee:	xchg   edx,eax
  414fef:	daa    
  414ff0:	mov    ds:0x4642a395,eax
  414ff5:	lock into 
  414ff7:	les    edi,FWORD PTR [ecx+edx*2]
  414ffa:	add    BYTE PTR [eax-0x4],al
  414ffd:	pop    edx
  414ffe:	jmp    0x414f8e
  415000:	and    ebx,DWORD PTR [eax]
  415002:	imul   ebp,DWORD PTR [eax+ecx*4],0xdbcd2fcf
  415009:	lods   al,BYTE PTR ds:[esi]
  41500a:	xor    esp,DWORD PTR [edx-0x78]
  41500d:	or     esp,esp
  41500f:	and    al,0x5
  415011:	ror    esp,0xec
  415014:	std    
  415015:	sbb    BYTE PTR [edx-0x775ce51d],cl
  41501b:	int    0xcb
  41501d:	leave  
  41501e:	loop   0x414ff7
  415020:	xchg   dl,ah
  415022:	xor    DWORD PTR ds:0x9fa0d9cb,ebp
  415028:	into   
  415029:	imul   ebp,DWORD PTR [ecx-0x2c155cd9],0x2e63138c
  415033:	data16 mov al,0x1f
  415036:	js     0x41504d
  415038:	dec    ecx
  415039:	or     BYTE PTR [esi+0x65],ah
  41503c:	pop    ebp
  41503d:	pop    ss
  41503e:	mov    esi,0x76e2e0a2
  415043:	(bad)  
  415044:	pushf  
  415045:	push   es
  415046:	jle    0x414ffd
  415048:	and    eax,0xf5a46a7d
  41504d:	dec    esi
  41504e:	ret    
  41504f:	or     DWORD PTR [ebx+0x79cfaaca],ebx
  415055:	pop    ecx
  415056:	xor    BYTE PTR [ebx-0x61],al
  415059:	dec    esp
  41505a:	xchg   ebp,eax
  41505b:	dec    ebx
  41505c:	mov    esi,0x6c97b3c6
  415061:	xlat   BYTE PTR ds:[ebx]
  415062:	imul   eax,DWORD PTR ds:0xfbbfcb4d,0x9720bb35
  41506c:	sbb    edx,DWORD PTR [esi]
  41506e:	mov    edx,ebx
  415070:	xchg   ebp,eax
  415071:	pop    ecx
  415072:	and    DWORD PTR ds:0x1e016119,ecx
  415078:	ins    BYTE PTR es:[edi],dx
  415079:	and    al,BYTE PTR [esi]
  41507b:	arpl   ax,sp
  41507d:	fs (bad) 
  41507f:	mov    ebp,0x4edfee78
  415084:	gs inc esi
  415086:	lahf   
  415087:	add    eax,0x6471d948
  41508c:	js     0x4150a2
  41508e:	push   ebp
  41508f:	shr    cl,cl
  415091:	imul   esi,DWORD PTR [edx],0x15071f98
  415097:	xchg   esi,eax
  415098:	int    0xfe
  41509a:	stos   BYTE PTR es:[edi],al
  41509b:	push   cs
  41509c:	lea    eax,[eax+0x4f1b905b]
  4150a2:	leave  
  4150a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a4:	shl    BYTE PTR [ebx],1
  4150a6:	jae    0x41510d
  4150a8:	stc    
  4150a9:	mov    dl,0x0
  4150ab:	rcl    BYTE PTR [esi-0x4c6971c],cl
  4150b1:	sti    
  4150b2:	jmp    0xf74a:0x99bb4821
  4150b9:	imul   eax,ebx,0x6fe72852
  4150bf:	enter  0xb99c,0x1b
  4150c3:	jno    0x4150c8
  4150c5:	mov    BYTE PTR [ebx+ecx*8+0x20],bl
  4150c9:	test   eax,0x402bfa76
  4150ce:	call   0x684baf5
  4150d3:	scas   al,BYTE PTR es:[edi]
  4150d4:	ss or  al,0xaa
  4150d7:	cmp    ecx,esp
  4150d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150da:	ins    BYTE PTR es:[edi],dx
  4150db:	call   0xf4ae:0xc141408d
  4150e2:	inc    eax
  4150e3:	inc    ebp
  4150e4:	xor    DWORD PTR [ecx-0x42],edi
  4150e7:	mov    ebx,0x591c237c
  4150ec:	or     al,0xd7
  4150ee:	(bad)  
  4150ef:	jge    0x4150cf
  4150f1:	inc    esp
  4150f2:	mov    bl,0x46
  4150f4:	and    ah,ah
  4150f6:	cdq    
  4150f7:	ins    BYTE PTR es:[edi],dx
  4150f8:	jmp    0x41510a
  4150fa:	xchg   DWORD PTR [ecx-0x57],esp
  4150fd:	cmc    
  4150fe:	test   al,0xd9
  415100:	setnp  ah
  415103:	xchg   esp,eax
  415104:	out    dx,al
  415105:	repnz (bad) 
  415107:	enter  0xbeda,0x90
  41510b:	xor    edi,DWORD PTR [ecx+0x62]
  41510e:	loop   0x4150a4
  415110:	pop    eax
  415111:	stos   DWORD PTR es:[edi],eax
  415112:	pop    ebx
  415113:	je     0x415186
  415115:	aaa    
  415116:	push   es
  415117:	nop
  415118:	pop    ecx
  415119:	mov    ebp,0xe4bbf030
  41511e:	sbb    eax,0x27ffaa6a
  415123:	lods   al,BYTE PTR ds:[esi]
  415124:	aaa    
  415125:	shl    BYTE PTR [eax],cl
  415127:	dec    edx
  415128:	scas   al,BYTE PTR es:[edi]
  415129:	pop    ss
  41512a:	in     al,0x43
  41512c:	call   0x1b576f21
  415131:	mov    ss,WORD PTR [edi-0x5c]
  415134:	xchg   ebp,eax
  415135:	retf   0x3dda
  415138:	cdq    
  415139:	jno    0x415130
  41513b:	add    edx,esi
  41513d:	adc    ah,BYTE PTR [ebp-0x21834240]
  415143:	ss imul edi,edi,0xfffffffd
  415147:	sub    al,0xe7
  415149:	dec    edi
  41514a:	pop    edi
  41514b:	inc    ebp
  41514c:	jbe    0x415102
  41514e:	or     ah,bh
  415150:	rcr    BYTE PTR [ecx+0x1],0x11
  415154:	cli    
  415155:	adc    BYTE PTR [esi+0x7f345b14],al
  41515b:	jbe    0x415153
  41515d:	mov    ds:0x22cd6133,al
  415162:	push   edx
  415163:	or     BYTE PTR [ecx-0x6f],bl
  415166:	rcl    BYTE PTR [ebx-0x50],cl
  415169:	aad    0x62
  41516b:	retf   0xef5f
  41516e:	call   0x88ae:0xa2cbb685
  415175:	jo     0x4151d3
  415177:	mov    edx,0x14cbb346
  41517c:	add    al,0x72
  41517e:	pusha  
  41517f:	jmp    0x97663340
  415184:	sbb    ecx,ecx
  415186:	mov    ah,BYTE PTR [ebp-0x30b4c1d7]
  41518c:	or     eax,0x856d4d87
  415191:	pop    edx
  415192:	mov    bl,0xcb
  415194:	jl     0x415148
  415196:	in     al,0x77
  415198:	mov    ebp,0x81f2ad31
  41519d:	imul   ebp,DWORD PTR [ecx+eiz*2],0xb384150b
  4151a4:	mov    DWORD PTR [edx-0x4b],edi
  4151a7:	(bad)  
  4151a8:	pop    ds
  4151a9:	add    dh,BYTE PTR [edx-0x77]
  4151ac:	icebp  
  4151ad:	je     0x41517b
  4151af:	or     BYTE PTR [edx+0x4f],0x16
  4151b3:	cdq    
  4151b4:	aam    0xde
  4151b6:	mov    ecx,0x89d61e39
  4151bb:	mov    esi,0x3f9e866d
  4151c0:	jmp    0x897:0x315d6d90
  4151c7:	jns    0x4151e6
  4151c9:	inc    esi
  4151ca:	(bad)  
  4151cb:	icebp  
  4151cc:	js     0x4151d3
  4151ce:	xlat   BYTE PTR ds:[ebx]
  4151cf:	or     al,0xc9
  4151d1:	pushf  
  4151d2:	js     0x41519c
  4151d4:	jo     0x4151d3
  4151d6:	adc    DWORD PTR [ebp-0x6a],0x366400ed
  4151dd:	or     ebp,DWORD PTR [ecx+0xb24a328]
  4151e3:	mov    dh,0x2f
  4151e5:	lds    esi,FWORD PTR [ecx+0x7c]
  4151e8:	xchg   edx,eax
  4151e9:	sub    DWORD PTR [ebp+0x48],0xffffffa9
  4151ed:	inc    esp
  4151ee:	inc    edx
  4151ef:	pop    ds
  4151f0:	fldcw  WORD PTR [ebx-0x4d96c1ed]
  4151f6:	xor    eax,0x41e7dac9
  4151fb:	ja     0x415214
  4151fd:	adc    eax,0xd842593c
  415202:	mov    bl,0x36
  415204:	push   ecx
  415205:	mov    dl,BYTE PTR [edi+0x1f]
  415208:	jnp    0x4151f8
  41520a:	es das 
  41520c:	pop    eax
  41520d:	aaa    
  41520e:	rol    BYTE PTR [ebp+0x4b229d22],cl
  415214:	js     0x415289
  415216:	mov    bl,0x6d
  415218:	in     eax,dx
  415219:	jo     0x4151b3
  41521b:	lds    eax,FWORD PTR [ebx-0x6d]
  41521e:	dec    edx
  41521f:	add    DWORD PTR [ebx],0x6f
  415222:	xchg   esp,eax
  415223:	cld    
  415224:	mov    ah,0x43
  415226:	call   0x7370bc1b
  41522b:	xchg   ecx,eax
  41522c:	xchg   DWORD PTR [eax-0x2f],ecx
  41522f:	push   ebp
  415230:	inc    eax
  415231:	jg     0x415273
  415233:	js     0x41524f
  415235:	sbb    edi,edi
  415237:	mov    ebp,eax
  415239:	rol    DWORD PTR [eax],cl
  41523b:	sar    BYTE PTR [esi-0x3],cl
  41523e:	cdq    
  41523f:	pop    edi
  415240:	out    dx,eax
  415241:	fild   QWORD PTR [esi]
  415243:	mov    eax,0xd2313674
  415248:	outs   dx,BYTE PTR ds:[esi]
  415249:	enter  0xe411,0xa2
  41524d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41524e:	les    eax,FWORD PTR [ecx-0x76]
  415251:	sub    eax,0x1a5e4865
  415256:	xor    dh,BYTE PTR [ebx]
  415258:	std    
  415259:	and    al,0xd3
  41525b:	mov    ch,BYTE PTR [ebx]
  41525d:	push   edx
  41525e:	outs   dx,BYTE PTR ds:[esi]
  41525f:	mov    edi,0x1c301235
  415264:	add    al,BYTE PTR [esi-0x75dd56cb]
  41526a:	adc    DWORD PTR [ebx],0x3f1b78c8
  415270:	dec    edi
  415271:	mov    esi,0x5575e19a
  415276:	mov    dh,0x42
  415278:	xor    eax,0x5348f3bd
  41527d:	adc    DWORD PTR [edx+ebx*4+0x52],ebp
  415281:	xchg   DWORD PTR [esi+0x4f57d51c],esp
  415287:	jl     0x4152cd
  415289:	adc    bh,0x62
  41528c:	aaa    
  41528d:	xchg   ecx,eax
  41528e:	dec    ebx
  41528f:	jp     0x415256
  415291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415292:	jo     0x41524c
  415294:	dec    esi
  415295:	sbb    edx,DWORD PTR [ebx+0x6b]
  415298:	cmp    esi,DWORD PTR [edi-0x6609201]
  41529e:	daa    
  41529f:	fisttp WORD PTR [ebx-0x2ee942f9]
  4152a5:	pop    ebx
  4152a6:	in     eax,dx
  4152a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a8:	popa   
  4152a9:	add    BYTE PTR [ecx-0x39],ah
  4152ac:	es jmp 0x4152da
  4152af:	mov    esi,DWORD PTR [ebx-0x229cec5c]
  4152b5:	(bad)  
  4152b6:	jns    0x4152b2
  4152b8:	pop    es
  4152b9:	mov    ss,edx
  4152bb:	lds    edx,FWORD PTR [edx+0x39fb566a]
  4152c1:	and    BYTE PTR [ecx],cl
  4152c3:	sti    
  4152c4:	adc    DWORD PTR [ebp+0x627a3bb2],ebp
  4152ca:	push   ss
  4152cb:	(bad)  
  4152cc:	in     al,dx
  4152cd:	jne    0x4152b6
  4152cf:	mov    gs,WORD PTR [esi+0x57]
  4152d2:	and    dh,BYTE PTR [esi-0x5435e239]
  4152d8:	out    0x58,eax
  4152da:	rol    DWORD PTR [ecx-0x7e],0x66
  4152de:	mov    esi,0x1bfa5fe3
  4152e3:	retf   0xba54
  4152e6:	test   al,0x61
  4152e8:	xor    BYTE PTR [edx-0x4b],0xd5
  4152ec:	adc    eax,0xa1f9ec61
  4152f1:	mov    bh,0x85
  4152f3:	jmp    0x451d:0x89f0f77e
  4152fa:	ins    BYTE PTR es:[edi],dx
  4152fb:	sar    DWORD PTR [edx],0x9
  4152fe:	mov    dl,0xc7
  415300:	xchg   BYTE PTR [ecx],dl
  415302:	test   dh,cl
  415304:	push   ebp
  415305:	je     0x415362
  415307:	adc    ebx,DWORD PTR [ebx+0x12e348e7]
  41530d:	add    ebx,eax
  41530f:	fwait
  415310:	xchg   esi,eax
  415311:	fsubp  st(2),st
  415313:	xor    BYTE PTR [edx+eiz*8-0x67],0x4b
  415318:	inc    esp
  415319:	movzx  edi,WORD PTR [edi-0x25e81ee6]
  415320:	dec    eax
  415321:	xor    DWORD PTR ds:0x924938f9,esi
  415327:	retf   
  415328:	(bad)  
  415329:	clc    
  41532a:	popf   
  41532b:	outs   dx,BYTE PTR ds:[si]
  41532d:	test   esp,0xb2f640b3
  415333:	retf   0x2853
  415336:	outs   dx,DWORD PTR ds:[esi]
  415337:	sub    BYTE PTR [eax-0x3c],dl
  41533a:	aas    
  41533b:	ds push ecx
  41533d:	cmp    eax,0x25e7f888
  415342:	xlat   BYTE PTR ds:[ebx]
  415343:	xor    bh,bh
  415345:	push   edi
  415346:	rol    ah,cl
  415348:	repz jne 0x415312
  41534b:	out    dx,al
  41534c:	sub    BYTE PTR [eax+ecx*2],0xc
  415350:	jae    0x4152fc
  415352:	add    ah,ch
  415354:	inc    ecx
  415355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415356:	sbb    edx,DWORD PTR ss:[edx+esi*2+0x21b95b18]
  41535e:	mov    ah,0x73
  415360:	(bad)  
  415361:	jo     0x41537b
  415363:	sub    DWORD PTR [eax+ebp*2+0x418853],ecx
  41536a:	out    0x66,eax
  41536c:	cli    
  41536d:	stos   BYTE PTR es:[edi],al
  41536e:	add    al,0x50
  415370:	repnz xchg esp,eax
  415372:	cs aad 0x3e
  415375:	add    dl,0x59
  415378:	jae    0x415373
  41537a:	pusha  
  41537b:	jp     0x41537f
  41537d:	mov    ds:0x810c75,al
  415382:	and    eax,DWORD PTR [eax]
  415384:	int3   
  415385:	sub    eax,DWORD PTR [edx-0x6e]
  415388:	or     eax,0x3b3f989
  41538d:	dec    esi
  41538e:	popf   
  41538f:	rcl    DWORD PTR [eax],cl
  415391:	mov    bh,0x88
  415393:	(bad)  
  415395:	pusha  
  415396:	(bad)  
  415397:	dec    edx
  415398:	push   esp
  415399:	stos   BYTE PTR es:[edi],al
  41539a:	dec    edi
  41539b:	mov    ch,0xe3
  41539d:	mov    bl,0x81
  41539f:	dec    esi
  4153a0:	xchg   esp,eax
  4153a1:	lock stos DWORD PTR es:[edi],eax
  4153a3:	mov    dh,0x94
  4153a5:	nop
  4153a6:	xlat   BYTE PTR ds:[ebx]
  4153a7:	sbb    al,0x2
  4153a9:	fnstsw WORD PTR [esi+0x5c]
  4153ac:	and    eax,0x36a954d
  4153b1:	js     0x415398
  4153b3:	rcl    ecx,cl
  4153b5:	xlat   BYTE PTR ds:[ebx]
  4153b6:	(bad)  
  4153b7:	pop    ebx
  4153b8:	mov    ch,BYTE PTR [esi-0x6f]
  4153bb:	cmp    cl,cl
  4153bd:	xor    ebx,esp
  4153bf:	retf   
  4153c0:	mov    bh,0xcd
  4153c2:	aad    0xf6
  4153c4:	mov    cl,0x82
  4153c6:	and    edx,ebx
  4153c8:	imul   edi,DWORD PTR [eax],0x42
  4153cb:	push   ecx
  4153cc:	push   0xbb1df1f
  4153d1:	scas   eax,DWORD PTR es:[edi]
  4153d2:	fxch   st(4)
  4153d4:	dec    eax
  4153d5:	fwait
  4153d6:	loop   0x415444
  4153d8:	retf   
  4153d9:	aas    
  4153da:	js     0x415448
  4153dc:	mov    ch,0xfa
  4153de:	cmp    edi,0xffffff8e
  4153e1:	gs gs push eax
  4153e4:	sub    eax,0xf46d502a
  4153e9:	sbb    DWORD PTR [ebp-0x5a],eax
  4153ec:	stos   BYTE PTR es:[edi],al
  4153ed:	cwde   
  4153ee:	imul   ebx,DWORD PTR [eax-0x192378ed],0x755a5911
  4153f8:	xor    BYTE PTR [ebx+edx*8],ah
  4153fb:	mov    DWORD PTR [ecx-0x7b],eax
  4153fe:	loopne 0x4153b8
  415400:	les    esp,FWORD PTR [edx]
  415402:	call   0x2598:0xe1f1bf36
  415409:	push   cs
  41540a:	(bad)  
  41540c:	rcl    BYTE PTR [eax+0x56],1
  41540f:	jmp    0xa2e3:0xcfe98f41
  415416:	or     DWORD PTR [ecx+0x296c9830],esp
  41541c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41541d:	xchg   ebp,eax
  41541e:	daa    
  41541f:	mov    eax,ds:0xd1ecf841
  415424:	xor    eax,0xe7fb5898
  415429:	mov    edi,0x7b9e1a1c
  41542e:	push   es
  41542f:	push   es
  415430:	popa   
  415431:	push   es
  415432:	xchg   ecx,eax
  415433:	mov    ch,0x96
  415435:	push   0xffffff99
  415437:	xlat   BYTE PTR ds:[ebx]
  415438:	inc    edi
  415439:	sub    DWORD PTR [ecx+0x7f58fd8e],ecx
  41543f:	sbb    cl,BYTE PTR [ecx-0x1ba0f7d4]
  415445:	scas   al,BYTE PTR es:[edi]
  415446:	inc    esp
  415447:	dec    ecx
  415448:	(bad)  
  415449:	mov    bh,0xe2
  41544b:	mov    bl,0x43
  41544d:	outs   dx,BYTE PTR ds:[esi]
  41544e:	xchg   BYTE PTR [ebx-0x633f1814],cl
  415454:	fsubr  QWORD PTR [eax]
  415456:	xor    ch,BYTE PTR [edi]
  415458:	pop    ebx
  415459:	inc    ecx
  41545a:	add    DWORD PTR ds:0xbc0277ad,ecx
  415460:	xchg   ebp,eax
  415461:	adc    eax,0x280b6d77
  415466:	pop    ebx
  415467:	sub    al,bl
  415469:	imul   edi,esp,0x6e
  41546c:	and    eax,0x3499d3c2
  415471:	fild   WORD PTR [edi]
  415473:	mov    eax,ds:0x76a7d6a9
  415478:	jne    0x4154b9
  41547a:	and    ch,BYTE PTR [eax+eax*1+0x5b]
  41547e:	xchg   esi,eax
  41547f:	cld    
  415480:	cli    
  415481:	lds    esp,FWORD PTR [ebp+0x4f]
  415484:	xor    BYTE PTR [esi-0x5d6f5abf],al
  41548a:	lods   al,BYTE PTR ds:[esi]
  41548b:	fwait
  41548c:	sbb    DWORD PTR [ebp+0x2845796],eax
  415492:	int3   
  415493:	jle    0x41548f
  415495:	mov    al,0x74
  415497:	pop    ecx
  415498:	mov    WORD PTR [ecx+0x60ca28af],ss
  41549e:	push   esi
  41549f:	sbb    al,BYTE PTR [ebx]
  4154a1:	inc    edx
  4154a2:	jp     0x415448
  4154a4:	sub    al,BYTE PTR [esi-0x70a27dc]
  4154aa:	or     ebp,DWORD PTR [ecx-0x33]
  4154ad:	bound  ebx,QWORD PTR [eax]
  4154af:	or     al,0x69
  4154b1:	leave  
  4154b2:	and    edi,eax
  4154b4:	dec    ecx
  4154b5:	sub    BYTE PTR [esi],al
  4154b7:	adc    esp,DWORD PTR [ebx+0x1]
  4154ba:	mov    bh,0xdf
  4154bc:	imul   esp,DWORD PTR [edx],0xffffffc1
  4154bf:	push   ebp
  4154c0:	jg     0x4154e1
  4154c2:	in     al,0x37
  4154c4:	imul   ebx,ebp,0x8e1a20fc
  4154ca:	repnz pop ebp
  4154cc:	pop    ebx
  4154cd:	cmc    
  4154ce:	int3   
  4154cf:	lods   al,BYTE PTR ds:[esi]
  4154d0:	dec    edx
  4154d1:	or     dl,BYTE PTR [edi-0x2d]
  4154d4:	dec    ecx
  4154d5:	pop    ds
  4154d6:	cmp    BYTE PTR [edx],cl
  4154d8:	iret   
  4154d9:	in     eax,0xf8
  4154db:	(bad)  
  4154dc:	cmp    DWORD PTR [eax],esi
  4154de:	pop    edi
  4154df:	fwait
  4154e0:	cmp    eax,0x3765b838
  4154e5:	mov    al,0xaf
  4154e7:	pop    esp
  4154e8:	ror    DWORD PTR [ebx-0x7],1
  4154eb:	inc    eax
  4154ec:	adc    al,0x95
  4154ee:	test   cl,al
  4154f0:	pusha  
  4154f1:	mov    dh,0x69
  4154f3:	rcl    BYTE PTR [ebp+0x7d],0x8d
  4154f7:	mov    eax,0x19d3a234
  4154fc:	jmp    0x4154a6
  4154fe:	pop    edx
  4154ff:	mov    edi,0xbe634743
  415504:	jmp    0xf476:0xb4bdecd4
  41550b:	pop    ecx
  41550c:	or     DWORD PTR [ebp-0x23],edx
  41550f:	sar    BYTE PTR [ebx+0x13],0xe2
  415513:	clc    
  415514:	mov    eax,ds:0x94361439
  415519:	xchg   BYTE PTR [ecx-0x67],ch
  41551c:	into   
  41551d:	iret   
  41551e:	push   0xff050440
  415523:	outs   dx,BYTE PTR ds:[esi]
  415524:	test   DWORD PTR [ecx+eiz*1-0x24a08e52],ecx
  41552b:	sti    
  41552c:	leave  
  41552d:	xor    BYTE PTR [edi-0x32],al
  415530:	mov    ss,WORD PTR [ebx]
  415532:	mov    DWORD PTR [eax+0x582c05c8],edi
  415538:	jns    0x41557f
  41553a:	mov    edx,0x575c3a3
  41553f:	std    
  415540:	jnp    0x41554f
  415542:	loopne 0x41556f
  415544:	inc    eax
  415545:	stos   BYTE PTR es:[edi],al
  415546:	xor    edx,DWORD PTR [esi]
  415548:	outs   dx,BYTE PTR ds:[esi]
  415549:	push   ss
  41554a:	ror    DWORD PTR [edx+0x1e],1
  41554d:	jecxz  0x41556f
  41554f:	rol    DWORD PTR [esi-0x4f367f76],1
  415555:	dec    ebx
  415556:	shr    DWORD PTR [ebx],cl
  415558:	adc    al,dl
  41555a:	das    
  41555b:	fwait
  41555c:	in     al,dx
  41555d:	push   cs
  41555e:	into   
  41555f:	ss or  ecx,ecx
  415562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415563:	not    esp
  415565:	jns    0x415542
  415567:	repz test al,0x3a
  41556a:	inc    eax
  41556b:	push   0xedbe520c
  415570:	aaa    
  415571:	fdivr  DWORD PTR ds:0xb3acc845
  415577:	mov    ebx,eax
  415579:	out    dx,al
  41557a:	jmp    0x520f788e
  41557f:	es (bad) 
  415582:	aaa    
  415583:	clc    
  415584:	clc    
  415585:	out    0xe8,eax
  415587:	repnz fisttp WORD PTR [ebx]
  41558a:	inc    eax
  41558b:	imul   edx,DWORD PTR [eax+0x3e2e2d11],0x44
  415592:	jge    0x415533
  415594:	and    BYTE PTR [edx+0x35edf163],cl
  41559a:	test   eax,0x1a6da873
  41559f:	cs stos BYTE PTR es:[edi],al
  4155a1:	and    bl,ch
  4155a3:	pop    esp
  4155a4:	sub    DWORD PTR [ebp-0x3385cefc],esp
  4155aa:	mov    DWORD PTR [edx],esp
  4155ac:	scas   al,BYTE PTR es:[edi]
  4155ad:	ds repz push esp
  4155b0:	js     0x415616
  4155b2:	out    dx,eax
  4155b3:	cmp    esp,DWORD PTR [esi]
  4155b5:	jecxz  0x41556b
  4155b7:	sub    cl,BYTE PTR ds:0x420bf067
  4155bd:	or     ecx,DWORD PTR [esi-0x2f]
  4155c0:	push   ss
  4155c1:	inc    edx
  4155c2:	xchg   ecx,eax
  4155c3:	and    DWORD PTR [ebx-0x7fb93acd],ecx
  4155c9:	push   es
  4155ca:	xchg   ebp,eax
  4155cb:	add    BYTE PTR [ebx+0x22b38df6],0x3
  4155d2:	sub    BYTE PTR ds:[eax-0xa9ad3d9],bh
  4155d9:	jae    0x415604
  4155db:	(bad)
  4155e0:	push   ebx
  4155e1:	xor    dh,BYTE PTR gs:[ecx]
  4155e4:	push   ds
  4155e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e6:	fld    DWORD PTR [ebp-0x7a]
  4155e9:	push   eax
  4155ea:	gs aam 0xfe
  4155ed:	mov    ds:0xd98ed4cc,eax
  4155f2:	js     0x415623
  4155f4:	or     cl,BYTE PTR [esi]
  4155f6:	sub    BYTE PTR [eax+0x17],bh
  4155f9:	test   BYTE PTR [edx],dh
  4155fb:	cmp    eax,0x1acceb93
  415600:	in     al,0x1e
  415602:	rcr    BYTE PTR [ebx+eiz*1],1
  415605:	ds (bad) 
  415607:	add    BYTE PTR [eax+0x24],cl
  41560a:	add    al,0x4a
  41560c:	xor    dh,al
  41560e:	dec    ecx
  41560f:	xchg   esp,eax
  415610:	(bad)  
  415611:	sub    eax,0x2728a298
  415616:	push   ebx
  415617:	(bad)  
  415618:	scas   al,BYTE PTR es:[edi]
  415619:	mov    ds:0xeb4b1185,al
  41561e:	xchg   edi,eax
  41561f:	xchg   edi,eax
  415620:	mov    ds:0xf8a1b06,al
  415625:	inc    ebp
  415626:	ret    
  415627:	jns    0x4155d2
  415629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41562a:	adc    eax,0xa79d5bb9
  41562f:	loope  0x41563e
  415631:	or     al,0x4d
  415633:	mov    cl,0xad
  415635:	mov    ch,0xf8
  415637:	arpl   WORD PTR [edx+ebp*1],cx
  41563a:	adc    eax,0xf6af4804
  41563f:	or     esi,esp
  415641:	pop    edx
  415642:	xor    BYTE PTR ds:0x98feac50,dh
  415648:	call   0x6e245983
  41564d:	shl    DWORD PTR [ebx],0x67
  415650:	push   0x8
  415652:	sub    esi,DWORD PTR [ebx+0x23]
  415655:	mov    bl,BYTE PTR [ecx]
  415657:	mov    bh,0xd6
  415659:	jmp    0x41564d
  41565b:	inc    ecx
  41565c:	iret   
  41565d:	mov    dh,0xe8
  41565f:	(bad)  
  415660:	cmc    
  415661:	test   al,0x24
  415663:	ret    0xa004
  415666:	(bad)  
  415667:	outs   dx,DWORD PTR ds:[esi]
  415668:	out    dx,al
  415669:	outs   dx,BYTE PTR ds:[esi]
  41566a:	repnz xor ecx,DWORD PTR [ecx-0x5147bb04]
  415671:	mov    ss,WORD PTR [ebx-0x59]
  415674:	xchg   edi,eax
  415675:	das    
  415676:	or     cl,BYTE PTR ds:0x27f5bd5a
  41567c:	adc    bh,BYTE PTR [eax]
  41567e:	daa    
  41567f:	jno    0x4156c3
  415681:	(bad)  
  415682:	sbb    al,0x9e
  415684:	ss jmp 0x4156d4
  415687:	sti    
  415688:	pop    esi
  415689:	mov    DWORD PTR [eax+0x68fc6961],ecx
  41568f:	jecxz  0x415656
  415691:	cmp    ch,BYTE PTR [ecx+edi*2+0x48]
  415695:	out    0xa3,eax
  415697:	scas   eax,DWORD PTR es:[edi]
  415698:	ret    0x1cc5
  41569b:	jecxz  0x415670
  41569d:	sti    
  41569e:	int3   
  41569f:	pop    ss
  4156a0:	ss dec ebp
  4156a2:	jae    0x415644
  4156a4:	pop    esp
  4156a5:	jns    0x4156fc
  4156a7:	pop    es
  4156a8:	cmp    bl,BYTE PTR [ebp-0x3c]
  4156ab:	gs mov edi,0xb4e7a9dd
  4156b1:	scas   eax,DWORD PTR es:[edi]
  4156b2:	hlt    
  4156b3:	add    ah,BYTE PTR [ecx-0x6505eb56]
  4156b9:	push   ds
  4156ba:	es leave 
  4156bc:	mov    ds:0x3b7cd3cc,al
  4156c1:	cdq    
  4156c2:	popf   
  4156c3:	das    
  4156c4:	cwde   
  4156c5:	push   edx
  4156c6:	and    DWORD PTR [ecx-0xda5cdcf],eax
  4156cc:	ret    
  4156cd:	aaa    
  4156ce:	sub    eax,0x5c6fa665
  4156d3:	fstp   QWORD PTR [esi+0x4f7b756f]
  4156d9:	push   ss
  4156da:	mov    edi,0x296ee059
  4156df:	lea    esi,[esi+0x38]
  4156e2:	cli    
  4156e3:	add    dh,cl
  4156e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e6:	jns    0x415746
  4156e8:	cmp    al,0xb6
  4156ea:	mov    BYTE PTR ds:0xc3593bcb,dh
  4156f0:	(bad)  
  4156f1:	bound  ebp,QWORD PTR [edi-0x2c]
  4156f4:	fld    TBYTE PTR ds:0x11f6f03e
  4156fa:	ret    0xf1f
  4156fd:	rol    ch,1
  4156ff:	add    eax,DWORD PTR [ecx+0x6c]
  415702:	cmc    
  415703:	addr16 and al,0xb8
  415706:	scas   eax,DWORD PTR es:[edi]
  415707:	add    al,0x5e
  415709:	pop    es
  41570a:	jg     0x4156d6
  41570c:	jecxz  0x4156b9
  41570e:	pop    ebx
  41570f:	jno    0x4156e1
  415711:	ins    DWORD PTR es:[edi],dx
  415712:	shl    BYTE PTR [eax],0xf4
  415715:	loopne 0x4156bc
  415717:	add    al,0xb5
  415719:	leave  
  41571a:	in     al,0x7c
  41571c:	lods   eax,DWORD PTR ds:[esi]
  41571d:	add    eax,DWORD PTR [eax]
  41571f:	lahf   
  415720:	push   edx
  415721:	or     ebp,DWORD PTR [ecx-0x17]
  415724:	ror    DWORD PTR [eax],cl
  415726:	mov    bl,ah
  415728:	fcmovu st,st(0)
  41572a:	cwde   
  41572b:	push   esi
  41572c:	or     DWORD PTR [esi+0x43],edx
  41572f:	xchg   edx,eax
  415730:	mov    ?,WORD PTR [esi+0x72]
  415733:	fldl2t 
  415735:	pop    esi
  415736:	cld    
  415737:	push   esi
  415738:	jb     0x4156d3
  41573a:	fcomp  QWORD PTR [eax+0x1]
  41573d:	repz mov ?,WORD PTR [ebx-0x53e0fcfe]
  415744:	dec    edi
  415745:	dec    ebx
  415746:	cli    
  415747:	test   BYTE PTR [edx+eiz*8],ah
  41574a:	mov    esi,edx
  41574c:	test   esi,edi
  41574e:	dec    edi
  41574f:	jle    0x4156fe
  415751:	stos   BYTE PTR es:[edi],al
  415752:	imul   ebx,DWORD PTR [ecx],0x31
  415755:	push   es
  415756:	jle    0x41577b
  415758:	jl     0x415752
  41575a:	aam    0xcc
  41575c:	xor    bh,BYTE PTR [edi+edi*8+0x18]
  415760:	mov    bl,0xab
  415762:	add    edx,DWORD PTR [ecx-0x62]
  415765:	mov    ebp,ebx
  415767:	xchg   esp,eax
  415768:	push   es
  415769:	add    BYTE PTR [esp+ebp*8+0x7599d5cd],dh
  415770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415771:	xchg   BYTE PTR [edi-0x60],cl
  415774:	loopne 0x4157aa
  415776:	test   al,0xc9
  415778:	add    BYTE PTR [edx-0x59],ch
  41577b:	add    eax,0x3b79950b
  415780:	iret   
  415781:	fidivr DWORD PTR [ebx]
  415783:	cmc    
  415784:	ror    DWORD PTR [ebx+0x5531615a],0x48
  41578b:	dec    edx
  41578c:	cmp    ch,BYTE PTR [edx]
  41578e:	in     eax,0xc6
  415790:	lock inc esp
  415792:	dec    edi
  415793:	jmp    DWORD PTR [ecx+0x30]
  415796:	mov    dl,0xd6
  415798:	jge    0x41579d
  41579a:	in     al,dx
  41579b:	dec    esp
  41579c:	mov    ch,0xb7
  41579e:	fucom  st(5)
  4157a0:	push   cs
  4157a1:	adc    BYTE PTR [ecx],dh
  4157a3:	adc    ch,BYTE PTR [edx]
  4157a5:	jmp    DWORD PTR [ebp-0x1d]
  4157a8:	adc    BYTE PTR [edx+ebx*8-0x56],0xf2
  4157ad:	cmp    eax,0x2572ae9c
  4157b2:	inc    edi
  4157b3:	pop    ebx
  4157b4:	inc    edx
  4157b5:	mov    eax,ds:0x3b81d7fa
  4157ba:	fldcw  WORD PTR [edi]
  4157bc:	or     DWORD PTR es:[ebx+0x3],0xfffffff2
  4157c1:	push   0x5
  4157c3:	fstp   QWORD PTR [ecx]
  4157c5:	xchg   esi,eax
  4157c6:	popf   
  4157c7:	inc    edx
  4157c8:	hlt    
  4157c9:	jle    0x4157f3
  4157cb:	rol    DWORD PTR [edi-0x56861e3f],cl
  4157d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d2:	inc    edi
  4157d3:	mov    eax,0xa99a1045
  4157d8:	scas   eax,DWORD PTR es:[edi]
  4157d9:	mov    eax,0xd24772ac
  4157de:	xor    esi,DWORD PTR [eiz*4+0x1a33a5c4]
  4157e5:	sbb    eax,0x520da5f3
  4157ea:	imul   edi,DWORD PTR [ebx-0x34],0xf455448e
  4157f1:	inc    edx
  4157f2:	push   edi
  4157f3:	push   ss
  4157f4:	cmp    BYTE PTR [edi-0x56f685e5],ch
  4157fa:	add    al,0xb0
  4157fc:	xor    al,0x8
  4157fe:	fst    DWORD PTR [ebp+0x6dda4dfa]
  415804:	inc    edi
  415805:	shl    DWORD PTR [ebx+0x3f],cl
  415808:	push   edx
  415809:	nop
  41580a:	scas   eax,DWORD PTR es:[edi]
  41580b:	aam    0x81
  41580d:	popf   
  41580e:	pop    esp
  41580f:	aaa    
  415810:	xchg   ebx,eax
  415811:	fmul   QWORD PTR ds:0xf428e405
  415817:	xor    al,0xf0
  415819:	ins    DWORD PTR es:[edi],dx
  41581a:	nop
  41581b:	aam    0xac
  41581d:	int3   
  41581e:	inc    edi
  41581f:	cli    
  415820:	mov    DWORD PTR [esi-0x2d],ebx
  415823:	push   es
  415824:	pop    ebp
  415825:	(bad)  
  415826:	jmp    0x415846
  415828:	jg     0x415893
  41582a:	jne    0x415866
  41582c:	hlt    
  41582d:	mov    cl,0xff
  41582f:	scas   eax,DWORD PTR es:[edi]
  415830:	aaa    
  415831:	fimul  WORD PTR [esi]
  415833:	pusha  
  415834:	add    eax,DWORD PTR [eax-0x4f]
  415837:	adc    DWORD PTR ss:[eax],esi
  41583a:	push   ss
  41583b:	lods   al,BYTE PTR ds:[esi]
  41583c:	das    
  41583d:	shr    ebx,1
  41583f:	mov    bl,0x7d
  415841:	pop    eax
  415842:	inc    edi
  415843:	push   edi
  415844:	out    0x39,al
  415846:	ret    0x1dba
  415849:	and    eax,0xd1f94ff0
  41584e:	mov    bl,0x2c
  415850:	enter  0x838e,0x5e
  415854:	or     DWORD PTR [ebx*2+0x606d89e1],ebx
  41585b:	sbb    BYTE PTR [edi+0x2b],dl
  41585e:	push   ds
  41585f:	addr16 inc ebp
  415861:	jnp    0x4158d0
  415863:	push   ebx
  415864:	jl     0x41588c
  415866:	xor    ebp,DWORD PTR [eax]
  415868:	or     BYTE PTR ds:0xf6dc766a,ch
  41586e:	push   eax
  41586f:	push   eax
  415870:	(bad)  [edi]
  415872:	and    edx,DWORD PTR [edx-0x34]
  415875:	xchg   edx,eax
  415876:	mov    al,ds:0x60813fab
  41587b:	test   DWORD PTR [ebx+0x30],ebp
  41587e:	cdq    
  41587f:	sub    eax,0x78b2c382
  415884:	xchg   ecx,eax
  415885:	or     ch,BYTE PTR [eax]
  415887:	retf   0xc968
  41588a:	jbe    0x4158a7
  41588c:	push   ecx
  41588d:	sbb    al,0x6c
  41588f:	sub    dl,al
  415891:	and    eax,0x6883ba27
  415896:	imul   eax,DWORD PTR [edi],0xffffffd9
  415899:	sbb    dh,BYTE PTR [edx+0x60]
  41589c:	xchg   edx,eax
  41589d:	scas   eax,DWORD PTR es:[edi]
  41589e:	pop    eax
  41589f:	xchg   esi,eax
  4158a0:	inc    ecx
  4158a1:	sti    
  4158a2:	stc    
  4158a3:	xchg   ebp,eax
  4158a4:	inc    eax
  4158a5:	int3   
  4158a6:	sbb    cl,bl
  4158a8:	jl     0x415913
  4158aa:	and    BYTE PTR gs:[eax],al
  4158ad:	jbe    0x415917
  4158af:	idiv   BYTE PTR [edx-0x2a]
  4158b2:	add    ebp,DWORD PTR [esp+esi*8]
  4158b5:	sbb    DWORD PTR [esi+0x4f],0x63
  4158b9:	ret    
  4158ba:	dec    edi
  4158bb:	sub    eax,0x9e76cfd0
  4158c0:	jae    0x41593c
  4158c2:	jmp    0x41593d
  4158c4:	arpl   di,sp
  4158c6:	push   cs
  4158c7:	fwait
  4158c8:	rcr    BYTE PTR [edi],0x67
  4158cb:	and    edi,esp
  4158cd:	(bad)  
  4158ce:	in     eax,0x9a
  4158d0:	fild   DWORD PTR ds:0xa553c56a
  4158d6:	out    dx,eax
  4158d7:	mov    ah,0xb3
  4158d9:	mov    ds:0x1dba8912,al
  4158de:	pop    edx
  4158df:	nop
  4158e0:	lock and al,0xa6
  4158e3:	imul   BYTE PTR [ebx-0x385a2cb]
  4158e9:	mov    eax,0x9e9d39a2
  4158ee:	pop    esp
  4158ef:	mov    eax,0x1a4e387d
  4158f4:	add    BYTE PTR [esi-0x48],dl
  4158f7:	pushf  
  4158f8:	lahf   
  4158f9:	sar    BYTE PTR [esi-0x19],0x3
  4158fd:	push   0xffffffc2
  4158ff:	cmp    BYTE PTR [ebx+0x67f79d30],dh
  415905:	adc    DWORD PTR [esi+0x3a6a30f7],ebp
  41590b:	sahf   
  41590c:	sub    eax,DWORD PTR [ecx+0x49]
  41590f:	lahf   
  415910:	mov    esi,0xd5dbb2dd
  415915:	add    edi,edi
  415917:	dec    eax
  415918:	mov    al,0x78
  41591a:	sahf   
  41591b:	int3   
  41591c:	mov    ds:0x8b625b5,eax
  415921:	mov    cl,0xbd
  415923:	and    BYTE PTR [esi+ebx*2+0x1e9fe064],dl
  41592a:	mov    eax,0xe194b8a6
  41592f:	pop    esi
  415930:	aad    0xf8
  415932:	in     al,0x8e
  415934:	sti    
  415935:	push   0x63
  415937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415938:	xchg   esp,eax
  415939:	js     0x415905
  41593b:	xchg   DWORD PTR [eax],ecx
  41593d:	sbb    BYTE PTR [ecx],ch
  41593f:	fimul  DWORD PTR [ebx]
  415941:	repnz rol bh,1
  415944:	mov    esp,0xb20ff0e
  415949:	inc    esi
  41594a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41594b:	sar    BYTE PTR [eax-0x5a2610ff],0x92
  415952:	pop    esi
  415953:	jae    0x4158eb
  415955:	loopne 0x41593a
  415957:	dec    eax
  415958:	xchg   edx,eax
  415959:	not    DWORD PTR [ebp-0x4f145b2]
  41595f:	out    dx,eax
  415960:	imul   ebp,DWORD PTR [edx],0xd323de37
  415966:	cmp    ebp,esp
  415968:	xor    ecx,DWORD PTR [esi]
  41596a:	pop    ebp
  41596b:	push   ds
  41596c:	loop   0x41596b
  41596e:	js     0x415929
  415970:	icebp  
  415971:	cs dec ecx
  415973:	jmp    0x415978
  415975:	xchg   al,dh
  415977:	enter  0xb235,0x2b
  41597b:	scas   al,BYTE PTR es:[edi]
  41597c:	leave  
  41597d:	out    dx,al
  41597e:	and    BYTE PTR [ebp+edi*4-0x177b0320],ah
  415985:	add    ecx,esi
  415987:	xor    ecx,ebp
  415989:	out    0x1d,eax
  41598b:	add    dh,BYTE PTR ds:0x85115548
  415991:	enter  0xb4ba,0x3e
  415995:	add    DWORD PTR [ebx],edx
  415997:	inc    eax
  415998:	xchg   edx,eax
  415999:	scas   eax,DWORD PTR es:[edi]
  41599a:	shl    edx,0x37
  41599d:	and    bh,cl
  41599f:	push   ebp
  4159a0:	fcomp  DWORD PTR [ebp-0x17]
  4159a3:	xchg   al,ch
  4159a5:	dec    ebp
  4159a6:	add    dh,ch
  4159a8:	rcr    DWORD PTR [edi],cl
  4159aa:	lods   al,BYTE PTR ds:[esi]
  4159ab:	pop    ds
  4159ac:	push   0x79
  4159ae:	sub    eax,0xa72978a2
  4159b3:	adc    al,0xe5
  4159b5:	iret   
  4159b6:	daa    
  4159b7:	out    dx,eax
  4159b8:	xor    BYTE PTR [edi+edx*8-0x3],dl
  4159bc:	ja     0x415986
  4159be:	jb     0x415a37
  4159c0:	fnstcw WORD PTR [ebp+0x41f2b431]
  4159c6:	cmp    bl,BYTE PTR [eax]
  4159c8:	addr16 jp 0x415a21
  4159cb:	mov    al,bl
  4159cd:	pop    ss
  4159ce:	mov    al,ds:0x707aea46
  4159d3:	mov    al,0x76
  4159d5:	imul   eax,DWORD PTR [edx-0x5d],0x2bff2ffb
  4159dc:	mul    bh
  4159de:	jno    0x415a08
  4159e0:	mov    DWORD PTR ds:0x65236e70,eax
  4159e6:	scas   eax,DWORD PTR es:[edi]
  4159e7:	xchg   DWORD PTR [esi-0x6cfe2173],edx
  4159ed:	call   0x7f8296b8
  4159f2:	int3   
  4159f3:	mov    dl,0x87
  4159f5:	mov    dh,0xb8
  4159f7:	dec    esi
  4159f8:	cld    
  4159f9:	adc    eax,0x6fa247b8
  4159fe:	mov    al,ds:0x7994258f
  415a03:	ret    
  415a04:	mov    ds:0x7d7dfcfd,eax
  415a09:	jmp    0x19bc:0x63aa4691
  415a10:	add    al,0xd9
  415a12:	mov    ecx,0x310af95
  415a17:	mov    ah,BYTE PTR [ebp+0x42408c19]
  415a1d:	mov    al,BYTE PTR [eax]
  415a1f:	xor    al,bl
  415a21:	mov    dl,0xcb
  415a23:	and    DWORD PTR [eax-0x7367611f],eax
  415a29:	popf   
  415a2a:	rcr    DWORD PTR [esi-0x79aace9b],1
  415a30:	xor    eax,0x1c9448ad
  415a35:	sahf   
  415a36:	mov    bl,0x6a
  415a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a39:	push   es
  415a3a:	test   eax,0x800575d5
  415a3f:	adc    ebx,edx
  415a41:	mov    dl,0x22
  415a43:	test   al,0x8f
  415a45:	mov    esi,0xd6beabbc
  415a4a:	xchg   ecx,eax
  415a4b:	mov    dh,0x2e
  415a4d:	sub    al,BYTE PTR [esi-0x79212cf6]
  415a53:	clc    
  415a54:	cmp    DWORD PTR [edx-0x5c],esp
  415a57:	push   edx
  415a58:	in     eax,0x43
  415a5a:	sub    dl,ch
  415a5c:	add    ah,BYTE PTR [ebx]
  415a5e:	sar    DWORD PTR [eax-0x6f],0xef
  415a62:	adc    al,0x47
  415a64:	jecxz  0x415a02
  415a66:	out    0xd0,eax
  415a68:	add    ebp,DWORD PTR [esi-0x3b]
  415a6b:	jmp    0x4159f6
  415a6d:	sbb    ecx,DWORD PTR [edi+0x18017b9e]
  415a73:	mov    edi,0x864683fd
  415a78:	in     eax,0x9
  415a7a:	imul   ebp,DWORD PTR [edx+edx*2+0x5d],0x58
  415a7f:	cmp    dl,al
  415a81:	outs   dx,DWORD PTR ds:[esi]
  415a82:	inc    esi
  415a83:	inc    ebx
  415a84:	mov    esi,0x29c2598a
  415a89:	mov    es,WORD PTR [edx+0x59ea6bf7]
  415a8f:	lds    edi,FWORD PTR [esi+ebp*4+0x67]
  415a93:	and    esi,esp
  415a95:	push   edi
  415a96:	fmul   QWORD PTR ds:0x31034bf9
  415a9c:	cmp    dl,BYTE PTR [ecx]
  415a9e:	fbstp  TBYTE PTR [ebx+0x3f]
  415aa1:	stos   BYTE PTR es:[edi],al
  415aa2:	int    0xb6
  415aa4:	cli    
  415aa5:	lds    edi,FWORD PTR [ecx+0xcab2235]
  415aab:	(bad)  
  415aac:	bound  esp,QWORD PTR [edx]
  415aae:	sub    DWORD PTR [ebp+0x0],esp
  415ab1:	les    ecx,FWORD PTR ds:0xa5fbcc55
  415ab7:	fdiv   st(7),st
  415ab9:	retf   
  415aba:	or     eax,0xac7d682b
  415abf:	xchg   ebx,ebx
  415ac1:	cld    
  415ac2:	xor    bh,BYTE PTR [edi]
  415ac4:	pusha  
  415ac5:	mov    cl,0xa6
  415ac7:	xchg   BYTE PTR [edx+0x5],bl
  415aca:	aam    0xd2
  415acc:	xchg   ecx,eax
  415acd:	mov    bh,0x2e
  415acf:	call   0x932a76da
  415ad4:	scas   eax,DWORD PTR es:[edi]
  415ad5:	and    eax,0x97f6f05
  415ada:	push   es
  415adb:	add    eax,0xb358cfc2
  415ae0:	inc    esp
  415ae1:	sub    DWORD PTR [eax-0x15],0x7
  415ae5:	cmpxchg8b QWORD PTR [edx]
  415ae8:	pop    esp
  415ae9:	jo     0x415a8a
  415aeb:	add    eax,0x64415e69
  415af0:	lods   eax,DWORD PTR ds:[esi]
  415af1:	dec    eax
  415af2:	inc    ebp
  415af3:	adc    WORD PTR [edx],dx
  415af6:	lods   eax,DWORD PTR ds:[si]
  415af8:	add    al,0xf9
  415afa:	jne    0x415ad1
  415afc:	fnstcw WORD PTR [eax+eiz*2-0x7a]
  415b00:	rcr    DWORD PTR [ecx],cl
  415b02:	sub    eax,0x4197600e
  415b07:	std    
  415b08:	mov    WORD PTR [ebx+0x14],?
  415b0b:	out    dx,eax
  415b0c:	xor    eax,0x4bdff8fe
  415b11:	jge    0x415b2f
  415b13:	fsave  [ebx-0xb]
  415b17:	les    edx,FWORD PTR [ecx+0x2f967c3c]
  415b1d:	mov    cl,0x7f
  415b1f:	cli    
  415b20:	mov    edi,0xb10b4465
  415b25:	xchg   BYTE PTR [edx+eiz*2],al
  415b28:	popf   
  415b29:	inc    ebp
  415b2a:	xor    al,0x9b
  415b2c:	hlt    
  415b2d:	cdq    
  415b2e:	mov    al,0xc0
  415b30:	xchg   esp,eax
  415b31:	(bad)  
  415b33:	push   es
  415b34:	stc    
  415b35:	hlt    
  415b36:	or     al,0xdd
  415b38:	ins    DWORD PTR es:[edi],dx
  415b39:	int3   
  415b3a:	xor    al,0xc0
  415b3c:	and    DWORD PTR [edx],edx
  415b3e:	sub    eax,0xb5311b0a
  415b43:	jmp    0x81e8:0x17bf3c75
  415b4a:	jl     0x415b23
  415b4c:	call   0x386f:0x7d64b324
  415b53:	or     al,0xa2
  415b55:	jnp    0x415b04
  415b57:	cmp    al,ch
  415b59:	pop    esp
  415b5a:	sub    BYTE PTR [edi+ebp*8],dl
  415b5d:	jno    0x415afe
  415b5f:	jp     0x415b70
  415b61:	xchg   edi,eax
  415b62:	cmc    
  415b63:	(bad)  
  415b65:	scas   eax,DWORD PTR es:[edi]
  415b66:	sbb    al,0x42
  415b68:	sub    cl,bl
  415b6a:	jne    0x415b01
  415b6c:	imul   DWORD PTR [edx]
  415b6e:	ins    DWORD PTR es:[edi],dx
  415b6f:	adc    BYTE PTR [esp+ebx*8+0x26],ch
  415b73:	cmp    eax,DWORD PTR [esi-0x25]
  415b76:	shl    BYTE PTR [edx],0x57
  415b79:	mov    eax,0xb14b4677
  415b7e:	shl    DWORD PTR [eax+ebp*1-0x49],0xf5
  415b83:	in     eax,dx
  415b84:	mov    eax,ds:0x9e1c2689
  415b89:	ja     0x415b80
  415b8b:	aaa    
  415b8c:	push   ds
  415b8d:	mov    dl,0xd2
  415b8f:	sbb    DWORD PTR [edx],ecx
  415b91:	arpl   bp,cx
  415b93:	dec    ecx
  415b94:	rcl    BYTE PTR [esi],1
  415b96:	repz dec ebx
  415b98:	sbb    al,0xa8
  415b9a:	xor    eax,DWORD PTR [ecx+0x4d]
  415b9d:	jo     0x415b7f
  415b9f:	push   0xffffff86
  415ba1:	xor    eax,DWORD PTR [ebp-0x34]
  415ba4:	adc    esi,ecx
  415ba6:	(bad)  
  415ba7:	push   esi
  415ba8:	das    
  415ba9:	xchg   esi,eax
  415baa:	mov    dh,0x50
  415bac:	stos   BYTE PTR es:[edi],al
  415bad:	jmp    0x9f03:0xdb968946
  415bb4:	mov    edi,0x6d7d99d7
  415bb9:	push   eax
  415bba:	les    ebx,FWORD PTR [ebx+eax*2-0x15b35f2c]
  415bc1:	push   ss
  415bc2:	adc    edx,DWORD PTR [esi+0x54e3703e]
  415bc8:	das    
  415bc9:	repnz mov ds:0xa9c42042,al
  415bcf:	sub    BYTE PTR [edi+0x3013381],0xbd
  415bd6:	(bad)  
  415bd7:	pop    ds
  415bd8:	and    BYTE PTR [eax+0x60],cl
  415bdb:	or     BYTE PTR [ebp+0x6d114144],al
  415be1:	add    DWORD PTR [esi],esp
  415be3:	int3   
  415be4:	jecxz  0x415b69
  415be6:	push   0xd5846c8e
  415beb:	stos   DWORD PTR es:[edi],eax
  415bec:	and    DWORD PTR [ecx-0x6],0x570fbbb
  415bf3:	(bad)  
  415bf4:	xchg   esi,eax
  415bf5:	data16 fcos 
  415bf8:	xchg   ebp,eax
  415bf9:	adc    DWORD PTR [ebx-0x2a755d59],eax
  415bff:	xchg   esi,eax
  415c00:	(bad)
  415c03:	and    eax,DWORD PTR ds:0x2ebece5b
  415c09:	xchg   esi,eax
  415c0a:	icebp  
  415c0b:	inc    ebp
  415c0c:	cmp    al,0x74
  415c0e:	aam    0x66
  415c10:	fsubp  st(0),st
  415c12:	jecxz  0x415c39
  415c14:	test   eax,0x4aaf2a1e
  415c19:	mov    cs,WORD PTR [edi]
  415c1b:	xchg   ebx,ecx
  415c1d:	in     eax,dx
  415c1e:	shl    BYTE PTR ss:[ecx+0x3d5fe99b],1
  415c25:	xchg   ch,cl
  415c27:	xchg   DWORD PTR [ecx-0x76],esp
  415c2a:	mul    DWORD PTR [ecx]
  415c2c:	mov    cl,dh
  415c2e:	inc    ebp
  415c2f:	(bad)  
  415c30:	out    dx,eax
  415c31:	push   edx
  415c32:	ss dec al
  415c35:	das    
  415c36:	dec    edi
  415c37:	inc    esp
  415c38:	mov    WORD PTR [ecx],?
  415c3a:	push   edx
  415c3b:	push   0x1233c7f8
  415c40:	adc    ah,BYTE PTR [edi+0x5e]
  415c43:	pusha  
  415c44:	jmp    0xe7c93991
  415c49:	pop    esi
  415c4a:	cmp    al,0xf7
  415c4c:	clc    
  415c4d:	mov    ah,0xa0
  415c4f:	in     al,0x91
  415c51:	cs and edi,DWORD PTR fs:[esp+ecx*2-0x267d43d]
  415c5a:	inc    edi
  415c5b:	inc    edi
  415c5c:	add    DWORD PTR [ecx+0x2c9890d2],ebx
  415c62:	cmp    al,bl
  415c64:	pop    ebp
  415c65:	cmp    ecx,ecx
  415c67:	daa    
  415c68:	(bad)  
  415c69:	daa    
  415c6a:	dec    eax
  415c6b:	xchg   esp,eax
  415c6c:	call   0x5b78:0x4c41615d
  415c73:	xchg   ebx,eax
  415c74:	mov    BYTE PTR [bp+di+0x2b],al
  415c78:	lods   eax,DWORD PTR ds:[esi]
  415c79:	js     0x415c81
  415c7b:	pop    ebx
  415c7c:	test   BYTE PTR [edi+0x5e],dl
  415c7f:	inc    esp
  415c80:	dec    eax
  415c81:	jae    0x415cce
  415c83:	retf   0x8d11
  415c86:	daa    
  415c87:	sub    esi,ebp
  415c89:	mov    al,ds:0xc3b73e0c
  415c8e:	loopne 0x415c2c
  415c90:	cs jno 0x415c9d
  415c93:	sub    al,0x59
  415c95:	dec    ecx
  415c96:	test   DWORD PTR [ebp+0x26],esp
  415c99:	data16 (bad) 
  415c9b:	push   ecx
  415c9c:	outs   dx,DWORD PTR ds:[esi]
  415c9d:	mov    bl,0x40
  415c9f:	mov    es,WORD PTR [esi]
  415ca1:	dec    ebx
  415ca2:	pop    es
  415ca3:	cmp    al,0x2e
  415ca5:	mov    edi,DWORD PTR [edx]
  415ca7:	push   ecx
  415ca8:	adc    ecx,DWORD PTR [edi+ebp*8]
  415cab:	sbb    dh,BYTE PTR [ecx]
  415cad:	xchg   ebp,eax
  415cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415caf:	retf   
  415cb0:	xchg   DWORD PTR [edx+0x32],edi
  415cb3:	dec    ebp
  415cb4:	push   esi
  415cb5:	mov    DWORD PTR [esi+0x2bba9a25],eax
  415cbb:	adc    eax,0x129cf358
  415cc0:	pop    esp
  415cc1:	push   edx
  415cc2:	mov    ds:0x51309005,al
  415cc7:	jl     0x415d21
  415cc9:	cmp    al,0x9
  415ccb:	xor    DWORD PTR [eax],0x90068f42
  415cd1:	sbb    BYTE PTR [ecx],0x4e
  415cd4:	pop    edi
  415cd5:	(bad)  
  415cd6:	rcl    DWORD PTR [edx],1
  415cd8:	add    eax,0x314a1e9f
  415cdd:	cdq    
  415cde:	iret   
  415cdf:	int3   
  415ce0:	test   DWORD PTR [edx],ebp
  415ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce3:	sar    DWORD PTR ds:0xbcf0ab61,0xb
  415cea:	jbe    0x415d43
  415cec:	xor    bl,dl
  415cee:	cwde   
  415cef:	adc    BYTE PTR [ebx-0x7fd872b7],0x3a
  415cf6:	fwait
  415cf7:	in     eax,dx
  415cf8:	lahf   
  415cf9:	test   ecx,eax
  415cfb:	lods   eax,DWORD PTR ds:[esi]
  415cfc:	mov    ds:0xc254c2b2,al
  415d01:	inc    ebp
  415d02:	inc    ebp
  415d03:	mov    bh,0xfc
  415d05:	fwait
  415d06:	lea    ebx,[edx-0x4e]
  415d09:	adc    DWORD PTR [ebp-0x6be100ed],edx
  415d0f:	loop   0x415ce4
  415d11:	outs   dx,DWORD PTR gs:[esi]
  415d13:	fwait
  415d14:	sub    BYTE PTR [esi+ebp*8-0x2bf7d150],al
  415d1b:	sbb    eax,0x448faeb3
  415d20:	mov    WORD PTR [eax-0x26],fs
  415d23:	fnstcw WORD PTR [ebx-0xf]
  415d26:	mov    edi,0x61abc6a
  415d2b:	int    0xa7
  415d2d:	mul    DWORD PTR [ecx]
  415d2f:	ss mov al,0x9a
  415d32:	fidiv  WORD PTR [ebp+0x3b7698a2]
  415d38:	test   BYTE PTR [eax],ch
  415d3a:	aaa    
  415d3b:	ret    
  415d3c:	mov    bh,0xae
  415d3e:	rol    ah,1
  415d40:	xor    dl,BYTE PTR [esi]
  415d42:	sti    
  415d43:	or     BYTE PTR [edx-0x19629c5f],ch
  415d49:	pop    eax
  415d4a:	and    al,0xc
  415d4c:	call   0x1f0f:0xae716d56
  415d53:	neg    DWORD PTR [eax+eiz*8-0x7ecfa5ca]
  415d5a:	sub    ebx,DWORD PTR [ebp+0x1005e0ed]
  415d60:	scas   al,BYTE PTR es:[edi]
  415d61:	pushf  
  415d62:	pop    ecx
  415d63:	inc    eax
  415d64:	out    dx,eax
  415d65:	(bad)
  415d68:	stc    
  415d69:	cmp    ah,BYTE PTR [eax+0x5c645b7c]
  415d6f:	in     al,0xb8
  415d71:	xchg   DWORD PTR [edi+0x77],esi
  415d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d75:	pop    ebx
  415d76:	fsubr  st,st(3)
  415d78:	out    0x39,al
  415d7a:	push   eax
  415d7b:	jo     0x415dd9
  415d7d:	sub    eax,0xaddb9b83
  415d82:	es dec edi
  415d84:	scas   al,BYTE PTR es:[edi]
  415d85:	cdq    
  415d86:	pop    ebx
  415d87:	mov    bl,0x9a
  415d89:	or     eax,0x15db3571
  415d8e:	pop    edi
  415d8f:	fmul   st(5),st
  415d91:	dec    edi
  415d92:	dec    edx
  415d93:	inc    ebp
  415d94:	inc    ebx
  415d95:	push   ecx
  415d96:	mov    eax,0x15cb23
  415d9b:	(bad)  
  415d9c:	mov    al,0xdd
  415d9e:	xor    eax,DWORD PTR [edi-0x5b]
  415da1:	cmp    eax,0xf8721ea5
  415da6:	test   al,0x6f
  415da8:	sbb    al,0x1d
  415daa:	repnz cld 
  415dac:	inc    esi
  415dad:	and    al,0x54
  415daf:	loopne 0x415d4e
  415db1:	sub    BYTE PTR [esi-0x57],bh
  415db4:	or     BYTE PTR [ebx],0x96
  415db7:	scas   al,BYTE PTR es:[edi]
  415db8:	cdq    
  415db9:	in     al,dx
  415dba:	icebp  
  415dbb:	lahf   
  415dbc:	jmp    0x415db0
  415dbe:	jbe    0x415e3b
  415dc0:	ret    0x7190
  415dc3:	xchg   edi,eax
  415dc4:	fldenv [edi+ebx*4-0x26fcd6c5]
  415dcb:	cmp    al,0xc3
  415dcd:	bound  edx,QWORD PTR [ecx]
  415dcf:	add    al,0x4e
  415dd1:	jmp    0xbfdfb6d0
  415dd6:	jge    0x415d96
  415dd8:	js     0x415e24
  415dda:	pop    ebx
  415ddb:	mov    esi,0xd088aa54
  415de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de1:	pop    eax
  415de2:	(bad)  
  415de3:	jmp    0x5c099d2
  415de8:	push   0xffffffed
  415dea:	jge    0x415de7
  415dec:	mov    DWORD PTR [ebp+eiz*8-0x718c858f],esp
  415df3:	aaa    
  415df4:	ret    
  415df5:	out    0x6c,eax
  415df7:	std    
  415df8:	fiadd  WORD PTR [eax+0x11]
  415dfb:	sub    al,0xec
  415dfd:	mov    edx,DWORD PTR [ebx]
  415dff:	hlt    
  415e00:	imul   BYTE PTR [eax+0x1e9e4009]
  415e06:	aam    0xe0
  415e08:	(bad)  
  415e09:	push   eax
  415e0a:	mov    ebx,0x36bef95b
  415e0f:	push   0x1377d07b
  415e14:	sub    ebx,DWORD PTR [ebp+0x723f9d47]
  415e1a:	mov    ecx,0x3552cf8b
  415e1f:	inc    esp
  415e20:	call   0x70bb:0x42a2180e
  415e27:	pop    ds
  415e28:	aad    0x25
  415e2a:	pcmpeqb mm2,mm2
  415e2d:	test   eax,0xb8ed7bc9
  415e32:	nop
  415e33:	lahf   
  415e34:	add    eax,0xfa96cee
  415e39:	mov    edx,gs
  415e3b:	mov    ebx,0x9f360a83
  415e40:	cmp    edi,DWORD PTR [ebp+0x53]
  415e43:	repnz dec esp
  415e45:	push   eax
  415e46:	adc    eax,0x14921c8
  415e4b:	sbb    DWORD PTR [ecx-0x13],ecx
  415e4e:	add    BYTE PTR [esi],dh
  415e50:	xchg   ecx,eax
  415e51:	aas    
  415e52:	inc    esi
  415e53:	xor    BYTE PTR [ebx],bh
  415e55:	jmp    FWORD PTR [edx+0x28]
  415e58:	or     dl,dh
  415e5a:	in     al,0x6e
  415e5c:	push   edx
  415e5d:	pusha  
  415e5e:	sbb    al,BYTE PTR [esi-0x6978bd6]
  415e64:	sub    DWORD PTR [esi+esi*2+0x105bc695],ebx
  415e6b:	iret   
  415e6c:	test   DWORD PTR [eax],eax
  415e6e:	xor    BYTE PTR [ebx],bl
  415e70:	xchg   ebp,eax
  415e71:	dec    esi
  415e72:	fisub  DWORD PTR ds:0x6e5d2e4a
  415e78:	iret   
  415e79:	fwait
  415e7a:	cli    
  415e7b:	cmp    esi,edi
  415e7d:	xor    DWORD PTR [ecx+0x2f],edi
  415e80:	es xchg ecx,eax
  415e82:	pop    ds
  415e83:	stos   BYTE PTR es:[edi],al
  415e84:	mov    ds:0xf335f6d7,eax
  415e89:	dec    ecx
  415e8a:	sti    
  415e8b:	xchg   edi,eax
  415e8c:	mov    ebx,0xa3c857c0
  415e91:	lock cmovnp ecx,DWORD PTR [eax]
  415e95:	imul   edx,DWORD PTR [ecx+0x2d],0xffffffc8
  415e99:	loopne 0x415eec
  415e9b:	imul   edx,ebx,0xb62a841e
  415ea1:	pop    eax
  415ea2:	xchg   BYTE PTR [ebp-0x32878efc],dl
  415ea8:	push   ss
  415ea9:	add    ebx,0x3ac7e255
  415eaf:	or     eax,0xa65a7329
  415eb4:	cli    
  415eb5:	ins    BYTE PTR es:[edi],dx
  415eb6:	mov    dh,ch
  415eb8:	mov    dl,bh
  415eba:	and    edi,DWORD PTR [ecx+0x24778106]
  415ec0:	pusha  
  415ec1:	add    al,0x37
  415ec3:	push   es
  415ec4:	pop    ebp
  415ec5:	in     al,0xe4
  415ec7:	gs cmp bh,0xe9
  415ecb:	push   eax
  415ecc:	sbb    dl,BYTE PTR [eax-0x30]
  415ecf:	(bad)
  415ed3:	(bad)  
  415ed4:	mov    al,0xb4
  415ed6:	into   
  415ed7:	(bad)  
  415ed8:	jmp    0x5df0:0x3023f87e
  415edf:	and    BYTE PTR [eax],cl
  415ee1:	sub    DWORD PTR [eax-0x414e57d9],edi
  415ee7:	sub    edx,esp
  415ee9:	and    bh,cl
  415eeb:	jb     0x415edc
  415eed:	into   
  415eee:	jb     0x415ea7
  415ef0:	fldenv [eax]
  415ef2:	pop    esp
  415ef3:	scas   al,BYTE PTR es:[edi]
  415ef4:	mov    cl,0xb3
  415ef6:	pop    ecx
  415ef7:	dec    ecx
  415ef8:	inc    esi
  415ef9:	mov    cs,WORD PTR [edx+0x561a9078]
  415eff:	jne    0x415f4e
  415f01:	xchg   BYTE PTR [ebp+0x16407e2f],ch
  415f07:	out    dx,eax
  415f08:	jmp    0xb3878398
  415f0d:	mov    ch,0x11
  415f0f:	fwait
  415f10:	mov    dl,0x2d
  415f12:	repz sbb al,0xb4
  415f15:	cli    
  415f16:	sar    bh,cl
  415f18:	mov    bh,0xb3
  415f1a:	mov    ch,0x1d
  415f1c:	and    ch,bl
  415f1e:	mov    bh,0xa2
  415f20:	sbb    ecx,DWORD PTR [esi]
  415f22:	pop    eax
  415f23:	cmp    esp,ebx
  415f25:	daa    
  415f26:	lods   eax,DWORD PTR ds:[esi]
  415f27:	out    0x13,eax
  415f29:	sbb    al,bh
  415f2b:	in     eax,0xc7
  415f2d:	xor    eax,0x1b2439c
  415f32:	jbe    0x415ecf
  415f34:	(bad)  
  415f35:	lods   al,BYTE PTR ds:[esi]
  415f36:	or     ah,BYTE PTR [edx+0x2e]
  415f39:	push   ecx
  415f3a:	cmp    al,0x5f
  415f3c:	push   es
  415f3d:	mov    bl,0xb
  415f3f:	push   ebp
  415f40:	xchg   edx,eax
  415f41:	sub    ecx,DWORD PTR [esp-0x7ba2f719]
  415f48:	dec    esp
  415f49:	out    0x7d,eax
  415f4b:	push   0x512f0b60
  415f50:	mov    esp,esp
  415f52:	stos   DWORD PTR es:[edi],eax
  415f53:	cmp    dh,BYTE PTR [eax-0x5]
  415f56:	push   eax
  415f57:	and    bl,BYTE PTR ds:0x2b1ed9f8
  415f5d:	adc    al,0x9b
  415f5f:	(bad)  
  415f60:	and    bl,BYTE PTR [ebp+eiz*1-0x14]
  415f64:	stos   BYTE PTR es:[edi],al
  415f65:	shr    BYTE PTR [ebx],cl
  415f67:	jecxz  0x415f62
  415f69:	out    dx,eax
  415f6a:	pop    ebp
  415f6b:	sbb    ebx,edx
  415f6d:	xor    ah,BYTE PTR [edx]
  415f6f:	jno    0x415f57
  415f71:	cmp    BYTE PTR [edx+0x54f20058],bh
  415f77:	lea    ebx,[ebx-0x6ba79a53]
  415f7d:	clc    
  415f7e:	test   eax,0x98a8ba7f
  415f83:	pop    ds
  415f84:	add    ecx,DWORD PTR [edx+0x5b]
  415f87:	sbb    DWORD PTR [ebx],edx
  415f89:	pop    es
  415f8a:	mov    esp,0xe95207b5
  415f8f:	and    BYTE PTR [esi+0x9c3213a],cl
  415f95:	xor    eax,0xb0670af9
  415f9a:	mov    al,ds:0x158d5081
  415f9f:	rol    DWORD PTR [ecx-0x71],cl
  415fa2:	rol    BYTE PTR ds:0x3f3af3f1,cl
  415fa8:	cld    
  415fa9:	jnp    0x415f86
  415fab:	mov    ebp,0x7fd0a80c
  415fb0:	mov    BYTE PTR [esi+0x3c9f5f06],dh
  415fb6:	push   es
  415fb7:	and    al,0x6
  415fb9:	or     eax,0xeac80496
  415fbe:	enter  0x31ec,0x8b
  415fc2:	xchg   esp,eax
  415fc3:	add    eax,0x37cad031
  415fc8:	retf   
  415fc9:	xor    al,0x10
  415fcb:	jmp    0xd0f7:0x62ff0d7e
  415fd2:	pop    ebx
  415fd3:	loope  0x41601f
  415fd5:	mov    ds:0x7d740fbd,eax
  415fda:	push   eax
  415fdb:	cmp    ecx,DWORD PTR [edx-0x36]
  415fde:	pop    WORD PTR [edx+edx*8-0x2fa63c01]
  415fe6:	mov    bl,0x4d
  415fe8:	mov    al,ds:0x2deeca7c
  415fed:	pop    ds
  415fee:	push   edx
  415fef:	sti    
  415ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff1:	(bad)  
  415ff2:	xchg   esi,eax
  415ff3:	(bad)
  415ff7:	frstor [ebx-0x653a68a9]
  415ffd:	cmp    BYTE PTR [ecx+0x7be0cfac],0x9d
  416004:	jbe    0x415fe4
  416006:	add    eax,0x2fdaf095
  41600b:	mov    ah,BYTE PTR [eax+0x2978377c]
  416011:	rcr    bl,cl
  416013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416014:	lods   eax,DWORD PTR ds:[esi]
  416015:	nop
  416016:	xchg   ch,bl
  416018:	jp     0x416005
  41601a:	repz sub bl,cl
  41601d:	and    edx,DWORD PTR [ebx]
  41601f:	xchg   ebx,eax
  416020:	inc    edi
  416021:	jmp    0x9b5a34f0
  416026:	xlat   BYTE PTR ds:[ebx]
  416027:	adc    BYTE PTR [edi+eiz*8-0x70],cl
  41602b:	add    BYTE PTR [ecx-0x36d87ddd],dl
  416031:	(bad)  
  416032:	add    edi,ebx
  416034:	(bad)  
  416035:	mov    edx,0x5fcc67d
  41603a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41603b:	lea    ebp,[ecx+0x53413210]
  416041:	cmp    eax,0x67089170
  416046:	lods   al,BYTE PTR ds:[esi]
  416047:	pop    ds
  416048:	mov    ah,0xc9
  41604a:	jl     0x416037
  41604c:	push   cs
  41604d:	ret    
  41604e:	out    0x88,eax
  416050:	scas   al,BYTE PTR es:[edi]
  416051:	ins    BYTE PTR es:[edi],dx
  416052:	and    ch,dl
  416054:	fadd   st,st(0)
  416056:	jo     0x415fe6
  416058:	je     0x41608d
  41605a:	fwait
  41605b:	stos   BYTE PTR es:[edi],al
  41605c:	out    0xe9,al
  41605e:	pop    ss
  41605f:	cmp    eax,0x50406c34
  416064:	and    BYTE PTR [edx],bh
  416066:	sahf   
  416067:	sbb    ebp,DWORD PTR [edx+0xb]
  41606a:	std    
  41606b:	outs   dx,DWORD PTR ds:[esi]
  41606c:	lods   al,BYTE PTR ds:[esi]
  41606d:	xlat   BYTE PTR ds:[ebx]
  41606e:	adc    eax,0x8dd1a636
  416073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416075:	stos   DWORD PTR es:[edi],eax
  416076:	push   0x594f269c
  41607b:	ds repz enter 0x8880,0xb3
  416081:	sbb    BYTE PTR [ecx],ch
  416083:	dec    edi
  416084:	xor    DWORD PTR ds:0x1fe6389f,ebx
  41608a:	inc    edx
  41608b:	mov    eax,ds:0x9751d6a6
  416090:	push   ecx
  416091:	jle    0x4160b3
  416093:	sbb    BYTE PTR [eax-0x6a],dl
  416096:	inc    edx
  416097:	fsubr  QWORD PTR ds:0x60e5157d
  41609d:	add    bh,dl
  41609f:	in     al,dx
  4160a0:	cwde   
  4160a1:	arpl   WORD PTR [ebx-0x761a5094],dx
  4160a7:	je     0x416116
  4160a9:	mov    bl,0xd
  4160ab:	ins    DWORD PTR es:[edi],dx
  4160ac:	sbb    BYTE PTR [ebx-0x21],0xd8
  4160b0:	fcom   DWORD PTR [ebx+0x692ca1a7]
  4160b6:	xchg   esi,eax
  4160b7:	lds    esi,FWORD PTR [eax]
  4160b9:	xchg   esp,eax
  4160ba:	movaps xmm1,XMMWORD PTR [ebx+0x4f996824]
  4160c1:	jg     0x41608d
  4160c3:	push   0xb400901d
  4160c8:	sbb    esi,0x16
  4160cb:	lds    eax,FWORD PTR [edx-0x5f]
  4160ce:	inc    esp
  4160cf:	(bad)  
  4160d0:	cmc    
  4160d1:	or     BYTE PTR [eax+0x365f0cc1],0xbc
  4160d8:	stos   BYTE PTR es:[edi],al
  4160d9:	gs sub DWORD PTR ds:[esi-0xd],esp
  4160de:	addr16 jle 0x416131
  4160e1:	or     ah,ah
  4160e3:	ficom  DWORD PTR [ecx-0x51c2f1a9]
  4160e9:	imul   esp,esp,0x8c1afa3
  4160ef:	or     eax,0xcaeeb247
  4160f4:	push   0xab375e42
  4160f9:	add    ebp,DWORD PTR [ecx-0x66b9dd02]
  4160ff:	lods   al,BYTE PTR ds:[esi]
  416100:	pop    esi
  416101:	arpl   WORD PTR [ecx],dx
  416103:	xchg   edx,eax
  416104:	adc    al,0x4b
  416107:	cmp    eax,0xccbe8e49
  41610c:	ins    DWORD PTR es:[edi],dx
  41610d:	js     0x41618d
  41610f:	sbb    edi,DWORD PTR [edx-0x7be71e0]
  416115:	push   ds
  416116:	pop    ss
  416117:	push   edi
  416118:	scas   eax,DWORD PTR es:[edi]
  416119:	das    
  41611a:	mov    BYTE PTR [ebx-0x27ae7add],al
  416120:	jle    0x4160f0
  416122:	call   0x70274728
  416127:	into   
  416128:	add    dl,dl
  41612a:	sbb    BYTE PTR [ecx],0x91
  41612d:	push   edx
  41612e:	pop    ebp
  41612f:	dec    ebp
  416130:	lods   al,BYTE PTR ds:[esi]
  416131:	jmp    0xfcac:0xe3808853
  416138:	fild   DWORD PTR [ebp-0x50dafc50]
  41613e:	inc    esp
  41613f:	mov    edi,0xc500feeb
  416144:	lods   al,BYTE PTR ds:[esi]
  416145:	scas   eax,DWORD PTR es:[edi]
  416146:	test   eax,0x6ca6be94
  41614b:	adc    DWORD PTR [ecx+ecx*1+0x4b251c1a],ecx
  416152:	mov    edx,DWORD PTR [ecx]
  416154:	add    ch,BYTE PTR [edx+edx*4]
  416157:	adc    eax,0xc65d2a0f
  41615c:	pushf  
  41615d:	cs in  al,dx
  41615f:	mov    WORD PTR [eax+0x27],?
  416162:	leave  
  416163:	jnp    0x4161cf
  416165:	mov    dl,0xda
  416167:	scas   al,BYTE PTR es:[edi]
  416168:	mov    al,0x53
  41616a:	mov    dl,0xfd
  41616c:	push   cs
  41616d:	gs jge 0x41615d
  416170:	js     0x416104
  416172:	cld    
  416173:	arpl   bx,bp
  416175:	out    0x66,al
  416177:	idiv   DWORD PTR ds:0x423e5cd5
  41617d:	int    0xce
  41617f:	xchg   DWORD PTR [edx-0x7e],edx
  416182:	test   DWORD PTR [esi+0x65],0x296bae70
  416189:	icebp  
  41618a:	(bad)  
  41618b:	jne    0x4161e3
  41618d:	cmp    al,bl
  41618f:	ud1    edi,DWORD PTR [ecx+0x7a]
  416193:	sahf   
  416194:	push   esi
  416195:	jmp    0x5b9c:0x27fad82e
  41619c:	cmp    eax,0xf4b6c390
  4161a1:	push   esi
  4161a2:	pop    es
  4161a3:	dec    edi
  4161a4:	mov    eax,0x227e9d99
  4161a9:	stos   DWORD PTR es:[edi],eax
  4161aa:	(bad)  
  4161ac:	lea    esp,[edx-0x7669941c]
  4161b2:	jp     0x4161e4
  4161b4:	ret    0x2409
  4161b7:	fst    QWORD PTR [ebp-0x462cabdd]
  4161bd:	or     DWORD PTR [esi-0x54410e82],ebx
  4161c3:	sbb    al,BYTE PTR [esi+ebx*1]
  4161c6:	cmp    BYTE PTR [ebx+ebx*4-0x7d],al
  4161ca:	aam    0x4a
  4161cc:	mov    edi,0xe7bc5af6
  4161d1:	test   eax,0x4be97903
  4161d6:	sub    al,0x8f
  4161d8:	out    dx,al
  4161d9:	into   
  4161da:	mov    ah,0x24
  4161dc:	imul   edi,DWORD PTR [ebp+0x34f8e926],0xfffffffe
  4161e3:	cmp    esi,DWORD PTR [ecx+0x7c]
  4161e6:	inc    esi
  4161e7:	cmp    eax,0xf8720691
  4161ec:	sbb    BYTE PTR [edx-0x183e4ed],ch
  4161f2:	push   eax
  4161f3:	das    
  4161f4:	xchg   esi,eax
  4161f5:	aas    
  4161f6:	adc    DWORD PTR [edx],eax
  4161f8:	pusha  
  4161f9:	push   ecx
  4161fa:	cli    
  4161fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fc:	retf   
  4161fd:	je     0x41624b
  4161ff:	stc    
  416200:	stos   DWORD PTR es:[edi],eax
  416201:	add    DWORD PTR [ebx],esp
  416203:	clc    
  416204:	(bad)
  416208:	inc    esi
  416209:	inc    ebx
  41620a:	es pop eax
  41620c:	sbb    ebx,edi
  41620e:	(bad)  
  41620f:	(bad)  
  416210:	adc    edx,DWORD PTR [esi+0x64]
  416213:	xchg   edi,eax
  416214:	loopne 0x4161d2
  416216:	out    dx,al
  416217:	sbb    ah,BYTE PTR [eax-0x3f]
  41621a:	jo     0x416219
  41621c:	inc    esi
  41621d:	cld    
  41621e:	xchg   ebp,eax
  41621f:	pop    ebx
  416220:	call   0xd8aa:0x90eac573
  416227:	add    DWORD PTR [ebp+0x4159ace7],edx
  41622d:	je     0x4161b3
  41622f:	jmp    0x201fddad
  416234:	push   ss
  416235:	jns    0x416238
  416237:	repnz outs dx,DWORD PTR ds:[esi]
  416239:	das    
  41623a:	jecxz  0x4162b0
  41623c:	adc    BYTE PTR [edi],bl
  41623e:	fs scas al,BYTE PTR es:[edi]
  416240:	and    edi,esi
  416242:	mov    ch,0x7b
  416244:	pop    ebx
  416245:	xor    ebx,DWORD PTR [edx+0x6d09a460]
  41624b:	mov    ah,ch
  41624d:	xchg   BYTE PTR [ecx+esi*4],ah
  416250:	sub    al,0x4b
  416252:	das    
  416253:	sbb    al,BYTE PTR [esi+0x677484d9]
  416259:	inc    edi
  41625a:	mov    esi,0xdbdead58
  41625f:	ss stos BYTE PTR es:[edi],al
  416261:	jo     0x4162b9
  416263:	mov    esi,0xa697fc33
  416268:	pushf  
  416269:	mov    dl,0x49
  41626b:	retf   0x5c15
  41626e:	idiv   bh
  416270:	jle    0x416238
  416272:	ds sbb ah,bl
  416275:	or     ch,ch
  416277:	outs   dx,DWORD PTR ds:[esi]
  416278:	or     al,0x20
  41627a:	add    BYTE PTR [eax+0x3ae24936],dl
  416280:	push   edi
  416281:	sub    bl,BYTE PTR [ebx-0x2934f0ca]
  416287:	daa    
  416288:	jg     0x4162df
  41628a:	fimul  DWORD PTR [ebx-0x5c]
  41628d:	fnstcw WORD PTR [esi]
  41628f:	fiadd  DWORD PTR [eax+eax*1+0x62a82324]
  416296:	dec    eax
  416297:	or     eax,0x6e48416a
  41629c:	xchg   esp,eax
  41629d:	gs inc ebp
  41629f:	rcl    BYTE PTR [esi-0x16],cl
  4162a2:	xor    al,0x5
  4162a4:	jmp    0xbf516c0f
  4162a9:	cmp    BYTE PTR ds:0x5b3215d1,al
  4162af:	fcom   DWORD PTR ds:0xb80db020
  4162b5:	and    al,0xce
  4162b7:	jne    0x416321
  4162b9:	adc    eax,DWORD PTR [ebp-0x33]
  4162bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162bd:	in     al,dx
  4162be:	cmp    esp,esp
  4162c0:	cmp    DWORD PTR [ecx+ebx*1+0x2b96e211],esi
  4162c7:	mov    ecx,0xecfa2ec2
  4162cc:	jno    0x4162df
  4162ce:	mov    ds:0xb3c4c983,al
  4162d3:	xor    BYTE PTR [ebx],dh
  4162d5:	or     BYTE PTR [eax],bh
  4162d7:	mov    edi,0x29ab1ac2
  4162dc:	fcomp  DWORD PTR [ecx+0x3ec5937e]
  4162e2:	or     dl,BYTE PTR [ebp+0x70]
  4162e5:	xchg   ebx,eax
  4162e6:	(bad)  
  4162e7:	inc    esp
  4162e8:	pop    esp
  4162e9:	in     eax,dx
  4162ea:	jns    0x416295
  4162ec:	lea    esi,[ebp-0x9]
  4162ef:	rol    DWORD PTR [esp+esi*1-0x64c21c2b],0xa8
  4162f7:	push   edi
  4162f8:	fbld   TBYTE PTR [edi]
  4162fa:	push   ebp
  4162fb:	mov    BYTE PTR [ebp+ebx*1-0x25327280],ch
  416302:	ja     0x4162e8
  416304:	test   eax,0x9bff4b43
  416309:	adc    BYTE PTR [eax+0x53],cl
  41630c:	cmp    BYTE PTR [ebp-0x2d3eb1ba],ah
  416312:	adc    DWORD PTR [ebp-0x249c3d5f],0xffffffbc
  416319:	(bad)  
  41631a:	xchg   BYTE PTR cs:[ebx+0x1a],cl
  41631e:	scas   al,BYTE PTR es:[edi]
  41631f:	(bad)  
  416320:	cmp    eax,0x933f5b3c
  416325:	adc    ch,al
  416327:	adc    BYTE PTR [ebp+0x7c086383],dl
  41632d:	les    ecx,FWORD PTR [esi+0x35338e01]
  416333:	fimul  WORD PTR [ecx-0x28935c0d]
  416339:	popf   
  41633a:	adc    ecx,eax
  41633c:	sbb    BYTE PTR [eax-0x386ef98d],dh
  416342:	ja     0x4162fd
  416344:	scas   eax,DWORD PTR es:[edi]
  416345:	xchg   BYTE PTR ds:0x6c8aaa01,ah
  41634b:	xchg   bh,ah
  41634d:	fs adc eax,0x446bc2c6
  416353:	mov    esp,0xe59909ef
  416358:	loope  0x4163b0
  41635a:	icebp  
  41635b:	pop    eax
  41635c:	inc    ecx
  41635d:	test   eax,0xc24fc60a
  416362:	out    dx,eax
  416363:	mov    ds:0x2db28c3c,al
  416368:	and    DWORD PTR [edx+0x66d9be4f],0x66
  41636f:	pop    edi
  416370:	xchg   esp,eax
  416371:	xchg   BYTE PTR [edi-0x489c7149],al
  416377:	jle    0x41634c
  416379:	shl    DWORD PTR [ebx],0xf7
  41637c:	dec    eax
  41637d:	lea    ebp,[esi-0x2cd2dedb]
  416383:	repnz das 
  416385:	mov    esp,0x15722764
  41638a:	or     ebx,DWORD PTR [eax]
  41638c:	mov    al,0x5b
  41638e:	sti    
  41638f:	or     BYTE PTR [ecx-0x79],dh
  416392:	pushf  
  416393:	sub    eax,0x93926a62
  416398:	cmp    edi,DWORD PTR [edx+0x69]
  41639b:	dec    ebx
  41639c:	adc    eax,0x8f0361b
  4163a1:	bound  ebp,QWORD PTR [eax+0x4f]
  4163a4:	xchg   BYTE PTR [ebx],ch
  4163a6:	mov    edx,ebx
  4163a8:	mov    al,ds:0x3fca5427
  4163ad:	stc    
  4163ae:	cwde   
  4163af:	das    
  4163b0:	push   edi
  4163b1:	aam    0x24
  4163b3:	je     0x41636c
  4163b5:	jmp    0x30e7be2f
  4163ba:	test   al,0x90
  4163bc:	xor    eax,0x800823c1
  4163c1:	add    esi,ebp
  4163c3:	test   eax,0xf2d28ef3
  4163c8:	jns    0x41637c
  4163ca:	pop    esp
  4163cb:	inc    ecx
  4163cc:	popf   
  4163cd:	add    dl,BYTE PTR [esi-0x7]
  4163d0:	fnstsw WORD PTR [edx-0x2a]
  4163d3:	(bad)  
  4163d4:	lods   al,BYTE PTR ds:[esi]
  4163d5:	(bad)  
  4163d7:	inc    ebx
  4163d8:	pop    es
  4163d9:	scas   al,BYTE PTR es:[edi]
  4163da:	cmp    al,BYTE PTR [ecx-0xd]
  4163dd:	and    ebp,eax
  4163df:	enter  0x47d2,0xb0
  4163e3:	retf   
  4163e4:	sbb    DWORD PTR [edx+edi*8+0x12379f94],ebx
  4163eb:	xchg   ebp,eax
  4163ec:	cli    
  4163ed:	xor    al,0xee
  4163ef:	aaa    
  4163f0:	popa   
  4163f1:	xchg   edx,eax
  4163f2:	lods   eax,DWORD PTR ds:[esi]
  4163f3:	and    BYTE PTR [ebx],al
  4163f5:	sub    al,BYTE PTR [esi]
  4163f7:	cmp    DWORD PTR [edx+0x726df7b0],edi
  4163fd:	jecxz  0x416438
  4163ff:	inc    esp
  416400:	out    dx,al
  416401:	sub    DWORD PTR [ecx+0x67cc14c8],0xffffffe5
  416408:	and    BYTE PTR [ebx+0x48],ah
  41640b:	inc    ebx
  41640c:	mov    edi,0xac2fd8d3
  416411:	and    BYTE PTR ds:0xf92421b,dh
  416417:	nop
  416418:	shl    WORD PTR gs:[ebp+0x2024bac6],1
  416420:	xchg   edx,eax
  416421:	mov    WORD PTR [ebx+esi*8+0x70],?
  416425:	fwait
  416426:	test   BYTE PTR [ecx],bl
  416428:	in     eax,0x4e
  41642a:	pop    edx
  41642b:	sbb    eax,0x253f0805
  416430:	mov    bh,0x33
  416432:	ds iret 
  416434:	xor    BYTE PTR fs:[ecx+0x68bd343a],al
  41643b:	adc    ch,cl
  41643d:	jbe    0x416474
  41643f:	push   0x1
  416441:	imul   ecx,DWORD PTR [ebx],0x56ad5afe
  416447:	inc    esi
  416448:	cmp    al,0x6
  41644a:	mov    WORD PTR [eax],?
  41644c:	sub    BYTE PTR [ebx],ch
  41644e:	clc    
  41644f:	mov    ch,0x39
  416451:	les    eax,FWORD PTR [edi-0x66add71e]
  416457:	ret    0x493
  41645a:	inc    eax
  41645b:	les    ebx,FWORD PTR [eax]
  41645d:	or     DWORD PTR [ecx],edx
  41645f:	jle    0x4164c2
  416461:	pop    esi
  416462:	fwait
  416463:	or     al,0xc8
  416465:	and    al,0xfd
  416467:	cwde   
  416468:	add    al,0xb4
  41646a:	push   esp
  41646b:	ins    BYTE PTR es:[edi],dx
  41646c:	(bad)  
  41646d:	loope  0x416413
  41646f:	jg     0x41642c
  416471:	lods   eax,DWORD PTR ds:[esi]
  416472:	lahf   
  416473:	and    eax,0xb7161a8a
  416478:	or     esp,edi
  41647a:	adc    esi,DWORD PTR [esi+0x77]
  41647d:	scas   eax,DWORD PTR es:[edi]
  41647e:	dec    esp
  41647f:	test   BYTE PTR [edi],0x9d
  416482:	test   DWORD PTR [esi],esi
  416484:	in     eax,0x23
  416486:	lock cmp al,0xec
  416489:	inc    esi
  41648a:	push   edi
  41648b:	mov    bl,0xff
  41648d:	push   ebp
  41648e:	xchg   edx,eax
  41648f:	xor    BYTE PTR [ebx-0x69],dh
  416492:	inc    ecx
  416493:	(bad)  
  416494:	mov    dl,0xbb
  416496:	popf   
  416497:	sbb    DWORD PTR [edi],esi
  416499:	jne    0x4164fb
  41649b:	and    ch,dl
  41649d:	or     al,0x95
  41649f:	jns    0x41651a
  4164a1:	mov    dl,0xb6
  4164a3:	pop    esi
  4164a4:	loopne 0x4164e6
  4164a6:	repz daa 
  4164a8:	nop
  4164a9:	nop
  4164aa:	inc    esi
  4164ab:	xchg   esp,eax
  4164ac:	outs   dx,DWORD PTR cs:[esi]
  4164ae:	push   0xb0113969
  4164b3:	or     al,0x39
  4164b5:	or     BYTE PTR [eax],al
  4164b7:	xor    eax,0x9cbd3f3b
  4164bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164bd:	cmp    bh,BYTE PTR [eax+0x29]
  4164c0:	imul   eax,DWORD PTR [esi-0x19db9a11],0xa964fd42
  4164ca:	mov    gs,esp
  4164cc:	pop    edx
  4164cd:	sub    bh,ah
  4164cf:	loope  0x416481
  4164d1:	test   eax,0x6416649f
  4164d6:	imul   ebp,DWORD PTR [esi],0xffffffcd
  4164d9:	mov    WORD PTR [ecx+0x33bfb14a],?
  4164df:	inc    esi
  4164e0:	(bad)  
  4164e2:	cwde   
  4164e3:	ins    BYTE PTR es:[edi],dx
  4164e4:	out    0x65,al
  4164e6:	clc    
  4164e7:	xchg   edi,eax
  4164e8:	xor    al,0x5f
  4164ea:	imul   bh
  4164ec:	mov    eax,ds:0xac561140
  4164f1:	sbb    al,0xf3
  4164f3:	int3   
  4164f4:	(bad)  
  4164f5:	cli    
  4164f6:	(bad)  
  4164f7:	iret   
  4164f8:	jb     0x4164e4
  4164fa:	retf   0xf861
  4164fd:	imul   esp,DWORD PTR [edx-0x698f695a],0xffffffc5
  416504:	pop    ebx
  416505:	ret    0x134d
  416508:	retfw  
  41650a:	test   al,0xb6
  41650c:	sub    al,BYTE PTR [ecx-0x1b]
  41650f:	mov    ds:0x8a56d6cb,eax
  416514:	fdiv   QWORD PTR [ebp+ebx*4-0x7632ff31]
  41651b:	lods   eax,DWORD PTR ds:[si]
  41651d:	and    BYTE PTR [edi],ah
  41651f:	mov    esi,0x3e4daf1c
  416524:	loope  0x416574
  416526:	pop    ds
  416527:	lds    eax,FWORD PTR [esi+edi*1]
  41652a:	(bad)
  41652e:	mov    ebx,0x48d74bd2
  416533:	pop    eax
  416534:	out    0xc3,al
  416536:	(bad)  [ecx-0x51]
  416539:	jge    0x4164f7
  41653b:	dec    ecx
  41653c:	mov    es,WORD PTR [edi+0x32]
  41653f:	in     eax,dx
  416540:	cli    
  416541:	lock cli 
  416543:	lock mov dh,0xc3
  416546:	mov    cl,bh
  416548:	popf   
  416549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654a:	cmc    
  41654b:	ja     0x41655d
  41654d:	xor    esp,0x38
  416550:	repnz push 0xff1aa45d
  416556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416557:	or     eax,DWORD PTR [esi+0x1b]
  41655a:	mov    dl,0x65
  41655c:	iret   
  41655d:	mov    edx,0x1e257c2f
  416562:	cwde   
  416563:	push   cs
  416564:	sbb    cl,ch
  416566:	scas   al,BYTE PTR es:[edi]
  416567:	mov    ds:0x157d78cb,eax
  41656c:	inc    edi
  41656d:	jae    0x4165ad
  41656f:	sti    
  416570:	sbb    DWORD PTR [ebx+0x48bcf79b],edi
  416576:	or     eax,0x6473272b
  41657b:	test   al,0xea
  41657d:	dec    ebp
  41657e:	push   ebx
  41657f:	mov    dl,0xad
  416581:	ficom  WORD PTR [edi]
  416583:	or     al,0x56
  416585:	xchg   BYTE PTR [ecx],dl
  416587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416588:	jmp    0x4627:0xf01dde13
  41658f:	in     eax,0x56
  416591:	cld    
  416592:	xchg   DWORD PTR [ebx],ebx
  416594:	mov    esi,0x3633eba4
  416599:	inc    edi
  41659a:	jb     0x416535
  41659c:	(bad)
  4165a0:	mov    ds:0x95a2bb9e,eax
  4165a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a6:	inc    ecx
  4165a7:	test   DWORD PTR [ecx+0x16],0x890396b8
  4165ae:	test   al,0x5a
  4165b0:	jecxz  0x416618
  4165b2:	hlt    
  4165b3:	std    
  4165b4:	cmp    al,0x8b
  4165b6:	push   ebx
  4165b7:	dec    ebp
  4165b8:	in     eax,0x9c
  4165ba:	sbb    BYTE PTR ds:0x8567bbda,ch
  4165c0:	in     al,dx
  4165c1:	dec    esi
  4165c2:	shl    DWORD PTR [esi],0x4
  4165c5:	xor    bh,0x1e
  4165c8:	sub    ch,al
  4165ca:	add    cl,BYTE PTR [ecx-0x3f873199]
  4165d0:	leave  
  4165d1:	out    0x8,eax
  4165d3:	push   ebx
  4165d4:	inc    ebx
  4165d5:	fstp   QWORD PTR es:[ebx-0x1df4352b]
  4165dc:	icebp  
  4165dd:	shr    DWORD PTR [edx+eax*1-0x7875d49d],0x45
  4165e5:	sbb    al,0x43
  4165e7:	sub    al,0xb8
  4165e9:	or     DWORD PTR [esi+eiz*1],esi
  4165ec:	repnz fisubr DWORD PTR [ebp+0xc]
  4165f0:	inc    esp
  4165f1:	ror    BYTE PTR [ecx-0x42],cl
  4165f4:	jae    0x41662a
  4165f6:	xor    eax,0xb2822d3c
  4165fb:	jge    0x4165ad
  4165fd:	gs xor al,0xc0
  416600:	or     eax,0xbb8709c7
  416605:	mov    dl,0x22
  416607:	sbb    edi,esi
  416609:	dec    edx
  41660a:	add    cl,al
  41660c:	xor    eax,0xd653d06d
  416611:	loope  0x416656
  416613:	(bad)  
  416615:	test   al,0x37
  416617:	add    dl,BYTE PTR [edx]
  416619:	sub    ebp,esi
  41661b:	bound  esi,QWORD PTR [edi-0x28686192]
  416621:	std    
  416622:	cmp    eax,0x8bd02e21
  416627:	xor    edx,DWORD PTR [ebp-0x7f]
  41662a:	pop    esi
  41662b:	cmp    al,0xd2
  41662d:	xor    eax,0xc678427e
  416632:	test   DWORD PTR [edi+0x21],esp
  416635:	mov    esi,0x4f477e9e
  41663a:	mov    edx,0xd6220aaa
  41663f:	in     al,dx
  416640:	inc    edi
  416641:	inc    eax
  416642:	nop
  416643:	jp     0x41664f
  416645:	xor    BYTE PTR [edi+0x15634127],dh
  41664b:	icebp  
  41664c:	xor    ah,bl
  41664e:	icebp  
  41664f:	iret   
  416650:	add    DWORD PTR [ecx],edx
  416652:	jecxz  0x4165db
  416654:	and    al,0xce
  416656:	add    al,BYTE PTR ds:0x23401cc9
  41665c:	sub    edx,0x167df1a
  416662:	popa   
  416663:	pop    esp
  416664:	or     eax,0x860688b6
  416669:	repnz fwait
  41666b:	xor    DWORD PTR [ebp-0x61],0x3d
  41666f:	mov    eax,ds:0x21ff87f4
  416674:	xor    eax,0xd7be93d6
  416679:	fstp   TBYTE PTR [ecx+0x4a]
  41667c:	lds    ebx,FWORD PTR [ebx-0x14]
  41667f:	lds    ecx,FWORD PTR [edx]
  416681:	aad    0x93
  416683:	or     BYTE PTR [ecx+0x44759fbc],dl
  416689:	push   esp
  41668a:	or     al,0xaa
  41668c:	pop    edx
  41668d:	(bad)  
  41668e:	mov    eax,0x8bd21625
  416693:	gs inc ebx
  416695:	ret    
  416696:	xor    eax,0x2bac4dea
  41669b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41669c:	lods   eax,DWORD PTR ds:[esi]
  41669d:	mov    WORD PTR [eax+ebp*1+0x581c4364],?
  4166a4:	fdiv   DWORD PTR [ebx]
  4166a6:	sub    ecx,edx
  4166a8:	xchg   ebp,eax
  4166a9:	mov    dh,0xe4
  4166ab:	je     0x416638
  4166ad:	(bad)  
  4166ae:	ds popw ss
  4166b1:	jae    0x4166ca
  4166b3:	mov    ds:0x8e46ea80,eax
  4166b8:	call   0xfbb088a5
  4166bd:	ins    DWORD PTR es:[edi],dx
  4166be:	sti    
  4166bf:	dec    ebp
  4166c0:	(bad)  
  4166c1:	cwde   
  4166c2:	jmp    0x91eefd94
  4166c7:	cmp    esi,ebp
  4166c9:	push   cs
  4166ca:	bound  eax,QWORD PTR [edi-0x198c4365]
  4166d0:	mov    esi,ds
  4166d2:	pop    esi
  4166d3:	retf   
  4166d4:	outs   dx,DWORD PTR ds:[esi]
  4166d5:	outs   dx,BYTE PTR ds:[esi]
  4166d6:	adc    al,0x4
  4166d8:	mov    bh,0xa6
  4166da:	sub    BYTE PTR [ecx+edx*4-0x2c],al
  4166de:	push   ecx
  4166df:	ret    
  4166e0:	js     0x416741
  4166e2:	fdivr  QWORD PTR [ebp-0x1b1f8a1f]
  4166e8:	inc    esp
  4166e9:	mov    esi,0x2bf4130e
  4166ee:	jle    0x416713
  4166f0:	mov    bl,0x87
  4166f2:	sahf   
  4166f3:	inc    DWORD PTR [ebx+0x4c]
  4166f6:	enter  0xa350,0xc0
  4166fa:	sub    eax,0x8fb2bbae
  4166ff:	mov    BYTE PTR [eax],cl
  416701:	imul   edx,DWORD PTR [esi-0x77aa845a],0xffffff98
  416708:	jb     0x416776
  41670a:	mov    ds:0xd25f4fe9,eax
  41670f:	es mov ebp,0x51de49cc
  416715:	mov    eax,0x9bc7455e
  41671a:	inc    esi
  41671b:	add    edi,DWORD PTR [edx+0x734524c1]
  416721:	fst    DWORD PTR [ecx-0x6f5d62a5]
  416727:	outs   dx,BYTE PTR ds:[esi]
  416728:	sar    BYTE PTR [ecx-0x42386205],0x61
  41672f:	scas   al,BYTE PTR es:[edi]
  416730:	jle    0x4167ac
  416732:	add    eax,0xbe859de4
  416737:	mov    ah,0x77
  416739:	jno    0x4166fc
  41673b:	dec    edx
  41673c:	test   ch,bl
  41673e:	add    DWORD PTR [eax-0x1ad6b2a3],0x1e999461
  416748:	rol    cl,1
  41674a:	add    dh,dl
  41674c:	aam    0x4a
  41674e:	xchg   DWORD PTR [ecx+eax*1],esp
  416751:	dec    esi
  416752:	mov    ebx,0xec25b4a9
  416757:	fs ds dec ebx
  41675a:	fimul  WORD PTR [esi-0x65f17398]
  416760:	inc    esi
  416761:	pop    ebx
  416762:	out    dx,al
  416763:	leave  
  416764:	adc    esp,edx
  416766:	sbb    al,0xa9
  416768:	inc    esp
  416769:	int    0xf7
  41676b:	mov    esi,0x757fae4a
  416770:	test   BYTE PTR [edi+0x16a10008],dh
  416776:	inc    ecx
  416777:	and    al,0xf5
  416779:	aam    0x66
  41677b:	ret    0xaccd
  41677e:	fdiv   DWORD PTR [ebx+0x4f]
  416781:	pop    edx
  416782:	mov    bh,0x4f
  416784:	jns    0x41671e
  416786:	dec    esp
  416787:	cld    
  416788:	sub    al,0x66
  41678a:	jp     0x4167c1
  41678c:	into   
  41678d:	out    dx,eax
  41678e:	inc    ecx
  41678f:	or     DWORD PTR [esi-0x34d00c55],0xe28fcebb
  416799:	test   BYTE PTR ds:0x59a1bcb9,0xc0
  4167a0:	cmp    BYTE PTR [esi],dh
  4167a2:	mov    ds:0xce6ecd8b,eax
  4167a7:	imul   edi,DWORD PTR fs:[edx+0x8],0x54
  4167ac:	and    al,0x52
  4167ae:	cli    
  4167af:	xchg   ecx,eax
  4167b0:	xchg   ebp,eax
  4167b1:	and    BYTE PTR [esi-0x1d578ff8],0x4d
  4167b8:	pushf  
  4167b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ba:	jle    0x4167a6
  4167bc:	es pop ebp
  4167be:	jmp    0xdc51:0x2cf6b3ce
  4167c5:	dec    edx
  4167c6:	jbe    0x416812
  4167c8:	jne    0x416757
  4167ca:	push   ebp
  4167cb:	rcr    DWORD PTR [esi+esi*8],0x55
  4167cf:	or     DWORD PTR [ebx+0x6df86aca],ecx
  4167d5:	sahf   
  4167d6:	les    ebp,FWORD PTR [edi-0x5a]
  4167d9:	jl     0x4167f4
  4167db:	mov    ecx,0xe1ec8f57
  4167e0:	es test eax,0xf5a99939
  4167e6:	push   cs
  4167e7:	xor    edi,ebp
  4167e9:	in     eax,0x68
  4167eb:	add    esp,DWORD PTR [edi+0x41]
  4167ee:	xor    al,0x29
  4167f0:	inc    edx
  4167f1:	push   ds
  4167f2:	jp     0x416817
  4167f4:	adc    DWORD PTR [edi+0x37],edx
  4167f7:	and    dh,ah
  4167f9:	push   ss
  4167fa:	lea    ebx,[esi-0x2b]
  4167fd:	mov    al,ch
  4167ff:	xchg   esp,eax
  416800:	jo     0x416800
  416802:	out    dx,eax
  416803:	mov    ah,BYTE PTR [edi]
  416805:	adc    ch,BYTE PTR [eax]
  416807:	arpl   sp,bp
  416809:	or     al,0x68
  41680b:	test   BYTE PTR [edi],0x7
  41680e:	cld    
  41680f:	(bad)  
  416810:	sub    ebp,esp
  416812:	cmc    
  416813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416814:	arpl   WORD PTR [esi],dx
  416816:	sar    DWORD PTR [ecx],cl
  416818:	cmp    DWORD PTR [eax-0x9],0x120f6cf5
  41681f:	push   ds
  416820:	sbb    eax,0xa6bf38ad
  416825:	jecxz  0x4167c1
  416827:	rcr    BYTE PTR [eax-0x4e],0xb8
  41682b:	retf   0xf6e6
  41682e:	sbb    eax,0x2c916a1a
  416833:	or     al,0x7d
  416835:	xlat   BYTE PTR ds:[ebx]
  416836:	mov    esi,ebx
  416838:	pop    esi
  416839:	mov    esi,DWORD PTR [ecx]
  41683b:	adc    eax,0x7a583fc7
  416840:	sete   BYTE PTR [edx+0x3]
  416844:	mov    esi,0x6a165d33
  416849:	leave  
  41684a:	pop    ebx
  41684b:	jo     0x416804
  41684d:	lock iret 
  41684f:	mov    esp,0x73446083
  416854:	pop    es
  416855:	mov    al,ds:0x156115b7
  41685a:	jo     0x41685b
  41685c:	(bad)  
  41685d:	in     al,0xe5
  41685f:	test   esi,esi
  416861:	sub    eax,0x4d423a35
  416866:	(bad)  
  416867:	scas   eax,DWORD PTR es:[edi]
  416868:	sub    eax,0x76914a67
  41686d:	sub    ebx,ebx
  41686f:	xchg   BYTE PTR [ebp-0x19],bl
  416872:	dec    esi
  416873:	test   eax,0xd4b8f812
  416878:	jns    0x4168d4
  41687a:	dec    edi
  41687b:	and    DWORD PTR [ebx+ecx*4],esp
  41687e:	sub    al,0xdb
  416880:	dec    eax
  416881:	pop    edx
  416882:	fnstcw WORD PTR ds:0x15e70bfa
  416888:	out    0x82,al
  41688a:	xchg   edx,eax
  41688b:	sub    eax,0x1798e20f
  416890:	and    eax,0x9c8726a0
  416895:	ja     0x4168b7
  416897:	dec    ebp
  416898:	mov    edi,0xda676d9c
  41689d:	mov    ds:0x72cb4c81,al
  4168a2:	push   esi
  4168a3:	cmp    BYTE PTR [edi-0x625f657d],dh
  4168a9:	mov    edx,0xa6fab989
  4168ae:	jge    0x4168b0
  4168b0:	jge    0x416883
  4168b2:	fsubp  st(6),st
  4168b4:	cld    
  4168b5:	call   0x2c6d:0x33245287
  4168bc:	and    BYTE PTR [esi],bh
  4168be:	push   0xc930b667
  4168c3:	(bad)  
  4168c4:	jmp    0x8abd61fe
  4168c9:	add    cl,BYTE PTR [edx+0x3d30c838]
  4168cf:	sar    BYTE PTR [esi-0x65fc974e],cl
  4168d5:	js     0x4168b3
  4168d7:	cld    
  4168d8:	call   0xd24acb13
  4168dd:	lds    eax,FWORD PTR [eax+ecx*2-0x351727dc]
  4168e4:	inc    edi
  4168e5:	push   0x6
  4168e7:	add    DWORD PTR [edx-0x1c3f125a],esp
  4168ed:	pushf  
  4168ee:	sbb    ebp,DWORD PTR [edi-0x12f8c021]
  4168f4:	sub    ah,BYTE PTR [esi]
  4168f6:	(bad)  
  4168f8:	cld    
  4168f9:	es stos BYTE PTR es:[edi],al
  4168fb:	jno    0x41692f
  4168fd:	int    0xb5
  4168ff:	mov    ds:0xe92c6713,eax
  416904:	repnz or al,0xec
  416907:	outs   dx,DWORD PTR ds:[esi]
  416908:	xor    DWORD PTR [ecx-0x51],eax
  41690b:	push   0x2a
  41690d:	loop   0x41691d
  41690f:	cmc    
  416910:	mov    ah,0x9e
  416912:	test   al,0xa4
  416914:	cmp    cl,dl
  416916:	lods   al,BYTE PTR ds:[esi]
  416917:	fs mov esp,0x81def581
  41691d:	fstp   QWORD PTR [ecx-0x7f]
  416920:	stos   DWORD PTR es:[edi],eax
  416921:	mov    ch,0x6d
  416923:	ins    BYTE PTR es:[edi],dx
  416924:	pop    ds
  416925:	push   0x76362b67
  41692a:	mov    ch,0x2d
  41692c:	jbe    0x416986
  41692e:	mov    esi,0x2d6c6f0
  416933:	push   edx
  416934:	inc    esi
  416935:	push   es
  416936:	shr    bl,cl
  416938:	je     0x4168e8
  41693a:	xchg   DWORD PTR [ebp+0x7b],edi
  41693d:	ds xor dl,ah
  416940:	shl    DWORD PTR [edx],cl
  416942:	jne    0x41695f
  416944:	sub    bh,BYTE PTR [edi]
  416946:	push   eax
  416947:	push   esi
  416948:	rcr    cl,1
  41694a:	xchg   ebp,eax
  41694b:	daa    
  41694c:	dec    eax
  41694d:	lods   eax,DWORD PTR ds:[esi]
  41694e:	xor    DWORD PTR [ebp-0x69],esp
  416951:	in     al,dx
  416952:	push   esi
  416953:	repz jecxz 0x4168e1
  416956:	aam    0x8e
  416958:	leave  
  416959:	dec    eax
  41695a:	inc    ebx
  41695b:	push   0x40
  41695d:	push   ds
  41695e:	ds cmp ch,cl
  416961:	and    cl,BYTE PTR [ebp-0x5a]
  416964:	or     BYTE PTR [edi],al
  416966:	jo     0x41697a
  416968:	in     al,dx
  416969:	jo     0x416904
  41696b:	nop
  41696c:	(bad)  
  41696d:	lahf   
  41696e:	and    bh,BYTE PTR [esi]
  416970:	add    DWORD PTR [ecx+0x14],ebp
  416973:	outs   dx,BYTE PTR ds:[esi]
  416974:	adc    ch,BYTE PTR [edi]
  416976:	jae    0x4169b1
  416978:	inc    esp
  416979:	dec    ebp
  41697a:	pop    edx
  41697b:	cdq    
  41697c:	ror    BYTE PTR [esi+0x57],1
  41697f:	ds popa 
  416981:	pop    esp
  416982:	mul    BYTE PTR [ebx-0x2c]
  416985:	out    0xef,al
  416987:	push   0xc8b363ba
  41698c:	cmp    eax,DWORD PTR [edx-0x16]
  41698f:	test   BYTE PTR [ebx-0x72],bl
  416992:	pop    ebp
  416993:	ret    0x4846
  416996:	mov    bh,0x74
  416998:	imul   DWORD PTR [ebx]
  41699a:	inc    ebp
  41699b:	popf   
  41699c:	(bad)  
  41699d:	jnp    0x4169f5
  41699f:	jmp    0xe525:0x91114079
  4169a6:	fld    TBYTE PTR [ecx+0x58]
  4169a9:	loopne 0x4169b3
  4169ab:	aad    0x8
  4169ad:	cs mov ebx,0x6cead7d4
  4169b3:	adc    BYTE PTR [ebx],ch
  4169b5:	loop   0x4169ac
  4169b7:	fld    DWORD PTR [edx+eax*4-0x4e]
  4169bb:	xchg   ecx,eax
  4169bc:	add    DWORD PTR [esi],esp
  4169be:	scas   eax,DWORD PTR es:[edi]
  4169bf:	dec    ebp
  4169c0:	push   ds
  4169c1:	ficomp DWORD PTR [edx-0x57]
  4169c4:	dec    eax
  4169c5:	adc    ch,BYTE PTR [esi+0xa8459d1]
  4169cb:	cli    
  4169cc:	(bad)  
  4169cd:	jp     0x416987
  4169cf:	repz (bad) 
  4169d1:	xor    edx,DWORD PTR [ebp+0x25]
  4169d4:	or     al,0x5d
  4169d6:	sbb    BYTE PTR [eax+eax*2-0x58697b74],bh
  4169dd:	pop    eax
  4169de:	xchg   edx,eax
  4169df:	and    eax,0x2dc25b5c
  4169e4:	mov    edi,0xd89d3b55
  4169e9:	loope  0x4169f2
  4169eb:	sub    ch,BYTE PTR [ecx-0x665e4aa6]
  4169f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f2:	fsubr  QWORD PTR [ebp-0x120dd1d9]
  4169f8:	imul   edi,edi,0xaec6e7ae
  4169fe:	repz adc al,0x90
  416a01:	fst    QWORD PTR [eax-0x6b]
  416a04:	enter  0xb1f4,0x92
  416a08:	inc    ecx
  416a09:	ss mov bl,0x56
  416a0c:	outs   dx,BYTE PTR ds:[esi]
  416a0d:	jle    0x4169c3
  416a0f:	dec    ebp
  416a10:	mov    bh,0x14
  416a12:	sbb    eax,eax
  416a14:	sub    al,0x90
  416a16:	fisubr DWORD PTR [ebp*4-0x3a6e6725]
  416a1d:	shl    BYTE PTR [ecx+esi*8],1
  416a20:	xlat   BYTE PTR ds:[ebx]
  416a21:	xor    dh,BYTE PTR [ecx-0x11]
  416a24:	ret    
  416a25:	sahf   
  416a26:	int    0xc7
  416a28:	mov    DWORD PTR [edi-0xe],0x51d2489
  416a2f:	push   ebx
  416a30:	sbb    BYTE PTR [ebp-0x3c4fa78d],dl
  416a36:	dec    edi
  416a37:	(bad)  
  416a38:	jo     0x416a47
  416a3a:	pop    esp
  416a3b:	add    ah,bl
  416a3d:	jl     0x416a04
  416a3f:	jno    0x416a71
  416a41:	adc    dh,BYTE PTR [ebp+0x3]
  416a44:	fisttp DWORD PTR [eax]
  416a46:	repz adc dl,BYTE PTR [edx]
  416a49:	data16 out dx,al
  416a4b:	cli    
  416a4c:	xor    edx,ebp
  416a4e:	push   esi
  416a4f:	in     eax,dx
  416a50:	pop    ecx
  416a51:	sub    dh,ah
  416a53:	pop    esp
  416a54:	rcl    DWORD PTR fs:[edi+ebx*4-0x7b9fab7d],0x55
  416a5d:	lock sub eax,DWORD PTR [edi+0x4553668c]
  416a64:	pushf  
  416a65:	push   esp
  416a66:	add    dh,al
  416a68:	push   0xa44f2c1
  416a6d:	in     eax,dx
  416a6e:	jp     0x416a69
  416a70:	inc    esp
  416a71:	sti    
  416a72:	gs jae 0x416af4
  416a75:	and    BYTE PTR [edi],ah
  416a77:	cmp    BYTE PTR [esi+0x65bbb9ad],ah
  416a7d:	mov    dh,0x8c
  416a7f:	dec    esp
  416a80:	ret    0x22bc
  416a83:	lock mov cl,0x69
  416a86:	jns    0x416ab6
  416a88:	push   ss
  416a89:	arpl   WORD PTR [ebx],ax
  416a8b:	jg     0x416a18
  416a8d:	xchg   BYTE PTR [edx-0x1],ah
  416a90:	fisub  WORD PTR [ecx-0x6830982]
  416a96:	mov    dh,0x30
  416a98:	and    DWORD PTR gs:[edx],0x33
  416a9c:	mov    eax,ds:0x72fb284a
  416aa1:	add    BYTE PTR [eax],cl
  416aa3:	sub    dl,BYTE PTR [esi]
  416aa5:	and    edx,eax
  416aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa8:	daa    
  416aa9:	ins    BYTE PTR es:[edi],dx
  416aaa:	rol    bh,1
  416aac:	outs   dx,DWORD PTR ds:[esi]
  416aad:	das    
  416aae:	fild   DWORD PTR [edi]
  416ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab1:	clc    
  416ab2:	mov    al,ds:0x5f15ee74
  416ab7:	imul   ebx,DWORD PTR [edx-0x74df2da0],0x9dd7fe50
  416ac1:	adc    cl,BYTE PTR [ecx+0x40]
  416ac4:	pop    ecx
  416ac5:	mov    ds:0x6b87827f,al
  416aca:	icebp  
  416acb:	or     eax,0xef4319e7
  416ad0:	sub    eax,0xdf790e06
  416ad5:	and    BYTE PTR [ebp-0x61915196],cl
  416adb:	ret    
  416adc:	ins    DWORD PTR es:[edi],dx
  416add:	fwait
  416ade:	out    0x37,eax
  416ae0:	xchg   esp,eax
  416ae1:	js     0x416b0e
  416ae3:	aad    0x75
  416ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ae6:	fs mov eax,0xc6abe152
  416aec:	adc    al,0xbc
  416aee:	inc    eax
  416af0:	jbe    0x416b35
  416af2:	inc    ecx
  416af3:	leave  
  416af4:	fwait
  416af5:	and    dl,BYTE PTR [ecx+eax*4-0x55]
  416af9:	push   esp
  416afa:	lea    edi,[ebp+0x2ee7b737]
  416b00:	fcomp  QWORD PTR [edx]
  416b02:	fwait
  416b03:	jae    0x416b50
  416b05:	retf   0x11a1
  416b08:	or     dl,bh
  416b0a:	inc    esi
  416b0b:	adc    edi,0xffffff96
  416b0e:	xor    DWORD PTR [ebx-0x50],esi
  416b11:	(bad)  
  416b12:	sub    al,0x37
  416b14:	cmp    ebp,DWORD PTR [eax-0x4f]
  416b17:	pop    ss
  416b18:	cmp    eax,0xe81bf8aa
  416b1d:	mov    cl,0xb7
  416b1f:	xor    BYTE PTR [ebx+0x40],dl
  416b22:	mov    gs,WORD PTR [ebx+0x46]
  416b25:	test   eax,0xc77ae10c
  416b2a:	test   DWORD PTR [ecx],eax
  416b2c:	test   al,0x9a
  416b2e:	cwde   
  416b2f:	loope  0x416ba0
  416b31:	cmp    DWORD PTR [edi],eax
  416b33:	jp     0x416b7b
  416b35:	xchg   DWORD PTR [esi+ebp*2+0x2563e52f],edx
  416b3c:	xchg   esp,eax
  416b3d:	sar    BYTE PTR [esi],1
  416b3f:	push   eax
  416b40:	in     eax,0xc2
  416b42:	pop    eax
  416b43:	in     al,dx
  416b44:	ret    
  416b45:	push   esp
  416b46:	jg     0x416b54
  416b48:	xor    edx,DWORD PTR [ecx]
  416b4a:	lahf   
  416b4b:	adc    eax,0xff79457e
  416b50:	hlt    
  416b51:	fadd   QWORD PTR [ebx-0x6e]
  416b54:	loopne 0x416b4d
  416b56:	and    eax,0x45c286ad
  416b5b:	ret    
  416b5c:	dec    esi
  416b5d:	ds mov dl,0xdc
  416b60:	ds push ebp
  416b62:	es sahf 
  416b64:	test   eax,0x3dc1b4f8
  416b69:	enter  0x6a95,0xc0
  416b6d:	mov    al,BYTE PTR [ebp-0xe8570b5]
  416b73:	out    dx,eax
  416b74:	stos   BYTE PTR es:[edi],al
  416b75:	mov    ds:0x6e2ecc73,al
  416b7a:	jmp    0x416bdb
  416b7c:	xchg   ebx,eax
  416b7d:	jmp    0xd25d7449
  416b82:	pop    esi
  416b83:	sti    
  416b84:	adc    eax,0xc400d9fd
  416b89:	int3   
  416b8a:	pop    edx
  416b8b:	mov    cl,0x73
  416b8d:	mov    ebx,0xbf26887e
  416b92:	popa   
  416b93:	dec    esp
  416b94:	out    dx,al
  416b95:	in     al,0xe5
  416b97:	popa   
  416b98:	sbb    ebx,esi
  416b9a:	xchg   DWORD PTR [esi-0x4379e90b],eax
  416ba0:	mov    bh,BYTE PTR [ebx]
  416ba2:	imul   ebp,DWORD PTR [edi-0x3f],0x61e459e7
  416ba9:	in     al,dx
  416baa:	test   eax,0x76fb437e
  416baf:	addr16 rol bl,0x7e
  416bb3:	jae    0x416c25
  416bb5:	shr    bl,1
  416bb7:	stos   BYTE PTR es:[edi],al
  416bb8:	mov    ebx,0xb3797cce
  416bbd:	adc    edx,edx
  416bbf:	js     0x416b7c
  416bc1:	or     ebp,esp
  416bc3:	adc    DWORD PTR [edi],edi
  416bc5:	js     0x416b73
  416bc7:	or     bh,bl
  416bc9:	outs   dx,BYTE PTR ds:[esi]
  416bca:	add    eax,0x14062bd5
  416bcf:	inc    esp
  416bd0:	dec    ecx
  416bd1:	xchg   DWORD PTR [ebx-0x20],ecx
  416bd4:	fs aad 0xe9
  416bd7:	aas    
  416bd8:	aas    
  416bd9:	call   0x3d0:0x3308558b
  416be0:	(bad)  
  416be1:	jne    0x414733
  416be7:	mov    edx,DWORD PTR [ebp-0xc]
  416bea:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416bf1:	mov    bl,BYTE PTR [ebp-0x1]
  416bf4:	cmp    dl,bl
  416bf6:	je     0x419033
  416bfc:	mov    ecx,DWORD PTR [ebp-0x5c]
  416bff:	mov    edx,DWORD PTR [ebp-0xc]
  416c02:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416c09:	mov    ebx,DWORD PTR [ebp+0xc]
  416c0c:	xor    ecx,eax
  416c0e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  416c15:	jne    0x41b4c6
  416c1b:	mov    ecx,DWORD PTR [ebp-0x5c]
  416c1e:	mov    edx,DWORD PTR [ebp+0xc]
  416c21:	xor    ecx,eax
  416c23:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  416c2b:	mov    edx,DWORD PTR [ebp-0x18]
  416c2e:	xor    edx,eax
  416c30:	add    edx,esi
  416c32:	cmp    ecx,edx
  416c34:	mov    ecx,DWORD PTR [ebp-0x14]
  416c37:	mov    DWORD PTR [ebp+0x8],ecx
  416c3a:	mov    ecx,DWORD PTR [ebp+0x8]
  416c3d:	je     0x421feb
  416c43:	xor    ecx,eax
  416c45:	add    ecx,esi
  416c47:	mov    ecx,0x242ebc9
  416c4c:	je     0x4190bb
  416c52:	mov    edx,DWORD PTR [ebp+0x8]
  416c55:	mov    ebx,DWORD PTR [ebp-0x8]
  416c58:	xor    edx,eax
  416c5a:	jmp    0x418fb9
  416c5f:	test   BYTE PTR fs:[esi],bl
  416c62:	pop    es
  416c63:	sahf   
  416c64:	and    DWORD PTR [edx-0x80],0x235b4cfa
  416c6b:	cmp    edi,DWORD PTR [esi+eiz*4-0xd]
  416c6f:	jno    0x416cb3
  416c71:	jl     0x416bf6
  416c73:	cmp    eax,0xf883835e
  416c78:	jo     0x416c9a
  416c7a:	mov    dh,dh
  416c7c:	mov    esi,0xdd202550
  416c81:	add    bl,BYTE PTR [edi+0x1d56c651]
  416c87:	xchg   ebp,eax
  416c88:	ins    BYTE PTR es:[edi],dx
  416c89:	fwait
  416c8a:	hlt    
  416c8b:	pop    es
  416c8c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416c8e:	iret   
  416c8f:	dec    ebx
  416c90:	mov    ebx,0x2e395d3d
  416c95:	lods   eax,DWORD PTR ds:[esi]
  416c96:	and    DWORD PTR [edi],edx
  416c98:	call   0x7f12:0x1281d008
  416c9f:	rol    DWORD PTR [ebp-0xf78d70e],cl
  416ca5:	jmp    FWORD PTR [ebp+0x69]
  416ca8:	xchg   edx,eax
  416ca9:	cli    
  416caa:	sbb    al,0xbf
  416cac:	push   eax
  416cad:	sub    eax,ebp
  416caf:	or     bl,cl
  416cb1:	mov    bh,0x4
  416cb3:	add    eax,0xb30e32b6
  416cb8:	lds    esp,FWORD PTR [esi-0x32]
  416cbb:	popf   
  416cbc:	cmp    al,0x3a
  416cbe:	psubsb mm1,QWORD PTR ds:0xf7153f66
  416cc5:	cmp    al,0xcd
  416cc7:	xchg   ebx,eax
  416cc8:	stc    
  416cc9:	into   
  416cca:	add    cl,dh
  416ccc:	sbb    eax,0x315111f0
  416cd1:	stc    
  416cd2:	cmp    esp,DWORD PTR [ecx]
  416cd4:	and    bl,dl
  416cd6:	ret    
  416cd7:	adc    eax,0x9e0f8709
  416cdc:	xchg   edx,eax
  416cdd:	call   0xd76:0x9bd2818c
  416ce4:	call   0x1d49e96a
  416ce9:	push   0xffffffb3
  416ceb:	sbb    DWORD PTR [ecx],esp
  416ced:	dec    esi
  416cee:	dec    ebp
  416cef:	fldenv [edx-0x3c]
  416cf2:	in     al,0xb
  416cf4:	outs   dx,DWORD PTR ds:[esi]
  416cf5:	pop    ebx
  416cf6:	xchg   DWORD PTR ds:0x53e0b1fa,edi
  416cfc:	retf   0x2fa7
  416cff:	loope  0x416cf3
  416d01:	nop
  416d02:	nop
  416d03:	xchg   esi,eax
  416d04:	pop    ebp
  416d05:	jnp    0x416d7e
  416d07:	nop
  416d08:	push   esi
  416d09:	out    0x76,eax
  416d0b:	shl    DWORD PTR [esi-0x32a63bd7],0xef
  416d12:	jmp    0x416cd6
  416d14:	adc    edi,ebx
  416d16:	pop    ecx
  416d17:	pop    esp
  416d18:	(bad)  
  416d19:	imul   edx,DWORD PTR [eax-0x5c477cf4],0xffffff8c
  416d20:	push   0xffffffe6
  416d22:	(bad)  
  416d23:	fsubr  DWORD PTR [edx]
  416d25:	push   es
  416d26:	inc    edi
  416d27:	imul   ecx,DWORD PTR [ecx-0x523cafc8],0xffffff88
  416d2e:	outs   dx,DWORD PTR ds:[esi]
  416d2f:	cmp    edi,DWORD PTR ss:[ebx+0x55]
  416d33:	shr    DWORD PTR [ebp+0x683a8868],1
  416d39:	xchg   BYTE PTR [ebp-0x74],bh
  416d3c:	inc    eax
  416d3d:	cdq    
  416d3e:	inc    ebx
  416d3f:	pop    edi
  416d40:	inc    ecx
  416d41:	lahf   
  416d42:	aam    0x96
  416d44:	sub    eax,0x75208a53
  416d49:	cld    
  416d4a:	or     al,0x86
  416d4c:	xchg   DWORD PTR [eax+ebp*2-0x1273e756],esi
  416d53:	sub    esp,DWORD PTR [eax-0x4706f297]
  416d59:	cmp    cl,BYTE PTR [ebx+0x27ddf3f5]
  416d5f:	in     al,0xe6
  416d61:	jae    0x416ce5
  416d63:	inc    edx
  416d64:	mov    WORD PTR [esi+0x33],ss
  416d67:	cmp    ebp,DWORD PTR [ebx-0x3e3f72ff]
  416d6d:	and    esi,DWORD PTR [edx+0x6daceebf]
  416d73:	inc    esp
  416d74:	sub    bh,BYTE PTR [ebx]
  416d76:	jp     0x416d6b
  416d78:	inc    edi
  416d79:	das    
  416d7a:	inc    edi
  416d7b:	sub    eax,0xd44da2c8
  416d80:	or     edx,DWORD PTR [esi-0x29c224ff]
  416d86:	jle    0x416d65
  416d88:	out    0x8b,al
  416d8a:	cmp    eax,0xce2c6a94
  416d8f:	push   eax
  416d90:	iret   
  416d91:	enter  0xb1d2,0xea
  416d95:	into   
  416d96:	and    eax,0x91ba3e5d
  416d9b:	jae    0x416de9
  416d9d:	xor    al,0x7c
  416d9f:	cmp    eax,0xe869276a
  416da4:	xor    BYTE PTR es:[ebx+0x27],dh
  416da8:	xor    esi,ebx
  416daa:	mul    BYTE PTR [ebx-0xf568300]
  416db0:	adc    DWORD PTR [edi+0x71],0xffffff94
  416db4:	gs push edx
  416db6:	scas   eax,DWORD PTR es:[edi]
  416db7:	stc    
  416db8:	in     al,dx
  416db9:	xor    BYTE PTR [edi-0x30],ah
  416dbc:	jmp    0x58da:0x93832d7a
  416dc3:	sub    ebx,eax
  416dc5:	xlat   BYTE PTR ds:[ebx]
  416dc6:	xor    al,0x87
  416dc8:	lods   eax,DWORD PTR ds:[esi]
  416dc9:	sahf   
  416dca:	loop   0x416d5b
  416dcc:	or     dl,BYTE PTR [esp+ebp*4+0x30]
  416dd0:	clc    
  416dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd2:	jmp    0xac2085de
  416dd7:	call   0xd4d3:0xca42040b
  416dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ddf:	loopne 0x416d8b
  416de1:	add    BYTE PTR [esi],ch
  416de3:	adc    BYTE PTR [eax],bl
  416de5:	ins    DWORD PTR es:[edi],dx
  416de6:	and    eax,0x7412aa0e
  416deb:	dec    esp
  416dec:	pop    edx
  416ded:	sub    eax,0xa3de122
  416df2:	sub    ebp,DWORD PTR [ebx+ebx*1+0x1b8e95a1]
  416df9:	(bad)  
  416dfa:	xchg   edi,eax
  416dfb:	push   ebp
  416dfc:	aam    0x45
  416dfe:	pop    ebp
  416dff:	mov    ebx,0xab3d476f
  416e04:	outs   dx,BYTE PTR ds:[esi]
  416e05:	es mov ecx,0xeea5ebe6
  416e0b:	push   0x450da94
  416e10:	xor    BYTE PTR [edx],dh
  416e12:	cmp    dl,BYTE PTR [ebx-0x71f98c1a]
  416e18:	(bad)  
  416e19:	std    
  416e1a:	sbb    ah,BYTE PTR [edi]
  416e1c:	add    al,0x21
  416e1e:	add    esi,eax
  416e20:	daa    
  416e21:	push   edx
  416e22:	cld    
  416e23:	inc    ebx
  416e24:	mov    al,0x69
  416e26:	call   0xd638:0x7f9d732
  416e2d:	bndldx bnd3,[ecx-0x3f]
  416e31:	test   eax,0x123f6040
  416e36:	xor    DWORD PTR [eax],ebp
  416e38:	inc    edx
  416e39:	test   al,0x47
  416e3b:	adc    DWORD PTR [ebx-0x5493202c],esi
  416e41:	push   eax
  416e42:	ds inc edi
  416e44:	push   edi
  416e45:	sub    esp,DWORD PTR [edx+0x79ab609e]
  416e4b:	call   0x949ad890
  416e50:	iret   
  416e51:	retf   
  416e52:	inc    esp
  416e53:	stc    
  416e54:	imul   esp,edi,0xcd7906fd
  416e5a:	rcr    DWORD PTR [eax-0x2e06e159],1
  416e60:	ret    0xb3f0
  416e63:	nop
  416e64:	repnz mov ds:0x1814ce1b,al
  416e6a:	cmp    esi,ebp
  416e6c:	in     al,0x8c
  416e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e71:	retf   0xcab4
  416e74:	mov    edx,0x5b6b2191
  416e79:	xor    BYTE PTR [edi],bh
  416e7b:	aad    0x5c
  416e7d:	imul   eax,DWORD PTR [ebx-0x6f7570c8],0x7e516db0
  416e87:	pop    edi
  416e88:	aam    0x68
  416e8a:	arpl   WORD PTR [ecx+0x61],ax
  416e8d:	jne    0x416ef8
  416e8f:	aaa    
  416e90:	aas    
  416e91:	bound  esi,QWORD PTR [eax]
  416e93:	test   ah,dh
  416e95:	add    esp,eax
  416e97:	inc    BYTE PTR [esi]
  416e99:	daa    
  416e9a:	adc    al,0xe2
  416e9c:	mov    dh,0xfc
  416e9e:	shr    BYTE PTR [esi+edx*1-0x652cfde5],0x9a
  416ea6:	cmp    DWORD PTR [ecx+0x49],0x4b
  416eaa:	adc    al,0xa7
  416eac:	mov    bl,0xc2
  416eae:	mov    ebp,0xd94537ca
  416eb3:	xchg   DWORD PTR [edi-0x69],esi
  416eb6:	scas   eax,DWORD PTR es:[edi]
  416eb7:	push   ss
  416eb8:	mov    esp,0x4bfe7abb
  416ebd:	and    bh,BYTE PTR [ebp+0x19]
  416ec0:	push   esp
  416ec1:	call   0x6c40adfe
  416ec6:	xor    esp,DWORD PTR [eax+0x15]
  416ec9:	retf   
  416eca:	(bad)  
  416ecb:	dec    esi
  416ecc:	sar    BYTE PTR [eax-0x61],1
  416ecf:	or     ch,dh
  416ed1:	call   0xcf09:0x5804fa74
  416ed8:	mov    DWORD PTR [edx-0x26],0x67757559
  416edf:	add    al,0x50
  416ee1:	sti    
  416ee2:	mov    edi,0x808c36b3
  416ee7:	mov    esi,0xce54f52a
  416eec:	fwait
  416eed:	sub    BYTE PTR [esi+0x1bfd0ee],ch
  416ef3:	dec    ebx
  416ef4:	and    al,0x2c
  416ef6:	sub    ebp,DWORD PTR [eax+0x2a]
  416ef9:	xchg   ebp,eax
  416efa:	jae    0x416f48
  416efc:	imul   eax,ecx,0xffffffef
  416eff:	push   esi
  416f00:	pop    edx
  416f01:	sbb    eax,0xdf0e424f
  416f06:	or     al,0xd
  416f08:	sub    eax,DWORD PTR [ecx]
  416f0a:	pop    ebx
  416f0b:	pushf  
  416f0c:	xchg   ebx,eax
  416f0d:	pusha  
  416f0e:	sub    eax,0xcd034326
  416f13:	retf   0xe791
  416f16:	jmp    DWORD PTR [esp+edx*4]
  416f19:	push   edi
  416f1a:	sbb    eax,0x253caf3a
  416f1f:	sub    DWORD PTR [edx],0xffffffbb
  416f22:	ds stos BYTE PTR es:[edi],al
  416f24:	push   esp
  416f25:	sub    ecx,DWORD PTR [esi+0x77]
  416f28:	inc    ecx
  416f29:	fwait
  416f2a:	iret   
  416f2b:	ins    BYTE PTR es:[edi],dx
  416f2c:	pop    edx
  416f2d:	test   eax,0x8ac7d427
  416f32:	shl    DWORD PTR [ecx-0x242d9f58],0xd2
  416f39:	cli    
  416f3a:	mov    edx,0x16062448
  416f3f:	dec    ebx
  416f40:	and    esp,DWORD PTR [esi-0x73]
  416f43:	js     0x416f3b
  416f45:	rcr    BYTE PTR [ebx+ebp*2+0x1f],cl
  416f49:	test   BYTE PTR [esi-0x70],0x22
  416f4d:	xor    DWORD PTR [edi-0x4cc30243],esp
  416f53:	sub    al,0x1e
  416f55:	pop    ebx
  416f56:	push   ecx
  416f57:	add    DWORD PTR [esi+0x13],ecx
  416f5a:	sbb    dl,BYTE PTR [edi-0xa]
  416f5d:	stc    
  416f5e:	xor    al,0x70
  416f60:	adc    eax,0x30067ed6
  416f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f66:	iret   
  416f67:	aad    0x40
  416f69:	icebp  
  416f6a:	fidivr WORD PTR [edi-0x31]
  416f6d:	cld    
  416f6e:	and    BYTE PTR [edx+0x7ed8689a],ah
  416f74:	jno    0x416f01
  416f76:	jns    0x416feb
  416f78:	sub    ecx,DWORD PTR [ebx+esi*8-0x18]
  416f7c:	icebp  
  416f7d:	out    0x2,eax
  416f7f:	repnz mov ebx,0x78e309f3
  416f85:	mov    edx,0x1ca9629e
  416f8a:	cmp    ah,BYTE PTR [eax+0xc8c8467]
  416f90:	rcr    BYTE PTR [ecx-0x79],cl
  416f93:	stc    
  416f94:	pushf  
  416f95:	loop   0x416fbb
  416f97:	push   0xc2eba80c
  416f9c:	mov    WORD PTR ds:0xa3ed99ff,es
  416fa2:	cmp    edx,eax
  416fa4:	in     eax,0x20
  416fa6:	stos   BYTE PTR es:[edi],al
  416fa7:	and    ch,bh
  416fa9:	push   eax
  416faa:	push   0xffffff93
  416fac:	push   cs
  416fad:	mov    al,0x38
  416faf:	mov    ebx,eax
  416fb1:	xchg   esp,eax
  416fb2:	push   ds
  416fb3:	jnp    0x416f42
  416fb5:	or     BYTE PTR [edx-0x10a86f61],0xa2
  416fbc:	mov    eax,0xe69fb8c4
  416fc1:	dec    ebx
  416fc2:	sbb    edi,DWORD PTR [ebx-0x5661cdaf]
  416fc8:	pop    edx
  416fc9:	add    eax,0x731ac9cb
  416fce:	lds    eax,FWORD PTR [ecx+0x696dd96d]
  416fd4:	int3   
  416fd5:	sbb    ecx,DWORD PTR [edx-0x4e]
  416fd8:	icebp  
  416fd9:	mov    ecx,0x476cd24b
  416fde:	sbb    ebx,ebx
  416fe0:	mov    bl,0xe7
  416fe2:	sbb    ax,WORD PTR [eax-0x5776a639]
  416fe9:	shl    DWORD PTR [eax-0x1c],0xf6
  416fed:	inc    ecx
  416fee:	add    bl,BYTE PTR [esi-0x5b]
  416ff1:	inc    esp
  416ff2:	sub    al,0xe
  416ff4:	bt     DWORD PTR [edx-0x4a62b146],edi
  416ffb:	jmp    0x41702e
  416ffd:	mov    cl,0xe
  416fff:	gs adc ch,cl
  417002:	jnp    0x416f86
  417004:	xchg   ecx,eax
  417005:	cmp    ch,0x84
  417008:	jg     0x416fdf
  41700a:	adc    edi,DWORD PTR [esi+ebp*4-0x38355bca]
  417011:	pushf  
  417012:	and    DWORD PTR [ebx],edx
  417014:	add    ecx,esp
  417016:	mov    ah,ah
  417018:	dec    eax
  417019:	int3   
  41701a:	es jne 0x416ff0
  41701d:	jle    0x416fc8
  41701f:	pop    esi
  417020:	sub    dl,bl
  417022:	test   DWORD PTR [ecx+0x7d42dc01],edi
  417028:	imul   esi,edx,0x70
  41702b:	dec    edx
  41702c:	jmp    0xf779:0x73ea48ba
  417033:	jae    0x416fce
  417035:	add    esi,esp
  417037:	(bad)  
  417038:	jl     0x417070
  41703a:	cmp    ecx,DWORD PTR [ebp-0x4c61b94]
  417040:	jo     0x417058
  417042:	adc    BYTE PTR [ebp+0x7d],ah
  417045:	cmp    al,0x39
  417047:	mov    edx,0x3fc1ca14
  41704c:	sbb    esi,esp
  41704e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41704f:	mov    ds:0xbc4d54fd,al
  417054:	nop
  417055:	es popf 
  417057:	mov    esp,DWORD PTR [ebp+0x472c7478]
  41705d:	shl    DWORD PTR [ecx-0x79],1
  417060:	mov    ah,0xda
  417062:	jns    0x41702b
  417064:	fs (bad) 
  417066:	jmp    0x14aed3c4
  41706b:	jl     0x41707a
  41706d:	and    edx,DWORD PTR [ebp+0x74cd5e05]
  417073:	push   ebp
  417074:	ins    BYTE PTR es:[edi],dx
  417075:	out    dx,eax
  417076:	test   DWORD PTR [ebp+0x1d780f06],edi
  41707c:	ret    0x787f
  41707f:	lods   al,BYTE PTR ds:[esi]
  417080:	lds    esp,FWORD PTR ds:0x56f0511a
  417086:	jne    0x41701d
  417088:	fsub   QWORD PTR [edx-0x760fb1a5]
  41708e:	ds test eax,0xeda6d461
  417094:	or     BYTE PTR [ebx+esi*4+0x56790519],cl
  41709b:	mov    al,ds:0x75e0295f
  4170a0:	cld    
  4170a1:	into   
  4170a2:	lgs    ebp,FWORD PTR [esi+0x5b2925ad]
  4170a9:	adc    ebp,ebx
  4170ab:	add    BYTE PTR [edi],al
  4170ad:	aaa    
  4170ae:	jbe    0x41709c
  4170b0:	imul   ebx,DWORD PTR [edi+0x62],0x45
  4170b4:	shl    BYTE PTR [edi],0x3c
  4170b7:	outs   dx,DWORD PTR ds:[esi]
  4170b8:	outs   dx,BYTE PTR ds:[esi]
  4170b9:	sub    DWORD PTR [edx+0x1e],esi
  4170bc:	sbb    edi,DWORD PTR [ebx]
  4170be:	jns    0x4170f9
  4170c0:	and    DWORD PTR [ebp-0x7bb3e8df],eax
  4170c6:	mov    dl,0x3a
  4170c8:	push   es
  4170c9:	pop    eax
  4170ca:	lock pop esp
  4170cc:	test   DWORD PTR [ecx],ebx
  4170ce:	add    al,0x4e
  4170d0:	push   ebx
  4170d1:	push   0x1316bb3b
  4170d6:	popf   
  4170d7:	cli    
  4170d8:	or     ch,BYTE PTR [ebx]
  4170da:	pop    ss
  4170db:	in     al,0x55
  4170dd:	leave  
  4170de:	inc    ebx
  4170df:	mov    ebp,0x1d903788
  4170e4:	enter  0x960a,0x90
  4170e8:	addr16 out 0x8e,al
  4170eb:	push   ds
  4170ec:	jae    0x4170c8
  4170ee:	test   al,0xac
  4170f0:	jno    0x417150
  4170f2:	mov    esi,0xb5469736
  4170f7:	enter  0x92a3,0xad
  4170fb:	dec    edi
  4170fc:	jl     0x417110
  4170fe:	pop    es
  4170ff:	adc    ah,BYTE PTR [ebx+0x1f]
  417102:	sbb    BYTE PTR [esi+eiz*2+0x7005961],bl
  417109:	xchg   ebp,eax
  41710a:	out    dx,eax
  41710b:	sahf   
  41710c:	mov    ecx,0xc5e5aa42
  417111:	xchg   ebp,eax
  417112:	add    edi,DWORD PTR [ebx+0x2b]
  417115:	pop    edi
  417116:	cmc    
  417117:	and    DWORD PTR [ebx],edx
  417119:	mov    bh,0x53
  41711b:	addr16 mov bh,0xb5
  41711e:	inc    esi
  41711f:	add    BYTE PTR [edi-0x37],ah
  417122:	leave  
  417123:	(bad)
  417126:	adc    al,0x38
  417128:	aam    0x5a
  41712a:	mov    esp,0x8d966c1c
  41712f:	hlt    
  417130:	ret    0xacc4
  417133:	movlps QWORD PTR [esp+ebx*2],xmm2
  417137:	imul   eax,DWORD PTR [ebx],0x818341c
  41713d:	ret    
  41713e:	jmp    0x6bb3:0x84826533
  417145:	or     cl,BYTE PTR [esi-0x1cc19d7c]
  41714b:	mul    BYTE PTR [esi+0x3be6d81a]
  417151:	shr    BYTE PTR [edx*1+0x59598ff],0xcf
  417159:	and    esp,DWORD PTR [eax-0x1f]
  41715c:	arpl   sp,ax
  41715e:	mov    bh,BYTE PTR [ebx]
  417160:	aaa    
  417161:	add    eax,0xd5538eb8
  417166:	dec    edi
  417167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417168:	adc    BYTE PTR [ecx+0x368c551a],0xf5
  41716f:	and    DWORD PTR [ebx-0x13],eax
  417172:	xchg   DWORD PTR [ecx+0x69],ebx
  417175:	pop    ecx
  417176:	pusha  
  417177:	sbb    BYTE PTR [edi+0x172affff],al
  41717d:	inc    esi
  41717e:	mov    ch,0xe7
  417180:	into   
  417181:	pop    esp
  417182:	sub    ebp,ebp
  417184:	(bad)  
  417185:	and    eax,0x283f43f5
  41718a:	imul   edx,DWORD PTR [esi+0x78069424],0xc963a522
  417194:	outs   dx,BYTE PTR ds:[esi]
  417195:	mov    ah,0x96
  417197:	mov    cl,0xfb
  417199:	lds    esp,FWORD PTR [ebx]
  41719b:	jnp    0x41719d
  41719d:	loop   0x41716c
  41719f:	xchg   DWORD PTR [ecx+0x35fc3299],ebp
  4171a5:	add    eax,0x522d9551
  4171aa:	addr16 inc eax
  4171ac:	jl     0x4171dc
  4171ae:	jns    0x4171bf
  4171b0:	push   ds
  4171b1:	lds    ebx,FWORD PTR [edx+0x7fef3870]
  4171b7:	retf   
  4171b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b9:	mov    al,0x1f
  4171bb:	sbb    eax,0x89389d6f
  4171c0:	int3   
  4171c1:	mov    esi,ecx
  4171c3:	xchg   ecx,eax
  4171c4:	or     eax,0x201754e2
  4171c9:	add    al,0x74
  4171cb:	mov    dh,0x15
  4171cd:	out    0x98,eax
  4171cf:	sbb    BYTE PTR [ecx+eax*8-0x1daa01f8],ch
  4171d6:	je     0x417160
  4171d8:	xor    DWORD PTR [esi],edi
  4171da:	cld    
  4171db:	jecxz  0x41724e
  4171dd:	mov    eax,0x40fa18f8
  4171e2:	nop
  4171e3:	lahf   
  4171e4:	sbb    BYTE PTR [esi],0x57
  4171e7:	inc    eax
  4171e8:	sbb    eax,0x9c2a7763
  4171ed:	int    0xdb
  4171ef:	and    al,0x63
  4171f1:	test   BYTE PTR ds:0xdcc929cd,0x97
  4171f8:	popf   
  4171f9:	mov    cl,BYTE PTR [esp+ecx*4-0x75]
  4171fd:	(bad)  
  4171fe:	int    0xa3
  417200:	test   al,0xce
  417202:	rcl    DWORD PTR [eax+ecx*2+0x23],1
  417206:	fldz   
  417208:	push   edx
  417209:	and    DWORD PTR [ecx],eax
  41720b:	icebp  
  41720c:	repz mov edi,0x3451abde
  417212:	or     esi,DWORD PTR [ebx+esi*2-0x4]
  417216:	lahf   
  417217:	mov    bl,0x35
  417219:	or     ebp,edx
  41721b:	lahf   
  41721c:	inc    ecx
  41721d:	sbb    eax,0xaea3d92f
  417222:	clc    
  417223:	dec    edi
  417224:	push   ss
  417225:	cmp    BYTE PTR [edx+0x520fb8f6],cl
  41722b:	or     esp,eax
  41722d:	sbb    ah,BYTE PTR [edi+ebp*2]
  417230:	add    DWORD PTR [eax+0x75dc77df],ebx
  417236:	lods   eax,DWORD PTR ds:[esi]
  417237:	pop    ds
  417238:	fwait
  417239:	sbb    ch,0x35
  41723c:	inc    esi
  41723d:	jae    0x41727f
  41723f:	add    edi,ecx
  417241:	or     BYTE PTR [edx-0x1d18e6da],cl
  417247:	out    0xe7,al
  417249:	popa   
  41724a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41724b:	xchg   esp,eax
  41724c:	add    al,0xac
  41724e:	inc    esp
  41724f:	leave  
  417250:	mov    ebp,fs
  417252:	in     al,0x90
  417254:	mov    al,ch
  417256:	imul   ebp,DWORD PTR cs:[edi-0x3],0xffffff90
  41725b:	pop    esi
  41725c:	mov    bh,0x53
  41725e:	adc    BYTE PTR [ecx+0x5f],dh
  417261:	lock sub BYTE PTR [edi],0x60
  417265:	jg     0x4172c6
  417267:	dec    eax
  417268:	xchg   esp,eax
  417269:	sub    BYTE PTR [edi],ch
  41726b:	mov    BYTE PTR [edx],dl
  41726d:	cld    
  41726e:	xchg   esi,eax
  41726f:	or     dl,cl
  417271:	and    al,0x86
  417273:	jns    0x4172de
  417275:	stc    
  417276:	mov    DWORD PTR [edx],eax
  417278:	cmp    DWORD PTR [ebp-0x5e0f4d21],ecx
  41727e:	rcr    BYTE PTR [edx-0x7dd3ee96],1
  417284:	push   ss
  417285:	fld    DWORD PTR [ebx]
  417287:	pop    eax
  417288:	and    eax,0x9e6e5e3f
  41728d:	mov    cl,0x99
  41728f:	or     cl,BYTE PTR [esi+0x79]
  417292:	sub    DWORD PTR [bp+si],0x9ae15e38
  417299:	fimul  DWORD PTR [eax]
  41729b:	add    eax,0xbdd910d2
  4172a0:	mov    esi,0x6ad4f3c3
  4172a5:	fcom   QWORD PTR [ebx+0x6e1463d2]
  4172ab:	pusha  
  4172ac:	or     BYTE PTR [ebx],ah
  4172ae:	jge    0x4172ab
  4172b0:	and    al,0x5b
  4172b2:	test   esp,esp
  4172b4:	sbb    edx,DWORD PTR [ebx]
  4172b6:	xor    cl,BYTE PTR [ecx+eax*2+0x6f]
  4172ba:	stos   BYTE PTR es:[edi],al
  4172bb:	icebp  
  4172bc:	pop    esi
  4172bd:	aad    0xea
  4172bf:	or     DWORD PTR [esi],ebp
  4172c1:	test   eax,0x80a39897
  4172c7:	add    BYTE PTR cs:[ebp-0x69db309],0xa5
  4172cf:	cmc    
  4172d0:	test   DWORD PTR [esp+ebx*1-0x2b38e93c],esp
  4172d7:	hlt    
  4172d8:	sub    ah,bl
  4172da:	push   eax
  4172db:	sub    al,0xeb
  4172dd:	mov    al,0xc
  4172df:	push   es
  4172e0:	mov    al,0x2c
  4172e2:	in     al,dx
  4172e3:	loop   0x417290
  4172e5:	test   al,0xaf
  4172e7:	inc    ebp
  4172e8:	or     al,0x6f
  4172ea:	out    dx,eax
  4172eb:	in     eax,dx
  4172ec:	loope  0x4172ee
  4172ee:	js     0x41729f
  4172f0:	fstp   TBYTE PTR [esi+0x67d8a2ba]
  4172f6:	arpl   ax,bp
  4172f8:	das    
  4172f9:	test   eax,0x553c3fa7
  4172fe:	in     al,dx
  4172ff:	adc    al,BYTE PTR [edx+0x33803d06]
  417305:	dec    ebp
  417306:	lahf   
  417307:	jle    0x4172cb
  417309:	nop
  41730a:	lea    edx,[eax]
  41730c:	add    dl,bl
  41730e:	pop    eax
  41730f:	lock js 0x417310
  417312:	jl     0x41737c
  417314:	mov    ds,WORD PTR [edx+0x2c]
  417317:	nop
  417318:	loop   0x4172c0
  41731a:	les    ebp,FWORD PTR [eax+0x3da5b874]
  417320:	cmp    DWORD PTR [edx-0x39],esp
  417323:	dec    edi
  417324:	pop    esi
  417325:	jge    0x41731a
  417327:	push   es
  417328:	pop    edx
  417329:	out    dx,eax
  41732a:	push   ecx
  41732b:	js     0x417335
  41732d:	xchg   edi,eax
  41732e:	das    
  41732f:	aas    
  417330:	jp     0x417321
  417332:	retf   0xb2be
  417335:	add    BYTE PTR [edx],ah
  417337:	outs   dx,BYTE PTR ds:[esi]
  417338:	cmp    eax,0x319077bf
  41733d:	inc    ebx
  41733e:	inc    ecx
  41733f:	sub    eax,0xa693ed8d
  417344:	int3   
  417345:	arpl   WORD PTR [ebx-0x4a0436ef],dx
  41734b:	mov    ch,0x9e
  41734d:	dec    DWORD PTR [edi]
  41734f:	call   0x30ef:0x3e490a3e
  417356:	inc    edx
  417357:	sti    
  417358:	add    edx,edx
  41735a:	pop    ds
  41735b:	dec    esp
  41735c:	aad    0x66
  41735e:	ror    edi,1
  417360:	ret    0x1cbc
  417363:	xchg   BYTE PTR [ebp+ebx*4+0x30],dh
  417367:	ret    
  417368:	hlt    
  417369:	mov    bl,0x94
  41736b:	sub    dl,BYTE PTR [edi+0x2c]
  41736e:	adc    edi,DWORD PTR [eax+0x5a22ead4]
  417374:	test   DWORD PTR [ecx],eax
  417376:	retf   
  417377:	(bad)  
  417378:	std    
  417379:	cmp    eax,0xdefcc9af
  41737e:	sub    BYTE PTR [ecx],bh
  417380:	js     0x417385
  417382:	lds    ebx,FWORD PTR [esi+0x44962008]
  417388:	sub    esp,DWORD PTR [esi-0x72]
  41738b:	enter  0x3199,0x42
  41738f:	into   
  417390:	call   0x9459f3e6
  417395:	ret    
  417396:	dec    edx
  417397:	jp     0x4173ef
  417399:	mov    ebp,0x6a125991
  41739e:	pop    ebp
  41739f:	shr    BYTE PTR [edx+edi*8-0x62244410],cl
  4173a6:	sub    DWORD PTR [ecx+0x62],esi
  4173a9:	xchg   esi,esp
  4173ab:	cmp    BYTE PTR [edi],0xe7
  4173ae:	push   0xe71801e6
  4173b3:	adc    al,0xd5
  4173b5:	mov    edx,0xa943f36a
  4173ba:	pop    ss
  4173bb:	xor    eax,ebp
  4173bd:	mov    dl,BYTE PTR [edi-0x1f3a8289]
  4173c3:	shr    BYTE PTR [ebx+ecx*1+0x3c],cl
  4173c7:	or     ebx,DWORD PTR [esi-0x6f]
  4173ca:	into   
  4173cb:	aad    0x17
  4173cd:	push   0x55
  4173cf:	fld    st(2)
  4173d1:	and    eax,0x975d77da
  4173d6:	imul   BYTE PTR [ebp+0x7172dd45]
  4173dc:	scas   eax,DWORD PTR es:[edi]
  4173dd:	inc    eax
  4173de:	jecxz  0x4173c5
  4173e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e1:	rol    DWORD PTR [esi],cl
  4173e3:	add    al,0x23
  4173e5:	add    eax,0xad94f1a4
  4173ea:	je     0x417374
  4173ec:	xor    eax,0xe40749b1
  4173f1:	jno    0x417374
  4173f3:	cmc    
  4173f4:	(bad)  
  4173f5:	dec    esi
  4173f6:	cmp    ch,BYTE PTR ds:0x78263001
  4173fc:	pop    esi
  4173fd:	and    BYTE PTR [ebx],0xd5
  417400:	mov    ch,0x27
  417402:	pop    esi
  417403:	sbb    DWORD PTR [ecx-0x75eda3f8],0xd6e0818f
  41740d:	mov    al,0xb9
  41740f:	stos   BYTE PTR es:[edi],al
  417410:	scas   eax,DWORD PTR es:[edi]
  417411:	(bad)  
  417412:	jnp    0x41747c
  417414:	inc    edx
  417415:	imul   ecx,DWORD PTR [ebp+0x26],0x27bc2e9f
  41741c:	sub    DWORD PTR [eax-0x7f85bfe8],ebp
  417422:	sbb    bl,0x8e
  417425:	sub    DWORD PTR [ebx],0x36de4b3e
  41742b:	mov    bh,cl
  41742d:	enter  0x2635,0x2c
  417431:	(bad)  
  417432:	push   ebx
  417433:	inc    ecx
  417434:	popf   
  417435:	xor    eax,0xa235f1b0
  41743a:	lock push esp
  41743c:	fs sbb al,0xf6
  41743f:	jne    0x4173f3
  417441:	vandnps ymm5,ymm0,YMMWORD PTR [esi+0x10]
  417446:	popf   
  417447:	sti    
  417448:	sti    
  417449:	and    eax,0xa3eb7e16
  41744e:	jo     0x417442
  417450:	or     al,0x0
  417452:	xchg   BYTE PTR [edi+ebx*1+0x5b211ce5],ah
  417459:	or     DWORD PTR [edx],esp
  41745b:	sbb    ebp,DWORD PTR ds:0xa6e77d41
  417461:	dec    esi
  417462:	sub    eax,0xfd1fb614
  417467:	or     eax,0x3c238a64
  41746c:	inc    esi
  41746d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746e:	and    BYTE PTR [esi+0x27d2ee32],dh
  417474:	lods   al,BYTE PTR ds:[esi]
  417475:	(bad)  
  417476:	ret    
  417477:	mov    bh,0x9d
  417479:	pop    edx
  41747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747b:	in     eax,dx
  41747c:	sub    BYTE PTR [ebx-0x70],al
  41747f:	pop    ecx
  417480:	and    eax,0xe1e471e5
  417485:	retf   
  417486:	pop    eax
  417487:	aam    0xc9
  417489:	addr16 sbb dh,ch
  41748c:	and    bl,BYTE PTR [ecx+0x65]
  41748f:	xchg   edi,eax
  417490:	scas   al,BYTE PTR es:[edi]
  417491:	pushf  
  417492:	in     eax,0x29
  417494:	pop    ecx
  417495:	sub    cl,bh
  417497:	add    bl,bl
  417499:	or     eax,0xa2c3261a
  41749e:	int3   
  41749f:	popa   
  4174a0:	xlat   BYTE PTR ds:[ebx]
  4174a1:	jp     0x417479
  4174a3:	out    dx,eax
  4174a4:	fldenv [edx]
  4174a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a7:	pavgb  mm4,QWORD PTR [edi]
  4174aa:	imul   eax,DWORD PTR [esi-0x5e88d39b],0x3be48c01
  4174b4:	stc    
  4174b5:	call   0x702:0x205df85f
  4174bc:	pop    eax
  4174bd:	cs int3 
  4174bf:	outs   dx,DWORD PTR ds:[esi]
  4174c0:	shr    ebx,0x4a
  4174c3:	out    0x10,eax
  4174c5:	mov    ch,BYTE PTR [esi]
  4174c7:	and    WORD PTR [ebp-0x4e53916f],dx
  4174ce:	ret    0x96f6
  4174d1:	push   es
  4174d2:	js     0x4174c0
  4174d4:	rcr    BYTE PTR [esi+0x77d8f804],cl
  4174da:	or     eax,ebp
  4174dc:	sbb    al,0x73
  4174de:	xor    BYTE PTR [eax-0xe],0x5a
  4174e2:	repnz mov BYTE PTR [ebx],bl
  4174e5:	(bad)  
  4174e6:	ret    
  4174e7:	sbb    dl,BYTE PTR [esi-0x1e3f713c]
  4174ed:	push   ecx
  4174ee:	xchg   esi,eax
  4174ef:	cmp    al,0xc1
  4174f1:	aaa    
  4174f2:	push   0x4f
  4174f4:	dec    esi
  4174f5:	test   BYTE PTR [edi+0x57],bl
  4174f8:	outs   dx,DWORD PTR ds:[esi]
  4174f9:	jle    0x417484
  4174fb:	adc    edx,esi
  4174fd:	mov    es,WORD PTR [edi]
  4174ff:	add    dh,BYTE PTR [ebp+0x75]
  417502:	and    bl,BYTE PTR [esp+edx*2+0x61867fa2]
  417509:	xlat   BYTE PTR ds:[ebx]
  41750a:	push   ebx
  41750c:	adc    esi,esi
  41750e:	mov    fs,WORD PTR [eax+edi*4+0xf]
  417512:	enter  0x648c,0xbc
  417516:	(bad)  
  417517:	mov    ecx,?
  417519:	push   eax
  41751a:	jmp    0x41758f
  41751c:	sub    BYTE PTR [edi+0x35],cl
  41751f:	shl    BYTE PTR [esi+eiz*8],1
  417522:	call   0xbe42:0x17fb37f6
  417529:	sar    DWORD PTR [edi-0x167624c6],1
  41752f:	sbb    bl,BYTE PTR [edx-0x35]
  417532:	sbb    DWORD PTR [eax-0x3c45dd1c],ecx
  417538:	es xchg ebx,eax
  41753a:	(bad)  
  41753b:	enter  0xaca9,0x64
  41753f:	stos   DWORD PTR es:[edi],eax
  417540:	pop    edx
  417541:	xchg   ebx,eax
  417542:	jecxz  0x4175ad
  417544:	and    al,0x3a
  417546:	mov    BYTE PTR [esi-0x76],cl
  417549:	xchg   DWORD PTR [ebx],esi
  41754b:	into   
  41754c:	inc    ecx
  41754d:	gs or  eax,0x722d4cf5
  417553:	repnz inc esi
  417555:	mov    dh,0x4d
  417557:	adc    dh,BYTE PTR [edx]
  417559:	bound  edx,QWORD PTR [edi]
  41755b:	dec    ecx
  41755c:	stos   DWORD PTR es:[edi],eax
  41755d:	xor    BYTE PTR [eax+0x66],dl
  417560:	(bad)  
  417561:	mov    bh,0x4b
  417563:	int3   
  417564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417565:	std    
  417566:	sub    DWORD PTR [edx+ecx*4-0xa],0x57
  41756b:	push   ebx
  41756c:	aas    
  41756d:	xchg   ecx,eax
  41756e:	ret    0xb6ba
  417571:	bswap  eax
  417573:	pop    edi
  417574:	rcl    DWORD PTR [esp+ebp*8],cl
  417577:	push   ebp
  417578:	mov    al,ds:0xa870a74
  41757d:	cmp    BYTE PTR [eax-0x6ac26ab8],0xa6
  417584:	fsub   DWORD PTR [edi-0x6f59e2c9]
  41758a:	lds    edx,FWORD PTR [eax+eiz*4+0x3b7141b8]
  417591:	aam    0x80
  417593:	and    al,0x47
  417595:	xor    al,0x15
  417597:	mov    bh,0xe1
  417599:	xchg   edi,eax
  41759a:	adc    DWORD PTR [esi+0x1c],eax
  41759d:	stos   BYTE PTR es:[edi],al
  41759e:	adc    eax,0x72ddc5d0
  4175a3:	xor    bl,dh
  4175a5:	ins    DWORD PTR es:[edi],dx
  4175a6:	push   ds
  4175a7:	(bad)  
  4175a8:	jle    0x417541
  4175aa:	or     eax,0xe01c526d
  4175af:	mov    ebp,0x7477091a
  4175b4:	push   esi
  4175b5:	stos   BYTE PTR es:[edi],al
  4175b6:	dec    eax
  4175b7:	push   edx
  4175b8:	adc    dl,ch
  4175ba:	and    DWORD PTR [ebp-0x6258d1ee],0xffffff8f
  4175c1:	adc    eax,0x31d909e6
  4175c6:	mov    edx,esi
  4175c8:	sbb    al,0x1a
  4175ca:	sub    bl,BYTE PTR [esi+0x68934708]
  4175d0:	adc    eax,0x81fed3f8
  4175d5:	jae    0x41763c
  4175d7:	or     dl,ah
  4175d9:	outs   dx,BYTE PTR ds:[esi]
  4175da:	ss mov edi,0x2c3e27ce
  4175e0:	xchg   BYTE PTR [ecx-0x57d3b8e3],cl
  4175e6:	xlat   BYTE PTR ds:[ebx]
  4175e7:	mov    al,ds:0x5b810c54
  4175ec:	hlt    
  4175ed:	loop   0x4175bb
  4175ef:	int3   
  4175f0:	iret   
  4175f1:	or     BYTE PTR [eax-0x4f6cc9a2],bl
  4175f7:	or     eax,0x9895551c
  4175fc:	js     0x41762c
  4175fe:	sub    bl,BYTE PTR [ecx+0x7a22e6]
  417604:	jnp    0x417641
  417606:	dec    ecx
  417607:	sub    al,0x11
  417609:	sar    BYTE PTR [ebx+0x5f],0x94
  41760d:	xor    edx,DWORD PTR [esp+edx*4-0x4313e2c9]
  417614:	inc    esp
  417616:	cmp    bl,dh
  417618:	jmp    0x4175d6
  41761a:	cmp    al,0xc1
  41761c:	mov    ecx,0x184205ff
  417621:	jbe    0x417616
  417623:	push   ebp
  417624:	pop    ds
  417625:	dec    eax
  417626:	dec    ebp
  417627:	add    al,0x4c
  417629:	mov    esp,0xf927b4fd
  41762e:	mov    dl,0xa7
  417630:	sub    ah,BYTE PTR [edi+0x33]
  417633:	popf   
  417634:	push   esp
  417635:	dec    esp
  417636:	inc    edi
  417637:	test   BYTE PTR [eax],ah
  417639:	shr    BYTE PTR [ebx-0x34],0xb9
  41763d:	dec    esp
  41763e:	mov    ebx,cs
  417640:	imul   ebp,DWORD PTR [edi-0x70eb239a],0xffffffef
  417647:	adc    eax,0x2b894b93
  41764c:	xor    BYTE PTR [ebp-0x38],ah
  41764f:	xchg   DWORD PTR [edi-0x28],ebp
  417652:	adc    al,0xd9
  417654:	je     0x41765e
  417656:	xchg   ebx,eax
  417657:	pop    eax
  417658:	mov    dl,0xbe
  41765a:	add    ch,BYTE PTR [eax]
  41765c:	into   
  41765d:	and    ch,BYTE PTR [ebx]
  41765f:	or     ecx,ecx
  417661:	cli    
  417662:	retf   0x4351
  417665:	ins    BYTE PTR es:[edi],dx
  417666:	ja     0x417679
  417668:	xchg   DWORD PTR [esi+0x8],ecx
  41766b:	lods   al,BYTE PTR ds:[esi]
  41766c:	imul   ebx,DWORD PTR [eax+0x1577cb1a],0xd8b7a7e0
  417676:	mov    esi,0x80816086
  41767b:	mov    WORD PTR [ebp-0x516323d5],fs
  417681:	xchg   BYTE PTR [esi],ch
  417683:	sub    eax,0x4a3c6b
  417688:	push   cs
  417689:	jnp    0x417693
  41768b:	popa   
  41768c:	and    DWORD PTR [ecx+eax*4],eax
  41768f:	clc    
  417690:	pop    esp
  417691:	sar    DWORD PTR [ebp-0x43],cl
  417694:	fnsave [ebp+0x1ae760fa]
  41769a:	push   0x9f910f9c
  41769f:	dec    ebx
  4176a0:	lock rcr dl,cl
  4176a3:	add    ch,BYTE PTR [esi+eiz*1+0x2f05cf64]
  4176aa:	sbb    eax,0xf1c1be92
  4176af:	push   ss
  4176b0:	dec    edx
  4176b1:	mov    ds:0x47e0323b,eax
  4176b6:	stos   DWORD PTR es:[edi],eax
  4176b7:	xor    eax,0x26bf33fb
  4176bc:	jnp    0x41767a
  4176be:	sbb    BYTE PTR [ebp+0x4b],0x63
  4176c2:	push   0xffffffb3
  4176c4:	sahf   
  4176c5:	in     al,0x97
  4176c7:	push   ebp
  4176c8:	cmp    al,BYTE PTR [esi+0x7dcae117]
  4176ce:	and    dh,BYTE PTR [ecx+0x1a]
  4176d1:	cmc    
  4176d2:	cs jnp 0x417735
  4176d5:	jnp    0x4176a4
  4176d7:	bound  edi,QWORD PTR [edx+esi*1+0x196e3e57]
  4176de:	jge    0x417705
  4176e0:	lock mul eax
  4176e3:	mov    dl,BYTE PTR [ebx-0x74]
  4176e6:	outs   dx,DWORD PTR ds:[esi]
  4176e7:	pop    es
  4176e8:	es or  eax,0x6dab72a0
  4176ee:	(bad)  
  4176ef:	in     eax,dx
  4176f0:	ins    DWORD PTR es:[edi],dx
  4176f1:	addr16 in al,dx
  4176f3:	in     eax,dx
  4176f4:	jo     0x41771b
  4176f6:	mov    ebp,0xa441e92f
  4176fb:	test   BYTE PTR [ebp-0x15],bl
  4176fe:	jmp    FWORD PTR [eax]
  417700:	outs   dx,DWORD PTR ds:[esi]
  417701:	cmp    eax,0x8fa4fc98
  417706:	cmp    BYTE PTR [esi+0x6525b2fd],al
  41770c:	pop    ds
  41770d:	retf   
  41770e:	stos   BYTE PTR es:[edi],al
  41770f:	and    BYTE PTR [ecx],al
  417711:	fiadd  DWORD PTR [eax-0x4a]
  417714:	mov    WORD PTR [ebp+0x2c],fs
  417717:	cmp    eax,0x68513286
  41771c:	adc    al,0x2f
  41771e:	int3   
  41771f:	retf   0x6d17
  417722:	jge    0x417745
  417724:	cdq    
  417725:	retf   
  417726:	sub    dh,BYTE PTR [esi-0x17]
  417729:	inc    ecx
  41772a:	bound  edi,QWORD PTR [esi]
  41772c:	cmp    BYTE PTR [ecx],ah
  41772e:	imul   ebx,DWORD PTR ds:0xbd9f47a5,0xffffffec
  417735:	mov    esi,ebx
  417737:	and    BYTE PTR [ebx],ch
  417739:	and    al,0xce
  41773b:	popa   
  41773c:	bnd jbe 0x4176ea
  41773f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417740:	add    BYTE PTR [ebp+0x3fe9d8c2],bl
  417746:	jne    0x4177a7
  417748:	push   cs
  417749:	sub    ecx,DWORD PTR [esi-0x12]
  41774c:	jp     0x4177a5
  41774e:	rol    BYTE PTR [esi-0x77],cl
  417751:	cmp    eax,ebp
  417753:	fisttp WORD PTR [ebx-0x74]
  417756:	sub    ebp,DWORD PTR [edi-0x61]
  417759:	or     al,bl
  41775b:	sub    DWORD PTR [eax-0x62],edx
  41775e:	popa   
  41775f:	mov    dh,0x8e
  417761:	mov    ?,WORD PTR [edx]
  417763:	lods   eax,DWORD PTR ds:[esi]
  417764:	adc    BYTE PTR fs:0x1b046e28,0x17
  41776c:	mov    ebp,0x322bde12
  417771:	inc    edx
  417772:	fdiv   DWORD PTR [ebp*1-0x395946fa]
  417779:	(bad)  
  41777a:	mov    cl,0x94
  41777c:	add    eax,ecx
  41777e:	pop    ebp
  41777f:	and    eax,0xaa92ec86
  417784:	dec    edx
  417785:	add    ah,BYTE PTR [edi+0x63]
  417788:	mov    ch,0x63
  41778a:	scas   eax,DWORD PTR es:[edi]
  41778b:	lods   eax,DWORD PTR ds:[esi]
  41778c:	rol    DWORD PTR [eax+0x26],cl
  41778f:	aaa    
  417790:	pop    esp
  417791:	shl    DWORD PTR [eax],1
  417793:	call   0x73c95d7a
  417798:	sub    bl,ah
  41779a:	dec    ecx
  41779b:	sub    BYTE PTR [eax+0x1155d4a2],dh
  4177a1:	das    
  4177a2:	pmullw mm1,QWORD PTR [ebx-0x3e]
  4177a6:	dec    si
  4177a8:	lahf   
  4177a9:	add    BYTE PTR [edx+eax*1+0x4dfbd3fc],dl
  4177b0:	cld    
  4177b1:	inc    eax
  4177b2:	out    dx,eax
  4177b3:	mov    bh,0x0
  4177b5:	out    dx,al
  4177b6:	or     DWORD PTR [esi-0x2c],ebx
  4177b9:	in     eax,dx
  4177ba:	mov    esp,0x9d408835
  4177bf:	xchg   edi,eax
  4177c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c1:	xor    ch,al
  4177c3:	pusha  
  4177c4:	xchg   DWORD PTR [ecx-0x3be0b536],edi
  4177ca:	inc    ebx
  4177cb:	mov    ecx,0x10175eb2
  4177d0:	adc    eax,0x1ef6a371
  4177d5:	and    DWORD PTR [ecx-0x2d612d3f],ecx
  4177db:	outs   dx,DWORD PTR ds:[esi]
  4177dc:	cmp    DWORD PTR [ecx+edi*8-0x784e29c8],0xffffff94
  4177e4:	jmp    0x4177a0
  4177e6:	jnp    0x417792
  4177e8:	mov    al,ds:0x10432dfd
  4177ed:	sub    cl,BYTE PTR [ecx+0x3dc674be]
  4177f3:	cmc    
  4177f4:	xchg   BYTE PTR ds:0x6efdda20,ch
  4177fa:	fisubr DWORD PTR [ebp+0x3c]
  4177fd:	add    ecx,DWORD PTR ds:0x10b2829f
  417803:	(bad)  
  417804:	sahf   
  417805:	mov    al,ds:0x2cab9dda
  41780a:	cmp    BYTE PTR [esi],ch
  41780c:	push   ebx
  41780d:	jbe    0x4177ec
  41780f:	sbb    al,0xed
  417811:	push   cs
  417812:	(bad)  [ebx+0x2c]
  417815:	sub    DWORD PTR [edi+ebx*2-0x1],ebp
  417819:	pop    esp
  41781a:	mov    ch,0xe0
  41781c:	or     al,0xb7
  41781e:	iret   
  41781f:	dec    esp
  417820:	and    eax,DWORD PTR [eax-0x62]
  417823:	out    0x58,eax
  417825:	jbe    0x41780c
  417827:	or     eax,0x229f772d
  41782c:	mov    eax,ds:0xd2b6bc68
  417831:	psraw  mm5,mm4
  417834:	mov    ds:0xd35f86d1,al
  417839:	jmp    0x3cac2150
  41783e:	aas    
  41783f:	and    ebx,ecx
  417841:	xor    DWORD PTR [edx-0x4d],edx
  417844:	in     al,dx
  417845:	push   ds
  417846:	pusha  
  417847:	jecxz  0x417868
  417849:	jae    0x4178ac
  41784b:	push   esp
  41784c:	sub    al,0x82
  41784e:	imul   ecx,edx,0x4af25476
  417854:	fcmovnb st,st(1)
  417856:	fwait
  417857:	adc    eax,0x82863842
  41785c:	sar    BYTE PTR [edx],cl
  41785e:	mov    bh,0xf7
  417860:	shr    dh,cl
  417862:	xchg   BYTE PTR [edi+edi*2],dl
  417865:	cmp    al,0xbc
  417867:	sbb    BYTE PTR [ebp+0x5e422a4d],ch
  41786d:	into   
  41786e:	mov    al,ds:0x1eb967e2
  417873:	or     eax,0x5e30d4dc
  417878:	xor    eax,0x7699dc2b
  41787d:	iret   
  41787e:	pop    ecx
  41787f:	add    edx,edx
  417881:	sub    al,0x0
  417883:	fwait
  417884:	adc    DWORD PTR [ecx+0x36031aa1],ebx
  41788a:	ficomp DWORD PTR [ecx-0x8]
  41788d:	mov    bl,0xbf
  41788f:	push   ecx
  417890:	test   DWORD PTR [ecx-0x45],edx
  417893:	pop    es
  417894:	jno    0x417866
  417896:	mov    bh,0xad
  417898:	fldenv [eax+0x7a]
  41789b:	div    BYTE PTR [ebx]
  41789d:	and    edx,DWORD PTR [edx+0x7a4836ec]
  4178a3:	cmp    DWORD PTR [ecx+0x59],esi
  4178a6:	sbb    DWORD PTR es:[ecx],esp
  4178a9:	cmp    dl,BYTE PTR [ecx-0x6811636f]
  4178af:	fadd   st,st(7)
  4178b1:	das    
  4178b2:	jno    0x4178c4
  4178b4:	add    ebx,DWORD PTR [eax+0x70777c0d]
  4178ba:	adc    al,0xaf
  4178bc:	xchg   edi,eax
  4178bd:	cwde   
  4178be:	shl    DWORD PTR [ebp-0x3c277a60],cl
  4178c4:	pop    es
  4178c5:	add    al,0x93
  4178c7:	and    DWORD PTR [ebx],esp
  4178c9:	ret    
  4178ca:	push   ss
  4178cb:	xchg   edx,eax
  4178cc:	jl     0x41791f
  4178ce:	(bad)  
  4178cf:	scas   al,BYTE PTR es:[edi]
  4178d0:	push   eax
  4178d1:	hlt    
  4178d2:	sbb    BYTE PTR [ebx+0x38],al
  4178d5:	sbb    eax,0x8833e9f7
  4178da:	in     al,dx
  4178db:	ds cdq 
  4178dd:	imul   ebp,DWORD PTR [ebp-0x23f81f2a],0xedcab4ce
  4178e7:	dec    esi
  4178e8:	addr16 jl 0x41795a
  4178eb:	aaa    
  4178ec:	add    dh,bl
  4178ee:	jp     0x41792e
  4178f0:	out    0xc8,eax
  4178f2:	xchg   esp,eax
  4178f3:	push   ebx
  4178f4:	and    eax,0xd0d00202
  4178f9:	es inc esp
  4178fb:	sub    BYTE PTR [esi+0x6ab39889],0x3b
  417902:	push   ebx
  417903:	rol    dh,0x5
  417906:	pop    ebx
  417907:	cdq    
  417908:	jp     0x417964
  41790a:	(bad)  
  41790b:	repz push edx
  41790d:	xor    esi,DWORD PTR [edi-0x61a2f147]
  417913:	jmp    0xdb173ec7
  417918:	jb     0x417944
  41791a:	imul   esp,esi,0xea89dcdd
  417920:	fist   WORD PTR [eax]
  417922:	sbb    ebx,DWORD PTR [edi]
  417924:	jb     0x417999
  417926:	sub    cl,cl
  417928:	ins    BYTE PTR es:[edi],dx
  417929:	lods   al,BYTE PTR ds:[esi]
  41792a:	into   
  41792b:	daa    
  41792c:	mov    eax,ds:0xb48ed61c
  417931:	mov    DWORD PTR [esi],ebp
  417933:	and    ebp,ebx
  417935:	mov    ebp,DWORD PTR [eax-0x27]
  417938:	jle    0x417941
  41793a:	test   eax,0x90bda7a2
  41793f:	mov    esp,0x2c3bdc2e
  417944:	push   ebp
  417945:	scas   al,BYTE PTR es:[edi]
  417946:	mov    esp,0xb4c6eef9
  41794b:	adc    ebx,ebp
  41794d:	inc    ebx
  41794e:	dec    eax
  41794f:	loop   0x417929
  417951:	push   edx
  417952:	xchg   ebx,eax
  417953:	and    BYTE PTR [edx],ah
  417955:	icebp  
  417956:	lods   eax,DWORD PTR ds:[esi]
  417957:	adc    al,0xfb
  417959:	jnp    0x4179a7
  41795b:	add    bl,0xbb
  41795e:	test   BYTE PTR ds:0x3f92065b,0x52
  417965:	sub    eax,0xb7838d15
  41796a:	(bad)  
  41796b:	cdq    
  41796c:	(bad)  
  41796d:	in     eax,dx
  41796e:	std    
  41796f:	call   0x923861cf
  417974:	sbb    dh,dh
  417976:	sub    BYTE PTR [edx],bh
  417978:	hlt    
  417979:	dec    esi
  41797a:	in     al,dx
  41797b:	xchg   esi,eax
  41797c:	out    0xe8,al
  41797e:	stos   DWORD PTR es:[di],eax
  417980:	xor    BYTE PTR [eax-0x13],ah
  417983:	(bad)  
  417984:	ins    BYTE PTR es:[edi],dx
  417985:	(bad)  
  417986:	call   FWORD PTR [edi+esi*4+0x66d4dca7]
  41798d:	cwde   
  41798e:	dec    ecx
  41798f:	or     DWORD PTR [edx+0x48],eax
  417992:	pop    eax
  417993:	repz test al,0xcb
  417996:	test   ebp,esi
  417998:	push   es
  417999:	scas   eax,DWORD PTR es:[edi]
  41799a:	clc    
  41799b:	sbb    eax,ecx
  41799d:	cdq    
  41799e:	mov    ah,0x5d
  4179a0:	jg     0x4179aa
  4179a2:	xor    al,0xb2
  4179a4:	clc    
  4179a5:	dec    ebx
  4179a6:	jo     0x417944
  4179a8:	into   
  4179a9:	aam    0xaa
  4179ab:	or     eax,0xe164f5d5
  4179b0:	mov    eax,ds:0xc4e9b3a3
  4179b5:	or     al,0x69
  4179b7:	xchg   esp,eax
  4179b8:	dec    esi
  4179b9:	stos   DWORD PTR es:[edi],eax
  4179ba:	xchg   edx,eax
  4179bb:	mov    WORD PTR [edx-0x65666455],ss
  4179c1:	outs   dx,DWORD PTR ds:[esi]
  4179c2:	data16 sbb dh,BYTE PTR [edi-0x14]
  4179c6:	retf   
  4179c7:	in     eax,0x17
  4179c9:	hlt    
  4179ca:	jne    0x417993
  4179cc:	jle    0x4179fc
  4179ce:	rcr    BYTE PTR [ecx+eax*1+0x1e],cl
  4179d2:	rcl    ebx,0x81
  4179d5:	mov    edx,DWORD PTR [edx+edx*1+0x7aea95f8]
  4179dc:	cwde   
  4179dd:	or     al,0x56
  4179df:	cwde   
  4179e0:	popf   
  4179e1:	repz aad 0xfc
  4179e4:	shl    BYTE PTR ds:0x1d2a0c89,1
  4179ea:	iret   
  4179eb:	fistp  DWORD PTR ds:0xca01f395
  4179f1:	adc    dl,BYTE PTR [eax+0x13]
  4179f4:	add    al,0x1
  4179f6:	push   esi
  4179f7:	jb     0x417980
  4179f9:	or     eax,0xa59b6d74
  4179fe:	cmp    dh,BYTE PTR [esi-0x38]
  417a01:	test   eax,0x1b0b80b8
  417a06:	fisttp QWORD PTR [ebx+0x29]
  417a09:	dec    eax
  417a0a:	add    DWORD PTR [edx],esi
  417a0c:	into   
  417a0d:	xchg   DWORD PTR [eax],esi
  417a0f:	sbb    dl,BYTE PTR [ebp+eax*2+0x4a31eb37]
  417a16:	bound  esi,QWORD PTR ds:0x2bcda65a
  417a1c:	inc    ebx
  417a1d:	adc    BYTE PTR [edx-0x6c0580fd],ah
  417a23:	shr    DWORD PTR [eax],1
  417a25:	in     al,dx
  417a26:	xchg   ebx,eax
  417a27:	and    BYTE PTR [esi+0x6c91c920],dl
  417a2d:	dec    edi
  417a2e:	sbb    bl,bh
  417a30:	imul   ecx,ecx,0x0
  417a33:	mov    al,ds:0x96ae6cc9
  417a38:	data16 js 0x417a57
  417a3b:	adc    ecx,DWORD PTR [edx+0x32]
  417a3e:	daa    
  417a3f:	adc    eax,0xf3005aff
  417a44:	hlt    
  417a45:	je     0x4179d2
  417a47:	fwait
  417a48:	pop    esi
  417a49:	stos   BYTE PTR es:[edi],al
  417a4a:	pop    ebx
  417a4b:	jg     0x417a9d
  417a4d:	hlt    
  417a4e:	mov    edx,0xd737f7df
  417a53:	pop    edx
  417a54:	in     eax,dx
  417a55:	out    dx,eax
  417a56:	push   cs
  417a57:	call   0xe4119e63
  417a5c:	push   ebp
  417a5d:	ret    0x5ea1
  417a60:	jo     0x417a22
  417a62:	in     eax,dx
  417a63:	push   ecx
  417a64:	(bad)  
  417a65:	scas   eax,DWORD PTR es:[edi]
  417a66:	lock xor eax,0xfdb35293
  417a6c:	sub    al,0x46
  417a6f:	outs   dx,DWORD PTR ds:[esi]
  417a70:	sub    BYTE PTR [esi+0x147e2a72],cl
  417a76:	push   esp
  417a77:	mov    eax,ds:0xa647d637
  417a7c:	pop    esi
  417a7d:	xor    cl,dl
  417a7f:	mov    eax,ds:0x8ce75971
  417a84:	mov    WORD PTR [ebx+0x28],ss
  417a87:	inc    eax
  417a88:	ins    DWORD PTR es:[edi],dx
  417a89:	in     al,0x3b
  417a8b:	jle    0x417ad3
  417a8d:	cmp    BYTE PTR [ebx-0x651dd8ec],cl
  417a93:	stos   BYTE PTR es:[edi],al
  417a94:	or     dl,BYTE PTR [ebx+0x3c778fd]
  417a9a:	dec    eax
  417a9b:	iret   
  417a9c:	retf   0xbc6e
  417a9f:	ficom  DWORD PTR [eax+0x4f9aef2]
  417aa5:	mov    BYTE PTR [esi+0x52bd3127],ch
  417aab:	mov    bh,0xff
  417aad:	cmc    
  417aae:	daa    
  417aaf:	cwde   
  417ab0:	ins    BYTE PTR es:[edi],dx
  417ab1:	push   DWORD PTR [eax+0x26c311dd]
  417ab7:	push   edx
  417ab8:	imul   edx,DWORD PTR [eax+ebp*8-0x18],0x25e084f3
  417ac0:	inc    ebp
  417ac1:	mov    cl,0x87
  417ac3:	retf   
  417ac4:	sbb    eax,0x635a9e7d
  417ac9:	pop    esi
  417aca:	pop    esi
  417acb:	cdq    
  417acc:	in     al,0x24
  417ace:	daa    
  417acf:	cmp    cl,BYTE PTR [eax+0x1c699047]
  417ad5:	jg     0x417a84
  417ad7:	stos   DWORD PTR es:[edi],eax
  417ad8:	mov    bh,0xd8
  417ada:	mov    al,ds:0x8ec529d4
  417adf:	push   ebp
  417ae0:	mov    ah,0xd3
  417ae2:	cli    
  417ae3:	sub    esi,DWORD PTR [edi]
  417ae5:	xchg   ebp,eax
  417ae6:	mov    ebx,cs
  417ae8:	mov    cl,BYTE PTR [edi+0x44]
  417aeb:	jno    0x417a7b
  417aed:	push   eax
  417aee:	aam    0x9c
  417af0:	pop    edi
  417af1:	leave  
  417af2:	sbb    BYTE PTR [ebp-0x2c],bl
  417af5:	sbb    BYTE PTR [eax*4-0x37fc9579],ah
  417afc:	dec    ebp
  417afd:	test   DWORD PTR [ecx],esi
  417aff:	mov    ebx,0xbd75b245
  417b04:	mov    ss,WORD PTR [eax+0x75]
  417b07:	jmp    0xb9596d10
  417b0c:	xchg   ebx,eax
  417b0d:	aas    
  417b0e:	xchg   BYTE PTR [edx-0x19],bh
  417b11:	aaa    
  417b12:	lea    esp,[ecx+0x22721b46]
  417b18:	sub    edi,ebp
  417b1a:	xor    esp,ebx
  417b1c:	fisttp WORD PTR [ebp+0x37]
  417b1f:	adc    dh,BYTE PTR [ecx+edx*2+0x37]
  417b23:	rcr    BYTE PTR [ebx+0x5],0x15
  417b27:	arpl   WORD PTR [eax+0x62],ax
  417b2a:	std    
  417b2b:	out    dx,eax
  417b2c:	adc    eax,DWORD PTR [eax+0x67]
  417b2f:	mov    ch,0xc3
  417b31:	retf   0x53a3
  417b34:	inc    esp
  417b35:	fisubr WORD PTR [eax]
  417b38:	js     0x417b63
  417b3a:	jg     0x417ad5
  417b3c:	mov    bl,BYTE PTR [ebp+0x1a]
  417b3f:	xchg   BYTE PTR [edx+0x1c4d85db],cl
  417b45:	cmp    al,0x2
  417b47:	test   bl,al
  417b49:	xchg   ecx,eax
  417b4a:	jae    0x417ad5
  417b4c:	(bad)  
  417b4d:	lock loopne 0x417b34
  417b50:	push   esp
  417b51:	cwde   
  417b52:	aas    
  417b53:	mov    bh,0xa
  417b55:	dec    edi
  417b56:	dec    esi
  417b57:	imul   ebp,DWORD PTR [edx],0xffffffbf
  417b5a:	inc    ebx
  417b5b:	jo     0x417bce
  417b5d:	stos   BYTE PTR es:[edi],al
  417b5e:	fisttp QWORD PTR [edi-0x42]
  417b61:	in     eax,0x9c
  417b63:	add    DWORD PTR [edx-0xe],edx
  417b66:	lds    edx,FWORD PTR [esi+0x2a0a9727]
  417b6c:	icebp  
  417b6d:	mov    ecx,0x623d02b5
  417b72:	sub    BYTE PTR [ebx],0x80
  417b75:	inc    esi
  417b76:	sub    DWORD PTR [esi],ecx
  417b78:	shr    BYTE PTR ds:0xdc4fe687,cl
  417b7e:	add    eax,0xcb04b1b6
  417b83:	sub    al,0xf6
  417b85:	dec    edi
  417b86:	pushf  
  417b87:	mov    ch,0xb6
  417b89:	xor    eax,0x86d5db70
  417b8e:	and    al,0x4d
  417b90:	inc    edi
  417b91:	push   0x19f908ff
  417b96:	mov    bl,BYTE PTR [edi-0x129e2cbb]
  417b9c:	dec    ecx
  417b9d:	sar    edi,0x1a
  417ba0:	push   edx
  417ba1:	xchg   ebx,eax
  417ba2:	in     al,0x53
  417ba4:	out    0xb7,eax
  417ba6:	inc    ecx
  417ba7:	push   ebp
  417ba8:	xchg   BYTE PTR [esi+0x42113849],dh
  417bae:	ss inc edi
  417bb0:	enter  0xa344,0x6
  417bb4:	mov    ebx,0x61ade0b
  417bb9:	adc    DWORD PTR [ecx-0x21],esi
  417bbc:	sub    BYTE PTR [edx-0x24],bl
  417bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bc0:	jmp    0x417bdc
  417bc2:	lea    ebx,[esi-0x71]
  417bc5:	xor    DWORD PTR ds:0x23c541a2,eax
  417bcb:	mov    eax,0xb611e056
  417bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd1:	lods   al,BYTE PTR ds:[esi]
  417bd2:	sbb    eax,0xdf0fae80
  417bd7:	leave  
  417bd8:	int3   
  417bd9:	pop    esi
  417bda:	retf   0x288f
  417bdd:	je     0x417b73
  417bdf:	mov    cl,0xfd
  417be1:	je     0x417bb3
  417be3:	retf   
  417be4:	or     DWORD PTR [ebp-0xdb28fba],0x22
  417beb:	pop    ebp
  417bec:	das    
  417bed:	fbld   TBYTE PTR [ebx]
  417bef:	mov    gs,WORD PTR [ebp+esi*8+0x1f]
  417bf3:	push   edi
  417bf4:	hlt    
  417bf5:	leave  
  417bf6:	into   
  417bf7:	in     eax,dx
  417bf8:	lods   al,BYTE PTR ds:[esi]
  417bf9:	mov    edx,0x76bd3403
  417bfe:	pusha  
  417bff:	aad    0x2f
  417c01:	mov    eax,ds:0x99792f5
  417c06:	xor    eax,0x35ee8d16
  417c0b:	std    
  417c0c:	mov    ch,0x40
  417c0e:	xchg   ebp,eax
  417c0f:	imul   ebx,DWORD PTR [esi],0x48
  417c12:	sahf   
  417c13:	iret   
  417c14:	fs sbb edi,eax
  417c17:	mov    ds:0x2e07035b,eax
  417c1c:	(bad)  
  417c1d:	push   ebx
  417c1e:	lds    ebx,FWORD PTR [ebx]
  417c20:	mov    al,ds:0xbab6b15f
  417c25:	mov    ecx,0xa2290848
  417c2a:	int    0xbc
  417c2c:	(bad)  
  417c2d:	(bad)  [ebp+0x5c]
  417c30:	inc    ecx
  417c31:	ret    
  417c32:	scas   eax,DWORD PTR es:[edi]
  417c33:	inc    edx
  417c34:	pop    esp
  417c35:	lods   al,BYTE PTR ds:[esi]
  417c36:	shl    BYTE PTR [edi+0x29a25d6c],cl
  417c3c:	pop    es
  417c3d:	icebp  
  417c3e:	and    BYTE PTR [edi-0x4b6b1b14],cl
  417c44:	mov    edi,0x751bd23b
  417c49:	push   0xe3982e58
  417c4e:	push   es
  417c4f:	mov    eax,ds:0x16c9b3dc
  417c54:	int3   
  417c55:	xor    al,0xd1
  417c57:	fidiv  DWORD PTR [eax]
  417c59:	mov    edi,0x1791a11e
  417c5e:	jo     0x417bee
  417c60:	int    0x6b
  417c62:	add    eax,0x7c974ec9
  417c67:	scas   al,BYTE PTR es:[edi]
  417c68:	xor    BYTE PTR [ebp+0x56],dh
  417c6b:	fst    DWORD PTR [ebp+0x6a]
  417c6e:	imul   esp,DWORD PTR [ebp+0x2c001d6f],0x6e538a2f
  417c78:	or     al,0x8a
  417c7a:	jne    0x417c93
  417c7c:	rol    DWORD PTR [edx],cl
  417c7e:	jmp    0x6eb2:0x77e4bda9
  417c85:	repz sub DWORD PTR [eax],edi
  417c88:	xor    al,0x96
  417c8a:	adc    BYTE PTR [ebx+0x4d],0x85
  417c8e:	clc    
  417c8f:	push   esp
  417c90:	sub    DWORD PTR [edi],ecx
  417c92:	cmp    edx,ecx
  417c94:	jle    0x417cc3
  417c96:	jmp    0x1fca377f
  417c9b:	mov    edx,0x4b83dac1
  417ca0:	pushf  
  417ca1:	xchg   ebx,eax
  417ca2:	bound  ebx,QWORD PTR [edi-0x7f]
  417ca5:	gs xchg esi,eax
  417ca7:	xor    al,0x98
  417ca9:	cmp    al,0x21
  417cab:	jne    0x417cef
  417cad:	scas   al,BYTE PTR es:[edi]
  417cae:	jb     0x417c4e
  417cb0:	out    dx,al
  417cb1:	hlt    
  417cb2:	out    dx,eax
  417cb3:	jmp    FWORD PTR [ecx]
  417cb5:	pop    esi
  417cb6:	pop    eax
  417cb7:	and    BYTE PTR [ebx],bl
  417cb9:	je     0x417c81
  417cbb:	pop    edi
  417cbc:	fwait
  417cbd:	jbe    0x417c4c
  417cbf:	mov    WORD PTR [ecx-0x2b],?
  417cc2:	mov    eax,ds:0xe2ed342f
  417cc7:	inc    ecx
  417cc8:	loope  0x417c56
  417cca:	sub    dh,cl
  417ccc:	ins    BYTE PTR es:[edi],dx
  417ccd:	lock in al,0x3d
  417cd0:	xor    eax,0xb5ccbb2a
  417cd5:	mov    eax,eax
  417cd7:	loop   0x417d06
  417cd9:	xchg   ebx,eax
  417cda:	dec    ebp
  417cdb:	cwde   
  417cdc:	pop    ecx
  417cdd:	leave  
  417cde:	fbld   TBYTE PTR [eax-0x52]
  417ce1:	mov    WORD PTR [edi],?
  417ce3:	dec    esi
  417ce4:	scas   al,BYTE PTR es:[edi]
  417ce5:	xchg   ebp,eax
  417ce6:	inc    eax
  417ce7:	scas   al,BYTE PTR es:[edi]
  417ce8:	aam    0xa
  417cea:	or     al,0xf2
  417cec:	jne    0x417ca5
  417cee:	push   ss
  417cef:	or     DWORD PTR [ecx],ebp
  417cf1:	shl    edx,1
  417cf3:	enter  0x3bfd,0x7d
  417cf7:	and    dl,BYTE PTR [edi-0x49]
  417cfa:	das    
  417cfb:	mov    esi,0x69a5da35
  417d00:	xchg   esp,eax
  417d01:	sbb    al,0xd
  417d03:	(bad)
  417d06:	push   eax
  417d07:	test   eax,0xa78bceb6
  417d0c:	mov    ds:0xcd6be508,eax
  417d11:	stos   BYTE PTR es:[edi],al
  417d12:	inc    ebp
  417d13:	imul   edi,eax,0x7c
  417d16:	and    DWORD PTR [ecx+ebp*4],ecx
  417d19:	pop    edx
  417d1a:	sbb    eax,0x2ec1dcd1
  417d1f:	xchg   edi,eax
  417d20:	mov    cl,0xf9
  417d22:	dec    esi
  417d23:	test   eax,0x8541dcc0
  417d28:	into   
  417d29:	xchg   sp,ax
  417d2b:	cmp    ch,0xbc
  417d2e:	pop    esi
  417d2f:	ds dec esi
  417d31:	push   edi
  417d32:	add    eax,0xe1a8f7dd
  417d37:	rcr    DWORD PTR [edi+edx*8],0x5e
  417d3b:	and    eax,0x93f42a6a
  417d40:	stos   DWORD PTR es:[edi],eax
  417d41:	sar    bl,cl
  417d43:	xchg   edx,eax
  417d44:	sub    dh,al
  417d46:	nop
  417d47:	dec    esp
  417d48:	and    BYTE PTR [ecx-0x2f7fee4b],0xec
  417d4f:	lods   al,BYTE PTR ds:[esi]
  417d50:	in     eax,0xce
  417d52:	and    bh,BYTE PTR [esi-0x69]
  417d55:	rcr    BYTE PTR [esp+edx*2+0x4baf00fc],cl
  417d5c:	mov    cl,0xe0
  417d5e:	test   al,0x8e
  417d60:	dec    edi
  417d61:	stos   BYTE PTR es:[edi],al
  417d62:	or     BYTE PTR [edi+edi*1-0x63],ah
  417d66:	mov    cl,0x99
  417d68:	ja     0x417d74
  417d6a:	inc    esi
  417d6b:	push   edi
  417d6c:	shr    BYTE PTR [eax+0x2e2b61cd],1
  417d72:	and    eax,0x60b92828
  417d77:	cmp    al,BYTE PTR [eax]
  417d79:	sub    eax,0x5cfcd146
  417d7e:	hlt    
  417d7f:	push   ebx
  417d80:	out    dx,eax
  417d81:	pop    ebp
  417d82:	sub    eax,0x8e7c930c
  417d87:	dec    esi
  417d88:	ret    0xdd86
  417d8b:	sbb    edi,edx
  417d8d:	and    DWORD PTR [ebx+0x2d3c23b8],esp
  417d93:	push   ecx
  417d94:	mov    ecx,0xe2dcc444
  417d99:	loope  0x417dcd
  417d9b:	bound  eax,QWORD PTR [eax-0x22]
  417d9e:	es out 0xab,al
  417da1:	fs shr ebp,1
  417da4:	in     eax,dx
  417da5:	mov    eax,ebx
  417da7:	rcl    DWORD PTR [edx],1
  417da9:	scas   al,BYTE PTR es:[edi]
  417daa:	arpl   WORD PTR [ebx+0x7b],cx
  417dad:	and    al,cl
  417daf:	int3   
  417db0:	jmp    0x417df4
  417db2:	push   ebx
  417db3:	mov    ecx,0x2f9b619e
  417db8:	inc    eax
  417db9:	mov    eax,0x46a35bb6
  417dbe:	in     eax,0xb8
  417dc0:	and    BYTE PTR [ebx],dh
  417dc2:	iret   
  417dc3:	sbb    bl,ah
  417dc5:	enter  0x3f10,0x47
  417dc9:	cld    
  417dca:	mov    eax,0xcafba2e4
  417dd0:	xlat   BYTE PTR ds:[ebx]
  417dd1:	mov    ds:0xfad2bb8b,al
  417dd6:	pushf  
  417dd7:	pop    edx
  417dd8:	sbb    dl,BYTE PTR [ecx-0x4f]
  417ddb:	pop    ss
  417ddc:	int3   
  417ddd:	repz or edx,DWORD PTR [ebp-0x13]
  417de1:	ds (bad) 
  417de3:	mov    esp,0xc32065d7
  417de8:	fadd   st,st(3)
  417dea:	addr16 cs hlt 
  417ded:	scas   eax,DWORD PTR es:[edi]
  417dee:	pop    eax
  417def:	push   cs
  417df0:	pop    ss
  417df1:	clc    
  417df2:	inc    ecx
  417df3:	loopne 0x417dbc
  417df5:	sub    al,0xea
  417df7:	(bad)  
  417df8:	cmp    ch,bl
  417dfa:	xchg   edi,eax
  417dfb:	jmp    0x417e54
  417dfd:	jmp    0x7ec72e4a
  417e02:	cmp    edi,0xd203f0b8
  417e08:	shr    dh,cl
  417e0a:	repnz stos DWORD PTR es:[edi],eax
  417e0c:	jle    0x417e52
  417e0e:	cdq    
  417e0f:	imul   esp,esi,0xffffffdd
  417e12:	scas   eax,DWORD PTR es:[edi]
  417e13:	sub    al,0x11
  417e15:	pop    ds
  417e16:	out    0xe,al
  417e18:	gs sub eax,edi
  417e1b:	add    al,0x9f
  417e1d:	cdq    
  417e1e:	or     cl,BYTE PTR fs:0x900c2710
  417e25:	ins    BYTE PTR es:[edi],dx
  417e26:	mov    dh,0x47
  417e28:	mov    cl,BYTE PTR [eax+esi*1]
  417e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2c:	ret    
  417e2d:	xlat   BYTE PTR ds:[ebx]
  417e2e:	mov    bl,0xee
  417e30:	pop    edx
  417e31:	push   cs
  417e32:	mov    bl,0x18
  417e34:	stos   BYTE PTR es:[edi],al
  417e35:	cmp    BYTE PTR [edx],ch
  417e37:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e39:	iret   
  417e3a:	xchg   edx,eax
  417e3b:	jmp    0xe61564c1
  417e40:	pop    esi
  417e41:	gs pop esp
  417e43:	or     eax,0x19171db0
  417e48:	data16 jge 0x417e6e
  417e4b:	xchg   esi,eax
  417e4c:	int3   
  417e4d:	dec    eax
  417e4e:	inc    ebx
  417e4f:	dec    esp
  417e50:	popa   
  417e51:	int3   
  417e52:	aas    
  417e53:	pop    edi
  417e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e55:	shl    BYTE PTR [edx+0x2c],cl
  417e58:	jno    0x417e63
  417e5a:	and    eax,0x6f40efdd
  417e5f:	rcr    BYTE PTR [ecx-0x3],1
  417e62:	cdq    
  417e63:	xchg   ebp,eax
  417e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e65:	xor    edi,eax
  417e67:	xchg   edx,eax
  417e68:	mov    esi,0x2fe2ac6d
  417e6d:	pop    esi
  417e6e:	xlat   BYTE PTR ds:[ebx]
  417e6f:	fidivr DWORD PTR ds:0x1c1193e4
  417e75:	xchg   ebx,eax
  417e76:	lahf   
  417e77:	xor    al,0x21
  417e79:	ss jmp 0xe096:0xc03071e3
  417e81:	dec    ebx
  417e82:	sar    DWORD PTR [edi+0x30],1
  417e85:	out    dx,eax
  417e86:	mov    ebp,0xe740d48b
  417e8b:	xchg   ecx,eax
  417e8c:	ins    BYTE PTR es:[edi],dx
  417e8d:	xchg   ebx,eax
  417e8e:	dec    edx
  417e8f:	fwait
  417e90:	adc    eax,0xf2249c88
  417e95:	mul    DWORD PTR [ecx-0x36]
  417e98:	cs inc ebp
  417e9a:	add    eax,0xe9ba55b8
  417e9f:	and    al,0x6b
  417ea1:	adc    al,ah
  417ea3:	push   ebx
  417ea4:	add    cl,bl
  417ea6:	loopne 0x417efb
  417ea8:	pop    edx
  417ea9:	mov    edx,0x378b75e4
  417eae:	mov    bh,0x27
  417eb0:	pop    ds
  417eb1:	ret    
  417eb2:	push   esi
  417eb3:	jmp    0x3b07702
  417eb8:	and    al,0x15
  417eba:	test   al,0x35
  417ebc:	jb     0x417f02
  417ebe:	loope  0x417e48
  417ec0:	pop    ebp
  417ec1:	push   ebx
  417ec2:	inc    esp
  417ec3:	int    0x34
  417ec5:	nop
  417ec6:	js     0x417efd
  417ec8:	push   eax
  417ec9:	pop    esi
  417eca:	cmp    ah,BYTE PTR [edx+ebx*1]
  417ecd:	scas   al,BYTE PTR es:[edi]
  417ece:	dec    ebx
  417ecf:	pop    ecx
  417ed0:	jno    0x417eae
  417ed2:	shl    DWORD PTR [eax],1
  417ed4:	ret    0xfceb
  417ed7:	mov    bh,0xd
  417ed9:	dec    edi
  417eda:	in     al,dx
  417edb:	stos   BYTE PTR es:[edi],al
  417edc:	(bad)  [ebx]
  417ede:	jcxz   0x417ea0
  417ee1:	es lock push edx
  417ee4:	dec    ecx
  417ee5:	je     0x417e7d
  417ee7:	mov    ecx,0xb596ec62
  417eec:	adc    BYTE PTR [eax+0x43761d40],bh
  417ef2:	mov    esp,0x4f8249c5
  417ef7:	aas    
  417ef8:	cld    
  417ef9:	xchg   esi,eax
  417efa:	scas   al,BYTE PTR es:[edi]
  417efb:	jle    0x417f68
  417efd:	fidiv  WORD PTR [ebx+0x4d]
  417f00:	add    cl,BYTE PTR [ebp+0x1f5ea604]
  417f06:	mov    esp,0x84431fed
  417f0b:	test   ebp,ebx
  417f0d:	inc    esi
  417f0e:	xchg   DWORD PTR [ebx],edx
  417f10:	shl    DWORD PTR [esi+0x55],cl
  417f13:	(bad)  
  417f14:	mov    es,WORD PTR [ebx+eax*4-0x5a]
  417f18:	xchg   edx,eax
  417f19:	lds    edx,FWORD PTR [ebp+esi*8-0x8]
  417f1d:	adc    al,BYTE PTR [edi-0x2a859db9]
  417f23:	mov    ebx,0xf3ab481c
  417f28:	stc    
  417f29:	retf   0xa62f
  417f2c:	mov    edi,0xb94b0ab3
  417f31:	adc    al,0xb2
  417f33:	sub    al,0xe
  417f35:	mov    dh,ah
  417f37:	imul   esi,eax,0xee599dda
  417f3d:	mov    esi,0x1b685063
  417f42:	xor    ah,ah
  417f44:	test   al,0xf9
  417f46:	xor    ax,0xcb6d
  417f4a:	xchg   DWORD PTR [ebx-0x18],ebp
  417f4d:	iret   
  417f4e:	(bad)  
  417f4f:	mov    WORD PTR [eax+eax*8],ss
  417f52:	int3   
  417f53:	jne    0x417f96
  417f55:	in     eax,0x37
  417f57:	sbb    edi,DWORD PTR [esi-0x17]
  417f5a:	repnz aad 0xf6
  417f5d:	sub    DWORD PTR [edi+esi*2],ecx
  417f60:	mov    ebp,0xd194cd5d
  417f65:	dec    eax
  417f66:	dec    eax
  417f67:	pop    es
  417f68:	(bad)  
  417f6a:	pushf  
  417f6b:	(bad)  
  417f6c:	fisubr DWORD PTR [si-0x63]
  417f70:	cdq    
  417f71:	mov    bl,0xee
  417f73:	in     eax,0xa2
  417f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f76:	cli    
  417f77:	(bad)  
  417f78:	adc    DWORD PTR [esi-0x32b470bf],eax
  417f7e:	lea    ebp,[esp+ecx*2+0x78]
  417f82:	xchg   edx,eax
  417f83:	sub    cl,BYTE PTR [ebp+ecx*2+0x6b975a44]
  417f8a:	mov    gs,edx
  417f8c:	cmp    esi,0xffffffeb
  417f8f:	test   al,0x2
  417f91:	xchg   DWORD PTR [edi-0x679e5d3],ecx
  417f97:	scas   eax,DWORD PTR es:[edi]
  417f98:	repnz mov ebx,0x4cf74c9f
  417f9e:	mov    eax,0x11a81bf3
  417fa3:	jp     0x417fe9
  417fa5:	das    
  417fa6:	jmp    0x1fc7:0xaf19170d
  417fad:	jb     0x417fae
  417faf:	test   BYTE PTR [edx],bh
  417fb1:	adc    eax,DWORD PTR [bp+si]
  417fb4:	mov    bl,0xc3
  417fb6:	test   BYTE PTR [edx-0x6b],cl
  417fb9:	les    edi,FWORD PTR [ecx+0x43]
  417fbc:	inc    eax
  417fbd:	(bad)  
  417fbe:	int    0x1c
  417fc0:	inc    esi
  417fc1:	dec    ebx
  417fc2:	mov    cl,0x5c
  417fc4:	(bad)  
  417fc5:	(bad)
  417fc8:	mov    esp,0xeb7046d9
  417fcd:	mov    ebx,0xe9020014
  417fd2:	sti    
  417fd3:	push   0xea1cd065
  417fd8:	loope  0x417fb6
  417fda:	nop
  417fdb:	and    esp,DWORD PTR [ebx+0x62dddee2]
  417fe1:	xchg   DWORD PTR [eax+0x3c],ecx
  417fe4:	mov    edx,0xe1f0f925
  417fe9:	inc    esi
  417fea:	cmp    ah,BYTE PTR [ecx]
  417fec:	cs addr16 cli 
  417fef:	inc    esp
  417ff0:	sbb    ch,BYTE PTR [edx+ecx*4]
  417ff3:	push   eax
  417ff4:	xlat   BYTE PTR ds:[ebx]
  417ff5:	sets   BYTE PTR [esi]
  417ff8:	push   esi
  417ff9:	inc    ebp
  417ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ffb:	leave  
  417ffc:	test   al,0xa7
  417ffe:	in     eax,dx
  417fff:	xlat   BYTE PTR ds:[ebx]
  418000:	mov    edi,0xcf052fb8
  418005:	imul   BYTE PTR [ebx]
  418007:	xchg   esi,eax
  418008:	pop    ebp
  418009:	cld    
  41800a:	int3   
  41800b:	shl    DWORD PTR [eax-0x62],cl
  41800e:	out    0x31,eax
  418010:	call   0x771a:0xe30a7240
  418017:	push   0xffffffdd
  418019:	mov    edx,DWORD PTR [ebx]
  41801b:	dec    esi
  41801c:	dec    esp
  41801d:	push   es
  41801e:	inc    edi
  41801f:	dec    ecx
  418020:	pop    esp
  418021:	mov    eax,ds:0x4315914c
  418026:	out    dx,al
  418027:	ins    BYTE PTR es:[edi],dx
  418028:	add    al,0x3f
  41802a:	lock mov edx,DWORD PTR [edi+edx*8+0x26]
  41802f:	shl    edx,cl
  418031:	lock jbe 0x418030
  418034:	adc    esp,DWORD PTR [ecx+eax*8-0x36]
  418038:	mov    ecx,0x8f9a00c3
  41803d:	(bad)  
  41803e:	cs stos DWORD PTR es:[edi],eax
  418040:	gs xor eax,0x9936cb30
  418046:	dec    ebx
  418047:	dec    edx
  418048:	xor    eax,0xfd269de0
  41804d:	lods   al,BYTE PTR ds:[esi]
  41804e:	mov    al,ds:0xcc0971b7
  418053:	leave  
  418054:	std    
  418055:	mov    edx,0x93f3ff3f
  41805a:	xrelease xchg DWORD PTR [ebx],edx
  41805d:	stc    
  41805e:	or     BYTE PTR [esi],cl
  418060:	sbb    ah,0x6e
  418063:	cli    
  418064:	in     eax,dx
  418065:	int3   
  418066:	ror    al,cl
  418068:	jne    0x41804e
  41806a:	push   ecx
  41806b:	mov    dh,0x22
  41806d:	dec    ebx
  41806e:	jecxz  0x4180bd
  418070:	or     eax,0x787aac3d
  418075:	add    eax,0xbc43a171
  41807a:	stos   DWORD PTR es:[edi],eax
  41807b:	mov    WORD PTR [edi],cs
  41807d:	fstp   QWORD PTR [ebp+0x2e3fba74]
  418083:	scas   al,BYTE PTR es:[edi]
  418084:	cwde   
  418085:	(bad)  
  418087:	daa    
  418088:	jns    0x418011
  41808a:	daa    
  41808b:	les    esi,FWORD PTR [edi]
  41808d:	or     BYTE PTR [ecx+eiz*4+0x6f524ad],ah
  418094:	push   edi
  418095:	test   BYTE PTR [edi+ebp*1],ah
  418098:	dec    eax
  418099:	pop    esp
  41809a:	rcl    BYTE PTR [eax+0x6c8f5be8],cl
  4180a0:	push   0x25
  4180a2:	sub    BYTE PTR [edi+0x40d13735],dl
  4180a8:	mov    ecx,0x21e6c2db
  4180ad:	jp     0x41804c
  4180af:	shl    BYTE PTR [ebp-0x2709bd25],cl
  4180b5:	shl    bh,cl
  4180b7:	adc    dh,bh
  4180b9:	sbb    BYTE PTR [edx+0x11],al
  4180bc:	xor    BYTE PTR [ecx],0xf6
  4180bf:	xchg   ebx,eax
  4180c0:	inc    edx
  4180c1:	push   edx
  4180c2:	cmp    BYTE PTR [ecx+0x456e0f87],ah
  4180c8:	(bad)  
  4180c9:	in     al,0x69
  4180cb:	and    dl,BYTE PTR [edi*2-0x5947040a]
  4180d2:	push   ebp
  4180d3:	inc    edi
  4180d4:	push   ebp
  4180d5:	jge    0x418058
  4180d7:	out    dx,al
  4180d8:	push   ss
  4180d9:	adc    eax,0xbb36227f
  4180de:	outs   dx,DWORD PTR ds:[esi]
  4180df:	into   
  4180e0:	push   ebx
  4180e1:	mov    ch,0x87
  4180e3:	jge    0x4180ab
  4180e5:	mov    al,ds:0xd7337f26
  4180ea:	mov    bl,BYTE PTR [ebx]
  4180ec:	loopne 0x418159
  4180ee:	mov    bh,0x1e
  4180f0:	cmp    BYTE PTR [ecx-0x112b636c],bl
  4180f6:	mov    dh,BYTE PTR [ebp+0x7e01a00f]
  4180fc:	adc    eax,0x3a5355fb
  418101:	add    eax,0x10c57e0b
  418106:	pusha  
  418107:	test   al,0x56
  418109:	pop    ss
  41810a:	into   
  41810b:	mov    ebp,0xea0fc8ce
  418110:	or     eax,0xa23229d6
  418115:	out    dx,eax
  418116:	mov    BYTE PTR [edi-0x4f],ch
  418119:	popf   
  41811a:	cmp    ecx,DWORD PTR [ebx+edi*4+0x3cba87ae]
  418121:	mov    ebp,0x55df92a
  418126:	jbe    0x4180f2
  418128:	mov    bl,0x30
  41812a:	or     dl,dl
  41812c:	aaa    
  41812d:	jecxz  0x418187
  41812f:	mov    ebp,0x64619529
  418134:	dec    esi
  418135:	mov    ch,0xa6
  418137:	fdiv   st(6),st
  418139:	ss (bad) 
  41813b:	fisttp QWORD PTR [ebp-0x80]
  41813e:	mov    ds:0xb8997034,eax
  418143:	inc    ecx
  418144:	jge    0x4180fa
  418146:	ret    
  418147:	retf   
  418148:	xchg   esp,eax
  418149:	mov    cl,0x7e
  41814b:	or     DWORD PTR [edx],0x2a7c2227
  418151:	ret    0xe882
  418154:	std    
  418155:	std    
  418156:	pop    esi
  418157:	icebp  
  418158:	or     al,0x62
  41815a:	mov    cl,0x57
  41815c:	stc    
  41815d:	out    0x41,eax
  41815f:	popa   
  418160:	mov    ebp,0xef7179f2
  418165:	cwde   
  418166:	xor    DWORD PTR [esi],edx
  418168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418169:	dec    esi
  41816a:	add    DWORD PTR [ebx+ecx*4],0xfc6f211b
  418171:	data16 cmc 
  418173:	js     0x41811f
  418175:	jbe    0x418105
  418177:	mov    bl,BYTE PTR [eax-0x67]
  41817a:	cmp    BYTE PTR [esi-0x7a],bl
  41817d:	mov    ch,0x4b
  41817f:	lea    esi,[edx+0x6]
  418182:	mov    bh,0x86
  418184:	xor    esp,DWORD PTR [ebx+0x37854bf0]
  41818a:	aad    0x87
  41818c:	lock add al,0xca
  41818f:	sbb    DWORD PTR [edi+0x51],edx
  418192:	jbe    0x418163
  418194:	retf   
  418195:	(bad)  [ecx-0x7d]
  418198:	retf   
  418199:	dec    ecx
  41819a:	fdivp  st(7),st
  41819c:	test   eax,0x857ca88a
  4181a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a2:	data16 loop 0x418203
  4181a5:	pop    ds
  4181a6:	std    
  4181a7:	int    0x60
  4181a9:	or     BYTE PTR [eax+0xe],bh
  4181ac:	add    DWORD PTR [ecx],0x5a883cfd
  4181b2:	or     edi,eax
  4181b4:	push   eax
  4181b5:	pop    ebx
  4181b6:	out    0x99,eax
  4181b8:	shl    DWORD PTR [ebx+ebp*1-0x65],0x1a
  4181bd:	cmp    ebx,DWORD PTR [edi]
  4181bf:	cli    
  4181c0:	adc    DWORD PTR [edi+0x7b91960b],0x49
  4181c7:	loop   0x418161
  4181c9:	dec    edi
  4181ca:	hlt    
  4181cb:	and    al,0xf5
  4181cd:	pop    esp
  4181ce:	mov    edx,0xf948da75
  4181d3:	ret    0xdfd
  4181d6:	dec    esp
  4181d7:	sbb    esp,DWORD PTR [ebx]
  4181d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181da:	in     eax,dx
  4181db:	adc    al,0xef
  4181dd:	xchg   DWORD PTR [edx-0x6085bb6e],ebp
  4181e3:	dec    ebp
  4181e4:	test   al,0xd6
  4181e6:	rcl    DWORD PTR [ebx-0x3c913749],1
  4181ec:	inc    edx
  4181ed:	ror    BYTE PTR [esi-0xd],1
  4181f0:	(bad)  
  4181f1:	mov    ah,0xac
  4181f3:	cld    
  4181f4:	mov    dl,0x7b
  4181f6:	test   al,0xae
  4181f8:	les    eax,FWORD PTR [eax]
  4181fa:	movd   mm2,DWORD PTR [ebx-0x45f8a347]
  418201:	push   eax
  418202:	dec    edx
  418203:	loope  0x4181be
  418205:	ret    0xa1b5
  418208:	sub    BYTE PTR [edi+0x254a61d6],bh
  41820e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820f:	or     bl,BYTE PTR [edi+edx*4-0x4af14f70]
  418216:	pop    edx
  418217:	xchg   esi,eax
  418218:	mov    ds:0x1c9b5154,eax
  41821d:	mov    fs,WORD PTR [eax+0x3a5c5857]
  418223:	pop    edx
  418224:	fwait
  418225:	pusha  
  418226:	sbb    dl,cl
  418228:	jecxz  0x41824e
  41822a:	ss xchg BYTE PTR ds:[edi+0x3dd069dc],dl
  418232:	popa   
  418233:	jmp    0x418204
  418235:	mov    eax,ds:0xb8b6f1ab
  41823a:	bound  ebx,QWORD PTR [eax]
  41823c:	(bad)  
  41823e:	in     eax,0x99
  418240:	js     0x4182ad
  418242:	pop    ebp
  418243:	outs   dx,BYTE PTR ds:[esi]
  418244:	push   esi
  418245:	sbb    esi,edx
  418247:	push   esi
  418248:	lds    ecx,FWORD PTR [edx]
  41824a:	jns    0x4182bd
  41824c:	inc    esp
  41824d:	push   eax
  41824e:	test   BYTE PTR [ebx],cl
  418250:	or     al,0x65
  418252:	aam    0x4b
  418254:	pop    esp
  418255:	imul   ebp,ebp,0xffffffc5
  418258:	repnz or al,0x6b
  41825b:	fwait
  41825c:	sbb    eax,0x8d1f041a
  418261:	jno    0x41827e
  418263:	in     al,dx
  418264:	sbb    eax,edi
  418266:	or     DWORD PTR [ebx-0x2095cee5],ecx
  41826c:	out    0x63,eax
  41826e:	inc    ecx
  41826f:	inc    edx
  418270:	(bad)  
  418271:	mov    cl,0x45
  418273:	daa    
  418274:	int    0xb5
  418276:	jbe    0x418248
  418278:	mov    ch,0xf8
  41827a:	sub    esp,DWORD PTR [bp+si-0x2]
  41827e:	dec    edx
  41827f:	xchg   edx,eax
  418280:	or     BYTE PTR [ecx+0x2f076710],dl
  418286:	in     eax,0x66
  418288:	aad    0x93
  41828a:	xor    BYTE PTR [eax+0x12],bl
  41828d:	adc    DWORD PTR [edi+0x32fd4aeb],eax
  418293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418294:	dec    edx
  418295:	push   0x44297e1d
  41829a:	and    bl,al
  41829c:	leave  
  41829d:	inc    esi
  41829e:	sar    BYTE PTR [ecx+0x6a],0x7
  4182a2:	aam    0xfb
  4182a4:	dec    edx
  4182a5:	(bad)  
  4182a6:	or     dl,BYTE PTR [edi]
  4182a8:	jb     0x418239
  4182aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182ab:	lahf   
  4182ac:	ret    0xddf6
  4182af:	pop    esi
  4182b0:	out    0xcf,al
  4182b2:	xor    ebx,DWORD PTR [ebx-0x27]
  4182b5:	cli    
  4182b6:	in     al,0x58
  4182b8:	sbb    al,0xeb
  4182ba:	sbb    eax,0x360b73b
  4182bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c0:	add    ebx,DWORD PTR [ebx+eiz*4]
  4182c3:	nop
  4182c4:	aaa    
  4182c5:	cmp    eax,0x5fecedec
  4182ca:	scas   al,BYTE PTR es:[edi]
  4182cb:	out    0x3e,eax
  4182cd:	outs   dx,BYTE PTR ds:[esi]
  4182ce:	inc    eax
  4182cf:	xchg   ebp,eax
  4182d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d1:	fist   WORD PTR ds:0xbe222989
  4182d7:	aas    
  4182d8:	stc    
  4182d9:	ret    0x31b9
  4182dc:	inc    ebx
  4182dd:	mov    al,0x98
  4182df:	rcl    BYTE PTR [esi],0xe
  4182e2:	dec    edi
  4182e3:	daa    
  4182e4:	in     eax,dx
  4182e5:	pop    eax
  4182e6:	dec    bl
  4182e8:	je     0x418318
  4182ea:	jmp    0x67e541e5
  4182ef:	shl    BYTE PTR [ebx],0x89
  4182f2:	pop    ecx
  4182f3:	fstp   TBYTE PTR [edx-0x26ef45ae]
  4182f9:	cmc    
  4182fa:	ds inc eax
  4182fc:	fwait
  4182fd:	push   ebx
  4182fe:	cli    
  4182ff:	hlt    
  418300:	jbe    0x4182ec
  418302:	loope  0x4182b2
  418304:	mov    eax,ebx
  418306:	out    dx,eax
  418307:	jge    0x4182e9
  418309:	sub    DWORD PTR [ecx],ebp
  41830b:	loop   0x4182c7
  41830d:	scas   al,BYTE PTR es:[edi]
  41830e:	xchg   DWORD PTR [edi-0x58],ebp
  418311:	and    al,0x13
  418313:	push   0x68
  418315:	or     ah,bh
  418317:	pop    edx
  418318:	(bad)  [eax-0xc]
  41831b:	(bad)  
  41831c:	cli    
  41831d:	pop    esp
  41831e:	mov    dl,0xff
  418320:	pop    edx
  418321:	lock jbe 0x4182f4
  418324:	push   0xffffffcf
  418326:	and    BYTE PTR [edi+0x4ff777d9],bl
  41832c:	fimul  WORD PTR [ebx]
  41832e:	pop    ebx
  41832f:	dec    esp
  418330:	imul   ebx,DWORD PTR [edi],0x5c
  418333:	sub    al,0xef
  418335:	retf   0x5030
  418338:	fdiv   QWORD PTR [eax+eax*8-0x6b5b53b5]
  41833f:	dec    ecx
  418340:	lahf   
  418341:	dec    edx
  418342:	cmc    
  418343:	stc    
  418344:	add    eax,0x27d8a91
  418349:	js     0x418385
  41834b:	sti    
  41834c:	mov    cl,0x21
  41834e:	ja     0x418320
  418350:	loopne 0x418371
  418352:	out    0xdd,al
  418354:	pop    ds
  418355:	sbb    eax,0x11b5a32f
  41835a:	mov    edx,0x19a70dc7
  41835f:	scas   eax,DWORD PTR es:[edi]
  418360:	mov    ah,0xbd
  418362:	enter  0x80f6,0xcf
  418366:	jb     0x418300
  418368:	xchg   esp,eax
  418369:	xor    cl,cl
  41836b:	aas    
  41836c:	mov    ebx,0xabcb4da
  418371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418372:	mov    al,ds:0xa21d9f9e
  418377:	push   es
  418378:	mov    BYTE PTR [edi+ecx*4+0x58],cl
  41837c:	scas   al,BYTE PTR es:[edi]
  41837d:	(bad)  
  41837e:	cmc    
  41837f:	cs jmp 0x4183b7
  418382:	rol    BYTE PTR [edx+0x1ed690d6],0x5b
  418389:	and    eax,0x71d646e8
  41838e:	mov    edx,0x45838d9a
  418393:	sbb    ecx,ebx
  418395:	push   ebp
  418396:	or     BYTE PTR [ebx-0x5cb67887],bl
  41839c:	pop    es
  41839d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41839e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41839f:	pop    edi
  4183a0:	dec    BYTE PTR [edx+0x640e64d7]
  4183a6:	test   eax,0xc3e60d8c
  4183ab:	pop    ebp
  4183ac:	sbb    edx,DWORD PTR [ecx-0xc]
  4183af:	outs   dx,DWORD PTR ds:[esi]
  4183b0:	not    DWORD PTR [ebp-0x4c]
  4183b3:	mov    ebp,0x46fcaed2
  4183b8:	lods   eax,DWORD PTR ds:[esi]
  4183b9:	sbb    DWORD PTR [ecx-0xcfae27c],ecx
  4183bf:	cmp    al,0x96
  4183c1:	mov    ds:0xd09289f4,al
  4183c6:	push   esp
  4183c7:	pop    esi
  4183c8:	mov    al,0x26
  4183ca:	adc    BYTE PTR [ebx+eax*2-0x99b93dc],ah
  4183d1:	mov    bh,0x63
  4183d3:	shl    esi,0xf1
  4183d6:	clc    
  4183d7:	call   0xfe45:0xdb6075df
  4183de:	repnz or eax,0x84f7e94a
  4183e4:	dec    ebx
  4183e5:	lods   eax,DWORD PTR ds:[esi]
  4183e6:	mov    esi,0x2ff18818
  4183eb:	outs   dx,DWORD PTR ds:[esi]
  4183ec:	sti    
  4183ed:	pop    es
  4183ee:	ret    0x5136
  4183f1:	sbb    eax,0xb5f02088
  4183f6:	sbb    ecx,DWORD PTR [esi]
  4183f8:	and    edi,esp
  4183fa:	add    BYTE PTR [ecx+0x1f729d4b],cl
  418400:	gs add eax,0xcafec58a
  418406:	mov    BYTE PTR [eax],bl
  418408:	mov    bh,0x9c
  41840a:	jbe    0x4183fb
  41840c:	ror    BYTE PTR [ecx+edx*4],cl
  41840f:	repz push esp
  418411:	das    
  418412:	mov    ebp,0x5ec562c7
  418417:	inc    ebp
  418418:	popf   
  418419:	aaa    
  41841a:	fbld   TBYTE PTR [edi]
  41841c:	popa   
  41841d:	jl     0x418473
  41841f:	icebp  
  418420:	xchg   DWORD PTR [edx+0x71],edx
  418423:	dec    esi
  418424:	scas   al,BYTE PTR es:[edi]
  418425:	icebp  
  418426:	mov    eax,0x89286146
  41842b:	adc    ch,BYTE PTR [eax+0x677e1a33]
  418431:	sub    DWORD PTR [esp+eax*2-0x2b],esi
  418435:	dec    ebp
  418436:	sub    ah,BYTE PTR [ecx+0x41]
  418439:	jbe    0x4184ba
  41843b:	neg    BYTE PTR [ebx-0x7a0fa814]
  418441:	xor    eax,0x757fbde4
  418446:	adc    edx,DWORD PTR [ecx+0x1f347f1]
  41844c:	or     bh,dh
  41844e:	or     eax,DWORD PTR [esi-0xdae77a7]
  418454:	jno    0x418403
  418456:	xor    DWORD PTR [esi-0x38],eax
  418459:	into   
  41845a:	jl     0x418460
  41845c:	add    DWORD PTR [edi-0x5af709fb],edi
  418462:	shl    DWORD PTR cs:[edi+0x70],1
  418466:	xchg   esp,eax
  418467:	shl    edi,1
  418469:	fsubr  DWORD PTR [ebx+0x3c6a5259]
  41846f:	(bad)  
  418470:	dec    DWORD PTR [ecx]
  418472:	popa   
  418473:	jle    0x418496
  418475:	stos   BYTE PTR es:[edi],al
  418476:	sbb    DWORD PTR ds:0x44549742,edx
  41847c:	cmp    al,0xf
  41847e:	iret   
  41847f:	mov    BYTE PTR [esi+0x15],al
  418482:	push   ebx
  418483:	ret    
  418484:	inc    ebp
  418485:	jl     0x418409
  418487:	sbb    al,0xeb
  418489:	rol    DWORD PTR [ebx+0x77f89ca3],0xa9
  418490:	in     eax,0xe4
  418492:	inc    ebp
  418493:	sbb    eax,0x679c4217
  418498:	xor    dl,BYTE PTR [esi+ebx*2]
  41849b:	and    al,0xd7
  41849d:	mov    ?,WORD PTR [esi+0x49de2933]
  4184a3:	das    
  4184a4:	das    
  4184a5:	jno    0x4184f7
  4184a7:	push   0x76
  4184a9:	xchg   edx,eax
  4184aa:	mov    edi,0x1a8fc1f5
  4184af:	and    eax,0x3e328225
  4184b4:	es inc eax
  4184b6:	(bad)  
  4184b7:	outs   dx,DWORD PTR ds:[esi]
  4184b8:	popa   
  4184b9:	lods   al,BYTE PTR ds:[esi]
  4184ba:	adc    al,0x48
  4184bc:	stos   BYTE PTR es:[edi],al
  4184bd:	dec    ecx
  4184be:	xor    DWORD PTR [ecx+ecx*4-0x1a],eax
  4184c2:	aas    
  4184c3:	loopne 0x4184a5
  4184c5:	xchg   ecx,eax
  4184c6:	add    ebp,DWORD PTR [esi]
  4184c8:	enter  0xaf,0xa9
  4184cc:	and    eax,DWORD PTR [edi-0x1b]
  4184cf:	push   es
  4184d0:	pop    esi
  4184d1:	and    DWORD PTR [edi+0x41f6fad0],0xffffffb0
  4184d8:	dec    ecx
  4184d9:	in     al,dx
  4184da:	ret    
  4184db:	jge    0x418557
  4184dd:	xor    al,0x38
  4184df:	push   esp
  4184e0:	jae    0x41850d
  4184e2:	into   
  4184e3:	sbb    ch,al
  4184e5:	jne    0x418483
  4184e7:	xchg   ebp,eax
  4184e8:	add    al,0x88
  4184ea:	es ret 0x2654
  4184ee:	loope  0x41852a
  4184f0:	nop
  4184f1:	(bad)  
  4184f2:	shl    ebx,cl
  4184f4:	xor    BYTE PTR [ebx],ch
  4184f6:	sub    ch,BYTE PTR [esi+0x10c599bf]
  4184fc:	xchg   ebp,eax
  4184fd:	dec    ebp
  4184fe:	cwde   
  4184ff:	imul   ebx,DWORD PTR [esi+ecx*1+0x4d],0xb60c5de4
  418507:	inc    ebx
  418508:	out    0x28,eax
  41850a:	test   al,0x4f
  41850c:	mov    al,ds:0x7e63a0c3
  418511:	pop    ebx
  418512:	dec    esp
  418513:	and    eax,0x3018c5d8
  418518:	xlat   BYTE PTR ds:[ebx]
  418519:	in     al,0xe0
  41851b:	mov    esp,0x92246967
  418520:	mov    ebx,0xb4ee3eaa
  418525:	mov    esi,0xe71fb17b
  41852a:	sub    ebx,DWORD PTR [ebx]
  41852c:	jne    0x41853d
  41852e:	ds js  0x418559
  418531:	sbb    BYTE PTR [edx+ebx*1+0x5aa7cf47],ch
  418538:	(bad)  
  418539:	loope  0x4184e8
  41853b:	or     DWORD PTR [ecx-0x693efbd5],eax
  418541:	mov    esp,0xfc33ff42
  418546:	jle    0x418544
  418548:	or     BYTE PTR [ebx-0x41],al
  41854b:	sub    DWORD PTR [eax+0x45],eax
  41854e:	rcr    DWORD PTR [eax+ecx*2-0x37],1
  418552:	lahf   
  418553:	xchg   esi,eax
  418554:	lds    eax,FWORD PTR [eax]
  418556:	mov    ds:0xcfd97396,al
  41855b:	dec    edi
  41855c:	bound  eax,QWORD PTR [eax-0x15]
  41855f:	mov    edi,0xff2a507d
  418564:	sti    
  418565:	or     BYTE PTR [ecx],0x6e
  418568:	sub    al,0x20
  41856a:	push   ds
  41856b:	cmp    ebx,DWORD PTR [eax+0x475e0c33]
  418571:	stos   DWORD PTR es:[edi],eax
  418572:	xchg   ebx,eax
  418573:	jne    0x418571
  418575:	mov    bl,0x9a
  418577:	pop    ss
  418578:	test   DWORD PTR [eax+0xb00d7fa],edi
  41857e:	adc    cl,ah
  418580:	pop    ebp
  418581:	xor    eax,0x1dcbe55
  418586:	es pop ebx
  418588:	daa    
  418589:	push   0xdd3ea441
  41858e:	or     ebp,DWORD PTR [edi+0x11]
  418591:	inc    eax
  418592:	repz aam 0x81
  418595:	in     eax,0xf4
  418597:	fbstp  TBYTE PTR [eax]
  418599:	mov    cs,edi
  41859b:	nop
  41859c:	inc    esi
  41859d:	mov    eax,ds:0x4f246c1f
  4185a2:	or     cl,BYTE PTR [edx-0x314157a8]
  4185a8:	clc    
  4185a9:	sbb    esi,DWORD PTR [esi+0x2e732223]
  4185af:	pop    ebx
  4185b0:	jo     0x4185f4
  4185b2:	sti    
  4185b3:	scas   al,BYTE PTR es:[edi]
  4185b4:	sbb    edx,DWORD PTR ds:0xe42b6d29
  4185ba:	and    eax,0x854ca4aa
  4185bf:	dec    ebp
  4185c0:	les    ebx,FWORD PTR [edi]
  4185c2:	add    eax,0x9a5a391b
  4185c7:	gs jb  0x4185b0
  4185ca:	sub    ebx,DWORD PTR [ecx]
  4185cc:	cli    
  4185cd:	mov    BYTE PTR [eax+esi*8+0x67],al
  4185d1:	test   esi,eax
  4185d3:	xor    bl,cl
  4185d5:	inc    esp
  4185d6:	mul    ebp
  4185d8:	cwde   
  4185d9:	call   0xe91a217
  4185de:	fdiv   st(6),st
  4185e0:	mov    edx,0x9c1c313a
  4185e5:	mov    cl,0x80
  4185e7:	jmp    0xbe0f:0x701e25ee
  4185ee:	jbe    0x4185b6
  4185f0:	gs add dh,ch
  4185f3:	shr    BYTE PTR [ebx+0x674184d2],1
  4185f9:	jle    0x4185d3
  4185fb:	outs   dx,DWORD PTR ds:[esi]
  4185fc:	scas   eax,DWORD PTR es:[edi]
  4185fd:	mov    edx,0xabaef8df
  418602:	xor    BYTE PTR [eax-0x6533e898],0x2
  418609:	das    
  41860a:	jecxz  0x418673
  41860c:	repz shl BYTE PTR [eax+0x36],cl
  418610:	(bad)  
  418611:	(bad)  
  418612:	out    dx,eax
  418613:	not    DWORD PTR es:[edi]
  418616:	ret    0x90ad
  418619:	pusha  
  41861a:	sub    dh,BYTE PTR [edx+edx*1]
  41861d:	lods   eax,DWORD PTR ds:[esi]
  41861e:	inc    edi
  41861f:	mov    ebp,0x48abe99e
  418624:	inc    esi
  418625:	shl    BYTE PTR [edx+0x285fbea2],1
  41862b:	ins    DWORD PTR es:[edi],dx
  41862c:	xor    dh,BYTE PTR [eax+0xb]
  41862f:	pop    ds
  418630:	loopne 0x4185b9
  418632:	inc    esp
  418633:	xor    BYTE PTR ds:0xc40776bc,0xb3
  41863a:	jo     0x41869e
  41863c:	add    eax,0x6835891f
  418641:	or     eax,0x89d649bf
  418646:	xor    BYTE PTR [ecx],cl
  418648:	loope  0x41863e
  41864a:	iret   
  41864b:	mov    edi,0xf1e4714c
  418650:	lock inc edx
  418652:	lods   al,BYTE PTR ds:[esi]
  418653:	ja     0x418649
  418655:	mov    ds:0xe571d118,al
  41865a:	sbb    esi,DWORD PTR [edx+0x19]
  41865d:	mov    edi,0xff668f5c
  418662:	daa    
  418663:	mov    DWORD PTR [edi+0x25],eax
  418666:	cmp    eax,esi
  418668:	sub    ebp,ebx
  41866a:	ins    BYTE PTR es:[edi],dx
  41866b:	int    0x65
  41866d:	fidiv  DWORD PTR [edx]
  41866f:	sbb    ecx,esp
  418671:	push   0x8
  418673:	sub    BYTE PTR [ebx+0x3e],al
  418676:	adc    ah,BYTE PTR [ebx-0x66]
  418679:	and    eax,0x38a1824b
  41867e:	sbb    bh,0x57
  418681:	(bad)  
  418682:	sbb    eax,0xd87a738d
  418687:	lahf   
  418688:	sub    ebp,DWORD PTR [ebp+0x47]
  41868b:	rcl    DWORD PTR [ecx],cl
  41868d:	(bad)  
  41868f:	retf   
  418690:	sti    
  418691:	ins    BYTE PTR es:[edi],dx
  418692:	or     al,0x61
  418694:	lds    ebx,FWORD PTR [edi+0x31]
  418697:	(bad)  
  418698:	xor    ah,ah
  41869a:	enter  0x708f,0x58
  41869e:	mov    dh,BYTE PTR [edx]
  4186a0:	pop    edx
  4186a1:	xchg   esi,eax
  4186a2:	into   
  4186a3:	mov    eax,ds:0xca67f251
  4186a8:	cmc    
  4186a9:	sub    eax,0x58501df6
  4186ae:	stos   BYTE PTR es:[edi],al
  4186af:	sahf   
  4186b0:	outs   dx,BYTE PTR cs:[esi]
  4186b2:	and    dh,bl
  4186b4:	mov    BYTE PTR [esi],dh
  4186b6:	xor    eax,0x7c001798
  4186bb:	sub    bl,BYTE PTR [edi+0x22]
  4186be:	adc    bl,BYTE PTR [ecx+0x6f466ccd]
  4186c4:	(bad)  
  4186c5:	je     0x418651
  4186c7:	sbb    eax,0x7f76c081
  4186cc:	aad    0x89
  4186ce:	jl     0x4186af
  4186d0:	add    bl,0xe9
  4186d3:	rol    DWORD PTR [esi-0x78],0x1d
  4186d7:	popf   
  4186d8:	aas    
  4186d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186da:	push   esp
  4186db:	daa    
  4186dc:	push   0xacf6439b
  4186e1:	mov    ebx,0x1424d6b2
  4186e6:	jno    0x4186c4
  4186e8:	xor    eax,DWORD PTR [esi]
  4186ea:	clc    
  4186eb:	es push edi
  4186ed:	retf   0xefd6
  4186f0:	fsub   QWORD PTR [eax-0x6daf7f77]
  4186f6:	jmp    0x4186f8
  4186f8:	hlt    
  4186f9:	mov    al,0x52
  4186fb:	dec    esp
  4186fc:	dec    eax
  4186fd:	(bad)  
  4186fe:	mov    dl,0x4e
  418700:	xor    eax,0x4c165d62
  418705:	and    BYTE PTR [eax+esi*2+0x73],0xe9
  41870a:	mov    ebx,0x4f2e7cce
  41870f:	test   DWORD PTR [edi],edx
  418711:	pop    ss
  418712:	jno    0x41871c
  418714:	shl    BYTE PTR [ebp+0x6f],1
  418717:	mov    al,ds:0xb79be0b5
  41871c:	imul   ebx,DWORD PTR [esi+edi*1+0x34],0x78223408
  418724:	adc    DWORD PTR [edx+0x3b],edx
  418727:	jp     0x418719
  418729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41872a:	pop    edx
  41872b:	je     0x4186b8
  41872d:	test   BYTE PTR [esi+0x4ec5425a],bh
  418733:	test   al,0x4c
  418735:	jns    0x418748
  418737:	lock mov esp,esp
  41873a:	sbb    dl,BYTE PTR [edi-0xaab1ac6]
  418740:	jge    0x418732
  418742:	call   0xa97f:0x82506d51
  418749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41874a:	fs iret 
  41874c:	icebp  
  41874d:	imul   DWORD PTR [esi]
  41874f:	cmp    dh,BYTE PTR [edx]
  418751:	pop    ds
  418752:	mov    esi,?
  418754:	enter  0x6dfb,0x94
  418758:	fs call 0xb898:0x1d6bab07
  418760:	call   0x930f:0x31400ca0
  418767:	fs pop es
  418769:	pop    ecx
  41876a:	mov    ebx,0xf7099c7d
  41876f:	push   esp
  418770:	adc    DWORD PTR [ebx-0x9e1e9fa],0xbeed8377
  41877a:	mov    dh,BYTE PTR [esi+0x6b]
  41877d:	dec    edi
  41877e:	pop    ss
  41877f:	xchg   ecx,eax
  418780:	vorps  xmm4,xmm7,xmm0
  418784:	test   BYTE PTR [ecx],0x18
  418787:	jg     0x418748
  418789:	scas   eax,DWORD PTR es:[edi]
  41878a:	gs and ah,bh
  41878d:	iret   
  41878e:	fidivr DWORD PTR [eax]
  418790:	in     eax,dx
  418791:	out    0x9f,eax
  418793:	(bad)  
  418794:	out    dx,eax
  418795:	sbb    DWORD PTR [edi-0x44],0x13
  418799:	jno    0x4187bd
  41879b:	cmp    eax,0xc36e6eff
  4187a0:	(bad)
  4187a3:	test   eax,0xb4e1e01a
  4187a8:	loop   0x4187c6
  4187aa:	push   es
  4187ab:	lods   eax,DWORD PTR ds:[esi]
  4187ac:	mov    DWORD PTR cs:[esi],edi
  4187af:	xor    ebp,DWORD PTR [ebx+0x56]
  4187b2:	aas    
  4187b3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b5:	in     al,0x56
  4187b7:	(bad)  
  4187b8:	push   ecx
  4187b9:	mov    ebp,0x88817e0
  4187be:	popf   
  4187bf:	cmp    DWORD PTR [eax-0x71],eax
  4187c2:	enter  0x890,0xd1
  4187c6:	test   eax,0xdcdd6741
  4187cb:	pop    ss
  4187cc:	aas    
  4187cd:	sbb    DWORD PTR [edi],ebx
  4187cf:	push   0x4
  4187d1:	inc    ebx
  4187d2:	daa    
  4187d3:	cld    
  4187d4:	retf   
  4187d5:	pop    ss
  4187d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d7:	jns    0x4187fb
  4187d9:	cmp    ch,dh
  4187db:	xchg   DWORD PTR [ebp-0x2b],ebx
  4187de:	js     0x4187f5
  4187e0:	lods   eax,DWORD PTR ds:[esi]
  4187e1:	data16 test BYTE PTR [ecx],cl
  4187e4:	jae    0x418770
  4187e6:	dec    ebx
  4187e7:	push   ds
  4187e8:	neg    DWORD PTR [ebx-0x74e6c65a]
  4187ee:	int3   
  4187ef:	mov    ebx,0xb687a511
  4187f4:	inc    ebx
  4187f5:	fdivr  st(2),st
  4187f7:	aam    0xb7
  4187f9:	jns    0x418825
  4187fb:	popf   
  4187fc:	mov    ebp,0x7eb23da8
  418801:	(bad)  
  418803:	arpl   WORD PTR [edx+0x56],cx
  418806:	sub    ecx,esp
  418808:	cmp    eax,0xc87379a5
  41880d:	push   es
  41880e:	bound  edx,QWORD PTR [esi+0x2]
  418811:	mov    eax,0x19931f86
  418816:	inc    esp
  418817:	int    0x52
  418819:	mov    WORD PTR [esi+0x12],cs
  41881c:	ins    DWORD PTR es:[edi],dx
  41881d:	mov    ah,BYTE PTR [ebx+ecx*1-0x298a4c78]
  418824:	fwait
  418825:	cs dec esi
  418827:	sbb    eax,0xb89bf3d6
  41882c:	inc    esi
  41882d:	je     0x4187ff
  41882f:	mov    esi,0xf0fbc6fb
  418834:	xchg   esp,eax
  418835:	mov    esi,0x52e7400e
  41883a:	fs test al,0x4a
  41883d:	mov    ds:0x459f517b,eax
  418842:	repz call 0x4386f6ce
  418848:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41884a:	push   ss
  41884b:	mul    BYTE PTR [ecx+ebp*2]
  41884e:	pop    es
  41884f:	retf   
  418850:	cmc    
  418851:	add    BYTE PTR [ebx],ch
  418853:	lea    ebp,[ebp-0x2f4355e1]
  418859:	dec    ebp
  41885a:	inc    ebx
  41885b:	rcl    DWORD PTR [ebx-0x7112afe8],1
  418861:	jns    0x418863
  418863:	xchg   DWORD PTR [ecx-0x2175353d],ebx
  418869:	ret    
  41886a:	push   es
  41886b:	or     ah,BYTE PTR [ebx+0x5b]
  41886e:	jl     0x41884d
  418870:	xchg   esp,eax
  418871:	sbb    eax,0x7a0657f8
  418876:	jle    0x41885a
  418878:	add    BYTE PTR [ebx-0x7f],ah
  41887b:	and    ebp,0x7
  41887e:	mov    ecx,0x4dc44bb1
  418883:	push   ecx
  418884:	sub    edi,DWORD PTR [edi+0x76]
  418887:	inc    eax
  418888:	pop    ss
  418889:	mov    al,0x7d
  41888b:	lock hlt 
  41888d:	jg     0x418821
  41888f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418890:	jmp    0x38ae:0x66e9ad16
  418897:	and    bl,BYTE PTR [edi]
  418899:	cli    
  41889a:	xchg   DWORD PTR [ebx],esp
  41889c:	mov    cl,BYTE PTR ds:0x66de5974
  4188a2:	lahf   
  4188a3:	cmp    eax,0x18dc1c61
  4188a8:	inc    edx
  4188a9:	outs   dx,DWORD PTR ds:[esi]
  4188aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ab:	push   ecx
  4188ac:	jne    0x418910
  4188ae:	pusha  
  4188af:	or     bl,BYTE PTR [eax+0x79]
  4188b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188b3:	ins    BYTE PTR es:[edi],dx
  4188b4:	add    ch,dh
  4188b6:	js     0x4188a4
  4188b8:	add    dl,BYTE PTR [esi-0x70c63412]
  4188be:	repnz imul ecx,DWORD PTR [esi],0xffffff93
  4188c2:	outs   dx,DWORD PTR ds:[esi]
  4188c3:	xchg   ebx,eax
  4188c4:	pop    ebx
  4188c5:	push   esi
  4188c6:	je     0x41886c
  4188c8:	adc    edi,ebx
  4188ca:	push   ebx
  4188cb:	lock push es
  4188cd:	(bad)  
  4188ce:	loopne 0x4188df
  4188d0:	bound  ebp,QWORD PTR ds:0xe0ae8ab7
  4188d6:	push   ss
  4188d7:	data16 fist WORD PTR [ebp+0x5955ab]
  4188de:	stc    
  4188df:	mov    bh,BYTE PTR [ecx-0x43a4d943]
  4188e5:	add    esi,esp
  4188e7:	adc    BYTE PTR [edi+0x13],bl
  4188ea:	jo     0x418962
  4188ec:	xor    edx,DWORD PTR [eax-0x2b]
  4188ef:	sub    cl,bh
  4188f1:	(bad)  
  4188f3:	xor    esp,DWORD PTR [esi]
  4188f5:	adc    eax,0x9f319fef
  4188fa:	sbb    al,0xd0
  4188fc:	(bad)  
  4188fd:	not    DWORD PTR [eax-0x6]
  418900:	pushf  
  418901:	out    dx,al
  418902:	mov    ebx,0x4ee0e4bf
  418907:	ja     0x418943
  418909:	cmp    edx,DWORD PTR [esi]
  41890b:	pushf  
  41890c:	adc    al,0x5
  41890e:	imul   eax,DWORD PTR [eax],0x3f
  418911:	retf   0xab71
  418914:	xchg   edi,eax
  418915:	push   edi
  418916:	pop    ss
  418917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418918:	jmp    0x9035:0xf14255e8
  41891f:	lock ds (bad) 
  418922:	fdivrp st(0),st
  418924:	clc    
  418925:	cmp    BYTE PTR [ebx],ch
  418927:	add    edx,DWORD PTR [ecx-0x60]
  41892a:	add    DWORD PTR [esi],ebp
  41892c:	xchg   BYTE PTR [ecx-0x54b3a6fd],bh
  418932:	push   es
  418933:	ror    DWORD PTR [eax-0x55],1
  418936:	in     al,0xfd
  418938:	sub    ebx,0x6b04ebb4
  41893e:	dec    esi
  41893f:	cmp    ah,BYTE PTR [ecx]
  418941:	push   cs
  418942:	adc    ch,BYTE PTR [eax-0x64]
  418945:	in     al,dx
  418946:	inc    edi
  418947:	adc    BYTE PTR [edx-0x1e],cl
  41894a:	arpl   WORD PTR [esi],bp
  41894c:	xor    DWORD PTR [edx],edi
  41894e:	aam    0x88
  418950:	cli    
  418951:	adc    esp,DWORD PTR [edi+edi*8-0x78b9c030]
  418958:	pop    es
  418959:	int3   
  41895a:	push   ss
  41895b:	fwait
  41895c:	cmp    BYTE PTR [bp+di+0x12],bh
  418960:	jnp    0x4189bf
  418962:	shl    BYTE PTR [ebx],cl
  418964:	cmc    
  418965:	push   ss
  418966:	push   ds
  418967:	enter  0x49e0,0xf
  41896b:	xchg   ecx,ebx
  41896d:	fwait
  41896e:	jmp    0x91bbcceb
  418973:	or     ecx,DWORD PTR [edi-0x1908515a]
  418979:	sbb    eax,0xab42d267
  41897e:	push   esp
  41897f:	adc    BYTE PTR [esi-0x1aeaaccc],bh
  418985:	ficom  DWORD PTR [ebx+0x1c315cff]
  41898b:	fs es mov dl,0x9e
  41898f:	scas   eax,DWORD PTR es:[edi]
  418990:	ss in  al,0xb1
  418993:	sbb    DWORD PTR [esi],ecx
  418995:	repz in al,0x10
  418998:	sub    al,0xe1
  41899a:	outs   dx,BYTE PTR ds:[esi]
  41899b:	out    dx,al
  41899c:	inc    ecx
  41899d:	mov    ebp,0x82fef67e
  4189a2:	jle    0x1cbc4e99
  4189a8:	jecxz  0x4189de
  4189aa:	mov    es,WORD PTR [ebx]
  4189ac:	sahf   
  4189ad:	lds    eax,FWORD PTR [esi+esi*8-0x42]
  4189b1:	adc    BYTE PTR [edi-0x1ebd6951],0xe8
  4189b8:	call   0xdfa5b070
  4189bd:	popf   
  4189be:	inc    eax
  4189bf:	out    0x11,al
  4189c1:	(bad)  
  4189c2:	mov    ebx,0x9a1acacc
  4189c7:	fstp   st(6)
  4189c9:	lahf   
  4189ca:	sti    
  4189cb:	add    ebp,esi
  4189cd:	fmulp  st(3),st
  4189cf:	sub    cl,BYTE PTR [edx-0x2821572d]
  4189d5:	and    ebx,0xffffffb1
  4189d8:	sub    cl,BYTE PTR [ebx-0x30c7569b]
  4189de:	into   
  4189df:	xor    BYTE PTR [ebp+0x23316215],al
  4189e5:	mov    ebx,0xbd8f457c
  4189ea:	cmp    esi,DWORD PTR ds:0x3528b007
  4189f0:	(bad)  
  4189f2:	dec    esp
  4189f3:	ret    0x4cd2
  4189f6:	mov    bl,0x28
  4189f8:	ds call 0xb8db:0xda0368a2
  418a00:	add    al,0xe7
  418a02:	fisubr WORD PTR [edx+0x3a]
  418a05:	xchg   BYTE PTR [eax],ah
  418a07:	mov    cs,WORD PTR [esi-0x1b]
  418a0a:	sub    al,0xef
  418a0c:	test   BYTE PTR [edi-0x60580de8],cl
  418a12:	repz sbb BYTE PTR [edx],ah
  418a15:	js     0x418a94
  418a17:	popf   
  418a18:	push   ebp
  418a19:	xchg   esp,eax
  418a1a:	aad    0xfb
  418a1c:	push   0xffffff91
  418a1e:	push   eax
  418a1f:	fld    QWORD PTR [ebx-0x1c3b378c]
  418a25:	pop    edx
  418a26:	pop    ds
  418a27:	mov    edx,0x9445c96
  418a2c:	or     al,0xe
  418a2e:	pop    ds
  418a2f:	fst    st(2)
  418a32:	rcr    BYTE PTR [esi+0x7c4d78e3],0x2f
  418a39:	out    dx,eax
  418a3a:	xor    DWORD PTR [ebx],ebx
  418a3c:	imul   ecx,DWORD PTR [ebx+0x2f],0xffffffce
  418a40:	les    edx,FWORD PTR [esi-0x13]
  418a43:	mov    esp,0x65114582
  418a48:	popf   
  418a49:	int    0x39
  418a4b:	add    eax,0x73b33694
  418a50:	sub    BYTE PTR [edi+0x404abf29],dh
  418a56:	imul   ebx,DWORD PTR [edi],0x4c
  418a59:	inc    esi
  418a5a:	loopne 0x418ab7
  418a5c:	jnp    0x418a83
  418a5e:	pop    eax
  418a5f:	inc    edx
  418a60:	jne    0x418a0c
  418a62:	nop
  418a63:	pop    ecx
  418a64:	jecxz  0x418aae
  418a66:	fnop   
  418a68:	and    eax,0xc1eeba5
  418a6d:	addr16 pop edx
  418a6f:	aad    0x1
  418a71:	or     al,0x26
  418a73:	add    eax,0xfdbaca2f
  418a78:	inc    esi
  418a79:	jae    0x418a0c
  418a7b:	inc    edi
  418a7c:	mov    ds:0xcc6a470e,eax
  418a81:	jge    0x418a5e
  418a83:	pop    ds
  418a84:	nop
  418a85:	add    ah,BYTE PTR [edx-0x3d37bf50]
  418a8b:	out    0xa8,eax
  418a8d:	adc    bl,BYTE PTR ds:0x5f628bd2
  418a93:	int    0xd3
  418a95:	out    0x34,eax
  418a97:	cdq    
  418a98:	xor    DWORD PTR [eax-0xe8e5c35],esp
  418a9e:	popa   
  418a9f:	dec    ecx
  418aa0:	xchg   esp,eax
  418aa1:	addr16 jae 0x418b0d
  418aa4:	cmp    eax,0xdc54f02d
  418aa9:	lds    ebx,FWORD PTR [eax+0x7e]
  418aac:	iret   
  418aad:	mov    eax,DWORD PTR [ebp+0x6bd2e291]
  418ab3:	lods   al,BYTE PTR ds:[esi]
  418ab4:	(bad)  
  418ab5:	mov    esp,0x99e171d6
  418aba:	xchg   eax,ebx
  418abc:	shl    DWORD PTR [ecx+0x5136be68],cl
  418ac2:	scas   eax,DWORD PTR es:[edi]
  418ac3:	jb     0x418a4b
  418ac5:	aam    0x5
  418ac7:	cmc    
  418ac8:	push   0xfffffff8
  418aca:	(bad)  [edi-0x5c5359d1]
  418ad0:	xor    al,0xfc
  418ad2:	into   
  418ad3:	push   es
  418ad4:	dec    edx
  418ad5:	out    0x6,eax
  418ad7:	xor    DWORD PTR [ebp+esi*4+0x9],edx
  418adb:	xchg   ebp,eax
  418adc:	push   0x65
  418ade:	scas   al,BYTE PTR es:[edi]
  418adf:	std    
  418ae0:	test   eax,0xd9ae569f
  418ae5:	je     0x418b50
  418ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ae8:	adc    ebx,esp
  418aea:	nop
  418aeb:	fwait
  418aec:	mov    ecx,cs
  418aee:	retf   
  418aef:	ret    
  418af0:	lds    esi,FWORD PTR [edx+0x312b8da8]
  418af6:	cwde   
  418af7:	daa    
  418af8:	int    0x5d
  418afa:	sub    BYTE PTR [edx],0x49
  418afd:	les    ebp,FWORD PTR [ecx-0x4a]
  418b00:	inc    ebx
  418b01:	xor    DWORD PTR [ecx],edi
  418b03:	adc    al,0x99
  418b05:	push   ds
  418b06:	loopne 0x418aa7
  418b08:	mov    ecx,0x9f76d7d4
  418b0d:	call   0xdadec52f
  418b12:	das    
  418b13:	jne    0x418b47
  418b15:	and    eax,0xded1ad2e
  418b1a:	stos   BYTE PTR es:[edi],al
  418b1b:	out    dx,eax
  418b1c:	icebp  
  418b1d:	jecxz  0x418ad6
  418b1f:	(bad)  
  418b20:	hlt    
  418b21:	hlt    
  418b22:	setno  BYTE PTR [edi-0x4e]
  418b26:	sbb    dl,BYTE PTR [edi]
  418b28:	outs   dx,DWORD PTR ds:[esi]
  418b29:	push   esp
  418b2a:	mov    edi,0x5b545644
  418b2f:	push   es
  418b30:	inc    edx
  418b31:	and    BYTE PTR ds:0x4264479c,bh
  418b37:	aas    
  418b38:	add    DWORD PTR [ebp+0x3f8cd17d],eax
  418b3e:	mov    dl,0xee
  418b40:	xlat   BYTE PTR ds:[ebx]
  418b41:	and    esi,esi
  418b43:	xor    ch,ch
  418b45:	jp     0x418ae8
  418b47:	sub    dh,BYTE PTR [edx]
  418b49:	add    al,cl
  418b4b:	arpl   sp,sp
  418b4d:	jnp    0x418bbd
  418b4f:	jo     0x418b00
  418b51:	sti    
  418b52:	sub    bh,BYTE PTR [ebx-0x6438a72c]
  418b58:	mov    edi,DWORD PTR [edi+0x61d53fbe]
  418b5e:	into   
  418b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b60:	jbe    0x418b5b
  418b62:	dec    eax
  418b63:	jnp    0x418b4e
  418b65:	mov    bh,0x2e
  418b67:	icebp  
  418b68:	call   0x6dec:0x7e9a7e68
  418b6f:	mov    bl,bl
  418b71:	dec    edi
  418b72:	add    eax,0x6fe66bc
  418b77:	repz add ebx,DWORD PTR es:[edx+esi*2-0xe]
  418b7d:	inc    edx
  418b7e:	mov    fs,WORD PTR [esi]
  418b80:	imul   esi,DWORD PTR [ecx],0x58
  418b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b84:	sbb    BYTE PTR [edi],ah
  418b86:	adc    al,0xb8
  418b88:	je     0x418b32
  418b8a:	dec    ecx
  418b8b:	dec    edx
  418b8c:	neg    DWORD PTR [ebx-0x1f]
  418b8f:	add    bh,al
  418b91:	jmp    0x8f9209ce
  418b96:	lods   al,BYTE PTR ds:[esi]
  418b97:	mov    eax,0xb08c8fee
  418b9c:	dec    esi
  418b9d:	mov    edx,0x4dfa8dc4
  418ba2:	rcr    ecx,1
  418ba4:	jb     0x418b4d
  418ba6:	leave  
  418ba7:	mov    edi,0x959b1102
  418bac:	jmp    0x418bd3
  418bae:	fst    DWORD PTR [eax]
  418bb0:	mov    edi,0xd58ee3f7
  418bb5:	cld    
  418bb6:	ins    DWORD PTR es:[edi],dx
  418bb7:	aam    0x25
  418bb9:	mov    ah,0xc1
  418bbb:	xor    al,0x18
  418bbd:	jae    0x418b95
  418bbf:	pop    esp
  418bc0:	sub    BYTE PTR [ebp+ecx*2-0x3d],cl
  418bc4:	pop    eax
  418bc5:	and    DWORD PTR [edx+0x1224c244],edx
  418bcb:	push   edi
  418bcc:	in     al,dx
  418bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bce:	aad    0x82
  418bd0:	mov    dl,0xe3
  418bd2:	into   
  418bd3:	jmp    0x418b83
  418bd5:	adc    eax,0xe07b2f57
  418bda:	fwait
  418bdb:	neg    DWORD PTR [ebp-0x52d5e190]
  418be1:	mov    ebx,0xa93853b9
  418be6:	sahf   
  418be7:	or     al,0xfe
  418be9:	cs repz mov ah,0xed
  418bed:	mov    BYTE PTR [esi+0x6e],bh
  418bf0:	dec    esi
  418bf1:	push   edi
  418bf2:	or     bh,BYTE PTR [ecx+0x14]
  418bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bf6:	jmp    0x4309:0x7a471b5d
  418bfd:	jecxz  0x418bd9
  418bff:	xor    DWORD PTR [eax+ebx*8-0x7cb1cacd],ebp
  418c06:	jg     0x418bab
  418c08:	mov    ah,0x4b
  418c0a:	aaa    
  418c0b:	pop    ecx
  418c0c:	push   esp
  418c0d:	cmp    esp,esp
  418c0f:	jecxz  0x418c6c
  418c11:	add    cl,dl
  418c13:	mov    dh,0xd0
  418c15:	cmp    DWORD PTR [ebp-0x5c23ce9c],edi
  418c1b:	cdq    
  418c1c:	adc    BYTE PTR [edi-0xc6c61c3],0x61
  418c23:	mov    eax,0x6f102f29
  418c28:	out    0xaa,al
  418c2a:	pop    ebp
  418c2b:	push   edx
  418c2c:	in     eax,0x32
  418c2e:	sbb    eax,0x661d5cf0
  418c33:	adc    eax,0x568fd144
  418c38:	loop   0x418c89
  418c3a:	inc    ebp
  418c3b:	mov    ebp,0xd093bc37
  418c40:	sbb    DWORD PTR [ebp-0x4488ed2c],ebx
  418c46:	idiv   BYTE PTR [edi+0x32]
  418c49:	adc    edx,edx
  418c4b:	repz cmp DWORD PTR [edi+0x7aa7354a],edi
  418c52:	mov    al,0x13
  418c54:	or     eax,0xab8d54b8
  418c59:	sub    eax,0x9d52fbba
  418c5e:	jle    0x418c9f
  418c60:	imul   ebp,ecx,0x6e
  418c63:	xchg   BYTE PTR [esi],dl
  418c65:	call   0xfbe89cc1
  418c6a:	aam    0x35
  418c6c:	push   es
  418c6d:	adc    BYTE PTR [ecx+0x43],0x9e
  418c71:	icebp  
  418c72:	(bad)  
  418c73:	xchg   ecx,eax
  418c74:	jl     0x418ccd
  418c76:	push   cs
  418c77:	inc    esi
  418c78:	push   ss
  418c79:	push   0xfffffff1
  418c7b:	jl     0x418c2a
  418c7d:	and    DWORD PTR [edi+eiz*4+0x56b9e128],0xffffffa5
  418c85:	cmp    ah,cl
  418c87:	cmp    esp,eax
  418c89:	and    eax,0x441da160
  418c8e:	clc    
  418c8f:	xor    cl,dl
  418c91:	fnstcw WORD PTR [eax+0x1]
  418c94:	mov    dl,0x68
  418c96:	cwde   
  418c97:	jno    0x418cb2
  418c99:	or     al,0xb8
  418c9b:	adc    BYTE PTR [ebx+0x3a],dh
  418c9e:	sbb    eax,0x6a139643
  418ca3:	xchg   ebp,eax
  418ca4:	pop    esi
  418ca5:	pop    ebp
  418ca6:	sub    DWORD PTR [eax],ecx
  418ca8:	mov    BYTE PTR [ebx+0x125a2c65],0x7b
  418caf:	add    eax,0x758fd9dd
  418cb4:	pop    esi
  418cb5:	jl     0x418c3b
  418cb7:	xor    ecx,0xa
  418cba:	jne    0x418cc7
  418cbc:	fadd   DWORD PTR [esi+0x30]
  418cbf:	adc    DWORD PTR ds:0x5b8c1799,esp
  418cc5:	test   al,0xca
  418cc7:	cmp    eax,0xe072e60b
  418ccc:	or     BYTE PTR [eax],ch
  418cce:	shl    DWORD PTR [edx+0x17b55764],cl
  418cd4:	fbstp  TBYTE PTR [ebx-0x36]
  418cd7:	cmp    eax,0xd04149d6
  418cdc:	imul   esi,DWORD PTR [ecx+0x1b2ef6ce],0xffffffd5
  418ce3:	cmp    edi,0x92ccf136
  418ce9:	int    0x94
  418ceb:	pop    ebp
  418cec:	or     al,0x11
  418cee:	jae    0x418cd7
  418cf0:	xor    al,0xbf
  418cf2:	adc    DWORD PTR [esi],esp
  418cf4:	dec    ecx
  418cf5:	cmp    eax,0xd2e9093
  418cfa:	sub    DWORD PTR [edi+0x395c3bbe],eax
  418d00:	xor    ecx,DWORD PTR [edi+0x6d]
  418d03:	pop    ds
  418d04:	ins    DWORD PTR es:[edi],dx
  418d05:	pop    ebx
  418d06:	cs daa 
  418d08:	cmp    eax,DWORD PTR [esi-0x5fe8cd2b]
  418d0e:	dec    eax
  418d0f:	cmp    eax,esp
  418d11:	sub    al,0x9d
  418d13:	xchg   ecx,eax
  418d14:	cli    
  418d15:	jp     0x418d71
  418d17:	inc    edi
  418d18:	lds    esi,FWORD PTR [ecx+0x76]
  418d1b:	inc    ebp
  418d1c:	shr    eax,0xca
  418d1f:	mov    ch,0x5c
  418d21:	mov    bh,0x40
  418d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d24:	xor    al,0x3c
  418d26:	mov    eax,ds:0xb87f4c02
  418d2b:	xor    DWORD PTR [edi-0x2ab8d4a9],ebp
  418d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d32:	or     ch,BYTE PTR [ebx+0x37384c4d]
  418d38:	cdq    
  418d39:	(bad)  
  418d3a:	in     eax,0xf5
  418d3c:	or     DWORD PTR [edx-0x78],esp
  418d3f:	sub    dl,BYTE PTR [edi]
  418d41:	inc    esp
  418d42:	xchg   ebp,eax
  418d43:	push   edx
  418d44:	xlat   BYTE PTR ds:[ebx]
  418d45:	sbb    BYTE PTR [eax],ah
  418d47:	or     eax,0x982af323
  418d4c:	pop    ebx
  418d4d:	in     al,dx
  418d4e:	nop
  418d4f:	test   cl,dl
  418d51:	ja     0x418d2d
  418d53:	fwait
  418d54:	add    eax,DWORD PTR [edx]
  418d56:	push   ds
  418d57:	js     0x418d81
  418d59:	inc    ebp
  418d5a:	cwde   
  418d5b:	aam    0x11
  418d5d:	mov    cl,0xd8
  418d5f:	test   al,0xe9
  418d61:	inc    edi
  418d62:	jno    0x418d72
  418d64:	jbe    0x418ce8
  418d66:	not    DWORD PTR [ebx-0x10ab3b5]
  418d6c:	xlat   BYTE PTR ds:[ebx]
  418d6d:	fldcw  WORD PTR [edi+0x70]
  418d70:	pop    edi
  418d71:	mov    BYTE PTR [edx],bl
  418d73:	or     BYTE PTR [eax],bh
  418d75:	fidivr WORD PTR [ebx-0x716bdd94]
  418d7b:	add    ebp,DWORD PTR [edi-0x3]
  418d7e:	call   0xc74943e3
  418d83:	push   es
  418d84:	dec    esp
  418d85:	xor    esp,0xd6f56a24
  418d8b:	mov    eax,0xa60c0079
  418d90:	mov    ecx,0x14fbe361
  418d95:	jb     0x418d33
  418d97:	adc    BYTE PTR [ecx],0x8
  418d9a:	add    BYTE PTR [edi],ah
  418d9c:	pop    ebp
  418d9d:	outs   dx,BYTE PTR ds:[esi]
  418d9e:	clc    
  418d9f:	xor    BYTE PTR [ebp+0x35],0x5
  418da3:	cli    
  418da4:	pop    ebx
  418da5:	mov    ecx,0xb324e336
  418daa:	outs   dx,DWORD PTR ds:[esi]
  418dab:	into   
  418dac:	pusha  
  418dad:	push   esi
  418dae:	rcl    BYTE PTR [esi+ebx*1+0x36],1
  418db2:	call   0xf6fb:0xa7143d4f
  418db9:	push   esp
  418dba:	mov    edx,0xc754def
  418dbf:	cmp    al,0x2b
  418dc1:	sbb    esp,ecx
  418dc3:	adc    al,0x73
  418dc5:	in     eax,dx
  418dc6:	enter  0xf7dc,0x27
  418dca:	lock and al,0xe6
  418dcd:	push   esp
  418dce:	mov    BYTE PTR [eax-0xf],bh
  418dd1:	daa    
  418dd2:	ficomp WORD PTR [edx]
  418dd4:	jnp    0x418e3e
  418dd6:	xor    eax,0x52114c79
  418ddb:	aad    0xea
  418ddd:	inc    esi
  418dde:	pushf  
  418ddf:	pop    ebp
  418de0:	ins    BYTE PTR es:[edi],dx
  418de1:	mov    DWORD PTR [edx+0x58804c50],edi
  418de7:	daa    
  418de8:	cmp    ch,dh
  418dea:	mov    ebp,0xc7ca2c98
  418def:	int    0xfe
  418df1:	imul   ebx,DWORD PTR [edi+0x49],0x7a
  418df5:	jl     0x418e05
  418df7:	mov    bh,0x4c
  418df9:	push   esi
  418dfa:	dec    ebp
  418dfb:	push   ebx
  418dfc:	(bad)  
  418dfd:	mov    edx,eax
  418dff:	(bad)  
  418e00:	mov    edx,0x3d7078dc
  418e05:	pop    esi
  418e06:	or     eax,0x529a2c65
  418e0b:	lds    esp,FWORD PTR [ebx+0x67aeb65]
  418e11:	inc    ecx
  418e12:	and    dl,0xec
  418e15:	jmp    0xb8eaf362
  418e1a:	sbb    al,0x68
  418e1c:	add    al,0xd6
  418e1e:	mov    ebx,0xb03fb07d
  418e23:	test   al,0x47
  418e25:	scas   al,BYTE PTR es:[edi]
  418e26:	sbb    al,0xf7
  418e28:	jno    0x418e9c
  418e2a:	pop    edi
  418e2b:	jb     0x418e61
  418e2d:	test   eax,edx
  418e2f:	xchg   esi,eax
  418e30:	mov    ebx,0x4cf54d50
  418e35:	cli    
  418e36:	std    
  418e37:	xchg   esi,eax
  418e38:	addr16 int3 
  418e3a:	aas    
  418e3b:	or     ebp,DWORD PTR [edx+0x1fc77daf]
  418e41:	and    al,0x69
  418e43:	push   ss
  418e44:	and    eax,0xfed747a8
  418e49:	cmc    
  418e4a:	inc    ebx
  418e4b:	jne    0x418e84
  418e4d:	leave  
  418e4e:	aad    0xd8
  418e50:	xor    DWORD PTR [edi+eax*4],esi
  418e53:	add    al,0x2c
  418e55:	dec    edi
  418e56:	aaa    
  418e57:	jmp    0x418e5c
  418e59:	call   0x1e2a:0xd68f40ee
  418e60:	pop    ebx
  418e61:	xchg   esi,eax
  418e62:	or     al,0xbb
  418e64:	xchg   esp,eax
  418e65:	dec    ebp
  418e66:	or     DWORD PTR [eax+0x7fd50c46],edi
  418e6c:	lods   eax,DWORD PTR ds:[esi]
  418e6d:	idiv   DWORD PTR [ebx-0x39]
  418e70:	shr    ch,1
  418e72:	inc    edi
  418e73:	xchg   edi,esi
  418e75:	sub    BYTE PTR [edi-0x2d],ah
  418e78:	mov    DWORD PTR [ebx],esp
  418e7a:	sub    edx,edx
  418e7c:	cmp    eax,DWORD PTR [eax-0x12074196]
  418e82:	or     DWORD PTR [edx],ebx
  418e84:	jmp    0x418e3e
  418e86:	dec    edi
  418e87:	push   ebx
  418e88:	and    DWORD PTR [eax],0x18
  418e8b:	adc    al,dh
  418e8d:	add    ecx,eax
  418e8f:	das    
  418e90:	inc    edi
  418e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e92:	fmul   st(4),st
  418e94:	adc    bh,cl
  418e96:	mov    eax,ds:0x25e7c6e6
  418e9b:	dec    ebp
  418e9c:	xor    al,0x59
  418e9e:	cld    
  418e9f:	out    dx,eax
  418ea0:	sub    edi,DWORD PTR [edx]
  418ea2:	sbb    BYTE PTR [edx+0x295f0f06],ch
  418ea8:	in     al,0x70
  418eaa:	fnstsw WORD PTR [esi]
  418eac:	mov    bh,0xf5
  418eae:	pop    esi
  418eaf:	outs   dx,DWORD PTR ds:[esi]
  418eb0:	hlt    
  418eb1:	mov    fs,esp
  418eb3:	into   
  418eb4:	sahf   
  418eb5:	mov    ah,0xf8
  418eb7:	push   ecx
  418eb8:	les    ebx,FWORD PTR [edi+0x3d54b86e]
  418ebe:	or     DWORD PTR [edx-0x34],edx
  418ec1:	sbb    DWORD PTR [ebx+0x6e],ebp
  418ec4:	jl     0x418ed4
  418ec6:	cli    
  418ec7:	pushf  
  418ec8:	in     eax,0x7a
  418eca:	or     DWORD PTR [edx+0xd19b376],edx
  418ed0:	out    dx,eax
  418ed1:	std    
  418ed2:	cmp    cl,BYTE PTR [edi+0x33]
  418ed5:	xchg   BYTE PTR [esi],bl
  418ed7:	jmp    0x418ec6
  418ed9:	pusha  
  418eda:	sahf   
  418edb:	jge    0x418f30
  418edd:	mov    ecx,0x88a9a10c
  418ee2:	mov    ecx,0xb0370edc
  418ee7:	icebp  
  418ee8:	mov    edx,0x6ec582f2
  418eed:	sti    
  418eee:	or     eax,0x22acb8fe
  418ef3:	mov    al,ds:0x10ecb52b
  418ef8:	in     al,0xcd
  418efa:	sar    BYTE PTR [ebx-0x3f],1
  418efd:	js     0x418eba
  418eff:	sbb    al,0x7d
  418f01:	scas   eax,DWORD PTR es:[edi]
  418f02:	arpl   dx,bp
  418f04:	shr    ah,0xe5
  418f07:	sar    DWORD PTR [ecx-0x41d7fd6d],1
  418f0d:	dec    ecx
  418f0e:	inc    ecx
  418f0f:	lods   eax,DWORD PTR ds:[esi]
  418f10:	and    BYTE PTR [edx+0x1f6a9ebb],dh
  418f16:	cmp    BYTE PTR [edi],al
  418f18:	cmp    ch,BYTE PTR [edi-0x70]
  418f1b:	popa   
  418f1c:	xchg   esp,eax
  418f1d:	stos   BYTE PTR es:[edi],al
  418f1e:	ret    0x6e56
  418f21:	cwde   
  418f22:	inc    esp
  418f23:	mov    ds:0xbcd13151,al
  418f28:	and    BYTE PTR [ecx],dh
  418f2a:	ret    0x2f1d
  418f2d:	int    0x4f
  418f2f:	stos   BYTE PTR es:[edi],al
  418f30:	xchg   ebx,eax
  418f31:	and    ah,BYTE PTR fs:[eax-0x73]
  418f35:	mov    cl,0x7c
  418f37:	mov    ebp,0x7cd7d746
  418f3c:	sar    DWORD PTR [edx],cl
  418f3e:	inc    eax
  418f3f:	mov    WORD PTR ss:0x160101,gs
  418f46:	imul   esp,DWORD PTR [ebx+ecx*8],0xffffffff
  418f4a:	out    dx,al
  418f4b:	outs   dx,DWORD PTR ds:[esi]
  418f4c:	int    0xcd
  418f4e:	jge    0x418ee0
  418f50:	jmp    FWORD PTR es:[esi]
  418f53:	loope  0x418ef9
  418f55:	dec    edi
  418f56:	int3   
  418f57:	push   esp
  418f58:	ficomp WORD PTR [esi+0x6f]
  418f5b:	outs   dx,DWORD PTR ds:[esi]
  418f5c:	add    eax,0x36acc80e
  418f61:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418f63:	and    al,0x75
  418f65:	sub    BYTE PTR [edx-0x53],al
  418f68:	retf   0x2419
  418f6b:	pushf  
  418f6c:	out    0x4,al
  418f6e:	pop    esp
  418f6f:	mov    esp,0x698472e4
  418f74:	dec    edi
  418f75:	xchg   esp,eax
  418f76:	(bad)  
  418f77:	cmp    eax,eax
  418f79:	loopne 0x418efe
  418f7b:	xchg   esp,eax
  418f7c:	mov    esi,0x907d45b6
  418f81:	and    eax,0xcbc4c90e
  418f86:	mul    BYTE PTR [eax+0x2d9322a8]
  418f8c:	inc    ebp
  418f8d:	mov    gs:0xcb32b9f4,ax
  418f94:	cmp    al,dh
  418f96:	pusha  
  418f97:	out    dx,al
  418f98:	(bad)  
  418f99:	je     0x418f9a
  418f9b:	mov    ah,0x37
  418f9d:	or     DWORD PTR ds:0x91fdaec6,ebp
  418fa3:	test   DWORD PTR [edx],esp
  418fa5:	stos   DWORD PTR es:[edi],eax
  418fa6:	jecxz  0x418fdc
  418fa8:	push   cs
  418fa9:	sbb    al,0xd9
  418fab:	mov    ebp,0x7612b845
  418fb0:	ret    0x3db1
  418fb3:	xlat   BYTE PTR ds:[ebx]
  418fb4:	fdivr  DWORD PTR [ecx+eax*8-0x27ccee89]
  418fbb:	sub    edx,ebx
  418fbd:	sub    edx,esi
  418fbf:	xor    edx,eax
  418fc1:	mov    DWORD PTR [ebp+0x8],edx
  418fc4:	mov    edx,DWORD PTR [ebp+0x8]
  418fc7:	mov    ebx,DWORD PTR [ebp-0x58]
  418fca:	add    edx,0x5708fa
  418fd0:	imul   edx,ebx
  418fd3:	mov    DWORD PTR [ebp-0x58],edx
  418fd6:	mov    edx,DWORD PTR [ebp+0x8]
  418fd9:	mov    ebx,DWORD PTR [ebp-0x54]
  418fdc:	add    edx,0x64f898
  418fe2:	or     edx,ebx
  418fe4:	mov    DWORD PTR [ebp-0x54],edx
  418fe7:	mov    edx,DWORD PTR [ebp+0x8]
  418fea:	mov    ebx,DWORD PTR [ebp-0x50]
  418fed:	add    edx,ecx
  418fef:	xor    edx,ebx
  418ff1:	mov    DWORD PTR [ebp-0x50],edx
  418ff4:	mov    edx,DWORD PTR [ebp+0x8]
  418ff7:	mov    ebx,DWORD PTR [ebp-0x4c]
  418ffa:	add    edx,edi
  418ffc:	and    edx,ebx
  418ffe:	mov    DWORD PTR [ebp-0x4c],edx
  419001:	mov    edx,DWORD PTR [ebp+0x8]
  419004:	mov    ebx,DWORD PTR [ebp-0x48]
  419007:	lea    edx,[ebx+edx*1+0x241fcdf]
  41900e:	mov    DWORD PTR [ebp-0x48],edx
  419011:	mov    edx,DWORD PTR [ebp+0x8]
  419014:	mov    ebx,0xfa5e1524
  419019:	sub    ebx,edx
  41901b:	add    ebx,DWORD PTR [ebp-0x44]
  41901e:	mov    DWORD PTR [ebp-0x44],ebx
  419021:	mov    edx,DWORD PTR [ebp+0x8]
  419024:	xor    edx,eax
  419026:	add    edx,esi
  419028:	jne    0x416c52
  41902e:	jmp    0x4190bb
  419033:	mov    edx,DWORD PTR [ebp-0x14]
  419036:	mov    DWORD PTR [ebp+0x8],edx
  419039:	jmp    0x4190ae
  41903e:	mov    edx,DWORD PTR [ebp+0x8]
  419041:	mov    ebx,DWORD PTR [ebp-0x8]
  419044:	xor    edx,eax
  419046:	xor    ebx,eax
  419048:	sub    edx,ebx
  41904a:	sub    edx,esi
  41904c:	xor    edx,eax
  41904e:	mov    DWORD PTR [ebp+0x8],edx
  419051:	mov    edx,DWORD PTR [ebp+0x8]
  419054:	mov    ebx,DWORD PTR [ebp-0x58]
  419057:	add    edx,0x5708fa
  41905d:	imul   edx,ebx
  419060:	mov    DWORD PTR [ebp-0x58],edx
  419063:	mov    edx,DWORD PTR [ebp+0x8]
  419066:	mov    ebx,DWORD PTR [ebp-0x54]
  419069:	add    edx,0x64f898
  41906f:	or     edx,ebx
  419071:	mov    DWORD PTR [ebp-0x54],edx
  419074:	mov    edx,DWORD PTR [ebp+0x8]
  419077:	mov    ebx,DWORD PTR [ebp-0x50]
  41907a:	add    edx,ecx
  41907c:	xor    edx,ebx
  41907e:	mov    DWORD PTR [ebp-0x50],edx
  419081:	mov    edx,DWORD PTR [ebp+0x8]
  419084:	mov    ebx,DWORD PTR [ebp-0x4c]
  419087:	add    edx,edi
  419089:	and    edx,ebx
  41908b:	mov    DWORD PTR [ebp-0x4c],edx
  41908e:	mov    edx,DWORD PTR [ebp+0x8]
  419091:	mov    ebx,DWORD PTR [ebp-0x48]
  419094:	lea    edx,[ebx+edx*1+0x241fcdf]
  41909b:	mov    DWORD PTR [ebp-0x48],edx
  41909e:	mov    edx,DWORD PTR [ebp+0x8]
  4190a1:	mov    ebx,0xfa5e1524
  4190a6:	sub    ebx,edx
  4190a8:	add    ebx,DWORD PTR [ebp-0x44]
  4190ab:	mov    DWORD PTR [ebp-0x44],ebx
  4190ae:	mov    edx,DWORD PTR [ebp+0x8]
  4190b1:	xor    edx,eax
  4190b3:	add    edx,esi
  4190b5:	jne    0x41903e
  4190bb:	mov    edx,DWORD PTR [ebp-0x14]
  4190be:	mov    DWORD PTR [ebp+0x8],edx
  4190c1:	jmp    0x41b495
  4190c6:	mov    edx,DWORD PTR [ebp+0x8]
  4190c9:	mov    ebx,DWORD PTR [ebp-0x8]
  4190cc:	xor    edx,eax
  4190ce:	xor    ebx,eax
  4190d0:	sub    edx,ebx
  4190d2:	sub    edx,esi
  4190d4:	xor    edx,eax
  4190d6:	mov    DWORD PTR [ebp+0x8],edx
  4190d9:	jmp    0x41b438
  4190de:	adc    esp,DWORD PTR [eax-0x55]
  4190e1:	jl     0x419063
  4190e3:	mov    eax,0x95ec0084
  4190e8:	bound  ebp,QWORD PTR [ecx-0x27]
  4190eb:	sbb    dh,bh
  4190ed:	sub    DWORD PTR [ebx],esi
  4190ef:	sbb    eax,0x5e3d837c
  4190f4:	add    DWORD PTR [ebx-0x3ed5d991],0xffffffe6
  4190fb:	hlt    
  4190fc:	dec    ebp
  4190fd:	xchg   edx,eax
  4190fe:	mov    bh,bl
  419100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419101:	(bad)  
  419102:	imul   edx,edi,0x3c786583
  419108:	pop    edi
  419109:	xchg   edx,eax
  41910a:	les    edx,FWORD PTR [esi+0x34bdd53d]
  419110:	lods   al,BYTE PTR ds:[esi]
  419111:	je     0x419101
  419113:	lds    edx,FWORD PTR cs:[eax-0x7e]
  419117:	test   al,0x79
  419119:	scas   al,BYTE PTR es:[edi]
  41911a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911b:	fsub   QWORD PTR [ebx]
  41911d:	xchg   edi,eax
  41911e:	loop   0x4190c0
  419120:	inc    esi
  419121:	sbb    al,0xd5
  419123:	jne    0x41910e
  419125:	add    cl,ah
  419127:	stc    
  419128:	std    
  419129:	add    ebp,DWORD PTR [ebp+0x7b]
  41912c:	and    eax,0xe79aed6c
  419131:	into   
  419132:	cmp    cl,BYTE PTR [edx+0x3936a7cd]
  419138:	clc    
  419139:	and    al,0xd1
  41913b:	xor    al,0xb1
  41913d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41913e:	jmp    0x41915b
  419140:	test   dh,0x5a
  419143:	xlat   BYTE PTR ds:[ebx]
  419144:	mov    ds:0x793f9575,eax
  419149:	out    dx,eax
  41914a:	add    BYTE PTR [ecx+0x64b8e1fa],al
  419150:	fidivr WORD PTR [ebp-0x76]
  419153:	enter  0xa798,0xaa
  419157:	push   ss
  419158:	ror    BYTE PTR [ecx+0x11],0xd1
  41915c:	bndstx [ecx*8+0x32a98c68],bnd3
  419164:	push   edi
  419165:	outs   dx,DWORD PTR ds:[esi]
  419166:	idiv   DWORD PTR [ebp+0xe]
  419169:	int    0xfa
  41916b:	mov    eax,ds:0xa06f6361
  419170:	retf   
  419171:	out    0x61,al
  419173:	shl    cl,cl
  419175:	fdivr  DWORD PTR [ebx]
  419177:	dec    edi
  419178:	xor    al,0xa
  41917a:	bound  esp,QWORD PTR [ecx-0x76]
  41917d:	(bad)  
  41917e:	in     eax,0x3c
  419180:	pop    ds
  419181:	xchg   ecx,eax
  419182:	shr    BYTE PTR ds:0xf4ca3e18,1
  419188:	sub    eax,0x3477e0a5
  41918d:	test   al,0x8f
  41918f:	fdivrp st(0),st
  419191:	cli    
  419192:	mov    esp,0xc5a9ce2e
  419197:	pop    edx
  419198:	jecxz  0x41916b
  41919a:	jbe    0x4191dc
  41919c:	mov    BYTE PTR [eax],bl
  41919e:	mov    DWORD PTR [eax-0x41],esp
  4191a1:	and    DWORD PTR [ebp+0x6],ecx
  4191a4:	adc    esi,DWORD PTR [ecx-0x2376b581]
  4191aa:	cld    
  4191ab:	in     eax,dx
  4191ac:	fdivp  st(0),st
  4191ae:	mov    ch,bl
  4191b0:	jae    0x4191ae
  4191b2:	lods   al,BYTE PTR ds:[esi]
  4191b3:	and    ebp,0x0
  4191b6:	fs push ebp
  4191b8:	jmp    0x40f1:0xe758815
  4191bf:	cli    
  4191c0:	out    dx,al
  4191c1:	outs   dx,DWORD PTR ds:[esi]
  4191c2:	mov    edi,0x5fba085c
  4191c7:	or     BYTE PTR [edi-0x683fbd4c],0x2a
  4191ce:	int    0x2d
  4191d0:	push   edx
  4191d1:	pusha  
  4191d2:	jb     0x4191db
  4191d4:	pusha  
  4191d5:	pop    ds
  4191d6:	jmp    0xf41:0x4820f1e
  4191dd:	aas    
  4191de:	push   esp
  4191df:	mov    ecx,0x74866658
  4191e4:	jo     0x4191ad
  4191e6:	inc    eax
  4191e7:	push   edi
  4191e8:	sub    eax,0x765a2fac
  4191ed:	push   ds
  4191ee:	inc    esp
  4191ef:	and    BYTE PTR [ebx*8-0x5843656],dh
  4191f6:	sub    edi,edi
  4191f8:	stos   DWORD PTR es:[edi],eax
  4191f9:	(bad)  
  4191fa:	push   ecx
  4191fb:	test   BYTE PTR [edi],ah
  4191fd:	(bad)  
  4191fe:	out    0xa9,eax
  419200:	sar    eax,1
  419202:	jmp    0x419199
  419204:	jns    0x4191fc
  419206:	div    BYTE PTR [ecx+edi*1+0x6310e8a1]
  41920d:	sbb    ebx,ebx
  41920f:	mov    WORD PTR ds:[edi+0x62],gs
  419213:	out    dx,eax
  419214:	mov    esi,0xc7d38b84
  419219:	dec    ecx
  41921a:	adc    eax,0x9f1124f7
  41921f:	fiadd  WORD PTR [edi+ebp*4-0x52]
  419223:	sbb    bl,al
  419225:	inc    ecx
  419226:	ror    DWORD PTR [edi-0xe0f53d4],cl
  41922c:	rcr    ch,1
  41922e:	adc    BYTE PTR [esi-0x1b],ch
  419231:	fsub   QWORD PTR [ebx]
  419233:	jno    0x4191d3
  419235:	loop   0x419203
  419237:	aad    0xce
  419239:	adc    ecx,DWORD PTR [esi-0x1a3f1b04]
  41923f:	xchg   ebx,eax
  419240:	mul    BYTE PTR ds:0xa5d39587
  419246:	cmp    dl,BYTE PTR [esp+edx*4-0x1fe9778c]
  41924d:	push   es
  41924e:	and    bl,ch
  419250:	add    al,0x56
  419252:	sub    eax,0xb7c15939
  419257:	mov    bl,0x9b
  419259:	push   ebx
  41925a:	xor    eax,edi
  41925c:	stos   BYTE PTR es:[edi],al
  41925d:	adc    DWORD PTR ds:0x5808d6f7,edi
  419263:	push   edi
  419264:	(bad)  
  419265:	mov    ds:0xa018c2a,al
  41926a:	cmp    ecx,DWORD PTR [ecx]
  41926c:	scas   al,BYTE PTR es:[edi]
  41926d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419270:	outs   dx,DWORD PTR ds:[esi]
  419271:	mov    ebp,0x3f38589f
  419276:	out    dx,eax
  419277:	mov    dh,0xf5
  419279:	sub    BYTE PTR [edx+0x60],dh
  41927c:	and    ch,BYTE PTR [esi]
  41927e:	jmp    DWORD PTR [ebp-0x434a1168]
  419284:	loopne 0x419305
  419286:	ins    BYTE PTR es:[edi],dx
  419287:	iret   
  419288:	push   ebp
  419289:	inc    ebp
  41928a:	mov    ecx,0x83870c67
  41928f:	bswap  ecx
  419291:	leave  
  419292:	push   edx
  419293:	inc    ebx
  419294:	ja     0x41930d
  419296:	loopne 0x4192f5
  419298:	(bad)  
  419299:	repz aad 0xbe
  41929c:	jne    0x419306
  41929e:	(bad)  
  41929f:	loope  0x4192cc
  4192a1:	shl    DWORD PTR [eax-0x74],1
  4192a4:	xchg   edx,eax
  4192a5:	nop
  4192a6:	or     al,0x64
  4192a8:	dec    edi
  4192a9:	pop    ebx
  4192aa:	leave  
  4192ab:	in     al,0x11
  4192ad:	scas   eax,DWORD PTR es:[edi]
  4192ae:	js     0x4192f2
  4192b0:	sbb    eax,0xbc186155
  4192b5:	cmc    
  4192b6:	loopne 0x4192e3
  4192b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192b9:	test   eax,0xb147c9b9
  4192be:	push   es
  4192bf:	jb     0x419323
  4192c1:	jmp    0xfc65:0xec3b446e
  4192c8:	push   ebx
  4192c9:	fidivr DWORD PTR [edx+0x34]
  4192cc:	and    dl,ah
  4192ce:	xor    dl,BYTE PTR [ebx+ecx*8]
  4192d1:	xchg   edx,eax
  4192d2:	inc    ecx
  4192d3:	call   0x7913:0x16470a18
  4192da:	sahf   
  4192db:	dec    edx
  4192dc:	and    DWORD PTR [eax+0x4b6e5973],ebp
  4192e2:	and    BYTE PTR [ebx-0x66ba230],dl
  4192e8:	call   0xe02f:0x598315d2
  4192ef:	popf   
  4192f0:	mov    esp,0x89abdb34
  4192f5:	push   edx
  4192f6:	or     cl,BYTE PTR [ebx-0x50]
  4192f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192fa:	je     0x41933e
  4192fc:	push   ds
  4192fd:	scas   al,BYTE PTR es:[edi]
  4192fe:	adc    ecx,DWORD PTR [esi]
  419300:	and    ebp,esp
  419302:	mov    esp,edx
  419304:	dec    ecx
  419305:	mov    cl,0xf5
  419307:	dec    esi
  419308:	or     DWORD PTR [ebx],0x3aaf5633
  41930e:	pop    ecx
  41930f:	sbb    ch,bh
  419311:	sahf   
  419312:	dec    eax
  419313:	hlt    
  419314:	and    ah,BYTE PTR [edi+esi*2]
  419317:	sub    eax,0xe4124ceb
  41931c:	and    eax,0x367d53dc
  419321:	and    al,BYTE PTR [ebx]
  419323:	out    0x9d,eax
  419325:	fidivr WORD PTR [ecx+0x4318cc22]
  41932b:	jg     0x419366
  41932d:	adc    DWORD PTR [esi-0x1b],ebp
  419330:	mov    dh,0xd9
  419332:	lahf   
  419333:	aam    0x6b
  419335:	add    DWORD PTR [esi+0x2468b3fc],ebp
  41933b:	dec    esi
  41933c:	mov    cl,BYTE PTR [esi+esi*2+0xb]
  419340:	outs   dx,DWORD PTR ds:[esi]
  419341:	mov    edx,0xfa9fffbe
  419346:	repnz das 
  419348:	xchg   esi,eax
  419349:	aad    0xe0
  41934b:	outs   dx,BYTE PTR ds:[esi]
  41934c:	mov    eax,0x15db8827
  419351:	dec    ecx
  419352:	enter  0x851,0x63
  419356:	xor    esi,DWORD PTR [ecx]
  419358:	dec    edi
  419359:	aas    
  41935a:	(bad)  
  41935c:	mov    al,ds:0xa72d09ae
  419361:	stos   DWORD PTR es:[edi],eax
  419362:	in     eax,0xd7
  419364:	and    dl,BYTE PTR [esp+eax*8+0x62ee5dde]
  41936b:	cmp    BYTE PTR [edi],ah
  41936d:	pop    es
  41936e:	dec    edx
  41936f:	mov    edi,0xc95d04e9
  419374:	lods   al,BYTE PTR ds:[esi]
  419375:	xchg   esp,eax
  419376:	out    0x88,eax
  419378:	cmp    eax,0x4cd1dcd1
  41937d:	popa   
  41937e:	xchg   ebx,eax
  41937f:	mov    ebp,0xdb0a00c8
  419384:	sahf   
  419385:	inc    ecx
  419386:	or     dh,BYTE PTR [ebx+edx*8]
  419389:	pop    ebx
  41938a:	icebp  
  41938b:	sub    eax,0x997c8a16
  419390:	pop    es
  419391:	xlat   BYTE PTR ds:[ebx]
  419392:	in     eax,dx
  419393:	sub    al,0x70
  419395:	jmp    0x4193df
  419397:	sbb    eax,0xccf716ca
  41939c:	loope  0x419408
  41939e:	dec    esp
  41939f:	lods   al,BYTE PTR ds:[esi]
  4193a0:	call   0xf325b4b8
  4193a5:	cmp    DWORD PTR [edx-0x4f8b95a],ebx
  4193ab:	out    dx,eax
  4193ac:	push   eax
  4193ad:	xor    ebx,DWORD PTR [ebp+0x59f12d52]
  4193b3:	adc    al,0x59
  4193b5:	add    dh,BYTE PTR [esi-0x7fe2fb81]
  4193bb:	repnz sub DWORD PTR [eax-0x60],esi
  4193bf:	jmp    0x419349
  4193c1:	mov    ds:0x56e5ee41,eax
  4193c6:	cmp    al,0xcf
  4193c8:	pop    ss
  4193c9:	and    ecx,eax
  4193cb:	mov    cl,0xac
  4193cd:	dec    edx
  4193ce:	je     0x4193f2
  4193d0:	test   edx,ecx
  4193d2:	das    
  4193d3:	jp     0x4193c8
  4193d5:	jecxz  0x4193de
  4193d7:	out    0x73,eax
  4193d9:	mov    ds:0x4f2bfbdc,eax
  4193de:	sub    al,0x25
  4193e0:	imul   edi,ebp,0xffffffea
  4193e3:	fidivr DWORD PTR ds:0x81860b77
  4193e9:	sbb    BYTE PTR [eax+ebx*4+0x696bfb24],bl
  4193f0:	ss sub al,0xd2
  4193f3:	cli    
  4193f4:	add    al,0x27
  4193f6:	mov    esi,0x6d763153
  4193fb:	add    DWORD PTR [eax],edi
  4193fd:	push   esi
  4193fe:	fmul   st(5),st
  419400:	into   
  419401:	xor    eax,0xe6fd193
  419406:	aas    
  419407:	xor    DWORD PTR [edx+ebp*1+0x1c],eax
  41940b:	das    
  41940c:	mov    esi,0xd4aee5d2
  419411:	pop    ebx
  419412:	ror    BYTE PTR [edx],cl
  419414:	aaa    
  419415:	ins    DWORD PTR es:[edi],dx
  419416:	xor    BYTE PTR [ecx+0x6f33ed47],bl
  41941c:	rol    DWORD PTR [ecx+0x207d1afb],0xea
  419423:	call   0xf1ec9e06
  419428:	or     eax,0xe62d1bb8
  41942d:	mov    dl,0x14
  41942f:	pop    eax
  419430:	rol    BYTE PTR [ebx],0x11
  419433:	std    
  419434:	jae    0x419425
  419436:	jmp    0x64ac:0x48cbd21e
  41943d:	arpl   WORD PTR [ecx+0x2d75e46d],bx
  419443:	ficom  WORD PTR [edx]
  419445:	mov    eax,ds:0xc249e6e4
  41944a:	mov    dl,0x86
  41944c:	or     DWORD PTR [edi+0x45],esi
  41944f:	pop    ebp
  419450:	cmp    DWORD PTR [eax-0xee06dbf],esi
  419456:	or     DWORD PTR [ebp-0x7f],ebx
  419459:	dec    esp
  41945a:	jge    0x4193ff
  41945c:	mov    eax,0x3b2fa2f2
  419461:	leave  
  419462:	ret    
  419463:	bound  ecx,QWORD PTR [esi+0x57803963]
  419469:	daa    
  41946a:	sahf   
  41946b:	xchg   edi,eax
  41946c:	ror    DWORD PTR [ebx],cl
  41946e:	pop    es
  41946f:	cwde   
  419470:	sbb    edx,DWORD PTR [edx+edi*4-0x48]
  419474:	mov    al,0xfd
  419476:	js     0x41942a
  419478:	je     0x4194e5
  41947a:	jge    0x4194e6
  41947c:	sub    al,0xbb
  41947e:	daa    
  41947f:	sub    al,0xfa
  419481:	mov    ebp,0x40ca9b5
  419486:	jmp    0x93a4075e
  41948b:	adc    dl,bh
  41948d:	call   FWORD PTR [eax+esi*2-0xa]
  419491:	mov    al,0x1e
  419493:	add    dl,BYTE PTR fs:[ecx]
  419496:	xor    DWORD PTR ds:0x2cd1bc8e,edx
  41949c:	cvtpi2ps xmm7,QWORD PTR [ebp-0x64]
  4194a0:	and    BYTE PTR [ebp+0x11],bh
  4194a3:	(bad)  [esi]
  4194a5:	cmp    ebx,esi
  4194a7:	dec    eax
  4194a8:	pusha  
  4194a9:	stos   DWORD PTR es:[edi],eax
  4194aa:	inc    edx
  4194ab:	popa   
  4194ac:	push   edi
  4194ad:	and    eax,0xcd433b32
  4194b2:	ins    BYTE PTR es:[edi],dx
  4194b3:	(bad)  
  4194b4:	xlat   BYTE PTR ds:[ebx]
  4194b5:	push   esp
  4194b6:	inc    eax
  4194b7:	adc    al,0xa
  4194b9:	imul   edx,DWORD PTR [eax+0xd868da7],0x1424b883
  4194c3:	adc    DWORD PTR [ecx+0x58048125],esi
  4194c9:	test   DWORD PTR [ebp-0x3d86068a],0xa6c57121
  4194d3:	cmp    BYTE PTR [ecx],dl
  4194d5:	into   
  4194d6:	int    0x58
  4194d8:	inc    eax
  4194d9:	repz mov dh,0x4d
  4194dc:	shl    DWORD PTR [edx-0x58],0x7b
  4194e0:	in     al,0x46
  4194e2:	pushf  
  4194e3:	lock in al,0x40
  4194e6:	mov    eax,ds:0xc66bbd47
  4194eb:	mov    BYTE PTR [edx-0x756c0391],al
  4194f1:	jge    0x419493
  4194f3:	adc    BYTE PTR [ebp+0x20],al
  4194f6:	inc    ecx
  4194f7:	adc    BYTE PTR [edx-0x53d9702e],ah
  4194fd:	inc    ebp
  4194fe:	xor    DWORD PTR [edx+eax*8],0x59
  419502:	inc    edi
  419503:	mov    ecx,0x75f00de5
  419508:	push   0xc327c08c
  41950d:	or     DWORD PTR [edx-0x5e76ead0],edi
  419513:	mov    dl,0x3
  419515:	fwait
  419516:	jno    0x419584
  419518:	or     eax,0xb4cb34c5
  41951d:	adc    eax,0xf512473a
  419522:	jne    0x419596
  419524:	sbb    eax,0x65b9242b
  419529:	or     al,0xea
  41952b:	js     0x4194f3
  41952d:	add    BYTE PTR [esi+0x323cb1d4],dh
  419533:	repnz pop eax
  419535:	jo     0x4194ee
  419537:	ror    ecx,0xe9
  41953a:	mul    DWORD PTR [edx+0x6]
  41953d:	xchg   ebx,eax
  41953e:	jl     0x419580
  419540:	xchg   edx,eax
  419541:	and    dh,BYTE PTR [ebp+0x6bbc4e95]
  419547:	outs   dx,DWORD PTR ds:[esi]
  419548:	or     DWORD PTR [edi-0x7dcc7ac1],edi
  41954e:	call   0xf5f8:0x3f552578
  419555:	push   ebp
  419556:	je     0x419571
  419558:	outs   dx,DWORD PTR ds:[esi]
  419559:	repnz mov eax,ds:0xaa7773b2
  41955f:	jb     0x41955e
  419561:	gs add eax,0x5c8d1345
  419567:	iret   
  419568:	pop    esp
  419569:	cmp    al,0x6a
  41956b:	fmulp  st(7),st
  41956d:	pop    ecx
  41956e:	scas   al,BYTE PTR es:[edi]
  41956f:	call   0x3ff3:0x54bf227a
  419576:	mov    ch,0xc3
  419578:	jnp    0x41954b
  41957a:	popf   
  41957b:	cs pop ebx
  41957d:	mov    dh,0x1e
  41957f:	repz xchg edx,eax
  419581:	sbb    ecx,DWORD PTR [ebx]
  419583:	test   eax,0x6dfebbe5
  419588:	sub    eax,0x8ad36559
  41958d:	mov    DWORD PTR [esi],edi
  41958f:	loop   0x4195d9
  419591:	pop    ss
  419592:	or     DWORD PTR [esi+0x46430ee],esp
  419598:	or     eax,0x1cd672b4
  41959d:	in     eax,dx
  41959e:	push   ebp
  41959f:	test   eax,0x27625091
  4195a4:	std    
  4195a5:	icebp  
  4195a6:	jp     0x419535
  4195a8:	cmp    eax,0x7e1620e
  4195ad:	mov    edx,0x2167a488
  4195b2:	hlt    
  4195b3:	out    dx,al
  4195b4:	(bad)  
  4195b5:	addr16 jmp 0xcce10064
  4195bb:	icebp  
  4195bc:	int3   
  4195bd:	push   eax
  4195be:	mov    ah,dl
  4195c0:	sub    dl,al
  4195c2:	ror    DWORD PTR ds:0xcb5c0a3d,0x4d
  4195ca:	dec    ebx
  4195cb:	jno    0x41963b
  4195cd:	dec    edi
  4195ce:	test   ebp,0xb27e7a8c
  4195d4:	js     0x419650
  4195d6:	and    BYTE PTR [esi],dh
  4195d8:	jbe    0x419589
  4195da:	repz popf 
  4195dc:	(bad)  
  4195dd:	cld    
  4195de:	mov    dl,0xe4
  4195e0:	xor    al,0xb6
  4195e2:	push   edx
  4195e3:	mov    dl,0xae
  4195e5:	jae    0x4195e0
  4195e7:	pop    esp
  4195e8:	retf   
  4195e9:	stc    
  4195ea:	xor    esp,DWORD PTR [eax-0x5d]
  4195ed:	or     bh,ah
  4195ef:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f1:	or     al,BYTE PTR [ecx]
  4195f3:	xchg   ebp,eax
  4195f4:	add    ch,BYTE PTR [edi-0x6c]
  4195f7:	popa   
  4195f8:	jp     0x419623
  4195fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195fb:	sbb    BYTE PTR fs:[edx+0x34],ch
  4195ff:	dec    esp
  419600:	pushf  
  419601:	push   ebx
  419602:	ds mov ebp,ebp
  419605:	xlat   BYTE PTR ds:[ebx]
  419606:	sub    eax,DWORD PTR [ebx]
  419608:	and    bl,BYTE PTR [edi]
  41960a:	xor    esi,DWORD PTR [ebp-0x55]
  41960d:	std    
  41960e:	ds jbe 0x419642
  419611:	xchg   ebx,eax
  419612:	pop    ebx
  419613:	mov    WORD PTR ds:0xe527ea72,es
  419619:	xor    DWORD PTR [ebx],0xfffffff5
  41961c:	adc    esi,eax
  41961e:	gs cld 
  419620:	add    al,0x1f
  419622:	adc    BYTE PTR [ebx+0x320dc292],0x91
  419629:	jg     0x41960e
  41962b:	loope  0x4195de
  41962d:	in     eax,0x4b
  41962f:	das    
  419630:	mov    bl,dl
  419632:	aam    0x62
  419634:	sbb    BYTE PTR [edi+0x2a],ch
  419637:	in     eax,dx
  419638:	cmp    ax,0x5727
  41963c:	imul   edi,DWORD PTR [eax-0x79],0xffffffc4
  419640:	scas   eax,DWORD PTR es:[edi]
  419641:	lea    eax,[ebx+ecx*4-0x1b]
  419645:	xchg   DWORD PTR [edi-0x1d11bf61],ebx
  41964b:	scas   al,BYTE PTR es:[edi]
  41964c:	fist   DWORD PTR [eax]
  41964e:	xor    BYTE PTR [edx+eax*8+0x2e4f9d93],ch
  419655:	fld    TBYTE PTR [ebx+0x27]
  419658:	jp     0x4195f9
  41965a:	push   ds
  41965b:	push   ebx
  41965c:	lods   al,BYTE PTR ds:[esi]
  41965d:	inc    esp
  41965e:	mov    DWORD PTR [esi],esi
  419660:	pop    es
  419661:	scas   eax,DWORD PTR es:[edi]
  419662:	fsubr  QWORD PTR [ebp-0xb]
  419665:	out    dx,eax
  419666:	adc    ebp,edx
  419668:	dec    ebp
  419669:	lock add eax,0x3e84a56e
  41966f:	stos   DWORD PTR es:[edi],eax
  419670:	(bad)  
  419671:	in     al,0xf
  419673:	xor    edx,DWORD PTR [edx]
  419675:	xchg   dh,al
  419677:	pop    es
  419678:	nop
  419679:	mov    cl,0x4f
  41967b:	sbb    cl,ah
  41967d:	jp     0x419631
  41967f:	out    0x35,eax
  419681:	add    DWORD PTR [ebx+0x7e],edx
  419684:	out    dx,al
  419685:	retf   
  419686:	imul   esp,DWORD PTR [edx+edx*1],0x38
  41968a:	test   al,0x6
  41968c:	adc    esi,DWORD PTR [esi]
  41968e:	popf   
  41968f:	sbb    al,0xda
  419691:	xlat   BYTE PTR ds:[ebx]
  419692:	test   al,0x22
  419694:	jge    0x419661
  419696:	xor    al,0xa3
  419698:	or     dl,BYTE PTR [edx-0x20e35b4d]
  41969e:	push   es
  41969f:	es mov edi,0xd32961f5
  4196a5:	fnsave [esi-0x36]
  4196a8:	gs xchg esp,eax
  4196aa:	xor    ebp,DWORD PTR [ebx]
  4196ac:	cli    
  4196ad:	mov    ebp,0x5a7859e7
  4196b2:	test   BYTE PTR [eax+0x51],ch
  4196b5:	add    bh,cl
  4196b7:	sbb    eax,eax
  4196b9:	push   es
  4196ba:	xchg   BYTE PTR [ecx],cl
  4196bc:	lods   eax,DWORD PTR ds:[esi]
  4196bd:	mov    ?,WORD PTR [esi-0x22df3481]
  4196c3:	mov    ch,BYTE PTR [ecx+0x49d62819]
  4196c9:	shr    edx,0xa0
  4196cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196cd:	fmul   DWORD PTR [eax-0x37f10e76]
  4196d3:	in     eax,0x8f
  4196d5:	mov    dl,0x5c
  4196d7:	outs   dx,BYTE PTR ds:[esi]
  4196d8:	pop    edi
  4196d9:	sub    ebp,ebx
  4196db:	fmul   QWORD PTR [edx-0x3708ed1f]
  4196e1:	sbb    edx,DWORD PTR [edx+0x33]
  4196e4:	cdq    
  4196e5:	jg     0x41971b
  4196e7:	xchg   esp,eax
  4196e8:	scas   eax,DWORD PTR es:[edi]
  4196e9:	pop    esi
  4196ea:	push   ds
  4196eb:	es dec edx
  4196ed:	mov    dl,0xd7
  4196ef:	test   DWORD PTR [ecx],ebp
  4196f1:	hlt    
  4196f2:	and    BYTE PTR [ebx+0x22],cl
  4196f5:	dec    esi
  4196f6:	mov    eax,ds:0x20b219ec
  4196fb:	imul   ecx,DWORD PTR [ebx-0x71],0xffffffc7
  4196ff:	bnd ja 0x41970d
  419702:	pop    ds
  419703:	lock cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419706:	aad    0x70
  419708:	or     eax,0xaf214eba
  41970d:	sahf   
  41970e:	lock rcl BYTE PTR [eax],cl
  419711:	add    al,0xfd
  419713:	rol    DWORD PTR ds:0xdfa8ed2f,0x9e
  41971a:	mov    ecx,0xe2419b28
  41971f:	mov    bl,BYTE PTR [esi]
  419721:	arpl   WORD PTR [ecx],cx
  419723:	jge    0x419783
  419725:	lock sbb eax,DWORD PTR [edx+eiz*1-0x59]
  41972a:	sub    eax,0x88f65181
  41972f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419730:	loopne 0x4196c0
  419732:	and    DWORD PTR [edx],esi
  419734:	push   0xffffffac
  419736:	xor    ch,BYTE PTR [edx]
  419738:	push   0x7f
  41973a:	push   edx
  41973b:	xor    al,0x51
  41973d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41973e:	push   ebx
  41973f:	pop    edx
  419740:	outs   dx,BYTE PTR ds:[esi]
  419741:	adc    BYTE PTR [esi+0x5],0xcc
  419745:	adc    BYTE PTR [ebx+eax*8+0x180346e0],al
  41974c:	and    bl,ah
  41974e:	jo     0x4196f9
  419750:	xlat   BYTE PTR ds:[ebx]
  419751:	mov    dh,0x99
  419753:	dec    eax
  419754:	mov    edx,0xf1aeef6c
  419759:	aam    0xec
  41975b:	loopne 0x419721
  41975d:	jb     0x41978c
  41975f:	popf   
  419760:	aas    
  419761:	lock cmp bl,BYTE PTR [bp+si+0x41]
  419766:	hlt    
  419767:	(bad)  [ecx-0x6]
  41976a:	or     eax,0x12be64c7
  41976f:	dec    esp
  419770:	jae    0x419779
  419772:	mov    ah,0x7
  419774:	aam    0xd9
  419776:	sub    BYTE PTR [esi-0x31],al
  419779:	pop    ss
  41977a:	cli    
  41977b:	jecxz  0x419779
  41977d:	push   0xf5fd89cd
  419782:	loope  0x4197f0
  419784:	in     al,0x63
  419786:	es sub al,0x59
  419789:	xchg   edi,eax
  41978a:	in     eax,dx
  41978b:	in     eax,dx
  41978c:	inc    ebx
  41978d:	dec    ebx
  41978e:	cmp    al,0x9d
  419790:	dec    ebx
  419791:	sbb    al,al
  419793:	xchg   edx,eax
  419794:	mov    ds:0xb9e5a5ee,eax
  419799:	inc    esi
  41979a:	arpl   bp,cx
  41979c:	add    DWORD PTR [edi],ebp
  41979e:	fcmovnb st,st(1)
  4197a0:	adc    eax,0x8cbadda1
  4197a5:	xor    eax,0xbc50a95b
  4197aa:	or     cl,BYTE PTR [esp+ebx*8-0x767f48ed]
  4197b1:	sub    eax,0x4dcd2fef
  4197b6:	lea    edx,[esi+eiz*8-0x76131679]
  4197bd:	in     eax,0x3a
  4197bf:	pop    ds
  4197c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c1:	addr16 sbb eax,0x671eeba2
  4197c7:	lock fcom DWORD PTR [ecx-0x5a]
  4197cb:	push   ds
  4197cc:	xchg   DWORD PTR fs:[ecx-0x59],ebx
  4197d0:	add    ecx,edi
  4197d2:	int    0x38
  4197d4:	test   BYTE PTR [edx-0x5cdbf296],al
  4197da:	in     al,0x8c
  4197dc:	lods   al,BYTE PTR ds:[esi]
  4197dd:	mov    cl,0x15
  4197df:	inc    edi
  4197e0:	push   edx
  4197e1:	(bad)  
  4197e3:	add    al,0x52
  4197e5:	inc    ebp
  4197e6:	inc    edx
  4197e7:	fisttp QWORD PTR [ecx-0x33]
  4197ea:	mov    bh,0xb3
  4197ec:	lods   eax,DWORD PTR ds:[esi]
  4197ed:	sahf   
  4197ee:	shr    BYTE PTR [ebp-0x65435a93],0xdf
  4197f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f6:	lods   al,BYTE PTR ds:[esi]
  4197f7:	outs   dx,BYTE PTR ds:[esi]
  4197f8:	push   esp
  4197fa:	cmp    al,0xe7
  4197fc:	loope  0x4197ca
  4197fe:	or     esp,DWORD PTR ds:0x37dbb49c
  419804:	adc    BYTE PTR [ebx+0xd68787a],bh
  41980a:	repz mov eax,ds:0x3dca245b
  419810:	repnz pushf 
  419812:	call   0x9403:0x728dc83c
  419819:	test   DWORD PTR [eax],ecx
  41981b:	or     al,0x80
  41981d:	ror    DWORD PTR [eax+edx*2+0x337d69ff],1
  419824:	stos   BYTE PTR es:[edi],al
  419825:	sbb    DWORD PTR [ebx-0x60d9bef2],ebx
  41982b:	leave  
  41982c:	retf   
  41982d:	lods   eax,DWORD PTR ds:[esi]
  41982e:	ret    0x16a1
  419831:	ret    0x1c1d
  419834:	push   eax
  419835:	adc    al,0xb2
  419837:	pop    ebx
  419838:	ror    DWORD PTR [edi+0x1cfd073a],0x51
  41983f:	ror    DWORD PTR [esi+0x16],1
  419842:	dec    ebx
  419843:	mov    dl,0x9b
  419845:	sub    al,0xaa
  419847:	or     eax,DWORD PTR [esp+edi*1]
  41984a:	mov    esp,0x50154853
  41984f:	adc    DWORD PTR [edx-0x1d7dfbe2],esp
  419855:	sub    al,0xa5
  419857:	(bad)  
  419858:	in     eax,0xc8
  41985a:	inc    esp
  41985b:	mov    DWORD PTR [esi],edi
  41985d:	(bad)  
  41985e:	pop    eax
  41985f:	(bad)  
  419860:	xor    DWORD PTR [esi+ecx*2],0xc9d6b86f
  419867:	ins    BYTE PTR es:[edi],dx
  419868:	sbb    edx,DWORD PTR [ebp+0xc]
  41986b:	lock cs stos DWORD PTR es:[edi],eax
  41986e:	and    DWORD PTR es:[eax],ebp
  419871:	mov    dl,0xb3
  419873:	add    DWORD PTR [edi+ebx*2-0x1755cd99],0x19
  41987b:	pop    esp
  41987c:	add    BYTE PTR [edx],0x1a
  41987f:	rol    bh,cl
  419881:	dec    ebx
  419882:	ja     0x419854
  419884:	daa    
  419885:	pop    ecx
  419886:	jl     0x4198ca
  419888:	cwde   
  419889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988a:	int    0xd1
  41988c:	scas   eax,DWORD PTR es:[edi]
  41988d:	add    eax,0xe76894be
  419892:	inc    ebx
  419893:	add    BYTE PTR [ebx-0x4],ch
  419896:	dec    edi
  419897:	and    eax,0x29431776
  41989c:	lock lds eax,FWORD PTR [eax+ebx*1-0x420d955f]
  4198a4:	mov    eax,0x2c5b0eba
  4198a9:	cwde   
  4198aa:	pop    eax
  4198ab:	bound  esp,QWORD PTR [ecx+edi*8+0x34]
  4198af:	out    dx,al
  4198b0:	aas    
  4198b1:	push   ebx
  4198b2:	cwde   
  4198b3:	sub    bl,BYTE PTR [eax+0x4565298]
  4198b9:	retf   
  4198ba:	add    BYTE PTR [esi-0x40],dl
  4198bd:	cwde   
  4198be:	dec    edi
  4198bf:	cwde   
  4198c0:	jnp    0x4198d3
  4198c2:	xor    eax,0x80a9a3e0
  4198c7:	xchg   ecx,eax
  4198c8:	mov    ch,0x6e
  4198ca:	mov    ebp,ds
  4198cc:	in     al,0x3e
  4198ce:	jp     0x4198cf
  4198d0:	call   DWORD PTR [eax]
  4198d2:	imul   ebx,eax,0xb1479fd7
  4198d8:	call   0xefc8:0x73d97b8d
  4198df:	mov    dh,0x52
  4198e1:	in     eax,dx
  4198e2:	mov    esi,0xcbd35b23
  4198e7:	out    0x1b,eax
  4198e9:	mov    cl,0xf5
  4198eb:	or     al,0xf9
  4198ed:	mov    esp,0xceb057b8
  4198f2:	sbb    eax,0xf7e61e1f
  4198f7:	cli    
  4198f8:	clc    
  4198f9:	cwde   
  4198fa:	adc    BYTE PTR [eax],ch
  4198fc:	ror    DWORD PTR [esi+0x77cb5557],1
  419902:	pop    edx
  419903:	mov    eax,ds:0xb53cb2f6
  419908:	fsub   DWORD PTR [eax-0x39]
  41990b:	xchg   ecx,eax
  41990c:	adc    BYTE PTR [edx],bh
  41990e:	jp     0x419907
  419910:	stos   BYTE PTR es:[edi],al
  419911:	enter  0x7610,0xc1
  419915:	add    BYTE PTR [ebx],ch
  419917:	cmc    
  419918:	fstp   QWORD PTR [ebx*8+0x3a923edf]
  41991f:	cmp    esp,eax
  419921:	mov    bh,BYTE PTR [edx]
  419923:	pop    ebp
  419924:	and    ah,BYTE PTR [eax+0x0]
  419927:	jo     0x41994a
  419929:	js     0x419913
  41992b:	dec    esp
  41992c:	mov    BYTE PTR [ebp+ebp*1+0x46],cl
  419930:	mov    bh,al
  419932:	aaa    
  419933:	mov    WORD PTR [edi+0x12],cs
  419936:	mov    ch,0x8e
  419938:	call   0xd80c064c
  41993d:	lock ret 
  41993f:	sti    
  419940:	adc    DWORD PTR [ecx+edx*8+0x3d00bcf5],0xf
  419948:	adc    BYTE PTR [ebx+ebx*2],cl
  41994b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41994c:	sbb    cl,BYTE PTR [ecx+eax*2-0x1b389d7a]
  419953:	and    eax,DWORD PTR [ebx-0x52]
  419956:	outs   dx,BYTE PTR ds:[esi]
  419957:	stc    
  419958:	(bad)  
  419959:	cdq    
  41995a:	mov    ?,WORD PTR ds:0x456149b4
  419960:	jecxz  0x41991d
  419962:	loopne 0x419907
  419964:	cdq    
  419965:	mov    cl,0xe9
  419967:	int3   
  419968:	push   ebp
  419969:	mov    es,WORD PTR [edx]
  41996b:	push   0xffffffef
  41996d:	jns    0x419926
  41996f:	cdq    
  419970:	aaa    
  419971:	(bad)  
  419972:	mov    cs,WORD PTR [esi+eiz*4]
  419975:	rol    BYTE PTR [edx],1
  419977:	add    esp,esi
  419979:	mov    al,0x6e
  41997b:	sahf   
  41997c:	jo     0x41992a
  41997e:	(bad)  
  41997f:	dec    esp
  419980:	rcr    DWORD PTR [esi-0x2e],cl
  419983:	xchg   ebp,eax
  419984:	jg     0x4199f7
  419986:	sbb    cl,ah
  419988:	cmp    eax,0x2f3c2115
  41998d:	jbe    0x419925
  41998f:	mov    bl,0x31
  419991:	adc    al,al
  419993:	xchg   esi,eax
  419994:	mov    BYTE PTR [edi-0x55],cl
  419997:	(bad)  
  419998:	retf   
  419999:	js     0x4199de
  41999b:	pop    edx
  41999c:	sbb    bl,ah
  41999e:	(bad)  
  41999f:	adc    ecx,DWORD PTR [eax]
  4199a1:	lods   eax,DWORD PTR ds:[esi]
  4199a2:	lahf   
  4199a3:	xor    ch,BYTE PTR [esp+edi*8+0x47]
  4199a7:	and    DWORD PTR [edi+eiz*2+0x65],edx
  4199ab:	test   eax,0x2d24096e
  4199b0:	inc    edi
  4199b1:	fld    QWORD PTR [ecx]
  4199b3:	xchg   DWORD PTR [edx+eiz*1+0x67],edi
  4199b7:	push   0x7dadc30f
  4199bc:	add    eax,0x926a384e
  4199c1:	jbe    0x4199d9
  4199c3:	and    BYTE PTR [eax+eiz*2-0x3c],0x9d
  4199c8:	cmp    al,0x31
  4199ca:	test   eax,0xdb963680
  4199cf:	jle    0x41995b
  4199d1:	cmp    DWORD PTR [esi-0x27],eax
  4199d4:	je     0x419967
  4199d6:	inc    ecx
  4199d7:	dec    ecx
  4199d8:	pusha  
  4199d9:	fnstcw WORD PTR [ecx+ebx*2]
  4199dc:	stc    
  4199dd:	jle    0x4199a4
  4199df:	leave  
  4199e0:	les    ecx,FWORD PTR [ebx+0x20252d8c]
  4199e6:	sbb    DWORD PTR [ebx-0x3e790883],edx
  4199ec:	sahf   
  4199ed:	aam    0x85
  4199ef:	aas    
  4199f0:	xor    DWORD PTR [ebx+0x6a],0x88dbdb
  4199f7:	xlat   BYTE PTR ds:[ebx]
  4199f8:	mov    ds:0x64d007aa,eax
  4199fd:	adc    BYTE PTR [esi+0x75],cl
  419a00:	xchg   edi,eax
  419a01:	mov    WORD PTR [ebx-0x733a7d43],es
  419a07:	inc    eax
  419a08:	sbb    eax,0xdb5bcdfb
  419a0d:	rcl    esi,0x41
  419a10:	add    al,0x3d
  419a12:	retf   0xac1a
  419a15:	es push ecx
  419a17:	adc    BYTE PTR [edi+edi*8],bl
  419a1a:	xor    al,0x4e
  419a1c:	call   0x122d:0xb94fc5d7
  419a23:	sub    eax,DWORD PTR [edx]
  419a25:	sub    BYTE PTR [ebp+0x7c],dl
  419a28:	and    BYTE PTR [esi+0x1],bh
  419a2b:	xor    bl,BYTE PTR [eax]
  419a2d:	add    BYTE PTR [esi-0x22e0e876],0xe5
  419a34:	inc    edi
  419a35:	add    eax,0xcd374f59
  419a3a:	addr16 (bad) 
  419a3c:	psubw  mm7,QWORD PTR [ebx-0x19]
  419a40:	(bad)  [ebx-0x1eb2cf9c]
  419a46:	cs pop ds
  419a48:	jge    0x4199d6
  419a4a:	ss fwait
  419a4c:	stc    
  419a4d:	and    DWORD PTR [edi-0x20fdd23f],esi
  419a53:	pop    es
  419a54:	xchg   esi,eax
  419a55:	lea    edi,[edi+0x370977a1]
  419a5b:	mov    edx,0x30cb728e
  419a60:	je     0x419a57
  419a62:	leave  
  419a63:	add    eax,0x8a6591f
  419a68:	xchg   esi,eax
  419a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a6a:	js     0x419aa0
  419a6c:	pop    esi
  419a6d:	lods   al,BYTE PTR ds:[esi]
  419a6e:	(bad)  
  419a6f:	mov    esp,0xa68f70c9
  419a74:	sbb    eax,0x1a1dd66b
  419a79:	dec    ebp
  419a7a:	mov    al,ds:0xf545efed
  419a7f:	mov    dh,0xe4
  419a81:	xchg   edx,eax
  419a82:	(bad)  
  419a83:	mov    al,ds:0xfbb675d1
  419a88:	in     al,dx
  419a89:	pop    edi
  419a8a:	shr    DWORD PTR [eax+0x30f3a9c1],1
  419a90:	(bad)  
  419a91:	mov    ds:0x67dad4cc,al
  419a96:	repz iret 
  419a98:	(bad)  
  419a99:	aas    
  419a9a:	dec    esp
  419a9b:	fwait
  419a9c:	pop    ss
  419a9d:	add    al,0x86
  419a9f:	ret    0x6764
  419aa2:	jg     0x419a68
  419aa4:	iret   
  419aa5:	pop    ds
  419aa6:	sbb    eax,0xaf035c64
  419aab:	mov    ebp,0x99abf78d
  419ab0:	cmp    DWORD PTR [ecx+ebp*2],0xffa32c0b
  419ab7:	int3   
  419ab8:	fbstp  TBYTE PTR [esi]
  419aba:	das    
  419abb:	and    edx,DWORD PTR [ecx]
  419abd:	pop    ebp
  419abe:	mov    al,0xeb
  419ac0:	inc    edi
  419ac1:	jge    0x419a60
  419ac3:	imul   ebx,DWORD PTR [edi-0x77],0xfd457724
  419aca:	mov    ecx,0x7bee205c
  419acf:	lods   al,BYTE PTR ds:[esi]
  419ad0:	add    ah,al
  419ad2:	pop    ebp
  419ad3:	pushf  
  419ad4:	dec    ecx
  419ad5:	cld    
  419ad6:	rcl    BYTE PTR [ebx-0x3f],1
  419ad9:	cmova  ecx,esi
  419adc:	xchg   edx,eax
  419add:	out    0xe4,al
  419adf:	(bad)  
  419ae0:	cmp    eax,0x6d2717aa
  419ae5:	cmp    BYTE PTR [esi],al
  419ae7:	cwde   
  419ae8:	aam    0x83
  419aea:	dec    ebp
  419aeb:	pop    esp
  419aec:	or     BYTE PTR [edx*4-0x499baeb0],0x80
  419af4:	enter  0xadb4,0xfa
  419af8:	mov    gs,WORD PTR [ecx-0x7db5512a]
  419afe:	inc    esp
  419aff:	xor    BYTE PTR [ebx+0x655de972],al
  419b05:	stos   DWORD PTR es:[edi],eax
  419b06:	outs   dx,DWORD PTR ds:[esi]
  419b07:	into   
  419b08:	mov    dl,0x5c
  419b0a:	sub    DWORD PTR [edi-0x5d],0x4a48986a
  419b11:	loop   0x419b01
  419b13:	xchg   DWORD PTR [esi+0x63],ebx
  419b16:	mov    eax,ds:0xea23b7ab
  419b1b:	les    eax,FWORD PTR [ebx]
  419b1d:	sub    eax,0x8037d531
  419b22:	xor    al,0x56
  419b24:	ins    BYTE PTR es:[edi],dx
  419b25:	int    0x85
  419b27:	je     0x419ab8
  419b29:	ins    DWORD PTR es:[edi],dx
  419b2a:	adc    al,0xcb
  419b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b2d:	adc    al,0xc1
  419b2f:	and    eax,0xd78c68a8
  419b34:	jb     0x419ae7
  419b36:	ret    
  419b37:	enter  0x22a7,0xd1
  419b3b:	inc    ebp
  419b3c:	pcmpgtd mm6,mm5
  419b3f:	mov    al,ds:0xf1b3f7e4
  419b44:	sub    al,BYTE PTR [edx]
  419b46:	push   0x15138284
  419b4b:	or     ah,BYTE PTR [esi]
  419b4d:	fist   DWORD PTR [ecx-0x1d]
  419b50:	out    dx,eax
  419b51:	sbb    eax,0xc6e37b8
  419b56:	add    al,0x1f
  419b58:	push   0xa
  419b5a:	cdq    
  419b5b:	jae    0x419b39
  419b5d:	cmc    
  419b5e:	pop    es
  419b5f:	cmp    eax,0xd5da6e6c
  419b64:	(bad)  
  419b65:	push   esp
  419b66:	inc    edi
  419b67:	(bad)  
  419b68:	mov    bh,0x9c
  419b6a:	lock fbld TBYTE PTR gs:[eax+eiz*1-0x1eb436b0]
  419b73:	xchg   ebp,eax
  419b74:	sbb    DWORD PTR [esi-0x17],0x578f191f
  419b7b:	jnp    0x419b7c
  419b7d:	pop    ecx
  419b7e:	inc    ebp
  419b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b80:	cwde   
  419b81:	sbb    al,0x7
  419b83:	sbb    dl,bh
  419b85:	xor    DWORD PTR [edx+ebp*8],ebx
  419b88:	into   
  419b89:	in     al,dx
  419b8a:	mov    esi,0x96039469
  419b8f:	sti    
  419b90:	jbe    0x419ba9
  419b92:	stc    
  419b93:	xchg   edi,eax
  419b94:	gs and eax,0x8693eeb0
  419b9a:	xor    BYTE PTR [eax-0x53c33c21],ah
  419ba0:	iret   
  419ba1:	call   FWORD PTR [edx-0x3c89be04]
  419ba7:	mov    ss,WORD PTR ds:0xa669d7e9
  419bad:	dec    ecx
  419bae:	pop    eax
  419baf:	pop    ecx
  419bb0:	pop    esi
  419bb1:	mov    eax,0x878a003e
  419bb6:	jg     0x419c01
  419bb8:	(bad)  
  419bba:	stos   BYTE PTR es:[edi],al
  419bbb:	pusha  
  419bbc:	test   BYTE PTR ds:0x4e09672e,0xbf
  419bc3:	test   BYTE PTR [ebp-0x1451d00],cl
  419bc9:	push   es
  419bca:	out    dx,al
  419bcb:	fldcw  WORD PTR [ebp+0x7a]
  419bce:	mov    ah,dh
  419bd0:	call   0xd9b89873
  419bd5:	dec    ecx
  419bd6:	jne    0x419bc1
  419bd8:	lods   al,BYTE PTR ds:[esi]
  419bd9:	sub    edx,0xffffffd8
  419bdc:	rcl    DWORD PTR [edx-0x50d8fb85],cl
  419be2:	dec    edx
  419be3:	push   edi
  419be4:	xchg   BYTE PTR [ebx],al
  419be6:	push   edx
  419be7:	mov    ebp,0x616949f5
  419bec:	pop    ss
  419bed:	mov    ecx,0x85307f6d
  419bf2:	add    DWORD PTR [edi+0x732d76a9],0xbb4b0864
  419bfc:	mov    ecx,0x3fd7faf5
  419c01:	mov    ebp,0xf87fa3c3
  419c06:	push   es
  419c07:	mov    bl,BYTE PTR [edx]
  419c09:	mov    ds:0xfa761603,al
  419c0e:	sub    al,0xea
  419c10:	mov    al,ds:0x4a74e77e
  419c15:	adc    al,BYTE PTR [edx]
  419c17:	rcl    BYTE PTR [ebp+0x20],cl
  419c1a:	inc    edi
  419c1b:	ds je  0x419c7a
  419c1e:	push   es
  419c1f:	fild   WORD PTR ds:0x7cbb2538
  419c25:	aam    0x71
  419c27:	out    dx,eax
  419c28:	(bad)  
  419c29:	or     ecx,esp
  419c2b:	mov    BYTE PTR [ebx],bh
  419c2d:	sbb    al,0x75
  419c2f:	mov    bl,0xf7
  419c31:	or     ebp,DWORD PTR [ebx+0xb5b735f]
  419c37:	(bad)  
  419c38:	sbb    ecx,0xd7e26a75
  419c3e:	es push ebx
  419c40:	gs xor eax,0x218ece9f
  419c46:	and    edi,ecx
  419c48:	ret    0xc7ec
  419c4b:	xchg   edx,eax
  419c4c:	pop    eax
  419c4d:	pop    ss
  419c4e:	icebp  
  419c4f:	jg     0x419ca8
  419c51:	xchg   ebp,eax
  419c52:	les    esp,FWORD PTR [eax+0x43644089]
  419c58:	div    ch
  419c5a:	sti    
  419c5b:	jae    0x419c6e
  419c5d:	cmc    
  419c5e:	sbb    cl,cl
  419c60:	dec    esi
  419c61:	test   eax,0xc522588a
  419c66:	scas   eax,DWORD PTR es:[edi]
  419c67:	add    ecx,DWORD PTR es:[edi-0x1349580]
  419c6e:	pop    ecx
  419c6f:	jns    0x419c1e
  419c71:	inc    ecx
  419c72:	xor    al,0xa8
  419c74:	mov    gs,WORD PTR [edi+0x268ab44f]
  419c7a:	and    ch,BYTE PTR [edi-0x2f]
  419c7d:	leave  
  419c7e:	jmp    DWORD PTR [eax-0x5a]
  419c81:	es fdivrp st(2),st
  419c84:	cld    
  419c85:	loopne 0x419ca4
  419c87:	sbb    eax,0x63095576
  419c8c:	pushf  
  419c8d:	push   edi
  419c8e:	inc    ecx
  419c8f:	mov    dh,0xd9
  419c92:	andnps xmm4,XMMWORD PTR [esi-0x4c]
  419c96:	pushf  
  419c97:	stos   BYTE PTR es:[edi],al
  419c98:	repz lea ecx,[eax-0x1d]
  419c9c:	imul   edi,DWORD PTR [ebp+edi*4+0x45],0x59
  419ca1:	adc    al,ch
  419ca3:	cld    
  419ca4:	hlt    
  419ca5:	inc    edi
  419ca6:	push   ecx
  419ca7:	(bad)  
  419ca8:	pop    ebx
  419ca9:	pop    esi
  419caa:	mov    cl,dh
  419cac:	into   
  419cad:	rcr    edx,cl
  419caf:	or     BYTE PTR [edi+0x60],bl
  419cb2:	adc    BYTE PTR [ebx+0x2dc6dc3c],bl
  419cb8:	pop    ecx
  419cb9:	push   0xe1bdbfe7
  419cbe:	ins    DWORD PTR es:[edi],dx
  419cbf:	jecxz  0x419c96
  419cc1:	push   cs
  419cc2:	pop    ss
  419cc3:	leave  
  419cc4:	sub    al,0x6c
  419cc6:	das    
  419cc7:	mov    dl,0x51
  419cc9:	ins    BYTE PTR es:[edi],dx
  419cca:	fisubr DWORD PTR [ebp+0x70911520]
  419cd0:	pushf  
  419cd1:	mov    ah,0x97
  419cd3:	dec    ebp
  419cd4:	sub    ebx,0x7f
  419cd7:	xchg   edi,eax
  419cd8:	fild   QWORD PTR fs:[esi]
  419cdb:	aas    
  419cdc:	inc    esp
  419cdd:	push   0x2
  419cdf:	arpl   WORD PTR [edi-0x20a08283],bx
  419ce5:	in     eax,0xdb
  419ce7:	mov    al,ds:0x47e76aa5
  419cec:	es std 
  419cee:	cwde   
  419cef:	and    ebx,eax
  419cf1:	push   esp
  419cf2:	mov    WORD PTR [esi+0x7e412ad0],es
  419cf8:	jg     0x419d29
  419cfa:	sub    eax,0xa8e83003
  419cff:	jp     0x419cb7
  419d01:	cmc    
  419d02:	adc    DWORD PTR [eax],0x5dad91a7
  419d08:	sahf   
  419d09:	jge    0x419d6d
  419d0b:	xchg   ebp,eax
  419d0c:	mov    ecx,0x20b39763
  419d11:	rol    dh,1
  419d13:	xchg   ebp,eax
  419d14:	bound  ecx,QWORD PTR [edx-0x4c]
  419d17:	mov    ebp,eax
  419d19:	ja     0x419d85
  419d1b:	into   
  419d1c:	sub    al,bl
  419d1e:	lea    ecx,[edi-0x117f320a]
  419d24:	stc    
  419d25:	mov    ?,WORD PTR [ebx-0x43450759]
  419d2b:	sahf   
  419d2c:	xchg   ebx,eax
  419d2d:	(bad)  
  419d2e:	hlt    
  419d2f:	or     eax,0xef55232f
  419d34:	xchg   ecx,eax
  419d35:	xor    BYTE PTR [eax-0x6ae47381],cl
  419d3b:	mov    ecx,ecx
  419d3d:	mov    WORD PTR [ebx],cs
  419d3f:	test   al,0x4a
  419d41:	ret    0xffad
  419d44:	retf   
  419d45:	stos   BYTE PTR es:[edi],al
  419d46:	xchg   esp,eax
  419d47:	or     al,BYTE PTR [ecx-0x19a0982e]
  419d4d:	call   0x45867abc
  419d52:	imul   BYTE PTR [edi]
  419d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d55:	(bad)  
  419d56:	and    dl,bl
  419d58:	sbb    edi,edi
  419d5a:	ins    BYTE PTR es:[edi],dx
  419d5b:	ss pop ecx
  419d5d:	adc    esp,DWORD PTR [edx-0x48]
  419d60:	cwde   
  419d61:	xlat   BYTE PTR ds:[ebx]
  419d62:	into   
  419d63:	jnp    0x419d3a
  419d65:	lea    edi,[ebp-0x407ecb5f]
  419d6b:	out    dx,eax
  419d6c:	inc    eax
  419d6d:	fsubr  DWORD PTR [ebx+0x2]
  419d70:	or     dl,ch
  419d72:	mov    dh,0xea
  419d74:	stc    
  419d75:	lods   al,BYTE PTR ds:[esi]
  419d76:	repz cmp BYTE PTR [edx+0x28661ff7],dh
  419d7d:	(bad)  
  419d7f:	enter  0x9bb5,0x13
  419d83:	(bad)  
  419d84:	call   0x8e3b0195
  419d89:	cmp    DWORD PTR [edi+0x36],edi
  419d8c:	xchg   ch,cl
  419d8e:	dec    edx
  419d8f:	dec    ebx
  419d90:	pop    esi
  419d91:	cmp    DWORD PTR [edi+eax*1],ebx
  419d94:	das    
  419d95:	pop    esp
  419d96:	(bad)  
  419d97:	dec    ebx
  419d98:	pop    eax
  419d99:	xor    al,0xa5
  419d9b:	push   edi
  419d9c:	mov    dl,0x3
  419d9e:	std    
  419d9f:	push   esi
  419da0:	fdivr  DWORD PTR [ebx]
  419da2:	ja     0x419e12
  419da4:	loope  0x419da7
  419da6:	cmp    DWORD PTR [esi-0x24],esp
  419da9:	cdq    
  419daa:	jb     0x419e01
  419dac:	(bad)  
  419dad:	dec    esp
  419dae:	xor    ecx,DWORD PTR [esp+ebx*8+0x2c]
  419db2:	ret    
  419db3:	sbb    DWORD PTR [ebx-0x49872dc8],esp
  419db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dba:	hlt    
  419dbb:	mov    ah,BYTE PTR [edi+0x3724d290]
  419dc1:	rcl    BYTE PTR [eax-0x3de8da74],cl
  419dc7:	call   0x51969585
  419dcc:	mov    al,0xdb
  419dce:	xlat   BYTE PTR ds:[ebx]
  419dcf:	dec    eax
  419dd0:	das    
  419dd1:	es leavew 
  419dd4:	and    edi,DWORD PTR [edi]
  419dd6:	fld    DWORD PTR [edx-0x27]
  419dd9:	jecxz  0x419e14
  419ddb:	stos   DWORD PTR es:[edi],eax
  419ddc:	mov    eax,0x56b257e4
  419de1:	out    0xf2,al
  419de3:	push   es
  419de4:	mov    al,ds:0xe432ec51
  419de9:	fwait
  419dea:	jb     0x419e1d
  419dec:	or     ebx,edi
  419dee:	inc    eax
  419def:	retf   0x7a2e
  419df2:	bnd jp 0x419dcb
  419df5:	inc    esi
  419df6:	repnz in eax,0xa7
  419df9:	std    
  419dfa:	mov    ecx,0x7cf72231
  419dff:	iret   
  419e00:	add    DWORD PTR [ebx+0x321b2c4e],edx
  419e06:	xchg   ebx,eax
  419e07:	xor    al,0xd9
  419e09:	adc    al,0x72
  419e0b:	jp     0x419deb
  419e0d:	mov    al,0xa0
  419e0f:	push   ebp
  419e10:	(bad)  
  419e11:	pushf  
  419e12:	mov    edi,cs
  419e14:	push   0xfdf156e8
  419e19:	mov    ?,WORD PTR [ecx-0x5a]
  419e1c:	mov    ebp,edx
  419e1e:	das    
  419e1f:	fwait
  419e20:	or     ecx,DWORD PTR [ebx]
  419e22:	mov    ds:0x91ca01c0,eax
  419e27:	xor    cl,BYTE PTR [edx]
  419e29:	push   edx
  419e2a:	sub    ebx,DWORD PTR [eax-0x38]
  419e2d:	sbb    DWORD PTR [ebx-0x4c8dc95a],eax
  419e33:	idiv   edi
  419e35:	sar    DWORD PTR [ebp+0x5a],1
  419e38:	xchg   BYTE PTR [ecx+ecx*1+0x7c],bl
  419e3c:	pop    eax
  419e3d:	push   esi
  419e3e:	pop    ebp
  419e40:	xchg   bl,dh
  419e42:	in     al,dx
  419e43:	mov    bl,0x10
  419e45:	or     al,0x11
  419e47:	outs   dx,DWORD PTR ds:[esi]
  419e48:	inc    edi
  419e49:	outs   dx,DWORD PTR ds:[esi]
  419e4a:	mov    ds:0x2817486b,eax
  419e4f:	shl    ch,0x52
  419e52:	aad    0x84
  419e54:	mov    cl,0x6f
  419e56:	xchg   esp,eax
  419e57:	sbb    al,0x85
  419e59:	mov    gs,WORD PTR [edx]
  419e5b:	pop    es
  419e5c:	fstp   QWORD PTR [esi-0x75]
  419e5f:	dec    ecx
  419e60:	das    
  419e61:	shr    BYTE PTR [edi+0x6f],1
  419e64:	mov    DWORD PTR [edi],ebp
  419e66:	test   eax,0x58742665
  419e6b:	mov    ebp,0x2f0500c2
  419e70:	paddusw mm1,mm6
  419e73:	(bad)  
  419e74:	in     eax,dx
  419e75:	test   al,0x48
  419e77:	test   bl,bl
  419e79:	ins    DWORD PTR es:[edi],dx
  419e7a:	inc    edx
  419e7b:	nop
  419e7c:	test   eax,0x1690a95f
  419e81:	inc    ebx
  419e82:	inc    edi
  419e83:	ret    
  419e84:	shl    BYTE PTR [ebx-0x32caed10],1
  419e8a:	dec    esp
  419e8b:	lods   al,BYTE PTR ds:[esi]
  419e8c:	xor    BYTE PTR [ecx+0x151488a5],ah
  419e92:	dec    ecx
  419e93:	leave  
  419e94:	sbb    eax,0xf3c8df99
  419e99:	inc    edx
  419e9a:	xor    DWORD PTR [ebx-0x61be27b3],ebp
  419ea0:	lock lds ebx,FWORD PTR [eax]
  419ea3:	fs pusha 
  419ea5:	dec    edx
  419ea6:	ficom  WORD PTR [edi+eax*8]
  419ea9:	aad    0xa9
  419eab:	sbb    bl,BYTE PTR [edx+0x33]
  419eae:	mov    ebp,ebx
  419eb0:	push   edx
  419eb1:	mov    DWORD PTR [edi+eax*4+0x26],ebx
  419eb5:	sub    ah,dl
  419eb7:	std    
  419eb8:	ret    0x1da8
  419ebb:	xor    eax,0xb29ce283
  419ec0:	int    0xda
  419ec2:	pop    edi
  419ec3:	mov    ss,eax
  419ec5:	sub    al,0xd8
  419ec7:	ja     0x419ead
  419ec9:	pusha  
  419eca:	add    BYTE PTR [eax],dh
  419ecc:	or     dh,BYTE PTR [ebx+eiz*1+0xf]
  419ed0:	mov    dl,0xfd
  419ed2:	inc    ebx
  419ed3:	push   ebp
  419ed4:	push   ss
  419ed5:	mov    ebx,ebp
  419ed7:	retf   
  419ed8:	lods   al,BYTE PTR ds:[esi]
  419ed9:	fadd   DWORD PTR [ebx+0xd208fd2]
  419edf:	stc    
  419ee0:	ds pop edi
  419ee2:	mov    dh,BYTE PTR [ecx]
  419ee4:	into   
  419ee5:	scas   eax,DWORD PTR es:[edi]
  419ee6:	lahf   
  419ee7:	push   ebp
  419ee8:	test   DWORD PTR [edi+eax*2+0x45990066],0x82c64a78
  419ef3:	pusha  
  419ef4:	ins    DWORD PTR es:[edi],dx
  419ef5:	ret    0x3f5
  419ef8:	std    
  419ef9:	shl    DWORD PTR [edi],0xf1
  419efc:	rcl    dl,0x33
  419eff:	cmp    DWORD PTR [ecx],ebp
  419f01:	aaa    
  419f02:	pop    ebp
  419f03:	or     eax,0x970909bb
  419f08:	mov    ds:0x8350665,eax
  419f0d:	jecxz  0x419f70
  419f0f:	jne    0x419f04
  419f11:	mov    cl,BYTE PTR [esi]
  419f13:	and    BYTE PTR [edi+0x59],ah
  419f16:	sahf   
  419f17:	(bad)  
  419f19:	repz mov esp,0x74c3f4e3
  419f1f:	or     al,BYTE PTR [edx-0x9957f42]
  419f25:	adc    al,0x47
  419f27:	pop    eax
  419f28:	push   ecx
  419f29:	js     0x419edc
  419f2b:	inc    ebx
  419f2c:	mov    bh,0xbe
  419f2e:	push   ds
  419f2f:	cmp    al,0xae
  419f31:	inc    edi
  419f32:	sub    ebp,0xffffffc4
  419f35:	pop    esi
  419f36:	int    0xd1
  419f38:	je     0x419fb8
  419f3a:	loopne 0x419f37
  419f3c:	push   edi
  419f3d:	out    0xd3,al
  419f3f:	jg     0x419f5e
  419f41:	pushf  
  419f42:	adc    eax,0x34b850bc
  419f47:	dec    esp
  419f48:	cmp    eax,0x464c573c
  419f4d:	pop    edi
  419f4e:	in     al,0x5c
  419f50:	pop    ecx
  419f51:	mov    ah,0x1c
  419f53:	xor    DWORD PTR [edx-0x37],esi
  419f56:	mov    ebx,0xa8abcda4
  419f5b:	gs xchg edi,eax
  419f5d:	cwde   
  419f5e:	lahf   
  419f5f:	cmp    eax,0xa68a8a38
  419f64:	ins    DWORD PTR es:[edi],dx
  419f65:	add    BYTE PTR [edi],ch
  419f67:	ror    BYTE PTR [edx+0x3f1e268d],1
  419f6d:	pop    ebx
  419f6e:	xchg   edx,eax
  419f6f:	sar    BYTE PTR [ebx],1
  419f71:	ds jge 0x419faf
  419f74:	out    0x3f,eax
  419f76:	mov    cl,0xaa
  419f78:	hlt    
  419f79:	div    ecx
  419f7b:	jns    0x419f3c
  419f7d:	push   ebx
  419f7e:	aas    
  419f7f:	in     eax,0xf3
  419f81:	enter  0xd1e3,0x4c
  419f85:	dec    ebx
  419f86:	and    al,0x86
  419f88:	aas    
  419f89:	outs   dx,DWORD PTR ds:[esi]
  419f8a:	(bad)  [esi+0x39f06143]
  419f90:	out    dx,eax
  419f91:	ins    BYTE PTR es:[edi],dx
  419f92:	ret    0x5f3
  419f95:	push   0x1098829
  419f9a:	cmp    eax,edi
  419f9c:	xchg   ebx,eax
  419f9d:	lock popa 
  419f9f:	test   BYTE PTR [esi],ch
  419fa1:	mov    ebx,0x75867658
  419fa6:	mov    bl,0x89
  419fa8:	xchg   ch,ch
  419faa:	les    ebx,FWORD PTR [edx-0x29db8083]
  419fb0:	add    ebx,DWORD PTR [ecx+0x79bf6159]
  419fb6:	fs jp  0x419fed
  419fb9:	sbb    ch,BYTE PTR [ecx+eax*4-0x31c16d9a]
  419fc0:	rol    BYTE PTR [esp+eax*4-0x48c7afc1],cl
  419fc7:	jecxz  0x41a02f
  419fc9:	xchg   edi,eax
  419fca:	pushf  
  419fcb:	sub    ebp,DWORD PTR [edx+0x5358fadd]
  419fd1:	outs   dx,DWORD PTR ds:[esi]
  419fd2:	rcl    DWORD PTR [edi+0x60],0x8
  419fd6:	mov    ?,WORD PTR [ecx+0x45]
  419fd9:	ins    DWORD PTR es:[edi],dx
  419fda:	loop   0x419fd4
  419fdc:	cmp    DWORD PTR [edi+0xa3cb266],0xffffff97
  419fe3:	and    edi,DWORD PTR [eax]
  419fe5:	add    bl,dh
  419fe7:	adc    esp,DWORD PTR [esi]
  419fe9:	push   edi
  419fea:	cdq    
  419feb:	mov    ch,0x93
  419fed:	sbb    BYTE PTR [ebx],ch
  419fef:	cwde   
  419ff0:	lock dec edi
  419ff2:	out    dx,eax
  419ff3:	xor    ebx,DWORD PTR [ecx+0x6e]
  419ff6:	jecxz  0x419fb2
  419ff8:	xchg   DWORD PTR ds:0x521c199d,edi
  419ffe:	in     eax,dx
  419fff:	cdq    
  41a000:	adc    cl,BYTE PTR [ebp+0x50]
  41a003:	test   BYTE PTR [esi],ah
  41a005:	jle    0x419ffe
  41a007:	dec    ebp
  41a008:	addr16 adc al,0xed
  41a00b:	in     eax,dx
  41a00c:	clc    
  41a00d:	ins    BYTE PTR es:[edi],dx
  41a00e:	xchg   esp,eax
  41a00f:	pop    esp
  41a010:	enter  0x5047,0x70
  41a014:	pop    ebx
  41a015:	in     al,0x23
  41a017:	in     al,dx
  41a018:	and    bh,dl
  41a01a:	fs (bad) 
  41a01d:	in     eax,0xd3
  41a01f:	xchg   ebp,eax
  41a020:	aad    0x81
  41a022:	add    DWORD PTR [ebx+0x52],0xfcc13ff4
  41a029:	call   0xc355c210
  41a02e:	cmc    
  41a02f:	sbb    al,0x3f
  41a031:	cmp    ebp,esp
  41a033:	in     al,dx
  41a034:	sbb    al,0x1f
  41a036:	cmp    al,0xa8
  41a038:	mov    ch,0xeb
  41a03a:	shl    DWORD PTR [ebp+0x23],1
  41a03d:	shr    ah,1
  41a03f:	pop    ecx
  41a040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a041:	or     ebp,edi
  41a043:	push   edi
  41a044:	adc    DWORD PTR [esi],ebp
  41a046:	mov    ah,0x5f
  41a048:	cli    
  41a049:	sub    DWORD PTR [edx-0x2a],edx
  41a04c:	adc    ebp,DWORD PTR [edi+0x6d]
  41a04f:	mov    ebx,ss
  41a051:	cmp    DWORD PTR [ebx-0x152514de],ebp
  41a057:	jmp    FWORD PTR [ebx-0x182f2f14]
  41a05d:	imul   esi,DWORD PTR [ecx-0x5f],0xc3154b5d
  41a064:	into   
  41a065:	pop    ecx
  41a066:	sbb    edi,ebp
  41a068:	test   BYTE PTR [ebx],0xf3
  41a06b:	mov    edx,ecx
  41a06d:	dec    edx
  41a06e:	ja     0x41a01a
  41a070:	hlt    
  41a071:	push   ds
  41a072:	inc    eax
  41a073:	ror    DWORD PTR [edi],cl
  41a075:	in     eax,dx
  41a076:	and    al,0x83
  41a078:	lahf   
  41a079:	inc    esi
  41a07a:	add    al,0xf8
  41a07c:	add    ebx,DWORD PTR [ebp+0x6cb4a4bc]
  41a082:	sbb    DWORD PTR fs:[ebx+0x13a2af0c],ebx
  41a089:	js     0x41a093
  41a08b:	pop    esi
  41a08c:	aas    
  41a08d:	pop    eax
  41a08e:	mov    ch,0x5b
  41a090:	ds add eax,0x66b3bca7
  41a096:	pop    es
  41a097:	sbb    BYTE PTR [edx-0x1d68affd],bh
  41a09d:	in     al,0xf3
  41a09f:	fstp   DWORD PTR [eax]
  41a0a1:	xchg   edx,eax
  41a0a2:	jns    0x41a108
  41a0a4:	dec    eax
  41a0a5:	(bad)  
  41a0a6:	dec    BYTE PTR [ebx-0x1e]
  41a0a9:	loopne 0x41a0a8
  41a0ab:	xchg   edi,eax
  41a0ac:	gs icebp 
  41a0ae:	dec    esi
  41a0af:	dec    ebx
  41a0b0:	jb     0x41a065
  41a0b2:	pop    ss
  41a0b3:	fwait
  41a0b4:	mov    bh,0x6a
  41a0b6:	push   ss
  41a0b7:	and    ebp,DWORD PTR [edx+0xe]
  41a0ba:	mov    ecx,0x5aac12bd
  41a0bf:	mov    WORD PTR [eax-0x31fb2d4b],fs
  41a0c5:	out    0x5b,eax
  41a0c7:	push   ebp
  41a0c8:	mov    ds:0x7710b45d,eax
  41a0cd:	adc    DWORD PTR [edi],esi
  41a0cf:	push   esp
  41a0d0:	stc    
  41a0d1:	sbb    eax,0xcc6f5b45
  41a0d6:	inc    esi
  41a0d7:	or     ch,BYTE PTR ds:0x42b9b4e7
  41a0dd:	(bad)  
  41a0de:	(bad)  
  41a0df:	call   0xbe64744e
  41a0e4:	jno    0x41a118
  41a0e6:	ins    DWORD PTR es:[edi],dx
  41a0e7:	cmp    dh,BYTE PTR [edi]
  41a0e9:	int3   
  41a0ea:	add    eax,DWORD PTR [edx+ecx*2]
  41a0ed:	pop    edi
  41a0ee:	push   esp
  41a0ef:	(bad)  
  41a0f1:	lods   eax,DWORD PTR ds:[esi]
  41a0f2:	rol    ah,1
  41a0f4:	cli    
  41a0f5:	call   edi
  41a0f7:	test   BYTE PTR ds:0x849e5277,dh
  41a0fd:	mov    ebx,0x651e2661
  41a102:	and    al,0xbc
  41a104:	lods   al,BYTE PTR ds:[esi]
  41a105:	mov    esp,0x85bd7805
  41a10a:	sub    bl,BYTE PTR [esi-0x76333757]
  41a110:	lock fild QWORD PTR [edx]
  41a113:	inc    eax
  41a114:	inc    esi
  41a115:	sbb    eax,0xb55d9b6d
  41a11a:	hlt    
  41a11b:	sub    BYTE PTR [edi+edi*8],dh
  41a11e:	int3   
  41a11f:	mov    esi,0x7cb57647
  41a124:	(bad)  
  41a126:	mov    ch,0x62
  41a128:	data16 jle 0x41a140
  41a12b:	xchg   esi,eax
  41a12c:	xlat   BYTE PTR ds:[ebx]
  41a12d:	mov    dh,0x51
  41a12f:	aam    0x87
  41a131:	mov    edx,0xafbc73ca
  41a136:	sub    al,0xc3
  41a138:	arpl   si,si
  41a13a:	push   ds
  41a13b:	pusha  
  41a13c:	out    0xc6,eax
  41a13e:	inc    bl
  41a140:	inc    eax
  41a141:	pop    ss
  41a142:	or     DWORD PTR [ebx+0xbd8d17b],0xec9152dd
  41a14c:	(bad)  
  41a14e:	mov    ebp,0x17a9ed12
  41a153:	mov    al,ds:0x14ae9253
  41a158:	xor    BYTE PTR [esi],dh
  41a15a:	mov    ch,0xdc
  41a15c:	jle    0x41a103
  41a15e:	xor    DWORD PTR [ebx+0x6e],edx
  41a161:	out    dx,al
  41a162:	jmp    0xc44ce744
  41a167:	push   eax
  41a168:	prefetch BYTE PTR [esi-0x7d333c6a]
  41a16f:	dec    dh
  41a171:	mov    eax,0xc3d41f80
  41a176:	ror    esi,0xd6
  41a179:	and    ebx,DWORD PTR [ecx+0x23]
  41a17c:	jbe    0x41a13c
  41a17e:	in     al,0xbd
  41a180:	pop    ds
  41a181:	(bad)  
  41a182:	ss sysexit 
  41a185:	retf   0x9c39
  41a188:	sub    edi,ebx
  41a18a:	(bad)  
  41a18b:	stos   DWORD PTR es:[edi],eax
  41a18c:	sbb    BYTE PTR [ebx],al
  41a18e:	mov    bl,BYTE PTR [eax+0x706f220f]
  41a194:	mov    dl,0x7a
  41a196:	mov    ah,0x59
  41a198:	mov    bh,0x6f
  41a19a:	mov    eax,0xfd2bebf5
  41a19f:	dec    edx
  41a1a0:	mov    al,0x87
  41a1a2:	mov    esp,0xbda42df1
  41a1a7:	adc    DWORD PTR [ecx],esi
  41a1a9:	cmp    eax,0xae0a36d5
  41a1ae:	ror    dh,0xbd
  41a1b1:	rol    DWORD PTR [eax],1
  41a1b3:	cmp    esi,DWORD PTR [edi-0x76]
  41a1b6:	jo     0x41a1bd
  41a1b8:	sbb    eax,0xdd674b7c
  41a1bd:	leave  
  41a1be:	retf   
  41a1bf:	lock cli 
  41a1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c2:	add    BYTE PTR ds:0x8ab483ac,bh
  41a1c8:	cmp    DWORD PTR [ecx],ebx
  41a1ca:	es sbb al,0x55
  41a1cd:	push   ecx
  41a1ce:	addr16 pop edx
  41a1d0:	adc    ebp,DWORD PTR [edx-0x57b7c5f6]
  41a1d6:	inc    esi
  41a1d7:	or     eax,edi
  41a1d9:	(bad)
  41a1dc:	jmp    0xabee:0x2b666a35
  41a1e3:	(bad)  
  41a1e4:	mov    bl,0xb8
  41a1e6:	stos   DWORD PTR es:[edi],eax
  41a1e7:	imul   ecx,DWORD PTR [esi],0x19
  41a1ea:	sub    DWORD PTR [ebp-0x31070867],ecx
  41a1f0:	and    BYTE PTR [esi-0x60],bh
  41a1f3:	sbb    ebp,0xffffffae
  41a1f6:	scas   eax,DWORD PTR es:[edi]
  41a1f7:	in     al,0x18
  41a1f9:	retf   0x7268
  41a1fc:	aaa    
  41a1fd:	cmp    edi,DWORD PTR [ebx-0x21]
  41a200:	cmc    
  41a201:	cmc    
  41a202:	icebp  
  41a203:	arpl   WORD PTR [edi],bx
  41a205:	bound  edi,QWORD PTR [ebp+0x5d7cb4f]
  41a20b:	out    0x1f,al
  41a20d:	js     0x41a23a
  41a20f:	mov    cl,BYTE PTR [eax+edx*2]
  41a212:	mov    ecx,0x62a6b317
  41a217:	pop    ebp
  41a218:	in     al,0x65
  41a21a:	loope  0x41a25b
  41a21c:	push   ds
  41a21d:	sub    BYTE PTR [eax],dl
  41a21f:	mov    ds:0x82d02c1c,al
  41a224:	jg     0x41a254
  41a226:	or     al,BYTE PTR [eax]
  41a228:	repnz inc ebp
  41a22a:	popf   
  41a22b:	or     al,0xae
  41a22d:	nop
  41a22e:	push   edi
  41a22f:	pop    ebx
  41a230:	ret    
  41a231:	adc    esp,ebp
  41a233:	xchg   ebp,eax
  41a234:	jge    0x41a278
  41a236:	jae    0x41a268
  41a238:	int3   
  41a239:	xor    dl,BYTE PTR [ebx+0x4]
  41a23c:	jmp    0xb2263111
  41a241:	adc    al,0xb0
  41a244:	je     0x41a224
  41a246:	jae    0x41a284
  41a248:	popa   
  41a249:	cmp    ecx,DWORD PTR [ecx+0x715914d2]
  41a24f:	outs   dx,BYTE PTR ds:[esi]
  41a250:	shl    BYTE PTR [ecx+0x4519df8],0xa6
  41a257:	fisubr WORD PTR [esi+0x1baaae95]
  41a25d:	sbb    BYTE PTR [eax+0x102421b1],0xc
  41a264:	push   cs
  41a265:	cs push ss
  41a267:	adc    eax,0xbbaac084
  41a26c:	das    
  41a26d:	sub    dh,BYTE PTR [eax+0x6f]
  41a270:	cmp    al,0xa2
  41a272:	xor    DWORD PTR [ecx],ecx
  41a274:	add    eax,esp
  41a276:	cdq    
  41a277:	lock dec ebp
  41a279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a27a:	outs   dx,DWORD PTR ds:[esi]
  41a27b:	or     BYTE PTR [ebx-0x5a922eab],ah
  41a281:	sar    DWORD PTR [edi],1
  41a283:	shr    BYTE PTR [edi-0x62],cl
  41a286:	add    BYTE PTR [ecx+edx*2-0x42],dl
  41a28a:	fs jo  0x41a260
  41a28d:	mov    ss,WORD PTR [edx+esi*2-0x2e]
  41a291:	xlat   BYTE PTR ds:[ebx]
  41a292:	mov    al,0xfe
  41a294:	pop    ds
  41a295:	cs popf 
  41a297:	push   ebp
  41a298:	cmp    dl,cl
  41a29a:	dec    esi
  41a29b:	lea    ebp,[ebp+0x35]
  41a29e:	pop    ebx
  41a29f:	(bad)  
  41a2a0:	jecxz  0x41a285
  41a2a2:	repnz push ebp
  41a2a4:	push   ds
  41a2a5:	dec    edi
  41a2a6:	xor    al,0xb7
  41a2a8:	and    DWORD PTR [eax+0x15],0xffffffaa
  41a2ac:	jg     0x41a2c7
  41a2ae:	dec    ebp
  41a2af:	push   ecx
  41a2b0:	push   edx
  41a2b1:	xchg   ah,ah
  41a2b3:	shl    BYTE PTR [eax+0x2e],1
  41a2b6:	pop    edi
  41a2b7:	mov    bh,BYTE PTR [ecx]
  41a2b9:	dec    edx
  41a2ba:	dec    eax
  41a2bb:	ret    0x2a49
  41a2be:	xlat   BYTE PTR ds:[ebx]
  41a2bf:	fwait
  41a2c0:	xchg   edi,eax
  41a2c1:	int    0x51
  41a2c3:	push   0x76
  41a2c5:	push   esi
  41a2c6:	mov    dl,0x57
  41a2c8:	cli    
  41a2c9:	das    
  41a2ca:	add    BYTE PTR [ecx-0x36],0xf9
  41a2ce:	aaa    
  41a2cf:	dec    esp
  41a2d0:	sub    bl,dl
  41a2d2:	loope  0x41a316
  41a2d4:	arpl   ax,si
  41a2d6:	iret   
  41a2d7:	push   ebp
  41a2d8:	aad    0x6c
  41a2da:	sbb    DWORD PTR [eax],ecx
  41a2dc:	stc    
  41a2dd:	add    DWORD PTR [eax+0x27d4a9bb],ebx
  41a2e3:	mov    dl,0xaa
  41a2e5:	shl    ah,1
  41a2e7:	push   edi
  41a2e8:	jge    0x41a347
  41a2ea:	fsub   QWORD PTR [esi+ebx*1-0x559c05c3]
  41a2f1:	mov    bl,0xfd
  41a2f3:	jns    0x41a2b8
  41a2f5:	xor    DWORD PTR [edi+ecx*4-0x69],ebx
  41a2f9:	adc    BYTE PTR [edi],cl
  41a2fb:	fwait
  41a2fc:	adc    ecx,ebp
  41a2fe:	lock aaa 
  41a300:	jl     0x41a295
  41a302:	jns    0x41a304
  41a304:	(bad)  
  41a305:	into   
  41a306:	inc    esi
  41a307:	clc    
  41a308:	(bad)  
  41a309:	loope  0x41a375
  41a30b:	bound  edi,QWORD PTR [edx-0x1a]
  41a30e:	inc    edi
  41a30f:	loopne 0x41a38e
  41a311:	mov    ds:0x29b898f1,al
  41a316:	loopne 0x41a36b
  41a318:	push   esp
  41a319:	retf   0xf52a
  41a31c:	mov    cl,0xbc
  41a31e:	and    DWORD PTR [esi-0x26],esi
  41a321:	aam    0xad
  41a323:	(bad)  
  41a324:	in     al,0xdd
  41a326:	retf   
  41a327:	pushf  
  41a328:	mov    edi,0x62e4b7af
  41a32d:	dec    ecx
  41a32e:	jns    0x41a2db
  41a330:	mov    ebx,0x3b19d239
  41a335:	adc    cl,BYTE PTR [ebx+0x1745d9e0]
  41a33b:	inc    esp
  41a33c:	mov    ch,0xe7
  41a33e:	sbb    al,0xe8
  41a340:	popa   
  41a341:	add    eax,DWORD PTR [edi]
  41a343:	lea    ecx,[ebx]
  41a345:	fwait
  41a346:	pop    esp
  41a347:	mov    ebx,0x2c8f2ad4
  41a34c:	pushf  
  41a34d:	sar    BYTE PTR [edi-0x1d],0xf3
  41a351:	sbb    al,0x46
  41a353:	xlat   BYTE PTR ds:[ebx]
  41a354:	aaa    
  41a355:	mov    dh,0x8e
  41a357:	cmp    al,0xf4
  41a359:	jg     0x41a380
  41a35b:	jmp    0x84e25a51
  41a360:	push   ecx
  41a361:	(bad)  
  41a363:	(bad)  
  41a366:	add    cl,ch
  41a368:	sbb    ebp,ecx
  41a36a:	sub    DWORD PTR [ebx],0xffffffb4
  41a36d:	sbb    eax,0x49c31e5a
  41a372:	push   0xffffffe2
  41a374:	fldenv [ecx+0x649de4ba]
  41a37a:	rcr    DWORD PTR [ebx-0x79],1
  41a37d:	adc    al,0x8d
  41a37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a380:	outs   dx,DWORD PTR ds:[esi]
  41a381:	jmp    FWORD PTR [ecx-0x41a90b17]
  41a387:	arpl   WORD PTR [edx+0x1db59358],ax
  41a38d:	lods   al,BYTE PTR ds:[esi]
  41a38e:	xchg   edi,eax
  41a38f:	inc    esi
  41a390:	les    eax,FWORD PTR [esi-0x1b2b658d]
  41a396:	dec    edx
  41a397:	add    BYTE PTR [esi-0x50],cl
  41a39a:	neg    edx
  41a39c:	mov    eax,0xd088d53c
  41a3a1:	pop    esp
  41a3a2:	jle    0x41a340
  41a3a4:	pop    edi
  41a3a5:	in     eax,0xdd
  41a3a7:	rol    DWORD PTR [eax],0xb0
  41a3aa:	sub    BYTE PTR [edi],bl
  41a3ac:	dec    esi
  41a3ad:	adc    eax,0xd8fd01a6
  41a3b2:	or     esp,0x4f
  41a3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3b6:	jmp    0x41a405
  41a3b8:	sub    esi,DWORD PTR [edx]
  41a3ba:	add    eax,0xa2c5b61d
  41a3bf:	loop   0x41a389
  41a3c1:	out    0xf9,eax
  41a3c3:	pop    edx
  41a3c4:	loope  0x41a412
  41a3c6:	iret   
  41a3c7:	sbb    esp,ebp
  41a3c9:	fs adc dh,al
  41a3cc:	retf   0x1ce9
  41a3cf:	sub    al,0xc0
  41a3d1:	mov    dh,0xcf
  41a3d3:	mov    ecx,0xf3a9a44d
  41a3d8:	cmp    esp,DWORD PTR [esp+ecx*8-0x66]
  41a3dc:	stos   BYTE PTR es:[edi],al
  41a3dd:	bnd jb 0x41a363
  41a3e0:	iret   
  41a3e1:	repnz mov dh,0x65
  41a3e4:	push   0xcd75d835
  41a3e9:	(bad)  
  41a3ea:	pop    ss
  41a3eb:	ret    
  41a3ec:	sbb    al,0x39
  41a3ee:	push   ebp
  41a3ef:	dec    esp
  41a3f0:	(bad)  
  41a3f1:	pop    esp
  41a3f2:	mov    bh,0x89
  41a3f4:	jbe    0x41a3a5
  41a3f6:	repz cmc 
  41a3f8:	xchg   ebp,eax
  41a3f9:	cmp    al,0x4b
  41a3fb:	data16 sti 
  41a3fd:	pop    es
  41a3fe:	push   ss
  41a3ff:	adc    eax,0x93ed510b
  41a404:	into   
  41a405:	arpl   WORD PTR [ebp+0x60],bx
  41a408:	inc    esi
  41a409:	xchg   esi,eax
  41a40a:	mov    dh,0x82
  41a40c:	std    
  41a40d:	sbb    bh,BYTE PTR [edx]
  41a40f:	mov    cl,0x71
  41a411:	jnp    0x41a3d0
  41a413:	dec    ebp
  41a414:	in     al,dx
  41a415:	xchg   edx,eax
  41a416:	fs ins DWORD PTR es:[edi],dx
  41a418:	fist   DWORD PTR [esi+eiz*8+0x59197425]
  41a41f:	outs   dx,BYTE PTR ds:[esi]
  41a420:	xor    cl,BYTE PTR [ebx+0x4f]
  41a423:	sub    DWORD PTR [edx],edx
  41a425:	cmp    al,0x34
  41a427:	scas   al,BYTE PTR es:[edi]
  41a428:	cli    
  41a429:	xchg   ecx,eax
  41a42a:	ja     0x41a430
  41a42c:	popa   
  41a42d:	fdivr  st(6),st
  41a42f:	jge    0x41a420
  41a431:	add    edi,DWORD PTR [esi]
  41a433:	inc    ebp
  41a434:	mov    eax,ds:0x3e19b46d
  41a439:	mov    dl,0x74
  41a43b:	dec    edi
  41a43c:	pop    ebp
  41a43d:	mov    ebp,0xa3596b5d
  41a442:	dec    ebx
  41a443:	xchg   esi,eax
  41a444:	mov    esp,0xb5ba89f7
  41a449:	test   ecx,esi
  41a44b:	and    BYTE PTR [ecx+0x2c],cl
  41a44e:	out    dx,al
  41a44f:	pop    es
  41a450:	test   eax,0x32cecd3f
  41a455:	call   0x818d54b6
  41a45a:	dec    ebp
  41a45b:	ffree  st(0)
  41a45d:	arpl   WORD PTR [ebp-0x20],ax
  41a460:	jns    0x41a422
  41a462:	sbb    DWORD PTR [edi-0x67e682aa],esp
  41a468:	repnz div DWORD PTR [ebx+0x613c01ce]
  41a46f:	xor    DWORD PTR [esi+edi*1-0x1b],edx
  41a473:	test   dh,bl
  41a475:	mov    esi,0xa758a2da
  41a47a:	stos   DWORD PTR es:[edi],eax
  41a47b:	adc    eax,0x34532b05
  41a480:	stos   DWORD PTR es:[edi],eax
  41a481:	ss pushf 
  41a483:	jmp    0x41a41a
  41a485:	fisttp WORD PTR ds:0x2065744f
  41a48b:	mov    bl,0xd5
  41a48d:	gs jmp 0xde0f:0x91c0b862
  41a495:	push   0xffffffe6
  41a497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a498:	les    eax,FWORD PTR [edi]
  41a49a:	hlt    
  41a49b:	cmp    edi,DWORD PTR [edi]
  41a49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49e:	lods   eax,DWORD PTR ds:[esi]
  41a49f:	das    
  41a4a0:	test   al,0xd2
  41a4a2:	add    bl,dh
  41a4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4a5:	mov    WORD PTR [edi],ss
  41a4a7:	add    eax,0xb8ff36f0
  41a4ac:	cmp    eax,0xe4f20321
  41a4b1:	mov    ebp,0xb9ac3a90
  41a4b6:	out    0x31,eax
  41a4b8:	ret    
  41a4b9:	scas   eax,DWORD PTR es:[edi]
  41a4ba:	jp     0x41a44e
  41a4bc:	sbb    BYTE PTR [ecx],0x15
  41a4bf:	adc    DWORD PTR [esi+0x5b67aba5],0xcf9d184f
  41a4c9:	test   BYTE PTR [ebx+0xba853f5],al
  41a4cf:	jo     0x41a490
  41a4d1:	push   esp
  41a4d2:	ror    DWORD PTR [ebx+0x10],0x21
  41a4d6:	jae    0x41a4d0
  41a4d8:	and    eax,0xac9d9cb0
  41a4dd:	call   0xa042f1a3
  41a4e2:	push   es
  41a4e3:	jp     0x41a4b1
  41a4e5:	add    al,0x37
  41a4e7:	push   ebp
  41a4e8:	jno    0x41a4c4
  41a4ea:	call   0x4c4d:0x92ef9390
  41a4f1:	cmp    DWORD PTR ds:0x7573fdfe,edx
  41a4f7:	jnp    0x41a4ab
  41a4f9:	add    BYTE PTR [edi-0x19],ch
  41a4fc:	mov    ah,0xab
  41a4fe:	shl    al,0x88
  41a501:	xor    BYTE PTR [ebx-0x3a],dh
  41a504:	and    ch,BYTE PTR [ecx-0x52]
  41a507:	cmp    edi,DWORD PTR [ecx]
  41a509:	and    eax,0xf7bbbae3
  41a50e:	jne    0x41a4d6
  41a510:	push   es
  41a511:	imul   edi,DWORD PTR [edx+eax*2],0xffffffba
  41a515:	adc    bl,ah
  41a517:	mov    WORD PTR [eax-0x5f],fs
  41a51a:	lahf   
  41a51b:	cwde   
  41a51c:	lock add DWORD PTR [ecx],esp
  41a51f:	shr    bl,0x97
  41a522:	jl     0x41a520
  41a524:	cdq    
  41a525:	(bad)  
  41a526:	ins    BYTE PTR es:[edi],dx
  41a527:	sbb    eax,0xda6021ff
  41a52c:	and    DWORD PTR [edi],eax
  41a52e:	icebp  
  41a52f:	les    ecx,FWORD PTR [ecx-0x41]
  41a532:	(bad)  
  41a534:	sub    ah,cl
  41a536:	sbb    ebx,0xffffffe0
  41a539:	outs   dx,DWORD PTR ds:[esi]
  41a53a:	call   0xbfe0:0x97befe04
  41a541:	shl    BYTE PTR [esi-0x22],0x5e
  41a545:	pop    ecx
  41a546:	dec    edx
  41a547:	cmp    DWORD PTR [esi-0x1],0xe2924cef
  41a54e:	mov    dl,0x62
  41a550:	pop    esp
  41a551:	jecxz  0x41a5c6
  41a553:	pop    es
  41a554:	inc    esp
  41a555:	adc    dl,BYTE PTR [esi+ecx*8+0x79b4dbab]
  41a55c:	ja     0x41a505
  41a55e:	sbb    eax,0x4d01a06b
  41a563:	fidivr DWORD PTR [ebp+0x57a8edc9]
  41a569:	out    0x78,al
  41a56b:	repz cli 
  41a56d:	dec    esp
  41a56e:	inc    ebx
  41a56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a570:	imul   ebp,DWORD PTR [ebp+eax*2-0x4c],0xc925bd38
  41a578:	aas    
  41a579:	mov    edi,0x577912cd
  41a57e:	in     eax,dx
  41a57f:	and    DWORD PTR [esi],ebx
  41a581:	sbb    BYTE PTR [ecx-0x660c431c],dh
  41a587:	inc    edi
  41a588:	jp     0x41a5c9
  41a58a:	addr16 ret 0x8a97
  41a58e:	repnz cmp al,0xa2
  41a591:	dec    edx
  41a592:	pop    edi
  41a593:	pop    es
  41a594:	nop
  41a595:	or     BYTE PTR [ebx],0x9c
  41a598:	mov    bl,0x69
  41a59a:	dec    ecx
  41a59b:	jne    0x41a530
  41a59d:	in     eax,dx
  41a59e:	pop    esp
  41a59f:	mov    ch,0x22
  41a5a1:	arpl   WORD PTR [ebx+0x67b01f87],si
  41a5a7:	mov    ss,ecx
  41a5a9:	(bad)  [ecx+esi*8-0x263ac2cf]
  41a5b0:	retf   
  41a5b1:	cmp    DWORD PTR [eax+0xdd4a081],0x7a8ae7bd
  41a5bb:	nop
  41a5bc:	xor    ecx,DWORD PTR [eax-0x30]
  41a5bf:	fst    DWORD PTR [eax+0x71]
  41a5c2:	push   edi
  41a5c3:	mov    ?,WORD PTR [ecx-0x2]
  41a5c6:	add    eax,0xbaf73520
  41a5cb:	pop    ss
  41a5cc:	add    edi,DWORD PTR [eax-0x39]
  41a5cf:	jbe    0x41a589
  41a5d1:	fisttp WORD PTR [eax+0x69]
  41a5d4:	in     al,0x3c
  41a5d6:	cmp    al,0x66
  41a5d8:	clc    
  41a5d9:	dec    esi
  41a5da:	xchg   DWORD PTR [edi-0x257daba],esi
  41a5e0:	mov    al,ds:0xf4e53453
  41a5e5:	shr    DWORD PTR [ecx+0x3d716e3d],cl
  41a5eb:	sbb    ebx,edx
  41a5ed:	or     eax,DWORD PTR [edi]
  41a5ef:	into   
  41a5f0:	or     ah,BYTE PTR ds:0x3b668aed
  41a5f6:	jg     0x41a61f
  41a5f8:	adc    edi,DWORD PTR [ecx-0x4e]
  41a5fb:	jmp    FWORD PTR [edi]
  41a5fd:	and    eax,DWORD PTR [esi+esi*4]
  41a600:	and    DWORD PTR [edx+0x72],ebx
  41a603:	sahf   
  41a604:	jne    0x41a649
  41a606:	xchg   ecx,eax
  41a607:	add    esp,DWORD PTR [ebp+0x2f0d066a]
  41a60d:	inc    eax
  41a60e:	rcr    BYTE PTR [ebp+0x7e2ef210],cl
  41a614:	push   ds
  41a615:	fldcw  WORD PTR [edi+eiz*8+0x5d]
  41a619:	clc    
  41a61a:	inc    ebp
  41a61b:	sbb    eax,0x4aa1aef1
  41a620:	push   esp
  41a621:	cmp    edx,ecx
  41a623:	rcr    DWORD PTR [ebp-0x1b],1
  41a626:	(bad)  
  41a627:	mov    cl,0xa5
  41a629:	push   esp
  41a62a:	test   BYTE PTR [ecx],ch
  41a62c:	mov    eax,ds:0x9f6a58ca
  41a631:	popa   
  41a632:	inc    edi
  41a633:	fiadd  WORD PTR [ecx+0xf]
  41a636:	push   0x6b
  41a638:	jle    0x41a5f1
  41a63a:	mov    bl,0xc2
  41a63c:	and    edx,DWORD PTR [ecx+ecx*8+0x34]
  41a640:	add    DWORD PTR [edx],0xfffffff0
  41a643:	pop    edx
  41a644:	leave  
  41a645:	push   es
  41a646:	ja     0x41a6b3
  41a648:	push   esp
  41a649:	(bad)  
  41a64a:	xlat   BYTE PTR ds:[ebx]
  41a64b:	add    DWORD PTR ds:0x9aeb6f98,edx
  41a651:	sahf   
  41a652:	jp     0x41a6ad
  41a654:	icebp  
  41a655:	mov    ch,0xeb
  41a657:	fisubr DWORD PTR [edi-0x68]
  41a65a:	das    
  41a65b:	or     edi,DWORD PTR [esi+0x2d5c6ce3]
  41a661:	and    eax,DWORD PTR [edi]
  41a663:	imul   ebp,DWORD PTR [ebp+ebx*8+0x14],0x251f4508
  41a66b:	sub    ah,BYTE PTR [ebx+0x56]
  41a66e:	stos   DWORD PTR es:[edi],eax
  41a66f:	add    DWORD PTR [edx],ebx
  41a671:	mov    ebx,0x9481e4ee
  41a676:	clc    
  41a677:	loop   0x41a6bd
  41a679:	xchg   esi,eax
  41a67a:	push   ecx
  41a67b:	mov    ds:0x2f2ca1d4,eax
  41a680:	pushf  
  41a681:	sbb    ebx,DWORD PTR [edi+0x51]
  41a684:	fcom   st(7)
  41a686:	push   edx
  41a687:	mov    ebp,0x5e033049
  41a68c:	pop    es
  41a68d:	jns    0x41a6f3
  41a68f:	adc    DWORD PTR [eax-0x6a7abc59],edi
  41a695:	cwde   
  41a696:	rcl    DWORD PTR [ebx],1
  41a698:	test   al,0x79
  41a69a:	dec    edx
  41a69b:	and    al,0xdd
  41a69d:	rcl    BYTE PTR [edi],0x6f
  41a6a0:	jp     0x41a6c4
  41a6a2:	rcl    DWORD PTR [esi+0x2956f54c],0x1c
  41a6a9:	div    BYTE PTR [ebx+0x5]
  41a6ac:	pop    ss
  41a6ad:	pop    ecx
  41a6ae:	inc    ebp
  41a6af:	ret    
  41a6b0:	or     al,0xd7
  41a6b2:	int3   
  41a6b3:	outs   dx,BYTE PTR ds:[esi]
  41a6b4:	push   es
  41a6b5:	scas   al,BYTE PTR es:[edi]
  41a6b6:	sysenter 
  41a6b8:	lss    ecx,FWORD PTR [edx]
  41a6bb:	cmp    ebx,DWORD PTR [ebx]
  41a6bd:	punpcklwd mm4,DWORD PTR [edx-0x7c4ccf9a]
  41a6c4:	or     al,0x2
  41a6c6:	das    
  41a6c7:	jae    0x41a6bf
  41a6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ca:	ins    BYTE PTR es:[edi],dx
  41a6cb:	js     0x41a6bc
  41a6cd:	push   esi
  41a6ce:	bound  eax,QWORD PTR [edi-0x30c8344a]
  41a6d4:	mov    bh,0xa3
  41a6d6:	bswap  eax
  41a6d8:	out    dx,eax
  41a6d9:	mov    edi,0xc35c4ffc
  41a6de:	add    al,0x5f
  41a6e0:	das    
  41a6e1:	imul   DWORD PTR [ebx+0xf410d77]
  41a6e7:	je     0x41a6a2
  41a6e9:	cwde   
  41a6ea:	xchg   esi,eax
  41a6eb:	sub    BYTE PTR [ebx-0x92e91e8],0xe6
  41a6f2:	adc    al,BYTE PTR [eax-0x10]
  41a6f5:	or     BYTE PTR [edi-0x58219991],bl
  41a6fb:	inc    eax
  41a6fc:	(bad)  
  41a6fd:	ins    BYTE PTR es:[edi],dx
  41a6fe:	call   0x726e:0x14f215ab
  41a705:	shl    bl,1
  41a707:	and    eax,edi
  41a709:	dec    eax
  41a70a:	sbb    al,0x4c
  41a70c:	gs adc cl,al
  41a70f:	stos   DWORD PTR es:[edi],eax
  41a710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a711:	dec    ebp
  41a712:	int3   
  41a713:	scas   eax,DWORD PTR es:[edi]
  41a714:	add    eax,0x24123204
  41a719:	and    eax,DWORD PTR [ebp+0x1c]
  41a71c:	push   0x91449201
  41a721:	jb     0x41a74b
  41a723:	loop   0x41a6e2
  41a725:	push   ss
  41a726:	scas   eax,DWORD PTR es:[edi]
  41a727:	mov    DWORD PTR [ecx-0x3db252e5],esi
  41a72d:	jmp    0xa6f03c70
  41a732:	inc    ebp
  41a733:	mov    BYTE PTR [eax+0x2e8c36b],al
  41a739:	lea    ebx,[edi+ebp*1]
  41a73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a73d:	and    DWORD PTR [esi+0x1440698c],0xffffffb2
  41a744:	mov    esp,0x247f965a
  41a749:	cmp    bl,BYTE PTR [edx]
  41a74b:	gs mov cs,ebp
  41a74e:	inc    ecx
  41a74f:	add    cl,BYTE PTR ds:0x4f774304
  41a755:	pop    ebp
  41a756:	es nop
  41a758:	push   ds
  41a759:	or     al,0x39
  41a75b:	dec    edx
  41a75c:	xor    BYTE PTR [ecx+ecx*1+0x7cee3b5e],dl
  41a763:	sbb    ch,BYTE PTR [ebx]
  41a765:	mov    BYTE PTR [eax],dl
  41a767:	or     al,0x48
  41a769:	stos   DWORD PTR es:[edi],eax
  41a76a:	fld    QWORD PTR [ecx+0x163d62b8]
  41a770:	inc    ebx
  41a771:	xchg   edx,eax
  41a772:	pop    fs
  41a774:	jle    0x41a702
  41a776:	pop    DWORD PTR [eax+0x23]
  41a779:	inc    edx
  41a77a:	mov    edx,0xfa2ab995
  41a77f:	std    
  41a780:	icebp  
  41a781:	cmp    esp,DWORD PTR [eax]
  41a783:	push   edx
  41a784:	inc    edx
  41a785:	add    al,0x15
  41a787:	call   0x18729578
  41a78c:	popa   
  41a78d:	cmp    al,0xd5
  41a78f:	and    BYTE PTR [edx+0x1c218c56],0x1d
  41a796:	cli    
  41a797:	dec    ebx
  41a798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a799:	xchg   DWORD PTR [edi-0xd0d4808],edi
  41a79f:	fdiv   QWORD PTR [ecx-0xd64f11b]
  41a7a5:	(bad)  
  41a7a6:	js     0x41a74c
  41a7a8:	aaa    
  41a7a9:	inc    edi
  41a7aa:	sub    DWORD PTR [ebx],esp
  41a7ac:	mov    ecx,0x44af3f22
  41a7b1:	push   ss
  41a7b2:	ss pop es
  41a7b4:	js     0x41a793
  41a7b6:	outs   dx,DWORD PTR ds:[esi]
  41a7b7:	sbb    al,0xbc
  41a7b9:	and    DWORD PTR [eax+0x4280c1db],edi
  41a7bf:	mov    edi,0xf440573f
  41a7c4:	js     0x41a840
  41a7c6:	mov    ecx,0x1621f5d4
  41a7cb:	add    BYTE PTR [ecx],ah
  41a7cd:	inc    eax
  41a7ce:	stos   BYTE PTR es:[edi],al
  41a7cf:	push   ebx
  41a7d0:	push   edx
  41a7d1:	gs cwde 
  41a7d3:	jno    0x41a7a6
  41a7d5:	mov    esp,0x911c9a0f
  41a7da:	ds dec edx
  41a7dc:	push   esi
  41a7dd:	scas   eax,DWORD PTR es:[edi]
  41a7de:	sub    al,0xc5
  41a7e0:	push   esp
  41a7e1:	sub    al,0x2f
  41a7e3:	out    0x53,eax
  41a7e5:	inc    ebx
  41a7e6:	dec    esp
  41a7e7:	mov    ecx,0xae6e64b4
  41a7ec:	icebp  
  41a7ed:	ffreep st(7)
  41a7ef:	pop    es
  41a7f0:	sub    dl,BYTE PTR [eax]
  41a7f2:	sub    edi,DWORD PTR [ebx+eiz*4+0x68]
  41a7f6:	stos   BYTE PTR es:[edi],al
  41a7f7:	pusha  
  41a7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7f9:	out    0x48,eax
  41a7fb:	jmp    0x86e6:0xe5116b03
  41a802:	cld    
  41a803:	cwde   
  41a804:	enter  0xa965,0xa0
  41a808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a809:	addr16 and cl,dl
  41a80c:	enter  0xbe04,0xb5
  41a810:	in     eax,0xc
  41a812:	out    0x3b,eax
  41a814:	sbb    al,0x82
  41a816:	mov    edi,0xe4d9ceff
  41a81b:	mov    edi,0x1ff04fa1
  41a820:	cld    
  41a821:	sub    ch,BYTE PTR ds:0x3ede6f6f
  41a827:	(bad)  
  41a828:	imul   ebx,DWORD PTR [edi+0x79],0x1b
  41a82c:	imul   ebx,DWORD PTR [eax+0x2a],0x7ca1203d
  41a833:	or     bl,BYTE PTR [edx]
  41a835:	in     eax,0x75
  41a837:	adc    ecx,esp
  41a839:	lahf   
  41a83a:	jb     0x41a7d8
  41a83c:	and    BYTE PTR [edx],0x98
  41a83f:	jg     0x41a836
  41a841:	ret    
  41a842:	cmp    BYTE PTR [eax+0x7ff9d8d2],bl
  41a848:	fcomp  QWORD PTR [eax+ecx*1+0x3c]
  41a84c:	adc    BYTE PTR [esi],bl
  41a84e:	fdiv   DWORD PTR [ebx]
  41a850:	or     eax,0xf6893354
  41a855:	fdiv   DWORD PTR [edx+eiz*8+0x676e7c4]
  41a85c:	enterw 0x74d8,0xc2
  41a861:	sbb    al,0x2b
  41a863:	dec    eax
  41a864:	xor    DWORD PTR ds:0xbbf6dcbf,edx
  41a86a:	jae    0x41a830
  41a86c:	loope  0x41a856
  41a86e:	jmp    0xc8d67b7e
  41a873:	aam    0xa3
  41a875:	or     edx,DWORD PTR [edi+0x64519b4f]
  41a87b:	push   ds
  41a87c:	or     al,0x7d
  41a87e:	stc    
  41a87f:	pop    ecx
  41a880:	or     eax,0xc92bce72
  41a885:	outs   dx,DWORD PTR ds:[esi]
  41a886:	int    0xea
  41a888:	dec    esp
  41a889:	test   DWORD PTR [edi-0x7ce03388],esi
  41a88f:	sahf   
  41a890:	add    DWORD PTR [esi+0x5f],ecx
  41a893:	leave  
  41a894:	je     0x41a8ee
  41a896:	mov    eax,ds:0xdd75aec0
  41a89b:	pop    ss
  41a89c:	test   DWORD PTR [ebp+0x7c143d3a],eax
  41a8a2:	cmp    al,0xd1
  41a8a4:	xor    ecx,DWORD PTR [edi]
  41a8a6:	test   esi,0x966c4407
  41a8ac:	pop    edx
  41a8ad:	adc    esi,edi
  41a8af:	inc    ebx
  41a8b0:	lods   al,BYTE PTR ds:[esi]
  41a8b1:	cmc    
  41a8b2:	(bad)  
  41a8b3:	ror    ebp,cl
  41a8b5:	add    BYTE PTR ds:[ebp-0x31],ah
  41a8b9:	sbb    ecx,ecx
  41a8bb:	inc    esp
  41a8bc:	outs   dx,BYTE PTR ds:[esi]
  41a8bd:	ret    
  41a8be:	mov    eax,0x6263a107
  41a8c3:	adc    ebp,DWORD PTR [edi]
  41a8c5:	sbb    dh,BYTE PTR [edx]
  41a8c7:	sbb    al,0xeb
  41a8c9:	dec    esi
  41a8ca:	fscale 
  41a8cc:	ds das 
  41a8ce:	and    eax,0xfebdcae9
  41a8d3:	dec    ebp
  41a8d4:	shl    BYTE PTR [esi],cl
  41a8d6:	arpl   WORD PTR [esi+ecx*8+0xadb97f2],ax
  41a8dd:	jmp    0xed7c:0x3dbd793b
  41a8e4:	cmp    DWORD PTR [edi+0x55],ecx
  41a8e7:	jmp    0x58a3e08a
  41a8ec:	pop    ebx
  41a8ed:	xrelease mov BYTE PTR [esp+eax*4-0x6],0x24
  41a8f3:	ins    DWORD PTR es:[edi],dx
  41a8f4:	mov    cs,esp
  41a8f6:	(bad)  
  41a8f7:	lahf   
  41a8f8:	sti    
  41a8f9:	push   esp
  41a8fa:	ja     0x41a880
  41a8fc:	jo     0x41a94a
  41a8fe:	sub    ebx,eax
  41a900:	(bad)  
  41a902:	jecxz  0x41a93b
  41a904:	sbb    esp,eax
  41a906:	shr    BYTE PTR [edx-0x76504037],cl
  41a90c:	inc    esi
  41a90d:	xchg   ebx,eax
  41a90e:	add    BYTE PTR fs:[esi+0x7f],ch
  41a912:	jmp    DWORD PTR [edi]
  41a914:	imul   ebp,DWORD PTR ds:0x7df9027,0x45
  41a91b:	inc    eax
  41a91c:	lea    ebp,[esi+0x5de0e7df]
  41a922:	fcom   QWORD PTR [ebx]
  41a924:	mov    eax,0x743a001a
  41a929:	leave  
  41a92a:	and    eax,0xefaca215
  41a92f:	jne    0x41a9ad
  41a931:	sub    al,0x1e
  41a933:	xchg   ebp,eax
  41a934:	int3   
  41a935:	push   edi
  41a936:	push   0xffffff97
  41a938:	adc    al,0xef
  41a93a:	pop    edi
  41a93b:	out    0x42,al
  41a93d:	imul   DWORD PTR [ecx+0x63]
  41a940:	fld    QWORD PTR [esi]
  41a942:	fimul  WORD PTR [ebp+0x2]
  41a945:	mov    dl,BYTE PTR [edx+0x3ccd352f]
  41a94b:	cmp    eax,0x6fb80fa
  41a950:	test   DWORD PTR ds:0xde459db,0xa88b86d1
  41a95a:	push   ecx
  41a95b:	inc    eax
  41a95c:	dec    ebx
  41a95d:	mov    dh,0x33
  41a95f:	xchg   ch,ah
  41a961:	aam    0x9b
  41a963:	sti    
  41a964:	jmp    0x29db496c
  41a969:	and    BYTE PTR [ebx],cl
  41a96b:	dec    ebx
  41a96c:	(bad)  
  41a96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a96f:	xchg   ebx,eax
  41a970:	cmp    BYTE PTR [edi+0x53],dl
  41a973:	aaa    
  41a974:	inc    ebx
  41a975:	cmp    eax,0xb9a58574
  41a97a:	inc    ecx
  41a97b:	je     0x41a9cb
  41a97d:	dec    ebp
  41a97e:	imul   esp,DWORD PTR [ecx+eax*1],0xd17b080e
  41a985:	sub    esp,edi
  41a987:	jp     0x41a9e0
  41a989:	shl    BYTE PTR [edx+eiz*1-0x30],0x4d
  41a98e:	add    eax,0x7244d9e6
  41a993:	test   al,al
  41a995:	add    DWORD PTR [edx+0x30d8e1d0],edi
  41a99b:	cmp    eax,0x2ba7b1ab
  41a9a0:	inc    eax
  41a9a1:	jecxz  0x41a9d8
  41a9a3:	je     0x41a98c
  41a9a5:	add    ecx,DWORD PTR ds:0x1e106373
  41a9ab:	adc    DWORD PTR [ebx],0x94fd03aa
  41a9b1:	dec    al
  41a9b3:	fst    QWORD PTR [edi]
  41a9b5:	out    0xb6,al
  41a9b7:	add    DWORD PTR [esi-0x12d13111],edx
  41a9bd:	xchg   esp,eax
  41a9be:	bound  eax,QWORD PTR ds:0x503874c3
  41a9c4:	push   es
  41a9c5:	inc    eax
  41a9c6:	fcmovnbe st,st(4)
  41a9c8:	pop    ds
  41a9c9:	es out dx,al
  41a9cb:	jb     0x41a9d3
  41a9cd:	push   ss
  41a9ce:	inc    ebp
  41a9cf:	(bad)  
  41a9d0:	(bad)  
  41a9d1:	stc    
  41a9d2:	cmp    DWORD PTR [ecx-0x6bd2741a],0xffffffb4
  41a9d9:	xor    edi,DWORD PTR [esi]
  41a9db:	jmp    0x41aa22
  41a9dd:	sub    esp,DWORD PTR [ecx-0x1c6ac65b]
  41a9e3:	cli    
  41a9e4:	fld    QWORD PTR [eax+0x152897a5]
  41a9ea:	stc    
  41a9eb:	fistp  WORD PTR cs:[eax-0x23]
  41a9ef:	mov    cl,0x68
  41a9f1:	test   eax,0x116b9343
  41a9f6:	lahf   
  41a9f7:	sub    eax,0xb4931ce3
  41a9fc:	xchg   BYTE PTR [eax-0x30f0e23a],bh
  41aa02:	inc    ecx
  41aa03:	jne    0x41aa0a
  41aa05:	inc    esi
  41aa06:	aas    
  41aa07:	xchg   esi,eax
  41aa08:	inc    eax
  41aa09:	jb     0x41a9e7
  41aa0b:	sbb    al,0x25
  41aa0d:	push   edx
  41aa0e:	fldlg2 
  41aa10:	call   FWORD PTR ss:[ecx+0x7bfd2122]
  41aa17:	mov    bl,0x70
  41aa19:	(bad)  
  41aa1a:	pop    ds
  41aa1b:	xchg   esp,eax
  41aa1c:	stc    
  41aa1d:	mov    al,ds:0x9c946e55
  41aa22:	push   esi
  41aa23:	xor    eax,DWORD PTR gs:[edi+0x4691c6d6]
  41aa2a:	hlt    
  41aa2b:	pusha  
  41aa2c:	xor    ah,dh
  41aa2e:	repnz sbb eax,0x79137e44
  41aa34:	lods   al,BYTE PTR ds:[esi]
  41aa35:	jge    0x41aa6e
  41aa37:	mov    ds:0x89e11706,al
  41aa3c:	cmp    eax,0x64386274
  41aa41:	add    eax,0x9d2f7c7f
  41aa46:	mov    BYTE PTR [ecx],al
  41aa48:	and    DWORD PTR [ebp+0x2c5f2c45],ebp
  41aa4e:	icebp  
  41aa4f:	pop    ebp
  41aa50:	add    dh,BYTE PTR [eax-0x6a]
  41aa53:	sbb    eax,0x70898a6c
  41aa58:	pop    ss
  41aa59:	hlt    
  41aa5a:	push   ebp
  41aa5b:	dec    edi
  41aa5c:	lea    ecx,[ebp-0x44315d4b]
  41aa62:	out    dx,eax
  41aa63:	loopne 0x41aa83
  41aa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa66:	adc    esp,DWORD PTR [eax-0x40]
  41aa69:	and    al,BYTE PTR [eax-0x1d]
  41aa6c:	add    bl,bl
  41aa6e:	xor    al,0x82
  41aa70:	out    0x8d,eax
  41aa72:	cmp    ebp,DWORD PTR [edi]
  41aa74:	inc    eax
  41aa75:	ret    0xc4b8
  41aa78:	dec    ecx
  41aa79:	xchg   ebp,eax
  41aa7a:	iret   
  41aa7b:	test   DWORD PTR [ebp+0x40],eax
  41aa7e:	fimul  WORD PTR [eax]
  41aa80:	xor    esp,esi
  41aa82:	xchg   esi,eax
  41aa83:	pop    eax
  41aa84:	inc    esp
  41aa85:	rol    BYTE PTR [ecx],1
  41aa87:	jbe    0x41aa72
  41aa89:	mov    bh,0x74
  41aa8b:	ss int3 
  41aa8d:	loopne 0x41aa6c
  41aa8f:	in     eax,0x2d
  41aa91:	push   esi
  41aa92:	mov    esp,0x85795ae2
  41aa97:	scas   al,BYTE PTR es:[edi]
  41aa98:	les    ebx,FWORD PTR ds:0xe988a78d
  41aa9e:	xor    DWORD PTR [edi],ecx
  41aaa0:	mov    cl,0x2b
  41aaa2:	in     al,0x9e
  41aaa4:	(bad)  
  41aaa5:	(bad)  
  41aaa7:	mov    ah,0x2b
  41aaa9:	inc    esi
  41aaaa:	jbe    0x41aa96
  41aaac:	adc    BYTE PTR [edx],ah
  41aaae:	pushf  
  41aaaf:	shl    DWORD PTR fs:[edi+0x77],0x25
  41aab4:	push   ebp
  41aab5:	es xchg edx,eax
  41aab7:	and    eax,0xf33c2817
  41aabc:	and    bl,BYTE PTR [ecx]
  41aabe:	cld    
  41aabf:	xchg   ebp,eax
  41aac0:	scas   al,BYTE PTR es:[edi]
  41aac1:	xchg   ebx,eax
  41aac2:	loopne 0x41aaff
  41aac4:	mov    ebx,?
  41aac6:	add    bh,BYTE PTR es:[ecx+0x3d29777b]
  41aacd:	dec    ecx
  41aace:	sub    eax,0xd26f6e35
  41aad3:	into   
  41aad4:	cs or  ecx,0xead63572
  41aadb:	push   ebp
  41aadc:	out    0x1a,al
  41aade:	lahf   
  41aadf:	push   0xfffffffc
  41aae1:	mov    ebx,0x2d1a4ee
  41aae6:	popa   
  41aae7:	jmp    0x51233876
  41aaec:	or     al,0xdf
  41aaee:	sub    dh,al
  41aaf0:	(bad)  
  41aaf1:	neg    DWORD PTR [ebx-0x55]
  41aaf4:	jo     0x41aafb
  41aaf6:	mov    ch,al
  41aaf8:	dec    edi
  41aaf9:	inc    eax
  41aafa:	mov    esi,0x29c4fe0c
  41aaff:	and    eax,0x2c593b3b
  41ab04:	test   al,0x9b
  41ab06:	test   eax,0x4f41d7d6
  41ab0b:	push   0xa78767ba
  41ab10:	repz dec esp
  41ab12:	xchg   esi,eax
  41ab13:	dec    edx
  41ab14:	pushf  
  41ab15:	mov    eax,0xdf016b11
  41ab1a:	mov    eax,0x98b30bc5
  41ab1f:	mov    ecx,DWORD PTR [esi+0x3e6a5385]
  41ab25:	inc    ebx
  41ab26:	and    DWORD PTR [edx+0x4a],ebx
  41ab29:	stc    
  41ab2a:	xchg   esi,eax
  41ab2b:	scas   al,BYTE PTR es:[edi]
  41ab2c:	stos   BYTE PTR es:[edi],al
  41ab2d:	(bad)  
  41ab2f:	mov    eax,0x5fda0ab0
  41ab34:	jmp    0x41ab93
  41ab36:	sbb    al,0x41
  41ab38:	dec    ebp
  41ab39:	jg     0x41ab9e
  41ab3b:	data16 add BYTE PTR [ecx-0x67],al
  41ab3f:	jmp    FWORD PTR [esi+0x6ff52cd6]
  41ab45:	pop    es
  41ab46:	fcomp  DWORD PTR [edx-0x45c39eb5]
  41ab4c:	mov    cl,0x45
  41ab4e:	mov    BYTE PTR [ebp-0x50],ch
  41ab51:	mov    ds:0xd7a5c4e6,eax
  41ab56:	shl    ebx,cl
  41ab58:	add    BYTE PTR [ebx-0x673725d7],ch
  41ab5e:	add    al,0x50
  41ab60:	lock pop ds
  41ab62:	loop   0x41ab06
  41ab64:	in     al,0x15
  41ab66:	push   eax
  41ab67:	xor    eax,0xe5c986fb
  41ab6c:	test   eax,0xde00606c
  41ab71:	test   al,0x34
  41ab73:	in     al,0x33
  41ab75:	jae    0x41abd5
  41ab77:	fwait
  41ab78:	rdtsc  
  41ab7a:	fdivr  DWORD PTR [ecx+0x25]
  41ab7d:	add    eax,0xc861f0a3
  41ab82:	push   es
  41ab83:	es jb  0x41ab44
  41ab86:	pop    es
  41ab87:	das    
  41ab88:	mov    ecx,0x7bd2f48b
  41ab8d:	imul   esp,DWORD PTR [ecx+esi*2+0x70],0xffffff8e
  41ab92:	iret   
  41ab93:	jo     0x41ab4d
  41ab95:	retf   0xa00a
  41ab98:	shl    dl,0x2f
  41ab9b:	xchg   edx,eax
  41ab9c:	cmp    ch,cl
  41ab9e:	sbb    DWORD PTR [ecx-0x4aa51207],eax
  41aba4:	mov    dl,BYTE PTR [edi-0x2a19cde2]
  41abaa:	or     dh,0xdb
  41abad:	pop    ss
  41abae:	mov    bh,0x8d
  41abb0:	pop    es
  41abb1:	push   esi
  41abb2:	jp     0x41ac08
  41abb4:	mov    al,0x88
  41abb6:	mov    cl,0xe1
  41abb8:	sub    dl,ah
  41abba:	push   ebp
  41abbb:	leave  
  41abbc:	mov    ds:0x4c869426,al
  41abc1:	loope  0x41ab85
  41abc3:	out    0x1a,eax
  41abc5:	neg    ch
  41abc7:	push   edx
  41abc8:	(bad)  [ebx+0x60]
  41abcb:	pop    ds
  41abcc:	pop    ebp
  41abcd:	imul   dl
  41abcf:	and    ebx,DWORD PTR [edx+0x1a]
  41abd2:	adc    DWORD PTR [esi-0x31],edi
  41abd5:	jg     0x41ac4c
  41abd7:	call   0xfa964858
  41abdc:	dec    edx
  41abdd:	jmp    0xc900:0x11cc4ce3
  41abe4:	fs dec ecx
  41abe6:	out    0x90,al
  41abe8:	pop    ecx
  41abe9:	inc    esp
  41abea:	dec    ebp
  41abeb:	dec    ebp
  41abec:	lock cmp ch,BYTE PTR [esi+0x6541db6f]
  41abf3:	sbb    dl,BYTE PTR ds:0xe493f6a4
  41abf9:	test   DWORD PTR [edx+eax*1+0x75],0xd23b8292
  41ac01:	mov    BYTE PTR [esi],ch
  41ac03:	mov    ebx,0xbb0cf471
  41ac08:	jp     0x41abeb
  41ac0a:	mov    edi,0xf9a858ef
  41ac0f:	pop    ecx
  41ac10:	mov    eax,0x4113490
  41ac15:	jg     0x41ab9d
  41ac17:	rcl    edx,cl
  41ac19:	push   ds
  41ac1a:	dec    edx
  41ac1b:	je     0x41ac7e
  41ac1d:	repz pop ds
  41ac1f:	or     DWORD PTR [eax-0x15],0x5b
  41ac23:	xchg   edx,eax
  41ac24:	dec    edi
  41ac25:	mov    ah,0x64
  41ac27:	adc    cl,0xb2
  41ac2a:	pop    esp
  41ac2b:	push   0xffffffa8
  41ac2d:	sar    bh,1
  41ac2f:	xor    eax,0x696eace1
  41ac34:	fs mov esp,0x620a0356
  41ac3a:	mov    ebp,0xe848513d
  41ac3f:	pop    esi
  41ac40:	call   0xccb6:0xaab9f18d
  41ac47:	aaa    
  41ac48:	and    al,0xf6
  41ac4a:	mov    DWORD PTR ds:0x9bde9d00,ecx
  41ac50:	mov    dl,0xb0
  41ac52:	adc    DWORD PTR [ebx+0x451fa65c],0x5bc77ade
  41ac5c:	sbb    BYTE PTR [ecx-0x18],dl
  41ac5f:	mov    edi,DWORD PTR [edx-0x57]
  41ac62:	jbe    0x41acbb
  41ac64:	or     esp,ebx
  41ac66:	fcom   QWORD PTR [ebx+0x47ac933c]
  41ac6c:	adc    al,cl
  41ac6e:	cdq    
  41ac6f:	mov    eax,ds:0xe8f6ab07
  41ac74:	pop    edx
  41ac75:	cmp    eax,0xc40b08d9
  41ac7a:	mov    ebx,fs
  41ac7c:	adc    ebp,edx
  41ac7e:	jae    0x41ac8a
  41ac80:	mov    al,ds:0x1956b975
  41ac85:	cmp    eax,0xf662ac97
  41ac8a:	cwde   
  41ac8b:	mov    dl,0x51
  41ac8d:	push   eax
  41ac8e:	fsubr  QWORD PTR [ecx-0x741bc94c]
  41ac94:	or     al,0xb1
  41ac96:	push   0xf6985bdd
  41ac9b:	xor    dl,BYTE PTR ds:0x94cdb47
  41aca1:	jp     0x41ad1e
  41aca3:	fistp  QWORD PTR [edx-0x2]
  41aca6:	push   0xb51a84f4
  41acab:	mov    dl,0xa3
  41acad:	test   BYTE PTR [eax+0x12bd7507],cl
  41acb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acb4:	xchg   ebp,eax
  41acb5:	jmp    0x41ad2b
  41acb7:	scas   al,BYTE PTR es:[edi]
  41acb8:	js     0x41ac57
  41acba:	pushf  
  41acbb:	loope  0x41acff
  41acbd:	ret    
  41acbe:	mov    ecx,0x8d1d086e
  41acc3:	jle    0x41ad31
  41acc5:	icebp  
  41acc6:	dec    edi
  41acc7:	dec    ebx
  41acc8:	mov    BYTE PTR [edx-0x20],bl
  41accb:	cdq    
  41accc:	hlt    
  41accd:	push   ss
  41acce:	xchg   ecx,eax
  41accf:	adc    BYTE PTR [edi+ebx*4],ah
  41acd2:	jl     0x41ac75
  41acd4:	lods   al,BYTE PTR ds:[esi]
  41acd5:	int3   
  41acd6:	dec    ecx
  41acd7:	or     cl,al
  41acd9:	dec    ecx
  41acda:	shl    BYTE PTR [ebx+0x18c02ca9],cl
  41ace0:	cmc    
  41ace1:	pop    es
  41ace2:	out    dx,al
  41ace3:	xor    DWORD PTR [edx+0x59],edx
  41ace6:	in     eax,dx
  41ace7:	(bad)  
  41ace9:	push   edi
  41acea:	xor    al,BYTE PTR ds:0x9985572a
  41acf0:	mov    ecx,0x7ad785c6
  41acf5:	shl    DWORD PTR [bp+di+0x7a],0x7b
  41acfa:	gs push ds
  41acfc:	xchg   edi,eax
  41acfd:	mov    edx,DWORD PTR [ecx]
  41acff:	cmp    dh,BYTE PTR [esi-0x49b9518]
  41ad05:	cmp    ebp,DWORD PTR [eax+0x1a]
  41ad08:	mov    esi,0x3b2697fe
  41ad0d:	push   edi
  41ad0e:	pop    es
  41ad0f:	outs   dx,DWORD PTR ds:[esi]
  41ad10:	push   edx
  41ad11:	(bad)  
  41ad12:	call   0x4156:0xb5ac36d2
  41ad19:	jns    0x41acaf
  41ad1b:	out    dx,eax
  41ad1c:	stos   DWORD PTR es:[edi],eax
  41ad1d:	data16 data16 js 0x41accd
  41ad21:	mov    ch,BYTE PTR [esi-0x417ccff9]
  41ad27:	sub    BYTE PTR [esi+0x2d51b5cb],al
  41ad2d:	pop    esp
  41ad2e:	test   al,0x9a
  41ad30:	adc    bl,BYTE PTR [edi+0x1517c212]
  41ad36:	jl     0x41acc5
  41ad38:	or     eax,0x55350b75
  41ad3d:	mov    eax,0xe9d5f4c5
  41ad42:	add    al,0xb6
  41ad44:	add    BYTE PTR [eax+0x65],0x88
  41ad48:	mov    eax,0x1a7e0e9c
  41ad4d:	or     DWORD PTR [esi+0x1b],edi
  41ad50:	mov    fs,WORD PTR [edx]
  41ad52:	and    eax,0x587474a6
  41ad57:	std    
  41ad58:	lods   al,BYTE PTR ds:[esi]
  41ad59:	add    ebx,DWORD PTR [edx+0x69]
  41ad5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5d:	and    bl,BYTE PTR [esi-0x71]
  41ad60:	jo     0x41ad67
  41ad62:	xchg   DWORD PTR [ecx],ecx
  41ad64:	push   ss
  41ad65:	in     al,0x74
  41ad67:	into   
  41ad68:	(bad)  
  41ad69:	sub    DWORD PTR [ebp+0x147d7bd8],esp
  41ad6f:	inc    esi
  41ad70:	stos   DWORD PTR es:[edi],eax
  41ad71:	xor    BYTE PTR [edi-0x18],cl
  41ad74:	xchg   edi,eax
  41ad75:	xor    BYTE PTR ds:0xd1af11f,ah
  41ad7b:	ret    0x425e
  41ad7e:	mov    ah,0x60
  41ad80:	stos   DWORD PTR es:[edi],eax
  41ad81:	into   
  41ad82:	sub    eax,0x26ec6d5e
  41ad87:	pop    ecx
  41ad88:	adc    ebx,DWORD PTR [edx+0x20a3d98b]
  41ad8e:	nop
  41ad8f:	sbb    bh,ch
  41ad91:	pushf  
  41ad92:	push   esi
  41ad93:	jnp    0x41ad3e
  41ad95:	add    dh,al
  41ad97:	jle    0x41ae01
  41ad99:	xchg   esi,eax
  41ad9a:	outs   dx,BYTE PTR ds:[esi]
  41ad9b:	jae    0x41adb6
  41ad9d:	leave  
  41ad9e:	dec    edi
  41ad9f:	ins    BYTE PTR es:[edi],dx
  41ada0:	test   eax,0xe9dbbcc3
  41ada5:	stos   DWORD PTR es:[edi],eax
  41ada6:	sub    al,0x5f
  41ada8:	sbb    al,0xaf
  41adaa:	aas    
  41adab:	xchg   BYTE PTR [ebx],ah
  41adad:	gs mov bh,0x73
  41adb0:	loopne 0x41ade1
  41adb2:	xchg   DWORD PTR [ecx-0xa],ebx
  41adb5:	pop    ds
  41adb6:	xchg   ebx,eax
  41adb7:	test   eax,0x5be31a75
  41adbc:	mov    ebp,0xd684d34f
  41adc1:	xor    BYTE PTR [ebx],ch
  41adc3:	or     DWORD PTR [edx+0x73],0x61
  41adc7:	pop    edi
  41adc8:	sbb    al,0x16
  41adca:	mov    gs,WORD PTR [edi+0x203f4b6f]
  41add0:	ficom  WORD PTR [ebx+0x75]
  41add3:	mov    dh,0xa1
  41add5:	das    
  41add6:	inc    edi
  41add7:	out    dx,eax
  41add8:	push   es
  41add9:	inc    ebp
  41adda:	fwait
  41addb:	in     al,0xa3
  41addd:	push   esi
  41adde:	and    edx,DWORD PTR [edx]
  41ade0:	cld    
  41ade1:	or     bh,BYTE PTR [ecx-0x20]
  41ade4:	adc    dl,BYTE PTR [eax]
  41ade6:	mov    esi,0x4f1c8eae
  41adeb:	push   edx
  41adec:	ins    DWORD PTR es:[edi],dx
  41aded:	call   0xe2f4:0x88034d10
  41adf4:	pop    edx
  41adf5:	jo     0x41ad9a
  41adf7:	cmp    ah,BYTE PTR [eax+ebp*4-0x18]
  41adfb:	sub    ebp,DWORD PTR [esi+0x795078f2]
  41ae01:	cwde   
  41ae02:	stc    
  41ae03:	das    
  41ae04:	iret   
  41ae05:	sub    ebx,edx
  41ae07:	mov    cl,0x7f
  41ae09:	lea    ecx,[edi-0x7d]
  41ae0c:	les    eax,FWORD PTR [edx+0x3a]
  41ae0f:	push   0x4f78b8e
  41ae14:	or     edi,edx
  41ae16:	cwde   
  41ae17:	inc    edi
  41ae18:	call   0xd9dd09d5
  41ae1d:	pop    edi
  41ae1e:	hlt    
  41ae1f:	lea    ebx,[esi+edx*4-0x1e]
  41ae23:	pusha  
  41ae24:	rcr    BYTE PTR [ecx+0x6f],cl
  41ae27:	shl    DWORD PTR [ebp-0x14784a0c],cl
  41ae2d:	cmc    
  41ae2e:	cdq    
  41ae2f:	je     0x41ae78
  41ae31:	mov    edx,0xf43d0e1
  41ae36:	fild   QWORD PTR [eax-0x7a59f419]
  41ae3c:	test   BYTE PTR [ebp+0x24d5f686],ch
  41ae42:	mov    ch,0x8c
  41ae44:	(bad)  
  41ae45:	dec    ebx
  41ae46:	add    DWORD PTR [esi+0x7f],esi
  41ae49:	mov    bh,0xca
  41ae4b:	mov    WORD PTR [eax],?
  41ae4d:	sub    DWORD PTR [ecx],edi
  41ae4f:	scas   al,BYTE PTR es:[edi]
  41ae50:	xor    edi,DWORD PTR [edx+0x45ab4927]
  41ae56:	dec    ebp
  41ae57:	aad    0x8c
  41ae59:	pop    ebp
  41ae5a:	dec    esi
  41ae5b:	dec    ebp
  41ae5c:	(bad)  
  41ae5d:	(bad)  
  41ae5e:	lahf   
  41ae5f:	xor    al,0x99
  41ae61:	jg     0x41ae34
  41ae63:	cli    
  41ae64:	cmp    al,0x6f
  41ae66:	jmp    0x47e0:0xa1e437e1
  41ae6d:	inc    esp
  41ae6e:	jne    0x41aec7
  41ae70:	enter  0x2fc3,0x78
  41ae74:	lods   eax,DWORD PTR ds:[esi]
  41ae75:	jl     0x41aee3
  41ae77:	mov    eax,0x875e2cee
  41ae7c:	push   esi
  41ae7d:	inc    esi
  41ae7e:	inc    edx
  41ae7f:	out    dx,eax
  41ae80:	dec    eax
  41ae81:	hlt    
  41ae82:	jmp    0x93a3:0x3c4fc8c5
  41ae89:	out    0xef,al
  41ae8b:	jno    0x41aecd
  41ae8d:	cwde   
  41ae8e:	pop    esp
  41ae8f:	push   ebx
  41ae90:	mov    WORD PTR [ebx],?
  41ae92:	mov    ds:0x59a7d4f3,al
  41ae97:	or     edi,esi
  41ae99:	out    0x47,eax
  41ae9b:	mov    WORD PTR ds:[eax+ebp*1-0x7a259255],es
  41aea3:	xchg   ebx,eax
  41aea4:	mov    ah,BYTE PTR [edi+0x78]
  41aea7:	pop    esi
  41aea8:	and    ch,BYTE PTR [edx+0x4e]
  41aeab:	mov    esp,0xaa162bc0
  41aeb0:	arpl   si,ax
  41aeb2:	std    
  41aeb3:	cdq    
  41aeb4:	add    bh,bh
  41aeb6:	fdiv   st(3),st
  41aeb8:	aam    0xf2
  41aeba:	sti    
  41aebb:	cmp    cl,BYTE PTR gs:[ebp+edx*4-0x1a]
  41aec0:	lahf   
  41aec1:	enter  0x1734,0x9
  41aec5:	jns    0x41aeaf
  41aec7:	je     0x41aeee
  41aec9:	outs   dx,DWORD PTR ds:[esi]
  41aeca:	dec    esp
  41aecb:	arpl   WORD PTR [ecx-0x73],dx
  41aece:	pop    ebx
  41aecf:	cmp    BYTE PTR [eax+eiz*4],al
  41aed2:	hlt    
  41aed3:	std    
  41aed4:	lods   eax,DWORD PTR ds:[esi]
  41aed5:	call   0xd37:0x6e4a237c
  41aedc:	mov    al,ds:0xe429eba8
  41aee1:	ds pop ss
  41aee3:	stos   BYTE PTR es:[edi],al
  41aee4:	mov    ebx,0x76e3fe9e
  41aee9:	(bad)  
  41aeea:	inc    ecx
  41aeeb:	fsub   DWORD PTR [ebx+0x7a]
  41aeee:	int    0x86
  41aef0:	call   0xd4bbda39
  41aef5:	and    dl,ah
  41aef7:	dec    esi
  41aef8:	jge    0x41ae97
  41aefa:	adc    BYTE PTR [eax],0xa0
  41aefd:	push   ecx
  41aefe:	or     BYTE PTR [esp+edi*2-0x79],ah
  41af02:	jb     0x41af4e
  41af04:	push   ebp
  41af05:	add    eax,0x9812f67d
  41af0a:	add    esi,DWORD PTR ds:0xc1ed8153
  41af10:	pop    eax
  41af11:	pusha  
  41af12:	dec    eax
  41af13:	dec    edi
  41af14:	xor    dl,BYTE PTR [ebx+0x41]
  41af17:	lods   al,BYTE PTR ds:[esi]
  41af18:	jge    0x41aeae
  41af1a:	out    dx,eax
  41af1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1c:	sbb    eax,0xc3851f88
  41af21:	xchg   edi,eax
  41af22:	imul   eax,DWORD PTR [eax+ecx*8+0x121c1a9b],0xeac78c00
  41af2d:	dec    ebx
  41af2e:	inc    ecx
  41af2f:	pop    ds
  41af30:	loope  0x41af75
  41af32:	ds call 0xbe18de98
  41af38:	dec    eax
  41af39:	stc    
  41af3a:	mov    ch,0x1b
  41af3c:	into   
  41af3d:	lahf   
  41af3e:	pop    ds
  41af3f:	sub    eax,DWORD PTR [ecx-0x1d]
  41af42:	dec    esi
  41af43:	push   edi
  41af44:	pop    ebp
  41af45:	mov    edi,0x90befd8a
  41af4a:	xlat   BYTE PTR ds:[ebx]
  41af4b:	cmp    BYTE PTR [ecx-0x380e52fe],bl
  41af51:	jp     0x41afbf
  41af53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af55:	lds    edi,FWORD PTR [ebx-0x3beb84e3]
  41af5b:	loopne 0x41af41
  41af5d:	data16 cmp BYTE PTR [edx+0x14df0690],ch
  41af64:	sub    dl,BYTE PTR [esi]
  41af66:	mov    ebx,DWORD PTR [esi-0x1b]
  41af69:	dec    esp
  41af6a:	xor    edi,DWORD PTR [eax]
  41af6c:	push   esi
  41af6d:	cmp    al,0x60
  41af6f:	ret    0x795e
  41af72:	xchg   ecx,eax
  41af73:	lea    ebx,[eax+esi*1]
  41af76:	inc    esp
  41af77:	imul   ecx,edx,0x3e725720
  41af7d:	fmul   QWORD PTR [ebx+0x40]
  41af80:	add    al,0x8
  41af82:	mov    gs,WORD PTR [edx]
  41af84:	pop    ds
  41af85:	cs and al,0x8d
  41af88:	dec    DWORD PTR [ebp-0x2259a267]
  41af8e:	addr16 call ebx
  41af91:	or     bl,BYTE PTR ds:0x270c2fac
  41af97:	jle    0x41aff1
  41af99:	mov    al,ds:0xf5680fba
  41af9e:	xchg   ecx,eax
  41af9f:	aad    0xd3
  41afa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa2:	int    0xa2
  41afa4:	(bad)  
  41afa5:	dec    eax
  41afa6:	or     ebp,0xb6538e48
  41afac:	jo     0x41af4b
  41afae:	inc    esi
  41afaf:	neg    ah
  41afb1:	push   ds
  41afb2:	dec    edi
  41afb3:	mov    ch,0xc
  41afb5:	std    
  41afb6:	jo     0x41af9d
  41afb8:	or     cl,dl
  41afba:	loope  0x41af6a
  41afbc:	add    eax,0x6e752526
  41afc1:	sbb    bl,ch
  41afc3:	sub    BYTE PTR [esi-0x27],0x35
  41afc7:	pushf  
  41afc8:	fwait
  41afc9:	mov    ch,0x9c
  41afcb:	add    BYTE PTR [ebx+0x130365ee],bl
  41afd1:	xor    eax,ebx
  41afd3:	jb     0x41b017
  41afd5:	mov    WORD PTR [ebp-0x6a],ds
  41afd8:	shl    ebp,cl
  41afda:	xor    ebp,DWORD PTR [edi+ecx*8+0x2dad98ee]
  41afe1:	xchg   BYTE PTR [eax-0x13],cl
  41afe4:	sub    edi,DWORD PTR [ecx]
  41afe6:	xor    eax,0x7257b184
  41afeb:	push   eax
  41afec:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41afee:	or     ch,ch
  41aff0:	sub    BYTE PTR [edx-0x2f],ah
  41aff3:	or     eax,0xe3f3c576
  41aff8:	mov    BYTE PTR [edx+0x28],dl
  41affb:	pop    ebx
  41affc:	lock ja 0x41b059
  41afff:	mov    WORD PTR [edi],es
  41b001:	(bad)  
  41b002:	outs   dx,DWORD PTR ds:[esi]
  41b003:	mov    esp,DWORD PTR [edi+0x5d]
  41b006:	adc    DWORD PTR [edi],edi
  41b008:	mov    cl,BYTE PTR [ecx+edi*1-0x22]
  41b00c:	ret    0x6c81
  41b00f:	cwde   
  41b010:	xor    al,0xe3
  41b012:	stos   BYTE PTR es:[edi],al
  41b013:	push   0xffffff90
  41b015:	pop    ebp
  41b016:	stc    
  41b017:	cwde   
  41b018:	jmp    0xac55:0xab7c8560
  41b01f:	add    BYTE PTR [ebx+ebx*4+0x1a426cb1],dl
  41b026:	das    
  41b027:	in     al,0xf2
  41b029:	and    ch,dh
  41b02b:	mov    dh,0x7e
  41b02d:	xor    al,0x4e
  41b02f:	and    ebx,ebp
  41b031:	xchg   DWORD PTR [esp+edi*2-0x58],ecx
  41b035:	inc    edx
  41b036:	dec    ecx
  41b037:	test   eax,0xe2862171
  41b03c:	ja     0x41b092
  41b03e:	outs   dx,BYTE PTR ds:[esi]
  41b03f:	xor    esi,DWORD PTR [edi+edx*8]
  41b042:	mov    ebp,0x10fcf57
  41b047:	aad    0x44
  41b049:	aam    0x17
  41b04b:	dec    edx
  41b04c:	mov    ds:0x59acffd,al
  41b051:	std    
  41b052:	jbe    0x41afd5
  41b054:	jp     0x41b014
  41b056:	rol    al,cl
  41b058:	pop    ss
  41b059:	lds    edi,FWORD PTR [ecx]
  41b05b:	mov    ds:0x181b7d5b,eax
  41b060:	call   0x2d32f2d5
  41b065:	mov    bl,0x87
  41b067:	xchg   edi,eax
  41b068:	retf   
  41b069:	fsub   QWORD PTR [esp+esi*8-0x29]
  41b06d:	cli    
  41b06e:	leave  
  41b06f:	cmp    DWORD PTR [ecx+0x3d],ebp
  41b072:	cmp    ch,dh
  41b074:	mov    dh,0x6c
  41b076:	sar    BYTE PTR [esi-0x26],1
  41b079:	or     eax,DWORD PTR [eax+eax*1+0x75]
  41b07d:	in     eax,0xb8
  41b07f:	(bad)  [esi+ecx*2-0x41855bf3]
  41b086:	jmp    0x41b078
  41b088:	push   esi
  41b089:	(bad)  
  41b08a:	sub    ah,bl
  41b08c:	dec    esi
  41b08d:	xor    BYTE PTR [esi+0x2fb4b32f],0x4c
  41b094:	in     al,0xa5
  41b096:	imul   ecx,DWORD PTR [ebx],0x1c83bb72
  41b09c:	cmp    BYTE PTR [edi+0x7a],ch
  41b09f:	dec    ecx
  41b0a0:	jmp    0x98d8c82d
  41b0a5:	and    DWORD PTR [ebp+0x45],ebp
  41b0a8:	pop    eax
  41b0a9:	enter  0x1fc6,0x91
  41b0ad:	jmp    0x1aa0aac6
  41b0b2:	mov    ebx,0xcf35c4e5
  41b0b7:	jb     0x41b0f3
  41b0b9:	sbb    bl,BYTE PTR [eax]
  41b0bb:	sti    
  41b0bc:	sbb    BYTE PTR [edi-0x40e46a9f],ch
  41b0c2:	adc    eax,0xb49a6245
  41b0c7:	(bad)  
  41b0c8:	ficomp DWORD PTR [edi]
  41b0ca:	add    edx,edi
  41b0cc:	jle    0x41b130
  41b0ce:	out    dx,eax
  41b0cf:	nop
  41b0d0:	inc    edi
  41b0d1:	adc    bl,BYTE PTR [eax]
  41b0d3:	call   0x109f047b
  41b0d8:	into   
  41b0d9:	jne    0x41b05f
  41b0db:	repz popa 
  41b0dd:	(bad)  
  41b0de:	mov    edx,0x30bbd238
  41b0e3:	xchg   ecx,eax
  41b0e4:	push   edi
  41b0e5:	xchg   esi,eax
  41b0e6:	les    eax,FWORD PTR [eax+0x2e23623]
  41b0ec:	xor    BYTE PTR [edx-0x1f],cl
  41b0ef:	wrmsr  
  41b0f1:	out    dx,eax
  41b0f2:	jmp    0x8830:0x80ee78d2
  41b0f9:	and    eax,0xfe0f2e52
  41b0fe:	in     eax,0x24
  41b100:	repnz push cs
  41b102:	fisub  WORD PTR [eax-0x2788e807]
  41b108:	or     ah,ch
  41b10a:	mov    ah,0x28
  41b10c:	pop    esi
  41b10d:	jo     0x41b0b8
  41b10f:	adc    ah,BYTE PTR [eax+0x30]
  41b112:	and    DWORD PTR [edx],edx
  41b114:	or     ecx,DWORD PTR [esi]
  41b116:	mov    ah,bh
  41b118:	test   BYTE PTR [ebp+0x2e0ddef3],0x13
  41b11f:	out    dx,eax
  41b120:	rcl    BYTE PTR [edx],0x42
  41b123:	(bad)  
  41b124:	jmp    0xf92f7020
  41b129:	sti    
  41b12a:	rol    BYTE PTR [eax],0xa3
  41b12d:	xchg   edx,eax
  41b12e:	scas   al,BYTE PTR es:[edi]
  41b12f:	jbe    0x41b167
  41b131:	mov    ecx,0x802ee66
  41b136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b138:	ins    DWORD PTR es:[edi],dx
  41b139:	int3   
  41b13a:	inc    ebp
  41b13b:	push   cs
  41b13c:	fadd   QWORD PTR [edi+0x64]
  41b13f:	fimul  WORD PTR [esp+esi*2+0x76]
  41b143:	dec    edx
  41b144:	stos   DWORD PTR es:[edi],eax
  41b145:	xor    DWORD PTR [eax-0x19],esi
  41b148:	mov    ah,BYTE PTR [ebx]
  41b14a:	sar    DWORD PTR [ebp+0x47efe14c],1
  41b150:	aaa    
  41b151:	xor    bh,al
  41b153:	ret    0x3881
  41b156:	mov    eax,ds:0x90a00bca
  41b15b:	leave  
  41b15c:	out    0xa5,eax
  41b15e:	lea    esi,ds:0x3b3f8740
  41b164:	ret    0x5210
  41b167:	or     dl,BYTE PTR [ebx-0x62]
  41b16a:	inc    ecx
  41b16b:	imul   edi,DWORD PTR [ebp+esi*2+0x6],0xffffff8c
  41b170:	inc    ecx
  41b171:	shl    ebx,1
  41b173:	push   ebp
  41b174:	es mov ecx,0xa65663bd
  41b17a:	jbe    0x41b124
  41b17c:	stos   BYTE PTR es:[edi],al
  41b17d:	mov    ds:0x1db42c,eax
  41b182:	pop    eax
  41b183:	jg     0x41b200
  41b185:	in     al,dx
  41b186:	repz sub dh,BYTE PTR [edx-0x76]
  41b18a:	or     al,0x55
  41b18c:	fdivr  st,st(1)
  41b18e:	shl    DWORD PTR [ebx-0x515f93fd],cl
  41b194:	test   DWORD PTR [eax],edx
  41b196:	stc    
  41b197:	inc    esi
  41b198:	(bad)  
  41b199:	mov    ds:0x924fdf16,al
  41b19e:	mov    fs:0x937ced6c,eax
  41b1a4:	jmp    0xcde9:0xf796cc6e
  41b1ab:	dec    edx
  41b1ac:	and    DWORD PTR [ebp+0x78],0x84542b19
  41b1b3:	fs jne 0x41b137
  41b1b6:	xor    ah,ah
  41b1b8:	inc    ebx
  41b1b9:	xor    esp,DWORD PTR [edi]
  41b1bb:	jmp    FWORD PTR [ebx-0x65419217]
  41b1c1:	int3   
  41b1c2:	addr16 push esp
  41b1c4:	push   es
  41b1c5:	ds xor dl,ah
  41b1c8:	inc    ch
  41b1ca:	icebp  
  41b1cb:	and    edi,DWORD PTR [eax+0x69f0ff89]
  41b1d1:	mov    dh,0xc7
  41b1d3:	out    0x3e,eax
  41b1d5:	dec    esi
  41b1d6:	repnz ds mov ebx,0x224ec186
  41b1dd:	cli    
  41b1de:	add    dh,BYTE PTR [esi-0x22]
  41b1e1:	cmp    BYTE PTR [esi+0x69da25e9],dl
  41b1e7:	loop   0x41b1cf
  41b1e9:	out    0x1b,eax
  41b1eb:	sti    
  41b1ec:	mov    cl,0xe7
  41b1ee:	fwait
  41b1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f0:	in     eax,dx
  41b1f1:	cdq    
  41b1f2:	xor    dh,ah
  41b1f4:	and    ch,dh
  41b1f6:	sbb    DWORD PTR ds:[ebp+0xfb26e15],eax
  41b1fd:	out    dx,al
  41b1fe:	sub    al,0x9
  41b200:	xchg   esp,eax
  41b201:	dec    esi
  41b202:	push   ecx
  41b203:	adc    eax,0x9da3675
  41b208:	mov    DWORD PTR [eax+0x59],0x86144f9d
  41b20f:	cli    
  41b210:	leave  
  41b211:	pusha  
  41b212:	cld    
  41b213:	clc    
  41b214:	outs   dx,DWORD PTR ds:[esi]
  41b215:	in     al,0xa
  41b217:	inc    esi
  41b218:	in     eax,dx
  41b219:	jmp    0x9065:0x3cdfdc4b
  41b220:	cs jo  0x41b1c2
  41b223:	outs   dx,BYTE PTR ds:[esi]
  41b224:	loopne 0x41b1ff
  41b226:	out    dx,eax
  41b227:	stos   DWORD PTR es:[edi],eax
  41b228:	inc    ebp
  41b229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b22b:	(bad)  
  41b22c:	enter  0xa604,0xa0
  41b230:	cmp    eax,eax
  41b232:	ret    0x7263
  41b235:	clc    
  41b236:	int3   
  41b237:	mov    dl,0x52
  41b239:	(bad)  
  41b23a:	jmp    0xe544:0xfc8c1cf0
  41b241:	and    DWORD PTR [ebx],edx
  41b243:	ss mov al,0x60
  41b246:	push   0xd9521487
  41b24b:	cli    
  41b24c:	mov    ds:0x6cacd8b7,al
  41b251:	and    BYTE PTR [edi+0xd279abb],bh
  41b257:	mov    edi,0x9590b993
  41b25c:	mov    ebp,0x3eff5a4a
  41b261:	mov    bl,0x2b
  41b263:	aam    0xc2
  41b265:	dec    edi
  41b266:	lahf   
  41b267:	pop    es
  41b268:	sub    esp,ebp
  41b26a:	jge    0x41b239
  41b26c:	ret    0xb867
  41b26f:	stos   DWORD PTR es:[edi],eax
  41b270:	shl    edx,cl
  41b272:	xchg   ebp,eax
  41b273:	test   DWORD PTR [ecx],eax
  41b275:	outs   dx,BYTE PTR ds:[esi]
  41b276:	push   esp
  41b277:	sbb    bh,BYTE PTR [ebp-0x28]
  41b27a:	push   es
  41b27b:	xor    ebp,eax
  41b27d:	push   ebx
  41b27e:	jg     0x41b2c1
  41b280:	in     eax,dx
  41b281:	inc    eax
  41b282:	mov    esi,0x777a8562
  41b287:	(bad)  
  41b288:	mov    WORD PTR [esi],?
  41b28a:	inc    DWORD PTR [eax+0x54]
  41b28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28e:	mov    cs,WORD PTR fs:[ebx]
  41b291:	mov    ecx,0x11dea076
  41b296:	jb     0x41b2d7
  41b298:	retf   0xf354
  41b29b:	mov    ah,0x43
  41b29d:	xor    DWORD PTR [ebx],eax
  41b29f:	or     bl,BYTE PTR [esi]
  41b2a1:	pop    edi
  41b2a2:	xlat   BYTE PTR ds:[ebx]
  41b2a3:	cmp    eax,0x578f9d45
  41b2a8:	in     al,0x6c
  41b2aa:	pop    eax
  41b2ab:	test   BYTE PTR [ebp-0x54],bl
  41b2ae:	fnop   
  41b2b0:	test   al,0x6b
  41b2b2:	fistp  DWORD PTR [ebp-0x70]
  41b2b5:	das    
  41b2b6:	mov    ds,WORD PTR [edx-0x2d0f04e9]
  41b2bc:	inc    edi
  41b2bd:	neg    ebp
  41b2bf:	and    al,0x8
  41b2c1:	cs cmp cl,bh
  41b2c4:	inc    esi
  41b2c5:	pop    ds
  41b2c6:	xor    edx,DWORD PTR [edx-0x48a3a400]
  41b2cc:	add    BYTE PTR [edx],0xd7
  41b2cf:	rcr    DWORD PTR [esi-0x77],1
  41b2d2:	xchg   esp,eax
  41b2d3:	call   0x1f6e5e2b
  41b2d8:	(bad)  
  41b2d9:	adc    ebp,ebx
  41b2db:	and    dl,dl
  41b2dd:	mov    cl,0x19
  41b2df:	add    BYTE PTR ds:0x77873fd9,bh
  41b2e5:	lods   al,BYTE PTR ds:[esi]
  41b2e6:	sbb    BYTE PTR [esi-0x4b],0x3b
  41b2ea:	scas   al,BYTE PTR es:[edi]
  41b2eb:	xchg   ebx,eax
  41b2ec:	xchg   ebp,eax
  41b2ed:	adc    ebp,eax
  41b2ef:	add    DWORD PTR [eax],eax
  41b2f1:	es lock xchg ebx,eax
  41b2f4:	xlat   BYTE PTR ds:[ebx]
  41b2f5:	mov    esp,0x71bf892d
  41b2fa:	stos   BYTE PTR es:[edi],al
  41b2fb:	ss nop
  41b2fd:	imul   ebx,DWORD PTR [eax],0x4d6c102a
  41b303:	cvtps2pi mm2,QWORD PTR [ebx-0x19ab5e9b]
  41b30a:	ret    
  41b30b:	sbb    al,0x42
  41b30d:	in     al,0xe2
  41b30f:	push   ecx
  41b310:	les    ebx,FWORD PTR [ebp+0x3c32adb2]
  41b316:	sub    DWORD PTR [edx+0x7],ebx
  41b319:	xor    ch,al
  41b31b:	mov    WORD PTR [edi-0x51],fs
  41b31e:	mov    bh,0x92
  41b320:	push   esp
  41b321:	inc    edx
  41b322:	mov    BYTE PTR [ebx+0x6e6f17ec],al
  41b328:	setl   BYTE PTR [edi-0x3a625367]
  41b32f:	rcl    bh,cl
  41b331:	aaa    
  41b332:	and    esi,ebp
  41b334:	add    DWORD PTR [edx],ecx
  41b336:	adc    BYTE PTR [edi],cl
  41b338:	hlt    
  41b339:	out    0xd6,al
  41b33b:	and    esi,DWORD PTR [esp+eax*8-0x7a]
  41b33f:	sub    BYTE PTR [edi+0x10],ch
  41b342:	out    0x77,eax
  41b344:	cld    
  41b345:	sahf   
  41b346:	cmp    al,0x56
  41b348:	cmp    eax,0xdb8e605c
  41b34d:	inc    edi
  41b34e:	add    al,0x36
  41b350:	test   eax,0xc5b9ab0c
  41b355:	pop    edx
  41b356:	cs jns 0x41b337
  41b359:	sub    BYTE PTR [eax+0x4f],bl
  41b35c:	add    DWORD PTR [ebx],edi
  41b35e:	mov    bh,dh
  41b360:	lahf   
  41b361:	stos   BYTE PTR es:[edi],al
  41b362:	add    DWORD PTR [eax-0x5a735be1],esi
  41b368:	int    0x7f
  41b36a:	into   
  41b36b:	out    0x27,al
  41b36d:	inc    edx
  41b36e:	xchg   BYTE PTR [edx+0x73ffa6d],ch
  41b374:	mov    ecx,0x1b764966
  41b379:	xor    eax,0xe00f3163
  41b37e:	ins    DWORD PTR es:[edi],dx
  41b37f:	mov    al,0xf5
  41b381:	das    
  41b382:	inc    esp
  41b383:	mov    ecx,0x9a1095db
  41b388:	ins    DWORD PTR es:[edi],dx
  41b389:	sti    
  41b38a:	ror    DWORD PTR [edx-0x3d47a33d],0x5f
  41b391:	shl    DWORD PTR [ecx+0x6b67fa9f],cl
  41b397:	cmp    bl,BYTE PTR [edi+0x7476117e]
  41b39d:	cmc    
  41b39e:	cli    
  41b39f:	inc    ebx
  41b3a0:	neg    BYTE PTR [ecx]
  41b3a2:	sub    ebp,DWORD PTR [ecx+ebp*2-0x3fdecd0c]
  41b3a9:	shl    BYTE PTR [esi],0x8c
  41b3ac:	pop    edx
  41b3ad:	cs pop ebx
  41b3af:	ror    BYTE PTR [edi+0x8f51397],0x5a
  41b3b6:	jl     0x41b3b4
  41b3b8:	cmp    edx,edx
  41b3ba:	in     al,0x7b
  41b3bc:	ds jnp 0x41b434
  41b3bf:	loop   0x41b421
  41b3c1:	sub    edx,edi
  41b3c3:	xor    BYTE PTR [ecx-0x7a],ah
  41b3c6:	ja     0x41b356
  41b3c8:	rcl    BYTE PTR [edx],cl
  41b3ca:	xchg   ecx,eax
  41b3cb:	cmp    esi,eax
  41b3cd:	ficom  DWORD PTR [ecx-0x6f1bc0dc]
  41b3d3:	adc    eax,0x2f929643
  41b3d8:	adc    edx,DWORD PTR [eax+0x6cb600ab]
  41b3de:	mov    al,ds:0xceb736fe
  41b3e3:	pop    esi
  41b3e4:	sbb    DWORD PTR [ecx-0x2df30908],eax
  41b3ea:	mov    ds:0xaf8a9b43,al
  41b3ef:	cld    
  41b3f0:	jl     0x41b3f2
  41b3f2:	dec    eax
  41b3f3:	les    edx,FWORD PTR [ebp-0x78]
  41b3f6:	test   DWORD PTR [ecx+0x64694c50],0xb3a4714a
  41b400:	ss out 0x72,al
  41b403:	int    0x7b
  41b405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b406:	cmp    ecx,DWORD PTR [ebp+0x3ae14384]
  41b40c:	loop   0x41b429
  41b40e:	mov    dh,0xd7
  41b410:	in     al,0x17
  41b412:	push   cs
  41b413:	fisttp QWORD PTR [edi+0x11]
  41b416:	rcr    BYTE PTR [ebp-0x6c],1
  41b419:	nop
  41b41a:	data16 loop 0x41b451
  41b41d:	js     0x41b42d
  41b41f:	ds pop ebp
  41b421:	scas   eax,DWORD PTR es:[edi]
  41b422:	dec    edi
  41b423:	stc    
  41b424:	xchg   ebx,eax
  41b425:	scas   eax,DWORD PTR es:[edi]
  41b426:	adc    DWORD PTR [edi+0x3b13d610],ecx
  41b42c:	nop
  41b42d:	and    cl,cl
  41b42f:	adc    al,0x4c
  41b431:	aaa    
  41b432:	sub    BYTE PTR [edi],al
  41b434:	outs   dx,DWORD PTR ds:[esi]
  41b435:	bound  edi,QWORD PTR [eax]
  41b437:	mov    ds:0x8b08558b,eax
  41b43c:	pop    ebp
  41b43d:	test   al,0x81
  41b43f:	ret    0x8fa
  41b442:	push   edi
  41b443:	add    BYTE PTR [edi],cl
  41b445:	scas   eax,DWORD PTR es:[edi]
  41b446:	ror    DWORD PTR [ecx+0x558ba855],cl
  41b44c:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  41b452:	cwde   
  41b453:	clc    
  41b454:	add    BYTE PTR fs:[ebx],cl
  41b457:	ror    DWORD PTR [ecx+0x558bac55],cl
  41b45d:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  41b463:	xor    edx,ebx
  41b465:	mov    DWORD PTR [ebp-0x50],edx
  41b468:	mov    edx,DWORD PTR [ebp+0x8]
  41b46b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b46e:	add    edx,edi
  41b470:	and    edx,ebx
  41b472:	mov    DWORD PTR [ebp-0x4c],edx
  41b475:	mov    edx,DWORD PTR [ebp+0x8]
  41b478:	mov    ebx,DWORD PTR [ebp-0x48]
  41b47b:	lea    edx,[ebx+edx*1+0x241fcdf]
  41b482:	mov    DWORD PTR [ebp-0x48],edx
  41b485:	mov    edx,DWORD PTR [ebp+0x8]
  41b488:	mov    ebx,0xfa5e1524
  41b48d:	sub    ebx,edx
  41b48f:	add    ebx,DWORD PTR [ebp-0x44]
  41b492:	mov    DWORD PTR [ebp-0x44],ebx
  41b495:	mov    edx,DWORD PTR [ebp+0x8]
  41b498:	xor    edx,eax
  41b49a:	add    edx,esi
  41b49c:	jne    0x4190c6
  41b4a2:	mov    edx,DWORD PTR [ebp-0x8]
  41b4a5:	mov    ebx,DWORD PTR [ebp-0xc]
  41b4a8:	xor    edx,eax
  41b4aa:	lea    edx,[edx+ebx*1+0x3272f1]
  41b4b1:	mov    DWORD PTR [ebp-0xc],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x10]
  41b4b7:	xor    edx,eax
  41b4b9:	add    edx,esi
  41b4bb:	jne    0x41465c
  41b4c1:	jmp    0x421ff5
  41b4c6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c9:	mov    DWORD PTR [ebp+0x8],ecx
  41b4cc:	jmp    0x41fc03
  41b4d1:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4d4:	mov    edx,DWORD PTR [ebp-0x8]
  41b4d7:	xor    ecx,eax
  41b4d9:	xor    edx,eax
  41b4db:	sub    ecx,edx
  41b4dd:	sub    ecx,esi
  41b4df:	xor    ecx,eax
  41b4e1:	mov    DWORD PTR [ebp+0x8],ecx
  41b4e4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4e7:	mov    edx,DWORD PTR [ebp-0x58]
  41b4ea:	add    ecx,0x5708fa
  41b4f0:	imul   ecx,edx
  41b4f3:	jmp    0x41d852
  41b4f8:	test   al,0x3a
  41b4fa:	jl     0x41b49e
  41b4fc:	out    dx,al
  41b4fd:	mov    ds:0xdb3d32a2,al
  41b502:	sti    
  41b503:	loopne 0x41b502
  41b505:	xor    DWORD PTR [ecx+0x7cf8ede5],ebx
  41b50b:	cmp    DWORD PTR ds:0x8483835e,0x71
  41b512:	adc    BYTE PTR [ecx],bl
  41b514:	scas   al,BYTE PTR es:[edi]
  41b515:	pop    edx
  41b516:	xor    al,0x64
  41b518:	add    eax,0xa5544ca7
  41b51d:	ss push ecx
  41b51f:	xor    BYTE PTR [ecx],dh
  41b521:	lock adc al,0x34
  41b524:	pop    eax
  41b525:	or     bl,BYTE PTR [edx]
  41b527:	aad    0xb2
  41b529:	xor    BYTE PTR [edx],bh
  41b52b:	retf   
  41b52c:	ins    BYTE PTR es:[edi],dx
  41b52d:	inc    eax
  41b52e:	lods   eax,DWORD PTR ds:[esi]
  41b52f:	daa    
  41b530:	(bad)  
  41b531:	cmp    DWORD PTR [edi+ebx*1-0x40],ebx
  41b535:	jbe    0x41b534
  41b537:	xor    eax,0x484fd1de
  41b53c:	or     edx,esi
  41b53e:	daa    
  41b53f:	mov    esp,0xf9489326
  41b544:	ins    BYTE PTR es:[edi],dx
  41b545:	les    ebp,FWORD PTR [edi-0x6a]
  41b548:	mov    edi,0x4cb24d36
  41b54d:	pop    ebx
  41b54e:	call   0xc5bb:0x15661f7d
  41b555:	subps  xmm6,xmm4
  41b558:	mov    cl,0xc3
  41b55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b55b:	test   cl,al
  41b55d:	cmp    BYTE PTR [ecx+ebx*2-0x22],0x2c
  41b562:	iret   
  41b563:	mov    ds:0xbe93362b,al
  41b568:	jbe    0x41b51d
  41b56a:	jo     0x41b587
  41b56c:	inc    esp
  41b56d:	adc    al,0x6b
  41b56f:	push   esi
  41b570:	fstp   QWORD PTR [eax-0x563a9783]
  41b576:	mov    ebx,0x2de430c8
  41b57b:	adc    esp,ebp
  41b57d:	push   ss
  41b57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b57f:	div    BYTE PTR [esi-0x7033e6b7]
  41b585:	addr16 rol DWORD PTR [di-0x6a],1
  41b58a:	popf   
  41b58b:	outs   dx,BYTE PTR ds:[esi]
  41b58c:	push   esp
  41b58d:	popf   
  41b58e:	and    DWORD PTR [ebx],esp
  41b590:	mov    dh,0x23
  41b592:	mov    dl,0xa1
  41b594:	and    esi,DWORD PTR [ebp+0x6b]
  41b597:	out    dx,al
  41b598:	fsubr  DWORD PTR [eax+edi*4-0x2adbad5e]
  41b59f:	out    0x68,eax
  41b5a1:	sub    edi,edx
  41b5a3:	mov    WORD PTR [ecx+0x61c1709f],gs
  41b5a9:	add    ebp,DWORD PTR [edi-0x1c4b8a1f]
  41b5af:	test   al,0x6a
  41b5b1:	lock sub al,0xa7
  41b5b4:	mov    ah,0xc5
  41b5b6:	pop    es
  41b5b7:	jp     0x41b58f
  41b5b9:	sahf   
  41b5ba:	bound  edx,QWORD PTR [ebx]
  41b5bc:	(bad)  
  41b5bd:	push   eax
  41b5be:	push   edi
  41b5bf:	in     al,dx
  41b5c0:	adc    eax,0xf2d8c6ed
  41b5c5:	jge    0x41b5d2
  41b5c7:	xlat   BYTE PTR ds:[ebx]
  41b5c8:	xor    ebx,esi
  41b5ca:	adc    ah,0x33
  41b5cd:	inc    ebx
  41b5ce:	add    DWORD PTR [esi],edx
  41b5d0:	cmc    
  41b5d1:	add    eax,DWORD PTR [ebx]
  41b5d3:	mov    DWORD PTR [ebx+edx*4+0x36],esi
  41b5d7:	lds    esp,FWORD PTR [ebp+0x69]
  41b5da:	ret    
  41b5db:	addr16 inc ebx
  41b5dd:	ja     0x41b611
  41b5df:	jo     0x41b5c2
  41b5e1:	pop    esp
  41b5e2:	jnp    0x41b593
  41b5e4:	push   es
  41b5e5:	mov    WORD PTR [edx+ebp*8-0x34],?
  41b5e9:	fsub   DWORD PTR [eax+0x28]
  41b5ec:	cmc    
  41b5ed:	add    BYTE PTR [ebp+0x22a79b76],bh
  41b5f3:	(bad)  
  41b5f5:	xor    dl,BYTE PTR [ebx]
  41b5f7:	cld    
  41b5f8:	push   ecx
  41b5f9:	pop    edi
  41b5fa:	xor    al,0xe4
  41b5fc:	daa    
  41b5fd:	jle    0x41b659
  41b5ff:	loopne 0x41b5f5
  41b601:	in     al,dx
  41b602:	lahf   
  41b603:	(bad)  
  41b604:	or     al,0xc2
  41b606:	or     DWORD PTR [ebp+ecx*8+0x79e6ddf4],ebp
  41b60d:	add    BYTE PTR [ebp+0x22425ba],dl
  41b613:	fcmovu st,st(2)
  41b615:	daa    
  41b616:	adc    al,0xb2
  41b618:	xor    eax,DWORD PTR [ecx-0x5d]
  41b61b:	jns    0x41b66d
  41b61d:	stos   DWORD PTR es:[edi],eax
  41b61e:	sub    ch,BYTE PTR [ebx-0x44]
  41b621:	jo     0x41b5e7
  41b623:	add    eax,DWORD PTR [ebp+0x46a8ae56]
  41b629:	dec    ebp
  41b62a:	mov    ah,0x82
  41b62c:	pop    esi
  41b62d:	and    esp,DWORD PTR [edx-0x2d]
  41b630:	retf   0xfd4
  41b633:	nop
  41b634:	and    eax,0xf4b436d6
  41b639:	jle    0x41b68f
  41b63b:	add    BYTE PTR [edx+0x2218a8f0],cl
  41b641:	ret    
  41b642:	sbb    ch,BYTE PTR cs:[eax-0x65fdb920]
  41b649:	mov    al,0xf2
  41b64b:	dec    esp
  41b64c:	repz sbb ecx,DWORD PTR [ebx-0x7c3b05b]
  41b653:	test   al,0xde
  41b655:	nop
  41b656:	and    bl,BYTE PTR [edi-0x3b9de96f]
  41b65c:	jmp    0x98b8:0x43506b0e
  41b663:	xlat   BYTE PTR ds:[ebx]
  41b664:	into   
  41b665:	mov    edi,DWORD PTR [edx+0x7c]
  41b668:	fwait
  41b669:	cmc    
  41b66a:	lds    esi,FWORD PTR [edi-0x5a]
  41b66d:	adc    al,0xa6
  41b66f:	add    DWORD PTR [ebp-0x4565f3a4],ebx
  41b675:	fld    DWORD PTR [esi]
  41b677:	mov    dh,0x5e
  41b679:	mov    ebp,ebx
  41b67b:	pop    eax
  41b67c:	mov    BYTE PTR [esi+0x358e3948],dl
  41b682:	inc    ch
  41b684:	int3   
  41b685:	inc    eax
  41b686:	fcom   DWORD PTR [ecx+edx*8-0x480238b8]
  41b68d:	and    al,0x79
  41b68f:	inc    ebx
  41b690:	xor    BYTE PTR [esi+0xd],dl
  41b693:	call   0x2979bcf7
  41b698:	rcr    edi,cl
  41b69a:	or     DWORD PTR [ebx-0x33],esp
  41b69d:	lds    eax,FWORD PTR [esi-0x57]
  41b6a0:	(bad)  
  41b6a1:	sub    al,0x98
  41b6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a4:	dec    esi
  41b6a5:	cmp    edx,DWORD PTR [edx-0x6940cd9b]
  41b6ab:	jno    0x41b631
  41b6ad:	sahf   
  41b6ae:	mov    ds:0xc01c68b3,al
  41b6b3:	mov    BYTE PTR [ebx-0x14caea40],dh
  41b6b9:	ret    
  41b6ba:	loopne 0x41b64d
  41b6bc:	arpl   WORD PTR [ebp+0x61d4fdf7],si
  41b6c2:	rcr    DWORD PTR [edx+0x4b],1
  41b6c5:	dec    esi
  41b6c6:	hlt    
  41b6c7:	lock jae 0x41b65b
  41b6ca:	push   ebp
  41b6cb:	pop    esi
  41b6cc:	and    eax,0x287001fb
  41b6d1:	scas   eax,DWORD PTR es:[edi]
  41b6d2:	xor    BYTE PTR [edx+ebp*8],dh
  41b6d5:	and    dl,BYTE PTR [esi]
  41b6d7:	out    0x94,eax
  41b6d9:	imul   esp,DWORD PTR [eax+0x6d],0x4
  41b6dd:	xchg   ebx,eax
  41b6de:	xlat   BYTE PTR fs:[ebx]
  41b6e0:	inc    eax
  41b6e1:	cdq    
  41b6e2:	retf   0x568c
  41b6e5:	nop
  41b6e6:	xlat   BYTE PTR ds:[ebx]
  41b6e7:	fs lahf 
  41b6e9:	lods   eax,DWORD PTR ds:[esi]
  41b6ea:	into   
  41b6eb:	lods   al,BYTE PTR ds:[esi]
  41b6ec:	out    0xe5,eax
  41b6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6ef:	dec    ebp
  41b6f0:	mov    edx,0xc51f76e9
  41b6f5:	xlat   BYTE PTR ds:[ebx]
  41b6f6:	adc    ch,bh
  41b6f8:	pop    ebp
  41b6f9:	iret   
  41b6fa:	mov    BYTE PTR [ecx],dh
  41b6fc:	sub    BYTE PTR [eax],bl
  41b6fe:	out    dx,eax
  41b6ff:	jne    0x41b719
  41b701:	push   ebp
  41b702:	fadd   st,st(1)
  41b704:	and    DWORD PTR [ebx],0x9a53876b
  41b70a:	push   ds
  41b70b:	js     0x41b78b
  41b70d:	sbb    DWORD PTR [edi],ecx
  41b70f:	jmp    0x1133:0x6e82137f
  41b716:	loop   0x41b6fb
  41b718:	cld    
  41b719:	js     0x41b6e8
  41b71b:	rcr    DWORD PTR [eax+edi*1+0x5d8509e7],0xf3
  41b723:	xchg   ecx,eax
  41b724:	push   edi
  41b725:	mov    ah,0xc3
  41b727:	scas   eax,DWORD PTR es:[edi]
  41b728:	inc    eax
  41b729:	cmp    eax,0x35e7afdd
  41b72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b72f:	inc    ecx
  41b730:	mov    edx,0xf578a88f
  41b735:	cwde   
  41b736:	push   eax
  41b737:	not    BYTE PTR [edx+0xb6c36b2]
  41b73d:	xor    BYTE PTR [ebp+0x67fbcd0c],al
  41b743:	cld    
  41b744:	add    DWORD PTR [edi-0x15d52ea4],edx
  41b74a:	mov    WORD PTR ds:0x260fe00f,ss
  41b750:	fs mov ecx,0x3d9c2641
  41b756:	mov    esp,0xdf305c71
  41b75b:	mov    dl,0x45
  41b75d:	or     BYTE PTR [esi],al
  41b75f:	fldcw  WORD PTR [ebx+0x7e]
  41b762:	retf   0xf86f
  41b765:	inc    edi
  41b766:	shl    DWORD PTR [ecx+ebx*2],0xe
  41b76a:	ins    DWORD PTR es:[edi],dx
  41b76b:	jmp    0xd64:0xf505489b
  41b772:	and    esi,DWORD PTR [edi-0x2c]
  41b775:	jg     0x41b764
  41b777:	push   ds
  41b778:	sbb    dl,BYTE PTR [ebx-0x1228df57]
  41b77e:	enter  0xc40b,0xaa
  41b782:	in     eax,0x9f
  41b784:	sbb    eax,0xb0afa017
  41b789:	jo     0x41b7b1
  41b78b:	mov    dh,0x6e
  41b78d:	stc    
  41b78e:	and    esi,esi
  41b790:	jge    0x41b7ed
  41b792:	bound  edi,QWORD PTR [ebp+0x16a1459d]
  41b798:	cmp    al,0x89
  41b79a:	xlat   BYTE PTR ds:[ebx]
  41b79b:	rcl    DWORD PTR [edi-0x71e1d8c2],0xc2
  41b7a2:	add    eax,0xc0d4fd50
  41b7a7:	cmp    bh,BYTE PTR [ebx]
  41b7a9:	ret    
  41b7aa:	cmc    
  41b7ab:	pop    ds
  41b7ac:	dec    esi
  41b7ad:	jle    0x41b79a
  41b7af:	cli    
  41b7b0:	push   ecx
  41b7b1:	jns    0x41b7a7
  41b7b3:	jmp    edi
  41b7b5:	add    DWORD PTR gs:[ebx],ecx
  41b7b8:	fcom   DWORD PTR [esi+0x525cf95c]
  41b7be:	lock or bl,BYTE PTR [esi-0x71c29d95]
  41b7c5:	hlt    
  41b7c6:	mov    ecx,0xbb72cd69
  41b7cb:	cmp    bh,BYTE PTR [eax-0x73]
  41b7ce:	mov    ecx,0xfde34f13
  41b7d3:	pop    ss
  41b7d4:	sbb    ah,0x50
  41b7d7:	rol    BYTE PTR [edx],1
  41b7d9:	dec    esi
  41b7da:	and    DWORD PTR [ebx+0x2f],edi
  41b7dd:	pop    ebp
  41b7de:	add    BYTE PTR [esi],bh
  41b7e0:	mov    BYTE PTR [edi+0x5484bdff],ah
  41b7e6:	push   ss
  41b7e7:	rcr    bl,0x41
  41b7ea:	dec    ebx
  41b7eb:	pop    ebx
  41b7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ed:	adc    bh,ah
  41b7ef:	add    bh,bh
  41b7f1:	outs   dx,BYTE PTR ds:[esi]
  41b7f2:	loopne 0x41b79a
  41b7f4:	fisubr WORD PTR [edx+0x1be411f1]
  41b7fa:	jecxz  0x41b86b
  41b7fc:	cmp    al,0x32
  41b7fe:	jp     0x41b851
  41b800:	sahf   
  41b801:	je     0x41b7eb
  41b803:	stos   DWORD PTR es:[edi],eax
  41b804:	lds    esp,FWORD PTR [ecx-0x706ba7d6]
  41b80a:	sbb    bl,BYTE PTR [eax-0x3c]
  41b80d:	ds mov dh,0x8f
  41b810:	adc    al,0xcb
  41b812:	stos   BYTE PTR es:[edi],al
  41b813:	lods   eax,DWORD PTR ds:[esi]
  41b814:	sti    
  41b815:	xchg   DWORD PTR [edx+eiz*2],ebp
  41b818:	and    BYTE PTR ds:0x734cfdfe,dl
  41b81e:	test   BYTE PTR [ebx-0x2aca1cf0],0xd
  41b825:	and    BYTE PTR [edx],ah
  41b827:	push   ds
  41b828:	or     eax,0x76b2984a
  41b82d:	loope  0x41b891
  41b82f:	clc    
  41b830:	in     al,0xee
  41b832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b833:	loope  0x41b88a
  41b835:	push   0xffffffe7
  41b837:	mov    ds:0x192fcee6,al
  41b83c:	jle    0x41b7d1
  41b83e:	dec    eax
  41b83f:	fisub  WORD PTR [esi]
  41b841:	cli    
  41b842:	out    0xa8,al
  41b844:	in     eax,0xe
  41b846:	mov    BYTE PTR [esi],0x53
  41b849:	add    al,0x82
  41b84b:	xchg   edx,eax
  41b84c:	or     BYTE PTR [eax-0x10af44f9],ah
  41b852:	push   0x8
  41b854:	xor    ecx,DWORD PTR fs:[esi]
  41b857:	(bad)  
  41b858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b859:	adc    BYTE PTR [edx],bh
  41b85b:	ret    
  41b85c:	mov    eax,0x206ca92a
  41b861:	lea    ecx,[edi+0x4a]
  41b864:	sbb    BYTE PTR [edx-0x70cba7a2],al
  41b86a:	inc    edx
  41b86b:	fldl2t 
  41b86d:	jb     0x41b84b
  41b86f:	ret    
  41b870:	xor    ebp,DWORD PTR [ecx-0x271b84d4]
  41b876:	mov    esp,0x7f822c6d
  41b87b:	or     BYTE PTR [ecx],al
  41b87d:	pop    edx
  41b87e:	repnz adc ecx,edi
  41b881:	cmc    
  41b882:	ror    DWORD PTR ds:0xf3a44a03,cl
  41b888:	mov    ecx,0x1fe4941b
  41b88d:	je     0x41b856
  41b88f:	xchg   ecx,eax
  41b890:	call   0xf35781da
  41b895:	ins    BYTE PTR es:[edi],dx
  41b896:	adc    DWORD PTR [ecx-0x29d20b59],ebx
  41b89c:	mov    BYTE PTR [eax-0x3ae45ba1],cl
  41b8a2:	jae    0x41b87c
  41b8a4:	adc    al,0xf6
  41b8a6:	dec    edi
  41b8a7:	ret    0xe6e8
  41b8aa:	pop    edi
  41b8ab:	fdiv   DWORD PTR [ebp+0x3f]
  41b8ae:	retf   0x9205
  41b8b1:	jl     0x41b87a
  41b8b3:	out    dx,eax
  41b8b4:	jno    0x41b881
  41b8b6:	dec    edx
  41b8b7:	fmul   st,st(7)
  41b8b9:	mov    ?,WORD PTR [ebp+0x65]
  41b8bc:	pop    ebx
  41b8bd:	mov    dh,0xc3
  41b8bf:	out    0x95,al
  41b8c1:	xchg   BYTE PTR [ebx],al
  41b8c3:	pop    eax
  41b8c4:	xor    DWORD PTR [ecx],edi
  41b8c6:	stos   BYTE PTR es:[edi],al
  41b8c7:	in     al,dx
  41b8c8:	push   edx
  41b8c9:	push   ebx
  41b8ca:	aas    
  41b8cb:	or     ecx,esi
  41b8cd:	dec    edx
  41b8ce:	cwde   
  41b8cf:	outs   dx,DWORD PTR ds:[esi]
  41b8d0:	out    dx,al
  41b8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8d3:	and    al,0x60
  41b8d5:	sub    al,dh
  41b8d7:	ficom  DWORD PTR [ecx+0x78b6fe3e]
  41b8dd:	(bad)  
  41b8de:	iret   
  41b8df:	inc    edx
  41b8e0:	add    DWORD PTR [ebp-0x45],esi
  41b8e3:	pop    edi
  41b8e4:	(bad)  
  41b8e5:	in     al,dx
  41b8e6:	stos   BYTE PTR es:[edi],al
  41b8e7:	js     0x41b8ab
  41b8e9:	jmp    0x41b892
  41b8eb:	mov    esp,0x3a51aa33
  41b8f0:	sbb    BYTE PTR [edi],dl
  41b8f2:	sti    
  41b8f3:	dec    ebx
  41b8f4:	clc    
  41b8f5:	test   edx,eax
  41b8f7:	cmp    DWORD PTR [edx+0x50],ebp
  41b8fa:	mov    eax,0xad73d744
  41b8ff:	mov    eax,ds:0x206206d8
  41b904:	xchg   edi,eax
  41b905:	(bad)  [ebx-0x3d74c151]
  41b90b:	mov    eax,0x6b8a09b3
  41b910:	dec    ebp
  41b911:	or     ecx,esp
  41b913:	(bad)  
  41b914:	retf   0xf102
  41b917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b918:	fiadd  DWORD PTR [esp+eax*4-0x12]
  41b91c:	cld    
  41b91d:	shr    bl,1
  41b91f:	es xchg ebx,eax
  41b921:	inc    eax
  41b922:	jne    0x41b8b3
  41b924:	jbe    0x41b913
  41b926:	out    dx,al
  41b927:	mov    edi,0x3c79e439
  41b92c:	mov    cs,WORD PTR [esi]
  41b92e:	jmp    0x1ae60fc
  41b933:	inc    edx
  41b934:	aaa    
  41b935:	dec    esi
  41b936:	cmc    
  41b937:	xor    eax,0xb6dd1548
  41b93c:	cdq    
  41b93d:	jbe    0x41b905
  41b93f:	out    0xc7,eax
  41b941:	push   ebp
  41b942:	ja     0x41b987
  41b944:	adc    dl,bh
  41b946:	leave  
  41b947:	aaa    
  41b948:	jnp    0x41b93c
  41b94a:	or     DWORD PTR [eax+eax*2+0x2f],ebp
  41b94e:	retf   0xf0c7
  41b951:	lock das 
  41b953:	ss mov ch,0x31
  41b956:	dec    ebp
  41b957:	mov    ds:0x19894e29,al
  41b95c:	sbb    al,0xa2
  41b95e:	(bad)  
  41b95f:	mov    bh,0x7f
  41b961:	jl     0x41b996
  41b963:	fcomp  QWORD PTR [ecx-0x139286d1]
  41b969:	(bad)  
  41b96a:	aam    0xda
  41b96c:	or     ch,BYTE PTR [ebp+ebp*2-0x45c958d]
  41b973:	aad    0xc2
  41b975:	fisttp DWORD PTR [ebx-0x19]
  41b978:	inc    edi
  41b979:	pop    ebp
  41b97a:	retf   
  41b97b:	xchg   BYTE PTR [eax+0x4a],cl
  41b97e:	(bad)  
  41b980:	push   ss
  41b981:	outs   dx,BYTE PTR ds:[esi]
  41b982:	fstp   DWORD PTR [eax+0x2e01da71]
  41b988:	add    DWORD PTR [edx+0x735f49c2],0x59
  41b98f:	loope  0x41b93d
  41b991:	adc    BYTE PTR [ebx-0x6a7bd35a],bh
  41b997:	mov    ch,0x69
  41b999:	add    BYTE PTR [edi-0x65],0x4a
  41b99d:	xor    eax,0xa20d62b
  41b9a2:	in     eax,dx
  41b9a3:	jmp    0x7344:0x8c3ccf67
  41b9aa:	nop
  41b9ab:	mov    eax,eax
  41b9ad:	xor    cl,BYTE PTR ds:0xcb80fe57
  41b9b3:	jns    0x41b93b
  41b9b5:	lods   eax,DWORD PTR ds:[esi]
  41b9b6:	gs daa 
  41b9b8:	push   es
  41b9b9:	sbb    al,0xdd
  41b9bb:	icebp  
  41b9bc:	mov    esp,?
  41b9be:	in     eax,dx
  41b9bf:	adc    eax,0x4bb5bb02
  41b9c4:	push   0xffffff9f
  41b9c6:	mov    ch,0xc3
  41b9c8:	jbe    0x41ba38
  41b9ca:	cs ds pop esi
  41b9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9ce:	mov    eax,0x9f1cc921
  41b9d3:	push   eax
  41b9d4:	addr16 aas 
  41b9d6:	adc    BYTE PTR [ebp-0x2feaee1],bl
  41b9dc:	mov    ebx,0x8aeb8a84
  41b9e1:	mov    eax,ds:0xf2346295
  41b9e6:	cmp    al,0xbc
  41b9e9:	hlt    
  41b9ea:	shl    DWORD PTR [ebp-0x41],0x9b
  41b9ee:	mov    al,ds:0xba2f013a
  41b9f3:	sbb    dh,BYTE PTR [esi-0xe]
  41b9f6:	les    ebp,FWORD PTR [esi]
  41b9f8:	sbb    ch,BYTE PTR [esi-0x32]
  41b9fb:	mov    edx,DWORD PTR [eax-0x56]
  41b9fe:	mov    dl,0x13
  41ba00:	or     dl,ch
  41ba02:	dec    ebp
  41ba03:	xchg   edx,eax
  41ba04:	jmp    0x2d15ab00
  41ba09:	imul   DWORD PTR [ecx+0x60b4f2f0]
  41ba0f:	xlat   BYTE PTR ds:[ebx]
  41ba10:	cmp    ecx,DWORD PTR [ebx]
  41ba12:	mov    bh,0xdb
  41ba14:	push   ebx
  41ba15:	loope  0x41ba1c
  41ba17:	aam    0xdf
  41ba19:	cmp    dl,al
  41ba1b:	mov    esp,0x7905a6d3
  41ba20:	icebp  
  41ba21:	dec    edi
  41ba22:	xor    eax,0xde29aa0a
  41ba27:	mov    bl,0xc6
  41ba29:	dec    ebp
  41ba2a:	xor    bl,ah
  41ba2c:	bound  edx,QWORD PTR [edx]
  41ba2e:	aaa    
  41ba2f:	cmp    eax,edx
  41ba31:	ja     0x41ba09
  41ba33:	js     0x41baa1
  41ba35:	cli    
  41ba36:	(bad)
  41ba39:	in     al,0xcb
  41ba3b:	xchg   esp,eax
  41ba3c:	mov    ds:0xaeecb940,eax
  41ba41:	cdq    
  41ba42:	pop    es
  41ba43:	sbb    ecx,esp
  41ba45:	xor    al,0x7a
  41ba47:	jo     0x41bac2
  41ba49:	in     al,dx
  41ba4a:	cmp    DWORD PTR [ebx-0x7aabf803],ecx
  41ba50:	sbb    al,0x7
  41ba52:	inc    ebx
  41ba53:	call   0x7d22c811
  41ba58:	dec    ecx
  41ba59:	push   cs
  41ba5a:	push   cs
  41ba5b:	add    DWORD PTR [esi],esp
  41ba5d:	cmp    eax,0x96b8549e
  41ba62:	cmc    
  41ba63:	outs   dx,BYTE PTR ds:[esi]
  41ba64:	scas   al,BYTE PTR es:[edi]
  41ba65:	aam    0x2d
  41ba67:	cwde   
  41ba68:	adc    esi,esi
  41ba6a:	mov    edi,0x283093c8
  41ba6f:	xchg   edx,eax
  41ba70:	fs imul ecx,ebp,0x6abb4814
  41ba77:	scas   eax,DWORD PTR es:[edi]
  41ba78:	jae    0x41ba9d
  41ba7a:	xor    al,0x68
  41ba7c:	sbb    al,0x25
  41ba7e:	out    0xf5,eax
  41ba80:	jp     0x41ba02
  41ba82:	pop    edx
  41ba83:	inc    eax
  41ba84:	sar    BYTE PTR [ebp-0x2d],cl
  41ba87:	lock fdivr st,st(2)
  41ba8a:	pop    es
  41ba8b:	push   cs
  41ba8c:	jno    0x41ba39
  41ba8e:	stc    
  41ba8f:	jb     0x41baa3
  41ba91:	and    eax,esi
  41ba93:	retf   0xaff1
  41ba96:	inc    esp
  41ba97:	mov    ds:0xfea7120,eax
  41ba9c:	dec    edi
  41ba9d:	xor    bl,BYTE PTR [esi-0x2df08215]
  41baa3:	mov    ?,WORD PTR [eax-0x467127d0]
  41baa9:	mov    dl,0x29
  41baab:	push   0x6b
  41baad:	inc    esp
  41baae:	or     DWORD PTR [eax-0x34],edx
  41bab1:	ret    0x887a
  41bab4:	iret   
  41bab5:	sar    bh,1
  41bab7:	retf   
  41bab8:	push   ebx
  41bab9:	push   ebp
  41baba:	enter  0x6013,0x88
  41babe:	xchg   ebx,eax
  41babf:	cmp    DWORD PTR [edx+ebp*2-0x688f36cb],ebp
  41bac6:	jnp    0x41ba90
  41bac8:	int3   
  41bac9:	int    0x93
  41bacb:	retf   0xe73e
  41bace:	out    0x25,eax
  41bad0:	ins    BYTE PTR es:[edi],dx
  41bad1:	dec    ecx
  41bad2:	xchg   esp,eax
  41bad3:	enter  0xddc3,0x8a
  41bad7:	cs loope 0x41bacc
  41bada:	fbstp  TBYTE PTR [ebx+eax*8]
  41badd:	dec    eax
  41bade:	ins    DWORD PTR es:[edi],dx
  41badf:	ins    DWORD PTR es:[edi],dx
  41bae0:	push   ss
  41bae1:	out    0xdc,al
  41bae3:	pusha  
  41bae4:	push   cs
  41bae5:	dec    eax
  41bae6:	or     al,0x41
  41bae8:	lods   al,BYTE PTR ds:[esi]
  41bae9:	stos   BYTE PTR es:[edi],al
  41baea:	jge    0x41bb1f
  41baec:	mov    bl,0x77
  41baee:	mov    ecx,DWORD PTR [eax-0x46642f0e]
  41baf4:	cmp    ch,dl
  41baf6:	push   ss
  41baf7:	push   eax
  41baf8:	xchg   esp,eax
  41baf9:	mov    al,0x84
  41bafb:	dec    si
  41bafd:	in     al,0xbf
  41baff:	leave  
  41bb00:	pop    ebp
  41bb01:	test   ebx,eax
  41bb03:	dec    ebp
  41bb04:	shr    BYTE PTR [edx-0x540f689e],0x44
  41bb0b:	jge    0x41baf4
  41bb0d:	neg    BYTE PTR [ebx]
  41bb0f:	mov    eax,ds:0x43573abc
  41bb14:	(bad)  
  41bb15:	repz shl cl,cl
  41bb18:	pop    ss
  41bb19:	sub    bh,BYTE PTR [ebx]
  41bb1b:	pushf  
  41bb1c:	fnstenv [esi+0x6b]
  41bb1f:	dec    DWORD PTR [ebx+ebx*1-0x54]
  41bb23:	or     dh,al
  41bb25:	and    DWORD PTR [edi-0x3e3a6d6a],0x755946a
  41bb2f:	pop    esp
  41bb30:	push   ebp
  41bb31:	cmp    eax,0x79fe5ea4
  41bb36:	xchg   esp,eax
  41bb37:	lock cld 
  41bb39:	add    edi,ebp
  41bb3b:	pop    edx
  41bb3c:	out    0x22,al
  41bb3e:	sub    edi,ebx
  41bb40:	dec    edi
  41bb41:	pop    edx
  41bb42:	sbb    esp,0x1cc5b6a1
  41bb48:	pop    ecx
  41bb49:	inc    esp
  41bb4a:	out    dx,al
  41bb4b:	fcomp  QWORD PTR [ebx]
  41bb4d:	(bad)  
  41bb4e:	sub    edi,edx
  41bb50:	pop    esp
  41bb51:	mov    eax,DWORD PTR [edx+0x49]
  41bb54:	pop    edx
  41bb55:	outs   dx,BYTE PTR ds:[esi]
  41bb56:	add    al,BYTE PTR [ecx+0x5a]
  41bb59:	sbb    BYTE PTR [ebx-0x551d2c70],0x8d
  41bb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb61:	push   cs
  41bb62:	shl    DWORD PTR [esi],1
  41bb64:	cs dec edi
  41bb66:	mov    ch,0x4f
  41bb68:	lods   al,BYTE PTR ds:[esi]
  41bb69:	and    al,0xa6
  41bb6b:	arpl   WORD PTR [ebp-0x4bb31ed8],bp
  41bb71:	addr16 xor eax,0xfd54d20a
  41bb77:	inc    ebp
  41bb78:	xchg   ecx,eax
  41bb79:	or     dl,BYTE PTR [ebp+0x325f7ebd]
  41bb7f:	xchg   ecx,eax
  41bb80:	test   al,0x3
  41bb82:	xor    al,0xeb
  41bb84:	shl    BYTE PTR [esi-0x647c63c9],0xae
  41bb8b:	xchg   ecx,eax
  41bb8d:	push   ds
  41bb8e:	mov    dl,0xa8
  41bb90:	cmp    cl,BYTE PTR [edi]
  41bb92:	or     eax,0x8a32233
  41bb97:	test   DWORD PTR ds:0xd6bded15,ebx
  41bb9d:	push   eax
  41bb9e:	mov    bl,BYTE PTR [ecx+0x4ef47017]
  41bba4:	jl     0x41bc10
  41bba6:	pop    ebp
  41bba7:	shl    DWORD PTR cs:[ecx+0x35],0xe6
  41bbac:	shr    DWORD PTR [esi+0x2c062e4b],0x76
  41bbb3:	jae    0x41bba6
  41bbb5:	pop    ebp
  41bbb6:	jmp    0x41bc1b
  41bbb8:	nop
  41bbb9:	loop   0x41bb94
  41bbbb:	push   ecx
  41bbbc:	add    ebx,eax
  41bbbe:	adc    BYTE PTR [edi-0x3bc1164d],al
  41bbc4:	test   eax,0x5adf0093
  41bbc9:	xor    al,0xf2
  41bbcb:	pop    esi
  41bbcc:	xor    eax,0xa3e67860
  41bbd1:	loopne 0x41bb68
  41bbd3:	lds    esi,FWORD PTR [eax+ebp*2+0x6a021885]
  41bbda:	push   edx
  41bbdb:	push   ebp
  41bbdc:	loop   0x41bbec
  41bbde:	jnp    0x41bbf8
  41bbe0:	jb     0x41bbe6
  41bbe2:	fldcw  WORD PTR [esi]
  41bbe4:	mov    ebx,ecx
  41bbe6:	adc    eax,0x772dd290
  41bbeb:	(bad)  
  41bbec:	mov    eax,ds:0x72bf9f38
  41bbf1:	call   0x3092:0x56e94c31
  41bbf8:	stos   DWORD PTR es:[edi],eax
  41bbf9:	js     0x41bc36
  41bbfb:	(bad)  
  41bbfc:	aam    0xc4
  41bbfe:	mov    bl,0xab
  41bc00:	xor    ch,0x21
  41bc03:	adc    si,WORD PTR [edx-0x7d]
  41bc07:	inc    ecx
  41bc08:	push   ecx
  41bc09:	imul   ebx,DWORD PTR ss:0xaa2b34bd,0xffffffd1
  41bc11:	push   0x48
  41bc13:	hlt    
  41bc14:	pop    esi
  41bc15:	xor    al,0xd9
  41bc17:	test   DWORD PTR [edi],ebx
  41bc19:	or     BYTE PTR [di+0x4997],0x19
  41bc1f:	ins    DWORD PTR es:[edi],dx
  41bc20:	inc    edi
  41bc21:	fmul   st,st(4)
  41bc23:	push   edx
  41bc24:	add    eax,0xb8df9339
  41bc29:	lahf   
  41bc2a:	adc    al,0x4a
  41bc2c:	and    BYTE PTR [esi-0x2e],ah
  41bc2f:	adc    ebp,0xf105464b
  41bc35:	(bad)  
  41bc36:	out    0xb2,eax
  41bc38:	adc    BYTE PTR [esi-0x4d655873],dh
  41bc3e:	cmp    eax,0xf38a91de
  41bc43:	cmp    al,0xcf
  41bc45:	mov    cl,0x4f
  41bc47:	dec    ebx
  41bc48:	inc    esi
  41bc49:	loope  0x41bc88
  41bc4b:	push   es
  41bc4c:	rcr    DWORD PTR [edx-0x5b7d2c27],1
  41bc52:	stc    
  41bc53:	arpl   WORD PTR [ecx+0x3db04b2a],sp
  41bc59:	fwait
  41bc5a:	dec    eax
  41bc5b:	popa   
  41bc5c:	loopne 0x41bc46
  41bc5e:	ja     0x41bbe1
  41bc60:	push   esi
  41bc61:	cmp    al,0xdd
  41bc63:	arpl   WORD PTR [esi+ecx*2+0xa],bp
  41bc67:	fisubr DWORD PTR [ebp-0x44d93c1]
  41bc6d:	stos   BYTE PTR es:[edi],al
  41bc6e:	ins    DWORD PTR es:[edi],dx
  41bc6f:	inc    esi
  41bc70:	ds push 0xbac53379
  41bc76:	push   0xa3bb3e48
  41bc7b:	sub    ah,BYTE PTR [esp+edi*1]
  41bc7e:	cmp    ch,ah
  41bc80:	xchg   edx,eax
  41bc81:	les    ebx,FWORD PTR fs:[edi]
  41bc84:	std    
  41bc85:	jl     0x41bc62
  41bc87:	addr16 pop ecx
  41bc89:	icebp  
  41bc8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc8b:	jmp    0x4f9c:0x9a7f5470
  41bc92:	xlat   BYTE PTR ds:[ebx]
  41bc93:	in     al,dx
  41bc94:	(bad)  
  41bc95:	push   edx
  41bc96:	cmp    BYTE PTR [ecx-0xe3a03cd],al
  41bc9c:	xor    DWORD PTR [edx],esi
  41bc9e:	xor    eax,0xeced9a81
  41bca3:	test   DWORD PTR [eax],ebp
  41bca5:	push   ecx
  41bca6:	or     eax,0x10ece73e
  41bcab:	xor    bh,BYTE PTR [eax]
  41bcad:	xor    ebx,DWORD PTR [edx+0x5c]
  41bcb0:	pop    ecx
  41bcb1:	lea    ebx,[edx+0x7]
  41bcb4:	push   ds
  41bcb5:	dec    ecx
  41bcb6:	arpl   WORD PTR [edx+0x34cf2d05],bp
  41bcbc:	jnp    0x41bc6c
  41bcbe:	cdq    
  41bcbf:	dec    edx
  41bcc0:	adc    al,BYTE PTR [edi]
  41bcc2:	call   0x61e1:0x5f319215
  41bcc9:	xchg   esp,eax
  41bcca:	mov    BYTE PTR [edi+0x89c0a59],bl
  41bcd0:	ins    BYTE PTR es:[edi],dx
  41bcd1:	cmp    cl,BYTE PTR [ecx+esi*8]
  41bcd4:	sub    al,al
  41bcd6:	sub    ebp,DWORD PTR [esi+0x5b]
  41bcd9:	mov    esp,0xedd67a96
  41bcde:	pop    edi
  41bcdf:	dec    eax
  41bce0:	fstp   DWORD PTR [edx-0x29280ea6]
  41bce6:	test   BYTE PTR [esi],cl
  41bce8:	and    edx,esi
  41bcea:	sub    BYTE PTR [edx-0x2],ah
  41bced:	dec    esp
  41bcee:	xchg   esi,eax
  41bcef:	ret    0xf23b
  41bcf2:	mov    ebp,0xa168a3f1
  41bcf7:	rcr    DWORD PTR [esi],cl
  41bcf9:	call   0xd8438eb2
  41bcfe:	dec    ebx
  41bcff:	loopne 0x41bce1
  41bd01:	inc    edx
  41bd02:	leave  
  41bd03:	mov    WORD PTR [eax-0x68d7565d],es
  41bd09:	fsubr  DWORD PTR [esi+eiz*8]
  41bd0c:	mov    ebp,0xdbb093bc
  41bd11:	push   es
  41bd12:	jno    0x41bcee
  41bd14:	add    ebp,esi
  41bd16:	xchg   ecx,eax
  41bd17:	sahf   
  41bd18:	cmp    al,0xf2
  41bd1a:	xor    ah,BYTE PTR [eax+edi*1-0x4c8c8962]
  41bd21:	mov    ah,bh
  41bd23:	dec    esp
  41bd24:	mov    bh,0xca
  41bd26:	ja     0x41bda7
  41bd28:	sbb    BYTE PTR [edi+0x7cb4e7f1],dh
  41bd2e:	js     0x41bd71
  41bd30:	(bad)  
  41bd31:	shl    BYTE PTR ds:0xdf3c4a44,cl
  41bd37:	rcr    BYTE PTR [eax+0x29aae570],0xf9
  41bd3e:	retf   
  41bd3f:	sub    al,0x18
  41bd41:	fidiv  WORD PTR [ebx+ebp*1]
  41bd44:	push   ebx
  41bd45:	fnstcw WORD PTR [ebp-0x6f]
  41bd48:	push   eax
  41bd49:	ficomp DWORD PTR [esi-0x6cb79916]
  41bd4f:	jl     0x41bd16
  41bd51:	jle    0x41bd70
  41bd53:	cmc    
  41bd54:	jae    0x41bd23
  41bd56:	jp     0x41bd51
  41bd58:	in     eax,0xca
  41bd5a:	je     0x41bd61
  41bd5c:	fucomp st(4)
  41bd5e:	fldcw  WORD PTR [esi-0x1f406a94]
  41bd64:	lods   al,BYTE PTR fs:[esi]
  41bd66:	loope  0x41bd75
  41bd68:	inc    ebp
  41bd69:	inc    esp
  41bd6a:	jae    0x41bd26
  41bd6c:	or     eax,0x52034d60
  41bd71:	push   ecx
  41bd72:	xchg   edi,eax
  41bd73:	fistp  QWORD PTR [edx-0x25a53ca7]
  41bd79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7a:	inc    edx
  41bd7b:	out    dx,al
  41bd7c:	sbb    al,0xc0
  41bd7e:	popa   
  41bd7f:	in     al,dx
  41bd80:	ret    
  41bd81:	leave  
  41bd82:	push   cs
  41bd83:	les    ebx,FWORD PTR [eax]
  41bd85:	xor    DWORD PTR [esi+0x5efb65a],esi
  41bd8b:	sbb    DWORD PTR [eax-0x40],eax
  41bd8e:	push   ds
  41bd8f:	cmp    eax,0xfde9330a
  41bd94:	cs lahf 
  41bd96:	fcmovbe st,st(3)
  41bd98:	pop    eax
  41bd99:	clc    
  41bd9a:	xor    eax,0x741640e0
  41bd9f:	imul   DWORD PTR [ebx-0x6c0b9fd]
  41bda5:	jge    0x41bdc2
  41bda7:	sbb    esp,DWORD PTR [ecx+0x67]
  41bdaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdab:	mov    ebp,0xcb60e677
  41bdb0:	jle    0x41be0c
  41bdb2:	int3   
  41bdb3:	loope  0x41bd56
  41bdb5:	test   BYTE PTR [eax-0x17aa75c],bh
  41bdbb:	pop    ss
  41bdbc:	add    ebx,edi
  41bdbe:	out    0x27,eax
  41bdc0:	cmc    
  41bdc1:	mov    bl,0x60
  41bdc3:	push   eax
  41bdc4:	stos   DWORD PTR es:[edi],eax
  41bdc5:	lods   eax,DWORD PTR ds:[esi]
  41bdc6:	in     eax,0x35
  41bdc8:	dec    edi
  41bdc9:	retf   
  41bdca:	mov    dh,0x12
  41bdcc:	inc    edx
  41bdcd:	mov    dl,BYTE PTR [ecx]
  41bdcf:	lods   eax,DWORD PTR ds:[esi]
  41bdd0:	ds jp  0x41bd83
  41bdd3:	sub    esp,DWORD PTR [esi]
  41bdd5:	and    edi,DWORD PTR [ebx+0x8e1f9a5]
  41bddb:	and    BYTE PTR [ebp+0x3f],bl
  41bdde:	mul    DWORD PTR [ecx+0x37f8c4b2]
  41bde4:	xor    DWORD PTR [ecx+eiz*8],edi
  41bde7:	clc    
  41bde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bde9:	xor    BYTE PTR [ebp-0xf],dh
  41bdec:	adc    cl,ch
  41bdee:	push   cs
  41bdef:	mov    esp,0x80bc90f7
  41bdf4:	test   al,0xaf
  41bdf6:	mov    dh,0xbc
  41bdf8:	out    dx,al
  41bdf9:	aaa    
  41bdfa:	loop   0x41be31
  41bdfc:	push   0xc5a59654
  41be01:	cmp    BYTE PTR [ecx+0x41026698],al
  41be07:	inc    edx
  41be08:	mov    al,ds:0x1c4dd81a
  41be0d:	fnsave [eax-0x59898743]
  41be13:	cmc    
  41be14:	push   ebx
  41be15:	and    DWORD PTR [eax],edx
  41be17:	fmul   DWORD PTR [edx+edi*4]
  41be1a:	fisub  WORD PTR ds:0xab04b963
  41be20:	stc    
  41be21:	std    
  41be22:	std    
  41be23:	jg     0x41bdc2
  41be25:	push   DWORD PTR [edx+0x1d]
  41be28:	xchg   edx,eax
  41be29:	cmp    dh,BYTE PTR [ebx-0x8]
  41be2c:	push   0xffffffbe
  41be2e:	fidiv  DWORD PTR [edi]
  41be30:	jle    0x41be2f
  41be32:	inc    ecx
  41be33:	out    0x96,eax
  41be35:	out    0x8,eax
  41be37:	arpl   WORD PTR [eax-0x19],bp
  41be3a:	sbb    BYTE PTR [ebp-0x1b],0x12
  41be3e:	cmp    eax,0xc5e0b570
  41be43:	or     edi,edx
  41be45:	or     DWORD PTR [esi],esp
  41be47:	xor    esp,esi
  41be49:	fild   QWORD PTR [esi]
  41be4b:	add    ecx,ebp
  41be4d:	sbb    eax,0xc85c0d50
  41be52:	sbb    DWORD PTR [esi+0x42],edx
  41be55:	or     DWORD PTR [ebp+0x4b71ed3d],esp
  41be5b:	out    dx,al
  41be5c:	jo     0x41be1f
  41be5e:	dec    bx
  41be60:	push   cs
  41be61:	mov    ecx,0x9a0f60b0
  41be66:	mov    dl,BYTE PTR [edx+ebp*1-0x77]
  41be6a:	sub    cl,BYTE PTR [edi]
  41be6c:	jmp    0x41be2a
  41be6e:	nop
  41be6f:	int    0x83
  41be71:	cmc    
  41be72:	aad    0x3b
  41be74:	xchg   edx,eax
  41be75:	xchg   ecx,eax
  41be76:	cli    
  41be77:	inc    ecx
  41be78:	(bad)  
  41be7a:	jle    0x41becb
  41be7c:	mov    ch,0x6d
  41be7e:	ins    BYTE PTR es:[edi],dx
  41be7f:	cwde   
  41be80:	bound  edx,QWORD PTR [esp+edi*8-0xf]
  41be84:	sub    ah,BYTE PTR [ebp+0x3c]
  41be87:	dec    ebx
  41be88:	push   edx
  41be89:	xchg   ebp,eax
  41be8a:	dec    ebx
  41be8b:	popf   
  41be8c:	push   edx
  41be8d:	(bad)  
  41be8e:	push   0xa851c9b9
  41be93:	and    al,0x62
  41be95:	jmp    0xea5f:0x93838bda
  41be9c:	inc    ebp
  41be9d:	adc    BYTE PTR [edx-0x6c571f0e],ah
  41bea3:	lods   al,BYTE PTR ds:[esi]
  41bea4:	mov    esi,0x9b6c9a2a
  41bea9:	(bad)  
  41beaa:	in     eax,0xbe
  41beac:	out    0x5b,eax
  41beae:	mov    al,0x53
  41beb0:	test   DWORD PTR [edx+eax*4-0x3ffa934b],esi
  41beb7:	inc    ebp
  41beb8:	xor    ecx,edi
  41beba:	inc    eax
  41bebb:	(bad)  
  41bebc:	or     BYTE PTR [ebp-0x28],bl
  41bebf:	fsubp  st(0),st
  41bec1:	adc    cl,0xbe
  41bec4:	sub    BYTE PTR [esi],bl
  41bec6:	sbb    edx,ebp
  41bec8:	rcl    esp,0x1e
  41becb:	scas   eax,DWORD PTR es:[edi]
  41becc:	adc    eax,0xe0bcdb7c
  41bed1:	std    
  41bed2:	hlt    
  41bed3:	and    ah,BYTE PTR [eax-0x646d32c8]
  41bed9:	xchg   esi,eax
  41beda:	arpl   WORD PTR [ecx+0x7],bx
  41bedd:	jno    0x41becc
  41bedf:	hlt    
  41bee0:	jg     0x41be85
  41bee2:	shl    DWORD PTR [ecx-0x1cf203db],0x64
  41bee9:	outs   dx,BYTE PTR ds:[esi]
  41beea:	cmp    BYTE PTR [esi],ch
  41beec:	or     al,0x51
  41beee:	jmp    0x41beee
  41bef0:	add    eax,DWORD PTR [ecx+0x34]
  41bef3:	ja     0x41bf24
  41bef5:	mov    gs:0xb1a5617,al
  41befb:	ret    
  41befc:	mul    esp
  41befe:	out    0x54,al
  41bf00:	push   ebx
  41bf01:	push   ebx
  41bf02:	dec    ebp
  41bf03:	xor    ebx,edx
  41bf05:	data16 (bad) 
  41bf07:	dec    ecx
  41bf08:	in     al,dx
  41bf09:	or     BYTE PTR [edx-0x359e6f9],dh
  41bf0f:	and    DWORD PTR [eax-0x65],esp
  41bf12:	sub    DWORD PTR [esi],eax
  41bf14:	push   0x18bd513d
  41bf19:	call   0x7b8e8165
  41bf1e:	adc    eax,DWORD PTR ds:0x7eb820d0
  41bf24:	inc    ebx
  41bf25:	pop    ds
  41bf26:	(bad)  
  41bf27:	mov    al,ds:0x416d54da
  41bf2c:	mov    ch,0xf8
  41bf2e:	rcr    DWORD PTR [edi+0x22deafb5],0xee
  41bf35:	retf   
  41bf36:	push   0x28
  41bf38:	(bad)  
  41bf39:	xor    cl,BYTE PTR [eax+0xe]
  41bf3c:	repnz dec si
  41bf40:	data16 int3 
  41bf42:	mov    DWORD PTR [ebx+0x156e0dfc],0x6b32fe83
  41bf4c:	dec    ebx
  41bf4d:	jge    0x41bf99
  41bf4f:	push   esp
  41bf50:	sub    bl,BYTE PTR ds:0x2f03cae2
  41bf56:	or     BYTE PTR [eax],0x7
  41bf59:	mov    ebx,0xd0e8bc5d
  41bf5e:	xor    esi,DWORD PTR [eax-0x3d]
  41bf61:	iret   
  41bf62:	ret    0xb741
  41bf65:	stos   DWORD PTR es:[edi],eax
  41bf66:	gs ins BYTE PTR es:[edi],dx
  41bf68:	outs   dx,DWORD PTR ds:[esi]
  41bf69:	adc    eax,0x15aff443
  41bf6e:	js     0x41bf54
  41bf70:	push   edi
  41bf71:	add    BYTE PTR [ebp+0x3c],bh
  41bf74:	mov    WORD PTR [ebp+0x748bf2b9],fs
  41bf7a:	or     DWORD PTR [esi],0xffffffab
  41bf7d:	xlat   BYTE PTR ds:[ebx]
  41bf7e:	mov    ebx,0x81db8153
  41bf83:	push   DWORD PTR [eax]
  41bf85:	pop    esi
  41bf86:	xlat   BYTE PTR ds:[ebx]
  41bf87:	arpl   WORD PTR [edx+0x6b],ax
  41bf8a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf8c:	or     eax,0xb28816f0
  41bf91:	cmp    bh,BYTE PTR [edx-0x5b]
  41bf94:	pop    eax
  41bf95:	pop    edx
  41bf96:	test   eax,0x7d739844
  41bf9b:	stos   DWORD PTR es:[edi],eax
  41bf9c:	retf   
  41bf9d:	sub    eax,0xabe45fad
  41bfa2:	gs and al,0x80
  41bfa5:	ror    BYTE PTR [eax],0x4a
  41bfa8:	cs sub cl,ch
  41bfab:	pop    eax
  41bfac:	daa    
  41bfad:	adc    al,BYTE PTR [ecx+0x1ee13aef]
  41bfb3:	loope  0x41bfdb
  41bfb5:	outs   dx,BYTE PTR ds:[esi]
  41bfb6:	cli    
  41bfb7:	stc    
  41bfb8:	lods   al,BYTE PTR ds:[esi]
  41bfb9:	push   esi
  41bfba:	jmp    0xa3c33ec0
  41bfbf:	xchg   BYTE PTR [esi-0x7e5f1061],al
  41bfc5:	clc    
  41bfc6:	xchg   edx,eax
  41bfc7:	gs dec edx
  41bfc9:	cld    
  41bfca:	jo     0x41bf72
  41bfcc:	xor    dh,ah
  41bfce:	das    
  41bfcf:	jp     0x41c014
  41bfd1:	mov    esi,0x1c1043e0
  41bfd6:	repz retf 
  41bfd8:	or     BYTE PTR [ebp-0x616da2d7],cl
  41bfde:	pop    edx
  41bfdf:	das    
  41bfe0:	mov    BYTE PTR [edx],dl
  41bfe2:	push   edx
  41bfe3:	cli    
  41bfe4:	stc    
  41bfe5:	(bad)  
  41bfe6:	jge    0x41c003
  41bfe8:	arpl   WORD PTR [eax-0x2f1b40db],bx
  41bfee:	dec    edi
  41bfef:	pop    esi
  41bff0:	jp     0x41c01a
  41bff2:	add    eax,0xfd42b305
  41bff7:	add    dl,ah
  41bff9:	(bad)  
  41bffa:	(bad)  
  41bffb:	js     0x41c011
  41bffd:	into   
  41bffe:	mov    BYTE PTR [ecx+0x3e],dh
  41c001:	and    eax,0x55943085
  41c006:	ret    0x9531
  41c009:	and    bl,bh
  41c00b:	fisub  WORD PTR [edx]
  41c00d:	push   edi
  41c00e:	rcr    DWORD PTR [ebx+0x65],1
  41c011:	xchg   ebp,eax
  41c012:	sahf   
  41c013:	js     0x41c01b
  41c015:	nop
  41c016:	push   ebx
  41c017:	or     bl,BYTE PTR [edx-0x7d]
  41c01a:	push   ebp
  41c01b:	adc    eax,edx
  41c01d:	out    0x16,al
  41c01f:	ss ins DWORD PTR es:[edi],dx
  41c021:	xchg   ecx,eax
  41c022:	jmp    0xcddf:0x934bb868
  41c029:	call   0xbc130967
  41c02e:	(bad)  
  41c02f:	stc    
  41c030:	cdq    
  41c031:	mov    eax,DWORD PTR fs:[ecx+eax*4+0x6739f63d]
  41c039:	adc    al,0xfa
  41c03b:	or     DWORD PTR [eax+0x7bbba552],esp
  41c041:	(bad)  
  41c042:	bound  esi,QWORD PTR [edx]
  41c044:	or     eax,eax
  41c046:	push   ecx
  41c047:	stos   BYTE PTR es:[edi],al
  41c048:	mov    esi,0xecad3cf9
  41c04d:	popa   
  41c04e:	or     eax,edi
  41c050:	push   ebp
  41c051:	arpl   WORD PTR [esi],sp
  41c053:	mov    ds:0xb4dfea35,eax
  41c058:	sub    al,0x5c
  41c05a:	fldcw  WORD PTR [edx+0x1b]
  41c05d:	mov    al,0x4f
  41c05f:	mov    cl,0xbf
  41c061:	(bad)  
  41c062:	mov    bh,0x52
  41c064:	shr    DWORD PTR [ebx],0xfb
  41c067:	gs or  eax,0xddc4ff9e
  41c06d:	gs inc ebx
  41c06f:	adc    eax,0x7ccd1648
  41c074:	pop    ebp
  41c075:	push   esp
  41c076:	arpl   di,dx
  41c078:	je     0x41c03f
  41c07a:	xlat   BYTE PTR ds:[ebx]
  41c07b:	cdq    
  41c07c:	outs   dx,DWORD PTR ds:[esi]
  41c07d:	sbb    BYTE PTR [eax],ch
  41c07f:	sti    
  41c080:	cmc    
  41c081:	xchg   edi,eax
  41c082:	fwait
  41c083:	jns    0x41c0fc
  41c085:	js     0x41c0ff
  41c087:	or     DWORD PTR [edx+0x2b02b07e],eax
  41c08d:	sbb    DWORD PTR [edi+0x1d],ecx
  41c090:	jmp    0xc1df:0xc975461b
  41c097:	push   ds
  41c098:	jo     0x41c084
  41c09a:	push   cs
  41c09b:	or     esp,esi
  41c09d:	push   ss
  41c09e:	mov    eax,0x21c63ff7
  41c0a3:	outs   dx,BYTE PTR ds:[esi]
  41c0a4:	mov    eax,0x27356106
  41c0a9:	sbb    ebp,DWORD PTR [ecx+0x68]
  41c0ac:	leave  
  41c0ad:	in     al,0x2
  41c0af:	repnz dec esp
  41c0b1:	(bad)  
  41c0b2:	mov    ecx,0x3acf866a
  41c0b7:	(bad)  
  41c0b8:	aad    0xbc
  41c0ba:	jmp    0xa00fa61
  41c0bf:	mov    ebp,0x19f4c4c4
  41c0c4:	mov    DWORD PTR [esi-0x4897015c],esi
  41c0ca:	xchg   esi,eax
  41c0cb:	push   ds
  41c0cc:	fcomp  QWORD PTR [ebp-0x33]
  41c0cf:	aas    
  41c0d0:	adc    eax,0xbe79fb32
  41c0d5:	sbb    esi,eax
  41c0d7:	xchg   edx,eax
  41c0d8:	add    eax,0xe4f1b418
  41c0dd:	ins    BYTE PTR es:[edi],dx
  41c0de:	push   ss
  41c0df:	add    ecx,DWORD PTR [ebp-0x2c]
  41c0e2:	(bad)  
  41c0e3:	js     0x41c0c6
  41c0e5:	push   ecx
  41c0e6:	lock and ah,dl
  41c0e9:	mov    ebp,0xbeba7b5c
  41c0ee:	mov    BYTE PTR [eax+0x51],al
  41c0f1:	gs push edx
  41c0f3:	dec    ebx
  41c0f4:	lds    eax,FWORD PTR [edx]
  41c0f6:	mov    BYTE PTR [ebp+0x23],dl
  41c0f9:	nop
  41c0fa:	jecxz  0x41c0b5
  41c0fc:	pop    edx
  41c0fd:	(bad)  
  41c0fe:	jo     0x41c091
  41c100:	imul   esp,esi,0xf8d31509
  41c106:	stos   BYTE PTR es:[edi],al
  41c107:	sbb    esp,eax
  41c109:	sbb    ch,BYTE PTR [eax]
  41c10b:	dec    eax
  41c10c:	jp     0x41c0e1
  41c10e:	mov    ah,BYTE PTR [eax]
  41c110:	xchg   esi,eax
  41c111:	or     BYTE PTR ds:0xea61cdc9,bl
  41c117:	and    al,dh
  41c119:	sub    DWORD PTR [esi],edx
  41c11b:	mov    WORD PTR [esi],gs
  41c11d:	std    
  41c11e:	fdivr  st,st(3)
  41c120:	jmp    0x7b69:0x50cf06f7
  41c127:	ds push eax
  41c129:	fwait
  41c12a:	cpuid  
  41c12c:	cmp    ebp,DWORD PTR ds:0xe9b68699
  41c132:	mov    bh,dl
  41c134:	mov    ecx,0x4f5ecea3
  41c139:	inc    ebx
  41c13a:	xchg   DWORD PTR [esi],edi
  41c13c:	les    esp,FWORD PTR [edx+0x4d]
  41c13f:	pop    ecx
  41c140:	mov    al,0x71
  41c142:	cs adc eax,0x8ec2541e
  41c148:	jbe    0x41c0e7
  41c14a:	sbb    DWORD PTR [edi],ebx
  41c14c:	outs   dx,DWORD PTR ds:[esi]
  41c14d:	int    0x57
  41c14f:	loope  0x41c174
  41c151:	jno    0x41c0fb
  41c153:	fnop   
  41c155:	sub    DWORD PTR [esi-0x9],edi
  41c158:	xchg   ebp,eax
  41c159:	push   esp
  41c15a:	sub    DWORD PTR [edi-0xccd249b],ebx
  41c160:	cwde   
  41c161:	push   ds
  41c162:	xchg   edi,eax
  41c163:	std    
  41c164:	arpl   WORD PTR [ebx+0x5b63cf0],si
  41c16a:	pop    esi
  41c16b:	jg     0x41c1e2
  41c16d:	jmp    0x105d:0x7ba691d1
  41c174:	mov    bh,0x46
  41c176:	into   
  41c177:	sbb    bh,bl
  41c179:	scas   eax,DWORD PTR es:[edi]
  41c17a:	adc    eax,0x58cc295
  41c17f:	int3   
  41c180:	sub    esi,DWORD PTR [ebx+0x4]
  41c183:	xor    eax,0x2b761d50
  41c188:	jns    0x41c173
  41c18a:	mov    ebx,0x3e1fdebd
  41c18f:	pop    esi
  41c190:	cmp    dh,bl
  41c192:	sahf   
  41c193:	push   eax
  41c194:	sbb    dl,bh
  41c196:	or     eax,0x11f2501
  41c19b:	cmp    DWORD PTR [ecx],esi
  41c19d:	pop    ebx
  41c19e:	lea    ebx,[esi-0xa]
  41c1a1:	psubd  mm2,QWORD PTR [esi]
  41c1a4:	ss out 0x2c,al
  41c1a7:	and    esi,ebp
  41c1a9:	clc    
  41c1aa:	mov    ecx,0x4e57506c
  41c1af:	popa   
  41c1b0:	mov    db3,ecx
  41c1b3:	mov    esp,0x9364dcd7
  41c1b8:	mov    ecx,0xba268a70
  41c1bd:	loop   0x41c1b2
  41c1bf:	sub    ah,BYTE PTR gs:[edx-0x4c]
  41c1c3:	pop    ebp
  41c1c4:	out    0xb9,eax
  41c1c6:	inc    esp
  41c1c7:	pop    ss
  41c1c8:	(bad)  
  41c1c9:	inc    ecx
  41c1cb:	arpl   dx,si
  41c1cd:	outs   dx,BYTE PTR ds:[esi]
  41c1ce:	popa   
  41c1cf:	mov    eax,0xf44c3685
  41c1d4:	addr16 xchg esi,eax
  41c1d6:	mov    esp,0xb85d2038
  41c1db:	loopne 0x41c1b8
  41c1dd:	aad    0xa8
  41c1df:	dec    esp
  41c1e0:	cs iret 
  41c1e2:	cmp    al,0x74
  41c1e4:	mov    fs,WORD PTR [ecx+0x3e]
  41c1e7:	dec    ecx
  41c1e8:	mov    ebp,0xc246f6a0
  41c1ed:	or     eax,0x913c62e5
  41c1f2:	loop   0x41c1ac
  41c1f4:	mov    al,ds:0xbc8b2507
  41c1f9:	or     eax,0x8f65cccb
  41c1fe:	cmp    esp,0xc6f9203c
  41c204:	xor    DWORD PTR [edi+0x5bcc7121],0xcc195d99
  41c20e:	cmp    al,BYTE PTR [edi]
  41c210:	cs ds pop esp
  41c213:	mov    cl,0x16
  41c215:	push   cs
  41c216:	mov    dh,0x76
  41c218:	aam    0xd6
  41c21a:	xchg   edi,eax
  41c21b:	jno    0x41c203
  41c21d:	xor    DWORD PTR [ebx+0x77],0xffffff84
  41c221:	push   edx
  41c222:	push   ebp
  41c223:	cmp    DWORD PTR [eax+ebp*2-0x19],ebx
  41c227:	and    eax,0xb9c047ba
  41c22c:	fs das 
  41c22e:	out    0x7c,al
  41c230:	adc    ebp,DWORD PTR [eax+0x67e55486]
  41c236:	jl     0x41c1e4
  41c238:	sub    eax,0x5b20e101
  41c23d:	and    al,0xeb
  41c23f:	or     BYTE PTR [ebp-0xe],dl
  41c242:	push   ds
  41c243:	cld    
  41c244:	xor    DWORD PTR [esi],esp
  41c246:	in     al,dx
  41c247:	das    
  41c248:	adc    dh,BYTE PTR [ebp+0x30]
  41c24b:	call   0x1450:0xa72f6c4e
  41c252:	xchg   esp,eax
  41c253:	xchg   ebp,eax
  41c254:	(bad)  
  41c256:	pushf  
  41c257:	and    DWORD PTR [ebp+0x1120f5c4],0x2a9cc11b
  41c261:	push   ebp
  41c262:	jmp    0x7a036e0c
  41c267:	or     BYTE PTR [eax-0x7b],0x87
  41c26b:	push   ebp
  41c26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c26d:	jecxz  0x41c282
  41c26f:	mov    eax,0xcd67c324
  41c274:	mov    ebp,0xbacde23a
  41c279:	int    0x9e
  41c27b:	sub    edi,DWORD PTR [ebp-0x17]
  41c27e:	ret    
  41c27f:	fbstp  TBYTE PTR es:[edi+0x6b]
  41c283:	mov    ebp,0xf8bd9584
  41c288:	into   
  41c289:	shl    BYTE PTR [ecx+0x40],0x54
  41c28d:	aad    0x58
  41c28f:	pushf  
  41c290:	loopne 0x41c2f9
  41c292:	cwde   
  41c293:	(bad)  
  41c296:	add    ch,ah
  41c298:	pop    edi
  41c299:	leave  
  41c29a:	shl    ebx,0x4e
  41c29d:	cmc    
  41c29e:	sbb    DWORD PTR [ecx+0x4a],edi
  41c2a1:	mov    ds:0x6a93e676,eax
  41c2a6:	fs lahf 
  41c2a8:	out    dx,al
  41c2a9:	push   ds
  41c2aa:	jmp    0x13792cb
  41c2af:	jbe    0x41c2ca
  41c2b1:	xchg   edx,eax
  41c2b2:	xchg   esi,eax
  41c2b3:	adc    eax,0x1fff400e
  41c2b8:	inc    ebx
  41c2b9:	(bad)  
  41c2ba:	imul   edx,DWORD PTR [edx+0x2b2cba2f],0x1e
  41c2c1:	add    eax,0xe3b9a1d1
  41c2c6:	popf   
  41c2c7:	ja     0x41c24f
  41c2c9:	jecxz  0x41c310
  41c2cb:	repz inc esi
  41c2cd:	pop    ecx
  41c2ce:	div    BYTE PTR [eax]
  41c2d0:	mov    dl,0x3b
  41c2d2:	or     al,0x76
  41c2d4:	xor    DWORD PTR [ebx-0x451d261],edx
  41c2da:	popf   
  41c2db:	icebp  
  41c2dc:	and    DWORD PTR [ebx-0x12bbe886],edx
  41c2e2:	es jno 0x41c2ae
  41c2e5:	scas   eax,DWORD PTR es:[edi]
  41c2e6:	ins    DWORD PTR es:[edi],dx
  41c2e7:	cmc    
  41c2e8:	test   al,0x0
  41c2ea:	push   0xffffffdd
  41c2ec:	cs dec ebp
  41c2ee:	cmp    esp,esp
  41c2f0:	cli    
  41c2f1:	pop    ecx
  41c2f2:	arpl   si,sp
  41c2f4:	fbld   TBYTE PTR [edi-0x733be68a]
  41c2fa:	sub    ebp,ebp
  41c2fc:	sbb    al,0x1c
  41c2fe:	ins    DWORD PTR es:[edi],dx
  41c2ff:	pop    ss
  41c300:	xchg   ebp,eax
  41c301:	push   edi
  41c302:	lock push eax
  41c304:	fnstsw WORD PTR [esi+0x378a244f]
  41c30a:	mov    ah,0x45
  41c30c:	out    dx,al
  41c30d:	outs   dx,DWORD PTR ds:[esi]
  41c30e:	les    edx,FWORD PTR [esi]
  41c310:	test   dh,ch
  41c312:	fwait
  41c313:	push   edi
  41c314:	arpl   cx,bx
  41c316:	sar    BYTE PTR [esi],cl
  41c318:	push   eax
  41c319:	dec    ebp
  41c31a:	in     eax,0x33
  41c31c:	mov    ebx,0x43c613f7
  41c321:	loopne 0x41c356
  41c323:	ror    DWORD PTR [eax],cl
  41c325:	adc    dl,0x7a
  41c328:	call   0x98c62675
  41c32d:	adc    ch,BYTE PTR [eax]
  41c32f:	dec    eax
  41c330:	mov    bh,0x58
  41c332:	adc    bh,BYTE PTR es:[ecx-0x7d]
  41c336:	ror    bl,0x10
  41c339:	popa   
  41c33a:	in     eax,0x44
  41c33c:	jmp    0x9f25:0x343a2cd3
  41c343:	adc    dl,BYTE PTR [ebx-0x1f]
  41c346:	or     ebp,DWORD PTR [eax]
  41c348:	push   ebx
  41c349:	xchg   ecx,eax
  41c34a:	icebp  
  41c34b:	mov    bh,0xa4
  41c34d:	clc    
  41c34e:	push   esi
  41c34f:	(bad)
  41c352:	pop    ebp
  41c353:	mov    ecx,0x3b28f9dc
  41c358:	push   cs
  41c359:	fdiv   DWORD PTR [ebx]
  41c35b:	aas    
  41c35c:	cdq    
  41c35d:	ins    BYTE PTR es:[edi],dx
  41c35e:	fistp  QWORD PTR [ecx+0x4a]
  41c361:	popa   
  41c362:	(bad)  
  41c363:	out    0x47,al
  41c365:	inc    esp
  41c366:	jecxz  0x41c3d0
  41c368:	sti    
  41c369:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c36b:	adc    eax,0x76155413
  41c370:	xchg   ecx,eax
  41c371:	mov    esi,0x5f97c6af
  41c376:	and    DWORD PTR [edi-0x30debda3],esi
  41c37c:	(bad)  
  41c37d:	pop    edx
  41c37e:	(bad)  
  41c37f:	adc    eax,0xd34c417d
  41c384:	in     eax,dx
  41c385:	cdq    
  41c386:	loope  0x41c3f3
  41c388:	cdq    
  41c389:	jge    0x41c403
  41c38b:	lds    eax,FWORD PTR [ebp+0x48]
  41c38e:	push   edi
  41c38f:	cmp    DWORD PTR [edi],0x3b
  41c392:	jmp    0x18d2fa9f
  41c397:	mov    bh,0x5b
  41c399:	push   ss
  41c39a:	cwde   
  41c39b:	adc    BYTE PTR [edx+0x40eb976],bh
  41c3a1:	push   ecx
  41c3a2:	outs   dx,DWORD PTR ds:[esi]
  41c3a3:	stos   BYTE PTR es:[edi],al
  41c3a4:	lods   eax,DWORD PTR ds:[esi]
  41c3a5:	loop   0x41c327
  41c3a7:	mov    dl,0xe
  41c3a9:	mov    esp,0xfe575a89
  41c3ae:	in     eax,dx
  41c3af:	ja     0x41c347
  41c3b1:	stos   BYTE PTR es:[edi],al
  41c3b2:	wrmsr  
  41c3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3b5:	mov    bh,0x4c
  41c3b7:	mov    cl,0xd3
  41c3b9:	cmp    ch,BYTE PTR [ebx]
  41c3bb:	dec    edi
  41c3bc:	or     al,0xca
  41c3be:	add    dl,BYTE PTR [ebp-0x4a0c7b01]
  41c3c4:	sbb    DWORD PTR [ebx+ecx*8+0x2ec213c],edx
  41c3cb:	push   0xffffffd6
  41c3cd:	sub    eax,0xd1707287
  41c3d2:	mov    ?,WORD PTR [ecx+0x54]
  41c3d5:	xor    BYTE PTR [esi+0x8e548bb],al
  41c3db:	xlat   BYTE PTR ds:[ebx]
  41c3dc:	sub    eax,0x60a5b2da
  41c3e1:	lods   al,BYTE PTR ds:[esi]
  41c3e2:	jl     0x41c416
  41c3e4:	aad    0x88
  41c3e6:	pop    ds
  41c3e7:	mov    ch,0x1a
  41c3e9:	ret    0x645
  41c3ec:	(bad)  
  41c3ed:	mov    ebx,0xfeb6bf61
  41c3f2:	mov    ds:0x82c734fa,al
  41c3f7:	pop    esp
  41c3f8:	push   ebx
  41c3f9:	out    0xd6,al
  41c3fb:	sbb    eax,0x3e90b762
  41c400:	jo     0x41c3e8
  41c402:	test   eax,0xafd99683
  41c407:	mov    bl,0xcc
  41c409:	jl     0x41c45a
  41c40b:	jp     0x41c410
  41c40d:	aam    0xcb
  41c40f:	xchg   ebp,eax
  41c410:	inc    eax
  41c411:	mov    al,ds:0x8d9648ad
  41c416:	sub    ch,bh
  41c418:	mov    ds:0x1db59d6a,al
  41c41d:	je     0x41c489
  41c41f:	mov    ecx,0xac789e27
  41c424:	(bad)  
  41c425:	(bad)  
  41c426:	xchg   esp,eax
  41c427:	mov    cl,ch
  41c429:	adc    esi,0xdd4d1df0
  41c42f:	cmp    dh,al
  41c431:	mov    ds:0xc247ecc0,eax
  41c436:	aad    0xcc
  41c438:	dec    DWORD PTR [ecx+0x40701877]
  41c43e:	mov    eax,ds:0x2b77cdf8
  41c443:	lds    edi,FWORD PTR [eax+ebp*8]
  41c446:	dec    esp
  41c447:	fs loopne 0x41c3d4
  41c44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44b:	xchg   esi,eax
  41c44c:	loopne 0x41c48c
  41c44e:	jnp    0x41c453
  41c450:	fucomp st(0)
  41c452:	inc    edx
  41c453:	subps  xmm3,XMMWORD PTR [esi-0x3e]
  41c457:	jnp    0x41c445
  41c459:	xchg   ebx,eax
  41c45a:	sahf   
  41c45b:	pop    ecx
  41c45c:	out    0xe0,eax
  41c45e:	out    0x2e,eax
  41c460:	mov    esp,DWORD PTR ds:0xf3e42dd1
  41c466:	mov    ?,WORD PTR [ebp+0x18]
  41c469:	inc    esp
  41c46a:	or     bh,dl
  41c46c:	fidiv  WORD PTR [eax-0x56b289df]
  41c472:	scas   eax,DWORD PTR es:[edi]
  41c473:	pop    esp
  41c474:	das    
  41c475:	inc    ebx
  41c476:	test   al,0x19
  41c478:	sub    eax,0xbba6a9bf
  41c47d:	or     eax,0x79b359a6
  41c482:	mov    edi,0xa422916
  41c487:	ds dec esi
  41c489:	mov    ecx,0xbdce22c7
  41c48e:	imul   esi,DWORD PTR [esi],0xd87a15b3
  41c494:	mov    al,BYTE PTR cs:[ecx]
  41c497:	push   ebx
  41c498:	scas   al,BYTE PTR es:[di]
  41c49a:	mov    ds:0xd81bd029,al
  41c49f:	daa    
  41c4a0:	lods   al,BYTE PTR ds:[esi]
  41c4a1:	xchg   BYTE PTR [esi],bl
  41c4a3:	cmp    al,0xb5
  41c4a5:	jns    0x41c484
  41c4a7:	cmp    dl,cl
  41c4a9:	call   0x9e1ab970
  41c4ae:	ret    
  41c4af:	outs   dx,BYTE PTR ds:[esi]
  41c4b0:	xor    dl,BYTE PTR [esi+0x3551e1a3]
  41c4b6:	push   ecx
  41c4b7:	inc    esi
  41c4b8:	jmp    0x1d6d60e9
  41c4bd:	fs das 
  41c4bf:	pushf  
  41c4c0:	rcl    BYTE PTR [ecx+eiz*4],1
  41c4c3:	or     ebx,ecx
  41c4c5:	sub    eax,0x5cdc6f1f
  41c4ca:	js     0x41c546
  41c4cc:	inc    ecx
  41c4cd:	inc    ebx
  41c4ce:	push   esi
  41c4cf:	lock mov dl,0x82
  41c4d2:	fiadd  WORD PTR [eax+0x68b2b422]
  41c4d8:	and    eax,DWORD PTR [eax+0x11]
  41c4db:	jo     0x41c50e
  41c4dd:	pop    ebp
  41c4de:	mov    esi,0xa3e31cef
  41c4e3:	mov    dl,0x5e
  41c4e5:	sub    al,0x28
  41c4e7:	mov    cl,0x90
  41c4e9:	xor    esi,DWORD PTR [edx+0x241c7bb4]
  41c4ef:	sar    BYTE PTR [ebx+0x369a18f],1
  41c4f5:	cmp    edi,ecx
  41c4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4f8:	cld    
  41c4f9:	daa    
  41c4fa:	daa    
  41c4fb:	jmp    0xf09b:0x3dda944d
  41c502:	pop    ebx
  41c503:	fcomp  QWORD PTR [esi-0x3dece187]
  41c509:	int    0x22
  41c50b:	loopne 0x41c54f
  41c50d:	mov    ecx,0xcbf57ebb
  41c512:	mov    BYTE PTR [ebp-0x218a0f17],0x2f
  41c519:	cmp    DWORD PTR [esi-0x31],ebp
  41c51c:	fcmovbe st,st(3)
  41c51e:	aam    0x19
  41c520:	fild   QWORD PTR [ecx+ecx*8-0x5ae4e71f]
  41c527:	mov    ecx,0xded795d
  41c52c:	or     al,0xc2
  41c52e:	cwde   
  41c52f:	fidivr DWORD PTR [esi-0x2e]
  41c532:	outs   dx,BYTE PTR ds:[esi]
  41c533:	daa    
  41c534:	or     eax,0x61193740
  41c539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c53a:	add    BYTE PTR [edx],al
  41c53c:	and    BYTE PTR [ebx],bh
  41c53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c53f:	sub    ebp,0x75ada3a7
  41c545:	sub    ebx,DWORD PTR [ebx+0x76]
  41c548:	jnp    0x41c4f5
  41c54a:	fidivr DWORD PTR [esi-0x6f]
  41c54d:	pop    es
  41c54e:	cmp    BYTE PTR [eax-0x5b664022],0x8a
  41c555:	leave  
  41c556:	cmp    al,0xa0
  41c558:	mov    ds:0xd27b9a4b,eax
  41c55d:	mov    ebx,0x3ab504ee
  41c562:	sub    dh,bl
  41c564:	fmul   st,st(5)
  41c566:	or     esi,0xfa08292c
  41c56c:	fstp   DWORD PTR [edi+edx*1]
  41c56f:	int3   
  41c570:	or     DWORD PTR [ecx+0x25],esp
  41c573:	std    
  41c574:	inc    edx
  41c575:	addr16 push 0x38e403d7
  41c57b:	push   ebp
  41c57c:	xor    al,0xbf
  41c57e:	cmp    DWORD PTR [edi+ebx*8-0x143593dc],edx
  41c585:	mov    al,0x33
  41c587:	hlt    
  41c588:	stos   DWORD PTR es:[edi],eax
  41c589:	fild   WORD PTR [edi]
  41c58b:	clc    
  41c58c:	mov    BYTE PTR [ebp+0x6d200844],dl
  41c592:	mov    ds:0x26ca7ab6,al
  41c597:	pop    ss
  41c598:	mov    edi,0xeb5a8b2f
  41c59d:	and    bh,BYTE PTR [esi+0x5f]
  41c5a0:	retf   
  41c5a1:	mov    al,ds:0xd6f1529a
  41c5a6:	mov    gs,WORD PTR fs:[edx]
  41c5a9:	xchg   ebx,eax
  41c5aa:	dec    BYTE PTR [ebp-0x5602dc39]
  41c5b0:	aam    0x30
  41c5b2:	pause  
  41c5b4:	int3   
  41c5b5:	gs sbb cl,ah
  41c5b8:	in     al,0xa2
  41c5ba:	cmp    dl,BYTE PTR ds:0x62c94a3b
  41c5c0:	inc    eax
  41c5c1:	mov    eax,ds:0x6a3d0057
  41c5c6:	sbb    ebx,eax
  41c5c8:	jbe    0x41c608
  41c5ca:	outs   dx,DWORD PTR ds:[esi]
  41c5cb:	mov    DWORD PTR [edx-0x72c79088],esi
  41c5d1:	test   ch,cl
  41c5d3:	data16 jae 0x41c64b
  41c5d6:	test   al,0x99
  41c5d8:	aad    0xfa
  41c5da:	mov    al,0xcb
  41c5dc:	inc    BYTE PTR [ebp-0x55]
  41c5df:	aam    0x44
  41c5e1:	ficomp WORD PTR [esp+ebx*1-0x667c6cb]
  41c5e8:	das    
  41c5e9:	pop    ds
  41c5ea:	sub    al,0xf8
  41c5ec:	addr16 push edi
  41c5ee:	or     bl,BYTE PTR [ebx+0x41a4c25f]
  41c5f4:	aam    0xc8
  41c5f6:	adc    dl,al
  41c5f8:	(bad)  
  41c5f9:	aas    
  41c5fa:	adc    DWORD PTR [eax],edx
  41c5fc:	das    
  41c5fd:	stos   DWORD PTR es:[edi],eax
  41c5fe:	cmp    BYTE PTR [ecx+ebx*2],bh
  41c601:	push   ecx
  41c602:	or     BYTE PTR [ebp-0x77],bl
  41c605:	mov    ds:0xa13b79b7,eax
  41c60a:	and    cl,bl
  41c60c:	lahf   
  41c60d:	std    
  41c60e:	adc    al,0xe
  41c610:	mov    bh,0x6e
  41c612:	mov    edx,0x8f995c2c
  41c617:	mov    al,0xaf
  41c619:	data16 outs dx,BYTE PTR ds:[esi]
  41c61b:	mov    al,ds:0x78c94de
  41c620:	out    0x70,al
  41c622:	sti    
  41c623:	xchg   edi,eax
  41c624:	pop    esi
  41c625:	sub    DWORD PTR [edi],0x4807d53a
  41c62b:	xchg   edx,eax
  41c62c:	(bad)  
  41c62d:	aad    0x82
  41c62f:	lods   eax,DWORD PTR ds:[esi]
  41c630:	stos   BYTE PTR es:[edi],al
  41c631:	pop    esi
  41c632:	mov    DWORD PTR [edx+esi*8-0x3f],ecx
  41c636:	mov    esi,0x890f8f01
  41c63b:	cmp    BYTE PTR [eax],dh
  41c63d:	retf   
  41c63e:	lahf   
  41c63f:	xchg   esi,eax
  41c640:	scas   eax,DWORD PTR es:[edi]
  41c641:	inc    edx
  41c642:	ins    BYTE PTR es:[edi],dx
  41c643:	and    al,BYTE PTR [edi+0x36]
  41c646:	retf   0xe6d0
  41c649:	(bad)  
  41c64a:	sbb    al,0xb5
  41c64c:	adc    al,0x95
  41c64e:	pop    ds
  41c64f:	jb     0x41c658
  41c651:	fidivr DWORD PTR ds:0xc825839
  41c657:	movhps QWORD PTR [ecx-0x51dd33be],xmm1
  41c65e:	(bad)  
  41c65f:	push   edi
  41c660:	xor    bl,BYTE PTR [edi]
  41c662:	arpl   WORD PTR [edi],bx
  41c664:	mov    DWORD PTR [edi-0x78],esp
  41c667:	test   esp,eax
  41c669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c66a:	xchg   esi,eax
  41c66b:	cwde   
  41c66c:	aas    
  41c66d:	mov    eax,ds:0x1d74bc49
  41c672:	pop    eax
  41c673:	cmp    DWORD PTR [edi],0x58
  41c676:	aaa    
  41c677:	gs fdivr DWORD PTR gs:[esp+eiz*4-0x4a]
  41c67d:	or     eax,0xbe329be2
  41c682:	and    BYTE PTR [eax+0x56bb210d],ah
  41c688:	jmp    0xf4fb:0x1c4ba4a0
  41c68f:	stos   BYTE PTR es:[edi],al
  41c690:	sub    BYTE PTR [edi+0x22],0xa6
  41c694:	pop    ss
  41c695:	nop
  41c696:	mov    ch,0x42
  41c698:	xchg   ebx,eax
  41c699:	xor    eax,0x52184d82
  41c69e:	repnz xchg esp,eax
  41c6a0:	fild   QWORD PTR ds:0x45612740
  41c6a6:	ret    
  41c6a7:	cli    
  41c6a8:	xchg   edi,eax
  41c6a9:	jmp    0x22d58a3d
  41c6ae:	fidivr DWORD PTR [esi]
  41c6b0:	std    
  41c6b1:	jns    0x41c659
  41c6b3:	ret    
  41c6b4:	sub    esi,DWORD PTR [eax+0x37]
  41c6b7:	sbb    DWORD PTR [ecx-0x26],edx
  41c6ba:	and    esp,ebp
  41c6bc:	dec    ebp
  41c6bd:	xor    al,0x8e
  41c6bf:	clc    
  41c6c0:	push   es
  41c6c1:	(bad)  
  41c6c2:	mov    bh,0x59
  41c6c4:	cld    
  41c6c5:	push   edi
  41c6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c7:	jbe    0x41c656
  41c6c9:	rcl    BYTE PTR [ebp-0x54],0xce
  41c6cd:	test   BYTE PTR [ecx],bh
  41c6cf:	mov    cl,0x7
  41c6d1:	lds    ebp,FWORD PTR [eax+0x4b65643e]
  41c6d7:	pusha  
  41c6d8:	xchg   esp,eax
  41c6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6da:	js     0x41c734
  41c6dc:	pop    eax
  41c6dd:	(bad)  
  41c6de:	enter  0x51fb,0x9f
  41c6e2:	ror    edi,1
  41c6e4:	popa   
  41c6e5:	xor    bh,BYTE PTR [edi+0x3246cafc]
  41c6eb:	bound  ecx,QWORD PTR cs:[eax-0x624703f2]
  41c6f2:	ficomp DWORD PTR [edx]
  41c6f4:	mov    dh,0xec
  41c6f6:	xchg   esp,eax
  41c6f7:	and    esi,esp
  41c6f9:	(bad)  
  41c6fa:	or     al,0xc9
  41c6fc:	inc    edx
  41c6fd:	aaa    
  41c6fe:	in     eax,0xe8
  41c700:	fadd   st,st(4)
  41c702:	enter  0x966f,0xf5
  41c706:	lock cmp ebp,0x458e429f
  41c70d:	inc    esp
  41c70e:	lods   al,BYTE PTR ds:[esi]
  41c70f:	mov    eax,ds:0x3b19e37e
  41c714:	push   es
  41c715:	pop    ecx
  41c716:	ds test al,0xd9
  41c719:	push   esp
  41c71a:	mov    dh,0x21
  41c71c:	jo     0x41c751
  41c71e:	jp     0x41c6a2
  41c720:	hlt    
  41c721:	mov    ebp,ebx
  41c723:	adc    DWORD PTR es:[edi+0x3451eb6d],esi
  41c72a:	dec    edx
  41c72b:	xor    DWORD PTR [ebx],edi
  41c72d:	test   BYTE PTR [eax-0x57],al
  41c730:	(bad)  
  41c731:	sti    
  41c732:	fist   WORD PTR [edx-0xec02823]
  41c738:	adc    eax,0x97f06be6
  41c73d:	mov    WORD PTR [esi-0x5e],?
  41c740:	out    dx,al
  41c741:	loopne 0x41c777
  41c743:	nop
  41c744:	in     eax,0x6e
  41c746:	lds    esi,FWORD PTR [ecx-0x1abd6be2]
  41c74c:	add    al,0x3
  41c74e:	out    dx,eax
  41c74f:	inc    ecx
  41c750:	fbld   TBYTE PTR [esi-0x4e]
  41c753:	mov    dl,dh
  41c755:	(bad)  
  41c756:	pop    ebp
  41c757:	sub    eax,0xd9bfe0c2
  41c75c:	fwait
  41c75d:	test   al,0x6b
  41c75f:	test   BYTE PTR [ebx],bh
  41c761:	mov    edx,0x3ef8bd54
  41c766:	stc    
  41c767:	mov    ds,WORD PTR [ebp+0x34]
  41c76a:	(bad)  
  41c76b:	mov    edi,0x3ee18446
  41c770:	ds enter 0xada3,0xa0
  41c775:	daa    
  41c776:	mov    bx,WORD PTR [ecx]
  41c779:	lock sub dh,bl
  41c77c:	mov    al,ds:0x559d6363
  41c781:	mov    cl,0x23
  41c783:	mov    eax,ds:0x7ea0fd57
  41c788:	(bad)  
  41c789:	fmulp  st(2),st
  41c78b:	dec    esi
  41c78c:	ss pop es
  41c78e:	loop   0x41c721
  41c790:	daa    
  41c791:	in     eax,dx
  41c792:	adc    al,0xe4
  41c794:	inc    ebp
  41c795:	retf   0x7de6
  41c798:	push   ecx
  41c799:	mov    edi,0x4f4aba06
  41c79e:	retf   0xa32d
  41c7a1:	mov    al,0xf4
  41c7a3:	pop    edx
  41c7a4:	cld    
  41c7a5:	inc    esi
  41c7a6:	lods   al,BYTE PTR ds:[esi]
  41c7a7:	lods   eax,DWORD PTR ds:[esi]
  41c7a8:	jecxz  0x41c76b
  41c7aa:	push   cs
  41c7ab:	push   ebx
  41c7ac:	mov    BYTE PTR [ebp+esi*1+0x7],ah
  41c7b0:	in     al,0xcb
  41c7b2:	mov    esp,0xde3cfce6
  41c7b7:	mov    ch,0xe5
  41c7b9:	inc    DWORD PTR [ecx-0x8]
  41c7bc:	xchg   edi,eax
  41c7bd:	dec    esi
  41c7be:	inc    esi
  41c7bf:	loopne 0x41c792
  41c7c1:	idiv   DWORD PTR [ebx-0x73f21267]
  41c7c7:	dec    ebp
  41c7c8:	sub    DWORD PTR ds:0x74e821e6,edx
  41c7ce:	adc    eax,0x84c0933d
  41c7d3:	cmp    al,0xe6
  41c7d5:	adc    DWORD PTR [edx],edi
  41c7d7:	mov    BYTE PTR [ebx+0x3c],0xf
  41c7db:	fidiv  WORD PTR [edi-0x471ddaa3]
  41c7e1:	sbb    dh,BYTE PTR [edi-0x27935408]
  41c7e7:	pop    ebp
  41c7e8:	pop    ecx
  41c7e9:	popa   
  41c7ea:	addr16 add eax,0xb57f89e2
  41c7f0:	(bad)  
  41c7f1:	fisttp WORD PTR [eax+0x3e493345]
  41c7f7:	fldz   
  41c7f9:	push   ebp
  41c7fa:	popf   
  41c7fb:	cmp    eax,DWORD PTR [esi+0x3c]
  41c7fe:	add    eax,0x998a3b16
  41c803:	lds    edx,FWORD PTR [ebp+0x1c]
  41c806:	jae    0x41c817
  41c808:	xor    eax,0x59adb8b1
  41c80d:	loop   0x41c7f6
  41c80f:	mov    edi,esi
  41c811:	fcom   DWORD PTR [esp+ebp*1-0x450763ee]
  41c818:	mov    dh,0x2d
  41c81a:	xchg   BYTE PTR [eax+edx*4-0x71],bh
  41c81e:	sub    al,0x3b
  41c820:	mov    ebp,0x214c1aac
  41c825:	push   esi
  41c826:	adc    eax,DWORD PTR [eax]
  41c828:	aad    0x8c
  41c82a:	mov    esp,0xf4172583
  41c82f:	xchg   esp,eax
  41c830:	and    esi,0x79
  41c833:	lock pop ebx
  41c835:	adc    ecx,DWORD PTR [edx-0x67]
  41c838:	jmp    0x41c872
  41c83a:	retf   0x7c32
  41c83d:	adc    BYTE PTR [eax-0x7f],0x6
  41c841:	jns    0x41c851
  41c843:	jecxz  0x41c831
  41c845:	es es cs mov bl,0xd6
  41c84a:	test   eax,0xb806abdc
  41c84f:	in     al,0x7c
  41c851:	or     eax,0x71510540
  41c856:	fistp  DWORD PTR [edi+edi*2+0x4866dc03]
  41c85d:	push   edx
  41c85e:	xchg   ebp,eax
  41c85f:	jp     0x41c829
  41c861:	sub    BYTE PTR [edx+edx*8],0xcb
  41c865:	xor    eax,0x417899ad
  41c86a:	rcl    esp,1
  41c86c:	hlt    
  41c86d:	enter  0x255c,0x79
  41c871:	(bad)  
  41c872:	fdivr  QWORD PTR [edi+0x43]
  41c875:	sub    DWORD PTR [ecx+esi*1-0x18],edi
  41c879:	sbb    al,0x8
  41c87b:	sbb    ebx,esp
  41c87d:	pop    edx
  41c87e:	loope  0x41c8bb
  41c880:	cmp    ebp,DWORD PTR [esi]
  41c882:	pushf  
  41c883:	imul   ebp,DWORD PTR [ecx+0x45],0xffffffa8
  41c887:	das    
  41c888:	test   al,0x37
  41c88a:	add    eax,esi
  41c88c:	rcr    ebx,0x88
  41c88f:	jmp    0x21c0:0x18ec34fb
  41c896:	mov    al,BYTE PTR ds:0xcf7b2df4
  41c89c:	and    dh,BYTE PTR [ecx+0x64ebe5c3]
  41c8a2:	test   al,0x7d
  41c8a4:	push   eax
  41c8a5:	pop    edx
  41c8a6:	add    DWORD PTR cs:[esi],ebp
  41c8a9:	push   edi
  41c8aa:	popa   
  41c8ab:	add    DWORD PTR [eax-0x61],ebp
  41c8ae:	or     eax,0xcba5406
  41c8b3:	mov    eax,ds:0x5ea3b1d
  41c8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b9:	sub    BYTE PTR [edi-0xfcb1a46],al
  41c8bf:	fsub   DWORD PTR [ebx-0x6a]
  41c8c2:	add    DWORD PTR [edi+0x7f],0x9b6721f8
  41c8c9:	and    al,0x2f
  41c8cb:	stos   BYTE PTR es:[edi],al
  41c8cc:	add    eax,0x3b2db985
  41c8d1:	outs   dx,BYTE PTR ds:[esi]
  41c8d2:	mov    edx,0x2bbeb916
  41c8d7:	jg     0x41c872
  41c8d9:	jo     0x41c86c
  41c8db:	push   edi
  41c8dc:	mov    DWORD PTR [esi-0x257b141c],ebp
  41c8e2:	dec    esi
  41c8e3:	lea    ebx,[eax-0x1d7173b9]
  41c8e9:	inc    ebx
  41c8ea:	outs   dx,BYTE PTR ds:[esi]
  41c8eb:	or     BYTE PTR [ebx-0x15],0x21
  41c8ef:	cmp    edx,DWORD PTR [eax+0x7c186e00]
  41c8f5:	mov    esi,0x45205bf4
  41c8fa:	sub    dl,BYTE PTR [esi-0x753c0558]
  41c900:	xor    al,0x35
  41c902:	and    ecx,DWORD PTR [ecx+ecx*8+0x6e]
  41c906:	mov    cs,WORD PTR ds:0x7ba8e87b
  41c90c:	mov    esi,0x2431bb26
  41c911:	jle    0x41c951
  41c913:	addr16 test al,0x5a
  41c916:	icebp  
  41c917:	xor    DWORD PTR [esi+0x1f4cb6bd],ebp
  41c91d:	mov    cl,0x7b
  41c91f:	xchg   esp,eax
  41c920:	pop    esp
  41c921:	adc    DWORD PTR [ebp+0x5],edx
  41c924:	dec    edi
  41c925:	popf   
  41c926:	jmp    0x41c933
  41c928:	jnp    0x41c948
  41c92a:	scas   eax,DWORD PTR es:[edi]
  41c92b:	pop    ecx
  41c92c:	(bad)  
  41c92d:	fcmovnb st,st(0)
  41c92f:	mov    ch,0xb1
  41c931:	arpl   WORD PTR [ecx],di
  41c933:	je     0x41c8c0
  41c935:	lods   eax,DWORD PTR ds:[esi]
  41c936:	sub    ch,ch
  41c938:	ficom  WORD PTR [eax+0x5ed0156c]
  41c93e:	jno    0x41c9a8
  41c940:	dec    esp
  41c941:	leave  
  41c942:	adc    eax,0x8eec2787
  41c947:	in     al,dx
  41c948:	stos   BYTE PTR es:[edi],al
  41c949:	cmp    eax,0x9e6dea5c
  41c94e:	xchg   BYTE PTR [edx-0x5bf8b3fb],bh
  41c954:	mov    eax,ds:0x80310a74
  41c959:	dec    esp
  41c95a:	ret    
  41c95b:	sti    
  41c95c:	mov    al,0x94
  41c95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c95f:	imul   edx,DWORD PTR [esi],0xffffffd4
  41c962:	enter  0x4ec0,0x42
  41c966:	xor    ah,BYTE PTR [ebx-0x3fa2c83d]
  41c96c:	repz in al,dx
  41c96e:	repnz inc ebx
  41c970:	cmp    edx,DWORD PTR [ebx+0x32]
  41c973:	cmp    BYTE PTR [edi+0x15e40630],al
  41c979:	jns    0x41c931
  41c97b:	mov    BYTE PTR [ebx+0x25],bh
  41c97e:	mov    BYTE PTR [ecx+0x4a],ch
  41c981:	addps  xmm0,XMMWORD PTR [edi+0x9]
  41c985:	mov    cl,0x44
  41c987:	(bad)  
  41c988:	xlat   BYTE PTR ds:[ebx]
  41c989:	push   esi
  41c98a:	inc    DWORD PTR [eax+0x2545fed9]
  41c990:	mov    ch,0xf
  41c992:	rcr    DWORD PTR [ecx+eiz*1+0x73],cl
  41c996:	sub    DWORD PTR ds:0xb0b7a123,esp
  41c99c:	jecxz  0x41c9b4
  41c99e:	sub    al,0x2a
  41c9a0:	add    dh,BYTE PTR [ecx+edi*4]
  41c9a3:	stc    
  41c9a4:	push   es
  41c9a5:	adc    al,al
  41c9a7:	mov    gs,edx
  41c9a9:	mov    ebp,0x5913642d
  41c9ae:	hlt    
  41c9af:	mov    eax,ds:0x965c8cb6
  41c9b4:	test   al,0xd3
  41c9b6:	inc    esp
  41c9b7:	mov    BYTE PTR [edi],al
  41c9b9:	jno    0x41ca2e
  41c9bb:	mov    bl,0xd2
  41c9bd:	jae    0x41c99e
  41c9bf:	dec    eax
  41c9c0:	push   ebx
  41c9c1:	sbb    BYTE PTR [edx+0x4a],dh
  41c9c4:	mov    edx,0x732d1ffe
  41c9c9:	sub    DWORD PTR [esi+0x2ebb5555],ecx
  41c9cf:	cli    
  41c9d0:	mov    ds,eax
  41c9d2:	inc    esi
  41c9d3:	(bad)  
  41c9d5:	lods   eax,DWORD PTR ds:[esi]
  41c9d6:	mov    cl,0x48
  41c9d8:	cmp    DWORD PTR [esi-0x6b],ecx
  41c9db:	cmp    ebx,DWORD PTR [ecx+0x5d936a1b]
  41c9e1:	mov    ds:0x9dd01731,eax
  41c9e6:	pop    bx
  41c9e8:	iret   
  41c9e9:	imul   esp,DWORD PTR [edi-0x78],0xffffffff
  41c9ed:	mov    WORD PTR [esi-0xc],gs
  41c9f0:	xchg   DWORD PTR [ebp-0x2d640d2d],ebp
  41c9f6:	shl    BYTE PTR [edx+0xb913d46],0xe7
  41c9fd:	xchg   ebx,esi
  41c9ff:	fld    TBYTE PTR [ecx]
  41ca01:	xor    ebp,DWORD PTR [ebx+0x2f721f9f]
  41ca07:	shl    BYTE PTR [edi-0x476ab85d],cl
  41ca0d:	neg    BYTE PTR [ecx-0x35]
  41ca10:	lds    eax,FWORD PTR [ebx]
  41ca12:	lods   al,BYTE PTR ds:[esi]
  41ca13:	rcl    BYTE PTR ds:0x3fafd002,0x51
  41ca1a:	mov    ebp,0x2d8b5455
  41ca1f:	jne    0x41ca22
  41ca21:	or     eax,0x45fec8d3
  41ca26:	into   
  41ca27:	push   esi
  41ca28:	ror    al,cl
  41ca2a:	stos   BYTE PTR es:[edi],al
  41ca2b:	fbld   TBYTE PTR [esi]
  41ca2d:	std    
  41ca2e:	rol    BYTE PTR [edi+0x684efc99],0x33
  41ca35:	popa   
  41ca36:	rol    DWORD PTR [esi+edi*2-0x16],1
  41ca3a:	aaa    
  41ca3b:	mov    bl,0xef
  41ca3d:	inc    esp
  41ca3e:	push   edx
  41ca3f:	push   eax
  41ca40:	mov    edx,0x28031c20
  41ca45:	sub    al,0x61
  41ca47:	ss mov esi,0x2e305c7f
  41ca4d:	fs jne 0x41cab0
  41ca50:	les    ebx,FWORD PTR [edi-0x7c]
  41ca53:	dec    eax
  41ca54:	push   ss
  41ca55:	pop    ss
  41ca56:	imul   edi,DWORD PTR [esi+esi*4+0x535a1044],0xffffffe7
  41ca5e:	push   esp
  41ca5f:	out    0xe0,eax
  41ca61:	fwait
  41ca62:	lods   eax,DWORD PTR ds:[esi]
  41ca63:	push   edi
  41ca64:	outs   dx,BYTE PTR ds:[esi]
  41ca65:	repnz dec esi
  41ca67:	xor    edx,DWORD PTR [edi-0x6b3a1f7d]
  41ca6d:	stos   DWORD PTR es:[edi],eax
  41ca6e:	jmp    0x7ae4:0x90be2ae
  41ca75:	inc    eax
  41ca76:	add    dh,0xcd
  41ca79:	fcom   QWORD PTR [edi-0x128d42e5]
  41ca7f:	lods   al,BYTE PTR ss:[esi]
  41ca81:	inc    eax
  41ca82:	mov    ch,0xf1
  41ca84:	test   DWORD PTR [edi-0x23],esp
  41ca87:	bnd jg 0x41cad8
  41ca8a:	push   ebx
  41ca8b:	inc    ebp
  41ca8c:	mov    bh,0xae
  41ca8e:	pushf  
  41ca8f:	adc    al,0x33
  41ca91:	xor    al,0x45
  41ca93:	icebp  
  41ca94:	jbe    0x41caf2
  41ca96:	dec    edi
  41ca97:	sub    eax,DWORD PTR [esi+0x1]
  41ca9a:	mov    bh,0xd2
  41ca9c:	xor    esp,edi
  41ca9e:	xchg   esi,eax
  41ca9f:	sub    ah,0xc6
  41caa2:	add    BYTE PTR [ecx+0x6031b6a5],cl
  41caa8:	fcom   QWORD PTR [eax+0x2e0abf26]
  41caae:	dec    eax
  41caaf:	adc    eax,0x13316dd4
  41cab4:	shl    BYTE PTR [ecx-0x5a],1
  41cab7:	xchg   esp,eax
  41cab8:	cmp    al,0x2a
  41caba:	jno    0x41ca7b
  41cabc:	icebp  
  41cabd:	ins    BYTE PTR es:[edi],dx
  41cabe:	call   0x5bb1:0xf023254c
  41cac5:	and    DWORD PTR [ebx-0x612d9d36],ecx
  41cacb:	mov    DWORD PTR [esi+ebx*1+0x4f],ebp
  41cacf:	mov    ebp,0x409a90da
  41cad4:	sub    DWORD PTR [ebp-0x33],ebx
  41cad7:	adc    ecx,esp
  41cad9:	js     0x41ca7f
  41cadb:	cli    
  41cadc:	mov    ds:0x2c47b34b,al
  41cae1:	jne    0x41cb3f
  41cae3:	sub    cl,BYTE PTR [esi+0x56e99739]
  41cae9:	or     DWORD PTR cs:[eax],edx
  41caec:	aam    0x91
  41caee:	cld    
  41caef:	mov    DWORD PTR [eax-0x65],ecx
  41caf2:	xor    eax,0x9b37bd71
  41caf7:	js     0x41cb57
  41caf9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41cafb:	in     al,0xa1
  41cafd:	adc    al,0x57
  41caff:	push   edx
  41cb00:	imul   edi,DWORD PTR [esi+0x5f],0xb03c0bde
  41cb07:	mov    eax,0x22e5b6
  41cb0c:	das    
  41cb0d:	popf   
  41cb0e:	mov    eax,0x8fc34ea4
  41cb13:	outs   dx,BYTE PTR ds:[esi]
  41cb14:	sub    eax,0xf02ee365
  41cb19:	pushf  
  41cb1a:	pop    ecx
  41cb1b:	test   BYTE PTR [ebx-0x52],al
  41cb1e:	push   sp
  41cb20:	lods   eax,DWORD PTR ds:[esi]
  41cb21:	(bad)  
  41cb22:	std    
  41cb23:	and    cl,BYTE PTR [edx+0x7c097b5e]
  41cb29:	cmp    bh,ch
  41cb2b:	xchg   edx,eax
  41cb2c:	jge    0x41cb93
  41cb2e:	jo     0x41caf7
  41cb30:	dec    ebx
  41cb31:	fcmovne st,st(1)
  41cb33:	mov    bl,0xb2
  41cb35:	sub    DWORD PTR [ebx-0x15e9762],ebx
  41cb3b:	xchg   ebp,eax
  41cb3c:	ficomp WORD PTR [edx]
  41cb3e:	add    eax,ebx
  41cb40:	pop    edi
  41cb41:	mov    ebp,0x26d1e731
  41cb46:	pop    ebx
  41cb47:	pop    es
  41cb48:	sub    eax,0x5e825435
  41cb4d:	repnz inc edx
  41cb4f:	lds    edx,FWORD PTR es:[ecx]
  41cb52:	aam    0x38
  41cb54:	xchg   ebp,eax
  41cb55:	imul   esi,DWORD PTR [eax],0xffffffbc
  41cb58:	int    0xa8
  41cb5a:	cmp    edx,DWORD PTR [eax+0x1]
  41cb5d:	arpl   WORD PTR [edi-0x2d],ax
  41cb60:	call   0x1b68:0xee809b25
  41cb67:	popa   
  41cb68:	dec    edx
  41cb69:	xchg   DWORD PTR [eax-0x7258eec9],ebx
  41cb6f:	ret    0x9a19
  41cb72:	jg     0x41cbd2
  41cb74:	pop    esi
  41cb75:	mov    ecx,0x8d9df793
  41cb7a:	lea    ebp,[edx-0x63]
  41cb7d:	sbb    bh,bl
  41cb7f:	cs pop es
  41cb81:	adc    eax,0xb97900d5
  41cb86:	int    0xa2
  41cb88:	mov    dh,0x82
  41cb8a:	popa   
  41cb8b:	into   
  41cb8c:	mov    ecx,0x338eb093
  41cb91:	mov    BYTE PTR [ecx],cl
  41cb93:	adc    eax,0xfc5cc4ab
  41cb98:	mov    fs,WORD PTR [edx+0x7c123f4b]
  41cb9e:	aam    0x49
  41cba0:	mov    al,ds:0x6f17468f
  41cba5:	pop    edi
  41cba6:	fdivr  st,st(5)
  41cba8:	into   
  41cba9:	fadd   QWORD PTR [edx-0x28]
  41cbac:	xchg   al,ch
  41cbae:	imul   edx,DWORD PTR [ebp+0x22d8a413],0xc78a06ed
  41cbb8:	mov    DWORD PTR [edx-0x54],esi
  41cbbb:	cwde   
  41cbbc:	xor    BYTE PTR [ecx+0x1baaca48],dh
  41cbc2:	out    0xc7,al
  41cbc4:	jae    0x41cbc7
  41cbc6:	mov    ah,0xf
  41cbc8:	xor    DWORD PTR [eax+ebp*2],ebx
  41cbcb:	(bad)  
  41cbcc:	loop   0x41cc1a
  41cbce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbcf:	dec    edi
  41cbd0:	jne    0x41cc2f
  41cbd2:	inc    eax
  41cbd3:	mov    ebp,0x8738044d
  41cbd8:	(bad)  
  41cbd9:	lods   eax,DWORD PTR ds:[esi]
  41cbda:	popf   
  41cbdb:	fmul   DWORD PTR [esi+0x507cfa11]
  41cbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe2:	aaa    
  41cbe3:	lahf   
  41cbe4:	sub    BYTE PTR [ebp+0x7bb6301],dh
  41cbea:	cmp    DWORD PTR ds:[edx-0x6c],0xfbd4bd61
  41cbf2:	sbb    bh,ch
  41cbf4:	ss mov edx,0x5c243613
  41cbfa:	mov    bl,0x1b
  41cbfc:	int3   
  41cbfd:	sub    esp,0x5f
  41cc00:	in     al,0x21
  41cc02:	cmp    bl,BYTE PTR [edi+0x37]
  41cc05:	clc    
  41cc06:	xor    eax,0xd6d5492e
  41cc0b:	out    dx,eax
  41cc0c:	sbb    ecx,DWORD PTR [ecx+ecx*1-0x495bff98]
  41cc13:	gs xor edx,0xfffffffe
  41cc17:	xchg   DWORD PTR [edi],eax
  41cc19:	or     DWORD PTR [edi+eiz*8+0x6b],esi
  41cc1d:	xor    al,0x83
  41cc1f:	shl    BYTE PTR [ebp+0xa17299e],1
  41cc25:	gs mov cr7,eax
  41cc29:	or     DWORD PTR [edi+ebx*4],ebx
  41cc2c:	outs   dx,BYTE PTR ds:[esi]
  41cc2d:	call   0xda88ef7c
  41cc32:	push   0x7d
  41cc34:	dec    ebx
  41cc35:	in     al,dx
  41cc36:	and    dh,BYTE PTR [ecx]
  41cc38:	jb     0x41cc72
  41cc3a:	hlt    
  41cc3b:	push   esi
  41cc3c:	sub    BYTE PTR [ebp+0x390ec43d],0xb5
  41cc43:	jbe    0x41cc49
  41cc45:	push   edx
  41cc46:	jne    0x41cc98
  41cc48:	es in  al,0xd5
  41cc4b:	inc    eax
  41cc4c:	push   edi
  41cc4d:	js     0x41cccc
  41cc4f:	push   edx
  41cc50:	js     0x41cca6
  41cc52:	mov    bl,0x63
  41cc54:	shl    DWORD PTR [esp+ebp*2],1
  41cc57:	in     eax,dx
  41cc58:	dec    BYTE PTR [esi]
  41cc5a:	push   esi
  41cc5b:	mov    dl,BYTE PTR [esi+0x6c]
  41cc5e:	stos   BYTE PTR es:[edi],al
  41cc5f:	test   DWORD PTR [ecx],edx
  41cc61:	mov    dh,0x11
  41cc63:	test   eax,0x7abf9926
  41cc68:	sub    DWORD PTR [eax+0x388aff16],esp
  41cc6e:	popf   
  41cc6f:	sti    
  41cc70:	lea    edx,[edx-0x726f896e]
  41cc76:	nop
  41cc77:	sbb    eax,0x466d9d12
  41cc7c:	jmp    0x41cc3e
  41cc7e:	or     edx,DWORD PTR [edx+0x3b]
  41cc81:	mov    ds:0x2f50f3a7,al
  41cc86:	push   0x44
  41cc88:	aad    0x6f
  41cc8a:	ror    DWORD PTR [ebx-0x13],cl
  41cc8d:	xor    DWORD PTR [edi+0x44],edx
  41cc90:	rcl    ebp,0x82
  41cc93:	pop    ebp
  41cc94:	repnz ins DWORD PTR es:[edi],dx
  41cc96:	loope  0x41cced
  41cc98:	not    BYTE PTR [edx+0x58]
  41cc9b:	or     DWORD PTR [eax],edi
  41cc9d:	fwait
  41cc9e:	jge    0x41cc74
  41cca0:	mov    bh,0x82
  41cca2:	mov    al,ds:0x731c6390
  41cca7:	adc    ch,BYTE PTR [esi+ebx*2-0xe35853f]
  41ccae:	enter  0x1dd3,0x7d
  41ccb2:	aaa    
  41ccb3:	push   0x4636d92c
  41ccb8:	sub    dh,BYTE PTR [ecx+0x1b152959]
  41ccbe:	or     eax,DWORD PTR [di-0x34]
  41ccc2:	(bad)  
  41ccc3:	push   edi
  41ccc4:	adc    si,si
  41ccc7:	cdq    
  41ccc8:	inc    edx
  41ccc9:	jge    0x41cd27
  41cccb:	sub    eax,0xd7a722f1
  41ccd0:	mov    DWORD PTR [ecx-0x2d],esp
  41ccd3:	ss es dec edx
  41ccd6:	cmp    eax,0x936e89d3
  41ccdb:	popf   
  41ccdc:	sti    
  41ccdd:	popf   
  41ccde:	aas    
  41ccdf:	jle    0x41cc90
  41cce1:	retf   0x72fa
  41cce4:	pop    ecx
  41cce5:	scas   al,BYTE PTR es:[edi]
  41cce6:	pop    ecx
  41cce7:	push   es
  41cce8:	pop    ebx
  41cce9:	inc    edi
  41ccea:	lahf   
  41cceb:	cmp    BYTE PTR [ebp-0x59a09d45],al
  41ccf1:	sub    bl,BYTE PTR [esi+eiz*8+0x1f]
  41ccf5:	aam    0x4
  41ccf7:	dec    eax
  41ccf8:	js     0x41cc87
  41ccfa:	or     BYTE PTR [ebp-0x7],0x69
  41ccfe:	scas   al,BYTE PTR es:[edi]
  41ccff:	pop    ds
  41cd00:	sbb    ch,BYTE PTR ds:0xf776d6af
  41cd06:	cmp    dh,cl
  41cd08:	ror    BYTE PTR [edx-0x42d9a4b6],cl
  41cd0e:	lock cmp al,BYTE PTR [eax-0x11d6b66]
  41cd15:	xor    DWORD PTR [eax+0x12],0x36cf5ade
  41cd1c:	aad    0x85
  41cd1e:	add    DWORD PTR cs:[ebx+0x76],edi
  41cd22:	scas   eax,DWORD PTR es:[edi]
  41cd23:	xchg   DWORD PTR [eax+esi*2-0x250a6c64],esi
  41cd2a:	dec    esi
  41cd2b:	or     bh,bl
  41cd2d:	test   BYTE PTR [esi-0x36],al
  41cd30:	cmp    edx,DWORD PTR [ebp+0x53]
  41cd33:	fistp  QWORD PTR [edi-0x4]
  41cd36:	xor    eax,0xd2e4ccfb
  41cd3b:	jns    0x41cd30
  41cd3d:	iret   
  41cd3e:	cmp    DWORD PTR [ecx-0x3f1af0ef],eax
  41cd44:	mov    edx,0xd57bcc99
  41cd49:	int    0x34
  41cd4b:	push   cs
  41cd4c:	pop    eax
  41cd4d:	mov    WORD PTR [edx-0x559b7739],ds
  41cd53:	(bad)  [edi]
  41cd55:	xor    esi,DWORD PTR [eax]
  41cd57:	addr16 pushf 
  41cd59:	cld    
  41cd5a:	jbe    0x41cce9
  41cd5c:	add    al,0x3c
  41cd5e:	scas   al,BYTE PTR es:[edi]
  41cd5f:	xor    eax,0x38dd36d5
  41cd64:	mov    ah,0x39
  41cd66:	mov    dh,0xac
  41cd68:	iret   
  41cd69:	adc    al,0x6
  41cd6b:	ins    BYTE PTR es:[edi],dx
  41cd6c:	dec    edi
  41cd6d:	dec    ecx
  41cd6e:	(bad)  
  41cd6f:	sar    cl,cl
  41cd71:	add    ebx,DWORD PTR ss:[eax]
  41cd74:	jbe    0x41cd0d
  41cd76:	xchg   esi,eax
  41cd77:	ret    0x1fad
  41cd7a:	pop    edi
  41cd7b:	and    al,0xf0
  41cd7d:	pusha  
  41cd7e:	pop    eax
  41cd7f:	cmc    
  41cd80:	pop    edi
  41cd81:	xchg   ebp,eax
  41cd82:	fisubr DWORD PTR [edx-0x2d2d4ce1]
  41cd88:	mov    bh,0xd5
  41cd8a:	je     0x41cde1
  41cd8c:	outs   dx,DWORD PTR ds:[esi]
  41cd8d:	imul   ecx,DWORD PTR [edx+0x63],0x2f1d4a42
  41cd94:	out    0x33,eax
  41cd96:	or     edx,ebp
  41cd98:	adc    esp,ebx
  41cd9a:	sub    DWORD PTR ds:0xc20e3d28,edx
  41cda0:	push   0x52
  41cda2:	test   BYTE PTR [edx+0x60567e93],al
  41cda8:	shr    DWORD PTR [ecx-0x10fc0edd],0xc7
  41cdaf:	cwde   
  41cdb0:	pop    eax
  41cdb1:	test   DWORD PTR [ebx],ebx
  41cdb3:	sbb    DWORD PTR [ebx+ebp*4-0x30],0x4d47da2f
  41cdbb:	mov    dh,0xcd
  41cdbd:	add    ah,cl
  41cdbf:	push   es
  41cdc0:	lahf   
  41cdc1:	or     al,0x4c
  41cdc3:	jmp    0x3c62:0xb1476bfa
  41cdca:	dec    ebx
  41cdcb:	lods   eax,DWORD PTR ds:[esi]
  41cdcc:	pop    edx
  41cdcd:	jne    0x41cdd9
  41cdcf:	xchg   ebp,eax
  41cdd0:	pop    esi
  41cdd1:	cmp    BYTE PTR [ebp+0x451d22a],0x98
  41cdd8:	push   cs
  41cdd9:	cld    
  41cdda:	jmp    0xafbe6a6e
  41cddf:	nop
  41cde0:	jno    0x41cdfe
  41cde2:	cmp    eax,0xc7f177b5
  41cde7:	ror    esp,cl
  41cde9:	fldenv [esi]
  41cdeb:	and    DWORD PTR [eax],esi
  41cded:	and    al,0xe9
  41cdef:	add    eax,0x192d3c6a
  41cdf4:	aam    0x38
  41cdf6:	out    0x7b,al
  41cdf8:	jecxz  0x41ce06
  41cdfa:	xor    DWORD PTR [edx-0x5d95be69],edx
  41ce00:	es aas 
  41ce02:	enter  0x9e3c,0xe2
  41ce06:	xchg   esi,eax
  41ce07:	(bad)  
  41ce08:	shl    esp,0xc1
  41ce0b:	pop    ds
  41ce0c:	mov    ?,ebx
  41ce0e:	dec    ecx
  41ce0f:	pop    ss
  41ce10:	fldcw  WORD PTR [edi+eax*8-0x30]
  41ce14:	adc    esi,eax
  41ce16:	push   es
  41ce17:	xchg   edx,eax
  41ce18:	dec    eax
  41ce19:	pop    ecx
  41ce1a:	push   esi
  41ce1b:	mov    ds:0x183f7fbe,al
  41ce20:	mov    ebx,ecx
  41ce22:	stos   DWORD PTR es:[edi],eax
  41ce23:	push   ecx
  41ce24:	jmp    0x41ce74
  41ce26:	pop    ebp
  41ce27:	repz jp 0x41ce7c
  41ce2a:	pop    ds
  41ce2b:	and    esp,DWORD PTR [esi]
  41ce2d:	add    bl,BYTE PTR [ebx+0x616d8d93]
  41ce33:	in     al,dx
  41ce34:	icebp  
  41ce35:	dec    esi
  41ce36:	clc    
  41ce37:	(bad)  
  41ce38:	add    edi,edi
  41ce3a:	out    dx,al
  41ce3b:	push   0xffffff92
  41ce3d:	gs push eax
  41ce3f:	loope  0x41cdf1
  41ce41:	pusha  
  41ce42:	not    DWORD PTR [esi]
  41ce44:	repz in eax,dx
  41ce46:	lods   al,BYTE PTR ds:[esi]
  41ce47:	out    dx,al
  41ce48:	aam    0x3
  41ce4a:	in     al,dx
  41ce4b:	jle    0x41ce91
  41ce4d:	jg     0x41ce34
  41ce4f:	repnz xor DWORD PTR [ecx-0x2c],esi
  41ce53:	test   BYTE PTR [edi],ch
  41ce55:	loope  0x41ce5c
  41ce57:	or     edx,DWORD PTR [ebp-0xf]
  41ce5a:	dec    edi
  41ce5b:	fldenv [eax+0x11b6395b]
  41ce61:	int    0x92
  41ce63:	in     al,0x83
  41ce65:	push   ebp
  41ce66:	jg     0x41ce7a
  41ce68:	xchg   ebx,eax
  41ce69:	adc    al,0x32
  41ce6b:	cs fs jl 0x41cee2
  41ce6f:	fldenv [edx]
  41ce71:	dec    esi
  41ce72:	mov    ch,0x1
  41ce74:	sbb    DWORD PTR [ecx-0x5c],ebx
  41ce77:	jmp    0x41ce33
  41ce79:	loopne 0x41ceb0
  41ce7b:	(bad)  
  41ce7c:	lahf   
  41ce7d:	push   ecx
  41ce7e:	and    eax,0xa7e8a522
  41ce83:	and    ah,bh
  41ce85:	jnp    0x41ce8a
  41ce87:	lods   al,BYTE PTR ds:[esi]
  41ce88:	adc    esi,DWORD PTR [ebx+0x303985d7]
  41ce8e:	fstp   DWORD PTR ds:0xec17d8f0
  41ce94:	pop    ecx
  41ce95:	sbb    DWORD PTR [ecx+0x199bb34d],ecx
  41ce9b:	bound  eax,QWORD PTR [ecx+0x642f0c99]
  41cea1:	fistp  WORD PTR ds:0x1a89e79
  41cea7:	push   es
  41cea8:	pop    es
  41cea9:	arpl   bx,ax
  41ceab:	aaa    
  41ceac:	inc    esp
  41cead:	xor    al,0x4f
  41ceaf:	cli    
  41ceb0:	push   ds
  41ceb1:	(bad)  
  41ceb2:	pop    edi
  41ceb3:	inc    ecx
  41ceb4:	push   ds
  41ceb5:	mov    bh,0x57
  41ceb7:	aad    0xbe
  41ceb9:	aas    
  41ceba:	shl    DWORD PTR [edx-0x66eb9e4e],cl
  41cec0:	ds inc esi
  41cec2:	stc    
  41cec3:	inc    edx
  41cec4:	add    al,BYTE PTR [ecx+0x42]
  41cec7:	xchg   esi,eax
  41cec8:	sbb    edx,DWORD PTR es:[edx+0xace3dad]
  41cecf:	xchg   BYTE PTR [ebp-0x6dc5aa6b],dl
  41ced5:	pushf  
  41ced6:	cld    
  41ced7:	loopne 0x41ce93
  41ced9:	or     al,0x68
  41cedb:	sbb    bh,BYTE PTR fs:[eax+esi*2-0x2fa872ee]
  41cee3:	icebp  
  41cee4:	inc    edx
  41cee5:	mov    ch,0xbc
  41cee7:	lahf   
  41cee8:	xor    DWORD PTR [edx+0x6d096c28],0xdf79784a
  41cef2:	xchg   edx,eax
  41cef3:	adc    eax,0xfa51e04e
  41cef8:	das    
  41cef9:	sub    BYTE PTR [ebx-0x6f63b80b],ch
  41ceff:	jecxz  0x41ceee
  41cf01:	lods   al,BYTE PTR ds:[esi]
  41cf02:	mov    esp,0x536f4911
  41cf07:	xchg   ebx,eax
  41cf08:	mov    eax,ds:0x7fa2f281
  41cf0d:	and    eax,0x3a26f464
  41cf12:	and    DWORD PTR [esi-0x75f52fac],edx
  41cf18:	rcr    bl,cl
  41cf1a:	add    ch,cl
  41cf1c:	fld    DWORD PTR [edi+0x3287d637]
  41cf22:	xchg   edx,eax
  41cf23:	cmp    eax,0x570af698
  41cf28:	mov    esp,0x1730ade8
  41cf2d:	dec    edi
  41cf2e:	pushf  
  41cf2f:	dec    ebp
  41cf30:	in     eax,dx
  41cf31:	out    dx,eax
  41cf32:	or     eax,0xf67df9fd
  41cf37:	sub    ah,BYTE PTR [ebp-0x66]
  41cf3a:	sbb    ah,dh
  41cf3c:	leave  
  41cf3d:	bound  ecx,QWORD PTR [edi+0x773b800]
  41cf43:	mov    edi,cs
  41cf45:	adc    esi,ebp
  41cf47:	dec    edx
  41cf48:	jae    0x41cfc0
  41cf4a:	push   0x17
  41cf4c:	jbe    0x41cee9
  41cf4e:	jmp    0x1db1:0x7e75e66
  41cf55:	mov    ebp,0xb132190a
  41cf5a:	push   0x8c898927
  41cf5f:	loop   0x41cf11
  41cf61:	and    dh,dh
  41cf63:	fld    TBYTE PTR [edi-0x2e]
  41cf66:	lds    ecx,FWORD PTR [ebx+0x70e8bfc0]
  41cf6c:	das    
  41cf6d:	pop    fs
  41cf6f:	adc    al,0x7f
  41cf71:	outs   dx,BYTE PTR ds:[esi]
  41cf72:	stc    
  41cf73:	adc    eax,0x659ecff8
  41cf78:	xor    DWORD PTR [edi],ebx
  41cf7a:	loop   0x41cf36
  41cf7c:	jae    0x41cf00
  41cf7e:	inc    ebx
  41cf7f:	mov    ecx,0x2ec13651
  41cf84:	xor    BYTE PTR [eax+0x7cf8af2c],dh
  41cf8a:	arpl   WORD PTR [edx+ebx*4],bx
  41cf8d:	xchg   ebp,eax
  41cf8e:	(bad)  
  41cf8f:	adc    DWORD PTR [esp+edi*4+0x1e381eb8],edx
  41cf96:	je     0x41cfe5
  41cf98:	push   ss
  41cf99:	pop    ebx
  41cf9b:	mov    ch,0x58
  41cf9d:	pop    eax
  41cf9e:	(bad)  
  41cf9f:	xlat   BYTE PTR ds:[ebx]
  41cfa0:	in     al,dx
  41cfa1:	or     al,0x2e
  41cfa3:	ins    BYTE PTR es:[edi],dx
  41cfa4:	sbb    dh,cl
  41cfa6:	inc    ebp
  41cfa7:	sbb    cl,al
  41cfa9:	cmp    esi,esi
  41cfab:	cmp    al,0x7e
  41cfad:	xchg   edx,eax
  41cfae:	mov    ah,ch
  41cfb0:	push   ebx
  41cfb1:	cmp    esp,DWORD PTR [ebx+0x3e4716d6]
  41cfb7:	cdq    
  41cfb8:	int    0xfa
  41cfba:	add    BYTE PTR [edi],bl
  41cfbc:	cmc    
  41cfbd:	ja     0x41cf6e
  41cfbf:	add    bl,BYTE PTR [eax+0x32]
  41cfc2:	cld    
  41cfc3:	cdq    
  41cfc4:	xchg   ebp,eax
  41cfc5:	fidiv  DWORD PTR ds:0x714a6067
  41cfcb:	js     0x41cff9
  41cfcd:	add    esp,DWORD PTR [ebx]
  41cfcf:	inc    DWORD PTR [ebx+eiz*1]
  41cfd2:	mov    ah,0xf6
  41cfd4:	repz sahf 
  41cfd6:	adc    DWORD PTR [ecx],esi
  41cfd8:	xchg   ebp,eax
  41cfd9:	pop    ebp
  41cfda:	es ja  0x41cf76
  41cfdd:	out    0xe,al
  41cfdf:	sbb    ecx,DWORD PTR [eiz*1-0x2ea9bcf0]
  41cfe6:	inc    eax
  41cfe7:	push   ecx
  41cfe8:	icebp  
  41cfe9:	ficomp DWORD PTR [edi]
  41cfeb:	mov    edi,0x7da1ca8b
  41cff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff1:	adc    eax,0x3c448816
  41cff6:	xlat   BYTE PTR ds:[ebx]
  41cff7:	or     al,0x0
  41cff9:	mov    ebp,0xb99b7165
  41cffe:	xchg   edi,eax
  41cfff:	mov    eax,ds:0x4dadf457
  41d004:	call   0x742e26b5
  41d009:	mov    ebx,ebx
  41d00b:	sbb    DWORD PTR [eax-0x5a211d40],ecx
  41d011:	adc    BYTE PTR [edx+0x6],dl
  41d014:	inc    ebx
  41d015:	test   DWORD PTR [eax],eax
  41d017:	in     eax,dx
  41d018:	mov    ds:0xdb63c60f,al
  41d01d:	aaa    
  41d01e:	(bad)  
  41d01f:	xor    al,0xe7
  41d021:	lahf   
  41d022:	pop    edx
  41d023:	push   ebp
  41d024:	int    0xcd
  41d026:	mov    eax,0xebb4177e
  41d02b:	mov    ebx,0xe23da719
  41d030:	xchg   edi,eax
  41d031:	xlat   BYTE PTR ds:[ebx]
  41d032:	nop
  41d033:	sbb    al,0xde
  41d035:	and    al,0x90
  41d037:	call   DWORD PTR [eax-0x50]
  41d03a:	aad    0x64
  41d03c:	inc    edi
  41d03d:	push   edi
  41d03e:	mov    eax,fs:0xf918cc82
  41d044:	sub    al,0x0
  41d046:	imul   ecx,DWORD PTR [esi-0x1],0x48
  41d04a:	fistp  WORD PTR [edx*1+0x107ff7ce]
  41d051:	fadd   QWORD PTR es:[edi-0x3c]
  41d055:	sbb    BYTE PTR [edi],0x2a
  41d058:	out    0xf9,al
  41d05a:	mov    esi,DWORD PTR [ebx-0x2a71ce6c]
  41d060:	rcl    BYTE PTR [ebx+0x13],1
  41d063:	add    BYTE PTR [eax],dh
  41d065:	aaa    
  41d066:	push   ebp
  41d067:	(bad)  
  41d068:	fidiv  WORD PTR ds:0x71cb978c
  41d06e:	jno    0x41cffa
  41d070:	imul   edx,DWORD PTR [ebp-0x43c95ce1],0xffffffd8
  41d077:	add    DWORD PTR [edi+edx*2-0x4eb72b15],ecx
  41d07e:	sub    al,0x8a
  41d080:	into   
  41d081:	ja     0x41d0f9
  41d083:	les    ecx,FWORD PTR [ebx+0x77]
  41d086:	xor    ch,BYTE PTR [ebp+0x66]
  41d089:	sub    al,0xb8
  41d08b:	daa    
  41d08c:	daa    
  41d08d:	cmp    edx,ecx
  41d08f:	and    ch,BYTE PTR [ebp+esi*2-0x3ac0e803]
  41d096:	cmp    al,0x80
  41d098:	imul   ebp,ebp,0x32
  41d09b:	in     al,0x9c
  41d09d:	imul   ecx,DWORD PTR [ecx],0xeb8e6d8b
  41d0a3:	aas    
  41d0a4:	adc    edx,DWORD PTR [ebp-0x47]
  41d0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a8:	or     ebp,DWORD PTR [ebx+0x56fe66ab]
  41d0ae:	jmp    0x41d102
  41d0b0:	push   ebx
  41d0b1:	shr    BYTE PTR [esi],1
  41d0b3:	dec    ecx
  41d0b4:	xor    ebx,DWORD PTR [ecx-0x23]
  41d0b7:	jmp    0x41d0a4
  41d0b9:	adc    eax,0x70767ec
  41d0be:	fidiv  DWORD PTR fs:[edi]
  41d0c1:	test   edi,0xc63fdd24
  41d0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0c8:	pop    ebp
  41d0c9:	adc    esi,DWORD PTR ds:0x6476631
  41d0cf:	sub    dl,BYTE PTR [esi]
  41d0d1:	add    eax,DWORD PTR [edx]
  41d0d3:	fnstcw WORD PTR [esi-0x15]
  41d0d6:	sub    al,0x23
  41d0d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d9:	popf   
  41d0da:	adc    eax,0xc855460
  41d0df:	cs fwait
  41d0e1:	jp     0x41d084
  41d0e3:	xchg   BYTE PTR [edi-0x68],bl
  41d0e6:	lahf   
  41d0e7:	jge    0x41d0e4
  41d0e9:	or     dh,BYTE PTR [ebp+0x13]
  41d0ec:	cmc    
  41d0ed:	mov    bh,dh
  41d0ef:	or     WORD PTR [eax+0x40c70ee1],si
  41d0f6:	adc    eax,0x643d60cf
  41d0fb:	mov    ebp,0xf0706040
  41d100:	pushf  
  41d101:	addr16 in al,dx
  41d103:	xchg   BYTE PTR [esi+0x2f891977],dh
  41d109:	jnp    0x41d131
  41d10b:	sbb    BYTE PTR [ebx+0x14],0x57
  41d10f:	sbb    al,0x91
  41d111:	sub    eax,DWORD PTR [ecx]
  41d113:	mov    al,ds:0xcec68d1d
  41d118:	cli    
  41d119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d11a:	das    
  41d11b:	xchg   ecx,eax
  41d11c:	lods   al,BYTE PTR ds:[esi]
  41d11d:	cs mov ebp,0xe9bd8456
  41d123:	fsub   st(5),st
  41d125:	clc    
  41d126:	or     edx,DWORD PTR [eax+0x4ed83fcd]
  41d12c:	mov    ecx,0x80191abf
  41d131:	xlat   BYTE PTR ds:[ebx]
  41d132:	scas   al,BYTE PTR es:[edi]
  41d133:	adc    al,0x3f
  41d135:	in     eax,dx
  41d136:	cs push edi
  41d138:	or     esi,DWORD PTR [ecx+0x38]
  41d13b:	ret    
  41d13c:	pop    ecx
  41d13d:	(bad)  
  41d13e:	out    0x20,al
  41d140:	adc    bh,0xa8
  41d143:	scas   eax,DWORD PTR es:[edi]
  41d144:	mov    ds:0x171e5758,al
  41d149:	or     eax,0xf4804da7
  41d14e:	cdq    
  41d14f:	ja     0x41d1b2
  41d151:	cmp    BYTE PTR [esi-0x631297e4],ah
  41d157:	mov    dl,0xac
  41d159:	jl     0x41d10d
  41d15b:	sub    edi,ebp
  41d15d:	sub    eax,0x194fe909
  41d162:	popf   
  41d163:	popa   
  41d164:	outs   dx,BYTE PTR ds:[esi]
  41d165:	sbb    DWORD PTR [edi+esi*1+0x302dad2a],ebp
  41d16c:	jle    0x41d1af
  41d16e:	sub    esp,DWORD PTR [edx+0x3]
  41d171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d172:	fnstcw WORD PTR [esi]
  41d174:	inc    ebp
  41d175:	mov    ds:0x67c5729d,al
  41d17a:	sbb    BYTE PTR [ebx-0x793b97fa],0x16
  41d181:	popf   
  41d182:	xor    DWORD PTR [ebx],eax
  41d184:	push   es
  41d185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d186:	and    eax,0x85f9d80f
  41d18b:	shr    DWORD PTR [edi+0x7f],0xbb
  41d18f:	out    0xfb,eax
  41d191:	sti    
  41d192:	push   ecx
  41d193:	xchg   esi,eax
  41d194:	in     eax,dx
  41d195:	or     eax,0xaf70b712
  41d19a:	mov    ah,0x7a
  41d19c:	jmp    0x81b66d11
  41d1a1:	lds    esi,FWORD PTR [ecx]
  41d1a3:	pop    esp
  41d1a4:	add    ah,ah
  41d1a6:	pop    ebx
  41d1a7:	fisubr DWORD PTR [esi+eax*8]
  41d1aa:	nop
  41d1ab:	xor    edx,DWORD PTR [esi]
  41d1ad:	mov    ecx,0x2bfee5b9
  41d1b2:	push   0xffffffe4
  41d1b4:	or     edi,ebp
  41d1b6:	sahf   
  41d1b7:	xchg   esi,eax
  41d1b8:	(bad)  
  41d1b9:	push   ecx
  41d1ba:	push   0xb4b130ef
  41d1bf:	adc    BYTE PTR [edx-0x24],dh
  41d1c2:	das    
  41d1c3:	dec    ecx
  41d1c4:	fcomp  QWORD PTR [edx]
  41d1c6:	sahf   
  41d1c7:	hlt    
  41d1c8:	ds jecxz 0x41d16a
  41d1cb:	sub    bl,dl
  41d1cd:	pop    ds
  41d1ce:	repz jbe 0x41d178
  41d1d1:	and    al,0x46
  41d1d3:	popa   
  41d1d4:	mov    edi,0xc01223cd
  41d1d9:	inc    ebx
  41d1da:	inc    ebx
  41d1db:	aaa    
  41d1dc:	or     ch,dl
  41d1de:	cmp    BYTE PTR [esp+edx*1],ch
  41d1e1:	repnz test DWORD PTR [ebp-0x69],edi
  41d1e5:	call   0xfb194971
  41d1ea:	cmp    ecx,DWORD PTR [eax]
  41d1ec:	mov    eax,0xbc29822e
  41d1f1:	push   ebp
  41d1f2:	in     al,dx
  41d1f3:	cs xor al,0xc7
  41d1f6:	popa   
  41d1f7:	rol    bh,1
  41d1f9:	icebp  
  41d1fa:	jnp    0x41d21d
  41d1fc:	inc    edx
  41d1fd:	pop    esp
  41d1fe:	in     al,0x2d
  41d200:	outs   dx,BYTE PTR ds:[esi]
  41d201:	or     DWORD PTR [esi-0x15fdfbdf],edi
  41d207:	loope  0x41d21b
  41d209:	mov    ebx,0xa68724c4
  41d20f:	dec    esi
  41d210:	xor    cl,BYTE PTR [ebx-0x2c]
  41d213:	inc    ecx
  41d214:	pop    ebx
  41d215:	inc    esi
  41d216:	cmp    al,0x5
  41d218:	or     eax,0xc9a4969f
  41d21d:	mov    gs,edx
  41d21f:	das    
  41d220:	ret    
  41d221:	dec    edi
  41d222:	inc    esi
  41d223:	aam    0x7b
  41d225:	adc    ebp,DWORD PTR [ecx+0x19]
  41d228:	pop    ss
  41d229:	jno    0x41d207
  41d22b:	lea    ecx,[edx]
  41d22d:	ret    0x6271
  41d230:	mov    DWORD PTR [esi+0x39633e6c],eax
  41d236:	xchg   edx,eax
  41d237:	sahf   
  41d238:	mov    esp,0x30c0a474
  41d23d:	sbb    eax,DWORD PTR [edx]
  41d23f:	push   es
  41d240:	fwait
  41d241:	xchg   DWORD PTR [edi-0x13ab01d0],ebp
  41d247:	arpl   WORD PTR [edi+0x77],di
  41d24a:	imul   esp,DWORD PTR [edi],0xffffffd4
  41d24d:	xor    BYTE PTR [esi-0x79],ah
  41d250:	ret    0xe879
  41d253:	fdivr  QWORD PTR [ebx+0x7e2b5a65]
  41d259:	sbb    al,0x3e
  41d25b:	xchg   edi,eax
  41d25c:	xchg   ebp,eax
  41d25d:	jne    0x41d2ce
  41d25f:	mov    cl,0x6f
  41d261:	and    ch,cl
  41d263:	out    dx,eax
  41d264:	in     al,dx
  41d265:	dec    edi
  41d266:	cdq    
  41d267:	fld    QWORD PTR [ecx+0x1b4edd0]
  41d26d:	jns    0x41d267
  41d26f:	or     eax,0x4b8dcf54
  41d274:	inc    edx
  41d275:	in     eax,0x60
  41d277:	out    dx,al
  41d278:	pop    esp
  41d279:	xchg   esp,eax
  41d27a:	int    0x85
  41d27c:	data16 (bad) 
  41d27f:	imul   esi,DWORD PTR [edx+0x54],0x96d21a48
  41d286:	aaa    
  41d287:	and    al,BYTE PTR [eax-0x7d67e93a]
  41d28d:	stc    
  41d28e:	cmc    
  41d28f:	(bad)  
  41d290:	scas   eax,DWORD PTR es:[edi]
  41d291:	mov    WORD PTR [edi],gs
  41d293:	sbb    al,0x29
  41d295:	push   esp
  41d296:	les    ebp,FWORD PTR [ebx]
  41d298:	push   0xb52c9ace
  41d29d:	ja     0x41d23a
  41d29f:	jno    0x41d2aa
  41d2a1:	ret    
  41d2a2:	pop    ss
  41d2a3:	(bad)  
  41d2a4:	retf   
  41d2a5:	mov    dl,0x1d
  41d2a7:	xchg   ecx,eax
  41d2a8:	fucomip st,st(7)
  41d2aa:	add    ch,0xa4
  41d2ad:	jae    0x41d23d
  41d2af:	jns    0x41d30f
  41d2b1:	push   es
  41d2b2:	add    DWORD PTR [ecx+0x55455886],ebp
  41d2b8:	push   0x61010ce2
  41d2bd:	stc    
  41d2be:	arpl   dx,cx
  41d2c0:	sub    ch,BYTE PTR [eax]
  41d2c2:	lock enter 0xe737,0x91
  41d2c7:	mov    DWORD PTR [ebx-0x5a],0xb9d218b8
  41d2ce:	xor    DWORD PTR [esi],ebp
  41d2d0:	xor    DWORD PTR [eax+0x3b],esp
  41d2d3:	mov    BYTE PTR [edx+0x21],ah
  41d2d6:	das    
  41d2d7:	sbb    al,BYTE PTR [eax-0x6d77ef6d]
  41d2dd:	mov    ebx,0x41fcb94f
  41d2e2:	sti    
  41d2e3:	enter  0x5ca2,0x87
  41d2e7:	jmp    0xbc5fb0f9
  41d2ec:	aam    0x2d
  41d2ee:	pop    edx
  41d2ef:	fwait
  41d2f0:	cld    
  41d2f1:	call   0xd3a1:0x96f6d405
  41d2f8:	push   eax
  41d2f9:	pushf  
  41d2fa:	popf   
  41d2fb:	imul   esp,DWORD PTR [edi+edi*1+0x65bfe043],0x49
  41d303:	fdiv   QWORD PTR [eax-0x64e60b00]
  41d309:	cwde   
  41d30a:	push   ebx
  41d30b:	les    ebp,FWORD PTR [esi]
  41d30d:	mov    al,0x65
  41d30f:	(bad)  
  41d310:	gs mov ebx,0xb22b047d
  41d316:	sub    edi,DWORD PTR [ebp+0x2cf68bc8]
  41d31c:	push   0x34
  41d31e:	inc    esp
  41d31f:	imul   esi,DWORD PTR [ebx],0x35
  41d322:	sbb    al,BYTE PTR [esi]
  41d324:	or     BYTE PTR [ecx-0x5c3f52ff],al
  41d32a:	pusha  
  41d32b:	pop    esp
  41d32c:	int3   
  41d32d:	or     BYTE PTR [edx-0x35],dl
  41d330:	push   ebx
  41d331:	sub    al,0x85
  41d333:	dec    eax
  41d334:	leave  
  41d335:	pop    edi
  41d336:	adc    edx,DWORD PTR [ebx]
  41d338:	sub    al,0x7c
  41d33a:	ss in  al,dx
  41d33c:	dec    esi
  41d33d:	mov    al,ch
  41d33f:	add    ah,BYTE PTR [eax]
  41d341:	(bad)  
  41d342:	pop    ds
  41d343:	dec    edx
  41d344:	into   
  41d345:	mov    al,ds:0x1746298
  41d34a:	jge    0x41d383
  41d34c:	and    eax,0xcec5ea54
  41d351:	mov    edx,0x9f0fdf8e
  41d356:	push   esp
  41d357:	xor    eax,0x66161dfd
  41d35c:	sbb    DWORD PTR [ecx],esp
  41d35e:	imul   ecx,eax,0xffffffa7
  41d361:	pop    esp
  41d362:	mov    ecx,0x7a84a53e
  41d367:	or     edi,ebp
  41d369:	jb     0x41d320
  41d36b:	adc    DWORD PTR [eax],ebx
  41d36d:	mov    ds:0xbe9b123e,al
  41d372:	xor    esp,DWORD PTR [edi+eiz*8]
  41d375:	push   es
  41d376:	sbb    dl,BYTE PTR [ecx+0x70434031]
  41d37c:	mov    ch,0xbc
  41d37e:	and    eax,0x35b7060a
  41d383:	mov    dl,BYTE PTR [eax+0x47]
  41d386:	mov    eax,ds:0xda603870
  41d38b:	arpl   WORD PTR [eax],ax
  41d38d:	mov    esi,DWORD PTR [eax-0x5a324b92]
  41d393:	gs mov edx,esi
  41d396:	loopne 0x41d344
  41d398:	push   0xffffff83
  41d39a:	aas    
  41d39b:	fisub  DWORD PTR [edi-0x7a]
  41d39e:	out    0xe9,al
  41d3a0:	scas   al,BYTE PTR es:[edi]
  41d3a1:	pop    es
  41d3a2:	(bad)  
  41d3a3:	neg    bl
  41d3a5:	aas    
  41d3a6:	mov    WORD PTR [edi],ds
  41d3a8:	lods   al,BYTE PTR ds:[esi]
  41d3a9:	jge    0x41d3b3
  41d3ab:	push   eax
  41d3ac:	lea    esi,[ebx+0x72]
  41d3af:	std    
  41d3b0:	xor    BYTE PTR [esi],ch
  41d3b2:	pushf  
  41d3b3:	pop    esp
  41d3b4:	repz push ecx
  41d3b6:	dec    ebx
  41d3b7:	inc    edi
  41d3b8:	enter  0xc13d,0xc5
  41d3bc:	pushf  
  41d3bd:	aam    0x36
  41d3bf:	test   eax,0x2ae272e9
  41d3c4:	scas   al,BYTE PTR es:[edi]
  41d3c5:	and    BYTE PTR [edx-0x5a84c1d2],ah
  41d3cb:	xor    esp,DWORD PTR [ecx+eax*8-0x3d]
  41d3cf:	popf   
  41d3d0:	jecxz  0x41d376
  41d3d2:	mov    ecx,0xbb9d52bf
  41d3d7:	mov    esi,0xfd495ca3
  41d3dc:	jmp    0x41d3aa
  41d3de:	out    dx,al
  41d3df:	fcom   st(1)
  41d3e1:	jae    0x41d377
  41d3e3:	imul   esp,edi,0x8f0d0801
  41d3e9:	or     al,0x2b
  41d3eb:	mov    edx,0xf43592b1
  41d3f0:	or     ecx,esi
  41d3f2:	std    
  41d3f3:	adc    eax,0x4e736c4
  41d3f8:	pushf  
  41d3f9:	les    edi,FWORD PTR ds:0xaa7aee38
  41d3ff:	sub    DWORD PTR [eax-0x39390cf8],esi
  41d405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d406:	adc    bl,al
  41d408:	jne    0x41d46c
  41d40a:	inc    eax
  41d40b:	outs   dx,DWORD PTR ds:[esi]
  41d40c:	ror    DWORD PTR [ecx+eiz*4+0x59cf6f71],cl
  41d413:	mov    bl,0x87
  41d415:	(bad)  
  41d416:	(bad)  
  41d417:	xchg   esi,eax
  41d418:	mov    dh,0xc6
  41d41a:	dec    ebp
  41d41b:	mov    BYTE PTR [eax],0x93
  41d41e:	retf   
  41d41f:	js     0x41d49f
  41d421:	lods   al,BYTE PTR ds:[esi]
  41d422:	mov    DWORD PTR [ecx],0x5dcf19ec
  41d428:	outs   dx,BYTE PTR ds:[esi]
  41d429:	mov    edx,0xec8ca989
  41d42e:	mov    eax,ds:0x28ef5e02
  41d433:	(bad)  
  41d434:	(bad)  
  41d435:	shl    dh,1
  41d437:	or     eax,0xebd62476
  41d43c:	sub    eax,0xeaea05f2
  41d441:	xor    DWORD PTR [edx],edi
  41d443:	fs stos BYTE PTR es:[edi],al
  41d445:	mov    esp,0x392fe1ee
  41d44a:	imul   ebx,DWORD PTR [edx+0x57],0xffffff92
  41d44e:	jmp    0x8c26dbde
  41d453:	mov    ebx,0xaa427263
  41d458:	lds    ebx,FWORD PTR [ebp+ebx*4+0x51523e57]
  41d45f:	arpl   WORD PTR [eax],dx
  41d461:	retf   0x4992
  41d464:	mov    bl,0x6b
  41d466:	xor    ch,BYTE PTR [eax]
  41d468:	popf   
  41d469:	sbb    BYTE PTR [ebx+0x38],ch
  41d46c:	int3   
  41d46d:	das    
  41d46e:	mov    edx,0x60b02ef
  41d473:	cld    
  41d474:	jns    0x41d45a
  41d476:	stc    
  41d477:	dec    edx
  41d478:	jb     0x41d45b
  41d47a:	jmp    0x6891:0xba8190c7
  41d481:	sbb    bl,ch
  41d483:	rol    dh,0x81
  41d486:	mov    al,BYTE PTR [esi]
  41d488:	mov    edx,0xa0f9eb83
  41d48d:	lds    ecx,FWORD PTR ds:0xfef6917
  41d493:	adc    dl,bl
  41d495:	mov    WORD PTR [ebp+0x7de6495b],0x6791
  41d49e:	inc    eax
  41d49f:	sbb    eax,0xf956add5
  41d4a4:	(bad)  
  41d4a6:	(bad)  
  41d4a7:	and    esp,DWORD PTR [esi+0x28]
  41d4aa:	aad    0xbf
  41d4ac:	jecxz  0x41d527
  41d4ae:	xchg   esp,eax
  41d4af:	fidivr WORD PTR [edx]
  41d4b1:	xchg   edi,eax
  41d4b2:	(bad)  
  41d4b3:	push   0x36
  41d4b5:	inc    BYTE PTR [ecx+0x42]
  41d4b8:	mov    al,0x12
  41d4ba:	add    al,0xa0
  41d4bc:	push   ecx
  41d4bd:	fs aam 0xe9
  41d4c0:	in     al,dx
  41d4c1:	call   0x437f:0xe3a7d0e7
  41d4c8:	and    eax,0x859c23e8
  41d4cd:	aad    0xe8
  41d4cf:	ss imul esp,ebx,0xbade36d9
  41d4d6:	sub    ecx,DWORD PTR gs:[ebp+0x40e5905]
  41d4dd:	mov    eax,ds:0xf1162683
  41d4e2:	ds ins BYTE PTR es:[edi],dx
  41d4e4:	xlat   BYTE PTR ds:[bx]
  41d4e6:	hlt    
  41d4e7:	mov    ch,0x64
  41d4e9:	add    esi,DWORD PTR [edi]
  41d4eb:	iret   
  41d4ec:	jae    0x41d475
  41d4ee:	mov    es,WORD PTR [esi+0x6936dc36]
  41d4f4:	iret   
  41d4f5:	push   eax
  41d4f6:	gs mov edx,0x8a4637ff
  41d4fc:	mov    edx,0xc0acad6b
  41d501:	dec    ebx
  41d502:	adc    DWORD PTR [esp+eiz*4+0x2a],0x6e6a5f9
  41d50a:	push   es
  41d50b:	push   es
  41d50c:	lea    ecx,[edx+ebx*8]
  41d50f:	sub    al,0x60
  41d511:	mov    bh,0xf1
  41d513:	adc    DWORD PTR [esi],edx
  41d515:	(bad)  
  41d517:	jg     0x41d4c5
  41d519:	jns    0x41d54c
  41d51b:	sahf   
  41d51c:	jle    0x41d51c
  41d51e:	test   eax,0xc7284fd
  41d523:	pop    ss
  41d524:	sbb    BYTE PTR [eax+0x33],0xcc
  41d528:	outs   dx,DWORD PTR ds:[esi]
  41d529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d52a:	mov    esi,0x4c0ba1b8
  41d52f:	jno    0x41d520
  41d531:	mov    ah,0x26
  41d533:	(bad)  
  41d534:	fwait
  41d535:	imul   DWORD PTR [esi+0x47c14053]
  41d53b:	push   cs
  41d53c:	mov    bl,0x55
  41d53e:	mov    cl,0x84
  41d540:	sbb    eax,0x68d086c7
  41d545:	xor    al,ah
  41d547:	mov    ah,0x9a
  41d549:	adc    al,0x31
  41d54b:	adc    BYTE PTR [edx+0x29835196],bh
  41d551:	retf   0x9696
  41d554:	enter  0xd002,0x26
  41d558:	push   ebp
  41d559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d55a:	inc    esp
  41d55b:	jecxz  0x41d59c
  41d55d:	(bad)  
  41d55e:	(bad)  
  41d55f:	outs   dx,BYTE PTR ds:[esi]
  41d560:	pop    edx
  41d561:	mov    cl,0x3d
  41d563:	mov    dl,0xe
  41d565:	aad    0xad
  41d567:	js     0x41d57e
  41d569:	xchg   edi,eax
  41d56a:	jge    0x41d5b4
  41d56c:	es cld 
  41d56e:	xchg   ebx,eax
  41d56f:	mov    bl,ah
  41d571:	sub    al,0x61
  41d573:	test   al,0x43
  41d575:	inc    eax
  41d576:	stc    
  41d577:	ror    dh,1
  41d579:	rcr    dh,cl
  41d57b:	xchg   esi,eax
  41d57c:	pushf  
  41d57d:	xor    esi,DWORD PTR [edx]
  41d57f:	ret    0xfc4
  41d582:	out    0x9d,eax
  41d584:	daa    
  41d585:	icebp  
  41d586:	shl    DWORD PTR [edx+0x6dd0f5de],1
  41d58c:	stos   BYTE PTR es:[edi],al
  41d58d:	inc    esp
  41d58e:	mov    edx,0xe0f46947
  41d593:	jmp    FWORD PTR [ebp-0x2dc01f24]
  41d599:	repnz lock (bad) 
  41d59c:	pop    ebx
  41d59d:	pop    ss
  41d59e:	adc    DWORD PTR [esi+0x25],edi
  41d5a1:	xchg   edi,eax
  41d5a2:	jbe    0x41d5e6
  41d5a4:	sbb    ch,bl
  41d5a6:	xor    DWORD PTR ds:0xf4599b6a,ebp
  41d5ac:	fdivp  st(0),st
  41d5ae:	mov    cl,0x5b
  41d5b0:	in     al,0x5d
  41d5b2:	adc    DWORD PTR [ebx-0x1d72f5d6],esi
  41d5b8:	je     0x41d60a
  41d5ba:	outs   dx,BYTE PTR ds:[esi]
  41d5bb:	mov    eax,ds:0x92c379ab
  41d5c0:	imul   ebx,DWORD PTR [ebp-0x77],0x6312c949
  41d5c7:	push   esp
  41d5c8:	jne    0x41d569
  41d5ca:	add    al,0x3e
  41d5cc:	mov    edx,DWORD PTR [esi]
  41d5ce:	push   0x44ba3da
  41d5d3:	dec    edi
  41d5d4:	out    dx,eax
  41d5d5:	retf   0xfa12
  41d5d8:	stc    
  41d5d9:	sbb    BYTE PTR [esi-0x305d9de5],dl
  41d5df:	mov    ah,0x33
  41d5e1:	jge    0x41d580
  41d5e3:	xlat   BYTE PTR ds:[ebx]
  41d5e4:	jnp    0x41d57c
  41d5e6:	pusha  
  41d5e7:	mov    esi,0xbd4b07ef
  41d5ec:	es out dx,al
  41d5ee:	push   ecx
  41d5ef:	jle    0x41d5da
  41d5f1:	pop    ebp
  41d5f2:	mov    ebp,0x3d562810
  41d5f7:	and    BYTE PTR [edi-0x554ff331],al
  41d5fd:	mov    bl,0x58
  41d5ff:	inc    esi
  41d600:	xchg   DWORD PTR [edx],edi
  41d602:	jb     0x41d588
  41d604:	fnstcw WORD PTR [ecx]
  41d606:	es aaa 
  41d608:	dec    esp
  41d609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d60a:	cld    
  41d60b:	xchg   edi,ebx
  41d60d:	pop    ss
  41d60e:	call   0x1273:0xe728804
  41d615:	repnz mov edx,0xe900f82d
  41d61b:	leave  
  41d61c:	test   al,0xce
  41d61e:	test   DWORD PTR [esi],esp
  41d620:	inc    eax
  41d621:	jmp    0xf096:0xd1f24db
  41d628:	jo     0x41d5e0
  41d62a:	push   ecx
  41d62b:	jl     0x41d680
  41d62d:	loop   0x41d61c
  41d62f:	sub    BYTE PTR [edi+ebx*1+0x10],al
  41d633:	repz out 0xf,eax
  41d636:	dec    edx
  41d637:	add    ah,BYTE PTR [ebx]
  41d639:	xor    eax,0x9f693e3c
  41d63e:	retf   
  41d63f:	mov    dh,BYTE PTR [ecx+0x1076fe5f]
  41d645:	and    al,0xd0
  41d647:	inc    ecx
  41d648:	dec    esp
  41d649:	int3   
  41d64a:	push   ecx
  41d64b:	push   edi
  41d64c:	aam    0xf5
  41d64e:	push   ds
  41d64f:	mov    dl,0xa0
  41d651:	(bad)  
  41d652:	jecxz  0x41d676
  41d654:	frstor [ebx+0x682cec0a]
  41d65a:	fdiv   DWORD PTR [edx]
  41d65c:	test   al,0x2f
  41d65e:	pop    ebx
  41d65f:	ds scas eax,DWORD PTR es:[edi]
  41d661:	and    eax,0x7141cf85
  41d666:	lods   al,BYTE PTR ds:[esi]
  41d667:	out    dx,al
  41d668:	call   0x6d7754d
  41d66d:	and    DWORD PTR [ecx+eiz*4-0x78],ebp
  41d671:	shl    cl,0xdb
  41d674:	mov    ebp,ecx
  41d676:	mov    ecx,0x6338b5a0
  41d67b:	or     al,0xd7
  41d67d:	pop    edx
  41d67e:	popf   
  41d67f:	sbb    ch,BYTE PTR [edx-0x79f4e5d5]
  41d685:	cs cwde 
  41d687:	loop   0x41d6cc
  41d689:	xor    ah,BYTE PTR [ebx-0x4d8dcd5d]
  41d68f:	pop    ss
  41d690:	or     al,0xcf
  41d692:	ins    BYTE PTR es:[edi],dx
  41d693:	sub    ch,BYTE PTR [esi-0x2fa81540]
  41d699:	jns    0x41d62b
  41d69b:	out    0xd0,al
  41d69d:	push   ecx
  41d69e:	mov    esi,edi
  41d6a0:	cmp    eax,0x87224418
  41d6a5:	jno    0x41d65c
  41d6a7:	dec    ecx
  41d6a8:	push   ecx
  41d6a9:	es jno 0x41d66c
  41d6ac:	jbe    0x41d6b3
  41d6ae:	outs   dx,DWORD PTR ds:[esi]
  41d6af:	xor    ecx,ebx
  41d6b1:	aaa    
  41d6b2:	inc    ecx
  41d6b3:	xor    DWORD PTR [ebx+ecx*1-0x58],esp
  41d6b7:	pusha  
  41d6b8:	push   0x301bdd9b
  41d6bd:	cmc    
  41d6be:	jmp    0x1d45:0x84c861ad
  41d6c5:	xchg   edi,eax
  41d6c6:	in     eax,0x97
  41d6c8:	stos   DWORD PTR es:[edi],eax
  41d6c9:	jns    0x41d6e1
  41d6cb:	xchg   ecx,eax
  41d6cc:	pop    ebx
  41d6cd:	xchg   ebx,eax
  41d6ce:	rol    BYTE PTR [ecx],1
  41d6d0:	push   edi
  41d6d1:	push   esi
  41d6d2:	or     eax,0x7468f3c5
  41d6d7:	mov    al,bl
  41d6d9:	mov    al,ds:0x9cb60b70
  41d6de:	mov    esi,0xe424efa0
  41d6e3:	jmp    0x7f0f:0xd1b0d8a9
  41d6ea:	and    DWORD PTR [esi],eax
  41d6ec:	fcomi  st,st(6)
  41d6ee:	jbe    0x41d6a1
  41d6f0:	out    dx,al
  41d6f1:	jle    0x41d699
  41d6f3:	pop    edx
  41d6f4:	adc    ebx,edi
  41d6f6:	(bad)  
  41d6f7:	push   edx
  41d6f8:	fsubp  st(7),st
  41d6fa:	aad    0xf8
  41d6fc:	icebp  
  41d6fd:	cli    
  41d6fe:	data16 je 0x41d75e
  41d701:	pop    eax
  41d702:	mov    bl,BYTE PTR [esi]
  41d704:	xchg   ebp,eax
  41d705:	cs ret 
  41d707:	cs jle 0x41d782
  41d70a:	sahf   
  41d70b:	xchg   edx,eax
  41d70c:	inc    eax
  41d70d:	pusha  
  41d70e:	inc    esi
  41d70f:	shr    BYTE PTR [edx],cl
  41d711:	(bad)  
  41d713:	sub    ebx,ecx
  41d715:	mov    ebp,0x666cef59
  41d71a:	push   edx
  41d71b:	arpl   WORD PTR [esi-0x2807c760],cx
  41d721:	pop    ebp
  41d722:	js     0x41d6d7
  41d724:	(bad)  [ebx]
  41d726:	test   al,ch
  41d728:	shl    ebp,cl
  41d72a:	mov    ?,WORD PTR [eax+0x6e]
  41d72d:	pushf  
  41d72e:	(bad)
  41d731:	jne    0x41d6e0
  41d733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d734:	inc    esi
  41d735:	dec    esp
  41d736:	imul   edi,DWORD PTR [ebx+eax*4-0x73],0x48846676
  41d73e:	cli    
  41d73f:	inc    ebx
  41d740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d741:	repnz mov ss,WORD PTR [ecx-0x5d]
  41d745:	dec    ebx
  41d746:	icebp  
  41d747:	lahf   
  41d748:	ins    BYTE PTR es:[edi],dx
  41d749:	and    DWORD PTR [eax-0x7ba89035],esp
  41d74f:	test   bh,bl
  41d751:	pop    ebx
  41d752:	adc    BYTE PTR [eax+ecx*8+0x1ea04005],dh
  41d759:	push   edx
  41d75a:	add    ecx,DWORD PTR [eax]
  41d75c:	cmp    dl,0x9b
  41d75f:	jne    0x41d73c
  41d761:	or     ebx,0xc70210db
  41d767:	sub    BYTE PTR [ebx],cl
  41d769:	or     ch,BYTE PTR [eax]
  41d76b:	loop   0x41d7e8
  41d76d:	or     eax,0xa2658a3b
  41d772:	fisttp WORD PTR [edx-0x46]
  41d775:	xchg   ecx,eax
  41d776:	sahf   
  41d777:	cmp    BYTE PTR [ecx+0x4c],dl
  41d77a:	retf   
  41d77b:	div    BYTE PTR [ecx+0x1a202199]
  41d781:	add    esi,DWORD PTR [ecx+0x51f426cc]
  41d787:	aad    0x49
  41d789:	xchg   edi,eax
  41d78a:	pushf  
  41d78b:	and    BYTE PTR [ecx-0x6f4112be],ch
  41d791:	sbb    DWORD PTR [edx-0x7e],ecx
  41d794:	cmp    BYTE PTR [ebx],cl
  41d796:	je     0x41d759
  41d798:	adc    eax,0x9ab0fe92
  41d79d:	shl    DWORD PTR [edi+0x794a1198],0x61
  41d7a4:	xchg   ecx,eax
  41d7a5:	add    ebx,DWORD PTR [esi-0x9b53955]
  41d7ab:	mov    eax,0x8540aa65
  41d7b0:	jmp    0x41d7a7
  41d7b2:	xor    BYTE PTR [edi+0x5be87776],ch
  41d7b8:	out    dx,al
  41d7b9:	xchg   DWORD PTR [ebx+0x6e69f647],edi
  41d7bf:	sbb    al,0x1d
  41d7c1:	fisub  WORD PTR [ebp+0x74]
  41d7c4:	jne    0x41d771
  41d7c6:	hlt    
  41d7c7:	xchg   edi,eax
  41d7c8:	xchg   edx,eax
  41d7c9:	mov    ds:0x59a63de6,al
  41d7ce:	les    edi,FWORD PTR [ecx-0x80]
  41d7d1:	imul   edi,DWORD PTR [esi],0xf9a8d339
  41d7d7:	call   0xe429:0x92770deb
  41d7de:	xchg   esp,eax
  41d7df:	adc    BYTE PTR [eax-0x3f],dh
  41d7e2:	daa    
  41d7e3:	or     edx,DWORD PTR [ebp+ebx*8-0x1b411385]
  41d7ea:	push   ss
  41d7eb:	pusha  
  41d7ec:	sub    bh,0x87
  41d7ef:	mov    ah,BYTE PTR [edi+0x42]
  41d7f2:	adc    ah,0x11
  41d7f5:	mov    DWORD PTR [esi],ebp
  41d7f7:	xchg   edi,eax
  41d7f8:	inc    eax
  41d7f9:	xor    ah,BYTE PTR [edx+0x63]
  41d7fc:	jl     0x41d86d
  41d7fe:	es inc esp
  41d800:	fbstp  TBYTE PTR [edi-0x3968968]
  41d806:	fisub  WORD PTR [ebx+0x69]
  41d809:	popf   
  41d80a:	inc    ecx
  41d80b:	xor    edx,DWORD PTR [esi-0x9c863e7]
  41d811:	xchg   ebx,eax
  41d812:	jmp    0x5b97:0x24c10982
  41d819:	mov    esi,0x6604e5f6
  41d81e:	mov    bl,BYTE PTR [ecx-0x3c]
  41d821:	mov    eax,0x8f8508a2
  41d826:	outs   dx,DWORD PTR ds:[esi]
  41d827:	lds    eax,FWORD PTR [ecx+0x65700005]
  41d82d:	enter  0x9cac,0xd7
  41d831:	push   0x83df969
  41d836:	push   DWORD PTR [ecx+0x2ef2dbf3]
  41d83c:	stos   DWORD PTR es:[edi],eax
  41d83d:	mov    bh,0xa1
  41d83f:	mov    esp,0x82083347
  41d844:	fdiv   QWORD PTR [ecx-0x55e336b3]
  41d84a:	lods   al,BYTE PTR ds:[esi]
  41d84b:	mov    ds:0x51a59f45,al
  41d850:	jb     0x41d803
  41d852:	mov    DWORD PTR [ebp-0x58],ecx
  41d855:	mov    ecx,DWORD PTR [ebp+0x8]
  41d858:	mov    edx,DWORD PTR [ebp-0x54]
  41d85b:	add    ecx,0x64f898
  41d861:	jmp    0x41fbc0
  41d866:	popf   
  41d867:	add    eax,0xa840804
  41d86c:	xchg   ecx,eax
  41d86d:	adc    bl,0x9b
  41d870:	pop    eax
  41d871:	in     al,dx
  41d872:	and    dh,al
  41d874:	sbb    al,0x87
  41d876:	scas   eax,DWORD PTR es:[edi]
  41d877:	fstp   TBYTE PTR [ebx+eax*4+0x3d]
  41d87b:	pop    esi
  41d87c:	add    DWORD PTR [ebx-0x9107fbb],0xffffffc2
  41d883:	mov    ebx,0x86bb092b
  41d888:	mov    edi,0xe7922286
  41d88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d88e:	push   ebp
  41d88f:	push   cs
  41d890:	xor    BYTE PTR [ecx-0x2e],ch
  41d893:	mov    ah,0x50
  41d895:	lds    edx,FWORD PTR [eax-0x4f52360f]
  41d89b:	pop    ebx
  41d89c:	jo     0x41d87a
  41d89e:	dec    edi
  41d89f:	xor    edi,DWORD PTR [edx-0x8]
  41d8a2:	aam    0xbc
  41d8a4:	cdq    
  41d8a5:	jno    0x41d8a8
  41d8a7:	cdq    
  41d8a8:	inc    edx
  41d8a9:	fstp   DWORD PTR [ebp-0x4e3dd2a3]
  41d8af:	and    DWORD PTR [eax+0x498829d1],esp
  41d8b5:	rol    BYTE PTR [esi-0x13],cl
  41d8b8:	or     ebx,DWORD PTR [esi]
  41d8ba:	adc    BYTE PTR [esi],0xda
  41d8bd:	add    BYTE PTR [edi],bl
  41d8bf:	push   cs
  41d8c0:	pop    es
  41d8c1:	(bad)  
  41d8c3:	push   esi
  41d8c4:	mov    bl,0xc4
  41d8c6:	idiv   BYTE PTR [ebx-0x7d]
  41d8c9:	cwde   
  41d8ca:	xor    DWORD PTR [ecx-0x7366e4b],0x15
  41d8d1:	inc    ebp
  41d8d2:	add    esi,DWORD PTR [esi]
  41d8d4:	cmp    al,0x9
  41d8d6:	push   0xffffffb6
  41d8d8:	cmp    bl,BYTE PTR [esi+0x43]
  41d8db:	aas    
  41d8dc:	retf   0x204e
  41d8df:	int3   
  41d8e0:	fsubr  st,st(0)
  41d8e2:	int3   
  41d8e3:	xor    esi,DWORD PTR [esi+0x3dcd9ae1]
  41d8e9:	call   0x6d5b:0xc8c24f77
  41d8f0:	pop    ecx
  41d8f1:	jbe    0x41d947
  41d8f3:	mov    ds:0x5df90970,eax
  41d8f8:	mov    edx,0x92233d47
  41d8fd:	(bad)  
  41d8ff:	sti    
  41d900:	xor    dl,BYTE PTR [ebx-0x1116c9c7]
  41d906:	leave  
  41d907:	daa    
  41d908:	fsub   QWORD PTR [esi+eiz*2+0x6f]
  41d90c:	cli    
  41d90d:	adc    bh,BYTE PTR [esi]
  41d90f:	mov    edx,0xf505d3bb
  41d914:	imul   ebx,DWORD PTR [ecx+ecx*2],0x70
  41d918:	loop   0x41d8d6
  41d91a:	jne    0x41d904
  41d91c:	and    DWORD PTR [edx],ebp
  41d91e:	mov    edi,0x57742f2e
  41d923:	jl     0x41d97e
  41d925:	loopne 0x41d8ea
  41d927:	xchg   edi,eax
  41d928:	inc    edx
  41d929:	arpl   WORD PTR [ebx+0x23],di
  41d92c:	(bad)  
  41d92e:	jge    0x41d95a
  41d930:	(bad)  
  41d931:	(bad)  
  41d933:	test   bh,bl
  41d935:	das    
  41d936:	push   ss
  41d937:	aam    0xf9
  41d939:	sbb    dh,BYTE PTR [edi+0x19]
  41d93c:	test   al,0xfc
  41d93e:	sbb    BYTE PTR [esi+0x719f8b63],cl
  41d944:	pop    eax
  41d945:	inc    ebp
  41d946:	outs   dx,BYTE PTR gs:[esi]
  41d948:	aaa    
  41d949:	in     eax,dx
  41d94a:	leave  
  41d94b:	jmp    0xa598082f
  41d950:	sub    al,ch
  41d952:	cli    
  41d953:	pop    edx
  41d954:	pop    ss
  41d955:	mov    al,ds:0x75272292
  41d95a:	mov    ebp,0xd91a47e6
  41d95f:	repz cli 
  41d961:	dec    ebp
  41d962:	mov    eax,0xad58ae13
  41d967:	inc    ecx
  41d968:	outs   dx,DWORD PTR ds:[si]
  41d96a:	jmp    0xe825:0xc081ad5b
  41d971:	ss ds mov bl,0x35
  41d975:	aaa    
  41d976:	jns    0x41d9e8
  41d978:	daa    
  41d979:	jo     0x41d977
  41d97b:	mov    edi,0x4a509e20
  41d980:	jecxz  0x41d99b
  41d982:	push   0xee4b4d2e
  41d987:	stos   BYTE PTR es:[edi],al
  41d988:	jle    0x41d9d7
  41d98a:	outs   dx,DWORD PTR ds:[esi]
  41d98b:	stos   BYTE PTR es:[edi],al
  41d98c:	and    eax,0xa246d861
  41d991:	pop    ebx
  41d992:	xor    eax,0x1ce6e5df
  41d997:	ror    ebx,cl
  41d999:	lea    ecx,[eax+0x1a]
  41d99c:	inc    eax
  41d99d:	sbb    ecx,ebx
  41d99f:	mov    ecx,0xda8ad82f
  41d9a4:	mov    bh,0x26
  41d9a6:	mov    esp,0xe0647516
  41d9ab:	sahf   
  41d9ac:	pop    ebp
  41d9ad:	inc    edx
  41d9ae:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d9b0:	xchg   esi,esi
  41d9b2:	mov    ds:0x4cdfcbe9,eax
  41d9b7:	add    dh,BYTE PTR [eax+ebp*8+0x6a]
  41d9bb:	mov    bl,0x59
  41d9bd:	add    BYTE PTR [edx-0x44],dl
  41d9c0:	cmp    BYTE PTR [ebp+ebx*4+0x3be4f591],dl
  41d9c7:	call   FWORD PTR [edi-0x1a0355db]
  41d9cd:	popa   
  41d9ce:	pop    ebp
  41d9cf:	dec    esi
  41d9d0:	mov    bl,BYTE PTR [edx+eiz*4+0x46]
  41d9d4:	xor    DWORD PTR [ecx+0x523b50e3],edx
  41d9da:	aad    0xb7
  41d9dc:	in     eax,0xff
  41d9de:	int    0x19
  41d9e0:	dec    dx
  41d9e2:	je     0x41d998
  41d9e4:	mov    cl,0x60
  41d9e6:	jae    0x41da0c
  41d9e8:	fcomp  st(2)
  41d9ea:	xchg   esp,eax
  41d9eb:	or     eax,0x7947c4cd
  41d9f0:	js     0x41d9b9
  41d9f2:	mov    BYTE PTR [eax+0x66],ch
  41d9f5:	xchg   esp,eax
  41d9f6:	jnp    0x41d9f1
  41d9f8:	dec    eax
  41d9f9:	inc    ecx
  41d9fa:	fiadd  DWORD PTR [edi-0x7b72a5bc]
  41da00:	sub    ebp,DWORD PTR [ebx-0x3bc2254d]
  41da06:	push   esi
  41da07:	sbb    edx,DWORD PTR [edx-0xf40ac0d]
  41da0d:	repz and BYTE PTR [ebp+0x6e6a26a3],cl
  41da14:	jp     0x41d9b2
  41da16:	or     eax,0x62637cbf
  41da1b:	lea    ecx,[esi-0x4f]
  41da1e:	mov    dh,0xac
  41da20:	jnp    0x41da34
  41da22:	sub    al,cl
  41da24:	out    dx,al
  41da25:	and    esi,DWORD PTR [esi-0x246c5fce]
  41da2b:	in     eax,dx
  41da2c:	dec    edi
  41da2d:	push   edi
  41da2e:	mov    cl,0x8d
  41da30:	jecxz  0x41d9b7
  41da32:	(bad)  
  41da34:	das    
  41da35:	add    ecx,DWORD PTR [ebx-0x2883f1f3]
  41da3b:	and    al,0x5a
  41da3d:	pop    esp
  41da3e:	pop    edi
  41da3f:	or     cl,BYTE PTR [esi]
  41da41:	dec    eax
  41da42:	push   ebp
  41da43:	ret    
  41da44:	cli    
  41da45:	mov    eax,0x9dcdf7d9
  41da4a:	sti    
  41da4b:	outs   dx,BYTE PTR ds:[esi]
  41da4c:	pop    ecx
  41da4d:	jbe    0x41d9dc
  41da4f:	cli    
  41da50:	jns    0x41dacc
  41da52:	cs ds aaa 
  41da55:	sar    al,1
  41da57:	push   es
  41da58:	retf   0xc0e6
  41da5b:	add    esp,DWORD PTR [edi+edi*4-0x42]
  41da5f:	push   ecx
  41da60:	ja     0x41da7e
  41da62:	pop    esi
  41da63:	arpl   WORD PTR [esi+0x32],dx
  41da66:	or     ecx,esp
  41da68:	ja     0x41da67
  41da6a:	or     eax,ebx
  41da6c:	shl    DWORD PTR [esi-0x30615032],cl
  41da72:	adc    dl,BYTE PTR [esi+0x61]
  41da75:	test   eax,0x5d8ffa8
  41da7a:	jge    0x41da5b
  41da7c:	(bad)  
  41da7d:	lock pop edi
  41da7f:	in     al,0xf0
  41da81:	cdq    
  41da82:	inc    ebx
  41da83:	or     BYTE PTR [edx+0x3e],0xc0
  41da87:	xor    ecx,DWORD PTR [ebx+eax*8-0x6a]
  41da8b:	jp     0x41dad7
  41da8d:	jne    0x41dae7
  41da8f:	shl    BYTE PTR [esi+0x74],0xe3
  41da93:	mov    BYTE PTR [ecx+0x78],bh
  41da96:	retf   
  41da97:	dec    esi
  41da98:	push   cs
  41da99:	stos   DWORD PTR es:[edi],eax
  41da9a:	xchg   ebx,eax
  41da9b:	sahf   
  41da9c:	sbb    eax,0xba169100
  41daa1:	in     eax,dx
  41daa2:	dec    ecx
  41daa3:	jbe    0x41daf3
  41daa5:	jb     0x41da3e
  41daa7:	cwde   
  41daa8:	sbb    al,BYTE PTR [edx+0x38]
  41daab:	iret   
  41daac:	stc    
  41daad:	retf   0x1f49
  41dab0:	cmc    
  41dab1:	xor    al,0x36
  41dab3:	pop    edx
  41dab4:	in     eax,dx
  41dab5:	xor    ah,BYTE PTR [edx]
  41dab7:	xlat   BYTE PTR ds:[ebx]
  41dab8:	xor    al,0x94
  41daba:	mov    ds:0x5aa009bd,al
  41dabf:	dec    ecx
  41dac0:	rcl    ch,cl
  41dac2:	cmp    eax,esp
  41dac4:	add    eax,0xdd0afa06
  41dac9:	(bad)  
  41dacb:	pop    ecx
  41dacc:	lea    eax,[ecx]
  41dace:	cmp    al,0x75
  41dad0:	xor    DWORD PTR [ecx+0x52],esi
  41dad3:	call   0xb7bb:0x4a6b0e2c
  41dada:	cwde   
  41dadb:	fisttp QWORD PTR [edx]
  41dadd:	cmp    eax,ebp
  41dadf:	scas   eax,DWORD PTR es:[edi]
  41dae0:	jmp    0x41dab5
  41dae2:	jb     0x41dad2
  41dae4:	jle    0x41db04
  41dae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae7:	or     edx,ecx
  41dae9:	neg    BYTE PTR [bx+si]
  41daec:	add    al,0x3
  41daee:	psubusw mm3,QWORD PTR [edx-0x40]
  41daf2:	inc    ecx
  41daf3:	mov    esi,0x46af8234
  41daf8:	iret   
  41daf9:	add    eax,0xad136ca
  41dafe:	mov    ebx,DWORD PTR [edx-0x2c1af96b]
  41db04:	fdivr  DWORD PTR [edx]
  41db06:	out    0x5a,al
  41db08:	jae    0x41db06
  41db0a:	retf   0x6a12
  41db0d:	test   eax,0x98c3ef07
  41db12:	sub    eax,0xcea6d4bb
  41db17:	(bad)  
  41db18:	call   0x5169fc09
  41db1d:	lock in eax,0xf2
  41db20:	fwait
  41db21:	(bad)  
  41db22:	js     0x41dba3
  41db24:	out    0xd9,al
  41db26:	jnp    0x41db5f
  41db28:	push   esi
  41db29:	lds    ecx,FWORD PTR [eax+0x6d6233]
  41db2f:	mov    cl,0x1e
  41db31:	mov    cl,0x3
  41db33:	pop    ecx
  41db34:	add    ch,ah
  41db36:	sub    bl,BYTE PTR [ecx+0x58f6a830]
  41db3c:	pop    ss
  41db3d:	aaa    
  41db3e:	inc    esi
  41db3f:	popw   ss
  41db41:	outs   dx,BYTE PTR ds:[esi]
  41db42:	retf   
  41db43:	sub    BYTE PTR ds:0xc83b67b6,ch
  41db49:	(bad)  
  41db4b:	fiadd  DWORD PTR [esi]
  41db4d:	sbb    eax,0x66e3aaaa
  41db52:	sub    eax,0x126e40e7
  41db57:	ins    DWORD PTR es:[edi],dx
  41db58:	xchg   edi,eax
  41db59:	push   ebx
  41db5a:	inc    esi
  41db5b:	inc    ebp
  41db5c:	mov    esi,0xd1ab8e20
  41db61:	fimul  WORD PTR [esi+0x47]
  41db64:	jp     0x41dba5
  41db66:	dec    esp
  41db67:	mov    ebp,0x35204981
  41db6d:	sbb    BYTE PTR [edi+0x25],ah
  41db70:	cdq    
  41db71:	jl     0x41dbe0
  41db73:	mov    cl,0x4d
  41db75:	add    eax,0x8907b66d
  41db7a:	imul   edi,edx,0x4d
  41db7d:	mov    bl,0x64
  41db7f:	mov    ds:0x41acb150,al
  41db84:	jl     0x41dbf2
  41db86:	sub    edx,DWORD PTR [edx+0x59]
  41db89:	data16 and ah,ah
  41db8c:	shl    BYTE PTR [ebx+0x42],cl
  41db8f:	sbb    al,0xd7
  41db91:	dec    ecx
  41db92:	fcom   QWORD PTR [ebx*2+0x734a003a]
  41db99:	jno    0x41dbf0
  41db9b:	lock lock pop ebp
  41db9e:	mov    ecx,0x95b6855a
  41dba3:	jecxz  0x41dbfc
  41dba5:	(bad)  
  41dba6:	xchg   esi,eax
  41dba7:	push   eax
  41dba8:	inc    esp
  41dba9:	or     al,0x19
  41dbab:	aam    0x45
  41dbad:	loop   0x41dc2c
  41dbaf:	add    ch,BYTE PTR [ebx+0x3a]
  41dbb2:	shl    BYTE PTR [ebx+eiz*4],0xa9
  41dbb6:	daa    
  41dbb7:	xchg   ebp,eax
  41dbb8:	sub    eax,0x6f0837ed
  41dbbd:	and    al,0xae
  41dbbf:	ret    0x3fe6
  41dbc2:	mov    ebx,0xdc60001d
  41dbc7:	je     0x41dbd6
  41dbc9:	inc    ecx
  41dbca:	daa    
  41dbcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbcc:	inc    ebp
  41dbcd:	mov    edi,0x416d1b5f
  41dbd2:	jbe    0x41db73
  41dbd4:	pop    edx
  41dbd5:	loopne 0x41dc2d
  41dbd7:	jb     0x41dc0f
  41dbd9:	daa    
  41dbda:	call   0x692ebcdb
  41dbdf:	or     al,0x7f
  41dbe1:	adc    eax,edi
  41dbe3:	aas    
  41dbe4:	ret    0xb9f
  41dbe7:	out    dx,al
  41dbe8:	jmp    0x9c93e07a
  41dbed:	inc    edi
  41dbee:	mul    cl
  41dbf0:	mov    ch,0x2
  41dbf2:	lods   al,BYTE PTR ds:[esi]
  41dbf3:	std    
  41dbf4:	test   ebx,esp
  41dbf6:	adc    eax,0x80f5667e
  41dbfb:	cmp    eax,0x239071f4
  41dc00:	int    0x5c
  41dc02:	shl    DWORD PTR [ecx-0x5f],1
  41dc05:	aam    0xba
  41dc07:	fmul   st(3),st
  41dc09:	sahf   
  41dc0a:	out    0x54,eax
  41dc0c:	mov    al,ds:0x101bb9c2
  41dc11:	neg    DWORD PTR [eax+0x7abf3dfa]
  41dc17:	call   0x71b3:0xe5189dec
  41dc1e:	mov    esi,0x42e45a64
  41dc23:	jnp    0x41dbee
  41dc25:	xor    al,0xc3
  41dc27:	stos   DWORD PTR es:[edi],eax
  41dc28:	pop    esi
  41dc29:	mov    bh,BYTE PTR [eax]
  41dc2b:	enter  0x3988,0xf
  41dc2f:	or     ecx,DWORD PTR [eax+0x4045ba0b]
  41dc35:	fsub   QWORD PTR [esi+0x3a]
  41dc38:	push   ds
  41dc39:	sbb    bl,bh
  41dc3b:	pop    ecx
  41dc3c:	mov    dl,0xb1
  41dc3e:	(bad)  
  41dc40:	push   eax
  41dc41:	add    bh,BYTE PTR ds:[eax-0x59ba05f5]
  41dc48:	into   
  41dc49:	jo     0x41dc8f
  41dc4b:	retf   0xcf90
  41dc4e:	xchg   edx,eax
  41dc4f:	mov    al,ds:0xe72e2975
  41dc54:	enter  0xa4d7,0xdb
  41dc58:	pop    es
  41dc59:	stos   DWORD PTR es:[edi],eax
  41dc5a:	xchg   edi,eax
  41dc5b:	mov    al,0x4f
  41dc5d:	mov    esi,0xbbb8d450
  41dc62:	push   edi
  41dc63:	pop    esp
  41dc64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc65:	popa   
  41dc66:	es xchg ebx,eax
  41dc68:	ins    DWORD PTR es:[edi],dx
  41dc69:	pushf  
  41dc6a:	inc    ecx
  41dc6b:	imul   edi,DWORD PTR [esi-0x21],0xffffff9e
  41dc6f:	sahf   
  41dc70:	pop    esp
  41dc71:	or     eax,0xc0df414b
  41dc76:	push   ds
  41dc77:	or     esp,DWORD PTR [eax+0x37]
  41dc7a:	out    0x78,eax
  41dc7c:	push   esp
  41dc7d:	aad    0x2e
  41dc7f:	adc    al,0x6c
  41dc81:	loop   0x41dc4e
  41dc83:	mov    bl,0x6b
  41dc85:	mov    dl,0x7b
  41dc87:	dec    esi
  41dc88:	or     ecx,ebx
  41dc8a:	aam    0x9e
  41dc8c:	ins    DWORD PTR es:[edi],dx
  41dc8d:	jmp    0xb57c33e9
  41dc92:	pop    ecx
  41dc93:	pusha  
  41dc94:	mov    esi,0x8133a9b2
  41dc99:	push   ss
  41dc9a:	push   ebp
  41dc9b:	xor    ecx,edi
  41dc9d:	adc    edx,DWORD PTR [ebx+eax*1-0x3]
  41dca1:	sub    ebx,DWORD PTR [ecx]
  41dca3:	outs   dx,DWORD PTR ds:[esi]
  41dca4:	std    
  41dca5:	inc    ebx
  41dca6:	ja     0x41dc28
  41dca8:	mov    ch,cl
  41dcaa:	jne    0x41dc86
  41dcac:	inc    edx
  41dcad:	aam    0x46
  41dcaf:	stos   DWORD PTR es:[edi],eax
  41dcb0:	(bad)  
  41dcb1:	jo     0x41dcaa
  41dcb3:	popf   
  41dcb4:	ror    BYTE PTR ds:0x28e02ef4,1
  41dcba:	dec    edi
  41dcbb:	mov    ebx,0x3ce396a0
  41dcc0:	ficomp WORD PTR [eax]
  41dcc2:	add    al,0xa6
  41dcc4:	jmp    0x41dc4c
  41dcc6:	jns    0x41dccf
  41dcc8:	jo     0x41dd49
  41dcca:	sahf   
  41dccb:	int    0xc0
  41dccd:	xchg   esp,eax
  41dcce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dccf:	inc    edx
  41dcd0:	or     eax,0x8d3291b0
  41dcd5:	and    DWORD PTR [edi],eax
  41dcd7:	je     0x41dc8f
  41dcd9:	jnp    0x41dca5
  41dcdb:	inc    esi
  41dcdc:	jbe    0x41dd53
  41dcde:	loope  0x41dcc1
  41dce0:	pop    ebx
  41dce1:	(bad)  
  41dce3:	mov    esp,0x839cb98d
  41dce8:	aaa    
  41dce9:	out    dx,al
  41dcea:	mov    ch,0x2b
  41dcec:	pop    ds
  41dced:	pop    esp
  41dcee:	sbb    dl,BYTE PTR [ebx+0x3f521d1]
  41dcf4:	imul   ebp,DWORD PTR [edx],0xdd74beed
  41dcfa:	mov    ds:0x651cb5a2,eax
  41dcff:	aad    0x93
  41dd01:	int    0xc6
  41dd03:	lods   al,BYTE PTR ds:[esi]
  41dd04:	arpl   WORD PTR [edx+eax*1+0x48],bp
  41dd08:	in     eax,dx
  41dd09:	sbb    bh,BYTE PTR [ecx+edi*8+0x7e]
  41dd0d:	or     BYTE PTR [eax+0x54],0x4b
  41dd11:	pop    edi
  41dd12:	dec    ebx
  41dd13:	push   0x845800db
  41dd18:	add    ch,BYTE PTR [eax]
  41dd1a:	imul   esp,DWORD PTR [ebp+0x1f],0x39
  41dd1e:	neg    DWORD PTR [esi+ebx*8-0x76]
  41dd22:	sti    
  41dd23:	push   cs
  41dd24:	bound  ebp,QWORD PTR [edx-0x3c8eecf6]
  41dd2a:	jne    0x41dda5
  41dd2c:	mov    dh,0x29
  41dd2e:	loop   0x41dcc0
  41dd30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd31:	mov    bl,0xc1
  41dd33:	sub    DWORD PTR [edx-0x47],edi
  41dd36:	orps   xmm6,xmm2
  41dd39:	int    0x5b
  41dd3b:	and    al,cl
  41dd3d:	or     DWORD PTR [ebx],ecx
  41dd3f:	add    BYTE PTR [ecx+0x1b],0x21
  41dd43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd44:	(bad)  
  41dd45:	scas   eax,DWORD PTR es:[edi]
  41dd46:	outs   dx,DWORD PTR ds:[esi]
  41dd47:	cmc    
  41dd48:	int    0xfa
  41dd4a:	sbb    al,0x8f
  41dd4c:	pop    ss
  41dd4d:	aad    0x93
  41dd4f:	pop    ebp
  41dd50:	cmp    eax,0xed8d5dff
  41dd55:	mov    esp,DWORD PTR [edx+edi*1]
  41dd58:	sub    edi,esp
  41dd5a:	pop    esp
  41dd5b:	es dec esp
  41dd5d:	mov    al,0x33
  41dd5f:	sub    DWORD PTR [eax-0x1d],ebx
  41dd62:	rcr    DWORD PTR [edi],0x1e
  41dd65:	mov    ah,0xf7
  41dd67:	nop
  41dd68:	push   ss
  41dd69:	test   eax,0xc8bf6f23
  41dd6e:	xor    al,0xa0
  41dd70:	cli    
  41dd71:	shl    BYTE PTR [edx+ebp*4],1
  41dd74:	push   ds
  41dd75:	jg     0x41dda6
  41dd77:	or     al,0x64
  41dd79:	inc    edi
  41dd7a:	mov    ecx,0xb7493a92
  41dd7f:	add    edx,DWORD PTR [edx]
  41dd81:	ins    BYTE PTR es:[edi],dx
  41dd82:	pop    ebx
  41dd83:	or     al,0xef
  41dd85:	mov    al,ds:0x4f64ab76
  41dd8a:	xor    ecx,esp
  41dd8c:	setbe  BYTE PTR [esi+0x146f66ba]
  41dd93:	cmp    eax,0x38537cfa
  41dd98:	inc    ebx
  41dd99:	pop    ecx
  41dd9a:	and    BYTE PTR [edx],ah
  41dd9c:	mov    ebp,0x9c6db5ef
  41dda1:	jnp    0x41dd3e
  41dda3:	or     BYTE PTR [eax+0x29],dh
  41dda6:	lock sti 
  41dda8:	dec    esp
  41dda9:	stos   DWORD PTR es:[edi],eax
  41ddaa:	mov    edx,0x405f55ad
  41ddaf:	push   ss
  41ddb0:	push   cs
  41ddb1:	cmp    eax,0xeb423451
  41ddb6:	and    ch,dl
  41ddb8:	mov    dh,0xbe
  41ddba:	loopne 0x41dd7e
  41ddbc:	xor    ch,BYTE PTR [edi+0x3864908f]
  41ddc2:	cwde   
  41ddc3:	pusha  
  41ddc4:	xchg   edi,eax
  41ddc5:	jl     0x41dd50
  41ddc7:	addr16 inc edi
  41ddc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddca:	xchg   DWORD PTR [ecx+0x67b9ac97],ecx
  41ddd0:	fxch   st(5)
  41ddd2:	inc    esi
  41ddd3:	or     edx,esi
  41ddd5:	ins    DWORD PTR es:[edi],dx
  41ddd6:	stc    
  41ddd7:	cmp    eax,DWORD PTR [edx-0x44e5455b]
  41dddd:	jbe    0x41de14
  41dddf:	and    DWORD PTR [ebx],0x76
  41dde2:	adc    DWORD PTR ds:0x928d4b53,edx
  41dde8:	test   bh,dh
  41ddea:	popa   
  41ddeb:	push   ds
  41ddec:	xor    BYTE PTR [esi],bh
  41ddee:	mov    esi,0xdbf585ad
  41ddf3:	jb     0x41dd9c
  41ddf5:	test   eax,0x891357fb
  41ddfa:	in     al,dx
  41ddfb:	fcmovu st,st(5)
  41ddfd:	jecxz  0x41de16
  41ddff:	pop    edi
  41de00:	pop    ecx
  41de01:	imul   edi,DWORD PTR [esi-0x2a8bd124],0x381eeb2c
  41de0b:	pop    esp
  41de0c:	ficom  DWORD PTR [edi]
  41de0e:	dec    eax
  41de0f:	sti    
  41de10:	dec    ebx
  41de11:	xchg   esi,eax
  41de12:	les    edx,FWORD PTR [edi+edi*1]
  41de15:	inc    esi
  41de16:	sub    edi,DWORD PTR [ecx+0x20]
  41de19:	add    al,0xe1
  41de1b:	push   ebx
  41de1c:	jl     0x41ddb0
  41de1e:	add    eax,0xcd1cc63b
  41de23:	enter  0x66fb,0x21
  41de27:	add    al,0xef
  41de29:	add    edi,0xfff680a8
  41de2f:	xacquire xchg DWORD PTR [edi-0x2254dedb],esp
  41de36:	and    eax,DWORD PTR [eax]
  41de38:	push   ss
  41de39:	inc    ecx
  41de3a:	adc    BYTE PTR [eax],dh
  41de3c:	(bad)  
  41de3d:	sub    eax,0xa44ba6d7
  41de42:	mov    dl,0xa1
  41de44:	stc    
  41de45:	dec    esi
  41de46:	ss pop esi
  41de48:	mov    cl,0xe2
  41de4a:	(bad)  
  41de4b:	jne    0x41debd
  41de4d:	fs ins DWORD PTR es:[edi],dx
  41de4f:	imul   edx,DWORD PTR [eax],0x4d
  41de52:	sub    al,0xce
  41de54:	into   
  41de55:	cmp    ch,dh
  41de57:	ins    BYTE PTR es:[edi],dx
  41de58:	mov    WORD PTR [edx+esi*2],ds
  41de5b:	ficom  DWORD PTR cs:[edx-0x4e]
  41de60:	imul   esp,DWORD PTR [eax-0x1478b205],0x240355d1
  41de6a:	xchg   esp,eax
  41de6b:	jbe    0x41de89
  41de6d:	int    0x2a
  41de6f:	call   0x790e11b7
  41de74:	jbe    0x41de60
  41de76:	icebp  
  41de77:	mov    BYTE PTR [ecx+0x7e58f91f],dl
  41de7d:	jb     0x41deaf
  41de7f:	jns    0x41ded7
  41de81:	shl    ch,1
  41de83:	mov    ah,0x47
  41de85:	and    al,0xcd
  41de88:	arpl   WORD PTR [ebx],sp
  41de8a:	mov    ds:0x878571f2,eax
  41de8f:	jp     0xf3539b80
  41de95:	mov    ch,0xf6
  41de97:	minps  xmm4,xmm5
  41de9a:	fwait
  41de9b:	mov    BYTE PTR [ebp*4-0x195deb27],al
  41dea2:	sub    esi,DWORD PTR [ebp+0x39]
  41dea5:	xlat   BYTE PTR ds:[ebx]
  41dea6:	leave  
  41dea7:	push   0xffffffc1
  41dea9:	mov    ds:0xfc3fe7e0,eax
  41deae:	loop   0x41deae
  41deb0:	xor    BYTE PTR [eax],bl
  41deb2:	stos   DWORD PTR es:[edi],eax
  41deb3:	sub    al,0xa2
  41deb5:	repnz pop edi
  41deb7:	repnz or sp,WORD PTR [eax-0x78]
  41debc:	(bad)  
  41debd:	out    0x2d,eax
  41debf:	inc    esp
  41dec0:	popa   
  41dec1:	hlt    
  41dec2:	loope  0x41df28
  41dec4:	pop    es
  41dec5:	dec    esp
  41dec6:	(bad)  
  41dec7:	cmc    
  41dec8:	sbb    DWORD PTR [edi],0x5c
  41decb:	sub    DWORD PTR [edx],0x32
  41dece:	aaa    
  41decf:	lahf   
  41ded0:	mov    bh,0x92
  41ded2:	dec    esi
  41ded3:	jp     0x41dea3
  41ded5:	cmp    al,0x7
  41ded7:	cmc    
  41ded8:	jnp    0x41df3f
  41deda:	mov    dl,BYTE PTR [edx-0x72]
  41dedd:	mov    dl,0xb1
  41dedf:	or     ch,bl
  41dee1:	xchg   ebx,eax
  41dee2:	pop    edx
  41dee3:	loop   0x41de9d
  41dee5:	je     0x41de82
  41dee7:	es xor cl,BYTE PTR gs:[esp+eax*2-0x6d]
  41deed:	out    0xcb,eax
  41deef:	mov    edi,0x35b2930f
  41def4:	and    DWORD PTR [ebp-0x2256d787],ebx
  41defa:	imul   edx,DWORD PTR [esi],0x72
  41defd:	sbb    BYTE PTR [eax+0x56],bh
  41df00:	sub    al,0x20
  41df02:	mov    ecx,0xd3c8228d
  41df07:	fs bnd js 0x41dec1
  41df0b:	push   edx
  41df0c:	out    dx,eax
  41df0d:	sub    ebx,0x67
  41df10:	in     eax,0x43
  41df12:	pop    ebx
  41df13:	sbb    DWORD PTR [edx+0x2f],eax
  41df16:	xchg   edi,eax
  41df17:	imul   ebp,ecx,0x776b1cb1
  41df1d:	xchg   esp,eax
  41df1e:	call   0xded5:0x795323e2
  41df25:	cmp    eax,0x8d225385
  41df2a:	loop   0x41df0f
  41df2c:	mov    edx,0xff8256e
  41df31:	or     ch,BYTE PTR [esi+0x70294be5]
  41df37:	arpl   sp,bx
  41df39:	cmp    eax,0x2e848d6b
  41df3e:	stc    
  41df3f:	out    dx,al
  41df40:	out    dx,al
  41df41:	and    DWORD PTR [edx-0x117e9dfe],esi
  41df47:	ins    DWORD PTR es:[edi],dx
  41df48:	and    eax,0x9b35342b
  41df4d:	xor    eax,0x8e12eadf
  41df52:	mov    ebx,0xf225056a
  41df57:	mov    al,ds:0x1143f359
  41df5c:	xlat   BYTE PTR ds:[ebx]
  41df5d:	ret    
  41df5e:	jmp    0xe71a1b0b
  41df63:	mov    esp,0xd776af6d
  41df68:	sub    eax,DWORD PTR [edi+0x53]
  41df6b:	iret   
  41df6c:	add    ecx,ebp
  41df6e:	shr    BYTE PTR [eax+ebp*4+0x21b68f78],1
  41df75:	sbb    edi,ecx
  41df77:	sub    DWORD PTR [eax-0x60],edx
  41df7a:	mov    esp,0x49b30de8
  41df7f:	lock in eax,dx
  41df81:	jns    0x41dfa6
  41df83:	icebp  
  41df84:	mov    eax,ds:0x9d6edf2a
  41df89:	lods   al,BYTE PTR ds:[esi]
  41df8a:	push   ss
  41df8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df8c:	sahf   
  41df8d:	call   0x1d455b6e
  41df92:	sbb    BYTE PTR [edi],ah
  41df94:	and    DWORD PTR [eax+0x6554709b],edi
  41df9a:	sbb    ecx,ebx
  41df9c:	cs js  0x41dfc7
  41df9f:	lods   al,BYTE PTR ds:[esi]
  41dfa0:	sub    esp,DWORD PTR [ebp+0x62]
  41dfa3:	pusha  
  41dfa4:	add    bh,BYTE PTR [esi+0x14]
  41dfa7:	dec    edx
  41dfa8:	adc    al,0x32
  41dfaa:	add    eax,0xe304fb9b
  41dfaf:	fwait
  41dfb0:	aaa    
  41dfb1:	jno    0x41dfd3
  41dfb3:	stos   DWORD PTR es:[edi],eax
  41dfb4:	pop    esp
  41dfb5:	enter  0xf879,0xa0
  41dfb9:	add    bl,bh
  41dfbb:	mov    ds:0xcb3e5d42,eax
  41dfc0:	mov    cl,0x6
  41dfc2:	fwait
  41dfc3:	mov    cl,0x72
  41dfc5:	nop
  41dfc6:	ins    BYTE PTR es:[edi],dx
  41dfc7:	fcom   DWORD PTR [edi]
  41dfc9:	sbb    al,0xaa
  41dfcb:	xor    BYTE PTR [ecx+0x17],ah
  41dfce:	out    0xca,al
  41dfd0:	(bad)  
  41dfd1:	and    DWORD PTR [ebx+0x73cf8032],ebp
  41dfd7:	loopne 0x41dff7
  41dfd9:	(bad)  
  41dfda:	leave  
  41dfdb:	mov    ah,0xa4
  41dfdd:	or     eax,0x2d73490c
  41dfe2:	adc    cl,BYTE PTR cs:[edx-0x52cc7fbd]
  41dfe9:	pop    es
  41dfea:	in     eax,dx
  41dfeb:	dec    ecx
  41dfec:	adc    ch,0xa2
  41dfef:	and    eax,0x247c1994
  41dff4:	aam    0x5c
  41dff6:	or     DWORD PTR [esi-0x1aa49237],0x5040279b
  41e000:	mov    al,ds:0x1a814670
  41e005:	jne    0x41e078
  41e007:	or     eax,ecx
  41e009:	sub    al,BYTE PTR [ebp-0x716e6a2c]
  41e00f:	sub    eax,0x14eabeb6
  41e014:	mov    ah,dl
  41e016:	inc    ebx
  41e017:	sbb    edi,DWORD PTR [edi+0x71]
  41e01a:	xchg   edx,eax
  41e01b:	mul    BYTE PTR [esi+0x50]
  41e01e:	sbb    BYTE PTR [edi],bl
  41e020:	repnz mov al,0x1b
  41e023:	inc    ebp
  41e024:	outs   dx,DWORD PTR ds:[esi]
  41e025:	sbb    edi,ebp
  41e027:	call   0x72988a09
  41e02c:	retf   0xd993
  41e02f:	rcr    BYTE PTR [ebx+0xbbb0f6a],0x39
  41e036:	push   ebp
  41e037:	fs ret 0xfa69
  41e03b:	push   ecx
  41e03c:	sbb    eax,0x7426eb35
  41e041:	sti    
  41e042:	xchg   ebp,eax
  41e043:	jecxz  0x41dfe8
  41e045:	rcl    BYTE PTR [edx+0x2a],0x19
  41e049:	adc    ebp,DWORD PTR [ecx+0x42cb06c2]
  41e04f:	add    esi,edx
  41e051:	inc    eax
  41e052:	ds mov ebp,0x627bf616
  41e058:	cmp    DWORD PTR [edi+0x74],0x24
  41e05c:	sbb    BYTE PTR [eax],ah
  41e05e:	add    BYTE PTR [ebp-0x23abad4f],ah
  41e064:	mov    dh,0x5a
  41e066:	mov    esi,0x6377a101
  41e06b:	mov    ch,0xd
  41e06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06e:	test   eax,0xbfe4b449
  41e073:	inc    DWORD PTR [edx-0x758f9161]
  41e079:	(bad)  
  41e07a:	scas   eax,DWORD PTR es:[edi]
  41e07b:	inc    esp
  41e07c:	add    al,0x71
  41e07e:	loope  0x41e04c
  41e080:	js     0x41e0a2
  41e082:	inc    ebx
  41e083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e084:	lock jecxz 0x41e02d
  41e087:	cmc    
  41e088:	in     al,dx
  41e089:	inc    edx
  41e08a:	sbb    al,0x14
  41e08c:	inc    ebx
  41e08d:	dec    ecx
  41e08e:	mov    ah,0x18
  41e090:	sub    DWORD PTR [edi+edx*2],0x1d0a2c05
  41e097:	test   esp,ecx
  41e099:	dec    ecx
  41e09a:	popf   
  41e09b:	es ins BYTE PTR es:[edi],dx
  41e09d:	stos   BYTE PTR es:[edi],al
  41e09e:	out    0xd2,eax
  41e0a0:	cmp    esi,DWORD PTR [esp+eiz*2+0x13]
  41e0a4:	stos   DWORD PTR es:[edi],eax
  41e0a5:	jge    0x41e087
  41e0a7:	dec    edi
  41e0a8:	push   ebx
  41e0a9:	lea    edi,[edi-0x6e68e7cf]
  41e0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b0:	push   ss
  41e0b1:	sbb    DWORD PTR [edx+0x4d638233],eax
  41e0b7:	adc    DWORD PTR [eax+0x41],ebx
  41e0ba:	adc    DWORD PTR [eax-0x5b0a0e6e],edx
  41e0c0:	add    al,0x8f
  41e0c2:	sti    
  41e0c3:	push   cs
  41e0c4:	stos   DWORD PTR es:[edi],eax
  41e0c5:	jnp    0x41e08c
  41e0c7:	pop    ebp
  41e0c8:	and    esp,DWORD PTR [edx-0x7627c1be]
  41e0ce:	not    cl
  41e0d0:	xor    ecx,DWORD PTR [ebp+0xc215efd]
  41e0d6:	jo     0x41e0ae
  41e0d8:	push   esp
  41e0d9:	xor    ecx,0xffffffed
  41e0dc:	repz pop ebp
  41e0de:	out    0x32,eax
  41e0e0:	call   0x1a80:0x4beb3a28
  41e0e7:	jp     0x41e078
  41e0e9:	adc    eax,0xb8ab54f3
  41e0ee:	leave  
  41e0ef:	mov    eax,ds:0x3fbeb461
  41e0f4:	xor    al,0x2
  41e0f6:	sub    BYTE PTR [edx-0x34],bl
  41e0f9:	fwait
  41e0fa:	int3   
  41e0fb:	in     al,dx
  41e0fc:	lods   eax,DWORD PTR ds:[esi]
  41e0fd:	in     al,0x63
  41e0ff:	xlat   BYTE PTR ds:[ebx]
  41e100:	cmp    cl,BYTE PTR [edi]
  41e102:	(bad)  
  41e103:	pop    eax
  41e104:	ss ds arpl WORD PTR es:[esi],cx
  41e109:	jbe    0x41e18a
  41e10b:	imul   ecx,DWORD PTR [edx],0xa177801e
  41e111:	and    DWORD PTR [esp+esi*1-0x6dd4d76b],edi
  41e118:	or     cl,BYTE PTR [edi]
  41e11a:	push   edx
  41e11b:	jae    0x41e0d5
  41e11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e11e:	pop    esi
  41e11f:	mov    al,0x2
  41e121:	popf   
  41e122:	sti    
  41e123:	dec    esi
  41e124:	or     al,0x42
  41e126:	mov    edi,DWORD PTR [edx]
  41e128:	nop
  41e129:	dec    ecx
  41e12a:	rcl    BYTE PTR [ecx-0xca70b3c],cl
  41e130:	test   ah,0x2a
  41e133:	jns    0x41e0db
  41e135:	test   DWORD PTR [eax+0x3],edi
  41e138:	das    
  41e139:	mov    cl,0xce
  41e13b:	aaa    
  41e13c:	(bad)  
  41e13e:	jbe    0x41e17f
  41e140:	cmp    ebp,ebx
  41e142:	(bad)  
  41e143:	into   
  41e144:	adc    dl,BYTE PTR [edi+0x1fd75202]
  41e14a:	cmc    
  41e14b:	mov    dh,ah
  41e14d:	mov    WORD PTR [edx],?
  41e14f:	push   cs
  41e150:	mov    BYTE PTR [esi-0x24],cl
  41e153:	mov    ds:0xdcdd7677,eax
  41e158:	add    eax,0xf68adde2
  41e15d:	clc    
  41e15e:	call   0x1dcb9ec
  41e163:	sar    BYTE PTR [eax-0x7d],cl
  41e166:	jno    0x41e115
  41e168:	mov    esi,0x790ed48e
  41e16d:	call   FWORD PTR [esi-0x68]
  41e170:	mov    ah,ch
  41e172:	sbb    ecx,DWORD PTR [ecx]
  41e174:	loopne 0x41e135
  41e176:	inc    DWORD PTR [ecx+0x46]
  41e179:	pop    es
  41e17a:	clc    
  41e17b:	cmp    al,BYTE PTR [edx]
  41e17d:	sub    bl,BYTE PTR [edi+0x74]
  41e180:	jo     0x41e12f
  41e182:	lahf   
  41e183:	ret    0x2169
  41e186:	fbstp  TBYTE PTR [edx+eax*8+0x3e7f092c]
  41e18d:	dec    ecx
  41e18e:	push   edx
  41e18f:	out    0x6a,eax
  41e191:	sub    eax,0x14b137f6
  41e196:	jl     0x41e13c
  41e198:	idiv   dh
  41e19a:	push   0x3fae9e5a
  41e19f:	repnz in eax,dx
  41e1a1:	stos   DWORD PTR es:[edi],eax
  41e1a2:	dec    ebp
  41e1a3:	jb     0x41e157
  41e1a5:	fcomp  DWORD PTR [ebp-0x42b6ec16]
  41e1ab:	sbb    BYTE PTR [esi+0x54fb8e4],0x10
  41e1b2:	loop   0x41e19e
  41e1b4:	cmp    ebx,ecx
  41e1b6:	xor    edx,ebp
  41e1b8:	cmp    DWORD PTR [eax+ebx*1],0x47
  41e1bc:	les    eax,FWORD PTR [esi]
  41e1be:	les    edi,FWORD PTR [ebx-0x6c200aca]
  41e1c4:	or     DWORD PTR [ebx-0x2c1c34f],0x3df79136
  41e1ce:	jecxz  0x41e1b2
  41e1d0:	ror    DWORD PTR ds:0xe9f11548,0xd0
  41e1d7:	adc    BYTE PTR [edi],al
  41e1d9:	xchg   edx,eax
  41e1da:	stos   BYTE PTR es:[edi],al
  41e1db:	pop    ebx
  41e1dc:	jp     0x41e20a
  41e1de:	loop   0x41e1a8
  41e1e0:	jg     0x41e171
  41e1e2:	in     al,0x97
  41e1e4:	shl    DWORD PTR [eax+esi*4-0x5],1
  41e1e8:	call   0xf51188f8
  41e1ed:	dec    ebx
  41e1ee:	mov    al,ds:0x11868e7f
  41e1f3:	outs   dx,BYTE PTR ds:[esi]
  41e1f4:	jnp    0x41e20a
  41e1f6:	push   ds
  41e1f7:	dec    eax
  41e1f8:	data16 sbb al,BYTE PTR [edx-0x506b392f]
  41e1ff:	retf   0x14b2
  41e202:	pop    esi
  41e203:	aas    
  41e204:	data16 jp 0x41e26b
  41e207:	add    edx,edx
  41e209:	pmaxub mm2,QWORD PTR [edi]
  41e20c:	push   edx
  41e20d:	sub    ah,BYTE PTR [eax+0x573cfbf5]
  41e213:	jecxz  0x41e230
  41e215:	stc    
  41e216:	sysenter 
  41e218:	ja     0x41e229
  41e21a:	jmp    0xf770:0x73eba600
  41e221:	mov    al,0xb6
  41e223:	call   0x91e5:0xe611deba
  41e22a:	or     al,0x89
  41e22c:	test   BYTE PTR [ecx*4+0x2971f93],bl
  41e233:	adc    DWORD PTR [ecx-0x7a],0x57
  41e237:	jg     0x41e2b2
  41e239:	ds jnp 0x41e2b6
  41e23c:	leave  
  41e23d:	inc    ebp
  41e23e:	sahf   
  41e23f:	inc    ebp
  41e240:	mov    edi,0xf6a2a1f3
  41e245:	clc    
  41e246:	adc    edx,DWORD PTR [ebx-0x4b]
  41e249:	cmp    eax,0x74c30fc2
  41e24e:	(bad)
  41e251:	out    0xe9,eax
  41e253:	jne    0x41e1f8
  41e255:	adc    BYTE PTR [edx],al
  41e257:	jmp    0xe1383ef3
  41e25c:	jecxz  0x41e254
  41e25e:	inc    esp
  41e25f:	ret    0xf765
  41e262:	inc    ecx
  41e263:	inc    esp
  41e264:	pop    ss
  41e265:	xor    edi,DWORD PTR [edi]
  41e267:	cdq    
  41e268:	mov    dh,BYTE PTR [ecx+0x3f]
  41e26b:	pop    ecx
  41e26c:	or     dh,cl
  41e26e:	ins    BYTE PTR es:[edi],dx
  41e26f:	(bad)  
  41e270:	out    dx,eax
  41e271:	cmc    
  41e272:	mov    DWORD PTR [esp+ebp*1+0x14],eax
  41e276:	dec    edi
  41e277:	sti    
  41e278:	repnz addr16 iret 
  41e27b:	ret    
  41e27c:	cli    
  41e27d:	xchg   edi,eax
  41e27e:	inc    esi
  41e27f:	jbe    0x41e23b
  41e281:	aad    0x56
  41e283:	sub    BYTE PTR ds:0x4512ec43,dl
  41e289:	jmp    0x41e240
  41e28b:	sub    ecx,esp
  41e28d:	sbb    ecx,ebx
  41e28f:	test   al,0x7a
  41e291:	dec    esi
  41e292:	icebp  
  41e293:	pop    ebp
  41e294:	(bad)  
  41e295:	mul    DWORD PTR [edx+0x34]
  41e298:	pop    es
  41e299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e29a:	retf   
  41e29b:	push   esi
  41e29c:	xor    DWORD PTR [ecx+0x4d],0x7d
  41e2a0:	jmp    0xcc62:0x71b9d757
  41e2a7:	enter  0x1155,0xef
  41e2ab:	push   edx
  41e2ac:	push   es
  41e2ad:	cmp    ah,BYTE PTR [edi+0x71]
  41e2b0:	enter  0xd813,0x57
  41e2b4:	test   DWORD PTR [ecx],ebp
  41e2b6:	retf   0xb746
  41e2b9:	ror    BYTE PTR [eax-0x3a154c69],cl
  41e2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c0:	or     eax,0xd377fcec
  41e2c5:	lds    ebx,FWORD PTR ds:0xa1b6a0d9
  41e2cb:	or     ebx,DWORD PTR [edi+0x651b1b85]
  41e2d1:	pop    ecx
  41e2d2:	rol    BYTE PTR ds:0xad2754c2,1
  41e2d8:	jns    0x41e2e6
  41e2da:	pop    edx
  41e2db:	dec    esi
  41e2dc:	and    DWORD PTR [ebp+0x560b1a36],esi
  41e2e2:	or     eax,edi
  41e2e4:	inc    ebx
  41e2e5:	in     eax,dx
  41e2e6:	pop    ebx
  41e2e7:	inc    edi
  41e2e8:	fs xchg edx,eax
  41e2ea:	inc    esi
  41e2eb:	pusha  
  41e2ec:	std    
  41e2ed:	out    0x51,eax
  41e2ef:	je     0x41e2ac
  41e2f1:	ret    
  41e2f2:	lahf   
  41e2f3:	sahf   
  41e2f4:	loopne 0x41e29b
  41e2f6:	xchg   ebp,eax
  41e2f7:	sbb    al,0xef
  41e2f9:	cwde   
  41e2fa:	leave  
  41e2fb:	jmp    0x21b0644d
  41e300:	jbe    0x41e335
  41e302:	mov    ah,0xe2
  41e304:	push   ss
  41e305:	out    0xe8,eax
  41e307:	test   DWORD PTR [ebx-0x20],0x83ce2c68
  41e30e:	enter  0x9075,0x95
  41e312:	stos   DWORD PTR es:[edi],eax
  41e313:	xchg   ebp,eax
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	cwde   
  41e316:	adc    BYTE PTR [ebx],ah
  41e318:	jle    0x41e2cb
  41e31a:	cli    
  41e31b:	fld    TBYTE PTR [ebx-0x4]
  41e31e:	sub    bh,cl
  41e320:	inc    edi
  41e321:	imul   ebx,DWORD PTR [eax+0x6256aa6c],0xcd6e9132
  41e32b:	(bad)  
  41e32c:	lds    esi,FWORD PTR [edi]
  41e32e:	sbb    al,0x53
  41e330:	inc    eax
  41e331:	and    eax,0x668dcdfb
  41e336:	cwde   
  41e337:	in     al,dx
  41e338:	add    eax,0x22f92e51
  41e33d:	cdq    
  41e33e:	loope  0x41e314
  41e340:	mov    esp,0x452ed82f
  41e345:	shl    BYTE PTR [ecx],0x31
  41e348:	push   es
  41e349:	adc    esi,DWORD PTR [edx+0x2485f987]
  41e34f:	in     al,dx
  41e350:	push   edi
  41e351:	stc    
  41e352:	jb     0x41e30f
  41e354:	in     al,0x9a
  41e356:	mov    dh,0x80
  41e358:	jle    0x41e30f
  41e35a:	fcmovnu st,st(2)
  41e35c:	ds fwait
  41e35e:	stc    
  41e35f:	cmc    
  41e360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e361:	inc    esp
  41e362:	cwde   
  41e363:	cmp    esi,DWORD PTR ds:0x947e694c
  41e369:	int    0x6a
  41e36b:	out    dx,al
  41e36c:	or     BYTE PTR [ebx-0x46806a8d],ah
  41e372:	enter  0xce29,0xc8
  41e376:	daa    
  41e377:	stos   DWORD PTR es:[edi],eax
  41e378:	je     0x41e3b0
  41e37a:	sbb    esi,DWORD PTR [esi-0x5c]
  41e37d:	jae    0x41e30f
  41e37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e380:	arpl   WORD PTR [edx],sp
  41e382:	jne    0x41e3c3
  41e384:	xchg   ebx,eax
  41e385:	loopne 0x41e38c
  41e387:	fstp   DWORD PTR [ebx-0x5e1baf14]
  41e38d:	cmp    esi,edx
  41e38f:	mov    edx,0x97b14d0e
  41e394:	xchg   edx,eax
  41e395:	iret   
  41e396:	mov    ds,WORD PTR [ebx+edx*8]
  41e399:	in     eax,dx
  41e39a:	pop    eax
  41e39b:	pop    ecx
  41e39c:	dec    edx
  41e39d:	(bad)  
  41e39e:	pop    ss
  41e39f:	and    al,cl
  41e3a1:	or     dh,0x68
  41e3a4:	imul   esi,DWORD PTR [edi+0x1dcf62ed],0xffffffad
  41e3ab:	sahf   
  41e3ac:	jb     0x41e3b5
  41e3ae:	int3   
  41e3af:	jns    0x41e332
  41e3b1:	and    edi,DWORD PTR [ebp+0x2344ffe1]
  41e3b7:	js     0x41e423
  41e3b9:	popf   
  41e3ba:	xchg   esp,eax
  41e3bb:	or     al,0x8d
  41e3bd:	repnz mov ah,0xbe
  41e3c0:	xor    ah,BYTE PTR [ebp+0x6b]
  41e3c3:	(bad)  
  41e3c4:	and    eax,0xb1576264
  41e3c9:	pop    ecx
  41e3ca:	cld    
  41e3cb:	(bad)  
  41e3cc:	cld    
  41e3cd:	ficom  DWORD PTR [ecx-0x46]
  41e3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d1:	cmp    eax,0xd720ea27
  41e3d6:	nop
  41e3d7:	lds    ebx,FWORD PTR [ebp+0x48882c15]
  41e3dd:	and    BYTE PTR [ecx],0x60
  41e3e0:	es ss or ah,dl
  41e3e4:	inc    ebx
  41e3e5:	ret    
  41e3e6:	push   ebp
  41e3e7:	hlt    
  41e3e8:	in     eax,0x4e
  41e3ea:	daa    
  41e3eb:	and    eax,0x11b52bbb
  41e3f0:	out    dx,al
  41e3f1:	out    0xbb,eax
  41e3f3:	test   al,0x74
  41e3f5:	dec    ecx
  41e3f6:	rol    BYTE PTR [edi-0x7d],1
  41e3f9:	test   dh,0x5d
  41e3fc:	arpl   WORD PTR [ecx-0x7be66a29],dx
  41e402:	rol    bh,0x90
  41e405:	ds dec esp
  41e407:	cmp    BYTE PTR [edx],dl
  41e409:	inc    edi
  41e40a:	test   BYTE PTR [esi+0x20f50edf],bl
  41e410:	fcom   st(0)
  41e412:	xchg   esi,eax
  41e413:	jecxz  0x41e3e6
  41e415:	sub    eax,0xbe218626
  41e41a:	gs mov edi,edx
  41e41d:	mov    edx,ss
  41e41f:	stos   BYTE PTR es:[edi],al
  41e420:	fdiv   DWORD PTR [ecx-0x1304bb3]
  41e426:	psrlw  mm2,QWORD PTR fs:[esi]
  41e42a:	test   al,0xca
  41e42c:	jmp    0x502375a0
  41e431:	add    DWORD PTR [ebp-0x5d],eax
  41e434:	mov    al,0xe4
  41e436:	inc    esi
  41e437:	ror    BYTE PTR [ebp+0x7b1c014e],0xc6
  41e43e:	int    0xbf
  41e440:	mov    al,ds:0xb3543d7e
  41e445:	(bad)  
  41e446:	pop    ebp
  41e447:	pop    ebx
  41e448:	imul   edi,DWORD PTR [ecx],0xcca34658
  41e44e:	xchg   ebx,eax
  41e44f:	lods   al,BYTE PTR ds:[esi]
  41e450:	shl    BYTE PTR [ebx-0x11],0x99
  41e454:	add    al,0x30
  41e456:	sbb    bl,BYTE PTR [ecx-0x659b377d]
  41e45c:	or     eax,0x10b499af
  41e461:	enter  0x7624,0x17
  41e465:	jnp    0x41e45a
  41e467:	pop    ss
  41e468:	push   cs
  41e469:	shr    esp,cl
  41e46b:	retf   
  41e46c:	fdivr  QWORD PTR [ecx-0x3]
  41e46f:	test   al,0xb1
  41e471:	mov    esp,0x496d88c3
  41e476:	test   eax,0x77664bcd
  41e47b:	leave  
  41e47c:	bound  eax,QWORD PTR [edx-0x56]
  41e47f:	push   edi
  41e480:	or     esi,DWORD PTR [edx+0x50e3a7ab]
  41e486:	das    
  41e487:	iret   
  41e488:	jg     0x41e441
  41e48a:	pop    esi
  41e48b:	inc    ebx
  41e48c:	shl    DWORD PTR [eax+ecx*8-0x4c],0x68
  41e491:	jo     0x41e43d
  41e493:	test   eax,0x765defcd
  41e498:	sub    al,BYTE PTR [ebx+0x7e]
  41e49b:	and    eax,0x9ef85822
  41e4a0:	arpl   WORD PTR [esi+0x69ad0f4d],sp
  41e4a6:	add    DWORD PTR [edx+0x5],0xffffffa5
  41e4aa:	and    edx,ebx
  41e4ac:	into   
  41e4ad:	mov    DWORD PTR [esi+0x67173146],edi
  41e4b3:	lods   al,BYTE PTR ds:[esi]
  41e4b4:	mov    dh,0x23
  41e4b6:	dec    ecx
  41e4b7:	cwde   
  41e4b8:	fwait
  41e4b9:	es sti 
  41e4bb:	out    dx,al
  41e4bc:	scas   eax,DWORD PTR es:[edi]
  41e4bd:	adc    ecx,DWORD PTR [ebp+0x1c]
  41e4c0:	jmp    0x41e507
  41e4c2:	jae    0x41e543
  41e4c4:	xchg   DWORD PTR ds:0x2963df32,ebx
  41e4ca:	and    dl,bl
  41e4cc:	dec    eax
  41e4cd:	mov    al,0xfe
  41e4cf:	sbb    BYTE PTR [ebx],cl
  41e4d1:	jno    0x41e4f3
  41e4d3:	(bad)  
  41e4d4:	push   bp
  41e4d6:	dec    ebx
  41e4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4d8:	inc    eax
  41e4d9:	mov    edx,0x2f30ade
  41e4de:	xor    eax,0x5de7f1eb
  41e4e3:	xor    cl,BYTE PTR ds:[esi]
  41e4e6:	push   0xfd26f378
  41e4eb:	je     0x41e4a7
  41e4ed:	sbb    eax,0xa8eebe5d
  41e4f2:	mov    bh,0xc6
  41e4f4:	sub    bl,BYTE PTR [ebx+0x1b]
  41e4f7:	inc    ebx
  41e4f8:	sbb    cl,BYTE PTR [ecx]
  41e4fa:	jecxz  0x41e4ad
  41e4fc:	pop    ebx
  41e4fd:	sbb    BYTE PTR [edi],bh
  41e4ff:	push   edx
  41e500:	or     BYTE PTR [edx],ch
  41e502:	retf   
  41e503:	cmp    BYTE PTR [ebx-0x35],dl
  41e506:	push   cs
  41e507:	int    0x33
  41e509:	xchg   ebp,eax
  41e50a:	clc    
  41e50b:	dec    edx
  41e50c:	(bad)  
  41e50d:	dec    edi
  41e50e:	or     dh,bl
  41e510:	sbb    BYTE PTR [eax+0x4a20b443],0xb0
  41e517:	(bad)  
  41e518:	jp     0x41e4de
  41e51a:	out    dx,eax
  41e51b:	or     DWORD PTR [ecx-0x243e000],edx
  41e521:	add    dl,bh
  41e523:	call   0xac67262f
  41e528:	ja     0x41e4ca
  41e52a:	mov    ds,edx
  41e52c:	jmp    0x41e4d6
  41e52e:	call   0x210e:0x655fd103
  41e535:	es ins BYTE PTR es:[edi],dx
  41e537:	push   ebp
  41e538:	lock repnz pop ebp
  41e53b:	jb     0x41e5b2
  41e53d:	mov    DWORD PTR fs:[ebx],eax
  41e540:	jnp    0x41e4d1
  41e542:	data16 mov al,0x73
  41e545:	cmp    esp,DWORD PTR [esi]
  41e547:	add    ebx,ebp
  41e549:	lea    ebp,[eax]
  41e54b:	pop    es
  41e54c:	fstp   QWORD PTR [esi-0x4f]
  41e54f:	sahf   
  41e550:	call   0x87946dd7
  41e555:	and    al,0x8
  41e557:	loop   0x41e561
  41e559:	stos   DWORD PTR es:[edi],eax
  41e55a:	inc    esi
  41e55b:	je     0x41e557
  41e55d:	sbb    bl,BYTE PTR [ecx+0x5a9ca7b]
  41e563:	cmp    eax,0x5ad1f2c1
  41e568:	xchg   ebx,eax
  41e569:	in     al,dx
  41e56a:	loop   0x41e509
  41e56c:	jmp    0x977b0a6d
  41e571:	xchg   esi,eax
  41e572:	xlat   BYTE PTR ds:[ebx]
  41e573:	and    DWORD PTR [edi],0xb171878c
  41e579:	lea    esp,[ebp+0x363998b9]
  41e57f:	jae    0x41e5f6
  41e581:	adc    edi,esi
  41e583:	repnz or DWORD PTR [eax*8-0xfc49b25],edx
  41e58b:	fcomp  DWORD PTR [eax]
  41e58d:	test   eax,0x1a8c8f34
  41e592:	in     eax,0xfe
  41e594:	in     al,dx
  41e595:	lahf   
  41e596:	sub    al,0xe5
  41e598:	and    BYTE PTR [ecx+0x5e],ah
  41e59b:	retf   
  41e59c:	cli    
  41e59d:	or     BYTE PTR [ebp-0x77ad18fd],dl
  41e5a3:	fs mov edi,0x52a24c06
  41e5a9:	mov    al,0x31
  41e5ab:	cli    
  41e5ac:	push   ds
  41e5ad:	mov    edi,0x5c78fd9c
  41e5b2:	mov    ds:0x29902913,al
  41e5b7:	out    dx,eax
  41e5b8:	in     eax,0x95
  41e5ba:	jmp    FWORD PTR [edx+0x4b86a864]
  41e5c0:	fisubr WORD PTR [ecx-0x4c491fe9]
  41e5c6:	mov    cl,0xe4
  41e5c8:	adc    BYTE PTR [eax-0xb],0x29
  41e5cc:	cmp    edi,DWORD PTR [edx]
  41e5ce:	imul   esp,DWORD PTR [esi+ebp*1+0x6e],0x90061664
  41e5d6:	pop    ebx
  41e5d7:	sbb    BYTE PTR [eax],bh
  41e5d9:	mov    DWORD PTR [ecx],edi
  41e5db:	enter  0xd22d,0x2
  41e5df:	in     eax,0x2e
  41e5e1:	mov    ecx,0x11aca078
  41e5e6:	push   DWORD PTR [ecx+ecx*4+0x33]
  41e5ea:	adc    al,0x6
  41e5ec:	cmp    BYTE PTR [ecx+0x314bb64b],0x7a
  41e5f3:	and    eax,0x93dd303f
  41e5f8:	xor    cl,BYTE PTR [eax+0x6c]
  41e5fb:	adc    eax,0x811ffe14
  41e600:	cmc    
  41e601:	sbb    edx,DWORD PTR [ebp-0x78626457]
  41e607:	push   ebx
  41e608:	dec    eax
  41e609:	ds push edi
  41e60b:	out    dx,al
  41e60c:	add    eax,0x3b220352
  41e611:	adc    eax,0x510f6cfe
  41e616:	out    dx,eax
  41e617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e618:	out    dx,eax
  41e619:	sub    bl,BYTE PTR [edx-0x4e]
  41e61c:	stos   DWORD PTR es:[edi],eax
  41e61d:	sbb    DWORD PTR [eax-0x67],0xffffffbf
  41e621:	or     dh,ah
  41e623:	fisttp WORD PTR [ebp-0x5971ba49]
  41e629:	xor    DWORD PTR [ebx+0x2bb4f4d3],esi
  41e62f:	add    dl,al
  41e631:	int3   
  41e632:	mov    ah,0x58
  41e635:	lods   al,BYTE PTR ds:[esi]
  41e636:	add    DWORD PTR [edi],ebx
  41e638:	std    
  41e639:	retf   0xf1b7
  41e63c:	mov    eax,ds:0x32422bc1
  41e641:	out    dx,al
  41e642:	repz pushf 
  41e644:	mul    esi
  41e646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e647:	es cwde 
  41e649:	daa    
  41e64a:	popa   
  41e64b:	dec    esp
  41e64c:	cmc    
  41e64d:	(bad)  
  41e64e:	mov    edx,0x26d3b6d4
  41e653:	lds    edx,FWORD PTR [ebx+0x250921df]
  41e659:	pop    ebp
  41e65a:	xchg   esi,eax
  41e65b:	inc    edi
  41e65c:	mov    ah,0x88
  41e65e:	cmp    ah,BYTE PTR [ebp+0xa]
  41e661:	sub    ebp,DWORD PTR [esi-0x32b8755c]
  41e667:	inc    edi
  41e668:	fsub   st,st(3)
  41e66a:	cmp    DWORD PTR [eax+eiz*4],edx
  41e66d:	sub    esp,DWORD PTR [edx]
  41e66f:	pop    edi
  41e670:	in     al,0x3f
  41e672:	sahf   
  41e673:	nop
  41e674:	push   esi
  41e675:	hlt    
  41e676:	adc    al,0x15
  41e678:	push   cs
  41e679:	pop    ecx
  41e67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67b:	push   ds
  41e67c:	ficom  DWORD PTR [ecx+0x6344b77f]
  41e682:	pop    edx
  41e683:	out    0xac,al
  41e685:	scas   eax,DWORD PTR es:[edi]
  41e686:	pop    es
  41e687:	out    dx,al
  41e688:	sahf   
  41e689:	add    DWORD PTR ds:0xce788597,edx
  41e68f:	cld    
  41e690:	mov    DWORD PTR [ebx-0x2140a231],0x90bf3450
  41e69a:	pop    edi
  41e69b:	popa   
  41e69c:	sub    al,0xf3
  41e69e:	xchg   ebx,eax
  41e69f:	shr    dh,1
  41e6a1:	stos   BYTE PTR es:[edi],al
  41e6a2:	jle    0x41e65d
  41e6a4:	shr    DWORD PTR [ebx+0x221bbc52],1
  41e6aa:	jne    0x41e6d5
  41e6ac:	jp     0x41e6e6
  41e6ae:	inc    ebx
  41e6af:	scas   al,BYTE PTR es:[edi]
  41e6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6b1:	mov    ecx,0x7ebc1b3a
  41e6b6:	push   0xd706911c
  41e6bb:	pushf  
  41e6bc:	test   BYTE PTR [ebp-0x10],bh
  41e6bf:	call   FWORD PTR [esi+edx*1-0xc]
  41e6c3:	dec    eax
  41e6c4:	popa   
  41e6c5:	and    al,0x9b
  41e6c7:	push   ds
  41e6c8:	cmp    cl,ch
  41e6ca:	xchg   edx,eax
  41e6cb:	sub    ebx,DWORD PTR [eax]
  41e6cd:	sahf   
  41e6ce:	xor    dh,0x2c
  41e6d1:	aas    
  41e6d2:	cmp    DWORD PTR [edi],eax
  41e6d4:	addr16 stc 
  41e6d6:	imul   eax,DWORD PTR es:[edi-0x544a97d9],0xf8142970
  41e6e1:	out    0xdd,eax
  41e6e3:	inc    esp
  41e6e4:	xor    BYTE PTR [eax],cl
  41e6e6:	adc    bh,0xf5
  41e6e9:	dec    ecx
  41e6ea:	adc    ecx,DWORD PTR [ebx+0x1d]
  41e6ed:	adc    bl,BYTE PTR [ecx-0x18]
  41e6f0:	sub    edi,edx
  41e6f2:	cmp    DWORD PTR [edx],ecx
  41e6f4:	fsub   st(5),st
  41e6f6:	jecxz  0x41e750
  41e6f8:	inc    ebx
  41e6f9:	rcl    BYTE PTR [edx+esi*1],0xc6
  41e6fd:	cli    
  41e6fe:	cmp    DWORD PTR [edi-0x7309b30d],esi
  41e704:	cmp    DWORD PTR [ebp-0x42704c39],0x1cb994d5
  41e70e:	inc    ebx
  41e70f:	dec    ecx
  41e710:	sbb    ch,BYTE PTR [edx+ebx*1-0x64]
  41e714:	jne    0x41e761
  41e716:	or     al,0x88
  41e718:	xchg   ebx,eax
  41e719:	and    edi,ebx
  41e71b:	call   0x4666:0x7993dfcb
  41e722:	in     al,0x0
  41e724:	data16 test al,0xf3
  41e727:	push   esp
  41e728:	sbb    DWORD PTR [esp+edi*2+0x70],esp
  41e72c:	jp     0x41e712
  41e72e:	inc    esp
  41e72f:	mov    cl,0x9
  41e731:	pop    edi
  41e732:	lods   eax,DWORD PTR ds:[esi]
  41e733:	pop    ds
  41e734:	jae    0x41e6d1
  41e736:	jp     0x41e70f
  41e738:	jno    0x41e75a
  41e73a:	ja     0x41e712
  41e73c:	pop    esp
  41e73d:	push   ebp
  41e73e:	push   ss
  41e73f:	mov    ch,0x37
  41e741:	dec    BYTE PTR [ecx+0x7d]
  41e744:	push   0xffffffbe
  41e746:	add    dl,dl
  41e748:	mov    ebp,0xe72b58cb
  41e74d:	push   esp
  41e74e:	es push cs
  41e750:	clc    
  41e751:	addr16 (bad) 
  41e753:	sub    BYTE PTR [eax+0x78],ah
  41e756:	cmc    
  41e757:	jmp    0x3068f6a1
  41e75c:	and    DWORD PTR [eax-0x370fdda8],0xc
  41e763:	into   
  41e764:	mov    bh,BYTE PTR [edi-0x438d29a0]
  41e76a:	or     DWORD PTR [edi-0x1b3b2764],0x1
  41e771:	repnz mov al,ds:0x79167e6
  41e777:	sub    dl,BYTE PTR [ebp+0x78]
  41e77a:	sub    BYTE PTR [edi+0x67196ae1],ah
  41e780:	jecxz  0x41e7d8
  41e782:	imul   edx,esp,0xfffffff5
  41e785:	push   ebx
  41e786:	jmp    0x8a1f:0x6c290ae2
  41e78d:	aam    0x8
  41e78f:	ja     0x41e7a7
  41e791:	add    al,0xcd
  41e793:	fmul   DWORD PTR [esi+0x63c4301d]
  41e799:	sbb    ecx,0x82c30a8b
  41e79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7a0:	loop   0x41e7dd
  41e7a2:	mov    BYTE PTR [edi],cl
  41e7a4:	lock loop 0x41e7ad
  41e7a7:	js     0x41e7b4
  41e7a9:	push   eax
  41e7aa:	sar    DWORD PTR [ebp+0x2f],0xc9
  41e7ae:	sub    bl,BYTE PTR [eax+0x7e176f17]
  41e7b4:	add    al,0x66
  41e7b6:	out    0x24,al
  41e7b8:	ins    BYTE PTR es:[edi],dx
  41e7b9:	fidivr DWORD PTR [edi]
  41e7bb:	cmp    ah,cl
  41e7bd:	jnp    0x41e764
  41e7bf:	jb     0x41e7e8
  41e7c1:	cs enter 0x90e,0x40
  41e7c6:	xchg   ecx,eax
  41e7c7:	daa    
  41e7c8:	fnstsw WORD PTR [edx]
  41e7ca:	push   es
  41e7cb:	add    edi,edx
  41e7cd:	loop   0x41e809
  41e7cf:	fcom   DWORD PTR [esi]
  41e7d1:	mov    DWORD PTR [ebx+0x54],0xf9181bf5
  41e7d8:	add    esp,DWORD PTR [edi]
  41e7da:	pushf  
  41e7db:	hlt    
  41e7dc:	inc    eax
  41e7dd:	sub    eax,0x1163fefa
  41e7e2:	stc    
  41e7e3:	cwde   
  41e7e4:	adc    ah,0xe6
  41e7e7:	or     eax,0x3321ea1c
  41e7ec:	imul   esi,ebp,0x75
  41e7ef:	xlat   BYTE PTR ds:[ebx]
  41e7f0:	call   0x6137274f
  41e7f5:	neg    BYTE PTR [eax]
  41e7f7:	cld    
  41e7f8:	sub    dl,BYTE PTR [eax+edi*1+0x51bfb7d8]
  41e7ff:	mov    ebp,0xc7d6383a
  41e804:	pop    ebp
  41e805:	mov    BYTE PTR [edi-0x53],ch
  41e808:	repz sub eax,DWORD PTR [ecx]
  41e80b:	in     al,dx
  41e80c:	out    dx,eax
  41e80d:	jl     0x41e857
  41e80f:	fwait
  41e810:	ins    DWORD PTR es:[edi],dx
  41e811:	mov    edi,0x3677d26a
  41e816:	out    dx,eax
  41e817:	pop    ecx
  41e818:	ss jl  0x41e885
  41e81b:	pmaxsw mm5,QWORD PTR [edx]
  41e81e:	dec    ebx
  41e81f:	pop    ebp
  41e820:	bound  esp,QWORD PTR [ecx]
  41e822:	and    DWORD PTR [esi+0x33],ecx
  41e825:	xchg   ecx,eax
  41e826:	(bad)  
  41e827:	enter  0x17d1,0x58
  41e82b:	add    dh,bl
  41e82d:	shr    BYTE PTR [edi-0x6162f8b8],cl
  41e833:	sbb    DWORD PTR es:[ecx+0x2b],ebp
  41e837:	pop    esi
  41e838:	jmp    0x41e8ad
  41e83a:	outs   dx,BYTE PTR ds:[esi]
  41e83b:	ins    BYTE PTR es:[edi],dx
  41e83c:	ror    BYTE PTR ds:0x8388bc8c,0x4b
  41e843:	imul   esi,DWORD PTR [esi-0x4d],0x2b
  41e847:	ret    
  41e848:	aaa    
  41e849:	inc    edx
  41e84a:	(bad)  
  41e84b:	adc    al,ch
  41e84d:	imul   ebx,edx,0x21
  41e850:	mov    edx,0xd996a82f
  41e855:	test   al,0x89
  41e857:	imul   ecx,DWORD PTR [edi-0x27b3f823],0xffffff90
  41e85e:	dec    edi
  41e85f:	std    
  41e860:	fdiv   QWORD PTR [esi+0x5f]
  41e863:	(bad)  
  41e864:	int3   
  41e865:	(bad)  
  41e866:	clc    
  41e867:	jg     0x41e866
  41e869:	mov    eax,0x2568c355
  41e86e:	(bad)  
  41e86f:	cli    
  41e870:	mov    edi,ebx
  41e872:	loop   0x41e80b
  41e874:	mov    ebp,0xf5ddfebf
  41e879:	out    0xce,al
  41e87b:	(bad)  
  41e87c:	cmc    
  41e87d:	icebp  
  41e87e:	pop    edi
  41e87f:	jo     0x41e8b1
  41e881:	jmp    0x56d13616
  41e886:	inc    ebx
  41e887:	test   eax,0xb857d766
  41e88c:	cmp    DWORD PTR [esi+0x60],ecx
  41e88f:	dec    esi
  41e890:	hlt    
  41e891:	lods   eax,DWORD PTR ds:[esi]
  41e892:	clc    
  41e893:	(bad)  
  41e894:	xchg   ebp,eax
  41e895:	jno    0x41e8a4
  41e897:	xchg   BYTE PTR [ebx],dh
  41e899:	push   cs
  41e89a:	sub    BYTE PTR ds:0x406ce791,dh
  41e8a0:	xor    eax,0x5352db97
  41e8a5:	sub    DWORD PTR [esi],0x5f
  41e8a8:	inc    esi
  41e8a9:	data16 ja 0x41e838
  41e8ac:	and    BYTE PTR [ebp+0x14],0x74
  41e8b0:	dec    ebx
  41e8b1:	or     DWORD PTR [ecx-0x71],esp
  41e8b4:	fwait
  41e8b5:	xor    DWORD PTR [esi+0x59cc3d62],ecx
  41e8bb:	pop    ds
  41e8bc:	in     eax,0x3
  41e8be:	neg    BYTE PTR [edx]
  41e8c0:	push   eax
  41e8c1:	and    bh,BYTE PTR [esi+0x77]
  41e8c4:	scas   eax,DWORD PTR es:[edi]
  41e8c5:	and    al,0x2f
  41e8c7:	scas   al,BYTE PTR es:[edi]
  41e8c8:	(bad)  
  41e8c9:	(bad)  
  41e8ca:	fcmovne st,st(5)
  41e8cc:	mov    al,0xfa
  41e8ce:	mov    eax,ds:0x6584b504
  41e8d3:	mov    DWORD PTR [ecx-0x79],eax
  41e8d6:	pop    ebx
  41e8d7:	neg    BYTE PTR [ebx-0x40]
  41e8da:	pop    ds
  41e8db:	push   0x22004a26
  41e8e0:	lods   eax,DWORD PTR ds:[esi]
  41e8e1:	and    DWORD PTR [edi+0x1e],ebx
  41e8e4:	jmp    0xcb91:0xdc1dc16e
  41e8eb:	pop    ebp
  41e8ec:	(bad)  
  41e8ed:	pushf  
  41e8ee:	mov    WORD PTR ds:[edi+esi*8-0x6f],ss
  41e8f3:	sbb    al,0x6f
  41e8f5:	call   0x9b9a:0xd0b6878
  41e8fc:	(bad)  
  41e8fd:	addr16 lahf 
  41e8ff:	fs loop 0x41e975
  41e902:	push   es
  41e903:	in     al,dx
  41e904:	cwde   
  41e905:	cwde   
  41e906:	or     DWORD PTR [ecx+0xdca50e5],esp
  41e90c:	sub    eax,ebx
  41e90e:	mov    esp,0xd3c352ee
  41e913:	sub    al,0x7b
  41e915:	aas    
  41e916:	scas   al,BYTE PTR es:[edi]
  41e917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e918:	ins    DWORD PTR es:[edi],dx
  41e919:	xor    al,0x57
  41e91b:	loop   0x41e914
  41e91d:	jl     0x41e999
  41e91f:	call   0xa952:0x628560a7
  41e926:	mov    dl,0x11
  41e928:	push   ss
  41e929:	addr16 inc esi
  41e92b:	pop    esi
  41e92c:	loope  0x41e8f9
  41e92e:	jae    0x41e8e7
  41e930:	mov    ebx,0xdb31f737
  41e935:	sub    edx,DWORD PTR [ebp+0x79]
  41e938:	add    ecx,ebx
  41e93a:	mov    bh,ah
  41e93c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e93d:	sbb    al,0xc9
  41e93f:	mov    bl,0xa4
  41e941:	pmaxub mm3,mm3
  41e944:	imul   ebx,DWORD PTR [edi],0x47
  41e947:	mov    ecx,0xd6a0e2b4
  41e94c:	mov    ds:0xffb1963f,eax
  41e951:	add    ch,dl
  41e953:	inc    eax
  41e954:	mov    esp,0x857cdeb4
  41e959:	enter  0xb99f,0xd
  41e95d:	pop    edx
  41e95e:	mov    cl,0xe6
  41e960:	das    
  41e961:	push   esp
  41e962:	loopne 0x41e97e
  41e964:	xchg   ebx,eax
  41e965:	xlat   BYTE PTR ds:[ebx]
  41e966:	daa    
  41e967:	mov    esi,0xd271b567
  41e96c:	leave  
  41e96d:	in     al,dx
  41e96e:	adc    BYTE PTR [eax],ch
  41e970:	rol    BYTE PTR [edx+0x7b],0x5b
  41e974:	jmp    0x31ce9ad1
  41e979:	pop    ebp
  41e97a:	inc    edx
  41e97b:	rol    DWORD PTR [edi-0x27b7387d],1
  41e981:	lods   eax,DWORD PTR ds:[esi]
  41e982:	loop   0x41e922
  41e984:	data16 jne 0x41e9df
  41e987:	(bad)  
  41e988:	pushf  
  41e989:	add    eax,0x4c36251f
  41e98e:	std    
  41e98f:	inc    ebp
  41e990:	icebp  
  41e991:	mov    bl,0x62
  41e993:	and    edx,0xc3939ef
  41e999:	ret    0xcd2
  41e99c:	mov    ch,0x3e
  41e99e:	int3   
  41e99f:	xchg   edi,eax
  41e9a0:	xor    al,ch
  41e9a2:	jae    0x41e996
  41e9a4:	cmp    ebx,ebp
  41e9a6:	add    esp,ebx
  41e9a8:	int    0x85
  41e9aa:	es xchg edi,eax
  41e9ac:	test   dl,dh
  41e9ae:	mov    dh,0x46
  41e9b0:	dec    edi
  41e9b1:	popa   
  41e9b2:	sti    
  41e9b3:	or     ebp,DWORD PTR [esi-0x10fb743]
  41e9b9:	imul   ebx,DWORD PTR ds:0xf17d874,0xb7a1957c
  41e9c3:	mov    ds:0x828ba8b2,al
  41e9c8:	lods   eax,DWORD PTR ds:[esi]
  41e9c9:	add    BYTE PTR [esi-0xb],cl
  41e9cc:	cs push cs
  41e9ce:	fucom  st(5)
  41e9d0:	jo     0x41e9a7
  41e9d2:	dec    ebp
  41e9d3:	aam    0xed
  41e9d5:	xlat   BYTE PTR ds:[ebx]
  41e9d6:	sbb    eax,0xb63ce2d8
  41e9db:	mov    ah,BYTE PTR [ebx]
  41e9dd:	ret    0x76c6
  41e9e0:	std    
  41e9e1:	and    eax,0x651221e3
  41e9e6:	dec    ebp
  41e9e7:	jno    0x41ea04
  41e9e9:	clc    
  41e9ea:	ds enter 0x3147,0x3
  41e9ef:	xchg   edi,eax
  41e9f0:	mov    dh,0xda
  41e9f2:	pop    edi
  41e9f3:	add    eax,0xe7033f70
  41e9f8:	pop    ebp
  41e9f9:	dec    esi
  41e9fa:	inc    ecx
  41e9fb:	imul   ebx,DWORD PTR [edi+0x63a3daac],0xad851531
  41ea05:	mov    esi,0xcebd56fb
  41ea0a:	daa    
  41ea0b:	out    dx,al
  41ea0c:	imul   ecx,ebp,0xd382bf19
  41ea12:	out    dx,al
  41ea13:	popf   
  41ea14:	sub    DWORD PTR [esi-0x749f1729],eax
  41ea1a:	cmp    eax,0x771873ef
  41ea1f:	lds    esi,FWORD PTR [eax+0x5c]
  41ea22:	cmp    BYTE PTR [ebx-0x74062b0e],ch
  41ea28:	in     eax,0x37
  41ea2a:	xchg   ecx,eax
  41ea2b:	rol    DWORD PTR [edx-0x6219005c],1
  41ea31:	ror    BYTE PTR [ecx+0x53],cl
  41ea34:	pop    edi
  41ea35:	sbb    edx,DWORD PTR [esi-0x732270b0]
  41ea3b:	adc    DWORD PTR [eax],esp
  41ea3d:	jae    0x41e9de
  41ea3f:	mov    cl,0xc6
  41ea41:	in     al,0xd3
  41ea43:	jge    0x41eaa2
  41ea45:	data16 jne 0x41e9cc
  41ea48:	rcr    BYTE PTR [edx],cl
  41ea4a:	sub    ebp,DWORD PTR [ebp+0x72]
  41ea4d:	fs test cl,ah
  41ea50:	push   ecx
  41ea51:	fisub  WORD PTR [ecx]
  41ea53:	inc    ebp
  41ea54:	jge    0x41ea4b
  41ea56:	add    ebx,DWORD PTR [esp+ebx*4]
  41ea59:	add    edi,DWORD PTR [esi+0xb0fa10a]
  41ea5f:	adc    bh,BYTE PTR [eax+0x6a]
  41ea62:	rcl    BYTE PTR [edi+edi*2+0x4874c0fe],0xe3
  41ea6a:	addr16 es leave 
  41ea6d:	push   0xc4440773
  41ea72:	and    DWORD PTR es:[ebx+0x22],edi
  41ea76:	dec    edi
  41ea77:	das    
  41ea78:	jp     0x41eabf
  41ea7a:	enter  0x98fa,0x1e
  41ea7e:	rcr    BYTE PTR [ebp+edx*4-0x2f],cl
  41ea82:	jecxz  0x41ea5e
  41ea84:	div    DWORD PTR [ebp+0x7a0a257]
  41ea8a:	mov    edi,DWORD PTR [ebp+0x5b731767]
  41ea90:	push   es
  41ea91:	jae    0x41ea3e
  41ea93:	cmp    cl,dl
  41ea95:	pop    ebp
  41ea96:	or     eax,0x7d849c8
  41ea9b:	pop    edx
  41ea9c:	call   0x90dc4f8e
  41eaa1:	mov    eax,0xa1010e14
  41eaa6:	add    esp,DWORD PTR [edx-0x44]
  41eaa9:	push   edx
  41eaaa:	mov    bh,0x2b
  41eaac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaad:	mov    esp,0xd4e5245a
  41eab2:	test   BYTE PTR [ecx-0x2e],0x8a
  41eab6:	and    dl,BYTE PTR [ebx]
  41eab8:	out    0x87,eax
  41eaba:	sahf   
  41eabb:	push   0xffffffba
  41eabd:	mov    bh,0xe1
  41eabf:	jle    0x41ead1
  41eac1:	das    
  41eac2:	loopne 0x41eab1
  41eac4:	rol    DWORD PTR [esi+ebx*1],cl
  41eac7:	mov    al,0x40
  41eac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaca:	lods   al,BYTE PTR ds:[esi]
  41eacb:	xchg   edx,edx
  41eacd:	push   ecx
  41eace:	test   BYTE PTR [edi],0xcc
  41ead1:	in     eax,dx
  41ead2:	in     al,dx
  41ead3:	fadd   QWORD PTR [eax]
  41ead5:	mov    al,0x5d
  41ead7:	hlt    
  41ead8:	fs (bad) 
  41eadb:	into   
  41eadc:	xchg   edi,eax
  41eadd:	int3   
  41eade:	add    dh,BYTE PTR [esi+0x170d79cf]
  41eae4:	loopne 0x41ea93
  41eae6:	mov    dl,0xd4
  41eae8:	jb     0x41eb61
  41eaea:	fst    DWORD PTR [edx-0x34]
  41eaed:	lock sbb BYTE PTR [ebx],bl
  41eaf0:	inc    edx
  41eaf1:	shr    DWORD PTR [esi+0x231c44dd],cl
  41eaf7:	jo     0x41eb22
  41eaf9:	pusha  
  41eafa:	popf   
  41eafb:	mov    al,ds:0x20e50dfb
  41eb00:	hlt    
  41eb01:	and    al,BYTE PTR [ecx-0x466e7fc6]
  41eb07:	xchg   esp,eax
  41eb08:	sbb    eax,0xd4d1eb92
  41eb0d:	test   eax,0xcc4b394e
  41eb12:	sub    eax,0xecc91fbd
  41eb17:	pop    esp
  41eb18:	jbe    0x41eb50
  41eb1a:	popa   
  41eb1b:	xor    DWORD PTR [esi+edi*8+0x1124327b],edx
  41eb22:	add    al,0x40
  41eb24:	pinsrw mm2,WORD PTR [esi-0x31],0xde
  41eb29:	lea    ecx,[edx+esi*4+0x66]
  41eb2d:	lods   al,BYTE PTR ds:[esi]
  41eb2e:	mov    ebx,0x74f7949
  41eb33:	in     eax,dx
  41eb34:	push   ebx
  41eb35:	fwait
  41eb36:	(bad)  
  41eb37:	aam    0x9c
  41eb39:	pushf  
  41eb3a:	jle    0x41eb56
  41eb3c:	dec    eax
  41eb3d:	push   cs
  41eb3e:	dec    esi
  41eb3f:	retf   0x94a1
  41eb42:	jns    0x41eb7e
  41eb44:	in     al,dx
  41eb45:	cdq    
  41eb46:	in     eax,dx
  41eb47:	add    BYTE PTR [ebp+ecx*1-0x31],ch
  41eb4b:	es cdq 
  41eb4d:	xor    cl,BYTE PTR [eax+ebx*8+0x27]
  41eb51:	not    DWORD PTR [edi-0x7d]
  41eb54:	inc    esp
  41eb55:	aaa    
  41eb56:	add    DWORD PTR [esi-0x10d42e81],0xc2383df3
  41eb60:	mov    eax,ds:0xf71253a0
  41eb65:	out    dx,al
  41eb66:	fistp  WORD PTR [edx]
  41eb68:	stos   DWORD PTR es:[edi],eax
  41eb69:	mov    dh,0x72
  41eb6b:	pushf  
  41eb6c:	ret    
  41eb6d:	cli    
  41eb6e:	add    DWORD PTR [edx],ebx
  41eb70:	test   al,0x11
  41eb72:	fld    TBYTE PTR [ebp-0x11]
  41eb75:	in     eax,0x51
  41eb77:	pop    esi
  41eb78:	das    
  41eb79:	inc    ecx
  41eb7a:	or     BYTE PTR ds:0x878f9845,dh
  41eb80:	hlt    
  41eb81:	data16 xlat BYTE PTR ds:[ebx]
  41eb83:	mov    bh,bl
  41eb85:	and    BYTE PTR [edx-0x5d],0xd2
  41eb89:	or     DWORD PTR [ebx],0x48a3ad5b
  41eb8f:	cld    
  41eb90:	rcr    BYTE PTR [esi-0xc],0x7b
  41eb94:	or     esi,DWORD PTR [edx]
  41eb96:	int3   
  41eb97:	inc    edx
  41eb98:	cmp    bh,cl
  41eb9a:	and    BYTE PTR [ebp+0xd],bl
  41eb9d:	xlat   BYTE PTR ds:[ebx]
  41eb9e:	rcr    BYTE PTR [ebp+0x71910f79],0x9b
  41eba5:	or     al,0xc0
  41eba7:	mov    ebp,0x2764fa84
  41ebac:	test   eax,0xa4ccd858
  41ebb1:	add    esi,esp
  41ebb3:	jo     0x41ec19
  41ebb5:	scas   eax,DWORD PTR es:[edi]
  41ebb6:	lock sbb al,0xe2
  41ebb9:	xchg   edx,eax
  41ebba:	xor    ah,ch
  41ebbc:	inc    edi
  41ebbd:	add    BYTE PTR [edi-0x52],dl
  41ebc0:	sub    BYTE PTR [esi-0x353553a8],ah
  41ebc6:	call   0x1dc1:0xea6503e2
  41ebcd:	jbe    0x41ec10
  41ebcf:	mov    cl,0xb0
  41ebd1:	out    dx,al
  41ebd2:	ret    0x411c
  41ebd5:	ins    DWORD PTR es:[edi],dx
  41ebd6:	fadd   DWORD PTR [edi]
  41ebd8:	ror    ah,cl
  41ebda:	add    bl,dh
  41ebdc:	retf   0x63d2
  41ebdf:	ret    
  41ebe0:	mov    edi,DWORD PTR [edi-0x7b]
  41ebe3:	add    BYTE PTR [esi+0x56],ah
  41ebe6:	push   ebx
  41ebe7:	adc    eax,0x3f887362
  41ebec:	call   0x4f1e46fd
  41ebf1:	addr16 mov ebx,0x763dbc5
  41ebf7:	sahf   
  41ebf8:	enter  0x8a94,0x54
  41ebfc:	mov    bh,0x28
  41ebfe:	loop   0x41ec0e
  41ec00:	push   ebx
  41ec01:	adc    DWORD PTR [eax],ecx
  41ec03:	idiv   cl
  41ec05:	jbe    0x41ec65
  41ec07:	ins    BYTE PTR es:[edi],dx
  41ec08:	jne    0x41ec58
  41ec0a:	hlt    
  41ec0b:	imul   esi,DWORD PTR [ecx],0xffffff91
  41ec0e:	sub    DWORD PTR [edi+0x1d],edi
  41ec11:	jo     0x41ebae
  41ec13:	sbb    al,BYTE PTR [ebx+0x2a3e606f]
  41ec19:	jp     0x41ec05
  41ec1b:	xchg   DWORD PTR [ecx],ebp
  41ec1d:	into   
  41ec1e:	push   esi
  41ec1f:	mov    eax,cs:0xc3e142c9
  41ec25:	arpl   si,dx
  41ec27:	push   cs
  41ec28:	mov    esi,0xee83acdd
  41ec2d:	push   esi
  41ec2e:	fwait
  41ec2f:	jecxz  0x41eca2
  41ec31:	adc    cl,dl
  41ec33:	mov    ebp,0x5825c072
  41ec38:	mov    dh,0xa7
  41ec3a:	and    edx,DWORD PTR [edx+0x5d69fd79]
  41ec40:	mov    eax,ds:0xd21f60fd
  41ec45:	push   esi
  41ec46:	jp     0x41ebef
  41ec48:	cmp    eax,0xc4a92f31
  41ec4d:	sub    DWORD PTR [ecx+0x4f64bb09],eax
  41ec53:	lds    esi,FWORD PTR [edx+0x31]
  41ec56:	xchg   edx,eax
  41ec57:	xchg   ebx,eax
  41ec58:	ins    BYTE PTR es:[edi],dx
  41ec59:	cdq    
  41ec5a:	inc    edi
  41ec5b:	or     eax,0x10feacd3
  41ec60:	push   ebx
  41ec61:	cmp    edx,esi
  41ec63:	or     eax,0x69e55b67
  41ec68:	mov    WORD PTR [edi+0x580796b2],gs
  41ec6e:	push   cs
  41ec6f:	mov    al,0x25
  41ec71:	das    
  41ec72:	push   eax
  41ec73:	setl   BYTE PTR [edi-0x57]
  41ec77:	pushf  
  41ec78:	xchg   edi,eax
  41ec79:	out    dx,al
  41ec7a:	test   al,0x86
  41ec7c:	test   DWORD PTR [edi+0x38],edx
  41ec7f:	scas   al,BYTE PTR es:[edi]
  41ec80:	gs dec edi
  41ec82:	adc    esi,DWORD PTR [ebp+0x15]
  41ec85:	in     al,0x1c
  41ec87:	add    BYTE PTR [ebx+ebp*8+0x1],0x26
  41ec8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec8d:	repnz inc ebx
  41ec8f:	sub    ecx,DWORD PTR [edi-0x7a]
  41ec92:	or     bl,dl
  41ec94:	ret    
  41ec95:	aaa    
  41ec96:	jae    0x41ecf7
  41ec98:	sahf   
  41ec99:	push   0x5
  41ec9b:	mov    ah,0xf9
  41ec9d:	imul   ebx,DWORD PTR [edi],0x15fe9bb2
  41eca3:	xlat   BYTE PTR ds:[ebx]
  41eca4:	mov    WORD PTR [esi],es
  41eca6:	jl     0x41ec6f
  41eca8:	add    eax,0xf9ff75d9
  41ecad:	mov    al,cs:0x9fb1a4cd
  41ecb3:	pop    edi
  41ecb4:	mov    es,WORD PTR [eax+0x4f61ed2c]
  41ecba:	ss cwde 
  41ecbc:	and    bh,bl
  41ecbe:	mov    edi,0x37ae33d4
  41ecc3:	sar    DWORD PTR [ebx+0x79b34b6b],0x4c
  41ecca:	cmp    ecx,DWORD PTR [ebp-0x7458b82d]
  41ecd0:	dec    esi
  41ecd1:	jge    0x41ecba
  41ecd3:	cmp    al,0x79
  41ecd5:	xlat   BYTE PTR ds:[ebx]
  41ecd6:	pushf  
  41ecd7:	stos   DWORD PTR es:[edi],eax
  41ecd8:	adc    ah,BYTE PTR [esi-0x32]
  41ecdb:	sub    dl,ah
  41ecdd:	cmp    eax,0x75bb3a76
  41ece2:	inc    edx
  41ece3:	pop    es
  41ece4:	dec    esp
  41ece5:	and    edx,DWORD PTR [ebp+ebp*8+0x40]
  41ece9:	nop
  41ecea:	in     eax,0x30
  41ecec:	ret    0x6b4a
  41ecef:	das    
  41ecf0:	mov    esi,0x9b377879
  41ecf5:	mov    ecx,0x4206b17
  41ecfa:	jbe    0x41ed06
  41ecfc:	mov    WORD PTR [eax+0x3ff9fcd3],ss
  41ed02:	jbe    0x41ed2e
  41ed04:	jmp    0x112bf459
  41ed09:	fisttp DWORD PTR [ecx+edi*8]
  41ed0c:	mov    BYTE PTR [esi+0x7929a217],ch
  41ed12:	jno    0x41ecb7
  41ed14:	xchg   esi,eax
  41ed15:	repnz out 0x10,al
  41ed18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed19:	in     al,0xcb
  41ed1b:	test   BYTE PTR [esi-0x5f],dl
  41ed1e:	adc    eax,0xc7fde2e4
  41ed23:	ins    BYTE PTR es:[edi],dx
  41ed24:	jne    0x41ed00
  41ed26:	fstp   TBYTE PTR [edx]
  41ed28:	xor    ch,BYTE PTR [esi]
  41ed2a:	repnz adc eax,0xbcd71c7b
  41ed30:	jle    0x41edae
  41ed32:	ret    
  41ed33:	and    BYTE PTR [ebx],dl
  41ed35:	repnz mov ah,0xe3
  41ed38:	cld    
  41ed39:	mov    bl,dh
  41ed3b:	cmp    DWORD PTR [ebx],esp
  41ed3d:	call   DWORD PTR [eax]
  41ed3f:	xor    eax,edi
  41ed41:	leave  
  41ed42:	loope  0x41ed22
  41ed44:	sahf   
  41ed45:	xchg   esp,eax
  41ed46:	mov    al,0x1e
  41ed48:	xor    bh,ah
  41ed4a:	shl    bh,0x13
  41ed4d:	pop    edx
  41ed4e:	rcr    dh,cl
  41ed50:	lds    esp,FWORD PTR [ecx-0x8]
  41ed53:	outs   dx,BYTE PTR ds:[esi]
  41ed54:	cmp    al,0xe1
  41ed56:	and    DWORD PTR [ebx+esi*1-0xb],esp
  41ed5a:	jecxz  0x41ed46
  41ed5c:	retf   
  41ed5d:	inc    edx
  41ed5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed5f:	pusha  
  41ed60:	push   ds
  41ed61:	add    eax,0xb3c744d3
  41ed66:	clc    
  41ed67:	dec    DWORD PTR [eax]
  41ed69:	jecxz  0x41ed8e
  41ed6b:	sub    al,0x8
  41ed6d:	std    
  41ed6e:	lock sbb eax,DWORD PTR [bx-0x56c1]
  41ed74:	cmp    ebx,ebp
  41ed76:	adc    al,0x26
  41ed78:	jae    0x41ecff
  41ed7a:	fcmovbe st,st(2)
  41ed7c:	sbb    bl,BYTE PTR [eax+0x44]
  41ed7f:	xor    eax,0x60c4f5c8
  41ed84:	mov    cl,0xa
  41ed86:	stos   BYTE PTR es:[edi],al
  41ed87:	mov    WORD PTR [ebx],cs
  41ed89:	push   0xbc1848d7
  41ed8e:	int    0xea
  41ed90:	scas   eax,DWORD PTR es:[edi]
  41ed91:	nop
  41ed92:	les    edx,FWORD PTR [edi]
  41ed94:	mov    esi,0x2f8a7ac
  41ed99:	pop    ds
  41ed9a:	cmp    DWORD PTR [eax+esi*1],edx
  41ed9d:	sub    eax,0x6b06f52b
  41eda2:	cmp    al,0x88
  41eda4:	icebp  
  41eda5:	mov    edi,0x6ce2ecce
  41edaa:	mov    eax,ds:0x7e1fab98
  41edaf:	inc    eax
  41edb0:	xchg   bh,ah
  41edb2:	shr    DWORD PTR ds:0xad150d76,0x97
  41edb9:	add    cl,dh
  41edbb:	sti    
  41edbc:	pop    ebx
  41edbd:	les    ecx,FWORD PTR [edx+0x46be7b4c]
  41edc3:	int3   
  41edc4:	add    bh,dh
  41edc6:	inc    esi
  41edc7:	ins    DWORD PTR es:[edi],dx
  41edc8:	fild   QWORD PTR [ecx-0x3e]
  41edcb:	xchg   esp,eax
  41edcc:	sub    esi,edx
  41edce:	ret    0x3974
  41edd1:	mov    al,0xfb
  41edd3:	call   0xd911142e
  41edd8:	mov    ss,WORD PTR [eax]
  41edda:	imul   eax,DWORD PTR [ecx],0xb37410b3
  41ede0:	adc    eax,DWORD PTR [ebx+0x75c36c4d]
  41ede6:	jg     0x41ed75
  41ede8:	dec    edi
  41ede9:	in     al,dx
  41edea:	fidiv  WORD PTR [edi]
  41edec:	or     BYTE PTR [ebp-0x76],bh
  41edef:	pop    ebp
  41edf0:	fist   WORD PTR ds:0x937efdd5
  41edf6:	xor    DWORD PTR [esi],ebp
  41edf8:	pop    edx
  41edf9:	iret   
  41edfa:	mov    bl,0xd8
  41edfc:	xor    bl,al
  41edfe:	sahf   
  41edff:	repnz sub dl,ah
  41ee02:	push   ss
  41ee03:	mov    dh,0xc
  41ee05:	xor    eax,0xa8cc9963
  41ee0a:	call   0x9fb4:0xfe3c29cd
  41ee11:	sub    dl,dl
  41ee13:	xor    esi,DWORD PTR [ebx]
  41ee15:	xchg   ecx,eax
  41ee16:	std    
  41ee17:	aas    
  41ee18:	aam    0xcb
  41ee1a:	sbb    DWORD PTR [edi],0x76a84884
  41ee20:	data16 mov al,0x5d
  41ee23:	ja     0x41edda
  41ee25:	cmp    bl,bl
  41ee27:	mov    ecx,0xa7996864
  41ee2c:	les    edx,FWORD PTR [esi]
  41ee2e:	jmp    0x41ee75
  41ee30:	aam    0x5c
  41ee32:	cmp    eax,DWORD PTR [esi-0x6208147a]
  41ee38:	scas   al,BYTE PTR es:[edi]
  41ee39:	dec    ebx
  41ee3a:	push   ebx
  41ee3b:	iret   
  41ee3c:	leave  
  41ee3d:	and    eax,0x46ec63c8
  41ee42:	mov    ds:0xced46c68,al
  41ee47:	xor    BYTE PTR [ebp+0x73891da7],ch
  41ee4d:	cs and al,0x7
  41ee50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee51:	mov    ah,BYTE PTR [ebx-0x70]
  41ee54:	in     al,0x14
  41ee56:	data16 fidivr DWORD PTR [esi-0x67]
  41ee5a:	test   BYTE PTR [esi+0x42af24c3],dh
  41ee60:	add    al,0x74
  41ee62:	daa    
  41ee63:	cmp    sp,WORD PTR [ebx+0x7f638743]
  41ee6a:	inc    edx
  41ee6b:	adc    esp,DWORD PTR [eax+0x6b]
  41ee6e:	push   ebp
  41ee6f:	rcl    al,cl
  41ee71:	mov    bl,0xeb
  41ee73:	iret   
  41ee74:	mov    WORD PTR [edx-0x12510172],ss
  41ee7a:	sbb    dl,BYTE PTR gs:[edi]
  41ee7d:	mov    dl,0x3e
  41ee7f:	mov    ebp,0xa35d03a6
  41ee84:	sbb    eax,0xcd2236fd
  41ee89:	bound  ecx,QWORD PTR [eax+0x6cb7ff1f]
  41ee8f:	push   edx
  41ee90:	xchg   esp,eax
  41ee91:	push   ss
  41ee92:	(bad)  
  41ee93:	js     0x41ee70
  41ee95:	in     eax,0x63
  41ee97:	jae    0x41ee93
  41ee99:	pop    eax
  41ee9a:	loopne 0x41ee71
  41ee9c:	mov    cl,0x2b
  41ee9e:	lds    esp,FWORD PTR [ebx-0x6c9a587b]
  41eea4:	scas   eax,DWORD PTR es:[edi]
  41eea5:	aam    0xc
  41eea7:	iret   
  41eea8:	and    edx,DWORD PTR [edx]
  41eeaa:	dec    edx
  41eeab:	(bad)  
  41eeac:	push   ss
  41eead:	sub    al,0xd4
  41eeaf:	cmp    BYTE PTR [ebp+0x65],ah
  41eeb2:	outs   dx,DWORD PTR ds:[esi]
  41eeb3:	push   ebx
  41eeb4:	mov    BYTE PTR [ecx],0x13
  41eeb7:	sti    
  41eeb8:	pop    edi
  41eeb9:	or     BYTE PTR [edx-0x45],bh
  41eebc:	adc    bh,dl
  41eebe:	and    eax,0x21fcdd94
  41eec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec4:	gs out dx,eax
  41eec6:	out    dx,al
  41eec7:	push   0xffffffff
  41eec9:	adc    ch,BYTE PTR [ecx-0x3e202b8d]
  41eecf:	in     eax,dx
  41eed0:	dec    esp
  41eed1:	or     edx,0x1c
  41eed4:	lea    ebp,[edi+edx*2-0x66135073]
  41eedb:	out    dx,ax
  41eedd:	(bad)  
  41eede:	xchg   esp,eax
  41eedf:	mov    ds:0x7352cf39,al
  41eee4:	ret    0xb248
  41eee7:	cmp    bl,dl
  41eee9:	inc    edi
  41eeea:	std    
  41eeeb:	rcl    dh,0x9f
  41eeee:	fwait
  41eeef:	sub    eax,DWORD PTR [ebx+0x5f]
  41eef2:	push   ebx
  41eef3:	ins    BYTE PTR es:[edi],dx
  41eef4:	xor    eax,0xbae7c9bb
  41eef9:	sub    ebx,DWORD PTR [ebx-0x27e18715]
  41eeff:	jo     0x41ef3d
  41ef01:	cmp    ch,dh
  41ef03:	jecxz  0x41ef3f
  41ef05:	leave  
  41ef06:	fidivr DWORD PTR [eax+esi*8-0x49c7ebd3]
  41ef0d:	lods   eax,DWORD PTR ds:[esi]
  41ef0e:	(bad)  
  41ef0f:	pop    esp
  41ef10:	xchg   ecx,eax
  41ef11:	jmp    0xe2d76e02
  41ef16:	fsubr  DWORD PTR [ecx]
  41ef18:	test   DWORD PTR [edx-0x3d],eax
  41ef1b:	add    edx,0x46
  41ef1e:	jbe    0x41ef2a
  41ef20:	fs ins DWORD PTR es:[edi],dx
  41ef22:	lock mov bh,0x6b
  41ef25:	and    ch,al
  41ef27:	cli    
  41ef28:	fdivp  st(3),st
  41ef2a:	xchg   ah,dl
  41ef2c:	jecxz  0x41ef9b
  41ef2e:	call   0xaec93326
  41ef33:	dec    edi
  41ef34:	scas   al,BYTE PTR es:[edi]
  41ef35:	xor    BYTE PTR [edx+0x6deba911],0x46
  41ef3c:	pop    ecx
  41ef3d:	out    0xba,eax
  41ef3f:	push   ds
  41ef40:	push   ss
  41ef41:	fldenv [ebp-0x56]
  41ef44:	mov    edx,0x1d50bf71
  41ef49:	mov    al,ds:0xe969e7c9
  41ef4e:	bound  eax,QWORD PTR [ebp-0x761647df]
  41ef54:	aam    0xa3
  41ef56:	ja     0x41eefa
  41ef58:	popa   
  41ef59:	retf   
  41ef5a:	addr16 out 0x3e,eax
  41ef5d:	pop    esi
  41ef5e:	fwait
  41ef5f:	cwde   
  41ef60:	dec    ecx
  41ef61:	bound  ecx,QWORD PTR [ebx-0x62]
  41ef64:	(bad)  
  41ef65:	sbb    eax,0xa45dedef
  41ef6a:	hlt    
  41ef6b:	jnp    0x41ef57
  41ef6d:	mov    WORD PTR [ecx],gs
  41ef6f:	in     al,0x49
  41ef71:	loop   0x41efe4
  41ef73:	sbb    esi,DWORD PTR [edx]
  41ef75:	jb     0x41efcd
  41ef77:	cmp    eax,edx
  41ef79:	mov    DWORD PTR [esp+eiz*4-0x33],edi
  41ef7d:	sar    DWORD PTR [ebx-0x23],cl
  41ef80:	scas   al,BYTE PTR es:[edi]
  41ef81:	xchg   esi,eax
  41ef82:	leave  
  41ef83:	inc    edx
  41ef84:	or     ecx,DWORD PTR [ecx-0x8408f5e]
  41ef8a:	out    dx,al
  41ef8b:	mov    esi,0xbaf31bfc
  41ef90:	les    ecx,FWORD PTR [eax-0x29]
  41ef93:	mov    cl,0xa
  41ef95:	lea    edx,[eax+0x67]
  41ef98:	pop    esp
  41ef99:	rol    BYTE PTR [edx+0x1f],cl
  41ef9c:	outs   dx,DWORD PTR ds:[esi]
  41ef9d:	and    ch,BYTE PTR [ecx]
  41ef9f:	loop   0x41ef7f
  41efa1:	mov    dl,bh
  41efa3:	out    dx,eax
  41efa4:	inc    ebp
  41efa5:	xchg   esi,eax
  41efa6:	pusha  
  41efa7:	imul   ebp,DWORD PTR [ebx+0x17],0xc0095592
  41efae:	push   es
  41efaf:	rdtsc  
  41efb1:	add    eax,0xac41386f
  41efb6:	mov    bh,0x28
  41efb8:	jecxz  0x41ef94
  41efba:	inc    eax
  41efbb:	outs   dx,BYTE PTR ds:[esi]
  41efbc:	inc    ebp
  41efbd:	inc    edi
  41efbe:	inc    ebx
  41efbf:	pop    ebx
  41efc0:	dec    ecx
  41efc1:	cmp    ecx,ebx
  41efc3:	push   ecx
  41efc4:	out    dx,eax
  41efc5:	mov    dh,0x89
  41efc7:	test   BYTE PTR [ebx-0x76],al
  41efca:	pop    es
  41efcb:	scas   al,BYTE PTR es:[edi]
  41efcc:	and    DWORD PTR [ecx-0x7b],ecx
  41efcf:	pop    ecx
  41efd0:	test   eax,0xb22fae94
  41efd5:	outs   dx,BYTE PTR ds:[esi]
  41efd6:	inc    eax
  41efd7:	pop    ecx
  41efd8:	ins    BYTE PTR es:[edi],dx
  41efd9:	fld    DWORD PTR [esi-0x13]
  41efdc:	mov    WORD PTR [ebx+0x31d0ca55],gs
  41efe2:	dec    ebx
  41efe3:	fild   QWORD PTR [eax]
  41efe5:	ins    DWORD PTR es:[edi],dx
  41efe6:	or     al,0xb3
  41efe8:	test   BYTE PTR ds:0xfc49062a,bl
  41efee:	(bad)  
  41efef:	cmp    eax,0xeab563b7
  41eff4:	mov    dl,0x50
  41eff6:	xor    dh,BYTE PTR [esi+0x15]
  41eff9:	fmul   QWORD PTR [esi+0x66]
  41effc:	ins    DWORD PTR es:[edi],dx
  41effd:	add    DWORD PTR [edi+0x75],ebp
  41f000:	push   0xd178014f
  41f005:	inc    edi
  41f006:	mov    eax,0x429e016a
  41f00b:	call   0x59021cdb
  41f010:	xchg   ebx,eax
  41f011:	push   eax
  41f012:	dec    ebx
  41f013:	leave  
  41f014:	stc    
  41f015:	add    al,0x26
  41f017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f018:	jecxz  0x41f04c
  41f01a:	push   esi
  41f01b:	mov    BYTE PTR [edi+0x970ab02],0x6b
  41f022:	push   esi
  41f023:	jecxz  0x41f0a1
  41f025:	ret    
  41f026:	pop    esi
  41f027:	pop    eax
  41f028:	(bad)  
  41f029:	dec    edi
  41f02a:	jmp    FWORD PTR [edi-0x66c157d1]
  41f030:	adc    al,0xc7
  41f032:	or     al,0x9b
  41f034:	inc    ebp
  41f035:	dec    ecx
  41f036:	sbb    BYTE PTR [eax-0x2c37ea14],dl
  41f03c:	scas   al,BYTE PTR es:[edi]
  41f03d:	mov    edx,0xe818bf6e
  41f042:	dec    ecx
  41f043:	fstp   DWORD PTR [esi+0x2bb5ac8a]
  41f049:	pop    esp
  41f04a:	add    eax,0x230bdc84
  41f04f:	dec    eax
  41f050:	fist   WORD PTR [eax+0x3a]
  41f053:	inc    edx
  41f054:	test   BYTE PTR [ebx+0x7e224306],al
  41f05a:	adc    BYTE PTR [eax],0xd6
  41f05d:	(bad)  
  41f05e:	mov    bh,0xec
  41f060:	ja     0x41f01a
  41f062:	fsub   st(5),st
  41f064:	mov    cl,0xcc
  41f066:	outs   dx,DWORD PTR ds:[esi]
  41f067:	mov    ?,WORD PTR [eax+0xc]
  41f06a:	xor    edx,ebx
  41f06c:	xchg   BYTE PTR [ecx+0x7fe345f3],cl
  41f072:	xor    al,BYTE PTR [ecx+ebx*2-0x53]
  41f076:	cmp    DWORD PTR [esi+edi*2],0xffffff8f
  41f07a:	repz push 0xcc17e129
  41f080:	push   edi
  41f081:	pop    ecx
  41f082:	lods   eax,DWORD PTR ds:[esi]
  41f083:	rol    BYTE PTR [edx+0x18],1
  41f086:	jns    0x41f021
  41f088:	daa    
  41f089:	test   DWORD PTR [ebp-0x3bf0e477],esi
  41f08f:	or     dl,BYTE PTR [edi+0x12337cbe]
  41f095:	dec    esp
  41f096:	push   0x74
  41f098:	repz push eax
  41f09a:	cmp    dl,BYTE PTR [ebp-0x79910736]
  41f0a0:	(bad)  
  41f0a1:	inc    ebp
  41f0a2:	sub    ecx,edx
  41f0a4:	inc    ebx
  41f0a5:	out    0xf2,eax
  41f0a7:	sbb    eax,0x1c0b9f20
  41f0ac:	loopne 0x41f0cd
  41f0ae:	std    
  41f0af:	fnstsw WORD PTR [eax+0x23]
  41f0b2:	mov    ds:0xd1eb3819,al
  41f0b7:	cmc    
  41f0b8:	les    esi,FWORD PTR ds:0xb8dada30
  41f0be:	sbb    DWORD PTR [edx],eax
  41f0c0:	ins    BYTE PTR es:[edi],dx
  41f0c1:	jo     0x41f0b7
  41f0c3:	cwde   
  41f0c4:	rol    BYTE PTR [esi+0x4a],cl
  41f0c7:	cmc    
  41f0c8:	(bad)  
  41f0c9:	fdivrp st(5),st
  41f0cb:	(bad)  
  41f0cc:	fs aas 
  41f0ce:	dec    edi
  41f0cf:	mov    dl,0xf9
  41f0d1:	sbb    BYTE PTR [esi-0x2a01dc79],0x46
  41f0d8:	fidivr WORD PTR [eax]
  41f0da:	scas   eax,DWORD PTR es:[edi]
  41f0db:	je     0x41f0e1
  41f0dd:	mov    al,0x12
  41f0df:	mov    al,ds:0x6e28eadd
  41f0e4:	or     edi,DWORD PTR [edi+0x45f92593]
  41f0ea:	pop    esp
  41f0eb:	jecxz  0x41f0e7
  41f0ed:	lods   eax,DWORD PTR ds:[esi]
  41f0ee:	cs adc dh,al
  41f0f1:	pushf  
  41f0f2:	sub    al,0xb2
  41f0f4:	lahf   
  41f0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f6:	jle    0x41f129
  41f0f8:	(bad)  
  41f0f9:	mov    esp,0x2dc462f1
  41f0fe:	fidiv  WORD PTR [edx+0x19639304]
  41f104:	jge    0x41f0b9
  41f106:	lds    edx,FWORD PTR [ecx]
  41f108:	cld    
  41f109:	shr    BYTE PTR ds:0x51dc6ea,1
  41f10f:	stc    
  41f110:	push   ds
  41f111:	cdq    
  41f112:	and    DWORD PTR [esi+esi*2-0x5e],ecx
  41f116:	jo     0x41f158
  41f118:	jl     0x41f0ea
  41f11a:	xor    DWORD PTR [ebx+0x10113bd4],edx
  41f120:	cmp    eax,0x648c9b3c
  41f125:	popf   
  41f126:	sbb    eax,0xacd12d34
  41f12b:	imul   edx,DWORD PTR [esi+0x11],0x97f7c088
  41f132:	retf   
  41f133:	mov    ebp,0xd030da94
  41f138:	int3   
  41f139:	xchg   esi,eax
  41f13a:	jmp    0x41f161
  41f13c:	inc    esi
  41f13d:	jne    0x41f19e
  41f13f:	pop    edi
  41f140:	add    BYTE PTR [esi],dh
  41f142:	adc    eax,0x51947343
  41f147:	imul   edi,edx,0xffffffec
  41f14a:	imul   edi,DWORD PTR [edi+0x4a],0xffffffad
  41f14e:	inc    esi
  41f14f:	loope  0x41f138
  41f151:	or     BYTE PTR [ecx+edx*2+0x6ac676a5],bh
  41f158:	push   ss
  41f159:	(bad)  
  41f15a:	xchg   edx,eax
  41f15b:	mov    dh,0xbc
  41f15d:	and    al,0x48
  41f15f:	cwde   
  41f160:	arpl   WORD PTR [edx-0x577b9aa2],si
  41f166:	fstp   DWORD PTR [edi+0x1ab925f6]
  41f16c:	sub    ebp,DWORD PTR [esi]
  41f16e:	mov    edi,0xa0b1ce72
  41f173:	mov    esi,0x1693a96d
  41f178:	ins    BYTE PTR es:[edi],dx
  41f179:	fld    TBYTE PTR [ebx-0x26884abf]
  41f17f:	mov    eax,0xe2957660
  41f184:	fist   DWORD PTR [esi-0xbeeb20d]
  41f18a:	ret    
  41f18b:	outs   dx,BYTE PTR ds:[esi]
  41f18c:	push   esi
  41f18d:	xor    ah,BYTE PTR [eax]
  41f18f:	lds    ecx,FWORD PTR [edi+0x72]
  41f192:	retf   0x7655
  41f195:	call   0x6978:0x5d398136
  41f19c:	or     ah,bl
  41f19e:	jle    0x41f219
  41f1a0:	mov    BYTE PTR [edi+0x71e8f7b9],al
  41f1a6:	and    eax,0x5fce4780
  41f1ab:	sbb    DWORD PTR ds:0xad92ace3,0x43c883ce
  41f1b5:	jge    0x41f1bd
  41f1b7:	sbb    BYTE PTR [ecx+0x73],ch
  41f1ba:	xchg   ebp,eax
  41f1bb:	xchg   esp,eax
  41f1bc:	je     0x41f143
  41f1be:	mov    edx,0xbfb2d02a
  41f1c3:	sub    eax,0x291b8748
  41f1c8:	mov    bh,0xd
  41f1ca:	lods   eax,DWORD PTR ds:[esi]
  41f1cb:	xor    ah,cl
  41f1cd:	test   al,bh
  41f1cf:	inc    esp
  41f1d0:	ins    DWORD PTR es:[edi],dx
  41f1d1:	inc    eax
  41f1d2:	sar    DWORD PTR [esi-0x356c8155],1
  41f1d8:	jle    0x41f238
  41f1da:	loope  0x41f1f6
  41f1dc:	pop    esi
  41f1dd:	aam    0xcb
  41f1df:	adc    eax,0x6c9279de
  41f1e4:	ret    
  41f1e5:	mov    eax,0x75cd2e7f
  41f1ea:	imul   edx,DWORD PTR [ecx+0x60],0x68ea3391
  41f1f1:	sbb    BYTE PTR [edi-0x3e526db2],0x8b
  41f1f8:	xchg   ecx,eax
  41f1f9:	mov    edi,0x8b359997
  41f1fe:	or     al,0x6f
  41f200:	adc    ah,dh
  41f202:	sub    eax,0xdf647640
  41f207:	mov    dl,0x91
  41f209:	ror    BYTE PTR [ebp+0x36],0xf7
  41f20d:	(bad)  
  41f20e:	std    
  41f20f:	jecxz  0x41f19d
  41f211:	mov    ch,0x62
  41f213:	test   al,0x6
  41f215:	fnstenv [ebx+0x40318534]
  41f21b:	add    DWORD PTR [ebp-0x7a5faf4b],esi
  41f221:	sub    BYTE PTR [ebp+0x5fe630ed],al
  41f227:	or     BYTE PTR [eax+0x51],ah
  41f22a:	pushf  
  41f22b:	lods   eax,DWORD PTR ds:[esi]
  41f22c:	xchg   DWORD PTR [edx+0x2693014e],esp
  41f232:	adc    al,0x27
  41f234:	xor    eax,0xcf4d5a6b
  41f239:	push   es
  41f23a:	pop    es
  41f23b:	adc    cl,dl
  41f23d:	mov    ebp,ecx
  41f23f:	arpl   WORD PTR [edi+0x3],bp
  41f242:	xor    edi,DWORD PTR [ecx]
  41f244:	add    eax,0xda38334a
  41f249:	pop    es
  41f24a:	or     al,0xf5
  41f24c:	mov    ds:0x31cfd6b4,eax
  41f251:	cld    
  41f252:	pop    ebp
  41f253:	out    0x90,al
  41f255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f256:	(bad)  
  41f257:	lods   al,BYTE PTR ds:[esi]
  41f258:	sti    
  41f259:	cs xchg ecx,eax
  41f25b:	xchg   edx,eax
  41f25c:	cmp    BYTE PTR [ebx+0x67],0xdf
  41f260:	or     al,BYTE PTR [edi]
  41f262:	sbb    dl,ch
  41f264:	iret   
  41f265:	xchg   ebp,eax
  41f266:	popa   
  41f267:	pusha  
  41f268:	pop    es
  41f269:	or     DWORD PTR [ecx-0x5301e7d2],eax
  41f26f:	adc    DWORD PTR gs:[eax+0x6],0xbaf615ba
  41f277:	out    dx,al
  41f278:	sbb    cl,0x56
  41f27b:	jecxz  0x41f2f4
  41f27d:	rcl    BYTE PTR [esi+ecx*1+0x5a],cl
  41f281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f282:	push   edx
  41f283:	frstor [eax]
  41f285:	shl    dl,1
  41f287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f288:	retf   
  41f289:	iret   
  41f28a:	jno    0x41f21f
  41f28c:	cmp    ah,BYTE PTR [ebx+0x1a]
  41f28f:	add    BYTE PTR [edi+ebx*4],dl
  41f292:	push   0xffffffcf
  41f294:	jle    0x41f273
  41f296:	les    eax,FWORD PTR [esi+0x5589cfcf]
  41f29c:	mov    ecx,0x32d98510
  41f2a1:	push   ss
  41f2a2:	inc    edx
  41f2a3:	add    dl,BYTE PTR [esi+0x7f]
  41f2a6:	aaa    
  41f2a7:	cld    
  41f2a8:	push   ecx
  41f2a9:	pop    esi
  41f2aa:	and    ebx,DWORD PTR [edi+edi*1+0x474a8181]
  41f2b1:	outs   dx,DWORD PTR ds:[esi]
  41f2b2:	cmc    
  41f2b3:	lods   eax,DWORD PTR ds:[esi]
  41f2b4:	dec    ebx
  41f2b5:	inc    edi
  41f2b6:	push   edx
  41f2b7:	or     dh,BYTE PTR [ebx+0x20]
  41f2ba:	fstp   TBYTE PTR [eax+eax*4+0x641a527a]
  41f2c1:	aad    0xf0
  41f2c3:	push   0xb25e02c9
  41f2c8:	fidivr WORD PTR [ecx-0x2d]
  41f2cb:	dec    eax
  41f2cc:	cdq    
  41f2cd:	cli    
  41f2ce:	xor    ebp,DWORD PTR [esi]
  41f2d0:	ret    0x2e48
  41f2d3:	mov    DWORD PTR [esi-0x36],edx
  41f2d6:	ins    DWORD PTR es:[edi],dx
  41f2d7:	mov    dl,0xb4
  41f2d9:	push   esp
  41f2da:	sub    DWORD PTR [esi-0x43f13f51],esi
  41f2e0:	das    
  41f2e1:	not    BYTE PTR [eax]
  41f2e3:	and    BYTE PTR [ecx+eiz*8-0x45f0e883],0x56
  41f2eb:	add    dl,dh
  41f2ed:	js     0x41f280
  41f2ef:	hlt    
  41f2f0:	addr16 int3 
  41f2f2:	fnsave [edi+0x3bdf24ff]
  41f2f8:	in     al,0x83
  41f2fa:	cmp    cl,al
  41f2fc:	lock push ss
  41f2fe:	daa    
  41f2ff:	dec    ebx
  41f300:	cli    
  41f301:	cmp    eax,0x7b462261
  41f306:	aad    0xf4
  41f308:	add    BYTE PTR [esi+edx*8],ah
  41f30b:	test   eax,0x9670a7f1
  41f310:	imul   ebp,esp,0x8c17ee75
  41f316:	(bad)  
  41f317:	mov    bl,0x5
  41f319:	lahf   
  41f31a:	addr16 int 0x34
  41f31d:	fwait
  41f31e:	dec    ebx
  41f31f:	cs xchg ebx,eax
  41f321:	fstp   DWORD PTR [eax+ebx*1-0x4c]
  41f325:	inc    ebp
  41f326:	sbb    ebx,DWORD PTR [ecx+0x35]
  41f329:	push   ebp
  41f32a:	cld    
  41f32b:	idiv   BYTE PTR [ebx-0x453e92c]
  41f331:	cmp    ah,BYTE PTR es:[ebx+0x1a5a6084]
  41f338:	arpl   WORD PTR [edi-0x27f7d39e],di
  41f33e:	lods   eax,DWORD PTR ds:[esi]
  41f33f:	mov    ds:0x55882a38,eax
  41f344:	cmp    edx,edx
  41f346:	outs   dx,BYTE PTR ds:[esi]
  41f347:	aad    0x95
  41f349:	cmc    
  41f34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f34b:	arpl   WORD PTR [eax],dx
  41f34d:	(bad)  
  41f34f:	popa   
  41f350:	lods   eax,DWORD PTR ds:[esi]
  41f351:	pop    eax
  41f352:	ret    0x3ec8
  41f355:	aad    0xc4
  41f357:	rcl    BYTE PTR [ecx+esi*2-0x493addcf],0xe
  41f35f:	sysexit 
  41f361:	(bad)  
  41f362:	fcmovnbe st,st(1)
  41f364:	sbb    al,0x40
  41f366:	cmp    BYTE PTR [ecx],dl
  41f368:	jg     0x41f344
  41f36a:	pop    edi
  41f36b:	div    DWORD PTR [ecx+0x3aa2392]
  41f371:	and    eax,0xe2f5092a
  41f376:	sbb    ecx,eax
  41f378:	mov    ah,0x17
  41f37a:	stc    
  41f37b:	add    eax,0x553f7cf4
  41f380:	pusha  
  41f381:	sbb    ah,0x30
  41f384:	out    0xf1,eax
  41f386:	and    DWORD PTR [ecx+ecx*1+0x5b0565f2],eax
  41f38d:	aas    
  41f38e:	push   esp
  41f38f:	add    al,0x31
  41f391:	jge    0x41f3c2
  41f393:	and    eax,0xae5e2f93
  41f398:	jo     0x41f40e
  41f39a:	loopne 0x41f35f
  41f39c:	jmp    0xe4a:0xc8df3ce6
  41f3a3:	cmp    eax,0x7f1da9
  41f3a8:	inc    BYTE PTR ds:0x63da0a9
  41f3ae:	jecxz  0x41f428
  41f3b0:	sub    ch,bh
  41f3b2:	or     dl,bh
  41f3b4:	test   eax,0xa4ebfa39
  41f3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ba:	push   ss
  41f3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bc:	sti    
  41f3bd:	sbb    al,ch
  41f3bf:	out    0xaf,al
  41f3c1:	and    ch,dl
  41f3c3:	jl     0x41f378
  41f3c5:	repz enter 0x2d7,0xa5
  41f3ca:	jb     0x41f376
  41f3cc:	mov    eax,0xda323a71
  41f3d1:	xlat   BYTE PTR ds:[ebx]
  41f3d2:	into   
  41f3d3:	mov    al,0x2e
  41f3d5:	xchg   ebx,eax
  41f3d6:	rcl    BYTE PTR [ebx],cl
  41f3d8:	jno    0x41f40d
  41f3da:	test   al,0x42
  41f3dc:	(bad)  
  41f3dd:	arpl   WORD PTR [esi+0x23],di
  41f3e0:	fwait
  41f3e1:	xchg   ebx,eax
  41f3e2:	mov    ds:0x5556dbc1,eax
  41f3e7:	call   FWORD PTR [ebx]
  41f3e9:	xor    BYTE PTR [ebp+0x345c1712],0x90
  41f3f0:	sub    DWORD PTR [eax],0xc3fd2768
  41f3f6:	loopne 0x41f43c
  41f3f8:	add    ch,BYTE PTR [edx+ebp*1]
  41f3fb:	xor    al,0xdf
  41f3fd:	call   0xaccbcbd5
  41f402:	jmp    FWORD PTR [edi-0x3b]
  41f405:	loop   0x41f3fb
  41f407:	popa   
  41f408:	popa   
  41f409:	jbe    0x41f46a
  41f40b:	and    eax,0x5b3cb7cd
  41f410:	sti    
  41f411:	jl     0x41f42e
  41f413:	dec    ebx
  41f414:	add    BYTE PTR [ebx-0x48980441],bl
  41f41a:	movd   DWORD PTR [edi+0x48],mm2
  41f41e:	lock or al,0x85
  41f421:	mov    edi,0x7362303c
  41f426:	lahf   
  41f427:	addr16 mov dh,ch
  41f42a:	dec    esp
  41f42b:	dec    edx
  41f42c:	retf   0x171f
  41f42f:	fnstcw WORD PTR [eax]
  41f431:	daa    
  41f432:	dec    edi
  41f433:	and    BYTE PTR [edx+0x3abe328d],dl
  41f439:	add    ebx,ecx
  41f43b:	push   esp
  41f43c:	dec    ebx
  41f43d:	mov    dh,0x95
  41f43f:	rol    esp,cl
  41f441:	xchg   ch,bl
  41f443:	aas    
  41f444:	sbb    eax,0x9d66b278
  41f449:	mov    ah,0x7f
  41f44b:	mov    esp,0x40fc3a64
  41f450:	ins    BYTE PTR es:[edi],dx
  41f451:	retf   0xc78f
  41f454:	fs jo  0x41f42b
  41f457:	loopne 0x41f44c
  41f459:	ins    DWORD PTR es:[edi],dx
  41f45a:	pusha  
  41f45b:	fdivr  QWORD PTR [esi+0x6a]
  41f45e:	ds mov bh,0xd5
  41f461:	scas   al,BYTE PTR es:[edi]
  41f462:	je     0x41f3f6
  41f464:	sbb    DWORD PTR [esi-0x1d],0xe5aa4e3f
  41f46b:	mov    esi,0x97f97322
  41f470:	push   eax
  41f471:	or     DWORD PTR [ecx+eiz*4],esi
  41f474:	mov    eax,ds:0xc11e6a24
  41f479:	arpl   WORD PTR ds:0xdaf3383e,cx
  41f47f:	push   edx
  41f480:	adc    eax,0x493f8155
  41f485:	inc    ecx
  41f486:	(bad)  
  41f487:	imul   ebx,edx,0x3173ea02
  41f48d:	dec    edx
  41f48e:	test   BYTE PTR [ebx-0x20edea44],0xdd
  41f495:	imul   edx,edx,0xf25cf8b4
  41f49b:	call   DWORD PTR [ebp-0x1d]
  41f49e:	scas   eax,DWORD PTR es:[edi]
  41f49f:	mov    dh,0x67
  41f4a1:	hlt    
  41f4a2:	cmp    BYTE PTR [ebp+0x20],0x6a
  41f4a6:	icebp  
  41f4a7:	jo     0x41f45f
  41f4a9:	add    DWORD PTR [eax+0x59265022],ecx
  41f4af:	hlt    
  41f4b0:	fidiv  WORD PTR [esi+0x10]
  41f4b3:	cs int3 
  41f4b5:	xchg   edi,eax
  41f4b6:	and    DWORD PTR [ebp-0x448299e8],0xffffff8e
  41f4bd:	mov    cl,BYTE PTR [ebx]
  41f4bf:	lods   al,BYTE PTR ds:[esi]
  41f4c0:	rcr    DWORD PTR ds:0xbf553aad,1
  41f4c6:	or     eax,0x970ad133
  41f4cb:	loop   0x41f483
  41f4cd:	fs jo  0x41f468
  41f4d0:	xchg   ecx,eax
  41f4d1:	scas   eax,DWORD PTR es:[edi]
  41f4d2:	lods   al,BYTE PTR ds:[esi]
  41f4d3:	repnz or al,0xcc
  41f4d6:	jecxz  0x41f549
  41f4d8:	gs inc ecx
  41f4da:	cmc    
  41f4db:	xor    dl,ah
  41f4dd:	test   al,0xbf
  41f4df:	mov    edx,0x7ece7897
  41f4e4:	inc    esi
  41f4e5:	or     BYTE PTR [edi-0x71ef3b81],0x66
  41f4ec:	jns    0x41f4a8
  41f4ee:	repnz shl BYTE PTR [edx],1
  41f4f1:	pop    ebp
  41f4f2:	push   edi
  41f4f3:	mov    ch,0x2b
  41f4f5:	fisttp QWORD PTR [eax-0x27f80186]
  41f4fb:	mov    ecx,0x74c82915
  41f500:	popf   
  41f501:	out    0x81,al
  41f503:	repnz leave 
  41f505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f506:	cld    
  41f507:	xor    DWORD PTR [edx-0x7d33cb03],0xb616d409
  41f511:	inc    ebp
  41f512:	jp     0x41f553
  41f514:	xchg   ebp,eax
  41f515:	scas   eax,DWORD PTR es:[edi]
  41f516:	push   0xffffffe8
  41f518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f51a:	call   DWORD PTR [ebp+0x10f6cfe0]
  41f520:	and    al,0x29
  41f522:	jns    0x41f521
  41f524:	scas   al,BYTE PTR es:[edi]
  41f525:	adc    DWORD PTR [ebx+0x56],ebx
  41f528:	test   eax,0x3526f185
  41f52d:	stos   BYTE PTR es:[edi],al
  41f52e:	fcom   st(5)
  41f530:	ss jnp 0x41f581
  41f533:	push   esi
  41f534:	mov    ch,0x67
  41f536:	out    0x31,eax
  41f538:	mov    ah,0x1a
  41f53a:	and    BYTE PTR cs:[esi],bl
  41f53d:	call   0x20b9:0x85ed1370
  41f544:	js     0x41f513
  41f546:	push   es
  41f547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f548:	nop
  41f549:	push   ds
  41f54a:	rol    cl,0x8d
  41f54d:	jbe    0x41f569
  41f54f:	or     dh,BYTE PTR [ebx+0x3edcf721]
  41f555:	mov    ds:0xd766ca2d,eax
  41f55a:	sbb    esp,DWORD PTR [ebx]
  41f55c:	add    edx,eax
  41f55e:	jns    0x41f599
  41f560:	mov    al,ds:0x79da1f9f
  41f565:	sbb    ebp,DWORD PTR [ebx-0x4ae7fff5]
  41f56b:	int3   
  41f56c:	cmp    BYTE PTR [edx],0x5f
  41f56f:	mov    esi,0xfabc085a
  41f574:	dec    ebx
  41f575:	lds    ebp,FWORD PTR [edx]
  41f577:	jge    0x41f567
  41f579:	enter  0xf9b4,0x3a
  41f57d:	mov    al,0x2c
  41f57f:	icebp  
  41f580:	daa    
  41f581:	push   0x2d
  41f583:	and    dl,ah
  41f585:	cmp    eax,0x27ade78f
  41f58a:	loopne 0x41f603
  41f58c:	mov    edi,0x6c07ee4
  41f591:	(bad)  
  41f592:	fwait
  41f593:	ret    0x9d98
  41f596:	xor    al,dh
  41f598:	mov    esi,0x3d2e6959
  41f59d:	xchg   ebx,edi
  41f59f:	std    
  41f5a0:	(bad)  
  41f5a1:	push   ds
  41f5a2:	imul   esp,DWORD PTR [ebp-0x71],0x54
  41f5a6:	(bad)  
  41f5a7:	(bad)  
  41f5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5a9:	mov    al,0xb
  41f5ab:	je     0x41f5c0
  41f5ad:	div    BYTE PTR [ebp-0x4]
  41f5b0:	jae    0x41f609
  41f5b2:	sbb    al,0x2
  41f5b4:	sub    DWORD PTR [esi+0x23],eax
  41f5b7:	sbb    ch,dh
  41f5b9:	sbb    dh,ch
  41f5bb:	retf   0xd1e2
  41f5be:	outs   dx,DWORD PTR ds:[esi]
  41f5bf:	pop    ds
  41f5c0:	add    al,0xa8
  41f5c2:	mov    ch,0x65
  41f5c4:	hlt    
  41f5c5:	gs pop ss
  41f5c7:	dec    esi
  41f5c8:	pop    ebp
  41f5c9:	pusha  
  41f5ca:	stos   DWORD PTR es:[edi],eax
  41f5cb:	xchg   ebp,eax
  41f5cc:	push   eax
  41f5cd:	mov    bl,0xec
  41f5cf:	cmp    ebp,eax
  41f5d1:	je     0x41f5f6
  41f5d3:	push   edx
  41f5d4:	lods   eax,DWORD PTR ds:[esi]
  41f5d5:	test   al,0xa2
  41f5d7:	int3   
  41f5d8:	out    dx,al
  41f5d9:	les    ebx,FWORD PTR [eax-0x30]
  41f5dc:	push   ecx
  41f5dd:	pop    ss
  41f5de:	imul   ebp,DWORD PTR [ecx-0x34],0xb
  41f5e2:	div    esp
  41f5e4:	iret   
  41f5e5:	fbstp  TBYTE PTR [esi+eiz*4]
  41f5e8:	ins    BYTE PTR es:[edi],dx
  41f5e9:	or     bl,BYTE PTR [edx]
  41f5eb:	std    
  41f5ec:	fisubr WORD PTR [edi-0x2763b375]
  41f5f2:	out    dx,al
  41f5f3:	stos   DWORD PTR es:[edi],eax
  41f5f4:	ja     0x41f5eb
  41f5f6:	push   ss
  41f5f7:	ss loop 0x41f5fa
  41f5fa:	inc    ecx
  41f5fb:	mov    WORD PTR [edi-0x32],?
  41f5fe:	add    eax,esp
  41f600:	lods   eax,DWORD PTR ds:[esi]
  41f601:	or     DWORD PTR [ecx+0x4dadc03a],0x33
  41f608:	inc    ebx
  41f609:	cli    
  41f60a:	daa    
  41f60b:	xlat   BYTE PTR ds:[ebx]
  41f60c:	inc    esp
  41f60d:	mov    esp,0x826aa43
  41f612:	dec    ebx
  41f613:	xor    eax,0x695e74a4
  41f618:	fisub  DWORD PTR [esp+esi*4+0x77]
  41f61c:	shr    DWORD PTR [ecx+ebx*8],1
  41f61f:	popa   
  41f620:	or     eax,0x4fe009d2
  41f625:	fdivr  st,st(2)
  41f627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f628:	(bad)  
  41f629:	in     eax,dx
  41f62a:	les    eax,FWORD PTR [edi]
  41f62c:	push   ecx
  41f62d:	mov    esp,?
  41f62f:	push   ds
  41f630:	int3   
  41f631:	scas   eax,DWORD PTR es:[edi]
  41f632:	aad    0x76
  41f634:	cmp    ecx,DWORD PTR [edx-0xd]
  41f637:	pop    ebp
  41f638:	fadd   QWORD PTR [ebp*2+0x46c28a2a]
  41f63f:	fwait
  41f640:	push   ss
  41f641:	fcmovu st,st(7)
  41f643:	pop    es
  41f644:	retf   
  41f645:	xchg   ebp,eax
  41f646:	push   ds
  41f647:	mov    BYTE PTR [ebx],0x8f
  41f64a:	icebp  
  41f64b:	pop    esp
  41f64c:	xchg   ecx,eax
  41f64d:	add    eax,0x1641784e
  41f652:	mov    edx,0x7b56724f
  41f657:	ret    0x376
  41f65a:	add    ebp,edi
  41f65c:	bound  ecx,QWORD PTR [esi+0x3f]
  41f65f:	cmp    cl,BYTE PTR [eax-0x19]
  41f662:	aaa    
  41f663:	ror    BYTE PTR [edi+0x2a355e71],cl
  41f669:	stos   DWORD PTR es:[edi],eax
  41f66a:	cli    
  41f66b:	rcl    DWORD PTR [ecx],cl
  41f66d:	iret   
  41f66e:	loopne 0x41f6de
  41f670:	sbb    ebp,esp
  41f672:	xchg   ebx,eax
  41f673:	jne    0x41f687
  41f675:	adc    al,0x6c
  41f677:	hlt    
  41f678:	fld    TBYTE PTR [eax]
  41f67a:	or     ecx,DWORD PTR [eax+0x824365d]
  41f680:	jbe    0x41f6e3
  41f682:	(bad)  
  41f684:	pop    ebx
  41f685:	push   es
  41f686:	out    dx,eax
  41f687:	fisubr DWORD PTR [ecx-0x3d]
  41f68a:	ss leave 
  41f68c:	rol    esi,1
  41f68e:	add    eax,0xd7b36b65
  41f693:	fidivr WORD PTR [ecx+0x467a2591]
  41f699:	xor    dl,dh
  41f69b:	test   al,0x4b
  41f69d:	xor    ah,BYTE PTR [edi-0x2c]
  41f6a0:	xchg   edi,eax
  41f6a1:	icebp  
  41f6a2:	cmp    DWORD PTR [ecx-0x6d],0x7f
  41f6a6:	pop    ss
  41f6a7:	inc    edx
  41f6a8:	out    0x63,al
  41f6aa:	sub    dh,al
  41f6ac:	mov    WORD PTR [esp+esi*8+0x3b5e5986],?
  41f6b3:	jge    0x41f68b
  41f6b5:	lea    edx,[edx-0x45ca386d]
  41f6bb:	call   0x7e2396a
  41f6c0:	mov    al,0x84
  41f6c2:	not    BYTE PTR [eax]
  41f6c4:	xor    eax,0x22ca5c73
  41f6c9:	sbb    BYTE PTR [ecx+0xf48f4f2],ah
  41f6cf:	mov    dl,0x67
  41f6d1:	push   ebx
  41f6d2:	push   ss
  41f6d3:	cwde   
  41f6d4:	ja     0x41f714
  41f6d6:	stos   BYTE PTR es:[edi],al
  41f6d7:	enter  0xdacf,0x7a
  41f6db:	or     ebp,DWORD PTR [eiz*8-0x15150350]
  41f6e2:	(bad)  
  41f6e3:	or     bl,cl
  41f6e5:	pop    eax
  41f6e6:	push   0xffffffdc
  41f6e8:	sbb    eax,0xf8c7f4f6
  41f6ed:	cmc    
  41f6ee:	loop   0x41f6b2
  41f6f0:	mov    edi,0x6aab4027
  41f6f5:	push   eax
  41f6f6:	add    DWORD PTR [esi+0xc],esi
  41f6f9:	dec    eax
  41f6fa:	push   eax
  41f6fb:	aad    0x44
  41f6fd:	out    dx,al
  41f6fe:	sbb    BYTE PTR [eax+0x4112537f],bl
  41f704:	lods   eax,DWORD PTR ds:[esi]
  41f705:	jb     0x41f6ca
  41f707:	cmp    dl,bl
  41f709:	js     0x41f77c
  41f70b:	mov    BYTE PTR ds:0x8a86b46c,ah
  41f711:	out    dx,al
  41f712:	ss mov eax,0x381102aa
  41f718:	and    BYTE PTR [ebx],cl
  41f71a:	int    0xe3
  41f71c:	inc    ebx
  41f71d:	lea    ebp,[edx-0x27f7bfbf]
  41f723:	iret   
  41f724:	push   0x9a3b44d7
  41f729:	push   ss
  41f72a:	cwde   
  41f72b:	fld    QWORD PTR [edi-0x3e]
  41f72e:	enter  0xae82,0xc8
  41f732:	mov    WORD PTR [edi+eax*1-0x6e4ec262],ds
  41f739:	out    0xa8,al
  41f73b:	jmp    0x41f77e
  41f73d:	loope  0x41f721
  41f73f:	mov    DWORD PTR [eax-0x28f4138a],esp
  41f745:	and    BYTE PTR [ecx-0x3b],0x56
  41f749:	adc    BYTE PTR [edi],0xb6
  41f74c:	cmp    BYTE PTR [bx-0x30],0x6f
  41f751:	inc    edi
  41f752:	bound  edx,QWORD PTR [ecx-0x8]
  41f755:	sbb    DWORD PTR [ebx-0x6d133de5],edi
  41f75b:	or     ch,BYTE PTR [eax]
  41f75d:	ss dec ebx
  41f75f:	mov    ds:0x81c8b01b,eax
  41f764:	shl    DWORD PTR [esi+0x2b],cl
  41f767:	fistp  QWORD PTR [eax-0x6d]
  41f76a:	fwait
  41f76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f76c:	(bad)  
  41f76d:	or     ebx,DWORD PTR [ebp-0x3834d393]
  41f773:	lahf   
  41f774:	fild   DWORD PTR [esi]
  41f776:	aaa    
  41f777:	stc    
  41f778:	call   0x441ab3dd
  41f77d:	add    eax,0x251a006e
  41f782:	(bad)  
  41f783:	fidiv  WORD PTR [ebx-0x6d]
  41f786:	sub    DWORD PTR [ecx],0xe31277eb
  41f78c:	pop    es
  41f78d:	or     ah,BYTE PTR [edi+eax*8+0x41caf74a]
  41f794:	push   ebx
  41f795:	stc    
  41f796:	mov    bh,0x1c
  41f798:	jg     0x41f7d9
  41f79a:	sar    DWORD PTR [esi],0x88
  41f79d:	(bad)  
  41f79e:	and    al,0xca
  41f7a0:	inc    ebx
  41f7a1:	and    al,0x4b
  41f7a3:	adc    al,0x6d
  41f7a5:	adc    ebx,eax
  41f7a7:	sbb    al,BYTE PTR [ebp-0x657a4a48]
  41f7ad:	std    
  41f7ae:	inc    edi
  41f7af:	add    DWORD PTR [ebp-0x38],edi
  41f7b2:	(bad)  
  41f7b3:	jne    0x41f823
  41f7b5:	xchg   ebp,eax
  41f7b6:	sbb    ebp,DWORD PTR [ebx+0x66]
  41f7b9:	clc    
  41f7ba:	pop    eax
  41f7bb:	or     al,0x6b
  41f7bd:	pop    esi
  41f7be:	cmp    BYTE PTR [ecx],0x64
  41f7c1:	inc    eax
  41f7c2:	out    dx,al
  41f7c3:	mov    BYTE PTR [eax+0x18c431cd],ah
  41f7c9:	jns    0x41f7f3
  41f7cb:	xchg   ebx,eax
  41f7cc:	push   edi
  41f7cd:	jns    0x41f771
  41f7cf:	test   DWORD PTR [eax],ebx
  41f7d1:	mov    ah,0xe3
  41f7d3:	int    0xe8
  41f7d5:	jns    0x41f775
  41f7d7:	xor    ecx,esp
  41f7d9:	jecxz  0x41f76b
  41f7db:	sahf   
  41f7dc:	sbb    bl,BYTE PTR [edi-0x17]
  41f7df:	shl    BYTE PTR [ecx+0x6d],1
  41f7e2:	fmul   QWORD PTR [edx+0x34a0810d]
  41f7e8:	jo     0x41f841
  41f7ea:	retf   
  41f7eb:	leave  
  41f7ec:	mov    dh,0x2d
  41f7ee:	xchg   ebx,eax
  41f7ef:	adc    ch,BYTE PTR [edx*8-0x75592dbf]
  41f7f6:	add    eax,0x277c092e
  41f7fb:	xchg   ebp,ecx
  41f7fd:	cmc    
  41f7fe:	sbb    DWORD PTR ds:0x3285909b,0xffffff99
  41f805:	dec    edx
  41f806:	outs   dx,BYTE PTR ds:[esi]
  41f807:	stos   BYTE PTR es:[edi],al
  41f808:	mov    esp,0xeecf7858
  41f80d:	pop    ebx
  41f80e:	push   eax
  41f80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f810:	cdq    
  41f811:	imul   BYTE PTR [edi-0x1f6db8c0]
  41f817:	sbb    al,al
  41f819:	pop    ss
  41f81a:	xor    esp,ebx
  41f81c:	hlt    
  41f81d:	iret   
  41f81e:	jbe    0x41f823
  41f820:	mov    ebx,0x94c6acf4
  41f825:	or     ebx,0x4e
  41f828:	sub    ch,BYTE PTR cs:[eax+0x39]
  41f82c:	push   0xffffffdb
  41f82e:	mov    ds:0xbb84b74f,al
  41f833:	outs   dx,DWORD PTR ds:[esi]
  41f834:	sub    edi,esi
  41f836:	or     dl,BYTE PTR ds:0x76acffa1
  41f83c:	dec    eax
  41f83d:	fld    QWORD PTR [edi]
  41f83f:	inc    esp
  41f840:	add    eax,0xbccd36da
  41f845:	pop    esp
  41f846:	pop    esp
  41f847:	jb     0x41f824
  41f849:	and    DWORD PTR ds:0xf2dd,esp
  41f84e:	mov    bh,0xa4
  41f850:	test   al,0x7d
  41f852:	push   ecx
  41f853:	scas   al,BYTE PTR es:[edi]
  41f854:	pusha  
  41f855:	rcr    DWORD PTR [esp+ecx*2-0x79],cl
  41f859:	cmc    
  41f85a:	push   0x49734626
  41f85f:	fsubr  DWORD PTR [esi]
  41f861:	push   ss
  41f862:	mov    ch,0xfa
  41f864:	dec    edx
  41f865:	hlt    
  41f866:	sub    al,0x3c
  41f868:	retf   
  41f869:	in     al,dx
  41f86a:	(bad)  
  41f86b:	int3   
  41f86c:	mov    eax,ds:0xe877c11
  41f871:	sbb    eax,0xcd1068f6
  41f876:	sbb    eax,0x9dfbd516
  41f87b:	(bad)  
  41f87c:	cmp    edx,ecx
  41f87e:	and    bl,cl
  41f880:	test   BYTE PTR [edx-0x13],0x0
  41f884:	in     eax,dx
  41f885:	fsub   DWORD PTR [ebp+0x66bbde8]
  41f88b:	mov    al,ds:0x3e0de582
  41f890:	xchg   edi,eax
  41f891:	lea    eax,[esi+edx*8-0x14]
  41f895:	push   esi
  41f896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f897:	push   esp
  41f898:	add    bl,BYTE PTR es:[ecx+0x5359efef]
  41f89f:	es push ss
  41f8a1:	sub    ebx,DWORD PTR [esi+0x3d]
  41f8a4:	inc    edx
  41f8a5:	fadd   DWORD PTR [edi]
  41f8a7:	test   DWORD PTR [ebp-0x5f],esp
  41f8aa:	jae    0x41f875
  41f8ac:	in     eax,0x9
  41f8ae:	lea    edi,[edi]
  41f8b0:	icebp  
  41f8b1:	retf   
  41f8b2:	xchg   ebp,eax
  41f8b3:	mov    dh,0x14
  41f8b5:	dec    esi
  41f8b6:	iret   
  41f8b7:	jmp    0x41f84a
  41f8b9:	xchg   DWORD PTR [eax+eax*2+0x38],esi
  41f8bd:	jg     0x1f1e9a54
  41f8c3:	and    ebx,DWORD PTR [edi-0x142f59d5]
  41f8c9:	bound  edi,QWORD PTR [ecx-0x6a]
  41f8cc:	or     al,0x8f
  41f8ce:	push   edi
  41f8cf:	mov    edx,0xb6ea82a
  41f8d4:	out    0x5b,eax
  41f8d6:	mov    bh,0x53
  41f8d8:	push   ebx
  41f8d9:	jl     0x41f8a5
  41f8db:	mov    esp,0x29be103
  41f8e0:	push   ebx
  41f8e1:	(bad)
  41f8e4:	fild   DWORD PTR gs:[ebx+0x13]
  41f8e8:	add    edi,DWORD PTR [edi+0x1733d6c3]
  41f8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ef:	push   edx
  41f8f0:	scas   al,BYTE PTR es:[edi]
  41f8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f2:	fistp  QWORD PTR [ebp+0x49]
  41f8f5:	test   ch,al
  41f8f7:	sbb    al,BYTE PTR ds:0xa039131e
  41f8fd:	inc    edi
  41f8fe:	jns    0x41f962
  41f900:	xchg   edi,eax
  41f901:	gs lahf 
  41f903:	ror    BYTE PTR [esi],1
  41f905:	test   ch,dl
  41f907:	dec    ebx
  41f908:	das    
  41f909:	push   esp
  41f90a:	mov    ds:0x707d053,al
  41f90f:	mov    fs,eax
  41f911:	dec    edx
  41f912:	sbb    ah,dh
  41f914:	inc    eax
  41f915:	adc    al,0xff
  41f917:	popf   
  41f918:	or     BYTE PTR [ebp+ebp*4+0x6fcfce39],0x5b
  41f920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f921:	lock aaa 
  41f923:	xor    al,0xf0
  41f925:	mov    bl,0x77
  41f927:	xor    edx,DWORD PTR [edi+0x6c22d7cb]
  41f92d:	xor    cl,BYTE PTR [ebx+0x4b]
  41f930:	jl     0x41f95b
  41f932:	shl    BYTE PTR [eax+0x41],cl
  41f935:	adc    BYTE PTR [ebp+0x36],bh
  41f938:	mov    cl,BYTE PTR [ebp-0x51ca0689]
  41f93e:	add    al,0xcf
  41f940:	(bad)  
  41f941:	aad    0x65
  41f943:	adc    eax,0x94f1d483
  41f948:	out    dx,al
  41f949:	iret   
  41f94a:	xchg   DWORD PTR ds:[eax-0x1d],eax
  41f94e:	push   eax
  41f94f:	mov    ebp,0xdee12c6a
  41f954:	pop    edx
  41f955:	jns    0x41f9c4
  41f957:	adc    BYTE PTR [edi],dh
  41f959:	pop    cx
  41f95b:	pop    eax
  41f95c:	in     al,0xda
  41f95e:	jecxz  0x41f9b5
  41f960:	add    DWORD PTR [edx-0x3d],ebx
  41f963:	test   al,0x6
  41f965:	ficomp WORD PTR [edx-0x1d4623af]
  41f96b:	je     0x41f902
  41f96d:	ficomp DWORD PTR [eax-0x11]
  41f970:	lahf   
  41f971:	dec    esi
  41f972:	push   edi
  41f973:	gs xchg esi,eax
  41f975:	fild   QWORD PTR [edi-0x2a]
  41f978:	mov    ch,0x1e
  41f97a:	push   ss
  41f97b:	test   dl,0xbc
  41f97e:	mov    ?,WORD PTR [ebx]
  41f980:	xor    al,0xc2
  41f982:	stc    
  41f983:	sub    eax,DWORD PTR [esi]
  41f985:	cld    
  41f986:	push   0xfbede8b4
  41f98b:	iret   
  41f98c:	cmp    ebp,DWORD PTR [edi]
  41f98e:	in     al,dx
  41f98f:	fstp   TBYTE PTR [eax]
  41f991:	and    ebx,DWORD PTR [edi+0xff3fbf0]
  41f997:	pusha  
  41f998:	pusha  
  41f999:	dec    eax
  41f99a:	dec    eax
  41f99b:	out    0x96,al
  41f99d:	dec    ebp
  41f99e:	pop    es
  41f99f:	(bad)  
  41f9a0:	pop    esp
  41f9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a2:	mov    ch,0xc8
  41f9a4:	sbb    al,0x55
  41f9a6:	mov    dh,0xcf
  41f9a8:	jecxz  0x41fa28
  41f9aa:	cmp    dl,BYTE PTR [eax]
  41f9ac:	and    cl,ch
  41f9ae:	mov    esp,0x6e1bb7e2
  41f9b3:	mov    al,0xbb
  41f9b5:	mov    ds:0x498aa179,eax
  41f9ba:	das    
  41f9bb:	loopne 0x41f958
  41f9bd:	push   esp
  41f9be:	xlat   BYTE PTR ds:[ebx]
  41f9bf:	xchg   edx,eax
  41f9c0:	or     eax,0xbfe17dfe
  41f9c5:	scas   al,BYTE PTR es:[edi]
  41f9c6:	xchg   ecx,eax
  41f9c7:	pop    es
  41f9c8:	test   al,0xc9
  41f9ca:	in     eax,0x5a
  41f9cc:	jne    0x41f9ef
  41f9ce:	sub    eax,0x2cef5d97
  41f9d3:	cmp    eax,0x37b6fd34
  41f9d8:	adc    BYTE PTR [esi-0x6ffc527],ah
  41f9de:	xlat   BYTE PTR ds:[ebx]
  41f9df:	pop    ebx
  41f9e0:	dec    esp
  41f9e1:	xchg   esp,eax
  41f9e2:	mov    WORD PTR [eax-0x2b],ss
  41f9e5:	sub    DWORD PTR [eax],edx
  41f9e7:	jg     0x41f9e2
  41f9e9:	xchg   ebp,eax
  41f9ea:	test   bl,cl
  41f9ec:	int3   
  41f9ed:	fist   DWORD PTR [edx]
  41f9ef:	arpl   WORD PTR [esi+0x6fd972dc],sp
  41f9f5:	pop    esi
  41f9f6:	sub    DWORD PTR [eax-0x30],ecx
  41f9f9:	pusha  
  41f9fa:	out    dx,eax
  41f9fb:	dec    esp
  41f9fc:	xor    esp,edx
  41f9fe:	lds    ebx,FWORD PTR [ecx]
  41fa00:	leave  
  41fa01:	jo     0x41fa6d
  41fa03:	mov    ebp,0xb77f8309
  41fa08:	jbe    0x41f9e1
  41fa0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0b:	(bad)  
  41fa0c:	xchg   ebx,eax
  41fa0d:	bound  edi,QWORD PTR [esi]
  41fa0f:	dec    ebx
  41fa10:	or     eax,0xcc6f4d48
  41fa15:	test   BYTE PTR [ebp+ecx*4+0x30],ah
  41fa19:	mov    ds:0xcafeabe0,eax
  41fa1e:	lea    ebp,[edx+0x3e879c6c]
  41fa24:	mov    DWORD PTR [eax-0x48b4a0d],esp
  41fa2a:	pop    ss
  41fa2b:	cmc    
  41fa2c:	pusha  
  41fa2d:	sbb    al,0x9e
  41fa2f:	pop    eax
  41fa30:	retf   
  41fa31:	mov    al,ds:0xc4ebd491
  41fa36:	imul   eax,ecx,0xab97c4b1
  41fa3c:	ds inc esi
  41fa3e:	or     eax,0x8041191c
  41fa44:	das    
  41fa45:	loope  0x41fa61
  41fa47:	leave  
  41fa48:	stc    
  41fa49:	sbb    al,0x56
  41fa4b:	inc    edx
  41fa4c:	jo     0x41fa08
  41fa4e:	scas   eax,DWORD PTR es:[edi]
  41fa4f:	sbb    al,0xb3
  41fa51:	jnp    0x41fa78
  41fa53:	sahf   
  41fa54:	enter  0xc5cd,0x73
  41fa58:	sbb    al,0x1
  41fa5a:	test   BYTE PTR [esi],ch
  41fa5c:	cmp    al,0x9
  41fa5e:	stc    
  41fa5f:	fsubr  DWORD PTR [edi+0x7cd9a0b4]
  41fa65:	hlt    
  41fa66:	sub    BYTE PTR [edx],bh
  41fa68:	sti    
  41fa69:	sub    eax,0xd1cfab30
  41fa6e:	mov    al,0xea
  41fa70:	and    al,0xeb
  41fa72:	scas   eax,DWORD PTR es:[edi]
  41fa73:	pop    esi
  41fa74:	adc    ecx,DWORD PTR [eax-0x5b]
  41fa77:	push   0x8aa265c8
  41fa7c:	aad    0xbd
  41fa7e:	(bad)  
  41fa7f:	and    eax,0x18151c6a
  41fa84:	sar    al,1
  41fa86:	mov    ch,0xdd
  41fa88:	pop    ss
  41fa89:	pusha  
  41fa8a:	xlat   BYTE PTR ds:[ebx]
  41fa8b:	addr16 int3 
  41fa8d:	jnp    0x41fad4
  41fa8f:	jbe    0x41fa69
  41fa91:	add    eax,0xf357903d
  41fa96:	in     eax,dx
  41fa97:	adc    esp,DWORD PTR [eax]
  41fa99:	mov    eax,0x63c424f
  41fa9e:	mov    ebp,0xa5af4a53
  41faa3:	mov    edx,0x742994bb
  41faa8:	icebp  
  41faa9:	dec    esi
  41faaa:	adc    al,0xa1
  41faac:	push   ecx
  41faad:	cmp    eax,0x2651b7bc
  41fab2:	sub    BYTE PTR [edi+ebx*8],bl
  41fab5:	call   0xff15:0x3d710109
  41fabc:	and    eax,0xc4c0ee4
  41fac1:	xor    cl,BYTE PTR [ebx+0x71]
  41fac4:	shl    DWORD PTR [edx-0x645719e3],0x29
  41facb:	pop    edx
  41facc:	ror    DWORD PTR [ecx-0x67],1
  41facf:	pop    ebp
  41fad0:	cmp    eax,DWORD PTR [edx+ebx*2]
  41fad3:	pop    ebp
  41fad4:	push   es
  41fad5:	mov    bh,0x88
  41fad7:	xchg   ebp,eax
  41fad8:	int3   
  41fad9:	and    eax,0x2dcee737
  41fade:	pop    es
  41fadf:	push   edi
  41fae0:	cmp    ecx,DWORD PTR [edx]
  41fae2:	sbb    dl,0xc9
  41fae5:	cmp    BYTE PTR [ebx-0x6f],0x11
  41fae9:	in     eax,0xdb
  41faeb:	pop    edi
  41faed:	and    ah,BYTE PTR [edx+0x24]
  41faf0:	cdq    
  41faf1:	fwait
  41faf2:	dec    ecx
  41faf3:	ror    esp,cl
  41faf5:	lds    esi,FWORD PTR [ecx-0x4f]
  41faf8:	sbb    esi,eax
  41fafa:	cmc    
  41fafb:	dec    edi
  41fafc:	or     BYTE PTR [ebp-0x7952bd5b],bl
  41fb02:	ret    
  41fb03:	pusha  
  41fb04:	add    BYTE PTR [edi-0x69b9a21e],dh
  41fb0a:	ret    
  41fb0b:	das    
  41fb0c:	mov    ebx,ebp
  41fb0e:	jg     0x41fb49
  41fb10:	mov    bh,0x2
  41fb12:	xchg   ebx,eax
  41fb13:	pop    eax
  41fb14:	test   eax,0xb483851a
  41fb19:	je     0x41fad2
  41fb1b:	and    eax,0x553824bf
  41fb20:	mov    bh,0xbe
  41fb22:	jg     0x41fb94
  41fb24:	mov    bl,BYTE PTR [ebx+0x70]
  41fb27:	mov    esi,0xbb37ee53
  41fb2c:	test   al,0x95
  41fb2e:	nop
  41fb2f:	(bad)  
  41fb30:	pop    eax
  41fb31:	enter  0x34a1,0x2f
  41fb35:	stc    
  41fb36:	add    ah,cl
  41fb38:	ja     0xb2380875
  41fb3e:	imul   esp,eax,0xffffffac
  41fb41:	frstor [ecx-0x5a]
  41fb44:	push   0xffffffee
  41fb46:	inc    edi
  41fb47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb48:	xor    cl,al
  41fb4a:	mov    al,0x9b
  41fb4c:	sbb    cl,cl
  41fb4e:	(bad)
  41fb52:	sbb    eax,ebx
  41fb54:	test   eax,0xda4521df
  41fb59:	mov    bl,0xf4
  41fb5b:	ffree  st(4)
  41fb5d:	cs xor al,0x57
  41fb60:	sbb    DWORD PTR [edx+0x2844fe10],ebp
  41fb66:	sahf   
  41fb67:	xor    ecx,DWORD PTR [edi-0x4fc49307]
  41fb6d:	fnstenv [esi-0x59]
  41fb70:	int3   
  41fb71:	adc    BYTE PTR [eax-0x35],bl
  41fb74:	jge    0x41fb1d
  41fb76:	adc    cl,BYTE PTR [ebp+eiz*2+0x11]
  41fb7a:	xchg   edi,eax
  41fb7b:	test   BYTE PTR [edi+0x62],0x46
  41fb7f:	lods   al,BYTE PTR ds:[esi]
  41fb80:	rcl    BYTE PTR [esi+0x73514a40],0x93
  41fb87:	bound  esp,QWORD PTR [edx]
  41fb89:	inc    edi
  41fb8a:	pop    ebp
  41fb8b:	(bad)
  41fb8e:	fsub   st,st(7)
  41fb90:	mov    ds:0x919dfaae,eax
  41fb95:	xchg   esi,eax
  41fb96:	cwde   
  41fb97:	mov    eax,0x1bdaccf9
  41fb9c:	les    ebx,FWORD PTR [ecx]
  41fb9e:	outs   dx,DWORD PTR ds:[esi]
  41fb9f:	lock mov eax,ds:0x40d83972
  41fba5:	mov    esi,0xf61688ca
  41fbaa:	cmp    dh,BYTE PTR [ecx-0x75]
  41fbad:	popf   
  41fbae:	xor    ax,0xb46c
  41fbb2:	stc    
  41fbb3:	lods   eax,DWORD PTR ds:[esi]
  41fbb4:	jge    0x41fbaf
  41fbb6:	pop    esi
  41fbb7:	cli    
  41fbb8:	jne    0x41fbe0
  41fbba:	repnz adc ecx,DWORD PTR ds:0xb77ba52
  41fbc1:	retf   0x4d89
  41fbc4:	lods   al,BYTE PTR ds:[esi]
  41fbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc8:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcb:	add    ecx,0x242ebc9
  41fbd1:	xor    ecx,edx
  41fbd3:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbd9:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdc:	add    ecx,edi
  41fbde:	and    ecx,edx
  41fbe0:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe6:	mov    edx,DWORD PTR [ebp-0x48]
  41fbe9:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41fbf0:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf6:	mov    edx,0xfa5e1524
  41fbfb:	sub    edx,ecx
  41fbfd:	add    edx,DWORD PTR [ebp-0x44]
  41fc00:	mov    DWORD PTR [ebp-0x44],edx
  41fc03:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc06:	xor    ecx,eax
  41fc08:	add    ecx,esi
  41fc0a:	jne    0x41b4d1
  41fc10:	jmp    0x422001
  41fc15:	jmp    0x421f74
  41fc1a:	fistp  QWORD PTR [ecx+edi*4-0x13]
  41fc1e:	call   0xd5d8:0xbe4a8faa
  41fc25:	fs lahf 
  41fc27:	popf   
  41fc28:	jo     0x41fc6e
  41fc2a:	imul   esi,DWORD PTR [edi+0x5e3d837c],0x5a3b8383
  41fc34:	fs mov ebp,0xa371be78
  41fc3a:	mov    bh,BYTE PTR [ebx+0x29984f47]
  41fc40:	retf   
  41fc41:	push   edi
  41fc42:	xchg   edx,eax
  41fc43:	aam    0x36
  41fc45:	mov    ecx,DWORD PTR [edi+0x39]
  41fc48:	mov    al,BYTE PTR ds:0x2382e010
  41fc4e:	mov    ah,0xcc
  41fc50:	into   
  41fc51:	xchg   DWORD PTR [ebx-0x65],ebx
  41fc54:	pop    ebx
  41fc55:	jbe    0x41fca4
  41fc57:	pop    esp
  41fc58:	leave  
  41fc59:	(bad)  
  41fc5a:	shl    BYTE PTR [edx+ecx*1+0x24],cl
  41fc5e:	jge    0x41fcdc
  41fc60:	xchg   esp,eax
  41fc61:	mov    bh,0x92
  41fc63:	xor    BYTE PTR [ebx+0x6363a28a],0x6e
  41fc6a:	ins    BYTE PTR es:[edi],dx
  41fc6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc6c:	xchg   edi,eax
  41fc6d:	inc    esi
  41fc6e:	fcomip st,st(2)
  41fc70:	aam    0x30
  41fc72:	jae    0x41fc37
  41fc74:	push   ss
  41fc75:	jbe    0x41fc00
  41fc77:	sub    BYTE PTR [ecx-0x50],dh
  41fc7a:	xchg   ebx,eax
  41fc7b:	sub    eax,0x386d8b1b
  41fc80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc81:	sbb    DWORD PTR [ecx-0x5b],0x18
  41fc85:	sbb    eax,0x55dece66
  41fc8a:	inc    ebp
  41fc8b:	mov    WORD PTR gs:[ecx+0x2611df50],?
  41fc92:	sub    al,0x74
  41fc94:	push   edi
  41fc95:	sbb    ebp,DWORD PTR [eax]
  41fc97:	bound  eax,QWORD PTR [ebp-0x2ce0267c]
  41fc9d:	pop    ebx
  41fc9e:	push   ecx
  41fc9f:	push   ebx
  41fca0:	sub    bl,ah
  41fca2:	add    BYTE PTR [ebp+0x281c63f4],cl
  41fca8:	cmp    dh,ch
  41fcaa:	add    eax,0x6b5d6286
  41fcaf:	cmovge ebx,esi
  41fcb2:	and    BYTE PTR [ebx+edx*2-0x7b635258],0x66
  41fcba:	imul   edx,DWORD PTR [edi+0x2c],0x43
  41fcbe:	out    0xf3,eax
  41fcc0:	cmp    al,0xb8
  41fcc2:	imul   edx,DWORD PTR [ebx-0x5f],0xffffffa6
  41fcc6:	mov    ebx,0x82c79c65
  41fccb:	dec    edi
  41fccc:	jne    0x41fcfb
  41fcce:	add    cl,BYTE PTR [ecx+ecx*1-0x59]
  41fcd2:	(bad)  
  41fcd3:	jne    0x41fcc4
  41fcd5:	jne    0x41fcf7
  41fcd7:	sbb    eax,0x96bc6337
  41fcdc:	adc    BYTE PTR [eax+eiz*2+0x2b],bl
  41fce0:	jns    0x41fc7f
  41fce2:	jo     0x41fcc3
  41fce4:	cmp    BYTE PTR [ebx],ah
  41fce6:	and    DWORD PTR [ecx+0x6a],edi
  41fce9:	lea    eax,[edi-0x25]
  41fcec:	aaa    
  41fced:	mov    ecx,DWORD PTR [edx-0x484d33a2]
  41fcf3:	pop    ss
  41fcf4:	push   eax
  41fcf5:	mov    BYTE PTR [ebx-0x5],al
  41fcf8:	pop    ebx
  41fcf9:	adc    al,0x8c
  41fcfb:	jae    0x41fd30
  41fcfd:	mov    edx,0x6a772dfe
  41fd02:	and    eax,DWORD PTR [ebp-0x6ae0cb8b]
  41fd08:	dec    esi
  41fd09:	adc    BYTE PTR [ecx-0x4d],bl
  41fd0c:	mov    dl,0x81
  41fd0e:	sub    esi,eax
  41fd10:	dec    DWORD PTR [edx+0x51127636]
  41fd16:	or     eax,0xfa0a8a35
  41fd1b:	sbb    DWORD PTR [ecx+esi*1],ecx
  41fd1e:	fisub  WORD PTR [ebx+0x3670329f]
  41fd24:	fcmovu st,st(4)
  41fd26:	and    BYTE PTR [esi-0x8e2274f],bl
  41fd2c:	xchg   ebp,eax
  41fd2d:	mov    DWORD PTR [edi*4+0x4ff57cd9],ebp
  41fd34:	cmp    al,0xb
  41fd36:	repz mov WORD PTR [esi-0x4a],?
  41fd3a:	test   ch,dh
  41fd3c:	retf   0xea82
  41fd3f:	outs   dx,BYTE PTR ds:[esi]
  41fd40:	push   0x5d
  41fd42:	scas   eax,DWORD PTR es:[edi]
  41fd43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd44:	cli    
  41fd45:	and    dl,0x15
  41fd48:	hlt    
  41fd49:	mov    ah,0x85
  41fd4b:	pop    edi
  41fd4c:	or     al,0x98
  41fd4e:	out    0xbe,eax
  41fd50:	jns    0x41fda1
  41fd52:	adc    cl,BYTE PTR [esi+0xc54a09c]
  41fd58:	leave  
  41fd59:	or     DWORD PTR [ebp+0x226733af],0xffffffb1
  41fd60:	xchg   esp,eax
  41fd61:	jl     0x41fd45
  41fd63:	mov    cl,0xf3
  41fd65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd66:	imul   eax,DWORD PTR [edx],0xdc69967f
  41fd6c:	es inc esi
  41fd6e:	xchg   al,ch
  41fd70:	sbb    DWORD PTR [edx+0x1bddcc4d],ecx
  41fd76:	(bad)  [esp+ebp*4-0x2f435802]
  41fd7d:	mov    ecx,0xb8f69cdc
  41fd82:	push   edi
  41fd83:	cmp    ch,al
  41fd85:	ds sti 
  41fd87:	loop   0x41fd23
  41fd89:	cmp    DWORD PTR [esi],edx
  41fd8b:	sbb    eax,0x7bee846e
  41fd90:	dec    ebp
  41fd91:	inc    eax
  41fd92:	in     eax,0x8
  41fd94:	in     eax,0x7e
  41fd96:	mov    ch,0x4b
  41fd98:	sbb    DWORD PTR ss:[edi],ebp
  41fd9b:	sbb    edi,0xffffffa9
  41fd9e:	pop    edx
  41fd9f:	ret    
  41fda0:	mov    ah,0xd2
  41fda2:	lea    ecx,[ecx]
  41fda4:	push   DWORD PTR ds:0x728290d4
  41fdaa:	xchg   esi,eax
  41fdab:	sub    eax,0x7c4f47e9
  41fdb0:	mov    eax,ds:0x233b1e8
  41fdb5:	gs fucomip st,st(5)
  41fdb8:	aaa    
  41fdb9:	ja     0x41fe04
  41fdbb:	popa   
  41fdbc:	xor    BYTE PTR [esi+0x1b],dh
  41fdbf:	fstp   QWORD PTR ds:0x9c79979f
  41fdc5:	das    
  41fdc6:	sbb    BYTE PTR [eax-0xd938b87],0x1b
  41fdcd:	cmp    al,0xc4
  41fdcf:	cmp    ebp,eax
  41fdd1:	mov    ch,0x7b
  41fdd3:	inc    esi
  41fdd4:	out    0xbd,al
  41fdd6:	sbb    DWORD PTR ds:0x97810338,0xffffffc5
  41fddd:	mov    al,ds:0x47a171f3
  41fde2:	sub    BYTE PTR ds:0x40df5411,bl
  41fde8:	repnz inc edi
  41fdea:	jae    0x41fe4f
  41fdec:	and    eax,0xadc2639
  41fdf1:	adc    eax,0x57275cdb
  41fdf6:	xchg   DWORD PTR [eax-0x689a5fdc],ebp
  41fdfc:	pop    ds
  41fdfd:	int    0x87
  41fdff:	and    ebx,ebp
  41fe01:	addr16 mov ah,0x50
  41fe04:	aaa    
  41fe05:	fs jns 0x41fe3b
  41fe08:	repz xor dl,BYTE PTR [edx-0x2548d8c8]
  41fe0f:	xor    BYTE PTR [eax+ebp*8-0x1b60258e],0xd9
  41fe17:	or     edx,ecx
  41fe19:	mov    ebp,0xa33599e6
  41fe1e:	adc    al,0x38
  41fe20:	dec    eax
  41fe21:	leave  
  41fe22:	mov    ah,0x94
  41fe24:	shr    BYTE PTR [ecx-0x2d2980b2],1
  41fe2a:	hlt    
  41fe2b:	mov    bl,0x16
  41fe2d:	fwait
  41fe2e:	sub    al,BYTE PTR [ecx+eiz*8]
  41fe31:	xchg   esp,eax
  41fe32:	or     al,bl
  41fe34:	repnz push cs
  41fe36:	nop
  41fe37:	dec    eax
  41fe38:	inc    ecx
  41fe39:	lock and BYTE PTR [esi+0x422a2572],ah
  41fe40:	jns    0x41feaa
  41fe42:	mov    dl,0x15
  41fe44:	fistp  WORD PTR [esi+esi*8-0x4ff4d7ae]
  41fe4b:	or     BYTE PTR [edi+0x7d],ch
  41fe4e:	ins    BYTE PTR es:[edi],dx
  41fe4f:	imul   eax,DWORD PTR [edx],0xfff4f52c
  41fe55:	pop    es
  41fe56:	in     al,0xe
  41fe58:	cld    
  41fe59:	cld    
  41fe5a:	sbb    esp,esi
  41fe5c:	mov    bl,0x70
  41fe5e:	pop    ecx
  41fe5f:	and    esp,DWORD PTR ds:0xacb18d78
  41fe65:	mov    ah,0x9f
  41fe67:	(bad)  
  41fe68:	cmovle ebp,DWORD PTR [esi]
  41fe6b:	xchg   edx,eax
  41fe6c:	mov    ds,WORD PTR [ebx-0x67ae834f]
  41fe72:	cmp    al,0x40
  41fe74:	aas    
  41fe75:	inc    eax
  41fe76:	sub    al,0x2
  41fe78:	mov    DWORD PTR [ecx+esi*2+0x1d],esp
  41fe7c:	mov    esp,0x5c61cad7
  41fe81:	and    DWORD PTR [ebx],0xf6d7604b
  41fe87:	icebp  
  41fe88:	jle    0x41feea
  41fe8a:	jne    0x41fed5
  41fe8c:	xchg   esp,eax
  41fe8d:	(bad)  
  41fe8e:	push   ds
  41fe8f:	add    DWORD PTR [eax-0x4a228e9b],ebp
  41fe95:	sar    ebp,cl
  41fe97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe98:	mov    cl,0x31
  41fe9a:	clc    
  41fe9b:	and    al,0xe6
  41fe9d:	lahf   
  41fe9e:	cmp    ah,BYTE PTR [eax-0x2496facb]
  41fea4:	sbb    BYTE PTR [ebx-0x77],dh
  41fea7:	mov    ecx,esp
  41fea9:	ja     0x41fe41
  41feab:	pusha  
  41feac:	xchg   DWORD PTR [esp+eiz*4],esp
  41feaf:	leave  
  41feb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb1:	xor    ecx,DWORD PTR [eax-0x4c]
  41feb4:	int3   
  41feb5:	cdq    
  41feb6:	clc    
  41feb7:	shr    DWORD PTR [edi],1
  41feb9:	aad    0xa
  41febb:	xchg   edi,eax
  41febc:	das    
  41febd:	(bad)  
  41febe:	mov    esp,0xddce19a0
  41fec3:	add    ebx,DWORD PTR [ebp+0x60d852e8]
  41fec9:	sahf   
  41feca:	cmp    eax,esi
  41fecc:	inc    eax
  41fecd:	xor    edi,DWORD PTR [esi-0x3b51efa8]
  41fed3:	sub    BYTE PTR [ebp-0x3],ah
  41fed6:	sbb    BYTE PTR [eax+0x2db193df],ch
  41fedc:	(bad)  
  41fedd:	mov    bl,0x9f
  41fedf:	aad    0x4e
  41fee1:	pop    es
  41fee2:	adc    eax,0xf6c26568
  41fee7:	xchg   ecx,eax
  41fee8:	pop    ebp
  41fee9:	cmp    eax,0x1f9e332e
  41feee:	fs popa 
  41fef0:	pop    edx
  41fef1:	add    DWORD PTR [ebx],0xffffff92
  41fef4:	cmp    BYTE PTR [ecx+0x2ece6a69],ch
  41fefa:	xchg   edx,eax
  41fefb:	js     0x41ff2c
  41fefd:	aam    0xd7
  41feff:	and    DWORD PTR [edx],0xffffffac
  41ff02:	push   DWORD PTR [ebx-0x1e]
  41ff05:	std    
  41ff06:	jmp    0x1ec5:0x8767d8c0
  41ff0d:	jne    0x41ff0b
  41ff0f:	jl     0x41fec3
  41ff11:	stos   DWORD PTR es:[edi],eax
  41ff12:	mov    edx,0xa0001814
  41ff17:	loope  0x41fed6
  41ff19:	sub    BYTE PTR [edx+0x54],0x78
  41ff1d:	stc    
  41ff1e:	mov    eax,ds:0xc2b0c66a
  41ff23:	shr    BYTE PTR [eax],1
  41ff25:	call   0xbcf68d9d
  41ff2a:	xor    al,0x8e
  41ff2c:	shl    BYTE PTR [edx-0x3923c8d9],0xc5
  41ff33:	xor    al,0x6c
  41ff35:	mov    eax,0xc10bd75b
  41ff3a:	pop    edi
  41ff3b:	dec    ebx
  41ff3c:	call   FWORD PTR [edx-0xf]
  41ff3f:	fadd   DWORD PTR [esp+esi*1+0x57]
  41ff43:	jmp    0x41ff58
  41ff45:	lods   al,BYTE PTR ds:[esi]
  41ff46:	outs   dx,BYTE PTR ds:[esi]
  41ff47:	xor    BYTE PTR [edx],dh
  41ff49:	out    0x9b,al
  41ff4b:	enter  0xfefb,0x47
  41ff4f:	int3   
  41ff50:	sbb    ch,BYTE PTR [esp+eax*4]
  41ff53:	pop    ss
  41ff54:	sub    eax,0xfff0bc3b
  41ff59:	ret    
  41ff5a:	sbb    eax,0x29bad119
  41ff5f:	push   ds
  41ff60:	mov    bh,BYTE PTR [ebx-0x3e23cd57]
  41ff66:	xchg   BYTE PTR [ebp-0x2f],cl
  41ff69:	and    eax,0x9cc4aff4
  41ff6e:	out    0x7d,al
  41ff70:	add    al,0x3d
  41ff72:	aad    0x29
  41ff74:	cmp    bh,BYTE PTR [edi]
  41ff76:	inc    eax
  41ff77:	and    DWORD PTR [edi],0x1a7fcced
  41ff7d:	lahf   
  41ff7e:	fbld   TBYTE PTR [esi-0x53]
  41ff81:	xor    ebp,edi
  41ff83:	das    
  41ff84:	and    BYTE PTR [ecx-0x17],cl
  41ff87:	imul   esp,esp,0x5945fc9b
  41ff8d:	adc    DWORD PTR [edi-0x1d],ebx
  41ff90:	pop    ebp
  41ff91:	in     al,dx
  41ff92:	icebp  
  41ff93:	test   DWORD PTR [esp+edi*4+0x37],eax
  41ff97:	dec    ecx
  41ff98:	ds xchg esp,eax
  41ff9a:	cli    
  41ff9b:	pop    esp
  41ff9c:	xchg   edx,eax
  41ff9d:	int    0xb7
  41ff9f:	xchg   esp,eax
  41ffa0:	nop
  41ffa1:	jbe    0x41ff8b
  41ffa3:	cmp    ecx,DWORD PTR [edi+0x2e1bcfe9]
  41ffa9:	mov    cl,0xc5
  41ffab:	mov    dh,0xbd
  41ffad:	dec    DWORD PTR [edx+edi*4]
  41ffb0:	add    esp,ecx
  41ffb2:	iret   
  41ffb3:	lea    ecx,ds:[ebx+0x66]
  41ffb7:	imul   edi,DWORD PTR [eax-0x11ae91fa],0xc
  41ffbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbf:	mov    ebp,0x7f35e9a1
  41ffc4:	sub    eax,0xf744e5b5
  41ffc9:	mov    al,ds:0xfb410042
  41ffce:	pop    edi
  41ffcf:	cwde   
  41ffd0:	fwait
  41ffd1:	inc    edi
  41ffd2:	loopne 0x420035
  41ffd4:	push   0xfffffffa
  41ffd6:	mov    bl,0x7a
  41ffd8:	jge    0x420020
  41ffda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffdb:	aas    
  41ffdc:	or     DWORD PTR [edx-0x3217f226],edx
  41ffe2:	sub    dh,BYTE PTR [edx]
  41ffe4:	outs   dx,BYTE PTR ds:[esi]
  41ffe5:	inc    edi
  41ffe6:	push   ds
  41ffe7:	std    
  41ffe8:	scas   eax,DWORD PTR es:[edi]
  41ffe9:	out    dx,eax
  41ffea:	(bad)  
  41ffeb:	xor    BYTE PTR ds:0xf7fb27ac,0x5a
  41fff2:	pop    ebp
  41fff3:	xor    BYTE PTR [eax],0x83
  41fff6:	cdq    
  41fff7:	nop
  41fff8:	sbb    bh,BYTE PTR [edi+ebx*8-0x6f]
  41fffc:	gs ret 0xe50b
  420000:	outs   dx,BYTE PTR ds:[esi]
  420001:	sub    eax,0x728e064b
  420006:	test   ebx,edi
  420008:	adc    ebx,DWORD PTR [ecx+ebp*4]
  42000b:	data16 jae 0x420045
  42000e:	pop    ebx
  42000f:	je     0x41ffd0
  420011:	add    eax,0x9c9cde51
  420016:	inc    eax
  420017:	aas    
  420018:	loopne 0x41ffb1
  42001a:	mov    ds,WORD PTR [edx+0x64316ac4]
  420020:	sub    al,0xb2
  420022:	nop    ebx
  420025:	imul   eax,DWORD PTR [ecx+0x73d8d059],0x5bf01120
  42002f:	addr16 retf 0xef4d
  420033:	fiadd  WORD PTR [ebx-0x4ba1b4b0]
  420039:	cmp    bh,0x9a
  42003c:	sub    DWORD PTR [ebp-0x5d],eax
  42003f:	fs mov edx,0x6576d8a0
  420045:	inc    ebx
  420046:	pop    edx
  420047:	sub    al,0x5f
  420049:	daa    
  42004a:	jno    0x42007e
  42004c:	push   DWORD PTR ds:0x5184874f
  420052:	or     BYTE PTR [ebx+0x73],bh
  420055:	ds out dx,al
  420057:	mov    esp,esi
  420059:	retf   0xb2ce
  42005c:	icebp  
  42005d:	cmp    ah,BYTE PTR [ebp+0x44]
  420060:	mov    dh,0x60
  420062:	fst    QWORD PTR [ebp+0x47]
  420065:	cmc    
  420066:	xor    ebx,DWORD PTR [esp+edx*4]
  420069:	mov    DWORD PTR [eax+eax*2],esi
  42006c:	mov    dl,0xf9
  42006e:	dec    eax
  42006f:	(bad)
  420073:	in     eax,dx
  420074:	xchg   ebp,eax
  420075:	xor    al,0x64
  420077:	mov    eax,ds:0xbd4a80d5
  42007c:	int    0x2f
  42007e:	mov    bl,BYTE PTR [ebp+0x4b231ee1]
  420084:	dec    DWORD PTR [eax-0x70]
  420087:	jns    0x420099
  420089:	test   al,0x42
  42008b:	jg     0x420105
  42008d:	int3   
  42008e:	jp     0x420028
  420090:	and    DWORD PTR [edi+ecx*2],ebp
  420093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420094:	add    cl,BYTE PTR [ebx]
  420096:	or     esi,eax
  420098:	xchg   esp,eax
  420099:	nop
  42009a:	shrd   DWORD PTR [eax-0x4553b0b7],ecx,0x69
  4200a2:	or     al,0x34
  4200a4:	jp     0x4200ac
  4200a6:	cwde   
  4200a7:	call   0x73da:0x2c5b00da
  4200ae:	sbb    eax,0xde4b8ca5
  4200b3:	shl    al,cl
  4200b5:	sahf   
  4200b6:	enter  0x3258,0x81
  4200ba:	push   eax
  4200bb:	pop    eax
  4200bc:	test   BYTE PTR [edi-0x18cc1a96],ch
  4200c2:	or     BYTE PTR [edx],dh
  4200c4:	imul   ebp,DWORD PTR [ecx],0x38
  4200c7:	shl    DWORD PTR [eax+0x7bf20996],cl
  4200cd:	push   ebx
  4200ce:	adc    ecx,DWORD PTR ds:0x7bae6242
  4200d4:	ror    DWORD PTR [ecx-0x4ef4fc00],cl
  4200da:	jg     0x420079
  4200dc:	fild   WORD PTR [ecx+0x60]
  4200df:	popa   
  4200e0:	aad    0xe
  4200e2:	push   edi
  4200e3:	inc    eax
  4200e4:	std    
  4200e5:	aad    0x12
  4200e7:	jl     0x420145
  4200e9:	inc    ebp
  4200ea:	dec    edx
  4200eb:	or     eax,0xd1c88999
  4200f0:	or     ch,BYTE PTR [eax]
  4200f2:	dec    ebp
  4200f3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4200f5:	lea    esi,[eax+0x2d]
  4200f8:	and    eax,edi
  4200fa:	adc    eax,0x360c4a55
  4200ff:	add    BYTE PTR [esi],al
  420101:	out    dx,al
  420102:	aaa    
  420103:	jne    0x4200ec
  420105:	mov    DWORD PTR [edi-0x416ba3d0],edx
  42010b:	push   ebx
  42010c:	mov    cl,0x13
  42010e:	test   BYTE PTR [edi+0xeed13b6],dl
  420114:	inc    esi
  420115:	sbb    BYTE PTR [edx+0x65],ah
  420118:	jbe    0x4200fa
  42011a:	inc    ebx
  42011b:	ins    DWORD PTR es:[edi],dx
  42011c:	inc    esi
  42011d:	pop    ss
  42011e:	out    0xd3,eax
  420120:	cld    
  420121:	mov    dl,0xfa
  420123:	jmp    0x420125
  420125:	stos   DWORD PTR es:[edi],eax
  420126:	cld    
  420127:	jl     0x420104
  420129:	mov    edi,0x7453a736
  42012e:	adc    DWORD PTR [esi-0x13],edi
  420131:	retf   
  420132:	inc    esp
  420133:	mov    bl,0x7b
  420135:	lods   al,BYTE PTR ds:[esi]
  420136:	or     al,0xad
  420138:	mov    dh,0x12
  42013a:	shr    DWORD PTR [ebp+0x56],cl
  42013d:	into   
  42013e:	rol    DWORD PTR ds:0x9e5f1ee,0xaa
  420145:	shr    BYTE PTR [eax+0x5ae6a850],0xb6
  42014c:	aaa    
  42014d:	jg     0x420101
  42014f:	hlt    
  420150:	mov    ebx,DWORD PTR [esi]
  420152:	dec    DWORD PTR [eax-0x5a]
  420155:	out    0xc8,eax
  420157:	jns    0x4200f5
  420159:	xor    DWORD PTR [ebp+0x54],ebx
  42015c:	inc    ebp
  42015d:	test   BYTE PTR [esi],dl
  42015f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420160:	out    0xd8,al
  420162:	push   es
  420163:	inc    edi
  420164:	mov    dh,0xd5
  420166:	imul   ebp,DWORD PTR [ebx+0x373aa3c7],0xb
  42016d:	adc    ah,dl
  42016f:	pop    ds
  420170:	push   edi
  420171:	inc    esi
  420172:	xchg   ebx,eax
  420173:	push   edx
  420174:	iret   
  420175:	jnp    0x4201bb
  420177:	mov    ds:0x81426e84,al
  42017c:	adc    ch,BYTE PTR [ecx+eax*1+0x3d]
  420180:	sti    
  420181:	inc    edi
  420182:	lds    edi,FWORD PTR es:[edx-0x62]
  420186:	or     cl,BYTE PTR [esi+ebp*1]
  420189:	mov    eax,0xb262076
  42018e:	mov    eax,ds:0x15fc74b2
  420193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420194:	dec    ebp
  420195:	dec    ebx
  420196:	mov    ecx,0x64adc520
  42019b:	xor    eax,DWORD PTR [edx-0x76]
  42019e:	js     0x4201b8
  4201a0:	cwde   
  4201a1:	and    al,bl
  4201a3:	rcl    BYTE PTR [edi],cl
  4201a5:	xor    ebp,DWORD PTR [eax+0x51ff618e]
  4201ab:	(bad)  
  4201ac:	push   0xf
  4201ae:	jg     0x420154
  4201b0:	(bad)  
  4201b2:	lea    esp,[esi+0x13f76ca8]
  4201b8:	adc    al,0x44
  4201ba:	pop    ss
  4201bb:	push   esp
  4201bc:	inc    edi
  4201bd:	(bad)  
  4201be:	jb     0x420166
  4201c0:	sbb    al,0xcb
  4201c2:	inc    esi
  4201c3:	mov    dh,0xd3
  4201c5:	and    eax,0x4bb19da2
  4201ca:	shl    BYTE PTR [eax],0x7
  4201cd:	(bad)  
  4201ce:	in     eax,dx
  4201cf:	nop
  4201d0:	pop    esp
  4201d1:	aas    
  4201d2:	outs   dx,BYTE PTR ds:[esi]
  4201d3:	xor    al,0x65
  4201d5:	jg     0x4201e0
  4201d7:	push   0x2a
  4201d9:	jp     0x42018c
  4201db:	ds pop eax
  4201dd:	mov    cs,ebx
  4201df:	jle    0x4201fd
  4201e1:	outs   dx,DWORD PTR ds:[esi]
  4201e2:	scas   eax,DWORD PTR es:[edi]
  4201e3:	and    DWORD PTR [edi],edi
  4201e5:	mov    eax,0xe8d72ca0
  4201ea:	arpl   WORD PTR [eax-0x509c34b3],bp
  4201f0:	mov    BYTE PTR [edx+0x51f1ee3d],al
  4201f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201f7:	or     eax,0x8d0aa9ac
  4201fc:	xor    eax,0xa3a0b6e4
  420201:	inc    esp
  420202:	xor    eax,0xff3d32a2
  420207:	imul   eax,DWORD PTR [ecx-0x76],0x27
  42020b:	out    0x84,al
  42020d:	jae    0x42020d
  42020f:	fmul   QWORD PTR [esi]
  420211:	jb     0x420248
  420213:	push   ebx
  420214:	and    DWORD PTR gs:[edx-0x2a],0xa0325c2a
  42021c:	jb     0x420290
  42021e:	retf   
  42021f:	call   0xf2b2:0x238bfea3
  420226:	mov    cl,0x54
  420228:	or     al,0xd0
  42022a:	pop    dx
  42022c:	mov    al,ds:0xce93353c
  420231:	test   al,0x28
  420233:	ja     0x420287
  420235:	in     eax,dx
  420236:	lods   al,BYTE PTR ds:[esi]
  420237:	ins    BYTE PTR es:[edi],dx
  420238:	pusha  
  420239:	into   
  42023a:	rol    ah,cl
  42023c:	cld    
  42023d:	outs   dx,BYTE PTR ds:[esi]
  42023e:	(bad)  
  42023f:	pop    ebx
  420240:	or     eax,0x5d5bdae0
  420245:	adc    bl,BYTE PTR [ebx-0x29]
  420248:	xabort 0x3f
  42024b:	aas    
  42024c:	push   ecx
  42024d:	add    DWORD PTR [eax+0x26],ebp
  420250:	sub    dh,dl
  420252:	mov    ah,0xec
  420254:	lods   al,BYTE PTR ds:[esi]
  420255:	mov    esi,0x5757d1a2
  42025a:	daa    
  42025b:	sbb    ebp,DWORD PTR [edx]
  42025d:	push   esp
  42025e:	xchg   esp,eax
  42025f:	int    0x72
  420261:	sbb    esi,DWORD PTR [edi+edi*1+0x2d]
  420265:	stos   BYTE PTR es:[edi],al
  420266:	in     al,0xb5
  420268:	gs rcl ah,0x15
  42026c:	mov    ?,WORD PTR ds:0x27aa7eaa
  420272:	inc    eax
  420273:	in     al,dx
  420274:	jns    0x420289
  420276:	pop    edx
  420277:	sub    dh,dh
  420279:	mov    ds:0xd79fa34b,eax
  42027e:	imul   esi,DWORD PTR [esi-0xa8fdb7b],0x6ede06b4
  420288:	fmul   st(5),st
  42028a:	sub    eax,0x72553961
  42028f:	jae    0x420292
  420291:	cld    
  420292:	mov    edx,0x40acba3c
  420297:	dec    edi
  420298:	rcl    BYTE PTR [eax],1
  42029a:	retf   0x7c6f
  42029d:	je     0x4202c2
  42029f:	dec    ebp
  4202a0:	rcr    BYTE PTR [edx],0x5d
  4202a3:	cmc    
  4202a4:	outs   dx,DWORD PTR ds:[esi]
  4202a5:	ins    DWORD PTR es:[edi],dx
  4202a6:	mov    ah,0x94
  4202a8:	int3   
  4202a9:	cwde   
  4202aa:	loopne 0x420263
  4202ac:	adc    eax,0x94664f84
  4202b1:	or     bl,ch
  4202b3:	xchg   ebp,eax
  4202b4:	not    bh
  4202b6:	cmp    dh,0xc8
  4202b9:	or     BYTE PTR [eax+0x3394c24c],al
  4202bf:	sub    BYTE PTR [edi-0x5b],0xb3
  4202c3:	in     eax,dx
  4202c4:	outs   dx,BYTE PTR ds:[esi]
  4202c5:	sahf   
  4202c6:	mov    dl,0x46
  4202c8:	ret    
  4202c9:	and    BYTE PTR fs:[esi-0x30],dh
  4202cd:	rsqrtps xmm7,XMMWORD PTR [edi+0x5cb7beb6]
  4202d4:	mov    ah,0x1b
  4202d6:	xor    eax,0xf16fbf5e
  4202dc:	sub    bl,bl
  4202de:	(bad)  
  4202df:	push   ebx
  4202e0:	sbb    eax,0x1afbe701
  4202e5:	cmc    
  4202e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e7:	pop    edi
  4202e8:	mov    eax,0x40baa17a
  4202ed:	cwde   
  4202ee:	xchg   ebx,eax
  4202ef:	mov    WORD PTR [ebp-0x6df0a4db],?
  4202f5:	cmp    esi,DWORD PTR [eax+0x2d]
  4202f8:	or     al,0x25
  4202fa:	shl    DWORD PTR [ebx],1
  4202fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202fd:	mov    WORD PTR [esi+0x5a],ss
  420300:	bound  eax,QWORD PTR [edx+0x3c]
  420303:	jl     0x420346
  420305:	xor    DWORD PTR [edi+0x3b],0x59
  420309:	adc    eax,0x671353a
  42030e:	addr16 jno 0x420383
  420311:	pop    ebp
  420312:	fcomi  st,st(3)
  420314:	pop    ss
  420315:	add    esp,DWORD PTR [ebp-0x1c802299]
  42031b:	(bad)  
  42031c:	adc    DWORD PTR [ebx-0x1670c8a4],esp
  420322:	jecxz  0x42032d
  420324:	and    ch,dh
  420326:	(bad)  
  420327:	addr16 leave 
  420329:	cmp    BYTE PTR [esi],dl
  42032b:	icebp  
  42032c:	ror    ebx,1
  42032e:	pusha  
  42032f:	gs or  eax,0x14006ae4
  420335:	push   es
  420336:	inc    ebp
  420337:	rcr    BYTE PTR [esi],0xa
  42033a:	jne    0x420378
  42033c:	in     al,dx
  42033d:	lahf   
  42033e:	imul   esp
  420340:	mov    edi,0x52802660
  420345:	outs   dx,DWORD PTR ds:[esi]
  420346:	cdq    
  420347:	push   ebx
  420348:	sub    eax,0x9e7cc966
  42034d:	cmp    al,0xb0
  42034f:	dec    edx
  420350:	not    DWORD PTR [edx-0x25]
  420353:	push   ecx
  420354:	sbb    BYTE PTR [ebx-0x42],bl
  420357:	lahf   
  420358:	adc    eax,0x11c41cc1
  42035d:	(bad)
  420362:	(bad)  
  420363:	ds jae 0x42033d
  420366:	xlat   BYTE PTR ds:[ebx]
  420367:	jmp    0x4203a8
  420369:	aaa    
  42036a:	nop
  42036b:	mov    dl,0x8e
  42036d:	push   cs
  42036e:	cwde   
  42036f:	push   ds
  420370:	stc    
  420371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420372:	out    dx,al
  420373:	in     al,0x29
  420375:	daa    
  420376:	ret    
  420377:	mov    al,ds:0x1b7f3a94
  42037c:	inc    ebp
  42037d:	dec    ecx
  42037e:	dec    edi
  42037f:	jmp    0xfc4f:0xe320a84c
  420386:	les    esp,FWORD PTR ds:0xc6cf4cf2
  42038c:	add    DWORD PTR [ebx+0x389c6ea5],ebx
  420392:	push   ds
  420393:	fstp   DWORD PTR [ecx+eiz*1]
  420396:	(bad)  
  420397:	(bad)
  42039b:	pop    esi
  42039c:	xlat   BYTE PTR ds:[ebx]
  42039d:	mov    WORD PTR [edx-0x6d],es
  4203a0:	in     eax,dx
  4203a1:	jmp    0xe96b:0x6dac1a8e
  4203a8:	cmc    
  4203a9:	or     eax,0x45d7c2ba
  4203ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203af:	scas   al,BYTE PTR es:[edi]
  4203b0:	loop   0x420394
  4203b2:	loopne 0x420358
  4203b4:	outs   dx,DWORD PTR ds:[esi]
  4203b5:	mov    al,0x9a
  4203b7:	xor    ah,BYTE PTR [esi]
  4203b9:	mov    eax,0x3e21edff
  4203be:	ficom  WORD PTR [ecx+0x34a6d322]
  4203c4:	retf   
  4203c5:	pop    esp
  4203c6:	(bad)  
  4203c7:	pop    ecx
  4203c8:	mov    eax,0x9f0f96c
  4203cd:	pop    edi
  4203ce:	sti    
  4203cf:	cli    
  4203d0:	(bad)  
  4203d1:	mov    al,0x1
  4203d3:	dec    esp
  4203d4:	sar    DWORD PTR [edi+0x22],1
  4203d7:	sbb    BYTE PTR ds:0x1cbfcfd5,ah
  4203dd:	(bad)  
  4203de:	fldcw  WORD PTR [esi]
  4203e0:	and    BYTE PTR [esi],al
  4203e2:	and    BYTE PTR ss:[ebx],0xcb
  4203e6:	add    edi,DWORD PTR [ebx]
  4203e8:	adc    al,0xfd
  4203ea:	xchg   ebp,eax
  4203eb:	scas   eax,DWORD PTR es:[edi]
  4203ec:	and    BYTE PTR [eax+0x6917f8b6],ch
  4203f2:	lea    ecx,[ebx-0x1]
  4203f5:	push   ds
  4203f6:	and    al,cl
  4203f8:	push   ebp
  4203f9:	xor    BYTE PTR [ecx+0x69f54558],dl
  4203ff:	mov    ecx,0x279c88f6
  420404:	addr16 pop ss
  420406:	add    al,0x3b
  420409:	push   edi
  42040a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42040b:	mov    ebp,0xa6d71bc4
  420410:	int3   
  420411:	aam    0xfd
  420413:	arpl   WORD PTR [edx],cx
  420415:	test   eax,0x291476c4
  42041a:	mov    cl,0x21
  42041c:	adc    edx,DWORD PTR [ecx]
  42041e:	sub    ebp,DWORD PTR [ecx]
  420420:	repz mov al,ds:0x23acae6c
  420426:	int    0xbb
  420428:	daa    
  420429:	dec    edi
  42042a:	and    al,0xff
  42042c:	iret   
  42042d:	call   0x32ea:0xcb4b207f
  420434:	jmp    0xe900:0x5e3a62a
  42043b:	jns    0x42041b
  42043d:	mov    ds:0x6c20f7da,al
  420442:	inc    eax
  420443:	(bad)  
  420444:	call   0xe1309a4b
  420449:	cli    
  42044a:	push   ebx
  42044b:	add    eax,0xd0ad73d9
  420450:	inc    esp
  420451:	in     eax,dx
  420452:	sahf   
  420453:	adc    DWORD PTR [eax-0x245aa16e],esi
  420459:	sub    esp,DWORD PTR ds:0x4dada2d4
  42045f:	dec    esi
  420460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420461:	xor    eax,0x55f21cff
  420466:	cmp    eax,0xa929f1fc
  42046b:	inc    ebx
  42046c:	mov    edx,0x809e9cf9
  420471:	xor    eax,0xdab773d4
  420476:	shl    DWORD PTR [eax+0x4668785e],cl
  42047c:	dec    BYTE PTR [esp+ecx*1-0x4b60d43]
  420483:	sbb    bl,BYTE PTR [ebx-0x425e87ad]
  420489:	mov    ebp,0x7af24232
  42048e:	stos   BYTE PTR es:[edi],al
  42048f:	cwde   
  420490:	je     0x4204b8
  420492:	jmp    FWORD PTR [edx]
  420494:	pop    ss
  420495:	mov    al,ds:0x3721111b
  42049a:	shl    BYTE PTR [edi-0x6f9850f0],0x8e
  4204a1:	sbb    esi,DWORD PTR [edx]
  4204a3:	mov    BYTE PTR [ecx+esi*1],cl
  4204a6:	add    al,0xc6
  4204a8:	mov    ds:0x6b0e0740,eax
  4204ad:	or     al,0x6c
  4204af:	les    ebp,FWORD PTR [esp+esi*1+0x5d]
  4204b3:	inc    esi
  4204b4:	nop
  4204b5:	and    DWORD PTR [edx+0x7620bd9],edx
  4204bb:	test   al,0x90
  4204bd:	aad    0xc8
  4204bf:	popa   
  4204c0:	lock cmp esi,DWORD PTR [ebp-0x58]
  4204c4:	idiv   dl
  4204c6:	mov    WORD PTR [edx],ds
  4204c8:	ins    BYTE PTR es:[edi],dx
  4204c9:	das    
  4204ca:	lods   al,BYTE PTR ds:[esi]
  4204cb:	pop    esp
  4204cc:	mov    al,0x98
  4204ce:	jno    0x420470
  4204d0:	cmp    eax,0xb8c69d00
  4204d5:	in     al,0xbd
  4204d7:	xchg   ecx,eax
  4204d8:	fidiv  DWORD PTR [esi]
  4204da:	jbe    0x4204cf
  4204dc:	icebp  
  4204dd:	adc    dl,0xae
  4204e0:	in     al,dx
  4204e1:	imul   edx,DWORD PTR [edi],0x40deb4cb
  4204e7:	shl    DWORD PTR [ecx],cl
  4204e9:	in     al,0x53
  4204eb:	sub    ecx,ebp
  4204ed:	jecxz  0x420489
  4204ef:	enter  0xe608,0xde
  4204f3:	inc    ebx
  4204f4:	pop    ss
  4204f5:	into   
  4204f6:	daa    
  4204f7:	xchg   ebp,eax
  4204f8:	aad    0x98
  4204fa:	enter  0xf632,0x29
  4204fe:	lahf   
  4204ff:	sbb    edi,DWORD PTR [ebp-0x36]
  420502:	dec    esi
  420503:	jbe    0x4204b4
  420505:	push   ecx
  420506:	xor    bh,BYTE PTR [ebx]
  420508:	iret   
  420509:	fucomip st,st(5)
  42050b:	call   edx
  42050d:	jl     0x420524
  42050f:	and    DWORD PTR [edx],ebp
  420511:	ds mov esi,0x181e63e2
  420517:	and    ecx,esp
  420519:	ficomp DWORD PTR ds:0x934b056c
  42051f:	mov    es:0xcbc91124,eax
  420525:	xlat   BYTE PTR ds:[ebx]
  420526:	cmp    ecx,DWORD PTR [eax+0x71]
  420529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42052a:	cmc    
  42052b:	imul   ebx,DWORD PTR [ebp-0x6436f635],0xf3957af7
  420535:	cli    
  420536:	mov    ebx,0xc165e13b
  42053b:	dec    esi
  42053c:	mov    BYTE PTR [esi+0x7a],0xa1
  420540:	paddq  mm2,QWORD PTR [edi]
  420543:	push   ecx
  420544:	xor    BYTE PTR [ebp-0x4111391],dl
  42054a:	mov    ebp,0x66fa1c2e
  42054f:	push   ebp
  420550:	adc    ecx,DWORD PTR [edx+0x2704ab2b]
  420556:	(bad)  
  420558:	mov    edi,0xd7d4d10b
  42055d:	js     0x4205b4
  42055f:	lock loope 0x42057b
  420562:	sbb    BYTE PTR [ecx+eiz*4],ah
  420565:	xchg   edi,eax
  420566:	mov    al,ds:0x8a7bb41d
  42056b:	sti    
  42056c:	pop    ds
  42056d:	pop    ebp
  42056e:	loope  0x4205c0
  420570:	adc    al,0xec
  420572:	jle    0x4205f0
  420574:	ins    DWORD PTR es:[edi],dx
  420575:	imul   esp,DWORD PTR [esi+ecx*8-0x7b],0xe7df4deb
  42057d:	div    DWORD PTR [ebp+0x4bbc8914]
  420583:	or     ch,BYTE PTR [ebx-0x67]
  420586:	aas    
  420587:	sahf   
  420588:	mov    bl,0x46
  42058a:	adc    esp,esp
  42058c:	sbb    ch,BYTE PTR [ecx-0x16]
  42058f:	cmp    BYTE PTR [edx-0x5abc4123],al
  420595:	cmp    al,0x1
  420597:	ror    bh,1
  420599:	mov    ch,0x6d
  42059b:	xor    bh,0xbc
  42059e:	(bad)  [ebp+0x9b33feb]
  4205a4:	mov    eax,0xda86668e
  4205a9:	push   ebp
  4205aa:	retf   0xbed6
  4205ad:	loop   0x42058c
  4205af:	jae    0x4205db
  4205b1:	outs   dx,DWORD PTR ds:[esi]
  4205b2:	inc    ecx
  4205b3:	xchg   edi,eax
  4205b4:	mov    WORD PTR [eax],es
  4205b6:	(bad)  [esi+esi*1-0x42]
  4205ba:	fstp   DWORD PTR cs:[ecx]
  4205bd:	jb     0x4205a9
  4205bf:	adc    DWORD PTR ds:0x9962dd2e,esi
  4205c5:	loopne 0x4205cd
  4205c7:	sahf   
  4205c8:	clc    
  4205c9:	addr16 jbe 0x42057e
  4205cc:	out    dx,al
  4205cd:	inc    esp
  4205ce:	into   
  4205cf:	test   al,0x3b
  4205d1:	imul   esi,DWORD PTR [ecx+0x434adf71],0xffffffaa
  4205d8:	cmp    al,0x12
  4205da:	out    0x89,al
  4205dc:	mov    edx,0x8cd5f74
  4205e1:	in     al,0x42
  4205e3:	(bad)  
  4205e4:	sar    dh,cl
  4205e6:	imul   ebx,eax,0xffffffa5
  4205e9:	mov    ds:0x8575a68a,eax
  4205ee:	(bad)  
  4205ef:	aam    0xf8
  4205f1:	xlat   BYTE PTR ds:[ebx]
  4205f2:	pop    edx
  4205f3:	icebp  
  4205f4:	stos   BYTE PTR es:[edi],al
  4205f5:	mov    dh,0x77
  4205f7:	jnp    0x420591
  4205f9:	pop    edx
  4205fa:	into   
  4205fb:	jmp    0x30e7:0xd8dbde66
  420602:	bound  esp,QWORD PTR [esi-0x7b203ecf]
  420608:	push   ecx
  420609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060a:	and    dh,BYTE PTR [ebx+0x746605a0]
  420610:	test   BYTE PTR [eax],0x39
  420613:	call   0x4c23:0xbb3e9a0f
  42061a:	test   DWORD PTR [esi-0x5fc1037d],edx
  420620:	push   ds
  420621:	push   edi
  420622:	scas   eax,DWORD PTR es:[edi]
  420623:	pop    edx
  420624:	icebp  
  420625:	push   es
  420626:	jge    0x4205c4
  420628:	mov    DWORD PTR [ecx+0x7952fca6],esi
  42062e:	outs   dx,BYTE PTR ds:[esi]
  42062f:	dec    ebx
  420630:	not    BYTE PTR [eax+0x6855f65e]
  420636:	push   ebp
  420637:	sub    al,0xd5
  420639:	mov    esi,0xab20b246
  42063e:	rcr    ch,cl
  420640:	fs xchg ebp,eax
  420642:	outs   dx,DWORD PTR ds:[esi]
  420643:	mov    dl,0x46
  420645:	sub    edx,esi
  420647:	cmp    al,bl
  420649:	xor    ebx,DWORD PTR [ebx-0x42]
  42064c:	mov    esi,fs
  42064e:	in     eax,dx
  42064f:	mov    cl,0x7a
  420651:	iret   
  420652:	addr16 jbe 0x4205f3
  420655:	lea    ecx,[eax]
  420657:	test   DWORD PTR [ecx+eax*1+0x4897f041],0x5f5489bd
  420662:	(bad)  
  420663:	cld    
  420664:	mov    cl,0x63
  420666:	pop    edi
  420667:	lods   al,BYTE PTR ds:[esi]
  420668:	test   BYTE PTR [ebx],bl
  42066a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42066b:	cli    
  42066c:	stc    
  42066d:	xor    ch,BYTE PTR [esi]
  42066f:	dec    ecx
  420670:	jge    0x4206dd
  420672:	fwait
  420673:	out    0x5b,al
  420675:	popa   
  420676:	call   0x7941:0x5ab9aeb2
  42067d:	(bad)  
  42067e:	fdivr  DWORD PTR [edi+0x572c5aed]
  420684:	mov    BYTE PTR [ecx-0x53],0xf5
  420688:	push   esi
  420689:	mov    eax,ds:0xe3bbd9d5
  42068e:	inc    esi
  42068f:	out    dx,al
  420690:	ret    0x4a9
  420693:	push   eax
  420694:	jb     0x4206b9
  420696:	out    dx,eax
  420697:	dec    ebx
  420698:	mov    dh,0x8e
  42069a:	mov    bh,0x9a
  42069c:	sub    BYTE PTR [edi+0x6c],cl
  42069f:	ret    
  4206a0:	retf   
  4206a1:	test   eax,0x8588dcc4
  4206a6:	loop   0x420716
  4206a8:	cmp    eax,0x848f61d7
  4206ae:	pop    esp
  4206af:	movlhps xmm7,xmm4
  4206b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b3:	loope  0x4206b9
  4206b5:	les    ecx,FWORD PTR [eax+eax*4-0x49]
  4206b9:	jle    0x420712
  4206bb:	mov    cl,0xda
  4206bd:	xor    al,BYTE PTR [ebx]
  4206bf:	shr    BYTE PTR [ebx-0x4d],cl
  4206c2:	psubb  mm6,QWORD PTR [ebx-0x7f48a21c]
  4206c9:	xchg   ecx,eax
  4206ca:	add    esi,DWORD PTR [ebp-0xa]
  4206cd:	sub    eax,0x634dd73a
  4206d2:	es jno 0x420728
  4206d5:	add    ch,BYTE PTR [esi]
  4206d7:	sar    BYTE PTR [eax],cl
  4206d9:	dec    esp
  4206da:	adc    DWORD PTR [edx+0x3c],esi
  4206dd:	mov    edi,0xb119d2ae
  4206e2:	sahf   
  4206e3:	and    DWORD PTR ds:0xaf00e268,0x452aab35
  4206ed:	push   edi
  4206ee:	push   esi
  4206ef:	cmp    al,0x9f
  4206f1:	imul   ebx,DWORD PTR [edx],0x6f
  4206f4:	out    0xd1,al
  4206f6:	fcomp  QWORD PTR [ecx]
  4206f8:	inc    edx
  4206f9:	loop   0x4206fc
  4206fb:	shl    DWORD PTR [eax+ebp*2],cl
  4206fe:	(bad)  
  4206ff:	test   DWORD PTR [ebx],ebx
  420701:	cmp    bl,BYTE PTR [eax-0x645e865f]
  420707:	enter  0x50,0x66
  42070b:	sbb    eax,0x1ff72cc6
  420710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420711:	inc    esi
  420712:	and    DWORD PTR [edi+0x429bb7c],eax
  420718:	or     DWORD PTR [ecx],eax
  42071a:	aam    0x5
  42071c:	daa    
  42071d:	mov    ch,0x8f
  42071f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420720:	mov    dl,0x7c
  420722:	pslld  mm4,QWORD PTR [edx]
  420725:	and    al,0x48
  420727:	xchg   ebp,edi
  420729:	int    0x47
  42072b:	cdq    
  42072c:	retf   0x1021
  42072f:	sbb    esp,DWORD PTR [edx]
  420731:	test   BYTE PTR [ebx],0x82
  420734:	sbb    al,cl
  420736:	push   es
  420737:	cld    
  420738:	or     BYTE PTR [edx-0x5456e163],al
  42073e:	jl     0x420756
  420740:	pop    ss
  420741:	in     eax,dx
  420742:	int3   
  420743:	repz sbb BYTE PTR [ebp-0x16],dl
  420747:	xor    ah,ch
  420749:	daa    
  42074a:	cli    
  42074b:	jb     0x42074f
  42074d:	cmp    esp,DWORD PTR [esi+0x0]
  420750:	inc    ebx
  420751:	inc    ebp
  420752:	mov    ebp,0xf440e435
  420757:	xor    eax,0x67f36c31
  42075c:	mov    ecx,0xc86f5689
  420761:	fwait
  420762:	paddusw mm3,mm6
  420765:	test   al,0x7f
  420767:	or     eax,DWORD PTR [ebx+0x3eafef1c]
  42076d:	mov    ah,BYTE PTR [edi]
  42076f:	or     DWORD PTR [edx+eax*2+0x51daa6fc],edi
  420776:	aaa    
  420777:	mov    edx,0xb5f64f1f
  42077c:	scas   al,BYTE PTR es:[edi]
  42077d:	jo     0x4207e5
  42077f:	push   edi
  420780:	push   ecx
  420781:	sbb    al,0xad
  420783:	data16 mov bl,0x6e
  420786:	and    BYTE PTR [esi+0x43faa136],bh
  42078c:	inc    sp
  42078e:	fild   WORD PTR [esi+0x3dcad09e]
  420794:	fnstcw WORD PTR [ebp+edx*2-0x9adb690]
  42079b:	lods   eax,DWORD PTR ds:[esi]
  42079c:	frstor [edx+ecx*8-0x30455170]
  4207a3:	mov    bh,BYTE PTR [ecx+ecx*2+0x17]
  4207a7:	inc    ecx
  4207a8:	daa    
  4207a9:	pop    edi
  4207aa:	pop    esi
  4207ac:	mov    dh,0xb4
  4207ae:	test   BYTE PTR [eax+ebp*4-0x23fbdf5c],bl
  4207b5:	inc    ebp
  4207b6:	and    DWORD PTR [ebx+0x61b5e4ee],esi
  4207bc:	add    ebp,edi
  4207be:	fdivr  QWORD PTR [edi+0x75]
  4207c1:	push   ecx
  4207c2:	push   esi
  4207c3:	mov    ah,0x4
  4207c5:	(bad)  
  4207c6:	(bad)  
  4207c7:	call   0x26428a4c
  4207cc:	fisttp DWORD PTR [eax-0x6309e554]
  4207d2:	sbb    DWORD PTR [ebp-0xc],esi
  4207d5:	jge    0x4207c9
  4207d7:	jmp    0x4207c9
  4207d9:	shr    DWORD PTR [edx-0x41],1
  4207dc:	out    dx,al
  4207dd:	loope  0x42079e
  4207df:	push   edx
  4207e0:	dec    esp
  4207e1:	add    DWORD PTR [eax+0x27321450],ecx
  4207e7:	pusha  
  4207e8:	iret   
  4207e9:	ss xchg esp,eax
  4207eb:	inc    ebx
  4207ec:	mov    esi,0xcfab8110
  4207f1:	adc    esi,DWORD PTR ds:0x69314ae4
  4207f7:	sbb    dl,BYTE PTR [ebx]
  4207f9:	xor    bh,BYTE PTR [esi-0x26]
  4207fc:	lods   al,BYTE PTR ds:[esi]
  4207fd:	xor    DWORD PTR [edi+eax*8],0xff77b128
  420804:	inc    esi
  420805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420806:	test   al,0xdd
  420808:	or     eax,0x29c59276
  42080d:	gs (bad) 
  42080f:	inc    ebx
  420810:	jb     0x420817
  420812:	adc    DWORD PTR [esi-0x603ec33f],esi
  420818:	inc    ecx
  420819:	cmc    
  42081a:	test   DWORD PTR [esi+0x8526387],esi
  420820:	jno    0x42088a
  420822:	push   ds
  420823:	jbe    0x42083c
  420825:	(bad)  
  420826:	xor    eax,0x4570633e
  42082b:	fs jge 0x42089f
  42082e:	mov    ch,0x3b
  420830:	and    al,0x4c
  420832:	nop
  420833:	dec    ecx
  420834:	dec    ecx
  420835:	jno    0xed0cd60c
  42083b:	js     0x420878
  42083d:	bound  eax,QWORD PTR [esi]
  42083f:	or     BYTE PTR ds:0xa39100b7,ah
  420845:	xchg   BYTE PTR [edx],ch
  420847:	mov    cl,BYTE PTR [ecx-0x59e44930]
  42084d:	mov    ebp,0x78863bd5
  420852:	mov    eax,ds:0xa3ff101c
  420857:	push   0x47
  420859:	shl    BYTE PTR ds:0x11b2a08f,1
  42085f:	dec    esp
  420860:	jns    0x4208c0
  420862:	mov    ds:0x5766fae2,eax
  420867:	addr16 or dl,dl
  42086a:	inc    edi
  42086b:	call   0xf87bf1ed
  420870:	mov    ecx,0x28da3b0f
  420875:	inc    ecx
  420876:	pop    eax
  420877:	call   0x8474:0xa6a044c5
  42087e:	(bad)  
  420880:	and    eax,ecx
  420882:	mov    ds:0x61b1b208,eax
  420887:	int    0x56
  420889:	or     BYTE PTR [eax-0x55],0xe6
  42088d:	adc    eax,0x33455c49
  420892:	mov    dl,0xb0
  420894:	mov    ch,0x9f
  420896:	mov    ebx,0x66e81a1e
  42089b:	pop    es
  42089c:	xlat   BYTE PTR ds:[ebx]
  42089d:	popa   
  42089e:	dec    esp
  42089f:	addr16 inc edi
  4208a1:	xchg   edx,eax
  4208a2:	xchg   esp,eax
  4208a3:	test   al,0x44
  4208a5:	jae    0x4208f1
  4208a7:	add    DWORD PTR ds:[ecx+0x5a7cc4ec],ecx
  4208ae:	out    dx,al
  4208af:	test   DWORD PTR [eax+0x2395ad47],esp
  4208b5:	sbb    ch,BYTE PTR cs:[ecx+0x2bca9852]
  4208bc:	ja     0x420887
  4208be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208bf:	fcom   DWORD PTR [ebp+0x2]
  4208c2:	nop
  4208c3:	ficomp DWORD PTR [ebp-0xd]
  4208c6:	pop    ss
  4208c7:	inc    eax
  4208c8:	push   0x363ac90a
  4208cd:	out    0x4d,al
  4208cf:	retf   0xc9d6
  4208d2:	shr    DWORD PTR [ebp+0x548909cb],1
  4208d8:	sbb    eax,DWORD PTR [edi]
  4208da:	xor    dl,BYTE PTR [eax]
  4208dc:	push   es
  4208dd:	mov    esi,0xb22984a2
  4208e2:	jmp    0xc536:0xaf8a1681
  4208e9:	dec    esi
  4208ea:	sbb    al,0xa4
  4208ec:	pop    ecx
  4208ed:	loope  0x420950
  4208ef:	test   al,0xbd
  4208f1:	jmp    0xde87:0x95b63da3
  4208f8:	xchg   esi,eax
  4208f9:	int3   
  4208fa:	inc    edi
  4208fb:	dec    edi
  4208fc:	sub    eax,0xaef14bc7
  420901:	mov    edi,0x9266d388
  420906:	add    al,0xf
  420908:	aad    0xc9
  42090a:	adc    DWORD PTR [ecx+0x24eeda40],ecx
  420910:	(bad)  
  420912:	jecxz  0x42095a
  420914:	lds    esp,FWORD PTR [eax+edi*2+0x4e01f906]
  42091b:	xchg   ebp,eax
  42091c:	outs   dx,DWORD PTR ds:[esi]
  42091d:	loopne 0x4208e4
  42091f:	lods   al,BYTE PTR ds:[esi]
  420920:	push   edi
  420921:	cli    
  420922:	adc    edi,DWORD PTR [edx+0x70ac75c7]
  420928:	in     eax,0x61
  42092a:	push   edi
  42092b:	into   
  42092c:	fdivr  DWORD PTR [ebx]
  42092e:	push   edx
  42092f:	push   edx
  420930:	xor    al,0x8
  420932:	pushf  
  420933:	fnstcw WORD PTR [eax-0x3f78cde]
  420939:	dec    ebp
  42093a:	test   DWORD PTR [edi+0x6c1bdc91],0x7302a08f
  420944:	jg     0x4209b8
  420946:	gs out 0x1c,eax
  420949:	add    dl,BYTE PTR [ecx]
  42094b:	bound  edx,QWORD PTR [esi+ebx*1-0x3e8d2533]
  420952:	cpuid  
  420954:	cld    
  420955:	stos   DWORD PTR es:[edi],eax
  420956:	adc    edx,DWORD PTR [eax+0x4550770e]
  42095c:	nop
  42095d:	mov    bh,0x7c
  42095f:	cld    
  420960:	rol    DWORD PTR [ebp+0x3787e3b3],cl
  420966:	cs sub eax,0x61e6f97d
  42096c:	and    al,0xe3
  42096e:	ret    0xa009
  420971:	mov    ds:0xbba3349c,al
  420976:	shr    BYTE PTR [ebp-0x5c],1
  420979:	inc    ebp
  42097a:	cmp    eax,0x1b98c1d2
  42097f:	and    DWORD PTR ds:0x4d58604d,ebx
  420985:	mov    ch,0xd0
  420987:	out    0x4,al
  420989:	sahf   
  42098a:	fdiv   QWORD PTR [ebx-0x3e]
  42098d:	nop
  42098e:	test   BYTE PTR [edi],ch
  420990:	add    BYTE PTR gs:[bp+si],al
  420994:	jmp    0x420970
  420996:	mov    esp,ecx
  420998:	aam    0xff
  42099a:	add    BYTE PTR cs:[ebx-0x46c47c7c],bh
  4209a1:	scas   al,BYTE PTR es:[edi]
  4209a2:	aaa    
  4209a3:	push   es
  4209a4:	cmc    
  4209a5:	and    eax,0x6b9c8a81
  4209aa:	out    0xa8,eax
  4209ac:	call   0x370f9ae
  4209b1:	push   0x7
  4209b3:	push   0x12
  4209b5:	stos   BYTE PTR es:[edi],al
  4209b6:	push   cs
  4209b7:	in     al,dx
  4209b8:	fmul   QWORD PTR [edi-0x61]
  4209bb:	scas   al,BYTE PTR es:[edi]
  4209bc:	add    BYTE PTR [esi],dl
  4209be:	mov    edi,0xe0c45bbc
  4209c3:	mov    dh,0x3d
  4209c5:	adc    eax,0x350b54e4
  4209ca:	or     ecx,DWORD PTR [esi-0x7794a666]
  4209d0:	or     eax,0x89b4ada8
  4209d5:	daa    
  4209d6:	pop    edx
  4209d7:	xchg   ebx,eax
  4209d8:	or     al,0xc8
  4209da:	jne    0x4209a8
  4209dc:	xor    eax,0xe96b4205
  4209e1:	cmp    cl,BYTE PTR [esi-0x3]
  4209e4:	mov    ds:0x551f7b15,eax
  4209e9:	push   eax
  4209ea:	fsubr  QWORD PTR [ecx+0x6b]
  4209ed:	bsr    edx,DWORD PTR [ecx-0x37591316]
  4209f4:	pop    ss
  4209f5:	std    
  4209f6:	mov    cl,0x73
  4209f8:	and    BYTE PTR [ecx-0x7f88cf08],al
  4209fe:	ret    0xcf33
  420a01:	iret   
  420a02:	fcom   QWORD PTR [esp+ecx*2+0x278191ba]
  420a09:	jns    0x420a6f
  420a0b:	adc    DWORD PTR [edx],eax
  420a0d:	dec    edx
  420a0e:	push   ds
  420a0f:	ror    BYTE PTR [edi+0x4c],cl
  420a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a13:	lods   eax,DWORD PTR ds:[esi]
  420a14:	dec    esp
  420a15:	mov    eax,0x9716cb90
  420a1a:	popf   
  420a1b:	outs   dx,BYTE PTR ds:[esi]
  420a1c:	inc    esi
  420a1d:	mov    al,ds:0x6a972db9
  420a22:	jmp    0x6ed590d8
  420a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a28:	bound  edi,QWORD PTR [esi]
  420a2a:	xchg   esi,eax
  420a2b:	scas   al,BYTE PTR es:[edi]
  420a2c:	xchg   DWORD PTR [edi],edx
  420a2e:	call   0x25a71083
  420a33:	xchg   ebx,eax
  420a34:	add    al,0x22
  420a36:	xchg   BYTE PTR [ebp+0x46],bl
  420a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a3a:	inc    ebx
  420a3b:	outs   dx,BYTE PTR ds:[esi]
  420a3c:	xor    ch,BYTE PTR [esi-0x355919c2]
  420a42:	repnz push 0xfffffff1
  420a45:	sbb    dl,ah
  420a47:	pop    esp
  420a48:	push   esp
  420a49:	aad    0xe8
  420a4b:	rol    BYTE PTR [ecx+0x0],cl
  420a4e:	sbb    eax,0x94593434
  420a53:	sbb    cl,BYTE PTR [eax+0x7b]
  420a56:	dec    edi
  420a57:	retf   0x89bd
  420a5a:	or     al,0x9a
  420a5c:	adc    edi,ebp
  420a5e:	pcmpeqb mm7,QWORD PTR [ebp+0x57702f1a]
  420a65:	add    DWORD PTR [eax-0x20],ebp
  420a68:	mov    edi,0xd708e521
  420a6d:	les    ebp,FWORD PTR [ebp-0x6e]
  420a70:	mov    edx,0xaca66f5e
  420a75:	xor    eax,0x48591a60
  420a7a:	(bad)
  420a7d:	and    ah,0xbd
  420a80:	sbb    cl,BYTE PTR [ebx+0x3d]
  420a83:	mov    BYTE PTR [eax+0x218d2e81],dh
  420a89:	vcmpsd xmm6,xmm6,QWORD PTR [esi-0x3a3d52db],0x9a
  420a92:	icebp  
  420a93:	lea    esi,[edx+0x76]
  420a96:	js     0x420a2c
  420a98:	ins    DWORD PTR es:[edi],dx
  420a99:	xor    al,0x41
  420a9b:	js     0x420a52
  420a9d:	dec    ecx
  420a9e:	jge    0x420a3f
  420aa0:	fs push 0x8a30872c
  420aa6:	jmp    0x420adf
  420aa8:	mov    ah,0x30
  420aaa:	stc    
  420aab:	sub    al,0x39
  420aad:	adc    bl,al
  420aaf:	fst    QWORD PTR [edx-0x9]
  420ab2:	adc    DWORD PTR [eax+0x51],ebx
  420ab5:	fstp   QWORD PTR [eax]
  420ab7:	scas   al,BYTE PTR es:[edi]
  420ab8:	xchg   ebx,eax
  420ab9:	or     BYTE PTR [eax+eiz*2],bl
  420abc:	add    al,0xe8
  420abe:	jmp    0xab11:0x2b60b0f3
  420ac5:	mov    dh,0x9c
  420ac7:	jb     0x420a6d
  420ac9:	jg     0x420b21
  420acb:	adc    BYTE PTR [esi+eiz*8-0x8cca277],ch
  420ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ad3:	pop    ebp
  420ad4:	jns    0x420a77
  420ad6:	mov    dl,0x7d
  420ad8:	call   0x48e4:0xd10e682a
  420adf:	xchg   BYTE PTR [ebx+edi*1-0x492147b0],dh
  420ae6:	xchg   edx,eax
  420ae7:	push   0x20
  420ae9:	sbb    DWORD PTR [ebx-0x756a8171],esi
  420aef:	aam    0x58
  420af1:	icebp  
  420af2:	jg     0x420ac7
  420af4:	xchg   ebx,eax
  420af5:	cld    
  420af6:	std    
  420af7:	(bad)  
  420af8:	mov    edx,0x88239ee
  420afd:	enter  0xaa95,0xbf
  420b01:	mov    ds:0x723957ee,eax
  420b06:	mov    ah,0xb8
  420b08:	mov    esi,0x4753fce8
  420b0d:	push   edi
  420b0e:	outs   dx,BYTE PTR ds:[esi]
  420b0f:	or     bl,ch
  420b11:	lahf   
  420b12:	pop    esi
  420b13:	jecxz  0x420aca
  420b15:	jns    0x420b58
  420b17:	cmp    edi,DWORD PTR [esi+ecx*8]
  420b1a:	sub    al,0xd2
  420b1c:	mov    bl,0xb5
  420b1e:	mov    ebx,0xa2ca3c9
  420b23:	xor    ebx,DWORD PTR [esi*4-0x24fd766f]
  420b2a:	push   es
  420b2b:	mov    BYTE PTR [eax-0x23],bh
  420b2e:	outs   dx,BYTE PTR ds:[esi]
  420b2f:	sub    eax,0x1fb44101
  420b34:	cmp    cl,dh
  420b36:	xor    al,0x25
  420b38:	(bad)  
  420b39:	cli    
  420b3a:	lods   eax,DWORD PTR ds:[esi]
  420b3b:	inc    ecx
  420b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b3d:	cs mov ah,0xb6
  420b40:	sub    ecx,edi
  420b42:	inc    edi
  420b43:	mov    WORD PTR ds:0xc90f60a8,cs
  420b49:	push   0x6d
  420b4b:	shr    BYTE PTR [esi-0x6a3045bc],0x1d
  420b52:	imul   ebx,DWORD PTR [edi],0xffffffbc
  420b55:	dec    esp
  420b56:	lea    esi,[esi]
  420b58:	mov    cl,0xd0
  420b5a:	out    0xc1,al
  420b5c:	mov    BYTE PTR [edi+0x16],al
  420b5f:	js     0x420b2d
  420b61:	je     0x420afc
  420b63:	cld    
  420b64:	ja     0x420b31
  420b66:	mov    dl,0xb0
  420b68:	xor    eax,0xbe1aba62
  420b6d:	push   edx
  420b6e:	clc    
  420b6f:	dec    esp
  420b70:	dec    edx
  420b71:	dec    eax
  420b72:	mov    ss,esi
  420b74:	xchg   BYTE PTR ds:0xb7d7d5ea,bh
  420b7a:	xchg   edx,eax
  420b7b:	push   esi
  420b7c:	xchg   ebp,eax
  420b7d:	fimul  DWORD PTR [ebx-0x6bac773b]
  420b83:	bound  eax,QWORD PTR ds:0x6352d5cd
  420b89:	int3   
  420b8a:	cmc    
  420b8b:	les    ebx,FWORD PTR [edi+0x1ba420a1]
  420b91:	adc    BYTE PTR ds:[edx],bh
  420b94:	or     esi,DWORD PTR [eax-0x71]
  420b97:	ret    0x94a4
  420b9a:	ficomp DWORD PTR [esi+edi*2+0x51648441]
  420ba1:	stos   BYTE PTR es:[edi],al
  420ba2:	mov    ebp,0x7da55ff6
  420ba7:	cmc    
  420ba8:	mov    eax,0x2fc093c5
  420bad:	jecxz  0x420be1
  420baf:	call   0x59:0x151ae8fe
  420bb6:	fcom   DWORD PTR ds:[esi+edi*8]
  420bba:	mov    eax,ds:0x88863ef4
  420bbf:	jge    0x420ba2
  420bc1:	xchg   ebp,eax
  420bc2:	ret    0xb0
  420bc5:	add    ecx,DWORD PTR [ecx]
  420bc7:	inc    eax
  420bc8:	into   
  420bc9:	push   ds
  420bca:	outs   dx,BYTE PTR ds:[esi]
  420bcb:	dec    edx
  420bcc:	inc    edi
  420bcd:	in     al,0x62
  420bcf:	dec    ebx
  420bd0:	jno    0x420be6
  420bd2:	repnz inc ebp
  420bd4:	(bad)  
  420bd5:	das    
  420bd6:	call   FWORD PTR [ebx]
  420bd8:	leave  
  420bd9:	clc    
  420bda:	push   es
  420bdb:	ret    
  420bdc:	jne    0x420b87
  420bde:	retf   0x7ae2
  420be1:	pop    eax
  420be2:	adc    eax,0x3ad7d392
  420be7:	sti    
  420be8:	(bad)  
  420bea:	sahf   
  420beb:	jmp    0x420bee
  420bed:	jnp    0x420c22
  420bef:	mov    dh,0x63
  420bf1:	jbe    0x420be5
  420bf3:	out    0xb9,eax
  420bf5:	cmp    al,0x29
  420bf7:	push   0x8d12de95
  420bfc:	shl    BYTE PTR [ebx],1
  420bfe:	xor    dl,BYTE PTR [edx-0x70]
  420c01:	ds rcr ecx,0xbf
  420c05:	mov    edx,0xc04a2de6
  420c0a:	mov    DWORD PTR [ecx],eax
  420c0c:	jne    0x420bc9
  420c0e:	jge    0x420c4b
  420c10:	loopne 0x420c0c
  420c12:	jp     0x420c37
  420c14:	popf   
  420c15:	loopne 0x420c71
  420c17:	push   esi
  420c18:	aad    0x7d
  420c1a:	pop    edi
  420c1b:	test   eax,0xf56f0570
  420c20:	xchg   edx,eax
  420c21:	push   ecx
  420c22:	mov    BYTE PTR [edx+0x27b535c8],0xbf
  420c29:	leave  
  420c2a:	dec    edi
  420c2b:	int    0xec
  420c2d:	jbe    0x420c8d
  420c2f:	out    dx,al
  420c30:	mov    dh,0x49
  420c32:	jle    0x420c0d
  420c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c35:	jp     0x420c5e
  420c37:	(bad)  
  420c38:	in     al,dx
  420c39:	or     al,0x6d
  420c3b:	mov    ebp,0x431ae164
  420c40:	(bad)  
  420c42:	mov    edi,0x6a617a87
  420c47:	repz mov ds:0x3e355b9b,al
  420c4d:	hlt    
  420c4e:	cmp    al,0x5b
  420c50:	iret   
  420c51:	fmul   st(0),st
  420c53:	(bad)  
  420c54:	push   edi
  420c55:	sub    ecx,DWORD PTR es:[esp+eax*2]
  420c59:	cmp    bh,BYTE PTR [ebp+0x76]
  420c5c:	or     al,0x2b
  420c5e:	test   BYTE PTR [edx+0x76fbea49],ah
  420c64:	xchg   ebx,eax
  420c65:	lds    ebx,FWORD PTR [edi+0x3e05b3e1]
  420c6b:	repz icebp 
  420c6d:	lahf   
  420c6e:	pop    es
  420c6f:	mov    BYTE PTR [ecx+0x6f],dh
  420c72:	daa    
  420c73:	jg     0x420c73
  420c75:	(bad)  
  420c78:	ret    
  420c79:	jmp    0x8717ae6e
  420c7e:	(bad)  
  420c7f:	cli    
  420c80:	pop    edx
  420c81:	rcl    DWORD PTR [ecx-0x17],0x68
  420c85:	jl     0x420c68
  420c87:	iret   
  420c88:	mov    bl,BYTE PTR [edx]
  420c8a:	push   esi
  420c8b:	dec    edi
  420c8c:	sub    eax,esi
  420c8e:	xchg   edx,eax
  420c8f:	pusha  
  420c90:	sub    eax,0x9ecd472
  420c95:	mov    edi,0xd827a5ce
  420c9a:	popa   
  420c9b:	mov    esp,0x330a7347
  420ca0:	xchg   DWORD PTR [ebx-0x61],esp
  420ca3:	lock pop eax
  420ca5:	sbb    DWORD PTR [ecx],esi
  420ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ca8:	ss je  0x420c9b
  420cab:	xor    DWORD PTR [eax+0x65dc5551],ebp
  420cb1:	sbb    DWORD PTR [esi+0x25],0x66ff7f9f
  420cb8:	xor    ebx,DWORD PTR [ecx]
  420cba:	cmp    eax,0xd90f7d67
  420cbf:	fdivr  DWORD PTR [eax]
  420cc1:	mov    dl,0x99
  420cc3:	xor    eax,0x3940706c
  420cc8:	mov    esp,0x5b8a2478
  420ccd:	scas   eax,DWORD PTR es:[edi]
  420cce:	pop    ds
  420ccf:	sbb    eax,0x5ee86e87
  420cd4:	inc    edx
  420cd5:	inc    esp
  420cd6:	test   BYTE PTR [ebx-0x4a6ae0d],0xcf
  420cdd:	and    esp,0x7bd24f88
  420ce3:	sbb    al,0xea
  420ce5:	sbb    ah,BYTE PTR [edx+0x32]
  420ce8:	lds    edx,FWORD PTR [eax-0x6c]
  420ceb:	(bad)  
  420cec:	lods   al,BYTE PTR ds:[esi]
  420ced:	shl    DWORD PTR [ecx+0x7],cl
  420cf0:	jecxz  0x420d4e
  420cf2:	fcom   DWORD PTR [edx+ebx*2+0xbb63b27]
  420cf9:	(bad)  [eax+ecx*4-0x4c95add8]
  420d00:	push   cs
  420d01:	aaa    
  420d02:	jl     0x420d14
  420d04:	inc    ecx
  420d05:	imul   eax,DWORD PTR [esi+0x11],0xc5ed112e
  420d0c:	(bad)  
  420d0d:	stc    
  420d0e:	add    cl,cl
  420d10:	dec    eax
  420d11:	dec    dx
  420d13:	outs   dx,BYTE PTR ds:[esi]
  420d14:	shl    BYTE PTR [ebx],0x6e
  420d17:	dec    edx
  420d18:	repnz add ch,BYTE PTR [esp+eiz*8+0x21eb6320]
  420d20:	sbb    eax,0xd6b299bd
  420d25:	cmp    BYTE PTR [esi+0x7c],ch
  420d28:	pop    esp
  420d29:	push   esi
  420d2a:	sbb    DWORD PTR [eax-0x47],ebx
  420d2d:	add    DWORD PTR [ebp+esi*8+0x18a6f903],0x3f35e709
  420d38:	in     eax,0xbb
  420d3a:	pop    edx
  420d3b:	test   DWORD PTR gs:[edx+0x7529df6c],ecx
  420d42:	add    BYTE PTR [edi+0x44bcaef],al
  420d48:	and    DWORD PTR [edx+0x40902645],0x1e
  420d4f:	in     al,dx
  420d50:	dec    eax
  420d51:	cmp    al,0x95
  420d53:	sar    BYTE PTR [ecx-0x7b],cl
  420d56:	mov    eax,0x674c265b
  420d5b:	ret    0x3a57
  420d5e:	sahf   
  420d5f:	mov    ebx,0x5b07e3dc
  420d64:	shl    BYTE PTR [ebp-0x1078b614],1
  420d6a:	and    DWORD PTR [ecx],eax
  420d6c:	push   ebx
  420d6d:	push   esi
  420d6e:	scas   al,BYTE PTR es:[edi]
  420d6f:	adc    ecx,DWORD PTR [edx+ebx*8+0x43]
  420d73:	adc    DWORD PTR [esi+0x1294f315],esi
  420d79:	dec    DWORD PTR [ebx-0x62]
  420d7c:	xchg   bl,ch
  420d7e:	xor    BYTE PTR [ebx-0x68],dl
  420d81:	xor    cl,BYTE PTR [eax-0x617e17af]
  420d87:	mov    esp,0xcacfeee1
  420d8c:	rcl    dh,0xb
  420d8f:	or     BYTE PTR [edx-0x78ddb1aa],dh
  420d95:	jle    0x420d6b
  420d97:	sub    eax,0x62d1f18e
  420d9c:	xchg   ecx,eax
  420d9d:	in     eax,dx
  420d9e:	inc    ebp
  420d9f:	xchg   ecx,eax
  420da0:	fdiv   st,st(7)
  420da2:	mov    eax,0x96609270
  420da7:	xor    BYTE PTR [edi+0x4dbbaec4],ah
  420dad:	xor    al,0xc1
  420daf:	xlat   BYTE PTR ds:[ebx]
  420db0:	sub    DWORD PTR [ebx-0x18],edx
  420db3:	sub    esi,0x90ecd43c
  420db9:	(bad)  
  420dba:	addr16 js 0x420d5f
  420dbd:	push   es
  420dbe:	push   edi
  420dbf:	fs pusha 
  420dc1:	sub    dl,BYTE PTR [esi-0xd]
  420dc4:	clc    
  420dc5:	push   edx
  420dc6:	fisttp DWORD PTR [ebx+0x15]
  420dc9:	(bad)  
  420dca:	push   edx
  420dcb:	in     eax,0x6f
  420dcd:	mov    ebx,0xa4df9dd7
  420dd2:	imul   edx,DWORD PTR [edi],0x1f
  420dd5:	in     al,0x18
  420dd7:	das    
  420dd8:	rcl    DWORD PTR [ecx+0x5e],1
  420ddb:	push   ebp
  420ddc:	jae    0x420e32
  420dde:	repz add dl,BYTE PTR ds:0x1a9618cd
  420de5:	sbb    ebp,DWORD PTR [edx-0x59]
  420de8:	or     al,0xe1
  420dea:	adc    dh,cl
  420dec:	xor    BYTE PTR [edi+esi*1],0xd5
  420df0:	push   0xdcf944a4
  420df5:	push   es
  420df6:	inc    edx
  420df7:	test   BYTE PTR [eax],cl
  420df9:	int    0x11
  420dfb:	clc    
  420dfc:	push   ecx
  420dfd:	(bad)  
  420dfe:	out    0x1c,eax
  420e00:	lods   eax,DWORD PTR ds:[esi]
  420e01:	adc    al,0x61
  420e03:	inc    edx
  420e04:	jmp    0xfa36c63f
  420e09:	aas    
  420e0a:	push   edx
  420e0b:	lea    eax,gs:[eax+ebx*2]
  420e0f:	ja     0x420dd7
  420e11:	(bad)  
  420e12:	das    
  420e13:	mov    DWORD PTR [ebx-0x5f],eax
  420e16:	add    BYTE PTR [ebp+0x4e37d00e],bl
  420e1c:	jbe    0x420db4
  420e1e:	mov    BYTE PTR [ecx],bh
  420e20:	adc    eax,0x212d8bb0
  420e25:	add    esi,ebp
  420e27:	pop    es
  420e28:	push   ds
  420e29:	pop    ebx
  420e2a:	fimul  DWORD PTR [ecx+0x76]
  420e2d:	dec    esp
  420e2e:	hlt    
  420e2f:	sub    eax,0xa7387329
  420e34:	pop    ebx
  420e35:	and    edx,edx
  420e37:	dec    edx
  420e38:	cli    
  420e39:	out    0x76,al
  420e3b:	iret   
  420e3c:	pop    edi
  420e3d:	sahf   
  420e3e:	test   al,0xfd
  420e40:	(bad)  [ebx-0x40]
  420e43:	mov    ch,0x64
  420e45:	pop    ss
  420e46:	mov    WORD PTR [ebx+edi*8+0x26f2d942],ds
  420e4d:	mov    edx,0x1825131c
  420e52:	pop    es
  420e53:	mov    edx,0x7bd231c8
  420e58:	je     0x420e66
  420e5a:	(bad)
  420e5f:	leave  
  420e60:	cdq    
  420e61:	outs   dx,DWORD PTR ds:[esi]
  420e62:	jo     0x420eaa
  420e64:	call   0x6cbb:0xca8a9c2a
  420e6b:	xchg   ebx,eax
  420e6c:	popf   
  420e6d:	push   ecx
  420e6e:	inc    ecx
  420e6f:	or     ebp,DWORD PTR [eax+0x7c]
  420e72:	or     al,0xd3
  420e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e75:	and    ebx,DWORD PTR [edi]
  420e77:	xor    bl,ah
  420e79:	mov    ds:0x8c9f4969,eax
  420e7e:	mov    eax,ds:0xe9a1e801
  420e83:	mov    dl,0xe7
  420e85:	mov    dl,0x37
  420e87:	out    0x83,al
  420e89:	ins    BYTE PTR es:[edi],dx
  420e8a:	fistp  QWORD PTR [ebx]
  420e8c:	and    ah,ch
  420e8e:	or     esp,ebx
  420e90:	mov    ch,BYTE PTR [esp+ecx*1+0x3]
  420e94:	dec    esi
  420e95:	out    dx,eax
  420e96:	mov    eax,DWORD PTR [esi+0x56]
  420e99:	pop    edi
  420e9a:	mov    eax,ds:0xd8e37147
  420e9f:	mov    esi,0xa4ed85e3
  420ea4:	imul   eax,DWORD PTR [ebx],0x44
  420ea7:	test   eax,0x1f61c61
  420eac:	cmp    edx,DWORD PTR [ebx+0x1a]
  420eaf:	or     eax,0x5448c0fc
  420eb4:	pop    ebx
  420eb5:	and    al,0xe9
  420eb7:	popf   
  420eb8:	loopne 0x420ed0
  420eba:	or     eax,0xcfa96f43
  420ebf:	pusha  
  420ec0:	imul   eax,DWORD PTR [eax+0x79],0x18
  420ec4:	push   ss
  420ec5:	mov    esp,0x574c21da
  420eca:	outs   dx,BYTE PTR ds:[esi]
  420ecb:	jecxz  0x420ef5
  420ecd:	adc    dl,BYTE PTR [eax+esi*1]
  420ed0:	xchg   esp,eax
  420ed1:	xchg   DWORD PTR [ebp+0x49],edx
  420ed4:	test   DWORD PTR ds:0xeb22207,edx
  420eda:	outs   dx,DWORD PTR ds:[esi]
  420edb:	and    bh,BYTE PTR [esi+0x6f]
  420ede:	rcr    BYTE PTR [ebp+0x49a262d7],0x36
  420ee5:	loopne 0x420ed4
  420ee7:	ss loopne 0x420e6e
  420eea:	imul   eax,DWORD PTR [eax+0x8],0x55a4d75c
  420ef1:	sbb    dh,bl
  420ef3:	push   edi
  420ef4:	cmp    BYTE PTR [eax],0xc7
  420ef7:	add    eax,0x7374dff4
  420efc:	mov    al,0x39
  420efe:	rol    BYTE PTR [ebx-0x3a86e804],cl
  420f04:	jge    0x420f3a
  420f06:	gs push cs
  420f08:	cmp    ch,BYTE PTR [esi]
  420f0a:	(bad)  [ebx]
  420f0c:	or     al,0xe4
  420f0e:	and    al,0x8f
  420f11:	jmp    DWORD PTR [edi-0x268aac75]
  420f17:	mov    esi,0xf20a24c6
  420f1c:	pop    esp
  420f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f1e:	cmc    
  420f1f:	test   DWORD PTR [edi-0x75353f46],esi
  420f25:	enter  0x5d1a,0xf3
  420f29:	neg    DWORD PTR [ecx+0x3745ec85]
  420f2f:	adc    BYTE PTR [edx],al
  420f31:	or     edx,DWORD PTR [ecx]
  420f33:	and    BYTE PTR [edi],0x8f
  420f36:	mov    ebx,0x88e33e2a
  420f3c:	adc    ch,al
  420f3e:	test   BYTE PTR [ebp+0x2ddae646],bl
  420f44:	or     DWORD PTR [esi],0x9a104036
  420f4a:	jno    0x420fb2
  420f4c:	addr16 xchg esp,eax
  420f4e:	fld    TBYTE PTR [eax+0x16]
  420f51:	pop    esp
  420f52:	arpl   WORD PTR [edi-0x2ca646a],bx
  420f58:	push   es
  420f59:	jg     0x420f48
  420f5b:	call   DWORD PTR [eax+0x13e3957e]
  420f61:	lds    ebp,FWORD PTR [eax-0x5a]
  420f64:	pop    edi
  420f65:	arpl   WORD PTR [edx+0x1308a4d3],si
  420f6b:	scas   al,BYTE PTR es:[edi]
  420f6c:	arpl   WORD PTR [edi+0x6c],di
  420f6f:	or     al,0x63
  420f71:	lahf   
  420f72:	out    0xcc,al
  420f74:	aas    
  420f75:	xchg   ecx,eax
  420f76:	in     eax,0xc8
  420f78:	sbb    al,0x5f
  420f7a:	(bad)  
  420f7c:	enter  0xead7,0x33
  420f80:	dec    esp
  420f81:	cmp    edi,DWORD PTR [esi+0x6]
  420f84:	xchg   edi,eax
  420f85:	test   eax,0xe1f0e018
  420f8a:	aad    0xf5
  420f8c:	xchg   BYTE PTR [eax+0x737a2955],dl
  420f92:	fs fsubr st(5),st
  420f95:	fnstcw WORD PTR [ebx]
  420f97:	mov    bh,BYTE PTR [esi]
  420f99:	popf   
  420f9a:	aas    
  420f9b:	pop    esp
  420f9c:	sbb    eax,0xd8b85602
  420fa1:	jae    0x420fdf
  420fa3:	test   eax,0x61fc78ee
  420fa8:	cmp    DWORD PTR [ebp-0x5f],0x204a2597
  420faf:	icebp  
  420fb0:	sbb    ecx,ebx
  420fb2:	loopne 0x421009
  420fb4:	daa    
  420fb5:	xchg   edx,eax
  420fb6:	std    
  420fb7:	pop    ss
  420fb8:	iret   
  420fb9:	retf   0xd799
  420fbc:	stos   DWORD PTR es:[edi],eax
  420fbd:	ja     0x420fff
  420fbf:	mov    al,BYTE PTR [edx+0x32]
  420fc2:	test   DWORD PTR [ebx+0x46],edx
  420fc5:	dec    esi
  420fc6:	imul   BYTE PTR [esi]
  420fc8:	xor    DWORD PTR [edi],ecx
  420fca:	mov    ds,esi
  420fcc:	dec    esp
  420fcd:	lea    edx,[eax]
  420fcf:	(bad)  
  420fd0:	and    bl,BYTE PTR [eax]
  420fd2:	addr16 xor ebx,eax
  420fd5:	adc    esi,ebp
  420fd7:	inc    edi
  420fd8:	adc    BYTE PTR [ebp+0x461e7ecf],0xe9
  420fdf:	jle    0x42103d
  420fe1:	inc    eax
  420fe2:	adc    BYTE PTR [esi+ebp*1-0x4c52e5a8],al
  420fe9:	lahf   
  420fea:	jecxz  0x420fb4
  420fec:	and    al,0x99
  420fee:	shl    DWORD PTR ds:0xd5113003,0xbc
  420ff5:	or     bh,BYTE PTR [ebx]
  420ff7:	mov    BYTE PTR ds:0x917bd884,bh
  420ffd:	mov    eax,0xd46cb5c0
  421002:	push   cs
  421003:	loope  0x421054
  421005:	push   esp
  421006:	test   eax,0x796c2f80
  42100b:	xor    DWORD PTR [esi],0x1e
  42100e:	mov    edi,0x942ce2b0
  421013:	je     0x421083
  421015:	jns    0x420fd6
  421017:	pop    ecx
  421018:	sbb    ch,BYTE PTR [edi+ebp*8-0x5e]
  42101c:	js     0x42107e
  42101e:	jmp    0xb734ef48
  421023:	dec    ebp
  421024:	sub    esi,0x43
  421027:	sbb    DWORD PTR [ecx+0x2],0x2e
  42102b:	push   cs
  42102c:	sti    
  42102d:	or     esp,0xffffffcb
  421030:	xor    eax,0xcacc0ec7
  421035:	jbe    0x421049
  421037:	push   esi
  421038:	xchg   DWORD PTR [edx+0x7e],edi
  42103b:	dec    ecx
  42103c:	pop    edx
  42103d:	bound  esi,QWORD PTR [ecx]
  42103f:	iret   
  421040:	into   
  421041:	xchg   edx,eax
  421042:	mov    BYTE PTR [ebx-0x17e8336c],dh
  421048:	mov    ebp,0xaea7c04c
  42104d:	adc    eax,0xe9b22ed4
  421052:	pop    ss
  421053:	pop    ebx
  421054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421055:	sub    eax,0xa1c39bc6
  42105a:	push   ecx
  42105b:	iret   
  42105c:	ins    DWORD PTR es:[edi],dx
  42105d:	loop   0x42101c
  42105f:	fdivr  QWORD PTR gs:[ebp-0x3e]
  421063:	cmp    BYTE PTR [eax*4-0x57ee4c60],bl
  42106a:	xor    al,0x15
  42106c:	jae    0x42103f
  42106e:	outs   dx,BYTE PTR ds:[esi]
  42106f:	das    
  421070:	call   0x1a53:0xf0838e90
  421077:	jmp    0x70200501
  42107c:	jg     0x4210a1
  42107e:	cmp    esp,eax
  421080:	scas   eax,DWORD PTR es:[edi]
  421081:	add    BYTE PTR [esi-0x6ee1bc5b],dl
  421087:	mov    bh,0x7c
  421089:	xor    eax,DWORD PTR [ecx]
  42108b:	adc    DWORD PTR [edi-0x29ffeabb],esi
  421091:	adc    edi,0xfd59adcc
  421097:	retf   0x7e20
  42109a:	cmp    BYTE PTR [ebx-0x2b],dl
  42109d:	lods   al,BYTE PTR ds:[esi]
  42109e:	dec    esi
  42109f:	adc    al,0x84
  4210a1:	int3   
  4210a2:	dec    edx
  4210a3:	div    DWORD PTR ds:0x829f4a2e
  4210a9:	repz mov al,0xb1
  4210ac:	in     eax,0xf1
  4210ae:	out    0x2,al
  4210b0:	cmp    bh,0xe
  4210b3:	push   ebp
  4210b4:	pop    esp
  4210b5:	dec    ebx
  4210b6:	sar    DWORD PTR [ebp-0xe],0x47
  4210ba:	mov    ecx,DWORD PTR [edi-0x4c]
  4210bd:	xchg   edx,eax
  4210be:	and    eax,0xa4611d74
  4210c3:	dec    ebx
  4210c4:	cli    
  4210c5:	pushf  
  4210c6:	adc    DWORD PTR [ebx+edx*1-0x28],0x48
  4210cb:	fldenv [edx]
  4210cd:	push   cs
  4210ce:	ins    BYTE PTR es:[edi],dx
  4210cf:	sub    ah,BYTE PTR [edi+eiz*2-0x7f]
  4210d3:	lods   al,BYTE PTR ds:[esi]
  4210d4:	add    edx,esi
  4210d6:	jnp    0x421101
  4210d8:	call   0x5df609a6
  4210dd:	lahf   
  4210de:	mov    cl,0x91
  4210e0:	pusha  
  4210e1:	gs cwde 
  4210e3:	div    BYTE PTR [edi]
  4210e5:	rcl    edx,1
  4210e7:	push   0xf21e430f
  4210ec:	mov    ebx,0x24e37ffd
  4210f1:	or     DWORD PTR [esi+0x25d6bac4],ebp
  4210f7:	cmp    DWORD PTR [edx],edi
  4210f9:	add    DWORD PTR [eax+0x23],eax
  4210fc:	int3   
  4210fd:	js     0x42112a
  4210ff:	sub    cl,BYTE PTR [edi-0x545a9ef8]
  421105:	sar    BYTE PTR [ebp+0x63de2dc6],0xba
  42110c:	stos   DWORD PTR es:[edi],eax
  42110d:	push   edi
  42110e:	fs pusha 
  421110:	int3   
  421111:	call   0xc7bf9a3b
  421116:	push   edx
  421117:	sub    ah,ch
  421119:	lods   eax,DWORD PTR ds:[esi]
  42111a:	inc    ecx
  42111b:	and    al,0xd9
  42111d:	leave  
  42111e:	mov    esi,0xa8148795
  421123:	push   esp
  421124:	xchg   edx,eax
  421125:	fcom   st(0)
  421127:	pop    ss
  421128:	pop    ecx
  421129:	push   eax
  42112a:	xchg   bl,ah
  42112c:	pop    ds
  42112d:	arpl   si,ax
  42112f:	jmp    0xb2b76072
  421134:	mov    dl,0x72
  421136:	out    0x63,al
  421138:	fs push ds
  42113a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42113b:	loopne 0x421166
  42113d:	in     eax,0x81
  42113f:	push   ebx
  421140:	cmp    BYTE PTR [edi],bh
  421142:	mov    ?,WORD PTR [eax+esi*2-0x434fe323]
  421149:	jns    0x42110e
  42114b:	mov    bh,0xea
  42114d:	addr16 or edx,edi
  421150:	pop    ebx
  421151:	dec    ebp
  421152:	and    dl,BYTE PTR [ecx+0x51]
  421155:	retf   0xca2c
  421158:	or     BYTE PTR [ecx+0x0],0x8f
  42115c:	jne    0x4211d5
  42115e:	int3   
  42115f:	pop    ebp
  421160:	xchg   DWORD PTR [edx],edx
  421162:	and    DWORD PTR [edi+eax*2-0x2f61c4b5],ecx
  421169:	call   0x5de4:0x239c4e01
  421170:	jmp    0x4211c5
  421172:	aaa    
  421173:	test   ecx,eax
  421175:	jp     0x4211a3
  421177:	inc    ebp
  421178:	out    dx,al
  421179:	les    ebx,FWORD PTR [edx+0x6f]
  42117c:	leave  
  42117d:	fbstp  TBYTE PTR [edx]
  42117f:	mov    ah,0x59
  421181:	enter  0x6ea9,0x8b
  421185:	mov    ebx,0x10093bf
  42118a:	adc    al,0x87
  42118c:	mov    esp,0x3200407
  421191:	mov    ch,0x8f
  421193:	not    BYTE PTR [eax+0x2c8b6242]
  421199:	pop    eax
  42119a:	(bad)  gs:[ecx+0x74]
  42119e:	hlt    
  42119f:	rcl    DWORD PTR [ebx+0x7d4de5ca],1
  4211a5:	mov    eax,DWORD PTR [ecx]
  4211a7:	dec    BYTE PTR [edx]
  4211a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211aa:	cmp    DWORD PTR [eax+0xa259244],edx
  4211b0:	push   esp
  4211b1:	lods   al,BYTE PTR ds:[esi]
  4211b2:	cmp    al,0x3c
  4211b4:	pop    es
  4211b5:	fs retf 
  4211b7:	ret    0xa5a4
  4211ba:	mov    ebx,0xe70bd379
  4211bf:	xchg   ebx,eax
  4211c0:	loop   0x4211cc
  4211c2:	test   eax,0xcf50c9b3
  4211c7:	xor    al,0xe8
  4211c9:	fimul  DWORD PTR [esi]
  4211cb:	daa    
  4211cc:	jno    0x421176
  4211ce:	nop
  4211cf:	mov    WORD PTR [eax+0x39cd57b],gs
  4211d5:	lea    eax,[ecx-0x66]
  4211d8:	(bad)  [eax]
  4211da:	clc    
  4211db:	sub    ch,dl
  4211dd:	xor    eax,0xf6719386
  4211e2:	sar    BYTE PTR [ecx+0x29b4a10d],cl
  4211e8:	cs xchg edi,eax
  4211ea:	scas   al,BYTE PTR es:[edi]
  4211eb:	sbb    bl,BYTE PTR [edx]
  4211ed:	mov    edi,0xb73756ac
  4211f2:	xor    eax,0xff21aed6
  4211f7:	add    dh,BYTE PTR [ebx]
  4211f9:	push   ds
  4211fa:	jae    0x421260
  4211fc:	inc    esp
  4211fd:	ss out 0x1b,al
  421200:	inc    ebx
  421201:	hlt    
  421202:	and    bl,BYTE PTR [ebx-0x5a]
  421205:	test   al,0x4d
  421207:	xchg   BYTE PTR ds:0xfdf4838f,ah
  42120d:	or     ebx,DWORD PTR [ecx+eax*1]
  421210:	inc    BYTE PTR [ecx+0xd259873]
  421216:	out    dx,al
  421217:	pusha  
  421218:	out    0x79,al
  42121a:	mov    eax,ds:0x19d83f72
  42121f:	(bad)  
  421220:	push   ds
  421221:	xchg   eax,ebx
  421223:	in     al,dx
  421224:	sbb    edx,eax
  421226:	arpl   si,ax
  421228:	adc    ah,BYTE PTR [ecx-0x5a]
  42122b:	idiv   DWORD PTR [eax+esi*8-0x2e]
  42122f:	cmp    ah,bh
  421231:	enter  0xa934,0x96
  421235:	dec    eax
  421236:	(bad)  
  421237:	and    esp,DWORD PTR ss:[eax-0x45]
  42123b:	jge    0x4212a7
  42123d:	sbb    eax,DWORD PTR [ebx+0x12491882]
  421243:	xor    ecx,DWORD PTR [ecx-0x1786243f]
  421249:	call   0xd67e7236
  42124e:	test   al,0x6e
  421250:	jns    0x421222
  421252:	pop    esp
  421253:	nop
  421254:	pop    ds
  421255:	push   ebx
  421256:	lea    esi,[ecx-0x30]
  421259:	mov    dl,0x5e
  42125b:	xchg   edi,eax
  42125c:	push   WORD PTR [ebx+0x9829eab]
  421263:	mov    edx,ds
  421265:	xchg   edx,eax
  421266:	out    dx,eax
  421267:	fst    DWORD PTR [edi-0x7a2bff11]
  42126d:	test   BYTE PTR [eax-0x16],0x9d
  421271:	dec    DWORD PTR es:[edi]
  421274:	bound  eax,QWORD PTR [edi+edi*2-0x5b98f365]
  42127b:	dec    edx
  42127c:	(bad)  
  42127d:	cmp    eax,0xabfc0505
  421282:	xchg   esp,eax
  421283:	test   al,0x3a
  421285:	bound  ebp,QWORD PTR [esp+esi*1+0x2a]
  421289:	push   edi
  42128a:	or     BYTE PTR [edi-0x27],bl
  42128d:	je     0x4212ea
  42128f:	cmc    
  421290:	or     eax,0x5ed72c7f
  421295:	push   ds
  421296:	push   cs
  421297:	jbe    0x42121d
  421299:	lods   al,BYTE PTR ds:[esi]
  42129a:	out    0x25,al
  42129c:	call   0xca2f9444
  4212a1:	and    eax,0x7b094d3
  4212a6:	fisub  WORD PTR [ecx-0x7832be7]
  4212ac:	mov    ds:0x3b17a145,eax
  4212b1:	push   edi
  4212b2:	jns    0x42129d
  4212b4:	sub    edx,DWORD PTR [ebp+0x5ecf0aa]
  4212ba:	inc    esi
  4212bb:	cmp    BYTE PTR [ebp+0x67],dl
  4212be:	cdq    
  4212bf:	push   0x9df7388a
  4212c4:	sbb    dl,BYTE PTR [esi-0x5d131f9c]
  4212ca:	sub    eax,0x9ee2b51e
  4212cf:	push   ss
  4212d0:	mov    cl,0x1a
  4212d2:	sbb    eax,0x2ef3330b
  4212d7:	inc    eax
  4212d8:	addr16 adc al,0xe3
  4212db:	mov    bl,0x8c
  4212dd:	mov    ds:0x2285be02,al
  4212e2:	inc    ecx
  4212e3:	retf   0x742f
  4212e6:	(bad)  
  4212e7:	lods   eax,DWORD PTR ds:[esi]
  4212e8:	ficom  WORD PTR [esi-0x2be54af2]
  4212ee:	xchg   ebx,eax
  4212ef:	sar    BYTE PTR [ebx+0x66e0da61],0x85
  4212f6:	mov    BYTE PTR ds:0x165ab350,dl
  4212fc:	mov    BYTE PTR [esi-0x77d77938],bl
  421302:	mov    cl,0xa9
  421304:	ds push ebx
  421306:	and    eax,0x49357917
  42130b:	xor    eax,0xffffffca
  42130e:	dec    BYTE PTR [eax+0x7116ed64]
  421314:	dec    esp
  421315:	arpl   bx,bx
  421317:	das    
  421318:	in     eax,dx
  421319:	jp     0x4212d2
  42131b:	adc    eax,0xebbc41f4
  421320:	shld   DWORD PTR ds:0x81e1a429,esi,0x47
  421328:	icebp  
  421329:	inc    edx
  42132a:	jge    0x4213a7
  42132c:	enter  0xf0a7,0x6d
  421330:	and    bl,BYTE PTR [edi+0xa7e296d]
  421336:	push   ss
  421337:	pop    ds
  421338:	push   0xccf3dea
  42133d:	push   ds
  42133e:	jno    0x421303
  421340:	jb     0x4212f8
  421342:	xlat   BYTE PTR ds:[ebx]
  421343:	and    DWORD PTR [edx+0x4ff4ffa8],eax
  421349:	push   0xd5ec0c40
  42134e:	ins    BYTE PTR es:[edi],dx
  42134f:	mov    dl,0xcf
  421351:	shl    DWORD PTR [esi-0x5e101a9f],1
  421357:	jno    0x4213d7
  421359:	xor    DWORD PTR [edx+0x1948e0a],eax
  42135f:	loope  0x4213aa
  421361:	jl     0x421354
  421363:	lea    eax,ds:0xe2c625bb
  421369:	hlt    
  42136a:	out    dx,eax
  42136b:	cli    
  42136c:	add    al,0x5b
  42136e:	out    dx,eax
  42136f:	adc    DWORD PTR [edi-0x1f],esi
  421372:	or     eax,0xb7a5be0b
  421377:	or     dl,BYTE PTR [edi]
  421379:	ror    DWORD PTR [esi-0x41],1
  42137c:	in     al,0x18
  42137e:	xchg   edi,eax
  42137f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421380:	data16 sahf 
  421382:	out    dx,eax
  421383:	aad    0xd2
  421385:	inc    edx
  421386:	stc    
  421387:	es dec edi
  421389:	pop    ss
  42138a:	mov    BYTE PTR [edi+0x68],bl
  42138d:	stos   BYTE PTR es:[edi],al
  42138e:	mov    ax,bx
  421391:	jle    0x42132b
  421393:	sub    eax,0x787f10e8
  421398:	adc    bl,BYTE PTR [ecx-0x50]
  42139b:	adc    eax,0x3e238e72
  4213a0:	inc    edi
  4213a1:	rol    DWORD PTR [edi-0x3a],1
  4213a4:	xchg   edi,eax
  4213a5:	sub    BYTE PTR [edx-0x321c9add],dh
  4213ab:	fidiv  WORD PTR [ebx+0x7e]
  4213ae:	ss push esi
  4213b0:	jg     0x42133b
  4213b2:	(bad)  
  4213b3:	test   eax,0xf934e4c7
  4213b8:	aas    
  4213b9:	adc    eax,0xd42e6d82
  4213be:	push   esp
  4213bf:	xchg   DWORD PTR [edi+0x11ec8ae2],esi
  4213c5:	and    ebp,DWORD PTR [esi-0x6f99c545]
  4213cb:	pop    eax
  4213cc:	jne    0x42139c
  4213ce:	dec    ebx
  4213cf:	aas    
  4213d0:	shl    DWORD PTR [edi+0x44],1
  4213d3:	les    ebp,FWORD PTR [eax+0x1fcca50]
  4213d9:	stos   DWORD PTR es:[edi],eax
  4213da:	xchg   cl,ah
  4213dc:	xchg   ebx,eax
  4213dd:	mov    cs,WORD PTR [edx]
  4213df:	test   DWORD PTR [ebp+0x721e148e],ebx
  4213e5:	les    edx,FWORD PTR [eax+0x4992e115]
  4213eb:	mov    BYTE PTR [ebp-0x78],dh
  4213ee:	sbb    ch,bl
  4213f0:	sbb    eax,0x6a6b114d
  4213f5:	xchg   DWORD PTR [esi+0x78],esi
  4213f8:	jecxz  0x4213c5
  4213fa:	xor    bl,bl
  4213fc:	clc    
  4213fd:	mov    cl,0x74
  4213ff:	jnp    0x4213d1
  421401:	jg     0x42142e
  421403:	jg     0x421456
  421405:	popa   
  421406:	gs popa 
  421408:	(bad)  
  421409:	not    DWORD PTR ds:0xe159bf3a
  42140f:	dec    ecx
  421410:	ret    
  421411:	call   0x90e3e97
  421416:	sub    DWORD PTR [esi-0x7c07bd7],edx
  42141c:	dec    ecx
  42141d:	retf   0xaf72
  421420:	cmp    edx,esp
  421422:	push   ss
  421423:	fsubrp st(0),st
  421425:	mov    ecx,0x1adfc257
  42142a:	imul   eax,esp,0x723eac9d
  421430:	lea    esi,[ecx+0x2c]
  421433:	(bad)  
  421434:	jmp    0x42143e
  421436:	xchg   DWORD PTR [edx+0x581463b0],edi
  42143c:	lock mov dh,0x49
  42143f:	xor    BYTE PTR [ebp+0x2f1307cb],bh
  421445:	mov    al,ds:0x7803c7b7
  42144a:	nop
  42144b:	and    al,0xc
  42144d:	sub    bh,BYTE PTR [eax-0xd]
  421450:	cs retf 
  421452:	rol    DWORD PTR [ebp-0x50],0x36
  421456:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421458:	fucomi st,st(2)
  42145a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42145b:	inc    ebx
  42145c:	inc    eax
  42145d:	(bad)  
  42145e:	fnsave [ebp-0x836002]
  421464:	outs   dx,BYTE PTR ds:[esi]
  421465:	and    DWORD PTR [edi],edi
  421467:	xchg   BYTE PTR [ebx+0x7ed3aeb5],cl
  42146d:	adc    BYTE PTR [edx+0x56],dh
  421470:	dec    ecx
  421471:	jle    0x421404
  421473:	imul   esp,edx,0xffffffe5
  421476:	push   esp
  421477:	pushf  
  421478:	int3   
  421479:	cmc    
  42147a:	jg     0x4214de
  42147c:	inc    ebp
  42147d:	dec    ebx
  42147e:	dec    ebx
  42147f:	adc    dl,BYTE PTR [ebp-0x57]
  421482:	add    al,0xf4
  421484:	jg     0x4214fe
  421486:	inc    eax
  421487:	out    0x48,eax
  421489:	hlt    
  42148a:	xor    DWORD PTR [ebx-0x3bb6cc0a],ebx
  421490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421491:	std    
  421492:	pop    ds
  421493:	pop    ss
  421494:	mul    DWORD PTR [ebp-0x58]
  421497:	xor    DWORD PTR [ebx-0x1f8ba29f],0xffffffea
  42149e:	nop
  42149f:	ror    BYTE PTR [edi+0x6e],0x32
  4214a3:	out    dx,eax
  4214a4:	xor    esi,DWORD PTR [edi]
  4214a6:	xchg   eax,ecx
  4214a8:	(bad)  
  4214a9:	sbb    DWORD PTR [edx-0x4bd534b],ebx
  4214af:	mov    bh,0x45
  4214b1:	lock int 0x73
  4214b4:	add    bl,bh
  4214b6:	leave  
  4214b7:	out    0xea,al
  4214b9:	mov    cl,0x32
  4214bb:	dec    esp
  4214bc:	jmp    0x421476
  4214be:	pop    edi
  4214bf:	xchg   ebp,eax
  4214c0:	fyl2x  
  4214c2:	aad    0x15
  4214c4:	retf   
  4214c5:	mov    bh,0xb4
  4214c7:	jnp    0x421456
  4214c9:	xchg   DWORD PTR [edi-0x7387e100],eax
  4214cf:	fist   WORD PTR [ebx-0x6dc6fb3]
  4214d5:	jmp    0xce19:0xe0375cb8
  4214dc:	xchg   BYTE PTR [ecx+0x39bf241e],bl
  4214e2:	inc    edi
  4214e3:	sbb    ch,dl
  4214e5:	out    dx,al
  4214e6:	cdq    
  4214e7:	loope  0x4214a4
  4214e9:	and    eax,0x59a8bff5
  4214ee:	imul   ecx,DWORD PTR [ebx+0x447bb3c0],0xffffffff
  4214f5:	jnp    0x421519
  4214f7:	jae    0x4214e4
  4214f9:	cld    
  4214fa:	pushf  
  4214fb:	repz dec edx
  4214fd:	fmul   QWORD PTR [ecx-0x16bc7e15]
  421503:	retf   0x2983
  421506:	add    BYTE PTR [ebx+0x47],dl
  421509:	inc    edi
  42150a:	jge    0x421579
  42150c:	ret    0xf596
  42150f:	mov    ebp,0xf0239a6d
  421514:	shl    DWORD PTR [esi-0x770d637],cl
  42151a:	loopne 0x4214af
  42151c:	cld    
  42151d:	adc    al,0x38
  42151f:	aam    0xa6
  421521:	les    edi,FWORD PTR [ebx]
  421523:	mov    esi,0xb6cd2b8d
  421528:	push   edi
  421529:	jecxz  0x421573
  42152b:	jg     0x4214ec
  42152d:	mov    ch,0xea
  42152f:	mov    eax,0x9eede9fb
  421534:	sti    
  421535:	in     al,dx
  421536:	xchg   bh,dh
  421538:	mov    ah,0x1
  42153a:	ins    DWORD PTR es:[edi],dx
  42153b:	iret   
  42153c:	push   0x1f
  42153e:	xor    ch,ch
  421540:	mov    al,0x6e
  421542:	loopne 0x42157c
  421544:	xchg   edx,eax
  421545:	outs   dx,DWORD PTR ds:[esi]
  421546:	adc    BYTE PTR [ebx+0x6],0x1c
  42154a:	int3   
  42154b:	sbb    DWORD PTR [esi],edx
  42154d:	das    
  42154e:	fdiv   DWORD PTR [ebx-0x78]
  421551:	ficomp DWORD PTR [ebp-0x14ae5be4]
  421557:	daa    
  421558:	std    
  421559:	loopne 0x4214dc
  42155b:	xor    DWORD PTR [eax-0x4b],ecx
  42155e:	adc    dl,BYTE PTR [ebx-0x4c]
  421561:	mov    ecx,DWORD PTR [esi+edx*1]
  421564:	(bad)  [ebx]
  421566:	icebp  
  421567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421568:	leave  
  421569:	pop    ds
  42156a:	pop    ecx
  42156b:	je     0x42153b
  42156d:	ins    DWORD PTR es:[edi],dx
  42156e:	in     al,0xa0
  421570:	pop    ecx
  421571:	or     eax,0x6491041d
  421576:	nop
  421577:	jbe    0x4215bb
  421579:	int    0xf6
  42157b:	and    cl,BYTE PTR [edx]
  42157d:	dec    eax
  42157e:	imul   edx,DWORD PTR [esi+0x60],0x79e58695
  421585:	pop    ebp
  421586:	cmp    DWORD PTR [edi+0x51],ebp
  421589:	cmp    BYTE PTR [edx+0x51],ch
  42158c:	lahf   
  42158d:	mov    ch,0x21
  42158f:	fst    QWORD PTR [edx-0x39e7412e]
  421595:	jle    0x4215b3
  421597:	imul   eax,DWORD PTR [ecx],0x5
  42159a:	in     al,dx
  42159b:	je     0x4215c8
  42159d:	dec    edx
  42159e:	stc    
  42159f:	cmp    ecx,DWORD PTR [edx-0x4e]
  4215a2:	jns    0x4215dc
  4215a4:	(bad)  
  4215a5:	(bad)  
  4215a6:	pop    edi
  4215a7:	pop    ebx
  4215a8:	mov    WORD PTR [ebx+0x216c5663],?
  4215ae:	arpl   WORD PTR [eax-0x39],sp
  4215b1:	leave  
  4215b2:	xchg   esi,eax
  4215b3:	call   0xf62eee77
  4215b8:	push   ds
  4215b9:	ss mov ecx,0x2c9a274b
  4215bf:	repz js 0x421622
  4215c2:	push   edx
  4215c3:	mov    ebp,0xf998c563
  4215c8:	xchg   ebp,edx
  4215ca:	or     ebp,DWORD PTR [esi-0x431c2296]
  4215d0:	pop    esi
  4215d1:	loop   0x4215bd
  4215d3:	mov    DWORD PTR [ebx-0x2e84729d],ecx
  4215d9:	loop   0x421637
  4215db:	ret    
  4215dc:	and    cl,bl
  4215de:	add    al,0xd8
  4215e0:	cmp    eax,0xf790bab7
  4215e5:	addr16 je 0x61aaa867
  4215ec:	cmp    eax,0x8706201
  4215f1:	(bad)  
  4215f2:	sbb    al,0x16
  4215f4:	push   eax
  4215f5:	mov    bl,0xbc
  4215f7:	pusha  
  4215f8:	loopne 0x4215e3
  4215fa:	xor    al,0x2b
  4215fc:	jmp    0x8e9e:0x63103233
  421603:	aam    0x8b
  421605:	or     esp,DWORD PTR [edi]
  421607:	pcmpeqd mm4,QWORD PTR [edx+0x7b41be28]
  42160e:	inc    esp
  42160f:	sub    esp,DWORD PTR [eax]
  421611:	jns    0x42160f
  421613:	adc    eax,0x64b11c88
  421618:	jmp    0xd533:0x931840da
  42161f:	pop    esi
  421620:	cmc    
  421621:	sti    
  421622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421623:	push   cs
  421624:	mov    BYTE PTR [edx+0x51],cl
  421627:	sbb    DWORD PTR [eax+edx*8],edx
  42162a:	jecxz  0x4216ab
  42162c:	out    dx,eax
  42162d:	fs addr16 sub al,0xb7
  421631:	(bad)  
  421632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421633:	push   0xea88ac8a
  421638:	aad    0xa6
  42163a:	fcmovnbe st,st(2)
  42163c:	lods   al,BYTE PTR ds:[esi]
  42163d:	jae    0x42166b
  42163f:	cmp    al,0xa0
  421641:	test   al,0xe6
  421643:	sbb    eax,0xcdb9b27b
  421648:	add    eax,0xd39ce972
  42164d:	inc    DWORD PTR [esi+0x3753f236]
  421653:	test   bl,ch
  421655:	xchg   esi,eax
  421656:	xor    eax,0x624d0d86
  42165b:	jmp    0x80858890
  421660:	pop    ecx
  421661:	and    al,0x7
  421663:	rol    ch,0xbf
  421666:	nop
  421667:	sub    al,0xc6
  421669:	(bad)  
  42166a:	fisttp DWORD PTR [ecx]
  42166c:	dec    edi
  42166d:	retf   0xcfa3
  421670:	iret   
  421671:	sbb    DWORD PTR [ebx-0x4b],ebp
  421674:	mov    ch,BYTE PTR [edi-0x73]
  421677:	push   cs
  421678:	sub    edi,DWORD PTR [edx]
  42167a:	call   0xa9ce:0x58e9298a
  421681:	jno    0x421702
  421683:	mov    bl,0x42
  421685:	lea    ebp,[edx+0x25]
  421688:	xchg   BYTE PTR [esi-0x5c1537ad],dl
  42168e:	arpl   WORD PTR [eax+eax*1+0x48],sp
  421692:	lahf   
  421693:	jle    0x421659
  421695:	sbb    esi,DWORD PTR [eax-0x6c7cf9a6]
  42169b:	not    DWORD PTR [edi+0x7f2dd668]
  4216a1:	leave  
  4216a2:	inc    ebp
  4216a3:	into   
  4216a4:	je     0x421674
  4216a6:	or     bh,BYTE PTR [ecx+eiz*1]
  4216a9:	pop    ecx
  4216aa:	dec    ebx
  4216ab:	dec    ecx
  4216ac:	cmc    
  4216ad:	sub    al,0x42
  4216af:	jle    0x421690
  4216b1:	pop    ds
  4216b2:	fsubr  st(1),st
  4216b4:	daa    
  4216b5:	bound  ebp,QWORD PTR [edi]
  4216b7:	test   eax,0xe165008e
  4216bc:	sti    
  4216bd:	pop    esp
  4216be:	dec    esi
  4216bf:	pusha  
  4216c0:	mov    edx,0x945f4a3e
  4216c5:	mov    al,0xf0
  4216c7:	ret    0x72c9
  4216ca:	cmp    ebp,0x29
  4216cd:	jb     0x4216bb
  4216cf:	loopne 0x42170a
  4216d1:	jge    0x4216bf
  4216d3:	push   esp
  4216d4:	inc    ebp
  4216d5:	add    eax,0x9302430c
  4216da:	adc    DWORD PTR [edi-0x27600bc9],ebp
  4216e0:	call   0x9e17c34
  4216e5:	stc    
  4216e6:	lock lods al,BYTE PTR ds:[esi]
  4216e8:	xchg   esi,eax
  4216e9:	call   0x40809a7c
  4216ee:	inc    eax
  4216ef:	inc    ecx
  4216f0:	stos   BYTE PTR es:[edi],al
  4216f1:	xor    eax,0x908586cb
  4216f6:	mov    bh,0xcd
  4216f8:	xchg   ebp,eax
  4216f9:	push   eax
  4216fa:	push   ebx
  4216fb:	pop    edi
  4216fc:	add    BYTE PTR [esi+0x53],bl
  4216ff:	mov    ds:0x731b1fed,eax
  421704:	or     BYTE PTR [esp+edx*8],al
  421707:	sub    al,BYTE PTR [ecx-0x70]
  42170a:	mov    eax,0x698842e8
  42170f:	inc    edx
  421710:	and    ah,BYTE PTR [edx]
  421712:	(bad)  
  421713:	lods   al,BYTE PTR ds:[esi]
  421714:	pushf  
  421715:	or     bh,al
  421717:	mov    ebx,0xca90c166
  42171c:	iret   
  42171d:	adc    ebp,DWORD PTR [edx+0x52]
  421720:	ja     0x421785
  421722:	xor    BYTE PTR gs:[ecx],bh
  421725:	sti    
  421726:	push   ds
  421727:	sahf   
  421728:	adc    BYTE PTR [ebx-0x4a826119],bl
  42172e:	xchg   esp,eax
  42172f:	lds    edx,FWORD PTR ds:0xbf00a0bb
  421735:	div    DWORD PTR [ebp+eax*1+0x39]
  421739:	and    ebp,ebp
  42173b:	retf   
  42173c:	sbb    bh,BYTE PTR [edx]
  42173e:	addr16 data16 (bad) 
  421741:	jecxz  0x421773
  421743:	jno    0x42171c
  421745:	push   esp
  421746:	imul   ebp,DWORD PTR [esi+0x613ea470],0x9bf4b64e
  421750:	neg    BYTE PTR [ebx+0x5ae8e844]
  421756:	jecxz  0x4217ae
  421758:	cs cmc 
  42175a:	dec    ebx
  42175b:	push   ebp
  42175c:	imul   BYTE PTR [ebx]
  42175e:	popa   
  42175f:	push   ebp
  421760:	xlat   BYTE PTR ds:[ebx]
  421761:	mov    al,0x27
  421763:	les    ebx,FWORD PTR [esi]
  421765:	jmp    0xd604:0x5f908aaa
  42176c:	ja     0x421795
  42176e:	out    dx,al
  42176f:	add    dh,BYTE PTR [eax]
  421771:	fld    DWORD PTR [edi]
  421773:	das    
  421774:	icebp  
  421775:	adc    al,0xf8
  421777:	adc    al,0xd0
  421779:	cdq    
  42177a:	fdivr  DWORD PTR [ecx-0x4b]
  42177d:	jo     0x4217a3
  42177f:	push   ebp
  421780:	cld    
  421781:	sbb    dh,BYTE PTR [esi]
  421783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421784:	sub    esp,esi
  421786:	movsx  esi,WORD PTR [ebx]
  421789:	push   edi
  42178a:	retf   
  42178b:	xor    edi,DWORD PTR [edx+edi*2-0x4d]
  42178f:	jmp    0xc664:0x358419af
  421796:	aaa    
  421797:	push   eax
  421798:	mov    dh,BYTE PTR [edx]
  42179a:	push   ds
  42179b:	inc    ebp
  42179c:	aam    0xc3
  42179e:	and    al,0xcf
  4217a0:	loopne 0x421745
  4217a2:	sbb    BYTE PTR [ebp-0x1d],bl
  4217a5:	mov    DWORD PTR [edx+0xf],edx
  4217a8:	xchg   ebp,eax
  4217a9:	lock pop ebp
  4217ab:	mov    edx,0x215b2495
  4217b0:	xor    DWORD PTR [ecx+0x6c520c07],ebx
  4217b6:	xor    eax,0x8e045a43
  4217bb:	sbb    BYTE PTR [ecx],0x0
  4217be:	frstor [edx-0x7158bf47]
  4217c4:	sbb    DWORD PTR [edx],0xb1e3eae3
  4217ca:	adc    al,0xa2
  4217cc:	push   cs
  4217cd:	cs dec ecx
  4217cf:	nop
  4217d0:	add    dh,BYTE PTR ss:[ebx]
  4217d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217d5:	jmp    0xb624b366
  4217da:	mov    cl,0x3c
  4217dc:	inc    esi
  4217dd:	mov    ebx,0x646e2024
  4217e2:	fnstcw WORD PTR [edi-0x7e415669]
  4217e8:	es sahf 
  4217ea:	add    eax,DWORD PTR [ecx-0x496e03f7]
  4217f0:	cld    
  4217f1:	scas   al,BYTE PTR es:[edi]
  4217f2:	mov    dl,0xdc
  4217f4:	ds push ecx
  4217f6:	or     BYTE PTR [edx],al
  4217f8:	in     al,0xe8
  4217fa:	lahf   
  4217fb:	imul   edi,edi,0x9b4fb56b
  421801:	imul   esp,DWORD PTR [ecx+0x7e],0x75
  421805:	mov    al,ds:0xdd1039f2
  42180a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42180b:	xchg   ebp,eax
  42180c:	add    DWORD PTR es:[ebp+0x6c7ad044],ebx
  421813:	repnz sbb al,0x30
  421816:	mov    dl,0x92
  421818:	das    
  421819:	xchg   ecx,eax
  42181a:	xchg   ebx,eax
  42181b:	pop    es
  42181c:	(bad)  
  42181d:	push   ebp
  42181e:	mov    ecx,0x49797fb3
  421823:	in     al,0x0
  421825:	(bad)  
  421826:	push   edi
  421827:	retf   
  421828:	jmp    0x5faa0920
  42182d:	xor    BYTE PTR [ebx+0x77],0xcd
  421831:	xor    BYTE PTR [ebx-0x554e36b1],dh
  421837:	mov    ebp,0xc1e22dfa
  42183c:	add    al,0xec
  42183e:	sub    eax,0xc66316d9
  421843:	xlat   BYTE PTR ds:[ebx]
  421844:	cmp    eax,0x7b365974
  421849:	std    
  42184a:	loope  0x4217ee
  42184c:	jmp    DWORD PTR [edx+ebp*2]
  42184f:	sub    BYTE PTR [eax],dl
  421851:	pop    esp
  421852:	pop    edx
  421853:	cli    
  421854:	(bad)  
  421855:	sbb    eax,0x1cbbd5ee
  42185a:	push   ss
  42185b:	push   es
  42185c:	sub    DWORD PTR [ebp-0x34],ecx
  42185f:	mov    WORD PTR [ebp*4-0x2fdd92af],es
  421866:	mov    al,ds:0xaa6bb0f5
  42186b:	(bad)  
  42186c:	fistp  QWORD PTR [edx]
  42186e:	je     0x421805
  421870:	push   ds
  421871:	retf   0x8d75
  421874:	inc    ebx
  421875:	dec    ecx
  421876:	pop    esp
  421877:	or     eax,0xdc57f405
  42187c:	push   ebx
  42187d:	test   BYTE PTR [esp+ebp*4+0x33f7ac72],ch
  421884:	mov    cl,0x77
  421886:	shl    DWORD PTR [ecx+0x69],0x9
  42188a:	test   al,0xf9
  42188c:	int    0x2
  42188e:	lahf   
  42188f:	inc    BYTE PTR [eax+0x4d]
  421892:	dec    ecx
  421893:	push   ss
  421894:	lods   eax,DWORD PTR ds:[esi]
  421895:	mov    edx,0x88c61b92
  42189a:	jp     0x4218d6
  42189c:	jno    0x42189f
  42189e:	jbe    0x42190e
  4218a0:	retf   0x6f22
  4218a3:	mov    cl,0xe6
  4218a5:	aaa    
  4218a6:	ja     0x42189b
  4218a8:	fs ds pop ecx
  4218ab:	pop    ecx
  4218ac:	push   esp
  4218ad:	mov    cl,0x77
  4218af:	add    eax,0xb7fec403
  4218b4:	cli    
  4218b5:	fisttp DWORD PTR [edx]
  4218b7:	push   ebx
  4218b8:	sbb    ecx,ebx
  4218ba:	popf   
  4218bb:	arpl   WORD PTR [edi],bx
  4218bd:	or     DWORD PTR [ebx],eax
  4218bf:	aaa    
  4218c0:	xchg   esi,eax
  4218c1:	sub    DWORD PTR [edx+eiz*4+0x41c7d4cc],eax
  4218c8:	jp     0x42184f
  4218ca:	jno    0x42190a
  4218cc:	call   0x1f8b7100
  4218d1:	dec    eax
  4218d2:	push   ds
  4218d3:	push   ds
  4218d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d5:	dec    edi
  4218d6:	dec    ecx
  4218d7:	push   esi
  4218d8:	jbe    0x4218c0
  4218da:	(bad)  
  4218db:	mov    al,0xdb
  4218dd:	(bad)  
  4218de:	and    DWORD PTR [ebx],0x57
  4218e1:	push   edx
  4218e2:	dec    ebx
  4218e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218e4:	mov    ch,0x53
  4218e6:	mov    ah,0x9d
  4218e8:	mov    al,0xff
  4218ea:	lahf   
  4218eb:	mov    esi,DWORD PTR [ebp-0x7a]
  4218ee:	push   ebx
  4218ef:	shl    edi,1
  4218f1:	push   cs
  4218f2:	scas   eax,DWORD PTR es:[edi]
  4218f3:	xchg   esp,eax
  4218f4:	retf   
  4218f5:	cwde   
  4218f6:	clc    
  4218f7:	inc    eax
  4218f8:	fwait
  4218f9:	or     eax,0x96fd8e55
  4218fe:	out    dx,eax
  4218ff:	test   ch,0xab
  421902:	xor    DWORD PTR [edx+0x29be9d22],edx
  421908:	xchg   ebp,eax
  421909:	dec    esp
  42190a:	cmc    
  42190b:	loope  0x421968
  42190d:	and    ecx,ebx
  42190f:	mov    al,0x9
  421911:	add    DWORD PTR [eax+0x485846e5],esp
  421917:	aam    0x8e
  421919:	ins    BYTE PTR es:[edi],dx
  42191a:	scas   al,BYTE PTR es:[edi]
  42191b:	ds push ss
  42191d:	xor    esi,DWORD PTR [ecx-0x5b]
  421920:	or     bh,BYTE PTR [edi-0x6543467c]
  421926:	xor    eax,0x422da1fd
  42192b:	adc    al,0x32
  42192d:	push   0x1b
  42192f:	sub    BYTE PTR [eax+ebx*8+0x15],bh
  421933:	mov    ah,0xfd
  421935:	and    eax,0x3c5108a6
  42193a:	fsub   QWORD PTR [bx+di-0x4ce1]
  42193f:	repz inc esi
  421941:	xor    eax,0x4385ac86
  421946:	or     bh,BYTE PTR [ecx]
  421948:	fprem  
  42194a:	jle    0x421919
  42194c:	fdivr  QWORD PTR [ecx]
  42194e:	adc    BYTE PTR [esp+edx*1-0x59],0xb4
  421953:	into   
  421954:	cld    
  421955:	add    al,0x88
  421958:	and    al,0x8f
  42195a:	cmp    DWORD PTR [ecx+0x307eda4d],ecx
  421960:	mov    gs,WORD PTR [edi+0xd]
  421963:	mov    BYTE PTR [eax],cl
  421965:	adc    al,0x77
  421967:	idiv   DWORD PTR [ebx+ecx*4+0x3f6e2848]
  42196e:	push   ss
  42196f:	scas   al,BYTE PTR es:[edi]
  421970:	cmp    edx,0x15
  421973:	sbb    BYTE PTR [ebx-0x2d1458fc],bl
  421979:	rcr    BYTE PTR [edi-0x36],0xdc
  42197d:	dec    ebp
  42197e:	push   eax
  42197f:	sub    DWORD PTR [edi+edi*4+0x47],esp
  421983:	or     BYTE PTR [edi],dl
  421985:	loope  0x4219d5
  421987:	popf   
  421988:	punpckldq mm7,DWORD PTR [edi+0x33101c9e]
  42198f:	jmp    0x4219b3
  421991:	xor    BYTE PTR [ebx],bl
  421993:	pop    ebp
  421994:	cs out 0x5c,eax
  421997:	ja     0x421924
  421999:	jne    0x4219a4
  42199b:	out    dx,al
  42199c:	in     eax,dx
  42199d:	repz xchg ecx,eax
  42199f:	mov    dl,0x8a
  4219a1:	out    0x11,al
  4219a3:	imul   esp,DWORD PTR [edx],0x262568f4
  4219a9:	jmp    0x42192d
  4219ab:	mov    ds:0x55cab837,al
  4219b0:	fadd   QWORD PTR [edx+0x35ff18d2]
  4219b6:	mul    BYTE PTR [ebp+0x4cdb0723]
  4219bc:	retf   0x604f
  4219bf:	push   eax
  4219c0:	lods   al,BYTE PTR ds:[esi]
  4219c1:	pop    edi
  4219c2:	cmp    DWORD PTR [ecx+0x6e],edi
  4219c5:	shr    dl,cl
  4219c7:	mov    dl,0x63
  4219c9:	(bad)  
  4219ca:	outs   dx,BYTE PTR ds:[esi]
  4219cb:	adc    eax,0x911b7aef
  4219d0:	or     edi,DWORD PTR [eax*4+0x687472e2]
  4219d7:	stos   DWORD PTR es:[edi],eax
  4219d8:	sub    BYTE PTR [edi+0x31853bb6],ch
  4219de:	fnstcw WORD PTR [ebx+ecx*4]
  4219e1:	inc    esi
  4219e2:	jg     0x421a5d
  4219e4:	fnstcw WORD PTR [edi+0x4e]
  4219e7:	xor    al,0x89
  4219e9:	xor    bl,BYTE PTR [edi-0x3c]
  4219ec:	rol    DWORD PTR [edx],cl
  4219ee:	mov    cl,0x62
  4219f0:	sub    al,0x8f
  4219f2:	mov    dh,0xe1
  4219f4:	loop   0x421a67
  4219f6:	arpl   bx,ax
  4219f8:	push   ebx
  4219f9:	cmp    BYTE PTR [eax+0x6b],ch
  4219fc:	or     BYTE PTR [esi+0x5c2f25bf],ch
  421a02:	mov    DWORD PTR [esi],0xbb29296d
  421a08:	mov    ecx,0xb8255c5
  421a0d:	fcmovb st,st(6)
  421a0f:	lods   eax,DWORD PTR ds:[esi]
  421a10:	sbb    al,0x47
  421a12:	js     0x4219ec
  421a14:	imul   ebp,DWORD PTR [ebx+0x1f],0x81bde6ad
  421a1b:	xchg   ebx,eax
  421a1c:	inc    ecx
  421a1d:	xchg   ebp,eax
  421a1e:	scas   al,BYTE PTR es:[edi]
  421a1f:	jl     0x421a65
  421a21:	mov    ecx,0xc82fa364
  421a26:	lock call 0x2806c356
  421a2c:	loop   0x4219b4
  421a2e:	xor    DWORD PTR [edx],edx
  421a30:	cs aad 0xf3
  421a33:	mov    al,0x82
  421a35:	(bad)  
  421a36:	jg     0x421a25
  421a38:	jle    0x421a1f
  421a3a:	dec    edx
  421a3b:	push   cs
  421a3c:	or     eax,0x90705d99
  421a41:	mov    esi,0xf442c602
  421a46:	dec    ecx
  421a47:	sub    eax,0x6dffe42a
  421a4c:	or     al,ah
  421a4e:	ss pop ecx
  421a50:	jle    0x421a66
  421a52:	pop    ebx
  421a53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a54:	and    DWORD PTR [edx+esi*8-0x6b],ecx
  421a58:	mov    gs,WORD PTR [ebx-0x58c9d404]
  421a5e:	mov    edi,DWORD PTR [ebx+0x61]
  421a61:	call   0x4cd1:0x93d9abb7
  421a68:	or     edx,ecx
  421a6a:	cmp    DWORD PTR [ebx+0x6b],edi
  421a6d:	push   esp
  421a6e:	aaa    
  421a6f:	inc    ebp
  421a70:	out    0x63,al
  421a72:	push   ebx
  421a73:	or     DWORD PTR [edx+0x46],edi
  421a76:	mov    edi,0xad0dc489
  421a7b:	add    eax,0xbbe7f120
  421a80:	xor    eax,0x1af48e7e
  421a85:	inc    esi
  421a86:	call   0x301b5c05
  421a8b:	mov    DWORD PTR [ebp-0x67],eax
  421a8e:	ror    BYTE PTR [edx],0x6
  421a91:	enter  0xd250,0xf2
  421a95:	hlt    
  421a96:	adc    bl,BYTE PTR [ecx-0x74]
  421a99:	xchg   ebx,eax
  421a9a:	ds or  dl,ch
  421a9d:	in     al,dx
  421a9e:	pop    edi
  421a9f:	mov    ebx,0x97529edc
  421aa4:	ins    BYTE PTR es:[edi],dx
  421aa5:	mov    eax,0xabfff8bd
  421aaa:	inc    edi
  421aab:	out    0x7b,al
  421aad:	nop
  421aae:	test   BYTE PTR [esi],0x14
  421ab1:	je     0x421b1a
  421ab3:	imul   DWORD PTR [edi-0x633c63df]
  421ab9:	pop    ebx
  421aba:	xchg   ebp,eax
  421abb:	push   esp
  421abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421abd:	push   edx
  421abe:	xchg   bh,bh
  421ac0:	xchg   DWORD PTR [esi+0xa],ebp
  421ac3:	mov    esi,0xda16f3ad
  421ac9:	mov    ebp,0x6a1fcfcf
  421ace:	inc    ebx
  421acf:	int    0x45
  421ad1:	xor    eax,0x51f8979e
  421ad6:	loop   0x421aeb
  421ad8:	push   0xb6b47891
  421add:	in     eax,0xec
  421adf:	fldenv [ebx+0x1a]
  421ae2:	pop    esp
  421ae3:	inc    esi
  421ae4:	in     al,dx
  421ae5:	pop    edx
  421ae6:	sar    BYTE PTR [esi],cl
  421ae8:	arpl   WORD PTR [edi],bp
  421aea:	pop    esi
  421aeb:	xor    BYTE PTR [edx+eiz*2+0x63bc3c5e],ah
  421af2:	xor    ebp,DWORD PTR [ecx+0x528b9598]
  421af8:	xor    eax,0x5865bc8d
  421afd:	sbb    ch,dl
  421aff:	leave  
  421b00:	add    ch,bl
  421b02:	sbb    al,0xe8
  421b04:	out    0xc9,al
  421b06:	or     ebp,DWORD PTR [ecx+0x49]
  421b09:	add    al,0x9c
  421b0b:	jmp    0x421b1f
  421b0d:	pop    ds
  421b0e:	ins    BYTE PTR es:[edi],dx
  421b0f:	loop   0x421aaf
  421b11:	lahf   
  421b12:	popa   
  421b13:	ja     0x421a99
  421b15:	clc    
  421b16:	ins    DWORD PTR es:[edi],dx
  421b17:	lahf   
  421b18:	pop    edi
  421b19:	cmp    DWORD PTR [eax+0x4e],0x1c85156c
  421b20:	mov    dh,0x0
  421b22:	test   BYTE PTR [edi-0x23051734],0x44
  421b29:	fs in  eax,dx
  421b2b:	(bad)  [ebp+ebx*8-0x4c]
  421b2f:	(bad)  
  421b30:	aad    0xa0
  421b32:	push   esp
  421b33:	xor    ecx,DWORD PTR [ebp+0x32edeb70]
  421b39:	xor    BYTE PTR [ecx-0x67],ah
  421b3c:	(bad)  
  421b3e:	int3   
  421b3f:	or     esi,0x9af75d9e
  421b45:	rol    BYTE PTR [edx+0x31a85f02],cl
  421b4b:	dec    BYTE PTR [esi]
  421b4d:	xor    DWORD PTR [ecx],edi
  421b4f:	mov    ebp,0x716fcc5c
  421b54:	pop    edi
  421b55:	jg     0x421aea
  421b57:	dec    edx
  421b58:	mov    esi,0xc2508964
  421b5d:	pop    esp
  421b5e:	dec    esp
  421b5f:	sti    
  421b60:	dec    esi
  421b61:	mov    dl,0xa4
  421b63:	daa    
  421b64:	test   dh,al
  421b66:	or     eax,0x22c28bbe
  421b6b:	xor    ecx,eax
  421b6d:	jbe    0x421bab
  421b6f:	nop
  421b70:	lods   al,BYTE PTR ds:[esi]
  421b71:	dec    ecx
  421b72:	lods   eax,DWORD PTR ds:[esi]
  421b73:	ret    
  421b74:	push   es
  421b75:	test   DWORD PTR [edi],0xd74ed393
  421b7b:	mov    ebp,0x436baf3a
  421b80:	hlt    
  421b81:	and    al,0xdd
  421b83:	pop    eax
  421b84:	ss or  eax,ebp
  421b87:	adc    BYTE PTR [ebp+0x1d],cl
  421b8a:	aas    
  421b8b:	cmp    esi,ebp
  421b8d:	or     ah,BYTE PTR [edx+0x57]
  421b90:	ins    BYTE PTR es:[edi],dx
  421b91:	stos   DWORD PTR es:[edi],eax
  421b92:	cmp    DWORD PTR [edx-0x2963f653],esi
  421b98:	add    edx,ebx
  421b9a:	cmp    esi,DWORD PTR [edi]
  421b9c:	add    eax,0x791ecd2f
  421ba1:	je     0x421b5e
  421ba3:	cmc    
  421ba4:	and    ecx,DWORD PTR [edi]
  421ba6:	fdiv   st(7),st
  421ba8:	sub    al,0x12
  421baa:	xlat   BYTE PTR ds:[ebx]
  421bab:	xor    esi,esp
  421bad:	rol    BYTE PTR [eax+0x304c210c],1
  421bb3:	and    esi,esi
  421bb5:	fistp  DWORD PTR [ebp-0x36]
  421bb8:	push   eax
  421bb9:	add    esp,DWORD PTR [esi+0x60]
  421bbc:	or     BYTE PTR [edx],dh
  421bbe:	cli    
  421bbf:	xor    al,0x7a
  421bc1:	pop    es
  421bc2:	cwde   
  421bc3:	jecxz  0x421c40
  421bc5:	sub    DWORD PTR [eax+0xc],edx
  421bc8:	nop
  421bc9:	imul   eax,DWORD PTR [eax],0xe356bdd3
  421bcf:	lds    esi,FWORD PTR [ebx]
  421bd1:	dec    ebp
  421bd2:	jae    0x421bbb
  421bd4:	shr    DWORD PTR [esi],0x79
  421bd7:	mov    al,ds:0xc7025a74
  421bdc:	call   0x8245:0x9524de28
  421be3:	and    cl,bl
  421be5:	cld    
  421be6:	inc    edi
  421be7:	jo     0x421c51
  421be9:	adc    dl,BYTE PTR [esi+ebx*8+0x5148e85]
  421bf0:	mov    cl,0x36
  421bf2:	aaa    
  421bf3:	mov    al,0xd9
  421bf5:	dec    eax
  421bf6:	sub    esi,DWORD PTR [ebx]
  421bf8:	fist   DWORD PTR [eax+eax*1+0x40]
  421bfc:	add    ax,0xe3ef
  421c00:	fmul   QWORD PTR [esi-0x17]
  421c03:	sbb    dh,BYTE PTR [edx-0xec9ac4e]
  421c09:	xchg   esp,eax
  421c0a:	loope  0x421c72
  421c0c:	add    al,0x62
  421c0e:	fwait
  421c0f:	sbb    al,0xcf
  421c11:	sub    ch,ah
  421c13:	inc    edi
  421c14:	mov    dl,0xd
  421c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c17:	pop    ss
  421c18:	inc    eax
  421c19:	pop    ebx
  421c1a:	add    ah,BYTE PTR [edi+edi*2+0x50bf21ea]
  421c21:	dec    edi
  421c22:	lahf   
  421c23:	or     eax,0x71dd1536
  421c28:	xchg   ebx,eax
  421c29:	stos   DWORD PTR es:[edi],eax
  421c2a:	dec    eax
  421c2b:	inc    esi
  421c2c:	adc    esi,ebp
  421c2e:	cwde   
  421c2f:	popf   
  421c30:	xor    DWORD PTR [edi+0x16],esi
  421c33:	xor    DWORD PTR [ecx+0x4968b0db],eax
  421c39:	xchg   esp,eax
  421c3a:	xchg   ebp,eax
  421c3b:	retf   0x5f38
  421c3e:	mov    al,ds:0x92ae967
  421c43:	add    al,0xcd
  421c45:	pop    ecx
  421c46:	sahf   
  421c47:	xor    ebp,DWORD PTR [edi+0x6e]
  421c4a:	mov    ch,0xee
  421c4c:	ds cld 
  421c4e:	push   0x2b
  421c50:	sub    BYTE PTR [ecx],ch
  421c52:	(bad)  
  421c53:	push   cs
  421c54:	(bad)  [ebp-0x37]
  421c57:	es ja  0x421c45
  421c5a:	(bad)  [esi+0x5fc55f76]
  421c60:	fnstenv [edx-0x2bc63f45]
  421c66:	bound  ebp,QWORD PTR [esi]
  421c68:	xchg   ebx,eax
  421c69:	mov    eax,ds:0x254f3cd9
  421c6e:	mov    ah,0x23
  421c70:	sbb    eax,0x7135b78c
  421c75:	mov    eax,ds:0xd0fb60e1
  421c7a:	add    bl,BYTE PTR ds:0x1e7191c8
  421c80:	mov    ecx,0x3a40a1c6
  421c85:	bound  edi,QWORD PTR [eax+edi*4+0x7d]
  421c89:	ja     0x421cbb
  421c8b:	cwde   
  421c8c:	pop    esi
  421c8d:	loop   0x421c47
  421c8f:	push   ss
  421c90:	inc    dl
  421c92:	fmul   st,st(2)
  421c94:	rcr    DWORD PTR [ebp+0x76],cl
  421c97:	test   DWORD PTR [eax+0x27],edi
  421c9a:	in     al,dx
  421c9b:	mov    al,0xf3
  421c9d:	push   0x7a38a6cc
  421ca2:	pop    ebp
  421ca3:	dec    ebp
  421ca4:	mov    dh,0x7a
  421ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ca7:	mov    ebx,0x79722c84
  421cac:	mov    dl,0x60
  421cae:	fdivrp st(2),st
  421cb0:	lds    ebp,FWORD PTR [eax]
  421cb2:	ror    bl,0x71
  421cb5:	jnp    0x421c45
  421cb7:	mov    ch,0xde
  421cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cba:	sbb    ch,dh
  421cbc:	mov    esp,0xec745b51
  421cc1:	adc    DWORD PTR [edx+0x6e],edx
  421cc4:	mov    ebx,0xb1127260
  421cc9:	pop    esi
  421cca:	shl    DWORD PTR [ecx-0x3a38b93d],0x61
  421cd1:	in     al,0x6a
  421cd3:	outs   dx,DWORD PTR ds:[esi]
  421cd4:	pop    ss
  421cd5:	scas   ax,WORD PTR es:[edi]
  421cd7:	xchg   BYTE PTR [ebp-0x3817977b],ah
  421cdd:	mov    bl,0x48
  421cdf:	adc    al,BYTE PTR [ebp-0x6d]
  421ce2:	test   BYTE PTR [ecx+0x48],ch
  421ce5:	add    DWORD PTR [ecx],esp
  421ce7:	xchg   esp,eax
  421ce8:	fst    DWORD PTR [edx+0x2cf8d18f]
  421cee:	and    eax,0xe5a0a964
  421cf3:	mov    ch,0x97
  421cf5:	es mov ah,0x93
  421cf8:	sub    eax,0x2dedef6f
  421cfd:	pop    es
  421cfe:	(bad)  
  421cff:	mov    cl,0xbf
  421d01:	mov    eax,ds:0x9581b1a4
  421d06:	mov    esp,0xba506fa4
  421d0b:	mov    ds:0xee5b2b28,al
  421d10:	js     0x421d7b
  421d12:	(bad)  
  421d13:	in     al,0x1d
  421d15:	jb     0x421c97
  421d17:	xchg   esp,eax
  421d18:	jg     0x421cd0
  421d1a:	jl     0x421cb2
  421d1c:	sbb    al,0xa7
  421d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d1f:	call   0x7173:0xda82cdbb
  421d26:	clc    
  421d27:	dec    ebp
  421d28:	fdivrp st(6),st
  421d2a:	ds adc eax,0x41a81967
  421d30:	cld    
  421d31:	bound  ebp,QWORD PTR [edi-0x6b385616]
  421d37:	ja     0x421d8f
  421d39:	sub    al,0x47
  421d3b:	add    DWORD PTR [esi+0x1c],edx
  421d3e:	or     ebx,DWORD PTR ds:0xd2dd4276
  421d44:	xchg   esp,eax
  421d45:	xchg   edi,eax
  421d46:	fst    QWORD PTR [edx-0x6fa927b7]
  421d4c:	into   
  421d4d:	mov    ebx,0xabe3f5d0
  421d52:	inc    ebp
  421d53:	sbb    bl,cl
  421d55:	push   ebx
  421d56:	pusha  
  421d57:	xchg   edx,eax
  421d58:	sahf   
  421d59:	ss (bad) 
  421d5b:	sbb    BYTE PTR [eax],dl
  421d5d:	inc    eax
  421d5e:	dec    edx
  421d5f:	or     BYTE PTR [ebx+0x1e3dc7bb],ah
  421d65:	call   0xd31a1f3e
  421d6a:	stc    
  421d6b:	arpl   WORD PTR [ecx],bx
  421d6d:	test   eax,0x5307dc76
  421d72:	iret   
  421d73:	mov    bh,0xbe
  421d75:	jmp    0x421d8f
  421d77:	push   esi
  421d78:	not    DWORD PTR [eax+eax*1-0x4b26ee6e]
  421d7f:	push   ds
  421d80:	mov    esp,?
  421d82:	daa    
  421d83:	in     al,0x5d
  421d85:	inc    ebx
  421d86:	(bad)  
  421d87:	jg     0x421d6b
  421d89:	pop    esp
  421d8a:	(bad)  [ebp-0x5a]
  421d8d:	retf   0xd5fc
  421d90:	(bad)  
  421d91:	xor    ch,BYTE PTR [eax+0x45]
  421d94:	clc    
  421d95:	sub    ecx,esp
  421d97:	icebp  
  421d98:	dec    ecx
  421d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d9a:	rcl    DWORD PTR [ebx-0x54dad6dc],1
  421da0:	dec    eax
  421da1:	inc    ebx
  421da2:	push   ds
  421da3:	(bad)  
  421da4:	push   esp
  421da5:	stc    
  421da6:	push   eax
  421da7:	rcl    DWORD PTR [ecx],cl
  421da9:	and    al,0x3a
  421dab:	mov    eax,ds:0xb0415ee0
  421db0:	cmc    
  421db1:	sub    esp,ebp
  421db3:	aam    0xc7
  421db5:	jns    0x421d7a
  421db7:	sub    DWORD PTR [edi+0x53],ebx
  421dba:	xor    ebp,ebx
  421dbc:	jl     0x421e26
  421dbe:	jae    0x421e21
  421dc0:	fsubr  st(6),st
  421dc2:	stos   BYTE PTR es:[edi],al
  421dc3:	pop    edi
  421dc4:	in     al,0xa3
  421dc6:	jns    0x421e0d
  421dc8:	sahf   
  421dc9:	sbb    eax,DWORD PTR [ebx+0x0]
  421dcc:	ja     0x421ddd
  421dce:	mov    ds:0xfa3e3f0,al
  421dd3:	imul   eax,DWORD PTR [ebx],0xf12e285d
  421dd9:	add    al,0xdc
  421ddb:	stc    
  421ddc:	xor    BYTE PTR [ecx],bl
  421dde:	push   ds
  421ddf:	sahf   
  421de0:	jecxz  0x421dd0
  421de2:	mov    edi,0xc0dd51ec
  421de7:	sti    
  421de8:	add    bl,BYTE PTR [edx+0x31]
  421deb:	push   0x9c5519f9
  421df0:	or     eax,0x58852037
  421df5:	jl     0x421d7f
  421df7:	retf   0x97b3
  421dfa:	cmp    edi,DWORD PTR [eax+0x51565572]
  421e00:	xor    eax,DWORD PTR [edi]
  421e02:	leave  
  421e03:	es jnp 0x421e1b
  421e06:	push   edx
  421e07:	ror    DWORD PTR [esi],0x54
  421e0a:	mov    ds:0xc49dcf55,al
  421e0f:	test   DWORD PTR [ecx-0x71],0x3b64b872
  421e16:	(bad)  
  421e17:	cmp    eax,0xc8850b
  421e1c:	test   BYTE PTR [eax],ah
  421e1e:	pop    ebp
  421e1f:	push   cs
  421e20:	and    eax,0xc8cf6c6e
  421e25:	sub    DWORD PTR [ebx-0x69],esp
  421e28:	jp     0x421df8
  421e2a:	jns    0x421e86
  421e2c:	cmp    DWORD PTR [ebp+0x4b],ebp
  421e2f:	je     0x421dbf
  421e31:	mov    eax,ds:0x9dc5aeca
  421e36:	fimul  WORD PTR [ecx+ebx*2]
  421e39:	push   edi
  421e3a:	jmp    0x421e9a
  421e3c:	xchg   dl,al
  421e3e:	mov    cl,0x81
  421e40:	jl     0x421e5d
  421e42:	fs add al,0x5b
  421e45:	mov    ebx,0x26ca78b9
  421e4a:	sub    dl,BYTE PTR [ecx]
  421e4c:	aad    0x62
  421e4e:	fmul   DWORD PTR [ebp-0x2f]
  421e51:	pop    esp
  421e52:	enter  0x632a,0xe5
  421e56:	xchg   ecx,eax
  421e57:	push   ss
  421e58:	adc    BYTE PTR [eax-0x17774b91],ah
  421e5e:	sbb    al,0x28
  421e60:	and    DWORD PTR [ecx+0x63],ebp
  421e63:	std    
  421e64:	(bad)  
  421e65:	fwait
  421e66:	packssdw mm4,QWORD PTR [ebx+eax*1-0x37]
  421e6b:	push   cs
  421e6c:	hlt    
  421e6d:	popa   
  421e6e:	daa    
  421e6f:	sub    eax,0xbc09bcb5
  421e74:	mov    cs,ebp
  421e76:	add    al,0x87
  421e78:	pop    esp
  421e79:	ret    0xda89
  421e7c:	mov    esp,0xbd643de7
  421e81:	fnclex 
  421e83:	or     dh,dl
  421e85:	ret    
  421e86:	lock ds dec ecx
  421e89:	sub    al,0x2
  421e8b:	xor    eax,0x3cbdcec
  421e90:	call   0xcfdb0be6
  421e95:	not    BYTE PTR [edx]
  421e97:	lea    edx,[ebx+0x885feba]
  421e9d:	out    dx,al
  421e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e9f:	inc    edx
  421ea0:	in     al,0x11
  421ea2:	dec    edx
  421ea3:	push   0x36
  421ea5:	test   eax,0xe91d2d20
  421eaa:	cmp    al,0x99
  421eac:	fadd   DWORD PTR [ebx-0x5e363d51]
  421eb2:	lahf   
  421eb3:	pop    ss
  421eb4:	push   ecx
  421eb5:	xor    eax,0x3258102a
  421eba:	mov    al,0xc6
  421ebc:	sub    eax,0x38f1486b
  421ec1:	repnz (bad) 
  421ec3:	mov    bh,BYTE PTR [ecx+0x2111ae0a]
  421ec9:	je     0x421f15
  421ecb:	or     edx,edi
  421ecd:	invd   
  421ecf:	ret    0xb853
  421ed2:	push   eax
  421ed3:	xchg   esp,eax
  421ed4:	mov    bh,0xa6
  421ed6:	adc    esi,esp
  421ed8:	adc    esi,DWORD PTR [edi-0x734e49eb]
  421ede:	das    
  421edf:	adc    al,0x79
  421ee1:	sub    BYTE PTR [ebp-0x1a],al
  421ee4:	lods   al,BYTE PTR ds:[esi]
  421ee5:	sahf   
  421ee6:	icebp  
  421ee7:	test   eax,0x4112dbd9
  421eec:	push   esi
  421eed:	mov    ecx,0x8bba70f1
  421ef2:	fs sub al,0xcc
  421ef5:	cmp    ecx,esp
  421ef7:	push   esi
  421ef8:	jns    0x421e93
  421efa:	mov    ebx,0x39ccd351
  421eff:	sub    ebx,esp
  421f01:	cmp    eax,0xf37d5bba
  421f06:	inc    ecx
  421f07:	inc    edx
  421f08:	stos   DWORD PTR es:[edi],eax
  421f09:	mov    ebp,0x44b68de5
  421f0e:	adc    al,0x65
  421f10:	or     BYTE PTR [esi-0x71],ah
  421f13:	mov    cl,0x2a
  421f15:	jae    0x421f77
  421f17:	xor    DWORD PTR [ebx-0x42],eax
  421f1a:	sar    BYTE PTR [ebx+0x40],0x6a
  421f1e:	add    al,0x2b
  421f20:	cmp    ebx,DWORD PTR [esi]
  421f22:	pop    ds
  421f23:	popa   
  421f24:	push   eax
  421f25:	bndstx [ebx],(bad)
  421f28:	in     al,0xaa
  421f2a:	cmc    
  421f2b:	mov    edi,0x6cecc176
  421f30:	pop    es
  421f31:	pop    eax
  421f32:	retf   0x6c28
  421f35:	sbb    BYTE PTR [edx-0x7b],0x4d
  421f39:	xchg   esi,eax
  421f3a:	mov    edi,0xc579e43d
  421f3f:	jo     0x421fbc
  421f41:	mov    ebp,0xe0c260be
  421f46:	js     0x421f0c
  421f48:	xor    ch,BYTE PTR [ecx]
  421f4a:	xchg   edx,eax
  421f4b:	ins    DWORD PTR es:[edi],dx
  421f4c:	mov    edi,0x563160e9
  421f51:	test   DWORD PTR [ebp+ebx*8-0x26],0xfea0be72
  421f59:	dec    ebp
  421f5a:	lea    esi,[ecx-0x4141c040]
  421f60:	pop    eax
  421f61:	(bad)  
  421f62:	pop    ebx
  421f63:	lock xchg ebx,eax
  421f65:	inc    esi
  421f66:	push   cs
  421f67:	sub    BYTE PTR [ebx+edx*8+0x1],ah
  421f6b:	sbb    dl,bh
  421f6d:	lods   eax,DWORD PTR ds:[esi]
  421f6e:	ficomp DWORD PTR gs:[eax]
  421f71:	ret    
  421f72:	dec    esp
  421f73:	mov    ds:0x8b084d8b,al
  421f78:	push   ebp
  421f79:	clc    
  421f7a:	xor    ecx,eax
  421f7c:	xor    edx,eax
  421f7e:	sub    ecx,edx
  421f80:	sub    ecx,esi
  421f82:	xor    ecx,eax
  421f84:	mov    DWORD PTR [ebp+0x8],ecx
  421f87:	mov    ecx,DWORD PTR [ebp+0x8]
  421f8a:	mov    edx,DWORD PTR [ebp-0x58]
  421f8d:	add    ecx,0x5708fa
  421f93:	imul   ecx,edx
  421f96:	mov    DWORD PTR [ebp-0x58],ecx
  421f99:	mov    ecx,DWORD PTR [ebp+0x8]
  421f9c:	mov    edx,DWORD PTR [ebp-0x54]
  421f9f:	add    ecx,0x64f898
  421fa5:	or     ecx,edx
  421fa7:	mov    DWORD PTR [ebp-0x54],ecx
  421faa:	mov    ecx,DWORD PTR [ebp+0x8]
  421fad:	mov    edx,DWORD PTR [ebp-0x50]
  421fb0:	add    ecx,0x242ebc9
  421fb6:	xor    ecx,edx
  421fb8:	mov    DWORD PTR [ebp-0x50],ecx
  421fbb:	mov    ecx,DWORD PTR [ebp+0x8]
  421fbe:	mov    edx,DWORD PTR [ebp-0x4c]
  421fc1:	add    ecx,edi
  421fc3:	and    ecx,edx
  421fc5:	mov    DWORD PTR [ebp-0x4c],ecx
  421fc8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fcb:	mov    edx,DWORD PTR [ebp-0x48]
  421fce:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421fd5:	mov    DWORD PTR [ebp-0x48],ecx
  421fd8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fdb:	mov    edx,0xfa5e1524
  421fe0:	sub    edx,ecx
  421fe2:	add    edx,DWORD PTR [ebp-0x44]
  421fe5:	mov    DWORD PTR [ebp-0x44],edx
  421fe8:	mov    ecx,DWORD PTR [ebp+0x8]
  421feb:	xor    ecx,eax
  421fed:	add    ecx,esi
  421fef:	jne    0x421f74
  421ff5:	mov    ecx,DWORD PTR [ebp-0x8]
  421ff8:	xor    ecx,eax
  421ffa:	mov    eax,DWORD PTR [ebp+0x10]
  421ffd:	add    ecx,esi
  421fff:	mov    DWORD PTR [eax],ecx
  422001:	pop    edi
  422002:	pop    esi
  422003:	pop    ebx
  422004:	leave  
  422005:	ret    0xc
  422008:	push   ebp
  422009:	mov    ebp,esp
  42200b:	sub    esp,0x78
  42200e:	and    DWORD PTR ds:0x42a26e,0x0
  422018:	jmp    0x42202a
  42201d:	mov    ecx,DWORD PTR ds:0x42a26e
  422023:	inc    ecx
  422024:	mov    DWORD PTR ds:0x42a26e,ecx
  42202a:	cmp    DWORD PTR ds:0x42a26e,0x18
  422031:	jae    0x422079
  422037:	cmp    DWORD PTR ds:0x42a26e,0x4
  42203e:	ja     0x422079
  422044:	jmp    0x42205a
  422049:	push   DWORD PTR [ebp-0x14]
  42204c:	push   0x3437
  422051:	push   DWORD PTR [ebp-0x10]
  422054:	call   DWORD PTR ds:0x42a3da
  42205a:	cmp    DWORD PTR ds:0x42a26e,0x3
  422061:	jne    0x422074
  422067:	mov    ecx,DWORD PTR ds:0x42a26e
  42206d:	inc    ecx
  42206e:	mov    DWORD PTR ds:0x42a26e,ecx
  422074:	jmp    0x42201d
  422079:	push   esi
  42207a:	push   edi
  42207b:	and    DWORD PTR ds:0x42a2d2,0x0
  422085:	jmp    0x422097
  42208a:	mov    edi,DWORD PTR ds:0x42a2d2
  422090:	inc    edi
  422091:	mov    DWORD PTR ds:0x42a2d2,edi
  422097:	cmp    DWORD PTR ds:0x42a2d2,0x1c
  42209e:	jae    0x4220f2
  4220a4:	cmp    DWORD PTR ds:0x42a2d2,0xb
  4220ab:	jle    0x4220f2
  4220b1:	jmp    0x4220d3
  4220b6:	push   0x87a7
  4220bb:	push   0x2194
  4220c0:	push   0x6620
  4220c5:	push   DWORD PTR [ebp-0x24]
  4220c8:	push   0x42a25e
  4220cd:	call   DWORD PTR ds:0x42a3de
  4220d3:	cmp    DWORD PTR ds:0x42a2d2,0xa
  4220da:	jne    0x4220ed
  4220e0:	mov    edi,DWORD PTR ds:0x42a2d2
  4220e6:	inc    edi
  4220e7:	mov    DWORD PTR ds:0x42a2d2,edi
  4220ed:	jmp    0x42208a
  4220f2:	mov    eax,ds:0x42941e
  4220f7:	adc    ecx,esi
  4220f9:	mov    DWORD PTR [ebp-0x24],eax
  4220fc:	mov    DWORD PTR ds:0x42a27a,0x1f
  422106:	cmp    DWORD PTR ds:0x42a27a,0x0
  42210d:	je     0x422145
  422113:	cmp    DWORD PTR ds:0x42a27a,0x24
  42211a:	ja     0x422145
  422120:	jmp    0x422133
  422125:	push   DWORD PTR [ebp-0x20]
  422128:	push   0x807a
  42212d:	call   DWORD PTR ds:0x42a3e2
  422133:	mov    ecx,DWORD PTR ds:0x42a27a
  422139:	dec    ecx
  42213a:	mov    DWORD PTR ds:0x42a27a,ecx
  422140:	jmp    0x422106
  422145:	mov    eax,ds:0x42953e
  42214a:	and    DWORD PTR ds:0x42a2e2,0x0
  422154:	jmp    0x422168
  422159:	xor    edi,edi
  42215b:	xor    edi,DWORD PTR ds:0x42a2e2
  422161:	inc    edi
  422162:	mov    DWORD PTR ds:0x42a2e2,edi
  422168:	cmp    DWORD PTR ds:0x42a2e2,0x19
  42216f:	jae    0x422197
  422175:	cmp    DWORD PTR ds:0x42a2e2,0x1e
  42217c:	jge    0x422197
  422182:	jmp    0x422192
  422187:	push   0x2c0a
  42218c:	call   DWORD PTR ds:0x42a3ea
  422192:	jmp    0x422159
  422197:	mov    DWORD PTR [ebp-0x30],eax
  42219a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4221a1:	sbb    DWORD PTR ds:0x42a25a,edx
  4221a7:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  4221ae:	mov    DWORD PTR ds:0x42a27a,0x1d
  4221b8:	cmp    DWORD PTR ds:0x42a27a,0x0
  4221bf:	je     0x422218
  4221c5:	cmp    DWORD PTR ds:0x42a27a,0xf
  4221cc:	jge    0x422218
  4221d2:	jmp    0x4221ec
  4221d7:	push   0x8cd0
  4221dc:	push   0x429247
  4221e1:	push   0x429247
  4221e6:	call   DWORD PTR ds:0x42a3b6
  4221ec:	cmp    DWORD PTR ds:0x42a27a,0x10
  4221f3:	jne    0x422206
  4221f9:	mov    ecx,DWORD PTR ds:0x42a27a
  4221ff:	dec    ecx
  422200:	mov    DWORD PTR ds:0x42a27a,ecx
  422206:	mov    ecx,DWORD PTR ds:0x42a27a
  42220c:	dec    ecx
  42220d:	mov    DWORD PTR ds:0x42a27a,ecx
  422213:	jmp    0x4221b8
  422218:	mov    eax,DWORD PTR [ebp-0x10]
  42221b:	and    DWORD PTR ds:0x42a256,0x0
  422225:	jmp    0x422237
  42222a:	mov    esi,DWORD PTR ds:0x42a256
  422230:	inc    esi
  422231:	mov    DWORD PTR ds:0x42a256,esi
  422237:	cmp    DWORD PTR ds:0x42a256,0x14
  42223e:	jae    0x42226b
  422244:	cmp    DWORD PTR ds:0x42a256,0x1b
  42224b:	jl     0x42226b
  422251:	jmp    0x422266
  422256:	push   0x42913d
  42225b:	push   0x400000
  422260:	call   DWORD PTR ds:0x42a3ba
  422266:	jmp    0x42222a
  42226b:	mov    ecx,DWORD PTR [ebp-0x10]
  42226e:	mov    DWORD PTR ds:0x42a25e,0x2ef8
  422278:	sub    eax,ecx
  42227a:	and    DWORD PTR ds:0x42a2c2,0x0
  422284:	mov    edi,DWORD PTR ds:0x42a2c2
  42228a:	inc    edi
  42228b:	mov    DWORD PTR ds:0x42a2c2,edi
  422291:	cmp    DWORD PTR ds:0x42a2c2,0x7
  422298:	jbe    0x4222e0
  42229e:	jmp    0x4222b9
  4222a3:	push   DWORD PTR [ebp-0x1c]
  4222a6:	push   DWORD PTR [ebp-0x24]
  4222a9:	push   0x5955
  4222ae:	push   0x5167
  4222b3:	call   DWORD PTR ds:0x42a3be
  4222b9:	cmp    DWORD PTR ds:0x42a2c2,0x6
  4222c0:	jne    0x4222d3
  4222c6:	mov    edi,DWORD PTR ds:0x42a2c2
  4222cc:	inc    edi
  4222cd:	mov    DWORD PTR ds:0x42a2c2,edi
  4222d3:	cmp    DWORD PTR ds:0x42a2c2,0x13
  4222da:	jb     0x422284
  4222e0:	mov    DWORD PTR [ebp-0x10],eax
  4222e3:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4222ea:	mov    eax,DWORD PTR [ebp-0x18]
  4222ed:	mov    ecx,DWORD PTR [ebp-0x18]
  4222f0:	sub    eax,ecx
  4222f2:	mov    DWORD PTR [ebp-0x18],eax
  4222f5:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4222fc:	mov    eax,DWORD PTR [ebp-0xc]
  4222ff:	mov    ecx,DWORD PTR [ebp-0xc]
  422302:	sub    eax,ecx
  422304:	mov    DWORD PTR [ebp-0xc],eax
  422307:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42230e:	mov    eax,DWORD PTR [ebp-0x1c]
  422311:	mov    ecx,DWORD PTR [ebp-0x1c]
  422314:	sub    eax,ecx
  422316:	mov    DWORD PTR [ebp-0x1c],eax
  422319:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  422320:	mov    eax,DWORD PTR [ebp-0x20]
  422323:	mov    ecx,DWORD PTR [ebp-0x20]
  422326:	sub    eax,ecx
  422328:	mov    DWORD PTR [ebp-0x20],eax
  42232b:	mov    eax,DWORD PTR [ebp-0x2c]
  42232e:	mov    ecx,DWORD PTR [ebp-0x20]
  422331:	mov    esi,0x75108aa
  422336:	xor    eax,esi
  422338:	mov    edi,0x3272f1
  42233d:	add    eax,edi
  42233f:	or     eax,ecx
  422341:	jmp    0x42333c
  422346:	mov    dl,0x1f
  422348:	xlat   BYTE PTR ds:[ebx]
  422349:	and    edx,edx
  42234b:	mov    eax,ds:0xbec98882
  422350:	js     0x422396
  422352:	cwde   
  422353:	dec    ebx
  422354:	aad    0xe1
  422356:	sub    edx,DWORD PTR [edx+0x72a1837c]
  42235c:	add    DWORD PTR [ebx-0x6a4976c6],0xffffff97
  422363:	jge    0x422355
  422365:	iret   
  422366:	xbegin 0x60e2e72
  42236c:	xor    edx,DWORD PTR [ecx+0x7bd33e34]
  422372:	cmc    
  422373:	cmp    BYTE PTR [eax-0x7f],dh
  422376:	pop    es
  422377:	jo     0x4223ca
  422379:	fmul   QWORD PTR [eax+0x5dbaf1d0]
  42237f:	sub    al,0x9c
  422381:	pop    ebx
  422382:	and    eax,0xbb04fd70
  422387:	fs aad 0xe4
  42238a:	stc    
  42238b:	sti    
  42238c:	sub    eax,0x9e991e01
  422391:	sar    DWORD PTR [edi+0x94a8f14],1
  422397:	xlat   BYTE PTR ds:[ebx]
  422398:	mov    dh,0xc4
  42239a:	mov    ebx,0x6a518dd
  42239f:	aad    0x88
  4223a1:	sub    esi,DWORD PTR [ecx]
  4223a3:	adc    DWORD PTR [edx-0x4a2a4f1d],ebp
  4223a9:	mov    dl,0x7f
  4223ab:	pop    ebp
  4223ac:	aas    
  4223ad:	cld    
  4223ae:	out    0xe4,eax
  4223b0:	jno    0x2a59c969
  4223b6:	sub    eax,0xe448b89f
  4223bb:	lea    ebp,[ecx+ebx*1+0x76]
  4223bf:	fnsave [ebx]
  4223c1:	lods   eax,DWORD PTR ds:[esi]
  4223c2:	lock jmp 0x422383
  4223c5:	or     eax,0x6a618729
  4223ca:	hlt    
  4223cb:	or     cl,dh
  4223cd:	jg     0x422394
  4223cf:	xchg   esi,eax
  4223d0:	in     al,0x17
  4223d2:	(bad)  
  4223d4:	and    eax,0x431d6a09
  4223d9:	cmp    ecx,DWORD PTR [esi+0x12a8e0c7]
  4223df:	jmp    0x1093da4e
  4223e4:	call   0xfd8ea714
  4223e9:	ja     0x42238e
  4223eb:	(bad)  
  4223ec:	mov    ah,0x22
  4223ee:	jnp    0x42237e
  4223f0:	mov    al,ds:0x998532a9
  4223f5:	scas   al,BYTE PTR es:[edi]
  4223f6:	int3   
  4223f7:	push   0x61
  4223f9:	out    dx,eax
  4223fa:	hlt    
  4223fb:	push   cs
  4223fc:	pop    ebx
  4223fd:	repz rol ebp,0xd2
  422401:	mov    bl,0xea
  422403:	adc    BYTE PTR [edi],ch
  422405:	and    DWORD PTR [edi-0x6d],edx
  422408:	js     0x42238b
  42240a:	adc    BYTE PTR [eax-0x67d273e4],bl
  422410:	or     al,0x5
  422412:	loopne 0x422440
  422414:	pop    ds
  422415:	test   al,0xec
  422417:	inc    ebx
  422418:	dec    ebx
  422419:	add    esi,ebx
  42241b:	mov    ecx,0xbf23e8a8
  422420:	inc    ebx
  422421:	sti    
  422422:	push   ss
  422423:	mov    bl,0x8
  422425:	adc    eax,0x259a9577
  42242a:	es pop ecx
  42242c:	enter  0xabba,0x4f
  422430:	sub    ebx,edx
  422432:	fld    QWORD PTR [esi-0x22]
  422435:	rcr    esp,cl
  422437:	push   esi
  422438:	mov    ah,bl
  42243a:	sbb    edx,DWORD PTR [ebp+0x2c5ed706]
  422440:	pop    ds
  422441:	out    0xe9,al
  422443:	sub    eax,0xf90e0b51
  422448:	outs   dx,DWORD PTR ds:[esi]
  422449:	push   ebp
  42244a:	push   es
  42244b:	push   es
  42244c:	xor    esp,DWORD PTR [edi+ecx*4]
  42244f:	jnp    0x4224a8
  422451:	fdivr  st,st(0)
  422453:	and    al,0xa3
  422455:	daa    
  422456:	sub    al,0xd3
  422458:	mov    cl,0x57
  42245a:	in     al,0x1b
  42245c:	xor    DWORD PTR [ecx-0x41b92c47],esi
  422462:	outs   dx,DWORD PTR ds:[esi]
  422463:	outs   dx,BYTE PTR ds:[esi]
  422464:	pop    ecx
  422465:	push   ebp
  422466:	mov    edi,0xabf99f21
  42246b:	pop    ecx
  42246c:	sub    eax,0x7f2c5728
  422471:	mov    eax,ds:0x92b92599
  422476:	xchg   BYTE PTR [edi],bl
  422478:	cmp    eax,0x497cf665
  42247d:	clc    
  42247e:	cmp    al,0xdb
  422480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422481:	int    0xe
  422483:	es dec ecx
  422485:	jecxz  0x422483
  422487:	jmp    0x422455
  422489:	int    0xa1
  42248b:	daa    
  42248c:	adc    BYTE PTR [ecx-0x17],ah
  42248f:	sub    DWORD PTR [edx-0x6b],0x4f
  422493:	mov    ah,0xd9
  422495:	outs   dx,DWORD PTR ds:[esi]
  422496:	mov    cl,0xe5
  422498:	xor    al,0x7f
  42249a:	scas   al,BYTE PTR es:[edi]
  42249b:	(bad)  
  42249d:	enter  0xe3c1,0x98
  4224a1:	test   BYTE PTR [esi+0x51eb8994],al
  4224a7:	and    edi,edx
  4224a9:	inc    ebp
  4224aa:	in     eax,0x32
  4224ac:	dec    edi
  4224ad:	xchg   esp,eax
  4224ae:	and    al,0xe0
  4224b0:	mov    edi,0x1f8ae3da
  4224b5:	ficomp WORD PTR [edi+eax*8-0x2de47711]
  4224bc:	pushf  
  4224bd:	mov    ss,WORD PTR [ebp+0x3e]
  4224c0:	sub    DWORD PTR [ebx-0x31ed9a1b],ebp
  4224c6:	cmp    bh,bl
  4224c8:	sbb    eax,0x118ace90
  4224cd:	mov    edx,db4
  4224d0:	aad    0x14
  4224d2:	addr16 js 0x422472
  4224d5:	jp     0x422525
  4224d7:	lock test DWORD PTR [edi-0x19bb3258],ebp
  4224de:	inc    eax
  4224df:	test   bh,cl
  4224e1:	out    dx,al
  4224e2:	push   ebp
  4224e3:	xchg   esp,eax
  4224e4:	pop    edx
  4224e5:	fcomp  QWORD PTR [edx-0x65fd9b20]
  4224eb:	lahf   
  4224ec:	scas   eax,DWORD PTR es:[edi]
  4224ed:	cs xchg edx,eax
  4224ef:	cmp    eax,0x2b271328
  4224f4:	mov    WORD PTR [edx+0x1d],?
  4224f7:	pop    esp
  4224f8:	mov    cl,0x8b
  4224fa:	jecxz  0x42252f
  4224fc:	pop    ecx
  4224fd:	ror    bh,0xd9
  422500:	cmp    ch,al
  422502:	mov    ecx,0xb9ad9059
  422507:	sub    DWORD PTR [edx],ebx
  422509:	add    edx,edi
  42250b:	mov    cl,bl
  42250d:	jne    0x4224fe
  42250f:	dec    edx
  422510:	push   es
  422511:	inc    DWORD PTR [eax+0x79]
  422514:	jne    0x422547
  422516:	pop    edi
  422517:	push   cs
  422518:	aaa    
  422519:	ss daa 
  42251b:	push   ebp
  42251c:	popa   
  42251d:	sbb    ebp,esi
  42251f:	jbe    0x42255b
  422521:	push   ebx
  422522:	stos   BYTE PTR es:[edi],al
  422523:	adc    ebp,DWORD PTR [edi+esi*4-0x4c6b1c16]
  42252a:	cmp    ebp,ebp
  42252c:	gs pusha 
  42252e:	call   0x7e7b:0x4bcf42e8
  422535:	out    dx,al
  422536:	out    0xad,al
  422538:	xchg   edi,eax
  422539:	cmp    BYTE PTR [eax-0x6e],cl
  42253c:	xchg   esp,eax
  42253d:	inc    ecx
  42253e:	xor    BYTE PTR [esi-0x56],cl
  422541:	mov    eax,0x92571334
  422546:	in     al,dx
  422547:	dec    edx
  422548:	nop
  422549:	test   DWORD PTR ds:0x6a8bd2db,0x681baf70
  422553:	shl    BYTE PTR [ebx+0x7d588e95],cl
  422559:	cmp    al,0x6d
  42255b:	mov    esi,0x900c6c37
  422560:	mov    ebx,0x3c2fb5f3
  422565:	push   cs
  422566:	jnp    0x422520
  422568:	imul   edi,DWORD PTR ss:[esp+ecx*1],0x24
  42256d:	js     0x422510
  42256f:	xchg   edi,eax
  422570:	mov    eax,ds:0xd64d869b
  422575:	and    eax,0x2c214122
  42257a:	sub    al,0xf0
  42257c:	jnp    0x4225eb
  42257e:	lahf   
  42257f:	gs adc eax,0xe9d359be
  422585:	ss sub al,0x8e
  422588:	dec    esp
  422589:	dec    edi
  42258a:	aad    0x4e
  42258c:	jo     0x4225c9
  42258e:	rcl    BYTE PTR [ecx+0x6d],1
  422591:	loope  0x422612
  422593:	jb     0x4225ac
  422595:	popa   
  422596:	jnp    0x422614
  422598:	dec    ebx
  422599:	mov    WORD PTR [ecx],ss
  42259b:	ja     0x422546
  42259d:	fimul  WORD PTR [edi-0x2e]
  4225a0:	repnz sbb bh,BYTE PTR [esi+0x750fc2df]
  4225a7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a9:	push   edi
  4225aa:	mov    dh,0xea
  4225ac:	aaa    
  4225ad:	shr    DWORD PTR [ebx+0xf],1
  4225b0:	cmp    eax,0x98849651
  4225b5:	mov    ebp,0x3926f1b2
  4225ba:	mov    bl,0xb9
  4225bc:	add    dh,BYTE PTR [ebx+eiz*1]
  4225bf:	xchg   BYTE PTR [edx],dh
  4225c1:	dec    edi
  4225c2:	pop    edi
  4225c3:	aas    
  4225c4:	ror    ah,0xee
  4225c7:	daa    
  4225c8:	call   0xbe97af41
  4225cd:	in     al,0xa1
  4225cf:	cld    
  4225d0:	sar    bl,cl
  4225d2:	cmp    BYTE PTR [edi-0xc],ch
  4225d5:	ret    0xb2
  4225d8:	push   0xe6478efd
  4225dd:	test   BYTE PTR [ebp-0x3eeb89c7],bl
  4225e3:	fs sub cl,dl
  4225e6:	dec    edi
  4225e7:	adc    dh,BYTE PTR [esi+0x1f]
  4225ea:	push   ds
  4225eb:	outs   dx,BYTE PTR ds:[esi]
  4225ec:	xor    BYTE PTR [ebx],al
  4225ee:	mov    ah,0xdd
  4225f0:	add    esp,DWORD PTR [eax-0x1a]
  4225f3:	das    
  4225f4:	push   ss
  4225f5:	push   ebp
  4225f6:	les    eax,FWORD PTR [esi]
  4225f8:	mov    esp,0x7a1ee93b
  4225fd:	adc    al,0xd3
  4225ff:	xchg   edx,eax
  422600:	jmp    0x61909ddd
  422605:	call   0xabc7a7e2
  42260a:	in     eax,dx
  42260b:	mov    eax,ds:0x355e5f5a
  422610:	fcom   QWORD PTR [ebp-0x3a]
  422613:	pop    edi
  422614:	cld    
  422615:	sbb    eax,0x2d76684a
  42261a:	xchg   ebx,eax
  42261b:	int3   
  42261c:	js     0x4225ef
  42261e:	jg     0x4225eb
  422620:	rcr    BYTE PTR [edx+0x10],cl
  422623:	test   eax,0x3a19e6d1
  422628:	push   0x63
  42262a:	mov    al,ds:0x3852e519
  42262f:	jb     0x4225e8
  422631:	mov    DWORD PTR [ebp+0x42],ecx
  422634:	jo     0x42266d
  422636:	lea    esp,[edx-0x54]
  422639:	jg     0x422660
  42263b:	mov    esp,0xd8b351f3
  422640:	and    al,0x20
  422642:	or     DWORD PTR [ecx],esp
  422644:	push   0x5499f3c5
  422649:	pop    edx
  42264a:	mov    eax,ds:0xe71065aa
  42264f:	add    DWORD PTR [edi+0x34],0x5fcfce57
  422656:	and    al,ch
  422658:	scas   al,BYTE PTR es:[edi]
  422659:	aas    
  42265a:	jne    0x42268b
  42265c:	test   eax,0x3b3cccac
  422661:	pop    eax
  422662:	fs inc ebx
  422664:	cmp    al,0xb3
  422666:	fxch   st(2)
  422668:	outs   dx,DWORD PTR ds:[esi]
  422669:	sbb    BYTE PTR [eax-0x6fd3565e],bl
  42266f:	scas   eax,DWORD PTR es:[edi]
  422670:	sub    esi,DWORD PTR [ecx+0x36]
  422673:	or     DWORD PTR [si],0xfffffff2
  422677:	cmp    dl,bh
  422679:	into   
  42267a:	imul   esi,DWORD PTR [eax+0x2af42564],0xfeaa2131
  422684:	fldcw  WORD PTR [eax]
  422686:	out    0x82,al
  422688:	(bad)  
  422689:	scas   eax,DWORD PTR es:[edi]
  42268a:	loopne 0x42260e
  42268c:	mov    eax,0xf9c6e405
  422691:	mov    dh,0x18
  422693:	aad    0x3a
  422695:	daa    
  422696:	cld    
  422697:	push   ecx
  422698:	cmp    bh,BYTE PTR [edx+eax*2+0x6f]
  42269c:	and    BYTE PTR [edi-0x1c],cl
  42269f:	popf   
  4226a0:	xor    esp,DWORD PTR [esi-0x66]
  4226a3:	inc    ebp
  4226a4:	xchg   ecx,eax
  4226a5:	mov    DWORD PTR [esi],0x29e429be
  4226ab:	rol    DWORD PTR [ebp+0x3e0d51b],1
  4226b1:	push   0xb197a127
  4226b6:	sub    BYTE PTR [esi-0x1d1af142],bl
  4226bc:	pop    edi
  4226bd:	int3   
  4226be:	repnz mov WORD PTR [ecx+esi*2],es
  4226c2:	push   edi
  4226c3:	sub    BYTE PTR [edx-0x435a52eb],ah
  4226c9:	push   esp
  4226ca:	xchg   ebp,eax
  4226cb:	dec    eax
  4226cc:	test   al,0x69
  4226ce:	dec    edi
  4226cf:	mov    dh,bh
  4226d1:	push   ebp
  4226d2:	enter  0x4f9b,0xd0
  4226d6:	inc    ebp
  4226d7:	fucomip st,st(5)
  4226d9:	ja     0x42273c
  4226db:	pop    edi
  4226dc:	mov    dh,0x40
  4226de:	mov    esi,0xb05ecff5
  4226e3:	loop   0x42272c
  4226e5:	shl    BYTE PTR ds:0x22c09993,0xab
  4226ec:	mov    dl,0xb0
  4226ee:	clc    
  4226ef:	lods   al,BYTE PTR ds:[esi]
  4226f0:	pop    edx
  4226f1:	bound  ebx,QWORD PTR [eax+0x6e]
  4226f4:	inc    esi
  4226f5:	and    DWORD PTR [ebx+0x1a],esp
  4226f8:	shl    bh,cl
  4226fa:	enter  0xfcbb,0x72
  4226fe:	dec    ebx
  4226ff:	ror    DWORD PTR [ecx+0x6134f259],cl
  422705:	jnp    0x422710
  422707:	pop    eax
  422708:	aam    0xa3
  42270a:	clc    
  42270b:	lahf   
  42270c:	pop    ebp
  42270d:	jge    0x42272b
  42270f:	sar    cl,1
  422711:	gs jecxz 0x422761
  422714:	or     dl,al
  422716:	(bad)  
  422717:	das    
  422718:	int    0x92
  42271a:	mov    esi,0xa57a6cb7
  42271f:	(bad)  
  422720:	in     eax,0xd8
  422722:	int3   
  422723:	inc    BYTE PTR [edi]
  422725:	mov    esp,0xa4883aff
  42272a:	xor    esp,edx
  42272c:	call   0xaad8:0xf0645fe9
  422733:	cmp    al,0x3
  422735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422736:	pop    edx
  422737:	fsubrp st(3),st
  422739:	jne    0x422710
  42273b:	jp     0x42270e
  42273d:	xchg   esp,eax
  42273e:	sti    
  42273f:	pop    ebx
  422740:	or     ah,BYTE PTR [eax]
  422742:	or     al,0x6f
  422744:	repz retf 0xc184
  422748:	rol    BYTE PTR [ebx],cl
  42274a:	cwde   
  42274b:	test   eax,0x6f148c58
  422750:	mov    DWORD PTR [ebx],edi
  422752:	fcom   QWORD PTR [ebp+ebp*4+0x2a]
  422756:	push   ds
  422757:	jno    0x4227cd
  422759:	scas   eax,DWORD PTR es:[edi]
  42275a:	mov    cl,0x60
  42275c:	loopne 0x422732
  42275e:	sbb    eax,0x4b8ec821
  422763:	stos   BYTE PTR es:[edi],al
  422764:	push   0xe4c3ada5
  422769:	mov    ds,WORD PTR [ebx-0x8]
  42276c:	cmp    ebp,eax
  42276e:	inc    ebx
  42276f:	pop    ecx
  422770:	push   esp
  422771:	test   edi,ecx
  422773:	xor    ebx,esp
  422775:	dec    edi
  422776:	dec    edx
  422777:	push   0xf8d8c59
  42277c:	icebp  
  42277d:	das    
  42277e:	push   cs
  42277f:	test   al,0x8b
  422781:	shr    DWORD PTR [esi+ecx*2-0x6dcee931],cl
  422788:	xor    esp,esp
  42278a:	push   edi
  42278b:	lea    eax,[edx-0x5]
  42278e:	sbb    bh,dl
  422790:	and    BYTE PTR es:[ebp-0x46],0x35
  422795:	dec    ebx
  422796:	sti    
  422797:	and    ebx,DWORD PTR [esp+esi*2]
  42279a:	bound  ecx,QWORD PTR [edx+0x6256d576]
  4227a0:	jp     0x422793
  4227a2:	bound  eax,QWORD PTR [ebp-0x20c21e25]
  4227a8:	cmp    dh,bh
  4227aa:	lahf   
  4227ab:	lahf   
  4227ac:	std    
  4227ad:	lock jp 0x42274b
  4227b0:	inc    esi
  4227b1:	or     eax,DWORD PTR [eax-0x41c6f1fc]
  4227b7:	jns    0x42280f
  4227b9:	inc    ebx
  4227ba:	int    0x43
  4227bc:	pop    edx
  4227bd:	fcomp  DWORD PTR [ebx-0x305494f4]
  4227c3:	pop    eax
  4227c4:	jbe    0x42276b
  4227c6:	jmp    0x4227b7
  4227c8:	cmp    ah,bl
  4227ca:	pop    esp
  4227cb:	sbb    dh,BYTE PTR [edi+edx*2]
  4227ce:	daa    
  4227cf:	add    ch,ah
  4227d1:	pop    edi
  4227d2:	rcr    BYTE PTR [ecx+0x44],cl
  4227d5:	ret    
  4227d6:	jmp    0x2196e72d
  4227db:	and    al,0xc5
  4227dd:	cmc    
  4227de:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e0:	gs ins BYTE PTR es:[edi],dx
  4227e2:	jp     0x422830
  4227e4:	cwde   
  4227e5:	hlt    
  4227e6:	cmp    eax,DWORD PTR [ebx]
  4227e8:	xlat   BYTE PTR ds:[ebx]
  4227e9:	xchg   edx,eax
  4227ea:	push   ebx
  4227eb:	dec    edi
  4227ec:	loopne 0x4227ab
  4227ee:	push   ebx
  4227ef:	daa    
  4227f0:	cmp    BYTE PTR [ecx],bl
  4227f2:	stos   BYTE PTR es:[edi],al
  4227f3:	mov    ds:0x5e834d22,eax
  4227f8:	in     eax,dx
  4227f9:	jbe    0x4227e3
  4227fb:	sbb    eax,0x6f0c99e
  422800:	add    al,0xf1
  422802:	pop    ebp
  422803:	cdq    
  422804:	push   ecx
  422805:	scas   al,BYTE PTR es:[edi]
  422806:	loopne 0x422864
  422808:	mov    BYTE PTR [edx],bh
  42280a:	ret    
  42280b:	sar    ebp,0x2
  42280e:	imul   ebp,DWORD PTR [ecx-0xd8fc497],0x3b
  422815:	mov    bh,0x29
  422817:	jmp    0x79d0:0x42448cdb
  42281e:	enter  0x1c7f,0x66
  422822:	sbb    BYTE PTR [edi-0x57c866f2],al
  422828:	sub    eax,0xe61f6fbf
  42282d:	fwait
  42282e:	dec    ebp
  42282f:	pop    es
  422830:	sbb    DWORD PTR [esi],ecx
  422832:	cmp    DWORD PTR [eax+ebx*4],edx
  422835:	in     eax,0x20
  422837:	dec    esp
  422838:	idiv   DWORD PTR [ebp-0x7a4cde81]
  42283e:	or     bl,BYTE PTR [esi+0x4c04bc0c]
  422844:	push   0x7839da05
  422849:	adc    eax,0x557feffd
  42284e:	aaa    
  42284f:	push   cs
  422850:	out    dx,eax
  422851:	jl     0x422857
  422853:	(bad)  
  422854:	ficomp DWORD PTR [ebp-0x2c]
  422857:	mov    cs,WORD PTR [ebp+0x5780cf01]
  42285d:	(bad)  
  42285e:	push   eax
  42285f:	xchg   BYTE PTR [edi],ch
  422861:	test   al,0x3
  422863:	cld    
  422864:	fldenv [ecx+0x3b53e75d]
  42286a:	sbb    ah,0x25
  42286d:	cs (bad) 
  42286f:	xchg   edi,eax
  422870:	popf   
  422871:	ror    DWORD PTR [edi],1
  422873:	repnz and edx,ebp
  422876:	inc    ecx
  422877:	or     DWORD PTR [ebx+0x112a6be7],0xffffffdc
  42287e:	xor    eax,0xe35780f9
  422883:	popf   
  422884:	shl    BYTE PTR [edi+0x3b],0xd2
  422888:	cld    
  422889:	and    WORD PTR [ecx+0x709dfe41],bx
  422890:	push   0xffffffd8
  422892:	or     bh,BYTE PTR [ecx]
  422894:	imul   eax,DWORD PTR [esi-0x51a172d3],0xffffffb2
  42289b:	xchg   DWORD PTR [eax],esp
  42289d:	dec    esi
  42289e:	push   esi
  42289f:	sbb    DWORD PTR [edx+0x716d1034],esp
  4228a5:	repnz jecxz 0x42289e
  4228a8:	mov    ds:0xea7b112e,eax
  4228ad:	test   eax,ebp
  4228af:	fnstenv [ebx]
  4228b1:	imul   esi,DWORD PTR [ebx+0x15],0x62
  4228b5:	xor    DWORD PTR [bp+di-0x71],0xd1a7d348
  4228bd:	(bad)  
  4228be:	out    0x3d,eax
  4228c0:	mov    eax,0x99840423
  4228c5:	pop    ecx
  4228c6:	push   ss
  4228c7:	cmp    edi,DWORD PTR [ecx-0x78]
  4228ca:	xchg   edi,eax
  4228cb:	daa    
  4228cc:	repnz fs adc al,0xd8
  4228d0:	hlt    
  4228d1:	inc    esp
  4228d2:	adc    eax,0x3f390be2
  4228d7:	ja     0x42293e
  4228d9:	pop    ss
  4228da:	cmp    BYTE PTR [ebp-0x1b],bh
  4228dd:	jae    0x422916
  4228df:	xor    ecx,DWORD PTR ds:0xa2526509
  4228e5:	out    0xd,eax
  4228e7:	sub    ecx,DWORD PTR gs:[esi+0x397000c]
  4228ee:	dec    ecx
  4228ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228f0:	es pop edx
  4228f2:	shr    BYTE PTR [edx+0x69d78085],1
  4228f8:	mov    edi,DWORD PTR [eax+0x42]
  4228fb:	repz in al,0x2c
  4228fe:	popa   
  4228ff:	pop    es
  422900:	(bad)  
  422901:	lods   eax,DWORD PTR ds:[esi]
  422902:	sub    dl,BYTE PTR [eax-0x125bcf60]
  422908:	out    dx,eax
  422909:	cmp    ah,BYTE PTR ds:0xc77aa374
  42290f:	cmp    esp,0xfffffff3
  422912:	xchg   edx,eax
  422913:	out    0xdb,al
  422915:	(bad)  
  422916:	adc    al,BYTE PTR [eax+0x4e]
  422919:	mov    ah,0xbe
  42291b:	xor    al,0x49
  42291d:	fs adc al,al
  422920:	xchg   BYTE PTR [esi+ecx*1+0x19bb2ad],bl
  422927:	out    0x7b,eax
  422929:	or     BYTE PTR [ebx],bl
  42292b:	mov    ecx,0xdc2395b0
  422930:	sub    BYTE PTR [eax+0x59e73b29],bh
  422936:	loope  0x42290c
  422938:	out    0xeb,al
  42293a:	mov    DWORD PTR [esi+0x572a1b2f],ebp
  422940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422941:	test   al,0x3c
  422943:	fdivr  QWORD PTR ss:[edi]
  422946:	stos   BYTE PTR es:[edi],al
  422947:	stos   BYTE PTR es:[edi],al
  422948:	neg    ecx
  42294a:	sub    esi,ebx
  42294c:	xor    eax,0x13ea3dd4
  422951:	daa    
  422952:	leave  
  422953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422954:	das    
  422955:	mov    ebx,0x937d7560
  42295a:	xchg   BYTE PTR [edi+0x48574a5a],ah
  422960:	shr    BYTE PTR [edi-0x58],1
  422963:	sub    DWORD PTR [ebp+ecx*8-0x59744d97],esp
  42296a:	push   ss
  42296b:	mov    edx,0x3a9c7779
  422970:	pop    esi
  422971:	mov    WORD PTR [ecx+0x208ae456],?
  422977:	pop    ebx
  422978:	shl    DWORD PTR [ebx-0x35],0xbe
  42297c:	in     al,dx
  42297d:	cmp    BYTE PTR [ecx-0x2441ffe9],bl
  422983:	cmp    DWORD PTR [esi*1+0x32b49035],esi
  42298a:	neg    BYTE PTR [eax-0x43caf638]
  422990:	outs   dx,BYTE PTR ds:[esi]
  422991:	adc    al,0xf0
  422993:	mov    ch,0x81
  422995:	pop    eax
  422996:	push   ebp
  422997:	jae    0x4229b4
  422999:	push   ecx
  42299a:	(bad)  [esi]
  42299c:	cmp    esi,DWORD PTR [esi+0x5be60bea]
  4229a2:	dec    esp
  4229a3:	(bad)  
  4229a4:	int3   
  4229a5:	xchg   DWORD PTR [ebp+0x10],ebx
  4229a8:	mov    ecx,DWORD PTR [eax+0x57467b10]
  4229ae:	cwde   
  4229af:	add    eax,0xd14b32c
  4229b4:	imul   edx,DWORD PTR [edx],0xc5a1260a
  4229ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229bb:	xchg   edi,eax
  4229bc:	imul   esp,DWORD PTR [ebx-0x3],0xffffff9e
  4229c0:	test   eax,0x3b720ff0
  4229c5:	push   cs
  4229c6:	jnp    0x422950
  4229c8:	adc    DWORD PTR [esi],ebp
  4229ca:	in     al,0xc
  4229cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229cd:	mov    BYTE PTR [edx+0x4644eebb],dh
  4229d3:	inc    edx
  4229d4:	inc    esi
  4229d5:	pop    ss
  4229d6:	fbld   TBYTE PTR [esi+0x3c174a2e]
  4229dc:	fsubr  QWORD PTR [esi+ebx*4-0x73]
  4229e0:	mov    ds:0x9bd5bf01,al
  4229e5:	dec    edi
  4229e6:	sbb    DWORD PTR [edi+edx*2],esi
  4229e9:	cmp    DWORD PTR cs:[ebx+0x5d],0x32
  4229ee:	jmp    0x4229ef
  4229f0:	or     edi,DWORD PTR [esi+0x79]
  4229f3:	in     al,dx
  4229f4:	pop    ebx
  4229f5:	and    al,0xb6
  4229f7:	cmp    cl,ch
  4229f9:	mov    ds:0x729e9704,al
  4229fe:	or     al,0x31
  422a00:	aam    0xc5
  422a02:	mul    BYTE PTR [eax+0x111c2e9d]
  422a08:	out    dx,al
  422a09:	nop
  422a0a:	xchg   bp,ax
  422a0c:	or     dh,ch
  422a0e:	xchg   ebp,eax
  422a0f:	dec    ebp
  422a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a11:	pop    esi
  422a12:	(bad)  
  422a13:	lds    esp,FWORD PTR ds:0x932e3c00
  422a19:	fdiv   st(0),st
  422a1b:	fdivr  QWORD PTR [edx]
  422a1d:	jge    0x4229ac
  422a1f:	scas   al,BYTE PTR es:[edi]
  422a20:	rcl    DWORD PTR [edx+edi*8],cl
  422a23:	sbb    eax,0xe82cbc
  422a28:	or     eax,DWORD PTR [ebp+0x34c3d6a0]
  422a2e:	sbb    edi,DWORD PTR [edi-0x29]
  422a31:	jmp    0x591c:0x7cc9b2d2
  422a38:	daa    
  422a39:	jbe    0x4229f6
  422a3b:	push   ebp
  422a3c:	retf   
  422a3d:	pop    edx
  422a3e:	adc    eax,0xfd6e3156
  422a43:	mov    edi,DWORD PTR [edi]
  422a45:	lods   eax,DWORD PTR ds:[esi]
  422a46:	mov    esi,0xb6e40b66
  422a4b:	lods   al,BYTE PTR ds:[esi]
  422a4c:	aam    0x44
  422a4e:	(bad)  
  422a4f:	xchg   ebx,eax
  422a50:	sbb    eax,0x26b80f49
  422a55:	and    esi,DWORD PTR [ecx-0x71]
  422a58:	or     DWORD PTR [eax-0x7f],ebp
  422a5b:	push   esp
  422a5c:	int3   
  422a5d:	in     al,dx
  422a5e:	mov    esi,0x251af09e
  422a63:	ds push ds
  422a65:	dec    ebx
  422a66:	div    ch
  422a68:	ret    0xfbb6
  422a6b:	adc    BYTE PTR [edi-0x4f],al
  422a6e:	inc    ecx
  422a6f:	(bad)  
  422a70:	shl    BYTE PTR [edx],0x64
  422a73:	call   0xd72a:0x52214a6
  422a7a:	or     al,0xda
  422a7c:	popf   
  422a7d:	xlat   BYTE PTR ds:[ebx]
  422a7e:	sbb    esi,ebx
  422a80:	xor    esp,DWORD PTR [edi+eax*8]
  422a83:	ficom  WORD PTR [ebp+0x3545de89]
  422a89:	mov    ah,al
  422a8b:	call   0xa2931d52
  422a90:	jns    0x422ac3
  422a92:	mov    ds:0xe5e77917,eax
  422a97:	imul   esi,DWORD PTR [edx-0x25],0xffffffe2
  422a9b:	add    BYTE PTR [edx+0x6f31b7a0],al
  422aa1:	xor    eax,0xf332ada5
  422aa6:	mov    ds:0xa66f2c63,al
  422aab:	jecxz  0x422a4a
  422aad:	inc    BYTE PTR es:[ecx+0x1aabb358]
  422ab4:	cmp    al,0x92
  422ab6:	nop
  422ab7:	mov    al,0xe3
  422ab9:	jecxz  0x422af2
  422abb:	das    
  422abc:	outs   dx,DWORD PTR ds:[esi]
  422abd:	enter  0x21c,0xd7
  422ac1:	and    al,0xaf
  422ac3:	inc    edi
  422ac4:	test   eax,0xebcfb5d8
  422ac9:	dec    edi
  422aca:	mov    edi,DWORD PTR [eax+edx*8+0x5db5958a]
  422ad1:	out    dx,eax
  422ad2:	stos   BYTE PTR es:[edi],al
  422ad3:	(bad)  
  422ad4:	call   0xc7f1fecd
  422ad9:	mov    eax,0x5d3a1cdf
  422ade:	(bad)  
  422adf:	adc    ecx,esi
  422ae1:	and    al,0x2
  422ae3:	hlt    
  422ae4:	out    dx,al
  422ae5:	mov    ?,WORD PTR [edi]
  422ae7:	mov    eax,ds:0xf003f7e2
  422aec:	xchg   BYTE PTR [eax+0x435a2810],bl
  422af2:	pop    edx
  422af3:	mov    ebp,DWORD PTR [edx-0x20]
  422af6:	mov    edx,0x2f6cf15a
  422afb:	cmp    eax,0x50852877
  422b00:	inc    ebx
  422b01:	add    DWORD PTR [eax],edi
  422b03:	ja     0x422a98
  422b05:	and    bh,BYTE PTR [esi]
  422b07:	sar    ebp,1
  422b09:	add    BYTE PTR [edi],cl
  422b0b:	jecxz  0x422af1
  422b0d:	or     esp,ebx
  422b0f:	mov    ds:0xf772d6b5,eax
  422b14:	mov    cl,0xd6
  422b16:	jle    0x422b1c
  422b18:	sbb    al,0xc5
  422b1a:	fist   DWORD PTR [ecx]
  422b1c:	sbb    DWORD PTR [esi],eax
  422b1e:	imul   eax,DWORD PTR [ecx+0x56],0xffffffce
  422b22:	shl    DWORD PTR [esi],cl
  422b24:	mov    bl,BYTE PTR [edi]
  422b26:	xor    cl,BYTE PTR [esi+edx*8-0x33]
  422b2a:	adc    esi,ecx
  422b2c:	test   BYTE PTR [edi],ch
  422b2e:	out    dx,eax
  422b2f:	push   0x17
  422b31:	test   BYTE PTR [esi-0x25],bl
  422b34:	retf   0xde3e
  422b37:	dec    eax
  422b38:	pop    esi
  422b39:	pop    es
  422b3a:	or     DWORD PTR [edx+0x6],eax
  422b3d:	cs push es
  422b3f:	lock cmp bl,BYTE PTR [ecx-0x11]
  422b43:	loop   0x422bc4
  422b45:	xor    al,bl
  422b47:	bound  edi,QWORD PTR [eax]
  422b49:	push   ecx
  422b4a:	rcl    BYTE PTR [edi],cl
  422b4c:	lds    ebx,FWORD PTR [ecx-0x327a8186]
  422b52:	inc    edi
  422b53:	inc    ebx
  422b54:	and    bl,BYTE PTR [ebx]
  422b56:	cmp    ebx,esi
  422b58:	mov    dl,0xad
  422b5a:	xchg   esp,eax
  422b5b:	mov    bh,0xf7
  422b5d:	rcr    DWORD PTR [esp+eiz*8+0x5e02caec],1
  422b64:	or     edx,esp
  422b66:	sbb    eax,0x5488e7eb
  422b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b6c:	retf   0x19fa
  422b6f:	in     eax,dx
  422b70:	inc    esi
  422b71:	aam    0x7f
  422b73:	shr    BYTE PTR [ebp-0x44c74ea8],0x2a
  422b7a:	jbe    0x422b2b
  422b7c:	and    eax,0xfc15d6d2
  422b81:	xchg   BYTE PTR [ecx],cl
  422b83:	shl    ecx,cl
  422b85:	data16 mov cl,0x64
  422b88:	mov    ds:0xe9385712,eax
  422b8d:	push   ebx
  422b8e:	mov    edx,ebp
  422b90:	push   es
  422b91:	lahf   
  422b92:	and    al,BYTE PTR [ecx+0x5b]
  422b95:	retfw  0xef9
  422b99:	push   0x1b18892b
  422b9e:	inc    ebx
  422b9f:	sub    al,0x31
  422ba1:	push   esi
  422ba2:	mov    al,ss:0xd13dab28
  422ba8:	mov    al,ds:0xe4088314
  422bad:	out    0x61,eax
  422baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb0:	xchg   edx,eax
  422bb1:	(bad)  
  422bb2:	push   ss
  422bb3:	jae    0x422bc9
  422bb5:	pop    edx
  422bb6:	push   0x51518df8
  422bbb:	jp     0x422c12
  422bbd:	test   ah,dh
  422bbf:	xlat   BYTE PTR ds:[ebx]
  422bc0:	and    dh,BYTE PTR ds:0xd78f74b4
  422bc6:	pusha  
  422bc7:	mov    al,ds:0x3a20c17
  422bcc:	xor    DWORD PTR [eax-0x4f],eax
  422bcf:	cmp    DWORD PTR [edi],edx
  422bd1:	inc    edx
  422bd2:	sub    al,BYTE PTR [edi+0x50cf5f09]
  422bd8:	lahf   
  422bd9:	ins    BYTE PTR es:[edi],dx
  422bda:	call   0x3d9cbb5b
  422bdf:	pop    esi
  422be0:	mov    eax,0x84ece96d
  422be5:	outs   dx,DWORD PTR ds:[esi]
  422be6:	add    eax,DWORD PTR [edx+0x1df93524]
  422bec:	mov    WORD PTR [ebx-0x5d20343f],fs
  422bf2:	ffree  st(2)
  422bf4:	pusha  
  422bf5:	mov    ds,WORD PTR [edi]
  422bf7:	jmp    0x422c01
  422bf9:	pushf  
  422bfa:	gs mov ch,0x79
  422bfd:	mov    ah,0xfa
  422bff:	xchg   edi,eax
  422c00:	and    edi,ecx
  422c02:	and    ch,bl
  422c04:	mov    cl,0x54
  422c06:	jp     0x422c24
  422c08:	sub    cl,dh
  422c0a:	ret    0xf191
  422c0d:	daa    
  422c0e:	pop    edi
  422c0f:	mov    al,0xeb
  422c11:	xchg   DWORD PTR [eax],eax
  422c13:	pop    ss
  422c14:	mov    bl,0x48
  422c16:	and    DWORD PTR [esi-0x37],0x6ab2c431
  422c1d:	mov    edx,0x42c18c59
  422c22:	dec    esi
  422c23:	inc    eax
  422c24:	mov    ebx,0x7d64b108
  422c29:	push   ecx
  422c2a:	stc    
  422c2b:	ins    DWORD PTR es:[edi],dx
  422c2c:	sub    BYTE PTR [eax],al
  422c2e:	sbb    BYTE PTR [eax],dl
  422c30:	scas   eax,DWORD PTR es:[edi]
  422c31:	pop    edx
  422c32:	mov    esp,0x8a534231
  422c37:	push   es
  422c38:	sub    ecx,DWORD PTR [eax]
  422c3a:	popf   
  422c3b:	inc    edi
  422c3c:	push   ebp
  422c3d:	jnp    0x422bd0
  422c3f:	cmp    BYTE PTR [esi-0x6087f5f7],0x3d
  422c46:	dec    ebp
  422c47:	inc    edi
  422c48:	les    esi,FWORD PTR [ebx-0x7]
  422c4b:	dec    esi
  422c4c:	jmp    0xaa858c4
  422c51:	jle    0x422bd6
  422c53:	hlt    
  422c54:	leave  
  422c55:	adc    ch,BYTE PTR ds:0xf9f812d7
  422c5b:	fild   QWORD PTR [esi-0x2cb6ba23]
  422c61:	sbb    al,0xa4
  422c63:	lock and edx,DWORD PTR [eax+0x563866b2]
  422c6a:	fst    st(6)
  422c6c:	lahf   
  422c6d:	call   0x7ac3:0xfcebb76d
  422c74:	mov    gs,WORD PTR [edx]
  422c76:	ret    0xc51
  422c79:	mov    WORD PTR [eax],ss
  422c7b:	icebp  
  422c7c:	(bad)  
  422c7d:	repnz sbb eax,0x1e0cf03c
  422c83:	inc    esi
  422c84:	dec    ebx
  422c85:	push   edi
  422c86:	mov    ebx,0xdd936552
  422c8b:	cmp    eax,0x8ad1e8a0
  422c90:	adc    dl,ch
  422c92:	xchg   ecx,eax
  422c93:	fstp   DWORD PTR [ebx]
  422c95:	jb     0x422c44
  422c97:	push   esi
  422c98:	push   eax
  422c99:	jae    0x422c5a
  422c9b:	mov    ch,0x8b
  422c9d:	lahf   
  422c9e:	enter  0x4cc2,0x68
  422ca2:	xor    ah,bh
  422ca4:	addr16 xor al,0xeb
  422ca7:	jno    0x422c44
  422ca9:	pop    edx
  422caa:	repnz fld DWORD PTR ds:0x29e99614
  422cb1:	sar    BYTE PTR [edx+ecx*1-0x4b751402],cl
  422cb8:	cdq    
  422cb9:	cwde   
  422cba:	loopne 0x422c72
  422cbc:	inc    eax
  422cbd:	popa   
  422cbe:	sbb    bh,dl
  422cc0:	std    
  422cc1:	clc    
  422cc2:	ins    DWORD PTR es:[edi],dx
  422cc3:	sbb    dl,BYTE PTR [edi+0x19105a9f]
  422cc9:	jmp    0x422d2e
  422ccb:	and    BYTE PTR [eax+eiz*4+0x7a69d2fe],cl
  422cd2:	sub    al,BYTE PTR [edx+ebx*8]
  422cd5:	push   es
  422cd6:	mov    dh,0x58
  422cd8:	into   
  422cd9:	mov    ebp,0xd85f2bca
  422cde:	xchg   edx,eax
  422cdf:	cwde   
  422ce0:	pushf  
  422ce1:	ret    0xd00a
  422ce4:	push   esi
  422ce5:	add    cl,BYTE PTR [edx+0x1b8cfa0f]
  422ceb:	call   0x7f4b:0xd8893644
  422cf2:	clc    
  422cf3:	jle    0x422ccc
  422cf5:	xchg   esp,eax
  422cf6:	sti    
  422cf7:	loopne 0x422d66
  422cf9:	and    al,0x5f
  422cfb:	dec    esp
  422cfc:	outs   dx,BYTE PTR ds:[esi]
  422cfd:	test   eax,0x5ece81ed
  422d02:	cwde   
  422d03:	and    edi,DWORD PTR [ecx+0x39580dac]
  422d09:	and    al,0xd3
  422d0b:	sbb    eax,DWORD PTR [edi-0x1c6d35b8]
  422d11:	shl    dl,cl
  422d13:	push   esi
  422d14:	int    0xf5
  422d16:	ja     0x422d1b
  422d18:	test   BYTE PTR [eax],cl
  422d1a:	jne    0x422d2f
  422d1c:	icebp  
  422d1d:	iret   
  422d1e:	inc    ecx
  422d1f:	mov    dl,0x4a
  422d21:	xor    ecx,esp
  422d23:	jmp    0x422d10
  422d25:	push   ebp
  422d26:	lds    ebx,FWORD PTR [ecx+ecx*8]
  422d29:	jecxz  0x422d36
  422d2b:	ja     0x422cb1
  422d2d:	fdivr  DWORD PTR [esp+ebp*2-0x141c00a0]
  422d34:	mov    ebp,0xf32e06a
  422d39:	mov    bh,0x98
  422d3b:	jge    0x422d37
  422d3d:	scas   eax,DWORD PTR es:[edi]
  422d3e:	push   ebx
  422d3f:	aad    0xb7
  422d41:	mov    dl,0x61
  422d43:	int    0x9e
  422d45:	shr    BYTE PTR ds:0x857c4b6e,1
  422d4b:	mov    al,ds:0xb73525d9
  422d50:	mov    ebp,0xf94cf2b2
  422d55:	push   eax
  422d56:	imul   eax,DWORD PTR [esi-0x46],0x4a594b34
  422d5d:	mov    ds:0xa3babb3d,al
  422d62:	jle    0x422dc0
  422d64:	mov    fs,WORD PTR [ebp+ecx*4-0xd2bd848]
  422d6b:	pop    ebp
  422d6c:	test   BYTE PTR [esp+edi*2-0x37d4e427],0xaa
  422d74:	push   ecx
  422d75:	jl     0x422ddc
  422d77:	out    0x50,eax
  422d79:	mov    dh,BYTE PTR [edi-0xda680c0]
  422d7f:	add    BYTE PTR [edx+eax*8-0x69],0x2c
  422d84:	test   al,0x79
  422d86:	test   bh,0x40
  422d89:	xchg   edi,eax
  422d8a:	dec    ebx
  422d8b:	inc    BYTE PTR [ebx]
  422d8d:	xchg   esp,eax
  422d8e:	add    DWORD PTR [eax],edi
  422d90:	pop    edx
  422d91:	ins    BYTE PTR es:[edi],dx
  422d92:	adc    cl,bh
  422d94:	pop    esi
  422d95:	call   0xcb8c5c41
  422d9a:	aaa    
  422d9b:	adc    eax,0x38c18294
  422da0:	stos   DWORD PTR es:[edi],eax
  422da1:	cmp    eax,0xb1f4ea49
  422da6:	sub    BYTE PTR [ebx+0x3],ch
  422da9:	test   BYTE PTR [edi+ebp*2+0x3ea84bd5],0x30
  422db1:	push   eax
  422db2:	mov    eax,ds:0x5e61225
  422db7:	jecxz  0x422db3
  422db9:	push   ss
  422dba:	mov    bl,0x60
  422dbc:	dec    ebp
  422dbd:	or     DWORD PTR [edx-0x69],eax
  422dc0:	push   esp
  422dc1:	sbb    eax,0x6bdf2e85
  422dc6:	and    DWORD PTR [eax+esi*8+0x53c8baca],esi
  422dcd:	call   0xeea8:0xbd4325b4
  422dd4:	scas   al,BYTE PTR es:[edi]
  422dd5:	xchg   edx,eax
  422dd6:	sbb    eax,0x10149a5
  422ddb:	std    
  422ddc:	ret    0x5a57
  422ddf:	imul   ebp,ecx,0x41
  422de2:	sbb    al,0x98
  422de4:	pop    esi
  422de5:	and    cl,BYTE PTR [esi]
  422de7:	retw   
  422de9:	add    bl,ah
  422deb:	aas    
  422dec:	xor    DWORD PTR [esi+0x74],0x802398b3
  422df3:	ins    BYTE PTR es:[edi],dx
  422df4:	mov    gs,WORD PTR [ebx-0x5bbc8273]
  422dfa:	mov    ds:0xc59c47ff,al
  422dff:	sbb    al,0x7d
  422e01:	jbe    0x422d8f
  422e03:	or     esi,DWORD PTR [ebp+esi*1-0x2bb3c197]
  422e0a:	jg     0x422e4f
  422e0c:	pop    ebx
  422e0d:	mov    al,0x92
  422e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e10:	lahf   
  422e11:	imul   ebx,DWORD PTR [esi],0x490ae875
  422e17:	xor    esi,eax
  422e19:	ins    BYTE PTR es:[edi],dx
  422e1a:	add    BYTE PTR [eax+0x1dafa78d],bl
  422e20:	dec    ecx
  422e21:	sbb    bh,BYTE PTR [ecx+0x4d897ea1]
  422e27:	mov    ecx,0xd70d4249
  422e2c:	gs xor eax,0xb1e54f5d
  422e32:	fs jle 0x422dfa
  422e35:	sub    esp,DWORD PTR [ebp+0x6a]
  422e38:	test   DWORD PTR [ebx-0x6976a338],ebx
  422e3e:	mov    dh,0x81
  422e40:	in     al,dx
  422e41:	inc    eax
  422e42:	shl    dl,1
  422e44:	pop    ss
  422e45:	xor    dl,0x76
  422e48:	call   0xb6cc:0x7da483cf
  422e4f:	push   esi
  422e50:	lea    ebx,[ebx-0x5c]
  422e53:	xchg   ebp,eax
  422e54:	lea    edx,[eax]
  422e56:	jne    0x422e5b
  422e58:	push   eax
  422e59:	cmp    esi,DWORD PTR [ebp-0x28c2510b]
  422e5f:	mov    ebp,0xe1c77071
  422e64:	in     eax,dx
  422e65:	hlt    
  422e66:	aaa    
  422e67:	sbb    ah,BYTE PTR [ecx]
  422e69:	popa   
  422e6a:	adc    eax,DWORD PTR [ecx]
  422e6c:	shl    BYTE PTR [edi],0x6a
  422e6f:	mov    edi,0xb9e9c338
  422e74:	cs add al,0x9f
  422e77:	mov    edi,DWORD PTR [eax-0x6e]
  422e7a:	inc    esp
  422e7b:	(bad)  
  422e7c:	fdivr  QWORD PTR [ebp-0x2d98c4eb]
  422e82:	sbb    al,BYTE PTR [ecx-0x7ea097e]
  422e88:	mov    ds:0xd92b1c4f,al
  422e8d:	dec    esi
  422e8e:	pop    es
  422e8f:	jecxz  0x422f0a
  422e91:	jne    0x422eb6
  422e93:	imul   esp,DWORD PTR [edi+0x3c5ed2d2],0xf1131fbf
  422e9d:	jmp    0x51d7258
  422ea2:	sbb    al,0xa0
  422ea4:	pushf  
  422ea5:	rcl    DWORD PTR [eax-0x55],0x2a
  422ea9:	jmp    0x422e2c
  422eab:	aaa    
  422eac:	loop   0x422e5c
  422eae:	shl    DWORD PTR [esp+edx*8-0x50ebd88f],0x92
  422eb6:	out    0xc1,al
  422eb8:	imul   edi,DWORD PTR ds:0x2b3e8c38,0xad34ae26
  422ec2:	in     al,0xec
  422ec4:	mov    al,0x77
  422ec6:	pop    esi
  422ec7:	cs data16 sub al,0x27
  422ecb:	or     DWORD PTR ds:0x247d11c7,edi
  422ed1:	jb     0x422f3a
  422ed3:	es jmp 0x1bbb38e0
  422ed9:	cmp    edx,esi
  422edb:	xchg   ah,cl
  422edd:	push   ds
  422ede:	scas   eax,DWORD PTR es:[edi]
  422edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ee0:	inc    edi
  422ee1:	addr16 pop esi
  422ee3:	pop    ss
  422ee4:	lock jmp 0x422ef6
  422ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ee8:	addr16 mov cl,0xac
  422eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eed:	pusha  
  422eee:	push   esi
  422eef:	cmp    ebx,edx
  422ef1:	fmulp  st(3),st
  422ef3:	mov    ds:0xd7598643,al
  422ef8:	add    DWORD PTR [ebp+0x22d38a4],0xa5a1e267
  422f02:	push   es
  422f03:	ja     0x422e8c
  422f05:	sbb    esp,edx
  422f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f08:	inc    esp
  422f09:	adc    bl,BYTE PTR [si-0x14]
  422f0d:	push   ebp
  422f0e:	sbb    esp,ebx
  422f10:	ror    DWORD PTR [edx],0x13
  422f13:	jg     0x422f20
  422f15:	jmp    0x4090835c
  422f1a:	(bad)  
  422f1b:	push   ebp
  422f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f1d:	dec    ebp
  422f1e:	cli    
  422f1f:	push   ecx
  422f20:	xor    BYTE PTR [ebp-0x1f],bh
  422f23:	and    esi,esi
  422f25:	xor    esi,ecx
  422f27:	or     BYTE PTR [eax+0x7839a23b],bl
  422f2d:	pushw  0x8062
  422f31:	iret   
  422f32:	mov    al,ds:0x18e7fb09
  422f37:	mov    edx,0xed79a3da
  422f3c:	sbb    eax,0xb3b6d540
  422f41:	fs repz jne 0x422f5e
  422f45:	addr16 cwde 
  422f47:	(bad)  
  422f48:	or     al,0x1
  422f4a:	das    
  422f4b:	add    eax,0xc3d239a7
  422f50:	and    eax,0x994149cc
  422f55:	pop    esp
  422f56:	cmp    ch,BYTE PTR [edx+0xe]
  422f59:	dec    esp
  422f5a:	jmp    0xa5435a7a
  422f5f:	adc    al,0x57
  422f61:	add    DWORD PTR [esi],edx
  422f63:	xor    BYTE PTR [eax-0x3f],0x8b
  422f67:	and    al,0x41
  422f69:	jnp    0x422fbc
  422f6b:	xor    eax,0x3d02581e
  422f70:	cmp    BYTE PTR [esi-0xbd80912],0x1b
  422f77:	inc    ecx
  422f78:	or     eax,0xd244e07c
  422f7d:	jp     0x422f64
  422f7f:	pop    esp
  422f80:	mov    dl,0xdc
  422f82:	xchg   ebp,eax
  422f83:	imul   eax,DWORD PTR [edi],0x2a
  422f86:	push   ebp
  422f87:	sub    eax,0xbfe74bf5
  422f8c:	cs jb  0x422ff8
  422f8f:	xor    al,0x95
  422f91:	imul   esp,esp,0x40e6c596
  422f97:	and    BYTE PTR [ebx-0x100f8895],0x5b
  422f9e:	adc    eax,0xcc1a6c10
  422fa3:	dec    ecx
  422fa4:	sub    DWORD PTR [esi-0x77],0xc0883a38
  422fab:	sbb    DWORD PTR [esi-0x2d58cd28],0x25cc8e84
  422fb5:	sub    al,0x92
  422fb7:	in     al,0xb6
  422fb9:	aam    0x50
  422fbb:	test   eax,0xa93f0af2
  422fc0:	pop    DWORD PTR [ebp+0x39]
  422fc3:	(bad)
  422fc6:	mul    BYTE PTR [eax]
  422fc8:	(bad)  
  422fc9:	(bad)  
  422fca:	sub    BYTE PTR [ebp+eax*4-0x42],bl
  422fce:	xchg   ebx,eax
  422fcf:	mov    edi,DWORD PTR [ecx+0x53a8acae]
  422fd5:	pop    eax
  422fd6:	mov    dl,0x79
  422fd8:	inc    eax
  422fd9:	enter  0x55c4,0x1c
  422fdd:	jmp    0x51eb:0x628e197d
  422fe4:	dec    edi
  422fe5:	clc    
  422fe6:	cmp    BYTE PTR [eax+edx*4],dh
  422fe9:	xor    BYTE PTR [ebp+0x68],0x9c
  422fed:	or     DWORD PTR [edi-0x45],eax
  422ff0:	int3   
  422ff1:	sbb    al,0xb6
  422ff3:	scas   al,BYTE PTR es:[edi]
  422ff4:	popa   
  422ff5:	jmp    0x1befaf00
  422ffa:	scas   al,BYTE PTR es:[edi]
  422ffb:	test   BYTE PTR [edi],bh
  422ffd:	lock xor DWORD PTR [esi+0x6a],esp
  423001:	pusha  
  423002:	pop    esp
  423003:	mov    al,0xb9
  423005:	fbstp  TBYTE PTR [esi-0x55bc6b8]
  42300b:	sahf   
  42300c:	push   es
  42300d:	and    eax,0xea2d7b9
  423012:	test   cl,0x4e
  423015:	gs leave 
  423017:	xor    BYTE PTR [edi-0x17],dl
  42301a:	add    BYTE PTR ds:0x601394a1,0x2f
  423021:	mov    ebp,0x28921826
  423026:	adc    esp,ebp
  423028:	aad    0xf
  42302a:	div    DWORD PTR [eax+0x293195d2]
  423030:	inc    esp
  423031:	jp     0x423003
  423033:	leave  
  423034:	leave  
  423035:	(bad)  
  423037:	stos   DWORD PTR es:[edi],eax
  423038:	data16 jno 0x423082
  42303b:	imul   eax,ebx,0x548620d3
  423041:	xchg   esi,eax
  423042:	lds    ebp,FWORD PTR [esi*8+0x6ee51f2c]
  423049:	or     eax,0xa8b1eacb
  42304e:	retf   
  42304f:	xor    BYTE PTR [ebx-0x35d6d4],bl
  423055:	cmc    
  423056:	inc    ebp
  423057:	adc    ebp,DWORD PTR [ebx-0x3185ea79]
  42305d:	test   eax,0x17693195
  423062:	xor    ecx,DWORD PTR [ecx+0x5d]
  423065:	fistp  WORD PTR [esi+0x330bcc7c]
  42306b:	and    al,0x5
  42306d:	jnp    0x423074
  42306f:	cwde   
  423070:	test   DWORD PTR [edi+0x51f77a8d],esp
  423076:	xchg   ecx,eax
  423077:	or     eax,0xe41f89a1
  42307c:	add    BYTE PTR [edx+ebx*1],dh
  42307f:	mov    BYTE PTR [eax],0x53
  423082:	jp     0x423092
  423084:	cs fwait
  423086:	adc    al,0x2d
  423088:	ret    0xdb15
  42308b:	xchg   ecx,eax
  42308c:	and    bl,al
  42308e:	dec    ecx
  42308f:	mov    edi,0x6375aab5
  423094:	shl    esi,cl
  423096:	jmp    0x58fe:0x20ebf3ab
  42309d:	dec    ebp
  42309e:	cmp    ebp,eax
  4230a0:	sbb    DWORD PTR [esi-0x57],0xc2dd74c3
  4230a7:	push   ds
  4230a8:	aad    0xff
  4230aa:	scas   eax,DWORD PTR es:[edi]
  4230ab:	data16 jnp 0x423119
  4230ae:	xor    dh,dh
  4230b0:	into   
  4230b1:	fwait
  4230b2:	push   ss
  4230b3:	pushf  
  4230b4:	es push ebx
  4230b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230b7:	pop    ebx
  4230b8:	out    0x28,eax
  4230ba:	xor    DWORD PTR [esi],0xc77362f4
  4230c0:	inc    ebp
  4230c1:	(bad)  
  4230c2:	sbb    al,0x75
  4230c4:	sbb    al,0x93
  4230c6:	nop
  4230c7:	mov    BYTE PTR [ebx+ecx*1+0x410fe5b6],0xb4
  4230cf:	iret   
  4230d0:	and    BYTE PTR [ebx+0x55a3a602],0x76
  4230d7:	mov    dl,0xba
  4230d9:	cdq    
  4230da:	sub    eax,0x385f3251
  4230df:	aas    
  4230e0:	mov    dh,0x4
  4230e2:	out    dx,eax
  4230e3:	shl    BYTE PTR [ecx],1
  4230e5:	adc    esi,edi
  4230e7:	cmp    ah,BYTE PTR [edx+edx*1]
  4230ea:	dec    esp
  4230eb:	popf   
  4230ec:	mov    bl,0xea
  4230ee:	mov    cl,0x21
  4230f0:	jae    0x4230b7
  4230f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f3:	aas    
  4230f4:	push   0x59acd86a
  4230f9:	dec    ebx
  4230fa:	pop    ebp
  4230fb:	push   es
  4230fc:	and    al,0x65
  4230fe:	out    0xbc,al
  423100:	mov    dl,0xa5
  423102:	pop    ebx
  423103:	(bad)  
  423104:	sub    ecx,DWORD PTR [edx]
  423106:	pop    es
  423107:	(bad)  
  423109:	ret    
  42310a:	out    dx,eax
  42310b:	je     0x423126
  42310d:	jge    0x423094
  42310f:	sub    ebp,esi
  423111:	adc    eax,0x895141c3
  423116:	mov    ds:0x69c638db,eax
  42311b:	lods   eax,DWORD PTR ds:[esi]
  42311c:	mov    eax,ds:0xaae563bb
  423121:	fbld   TBYTE PTR [bx+di+0x4882]
  423126:	ret    
  423127:	aad    0x6e
  423129:	and    al,BYTE PTR [edx+0x19]
  42312c:	inc    edi
  42312d:	(bad)  
  42312e:	pop    esp
  42312f:	push   ebp
  423130:	imul   edi,DWORD PTR [esi-0x28],0x9
  423134:	inc    edi
  423135:	pop    ss
  423136:	mov    fs:0x5ee82e4e,eax
  42313c:	push   ds
  42313d:	xor    ebp,DWORD PTR [edi-0x79]
  423140:	xchg   ebx,eax
  423141:	add    al,0xa2
  423143:	jno    0x423144
  423145:	loop   0x4230e8
  423147:	fisubr DWORD PTR [ebp+0x32]
  42314a:	mov    ch,0x93
  42314c:	mov    cl,0xb7
  42314e:	lods   al,BYTE PTR ds:[esi]
  42314f:	mov    ecx,0x64f9cd92
  423154:	fisttp WORD PTR [edx-0x36]
  423157:	xchg   edx,eax
  423158:	cld    
  423159:	mov    al,0xd0
  42315b:	adc    esi,DWORD PTR [edx-0x3dcb822]
  423161:	in     eax,0x1e
  423163:	scas   al,BYTE PTR es:[edi]
  423164:	imul   esi,DWORD PTR [ebx-0x4d],0x50080309
  42316b:	inc    ebp
  42316c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42316d:	or     BYTE PTR [eax*1+0x6b326590],bh
  423174:	fild   QWORD PTR [ecx-0x38029a0c]
  42317a:	inc    ecx
  42317b:	in     eax,dx
  42317c:	fldcw  WORD PTR [edx+0x67]
  42317f:	xchg   cl,bh
  423181:	inc    esp
  423182:	lahf   
  423183:	xor    BYTE PTR [ebx-0x10],bl
  423186:	dec    eax
  423187:	daa    
  423188:	mov    dl,0x5a
  42318a:	adc    edi,ebp
  42318c:	jg     0x4231f8
  42318e:	dec    ebx
  42318f:	repz mov al,ds:0x68bcb978
  423195:	std    
  423196:	ret    0x2036
  423199:	sbb    esp,DWORD PTR [edi]
  42319b:	nop
  42319c:	push   edi
  42319d:	call   0x8f19:0x3dc685a7
  4231a4:	adc    al,0xc0
  4231a6:	xor    cl,bl
  4231a8:	imul   ecx,ebp,0xfffffffd
  4231ab:	shr    DWORD PTR [ebx+0x5e570b8d],cl
  4231b1:	add    ch,dh
  4231b3:	jnp    0x423149
  4231b5:	pushf  
  4231b6:	fwait
  4231b7:	inc    ebp
  4231b8:	mov    WORD PTR [ebx],?
  4231ba:	das    
  4231bb:	dec    eax
  4231bc:	repz xor eax,0xccd8214d
  4231c2:	pop    esp
  4231c3:	cmp    eax,0xc190d1e2
  4231c8:	fisub  WORD PTR [edi-0x23558442]
  4231ce:	mov    eax,0xd4719cb0
  4231d3:	sbb    BYTE PTR [esi],al
  4231d5:	jge    0x423173
  4231d7:	mov    ecx,0x84c0c839
  4231dc:	pop    ds
  4231dd:	das    
  4231de:	inc    eax
  4231df:	jbe    0x423167
  4231e1:	xor    ebp,DWORD PTR [edi+0x3e0d9440]
  4231e7:	mov    edx,0x32aee53c
  4231ec:	test   DWORD PTR [ebx-0x16001274],edi
  4231f2:	or     DWORD PTR [ebx+esi*2+0x1b],esp
  4231f6:	xor    BYTE PTR [ebp-0xf4eae12],ch
  4231fc:	sub    ecx,esi
  4231fe:	jp     0x4231a6
  423200:	add    BYTE PTR [esi],0x40
  423203:	xor    DWORD PTR [ecx+eiz*8],eax
  423206:	sbb    bh,BYTE PTR [esi]
  423208:	addr16 out 0x4d,eax
  42320b:	sbb    BYTE PTR [esi-0xd],dl
  42320e:	cld    
  42320f:	sbb    DWORD PTR [ebx],edi
  423211:	push   ebx
  423212:	dec    ebx
  423213:	fs inc edi
  423215:	xor    edi,edx
  423217:	pop    esp
  423218:	(bad)  
  423219:	or     ebx,DWORD PTR [edx+0x69dfe73a]
  42321f:	in     al,dx
  423220:	cmp    BYTE PTR [ecx],al
  423222:	mov    edi,0x2a25a383
  423227:	inc    edx
  423228:	xlat   BYTE PTR ds:[ebx]
  423229:	and    dl,al
  42322b:	outs   dx,BYTE PTR ds:[esi]
  42322c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42322d:	fnstsw WORD PTR [eax]
  42322f:	imul   ecx,DWORD PTR [ebp-0x59e7574e],0x2246b988
  423239:	repnz cmp DWORD PTR [esi-0xa],esi
  42323d:	xchg   ecx,eax
  42323e:	les    edx,FWORD PTR [ecx-0x56518113]
  423244:	in     al,0xec
  423246:	mov    eax,0x883498b0
  42324b:	add    eax,0x54f96e80
  423250:	pop    edx
  423251:	mov    esp,0x4523a39c
  423256:	pop    esp
  423257:	xchg   ecx,eax
  423258:	stos   DWORD PTR es:[edi],eax
  423259:	fimul  WORD PTR [edx-0x6170e69b]
  42325f:	pop    ds
  423260:	cmc    
  423261:	xchg   edi,eax
  423262:	pop    esp
  423263:	or     ebp,DWORD PTR [edx-0xe]
  423266:	push   cs
  423267:	mov    edi,0x3188b38f
  42326c:	in     al,dx
  42326d:	cli    
  42326e:	in     eax,dx
  42326f:	inc    edi
  423270:	mul    bh
  423272:	add    DWORD PTR [esi],edi
  423274:	js     0x423266
  423276:	lahf   
  423277:	leave  
  423278:	mov    al,0xd8
  42327a:	add    al,0x9e
  42327c:	jle    0x42320f
  42327e:	popf   
  42327f:	mov    ah,bl
  423281:	add    al,0x50
  423283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423284:	loop   0x4232dd
  423286:	mov    ch,0x82
  423288:	xlat   BYTE PTR ds:[ebx]
  423289:	call   0x11e3f866
  42328e:	and    al,0x9d
  423290:	retf   0x5b3d
  423293:	sahf   
  423294:	mov    ebx,DWORD PTR [ecx-0x1333e6b]
  42329a:	gs jbe 0x4232e1
  42329d:	and    BYTE PTR [edi],al
  42329f:	outs   dx,DWORD PTR ds:[esi]
  4232a0:	xchg   ebx,eax
  4232a1:	shr    BYTE PTR [edx-0x70],cl
  4232a4:	xchg   esi,eax
  4232a5:	push   esp
  4232a6:	mov    gs,WORD PTR [edx+0x63e8ce7]
  4232ac:	stos   BYTE PTR es:[edi],al
  4232ad:	push   ss
  4232ae:	popf   
  4232af:	ror    DWORD PTR [edx+0x45389fa0],cl
  4232b5:	push   ds
  4232b6:	xor    DWORD PTR [edx-0x13589d4d],ecx
  4232bc:	sbb    ebp,esp
  4232be:	out    dx,eax
  4232bf:	mov    esi,0xe7320b92
  4232c4:	stos   DWORD PTR es:[edi],eax
  4232c5:	sbb    DWORD PTR [esi+0x57],esi
  4232c8:	cli    
  4232c9:	sti    
  4232ca:	aas    
  4232cb:	shl    edi,cl
  4232cd:	or     al,0xd2
  4232cf:	inc    esp
  4232d0:	mov    ecx,0xa1121767
  4232d5:	hlt    
  4232d6:	mov    WORD PTR [ebp-0x38],?
  4232d9:	stc    
  4232da:	(bad)  
  4232db:	retf   
  4232dc:	mov    dl,0x20
  4232de:	push   ecx
  4232df:	aas    
  4232e0:	test   DWORD PTR [esi-0x7d838e0f],edi
  4232e6:	add    cl,al
  4232e8:	(bad)  
  4232e9:	sbb    BYTE PTR [ebp+0x3b44fbfc],ch
  4232ef:	pop    es
  4232f0:	jmp    0xfd3f:0x29b873c0
  4232f7:	and    BYTE PTR [ecx+0x7cf23579],0x47
  4232fe:	dec    ebp
  4232ff:	popf   
  423300:	push   cs
  423301:	mov    esi,DWORD PTR [eax-0x22d2ad04]
  423307:	sub    edi,DWORD PTR [ecx+0x41376103]
  42330d:	sahf   
  42330e:	mov    ah,0x9c
  423310:	adc    BYTE PTR [ecx-0x40],0x4
  423314:	ja     0x42329a
  423316:	cld    
  423317:	push   esp
  423318:	push   0xffffffb6
  42331a:	imul   esp,DWORD PTR [ebx-0x16],0x2
  42331e:	jnp    0x4232ef
  423320:	call   0x24dc:0x5acde969
  423327:	mov    ebp,0x550c6f2c
  42332c:	add    ebx,DWORD PTR [esi+0x5d]
  42332f:	fld    st(7)
  423331:	push   esp
  423332:	dec    eax
  423333:	fistp  DWORD PTR [ebp-0x699f2e76]
  423339:	mov    ecx,DWORD PTR [ecx+ebp*2-0x741fba77]
  423340:	inc    ebp
  423341:	cld    
  423342:	mov    ecx,DWORD PTR [ebp-0x4]
  423345:	sub    eax,ecx
  423347:	mov    DWORD PTR [ebp-0x4],eax
  42334a:	or     DWORD PTR [ebp-0x4],0xf89c85be
  423351:	mov    eax,DWORD PTR [ebp-0xc]
  423354:	xor    eax,esi
  423356:	add    eax,edi
  423358:	push   eax
  423359:	mov    eax,DWORD PTR [ebp-0x10]
  42335c:	xor    eax,esi
  42335e:	add    eax,edi
  423360:	push   eax
  423361:	mov    eax,DWORD PTR [ebp-0x4]
  423364:	xor    eax,esi
  423366:	add    eax,edi
  423368:	push   eax
  423369:	lea    eax,[ebp-0x78]
  42336c:	push   eax
  42336d:	push   DWORD PTR [ebp-0x2c]
  423370:	push   DWORD PTR [ebp-0x28]
  423373:	call   0x413e4f
  423378:	test   eax,eax
  42337a:	je     0x4233a8
  423380:	lea    eax,[ebp-0x78]
  423383:	push   eax
  423384:	mov    eax,DWORD PTR [ebp-0x28]
  423387:	xor    eax,esi
  423389:	add    eax,edi
  42338b:	push   eax
  42338c:	mov    eax,DWORD PTR [ebp-0x24]
  42338f:	add    eax,0xaa
  423394:	push   eax
  423395:	mov    eax,DWORD PTR [ebp-0x24]
  423398:	mov    eax,DWORD PTR [eax+0x198]
  42339e:	push   DWORD PTR [eax]
  4233a0:	call   0x40a988
  4233a5:	mov    DWORD PTR [ebp-0x14],eax
  4233a8:	mov    ecx,DWORD PTR ds:0x429516
  4233ae:	lea    eax,[ebp+0x4]
  4233b1:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4233b8:	inc    DWORD PTR ds:0x429516
  4233be:	mov    eax,DWORD PTR [ebp-0x14]
  4233c1:	test   eax,eax
  4233c3:	je     0x42342b
  4233c9:	lea    eax,[ebp-0x8]
  4233cc:	mov    DWORD PTR [ebp-0x34],eax
  4233cf:	mov    eax,DWORD PTR [ebp-0x30]
  4233d2:	mov    DWORD PTR [ebp-0x8],eax
  4233d5:	mov    eax,DWORD PTR [ebp-0x8]
  4233d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4233db:	sub    eax,ecx
  4233dd:	mov    DWORD PTR [ebp-0x8],eax
  4233e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4233e3:	xor    ecx,esi
  4233e5:	mov    eax,0xffcd8d0f
  4233ea:	sub    eax,ecx
  4233ec:	add    DWORD PTR [ebp-0x8],eax
  4233ef:	mov    eax,DWORD PTR [ebp-0x8]
  4233f2:	mov    ecx,DWORD PTR [ebp-0x14]
  4233f5:	mov    DWORD PTR [ecx+0x1],eax
  4233f8:	mov    eax,DWORD PTR [ebp-0x14]
  4233fb:	push   DWORD PTR [ebp-0x24]
  4233fe:	mov    BYTE PTR [eax],0xe9
  423401:	mov    eax,ds:0x42929a
  423406:	push   DWORD PTR [eax]
  423408:	push   DWORD PTR ds:0x4294fe
  42340e:	push   DWORD PTR ds:0x4292a2
  423414:	push   DWORD PTR ds:0x4294de
  42341a:	push   DWORD PTR ds:0x42a04a
  423420:	push   DWORD PTR [ebp-0x28]
  423423:	push   DWORD PTR [ebp-0x2c]
  423426:	mov    eax,DWORD PTR [ebp-0x14]
  423429:	call   eax
  42342b:	pop    edi
  42342c:	pop    esi
  42342d:	leave  
  42342e:	ret    
  42342f:	push   ebp
  423430:	mov    ebp,esp
  423432:	sub    esp,0x1c
  423435:	and    DWORD PTR ds:0x42a2ae,0x0
  42343f:	mov    ecx,DWORD PTR ds:0x42a2ae
  423445:	inc    ecx
  423446:	mov    DWORD PTR ds:0x42a2ae,ecx
  42344c:	cmp    DWORD PTR ds:0x42a2ae,0x27
  423453:	jle    0x42347b
  423459:	jmp    0x42346e
  42345e:	push   0x42a262
  423463:	push   0x429153
  423468:	call   DWORD PTR ds:0x42a3f2
  42346e:	cmp    DWORD PTR ds:0x42a2ae,0x1c
  423475:	jb     0x42343f
  42347b:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  423482:	lea    eax,[ebp+0x14]
  423485:	add    DWORD PTR ds:0x42a272,ebx
  42348b:	mov    DWORD PTR [ebp-0x4],eax
  42348e:	and    DWORD PTR ds:0x42a2de,0x0
  423498:	jmp    0x4234ac
  42349d:	xor    ecx,ecx
  42349f:	or     ecx,DWORD PTR ds:0x42a2de
  4234a5:	inc    ecx
  4234a6:	mov    DWORD PTR ds:0x42a2de,ecx
  4234ac:	cmp    DWORD PTR ds:0x42a2de,0x13
  4234b3:	jae    0x4234f8
  4234b9:	cmp    DWORD PTR ds:0x42a2de,0x7
  4234c0:	ja     0x4234f8
  4234c6:	jmp    0x4234d7
  4234cb:	push   DWORD PTR [ebp-0x10]
  4234ce:	push   DWORD PTR [ebp-0xc]
  4234d1:	call   DWORD PTR ds:0x42a3c2
  4234d7:	cmp    DWORD PTR ds:0x42a2de,0x6
  4234de:	jne    0x4234f3
  4234e4:	xor    ecx,ecx
  4234e6:	or     ecx,DWORD PTR ds:0x42a2de
  4234ec:	inc    ecx
  4234ed:	mov    DWORD PTR ds:0x42a2de,ecx
  4234f3:	jmp    0x42349d
  4234f8:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4234ff:	and    DWORD PTR ds:0x42a2ba,0x0
  423509:	xor    edx,edx
  42350b:	xor    edx,DWORD PTR ds:0x42a2ba
  423511:	inc    edx
  423512:	mov    DWORD PTR ds:0x42a2ba,edx
  423518:	cmp    DWORD PTR ds:0x42a2ba,0x25
  42351f:	jb     0x42354b
  423525:	jmp    0x42353e
  42352a:	push   DWORD PTR [ebp-0x10]
  42352d:	push   0x42a2ae
  423532:	push   DWORD PTR [ebp-0x10]
  423535:	push   DWORD PTR [ebp-0x20]
  423538:	call   DWORD PTR ds:0x42a3f6
  42353e:	cmp    DWORD PTR ds:0x42a2ba,0x1e
  423545:	jb     0x423509
  42354b:	lea    eax,[ebp-0xc]
  42354e:	xor    ecx,ecx
  423550:	mov    DWORD PTR [ebp-0x14],eax
  423553:	or     eax,DWORD PTR ds:0x42a25e
  423559:	mov    eax,DWORD PTR [ebp-0xc]
  42355c:	and    DWORD PTR ds:0x42a2da,ebx
  423562:	mov    edx,DWORD PTR [ebp-0x14]
  423565:	mov    DWORD PTR ds:0x42a2a6,0x55c4
  42356f:	mov    ecx,0x75108aa
  423574:	xor    eax,ecx
  423576:	sub    DWORD PTR ds:0x42a26a,0x3296
  423580:	add    eax,0x3272f1
  423585:	mov    DWORD PTR [edx],eax
  423587:	add    edx,eax
  423589:	mov    eax,ds:0x429296
  42358e:	mov    DWORD PTR ds:0x42a2da,0x12
  423598:	cmp    DWORD PTR ds:0x42a2da,0x0
  42359f:	je     0x4235f3
  4235a5:	cmp    DWORD PTR ds:0x42a2da,0x5
  4235ac:	jb     0x4235f3
  4235b2:	jmp    0x4235c7
  4235b7:	push   0x471b
  4235bc:	push   0x42a2a6
  4235c1:	call   DWORD PTR ds:0x42a3fa
  4235c7:	cmp    DWORD PTR ds:0x42a2da,0x6
  4235ce:	jne    0x4235e1
  4235d4:	mov    edx,DWORD PTR ds:0x42a2da
  4235da:	dec    edx
  4235db:	mov    DWORD PTR ds:0x42a2da,edx
  4235e1:	mov    edx,DWORD PTR ds:0x42a2da
  4235e7:	dec    edx
  4235e8:	mov    DWORD PTR ds:0x42a2da,edx
  4235ee:	jmp    0x423598
  4235f3:	mov    edx,DWORD PTR [ebp-0x4]
  4235f6:	mov    eax,DWORD PTR [eax]
  4235f8:	add    eax,DWORD PTR [edx]
  4235fa:	sub    DWORD PTR ds:0x42a2da,ebx
  423600:	push   esi
  423601:	sub    edx,edx
  423603:	mov    DWORD PTR [ebp-0x8],eax
  423606:	mov    edx,DWORD PTR [ebp+0x8]
  423609:	mov    eax,ds:0x42941e
  42360e:	mov    eax,DWORD PTR [eax+0x198]
  423614:	xor    edx,ecx
  423616:	or     DWORD PTR ds:0x42a2ca,ebx
  42361c:	mov    esi,0x3272f1
  423621:	adc    DWORD PTR ds:0x42a262,0x42a296
  42362b:	add    edx,esi
  42362d:	mov    DWORD PTR ds:0x42a2ae,0x33f
  423637:	cmp    DWORD PTR [eax],edx
  423639:	mov    DWORD PTR ds:0x42a29e,0x6ec0
  423643:	je     0x423664
  423649:	mov    DWORD PTR ds:0x42a2d2,0x6d4b
  423653:	mov    eax,DWORD PTR [eax]
  423655:	mov    DWORD PTR ds:0x42a296,0x79fc
  42365f:	jmp    0x423a89
  423664:	mov    eax,DWORD PTR [ebp+0x18]
  423667:	xor    eax,ecx
  423669:	and    DWORD PTR ds:0x42a27a,0x42a26a
  423673:	push   ebx
  423674:	and    DWORD PTR ds:0x42a2c2,0x0
  42367e:	jmp    0x423692
  423683:	xor    ebx,ebx
  423685:	xor    ebx,DWORD PTR ds:0x42a2c2
  42368b:	inc    ebx
  42368c:	mov    DWORD PTR ds:0x42a2c2,ebx
  423692:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  423699:	jae    0x4236bf
  42369f:	cmp    DWORD PTR ds:0x42a2c2,0x26
  4236a6:	jb     0x4236bf
  4236ac:	jmp    0x4236ba
  4236b1:	push   DWORD PTR [ebp-0x20]
  4236b4:	call   DWORD PTR ds:0x42a3c6
  4236ba:	jmp    0x423683
  4236bf:	add    eax,esi
  4236c1:	sub    ebx,DWORD PTR ds:0x42a266
  4236c7:	xor    edx,edx
  4236c9:	mov    ebx,0xfabdbed8
  4236ce:	and    DWORD PTR ds:0x42a302,0x5581
  4236d8:	add    eax,ebx
  4236da:	push   edi
  4236db:	mov    DWORD PTR ds:0x42a2de,0x181
  4236e5:	adc    edx,0xffffffff
  4236e8:	movzx  edi,BYTE PTR ds:0x42a2fa
  4236ef:	adc    DWORD PTR ds:0x42a2d2,edi
  4236f5:	mov    edi,0x8a29a13d
  4236fa:	xor    eax,edi
  4236fc:	xor    edx,0x0
  4236ff:	cmp    eax,0x70941fe5
  423704:	jne    0x423727
  42370a:	cmp    edx,0xffffffff
  42370d:	mov    DWORD PTR ds:0x42a2d6,0x6011
  423717:	jne    0x423727
  42371d:	push   0xf89c85ba
  423722:	jmp    0x423a76
  423727:	mov    eax,DWORD PTR [ebp+0x18]
  42372a:	xor    eax,ecx
  42372c:	adc    DWORD PTR ds:0x42a29a,0x42a2d6
  423736:	add    eax,esi
  423738:	mov    DWORD PTR ds:0x42a2f2,0x535
  423742:	xor    edx,edx
  423744:	xor    DWORD PTR ds:0x42a2de,0x42a286
  42374e:	add    eax,ebx
  423750:	adc    edx,0xffffffff
  423753:	xor    eax,edi
  423755:	xor    edx,0x0
  423758:	mov    DWORD PTR ds:0x42a26a,0x15dc
  423762:	cmp    eax,0x70941fe7
  423767:	mov    DWORD PTR ds:0x42a2da,0x1950
  423771:	jne    0x423a63
  423777:	mov    DWORD PTR ds:0x42a2a2,0x37f9
  423781:	cmp    edx,0xffffffff
  423784:	jne    0x423a63
  42378a:	add    edx,DWORD PTR ds:0x42a286
  423790:	mov    eax,DWORD PTR [ebp+0x10]
  423793:	movzx  edx,WORD PTR ds:0x42a2da
  42379a:	xor    DWORD PTR ds:0x42a2f6,edx
  4237a0:	xor    eax,ecx
  4237a2:	add    DWORD PTR ds:0x42a292,0x42a302
  4237ac:	add    eax,esi
  4237ae:	mov    DWORD PTR [ebp-0x18],eax
  4237b1:	mov    eax,DWORD PTR [ebp+0xc]
  4237b4:	mov    edx,DWORD PTR [ebp-0x8]
  4237b7:	xor    eax,ecx
  4237b9:	add    eax,esi
  4237bb:	xor    DWORD PTR ds:0x42a2be,0x55ef
  4237c5:	imul   eax,DWORD PTR [edx]
  4237c8:	mov    DWORD PTR ds:0x42a296,0x1045
  4237d2:	mov    edx,DWORD PTR [ebp+0x8]
  4237d5:	sub    DWORD PTR ds:0x42a2f6,0x3ea4
  4237df:	xor    edx,ecx
  4237e1:	adc    DWORD PTR ds:0x42a2e2,0x475c
  4237eb:	add    edx,esi
  4237ed:	mov    DWORD PTR ds:0x42a2be,0x342
  4237f7:	cmp    edx,eax
  4237f9:	mov    DWORD PTR ds:0x42a2b6,0x7ea6
  423803:	mov    eax,DWORD PTR [ebp-0x4]
  423806:	je     0x4238e0
  42380c:	mov    edx,DWORD PTR [ebp-0x18]
  42380f:	sub    DWORD PTR ds:0x42a2aa,0x2e10
  423819:	add    DWORD PTR [eax],edx
  42381b:	xor    DWORD PTR ds:0x42a2c6,ebx
  423821:	mov    eax,DWORD PTR [ebp-0x4]
  423824:	mov    edx,DWORD PTR ds:0x42a27e
  42382a:	and    DWORD PTR ds:0x42a2ee,edx
  423830:	mov    edx,DWORD PTR [ebp+0xc]
  423833:	or     DWORD PTR ds:0x42a2c6,0x42a2ea
  42383d:	xor    edx,ecx
  42383f:	xor    DWORD PTR ds:0x42a2a2,0x2c59
  423849:	add    edx,esi
  42384b:	add    DWORD PTR ds:0x42a25a,0x1203
  423855:	imul   edx,DWORD PTR [eax]
  423858:	mov    DWORD PTR [eax],edx
  42385a:	mov    eax,DWORD PTR [ebp-0x4]
  42385d:	mov    DWORD PTR [ebp-0x1c],eax
  423860:	and    DWORD PTR ds:0x42a2de,0x0
  42386a:	jmp    0x42387a
  42386f:	mov    eax,ds:0x42a2de
  423874:	inc    eax
  423875:	mov    ds:0x42a2de,eax
  42387a:	cmp    DWORD PTR ds:0x42a2de,0x1a
  423881:	jae    0x4238cc
  423887:	cmp    DWORD PTR ds:0x42a2de,0xc
  42388e:	jl     0x4238cc
  423894:	jmp    0x4238ac
  423899:	push   DWORD PTR [ebp-0x10]
  42389c:	push   0x1
  42389e:	push   DWORD PTR [ebp-0x24]
  4238a1:	push   0x429153
  4238a6:	call   DWORD PTR ds:0x42a3ca
  4238ac:	cmp    DWORD PTR ds:0x42a2de,0xb
  4238b3:	jne    0x4238c7
  4238b9:	xor    eax,eax
  4238bb:	xor    eax,DWORD PTR ds:0x42a2de
  4238c1:	inc    eax
  4238c2:	mov    ds:0x42a2de,eax
  4238c7:	jmp    0x42386f
  4238cc:	mov    eax,DWORD PTR [ebp+0x10]
  4238cf:	xor    eax,ecx
  4238d1:	mov    edx,0xffcd8d0f
  4238d6:	sub    edx,eax
  4238d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4238db:	jmp    0x4238fa
  4238e0:	mov    edx,DWORD PTR [ebp+0x14]
  4238e3:	xor    DWORD PTR [eax],edx
  4238e5:	mov    eax,DWORD PTR [ebp-0x4]
  4238e8:	mov    DWORD PTR [ebp-0x1c],eax
  4238eb:	mov    eax,DWORD PTR [ebp+0x10]
  4238ee:	xor    eax,ecx
  4238f0:	mov    edx,0xffcd8d0f
  4238f5:	sub    edx,eax
  4238f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4238fa:	add    DWORD PTR [eax],edx
  4238fc:	mov    eax,DWORD PTR [ebp-0x4]
  4238ff:	mov    edx,DWORD PTR [ebp-0x8]
  423902:	add    edx,DWORD PTR [eax]
  423904:	mov    DWORD PTR [ebp-0x8],edx
  423907:	mov    eax,DWORD PTR [ebp+0xc]
  42390a:	mov    edx,DWORD PTR [ebp+0xc]
  42390d:	xor    edx,ecx
  42390f:	xor    eax,ecx
  423911:	lea    eax,[eax+edx*1+0x64e5e2]
  423918:	mov    edx,DWORD PTR [ebp+0xc]
  42391b:	xor    edx,ecx
  42391d:	add    edx,esi
  42391f:	imul   eax,edx
  423922:	mov    edx,DWORD PTR [ebp+0xc]
  423925:	xor    edx,ecx
  423927:	sub    edx,eax
  423929:	mov    eax,DWORD PTR [ebp-0x4]
  42392c:	add    edx,esi
  42392e:	cmp    DWORD PTR [eax],edx
  423930:	mov    eax,DWORD PTR [ebp-0x4]
  423933:	jg     0x423950
  423939:	mov    DWORD PTR [ebp-0x1c],eax
  42393c:	mov    eax,DWORD PTR [ebp+0x10]
  42393f:	xor    eax,ecx
  423941:	mov    edx,0xffcd8d0f
  423946:	sub    edx,eax
  423948:	mov    eax,DWORD PTR [ebp-0x1c]
  42394b:	jmp    0x423957
  423950:	mov    edx,DWORD PTR [ebp+0x10]
  423953:	xor    edx,ecx
  423955:	add    edx,esi
  423957:	add    DWORD PTR [eax],edx
  423959:	mov    eax,DWORD PTR [ebp-0x8]
  42395c:	mov    edx,DWORD PTR [ebp-0x10]
  42395f:	mov    eax,DWORD PTR [eax]
  423961:	xor    edx,ecx
  423963:	add    edx,0x3272f0
  423969:	not    edx
  42396b:	and    eax,edx
  42396d:	mov    DWORD PTR [ebp-0x4],eax
  423970:	movsx  eax,BYTE PTR [eax+0x1]
  423974:	cdq    
  423975:	add    eax,ebx
  423977:	adc    edx,0xffffffff
  42397a:	xor    eax,edi
  42397c:	xor    edx,0x0
  42397f:	cmp    eax,0x70941e0f
  423984:	jne    0x4239b8
  42398a:	cmp    edx,0xffffffff
  42398d:	jne    0x4239b8
  423993:	mov    eax,DWORD PTR [ebp-0x4]
  423996:	movsx  eax,BYTE PTR [eax]
  423999:	cdq    
  42399a:	add    eax,ebx
  42399c:	adc    edx,0xffffffff
  42399f:	xor    eax,edi
  4239a1:	xor    edx,0x0
  4239a4:	cmp    eax,0x70941e18
  4239a9:	jne    0x4239b8
  4239af:	cmp    edx,0xffffffff
  4239b2:	je     0x4239cf
  4239b8:	mov    eax,DWORD PTR [ebp-0x10]
  4239bb:	xor    eax,ecx
  4239bd:	mov    edx,0xffcd8d0f
  4239c2:	sub    edx,eax
  4239c4:	add    DWORD PTR [ebp-0x4],edx
  4239c7:	mov    eax,DWORD PTR [ebp-0x4]
  4239ca:	jmp    0x423970
  4239cf:	mov    eax,DWORD PTR [ebp-0x14]
  4239d2:	mov    eax,DWORD PTR [eax]
  4239d4:	mov    edx,DWORD PTR [ebp-0x4]
  4239d7:	mov    edx,DWORD PTR [edx+0x3c]
  4239da:	lea    eax,[edx+eax*8+0x78]
  4239de:	mov    edx,DWORD PTR [ebp-0x4]
  4239e1:	mov    eax,DWORD PTR [eax+edx*1]
  4239e4:	mov    DWORD PTR [ebp-0x8],eax
  4239e7:	mov    eax,DWORD PTR [ebp+0x8]
  4239ea:	xor    eax,ecx
  4239ec:	add    eax,esi
  4239ee:	mov    DWORD PTR [ebp-0x14],eax
  4239f1:	mov    eax,DWORD PTR [ebp+0x8]
  4239f4:	mov    edx,DWORD PTR [ebp-0x8]
  4239f7:	xor    eax,ecx
  4239f9:	add    eax,esi
  4239fb:	cmp    edx,eax
  4239fd:	jne    0x423a1b
  423a03:	mov    eax,DWORD PTR [ebp+0xc]
  423a06:	xor    eax,ecx
  423a08:	mov    ecx,DWORD PTR [ebp-0x8]
  423a0b:	add    eax,esi
  423a0d:	imul   eax,ecx
  423a10:	mov    DWORD PTR [ebp-0x8],eax
  423a13:	push   DWORD PTR [ebp+0x18]
  423a16:	jmp    0x423a76
  423a1b:	mov    eax,DWORD PTR [ebp-0x8]
  423a1e:	mov    ecx,DWORD PTR [ebp-0x4]
  423a21:	add    eax,ecx
  423a23:	mov    DWORD PTR [ebp-0x14],eax
  423a26:	mov    eax,DWORD PTR [ebp-0x14]
  423a29:	mov    eax,DWORD PTR [eax+0xc]
  423a2c:	movsx  eax,BYTE PTR [eax+ecx*1]
  423a30:	cdq    
  423a31:	add    eax,ebx
  423a33:	adc    edx,0xffffffff
  423a36:	xor    eax,edi
  423a38:	xor    edx,0x0
  423a3b:	cmp    eax,0x70941e1e
  423a40:	jne    0x423a13
  423a46:	cmp    edx,0xffffffff
  423a49:	jne    0x423a13
  423a4f:	mov    eax,ds:0x42941e
  423a54:	mov    eax,DWORD PTR [eax+0x198]
  423a5a:	mov    DWORD PTR [eax],ecx
  423a5c:	mov    eax,ecx
  423a5e:	jmp    0x423a87
  423a63:	mov    eax,DWORD PTR [ebp+0x18]
  423a66:	cmp    eax,0xf89c85ba
  423a6b:	jne    0x423a87
  423a71:	push   0xf89c85bb
  423a76:	push   DWORD PTR [ebp+0x14]
  423a79:	push   DWORD PTR [ebp+0x10]
  423a7c:	push   DWORD PTR [ebp+0xc]
  423a7f:	push   DWORD PTR [ebp+0x8]
  423a82:	call   0x42342f
  423a87:	pop    edi
  423a88:	pop    ebx
  423a89:	pop    esi
  423a8a:	leave  
  423a8b:	ret    0x14
  423a8e:	push   ebp
  423a8f:	mov    ebp,esp
  423a91:	and    esp,0xfffffff8
  423a94:	add    DWORD PTR ds:0x42a2ae,0x42a2ee
  423a9e:	sub    esp,0x3fc
  423aa4:	add    DWORD PTR ds:0x42a25e,0x42a25a
  423aae:	push   ebx
  423aaf:	mov    DWORD PTR ds:0x42a286,0x16c4
  423ab9:	push   esi
  423aba:	push   edi
  423abb:	xor    edi,edi
  423abd:	adc    DWORD PTR ds:0x42a26e,0x6687
  423ac7:	push   edi
  423ac8:	sbb    DWORD PTR ds:0x42a29a,0x42a2e2
  423ad2:	push   edi
  423ad3:	and    DWORD PTR ds:0x42a2ca,0x42a2ce
  423add:	push   edi
  423ade:	call   DWORD PTR ds:0x42a3d2
  423ae4:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  423aee:	mov    DWORD PTR [esp+0x10],eax
  423af2:	and    DWORD PTR ds:0x42a262,0x1b9a
  423afc:	lea    eax,[esp+0x78]
  423b00:	push   eax
  423b01:	mov    DWORD PTR ds:0x42a2f6,0x43e8
  423b0b:	push   0x429542
  423b10:	call   DWORD PTR ds:0x42a406
  423b16:	mov    DWORD PTR ds:0x42a2ca,0x1192
  423b20:	cmp    eax,0xffffffff
  423b23:	mov    DWORD PTR ds:0x42a2ba,0x65ca
  423b2d:	je     0x423b3a
  423b33:	xor    eax,eax
  423b35:	jmp    0x424ddf
  423b3a:	and    DWORD PTR ds:0x42a2e2,0x0
  423b44:	mov    esi,DWORD PTR ds:0x42a2e2
  423b4a:	inc    esi
  423b4b:	mov    DWORD PTR ds:0x42a2e2,esi
  423b51:	cmp    DWORD PTR ds:0x42a2e2,0x23
  423b58:	jle    0x423b95
  423b5e:	jmp    0x423b88
  423b63:	push   0x42a2aa
  423b68:	push   0x7608
  423b6d:	push   0x7b9f
  423b72:	push   0x619c
  423b77:	push   DWORD PTR [ebp-0x18]
  423b7a:	push   DWORD PTR [ebp-0x18]
  423b7d:	push   0x2bb2
  423b82:	call   DWORD PTR ds:0x42a3ce
  423b88:	cmp    DWORD PTR ds:0x42a2e2,0x15
  423b8f:	jb     0x423b44
  423b95:	mov    esi,DWORD PTR ds:0x42a3fe
  423b9b:	push   0xf
  423b9d:	lea    eax,[esp+0x44]
  423ba1:	add    DWORD PTR ds:0x42a296,0x2da4
  423bab:	push   eax
  423bac:	adc    DWORD PTR ds:0x42a25a,0x42a2ce
  423bb6:	push   0x429556
  423bbb:	sub    DWORD PTR ds:0x42a2ca,0x42a2b6
  423bc5:	push   0x42956a
  423bca:	push   0x42958a
  423bcf:	sbb    DWORD PTR ds:0x42a2ae,0x7a6
  423bd9:	call   esi
  423bdb:	adc    DWORD PTR ds:0x42a2ae,0x6000
  423be5:	imul   eax,eax,0x300000
  423beb:	mov    DWORD PTR ds:0x42a256,0x5b4b
  423bf5:	cmp    eax,0x1b00000
  423bfa:	mov    DWORD PTR ds:0x42a266,0x1101
  423c04:	jne    0x423b33
  423c0a:	lea    eax,[esp+0x1b8]
  423c11:	sub    DWORD PTR ds:0x42a2c2,0x1046
  423c1b:	push   eax
  423c1c:	push   0x4295c6
  423c21:	call   DWORD PTR ds:0x42a402
  423c27:	mov    DWORD PTR ds:0x42a2a6,0x62e7
  423c31:	cmp    eax,0xffffffff
  423c34:	mov    DWORD PTR ds:0x42a292,0x7202
  423c3e:	jne    0x423b33
  423c44:	push   DWORD PTR [esp+0x10]
  423c48:	push   edi
  423c49:	and    DWORD PTR ds:0x42a27e,0x42a262
  423c53:	call   DWORD PTR ds:0x42a3e6
  423c59:	movzx  ecx,BYTE PTR ds:0x42a286
  423c60:	and    DWORD PTR ds:0x42a2a2,ecx
  423c66:	mov    DWORD PTR [esp+0x30],edi
  423c6a:	sub    ecx,0x7aec
  423c70:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423c78:	and    DWORD PTR ds:0x42a2be,0x0
  423c82:	jmp    0x423c96
  423c87:	xor    ebx,ebx
  423c89:	xor    ebx,DWORD PTR ds:0x42a2be
  423c8f:	inc    ebx
  423c90:	mov    DWORD PTR ds:0x42a2be,ebx
  423c96:	cmp    DWORD PTR ds:0x42a2be,0x1c
  423c9d:	jae    0x423ce1
  423ca3:	cmp    DWORD PTR ds:0x42a2be,0x8
  423caa:	jg     0x423ce1
  423cb0:	jmp    0x423cc0
  423cb5:	push   0x433e
  423cba:	call   DWORD PTR ds:0x42a3d6
  423cc0:	cmp    DWORD PTR ds:0x42a2be,0x7
  423cc7:	jne    0x423cdc
  423ccd:	xor    ebx,ebx
  423ccf:	xor    ebx,DWORD PTR ds:0x42a2be
  423cd5:	inc    ebx
  423cd6:	mov    DWORD PTR ds:0x42a2be,ebx
  423cdc:	jmp    0x423c87
  423ce1:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423ce9:	lea    eax,[esp+0x3c]
  423ced:	add    DWORD PTR ds:0x42a25a,ebx
  423cf3:	mov    DWORD PTR [esp+0x30],eax
  423cf7:	lea    eax,[esp+0x38]
  423cfb:	mov    DWORD PTR [esp+0x10],eax
  423cff:	and    ecx,DWORD PTR ds:0x42a2aa
  423d05:	mov    eax,ds:0x42941e
  423d0a:	mov    DWORD PTR ds:0x42a2e6,0x11
  423d14:	cmp    DWORD PTR ds:0x42a2e6,0x0
  423d1b:	je     0x423d70
  423d21:	cmp    DWORD PTR ds:0x42a2e6,0x7
  423d28:	jle    0x423d70
  423d2e:	jmp    0x423d44
  423d33:	push   DWORD PTR [ebp-0x28]
  423d36:	push   DWORD PTR [ebp-0x20]
  423d39:	push   0x43b4
  423d3e:	call   DWORD PTR ds:0x42a3da
  423d44:	cmp    DWORD PTR ds:0x42a2e6,0x8
  423d4b:	jne    0x423d5e
  423d51:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d57:	dec    ebx
  423d58:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d5e:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d64:	dec    ebx
  423d65:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d6b:	jmp    0x423d14
  423d70:	mov    eax,DWORD PTR [eax+0x1c8]
  423d76:	movzx  ecx,BYTE PTR ds:0x42a29e
  423d7d:	sub    DWORD PTR ds:0x42a286,ecx
  423d83:	mov    eax,DWORD PTR [eax]
  423d85:	mov    ecx,DWORD PTR [esp+0x10]
  423d89:	movzx  edi,WORD PTR ds:0x42a2b6
  423d90:	adc    DWORD PTR ds:0x42a2a6,edi
  423d96:	mov    edi,0x75108aa
  423d9b:	xor    eax,edi
  423d9d:	or     DWORD PTR ds:0x42a2b2,0x565
  423da7:	mov    ebx,0x3272f1
  423dac:	mov    DWORD PTR ds:0x42a272,0x78c3
  423db6:	add    eax,ebx
  423db8:	mov    DWORD PTR ds:0x42a2d2,0x2205
  423dc2:	mov    DWORD PTR [ecx],eax
  423dc4:	mov    eax,0x7be2
  423dc9:	mov    eax,ds:0x42a11a
  423dce:	cmp    eax,0x445cecf9
  423dd3:	jne    0x423ed2
  423dd9:	mov    DWORD PTR ds:0x42a2da,0x1f
  423de3:	cmp    DWORD PTR ds:0x42a2da,0x0
  423dea:	je     0x423e45
  423df0:	cmp    DWORD PTR ds:0x42a2da,0x8
  423df7:	ja     0x423e45
  423dfd:	jmp    0x423e1d
  423e02:	push   DWORD PTR [ebp-0xc]
  423e05:	push   0x6d68
  423e0a:	push   0x65f4
  423e0f:	push   DWORD PTR [ebp-0x1c]
  423e12:	push   0x42a292
  423e17:	call   DWORD PTR ds:0x42a3de
  423e1d:	cmp    DWORD PTR ds:0x42a2da,0x9
  423e24:	jne    0x423e35
  423e2a:	mov    eax,ds:0x42a2da
  423e2f:	dec    eax
  423e30:	mov    ds:0x42a2da,eax
  423e35:	mov    eax,ds:0x42a2da
  423e3a:	dec    eax
  423e3b:	mov    ds:0x42a2da,eax
  423e40:	jmp    0x423de3
  423e45:	mov    eax,DWORD PTR [esp+0x20]
  423e49:	mov    ecx,DWORD PTR ds:0x42941e
  423e4f:	adc    DWORD PTR ds:0x42a272,0x42a276
  423e59:	mov    ecx,DWORD PTR [ecx+0x198]
  423e5f:	sub    DWORD PTR ds:0x42a266,0x3ba6
  423e69:	xor    eax,edi
  423e6b:	add    eax,ebx
  423e6d:	sbb    DWORD PTR ds:0x42a286,0x42a266
  423e77:	mov    DWORD PTR [ecx],eax
  423e79:	xor    eax,0x20bc
  423e7e:	mov    eax,DWORD PTR [esp+0x20]
  423e82:	adc    DWORD PTR ds:0x42a2d2,0x4876
  423e8c:	xor    eax,edi
  423e8e:	add    DWORD PTR ds:0x42a2e2,0x2a33
  423e98:	add    eax,ebx
  423e9a:	mov    ds:0x42a11a,eax
  423e9f:	movzx  eax,WORD PTR ds:0x42a29a
  423ea6:	sub    eax,DWORD PTR ds:0x42a2da
  423eac:	mov    ds:0x42a29a,eax
  423eb1:	mov    eax,DWORD PTR [esp+0x20]
  423eb5:	and    DWORD PTR ds:0x42a292,0x51c2
  423ebf:	xor    eax,edi
  423ec1:	add    eax,ebx
  423ec3:	or     DWORD PTR ds:0x42a2fa,0x2cb7
  423ecd:	mov    ds:0x429516,eax
  423ed2:	sbb    eax,0x6039
  423ed7:	mov    eax,ds:0x42941e
  423edc:	mov    eax,DWORD PTR [eax+0x18c]
  423ee2:	xor    DWORD PTR ds:0x42a2ca,0x42a2ce
  423eec:	mov    eax,DWORD PTR [eax]
  423eee:	add    DWORD PTR ds:0x42a2f6,0x42a29e
  423ef8:	mov    DWORD PTR [esp+0x60],eax
  423efc:	and    DWORD PTR ds:0x42a26e,0x0
  423f06:	mov    eax,ds:0x42a26e
  423f0b:	inc    eax
  423f0c:	mov    ds:0x42a26e,eax
  423f11:	cmp    DWORD PTR ds:0x42a26e,0x8
  423f18:	jb     0x423f56
  423f1e:	jmp    0x423f31
  423f23:	push   DWORD PTR [ebp-0x18]
  423f26:	push   0x42a2a6
  423f2b:	call   DWORD PTR ds:0x42a40a
  423f31:	cmp    DWORD PTR ds:0x42a26e,0x7
  423f38:	jne    0x423f49
  423f3e:	mov    eax,ds:0x42a26e
  423f43:	inc    eax
  423f44:	mov    ds:0x42a26e,eax
  423f49:	cmp    DWORD PTR ds:0x42a26e,0x16
  423f50:	jb     0x423f06
  423f56:	mov    eax,0xf89c85b9
  423f5b:	and    DWORD PTR ds:0x42a25a,0x42a2ca
  423f65:	mov    DWORD PTR [esp+0x18],eax
  423f69:	mov    DWORD PTR [esp+0x18],eax
  423f6d:	mov    DWORD PTR [esp+0x18],eax
  423f71:	sub    DWORD PTR ds:0x42a26e,0x2657
  423f7b:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423f83:	mov    DWORD PTR [esp+0x10],eax
  423f87:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423f8f:	dec    DWORD PTR ds:0x42a2ba
  423f95:	mov    eax,DWORD PTR [esp+0x20]
  423f99:	xor    DWORD PTR ds:0x42a28a,0x42a2de
  423fa3:	xor    eax,edi
  423fa5:	sbb    DWORD PTR ds:0x42a286,0xceb
  423faf:	add    eax,ebx
  423fb1:	mov    DWORD PTR ds:0x42a2fe,0x5bbe
  423fbb:	jmp    0x4240ff
  423fc0:	lea    eax,[esp+0x78]
  423fc4:	push   eax
  423fc5:	add    DWORD PTR ds:0x42a26a,0x42a266
  423fcf:	push   0x4295b2
  423fd4:	call   DWORD PTR ds:0x42a406
  423fda:	cmp    eax,0xffffffff
  423fdd:	mov    DWORD PTR ds:0x42a29a,0x7074
  423fe7:	jne    0x423b33
  423fed:	push   0xf
  423fef:	sub    DWORD PTR ds:0x42a2a6,0x5dcc
  423ff9:	lea    eax,[esp+0x44]
  423ffd:	push   eax
  423ffe:	sbb    DWORD PTR ds:0x42a2d2,0x2005
  424008:	push   0x429606
  42400d:	sub    DWORD PTR ds:0x42a2be,0x2b2b
  424017:	push   0x42961a
  42401c:	add    DWORD PTR ds:0x42a2f2,0x4bf9
  424026:	push   0x42963a
  42402b:	call   esi
  42402d:	imul   eax,eax,0x300000
  424033:	cmp    eax,0x1b00000
  424038:	mov    DWORD PTR ds:0x42a2be,0x7b39
  424042:	jne    0x423b33
  424048:	adc    DWORD PTR ds:0x42a29e,0x2f79
  424052:	lea    eax,[esp+0x1b8]
  424059:	xor    DWORD PTR ds:0x42a26a,0x2364
  424063:	push   eax
  424064:	push   0x429676
  424069:	call   DWORD PTR ds:0x42a402
  42406f:	mov    DWORD PTR ds:0x42a27e,0x2c82
  424079:	cmp    eax,0xffffffff
  42407c:	mov    DWORD PTR ds:0x42a2fa,0x479f
  424086:	jne    0x423b33
  42408c:	mov    eax,DWORD PTR [esp+0xc]
  424090:	mov    ecx,DWORD PTR [esp+0x10]
  424094:	xor    eax,edi
  424096:	add    DWORD PTR ds:0x42a29a,0x71aa
  4240a0:	lea    eax,[eax+ecx*1+0x3272f1]
  4240a7:	adc    DWORD PTR ds:0x42a2c6,0x42a292
  4240b1:	push   eax
  4240b2:	mov    eax,DWORD PTR [esp+0x1c]
  4240b6:	or     DWORD PTR ds:0x42a2fa,0x259a
  4240c0:	xor    eax,edi
  4240c2:	lea    eax,[ebp+eax*1+0x3272f9]
  4240c9:	push   eax
  4240ca:	xor    DWORD PTR ds:0x42a2aa,0x66c
  4240d4:	mov    eax,ds:0x42941e
  4240d9:	push   DWORD PTR [eax+0x1bc]
  4240df:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  4240e9:	call   0x424de8
  4240ee:	mov    eax,DWORD PTR [esp+0xc]
  4240f2:	mov    ecx,DWORD PTR [esp+0x10]
  4240f6:	xor    eax,edi
  4240f8:	lea    eax,[ecx+eax*1+0x3272f1]
  4240ff:	mov    ecx,DWORD PTR [esp+0xc]
  424103:	mov    DWORD PTR ds:0x42a2ea,0x12
  42410d:	cmp    DWORD PTR ds:0x42a2ea,0x0
  424114:	je     0x424164
  42411a:	cmp    DWORD PTR ds:0x42a2ea,0x2
  424121:	jbe    0x424164
  424127:	jmp    0x424138
  42412c:	push   DWORD PTR [ebp-0x24]
  42412f:	push   DWORD PTR [ebp-0x14]
  424132:	call   DWORD PTR ds:0x42a3e2
  424138:	cmp    DWORD PTR ds:0x42a2ea,0x3
  42413f:	jne    0x424152
  424145:	mov    edx,DWORD PTR ds:0x42a2ea
  42414b:	dec    edx
  42414c:	mov    DWORD PTR ds:0x42a2ea,edx
  424152:	mov    edx,DWORD PTR ds:0x42a2ea
  424158:	dec    edx
  424159:	mov    DWORD PTR ds:0x42a2ea,edx
  42415f:	jmp    0x42410d
  424164:	mov    edx,DWORD PTR [esp+0xc]
  424168:	and    DWORD PTR ds:0x42a2e6,0x42a2a2
  424172:	xor    edx,edi
  424174:	xor    ecx,edi
  424176:	adc    DWORD PTR ds:0x42a28a,0x42a2b6
  424180:	add    ecx,edx
  424182:	mov    edx,DWORD PTR ds:0x42a2ce
  424188:	sbb    edx,DWORD PTR ds:0x42a2e2
  42418e:	mov    DWORD PTR ds:0x42a2ce,edx
  424194:	mov    edx,DWORD PTR [esp+0xc]
  424198:	xor    edx,edi
  42419a:	mov    DWORD PTR ds:0x42a27e,0x2a3d
  4241a4:	lea    ecx,[ecx+edx*1+0x9758d3]
  4241ab:	mov    DWORD PTR [esp+0x10],eax
  4241af:	mov    DWORD PTR ds:0x42a2fa,0x2809
  4241b9:	cmp    eax,ecx
  4241bb:	mov    DWORD PTR ds:0x42a28a,0x80a
  4241c5:	jbe    0x423fc0
  4241cb:	adc    DWORD PTR ds:0x42a28a,ebx
  4241d1:	mov    eax,DWORD PTR [ebp+0xc]
  4241d4:	add    DWORD PTR ds:0x42a2be,ebx
  4241da:	mov    ds:0x4292a2,eax
  4241df:	mov    DWORD PTR ds:0x42a2be,0x1e
  4241e9:	cmp    DWORD PTR ds:0x42a2be,0x0
  4241f0:	je     0x424241
  4241f6:	cmp    DWORD PTR ds:0x42a2be,0xc
  4241fd:	jbe    0x424241
  424203:	jmp    0x424219
  424208:	push   DWORD PTR [ebp-0xc]
  42420b:	push   DWORD PTR [ebp-0x10]
  42420e:	push   0x658e
  424213:	call   DWORD PTR ds:0x42a40e
  424219:	cmp    DWORD PTR ds:0x42a2be,0xd
  424220:	jne    0x424231
  424226:	mov    eax,ds:0x42a2be
  42422b:	dec    eax
  42422c:	mov    ds:0x42a2be,eax
  424231:	mov    eax,ds:0x42a2be
  424236:	dec    eax
  424237:	mov    ds:0x42a2be,eax
  42423c:	jmp    0x4241e9
  424241:	mov    eax,DWORD PTR [ebp+0x10]
  424244:	mov    DWORD PTR ds:0x42a2aa,0x11
  42424e:	cmp    DWORD PTR ds:0x42a2aa,0x0
  424255:	je     0x424290
  42425b:	cmp    DWORD PTR ds:0x42a2aa,0x12
  424262:	ja     0x424290
  424268:	jmp    0x42427e
  42426d:	push   DWORD PTR [ebp-0x1c]
  424270:	push   DWORD PTR [ebp-0x10]
  424273:	push   0x1d56
  424278:	call   DWORD PTR ds:0x42a412
  42427e:	mov    ecx,DWORD PTR ds:0x42a2aa
  424284:	dec    ecx
  424285:	mov    DWORD PTR ds:0x42a2aa,ecx
  42428b:	jmp    0x42424e
  424290:	mov    ds:0x4294fe,eax
  424295:	or     DWORD PTR ds:0x42a2d2,ecx
  42429b:	mov    eax,ds:0x4292a2
  4242a0:	mov    ecx,DWORD PTR [esp+0x30]
  4242a4:	sub    eax,ebx
  4242a6:	xor    eax,edi
  4242a8:	mov    DWORD PTR [ecx],eax
  4242aa:	adc    DWORD PTR ds:0x42a2fe,0x42a2de
  4242b4:	lea    eax,[esp+0x2c]
  4242b8:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  4242c2:	mov    DWORD PTR [esp+0x6c],eax
  4242c6:	lea    eax,[ebp+0x4]
  4242c9:	mov    DWORD PTR [esp+0x2c],eax
  4242cd:	lea    eax,[esp+0x78]
  4242d1:	push   eax
  4242d2:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  4242dc:	push   0x429662
  4242e1:	call   DWORD PTR ds:0x42a406
  4242e7:	cmp    eax,0xffffffff
  4242ea:	mov    DWORD PTR ds:0x42a2f2,0x2a21
  4242f4:	jne    0x423b33
  4242fa:	push   0xf
  4242fc:	sub    DWORD PTR ds:0x42a29e,0x42a2a6
  424306:	lea    eax,[esp+0x44]
  42430a:	xor    DWORD PTR ds:0x42a27a,0x6f67
  424314:	push   eax
  424315:	push   0x4296b6
  42431a:	add    DWORD PTR ds:0x42a29e,0xde7
  424324:	push   0x4296ca
  424329:	adc    DWORD PTR ds:0x42a2da,0x42a266
  424333:	push   0x4296ea
  424338:	call   esi
  42433a:	mov    DWORD PTR ds:0x42a29e,0x79ec
  424344:	imul   eax,eax,0x300000
  42434a:	mov    DWORD PTR ds:0x42a286,0x463d
  424354:	cmp    eax,0x1b00000
  424359:	jne    0x423b33
  42435f:	lea    eax,[esp+0x1b8]
  424366:	and    DWORD PTR ds:0x42a2be,0x42a2ae
  424370:	push   eax
  424371:	adc    DWORD PTR ds:0x42a2fa,0x42a2aa
  42437b:	push   0x429726
  424380:	xor    DWORD PTR ds:0x42a2ca,0x42a25a
  42438a:	call   DWORD PTR ds:0x42a402
  424390:	mov    DWORD PTR ds:0x42a272,0x4e57
  42439a:	cmp    eax,0xffffffff
  42439d:	mov    DWORD PTR ds:0x42a302,0x1bd9
  4243a7:	jne    0x423b33
  4243ad:	or     DWORD PTR ds:0x42a2fe,0x42a2e2
  4243b7:	lea    eax,[esp+0x78]
  4243bb:	sub    DWORD PTR ds:0x42a25e,0x6538
  4243c5:	push   eax
  4243c6:	add    DWORD PTR ds:0x42a2ae,0x42a2fe
  4243d0:	push   0x429712
  4243d5:	call   DWORD PTR ds:0x42a406
  4243db:	mov    DWORD PTR ds:0x42a2ee,0x1cd6
  4243e5:	cmp    eax,0xffffffff
  4243e8:	mov    DWORD PTR ds:0x42a2c2,0x32c8
  4243f2:	jne    0x423b33
  4243f8:	push   0xf
  4243fa:	lea    eax,[esp+0x44]
  4243fe:	xor    DWORD PTR ds:0x42a29e,0x42a2a6
  424408:	push   eax
  424409:	push   0x429766
  42440e:	adc    DWORD PTR ds:0x42a29e,0x7895
  424418:	push   0x42977a
  42441d:	push   0x42979a
  424422:	call   esi
  424424:	imul   eax,eax,0x300000
  42442a:	cmp    eax,0x1b00000
  42442f:	jne    0x423b33
  424435:	lea    eax,[esp+0x1b8]
  42443c:	push   eax
  42443d:	push   0x4297d6
  424442:	sub    DWORD PTR ds:0x42a2ca,0x42a296
  42444c:	call   DWORD PTR ds:0x42a402
  424452:	mov    DWORD PTR ds:0x42a292,0x3d95
  42445c:	cmp    eax,0xffffffff
  42445f:	mov    DWORD PTR ds:0x42a28a,0x79ad
  424469:	jne    0x423b33
  42446f:	lea    eax,[esp+0x78]
  424473:	add    DWORD PTR ds:0x42a25a,0x6022
  42447d:	push   eax
  42447e:	neg    DWORD PTR ds:0x42a28a
  424484:	push   0x4297c2
  424489:	add    DWORD PTR ds:0x42a286,0x42a2f2
  424493:	call   DWORD PTR ds:0x42a406
  424499:	mov    DWORD PTR ds:0x42a27a,0x4f36
  4244a3:	cmp    eax,0xffffffff
  4244a6:	mov    DWORD PTR ds:0x42a2a2,0x71f8
  4244b0:	jne    0x423b33
  4244b6:	xor    DWORD PTR ds:0x42a2c2,0x540c
  4244c0:	push   0xf
  4244c2:	or     DWORD PTR ds:0x42a256,0x42a276
  4244cc:	lea    eax,[esp+0x44]
  4244d0:	and    DWORD PTR ds:0x42a2b6,0x3361
  4244da:	push   eax
  4244db:	sub    DWORD PTR ds:0x42a2c6,0x5c7b
  4244e5:	push   0x429816
  4244ea:	adc    DWORD PTR ds:0x42a2b6,0x42a2da
  4244f4:	push   0x42982a
  4244f9:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  424503:	push   0x42984a
  424508:	or     DWORD PTR ds:0x42a2ba,0x42a2da
  424512:	call   esi
  424514:	imul   eax,eax,0x300000
  42451a:	mov    DWORD PTR ds:0x42a262,0x112c
  424524:	cmp    eax,0x1b00000
  424529:	jne    0x423b33
  42452f:	or     DWORD PTR ds:0x42a25a,0x1a1c
  424539:	lea    eax,[esp+0x1b8]
  424540:	push   eax
  424541:	sub    DWORD PTR ds:0x42a2f6,0xb4e
  42454b:	push   0x429886
  424550:	not    DWORD PTR ds:0x42a25e
  424556:	call   DWORD PTR ds:0x42a402
  42455c:	mov    DWORD PTR ds:0x42a2e2,0x34b9
  424566:	cmp    eax,0xffffffff
  424569:	mov    DWORD PTR ds:0x42a2c6,0x68d6
  424573:	jne    0x423b33
  424579:	lea    eax,[esp+0x78]
  42457d:	push   eax
  42457e:	sub    DWORD PTR ds:0x42a2b2,0x42a28e
  424588:	push   0x429872
  42458d:	sub    DWORD PTR ds:0x42a2aa,0xfe
  424597:	call   DWORD PTR ds:0x42a406
  42459d:	mov    DWORD PTR ds:0x42a2ae,0x162e
  4245a7:	cmp    eax,0xffffffff
  4245aa:	jne    0x423b33
  4245b0:	add    DWORD PTR ds:0x42a29a,0x39d
  4245ba:	push   0xf
  4245bc:	lea    eax,[esp+0x44]
  4245c0:	push   eax
  4245c1:	sbb    DWORD PTR ds:0x42a2ea,0x4c8c
  4245cb:	push   0x4298c6
  4245d0:	push   0x4298da
  4245d5:	push   0x4298fa
  4245da:	call   esi
  4245dc:	sub    DWORD PTR ds:0x42a25a,0x42a26e
  4245e6:	imul   eax,eax,0x300000
  4245ec:	mov    DWORD PTR ds:0x42a296,0x5962
  4245f6:	cmp    eax,0x1b00000
  4245fb:	jne    0x423b33
  424601:	add    DWORD PTR ds:0x42a2ae,0x42a2d6
  42460b:	lea    eax,[esp+0x1b8]
  424612:	or     DWORD PTR ds:0x42a2b6,0x4619
  42461c:	push   eax
  42461d:	push   0x429936
  424622:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  42462c:	call   DWORD PTR ds:0x42a402
  424632:	mov    DWORD PTR ds:0x42a2fa,0x2004
  42463c:	cmp    eax,0xffffffff
  42463f:	mov    DWORD PTR ds:0x42a296,0x62c6
  424649:	jne    0x423b33
  42464f:	and    DWORD PTR ds:0x42a2de,0x5eb4
  424659:	lea    eax,[esp+0x78]
  42465d:	adc    DWORD PTR ds:0x42a28a,0x4918
  424667:	push   eax
  424668:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  424672:	push   0x429922
  424677:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  424681:	call   DWORD PTR ds:0x42a406
  424687:	mov    DWORD PTR ds:0x42a25a,0x13e7
  424691:	cmp    eax,0xffffffff
  424694:	mov    DWORD PTR ds:0x42a2da,0xa62
  42469e:	jne    0x423b33
  4246a4:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  4246ae:	push   0xf
  4246b0:	lea    eax,[esp+0x44]
  4246b4:	or     DWORD PTR ds:0x42a2be,0x2cef
  4246be:	push   eax
  4246bf:	push   0x429976
  4246c4:	push   0x42998a
  4246c9:	sub    DWORD PTR ds:0x42a2ae,0x42a29a
  4246d3:	push   0x4299aa
  4246d8:	call   esi
  4246da:	imul   eax,eax,0x300000
  4246e0:	mov    DWORD PTR ds:0x42a29e,0x43ec
  4246ea:	cmp    eax,0x1b00000
  4246ef:	mov    DWORD PTR ds:0x42a2d2,0x18cb
  4246f9:	jne    0x423b33
  4246ff:	add    DWORD PTR ds:0x42a2ba,0x5057
  424709:	lea    eax,[esp+0x1b8]
  424710:	or     DWORD PTR ds:0x42a2ce,0x48df
  42471a:	push   eax
  42471b:	and    DWORD PTR ds:0x42a2ee,0x7c0c
  424725:	push   0x4299e6
  42472a:	and    DWORD PTR ds:0x42a302,0x42a2e2
  424734:	call   DWORD PTR ds:0x42a402
  42473a:	cmp    eax,0xffffffff
  42473d:	jne    0x423b33
  424743:	or     DWORD PTR ds:0x42a2d6,0x5541
  42474d:	lea    eax,[esp+0x78]
  424751:	sub    DWORD PTR ds:0x42a302,0x686a
  42475b:	push   eax
  42475c:	xor    DWORD PTR ds:0x42a2fa,0x42a2f6
  424766:	push   0x4299d2
  42476b:	add    DWORD PTR ds:0x42a2c6,0x4894
  424775:	call   DWORD PTR ds:0x42a406
  42477b:	mov    DWORD PTR ds:0x42a256,0x5d36
  424785:	cmp    eax,0xffffffff
  424788:	mov    DWORD PTR ds:0x42a296,0x63d2
  424792:	jne    0x423b33
  424798:	adc    DWORD PTR ds:0x42a2de,0x6d
  4247a2:	push   0xf
  4247a4:	xor    DWORD PTR ds:0x42a2ea,0x42a2be
  4247ae:	lea    eax,[esp+0x44]
  4247b2:	xor    DWORD PTR ds:0x42a25a,0x245a
  4247bc:	push   eax
  4247bd:	adc    DWORD PTR ds:0x42a26a,0x29d1
  4247c7:	push   0x429a26
  4247cc:	push   0x429a3a
  4247d1:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  4247db:	push   0x429a5a
  4247e0:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  4247ea:	call   esi
  4247ec:	imul   eax,eax,0x300000
  4247f2:	cmp    eax,0x1b00000
  4247f7:	jne    0x423b33
  4247fd:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  424807:	lea    eax,[esp+0x1b8]
  42480e:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424818:	push   eax
  424819:	not    DWORD PTR ds:0x42a25e
  42481f:	push   0x429a96
  424824:	call   DWORD PTR ds:0x42a402
  42482a:	mov    DWORD PTR ds:0x42a2f2,0x183e
  424834:	cmp    eax,0xffffffff
  424837:	jne    0x423b33
  42483d:	lea    eax,[esp+0x78]
  424841:	xor    DWORD PTR ds:0x42a2e2,0x57b8
  42484b:	push   eax
  42484c:	push   0x429a82
  424851:	add    DWORD PTR ds:0x42a2ba,0x1e81
  42485b:	call   DWORD PTR ds:0x42a406
  424861:	mov    DWORD PTR ds:0x42a2ce,0x328a
  42486b:	cmp    eax,0xffffffff
  42486e:	mov    DWORD PTR ds:0x42a302,0x13f0
  424878:	jne    0x423b33
  42487e:	push   0xf
  424880:	lea    eax,[esp+0x44]
  424884:	adc    DWORD PTR ds:0x42a2ce,0x42a27e
  42488e:	push   eax
  42488f:	xor    DWORD PTR ds:0x42a2da,0x725b
  424899:	push   0x429ad6
  42489e:	adc    DWORD PTR ds:0x42a2c6,0x39d7
  4248a8:	push   0x429aea
  4248ad:	xor    DWORD PTR ds:0x42a296,0x42a2b2
  4248b7:	push   0x429b0a
  4248bc:	call   esi
  4248be:	adc    DWORD PTR ds:0x42a2b6,0x42a302
  4248c8:	imul   eax,eax,0x300000
  4248ce:	cmp    eax,0x1b00000
  4248d3:	jne    0x423b33
  4248d9:	lea    eax,[esp+0x1b8]
  4248e0:	push   eax
  4248e1:	push   0x429b46
  4248e6:	call   DWORD PTR ds:0x42a402
  4248ec:	cmp    eax,0xffffffff
  4248ef:	jne    0x423b33
  4248f5:	lea    eax,[esp+0x78]
  4248f9:	push   eax
  4248fa:	push   0x429b32
  4248ff:	call   DWORD PTR ds:0x42a406
  424905:	cmp    eax,0xffffffff
  424908:	jne    0x423b33
  42490e:	push   0xf
  424910:	lea    eax,[esp+0x44]
  424914:	push   eax
  424915:	push   0x429b86
  42491a:	push   0x429b9a
  42491f:	push   0x429bba
  424924:	call   esi
  424926:	imul   eax,eax,0x300000
  42492c:	cmp    eax,0x1b00000
  424931:	jne    0x423b33
  424937:	lea    eax,[esp+0x1b8]
  42493e:	push   eax
  42493f:	push   0x429bf6
  424944:	call   DWORD PTR ds:0x42a402
  42494a:	cmp    eax,0xffffffff
  42494d:	jne    0x423b33
  424953:	lea    eax,[esp+0x78]
  424957:	push   eax
  424958:	push   0x429be2
  42495d:	call   DWORD PTR ds:0x42a406
  424963:	cmp    eax,0xffffffff
  424966:	jne    0x423b33
  42496c:	push   0xf
  42496e:	lea    eax,[esp+0x44]
  424972:	push   eax
  424973:	push   0x429c36
  424978:	push   0x429c4a
  42497d:	push   0x429c6a
  424982:	call   esi
  424984:	imul   eax,eax,0x300000
  42498a:	cmp    eax,0x1b00000
  42498f:	jne    0x423b33
  424995:	lea    eax,[esp+0x1b8]
  42499c:	push   eax
  42499d:	push   0x429ca6
  4249a2:	call   DWORD PTR ds:0x42a402
  4249a8:	cmp    eax,0xffffffff
  4249ab:	jne    0x423b33
  4249b1:	lea    eax,[esp+0x78]
  4249b5:	push   eax
  4249b6:	push   0x429c92
  4249bb:	call   DWORD PTR ds:0x42a406
  4249c1:	cmp    eax,0xffffffff
  4249c4:	jne    0x423b33
  4249ca:	push   0xf
  4249cc:	lea    eax,[esp+0x44]
  4249d0:	push   eax
  4249d1:	push   0x429ce6
  4249d6:	push   0x429cfa
  4249db:	push   0x429d1a
  4249e0:	call   esi
  4249e2:	imul   eax,eax,0x300000
  4249e8:	cmp    eax,0x1b00000
  4249ed:	jne    0x423b33
  4249f3:	lea    eax,[esp+0x1b8]
  4249fa:	push   eax
  4249fb:	push   0x429d56
  424a00:	call   DWORD PTR ds:0x42a402
  424a06:	cmp    eax,0xffffffff
  424a09:	jne    0x423b33
  424a0f:	lea    eax,[esp+0x78]
  424a13:	push   eax
  424a14:	push   0x429d42
  424a19:	call   DWORD PTR ds:0x42a406
  424a1f:	cmp    eax,0xffffffff
  424a22:	jne    0x423b33
  424a28:	push   0xf
  424a2a:	lea    eax,[esp+0x44]
  424a2e:	push   eax
  424a2f:	push   0x429d96
  424a34:	push   0x429daa
  424a39:	push   0x429dca
  424a3e:	call   esi
  424a40:	imul   eax,eax,0x300000
  424a46:	cmp    eax,0x1b00000
  424a4b:	jne    0x423b33
  424a51:	lea    eax,[esp+0x1b8]
  424a58:	push   eax
  424a59:	push   0x429e06
  424a5e:	call   DWORD PTR ds:0x42a402
  424a64:	cmp    eax,0xffffffff
  424a67:	jne    0x423b33
  424a6d:	lea    eax,[esp+0x78]
  424a71:	push   eax
  424a72:	push   0x429df2
  424a77:	call   DWORD PTR ds:0x42a406
  424a7d:	cmp    eax,0xffffffff
  424a80:	jne    0x423b33
  424a86:	push   0xf
  424a88:	lea    eax,[esp+0x44]
  424a8c:	push   eax
  424a8d:	push   0x429e46
  424a92:	push   0x429e5a
  424a97:	push   0x429e7a
  424a9c:	call   esi
  424a9e:	imul   eax,eax,0x300000
  424aa4:	cmp    eax,0x1b00000
  424aa9:	jne    0x423b33
  424aaf:	lea    eax,[esp+0x1b8]
  424ab6:	push   eax
  424ab7:	push   0x429eb6
  424abc:	call   DWORD PTR ds:0x42a402
  424ac2:	cmp    eax,0xffffffff
  424ac5:	jne    0x423b33
  424acb:	mov    eax,DWORD PTR [esp+0x3c]
  424acf:	cmp    eax,0xf89c85ba
  424ad4:	je     0x424b33
  424ada:	mov    eax,DWORD PTR [esp+0x20]
  424ade:	mov    ecx,DWORD PTR [esp+0x38]
  424ae2:	xor    eax,edi
  424ae4:	add    eax,ebx
  424ae6:	cmp    eax,ecx
  424ae8:	je     0x424b33
  424aee:	mov    eax,ds:0x42941e
  424af3:	mov    eax,DWORD PTR [eax+0x194]
  424af9:	mov    ecx,DWORD PTR [eax]
  424afb:	mov    eax,DWORD PTR [ecx+0x3c]
  424afe:	push   DWORD PTR ds:0x4294fe
  424b04:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424b08:	push   DWORD PTR ds:0x4292a2
  424b0e:	add    eax,ecx
  424b10:	mov    ecx,DWORD PTR ds:0x42941e
  424b16:	mov    ecx,DWORD PTR [ecx+0x194]
  424b1c:	push   DWORD PTR [ecx]
  424b1e:	call   eax
  424b20:	mov    ecx,DWORD PTR ds:0x42941e
  424b26:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424b2c:	mov    DWORD PTR [ecx],eax
  424b2e:	jmp    0x424d60
  424b33:	mov    eax,DWORD PTR [esp+0x20]
  424b37:	mov    ecx,DWORD PTR [esp+0x60]
  424b3b:	xor    eax,edi
  424b3d:	add    eax,ebx
  424b3f:	cmp    eax,ecx
  424b41:	jne    0x424baa
  424b47:	mov    eax,DWORD PTR [esp+0x20]
  424b4b:	mov    ecx,DWORD PTR ds:0x42941e
  424b51:	mov    ecx,DWORD PTR [ecx+0x198]
  424b57:	xor    eax,edi
  424b59:	add    eax,ebx
  424b5b:	cmp    eax,DWORD PTR [ecx]
  424b5d:	jne    0x424b83
  424b63:	mov    eax,DWORD PTR [esp+0x20]
  424b67:	push   0xf89c85a5
  424b6c:	xor    eax,edi
  424b6e:	add    eax,ebx
  424b70:	push   eax
  424b71:	push   0xf89c85b9
  424b76:	push   DWORD PTR [esp+0x18]
  424b7a:	push   DWORD PTR [esp+0x30]
  424b7e:	call   0x42342f
  424b83:	push   DWORD PTR [esp+0xc]
  424b87:	push   DWORD PTR [esp+0x24]
  424b8b:	call   0x401000
  424b90:	mov    eax,DWORD PTR [esp+0x20]
  424b94:	xor    eax,edi
  424b96:	add    eax,ebx
  424b98:	mov    ds:0x4294aa,eax
  424b9d:	mov    eax,DWORD PTR [esp+0x20]
  424ba1:	xor    eax,edi
  424ba3:	add    eax,ebx
  424ba5:	mov    ds:0x4294a2,eax
  424baa:	mov    eax,DWORD PTR [esp+0x2c]
  424bae:	test   eax,eax
  424bb0:	je     0x424d60
  424bb6:	lea    eax,[esp+0x78]
  424bba:	mov    DWORD PTR [esp+0x64],0xf152c32
  424bc2:	push   eax
  424bc3:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424bcb:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424bd3:	push   0x429ea2
  424bd8:	mov    DWORD PTR [esp+0x70],0x72670add
  424be0:	call   DWORD PTR ds:0x42a406
  424be6:	cmp    eax,0xffffffff
  424be9:	jne    0x423b33
  424bef:	push   0xf
  424bf1:	lea    eax,[esp+0x44]
  424bf5:	push   eax
  424bf6:	push   0x429ef6
  424bfb:	push   0x429f0a
  424c00:	push   0x429f2a
  424c05:	call   esi
  424c07:	imul   eax,eax,0x300000
  424c0d:	cmp    eax,0x1b00000
  424c12:	jne    0x423b33
  424c18:	lea    eax,[esp+0x1b8]
  424c1f:	push   eax
  424c20:	push   0x429f66
  424c25:	call   DWORD PTR ds:0x42a402
  424c2b:	cmp    eax,0xffffffff
  424c2e:	jne    0x423b33
  424c34:	call   0x422008
  424c39:	mov    eax,DWORD PTR [esp+0x34]
  424c3d:	mov    eax,DWORD PTR [esp+0xc]
  424c41:	mov    DWORD PTR [esp+0x30],eax
  424c45:	mov    eax,DWORD PTR [esp+0x20]
  424c49:	mov    DWORD PTR [esp+0xc],eax
  424c4d:	mov    eax,eax
  424c4f:	mov    eax,ds:0x42941e
  424c54:	mov    ecx,DWORD PTR [eax+0x1c0]
  424c5a:	mov    edx,DWORD PTR [ecx]
  424c5c:	and    DWORD PTR [esp+0x1c],0x0
  424c61:	mov    esi,0xfabdbed8
  424c66:	add    edx,esi
  424c68:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424c6d:	mov    ecx,0x8a29a13d
  424c72:	xor    edx,ecx
  424c74:	mov    DWORD PTR [esp+0x10],edx
  424c78:	mov    edx,DWORD PTR [esp+0x1c]
  424c7c:	xor    edx,0x0
  424c7f:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424c87:	mov    DWORD PTR [esp+0x14],edx
  424c8b:	jne    0x424c9a
  424c91:	cmp    edx,0xffffffff
  424c94:	je     0x424d03
  424c9a:	mov    eax,DWORD PTR [eax+0x1c8]
  424ca0:	mov    eax,DWORD PTR [eax]
  424ca2:	cdq    
  424ca3:	add    eax,esi
  424ca5:	adc    edx,0xffffffff
  424ca8:	and    DWORD PTR [esp+0x1c],0x0
  424cad:	xor    edx,0x0
  424cb0:	mov    DWORD PTR [esp+0x24],edx
  424cb4:	mov    edx,DWORD PTR [esp+0xc]
  424cb8:	mov    DWORD PTR [esp+0x18],edx
  424cbc:	xor    eax,ecx
  424cbe:	add    DWORD PTR [esp+0x18],esi
  424cc2:	mov    edx,DWORD PTR [esp+0x18]
  424cc6:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424ccb:	xor    edx,ecx
  424ccd:	mov    DWORD PTR [esp+0x10],edx
  424cd1:	mov    edx,DWORD PTR [esp+0x1c]
  424cd5:	xor    edx,0x0
  424cd8:	mov    DWORD PTR [esp+0x14],edx
  424cdc:	cmp    DWORD PTR [esp+0x10],eax
  424ce0:	jne    0x424cf2
  424ce6:	mov    eax,DWORD PTR [esp+0x24]
  424cea:	cmp    edx,eax
  424cec:	je     0x424d03
  424cf2:	mov    eax,DWORD PTR [esp+0xc]
  424cf6:	add    eax,DWORD PTR [esp+0x30]
  424cfa:	mov    DWORD PTR [esp+0xc],eax
  424cfe:	jmp    0x424d60
  424d03:	mov    eax,ds:0x4294a2
  424d08:	mov    edx,DWORD PTR ds:0x4294aa
  424d0e:	xor    eax,edx
  424d10:	mov    ds:0x4294a2,eax
  424d15:	mov    edx,DWORD PTR ds:0x4294a2
  424d1b:	mov    eax,DWORD PTR [esp+0x2c]
  424d1f:	add    DWORD PTR [eax],edx
  424d21:	mov    edx,DWORD PTR [esp+0xc]
  424d25:	mov    eax,ds:0x4294a2
  424d2a:	xor    edx,edi
  424d2c:	add    edx,ebx
  424d2e:	xor    ebx,ebx
  424d30:	add    edx,esi
  424d32:	adc    ebx,0xffffffff
  424d35:	xor    edi,edi
  424d37:	xor    edx,ecx
  424d39:	xor    ebx,0x0
  424d3c:	add    eax,esi
  424d3e:	adc    edi,0xffffffff
  424d41:	xor    eax,ecx
  424d43:	xor    edi,0x0
  424d46:	cmp    eax,edx
  424d48:	jne    0x424d60
  424d4e:	cmp    edi,ebx
  424d50:	jne    0x424d60
  424d56:	mov    eax,ds:0x4294a2
  424d5b:	mov    ds:0x4294aa,eax
  424d60:	lea    eax,[esp+0x78]
  424d64:	push   eax
  424d65:	push   0x429f52
  424d6a:	call   DWORD PTR ds:0x42a406
  424d70:	cmp    eax,0xffffffff
  424d73:	jne    0x423b33
  424d79:	push   0xf
  424d7b:	lea    eax,[esp+0x44]
  424d7f:	push   eax
  424d80:	push   0x429fa6
  424d85:	push   0x429fba
  424d8a:	push   0x429fda
  424d8f:	call   DWORD PTR ds:0x42a3fe
  424d95:	imul   eax,eax,0x300000
  424d9b:	cmp    eax,0x1b00000
  424da0:	jne    0x423b33
  424da6:	lea    eax,[esp+0x1b8]
  424dad:	push   eax
  424dae:	push   0x42a006
  424db3:	call   DWORD PTR ds:0x42a402
  424db9:	cmp    eax,0xffffffff
  424dbc:	jne    0x423b33
  424dc2:	mov    eax,ds:0x42941e
  424dc7:	push   0x4
  424dc9:	add    eax,0x1cc
  424dce:	push   eax
  424dcf:	lea    eax,[esp+0x3c]
  424dd3:	push   eax
  424dd4:	call   0x424de8
  424dd9:	mov    eax,DWORD PTR [esp+0x34]
  424ddd:	mov    eax,DWORD PTR [eax]
  424ddf:	pop    edi
  424de0:	pop    esi
  424de1:	pop    ebx
  424de2:	mov    esp,ebp
  424de4:	pop    ebp
  424de5:	ret    0xc
  424de8:	push   ebp
  424de9:	mov    ebp,esp
  424deb:	sub    esp,0x10
  424dee:	or     eax,0x4f1d
  424df3:	mov    eax,0xf89c85a5
  424df8:	mov    DWORD PTR [ebp-0x4],eax
  424dfb:	or     ecx,edx
  424dfd:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424e04:	add    DWORD PTR ds:0x42a2da,edi
  424e0a:	mov    ecx,DWORD PTR [ebp-0x4]
  424e0d:	movzx  edx,BYTE PTR ds:0x42a2f6
  424e14:	adc    DWORD PTR ds:0x42a2da,edx
  424e1a:	push   esi
  424e1b:	or     DWORD PTR ds:0x42a2ba,ebx
  424e21:	mov    edx,0x75108aa
  424e26:	xor    esi,DWORD PTR ds:0x42a27e
  424e2c:	xor    ecx,edx
  424e2e:	mov    DWORD PTR ds:0x42a2ae,0x17
  424e38:	cmp    DWORD PTR ds:0x42a2ae,0x0
  424e3f:	je     0x424e72
  424e45:	cmp    DWORD PTR ds:0x42a2ae,0x19
  424e4c:	jb     0x424e72
  424e52:	jmp    0x424e60
  424e57:	push   DWORD PTR [ebp-0x14]
  424e5a:	call   DWORD PTR ds:0x42a3ea
  424e60:	mov    esi,DWORD PTR ds:0x42a2ae
  424e66:	dec    esi
  424e67:	mov    DWORD PTR ds:0x42a2ae,esi
  424e6d:	jmp    0x424e38
  424e72:	mov    esi,0x3272f1
  424e77:	adc    DWORD PTR ds:0x42a272,0x42a296
  424e81:	push   edi
  424e82:	adc    DWORD PTR ds:0x42a2fa,0x7011
  424e8c:	mov    edi,DWORD PTR [ebp+0x10]
  424e8f:	add    DWORD PTR ds:0x42a2ea,0x6129
  424e99:	add    ecx,esi
  424e9b:	mov    DWORD PTR ds:0x42a302,0x6d2d
  424ea5:	cmp    ecx,edi
  424ea7:	mov    DWORD PTR ds:0x42a2d6,0xb6
  424eb1:	je     0x424fdc
  424eb7:	mov    ecx,DWORD PTR ds:0x42a2be
  424ebd:	adc    DWORD PTR ds:0x42a2e2,ecx
  424ec3:	mov    ecx,DWORD PTR [ebp-0x4]
  424ec6:	mov    edi,DWORD PTR [ebp+0x10]
  424ec9:	xor    eax,eax
  424ecb:	sbb    DWORD PTR ds:0x42a27a,0x42a2da
  424ed5:	xor    ecx,edx
  424ed7:	add    ecx,esi
  424ed9:	xor    DWORD PTR ds:0x42a2f6,0x42a2ae
  424ee3:	add    edi,0xfabdbed8
  424ee9:	mov    DWORD PTR ds:0x42a2b2,0x6fd3
  424ef3:	adc    eax,0xffffffff
  424ef6:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424f00:	xor    eax,0x0
  424f03:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424f0d:	mov    DWORD PTR [ebp-0xc],eax
  424f10:	push   ebx
  424f11:	dec    eax
  424f12:	xor    ebx,ebx
  424f14:	xor    edi,0x8a29a13d
  424f1a:	mov    eax,ds:0x42a336
  424f1f:	mov    eax,DWORD PTR [eax]
  424f21:	and    DWORD PTR ds:0x42a2d2,eax
  424f27:	mov    eax,ecx
  424f29:	add    eax,0xfabdbed8
  424f2e:	adc    ebx,0xffffffff
  424f31:	mov    DWORD PTR ds:0x42a2ea,0x4e45
  424f3b:	xor    eax,0x8a29a13d
  424f40:	inc    DWORD PTR ds:0x42a27e
  424f46:	xor    ebx,0x0
  424f49:	mov    DWORD PTR ds:0x42a2da,0x13c1
  424f53:	cmp    eax,edi
  424f55:	jne    0x424f6e
  424f5b:	cmp    ebx,DWORD PTR [ebp-0xc]
  424f5e:	je     0x424fd6
  424f64:	jmp    0x424f6e
  424f69:	mov    esi,0x3272f1
  424f6e:	mov    eax,DWORD PTR [ebp-0x4]
  424f71:	mov    edi,DWORD PTR [ebp-0x8]
  424f74:	xor    edi,edx
  424f76:	add    edi,esi
  424f78:	mov    esi,DWORD PTR [ebp+0x8]
  424f7b:	imul   edi,ecx
  424f7e:	mov    ebx,DWORD PTR [ebp+0xc]
  424f81:	xor    eax,edx
  424f83:	add    eax,ecx
  424f85:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424f8c:	mov    BYTE PTR [edi+esi*1],al
  424f8f:	mov    eax,DWORD PTR [ebp-0x8]
  424f92:	mov    esi,DWORD PTR [ebp+0x10]
  424f95:	xor    eax,edx
  424f97:	xor    ebx,ebx
  424f99:	add    esi,0xfabdbed8
  424f9f:	adc    ebx,0xffffffff
  424fa2:	lea    ecx,[ecx+eax*1+0x3272f1]
  424fa9:	xor    edi,edi
  424fab:	xor    esi,0x8a29a13d
  424fb1:	xor    ebx,0x0
  424fb4:	mov    eax,ecx
  424fb6:	add    eax,0xfabdbed8
  424fbb:	adc    edi,0xffffffff
  424fbe:	xor    eax,0x8a29a13d
  424fc3:	xor    edi,0x0
  424fc6:	cmp    eax,esi
  424fc8:	jne    0x424f69
  424fce:	cmp    edi,ebx
  424fd0:	jne    0x424f69
  424fd6:	mov    eax,0xf89c85ba
  424fdb:	pop    ebx
  424fdc:	pop    edi
  424fdd:	pop    esi
  424fde:	leave  
  424fdf:	ret    0xc
  424fe2:	push   ebp
  424fe3:	mov    ebp,esp
  424fe5:	push   ecx
  424fe6:	xor    ecx,0x1d8f
  424fec:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424ff3:	mov    DWORD PTR ds:0x42a2a6,0x12
  424ffd:	cmp    DWORD PTR ds:0x42a2a6,0x0
  425004:	je     0x42503e
  42500a:	cmp    DWORD PTR ds:0x42a2a6,0x14
  425011:	jb     0x42503e
  425017:	jmp    0x42502c
  42501c:	push   0x42a2ee
  425021:	push   0x429000
  425026:	call   DWORD PTR ds:0x42a3f2
  42502c:	mov    edx,DWORD PTR ds:0x42a2a6
  425032:	dec    edx
  425033:	mov    DWORD PTR ds:0x42a2a6,edx
  425039:	jmp    0x424ffd
  42503e:	mov    eax,DWORD PTR [ebp+0x8]
  425041:	adc    DWORD PTR ds:0x42a2ce,0x6bd6
  42504b:	movsx  eax,BYTE PTR [eax]
  42504e:	adc    DWORD PTR ds:0x42a2ea,ebx
  425054:	mov    edx,0x3272f1
  425059:	and    DWORD PTR ds:0x42a2e6,0x2b27
  425063:	sub    eax,edx
  425065:	mov    ecx,0x75108aa
  42506a:	add    DWORD PTR ds:0x42a256,0x714
  425074:	xor    eax,ecx
  425076:	mov    DWORD PTR ds:0x42a2f6,0x37ad
  425080:	cmp    eax,0xf89c85f6
  425085:	jne    0x4250b4
  42508b:	mov    eax,DWORD PTR [ebp+0x8]
  42508e:	push   esi
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	add    esi,DWORD PTR [eax+0x3c]
  425095:	mov    DWORD PTR [ebp+0x8],esi
  425098:	mov    eax,DWORD PTR [ebp-0x4]
  42509b:	mov    esi,DWORD PTR [ebp+0x8]
  42509e:	xor    eax,ecx
  4250a0:	add    eax,edx
  4250a2:	cmp    DWORD PTR [esi+0x54],eax
  4250a5:	pop    esi
  4250a6:	je     0x4250b4
  4250ac:	mov    eax,DWORD PTR [ebp+0x8]
  4250af:	jmp    0x4250bb
  4250b4:	mov    eax,DWORD PTR [ebp-0x4]
  4250b7:	xor    eax,ecx
  4250b9:	add    eax,edx
  4250bb:	leave  
  4250bc:	ret    0x4
  4250bf:	push   ebp
  4250c0:	mov    ebp,esp
  4250c2:	sub    esp,0xc
  4250c5:	mov    DWORD PTR ds:0x42a25a,0x10
  4250cf:	cmp    DWORD PTR ds:0x42a25a,0x0
  4250d6:	je     0x425131
  4250dc:	cmp    DWORD PTR ds:0x42a25a,0x7
  4250e3:	jle    0x425131
  4250e9:	jmp    0x425103
  4250ee:	push   0x3f8d
  4250f3:	push   0x4291fd
  4250f8:	push   0x4291fd
  4250fd:	call   DWORD PTR ds:0x42a3b6
  425103:	cmp    DWORD PTR ds:0x42a25a,0x8
  42510a:	jne    0x42511d
  425110:	mov    edx,DWORD PTR ds:0x42a25a
  425116:	dec    edx
  425117:	mov    DWORD PTR ds:0x42a25a,edx
  42511d:	xor    edx,edx
  42511f:	or     edx,DWORD PTR ds:0x42a25a
  425125:	dec    edx
  425126:	mov    DWORD PTR ds:0x42a25a,edx
  42512c:	jmp    0x4250cf
  425131:	push   esi
  425132:	mov    esi,0xf89c85a5
  425137:	mov    DWORD PTR [ebp-0x8],esi
  42513a:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  425141:	mov    DWORD PTR ds:0x42a2b6,0x3461
  42514b:	push   edi
  42514c:	xor    DWORD PTR ds:0x42a256,0x42a262
  425156:	mov    eax,eax
  425158:	and    DWORD PTR ds:0x42a2aa,0x0
  425162:	jmp    0x425176
  425167:	xor    edx,edx
  425169:	or     edx,DWORD PTR ds:0x42a2aa
  42516f:	inc    edx
  425170:	mov    DWORD PTR ds:0x42a2aa,edx
  425176:	cmp    DWORD PTR ds:0x42a2aa,0x1c
  42517d:	jae    0x4251c8
  425183:	cmp    DWORD PTR ds:0x42a2aa,0x7
  42518a:	jb     0x4251c8
  425190:	jmp    0x4251a9
  425195:	push   DWORD PTR [ebp-0x20]
  425198:	push   0x42a2ea
  42519d:	push   DWORD PTR [ebp-0x20]
  4251a0:	push   DWORD PTR [ebp-0x20]
  4251a3:	call   DWORD PTR ds:0x42a3f6
  4251a9:	cmp    DWORD PTR ds:0x42a2aa,0x6
  4251b0:	jne    0x4251c3
  4251b6:	mov    edx,DWORD PTR ds:0x42a2aa
  4251bc:	inc    edx
  4251bd:	mov    DWORD PTR ds:0x42a2aa,edx
  4251c3:	jmp    0x425167
  4251c8:	mov    eax,DWORD PTR [ebp-0x4]
  4251cb:	and    DWORD PTR ds:0x42a2ea,0x0
  4251d5:	jmp    0x4251e7
  4251da:	mov    edx,DWORD PTR ds:0x42a2ea
  4251e0:	inc    edx
  4251e1:	mov    DWORD PTR ds:0x42a2ea,edx
  4251e7:	cmp    DWORD PTR ds:0x42a2ea,0x1e
  4251ee:	jae    0x425219
  4251f4:	cmp    DWORD PTR ds:0x42a2ea,0x25
  4251fb:	jbe    0x425219
  425201:	jmp    0x425214
  425206:	push   0x42919f
  42520b:	push   DWORD PTR [ebp-0xc]
  42520e:	call   DWORD PTR ds:0x42a3ba
  425214:	jmp    0x4251da
  425219:	mov    edi,DWORD PTR [ebp-0x8]
  42521c:	mov    ecx,0x75108aa
  425221:	xor    eax,ecx
  425223:	xor    edi,ecx
  425225:	mov    edx,0x3272f1
  42522a:	add    edi,edx
  42522c:	add    eax,edx
  42522e:	imul   eax,edi
  425231:	mov    edi,DWORD PTR [ebp+0xc]
  425234:	cmp    edi,eax
  425236:	je     0x42528b
  42523c:	mov    DWORD PTR [ebp-0xc],esi
  42523f:	mov    eax,DWORD PTR [ebp-0xc]
  425242:	mov    esi,DWORD PTR [ebp+0xc]
  425245:	xor    eax,ecx
  425247:	lea    eax,[eax*8+0x1939800]
  42524e:	mov    eax,DWORD PTR [esi+eax*1]
  425251:	mov    DWORD PTR [ebp+0xc],eax
  425254:	mov    eax,DWORD PTR [ebp-0x4]
  425257:	mov    esi,DWORD PTR [ebp-0x8]
  42525a:	xor    eax,ecx
  42525c:	xor    esi,ecx
  42525e:	add    esi,edx
  425260:	add    eax,edx
  425262:	imul   eax,esi
  425265:	mov    esi,DWORD PTR [ebp+0xc]
  425268:	cmp    esi,eax
  42526a:	je     0x42528b
  425270:	mov    eax,DWORD PTR [ebp-0x4]
  425273:	xor    eax,ecx
  425275:	mov    ecx,DWORD PTR [ebp+0xc]
  425278:	add    eax,edx
  42527a:	imul   eax,ecx
  42527d:	add    eax,DWORD PTR [ebp+0x8]
  425280:	mov    DWORD PTR [ebp+0xc],eax
  425283:	mov    eax,DWORD PTR [ebp+0xc]
  425286:	jmp    0x42529c
  42528b:	mov    eax,DWORD PTR [ebp-0x4]
  42528e:	mov    esi,DWORD PTR [ebp-0x8]
  425291:	xor    esi,ecx
  425293:	xor    eax,ecx
  425295:	add    esi,edx
  425297:	add    eax,edx
  425299:	imul   eax,esi
  42529c:	pop    edi
  42529d:	pop    esi
  42529e:	leave  
  42529f:	ret    0x8
	...
  4252b2:	add    BYTE PTR [eax],al
  4252b4:	leave  
  4252b5:	dec    edx
  4252b6:	jns    0x425305
  4252b8:	add    BYTE PTR [eax],al
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	add    al,BYTE PTR [eax]
  4252be:	add    BYTE PTR [eax],al
  4252c0:	xor    BYTE PTR [eax],al
  4252c2:	add    BYTE PTR [eax],al
  4252c4:	rcl    BYTE PTR [edx+0x2],1
  4252c7:	add    al,dl
  4252c9:	inc    esi
  4252ca:	add    al,BYTE PTR [eax]
  4252cc:	add    BYTE PTR [eax],al
  4252ce:	add    BYTE PTR [eax],al
  4252d0:	push   edx
  4252d1:	push   ebx
  4252d2:	inc    esp
  4252d3:	push   ebx
  4252d4:	push   eax
  4252d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252d6:	mov    ?,WORD PTR [edx+ebx*1-0x64b82a5b]
  4252dd:	pop    ebp
  4252de:	int3   
  4252df:	sub    ch,ch
  4252e1:	mov    ebp,0x10926
  4252e6:	add    BYTE PTR [eax],al
  4252e8:	inc    esi
  4252e9:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  4252ed:	outs   dx,BYTE PTR ds:[esi]
  4252ee:	outs   dx,DWORD PTR fs:[esi]
  4252f0:	ja     0x425365
  4252f2:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4252f6:	pop    esp
  4252f7:	inc    esi
  4252f8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  425300:	mov    edx,DWORD PTR [ebp-0x14]
  425303:	sub    esp,0x108
  425309:	push   ebx
  42530a:	mov    eax,ebx
  42530c:	xchg   ecx,eax
  42530d:	mov    eax,DWORD PTR [ebp+0x8]
  425310:	cmp    eax,0xf89c85a5
  425315:	jne    0x4257cf
  42531b:	mov    eax,DWORD PTR [ebp+0xc]
  42531e:	cmp    eax,0xf89c85ba
  425323:	jne    0x4257cf
  425329:	mov    eax,DWORD PTR [ebp+0x24]
  42532c:	mov    DWORD PTR [ebp-0x4],eax
  42532f:	mov    eax,DWORD PTR [ebp-0x4]
  425332:	mov    eax,DWORD PTR [eax+0x1d8]
  425338:	mov    eax,DWORD PTR [eax]
  42533a:	mov    eax,DWORD PTR [eax]
  42533c:	mov    DWORD PTR [ebp-0x8],eax
  42533f:	mov    BYTE PTR [ebp-0x18],0x1a
  425343:	mov    BYTE PTR [ebp-0x17],0x1f
  425347:	mov    BYTE PTR [ebp-0x16],0x14
  42534b:	mov    BYTE PTR [ebp-0x15],0x4e
  42534f:	mov    BYTE PTR [ebp-0x14],0x4d
  425353:	mov    BYTE PTR [ebp-0x13],0x83
  425357:	mov    BYTE PTR [ebp-0x20],0x8
  42535b:	mov    BYTE PTR [ebp-0x1f],0xe
  42535f:	mov    BYTE PTR [ebp-0x1e],0x18
  425363:	mov    BYTE PTR [ebp-0x1d],0xd
  425367:	mov    BYTE PTR [ebp-0x1c],0x4e
  42536b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42536f:	mov    BYTE PTR [ebp-0x1a],0x83
  425373:	mov    BYTE PTR [ebp-0x28],0xe
  425377:	mov    BYTE PTR [ebp-0x27],0x1b
  42537b:	mov    BYTE PTR [ebp-0x26],0x17
  42537f:	mov    BYTE PTR [ebp-0x25],0xa
  425383:	mov    BYTE PTR [ebp-0x24],0x1c
  425387:	mov    BYTE PTR [ebp-0x23],0x13
  42538b:	mov    BYTE PTR [ebp-0x22],0x14
  42538f:	mov    BYTE PTR [ebp-0x21],0x83
  425393:	xor    ecx,ecx
  425395:	lea    eax,[ebp+ecx*1-0x18]
  425399:	movzx  edx,BYTE PTR [eax]
  42539c:	xor    edx,0x7c
  42539f:	inc    edx
  4253a0:	inc    ecx
  4253a1:	mov    BYTE PTR [eax],dl
  4253a3:	cmp    ecx,0x6
  4253a6:	jb     0x425395
  4253a8:	xor    ecx,ecx
  4253aa:	lea    eax,[ebp+ecx*1-0x20]
  4253ae:	movzx  edx,BYTE PTR [eax]
  4253b1:	xor    edx,0x7c
  4253b4:	inc    edx
  4253b5:	inc    ecx
  4253b6:	mov    BYTE PTR [eax],dl
  4253b8:	cmp    ecx,0x7
  4253bb:	jb     0x4253aa
  4253bd:	xor    ecx,ecx
  4253bf:	lea    eax,[ebp+ecx*1-0x28]
  4253c3:	movzx  edx,BYTE PTR [eax]
  4253c6:	xor    edx,0x7c
  4253c9:	inc    edx
  4253ca:	inc    ecx
  4253cb:	mov    BYTE PTR [eax],dl
  4253cd:	cmp    ecx,0x8
  4253d0:	jb     0x4253bf
  4253d2:	lea    eax,[ebp-0x2c]
  4253d5:	mov    DWORD PTR [ebp-0x8],eax
  4253d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4253db:	mov    eax,0x7113fccf
  4253e0:	mov    DWORD PTR [ecx],eax
  4253e2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4253e5:	push   esi
  4253e6:	push   edi
  4253e7:	mov    esi,0x4e3e
  4253ec:	mov    ebx,0x3272f1
  4253f1:	cmp    ecx,eax
  4253f3:	jne    0x4254be
  4253f9:	lea    eax,[esi+0x39]
  4253fc:	mov    WORD PTR [ebp-0x78],ax
  425400:	mov    eax,esi
  425402:	mov    WORD PTR [ebp-0x76],ax
  425406:	add    eax,0x33
  425409:	mov    WORD PTR [ebp-0x74],ax
  42540d:	lea    eax,[esi-0xe]
  425410:	mov    WORD PTR [ebp-0x72],ax
  425414:	add    eax,0x4f
  425417:	mov    ecx,eax
  425419:	lea    eax,[esi-0x15]
  42541c:	mov    WORD PTR [ebp-0x66],ax
  425420:	mov    eax,esi
  425422:	mov    WORD PTR [ebp-0x64],ax
  425426:	add    eax,0xffffffec
  425429:	mov    WORD PTR [ebp-0x62],ax
  42542d:	mov    eax,0x443
  425432:	mov    WORD PTR [ebp-0x60],ax
  425436:	mov    eax,0x5674
  42543b:	mov    WORD PTR [ebp-0x5e],ax
  42543f:	mov    eax,0x6114
  425444:	mov    WORD PTR [ebp-0x5c],ax
  425448:	lea    eax,[ebp-0xe0]
  42544e:	push   eax
  42544f:	mov    eax,DWORD PTR [ebp+0xc]
  425452:	mov    edi,0x75108aa
  425457:	xor    eax,edi
  425459:	add    eax,ebx
  42545b:	push   eax
  42545c:	mov    WORD PTR [ebp-0x70],cx
  425460:	lea    ecx,[esi-0xa]
  425463:	mov    edx,ecx
  425465:	lea    eax,[ebp-0x78]
  425468:	push   eax
  425469:	mov    eax,DWORD PTR [ebp-0x4]
  42546c:	mov    eax,DWORD PTR [eax+0x198]
  425472:	mov    WORD PTR [ebp-0x6e],dx
  425476:	mov    edx,0x4f8a
  42547b:	mov    WORD PTR [ebp-0x6c],dx
  42547f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425486:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42548d:	mov    DWORD PTR [ebp-0xe0],0x1
  425497:	mov    DWORD PTR [ebp-0xdc],0x255
  4254a1:	push   DWORD PTR [eax]
  4254a3:	mov    eax,DWORD PTR [ebp+0x10]
  4254a6:	call   eax
  4254a8:	mov    DWORD PTR [ebp-0x8],eax
  4254ab:	mov    eax,DWORD PTR [ebp-0x8]
  4254ae:	test   eax,eax
  4254b0:	je     0x4254c3
  4254b2:	xor    DWORD PTR ds:0x76586876,0x87687666
  4254bc:	jmp    0x4254c3
  4254be:	mov    edi,0x75108aa
  4254c3:	mov    eax,DWORD PTR [ebp-0x4]
  4254c6:	mov    ecx,DWORD PTR [eax+0x18c]
  4254cc:	xor    eax,eax
  4254ce:	cmp    DWORD PTR [ecx],eax
  4254d0:	jne    0x425742
  4254d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4254d9:	mov    ecx,DWORD PTR [ecx+0x17c]
  4254df:	mov    DWORD PTR [ecx],eax
  4254e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4254e4:	mov    ecx,DWORD PTR [ecx+0x180]
  4254ea:	mov    DWORD PTR [ecx],eax
  4254ec:	mov    eax,0x4e61
  4254f1:	mov    WORD PTR [ebp-0x9c],ax
  4254f8:	mov    eax,esi
  4254fa:	mov    WORD PTR [ebp-0x9a],ax
  425501:	mov    eax,0x4e71
  425506:	mov    WORD PTR [ebp-0x98],ax
  42550d:	add    eax,0xffffffc0
  425510:	mov    WORD PTR [ebp-0x96],ax
  425517:	mov    eax,0x4f8e
  42551c:	mov    WORD PTR [ebp-0x94],ax
  425523:	mov    eax,0x4e32
  425528:	mov    WORD PTR [ebp-0x92],ax
  42552f:	add    eax,0x4d
  425532:	mov    WORD PTR [ebp-0x90],ax
  425539:	mov    eax,0x4e34
  42553e:	mov    WORD PTR [ebp-0x8e],ax
  425545:	mov    eax,esi
  425547:	mov    WORD PTR [ebp-0x8c],ax
  42554e:	mov    eax,0x4e35
  425553:	mov    WORD PTR [ebp-0x8a],ax
  42555a:	mov    eax,0x99f1
  42555f:	mov    WORD PTR [ebp-0x88],ax
  425566:	mov    eax,0x8d62
  42556b:	mov    WORD PTR [ebp-0x86],ax
  425572:	mov    eax,0xd66f
  425577:	mov    WORD PTR [ebp-0x84],ax
  42557e:	mov    eax,0xd783
  425583:	mov    WORD PTR [ebp-0x82],ax
  42558a:	mov    eax,0x2784
  42558f:	mov    WORD PTR [ebp-0x80],ax
  425593:	mov    eax,0x4784
  425598:	mov    WORD PTR [ebp-0x7e],ax
  42559c:	mov    eax,0x4e33
  4255a1:	push   0x8
  4255a3:	mov    WORD PTR [ebp-0x7c],ax
  4255a7:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  4255ae:	mov    DWORD PTR [ebp-0xc],0x8314131c
  4255b5:	lea    eax,[ebp-0x10]
  4255b8:	pop    ecx
  4255b9:	mov    dl,BYTE PTR [eax]
  4255bb:	xor    dl,0x7c
  4255be:	inc    dl
  4255c0:	mov    BYTE PTR [eax],dl
  4255c2:	inc    eax
  4255c3:	dec    ecx
  4255c4:	jne    0x4255b9
  4255c6:	lea    eax,[ebp-0x10]
  4255c9:	mov    DWORD PTR [ebp-0xdc],eax
  4255cf:	lea    eax,[ebp-0xe0]
  4255d5:	push   eax
  4255d6:	mov    eax,DWORD PTR [ebp+0xc]
  4255d9:	xor    eax,edi
  4255db:	add    eax,ebx
  4255dd:	push   eax
  4255de:	mov    eax,DWORD PTR [ebp-0x4]
  4255e1:	add    eax,0x66
  4255e4:	push   eax
  4255e5:	mov    eax,DWORD PTR [ebp-0x4]
  4255e8:	mov    eax,DWORD PTR [eax+0x198]
  4255ee:	mov    DWORD PTR [ebp-0xe0],0x1
  4255f8:	push   DWORD PTR [eax]
  4255fa:	mov    eax,DWORD PTR [ebp+0x10]
  4255fd:	call   eax
  4255ff:	mov    ecx,DWORD PTR [ebp+0x8]
  425602:	xor    ecx,edi
  425604:	add    ecx,ebx
  425606:	mov    DWORD PTR [ebp-0x8],eax
  425609:	cmp    eax,ecx
  42560b:	jne    0x425626
  42560d:	mov    eax,ds:0x33730bcc
  425612:	or     eax,0x22150bcf
  425617:	mov    ds:0x33730bcc,eax
  42561c:	add    eax,0x3372e92f
  425621:	mov    ds:0x33730bcc,eax
  425626:	mov    ecx,0x4e66
  42562b:	mov    eax,ecx
  42562d:	mov    WORD PTR [ebp-0x40],ax
  425631:	add    eax,0x5
  425634:	mov    edx,eax
  425636:	mov    WORD PTR [ebp-0x3e],dx
  42563a:	mov    edx,0x4f93
  42563f:	mov    WORD PTR [ebp-0x3c],dx
  425643:	add    edx,0xfffffff8
  425646:	mov    WORD PTR [ebp-0x3a],dx
  42564a:	mov    edx,0x4f8d
  42564f:	mov    WORD PTR [ebp-0x38],dx
  425653:	add    edx,0xfffffff3
  425656:	mov    WORD PTR [ebp-0x36],dx
  42565a:	mov    edx,0x4f87
  42565f:	mov    WORD PTR [ebp-0x34],dx
  425663:	mov    WORD PTR [ebp-0x32],cx
  425667:	mov    ecx,esi
  425669:	mov    WORD PTR [ebp-0x30],cx
  42566d:	lea    ecx,[edx-0x1]
  425670:	mov    edx,ecx
  425672:	mov    WORD PTR [ebp-0x54],dx
  425676:	mov    edx,eax
  425678:	mov    WORD PTR [ebp-0x52],dx
  42567c:	mov    edx,0x4e73
  425681:	mov    WORD PTR [ebp-0x50],dx
  425685:	mov    WORD PTR [ebp-0x4e],ax
  425689:	lea    eax,[edx-0x6]
  42568c:	mov    WORD PTR [ebp-0x4c],ax
  425690:	add    eax,0xfffffff3
  425693:	mov    WORD PTR [ebp-0x4a],ax
  425697:	lea    eax,[edx-0xc]
  42569a:	mov    WORD PTR [ebp-0x48],ax
  42569e:	mov    WORD PTR [ebp-0x46],cx
  4256a2:	mov    WORD PTR [ebp-0x44],si
  4256a6:	mov    eax,DWORD PTR [ebp+0x8]
  4256a9:	movzx  ecx,WORD PTR [ebp-0x54]
  4256ad:	xor    eax,edi
  4256af:	add    eax,ebx
  4256b1:	xor    eax,ecx
  4256b3:	mov    WORD PTR [ebp-0x54],ax
  4256b7:	mov    eax,DWORD PTR [ebp+0x8]
  4256ba:	movzx  ecx,WORD PTR [ebp-0x40]
  4256be:	xor    eax,edi
  4256c0:	add    eax,ebx
  4256c2:	xor    eax,ecx
  4256c4:	mov    WORD PTR [ebp-0x40],ax
  4256c8:	xor    eax,eax
  4256ca:	mov    WORD PTR [ebp-0xf4],ax
  4256d1:	mov    WORD PTR [ebp-0x108],ax
  4256d8:	mov    edi,DWORD PTR [ebp+0x24]
  4256db:	lea    eax,[ebp-0xf4]
  4256e1:	lea    edx,[ebp-0x54]
  4256e4:	mov    DWORD PTR [ebp-0xe0],0x2
  4256ee:	mov    DWORD PTR [ebp-0xdc],eax
  4256f4:	call   0x42812b
  4256f9:	mov    DWORD PTR [ebp-0xd8],eax
  4256ff:	lea    eax,[ebp-0xe0]
  425705:	push   eax
  425706:	mov    eax,DWORD PTR [ebp+0xc]
  425709:	xor    eax,0x75108aa
  42570e:	add    eax,ebx
  425710:	push   eax
  425711:	lea    eax,[ebp-0x9c]
  425717:	push   eax
  425718:	push   DWORD PTR [ebp-0x8]
  42571b:	mov    eax,DWORD PTR [ebp+0x10]
  42571e:	call   eax
  425720:	mov    edi,DWORD PTR [ebp+0x24]
  425723:	lea    eax,[ebp-0x108]
  425729:	lea    edx,[ebp-0x40]
  42572c:	mov    DWORD PTR [ebp-0xdc],eax
  425732:	call   0x42812b
  425737:	mov    DWORD PTR [ebp-0xd8],eax
  42573d:	mov    edi,0x75108aa
  425742:	mov    eax,DWORD PTR [ebp+0x14]
  425745:	push   DWORD PTR [ebp-0x4]
  425748:	push   DWORD PTR [ebp+0x20]
  42574b:	push   DWORD PTR [ebp+0x1c]
  42574e:	push   DWORD PTR [ebp+0x18]
  425751:	push   DWORD PTR [ebp+0x10]
  425754:	push   DWORD PTR [ebp+0x8]
  425757:	push   DWORD PTR [ebp+0xc]
  42575a:	call   0x4269cc
  42575f:	test   eax,eax
  425761:	je     0x4257a5
  425763:	add    DWORD PTR [ebp-0x4],eax
  425766:	push   DWORD PTR [ebp-0x4]
  425769:	lea    esi,[ebp+0x4]
  42576c:	call   0x425bbd
  425771:	mov    eax,DWORD PTR [ebp-0x4]
  425774:	mov    eax,DWORD PTR [eax+0x1c8]
  42577a:	mov    eax,DWORD PTR [eax]
  42577c:	xor    eax,edi
  42577e:	add    eax,ebx
  425780:	mov    eax,DWORD PTR [ebp-0x4]
  425783:	jne    0x42579b
  425785:	mov    ecx,DWORD PTR [ebp-0x4]
  425788:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42578e:	push   DWORD PTR [ecx]
  425790:	mov    eax,DWORD PTR [eax+0x1e0]
  425796:	call   DWORD PTR [eax+0x28]
  425799:	jmp    0x4257a5
  42579b:	mov    eax,DWORD PTR [eax+0x17c]
  4257a1:	mov    eax,DWORD PTR [eax]
  4257a3:	add    DWORD PTR [esi],eax
  4257a5:	mov    eax,DWORD PTR [ebp-0x4]
  4257a8:	mov    eax,DWORD PTR [eax+0x1dc]
  4257ae:	dec    DWORD PTR [eax]
  4257b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257b3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4257b9:	mov    eax,DWORD PTR [eax]
  4257bb:	lea    eax,[ecx+eax*4]
  4257be:	mov    ecx,DWORD PTR [ebp-0x4]
  4257c1:	mov    ecx,DWORD PTR [ecx+0x17c]
  4257c7:	mov    eax,DWORD PTR [eax]
  4257c9:	mov    ecx,DWORD PTR [ecx]
  4257cb:	add    DWORD PTR [eax],ecx
  4257cd:	pop    edi
  4257ce:	pop    esi
  4257cf:	pop    ebx
  4257d0:	leave  
  4257d1:	ret    0x20
  4257d4:	push   edi
  4257d5:	push   esi
  4257d6:	push   ebx
  4257d7:	push   ebp
  4257d8:	mov    ebp,esp
  4257da:	mov    eax,DWORD PTR [ebp+0x24]
  4257dd:	add    DWORD PTR [ebp+0x28],eax
  4257e0:	push   eax
  4257e1:	cld    
  4257e2:	mov    esi,DWORD PTR [ebp+0x18]
  4257e5:	add    DWORD PTR [ebp+0x1c],esi
  4257e8:	push   esi
  4257e9:	mov    esi,DWORD PTR [ebp+0x14]
  4257ec:	lods   eax,DWORD PTR ds:[esi]
  4257ed:	xchg   edx,eax
  4257ee:	push   edx
  4257ef:	mov    cl,BYTE PTR [esi-0x2]
  4257f2:	or     eax,0xffffffff
  4257f5:	shl    eax,cl
  4257f7:	not    eax
  4257f9:	push   eax
  4257fa:	mov    cl,dh
  4257fc:	or     eax,0xffffffff
  4257ff:	shl    eax,cl
  425801:	not    eax
  425803:	push   eax
  425804:	add    cl,dl
  425806:	mov    edi,esi
  425808:	sub    esp,0xc
  42580b:	sub    eax,eax
  42580d:	inc    eax
  42580e:	push   eax
  42580f:	push   eax
  425810:	push   eax
  425811:	push   eax
  425812:	push   eax
  425813:	push   edi
  425814:	sub    esi,esi
  425816:	push   esi
  425817:	or     ebx,0xffffffff
  42581a:	mov    eax,0x300
  42581f:	shl    eax,cl
  425821:	lea    ecx,[eax+0x736]
  425827:	mov    eax,0x4000400
  42582c:	shr    ecx,1
  42582e:	rep stos DWORD PTR es:[edi],eax
  425830:	push   0x5
  425832:	pop    ecx
  425833:	call   0x425b1e
  425838:	loop   0x425833
  42583a:	lea    esi,[esi]
  42583c:	lea    edi,[edi]
  42583e:	mov    edi,DWORD PTR [ebp-0x4]
  425841:	mov    eax,DWORD PTR [ebp-0x10]
  425844:	sub    edi,DWORD PTR [ebp+0x24]
  425847:	and    eax,edi
  425849:	mov    DWORD PTR [ebp-0x18],eax
  42584c:	mov    al,0x0
  42584e:	call   0x425b36
  425853:	jne    0x4258ee
  425859:	mov    cl,BYTE PTR [ebp-0xc]
  42585c:	and    edi,DWORD PTR [ebp-0x14]
  42585f:	shl    edi,cl
  425861:	sub    cl,0x8
  425864:	neg    cl
  425866:	shr    esi,cl
  425868:	pop    eax
  425869:	add    edi,esi
  42586b:	pop    esi
  42586c:	lea    edi,[edi+edi*2]
  42586f:	shl    edi,0x8
  425872:	cmp    al,0x7
  425874:	pop    edx
  425875:	lea    ecx,[esi+edi*2+0xe6c]
  42587c:	push   ecx
  42587d:	push   esi
  42587e:	mov    esi,0x100
  425883:	push   eax
  425884:	mov    al,0x1
  425886:	jb     0x4258bc
  425888:	mov    edi,DWORD PTR [ebp-0x4]
  42588b:	sub    edi,DWORD PTR [ebp-0x24]
  42588e:	movzx  edi,BYTE PTR [edi]
  425891:	mov    ebp,DWORD PTR [ebp-0x34]
  425894:	shl    edi,1
  425896:	mov    ecx,esi
  425898:	and    esi,edi
  42589a:	add    ecx,esi
  42589c:	lea    ebp,[ebp+ecx*2+0x0]
  4258a0:	call   0x425b55
  4258a5:	mov    ecx,eax
  4258a7:	shr    esi,0x8
  4258aa:	and    ecx,0x1
  4258ad:	cmp    esi,ecx
  4258af:	mov    esi,0x100
  4258b4:	jne    0x4258c4
  4258b6:	cmp    eax,esi
  4258b8:	jb     0x425891
  4258ba:	jmp    0x4258d0
  4258bc:	mov    ebp,DWORD PTR [ebp-0x34]
  4258bf:	call   0x425b55
  4258c4:	inc    eax
  4258c5:	inc    esi
  4258c6:	sub    eax,0x1
  4258c9:	sub    esi,0x1
  4258cc:	cmp    eax,esi
  4258ce:	jb     0x4258bc
  4258d0:	pop    edx
  4258d1:	inc    edx
  4258d2:	cmp    edx,0x5
  4258d5:	dec    edx
  4258d6:	mov    ecx,edx
  4258d8:	jb     0x4258e9
  4258da:	inc    edx
  4258db:	cmp    edx,0xb
  4258de:	dec    edx
  4258df:	mov    cl,0x4
  4258e1:	dec    cl
  4258e3:	jb     0x4258e9
  4258e5:	mov    cl,0x7
  4258e7:	dec    cl
  4258e9:	sub    edx,ecx
  4258eb:	push   edx
  4258ec:	jmp    0x42593d
  4258ee:	mov    al,0xc1
  4258f0:	dec    al
  4258f2:	call   0x425b46
  4258f7:	jne    0x42590d
  4258f9:	pop    eax
  4258fa:	pop    edi
  4258fb:	pop    edx
  4258fc:	pop    ecx
  4258fd:	pop    edx
  4258fe:	pop    ecx
  4258ff:	push   DWORD PTR [esp]
  425902:	push   ecx
  425903:	push   edx
  425904:	mov    edx,0x664
  425909:	mov    cl,0x0
  42590b:	jmp    0x425980
  42590d:	mov    al,0xcd
  42590f:	dec    al
  425911:	call   0x425b46
  425916:	jne    0x425946
  425918:	mov    al,0xf1
  42591a:	dec    al
  42591c:	call   0x425b36
  425921:	jne    0x425976
  425923:	pop    eax
  425924:	cmp    al,0x7
  425926:	mov    al,0x9
  425928:	jb     0x42592c
  42592a:	mov    al,0xb
  42592c:	push   eax
  42592d:	mov    esi,DWORD PTR [ebp-0x4]
  425930:	sub    esi,DWORD PTR [ebp-0x24]
  425933:	cmp    esi,DWORD PTR [ebp+0x24]
  425936:	jb     0x425b0d
  42593c:	lods   al,BYTE PTR ds:[esi]
  42593d:	mov    edi,DWORD PTR [ebp-0x4]
  425940:	stos   BYTE PTR es:[edi],al
  425941:	jmp    0x425ad4
  425946:	mov    al,0xd8
  425948:	call   0x425b46
  42594d:	mov    esi,DWORD PTR [ebp-0x28]
  425950:	je     0x42596d
  425952:	mov    al,0xe4
  425954:	call   0x425b46
  425959:	mov    esi,DWORD PTR [ebp-0x2c]
  42595c:	je     0x425967
  42595e:	mov    esi,DWORD PTR [ebp-0x30]
  425961:	mov    ecx,DWORD PTR [ebp-0x2c]
  425964:	mov    DWORD PTR [ebp-0x30],ecx
  425967:	mov    ecx,DWORD PTR [ebp-0x28]
  42596a:	mov    DWORD PTR [ebp-0x2c],ecx
  42596d:	mov    ecx,DWORD PTR [ebp-0x24]
  425970:	mov    DWORD PTR [ebp-0x28],ecx
  425973:	mov    DWORD PTR [ebp-0x24],esi
  425976:	pop    eax
  425977:	pop    edi
  425978:	pop    ecx
  425979:	mov    edx,0xa68
  42597e:	mov    cl,0x8
  425980:	add    edx,edi
  425982:	push   edx
  425983:	push   edi
  425984:	cmp    al,0x7
  425986:	mov    al,cl
  425988:	jb     0x42598c
  42598a:	add    al,0x3
  42598c:	push   eax
  42598d:	mov    ebp,DWORD PTR [ebp-0x34]
  425990:	call   0x425b53
  425995:	jne    0x4259ab
  425997:	mov    eax,DWORD PTR [ebp-0x18]
  42599a:	mov    edi,DWORD PTR [ebp-0x34]
  42599d:	shl    eax,0x3
  4259a0:	sub    ecx,ecx
  4259a2:	push   0x8
  4259a4:	pop    esi
  4259a5:	lea    edi,[edi+eax*2+0x4]
  4259a9:	jmp    0x4259e0
  4259ab:	mov    ebp,DWORD PTR [ebp-0x34]
  4259ae:	add    ebp,0x2
  4259b1:	call   0x425b53
  4259b6:	jne    0x4259d0
  4259b8:	mov    eax,DWORD PTR [ebp-0x18]
  4259bb:	mov    edi,DWORD PTR [ebp-0x34]
  4259be:	shl    eax,0x3
  4259c1:	push   0x8
  4259c3:	pop    ecx
  4259c4:	push   0x8
  4259c6:	pop    esi
  4259c7:	lea    edi,[edi+eax*2+0x104]
  4259ce:	jmp    0x4259e0
  4259d0:	mov    edi,0x204
  4259d5:	add    edi,DWORD PTR [ebp-0x34]
  4259d8:	push   0x10
  4259da:	pop    ecx
  4259db:	mov    esi,0x100
  4259e0:	mov    DWORD PTR [ebp-0x1c],ecx
  4259e3:	sub    eax,eax
  4259e5:	inc    eax
  4259e6:	mov    ebp,edi
  4259e8:	call   0x425b55
  4259ed:	mov    ecx,eax
  4259ef:	sub    ecx,esi
  4259f1:	jb     0x4259e6
  4259f3:	add    DWORD PTR [ebp-0x1c],ecx
  4259f6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4259fa:	jae    0x425ab0
  425a00:	add    DWORD PTR [ebp-0x3c],0x7
  425a04:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a07:	cmp    ecx,0x4
  425a0a:	jb     0x425a0f
  425a0c:	push   0x3
  425a0e:	pop    ecx
  425a0f:	mov    edi,DWORD PTR [ebp-0x38]
  425a12:	shl    ecx,0x6
  425a15:	sub    eax,eax
  425a17:	inc    eax
  425a18:	push   0x40
  425a1a:	pop    esi
  425a1b:	lea    edi,[edi+ecx*2+0x360]
  425a22:	mov    ebp,edi
  425a24:	call   0x425b55
  425a29:	mov    ecx,eax
  425a2b:	sub    ecx,esi
  425a2d:	jb     0x425a22
  425a2f:	mov    DWORD PTR [ebp-0x18],ecx
  425a32:	mov    DWORD PTR [ebp-0x24],ecx
  425a35:	cmp    ecx,0x4
  425a38:	jb     0x425aad
  425a3a:	mov    esi,ecx
  425a3c:	and    DWORD PTR [ebp-0x24],0x1
  425a40:	shr    esi,1
  425a42:	or     DWORD PTR [ebp-0x24],0x2
  425a46:	dec    esi
  425a47:	cmp    ecx,0xe
  425a4a:	jae    0x425a65
  425a4c:	mov    eax,0x2af
  425a51:	sub    eax,ecx
  425a53:	mov    ecx,esi
  425a55:	shl    BYTE PTR [ebp-0x24],cl
  425a58:	add    eax,DWORD PTR [ebp-0x24]
  425a5b:	shl    eax,1
  425a5d:	add    eax,DWORD PTR [ebp-0x38]
  425a60:	mov    DWORD PTR [ebp-0x34],eax
  425a63:	jmp    0x425a92
  425a65:	sub    esi,0x4
  425a68:	call   0x425b12
  425a6d:	shr    ebx,1
  425a6f:	shl    DWORD PTR [ebp-0x24],1
  425a72:	cmp    DWORD PTR [ebp-0x20],ebx
  425a75:	jb     0x425a7d
  425a77:	inc    DWORD PTR [ebp-0x24]
  425a7a:	sub    DWORD PTR [ebp-0x20],ebx
  425a7d:	dec    esi
  425a7e:	jne    0x425a68
  425a80:	mov    eax,0x644
  425a85:	add    eax,DWORD PTR [ebp-0x38]
  425a88:	mov    DWORD PTR [ebp-0x34],eax
  425a8b:	shl    DWORD PTR [ebp-0x24],0x4
  425a8f:	push   0x4
  425a91:	pop    esi
  425a92:	sub    edi,edi
  425a94:	inc    edi
  425a95:	mov    eax,edi
  425a97:	mov    ebp,DWORD PTR [ebp-0x34]
  425a9a:	call   0x425b55
  425a9f:	test   al,0x1
  425aa1:	je     0x425aa6
  425aa3:	or     DWORD PTR [ebp-0x24],edi
  425aa6:	shl    edi,1
  425aa8:	dec    esi
  425aa9:	jne    0x425a97
  425aab:	jmp    0x425aad
  425aad:	inc    DWORD PTR [ebp-0x24]
  425ab0:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ab3:	add    ecx,0x2
  425ab6:	mov    edi,DWORD PTR [ebp-0x4]
  425ab9:	mov    eax,edi
  425abb:	sub    eax,DWORD PTR [ebp+0x24]
  425abe:	cmp    DWORD PTR [ebp-0x24],eax
  425ac1:	ja     0x425b0d
  425ac3:	mov    esi,edi
  425ac5:	sub    esi,DWORD PTR [ebp-0x24]
  425ac8:	mov    edx,DWORD PTR [ebp+0x28]
  425acb:	lods   al,BYTE PTR ds:[esi]
  425acc:	stos   BYTE PTR es:[edi],al
  425acd:	cmp    edi,edx
  425acf:	jae    0x425ad4
  425ad1:	dec    ecx
  425ad2:	jne    0x425acb
  425ad4:	mov    DWORD PTR [ebp-0x4],edi
  425ad7:	movzx  esi,al
  425ada:	cmp    edi,DWORD PTR [ebp+0x28]
  425add:	jb     0x42583e
  425ae3:	call   0x425b12
  425ae8:	sub    eax,eax
  425aea:	lea    ebp,[esp+0x3c]
  425aee:	mov    edx,DWORD PTR [ebp+0x20]
  425af1:	mov    esi,DWORD PTR [ebp-0x8]
  425af4:	sub    esi,DWORD PTR [ebp+0x18]
  425af7:	mov    DWORD PTR [edx],esi
  425af9:	mov    edx,DWORD PTR [ebp+0x2c]
  425afc:	mov    edi,DWORD PTR [ebp-0x4]
  425aff:	sub    edi,DWORD PTR [ebx+0x16]
  425b02:	lods   al,BYTE PTR ds:[esi]
  425b03:	outs   dx,BYTE PTR ds:[esi]
  425b04:	lods   eax,DWORD PTR ds:[esi]
  425b05:	repz inc DWORD PTR [ebx]
  425b08:	xchg   ecx,eax
  425b09:	test   BYTE PTR [esi-0x76cd1801],0x87
  425b10:	xor    eax,0x86758ce9
  425b15:	xchg   BYTE PTR [esi-0x6a75b076],al
  425b1b:	lea    edx,ds:0x5bb4dfa6
  425b21:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425b28:	fwait
  425b29:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425b2f:	fwait
  425b30:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425b37:	mov    ebx,0x8960c299
  425b3c:	lea    ecx,ds:0x299b9296
  425b42:	xchg   edx,eax
  425b43:	lea    esi,ds:0x8960c29e
  425b49:	xchg   edx,eax
  425b4a:	fwait
  425b4b:	cdq    
  425b4c:	mov    ah,0x3b
  425b4e:	test   eax,0x869b37bc
  425b53:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425b59:	mov    WORD PTR [ebp-0x7a],?
  425b5c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425b62:	mov    bh,0x16
  425b64:	lea    dx,[edi]
  425b67:	push   ss
  425b68:	push   es
  425b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b6a:	jb     0x425b23
  425b6c:	push   ss
  425b6d:	not    DWORD PTR [ebx-0x8]
  425b70:	mov    al,0xca
  425b72:	test   DWORD PTR [edi+0x158d6616],edx
  425b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b79:	test   al,0xd7
  425b7b:	push   ss
  425b7c:	push   es
  425b7d:	mov    ah,0xb5
  425b7f:	ret    0x55b7
  425b82:	add    cl,al
  425b84:	jmp    0xcaf16a94
  425b89:	cmp    DWORD PTR [esp+0x20],ecx
  425b8d:	jae    0x425ba6
  425b8f:	mov    ebx,ecx
  425b91:	mov    ecx,0x800
  425b96:	sub    ecx,edx
  425b98:	shr    ecx,0x5
  425b9b:	add    WORD PTR [ebp+0x0],cx
  425b9f:	add    eax,eax
  425ba1:	lea    ebp,[esp+0x40]
  425ba5:	ret    
  425ba6:	shr    edx,0x5
  425ba9:	sub    DWORD PTR [esp+0x20],ecx
  425bad:	sub    ebx,ecx
  425baf:	sub    WORD PTR [ebp+0x0],dx
  425bb3:	add    eax,eax
  425bb5:	add    eax,0x1
  425bb8:	lea    ebp,[esp+0x40]
  425bbc:	ret    
  425bbd:	push   ebp
  425bbe:	mov    ebp,esp
  425bc0:	sub    esp,0x12c
  425bc6:	push   ebx
  425bc7:	push   esi
  425bc8:	push   edi
  425bc9:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425bd0:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425bd7:	mov    eax,DWORD PTR [ebp+0x8]
  425bda:	mov    DWORD PTR [ebp+0x8],eax
  425bdd:	mov    ecx,DWORD PTR [ebp-0x10]
  425be0:	mov    ebx,0x75108aa
  425be5:	xor    ecx,ebx
  425be7:	mov    eax,0x3272f1
  425bec:	add    ecx,eax
  425bee:	mov    DWORD PTR [ebp-0x24],ecx
  425bf1:	mov    ecx,DWORD PTR [ebp-0x10]
  425bf4:	xor    ecx,ebx
  425bf6:	add    ecx,eax
  425bf8:	mov    DWORD PTR [ebp-0x40],ecx
  425bfb:	mov    ecx,DWORD PTR [ebp-0x10]
  425bfe:	xor    ecx,ebx
  425c00:	add    ecx,eax
  425c02:	mov    DWORD PTR [ebp-0x3c],ecx
  425c05:	mov    ecx,DWORD PTR [ebp-0x10]
  425c08:	xor    ecx,ebx
  425c0a:	add    ecx,eax
  425c0c:	mov    DWORD PTR [ebp-0xd8],ecx
  425c12:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425c19:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425c20:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425c27:	push   0x25
  425c29:	pop    ecx
  425c2a:	mov    DWORD PTR [ebp-0x30],ecx
  425c2d:	mov    DWORD PTR [ebp-0x30],ecx
  425c30:	push   0x65
  425c32:	pop    ecx
  425c33:	mov    DWORD PTR [ebp-0x30],ecx
  425c36:	mov    DWORD PTR [ebp-0x30],ecx
  425c39:	mov    DWORD PTR [ebp-0x30],0x4d
  425c40:	mov    DWORD PTR [ebp-0x30],0x43
  425c47:	mov    ecx,DWORD PTR [ebp-0x10]
  425c4a:	xor    ecx,ebx
  425c4c:	add    ecx,eax
  425c4e:	mov    DWORD PTR [ebp-0x30],ecx
  425c51:	mov    ecx,DWORD PTR [ebp-0x10]
  425c54:	xor    ecx,ebx
  425c56:	add    ecx,eax
  425c58:	mov    DWORD PTR [ebp-0x30],ecx
  425c5b:	mov    DWORD PTR [ebp-0x28],0x258
  425c62:	mov    DWORD PTR [ebp-0x34],0x36
  425c69:	mov    DWORD PTR [ebp-0x14],0x7a
  425c70:	lea    edi,[ebp-0x10c]
  425c76:	lea    esi,[ebp-0x12c]
  425c7c:	call   0x42693b
  425c81:	dec    DWORD PTR [ebp-0x14]
  425c84:	jne    0x425c70
  425c86:	dec    DWORD PTR [ebp-0x34]
  425c89:	jne    0x425c69
  425c8b:	dec    DWORD PTR [ebp-0x28]
  425c8e:	jne    0x425c62
  425c90:	mov    DWORD PTR [ebp-0x28],0x400e
  425c97:	mov    eax,DWORD PTR [ebp-0x10]
  425c9a:	xor    eax,ebx
  425c9c:	mov    esi,0x3272f1
  425ca1:	add    eax,esi
  425ca3:	mov    DWORD PTR [ebp-0x1c],eax
  425ca6:	mov    eax,DWORD PTR [ebp-0x10]
  425ca9:	and    DWORD PTR [ebp-0x94],0x0
  425cb0:	xor    eax,ebx
  425cb2:	add    eax,esi
  425cb4:	mov    DWORD PTR [ebp-0x38],eax
  425cb7:	mov    eax,fs:0x18
  425cbd:	mov    DWORD PTR [ebp-0x94],eax
  425cc3:	mov    eax,DWORD PTR [eax+0x30]
  425cc6:	mov    DWORD PTR [ebp-0xcc],eax
  425ccc:	mov    eax,DWORD PTR [eax+0xc]
  425ccf:	mov    DWORD PTR [ebp-0xc0],eax
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    ecx,[ebp-0x94]
  425cde:	mov    DWORD PTR [eax+0x1a0],ecx
  425ce4:	mov    eax,DWORD PTR [ebp+0x8]
  425ce7:	lea    ecx,[ebp-0xcc]
  425ced:	mov    DWORD PTR [eax+0x1a4],ecx
  425cf3:	mov    eax,DWORD PTR [ebp+0x8]
  425cf6:	push   DWORD PTR [ebp+0x8]
  425cf9:	lea    ecx,[ebp-0xc0]
  425cff:	mov    DWORD PTR [eax+0x1a8],ecx
  425d05:	call   0x4280fc
  425d0a:	mov    ecx,DWORD PTR [ebp-0x10]
  425d0d:	xor    ecx,ebx
  425d0f:	add    ecx,esi
  425d11:	cmp    ecx,eax
  425d13:	je     0x426096
  425d19:	mov    eax,DWORD PTR [ebp+0x8]
  425d1c:	mov    eax,DWORD PTR [eax+0x194]
  425d22:	mov    ecx,DWORD PTR [eax]
  425d24:	mov    eax,DWORD PTR [ebp+0x8]
  425d27:	mov    eax,DWORD PTR [eax+0x194]
  425d2d:	mov    eax,DWORD PTR [eax]
  425d2f:	add    eax,DWORD PTR [ecx+0x3c]
  425d32:	mov    ecx,DWORD PTR [ebp+0x8]
  425d35:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425d3b:	lea    edx,[ebp-0xec]
  425d41:	push   edx
  425d42:	mov    edx,DWORD PTR [ebp+0x8]
  425d45:	mov    edx,DWORD PTR [edx+0x18c]
  425d4b:	mov    edx,DWORD PTR [edx]
  425d4d:	add    edx,DWORD PTR [eax+0x88]
  425d53:	push   0x4
  425d55:	push   DWORD PTR [eax+0x8c]
  425d5b:	push   edx
  425d5c:	call   DWORD PTR [ecx+0x1c]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	xor    eax,eax
  425d64:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425d6e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425d78:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425d82:	mov    BYTE PTR [ebp-0x9c],0x83
  425d89:	lea    edi,[ebp-0x9b]
  425d8f:	stos   DWORD PTR es:[edi],eax
  425d90:	stos   WORD PTR es:[edi],ax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	xor    eax,eax
  425d95:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425d9f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425da9:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425db3:	mov    BYTE PTR [ebp-0xb0],0x83
  425dba:	lea    edi,[ebp-0xaf]
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	stos   WORD PTR es:[edi],ax
  425dc3:	stos   BYTE PTR es:[edi],al
  425dc4:	mov    edi,DWORD PTR [ebp+0x8]
  425dc7:	mov    eax,DWORD PTR [ebp+0x8]
  425dca:	mov    edx,DWORD PTR [eax+0x1b8]
  425dd0:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425dd7:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425dde:	mov    WORD PTR [ebp-0x60],0x833c
  425de4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425dee:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425df8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425e02:	mov    DWORD PTR [ebp-0x84],0xd181008
  425e0c:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425e13:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425e1a:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425e21:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425e28:	mov    DWORD PTR [ebp-0x70],0xd181008
  425e2f:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425e36:	call   0x42812b
  425e3b:	push   eax
  425e3c:	mov    eax,DWORD PTR [ebp+0x8]
  425e3f:	mov    eax,DWORD PTR [eax+0x1a8]
  425e45:	push   DWORD PTR [eax]
  425e47:	call   0x427dcc
  425e4c:	test   eax,eax
  425e4e:	jne    0x425ea0
  425e50:	mov    eax,DWORD PTR [ebp+0x8]
  425e53:	mov    eax,DWORD PTR [eax+0x1e0]
  425e59:	mov    edi,DWORD PTR [ebp+0x8]
  425e5c:	add    eax,0x4
  425e5f:	mov    DWORD PTR [ebp-0x20],eax
  425e62:	mov    eax,DWORD PTR [ebp+0x8]
  425e65:	mov    edx,DWORD PTR [eax+0x1b8]
  425e6b:	call   0x42812b
  425e70:	push   eax
  425e71:	mov    eax,DWORD PTR [ebp-0x20]
  425e74:	call   DWORD PTR [eax]
  425e76:	test   eax,eax
  425e78:	jne    0x425ea0
  425e7a:	mov    eax,DWORD PTR [ebp+0x8]
  425e7d:	mov    eax,DWORD PTR [eax+0x1e0]
  425e83:	mov    edi,DWORD PTR [ebp+0x8]
  425e86:	add    eax,0x10
  425e89:	mov    DWORD PTR [ebp-0x20],eax
  425e8c:	mov    eax,DWORD PTR [ebp+0x8]
  425e8f:	mov    edx,DWORD PTR [eax+0x1b8]
  425e95:	call   0x42812b
  425e9a:	push   eax
  425e9b:	mov    eax,DWORD PTR [ebp-0x20]
  425e9e:	call   DWORD PTR [eax]
  425ea0:	mov    eax,DWORD PTR [ebp-0x10]
  425ea3:	mov    ecx,DWORD PTR [ebp-0x28]
  425ea6:	xor    eax,ebx
  425ea8:	add    eax,esi
  425eaa:	cmp    eax,ecx
  425eac:	je     0x42606f
  425eb2:	mov    eax,DWORD PTR [ebp-0x18]
  425eb5:	xor    eax,ebx
  425eb7:	mov    ecx,0xffcd8d0f
  425ebc:	sub    ecx,eax
  425ebe:	add    ecx,DWORD PTR [ebp-0x28]
  425ec1:	mov    eax,DWORD PTR [ebp-0x1c]
  425ec4:	cmp    eax,ecx
  425ec6:	ja     0x42606f
  425ecc:	mov    DWORD PTR [ebp-0x34],0x0
  425ed3:	push   DWORD PTR [ebp+0x8]
  425ed6:	mov    edi,DWORD PTR [ebp+0x8]
  425ed9:	mov    eax,DWORD PTR [ebp+0x8]
  425edc:	mov    edx,DWORD PTR [eax+0x1b4]
  425ee2:	call   0x42812b
  425ee7:	push   eax
  425ee8:	mov    eax,DWORD PTR [ebp+0x8]
  425eeb:	mov    eax,DWORD PTR [eax+0x1a8]
  425ef1:	push   DWORD PTR [eax]
  425ef3:	call   0x427dcc
  425ef8:	mov    ecx,DWORD PTR [ebp+0x8]
  425efb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425f01:	mov    DWORD PTR [ecx],eax
  425f03:	mov    eax,DWORD PTR [ebp+0x8]
  425f06:	mov    edi,DWORD PTR [eax+0x1e0]
  425f0c:	mov    esi,DWORD PTR [ebp+0x8]
  425f0f:	xor    eax,eax
  425f11:	lea    edx,[ebp-0x7c]
  425f14:	call   0x428161
  425f19:	push   eax
  425f1a:	mov    eax,DWORD PTR [ebp+0x8]
  425f1d:	mov    eax,DWORD PTR [eax+0x19c]
  425f23:	push   DWORD PTR [eax]
  425f25:	call   DWORD PTR [edi+0x8]
  425f28:	mov    DWORD PTR [ebp-0x20],eax
  425f2b:	mov    eax,DWORD PTR [ebp+0x8]
  425f2e:	mov    edi,DWORD PTR [eax+0x1e0]
  425f34:	mov    esi,DWORD PTR [ebp+0x8]
  425f37:	xor    eax,eax
  425f39:	lea    edx,[ebp-0x90]
  425f3f:	call   0x428161
  425f44:	push   eax
  425f45:	mov    eax,DWORD PTR [ebp+0x8]
  425f48:	mov    eax,DWORD PTR [eax+0x19c]
  425f4e:	push   DWORD PTR [eax]
  425f50:	call   DWORD PTR [edi+0x8]
  425f53:	mov    eax,DWORD PTR [ebp+0x8]
  425f56:	mov    edi,DWORD PTR [eax+0x1e0]
  425f5c:	mov    esi,DWORD PTR [ebp+0x8]
  425f5f:	xor    eax,eax
  425f61:	lea    edx,[ebp-0xa8]
  425f67:	call   0x428161
  425f6c:	push   eax
  425f6d:	mov    eax,DWORD PTR [ebp+0x8]
  425f70:	mov    eax,DWORD PTR [eax+0x19c]
  425f76:	push   DWORD PTR [eax]
  425f78:	call   DWORD PTR [edi+0x8]
  425f7b:	and    DWORD PTR [ebp-0x8],0x0
  425f7f:	mov    DWORD PTR [ebp-0x48],eax
  425f82:	mov    eax,DWORD PTR [ebp-0x8]
  425f85:	and    eax,0x7
  425f88:	add    eax,0x31
  425f8b:	push   eax
  425f8c:	call   DWORD PTR [ebp-0x20]
  425f8f:	test   eax,eax
  425f91:	je     0x425fd5
  425f93:	mov    eax,DWORD PTR [ebp-0x8]
  425f96:	push   0x19
  425f98:	xor    edx,edx
  425f9a:	pop    ecx
  425f9b:	div    ecx
  425f9d:	add    dl,0x41
  425fa0:	movzx  eax,dl
  425fa3:	push   eax
  425fa4:	call   DWORD PTR [ebp-0x48]
  425fa7:	test   eax,eax
  425fa9:	jne    0x425fd5
  425fab:	mov    eax,DWORD PTR [ebp+0x8]
  425fae:	mov    edi,DWORD PTR [eax+0x1e0]
  425fb4:	mov    esi,DWORD PTR [ebp+0x8]
  425fb7:	xor    eax,eax
  425fb9:	lea    edx,[ebp-0x68]
  425fbc:	call   0x428161
  425fc1:	push   eax
  425fc2:	mov    eax,DWORD PTR [ebp+0x8]
  425fc5:	mov    eax,DWORD PTR [eax+0x198]
  425fcb:	push   DWORD PTR [eax]
  425fcd:	call   DWORD PTR [edi+0x8]
  425fd0:	mov    DWORD PTR [ebp-0x14],eax
  425fd3:	jmp    0x425fd9
  425fd5:	and    DWORD PTR [ebp-0x14],0x0
  425fd9:	inc    DWORD PTR [ebp-0x8]
  425fdc:	cmp    DWORD PTR [ebp-0x8],0x10
  425fe0:	jb     0x425f82
  425fe2:	mov    eax,DWORD PTR [ebp-0x18]
  425fe5:	mov    esi,DWORD PTR [ebp+0x8]
  425fe8:	xor    eax,ebx
  425fea:	mov    edi,0x3272f1
  425fef:	add    eax,edi
  425ff1:	lea    edx,[ebp-0x10c]
  425ff7:	call   0x428161
  425ffc:	push   eax
  425ffd:	mov    eax,DWORD PTR [ebp-0x10]
  426000:	mov    esi,DWORD PTR [ebp+0x8]
  426003:	xor    eax,ebx
  426005:	add    eax,edi
  426007:	lea    edx,[ebp-0x12c]
  42600d:	call   0x428161
  426012:	push   eax
  426013:	call   DWORD PTR [ebp-0x14]
  426016:	mov    ecx,DWORD PTR [ebp-0x10]
  426019:	xor    ecx,ebx
  42601b:	add    ecx,edi
  42601d:	cmp    ecx,eax
  42601f:	jne    0x426028
  426021:	mov    DWORD PTR [ebp-0x34],0x1
  426028:	mov    eax,DWORD PTR [ebp-0x18]
  42602b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42602e:	xor    eax,ebx
  426030:	lea    eax,[eax+ecx*1+0x3272f1]
  426037:	mov    DWORD PTR [ebp-0x1c],eax
  42603a:	mov    eax,DWORD PTR [ebp-0x34]
  42603d:	test   eax,eax
  42603f:	je     0x426053
  426041:	mov    eax,DWORD PTR [ebp-0x18]
  426044:	mov    ecx,DWORD PTR [ebp-0x38]
  426047:	xor    eax,ebx
  426049:	lea    eax,[eax+ecx*1+0x3272f1]
  426050:	mov    DWORD PTR [ebp-0x38],eax
  426053:	mov    eax,DWORD PTR [ebp-0x18]
  426056:	xor    eax,ebx
  426058:	mov    ecx,0xffcd8d0f
  42605d:	sub    ecx,eax
  42605f:	add    ecx,DWORD PTR [ebp-0x28]
  426062:	mov    eax,DWORD PTR [ebp-0x1c]
  426065:	cmp    eax,ecx
  426067:	jbe    0x425ecc
  42606d:	mov    esi,edi
  42606f:	mov    eax,DWORD PTR [ebp-0x38]
  426072:	mov    ecx,DWORD PTR [ebp-0x1c]
  426075:	cmp    ecx,eax
  426077:	jne    0x42608a
  426079:	push   DWORD PTR [ebp+0x8]
  42607c:	lea    eax,[ebp-0x40]
  42607f:	push   eax
  426080:	call   0x428bce
  426085:	mov    DWORD PTR [ebp-0x24],eax
  426088:	jmp    0x426096
  42608a:	mov    eax,DWORD PTR [ebp-0x24]
  42608d:	mov    ecx,DWORD PTR [ebp-0x18]
  426090:	xor    ecx,ebx
  426092:	add    ecx,esi
  426094:	xor    DWORD PTR [eax],ecx
  426096:	mov    eax,DWORD PTR [ebp-0x10]
  426099:	mov    ecx,DWORD PTR [ebp-0x24]
  42609c:	xor    eax,ebx
  42609e:	add    eax,esi
  4260a0:	cmp    eax,ecx
  4260a2:	je     0x426819
  4260a8:	mov    eax,DWORD PTR [ebp-0x10]
  4260ab:	mov    ecx,DWORD PTR [ebp-0x40]
  4260ae:	xor    eax,ebx
  4260b0:	add    eax,esi
  4260b2:	cmp    eax,ecx
  4260b4:	je     0x426819
  4260ba:	mov    eax,DWORD PTR [ebp-0x10]
  4260bd:	xor    eax,ebx
  4260bf:	add    eax,esi
  4260c1:	jmp    0x4260df
  4260c3:	mov    edi,DWORD PTR [ebp-0x24]
  4260c6:	mov    cl,al
  4260c8:	and    cl,0x1f
  4260cb:	or     dl,0xff
  4260ce:	sub    dl,cl
  4260d0:	add    BYTE PTR [edi+eax*1],dl
  4260d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4260d6:	xor    ecx,ebx
  4260d8:	lea    eax,[eax+ecx*1+0x3272f1]
  4260df:	mov    ecx,DWORD PTR [ebp-0x40]
  4260e2:	cmp    eax,ecx
  4260e4:	jb     0x4260c3
  4260e6:	mov    eax,DWORD PTR [ebp-0x40]
  4260e9:	mov    DWORD PTR [ebp-0x28],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x24]
  4260ef:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4260f6:	mov    DWORD PTR [ebp-0xd4],eax
  4260fc:	mov    edi,0xf89c85ba
  426101:	mov    DWORD PTR [ebp-0x2c],edi
  426104:	mov    eax,DWORD PTR [ebp-0x38]
  426107:	xor    eax,ebx
  426109:	add    eax,esi
  42610b:	mov    DWORD PTR [ebp-0xc],eax
  42610e:	mov    eax,DWORD PTR [ebp-0x38]
  426111:	xor    eax,ebx
  426113:	add    eax,esi
  426115:	mov    DWORD PTR [ebp-0x8],eax
  426118:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42611f:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426126:	mov    eax,DWORD PTR [ebp-0x38]
  426129:	mov    ecx,DWORD PTR [ebp-0x28]
  42612c:	xor    eax,ebx
  42612e:	add    eax,esi
  426130:	cmp    ecx,eax
  426132:	je     0x426331
  426138:	jmp    0x42630d
  42613d:	mov    ecx,DWORD PTR [ebp-0xc]
  426140:	mov    eax,DWORD PTR [ebp-0x28]
  426143:	sub    eax,ecx
  426145:	mov    ecx,DWORD PTR [ebp-0x48]
  426148:	xor    ecx,ebx
  42614a:	add    ecx,esi
  42614c:	xor    edx,edx
  42614e:	div    ecx
  426150:	mov    DWORD PTR [ebp-0x8],eax
  426153:	mov    eax,DWORD PTR [ebp-0x4c]
  426156:	mov    ecx,DWORD PTR [ebp-0x8]
  426159:	xor    eax,ebx
  42615b:	add    eax,esi
  42615d:	cmp    ecx,eax
  42615f:	jbe    0x42616b
  426161:	mov    eax,DWORD PTR [ebp-0x4c]
  426164:	xor    eax,ebx
  426166:	add    eax,esi
  426168:	mov    DWORD PTR [ebp-0x8],eax
  42616b:	mov    eax,DWORD PTR [ebp-0x48]
  42616e:	mov    ecx,DWORD PTR [ebp-0x8]
  426171:	xor    eax,ebx
  426173:	add    eax,esi
  426175:	imul   eax,ecx
  426178:	mov    DWORD PTR [ebp-0x8],eax
  42617b:	mov    eax,DWORD PTR [ebp-0x38]
  42617e:	mov    ecx,DWORD PTR [ebp-0x8]
  426181:	xor    eax,ebx
  426183:	add    eax,esi
  426185:	cmp    ecx,eax
  426187:	je     0x4262fb
  42618d:	mov    eax,DWORD PTR [ebp-0x8]
  426190:	mov    DWORD PTR [ebp-0x14],eax
  426193:	mov    eax,DWORD PTR [ebp-0xc]
  426196:	add    eax,DWORD PTR [ebp-0xd4]
  42619c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4261a3:	mov    DWORD PTR [ebp-0x34],edi
  4261a6:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4261b0:	mov    DWORD PTR [ebp-0x8],eax
  4261b3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  4261ba:	mov    DWORD PTR [ebp-0x1c],edi
  4261bd:	mov    eax,DWORD PTR [ebp-0x20]
  4261c0:	xor    eax,ebx
  4261c2:	add    eax,esi
  4261c4:	jmp    0x4262ba
  4261c9:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  4261d3:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4261dd:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e0:	mov    ecx,DWORD PTR [ebp-0x44]
  4261e3:	xor    eax,ebx
  4261e5:	add    eax,esi
  4261e7:	imul   eax,ecx
  4261ea:	mov    ecx,DWORD PTR [ebp-0x8]
  4261ed:	mov    al,BYTE PTR [eax+ecx*1]
  4261f0:	mov    BYTE PTR [ebp-0x2],al
  4261f3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261f6:	mov    ecx,DWORD PTR [ebp-0x44]
  4261f9:	xor    eax,ebx
  4261fb:	add    eax,esi
  4261fd:	imul   eax,ecx
  426200:	mov    ecx,DWORD PTR [ebp-0xe8]
  426206:	xor    ecx,ebx
  426208:	add    eax,ecx
  42620a:	mov    ecx,DWORD PTR [ebp-0x8]
  42620d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426215:	mov    ecx,DWORD PTR [ebp-0xe0]
  42621b:	xor    ecx,ebx
  42621d:	lea    eax,[ecx+eax*1+0x3272f1]
  426224:	movzx  ecx,BYTE PTR [ebp-0x2]
  426228:	xor    ecx,eax
  42622a:	mov    BYTE PTR [ebp-0x2],cl
  42622d:	mov    al,BYTE PTR [ebp-0x2]
  426230:	mov    ecx,DWORD PTR [ebp-0x1c]
  426233:	mov    edx,DWORD PTR [ebp-0x44]
  426236:	xor    ecx,ebx
  426238:	add    ecx,esi
  42623a:	imul   ecx,edx
  42623d:	mov    edx,DWORD PTR [ebp-0x8]
  426240:	mov    BYTE PTR [ecx+edx*1],al
  426243:	mov    eax,DWORD PTR [ebp-0x1c]
  426246:	mov    ecx,DWORD PTR [ebp-0x44]
  426249:	xor    eax,ebx
  42624b:	add    eax,esi
  42624d:	imul   eax,ecx
  426250:	mov    ecx,DWORD PTR [ebp-0x8]
  426253:	mov    al,BYTE PTR [eax+ecx*1]
  426256:	mov    BYTE PTR [ebp-0x2],al
  426259:	mov    eax,DWORD PTR [ebp-0x1c]
  42625c:	mov    ecx,DWORD PTR [ebp-0x44]
  42625f:	xor    eax,ebx
  426261:	add    eax,esi
  426263:	imul   eax,ecx
  426266:	mov    ecx,DWORD PTR [ebp-0x34]
  426269:	xor    ecx,ebx
  42626b:	add    eax,ecx
  42626d:	mov    ecx,DWORD PTR [ebp-0x8]
  426270:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426278:	mov    ecx,DWORD PTR [ebp-0xc4]
  42627e:	xor    ecx,ebx
  426280:	lea    eax,[ecx+eax*1+0x3272f1]
  426287:	movzx  ecx,BYTE PTR [ebp-0x2]
  42628b:	xor    ecx,eax
  42628d:	mov    BYTE PTR [ebp-0x2],cl
  426290:	mov    al,BYTE PTR [ebp-0x2]
  426293:	mov    ecx,DWORD PTR [ebp-0x1c]
  426296:	mov    edx,DWORD PTR [ebp-0x44]
  426299:	xor    ecx,ebx
  42629b:	add    ecx,esi
  42629d:	imul   ecx,edx
  4262a0:	mov    edx,DWORD PTR [ebp-0x8]
  4262a3:	mov    BYTE PTR [ecx+edx*1],al
  4262a6:	mov    eax,DWORD PTR [ebp-0x30]
  4262a9:	mov    ecx,DWORD PTR [ebp-0x34]
  4262ac:	xor    eax,ebx
  4262ae:	xor    ecx,ebx
  4262b0:	add    eax,esi
  4262b2:	add    ecx,esi
  4262b4:	imul   eax,ecx
  4262b7:	add    eax,DWORD PTR [ebp-0x44]
  4262ba:	mov    DWORD PTR [ebp-0x44],eax
  4262bd:	mov    eax,DWORD PTR [ebp-0x44]
  4262c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262c3:	cmp    ecx,eax
  4262c5:	jb     0x4261c9
  4262cb:	mov    eax,DWORD PTR [ebp-0x34]
  4262ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4262d1:	xor    eax,ebx
  4262d3:	add    eax,esi
  4262d5:	imul   eax,ecx
  4262d8:	mov    ecx,DWORD PTR [ebp-0x20]
  4262db:	xor    ecx,ebx
  4262dd:	add    ecx,esi
  4262df:	or     eax,ecx
  4262e1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262e4:	xor    ecx,ebx
  4262e6:	add    eax,ecx
  4262e8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262eb:	xor    ecx,ebx
  4262ed:	add    eax,ecx
  4262ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4262f2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4262f9:	jmp    0x42630a
  4262fb:	mov    eax,DWORD PTR [ebp-0x2c]
  4262fe:	mov    ecx,DWORD PTR [ebp-0xc]
  426301:	xor    eax,ebx
  426303:	lea    eax,[eax+ecx*1+0x3272f1]
  42630a:	mov    DWORD PTR [ebp-0xc],eax
  42630d:	mov    eax,DWORD PTR [ebp-0x2c]
  426310:	xor    eax,ebx
  426312:	mov    ecx,0xffcd8d0f
  426317:	sub    ecx,eax
  426319:	add    ecx,DWORD PTR [ebp-0x28]
  42631c:	mov    eax,DWORD PTR [ebp-0x2c]
  42631f:	mov    edx,DWORD PTR [ebp-0xc]
  426322:	xor    eax,ebx
  426324:	add    eax,esi
  426326:	imul   eax,edx
  426329:	cmp    eax,ecx
  42632b:	jbe    0x42613d
  426331:	mov    eax,DWORD PTR [ebp-0x10]
  426334:	mov    ecx,DWORD PTR [ebp-0x40]
  426337:	mov    eax,DWORD PTR [ebp+0x8]
  42633a:	mov    edx,DWORD PTR [ebp-0x54]
  42633d:	mov    eax,DWORD PTR [eax+0x1e0]
  426343:	xor    edx,ebx
  426345:	add    edx,esi
  426347:	push   edx
  426348:	mov    edx,DWORD PTR [ebp-0x3c]
  42634b:	xor    edx,ebx
  42634d:	add    edx,esi
  42634f:	push   edx
  426350:	push   ecx
  426351:	mov    DWORD PTR [ebp-0x30],ecx
  426354:	mov    ecx,DWORD PTR [ebp-0x10]
  426357:	xor    ecx,ebx
  426359:	add    ecx,esi
  42635b:	push   ecx
  42635c:	call   DWORD PTR [eax+0x14]
  42635f:	mov    edi,eax
  426361:	mov    eax,DWORD PTR [ebp-0x10]
  426364:	xor    eax,ebx
  426366:	add    eax,esi
  426368:	cmp    eax,edi
  42636a:	je     0x4263c5
  42636c:	mov    eax,DWORD PTR [ebp-0x10]
  42636f:	jmp    0x426392
  426371:	mov    ecx,DWORD PTR [ebp-0x24]
  426374:	xor    eax,ebx
  426376:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42637d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426384:	mov    ecx,DWORD PTR [ebp-0x18]
  426387:	xor    ecx,ebx
  426389:	lea    eax,[ecx+eax*1+0x3272f1]
  426390:	xor    eax,ebx
  426392:	mov    ecx,DWORD PTR [ebp-0x40]
  426395:	sub    ecx,esi
  426397:	xor    ecx,ebx
  426399:	cmp    eax,ecx
  42639b:	jne    0x426371
  42639d:	mov    eax,DWORD PTR [ebp+0x8]
  4263a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4263a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4263a9:	xor    ecx,ebx
  4263ab:	add    ecx,esi
  4263ad:	push   ecx
  4263ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4263b1:	xor    ecx,ebx
  4263b3:	add    ecx,esi
  4263b5:	push   ecx
  4263b6:	push   DWORD PTR [ebp-0x24]
  4263b9:	call   DWORD PTR [eax+0x18]
  4263bc:	mov    eax,DWORD PTR [ebp-0x30]
  4263bf:	mov    DWORD PTR [ebp-0x24],edi
  4263c2:	mov    DWORD PTR [ebp-0x40],eax
  4263c5:	mov    edi,DWORD PTR [ebp-0x24]
  4263c8:	mov    eax,DWORD PTR [ebp-0x18]
  4263cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4263ce:	xor    eax,ebx
  4263d0:	mov    DWORD PTR [ebp-0x30],edi
  4263d3:	add    eax,esi
  4263d5:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  4263dc:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4263e3:	jmp    0x426416
  4263e5:	xor    ecx,ebx
  4263e7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4263ee:	xor    dl,0x7c
  4263f1:	inc    dl
  4263f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4263f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4263fe:	movzx  edx,dl
  426401:	cmp    ecx,edx
  426403:	jne    0x426420
  426405:	mov    ecx,DWORD PTR [ebp-0x18]
  426408:	mov    edx,DWORD PTR [ebp-0x3c]
  42640b:	xor    ecx,ebx
  42640d:	lea    ecx,[ecx+edx*1+0x3272f1]
  426414:	xor    ecx,ebx
  426416:	cmp    ecx,0xf89c85bd
  42641c:	jne    0x4263e5
  42641e:	jmp    0x426427
  426420:	mov    eax,DWORD PTR [ebp-0x10]
  426423:	xor    eax,ebx
  426425:	add    eax,esi
  426427:	mov    ecx,DWORD PTR [ebp-0x10]
  42642a:	xor    ecx,ebx
  42642c:	add    ecx,esi
  42642e:	cmp    ecx,eax
  426430:	je     0x4265a3
  426436:	mov    eax,DWORD PTR [edi+0x8]
  426439:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426440:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426447:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42644e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426455:	mov    DWORD PTR [ebp-0x14],eax
  426458:	mov    eax,DWORD PTR [ebp+0x8]
  42645b:	mov    ecx,DWORD PTR [ebp-0x20]
  42645e:	xor    ecx,ebx
  426460:	add    ecx,esi
  426462:	push   ecx
  426463:	mov    ecx,DWORD PTR [ebp-0x48]
  426466:	mov    eax,DWORD PTR [eax+0x1e0]
  42646c:	xor    ecx,ebx
  42646e:	add    ecx,esi
  426470:	push   ecx
  426471:	mov    ecx,DWORD PTR [ebp-0x3c]
  426474:	xor    ecx,ebx
  426476:	add    ecx,esi
  426478:	push   ecx
  426479:	mov    ecx,DWORD PTR [ebp-0xc]
  42647c:	xor    ecx,ebx
  42647e:	add    ecx,esi
  426480:	push   ecx
  426481:	call   DWORD PTR [eax+0x14]
  426484:	mov    edi,eax
  426486:	mov    eax,DWORD PTR [ebp+0x8]
  426489:	mov    ecx,DWORD PTR [ebp-0x20]
  42648c:	mov    eax,DWORD PTR [eax+0x1e0]
  426492:	xor    ecx,ebx
  426494:	add    ecx,esi
  426496:	push   ecx
  426497:	mov    ecx,DWORD PTR [ebp-0x48]
  42649a:	xor    ecx,ebx
  42649c:	add    ecx,esi
  42649e:	push   ecx
  42649f:	mov    ecx,DWORD PTR [ebp-0xc]
  4264a2:	push   DWORD PTR [ebp-0x14]
  4264a5:	xor    ecx,ebx
  4264a7:	add    ecx,esi
  4264a9:	push   ecx
  4264aa:	call   DWORD PTR [eax+0x14]
  4264ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4264b0:	xor    ecx,ebx
  4264b2:	add    ecx,esi
  4264b4:	mov    DWORD PTR [ebp-0x20],eax
  4264b7:	cmp    ecx,edi
  4264b9:	je     0x426846
  4264bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4264c2:	xor    ecx,ebx
  4264c4:	add    ecx,esi
  4264c6:	cmp    ecx,eax
  4264c8:	je     0x426846
  4264ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  4264d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4264dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4264df:	xor    cl,0xaa
  4264e2:	sub    cl,0xf
  4264e5:	mov    BYTE PTR [edi],cl
  4264e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264ea:	xor    cl,0xaa
  4264ed:	sub    cl,0xf
  4264f0:	mov    BYTE PTR [edi+0x1],cl
  4264f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4264f6:	xor    cl,0xaa
  4264f9:	sub    cl,0xf
  4264fc:	mov    BYTE PTR [edi+0x2],cl
  4264ff:	and    DWORD PTR [ebp-0xc8],0x0
  426506:	and    DWORD PTR [ebp-0xdc],0x0
  42650d:	lea    ecx,[ebp-0xdc]
  426513:	push   ecx
  426514:	push   DWORD PTR [ebp-0x14]
  426517:	push   eax
  426518:	lea    eax,[ebp-0xc8]
  42651e:	push   eax
  42651f:	mov    eax,DWORD PTR [ebp-0x30]
  426522:	push   DWORD PTR [eax+0xc]
  426525:	mov    eax,DWORD PTR [ebp-0x24]
  426528:	add    eax,0x10
  42652b:	push   eax
  42652c:	push   edi
  42652d:	call   0x4257d4
  426532:	mov    DWORD PTR [ebp-0x3c],eax
  426535:	mov    eax,DWORD PTR [ebp+0x8]
  426538:	mov    ecx,DWORD PTR [ebp-0x50]
  42653b:	mov    eax,DWORD PTR [eax+0x1e0]
  426541:	xor    ecx,ebx
  426543:	add    ecx,esi
  426545:	push   ecx
  426546:	mov    ecx,DWORD PTR [ebp-0xc]
  426549:	xor    ecx,ebx
  42654b:	add    ecx,esi
  42654d:	push   ecx
  42654e:	push   edi
  42654f:	call   DWORD PTR [eax+0x18]
  426552:	mov    eax,DWORD PTR [ebp-0x3c]
  426555:	add    eax,0xffcd8d0f
  42655a:	xor    eax,ebx
  42655c:	cmp    eax,0xf89c85a5
  426561:	mov    eax,DWORD PTR [ebp+0x8]
  426564:	mov    eax,DWORD PTR [eax+0x1e0]
  42656a:	mov    ecx,DWORD PTR [ebp-0x50]
  42656d:	jne    0x426590
  42656f:	xor    ecx,ebx
  426571:	add    ecx,esi
  426573:	push   ecx
  426574:	mov    ecx,DWORD PTR [ebp-0xc]
  426577:	xor    ecx,ebx
  426579:	add    ecx,esi
  42657b:	push   ecx
  42657c:	push   DWORD PTR [ebp-0x24]
  42657f:	call   DWORD PTR [eax+0x18]
  426582:	mov    eax,DWORD PTR [ebp-0x20]
  426585:	mov    DWORD PTR [ebp-0x24],eax
  426588:	mov    eax,DWORD PTR [ebp-0x14]
  42658b:	mov    DWORD PTR [ebp-0x40],eax
  42658e:	jmp    0x4265a3
  426590:	xor    ecx,ebx
  426592:	add    ecx,esi
  426594:	push   ecx
  426595:	mov    ecx,DWORD PTR [ebp-0xc]
  426598:	xor    ecx,ebx
  42659a:	add    ecx,esi
  42659c:	push   ecx
  42659d:	push   DWORD PTR [ebp-0x20]
  4265a0:	call   DWORD PTR [eax+0x18]
  4265a3:	mov    eax,DWORD PTR [ebp-0x40]
  4265a6:	mov    DWORD PTR [ebp-0x38],eax
  4265a9:	mov    eax,DWORD PTR [ebp-0x24]
  4265ac:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  4265b3:	mov    DWORD PTR [ebp-0x3c],eax
  4265b6:	mov    edi,0xf89c85ba
  4265bb:	mov    DWORD PTR [ebp-0x2c],edi
  4265be:	mov    eax,DWORD PTR [ebp-0x28]
  4265c1:	xor    eax,ebx
  4265c3:	add    eax,esi
  4265c5:	mov    DWORD PTR [ebp-0xc],eax
  4265c8:	mov    eax,DWORD PTR [ebp-0x28]
  4265cb:	xor    eax,ebx
  4265cd:	add    eax,esi
  4265cf:	mov    DWORD PTR [ebp-0x14],eax
  4265d2:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4265d9:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4265e0:	mov    eax,DWORD PTR [ebp-0x28]
  4265e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4265e6:	xor    eax,ebx
  4265e8:	add    eax,esi
  4265ea:	cmp    ecx,eax
  4265ec:	je     0x4267e2
  4265f2:	jmp    0x4267be
  4265f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4265fa:	mov    eax,DWORD PTR [ebp-0x38]
  4265fd:	sub    eax,ecx
  4265ff:	mov    ecx,DWORD PTR [ebp-0x48]
  426602:	xor    ecx,ebx
  426604:	add    ecx,esi
  426606:	xor    edx,edx
  426608:	div    ecx
  42660a:	mov    DWORD PTR [ebp-0x14],eax
  42660d:	mov    eax,DWORD PTR [ebp-0x20]
  426610:	mov    ecx,DWORD PTR [ebp-0x14]
  426613:	xor    eax,ebx
  426615:	add    eax,esi
  426617:	cmp    ecx,eax
  426619:	jbe    0x426625
  42661b:	mov    eax,DWORD PTR [ebp-0x20]
  42661e:	xor    eax,ebx
  426620:	add    eax,esi
  426622:	mov    DWORD PTR [ebp-0x14],eax
  426625:	mov    eax,DWORD PTR [ebp-0x48]
  426628:	mov    ecx,DWORD PTR [ebp-0x14]
  42662b:	xor    eax,ebx
  42662d:	add    eax,esi
  42662f:	imul   eax,ecx
  426632:	mov    DWORD PTR [ebp-0x14],eax
  426635:	mov    eax,DWORD PTR [ebp-0x28]
  426638:	mov    ecx,DWORD PTR [ebp-0x14]
  42663b:	xor    eax,ebx
  42663d:	add    eax,esi
  42663f:	cmp    ecx,eax
  426641:	je     0x4267ac
  426647:	mov    eax,DWORD PTR [ebp-0x14]
  42664a:	mov    DWORD PTR [ebp-0x34],eax
  42664d:	mov    eax,DWORD PTR [ebp-0xc]
  426650:	add    eax,DWORD PTR [ebp-0x3c]
  426653:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42665a:	mov    DWORD PTR [ebp-0x14],edi
  42665d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426664:	mov    DWORD PTR [ebp-0x1c],eax
  426667:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42666e:	mov    DWORD PTR [ebp-0x8],edi
  426671:	mov    eax,DWORD PTR [ebp-0x4c]
  426674:	xor    eax,ebx
  426676:	add    eax,esi
  426678:	jmp    0x42676b
  42667d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426687:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426691:	mov    eax,DWORD PTR [ebp-0x8]
  426694:	mov    ecx,DWORD PTR [ebp-0x18]
  426697:	xor    eax,ebx
  426699:	add    eax,esi
  42669b:	imul   eax,ecx
  42669e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266a1:	mov    al,BYTE PTR [eax+ecx*1]
  4266a4:	mov    BYTE PTR [ebp-0x1],al
  4266a7:	mov    eax,DWORD PTR [ebp-0x8]
  4266aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ad:	xor    eax,ebx
  4266af:	add    eax,esi
  4266b1:	imul   eax,ecx
  4266b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4266b7:	xor    ecx,ebx
  4266b9:	add    eax,ecx
  4266bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4266c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4266cc:	xor    ecx,ebx
  4266ce:	lea    eax,[ecx+eax*1+0x3272f1]
  4266d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4266d9:	xor    ecx,eax
  4266db:	mov    BYTE PTR [ebp-0x1],cl
  4266de:	mov    al,BYTE PTR [ebp-0x1]
  4266e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4266e4:	mov    edx,DWORD PTR [ebp-0x18]
  4266e7:	xor    ecx,ebx
  4266e9:	add    ecx,esi
  4266eb:	imul   ecx,edx
  4266ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4266f1:	mov    BYTE PTR [ecx+edx*1],al
  4266f4:	mov    eax,DWORD PTR [ebp-0x8]
  4266f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4266fa:	xor    eax,ebx
  4266fc:	add    eax,esi
  4266fe:	imul   eax,ecx
  426701:	mov    ecx,DWORD PTR [ebp-0x1c]
  426704:	mov    al,BYTE PTR [eax+ecx*1]
  426707:	mov    BYTE PTR [ebp-0x1],al
  42670a:	mov    eax,DWORD PTR [ebp-0x8]
  42670d:	mov    ecx,DWORD PTR [ebp-0x18]
  426710:	xor    eax,ebx
  426712:	add    eax,esi
  426714:	imul   eax,ecx
  426717:	mov    ecx,DWORD PTR [ebp-0x14]
  42671a:	xor    ecx,ebx
  42671c:	add    eax,ecx
  42671e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426721:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426729:	mov    ecx,DWORD PTR [ebp-0xd0]
  42672f:	xor    ecx,ebx
  426731:	lea    eax,[ecx+eax*1+0x3272f1]
  426738:	movzx  ecx,BYTE PTR [ebp-0x1]
  42673c:	xor    ecx,eax
  42673e:	mov    BYTE PTR [ebp-0x1],cl
  426741:	mov    al,BYTE PTR [ebp-0x1]
  426744:	mov    ecx,DWORD PTR [ebp-0x8]
  426747:	mov    edx,DWORD PTR [ebp-0x18]
  42674a:	xor    ecx,ebx
  42674c:	add    ecx,esi
  42674e:	imul   ecx,edx
  426751:	mov    edx,DWORD PTR [ebp-0x1c]
  426754:	mov    BYTE PTR [ecx+edx*1],al
  426757:	mov    eax,DWORD PTR [ebp-0x30]
  42675a:	mov    ecx,DWORD PTR [ebp-0x14]
  42675d:	xor    eax,ebx
  42675f:	xor    ecx,ebx
  426761:	add    eax,esi
  426763:	add    ecx,esi
  426765:	imul   eax,ecx
  426768:	add    eax,DWORD PTR [ebp-0x18]
  42676b:	mov    DWORD PTR [ebp-0x18],eax
  42676e:	mov    eax,DWORD PTR [ebp-0x18]
  426771:	mov    ecx,DWORD PTR [ebp-0x34]
  426774:	cmp    ecx,eax
  426776:	jb     0x42667d
  42677c:	mov    eax,DWORD PTR [ebp-0x14]
  42677f:	mov    ecx,DWORD PTR [ebp-0x34]
  426782:	xor    eax,ebx
  426784:	add    eax,esi
  426786:	imul   eax,ecx
  426789:	mov    ecx,DWORD PTR [ebp-0x4c]
  42678c:	xor    ecx,ebx
  42678e:	add    ecx,esi
  426790:	or     eax,ecx
  426792:	mov    ecx,DWORD PTR [ebp-0x2c]
  426795:	xor    ecx,ebx
  426797:	add    eax,ecx
  426799:	mov    ecx,DWORD PTR [ebp-0x2c]
  42679c:	xor    ecx,ebx
  42679e:	add    eax,ecx
  4267a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4267a3:	lea    eax,[eax+ecx*1+0x64e5e2]
  4267aa:	jmp    0x4267bb
  4267ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4267af:	mov    ecx,DWORD PTR [ebp-0xc]
  4267b2:	xor    eax,ebx
  4267b4:	lea    eax,[eax+ecx*1+0x3272f1]
  4267bb:	mov    DWORD PTR [ebp-0xc],eax
  4267be:	mov    eax,DWORD PTR [ebp-0x2c]
  4267c1:	xor    eax,ebx
  4267c3:	mov    ecx,0xffcd8d0f
  4267c8:	sub    ecx,eax
  4267ca:	add    ecx,DWORD PTR [ebp-0x38]
  4267cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4267d0:	mov    edx,DWORD PTR [ebp-0xc]
  4267d3:	xor    eax,ebx
  4267d5:	add    eax,esi
  4267d7:	imul   eax,edx
  4267da:	cmp    eax,ecx
  4267dc:	jbe    0x4265f7
  4267e2:	push   DWORD PTR [ebp+0x8]
  4267e5:	mov    eax,DWORD PTR [ebp+0x8]
  4267e8:	push   DWORD PTR [eax+0x1cc]
  4267ee:	lea    eax,[ebp-0xd8]
  4267f4:	push   eax
  4267f5:	mov    eax,DWORD PTR [ebp+0x8]
  4267f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4267fe:	push   DWORD PTR [eax]
  426800:	mov    eax,DWORD PTR [ebp+0x8]
  426803:	mov    eax,DWORD PTR [eax+0x1c0]
  426809:	push   DWORD PTR [eax]
  42680b:	push   DWORD PTR [ebp-0x40]
  42680e:	push   DWORD PTR [ebp-0x24]
  426811:	call   0x4272a8
  426816:	mov    DWORD PTR [ebp-0x3c],eax
  426819:	mov    eax,DWORD PTR [ebp-0x10]
  42681c:	mov    ecx,DWORD PTR [ebp-0x24]
  42681f:	xor    eax,ebx
  426821:	add    eax,esi
  426823:	cmp    eax,ecx
  426825:	je     0x426846
  426827:	mov    eax,DWORD PTR [ebp+0x8]
  42682a:	mov    ecx,DWORD PTR [ebp-0x50]
  42682d:	mov    eax,DWORD PTR [eax+0x1e0]
  426833:	xor    ecx,ebx
  426835:	add    ecx,esi
  426837:	push   ecx
  426838:	mov    ecx,DWORD PTR [ebp-0x10]
  42683b:	xor    ecx,ebx
  42683d:	add    ecx,esi
  42683f:	push   ecx
  426840:	push   DWORD PTR [ebp-0x24]
  426843:	call   DWORD PTR [eax+0x18]
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	leave  
  42684a:	ret    0x4
  42684d:	push   ebp
  42684e:	mov    ebp,esp
  426850:	push   ecx
  426851:	push   ecx
  426852:	lea    eax,[ebp-0x8]
  426855:	mov    DWORD PTR [ebp-0x4],eax
  426858:	push   esi
  426859:	mov    esi,DWORD PTR [ebp-0x4]
  42685c:	mov    eax,0xf881ba2f
  426861:	mov    DWORD PTR [esi],eax
  426863:	mov    esi,DWORD PTR [ebp-0x8]
  426866:	cmp    esi,eax
  426868:	pop    esi
  426869:	jne    0x426873
  42686b:	mov    BYTE PTR [ecx+0xa],0x83
  42686f:	mov    BYTE PTR [edx+0x8],0x2e
  426873:	mov    BYTE PTR [edx+0xa],0x83
  426877:	mov    BYTE PTR [ecx+0x2],0x11
  42687b:	leave  
  42687c:	ret    
  42687d:	push   ebp
  42687e:	mov    ebp,esp
  426880:	push   ecx
  426881:	push   ecx
  426882:	lea    eax,[ebp-0x8]
  426885:	mov    DWORD PTR [ebp-0x4],eax
  426888:	mov    edx,DWORD PTR [ebp-0x4]
  42688b:	mov    eax,0xf88b0bc3
  426890:	mov    DWORD PTR [edx],eax
  426892:	mov    edx,DWORD PTR [ebp-0x8]
  426895:	cmp    edx,eax
  426897:	jne    0x4268a8
  426899:	mov    eax,DWORD PTR [ebp+0x8]
  42689c:	mov    BYTE PTR [ecx+0x9],0xf
  4268a0:	mov    BYTE PTR [eax+0x7],0x56
  4268a4:	mov    BYTE PTR [ecx+0x6],0xe
  4268a8:	mov    BYTE PTR [ecx+0x3],0x1f
  4268ac:	leave  
  4268ad:	ret    0x4
  4268b0:	push   ebp
  4268b1:	mov    ebp,esp
  4268b3:	push   ecx
  4268b4:	push   ecx
  4268b5:	lea    eax,[ebp-0x8]
  4268b8:	mov    DWORD PTR [ebp-0x4],eax
  4268bb:	mov    edx,DWORD PTR [ebp-0x4]
  4268be:	mov    eax,0x7e0da2f
  4268c3:	mov    DWORD PTR [edx],eax
  4268c5:	mov    edx,DWORD PTR [ebp-0x8]
  4268c8:	cmp    edx,eax
  4268ca:	jne    0x4268d0
  4268cc:	mov    BYTE PTR [ecx+0x7],0x56
  4268d0:	mov    eax,DWORD PTR [ebp+0x8]
  4268d3:	mov    BYTE PTR [ecx+0x1],0x14
  4268d7:	mov    BYTE PTR [eax+0x9],0x2f
  4268db:	leave  
  4268dc:	ret    0x4
  4268df:	push   ebp
  4268e0:	mov    ebp,esp
  4268e2:	push   ecx
  4268e3:	push   ecx
  4268e4:	lea    eax,[ebp-0x8]
  4268e7:	mov    DWORD PTR [ebp-0x4],eax
  4268ea:	push   esi
  4268eb:	mov    esi,DWORD PTR [ebp-0x4]
  4268ee:	mov    eax,0x7060e3c
  4268f3:	mov    DWORD PTR [esi],eax
  4268f5:	mov    esi,DWORD PTR [ebp-0x8]
  4268f8:	cmp    esi,eax
  4268fa:	pop    esi
  4268fb:	jne    0x426907
  4268fd:	mov    BYTE PTR [edx+0x4],0x12
  426901:	mov    WORD PTR [ecx+0x3],0x121f
  426907:	mov    BYTE PTR [edx],0x3e
  42690a:	leave  
  42690b:	ret    
  42690c:	push   ebp
  42690d:	mov    ebp,esp
  42690f:	push   ecx
  426910:	push   ecx
  426911:	lea    eax,[ebp-0x8]
  426914:	mov    DWORD PTR [ebp-0x4],eax
  426917:	mov    edx,DWORD PTR [ebp-0x4]
  42691a:	mov    eax,0xf8870b3f
  42691f:	mov    DWORD PTR [edx],eax
  426921:	mov    edx,DWORD PTR [ebp-0x8]
  426924:	cmp    edx,eax
  426926:	jne    0x426933
  426928:	mov    eax,DWORD PTR [ebp+0x8]
  42692b:	mov    BYTE PTR [ecx+0x8],0xe
  42692f:	mov    BYTE PTR [eax+0x1],0x14
  426933:	mov    BYTE PTR [ecx+0x5],0xa
  426937:	leave  
  426938:	ret    0x4
  42693b:	push   esi
  42693c:	mov    ecx,edi
  42693e:	call   0x42690c
  426943:	mov    edx,edi
  426945:	mov    ecx,esi
  426947:	mov    BYTE PTR [esi],0x1e
  42694a:	call   0x4268df
  42694f:	push   esi
  426950:	mov    ecx,edi
  426952:	mov    BYTE PTR [esi+0x5],0xa
  426956:	call   0x4268b0
  42695b:	push   esi
  42695c:	mov    BYTE PTR [esi+0x6],0xe
  426960:	call   0x42687d
  426965:	mov    BYTE PTR [esi+0x2],0x11
  426969:	mov    edx,esi
  42696b:	jmp    0x42684d
  426970:	push   ebp
  426971:	mov    ebp,esp
  426973:	push   ecx
  426974:	mov    ecx,DWORD PTR [edx+0x194]
  42697a:	push   esi
  42697b:	mov    esi,DWORD PTR [ebp+0x8]
  42697e:	mov    esi,DWORD PTR [esi]
  426980:	mov    DWORD PTR [ecx],esi
  426982:	mov    ecx,DWORD PTR [edx+0x194]
  426988:	mov    ecx,DWORD PTR [ecx]
  42698a:	mov    esi,DWORD PTR [edx+0x190]
  426990:	mov    DWORD PTR [esi],ecx
  426992:	mov    eax,DWORD PTR [edx+0x194]
  426998:	mov    ecx,DWORD PTR [eax]
  42699a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42699d:	add    ecx,DWORD PTR [eax]
  42699f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  4269a6:	mov    eax,DWORD PTR [ebp-0x4]
  4269a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4269ad:	xor    eax,0x75108aa
  4269b2:	add    eax,0x3272f1
  4269b7:	pop    esi
  4269b8:	test   ecx,eax
  4269ba:	je     0x4269c8
  4269bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4269c2:	mov    DWORD PTR [eax],0xf89c85ba
  4269c8:	leave  
  4269c9:	ret    0x4
  4269cc:	push   ebp
  4269cd:	mov    ebp,esp
  4269cf:	sub    esp,0x70
  4269d2:	and    DWORD PTR [ebp-0x20],0x0
  4269d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  4269dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  4269e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4269eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4269f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4269f9:	mov    eax,DWORD PTR [ebp+0x20]
  4269fc:	mov    eax,DWORD PTR [eax+0x194]
  426a02:	mov    DWORD PTR [ebp-0xc],eax
  426a05:	mov    eax,DWORD PTR [ebp+0x20]
  426a08:	push   ebx
  426a09:	push   esi
  426a0a:	mov    esi,DWORD PTR [eax+0x190]
  426a10:	mov    eax,DWORD PTR [ebp+0x20]
  426a13:	mov    eax,DWORD PTR [eax+0x18c]
  426a19:	mov    DWORD PTR [ebp-0x8],eax
  426a1c:	mov    eax,DWORD PTR [eax]
  426a1e:	push   edi
  426a1f:	mov    DWORD PTR [ebp-0x4],esi
  426a22:	test   eax,eax
  426a24:	jne    0x426a31
  426a26:	push   DWORD PTR [ebp+0x1c]
  426a29:	mov    edx,DWORD PTR [ebp+0x20]
  426a2c:	call   0x426970
  426a31:	mov    eax,DWORD PTR [esi]
  426a33:	mov    ebx,DWORD PTR [esi]
  426a35:	add    ebx,DWORD PTR [eax+0x3c]
  426a38:	mov    eax,DWORD PTR [ebp+0xc]
  426a3b:	mov    ecx,DWORD PTR [ebp-0x8]
  426a3e:	mov    ecx,DWORD PTR [ecx]
  426a40:	mov    esi,0x75108aa
  426a45:	xor    eax,esi
  426a47:	mov    edi,0x3272f1
  426a4c:	add    eax,edi
  426a4e:	cmp    eax,ecx
  426a50:	jne    0x426c88
  426a56:	mov    eax,DWORD PTR [ebp-0xc]
  426a59:	mov    eax,DWORD PTR [eax]
  426a5b:	mov    DWORD PTR [ebp-0x10],eax
  426a5e:	mov    eax,DWORD PTR [ebx+0x50]
  426a61:	mov    DWORD PTR [ebp-0x68],eax
  426a64:	mov    eax,DWORD PTR [ebp-0x18]
  426a67:	xor    eax,esi
  426a69:	add    eax,edi
  426a6b:	mov    DWORD PTR [ebp-0x64],eax
  426a6e:	mov    eax,DWORD PTR [ebp-0x14]
  426a71:	and    DWORD PTR [ebp-0x6c],0x0
  426a75:	xor    eax,esi
  426a77:	add    eax,edi
  426a79:	mov    DWORD PTR [ebp-0x60],eax
  426a7c:	lea    eax,[ebp-0x70]
  426a7f:	push   eax
  426a80:	mov    eax,DWORD PTR [ebp+0x8]
  426a83:	xor    eax,esi
  426a85:	add    eax,edi
  426a87:	push   eax
  426a88:	mov    eax,DWORD PTR [ebp+0x20]
  426a8b:	add    eax,0xaa
  426a90:	push   eax
  426a91:	mov    eax,DWORD PTR [ebp+0x20]
  426a94:	mov    eax,DWORD PTR [eax+0x198]
  426a9a:	mov    DWORD PTR [ebp-0x70],0x4
  426aa1:	push   DWORD PTR [eax]
  426aa3:	mov    eax,DWORD PTR [ebp+0x10]
  426aa6:	call   eax
  426aa8:	mov    ecx,DWORD PTR [ebp-0xc]
  426aab:	mov    ecx,DWORD PTR [ecx]
  426aad:	mov    edx,DWORD PTR [ebp-0x8]
  426ab0:	mov    DWORD PTR [ebp-0x6c],eax
  426ab3:	mov    DWORD PTR [ebp+0x1c],eax
  426ab6:	mov    DWORD PTR [edx],ecx
  426ab8:	mov    ecx,DWORD PTR [ebp-0x4]
  426abb:	mov    DWORD PTR [ecx],eax
  426abd:	mov    eax,DWORD PTR [ebx+0x50]
  426ac0:	mov    DWORD PTR [ebp-0x68],eax
  426ac3:	mov    eax,DWORD PTR [ebp-0x1c]
  426ac6:	xor    eax,esi
  426ac8:	add    eax,edi
  426aca:	mov    DWORD PTR [ebp-0x64],eax
  426acd:	lea    eax,[ebp-0x20]
  426ad0:	mov    DWORD PTR [ebp-0x60],eax
  426ad3:	lea    eax,[ebp-0x70]
  426ad6:	push   eax
  426ad7:	mov    eax,DWORD PTR [ebp+0x8]
  426ada:	xor    eax,esi
  426adc:	add    eax,edi
  426ade:	push   eax
  426adf:	mov    eax,DWORD PTR [ebp+0x20]
  426ae2:	add    eax,0xee
  426ae7:	push   eax
  426ae8:	mov    eax,DWORD PTR [ebp+0x20]
  426aeb:	mov    eax,DWORD PTR [eax+0x198]
  426af1:	mov    DWORD PTR [ebp-0x70],0x4
  426af8:	push   DWORD PTR [eax]
  426afa:	mov    eax,DWORD PTR [ebp+0x10]
  426afd:	call   eax
  426aff:	test   eax,eax
  426b01:	je     0x426b26
  426b03:	and    DWORD PTR [ebp+0xc],0x0
  426b07:	cmp    DWORD PTR [ebx+0x50],0x0
  426b0b:	jbe    0x426b26
  426b0d:	mov    eax,DWORD PTR [ebp+0x1c]
  426b10:	mov    ecx,DWORD PTR [ebp-0x10]
  426b13:	sub    ecx,eax
  426b15:	mov    dl,BYTE PTR [ecx+eax*1]
  426b18:	inc    DWORD PTR [ebp+0xc]
  426b1b:	mov    BYTE PTR [eax],dl
  426b1d:	mov    edx,DWORD PTR [ebp+0xc]
  426b20:	inc    eax
  426b21:	cmp    edx,DWORD PTR [ebx+0x50]
  426b24:	jb     0x426b15
  426b26:	mov    edx,DWORD PTR [ebp+0x1c]
  426b29:	mov    ecx,DWORD PTR [edx+0x3c]
  426b2c:	add    ecx,edx
  426b2e:	mov    eax,DWORD PTR [ecx+0xa0]
  426b34:	mov    ebx,DWORD PTR [ecx+0x28]
  426b37:	add    eax,edx
  426b39:	sub    edx,DWORD PTR [ebp-0x10]
  426b3c:	add    ebx,DWORD PTR [ebp+0x1c]
  426b3f:	mov    DWORD PTR [ebp+0xc],edx
  426b42:	mov    DWORD PTR [ebp-0x2c],ecx
  426b45:	mov    DWORD PTR [ebp-0x14],ebx
  426b48:	mov    DWORD PTR [ebp-0x8],0x0
  426b4f:	jmp    0x426bcb
  426b51:	add    edx,0xfffffff8
  426b54:	shr    edx,1
  426b56:	mov    DWORD PTR [ebp-0x18],edx
  426b59:	je     0x426bb7
  426b5b:	lea    edx,[eax+0x8]
  426b5e:	mov    DWORD PTR [ebp-0x4],edx
  426b61:	mov    edx,DWORD PTR [ebp-0x18]
  426b64:	mov    DWORD PTR [ebp-0x18],edx
  426b67:	mov    edx,DWORD PTR [ebp-0x4]
  426b6a:	movzx  edx,WORD PTR [edx]
  426b6d:	mov    DWORD PTR [ebp-0x24],edx
  426b70:	and    edx,0xfff
  426b76:	mov    DWORD PTR [ebp-0x28],edx
  426b79:	mov    edx,DWORD PTR [ebp-0x24]
  426b7c:	shr    edx,0xc
  426b7f:	add    edx,0xffcd8d0f
  426b85:	xor    edx,esi
  426b87:	cmp    edx,0xf89c85b8
  426b8d:	jne    0x426bae
  426b8f:	mov    edx,DWORD PTR [ebp-0x28]
  426b92:	add    edx,DWORD PTR [ebp+0x1c]
  426b95:	mov    ebx,DWORD PTR [eax]
  426b97:	cmp    DWORD PTR [ebx+edx*1],0x0
  426b9b:	je     0x426bab
  426b9d:	mov    ecx,DWORD PTR [ebp+0xc]
  426ba0:	add    ecx,DWORD PTR [ebx+edx*1]
  426ba3:	mov    ebx,DWORD PTR [eax]
  426ba5:	mov    DWORD PTR [edx+ebx*1],ecx
  426ba8:	mov    ecx,DWORD PTR [ebp-0x2c]
  426bab:	mov    ebx,DWORD PTR [ebp-0x14]
  426bae:	add    DWORD PTR [ebp-0x4],0x2
  426bb2:	dec    DWORD PTR [ebp-0x18]
  426bb5:	jne    0x426b67
  426bb7:	mov    edx,DWORD PTR [ebp-0xc]
  426bba:	add    DWORD PTR [ebp-0x8],edx
  426bbd:	mov    edx,DWORD PTR [ebp-0x8]
  426bc0:	cmp    edx,DWORD PTR [ecx+0xa4]
  426bc6:	jae    0x426bd9
  426bc8:	add    eax,DWORD PTR [ebp-0xc]
  426bcb:	mov    edx,DWORD PTR [eax+0x4]
  426bce:	mov    DWORD PTR [ebp-0xc],edx
  426bd1:	test   edx,edx
  426bd3:	jne    0x426b51
  426bd9:	mov    eax,DWORD PTR [ebp-0x10]
  426bdc:	mov    DWORD PTR [ebp-0x6c],eax
  426bdf:	mov    DWORD PTR [ebp-0x70],0x4
  426be6:	mov    eax,DWORD PTR [ecx+0x50]
  426be9:	mov    DWORD PTR [ebp-0x68],eax
  426bec:	mov    eax,DWORD PTR [ebp-0x1c]
  426bef:	xor    eax,esi
  426bf1:	add    eax,edi
  426bf3:	mov    DWORD PTR [ebp-0x64],eax
  426bf6:	lea    eax,[ebp-0x20]
  426bf9:	mov    DWORD PTR [ebp-0x60],eax
  426bfc:	lea    eax,[ebp-0x70]
  426bff:	push   eax
  426c00:	mov    eax,DWORD PTR [ebp+0x8]
  426c03:	xor    eax,esi
  426c05:	add    eax,edi
  426c07:	push   eax
  426c08:	mov    eax,DWORD PTR [ebp+0x20]
  426c0b:	add    eax,0xee
  426c10:	push   eax
  426c11:	mov    eax,DWORD PTR [ebp+0x20]
  426c14:	mov    eax,DWORD PTR [eax+0x198]
  426c1a:	push   DWORD PTR [eax]
  426c1c:	mov    eax,DWORD PTR [ebp+0x10]
  426c1f:	call   eax
  426c21:	mov    eax,DWORD PTR [ebp+0x20]
  426c24:	mov    eax,DWORD PTR [eax+0x180]
  426c2a:	add    eax,DWORD PTR [ebp+0xc]
  426c2d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c30:	push   DWORD PTR [ebp+0x18]
  426c33:	mov    DWORD PTR [eax],ecx
  426c35:	push   DWORD PTR [ebp+0x14]
  426c38:	push   DWORD PTR [ebp+0x1c]
  426c3b:	call   ebx
  426c3d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c40:	add    ecx,DWORD PTR [ebp+0x20]
  426c43:	lea    eax,[ebp+0x4]
  426c46:	mov    DWORD PTR [ebp+0x20],ecx
  426c49:	mov    ecx,DWORD PTR [ebp+0x20]
  426c4c:	mov    ecx,DWORD PTR [ebp+0x20]
  426c4f:	mov    edx,DWORD PTR [ecx+0x190]
  426c55:	mov    ecx,DWORD PTR [ebp+0x20]
  426c58:	mov    ecx,DWORD PTR [ecx+0x18c]
  426c5e:	mov    esi,DWORD PTR [ecx]
  426c60:	cmp    DWORD PTR [eax],esi
  426c62:	jb     0x426c83
  426c64:	mov    esi,DWORD PTR [edx]
  426c66:	mov    edi,DWORD PTR [edx]
  426c68:	mov    esi,DWORD PTR [esi+0x3c]
  426c6b:	lea    esi,[edi+esi*1+0x50]
  426c6f:	mov    edi,DWORD PTR [ecx]
  426c71:	add    edi,DWORD PTR [esi]
  426c73:	cmp    DWORD PTR [eax],edi
  426c75:	jae    0x426c83
  426c77:	mov    esi,DWORD PTR [ecx]
  426c79:	mov    ecx,DWORD PTR [eax]
  426c7b:	mov    edx,DWORD PTR [edx]
  426c7d:	sub    ecx,esi
  426c7f:	add    edx,ecx
  426c81:	mov    DWORD PTR [eax],edx
  426c83:	mov    eax,DWORD PTR [ebp+0xc]
  426c86:	jmp    0x426c8a
  426c88:	xor    eax,eax
  426c8a:	pop    edi
  426c8b:	pop    esi
  426c8c:	pop    ebx
  426c8d:	leave  
  426c8e:	ret    0x1c
  426c91:	push   ebp
  426c92:	mov    ebp,esp
  426c94:	sub    esp,0x1c
  426c97:	push   esi
  426c98:	mov    esi,eax
  426c9a:	mov    eax,DWORD PTR [ecx+0x190]
  426ca0:	cmp    DWORD PTR [eax],0x0
  426ca3:	je     0x426db3
  426ca9:	test   edx,edx
  426cab:	je     0x426db3
  426cb1:	test   esi,esi
  426cb3:	je     0x426db3
  426cb9:	mov    eax,DWORD PTR [esi+0x88]
  426cbf:	test   eax,eax
  426cc1:	je     0x426dae
  426cc7:	cmp    DWORD PTR [esi+0x8c],0x10
  426cce:	je     0x426dae
  426cd4:	cmp    DWORD PTR [esi+0x34],edx
  426cd7:	je     0x426dae
  426cdd:	mov    esi,DWORD PTR [ecx+0x18c]
  426ce3:	and    DWORD PTR [ebp-0x10],0x0
  426ce7:	mov    ecx,edx
  426ce9:	sub    ecx,DWORD PTR [esi]
  426ceb:	add    eax,edx
  426ced:	movzx  edx,WORD PTR [eax+0xc]
  426cf1:	mov    DWORD PTR [ebp-0x1c],ecx
  426cf4:	movzx  ecx,WORD PTR [eax+0xe]
  426cf8:	add    ecx,edx
  426cfa:	je     0x426dae
  426d00:	lea    ecx,[eax+0x14]
  426d03:	push   ebx
  426d04:	mov    DWORD PTR [ebp-0x18],ecx
  426d07:	mov    esi,0x7fffffff
  426d0c:	push   edi
  426d0d:	test   DWORD PTR [ecx],esi
  426d0f:	je     0x426d90
  426d11:	mov    edx,DWORD PTR [ecx]
  426d13:	and    DWORD PTR [ebp-0xc],0x0
  426d17:	and    edx,esi
  426d19:	add    edx,eax
  426d1b:	movzx  edi,WORD PTR [edx+0xe]
  426d1f:	movzx  ebx,WORD PTR [edx+0xc]
  426d23:	add    edi,ebx
  426d25:	je     0x426d90
  426d27:	lea    ecx,[edx+0x14]
  426d2a:	mov    DWORD PTR [ebp-0x14],ecx
  426d2d:	test   DWORD PTR [ecx],esi
  426d2f:	je     0x426d72
  426d31:	mov    ecx,DWORD PTR [ecx]
  426d33:	and    DWORD PTR [ebp-0x8],0x0
  426d37:	and    ecx,esi
  426d39:	add    ecx,eax
  426d3b:	movzx  edi,WORD PTR [ecx+0xe]
  426d3f:	movzx  ebx,WORD PTR [ecx+0xc]
  426d43:	add    edi,ebx
  426d45:	je     0x426d72
  426d47:	lea    edi,[ecx+0x14]
  426d4a:	mov    DWORD PTR [ebp-0x4],edi
  426d4d:	mov    edi,DWORD PTR [ebp-0x4]
  426d50:	mov    edi,DWORD PTR [edi]
  426d52:	test   edi,edi
  426d54:	je     0x426d5c
  426d56:	mov    ebx,DWORD PTR [ebp-0x1c]
  426d59:	add    DWORD PTR [edi+eax*1],ebx
  426d5c:	movzx  edi,WORD PTR [ecx+0xe]
  426d60:	movzx  ebx,WORD PTR [ecx+0xc]
  426d64:	inc    DWORD PTR [ebp-0x8]
  426d67:	add    DWORD PTR [ebp-0x4],0x8
  426d6b:	add    edi,ebx
  426d6d:	cmp    DWORD PTR [ebp-0x8],edi
  426d70:	jb     0x426d4d
  426d72:	movzx  edi,WORD PTR [edx+0xe]
  426d76:	movzx  ebx,WORD PTR [edx+0xc]
  426d7a:	mov    ecx,DWORD PTR [ebp-0x14]
  426d7d:	inc    DWORD PTR [ebp-0xc]
  426d80:	add    ecx,0x8
  426d83:	add    edi,ebx
  426d85:	mov    DWORD PTR [ebp-0x14],ecx
  426d88:	cmp    DWORD PTR [ebp-0xc],edi
  426d8b:	jb     0x426d2d
  426d8d:	mov    ecx,DWORD PTR [ebp-0x18]
  426d90:	movzx  edx,WORD PTR [eax+0xe]
  426d94:	movzx  edi,WORD PTR [eax+0xc]
  426d98:	inc    DWORD PTR [ebp-0x10]
  426d9b:	add    ecx,0x8
  426d9e:	add    edx,edi
  426da0:	mov    DWORD PTR [ebp-0x18],ecx
  426da3:	cmp    DWORD PTR [ebp-0x10],edx
  426da6:	jb     0x426d0d
  426dac:	pop    edi
  426dad:	pop    ebx
  426dae:	xor    eax,eax
  426db0:	inc    eax
  426db1:	jmp    0x426db5
  426db3:	xor    eax,eax
  426db5:	pop    esi
  426db6:	leave  
  426db7:	ret    
  426db8:	push   ebp
  426db9:	mov    ebp,esp
  426dbb:	mov    ecx,DWORD PTR [ecx+0x190]
  426dc1:	mov    eax,DWORD PTR [ebp+0xc]
  426dc4:	sub    esp,0x10
  426dc7:	push   ebx
  426dc8:	xor    ebx,ebx
  426dca:	push   esi
  426dcb:	push   edi
  426dcc:	cmp    DWORD PTR [ecx],ebx
  426dce:	je     0x426e56
  426dd4:	cmp    eax,ebx
  426dd6:	je     0x426e56
  426dd8:	cmp    DWORD PTR [eax+0x78],ebx
  426ddb:	jne    0x426de2
  426ddd:	xor    eax,eax
  426ddf:	inc    eax
  426de0:	jmp    0x426e58
  426de2:	mov    eax,DWORD PTR [eax+0x78]
  426de5:	add    eax,DWORD PTR [ebp+0x8]
  426de8:	mov    ecx,DWORD PTR [eax+0x1c]
  426deb:	mov    edx,DWORD PTR [eax+0x24]
  426dee:	mov    esi,DWORD PTR [eax+0x14]
  426df1:	mov    edi,DWORD PTR [eax+0x18]
  426df4:	add    ecx,DWORD PTR [ebp+0x8]
  426df7:	add    edx,DWORD PTR [ebp+0x8]
  426dfa:	mov    DWORD PTR [ebp-0x4],esi
  426dfd:	cmp    esi,edi
  426dff:	ja     0x426e04
  426e01:	mov    DWORD PTR [ebp-0x4],edi
  426e04:	mov    DWORD PTR [ebp-0x8],ebx
  426e07:	cmp    DWORD PTR [ebp-0x4],ebx
  426e0a:	jbe    0x426ddd
  426e0c:	cmp    ebx,DWORD PTR [eax+0x14]
  426e0f:	jae    0x426e17
  426e11:	movzx  esi,WORD PTR [edx+ebx*2]
  426e15:	jmp    0x426e19
  426e17:	mov    esi,ebx
  426e19:	lea    esi,[ecx+esi*4]
  426e1c:	mov    edi,DWORD PTR [esi]
  426e1e:	test   edi,edi
  426e20:	je     0x426e4b
  426e22:	add    edi,DWORD PTR [ebp+0x8]
  426e25:	mov    DWORD PTR [ebp-0x10],edi
  426e28:	cmp    edi,eax
  426e2a:	jbe    0x426e3c
  426e2c:	mov    ebx,DWORD PTR [ebp+0xc]
  426e2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  426e32:	add    ebx,eax
  426e34:	cmp    edi,ebx
  426e36:	jae    0x426e3c
  426e38:	mov    esi,DWORD PTR [esi]
  426e3a:	jmp    0x426e44
  426e3c:	sub    edi,DWORD PTR [ebp+0x8]
  426e3f:	mov    DWORD PTR [esi],edi
  426e41:	mov    esi,DWORD PTR [ebp-0x10]
  426e44:	test   esi,esi
  426e46:	je     0x426e56
  426e48:	mov    ebx,DWORD PTR [ebp-0x8]
  426e4b:	inc    ebx
  426e4c:	mov    DWORD PTR [ebp-0x8],ebx
  426e4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426e52:	jb     0x426e0c
  426e54:	jmp    0x426ddd
  426e56:	xor    eax,eax
  426e58:	pop    edi
  426e59:	pop    esi
  426e5a:	pop    ebx
  426e5b:	leave  
  426e5c:	ret    0x8
  426e5f:	push   ebp
  426e60:	mov    ebp,esp
  426e62:	sub    esp,0x2c
  426e65:	mov    edx,0xf89c85a5
  426e6a:	mov    DWORD PTR [ebp-0x4],edx
  426e6d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426e74:	mov    eax,DWORD PTR [ebp-0x4]
  426e77:	mov    ecx,DWORD PTR [ebp-0x4]
  426e7a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e7d:	mov    ecx,DWORD PTR [ebp-0x4]
  426e80:	mov    ecx,DWORD PTR [ebp-0x4]
  426e83:	mov    ecx,DWORD PTR [ebp-0x4]
  426e86:	push   ebx
  426e87:	mov    ebx,DWORD PTR [ebp+0x10]
  426e8a:	push   esi
  426e8b:	mov    esi,0x75108aa
  426e90:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426e97:	mov    ecx,DWORD PTR [ebp-0x4]
  426e9a:	mov    ebx,DWORD PTR [ebx+0x190]
  426ea0:	push   edi
  426ea1:	mov    edi,0x3272f1
  426ea6:	xor    ecx,esi
  426ea8:	xor    eax,esi
  426eaa:	add    eax,edi
  426eac:	add    ecx,edi
  426eae:	mov    DWORD PTR [ebp-0x18],eax
  426eb1:	cmp    ecx,DWORD PTR [ebx]
  426eb3:	je     0x427134
  426eb9:	mov    ebx,DWORD PTR [ebp-0x4]
  426ebc:	mov    ecx,DWORD PTR [ebp+0xc]
  426ebf:	xor    ebx,esi
  426ec1:	add    ebx,edi
  426ec3:	cmp    ebx,ecx
  426ec5:	je     0x427134
  426ecb:	mov    ebx,DWORD PTR [ebp-0x4]
  426ece:	mov    ecx,DWORD PTR [ecx+0x80]
  426ed4:	xor    ebx,esi
  426ed6:	add    ebx,edi
  426ed8:	cmp    ecx,ebx
  426eda:	je     0x42712f
  426ee0:	add    ecx,DWORD PTR [ebp+0x8]
  426ee3:	mov    DWORD PTR [ebp-0x2c],ecx
  426ee6:	mov    ebx,edx
  426ee8:	xor    ebx,esi
  426eea:	add    ebx,edi
  426eec:	mov    DWORD PTR [ebp-0x10],ebx
  426eef:	mov    ebx,DWORD PTR [ebp-0x10]
  426ef2:	cmp    ebx,edx
  426ef4:	je     0x426f08
  426ef6:	mov    edx,DWORD PTR [ebp-0x10]
  426ef9:	mov    ebx,DWORD PTR [ebp-0x4]
  426efc:	imul   edx,edx,0x14
  426eff:	xor    ebx,esi
  426f01:	add    ebx,edi
  426f03:	cmp    DWORD PTR [edx+ecx*1],ebx
  426f06:	jne    0x426f1f
  426f08:	mov    edx,DWORD PTR [ebp-0x10]
  426f0b:	mov    ebx,DWORD PTR [ebp-0x4]
  426f0e:	imul   edx,edx,0x14
  426f11:	xor    ebx,esi
  426f13:	add    ebx,edi
  426f15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426f19:	je     0x427121
  426f1f:	mov    eax,DWORD PTR [ebp-0x4]
  426f22:	mov    ebx,DWORD PTR [ebp-0x4]
  426f25:	mov    eax,DWORD PTR [ebp-0x10]
  426f28:	imul   eax,eax,0x14
  426f2b:	add    eax,ecx
  426f2d:	mov    ecx,DWORD PTR [eax+0x10]
  426f30:	add    ecx,DWORD PTR [ebp+0x8]
  426f33:	xor    ebx,esi
  426f35:	mov    DWORD PTR [ebp-0x1c],ecx
  426f38:	mov    ecx,DWORD PTR [ebp-0x4]
  426f3b:	mov    edx,DWORD PTR [ebp-0x4]
  426f3e:	xor    ecx,esi
  426f40:	add    ecx,edi
  426f42:	xor    edx,esi
  426f44:	mov    DWORD PTR [ebp-0x24],ecx
  426f47:	mov    ecx,DWORD PTR [eax]
  426f49:	add    edx,edi
  426f4b:	add    ebx,edi
  426f4d:	cmp    ecx,edx
  426f4f:	je     0x426f57
  426f51:	add    ecx,DWORD PTR [ebp+0x8]
  426f54:	mov    DWORD PTR [ebp-0x24],ecx
  426f57:	mov    ecx,DWORD PTR [ebp-0x4]
  426f5a:	xor    ecx,esi
  426f5c:	add    ecx,DWORD PTR [eax+0xc]
  426f5f:	mov    eax,DWORD PTR [ebp+0x8]
  426f62:	lea    eax,[ecx+eax*1+0x3272f1]
  426f69:	mov    DWORD PTR [ebp+0xc],eax
  426f6c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426f73:	mov    eax,DWORD PTR [ebp+0x10]
  426f76:	push   DWORD PTR [ebp+0xc]
  426f79:	mov    eax,DWORD PTR [eax+0x1e0]
  426f7f:	call   DWORD PTR [eax]
  426f81:	mov    ecx,DWORD PTR [ebp-0x4]
  426f84:	xor    ecx,esi
  426f86:	add    ecx,edi
  426f88:	mov    DWORD PTR [ebp-0xc],eax
  426f8b:	cmp    ecx,eax
  426f8d:	jne    0x426fa1
  426f8f:	mov    eax,DWORD PTR [ebp+0x10]
  426f92:	push   DWORD PTR [ebp+0xc]
  426f95:	mov    eax,DWORD PTR [eax+0x1e0]
  426f9b:	call   DWORD PTR [eax+0xc]
  426f9e:	mov    DWORD PTR [ebp-0xc],eax
  426fa1:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426fa8:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426faf:	mov    eax,DWORD PTR [ebp-0x4]
  426fb2:	xor    eax,esi
  426fb4:	add    eax,edi
  426fb6:	cmp    eax,DWORD PTR [ebp-0xc]
  426fb9:	jne    0x426fde
  426fbb:	mov    eax,DWORD PTR [ebp-0x8]
  426fbe:	mov    ecx,DWORD PTR [ebp-0x20]
  426fc1:	xor    eax,esi
  426fc3:	xor    ecx,esi
  426fc5:	lea    ebx,[ebx+eax*1+0x3272f1]
  426fcc:	mov    eax,DWORD PTR [ebp+0x10]
  426fcf:	mov    eax,DWORD PTR [eax+0x1e0]
  426fd5:	add    ecx,edi
  426fd7:	imul   ecx,ebx
  426fda:	push   ecx
  426fdb:	call   DWORD PTR [eax+0x24]
  426fde:	mov    eax,DWORD PTR [ebp-0x4]
  426fe1:	xor    eax,esi
  426fe3:	add    eax,edi
  426fe5:	cmp    eax,DWORD PTR [ebp-0xc]
  426fe8:	jne    0x426ff9
  426fea:	mov    eax,DWORD PTR [ebp-0x28]
  426fed:	xor    eax,esi
  426fef:	add    eax,edi
  426ff1:	cmp    ebx,eax
  426ff3:	jbe    0x426f73
  426ff9:	mov    eax,DWORD PTR [ebp-0x4]
  426ffc:	xor    eax,esi
  426ffe:	add    eax,edi
  427000:	cmp    eax,DWORD PTR [ebp-0xc]
  427003:	jne    0x42701c
  427005:	mov    eax,DWORD PTR [ebp-0x8]
  427008:	mov    ecx,DWORD PTR [ebp-0x18]
  42700b:	xor    eax,esi
  42700d:	lea    eax,[ecx+eax*1+0x3272f1]
  427014:	mov    DWORD PTR [ebp-0x18],eax
  427017:	jmp    0x42710b
  42701c:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427023:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  42702a:	mov    ebx,DWORD PTR [ebp-0x4]
  42702d:	xor    ebx,esi
  42702f:	add    ebx,edi
  427031:	jmp    0x4270f8
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,esi
  42703b:	add    eax,edi
  42703d:	mov    DWORD PTR [ebp-0x14],eax
  427040:	mov    eax,DWORD PTR [ebp-0x4]
  427043:	xor    eax,esi
  427045:	add    eax,edi
  427047:	mov    DWORD PTR [ebp+0xc],eax
  42704a:	mov    ecx,DWORD PTR [ebp-0x4]
  42704d:	mov    eax,DWORD PTR [ebp-0x24]
  427050:	xor    ecx,esi
  427052:	add    ecx,edi
  427054:	cmp    ecx,eax
  427056:	je     0x42705e
  427058:	mov    eax,DWORD PTR [eax+ebx*4]
  42705b:	mov    DWORD PTR [ebp-0x14],eax
  42705e:	mov    eax,DWORD PTR [ebp-0x1c]
  427061:	mov    eax,DWORD PTR [eax+ebx*4]
  427064:	mov    DWORD PTR [ebp+0xc],eax
  427067:	mov    eax,DWORD PTR [ebp-0x4]
  42706a:	mov    ecx,DWORD PTR [ebp-0x14]
  42706d:	xor    eax,esi
  42706f:	add    eax,edi
  427071:	cmp    eax,ecx
  427073:	je     0x42709e
  427075:	mov    eax,DWORD PTR [ebp-0x4]
  427078:	mov    ecx,DWORD PTR [ebp-0x14]
  42707b:	xor    eax,esi
  42707d:	add    eax,edi
  42707f:	shr    ecx,0x1f
  427082:	cmp    eax,ecx
  427084:	je     0x42709e
  427086:	mov    ecx,DWORD PTR [ebp-0x14]
  427089:	mov    eax,DWORD PTR [ebp+0x10]
  42708c:	mov    eax,DWORD PTR [eax+0x1e0]
  427092:	movzx  ecx,cx
  427095:	push   ecx
  427096:	push   DWORD PTR [ebp-0xc]
  427099:	call   DWORD PTR [eax+0x8]
  42709c:	jmp    0x4270b7
  42709e:	mov    eax,DWORD PTR [ebp+0xc]
  4270a1:	add    eax,DWORD PTR [ebp+0x8]
  4270a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4270a7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4270ad:	add    eax,0x2
  4270b0:	push   eax
  4270b1:	push   DWORD PTR [ebp-0xc]
  4270b4:	call   DWORD PTR [ecx+0x8]
  4270b7:	mov    DWORD PTR [ebp+0xc],eax
  4270ba:	mov    eax,DWORD PTR [ebp-0x4]
  4270bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4270c0:	xor    eax,esi
  4270c2:	add    eax,edi
  4270c4:	cmp    eax,ecx
  4270c6:	mov    eax,DWORD PTR [ebp-0x8]
  4270c9:	jne    0x4270dc
  4270cb:	mov    ecx,DWORD PTR [ebp-0x18]
  4270ce:	xor    eax,esi
  4270d0:	lea    eax,[ecx+eax*1+0x3272f1]
  4270d7:	mov    DWORD PTR [ebp-0x18],eax
  4270da:	jmp    0x4270ec
  4270dc:	mov    ecx,DWORD PTR [ebp+0xc]
  4270df:	xor    eax,esi
  4270e1:	add    eax,edi
  4270e3:	imul   eax,ecx
  4270e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270e9:	mov    DWORD PTR [ecx+ebx*4],eax
  4270ec:	mov    eax,DWORD PTR [ebp-0x8]
  4270ef:	xor    eax,esi
  4270f1:	lea    ebx,[ebx+eax*1+0x3272f1]
  4270f8:	mov    eax,DWORD PTR [ebp-0x4]
  4270fb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270fe:	xor    eax,esi
  427100:	add    eax,edi
  427102:	cmp    DWORD PTR [ecx+ebx*4],eax
  427105:	jne    0x427036
  42710b:	mov    edx,DWORD PTR [ebp-0x10]
  42710e:	mov    ecx,DWORD PTR [ebp-0x2c]
  427111:	mov    eax,DWORD PTR [ebp-0x18]
  427114:	sub    edx,0x3272f0
  42711a:	xor    edx,esi
  42711c:	jmp    0x426ee6
  427121:	mov    ecx,DWORD PTR [ebp-0x4]
  427124:	xor    ecx,esi
  427126:	add    ecx,edi
  427128:	cmp    eax,ecx
  42712a:	mov    eax,DWORD PTR [ebp-0x4]
  42712d:	jne    0x427137
  42712f:	mov    eax,DWORD PTR [ebp-0x8]
  427132:	jmp    0x427137
  427134:	mov    eax,DWORD PTR [ebp-0x4]
  427137:	xor    eax,esi
  427139:	add    eax,edi
  42713b:	pop    edi
  42713c:	pop    esi
  42713d:	pop    ebx
  42713e:	leave  
  42713f:	ret    0xc
  427142:	push   ebp
  427143:	mov    ebp,esp
  427145:	sub    esp,0x28
  427148:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42714f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427156:	mov    eax,DWORD PTR [ebp+0xc]
  427159:	mov    DWORD PTR [ebp+0xc],eax
  42715c:	push   esi
  42715d:	mov    eax,eax
  42715f:	mov    eax,DWORD PTR [ebp-0x4]
  427162:	mov    esi,DWORD PTR [ebp+0x8]
  427165:	mov    ecx,0x75108aa
  42716a:	xor    eax,ecx
  42716c:	mov    edx,0x3272f1
  427171:	add    eax,edx
  427173:	cmp    esi,eax
  427175:	je     0x42729c
  42717b:	mov    eax,DWORD PTR [ebp+0x8]
  42717e:	mov    esi,DWORD PTR [ebp+0x8]
  427181:	add    esi,DWORD PTR [eax+0x3c]
  427184:	push   edi
  427185:	mov    DWORD PTR [ebp+0xc],esi
  427188:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42718f:	mov    eax,DWORD PTR [ebp-0x1c]
  427192:	mov    esi,DWORD PTR [ebp-0x4]
  427195:	mov    edi,DWORD PTR [ebp+0xc]
  427198:	xor    esi,ecx
  42719a:	xor    eax,ecx
  42719c:	add    esi,edx
  42719e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  4271a5:	je     0x427296
  4271ab:	mov    esi,DWORD PTR [ebp+0xc]
  4271ae:	mov    eax,DWORD PTR [ebp+0x8]
  4271b1:	add    eax,DWORD PTR [esi+0xa0]
  4271b7:	mov    esi,DWORD PTR [ebp+0x8]
  4271ba:	mov    edi,DWORD PTR [ebp+0xc]
  4271bd:	sub    esi,DWORD PTR [edi+0x34]
  4271c0:	mov    edi,DWORD PTR [ebp-0x4]
  4271c3:	xor    edi,ecx
  4271c5:	add    edi,edx
  4271c7:	mov    DWORD PTR [ebp-0x24],esi
  4271ca:	cmp    esi,edi
  4271cc:	je     0x427296
  4271d2:	mov    esi,DWORD PTR [ebp-0x4]
  4271d5:	xor    esi,ecx
  4271d7:	add    esi,edx
  4271d9:	mov    DWORD PTR [ebp-0x8],esi
  4271dc:	push   ebx
  4271dd:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4271e4:	jmp    0x427280
  4271e9:	mov    esi,DWORD PTR [ebp-0x4]
  4271ec:	xor    esi,ecx
  4271ee:	lea    edi,[ebx-0x8]
  4271f1:	add    esi,edx
  4271f3:	shr    edi,1
  4271f5:	cmp    esi,edi
  4271f7:	jae    0x427266
  4271f9:	sub    edi,esi
  4271fb:	lea    ebx,[eax+esi*2+0x8]
  4271ff:	mov    DWORD PTR [ebp-0x18],edi
  427202:	movzx  esi,WORD PTR [ebx]
  427205:	and    esi,0xfff
  42720b:	mov    DWORD PTR [ebp-0x14],esi
  42720e:	mov    edi,DWORD PTR [ebp-0x14]
  427211:	mov    esi,DWORD PTR [eax]
  427213:	sub    esi,edx
  427215:	add    edi,esi
  427217:	movzx  esi,WORD PTR [ebx]
  42721a:	shr    esi,0xc
  42721d:	xor    edi,ecx
  42721f:	mov    DWORD PTR [ebp-0x20],edi
  427222:	mov    DWORD PTR [ebp-0x14],esi
  427225:	mov    esi,DWORD PTR [ebp-0x20]
  427228:	mov    edi,DWORD PTR [ebp+0x8]
  42722b:	xor    esi,ecx
  42722d:	lea    esi,[esi+edi*1+0x3272f1]
  427234:	mov    DWORD PTR [ebp-0x20],esi
  427237:	mov    esi,DWORD PTR [ebp-0x10]
  42723a:	mov    edi,DWORD PTR [ebp-0x14]
  42723d:	xor    esi,ecx
  42723f:	add    esi,edx
  427241:	cmp    edi,esi
  427243:	jne    0x42725b
  427245:	mov    esi,DWORD PTR [ebp-0x10]
  427248:	mov    edi,DWORD PTR [ebp-0x14]
  42724b:	xor    esi,ecx
  42724d:	add    esi,edx
  42724f:	cmp    edi,esi
  427251:	jne    0x42725b
  427253:	mov    esi,DWORD PTR [ebp-0x20]
  427256:	mov    edi,DWORD PTR [ebp-0x24]
  427259:	add    DWORD PTR [esi],edi
  42725b:	add    ebx,0x2
  42725e:	dec    DWORD PTR [ebp-0x18]
  427261:	jne    0x427202
  427263:	mov    ebx,DWORD PTR [ebp-0xc]
  427266:	add    DWORD PTR [ebp-0x8],ebx
  427269:	mov    esi,DWORD PTR [ebp-0x1c]
  42726c:	mov    edi,DWORD PTR [ebp-0x8]
  42726f:	mov    ebx,DWORD PTR [ebp+0xc]
  427272:	xor    esi,ecx
  427274:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42727b:	jae    0x427295
  42727d:	add    eax,DWORD PTR [ebp-0xc]
  427280:	mov    esi,DWORD PTR [ebp-0x4]
  427283:	mov    ebx,DWORD PTR [eax+0x4]
  427286:	xor    esi,ecx
  427288:	add    esi,edx
  42728a:	mov    DWORD PTR [ebp-0xc],ebx
  42728d:	cmp    ebx,esi
  42728f:	jne    0x4271e9
  427295:	pop    ebx
  427296:	mov    eax,DWORD PTR [ebp-0x28]
  427299:	pop    edi
  42729a:	jmp    0x42729f
  42729c:	mov    eax,DWORD PTR [ebp-0x4]
  42729f:	xor    eax,ecx
  4272a1:	add    eax,edx
  4272a3:	pop    esi
  4272a4:	leave  
  4272a5:	ret    0x8
  4272a8:	push   ebp
  4272a9:	mov    ebp,esp
  4272ab:	sub    esp,0xd8
  4272b1:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4272b8:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  4272bf:	mov    eax,DWORD PTR [ebp-0x4]
  4272c2:	push   ebx
  4272c3:	push   esi
  4272c4:	mov    esi,0x75108aa
  4272c9:	xor    eax,esi
  4272cb:	push   edi
  4272cc:	mov    edi,0x3272f1
  4272d1:	add    eax,edi
  4272d3:	mov    DWORD PTR [ebp-0x18],eax
  4272d6:	mov    eax,DWORD PTR [ebp-0x4]
  4272d9:	xor    eax,esi
  4272db:	add    eax,edi
  4272dd:	mov    DWORD PTR [ebp-0x8],eax
  4272e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4272e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4272e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4272e9:	xor    eax,ecx
  4272eb:	mov    DWORD PTR [ebp-0x1c],eax
  4272ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4272f5:	mov    eax,DWORD PTR [ebp-0xc]
  4272f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4272fb:	xor    eax,ecx
  4272fd:	mov    DWORD PTR [ebp-0xc],eax
  427300:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427307:	mov    eax,DWORD PTR [ebp-0x10]
  42730a:	mov    ecx,DWORD PTR [ebp-0x10]
  42730d:	xor    eax,ecx
  42730f:	mov    DWORD PTR [ebp-0x10],eax
  427312:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  427319:	mov    eax,DWORD PTR [ebp-0x28]
  42731c:	mov    ecx,DWORD PTR [ebp-0x28]
  42731f:	xor    eax,ecx
  427321:	mov    DWORD PTR [ebp-0x28],eax
  427324:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  42732b:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427332:	mov    eax,DWORD PTR [ebp+0x8]
  427335:	test   eax,eax
  427337:	je     0x4277c0
  42733d:	mov    eax,DWORD PTR [ebp+0xc]
  427340:	test   eax,eax
  427342:	je     0x4277c0
  427348:	mov    eax,DWORD PTR [ebp+0x18]
  42734b:	test   eax,eax
  42734d:	je     0x4277c0
  427353:	mov    eax,DWORD PTR [ebp+0x20]
  427356:	mov    ecx,DWORD PTR [ebp+0x8]
  427359:	xor    eax,0x8aa
  42735e:	add    eax,0x72f1
  427363:	cmp    WORD PTR [ecx],ax
  427366:	jne    0x4277c0
  42736c:	mov    eax,DWORD PTR [ebp-0x4]
  42736f:	xor    eax,esi
  427371:	add    eax,edi
  427373:	mov    DWORD PTR [ebp-0x30],eax
  427376:	mov    eax,DWORD PTR [ebp-0x4]
  427379:	mov    ecx,DWORD PTR [ebp+0x8]
  42737c:	mov    eax,DWORD PTR [ebp+0x8]
  42737f:	add    eax,DWORD PTR [ecx+0x3c]
  427382:	mov    DWORD PTR [ebp+0xc],eax
  427385:	mov    eax,DWORD PTR [eax+0x50]
  427388:	test   eax,eax
  42738a:	je     0x4277c0
  427390:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427397:	mov    eax,DWORD PTR [ebp-0x2c]
  42739a:	xor    eax,esi
  42739c:	add    eax,edi
  42739e:	mov    DWORD PTR [ebp-0x2c],eax
  4273a1:	mov    eax,DWORD PTR [ebp-0x4]
  4273a4:	mov    eax,DWORD PTR [ebx+0x190]
  4273aa:	mov    ecx,DWORD PTR [eax]
  4273ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4273af:	add    ecx,DWORD PTR [eax]
  4273b1:	mov    eax,DWORD PTR [ebp-0x4]
  4273b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4273ba:	mov    edx,DWORD PTR [eax]
  4273bc:	mov    DWORD PTR [ebp-0x20],ecx
  4273bf:	mov    DWORD PTR [ebp+0x20],edx
  4273c2:	cmp    edx,edx
  4273c4:	jne    0x4273f8
  4273c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273cc:	lea    edx,[ebp-0x18]
  4273cf:	push   edx
  4273d0:	mov    edx,DWORD PTR [ebp-0xc]
  4273d3:	xor    edx,esi
  4273d5:	add    edx,edi
  4273d7:	push   edx
  4273d8:	push   DWORD PTR [ecx+0x50]
  4273db:	push   DWORD PTR [ebp+0x20]
  4273de:	call   DWORD PTR [eax+0x1c]
  4273e1:	mov    eax,DWORD PTR [ebp-0x20]
  4273e4:	mov    ecx,DWORD PTR [eax+0x54]
  4273e7:	mov    eax,DWORD PTR [eax+0x50]
  4273ea:	sub    eax,ecx
  4273ec:	add    ecx,DWORD PTR [ebp+0x20]
  4273ef:	push   ecx
  4273f0:	call   0x427d5b
  4273f5:	mov    edx,DWORD PTR [ebp+0x20]
  4273f8:	mov    eax,DWORD PTR [ebx+0x194]
  4273fe:	mov    DWORD PTR [eax],edx
  427400:	mov    eax,DWORD PTR [ebp+0xc]
  427403:	push   DWORD PTR [eax+0x54]
  427406:	push   DWORD PTR [ebp+0x8]
  427409:	push   edx
  42740a:	call   0x427c51
  42740f:	mov    ecx,DWORD PTR [ebp+0x20]
  427412:	mov    eax,DWORD PTR [ecx+0x3c]
  427415:	add    eax,ecx
  427417:	movzx  ecx,WORD PTR [eax+0x14]
  42741b:	lea    ecx,[ecx+eax*1+0x18]
  42741f:	mov    DWORD PTR [ebp+0x18],ecx
  427422:	mov    ecx,DWORD PTR [ebp-0x4]
  427425:	movzx  edx,WORD PTR [eax+0x6]
  427429:	xor    ecx,esi
  42742b:	add    ecx,edi
  42742d:	mov    DWORD PTR [ebp+0xc],eax
  427430:	cmp    edx,ecx
  427432:	je     0x4274df
  427438:	mov    ecx,DWORD PTR [ebp-0x4]
  42743b:	xor    ecx,esi
  42743d:	add    ecx,edi
  42743f:	mov    DWORD PTR [ebp-0x8],ecx
  427442:	mov    ecx,DWORD PTR [ebp-0x24]
  427445:	movzx  edx,WORD PTR [eax+0x6]
  427449:	xor    ecx,esi
  42744b:	sub    edx,ecx
  42744d:	sub    edx,edi
  42744f:	cmp    DWORD PTR [ebp-0x8],edx
  427452:	ja     0x4274df
  427458:	mov    edx,DWORD PTR [ebp+0x18]
  42745b:	add    edx,0x8
  42745e:	mov    DWORD PTR [ebp+0x18],edx
  427461:	jmp    0x427466
  427463:	mov    edx,DWORD PTR [ebp+0x18]
  427466:	mov    eax,DWORD PTR [eax+0x38]
  427469:	lea    ecx,[eax-0x1]
  42746c:	mov    DWORD PTR [ebp-0x38],eax
  42746f:	mov    eax,DWORD PTR [edx]
  427471:	test   eax,ecx
  427473:	je     0x42747c
  427475:	not    ecx
  427477:	and    eax,ecx
  427479:	add    eax,DWORD PTR [ebp-0x38]
  42747c:	mov    ecx,DWORD PTR [edx+0x4]
  42747f:	add    ecx,DWORD PTR [ebp+0x20]
  427482:	push   ecx
  427483:	call   0x427d5b
  427488:	mov    edx,DWORD PTR [ebp-0x4]
  42748b:	mov    eax,DWORD PTR [ebp+0x18]
  42748e:	mov    ecx,DWORD PTR [eax+0x8]
  427491:	xor    edx,esi
  427493:	add    edx,edi
  427495:	cmp    ecx,edx
  427497:	je     0x4274b0
  427499:	push   ecx
  42749a:	mov    ecx,DWORD PTR [ebp+0x8]
  42749d:	add    ecx,DWORD PTR [eax+0xc]
  4274a0:	mov    eax,DWORD PTR [eax+0x4]
  4274a3:	add    eax,DWORD PTR [ebp+0x20]
  4274a6:	push   ecx
  4274a7:	push   eax
  4274a8:	call   0x427c51
  4274ad:	mov    eax,DWORD PTR [ebp+0x18]
  4274b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4274b3:	mov    edx,DWORD PTR [ebp-0x8]
  4274b6:	add    eax,0x28
  4274b9:	xor    ecx,esi
  4274bb:	lea    ecx,[edx+ecx*1+0x3272f1]
  4274c2:	mov    edx,DWORD PTR [ebp+0xc]
  4274c5:	mov    DWORD PTR [ebp+0x18],eax
  4274c8:	mov    eax,DWORD PTR [ebp-0x24]
  4274cb:	movzx  edx,WORD PTR [edx+0x6]
  4274cf:	xor    eax,esi
  4274d1:	sub    edx,eax
  4274d3:	mov    eax,DWORD PTR [ebp+0xc]
  4274d6:	sub    edx,edi
  4274d8:	mov    DWORD PTR [ebp-0x8],ecx
  4274db:	cmp    ecx,edx
  4274dd:	jbe    0x427463
  4274df:	mov    edx,DWORD PTR [ebx+0x18c]
  4274e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4274e8:	cmp    ecx,DWORD PTR [edx]
  4274ea:	jne    0x427513
  4274ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274f2:	lea    edx,[ebp-0x18]
  4274f5:	push   edx
  4274f6:	mov    edx,DWORD PTR [ebp-0x10]
  4274f9:	xor    edx,esi
  4274fb:	add    edx,edi
  4274fd:	push   edx
  4274fe:	mov    edx,DWORD PTR [ebp-0x20]
  427501:	push   DWORD PTR [edx+0x54]
  427504:	push   ecx
  427505:	call   DWORD PTR [eax+0x1c]
  427508:	test   eax,eax
  42750a:	je     0x4277b1
  427510:	mov    eax,DWORD PTR [ebp+0xc]
  427513:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427519:	mov    ecx,DWORD PTR [ecx]
  42751b:	xor    ecx,esi
  42751d:	add    ecx,edi
  42751f:	je     0x4276dc
  427525:	mov    eax,DWORD PTR [ebp-0x4]
  427528:	xor    eax,esi
  42752a:	add    eax,edi
  42752c:	and    DWORD PTR [ebp+0x8],0x0
  427530:	mov    DWORD PTR [ebp-0x14],eax
  427533:	mov    eax,0xf89c85d9
  427538:	lea    ecx,[eax-0x8]
  42753b:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427542:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427549:	mov    DWORD PTR [ebp-0x50],eax
  42754c:	mov    DWORD PTR [ebp-0x4c],ecx
  42754f:	mov    DWORD PTR [ebp-0x48],ecx
  427552:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427559:	mov    edx,DWORD PTR [ebp+0x8]
  42755c:	mov    ecx,0x8aa
  427561:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427566:	mov    edx,0x72f1
  42756b:	add    cx,dx
  42756e:	mov    edx,DWORD PTR [ebp+0x8]
  427571:	inc    DWORD PTR [ebp+0x8]
  427574:	cmp    DWORD PTR [ebp+0x8],0x6
  427578:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427580:	jb     0x427559
  427582:	mov    ecx,0xf89c852b
  427587:	mov    DWORD PTR [ebp-0xb0],eax
  42758d:	mov    DWORD PTR [ebp-0x9c],eax
  427593:	mov    DWORD PTR [ebp-0x74],eax
  427596:	mov    DWORD PTR [ebp-0x70],eax
  427599:	lea    eax,[ecx-0x3]
  42759c:	mov    edx,0xf89c85ff
  4275a1:	mov    DWORD PTR [ebp-0x64],eax
  4275a4:	mov    DWORD PTR [ebp-0x60],eax
  4275a7:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  4275b1:	mov    DWORD PTR [ebp-0xac],ecx
  4275b7:	mov    DWORD PTR [ebp-0xa8],edx
  4275bd:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  4275c7:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  4275d1:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4275db:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4275e5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4275ef:	mov    DWORD PTR [ebp-0x8c],ecx
  4275f5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4275ff:	mov    DWORD PTR [ebp-0x84],edx
  427605:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  42760c:	mov    DWORD PTR [ebp-0x7c],ecx
  42760f:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427616:	mov    DWORD PTR [ebp-0x6c],ecx
  427619:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427620:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427627:	xor    eax,eax
  427629:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427630:	xor    cl,0xaa
  427633:	sub    cl,0xf
  427636:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42763d:	inc    eax
  42763e:	cmp    eax,0x17
  427641:	jb     0x427629
  427643:	mov    eax,DWORD PTR [ebx+0x1e0]
  427649:	lea    ecx,[ebp-0xc0]
  42764f:	push   ecx
  427650:	call   DWORD PTR [eax+0x4]
  427653:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427659:	lea    edx,[ebp-0xd8]
  42765f:	push   edx
  427660:	push   eax
  427661:	call   DWORD PTR [ecx+0x8]
  427664:	mov    DWORD PTR [ebp-0x40],eax
  427667:	lea    eax,[ebp-0x14]
  42766a:	push   eax
  42766b:	mov    eax,DWORD PTR [ebx+0x18c]
  427671:	push   DWORD PTR [eax]
  427673:	mov    eax,DWORD PTR [ebp-0x40]
  427676:	call   eax
  427678:	mov    eax,DWORD PTR [ebp-0x4]
  42767b:	xor    eax,esi
  42767d:	add    eax,edi
  42767f:	mov    DWORD PTR [ebp-0x34],eax
  427682:	mov    ecx,DWORD PTR [ebp-0x4]
  427685:	mov    eax,DWORD PTR [ebp-0x14]
  427688:	xor    ecx,esi
  42768a:	add    ecx,edi
  42768c:	cmp    eax,ecx
  42768e:	je     0x4276d9
  427690:	mov    DWORD PTR [ebp-0x3c],eax
  427693:	jmp    0x4276a4
  427695:	mov    eax,DWORD PTR [eax]
  427697:	mov    ecx,DWORD PTR [ebp-0x3c]
  42769a:	mov    DWORD PTR [ebp-0x14],eax
  42769d:	mov    eax,DWORD PTR [ebp-0x14]
  4276a0:	cmp    eax,ecx
  4276a2:	je     0x4276b1
  4276a4:	mov    edx,DWORD PTR [eax+0x18]
  4276a7:	mov    ecx,DWORD PTR [ebx+0x18c]
  4276ad:	cmp    edx,DWORD PTR [ecx]
  4276af:	jne    0x427695
  4276b1:	mov    ecx,DWORD PTR [ebx+0x18c]
  4276b7:	mov    edx,DWORD PTR [eax+0x18]
  4276ba:	cmp    edx,DWORD PTR [ecx]
  4276bc:	jne    0x4276d9
  4276be:	mov    ecx,DWORD PTR [ebx+0x190]
  4276c4:	mov    edx,DWORD PTR [ebp-0x20]
  4276c7:	mov    edx,DWORD PTR [edx+0x28]
  4276ca:	add    edx,DWORD PTR [ecx]
  4276cc:	mov    DWORD PTR [eax+0x1c],edx
  4276cf:	mov    eax,DWORD PTR [ebp-0x24]
  4276d2:	xor    eax,esi
  4276d4:	add    eax,edi
  4276d6:	mov    DWORD PTR [ebp-0x34],eax
  4276d9:	mov    eax,DWORD PTR [ebp+0xc]
  4276dc:	push   ebx
  4276dd:	push   eax
  4276de:	push   DWORD PTR [ebp+0x20]
  4276e1:	call   0x426e5f
  4276e6:	test   eax,eax
  4276e8:	je     0x4277b1
  4276ee:	push   DWORD PTR [ebp+0xc]
  4276f1:	mov    ecx,ebx
  4276f3:	push   DWORD PTR [ebp+0x20]
  4276f6:	call   0x426db8
  4276fb:	test   eax,eax
  4276fd:	je     0x4277b1
  427703:	mov    eax,DWORD PTR [ebp+0xc]
  427706:	mov    edx,DWORD PTR [ebp+0x20]
  427709:	mov    ecx,ebx
  42770b:	call   0x426c91
  427710:	test   eax,eax
  427712:	je     0x4277b1
  427718:	push   ebx
  427719:	push   DWORD PTR [ebp+0x20]
  42771c:	call   0x427142
  427721:	test   eax,eax
  427723:	je     0x4277b1
  427729:	mov    eax,DWORD PTR [ebx+0x18c]
  42772f:	mov    edx,DWORD PTR [ebp+0x20]
  427732:	cmp    edx,DWORD PTR [eax]
  427734:	jne    0x427750
  427736:	mov    eax,DWORD PTR [ebx+0x1e0]
  42773c:	lea    ecx,[ebp-0x18]
  42773f:	push   ecx
  427740:	push   DWORD PTR [ebp-0x18]
  427743:	mov    ecx,DWORD PTR [ebp-0x20]
  427746:	push   DWORD PTR [ecx+0x54]
  427749:	push   edx
  42774a:	call   DWORD PTR [eax+0x1c]
  42774d:	mov    edx,DWORD PTR [ebp+0x20]
  427750:	mov    eax,DWORD PTR [ebx+0x1c8]
  427756:	mov    eax,DWORD PTR [eax]
  427758:	xor    eax,esi
  42775a:	add    eax,edi
  42775c:	je     0x427795
  42775e:	mov    ecx,DWORD PTR [ebp+0xc]
  427761:	mov    eax,DWORD PTR [ecx+0x28]
  427764:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42776b:	mov    esi,DWORD PTR [ebp+0x8]
  42776e:	push   DWORD PTR [ebp+0x14]
  427771:	xor    esi,0x8aa
  427777:	push   DWORD PTR [ebp+0x10]
  42777a:	add    esi,0x72f1
  427780:	or     WORD PTR [ecx+0x16],si
  427784:	add    eax,edx
  427786:	push   edx
  427787:	call   eax
  427789:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427793:	jmp    0x42779f
  427795:	mov    eax,DWORD PTR [ebp+0xc]
  427798:	mov    eax,DWORD PTR [eax+0x28]
  42779b:	add    eax,edx
  42779d:	call   eax
  42779f:	mov    DWORD PTR [ebp-0x8],eax
  4277a2:	mov    eax,DWORD PTR [ebp-0x8]
  4277a5:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277a8:	mov    DWORD PTR [ecx],eax
  4277aa:	mov    DWORD PTR [ebp-0x30],0x1
  4277b1:	cmp    DWORD PTR [ebp-0x30],0x0
  4277b5:	jne    0x4277bb
  4277b7:	and    DWORD PTR [ebp+0x20],0x0
  4277bb:	mov    eax,DWORD PTR [ebp+0x20]
  4277be:	jmp    0x4277c2
  4277c0:	xor    eax,eax
  4277c2:	pop    edi
  4277c3:	pop    esi
  4277c4:	pop    ebx
  4277c5:	leave  
  4277c6:	ret    0x1c
  4277c9:	push   ebp
  4277ca:	mov    ebp,esp
  4277cc:	movzx  edx,WORD PTR [ecx+0x6]
  4277d0:	movzx  eax,WORD PTR [ecx+0x14]
  4277d4:	push   ebx
  4277d5:	push   edi
  4277d6:	xor    edi,edi
  4277d8:	lea    eax,[eax+ecx*1+0x18]
  4277dc:	test   edx,edx
  4277de:	je     0x4277ff
  4277e0:	mov    ecx,DWORD PTR [eax+0xc]
  4277e3:	lea    ebx,[ecx+esi*1]
  4277e6:	cmp    DWORD PTR [ebp+0x8],ebx
  4277e9:	jb     0x4277f7
  4277eb:	mov    ebx,DWORD PTR [eax+0x8]
  4277ee:	add    ebx,ecx
  4277f0:	add    ebx,esi
  4277f2:	cmp    DWORD PTR [ebp+0x8],ebx
  4277f5:	jb     0x427801
  4277f7:	add    eax,0x28
  4277fa:	inc    edi
  4277fb:	cmp    edi,edx
  4277fd:	jb     0x4277e0
  4277ff:	xor    eax,eax
  427801:	pop    edi
  427802:	pop    ebx
  427803:	pop    ebp
  427804:	ret    0x4
  427807:	push   ebp
  427808:	mov    ebp,esp
  42780a:	sub    esp,0x34
  42780d:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427814:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42781b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  427822:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427829:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  427830:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427837:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42783e:	mov    DWORD PTR [ebp-0x10],eax
  427841:	mov    eax,DWORD PTR [ebp+0x8]
  427844:	mov    DWORD PTR [ebp-0x14],eax
  427847:	mov    eax,DWORD PTR [ebp-0xc]
  42784a:	push   ebx
  42784b:	mov    ecx,0x75108aa
  427850:	xor    eax,ecx
  427852:	push   esi
  427853:	mov    esi,DWORD PTR [ebp-0x10]
  427856:	mov    edx,0x3272f1
  42785b:	add    eax,edx
  42785d:	push   edi
  42785e:	cmp    esi,eax
  427860:	je     0x427a3f
  427866:	mov    eax,DWORD PTR [ebp-0xc]
  427869:	mov    esi,DWORD PTR [ebp-0x14]
  42786c:	xor    eax,ecx
  42786e:	add    eax,edx
  427870:	cmp    esi,eax
  427872:	je     0x427a3f
  427878:	mov    eax,DWORD PTR [ebp-0xc]
  42787b:	xor    eax,ecx
  42787d:	add    eax,edx
  42787f:	mov    DWORD PTR [ebp-0x24],eax
  427882:	mov    eax,DWORD PTR [ebp-0xc]
  427885:	xor    eax,ecx
  427887:	add    eax,edx
  427889:	mov    DWORD PTR [ebp-0x28],eax
  42788c:	mov    edi,DWORD PTR [ebp-0x20]
  42788f:	mov    ebx,DWORD PTR [ebp-0x8]
  427892:	mov    esi,0x8aa
  427897:	xor    edi,esi
  427899:	mov    eax,0x72f1
  42789e:	xor    ebx,esi
  4278a0:	add    edi,eax
  4278a2:	add    ebx,eax
  4278a4:	sub    ebx,edi
  4278a6:	mov    WORD PTR [ebp-0x8],bx
  4278aa:	jmp    0x42796f
  4278af:	mov    edi,DWORD PTR [ebp-0xc]
  4278b2:	mov    bx,WORD PTR [ebp-0x4]
  4278b6:	xor    edi,esi
  4278b8:	add    edi,eax
  4278ba:	cmp    bx,di
  4278bd:	je     0x4279b1
  4278c3:	mov    edi,DWORD PTR [ebp-0xc]
  4278c6:	mov    ebx,DWORD PTR [ebp+0xc]
  4278c9:	xor    edi,ecx
  4278cb:	add    edi,edx
  4278cd:	cmp    ebx,edi
  4278cf:	mov    di,WORD PTR [ebp-0x4]
  4278d3:	mov    bx,WORD PTR [ebp+0x8]
  4278d7:	je     0x427942
  4278d9:	cmp    bx,di
  4278dc:	je     0x42794b
  4278de:	mov    edi,DWORD PTR [ebp-0x20]
  4278e1:	mov    bx,WORD PTR [ebp+0x8]
  4278e5:	xor    edi,esi
  4278e7:	add    edi,eax
  4278e9:	cmp    bx,di
  4278ec:	jb     0x42790c
  4278ee:	mov    edi,DWORD PTR [ebp-0x2c]
  4278f1:	mov    bx,WORD PTR [ebp+0x8]
  4278f5:	xor    edi,esi
  4278f7:	add    edi,eax
  4278f9:	cmp    bx,di
  4278fc:	ja     0x42790c
  4278fe:	movzx  edi,WORD PTR [ebp+0x8]
  427902:	movzx  ebx,WORD PTR [ebp-0x8]
  427906:	add    edi,ebx
  427908:	mov    WORD PTR [ebp+0x8],di
  42790c:	mov    edi,DWORD PTR [ebp-0x20]
  42790f:	mov    bx,WORD PTR [ebp-0x4]
  427913:	xor    edi,esi
  427915:	add    edi,eax
  427917:	cmp    bx,di
  42791a:	jb     0x42793a
  42791c:	mov    edi,DWORD PTR [ebp-0x2c]
  42791f:	mov    bx,WORD PTR [ebp-0x4]
  427923:	xor    edi,esi
  427925:	add    edi,eax
  427927:	cmp    bx,di
  42792a:	ja     0x42793a
  42792c:	movzx  edi,WORD PTR [ebp-0x4]
  427930:	movzx  ebx,WORD PTR [ebp-0x8]
  427934:	add    edi,ebx
  427936:	mov    WORD PTR [ebp-0x4],di
  42793a:	mov    di,WORD PTR [ebp-0x4]
  42793e:	mov    bx,WORD PTR [ebp+0x8]
  427942:	cmp    bx,di
  427945:	jne    0x427a3f
  42794b:	mov    edi,DWORD PTR [ebp-0x1c]
  42794e:	mov    ebx,DWORD PTR [ebp-0x10]
  427951:	xor    edi,ecx
  427953:	lea    edi,[edi+ebx*1+0x3272f1]
  42795a:	mov    DWORD PTR [ebp-0x10],edi
  42795d:	mov    edi,DWORD PTR [ebp-0x1c]
  427960:	mov    ebx,DWORD PTR [ebp-0x14]
  427963:	xor    edi,ecx
  427965:	lea    edi,[edi+ebx*1+0x3272f1]
  42796c:	mov    DWORD PTR [ebp-0x14],edi
  42796f:	mov    edi,DWORD PTR [ebp-0x24]
  427972:	mov    ebx,DWORD PTR [ebp-0x10]
  427975:	mov    di,WORD PTR [ebx+edi*2]
  427979:	mov    WORD PTR [ebp+0x8],di
  42797d:	mov    edi,DWORD PTR [ebp-0x28]
  427980:	mov    ebx,DWORD PTR [ebp-0x14]
  427983:	mov    di,WORD PTR [ebx+edi*2]
  427987:	mov    WORD PTR [ebp-0x4],di
  42798b:	mov    edi,DWORD PTR [ebp-0xc]
  42798e:	mov    bx,WORD PTR [ebp+0x8]
  427992:	xor    edi,esi
  427994:	add    edi,eax
  427996:	cmp    bx,di
  427999:	jne    0x4278af
  42799f:	mov    eax,DWORD PTR [ebp-0x18]
  4279a2:	mov    esi,DWORD PTR [ebp-0xc]
  4279a5:	xor    eax,ecx
  4279a7:	add    eax,edx
  4279a9:	imul   eax,esi
  4279ac:	mov    DWORD PTR [ebp-0xc],eax
  4279af:	jmp    0x4279c3
  4279b1:	mov    eax,DWORD PTR [ebp-0xc]
  4279b4:	mov    esi,DWORD PTR [ebp-0x18]
  4279b7:	xor    eax,ecx
  4279b9:	lea    eax,[eax+esi*1+0x3272f1]
  4279c0:	mov    DWORD PTR [ebp-0x18],eax
  4279c3:	mov    eax,DWORD PTR [ebp-0x24]
  4279c6:	sub    eax,edx
  4279c8:	xor    eax,ecx
  4279ca:	mov    DWORD PTR [ebp-0x30],eax
  4279cd:	mov    eax,DWORD PTR [ebp-0x28]
  4279d0:	sub    eax,edx
  4279d2:	xor    eax,ecx
  4279d4:	mov    DWORD PTR [ebp-0x34],eax
  4279d7:	mov    eax,DWORD PTR [ebp-0x34]
  4279da:	mov    esi,DWORD PTR [ebp-0x1c]
  4279dd:	xor    esi,ecx
  4279df:	add    esi,edx
  4279e1:	xor    eax,ecx
  4279e3:	add    eax,0x3272f1
  4279e8:	imul   esi,eax
  4279eb:	mov    eax,DWORD PTR [ebp-0x14]
  4279ee:	movzx  eax,WORD PTR [esi+eax*1]
  4279f2:	mov    esi,DWORD PTR [ebp-0x30]
  4279f5:	mov    edi,DWORD PTR [ebp-0x1c]
  4279f8:	xor    esi,ecx
  4279fa:	add    esi,edx
  4279fc:	xor    edi,ecx
  4279fe:	add    edi,edx
  427a00:	imul   edi,esi
  427a03:	mov    esi,DWORD PTR [ebp-0x10]
  427a06:	movzx  esi,WORD PTR [edi+esi*1]
  427a0a:	sub    eax,edx
  427a0c:	sub    esi,edx
  427a0e:	xor    eax,ecx
  427a10:	xor    esi,ecx
  427a12:	cmp    esi,eax
  427a14:	jne    0x427a3f
  427a16:	mov    eax,DWORD PTR [ebp-0x30]
  427a19:	mov    esi,DWORD PTR [ebp-0x1c]
  427a1c:	xor    eax,ecx
  427a1e:	add    eax,0x3272f1
  427a23:	xor    esi,ecx
  427a25:	add    esi,edx
  427a27:	imul   esi,eax
  427a2a:	mov    eax,DWORD PTR [ebp-0x10]
  427a2d:	movzx  eax,WORD PTR [esi+eax*1]
  427a31:	mov    esi,DWORD PTR [ebp-0xc]
  427a34:	sub    eax,edx
  427a36:	xor    eax,ecx
  427a38:	cmp    eax,esi
  427a3a:	mov    eax,DWORD PTR [ebp-0xc]
  427a3d:	je     0x427a42
  427a3f:	mov    eax,DWORD PTR [ebp-0x18]
  427a42:	pop    edi
  427a43:	xor    eax,ecx
  427a45:	pop    esi
  427a46:	add    eax,edx
  427a48:	pop    ebx
  427a49:	leave  
  427a4a:	ret    0x8
  427a4d:	push   ebp
  427a4e:	mov    ebp,esp
  427a50:	push   ecx
  427a51:	mov    cx,WORD PTR [eax]
  427a54:	push   esi
  427a55:	mov    esi,0x3b5a
  427a5a:	sub    cx,si
  427a5d:	mov    esi,0x8a98
  427a62:	xor    cx,si
  427a65:	mov    esi,0x4e3e
  427a6a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a71:	mov    edx,0xf89c85a5
  427a76:	cmp    cx,si
  427a79:	je     0x427ad8
  427a7b:	push   ebx
  427a7c:	push   edi
  427a7d:	movzx  ecx,cx
  427a80:	mov    edi,0xffcd8d0f
  427a85:	mov    esi,0x75108aa
  427a8a:	mov    ebx,0x4f9a
  427a8f:	cmp    cx,bx
  427a92:	jne    0x427a97
  427a94:	mov    DWORD PTR [ebp-0x4],edx
  427a97:	lea    edx,[edi+0x1]
  427a9a:	xor    edx,esi
  427a9c:	mov    edi,edx
  427a9e:	xor    edi,esi
  427aa0:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427aa8:	mov    ebx,0x3b5a
  427aad:	sub    cx,bx
  427ab0:	mov    ebx,0x8a98
  427ab5:	xor    cx,bx
  427ab8:	mov    ebx,0x4e3e
  427abd:	cmp    cx,bx
  427ac0:	jne    0x427a8a
  427ac2:	mov    ecx,DWORD PTR [ebp-0x4]
  427ac5:	pop    edi
  427ac6:	pop    ebx
  427ac7:	cmp    ecx,0xf89c85a4
  427acd:	je     0x427ad8
  427acf:	xor    ecx,esi
  427ad1:	lea    eax,[eax+ecx*2+0x64e5e4]
  427ad8:	pop    esi
  427ad9:	leave  
  427ada:	ret    
  427adb:	push   ebp
  427adc:	mov    ebp,esp
  427ade:	push   ecx
  427adf:	push   esi
  427ae0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ae7:	mov    esi,0xf89c85a5
  427aec:	call   0x427a4d
  427af1:	mov    cl,BYTE PTR [eax]
  427af3:	dec    cl
  427af5:	xor    cl,0x7c
  427af8:	cmp    cl,0x83
  427afb:	je     0x427b60
  427afd:	push   ebx
  427afe:	push   edi
  427aff:	mov    edx,eax
  427b01:	mov    edi,0xffcd8d0f
  427b06:	mov    ecx,0x75108aa
  427b0b:	mov    dx,WORD PTR [edx]
  427b0e:	mov    ebx,0x3b5a
  427b13:	sub    dx,bx
  427b16:	mov    ebx,0x8a98
  427b1b:	xor    dx,bx
  427b1e:	mov    ebx,0x4e4c
  427b23:	cmp    dx,bx
  427b26:	jne    0x427b2b
  427b28:	mov    DWORD PTR [ebp-0x4],esi
  427b2b:	lea    esi,[edi+0x1]
  427b2e:	xor    esi,ecx
  427b30:	mov    edi,esi
  427b32:	xor    edi,ecx
  427b34:	lea    edx,[eax+edi*2+0x64e5e2]
  427b3b:	mov    bl,BYTE PTR [edx]
  427b3d:	dec    bl
  427b3f:	xor    bl,0x7c
  427b42:	cmp    bl,0x83
  427b45:	jne    0x427b0b
  427b47:	mov    edx,DWORD PTR [ebp-0x4]
  427b4a:	pop    edi
  427b4b:	pop    ebx
  427b4c:	cmp    edx,0xf89c85a4
  427b52:	je     0x427b60
  427b54:	xor    edx,ecx
  427b56:	xor    ecx,ecx
  427b58:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427b60:	pop    esi
  427b61:	leave  
  427b62:	ret    
  427b63:	push   ebp
  427b64:	mov    ebp,esp
  427b66:	push   ecx
  427b67:	push   esi
  427b68:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b6f:	mov    esi,0xf89c85a5
  427b74:	call   0x427a4d
  427b79:	mov    cx,WORD PTR [eax]
  427b7c:	mov    edx,0x3b5a
  427b81:	sub    cx,dx
  427b84:	mov    edx,0x8a98
  427b89:	xor    cx,dx
  427b8c:	mov    edx,0x4e3e
  427b91:	cmp    cx,dx
  427b94:	je     0x427bed
  427b96:	push   ebx
  427b97:	push   edi
  427b98:	movzx  ecx,cx
  427b9b:	mov    edx,0xffcd8d0f
  427ba0:	mov    edi,0x75108aa
  427ba5:	mov    ebx,0x4e4c
  427baa:	cmp    cx,bx
  427bad:	jne    0x427bb2
  427baf:	mov    DWORD PTR [ebp-0x4],esi
  427bb2:	lea    esi,[edx+0x1]
  427bb5:	xor    esi,edi
  427bb7:	mov    edx,esi
  427bb9:	xor    edx,edi
  427bbb:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427bc3:	mov    ebx,0x3b5a
  427bc8:	sub    cx,bx
  427bcb:	mov    ebx,0x8a98
  427bd0:	xor    cx,bx
  427bd3:	mov    ebx,0x4e3e
  427bd8:	cmp    cx,bx
  427bdb:	jne    0x427ba5
  427bdd:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427be4:	pop    edi
  427be5:	pop    ebx
  427be6:	je     0x427bed
  427be8:	xor    eax,eax
  427bea:	inc    eax
  427beb:	jmp    0x427bef
  427bed:	xor    eax,eax
  427bef:	pop    esi
  427bf0:	leave  
  427bf1:	ret    
  427bf2:	push   ebp
  427bf3:	mov    ebp,esp
  427bf5:	push   ecx
  427bf6:	mov    eax,DWORD PTR [ebp+0x8]
  427bf9:	movzx  ecx,WORD PTR [eax]
  427bfc:	push   esi
  427bfd:	lea    eax,[ecx-0x3b5a]
  427c03:	mov    esi,0x8a98
  427c08:	push   edi
  427c09:	xor    eax,esi
  427c0b:	mov    edi,0x4e3e
  427c10:	mov    DWORD PTR [ebp-0x4],edx
  427c13:	cmp    ax,di
  427c16:	je     0x427c43
  427c18:	mov    eax,DWORD PTR [ebp+0x8]
  427c1b:	sub    eax,edx
  427c1d:	mov    DWORD PTR [ebp+0x8],eax
  427c20:	jmp    0x427c25
  427c22:	mov    eax,DWORD PTR [ebp+0x8]
  427c25:	mov    WORD PTR [edx],cx
  427c28:	add    edx,0x2
  427c2b:	movzx  edi,WORD PTR [eax+edx*1]
  427c2f:	mov    ecx,edi
  427c31:	add    edi,0xffffc4a6
  427c37:	xor    edi,esi
  427c39:	mov    eax,0x4e3e
  427c3e:	cmp    di,ax
  427c41:	jne    0x427c22
  427c43:	xor    eax,eax
  427c45:	pop    edi
  427c46:	mov    WORD PTR [edx],ax
  427c49:	mov    eax,DWORD PTR [ebp-0x4]
  427c4c:	pop    esi
  427c4d:	leave  
  427c4e:	ret    0x4
  427c51:	push   ebp
  427c52:	mov    ebp,esp
  427c54:	sub    esp,0x18
  427c57:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427c5e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427c65:	mov    ecx,DWORD PTR [ebp-0x8]
  427c68:	push   esi
  427c69:	mov    eax,0x75108aa
  427c6e:	xor    ecx,eax
  427c70:	mov    esi,0x3272f1
  427c75:	add    ecx,esi
  427c77:	mov    DWORD PTR [ebp-0x4],ecx
  427c7a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427c81:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427c88:	push   edi
  427c89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427c90:	jmp    0x427d31
  427c95:	mov    ecx,DWORD PTR [ebp-0x4]
  427c98:	mov    edx,DWORD PTR [ebp+0x10]
  427c9b:	sub    edx,ecx
  427c9d:	mov    ecx,DWORD PTR [ebp-0xc]
  427ca0:	xor    ecx,eax
  427ca2:	add    ecx,esi
  427ca4:	cmp    edx,ecx
  427ca6:	jbe    0x427cc3
  427ca8:	mov    edx,DWORD PTR [ebp-0x4]
  427cab:	add    edx,DWORD PTR [ebp+0x8]
  427cae:	mov    ecx,DWORD PTR [ebp-0x4]
  427cb1:	add    ecx,DWORD PTR [ebp+0xc]
  427cb4:	mov    edi,DWORD PTR [ecx]
  427cb6:	mov    DWORD PTR [edx],edi
  427cb8:	mov    ecx,DWORD PTR [ecx+0x4]
  427cbb:	mov    DWORD PTR [edx+0x4],ecx
  427cbe:	mov    ecx,DWORD PTR [ebp-0xc]
  427cc1:	jmp    0x427d10
  427cc3:	mov    ecx,DWORD PTR [ebp-0x4]
  427cc6:	mov    edx,DWORD PTR [ebp+0x10]
  427cc9:	sub    edx,ecx
  427ccb:	mov    ecx,DWORD PTR [ebp-0x10]
  427cce:	xor    ecx,eax
  427cd0:	add    ecx,esi
  427cd2:	cmp    edx,ecx
  427cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  427cd7:	jbe    0x427ceb
  427cd9:	add    ecx,DWORD PTR [ebp+0x8]
  427cdc:	mov    edx,DWORD PTR [ebp-0x4]
  427cdf:	add    edx,DWORD PTR [ebp+0xc]
  427ce2:	mov    edx,DWORD PTR [edx]
  427ce4:	mov    DWORD PTR [ecx],edx
  427ce6:	mov    ecx,DWORD PTR [ebp-0x10]
  427ce9:	jmp    0x427d10
  427ceb:	mov    edx,DWORD PTR [ebp+0x10]
  427cee:	sub    edx,ecx
  427cf0:	mov    ecx,DWORD PTR [ebp-0x14]
  427cf3:	xor    ecx,eax
  427cf5:	add    ecx,esi
  427cf7:	cmp    edx,ecx
  427cf9:	mov    ecx,DWORD PTR [ebp-0x4]
  427cfc:	jbe    0x427d21
  427cfe:	add    ecx,DWORD PTR [ebp+0x8]
  427d01:	mov    edx,DWORD PTR [ebp-0x4]
  427d04:	add    edx,DWORD PTR [ebp+0xc]
  427d07:	mov    dx,WORD PTR [edx]
  427d0a:	mov    WORD PTR [ecx],dx
  427d0d:	mov    ecx,DWORD PTR [ebp-0x14]
  427d10:	mov    edx,DWORD PTR [ebp-0x4]
  427d13:	xor    ecx,eax
  427d15:	lea    ecx,[ecx+edx*1+0x3272f1]
  427d1c:	mov    DWORD PTR [ebp-0x4],ecx
  427d1f:	jmp    0x427d31
  427d21:	add    ecx,DWORD PTR [ebp+0x8]
  427d24:	mov    edx,DWORD PTR [ebp-0x4]
  427d27:	add    edx,DWORD PTR [ebp+0xc]
  427d2a:	mov    dl,BYTE PTR [edx]
  427d2c:	mov    BYTE PTR [ecx],dl
  427d2e:	inc    DWORD PTR [ebp-0x4]
  427d31:	mov    ecx,DWORD PTR [ebp-0x18]
  427d34:	mov    edx,DWORD PTR [ebp+0x10]
  427d37:	xor    ecx,eax
  427d39:	add    ecx,esi
  427d3b:	imul   ecx,edx
  427d3e:	mov    edx,DWORD PTR [ebp-0x8]
  427d41:	mov    edi,DWORD PTR [ebp-0x4]
  427d44:	xor    edx,eax
  427d46:	lea    edx,[edx+edi*1+0x3272f1]
  427d4d:	cmp    edx,ecx
  427d4f:	jb     0x427c95
  427d55:	pop    edi
  427d56:	pop    esi
  427d57:	leave  
  427d58:	ret    0xc
  427d5b:	push   ebp
  427d5c:	mov    ebp,esp
  427d5e:	sub    esp,0xc
  427d61:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427d68:	push   esi
  427d69:	mov    esi,eax
  427d6b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427d72:	mov    edx,DWORD PTR [ebp-0x4]
  427d75:	mov    eax,0x75108aa
  427d7a:	xor    edx,eax
  427d7c:	mov    ecx,0x3272f1
  427d81:	add    edx,ecx
  427d83:	cmp    esi,edx
  427d85:	je     0x427dc7
  427d87:	push   ebx
  427d88:	push   edi
  427d89:	mov    edx,DWORD PTR [ebp-0x8]
  427d8c:	mov    ebx,DWORD PTR [ebp+0x8]
  427d8f:	xor    edx,eax
  427d91:	mov    edi,0xffcd8d0f
  427d96:	sub    edi,edx
  427d98:	add    esi,edi
  427d9a:	lea    edx,[esi-0x3272f1]
  427da0:	xor    edx,eax
  427da2:	mov    DWORD PTR [ebp-0xc],edx
  427da5:	mov    edx,DWORD PTR [ebp-0x4]
  427da8:	mov    edi,DWORD PTR [ebp-0xc]
  427dab:	xor    dl,0xaa
  427dae:	sub    dl,0xf
  427db1:	xor    edi,eax
  427db3:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427dba:	mov    edx,DWORD PTR [ebp-0x4]
  427dbd:	xor    edx,eax
  427dbf:	add    edx,ecx
  427dc1:	cmp    esi,edx
  427dc3:	jne    0x427d89
  427dc5:	pop    edi
  427dc6:	pop    ebx
  427dc7:	pop    esi
  427dc8:	leave  
  427dc9:	ret    0x4
  427dcc:	push   ebp
  427dcd:	mov    ebp,esp
  427dcf:	sub    esp,0x21c
  427dd5:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427ddc:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427de3:	mov    eax,DWORD PTR [ebp+0x10]
  427de6:	mov    eax,DWORD PTR [ebp-0x4]
  427de9:	mov    ecx,DWORD PTR [ebp+0x8]
  427dec:	push   esi
  427ded:	push   edi
  427dee:	mov    edi,0x75108aa
  427df3:	xor    eax,edi
  427df5:	mov    esi,0x3272f1
  427dfa:	add    eax,esi
  427dfc:	cmp    eax,ecx
  427dfe:	mov    eax,DWORD PTR [ebp-0x4]
  427e01:	jne    0x427e0c
  427e03:	xor    eax,edi
  427e05:	add    eax,esi
  427e07:	jmp    0x427eb8
  427e0c:	mov    ecx,DWORD PTR [ebp+0xc]
  427e0f:	xor    eax,edi
  427e11:	add    eax,esi
  427e13:	cmp    eax,ecx
  427e15:	jne    0x427e1c
  427e17:	mov    eax,DWORD PTR [ebp-0x4]
  427e1a:	jmp    0x427e03
  427e1c:	lea    eax,[ebp-0x21c]
  427e22:	mov    DWORD PTR [ebp-0x8],eax
  427e25:	mov    eax,DWORD PTR [ebp+0xc]
  427e28:	mov    DWORD PTR [ebp-0x10],eax
  427e2b:	mov    eax,DWORD PTR [ebp-0x4]
  427e2e:	xor    eax,edi
  427e30:	add    eax,esi
  427e32:	mov    DWORD PTR [ebp+0x10],eax
  427e35:	mov    eax,DWORD PTR [ebp+0xc]
  427e38:	push   ebx
  427e39:	call   0x427b63
  427e3e:	mov    ebx,eax
  427e40:	mov    eax,DWORD PTR [ebp+0x8]
  427e43:	mov    eax,DWORD PTR [eax+0x14]
  427e46:	jmp    0x427ea0
  427e48:	mov    eax,DWORD PTR [ebp+0xc]
  427e4b:	sub    eax,0x8
  427e4e:	mov    DWORD PTR [ebp-0xc],eax
  427e51:	mov    eax,DWORD PTR [ebp-0xc]
  427e54:	mov    eax,DWORD PTR [eax+0x28]
  427e57:	call   0x427a4d
  427e5c:	mov    DWORD PTR [ebp+0x10],eax
  427e5f:	push   DWORD PTR [ebp+0x10]
  427e62:	mov    edx,DWORD PTR [ebp-0x8]
  427e65:	call   0x427bf2
  427e6a:	mov    eax,DWORD PTR [ebp-0x4]
  427e6d:	xor    eax,edi
  427e6f:	add    eax,esi
  427e71:	cmp    eax,ebx
  427e73:	jne    0x427e7d
  427e75:	mov    eax,DWORD PTR [ebp-0x8]
  427e78:	call   0x427adb
  427e7d:	mov    eax,DWORD PTR [ebp-0x14]
  427e80:	xor    eax,edi
  427e82:	add    eax,esi
  427e84:	push   eax
  427e85:	push   DWORD PTR [ebp-0x10]
  427e88:	mov    eax,DWORD PTR [ebp-0x8]
  427e8b:	call   0x427807
  427e90:	mov    ecx,DWORD PTR [ebp-0x4]
  427e93:	xor    ecx,edi
  427e95:	add    ecx,esi
  427e97:	cmp    eax,ecx
  427e99:	je     0x427ebe
  427e9b:	mov    eax,DWORD PTR [ebp+0xc]
  427e9e:	mov    eax,DWORD PTR [eax]
  427ea0:	mov    DWORD PTR [ebp+0xc],eax
  427ea3:	mov    eax,DWORD PTR [ebp+0x8]
  427ea6:	mov    ecx,DWORD PTR [ebp+0xc]
  427ea9:	add    eax,0x14
  427eac:	cmp    ecx,eax
  427eae:	jne    0x427e48
  427eb0:	mov    eax,DWORD PTR [ebp-0x4]
  427eb3:	xor    eax,edi
  427eb5:	add    eax,esi
  427eb7:	pop    ebx
  427eb8:	pop    edi
  427eb9:	pop    esi
  427eba:	leave  
  427ebb:	ret    0xc
  427ebe:	mov    eax,DWORD PTR [ebp-0xc]
  427ec1:	mov    eax,DWORD PTR [eax+0x18]
  427ec4:	jmp    0x427eb7
  427ec6:	push   ebp
  427ec7:	mov    ebp,esp
  427ec9:	mov    eax,DWORD PTR [ebp+0xc]
  427ecc:	sub    esp,0x10
  427ecf:	cmp    DWORD PTR [ebp+0x8],0x0
  427ed3:	push   ebx
  427ed4:	push   esi
  427ed5:	push   edi
  427ed6:	je     0x427f8b
  427edc:	test   eax,eax
  427ede:	je     0x427f8b
  427ee4:	movzx  eax,WORD PTR [eax+0x20]
  427ee8:	mov    ecx,eax
  427eea:	mov    DWORD PTR [ebp-0x10],eax
  427eed:	xor    edx,edx
  427eef:	and    DWORD PTR [ebp-0x8],edx
  427ef2:	mov    eax,0x8a98
  427ef7:	xor    ecx,eax
  427ef9:	add    ecx,0x3b5a
  427eff:	mov    DWORD PTR [ebp-0xc],ecx
  427f02:	and    DWORD PTR [ebp-0x4],0x0
  427f06:	xor    ecx,ecx
  427f08:	push   0x7d
  427f0a:	pop    edi
  427f0b:	cmp    cx,WORD PTR [ebp-0xc]
  427f0f:	jae    0x427f75
  427f11:	lea    esi,[edx-0x3b5a]
  427f17:	xor    esi,eax
  427f19:	movzx  ecx,WORD PTR [ebp-0x4]
  427f1d:	mov    ebx,DWORD PTR [ebp+0xc]
  427f20:	lea    ecx,[ebx+ecx*4]
  427f23:	cmp    WORD PTR [ecx+0x2],si
  427f27:	jne    0x427f60
  427f29:	movzx  ecx,WORD PTR [ecx]
  427f2c:	mov    edi,0x4e3e
  427f31:	cmp    cx,di
  427f34:	jne    0x427f42
  427f36:	mov    ebx,DWORD PTR [ebp+0x8]
  427f39:	movzx  edi,dx
  427f3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  427f40:	je     0x427f6f
  427f42:	mov    ebx,DWORD PTR [ebp+0x8]
  427f45:	movzx  edi,dx
  427f48:	movsx  di,BYTE PTR [edi+ebx*1]
  427f4d:	mov    ebx,0x3b5a
  427f52:	sub    di,bx
  427f55:	xor    di,ax
  427f58:	cmp    cx,di
  427f5b:	je     0x427f6f
  427f5d:	push   0xffffff83
  427f5f:	pop    edi
  427f60:	inc    DWORD PTR [ebp-0x4]
  427f63:	mov    cx,WORD PTR [ebp-0xc]
  427f67:	cmp    WORD PTR [ebp-0x4],cx
  427f6b:	jb     0x427f19
  427f6d:	jmp    0x427f75
  427f6f:	inc    DWORD PTR [ebp-0x8]
  427f72:	push   0x7c
  427f74:	pop    edi
  427f75:	mov    esi,DWORD PTR [ebp+0x8]
  427f78:	movzx  ecx,dx
  427f7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427f7f:	je     0x427f94
  427f81:	inc    edx
  427f82:	cmp    edi,0xffffff83
  427f85:	jne    0x427f02
  427f8b:	xor    eax,eax
  427f8d:	pop    edi
  427f8e:	pop    esi
  427f8f:	pop    ebx
  427f90:	leave  
  427f91:	ret    0x8
  427f94:	mov    ecx,DWORD PTR [ebp-0x8]
  427f97:	add    ecx,0xffffc4a6
  427f9d:	xor    cx,ax
  427fa0:	xor    eax,eax
  427fa2:	cmp    cx,WORD PTR [ebp-0x10]
  427fa6:	sete   al
  427fa9:	jmp    0x427f8d
  427fab:	push   ebp
  427fac:	mov    ebp,esp
  427fae:	sub    esp,0x50
  427fb1:	push   edi
  427fb2:	mov    edi,eax
  427fb4:	mov    eax,DWORD PTR [edi+0x1a8]
  427fba:	cmp    DWORD PTR [eax],0x0
  427fbd:	jne    0x427fc6
  427fbf:	xor    eax,eax
  427fc1:	jmp    0x4280f7
  427fc6:	push   DWORD PTR [ebp+0x8]
  427fc9:	push   0x2c
  427fcb:	pop    eax
  427fcc:	call   0x427d5b
  427fd1:	mov    edx,DWORD PTR [edi+0x1ac]
  427fd7:	lea    eax,[edi+0x22]
  427fda:	mov    DWORD PTR [ebp-0x4c],eax
  427fdd:	lea    eax,[edi+0x44]
  427fe0:	mov    DWORD PTR [ebp-0x48],eax
  427fe3:	lea    eax,[edi+0x66]
  427fe6:	mov    DWORD PTR [ebp-0x44],eax
  427fe9:	lea    eax,[edi+0x88]
  427fef:	mov    DWORD PTR [ebp-0x40],eax
  427ff2:	lea    eax,[edi+0xaa]
  427ff8:	mov    DWORD PTR [ebp-0x3c],eax
  427ffb:	lea    eax,[edi+0xcc]
  428001:	mov    DWORD PTR [ebp-0x38],eax
  428004:	lea    eax,[edi+0xee]
  42800a:	mov    DWORD PTR [ebp-0x34],eax
  42800d:	lea    eax,[edi+0x110]
  428013:	mov    DWORD PTR [ebp-0x30],eax
  428016:	lea    eax,[edi+0x132]
  42801c:	mov    DWORD PTR [ebp-0x2c],eax
  42801f:	lea    eax,[edi+0x154]
  428025:	push   edi
  428026:	mov    DWORD PTR [ebp-0x50],edi
  428029:	mov    DWORD PTR [ebp-0x28],eax
  42802c:	call   0x42812b
  428031:	push   eax
  428032:	mov    eax,DWORD PTR [edi+0x1a8]
  428038:	push   DWORD PTR [eax]
  42803a:	call   0x427dcc
  42803f:	mov    DWORD PTR [ebp-0x10],eax
  428042:	test   eax,eax
  428044:	je     0x4280f7
  42804a:	mov    ecx,DWORD PTR [eax+0x3c]
  42804d:	push   ebx
  42804e:	push   esi
  42804f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428053:	add    esi,eax
  428055:	mov    edi,DWORD PTR [esi+0x24]
  428058:	mov    ecx,DWORD PTR [esi+0x1c]
  42805b:	mov    edx,DWORD PTR [esi+0x20]
  42805e:	mov    ebx,DWORD PTR [esi+0x18]
  428061:	add    edi,eax
  428063:	mov    DWORD PTR [ebp-0x20],edi
  428066:	mov    edi,DWORD PTR [esi+0x14]
  428069:	add    ecx,eax
  42806b:	add    edx,eax
  42806d:	mov    DWORD PTR [ebp-0xc],ecx
  428070:	mov    DWORD PTR [ebp-0x1c],edx
  428073:	mov    DWORD PTR [ebp-0x8],edi
  428076:	cmp    edi,ebx
  428078:	ja     0x42807d
  42807a:	mov    DWORD PTR [ebp-0x8],ebx
  42807d:	xor    ebx,ebx
  42807f:	mov    DWORD PTR [ebp-0x18],ebx
  428082:	cmp    DWORD PTR [ebp-0x8],ebx
  428085:	jbe    0x4280f5
  428087:	jmp    0x42808c
  428089:	mov    edx,DWORD PTR [ebp-0x1c]
  42808c:	mov    edi,DWORD PTR [ebp-0x20]
  42808f:	movzx  edi,WORD PTR [edi+ebx*2]
  428093:	cmp    ebx,DWORD PTR [esi+0x18]
  428096:	jae    0x4280f5
  428098:	cmp    edi,DWORD PTR [esi+0x14]
  42809b:	jae    0x4280f5
  42809d:	mov    ebx,DWORD PTR [edx+ebx*4]
  4280a0:	mov    edx,DWORD PTR [ebp+0x8]
  4280a3:	mov    edi,DWORD PTR [ecx+edi*4]
  4280a6:	mov    DWORD PTR [ebp-0x4],edx
  4280a9:	lea    edx,[ebp-0x50]
  4280ac:	add    ebx,eax
  4280ae:	add    edi,eax
  4280b0:	sub    edx,DWORD PTR [ebp+0x8]
  4280b3:	mov    DWORD PTR [ebp-0x14],0xb
  4280ba:	mov    DWORD PTR [ebp-0x24],edx
  4280bd:	mov    edx,DWORD PTR [ebp-0x4]
  4280c0:	cmp    DWORD PTR [edx],0x0
  4280c3:	jne    0x4280e0
  4280c5:	mov    eax,DWORD PTR [ebp-0x24]
  4280c8:	push   DWORD PTR [eax+edx*1]
  4280cb:	push   ebx
  4280cc:	call   0x427ec6
  4280d1:	mov    ecx,DWORD PTR [ebp-0xc]
  4280d4:	test   eax,eax
  4280d6:	je     0x4280dd
  4280d8:	mov    eax,DWORD PTR [ebp-0x4]
  4280db:	mov    DWORD PTR [eax],edi
  4280dd:	mov    eax,DWORD PTR [ebp-0x10]
  4280e0:	add    DWORD PTR [ebp-0x4],0x4
  4280e4:	dec    DWORD PTR [ebp-0x14]
  4280e7:	jne    0x4280bd
  4280e9:	mov    ebx,DWORD PTR [ebp-0x18]
  4280ec:	inc    ebx
  4280ed:	mov    DWORD PTR [ebp-0x18],ebx
  4280f0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4280f3:	jb     0x428089
  4280f5:	pop    esi
  4280f6:	pop    ebx
  4280f7:	pop    edi
  4280f8:	leave  
  4280f9:	ret    0x4
  4280fc:	push   ebp
  4280fd:	mov    ebp,esp
  4280ff:	mov    eax,DWORD PTR [ebp+0x8]
  428102:	push   esi
  428103:	push   DWORD PTR [eax+0x1e0]
  428109:	lea    esi,[eax+0x198]
  42810f:	mov    eax,DWORD PTR [ebp+0x8]
  428112:	call   0x427fab
  428117:	mov    ecx,DWORD PTR [esi]
  428119:	mov    DWORD PTR [ecx],eax
  42811b:	mov    eax,DWORD PTR [esi]
  42811d:	xor    ecx,ecx
  42811f:	cmp    DWORD PTR [eax],ecx
  428121:	pop    esi
  428122:	setne  cl
  428125:	mov    eax,ecx
  428127:	pop    ebp
  428128:	ret    0x4
  42812b:	mov    ecx,DWORD PTR [edi+0x188]
  428131:	push   ebx
  428132:	jmp    0x428147
  428134:	xor    eax,0x8a98
  428139:	add    eax,0x3b5a
  42813e:	mov    WORD PTR [ecx],ax
  428141:	add    ecx,0x2
  428144:	add    edx,0x2
  428147:	movzx  eax,WORD PTR [edx]
  42814a:	mov    ebx,0x4e3e
  42814f:	cmp    ax,bx
  428152:	jne    0x428134
  428154:	xor    eax,eax
  428156:	mov    WORD PTR [ecx],ax
  428159:	mov    eax,DWORD PTR [edi+0x188]
  42815f:	pop    ebx
  428160:	ret    
  428161:	push   edi
  428162:	mov    edi,eax
  428164:	mov    eax,DWORD PTR [esi+0x188]
  42816a:	shl    edi,0x6
  42816d:	add    eax,edi
  42816f:	jmp    0x42817a
  428171:	xor    cl,0x7c
  428174:	inc    cl
  428176:	mov    BYTE PTR [eax],cl
  428178:	inc    eax
  428179:	inc    edx
  42817a:	mov    cl,BYTE PTR [edx]
  42817c:	cmp    cl,0x83
  42817f:	jne    0x428171
  428181:	mov    BYTE PTR [eax],0x0
  428184:	mov    eax,DWORD PTR [esi+0x188]
  42818a:	add    eax,edi
  42818c:	pop    edi
  42818d:	ret    
  42818e:	push   ebp
  42818f:	mov    ebp,esp
  428191:	sub    esp,0x14
  428194:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42819b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  4281a2:	mov    eax,DWORD PTR [ebx]
  4281a4:	mov    DWORD PTR [ebp-0x8],eax
  4281a7:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4281ae:	push   esi
  4281af:	push   edi
  4281b0:	mov    DWORD PTR [ebp-0x14],0xead71885
  4281b7:	mov    edi,DWORD PTR [ebp-0x4]
  4281ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4281bd:	mov    eax,0x75108aa
  4281c2:	xor    edi,eax
  4281c4:	mov    edx,0x3272f1
  4281c9:	xor    ecx,eax
  4281cb:	add    edi,edx
  4281cd:	add    ecx,edx
  4281cf:	imul   edi,ecx
  4281d2:	jmp    0x42821a
  4281d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281d7:	mov    esi,DWORD PTR [ebp-0x4]
  4281da:	xor    ecx,eax
  4281dc:	xor    esi,eax
  4281de:	add    ecx,edx
  4281e0:	add    esi,edx
  4281e2:	test   esi,ecx
  4281e4:	mov    esi,DWORD PTR [ebp-0x8]
  4281e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4281ea:	je     0x428201
  4281ec:	xor    ecx,eax
  4281ee:	xor    esi,eax
  4281f0:	add    ecx,edx
  4281f2:	add    esi,edx
  4281f4:	shr    esi,cl
  4281f6:	mov    ecx,DWORD PTR [ebp-0x14]
  4281f9:	xor    ecx,eax
  4281fb:	add    ecx,edx
  4281fd:	xor    esi,ecx
  4281ff:	jmp    0x42820b
  428201:	xor    esi,eax
  428203:	xor    ecx,eax
  428205:	add    esi,edx
  428207:	add    ecx,edx
  428209:	shr    esi,cl
  42820b:	mov    DWORD PTR [ebp-0x8],esi
  42820e:	mov    ecx,DWORD PTR [ebp-0x4]
  428211:	xor    ecx,eax
  428213:	lea    edi,[edi+ecx*1+0x3272f1]
  42821a:	mov    ecx,DWORD PTR [ebp-0xc]
  42821d:	mov    esi,DWORD PTR [ebp-0x4]
  428220:	xor    esi,eax
  428222:	xor    ecx,eax
  428224:	sub    ecx,esi
  428226:	cmp    edi,ecx
  428228:	jbe    0x4281d4
  42822a:	mov    eax,DWORD PTR [ebp-0x8]
  42822d:	pop    edi
  42822e:	mov    DWORD PTR [ebx],eax
  428230:	mov    eax,DWORD PTR [ebp-0x8]
  428233:	pop    esi
  428234:	leave  
  428235:	ret    
  428236:	push   ebp
  428237:	mov    ebp,esp
  428239:	sub    esp,0x38
  42823c:	push   ebx
  42823d:	mov    ebx,0xf89c85a5
  428242:	mov    DWORD PTR [ebp-0x4],ebx
  428245:	lea    ecx,[ebx+0x15]
  428248:	mov    DWORD PTR [ebp-0x24],ecx
  42824b:	mov    eax,DWORD PTR [ebp-0x4]
  42824e:	mov    edx,DWORD PTR [ebp+0x8]
  428251:	push   esi
  428252:	mov    esi,0x75108aa
  428257:	xor    eax,esi
  428259:	push   edi
  42825a:	mov    edi,0x3272f1
  42825f:	add    eax,edi
  428261:	cmp    edx,eax
  428263:	mov    eax,DWORD PTR [ebp-0x4]
  428266:	je     0x4283ca
  42826c:	mov    edx,DWORD PTR [ebp+0xc]
  42826f:	xor    eax,esi
  428271:	add    eax,edi
  428273:	cmp    edx,eax
  428275:	je     0x4283c7
  42827b:	mov    eax,DWORD PTR [ebp+0x10]
  42827e:	mov    edx,DWORD PTR [ebp+0xc]
  428281:	mov    DWORD PTR [ebp-0x14],eax
  428284:	mov    eax,DWORD PTR [ebp+0x8]
  428287:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42828e:	mov    DWORD PTR [ebp-0xc],eax
  428291:	lea    eax,[ebx+0x16]
  428294:	mov    DWORD PTR [ebp-0x1c],eax
  428297:	mov    DWORD PTR [ebp-0x10],ebx
  42829a:	mov    DWORD PTR [ebp+0xc],ecx
  42829d:	mov    DWORD PTR [ebp+0x10],eax
  4282a0:	mov    eax,DWORD PTR [ebp+0xc]
  4282a3:	xor    eax,esi
  4282a5:	mov    DWORD PTR [ebp-0x20],edx
  4282a8:	sub    edx,eax
  4282aa:	sub    edx,edi
  4282ac:	mov    DWORD PTR [ebp+0x8],edx
  4282af:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4282b6:	jmp    0x4283b7
  4282bb:	mov    eax,DWORD PTR [ebp+0xc]
  4282be:	mov    ecx,DWORD PTR [ebp+0xc]
  4282c1:	xor    eax,esi
  4282c3:	xor    ecx,esi
  4282c5:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4282cc:	mov    eax,DWORD PTR [ebp+0x8]
  4282cf:	xor    edx,edx
  4282d1:	div    ecx
  4282d3:	mov    eax,DWORD PTR [ebp+0x10]
  4282d6:	mov    ecx,DWORD PTR [ebp+0xc]
  4282d9:	xor    eax,esi
  4282db:	xor    ecx,esi
  4282dd:	sub    eax,ecx
  4282df:	cmp    edx,eax
  4282e1:	jne    0x428376
  4282e7:	mov    eax,DWORD PTR [ebp+0x8]
  4282ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ed:	mov    dl,BYTE PTR [eax+ecx*1]
  4282f0:	mov    eax,DWORD PTR [ebp-0x10]
  4282f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282f6:	xor    eax,esi
  4282f8:	xor    ecx,esi
  4282fa:	add    eax,edi
  4282fc:	add    ecx,edi
  4282fe:	cmp    eax,ecx
  428300:	jae    0x428348
  428302:	lea    ecx,[eax-0x3272f1]
  428308:	mov    DWORD PTR [ebp-0x4],ecx
  42830b:	mov    ebx,DWORD PTR [ebp-0x4]
  42830e:	xor    ebx,esi
  428310:	add    ebx,0x7f55d8fb
  428316:	lea    ecx,[ebp+eax*4-0x38]
  42831a:	mov    DWORD PTR [ecx],ebx
  42831c:	mov    ebx,DWORD PTR [ecx]
  42831e:	cmp    ebx,0x244ecb98
  428324:	jbe    0x42832e
  428326:	add    DWORD PTR [ecx],0x405fcd9
  42832c:	jmp    0x428334
  42832e:	add    DWORD PTR [ecx],0xfdaf4327
  428334:	mov    ecx,DWORD PTR [ebp-0x8]
  428337:	xor    ecx,esi
  428339:	inc    eax
  42833a:	inc    DWORD PTR [ebp-0x4]
  42833d:	add    ecx,edi
  42833f:	cmp    eax,ecx
  428341:	jb     0x42830b
  428343:	mov    ebx,0xf89c85a5
  428348:	cmp    DWORD PTR [ebp-0x14],0x0
  42834c:	jne    0x428355
  42834e:	xor    dl,0x7c
  428351:	inc    dl
  428353:	jmp    0x42836b
  428355:	mov    eax,DWORD PTR [ebp-0x18]
  428358:	xor    al,0xaa
  42835a:	mov    cl,0xf
  42835c:	sub    cl,al
  42835e:	add    dl,cl
  428360:	mov    ecx,DWORD PTR [ebp-0x1c]
  428363:	xor    cl,0xaa
  428366:	sub    cl,0xf
  428369:	ror    dl,cl
  42836b:	xor    eax,eax
  42836d:	mov    eax,DWORD PTR [ebp+0x8]
  428370:	mov    ecx,DWORD PTR [ebp-0xc]
  428373:	mov    BYTE PTR [eax+ecx*1],dl
  428376:	mov    eax,DWORD PTR [ebp+0x8]
  428379:	mov    ecx,DWORD PTR [ebp-0x10]
  42837c:	sub    eax,edi
  42837e:	xor    eax,esi
  428380:	cmp    eax,ecx
  428382:	jne    0x4283a5
  428384:	mov    eax,DWORD PTR [ebp+0x10]
  428387:	mov    ecx,DWORD PTR [ebp+0xc]
  42838a:	xor    eax,esi
  42838c:	xor    ecx,esi
  42838e:	sub    eax,ecx
  428390:	mov    ecx,DWORD PTR [ebp-0x20]
  428393:	sub    eax,edi
  428395:	xor    eax,esi
  428397:	mov    DWORD PTR [ebp+0x10],eax
  42839a:	mov    eax,DWORD PTR [ebp+0xc]
  42839d:	xor    eax,esi
  42839f:	sub    ecx,eax
  4283a1:	sub    ecx,edi
  4283a3:	jmp    0x4283b4
  4283a5:	mov    eax,DWORD PTR [ebp+0xc]
  4283a8:	xor    eax,esi
  4283aa:	mov    ecx,0xffcd8d0f
  4283af:	sub    ecx,eax
  4283b1:	add    ecx,DWORD PTR [ebp+0x8]
  4283b4:	mov    DWORD PTR [ebp+0x8],ecx
  4283b7:	mov    eax,DWORD PTR [ebp+0x10]
  4283ba:	cmp    eax,ebx
  4283bc:	jne    0x4282bb
  4283c2:	mov    eax,DWORD PTR [ebp-0x24]
  4283c5:	jmp    0x4283ca
  4283c7:	mov    eax,DWORD PTR [ebp-0x4]
  4283ca:	xor    eax,esi
  4283cc:	add    eax,edi
  4283ce:	pop    edi
  4283cf:	pop    esi
  4283d0:	pop    ebx
  4283d1:	leave  
  4283d2:	ret    0xc
  4283d5:	push   ebp
  4283d6:	mov    ebp,esp
  4283d8:	sub    esp,0x420
  4283de:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4283e5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4283ec:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4283f3:	push   ebx
  4283f4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4283fb:	mov    eax,DWORD PTR [ebp-0x14]
  4283fe:	push   esi
  4283ff:	mov    esi,0x75108aa
  428404:	push   edi
  428405:	xor    eax,esi
  428407:	mov    edi,0x3272f1
  42840c:	add    eax,edi
  42840e:	mov    DWORD PTR [ebp-0x8],eax
  428411:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428418:	mov    DWORD PTR [ebp-0x4],0xead71885
  42841f:	mov    DWORD PTR [ebp-0x10],0x8
  428426:	mov    ecx,ecx
  428428:	mov    eax,DWORD PTR [ebp-0xc]
  42842b:	mov    ecx,DWORD PTR [ebp-0x14]
  42842e:	xor    eax,esi
  428430:	xor    ecx,esi
  428432:	add    eax,edi
  428434:	add    ecx,edi
  428436:	imul   eax,ecx
  428439:	jmp    0x42846c
  42843b:	mov    eax,DWORD PTR [ebp-0x4]
  42843e:	sub    eax,edi
  428440:	xor    eax,esi
  428442:	mov    DWORD PTR [ebp-0x8],eax
  428445:	lea    ebx,[ebp-0x8]
  428448:	call   0x42818e
  42844d:	mov    DWORD PTR [ebp-0x8],eax
  428450:	mov    eax,DWORD PTR [ebp-0x8]
  428453:	mov    ecx,DWORD PTR [ebp-0x4]
  428456:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42845d:	mov    eax,DWORD PTR [ebp-0xc]
  428460:	mov    ecx,DWORD PTR [ebp-0x4]
  428463:	xor    eax,esi
  428465:	lea    eax,[eax+ecx*1+0x3272f1]
  42846c:	mov    DWORD PTR [ebp-0x4],eax
  42846f:	mov    eax,DWORD PTR [ebp-0x18]
  428472:	mov    ecx,DWORD PTR [ebp-0xc]
  428475:	xor    ecx,esi
  428477:	xor    eax,esi
  428479:	sub    eax,ecx
  42847b:	mov    ecx,DWORD PTR [ebp-0x4]
  42847e:	cmp    ecx,eax
  428480:	jbe    0x42843b
  428482:	mov    eax,DWORD PTR [ebp-0x1c]
  428485:	xor    eax,esi
  428487:	add    eax,edi
  428489:	mov    DWORD PTR [ebp-0x8],eax
  42848c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428493:	mov    ebx,ebx
  428495:	jmp    0x4284f8
  428497:	mov    ecx,DWORD PTR [ebp-0x20]
  42849a:	mov    eax,DWORD PTR [ebp-0x8]
  42849d:	xor    ecx,esi
  42849f:	add    ecx,edi
  4284a1:	shr    eax,cl
  4284a3:	mov    DWORD PTR [ebp-0x4],eax
  4284a6:	mov    eax,DWORD PTR [ebp+0x8]
  4284a9:	mov    cl,BYTE PTR [eax]
  4284ab:	mov    BYTE PTR [ebp+0xb],cl
  4284ae:	mov    cl,BYTE PTR [ebp+0xb]
  4284b1:	mov    edx,DWORD PTR [ebp-0x8]
  4284b4:	movzx  ecx,cl
  4284b7:	xor    ecx,edx
  4284b9:	mov    DWORD PTR [ebp+0x8],ecx
  4284bc:	mov    ecx,DWORD PTR [ebp-0x18]
  4284bf:	mov    edx,DWORD PTR [ebp+0x8]
  4284c2:	xor    ecx,esi
  4284c4:	add    ecx,edi
  4284c6:	and    ecx,edx
  4284c8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4284cf:	mov    edx,DWORD PTR [ebp-0x4]
  4284d2:	xor    ecx,edx
  4284d4:	mov    DWORD PTR [ebp-0x8],ecx
  4284d7:	mov    ecx,DWORD PTR [ebp-0xc]
  4284da:	xor    ecx,esi
  4284dc:	lea    eax,[eax+ecx*1+0x3272f1]
  4284e3:	mov    DWORD PTR [ebp+0x8],eax
  4284e6:	mov    eax,DWORD PTR [ebp-0xc]
  4284e9:	xor    eax,esi
  4284eb:	mov    ecx,0xffcd8d0f
  4284f0:	sub    ecx,eax
  4284f2:	add    ecx,DWORD PTR [ebp-0x10]
  4284f5:	mov    DWORD PTR [ebp-0x10],ecx
  4284f8:	mov    eax,DWORD PTR [ebp-0x14]
  4284fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4284fe:	xor    eax,esi
  428500:	add    eax,edi
  428502:	cmp    ecx,eax
  428504:	jne    0x428497
  428506:	mov    eax,DWORD PTR [ebp-0x1c]
  428509:	mov    ecx,DWORD PTR [ebp-0x8]
  42850c:	xor    eax,esi
  42850e:	add    eax,edi
  428510:	pop    edi
  428511:	pop    esi
  428512:	xor    eax,ecx
  428514:	pop    ebx
  428515:	leave  
  428516:	ret    0x4
  428519:	push   ebp
  42851a:	mov    ebp,esp
  42851c:	mov    eax,DWORD PTR [ebp+0x1c]
  42851f:	mov    ecx,DWORD PTR [ebp+0x8]
  428522:	mov    edx,DWORD PTR [ebp+0x10]
  428525:	mov    eax,DWORD PTR [eax+0x190]
  42852b:	mov    eax,DWORD PTR [eax]
  42852d:	sub    esp,0x64
  428530:	push   ebx
  428531:	push   esi
  428532:	push   edi
  428533:	mov    edi,0x75108aa
  428538:	xor    ecx,edi
  42853a:	mov    ebx,0x3272f1
  42853f:	add    ecx,ebx
  428541:	cmp    ecx,edx
  428543:	jne    0x428554
  428545:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42854f:	jmp    0x428a50
  428554:	mov    ecx,DWORD PTR [ebp+0x8]
  428557:	mov    esi,DWORD PTR [ebp+0x14]
  42855a:	mov    edx,DWORD PTR [esi]
  42855c:	xor    ecx,edi
  42855e:	add    ecx,ebx
  428560:	cmp    edx,ecx
  428562:	je     0x428a0b
  428568:	mov    ecx,DWORD PTR [ebp+0x1c]
  42856b:	mov    DWORD PTR [ebp-0x1c],eax
  42856e:	mov    DWORD PTR [ebp+0x1c],ecx
  428571:	mov    ecx,DWORD PTR [ebp+0x18]
  428574:	mov    eax,DWORD PTR [esi]
  428576:	mov    DWORD PTR [ebp-0x20],eax
  428579:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428580:	mov    edx,0xf89c85ba
  428585:	mov    DWORD PTR [ebp-0x8],edx
  428588:	mov    eax,DWORD PTR [ebp+0x1c]
  42858b:	mov    DWORD PTR [ebp+0x1c],eax
  42858e:	mov    eax,DWORD PTR [ebp+0x1c]
  428591:	mov    eax,DWORD PTR [eax+0x190]
  428597:	mov    eax,DWORD PTR [eax]
  428599:	mov    DWORD PTR [ebp-0x24],ecx
  42859c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42859f:	mov    ecx,DWORD PTR [ecx+0x190]
  4285a5:	mov    ecx,DWORD PTR [ecx]
  4285a7:	add    ecx,DWORD PTR [eax+0x3c]
  4285aa:	mov    DWORD PTR [ebp+0x10],ecx
  4285ad:	mov    eax,DWORD PTR [ebp+0x8]
  4285b0:	xor    eax,edi
  4285b2:	add    eax,ebx
  4285b4:	mov    DWORD PTR [ebp-0x4],eax
  4285b7:	mov    eax,DWORD PTR [ebp+0x8]
  4285ba:	xor    eax,edi
  4285bc:	add    eax,ebx
  4285be:	mov    DWORD PTR [ebp+0x18],eax
  4285c1:	mov    eax,DWORD PTR [ebp+0x10]
  4285c4:	mov    eax,DWORD PTR [eax+0x50]
  4285c7:	sub    eax,0xc
  4285ca:	mov    DWORD PTR [ebp-0x28],eax
  4285cd:	mov    eax,DWORD PTR [ebp+0x10]
  4285d0:	mov    eax,DWORD PTR [eax+0x38]
  4285d3:	mov    ecx,DWORD PTR [ebp+0x10]
  4285d6:	dec    eax
  4285d7:	test   DWORD PTR [ecx+0x54],eax
  4285da:	mov    eax,DWORD PTR [ebp+0x10]
  4285dd:	je     0x4285f7
  4285df:	mov    eax,DWORD PTR [eax+0x38]
  4285e2:	mov    ecx,DWORD PTR [ebp+0x10]
  4285e5:	mov    ecx,DWORD PTR [ecx+0x54]
  4285e8:	dec    eax
  4285e9:	not    eax
  4285eb:	and    ecx,eax
  4285ed:	mov    eax,DWORD PTR [ebp+0x10]
  4285f0:	mov    eax,DWORD PTR [eax+0x38]
  4285f3:	add    eax,ecx
  4285f5:	jmp    0x4285fa
  4285f7:	mov    eax,DWORD PTR [eax+0x54]
  4285fa:	mov    DWORD PTR [ebp+0x1c],eax
  4285fd:	mov    eax,DWORD PTR [ebp+0x8]
  428600:	xor    eax,edi
  428602:	add    eax,ebx
  428604:	mov    DWORD PTR [ebp+0x18],eax
  428607:	mov    eax,DWORD PTR [ebp+0x8]
  42860a:	xor    eax,edi
  42860c:	add    eax,ebx
  42860e:	mov    DWORD PTR [ebp+0x18],eax
  428611:	mov    eax,DWORD PTR [ebp+0x8]
  428614:	mov    ecx,DWORD PTR [ebp-0x24]
  428617:	xor    eax,edi
  428619:	add    eax,ebx
  42861b:	mov    DWORD PTR [ecx],eax
  42861d:	mov    DWORD PTR [ebp+0x18],edx
  428620:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428627:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  42862e:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  428635:	mov    eax,DWORD PTR [ebp-0x8]
  428638:	mov    ecx,DWORD PTR [ebp+0x1c]
  42863b:	xor    eax,edi
  42863d:	add    eax,ebx
  42863f:	imul   eax,ecx
  428642:	mov    ecx,DWORD PTR [ebp+0x8]
  428645:	mov    edx,DWORD PTR [ebp-0x28]
  428648:	xor    ecx,edi
  42864a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428651:	cmp    eax,ecx
  428653:	jae    0x428a04
  428659:	mov    eax,DWORD PTR [ebp+0x8]
  42865c:	xor    eax,edi
  42865e:	add    eax,ebx
  428660:	mov    DWORD PTR [ebp+0x18],eax
  428663:	mov    eax,DWORD PTR [ebp+0x1c]
  428666:	add    eax,DWORD PTR [ebp-0x1c]
  428669:	mov    DWORD PTR [ebp-0x4],eax
  42866c:	push   DWORD PTR [ebp-0x4]
  42866f:	mov    esi,DWORD PTR [ebp-0x1c]
  428672:	mov    ecx,DWORD PTR [ebp+0x10]
  428675:	call   0x4277c9
  42867a:	mov    DWORD PTR [ebp+0xc],eax
  42867d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428684:	mov    eax,DWORD PTR [ebp-0x18]
  428687:	xor    eax,edi
  428689:	lea    ecx,[ebp-0x40]
  42868c:	add    eax,ebx
  42868e:	push   ecx
  42868f:	call   0x427d5b
  428694:	mov    eax,DWORD PTR [ebp+0xc]
  428697:	test   eax,eax
  428699:	je     0x4286e9
  42869b:	mov    eax,DWORD PTR [ebp-0x18]
  42869e:	xor    eax,edi
  4286a0:	add    eax,ebx
  4286a2:	push   eax
  4286a3:	push   DWORD PTR [ebp+0xc]
  4286a6:	lea    eax,[ebp-0x40]
  4286a9:	push   eax
  4286aa:	call   0x427c51
  4286af:	mov    eax,DWORD PTR [ebp-0x4]
  4286b2:	mov    DWORD PTR [ebp-0x18],eax
  4286b5:	mov    eax,DWORD PTR [ebp-0x18]
  4286b8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4286bb:	sub    eax,ecx
  4286bd:	mov    DWORD PTR [ebp-0x18],eax
  4286c0:	mov    eax,DWORD PTR [ebp+0xc]
  4286c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4286c6:	mov    eax,DWORD PTR [eax+0x10]
  4286c9:	add    eax,DWORD PTR [ecx+0xc]
  4286cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4286cf:	cmp    ecx,eax
  4286d1:	jb     0x4286e9
  4286d3:	mov    eax,DWORD PTR [ebp+0xc]
  4286d6:	mov    eax,DWORD PTR [eax+0xc]
  4286d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4286dc:	add    eax,DWORD PTR [ecx+0x8]
  4286df:	mov    ecx,DWORD PTR [ebp-0x18]
  4286e2:	sub    eax,ecx
  4286e4:	jmp    0x4289d7
  4286e9:	push   0xc
  4286eb:	push   DWORD PTR [ebp-0x4]
  4286ee:	lea    eax,[ebp-0x4c]
  4286f1:	push   eax
  4286f2:	call   0x427c51
  4286f7:	mov    eax,0xf89c85a5
  4286fc:	mov    DWORD PTR [ebp-0x2c],eax
  4286ff:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  428706:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42870d:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  428714:	lea    ecx,[ebp-0x2c]
  428717:	mov    DWORD PTR [ebp-0xc],ecx
  42871a:	lea    ecx,[ebp-0x30]
  42871d:	mov    DWORD PTR [ebp-0x10],ecx
  428720:	lea    ecx,[ebp-0x34]
  428723:	mov    DWORD PTR [ebp+0xc],ecx
  428726:	lea    ecx,[ebp-0x38]
  428729:	mov    DWORD PTR [ebp-0x14],ecx
  42872c:	mov    ecx,DWORD PTR [ebp+0x8]
  42872f:	xor    ecx,edi
  428731:	add    ecx,ebx
  428733:	mov    DWORD PTR [ebp-0x18],ecx
  428736:	jmp    0x428932
  42873b:	cmp    eax,0xf89c85bb
  428740:	je     0x428944
  428746:	mov    ecx,DWORD PTR [ebp-0x8]
  428749:	xor    ecx,edi
  42874b:	mov    esi,eax
  42874d:	add    ecx,ebx
  42874f:	mov    DWORD PTR [ebp+0x18],ecx
  428752:	mov    eax,DWORD PTR [ebp-0x18]
  428755:	xor    esi,edi
  428757:	lea    eax,[eax+esi*1+0x3272f1]
  42875e:	mov    DWORD PTR [ebp-0x18],eax
  428761:	mov    eax,DWORD PTR [ebp-0x8]
  428764:	mov    ecx,DWORD PTR [ebp-0x18]
  428767:	xor    eax,edi
  428769:	add    eax,ebx
  42876b:	cmp    ecx,eax
  42876d:	jne    0x428782
  42876f:	mov    eax,DWORD PTR [ebp+0x8]
  428772:	xor    eax,edi
  428774:	add    eax,ebx
  428776:	push   eax
  428777:	push   0xc
  428779:	lea    eax,[ebp-0x4c]
  42877c:	push   eax
  42877d:	call   0x428236
  428782:	mov    eax,DWORD PTR [ebp-0xc]
  428785:	mov    eax,DWORD PTR [eax]
  428787:	xor    eax,edi
  428789:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428790:	mov    ecx,DWORD PTR [ebp+0x8]
  428793:	xor    ecx,edi
  428795:	movzx  eax,al
  428798:	add    ecx,ebx
  42879a:	cmp    eax,ecx
  42879c:	je     0x42891a
  4287a2:	mov    eax,DWORD PTR [ebp-0x10]
  4287a5:	mov    eax,DWORD PTR [eax]
  4287a7:	xor    eax,edi
  4287a9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287b0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287b3:	xor    ecx,edi
  4287b5:	movzx  eax,al
  4287b8:	add    ecx,ebx
  4287ba:	cmp    eax,ecx
  4287bc:	je     0x42891a
  4287c2:	mov    eax,DWORD PTR [ebp+0xc]
  4287c5:	mov    eax,DWORD PTR [eax]
  4287c7:	xor    eax,edi
  4287c9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287d3:	xor    ecx,edi
  4287d5:	movzx  eax,al
  4287d8:	add    ecx,ebx
  4287da:	cmp    eax,ecx
  4287dc:	je     0x42891a
  4287e2:	mov    eax,DWORD PTR [ebp-0x14]
  4287e5:	mov    eax,DWORD PTR [eax]
  4287e7:	xor    eax,edi
  4287e9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287f3:	xor    ecx,edi
  4287f5:	movzx  eax,al
  4287f8:	add    ecx,ebx
  4287fa:	cmp    eax,ecx
  4287fc:	je     0x42891a
  428802:	mov    eax,DWORD PTR [ebp-0x10]
  428805:	mov    eax,DWORD PTR [eax]
  428807:	xor    eax,edi
  428809:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428810:	mov    ecx,DWORD PTR [ebp-0xc]
  428813:	mov    ecx,DWORD PTR [ecx]
  428815:	xor    ecx,edi
  428817:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42881e:	xor    al,cl
  428820:	mov    ecx,DWORD PTR [ebp+0xc]
  428823:	mov    ecx,DWORD PTR [ecx]
  428825:	xor    ecx,edi
  428827:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42882e:	or     al,cl
  428830:	mov    ecx,DWORD PTR [ebp-0xc]
  428833:	mov    ecx,DWORD PTR [ecx]
  428835:	xor    ecx,edi
  428837:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  42883e:	cmp    cl,al
  428840:	jne    0x42891a
  428846:	mov    eax,DWORD PTR [ebp+0xc]
  428849:	mov    eax,DWORD PTR [eax]
  42884b:	xor    eax,edi
  42884d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428854:	mov    ecx,DWORD PTR [ebp-0x10]
  428857:	mov    ecx,DWORD PTR [ecx]
  428859:	xor    ecx,edi
  42885b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428862:	xor    al,cl
  428864:	mov    ecx,DWORD PTR [ebp-0x14]
  428867:	mov    ecx,DWORD PTR [ecx]
  428869:	xor    ecx,edi
  42886b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428872:	or     al,cl
  428874:	mov    ecx,DWORD PTR [ebp-0x10]
  428877:	mov    ecx,DWORD PTR [ecx]
  428879:	xor    ecx,edi
  42887b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428882:	cmp    cl,al
  428884:	jne    0x42891a
  42888a:	mov    eax,DWORD PTR [ebp-0x14]
  42888d:	mov    eax,DWORD PTR [eax]
  42888f:	xor    eax,edi
  428891:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428898:	mov    ecx,DWORD PTR [ebp+0xc]
  42889b:	mov    ecx,DWORD PTR [ecx]
  42889d:	xor    ecx,edi
  42889f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288a6:	xor    al,cl
  4288a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288ab:	mov    ecx,DWORD PTR [ecx]
  4288ad:	xor    ecx,edi
  4288af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288b6:	or     al,cl
  4288b8:	mov    ecx,DWORD PTR [ebp+0xc]
  4288bb:	mov    ecx,DWORD PTR [ecx]
  4288bd:	xor    ecx,edi
  4288bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288c6:	cmp    cl,al
  4288c8:	jne    0x42891a
  4288ca:	mov    eax,DWORD PTR [ebp-0x14]
  4288cd:	mov    eax,DWORD PTR [eax]
  4288cf:	xor    eax,edi
  4288d1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288d8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288db:	mov    ecx,DWORD PTR [ecx]
  4288dd:	xor    ecx,edi
  4288df:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288e6:	xor    al,cl
  4288e8:	mov    ecx,DWORD PTR [ebp-0x10]
  4288eb:	mov    ecx,DWORD PTR [ecx]
  4288ed:	xor    ecx,edi
  4288ef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288f6:	or     al,cl
  4288f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4288fb:	mov    ecx,DWORD PTR [ecx]
  4288fd:	xor    ecx,edi
  4288ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428906:	cmp    cl,al
  428908:	jne    0x42891a
  42890a:	lea    eax,[ebp-0x4c]
  42890d:	push   eax
  42890e:	call   0x4283d5
  428913:	mov    ecx,DWORD PTR [ebp-0x44]
  428916:	cmp    eax,ecx
  428918:	je     0x428924
  42891a:	mov    eax,DWORD PTR [ebp+0x8]
  42891d:	xor    eax,edi
  42891f:	add    eax,ebx
  428921:	mov    DWORD PTR [ebp+0x18],eax
  428924:	mov    eax,DWORD PTR [ebp-0x8]
  428927:	xor    eax,edi
  428929:	lea    eax,[eax+esi*1+0x3272f1]
  428930:	xor    eax,edi
  428932:	mov    ecx,DWORD PTR [ebp+0x8]
  428935:	mov    edx,DWORD PTR [ebp+0x18]
  428938:	xor    ecx,edi
  42893a:	add    ecx,ebx
  42893c:	cmp    edx,ecx
  42893e:	je     0x42873b
  428944:	mov    eax,DWORD PTR [ebp+0x8]
  428947:	mov    ecx,DWORD PTR [ebp+0x18]
  42894a:	xor    eax,edi
  42894c:	add    eax,ebx
  42894e:	cmp    ecx,eax
  428950:	jne    0x428963
  428952:	mov    eax,DWORD PTR [ebp-0x8]
  428955:	mov    ecx,DWORD PTR [ebp+0x1c]
  428958:	xor    eax,edi
  42895a:	lea    eax,[eax+ecx*1+0x3272f1]
  428961:	jmp    0x4289da
  428963:	push   0x18
  428965:	push   DWORD PTR [ebp-0x4]
  428968:	lea    eax,[ebp-0x64]
  42896b:	push   eax
  42896c:	call   0x427c51
  428971:	mov    eax,DWORD PTR [ebp+0x8]
  428974:	mov    ecx,DWORD PTR [ebp-0x18]
  428977:	xor    eax,edi
  428979:	add    eax,ebx
  42897b:	cmp    eax,ecx
  42897d:	je     0x428992
  42897f:	mov    eax,DWORD PTR [ebp+0x8]
  428982:	xor    eax,edi
  428984:	add    eax,ebx
  428986:	push   eax
  428987:	push   0x18
  428989:	lea    eax,[ebp-0x64]
  42898c:	push   eax
  42898d:	call   0x428236
  428992:	mov    eax,DWORD PTR [ebp-0x4]
  428995:	add    eax,0x18
  428998:	mov    DWORD PTR [ebp+0x18],eax
  42899b:	push   DWORD PTR [ebp-0x50]
  42899e:	push   DWORD PTR [ebp+0x18]
  4289a1:	mov    eax,DWORD PTR [ebp-0x54]
  4289a4:	add    eax,DWORD PTR [ebp-0x20]
  4289a7:	push   eax
  4289a8:	call   0x427c51
  4289ad:	mov    eax,DWORD PTR [ebp+0x8]
  4289b0:	mov    ecx,DWORD PTR [ebp-0x18]
  4289b3:	xor    eax,edi
  4289b5:	add    eax,ebx
  4289b7:	cmp    eax,ecx
  4289b9:	je     0x4289cc
  4289bb:	push   0x0
  4289bd:	push   DWORD PTR [ebp-0x50]
  4289c0:	mov    eax,DWORD PTR [ebp-0x54]
  4289c3:	add    eax,DWORD PTR [ebp-0x20]
  4289c6:	push   eax
  4289c7:	call   0x428236
  4289cc:	mov    eax,DWORD PTR [ebp-0x24]
  4289cf:	mov    ecx,DWORD PTR [ebp-0x50]
  4289d2:	add    DWORD PTR [eax],ecx
  4289d4:	mov    eax,DWORD PTR [ebp-0x50]
  4289d7:	add    eax,DWORD PTR [ebp+0x1c]
  4289da:	mov    DWORD PTR [ebp+0x1c],eax
  4289dd:	mov    eax,DWORD PTR [ebp-0x8]
  4289e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4289e3:	xor    eax,edi
  4289e5:	add    eax,ebx
  4289e7:	imul   eax,ecx
  4289ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4289ed:	mov    edx,DWORD PTR [ebp-0x28]
  4289f0:	xor    ecx,edi
  4289f2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4289f9:	cmp    eax,ecx
  4289fb:	jb     0x428659
  428a01:	mov    esi,DWORD PTR [ebp+0x14]
  428a04:	mov    eax,DWORD PTR [ebp-0x20]
  428a07:	mov    DWORD PTR [esi],eax
  428a09:	jmp    0x428a50
  428a0b:	mov    ecx,DWORD PTR [ebp+0x8]
  428a0e:	mov    edx,DWORD PTR [ebp+0xc]
  428a11:	xor    ecx,edi
  428a13:	xor    edx,edi
  428a15:	add    ecx,ebx
  428a17:	add    edx,ebx
  428a19:	cmp    ecx,edx
  428a1b:	jne    0x428a2f
  428a1d:	mov    eax,ds:0x7f642ddc
  428a22:	imul   eax,eax,0x9f15fccf
  428a28:	mov    ds:0x7f642ddc,eax
  428a2d:	jmp    0x428a50
  428a2f:	mov    ecx,DWORD PTR [ebp+0x8]
  428a32:	xor    ecx,edi
  428a34:	add    ecx,ebx
  428a36:	cmp    eax,ecx
  428a38:	je     0x428a46
  428a3a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428a44:	jmp    0x428a50
  428a46:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428a50:	pop    edi
  428a51:	pop    esi
  428a52:	pop    ebx
  428a53:	leave  
  428a54:	ret    0x18
  428a57:	push   ebp
  428a58:	mov    ebp,esp
  428a5a:	and    esp,0xfffffff8
  428a5d:	mov    eax,DWORD PTR [ebp+0x20]
  428a60:	sub    esp,0x14
  428a63:	push   ebx
  428a64:	mov    ebx,DWORD PTR [ebp+0x14]
  428a67:	push   esi
  428a68:	push   edi
  428a69:	cmp    eax,0xf89c85a5
  428a6e:	jne    0x428a7a
  428a70:	push   0xf89c85ba
  428a75:	jmp    0x428bac
  428a7a:	mov    eax,DWORD PTR [ebp+0x20]
  428a7d:	cmp    eax,0xf89c85ba
  428a82:	jne    0x428a8e
  428a84:	push   0xf89c85bb
  428a89:	jmp    0x428bac
  428a8e:	mov    eax,DWORD PTR [ebp+0x20]
  428a91:	cmp    eax,0xf89c85bb
  428a96:	jne    0x428aa2
  428a98:	push   0xf89c85b8
  428a9d:	jmp    0x428bac
  428aa2:	mov    eax,DWORD PTR [ebp+0x20]
  428aa5:	cmp    eax,0xf89c85b8
  428aaa:	jne    0x428ab6
  428aac:	push   0xf89c85b9
  428ab1:	jmp    0x428bac
  428ab6:	mov    ecx,DWORD PTR [ebp+0x20]
  428ab9:	mov    eax,0xf89c85bc
  428abe:	cmp    ecx,eax
  428ac0:	jne    0x428b7c
  428ac6:	mov    eax,DWORD PTR [ebp+0x10]
  428ac9:	mov    DWORD PTR [esp+0xc],eax
  428acd:	mov    eax,DWORD PTR [ebp+0x18]
  428ad0:	mov    DWORD PTR [esp+0x14],eax
  428ad4:	mov    eax,DWORD PTR [ebp+0xc]
  428ad7:	mov    DWORD PTR [esp+0x18],eax
  428adb:	mov    eax,DWORD PTR [ebp+0x8]
  428ade:	mov    DWORD PTR [esp+0x10],eax
  428ae2:	mov    eax,DWORD PTR [esp+0x10]
  428ae6:	mov    ecx,DWORD PTR [esp+0x14]
  428aea:	mov    edi,0x75108aa
  428aef:	xor    eax,edi
  428af1:	mov    esi,0x3272f1
  428af6:	add    eax,esi
  428af8:	mov    DWORD PTR [ecx],eax
  428afa:	mov    eax,DWORD PTR [esp+0xc]
  428afe:	mov    eax,DWORD PTR [eax+0x194]
  428b04:	mov    ecx,DWORD PTR [eax]
  428b06:	mov    eax,DWORD PTR [esp+0xc]
  428b0a:	mov    eax,DWORD PTR [eax+0x194]
  428b10:	mov    eax,DWORD PTR [eax]
  428b12:	add    eax,DWORD PTR [ecx+0x3c]
  428b15:	mov    ecx,DWORD PTR [esp+0xc]
  428b19:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428b1f:	mov    ecx,DWORD PTR [ecx+0x14]
  428b22:	push   0x4
  428b24:	push   0x3000
  428b29:	push   DWORD PTR [eax+0x50]
  428b2c:	push   0x0
  428b2e:	call   ecx
  428b30:	mov    DWORD PTR [ebx],eax
  428b32:	mov    eax,DWORD PTR [esp+0x10]
  428b36:	push   DWORD PTR [esp+0xc]
  428b3a:	xor    eax,edi
  428b3c:	add    eax,esi
  428b3e:	mov    DWORD PTR [esp+0x20],eax
  428b42:	lea    eax,[esp+0x20]
  428b46:	push   eax
  428b47:	push   ebx
  428b48:	push   DWORD PTR [esp+0x20]
  428b4c:	push   DWORD PTR [esp+0x28]
  428b50:	push   DWORD PTR [esp+0x24]
  428b54:	call   0x428519
  428b59:	mov    eax,DWORD PTR [esp+0x10]
  428b5d:	mov    ecx,DWORD PTR [ebx]
  428b5f:	xor    eax,edi
  428b61:	add    eax,esi
  428b63:	cmp    ecx,eax
  428b65:	je     0x428bc3
  428b67:	mov    eax,DWORD PTR [esp+0x18]
  428b6b:	mov    ecx,DWORD PTR [esp+0x14]
  428b6f:	xor    eax,edi
  428b71:	add    eax,esi
  428b73:	imul   eax,DWORD PTR [esp+0x1c]
  428b78:	mov    DWORD PTR [ecx],eax
  428b7a:	jmp    0x428bc3
  428b7c:	mov    ecx,DWORD PTR [ebp+0x20]
  428b7f:	cmp    ecx,0xf89c85b9
  428b85:	jne    0x428b8e
  428b87:	push   0xf89c85be
  428b8c:	jmp    0x428bac
  428b8e:	mov    ecx,DWORD PTR [ebp+0x20]
  428b91:	cmp    ecx,0xf89c85be
  428b97:	jne    0x428ba0
  428b99:	push   0xf89c85bf
  428b9e:	jmp    0x428bac
  428ba0:	mov    ecx,DWORD PTR [ebp+0x20]
  428ba3:	cmp    ecx,0xf89c85bf
  428ba9:	jne    0x428bc3
  428bab:	push   eax
  428bac:	push   DWORD PTR [ebp+0x1c]
  428baf:	push   DWORD PTR [ebp+0x18]
  428bb2:	push   ebx
  428bb3:	push   DWORD PTR [ebp+0x10]
  428bb6:	push   DWORD PTR [ebp+0xc]
  428bb9:	push   DWORD PTR [ebp+0x8]
  428bbc:	call   0x428a57
  428bc1:	mov    DWORD PTR [ebx],eax
  428bc3:	mov    eax,DWORD PTR [ebx]
  428bc5:	pop    edi
  428bc6:	pop    esi
  428bc7:	pop    ebx
  428bc8:	mov    esp,ebp
  428bca:	pop    ebp
  428bcb:	ret    0x1c
  428bce:	push   ebp
  428bcf:	mov    ebp,esp
  428bd1:	sub    esp,0xc
  428bd4:	mov    eax,0xf89c85a5
  428bd9:	mov    DWORD PTR [ebp-0x8],eax
  428bdc:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428be3:	mov    ecx,DWORD PTR [ebp-0x8]
  428be6:	xor    ecx,0x75108aa
  428bec:	add    ecx,0x3272f1
  428bf2:	mov    DWORD PTR [ebp-0x4],ecx
  428bf5:	mov    ecx,DWORD PTR [ebp+0xc]
  428bf8:	push   eax
  428bf9:	mov    DWORD PTR [ebp+0xc],ecx
  428bfc:	push   DWORD PTR [ebp+0xc]
  428bff:	lea    eax,[ebp-0x4]
  428c02:	push   DWORD PTR [ebp+0x8]
  428c05:	push   eax
  428c06:	push   DWORD PTR [ebp+0xc]
  428c09:	push   DWORD PTR [ebp-0xc]
  428c0c:	push   DWORD PTR [ebp-0x8]
  428c0f:	call   0x428a57
  428c14:	mov    DWORD PTR [ebp-0x4],eax
  428c17:	mov    eax,DWORD PTR [ebp-0x4]
  428c1a:	leave  
  428c1b:	ret    0x8
