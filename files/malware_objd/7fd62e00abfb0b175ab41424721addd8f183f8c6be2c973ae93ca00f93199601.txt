
7fd62e00abfb0b175ab41424721addd8f183f8c6be2c973ae93ca00f93199601.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1de66
   10800:	mov    DWORD PTR [ebp-0x10],0x1de5c
   10807:	mov    DWORD PTR [ebp-0xc],0x1de54
   1080e:	mov    DWORD PTR [ebp-0x8],0x1de4a
   10815:	mov    DWORD PTR [ebp-0x4],0x1de40
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x774bc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1de3e
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   ebp
   10993:	mov    ebp,esp
   10995:	cmp    DWORD PTR [ebp+0x8],0x0
   10999:	je     0x109a6
   1099b:	push   0x0
   1099d:	push   DWORD PTR [ebp+0x8]
   109a0:	call   DWORD PTR ds:0x1f014
   109a6:	pop    ebp
   109a7:	ret    
   109a8:	int3   
   109a9:	int3   
   109aa:	int3   
   109ab:	int3   
   109ac:	int3   
   109ad:	int3   
   109ae:	mov    edi,edi
   109b0:	push   esi
   109b1:	mov    esi,ecx
   109b3:	dec    DWORD PTR [esi+0x4]
   109b6:	jne    0x109c7
   109b8:	push   DWORD PTR [esi]
   109ba:	call   0x10990
   109bf:	push   esi
   109c0:	call   0x10990
   109c5:	pop    ecx
   109c6:	pop    ecx
   109c7:	pop    esi
   109c8:	ret    
   109c9:	int3   
   109ca:	int3   
   109cb:	int3   
   109cc:	int3   
   109cd:	int3   
   109ce:	mov    edi,edi
   109d0:	push   ebp
   109d1:	mov    ebp,esp
   109d3:	push   esi
   109d4:	xor    esi,esi
   109d6:	xor    edx,edx
   109d8:	cmp    DWORD PTR [ebp+0xc],esi
   109db:	je     0x109f8
   109dd:	mov    eax,DWORD PTR [ebp+0x8]
   109e0:	mov    ecx,DWORD PTR [ebp+0x10]
   109e3:	mov    cl,BYTE PTR [edx+ecx*1]
   109e6:	add    eax,esi
   109e8:	xor    BYTE PTR [eax],cl
   109ea:	lea    eax,[edx+0x1]
   109ed:	xor    edx,edx
   109ef:	div    DWORD PTR [ebp+0x14]
   109f2:	inc    esi
   109f3:	cmp    esi,DWORD PTR [ebp+0xc]
   109f6:	jne    0x109dd
   109f8:	pop    esi
   109f9:	pop    ebp
   109fa:	ret    0x10
   109fd:	int3   
   109fe:	int3   
   109ff:	int3   
   10a00:	int3   
   10a01:	int3   
   10a02:	mov    edi,edi
   10a04:	push   ebp
   10a05:	mov    ebp,esp
   10a07:	mov    ecx,DWORD PTR [ebp+0x8]
   10a0a:	mov    eax,ecx
   10a0c:	lea    edx,[eax+0x2]
   10a0f:	push   esi
   10a10:	mov    si,WORD PTR [eax]
   10a13:	inc    eax
   10a14:	inc    eax
   10a15:	test   si,si
   10a18:	jne    0x10a10
   10a1a:	sub    eax,edx
   10a1c:	sar    eax,1
   10a1e:	cmp    eax,0xc
   10a21:	jae    0x10a2a
   10a23:	xor    al,al
   10a25:	jmp    0x10af8
   10a2a:	lea    eax,[ecx+eax*2-0x18]
   10a2e:	movzx  ecx,WORD PTR [eax]
   10a31:	cmp    cx,0x69
   10a35:	je     0x10a3d
   10a37:	cmp    cx,0x49
   10a3b:	jne    0x10a23
   10a3d:	movzx  ecx,WORD PTR [eax+0x2]
   10a41:	push   0x45
   10a43:	pop    esi
   10a44:	push   0x65
   10a46:	pop    edx
   10a47:	cmp    cx,dx
   10a4a:	je     0x10a51
   10a4c:	cmp    cx,si
   10a4f:	jne    0x10a23
   10a51:	movzx  ecx,WORD PTR [eax+0x4]
   10a55:	cmp    cx,0x78
   10a59:	je     0x10a61
   10a5b:	cmp    cx,0x58
   10a5f:	jne    0x10a23
   10a61:	movzx  ecx,WORD PTR [eax+0x6]
   10a65:	cmp    cx,0x70
   10a69:	je     0x10a71
   10a6b:	cmp    cx,0x50
   10a6f:	jne    0x10a23
   10a71:	movzx  ecx,WORD PTR [eax+0x8]
   10a75:	cmp    cx,0x6c
   10a79:	je     0x10a81
   10a7b:	cmp    cx,0x4c
   10a7f:	jne    0x10a23
   10a81:	movzx  ecx,WORD PTR [eax+0xa]
   10a85:	cmp    cx,0x6f
   10a89:	je     0x10a91
   10a8b:	cmp    cx,0x4f
   10a8f:	jne    0x10a23
   10a91:	movzx  ecx,WORD PTR [eax+0xc]
   10a95:	cmp    cx,0x72
   10a99:	je     0x10aa1
   10a9b:	cmp    cx,0x52
   10a9f:	jne    0x10a23
   10aa1:	movzx  ecx,WORD PTR [eax+0xe]
   10aa5:	cmp    cx,dx
   10aa8:	je     0x10ab3
   10aaa:	cmp    cx,si
   10aad:	jne    0x10a23
   10ab3:	cmp    WORD PTR [eax+0x10],0x2e
   10ab8:	jne    0x10a23
   10abe:	movzx  ecx,WORD PTR [eax+0x12]
   10ac2:	cmp    cx,dx
   10ac5:	je     0x10ad0
   10ac7:	cmp    cx,si
   10aca:	jne    0x10a23
   10ad0:	movzx  ecx,WORD PTR [eax+0x14]
   10ad4:	cmp    cx,0x78
   10ad8:	je     0x10ae4
   10ada:	cmp    cx,0x58
   10ade:	jne    0x10a23
   10ae4:	movzx  eax,WORD PTR [eax+0x16]
   10ae8:	cmp    ax,dx
   10aeb:	je     0x10af6
   10aed:	cmp    ax,si
   10af0:	jne    0x10a23
   10af6:	mov    al,0x1
   10af8:	pop    esi
   10af9:	pop    ebp
   10afa:	ret    0x4
   10afd:	int3   
   10afe:	int3   
   10aff:	int3   
   10b00:	int3   
   10b01:	int3   
   10b02:	mov    edi,edi
   10b04:	push   ebp
   10b05:	mov    ebp,esp
   10b07:	mov    ecx,DWORD PTR [ebp+0x8]
   10b0a:	mov    eax,ecx
   10b0c:	lea    edx,[eax+0x2]
   10b0f:	push   esi
   10b10:	mov    si,WORD PTR [eax]
   10b13:	inc    eax
   10b14:	inc    eax
   10b15:	test   si,si
   10b18:	jne    0x10b10
   10b1a:	sub    eax,edx
   10b1c:	sar    eax,1
   10b1e:	pop    esi
   10b1f:	cmp    eax,0xb
   10b22:	jae    0x10b2b
   10b24:	xor    al,al
   10b26:	jmp    0x10be7
   10b2b:	lea    eax,[ecx+eax*2-0x16]
   10b2f:	movzx  ecx,WORD PTR [eax]
   10b32:	cmp    cx,0x66
   10b36:	je     0x10b3e
   10b38:	cmp    cx,0x46
   10b3c:	jne    0x10b24
   10b3e:	movzx  ecx,WORD PTR [eax+0x2]
   10b42:	cmp    cx,0x69
   10b46:	je     0x10b4e
   10b48:	cmp    cx,0x49
   10b4c:	jne    0x10b24
   10b4e:	movzx  ecx,WORD PTR [eax+0x4]
   10b52:	cmp    cx,0x72
   10b56:	je     0x10b5e
   10b58:	cmp    cx,0x52
   10b5c:	jne    0x10b24
   10b5e:	movzx  ecx,WORD PTR [eax+0x6]
   10b62:	cmp    cx,0x65
   10b66:	je     0x10b6e
   10b68:	cmp    cx,0x45
   10b6c:	jne    0x10b24
   10b6e:	movzx  ecx,WORD PTR [eax+0x8]
   10b72:	cmp    cx,0x66
   10b76:	je     0x10b7e
   10b78:	cmp    cx,0x46
   10b7c:	jne    0x10b24
   10b7e:	movzx  ecx,WORD PTR [eax+0xa]
   10b82:	cmp    cx,0x6f
   10b86:	je     0x10b8e
   10b88:	cmp    cx,0x4f
   10b8c:	jne    0x10b24
   10b8e:	movzx  ecx,WORD PTR [eax+0xc]
   10b92:	cmp    cx,0x78
   10b96:	je     0x10b9e
   10b98:	cmp    cx,0x58
   10b9c:	jne    0x10b24
   10b9e:	cmp    WORD PTR [eax+0xe],0x2e
   10ba3:	jne    0x10b24
   10ba9:	movzx  ecx,WORD PTR [eax+0x10]
   10bad:	cmp    cx,0x65
   10bb1:	je     0x10bbd
   10bb3:	cmp    cx,0x45
   10bb7:	jne    0x10b24
   10bbd:	movzx  ecx,WORD PTR [eax+0x12]
   10bc1:	cmp    cx,0x78
   10bc5:	je     0x10bd1
   10bc7:	cmp    cx,0x58
   10bcb:	jne    0x10b24
   10bd1:	movzx  eax,WORD PTR [eax+0x14]
   10bd5:	cmp    ax,0x65
   10bd9:	je     0x10be5
   10bdb:	cmp    ax,0x45
   10bdf:	jne    0x10b24
   10be5:	mov    al,0x1
   10be7:	pop    ebp
   10be8:	ret    0x4
   10beb:	int3   
   10bec:	int3   
   10bed:	int3   
   10bee:	int3   
   10bef:	int3   
   10bf0:	mov    edi,edi
   10bf2:	push   ebp
   10bf3:	mov    ebp,esp
   10bf5:	mov    ecx,DWORD PTR [ebp+0x8]
   10bf8:	mov    eax,ecx
   10bfa:	lea    edx,[eax+0x2]
   10bfd:	push   esi
   10bfe:	mov    si,WORD PTR [eax]
   10c01:	inc    eax
   10c02:	inc    eax
   10c03:	test   si,si
   10c06:	jne    0x10bfe
   10c08:	sub    eax,edx
   10c0a:	sar    eax,1
   10c0c:	pop    esi
   10c0d:	cmp    eax,0xa
   10c10:	jae    0x10c19
   10c12:	xor    al,al
   10c14:	jmp    0x10cc1
   10c19:	lea    eax,[ecx+eax*2-0x14]
   10c1d:	movzx  ecx,WORD PTR [eax]
   10c20:	cmp    cx,0x63
   10c24:	je     0x10c2c
   10c26:	cmp    cx,0x43
   10c2a:	jne    0x10c12
   10c2c:	movzx  ecx,WORD PTR [eax+0x2]
   10c30:	cmp    cx,0x68
   10c34:	je     0x10c3c
   10c36:	cmp    cx,0x48
   10c3a:	jne    0x10c12
   10c3c:	movzx  ecx,WORD PTR [eax+0x4]
   10c40:	cmp    cx,0x72
   10c44:	je     0x10c4c
   10c46:	cmp    cx,0x52
   10c4a:	jne    0x10c12
   10c4c:	movzx  ecx,WORD PTR [eax+0x6]
   10c50:	cmp    cx,0x6f
   10c54:	je     0x10c5c
   10c56:	cmp    cx,0x4f
   10c5a:	jne    0x10c12
   10c5c:	movzx  ecx,WORD PTR [eax+0x8]
   10c60:	cmp    cx,0x6d
   10c64:	je     0x10c6c
   10c66:	cmp    cx,0x4d
   10c6a:	jne    0x10c12
   10c6c:	movzx  ecx,WORD PTR [eax+0xa]
   10c70:	cmp    cx,0x65
   10c74:	je     0x10c7c
   10c76:	cmp    cx,0x45
   10c7a:	jne    0x10c12
   10c7c:	cmp    WORD PTR [eax+0xc],0x2e
   10c81:	jne    0x10c12
   10c83:	movzx  ecx,WORD PTR [eax+0xe]
   10c87:	cmp    cx,0x65
   10c8b:	je     0x10c97
   10c8d:	cmp    cx,0x45
   10c91:	jne    0x10c12
   10c97:	movzx  ecx,WORD PTR [eax+0x10]
   10c9b:	cmp    cx,0x78
   10c9f:	je     0x10cab
   10ca1:	cmp    cx,0x58
   10ca5:	jne    0x10c12
   10cab:	movzx  eax,WORD PTR [eax+0x12]
   10caf:	cmp    ax,0x65
   10cb3:	je     0x10cbf
   10cb5:	cmp    ax,0x45
   10cb9:	jne    0x10c12
   10cbf:	mov    al,0x1
   10cc1:	pop    ebp
   10cc2:	ret    0x4
   10cc5:	int3   
   10cc6:	int3   
   10cc7:	int3   
   10cc8:	int3   
   10cc9:	int3   
   10cca:	mov    edi,edi
   10ccc:	push   ebp
   10ccd:	mov    ebp,esp
   10ccf:	mov    ecx,DWORD PTR [ebp+0x8]
   10cd2:	mov    eax,ecx
   10cd4:	lea    edx,[eax+0x2]
   10cd7:	push   esi
   10cd8:	mov    si,WORD PTR [eax]
   10cdb:	inc    eax
   10cdc:	inc    eax
   10cdd:	test   si,si
   10ce0:	jne    0x10cd8
   10ce2:	sub    eax,edx
   10ce4:	sar    eax,1
   10ce6:	pop    esi
   10ce7:	cmp    eax,0x9
   10cea:	jae    0x10cf3
   10cec:	xor    al,al
   10cee:	jmp    0x10d87
   10cf3:	lea    eax,[ecx+eax*2-0x12]
   10cf7:	movzx  ecx,WORD PTR [eax]
   10cfa:	cmp    cx,0x6d
   10cfe:	je     0x10d06
   10d00:	cmp    cx,0x4d
   10d04:	jne    0x10cec
   10d06:	movzx  ecx,WORD PTR [eax+0x2]
   10d0a:	cmp    cx,0x73
   10d0e:	je     0x10d16
   10d10:	cmp    cx,0x53
   10d14:	jne    0x10cec
   10d16:	movzx  ecx,WORD PTR [eax+0x4]
   10d1a:	cmp    cx,0x68
   10d1e:	je     0x10d26
   10d20:	cmp    cx,0x48
   10d24:	jne    0x10cec
   10d26:	movzx  ecx,WORD PTR [eax+0x6]
   10d2a:	cmp    cx,0x74
   10d2e:	je     0x10d36
   10d30:	cmp    cx,0x54
   10d34:	jne    0x10cec
   10d36:	movzx  ecx,WORD PTR [eax+0x8]
   10d3a:	cmp    cx,0x61
   10d3e:	je     0x10d46
   10d40:	cmp    cx,0x41
   10d44:	jne    0x10cec
   10d46:	cmp    WORD PTR [eax+0xa],0x2e
   10d4b:	jne    0x10cec
   10d4d:	movzx  ecx,WORD PTR [eax+0xc]
   10d51:	cmp    cx,0x65
   10d55:	je     0x10d5d
   10d57:	cmp    cx,0x45
   10d5b:	jne    0x10cec
   10d5d:	movzx  ecx,WORD PTR [eax+0xe]
   10d61:	cmp    cx,0x78
   10d65:	je     0x10d71
   10d67:	cmp    cx,0x58
   10d6b:	jne    0x10cec
   10d71:	movzx  eax,WORD PTR [eax+0x10]
   10d75:	cmp    ax,0x65
   10d79:	je     0x10d85
   10d7b:	cmp    ax,0x45
   10d7f:	jne    0x10cec
   10d85:	mov    al,0x1
   10d87:	pop    ebp
   10d88:	ret    0x4
   10d8b:	int3   
   10d8c:	int3   
   10d8d:	int3   
   10d8e:	int3   
   10d8f:	int3   
   10d90:	mov    edi,edi
   10d92:	push   ebp
   10d93:	mov    ebp,esp
   10d95:	push   esi
   10d96:	mov    esi,DWORD PTR [ebp+0x8]
   10d99:	push   esi
   10d9a:	call   0x10a02
   10d9f:	test   al,al
   10da1:	je     0x10da8
   10da3:	xor    eax,eax
   10da5:	inc    eax
   10da6:	jmp    0x10dd5
   10da8:	push   esi
   10da9:	call   0x10b02
   10dae:	test   al,al
   10db0:	je     0x10db7
   10db2:	push   0x2
   10db4:	pop    eax
   10db5:	jmp    0x10dd5
   10db7:	push   esi
   10db8:	call   0x10bf0
   10dbd:	test   al,al
   10dbf:	je     0x10dc5
   10dc1:	push   0x3
   10dc3:	jmp    0x10db4
   10dc5:	push   esi
   10dc6:	call   0x10cca
   10dcb:	movzx  eax,al
   10dce:	neg    eax
   10dd0:	sbb    eax,eax
   10dd2:	and    eax,0x4
   10dd5:	pop    esi
   10dd6:	pop    ebp
   10dd7:	ret    0x4
   10dda:	int3   
   10ddb:	int3   
   10ddc:	int3   
   10ddd:	int3   
   10dde:	int3   
   10ddf:	int3   
   10de0:	mov    edi,edi
   10de2:	push   ebp
   10de3:	mov    ebp,esp
   10de5:	sub    esp,0x10
   10de8:	push   esi
   10de9:	push   edi
   10dea:	xor    eax,eax
   10dec:	mov    WORD PTR [ebp-0x8],ax
   10df0:	lea    edi,[ebp-0x6]
   10df3:	stos   DWORD PTR es:[edi],eax
   10df4:	stos   WORD PTR es:[edi],ax
   10df6:	mov    eax,DWORD PTR [ebp+0xc]
   10df9:	mov    DWORD PTR [ebp-0x4],eax
   10dfc:	lea    ecx,[eax+0x2]
   10dff:	mov    dx,WORD PTR [eax]
   10e02:	inc    eax
   10e03:	inc    eax
   10e04:	test   dx,dx
   10e07:	jne    0x10dff
   10e09:	mov    esi,DWORD PTR [ebp+0x8]
   10e0c:	movzx  edx,WORD PTR [esi]
   10e0f:	sub    eax,ecx
   10e11:	sar    eax,1
   10e13:	lea    ecx,[eax+eax*1]
   10e16:	mov    WORD PTR [ebp-0x8],cx
   10e1a:	mov    WORD PTR [ebp-0x6],cx
   10e1e:	cmp    dx,cx
   10e21:	jb     0x10e60
   10e23:	xor    eax,eax
   10e25:	lea    edi,[ebp-0xe]
   10e28:	stos   DWORD PTR es:[edi],eax
   10e29:	stos   WORD PTR es:[edi],ax
   10e2b:	mov    WORD PTR [ebp-0x10],cx
   10e2f:	mov    WORD PTR [ebp-0xe],cx
   10e33:	movzx  eax,dx
   10e36:	movzx  ecx,cx
   10e39:	sub    eax,ecx
   10e3b:	mov    ecx,DWORD PTR [esi+0x4]
   10e3e:	cdq    
   10e3f:	sub    eax,edx
   10e41:	sar    eax,1
   10e43:	lea    eax,[ecx+eax*2]
   10e46:	mov    DWORD PTR [ebp-0xc],eax
   10e49:	push   0x1
   10e4b:	lea    eax,[ebp-0x8]
   10e4e:	push   eax
   10e4f:	lea    eax,[ebp-0x10]
   10e52:	push   eax
   10e53:	call   DWORD PTR ds:0x1f018
   10e59:	neg    eax
   10e5b:	sbb    eax,eax
   10e5d:	inc    eax
   10e5e:	jmp    0x10e62
   10e60:	xor    al,al
   10e62:	pop    edi
   10e63:	pop    esi
   10e64:	leave  
   10e65:	ret    0x8
   10e68:	int3   
   10e69:	int3   
   10e6a:	int3   
   10e6b:	int3   
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	mov    edi,edi
   10e70:	push   ebp
   10e71:	mov    ebp,esp
   10e73:	push   ebx
   10e74:	xor    eax,eax
   10e76:	push   eax
   10e77:	push   eax
   10e78:	push   eax
   10e79:	push   eax
   10e7a:	mov    ebx,0x7752c
   10e7f:	push   ebx
   10e80:	call   DWORD PTR ds:0x1f020
   10e86:	test   eax,eax
   10e88:	jge    0x10e8e
   10e8a:	xor    al,al
   10e8c:	jmp    0x10eb1
   10e8e:	push   esi
   10e8f:	mov    esi,DWORD PTR [ebp+0x8]
   10e92:	push   edi
   10e93:	imul   esi,esi,0x14
   10e96:	mov    edi,DWORD PTR [ebp+0xc]
   10e99:	push   0x5
   10e9b:	pop    ecx
   10e9c:	push   0x0
   10e9e:	add    esi,0x77f7c
   10ea4:	push   ebx
   10ea5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ea7:	call   DWORD PTR ds:0x1f01c
   10ead:	pop    edi
   10eae:	mov    al,0x1
   10eb0:	pop    esi
   10eb1:	pop    ebx
   10eb2:	pop    ebp
   10eb3:	ret    0x8
   10eb6:	int3   
   10eb7:	int3   
   10eb8:	int3   
   10eb9:	int3   
   10eba:	int3   
   10ebb:	int3   
   10ebc:	mov    edi,edi
   10ebe:	push   ebp
   10ebf:	mov    ebp,esp
   10ec1:	push   ebx
   10ec2:	xor    eax,eax
   10ec4:	push   eax
   10ec5:	push   eax
   10ec6:	push   eax
   10ec7:	push   eax
   10ec8:	mov    ebx,0x7752c
   10ecd:	push   ebx
   10ece:	call   DWORD PTR ds:0x1f020
   10ed4:	test   eax,eax
   10ed6:	jl     0x10ef9
   10ed8:	push   esi
   10ed9:	mov    esi,DWORD PTR [ebp+0xc]
   10edc:	push   edi
   10edd:	mov    edi,DWORD PTR [ebp+0x8]
   10ee0:	imul   edi,edi,0x14
   10ee3:	push   0x5
   10ee5:	pop    ecx
   10ee6:	push   0x0
   10ee8:	add    edi,0x77f7c
   10eee:	push   ebx
   10eef:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ef1:	call   DWORD PTR ds:0x1f01c
   10ef7:	pop    edi
   10ef8:	pop    esi
   10ef9:	pop    ebx
   10efa:	pop    ebp
   10efb:	ret    0x8
   10efe:	int3   
   10eff:	int3   
   10f00:	int3   
   10f01:	int3   
   10f02:	int3   
   10f03:	int3   
   10f04:	mov    edi,edi
   10f06:	push   ebp
   10f07:	mov    ebp,esp
   10f09:	sub    esp,0x14
   10f0c:	and    DWORD PTR [ebp-0x14],0x0
   10f10:	push   edi
   10f11:	xor    eax,eax
   10f13:	lea    edi,[ebp-0x10]
   10f16:	stos   DWORD PTR es:[edi],eax
   10f17:	stos   DWORD PTR es:[edi],eax
   10f18:	stos   DWORD PTR es:[edi],eax
   10f19:	stos   DWORD PTR es:[edi],eax
   10f1a:	lea    eax,[ebp-0x14]
   10f1d:	push   eax
   10f1e:	push   DWORD PTR [ebp+0x8]
   10f21:	call   0x10ebc
   10f26:	pop    edi
   10f27:	leave  
   10f28:	ret    0x4
   10f2b:	int3   
   10f2c:	int3   
   10f2d:	int3   
   10f2e:	int3   
   10f2f:	int3   
   10f30:	mov    edi,edi
   10f32:	push   ebp
   10f33:	mov    ebp,esp
   10f35:	push   ebx
   10f36:	xor    eax,eax
   10f38:	push   eax
   10f39:	push   eax
   10f3a:	push   eax
   10f3b:	push   eax
   10f3c:	mov    ebx,0x77eb8
   10f41:	push   ebx
   10f42:	call   DWORD PTR ds:0x1f020
   10f48:	test   eax,eax
   10f4a:	jl     0x10f66
   10f4c:	push   esi
   10f4d:	mov    esi,DWORD PTR [ebp+0x8]
   10f50:	push   edi
   10f51:	push   0x40
   10f53:	pop    ecx
   10f54:	push   0x0
   10f56:	mov    edi,0x77fa8
   10f5b:	push   ebx
   10f5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f5e:	call   DWORD PTR ds:0x1f01c
   10f64:	pop    edi
   10f65:	pop    esi
   10f66:	pop    ebx
   10f67:	pop    ebp
   10f68:	ret    0x4
   10f6b:	int3   
   10f6c:	int3   
   10f6d:	int3   
   10f6e:	int3   
   10f6f:	int3   
   10f70:	mov    edi,edi
   10f72:	push   ebp
   10f73:	mov    ebp,esp
   10f75:	push   ebx
   10f76:	xor    eax,eax
   10f78:	push   eax
   10f79:	push   eax
   10f7a:	push   eax
   10f7b:	push   eax
   10f7c:	mov    ebx,0x77eb8
   10f81:	push   ebx
   10f82:	call   DWORD PTR ds:0x1f020
   10f88:	test   eax,eax
   10f8a:	jge    0x10f90
   10f8c:	xor    al,al
   10f8e:	jmp    0x10fb6
   10f90:	push   esi
   10f91:	push   edi
   10f92:	mov    edi,DWORD PTR [ebp+0x8]
   10f95:	push   0x40
   10f97:	pop    ecx
   10f98:	push   0x0
   10f9a:	mov    esi,0x77fa8
   10f9f:	push   ebx
   10fa0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fa2:	call   DWORD PTR ds:0x1f01c
   10fa8:	xor    eax,eax
   10faa:	cmp    WORD PTR ds:0x77fa8,ax
   10fb1:	pop    edi
   10fb2:	setne  al
   10fb5:	pop    esi
   10fb6:	pop    ebx
   10fb7:	pop    ebp
   10fb8:	ret    0x4
   10fbb:	int3   
   10fbc:	int3   
   10fbd:	int3   
   10fbe:	int3   
   10fbf:	int3   
   10fc0:	mov    edi,edi
   10fc2:	push   ebp
   10fc3:	mov    ebp,esp
   10fc5:	push   ebx
   10fc6:	mov    ebx,DWORD PTR [ebp+0x8]
   10fc9:	cmp    ebx,0x40
   10fcc:	ja     0x10ff9
   10fce:	push   esi
   10fcf:	push   edi
   10fd0:	xor    edi,edi
   10fd2:	push   edi
   10fd3:	push   edi
   10fd4:	push   edi
   10fd5:	push   edi
   10fd6:	mov    esi,0x77ef4
   10fdb:	push   esi
   10fdc:	call   DWORD PTR ds:0x1f020
   10fe2:	test   eax,eax
   10fe4:	jl     0x10ff7
   10fe6:	push   edi
   10fe7:	lea    eax,[ebx*4+0x775b8]
   10fee:	inc    DWORD PTR [eax]
   10ff0:	push   esi
   10ff1:	call   DWORD PTR ds:0x1f01c
   10ff7:	pop    edi
   10ff8:	pop    esi
   10ff9:	pop    ebx
   10ffa:	pop    ebp
   10ffb:	ret    0x4
   10ffe:	int3   
   10fff:	int3   
   11000:	int3   
   11001:	int3   
   11002:	int3   
   11003:	int3   
   11004:	mov    edi,edi
   11006:	push   ebp
   11007:	mov    ebp,esp
   11009:	push   ebx
   1100a:	push   esi
   1100b:	push   edi
   1100c:	mov    edi,DWORD PTR [ebp+0x8]
   1100f:	cmp    edi,0x40
   11012:	ja     0x1103d
   11014:	xor    ebx,ebx
   11016:	push   ebx
   11017:	push   ebx
   11018:	push   ebx
   11019:	push   ebx
   1101a:	mov    esi,0x77ef4
   1101f:	push   esi
   11020:	call   DWORD PTR ds:0x1f020
   11026:	test   eax,eax
   11028:	jl     0x1103d
   1102a:	mov    edi,DWORD PTR [edi*4+0x775b8]
   11031:	push   ebx
   11032:	push   esi
   11033:	call   DWORD PTR ds:0x1f01c
   11039:	mov    eax,edi
   1103b:	jmp    0x1103f
   1103d:	xor    eax,eax
   1103f:	pop    edi
   11040:	pop    esi
   11041:	pop    ebx
   11042:	pop    ebp
   11043:	ret    0x4
   11046:	int3   
   11047:	int3   
   11048:	int3   
   11049:	int3   
   1104a:	int3   
   1104b:	int3   
   1104c:	mov    edi,edi
   1104e:	push   ebp
   1104f:	mov    ebp,esp
   11051:	mov    eax,DWORD PTR [ebp+0x8]
   11054:	mov    edx,DWORD PTR [ebp+0xc]
   11057:	push   esi
   11058:	xor    esi,esi
   1105a:	jmp    0x1107f
   1105c:	mov    ecx,eax
   1105e:	and    ecx,0x1
   11061:	or     ecx,esi
   11063:	push   esi
   11064:	jne    0x11071
   11066:	push   0x2
   11068:	push   edx
   11069:	push   eax
   1106a:	call   0x1da7e
   1106f:	jmp    0x1107f
   11071:	push   0x3
   11073:	push   edx
   11074:	push   eax
   11075:	call   0x1da72
   1107a:	add    eax,0x1
   1107d:	adc    edx,esi
   1107f:	cmp    eax,0x4
   11082:	jne    0x1105c
   11084:	cmp    edx,esi
   11086:	jne    0x1105c
   11088:	pop    esi
   11089:	pop    ebp
   1108a:	ret    0x8
   1108d:	int3   
   1108e:	int3   
   1108f:	int3   
   11090:	int3   
   11091:	int3   
   11092:	mov    edi,edi
   11094:	push   ebp
   11095:	mov    ebp,esp
   11097:	mov    eax,DWORD PTR [ebp+0x8]
   1109a:	mov    edx,DWORD PTR ds:0x780b0
   110a0:	jmp    0x110a4
   110a2:	mov    eax,ecx
   110a4:	mov    ecx,DWORD PTR [eax+0x8]
   110a7:	cmp    ecx,edx
   110a9:	jne    0x110a2
   110ab:	pop    ebp
   110ac:	ret    0x4
   110af:	int3   
   110b0:	int3   
   110b1:	int3   
   110b2:	int3   
   110b3:	int3   
   110b4:	mov    edi,edi
   110b6:	push   ebp
   110b7:	mov    ebp,esp
   110b9:	mov    eax,DWORD PTR [ebp+0x8]
   110bc:	mov    edx,DWORD PTR ds:0x780b0
   110c2:	jmp    0x110c6
   110c4:	mov    eax,ecx
   110c6:	mov    ecx,DWORD PTR [eax]
   110c8:	cmp    ecx,edx
   110ca:	jne    0x110c4
   110cc:	pop    ebp
   110cd:	ret    0x4
   110d0:	int3   
   110d1:	int3   
   110d2:	int3   
   110d3:	int3   
   110d4:	int3   
   110d5:	int3   
   110d6:	mov    edi,edi
   110d8:	push   ebp
   110d9:	mov    ebp,esp
   110db:	mov    eax,DWORD PTR [ebp+0x8]
   110de:	mov    edx,DWORD PTR ds:0x780b4
   110e4:	jmp    0x110e8
   110e6:	mov    eax,ecx
   110e8:	mov    ecx,DWORD PTR [eax+0x8]
   110eb:	cmp    ecx,edx
   110ed:	jne    0x110e6
   110ef:	pop    ebp
   110f0:	ret    0x4
   110f3:	int3   
   110f4:	int3   
   110f5:	int3   
   110f6:	int3   
   110f7:	int3   
   110f8:	mov    edi,edi
   110fa:	push   ebp
   110fb:	mov    ebp,esp
   110fd:	mov    eax,DWORD PTR [ebp+0x8]
   11100:	mov    edx,DWORD PTR ds:0x780b4
   11106:	jmp    0x1110a
   11108:	mov    eax,ecx
   1110a:	mov    ecx,DWORD PTR [eax]
   1110c:	cmp    ecx,edx
   1110e:	jne    0x11108
   11110:	pop    ebp
   11111:	ret    0x4
   11114:	int3   
   11115:	int3   
   11116:	int3   
   11117:	int3   
   11118:	int3   
   11119:	int3   
   1111a:	mov    edi,edi
   1111c:	push   ebp
   1111d:	mov    ebp,esp
   1111f:	mov    eax,DWORD PTR [ebp+0x8]
   11122:	mov    edx,DWORD PTR ds:0x780b8
   11128:	jmp    0x1112c
   1112a:	mov    eax,ecx
   1112c:	mov    ecx,DWORD PTR [eax+0x8]
   1112f:	cmp    ecx,edx
   11131:	jne    0x1112a
   11133:	pop    ebp
   11134:	ret    0x4
   11137:	int3   
   11138:	int3   
   11139:	int3   
   1113a:	int3   
   1113b:	int3   
   1113c:	mov    edi,edi
   1113e:	push   ebp
   1113f:	mov    ebp,esp
   11141:	mov    eax,DWORD PTR [ebp+0x8]
   11144:	mov    edx,DWORD PTR ds:0x780b8
   1114a:	jmp    0x1114e
   1114c:	mov    eax,ecx
   1114e:	mov    ecx,DWORD PTR [eax]
   11150:	cmp    ecx,edx
   11152:	jne    0x1114c
   11154:	pop    ebp
   11155:	ret    0x4
   11158:	int3   
   11159:	int3   
   1115a:	int3   
   1115b:	int3   
   1115c:	int3   
   1115d:	int3   
   1115e:	mov    edi,edi
   11160:	push   esi
   11161:	mov    esi,ecx
   11163:	mov    ecx,DWORD PTR [esi]
   11165:	cmp    DWORD PTR [ecx+0x14],0x0
   11169:	jne    0x11178
   1116b:	mov    eax,DWORD PTR [ecx+0x4]
   1116e:	cmp    DWORD PTR [eax+0x4],ecx
   11171:	jne    0x11178
   11173:	mov    eax,DWORD PTR [ecx+0x8]
   11176:	jmp    0x11195
   11178:	mov    eax,DWORD PTR [ecx]
   1117a:	cmp    eax,DWORD PTR ds:0x780b0
   11180:	je     0x1118e
   11182:	push   eax
   11183:	call   0x11092
   11188:	jmp    0x11195
   1118a:	mov    DWORD PTR [esi],eax
   1118c:	mov    ecx,eax
   1118e:	mov    eax,DWORD PTR [ecx+0x4]
   11191:	cmp    ecx,DWORD PTR [eax]
   11193:	je     0x1118a
   11195:	mov    DWORD PTR [esi],eax
   11197:	pop    esi
   11198:	ret    
   11199:	int3   
   1119a:	int3   
   1119b:	int3   
   1119c:	int3   
   1119d:	int3   
   1119e:	mov    edi,edi
   111a0:	push   esi
   111a1:	mov    esi,ecx
   111a3:	mov    ecx,DWORD PTR [esi]
   111a5:	mov    eax,DWORD PTR [ecx+0x8]
   111a8:	cmp    eax,DWORD PTR ds:0x780b0
   111ae:	je     0x111bc
   111b0:	push   eax
   111b1:	call   0x110b4
   111b6:	jmp    0x111cb
   111b8:	mov    DWORD PTR [esi],eax
   111ba:	mov    ecx,eax
   111bc:	mov    eax,DWORD PTR [ecx+0x4]
   111bf:	cmp    ecx,DWORD PTR [eax+0x8]
   111c2:	je     0x111b8
   111c4:	mov    ecx,DWORD PTR [esi]
   111c6:	cmp    DWORD PTR [ecx+0x8],eax
   111c9:	je     0x111cd
   111cb:	mov    DWORD PTR [esi],eax
   111cd:	pop    esi
   111ce:	ret    
   111cf:	int3   
   111d0:	int3   
   111d1:	int3   
   111d2:	int3   
   111d3:	int3   
   111d4:	mov    edi,edi
   111d6:	push   ebp
   111d7:	mov    ebp,esp
   111d9:	mov    edx,DWORD PTR [ebp+0x8]
   111dc:	mov    eax,DWORD PTR [edx+0x8]
   111df:	push   esi
   111e0:	mov    esi,DWORD PTR [eax]
   111e2:	mov    DWORD PTR [edx+0x8],esi
   111e5:	mov    esi,DWORD PTR [eax]
   111e7:	cmp    esi,DWORD PTR ds:0x780bc
   111ed:	je     0x111f2
   111ef:	mov    DWORD PTR [esi+0x4],edx
   111f2:	mov    esi,DWORD PTR [edx+0x4]
   111f5:	mov    DWORD PTR [eax+0x4],esi
   111f8:	mov    ecx,DWORD PTR [ecx+0x4]
   111fb:	pop    esi
   111fc:	cmp    edx,DWORD PTR [ecx+0x4]
   111ff:	jne    0x11206
   11201:	mov    DWORD PTR [ecx+0x4],eax
   11204:	jmp    0x11214
   11206:	mov    ecx,DWORD PTR [edx+0x4]
   11209:	cmp    edx,DWORD PTR [ecx]
   1120b:	jne    0x11211
   1120d:	mov    DWORD PTR [ecx],eax
   1120f:	jmp    0x11214
   11211:	mov    DWORD PTR [ecx+0x8],eax
   11214:	mov    DWORD PTR [eax],edx
   11216:	mov    DWORD PTR [edx+0x4],eax
   11219:	pop    ebp
   1121a:	ret    0x4
   1121d:	int3   
   1121e:	int3   
   1121f:	int3   
   11220:	int3   
   11221:	int3   
   11222:	mov    edi,edi
   11224:	push   ebp
   11225:	mov    ebp,esp
   11227:	mov    eax,DWORD PTR [ebp+0x8]
   1122a:	mov    edx,DWORD PTR ds:0x780bc
   11230:	jmp    0x11234
   11232:	mov    eax,ecx
   11234:	mov    ecx,DWORD PTR [eax+0x8]
   11237:	cmp    ecx,edx
   11239:	jne    0x11232
   1123b:	pop    ebp
   1123c:	ret    0x4
   1123f:	int3   
   11240:	int3   
   11241:	int3   
   11242:	int3   
   11243:	int3   
   11244:	mov    edi,edi
   11246:	push   ebp
   11247:	mov    ebp,esp
   11249:	mov    edx,DWORD PTR [ebp+0x8]
   1124c:	mov    eax,DWORD PTR [edx]
   1124e:	push   esi
   1124f:	mov    esi,DWORD PTR [eax+0x8]
   11252:	mov    DWORD PTR [edx],esi
   11254:	mov    esi,DWORD PTR [eax+0x8]
   11257:	cmp    esi,DWORD PTR ds:0x780bc
   1125d:	je     0x11262
   1125f:	mov    DWORD PTR [esi+0x4],edx
   11262:	mov    esi,DWORD PTR [edx+0x4]
   11265:	mov    DWORD PTR [eax+0x4],esi
   11268:	mov    ecx,DWORD PTR [ecx+0x4]
   1126b:	pop    esi
   1126c:	cmp    edx,DWORD PTR [ecx+0x4]
   1126f:	jne    0x11276
   11271:	mov    DWORD PTR [ecx+0x4],eax
   11274:	jmp    0x11285
   11276:	mov    ecx,DWORD PTR [edx+0x4]
   11279:	cmp    edx,DWORD PTR [ecx+0x8]
   1127c:	jne    0x11283
   1127e:	mov    DWORD PTR [ecx+0x8],eax
   11281:	jmp    0x11285
   11283:	mov    DWORD PTR [ecx],eax
   11285:	mov    DWORD PTR [eax+0x8],edx
   11288:	mov    DWORD PTR [edx+0x4],eax
   1128b:	pop    ebp
   1128c:	ret    0x4
   1128f:	int3   
   11290:	int3   
   11291:	int3   
   11292:	int3   
   11293:	int3   
   11294:	mov    edi,edi
   11296:	push   esi
   11297:	mov    esi,ecx
   11299:	mov    ecx,DWORD PTR [esi]
   1129b:	cmp    DWORD PTR [ecx+0x58],0x0
   1129f:	jne    0x112ae
   112a1:	mov    eax,DWORD PTR [ecx+0x4]
   112a4:	cmp    DWORD PTR [eax+0x4],ecx
   112a7:	jne    0x112ae
   112a9:	mov    eax,DWORD PTR [ecx+0x8]
   112ac:	jmp    0x112cb
   112ae:	mov    eax,DWORD PTR [ecx]
   112b0:	cmp    eax,DWORD PTR ds:0x780bc
   112b6:	je     0x112c4
   112b8:	push   eax
   112b9:	call   0x11222
   112be:	jmp    0x112cb
   112c0:	mov    DWORD PTR [esi],eax
   112c2:	mov    ecx,eax
   112c4:	mov    eax,DWORD PTR [ecx+0x4]
   112c7:	cmp    ecx,DWORD PTR [eax]
   112c9:	je     0x112c0
   112cb:	mov    DWORD PTR [esi],eax
   112cd:	pop    esi
   112ce:	ret    
   112cf:	int3   
   112d0:	int3   
   112d1:	int3   
   112d2:	int3   
   112d3:	int3   
   112d4:	mov    edi,edi
   112d6:	push   ebp
   112d7:	mov    ebp,esp
   112d9:	mov    eax,DWORD PTR [ebp+0x8]
   112dc:	mov    edx,DWORD PTR ds:0x780c0
   112e2:	jmp    0x112e6
   112e4:	mov    eax,ecx
   112e6:	mov    ecx,DWORD PTR [eax+0x8]
   112e9:	cmp    ecx,edx
   112eb:	jne    0x112e4
   112ed:	pop    ebp
   112ee:	ret    0x4
   112f1:	int3   
   112f2:	int3   
   112f3:	int3   
   112f4:	int3   
   112f5:	int3   
   112f6:	mov    edi,edi
   112f8:	push   ebp
   112f9:	mov    ebp,esp
   112fb:	mov    eax,DWORD PTR [ebp+0x8]
   112fe:	mov    edx,DWORD PTR ds:0x780c0
   11304:	jmp    0x11308
   11306:	mov    eax,ecx
   11308:	mov    ecx,DWORD PTR [eax]
   1130a:	cmp    ecx,edx
   1130c:	jne    0x11306
   1130e:	pop    ebp
   1130f:	ret    0x4
   11312:	int3   
   11313:	int3   
   11314:	int3   
   11315:	int3   
   11316:	int3   
   11317:	int3   
   11318:	mov    edi,edi
   1131a:	push   esi
   1131b:	mov    esi,ecx
   1131d:	mov    ecx,DWORD PTR [esi]
   1131f:	cmp    DWORD PTR [ecx+0x1c],0x0
   11323:	jne    0x11332
   11325:	mov    eax,DWORD PTR [ecx+0x4]
   11328:	cmp    DWORD PTR [eax+0x4],ecx
   1132b:	jne    0x11332
   1132d:	mov    eax,DWORD PTR [ecx+0x8]
   11330:	jmp    0x1134f
   11332:	mov    eax,DWORD PTR [ecx]
   11334:	cmp    eax,DWORD PTR ds:0x780c0
   1133a:	je     0x11348
   1133c:	push   eax
   1133d:	call   0x112d4
   11342:	jmp    0x1134f
   11344:	mov    DWORD PTR [esi],eax
   11346:	mov    ecx,eax
   11348:	mov    eax,DWORD PTR [ecx+0x4]
   1134b:	cmp    ecx,DWORD PTR [eax]
   1134d:	je     0x11344
   1134f:	mov    DWORD PTR [esi],eax
   11351:	pop    esi
   11352:	ret    
   11353:	int3   
   11354:	int3   
   11355:	int3   
   11356:	int3   
   11357:	int3   
   11358:	mov    edi,edi
   1135a:	push   ebp
   1135b:	mov    ebp,esp
   1135d:	mov    eax,DWORD PTR [ebp+0x8]
   11360:	mov    edx,DWORD PTR ds:0x780c4
   11366:	jmp    0x1136a
   11368:	mov    eax,ecx
   1136a:	mov    ecx,DWORD PTR [eax+0x8]
   1136d:	cmp    ecx,edx
   1136f:	jne    0x11368
   11371:	pop    ebp
   11372:	ret    0x4
   11375:	int3   
   11376:	int3   
   11377:	int3   
   11378:	int3   
   11379:	int3   
   1137a:	mov    edi,edi
   1137c:	push   ebp
   1137d:	mov    ebp,esp
   1137f:	mov    eax,DWORD PTR [ebp+0x8]
   11382:	mov    edx,DWORD PTR ds:0x780c4
   11388:	jmp    0x1138c
   1138a:	mov    eax,ecx
   1138c:	mov    ecx,DWORD PTR [eax]
   1138e:	cmp    ecx,edx
   11390:	jne    0x1138a
   11392:	pop    ebp
   11393:	ret    0x4
   11396:	int3   
   11397:	int3   
   11398:	int3   
   11399:	int3   
   1139a:	int3   
   1139b:	int3   
   1139c:	mov    edi,edi
   1139e:	push   esi
   1139f:	mov    esi,ecx
   113a1:	mov    ecx,DWORD PTR [esi]
   113a3:	cmp    DWORD PTR [ecx+0x14],0x0
   113a7:	jne    0x113b6
   113a9:	mov    eax,DWORD PTR [ecx+0x4]
   113ac:	cmp    DWORD PTR [eax+0x4],ecx
   113af:	jne    0x113b6
   113b1:	mov    eax,DWORD PTR [ecx+0x8]
   113b4:	jmp    0x113d3
   113b6:	mov    eax,DWORD PTR [ecx]
   113b8:	cmp    eax,DWORD PTR ds:0x780c4
   113be:	je     0x113cc
   113c0:	push   eax
   113c1:	call   0x11358
   113c6:	jmp    0x113d3
   113c8:	mov    DWORD PTR [esi],eax
   113ca:	mov    ecx,eax
   113cc:	mov    eax,DWORD PTR [ecx+0x4]
   113cf:	cmp    ecx,DWORD PTR [eax]
   113d1:	je     0x113c8
   113d3:	mov    DWORD PTR [esi],eax
   113d5:	pop    esi
   113d6:	ret    
   113d7:	int3   
   113d8:	int3   
   113d9:	int3   
   113da:	int3   
   113db:	int3   
   113dc:	mov    edi,edi
   113de:	push   esi
   113df:	mov    esi,ecx
   113e1:	mov    ecx,DWORD PTR [esi]
   113e3:	cmp    DWORD PTR [ecx+0x60],0x0
   113e7:	jne    0x113f6
   113e9:	mov    eax,DWORD PTR [ecx+0x4]
   113ec:	cmp    DWORD PTR [eax+0x4],ecx
   113ef:	jne    0x113f6
   113f1:	mov    eax,DWORD PTR [ecx+0x8]
   113f4:	jmp    0x11413
   113f6:	mov    eax,DWORD PTR [ecx]
   113f8:	cmp    eax,DWORD PTR ds:0x780b8
   113fe:	je     0x1140c
   11400:	push   eax
   11401:	call   0x1111a
   11406:	jmp    0x11413
   11408:	mov    DWORD PTR [esi],eax
   1140a:	mov    ecx,eax
   1140c:	mov    eax,DWORD PTR [ecx+0x4]
   1140f:	cmp    ecx,DWORD PTR [eax]
   11411:	je     0x11408
   11413:	mov    DWORD PTR [esi],eax
   11415:	pop    esi
   11416:	ret    
   11417:	int3   
   11418:	int3   
   11419:	int3   
   1141a:	int3   
   1141b:	int3   
   1141c:	mov    edi,edi
   1141e:	push   esi
   1141f:	mov    esi,ecx
   11421:	mov    ecx,DWORD PTR [esi]
   11423:	mov    eax,DWORD PTR [ecx+0x8]
   11426:	cmp    eax,DWORD PTR ds:0x780c0
   1142c:	je     0x1143a
   1142e:	push   eax
   1142f:	call   0x112f6
   11434:	jmp    0x11449
   11436:	mov    DWORD PTR [esi],eax
   11438:	mov    ecx,eax
   1143a:	mov    eax,DWORD PTR [ecx+0x4]
   1143d:	cmp    ecx,DWORD PTR [eax+0x8]
   11440:	je     0x11436
   11442:	mov    ecx,DWORD PTR [esi]
   11444:	cmp    DWORD PTR [ecx+0x8],eax
   11447:	je     0x1144b
   11449:	mov    DWORD PTR [esi],eax
   1144b:	pop    esi
   1144c:	ret    
   1144d:	int3   
   1144e:	int3   
   1144f:	int3   
   11450:	int3   
   11451:	int3   
   11452:	mov    edi,edi
   11454:	push   esi
   11455:	mov    esi,ecx
   11457:	mov    ecx,DWORD PTR [esi]
   11459:	mov    eax,DWORD PTR [ecx+0x8]
   1145c:	cmp    eax,DWORD PTR ds:0x780c4
   11462:	je     0x11470
   11464:	push   eax
   11465:	call   0x1137a
   1146a:	jmp    0x1147f
   1146c:	mov    DWORD PTR [esi],eax
   1146e:	mov    ecx,eax
   11470:	mov    eax,DWORD PTR [ecx+0x4]
   11473:	cmp    ecx,DWORD PTR [eax+0x8]
   11476:	je     0x1146c
   11478:	mov    ecx,DWORD PTR [esi]
   1147a:	cmp    DWORD PTR [ecx+0x8],eax
   1147d:	je     0x11481
   1147f:	mov    DWORD PTR [esi],eax
   11481:	pop    esi
   11482:	ret    
   11483:	int3   
   11484:	int3   
   11485:	int3   
   11486:	int3   
   11487:	int3   
   11488:	mov    edi,edi
   1148a:	push   ebp
   1148b:	mov    ebp,esp
   1148d:	mov    eax,DWORD PTR [ebp+0x8]
   11490:	mov    edx,DWORD PTR ds:0x780cc
   11496:	jmp    0x1149a
   11498:	mov    eax,ecx
   1149a:	mov    ecx,DWORD PTR [eax+0x8]
   1149d:	cmp    ecx,edx
   1149f:	jne    0x11498
   114a1:	pop    ebp
   114a2:	ret    0x4
   114a5:	int3   
   114a6:	int3   
   114a7:	int3   
   114a8:	int3   
   114a9:	int3   
   114aa:	mov    edi,edi
   114ac:	push   ebp
   114ad:	mov    ebp,esp
   114af:	push   ecx
   114b0:	push   ecx
   114b1:	mov    eax,DWORD PTR [ebp+0x8]
   114b4:	mov    DWORD PTR [ebp-0x4],eax
   114b7:	lea    ecx,[eax+0x2]
   114ba:	mov    dx,WORD PTR [eax]
   114bd:	inc    eax
   114be:	inc    eax
   114bf:	test   dx,dx
   114c2:	jne    0x114ba
   114c4:	sub    eax,ecx
   114c6:	sar    eax,1
   114c8:	add    eax,eax
   114ca:	mov    WORD PTR [ebp-0x8],ax
   114ce:	mov    WORD PTR [ebp-0x6],ax
   114d2:	lea    eax,[ebp-0x8]
   114d5:	push   eax
   114d6:	call   DWORD PTR ds:0x1f02c
   114dc:	leave  
   114dd:	ret    0x4
   114e0:	int3   
   114e1:	int3   
   114e2:	int3   
   114e3:	int3   
   114e4:	int3   
   114e5:	int3   
   114e6:	mov    edi,edi
   114e8:	push   ebp
   114e9:	mov    ebp,esp
   114eb:	mov    eax,DWORD PTR [ebp+0x8]
   114ee:	test   eax,eax
   114f0:	je     0x114ff
   114f2:	mov    ecx,DWORD PTR [ebp+0xc]
   114f5:	mov    edx,DWORD PTR [ecx]
   114f7:	mov    DWORD PTR [eax],edx
   114f9:	mov    ecx,DWORD PTR [ecx+0x4]
   114fc:	mov    DWORD PTR [eax+0x4],ecx
   114ff:	pop    ebp
   11500:	ret    0x8
   11503:	int3   
   11504:	int3   
   11505:	int3   
   11506:	int3   
   11507:	int3   
   11508:	mov    edi,edi
   1150a:	push   ebp
   1150b:	mov    ebp,esp
   1150d:	push   esi
   1150e:	mov    esi,ecx
   11510:	call   0x129cc
   11515:	test   BYTE PTR [ebp+0x8],0x1
   11519:	je     0x11522
   1151b:	push   esi
   1151c:	call   0x10990
   11521:	pop    ecx
   11522:	mov    eax,esi
   11524:	pop    esi
   11525:	pop    ebp
   11526:	ret    0x4
   11529:	int3   
   1152a:	int3   
   1152b:	int3   
   1152c:	int3   
   1152d:	int3   
   1152e:	test   BYTE PTR ds:0x780d4,0x1
   11535:	jne    0x1154d
   11537:	or     DWORD PTR ds:0x780d4,0x1
   1153e:	push   0x1df0c
   11543:	call   0x114aa
   11548:	mov    ds:0x780d0,eax
   1154d:	mov    eax,ds:0x780d0
   11552:	ret    
   11553:	int3   
   11554:	int3   
   11555:	int3   
   11556:	int3   
   11557:	int3   
   11558:	test   BYTE PTR ds:0x780dc,0x1
   1155f:	jne    0x11577
   11561:	or     DWORD PTR ds:0x780dc,0x1
   11568:	push   0x1df28
   1156d:	call   0x114aa
   11572:	mov    ds:0x780d8,eax
   11577:	mov    eax,ds:0x780d8
   1157c:	ret    
   1157d:	int3   
   1157e:	int3   
   1157f:	int3   
   11580:	int3   
   11581:	int3   
   11582:	test   BYTE PTR ds:0x780e4,0x1
   11589:	jne    0x115a1
   1158b:	or     DWORD PTR ds:0x780e4,0x1
   11592:	push   0x1df60
   11597:	call   0x114aa
   1159c:	mov    ds:0x780e0,eax
   115a1:	mov    eax,ds:0x780e0
   115a6:	ret    
   115a7:	int3   
   115a8:	int3   
   115a9:	int3   
   115aa:	int3   
   115ab:	int3   
   115ac:	test   BYTE PTR ds:0x780ec,0x1
   115b3:	jne    0x115cb
   115b5:	or     DWORD PTR ds:0x780ec,0x1
   115bc:	push   0x1df82
   115c1:	call   0x114aa
   115c6:	mov    ds:0x780e8,eax
   115cb:	mov    eax,ds:0x780e8
   115d0:	ret    
   115d1:	int3   
   115d2:	int3   
   115d3:	int3   
   115d4:	int3   
   115d5:	int3   
   115d6:	test   BYTE PTR ds:0x780f4,0x1
   115dd:	jne    0x115f5
   115df:	or     DWORD PTR ds:0x780f4,0x1
   115e6:	push   0x1dfc2
   115eb:	call   0x114aa
   115f0:	mov    ds:0x780f0,eax
   115f5:	mov    eax,ds:0x780f0
   115fa:	ret    
   115fb:	int3   
   115fc:	int3   
   115fd:	int3   
   115fe:	int3   
   115ff:	int3   
   11600:	test   BYTE PTR ds:0x780fc,0x1
   11607:	jne    0x1161f
   11609:	or     DWORD PTR ds:0x780fc,0x1
   11610:	push   0x1dfd8
   11615:	call   0x114aa
   1161a:	mov    ds:0x780f8,eax
   1161f:	mov    eax,ds:0x780f8
   11624:	ret    
   11625:	int3   
   11626:	int3   
   11627:	int3   
   11628:	int3   
   11629:	int3   
   1162a:	test   BYTE PTR ds:0x78104,0x1
   11631:	jne    0x11649
   11633:	or     DWORD PTR ds:0x78104,0x1
   1163a:	push   0x1e00c
   1163f:	call   0x114aa
   11644:	mov    ds:0x78100,eax
   11649:	mov    eax,ds:0x78100
   1164e:	ret    
   1164f:	int3   
   11650:	int3   
   11651:	int3   
   11652:	int3   
   11653:	int3   
   11654:	test   BYTE PTR ds:0x7810c,0x1
   1165b:	jne    0x11673
   1165d:	or     DWORD PTR ds:0x7810c,0x1
   11664:	push   0x1e03e
   11669:	call   0x114aa
   1166e:	mov    ds:0x78108,eax
   11673:	mov    eax,ds:0x78108
   11678:	ret    
   11679:	int3   
   1167a:	int3   
   1167b:	int3   
   1167c:	int3   
   1167d:	int3   
   1167e:	test   BYTE PTR ds:0x78114,0x1
   11685:	jne    0x1169d
   11687:	or     DWORD PTR ds:0x78114,0x1
   1168e:	push   0x1e052
   11693:	call   0x114aa
   11698:	mov    ds:0x78110,eax
   1169d:	mov    eax,ds:0x78110
   116a2:	ret    
   116a3:	int3   
   116a4:	int3   
   116a5:	int3   
   116a6:	int3   
   116a7:	int3   
   116a8:	test   BYTE PTR ds:0x7811c,0x1
   116af:	jne    0x116c7
   116b1:	or     DWORD PTR ds:0x7811c,0x1
   116b8:	push   0x1e06a
   116bd:	call   0x114aa
   116c2:	mov    ds:0x78118,eax
   116c7:	mov    eax,ds:0x78118
   116cc:	ret    
   116cd:	int3   
   116ce:	int3   
   116cf:	int3   
   116d0:	int3   
   116d1:	int3   
   116d2:	test   BYTE PTR ds:0x78124,0x1
   116d9:	jne    0x116f1
   116db:	or     DWORD PTR ds:0x78124,0x1
   116e2:	push   0x1e086
   116e7:	call   0x114aa
   116ec:	mov    ds:0x78120,eax
   116f1:	mov    eax,ds:0x78120
   116f6:	ret    
   116f7:	int3   
   116f8:	int3   
   116f9:	int3   
   116fa:	int3   
   116fb:	int3   
   116fc:	test   BYTE PTR ds:0x7812c,0x1
   11703:	jne    0x1171b
   11705:	or     DWORD PTR ds:0x7812c,0x1
   1170c:	push   0x1e0c0
   11711:	call   0x114aa
   11716:	mov    ds:0x78128,eax
   1171b:	mov    eax,ds:0x78128
   11720:	ret    
   11721:	int3   
   11722:	int3   
   11723:	int3   
   11724:	int3   
   11725:	int3   
   11726:	test   BYTE PTR ds:0x78134,0x1
   1172d:	jne    0x11745
   1172f:	or     DWORD PTR ds:0x78134,0x1
   11736:	push   0x1e0da
   1173b:	call   0x114aa
   11740:	mov    ds:0x78130,eax
   11745:	mov    eax,ds:0x78130
   1174a:	ret    
   1174b:	int3   
   1174c:	int3   
   1174d:	int3   
   1174e:	int3   
   1174f:	int3   
   11750:	test   BYTE PTR ds:0x7813c,0x1
   11757:	jne    0x1176f
   11759:	or     DWORD PTR ds:0x7813c,0x1
   11760:	push   0x1e0fc
   11765:	call   0x114aa
   1176a:	mov    ds:0x78138,eax
   1176f:	mov    eax,ds:0x78138
   11774:	ret    
   11775:	int3   
   11776:	int3   
   11777:	int3   
   11778:	int3   
   11779:	int3   
   1177a:	test   BYTE PTR ds:0x78144,0x1
   11781:	jne    0x11799
   11783:	or     DWORD PTR ds:0x78144,0x1
   1178a:	push   0x1e136
   1178f:	call   0x114aa
   11794:	mov    ds:0x78140,eax
   11799:	mov    eax,ds:0x78140
   1179e:	ret    
   1179f:	int3   
   117a0:	int3   
   117a1:	int3   
   117a2:	int3   
   117a3:	int3   
   117a4:	test   BYTE PTR ds:0x7814c,0x1
   117ab:	jne    0x117c3
   117ad:	or     DWORD PTR ds:0x7814c,0x1
   117b4:	push   0x1e15c
   117b9:	call   0x114aa
   117be:	mov    ds:0x78148,eax
   117c3:	mov    eax,ds:0x78148
   117c8:	ret    
   117c9:	int3   
   117ca:	int3   
   117cb:	int3   
   117cc:	int3   
   117cd:	int3   
   117ce:	test   BYTE PTR ds:0x78154,0x1
   117d5:	jne    0x117ed
   117d7:	or     DWORD PTR ds:0x78154,0x1
   117de:	push   0x1e18c
   117e3:	call   0x114aa
   117e8:	mov    ds:0x78150,eax
   117ed:	mov    eax,ds:0x78150
   117f2:	ret    
   117f3:	int3   
   117f4:	int3   
   117f5:	int3   
   117f6:	int3   
   117f7:	int3   
   117f8:	test   BYTE PTR ds:0x7815c,0x1
   117ff:	jne    0x11817
   11801:	or     DWORD PTR ds:0x7815c,0x1
   11808:	push   0x1e1be
   1180d:	call   0x114aa
   11812:	mov    ds:0x78158,eax
   11817:	mov    eax,ds:0x78158
   1181c:	ret    
   1181d:	int3   
   1181e:	int3   
   1181f:	int3   
   11820:	int3   
   11821:	int3   
   11822:	test   BYTE PTR ds:0x78164,0x1
   11829:	jne    0x11841
   1182b:	or     DWORD PTR ds:0x78164,0x1
   11832:	push   0x1e1ce
   11837:	call   0x114aa
   1183c:	mov    ds:0x78160,eax
   11841:	mov    eax,ds:0x78160
   11846:	ret    
   11847:	int3   
   11848:	int3   
   11849:	int3   
   1184a:	int3   
   1184b:	int3   
   1184c:	test   BYTE PTR ds:0x7816c,0x1
   11853:	jne    0x1186b
   11855:	or     DWORD PTR ds:0x7816c,0x1
   1185c:	push   0x1e1ea
   11861:	call   0x114aa
   11866:	mov    ds:0x78168,eax
   1186b:	mov    eax,ds:0x78168
   11870:	ret    
   11871:	int3   
   11872:	int3   
   11873:	int3   
   11874:	int3   
   11875:	int3   
   11876:	test   BYTE PTR ds:0x78174,0x1
   1187d:	jne    0x11895
   1187f:	or     DWORD PTR ds:0x78174,0x1
   11886:	push   0x1e1fe
   1188b:	call   0x114aa
   11890:	mov    ds:0x78170,eax
   11895:	mov    eax,ds:0x78170
   1189a:	ret    
   1189b:	int3   
   1189c:	int3   
   1189d:	int3   
   1189e:	int3   
   1189f:	int3   
   118a0:	test   BYTE PTR ds:0x7817c,0x1
   118a7:	jne    0x118bf
   118a9:	or     DWORD PTR ds:0x7817c,0x1
   118b0:	push   0x1e21c
   118b5:	call   0x114aa
   118ba:	mov    ds:0x78178,eax
   118bf:	mov    eax,ds:0x78178
   118c4:	ret    
   118c5:	int3   
   118c6:	int3   
   118c7:	int3   
   118c8:	int3   
   118c9:	int3   
   118ca:	test   BYTE PTR ds:0x78184,0x1
   118d1:	jne    0x118e9
   118d3:	or     DWORD PTR ds:0x78184,0x1
   118da:	push   0x1e236
   118df:	call   0x114aa
   118e4:	mov    ds:0x78180,eax
   118e9:	mov    eax,ds:0x78180
   118ee:	ret    
   118ef:	int3   
   118f0:	int3   
   118f1:	int3   
   118f2:	int3   
   118f3:	int3   
   118f4:	test   BYTE PTR ds:0x7818c,0x1
   118fb:	jne    0x11913
   118fd:	or     DWORD PTR ds:0x7818c,0x1
   11904:	push   0x1e24e
   11909:	call   0x114aa
   1190e:	mov    ds:0x78188,eax
   11913:	mov    eax,ds:0x78188
   11918:	ret    
   11919:	int3   
   1191a:	int3   
   1191b:	int3   
   1191c:	int3   
   1191d:	int3   
   1191e:	test   BYTE PTR ds:0x78194,0x1
   11925:	jne    0x1193d
   11927:	or     DWORD PTR ds:0x78194,0x1
   1192e:	push   0x1e26c
   11933:	call   0x114aa
   11938:	mov    ds:0x78190,eax
   1193d:	mov    eax,ds:0x78190
   11942:	ret    
   11943:	int3   
   11944:	int3   
   11945:	int3   
   11946:	int3   
   11947:	int3   
   11948:	test   BYTE PTR ds:0x7819c,0x1
   1194f:	jne    0x11967
   11951:	or     DWORD PTR ds:0x7819c,0x1
   11958:	push   0x1e28c
   1195d:	call   0x114aa
   11962:	mov    ds:0x78198,eax
   11967:	mov    eax,ds:0x78198
   1196c:	ret    
   1196d:	int3   
   1196e:	int3   
   1196f:	int3   
   11970:	int3   
   11971:	int3   
   11972:	test   BYTE PTR ds:0x781a4,0x1
   11979:	jne    0x11991
   1197b:	or     DWORD PTR ds:0x781a4,0x1
   11982:	push   0x1e2ac
   11987:	call   0x114aa
   1198c:	mov    ds:0x781a0,eax
   11991:	mov    eax,ds:0x781a0
   11996:	ret    
   11997:	int3   
   11998:	int3   
   11999:	int3   
   1199a:	int3   
   1199b:	int3   
   1199c:	test   BYTE PTR ds:0x781ac,0x1
   119a3:	jne    0x119bb
   119a5:	or     DWORD PTR ds:0x781ac,0x1
   119ac:	push   0x1e2cc
   119b1:	call   0x114aa
   119b6:	mov    ds:0x781a8,eax
   119bb:	mov    eax,ds:0x781a8
   119c0:	ret    
   119c1:	int3   
   119c2:	int3   
   119c3:	int3   
   119c4:	int3   
   119c5:	int3   
   119c6:	test   BYTE PTR ds:0x781b4,0x1
   119cd:	jne    0x119e5
   119cf:	or     DWORD PTR ds:0x781b4,0x1
   119d6:	push   0x1e2e2
   119db:	call   0x114aa
   119e0:	mov    ds:0x781b0,eax
   119e5:	mov    eax,ds:0x781b0
   119ea:	ret    
   119eb:	int3   
   119ec:	int3   
   119ed:	int3   
   119ee:	int3   
   119ef:	int3   
   119f0:	test   BYTE PTR ds:0x781bc,0x1
   119f7:	jne    0x11a0f
   119f9:	or     DWORD PTR ds:0x781bc,0x1
   11a00:	push   0x1e30c
   11a05:	call   0x114aa
   11a0a:	mov    ds:0x781b8,eax
   11a0f:	mov    eax,ds:0x781b8
   11a14:	ret    
   11a15:	int3   
   11a16:	int3   
   11a17:	int3   
   11a18:	int3   
   11a19:	int3   
   11a1a:	test   BYTE PTR ds:0x781c4,0x1
   11a21:	jne    0x11a39
   11a23:	or     DWORD PTR ds:0x781c4,0x1
   11a2a:	push   0x1e324
   11a2f:	call   0x114aa
   11a34:	mov    ds:0x781c0,eax
   11a39:	mov    eax,ds:0x781c0
   11a3e:	ret    
   11a3f:	int3   
   11a40:	int3   
   11a41:	int3   
   11a42:	int3   
   11a43:	int3   
   11a44:	test   BYTE PTR ds:0x781cc,0x1
   11a4b:	jne    0x11a63
   11a4d:	or     DWORD PTR ds:0x781cc,0x1
   11a54:	push   0x1e352
   11a59:	call   0x114aa
   11a5e:	mov    ds:0x781c8,eax
   11a63:	mov    eax,ds:0x781c8
   11a68:	ret    
   11a69:	int3   
   11a6a:	int3   
   11a6b:	int3   
   11a6c:	int3   
   11a6d:	int3   
   11a6e:	test   BYTE PTR ds:0x781d4,0x1
   11a75:	jne    0x11a8d
   11a77:	or     DWORD PTR ds:0x781d4,0x1
   11a7e:	push   0x1e37c
   11a83:	call   0x114aa
   11a88:	mov    ds:0x781d0,eax
   11a8d:	mov    eax,ds:0x781d0
   11a92:	ret    
   11a93:	int3   
   11a94:	int3   
   11a95:	int3   
   11a96:	int3   
   11a97:	int3   
   11a98:	test   BYTE PTR ds:0x781dc,0x1
   11a9f:	jne    0x11ab7
   11aa1:	or     DWORD PTR ds:0x781dc,0x1
   11aa8:	push   0x1e39a
   11aad:	call   0x114aa
   11ab2:	mov    ds:0x781d8,eax
   11ab7:	mov    eax,ds:0x781d8
   11abc:	ret    
   11abd:	int3   
   11abe:	int3   
   11abf:	int3   
   11ac0:	int3   
   11ac1:	int3   
   11ac2:	test   BYTE PTR ds:0x781e4,0x1
   11ac9:	jne    0x11ae1
   11acb:	or     DWORD PTR ds:0x781e4,0x1
   11ad2:	push   0x1e3c8
   11ad7:	call   0x114aa
   11adc:	mov    ds:0x781e0,eax
   11ae1:	mov    eax,ds:0x781e0
   11ae6:	ret    
   11ae7:	int3   
   11ae8:	int3   
   11ae9:	int3   
   11aea:	int3   
   11aeb:	int3   
   11aec:	test   BYTE PTR ds:0x781ec,0x1
   11af3:	jne    0x11b0b
   11af5:	or     DWORD PTR ds:0x781ec,0x1
   11afc:	push   0x1e3ee
   11b01:	call   0x114aa
   11b06:	mov    ds:0x781e8,eax
   11b0b:	mov    eax,ds:0x781e8
   11b10:	ret    
   11b11:	int3   
   11b12:	int3   
   11b13:	int3   
   11b14:	int3   
   11b15:	int3   
   11b16:	test   BYTE PTR ds:0x781f4,0x1
   11b1d:	jne    0x11b35
   11b1f:	or     DWORD PTR ds:0x781f4,0x1
   11b26:	push   0x1e40e
   11b2b:	call   0x114aa
   11b30:	mov    ds:0x781f0,eax
   11b35:	mov    eax,ds:0x781f0
   11b3a:	ret    
   11b3b:	int3   
   11b3c:	int3   
   11b3d:	int3   
   11b3e:	int3   
   11b3f:	int3   
   11b40:	test   BYTE PTR ds:0x781fc,0x1
   11b47:	jne    0x11b5f
   11b49:	or     DWORD PTR ds:0x781fc,0x1
   11b50:	push   0x1e438
   11b55:	call   0x114aa
   11b5a:	mov    ds:0x781f8,eax
   11b5f:	mov    eax,ds:0x781f8
   11b64:	ret    
   11b65:	int3   
   11b66:	int3   
   11b67:	int3   
   11b68:	int3   
   11b69:	int3   
   11b6a:	test   BYTE PTR ds:0x78204,0x1
   11b71:	jne    0x11b89
   11b73:	or     DWORD PTR ds:0x78204,0x1
   11b7a:	push   0x1e45c
   11b7f:	call   0x114aa
   11b84:	mov    ds:0x78200,eax
   11b89:	mov    eax,ds:0x78200
   11b8e:	ret    
   11b8f:	int3   
   11b90:	int3   
   11b91:	int3   
   11b92:	int3   
   11b93:	int3   
   11b94:	test   BYTE PTR ds:0x7820c,0x1
   11b9b:	jne    0x11bb3
   11b9d:	or     DWORD PTR ds:0x7820c,0x1
   11ba4:	push   0x1e492
   11ba9:	call   0x114aa
   11bae:	mov    ds:0x78208,eax
   11bb3:	mov    eax,ds:0x78208
   11bb8:	ret    
   11bb9:	int3   
   11bba:	int3   
   11bbb:	int3   
   11bbc:	int3   
   11bbd:	int3   
   11bbe:	call   0x1152e
   11bc3:	test   eax,eax
   11bc5:	jne    0x11bca
   11bc7:	xor    eax,eax
   11bc9:	ret    
   11bca:	call   0x11558
   11bcf:	test   eax,eax
   11bd1:	je     0x11bc7
   11bd3:	call   0x11582
   11bd8:	test   eax,eax
   11bda:	je     0x11bc7
   11bdc:	call   0x115ac
   11be1:	test   eax,eax
   11be3:	je     0x11bc7
   11be5:	call   0x115d6
   11bea:	test   eax,eax
   11bec:	je     0x11bc7
   11bee:	call   0x11600
   11bf3:	test   eax,eax
   11bf5:	je     0x11bc7
   11bf7:	call   0x1162a
   11bfc:	test   eax,eax
   11bfe:	je     0x11bc7
   11c00:	call   0x11654
   11c05:	test   eax,eax
   11c07:	je     0x11bc7
   11c09:	call   0x1167e
   11c0e:	test   eax,eax
   11c10:	je     0x11bc7
   11c12:	call   0x116a8
   11c17:	test   eax,eax
   11c19:	je     0x11bc7
   11c1b:	call   0x116d2
   11c20:	test   eax,eax
   11c22:	je     0x11bc7
   11c24:	call   0x116fc
   11c29:	test   eax,eax
   11c2b:	je     0x11bc7
   11c2d:	call   0x11726
   11c32:	test   eax,eax
   11c34:	je     0x11bc7
   11c36:	call   0x11750
   11c3b:	test   eax,eax
   11c3d:	je     0x11bc7
   11c3f:	call   0x1177a
   11c44:	test   eax,eax
   11c46:	je     0x11bc7
   11c4c:	call   0x117a4
   11c51:	test   eax,eax
   11c53:	je     0x11bc7
   11c59:	call   0x117ce
   11c5e:	test   eax,eax
   11c60:	je     0x11bc7
   11c66:	call   0x117f8
   11c6b:	test   eax,eax
   11c6d:	je     0x11bc7
   11c73:	call   0x11822
   11c78:	test   eax,eax
   11c7a:	je     0x11bc7
   11c80:	call   0x1184c
   11c85:	test   eax,eax
   11c87:	je     0x11bc7
   11c8d:	call   0x11876
   11c92:	test   eax,eax
   11c94:	je     0x11bc7
   11c9a:	call   0x118a0
   11c9f:	test   eax,eax
   11ca1:	je     0x11bc7
   11ca7:	call   0x118ca
   11cac:	test   eax,eax
   11cae:	je     0x11bc7
   11cb4:	call   0x118f4
   11cb9:	test   eax,eax
   11cbb:	je     0x11bc7
   11cc1:	call   0x1191e
   11cc6:	test   eax,eax
   11cc8:	je     0x11bc7
   11cce:	call   0x11948
   11cd3:	test   eax,eax
   11cd5:	je     0x11bc7
   11cdb:	call   0x11972
   11ce0:	test   eax,eax
   11ce2:	je     0x11bc7
   11ce8:	call   0x1199c
   11ced:	test   eax,eax
   11cef:	je     0x11bc7
   11cf5:	call   0x119c6
   11cfa:	test   eax,eax
   11cfc:	je     0x11bc7
   11d02:	call   0x119f0
   11d07:	test   eax,eax
   11d09:	je     0x11bc7
   11d0f:	call   0x11a1a
   11d14:	test   eax,eax
   11d16:	je     0x11bc7
   11d1c:	call   0x11a44
   11d21:	test   eax,eax
   11d23:	je     0x11bc7
   11d29:	call   0x11a6e
   11d2e:	test   eax,eax
   11d30:	je     0x11bc7
   11d36:	call   0x11a98
   11d3b:	test   eax,eax
   11d3d:	je     0x11bc7
   11d43:	call   0x11ac2
   11d48:	test   eax,eax
   11d4a:	je     0x11bc7
   11d50:	call   0x11aec
   11d55:	test   eax,eax
   11d57:	je     0x11bc7
   11d5d:	call   0x11b16
   11d62:	test   eax,eax
   11d64:	je     0x11bc7
   11d6a:	call   0x11b40
   11d6f:	test   eax,eax
   11d71:	je     0x11bc7
   11d77:	call   0x11b6a
   11d7c:	test   eax,eax
   11d7e:	je     0x11bc7
   11d84:	call   0x11b94
   11d89:	neg    eax
   11d8b:	sbb    eax,eax
   11d8d:	neg    eax
   11d8f:	ret    
   11d90:	int3   
   11d91:	int3   
   11d92:	int3   
   11d93:	int3   
   11d94:	int3   
   11d95:	int3   
   11d96:	mov    edi,edi
   11d98:	push   ebp
   11d99:	mov    ebp,esp
   11d9b:	push   esi
   11d9c:	push   0x20
   11d9e:	push   0x61737973
   11da3:	push   DWORD PTR [ebp+0x8]
   11da6:	push   0x1
   11da8:	call   DWORD PTR ds:0x1f060
   11dae:	mov    esi,eax
   11db0:	test   esi,esi
   11db2:	jne    0x11dc0
   11db4:	push   0xc000009a
   11db9:	call   0x11822
   11dbe:	call   eax
   11dc0:	mov    eax,esi
   11dc2:	pop    esi
   11dc3:	pop    ebp
   11dc4:	ret    
   11dc5:	int3   
   11dc6:	int3   
   11dc7:	int3   
   11dc8:	int3   
   11dc9:	int3   
   11dca:	mov    edi,edi
   11dcc:	push   esi
   11dcd:	mov    esi,ecx
   11dcf:	push   DWORD PTR [esi+0x38]
   11dd2:	call   0x10990
   11dd7:	push   DWORD PTR [esi+0x18]
   11dda:	call   0x10990
   11ddf:	push   DWORD PTR [esi+0x10]
   11de2:	call   0x10990
   11de7:	push   DWORD PTR [esi+0x8]
   11dea:	call   0x10990
   11def:	push   DWORD PTR [esi]
   11df1:	call   0x10990
   11df6:	add    esp,0x14
   11df9:	pop    esi
   11dfa:	ret    
   11dfb:	int3   
   11dfc:	int3   
   11dfd:	int3   
   11dfe:	int3   
   11dff:	int3   
   11e00:	mov    edi,edi
   11e02:	push   ebp
   11e03:	mov    ebp,esp
   11e05:	mov    eax,ecx
   11e07:	mov    ecx,DWORD PTR [ebp+0x8]
   11e0a:	mov    edx,DWORD PTR [ecx]
   11e0c:	test   edx,edx
   11e0e:	je     0x11e17
   11e10:	mov    DWORD PTR [eax],edx
   11e12:	inc    DWORD PTR [edx+0x4]
   11e15:	jmp    0x11e1a
   11e17:	and    DWORD PTR [eax],0x0
   11e1a:	pop    ebp
   11e1b:	ret    0x4
   11e1e:	int3   
   11e1f:	int3   
   11e20:	int3   
   11e21:	int3   
   11e22:	int3   
   11e23:	int3   
   11e24:	mov    edi,edi
   11e26:	push   ebp
   11e27:	mov    ebp,esp
   11e29:	push   esi
   11e2a:	mov    esi,ecx
   11e2c:	mov    ecx,DWORD PTR [esi]
   11e2e:	test   ecx,ecx
   11e30:	je     0x11e37
   11e32:	call   0x109ae
   11e37:	mov    eax,DWORD PTR [ebp+0x8]
   11e3a:	mov    eax,DWORD PTR [eax]
   11e3c:	mov    DWORD PTR [esi],eax
   11e3e:	inc    DWORD PTR [eax+0x4]
   11e41:	mov    eax,esi
   11e43:	pop    esi
   11e44:	pop    ebp
   11e45:	ret    0x4
   11e48:	int3   
   11e49:	int3   
   11e4a:	int3   
   11e4b:	int3   
   11e4c:	int3   
   11e4d:	int3   
   11e4e:	mov    edi,edi
   11e50:	push   ebp
   11e51:	mov    ebp,esp
   11e53:	push   ebx
   11e54:	push   esi
   11e55:	push   edi
   11e56:	mov    edi,DWORD PTR [ebp+0xc]
   11e59:	mov    esi,ecx
   11e5b:	and    DWORD PTR [esi+0x4],0x0
   11e5f:	lea    eax,[edi+0x1]
   11e62:	push   eax
   11e63:	mov    DWORD PTR [esi+0x8],edi
   11e66:	call   0x11d96
   11e6b:	push   edi
   11e6c:	push   DWORD PTR [ebp+0x8]
   11e6f:	mov    ebx,eax
   11e71:	push   ebx
   11e72:	call   0x1da96
   11e77:	add    esp,0x10
   11e7a:	inc    DWORD PTR [esi+0x4]
   11e7d:	pop    edi
   11e7e:	mov    DWORD PTR [esi],ebx
   11e80:	mov    eax,esi
   11e82:	pop    esi
   11e83:	pop    ebx
   11e84:	pop    ebp
   11e85:	ret    0x8
   11e88:	int3   
   11e89:	int3   
   11e8a:	int3   
   11e8b:	int3   
   11e8c:	int3   
   11e8d:	int3   
   11e8e:	mov    edi,edi
   11e90:	push   ebp
   11e91:	mov    ebp,esp
   11e93:	push   ecx
   11e94:	push   edi
   11e95:	lea    eax,[ebp-0x4]
   11e98:	push   eax
   11e99:	xor    edi,edi
   11e9b:	push   edi
   11e9c:	push   edi
   11e9d:	push   0x1b
   11e9f:	push   DWORD PTR [ebp+0x8]
   11ea2:	call   0x11600
   11ea7:	call   eax
   11ea9:	cmp    eax,0xc0000004
   11eae:	jne    0x11f16
   11eb0:	mov    ecx,DWORD PTR [ebp-0x4]
   11eb3:	push   ebx
   11eb4:	mov    ebx,DWORD PTR [ebp+0xc]
   11eb7:	movzx  edx,WORD PTR [ebx+0x2]
   11ebb:	lea    eax,[ecx-0x8]
   11ebe:	cmp    edx,eax
   11ec0:	jae    0x11ecc
   11ec2:	mov    WORD PTR [ebx],ax
   11ec5:	mov    eax,0x80000005
   11eca:	jmp    0x11f15
   11ecc:	push   esi
   11ecd:	push   0x20736649
   11ed2:	push   ecx
   11ed3:	push   edi
   11ed4:	call   DWORD PTR ds:0x1f028
   11eda:	mov    esi,eax
   11edc:	cmp    esi,edi
   11ede:	jne    0x11ee7
   11ee0:	mov    eax,0xc000009a
   11ee5:	jmp    0x11f14
   11ee7:	lea    eax,[ebp-0x4]
   11eea:	push   eax
   11eeb:	push   DWORD PTR [ebp-0x4]
   11eee:	push   esi
   11eef:	push   0x1b
   11ef1:	push   DWORD PTR [ebp+0x8]
   11ef4:	call   0x11600
   11ef9:	call   eax
   11efb:	mov    edi,eax
   11efd:	test   edi,edi
   11eff:	jl     0x11f09
   11f01:	push   esi
   11f02:	push   ebx
   11f03:	call   DWORD PTR ds:0x1f034
   11f09:	push   0x0
   11f0b:	push   esi
   11f0c:	call   DWORD PTR ds:0x1f014
   11f12:	mov    eax,edi
   11f14:	pop    esi
   11f15:	pop    ebx
   11f16:	pop    edi
   11f17:	leave  
   11f18:	ret    0x8
   11f1b:	int3   
   11f1c:	int3   
   11f1d:	int3   
   11f1e:	int3   
   11f1f:	int3   
   11f20:	mov    edi,edi
   11f22:	push   ebp
   11f23:	mov    ebp,esp
   11f25:	sub    esp,0x18
   11f28:	push   0x0
   11f2a:	push   0x18
   11f2c:	lea    eax,[ebp-0x18]
   11f2f:	push   eax
   11f30:	push   0x0
   11f32:	push   DWORD PTR [ebp+0x8]
   11f35:	call   0x11600
   11f3a:	call   eax
   11f3c:	test   eax,eax
   11f3e:	jl     0x11f45
   11f40:	mov    eax,DWORD PTR [ebp-0x8]
   11f43:	jmp    0x11f47
   11f45:	xor    eax,eax
   11f47:	leave  
   11f48:	ret    0x4
   11f4b:	int3   
   11f4c:	int3   
   11f4d:	int3   
   11f4e:	int3   
   11f4f:	int3   
   11f50:	mov    edi,edi
   11f52:	push   ebp
   11f53:	mov    ebp,esp
   11f55:	mov    ecx,DWORD PTR ds:0x77fa4
   11f5b:	sub    esp,0x38
   11f5e:	push   esi
   11f5f:	xor    esi,esi
   11f61:	cmp    ecx,esi
   11f63:	jne    0x11f6d
   11f65:	or     eax,0xffffffff
   11f68:	jmp    0x12054
   11f6d:	push   edi
   11f6e:	xor    eax,eax
   11f70:	mov    DWORD PTR [ebp-0x20],esi
   11f73:	lea    edi,[ebp-0x1c]
   11f76:	stos   DWORD PTR es:[edi],eax
   11f77:	lea    eax,[ebp-0x18]
   11f7a:	push   eax
   11f7b:	lea    eax,[ebp-0x38]
   11f7e:	push   eax
   11f7f:	push   0x400
   11f84:	lea    eax,[ebp-0x10]
   11f87:	push   eax
   11f88:	mov    DWORD PTR [ebp-0x4],esi
   11f8b:	mov    DWORD PTR [ebp-0x38],0x18
   11f92:	mov    DWORD PTR [ebp-0x34],esi
   11f95:	mov    DWORD PTR [ebp-0x2c],esi
   11f98:	mov    DWORD PTR [ebp-0x30],esi
   11f9b:	mov    DWORD PTR [ebp-0x28],esi
   11f9e:	mov    DWORD PTR [ebp-0x24],esi
   11fa1:	mov    DWORD PTR [ebp-0x18],ecx
   11fa4:	mov    DWORD PTR [ebp-0x14],esi
   11fa7:	call   0x1152e
   11fac:	call   eax
   11fae:	mov    edi,eax
   11fb0:	cmp    edi,esi
   11fb2:	jl     0x12051
   11fb8:	lea    eax,[ebp-0xc]
   11fbb:	push   eax
   11fbc:	push   0x8
   11fbe:	push   DWORD PTR [ebp-0x10]
   11fc1:	call   0x1177a
   11fc6:	call   eax
   11fc8:	mov    edi,eax
   11fca:	cmp    edi,esi
   11fcc:	jl     0x12047
   11fce:	lea    eax,[ebp-0x4]
   11fd1:	push   eax
   11fd2:	push   0x1
   11fd4:	push   esi
   11fd5:	push   esi
   11fd6:	push   0x1
   11fd8:	push   DWORD PTR [ebp-0xc]
   11fdb:	call   0x11582
   11fe0:	call   eax
   11fe2:	mov    edi,eax
   11fe4:	cmp    edi,esi
   11fe6:	jl     0x1203d
   11fe8:	mov    eax,DWORD PTR [ebp+0x8]
   11feb:	mov    DWORD PTR [ebp-0x18],eax
   11fee:	lea    eax,[ebp-0x18]
   11ff1:	push   eax
   11ff2:	lea    eax,[ebp-0x38]
   11ff5:	push   eax
   11ff6:	push   0x200
   11ffb:	lea    eax,[ebp-0x8]
   11ffe:	push   eax
   11fff:	call   0x1152e
   12004:	call   eax
   12006:	mov    edi,eax
   12008:	cmp    edi,esi
   1200a:	jl     0x12033
   1200c:	mov    eax,DWORD PTR [ebp-0x4]
   1200f:	push   0x8
   12011:	mov    DWORD PTR [ebp-0x20],eax
   12014:	lea    eax,[ebp-0x20]
   12017:	push   eax
   12018:	push   0x9
   1201a:	push   DWORD PTR [ebp-0x8]
   1201d:	mov    DWORD PTR [ebp-0x1c],esi
   12020:	call   0x117a4
   12025:	call   eax
   12027:	push   DWORD PTR [ebp-0x8]
   1202a:	mov    edi,eax
   1202c:	call   0x117f8
   12031:	call   eax
   12033:	push   DWORD PTR [ebp-0x4]
   12036:	call   0x117f8
   1203b:	call   eax
   1203d:	push   DWORD PTR [ebp-0xc]
   12040:	call   0x117f8
   12045:	call   eax
   12047:	push   DWORD PTR [ebp-0x10]
   1204a:	call   0x117f8
   1204f:	call   eax
   12051:	mov    eax,edi
   12053:	pop    edi
   12054:	pop    esi
   12055:	leave  
   12056:	ret    0x4
   12059:	int3   
   1205a:	int3   
   1205b:	int3   
   1205c:	int3   
   1205d:	int3   
   1205e:	mov    edi,edi
   12060:	push   ebp
   12061:	mov    ebp,esp
   12063:	sub    esp,0x43c
   12069:	mov    eax,ds:0x7751c
   1206e:	xor    eax,ebp
   12070:	mov    DWORD PTR [ebp-0x4],eax
   12073:	mov    eax,DWORD PTR [ebp+0xc]
   12076:	push   ebx
   12077:	push   esi
   12078:	mov    esi,DWORD PTR [ebp+0x8]
   1207b:	push   edi
   1207c:	xor    ebx,ebx
   1207e:	push   0x3ff
   12083:	mov    DWORD PTR [ebp-0x418],eax
   12089:	lea    eax,[ebp-0x403]
   1208f:	push   ebx
   12090:	push   eax
   12091:	mov    DWORD PTR [ebp-0x424],esi
   12097:	mov    BYTE PTR [ebp-0x404],bl
   1209d:	call   0x1da8a
   120a2:	add    esp,0xc
   120a5:	lea    eax,[ebp-0x410]
   120ab:	push   eax
   120ac:	push   0x400
   120b1:	lea    eax,[ebp-0x404]
   120b7:	push   eax
   120b8:	push   ebx
   120b9:	push   ebx
   120ba:	push   esi
   120bb:	jmp    0x1226a
   120c0:	cmp    eax,ebx
   120c2:	jl     0x1228c
   120c8:	mov    eax,DWORD PTR [ebp-0x418]
   120ce:	lea    edx,[eax+0x2]
   120d1:	mov    cx,WORD PTR [eax]
   120d4:	inc    eax
   120d5:	inc    eax
   120d6:	cmp    cx,bx
   120d9:	jne    0x120d1
   120db:	mov    ecx,DWORD PTR [ebp-0x3f8]
   120e1:	sub    eax,edx
   120e3:	shr    ecx,1
   120e5:	sar    eax,1
   120e7:	lea    esi,[ecx+eax*1+0x2]
   120eb:	xor    ecx,ecx
   120ed:	push   0x2
   120ef:	pop    edx
   120f0:	mov    eax,esi
   120f2:	mul    edx
   120f4:	seto   cl
   120f7:	neg    ecx
   120f9:	or     ecx,eax
   120fb:	push   ecx
   120fc:	call   0x11d96
   12101:	mov    edi,eax
   12103:	lea    eax,[esi+esi*1]
   12106:	push   eax
   12107:	push   ebx
   12108:	push   edi
   12109:	mov    DWORD PTR [ebp-0x40c],edi
   1210f:	call   0x1da8a
   12114:	mov    eax,DWORD PTR [ebp-0x418]
   1211a:	add    esp,0x10
   1211d:	mov    ecx,eax
   1211f:	mov    dx,WORD PTR [eax]
   12122:	inc    eax
   12123:	inc    eax
   12124:	cmp    dx,bx
   12127:	jne    0x1211f
   12129:	sub    eax,ecx
   1212b:	dec    edi
   1212c:	mov    esi,ecx
   1212e:	dec    edi
   1212f:	mov    cx,WORD PTR [edi+0x2]
   12133:	inc    edi
   12134:	inc    edi
   12135:	cmp    cx,bx
   12138:	jne    0x1212f
   1213a:	mov    ecx,eax
   1213c:	shr    ecx,0x2
   1213f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12141:	mov    ecx,eax
   12143:	and    ecx,0x3
   12146:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12148:	mov    edi,DWORD PTR [ebp-0x40c]
   1214e:	dec    edi
   1214f:	dec    edi
   12150:	mov    ax,WORD PTR [edi+0x2]
   12154:	inc    edi
   12155:	inc    edi
   12156:	cmp    ax,bx
   12159:	jne    0x12150
   1215b:	mov    esi,0x1de3a
   12160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12161:	mov    eax,DWORD PTR [ebp-0x3f8]
   12167:	shr    eax,1
   12169:	push   eax
   1216a:	lea    eax,[ebp-0x3f4]
   12170:	push   eax
   12171:	push   DWORD PTR [ebp-0x40c]
   12177:	call   0x1daa2
   1217c:	mov    esi,DWORD PTR [ebp-0x40c]
   12182:	mov    eax,esi
   12184:	add    esp,0xc
   12187:	mov    DWORD PTR [ebp-0x41c],esi
   1218d:	lea    edx,[eax+0x2]
   12190:	mov    cx,WORD PTR [eax]
   12193:	inc    eax
   12194:	inc    eax
   12195:	cmp    cx,bx
   12198:	jne    0x12190
   1219a:	sub    eax,edx
   1219c:	sar    eax,1
   1219e:	add    eax,eax
   121a0:	mov    WORD PTR [ebp-0x41e],ax
   121a7:	mov    WORD PTR [ebp-0x420],ax
   121ae:	lea    eax,[ebp-0x420]
   121b4:	mov    DWORD PTR [ebp-0x434],eax
   121ba:	lea    eax,[ebp-0x43c]
   121c0:	push   eax
   121c1:	push   0xf003f
   121c6:	lea    eax,[ebp-0x414]
   121cc:	push   eax
   121cd:	mov    DWORD PTR [ebp-0x43c],0x18
   121d7:	mov    DWORD PTR [ebp-0x438],ebx
   121dd:	mov    DWORD PTR [ebp-0x430],0x40
   121e7:	mov    DWORD PTR [ebp-0x42c],ebx
   121ed:	mov    DWORD PTR [ebp-0x428],ebx
   121f3:	call   0x11654
   121f8:	call   eax
   121fa:	push   esi
   121fb:	test   eax,eax
   121fd:	jl     0x12286
   12203:	push   DWORD PTR [ebp-0x414]
   12209:	call   0x1205e
   1220e:	push   esi
   1220f:	mov    BYTE PTR [ebp-0x405],al
   12215:	call   0x10990
   1221a:	pop    ecx
   1221b:	push   DWORD PTR [ebp-0x414]
   12221:	call   0x1167e
   12226:	call   eax
   12228:	test   eax,eax
   1222a:	jl     0x1228c
   1222c:	cmp    BYTE PTR [ebp-0x405],bl
   12232:	je     0x1228c
   12234:	push   0x3ff
   12239:	lea    eax,[ebp-0x403]
   1223f:	push   ebx
   12240:	push   eax
   12241:	mov    BYTE PTR [ebp-0x404],bl
   12247:	call   0x1da8a
   1224c:	add    esp,0xc
   1224f:	lea    eax,[ebp-0x410]
   12255:	push   eax
   12256:	push   0x400
   1225b:	lea    eax,[ebp-0x404]
   12261:	push   eax
   12262:	push   ebx
   12263:	push   ebx
   12264:	push   DWORD PTR [ebp-0x424]
   1226a:	mov    DWORD PTR [ebp-0x410],ebx
   12270:	call   0x11876
   12275:	call   eax
   12277:	cmp    eax,0x8000001a
   1227c:	jne    0x120c0
   12282:	mov    al,0x1
   12284:	jmp    0x1228e
   12286:	call   0x10990
   1228b:	pop    ecx
   1228c:	xor    al,al
   1228e:	mov    ecx,DWORD PTR [ebp-0x4]
   12291:	pop    edi
   12292:	pop    esi
   12293:	xor    ecx,ebp
   12295:	pop    ebx
   12296:	call   0x1da31
   1229b:	leave  
   1229c:	ret    0x8
   1229f:	int3   
   122a0:	int3   
   122a1:	int3   
   122a2:	int3   
   122a3:	int3   
   122a4:	mov    eax,ds:0x77f24
   122a9:	test   eax,eax
   122ab:	je     0x122bc
   122ad:	push   eax
   122ae:	call   0x118f4
   122b3:	call   eax
   122b5:	and    DWORD PTR ds:0x77f24,0x0
   122bc:	ret    
   122bd:	int3   
   122be:	int3   
   122bf:	int3   
   122c0:	int3   
   122c1:	int3   
   122c2:	push   0x28
   122c4:	push   0x77108
   122c9:	call   0x1dac8
   122ce:	xor    eax,eax
   122d0:	mov    DWORD PTR [ebp-0x28],eax
   122d3:	mov    DWORD PTR [ebp-0x2c],eax
   122d6:	mov    ebx,DWORD PTR [ebp+0x8]
   122d9:	cmp    ebx,eax
   122db:	jne    0x122e4
   122dd:	xor    eax,eax
   122df:	jmp    0x123c1
   122e4:	mov    DWORD PTR [ebp-0x4],eax
   122e7:	lea    ecx,[ebp-0x2c]
   122ea:	push   ecx
   122eb:	push   eax
   122ec:	push   0x1
   122ee:	push   ebx
   122ef:	call   0x11750
   122f4:	call   eax
   122f6:	mov    edx,eax
   122f8:	sub    edx,ebx
   122fa:	mov    DWORD PTR [ebp-0x38],edx
   122fd:	mov    esi,DWORD PTR [eax+0x1c]
   12300:	add    esi,ebx
   12302:	mov    edi,DWORD PTR [eax+0x24]
   12305:	add    edi,ebx
   12307:	mov    ecx,DWORD PTR [eax+0x20]
   1230a:	add    ecx,ebx
   1230c:	and    DWORD PTR [ebp-0x20],0x0
   12310:	mov    ebx,DWORD PTR [ebp-0x20]
   12313:	cmp    ebx,DWORD PTR [eax+0x18]
   12316:	jae    0x123a9
   1231c:	movsx  ebx,WORD PTR [edi+ebx*2]
   12320:	cmp    ebx,DWORD PTR [eax+0x14]
   12323:	jae    0x1239d
   12325:	lea    ebx,[esi+ebx*4]
   12328:	mov    DWORD PTR [ebp-0x34],ebx
   1232b:	cmp    DWORD PTR [ebx],edx
   1232d:	jb     0x1233b
   1232f:	mov    ebx,DWORD PTR [ebp-0x2c]
   12332:	add    edx,ebx
   12334:	mov    ebx,DWORD PTR [ebp-0x34]
   12337:	cmp    DWORD PTR [ebx],edx
   12339:	jb     0x12392
   1233b:	mov    edx,DWORD PTR [ebp+0xc]
   1233e:	mov    DWORD PTR [ebp-0x30],edx
   12341:	mov    edx,DWORD PTR [ebp-0x20]
   12344:	mov    edx,DWORD PTR [ecx+edx*4]
   12347:	add    edx,DWORD PTR [ebp+0x8]
   1234a:	mov    DWORD PTR [ebp-0x24],edx
   1234d:	mov    dl,BYTE PTR [edx]
   1234f:	mov    ebx,DWORD PTR [ebp-0x30]
   12352:	cmp    dl,BYTE PTR [ebx]
   12354:	jne    0x1237f
   12356:	test   dl,dl
   12358:	je     0x1237b
   1235a:	mov    edx,DWORD PTR [ebp-0x24]
   1235d:	mov    dl,BYTE PTR [edx+0x1]
   12360:	mov    BYTE PTR [ebp-0x19],dl
   12363:	cmp    dl,BYTE PTR [ebx+0x1]
   12366:	jne    0x1237f
   12368:	mov    edx,DWORD PTR [ebp-0x24]
   1236b:	inc    edx
   1236c:	inc    edx
   1236d:	mov    DWORD PTR [ebp-0x24],edx
   12370:	inc    ebx
   12371:	inc    ebx
   12372:	mov    DWORD PTR [ebp-0x30],ebx
   12375:	cmp    BYTE PTR [ebp-0x19],0x0
   12379:	jne    0x1234d
   1237b:	xor    edx,edx
   1237d:	jmp    0x12384
   1237f:	sbb    edx,edx
   12381:	sbb    edx,0xffffffff
   12384:	test   edx,edx
   12386:	jne    0x12392
   12388:	mov    eax,DWORD PTR [ebp-0x34]
   1238b:	mov    eax,DWORD PTR [eax]
   1238d:	add    eax,DWORD PTR [ebp+0x8]
   12390:	jmp    0x123b7
   12392:	inc    DWORD PTR [ebp-0x20]
   12395:	mov    edx,DWORD PTR [ebp-0x38]
   12398:	jmp    0x12310
   1239d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   123a4:	jmp    0x122dd
   123a9:	mov    eax,DWORD PTR [ebp-0x28]
   123ac:	jmp    0x123ba
   123ae:	xor    eax,eax
   123b0:	inc    eax
   123b1:	ret    
   123b2:	mov    esp,DWORD PTR [ebp-0x18]
   123b5:	xor    eax,eax
   123b7:	mov    DWORD PTR [ebp-0x28],eax
   123ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   123c1:	call   0x1db0d
   123c6:	ret    0x8
   123c9:	int3   
   123ca:	int3   
   123cb:	int3   
   123cc:	int3   
   123cd:	int3   
   123ce:	mov    edi,edi
   123d0:	push   ebp
   123d1:	mov    ebp,esp
   123d3:	sub    esp,0x48
   123d6:	mov    eax,DWORD PTR [ebp+0xc]
   123d9:	mov    eax,DWORD PTR [eax]
   123db:	push   edi
   123dc:	mov    DWORD PTR [ebp-0x30],eax
   123df:	lea    eax,[ebp-0x30]
   123e2:	push   eax
   123e3:	lea    eax,[ebp-0x48]
   123e6:	push   eax
   123e7:	xor    edi,edi
   123e9:	push   0x1f0fff
   123ee:	lea    eax,[ebp-0x10]
   123f1:	push   eax
   123f2:	mov    DWORD PTR [ebp-0x48],0x18
   123f9:	mov    DWORD PTR [ebp-0x44],edi
   123fc:	mov    DWORD PTR [ebp-0x3c],0x200
   12403:	mov    DWORD PTR [ebp-0x40],edi
   12406:	mov    DWORD PTR [ebp-0x38],edi
   12409:	mov    DWORD PTR [ebp-0x34],edi
   1240c:	mov    DWORD PTR [ebp-0x2c],edi
   1240f:	mov    DWORD PTR [ebp-0x10],edi
   12412:	call   0x1152e
   12417:	call   eax
   12419:	test   eax,eax
   1241b:	jl     0x1276f
   12421:	push   ebx
   12422:	push   esi
   12423:	mov    esi,DWORD PTR ds:0x1f03c
   12429:	push   0x40
   1242b:	mov    ebx,0x1000
   12430:	push   ebx
   12431:	lea    eax,[ebp-0x14]
   12434:	push   eax
   12435:	push   edi
   12436:	lea    eax,[ebp-0xc]
   12439:	push   eax
   1243a:	push   DWORD PTR [ebp-0x10]
   1243d:	mov    DWORD PTR [ebp-0xc],edi
   12440:	mov    DWORD PTR [ebp-0x14],0x400
   12447:	call   esi
   12449:	test   eax,eax
   1244b:	jl     0x12456
   1244d:	mov    eax,DWORD PTR [ebp-0xc]
   12450:	mov    ecx,DWORD PTR [ebp+0xc]
   12453:	mov    DWORD PTR [ecx+0x8],eax
   12456:	push   0x4
   12458:	push   ebx
   12459:	lea    eax,[ebp-0x14]
   1245c:	push   eax
   1245d:	push   edi
   1245e:	lea    eax,[ebp-0x18]
   12461:	push   eax
   12462:	push   DWORD PTR [ebp-0x10]
   12465:	mov    DWORD PTR [ebp-0x18],edi
   12468:	mov    DWORD PTR [ebp-0x14],0x400
   1246f:	call   esi
   12471:	test   eax,eax
   12473:	jl     0x1247e
   12475:	mov    eax,DWORD PTR [ebp-0x18]
   12478:	mov    ecx,DWORD PTR [ebp+0xc]
   1247b:	mov    DWORD PTR [ecx+0xc],eax
   1247e:	lea    eax,[ebp-0x24]
   12481:	push   eax
   12482:	push   DWORD PTR [ebp-0x30]
   12485:	call   0x11b6a
   1248a:	call   eax
   1248c:	test   eax,eax
   1248e:	jl     0x1276d
   12494:	push   DWORD PTR [ebp-0x24]
   12497:	call   0x11948
   1249c:	call   eax
   1249e:	mov    eax,DWORD PTR [ebp-0xc]
   124a1:	mov    DWORD PTR [ebp-0x20],edi
   124a4:	cmp    eax,edi
   124a6:	je     0x12753
   124ac:	mov    esi,DWORD PTR [ebp-0x18]
   124af:	cmp    esi,edi
   124b1:	je     0x126c0
   124b7:	push   0x214
   124bc:	push   edi
   124bd:	push   esi
   124be:	mov    DWORD PTR [ebp-0x4],eax
   124c1:	call   0x1da8a
   124c6:	mov    eax,DWORD PTR [ebp-0x4]
   124c9:	add    esp,0xc
   124cc:	push   0x60
   124ce:	lea    ebx,[esi+0xc]
   124d1:	push   eax
   124d2:	mov    DWORD PTR [ebx],edi
   124d4:	mov    DWORD PTR [esi],edi
   124d6:	mov    DWORD PTR [ebp-0x20],eax
   124d9:	call   0x197ee
   124de:	push   0x68
   124e0:	push   eax
   124e1:	call   0x197ee
   124e6:	push   ebx
   124e7:	push   eax
   124e8:	call   0x19806
   124ed:	push   0x6a
   124ef:	pop    ebx
   124f0:	push   ebx
   124f1:	push   eax
   124f2:	call   0x197ee
   124f7:	push   edi
   124f8:	push   eax
   124f9:	call   0x197ee
   124fe:	push   ebx
   124ff:	push   eax
   12500:	call   0x197ee
   12505:	push   edi
   12506:	push   eax
   12507:	call   0x197ee
   1250c:	push   0x68
   1250e:	push   eax
   1250f:	call   0x197ee
   12514:	push   edi
   12515:	push   eax
   12516:	mov    DWORD PTR [ebp-0x28],eax
   12519:	call   0x19806
   1251e:	push   ebx
   1251f:	push   eax
   12520:	call   0x197ee
   12525:	push   edi
   12526:	push   eax
   12527:	call   0x197ee
   1252c:	push   ebx
   1252d:	push   eax
   1252e:	call   0x197ee
   12533:	push   edi
   12534:	push   eax
   12535:	call   0x197ee
   1253a:	push   0xb8
   1253f:	push   eax
   12540:	call   0x197ee
   12545:	push   DWORD PTR ds:0x77f70
   1254b:	push   eax
   1254c:	call   0x19806
   12551:	mov    ebx,0xc00b
   12556:	push   ebx
   12557:	push   eax
   12558:	call   0x19820
   1255d:	push   0x74
   1255f:	push   eax
   12560:	call   0x197ee
   12565:	push   0x9
   12567:	push   eax
   12568:	call   0x197ee
   1256d:	mov    edi,0xd0ff
   12572:	push   edi
   12573:	push   eax
   12574:	call   0x19820
   12579:	push   0xb9
   1257e:	push   eax
   1257f:	call   0x197ee
   12584:	lea    ecx,[esi+0x10]
   12587:	push   ecx
   12588:	push   eax
   12589:	call   0x19806
   1258e:	push   0x189
   12593:	push   eax
   12594:	call   0x19820
   12599:	push   0x61
   1259b:	push   eax
   1259c:	call   0x197ee
   125a1:	and    DWORD PTR [ebp-0x8],0x0
   125a5:	mov    DWORD PTR [ebp-0x4],eax
   125a8:	mov    eax,DWORD PTR [ebp+0x8]
   125ab:	mov    DWORD PTR [ebp-0x1c],eax
   125ae:	push   0x0
   125b0:	push   DWORD PTR [ebp-0x1c]
   125b3:	push   DWORD PTR [ebp-0x4]
   125b6:	call   0x19fa0
   125bb:	mov    ecx,eax
   125bd:	sub    ecx,DWORD PTR [ebp-0x1c]
   125c0:	mov    DWORD PTR [ebp-0x1c],eax
   125c3:	add    DWORD PTR [ebp-0x8],ecx
   125c6:	add    DWORD PTR [ebp-0x4],ecx
   125c9:	cmp    DWORD PTR [ebp-0x8],0x5
   125cd:	jb     0x125ae
   125cf:	mov    ecx,DWORD PTR [ebp+0x8]
   125d2:	push   DWORD PTR [ebp-0x4]
   125d5:	mov    eax,DWORD PTR [ebp-0x8]
   125d8:	add    eax,ecx
   125da:	push   eax
   125db:	call   0x19864
   125e0:	push   eax
   125e1:	push   DWORD PTR [ebp-0x28]
   125e4:	mov    DWORD PTR [ebp-0x4],eax
   125e7:	call   0x19806
   125ec:	mov    eax,DWORD PTR [ebp-0x4]
   125ef:	push   0xeb
   125f4:	push   eax
   125f5:	mov    DWORD PTR [esi],eax
   125f7:	call   0x197ee
   125fc:	push   0x0
   125fe:	push   eax
   125ff:	mov    DWORD PTR [esi+0x4],eax
   12602:	call   0x197ee
   12607:	push   0x68
   12609:	push   eax
   1260a:	call   0x197ee
   1260f:	push   0x3e8
   12614:	push   eax
   12615:	call   0x19806
   1261a:	push   0xb8
   1261f:	push   eax
   12620:	call   0x197ee
   12625:	push   DWORD PTR ds:0x77f74
   1262b:	push   eax
   1262c:	call   0x19806
   12631:	push   ebx
   12632:	push   eax
   12633:	call   0x19820
   12638:	push   0x74
   1263a:	push   eax
   1263b:	call   0x197ee
   12640:	push   0x2
   12642:	push   eax
   12643:	call   0x197ee
   12648:	push   edi
   12649:	push   eax
   1264a:	call   0x19820
   1264f:	push   eax
   12650:	push   DWORD PTR [esi]
   12652:	call   0x19864
   12657:	mov    cl,al
   12659:	sub    cl,BYTE PTR [esi+0x4]
   1265c:	push   0x68
   1265e:	dec    cl
   12660:	push   eax
   12661:	mov    BYTE PTR [esi+0x8],cl
   12664:	call   0x197ee
   12669:	add    esi,0x14
   1266c:	push   esi
   1266d:	push   eax
   1266e:	call   0x19806
   12673:	push   0xb8
   12678:	push   eax
   12679:	call   0x197ee
   1267e:	push   DWORD PTR ds:0x77f68
   12684:	push   eax
   12685:	call   0x19806
   1268a:	push   ebx
   1268b:	push   eax
   1268c:	call   0x19820
   12691:	push   0x74
   12693:	push   eax
   12694:	call   0x197ee
   12699:	push   0x2
   1269b:	push   eax
   1269c:	call   0x197ee
   126a1:	push   edi
   126a2:	push   eax
   126a3:	call   0x19820
   126a8:	push   0xc2
   126ad:	push   eax
   126ae:	call   0x197ee
   126b3:	push   0x4
   126b5:	push   eax
   126b6:	call   0x19820
   126bb:	mov    eax,DWORD PTR [ebp-0xc]
   126be:	xor    edi,edi
   126c0:	cmp    eax,edi
   126c2:	je     0x12753
   126c8:	add    eax,0x400
   126cd:	lea    esi,[eax-0xc]
   126d0:	lea    ecx,[eax-0x8]
   126d3:	push   esi
   126d4:	lea    ebx,[eax-0x4]
   126d7:	lea    edx,[eax-0x10]
   126da:	push   0x40
   126dc:	add    eax,0xffffffe8
   126df:	push   ecx
   126e0:	mov    DWORD PTR [ebp-0x1c],eax
   126e3:	mov    eax,DWORD PTR [ebp+0x8]
   126e6:	mov    DWORD PTR [ebx],eax
   126e8:	push   ebx
   126e9:	mov    DWORD PTR [ecx],0x5
   126ef:	push   0xffffffff
   126f1:	mov    DWORD PTR [ebp-0x8],ecx
   126f4:	mov    DWORD PTR [ebp-0x28],edx
   126f7:	mov    DWORD PTR [esi],edi
   126f9:	call   DWORD PTR ds:0x77ee4
   126ff:	test   eax,eax
   12701:	jl     0x12753
   12703:	mov    eax,DWORD PTR [ebp-0x20]
   12706:	sub    eax,DWORD PTR [ebp+0x8]
   12709:	sub    eax,0x5
   1270c:	push   eax
   1270d:	mov    eax,DWORD PTR [ebp-0x1c]
   12710:	inc    eax
   12711:	push   eax
   12712:	call   0x19806
   12717:	push   0xe9
   1271c:	push   DWORD PTR [ebp-0x1c]
   1271f:	call   0x197ee
   12724:	mov    eax,DWORD PTR [ebp-0x28]
   12727:	push   eax
   12728:	push   0x5
   1272a:	push   DWORD PTR [ebp-0x1c]
   1272d:	mov    DWORD PTR [eax],edi
   1272f:	push   DWORD PTR [ebp+0x8]
   12732:	push   0xffffffff
   12734:	call   DWORD PTR ds:0x77ed8
   1273a:	mov    eax,DWORD PTR [ebp+0xc]
   1273d:	mov    BYTE PTR [eax+0x10],0x1
   12741:	lea    eax,[ebp-0x20]
   12744:	push   eax
   12745:	push   DWORD PTR [esi]
   12747:	push   DWORD PTR [ebp-0x8]
   1274a:	push   ebx
   1274b:	push   0xffffffff
   1274d:	call   DWORD PTR ds:0x77ee4
   12753:	call   0x1191e
   12758:	call   eax
   1275a:	mov    ecx,DWORD PTR [ebp-0x24]
   1275d:	call   DWORD PTR ds:0x1f05c
   12763:	push   DWORD PTR [ebp-0x10]
   12766:	call   0x117f8
   1276b:	call   eax
   1276d:	pop    esi
   1276e:	pop    ebx
   1276f:	pop    edi
   12770:	leave  
   12771:	ret    0x8
   12774:	int3   
   12775:	int3   
   12776:	int3   
   12777:	int3   
   12778:	int3   
   12779:	int3   
   1277a:	mov    edi,edi
   1277c:	push   ebp
   1277d:	mov    ebp,esp
   1277f:	sub    esp,0x18
   12782:	and    DWORD PTR [ebp-0x18],0x0
   12786:	push   edi
   12787:	xor    eax,eax
   12789:	lea    edi,[ebp-0x14]
   1278c:	stos   DWORD PTR es:[edi],eax
   1278d:	stos   DWORD PTR es:[edi],eax
   1278e:	stos   DWORD PTR es:[edi],eax
   1278f:	stos   DWORD PTR es:[edi],eax
   12790:	lea    eax,[ebp-0x18]
   12793:	push   eax
   12794:	push   0x1
   12796:	call   0x10e6e
   1279b:	pop    edi
   1279c:	test   al,al
   1279e:	je     0x127f5
   127a0:	cmp    DWORD PTR [ebp-0x18],0x0
   127a4:	je     0x127f5
   127a6:	lea    eax,[ebp-0x4]
   127a9:	push   eax
   127aa:	push   DWORD PTR [ebp-0x18]
   127ad:	call   0x11b6a
   127b2:	call   eax
   127b4:	test   eax,eax
   127b6:	jl     0x127f5
   127b8:	push   esi
   127b9:	push   DWORD PTR [ebp-0x4]
   127bc:	call   0x11948
   127c1:	call   eax
   127c3:	mov    esi,DWORD PTR [ebp-0xc]
   127c6:	mov    eax,DWORD PTR [ebp+0x8]
   127c9:	lea    edx,[esi+0x14]
   127cc:	sub    edx,eax
   127ce:	movzx  ecx,WORD PTR [eax]
   127d1:	mov    WORD PTR [edx+eax*1],cx
   127d5:	inc    eax
   127d6:	inc    eax
   127d7:	test   cx,cx
   127da:	jne    0x127ce
   127dc:	mov    eax,DWORD PTR [esi+0x4]
   127df:	mov    cl,BYTE PTR [esi+0x8]
   127e2:	mov    BYTE PTR [eax],cl
   127e4:	call   0x1191e
   127e9:	call   eax
   127eb:	mov    ecx,DWORD PTR [ebp-0x4]
   127ee:	call   DWORD PTR ds:0x1f05c
   127f4:	pop    esi
   127f5:	leave  
   127f6:	ret    0x4
   127f9:	int3   
   127fa:	int3   
   127fb:	int3   
   127fc:	int3   
   127fd:	int3   
   127fe:	mov    edi,edi
   12800:	push   ebp
   12801:	mov    ebp,esp
   12803:	push   ecx
   12804:	and    DWORD PTR [ebp-0x4],0x0
   12808:	push   ebx
   12809:	push   esi
   1280a:	push   edi
   1280b:	mov    esi,0x1000
   12810:	push   0x20736649
   12815:	push   esi
   12816:	push   0x0
   12818:	call   DWORD PTR ds:0x1f028
   1281e:	mov    edi,eax
   12820:	test   edi,edi
   12822:	je     0x12856
   12824:	lea    eax,[ebp-0x4]
   12827:	push   eax
   12828:	push   esi
   12829:	push   edi
   1282a:	push   DWORD PTR [ebp+0x8]
   1282d:	call   0x1162a
   12832:	call   eax
   12834:	mov    ebx,eax
   12836:	cmp    ebx,0xc0000004
   1283c:	jne    0x12849
   1283e:	push   0x0
   12840:	push   edi
   12841:	call   DWORD PTR ds:0x1f014
   12847:	add    esi,esi
   12849:	test   ebx,ebx
   1284b:	jne    0x12810
   1284d:	mov    eax,edi
   1284f:	pop    edi
   12850:	pop    esi
   12851:	pop    ebx
   12852:	leave  
   12853:	ret    0x4
   12856:	xor    eax,eax
   12858:	jmp    0x1284f
   1285a:	int3   
   1285b:	int3   
   1285c:	int3   
   1285d:	int3   
   1285e:	int3   
   1285f:	int3   
   12860:	push   0x0
   12862:	push   0x77ef4
   12867:	call   0x11b40
   1286c:	call   eax
   1286e:	push   0x100
   12873:	push   0x0
   12875:	push   0x775b8
   1287a:	call   0x1da8a
   1287f:	add    esp,0xc
   12882:	ret    
   12883:	int3   
   12884:	int3   
   12885:	int3   
   12886:	int3   
   12887:	int3   
   12888:	mov    edi,edi
   1288a:	push   ebp
   1288b:	mov    ebp,esp
   1288d:	push   esi
   1288e:	mov    esi,DWORD PTR [ebp+0x8]
   12891:	push   edi
   12892:	push   DWORD PTR [esi]
   12894:	call   0x11d96
   12899:	push   DWORD PTR [esi]
   1289b:	mov    edi,eax
   1289d:	push   esi
   1289e:	push   edi
   1289f:	call   0x1da96
   128a4:	add    esp,0x10
   128a7:	mov    eax,edi
   128a9:	pop    edi
   128aa:	pop    esi
   128ab:	pop    ebp
   128ac:	ret    0x4
   128af:	int3   
   128b0:	int3   
   128b1:	int3   
   128b2:	int3   
   128b3:	int3   
   128b4:	mov    edi,edi
   128b6:	push   ebp
   128b7:	mov    ebp,esp
   128b9:	push   ebx
   128ba:	push   esi
   128bb:	push   edi
   128bc:	mov    edi,DWORD PTR [ebp+0x8]
   128bf:	mov    eax,DWORD PTR [edi+0x4]
   128c2:	mov    esi,ecx
   128c4:	mov    ebx,DWORD PTR [esi]
   128c6:	mov    DWORD PTR [esi+0x4],eax
   128c9:	inc    eax
   128ca:	push   eax
   128cb:	call   0x11d96
   128d0:	push   DWORD PTR [esi+0x4]
   128d3:	mov    DWORD PTR [esi],eax
   128d5:	push   DWORD PTR [edi]
   128d7:	push   eax
   128d8:	call   0x1da96
   128dd:	mov    eax,DWORD PTR [esi+0x4]
   128e0:	mov    ecx,DWORD PTR [esi]
   128e2:	push   ebx
   128e3:	mov    BYTE PTR [eax+ecx*1],0x0
   128e7:	call   0x10990
   128ec:	add    esp,0x14
   128ef:	pop    edi
   128f0:	mov    eax,esi
   128f2:	pop    esi
   128f3:	pop    ebx
   128f4:	pop    ebp
   128f5:	ret    0x4
   128f8:	int3   
   128f9:	int3   
   128fa:	int3   
   128fb:	int3   
   128fc:	int3   
   128fd:	int3   
   128fe:	mov    edi,edi
   12900:	push   esi
   12901:	push   edi
   12902:	push   0x20736649
   12907:	push   0x20
   12909:	push   0x0
   1290b:	mov    esi,ecx
   1290d:	call   DWORD PTR ds:0x1f028
   12913:	push   0x0
   12915:	mov    edi,eax
   12917:	push   0x1
   12919:	mov    ecx,esi
   1291b:	mov    DWORD PTR [esi],edi
   1291d:	call   0x1104c
   12922:	mov    DWORD PTR [esi+0x8],eax
   12925:	mov    DWORD PTR [esi+0xc],edx
   12928:	test   edi,edi
   1292a:	jne    0x12938
   1292c:	push   0xc000009a
   12931:	call   0x11822
   12936:	call   eax
   12938:	pop    edi
   12939:	mov    eax,esi
   1293b:	pop    esi
   1293c:	ret    
   1293d:	int3   
   1293e:	int3   
   1293f:	int3   
   12940:	int3   
   12941:	int3   
   12942:	mov    edi,edi
   12944:	push   ebp
   12945:	mov    ebp,esp
   12947:	push   esi
   12948:	push   edi
   12949:	mov    edi,DWORD PTR [ebp+0x8]
   1294c:	push   edi
   1294d:	mov    esi,ecx
   1294f:	call   0x128b4
   12954:	lea    eax,[edi+0x8]
   12957:	push   eax
   12958:	lea    ecx,[esi+0x8]
   1295b:	call   0x128b4
   12960:	lea    eax,[edi+0x10]
   12963:	push   eax
   12964:	lea    ecx,[esi+0x10]
   12967:	call   0x128b4
   1296c:	lea    eax,[edi+0x18]
   1296f:	push   eax
   12970:	lea    ecx,[esi+0x18]
   12973:	call   0x128b4
   12978:	mov    eax,DWORD PTR [edi+0x20]
   1297b:	mov    DWORD PTR [esi+0x20],eax
   1297e:	mov    eax,DWORD PTR [edi+0x28]
   12981:	mov    DWORD PTR [esi+0x28],eax
   12984:	mov    eax,DWORD PTR [edi+0x2c]
   12987:	mov    DWORD PTR [esi+0x2c],eax
   1298a:	mov    eax,DWORD PTR [edi+0x30]
   1298d:	mov    DWORD PTR [esi+0x30],eax
   12990:	mov    eax,DWORD PTR [edi+0x34]
   12993:	add    edi,0x38
   12996:	push   edi
   12997:	lea    ecx,[esi+0x38]
   1299a:	mov    DWORD PTR [esi+0x34],eax
   1299d:	call   0x128b4
   129a2:	pop    edi
   129a3:	mov    eax,esi
   129a5:	pop    esi
   129a6:	pop    ebp
   129a7:	ret    0x4
   129aa:	int3   
   129ab:	int3   
   129ac:	int3   
   129ad:	int3   
   129ae:	int3   
   129af:	int3   
   129b0:	mov    edi,edi
   129b2:	push   esi
   129b3:	mov    esi,ecx
   129b5:	lea    ecx,[esi+0x8]
   129b8:	call   0x11dca
   129bd:	push   DWORD PTR [esi]
   129bf:	call   0x10990
   129c4:	pop    ecx
   129c5:	pop    esi
   129c6:	ret    
   129c7:	int3   
   129c8:	int3   
   129c9:	int3   
   129ca:	int3   
   129cb:	int3   
   129cc:	mov    edi,edi
   129ce:	push   esi
   129cf:	mov    esi,ecx
   129d1:	push   DWORD PTR [esi+0x8]
   129d4:	call   0x10990
   129d9:	push   DWORD PTR [esi]
   129db:	call   0x10990
   129e0:	pop    ecx
   129e1:	pop    ecx
   129e2:	pop    esi
   129e3:	ret    
   129e4:	int3   
   129e5:	int3   
   129e6:	int3   
   129e7:	int3   
   129e8:	int3   
   129e9:	int3   
   129ea:	mov    edi,edi
   129ec:	push   ebp
   129ed:	mov    ebp,esp
   129ef:	push   esi
   129f0:	mov    esi,DWORD PTR [ebp+0xc]
   129f3:	push   edi
   129f4:	mov    edi,ecx
   129f6:	cmp    esi,0xffffffff
   129f9:	jne    0x12a0a
   129fb:	mov    esi,DWORD PTR [ebp+0x8]
   129fe:	lea    ecx,[esi+0x1]
   12a01:	mov    al,BYTE PTR [esi]
   12a03:	inc    esi
   12a04:	test   al,al
   12a06:	jne    0x12a01
   12a08:	sub    esi,ecx
   12a0a:	lea    eax,[esi+0x1]
   12a0d:	push   eax
   12a0e:	call   0x11d96
   12a13:	pop    ecx
   12a14:	mov    DWORD PTR [edi],eax
   12a16:	test   eax,eax
   12a18:	jne    0x12a25
   12a1a:	push   0xc000009a
   12a1f:	call   DWORD PTR ds:0x1f040
   12a25:	mov    eax,DWORD PTR [edi]
   12a27:	push   esi
   12a28:	push   DWORD PTR [ebp+0x8]
   12a2b:	mov    BYTE PTR [esi+eax*1],0x0
   12a2f:	push   DWORD PTR [edi]
   12a31:	call   0x1da96
   12a36:	add    esp,0xc
   12a39:	mov    DWORD PTR [edi+0x4],esi
   12a3c:	pop    edi
   12a3d:	pop    esi
   12a3e:	pop    ebp
   12a3f:	ret    0x8
   12a42:	int3   
   12a43:	int3   
   12a44:	int3   
   12a45:	int3   
   12a46:	int3   
   12a47:	int3   
   12a48:	mov    edi,edi
   12a4a:	push   ebp
   12a4b:	mov    ebp,esp
   12a4d:	push   ebx
   12a4e:	push   esi
   12a4f:	push   edi
   12a50:	mov    edi,DWORD PTR [ebp+0x8]
   12a53:	mov    eax,DWORD PTR [edi+0x4]
   12a56:	mov    esi,ecx
   12a58:	mov    ebx,DWORD PTR [esi]
   12a5a:	mov    DWORD PTR [esi+0x4],eax
   12a5d:	xor    ecx,ecx
   12a5f:	push   0x2
   12a61:	inc    eax
   12a62:	pop    edx
   12a63:	mul    edx
   12a65:	seto   cl
   12a68:	neg    ecx
   12a6a:	or     ecx,eax
   12a6c:	push   ecx
   12a6d:	call   0x11d96
   12a72:	mov    ecx,DWORD PTR [esi+0x4]
   12a75:	add    ecx,ecx
   12a77:	push   ecx
   12a78:	mov    DWORD PTR [esi],eax
   12a7a:	push   DWORD PTR [edi]
   12a7c:	push   eax
   12a7d:	call   0x1da96
   12a82:	mov    eax,DWORD PTR [esi+0x4]
   12a85:	mov    ecx,DWORD PTR [esi]
   12a87:	xor    edx,edx
   12a89:	push   ebx
   12a8a:	mov    WORD PTR [ecx+eax*2],dx
   12a8e:	call   0x10990
   12a93:	add    esp,0x14
   12a96:	pop    edi
   12a97:	mov    eax,esi
   12a99:	pop    esi
   12a9a:	pop    ebx
   12a9b:	pop    ebp
   12a9c:	ret    0x4
   12a9f:	int3   
   12aa0:	int3   
   12aa1:	int3   
   12aa2:	int3   
   12aa3:	int3   
   12aa4:	mov    edi,edi
   12aa6:	push   ebp
   12aa7:	mov    ebp,esp
   12aa9:	mov    eax,DWORD PTR [ebp+0x8]
   12aac:	mov    eax,DWORD PTR [eax]
   12aae:	push   esi
   12aaf:	push   DWORD PTR [ebp+0xc]
   12ab2:	mov    esi,ecx
   12ab4:	lea    ecx,[esi+0x4]
   12ab7:	mov    DWORD PTR [esi],eax
   12ab9:	call   0x11e00
   12abe:	mov    eax,esi
   12ac0:	pop    esi
   12ac1:	pop    ebp
   12ac2:	ret    0x8
   12ac5:	int3   
   12ac6:	int3   
   12ac7:	int3   
   12ac8:	int3   
   12ac9:	int3   
   12aca:	mov    edi,edi
   12acc:	push   ebp
   12acd:	mov    ebp,esp
   12acf:	push   esi
   12ad0:	push   edi
   12ad1:	mov    edi,DWORD PTR [ebp+0xc]
   12ad4:	mov    esi,ecx
   12ad6:	cmp    edi,0xffffffff
   12ad9:	jne    0x12ae5
   12adb:	push   DWORD PTR [ebp+0x8]
   12ade:	call   0x10960
   12ae3:	mov    edi,eax
   12ae5:	xor    ecx,ecx
   12ae7:	push   0x2
   12ae9:	pop    edx
   12aea:	lea    eax,[edi+0x1]
   12aed:	mul    edx
   12aef:	seto   cl
   12af2:	neg    ecx
   12af4:	or     ecx,eax
   12af6:	push   ecx
   12af7:	call   0x11d96
   12afc:	pop    ecx
   12afd:	mov    DWORD PTR [esi],eax
   12aff:	test   eax,eax
   12b01:	jne    0x12b0e
   12b03:	push   0xc000009a
   12b08:	call   DWORD PTR ds:0x1f040
   12b0e:	mov    ecx,DWORD PTR [esi]
   12b10:	lea    eax,[edi+edi*1]
   12b13:	push   eax
   12b14:	push   DWORD PTR [ebp+0x8]
   12b17:	xor    edx,edx
   12b19:	mov    WORD PTR [eax+ecx*1],dx
   12b1d:	push   DWORD PTR [esi]
   12b1f:	call   0x1da96
   12b24:	add    esp,0xc
   12b27:	mov    DWORD PTR [esi+0x4],edi
   12b2a:	pop    edi
   12b2b:	pop    esi
   12b2c:	pop    ebp
   12b2d:	ret    0x8
   12b30:	int3   
   12b31:	int3   
   12b32:	int3   
   12b33:	int3   
   12b34:	int3   
   12b35:	int3   
   12b36:	mov    edi,edi
   12b38:	push   ebp
   12b39:	mov    ebp,esp
   12b3b:	mov    eax,DWORD PTR [ebp+0x8]
   12b3e:	mov    edx,DWORD PTR ds:0x780bc
   12b44:	jmp    0x12b48
   12b46:	mov    eax,ecx
   12b48:	mov    ecx,DWORD PTR [eax]
   12b4a:	cmp    ecx,edx
   12b4c:	jne    0x12b46
   12b4e:	pop    ebp
   12b4f:	ret    0x4
   12b52:	int3   
   12b53:	int3   
   12b54:	int3   
   12b55:	int3   
   12b56:	int3   
   12b57:	int3   
   12b58:	mov    edi,edi
   12b5a:	push   ebp
   12b5b:	mov    ebp,esp
   12b5d:	mov    eax,DWORD PTR [ecx+0x4]
   12b60:	mov    ecx,DWORD PTR [eax+0x4]
   12b63:	mov    edx,DWORD PTR ds:0x780b0
   12b69:	cmp    ecx,edx
   12b6b:	je     0x12b86
   12b6d:	push   esi
   12b6e:	mov    esi,DWORD PTR [ebp+0x8]
   12b71:	mov    esi,DWORD PTR [esi]
   12b73:	cmp    DWORD PTR [ecx+0xc],esi
   12b76:	jae    0x12b7d
   12b78:	mov    ecx,DWORD PTR [ecx+0x8]
   12b7b:	jmp    0x12b81
   12b7d:	mov    eax,ecx
   12b7f:	mov    ecx,DWORD PTR [ecx]
   12b81:	cmp    ecx,edx
   12b83:	jne    0x12b73
   12b85:	pop    esi
   12b86:	pop    ebp
   12b87:	ret    0x4
   12b8a:	int3   
   12b8b:	int3   
   12b8c:	int3   
   12b8d:	int3   
   12b8e:	int3   
   12b8f:	int3   
   12b90:	mov    edi,edi
   12b92:	push   ebp
   12b93:	mov    ebp,esp
   12b95:	mov    edx,DWORD PTR [ebp+0x8]
   12b98:	mov    eax,DWORD PTR [edx+0x8]
   12b9b:	push   esi
   12b9c:	mov    esi,DWORD PTR [eax]
   12b9e:	mov    DWORD PTR [edx+0x8],esi
   12ba1:	mov    esi,DWORD PTR [eax]
   12ba3:	cmp    esi,DWORD PTR ds:0x780b0
   12ba9:	je     0x12bae
   12bab:	mov    DWORD PTR [esi+0x4],edx
   12bae:	mov    esi,DWORD PTR [edx+0x4]
   12bb1:	mov    DWORD PTR [eax+0x4],esi
   12bb4:	mov    ecx,DWORD PTR [ecx+0x4]
   12bb7:	pop    esi
   12bb8:	cmp    edx,DWORD PTR [ecx+0x4]
   12bbb:	jne    0x12bc2
   12bbd:	mov    DWORD PTR [ecx+0x4],eax
   12bc0:	jmp    0x12bd0
   12bc2:	mov    ecx,DWORD PTR [edx+0x4]
   12bc5:	cmp    edx,DWORD PTR [ecx]
   12bc7:	jne    0x12bcd
   12bc9:	mov    DWORD PTR [ecx],eax
   12bcb:	jmp    0x12bd0
   12bcd:	mov    DWORD PTR [ecx+0x8],eax
   12bd0:	mov    DWORD PTR [eax],edx
   12bd2:	mov    DWORD PTR [edx+0x4],eax
   12bd5:	pop    ebp
   12bd6:	ret    0x4
   12bd9:	int3   
   12bda:	int3   
   12bdb:	int3   
   12bdc:	int3   
   12bdd:	int3   
   12bde:	mov    edi,edi
   12be0:	push   ebp
   12be1:	mov    ebp,esp
   12be3:	mov    edx,DWORD PTR [ebp+0x8]
   12be6:	mov    eax,DWORD PTR [edx]
   12be8:	push   esi
   12be9:	mov    esi,DWORD PTR [eax+0x8]
   12bec:	mov    DWORD PTR [edx],esi
   12bee:	mov    esi,DWORD PTR [eax+0x8]
   12bf1:	cmp    esi,DWORD PTR ds:0x780b0
   12bf7:	je     0x12bfc
   12bf9:	mov    DWORD PTR [esi+0x4],edx
   12bfc:	mov    esi,DWORD PTR [edx+0x4]
   12bff:	mov    DWORD PTR [eax+0x4],esi
   12c02:	mov    ecx,DWORD PTR [ecx+0x4]
   12c05:	pop    esi
   12c06:	cmp    edx,DWORD PTR [ecx+0x4]
   12c09:	jne    0x12c10
   12c0b:	mov    DWORD PTR [ecx+0x4],eax
   12c0e:	jmp    0x12c1f
   12c10:	mov    ecx,DWORD PTR [edx+0x4]
   12c13:	cmp    edx,DWORD PTR [ecx+0x8]
   12c16:	jne    0x12c1d
   12c18:	mov    DWORD PTR [ecx+0x8],eax
   12c1b:	jmp    0x12c1f
   12c1d:	mov    DWORD PTR [ecx],eax
   12c1f:	mov    DWORD PTR [eax+0x8],edx
   12c22:	mov    DWORD PTR [edx+0x4],eax
   12c25:	pop    ebp
   12c26:	ret    0x4
   12c29:	int3   
   12c2a:	int3   
   12c2b:	int3   
   12c2c:	int3   
   12c2d:	int3   
   12c2e:	mov    edi,edi
   12c30:	push   ebp
   12c31:	mov    ebp,esp
   12c33:	mov    eax,DWORD PTR [ecx+0x4]
   12c36:	push   esi
   12c37:	mov    esi,DWORD PTR [eax+0x4]
   12c3a:	push   edi
   12c3b:	mov    edi,eax
   12c3d:	jmp    0x12c58
   12c3f:	push   DWORD PTR [ebp+0x8]
   12c42:	lea    eax,[esi+0x10]
   12c45:	push   eax
   12c46:	call   0x197ae
   12c4b:	test   al,al
   12c4d:	je     0x12c54
   12c4f:	mov    esi,DWORD PTR [esi+0x8]
   12c52:	jmp    0x12c58
   12c54:	mov    edi,esi
   12c56:	mov    esi,DWORD PTR [esi]
   12c58:	cmp    esi,DWORD PTR ds:0x780bc
   12c5e:	jne    0x12c3f
   12c60:	mov    eax,edi
   12c62:	pop    edi
   12c63:	pop    esi
   12c64:	pop    ebp
   12c65:	ret    0x4
   12c68:	int3   
   12c69:	int3   
   12c6a:	int3   
   12c6b:	int3   
   12c6c:	int3   
   12c6d:	int3   
   12c6e:	mov    edi,edi
   12c70:	push   ebp
   12c71:	mov    ebp,esp
   12c73:	mov    eax,DWORD PTR [ecx+0x4]
   12c76:	push   esi
   12c77:	mov    esi,DWORD PTR [eax+0x4]
   12c7a:	push   edi
   12c7b:	mov    edi,eax
   12c7d:	jmp    0x12c98
   12c7f:	push   DWORD PTR [ebp+0x8]
   12c82:	lea    eax,[esi+0xc]
   12c85:	push   eax
   12c86:	call   0x197ae
   12c8b:	test   al,al
   12c8d:	je     0x12c94
   12c8f:	mov    esi,DWORD PTR [esi+0x8]
   12c92:	jmp    0x12c98
   12c94:	mov    edi,esi
   12c96:	mov    esi,DWORD PTR [esi]
   12c98:	cmp    esi,DWORD PTR ds:0x780c0
   12c9e:	jne    0x12c7f
   12ca0:	mov    eax,edi
   12ca2:	pop    edi
   12ca3:	pop    esi
   12ca4:	pop    ebp
   12ca5:	ret    0x4
   12ca8:	int3   
   12ca9:	int3   
   12caa:	int3   
   12cab:	int3   
   12cac:	int3   
   12cad:	int3   
   12cae:	mov    edi,edi
   12cb0:	push   ebp
   12cb1:	mov    ebp,esp
   12cb3:	mov    eax,DWORD PTR [ecx+0x4]
   12cb6:	mov    ecx,DWORD PTR [eax+0x4]
   12cb9:	mov    edx,DWORD PTR ds:0x780c4
   12cbf:	cmp    ecx,edx
   12cc1:	je     0x12cdc
   12cc3:	push   esi
   12cc4:	mov    esi,DWORD PTR [ebp+0x8]
   12cc7:	mov    esi,DWORD PTR [esi]
   12cc9:	cmp    DWORD PTR [ecx+0xc],esi
   12ccc:	jge    0x12cd3
   12cce:	mov    ecx,DWORD PTR [ecx+0x8]
   12cd1:	jmp    0x12cd7
   12cd3:	mov    eax,ecx
   12cd5:	mov    ecx,DWORD PTR [ecx]
   12cd7:	cmp    ecx,edx
   12cd9:	jne    0x12cc9
   12cdb:	pop    esi
   12cdc:	pop    ebp
   12cdd:	ret    0x4
   12ce0:	int3   
   12ce1:	int3   
   12ce2:	int3   
   12ce3:	int3   
   12ce4:	int3   
   12ce5:	int3   
   12ce6:	mov    edi,edi
   12ce8:	push   esi
   12ce9:	mov    esi,ecx
   12ceb:	mov    ecx,DWORD PTR [esi]
   12ced:	mov    eax,DWORD PTR [ecx+0x8]
   12cf0:	cmp    eax,DWORD PTR ds:0x780b8
   12cf6:	je     0x12d04
   12cf8:	push   eax
   12cf9:	call   0x1113c
   12cfe:	jmp    0x12d13
   12d00:	mov    DWORD PTR [esi],eax
   12d02:	mov    ecx,eax
   12d04:	mov    eax,DWORD PTR [ecx+0x4]
   12d07:	cmp    ecx,DWORD PTR [eax+0x8]
   12d0a:	je     0x12d00
   12d0c:	mov    ecx,DWORD PTR [esi]
   12d0e:	cmp    DWORD PTR [ecx+0x8],eax
   12d11:	je     0x12d15
   12d13:	mov    DWORD PTR [esi],eax
   12d15:	pop    esi
   12d16:	ret    
   12d17:	int3   
   12d18:	int3   
   12d19:	int3   
   12d1a:	int3   
   12d1b:	int3   
   12d1c:	mov    edi,edi
   12d1e:	push   esi
   12d1f:	mov    esi,ecx
   12d21:	mov    ecx,DWORD PTR [esi]
   12d23:	cmp    DWORD PTR [ecx+0x10],0x0
   12d27:	jne    0x12d36
   12d29:	mov    eax,DWORD PTR [ecx+0x4]
   12d2c:	cmp    DWORD PTR [eax+0x4],ecx
   12d2f:	jne    0x12d36
   12d31:	mov    eax,DWORD PTR [ecx+0x8]
   12d34:	jmp    0x12d53
   12d36:	mov    eax,DWORD PTR [ecx]
   12d38:	cmp    eax,DWORD PTR ds:0x780b4
   12d3e:	je     0x12d4c
   12d40:	push   eax
   12d41:	call   0x110d6
   12d46:	jmp    0x12d53
   12d48:	mov    DWORD PTR [esi],eax
   12d4a:	mov    ecx,eax
   12d4c:	mov    eax,DWORD PTR [ecx+0x4]
   12d4f:	cmp    ecx,DWORD PTR [eax]
   12d51:	je     0x12d48
   12d53:	mov    DWORD PTR [esi],eax
   12d55:	pop    esi
   12d56:	ret    
   12d57:	int3   
   12d58:	int3   
   12d59:	int3   
   12d5a:	int3   
   12d5b:	int3   
   12d5c:	mov    edi,edi
   12d5e:	push   esi
   12d5f:	mov    esi,ecx
   12d61:	mov    ecx,DWORD PTR [esi]
   12d63:	mov    eax,DWORD PTR [ecx+0x8]
   12d66:	cmp    eax,DWORD PTR ds:0x780b4
   12d6c:	je     0x12d7a
   12d6e:	push   eax
   12d6f:	call   0x110f8
   12d74:	jmp    0x12d89
   12d76:	mov    DWORD PTR [esi],eax
   12d78:	mov    ecx,eax
   12d7a:	mov    eax,DWORD PTR [ecx+0x4]
   12d7d:	cmp    ecx,DWORD PTR [eax+0x8]
   12d80:	je     0x12d76
   12d82:	mov    ecx,DWORD PTR [esi]
   12d84:	cmp    DWORD PTR [ecx+0x8],eax
   12d87:	je     0x12d8b
   12d89:	mov    DWORD PTR [esi],eax
   12d8b:	pop    esi
   12d8c:	ret    
   12d8d:	int3   
   12d8e:	int3   
   12d8f:	int3   
   12d90:	int3   
   12d91:	int3   
   12d92:	mov    edi,edi
   12d94:	push   ebp
   12d95:	mov    ebp,esp
   12d97:	mov    edx,DWORD PTR [ebp+0x8]
   12d9a:	mov    eax,DWORD PTR [edx+0x8]
   12d9d:	push   esi
   12d9e:	mov    esi,DWORD PTR [eax]
   12da0:	mov    DWORD PTR [edx+0x8],esi
   12da3:	mov    esi,DWORD PTR [eax]
   12da5:	cmp    esi,DWORD PTR ds:0x780b4
   12dab:	je     0x12db0
   12dad:	mov    DWORD PTR [esi+0x4],edx
   12db0:	mov    esi,DWORD PTR [edx+0x4]
   12db3:	mov    DWORD PTR [eax+0x4],esi
   12db6:	mov    ecx,DWORD PTR [ecx+0x4]
   12db9:	pop    esi
   12dba:	cmp    edx,DWORD PTR [ecx+0x4]
   12dbd:	jne    0x12dc4
   12dbf:	mov    DWORD PTR [ecx+0x4],eax
   12dc2:	jmp    0x12dd2
   12dc4:	mov    ecx,DWORD PTR [edx+0x4]
   12dc7:	cmp    edx,DWORD PTR [ecx]
   12dc9:	jne    0x12dcf
   12dcb:	mov    DWORD PTR [ecx],eax
   12dcd:	jmp    0x12dd2
   12dcf:	mov    DWORD PTR [ecx+0x8],eax
   12dd2:	mov    DWORD PTR [eax],edx
   12dd4:	mov    DWORD PTR [edx+0x4],eax
   12dd7:	pop    ebp
   12dd8:	ret    0x4
   12ddb:	int3   
   12ddc:	int3   
   12ddd:	int3   
   12dde:	int3   
   12ddf:	int3   
   12de0:	mov    edi,edi
   12de2:	push   ebp
   12de3:	mov    ebp,esp
   12de5:	mov    edx,DWORD PTR [ebp+0x8]
   12de8:	mov    eax,DWORD PTR [edx]
   12dea:	push   esi
   12deb:	mov    esi,DWORD PTR [eax+0x8]
   12dee:	mov    DWORD PTR [edx],esi
   12df0:	mov    esi,DWORD PTR [eax+0x8]
   12df3:	cmp    esi,DWORD PTR ds:0x780b4
   12df9:	je     0x12dfe
   12dfb:	mov    DWORD PTR [esi+0x4],edx
   12dfe:	mov    esi,DWORD PTR [edx+0x4]
   12e01:	mov    DWORD PTR [eax+0x4],esi
   12e04:	mov    ecx,DWORD PTR [ecx+0x4]
   12e07:	pop    esi
   12e08:	cmp    edx,DWORD PTR [ecx+0x4]
   12e0b:	jne    0x12e12
   12e0d:	mov    DWORD PTR [ecx+0x4],eax
   12e10:	jmp    0x12e21
   12e12:	mov    ecx,DWORD PTR [edx+0x4]
   12e15:	cmp    edx,DWORD PTR [ecx+0x8]
   12e18:	jne    0x12e1f
   12e1a:	mov    DWORD PTR [ecx+0x8],eax
   12e1d:	jmp    0x12e21
   12e1f:	mov    DWORD PTR [ecx],eax
   12e21:	mov    DWORD PTR [eax+0x8],edx
   12e24:	mov    DWORD PTR [edx+0x4],eax
   12e27:	pop    ebp
   12e28:	ret    0x4
   12e2b:	int3   
   12e2c:	int3   
   12e2d:	int3   
   12e2e:	int3   
   12e2f:	int3   
   12e30:	mov    edi,edi
   12e32:	push   ebp
   12e33:	mov    ebp,esp
   12e35:	mov    eax,DWORD PTR [ecx+0x4]
   12e38:	push   esi
   12e39:	mov    esi,DWORD PTR [eax+0x4]
   12e3c:	push   edi
   12e3d:	mov    edi,eax
   12e3f:	jmp    0x12e5a
   12e41:	push   DWORD PTR [ebp+0x8]
   12e44:	lea    eax,[esi+0x10]
   12e47:	push   eax
   12e48:	call   0x197ae
   12e4d:	test   al,al
   12e4f:	je     0x12e56
   12e51:	mov    esi,DWORD PTR [esi+0x8]
   12e54:	jmp    0x12e5a
   12e56:	mov    edi,esi
   12e58:	mov    esi,DWORD PTR [esi]
   12e5a:	cmp    esi,DWORD PTR ds:0x780b8
   12e60:	jne    0x12e41
   12e62:	mov    eax,edi
   12e64:	pop    edi
   12e65:	pop    esi
   12e66:	pop    ebp
   12e67:	ret    0x4
   12e6a:	int3   
   12e6b:	int3   
   12e6c:	int3   
   12e6d:	int3   
   12e6e:	int3   
   12e6f:	int3   
   12e70:	mov    edi,edi
   12e72:	push   ebp
   12e73:	mov    ebp,esp
   12e75:	mov    edx,DWORD PTR [ebp+0x8]
   12e78:	mov    eax,DWORD PTR [edx+0x8]
   12e7b:	push   esi
   12e7c:	mov    esi,DWORD PTR [eax]
   12e7e:	mov    DWORD PTR [edx+0x8],esi
   12e81:	mov    esi,DWORD PTR [eax]
   12e83:	cmp    esi,DWORD PTR ds:0x780b8
   12e89:	je     0x12e8e
   12e8b:	mov    DWORD PTR [esi+0x4],edx
   12e8e:	mov    esi,DWORD PTR [edx+0x4]
   12e91:	mov    DWORD PTR [eax+0x4],esi
   12e94:	mov    ecx,DWORD PTR [ecx+0x4]
   12e97:	pop    esi
   12e98:	cmp    edx,DWORD PTR [ecx+0x4]
   12e9b:	jne    0x12ea2
   12e9d:	mov    DWORD PTR [ecx+0x4],eax
   12ea0:	jmp    0x12eb0
   12ea2:	mov    ecx,DWORD PTR [edx+0x4]
   12ea5:	cmp    edx,DWORD PTR [ecx]
   12ea7:	jne    0x12ead
   12ea9:	mov    DWORD PTR [ecx],eax
   12eab:	jmp    0x12eb0
   12ead:	mov    DWORD PTR [ecx+0x8],eax
   12eb0:	mov    DWORD PTR [eax],edx
   12eb2:	mov    DWORD PTR [edx+0x4],eax
   12eb5:	pop    ebp
   12eb6:	ret    0x4
   12eb9:	int3   
   12eba:	int3   
   12ebb:	int3   
   12ebc:	int3   
   12ebd:	int3   
   12ebe:	mov    edi,edi
   12ec0:	push   ebp
   12ec1:	mov    ebp,esp
   12ec3:	mov    edx,DWORD PTR [ebp+0x8]
   12ec6:	mov    eax,DWORD PTR [edx]
   12ec8:	push   esi
   12ec9:	mov    esi,DWORD PTR [eax+0x8]
   12ecc:	mov    DWORD PTR [edx],esi
   12ece:	mov    esi,DWORD PTR [eax+0x8]
   12ed1:	cmp    esi,DWORD PTR ds:0x780b8
   12ed7:	je     0x12edc
   12ed9:	mov    DWORD PTR [esi+0x4],edx
   12edc:	mov    esi,DWORD PTR [edx+0x4]
   12edf:	mov    DWORD PTR [eax+0x4],esi
   12ee2:	mov    ecx,DWORD PTR [ecx+0x4]
   12ee5:	pop    esi
   12ee6:	cmp    edx,DWORD PTR [ecx+0x4]
   12ee9:	jne    0x12ef0
   12eeb:	mov    DWORD PTR [ecx+0x4],eax
   12eee:	jmp    0x12eff
   12ef0:	mov    ecx,DWORD PTR [edx+0x4]
   12ef3:	cmp    edx,DWORD PTR [ecx+0x8]
   12ef6:	jne    0x12efd
   12ef8:	mov    DWORD PTR [ecx+0x8],eax
   12efb:	jmp    0x12eff
   12efd:	mov    DWORD PTR [ecx],eax
   12eff:	mov    DWORD PTR [eax+0x8],edx
   12f02:	mov    DWORD PTR [edx+0x4],eax
   12f05:	pop    ebp
   12f06:	ret    0x4
   12f09:	int3   
   12f0a:	int3   
   12f0b:	int3   
   12f0c:	int3   
   12f0d:	int3   
   12f0e:	mov    edi,edi
   12f10:	push   ebp
   12f11:	mov    ebp,esp
   12f13:	mov    eax,DWORD PTR [ecx+0x4]
   12f16:	mov    ecx,DWORD PTR [eax+0x4]
   12f19:	mov    edx,DWORD PTR ds:0x780b0
   12f1f:	cmp    ecx,edx
   12f21:	je     0x12f3c
   12f23:	push   esi
   12f24:	mov    esi,DWORD PTR [ebp+0x8]
   12f27:	mov    esi,DWORD PTR [esi]
   12f29:	cmp    esi,DWORD PTR [ecx+0xc]
   12f2c:	jae    0x12f34
   12f2e:	mov    eax,ecx
   12f30:	mov    ecx,DWORD PTR [ecx]
   12f32:	jmp    0x12f37
   12f34:	mov    ecx,DWORD PTR [ecx+0x8]
   12f37:	cmp    ecx,edx
   12f39:	jne    0x12f29
   12f3b:	pop    esi
   12f3c:	pop    ebp
   12f3d:	ret    0x4
   12f40:	int3   
   12f41:	int3   
   12f42:	int3   
   12f43:	int3   
   12f44:	int3   
   12f45:	int3   
   12f46:	mov    edi,edi
   12f48:	push   ebp
   12f49:	mov    ebp,esp
   12f4b:	mov    eax,DWORD PTR [ecx+0x4]
   12f4e:	push   esi
   12f4f:	mov    esi,DWORD PTR [eax+0x4]
   12f52:	push   edi
   12f53:	mov    edi,eax
   12f55:	jmp    0x12f70
   12f57:	lea    eax,[esi+0x10]
   12f5a:	push   eax
   12f5b:	push   DWORD PTR [ebp+0x8]
   12f5e:	call   0x197ae
   12f63:	test   al,al
   12f65:	je     0x12f6d
   12f67:	mov    edi,esi
   12f69:	mov    esi,DWORD PTR [esi]
   12f6b:	jmp    0x12f70
   12f6d:	mov    esi,DWORD PTR [esi+0x8]
   12f70:	cmp    esi,DWORD PTR ds:0x780bc
   12f76:	jne    0x12f57
   12f78:	mov    eax,edi
   12f7a:	pop    edi
   12f7b:	pop    esi
   12f7c:	pop    ebp
   12f7d:	ret    0x4
   12f80:	int3   
   12f81:	int3   
   12f82:	int3   
   12f83:	int3   
   12f84:	int3   
   12f85:	int3   
   12f86:	mov    edi,edi
   12f88:	push   ebp
   12f89:	mov    ebp,esp
   12f8b:	mov    edx,DWORD PTR [ebp+0x8]
   12f8e:	mov    eax,DWORD PTR [edx+0x8]
   12f91:	push   esi
   12f92:	mov    esi,DWORD PTR [eax]
   12f94:	mov    DWORD PTR [edx+0x8],esi
   12f97:	mov    esi,DWORD PTR [eax]
   12f99:	cmp    esi,DWORD PTR ds:0x780c0
   12f9f:	je     0x12fa4
   12fa1:	mov    DWORD PTR [esi+0x4],edx
   12fa4:	mov    esi,DWORD PTR [edx+0x4]
   12fa7:	mov    DWORD PTR [eax+0x4],esi
   12faa:	mov    ecx,DWORD PTR [ecx+0x4]
   12fad:	pop    esi
   12fae:	cmp    edx,DWORD PTR [ecx+0x4]
   12fb1:	jne    0x12fb8
   12fb3:	mov    DWORD PTR [ecx+0x4],eax
   12fb6:	jmp    0x12fc6
   12fb8:	mov    ecx,DWORD PTR [edx+0x4]
   12fbb:	cmp    edx,DWORD PTR [ecx]
   12fbd:	jne    0x12fc3
   12fbf:	mov    DWORD PTR [ecx],eax
   12fc1:	jmp    0x12fc6
   12fc3:	mov    DWORD PTR [ecx+0x8],eax
   12fc6:	mov    DWORD PTR [eax],edx
   12fc8:	mov    DWORD PTR [edx+0x4],eax
   12fcb:	pop    ebp
   12fcc:	ret    0x4
   12fcf:	int3   
   12fd0:	int3   
   12fd1:	int3   
   12fd2:	int3   
   12fd3:	int3   
   12fd4:	mov    edi,edi
   12fd6:	push   ebp
   12fd7:	mov    ebp,esp
   12fd9:	mov    edx,DWORD PTR [ebp+0x8]
   12fdc:	mov    eax,DWORD PTR [edx]
   12fde:	push   esi
   12fdf:	mov    esi,DWORD PTR [eax+0x8]
   12fe2:	mov    DWORD PTR [edx],esi
   12fe4:	mov    esi,DWORD PTR [eax+0x8]
   12fe7:	cmp    esi,DWORD PTR ds:0x780c0
   12fed:	je     0x12ff2
   12fef:	mov    DWORD PTR [esi+0x4],edx
   12ff2:	mov    esi,DWORD PTR [edx+0x4]
   12ff5:	mov    DWORD PTR [eax+0x4],esi
   12ff8:	mov    ecx,DWORD PTR [ecx+0x4]
   12ffb:	pop    esi
   12ffc:	cmp    edx,DWORD PTR [ecx+0x4]
   12fff:	jne    0x13006
   13001:	mov    DWORD PTR [ecx+0x4],eax
   13004:	jmp    0x13015
   13006:	mov    ecx,DWORD PTR [edx+0x4]
   13009:	cmp    edx,DWORD PTR [ecx+0x8]
   1300c:	jne    0x13013
   1300e:	mov    DWORD PTR [ecx+0x8],eax
   13011:	jmp    0x13015
   13013:	mov    DWORD PTR [ecx],eax
   13015:	mov    DWORD PTR [eax+0x8],edx
   13018:	mov    DWORD PTR [edx+0x4],eax
   1301b:	pop    ebp
   1301c:	ret    0x4
   1301f:	int3   
   13020:	int3   
   13021:	int3   
   13022:	int3   
   13023:	int3   
   13024:	mov    edi,edi
   13026:	push   ebp
   13027:	mov    ebp,esp
   13029:	mov    eax,DWORD PTR [ecx+0x4]
   1302c:	push   esi
   1302d:	mov    esi,DWORD PTR [eax+0x4]
   13030:	push   edi
   13031:	mov    edi,eax
   13033:	jmp    0x1304e
   13035:	lea    eax,[esi+0xc]
   13038:	push   eax
   13039:	push   DWORD PTR [ebp+0x8]
   1303c:	call   0x197ae
   13041:	test   al,al
   13043:	je     0x1304b
   13045:	mov    edi,esi
   13047:	mov    esi,DWORD PTR [esi]
   13049:	jmp    0x1304e
   1304b:	mov    esi,DWORD PTR [esi+0x8]
   1304e:	cmp    esi,DWORD PTR ds:0x780c0
   13054:	jne    0x13035
   13056:	mov    eax,edi
   13058:	pop    edi
   13059:	pop    esi
   1305a:	pop    ebp
   1305b:	ret    0x4
   1305e:	int3   
   1305f:	int3   
   13060:	int3   
   13061:	int3   
   13062:	int3   
   13063:	int3   
   13064:	mov    edi,edi
   13066:	push   ebp
   13067:	mov    ebp,esp
   13069:	mov    edx,DWORD PTR [ebp+0x8]
   1306c:	mov    eax,DWORD PTR [edx+0x8]
   1306f:	push   esi
   13070:	mov    esi,DWORD PTR [eax]
   13072:	mov    DWORD PTR [edx+0x8],esi
   13075:	mov    esi,DWORD PTR [eax]
   13077:	cmp    esi,DWORD PTR ds:0x780c4
   1307d:	je     0x13082
   1307f:	mov    DWORD PTR [esi+0x4],edx
   13082:	mov    esi,DWORD PTR [edx+0x4]
   13085:	mov    DWORD PTR [eax+0x4],esi
   13088:	mov    ecx,DWORD PTR [ecx+0x4]
   1308b:	pop    esi
   1308c:	cmp    edx,DWORD PTR [ecx+0x4]
   1308f:	jne    0x13096
   13091:	mov    DWORD PTR [ecx+0x4],eax
   13094:	jmp    0x130a4
   13096:	mov    ecx,DWORD PTR [edx+0x4]
   13099:	cmp    edx,DWORD PTR [ecx]
   1309b:	jne    0x130a1
   1309d:	mov    DWORD PTR [ecx],eax
   1309f:	jmp    0x130a4
   130a1:	mov    DWORD PTR [ecx+0x8],eax
   130a4:	mov    DWORD PTR [eax],edx
   130a6:	mov    DWORD PTR [edx+0x4],eax
   130a9:	pop    ebp
   130aa:	ret    0x4
   130ad:	int3   
   130ae:	int3   
   130af:	int3   
   130b0:	int3   
   130b1:	int3   
   130b2:	mov    edi,edi
   130b4:	push   ebp
   130b5:	mov    ebp,esp
   130b7:	mov    edx,DWORD PTR [ebp+0x8]
   130ba:	mov    eax,DWORD PTR [edx]
   130bc:	push   esi
   130bd:	mov    esi,DWORD PTR [eax+0x8]
   130c0:	mov    DWORD PTR [edx],esi
   130c2:	mov    esi,DWORD PTR [eax+0x8]
   130c5:	cmp    esi,DWORD PTR ds:0x780c4
   130cb:	je     0x130d0
   130cd:	mov    DWORD PTR [esi+0x4],edx
   130d0:	mov    esi,DWORD PTR [edx+0x4]
   130d3:	mov    DWORD PTR [eax+0x4],esi
   130d6:	mov    ecx,DWORD PTR [ecx+0x4]
   130d9:	pop    esi
   130da:	cmp    edx,DWORD PTR [ecx+0x4]
   130dd:	jne    0x130e4
   130df:	mov    DWORD PTR [ecx+0x4],eax
   130e2:	jmp    0x130f3
   130e4:	mov    ecx,DWORD PTR [edx+0x4]
   130e7:	cmp    edx,DWORD PTR [ecx+0x8]
   130ea:	jne    0x130f1
   130ec:	mov    DWORD PTR [ecx+0x8],eax
   130ef:	jmp    0x130f3
   130f1:	mov    DWORD PTR [ecx],eax
   130f3:	mov    DWORD PTR [eax+0x8],edx
   130f6:	mov    DWORD PTR [edx+0x4],eax
   130f9:	pop    ebp
   130fa:	ret    0x4
   130fd:	int3   
   130fe:	int3   
   130ff:	int3   
   13100:	int3   
   13101:	int3   
   13102:	mov    edi,edi
   13104:	push   ebp
   13105:	mov    ebp,esp
   13107:	mov    eax,DWORD PTR [ecx+0x4]
   1310a:	mov    ecx,DWORD PTR [eax+0x4]
   1310d:	mov    edx,DWORD PTR ds:0x780c4
   13113:	cmp    ecx,edx
   13115:	je     0x13130
   13117:	push   esi
   13118:	mov    esi,DWORD PTR [ebp+0x8]
   1311b:	mov    esi,DWORD PTR [esi]
   1311d:	cmp    esi,DWORD PTR [ecx+0xc]
   13120:	jge    0x13128
   13122:	mov    eax,ecx
   13124:	mov    ecx,DWORD PTR [ecx]
   13126:	jmp    0x1312b
   13128:	mov    ecx,DWORD PTR [ecx+0x8]
   1312b:	cmp    ecx,edx
   1312d:	jne    0x1311d
   1312f:	pop    esi
   13130:	pop    ebp
   13131:	ret    0x4
   13134:	int3   
   13135:	int3   
   13136:	int3   
   13137:	int3   
   13138:	int3   
   13139:	int3   
   1313a:	mov    edi,edi
   1313c:	push   ebp
   1313d:	mov    ebp,esp
   1313f:	mov    eax,DWORD PTR [ecx+0x4]
   13142:	push   esi
   13143:	mov    esi,DWORD PTR [eax+0x4]
   13146:	push   edi
   13147:	mov    edi,eax
   13149:	jmp    0x13164
   1314b:	push   DWORD PTR [ebp+0x8]
   1314e:	lea    eax,[esi+0xc]
   13151:	push   eax
   13152:	call   0x197de
   13157:	test   al,al
   13159:	je     0x13160
   1315b:	mov    esi,DWORD PTR [esi+0x8]
   1315e:	jmp    0x13164
   13160:	mov    edi,esi
   13162:	mov    esi,DWORD PTR [esi]
   13164:	cmp    esi,DWORD PTR ds:0x780cc
   1316a:	jne    0x1314b
   1316c:	mov    eax,edi
   1316e:	pop    edi
   1316f:	pop    esi
   13170:	pop    ebp
   13171:	ret    0x4
   13174:	int3   
   13175:	int3   
   13176:	int3   
   13177:	int3   
   13178:	int3   
   13179:	int3   
   1317a:	mov    edi,edi
   1317c:	push   ebp
   1317d:	mov    ebp,esp
   1317f:	mov    edx,DWORD PTR [ebp+0x8]
   13182:	mov    eax,DWORD PTR [edx+0x8]
   13185:	push   esi
   13186:	mov    esi,DWORD PTR [eax]
   13188:	mov    DWORD PTR [edx+0x8],esi
   1318b:	mov    esi,DWORD PTR [eax]
   1318d:	cmp    esi,DWORD PTR ds:0x780cc
   13193:	je     0x13198
   13195:	mov    DWORD PTR [esi+0x4],edx
   13198:	mov    esi,DWORD PTR [edx+0x4]
   1319b:	mov    DWORD PTR [eax+0x4],esi
   1319e:	mov    ecx,DWORD PTR [ecx+0x4]
   131a1:	pop    esi
   131a2:	cmp    edx,DWORD PTR [ecx+0x4]
   131a5:	jne    0x131ac
   131a7:	mov    DWORD PTR [ecx+0x4],eax
   131aa:	jmp    0x131ba
   131ac:	mov    ecx,DWORD PTR [edx+0x4]
   131af:	cmp    edx,DWORD PTR [ecx]
   131b1:	jne    0x131b7
   131b3:	mov    DWORD PTR [ecx],eax
   131b5:	jmp    0x131ba
   131b7:	mov    DWORD PTR [ecx+0x8],eax
   131ba:	mov    DWORD PTR [eax],edx
   131bc:	mov    DWORD PTR [edx+0x4],eax
   131bf:	pop    ebp
   131c0:	ret    0x4
   131c3:	int3   
   131c4:	int3   
   131c5:	int3   
   131c6:	int3   
   131c7:	int3   
   131c8:	mov    edi,edi
   131ca:	push   ebp
   131cb:	mov    ebp,esp
   131cd:	mov    edx,DWORD PTR [ebp+0x8]
   131d0:	mov    eax,DWORD PTR [edx]
   131d2:	push   esi
   131d3:	mov    esi,DWORD PTR [eax+0x8]
   131d6:	mov    DWORD PTR [edx],esi
   131d8:	mov    esi,DWORD PTR [eax+0x8]
   131db:	cmp    esi,DWORD PTR ds:0x780cc
   131e1:	je     0x131e6
   131e3:	mov    DWORD PTR [esi+0x4],edx
   131e6:	mov    esi,DWORD PTR [edx+0x4]
   131e9:	mov    DWORD PTR [eax+0x4],esi
   131ec:	mov    ecx,DWORD PTR [ecx+0x4]
   131ef:	pop    esi
   131f0:	cmp    edx,DWORD PTR [ecx+0x4]
   131f3:	jne    0x131fa
   131f5:	mov    DWORD PTR [ecx+0x4],eax
   131f8:	jmp    0x13209
   131fa:	mov    ecx,DWORD PTR [edx+0x4]
   131fd:	cmp    edx,DWORD PTR [ecx+0x8]
   13200:	jne    0x13207
   13202:	mov    DWORD PTR [ecx+0x8],eax
   13205:	jmp    0x13209
   13207:	mov    DWORD PTR [ecx],eax
   13209:	mov    DWORD PTR [eax+0x8],edx
   1320c:	mov    DWORD PTR [edx+0x4],eax
   1320f:	pop    ebp
   13210:	ret    0x4
   13213:	int3   
   13214:	int3   
   13215:	int3   
   13216:	int3   
   13217:	int3   
   13218:	mov    edi,edi
   1321a:	push   esi
   1321b:	mov    esi,ecx
   1321d:	mov    ecx,DWORD PTR [esi]
   1321f:	cmp    DWORD PTR [ecx+0x1c],0x0
   13223:	jne    0x13232
   13225:	mov    eax,DWORD PTR [ecx+0x4]
   13228:	cmp    DWORD PTR [eax+0x4],ecx
   1322b:	jne    0x13232
   1322d:	mov    eax,DWORD PTR [ecx+0x8]
   13230:	jmp    0x1324f
   13232:	mov    eax,DWORD PTR [ecx]
   13234:	cmp    eax,DWORD PTR ds:0x780cc
   1323a:	je     0x13248
   1323c:	push   eax
   1323d:	call   0x11488
   13242:	jmp    0x1324f
   13244:	mov    DWORD PTR [esi],eax
   13246:	mov    ecx,eax
   13248:	mov    eax,DWORD PTR [ecx+0x4]
   1324b:	cmp    ecx,DWORD PTR [eax]
   1324d:	je     0x13244
   1324f:	mov    DWORD PTR [esi],eax
   13251:	pop    esi
   13252:	ret    
   13253:	int3   
   13254:	int3   
   13255:	int3   
   13256:	int3   
   13257:	int3   
   13258:	mov    edi,edi
   1325a:	push   ebp
   1325b:	mov    ebp,esp
   1325d:	mov    eax,DWORD PTR [ecx+0x4]
   13260:	mov    ecx,DWORD PTR [eax+0x4]
   13263:	mov    edx,DWORD PTR ds:0x780b4
   13269:	cmp    ecx,edx
   1326b:	je     0x13286
   1326d:	push   esi
   1326e:	mov    esi,DWORD PTR [ebp+0x8]
   13271:	mov    esi,DWORD PTR [esi]
   13273:	cmp    DWORD PTR [ecx+0xc],esi
   13276:	jae    0x1327d
   13278:	mov    ecx,DWORD PTR [ecx+0x8]
   1327b:	jmp    0x13281
   1327d:	mov    eax,ecx
   1327f:	mov    ecx,DWORD PTR [ecx]
   13281:	cmp    ecx,edx
   13283:	jne    0x13273
   13285:	pop    esi
   13286:	pop    ebp
   13287:	ret    0x4
   1328a:	int3   
   1328b:	int3   
   1328c:	int3   
   1328d:	int3   
   1328e:	int3   
   1328f:	int3   
   13290:	mov    edi,edi
   13292:	push   ebp
   13293:	mov    ebp,esp
   13295:	mov    eax,DWORD PTR [ecx+0x4]
   13298:	mov    ecx,DWORD PTR [eax+0x4]
   1329b:	mov    edx,DWORD PTR ds:0x780b4
   132a1:	cmp    ecx,edx
   132a3:	je     0x132be
   132a5:	push   esi
   132a6:	mov    esi,DWORD PTR [ebp+0x8]
   132a9:	mov    esi,DWORD PTR [esi]
   132ab:	cmp    esi,DWORD PTR [ecx+0xc]
   132ae:	jae    0x132b6
   132b0:	mov    eax,ecx
   132b2:	mov    ecx,DWORD PTR [ecx]
   132b4:	jmp    0x132b9
   132b6:	mov    ecx,DWORD PTR [ecx+0x8]
   132b9:	cmp    ecx,edx
   132bb:	jne    0x132ab
   132bd:	pop    esi
   132be:	pop    ebp
   132bf:	ret    0x4
   132c2:	int3   
   132c3:	int3   
   132c4:	int3   
   132c5:	int3   
   132c6:	int3   
   132c7:	int3   
   132c8:	mov    edi,edi
   132ca:	push   ebp
   132cb:	mov    ebp,esp
   132cd:	cmp    DWORD PTR [ebp+0x8],0x0
   132d1:	jge    0x132d7
   132d3:	and    DWORD PTR [ebp+0x8],0x0
   132d7:	push   DWORD PTR [ebp+0x8]
   132da:	call   0x11d96
   132df:	pop    ecx
   132e0:	pop    ebp
   132e1:	ret    0x8
   132e4:	int3   
   132e5:	int3   
   132e6:	int3   
   132e7:	int3   
   132e8:	int3   
   132e9:	int3   
   132ea:	mov    edi,edi
   132ec:	push   ebp
   132ed:	mov    ebp,esp
   132ef:	mov    ecx,DWORD PTR [ebp+0x8]
   132f2:	push   0x0
   132f4:	call   0x11508
   132f9:	pop    ebp
   132fa:	ret    0x4
   132fd:	int3   
   132fe:	int3   
   132ff:	int3   
   13300:	int3   
   13301:	int3   
   13302:	mov    edi,edi
   13304:	push   ebp
   13305:	mov    ebp,esp
   13307:	push   esi
   13308:	mov    esi,ecx
   1330a:	call   0x129b0
   1330f:	test   BYTE PTR [ebp+0x8],0x1
   13313:	je     0x1331c
   13315:	push   esi
   13316:	call   0x10990
   1331b:	pop    ecx
   1331c:	mov    eax,esi
   1331e:	pop    esi
   1331f:	pop    ebp
   13320:	ret    0x4
   13323:	int3   
   13324:	int3   
   13325:	int3   
   13326:	int3   
   13327:	int3   
   13328:	mov    edi,edi
   1332a:	push   ebp
   1332b:	mov    ebp,esp
   1332d:	mov    eax,DWORD PTR [ebp+0x8]
   13330:	push   esi
   13331:	mov    esi,ecx
   13333:	mov    ecx,DWORD PTR [eax]
   13335:	add    eax,0x4
   13338:	mov    DWORD PTR [esi],ecx
   1333a:	push   eax
   1333b:	lea    ecx,[esi+0x4]
   1333e:	call   0x11e00
   13343:	mov    eax,esi
   13345:	pop    esi
   13346:	pop    ebp
   13347:	ret    0x4
   1334a:	int3   
   1334b:	int3   
   1334c:	int3   
   1334d:	int3   
   1334e:	int3   
   1334f:	int3   
   13350:	mov    edi,edi
   13352:	push   ebp
   13353:	mov    ebp,esp
   13355:	push   esi
   13356:	mov    esi,ecx
   13358:	mov    ecx,DWORD PTR [esi+0x4]
   1335b:	test   ecx,ecx
   1335d:	je     0x13364
   1335f:	call   0x109ae
   13364:	test   BYTE PTR [ebp+0x8],0x1
   13368:	je     0x13371
   1336a:	push   esi
   1336b:	call   0x10990
   13370:	pop    ecx
   13371:	mov    eax,esi
   13373:	pop    esi
   13374:	pop    ebp
   13375:	ret    0x4
   13378:	int3   
   13379:	int3   
   1337a:	int3   
   1337b:	int3   
   1337c:	int3   
   1337d:	int3   
   1337e:	mov    edi,edi
   13380:	push   ebp
   13381:	mov    ebp,esp
   13383:	push   edi
   13384:	mov    edi,DWORD PTR [ebp+0xc]
   13387:	cmp    DWORD PTR [ebp+0x8],edi
   1338a:	je     0x133a0
   1338c:	push   esi
   1338d:	mov    esi,DWORD PTR [ebp+0x10]
   13390:	inc    DWORD PTR [esi]
   13392:	lea    ecx,[ebp+0x8]
   13395:	call   0x1119e
   1339a:	cmp    DWORD PTR [ebp+0x8],edi
   1339d:	jne    0x13390
   1339f:	pop    esi
   133a0:	pop    edi
   133a1:	pop    ebp
   133a2:	ret    
   133a3:	int3   
   133a4:	int3   
   133a5:	int3   
   133a6:	int3   
   133a7:	int3   
   133a8:	mov    edi,edi
   133aa:	push   ebp
   133ab:	mov    ebp,esp
   133ad:	push   edi
   133ae:	mov    edi,DWORD PTR [ebp+0xc]
   133b1:	cmp    DWORD PTR [ebp+0x8],edi
   133b4:	je     0x133ca
   133b6:	push   esi
   133b7:	mov    esi,DWORD PTR [ebp+0x10]
   133ba:	inc    DWORD PTR [esi]
   133bc:	lea    ecx,[ebp+0x8]
   133bf:	call   0x1141c
   133c4:	cmp    DWORD PTR [ebp+0x8],edi
   133c7:	jne    0x133ba
   133c9:	pop    esi
   133ca:	pop    edi
   133cb:	pop    ebp
   133cc:	ret    
   133cd:	int3   
   133ce:	int3   
   133cf:	int3   
   133d0:	int3   
   133d1:	int3   
   133d2:	mov    edi,edi
   133d4:	push   ebp
   133d5:	mov    ebp,esp
   133d7:	push   edi
   133d8:	mov    edi,DWORD PTR [ebp+0xc]
   133db:	cmp    DWORD PTR [ebp+0x8],edi
   133de:	je     0x133f4
   133e0:	push   esi
   133e1:	mov    esi,DWORD PTR [ebp+0x10]
   133e4:	inc    DWORD PTR [esi]
   133e6:	lea    ecx,[ebp+0x8]
   133e9:	call   0x11452
   133ee:	cmp    DWORD PTR [ebp+0x8],edi
   133f1:	jne    0x133e4
   133f3:	pop    esi
   133f4:	pop    edi
   133f5:	pop    ebp
   133f6:	ret    
   133f7:	int3   
   133f8:	int3   
   133f9:	int3   
   133fa:	int3   
   133fb:	int3   
   133fc:	mov    edi,edi
   133fe:	push   ebp
   133ff:	mov    ebp,esp
   13401:	push   edi
   13402:	mov    edi,DWORD PTR [ebp+0xc]
   13405:	cmp    DWORD PTR [ebp+0x8],edi
   13408:	je     0x1341e
   1340a:	push   esi
   1340b:	mov    esi,DWORD PTR [ebp+0x10]
   1340e:	inc    DWORD PTR [esi]
   13410:	lea    ecx,[ebp+0x8]
   13413:	call   0x12d5c
   13418:	cmp    DWORD PTR [ebp+0x8],edi
   1341b:	jne    0x1340e
   1341d:	pop    esi
   1341e:	pop    edi
   1341f:	pop    ebp
   13420:	ret    
   13421:	int3   
   13422:	int3   
   13423:	int3   
   13424:	int3   
   13425:	int3   
   13426:	mov    edi,edi
   13428:	push   ebp
   13429:	mov    ebp,esp
   1342b:	push   esi
   1342c:	push   0xc
   1342e:	mov    esi,ecx
   13430:	call   0x11d96
   13435:	pop    ecx
   13436:	test   eax,eax
   13438:	je     0x13449
   1343a:	push   DWORD PTR [ebp+0xc]
   1343d:	mov    ecx,eax
   1343f:	push   DWORD PTR [ebp+0x8]
   13442:	call   0x11e4e
   13447:	jmp    0x1344b
   13449:	xor    eax,eax
   1344b:	mov    DWORD PTR [esi],eax
   1344d:	mov    eax,esi
   1344f:	pop    esi
   13450:	pop    ebp
   13451:	ret    0x8
   13454:	int3   
   13455:	int3   
   13456:	int3   
   13457:	int3   
   13458:	int3   
   13459:	int3   
   1345a:	mov    edi,edi
   1345c:	push   ebp
   1345d:	mov    ebp,esp
   1345f:	sub    esp,0x18
   13462:	lea    eax,[ebp-0x18]
   13465:	push   eax
   13466:	push   DWORD PTR [ebp+0x8]
   13469:	call   0x10e6e
   1346e:	test   al,al
   13470:	je     0x134de
   13472:	lea    eax,[ebp-0x4]
   13475:	push   eax
   13476:	push   DWORD PTR [ebp+0xc]
   13479:	call   0x11b6a
   1347e:	call   eax
   13480:	test   eax,eax
   13482:	jl     0x134de
   13484:	push   esi
   13485:	push   0x5
   13487:	call   0x127fe
   1348c:	mov    esi,eax
   1348e:	test   esi,esi
   13490:	je     0x134dd
   13492:	mov    edx,DWORD PTR [ebp+0x10]
   13495:	cmp    DWORD PTR [esi+0x44],edx
   13498:	je     0x134a7
   1349a:	mov    ecx,DWORD PTR [eax]
   1349c:	test   ecx,ecx
   1349e:	je     0x134cb
   134a0:	add    eax,ecx
   134a2:	cmp    DWORD PTR [eax+0x44],edx
   134a5:	jne    0x1349a
   134a7:	cmp    DWORD PTR [eax+0x4],0x0
   134ab:	je     0x134cb
   134ad:	mov    ecx,DWORD PTR [eax+0xd8]
   134b3:	mov    eax,DWORD PTR [eax+0xdc]
   134b9:	mov    DWORD PTR [ebp-0x14],eax
   134bc:	lea    eax,[ebp-0x18]
   134bf:	push   eax
   134c0:	push   DWORD PTR [ebp+0x8]
   134c3:	mov    DWORD PTR [ebp-0x18],ecx
   134c6:	call   0x10ebc
   134cb:	mov    ecx,DWORD PTR [ebp-0x4]
   134ce:	call   DWORD PTR ds:0x1f05c
   134d4:	push   0x0
   134d6:	push   esi
   134d7:	call   DWORD PTR ds:0x1f014
   134dd:	pop    esi
   134de:	leave  
   134df:	ret    0x10
   134e2:	int3   
   134e3:	int3   
   134e4:	int3   
   134e5:	int3   
   134e6:	int3   
   134e7:	int3   
   134e8:	mov    edi,edi
   134ea:	push   ebp
   134eb:	mov    ebp,esp
   134ed:	push   esi
   134ee:	push   DWORD PTR [ebp+0xc]
   134f1:	mov    esi,ecx
   134f3:	push   DWORD PTR [ebp+0x8]
   134f6:	call   0x129ea
   134fb:	mov    eax,esi
   134fd:	pop    esi
   134fe:	pop    ebp
   134ff:	ret    0x8
   13502:	int3   
   13503:	int3   
   13504:	int3   
   13505:	int3   
   13506:	int3   
   13507:	int3   
   13508:	mov    edi,edi
   1350a:	push   ebp
   1350b:	mov    ebp,esp
   1350d:	mov    eax,DWORD PTR [ebp+0x8]
   13510:	push   esi
   13511:	push   DWORD PTR [eax+0x4]
   13514:	mov    esi,ecx
   13516:	push   DWORD PTR [eax]
   13518:	call   0x129ea
   1351d:	mov    eax,esi
   1351f:	pop    esi
   13520:	pop    ebp
   13521:	ret    0x4
   13524:	int3   
   13525:	int3   
   13526:	int3   
   13527:	int3   
   13528:	int3   
   13529:	int3   
   1352a:	mov    edi,edi
   1352c:	push   ebp
   1352d:	mov    ebp,esp
   1352f:	push   esi
   13530:	push   DWORD PTR [ebp+0xc]
   13533:	mov    esi,ecx
   13535:	push   DWORD PTR [ebp+0x8]
   13538:	call   0x12aca
   1353d:	mov    eax,esi
   1353f:	pop    esi
   13540:	pop    ebp
   13541:	ret    0x8
   13544:	int3   
   13545:	int3   
   13546:	int3   
   13547:	int3   
   13548:	int3   
   13549:	int3   
   1354a:	mov    edi,edi
   1354c:	push   ebp
   1354d:	mov    ebp,esp
   1354f:	mov    eax,DWORD PTR [ebp+0x8]
   13552:	push   esi
   13553:	push   DWORD PTR [eax+0x4]
   13556:	mov    esi,ecx
   13558:	push   DWORD PTR [eax]
   1355a:	call   0x12aca
   1355f:	mov    eax,esi
   13561:	pop    esi
   13562:	pop    ebp
   13563:	ret    0x4
   13566:	int3   
   13567:	int3   
   13568:	int3   
   13569:	int3   
   1356a:	int3   
   1356b:	int3   
   1356c:	mov    edi,edi
   1356e:	push   ebp
   1356f:	mov    ebp,esp
   13571:	push   esi
   13572:	mov    esi,DWORD PTR [ebp+0x8]
   13575:	lea    eax,[ebp+0xc]
   13578:	push   eax
   13579:	mov    ecx,esi
   1357b:	call   0x1354a
   13580:	xor    ecx,ecx
   13582:	inc    ecx
   13583:	cmp    DWORD PTR [esi+0x4],ecx
   13586:	jbe    0x1359a
   13588:	mov    eax,DWORD PTR [esi]
   1358a:	lea    eax,[eax+ecx*2]
   1358d:	mov    dx,WORD PTR [eax-0x2]
   13591:	xor    WORD PTR [eax],dx
   13594:	inc    ecx
   13595:	cmp    ecx,DWORD PTR [esi+0x4]
   13598:	jb     0x13588
   1359a:	push   DWORD PTR [ebp+0xc]
   1359d:	call   0x10990
   135a2:	pop    ecx
   135a3:	mov    eax,esi
   135a5:	pop    esi
   135a6:	pop    ebp
   135a7:	ret    0xc
   135aa:	int3   
   135ab:	int3   
   135ac:	int3   
   135ad:	int3   
   135ae:	int3   
   135af:	int3   
   135b0:	mov    edi,edi
   135b2:	push   ebp
   135b3:	mov    ebp,esp
   135b5:	push   esi
   135b6:	mov    esi,DWORD PTR [ebp+0x8]
   135b9:	lea    eax,[ebp+0xc]
   135bc:	push   eax
   135bd:	mov    ecx,esi
   135bf:	call   0x13508
   135c4:	xor    ecx,ecx
   135c6:	inc    ecx
   135c7:	cmp    DWORD PTR [esi+0x4],ecx
   135ca:	jbe    0x135db
   135cc:	mov    eax,DWORD PTR [esi]
   135ce:	add    eax,ecx
   135d0:	mov    dl,BYTE PTR [eax-0x1]
   135d3:	xor    BYTE PTR [eax],dl
   135d5:	inc    ecx
   135d6:	cmp    ecx,DWORD PTR [esi+0x4]
   135d9:	jb     0x135cc
   135db:	push   DWORD PTR [ebp+0xc]
   135de:	call   0x10990
   135e3:	pop    ecx
   135e4:	mov    eax,esi
   135e6:	pop    esi
   135e7:	pop    ebp
   135e8:	ret    0xc
   135eb:	int3   
   135ec:	int3   
   135ed:	int3   
   135ee:	int3   
   135ef:	int3   
   135f0:	mov    edi,edi
   135f2:	push   esi
   135f3:	mov    esi,ecx
   135f5:	mov    ecx,DWORD PTR [esi]
   135f7:	mov    eax,DWORD PTR [ecx+0x8]
   135fa:	cmp    eax,DWORD PTR ds:0x780bc
   13600:	je     0x1360e
   13602:	push   eax
   13603:	call   0x12b36
   13608:	jmp    0x1361d
   1360a:	mov    DWORD PTR [esi],eax
   1360c:	mov    ecx,eax
   1360e:	mov    eax,DWORD PTR [ecx+0x4]
   13611:	cmp    ecx,DWORD PTR [eax+0x8]
   13614:	je     0x1360a
   13616:	mov    ecx,DWORD PTR [esi]
   13618:	cmp    DWORD PTR [ecx+0x8],eax
   1361b:	je     0x1361f
   1361d:	mov    DWORD PTR [esi],eax
   1361f:	pop    esi
   13620:	ret    
   13621:	int3   
   13622:	int3   
   13623:	int3   
   13624:	int3   
   13625:	int3   
   13626:	mov    edi,edi
   13628:	push   ebp
   13629:	mov    ebp,esp
   1362b:	push   esi
   1362c:	push   edi
   1362d:	mov    edi,DWORD PTR [ebp+0x8]
   13630:	push   edi
   13631:	mov    esi,ecx
   13633:	call   0x13508
   13638:	lea    eax,[edi+0x8]
   1363b:	push   eax
   1363c:	lea    ecx,[esi+0x8]
   1363f:	call   0x13508
   13644:	lea    eax,[edi+0x10]
   13647:	push   eax
   13648:	lea    ecx,[esi+0x10]
   1364b:	call   0x13508
   13650:	lea    eax,[edi+0x18]
   13653:	push   eax
   13654:	lea    ecx,[esi+0x18]
   13657:	call   0x13508
   1365c:	mov    eax,DWORD PTR [edi+0x20]
   1365f:	mov    DWORD PTR [esi+0x20],eax
   13662:	mov    eax,DWORD PTR [edi+0x28]
   13665:	mov    DWORD PTR [esi+0x28],eax
   13668:	mov    eax,DWORD PTR [edi+0x2c]
   1366b:	mov    DWORD PTR [esi+0x2c],eax
   1366e:	mov    eax,DWORD PTR [edi+0x30]
   13671:	mov    DWORD PTR [esi+0x30],eax
   13674:	mov    eax,DWORD PTR [edi+0x34]
   13677:	add    edi,0x38
   1367a:	push   edi
   1367b:	lea    ecx,[esi+0x38]
   1367e:	mov    DWORD PTR [esi+0x34],eax
   13681:	call   0x13508
   13686:	pop    edi
   13687:	mov    eax,esi
   13689:	pop    esi
   1368a:	pop    ebp
   1368b:	ret    0x4
   1368e:	int3   
   1368f:	int3   
   13690:	int3   
   13691:	int3   
   13692:	int3   
   13693:	int3   
   13694:	mov    edi,edi
   13696:	push   ebp
   13697:	mov    ebp,esp
   13699:	push   ebx
   1369a:	push   esi
   1369b:	push   edi
   1369c:	mov    edi,DWORD PTR [ebp+0x8]
   1369f:	mov    ebx,ecx
   136a1:	mov    esi,edi
   136a3:	cmp    edi,DWORD PTR ds:0x780b0
   136a9:	je     0x136c8
   136ab:	push   DWORD PTR [esi+0x8]
   136ae:	mov    ecx,ebx
   136b0:	call   0x13694
   136b5:	mov    esi,DWORD PTR [esi]
   136b7:	push   edi
   136b8:	call   0x10990
   136bd:	pop    ecx
   136be:	mov    edi,esi
   136c0:	cmp    esi,DWORD PTR ds:0x780b0
   136c6:	jne    0x136ab
   136c8:	pop    edi
   136c9:	pop    esi
   136ca:	pop    ebx
   136cb:	pop    ebp
   136cc:	ret    0x4
   136cf:	int3   
   136d0:	int3   
   136d1:	int3   
   136d2:	int3   
   136d3:	int3   
   136d4:	mov    edi,edi
   136d6:	push   ebp
   136d7:	mov    ebp,esp
   136d9:	push   ebx
   136da:	push   esi
   136db:	push   edi
   136dc:	mov    edi,DWORD PTR [ebp+0x8]
   136df:	mov    ebx,ecx
   136e1:	mov    esi,edi
   136e3:	cmp    edi,DWORD PTR ds:0x780b4
   136e9:	je     0x13708
   136eb:	push   DWORD PTR [esi+0x8]
   136ee:	mov    ecx,ebx
   136f0:	call   0x136d4
   136f5:	mov    esi,DWORD PTR [esi]
   136f7:	push   edi
   136f8:	call   0x10990
   136fd:	pop    ecx
   136fe:	mov    edi,esi
   13700:	cmp    esi,DWORD PTR ds:0x780b4
   13706:	jne    0x136eb
   13708:	pop    edi
   13709:	pop    esi
   1370a:	pop    ebx
   1370b:	pop    ebp
   1370c:	ret    0x4
   1370f:	int3   
   13710:	int3   
   13711:	int3   
   13712:	int3   
   13713:	int3   
   13714:	mov    edi,edi
   13716:	push   ebp
   13717:	mov    ebp,esp
   13719:	push   esi
   1371a:	push   edi
   1371b:	mov    edi,DWORD PTR [ebp+0x8]
   1371e:	push   edi
   1371f:	mov    esi,ecx
   13721:	call   0x1354a
   13726:	add    edi,0x8
   13729:	push   edi
   1372a:	lea    ecx,[esi+0x8]
   1372d:	call   0x1354a
   13732:	pop    edi
   13733:	mov    eax,esi
   13735:	pop    esi
   13736:	pop    ebp
   13737:	ret    0x4
   1373a:	int3   
   1373b:	int3   
   1373c:	int3   
   1373d:	int3   
   1373e:	int3   
   1373f:	int3   
   13740:	mov    edi,edi
   13742:	push   ebp
   13743:	mov    ebp,esp
   13745:	push   esi
   13746:	push   edi
   13747:	mov    edi,DWORD PTR [ebp+0x8]
   1374a:	push   edi
   1374b:	mov    esi,ecx
   1374d:	call   0x13508
   13752:	add    edi,0x8
   13755:	push   edi
   13756:	lea    ecx,[esi+0x8]
   13759:	call   0x13508
   1375e:	pop    edi
   1375f:	mov    eax,esi
   13761:	pop    esi
   13762:	pop    ebp
   13763:	ret    0x4
   13766:	int3   
   13767:	int3   
   13768:	int3   
   13769:	int3   
   1376a:	int3   
   1376b:	int3   
   1376c:	mov    edi,edi
   1376e:	push   ebp
   1376f:	mov    ebp,esp
   13771:	push   ecx
   13772:	push   DWORD PTR [ebp-0x4]
   13775:	push   DWORD PTR [ebp+0x10]
   13778:	push   DWORD PTR [ebp+0xc]
   1377b:	push   DWORD PTR [ebp+0x8]
   1377e:	call   0x1337e
   13783:	add    esp,0x10
   13786:	leave  
   13787:	ret    
   13788:	int3   
   13789:	int3   
   1378a:	int3   
   1378b:	int3   
   1378c:	int3   
   1378d:	int3   
   1378e:	mov    edi,edi
   13790:	push   ebp
   13791:	mov    ebp,esp
   13793:	push   ecx
   13794:	push   DWORD PTR [ebp-0x4]
   13797:	push   DWORD PTR [ebp+0x10]
   1379a:	push   DWORD PTR [ebp+0xc]
   1379d:	push   DWORD PTR [ebp+0x8]
   137a0:	call   0x133a8
   137a5:	add    esp,0x10
   137a8:	leave  
   137a9:	ret    
   137aa:	int3   
   137ab:	int3   
   137ac:	int3   
   137ad:	int3   
   137ae:	int3   
   137af:	int3   
   137b0:	mov    edi,edi
   137b2:	push   ebp
   137b3:	mov    ebp,esp
   137b5:	push   ecx
   137b6:	push   DWORD PTR [ebp-0x4]
   137b9:	push   DWORD PTR [ebp+0x10]
   137bc:	push   DWORD PTR [ebp+0xc]
   137bf:	push   DWORD PTR [ebp+0x8]
   137c2:	call   0x133d2
   137c7:	add    esp,0x10
   137ca:	leave  
   137cb:	ret    
   137cc:	int3   
   137cd:	int3   
   137ce:	int3   
   137cf:	int3   
   137d0:	int3   
   137d1:	int3   
   137d2:	mov    edi,edi
   137d4:	push   ebp
   137d5:	mov    ebp,esp
   137d7:	push   ecx
   137d8:	push   DWORD PTR [ebp-0x4]
   137db:	push   DWORD PTR [ebp+0x10]
   137de:	push   DWORD PTR [ebp+0xc]
   137e1:	push   DWORD PTR [ebp+0x8]
   137e4:	call   0x133fc
   137e9:	add    esp,0x10
   137ec:	leave  
   137ed:	ret    
   137ee:	int3   
   137ef:	int3   
   137f0:	int3   
   137f1:	int3   
   137f2:	int3   
   137f3:	int3   
   137f4:	mov    edi,edi
   137f6:	push   ebp
   137f7:	mov    ebp,esp
   137f9:	mov    ecx,DWORD PTR [ebp+0x8]
   137fc:	push   0x0
   137fe:	call   0x13302
   13803:	pop    ebp
   13804:	ret    0x4
   13807:	int3   
   13808:	int3   
   13809:	int3   
   1380a:	int3   
   1380b:	int3   
   1380c:	mov    edi,edi
   1380e:	push   ebp
   1380f:	mov    ebp,esp
   13811:	mov    ecx,DWORD PTR [ebp+0x8]
   13814:	test   ecx,ecx
   13816:	je     0x13820
   13818:	push   DWORD PTR [ebp+0xc]
   1381b:	call   0x13328
   13820:	pop    ebp
   13821:	ret    0x8
   13824:	int3   
   13825:	int3   
   13826:	int3   
   13827:	int3   
   13828:	int3   
   13829:	int3   
   1382a:	mov    edi,edi
   1382c:	push   ebp
   1382d:	mov    ebp,esp
   1382f:	mov    ecx,DWORD PTR [ebp+0x8]
   13832:	push   0x0
   13834:	call   0x13350
   13839:	pop    ebp
   1383a:	ret    0x4
   1383d:	int3   
   1383e:	int3   
   1383f:	int3   
   13840:	int3   
   13841:	int3   
   13842:	mov    edi,edi
   13844:	push   ebp
   13845:	mov    ebp,esp
   13847:	push   esi
   13848:	push   edi
   13849:	mov    edi,DWORD PTR [ebp+0x8]
   1384c:	push   edi
   1384d:	mov    esi,ecx
   1384f:	call   0x13626
   13854:	mov    eax,DWORD PTR [edi+0x40]
   13857:	mov    DWORD PTR [esi+0x40],eax
   1385a:	pop    edi
   1385b:	mov    eax,esi
   1385d:	pop    esi
   1385e:	pop    ebp
   1385f:	ret    0x4
   13862:	int3   
   13863:	int3   
   13864:	int3   
   13865:	int3   
   13866:	int3   
   13867:	int3   
   13868:	mov    edi,edi
   1386a:	push   ebp
   1386b:	mov    ebp,esp
   1386d:	push   esi
   1386e:	push   edi
   1386f:	mov    edi,DWORD PTR [ebp+0x8]
   13872:	push   edi
   13873:	mov    esi,ecx
   13875:	call   0x13508
   1387a:	add    edi,0x8
   1387d:	push   edi
   1387e:	lea    ecx,[esi+0x8]
   13881:	call   0x13626
   13886:	pop    edi
   13887:	mov    eax,esi
   13889:	pop    esi
   1388a:	pop    ebp
   1388b:	ret    0x4
   1388e:	int3   
   1388f:	int3   
   13890:	int3   
   13891:	int3   
   13892:	int3   
   13893:	int3   
   13894:	mov    edi,edi
   13896:	push   ebp
   13897:	mov    ebp,esp
   13899:	push   esi
   1389a:	push   DWORD PTR [ebp+0x8]
   1389d:	mov    esi,ecx
   1389f:	call   0x13508
   138a4:	push   DWORD PTR [ebp+0xc]
   138a7:	lea    ecx,[esi+0x8]
   138aa:	call   0x13842
   138af:	mov    eax,esi
   138b1:	pop    esi
   138b2:	pop    ebp
   138b3:	ret    0x8
   138b6:	int3   
   138b7:	int3   
   138b8:	int3   
   138b9:	int3   
   138ba:	int3   
   138bb:	int3   
   138bc:	mov    edi,edi
   138be:	push   ebp
   138bf:	mov    ebp,esp
   138c1:	push   esi
   138c2:	push   DWORD PTR [ebp+0x8]
   138c5:	mov    esi,ecx
   138c7:	call   0x1354a
   138cc:	push   DWORD PTR [ebp+0xc]
   138cf:	lea    ecx,[esi+0x8]
   138d2:	call   0x1354a
   138d7:	mov    eax,esi
   138d9:	pop    esi
   138da:	pop    ebp
   138db:	ret    0x8
   138de:	int3   
   138df:	int3   
   138e0:	int3   
   138e1:	int3   
   138e2:	int3   
   138e3:	int3   
   138e4:	mov    edi,edi
   138e6:	push   ebp
   138e7:	mov    ebp,esp
   138e9:	push   esi
   138ea:	push   DWORD PTR [ebp+0x8]
   138ed:	mov    esi,ecx
   138ef:	call   0x13508
   138f4:	push   DWORD PTR [ebp+0xc]
   138f7:	lea    ecx,[esi+0x8]
   138fa:	call   0x13508
   138ff:	mov    eax,esi
   13901:	pop    esi
   13902:	pop    ebp
   13903:	ret    0x8
   13906:	int3   
   13907:	int3   
   13908:	int3   
   13909:	int3   
   1390a:	int3   
   1390b:	int3   
   1390c:	mov    edi,edi
   1390e:	push   esi
   1390f:	push   edi
   13910:	push   0xffffffff
   13912:	mov    edi,0x1ded8
   13917:	push   edi
   13918:	mov    esi,ecx
   1391a:	call   0x129ea
   1391f:	push   0xffffffff
   13921:	push   edi
   13922:	lea    ecx,[esi+0x8]
   13925:	call   0x129ea
   1392a:	push   0xffffffff
   1392c:	push   edi
   1392d:	lea    ecx,[esi+0x10]
   13930:	call   0x129ea
   13935:	push   0xffffffff
   13937:	push   edi
   13938:	lea    ecx,[esi+0x18]
   1393b:	call   0x129ea
   13940:	push   0xffffffff
   13942:	push   edi
   13943:	lea    ecx,[esi+0x38]
   13946:	call   0x129ea
   1394b:	xor    eax,eax
   1394d:	mov    DWORD PTR [esi+0x20],eax
   13950:	mov    DWORD PTR [esi+0x30],eax
   13953:	mov    DWORD PTR [esi+0x34],eax
   13956:	pop    edi
   13957:	mov    eax,esi
   13959:	pop    esi
   1395a:	ret    
   1395b:	int3   
   1395c:	int3   
   1395d:	int3   
   1395e:	int3   
   1395f:	int3   
   13960:	mov    edi,edi
   13962:	push   ebp
   13963:	mov    ebp,esp
   13965:	push   esi
   13966:	push   DWORD PTR [ebp+0x8]
   13969:	mov    esi,ecx
   1396b:	call   0x13508
   13970:	push   0xffffffff
   13972:	push   0x1ded8
   13977:	lea    ecx,[esi+0x8]
   1397a:	call   0x129ea
   1397f:	push   DWORD PTR [ebp+0xc]
   13982:	lea    ecx,[esi+0x10]
   13985:	call   0x13508
   1398a:	push   DWORD PTR [ebp+0x10]
   1398d:	lea    ecx,[esi+0x18]
   13990:	call   0x13508
   13995:	mov    eax,DWORD PTR [ebp+0x18]
   13998:	push   DWORD PTR [ebp+0x14]
   1399b:	lea    ecx,[esi+0x38]
   1399e:	mov    DWORD PTR [esi+0x20],eax
   139a1:	call   0x13508
   139a6:	and    DWORD PTR [esi+0x30],0x0
   139aa:	and    DWORD PTR [esi+0x34],0x0
   139ae:	mov    eax,DWORD PTR [ebp+0x1c]
   139b1:	mov    ecx,DWORD PTR [eax]
   139b3:	mov    DWORD PTR [esi+0x28],ecx
   139b6:	mov    eax,DWORD PTR [eax+0x4]
   139b9:	mov    DWORD PTR [esi+0x2c],eax
   139bc:	mov    eax,esi
   139be:	pop    esi
   139bf:	pop    ebp
   139c0:	ret    0x18
   139c3:	int3   
   139c4:	int3   
   139c5:	int3   
   139c6:	int3   
   139c7:	int3   
   139c8:	mov    edi,edi
   139ca:	push   ebp
   139cb:	mov    ebp,esp
   139cd:	push   ecx
   139ce:	push   esi
   139cf:	push   edi
   139d0:	mov    edi,DWORD PTR [ebp+0xc]
   139d3:	push   edi
   139d4:	mov    esi,ecx
   139d6:	call   0x12b58
   139db:	mov    esi,DWORD PTR [esi+0x4]
   139de:	mov    DWORD PTR [ebp+0xc],eax
   139e1:	cmp    eax,esi
   139e3:	je     0x139f1
   139e5:	mov    ecx,DWORD PTR [edi]
   139e7:	cmp    ecx,DWORD PTR [eax+0xc]
   139ea:	jb     0x139f1
   139ec:	lea    eax,[ebp+0xc]
   139ef:	jmp    0x139f7
   139f1:	mov    DWORD PTR [ebp-0x4],esi
   139f4:	lea    eax,[ebp-0x4]
   139f7:	mov    ecx,DWORD PTR [eax]
   139f9:	mov    eax,DWORD PTR [ebp+0x8]
   139fc:	pop    edi
   139fd:	mov    DWORD PTR [eax],ecx
   139ff:	pop    esi
   13a00:	leave  
   13a01:	ret    0x8
   13a04:	int3   
   13a05:	int3   
   13a06:	int3   
   13a07:	int3   
   13a08:	int3   
   13a09:	int3   
   13a0a:	mov    edi,edi
   13a0c:	push   ebp
   13a0d:	mov    ebp,esp
   13a0f:	push   ecx
   13a10:	push   esi
   13a11:	push   DWORD PTR [ebp+0xc]
   13a14:	mov    esi,ecx
   13a16:	call   0x12c2e
   13a1b:	mov    DWORD PTR [ebp-0x4],eax
   13a1e:	cmp    eax,DWORD PTR [esi+0x4]
   13a21:	je     0x13a38
   13a23:	add    eax,0x10
   13a26:	push   eax
   13a27:	push   DWORD PTR [ebp+0xc]
   13a2a:	call   0x197ae
   13a2f:	test   al,al
   13a31:	jne    0x13a38
   13a33:	lea    eax,[ebp-0x4]
   13a36:	jmp    0x13a41
   13a38:	mov    eax,DWORD PTR [esi+0x4]
   13a3b:	mov    DWORD PTR [ebp+0xc],eax
   13a3e:	lea    eax,[ebp+0xc]
   13a41:	mov    ecx,DWORD PTR [eax]
   13a43:	mov    eax,DWORD PTR [ebp+0x8]
   13a46:	mov    DWORD PTR [eax],ecx
   13a48:	pop    esi
   13a49:	leave  
   13a4a:	ret    0x8
   13a4d:	int3   
   13a4e:	int3   
   13a4f:	int3   
   13a50:	int3   
   13a51:	int3   
   13a52:	mov    edi,edi
   13a54:	push   ebp
   13a55:	mov    ebp,esp
   13a57:	push   esi
   13a58:	push   DWORD PTR [ebp+0x8]
   13a5b:	mov    esi,ecx
   13a5d:	call   0x13508
   13a62:	push   DWORD PTR [ebp+0xc]
   13a65:	lea    ecx,[esi+0x8]
   13a68:	call   0x13626
   13a6d:	mov    eax,esi
   13a6f:	pop    esi
   13a70:	pop    ebp
   13a71:	ret    0x8
   13a74:	int3   
   13a75:	int3   
   13a76:	int3   
   13a77:	int3   
   13a78:	int3   
   13a79:	int3   
   13a7a:	mov    edi,edi
   13a7c:	push   ebp
   13a7d:	mov    ebp,esp
   13a7f:	push   ecx
   13a80:	push   esi
   13a81:	push   DWORD PTR [ebp+0xc]
   13a84:	mov    esi,ecx
   13a86:	call   0x12c6e
   13a8b:	mov    DWORD PTR [ebp-0x4],eax
   13a8e:	cmp    eax,DWORD PTR [esi+0x4]
   13a91:	je     0x13aa8
   13a93:	add    eax,0xc
   13a96:	push   eax
   13a97:	push   DWORD PTR [ebp+0xc]
   13a9a:	call   0x197ae
   13a9f:	test   al,al
   13aa1:	jne    0x13aa8
   13aa3:	lea    eax,[ebp-0x4]
   13aa6:	jmp    0x13ab1
   13aa8:	mov    eax,DWORD PTR [esi+0x4]
   13aab:	mov    DWORD PTR [ebp+0xc],eax
   13aae:	lea    eax,[ebp+0xc]
   13ab1:	mov    ecx,DWORD PTR [eax]
   13ab3:	mov    eax,DWORD PTR [ebp+0x8]
   13ab6:	mov    DWORD PTR [eax],ecx
   13ab8:	pop    esi
   13ab9:	leave  
   13aba:	ret    0x8
   13abd:	int3   
   13abe:	int3   
   13abf:	int3   
   13ac0:	int3   
   13ac1:	int3   
   13ac2:	mov    edi,edi
   13ac4:	push   ebp
   13ac5:	mov    ebp,esp
   13ac7:	push   ecx
   13ac8:	push   esi
   13ac9:	push   edi
   13aca:	mov    edi,DWORD PTR [ebp+0xc]
   13acd:	push   edi
   13ace:	mov    esi,ecx
   13ad0:	call   0x12cae
   13ad5:	mov    esi,DWORD PTR [esi+0x4]
   13ad8:	mov    DWORD PTR [ebp+0xc],eax
   13adb:	cmp    eax,esi
   13add:	je     0x13aeb
   13adf:	mov    ecx,DWORD PTR [edi]
   13ae1:	cmp    ecx,DWORD PTR [eax+0xc]
   13ae4:	jl     0x13aeb
   13ae6:	lea    eax,[ebp+0xc]
   13ae9:	jmp    0x13af1
   13aeb:	mov    DWORD PTR [ebp-0x4],esi
   13aee:	lea    eax,[ebp-0x4]
   13af1:	mov    ecx,DWORD PTR [eax]
   13af3:	mov    eax,DWORD PTR [ebp+0x8]
   13af6:	pop    edi
   13af7:	mov    DWORD PTR [eax],ecx
   13af9:	pop    esi
   13afa:	leave  
   13afb:	ret    0x8
   13afe:	int3   
   13aff:	int3   
   13b00:	int3   
   13b01:	int3   
   13b02:	int3   
   13b03:	int3   
   13b04:	mov    edi,edi
   13b06:	push   ebp
   13b07:	mov    ebp,esp
   13b09:	push   ecx
   13b0a:	mov    eax,DWORD PTR [ecx]
   13b0c:	lea    ecx,[ebp-0x4]
   13b0f:	mov    DWORD PTR [ebp-0x4],eax
   13b12:	call   0x12d1c
   13b17:	mov    eax,DWORD PTR [ebp-0x4]
   13b1a:	add    eax,0xc
   13b1d:	leave  
   13b1e:	ret    
   13b1f:	int3   
   13b20:	int3   
   13b21:	int3   
   13b22:	int3   
   13b23:	int3   
   13b24:	mov    edi,edi
   13b26:	push   ebp
   13b27:	mov    ebp,esp
   13b29:	push   ecx
   13b2a:	push   esi
   13b2b:	push   DWORD PTR [ebp+0xc]
   13b2e:	mov    esi,ecx
   13b30:	call   0x12e30
   13b35:	mov    DWORD PTR [ebp-0x4],eax
   13b38:	cmp    eax,DWORD PTR [esi+0x4]
   13b3b:	je     0x13b52
   13b3d:	add    eax,0x10
   13b40:	push   eax
   13b41:	push   DWORD PTR [ebp+0xc]
   13b44:	call   0x197ae
   13b49:	test   al,al
   13b4b:	jne    0x13b52
   13b4d:	lea    eax,[ebp-0x4]
   13b50:	jmp    0x13b5b
   13b52:	mov    eax,DWORD PTR [esi+0x4]
   13b55:	mov    DWORD PTR [ebp+0xc],eax
   13b58:	lea    eax,[ebp+0xc]
   13b5b:	mov    ecx,DWORD PTR [eax]
   13b5d:	mov    eax,DWORD PTR [ebp+0x8]
   13b60:	mov    DWORD PTR [eax],ecx
   13b62:	pop    esi
   13b63:	leave  
   13b64:	ret    0x8
   13b67:	int3   
   13b68:	int3   
   13b69:	int3   
   13b6a:	int3   
   13b6b:	int3   
   13b6c:	mov    edi,edi
   13b6e:	push   ebp
   13b6f:	mov    ebp,esp
   13b71:	push   ecx
   13b72:	push   ecx
   13b73:	push   ebx
   13b74:	push   esi
   13b75:	mov    DWORD PTR [ebp-0x4],ecx
   13b78:	push   edi
   13b79:	mov    edi,DWORD PTR [ebp+0xc]
   13b7c:	lea    ecx,[ebp+0xc]
   13b7f:	call   0x1119e
   13b84:	mov    esi,DWORD PTR [edi]
   13b86:	mov    eax,ds:0x780b0
   13b8b:	mov    ebx,edi
   13b8d:	mov    DWORD PTR [ebp-0x8],esi
   13b90:	cmp    esi,eax
   13b92:	jne    0x13bb0
   13b94:	mov    esi,DWORD PTR [edi+0x8]
   13b97:	mov    eax,DWORD PTR [ebx+0x4]
   13b9a:	mov    ecx,DWORD PTR [ebp-0x4]
   13b9d:	mov    DWORD PTR [esi+0x4],eax
   13ba0:	mov    eax,DWORD PTR [ecx+0x4]
   13ba3:	cmp    DWORD PTR [eax+0x4],edi
   13ba6:	jne    0x13c25
   13ba8:	mov    DWORD PTR [eax+0x4],esi
   13bab:	jmp    0x13c33
   13bb0:	mov    ecx,DWORD PTR [edi+0x8]
   13bb3:	cmp    ecx,eax
   13bb5:	je     0x13b97
   13bb7:	push   ecx
   13bb8:	call   0x110b4
   13bbd:	mov    ebx,eax
   13bbf:	mov    esi,DWORD PTR [ebx+0x8]
   13bc2:	cmp    ebx,edi
   13bc4:	je     0x13b97
   13bc6:	mov    eax,DWORD PTR [ebp-0x8]
   13bc9:	mov    DWORD PTR [eax+0x4],ebx
   13bcc:	mov    eax,DWORD PTR [edi]
   13bce:	mov    DWORD PTR [ebx],eax
   13bd0:	cmp    ebx,DWORD PTR [edi+0x8]
   13bd3:	jne    0x13bda
   13bd5:	mov    DWORD PTR [esi+0x4],ebx
   13bd8:	jmp    0x13bf1
   13bda:	mov    eax,DWORD PTR [ebx+0x4]
   13bdd:	mov    DWORD PTR [esi+0x4],eax
   13be0:	mov    eax,DWORD PTR [ebx+0x4]
   13be3:	mov    DWORD PTR [eax],esi
   13be5:	mov    eax,DWORD PTR [edi+0x8]
   13be8:	mov    DWORD PTR [ebx+0x8],eax
   13beb:	mov    eax,DWORD PTR [edi+0x8]
   13bee:	mov    DWORD PTR [eax+0x4],ebx
   13bf1:	mov    eax,DWORD PTR [ebp-0x4]
   13bf4:	mov    eax,DWORD PTR [eax+0x4]
   13bf7:	cmp    DWORD PTR [eax+0x4],edi
   13bfa:	jne    0x13c01
   13bfc:	mov    DWORD PTR [eax+0x4],ebx
   13bff:	jmp    0x13c0f
   13c01:	mov    eax,DWORD PTR [edi+0x4]
   13c04:	cmp    DWORD PTR [eax],edi
   13c06:	jne    0x13c0c
   13c08:	mov    DWORD PTR [eax],ebx
   13c0a:	jmp    0x13c0f
   13c0c:	mov    DWORD PTR [eax+0x8],ebx
   13c0f:	mov    eax,DWORD PTR [edi+0x4]
   13c12:	mov    DWORD PTR [ebx+0x4],eax
   13c15:	mov    eax,DWORD PTR [ebx+0x14]
   13c18:	mov    ecx,DWORD PTR [edi+0x14]
   13c1b:	mov    DWORD PTR [ebx+0x14],ecx
   13c1e:	mov    DWORD PTR [edi+0x14],eax
   13c21:	mov    ebx,edi
   13c23:	jmp    0x13c86
   13c25:	mov    eax,DWORD PTR [edi+0x4]
   13c28:	cmp    DWORD PTR [eax],edi
   13c2a:	jne    0x13c30
   13c2c:	mov    DWORD PTR [eax],esi
   13c2e:	jmp    0x13c33
   13c30:	mov    DWORD PTR [eax+0x8],esi
   13c33:	mov    eax,DWORD PTR [ecx+0x4]
   13c36:	mov    DWORD PTR [ebp-0x8],eax
   13c39:	cmp    DWORD PTR [eax],edi
   13c3b:	jne    0x13c5d
   13c3d:	mov    edx,DWORD PTR [edi+0x8]
   13c40:	cmp    edx,DWORD PTR ds:0x780b0
   13c46:	jne    0x13c4f
   13c48:	mov    edx,DWORD PTR [edi+0x4]
   13c4b:	mov    DWORD PTR [eax],edx
   13c4d:	jmp    0x13c5d
   13c4f:	push   esi
   13c50:	call   0x110b4
   13c55:	mov    ecx,DWORD PTR [ebp-0x8]
   13c58:	mov    DWORD PTR [ecx],eax
   13c5a:	mov    ecx,DWORD PTR [ebp-0x4]
   13c5d:	mov    eax,DWORD PTR [ecx+0x4]
   13c60:	mov    DWORD PTR [ebp-0x8],eax
   13c63:	cmp    DWORD PTR [eax+0x8],edi
   13c66:	jne    0x13c86
   13c68:	mov    ecx,DWORD PTR [edi]
   13c6a:	cmp    ecx,DWORD PTR ds:0x780b0
   13c70:	jne    0x13c7a
   13c72:	mov    ecx,DWORD PTR [edi+0x4]
   13c75:	mov    DWORD PTR [eax+0x8],ecx
   13c78:	jmp    0x13c86
   13c7a:	push   esi
   13c7b:	call   0x11092
   13c80:	mov    ecx,DWORD PTR [ebp-0x8]
   13c83:	mov    DWORD PTR [ecx+0x8],eax
   13c86:	xor    edi,edi
   13c88:	inc    edi
   13c89:	cmp    DWORD PTR [ebx+0x14],edi
   13c8c:	jne    0x13da3
   13c92:	jmp    0x13d51
   13c97:	cmp    DWORD PTR [esi+0x14],edi
   13c9a:	jne    0x13da0
   13ca0:	mov    eax,DWORD PTR [esi+0x4]
   13ca3:	cmp    esi,DWORD PTR [eax]
   13ca5:	jne    0x13d1c
   13ca7:	mov    eax,DWORD PTR [eax+0x8]
   13caa:	cmp    DWORD PTR [eax+0x14],0x0
   13cae:	jne    0x13cc8
   13cb0:	mov    DWORD PTR [eax+0x14],edi
   13cb3:	mov    eax,DWORD PTR [esi+0x4]
   13cb6:	and    DWORD PTR [eax+0x14],0x0
   13cba:	push   DWORD PTR [esi+0x4]
   13cbd:	call   0x12b90
   13cc2:	mov    eax,DWORD PTR [esi+0x4]
   13cc5:	mov    eax,DWORD PTR [eax+0x8]
   13cc8:	mov    ecx,DWORD PTR [eax]
   13cca:	cmp    DWORD PTR [ecx+0x14],edi
   13ccd:	jne    0x13cd7
   13ccf:	mov    ecx,DWORD PTR [eax+0x8]
   13cd2:	cmp    DWORD PTR [ecx+0x14],edi
   13cd5:	je     0x13d4a
   13cd7:	mov    ecx,DWORD PTR [eax+0x8]
   13cda:	cmp    DWORD PTR [ecx+0x14],edi
   13cdd:	jne    0x13cf7
   13cdf:	mov    ecx,DWORD PTR [eax]
   13ce1:	mov    DWORD PTR [ecx+0x14],edi
   13ce4:	mov    ecx,DWORD PTR [ebp-0x4]
   13ce7:	and    DWORD PTR [eax+0x14],0x0
   13ceb:	push   eax
   13cec:	call   0x12bde
   13cf1:	mov    eax,DWORD PTR [esi+0x4]
   13cf4:	mov    eax,DWORD PTR [eax+0x8]
   13cf7:	mov    ecx,DWORD PTR [esi+0x4]
   13cfa:	mov    ecx,DWORD PTR [ecx+0x14]
   13cfd:	mov    DWORD PTR [eax+0x14],ecx
   13d00:	mov    ecx,DWORD PTR [esi+0x4]
   13d03:	mov    DWORD PTR [ecx+0x14],edi
   13d06:	mov    eax,DWORD PTR [eax+0x8]
   13d09:	mov    ecx,DWORD PTR [ebp-0x4]
   13d0c:	mov    DWORD PTR [eax+0x14],edi
   13d0f:	push   DWORD PTR [esi+0x4]
   13d12:	call   0x12b90
   13d17:	jmp    0x13da0
   13d1c:	mov    eax,DWORD PTR [eax]
   13d1e:	cmp    DWORD PTR [eax+0x14],0x0
   13d22:	jne    0x13d3b
   13d24:	mov    DWORD PTR [eax+0x14],edi
   13d27:	mov    eax,DWORD PTR [esi+0x4]
   13d2a:	and    DWORD PTR [eax+0x14],0x0
   13d2e:	push   DWORD PTR [esi+0x4]
   13d31:	call   0x12bde
   13d36:	mov    eax,DWORD PTR [esi+0x4]
   13d39:	mov    eax,DWORD PTR [eax]
   13d3b:	mov    ecx,DWORD PTR [eax+0x8]
   13d3e:	cmp    DWORD PTR [ecx+0x14],edi
   13d41:	jne    0x13d62
   13d43:	mov    ecx,DWORD PTR [eax]
   13d45:	cmp    DWORD PTR [ecx+0x14],edi
   13d48:	jne    0x13d62
   13d4a:	and    DWORD PTR [eax+0x14],0x0
   13d4e:	mov    esi,DWORD PTR [esi+0x4]
   13d51:	mov    ecx,DWORD PTR [ebp-0x4]
   13d54:	mov    eax,DWORD PTR [ecx+0x4]
   13d57:	cmp    esi,DWORD PTR [eax+0x4]
   13d5a:	jne    0x13c97
   13d60:	jmp    0x13da0
   13d62:	mov    ecx,DWORD PTR [eax]
   13d64:	cmp    DWORD PTR [ecx+0x14],edi
   13d67:	jne    0x13d81
   13d69:	mov    ecx,DWORD PTR [eax+0x8]
   13d6c:	mov    DWORD PTR [ecx+0x14],edi
   13d6f:	mov    ecx,DWORD PTR [ebp-0x4]
   13d72:	and    DWORD PTR [eax+0x14],0x0
   13d76:	push   eax
   13d77:	call   0x12b90
   13d7c:	mov    eax,DWORD PTR [esi+0x4]
   13d7f:	mov    eax,DWORD PTR [eax]
   13d81:	mov    ecx,DWORD PTR [esi+0x4]
   13d84:	mov    ecx,DWORD PTR [ecx+0x14]
   13d87:	mov    DWORD PTR [eax+0x14],ecx
   13d8a:	mov    ecx,DWORD PTR [esi+0x4]
   13d8d:	mov    DWORD PTR [ecx+0x14],edi
   13d90:	mov    eax,DWORD PTR [eax]
   13d92:	mov    ecx,DWORD PTR [ebp-0x4]
   13d95:	mov    DWORD PTR [eax+0x14],edi
   13d98:	push   DWORD PTR [esi+0x4]
   13d9b:	call   0x12bde
   13da0:	mov    DWORD PTR [esi+0x14],edi
   13da3:	push   ebx
   13da4:	call   0x10990
   13da9:	mov    eax,DWORD PTR [ebp-0x4]
   13dac:	dec    DWORD PTR [eax+0xc]
   13daf:	mov    eax,DWORD PTR [ebp+0x8]
   13db2:	pop    ecx
   13db3:	mov    ecx,DWORD PTR [ebp+0xc]
   13db6:	pop    edi
   13db7:	pop    esi
   13db8:	mov    DWORD PTR [eax],ecx
   13dba:	pop    ebx
   13dbb:	leave  
   13dbc:	ret    0x8
   13dbf:	int3   
   13dc0:	int3   
   13dc1:	int3   
   13dc2:	int3   
   13dc3:	int3   
   13dc4:	mov    edi,edi
   13dc6:	push   ebp
   13dc7:	mov    ebp,esp
   13dc9:	push   esi
   13dca:	push   edi
   13dcb:	push   DWORD PTR [ebp+0xc]
   13dce:	mov    edi,ecx
   13dd0:	call   0x12f0e
   13dd5:	push   DWORD PTR [ebp+0xc]
   13dd8:	mov    ecx,edi
   13dda:	mov    esi,eax
   13ddc:	call   0x12b58
   13de1:	mov    ecx,DWORD PTR [ebp+0x8]
   13de4:	pop    edi
   13de5:	mov    DWORD PTR [ecx],eax
   13de7:	mov    DWORD PTR [ecx+0x4],esi
   13dea:	mov    eax,ecx
   13dec:	pop    esi
   13ded:	pop    ebp
   13dee:	ret    0x8
   13df1:	int3   
   13df2:	int3   
   13df3:	int3   
   13df4:	int3   
   13df5:	int3   
   13df6:	mov    edi,edi
   13df8:	push   ebp
   13df9:	mov    ebp,esp
   13dfb:	push   esi
   13dfc:	push   edi
   13dfd:	push   DWORD PTR [ebp+0xc]
   13e00:	mov    edi,ecx
   13e02:	call   0x12f46
   13e07:	push   DWORD PTR [ebp+0xc]
   13e0a:	mov    ecx,edi
   13e0c:	mov    esi,eax
   13e0e:	call   0x12c2e
   13e13:	mov    ecx,DWORD PTR [ebp+0x8]
   13e16:	pop    edi
   13e17:	mov    DWORD PTR [ecx],eax
   13e19:	mov    DWORD PTR [ecx+0x4],esi
   13e1c:	mov    eax,ecx
   13e1e:	pop    esi
   13e1f:	pop    ebp
   13e20:	ret    0x8
   13e23:	int3   
   13e24:	int3   
   13e25:	int3   
   13e26:	int3   
   13e27:	int3   
   13e28:	mov    edi,edi
   13e2a:	push   ebp
   13e2b:	mov    ebp,esp
   13e2d:	push   esi
   13e2e:	push   edi
   13e2f:	push   DWORD PTR [ebp+0xc]
   13e32:	mov    edi,ecx
   13e34:	call   0x13024
   13e39:	push   DWORD PTR [ebp+0xc]
   13e3c:	mov    ecx,edi
   13e3e:	mov    esi,eax
   13e40:	call   0x12c6e
   13e45:	mov    ecx,DWORD PTR [ebp+0x8]
   13e48:	pop    edi
   13e49:	mov    DWORD PTR [ecx],eax
   13e4b:	mov    DWORD PTR [ecx+0x4],esi
   13e4e:	mov    eax,ecx
   13e50:	pop    esi
   13e51:	pop    ebp
   13e52:	ret    0x8
   13e55:	int3   
   13e56:	int3   
   13e57:	int3   
   13e58:	int3   
   13e59:	int3   
   13e5a:	mov    edi,edi
   13e5c:	push   ebp
   13e5d:	mov    ebp,esp
   13e5f:	push   esi
   13e60:	push   edi
   13e61:	push   DWORD PTR [ebp+0xc]
   13e64:	mov    edi,ecx
   13e66:	call   0x13102
   13e6b:	push   DWORD PTR [ebp+0xc]
   13e6e:	mov    ecx,edi
   13e70:	mov    esi,eax
   13e72:	call   0x12cae
   13e77:	mov    ecx,DWORD PTR [ebp+0x8]
   13e7a:	pop    edi
   13e7b:	mov    DWORD PTR [ecx],eax
   13e7d:	mov    DWORD PTR [ecx+0x4],esi
   13e80:	mov    eax,ecx
   13e82:	pop    esi
   13e83:	pop    ebp
   13e84:	ret    0x8
   13e87:	int3   
   13e88:	int3   
   13e89:	int3   
   13e8a:	int3   
   13e8b:	int3   
   13e8c:	mov    edi,edi
   13e8e:	push   ebp
   13e8f:	mov    ebp,esp
   13e91:	push   ecx
   13e92:	push   esi
   13e93:	push   DWORD PTR [ebp+0xc]
   13e96:	mov    esi,ecx
   13e98:	call   0x1313a
   13e9d:	mov    DWORD PTR [ebp-0x4],eax
   13ea0:	cmp    eax,DWORD PTR [esi+0x4]
   13ea3:	je     0x13eba
   13ea5:	add    eax,0xc
   13ea8:	push   eax
   13ea9:	push   DWORD PTR [ebp+0xc]
   13eac:	call   0x197de
   13eb1:	test   al,al
   13eb3:	jne    0x13eba
   13eb5:	lea    eax,[ebp-0x4]
   13eb8:	jmp    0x13ec3
   13eba:	mov    eax,DWORD PTR [esi+0x4]
   13ebd:	mov    DWORD PTR [ebp+0xc],eax
   13ec0:	lea    eax,[ebp+0xc]
   13ec3:	mov    ecx,DWORD PTR [eax]
   13ec5:	mov    eax,DWORD PTR [ebp+0x8]
   13ec8:	mov    DWORD PTR [eax],ecx
   13eca:	pop    esi
   13ecb:	leave  
   13ecc:	ret    0x8
   13ecf:	int3   
   13ed0:	int3   
   13ed1:	int3   
   13ed2:	int3   
   13ed3:	int3   
   13ed4:	mov    edi,edi
   13ed6:	push   ebp
   13ed7:	mov    ebp,esp
   13ed9:	push   ecx
   13eda:	push   ecx
   13edb:	push   ebx
   13edc:	push   esi
   13edd:	mov    DWORD PTR [ebp-0x4],ecx
   13ee0:	push   edi
   13ee1:	mov    edi,DWORD PTR [ebp+0xc]
   13ee4:	lea    ecx,[ebp+0xc]
   13ee7:	call   0x12d5c
   13eec:	mov    esi,DWORD PTR [edi]
   13eee:	mov    eax,ds:0x780b4
   13ef3:	mov    ebx,edi
   13ef5:	mov    DWORD PTR [ebp-0x8],esi
   13ef8:	cmp    esi,eax
   13efa:	jne    0x13f18
   13efc:	mov    esi,DWORD PTR [edi+0x8]
   13eff:	mov    eax,DWORD PTR [ebx+0x4]
   13f02:	mov    ecx,DWORD PTR [ebp-0x4]
   13f05:	mov    DWORD PTR [esi+0x4],eax
   13f08:	mov    eax,DWORD PTR [ecx+0x4]
   13f0b:	cmp    DWORD PTR [eax+0x4],edi
   13f0e:	jne    0x13f8d
   13f10:	mov    DWORD PTR [eax+0x4],esi
   13f13:	jmp    0x13f9b
   13f18:	mov    ecx,DWORD PTR [edi+0x8]
   13f1b:	cmp    ecx,eax
   13f1d:	je     0x13eff
   13f1f:	push   ecx
   13f20:	call   0x110f8
   13f25:	mov    ebx,eax
   13f27:	mov    esi,DWORD PTR [ebx+0x8]
   13f2a:	cmp    ebx,edi
   13f2c:	je     0x13eff
   13f2e:	mov    eax,DWORD PTR [ebp-0x8]
   13f31:	mov    DWORD PTR [eax+0x4],ebx
   13f34:	mov    eax,DWORD PTR [edi]
   13f36:	mov    DWORD PTR [ebx],eax
   13f38:	cmp    ebx,DWORD PTR [edi+0x8]
   13f3b:	jne    0x13f42
   13f3d:	mov    DWORD PTR [esi+0x4],ebx
   13f40:	jmp    0x13f59
   13f42:	mov    eax,DWORD PTR [ebx+0x4]
   13f45:	mov    DWORD PTR [esi+0x4],eax
   13f48:	mov    eax,DWORD PTR [ebx+0x4]
   13f4b:	mov    DWORD PTR [eax],esi
   13f4d:	mov    eax,DWORD PTR [edi+0x8]
   13f50:	mov    DWORD PTR [ebx+0x8],eax
   13f53:	mov    eax,DWORD PTR [edi+0x8]
   13f56:	mov    DWORD PTR [eax+0x4],ebx
   13f59:	mov    eax,DWORD PTR [ebp-0x4]
   13f5c:	mov    eax,DWORD PTR [eax+0x4]
   13f5f:	cmp    DWORD PTR [eax+0x4],edi
   13f62:	jne    0x13f69
   13f64:	mov    DWORD PTR [eax+0x4],ebx
   13f67:	jmp    0x13f77
   13f69:	mov    eax,DWORD PTR [edi+0x4]
   13f6c:	cmp    DWORD PTR [eax],edi
   13f6e:	jne    0x13f74
   13f70:	mov    DWORD PTR [eax],ebx
   13f72:	jmp    0x13f77
   13f74:	mov    DWORD PTR [eax+0x8],ebx
   13f77:	mov    eax,DWORD PTR [edi+0x4]
   13f7a:	mov    DWORD PTR [ebx+0x4],eax
   13f7d:	mov    eax,DWORD PTR [ebx+0x10]
   13f80:	mov    ecx,DWORD PTR [edi+0x10]
   13f83:	mov    DWORD PTR [ebx+0x10],ecx
   13f86:	mov    DWORD PTR [edi+0x10],eax
   13f89:	mov    ebx,edi
   13f8b:	jmp    0x13fee
   13f8d:	mov    eax,DWORD PTR [edi+0x4]
   13f90:	cmp    DWORD PTR [eax],edi
   13f92:	jne    0x13f98
   13f94:	mov    DWORD PTR [eax],esi
   13f96:	jmp    0x13f9b
   13f98:	mov    DWORD PTR [eax+0x8],esi
   13f9b:	mov    eax,DWORD PTR [ecx+0x4]
   13f9e:	mov    DWORD PTR [ebp-0x8],eax
   13fa1:	cmp    DWORD PTR [eax],edi
   13fa3:	jne    0x13fc5
   13fa5:	mov    edx,DWORD PTR [edi+0x8]
   13fa8:	cmp    edx,DWORD PTR ds:0x780b4
   13fae:	jne    0x13fb7
   13fb0:	mov    edx,DWORD PTR [edi+0x4]
   13fb3:	mov    DWORD PTR [eax],edx
   13fb5:	jmp    0x13fc5
   13fb7:	push   esi
   13fb8:	call   0x110f8
   13fbd:	mov    ecx,DWORD PTR [ebp-0x8]
   13fc0:	mov    DWORD PTR [ecx],eax
   13fc2:	mov    ecx,DWORD PTR [ebp-0x4]
   13fc5:	mov    eax,DWORD PTR [ecx+0x4]
   13fc8:	mov    DWORD PTR [ebp-0x8],eax
   13fcb:	cmp    DWORD PTR [eax+0x8],edi
   13fce:	jne    0x13fee
   13fd0:	mov    ecx,DWORD PTR [edi]
   13fd2:	cmp    ecx,DWORD PTR ds:0x780b4
   13fd8:	jne    0x13fe2
   13fda:	mov    ecx,DWORD PTR [edi+0x4]
   13fdd:	mov    DWORD PTR [eax+0x8],ecx
   13fe0:	jmp    0x13fee
   13fe2:	push   esi
   13fe3:	call   0x110d6
   13fe8:	mov    ecx,DWORD PTR [ebp-0x8]
   13feb:	mov    DWORD PTR [ecx+0x8],eax
   13fee:	xor    edi,edi
   13ff0:	inc    edi
   13ff1:	cmp    DWORD PTR [ebx+0x10],edi
   13ff4:	jne    0x1410b
   13ffa:	jmp    0x140b9
   13fff:	cmp    DWORD PTR [esi+0x10],edi
   14002:	jne    0x14108
   14008:	mov    eax,DWORD PTR [esi+0x4]
   1400b:	cmp    esi,DWORD PTR [eax]
   1400d:	jne    0x14084
   1400f:	mov    eax,DWORD PTR [eax+0x8]
   14012:	cmp    DWORD PTR [eax+0x10],0x0
   14016:	jne    0x14030
   14018:	mov    DWORD PTR [eax+0x10],edi
   1401b:	mov    eax,DWORD PTR [esi+0x4]
   1401e:	and    DWORD PTR [eax+0x10],0x0
   14022:	push   DWORD PTR [esi+0x4]
   14025:	call   0x12d92
   1402a:	mov    eax,DWORD PTR [esi+0x4]
   1402d:	mov    eax,DWORD PTR [eax+0x8]
   14030:	mov    ecx,DWORD PTR [eax]
   14032:	cmp    DWORD PTR [ecx+0x10],edi
   14035:	jne    0x1403f
   14037:	mov    ecx,DWORD PTR [eax+0x8]
   1403a:	cmp    DWORD PTR [ecx+0x10],edi
   1403d:	je     0x140b2
   1403f:	mov    ecx,DWORD PTR [eax+0x8]
   14042:	cmp    DWORD PTR [ecx+0x10],edi
   14045:	jne    0x1405f
   14047:	mov    ecx,DWORD PTR [eax]
   14049:	mov    DWORD PTR [ecx+0x10],edi
   1404c:	mov    ecx,DWORD PTR [ebp-0x4]
   1404f:	and    DWORD PTR [eax+0x10],0x0
   14053:	push   eax
   14054:	call   0x12de0
   14059:	mov    eax,DWORD PTR [esi+0x4]
   1405c:	mov    eax,DWORD PTR [eax+0x8]
   1405f:	mov    ecx,DWORD PTR [esi+0x4]
   14062:	mov    ecx,DWORD PTR [ecx+0x10]
   14065:	mov    DWORD PTR [eax+0x10],ecx
   14068:	mov    ecx,DWORD PTR [esi+0x4]
   1406b:	mov    DWORD PTR [ecx+0x10],edi
   1406e:	mov    eax,DWORD PTR [eax+0x8]
   14071:	mov    ecx,DWORD PTR [ebp-0x4]
   14074:	mov    DWORD PTR [eax+0x10],edi
   14077:	push   DWORD PTR [esi+0x4]
   1407a:	call   0x12d92
   1407f:	jmp    0x14108
   14084:	mov    eax,DWORD PTR [eax]
   14086:	cmp    DWORD PTR [eax+0x10],0x0
   1408a:	jne    0x140a3
   1408c:	mov    DWORD PTR [eax+0x10],edi
   1408f:	mov    eax,DWORD PTR [esi+0x4]
   14092:	and    DWORD PTR [eax+0x10],0x0
   14096:	push   DWORD PTR [esi+0x4]
   14099:	call   0x12de0
   1409e:	mov    eax,DWORD PTR [esi+0x4]
   140a1:	mov    eax,DWORD PTR [eax]
   140a3:	mov    ecx,DWORD PTR [eax+0x8]
   140a6:	cmp    DWORD PTR [ecx+0x10],edi
   140a9:	jne    0x140ca
   140ab:	mov    ecx,DWORD PTR [eax]
   140ad:	cmp    DWORD PTR [ecx+0x10],edi
   140b0:	jne    0x140ca
   140b2:	and    DWORD PTR [eax+0x10],0x0
   140b6:	mov    esi,DWORD PTR [esi+0x4]
   140b9:	mov    ecx,DWORD PTR [ebp-0x4]
   140bc:	mov    eax,DWORD PTR [ecx+0x4]
   140bf:	cmp    esi,DWORD PTR [eax+0x4]
   140c2:	jne    0x13fff
   140c8:	jmp    0x14108
   140ca:	mov    ecx,DWORD PTR [eax]
   140cc:	cmp    DWORD PTR [ecx+0x10],edi
   140cf:	jne    0x140e9
   140d1:	mov    ecx,DWORD PTR [eax+0x8]
   140d4:	mov    DWORD PTR [ecx+0x10],edi
   140d7:	mov    ecx,DWORD PTR [ebp-0x4]
   140da:	and    DWORD PTR [eax+0x10],0x0
   140de:	push   eax
   140df:	call   0x12d92
   140e4:	mov    eax,DWORD PTR [esi+0x4]
   140e7:	mov    eax,DWORD PTR [eax]
   140e9:	mov    ecx,DWORD PTR [esi+0x4]
   140ec:	mov    ecx,DWORD PTR [ecx+0x10]
   140ef:	mov    DWORD PTR [eax+0x10],ecx
   140f2:	mov    ecx,DWORD PTR [esi+0x4]
   140f5:	mov    DWORD PTR [ecx+0x10],edi
   140f8:	mov    eax,DWORD PTR [eax]
   140fa:	mov    ecx,DWORD PTR [ebp-0x4]
   140fd:	mov    DWORD PTR [eax+0x10],edi
   14100:	push   DWORD PTR [esi+0x4]
   14103:	call   0x12de0
   14108:	mov    DWORD PTR [esi+0x10],edi
   1410b:	push   ebx
   1410c:	call   0x10990
   14111:	mov    eax,DWORD PTR [ebp-0x4]
   14114:	dec    DWORD PTR [eax+0xc]
   14117:	mov    eax,DWORD PTR [ebp+0x8]
   1411a:	pop    ecx
   1411b:	mov    ecx,DWORD PTR [ebp+0xc]
   1411e:	pop    edi
   1411f:	pop    esi
   14120:	mov    DWORD PTR [eax],ecx
   14122:	pop    ebx
   14123:	leave  
   14124:	ret    0x8
   14127:	int3   
   14128:	int3   
   14129:	int3   
   1412a:	int3   
   1412b:	int3   
   1412c:	mov    edi,edi
   1412e:	push   ebp
   1412f:	mov    ebp,esp
   14131:	push   esi
   14132:	push   edi
   14133:	push   DWORD PTR [ebp+0xc]
   14136:	mov    edi,ecx
   14138:	call   0x13290
   1413d:	push   DWORD PTR [ebp+0xc]
   14140:	mov    ecx,edi
   14142:	mov    esi,eax
   14144:	call   0x13258
   14149:	mov    ecx,DWORD PTR [ebp+0x8]
   1414c:	pop    edi
   1414d:	mov    DWORD PTR [ecx],eax
   1414f:	mov    DWORD PTR [ecx+0x4],esi
   14152:	mov    eax,ecx
   14154:	pop    esi
   14155:	pop    ebp
   14156:	ret    0x8
   14159:	int3   
   1415a:	int3   
   1415b:	int3   
   1415c:	int3   
   1415d:	int3   
   1415e:	mov    edi,edi
   14160:	push   ebp
   14161:	mov    ebp,esp
   14163:	push   0x0
   14165:	push   0x60
   14167:	call   0x132c8
   1416c:	mov    ecx,DWORD PTR [ebp+0x8]
   1416f:	mov    DWORD PTR [eax+0x4],ecx
   14172:	mov    ecx,DWORD PTR [ebp+0xc]
   14175:	mov    DWORD PTR [eax+0x58],ecx
   14178:	pop    ebp
   14179:	ret    0x8
   1417c:	int3   
   1417d:	int3   
   1417e:	int3   
   1417f:	int3   
   14180:	int3   
   14181:	int3   
   14182:	mov    edi,edi
   14184:	push   ebp
   14185:	mov    ebp,esp
   14187:	push   ecx
   14188:	push   ecx
   14189:	push   ebx
   1418a:	push   esi
   1418b:	mov    DWORD PTR [ebp-0x4],ecx
   1418e:	push   edi
   1418f:	mov    edi,DWORD PTR [ebp+0xc]
   14192:	lea    ecx,[ebp+0xc]
   14195:	call   0x1141c
   1419a:	mov    esi,DWORD PTR [edi]
   1419c:	mov    eax,ds:0x780c0
   141a1:	mov    ebx,edi
   141a3:	mov    DWORD PTR [ebp-0x8],esi
   141a6:	cmp    esi,eax
   141a8:	jne    0x141c6
   141aa:	mov    esi,DWORD PTR [edi+0x8]
   141ad:	mov    eax,DWORD PTR [ebx+0x4]
   141b0:	mov    ecx,DWORD PTR [ebp-0x4]
   141b3:	mov    DWORD PTR [esi+0x4],eax
   141b6:	mov    eax,DWORD PTR [ecx+0x4]
   141b9:	cmp    DWORD PTR [eax+0x4],edi
   141bc:	jne    0x1423b
   141be:	mov    DWORD PTR [eax+0x4],esi
   141c1:	jmp    0x14249
   141c6:	mov    ecx,DWORD PTR [edi+0x8]
   141c9:	cmp    ecx,eax
   141cb:	je     0x141ad
   141cd:	push   ecx
   141ce:	call   0x112f6
   141d3:	mov    ebx,eax
   141d5:	mov    esi,DWORD PTR [ebx+0x8]
   141d8:	cmp    ebx,edi
   141da:	je     0x141ad
   141dc:	mov    eax,DWORD PTR [ebp-0x8]
   141df:	mov    DWORD PTR [eax+0x4],ebx
   141e2:	mov    eax,DWORD PTR [edi]
   141e4:	mov    DWORD PTR [ebx],eax
   141e6:	cmp    ebx,DWORD PTR [edi+0x8]
   141e9:	jne    0x141f0
   141eb:	mov    DWORD PTR [esi+0x4],ebx
   141ee:	jmp    0x14207
   141f0:	mov    eax,DWORD PTR [ebx+0x4]
   141f3:	mov    DWORD PTR [esi+0x4],eax
   141f6:	mov    eax,DWORD PTR [ebx+0x4]
   141f9:	mov    DWORD PTR [eax],esi
   141fb:	mov    eax,DWORD PTR [edi+0x8]
   141fe:	mov    DWORD PTR [ebx+0x8],eax
   14201:	mov    eax,DWORD PTR [edi+0x8]
   14204:	mov    DWORD PTR [eax+0x4],ebx
   14207:	mov    eax,DWORD PTR [ebp-0x4]
   1420a:	mov    eax,DWORD PTR [eax+0x4]
   1420d:	cmp    DWORD PTR [eax+0x4],edi
   14210:	jne    0x14217
   14212:	mov    DWORD PTR [eax+0x4],ebx
   14215:	jmp    0x14225
   14217:	mov    eax,DWORD PTR [edi+0x4]
   1421a:	cmp    DWORD PTR [eax],edi
   1421c:	jne    0x14222
   1421e:	mov    DWORD PTR [eax],ebx
   14220:	jmp    0x14225
   14222:	mov    DWORD PTR [eax+0x8],ebx
   14225:	mov    eax,DWORD PTR [edi+0x4]
   14228:	mov    DWORD PTR [ebx+0x4],eax
   1422b:	mov    eax,DWORD PTR [ebx+0x1c]
   1422e:	mov    ecx,DWORD PTR [edi+0x1c]
   14231:	mov    DWORD PTR [ebx+0x1c],ecx
   14234:	mov    DWORD PTR [edi+0x1c],eax
   14237:	mov    ebx,edi
   14239:	jmp    0x1429c
   1423b:	mov    eax,DWORD PTR [edi+0x4]
   1423e:	cmp    DWORD PTR [eax],edi
   14240:	jne    0x14246
   14242:	mov    DWORD PTR [eax],esi
   14244:	jmp    0x14249
   14246:	mov    DWORD PTR [eax+0x8],esi
   14249:	mov    eax,DWORD PTR [ecx+0x4]
   1424c:	mov    DWORD PTR [ebp-0x8],eax
   1424f:	cmp    DWORD PTR [eax],edi
   14251:	jne    0x14273
   14253:	mov    edx,DWORD PTR [edi+0x8]
   14256:	cmp    edx,DWORD PTR ds:0x780c0
   1425c:	jne    0x14265
   1425e:	mov    edx,DWORD PTR [edi+0x4]
   14261:	mov    DWORD PTR [eax],edx
   14263:	jmp    0x14273
   14265:	push   esi
   14266:	call   0x112f6
   1426b:	mov    ecx,DWORD PTR [ebp-0x8]
   1426e:	mov    DWORD PTR [ecx],eax
   14270:	mov    ecx,DWORD PTR [ebp-0x4]
   14273:	mov    eax,DWORD PTR [ecx+0x4]
   14276:	mov    DWORD PTR [ebp-0x8],eax
   14279:	cmp    DWORD PTR [eax+0x8],edi
   1427c:	jne    0x1429c
   1427e:	mov    ecx,DWORD PTR [edi]
   14280:	cmp    ecx,DWORD PTR ds:0x780c0
   14286:	jne    0x14290
   14288:	mov    ecx,DWORD PTR [edi+0x4]
   1428b:	mov    DWORD PTR [eax+0x8],ecx
   1428e:	jmp    0x1429c
   14290:	push   esi
   14291:	call   0x112d4
   14296:	mov    ecx,DWORD PTR [ebp-0x8]
   14299:	mov    DWORD PTR [ecx+0x8],eax
   1429c:	xor    edi,edi
   1429e:	inc    edi
   1429f:	cmp    DWORD PTR [ebx+0x1c],edi
   142a2:	jne    0x143b9
   142a8:	jmp    0x14367
   142ad:	cmp    DWORD PTR [esi+0x1c],edi
   142b0:	jne    0x143b6
   142b6:	mov    eax,DWORD PTR [esi+0x4]
   142b9:	cmp    esi,DWORD PTR [eax]
   142bb:	jne    0x14332
   142bd:	mov    eax,DWORD PTR [eax+0x8]
   142c0:	cmp    DWORD PTR [eax+0x1c],0x0
   142c4:	jne    0x142de
   142c6:	mov    DWORD PTR [eax+0x1c],edi
   142c9:	mov    eax,DWORD PTR [esi+0x4]
   142cc:	and    DWORD PTR [eax+0x1c],0x0
   142d0:	push   DWORD PTR [esi+0x4]
   142d3:	call   0x12f86
   142d8:	mov    eax,DWORD PTR [esi+0x4]
   142db:	mov    eax,DWORD PTR [eax+0x8]
   142de:	mov    ecx,DWORD PTR [eax]
   142e0:	cmp    DWORD PTR [ecx+0x1c],edi
   142e3:	jne    0x142ed
   142e5:	mov    ecx,DWORD PTR [eax+0x8]
   142e8:	cmp    DWORD PTR [ecx+0x1c],edi
   142eb:	je     0x14360
   142ed:	mov    ecx,DWORD PTR [eax+0x8]
   142f0:	cmp    DWORD PTR [ecx+0x1c],edi
   142f3:	jne    0x1430d
   142f5:	mov    ecx,DWORD PTR [eax]
   142f7:	mov    DWORD PTR [ecx+0x1c],edi
   142fa:	mov    ecx,DWORD PTR [ebp-0x4]
   142fd:	and    DWORD PTR [eax+0x1c],0x0
   14301:	push   eax
   14302:	call   0x12fd4
   14307:	mov    eax,DWORD PTR [esi+0x4]
   1430a:	mov    eax,DWORD PTR [eax+0x8]
   1430d:	mov    ecx,DWORD PTR [esi+0x4]
   14310:	mov    ecx,DWORD PTR [ecx+0x1c]
   14313:	mov    DWORD PTR [eax+0x1c],ecx
   14316:	mov    ecx,DWORD PTR [esi+0x4]
   14319:	mov    DWORD PTR [ecx+0x1c],edi
   1431c:	mov    eax,DWORD PTR [eax+0x8]
   1431f:	mov    ecx,DWORD PTR [ebp-0x4]
   14322:	mov    DWORD PTR [eax+0x1c],edi
   14325:	push   DWORD PTR [esi+0x4]
   14328:	call   0x12f86
   1432d:	jmp    0x143b6
   14332:	mov    eax,DWORD PTR [eax]
   14334:	cmp    DWORD PTR [eax+0x1c],0x0
   14338:	jne    0x14351
   1433a:	mov    DWORD PTR [eax+0x1c],edi
   1433d:	mov    eax,DWORD PTR [esi+0x4]
   14340:	and    DWORD PTR [eax+0x1c],0x0
   14344:	push   DWORD PTR [esi+0x4]
   14347:	call   0x12fd4
   1434c:	mov    eax,DWORD PTR [esi+0x4]
   1434f:	mov    eax,DWORD PTR [eax]
   14351:	mov    ecx,DWORD PTR [eax+0x8]
   14354:	cmp    DWORD PTR [ecx+0x1c],edi
   14357:	jne    0x14378
   14359:	mov    ecx,DWORD PTR [eax]
   1435b:	cmp    DWORD PTR [ecx+0x1c],edi
   1435e:	jne    0x14378
   14360:	and    DWORD PTR [eax+0x1c],0x0
   14364:	mov    esi,DWORD PTR [esi+0x4]
   14367:	mov    ecx,DWORD PTR [ebp-0x4]
   1436a:	mov    eax,DWORD PTR [ecx+0x4]
   1436d:	cmp    esi,DWORD PTR [eax+0x4]
   14370:	jne    0x142ad
   14376:	jmp    0x143b6
   14378:	mov    ecx,DWORD PTR [eax]
   1437a:	cmp    DWORD PTR [ecx+0x1c],edi
   1437d:	jne    0x14397
   1437f:	mov    ecx,DWORD PTR [eax+0x8]
   14382:	mov    DWORD PTR [ecx+0x1c],edi
   14385:	mov    ecx,DWORD PTR [ebp-0x4]
   14388:	and    DWORD PTR [eax+0x1c],0x0
   1438c:	push   eax
   1438d:	call   0x12f86
   14392:	mov    eax,DWORD PTR [esi+0x4]
   14395:	mov    eax,DWORD PTR [eax]
   14397:	mov    ecx,DWORD PTR [esi+0x4]
   1439a:	mov    ecx,DWORD PTR [ecx+0x1c]
   1439d:	mov    DWORD PTR [eax+0x1c],ecx
   143a0:	mov    ecx,DWORD PTR [esi+0x4]
   143a3:	mov    DWORD PTR [ecx+0x1c],edi
   143a6:	mov    eax,DWORD PTR [eax]
   143a8:	mov    ecx,DWORD PTR [ebp-0x4]
   143ab:	mov    DWORD PTR [eax+0x1c],edi
   143ae:	push   DWORD PTR [esi+0x4]
   143b1:	call   0x12fd4
   143b6:	mov    DWORD PTR [esi+0x1c],edi
   143b9:	lea    eax,[ebx+0xc]
   143bc:	push   eax
   143bd:	call   0x132ea
   143c2:	push   ebx
   143c3:	call   0x10990
   143c8:	mov    eax,DWORD PTR [ebp-0x4]
   143cb:	dec    DWORD PTR [eax+0xc]
   143ce:	mov    eax,DWORD PTR [ebp+0x8]
   143d1:	pop    ecx
   143d2:	mov    ecx,DWORD PTR [ebp+0xc]
   143d5:	pop    edi
   143d6:	pop    esi
   143d7:	mov    DWORD PTR [eax],ecx
   143d9:	pop    ebx
   143da:	leave  
   143db:	ret    0x8
   143de:	int3   
   143df:	int3   
   143e0:	int3   
   143e1:	int3   
   143e2:	int3   
   143e3:	int3   
   143e4:	mov    edi,edi
   143e6:	push   ebp
   143e7:	mov    ebp,esp
   143e9:	push   ebx
   143ea:	push   esi
   143eb:	push   edi
   143ec:	mov    edi,DWORD PTR [ebp+0x8]
   143ef:	mov    ebx,ecx
   143f1:	mov    esi,edi
   143f3:	cmp    edi,DWORD PTR ds:0x780c0
   143f9:	je     0x14421
   143fb:	push   DWORD PTR [esi+0x8]
   143fe:	mov    ecx,ebx
   14400:	call   0x143e4
   14405:	mov    esi,DWORD PTR [esi]
   14407:	lea    eax,[edi+0xc]
   1440a:	push   eax
   1440b:	call   0x132ea
   14410:	push   edi
   14411:	call   0x10990
   14416:	pop    ecx
   14417:	mov    edi,esi
   14419:	cmp    esi,DWORD PTR ds:0x780c0
   1441f:	jne    0x143fb
   14421:	pop    edi
   14422:	pop    esi
   14423:	pop    ebx
   14424:	pop    ebp
   14425:	ret    0x4
   14428:	int3   
   14429:	int3   
   1442a:	int3   
   1442b:	int3   
   1442c:	int3   
   1442d:	int3   
   1442e:	mov    edi,edi
   14430:	push   ebp
   14431:	mov    ebp,esp
   14433:	push   0x0
   14435:	push   0x20
   14437:	call   0x132c8
   1443c:	mov    ecx,DWORD PTR [ebp+0x8]
   1443f:	mov    DWORD PTR [eax+0x4],ecx
   14442:	mov    ecx,DWORD PTR [ebp+0xc]
   14445:	mov    DWORD PTR [eax+0x1c],ecx
   14448:	pop    ebp
   14449:	ret    0x8
   1444c:	int3   
   1444d:	int3   
   1444e:	int3   
   1444f:	int3   
   14450:	int3   
   14451:	int3   
   14452:	mov    edi,edi
   14454:	push   ebp
   14455:	mov    ebp,esp
   14457:	push   0x0
   14459:	push   0x14
   1445b:	call   0x132c8
   14460:	mov    ecx,DWORD PTR [ebp+0x8]
   14463:	mov    DWORD PTR [eax+0x4],ecx
   14466:	mov    ecx,DWORD PTR [ebp+0xc]
   14469:	mov    DWORD PTR [eax+0x10],ecx
   1446c:	pop    ebp
   1446d:	ret    0x8
   14470:	int3   
   14471:	int3   
   14472:	int3   
   14473:	int3   
   14474:	int3   
   14475:	int3   
   14476:	mov    edi,edi
   14478:	push   ebp
   14479:	mov    ebp,esp
   1447b:	push   0x0
   1447d:	push   0x68
   1447f:	call   0x132c8
   14484:	mov    ecx,DWORD PTR [ebp+0x8]
   14487:	mov    DWORD PTR [eax+0x4],ecx
   1448a:	mov    ecx,DWORD PTR [ebp+0xc]
   1448d:	mov    DWORD PTR [eax+0x60],ecx
   14490:	pop    ebp
   14491:	ret    0x8
   14494:	int3   
   14495:	int3   
   14496:	int3   
   14497:	int3   
   14498:	int3   
   14499:	int3   
   1449a:	mov    edi,edi
   1449c:	push   ebp
   1449d:	mov    ebp,esp
   1449f:	push   esi
   144a0:	push   edi
   144a1:	mov    edi,DWORD PTR [ebp+0x8]
   144a4:	push   edi
   144a5:	mov    esi,ecx
   144a7:	call   0x13508
   144ac:	add    edi,0x8
   144af:	push   edi
   144b0:	lea    ecx,[esi+0x8]
   144b3:	call   0x13842
   144b8:	pop    edi
   144b9:	mov    eax,esi
   144bb:	pop    esi
   144bc:	pop    ebp
   144bd:	ret    0x4
   144c0:	int3   
   144c1:	int3   
   144c2:	int3   
   144c3:	int3   
   144c4:	int3   
   144c5:	int3   
   144c6:	mov    edi,edi
   144c8:	push   ebp
   144c9:	mov    ebp,esp
   144cb:	mov    ecx,DWORD PTR [ebp+0x8]
   144ce:	test   ecx,ecx
   144d0:	je     0x144da
   144d2:	push   DWORD PTR [ebp+0xc]
   144d5:	call   0x1449a
   144da:	pop    ebp
   144db:	ret    0x8
   144de:	int3   
   144df:	int3   
   144e0:	int3   
   144e1:	int3   
   144e2:	int3   
   144e3:	int3   
   144e4:	mov    edi,edi
   144e6:	push   ebp
   144e7:	mov    ebp,esp
   144e9:	mov    ecx,DWORD PTR [ebp+0x8]
   144ec:	test   ecx,ecx
   144ee:	je     0x144f8
   144f0:	push   DWORD PTR [ebp+0xc]
   144f3:	call   0x13868
   144f8:	pop    ebp
   144f9:	ret    0x8
   144fc:	int3   
   144fd:	int3   
   144fe:	int3   
   144ff:	int3   
   14500:	int3   
   14501:	int3   
   14502:	mov    edi,edi
   14504:	push   ebp
   14505:	mov    ebp,esp
   14507:	mov    ecx,DWORD PTR [ebp+0x8]
   1450a:	test   ecx,ecx
   1450c:	je     0x14516
   1450e:	push   DWORD PTR [ebp+0xc]
   14511:	call   0x13740
   14516:	pop    ebp
   14517:	ret    0x8
   1451a:	int3   
   1451b:	int3   
   1451c:	int3   
   1451d:	int3   
   1451e:	int3   
   1451f:	int3   
   14520:	mov    edi,edi
   14522:	push   ebp
   14523:	mov    ebp,esp
   14525:	mov    ecx,DWORD PTR [ebp+0x8]
   14528:	test   ecx,ecx
   1452a:	je     0x14534
   1452c:	push   DWORD PTR [ebp+0xc]
   1452f:	call   0x13714
   14534:	pop    ebp
   14535:	ret    0x8
   14538:	int3   
   14539:	int3   
   1453a:	int3   
   1453b:	int3   
   1453c:	int3   
   1453d:	int3   
   1453e:	mov    edi,edi
   14540:	push   ebp
   14541:	mov    ebp,esp
   14543:	push   ecx
   14544:	mov    eax,ds:0x780b4
   14549:	push   ebx
   1454a:	mov    ebx,DWORD PTR [ebp+0xc]
   1454d:	push   esi
   1454e:	mov    esi,DWORD PTR [ebp+0x8]
   14551:	mov    DWORD PTR [ebp-0x4],ecx
   14554:	mov    DWORD PTR [ebp+0x8],esi
   14557:	cmp    esi,eax
   14559:	je     0x1459e
   1455b:	push   edi
   1455c:	push   DWORD PTR [esi+0x10]
   1455f:	mov    ecx,DWORD PTR [ebp-0x4]
   14562:	push   ebx
   14563:	call   0x14452
   14568:	mov    edi,eax
   1456a:	cmp    DWORD PTR [ebp+0x8],esi
   1456d:	jne    0x14572
   1456f:	mov    DWORD PTR [ebp+0x8],edi
   14572:	mov    ecx,DWORD PTR [ebp-0x4]
   14575:	push   edi
   14576:	push   DWORD PTR [esi+0x8]
   14579:	call   0x1453e
   1457e:	mov    DWORD PTR [edi+0x8],eax
   14581:	lea    eax,[esi+0xc]
   14584:	push   eax
   14585:	lea    eax,[edi+0xc]
   14588:	push   eax
   14589:	call   0x1a388
   1458e:	mov    DWORD PTR [ebx],edi
   14590:	mov    esi,DWORD PTR [esi]
   14592:	mov    eax,ds:0x780b4
   14597:	mov    ebx,edi
   14599:	cmp    esi,eax
   1459b:	jne    0x1455c
   1459d:	pop    edi
   1459e:	mov    DWORD PTR [ebx],eax
   145a0:	mov    eax,DWORD PTR [ebp+0x8]
   145a3:	pop    esi
   145a4:	pop    ebx
   145a5:	leave  
   145a6:	ret    0x8
   145a9:	int3   
   145aa:	int3   
   145ab:	int3   
   145ac:	int3   
   145ad:	int3   
   145ae:	mov    edi,edi
   145b0:	push   ebp
   145b1:	mov    ebp,esp
   145b3:	push   edi
   145b4:	mov    edi,DWORD PTR [ebp+0xc]
   145b7:	cmp    DWORD PTR [ebp+0x8],edi
   145ba:	je     0x145d0
   145bc:	push   esi
   145bd:	mov    esi,DWORD PTR [ebp+0x10]
   145c0:	inc    DWORD PTR [esi]
   145c2:	lea    ecx,[ebp+0x8]
   145c5:	call   0x135f0
   145ca:	cmp    DWORD PTR [ebp+0x8],edi
   145cd:	jne    0x145c0
   145cf:	pop    esi
   145d0:	pop    edi
   145d1:	pop    ebp
   145d2:	ret    
   145d3:	int3   
   145d4:	int3   
   145d5:	int3   
   145d6:	int3   
   145d7:	int3   
   145d8:	mov    edi,edi
   145da:	push   ebp
   145db:	mov    ebp,esp
   145dd:	push   DWORD PTR [ebp+0xc]
   145e0:	push   DWORD PTR [ebp+0x8]
   145e3:	call   0x13a7a
   145e8:	mov    eax,DWORD PTR [ebp+0x8]
   145eb:	pop    ebp
   145ec:	ret    0x8
   145ef:	int3   
   145f0:	int3   
   145f1:	int3   
   145f2:	int3   
   145f3:	int3   
   145f4:	mov    edi,edi
   145f6:	push   ebp
   145f7:	mov    ebp,esp
   145f9:	push   ecx
   145fa:	push   esi
   145fb:	mov    esi,ecx
   145fd:	cmp    DWORD PTR [esi+0xc],0x0
   14601:	mov    ecx,DWORD PTR [ebp+0xc]
   14604:	je     0x1463e
   14606:	mov    eax,DWORD PTR [esi+0x4]
   14609:	cmp    ecx,DWORD PTR [eax]
   1460b:	jne    0x1463e
   1460d:	cmp    DWORD PTR [ebp+0x10],eax
   14610:	jne    0x1463e
   14612:	push   DWORD PTR [eax+0x4]
   14615:	mov    ecx,esi
   14617:	call   0x13694
   1461c:	mov    ecx,DWORD PTR ds:0x780b0
   14622:	mov    eax,DWORD PTR [esi+0x4]
   14625:	mov    DWORD PTR [eax+0x4],ecx
   14628:	mov    eax,DWORD PTR [esi+0x4]
   1462b:	and    DWORD PTR [esi+0xc],0x0
   1462f:	mov    DWORD PTR [eax],eax
   14631:	mov    eax,DWORD PTR [esi+0x4]
   14634:	mov    DWORD PTR [eax+0x8],eax
   14637:	mov    eax,DWORD PTR [esi+0x4]
   1463a:	mov    ecx,DWORD PTR [eax]
   1463c:	jmp    0x14663
   1463e:	cmp    ecx,DWORD PTR [ebp+0x10]
   14641:	je     0x14663
   14643:	push   edi
   14644:	mov    edi,ecx
   14646:	lea    ecx,[ebp+0xc]
   14649:	call   0x1119e
   1464e:	push   edi
   1464f:	lea    eax,[ebp-0x4]
   14652:	push   eax
   14653:	mov    ecx,esi
   14655:	call   0x13b6c
   1465a:	mov    ecx,DWORD PTR [ebp+0xc]
   1465d:	cmp    ecx,DWORD PTR [ebp+0x10]
   14660:	jne    0x14644
   14662:	pop    edi
   14663:	mov    eax,DWORD PTR [ebp+0x8]
   14666:	mov    DWORD PTR [eax],ecx
   14668:	pop    esi
   14669:	leave  
   1466a:	ret    0xc
   1466d:	int3   
   1466e:	int3   
   1466f:	int3   
   14670:	int3   
   14671:	int3   
   14672:	mov    edi,edi
   14674:	push   ebp
   14675:	mov    ebp,esp
   14677:	push   ecx
   14678:	push   ecx
   14679:	push   esi
   1467a:	push   DWORD PTR [ebp+0x8]
   1467d:	lea    eax,[ebp-0x8]
   14680:	push   eax
   14681:	mov    esi,ecx
   14683:	call   0x13dc4
   14688:	and    DWORD PTR [ebp+0x8],0x0
   1468c:	lea    eax,[ebp+0x8]
   1468f:	push   eax
   14690:	push   DWORD PTR [ebp-0x4]
   14693:	push   DWORD PTR [ebp-0x8]
   14696:	call   0x1376c
   1469b:	add    esp,0xc
   1469e:	push   DWORD PTR [ebp-0x4]
   146a1:	lea    eax,[ebp-0x4]
   146a4:	push   DWORD PTR [ebp-0x8]
   146a7:	mov    ecx,esi
   146a9:	push   eax
   146aa:	call   0x145f4
   146af:	mov    eax,DWORD PTR [ebp+0x8]
   146b2:	pop    esi
   146b3:	leave  
   146b4:	ret    0x4
   146b7:	int3   
   146b8:	int3   
   146b9:	int3   
   146ba:	int3   
   146bb:	int3   
   146bc:	mov    edi,edi
   146be:	push   ebp
   146bf:	mov    ebp,esp
   146c1:	push   ecx
   146c2:	push   esi
   146c3:	mov    esi,ecx
   146c5:	cmp    DWORD PTR [esi+0xc],0x0
   146c9:	mov    ecx,DWORD PTR [ebp+0xc]
   146cc:	je     0x14706
   146ce:	mov    eax,DWORD PTR [esi+0x4]
   146d1:	cmp    ecx,DWORD PTR [eax]
   146d3:	jne    0x14706
   146d5:	cmp    DWORD PTR [ebp+0x10],eax
   146d8:	jne    0x14706
   146da:	push   DWORD PTR [eax+0x4]
   146dd:	mov    ecx,esi
   146df:	call   0x136d4
   146e4:	mov    ecx,DWORD PTR ds:0x780b4
   146ea:	mov    eax,DWORD PTR [esi+0x4]
   146ed:	mov    DWORD PTR [eax+0x4],ecx
   146f0:	mov    eax,DWORD PTR [esi+0x4]
   146f3:	and    DWORD PTR [esi+0xc],0x0
   146f7:	mov    DWORD PTR [eax],eax
   146f9:	mov    eax,DWORD PTR [esi+0x4]
   146fc:	mov    DWORD PTR [eax+0x8],eax
   146ff:	mov    eax,DWORD PTR [esi+0x4]
   14702:	mov    ecx,DWORD PTR [eax]
   14704:	jmp    0x1472b
   14706:	cmp    ecx,DWORD PTR [ebp+0x10]
   14709:	je     0x1472b
   1470b:	push   edi
   1470c:	mov    edi,ecx
   1470e:	lea    ecx,[ebp+0xc]
   14711:	call   0x12d5c
   14716:	push   edi
   14717:	lea    eax,[ebp-0x4]
   1471a:	push   eax
   1471b:	mov    ecx,esi
   1471d:	call   0x13ed4
   14722:	mov    ecx,DWORD PTR [ebp+0xc]
   14725:	cmp    ecx,DWORD PTR [ebp+0x10]
   14728:	jne    0x1470c
   1472a:	pop    edi
   1472b:	mov    eax,DWORD PTR [ebp+0x8]
   1472e:	mov    DWORD PTR [eax],ecx
   14730:	pop    esi
   14731:	leave  
   14732:	ret    0xc
   14735:	int3   
   14736:	int3   
   14737:	int3   
   14738:	int3   
   14739:	int3   
   1473a:	mov    edi,edi
   1473c:	push   ebp
   1473d:	mov    ebp,esp
   1473f:	push   ecx
   14740:	push   ecx
   14741:	push   esi
   14742:	push   DWORD PTR [ebp+0x8]
   14745:	lea    eax,[ebp-0x8]
   14748:	push   eax
   14749:	mov    esi,ecx
   1474b:	call   0x1412c
   14750:	and    DWORD PTR [ebp+0x8],0x0
   14754:	lea    eax,[ebp+0x8]
   14757:	push   eax
   14758:	push   DWORD PTR [ebp-0x4]
   1475b:	push   DWORD PTR [ebp-0x8]
   1475e:	call   0x137d2
   14763:	add    esp,0xc
   14766:	push   DWORD PTR [ebp-0x4]
   14769:	lea    eax,[ebp-0x4]
   1476c:	push   DWORD PTR [ebp-0x8]
   1476f:	mov    ecx,esi
   14771:	push   eax
   14772:	call   0x146bc
   14777:	mov    eax,DWORD PTR [ebp+0x8]
   1477a:	pop    esi
   1477b:	leave  
   1477c:	ret    0x4
   1477f:	int3   
   14780:	int3   
   14781:	int3   
   14782:	int3   
   14783:	int3   
   14784:	mov    edi,edi
   14786:	push   esi
   14787:	push   edi
   14788:	push   0x1
   1478a:	xor    edi,edi
   1478c:	push   edi
   1478d:	mov    esi,ecx
   1478f:	call   0x1aa4a
   14794:	cmp    DWORD PTR ds:0x780b0,edi
   1479a:	jne    0x147b1
   1479c:	mov    ecx,eax
   1479e:	mov    DWORD PTR ds:0x780b0,ecx
   147a4:	mov    DWORD PTR [ecx],edi
   147a6:	mov    ecx,DWORD PTR ds:0x780b0
   147ac:	xor    eax,eax
   147ae:	mov    DWORD PTR [ecx+0x8],edi
   147b1:	inc    DWORD PTR ds:0x78210
   147b7:	cmp    eax,edi
   147b9:	je     0x147c2
   147bb:	push   eax
   147bc:	call   0x10990
   147c1:	pop    ecx
   147c2:	push   edi
   147c3:	push   DWORD PTR ds:0x780b0
   147c9:	mov    ecx,esi
   147cb:	call   0x1aa4a
   147d0:	mov    DWORD PTR [esi+0xc],edi
   147d3:	mov    DWORD PTR [esi+0x4],eax
   147d6:	mov    DWORD PTR [eax],eax
   147d8:	mov    esi,DWORD PTR [esi+0x4]
   147db:	pop    edi
   147dc:	mov    DWORD PTR [esi+0x8],esi
   147df:	pop    esi
   147e0:	ret    
   147e1:	int3   
   147e2:	int3   
   147e3:	int3   
   147e4:	int3   
   147e5:	int3   
   147e6:	mov    edi,edi
   147e8:	push   esi
   147e9:	push   edi
   147ea:	push   0x1
   147ec:	xor    edi,edi
   147ee:	push   edi
   147ef:	mov    esi,ecx
   147f1:	call   0x1415e
   147f6:	cmp    DWORD PTR ds:0x780bc,edi
   147fc:	jne    0x14813
   147fe:	mov    ecx,eax
   14800:	mov    DWORD PTR ds:0x780bc,ecx
   14806:	mov    DWORD PTR [ecx],edi
   14808:	mov    ecx,DWORD PTR ds:0x780bc
   1480e:	xor    eax,eax
   14810:	mov    DWORD PTR [ecx+0x8],edi
   14813:	inc    DWORD PTR ds:0x78214
   14819:	cmp    eax,edi
   1481b:	je     0x14824
   1481d:	push   eax
   1481e:	call   0x10990
   14823:	pop    ecx
   14824:	push   edi
   14825:	push   DWORD PTR ds:0x780bc
   1482b:	mov    ecx,esi
   1482d:	call   0x1415e
   14832:	mov    DWORD PTR [esi+0xc],edi
   14835:	mov    DWORD PTR [esi+0x4],eax
   14838:	mov    DWORD PTR [eax],eax
   1483a:	mov    esi,DWORD PTR [esi+0x4]
   1483d:	pop    edi
   1483e:	mov    DWORD PTR [esi+0x8],esi
   14841:	pop    esi
   14842:	ret    
   14843:	int3   
   14844:	int3   
   14845:	int3   
   14846:	int3   
   14847:	int3   
   14848:	mov    edi,edi
   1484a:	push   ebp
   1484b:	mov    ebp,esp
   1484d:	push   ecx
   1484e:	push   esi
   1484f:	mov    esi,ecx
   14851:	cmp    DWORD PTR [esi+0xc],0x0
   14855:	mov    ecx,DWORD PTR [ebp+0xc]
   14858:	je     0x14892
   1485a:	mov    eax,DWORD PTR [esi+0x4]
   1485d:	cmp    ecx,DWORD PTR [eax]
   1485f:	jne    0x14892
   14861:	cmp    DWORD PTR [ebp+0x10],eax
   14864:	jne    0x14892
   14866:	push   DWORD PTR [eax+0x4]
   14869:	mov    ecx,esi
   1486b:	call   0x143e4
   14870:	mov    ecx,DWORD PTR ds:0x780c0
   14876:	mov    eax,DWORD PTR [esi+0x4]
   14879:	mov    DWORD PTR [eax+0x4],ecx
   1487c:	mov    eax,DWORD PTR [esi+0x4]
   1487f:	and    DWORD PTR [esi+0xc],0x0
   14883:	mov    DWORD PTR [eax],eax
   14885:	mov    eax,DWORD PTR [esi+0x4]
   14888:	mov    DWORD PTR [eax+0x8],eax
   1488b:	mov    eax,DWORD PTR [esi+0x4]
   1488e:	mov    ecx,DWORD PTR [eax]
   14890:	jmp    0x148b7
   14892:	cmp    ecx,DWORD PTR [ebp+0x10]
   14895:	je     0x148b7
   14897:	push   edi
   14898:	mov    edi,ecx
   1489a:	lea    ecx,[ebp+0xc]
   1489d:	call   0x1141c
   148a2:	push   edi
   148a3:	lea    eax,[ebp-0x4]
   148a6:	push   eax
   148a7:	mov    ecx,esi
   148a9:	call   0x14182
   148ae:	mov    ecx,DWORD PTR [ebp+0xc]
   148b1:	cmp    ecx,DWORD PTR [ebp+0x10]
   148b4:	jne    0x14898
   148b6:	pop    edi
   148b7:	mov    eax,DWORD PTR [ebp+0x8]
   148ba:	mov    DWORD PTR [eax],ecx
   148bc:	pop    esi
   148bd:	leave  
   148be:	ret    0xc
   148c1:	int3   
   148c2:	int3   
   148c3:	int3   
   148c4:	int3   
   148c5:	int3   
   148c6:	mov    edi,edi
   148c8:	push   esi
   148c9:	push   edi
   148ca:	push   0x1
   148cc:	xor    edi,edi
   148ce:	push   edi
   148cf:	mov    esi,ecx
   148d1:	call   0x1442e
   148d6:	cmp    DWORD PTR ds:0x780c0,edi
   148dc:	jne    0x148f3
   148de:	mov    ecx,eax
   148e0:	mov    DWORD PTR ds:0x780c0,ecx
   148e6:	mov    DWORD PTR [ecx],edi
   148e8:	mov    ecx,DWORD PTR ds:0x780c0
   148ee:	xor    eax,eax
   148f0:	mov    DWORD PTR [ecx+0x8],edi
   148f3:	inc    DWORD PTR ds:0x78218
   148f9:	cmp    eax,edi
   148fb:	je     0x14904
   148fd:	push   eax
   148fe:	call   0x10990
   14903:	pop    ecx
   14904:	push   edi
   14905:	push   DWORD PTR ds:0x780c0
   1490b:	mov    ecx,esi
   1490d:	call   0x1442e
   14912:	mov    DWORD PTR [esi+0xc],edi
   14915:	mov    DWORD PTR [esi+0x4],eax
   14918:	mov    DWORD PTR [eax],eax
   1491a:	mov    esi,DWORD PTR [esi+0x4]
   1491d:	pop    edi
   1491e:	mov    DWORD PTR [esi+0x8],esi
   14921:	pop    esi
   14922:	ret    
   14923:	int3   
   14924:	int3   
   14925:	int3   
   14926:	int3   
   14927:	int3   
   14928:	mov    edi,edi
   1492a:	push   esi
   1492b:	push   edi
   1492c:	push   0x1
   1492e:	xor    edi,edi
   14930:	push   edi
   14931:	mov    esi,ecx
   14933:	call   0x1aa4a
   14938:	cmp    DWORD PTR ds:0x780c4,edi
   1493e:	jne    0x14955
   14940:	mov    ecx,eax
   14942:	mov    DWORD PTR ds:0x780c4,ecx
   14948:	mov    DWORD PTR [ecx],edi
   1494a:	mov    ecx,DWORD PTR ds:0x780c4
   14950:	xor    eax,eax
   14952:	mov    DWORD PTR [ecx+0x8],edi
   14955:	inc    DWORD PTR ds:0x7821c
   1495b:	cmp    eax,edi
   1495d:	je     0x14966
   1495f:	push   eax
   14960:	call   0x10990
   14965:	pop    ecx
   14966:	push   edi
   14967:	push   DWORD PTR ds:0x780c4
   1496d:	mov    ecx,esi
   1496f:	call   0x1aa4a
   14974:	mov    DWORD PTR [esi+0xc],edi
   14977:	mov    DWORD PTR [esi+0x4],eax
   1497a:	mov    DWORD PTR [eax],eax
   1497c:	mov    esi,DWORD PTR [esi+0x4]
   1497f:	pop    edi
   14980:	mov    DWORD PTR [esi+0x8],esi
   14983:	pop    esi
   14984:	ret    
   14985:	int3   
   14986:	int3   
   14987:	int3   
   14988:	int3   
   14989:	int3   
   1498a:	mov    edi,edi
   1498c:	push   esi
   1498d:	push   edi
   1498e:	push   0x1
   14990:	xor    edi,edi
   14992:	push   edi
   14993:	mov    esi,ecx
   14995:	call   0x14452
   1499a:	cmp    DWORD PTR ds:0x780b4,edi
   149a0:	jne    0x149b7
   149a2:	mov    ecx,eax
   149a4:	mov    DWORD PTR ds:0x780b4,ecx
   149aa:	mov    DWORD PTR [ecx],edi
   149ac:	mov    ecx,DWORD PTR ds:0x780b4
   149b2:	xor    eax,eax
   149b4:	mov    DWORD PTR [ecx+0x8],edi
   149b7:	inc    DWORD PTR ds:0x78220
   149bd:	cmp    eax,edi
   149bf:	je     0x149c8
   149c1:	push   eax
   149c2:	call   0x10990
   149c7:	pop    ecx
   149c8:	push   edi
   149c9:	push   DWORD PTR ds:0x780b4
   149cf:	mov    ecx,esi
   149d1:	call   0x14452
   149d6:	mov    DWORD PTR [esi+0xc],edi
   149d9:	mov    DWORD PTR [esi+0x4],eax
   149dc:	mov    DWORD PTR [eax],eax
   149de:	mov    esi,DWORD PTR [esi+0x4]
   149e1:	pop    edi
   149e2:	mov    DWORD PTR [esi+0x8],esi
   149e5:	pop    esi
   149e6:	ret    
   149e7:	int3   
   149e8:	int3   
   149e9:	int3   
   149ea:	int3   
   149eb:	int3   
   149ec:	mov    edi,edi
   149ee:	push   ebp
   149ef:	mov    ebp,esp
   149f1:	push   ebx
   149f2:	push   esi
   149f3:	mov    esi,DWORD PTR [ebp+0x10]
   149f6:	push   edi
   149f7:	push   0x0
   149f9:	push   esi
   149fa:	mov    edi,ecx
   149fc:	call   0x14452
   14a01:	push   DWORD PTR [ebp+0x14]
   14a04:	mov    ebx,eax
   14a06:	mov    eax,ds:0x780b4
   14a0b:	mov    DWORD PTR [ebx],eax
   14a0d:	mov    eax,ds:0x780b4
   14a12:	mov    DWORD PTR [ebx+0x8],eax
   14a15:	lea    eax,[ebx+0xc]
   14a18:	push   eax
   14a19:	call   0x1a388
   14a1e:	inc    DWORD PTR [edi+0xc]
   14a21:	cmp    esi,DWORD PTR [edi+0x4]
   14a24:	je     0x14a48
   14a26:	mov    eax,DWORD PTR [ebp+0xc]
   14a29:	cmp    eax,DWORD PTR ds:0x780b4
   14a2f:	jne    0x14a48
   14a31:	mov    eax,DWORD PTR [ebp+0x14]
   14a34:	mov    eax,DWORD PTR [eax]
   14a36:	cmp    eax,DWORD PTR [esi+0xc]
   14a39:	jb     0x14a48
   14a3b:	mov    DWORD PTR [esi+0x8],ebx
   14a3e:	mov    eax,DWORD PTR [edi+0x4]
   14a41:	cmp    esi,DWORD PTR [eax+0x8]
   14a44:	jne    0x14a62
   14a46:	jmp    0x14a57
   14a48:	mov    DWORD PTR [esi],ebx
   14a4a:	mov    eax,DWORD PTR [edi+0x4]
   14a4d:	cmp    esi,eax
   14a4f:	jne    0x14a5c
   14a51:	mov    DWORD PTR [eax+0x4],ebx
   14a54:	mov    eax,DWORD PTR [edi+0x4]
   14a57:	mov    DWORD PTR [eax+0x8],ebx
   14a5a:	jmp    0x14a62
   14a5c:	cmp    esi,DWORD PTR [eax]
   14a5e:	jne    0x14a62
   14a60:	mov    DWORD PTR [eax],ebx
   14a62:	mov    eax,DWORD PTR [edi+0x4]
   14a65:	mov    esi,ebx
   14a67:	cmp    ebx,DWORD PTR [eax+0x4]
   14a6a:	je     0x14b1e
   14a70:	mov    eax,DWORD PTR [esi+0x4]
   14a73:	xor    edx,edx
   14a75:	cmp    DWORD PTR [eax+0x10],edx
   14a78:	jne    0x14b1e
   14a7e:	mov    ecx,DWORD PTR [eax+0x4]
   14a81:	cmp    eax,DWORD PTR [ecx]
   14a83:	jne    0x14abf
   14a85:	mov    ecx,DWORD PTR [ecx+0x8]
   14a88:	cmp    DWORD PTR [ecx+0x10],edx
   14a8b:	je     0x14ac6
   14a8d:	cmp    esi,DWORD PTR [eax+0x8]
   14a90:	jne    0x14a9c
   14a92:	mov    esi,eax
   14a94:	push   esi
   14a95:	mov    ecx,edi
   14a97:	call   0x12d92
   14a9c:	mov    eax,DWORD PTR [esi+0x4]
   14a9f:	mov    DWORD PTR [eax+0x10],0x1
   14aa6:	mov    eax,DWORD PTR [esi+0x4]
   14aa9:	mov    eax,DWORD PTR [eax+0x4]
   14aac:	and    DWORD PTR [eax+0x10],0x0
   14ab0:	mov    eax,DWORD PTR [esi+0x4]
   14ab3:	push   DWORD PTR [eax+0x4]
   14ab6:	mov    ecx,edi
   14ab8:	call   0x12de0
   14abd:	jmp    0x14b12
   14abf:	mov    ecx,DWORD PTR [ecx]
   14ac1:	cmp    DWORD PTR [ecx+0x10],edx
   14ac4:	jne    0x14ae3
   14ac6:	mov    edx,eax
   14ac8:	xor    eax,eax
   14aca:	inc    eax
   14acb:	mov    DWORD PTR [edx+0x10],eax
   14ace:	mov    DWORD PTR [ecx+0x10],eax
   14ad1:	mov    eax,DWORD PTR [esi+0x4]
   14ad4:	mov    eax,DWORD PTR [eax+0x4]
   14ad7:	and    DWORD PTR [eax+0x10],0x0
   14adb:	mov    eax,DWORD PTR [esi+0x4]
   14ade:	mov    esi,DWORD PTR [eax+0x4]
   14ae1:	jmp    0x14b12
   14ae3:	cmp    esi,DWORD PTR [eax]
   14ae5:	jne    0x14af1
   14ae7:	mov    esi,eax
   14ae9:	push   esi
   14aea:	mov    ecx,edi
   14aec:	call   0x12de0
   14af1:	mov    eax,DWORD PTR [esi+0x4]
   14af4:	mov    DWORD PTR [eax+0x10],0x1
   14afb:	mov    eax,DWORD PTR [esi+0x4]
   14afe:	mov    eax,DWORD PTR [eax+0x4]
   14b01:	and    DWORD PTR [eax+0x10],0x0
   14b05:	mov    eax,DWORD PTR [esi+0x4]
   14b08:	push   DWORD PTR [eax+0x4]
   14b0b:	mov    ecx,edi
   14b0d:	call   0x12d92
   14b12:	mov    eax,DWORD PTR [edi+0x4]
   14b15:	cmp    esi,DWORD PTR [eax+0x4]
   14b18:	jne    0x14a70
   14b1e:	mov    eax,DWORD PTR [edi+0x4]
   14b21:	mov    eax,DWORD PTR [eax+0x4]
   14b24:	pop    edi
   14b25:	mov    DWORD PTR [eax+0x10],0x1
   14b2c:	mov    eax,DWORD PTR [ebp+0x8]
   14b2f:	pop    esi
   14b30:	mov    DWORD PTR [eax],ebx
   14b32:	pop    ebx
   14b33:	pop    ebp
   14b34:	ret    0x10
   14b37:	int3   
   14b38:	int3   
   14b39:	int3   
   14b3a:	int3   
   14b3b:	int3   
   14b3c:	mov    edi,edi
   14b3e:	push   ebp
   14b3f:	mov    ebp,esp
   14b41:	push   ecx
   14b42:	push   ecx
   14b43:	push   ebx
   14b44:	push   esi
   14b45:	mov    DWORD PTR [ebp-0x4],ecx
   14b48:	push   edi
   14b49:	mov    edi,DWORD PTR [ebp+0xc]
   14b4c:	lea    ecx,[ebp+0xc]
   14b4f:	call   0x12ce6
   14b54:	mov    esi,DWORD PTR [edi]
   14b56:	mov    eax,ds:0x780b8
   14b5b:	mov    ebx,edi
   14b5d:	mov    DWORD PTR [ebp-0x8],esi
   14b60:	cmp    esi,eax
   14b62:	jne    0x14b80
   14b64:	mov    esi,DWORD PTR [edi+0x8]
   14b67:	mov    eax,DWORD PTR [ebx+0x4]
   14b6a:	mov    ecx,DWORD PTR [ebp-0x4]
   14b6d:	mov    DWORD PTR [esi+0x4],eax
   14b70:	mov    eax,DWORD PTR [ecx+0x4]
   14b73:	cmp    DWORD PTR [eax+0x4],edi
   14b76:	jne    0x14bf5
   14b78:	mov    DWORD PTR [eax+0x4],esi
   14b7b:	jmp    0x14c03
   14b80:	mov    ecx,DWORD PTR [edi+0x8]
   14b83:	cmp    ecx,eax
   14b85:	je     0x14b67
   14b87:	push   ecx
   14b88:	call   0x1113c
   14b8d:	mov    ebx,eax
   14b8f:	mov    esi,DWORD PTR [ebx+0x8]
   14b92:	cmp    ebx,edi
   14b94:	je     0x14b67
   14b96:	mov    eax,DWORD PTR [ebp-0x8]
   14b99:	mov    DWORD PTR [eax+0x4],ebx
   14b9c:	mov    eax,DWORD PTR [edi]
   14b9e:	mov    DWORD PTR [ebx],eax
   14ba0:	cmp    ebx,DWORD PTR [edi+0x8]
   14ba3:	jne    0x14baa
   14ba5:	mov    DWORD PTR [esi+0x4],ebx
   14ba8:	jmp    0x14bc1
   14baa:	mov    eax,DWORD PTR [ebx+0x4]
   14bad:	mov    DWORD PTR [esi+0x4],eax
   14bb0:	mov    eax,DWORD PTR [ebx+0x4]
   14bb3:	mov    DWORD PTR [eax],esi
   14bb5:	mov    eax,DWORD PTR [edi+0x8]
   14bb8:	mov    DWORD PTR [ebx+0x8],eax
   14bbb:	mov    eax,DWORD PTR [edi+0x8]
   14bbe:	mov    DWORD PTR [eax+0x4],ebx
   14bc1:	mov    eax,DWORD PTR [ebp-0x4]
   14bc4:	mov    eax,DWORD PTR [eax+0x4]
   14bc7:	cmp    DWORD PTR [eax+0x4],edi
   14bca:	jne    0x14bd1
   14bcc:	mov    DWORD PTR [eax+0x4],ebx
   14bcf:	jmp    0x14bdf
   14bd1:	mov    eax,DWORD PTR [edi+0x4]
   14bd4:	cmp    DWORD PTR [eax],edi
   14bd6:	jne    0x14bdc
   14bd8:	mov    DWORD PTR [eax],ebx
   14bda:	jmp    0x14bdf
   14bdc:	mov    DWORD PTR [eax+0x8],ebx
   14bdf:	mov    eax,DWORD PTR [edi+0x4]
   14be2:	mov    DWORD PTR [ebx+0x4],eax
   14be5:	mov    eax,DWORD PTR [ebx+0x60]
   14be8:	mov    ecx,DWORD PTR [edi+0x60]
   14beb:	mov    DWORD PTR [ebx+0x60],ecx
   14bee:	mov    DWORD PTR [edi+0x60],eax
   14bf1:	mov    ebx,edi
   14bf3:	jmp    0x14c56
   14bf5:	mov    eax,DWORD PTR [edi+0x4]
   14bf8:	cmp    DWORD PTR [eax],edi
   14bfa:	jne    0x14c00
   14bfc:	mov    DWORD PTR [eax],esi
   14bfe:	jmp    0x14c03
   14c00:	mov    DWORD PTR [eax+0x8],esi
   14c03:	mov    eax,DWORD PTR [ecx+0x4]
   14c06:	mov    DWORD PTR [ebp-0x8],eax
   14c09:	cmp    DWORD PTR [eax],edi
   14c0b:	jne    0x14c2d
   14c0d:	mov    edx,DWORD PTR [edi+0x8]
   14c10:	cmp    edx,DWORD PTR ds:0x780b8
   14c16:	jne    0x14c1f
   14c18:	mov    edx,DWORD PTR [edi+0x4]
   14c1b:	mov    DWORD PTR [eax],edx
   14c1d:	jmp    0x14c2d
   14c1f:	push   esi
   14c20:	call   0x1113c
   14c25:	mov    ecx,DWORD PTR [ebp-0x8]
   14c28:	mov    DWORD PTR [ecx],eax
   14c2a:	mov    ecx,DWORD PTR [ebp-0x4]
   14c2d:	mov    eax,DWORD PTR [ecx+0x4]
   14c30:	mov    DWORD PTR [ebp-0x8],eax
   14c33:	cmp    DWORD PTR [eax+0x8],edi
   14c36:	jne    0x14c56
   14c38:	mov    ecx,DWORD PTR [edi]
   14c3a:	cmp    ecx,DWORD PTR ds:0x780b8
   14c40:	jne    0x14c4a
   14c42:	mov    ecx,DWORD PTR [edi+0x4]
   14c45:	mov    DWORD PTR [eax+0x8],ecx
   14c48:	jmp    0x14c56
   14c4a:	push   esi
   14c4b:	call   0x1111a
   14c50:	mov    ecx,DWORD PTR [ebp-0x8]
   14c53:	mov    DWORD PTR [ecx+0x8],eax
   14c56:	xor    edi,edi
   14c58:	inc    edi
   14c59:	cmp    DWORD PTR [ebx+0x60],edi
   14c5c:	jne    0x14d73
   14c62:	jmp    0x14d21
   14c67:	cmp    DWORD PTR [esi+0x60],edi
   14c6a:	jne    0x14d70
   14c70:	mov    eax,DWORD PTR [esi+0x4]
   14c73:	cmp    esi,DWORD PTR [eax]
   14c75:	jne    0x14cec
   14c77:	mov    eax,DWORD PTR [eax+0x8]
   14c7a:	cmp    DWORD PTR [eax+0x60],0x0
   14c7e:	jne    0x14c98
   14c80:	mov    DWORD PTR [eax+0x60],edi
   14c83:	mov    eax,DWORD PTR [esi+0x4]
   14c86:	and    DWORD PTR [eax+0x60],0x0
   14c8a:	push   DWORD PTR [esi+0x4]
   14c8d:	call   0x12e70
   14c92:	mov    eax,DWORD PTR [esi+0x4]
   14c95:	mov    eax,DWORD PTR [eax+0x8]
   14c98:	mov    ecx,DWORD PTR [eax]
   14c9a:	cmp    DWORD PTR [ecx+0x60],edi
   14c9d:	jne    0x14ca7
   14c9f:	mov    ecx,DWORD PTR [eax+0x8]
   14ca2:	cmp    DWORD PTR [ecx+0x60],edi
   14ca5:	je     0x14d1a
   14ca7:	mov    ecx,DWORD PTR [eax+0x8]
   14caa:	cmp    DWORD PTR [ecx+0x60],edi
   14cad:	jne    0x14cc7
   14caf:	mov    ecx,DWORD PTR [eax]
   14cb1:	mov    DWORD PTR [ecx+0x60],edi
   14cb4:	mov    ecx,DWORD PTR [ebp-0x4]
   14cb7:	and    DWORD PTR [eax+0x60],0x0
   14cbb:	push   eax
   14cbc:	call   0x12ebe
   14cc1:	mov    eax,DWORD PTR [esi+0x4]
   14cc4:	mov    eax,DWORD PTR [eax+0x8]
   14cc7:	mov    ecx,DWORD PTR [esi+0x4]
   14cca:	mov    ecx,DWORD PTR [ecx+0x60]
   14ccd:	mov    DWORD PTR [eax+0x60],ecx
   14cd0:	mov    ecx,DWORD PTR [esi+0x4]
   14cd3:	mov    DWORD PTR [ecx+0x60],edi
   14cd6:	mov    eax,DWORD PTR [eax+0x8]
   14cd9:	mov    ecx,DWORD PTR [ebp-0x4]
   14cdc:	mov    DWORD PTR [eax+0x60],edi
   14cdf:	push   DWORD PTR [esi+0x4]
   14ce2:	call   0x12e70
   14ce7:	jmp    0x14d70
   14cec:	mov    eax,DWORD PTR [eax]
   14cee:	cmp    DWORD PTR [eax+0x60],0x0
   14cf2:	jne    0x14d0b
   14cf4:	mov    DWORD PTR [eax+0x60],edi
   14cf7:	mov    eax,DWORD PTR [esi+0x4]
   14cfa:	and    DWORD PTR [eax+0x60],0x0
   14cfe:	push   DWORD PTR [esi+0x4]
   14d01:	call   0x12ebe
   14d06:	mov    eax,DWORD PTR [esi+0x4]
   14d09:	mov    eax,DWORD PTR [eax]
   14d0b:	mov    ecx,DWORD PTR [eax+0x8]
   14d0e:	cmp    DWORD PTR [ecx+0x60],edi
   14d11:	jne    0x14d32
   14d13:	mov    ecx,DWORD PTR [eax]
   14d15:	cmp    DWORD PTR [ecx+0x60],edi
   14d18:	jne    0x14d32
   14d1a:	and    DWORD PTR [eax+0x60],0x0
   14d1e:	mov    esi,DWORD PTR [esi+0x4]
   14d21:	mov    ecx,DWORD PTR [ebp-0x4]
   14d24:	mov    eax,DWORD PTR [ecx+0x4]
   14d27:	cmp    esi,DWORD PTR [eax+0x4]
   14d2a:	jne    0x14c67
   14d30:	jmp    0x14d70
   14d32:	mov    ecx,DWORD PTR [eax]
   14d34:	cmp    DWORD PTR [ecx+0x60],edi
   14d37:	jne    0x14d51
   14d39:	mov    ecx,DWORD PTR [eax+0x8]
   14d3c:	mov    DWORD PTR [ecx+0x60],edi
   14d3f:	mov    ecx,DWORD PTR [ebp-0x4]
   14d42:	and    DWORD PTR [eax+0x60],0x0
   14d46:	push   eax
   14d47:	call   0x12e70
   14d4c:	mov    eax,DWORD PTR [esi+0x4]
   14d4f:	mov    eax,DWORD PTR [eax]
   14d51:	mov    ecx,DWORD PTR [esi+0x4]
   14d54:	mov    ecx,DWORD PTR [ecx+0x60]
   14d57:	mov    DWORD PTR [eax+0x60],ecx
   14d5a:	mov    ecx,DWORD PTR [esi+0x4]
   14d5d:	mov    DWORD PTR [ecx+0x60],edi
   14d60:	mov    eax,DWORD PTR [eax]
   14d62:	mov    ecx,DWORD PTR [ebp-0x4]
   14d65:	mov    DWORD PTR [eax+0x60],edi
   14d68:	push   DWORD PTR [esi+0x4]
   14d6b:	call   0x12ebe
   14d70:	mov    DWORD PTR [esi+0x60],edi
   14d73:	lea    eax,[ebx+0x10]
   14d76:	push   eax
   14d77:	call   0x137f4
   14d7c:	push   ebx
   14d7d:	call   0x10990
   14d82:	mov    eax,DWORD PTR [ebp-0x4]
   14d85:	dec    DWORD PTR [eax+0xc]
   14d88:	mov    eax,DWORD PTR [ebp+0x8]
   14d8b:	pop    ecx
   14d8c:	mov    ecx,DWORD PTR [ebp+0xc]
   14d8f:	pop    edi
   14d90:	pop    esi
   14d91:	mov    DWORD PTR [eax],ecx
   14d93:	pop    ebx
   14d94:	leave  
   14d95:	ret    0x8
   14d98:	int3   
   14d99:	int3   
   14d9a:	int3   
   14d9b:	int3   
   14d9c:	int3   
   14d9d:	int3   
   14d9e:	mov    edi,edi
   14da0:	push   ebp
   14da1:	mov    ebp,esp
   14da3:	push   ebx
   14da4:	push   esi
   14da5:	push   edi
   14da6:	mov    edi,DWORD PTR [ebp+0x8]
   14da9:	mov    ebx,ecx
   14dab:	mov    esi,edi
   14dad:	cmp    edi,DWORD PTR ds:0x780b8
   14db3:	je     0x14ddb
   14db5:	push   DWORD PTR [esi+0x8]
   14db8:	mov    ecx,ebx
   14dba:	call   0x14d9e
   14dbf:	mov    esi,DWORD PTR [esi]
   14dc1:	lea    eax,[edi+0x10]
   14dc4:	push   eax
   14dc5:	call   0x137f4
   14dca:	push   edi
   14dcb:	call   0x10990
   14dd0:	pop    ecx
   14dd1:	mov    edi,esi
   14dd3:	cmp    esi,DWORD PTR ds:0x780b8
   14dd9:	jne    0x14db5
   14ddb:	pop    edi
   14ddc:	pop    esi
   14ddd:	pop    ebx
   14dde:	pop    ebp
   14ddf:	ret    0x4
   14de2:	int3   
   14de3:	int3   
   14de4:	int3   
   14de5:	int3   
   14de6:	int3   
   14de7:	int3   
   14de8:	mov    edi,edi
   14dea:	push   esi
   14deb:	push   edi
   14dec:	push   0x1
   14dee:	xor    edi,edi
   14df0:	push   edi
   14df1:	mov    esi,ecx
   14df3:	call   0x14476
   14df8:	cmp    DWORD PTR ds:0x780b8,edi
   14dfe:	jne    0x14e15
   14e00:	mov    ecx,eax
   14e02:	mov    DWORD PTR ds:0x780b8,ecx
   14e08:	mov    DWORD PTR [ecx],edi
   14e0a:	mov    ecx,DWORD PTR ds:0x780b8
   14e10:	xor    eax,eax
   14e12:	mov    DWORD PTR [ecx+0x8],edi
   14e15:	inc    DWORD PTR ds:0x78224
   14e1b:	cmp    eax,edi
   14e1d:	je     0x14e26
   14e1f:	push   eax
   14e20:	call   0x10990
   14e25:	pop    ecx
   14e26:	push   edi
   14e27:	push   DWORD PTR ds:0x780b8
   14e2d:	mov    ecx,esi
   14e2f:	call   0x14476
   14e34:	mov    DWORD PTR [esi+0xc],edi
   14e37:	mov    DWORD PTR [esi+0x4],eax
   14e3a:	mov    DWORD PTR [eax],eax
   14e3c:	mov    esi,DWORD PTR [esi+0x4]
   14e3f:	pop    edi
   14e40:	mov    DWORD PTR [esi+0x8],esi
   14e43:	pop    esi
   14e44:	ret    
   14e45:	int3   
   14e46:	int3   
   14e47:	int3   
   14e48:	int3   
   14e49:	int3   
   14e4a:	mov    edi,edi
   14e4c:	push   ebp
   14e4d:	mov    ebp,esp
   14e4f:	push   ebx
   14e50:	push   esi
   14e51:	mov    esi,DWORD PTR [ebp+0x10]
   14e54:	push   edi
   14e55:	push   0x0
   14e57:	push   esi
   14e58:	mov    edi,ecx
   14e5a:	call   0x1aa4a
   14e5f:	push   DWORD PTR [ebp+0x14]
   14e62:	mov    ebx,eax
   14e64:	mov    eax,ds:0x780b0
   14e69:	mov    DWORD PTR [ebx],eax
   14e6b:	mov    eax,ds:0x780b0
   14e70:	mov    DWORD PTR [ebx+0x8],eax
   14e73:	lea    eax,[ebx+0xc]
   14e76:	push   eax
   14e77:	call   0x114e6
   14e7c:	inc    DWORD PTR [edi+0xc]
   14e7f:	cmp    esi,DWORD PTR [edi+0x4]
   14e82:	je     0x14ea6
   14e84:	mov    eax,DWORD PTR [ebp+0xc]
   14e87:	cmp    eax,DWORD PTR ds:0x780b0
   14e8d:	jne    0x14ea6
   14e8f:	mov    eax,DWORD PTR [ebp+0x14]
   14e92:	mov    eax,DWORD PTR [eax]
   14e94:	cmp    eax,DWORD PTR [esi+0xc]
   14e97:	jb     0x14ea6
   14e99:	mov    DWORD PTR [esi+0x8],ebx
   14e9c:	mov    eax,DWORD PTR [edi+0x4]
   14e9f:	cmp    esi,DWORD PTR [eax+0x8]
   14ea2:	jne    0x14ec0
   14ea4:	jmp    0x14eb5
   14ea6:	mov    DWORD PTR [esi],ebx
   14ea8:	mov    eax,DWORD PTR [edi+0x4]
   14eab:	cmp    esi,eax
   14ead:	jne    0x14eba
   14eaf:	mov    DWORD PTR [eax+0x4],ebx
   14eb2:	mov    eax,DWORD PTR [edi+0x4]
   14eb5:	mov    DWORD PTR [eax+0x8],ebx
   14eb8:	jmp    0x14ec0
   14eba:	cmp    esi,DWORD PTR [eax]
   14ebc:	jne    0x14ec0
   14ebe:	mov    DWORD PTR [eax],ebx
   14ec0:	mov    eax,DWORD PTR [edi+0x4]
   14ec3:	mov    esi,ebx
   14ec5:	cmp    ebx,DWORD PTR [eax+0x4]
   14ec8:	je     0x14f7c
   14ece:	mov    eax,DWORD PTR [esi+0x4]
   14ed1:	xor    edx,edx
   14ed3:	cmp    DWORD PTR [eax+0x14],edx
   14ed6:	jne    0x14f7c
   14edc:	mov    ecx,DWORD PTR [eax+0x4]
   14edf:	cmp    eax,DWORD PTR [ecx]
   14ee1:	jne    0x14f1d
   14ee3:	mov    ecx,DWORD PTR [ecx+0x8]
   14ee6:	cmp    DWORD PTR [ecx+0x14],edx
   14ee9:	je     0x14f24
   14eeb:	cmp    esi,DWORD PTR [eax+0x8]
   14eee:	jne    0x14efa
   14ef0:	mov    esi,eax
   14ef2:	push   esi
   14ef3:	mov    ecx,edi
   14ef5:	call   0x12b90
   14efa:	mov    eax,DWORD PTR [esi+0x4]
   14efd:	mov    DWORD PTR [eax+0x14],0x1
   14f04:	mov    eax,DWORD PTR [esi+0x4]
   14f07:	mov    eax,DWORD PTR [eax+0x4]
   14f0a:	and    DWORD PTR [eax+0x14],0x0
   14f0e:	mov    eax,DWORD PTR [esi+0x4]
   14f11:	push   DWORD PTR [eax+0x4]
   14f14:	mov    ecx,edi
   14f16:	call   0x12bde
   14f1b:	jmp    0x14f70
   14f1d:	mov    ecx,DWORD PTR [ecx]
   14f1f:	cmp    DWORD PTR [ecx+0x14],edx
   14f22:	jne    0x14f41
   14f24:	mov    edx,eax
   14f26:	xor    eax,eax
   14f28:	inc    eax
   14f29:	mov    DWORD PTR [edx+0x14],eax
   14f2c:	mov    DWORD PTR [ecx+0x14],eax
   14f2f:	mov    eax,DWORD PTR [esi+0x4]
   14f32:	mov    eax,DWORD PTR [eax+0x4]
   14f35:	and    DWORD PTR [eax+0x14],0x0
   14f39:	mov    eax,DWORD PTR [esi+0x4]
   14f3c:	mov    esi,DWORD PTR [eax+0x4]
   14f3f:	jmp    0x14f70
   14f41:	cmp    esi,DWORD PTR [eax]
   14f43:	jne    0x14f4f
   14f45:	mov    esi,eax
   14f47:	push   esi
   14f48:	mov    ecx,edi
   14f4a:	call   0x12bde
   14f4f:	mov    eax,DWORD PTR [esi+0x4]
   14f52:	mov    DWORD PTR [eax+0x14],0x1
   14f59:	mov    eax,DWORD PTR [esi+0x4]
   14f5c:	mov    eax,DWORD PTR [eax+0x4]
   14f5f:	and    DWORD PTR [eax+0x14],0x0
   14f63:	mov    eax,DWORD PTR [esi+0x4]
   14f66:	push   DWORD PTR [eax+0x4]
   14f69:	mov    ecx,edi
   14f6b:	call   0x12b90
   14f70:	mov    eax,DWORD PTR [edi+0x4]
   14f73:	cmp    esi,DWORD PTR [eax+0x4]
   14f76:	jne    0x14ece
   14f7c:	mov    eax,DWORD PTR [edi+0x4]
   14f7f:	mov    eax,DWORD PTR [eax+0x4]
   14f82:	pop    edi
   14f83:	mov    DWORD PTR [eax+0x14],0x1
   14f8a:	mov    eax,DWORD PTR [ebp+0x8]
   14f8d:	pop    esi
   14f8e:	mov    DWORD PTR [eax],ebx
   14f90:	pop    ebx
   14f91:	pop    ebp
   14f92:	ret    0x10
   14f95:	int3   
   14f96:	int3   
   14f97:	int3   
   14f98:	int3   
   14f99:	int3   
   14f9a:	mov    edi,edi
   14f9c:	push   ebp
   14f9d:	mov    ebp,esp
   14f9f:	push   ecx
   14fa0:	push   ecx
   14fa1:	push   ebx
   14fa2:	push   esi
   14fa3:	mov    DWORD PTR [ebp-0x4],ecx
   14fa6:	push   edi
   14fa7:	mov    edi,DWORD PTR [ebp+0xc]
   14faa:	lea    ecx,[ebp+0xc]
   14fad:	call   0x135f0
   14fb2:	mov    esi,DWORD PTR [edi]
   14fb4:	mov    eax,ds:0x780bc
   14fb9:	mov    ebx,edi
   14fbb:	mov    DWORD PTR [ebp-0x8],esi
   14fbe:	cmp    esi,eax
   14fc0:	jne    0x14fde
   14fc2:	mov    esi,DWORD PTR [edi+0x8]
   14fc5:	mov    eax,DWORD PTR [ebx+0x4]
   14fc8:	mov    ecx,DWORD PTR [ebp-0x4]
   14fcb:	mov    DWORD PTR [esi+0x4],eax
   14fce:	mov    eax,DWORD PTR [ecx+0x4]
   14fd1:	cmp    DWORD PTR [eax+0x4],edi
   14fd4:	jne    0x15053
   14fd6:	mov    DWORD PTR [eax+0x4],esi
   14fd9:	jmp    0x15061
   14fde:	mov    ecx,DWORD PTR [edi+0x8]
   14fe1:	cmp    ecx,eax
   14fe3:	je     0x14fc5
   14fe5:	push   ecx
   14fe6:	call   0x12b36
   14feb:	mov    ebx,eax
   14fed:	mov    esi,DWORD PTR [ebx+0x8]
   14ff0:	cmp    ebx,edi
   14ff2:	je     0x14fc5
   14ff4:	mov    eax,DWORD PTR [ebp-0x8]
   14ff7:	mov    DWORD PTR [eax+0x4],ebx
   14ffa:	mov    eax,DWORD PTR [edi]
   14ffc:	mov    DWORD PTR [ebx],eax
   14ffe:	cmp    ebx,DWORD PTR [edi+0x8]
   15001:	jne    0x15008
   15003:	mov    DWORD PTR [esi+0x4],ebx
   15006:	jmp    0x1501f
   15008:	mov    eax,DWORD PTR [ebx+0x4]
   1500b:	mov    DWORD PTR [esi+0x4],eax
   1500e:	mov    eax,DWORD PTR [ebx+0x4]
   15011:	mov    DWORD PTR [eax],esi
   15013:	mov    eax,DWORD PTR [edi+0x8]
   15016:	mov    DWORD PTR [ebx+0x8],eax
   15019:	mov    eax,DWORD PTR [edi+0x8]
   1501c:	mov    DWORD PTR [eax+0x4],ebx
   1501f:	mov    eax,DWORD PTR [ebp-0x4]
   15022:	mov    eax,DWORD PTR [eax+0x4]
   15025:	cmp    DWORD PTR [eax+0x4],edi
   15028:	jne    0x1502f
   1502a:	mov    DWORD PTR [eax+0x4],ebx
   1502d:	jmp    0x1503d
   1502f:	mov    eax,DWORD PTR [edi+0x4]
   15032:	cmp    DWORD PTR [eax],edi
   15034:	jne    0x1503a
   15036:	mov    DWORD PTR [eax],ebx
   15038:	jmp    0x1503d
   1503a:	mov    DWORD PTR [eax+0x8],ebx
   1503d:	mov    eax,DWORD PTR [edi+0x4]
   15040:	mov    DWORD PTR [ebx+0x4],eax
   15043:	mov    eax,DWORD PTR [ebx+0x58]
   15046:	mov    ecx,DWORD PTR [edi+0x58]
   15049:	mov    DWORD PTR [ebx+0x58],ecx
   1504c:	mov    DWORD PTR [edi+0x58],eax
   1504f:	mov    ebx,edi
   15051:	jmp    0x150b4
   15053:	mov    eax,DWORD PTR [edi+0x4]
   15056:	cmp    DWORD PTR [eax],edi
   15058:	jne    0x1505e
   1505a:	mov    DWORD PTR [eax],esi
   1505c:	jmp    0x15061
   1505e:	mov    DWORD PTR [eax+0x8],esi
   15061:	mov    eax,DWORD PTR [ecx+0x4]
   15064:	mov    DWORD PTR [ebp-0x8],eax
   15067:	cmp    DWORD PTR [eax],edi
   15069:	jne    0x1508b
   1506b:	mov    edx,DWORD PTR [edi+0x8]
   1506e:	cmp    edx,DWORD PTR ds:0x780bc
   15074:	jne    0x1507d
   15076:	mov    edx,DWORD PTR [edi+0x4]
   15079:	mov    DWORD PTR [eax],edx
   1507b:	jmp    0x1508b
   1507d:	push   esi
   1507e:	call   0x12b36
   15083:	mov    ecx,DWORD PTR [ebp-0x8]
   15086:	mov    DWORD PTR [ecx],eax
   15088:	mov    ecx,DWORD PTR [ebp-0x4]
   1508b:	mov    eax,DWORD PTR [ecx+0x4]
   1508e:	mov    DWORD PTR [ebp-0x8],eax
   15091:	cmp    DWORD PTR [eax+0x8],edi
   15094:	jne    0x150b4
   15096:	mov    ecx,DWORD PTR [edi]
   15098:	cmp    ecx,DWORD PTR ds:0x780bc
   1509e:	jne    0x150a8
   150a0:	mov    ecx,DWORD PTR [edi+0x4]
   150a3:	mov    DWORD PTR [eax+0x8],ecx
   150a6:	jmp    0x150b4
   150a8:	push   esi
   150a9:	call   0x11222
   150ae:	mov    ecx,DWORD PTR [ebp-0x8]
   150b1:	mov    DWORD PTR [ecx+0x8],eax
   150b4:	xor    edi,edi
   150b6:	inc    edi
   150b7:	cmp    DWORD PTR [ebx+0x58],edi
   150ba:	jne    0x151d1
   150c0:	jmp    0x1517f
   150c5:	cmp    DWORD PTR [esi+0x58],edi
   150c8:	jne    0x151ce
   150ce:	mov    eax,DWORD PTR [esi+0x4]
   150d1:	cmp    esi,DWORD PTR [eax]
   150d3:	jne    0x1514a
   150d5:	mov    eax,DWORD PTR [eax+0x8]
   150d8:	cmp    DWORD PTR [eax+0x58],0x0
   150dc:	jne    0x150f6
   150de:	mov    DWORD PTR [eax+0x58],edi
   150e1:	mov    eax,DWORD PTR [esi+0x4]
   150e4:	and    DWORD PTR [eax+0x58],0x0
   150e8:	push   DWORD PTR [esi+0x4]
   150eb:	call   0x111d4
   150f0:	mov    eax,DWORD PTR [esi+0x4]
   150f3:	mov    eax,DWORD PTR [eax+0x8]
   150f6:	mov    ecx,DWORD PTR [eax]
   150f8:	cmp    DWORD PTR [ecx+0x58],edi
   150fb:	jne    0x15105
   150fd:	mov    ecx,DWORD PTR [eax+0x8]
   15100:	cmp    DWORD PTR [ecx+0x58],edi
   15103:	je     0x15178
   15105:	mov    ecx,DWORD PTR [eax+0x8]
   15108:	cmp    DWORD PTR [ecx+0x58],edi
   1510b:	jne    0x15125
   1510d:	mov    ecx,DWORD PTR [eax]
   1510f:	mov    DWORD PTR [ecx+0x58],edi
   15112:	mov    ecx,DWORD PTR [ebp-0x4]
   15115:	and    DWORD PTR [eax+0x58],0x0
   15119:	push   eax
   1511a:	call   0x11244
   1511f:	mov    eax,DWORD PTR [esi+0x4]
   15122:	mov    eax,DWORD PTR [eax+0x8]
   15125:	mov    ecx,DWORD PTR [esi+0x4]
   15128:	mov    ecx,DWORD PTR [ecx+0x58]
   1512b:	mov    DWORD PTR [eax+0x58],ecx
   1512e:	mov    ecx,DWORD PTR [esi+0x4]
   15131:	mov    DWORD PTR [ecx+0x58],edi
   15134:	mov    eax,DWORD PTR [eax+0x8]
   15137:	mov    ecx,DWORD PTR [ebp-0x4]
   1513a:	mov    DWORD PTR [eax+0x58],edi
   1513d:	push   DWORD PTR [esi+0x4]
   15140:	call   0x111d4
   15145:	jmp    0x151ce
   1514a:	mov    eax,DWORD PTR [eax]
   1514c:	cmp    DWORD PTR [eax+0x58],0x0
   15150:	jne    0x15169
   15152:	mov    DWORD PTR [eax+0x58],edi
   15155:	mov    eax,DWORD PTR [esi+0x4]
   15158:	and    DWORD PTR [eax+0x58],0x0
   1515c:	push   DWORD PTR [esi+0x4]
   1515f:	call   0x11244
   15164:	mov    eax,DWORD PTR [esi+0x4]
   15167:	mov    eax,DWORD PTR [eax]
   15169:	mov    ecx,DWORD PTR [eax+0x8]
   1516c:	cmp    DWORD PTR [ecx+0x58],edi
   1516f:	jne    0x15190
   15171:	mov    ecx,DWORD PTR [eax]
   15173:	cmp    DWORD PTR [ecx+0x58],edi
   15176:	jne    0x15190
   15178:	and    DWORD PTR [eax+0x58],0x0
   1517c:	mov    esi,DWORD PTR [esi+0x4]
   1517f:	mov    ecx,DWORD PTR [ebp-0x4]
   15182:	mov    eax,DWORD PTR [ecx+0x4]
   15185:	cmp    esi,DWORD PTR [eax+0x4]
   15188:	jne    0x150c5
   1518e:	jmp    0x151ce
   15190:	mov    ecx,DWORD PTR [eax]
   15192:	cmp    DWORD PTR [ecx+0x58],edi
   15195:	jne    0x151af
   15197:	mov    ecx,DWORD PTR [eax+0x8]
   1519a:	mov    DWORD PTR [ecx+0x58],edi
   1519d:	mov    ecx,DWORD PTR [ebp-0x4]
   151a0:	and    DWORD PTR [eax+0x58],0x0
   151a4:	push   eax
   151a5:	call   0x111d4
   151aa:	mov    eax,DWORD PTR [esi+0x4]
   151ad:	mov    eax,DWORD PTR [eax]
   151af:	mov    ecx,DWORD PTR [esi+0x4]
   151b2:	mov    ecx,DWORD PTR [ecx+0x58]
   151b5:	mov    DWORD PTR [eax+0x58],ecx
   151b8:	mov    ecx,DWORD PTR [esi+0x4]
   151bb:	mov    DWORD PTR [ecx+0x58],edi
   151be:	mov    eax,DWORD PTR [eax]
   151c0:	mov    ecx,DWORD PTR [ebp-0x4]
   151c3:	mov    DWORD PTR [eax+0x58],edi
   151c6:	push   DWORD PTR [esi+0x4]
   151c9:	call   0x11244
   151ce:	mov    DWORD PTR [esi+0x58],edi
   151d1:	lea    eax,[ebx+0x10]
   151d4:	push   eax
   151d5:	call   0x137f4
   151da:	push   ebx
   151db:	call   0x10990
   151e0:	mov    eax,DWORD PTR [ebp-0x4]
   151e3:	dec    DWORD PTR [eax+0xc]
   151e6:	mov    eax,DWORD PTR [ebp+0x8]
   151e9:	pop    ecx
   151ea:	mov    ecx,DWORD PTR [ebp+0xc]
   151ed:	pop    edi
   151ee:	pop    esi
   151ef:	mov    DWORD PTR [eax],ecx
   151f1:	pop    ebx
   151f2:	leave  
   151f3:	ret    0x8
   151f6:	int3   
   151f7:	int3   
   151f8:	int3   
   151f9:	int3   
   151fa:	int3   
   151fb:	int3   
   151fc:	mov    edi,edi
   151fe:	push   ebp
   151ff:	mov    ebp,esp
   15201:	push   ebx
   15202:	push   esi
   15203:	push   edi
   15204:	mov    edi,DWORD PTR [ebp+0x8]
   15207:	mov    ebx,ecx
   15209:	mov    esi,edi
   1520b:	cmp    edi,DWORD PTR ds:0x780bc
   15211:	je     0x15239
   15213:	push   DWORD PTR [esi+0x8]
   15216:	mov    ecx,ebx
   15218:	call   0x151fc
   1521d:	mov    esi,DWORD PTR [esi]
   1521f:	lea    eax,[edi+0x10]
   15222:	push   eax
   15223:	call   0x137f4
   15228:	push   edi
   15229:	call   0x10990
   1522e:	pop    ecx
   1522f:	mov    edi,esi
   15231:	cmp    esi,DWORD PTR ds:0x780bc
   15237:	jne    0x15213
   15239:	pop    edi
   1523a:	pop    esi
   1523b:	pop    ebx
   1523c:	pop    ebp
   1523d:	ret    0x4
   15240:	int3   
   15241:	int3   
   15242:	int3   
   15243:	int3   
   15244:	int3   
   15245:	int3   
   15246:	mov    edi,edi
   15248:	push   ebp
   15249:	mov    ebp,esp
   1524b:	push   ecx
   1524c:	push   ecx
   1524d:	push   ebx
   1524e:	push   esi
   1524f:	mov    DWORD PTR [ebp-0x4],ecx
   15252:	push   edi
   15253:	mov    edi,DWORD PTR [ebp+0xc]
   15256:	lea    ecx,[ebp+0xc]
   15259:	call   0x11452
   1525e:	mov    esi,DWORD PTR [edi]
   15260:	mov    eax,ds:0x780c4
   15265:	mov    ebx,edi
   15267:	mov    DWORD PTR [ebp-0x8],esi
   1526a:	cmp    esi,eax
   1526c:	jne    0x1528a
   1526e:	mov    esi,DWORD PTR [edi+0x8]
   15271:	mov    eax,DWORD PTR [ebx+0x4]
   15274:	mov    ecx,DWORD PTR [ebp-0x4]
   15277:	mov    DWORD PTR [esi+0x4],eax
   1527a:	mov    eax,DWORD PTR [ecx+0x4]
   1527d:	cmp    DWORD PTR [eax+0x4],edi
   15280:	jne    0x152ff
   15282:	mov    DWORD PTR [eax+0x4],esi
   15285:	jmp    0x1530d
   1528a:	mov    ecx,DWORD PTR [edi+0x8]
   1528d:	cmp    ecx,eax
   1528f:	je     0x15271
   15291:	push   ecx
   15292:	call   0x1137a
   15297:	mov    ebx,eax
   15299:	mov    esi,DWORD PTR [ebx+0x8]
   1529c:	cmp    ebx,edi
   1529e:	je     0x15271
   152a0:	mov    eax,DWORD PTR [ebp-0x8]
   152a3:	mov    DWORD PTR [eax+0x4],ebx
   152a6:	mov    eax,DWORD PTR [edi]
   152a8:	mov    DWORD PTR [ebx],eax
   152aa:	cmp    ebx,DWORD PTR [edi+0x8]
   152ad:	jne    0x152b4
   152af:	mov    DWORD PTR [esi+0x4],ebx
   152b2:	jmp    0x152cb
   152b4:	mov    eax,DWORD PTR [ebx+0x4]
   152b7:	mov    DWORD PTR [esi+0x4],eax
   152ba:	mov    eax,DWORD PTR [ebx+0x4]
   152bd:	mov    DWORD PTR [eax],esi
   152bf:	mov    eax,DWORD PTR [edi+0x8]
   152c2:	mov    DWORD PTR [ebx+0x8],eax
   152c5:	mov    eax,DWORD PTR [edi+0x8]
   152c8:	mov    DWORD PTR [eax+0x4],ebx
   152cb:	mov    eax,DWORD PTR [ebp-0x4]
   152ce:	mov    eax,DWORD PTR [eax+0x4]
   152d1:	cmp    DWORD PTR [eax+0x4],edi
   152d4:	jne    0x152db
   152d6:	mov    DWORD PTR [eax+0x4],ebx
   152d9:	jmp    0x152e9
   152db:	mov    eax,DWORD PTR [edi+0x4]
   152de:	cmp    DWORD PTR [eax],edi
   152e0:	jne    0x152e6
   152e2:	mov    DWORD PTR [eax],ebx
   152e4:	jmp    0x152e9
   152e6:	mov    DWORD PTR [eax+0x8],ebx
   152e9:	mov    eax,DWORD PTR [edi+0x4]
   152ec:	mov    DWORD PTR [ebx+0x4],eax
   152ef:	mov    eax,DWORD PTR [ebx+0x14]
   152f2:	mov    ecx,DWORD PTR [edi+0x14]
   152f5:	mov    DWORD PTR [ebx+0x14],ecx
   152f8:	mov    DWORD PTR [edi+0x14],eax
   152fb:	mov    ebx,edi
   152fd:	jmp    0x15360
   152ff:	mov    eax,DWORD PTR [edi+0x4]
   15302:	cmp    DWORD PTR [eax],edi
   15304:	jne    0x1530a
   15306:	mov    DWORD PTR [eax],esi
   15308:	jmp    0x1530d
   1530a:	mov    DWORD PTR [eax+0x8],esi
   1530d:	mov    eax,DWORD PTR [ecx+0x4]
   15310:	mov    DWORD PTR [ebp-0x8],eax
   15313:	cmp    DWORD PTR [eax],edi
   15315:	jne    0x15337
   15317:	mov    edx,DWORD PTR [edi+0x8]
   1531a:	cmp    edx,DWORD PTR ds:0x780c4
   15320:	jne    0x15329
   15322:	mov    edx,DWORD PTR [edi+0x4]
   15325:	mov    DWORD PTR [eax],edx
   15327:	jmp    0x15337
   15329:	push   esi
   1532a:	call   0x1137a
   1532f:	mov    ecx,DWORD PTR [ebp-0x8]
   15332:	mov    DWORD PTR [ecx],eax
   15334:	mov    ecx,DWORD PTR [ebp-0x4]
   15337:	mov    eax,DWORD PTR [ecx+0x4]
   1533a:	mov    DWORD PTR [ebp-0x8],eax
   1533d:	cmp    DWORD PTR [eax+0x8],edi
   15340:	jne    0x15360
   15342:	mov    ecx,DWORD PTR [edi]
   15344:	cmp    ecx,DWORD PTR ds:0x780c4
   1534a:	jne    0x15354
   1534c:	mov    ecx,DWORD PTR [edi+0x4]
   1534f:	mov    DWORD PTR [eax+0x8],ecx
   15352:	jmp    0x15360
   15354:	push   esi
   15355:	call   0x11358
   1535a:	mov    ecx,DWORD PTR [ebp-0x8]
   1535d:	mov    DWORD PTR [ecx+0x8],eax
   15360:	xor    edi,edi
   15362:	inc    edi
   15363:	cmp    DWORD PTR [ebx+0x14],edi
   15366:	jne    0x1547d
   1536c:	jmp    0x1542b
   15371:	cmp    DWORD PTR [esi+0x14],edi
   15374:	jne    0x1547a
   1537a:	mov    eax,DWORD PTR [esi+0x4]
   1537d:	cmp    esi,DWORD PTR [eax]
   1537f:	jne    0x153f6
   15381:	mov    eax,DWORD PTR [eax+0x8]
   15384:	cmp    DWORD PTR [eax+0x14],0x0
   15388:	jne    0x153a2
   1538a:	mov    DWORD PTR [eax+0x14],edi
   1538d:	mov    eax,DWORD PTR [esi+0x4]
   15390:	and    DWORD PTR [eax+0x14],0x0
   15394:	push   DWORD PTR [esi+0x4]
   15397:	call   0x13064
   1539c:	mov    eax,DWORD PTR [esi+0x4]
   1539f:	mov    eax,DWORD PTR [eax+0x8]
   153a2:	mov    ecx,DWORD PTR [eax]
   153a4:	cmp    DWORD PTR [ecx+0x14],edi
   153a7:	jne    0x153b1
   153a9:	mov    ecx,DWORD PTR [eax+0x8]
   153ac:	cmp    DWORD PTR [ecx+0x14],edi
   153af:	je     0x15424
   153b1:	mov    ecx,DWORD PTR [eax+0x8]
   153b4:	cmp    DWORD PTR [ecx+0x14],edi
   153b7:	jne    0x153d1
   153b9:	mov    ecx,DWORD PTR [eax]
   153bb:	mov    DWORD PTR [ecx+0x14],edi
   153be:	mov    ecx,DWORD PTR [ebp-0x4]
   153c1:	and    DWORD PTR [eax+0x14],0x0
   153c5:	push   eax
   153c6:	call   0x130b2
   153cb:	mov    eax,DWORD PTR [esi+0x4]
   153ce:	mov    eax,DWORD PTR [eax+0x8]
   153d1:	mov    ecx,DWORD PTR [esi+0x4]
   153d4:	mov    ecx,DWORD PTR [ecx+0x14]
   153d7:	mov    DWORD PTR [eax+0x14],ecx
   153da:	mov    ecx,DWORD PTR [esi+0x4]
   153dd:	mov    DWORD PTR [ecx+0x14],edi
   153e0:	mov    eax,DWORD PTR [eax+0x8]
   153e3:	mov    ecx,DWORD PTR [ebp-0x4]
   153e6:	mov    DWORD PTR [eax+0x14],edi
   153e9:	push   DWORD PTR [esi+0x4]
   153ec:	call   0x13064
   153f1:	jmp    0x1547a
   153f6:	mov    eax,DWORD PTR [eax]
   153f8:	cmp    DWORD PTR [eax+0x14],0x0
   153fc:	jne    0x15415
   153fe:	mov    DWORD PTR [eax+0x14],edi
   15401:	mov    eax,DWORD PTR [esi+0x4]
   15404:	and    DWORD PTR [eax+0x14],0x0
   15408:	push   DWORD PTR [esi+0x4]
   1540b:	call   0x130b2
   15410:	mov    eax,DWORD PTR [esi+0x4]
   15413:	mov    eax,DWORD PTR [eax]
   15415:	mov    ecx,DWORD PTR [eax+0x8]
   15418:	cmp    DWORD PTR [ecx+0x14],edi
   1541b:	jne    0x1543c
   1541d:	mov    ecx,DWORD PTR [eax]
   1541f:	cmp    DWORD PTR [ecx+0x14],edi
   15422:	jne    0x1543c
   15424:	and    DWORD PTR [eax+0x14],0x0
   15428:	mov    esi,DWORD PTR [esi+0x4]
   1542b:	mov    ecx,DWORD PTR [ebp-0x4]
   1542e:	mov    eax,DWORD PTR [ecx+0x4]
   15431:	cmp    esi,DWORD PTR [eax+0x4]
   15434:	jne    0x15371
   1543a:	jmp    0x1547a
   1543c:	mov    ecx,DWORD PTR [eax]
   1543e:	cmp    DWORD PTR [ecx+0x14],edi
   15441:	jne    0x1545b
   15443:	mov    ecx,DWORD PTR [eax+0x8]
   15446:	mov    DWORD PTR [ecx+0x14],edi
   15449:	mov    ecx,DWORD PTR [ebp-0x4]
   1544c:	and    DWORD PTR [eax+0x14],0x0
   15450:	push   eax
   15451:	call   0x13064
   15456:	mov    eax,DWORD PTR [esi+0x4]
   15459:	mov    eax,DWORD PTR [eax]
   1545b:	mov    ecx,DWORD PTR [esi+0x4]
   1545e:	mov    ecx,DWORD PTR [ecx+0x14]
   15461:	mov    DWORD PTR [eax+0x14],ecx
   15464:	mov    ecx,DWORD PTR [esi+0x4]
   15467:	mov    DWORD PTR [ecx+0x14],edi
   1546a:	mov    eax,DWORD PTR [eax]
   1546c:	mov    ecx,DWORD PTR [ebp-0x4]
   1546f:	mov    DWORD PTR [eax+0x14],edi
   15472:	push   DWORD PTR [esi+0x4]
   15475:	call   0x130b2
   1547a:	mov    DWORD PTR [esi+0x14],edi
   1547d:	lea    eax,[ebx+0xc]
   15480:	push   eax
   15481:	call   0x1382a
   15486:	push   ebx
   15487:	call   0x10990
   1548c:	mov    eax,DWORD PTR [ebp-0x4]
   1548f:	dec    DWORD PTR [eax+0xc]
   15492:	mov    eax,DWORD PTR [ebp+0x8]
   15495:	pop    ecx
   15496:	mov    ecx,DWORD PTR [ebp+0xc]
   15499:	pop    edi
   1549a:	pop    esi
   1549b:	mov    DWORD PTR [eax],ecx
   1549d:	pop    ebx
   1549e:	leave  
   1549f:	ret    0x8
   154a2:	int3   
   154a3:	int3   
   154a4:	int3   
   154a5:	int3   
   154a6:	int3   
   154a7:	int3   
   154a8:	mov    edi,edi
   154aa:	push   ebp
   154ab:	mov    ebp,esp
   154ad:	push   ebx
   154ae:	push   esi
   154af:	push   edi
   154b0:	mov    edi,DWORD PTR [ebp+0x8]
   154b3:	mov    ebx,ecx
   154b5:	mov    esi,edi
   154b7:	cmp    edi,DWORD PTR ds:0x780c4
   154bd:	je     0x154e5
   154bf:	push   DWORD PTR [esi+0x8]
   154c2:	mov    ecx,ebx
   154c4:	call   0x154a8
   154c9:	mov    esi,DWORD PTR [esi]
   154cb:	lea    eax,[edi+0xc]
   154ce:	push   eax
   154cf:	call   0x1382a
   154d4:	push   edi
   154d5:	call   0x10990
   154da:	pop    ecx
   154db:	mov    edi,esi
   154dd:	cmp    esi,DWORD PTR ds:0x780c4
   154e3:	jne    0x154bf
   154e5:	pop    edi
   154e6:	pop    esi
   154e7:	pop    ebx
   154e8:	pop    ebp
   154e9:	ret    0x4
   154ec:	int3   
   154ed:	int3   
   154ee:	int3   
   154ef:	int3   
   154f0:	int3   
   154f1:	int3   
   154f2:	mov    edi,edi
   154f4:	push   ebp
   154f5:	mov    ebp,esp
   154f7:	push   ebx
   154f8:	push   esi
   154f9:	mov    esi,DWORD PTR [ebp+0x10]
   154fc:	push   edi
   154fd:	push   0x0
   154ff:	push   esi
   15500:	mov    edi,ecx
   15502:	call   0x1aa4a
   15507:	push   DWORD PTR [ebp+0x14]
   1550a:	mov    ebx,eax
   1550c:	mov    eax,ds:0x780c4
   15511:	mov    DWORD PTR [ebx],eax
   15513:	mov    eax,ds:0x780c4
   15518:	mov    DWORD PTR [ebx+0x8],eax
   1551b:	lea    eax,[ebx+0xc]
   1551e:	push   eax
   1551f:	call   0x1380c
   15524:	inc    DWORD PTR [edi+0xc]
   15527:	cmp    esi,DWORD PTR [edi+0x4]
   1552a:	je     0x1554e
   1552c:	mov    eax,DWORD PTR [ebp+0xc]
   1552f:	cmp    eax,DWORD PTR ds:0x780c4
   15535:	jne    0x1554e
   15537:	mov    eax,DWORD PTR [ebp+0x14]
   1553a:	mov    eax,DWORD PTR [eax]
   1553c:	cmp    eax,DWORD PTR [esi+0xc]
   1553f:	jl     0x1554e
   15541:	mov    DWORD PTR [esi+0x8],ebx
   15544:	mov    eax,DWORD PTR [edi+0x4]
   15547:	cmp    esi,DWORD PTR [eax+0x8]
   1554a:	jne    0x15568
   1554c:	jmp    0x1555d
   1554e:	mov    DWORD PTR [esi],ebx
   15550:	mov    eax,DWORD PTR [edi+0x4]
   15553:	cmp    esi,eax
   15555:	jne    0x15562
   15557:	mov    DWORD PTR [eax+0x4],ebx
   1555a:	mov    eax,DWORD PTR [edi+0x4]
   1555d:	mov    DWORD PTR [eax+0x8],ebx
   15560:	jmp    0x15568
   15562:	cmp    esi,DWORD PTR [eax]
   15564:	jne    0x15568
   15566:	mov    DWORD PTR [eax],ebx
   15568:	mov    eax,DWORD PTR [edi+0x4]
   1556b:	mov    esi,ebx
   1556d:	cmp    ebx,DWORD PTR [eax+0x4]
   15570:	je     0x15624
   15576:	mov    eax,DWORD PTR [esi+0x4]
   15579:	xor    edx,edx
   1557b:	cmp    DWORD PTR [eax+0x14],edx
   1557e:	jne    0x15624
   15584:	mov    ecx,DWORD PTR [eax+0x4]
   15587:	cmp    eax,DWORD PTR [ecx]
   15589:	jne    0x155c5
   1558b:	mov    ecx,DWORD PTR [ecx+0x8]
   1558e:	cmp    DWORD PTR [ecx+0x14],edx
   15591:	je     0x155cc
   15593:	cmp    esi,DWORD PTR [eax+0x8]
   15596:	jne    0x155a2
   15598:	mov    esi,eax
   1559a:	push   esi
   1559b:	mov    ecx,edi
   1559d:	call   0x13064
   155a2:	mov    eax,DWORD PTR [esi+0x4]
   155a5:	mov    DWORD PTR [eax+0x14],0x1
   155ac:	mov    eax,DWORD PTR [esi+0x4]
   155af:	mov    eax,DWORD PTR [eax+0x4]
   155b2:	and    DWORD PTR [eax+0x14],0x0
   155b6:	mov    eax,DWORD PTR [esi+0x4]
   155b9:	push   DWORD PTR [eax+0x4]
   155bc:	mov    ecx,edi
   155be:	call   0x130b2
   155c3:	jmp    0x15618
   155c5:	mov    ecx,DWORD PTR [ecx]
   155c7:	cmp    DWORD PTR [ecx+0x14],edx
   155ca:	jne    0x155e9
   155cc:	mov    edx,eax
   155ce:	xor    eax,eax
   155d0:	inc    eax
   155d1:	mov    DWORD PTR [edx+0x14],eax
   155d4:	mov    DWORD PTR [ecx+0x14],eax
   155d7:	mov    eax,DWORD PTR [esi+0x4]
   155da:	mov    eax,DWORD PTR [eax+0x4]
   155dd:	and    DWORD PTR [eax+0x14],0x0
   155e1:	mov    eax,DWORD PTR [esi+0x4]
   155e4:	mov    esi,DWORD PTR [eax+0x4]
   155e7:	jmp    0x15618
   155e9:	cmp    esi,DWORD PTR [eax]
   155eb:	jne    0x155f7
   155ed:	mov    esi,eax
   155ef:	push   esi
   155f0:	mov    ecx,edi
   155f2:	call   0x130b2
   155f7:	mov    eax,DWORD PTR [esi+0x4]
   155fa:	mov    DWORD PTR [eax+0x14],0x1
   15601:	mov    eax,DWORD PTR [esi+0x4]
   15604:	mov    eax,DWORD PTR [eax+0x4]
   15607:	and    DWORD PTR [eax+0x14],0x0
   1560b:	mov    eax,DWORD PTR [esi+0x4]
   1560e:	push   DWORD PTR [eax+0x4]
   15611:	mov    ecx,edi
   15613:	call   0x13064
   15618:	mov    eax,DWORD PTR [edi+0x4]
   1561b:	cmp    esi,DWORD PTR [eax+0x4]
   1561e:	jne    0x15576
   15624:	mov    eax,DWORD PTR [edi+0x4]
   15627:	mov    eax,DWORD PTR [eax+0x4]
   1562a:	pop    edi
   1562b:	mov    DWORD PTR [eax+0x14],0x1
   15632:	mov    eax,DWORD PTR [ebp+0x8]
   15635:	pop    esi
   15636:	mov    DWORD PTR [eax],ebx
   15638:	pop    ebx
   15639:	pop    ebp
   1563a:	ret    0x10
   1563d:	int3   
   1563e:	int3   
   1563f:	int3   
   15640:	int3   
   15641:	int3   
   15642:	mov    edi,edi
   15644:	push   esi
   15645:	push   edi
   15646:	push   0x1
   15648:	xor    edi,edi
   1564a:	push   edi
   1564b:	mov    esi,ecx
   1564d:	call   0x14476
   15652:	cmp    DWORD PTR ds:0x780c8,edi
   15658:	jne    0x1566f
   1565a:	mov    ecx,eax
   1565c:	mov    DWORD PTR ds:0x780c8,ecx
   15662:	mov    DWORD PTR [ecx],edi
   15664:	mov    ecx,DWORD PTR ds:0x780c8
   1566a:	xor    eax,eax
   1566c:	mov    DWORD PTR [ecx+0x8],edi
   1566f:	inc    DWORD PTR ds:0x78228
   15675:	cmp    eax,edi
   15677:	je     0x15680
   15679:	push   eax
   1567a:	call   0x10990
   1567f:	pop    ecx
   15680:	push   edi
   15681:	push   DWORD PTR ds:0x780c8
   15687:	mov    ecx,esi
   15689:	call   0x14476
   1568e:	mov    DWORD PTR [esi+0xc],edi
   15691:	mov    DWORD PTR [esi+0x4],eax
   15694:	mov    DWORD PTR [eax],eax
   15696:	mov    esi,DWORD PTR [esi+0x4]
   15699:	pop    edi
   1569a:	mov    DWORD PTR [esi+0x8],esi
   1569d:	pop    esi
   1569e:	ret    
   1569f:	int3   
   156a0:	int3   
   156a1:	int3   
   156a2:	int3   
   156a3:	int3   
   156a4:	mov    edi,edi
   156a6:	push   ebp
   156a7:	mov    ebp,esp
   156a9:	push   ecx
   156aa:	push   DWORD PTR [ebp-0x4]
   156ad:	push   DWORD PTR [ebp+0x10]
   156b0:	push   DWORD PTR [ebp+0xc]
   156b3:	push   DWORD PTR [ebp+0x8]
   156b6:	call   0x145ae
   156bb:	add    esp,0x10
   156be:	leave  
   156bf:	ret    
   156c0:	int3   
   156c1:	int3   
   156c2:	int3   
   156c3:	int3   
   156c4:	int3   
   156c5:	int3   
   156c6:	mov    edi,edi
   156c8:	push   ebp
   156c9:	mov    ebp,esp
   156cb:	push   ebx
   156cc:	mov    ebx,DWORD PTR [ebp+0x8]
   156cf:	mov    eax,DWORD PTR [ebx+0x4]
   156d2:	push   esi
   156d3:	push   edi
   156d4:	mov    esi,ecx
   156d6:	mov    edi,DWORD PTR [esi+0x4]
   156d9:	add    eax,0x4
   156dc:	push   edi
   156dd:	push   DWORD PTR [eax]
   156df:	call   0x1453e
   156e4:	mov    DWORD PTR [edi+0x4],eax
   156e7:	mov    eax,DWORD PTR [ebx+0xc]
   156ea:	mov    edi,DWORD PTR [esi+0x4]
   156ed:	mov    DWORD PTR [esi+0xc],eax
   156f0:	mov    eax,DWORD PTR [edi+0x4]
   156f3:	cmp    eax,DWORD PTR ds:0x780b4
   156f9:	je     0x15713
   156fb:	push   eax
   156fc:	call   0x110f8
   15701:	mov    DWORD PTR [edi],eax
   15703:	mov    esi,DWORD PTR [esi+0x4]
   15706:	push   DWORD PTR [esi+0x4]
   15709:	call   0x110d6
   1570e:	mov    DWORD PTR [esi+0x8],eax
   15711:	jmp    0x1571b
   15713:	mov    DWORD PTR [edi],edi
   15715:	mov    esi,DWORD PTR [esi+0x4]
   15718:	mov    DWORD PTR [esi+0x8],esi
   1571b:	pop    edi
   1571c:	pop    esi
   1571d:	pop    ebx
   1571e:	pop    ebp
   1571f:	ret    0x4
   15722:	int3   
   15723:	int3   
   15724:	int3   
   15725:	int3   
   15726:	int3   
   15727:	int3   
   15728:	mov    edi,edi
   1572a:	push   ebp
   1572b:	mov    ebp,esp
   1572d:	push   ecx
   1572e:	push   ebx
   1572f:	push   esi
   15730:	push   edi
   15731:	xor    edi,edi
   15733:	push   edi
   15734:	push   edi
   15735:	push   edi
   15736:	mov    esi,ecx
   15738:	mov    eax,DWORD PTR [esi+0x10]
   1573b:	push   edi
   1573c:	push   eax
   1573d:	xor    ebx,ebx
   1573f:	call   DWORD PTR ds:0x1f020
   15745:	test   eax,eax
   15747:	jge    0x1574d
   15749:	xor    eax,eax
   1574b:	jmp    0x15773
   1574d:	lea    eax,[ebp+0x8]
   15750:	push   eax
   15751:	lea    eax,[ebp-0x4]
   15754:	push   eax
   15755:	mov    ecx,esi
   15757:	call   0x139c8
   1575c:	mov    eax,DWORD PTR [ebp-0x4]
   1575f:	cmp    eax,DWORD PTR [esi+0x4]
   15762:	je     0x15767
   15764:	mov    ebx,DWORD PTR [eax+0x10]
   15767:	push   edi
   15768:	push   DWORD PTR [esi+0x10]
   1576b:	call   DWORD PTR ds:0x1f01c
   15771:	mov    eax,ebx
   15773:	pop    edi
   15774:	pop    esi
   15775:	pop    ebx
   15776:	leave  
   15777:	ret    0x4
   1577a:	int3   
   1577b:	int3   
   1577c:	int3   
   1577d:	int3   
   1577e:	int3   
   1577f:	int3   
   15780:	push   0x10
   15782:	push   0x77128
   15787:	call   0x1dac8
   1578c:	xor    ebx,ebx
   1578e:	push   ebx
   1578f:	push   ebx
   15790:	push   ebx
   15791:	push   ebx
   15792:	push   0x77558
   15797:	call   DWORD PTR ds:0x1f020
   1579d:	cmp    eax,ebx
   1579f:	jl     0x1585c
   157a5:	mov    DWORD PTR [ebp-0x4],ebx
   157a8:	push   0xffffffff
   157aa:	push   0x1ded8
   157af:	lea    ecx,[ebp-0x20]
   157b2:	call   0x129ea
   157b7:	mov    esi,DWORD PTR [ebp+0x8]
   157ba:	push   esi
   157bb:	lea    eax,[ebp+0x8]
   157be:	push   eax
   157bf:	mov    ecx,DWORD PTR ds:0x77528
   157c5:	call   0x145d8
   157ca:	mov    eax,ds:0x77528
   157cf:	mov    eax,DWORD PTR [eax+0x4]
   157d2:	mov    ecx,DWORD PTR [ebp+0x8]
   157d5:	cmp    ecx,eax
   157d7:	je     0x157e5
   157d9:	add    ecx,0x14
   157dc:	push   ecx
   157dd:	lea    ecx,[ebp-0x20]
   157e0:	call   0x128b4
   157e5:	mov    edx,DWORD PTR [esi+0x4]
   157e8:	mov    eax,DWORD PTR [ebp-0x1c]
   157eb:	lea    ecx,[eax+edx*1+0x2]
   157ef:	mov    eax,DWORD PTR [ebp+0xc]
   157f2:	cmp    ecx,DWORD PTR [eax]
   157f4:	jbe    0x15801
   157f6:	mov    DWORD PTR [eax],ecx
   157f8:	mov    DWORD PTR [eax+0x8],0x2
   157ff:	jmp    0x15824
   15801:	mov    DWORD PTR [eax+0x8],ebx
   15804:	mov    esi,DWORD PTR [esi]
   15806:	lea    edi,[eax+0xc]
   15809:	mov    cl,BYTE PTR [esi]
   1580b:	mov    BYTE PTR [edi],cl
   1580d:	inc    esi
   1580e:	inc    edi
   1580f:	cmp    cl,bl
   15811:	jne    0x15809
   15813:	mov    esi,DWORD PTR [ebp-0x20]
   15816:	lea    eax,[edx+eax*1+0xd]
   1581a:	mov    cl,BYTE PTR [esi]
   1581c:	mov    BYTE PTR [eax],cl
   1581e:	inc    esi
   1581f:	inc    eax
   15820:	cmp    cl,bl
   15822:	jne    0x1581a
   15824:	push   DWORD PTR [ebp-0x20]
   15827:	call   0x10990
   1582c:	pop    ecx
   1582d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15834:	jmp    0x15850
   15836:	xor    eax,eax
   15838:	inc    eax
   15839:	ret    
   1583a:	mov    esp,DWORD PTR [ebp-0x18]
   1583d:	mov    eax,DWORD PTR [ebp+0xc]
   15840:	mov    DWORD PTR [eax+0x8],0x4
   15847:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1584e:	xor    ebx,ebx
   15850:	push   ebx
   15851:	push   0x77558
   15856:	call   DWORD PTR ds:0x1f01c
   1585c:	call   0x1db0d
   15861:	ret    0x8
   15864:	int3   
   15865:	int3   
   15866:	int3   
   15867:	int3   
   15868:	int3   
   15869:	int3   
   1586a:	push   0xc
   1586c:	push   0x77148
   15871:	call   0x1dac8
   15876:	xor    edi,edi
   15878:	push   edi
   15879:	push   edi
   1587a:	push   edi
   1587b:	push   edi
   1587c:	push   0x77558
   15881:	call   DWORD PTR ds:0x1f020
   15887:	cmp    eax,edi
   15889:	jl     0x15938
   1588f:	mov    DWORD PTR [ebp-0x4],edi
   15892:	lea    eax,[ebp+0x8]
   15895:	push   eax
   15896:	lea    eax,[ebp-0x1c]
   15899:	push   eax
   1589a:	mov    esi,DWORD PTR ds:0x775b4
   158a0:	mov    ecx,esi
   158a2:	call   0x13ac2
   158a7:	mov    esi,DWORD PTR [esi+0x4]
   158aa:	mov    ecx,DWORD PTR [ebp-0x1c]
   158ad:	cmp    ecx,esi
   158af:	jne    0x158bd
   158b1:	mov    eax,DWORD PTR [ebp+0xc]
   158b4:	mov    DWORD PTR [eax+0x8],0x1
   158bb:	jmp    0x15909
   158bd:	mov    eax,DWORD PTR [ecx+0x10]
   158c0:	cmp    eax,edi
   158c2:	jne    0x158c8
   158c4:	xor    edx,edx
   158c6:	jmp    0x158cb
   158c8:	mov    edx,DWORD PTR [eax+0x8]
   158cb:	mov    eax,DWORD PTR [ebp+0xc]
   158ce:	cmp    edx,DWORD PTR [eax]
   158d0:	jbe    0x158dd
   158d2:	mov    DWORD PTR [eax],edx
   158d4:	mov    DWORD PTR [eax+0x8],0x2
   158db:	jmp    0x15909
   158dd:	mov    DWORD PTR [eax+0x8],edi
   158e0:	mov    edx,DWORD PTR [ecx+0x10]
   158e3:	cmp    edx,edi
   158e5:	jne    0x158eb
   158e7:	xor    edx,edx
   158e9:	jmp    0x158ee
   158eb:	mov    edx,DWORD PTR [edx+0x8]
   158ee:	mov    ecx,DWORD PTR [ecx+0x10]
   158f1:	cmp    ecx,edi
   158f3:	jne    0x158f9
   158f5:	xor    ecx,ecx
   158f7:	jmp    0x158fb
   158f9:	mov    ecx,DWORD PTR [ecx]
   158fb:	push   edx
   158fc:	push   ecx
   158fd:	add    eax,0xc
   15900:	push   eax
   15901:	call   0x1da96
   15906:	add    esp,0xc
   15909:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15910:	jmp    0x1592c
   15912:	xor    eax,eax
   15914:	inc    eax
   15915:	ret    
   15916:	mov    esp,DWORD PTR [ebp-0x18]
   15919:	mov    eax,DWORD PTR [ebp+0xc]
   1591c:	mov    DWORD PTR [eax+0x8],0x4
   15923:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1592a:	xor    edi,edi
   1592c:	push   edi
   1592d:	push   0x77558
   15932:	call   DWORD PTR ds:0x1f01c
   15938:	call   0x1db0d
   1593d:	ret    0x8
   15940:	int3   
   15941:	int3   
   15942:	int3   
   15943:	int3   
   15944:	int3   
   15945:	int3   
   15946:	mov    edi,edi
   15948:	push   ebp
   15949:	mov    ebp,esp
   1594b:	push   ebx
   1594c:	push   esi
   1594d:	push   DWORD PTR [ebp+0x8]
   15950:	mov    esi,ecx
   15952:	lea    eax,[ebp+0x8]
   15955:	push   eax
   15956:	lea    ecx,[esi+0x4]
   15959:	xor    bl,bl
   1595b:	call   0x13b24
   15960:	mov    eax,DWORD PTR [ebp+0x8]
   15963:	cmp    eax,DWORD PTR [esi+0x8]
   15966:	je     0x15976
   15968:	mov    ecx,DWORD PTR [ebp+0xc]
   1596b:	add    eax,0x18
   1596e:	push   eax
   1596f:	call   0x12942
   15974:	inc    bl
   15976:	pop    esi
   15977:	mov    al,bl
   15979:	pop    ebx
   1597a:	pop    ebp
   1597b:	ret    0x8
   1597e:	int3   
   1597f:	int3   
   15980:	int3   
   15981:	int3   
   15982:	int3   
   15983:	int3   
   15984:	mov    edi,edi
   15986:	push   ebp
   15987:	mov    ebp,esp
   15989:	push   ecx
   1598a:	push   esi
   1598b:	mov    esi,ecx
   1598d:	mov    eax,DWORD PTR [esi+0x4]
   15990:	mov    ecx,DWORD PTR [eax]
   15992:	push   eax
   15993:	push   ecx
   15994:	lea    eax,[ebp-0x4]
   15997:	push   eax
   15998:	mov    ecx,esi
   1599a:	call   0x146bc
   1599f:	push   DWORD PTR [esi+0x4]
   159a2:	call   0x10990
   159a7:	xor    eax,eax
   159a9:	mov    DWORD PTR [esi+0x4],eax
   159ac:	mov    DWORD PTR [esi+0xc],eax
   159af:	dec    DWORD PTR ds:0x78220
   159b5:	pop    ecx
   159b6:	pop    esi
   159b7:	jne    0x159cf
   159b9:	mov    ecx,DWORD PTR ds:0x780b4
   159bf:	mov    ds:0x780b4,eax
   159c4:	cmp    ecx,eax
   159c6:	je     0x159cf
   159c8:	push   ecx
   159c9:	call   0x10990
   159ce:	pop    ecx
   159cf:	leave  
   159d0:	ret    
   159d1:	int3   
   159d2:	int3   
   159d3:	int3   
   159d4:	int3   
   159d5:	int3   
   159d6:	mov    edi,edi
   159d8:	push   ebp
   159d9:	mov    ebp,esp
   159db:	push   ecx
   159dc:	push   ecx
   159dd:	push   DWORD PTR [ebp+0x8]
   159e0:	lea    eax,[ebp-0x8]
   159e3:	push   eax
   159e4:	call   0x13df6
   159e9:	and    DWORD PTR [ebp+0x8],0x0
   159ed:	lea    eax,[ebp+0x8]
   159f0:	push   eax
   159f1:	push   DWORD PTR [ebp-0x4]
   159f4:	push   DWORD PTR [ebp-0x8]
   159f7:	call   0x156a4
   159fc:	mov    eax,DWORD PTR [ebp+0x8]
   159ff:	add    esp,0xc
   15a02:	leave  
   15a03:	ret    0x4
   15a06:	int3   
   15a07:	int3   
   15a08:	int3   
   15a09:	int3   
   15a0a:	int3   
   15a0b:	int3   
   15a0c:	mov    edi,edi
   15a0e:	push   ebp
   15a0f:	mov    ebp,esp
   15a11:	push   ecx
   15a12:	push   ecx
   15a13:	push   esi
   15a14:	push   DWORD PTR [ebp+0x8]
   15a17:	lea    eax,[ebp-0x8]
   15a1a:	push   eax
   15a1b:	mov    esi,ecx
   15a1d:	call   0x13e28
   15a22:	and    DWORD PTR [ebp+0x8],0x0
   15a26:	lea    eax,[ebp+0x8]
   15a29:	push   eax
   15a2a:	push   DWORD PTR [ebp-0x4]
   15a2d:	push   DWORD PTR [ebp-0x8]
   15a30:	call   0x1378e
   15a35:	add    esp,0xc
   15a38:	push   DWORD PTR [ebp-0x4]
   15a3b:	lea    eax,[ebp-0x4]
   15a3e:	push   DWORD PTR [ebp-0x8]
   15a41:	mov    ecx,esi
   15a43:	push   eax
   15a44:	call   0x14848
   15a49:	mov    eax,DWORD PTR [ebp+0x8]
   15a4c:	pop    esi
   15a4d:	leave  
   15a4e:	ret    0x4
   15a51:	int3   
   15a52:	int3   
   15a53:	int3   
   15a54:	int3   
   15a55:	int3   
   15a56:	mov    edi,edi
   15a58:	push   ebp
   15a59:	mov    ebp,esp
   15a5b:	push   ecx
   15a5c:	push   ebx
   15a5d:	push   esi
   15a5e:	push   edi
   15a5f:	mov    edi,ecx
   15a61:	mov    eax,DWORD PTR [edi+0x4]
   15a64:	mov    esi,DWORD PTR [eax+0x4]
   15a67:	mov    ebx,eax
   15a69:	mov    eax,ds:0x780b4
   15a6e:	mov    dl,0x1
   15a70:	cmp    esi,eax
   15a72:	je     0x15a90
   15a74:	mov    ecx,DWORD PTR [ebp+0xc]
   15a77:	mov    ecx,DWORD PTR [ecx]
   15a79:	cmp    ecx,DWORD PTR [esi+0xc]
   15a7c:	mov    ebx,esi
   15a7e:	setb   dl
   15a81:	test   dl,dl
   15a83:	je     0x15a89
   15a85:	mov    esi,DWORD PTR [esi]
   15a87:	jmp    0x15a8c
   15a89:	mov    esi,DWORD PTR [esi+0x8]
   15a8c:	cmp    esi,eax
   15a8e:	jne    0x15a79
   15a90:	cmp    BYTE PTR [edi+0x8],0x0
   15a94:	je     0x15ab1
   15a96:	push   DWORD PTR [ebp+0xc]
   15a99:	push   ebx
   15a9a:	push   esi
   15a9b:	lea    eax,[ebp+0xc]
   15a9e:	push   eax
   15a9f:	mov    ecx,edi
   15aa1:	call   0x149ec
   15aa6:	mov    ecx,DWORD PTR [eax]
   15aa8:	mov    eax,DWORD PTR [ebp+0x8]
   15aab:	mov    BYTE PTR [eax+0x4],0x1
   15aaf:	jmp    0x15ae0
   15ab1:	mov    ecx,ebx
   15ab3:	mov    DWORD PTR [ebp-0x4],ecx
   15ab6:	test   dl,dl
   15ab8:	je     0x15acc
   15aba:	mov    eax,DWORD PTR [edi+0x4]
   15abd:	cmp    ebx,DWORD PTR [eax]
   15abf:	je     0x15a96
   15ac1:	lea    ecx,[ebp-0x4]
   15ac4:	call   0x12d1c
   15ac9:	mov    ecx,DWORD PTR [ebp-0x4]
   15acc:	mov    edx,DWORD PTR [ecx+0xc]
   15acf:	mov    eax,DWORD PTR [ebp+0xc]
   15ad2:	cmp    edx,DWORD PTR [eax]
   15ad4:	jae    0x15ad9
   15ad6:	push   eax
   15ad7:	jmp    0x15a99
   15ad9:	mov    eax,DWORD PTR [ebp+0x8]
   15adc:	mov    BYTE PTR [eax+0x4],0x0
   15ae0:	pop    edi
   15ae1:	pop    esi
   15ae2:	mov    DWORD PTR [eax],ecx
   15ae4:	pop    ebx
   15ae5:	leave  
   15ae6:	ret    0x8
   15ae9:	int3   
   15aea:	int3   
   15aeb:	int3   
   15aec:	int3   
   15aed:	int3   
   15aee:	mov    edi,edi
   15af0:	push   ebp
   15af1:	mov    ebp,esp
   15af3:	push   ecx
   15af4:	push   esi
   15af5:	mov    esi,ecx
   15af7:	cmp    DWORD PTR [esi+0xc],0x0
   15afb:	mov    ecx,DWORD PTR [ebp+0xc]
   15afe:	je     0x15b38
   15b00:	mov    eax,DWORD PTR [esi+0x4]
   15b03:	cmp    ecx,DWORD PTR [eax]
   15b05:	jne    0x15b38
   15b07:	cmp    DWORD PTR [ebp+0x10],eax
   15b0a:	jne    0x15b38
   15b0c:	push   DWORD PTR [eax+0x4]
   15b0f:	mov    ecx,esi
   15b11:	call   0x14d9e
   15b16:	mov    ecx,DWORD PTR ds:0x780b8
   15b1c:	mov    eax,DWORD PTR [esi+0x4]
   15b1f:	mov    DWORD PTR [eax+0x4],ecx
   15b22:	mov    eax,DWORD PTR [esi+0x4]
   15b25:	and    DWORD PTR [esi+0xc],0x0
   15b29:	mov    DWORD PTR [eax],eax
   15b2b:	mov    eax,DWORD PTR [esi+0x4]
   15b2e:	mov    DWORD PTR [eax+0x8],eax
   15b31:	mov    eax,DWORD PTR [esi+0x4]
   15b34:	mov    ecx,DWORD PTR [eax]
   15b36:	jmp    0x15b5d
   15b38:	cmp    ecx,DWORD PTR [ebp+0x10]
   15b3b:	je     0x15b5d
   15b3d:	push   edi
   15b3e:	mov    edi,ecx
   15b40:	lea    ecx,[ebp+0xc]
   15b43:	call   0x12ce6
   15b48:	push   edi
   15b49:	lea    eax,[ebp-0x4]
   15b4c:	push   eax
   15b4d:	mov    ecx,esi
   15b4f:	call   0x14b3c
   15b54:	mov    ecx,DWORD PTR [ebp+0xc]
   15b57:	cmp    ecx,DWORD PTR [ebp+0x10]
   15b5a:	jne    0x15b3e
   15b5c:	pop    edi
   15b5d:	mov    eax,DWORD PTR [ebp+0x8]
   15b60:	mov    DWORD PTR [eax],ecx
   15b62:	pop    esi
   15b63:	leave  
   15b64:	ret    0xc
   15b67:	int3   
   15b68:	int3   
   15b69:	int3   
   15b6a:	int3   
   15b6b:	int3   
   15b6c:	mov    edi,edi
   15b6e:	push   ebp
   15b6f:	mov    ebp,esp
   15b71:	push   ecx
   15b72:	push   ebx
   15b73:	push   esi
   15b74:	push   edi
   15b75:	mov    edi,ecx
   15b77:	mov    eax,DWORD PTR [edi+0x4]
   15b7a:	mov    esi,DWORD PTR [eax+0x4]
   15b7d:	mov    ebx,eax
   15b7f:	mov    eax,ds:0x780b0
   15b84:	mov    dl,0x1
   15b86:	cmp    esi,eax
   15b88:	je     0x15ba6
   15b8a:	mov    ecx,DWORD PTR [ebp+0xc]
   15b8d:	mov    ecx,DWORD PTR [ecx]
   15b8f:	cmp    ecx,DWORD PTR [esi+0xc]
   15b92:	mov    ebx,esi
   15b94:	setb   dl
   15b97:	test   dl,dl
   15b99:	je     0x15b9f
   15b9b:	mov    esi,DWORD PTR [esi]
   15b9d:	jmp    0x15ba2
   15b9f:	mov    esi,DWORD PTR [esi+0x8]
   15ba2:	cmp    esi,eax
   15ba4:	jne    0x15b8f
   15ba6:	cmp    BYTE PTR [edi+0x8],0x0
   15baa:	je     0x15bc7
   15bac:	push   DWORD PTR [ebp+0xc]
   15baf:	push   ebx
   15bb0:	push   esi
   15bb1:	lea    eax,[ebp+0xc]
   15bb4:	push   eax
   15bb5:	mov    ecx,edi
   15bb7:	call   0x14e4a
   15bbc:	mov    ecx,DWORD PTR [eax]
   15bbe:	mov    eax,DWORD PTR [ebp+0x8]
   15bc1:	mov    BYTE PTR [eax+0x4],0x1
   15bc5:	jmp    0x15bf6
   15bc7:	mov    ecx,ebx
   15bc9:	mov    DWORD PTR [ebp-0x4],ecx
   15bcc:	test   dl,dl
   15bce:	je     0x15be2
   15bd0:	mov    eax,DWORD PTR [edi+0x4]
   15bd3:	cmp    ebx,DWORD PTR [eax]
   15bd5:	je     0x15bac
   15bd7:	lea    ecx,[ebp-0x4]
   15bda:	call   0x1115e
   15bdf:	mov    ecx,DWORD PTR [ebp-0x4]
   15be2:	mov    edx,DWORD PTR [ecx+0xc]
   15be5:	mov    eax,DWORD PTR [ebp+0xc]
   15be8:	cmp    edx,DWORD PTR [eax]
   15bea:	jae    0x15bef
   15bec:	push   eax
   15bed:	jmp    0x15baf
   15bef:	mov    eax,DWORD PTR [ebp+0x8]
   15bf2:	mov    BYTE PTR [eax+0x4],0x0
   15bf6:	pop    edi
   15bf7:	pop    esi
   15bf8:	mov    DWORD PTR [eax],ecx
   15bfa:	pop    ebx
   15bfb:	leave  
   15bfc:	ret    0x8
   15bff:	int3   
   15c00:	int3   
   15c01:	int3   
   15c02:	int3   
   15c03:	int3   
   15c04:	mov    edi,edi
   15c06:	push   ebp
   15c07:	mov    ebp,esp
   15c09:	push   ecx
   15c0a:	push   esi
   15c0b:	mov    esi,ecx
   15c0d:	cmp    DWORD PTR [esi+0xc],0x0
   15c11:	mov    ecx,DWORD PTR [ebp+0xc]
   15c14:	je     0x15c4e
   15c16:	mov    eax,DWORD PTR [esi+0x4]
   15c19:	cmp    ecx,DWORD PTR [eax]
   15c1b:	jne    0x15c4e
   15c1d:	cmp    DWORD PTR [ebp+0x10],eax
   15c20:	jne    0x15c4e
   15c22:	push   DWORD PTR [eax+0x4]
   15c25:	mov    ecx,esi
   15c27:	call   0x151fc
   15c2c:	mov    ecx,DWORD PTR ds:0x780bc
   15c32:	mov    eax,DWORD PTR [esi+0x4]
   15c35:	mov    DWORD PTR [eax+0x4],ecx
   15c38:	mov    eax,DWORD PTR [esi+0x4]
   15c3b:	and    DWORD PTR [esi+0xc],0x0
   15c3f:	mov    DWORD PTR [eax],eax
   15c41:	mov    eax,DWORD PTR [esi+0x4]
   15c44:	mov    DWORD PTR [eax+0x8],eax
   15c47:	mov    eax,DWORD PTR [esi+0x4]
   15c4a:	mov    ecx,DWORD PTR [eax]
   15c4c:	jmp    0x15c73
   15c4e:	cmp    ecx,DWORD PTR [ebp+0x10]
   15c51:	je     0x15c73
   15c53:	push   edi
   15c54:	mov    edi,ecx
   15c56:	lea    ecx,[ebp+0xc]
   15c59:	call   0x135f0
   15c5e:	push   edi
   15c5f:	lea    eax,[ebp-0x4]
   15c62:	push   eax
   15c63:	mov    ecx,esi
   15c65:	call   0x14f9a
   15c6a:	mov    ecx,DWORD PTR [ebp+0xc]
   15c6d:	cmp    ecx,DWORD PTR [ebp+0x10]
   15c70:	jne    0x15c54
   15c72:	pop    edi
   15c73:	mov    eax,DWORD PTR [ebp+0x8]
   15c76:	mov    DWORD PTR [eax],ecx
   15c78:	pop    esi
   15c79:	leave  
   15c7a:	ret    0xc
   15c7d:	int3   
   15c7e:	int3   
   15c7f:	int3   
   15c80:	int3   
   15c81:	int3   
   15c82:	mov    edi,edi
   15c84:	push   ebp
   15c85:	mov    ebp,esp
   15c87:	push   ecx
   15c88:	push   ebx
   15c89:	push   esi
   15c8a:	push   edi
   15c8b:	mov    edi,ecx
   15c8d:	mov    eax,DWORD PTR [edi+0x4]
   15c90:	mov    esi,DWORD PTR [eax+0x4]
   15c93:	mov    ebx,eax
   15c95:	mov    eax,ds:0x780c4
   15c9a:	mov    dl,0x1
   15c9c:	cmp    esi,eax
   15c9e:	je     0x15cbc
   15ca0:	mov    ecx,DWORD PTR [ebp+0xc]
   15ca3:	mov    ecx,DWORD PTR [ecx]
   15ca5:	cmp    ecx,DWORD PTR [esi+0xc]
   15ca8:	mov    ebx,esi
   15caa:	setl   dl
   15cad:	test   dl,dl
   15caf:	je     0x15cb5
   15cb1:	mov    esi,DWORD PTR [esi]
   15cb3:	jmp    0x15cb8
   15cb5:	mov    esi,DWORD PTR [esi+0x8]
   15cb8:	cmp    esi,eax
   15cba:	jne    0x15ca5
   15cbc:	cmp    BYTE PTR [edi+0x8],0x0
   15cc0:	je     0x15cdd
   15cc2:	push   DWORD PTR [ebp+0xc]
   15cc5:	push   ebx
   15cc6:	push   esi
   15cc7:	lea    eax,[ebp+0xc]
   15cca:	push   eax
   15ccb:	mov    ecx,edi
   15ccd:	call   0x154f2
   15cd2:	mov    ecx,DWORD PTR [eax]
   15cd4:	mov    eax,DWORD PTR [ebp+0x8]
   15cd7:	mov    BYTE PTR [eax+0x4],0x1
   15cdb:	jmp    0x15d0c
   15cdd:	mov    ecx,ebx
   15cdf:	mov    DWORD PTR [ebp-0x4],ecx
   15ce2:	test   dl,dl
   15ce4:	je     0x15cf8
   15ce6:	mov    eax,DWORD PTR [edi+0x4]
   15ce9:	cmp    ebx,DWORD PTR [eax]
   15ceb:	je     0x15cc2
   15ced:	lea    ecx,[ebp-0x4]
   15cf0:	call   0x1139c
   15cf5:	mov    ecx,DWORD PTR [ebp-0x4]
   15cf8:	mov    edx,DWORD PTR [ecx+0xc]
   15cfb:	mov    eax,DWORD PTR [ebp+0xc]
   15cfe:	cmp    edx,DWORD PTR [eax]
   15d00:	jge    0x15d05
   15d02:	push   eax
   15d03:	jmp    0x15cc5
   15d05:	mov    eax,DWORD PTR [ebp+0x8]
   15d08:	mov    BYTE PTR [eax+0x4],0x0
   15d0c:	pop    edi
   15d0d:	pop    esi
   15d0e:	mov    DWORD PTR [eax],ecx
   15d10:	pop    ebx
   15d11:	leave  
   15d12:	ret    0x8
   15d15:	int3   
   15d16:	int3   
   15d17:	int3   
   15d18:	int3   
   15d19:	int3   
   15d1a:	mov    edi,edi
   15d1c:	push   ebp
   15d1d:	mov    ebp,esp
   15d1f:	push   ecx
   15d20:	push   esi
   15d21:	mov    esi,ecx
   15d23:	cmp    DWORD PTR [esi+0xc],0x0
   15d27:	mov    ecx,DWORD PTR [ebp+0xc]
   15d2a:	je     0x15d64
   15d2c:	mov    eax,DWORD PTR [esi+0x4]
   15d2f:	cmp    ecx,DWORD PTR [eax]
   15d31:	jne    0x15d64
   15d33:	cmp    DWORD PTR [ebp+0x10],eax
   15d36:	jne    0x15d64
   15d38:	push   DWORD PTR [eax+0x4]
   15d3b:	mov    ecx,esi
   15d3d:	call   0x154a8
   15d42:	mov    ecx,DWORD PTR ds:0x780c4
   15d48:	mov    eax,DWORD PTR [esi+0x4]
   15d4b:	mov    DWORD PTR [eax+0x4],ecx
   15d4e:	mov    eax,DWORD PTR [esi+0x4]
   15d51:	and    DWORD PTR [esi+0xc],0x0
   15d55:	mov    DWORD PTR [eax],eax
   15d57:	mov    eax,DWORD PTR [esi+0x4]
   15d5a:	mov    DWORD PTR [eax+0x8],eax
   15d5d:	mov    eax,DWORD PTR [esi+0x4]
   15d60:	mov    ecx,DWORD PTR [eax]
   15d62:	jmp    0x15d89
   15d64:	cmp    ecx,DWORD PTR [ebp+0x10]
   15d67:	je     0x15d89
   15d69:	push   edi
   15d6a:	mov    edi,ecx
   15d6c:	lea    ecx,[ebp+0xc]
   15d6f:	call   0x11452
   15d74:	push   edi
   15d75:	lea    eax,[ebp-0x4]
   15d78:	push   eax
   15d79:	mov    ecx,esi
   15d7b:	call   0x15246
   15d80:	mov    ecx,DWORD PTR [ebp+0xc]
   15d83:	cmp    ecx,DWORD PTR [ebp+0x10]
   15d86:	jne    0x15d6a
   15d88:	pop    edi
   15d89:	mov    eax,DWORD PTR [ebp+0x8]
   15d8c:	mov    DWORD PTR [eax],ecx
   15d8e:	pop    esi
   15d8f:	leave  
   15d90:	ret    0xc
   15d93:	int3   
   15d94:	int3   
   15d95:	int3   
   15d96:	int3   
   15d97:	int3   
   15d98:	mov    edi,edi
   15d9a:	push   ebp
   15d9b:	mov    ebp,esp
   15d9d:	push   ebx
   15d9e:	push   esi
   15d9f:	mov    esi,DWORD PTR [ebp+0x10]
   15da2:	push   edi
   15da3:	push   0x0
   15da5:	push   esi
   15da6:	mov    edi,ecx
   15da8:	call   0x14476
   15dad:	push   DWORD PTR [ebp+0x14]
   15db0:	mov    ebx,eax
   15db2:	mov    eax,ds:0x780b8
   15db7:	mov    DWORD PTR [ebx],eax
   15db9:	mov    eax,ds:0x780b8
   15dbe:	mov    DWORD PTR [ebx+0x8],eax
   15dc1:	lea    eax,[ebx+0x10]
   15dc4:	push   eax
   15dc5:	call   0x144c6
   15dca:	inc    DWORD PTR [edi+0xc]
   15dcd:	cmp    esi,DWORD PTR [edi+0x4]
   15dd0:	je     0x15dfa
   15dd2:	mov    eax,DWORD PTR [ebp+0xc]
   15dd5:	cmp    eax,DWORD PTR ds:0x780b8
   15ddb:	jne    0x15dfa
   15ddd:	lea    eax,[esi+0x10]
   15de0:	push   eax
   15de1:	push   DWORD PTR [ebp+0x14]
   15de4:	call   0x197ae
   15de9:	test   al,al
   15deb:	jne    0x15dfa
   15ded:	mov    DWORD PTR [esi+0x8],ebx
   15df0:	mov    eax,DWORD PTR [edi+0x4]
   15df3:	cmp    esi,DWORD PTR [eax+0x8]
   15df6:	jne    0x15e14
   15df8:	jmp    0x15e09
   15dfa:	mov    DWORD PTR [esi],ebx
   15dfc:	mov    eax,DWORD PTR [edi+0x4]
   15dff:	cmp    esi,eax
   15e01:	jne    0x15e0e
   15e03:	mov    DWORD PTR [eax+0x4],ebx
   15e06:	mov    eax,DWORD PTR [edi+0x4]
   15e09:	mov    DWORD PTR [eax+0x8],ebx
   15e0c:	jmp    0x15e14
   15e0e:	cmp    esi,DWORD PTR [eax]
   15e10:	jne    0x15e14
   15e12:	mov    DWORD PTR [eax],ebx
   15e14:	mov    eax,DWORD PTR [edi+0x4]
   15e17:	mov    esi,ebx
   15e19:	cmp    ebx,DWORD PTR [eax+0x4]
   15e1c:	je     0x15ed0
   15e22:	mov    eax,DWORD PTR [esi+0x4]
   15e25:	xor    edx,edx
   15e27:	cmp    DWORD PTR [eax+0x60],edx
   15e2a:	jne    0x15ed0
   15e30:	mov    ecx,DWORD PTR [eax+0x4]
   15e33:	cmp    eax,DWORD PTR [ecx]
   15e35:	jne    0x15e71
   15e37:	mov    ecx,DWORD PTR [ecx+0x8]
   15e3a:	cmp    DWORD PTR [ecx+0x60],edx
   15e3d:	je     0x15e78
   15e3f:	cmp    esi,DWORD PTR [eax+0x8]
   15e42:	jne    0x15e4e
   15e44:	mov    esi,eax
   15e46:	push   esi
   15e47:	mov    ecx,edi
   15e49:	call   0x12e70
   15e4e:	mov    eax,DWORD PTR [esi+0x4]
   15e51:	mov    DWORD PTR [eax+0x60],0x1
   15e58:	mov    eax,DWORD PTR [esi+0x4]
   15e5b:	mov    eax,DWORD PTR [eax+0x4]
   15e5e:	and    DWORD PTR [eax+0x60],0x0
   15e62:	mov    eax,DWORD PTR [esi+0x4]
   15e65:	push   DWORD PTR [eax+0x4]
   15e68:	mov    ecx,edi
   15e6a:	call   0x12ebe
   15e6f:	jmp    0x15ec4
   15e71:	mov    ecx,DWORD PTR [ecx]
   15e73:	cmp    DWORD PTR [ecx+0x60],edx
   15e76:	jne    0x15e95
   15e78:	mov    edx,eax
   15e7a:	xor    eax,eax
   15e7c:	inc    eax
   15e7d:	mov    DWORD PTR [edx+0x60],eax
   15e80:	mov    DWORD PTR [ecx+0x60],eax
   15e83:	mov    eax,DWORD PTR [esi+0x4]
   15e86:	mov    eax,DWORD PTR [eax+0x4]
   15e89:	and    DWORD PTR [eax+0x60],0x0
   15e8d:	mov    eax,DWORD PTR [esi+0x4]
   15e90:	mov    esi,DWORD PTR [eax+0x4]
   15e93:	jmp    0x15ec4
   15e95:	cmp    esi,DWORD PTR [eax]
   15e97:	jne    0x15ea3
   15e99:	mov    esi,eax
   15e9b:	push   esi
   15e9c:	mov    ecx,edi
   15e9e:	call   0x12ebe
   15ea3:	mov    eax,DWORD PTR [esi+0x4]
   15ea6:	mov    DWORD PTR [eax+0x60],0x1
   15ead:	mov    eax,DWORD PTR [esi+0x4]
   15eb0:	mov    eax,DWORD PTR [eax+0x4]
   15eb3:	and    DWORD PTR [eax+0x60],0x0
   15eb7:	mov    eax,DWORD PTR [esi+0x4]
   15eba:	push   DWORD PTR [eax+0x4]
   15ebd:	mov    ecx,edi
   15ebf:	call   0x12e70
   15ec4:	mov    eax,DWORD PTR [edi+0x4]
   15ec7:	cmp    esi,DWORD PTR [eax+0x4]
   15eca:	jne    0x15e22
   15ed0:	mov    eax,DWORD PTR [edi+0x4]
   15ed3:	mov    eax,DWORD PTR [eax+0x4]
   15ed6:	pop    edi
   15ed7:	mov    DWORD PTR [eax+0x60],0x1
   15ede:	mov    eax,DWORD PTR [ebp+0x8]
   15ee1:	pop    esi
   15ee2:	mov    DWORD PTR [eax],ebx
   15ee4:	pop    ebx
   15ee5:	pop    ebp
   15ee6:	ret    0x10
   15ee9:	int3   
   15eea:	int3   
   15eeb:	int3   
   15eec:	int3   
   15eed:	int3   
   15eee:	mov    edi,edi
   15ef0:	push   ebp
   15ef1:	mov    ebp,esp
   15ef3:	push   ebx
   15ef4:	push   esi
   15ef5:	mov    esi,DWORD PTR [ebp+0x10]
   15ef8:	push   edi
   15ef9:	push   0x0
   15efb:	push   esi
   15efc:	mov    edi,ecx
   15efe:	call   0x1415e
   15f03:	push   DWORD PTR [ebp+0x14]
   15f06:	mov    ebx,eax
   15f08:	mov    eax,ds:0x780bc
   15f0d:	mov    DWORD PTR [ebx],eax
   15f0f:	mov    eax,ds:0x780bc
   15f14:	mov    DWORD PTR [ebx+0x8],eax
   15f17:	lea    eax,[ebx+0x10]
   15f1a:	push   eax
   15f1b:	call   0x144e4
   15f20:	inc    DWORD PTR [edi+0xc]
   15f23:	cmp    esi,DWORD PTR [edi+0x4]
   15f26:	je     0x15f50
   15f28:	mov    eax,DWORD PTR [ebp+0xc]
   15f2b:	cmp    eax,DWORD PTR ds:0x780bc
   15f31:	jne    0x15f50
   15f33:	lea    eax,[esi+0x10]
   15f36:	push   eax
   15f37:	push   DWORD PTR [ebp+0x14]
   15f3a:	call   0x197ae
   15f3f:	test   al,al
   15f41:	jne    0x15f50
   15f43:	mov    DWORD PTR [esi+0x8],ebx
   15f46:	mov    eax,DWORD PTR [edi+0x4]
   15f49:	cmp    esi,DWORD PTR [eax+0x8]
   15f4c:	jne    0x15f6a
   15f4e:	jmp    0x15f5f
   15f50:	mov    DWORD PTR [esi],ebx
   15f52:	mov    eax,DWORD PTR [edi+0x4]
   15f55:	cmp    esi,eax
   15f57:	jne    0x15f64
   15f59:	mov    DWORD PTR [eax+0x4],ebx
   15f5c:	mov    eax,DWORD PTR [edi+0x4]
   15f5f:	mov    DWORD PTR [eax+0x8],ebx
   15f62:	jmp    0x15f6a
   15f64:	cmp    esi,DWORD PTR [eax]
   15f66:	jne    0x15f6a
   15f68:	mov    DWORD PTR [eax],ebx
   15f6a:	mov    eax,DWORD PTR [edi+0x4]
   15f6d:	mov    esi,ebx
   15f6f:	cmp    ebx,DWORD PTR [eax+0x4]
   15f72:	je     0x16026
   15f78:	mov    eax,DWORD PTR [esi+0x4]
   15f7b:	xor    edx,edx
   15f7d:	cmp    DWORD PTR [eax+0x58],edx
   15f80:	jne    0x16026
   15f86:	mov    ecx,DWORD PTR [eax+0x4]
   15f89:	cmp    eax,DWORD PTR [ecx]
   15f8b:	jne    0x15fc7
   15f8d:	mov    ecx,DWORD PTR [ecx+0x8]
   15f90:	cmp    DWORD PTR [ecx+0x58],edx
   15f93:	je     0x15fce
   15f95:	cmp    esi,DWORD PTR [eax+0x8]
   15f98:	jne    0x15fa4
   15f9a:	mov    esi,eax
   15f9c:	push   esi
   15f9d:	mov    ecx,edi
   15f9f:	call   0x111d4
   15fa4:	mov    eax,DWORD PTR [esi+0x4]
   15fa7:	mov    DWORD PTR [eax+0x58],0x1
   15fae:	mov    eax,DWORD PTR [esi+0x4]
   15fb1:	mov    eax,DWORD PTR [eax+0x4]
   15fb4:	and    DWORD PTR [eax+0x58],0x0
   15fb8:	mov    eax,DWORD PTR [esi+0x4]
   15fbb:	push   DWORD PTR [eax+0x4]
   15fbe:	mov    ecx,edi
   15fc0:	call   0x11244
   15fc5:	jmp    0x1601a
   15fc7:	mov    ecx,DWORD PTR [ecx]
   15fc9:	cmp    DWORD PTR [ecx+0x58],edx
   15fcc:	jne    0x15feb
   15fce:	mov    edx,eax
   15fd0:	xor    eax,eax
   15fd2:	inc    eax
   15fd3:	mov    DWORD PTR [edx+0x58],eax
   15fd6:	mov    DWORD PTR [ecx+0x58],eax
   15fd9:	mov    eax,DWORD PTR [esi+0x4]
   15fdc:	mov    eax,DWORD PTR [eax+0x4]
   15fdf:	and    DWORD PTR [eax+0x58],0x0
   15fe3:	mov    eax,DWORD PTR [esi+0x4]
   15fe6:	mov    esi,DWORD PTR [eax+0x4]
   15fe9:	jmp    0x1601a
   15feb:	cmp    esi,DWORD PTR [eax]
   15fed:	jne    0x15ff9
   15fef:	mov    esi,eax
   15ff1:	push   esi
   15ff2:	mov    ecx,edi
   15ff4:	call   0x11244
   15ff9:	mov    eax,DWORD PTR [esi+0x4]
   15ffc:	mov    DWORD PTR [eax+0x58],0x1
   16003:	mov    eax,DWORD PTR [esi+0x4]
   16006:	mov    eax,DWORD PTR [eax+0x4]
   16009:	and    DWORD PTR [eax+0x58],0x0
   1600d:	mov    eax,DWORD PTR [esi+0x4]
   16010:	push   DWORD PTR [eax+0x4]
   16013:	mov    ecx,edi
   16015:	call   0x111d4
   1601a:	mov    eax,DWORD PTR [edi+0x4]
   1601d:	cmp    esi,DWORD PTR [eax+0x4]
   16020:	jne    0x15f78
   16026:	mov    eax,DWORD PTR [edi+0x4]
   16029:	mov    eax,DWORD PTR [eax+0x4]
   1602c:	pop    edi
   1602d:	mov    DWORD PTR [eax+0x58],0x1
   16034:	mov    eax,DWORD PTR [ebp+0x8]
   16037:	pop    esi
   16038:	mov    DWORD PTR [eax],ebx
   1603a:	pop    ebx
   1603b:	pop    ebp
   1603c:	ret    0x10
   1603f:	int3   
   16040:	int3   
   16041:	int3   
   16042:	int3   
   16043:	int3   
   16044:	mov    edi,edi
   16046:	push   ebp
   16047:	mov    ebp,esp
   16049:	push   ebx
   1604a:	push   esi
   1604b:	mov    esi,DWORD PTR [ebp+0x10]
   1604e:	push   edi
   1604f:	push   0x0
   16051:	push   esi
   16052:	mov    edi,ecx
   16054:	call   0x1442e
   16059:	push   DWORD PTR [ebp+0x14]
   1605c:	mov    ebx,eax
   1605e:	mov    eax,ds:0x780c0
   16063:	mov    DWORD PTR [ebx],eax
   16065:	mov    eax,ds:0x780c0
   1606a:	mov    DWORD PTR [ebx+0x8],eax
   1606d:	lea    eax,[ebx+0xc]
   16070:	push   eax
   16071:	call   0x14502
   16076:	inc    DWORD PTR [edi+0xc]
   16079:	cmp    esi,DWORD PTR [edi+0x4]
   1607c:	je     0x160a6
   1607e:	mov    eax,DWORD PTR [ebp+0xc]
   16081:	cmp    eax,DWORD PTR ds:0x780c0
   16087:	jne    0x160a6
   16089:	lea    eax,[esi+0xc]
   1608c:	push   eax
   1608d:	push   DWORD PTR [ebp+0x14]
   16090:	call   0x197ae
   16095:	test   al,al
   16097:	jne    0x160a6
   16099:	mov    DWORD PTR [esi+0x8],ebx
   1609c:	mov    eax,DWORD PTR [edi+0x4]
   1609f:	cmp    esi,DWORD PTR [eax+0x8]
   160a2:	jne    0x160c0
   160a4:	jmp    0x160b5
   160a6:	mov    DWORD PTR [esi],ebx
   160a8:	mov    eax,DWORD PTR [edi+0x4]
   160ab:	cmp    esi,eax
   160ad:	jne    0x160ba
   160af:	mov    DWORD PTR [eax+0x4],ebx
   160b2:	mov    eax,DWORD PTR [edi+0x4]
   160b5:	mov    DWORD PTR [eax+0x8],ebx
   160b8:	jmp    0x160c0
   160ba:	cmp    esi,DWORD PTR [eax]
   160bc:	jne    0x160c0
   160be:	mov    DWORD PTR [eax],ebx
   160c0:	mov    eax,DWORD PTR [edi+0x4]
   160c3:	mov    esi,ebx
   160c5:	cmp    ebx,DWORD PTR [eax+0x4]
   160c8:	je     0x1617c
   160ce:	mov    eax,DWORD PTR [esi+0x4]
   160d1:	xor    edx,edx
   160d3:	cmp    DWORD PTR [eax+0x1c],edx
   160d6:	jne    0x1617c
   160dc:	mov    ecx,DWORD PTR [eax+0x4]
   160df:	cmp    eax,DWORD PTR [ecx]
   160e1:	jne    0x1611d
   160e3:	mov    ecx,DWORD PTR [ecx+0x8]
   160e6:	cmp    DWORD PTR [ecx+0x1c],edx
   160e9:	je     0x16124
   160eb:	cmp    esi,DWORD PTR [eax+0x8]
   160ee:	jne    0x160fa
   160f0:	mov    esi,eax
   160f2:	push   esi
   160f3:	mov    ecx,edi
   160f5:	call   0x12f86
   160fa:	mov    eax,DWORD PTR [esi+0x4]
   160fd:	mov    DWORD PTR [eax+0x1c],0x1
   16104:	mov    eax,DWORD PTR [esi+0x4]
   16107:	mov    eax,DWORD PTR [eax+0x4]
   1610a:	and    DWORD PTR [eax+0x1c],0x0
   1610e:	mov    eax,DWORD PTR [esi+0x4]
   16111:	push   DWORD PTR [eax+0x4]
   16114:	mov    ecx,edi
   16116:	call   0x12fd4
   1611b:	jmp    0x16170
   1611d:	mov    ecx,DWORD PTR [ecx]
   1611f:	cmp    DWORD PTR [ecx+0x1c],edx
   16122:	jne    0x16141
   16124:	mov    edx,eax
   16126:	xor    eax,eax
   16128:	inc    eax
   16129:	mov    DWORD PTR [edx+0x1c],eax
   1612c:	mov    DWORD PTR [ecx+0x1c],eax
   1612f:	mov    eax,DWORD PTR [esi+0x4]
   16132:	mov    eax,DWORD PTR [eax+0x4]
   16135:	and    DWORD PTR [eax+0x1c],0x0
   16139:	mov    eax,DWORD PTR [esi+0x4]
   1613c:	mov    esi,DWORD PTR [eax+0x4]
   1613f:	jmp    0x16170
   16141:	cmp    esi,DWORD PTR [eax]
   16143:	jne    0x1614f
   16145:	mov    esi,eax
   16147:	push   esi
   16148:	mov    ecx,edi
   1614a:	call   0x12fd4
   1614f:	mov    eax,DWORD PTR [esi+0x4]
   16152:	mov    DWORD PTR [eax+0x1c],0x1
   16159:	mov    eax,DWORD PTR [esi+0x4]
   1615c:	mov    eax,DWORD PTR [eax+0x4]
   1615f:	and    DWORD PTR [eax+0x1c],0x0
   16163:	mov    eax,DWORD PTR [esi+0x4]
   16166:	push   DWORD PTR [eax+0x4]
   16169:	mov    ecx,edi
   1616b:	call   0x12f86
   16170:	mov    eax,DWORD PTR [edi+0x4]
   16173:	cmp    esi,DWORD PTR [eax+0x4]
   16176:	jne    0x160ce
   1617c:	mov    eax,DWORD PTR [edi+0x4]
   1617f:	mov    eax,DWORD PTR [eax+0x4]
   16182:	pop    edi
   16183:	mov    DWORD PTR [eax+0x1c],0x1
   1618a:	mov    eax,DWORD PTR [ebp+0x8]
   1618d:	pop    esi
   1618e:	mov    DWORD PTR [eax],ebx
   16190:	pop    ebx
   16191:	pop    ebp
   16192:	ret    0x10
   16195:	int3   
   16196:	int3   
   16197:	int3   
   16198:	int3   
   16199:	int3   
   1619a:	mov    edi,edi
   1619c:	push   ebp
   1619d:	mov    ebp,esp
   1619f:	push   ebx
   161a0:	push   esi
   161a1:	mov    esi,DWORD PTR [ebp+0x10]
   161a4:	push   edi
   161a5:	push   0x0
   161a7:	push   esi
   161a8:	mov    edi,ecx
   161aa:	call   0x1442e
   161af:	push   DWORD PTR [ebp+0x14]
   161b2:	mov    ebx,eax
   161b4:	mov    eax,ds:0x780cc
   161b9:	mov    DWORD PTR [ebx],eax
   161bb:	mov    eax,ds:0x780cc
   161c0:	mov    DWORD PTR [ebx+0x8],eax
   161c3:	lea    eax,[ebx+0xc]
   161c6:	push   eax
   161c7:	call   0x14520
   161cc:	inc    DWORD PTR [edi+0xc]
   161cf:	cmp    esi,DWORD PTR [edi+0x4]
   161d2:	je     0x161fc
   161d4:	mov    eax,DWORD PTR [ebp+0xc]
   161d7:	cmp    eax,DWORD PTR ds:0x780cc
   161dd:	jne    0x161fc
   161df:	lea    eax,[esi+0xc]
   161e2:	push   eax
   161e3:	push   DWORD PTR [ebp+0x14]
   161e6:	call   0x197de
   161eb:	test   al,al
   161ed:	jne    0x161fc
   161ef:	mov    DWORD PTR [esi+0x8],ebx
   161f2:	mov    eax,DWORD PTR [edi+0x4]
   161f5:	cmp    esi,DWORD PTR [eax+0x8]
   161f8:	jne    0x16216
   161fa:	jmp    0x1620b
   161fc:	mov    DWORD PTR [esi],ebx
   161fe:	mov    eax,DWORD PTR [edi+0x4]
   16201:	cmp    esi,eax
   16203:	jne    0x16210
   16205:	mov    DWORD PTR [eax+0x4],ebx
   16208:	mov    eax,DWORD PTR [edi+0x4]
   1620b:	mov    DWORD PTR [eax+0x8],ebx
   1620e:	jmp    0x16216
   16210:	cmp    esi,DWORD PTR [eax]
   16212:	jne    0x16216
   16214:	mov    DWORD PTR [eax],ebx
   16216:	mov    eax,DWORD PTR [edi+0x4]
   16219:	mov    esi,ebx
   1621b:	cmp    ebx,DWORD PTR [eax+0x4]
   1621e:	je     0x162d2
   16224:	mov    eax,DWORD PTR [esi+0x4]
   16227:	xor    edx,edx
   16229:	cmp    DWORD PTR [eax+0x1c],edx
   1622c:	jne    0x162d2
   16232:	mov    ecx,DWORD PTR [eax+0x4]
   16235:	cmp    eax,DWORD PTR [ecx]
   16237:	jne    0x16273
   16239:	mov    ecx,DWORD PTR [ecx+0x8]
   1623c:	cmp    DWORD PTR [ecx+0x1c],edx
   1623f:	je     0x1627a
   16241:	cmp    esi,DWORD PTR [eax+0x8]
   16244:	jne    0x16250
   16246:	mov    esi,eax
   16248:	push   esi
   16249:	mov    ecx,edi
   1624b:	call   0x1317a
   16250:	mov    eax,DWORD PTR [esi+0x4]
   16253:	mov    DWORD PTR [eax+0x1c],0x1
   1625a:	mov    eax,DWORD PTR [esi+0x4]
   1625d:	mov    eax,DWORD PTR [eax+0x4]
   16260:	and    DWORD PTR [eax+0x1c],0x0
   16264:	mov    eax,DWORD PTR [esi+0x4]
   16267:	push   DWORD PTR [eax+0x4]
   1626a:	mov    ecx,edi
   1626c:	call   0x131c8
   16271:	jmp    0x162c6
   16273:	mov    ecx,DWORD PTR [ecx]
   16275:	cmp    DWORD PTR [ecx+0x1c],edx
   16278:	jne    0x16297
   1627a:	mov    edx,eax
   1627c:	xor    eax,eax
   1627e:	inc    eax
   1627f:	mov    DWORD PTR [edx+0x1c],eax
   16282:	mov    DWORD PTR [ecx+0x1c],eax
   16285:	mov    eax,DWORD PTR [esi+0x4]
   16288:	mov    eax,DWORD PTR [eax+0x4]
   1628b:	and    DWORD PTR [eax+0x1c],0x0
   1628f:	mov    eax,DWORD PTR [esi+0x4]
   16292:	mov    esi,DWORD PTR [eax+0x4]
   16295:	jmp    0x162c6
   16297:	cmp    esi,DWORD PTR [eax]
   16299:	jne    0x162a5
   1629b:	mov    esi,eax
   1629d:	push   esi
   1629e:	mov    ecx,edi
   162a0:	call   0x131c8
   162a5:	mov    eax,DWORD PTR [esi+0x4]
   162a8:	mov    DWORD PTR [eax+0x1c],0x1
   162af:	mov    eax,DWORD PTR [esi+0x4]
   162b2:	mov    eax,DWORD PTR [eax+0x4]
   162b5:	and    DWORD PTR [eax+0x1c],0x0
   162b9:	mov    eax,DWORD PTR [esi+0x4]
   162bc:	push   DWORD PTR [eax+0x4]
   162bf:	mov    ecx,edi
   162c1:	call   0x1317a
   162c6:	mov    eax,DWORD PTR [edi+0x4]
   162c9:	cmp    esi,DWORD PTR [eax+0x4]
   162cc:	jne    0x16224
   162d2:	mov    eax,DWORD PTR [edi+0x4]
   162d5:	mov    eax,DWORD PTR [eax+0x4]
   162d8:	pop    edi
   162d9:	mov    DWORD PTR [eax+0x1c],0x1
   162e0:	mov    eax,DWORD PTR [ebp+0x8]
   162e3:	pop    esi
   162e4:	mov    DWORD PTR [eax],ebx
   162e6:	pop    ebx
   162e7:	pop    ebp
   162e8:	ret    0x10
   162eb:	int3   
   162ec:	int3   
   162ed:	int3   
   162ee:	int3   
   162ef:	int3   
   162f0:	mov    edi,edi
   162f2:	push   ebp
   162f3:	mov    ebp,esp
   162f5:	push   esi
   162f6:	push   edi
   162f7:	mov    edi,DWORD PTR [ebp+0x8]
   162fa:	mov    al,BYTE PTR [edi+0x8]
   162fd:	mov    esi,ecx
   162ff:	mov    BYTE PTR [esi+0x8],al
   16302:	call   0x1498a
   16307:	push   edi
   16308:	mov    ecx,esi
   1630a:	call   0x156c6
   1630f:	pop    edi
   16310:	mov    eax,esi
   16312:	pop    esi
   16313:	pop    ebp
   16314:	ret    0x4
   16317:	int3   
   16318:	int3   
   16319:	int3   
   1631a:	int3   
   1631b:	int3   
   1631c:	mov    edi,edi
   1631e:	push   ebp
   1631f:	mov    ebp,esp
   16321:	push   ecx
   16322:	push   esi
   16323:	mov    esi,ecx
   16325:	cmp    esi,DWORD PTR [ebp+0x8]
   16328:	je     0x16346
   1632a:	mov    eax,DWORD PTR [esi+0x4]
   1632d:	mov    ecx,DWORD PTR [eax]
   1632f:	push   eax
   16330:	push   ecx
   16331:	lea    eax,[ebp-0x4]
   16334:	push   eax
   16335:	mov    ecx,esi
   16337:	call   0x146bc
   1633c:	push   DWORD PTR [ebp+0x8]
   1633f:	mov    ecx,esi
   16341:	call   0x156c6
   16346:	mov    eax,esi
   16348:	pop    esi
   16349:	leave  
   1634a:	ret    0x4
   1634d:	int3   
   1634e:	int3   
   1634f:	int3   
   16350:	int3   
   16351:	int3   
   16352:	mov    edi,edi
   16354:	push   ebp
   16355:	mov    ebp,esp
   16357:	push   esi
   16358:	push   edi
   16359:	xor    edi,edi
   1635b:	push   edi
   1635c:	push   edi
   1635d:	push   edi
   1635e:	mov    esi,ecx
   16360:	mov    eax,DWORD PTR [esi+0x10]
   16363:	push   edi
   16364:	push   eax
   16365:	call   DWORD PTR ds:0x1f020
   1636b:	test   eax,eax
   1636d:	jl     0x16384
   1636f:	lea    eax,[ebp+0x8]
   16372:	push   eax
   16373:	mov    ecx,esi
   16375:	call   0x14672
   1637a:	push   edi
   1637b:	push   DWORD PTR [esi+0x10]
   1637e:	call   DWORD PTR ds:0x1f01c
   16384:	pop    edi
   16385:	pop    esi
   16386:	pop    ebp
   16387:	ret    0x4
   1638a:	int3   
   1638b:	int3   
   1638c:	int3   
   1638d:	int3   
   1638e:	int3   
   1638f:	int3   
   16390:	mov    edi,edi
   16392:	push   ebp
   16393:	mov    ebp,esp
   16395:	sub    esp,0x40
   16398:	test   BYTE PTR [ebp+0x8],0x20
   1639c:	je     0x16428
   163a2:	push   ebx
   163a3:	lea    ecx,[ebp-0x40]
   163a6:	call   0x1390c
   163ab:	mov    ecx,DWORD PTR ds:0x77ee8
   163b1:	lea    eax,[ebp-0x40]
   163b4:	push   eax
   163b5:	push   DWORD PTR [ebp+0xc]
   163b8:	call   0x15946
   163bd:	test   al,al
   163bf:	je     0x16424
   163c1:	mov    ecx,DWORD PTR [ebp+0x10]
   163c4:	lea    eax,[ebp-0x38]
   163c7:	push   eax
   163c8:	call   0x128b4
   163cd:	mov    ecx,DWORD PTR [ebp+0x14]
   163d0:	lea    eax,[ebp-0x30]
   163d3:	push   eax
   163d4:	call   0x128b4
   163d9:	mov    ecx,DWORD PTR [ebp+0x18]
   163dc:	lea    eax,[ebp-0x28]
   163df:	push   eax
   163e0:	call   0x128b4
   163e5:	mov    eax,DWORD PTR [ebp+0x20]
   163e8:	mov    ecx,DWORD PTR [ebp-0x20]
   163eb:	mov    DWORD PTR [eax],ecx
   163ed:	mov    ecx,DWORD PTR [ebp+0x1c]
   163f0:	lea    eax,[ebp-0x8]
   163f3:	push   eax
   163f4:	call   0x128b4
   163f9:	mov    eax,DWORD PTR [ebp+0x24]
   163fc:	mov    ecx,DWORD PTR [ebp-0x18]
   163ff:	mov    DWORD PTR [eax],ecx
   16401:	mov    ecx,DWORD PTR [ebp-0x14]
   16404:	mov    DWORD PTR [eax+0x4],ecx
   16407:	mov    ecx,DWORD PTR [ebp-0x10]
   1640a:	mov    eax,DWORD PTR [ebp+0x28]
   1640d:	mov    DWORD PTR [eax],ecx
   1640f:	mov    ecx,DWORD PTR [ebp-0xc]
   16412:	mov    DWORD PTR [eax+0x4],ecx
   16415:	mov    bl,0x1
   16417:	lea    ecx,[ebp-0x40]
   1641a:	call   0x11dca
   1641f:	mov    al,bl
   16421:	pop    ebx
   16422:	jmp    0x164a3
   16424:	xor    bl,bl
   16426:	jmp    0x16417
   16428:	mov    ecx,DWORD PTR ds:0x77ee0
   1642e:	push   esi
   1642f:	push   DWORD PTR [ebp+0xc]
   16432:	lea    eax,[ebp+0xc]
   16435:	push   eax
   16436:	call   0x13a0a
   1643b:	mov    esi,DWORD PTR [ebp+0xc]
   1643e:	mov    eax,ds:0x77ee0
   16443:	cmp    esi,DWORD PTR [eax+0x4]
   16446:	jne    0x1644c
   16448:	xor    al,al
   1644a:	jmp    0x164a2
   1644c:	mov    ecx,DWORD PTR [ebp+0x10]
   1644f:	lea    eax,[esi+0x20]
   16452:	push   eax
   16453:	call   0x128b4
   16458:	mov    ecx,DWORD PTR [ebp+0x14]
   1645b:	lea    eax,[esi+0x28]
   1645e:	push   eax
   1645f:	call   0x128b4
   16464:	mov    ecx,DWORD PTR [ebp+0x18]
   16467:	lea    eax,[esi+0x30]
   1646a:	push   eax
   1646b:	call   0x128b4
   16470:	mov    ecx,DWORD PTR [ebp+0x1c]
   16473:	lea    eax,[esi+0x50]
   16476:	push   eax
   16477:	call   0x128b4
   1647c:	mov    eax,DWORD PTR [esi+0x38]
   1647f:	mov    ecx,DWORD PTR [ebp+0x20]
   16482:	mov    DWORD PTR [ecx],eax
   16484:	mov    ecx,DWORD PTR [esi+0x40]
   16487:	mov    eax,DWORD PTR [ebp+0x24]
   1648a:	mov    DWORD PTR [eax],ecx
   1648c:	mov    ecx,DWORD PTR [esi+0x44]
   1648f:	mov    DWORD PTR [eax+0x4],ecx
   16492:	mov    ecx,DWORD PTR [esi+0x48]
   16495:	mov    eax,DWORD PTR [ebp+0x28]
   16498:	mov    DWORD PTR [eax],ecx
   1649a:	mov    ecx,DWORD PTR [esi+0x4c]
   1649d:	mov    DWORD PTR [eax+0x4],ecx
   164a0:	mov    al,0x1
   164a2:	pop    esi
   164a3:	leave  
   164a4:	ret    0x24
   164a7:	int3   
   164a8:	int3   
   164a9:	int3   
   164aa:	int3   
   164ab:	int3   
   164ac:	push   0x40
   164ae:	push   0x77168
   164b3:	call   0x1dac8
   164b8:	xor    esi,esi
   164ba:	push   esi
   164bb:	push   esi
   164bc:	push   esi
   164bd:	push   esi
   164be:	push   0x77558
   164c3:	call   DWORD PTR ds:0x1f020
   164c9:	cmp    eax,esi
   164cb:	jl     0x16643
   164d1:	mov    DWORD PTR [ebp-0x4],esi
   164d4:	or     edi,0xffffffff
   164d7:	push   edi
   164d8:	mov    esi,0x1ded8
   164dd:	push   esi
   164de:	lea    ecx,[ebp-0x40]
   164e1:	call   0x129ea
   164e6:	push   edi
   164e7:	push   esi
   164e8:	lea    ecx,[ebp-0x38]
   164eb:	call   0x129ea
   164f0:	push   edi
   164f1:	push   esi
   164f2:	lea    ecx,[ebp-0x30]
   164f5:	call   0x129ea
   164fa:	push   edi
   164fb:	push   esi
   164fc:	lea    ecx,[ebp-0x28]
   164ff:	call   0x129ea
   16504:	lea    eax,[ebp-0x50]
   16507:	push   eax
   16508:	lea    eax,[ebp-0x48]
   1650b:	push   eax
   1650c:	lea    eax,[ebp-0x1c]
   1650f:	push   eax
   16510:	lea    eax,[ebp-0x28]
   16513:	push   eax
   16514:	lea    eax,[ebp-0x30]
   16517:	push   eax
   16518:	lea    eax,[ebp-0x38]
   1651b:	push   eax
   1651c:	lea    eax,[ebp-0x40]
   1651f:	push   eax
   16520:	mov    edi,DWORD PTR [ebp+0x8]
   16523:	push   edi
   16524:	mov    esi,DWORD PTR [ebp+0xc]
   16527:	push   DWORD PTR [esi+0x4]
   1652a:	call   0x16390
   1652f:	test   al,al
   16531:	jne    0x1653f
   16533:	mov    DWORD PTR [esi+0x8],0x1
   1653a:	jmp    0x165f9
   1653f:	mov    ecx,DWORD PTR [edi+0x4]
   16542:	mov    eax,DWORD PTR [ebp-0x3c]
   16545:	lea    edx,[eax+ecx*1+0x2]
   16549:	mov    eax,DWORD PTR [ebp-0x34]
   1654c:	lea    edi,[eax+edx*1+0x1]
   16550:	mov    eax,DWORD PTR [ebp-0x2c]
   16553:	lea    eax,[eax+edi*1+0x1]
   16557:	mov    DWORD PTR [ebp-0x20],eax
   1655a:	mov    ebx,DWORD PTR [ebp-0x24]
   1655d:	lea    eax,[ebx+eax*1+0x1]
   16561:	cmp    eax,DWORD PTR [esi]
   16563:	jbe    0x16573
   16565:	mov    DWORD PTR [esi],eax
   16567:	mov    DWORD PTR [esi+0x8],0x2
   1656e:	jmp    0x165f9
   16573:	and    DWORD PTR [esi+0x8],0x0
   16577:	mov    eax,DWORD PTR [ebp-0x1c]
   1657a:	mov    DWORD PTR [esi+0xc],eax
   1657d:	mov    eax,DWORD PTR [ebp-0x48]
   16580:	mov    DWORD PTR [esi+0x10],eax
   16583:	mov    eax,DWORD PTR [ebp-0x44]
   16586:	mov    DWORD PTR [esi+0x14],eax
   16589:	mov    eax,DWORD PTR [ebp-0x50]
   1658c:	mov    DWORD PTR [esi+0x18],eax
   1658f:	mov    eax,DWORD PTR [ebp-0x4c]
   16592:	mov    DWORD PTR [esi+0x1c],eax
   16595:	mov    eax,DWORD PTR [ebp+0x8]
   16598:	mov    eax,DWORD PTR [eax]
   1659a:	mov    DWORD PTR [ebp-0x1c],eax
   1659d:	lea    eax,[esi+0x20]
   165a0:	mov    ebx,DWORD PTR [ebp-0x1c]
   165a3:	mov    bl,BYTE PTR [ebx]
   165a5:	mov    BYTE PTR [ebp+0xb],bl
   165a8:	mov    BYTE PTR [eax],bl
   165aa:	inc    DWORD PTR [ebp-0x1c]
   165ad:	inc    eax
   165ae:	test   bl,bl
   165b0:	jne    0x165a0
   165b2:	mov    ebx,DWORD PTR [ebp-0x40]
   165b5:	lea    ecx,[ecx+esi*1+0x21]
   165b9:	mov    al,BYTE PTR [ebx]
   165bb:	mov    BYTE PTR [ecx],al
   165bd:	inc    ebx
   165be:	inc    ecx
   165bf:	test   al,al
   165c1:	jne    0x165b9
   165c3:	mov    ecx,DWORD PTR [ebp-0x38]
   165c6:	lea    edx,[edx+esi*1+0x20]
   165ca:	mov    al,BYTE PTR [ecx]
   165cc:	mov    BYTE PTR [edx],al
   165ce:	inc    ecx
   165cf:	inc    edx
   165d0:	test   al,al
   165d2:	jne    0x165ca
   165d4:	mov    ecx,DWORD PTR [ebp-0x30]
   165d7:	lea    edi,[edi+esi*1+0x20]
   165db:	mov    al,BYTE PTR [ecx]
   165dd:	mov    BYTE PTR [edi],al
   165df:	inc    ecx
   165e0:	inc    edi
   165e1:	test   al,al
   165e3:	jne    0x165db
   165e5:	mov    ecx,DWORD PTR [ebp-0x28]
   165e8:	mov    eax,DWORD PTR [ebp-0x20]
   165eb:	lea    esi,[eax+esi*1+0x20]
   165ef:	mov    al,BYTE PTR [ecx]
   165f1:	mov    BYTE PTR [esi],al
   165f3:	inc    ecx
   165f4:	inc    esi
   165f5:	test   al,al
   165f7:	jne    0x165ef
   165f9:	push   DWORD PTR [ebp-0x28]
   165fc:	call   0x10990
   16601:	push   DWORD PTR [ebp-0x30]
   16604:	call   0x10990
   16609:	push   DWORD PTR [ebp-0x38]
   1660c:	call   0x10990
   16611:	push   DWORD PTR [ebp-0x40]
   16614:	call   0x10990
   16619:	add    esp,0x10
   1661c:	jmp    0x1662f
   1661e:	xor    eax,eax
   16620:	inc    eax
   16621:	ret    
   16622:	mov    esp,DWORD PTR [ebp-0x18]
   16625:	mov    eax,DWORD PTR [ebp+0xc]
   16628:	mov    DWORD PTR [eax+0x8],0x4
   1662f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16636:	push   0x0
   16638:	push   0x77558
   1663d:	call   DWORD PTR ds:0x1f01c
   16643:	call   0x1db0d
   16648:	ret    0x8
   1664b:	int3   
   1664c:	int3   
   1664d:	int3   
   1664e:	int3   
   1664f:	int3   
   16650:	mov    edi,edi
   16652:	push   esi
   16653:	mov    esi,ecx
   16655:	mov    BYTE PTR [esi+0x8],0x0
   16659:	call   0x148c6
   1665e:	mov    eax,esi
   16660:	pop    esi
   16661:	ret    0x8
   16664:	int3   
   16665:	int3   
   16666:	int3   
   16667:	int3   
   16668:	int3   
   16669:	int3   
   1666a:	mov    edi,edi
   1666c:	push   ebp
   1666d:	mov    ebp,esp
   1666f:	push   ecx
   16670:	push   ecx
   16671:	push   DWORD PTR [ebp+0xc]
   16674:	lea    eax,[ebp-0x8]
   16677:	push   eax
   16678:	call   0x15a56
   1667d:	mov    eax,DWORD PTR [ebp+0x8]
   16680:	mov    ecx,DWORD PTR [ebp-0x8]
   16683:	mov    DWORD PTR [eax],ecx
   16685:	mov    cl,BYTE PTR [ebp-0x4]
   16688:	mov    BYTE PTR [eax+0x4],cl
   1668b:	leave  
   1668c:	ret    0x8
   1668f:	int3   
   16690:	int3   
   16691:	int3   
   16692:	int3   
   16693:	int3   
   16694:	mov    edi,edi
   16696:	push   ebp
   16697:	mov    ebp,esp
   16699:	push   ecx
   1669a:	push   esi
   1669b:	mov    esi,ecx
   1669d:	mov    eax,DWORD PTR [esi+0x4]
   166a0:	mov    ecx,DWORD PTR [eax]
   166a2:	push   eax
   166a3:	push   ecx
   166a4:	lea    eax,[ebp-0x4]
   166a7:	push   eax
   166a8:	mov    ecx,esi
   166aa:	call   0x15aee
   166af:	push   DWORD PTR [esi+0x4]
   166b2:	call   0x10990
   166b7:	xor    eax,eax
   166b9:	mov    DWORD PTR [esi+0x4],eax
   166bc:	mov    DWORD PTR [esi+0xc],eax
   166bf:	dec    DWORD PTR ds:0x78224
   166c5:	pop    ecx
   166c6:	pop    esi
   166c7:	jne    0x166df
   166c9:	mov    ecx,DWORD PTR ds:0x780b8
   166cf:	mov    ds:0x780b8,eax
   166d4:	cmp    ecx,eax
   166d6:	je     0x166df
   166d8:	push   ecx
   166d9:	call   0x10990
   166de:	pop    ecx
   166df:	leave  
   166e0:	ret    
   166e1:	int3   
   166e2:	int3   
   166e3:	int3   
   166e4:	int3   
   166e5:	int3   
   166e6:	mov    edi,edi
   166e8:	push   ebp
   166e9:	mov    ebp,esp
   166eb:	push   ecx
   166ec:	push   ecx
   166ed:	push   DWORD PTR [ebp+0xc]
   166f0:	lea    eax,[ebp-0x8]
   166f3:	push   eax
   166f4:	call   0x15b6c
   166f9:	mov    eax,DWORD PTR [ebp+0x8]
   166fc:	mov    ecx,DWORD PTR [ebp-0x8]
   166ff:	mov    DWORD PTR [eax],ecx
   16701:	mov    cl,BYTE PTR [ebp-0x4]
   16704:	mov    BYTE PTR [eax+0x4],cl
   16707:	leave  
   16708:	ret    0x8
   1670b:	int3   
   1670c:	int3   
   1670d:	int3   
   1670e:	int3   
   1670f:	int3   
   16710:	mov    edi,edi
   16712:	push   ebp
   16713:	mov    ebp,esp
   16715:	push   ecx
   16716:	mov    eax,DWORD PTR [ecx+0x4]
   16719:	mov    edx,DWORD PTR [eax]
   1671b:	push   eax
   1671c:	push   edx
   1671d:	lea    eax,[ebp-0x4]
   16720:	push   eax
   16721:	call   0x15c04
   16726:	leave  
   16727:	ret    
   16728:	int3   
   16729:	int3   
   1672a:	int3   
   1672b:	int3   
   1672c:	int3   
   1672d:	int3   
   1672e:	mov    edi,edi
   16730:	push   ebp
   16731:	mov    ebp,esp
   16733:	push   ecx
   16734:	push   ecx
   16735:	push   DWORD PTR [ebp+0xc]
   16738:	lea    eax,[ebp-0x8]
   1673b:	push   eax
   1673c:	call   0x15c82
   16741:	mov    eax,DWORD PTR [ebp+0x8]
   16744:	mov    ecx,DWORD PTR [ebp-0x8]
   16747:	mov    DWORD PTR [eax],ecx
   16749:	mov    cl,BYTE PTR [ebp-0x4]
   1674c:	mov    BYTE PTR [eax+0x4],cl
   1674f:	leave  
   16750:	ret    0x8
   16753:	int3   
   16754:	int3   
   16755:	int3   
   16756:	int3   
   16757:	int3   
   16758:	mov    edi,edi
   1675a:	push   ebp
   1675b:	mov    ebp,esp
   1675d:	push   ecx
   1675e:	push   ecx
   1675f:	push   esi
   16760:	push   DWORD PTR [ebp+0x8]
   16763:	lea    eax,[ebp-0x8]
   16766:	push   eax
   16767:	mov    esi,ecx
   16769:	call   0x13e5a
   1676e:	and    DWORD PTR [ebp+0x8],0x0
   16772:	lea    eax,[ebp+0x8]
   16775:	push   eax
   16776:	push   DWORD PTR [ebp-0x4]
   16779:	push   DWORD PTR [ebp-0x8]
   1677c:	call   0x137b0
   16781:	add    esp,0xc
   16784:	push   DWORD PTR [ebp-0x4]
   16787:	lea    eax,[ebp-0x4]
   1678a:	push   DWORD PTR [ebp-0x8]
   1678d:	mov    ecx,esi
   1678f:	push   eax
   16790:	call   0x15d1a
   16795:	mov    eax,DWORD PTR [ebp+0x8]
   16798:	pop    esi
   16799:	leave  
   1679a:	ret    0x4
   1679d:	int3   
   1679e:	int3   
   1679f:	int3   
   167a0:	int3   
   167a1:	int3   
   167a2:	mov    edi,edi
   167a4:	push   ebp
   167a5:	mov    ebp,esp
   167a7:	push   ecx
   167a8:	mov    eax,DWORD PTR [ecx+0x4]
   167ab:	mov    edx,DWORD PTR [eax]
   167ad:	push   eax
   167ae:	push   edx
   167af:	lea    eax,[ebp-0x4]
   167b2:	push   eax
   167b3:	call   0x15d1a
   167b8:	leave  
   167b9:	ret    
   167ba:	int3   
   167bb:	int3   
   167bc:	int3   
   167bd:	int3   
   167be:	int3   
   167bf:	int3   
   167c0:	mov    edi,edi
   167c2:	push   ebp
   167c3:	mov    ebp,esp
   167c5:	push   ecx
   167c6:	push   ebx
   167c7:	push   esi
   167c8:	push   edi
   167c9:	mov    edi,ecx
   167cb:	mov    eax,DWORD PTR [edi+0x4]
   167ce:	mov    esi,DWORD PTR [eax+0x4]
   167d1:	mov    ebx,eax
   167d3:	mov    al,0x1
   167d5:	jmp    0x167f0
   167d7:	lea    eax,[esi+0x10]
   167da:	push   eax
   167db:	push   DWORD PTR [ebp+0xc]
   167de:	mov    ebx,esi
   167e0:	call   0x197ae
   167e5:	test   al,al
   167e7:	je     0x167ed
   167e9:	mov    esi,DWORD PTR [esi]
   167eb:	jmp    0x167f0
   167ed:	mov    esi,DWORD PTR [esi+0x8]
   167f0:	cmp    esi,DWORD PTR ds:0x780b8
   167f6:	jne    0x167d7
   167f8:	cmp    BYTE PTR [edi+0x8],0x0
   167fc:	je     0x16819
   167fe:	push   DWORD PTR [ebp+0xc]
   16801:	lea    eax,[ebp+0xc]
   16804:	push   ebx
   16805:	push   esi
   16806:	push   eax
   16807:	mov    ecx,edi
   16809:	call   0x15d98
   1680e:	mov    ecx,DWORD PTR [eax]
   16810:	mov    eax,DWORD PTR [ebp+0x8]
   16813:	mov    BYTE PTR [eax+0x4],0x1
   16817:	jmp    0x1684c
   16819:	mov    DWORD PTR [ebp-0x4],ebx
   1681c:	test   al,al
   1681e:	je     0x1682f
   16820:	mov    eax,DWORD PTR [edi+0x4]
   16823:	cmp    ebx,DWORD PTR [eax]
   16825:	je     0x167fe
   16827:	lea    ecx,[ebp-0x4]
   1682a:	call   0x113dc
   1682f:	push   DWORD PTR [ebp+0xc]
   16832:	mov    eax,DWORD PTR [ebp-0x4]
   16835:	add    eax,0x10
   16838:	push   eax
   16839:	call   0x197ae
   1683e:	test   al,al
   16840:	jne    0x167fe
   16842:	mov    eax,DWORD PTR [ebp+0x8]
   16845:	mov    ecx,DWORD PTR [ebp-0x4]
   16848:	mov    BYTE PTR [eax+0x4],0x0
   1684c:	pop    edi
   1684d:	pop    esi
   1684e:	mov    DWORD PTR [eax],ecx
   16850:	pop    ebx
   16851:	leave  
   16852:	ret    0x8
   16855:	int3   
   16856:	int3   
   16857:	int3   
   16858:	int3   
   16859:	int3   
   1685a:	mov    edi,edi
   1685c:	push   ebp
   1685d:	mov    ebp,esp
   1685f:	push   ecx
   16860:	push   ebx
   16861:	push   esi
   16862:	push   edi
   16863:	mov    edi,ecx
   16865:	mov    eax,DWORD PTR [edi+0x4]
   16868:	mov    esi,DWORD PTR [eax+0x4]
   1686b:	mov    ebx,eax
   1686d:	mov    al,0x1
   1686f:	jmp    0x1688a
   16871:	lea    eax,[esi+0x10]
   16874:	push   eax
   16875:	push   DWORD PTR [ebp+0xc]
   16878:	mov    ebx,esi
   1687a:	call   0x197ae
   1687f:	test   al,al
   16881:	je     0x16887
   16883:	mov    esi,DWORD PTR [esi]
   16885:	jmp    0x1688a
   16887:	mov    esi,DWORD PTR [esi+0x8]
   1688a:	cmp    esi,DWORD PTR ds:0x780bc
   16890:	jne    0x16871
   16892:	cmp    BYTE PTR [edi+0x8],0x0
   16896:	je     0x168b3
   16898:	push   DWORD PTR [ebp+0xc]
   1689b:	lea    eax,[ebp+0xc]
   1689e:	push   ebx
   1689f:	push   esi
   168a0:	push   eax
   168a1:	mov    ecx,edi
   168a3:	call   0x15eee
   168a8:	mov    ecx,DWORD PTR [eax]
   168aa:	mov    eax,DWORD PTR [ebp+0x8]
   168ad:	mov    BYTE PTR [eax+0x4],0x1
   168b1:	jmp    0x168e6
   168b3:	mov    DWORD PTR [ebp-0x4],ebx
   168b6:	test   al,al
   168b8:	je     0x168c9
   168ba:	mov    eax,DWORD PTR [edi+0x4]
   168bd:	cmp    ebx,DWORD PTR [eax]
   168bf:	je     0x16898
   168c1:	lea    ecx,[ebp-0x4]
   168c4:	call   0x11294
   168c9:	push   DWORD PTR [ebp+0xc]
   168cc:	mov    eax,DWORD PTR [ebp-0x4]
   168cf:	add    eax,0x10
   168d2:	push   eax
   168d3:	call   0x197ae
   168d8:	test   al,al
   168da:	jne    0x16898
   168dc:	mov    eax,DWORD PTR [ebp+0x8]
   168df:	mov    ecx,DWORD PTR [ebp-0x4]
   168e2:	mov    BYTE PTR [eax+0x4],0x0
   168e6:	pop    edi
   168e7:	pop    esi
   168e8:	mov    DWORD PTR [eax],ecx
   168ea:	pop    ebx
   168eb:	leave  
   168ec:	ret    0x8
   168ef:	int3   
   168f0:	int3   
   168f1:	int3   
   168f2:	int3   
   168f3:	int3   
   168f4:	mov    edi,edi
   168f6:	push   ebp
   168f7:	mov    ebp,esp
   168f9:	push   ecx
   168fa:	push   ebx
   168fb:	push   esi
   168fc:	push   edi
   168fd:	mov    edi,ecx
   168ff:	mov    eax,DWORD PTR [edi+0x4]
   16902:	mov    esi,DWORD PTR [eax+0x4]
   16905:	mov    ebx,eax
   16907:	mov    al,0x1
   16909:	jmp    0x16924
   1690b:	lea    eax,[esi+0xc]
   1690e:	push   eax
   1690f:	push   DWORD PTR [ebp+0xc]
   16912:	mov    ebx,esi
   16914:	call   0x197ae
   16919:	test   al,al
   1691b:	je     0x16921
   1691d:	mov    esi,DWORD PTR [esi]
   1691f:	jmp    0x16924
   16921:	mov    esi,DWORD PTR [esi+0x8]
   16924:	cmp    esi,DWORD PTR ds:0x780c0
   1692a:	jne    0x1690b
   1692c:	cmp    BYTE PTR [edi+0x8],0x0
   16930:	je     0x1694d
   16932:	push   DWORD PTR [ebp+0xc]
   16935:	lea    eax,[ebp+0xc]
   16938:	push   ebx
   16939:	push   esi
   1693a:	push   eax
   1693b:	mov    ecx,edi
   1693d:	call   0x16044
   16942:	mov    ecx,DWORD PTR [eax]
   16944:	mov    eax,DWORD PTR [ebp+0x8]
   16947:	mov    BYTE PTR [eax+0x4],0x1
   1694b:	jmp    0x16980
   1694d:	mov    DWORD PTR [ebp-0x4],ebx
   16950:	test   al,al
   16952:	je     0x16963
   16954:	mov    eax,DWORD PTR [edi+0x4]
   16957:	cmp    ebx,DWORD PTR [eax]
   16959:	je     0x16932
   1695b:	lea    ecx,[ebp-0x4]
   1695e:	call   0x11318
   16963:	push   DWORD PTR [ebp+0xc]
   16966:	mov    eax,DWORD PTR [ebp-0x4]
   16969:	add    eax,0xc
   1696c:	push   eax
   1696d:	call   0x197ae
   16972:	test   al,al
   16974:	jne    0x16932
   16976:	mov    eax,DWORD PTR [ebp+0x8]
   16979:	mov    ecx,DWORD PTR [ebp-0x4]
   1697c:	mov    BYTE PTR [eax+0x4],0x0
   16980:	pop    edi
   16981:	pop    esi
   16982:	mov    DWORD PTR [eax],ecx
   16984:	pop    ebx
   16985:	leave  
   16986:	ret    0x8
   16989:	int3   
   1698a:	int3   
   1698b:	int3   
   1698c:	int3   
   1698d:	int3   
   1698e:	mov    edi,edi
   16990:	push   ebp
   16991:	mov    ebp,esp
   16993:	push   ecx
   16994:	push   ebx
   16995:	push   esi
   16996:	push   edi
   16997:	mov    edi,ecx
   16999:	mov    eax,DWORD PTR [edi+0x4]
   1699c:	mov    esi,DWORD PTR [eax+0x4]
   1699f:	mov    ebx,eax
   169a1:	mov    al,0x1
   169a3:	jmp    0x169be
   169a5:	lea    eax,[esi+0xc]
   169a8:	push   eax
   169a9:	push   DWORD PTR [ebp+0xc]
   169ac:	mov    ebx,esi
   169ae:	call   0x197de
   169b3:	test   al,al
   169b5:	je     0x169bb
   169b7:	mov    esi,DWORD PTR [esi]
   169b9:	jmp    0x169be
   169bb:	mov    esi,DWORD PTR [esi+0x8]
   169be:	cmp    esi,DWORD PTR ds:0x780cc
   169c4:	jne    0x169a5
   169c6:	cmp    BYTE PTR [edi+0x8],0x0
   169ca:	je     0x169e7
   169cc:	push   DWORD PTR [ebp+0xc]
   169cf:	lea    eax,[ebp+0xc]
   169d2:	push   ebx
   169d3:	push   esi
   169d4:	push   eax
   169d5:	mov    ecx,edi
   169d7:	call   0x1619a
   169dc:	mov    ecx,DWORD PTR [eax]
   169de:	mov    eax,DWORD PTR [ebp+0x8]
   169e1:	mov    BYTE PTR [eax+0x4],0x1
   169e5:	jmp    0x16a1a
   169e7:	mov    DWORD PTR [ebp-0x4],ebx
   169ea:	test   al,al
   169ec:	je     0x169fd
   169ee:	mov    eax,DWORD PTR [edi+0x4]
   169f1:	cmp    ebx,DWORD PTR [eax]
   169f3:	je     0x169cc
   169f5:	lea    ecx,[ebp-0x4]
   169f8:	call   0x13218
   169fd:	push   DWORD PTR [ebp+0xc]
   16a00:	mov    eax,DWORD PTR [ebp-0x4]
   16a03:	add    eax,0xc
   16a06:	push   eax
   16a07:	call   0x197de
   16a0c:	test   al,al
   16a0e:	jne    0x169cc
   16a10:	mov    eax,DWORD PTR [ebp+0x8]
   16a13:	mov    ecx,DWORD PTR [ebp-0x4]
   16a16:	mov    BYTE PTR [eax+0x4],0x0
   16a1a:	pop    edi
   16a1b:	pop    esi
   16a1c:	mov    DWORD PTR [eax],ecx
   16a1e:	pop    ebx
   16a1f:	leave  
   16a20:	ret    0x8
   16a23:	int3   
   16a24:	int3   
   16a25:	int3   
   16a26:	int3   
   16a27:	int3   
   16a28:	mov    edi,edi
   16a2a:	push   ebp
   16a2b:	mov    ebp,esp
   16a2d:	sub    esp,0x10
   16a30:	push   DWORD PTR [ebp+0x8]
   16a33:	lea    ecx,[ebp-0x10]
   16a36:	call   0x162f0
   16a3b:	push   DWORD PTR [ebp+0xc]
   16a3e:	mov    ecx,DWORD PTR [ebp+0x8]
   16a41:	call   0x1631c
   16a46:	mov    ecx,DWORD PTR [ebp+0xc]
   16a49:	lea    eax,[ebp-0x10]
   16a4c:	push   eax
   16a4d:	call   0x1631c
   16a52:	lea    ecx,[ebp-0x10]
   16a55:	call   0x15984
   16a5a:	leave  
   16a5b:	ret    0x8
   16a5e:	int3   
   16a5f:	int3   
   16a60:	int3   
   16a61:	int3   
   16a62:	int3   
   16a63:	int3   
   16a64:	mov    edi,edi
   16a66:	push   esi
   16a67:	mov    esi,ecx
   16a69:	push   edi
   16a6a:	mov    BYTE PTR [esi+0x8],0x0
   16a6e:	call   0x14784
   16a73:	lea    edi,[esi+0x10]
   16a76:	mov    ecx,edi
   16a78:	call   0x128fe
   16a7d:	mov    edi,DWORD PTR [edi]
   16a7f:	push   0x0
   16a81:	push   edi
   16a82:	call   0x11b40
   16a87:	call   eax
   16a89:	pop    edi
   16a8a:	mov    eax,esi
   16a8c:	pop    esi
   16a8d:	ret    
   16a8e:	int3   
   16a8f:	int3   
   16a90:	int3   
   16a91:	int3   
   16a92:	int3   
   16a93:	int3   
   16a94:	mov    edi,edi
   16a96:	push   ebp
   16a97:	mov    ebp,esp
   16a99:	sub    esp,0x10
   16a9c:	mov    eax,DWORD PTR [ebp+0x8]
   16a9f:	mov    eax,DWORD PTR [eax]
   16aa1:	and    DWORD PTR [ebp-0x4],0x0
   16aa5:	mov    DWORD PTR [ebp-0x8],eax
   16aa8:	lea    eax,[ebp-0x8]
   16aab:	push   eax
   16aac:	lea    eax,[ebp-0x10]
   16aaf:	push   eax
   16ab0:	call   0x166e6
   16ab5:	mov    eax,DWORD PTR [eax]
   16ab7:	add    eax,0x10
   16aba:	leave  
   16abb:	ret    0x4
   16abe:	int3   
   16abf:	int3   
   16ac0:	int3   
   16ac1:	int3   
   16ac2:	int3   
   16ac3:	int3   
   16ac4:	mov    edi,edi
   16ac6:	push   esi
   16ac7:	mov    esi,ecx
   16ac9:	mov    BYTE PTR [esi+0x8],0x0
   16acd:	call   0x147e6
   16ad2:	mov    eax,esi
   16ad4:	pop    esi
   16ad5:	ret    0x8
   16ad8:	int3   
   16ad9:	int3   
   16ada:	int3   
   16adb:	int3   
   16adc:	int3   
   16add:	int3   
   16ade:	mov    edi,edi
   16ae0:	push   esi
   16ae1:	mov    esi,ecx
   16ae3:	mov    BYTE PTR [esi+0x8],0x0
   16ae7:	call   0x14928
   16aec:	mov    eax,esi
   16aee:	pop    esi
   16aef:	ret    0x8
   16af2:	int3   
   16af3:	int3   
   16af4:	int3   
   16af5:	int3   
   16af6:	int3   
   16af7:	int3   
   16af8:	mov    edi,edi
   16afa:	push   ebp
   16afb:	mov    ebp,esp
   16afd:	sub    esp,0x14
   16b00:	and    DWORD PTR [ebp-0x4],0x0
   16b04:	push   esi
   16b05:	lea    eax,[ebp-0x4]
   16b08:	push   eax
   16b09:	push   DWORD PTR [ebp+0x8]
   16b0c:	mov    esi,ecx
   16b0e:	lea    ecx,[ebp-0xc]
   16b11:	call   0x12aa4
   16b16:	push   eax
   16b17:	lea    eax,[ebp-0x14]
   16b1a:	push   eax
   16b1b:	mov    ecx,esi
   16b1d:	call   0x1672e
   16b22:	mov    ecx,DWORD PTR [ebp-0x8]
   16b25:	mov    esi,DWORD PTR [eax]
   16b27:	test   ecx,ecx
   16b29:	je     0x16b30
   16b2b:	call   0x109ae
   16b30:	lea    eax,[esi+0x10]
   16b33:	pop    esi
   16b34:	leave  
   16b35:	ret    0x4
   16b38:	int3   
   16b39:	int3   
   16b3a:	int3   
   16b3b:	int3   
   16b3c:	int3   
   16b3d:	int3   
   16b3e:	mov    edi,edi
   16b40:	push   ebp
   16b41:	mov    ebp,esp
   16b43:	push   ecx
   16b44:	push   ecx
   16b45:	push   DWORD PTR [ebp+0xc]
   16b48:	lea    eax,[ebp-0x8]
   16b4b:	push   eax
   16b4c:	call   0x167c0
   16b51:	mov    eax,DWORD PTR [ebp+0x8]
   16b54:	mov    ecx,DWORD PTR [ebp-0x8]
   16b57:	mov    DWORD PTR [eax],ecx
   16b59:	mov    cl,BYTE PTR [ebp-0x4]
   16b5c:	mov    BYTE PTR [eax+0x4],cl
   16b5f:	leave  
   16b60:	ret    0x8
   16b63:	int3   
   16b64:	int3   
   16b65:	int3   
   16b66:	int3   
   16b67:	int3   
   16b68:	mov    edi,edi
   16b6a:	push   ebp
   16b6b:	mov    ebp,esp
   16b6d:	push   ecx
   16b6e:	push   ecx
   16b6f:	push   DWORD PTR [ebp+0xc]
   16b72:	lea    eax,[ebp-0x8]
   16b75:	push   eax
   16b76:	call   0x1685a
   16b7b:	mov    eax,DWORD PTR [ebp+0x8]
   16b7e:	mov    ecx,DWORD PTR [ebp-0x8]
   16b81:	mov    DWORD PTR [eax],ecx
   16b83:	mov    cl,BYTE PTR [ebp-0x4]
   16b86:	mov    BYTE PTR [eax+0x4],cl
   16b89:	leave  
   16b8a:	ret    0x8
   16b8d:	int3   
   16b8e:	int3   
   16b8f:	int3   
   16b90:	int3   
   16b91:	int3   
   16b92:	mov    edi,edi
   16b94:	push   ebp
   16b95:	mov    ebp,esp
   16b97:	push   ecx
   16b98:	push   ecx
   16b99:	push   DWORD PTR [ebp+0xc]
   16b9c:	lea    eax,[ebp-0x8]
   16b9f:	push   eax
   16ba0:	call   0x168f4
   16ba5:	mov    eax,DWORD PTR [ebp+0x8]
   16ba8:	mov    ecx,DWORD PTR [ebp-0x8]
   16bab:	mov    DWORD PTR [eax],ecx
   16bad:	mov    cl,BYTE PTR [ebp-0x4]
   16bb0:	mov    BYTE PTR [eax+0x4],cl
   16bb3:	leave  
   16bb4:	ret    0x8
   16bb7:	int3   
   16bb8:	int3   
   16bb9:	int3   
   16bba:	int3   
   16bbb:	int3   
   16bbc:	mov    edi,edi
   16bbe:	push   ebp
   16bbf:	mov    ebp,esp
   16bc1:	push   ecx
   16bc2:	push   ecx
   16bc3:	push   DWORD PTR [ebp+0xc]
   16bc6:	lea    eax,[ebp-0x8]
   16bc9:	push   eax
   16bca:	call   0x1698e
   16bcf:	mov    eax,DWORD PTR [ebp+0x8]
   16bd2:	mov    ecx,DWORD PTR [ebp-0x8]
   16bd5:	mov    DWORD PTR [eax],ecx
   16bd7:	mov    cl,BYTE PTR [ebp-0x4]
   16bda:	mov    BYTE PTR [eax+0x4],cl
   16bdd:	leave  
   16bde:	ret    0x8
   16be1:	int3   
   16be2:	int3   
   16be3:	int3   
   16be4:	int3   
   16be5:	int3   
   16be6:	mov    edi,edi
   16be8:	push   ebp
   16be9:	mov    ebp,esp
   16beb:	push   esi
   16bec:	push   edi
   16bed:	xor    edi,edi
   16bef:	push   edi
   16bf0:	push   edi
   16bf1:	push   edi
   16bf2:	mov    esi,ecx
   16bf4:	mov    eax,DWORD PTR [esi+0x10]
   16bf7:	push   edi
   16bf8:	push   eax
   16bf9:	call   DWORD PTR ds:0x1f020
   16bff:	test   eax,eax
   16c01:	jl     0x16c1d
   16c03:	lea    eax,[ebp+0x8]
   16c06:	push   eax
   16c07:	mov    ecx,esi
   16c09:	call   0x16a94
   16c0e:	mov    ecx,DWORD PTR [ebp+0xc]
   16c11:	push   edi
   16c12:	mov    DWORD PTR [eax],ecx
   16c14:	push   DWORD PTR [esi+0x10]
   16c17:	call   DWORD PTR ds:0x1f01c
   16c1d:	pop    edi
   16c1e:	pop    esi
   16c1f:	pop    ebp
   16c20:	ret    0x8
   16c23:	int3   
   16c24:	int3   
   16c25:	int3   
   16c26:	int3   
   16c27:	int3   
   16c28:	push   0xc
   16c2a:	push   0x77188
   16c2f:	call   0x1dac8
   16c34:	xor    edi,edi
   16c36:	push   edi
   16c37:	push   edi
   16c38:	push   edi
   16c39:	push   edi
   16c3a:	push   0x77558
   16c3f:	call   DWORD PTR ds:0x1f020
   16c45:	cmp    eax,edi
   16c47:	jge    0x16c55
   16c49:	mov    eax,DWORD PTR [ebp+0x8]
   16c4c:	mov    DWORD PTR [eax+0x8],0x4
   16c53:	jmp    0x16ccb
   16c55:	mov    DWORD PTR [ebp-0x4],edi
   16c58:	mov    esi,DWORD PTR [ebp+0x8]
   16c5b:	lea    eax,[esi+0x4]
   16c5e:	mov    ecx,DWORD PTR ds:0x775b4
   16c64:	push   eax
   16c65:	cmp    DWORD PTR [esi],edi
   16c67:	jbe    0x16c94
   16c69:	call   0x16af8
   16c6e:	mov    ebx,eax
   16c70:	push   DWORD PTR [esi]
   16c72:	lea    eax,[esi+0xc]
   16c75:	push   eax
   16c76:	lea    ecx,[ebp-0x1c]
   16c79:	call   0x13426
   16c7e:	push   eax
   16c7f:	mov    ecx,ebx
   16c81:	call   0x11e24
   16c86:	mov    ecx,DWORD PTR [ebp-0x1c]
   16c89:	cmp    ecx,edi
   16c8b:	je     0x16c99
   16c8d:	call   0x109ae
   16c92:	jmp    0x16c99
   16c94:	call   0x16758
   16c99:	mov    DWORD PTR [esi+0x8],edi
   16c9c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16ca3:	jmp    0x16cbf
   16ca5:	xor    eax,eax
   16ca7:	inc    eax
   16ca8:	ret    
   16ca9:	mov    esp,DWORD PTR [ebp-0x18]
   16cac:	mov    eax,DWORD PTR [ebp+0x8]
   16caf:	mov    DWORD PTR [eax+0x8],0x4
   16cb6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16cbd:	xor    edi,edi
   16cbf:	push   edi
   16cc0:	push   0x77558
   16cc5:	call   DWORD PTR ds:0x1f01c
   16ccb:	call   0x1db0d
   16cd0:	ret    0x4
   16cd3:	int3   
   16cd4:	int3   
   16cd5:	int3   
   16cd6:	int3   
   16cd7:	int3   
   16cd8:	mov    edi,edi
   16cda:	push   ebp
   16cdb:	mov    ebp,esp
   16cdd:	sub    esp,0x10
   16ce0:	and    DWORD PTR [ebp-0xc],0x0
   16ce4:	xor    ecx,ecx
   16ce6:	mov    DWORD PTR [ebp-0x10],0x1
   16ced:	xor    eax,eax
   16cef:	mov    dl,BYTE PTR [eax+0x73504]
   16cf5:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   16cf9:	inc    ecx
   16cfa:	inc    eax
   16cfb:	and    eax,0xf
   16cfe:	cmp    ecx,0x8
   16d01:	jne    0x16cef
   16d03:	push   ecx
   16d04:	lea    eax,[ebp-0x10]
   16d07:	push   eax
   16d08:	lea    ecx,[ebp-0x8]
   16d0b:	mov    DWORD PTR [ebp-0x4],0x2
   16d12:	call   0x13426
   16d17:	mov    ecx,DWORD PTR ds:0x775b4
   16d1d:	push   eax
   16d1e:	lea    eax,[ebp-0x4]
   16d21:	push   eax
   16d22:	call   0x16af8
   16d27:	mov    ecx,eax
   16d29:	call   0x11e24
   16d2e:	mov    ecx,DWORD PTR [ebp-0x8]
   16d31:	test   ecx,ecx
   16d33:	je     0x16d3a
   16d35:	call   0x109ae
   16d3a:	leave  
   16d3b:	ret    
   16d3c:	int3   
   16d3d:	int3   
   16d3e:	int3   
   16d3f:	int3   
   16d40:	int3   
   16d41:	int3   
   16d42:	mov    edi,edi
   16d44:	push   ebp
   16d45:	mov    ebp,esp
   16d47:	push   esi
   16d48:	mov    esi,ecx
   16d4a:	lea    ecx,[esi+0x4]
   16d4d:	mov    DWORD PTR [esi],0x73514
   16d53:	mov    BYTE PTR [ecx+0x8],0x0
   16d57:	call   0x14de8
   16d5c:	lea    ecx,[esi+0x14]
   16d5f:	mov    BYTE PTR [ecx+0x8],0x0
   16d63:	call   0x1498a
   16d68:	mov    eax,DWORD PTR [ebp+0x8]
   16d6b:	mov    DWORD PTR [esi+0x24],eax
   16d6e:	mov    eax,DWORD PTR [ebp+0xc]
   16d71:	mov    DWORD PTR [esi+0x28],eax
   16d74:	mov    eax,esi
   16d76:	pop    esi
   16d77:	pop    ebp
   16d78:	ret    0x8
   16d7b:	int3   
   16d7c:	int3   
   16d7d:	int3   
   16d7e:	int3   
   16d7f:	int3   
   16d80:	mov    edi,edi
   16d82:	push   esi
   16d83:	mov    esi,ecx
   16d85:	lea    ecx,[esi+0x14]
   16d88:	mov    DWORD PTR [esi],0x73514
   16d8e:	call   0x15984
   16d93:	lea    ecx,[esi+0x4]
   16d96:	pop    esi
   16d97:	jmp    0x16694
   16d9c:	int3   
   16d9d:	int3   
   16d9e:	int3   
   16d9f:	int3   
   16da0:	int3   
   16da1:	int3   
   16da2:	mov    edi,edi
   16da4:	push   ebp
   16da5:	mov    ebp,esp
   16da7:	sub    esp,0x38
   16daa:	push   esi
   16dab:	call   0x1a1ba
   16db0:	test   al,al
   16db2:	jne    0x16dbc
   16db4:	mov    eax,DWORD PTR [ebp+0x8]
   16db7:	jmp    0x16e8d
   16dbc:	push   DWORD PTR [ebp+0xc]
   16dbf:	lea    ecx,[ebp-0x8]
   16dc2:	push   DWORD PTR [ebp+0x8]
   16dc5:	call   0x1352a
   16dca:	mov    ecx,DWORD PTR ds:0x78250
   16dd0:	lea    eax,[ebp-0x8]
   16dd3:	push   eax
   16dd4:	lea    eax,[ebp+0xc]
   16dd7:	push   eax
   16dd8:	call   0x13e8c
   16ddd:	mov    esi,DWORD PTR [ebp+0xc]
   16de0:	mov    eax,ds:0x78250
   16de5:	cmp    esi,DWORD PTR [eax+0x4]
   16de8:	jne    0x16e48
   16dea:	push   ecx
   16deb:	push   ecx
   16dec:	lea    eax,[ebp-0x8]
   16def:	mov    ecx,esp
   16df1:	push   eax
   16df2:	call   0x1354a
   16df7:	lea    eax,[ebp-0x10]
   16dfa:	push   eax
   16dfb:	call   0x1356c
   16e00:	lea    eax,[ebp-0x10]
   16e03:	push   eax
   16e04:	lea    eax,[ebp-0x8]
   16e07:	push   eax
   16e08:	lea    ecx,[ebp-0x38]
   16e0b:	call   0x138bc
   16e10:	lea    eax,[ebp-0x38]
   16e13:	push   eax
   16e14:	lea    ecx,[ebp-0x28]
   16e17:	call   0x13714
   16e1c:	mov    ecx,DWORD PTR ds:0x78250
   16e22:	lea    eax,[ebp-0x28]
   16e25:	push   eax
   16e26:	lea    eax,[ebp-0x18]
   16e29:	push   eax
   16e2a:	call   0x16bbc
   16e2f:	lea    ecx,[ebp-0x28]
   16e32:	call   0x129cc
   16e37:	lea    ecx,[ebp-0x38]
   16e3a:	call   0x129cc
   16e3f:	push   DWORD PTR [ebp-0x10]
   16e42:	call   0x10990
   16e47:	pop    ecx
   16e48:	mov    eax,DWORD PTR [ebp+0x10]
   16e4b:	movzx  eax,BYTE PTR [eax]
   16e4e:	cmp    eax,0x100
   16e53:	jge    0x16e6b
   16e55:	mov    ecx,DWORD PTR ds:0x78250
   16e5b:	lea    eax,[ebp-0x8]
   16e5e:	push   eax
   16e5f:	lea    eax,[ebp+0xc]
   16e62:	push   eax
   16e63:	call   0x13e8c
   16e68:	mov    esi,DWORD PTR [ebp+0xc]
   16e6b:	mov    eax,ds:0x78250
   16e70:	cmp    esi,DWORD PTR [eax+0x4]
   16e73:	je     0x16e7a
   16e75:	mov    esi,DWORD PTR [esi+0x14]
   16e78:	jmp    0x16e7d
   16e7a:	mov    esi,DWORD PTR [ebp+0x8]
   16e7d:	call   0x1a1d6
   16e82:	push   DWORD PTR [ebp-0x8]
   16e85:	call   0x10990
   16e8a:	pop    ecx
   16e8b:	mov    eax,esi
   16e8d:	pop    esi
   16e8e:	leave  
   16e8f:	ret    0xc
   16e92:	int3   
   16e93:	int3   
   16e94:	int3   
   16e95:	int3   
   16e96:	int3   
   16e97:	int3   
   16e98:	mov    edi,edi
   16e9a:	push   ebp
   16e9b:	mov    ebp,esp
   16e9d:	sub    esp,0x38
   16ea0:	push   esi
   16ea1:	call   0x1a1ba
   16ea6:	test   al,al
   16ea8:	jne    0x16eb2
   16eaa:	mov    eax,DWORD PTR [ebp+0x8]
   16ead:	jmp    0x16f83
   16eb2:	push   DWORD PTR [ebp+0xc]
   16eb5:	lea    ecx,[ebp-0x8]
   16eb8:	push   DWORD PTR [ebp+0x8]
   16ebb:	call   0x134e8
   16ec0:	mov    ecx,DWORD PTR ds:0x78254
   16ec6:	lea    eax,[ebp-0x8]
   16ec9:	push   eax
   16eca:	lea    eax,[ebp+0xc]
   16ecd:	push   eax
   16ece:	call   0x13a7a
   16ed3:	mov    esi,DWORD PTR [ebp+0xc]
   16ed6:	mov    eax,ds:0x78254
   16edb:	cmp    esi,DWORD PTR [eax+0x4]
   16ede:	jne    0x16f3e
   16ee0:	push   ecx
   16ee1:	push   ecx
   16ee2:	lea    eax,[ebp-0x8]
   16ee5:	mov    ecx,esp
   16ee7:	push   eax
   16ee8:	call   0x13508
   16eed:	lea    eax,[ebp-0x10]
   16ef0:	push   eax
   16ef1:	call   0x135b0
   16ef6:	lea    eax,[ebp-0x10]
   16ef9:	push   eax
   16efa:	lea    eax,[ebp-0x8]
   16efd:	push   eax
   16efe:	lea    ecx,[ebp-0x38]
   16f01:	call   0x138e4
   16f06:	lea    eax,[ebp-0x38]
   16f09:	push   eax
   16f0a:	lea    ecx,[ebp-0x28]
   16f0d:	call   0x13740
   16f12:	mov    ecx,DWORD PTR ds:0x78254
   16f18:	lea    eax,[ebp-0x28]
   16f1b:	push   eax
   16f1c:	lea    eax,[ebp-0x18]
   16f1f:	push   eax
   16f20:	call   0x16b92
   16f25:	lea    ecx,[ebp-0x28]
   16f28:	call   0x129cc
   16f2d:	lea    ecx,[ebp-0x38]
   16f30:	call   0x129cc
   16f35:	push   DWORD PTR [ebp-0x10]
   16f38:	call   0x10990
   16f3d:	pop    ecx
   16f3e:	mov    eax,DWORD PTR [ebp+0x10]
   16f41:	movzx  eax,BYTE PTR [eax]
   16f44:	cmp    eax,0x100
   16f49:	jge    0x16f61
   16f4b:	mov    ecx,DWORD PTR ds:0x78254
   16f51:	lea    eax,[ebp-0x8]
   16f54:	push   eax
   16f55:	lea    eax,[ebp+0xc]
   16f58:	push   eax
   16f59:	call   0x13a7a
   16f5e:	mov    esi,DWORD PTR [ebp+0xc]
   16f61:	mov    eax,ds:0x78254
   16f66:	cmp    esi,DWORD PTR [eax+0x4]
   16f69:	je     0x16f70
   16f6b:	mov    esi,DWORD PTR [esi+0x14]
   16f6e:	jmp    0x16f73
   16f70:	mov    esi,DWORD PTR [ebp+0x8]
   16f73:	call   0x1a1d6
   16f78:	push   DWORD PTR [ebp-0x8]
   16f7b:	call   0x10990
   16f80:	pop    ecx
   16f81:	mov    eax,esi
   16f83:	pop    esi
   16f84:	leave  
   16f85:	ret    0xc
   16f88:	int3   
   16f89:	int3   
   16f8a:	int3   
   16f8b:	int3   
   16f8c:	int3   
   16f8d:	int3   
   16f8e:	mov    edi,edi
   16f90:	push   ebp
   16f91:	mov    ebp,esp
   16f93:	sub    esp,0x90
   16f99:	push   esi
   16f9a:	mov    esi,ecx
   16f9c:	lea    ecx,[ebp-0x48]
   16f9f:	call   0x1390c
   16fa4:	push   eax
   16fa5:	push   DWORD PTR [ebp+0x8]
   16fa8:	lea    ecx,[ebp-0x90]
   16fae:	call   0x13a52
   16fb3:	push   eax
   16fb4:	lea    eax,[ebp-0x8]
   16fb7:	push   eax
   16fb8:	mov    ecx,esi
   16fba:	call   0x16b68
   16fbf:	mov    esi,DWORD PTR [eax]
   16fc1:	lea    ecx,[ebp-0x90]
   16fc7:	call   0x129b0
   16fcc:	lea    ecx,[ebp-0x48]
   16fcf:	call   0x11dca
   16fd4:	lea    eax,[esi+0x18]
   16fd7:	pop    esi
   16fd8:	leave  
   16fd9:	ret    0x4
   16fdc:	int3   
   16fdd:	int3   
   16fde:	int3   
   16fdf:	int3   
   16fe0:	int3   
   16fe1:	int3   
   16fe2:	mov    edi,edi
   16fe4:	push   ebp
   16fe5:	mov    ebp,esp
   16fe7:	sub    esp,0x20
   16fea:	push   esi
   16feb:	push   0xffffffff
   16fed:	mov    esi,ecx
   16fef:	push   0x1ded8
   16ff4:	lea    ecx,[ebp-0x8]
   16ff7:	call   0x129ea
   16ffc:	lea    eax,[ebp-0x8]
   16fff:	push   eax
   17000:	push   DWORD PTR [ebp+0x8]
   17003:	lea    ecx,[ebp-0x20]
   17006:	call   0x138e4
   1700b:	push   eax
   1700c:	lea    eax,[ebp-0x10]
   1700f:	push   eax
   17010:	mov    ecx,esi
   17012:	call   0x16b92
   17017:	mov    esi,DWORD PTR [eax]
   17019:	lea    ecx,[ebp-0x20]
   1701c:	call   0x129cc
   17021:	push   DWORD PTR [ebp-0x8]
   17024:	call   0x10990
   17029:	pop    ecx
   1702a:	lea    eax,[esi+0x14]
   1702d:	pop    esi
   1702e:	leave  
   1702f:	ret    0x4
   17032:	int3   
   17033:	int3   
   17034:	int3   
   17035:	int3   
   17036:	int3   
   17037:	int3   
   17038:	mov    edi,edi
   1703a:	push   ebp
   1703b:	mov    ebp,esp
   1703d:	push   esi
   1703e:	mov    esi,ecx
   17040:	call   0x16d80
   17045:	test   BYTE PTR [ebp+0x8],0x1
   17049:	je     0x17052
   1704b:	push   esi
   1704c:	call   0x10990
   17051:	pop    ecx
   17052:	mov    eax,esi
   17054:	pop    esi
   17055:	pop    ebp
   17056:	ret    0x4
   17059:	int3   
   1705a:	int3   
   1705b:	int3   
   1705c:	int3   
   1705d:	int3   
   1705e:	mov    edi,edi
   17060:	push   ebp
   17061:	mov    ebp,esp
   17063:	sub    esp,0x20
   17066:	push   esi
   17067:	mov    esi,ecx
   17069:	mov    eax,DWORD PTR [esi+0x24]
   1706c:	mov    ecx,DWORD PTR [esi+0x28]
   1706f:	add    ecx,eax
   17071:	cmp    DWORD PTR [esi+0x10],ecx
   17074:	jbe    0x17107
   1707a:	mov    ecx,DWORD PTR [esi+0x18]
   1707d:	mov    ecx,DWORD PTR [ecx]
   1707f:	push   edi
   17080:	mov    DWORD PTR [ebp-0x4],ecx
   17083:	test   eax,eax
   17085:	je     0x17094
   17087:	mov    edi,eax
   17089:	lea    ecx,[ebp-0x4]
   1708c:	call   0x12d5c
   17091:	dec    edi
   17092:	jne    0x17089
   17094:	mov    eax,DWORD PTR [ebp-0x4]
   17097:	mov    edi,DWORD PTR [eax+0xc]
   1709a:	lea    ecx,[ebp-0x20]
   1709d:	mov    BYTE PTR [ebp-0x18],0x0
   170a1:	call   0x1498a
   170a6:	mov    eax,DWORD PTR [esi+0x8]
   170a9:	mov    ecx,DWORD PTR [eax]
   170ab:	mov    DWORD PTR [ebp-0x4],ecx
   170ae:	cmp    ecx,eax
   170b0:	je     0x170f1
   170b2:	lea    edx,[ecx+0x58]
   170b5:	mov    eax,DWORD PTR [edx]
   170b7:	cmp    eax,edi
   170b9:	jae    0x170d0
   170bb:	push   ecx
   170bc:	lea    eax,[ebp-0x8]
   170bf:	push   eax
   170c0:	lea    ecx,[esi+0x4]
   170c3:	call   0x14b3c
   170c8:	mov    ecx,DWORD PTR [ebp-0x8]
   170cb:	mov    DWORD PTR [ebp-0x4],ecx
   170ce:	jmp    0x170ec
   170d0:	sub    eax,edi
   170d2:	mov    DWORD PTR [edx],eax
   170d4:	push   edx
   170d5:	lea    eax,[ebp-0x10]
   170d8:	push   eax
   170d9:	lea    ecx,[ebp-0x20]
   170dc:	call   0x1666a
   170e1:	lea    ecx,[ebp-0x4]
   170e4:	call   0x12ce6
   170e9:	mov    ecx,DWORD PTR [ebp-0x4]
   170ec:	cmp    ecx,DWORD PTR [esi+0x8]
   170ef:	jne    0x170b2
   170f1:	lea    eax,[ebp-0x20]
   170f4:	push   eax
   170f5:	add    esi,0x14
   170f8:	push   esi
   170f9:	call   0x16a28
   170fe:	lea    ecx,[ebp-0x20]
   17101:	call   0x15984
   17106:	pop    edi
   17107:	pop    esi
   17108:	leave  
   17109:	ret    
   1710a:	int3   
   1710b:	int3   
   1710c:	int3   
   1710d:	int3   
   1710e:	int3   
   1710f:	int3   
   17110:	mov    edi,edi
   17112:	push   ebp
   17113:	mov    ebp,esp
   17115:	sub    esp,0x20
   17118:	push   esi
   17119:	push   0xffffffff
   1711b:	mov    esi,ecx
   1711d:	push   0x1de3e
   17122:	lea    ecx,[ebp-0x8]
   17125:	call   0x12aca
   1712a:	lea    eax,[ebp-0x8]
   1712d:	push   eax
   1712e:	push   DWORD PTR [ebp+0x8]
   17131:	lea    ecx,[ebp-0x20]
   17134:	call   0x138bc
   17139:	push   eax
   1713a:	lea    eax,[ebp-0x10]
   1713d:	push   eax
   1713e:	mov    ecx,esi
   17140:	call   0x16bbc
   17145:	mov    esi,DWORD PTR [eax]
   17147:	lea    ecx,[ebp-0x20]
   1714a:	call   0x129cc
   1714f:	push   DWORD PTR [ebp-0x8]
   17152:	call   0x10990
   17157:	pop    ecx
   17158:	lea    eax,[esi+0x14]
   1715b:	pop    esi
   1715c:	leave  
   1715d:	ret    0x4
   17160:	int3   
   17161:	int3   
   17162:	int3   
   17163:	int3   
   17164:	int3   
   17165:	int3   
   17166:	mov    edi,edi
   17168:	push   ebp
   17169:	mov    ebp,esp
   1716b:	push   esi
   1716c:	push   DWORD PTR [ebp+0xc]
   1716f:	mov    esi,ecx
   17171:	push   DWORD PTR [ebp+0x8]
   17174:	call   0x16d42
   17179:	mov    eax,esi
   1717b:	pop    esi
   1717c:	pop    ebp
   1717d:	ret    0x8
   17180:	int3   
   17181:	int3   
   17182:	int3   
   17183:	int3   
   17184:	int3   
   17185:	int3   
   17186:	mov    edi,edi
   17188:	push   ebp
   17189:	mov    ebp,esp
   1718b:	sub    esp,0x838
   17191:	mov    eax,ds:0x7751c
   17196:	xor    eax,ebp
   17198:	mov    DWORD PTR [ebp-0x4],eax
   1719b:	mov    eax,DWORD PTR [ebp+0x8]
   1719e:	push   ebx
   1719f:	push   esi
   171a0:	push   edi
   171a1:	mov    DWORD PTR [ebp-0x808],eax
   171a7:	xor    eax,eax
   171a9:	push   0x7fe
   171ae:	mov    WORD PTR [ebp-0x804],ax
   171b5:	xor    ebx,ebx
   171b7:	lea    eax,[ebp-0x802]
   171bd:	push   ebx
   171be:	push   eax
   171bf:	call   0x1da8a
   171c4:	mov    eax,0x776b8
   171c9:	add    esp,0xc
   171cc:	mov    edx,eax
   171ce:	mov    cx,WORD PTR [eax]
   171d1:	inc    eax
   171d2:	inc    eax
   171d3:	cmp    cx,bx
   171d6:	jne    0x171ce
   171d8:	sub    eax,edx
   171da:	lea    edi,[ebp-0x804]
   171e0:	dec    edi
   171e1:	dec    edi
   171e2:	mov    cx,WORD PTR [edi+0x2]
   171e6:	inc    edi
   171e7:	inc    edi
   171e8:	cmp    cx,bx
   171eb:	jne    0x171e2
   171ed:	mov    ecx,eax
   171ef:	shr    ecx,0x2
   171f2:	mov    esi,edx
   171f4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   171f6:	mov    ecx,eax
   171f8:	mov    eax,DWORD PTR [ebp-0x808]
   171fe:	and    ecx,0x3
   17201:	add    eax,0x400
   17206:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17208:	mov    edx,eax
   1720a:	mov    cx,WORD PTR [eax]
   1720d:	inc    eax
   1720e:	inc    eax
   1720f:	cmp    cx,bx
   17212:	jne    0x1720a
   17214:	sub    eax,edx
   17216:	lea    edi,[ebp-0x804]
   1721c:	dec    edi
   1721d:	dec    edi
   1721e:	mov    cx,WORD PTR [edi+0x2]
   17222:	inc    edi
   17223:	inc    edi
   17224:	cmp    cx,bx
   17227:	jne    0x1721e
   17229:	mov    ecx,eax
   1722b:	shr    ecx,0x2
   1722e:	mov    esi,edx
   17230:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17232:	mov    ecx,eax
   17234:	and    ecx,0x3
   17237:	lea    eax,[ebp-0x804]
   1723d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1723f:	mov    DWORD PTR [ebp-0x818],eax
   17245:	lea    ecx,[eax+0x2]
   17248:	mov    dx,WORD PTR [eax]
   1724b:	inc    eax
   1724c:	inc    eax
   1724d:	cmp    dx,bx
   17250:	jne    0x17248
   17252:	sub    eax,ecx
   17254:	sar    eax,1
   17256:	add    eax,eax
   17258:	mov    WORD PTR [ebp-0x81a],ax
   1725f:	mov    WORD PTR [ebp-0x81c],ax
   17266:	lea    eax,[ebp-0x81c]
   1726c:	mov    DWORD PTR [ebp-0x82c],eax
   17272:	lea    eax,[ebp-0x838]
   17278:	push   eax
   17279:	xor    edi,edi
   1727b:	inc    edi
   1727c:	push   edi
   1727d:	push   ebx
   1727e:	push   ebx
   1727f:	lea    eax,[ebp-0x834]
   17285:	push   eax
   17286:	push   0xf003f
   1728b:	lea    eax,[ebp-0x80c]
   17291:	push   eax
   17292:	mov    DWORD PTR [ebp-0x834],0x18
   1729c:	mov    DWORD PTR [ebp-0x830],ebx
   172a2:	mov    DWORD PTR [ebp-0x828],0x40
   172ac:	mov    DWORD PTR [ebp-0x824],ebx
   172b2:	mov    DWORD PTR [ebp-0x820],ebx
   172b8:	call   0x118ca
   172bd:	call   eax
   172bf:	test   eax,eax
   172c1:	jl     0x17451
   172c7:	push   0x1e536
   172cc:	push   0x9
   172ce:	push   0x1e522
   172d3:	call   0x16da2
   172d8:	mov    DWORD PTR [ebp-0x810],eax
   172de:	lea    edx,[eax+0x2]
   172e1:	mov    cx,WORD PTR [eax]
   172e4:	inc    eax
   172e5:	inc    eax
   172e6:	cmp    cx,bx
   172e9:	jne    0x172e1
   172eb:	sub    eax,edx
   172ed:	sar    eax,1
   172ef:	add    eax,eax
   172f1:	mov    WORD PTR [ebp-0x812],ax
   172f8:	mov    WORD PTR [ebp-0x814],ax
   172ff:	mov    eax,DWORD PTR [ebp-0x808]
   17305:	lea    ecx,[eax+0x2]
   17308:	mov    dx,WORD PTR [eax]
   1730b:	inc    eax
   1730c:	inc    eax
   1730d:	cmp    dx,bx
   17310:	jne    0x17308
   17312:	sub    eax,ecx
   17314:	sar    eax,1
   17316:	inc    eax
   17317:	movzx  eax,ax
   1731a:	add    eax,eax
   1731c:	push   eax
   1731d:	push   DWORD PTR [ebp-0x808]
   17323:	lea    eax,[ebp-0x814]
   17329:	push   edi
   1732a:	push   ebx
   1732b:	push   eax
   1732c:	push   DWORD PTR [ebp-0x80c]
   17332:	call   0x116a8
   17337:	call   eax
   17339:	test   eax,eax
   1733b:	jl     0x17451
   17341:	push   0x1e4f8
   17346:	push   0x5
   17348:	push   0x1e4ec
   1734d:	mov    DWORD PTR [ebp-0x808],0x3
   17357:	call   0x16da2
   1735c:	mov    DWORD PTR [ebp-0x810],eax
   17362:	lea    edx,[eax+0x2]
   17365:	mov    cx,WORD PTR [eax]
   17368:	inc    eax
   17369:	inc    eax
   1736a:	cmp    cx,bx
   1736d:	jne    0x17365
   1736f:	sub    eax,edx
   17371:	push   0x4
   17373:	sar    eax,1
   17375:	pop    esi
   17376:	add    eax,eax
   17378:	push   esi
   17379:	mov    WORD PTR [ebp-0x812],ax
   17380:	mov    WORD PTR [ebp-0x814],ax
   17387:	lea    eax,[ebp-0x808]
   1738d:	push   eax
   1738e:	push   esi
   1738f:	push   ebx
   17390:	lea    eax,[ebp-0x814]
   17396:	push   eax
   17397:	push   DWORD PTR [ebp-0x80c]
   1739d:	call   0x116a8
   173a2:	call   eax
   173a4:	test   eax,eax
   173a6:	jl     0x17451
   173ac:	push   0x1e4c2
   173b1:	push   esi
   173b2:	push   0x1e4b8
   173b7:	mov    DWORD PTR [ebp-0x808],edi
   173bd:	call   0x16da2
   173c2:	mov    DWORD PTR [ebp-0x810],eax
   173c8:	lea    ecx,[eax+0x2]
   173cb:	mov    dx,WORD PTR [eax]
   173ce:	inc    eax
   173cf:	inc    eax
   173d0:	cmp    dx,bx
   173d3:	jne    0x173cb
   173d5:	sub    eax,ecx
   173d7:	sar    eax,1
   173d9:	add    eax,eax
   173db:	push   esi
   173dc:	mov    WORD PTR [ebp-0x812],ax
   173e3:	mov    WORD PTR [ebp-0x814],ax
   173ea:	lea    eax,[ebp-0x808]
   173f0:	push   eax
   173f1:	push   esi
   173f2:	push   ebx
   173f3:	lea    eax,[ebp-0x814]
   173f9:	push   eax
   173fa:	push   DWORD PTR [ebp-0x80c]
   17400:	call   0x116a8
   17405:	call   eax
   17407:	test   eax,eax
   17409:	jl     0x17451
   1740b:	lea    eax,[ebp-0x81c]
   17411:	push   eax
   17412:	call   0x118a0
   17417:	call   eax
   17419:	test   eax,eax
   1741b:	jl     0x17451
   1741d:	lea    eax,[ebp-0x804]
   17423:	push   eax
   17424:	push   DWORD PTR [ebp-0x80c]
   1742a:	call   0x1205e
   1742f:	test   al,al
   17431:	je     0x17444
   17433:	push   DWORD PTR [ebp-0x80c]
   17439:	call   0x1167e
   1743e:	call   eax
   17440:	test   eax,eax
   17442:	jl     0x17451
   17444:	push   DWORD PTR [ebp-0x80c]
   1744a:	call   0x117f8
   1744f:	call   eax
   17451:	mov    ecx,DWORD PTR [ebp-0x4]
   17454:	pop    edi
   17455:	pop    esi
   17456:	xor    ecx,ebp
   17458:	pop    ebx
   17459:	call   0x1da31
   1745e:	leave  
   1745f:	ret    0x4
   17462:	int3   
   17463:	int3   
   17464:	int3   
   17465:	int3   
   17466:	int3   
   17467:	int3   
   17468:	mov    edi,edi
   1746a:	push   ebp
   1746b:	mov    ebp,esp
   1746d:	sub    esp,0x44
   17470:	mov    eax,DWORD PTR [ebp+0xc]
   17473:	mov    eax,DWORD PTR [eax]
   17475:	push   esi
   17476:	mov    DWORD PTR [ebp-0x2c],eax
   17479:	lea    eax,[ebp-0x2c]
   1747c:	push   eax
   1747d:	lea    eax,[ebp-0x44]
   17480:	push   eax
   17481:	xor    esi,esi
   17483:	push   0x1f0fff
   17488:	lea    eax,[ebp-0x10]
   1748b:	push   eax
   1748c:	mov    DWORD PTR [ebp-0x44],0x18
   17493:	mov    DWORD PTR [ebp-0x40],esi
   17496:	mov    DWORD PTR [ebp-0x38],0x200
   1749d:	mov    DWORD PTR [ebp-0x3c],esi
   174a0:	mov    DWORD PTR [ebp-0x34],esi
   174a3:	mov    DWORD PTR [ebp-0x30],esi
   174a6:	mov    DWORD PTR [ebp-0x28],esi
   174a9:	mov    DWORD PTR [ebp-0x10],esi
   174ac:	call   0x1152e
   174b1:	call   eax
   174b3:	test   eax,eax
   174b5:	jl     0x17726
   174bb:	push   ebx
   174bc:	push   edi
   174bd:	push   0x40
   174bf:	mov    edi,0x1000
   174c4:	push   edi
   174c5:	lea    eax,[ebp-0x14]
   174c8:	push   eax
   174c9:	push   esi
   174ca:	lea    eax,[ebp-0x8]
   174cd:	push   eax
   174ce:	push   DWORD PTR [ebp-0x10]
   174d1:	mov    DWORD PTR [ebp-0x8],esi
   174d4:	mov    esi,DWORD PTR ds:0x1f03c
   174da:	mov    ebx,0x400
   174df:	mov    DWORD PTR [ebp-0x14],ebx
   174e2:	call   esi
   174e4:	test   eax,eax
   174e6:	jl     0x174f1
   174e8:	mov    eax,DWORD PTR [ebp-0x8]
   174eb:	mov    ecx,DWORD PTR [ebp+0xc]
   174ee:	mov    DWORD PTR [ecx+0x8],eax
   174f1:	and    DWORD PTR [ebp-0x18],0x0
   174f5:	push   0x4
   174f7:	push   edi
   174f8:	lea    eax,[ebp-0x14]
   174fb:	push   eax
   174fc:	push   0x0
   174fe:	lea    eax,[ebp-0x18]
   17501:	push   eax
   17502:	push   DWORD PTR [ebp-0x10]
   17505:	mov    DWORD PTR [ebp-0x14],ebx
   17508:	call   esi
   1750a:	test   eax,eax
   1750c:	jl     0x17517
   1750e:	mov    eax,DWORD PTR [ebp-0x18]
   17511:	mov    ecx,DWORD PTR [ebp+0xc]
   17514:	mov    DWORD PTR [ecx+0xc],eax
   17517:	lea    eax,[ebp-0x1c]
   1751a:	push   eax
   1751b:	push   DWORD PTR [ebp-0x2c]
   1751e:	call   0x11b6a
   17523:	call   eax
   17525:	test   eax,eax
   17527:	jl     0x17724
   1752d:	push   DWORD PTR [ebp-0x1c]
   17530:	call   0x11948
   17535:	call   eax
   17537:	mov    ebx,DWORD PTR [ebp-0x8]
   1753a:	and    DWORD PTR [ebp-0x4],0x0
   1753e:	test   ebx,ebx
   17540:	je     0x1770a
   17546:	mov    edi,DWORD PTR [ebp-0x18]
   17549:	push   0x40
   1754b:	push   0x77408
   17550:	push   edi
   17551:	mov    DWORD PTR [ebp-0xc],edi
   17554:	call   0x1983c
   17559:	push   0x1e572
   1755e:	push   0x4
   17560:	push   0x1e568
   17565:	call   0x16da2
   1756a:	mov    esi,eax
   1756c:	mov    cx,WORD PTR [eax]
   1756f:	inc    eax
   17570:	inc    eax
   17571:	test   cx,cx
   17574:	jne    0x1756c
   17576:	sub    eax,esi
   17578:	dec    edi
   17579:	dec    edi
   1757a:	mov    cx,WORD PTR [edi+0x2]
   1757e:	inc    edi
   1757f:	inc    edi
   17580:	test   cx,cx
   17583:	jne    0x1757a
   17585:	mov    ecx,eax
   17587:	shr    ecx,0x2
   1758a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1758c:	mov    ecx,eax
   1758e:	push   0x60
   17590:	and    ecx,0x3
   17593:	push   ebx
   17594:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17596:	mov    DWORD PTR [ebp-0x20],ebx
   17599:	call   0x197ee
   1759e:	push   0x68
   175a0:	push   eax
   175a1:	call   0x197ee
   175a6:	push   DWORD PTR [ebp-0xc]
   175a9:	push   eax
   175aa:	call   0x19806
   175af:	push   0xb8
   175b4:	push   eax
   175b5:	call   0x197ee
   175ba:	push   DWORD PTR ds:0x77f68
   175c0:	push   eax
   175c1:	call   0x19806
   175c6:	push   0xc00b
   175cb:	push   eax
   175cc:	call   0x19820
   175d1:	push   0x74
   175d3:	push   eax
   175d4:	call   0x197ee
   175d9:	push   0x2
   175db:	push   eax
   175dc:	call   0x197ee
   175e1:	push   0xd0ff
   175e6:	push   eax
   175e7:	call   0x19820
   175ec:	push   0x61
   175ee:	push   eax
   175ef:	call   0x197ee
   175f4:	mov    ebx,DWORD PTR [ebp+0x8]
   175f7:	mov    edi,eax
   175f9:	mov    esi,ebx
   175fb:	push   0x0
   175fd:	push   esi
   175fe:	push   edi
   175ff:	call   0x19fa0
   17604:	mov    ecx,eax
   17606:	sub    ecx,esi
   17608:	add    DWORD PTR [ebp-0x4],ecx
   1760b:	add    edi,ecx
   1760d:	cmp    DWORD PTR [ebp-0x4],0x5
   17611:	mov    esi,eax
   17613:	jb     0x175fb
   17615:	mov    eax,DWORD PTR [ebp-0x4]
   17618:	push   edi
   17619:	add    eax,ebx
   1761b:	push   eax
   1761c:	call   0x19864
   17621:	mov    eax,DWORD PTR [ebp-0x8]
   17624:	test   eax,eax
   17626:	je     0x1770a
   1762c:	add    eax,0x400
   17631:	lea    ecx,[eax-0x10]
   17634:	mov    DWORD PTR [ebp-0x24],ecx
   17637:	mov    ecx,DWORD PTR [ebp-0x4]
   1763a:	lea    esi,[eax-0xc]
   1763d:	push   esi
   1763e:	lea    edi,[eax-0x4]
   17641:	lea    ebx,[eax-0x8]
   17644:	shr    ecx,0x2
   17647:	lea    ecx,[ecx*4+0x14]
   1764e:	push   0x40
   17650:	sub    eax,ecx
   17652:	push   ebx
   17653:	mov    DWORD PTR [ebp-0xc],eax
   17656:	mov    eax,DWORD PTR [ebp+0x8]
   17659:	mov    DWORD PTR [edi],eax
   1765b:	push   edi
   1765c:	mov    DWORD PTR [ebx],0x5
   17662:	and    DWORD PTR [esi],0x0
   17665:	push   0xffffffff
   17667:	call   DWORD PTR ds:0x77ee4
   1766d:	test   eax,eax
   1766f:	jl     0x176d4
   17671:	push   DWORD PTR [ebp-0x4]
   17674:	push   0x90
   17679:	push   DWORD PTR [ebp-0xc]
   1767c:	call   0x1da8a
   17681:	mov    eax,DWORD PTR [ebp-0x20]
   17684:	sub    eax,DWORD PTR [ebp+0x8]
   17687:	add    esp,0xc
   1768a:	sub    eax,0x5
   1768d:	push   eax
   1768e:	mov    eax,DWORD PTR [ebp-0xc]
   17691:	inc    eax
   17692:	push   eax
   17693:	call   0x19806
   17698:	push   0xe9
   1769d:	push   DWORD PTR [ebp-0xc]
   176a0:	call   0x197ee
   176a5:	mov    eax,DWORD PTR [ebp-0x24]
   176a8:	and    DWORD PTR [eax],0x0
   176ab:	push   eax
   176ac:	push   DWORD PTR [ebp-0x4]
   176af:	push   DWORD PTR [ebp-0xc]
   176b2:	push   DWORD PTR [ebp+0x8]
   176b5:	push   0xffffffff
   176b7:	call   DWORD PTR ds:0x77ed8
   176bd:	mov    eax,DWORD PTR [ebp+0xc]
   176c0:	mov    BYTE PTR [eax+0x10],0x1
   176c4:	lea    eax,[ebp-0x20]
   176c7:	push   eax
   176c8:	push   DWORD PTR [esi]
   176ca:	push   ebx
   176cb:	push   edi
   176cc:	push   0xffffffff
   176ce:	call   DWORD PTR ds:0x77ee4
   176d4:	mov    esi,DWORD PTR [ebp-0x8]
   176d7:	test   esi,esi
   176d9:	je     0x1770a
   176db:	lea    eax,[esi+0x400]
   176e1:	lea    ecx,[eax-0x4]
   176e4:	lea    edx,[eax-0x8]
   176e7:	add    eax,0xfffffff4
   176ea:	push   eax
   176eb:	push   0x20
   176ed:	push   edx
   176ee:	mov    DWORD PTR [ecx],esi
   176f0:	push   ecx
   176f1:	mov    DWORD PTR [edx],0x400
   176f7:	and    DWORD PTR [eax],0x0
   176fa:	push   0xffffffff
   176fc:	call   DWORD PTR ds:0x77ee4
   17702:	test   eax,eax
   17704:	jge    0x1770a
   17706:	and    DWORD PTR [ebp-0x8],0x0
   1770a:	call   0x1191e
   1770f:	call   eax
   17711:	mov    ecx,DWORD PTR [ebp-0x1c]
   17714:	call   DWORD PTR ds:0x1f05c
   1771a:	push   DWORD PTR [ebp-0x10]
   1771d:	call   0x117f8
   17722:	call   eax
   17724:	pop    edi
   17725:	pop    ebx
   17726:	pop    esi
   17727:	leave  
   17728:	ret    0x8
   1772b:	int3   
   1772c:	int3   
   1772d:	int3   
   1772e:	int3   
   1772f:	int3   
   17730:	mov    edi,edi
   17732:	push   ebp
   17733:	mov    ebp,esp
   17735:	cmp    DWORD PTR ds:0x77f68,0x0
   1773c:	push   esi
   1773d:	mov    esi,DWORD PTR [ebp+0x10]
   17740:	jne    0x1780b
   17746:	push   0x1e70a
   1774b:	push   0xc
   1774d:	push   0x1e6f0
   17752:	call   0x16da2
   17757:	push   eax
   17758:	push   DWORD PTR [ebp+0x8]
   1775b:	call   0x10de0
   17760:	test   al,al
   17762:	je     0x1780b
   17768:	mov    eax,DWORD PTR [esi+0x4]
   1776b:	push   0x1e6c8
   17770:	push   0xc
   17772:	push   0x1e6ba
   17777:	mov    ds:0x77f60,eax
   1777c:	call   0x16e98
   17781:	push   eax
   17782:	push   DWORD PTR [esi+0x4]
   17785:	call   0x122c2
   1778a:	push   0x1e694
   1778f:	push   0xc
   17791:	push   0x1e686
   17796:	mov    ds:0x77f68,eax
   1779b:	call   0x16e98
   177a0:	push   eax
   177a1:	push   DWORD PTR [esi+0x4]
   177a4:	call   0x122c2
   177a9:	push   0x1e654
   177ae:	push   0xc
   177b0:	push   0x1e646
   177b5:	mov    ds:0x77f6c,eax
   177ba:	call   0x16e98
   177bf:	push   eax
   177c0:	push   DWORD PTR [esi+0x4]
   177c3:	call   0x122c2
   177c8:	push   0x1e61c
   177cd:	push   0x5
   177cf:	push   0x1e616
   177d4:	mov    ds:0x77f70,eax
   177d9:	call   0x16e98
   177de:	push   eax
   177df:	push   DWORD PTR [esi+0x4]
   177e2:	call   0x122c2
   177e7:	push   0x1e5f2
   177ec:	push   0x4
   177ee:	push   0x1e5ec
   177f3:	mov    ds:0x77f74,eax
   177f8:	call   0x16e98
   177fd:	push   eax
   177fe:	push   DWORD PTR [esi+0x4]
   17801:	call   0x122c2
   17806:	mov    ds:0x77f78,eax
   1780b:	cmp    DWORD PTR ds:0x77f64,0x0
   17812:	jne    0x1783a
   17814:	push   0x1e5c6
   17819:	push   0x9
   1781b:	push   0x1e5b2
   17820:	call   0x16da2
   17825:	push   eax
   17826:	push   DWORD PTR [ebp+0x8]
   17829:	call   0x10de0
   1782e:	test   al,al
   17830:	je     0x1783a
   17832:	mov    eax,DWORD PTR [esi+0x4]
   17835:	mov    ds:0x77f64,eax
   1783a:	pop    esi
   1783b:	pop    ebp
   1783c:	ret    0xc
   1783f:	int3   
   17840:	int3   
   17841:	int3   
   17842:	int3   
   17843:	int3   
   17844:	mov    edi,edi
   17846:	push   ebp
   17847:	mov    ebp,esp
   17849:	sub    esp,0x4c
   1784c:	push   ebx
   1784d:	push   esi
   1784e:	push   edi
   1784f:	push   DWORD PTR [ebp+0xc]
   17852:	push   DWORD PTR [ebp+0x8]
   17855:	call   DWORD PTR ds:0x77ef0
   1785b:	mov    DWORD PTR [ebp-0x8],eax
   1785e:	xor    eax,eax
   17860:	xor    ebx,ebx
   17862:	mov    DWORD PTR [ebp-0x30],ebx
   17865:	lea    edi,[ebp-0x2c]
   17868:	stos   DWORD PTR es:[edi],eax
   17869:	stos   DWORD PTR es:[edi],eax
   1786a:	stos   DWORD PTR es:[edi],eax
   1786b:	stos   DWORD PTR es:[edi],eax
   1786c:	xor    eax,eax
   1786e:	mov    DWORD PTR [ebp-0x1c],ebx
   17871:	lea    edi,[ebp-0x18]
   17874:	stos   DWORD PTR es:[edi],eax
   17875:	stos   DWORD PTR es:[edi],eax
   17876:	stos   DWORD PTR es:[edi],eax
   17877:	stos   DWORD PTR es:[edi],eax
   17878:	lea    eax,[ebp-0x30]
   1787b:	push   eax
   1787c:	push   ebx
   1787d:	call   0x10e6e
   17882:	mov    BYTE PTR [ebp+0xf],al
   17885:	lea    eax,[ebp-0x1c]
   17888:	push   eax
   17889:	push   0x1
   1788b:	call   0x10e6e
   17890:	mov    BYTE PTR [ebp-0x1],al
   17893:	cmp    BYTE PTR [ebp+0xf],bl
   17896:	je     0x178f7
   17898:	mov    esi,DWORD PTR [ebp-0x30]
   1789b:	cmp    esi,ebx
   1789d:	je     0x178f7
   1789f:	push   0x6
   178a1:	pop    ecx
   178a2:	push   ebx
   178a3:	xor    eax,eax
   178a5:	mov    DWORD PTR [ebp-0x4c],ebx
   178a8:	lea    edi,[ebp-0x48]
   178ab:	push   0x1c
   178ad:	rep stos DWORD PTR es:[edi],eax
   178af:	lea    eax,[ebp-0x4c]
   178b2:	push   eax
   178b3:	push   ebx
   178b4:	push   DWORD PTR [ebp+0x8]
   178b7:	call   0x117ce
   178bc:	call   eax
   178be:	cmp    DWORD PTR [ebp-0x44],esi
   178c1:	jne    0x178f7
   178c3:	push   ebx
   178c4:	push   0x4
   178c6:	lea    eax,[ebp+0xc]
   178c9:	push   eax
   178ca:	push   0x9
   178cc:	push   DWORD PTR [ebp+0x8]
   178cf:	mov    DWORD PTR [ebp+0xc],ebx
   178d2:	call   0x117ce
   178d7:	call   eax
   178d9:	test   eax,eax
   178db:	jge    0x178e0
   178dd:	mov    DWORD PTR [ebp+0xc],ebx
   178e0:	cmp    DWORD PTR [ebp+0xc],ebx
   178e3:	je     0x178f7
   178e5:	lea    eax,[ebp-0x30]
   178e8:	push   eax
   178e9:	push   DWORD PTR [ebp+0xc]
   178ec:	call   0x17468
   178f1:	push   ebx
   178f2:	call   0x10f04
   178f7:	cmp    BYTE PTR [ebp-0x1],bl
   178fa:	je     0x17965
   178fc:	mov    esi,DWORD PTR [ebp-0x1c]
   178ff:	cmp    esi,ebx
   17901:	je     0x17965
   17903:	cmp    BYTE PTR [ebp-0xc],bl
   17906:	jne    0x17965
   17908:	push   0x6
   1790a:	pop    ecx
   1790b:	push   ebx
   1790c:	xor    eax,eax
   1790e:	mov    DWORD PTR [ebp-0x4c],ebx
   17911:	lea    edi,[ebp-0x48]
   17914:	push   0x1c
   17916:	rep stos DWORD PTR es:[edi],eax
   17918:	lea    eax,[ebp-0x4c]
   1791b:	push   eax
   1791c:	push   ebx
   1791d:	push   DWORD PTR [ebp+0x8]
   17920:	call   0x117ce
   17925:	call   eax
   17927:	cmp    DWORD PTR [ebp-0x44],esi
   1792a:	jne    0x17965
   1792c:	push   ebx
   1792d:	push   0x4
   1792f:	lea    eax,[ebp+0xc]
   17932:	push   eax
   17933:	push   0x9
   17935:	push   DWORD PTR [ebp+0x8]
   17938:	mov    DWORD PTR [ebp+0xc],ebx
   1793b:	call   0x117ce
   17940:	call   eax
   17942:	test   eax,eax
   17944:	jge    0x17949
   17946:	mov    DWORD PTR [ebp+0xc],ebx
   17949:	cmp    DWORD PTR [ebp+0xc],ebx
   1794c:	je     0x17965
   1794e:	lea    eax,[ebp-0x1c]
   17951:	push   eax
   17952:	push   DWORD PTR [ebp+0xc]
   17955:	call   0x123ce
   1795a:	lea    eax,[ebp-0x1c]
   1795d:	push   eax
   1795e:	push   0x1
   17960:	call   0x10ebc
   17965:	mov    eax,DWORD PTR [ebp-0x8]
   17968:	pop    edi
   17969:	pop    esi
   1796a:	pop    ebx
   1796b:	leave  
   1796c:	ret    0x8
   1796f:	int3   
   17970:	int3   
   17971:	int3   
   17972:	int3   
   17973:	int3   
   17974:	push   0x24
   17976:	push   0x771a8
   1797b:	call   0x1dac8
   17980:	xor    ebx,ebx
   17982:	push   ebx
   17983:	push   ebx
   17984:	push   ebx
   17985:	push   ebx
   17986:	push   0x77558
   1798b:	call   DWORD PTR ds:0x1f020
   17991:	cmp    eax,ebx
   17993:	jge    0x179a4
   17995:	mov    eax,DWORD PTR [ebp+0x8]
   17998:	mov    DWORD PTR [eax+0x8],0x4
   1799f:	jmp    0x17a5c
   179a4:	mov    DWORD PTR [ebp-0x4],ebx
   179a7:	push   0xffffffff
   179a9:	mov    esi,DWORD PTR [ebp+0x8]
   179ac:	lea    eax,[esi+0xc]
   179af:	push   eax
   179b0:	lea    ecx,[ebp-0x24]
   179b3:	call   0x134e8
   179b8:	push   0xffffffff
   179ba:	mov    eax,DWORD PTR [ebp-0x20]
   179bd:	lea    eax,[eax+esi*1+0xd]
   179c1:	push   eax
   179c2:	lea    ecx,[ebp-0x2c]
   179c5:	call   0x134e8
   179ca:	push   0xffffffff
   179cc:	push   0x1ded8
   179d1:	lea    ecx,[ebp-0x34]
   179d4:	call   0x129ea
   179d9:	lea    eax,[ebp-0x34]
   179dc:	push   eax
   179dd:	lea    eax,[ebp-0x2c]
   179e0:	push   eax
   179e1:	call   0x197be
   179e6:	mov    BYTE PTR [ebp-0x19],al
   179e9:	push   DWORD PTR [ebp-0x34]
   179ec:	call   0x10990
   179f1:	pop    ecx
   179f2:	lea    eax,[ebp-0x24]
   179f5:	mov    ecx,DWORD PTR ds:0x77528
   179fb:	push   eax
   179fc:	cmp    BYTE PTR [ebp-0x19],bl
   179ff:	je     0x17a08
   17a01:	call   0x15a0c
   17a06:	jmp    0x17a18
   17a08:	call   0x16fe2
   17a0d:	lea    ecx,[ebp-0x2c]
   17a10:	push   ecx
   17a11:	mov    ecx,eax
   17a13:	call   0x128b4
   17a18:	mov    DWORD PTR [esi+0x8],ebx
   17a1b:	push   DWORD PTR [ebp-0x2c]
   17a1e:	call   0x10990
   17a23:	push   DWORD PTR [ebp-0x24]
   17a26:	call   0x10990
   17a2b:	pop    ecx
   17a2c:	pop    ecx
   17a2d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a34:	jmp    0x17a50
   17a36:	xor    eax,eax
   17a38:	inc    eax
   17a39:	ret    
   17a3a:	mov    esp,DWORD PTR [ebp-0x18]
   17a3d:	mov    eax,DWORD PTR [ebp+0x8]
   17a40:	mov    DWORD PTR [eax+0x8],0x4
   17a47:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a4e:	xor    ebx,ebx
   17a50:	push   ebx
   17a51:	push   0x77558
   17a56:	call   DWORD PTR ds:0x1f01c
   17a5c:	call   0x1db0d
   17a61:	ret    0x4
   17a64:	int3   
   17a65:	int3   
   17a66:	int3   
   17a67:	int3   
   17a68:	int3   
   17a69:	int3   
   17a6a:	push   0x848
   17a6f:	push   0x771c8
   17a74:	call   0x1ddd0
   17a79:	xor    ebx,ebx
   17a7b:	mov    BYTE PTR [ebp-0x81d],bl
   17a81:	xor    eax,eax
   17a83:	mov    WORD PTR [ebp-0x81c],ax
   17a8a:	push   0x7fe
   17a8f:	push   ebx
   17a90:	lea    eax,[ebp-0x81a]
   17a96:	push   eax
   17a97:	call   0x1da8a
   17a9c:	add    esp,0xc
   17a9f:	push   0x1e78a
   17aa4:	push   0x15
   17aa6:	push   0x1e75e
   17aab:	call   0x16da2
   17ab0:	mov    edx,eax
   17ab2:	mov    cx,WORD PTR [eax]
   17ab5:	inc    eax
   17ab6:	inc    eax
   17ab7:	cmp    cx,bx
   17aba:	jne    0x17ab2
   17abc:	sub    eax,edx
   17abe:	lea    edi,[ebp-0x81c]
   17ac4:	dec    edi
   17ac5:	dec    edi
   17ac6:	mov    cx,WORD PTR [edi+0x2]
   17aca:	inc    edi
   17acb:	inc    edi
   17acc:	cmp    cx,bx
   17acf:	jne    0x17ac6
   17ad1:	mov    ecx,eax
   17ad3:	mov    esi,edx
   17ad5:	shr    ecx,0x2
   17ad8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ada:	mov    ecx,eax
   17adc:	and    ecx,0x3
   17adf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ae1:	mov    eax,0x77408
   17ae6:	mov    edx,eax
   17ae8:	mov    cx,WORD PTR [eax]
   17aeb:	inc    eax
   17aec:	inc    eax
   17aed:	cmp    cx,bx
   17af0:	jne    0x17ae8
   17af2:	sub    eax,edx
   17af4:	lea    edi,[ebp-0x81c]
   17afa:	dec    edi
   17afb:	dec    edi
   17afc:	mov    cx,WORD PTR [edi+0x2]
   17b00:	inc    edi
   17b01:	inc    edi
   17b02:	cmp    cx,bx
   17b05:	jne    0x17afc
   17b07:	mov    ecx,eax
   17b09:	mov    esi,edx
   17b0b:	shr    ecx,0x2
   17b0e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b10:	mov    ecx,eax
   17b12:	and    ecx,0x3
   17b15:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b17:	push   0x1e73c
   17b1c:	push   0x4
   17b1e:	push   0x1e568
   17b23:	call   0x16da2
   17b28:	mov    edx,eax
   17b2a:	mov    cx,WORD PTR [eax]
   17b2d:	inc    eax
   17b2e:	inc    eax
   17b2f:	cmp    cx,bx
   17b32:	jne    0x17b2a
   17b34:	sub    eax,edx
   17b36:	lea    edi,[ebp-0x81c]
   17b3c:	dec    edi
   17b3d:	dec    edi
   17b3e:	mov    cx,WORD PTR [edi+0x2]
   17b42:	inc    edi
   17b43:	inc    edi
   17b44:	cmp    cx,bx
   17b47:	jne    0x17b3e
   17b49:	mov    ecx,eax
   17b4b:	mov    esi,edx
   17b4d:	shr    ecx,0x2
   17b50:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b52:	mov    ecx,eax
   17b54:	and    ecx,0x3
   17b57:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b59:	lea    eax,[ebp-0x81c]
   17b5f:	push   eax
   17b60:	lea    eax,[ebp-0x858]
   17b66:	push   eax
   17b67:	call   DWORD PTR ds:0x1f008
   17b6d:	mov    DWORD PTR [ebp-0x824],ebx
   17b73:	xor    eax,eax
   17b75:	lea    edi,[ebp-0x84c]
   17b7b:	stos   DWORD PTR es:[edi],eax
   17b7c:	stos   DWORD PTR es:[edi],eax
   17b7d:	stos   DWORD PTR es:[edi],eax
   17b7e:	stos   DWORD PTR es:[edi],eax
   17b7f:	stos   DWORD PTR es:[edi],eax
   17b80:	mov    DWORD PTR [ebp-0x830],ebx
   17b86:	xor    eax,eax
   17b88:	lea    edi,[ebp-0x82c]
   17b8e:	stos   DWORD PTR es:[edi],eax
   17b8f:	mov    DWORD PTR [ebp-0x850],0x18
   17b99:	mov    DWORD PTR [ebp-0x84c],ebx
   17b9f:	mov    DWORD PTR [ebp-0x844],0x240
   17ba9:	lea    eax,[ebp-0x858]
   17baf:	mov    DWORD PTR [ebp-0x848],eax
   17bb5:	mov    DWORD PTR [ebp-0x840],ebx
   17bbb:	mov    DWORD PTR [ebp-0x83c],ebx
   17bc1:	push   ebx
   17bc2:	push   ebx
   17bc3:	push   0x60
   17bc5:	push   0x1
   17bc7:	push   ebx
   17bc8:	push   0x80
   17bcd:	push   ebx
   17bce:	lea    eax,[ebp-0x830]
   17bd4:	push   eax
   17bd5:	lea    eax,[ebp-0x850]
   17bdb:	push   eax
   17bdc:	push   0x100001
   17be1:	lea    eax,[ebp-0x824]
   17be7:	push   eax
   17be8:	call   0x116fc
   17bed:	call   eax
   17bef:	cmp    eax,ebx
   17bf1:	jge    0x17bfa
   17bf3:	xor    al,al
   17bf5:	jmp    0x17c90
   17bfa:	mov    DWORD PTR [ebp-0x4],ebx
   17bfd:	mov    esi,DWORD PTR [ebp+0xc]
   17c00:	mov    eax,0x10000
   17c05:	cmp    esi,eax
   17c07:	jbe    0x17c0b
   17c09:	mov    esi,eax
   17c0b:	push   esi
   17c0c:	call   0x11d96
   17c11:	pop    ecx
   17c12:	mov    DWORD PTR [ebp-0x828],eax
   17c18:	mov    DWORD PTR [ebp-0x838],ebx
   17c1e:	xor    eax,eax
   17c20:	lea    edi,[ebp-0x834]
   17c26:	stos   DWORD PTR es:[edi],eax
   17c27:	push   ebx
   17c28:	lea    eax,[ebp-0x838]
   17c2e:	push   eax
   17c2f:	push   esi
   17c30:	push   DWORD PTR [ebp-0x828]
   17c36:	lea    eax,[ebp-0x830]
   17c3c:	push   eax
   17c3d:	push   ebx
   17c3e:	push   ebx
   17c3f:	push   ebx
   17c40:	push   DWORD PTR [ebp-0x824]
   17c46:	call   0x1199c
   17c4b:	call   eax
   17c4d:	cmp    eax,ebx
   17c4f:	jl     0x17c76
   17c51:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c57:	mov    edi,DWORD PTR [ebp+0x8]
   17c5a:	mov    esi,DWORD PTR [ebp-0x828]
   17c60:	xor    eax,eax
   17c62:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c64:	sete   al
   17c67:	mov    BYTE PTR [ebp-0x81d],al
   17c6d:	jmp    0x17c76
   17c6f:	xor    eax,eax
   17c71:	inc    eax
   17c72:	ret    
   17c73:	mov    esp,DWORD PTR [ebp-0x18]
   17c76:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17c7d:	push   DWORD PTR [ebp-0x824]
   17c83:	call   0x117f8
   17c88:	call   eax
   17c8a:	mov    al,BYTE PTR [ebp-0x81d]
   17c90:	call   0x1de18
   17c95:	ret    0x8
   17c98:	int3   
   17c99:	int3   
   17c9a:	int3   
   17c9b:	int3   
   17c9c:	int3   
   17c9d:	int3   
   17c9e:	push   0x874
   17ca3:	push   0x771e8
   17ca8:	call   0x1ddd0
   17cad:	mov    eax,DWORD PTR [ebp+0x8]
   17cb0:	mov    DWORD PTR [ebp-0x830],eax
   17cb6:	xor    ebx,ebx
   17cb8:	mov    BYTE PTR [ebp-0x81d],bl
   17cbe:	xor    eax,eax
   17cc0:	mov    WORD PTR [ebp-0x81c],ax
   17cc7:	push   0x7fe
   17ccc:	push   ebx
   17ccd:	lea    eax,[ebp-0x81a]
   17cd3:	push   eax
   17cd4:	call   0x1da8a
   17cd9:	add    esp,0xc
   17cdc:	push   0x1e7f0
   17ce1:	push   0x15
   17ce3:	push   0x1e75e
   17ce8:	call   0x16da2
   17ced:	mov    edx,eax
   17cef:	mov    cx,WORD PTR [eax]
   17cf2:	inc    eax
   17cf3:	inc    eax
   17cf4:	cmp    cx,bx
   17cf7:	jne    0x17cef
   17cf9:	sub    eax,edx
   17cfb:	lea    edi,[ebp-0x81c]
   17d01:	dec    edi
   17d02:	dec    edi
   17d03:	mov    cx,WORD PTR [edi+0x2]
   17d07:	inc    edi
   17d08:	inc    edi
   17d09:	cmp    cx,bx
   17d0c:	jne    0x17d03
   17d0e:	mov    ecx,eax
   17d10:	mov    esi,edx
   17d12:	shr    ecx,0x2
   17d15:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d17:	mov    ecx,eax
   17d19:	and    ecx,0x3
   17d1c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d1e:	mov    eax,0x77408
   17d23:	mov    edx,eax
   17d25:	mov    cx,WORD PTR [eax]
   17d28:	inc    eax
   17d29:	inc    eax
   17d2a:	cmp    cx,bx
   17d2d:	jne    0x17d25
   17d2f:	sub    eax,edx
   17d31:	lea    edi,[ebp-0x81c]
   17d37:	dec    edi
   17d38:	dec    edi
   17d39:	mov    cx,WORD PTR [edi+0x2]
   17d3d:	inc    edi
   17d3e:	inc    edi
   17d3f:	cmp    cx,bx
   17d42:	jne    0x17d39
   17d44:	mov    ecx,eax
   17d46:	mov    esi,edx
   17d48:	shr    ecx,0x2
   17d4b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d4d:	mov    ecx,eax
   17d4f:	and    ecx,0x3
   17d52:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d54:	push   0x1e7be
   17d59:	push   0x4
   17d5b:	push   0x1e568
   17d60:	call   0x16da2
   17d65:	mov    edx,eax
   17d67:	mov    cx,WORD PTR [eax]
   17d6a:	inc    eax
   17d6b:	inc    eax
   17d6c:	cmp    cx,bx
   17d6f:	jne    0x17d67
   17d71:	sub    eax,edx
   17d73:	lea    edi,[ebp-0x81c]
   17d79:	dec    edi
   17d7a:	dec    edi
   17d7b:	mov    cx,WORD PTR [edi+0x2]
   17d7f:	inc    edi
   17d80:	inc    edi
   17d81:	cmp    cx,bx
   17d84:	jne    0x17d7b
   17d86:	mov    ecx,eax
   17d88:	mov    esi,edx
   17d8a:	shr    ecx,0x2
   17d8d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d8f:	mov    ecx,eax
   17d91:	and    ecx,0x3
   17d94:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d96:	lea    eax,[ebp-0x81c]
   17d9c:	push   eax
   17d9d:	lea    eax,[ebp-0x884]
   17da3:	push   eax
   17da4:	call   DWORD PTR ds:0x1f008
   17daa:	mov    DWORD PTR [ebp-0x824],ebx
   17db0:	xor    eax,eax
   17db2:	lea    edi,[ebp-0x850]
   17db8:	stos   DWORD PTR es:[edi],eax
   17db9:	stos   DWORD PTR es:[edi],eax
   17dba:	stos   DWORD PTR es:[edi],eax
   17dbb:	stos   DWORD PTR es:[edi],eax
   17dbc:	stos   DWORD PTR es:[edi],eax
   17dbd:	mov    DWORD PTR [ebp-0x82c],ebx
   17dc3:	xor    eax,eax
   17dc5:	lea    edi,[ebp-0x828]
   17dcb:	stos   DWORD PTR es:[edi],eax
   17dcc:	mov    DWORD PTR [ebp-0x854],0x18
   17dd6:	mov    DWORD PTR [ebp-0x850],ebx
   17ddc:	mov    DWORD PTR [ebp-0x848],0x240
   17de6:	lea    eax,[ebp-0x884]
   17dec:	mov    DWORD PTR [ebp-0x84c],eax
   17df2:	mov    DWORD PTR [ebp-0x844],ebx
   17df8:	mov    DWORD PTR [ebp-0x840],ebx
   17dfe:	push   ebx
   17dff:	push   ebx
   17e00:	push   0x60
   17e02:	push   ebx
   17e03:	push   ebx
   17e04:	push   0x80
   17e09:	push   ebx
   17e0a:	lea    eax,[ebp-0x82c]
   17e10:	push   eax
   17e11:	lea    eax,[ebp-0x854]
   17e17:	push   eax
   17e18:	push   0x100002
   17e1d:	lea    eax,[ebp-0x824]
   17e23:	push   eax
   17e24:	call   0x116fc
   17e29:	call   eax
   17e2b:	cmp    eax,ebx
   17e2d:	jge    0x17e36
   17e2f:	xor    al,al
   17e31:	jmp    0x17f3c
   17e36:	mov    DWORD PTR [ebp-0x4],ebx
   17e39:	xor    eax,eax
   17e3b:	lea    edi,[ebp-0x82c]
   17e41:	stos   DWORD PTR es:[edi],eax
   17e42:	stos   DWORD PTR es:[edi],eax
   17e43:	xor    edi,edi
   17e45:	mov    esi,0x10000
   17e4a:	mov    DWORD PTR [ebp-0x834],edi
   17e50:	mov    eax,DWORD PTR [ebp+0xc]
   17e53:	cmp    edi,eax
   17e55:	jae    0x17ea0
   17e57:	mov    DWORD PTR [ebp-0x83c],ebx
   17e5d:	mov    DWORD PTR [ebp-0x83c],edi
   17e63:	mov    DWORD PTR [ebp-0x838],ebx
   17e69:	sub    eax,edi
   17e6b:	cmp    eax,esi
   17e6d:	jb     0x17e71
   17e6f:	mov    eax,esi
   17e71:	push   ebx
   17e72:	push   ebx
   17e73:	push   eax
   17e74:	mov    eax,DWORD PTR [ebp-0x830]
   17e7a:	add    eax,edi
   17e7c:	push   eax
   17e7d:	lea    eax,[ebp-0x82c]
   17e83:	push   eax
   17e84:	push   ebx
   17e85:	push   ebx
   17e86:	push   ebx
   17e87:	push   DWORD PTR [ebp-0x824]
   17e8d:	call   0x119f0
   17e92:	call   eax
   17e94:	cmp    eax,ebx
   17e96:	jl     0x17f22
   17e9c:	add    edi,esi
   17e9e:	jmp    0x17e4a
   17ea0:	mov    BYTE PTR [ebp-0x81d],0x1
   17ea7:	mov    DWORD PTR [ebp-0x87c],ebx
   17ead:	push   0x9
   17eaf:	pop    ecx
   17eb0:	xor    eax,eax
   17eb2:	lea    edi,[ebp-0x878]
   17eb8:	rep stos DWORD PTR es:[edi],eax
   17eba:	mov    eax,DWORD PTR [ebp+0x10]
   17ebd:	mov    DWORD PTR [ebp-0x86c],eax
   17ec3:	mov    ecx,DWORD PTR [ebp+0x14]
   17ec6:	mov    DWORD PTR [ebp-0x868],ecx
   17ecc:	mov    DWORD PTR [ebp-0x874],eax
   17ed2:	mov    DWORD PTR [ebp-0x870],ecx
   17ed8:	mov    DWORD PTR [ebp-0x864],eax
   17ede:	mov    DWORD PTR [ebp-0x860],ecx
   17ee4:	mov    DWORD PTR [ebp-0x87c],eax
   17eea:	mov    DWORD PTR [ebp-0x878],ecx
   17ef0:	mov    DWORD PTR [ebp-0x85c],0x80
   17efa:	push   0x4
   17efc:	push   0x28
   17efe:	lea    eax,[ebp-0x87c]
   17f04:	push   eax
   17f05:	lea    eax,[ebp-0x82c]
   17f0b:	push   eax
   17f0c:	push   DWORD PTR [ebp-0x824]
   17f12:	call   0x119c6
   17f17:	call   eax
   17f19:	jmp    0x17f22
   17f1b:	xor    eax,eax
   17f1d:	inc    eax
   17f1e:	ret    
   17f1f:	mov    esp,DWORD PTR [ebp-0x18]
   17f22:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f29:	push   DWORD PTR [ebp-0x824]
   17f2f:	call   0x117f8
   17f34:	call   eax
   17f36:	mov    al,BYTE PTR [ebp-0x81d]
   17f3c:	call   0x1de18
   17f41:	ret    0x10
   17f44:	int3   
   17f45:	int3   
   17f46:	int3   
   17f47:	int3   
   17f48:	int3   
   17f49:	int3   
   17f4a:	push   0x874
   17f4f:	push   0x77208
   17f54:	call   0x1ddd0
   17f59:	xor    ebx,ebx
   17f5b:	mov    BYTE PTR [ebp-0x81d],bl
   17f61:	mov    BYTE PTR [ebp-0x81e],bl
   17f67:	mov    DWORD PTR [ebp-0x828],ebx
   17f6d:	mov    DWORD PTR [ebp-0x824],ebx
   17f73:	xor    eax,eax
   17f75:	mov    WORD PTR [ebp-0x81c],ax
   17f7c:	push   0x7fe
   17f81:	push   ebx
   17f82:	lea    eax,[ebp-0x81a]
   17f88:	push   eax
   17f89:	call   0x1da8a
   17f8e:	add    esp,0xc
   17f91:	push   0x1e8b4
   17f96:	push   0x1d
   17f98:	push   0x1e878
   17f9d:	call   0x16da2
   17fa2:	mov    edx,eax
   17fa4:	mov    cx,WORD PTR [eax]
   17fa7:	inc    eax
   17fa8:	inc    eax
   17fa9:	cmp    cx,bx
   17fac:	jne    0x17fa4
   17fae:	sub    eax,edx
   17fb0:	lea    edi,[ebp-0x81c]
   17fb6:	dec    edi
   17fb7:	dec    edi
   17fb8:	mov    cx,WORD PTR [edi+0x2]
   17fbc:	inc    edi
   17fbd:	inc    edi
   17fbe:	cmp    cx,bx
   17fc1:	jne    0x17fb8
   17fc3:	mov    ecx,eax
   17fc5:	mov    esi,edx
   17fc7:	shr    ecx,0x2
   17fca:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fcc:	mov    ecx,eax
   17fce:	and    ecx,0x3
   17fd1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17fd3:	mov    eax,0x77448
   17fd8:	mov    edx,eax
   17fda:	mov    cx,WORD PTR [eax]
   17fdd:	inc    eax
   17fde:	inc    eax
   17fdf:	cmp    cx,bx
   17fe2:	jne    0x17fda
   17fe4:	sub    eax,edx
   17fe6:	lea    edi,[ebp-0x81c]
   17fec:	dec    edi
   17fed:	dec    edi
   17fee:	mov    cx,WORD PTR [edi+0x2]
   17ff2:	inc    edi
   17ff3:	inc    edi
   17ff4:	cmp    cx,bx
   17ff7:	jne    0x17fee
   17ff9:	mov    ecx,eax
   17ffb:	mov    esi,edx
   17ffd:	shr    ecx,0x2
   18000:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18002:	mov    ecx,eax
   18004:	and    ecx,0x3
   18007:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18009:	push   0x1e838
   1800e:	push   0x4
   18010:	push   0x1e82e
   18015:	call   0x16da2
   1801a:	mov    edx,eax
   1801c:	mov    cx,WORD PTR [eax]
   1801f:	inc    eax
   18020:	inc    eax
   18021:	cmp    cx,bx
   18024:	jne    0x1801c
   18026:	sub    eax,edx
   18028:	lea    edi,[ebp-0x81c]
   1802e:	dec    edi
   1802f:	dec    edi
   18030:	mov    cx,WORD PTR [edi+0x2]
   18034:	inc    edi
   18035:	inc    edi
   18036:	cmp    cx,bx
   18039:	jne    0x18030
   1803b:	mov    ecx,eax
   1803d:	mov    esi,edx
   1803f:	shr    ecx,0x2
   18042:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18044:	mov    ecx,eax
   18046:	and    ecx,0x3
   18049:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1804b:	lea    eax,[ebp-0x81c]
   18051:	push   eax
   18052:	lea    eax,[ebp-0x85c]
   18058:	push   eax
   18059:	call   DWORD PTR ds:0x1f008
   1805f:	xor    eax,eax
   18061:	lea    edi,[ebp-0x850]
   18067:	stos   DWORD PTR es:[edi],eax
   18068:	stos   DWORD PTR es:[edi],eax
   18069:	stos   DWORD PTR es:[edi],eax
   1806a:	stos   DWORD PTR es:[edi],eax
   1806b:	stos   DWORD PTR es:[edi],eax
   1806c:	mov    DWORD PTR [ebp-0x834],ebx
   18072:	xor    eax,eax
   18074:	lea    edi,[ebp-0x830]
   1807a:	stos   DWORD PTR es:[edi],eax
   1807b:	mov    DWORD PTR [ebp-0x82c],ebx
   18081:	mov    DWORD PTR [ebp-0x854],0x18
   1808b:	mov    DWORD PTR [ebp-0x850],ebx
   18091:	mov    DWORD PTR [ebp-0x848],0x240
   1809b:	lea    eax,[ebp-0x85c]
   180a1:	mov    DWORD PTR [ebp-0x84c],eax
   180a7:	mov    DWORD PTR [ebp-0x844],ebx
   180ad:	mov    DWORD PTR [ebp-0x840],ebx
   180b3:	push   ebx
   180b4:	push   ebx
   180b5:	push   ebx
   180b6:	push   0x1
   180b8:	push   0x7
   180ba:	push   ebx
   180bb:	push   ebx
   180bc:	lea    eax,[ebp-0x834]
   180c2:	push   eax
   180c3:	lea    eax,[ebp-0x854]
   180c9:	push   eax
   180ca:	push   0x89
   180cf:	lea    eax,[ebp-0x82c]
   180d5:	push   eax
   180d6:	call   0x116fc
   180db:	call   eax
   180dd:	cmp    eax,ebx
   180df:	jge    0x180e8
   180e1:	xor    al,al
   180e3:	jmp    0x18208
   180e8:	mov    DWORD PTR [ebp-0x884],ebx
   180ee:	push   0x9
   180f0:	pop    ecx
   180f1:	xor    eax,eax
   180f3:	lea    edi,[ebp-0x880]
   180f9:	rep stos DWORD PTR es:[edi],eax
   180fb:	mov    DWORD PTR [ebp-0x4],ebx
   180fe:	push   0x4
   18100:	push   0x28
   18102:	lea    eax,[ebp-0x884]
   18108:	push   eax
   18109:	lea    eax,[ebp-0x834]
   1810f:	push   eax
   18110:	push   DWORD PTR [ebp-0x82c]
   18116:	call   0x11a1a
   1811b:	call   eax
   1811d:	cmp    eax,ebx
   1811f:	jl     0x1819d
   18121:	mov    esi,0x54439
   18126:	push   esi
   18127:	call   0x11d96
   1812c:	mov    edi,eax
   1812e:	push   esi
   1812f:	push   0x1f0a0
   18134:	push   edi
   18135:	call   0x1da96
   1813a:	add    esp,0x10
   1813d:	push   0x25
   1813f:	push   0x734dc
   18144:	push   esi
   18145:	push   edi
   18146:	call   0x109ce
   1814b:	lea    eax,[ebp-0x828]
   18151:	push   eax
   18152:	push   esi
   18153:	push   edi
   18154:	lea    eax,[ebp-0x83c]
   1815a:	push   eax
   1815b:	call   0x1a030
   18160:	mov    BYTE PTR [ebp-0x83c],bl
   18166:	mov    eax,DWORD PTR [ebp-0x838]
   1816c:	mov    DWORD PTR [ebp-0x824],eax
   18172:	cmp    eax,ebx
   18174:	je     0x1818f
   18176:	push   DWORD PTR [ebp-0x828]
   1817c:	push   eax
   1817d:	call   0x17a6a
   18182:	test   al,al
   18184:	je     0x1818f
   18186:	mov    BYTE PTR [ebp-0x81d],0x1
   1818d:	jmp    0x1819d
   1818f:	mov    BYTE PTR [ebp-0x81d],0x1
   18196:	mov    BYTE PTR [ebp-0x81e],0x1
   1819d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181a4:	jmp    0x181b6
   181a6:	xor    eax,eax
   181a8:	inc    eax
   181a9:	ret    
   181aa:	mov    esp,DWORD PTR [ebp-0x18]
   181ad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181b4:	xor    ebx,ebx
   181b6:	push   DWORD PTR [ebp-0x82c]
   181bc:	call   0x117f8
   181c1:	call   eax
   181c3:	cmp    BYTE PTR [ebp-0x81e],bl
   181c9:	je     0x181ee
   181cb:	push   DWORD PTR [ebp-0x880]
   181d1:	push   DWORD PTR [ebp-0x884]
   181d7:	push   DWORD PTR [ebp-0x828]
   181dd:	push   DWORD PTR [ebp-0x824]
   181e3:	call   0x17c9e
   181e8:	mov    BYTE PTR [ebp-0x81d],al
   181ee:	cmp    DWORD PTR [ebp-0x824],ebx
   181f4:	je     0x18202
   181f6:	push   DWORD PTR [ebp-0x824]
   181fc:	call   0x10990
   18201:	pop    ecx
   18202:	mov    al,BYTE PTR [ebp-0x81d]
   18208:	call   0x1de18
   1820d:	ret    
   1820e:	int3   
   1820f:	int3   
   18210:	int3   
   18211:	int3   
   18212:	int3   
   18213:	int3   
   18214:	mov    edi,edi
   18216:	push   ebp
   18217:	mov    ebp,esp
   18219:	sub    esp,0xbc
   1821f:	mov    eax,ds:0x7751c
   18224:	xor    eax,ebp
   18226:	mov    DWORD PTR [ebp-0x4],eax
   18229:	push   ebx
   1822a:	push   edi
   1822b:	push   0x1e8f0
   18230:	push   0xb
   18232:	push   0x1e8d8
   18237:	call   0x16da2
   1823c:	push   eax
   1823d:	lea    eax,[ebp-0xbc]
   18243:	push   eax
   18244:	call   DWORD PTR ds:0x1f008
   1824a:	xor    eax,eax
   1824c:	lea    edi,[ebp-0xb0]
   18252:	stos   DWORD PTR es:[edi],eax
   18253:	stos   DWORD PTR es:[edi],eax
   18254:	stos   DWORD PTR es:[edi],eax
   18255:	stos   DWORD PTR es:[edi],eax
   18256:	xor    ebx,ebx
   18258:	push   ebx
   18259:	stos   DWORD PTR es:[edi],eax
   1825a:	push   ebx
   1825b:	push   ebx
   1825c:	push   0x1
   1825e:	xor    eax,eax
   18260:	push   0x7
   18262:	push   ebx
   18263:	mov    DWORD PTR [ebp-0x94],ebx
   18269:	lea    edi,[ebp-0x90]
   1826f:	stos   DWORD PTR es:[edi],eax
   18270:	lea    eax,[ebp-0xbc]
   18276:	mov    DWORD PTR [ebp-0xac],eax
   1827c:	push   ebx
   1827d:	lea    eax,[ebp-0x94]
   18283:	push   eax
   18284:	lea    eax,[ebp-0xb4]
   1828a:	push   eax
   1828b:	push   0x89
   18290:	lea    eax,[ebp-0x8c]
   18296:	push   eax
   18297:	mov    DWORD PTR [ebp-0x8c],ebx
   1829d:	mov    DWORD PTR [ebp-0xb4],0x18
   182a7:	mov    DWORD PTR [ebp-0xb0],ebx
   182ad:	mov    DWORD PTR [ebp-0xa8],0x240
   182b7:	mov    DWORD PTR [ebp-0xa4],ebx
   182bd:	mov    DWORD PTR [ebp-0xa0],ebx
   182c3:	call   0x116fc
   182c8:	call   eax
   182ca:	test   eax,eax
   182cc:	jge    0x182d5
   182ce:	xor    al,al
   182d0:	jmp    0x18391
   182d5:	push   esi
   182d6:	mov    esi,0x20c
   182db:	push   esi
   182dc:	call   0x11d96
   182e1:	pop    ecx
   182e2:	push   0x1
   182e4:	mov    edi,eax
   182e6:	push   esi
   182e7:	push   edi
   182e8:	lea    eax,[ebp-0x94]
   182ee:	push   eax
   182ef:	push   DWORD PTR [ebp-0x8c]
   182f5:	cmp    edi,ebx
   182f7:	setne  BYTE PTR [ebp-0x9c]
   182fe:	call   0x116d2
   18303:	call   eax
   18305:	push   DWORD PTR [ebp-0x8c]
   1830b:	mov    esi,eax
   1830d:	call   0x117f8
   18312:	call   eax
   18314:	cmp    esi,ebx
   18316:	pop    esi
   18317:	jge    0x1832a
   18319:	cmp    BYTE PTR [ebp-0x9c],bl
   1831f:	je     0x182ce
   18321:	push   edi
   18322:	call   0x10990
   18327:	pop    ecx
   18328:	jmp    0x182ce
   1832a:	push   0x6
   1832c:	push   0x1
   1832e:	lea    eax,[ebp-0x84]
   18334:	push   eax
   18335:	push   DWORD PTR [edi+0x8]
   18338:	call   0x107b2
   1833d:	mov    ecx,0x77408
   18342:	lea    eax,[ebp-0x84]
   18348:	mov    dx,WORD PTR [eax]
   1834b:	cmp    dx,WORD PTR [ecx]
   1834e:	jne    0x1836e
   18350:	cmp    dx,bx
   18353:	je     0x1836a
   18355:	mov    dx,WORD PTR [eax+0x2]
   18359:	cmp    dx,WORD PTR [ecx+0x2]
   1835d:	jne    0x1836e
   1835f:	add    eax,0x4
   18362:	add    ecx,0x4
   18365:	cmp    dx,bx
   18368:	jne    0x18348
   1836a:	xor    eax,eax
   1836c:	jmp    0x18373
   1836e:	sbb    eax,eax
   18370:	sbb    eax,0xffffffff
   18373:	cmp    eax,ebx
   18375:	sete   BYTE PTR [ebp-0x85]
   1837c:	cmp    BYTE PTR [ebp-0x9c],bl
   18382:	je     0x1838b
   18384:	push   edi
   18385:	call   0x10990
   1838a:	pop    ecx
   1838b:	mov    al,BYTE PTR [ebp-0x85]
   18391:	mov    ecx,DWORD PTR [ebp-0x4]
   18394:	pop    edi
   18395:	xor    ecx,ebp
   18397:	pop    ebx
   18398:	call   0x1da31
   1839d:	leave  
   1839e:	ret    
   1839f:	int3   
   183a0:	int3   
   183a1:	int3   
   183a2:	int3   
   183a3:	int3   
   183a4:	call   0x1a24c
   183a9:	push   0x1e988
   183ae:	push   0x34
   183b0:	push   0x1e91e
   183b5:	call   0x16da2
   183ba:	mov    edx,0x776b8
   183bf:	movzx  ecx,WORD PTR [eax]
   183c2:	inc    eax
   183c3:	mov    WORD PTR [edx],cx
   183c6:	inc    eax
   183c7:	inc    edx
   183c8:	inc    edx
   183c9:	test   cx,cx
   183cc:	jne    0x183bf
   183ce:	ret    
   183cf:	int3   
   183d0:	int3   
   183d1:	int3   
   183d2:	int3   
   183d3:	int3   
   183d4:	mov    edi,edi
   183d6:	push   ebp
   183d7:	mov    ebp,esp
   183d9:	sub    esp,0xf4
   183df:	push   ebx
   183e0:	push   esi
   183e1:	push   edi
   183e2:	mov    esi,ecx
   183e4:	call   0x1705e
   183e9:	push   DWORD PTR [ebp+0x8]
   183ec:	lea    eax,[ebp-0x4]
   183ef:	lea    edi,[esi+0x4]
   183f2:	push   eax
   183f3:	mov    ecx,edi
   183f5:	call   0x13b24
   183fa:	mov    ebx,DWORD PTR [ebp-0x4]
   183fd:	cmp    ebx,DWORD PTR [esi+0x8]
   18400:	je     0x1844b
   18402:	mov    eax,DWORD PTR [esi+0x18]
   18405:	lea    ecx,[ebp+0x8]
   18408:	mov    DWORD PTR [ebp+0x8],eax
   1840b:	call   0x13b04
   18410:	mov    edi,DWORD PTR [eax]
   18412:	lea    eax,[ebx+0x58]
   18415:	add    esi,0x14
   18418:	inc    edi
   18419:	push   eax
   1841a:	mov    ecx,esi
   1841c:	mov    DWORD PTR [ebp+0x8],edi
   1841f:	mov    DWORD PTR [ebp-0x4],eax
   18422:	call   0x1473a
   18427:	lea    eax,[ebp+0x8]
   1842a:	push   eax
   1842b:	lea    eax,[ebp-0xc]
   1842e:	push   eax
   1842f:	mov    ecx,esi
   18431:	call   0x1666a
   18436:	push   DWORD PTR [ebp+0xc]
   18439:	lea    ecx,[ebx+0x18]
   1843c:	call   0x12942
   18441:	mov    eax,DWORD PTR [ebp-0x4]
   18444:	mov    DWORD PTR [eax],edi
   18446:	jmp    0x184e0
   1844b:	lea    ecx,[ebp-0x54]
   1844e:	call   0x1390c
   18453:	xor    eax,eax
   18455:	cmp    DWORD PTR [esi+0x20],eax
   18458:	je     0x1846b
   1845a:	mov    eax,DWORD PTR [esi+0x18]
   1845d:	lea    ecx,[ebp-0x4]
   18460:	mov    DWORD PTR [ebp-0x4],eax
   18463:	call   0x13b04
   18468:	mov    eax,DWORD PTR [eax]
   1846a:	inc    eax
   1846b:	push   DWORD PTR [ebp+0xc]
   1846e:	lea    ecx,[ebp-0x54]
   18471:	mov    DWORD PTR [ebp-0x4],eax
   18474:	mov    DWORD PTR [ebp-0x14],eax
   18477:	call   0x12942
   1847c:	lea    eax,[ebp-0x54]
   1847f:	push   eax
   18480:	push   DWORD PTR [ebp+0x8]
   18483:	lea    ecx,[ebp-0xf4]
   18489:	call   0x13894
   1848e:	lea    eax,[ebp-0xf4]
   18494:	push   eax
   18495:	lea    ecx,[ebp-0xa4]
   1849b:	call   0x1449a
   184a0:	lea    eax,[ebp-0xa4]
   184a6:	push   eax
   184a7:	lea    eax,[ebp-0xc]
   184aa:	push   eax
   184ab:	mov    ecx,edi
   184ad:	call   0x16b3e
   184b2:	lea    ecx,[ebp-0xa4]
   184b8:	call   0x129b0
   184bd:	lea    ecx,[ebp-0xf4]
   184c3:	call   0x129b0
   184c8:	lea    eax,[ebp-0x4]
   184cb:	push   eax
   184cc:	lea    eax,[ebp-0xc]
   184cf:	push   eax
   184d0:	lea    ecx,[esi+0x14]
   184d3:	call   0x1666a
   184d8:	lea    ecx,[ebp-0x54]
   184db:	call   0x11dca
   184e0:	pop    edi
   184e1:	pop    esi
   184e2:	pop    ebx
   184e3:	leave  
   184e4:	ret    0x8
   184e7:	int3   
   184e8:	int3   
   184e9:	int3   
   184ea:	int3   
   184eb:	int3   
   184ec:	mov    edi,edi
   184ee:	push   ebp
   184ef:	mov    ebp,esp
   184f1:	sub    esp,0x10
   184f4:	call   0x1a1ba
   184f9:	test   al,al
   184fb:	jne    0x18505
   184fd:	mov    eax,DWORD PTR [ebp+0x8]
   18500:	jmp    0x18599
   18505:	push   esi
   18506:	mov    esi,DWORD PTR [ebp+0x8]
   18509:	push   0xffffffff
   1850b:	push   esi
   1850c:	lea    ecx,[ebp-0x8]
   1850f:	call   0x12aca
   18514:	mov    ecx,DWORD PTR ds:0x78250
   1851a:	lea    eax,[ebp-0x8]
   1851d:	push   eax
   1851e:	lea    eax,[ebp+0x8]
   18521:	push   eax
   18522:	call   0x13e8c
   18527:	mov    eax,DWORD PTR [ebp+0x8]
   1852a:	mov    ecx,DWORD PTR ds:0x78250
   18530:	cmp    eax,DWORD PTR [ecx+0x4]
   18533:	jne    0x18564
   18535:	lea    eax,[ebp-0x8]
   18538:	push   eax
   18539:	lea    ecx,[ebp-0x10]
   1853c:	call   0x1354a
   18541:	mov    ecx,DWORD PTR ds:0x78250
   18547:	lea    eax,[ebp-0x10]
   1854a:	push   eax
   1854b:	lea    eax,[ebp-0x8]
   1854e:	push   eax
   1854f:	call   0x17110
   18554:	mov    ecx,eax
   18556:	call   0x12a48
   1855b:	push   DWORD PTR [ebp-0x10]
   1855e:	call   0x10990
   18563:	pop    ecx
   18564:	mov    ecx,DWORD PTR ds:0x78250
   1856a:	lea    eax,[ebp-0x8]
   1856d:	push   eax
   1856e:	lea    eax,[ebp+0x8]
   18571:	push   eax
   18572:	call   0x13e8c
   18577:	mov    eax,DWORD PTR [ebp+0x8]
   1857a:	mov    ecx,DWORD PTR ds:0x78250
   18580:	cmp    eax,DWORD PTR [ecx+0x4]
   18583:	je     0x18588
   18585:	mov    esi,DWORD PTR [eax+0x14]
   18588:	call   0x1a1d6
   1858d:	push   DWORD PTR [ebp-0x8]
   18590:	call   0x10990
   18595:	pop    ecx
   18596:	mov    eax,esi
   18598:	pop    esi
   18599:	leave  
   1859a:	ret    0x4
   1859d:	int3   
   1859e:	int3   
   1859f:	int3   
   185a0:	int3   
   185a1:	int3   
   185a2:	push   0x33c
   185a7:	push   0x77228
   185ac:	call   0x1ddd0
   185b1:	mov    esi,DWORD PTR [ebp+0xc]
   185b4:	mov    DWORD PTR [ebp-0x32c],esi
   185ba:	call   DWORD PTR ds:0x1f000
   185c0:	xor    ebx,ebx
   185c2:	cmp    BYTE PTR [ebp+0x10],bl
   185c5:	jne    0x18603
   185c7:	push   esi
   185c8:	mov    ecx,DWORD PTR ds:0x77550
   185ce:	call   0x15728
   185d3:	mov    edi,eax
   185d5:	push   esi
   185d6:	mov    ecx,DWORD PTR ds:0x77550
   185dc:	call   0x16352
   185e1:	mov    eax,edi
   185e3:	dec    eax
   185e4:	je     0x185f8
   185e6:	dec    eax
   185e7:	je     0x185f4
   185e9:	dec    eax
   185ea:	jne    0x187de
   185f0:	push   0xa
   185f2:	jmp    0x185f9
   185f4:	push   0x2
   185f6:	jmp    0x185f9
   185f8:	push   ebx
   185f9:	call   0x10fc0
   185fe:	jmp    0x187de
   18603:	mov    DWORD PTR [ebp-0x320],ebx
   18609:	xor    eax,eax
   1860b:	lea    edi,[ebp-0x326]
   18611:	stos   DWORD PTR es:[edi],eax
   18612:	stos   WORD PTR es:[edi],ax
   18614:	xor    eax,eax
   18616:	mov    WORD PTR [ebp-0x21c],ax
   1861d:	push   0x1fc
   18622:	push   ebx
   18623:	lea    eax,[ebp-0x21a]
   18629:	push   eax
   1862a:	call   0x1da8a
   1862f:	add    esp,0xc
   18632:	lea    eax,[ebp-0x21c]
   18638:	mov    DWORD PTR [ebp-0x324],eax
   1863e:	xor    eax,eax
   18640:	mov    WORD PTR [ebp-0x328],ax
   18647:	mov    eax,0x1fe
   1864c:	mov    WORD PTR [ebp-0x326],ax
   18653:	mov    DWORD PTR [ebp-0x34c],0x18
   1865d:	mov    DWORD PTR [ebp-0x348],ebx
   18663:	mov    DWORD PTR [ebp-0x340],0x200
   1866d:	mov    DWORD PTR [ebp-0x344],ebx
   18673:	mov    DWORD PTR [ebp-0x33c],ebx
   18679:	mov    DWORD PTR [ebp-0x338],ebx
   1867f:	mov    DWORD PTR [ebp-0x334],esi
   18685:	mov    DWORD PTR [ebp-0x330],ebx
   1868b:	lea    eax,[ebp-0x334]
   18691:	push   eax
   18692:	lea    eax,[ebp-0x34c]
   18698:	push   eax
   18699:	push   0x1f0fff
   1869e:	lea    eax,[ebp-0x320]
   186a4:	push   eax
   186a5:	call   0x1152e
   186aa:	call   eax
   186ac:	test   eax,eax
   186ae:	jl     0x187de
   186b4:	lea    eax,[ebp-0x328]
   186ba:	push   eax
   186bb:	push   DWORD PTR [ebp-0x320]
   186c1:	call   0x11e8e
   186c6:	cmp    eax,ebx
   186c8:	jl     0x187d1
   186ce:	movzx  eax,WORD PTR [ebp-0x328]
   186d5:	shr    eax,1
   186d7:	xor    ecx,ecx
   186d9:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   186e1:	push   DWORD PTR [ebp-0x320]
   186e7:	call   0x11f20
   186ec:	lea    eax,[ebp-0x21c]
   186f2:	push   eax
   186f3:	call   0x10d90
   186f8:	cmp    eax,ebx
   186fa:	je     0x1871f
   186fc:	push   eax
   186fd:	push   esi
   186fe:	mov    ecx,DWORD PTR ds:0x77550
   18704:	call   0x16be6
   18709:	push   DWORD PTR [ebp-0x320]
   1870f:	push   DWORD PTR [ebp-0x320]
   18715:	call   0x11f20
   1871a:	push   eax
   1871b:	push   esi
   1871c:	push   ebx
   1871d:	jmp    0x1879d
   1871f:	push   0x1e9ca
   18724:	push   0x9
   18726:	push   0x1e9b6
   1872b:	call   0x16da2
   18730:	push   eax
   18731:	lea    eax,[ebp-0x328]
   18737:	push   eax
   18738:	call   0x10de0
   1873d:	test   al,al
   1873f:	je     0x187a4
   18741:	cmp    DWORD PTR ds:0x7822c,ebx
   18747:	jne    0x1877a
   18749:	mov    DWORD PTR ds:0x7822c,0x1
   18753:	mov    DWORD PTR [ebp-0x4],ebx
   18756:	call   0x17f4a
   1875b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18762:	jmp    0x1877a
   18764:	xor    eax,eax
   18766:	inc    eax
   18767:	ret    
   18768:	mov    esp,DWORD PTR [ebp-0x18]
   1876b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18772:	xor    ebx,ebx
   18774:	mov    esi,DWORD PTR [ebp-0x32c]
   1877a:	cmp    DWORD PTR ds:0x77fa4,ebx
   18780:	jne    0x18788
   18782:	mov    DWORD PTR ds:0x77fa4,esi
   18788:	push   DWORD PTR [ebp-0x320]
   1878e:	push   DWORD PTR [ebp-0x320]
   18794:	call   0x11f20
   18799:	push   eax
   1879a:	push   esi
   1879b:	push   0x1
   1879d:	call   0x1345a
   187a2:	jmp    0x187d1
   187a4:	lea    eax,[ebp-0x31c]
   187aa:	push   eax
   187ab:	call   0x10f70
   187b0:	test   al,al
   187b2:	je     0x187d1
   187b4:	lea    eax,[ebp-0x31c]
   187ba:	push   eax
   187bb:	lea    eax,[ebp-0x328]
   187c1:	push   eax
   187c2:	call   0x10de0
   187c7:	test   al,al
   187c9:	je     0x187d1
   187cb:	push   esi
   187cc:	call   0x11f50
   187d1:	push   DWORD PTR [ebp-0x320]
   187d7:	call   0x117f8
   187dc:	call   eax
   187de:	call   0x1de18
   187e3:	ret    0xc
   187e6:	int3   
   187e7:	int3   
   187e8:	int3   
   187e9:	int3   
   187ea:	int3   
   187eb:	int3   
   187ec:	mov    edi,edi
   187ee:	push   ebp
   187ef:	mov    ebp,esp
   187f1:	push   ecx
   187f2:	cli    
   187f3:	mov    eax,cr0
   187f6:	mov    DWORD PTR [ebp-0x4],eax
   187f9:	and    eax,0xfffeffff
   187fe:	mov    cr0,eax
   18801:	push   0x17844
   18806:	push   DWORD PTR ds:0x77eec
   1880c:	call   0x19886
   18811:	push   0x0
   18813:	push   0x185a2
   18818:	mov    ds:0x77ef0,eax
   1881d:	call   0x115ac
   18822:	call   eax
   18824:	push   0x17730
   18829:	call   0x11558
   1882e:	call   eax
   18830:	mov    eax,DWORD PTR [ebp-0x4]
   18833:	mov    cr0,eax
   18836:	sti    
   18837:	leave  
   18838:	ret    
   18839:	int3   
   1883a:	int3   
   1883b:	int3   
   1883c:	int3   
   1883d:	int3   
   1883e:	mov    edi,edi
   18840:	push   ebp
   18841:	mov    ebp,esp
   18843:	sub    esp,0x40
   18846:	push   ebx
   18847:	mov    ebx,DWORD PTR [ebp+0x8]
   1884a:	push   esi
   1884b:	test   bl,0x20
   1884e:	je     0x18888
   18850:	push   DWORD PTR [ebp+0x24]
   18853:	mov    esi,DWORD PTR ds:0x77ee8
   18859:	push   DWORD PTR [ebp+0x20]
   1885c:	lea    ecx,[ebp-0x40]
   1885f:	push   DWORD PTR [ebp+0x1c]
   18862:	push   DWORD PTR [ebp+0x18]
   18865:	push   DWORD PTR [ebp+0x14]
   18868:	push   DWORD PTR [ebp+0xc]
   1886b:	call   0x13960
   18870:	push   eax
   18871:	push   DWORD PTR [ebp+0xc]
   18874:	mov    ecx,esi
   18876:	call   0x183d4
   1887b:	lea    ecx,[ebp-0x40]
   1887e:	call   0x11dca
   18883:	jmp    0x189b6
   18888:	push   DWORD PTR [ebp+0xc]
   1888b:	mov    ecx,DWORD PTR ds:0x77ee0
   18891:	call   0x159d6
   18896:	test   eax,eax
   18898:	jne    0x188a6
   1889a:	test   bl,0x1
   1889d:	jne    0x188a6
   1889f:	xor    al,al
   188a1:	jmp    0x189b8
   188a6:	push   DWORD PTR [ebp+0xc]
   188a9:	mov    ecx,DWORD PTR ds:0x77ee0
   188af:	call   0x16f8e
   188b4:	mov    esi,eax
   188b6:	test   bl,0x1
   188b9:	je     0x188ec
   188bb:	mov    eax,DWORD PTR [ebp+0x20]
   188be:	push   DWORD PTR [ebp+0xc]
   188c1:	mov    ecx,esi
   188c3:	mov    DWORD PTR [esi+0x20],eax
   188c6:	call   0x128b4
   188cb:	push   DWORD PTR [ebp+0x10]
   188ce:	lea    ecx,[esi+0x8]
   188d1:	call   0x128b4
   188d6:	push   DWORD PTR [ebp+0x14]
   188d9:	lea    ecx,[esi+0x10]
   188dc:	call   0x128b4
   188e1:	push   DWORD PTR [ebp+0x18]
   188e4:	lea    ecx,[esi+0x18]
   188e7:	call   0x128b4
   188ec:	mov    DWORD PTR [ebp+0x20],ebx
   188ef:	and    DWORD PTR [ebp+0x20],0x2
   188f3:	je     0x18903
   188f5:	mov    eax,DWORD PTR [ebp+0x24]
   188f8:	mov    ecx,DWORD PTR [eax]
   188fa:	mov    DWORD PTR [esi+0x28],ecx
   188fd:	mov    eax,DWORD PTR [eax+0x4]
   18900:	mov    DWORD PTR [esi+0x2c],eax
   18903:	mov    DWORD PTR [ebp+0x14],ebx
   18906:	and    DWORD PTR [ebp+0x14],0x4
   1890a:	je     0x1891a
   1890c:	mov    eax,DWORD PTR [ebp+0x28]
   1890f:	mov    ecx,DWORD PTR [eax]
   18911:	mov    DWORD PTR [esi+0x30],ecx
   18914:	mov    eax,DWORD PTR [eax+0x4]
   18917:	mov    DWORD PTR [esi+0x34],eax
   1891a:	test   bl,0x10
   1891d:	je     0x189b6
   18923:	cmp    DWORD PTR [esi+0xc],0x0
   18927:	jbe    0x189b6
   1892d:	mov    eax,ds:0x77ee0
   18932:	mov    eax,DWORD PTR [eax+0x4]
   18935:	push   edi
   18936:	mov    edi,DWORD PTR [eax]
   18938:	mov    DWORD PTR [ebp+0x18],edi
   1893b:	cmp    edi,eax
   1893d:	je     0x189b5
   1893f:	push   DWORD PTR [ebp+0xc]
   18942:	lea    ebx,[edi+0x10]
   18945:	push   ebx
   18946:	call   0x197ce
   1894b:	test   al,al
   1894d:	je     0x189a0
   1894f:	lea    eax,[esi+0x8]
   18952:	push   eax
   18953:	add    edi,0x20
   18956:	push   edi
   18957:	call   0x197be
   1895c:	test   al,al
   1895e:	je     0x189a0
   18960:	cmp    DWORD PTR [ebp+0x20],0x0
   18964:	je     0x18980
   18966:	mov    ecx,DWORD PTR ds:0x77ee0
   1896c:	push   ebx
   1896d:	call   0x16f8e
   18972:	mov    ecx,DWORD PTR [ebp+0x24]
   18975:	mov    edx,DWORD PTR [ecx]
   18977:	mov    DWORD PTR [eax+0x28],edx
   1897a:	mov    ecx,DWORD PTR [ecx+0x4]
   1897d:	mov    DWORD PTR [eax+0x2c],ecx
   18980:	cmp    DWORD PTR [ebp+0x14],0x0
   18984:	je     0x189a0
   18986:	mov    ecx,DWORD PTR ds:0x77ee0
   1898c:	push   ebx
   1898d:	call   0x16f8e
   18992:	mov    ecx,DWORD PTR [ebp+0x28]
   18995:	mov    edx,DWORD PTR [ecx]
   18997:	mov    DWORD PTR [eax+0x30],edx
   1899a:	mov    ecx,DWORD PTR [ecx+0x4]
   1899d:	mov    DWORD PTR [eax+0x34],ecx
   189a0:	lea    ecx,[ebp+0x18]
   189a3:	call   0x135f0
   189a8:	mov    edi,DWORD PTR [ebp+0x18]
   189ab:	mov    eax,ds:0x77ee0
   189b0:	cmp    edi,DWORD PTR [eax+0x4]
   189b3:	jne    0x1893f
   189b5:	pop    edi
   189b6:	mov    al,0x1
   189b8:	pop    esi
   189b9:	pop    ebx
   189ba:	leave  
   189bb:	ret    0x24
   189be:	int3   
   189bf:	int3   
   189c0:	int3   
   189c1:	int3   
   189c2:	int3   
   189c3:	int3   
   189c4:	push   0x40
   189c6:	push   0x77248
   189cb:	call   0x1dac8
   189d0:	xor    esi,esi
   189d2:	push   esi
   189d3:	push   esi
   189d4:	push   esi
   189d5:	push   esi
   189d6:	push   0x77558
   189db:	call   DWORD PTR ds:0x1f020
   189e1:	cmp    eax,esi
   189e3:	jge    0x189f4
   189e5:	mov    eax,DWORD PTR [ebp+0x8]
   189e8:	mov    DWORD PTR [eax+0x8],0x4
   189ef:	jmp    0x18af7
   189f4:	mov    DWORD PTR [ebp-0x4],esi
   189f7:	or     ebx,0xffffffff
   189fa:	push   ebx
   189fb:	mov    esi,DWORD PTR [ebp+0x8]
   189fe:	lea    eax,[esi+0x20]
   18a01:	push   eax
   18a02:	lea    ecx,[ebp-0x38]
   18a05:	call   0x134e8
   18a0a:	mov    edi,DWORD PTR [ebp-0x34]
   18a0d:	inc    edi
   18a0e:	push   ebx
   18a0f:	lea    eax,[edi+esi*1+0x20]
   18a13:	push   eax
   18a14:	lea    ecx,[ebp-0x30]
   18a17:	call   0x134e8
   18a1c:	mov    eax,DWORD PTR [ebp-0x2c]
   18a1f:	lea    edi,[edi+eax*1+0x1]
   18a23:	push   ebx
   18a24:	lea    eax,[edi+esi*1+0x20]
   18a28:	push   eax
   18a29:	lea    ecx,[ebp-0x28]
   18a2c:	call   0x134e8
   18a31:	mov    eax,DWORD PTR [ebp-0x24]
   18a34:	lea    edi,[edi+eax*1+0x1]
   18a38:	push   ebx
   18a39:	lea    eax,[edi+esi*1+0x20]
   18a3d:	push   eax
   18a3e:	lea    ecx,[ebp-0x20]
   18a41:	call   0x134e8
   18a46:	mov    eax,DWORD PTR [ebp-0x1c]
   18a49:	lea    eax,[edi+eax*1+0x1]
   18a4d:	push   ebx
   18a4e:	lea    eax,[eax+esi*1+0x20]
   18a52:	push   eax
   18a53:	lea    ecx,[ebp-0x50]
   18a56:	call   0x134e8
   18a5b:	mov    eax,DWORD PTR [esi+0xc]
   18a5e:	mov    ecx,DWORD PTR [esi+0x10]
   18a61:	mov    DWORD PTR [ebp-0x48],ecx
   18a64:	mov    ecx,DWORD PTR [esi+0x14]
   18a67:	mov    DWORD PTR [ebp-0x44],ecx
   18a6a:	mov    ecx,DWORD PTR [esi+0x18]
   18a6d:	mov    DWORD PTR [ebp-0x40],ecx
   18a70:	mov    ecx,DWORD PTR [esi+0x1c]
   18a73:	mov    DWORD PTR [ebp-0x3c],ecx
   18a76:	lea    ecx,[ebp-0x40]
   18a79:	push   ecx
   18a7a:	lea    ecx,[ebp-0x48]
   18a7d:	push   ecx
   18a7e:	push   eax
   18a7f:	lea    eax,[ebp-0x50]
   18a82:	push   eax
   18a83:	lea    eax,[ebp-0x20]
   18a86:	push   eax
   18a87:	lea    eax,[ebp-0x28]
   18a8a:	push   eax
   18a8b:	lea    eax,[ebp-0x30]
   18a8e:	push   eax
   18a8f:	lea    eax,[ebp-0x38]
   18a92:	push   eax
   18a93:	push   DWORD PTR [esi+0x4]
   18a96:	call   0x1883e
   18a9b:	xor    ecx,ecx
   18a9d:	test   al,al
   18a9f:	sete   cl
   18aa2:	mov    DWORD PTR [esi+0x8],ecx
   18aa5:	push   DWORD PTR [ebp-0x50]
   18aa8:	call   0x10990
   18aad:	push   DWORD PTR [ebp-0x20]
   18ab0:	call   0x10990
   18ab5:	push   DWORD PTR [ebp-0x28]
   18ab8:	call   0x10990
   18abd:	push   DWORD PTR [ebp-0x30]
   18ac0:	call   0x10990
   18ac5:	push   DWORD PTR [ebp-0x38]
   18ac8:	call   0x10990
   18acd:	add    esp,0x14
   18ad0:	jmp    0x18ae3
   18ad2:	xor    eax,eax
   18ad4:	inc    eax
   18ad5:	ret    
   18ad6:	mov    esp,DWORD PTR [ebp-0x18]
   18ad9:	mov    eax,DWORD PTR [ebp+0x8]
   18adc:	mov    DWORD PTR [eax+0x8],0x4
   18ae3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18aea:	push   0x0
   18aec:	push   0x77558
   18af1:	call   DWORD PTR ds:0x1f01c
   18af7:	call   0x1db0d
   18afc:	ret    0x4
   18aff:	int3   
   18b00:	int3   
   18b01:	int3   
   18b02:	int3   
   18b03:	int3   
   18b04:	push   0x2c
   18b06:	push   0x77268
   18b0b:	call   0x1dac8
   18b10:	xor    edi,edi
   18b12:	mov    DWORD PTR [ebp-0x24],edi
   18b15:	mov    ebx,DWORD PTR [ebp+0xc]
   18b18:	mov    DWORD PTR [ebx+0x18],edi
   18b1b:	mov    DWORD PTR [ebx+0x1c],edi
   18b1e:	mov    eax,DWORD PTR [ebx+0x60]
   18b21:	cmp    BYTE PTR [eax],0xe
   18b24:	jne    0x18fc4
   18b2a:	mov    eax,DWORD PTR [eax+0xc]
   18b2d:	mov    DWORD PTR [ebx+0x1c],0x84c
   18b34:	mov    ecx,0x22c068
   18b39:	cmp    eax,ecx
   18b3b:	ja     0x18e75
   18b41:	je     0x18e66
   18b47:	add    ecx,0xffffffd0
   18b4a:	cmp    eax,ecx
   18b4c:	ja     0x18c69
   18b52:	je     0x18c50
   18b58:	sub    eax,0x22c020
   18b5d:	je     0x18c1a
   18b63:	push   0x4
   18b65:	pop    esi
   18b66:	sub    eax,esi
   18b68:	je     0x18be4
   18b6a:	sub    eax,esi
   18b6c:	je     0x18bc9
   18b6e:	sub    eax,esi
   18b70:	je     0x18bbc
   18b72:	sub    eax,esi
   18b74:	je     0x18b8b
   18b76:	sub    eax,esi
   18b78:	jne    0x18f64
   18b7e:	push   DWORD PTR [ebx+0xc]
   18b81:	call   0x16c28
   18b86:	jmp    0x18fc1
   18b8b:	mov    esi,DWORD PTR [ebx+0xc]
   18b8e:	mov    eax,DWORD PTR [esi]
   18b90:	add    eax,0x20
   18b93:	mov    DWORD PTR [ebx+0x1c],eax
   18b96:	push   0xffffffff
   18b98:	lea    eax,[esi+0x20]
   18b9b:	push   eax
   18b9c:	lea    ecx,[ebp-0x34]
   18b9f:	call   0x129ea
   18ba4:	push   esi
   18ba5:	lea    eax,[ebp-0x34]
   18ba8:	push   eax
   18ba9:	call   0x164ac
   18bae:	push   DWORD PTR [ebp-0x34]
   18bb1:	call   0x10990
   18bb6:	pop    ecx
   18bb7:	jmp    0x18fc4
   18bbc:	push   DWORD PTR [ebx+0xc]
   18bbf:	call   0x189c4
   18bc4:	jmp    0x18fc1
   18bc9:	mov    ecx,DWORD PTR ds:0x77ee0
   18bcf:	call   0x16710
   18bd4:	mov    ecx,DWORD PTR ds:0x775b4
   18bda:	call   0x167a2
   18bdf:	jmp    0x18fc4
   18be4:	mov    eax,DWORD PTR [ebx+0xc]
   18be7:	mov    DWORD PTR [ebx+0x1c],0x10
   18bee:	mov    ecx,DWORD PTR [eax]
   18bf0:	cmp    ecx,edi
   18bf2:	jl     0x18fc4
   18bf8:	cmp    ecx,0x6
   18bfb:	jge    0x18fc4
   18c01:	mov    edx,DWORD PTR [eax+0x8]
   18c04:	mov    DWORD PTR [ecx*8+0x77f30],edx
   18c0b:	mov    eax,DWORD PTR [eax+0xc]
   18c0e:	mov    DWORD PTR [ecx*8+0x77f34],eax
   18c15:	jmp    0x18fc4
   18c1a:	mov    eax,DWORD PTR [ebx+0xc]
   18c1d:	mov    DWORD PTR [ebx+0x1c],0x10
   18c24:	mov    ecx,DWORD PTR [eax]
   18c26:	cmp    ecx,edi
   18c28:	jl     0x18fc4
   18c2e:	cmp    ecx,0x6
   18c31:	jge    0x18fc4
   18c37:	mov    edx,DWORD PTR [ecx*8+0x77f30]
   18c3e:	mov    DWORD PTR [eax+0x8],edx
   18c41:	mov    ecx,DWORD PTR [ecx*8+0x77f34]
   18c48:	mov    DWORD PTR [eax+0xc],ecx
   18c4b:	jmp    0x18fc4
   18c50:	mov    eax,DWORD PTR [ebx+0xc]
   18c53:	mov    ecx,DWORD PTR [eax]
   18c55:	add    ecx,0xc
   18c58:	mov    DWORD PTR [ebx+0x1c],ecx
   18c5b:	push   eax
   18c5c:	push   DWORD PTR [eax+0x4]
   18c5f:	call   0x1586a
   18c64:	jmp    0x18fc4
   18c69:	sub    eax,0x22c03c
   18c6e:	je     0x18de2
   18c74:	sub    eax,0x10
   18c77:	je     0x18dd8
   18c7d:	push   0x4
   18c7f:	pop    esi
   18c80:	sub    eax,esi
   18c82:	je     0x18cd8
   18c84:	sub    eax,0xc
   18c87:	je     0x18cc0
   18c89:	sub    eax,esi
   18c8b:	je     0x18ca2
   18c8d:	sub    eax,esi
   18c8f:	jne    0x18f64
   18c95:	push   DWORD PTR [ebx+0xc]
   18c98:	call   0x1277a
   18c9d:	jmp    0x18fc1
   18ca2:	mov    DWORD PTR [ebx+0x1c],0x8
   18ca9:	mov    ebx,DWORD PTR [ebx+0xc]
   18cac:	mov    eax,ds:0x77f14
   18cb1:	mov    DWORD PTR [ebx],eax
   18cb3:	mov    eax,ds:0x77f18
   18cb8:	mov    DWORD PTR [ebx+0x4],eax
   18cbb:	jmp    0x18fc4
   18cc0:	mov    eax,DWORD PTR [ebx+0xc]
   18cc3:	mov    ecx,DWORD PTR [eax]
   18cc5:	mov    DWORD PTR ds:0x77f14,ecx
   18ccb:	mov    eax,DWORD PTR [eax+0x4]
   18cce:	mov    ds:0x77f18,eax
   18cd3:	jmp    0x18fc1
   18cd8:	mov    DWORD PTR [ebx+0x1c],edi
   18cdb:	mov    esi,DWORD PTR [ebx+0xc]
   18cde:	mov    DWORD PTR [ebp-0x20],esi
   18ce1:	push   0xffffffff
   18ce3:	push   0x1ded8
   18ce8:	lea    ecx,[ebp-0x2c]
   18ceb:	call   0x129ea
   18cf0:	xor    edi,edi
   18cf2:	inc    edi
   18cf3:	mov    DWORD PTR [esi+0x8],edi
   18cf6:	xor    eax,eax
   18cf8:	push   eax
   18cf9:	push   eax
   18cfa:	push   eax
   18cfb:	push   eax
   18cfc:	push   0x77558
   18d01:	call   DWORD PTR ds:0x1f020
   18d07:	test   eax,eax
   18d09:	jge    0x18d13
   18d0b:	push   DWORD PTR [ebp-0x2c]
   18d0e:	jmp    0x18bb1
   18d13:	and    DWORD PTR [ebp-0x4],0x0
   18d17:	mov    DWORD PTR [ebp-0x4],edi
   18d1a:	mov    eax,DWORD PTR [esi]
   18d1c:	add    eax,0x20
   18d1f:	mov    DWORD PTR [ebx+0x1c],eax
   18d22:	mov    eax,ds:0x77ee0
   18d27:	mov    ebx,DWORD PTR [eax+0x4]
   18d2a:	mov    eax,DWORD PTR [ebx]
   18d2c:	mov    DWORD PTR [ebp+0xc],eax
   18d2f:	and    DWORD PTR [ebp-0x1c],0x0
   18d33:	mov    edi,DWORD PTR [esi+0x20]
   18d36:	cmp    DWORD PTR [ebp-0x1c],edi
   18d39:	jge    0x18d4d
   18d3b:	cmp    DWORD PTR [ebp+0xc],ebx
   18d3e:	je     0x18d4d
   18d40:	lea    ecx,[ebp+0xc]
   18d43:	call   0x135f0
   18d48:	inc    DWORD PTR [ebp-0x1c]
   18d4b:	jmp    0x18d36
   18d4d:	mov    eax,DWORD PTR [ebp+0xc]
   18d50:	cmp    eax,ebx
   18d52:	je     0x18d66
   18d54:	and    DWORD PTR [esi+0x8],0x0
   18d58:	add    eax,0x10
   18d5b:	push   eax
   18d5c:	lea    ecx,[ebp-0x2c]
   18d5f:	call   0x128b4
   18d64:	jmp    0x18d6d
   18d66:	mov    DWORD PTR [esi+0x8],0x1
   18d6d:	and    DWORD PTR [esi+0x4],0x0
   18d71:	and    DWORD PTR [ebp-0x4],0x0
   18d75:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18d7c:	call   0x18dca
   18d81:	cmp    DWORD PTR [esi+0x8],0x0
   18d85:	jne    0x18d0b
   18d87:	push   esi
   18d88:	lea    eax,[ebp-0x2c]
   18d8b:	push   eax
   18d8c:	call   0x164ac
   18d91:	jmp    0x18d0b
   18d96:	xor    eax,eax
   18d98:	inc    eax
   18d99:	ret    
   18d9a:	mov    esp,DWORD PTR [ebp-0x18]
   18d9d:	mov    eax,DWORD PTR [ebp-0x20]
   18da0:	mov    DWORD PTR [eax+0x8],0x4
   18da7:	push   DWORD PTR [ebp-0x2c]
   18daa:	call   0x10990
   18daf:	push   0xfffffffe
   18db1:	lea    eax,[ebp-0x10]
   18db4:	push   eax
   18db5:	push   0x7751c
   18dba:	call   0x1dc8c
   18dbf:	add    esp,0x10
   18dc2:	jmp    0x18fc4
   18dc7:	mov    esi,DWORD PTR [ebp-0x20]
   18dca:	push   0x0
   18dcc:	push   0x77558
   18dd1:	call   DWORD PTR ds:0x1f01c
   18dd7:	ret    
   18dd8:	call   0x122a4
   18ddd:	jmp    0x18fc4
   18de2:	mov    eax,DWORD PTR [ebx+0xc]
   18de5:	mov    ecx,DWORD PTR ds:0x77404
   18deb:	mov    esi,eax
   18ded:	sub    esi,ecx
   18def:	push   0x2
   18df1:	pop    edi
   18df2:	movzx  edx,WORD PTR [ecx]
   18df5:	mov    WORD PTR [esi+ecx*1],dx
   18df9:	add    ecx,edi
   18dfb:	test   dx,dx
   18dfe:	jne    0x18df2
   18e00:	mov    ecx,0x77448
   18e05:	lea    esi,[eax+0x50]
   18e08:	sub    esi,ecx
   18e0a:	movzx  edx,WORD PTR [ecx]
   18e0d:	mov    WORD PTR [esi+ecx*1],dx
   18e11:	add    ecx,edi
   18e13:	test   dx,dx
   18e16:	jne    0x18e0a
   18e18:	mov    ecx,0x77408
   18e1d:	lea    esi,[eax+0x90]
   18e23:	sub    esi,ecx
   18e25:	movzx  edx,WORD PTR [ecx]
   18e28:	mov    WORD PTR [esi+ecx*1],dx
   18e2c:	add    ecx,edi
   18e2e:	test   dx,dx
   18e31:	jne    0x18e25
   18e33:	mov    ecx,0x77488
   18e38:	lea    esi,[eax+0xd0]
   18e3e:	sub    esi,ecx
   18e40:	movzx  edx,WORD PTR [ecx]
   18e43:	mov    WORD PTR [esi+ecx*1],dx
   18e47:	add    ecx,edi
   18e49:	test   dx,dx
   18e4c:	jne    0x18e40
   18e4e:	lea    edi,[eax+0x40]
   18e51:	mov    esi,0x73504
   18e56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e5a:	mov    DWORD PTR [ebx+0x1c],0x110
   18e61:	jmp    0x18fc4
   18e66:	mov    eax,DWORD PTR [ebx+0xc]
   18e69:	push   DWORD PTR [eax]
   18e6b:	call   0x10fc0
   18e70:	jmp    0x18fc1
   18e75:	mov    ecx,0x22c088
   18e7a:	cmp    eax,ecx
   18e7c:	ja     0x18f46
   18e82:	je     0x18f1b
   18e88:	sub    eax,0x22c06c
   18e8d:	je     0x18f03
   18e8f:	push   0x4
   18e91:	pop    esi
   18e92:	sub    eax,esi
   18e94:	je     0x18ef6
   18e96:	push   0x8
   18e98:	pop    ecx
   18e99:	sub    eax,ecx
   18e9b:	je     0x18ee9
   18e9d:	sub    eax,esi
   18e9f:	je     0x18ed1
   18ea1:	sub    eax,esi
   18ea3:	je     0x18eba
   18ea5:	sub    eax,esi
   18ea7:	jne    0x18f64
   18ead:	push   DWORD PTR [ebx+0xc]
   18eb0:	call   0x17974
   18eb5:	jmp    0x18fc1
   18eba:	mov    DWORD PTR [ebx+0x1c],ecx
   18ebd:	mov    ebx,DWORD PTR [ebx+0xc]
   18ec0:	mov    eax,ds:0x77f1c
   18ec5:	mov    DWORD PTR [ebx],eax
   18ec7:	mov    eax,ds:0x77f20
   18ecc:	jmp    0x18cb8
   18ed1:	mov    eax,DWORD PTR [ebx+0xc]
   18ed4:	mov    ecx,DWORD PTR [eax]
   18ed6:	mov    DWORD PTR ds:0x77f1c,ecx
   18edc:	mov    eax,DWORD PTR [eax+0x4]
   18edf:	mov    ds:0x77f20,eax
   18ee4:	jmp    0x18fc1
   18ee9:	push   DWORD PTR [ebx+0xc]
   18eec:	call   0x17186
   18ef1:	jmp    0x18fc1
   18ef6:	push   DWORD PTR [ebx+0xc]
   18ef9:	call   0x10f30
   18efe:	jmp    0x18fc1
   18f03:	mov    esi,DWORD PTR [ebx+0xc]
   18f06:	push   DWORD PTR [esi]
   18f08:	call   0x11004
   18f0d:	mov    DWORD PTR [esi],eax
   18f0f:	mov    DWORD PTR [ebx+0x1c],0x4
   18f16:	jmp    0x18fc4
   18f1b:	mov    esi,DWORD PTR [ebx+0xc]
   18f1e:	mov    eax,DWORD PTR [esi]
   18f20:	add    eax,0xc
   18f23:	mov    DWORD PTR [ebx+0x1c],eax
   18f26:	push   0xffffffff
   18f28:	lea    eax,[esi+0xc]
   18f2b:	push   eax
   18f2c:	lea    ecx,[ebp-0x3c]
   18f2f:	call   0x129ea
   18f34:	push   esi
   18f35:	lea    eax,[ebp-0x3c]
   18f38:	push   eax
   18f39:	call   0x15780
   18f3e:	push   DWORD PTR [ebp-0x3c]
   18f41:	jmp    0x18bb1
   18f46:	sub    eax,0x22c08c
   18f4b:	je     0x18fb3
   18f4d:	push   0x4
   18f4f:	pop    esi
   18f50:	sub    eax,esi
   18f52:	je     0x18f9f
   18f54:	sub    eax,esi
   18f56:	je     0x18f98
   18f58:	sub    eax,esi
   18f5a:	je     0x18f84
   18f5c:	sub    eax,esi
   18f5e:	je     0x18f7a
   18f60:	sub    eax,esi
   18f62:	je     0x18f6d
   18f64:	mov    DWORD PTR [ebp-0x24],0xc0000010
   18f6b:	jmp    0x18fc1
   18f6d:	push   DWORD PTR [ebx+0xc]
   18f70:	call   0x1aa90
   18f75:	mov    DWORD PTR [ebx+0x1c],esi
   18f78:	jmp    0x18fc4
   18f7a:	push   DWORD PTR [ebx+0xc]
   18f7d:	call   0x1b516
   18f82:	jmp    0x18fc1
   18f84:	mov    eax,DWORD PTR [ebx+0xc]
   18f87:	mov    ecx,DWORD PTR [eax+0x4]
   18f8a:	add    ecx,0x8
   18f8d:	mov    DWORD PTR [ebx+0x1c],ecx
   18f90:	push   eax
   18f91:	call   0x1b7e4
   18f96:	jmp    0x18fc4
   18f98:	call   0x1b426
   18f9d:	jmp    0x18fc1
   18f9f:	mov    eax,DWORD PTR [ebx+0xc]
   18fa2:	mov    ecx,DWORD PTR [eax+0x4]
   18fa5:	add    ecx,0x8
   18fa8:	mov    DWORD PTR [ebx+0x1c],ecx
   18fab:	push   eax
   18fac:	call   0x1a84c
   18fb1:	jmp    0x18fc4
   18fb3:	push   DWORD PTR [ebx+0xc]
   18fb6:	call   0x12888
   18fbb:	push   eax
   18fbc:	call   0x1b648
   18fc1:	mov    DWORD PTR [ebx+0x1c],edi
   18fc4:	mov    eax,DWORD PTR [ebp-0x24]
   18fc7:	call   0x1db0d
   18fcc:	ret    0x8
   18fcf:	int3   
   18fd0:	int3   
   18fd1:	int3   
   18fd2:	int3   
   18fd3:	int3   
   18fd4:	mov    edi,edi
   18fd6:	push   ebp
   18fd7:	mov    ebp,esp
   18fd9:	push   esi
   18fda:	mov    esi,ecx
   18fdc:	mov    BYTE PTR [esi+0x8],0x0
   18fe0:	call   0x15642
   18fe5:	lea    ecx,[esi+0x10]
   18fe8:	mov    BYTE PTR [ecx+0x8],0x0
   18fec:	call   0x1498a
   18ff1:	mov    eax,DWORD PTR [ebp+0x8]
   18ff4:	mov    DWORD PTR [esi+0x20],eax
   18ff7:	mov    eax,DWORD PTR [ebp+0xc]
   18ffa:	mov    DWORD PTR [esi+0x24],eax
   18ffd:	mov    eax,esi
   18fff:	pop    esi
   19000:	pop    ebp
   19001:	ret    0x8
   19004:	int3   
   19005:	int3   
   19006:	int3   
   19007:	int3   
   19008:	int3   
   19009:	int3   
   1900a:	push   0xc
   1900c:	push   0x77290
   19011:	call   0x1dac8
   19016:	and    DWORD PTR [ebp-0x4],0x0
   1901a:	push   DWORD PTR [ebp+0xc]
   1901d:	push   DWORD PTR [ebp+0x8]
   19020:	call   0x18b04
   19025:	mov    esi,eax
   19027:	jmp    0x1903c
   19029:	xor    eax,eax
   1902b:	inc    eax
   1902c:	ret    
   1902d:	mov    esp,DWORD PTR [ebp-0x18]
   19030:	push   0xd
   19032:	call   0x10fc0
   19037:	mov    esi,0xc0000001
   1903c:	mov    DWORD PTR [ebp-0x1c],esi
   1903f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19046:	cmp    esi,0x103
   1904c:	je     0x1905c
   1904e:	mov    ecx,DWORD PTR [ebp+0xc]
   19051:	mov    DWORD PTR [ecx+0x18],esi
   19054:	xor    dl,dl
   19056:	call   DWORD PTR ds:0x1f044
   1905c:	mov    eax,esi
   1905e:	call   0x1db0d
   19063:	ret    0x8
   19066:	int3   
   19067:	int3   
   19068:	int3   
   19069:	int3   
   1906a:	int3   
   1906b:	int3   
   1906c:	push   0x854
   19071:	push   0x772b0
   19076:	call   0x1ddd0
   1907b:	mov    esi,DWORD PTR [ebp+0x8]
   1907e:	mov    DWORD PTR [ebp-0x830],esi
   19084:	mov    edi,DWORD PTR [ebp+0xc]
   19087:	call   0x183a4
   1908c:	call   0x11bbe
   19091:	test   eax,eax
   19093:	je     0x19694
   19099:	xor    ebx,ebx
   1909b:	mov    DWORD PTR [ebp-0x834],ebx
   190a1:	call   0x18214
   190a6:	cmp    al,bl
   190a8:	jne    0x192c8
   190ae:	mov    DWORD PTR [ebp-0x4],ebx
   190b1:	push   ebx
   190b2:	push   0x77eb8
   190b7:	call   0x11b40
   190bc:	call   eax
   190be:	push   0x10
   190c0:	call   0x11d96
   190c5:	pop    ecx
   190c6:	cmp    eax,ebx
   190c8:	je     0x190e1
   190ca:	lea    ecx,[ebp-0x81d]
   190d0:	push   ecx
   190d1:	lea    ecx,[ebp-0x81d]
   190d7:	push   ecx
   190d8:	mov    ecx,eax
   190da:	call   0x16ac4
   190df:	jmp    0x190e3
   190e1:	xor    eax,eax
   190e3:	mov    ecx,eax
   190e5:	mov    DWORD PTR ds:0x77ee0,ecx
   190eb:	call   0x16710
   190f0:	push   edi
   190f1:	push   0x1ec34
   190f6:	lea    eax,[ebp-0x41c]
   190fc:	push   eax
   190fd:	call   0x1daba
   19102:	add    esp,0xc
   19105:	push   0xffffffff
   19107:	lea    eax,[ebp-0x41c]
   1910d:	push   eax
   1910e:	lea    ecx,[ebp-0x828]
   19114:	call   0x129ea
   19119:	lea    eax,[ebp-0x828]
   1911f:	push   eax
   19120:	mov    ecx,DWORD PTR ds:0x77ee0
   19126:	call   0x16f8e
   1912b:	mov    edi,eax
   1912d:	push   DWORD PTR [ebp-0x828]
   19133:	call   0x10990
   19138:	pop    ecx
   19139:	lea    eax,[ebp-0x83c]
   1913f:	push   eax
   19140:	call   DWORD PTR ds:0x1f04c
   19146:	push   ebx
   19147:	push   0x989680
   1914c:	push   DWORD PTR [ebp-0x838]
   19152:	push   DWORD PTR [ebp-0x83c]
   19158:	call   0x1da7e
   1915d:	inc    eax
   1915e:	mov    DWORD PTR [edi+0x20],eax
   19161:	cmp    eax,ebx
   19163:	jge    0x1916c
   19165:	mov    DWORD PTR [edi+0x20],0x1
   1916c:	push   0xffffffff
   1916e:	push   0x1ebf4
   19173:	push   0x4
   19175:	push   0x1ebee
   1917a:	call   0x16e98
   1917f:	push   eax
   19180:	lea    ecx,[ebp-0x828]
   19186:	call   0x134e8
   1918b:	lea    eax,[ebp-0x828]
   19191:	push   eax
   19192:	mov    ecx,edi
   19194:	call   0x128b4
   19199:	push   DWORD PTR [ebp-0x828]
   1919f:	call   0x10990
   191a4:	mov    DWORD PTR [esp],0x1ebcc
   191ab:	push   0x4
   191ad:	push   0x1ebc2
   191b2:	call   0x16da2
   191b7:	mov    DWORD PTR [ebp-0x824],eax
   191bd:	lea    ecx,[eax+0x2]
   191c0:	mov    dx,WORD PTR [eax]
   191c3:	inc    eax
   191c4:	inc    eax
   191c5:	cmp    dx,bx
   191c8:	jne    0x191c0
   191ca:	sub    eax,ecx
   191cc:	sar    eax,1
   191ce:	add    eax,eax
   191d0:	mov    WORD PTR [ebp-0x826],ax
   191d7:	mov    WORD PTR [ebp-0x828],ax
   191de:	mov    DWORD PTR [ebp-0x854],0x18
   191e8:	mov    DWORD PTR [ebp-0x850],ebx
   191ee:	mov    DWORD PTR [ebp-0x848],0x40
   191f8:	lea    eax,[ebp-0x828]
   191fe:	mov    DWORD PTR [ebp-0x84c],eax
   19204:	mov    DWORD PTR [ebp-0x844],ebx
   1920a:	mov    DWORD PTR [ebp-0x840],ebx
   19210:	mov    eax,DWORD PTR [ebp-0x824]
   19216:	lea    ecx,[eax+0x2]
   19219:	mov    dx,WORD PTR [eax]
   1921c:	inc    eax
   1921d:	inc    eax
   1921e:	cmp    dx,bx
   19221:	jne    0x19219
   19223:	sub    eax,ecx
   19225:	sar    eax,1
   19227:	mov    DWORD PTR [ebp-0x834],eax
   1922d:	push   0xffffffff
   1922f:	push   0x1eb8c
   19234:	push   0x8
   19236:	push   0x1eb82
   1923b:	call   0x16e98
   19240:	push   eax
   19241:	lea    ecx,[ebp-0x828]
   19247:	call   0x134e8
   1924c:	lea    ecx,[edi+0x8]
   1924f:	lea    eax,[ebp-0x828]
   19255:	push   eax
   19256:	call   0x128b4
   1925b:	push   DWORD PTR [ebp-0x828]
   19261:	call   0x10990
   19266:	pop    ecx
   19267:	push   0xffffffff
   19269:	push   0x1ded8
   1926e:	lea    ecx,[ebp-0x828]
   19274:	call   0x129ea
   19279:	lea    eax,[ebp-0x828]
   1927f:	push   eax
   19280:	lea    ecx,[edi+0x10]
   19283:	call   0x128b4
   19288:	push   DWORD PTR [ebp-0x828]
   1928e:	call   0x10990
   19293:	pop    ecx
   19294:	lea    eax,[edi+0x8]
   19297:	push   eax
   19298:	lea    ecx,[edi+0x18]
   1929b:	call   0x128b4
   192a0:	mov    eax,DWORD PTR [edi+0x20]
   192a3:	or     DWORD PTR [ebp-0x834],eax
   192a9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192b0:	jmp    0x192c8
   192b2:	xor    eax,eax
   192b4:	inc    eax
   192b5:	ret    
   192b6:	mov    esp,DWORD PTR [ebp-0x18]
   192b9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192c0:	xor    ebx,ebx
   192c2:	mov    esi,DWORD PTR [ebp-0x830]
   192c8:	cmp    DWORD PTR [ebp-0x834],ebx
   192ce:	jne    0x19694
   192d4:	xor    eax,eax
   192d6:	lea    edi,[ebp-0x844]
   192dc:	stos   DWORD PTR es:[edi],eax
   192dd:	stos   DWORD PTR es:[edi],eax
   192de:	mov    DWORD PTR [ebp-0x848],0xc
   192e8:	mov    DWORD PTR [ebp-0x844],0x2
   192f2:	mov    BYTE PTR [ebp-0x840],bl
   192f8:	mov    BYTE PTR [ebp-0x83f],bl
   192fe:	push   0x77578
   19303:	push   ebx
   19304:	lea    eax,[ebp-0x848]
   1930a:	push   eax
   1930b:	call   0x11b94
   19310:	call   eax
   19312:	push   eax
   19313:	call   0x11a98
   19318:	call   eax
   1931a:	push   0x10
   1931c:	call   0x11d96
   19321:	pop    ecx
   19322:	cmp    eax,ebx
   19324:	je     0x19342
   19326:	lea    ecx,[ebp-0x81d]
   1932c:	push   ecx
   1932d:	lea    ecx,[ebp-0x81d]
   19333:	push   ecx
   19334:	mov    ecx,eax
   19336:	call   0x16ac4
   1933b:	mov    ds:0x77ee0,eax
   19340:	jmp    0x19348
   19342:	mov    DWORD PTR ds:0x77ee0,ebx
   19348:	push   0x2c
   1934a:	call   0x11d96
   1934f:	pop    ecx
   19350:	cmp    eax,ebx
   19352:	je     0x19369
   19354:	push   0x96
   19359:	push   0x14
   1935b:	mov    ecx,eax
   1935d:	call   0x17166
   19362:	mov    ds:0x77ee8,eax
   19367:	jmp    0x1936f
   19369:	mov    DWORD PTR ds:0x77ee8,ebx
   1936f:	push   0x10
   19371:	call   0x11d96
   19376:	pop    ecx
   19377:	cmp    eax,ebx
   19379:	je     0x19397
   1937b:	lea    ecx,[ebp-0x81d]
   19381:	push   ecx
   19382:	lea    ecx,[ebp-0x81d]
   19388:	push   ecx
   19389:	mov    ecx,eax
   1938b:	call   0x16650
   19390:	mov    ds:0x77528,eax
   19395:	jmp    0x1939d
   19397:	mov    DWORD PTR ds:0x77528,ebx
   1939d:	push   0x10
   1939f:	call   0x11d96
   193a4:	pop    ecx
   193a5:	cmp    eax,ebx
   193a7:	je     0x193c5
   193a9:	lea    ecx,[ebp-0x81d]
   193af:	push   ecx
   193b0:	lea    ecx,[ebp-0x81d]
   193b6:	push   ecx
   193b7:	mov    ecx,eax
   193b9:	call   0x16ade
   193be:	mov    ds:0x775b4,eax
   193c3:	jmp    0x193cb
   193c5:	mov    DWORD PTR ds:0x775b4,ebx
   193cb:	push   0x28
   193cd:	call   0x11d96
   193d2:	pop    ecx
   193d3:	cmp    eax,ebx
   193d5:	je     0x193e9
   193d7:	push   0x64
   193d9:	push   0x14
   193db:	mov    ecx,eax
   193dd:	call   0x18fd4
   193e2:	mov    ds:0x77554,eax
   193e7:	jmp    0x193ef
   193e9:	mov    DWORD PTR ds:0x77554,ebx
   193ef:	push   0x20
   193f1:	call   0x11d96
   193f6:	pop    ecx
   193f7:	cmp    eax,ebx
   193f9:	je     0x19409
   193fb:	mov    ecx,eax
   193fd:	call   0x16a64
   19402:	mov    ds:0x77550,eax
   19407:	jmp    0x1940f
   19409:	mov    DWORD PTR ds:0x77550,ebx
   1940f:	call   0x12860
   19414:	call   0x1b5b0
   19419:	call   0x16cd8
   1941e:	push   0x1eb72
   19423:	call   0x184ec
   19428:	push   eax
   19429:	push   0x1eb46
   1942e:	push   0xa
   19430:	push   0x1eb30
   19435:	call   0x16da2
   1943a:	push   eax
   1943b:	lea    eax,[ebp-0x41c]
   19441:	push   eax
   19442:	call   0x1daae
   19447:	add    esp,0xc
   1944a:	lea    eax,[ebp-0x41c]
   19450:	push   eax
   19451:	lea    eax,[ebp-0x85c]
   19457:	push   eax
   19458:	mov    edi,DWORD PTR ds:0x1f008
   1945e:	call   edi
   19460:	push   0x1eb72
   19465:	call   0x184ec
   1946a:	push   eax
   1946b:	push   0x1eb0a
   19470:	push   0xe
   19472:	push   0x1eaec
   19477:	call   0x16da2
   1947c:	push   eax
   1947d:	lea    eax,[ebp-0x81c]
   19483:	push   eax
   19484:	call   0x1daae
   19489:	add    esp,0xc
   1948c:	lea    eax,[ebp-0x81c]
   19492:	push   eax
   19493:	lea    eax,[ebp-0x864]
   19499:	push   eax
   1949a:	call   edi
   1949c:	push   0x77f24
   194a1:	push   ebx
   194a2:	push   0x100
   194a7:	push   0x22
   194a9:	lea    eax,[ebp-0x85c]
   194af:	push   eax
   194b0:	push   ebx
   194b1:	push   esi
   194b2:	call   0x11a6e
   194b7:	call   eax
   194b9:	cmp    eax,ebx
   194bb:	jl     0x19696
   194c1:	mov    eax,0x1900a
   194c6:	mov    DWORD PTR [esi+0x94],eax
   194cc:	mov    DWORD PTR [esi+0x90],eax
   194d2:	mov    DWORD PTR [esi+0xa4],eax
   194d8:	mov    DWORD PTR [esi+0x70],eax
   194db:	mov    DWORD PTR [esi+0x48],eax
   194de:	mov    DWORD PTR [esi+0x44],eax
   194e1:	mov    DWORD PTR [esi+0x40],eax
   194e4:	mov    DWORD PTR [esi+0x38],eax
   194e7:	mov    eax,ds:0x77f24
   194ec:	or     DWORD PTR [eax+0x1c],0x4
   194f0:	lea    eax,[ebp-0x85c]
   194f6:	push   eax
   194f7:	lea    eax,[ebp-0x864]
   194fd:	push   eax
   194fe:	call   0x11a44
   19503:	call   eax
   19505:	mov    DWORD PTR [ebp-0x830],eax
   1950b:	cmp    eax,ebx
   1950d:	jge    0x19524
   1950f:	push   DWORD PTR [esi+0x4]
   19512:	call   0x118f4
   19517:	call   eax
   19519:	mov    eax,DWORD PTR [ebp-0x830]
   1951f:	jmp    0x19696
   19524:	push   ebx
   19525:	push   0x77eb8
   1952a:	call   0x11b40
   1952f:	call   eax
   19531:	push   ebx
   19532:	push   0x77558
   19537:	call   0x11b40
   1953c:	call   eax
   1953e:	push   ebx
   1953f:	push   0x7752c
   19544:	call   0x11b40
   19549:	call   eax
   1954b:	push   0x8000000
   19550:	push   0x1eabe
   19555:	push   0x9
   19557:	push   0x1e732
   1955c:	call   0x16e98
   19561:	push   eax
   19562:	lea    eax,[ebp-0x82c]
   19568:	push   eax
   19569:	call   0x19ad0
   1956e:	push   DWORD PTR [ebp-0x82c]
   19574:	call   0x11726
   19579:	call   eax
   1957b:	mov    DWORD PTR [ebp-0x838],eax
   19581:	push   ebx
   19582:	push   0x1ea90
   19587:	push   0x16
   19589:	push   0x1ea78
   1958e:	call   0x16e98
   19593:	push   eax
   19594:	push   DWORD PTR [ebp-0x82c]
   1959a:	call   0x199b6
   1959f:	push   eax
   195a0:	push   DWORD PTR [ebp-0x838]
   195a6:	call   0x1995c
   195ab:	mov    edi,eax
   195ad:	add    edi,DWORD PTR [ebp-0x82c]
   195b3:	mov    esi,0x1deda
   195b8:	push   esi
   195b9:	call   0x114aa
   195be:	mov    DWORD PTR [ebp-0x824],eax
   195c4:	push   edi
   195c5:	call   0x19904
   195ca:	mov    ecx,DWORD PTR [ebp-0x824]
   195d0:	mov    ecx,DWORD PTR [ecx]
   195d2:	mov    eax,DWORD PTR [ecx+eax*4]
   195d5:	mov    ds:0x77ee4,eax
   195da:	push   ebx
   195db:	push   0x1ea4e
   195e0:	push   0x14
   195e2:	push   0x1ea38
   195e7:	call   0x16e98
   195ec:	push   eax
   195ed:	push   DWORD PTR [ebp-0x82c]
   195f3:	call   0x199b6
   195f8:	push   eax
   195f9:	push   DWORD PTR [ebp-0x838]
   195ff:	call   0x1995c
   19604:	mov    edi,eax
   19606:	add    edi,DWORD PTR [ebp-0x82c]
   1960c:	push   esi
   1960d:	call   0x114aa
   19612:	mov    DWORD PTR [ebp-0x824],eax
   19618:	push   edi
   19619:	call   0x19904
   1961e:	mov    ecx,DWORD PTR [ebp-0x824]
   19624:	mov    ecx,DWORD PTR [ecx]
   19626:	mov    eax,DWORD PTR [ecx+eax*4]
   19629:	mov    ds:0x77ed8,eax
   1962e:	push   ebx
   1962f:	push   0x1ea14
   19634:	push   0xe
   19636:	push   0x1ea04
   1963b:	call   0x16e98
   19640:	push   eax
   19641:	push   DWORD PTR [ebp-0x82c]
   19647:	call   0x199b6
   1964c:	push   eax
   1964d:	push   DWORD PTR [ebp-0x838]
   19653:	call   0x1995c
   19658:	mov    edi,eax
   1965a:	add    edi,DWORD PTR [ebp-0x82c]
   19660:	push   esi
   19661:	call   0x114aa
   19666:	mov    esi,eax
   19668:	push   edi
   19669:	call   0x19904
   1966e:	mov    ecx,DWORD PTR [esi]
   19670:	mov    eax,DWORD PTR [ecx+eax*4]
   19673:	mov    ds:0x77eec,eax
   19678:	push   DWORD PTR [ebp-0x82c]
   1967e:	call   0x19c1e
   19683:	call   0x187ec
   19688:	mov    BYTE PTR ds:0x77f28,0x1
   1968f:	jmp    0x19519
   19694:	xor    eax,eax
   19696:	call   0x1de18
   1969b:	ret    0x8
   1969e:	int3   
   1969f:	int3   
   196a0:	int3   
   196a1:	int3   
   196a2:	int3   
   196a3:	int3   
   196a4:	mov    edi,edi
   196a6:	push   ebp
   196a7:	mov    ebp,esp
   196a9:	push   ecx
   196aa:	mov    ecx,DWORD PTR [ebp+0x8]
   196ad:	mov    eax,DWORD PTR [ecx+0x4]
   196b0:	mov    edx,DWORD PTR [ebp+0xc]
   196b3:	push   ebx
   196b4:	mov    ebx,DWORD PTR [edx+0x4]
   196b7:	push   esi
   196b8:	push   edi
   196b9:	mov    DWORD PTR [ebp-0x4],eax
   196bc:	mov    DWORD PTR [ebp+0x8],eax
   196bf:	cmp    eax,ebx
   196c1:	jbe    0x196c6
   196c3:	mov    DWORD PTR [ebp+0x8],ebx
   196c6:	xor    eax,eax
   196c8:	cmp    DWORD PTR [ebp+0x8],eax
   196cb:	jbe    0x196e3
   196cd:	mov    esi,DWORD PTR [ecx]
   196cf:	mov    edi,DWORD PTR [edx]
   196d1:	mov    cl,BYTE PTR [esi+eax*1]
   196d4:	mov    dl,BYTE PTR [edi+eax*1]
   196d7:	cmp    cl,dl
   196d9:	jl     0x196f0
   196db:	jg     0x196f4
   196dd:	inc    eax
   196de:	cmp    eax,DWORD PTR [ebp+0x8]
   196e1:	jb     0x196d1
   196e3:	cmp    DWORD PTR [ebp-0x4],ebx
   196e6:	setb   al
   196e9:	pop    edi
   196ea:	pop    esi
   196eb:	pop    ebx
   196ec:	leave  
   196ed:	ret    0x8
   196f0:	mov    al,0x1
   196f2:	jmp    0x196e9
   196f4:	xor    al,al
   196f6:	jmp    0x196e9
   196f8:	int3   
   196f9:	int3   
   196fa:	int3   
   196fb:	int3   
   196fc:	int3   
   196fd:	int3   
   196fe:	mov    edi,edi
   19700:	push   ebp
   19701:	mov    ebp,esp
   19703:	mov    eax,DWORD PTR [ebp+0x8]
   19706:	mov    ecx,DWORD PTR [eax+0x4]
   19709:	mov    edx,DWORD PTR [ebp+0xc]
   1970c:	cmp    ecx,DWORD PTR [edx+0x4]
   1970f:	je     0x19715
   19711:	xor    al,al
   19713:	jmp    0x19724
   19715:	push   esi
   19716:	mov    esi,DWORD PTR [eax]
   19718:	push   edi
   19719:	mov    edi,DWORD PTR [edx]
   1971b:	xor    eax,eax
   1971d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1971f:	pop    edi
   19720:	sete   al
   19723:	pop    esi
   19724:	pop    ebp
   19725:	ret    0x8
   19728:	int3   
   19729:	int3   
   1972a:	int3   
   1972b:	int3   
   1972c:	int3   
   1972d:	int3   
   1972e:	mov    edi,edi
   19730:	push   ebp
   19731:	mov    ebp,esp
   19733:	push   DWORD PTR [ebp+0xc]
   19736:	push   DWORD PTR [ebp+0x8]
   19739:	call   0x196fe
   1973e:	xor    ecx,ecx
   19740:	test   al,al
   19742:	sete   cl
   19745:	mov    al,cl
   19747:	pop    ebp
   19748:	ret    0x8
   1974b:	int3   
   1974c:	int3   
   1974d:	int3   
   1974e:	int3   
   1974f:	int3   
   19750:	mov    edi,edi
   19752:	push   ebp
   19753:	mov    ebp,esp
   19755:	push   ecx
   19756:	mov    ecx,DWORD PTR [ebp+0x8]
   19759:	mov    eax,DWORD PTR [ebp+0xc]
   1975c:	push   ebx
   1975d:	mov    ebx,DWORD PTR [eax+0x4]
   19760:	push   esi
   19761:	push   edi
   19762:	mov    edi,DWORD PTR [ecx+0x4]
   19765:	mov    DWORD PTR [ebp-0x4],edi
   19768:	cmp    edi,ebx
   1976a:	jbe    0x1976e
   1976c:	mov    edi,ebx
   1976e:	and    DWORD PTR [ebp+0x8],0x0
   19772:	test   edi,edi
   19774:	jbe    0x19794
   19776:	mov    eax,DWORD PTR [eax]
   19778:	mov    ecx,DWORD PTR [ecx]
   1977a:	sub    ecx,eax
   1977c:	movzx  edx,WORD PTR [ecx+eax*1]
   19780:	movzx  esi,WORD PTR [eax]
   19783:	cmp    dx,si
   19786:	jb     0x197a1
   19788:	ja     0x197a5
   1978a:	inc    DWORD PTR [ebp+0x8]
   1978d:	inc    eax
   1978e:	inc    eax
   1978f:	cmp    DWORD PTR [ebp+0x8],edi
   19792:	jb     0x1977c
   19794:	cmp    DWORD PTR [ebp-0x4],ebx
   19797:	setb   al
   1979a:	pop    edi
   1979b:	pop    esi
   1979c:	pop    ebx
   1979d:	leave  
   1979e:	ret    0x8
   197a1:	mov    al,0x1
   197a3:	jmp    0x1979a
   197a5:	xor    al,al
   197a7:	jmp    0x1979a
   197a9:	int3   
   197aa:	int3   
   197ab:	int3   
   197ac:	int3   
   197ad:	int3   
   197ae:	mov    edi,edi
   197b0:	push   ebp
   197b1:	mov    ebp,esp
   197b3:	pop    ebp
   197b4:	jmp    0x196a4
   197b9:	int3   
   197ba:	int3   
   197bb:	int3   
   197bc:	int3   
   197bd:	int3   
   197be:	mov    edi,edi
   197c0:	push   ebp
   197c1:	mov    ebp,esp
   197c3:	pop    ebp
   197c4:	jmp    0x196fe
   197c9:	int3   
   197ca:	int3   
   197cb:	int3   
   197cc:	int3   
   197cd:	int3   
   197ce:	mov    edi,edi
   197d0:	push   ebp
   197d1:	mov    ebp,esp
   197d3:	pop    ebp
   197d4:	jmp    0x1972e
   197d9:	int3   
   197da:	int3   
   197db:	int3   
   197dc:	int3   
   197dd:	int3   
   197de:	mov    edi,edi
   197e0:	push   ebp
   197e1:	mov    ebp,esp
   197e3:	pop    ebp
   197e4:	jmp    0x19750
   197e9:	int3   
   197ea:	int3   
   197eb:	int3   
   197ec:	int3   
   197ed:	int3   
   197ee:	mov    edi,edi
   197f0:	push   ebp
   197f1:	mov    ebp,esp
   197f3:	mov    eax,DWORD PTR [ebp+0x8]
   197f6:	mov    cl,BYTE PTR [ebp+0xc]
   197f9:	mov    BYTE PTR [eax],cl
   197fb:	inc    eax
   197fc:	pop    ebp
   197fd:	ret    0x8
   19800:	int3   
   19801:	int3   
   19802:	int3   
   19803:	int3   
   19804:	int3   
   19805:	int3   
   19806:	mov    edi,edi
   19808:	push   ebp
   19809:	mov    ebp,esp
   1980b:	mov    eax,DWORD PTR [ebp+0x8]
   1980e:	mov    ecx,DWORD PTR [ebp+0xc]
   19811:	mov    DWORD PTR [eax],ecx
   19813:	add    eax,0x4
   19816:	pop    ebp
   19817:	ret    0x8
   1981a:	int3   
   1981b:	int3   
   1981c:	int3   
   1981d:	int3   
   1981e:	int3   
   1981f:	int3   
   19820:	mov    edi,edi
   19822:	push   ebp
   19823:	mov    ebp,esp
   19825:	mov    eax,DWORD PTR [ebp+0x8]
   19828:	mov    cx,WORD PTR [ebp+0xc]
   1982c:	mov    WORD PTR [eax],cx
   1982f:	add    eax,0x2
   19832:	pop    ebp
   19833:	ret    0x8
   19836:	int3   
   19837:	int3   
   19838:	int3   
   19839:	int3   
   1983a:	int3   
   1983b:	int3   
   1983c:	mov    edi,edi
   1983e:	push   ebp
   1983f:	mov    ebp,esp
   19841:	push   esi
   19842:	mov    esi,DWORD PTR [ebp+0x10]
   19845:	push   edi
   19846:	mov    edi,DWORD PTR [ebp+0x8]
   19849:	push   esi
   1984a:	push   DWORD PTR [ebp+0xc]
   1984d:	push   edi
   1984e:	call   0x1da96
   19853:	add    esp,0xc
   19856:	lea    eax,[edi+esi*1]
   19859:	pop    edi
   1985a:	pop    esi
   1985b:	pop    ebp
   1985c:	ret    0xc
   1985f:	int3   
   19860:	int3   
   19861:	int3   
   19862:	int3   
   19863:	int3   
   19864:	mov    edi,edi
   19866:	push   ebp
   19867:	mov    ebp,esp
   19869:	mov    eax,DWORD PTR [ebp+0xc]
   1986c:	mov    ecx,DWORD PTR [ebp+0x8]
   1986f:	sub    ecx,eax
   19871:	sub    ecx,0x5
   19874:	mov    DWORD PTR [eax+0x1],ecx
   19877:	mov    BYTE PTR [eax],0xe9
   1987a:	add    eax,0x5
   1987d:	pop    ebp
   1987e:	ret    0x8
   19881:	int3   
   19882:	int3   
   19883:	int3   
   19884:	int3   
   19885:	int3   
   19886:	mov    edi,edi
   19888:	push   ebp
   19889:	mov    ebp,esp
   1988b:	push   ecx
   1988c:	push   ebx
   1988d:	mov    ebx,DWORD PTR [ebp+0x8]
   19890:	and    DWORD PTR [ebp+0x8],0x0
   19894:	push   edi
   19895:	mov    edi,ebx
   19897:	test   ebx,ebx
   19899:	jne    0x1989f
   1989b:	xor    eax,eax
   1989d:	jmp    0x198f9
   1989f:	push   esi
   198a0:	push   0x20736649
   198a5:	push   0x80
   198aa:	push   0x0
   198ac:	call   DWORD PTR ds:0x1f028
   198b2:	mov    esi,eax
   198b4:	mov    DWORD PTR [ebp-0x4],esi
   198b7:	push   0x0
   198b9:	push   edi
   198ba:	push   esi
   198bb:	call   0x19fa0
   198c0:	mov    ecx,eax
   198c2:	sub    ecx,edi
   198c4:	add    DWORD PTR [ebp+0x8],ecx
   198c7:	add    esi,ecx
   198c9:	cmp    DWORD PTR [ebp+0x8],0x5
   198cd:	mov    edi,eax
   198cf:	jb     0x198b7
   198d1:	push   DWORD PTR [ebp+0x8]
   198d4:	push   0x90
   198d9:	push   ebx
   198da:	call   0x1da8a
   198df:	add    esp,0xc
   198e2:	push   esi
   198e3:	lea    eax,[ebx+0x5]
   198e6:	push   eax
   198e7:	call   0x19864
   198ec:	push   ebx
   198ed:	push   DWORD PTR [ebp+0xc]
   198f0:	call   0x19864
   198f5:	mov    eax,DWORD PTR [ebp-0x4]
   198f8:	pop    esi
   198f9:	pop    edi
   198fa:	pop    ebx
   198fb:	leave  
   198fc:	ret    0x8
   198ff:	int3   
   19900:	int3   
   19901:	int3   
   19902:	int3   
   19903:	int3   
   19904:	mov    edi,edi
   19906:	push   ebp
   19907:	mov    ebp,esp
   19909:	mov    eax,DWORD PTR [ebp+0x8]
   1990c:	mov    eax,DWORD PTR [eax+0x1]
   1990f:	pop    ebp
   19910:	ret    0x4
   19913:	int3   
   19914:	int3   
   19915:	int3   
   19916:	int3   
   19917:	int3   
   19918:	mov    edi,edi
   1991a:	push   ebp
   1991b:	mov    ebp,esp
   1991d:	mov    ecx,DWORD PTR [ebp+0x8]
   19920:	movzx  eax,WORD PTR [ecx+0x14]
   19924:	lea    eax,[eax+ecx*1+0x18]
   19928:	movzx  ecx,WORD PTR [ecx+0x6]
   1992c:	push   esi
   1992d:	xor    esi,esi
   1992f:	push   edi
   19930:	test   ecx,ecx
   19932:	jbe    0x1994e
   19934:	mov    edx,DWORD PTR [eax+0xc]
   19937:	cmp    DWORD PTR [ebp+0xc],edx
   1993a:	jb     0x19946
   1993c:	mov    edi,DWORD PTR [eax+0x8]
   1993f:	add    edi,edx
   19941:	cmp    DWORD PTR [ebp+0xc],edi
   19944:	jb     0x19950
   19946:	add    eax,0x28
   19949:	inc    esi
   1994a:	cmp    esi,ecx
   1994c:	jb     0x19934
   1994e:	xor    eax,eax
   19950:	pop    edi
   19951:	pop    esi
   19952:	pop    ebp
   19953:	ret    0x8
   19956:	int3   
   19957:	int3   
   19958:	int3   
   19959:	int3   
   1995a:	int3   
   1995b:	int3   
   1995c:	mov    edi,edi
   1995e:	push   ebp
   1995f:	mov    ebp,esp
   19961:	push   esi
   19962:	push   DWORD PTR [ebp+0xc]
   19965:	mov    esi,DWORD PTR [ebp+0x8]
   19968:	push   esi
   19969:	call   0x19918
   1996e:	mov    ecx,eax
   19970:	test   ecx,ecx
   19972:	je     0x19985
   19974:	mov    eax,DWORD PTR [esi+0x3c]
   19977:	dec    eax
   19978:	not    eax
   1997a:	and    eax,DWORD PTR [ecx+0x14]
   1997d:	sub    eax,DWORD PTR [ecx+0xc]
   19980:	add    eax,DWORD PTR [ebp+0xc]
   19983:	jmp    0x19988
   19985:	mov    eax,DWORD PTR [ebp+0xc]
   19988:	pop    esi
   19989:	pop    ebp
   1998a:	ret    0x8
   1998d:	int3   
   1998e:	int3   
   1998f:	int3   
   19990:	int3   
   19991:	int3   
   19992:	mov    edi,edi
   19994:	push   ebp
   19995:	mov    ebp,esp
   19997:	cmp    DWORD PTR [ebp+0x10],0x0
   1999b:	je     0x199a2
   1999d:	mov    eax,DWORD PTR [ebp+0xc]
   199a0:	jmp    0x199ad
   199a2:	push   DWORD PTR [ebp+0xc]
   199a5:	push   DWORD PTR [ebp+0x8]
   199a8:	call   0x1995c
   199ad:	pop    ebp
   199ae:	ret    0xc
   199b1:	int3   
   199b2:	int3   
   199b3:	int3   
   199b4:	int3   
   199b5:	int3   
   199b6:	mov    edi,edi
   199b8:	push   ebp
   199b9:	mov    ebp,esp
   199bb:	sub    esp,0x1c
   199be:	push   ebx
   199bf:	push   esi
   199c0:	mov    esi,DWORD PTR [ebp+0x8]
   199c3:	push   edi
   199c4:	push   esi
   199c5:	call   0x11726
   199ca:	call   eax
   199cc:	mov    ebx,eax
   199ce:	lea    eax,[ebp-0x14]
   199d1:	push   eax
   199d2:	push   0x0
   199d4:	push   0x0
   199d6:	push   esi
   199d7:	mov    DWORD PTR [ebp-0x4],ebx
   199da:	call   0x11750
   199df:	call   eax
   199e1:	mov    edi,eax
   199e3:	mov    eax,DWORD PTR [ebx+0x50]
   199e6:	mov    ecx,edi
   199e8:	sub    ecx,esi
   199ea:	cmp    eax,ecx
   199ec:	jb     0x19a3d
   199ee:	mov    ecx,DWORD PTR [ebp-0x14]
   199f1:	sub    ecx,esi
   199f3:	add    ecx,edi
   199f5:	cmp    eax,ecx
   199f7:	jb     0x19a3d
   199f9:	push   DWORD PTR [ebp+0x10]
   199fc:	push   DWORD PTR [edi+0x20]
   199ff:	push   ebx
   19a00:	call   0x19992
   19a05:	push   DWORD PTR [ebp+0x10]
   19a08:	mov    ebx,eax
   19a0a:	push   DWORD PTR [edi+0x1c]
   19a0d:	add    ebx,esi
   19a0f:	push   DWORD PTR [ebp-0x4]
   19a12:	call   0x19992
   19a17:	push   DWORD PTR [ebp+0x10]
   19a1a:	add    eax,esi
   19a1c:	push   DWORD PTR [edi+0x24]
   19a1f:	mov    DWORD PTR [ebp-0x1c],eax
   19a22:	push   DWORD PTR [ebp-0x4]
   19a25:	call   0x19992
   19a2a:	and    DWORD PTR [ebp-0xc],0x0
   19a2e:	add    eax,esi
   19a30:	mov    esi,DWORD PTR [edi+0x18]
   19a33:	mov    DWORD PTR [ebp-0x18],eax
   19a36:	mov    DWORD PTR [ebp-0x8],esi
   19a39:	test   esi,esi
   19a3b:	jg     0x19a49
   19a3d:	xor    eax,eax
   19a3f:	pop    edi
   19a40:	pop    esi
   19a41:	pop    ebx
   19a42:	leave  
   19a43:	ret    0xc
   19a46:	mov    esi,DWORD PTR [ebp-0x8]
   19a49:	mov    eax,DWORD PTR [ebp-0xc]
   19a4c:	push   DWORD PTR [ebp+0x10]
   19a4f:	add    esi,eax
   19a51:	mov    eax,DWORD PTR [ebp+0xc]
   19a54:	sar    esi,1
   19a56:	push   DWORD PTR [ebx+esi*4]
   19a59:	mov    DWORD PTR [ebp-0x10],eax
   19a5c:	push   DWORD PTR [ebp-0x4]
   19a5f:	call   0x19992
   19a64:	add    eax,DWORD PTR [ebp+0x8]
   19a67:	mov    cl,BYTE PTR [eax]
   19a69:	mov    edx,DWORD PTR [ebp-0x10]
   19a6c:	cmp    cl,BYTE PTR [edx]
   19a6e:	jne    0x19a8b
   19a70:	test   cl,cl
   19a72:	je     0x19a87
   19a74:	mov    cl,BYTE PTR [eax+0x1]
   19a77:	cmp    cl,BYTE PTR [edx+0x1]
   19a7a:	jne    0x19a8b
   19a7c:	inc    eax
   19a7d:	inc    eax
   19a7e:	inc    edx
   19a7f:	inc    edx
   19a80:	mov    DWORD PTR [ebp-0x10],edx
   19a83:	test   cl,cl
   19a85:	jne    0x19a67
   19a87:	xor    eax,eax
   19a89:	jmp    0x19a90
   19a8b:	sbb    eax,eax
   19a8d:	sbb    eax,0xffffffff
   19a90:	test   eax,eax
   19a92:	je     0x19aa9
   19a94:	jge    0x19a9c
   19a96:	inc    esi
   19a97:	mov    DWORD PTR [ebp-0xc],esi
   19a9a:	jmp    0x19a9f
   19a9c:	mov    DWORD PTR [ebp-0x8],esi
   19a9f:	mov    eax,DWORD PTR [ebp-0x8]
   19aa2:	cmp    DWORD PTR [ebp-0xc],eax
   19aa5:	jl     0x19a46
   19aa7:	jmp    0x19a3d
   19aa9:	mov    eax,DWORD PTR [ebp-0x18]
   19aac:	movzx  eax,WORD PTR [eax+esi*2]
   19ab0:	mov    ecx,DWORD PTR [ebp-0x1c]
   19ab3:	mov    ecx,DWORD PTR [ecx+eax*4]
   19ab6:	mov    eax,ecx
   19ab8:	sub    eax,edi
   19aba:	add    eax,DWORD PTR [ebp+0x8]
   19abd:	cmp    eax,DWORD PTR [ebp-0x14]
   19ac0:	sbb    eax,eax
   19ac2:	not    eax
   19ac4:	and    eax,ecx
   19ac6:	jmp    0x19a3f
   19acb:	int3   
   19acc:	int3   
   19acd:	int3   
   19ace:	int3   
   19acf:	int3   
   19ad0:	mov    edi,edi
   19ad2:	push   ebp
   19ad3:	mov    ebp,esp
   19ad5:	sub    esp,0x814
   19adb:	mov    eax,ds:0x7751c
   19ae0:	xor    eax,ebp
   19ae2:	mov    DWORD PTR [ebp-0x4],eax
   19ae5:	mov    ecx,DWORD PTR [ebp+0xc]
   19ae8:	push   ebx
   19ae9:	mov    ebx,DWORD PTR [ebp+0x8]
   19aec:	push   esi
   19aed:	push   edi
   19aee:	xor    esi,esi
   19af0:	xor    eax,eax
   19af2:	push   ecx
   19af3:	mov    DWORD PTR [ebp-0x7ec],esi
   19af9:	lea    edi,[ebp-0x7e8]
   19aff:	stos   DWORD PTR es:[edi],eax
   19b00:	lea    eax,[ebp-0x7d4]
   19b06:	push   0x1ec38
   19b0b:	push   eax
   19b0c:	mov    DWORD PTR [ebp-0x7d8],esi
   19b12:	mov    DWORD PTR [ebp-0x7e4],esi
   19b18:	call   DWORD PTR ds:0x1f048
   19b1e:	add    esp,0xc
   19b21:	lea    eax,[ebp-0x7d4]
   19b27:	push   eax
   19b28:	lea    eax,[ebp-0x80c]
   19b2e:	push   eax
   19b2f:	call   DWORD PTR ds:0x1f008
   19b35:	push   0x10
   19b37:	lea    eax,[ebp-0x80c]
   19b3d:	mov    DWORD PTR [ebp-0x7fc],eax
   19b43:	push   0x1
   19b45:	lea    eax,[ebp-0x814]
   19b4b:	push   eax
   19b4c:	lea    eax,[ebp-0x804]
   19b52:	push   eax
   19b53:	push   0x80100000
   19b58:	lea    eax,[ebp-0x7dc]
   19b5e:	push   eax
   19b5f:	mov    DWORD PTR [ebp-0x804],0x18
   19b69:	mov    DWORD PTR [ebp-0x800],esi
   19b6f:	mov    DWORD PTR [ebp-0x7f8],esi
   19b75:	mov    DWORD PTR [ebp-0x7f4],esi
   19b7b:	mov    DWORD PTR [ebp-0x7f0],esi
   19b81:	call   0x115d6
   19b86:	call   eax
   19b88:	cmp    eax,esi
   19b8a:	jl     0x19c08
   19b8c:	push   DWORD PTR [ebp-0x7dc]
   19b92:	lea    eax,[ebp-0x7ec]
   19b98:	push   DWORD PTR [ebp+0x10]
   19b9b:	push   0x2
   19b9d:	push   eax
   19b9e:	push   esi
   19b9f:	push   0x4
   19ba1:	lea    eax,[ebp-0x7e0]
   19ba7:	push   eax
   19ba8:	call   0x11aec
   19bad:	call   eax
   19baf:	push   DWORD PTR [ebp-0x7dc]
   19bb5:	mov    edi,eax
   19bb7:	call   0x117f8
   19bbc:	call   eax
   19bbe:	cmp    edi,esi
   19bc0:	jge    0x19bc6
   19bc2:	mov    eax,edi
   19bc4:	jmp    0x19c08
   19bc6:	push   0x2
   19bc8:	push   esi
   19bc9:	push   0x2
   19bcb:	lea    eax,[ebp-0x7e4]
   19bd1:	push   eax
   19bd2:	push   esi
   19bd3:	push   esi
   19bd4:	push   esi
   19bd5:	lea    eax,[ebp-0x7d8]
   19bdb:	push   eax
   19bdc:	push   0xffffffff
   19bde:	push   DWORD PTR [ebp-0x7e0]
   19be4:	call   0x11ac2
   19be9:	call   eax
   19beb:	push   DWORD PTR [ebp-0x7e0]
   19bf1:	mov    edi,eax
   19bf3:	call   0x117f8
   19bf8:	call   eax
   19bfa:	cmp    edi,esi
   19bfc:	jl     0x19bc2
   19bfe:	mov    eax,DWORD PTR [ebp-0x7d8]
   19c04:	mov    DWORD PTR [ebx],eax
   19c06:	xor    eax,eax
   19c08:	mov    ecx,DWORD PTR [ebp-0x4]
   19c0b:	pop    edi
   19c0c:	pop    esi
   19c0d:	xor    ecx,ebp
   19c0f:	pop    ebx
   19c10:	call   0x1da31
   19c15:	leave  
   19c16:	ret    0xc
   19c19:	int3   
   19c1a:	int3   
   19c1b:	int3   
   19c1c:	int3   
   19c1d:	int3   
   19c1e:	mov    edi,edi
   19c20:	push   ebp
   19c21:	mov    ebp,esp
   19c23:	push   DWORD PTR [ebp+0x8]
   19c26:	push   0xffffffff
   19c28:	call   0x11b16
   19c2d:	call   eax
   19c2f:	pop    ebp
   19c30:	ret    0x4
   19c33:	int3   
   19c34:	int3   
   19c35:	int3   
   19c36:	int3   
   19c37:	int3   
   19c38:	mov    edi,edi
   19c3a:	push   ebp
   19c3b:	mov    ebp,esp
   19c3d:	push   esi
   19c3e:	mov    esi,DWORD PTR [ebp+0x8]
   19c41:	test   esi,esi
   19c43:	jne    0x19c48
   19c45:	lea    esi,[ecx+0x18]
   19c48:	mov    edx,DWORD PTR [ebp+0xc]
   19c4b:	test   edx,edx
   19c4d:	jne    0x19c53
   19c4f:	xor    eax,eax
   19c51:	jmp    0x19c63
   19c53:	movzx  eax,BYTE PTR [edx]
   19c56:	push   edx
   19c57:	lea    eax,[eax*8+0x73618]
   19c5e:	push   esi
   19c5f:	push   eax
   19c60:	call   DWORD PTR [eax+0x4]
   19c63:	pop    esi
   19c64:	pop    ebp
   19c65:	ret    0x8
   19c68:	int3   
   19c69:	int3   
   19c6a:	int3   
   19c6b:	int3   
   19c6c:	int3   
   19c6d:	int3   
   19c6e:	mov    edi,edi
   19c70:	push   ebp
   19c71:	mov    ebp,esp
   19c73:	mov    eax,DWORD PTR [ebp+0x14]
   19c76:	push   ebx
   19c77:	mov    ebx,DWORD PTR [ebp+0x8]
   19c7a:	push   esi
   19c7b:	mov    esi,DWORD PTR [ebp+0x10]
   19c7e:	sub    esi,eax
   19c80:	push   edi
   19c81:	lea    edi,[ebx+eax*1]
   19c84:	mov    eax,esi
   19c86:	xor    edx,edx
   19c88:	dec    eax
   19c89:	je     0x19caa
   19c8b:	dec    eax
   19c8c:	je     0x19c9c
   19c8e:	dec    eax
   19c8f:	dec    eax
   19c90:	jne    0x19cb6
   19c92:	mov    eax,DWORD PTR [ecx+0xc]
   19c95:	mov    edx,DWORD PTR [edi]
   19c97:	and    DWORD PTR [eax],0x0
   19c9a:	jmp    0x19cb6
   19c9c:	mov    eax,DWORD PTR [ecx+0xc]
   19c9f:	movsx  edx,WORD PTR [edi]
   19ca2:	mov    DWORD PTR [eax],0x2
   19ca8:	jmp    0x19cb6
   19caa:	mov    eax,DWORD PTR [ecx+0xc]
   19cad:	movsx  edx,BYTE PTR [edi]
   19cb0:	mov    DWORD PTR [eax],0x3
   19cb6:	mov    ecx,DWORD PTR [ebp+0xc]
   19cb9:	lea    eax,[edx+ecx*1]
   19cbc:	add    eax,DWORD PTR [ebp+0x10]
   19cbf:	sub    edx,ebx
   19cc1:	add    edx,ecx
   19cc3:	dec    esi
   19cc4:	je     0x19cd6
   19cc6:	dec    esi
   19cc7:	je     0x19cd1
   19cc9:	dec    esi
   19cca:	dec    esi
   19ccb:	jne    0x19cd8
   19ccd:	mov    DWORD PTR [edi],edx
   19ccf:	jmp    0x19cd8
   19cd1:	mov    WORD PTR [edi],dx
   19cd4:	jmp    0x19cd8
   19cd6:	mov    BYTE PTR [edi],dl
   19cd8:	pop    edi
   19cd9:	pop    esi
   19cda:	pop    ebx
   19cdb:	pop    ebp
   19cdc:	ret    0x10
   19cdf:	int3   
   19ce0:	int3   
   19ce1:	int3   
   19ce2:	int3   
   19ce3:	int3   
   19ce4:	mov    edi,edi
   19ce6:	push   ebp
   19ce7:	mov    ebp,esp
   19ce9:	mov    eax,DWORD PTR [ebp+0x10]
   19cec:	inc    eax
   19ced:	pop    ebp
   19cee:	ret    0xc
   19cf1:	int3   
   19cf2:	int3   
   19cf3:	int3   
   19cf4:	int3   
   19cf5:	int3   
   19cf6:	mov    edi,edi
   19cf8:	push   ebp
   19cf9:	mov    ebp,esp
   19cfb:	mov    eax,ecx
   19cfd:	mov    ecx,DWORD PTR [ebp+0x8]
   19d00:	and    DWORD PTR [eax],0x0
   19d03:	and    DWORD PTR [eax+0x4],0x0
   19d07:	test   ecx,ecx
   19d09:	jne    0x19d0e
   19d0b:	lea    ecx,[eax+0x14]
   19d0e:	mov    edx,DWORD PTR [ebp+0xc]
   19d11:	mov    DWORD PTR [eax+0x8],ecx
   19d14:	test   edx,edx
   19d16:	jne    0x19d1b
   19d18:	lea    edx,[eax+0x10]
   19d1b:	mov    DWORD PTR [eax+0xc],edx
   19d1e:	and    DWORD PTR [ecx],0x0
   19d21:	mov    ecx,DWORD PTR [eax+0xc]
   19d24:	and    DWORD PTR [ecx],0x0
   19d27:	pop    ebp
   19d28:	ret    0x8
   19d2b:	int3   
   19d2c:	int3   
   19d2d:	int3   
   19d2e:	int3   
   19d2f:	int3   
   19d30:	mov    edi,edi
   19d32:	push   ebp
   19d33:	mov    ebp,esp
   19d35:	push   ecx
   19d36:	mov    eax,DWORD PTR [ebp+0x8]
   19d39:	mov    eax,DWORD PTR [eax]
   19d3b:	push   ebx
   19d3c:	push   esi
   19d3d:	push   edi
   19d3e:	mov    DWORD PTR [ebp-0x4],ecx
   19d41:	mov    esi,eax
   19d43:	test   eax,0x200000
   19d48:	je     0x19d55
   19d4a:	cmp    DWORD PTR [ecx+0x4],0x0
   19d4e:	je     0x19d5a
   19d50:	shr    esi,0xb
   19d53:	jmp    0x19d5d
   19d55:	cmp    DWORD PTR [ecx],0x0
   19d58:	jmp    0x19d4e
   19d5a:	shr    esi,0x8
   19d5d:	mov    ebx,DWORD PTR [ebp+0x10]
   19d60:	and    esi,0x7
   19d63:	shr    eax,0xe
   19d66:	and    eax,0x7
   19d69:	mov    edi,esi
   19d6b:	jbe    0x19da7
   19d6d:	add    eax,ebx
   19d6f:	mov    cl,BYTE PTR [eax]
   19d71:	movzx  edx,cl
   19d74:	mov    dl,BYTE PTR [edx+0x73518]
   19d7a:	test   dl,0x10
   19d7d:	je     0x19d9f
   19d7f:	mov    al,BYTE PTR [eax+0x1]
   19d82:	and    al,0x7
   19d84:	cmp    al,0x5
   19d86:	jne    0x19d9f
   19d88:	and    cl,0xc0
   19d8b:	je     0x19d9c
   19d8d:	cmp    cl,0x40
   19d90:	jne    0x19d97
   19d92:	lea    edi,[esi+0x1]
   19d95:	jmp    0x19d9f
   19d97:	cmp    cl,0x80
   19d9a:	jne    0x19d9f
   19d9c:	lea    edi,[esi+0x4]
   19d9f:	movzx  eax,dl
   19da2:	and    eax,0xf
   19da5:	add    edi,eax
   19da7:	push   edi
   19da8:	push   ebx
   19da9:	push   DWORD PTR [ebp+0xc]
   19dac:	call   0x1da96
   19db1:	mov    ecx,DWORD PTR [ebp+0x8]
   19db4:	mov    eax,DWORD PTR [ecx]
   19db6:	shl    eax,0xc
   19db9:	sar    eax,0x1d
   19dbc:	add    esp,0xc
   19dbf:	test   eax,eax
   19dc1:	je     0x19ddd
   19dc3:	push   eax
   19dc4:	push   esi
   19dc5:	mov    esi,DWORD PTR [ebp-0x4]
   19dc8:	push   ebx
   19dc9:	push   DWORD PTR [ebp+0xc]
   19dcc:	mov    ecx,esi
   19dce:	call   0x19c6e
   19dd3:	mov    ecx,DWORD PTR [esi+0x8]
   19dd6:	mov    DWORD PTR [ecx],eax
   19dd8:	mov    ecx,DWORD PTR [ebp+0x8]
   19ddb:	jmp    0x19de0
   19ddd:	mov    esi,DWORD PTR [ebp-0x4]
   19de0:	test   DWORD PTR [ecx],0x400000
   19de6:	je     0x19ded
   19de8:	mov    eax,DWORD PTR [esi+0xc]
   19deb:	neg    DWORD PTR [eax]
   19ded:	test   DWORD PTR [ecx],0x100000
   19df3:	je     0x19dfb
   19df5:	mov    eax,DWORD PTR [esi+0x8]
   19df8:	or     DWORD PTR [eax],0xffffffff
   19dfb:	lea    eax,[edi+ebx*1]
   19dfe:	pop    edi
   19dff:	pop    esi
   19e00:	pop    ebx
   19e01:	leave  
   19e02:	ret    0xc
   19e05:	int3   
   19e06:	int3   
   19e07:	int3   
   19e08:	int3   
   19e09:	int3   
   19e0a:	mov    edi,edi
   19e0c:	push   ebp
   19e0d:	mov    ebp,esp
   19e0f:	push   ebx
   19e10:	push   esi
   19e11:	mov    esi,DWORD PTR [ebp+0x10]
   19e14:	push   edi
   19e15:	mov    edi,DWORD PTR [ebp+0xc]
   19e18:	push   esi
   19e19:	push   edi
   19e1a:	push   DWORD PTR [ebp+0x8]
   19e1d:	mov    ebx,ecx
   19e1f:	call   0x19d30
   19e24:	lea    eax,[esi+0x1]
   19e27:	movzx  edx,BYTE PTR [eax]
   19e2a:	push   eax
   19e2b:	inc    edi
   19e2c:	lea    edx,[edx*8+0x73618]
   19e33:	push   edi
   19e34:	push   edx
   19e35:	mov    ecx,ebx
   19e37:	call   DWORD PTR [edx+0x4]
   19e3a:	pop    edi
   19e3b:	pop    esi
   19e3c:	pop    ebx
   19e3d:	pop    ebp
   19e3e:	ret    0xc
   19e41:	int3   
   19e42:	int3   
   19e43:	int3   
   19e44:	int3   
   19e45:	int3   
   19e46:	mov    edi,edi
   19e48:	push   ebp
   19e49:	mov    ebp,esp
   19e4b:	push   ebx
   19e4c:	push   esi
   19e4d:	mov    esi,DWORD PTR [ebp+0x10]
   19e50:	push   edi
   19e51:	mov    edi,DWORD PTR [ebp+0xc]
   19e54:	push   esi
   19e55:	push   edi
   19e56:	push   DWORD PTR [ebp+0x8]
   19e59:	mov    ebx,ecx
   19e5b:	call   0x19d30
   19e60:	lea    eax,[esi+0x1]
   19e63:	movzx  edx,BYTE PTR [eax]
   19e66:	push   eax
   19e67:	inc    edi
   19e68:	lea    edx,[edx*8+0x73e20]
   19e6f:	push   edi
   19e70:	push   edx
   19e71:	mov    ecx,ebx
   19e73:	call   DWORD PTR [edx+0x4]
   19e76:	pop    edi
   19e77:	pop    esi
   19e78:	pop    ebx
   19e79:	pop    ebp
   19e7a:	ret    0xc
   19e7d:	int3   
   19e7e:	int3   
   19e7f:	int3   
   19e80:	int3   
   19e81:	int3   
   19e82:	mov    edi,edi
   19e84:	push   ebp
   19e85:	mov    ebp,esp
   19e87:	mov    DWORD PTR [ecx],0x1
   19e8d:	pop    ebp
   19e8e:	jmp    0x19e0a
   19e93:	int3   
   19e94:	int3   
   19e95:	int3   
   19e96:	int3   
   19e97:	int3   
   19e98:	mov    edi,edi
   19e9a:	push   ebp
   19e9b:	mov    ebp,esp
   19e9d:	mov    DWORD PTR [ecx+0x4],0x1
   19ea4:	pop    ebp
   19ea5:	jmp    0x19e0a
   19eaa:	int3   
   19eab:	int3   
   19eac:	int3   
   19ead:	int3   
   19eae:	int3   
   19eaf:	int3   
   19eb0:	mov    edi,edi
   19eb2:	push   ebp
   19eb3:	mov    ebp,esp
   19eb5:	mov    eax,DWORD PTR [ebp+0x10]
   19eb8:	sub    esp,0x10
   19ebb:	test   BYTE PTR [eax+0x1],0x38
   19ebf:	push   eax
   19ec0:	push   DWORD PTR [ebp+0xc]
   19ec3:	jne    0x19ed8
   19ec5:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19ecc:	mov    DWORD PTR [ebp-0x4],0x19d30
   19ed3:	lea    eax,[ebp-0x8]
   19ed6:	jmp    0x19ee9
   19ed8:	mov    DWORD PTR [ebp-0x10],0x52f6
   19edf:	mov    DWORD PTR [ebp-0xc],0x19d30
   19ee6:	lea    eax,[ebp-0x10]
   19ee9:	push   eax
   19eea:	call   0x19d30
   19eef:	leave  
   19ef0:	ret    0xc
   19ef3:	int3   
   19ef4:	int3   
   19ef5:	int3   
   19ef6:	int3   
   19ef7:	int3   
   19ef8:	mov    edi,edi
   19efa:	push   ebp
   19efb:	mov    ebp,esp
   19efd:	mov    eax,DWORD PTR [ebp+0x10]
   19f00:	sub    esp,0x10
   19f03:	test   BYTE PTR [eax+0x1],0x38
   19f07:	push   eax
   19f08:	push   DWORD PTR [ebp+0xc]
   19f0b:	jne    0x19f20
   19f0d:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f14:	mov    DWORD PTR [ebp-0x4],0x19d30
   19f1b:	lea    eax,[ebp-0x8]
   19f1e:	jmp    0x19f31
   19f20:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f27:	mov    DWORD PTR [ebp-0xc],0x19d30
   19f2e:	lea    eax,[ebp-0x10]
   19f31:	push   eax
   19f32:	call   0x19d30
   19f37:	leave  
   19f38:	ret    0xc
   19f3b:	int3   
   19f3c:	int3   
   19f3d:	int3   
   19f3e:	int3   
   19f3f:	int3   
   19f40:	mov    edi,edi
   19f42:	push   ebp
   19f43:	mov    ebp,esp
   19f45:	push   ecx
   19f46:	push   ecx
   19f47:	mov    edx,DWORD PTR [ebp+0x10]
   19f4a:	mov    al,BYTE PTR [edx+0x1]
   19f4d:	cmp    al,0x15
   19f4f:	je     0x19f6f
   19f51:	cmp    al,0x25
   19f53:	je     0x19f6f
   19f55:	and    al,0x38
   19f57:	cmp    al,0x10
   19f59:	je     0x19f67
   19f5b:	cmp    al,0x18
   19f5d:	je     0x19f67
   19f5f:	cmp    al,0x20
   19f61:	je     0x19f67
   19f63:	cmp    al,0x28
   19f65:	jne    0x19f7b
   19f67:	mov    eax,DWORD PTR [ecx+0x8]
   19f6a:	or     DWORD PTR [eax],0xffffffff
   19f6d:	jmp    0x19f7b
   19f6f:	mov    eax,DWORD PTR [edx+0x2]
   19f72:	mov    eax,DWORD PTR [eax]
   19f74:	push   esi
   19f75:	mov    esi,DWORD PTR [ecx+0x8]
   19f78:	mov    DWORD PTR [esi],eax
   19f7a:	pop    esi
   19f7b:	push   edx
   19f7c:	push   DWORD PTR [ebp+0xc]
   19f7f:	lea    eax,[ebp-0x8]
   19f82:	push   eax
   19f83:	mov    DWORD PTR [ebp-0x8],0x52ff
   19f8a:	mov    DWORD PTR [ebp-0x4],0x19d30
   19f91:	call   0x19d30
   19f96:	leave  
   19f97:	ret    0xc
   19f9a:	int3   
   19f9b:	int3   
   19f9c:	int3   
   19f9d:	int3   
   19f9e:	int3   
   19f9f:	int3   
   19fa0:	mov    edi,edi
   19fa2:	push   ebp
   19fa3:	mov    ebp,esp
   19fa5:	sub    esp,0x5c
   19fa8:	mov    eax,ds:0x7751c
   19fad:	xor    eax,ebp
   19faf:	mov    DWORD PTR [ebp-0x4],eax
   19fb2:	mov    eax,DWORD PTR [ebp+0x10]
   19fb5:	push   esi
   19fb6:	mov    esi,DWORD PTR [ebp+0x8]
   19fb9:	push   edi
   19fba:	mov    edi,DWORD PTR [ebp+0xc]
   19fbd:	push   0x0
   19fbf:	push   eax
   19fc0:	lea    ecx,[ebp-0x5c]
   19fc3:	call   0x19cf6
   19fc8:	push   edi
   19fc9:	push   esi
   19fca:	lea    ecx,[ebp-0x5c]
   19fcd:	call   0x19c38
   19fd2:	mov    ecx,DWORD PTR [ebp-0x4]
   19fd5:	pop    edi
   19fd6:	xor    ecx,ebp
   19fd8:	pop    esi
   19fd9:	call   0x1da31
   19fde:	leave  
   19fdf:	ret    0xc
   19fe2:	int3   
   19fe3:	int3   
   19fe4:	int3   
   19fe5:	int3   
   19fe6:	int3   
   19fe7:	int3   
   19fe8:	mov    edi,edi
   19fea:	push   ebp
   19feb:	mov    ebp,esp
   19fed:	push   esi
   19fee:	mov    esi,DWORD PTR [ebp+0x8]
   19ff1:	push   edi
   19ff2:	mov    edi,ecx
   19ff4:	cmp    edi,esi
   19ff6:	je     0x1a023
   19ff8:	mov    eax,DWORD PTR [edi+0x4]
   19ffb:	cmp    eax,DWORD PTR [esi+0x4]
   19ffe:	je     0x1a012
   1a000:	cmp    BYTE PTR [edi],0x0
   1a003:	je     0x1a00c
   1a005:	push   eax
   1a006:	call   0x10990
   1a00b:	pop    ecx
   1a00c:	mov    al,BYTE PTR [esi]
   1a00e:	mov    BYTE PTR [edi],al
   1a010:	jmp    0x1a01a
   1a012:	cmp    BYTE PTR [esi],0x0
   1a015:	je     0x1a01a
   1a017:	mov    BYTE PTR [edi],0x1
   1a01a:	mov    eax,DWORD PTR [esi+0x4]
   1a01d:	mov    BYTE PTR [esi],0x0
   1a020:	mov    DWORD PTR [edi+0x4],eax
   1a023:	mov    eax,edi
   1a025:	pop    edi
   1a026:	pop    esi
   1a027:	pop    ebp
   1a028:	ret    0x4
   1a02b:	int3   
   1a02c:	int3   
   1a02d:	int3   
   1a02e:	int3   
   1a02f:	int3   
   1a030:	mov    edi,edi
   1a032:	push   ebp
   1a033:	mov    ebp,esp
   1a035:	sub    esp,0x50
   1a038:	push   ebx
   1a039:	push   esi
   1a03a:	push   edi
   1a03b:	mov    edi,0x4000
   1a040:	push   edi
   1a041:	call   0x11d96
   1a046:	pop    ecx
   1a047:	xor    ebx,ebx
   1a049:	push   0x38
   1a04b:	push   0x1ec68
   1a050:	cmp    eax,ebx
   1a052:	mov    DWORD PTR [ebp-0x4],eax
   1a055:	mov    DWORD PTR [ebp-0xc],eax
   1a058:	push   0x2f
   1a05a:	lea    eax,[ebp-0x50]
   1a05d:	setne  BYTE PTR [ebp-0x10]
   1a061:	push   eax
   1a062:	xor    esi,esi
   1a064:	mov    DWORD PTR [ebp-0x30],ebx
   1a067:	mov    DWORD PTR [ebp-0x2c],ebx
   1a06a:	mov    DWORD PTR [ebp-0x28],ebx
   1a06d:	mov    DWORD PTR [ebp-0x4c],ebx
   1a070:	mov    DWORD PTR [ebp-0x50],ebx
   1a073:	call   0x1b926
   1a078:	test   eax,eax
   1a07a:	je     0x1a099
   1a07c:	mov    esi,DWORD PTR [ebp+0x8]
   1a07f:	mov    BYTE PTR [esi],bl
   1a081:	mov    DWORD PTR [esi+0x4],ebx
   1a084:	cmp    BYTE PTR [ebp-0x10],bl
   1a087:	je     0x1a092
   1a089:	push   DWORD PTR [ebp-0x4]
   1a08c:	call   0x10990
   1a091:	pop    ecx
   1a092:	mov    eax,esi
   1a094:	jmp    0x1a1ae
   1a099:	mov    eax,DWORD PTR [ebp+0x10]
   1a09c:	mov    DWORD PTR [ebp-0x4c],eax
   1a09f:	mov    eax,DWORD PTR [ebp+0xc]
   1a0a2:	mov    DWORD PTR [ebp-0x50],eax
   1a0a5:	mov    eax,DWORD PTR [ebp-0xc]
   1a0a8:	add    eax,esi
   1a0aa:	mov    DWORD PTR [ebp-0x44],eax
   1a0ad:	push   0x4
   1a0af:	lea    eax,[ebp-0x50]
   1a0b2:	push   eax
   1a0b3:	mov    DWORD PTR [ebp-0x40],edi
   1a0b6:	call   0x1baba
   1a0bb:	cmp    eax,0xfffffffc
   1a0be:	mov    DWORD PTR [ebp+0x10],eax
   1a0c1:	jl     0x1a0d5
   1a0c3:	cmp    eax,0xfffffffd
   1a0c6:	jle    0x1a15e
   1a0cc:	cmp    eax,0x2
   1a0cf:	je     0x1a15e
   1a0d5:	mov    eax,edi
   1a0d7:	sub    eax,DWORD PTR [ebp-0x40]
   1a0da:	add    esi,eax
   1a0dc:	cmp    DWORD PTR [ebp-0x40],ebx
   1a0df:	jne    0x1a148
   1a0e1:	mov    al,BYTE PTR [ebp-0x10]
   1a0e4:	mov    BYTE PTR [ebp-0x18],al
   1a0e7:	mov    eax,DWORD PTR [ebp-0xc]
   1a0ea:	mov    DWORD PTR [ebp-0x14],eax
   1a0ed:	lea    eax,[esi+0x4000]
   1a0f3:	push   eax
   1a0f4:	mov    BYTE PTR [ebp-0x10],bl
   1a0f7:	call   0x11d96
   1a0fc:	pop    ecx
   1a0fd:	cmp    eax,ebx
   1a0ff:	setne  cl
   1a102:	mov    DWORD PTR [ebp-0x4],eax
   1a105:	lea    eax,[ebp-0x8]
   1a108:	mov    BYTE PTR [ebp-0x8],cl
   1a10b:	push   eax
   1a10c:	lea    ecx,[ebp-0x10]
   1a10f:	call   0x19fe8
   1a114:	cmp    BYTE PTR [ebp-0x8],bl
   1a117:	je     0x1a122
   1a119:	push   DWORD PTR [ebp-0x4]
   1a11c:	call   0x10990
   1a121:	pop    ecx
   1a122:	push   esi
   1a123:	push   DWORD PTR [ebp-0x14]
   1a126:	push   DWORD PTR [ebp-0xc]
   1a129:	call   0x1da96
   1a12e:	add    esp,0xc
   1a131:	cmp    BYTE PTR [ebp-0x18],bl
   1a134:	je     0x1a13f
   1a136:	push   DWORD PTR [ebp-0x14]
   1a139:	call   0x10990
   1a13e:	pop    ecx
   1a13f:	cmp    DWORD PTR [ebp-0x40],ebx
   1a142:	je     0x1a0a5
   1a148:	lea    eax,[ebp-0x50]
   1a14b:	push   eax
   1a14c:	call   0x1ccd8
   1a151:	cmp    DWORD PTR [ebp+0x10],0x1
   1a155:	jne    0x1a180
   1a157:	mov    eax,DWORD PTR [ebp+0x14]
   1a15a:	mov    DWORD PTR [eax],esi
   1a15c:	jmp    0x1a1a0
   1a15e:	lea    eax,[ebp-0x50]
   1a161:	push   eax
   1a162:	call   0x1ccd8
   1a167:	mov    esi,DWORD PTR [ebp+0x8]
   1a16a:	mov    BYTE PTR [esi],bl
   1a16c:	mov    DWORD PTR [esi+0x4],ebx
   1a16f:	cmp    BYTE PTR [ebp-0x10],bl
   1a172:	je     0x1a092
   1a178:	push   DWORD PTR [ebp-0xc]
   1a17b:	jmp    0x1a08c
   1a180:	lea    eax,[ebp-0x18]
   1a183:	push   eax
   1a184:	lea    ecx,[ebp-0x10]
   1a187:	mov    BYTE PTR [ebp-0x18],bl
   1a18a:	mov    DWORD PTR [ebp-0x14],ebx
   1a18d:	call   0x19fe8
   1a192:	cmp    BYTE PTR [ebp-0x18],bl
   1a195:	je     0x1a1a0
   1a197:	push   DWORD PTR [ebp-0x14]
   1a19a:	call   0x10990
   1a19f:	pop    ecx
   1a1a0:	mov    eax,DWORD PTR [ebp+0x8]
   1a1a3:	mov    cl,BYTE PTR [ebp-0x10]
   1a1a6:	mov    BYTE PTR [eax],cl
   1a1a8:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1ab:	mov    DWORD PTR [eax+0x4],ecx
   1a1ae:	pop    edi
   1a1af:	pop    esi
   1a1b0:	pop    ebx
   1a1b1:	leave  
   1a1b2:	ret    0x10
   1a1b5:	int3   
   1a1b6:	int3   
   1a1b7:	int3   
   1a1b8:	int3   
   1a1b9:	int3   
   1a1ba:	xor    eax,eax
   1a1bc:	push   eax
   1a1bd:	push   eax
   1a1be:	push   eax
   1a1bf:	push   eax
   1a1c0:	push   0x78230
   1a1c5:	call   DWORD PTR ds:0x1f020
   1a1cb:	test   eax,eax
   1a1cd:	setge  al
   1a1d0:	ret    
   1a1d1:	int3   
   1a1d2:	int3   
   1a1d3:	int3   
   1a1d4:	int3   
   1a1d5:	int3   
   1a1d6:	push   0x0
   1a1d8:	push   0x78230
   1a1dd:	call   DWORD PTR ds:0x1f01c
   1a1e3:	ret    
   1a1e4:	int3   
   1a1e5:	int3   
   1a1e6:	int3   
   1a1e7:	int3   
   1a1e8:	int3   
   1a1e9:	int3   
   1a1ea:	mov    edi,edi
   1a1ec:	push   esi
   1a1ed:	push   edi
   1a1ee:	push   0x1
   1a1f0:	xor    edi,edi
   1a1f2:	push   edi
   1a1f3:	mov    esi,ecx
   1a1f5:	call   0x1442e
   1a1fa:	cmp    DWORD PTR ds:0x780cc,edi
   1a200:	jne    0x1a217
   1a202:	mov    ecx,eax
   1a204:	mov    DWORD PTR ds:0x780cc,ecx
   1a20a:	mov    DWORD PTR [ecx],edi
   1a20c:	mov    ecx,DWORD PTR ds:0x780cc
   1a212:	xor    eax,eax
   1a214:	mov    DWORD PTR [ecx+0x8],edi
   1a217:	inc    DWORD PTR ds:0x78258
   1a21d:	cmp    eax,edi
   1a21f:	je     0x1a228
   1a221:	push   eax
   1a222:	call   0x10990
   1a227:	pop    ecx
   1a228:	push   edi
   1a229:	push   DWORD PTR ds:0x780cc
   1a22f:	mov    ecx,esi
   1a231:	call   0x1442e
   1a236:	mov    DWORD PTR [esi+0xc],edi
   1a239:	mov    DWORD PTR [esi+0x4],eax
   1a23c:	mov    DWORD PTR [eax],eax
   1a23e:	mov    esi,DWORD PTR [esi+0x4]
   1a241:	pop    edi
   1a242:	mov    DWORD PTR [esi+0x8],esi
   1a245:	pop    esi
   1a246:	ret    
   1a247:	int3   
   1a248:	int3   
   1a249:	int3   
   1a24a:	int3   
   1a24b:	int3   
   1a24c:	mov    edi,edi
   1a24e:	push   ebx
   1a24f:	push   esi
   1a250:	xor    ebx,ebx
   1a252:	push   ebx
   1a253:	push   0x78230
   1a258:	call   0x11b40
   1a25d:	call   eax
   1a25f:	push   0x10
   1a261:	call   0x11d96
   1a266:	mov    esi,eax
   1a268:	pop    ecx
   1a269:	cmp    esi,ebx
   1a26b:	je     0x1a27f
   1a26d:	mov    ecx,esi
   1a26f:	mov    BYTE PTR [esi+0x8],bl
   1a272:	call   0x1a1ea
   1a277:	mov    DWORD PTR ds:0x78250,esi
   1a27d:	jmp    0x1a285
   1a27f:	mov    DWORD PTR ds:0x78250,ebx
   1a285:	push   0x10
   1a287:	call   0x11d96
   1a28c:	mov    esi,eax
   1a28e:	pop    ecx
   1a28f:	cmp    esi,ebx
   1a291:	je     0x1a2a5
   1a293:	mov    ecx,esi
   1a295:	mov    BYTE PTR [esi+0x8],bl
   1a298:	call   0x148c6
   1a29d:	mov    DWORD PTR ds:0x78254,esi
   1a2a3:	jmp    0x1a2ab
   1a2a5:	mov    DWORD PTR ds:0x78254,ebx
   1a2ab:	pop    esi
   1a2ac:	pop    ebx
   1a2ad:	ret    
   1a2ae:	int3   
   1a2af:	int3   
   1a2b0:	int3   
   1a2b1:	int3   
   1a2b2:	int3   
   1a2b3:	int3   
   1a2b4:	mov    eax,ecx
   1a2b6:	add    DWORD PTR [eax+0x8],0x4
   1a2ba:	mov    ecx,DWORD PTR [eax+0x8]
   1a2bd:	cmp    ecx,DWORD PTR [eax+0x4]
   1a2c0:	jne    0x1a2db
   1a2c2:	add    DWORD PTR [eax+0xc],0x4
   1a2c6:	mov    ecx,DWORD PTR [eax+0xc]
   1a2c9:	mov    ecx,DWORD PTR [ecx]
   1a2cb:	mov    DWORD PTR [eax],ecx
   1a2cd:	add    ecx,0x1000
   1a2d3:	mov    DWORD PTR [eax+0x4],ecx
   1a2d6:	mov    ecx,DWORD PTR [eax]
   1a2d8:	mov    DWORD PTR [eax+0x8],ecx
   1a2db:	ret    
   1a2dc:	int3   
   1a2dd:	int3   
   1a2de:	int3   
   1a2df:	int3   
   1a2e0:	int3   
   1a2e1:	int3   
   1a2e2:	mov    edi,edi
   1a2e4:	push   ebp
   1a2e5:	mov    ebp,esp
   1a2e7:	mov    eax,ecx
   1a2e9:	mov    ecx,DWORD PTR [ebp+0xc]
   1a2ec:	mov    edx,DWORD PTR [ecx]
   1a2ee:	mov    DWORD PTR [eax],edx
   1a2f0:	mov    edx,DWORD PTR [ecx]
   1a2f2:	add    edx,0x1000
   1a2f8:	mov    DWORD PTR [eax+0x4],edx
   1a2fb:	mov    edx,DWORD PTR [ebp+0x8]
   1a2fe:	mov    DWORD PTR [eax+0x8],edx
   1a301:	mov    DWORD PTR [eax+0xc],ecx
   1a304:	pop    ebp
   1a305:	ret    0x8
   1a308:	int3   
   1a309:	int3   
   1a30a:	int3   
   1a30b:	int3   
   1a30c:	int3   
   1a30d:	int3   
   1a30e:	mov    edi,edi
   1a310:	push   ebp
   1a311:	mov    ebp,esp
   1a313:	mov    eax,DWORD PTR [ebp+0x8]
   1a316:	mov    edx,DWORD PTR ds:0x7828c
   1a31c:	jmp    0x1a320
   1a31e:	mov    eax,ecx
   1a320:	mov    ecx,DWORD PTR [eax+0x8]
   1a323:	cmp    ecx,edx
   1a325:	jne    0x1a31e
   1a327:	pop    ebp
   1a328:	ret    0x4
   1a32b:	int3   
   1a32c:	int3   
   1a32d:	int3   
   1a32e:	int3   
   1a32f:	int3   
   1a330:	mov    edi,edi
   1a332:	push   ebp
   1a333:	mov    ebp,esp
   1a335:	mov    eax,DWORD PTR [ebp+0x8]
   1a338:	mov    edx,DWORD PTR ds:0x7828c
   1a33e:	jmp    0x1a342
   1a340:	mov    eax,ecx
   1a342:	mov    ecx,DWORD PTR [eax]
   1a344:	cmp    ecx,edx
   1a346:	jne    0x1a340
   1a348:	pop    ebp
   1a349:	ret    0x4
   1a34c:	int3   
   1a34d:	int3   
   1a34e:	int3   
   1a34f:	int3   
   1a350:	int3   
   1a351:	int3   
   1a352:	mov    edi,edi
   1a354:	push   esi
   1a355:	mov    esi,ecx
   1a357:	mov    ecx,DWORD PTR [esi]
   1a359:	mov    eax,DWORD PTR [ecx+0x8]
   1a35c:	cmp    eax,DWORD PTR ds:0x7828c
   1a362:	je     0x1a370
   1a364:	push   eax
   1a365:	call   0x1a330
   1a36a:	jmp    0x1a37f
   1a36c:	mov    DWORD PTR [esi],eax
   1a36e:	mov    ecx,eax
   1a370:	mov    eax,DWORD PTR [ecx+0x4]
   1a373:	cmp    ecx,DWORD PTR [eax+0x8]
   1a376:	je     0x1a36c
   1a378:	mov    ecx,DWORD PTR [esi]
   1a37a:	cmp    DWORD PTR [ecx+0x8],eax
   1a37d:	je     0x1a381
   1a37f:	mov    DWORD PTR [esi],eax
   1a381:	pop    esi
   1a382:	ret    
   1a383:	int3   
   1a384:	int3   
   1a385:	int3   
   1a386:	int3   
   1a387:	int3   
   1a388:	mov    edi,edi
   1a38a:	push   ebp
   1a38b:	mov    ebp,esp
   1a38d:	mov    eax,DWORD PTR [ebp+0x8]
   1a390:	test   eax,eax
   1a392:	je     0x1a39b
   1a394:	mov    ecx,DWORD PTR [ebp+0xc]
   1a397:	mov    ecx,DWORD PTR [ecx]
   1a399:	mov    DWORD PTR [eax],ecx
   1a39b:	pop    ebp
   1a39c:	ret    0x8
   1a39f:	int3   
   1a3a0:	int3   
   1a3a1:	int3   
   1a3a2:	int3   
   1a3a3:	int3   
   1a3a4:	mov    edi,edi
   1a3a6:	push   ebp
   1a3a7:	mov    ebp,esp
   1a3a9:	mov    eax,DWORD PTR [ebp+0x8]
   1a3ac:	jmp    0x1a3bc
   1a3ae:	mov    ecx,DWORD PTR [eax]
   1a3b0:	mov    edx,DWORD PTR [ebp+0x10]
   1a3b3:	add    DWORD PTR [ebp+0x10],0x4
   1a3b7:	mov    DWORD PTR [edx],ecx
   1a3b9:	add    eax,0x4
   1a3bc:	cmp    eax,DWORD PTR [ebp+0xc]
   1a3bf:	jne    0x1a3ae
   1a3c1:	mov    eax,DWORD PTR [ebp+0x10]
   1a3c4:	pop    ebp
   1a3c5:	ret    0xc
   1a3c8:	int3   
   1a3c9:	int3   
   1a3ca:	int3   
   1a3cb:	int3   
   1a3cc:	int3   
   1a3cd:	int3   
   1a3ce:	mov    edi,edi
   1a3d0:	push   ebp
   1a3d1:	mov    ebp,esp
   1a3d3:	mov    eax,DWORD PTR [ebp+0x8]
   1a3d6:	test   eax,eax
   1a3d8:	jge    0x1a3dc
   1a3da:	xor    eax,eax
   1a3dc:	shl    eax,0x2
   1a3df:	push   eax
   1a3e0:	call   0x11d96
   1a3e5:	pop    ecx
   1a3e6:	pop    ebp
   1a3e7:	ret    0x8
   1a3ea:	int3   
   1a3eb:	int3   
   1a3ec:	int3   
   1a3ed:	int3   
   1a3ee:	int3   
   1a3ef:	int3   
   1a3f0:	mov    edi,edi
   1a3f2:	push   ebp
   1a3f3:	mov    ebp,esp
   1a3f5:	push   esi
   1a3f6:	mov    esi,ecx
   1a3f8:	push   DWORD PTR [esi]
   1a3fa:	call   0x10990
   1a3ff:	test   BYTE PTR [ebp+0x8],0x1
   1a403:	pop    ecx
   1a404:	je     0x1a40d
   1a406:	push   esi
   1a407:	call   0x10990
   1a40c:	pop    ecx
   1a40d:	mov    eax,esi
   1a40f:	pop    esi
   1a410:	pop    ebp
   1a411:	ret    0x4
   1a414:	int3   
   1a415:	int3   
   1a416:	int3   
   1a417:	int3   
   1a418:	int3   
   1a419:	int3   
   1a41a:	mov    edi,edi
   1a41c:	push   ebp
   1a41d:	mov    ebp,esp
   1a41f:	mov    eax,ds:0x78284
   1a424:	sub    esp,0x20
   1a427:	push   ebx
   1a428:	push   esi
   1a429:	push   edi
   1a42a:	lea    esi,[eax+0x4]
   1a42d:	lea    edi,[ebp-0x10]
   1a430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a434:	lea    ebx,[eax+0x14]
   1a437:	jmp    0x1a455
   1a439:	mov    eax,DWORD PTR [eax]
   1a43b:	mov    ecx,DWORD PTR [eax+0x8]
   1a43e:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a441:	jne    0x1a44d
   1a443:	cmp    BYTE PTR [eax+0x24],0x0
   1a447:	jne    0x1a466
   1a449:	mov    BYTE PTR [eax+0x24],0x1
   1a44d:	lea    ecx,[ebp-0x10]
   1a450:	call   0x1a2b4
   1a455:	mov    eax,DWORD PTR [ebp-0x8]
   1a458:	lea    edi,[ebp-0x20]
   1a45b:	mov    esi,ebx
   1a45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a461:	cmp    eax,DWORD PTR [ebp-0x18]
   1a464:	jne    0x1a439
   1a466:	pop    edi
   1a467:	pop    esi
   1a468:	pop    ebx
   1a469:	leave  
   1a46a:	ret    0x4
   1a46d:	int3   
   1a46e:	int3   
   1a46f:	int3   
   1a470:	int3   
   1a471:	int3   
   1a472:	mov    eax,ecx
   1a474:	xor    ecx,ecx
   1a476:	mov    DWORD PTR [eax+0x4],ecx
   1a479:	mov    DWORD PTR [eax+0x8],ecx
   1a47c:	mov    DWORD PTR [eax+0xc],ecx
   1a47f:	mov    DWORD PTR [eax+0x10],ecx
   1a482:	mov    DWORD PTR [eax+0x14],ecx
   1a485:	mov    DWORD PTR [eax+0x18],ecx
   1a488:	mov    DWORD PTR [eax+0x1c],ecx
   1a48b:	mov    DWORD PTR [eax+0x20],ecx
   1a48e:	mov    DWORD PTR [eax+0x24],ecx
   1a491:	mov    DWORD PTR [eax+0x28],ecx
   1a494:	mov    DWORD PTR [eax+0x2c],ecx
   1a497:	ret    0x4
   1a49a:	int3   
   1a49b:	int3   
   1a49c:	int3   
   1a49d:	int3   
   1a49e:	int3   
   1a49f:	int3   
   1a4a0:	mov    edi,edi
   1a4a2:	push   ebp
   1a4a3:	mov    ebp,esp
   1a4a5:	sub    esp,0x10
   1a4a8:	push   esi
   1a4a9:	push   edi
   1a4aa:	lea    esi,[ecx+0x4]
   1a4ad:	lea    edi,[ebp-0x10]
   1a4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b4:	mov    eax,DWORD PTR [ebp-0x8]
   1a4b7:	pop    edi
   1a4b8:	pop    esi
   1a4b9:	leave  
   1a4ba:	ret    
   1a4bb:	int3   
   1a4bc:	int3   
   1a4bd:	int3   
   1a4be:	int3   
   1a4bf:	int3   
   1a4c0:	mov    edi,edi
   1a4c2:	push   ebp
   1a4c3:	mov    ebp,esp
   1a4c5:	mov    edx,DWORD PTR [ebp+0x8]
   1a4c8:	mov    eax,DWORD PTR [edx+0x8]
   1a4cb:	push   esi
   1a4cc:	mov    esi,DWORD PTR [eax]
   1a4ce:	mov    DWORD PTR [edx+0x8],esi
   1a4d1:	mov    esi,DWORD PTR [eax]
   1a4d3:	cmp    esi,DWORD PTR ds:0x7828c
   1a4d9:	je     0x1a4de
   1a4db:	mov    DWORD PTR [esi+0x4],edx
   1a4de:	mov    esi,DWORD PTR [edx+0x4]
   1a4e1:	mov    DWORD PTR [eax+0x4],esi
   1a4e4:	mov    ecx,DWORD PTR [ecx+0x4]
   1a4e7:	pop    esi
   1a4e8:	cmp    edx,DWORD PTR [ecx+0x4]
   1a4eb:	jne    0x1a4f2
   1a4ed:	mov    DWORD PTR [ecx+0x4],eax
   1a4f0:	jmp    0x1a500
   1a4f2:	mov    ecx,DWORD PTR [edx+0x4]
   1a4f5:	cmp    edx,DWORD PTR [ecx]
   1a4f7:	jne    0x1a4fd
   1a4f9:	mov    DWORD PTR [ecx],eax
   1a4fb:	jmp    0x1a500
   1a4fd:	mov    DWORD PTR [ecx+0x8],eax
   1a500:	mov    DWORD PTR [eax],edx
   1a502:	mov    DWORD PTR [edx+0x4],eax
   1a505:	pop    ebp
   1a506:	ret    0x4
   1a509:	int3   
   1a50a:	int3   
   1a50b:	int3   
   1a50c:	int3   
   1a50d:	int3   
   1a50e:	mov    edi,edi
   1a510:	push   ebp
   1a511:	mov    ebp,esp
   1a513:	mov    edx,DWORD PTR [ebp+0x8]
   1a516:	mov    eax,DWORD PTR [edx]
   1a518:	push   esi
   1a519:	mov    esi,DWORD PTR [eax+0x8]
   1a51c:	mov    DWORD PTR [edx],esi
   1a51e:	mov    esi,DWORD PTR [eax+0x8]
   1a521:	cmp    esi,DWORD PTR ds:0x7828c
   1a527:	je     0x1a52c
   1a529:	mov    DWORD PTR [esi+0x4],edx
   1a52c:	mov    esi,DWORD PTR [edx+0x4]
   1a52f:	mov    DWORD PTR [eax+0x4],esi
   1a532:	mov    ecx,DWORD PTR [ecx+0x4]
   1a535:	pop    esi
   1a536:	cmp    edx,DWORD PTR [ecx+0x4]
   1a539:	jne    0x1a540
   1a53b:	mov    DWORD PTR [ecx+0x4],eax
   1a53e:	jmp    0x1a54f
   1a540:	mov    ecx,DWORD PTR [edx+0x4]
   1a543:	cmp    edx,DWORD PTR [ecx+0x8]
   1a546:	jne    0x1a54d
   1a548:	mov    DWORD PTR [ecx+0x8],eax
   1a54b:	jmp    0x1a54f
   1a54d:	mov    DWORD PTR [ecx],eax
   1a54f:	mov    DWORD PTR [eax+0x8],edx
   1a552:	mov    DWORD PTR [edx+0x4],eax
   1a555:	pop    ebp
   1a556:	ret    0x4
   1a559:	int3   
   1a55a:	int3   
   1a55b:	int3   
   1a55c:	int3   
   1a55d:	int3   
   1a55e:	mov    edi,edi
   1a560:	push   esi
   1a561:	mov    esi,ecx
   1a563:	mov    ecx,DWORD PTR [esi]
   1a565:	cmp    DWORD PTR [ecx+0x14],0x0
   1a569:	jne    0x1a578
   1a56b:	mov    eax,DWORD PTR [ecx+0x4]
   1a56e:	cmp    DWORD PTR [eax+0x4],ecx
   1a571:	jne    0x1a578
   1a573:	mov    eax,DWORD PTR [ecx+0x8]
   1a576:	jmp    0x1a595
   1a578:	mov    eax,DWORD PTR [ecx]
   1a57a:	cmp    eax,DWORD PTR ds:0x7828c
   1a580:	je     0x1a58e
   1a582:	push   eax
   1a583:	call   0x1a30e
   1a588:	jmp    0x1a595
   1a58a:	mov    DWORD PTR [esi],eax
   1a58c:	mov    ecx,eax
   1a58e:	mov    eax,DWORD PTR [ecx+0x4]
   1a591:	cmp    ecx,DWORD PTR [eax]
   1a593:	je     0x1a58a
   1a595:	mov    DWORD PTR [esi],eax
   1a597:	pop    esi
   1a598:	ret    
   1a599:	int3   
   1a59a:	int3   
   1a59b:	int3   
   1a59c:	int3   
   1a59d:	int3   
   1a59e:	mov    edi,edi
   1a5a0:	push   ebp
   1a5a1:	mov    ebp,esp
   1a5a3:	mov    eax,DWORD PTR [ecx+0x4]
   1a5a6:	push   esi
   1a5a7:	mov    esi,DWORD PTR [eax+0x4]
   1a5aa:	push   edi
   1a5ab:	mov    edi,eax
   1a5ad:	jmp    0x1a5c8
   1a5af:	push   DWORD PTR [ebp+0x8]
   1a5b2:	lea    eax,[esi+0xc]
   1a5b5:	push   eax
   1a5b6:	call   0x197ae
   1a5bb:	test   al,al
   1a5bd:	je     0x1a5c4
   1a5bf:	mov    esi,DWORD PTR [esi+0x8]
   1a5c2:	jmp    0x1a5c8
   1a5c4:	mov    edi,esi
   1a5c6:	mov    esi,DWORD PTR [esi]
   1a5c8:	cmp    esi,DWORD PTR ds:0x7828c
   1a5ce:	jne    0x1a5af
   1a5d0:	mov    eax,edi
   1a5d2:	pop    edi
   1a5d3:	pop    esi
   1a5d4:	pop    ebp
   1a5d5:	ret    0x4
   1a5d8:	int3   
   1a5d9:	int3   
   1a5da:	int3   
   1a5db:	int3   
   1a5dc:	int3   
   1a5dd:	int3   
   1a5de:	mov    edi,edi
   1a5e0:	push   ebp
   1a5e1:	mov    ebp,esp
   1a5e3:	mov    eax,DWORD PTR [ecx+0x4]
   1a5e6:	push   esi
   1a5e7:	mov    esi,DWORD PTR [eax+0x4]
   1a5ea:	push   edi
   1a5eb:	mov    edi,eax
   1a5ed:	jmp    0x1a608
   1a5ef:	lea    eax,[esi+0xc]
   1a5f2:	push   eax
   1a5f3:	push   DWORD PTR [ebp+0x8]
   1a5f6:	call   0x197ae
   1a5fb:	test   al,al
   1a5fd:	je     0x1a605
   1a5ff:	mov    edi,esi
   1a601:	mov    esi,DWORD PTR [esi]
   1a603:	jmp    0x1a608
   1a605:	mov    esi,DWORD PTR [esi+0x8]
   1a608:	cmp    esi,DWORD PTR ds:0x7828c
   1a60e:	jne    0x1a5ef
   1a610:	mov    eax,edi
   1a612:	pop    edi
   1a613:	pop    esi
   1a614:	pop    ebp
   1a615:	ret    0x4
   1a618:	int3   
   1a619:	int3   
   1a61a:	int3   
   1a61b:	int3   
   1a61c:	int3   
   1a61d:	int3   
   1a61e:	mov    edi,edi
   1a620:	push   ebp
   1a621:	mov    ebp,esp
   1a623:	mov    ecx,DWORD PTR [ebp+0x8]
   1a626:	test   ecx,ecx
   1a628:	je     0x1a632
   1a62a:	push   DWORD PTR [ebp+0xc]
   1a62d:	call   0x13508
   1a632:	pop    ebp
   1a633:	ret    0x8
   1a636:	int3   
   1a637:	int3   
   1a638:	int3   
   1a639:	int3   
   1a63a:	int3   
   1a63b:	int3   
   1a63c:	mov    edi,edi
   1a63e:	push   ebp
   1a63f:	mov    ebp,esp
   1a641:	mov    ecx,DWORD PTR [ebp+0x8]
   1a644:	push   0x0
   1a646:	call   0x1a3f0
   1a64b:	pop    ebp
   1a64c:	ret    0x4
   1a64f:	int3   
   1a650:	int3   
   1a651:	int3   
   1a652:	int3   
   1a653:	int3   
   1a654:	mov    edi,edi
   1a656:	push   ebp
   1a657:	mov    ebp,esp
   1a659:	push   edi
   1a65a:	mov    edi,DWORD PTR [ebp+0xc]
   1a65d:	cmp    DWORD PTR [ebp+0x8],edi
   1a660:	je     0x1a676
   1a662:	push   esi
   1a663:	mov    esi,DWORD PTR [ebp+0x10]
   1a666:	inc    DWORD PTR [esi]
   1a668:	lea    ecx,[ebp+0x8]
   1a66b:	call   0x1a352
   1a670:	cmp    DWORD PTR [ebp+0x8],edi
   1a673:	jne    0x1a666
   1a675:	pop    esi
   1a676:	pop    edi
   1a677:	pop    ebp
   1a678:	ret    
   1a679:	int3   
   1a67a:	int3   
   1a67b:	int3   
   1a67c:	int3   
   1a67d:	int3   
   1a67e:	mov    edi,edi
   1a680:	push   ebp
   1a681:	mov    ebp,esp
   1a683:	mov    eax,DWORD PTR [ebp+0xc]
   1a686:	mov    ecx,DWORD PTR [eax+0x34]
   1a689:	lea    eax,[ecx+eax*1+0x40]
   1a68d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a690:	push   0xffffffff
   1a692:	push   eax
   1a693:	call   0x134e8
   1a698:	mov    eax,DWORD PTR [ebp+0x8]
   1a69b:	pop    ebp
   1a69c:	ret    0x8
   1a69f:	int3   
   1a6a0:	int3   
   1a6a1:	int3   
   1a6a2:	int3   
   1a6a3:	int3   
   1a6a4:	mov    edi,edi
   1a6a6:	push   ebp
   1a6a7:	mov    ebp,esp
   1a6a9:	mov    eax,DWORD PTR [ebp+0xc]
   1a6ac:	mov    ecx,DWORD PTR [eax+0x38]
   1a6af:	lea    eax,[ecx+eax*1+0x40]
   1a6b3:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6b6:	push   0xffffffff
   1a6b8:	push   eax
   1a6b9:	call   0x134e8
   1a6be:	mov    eax,DWORD PTR [ebp+0x8]
   1a6c1:	pop    ebp
   1a6c2:	ret    0x8
   1a6c5:	int3   
   1a6c6:	int3   
   1a6c7:	int3   
   1a6c8:	int3   
   1a6c9:	int3   
   1a6ca:	mov    edi,edi
   1a6cc:	push   ebp
   1a6cd:	mov    ebp,esp
   1a6cf:	mov    eax,DWORD PTR [ebp+0xc]
   1a6d2:	mov    ecx,DWORD PTR [eax+0x3c]
   1a6d5:	lea    eax,[ecx+eax*1+0x40]
   1a6d9:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6dc:	push   0xffffffff
   1a6de:	push   eax
   1a6df:	call   0x134e8
   1a6e4:	mov    eax,DWORD PTR [ebp+0x8]
   1a6e7:	pop    ebp
   1a6e8:	ret    0x8
   1a6eb:	int3   
   1a6ec:	int3   
   1a6ed:	int3   
   1a6ee:	int3   
   1a6ef:	int3   
   1a6f0:	mov    edi,edi
   1a6f2:	push   ebp
   1a6f3:	mov    ebp,esp
   1a6f5:	sub    esp,0x1c
   1a6f8:	mov    eax,ds:0x78284
   1a6fd:	and    DWORD PTR [ebp-0x4],0x0
   1a701:	push   ebx
   1a702:	mov    ebx,DWORD PTR [ebp+0x8]
   1a705:	push   esi
   1a706:	push   edi
   1a707:	lea    esi,[eax+0x4]
   1a70a:	mov    edi,ebx
   1a70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a710:	lea    esi,[eax+0x14]
   1a713:	jmp    0x1a770
   1a715:	push   DWORD PTR [ebp+0xc]
   1a718:	mov    eax,DWORD PTR [ebx+0x8]
   1a71b:	push   DWORD PTR [eax]
   1a71d:	or     DWORD PTR [ebp-0x4],0x1
   1a721:	lea    eax,[ebp-0xc]
   1a724:	push   eax
   1a725:	call   0x1a6ca
   1a72a:	push   eax
   1a72b:	call   0x197be
   1a730:	test   al,al
   1a732:	je     0x1a743
   1a734:	mov    eax,DWORD PTR [ebx+0x8]
   1a737:	mov    eax,DWORD PTR [eax]
   1a739:	cmp    BYTE PTR [eax+0x1c],0x0
   1a73d:	mov    BYTE PTR [ebp+0xb],0x1
   1a741:	jne    0x1a747
   1a743:	mov    BYTE PTR [ebp+0xb],0x0
   1a747:	test   BYTE PTR [ebp-0x4],0x1
   1a74b:	je     0x1a75a
   1a74d:	push   DWORD PTR [ebp-0xc]
   1a750:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a754:	call   0x10990
   1a759:	pop    ecx
   1a75a:	cmp    BYTE PTR [ebp+0xb],0x0
   1a75e:	jne    0x1a77f
   1a760:	mov    ecx,ebx
   1a762:	call   0x1a2b4
   1a767:	mov    esi,DWORD PTR ds:0x78284
   1a76d:	add    esi,0x14
   1a770:	mov    eax,DWORD PTR [ebx+0x8]
   1a773:	lea    edi,[ebp-0x1c]
   1a776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a77a:	cmp    eax,DWORD PTR [ebp-0x14]
   1a77d:	jne    0x1a715
   1a77f:	pop    edi
   1a780:	pop    esi
   1a781:	mov    eax,ebx
   1a783:	pop    ebx
   1a784:	leave  
   1a785:	ret    0x8
   1a788:	int3   
   1a789:	int3   
   1a78a:	int3   
   1a78b:	int3   
   1a78c:	int3   
   1a78d:	int3   
   1a78e:	mov    edi,edi
   1a790:	push   ebp
   1a791:	mov    ebp,esp
   1a793:	sub    esp,0x28
   1a796:	mov    eax,DWORD PTR [ebp+0x8]
   1a799:	push   ebx
   1a79a:	push   esi
   1a79b:	push   edi
   1a79c:	lea    esi,[eax+0x4]
   1a79f:	mov    DWORD PTR [ebp-0x8],esi
   1a7a2:	lea    edi,[ebp-0x18]
   1a7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a7:	and    DWORD PTR [ebp-0x4],0x0
   1a7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ad:	lea    ecx,[eax+0x14]
   1a7b0:	mov    eax,DWORD PTR [ebp-0x10]
   1a7b3:	mov    esi,ecx
   1a7b5:	lea    edi,[ebp-0x28]
   1a7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7bb:	push   0x4
   1a7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7be:	pop    ebx
   1a7bf:	mov    DWORD PTR [ebp+0x8],ecx
   1a7c2:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7c5:	je     0x1a7e7
   1a7c7:	mov    esi,ecx
   1a7c9:	lea    edi,[ebp-0x28]
   1a7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7d0:	mov    eax,DWORD PTR [eax]
   1a7d2:	add    ebx,DWORD PTR [eax]
   1a7d4:	inc    DWORD PTR [ebp-0x4]
   1a7d7:	lea    ecx,[ebp-0x18]
   1a7da:	call   0x1a2b4
   1a7df:	mov    eax,DWORD PTR [ebp-0x10]
   1a7e2:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7e5:	jne    0x1a7d0
   1a7e7:	mov    eax,DWORD PTR [ebp+0xc]
   1a7ea:	cmp    ebx,DWORD PTR [eax+0x4]
   1a7ed:	mov    DWORD PTR [eax+0x4],ebx
   1a7f0:	jbe    0x1a7fa
   1a7f2:	mov    DWORD PTR [eax],0x1
   1a7f8:	jmp    0x1a840
   1a7fa:	and    DWORD PTR [eax],0x0
   1a7fd:	mov    esi,DWORD PTR [ebp-0x8]
   1a800:	lea    ebx,[eax+0x8]
   1a803:	mov    eax,DWORD PTR [ebp-0x4]
   1a806:	mov    DWORD PTR [ebx],eax
   1a808:	lea    edi,[ebp-0x28]
   1a80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80e:	add    ebx,0x4
   1a811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a812:	jmp    0x1a82e
   1a814:	mov    eax,DWORD PTR [esi]
   1a816:	push   DWORD PTR [eax]
   1a818:	push   eax
   1a819:	push   ebx
   1a81a:	call   0x1da96
   1a81f:	mov    eax,DWORD PTR [esi]
   1a821:	add    ebx,DWORD PTR [eax]
   1a823:	add    esp,0xc
   1a826:	lea    ecx,[ebp-0x28]
   1a829:	call   0x1a2b4
   1a82e:	mov    esi,DWORD PTR [ebp+0x8]
   1a831:	lea    edi,[ebp-0x18]
   1a834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a838:	mov    esi,DWORD PTR [ebp-0x20]
   1a83b:	cmp    esi,DWORD PTR [ebp-0x10]
   1a83e:	jne    0x1a814
   1a840:	pop    edi
   1a841:	pop    esi
   1a842:	pop    ebx
   1a843:	leave  
   1a844:	ret    0x8
   1a847:	int3   
   1a848:	int3   
   1a849:	int3   
   1a84a:	int3   
   1a84b:	int3   
   1a84c:	push   0x8
   1a84e:	push   0x772d0
   1a853:	call   0x1dac8
   1a858:	xor    esi,esi
   1a85a:	push   esi
   1a85b:	push   esi
   1a85c:	push   esi
   1a85d:	push   esi
   1a85e:	push   0x7825c
   1a863:	call   DWORD PTR ds:0x1f020
   1a869:	cmp    eax,esi
   1a86b:	jl     0x1a8ac
   1a86d:	mov    DWORD PTR [ebp-0x4],esi
   1a870:	push   DWORD PTR [ebp+0x8]
   1a873:	push   DWORD PTR ds:0x78284
   1a879:	call   0x1a78e
   1a87e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a885:	jmp    0x1a8a0
   1a887:	xor    eax,eax
   1a889:	inc    eax
   1a88a:	ret    
   1a88b:	mov    esp,DWORD PTR [ebp-0x18]
   1a88e:	mov    eax,DWORD PTR [ebp+0x8]
   1a891:	mov    DWORD PTR [eax],0x2
   1a897:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a89e:	xor    esi,esi
   1a8a0:	push   esi
   1a8a1:	push   0x7825c
   1a8a6:	call   DWORD PTR ds:0x1f01c
   1a8ac:	call   0x1db0d
   1a8b1:	ret    0x4
   1a8b4:	int3   
   1a8b5:	int3   
   1a8b6:	int3   
   1a8b7:	int3   
   1a8b8:	int3   
   1a8b9:	int3   
   1a8ba:	mov    edi,edi
   1a8bc:	push   ebp
   1a8bd:	mov    ebp,esp
   1a8bf:	sub    esp,0x10
   1a8c2:	push   ebx
   1a8c3:	mov    ebx,ecx
   1a8c5:	mov    eax,DWORD PTR [ebx+0x10]
   1a8c8:	push   esi
   1a8c9:	lea    ecx,[eax+0x4]
   1a8cc:	push   edi
   1a8cd:	mov    DWORD PTR [ebx+0x10],ecx
   1a8d0:	push   DWORD PTR [eax]
   1a8d2:	call   0x10990
   1a8d7:	xor    eax,eax
   1a8d9:	pop    ecx
   1a8da:	cmp    DWORD PTR [ebx+0x2c],eax
   1a8dd:	jne    0x1a90a
   1a8df:	mov    DWORD PTR [ebp-0x10],eax
   1a8e2:	mov    DWORD PTR [ebp-0xc],eax
   1a8e5:	mov    DWORD PTR [ebp-0x8],eax
   1a8e8:	mov    DWORD PTR [ebp-0x4],eax
   1a8eb:	lea    edi,[ebx+0x4]
   1a8ee:	lea    esi,[ebp-0x10]
   1a8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f3:	push   DWORD PTR [ebx+0x24]
   1a8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f8:	lea    edi,[ebx+0x14]
   1a8fb:	lea    esi,[ebp-0x10]
   1a8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a902:	call   0x10990
   1a907:	pop    ecx
   1a908:	jmp    0x1a921
   1a90a:	mov    eax,DWORD PTR [ebx+0x10]
   1a90d:	push   eax
   1a90e:	push   DWORD PTR [eax]
   1a910:	lea    ecx,[ebp-0x10]
   1a913:	call   0x1a2e2
   1a918:	lea    edi,[ebx+0x4]
   1a91b:	mov    esi,eax
   1a91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a921:	pop    edi
   1a922:	pop    esi
   1a923:	pop    ebx
   1a924:	leave  
   1a925:	ret    
   1a926:	int3   
   1a927:	int3   
   1a928:	int3   
   1a929:	int3   
   1a92a:	int3   
   1a92b:	int3   
   1a92c:	mov    edi,edi
   1a92e:	push   ebp
   1a92f:	mov    ebp,esp
   1a931:	mov    eax,DWORD PTR [ebp+0xc]
   1a934:	push   esi
   1a935:	mov    esi,ecx
   1a937:	mov    ecx,DWORD PTR [eax]
   1a939:	mov    DWORD PTR [ebp+0xc],ecx
   1a93c:	mov    ecx,DWORD PTR [eax+0x4]
   1a93f:	mov    edx,DWORD PTR [eax]
   1a941:	mov    DWORD PTR [ecx],edx
   1a943:	mov    ecx,DWORD PTR [eax]
   1a945:	mov    edx,DWORD PTR [eax+0x4]
   1a948:	push   eax
   1a949:	mov    DWORD PTR [ecx+0x4],edx
   1a94c:	call   0x10990
   1a951:	mov    eax,DWORD PTR [ebp+0x8]
   1a954:	dec    DWORD PTR [esi+0x8]
   1a957:	pop    ecx
   1a958:	mov    ecx,DWORD PTR [ebp+0xc]
   1a95b:	mov    DWORD PTR [eax],ecx
   1a95d:	pop    esi
   1a95e:	pop    ebp
   1a95f:	ret    0x8
   1a962:	int3   
   1a963:	int3   
   1a964:	int3   
   1a965:	int3   
   1a966:	int3   
   1a967:	int3   
   1a968:	mov    edi,edi
   1a96a:	push   ebp
   1a96b:	mov    ebp,esp
   1a96d:	push   ecx
   1a96e:	push   esi
   1a96f:	mov    esi,ecx
   1a971:	jmp    0x1a986
   1a973:	mov    eax,ecx
   1a975:	mov    ecx,DWORD PTR [ecx]
   1a977:	push   eax
   1a978:	lea    eax,[ebp-0x4]
   1a97b:	mov    DWORD PTR [ebp+0xc],ecx
   1a97e:	push   eax
   1a97f:	mov    ecx,esi
   1a981:	call   0x1a92c
   1a986:	mov    ecx,DWORD PTR [ebp+0xc]
   1a989:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a98c:	jne    0x1a973
   1a98e:	mov    eax,DWORD PTR [ebp+0x8]
   1a991:	mov    DWORD PTR [eax],ecx
   1a993:	pop    esi
   1a994:	leave  
   1a995:	ret    0xc
   1a998:	int3   
   1a999:	int3   
   1a99a:	int3   
   1a99b:	int3   
   1a99c:	int3   
   1a99d:	int3   
   1a99e:	mov    edi,edi
   1a9a0:	push   ebp
   1a9a1:	mov    ebp,esp
   1a9a3:	push   0x0
   1a9a5:	push   0xc
   1a9a7:	call   0x132c8
   1a9ac:	mov    ecx,DWORD PTR [ebp+0x8]
   1a9af:	test   ecx,ecx
   1a9b1:	jne    0x1a9b5
   1a9b3:	mov    ecx,eax
   1a9b5:	mov    DWORD PTR [eax],ecx
   1a9b7:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9ba:	test   ecx,ecx
   1a9bc:	jne    0x1a9c0
   1a9be:	mov    ecx,eax
   1a9c0:	mov    DWORD PTR [eax+0x4],ecx
   1a9c3:	pop    ebp
   1a9c4:	ret    0x8
   1a9c7:	int3   
   1a9c8:	int3   
   1a9c9:	int3   
   1a9ca:	int3   
   1a9cb:	int3   
   1a9cc:	mov    edi,edi
   1a9ce:	push   esi
   1a9cf:	mov    esi,ecx
   1a9d1:	mov    eax,DWORD PTR [esi+0x28]
   1a9d4:	shl    eax,0x2
   1a9d7:	push   0x0
   1a9d9:	push   eax
   1a9da:	call   0x132c8
   1a9df:	mov    DWORD PTR [esi+0x24],eax
   1a9e2:	pop    esi
   1a9e3:	ret    
   1a9e4:	int3   
   1a9e5:	int3   
   1a9e6:	int3   
   1a9e7:	int3   
   1a9e8:	int3   
   1a9e9:	int3   
   1a9ea:	mov    edi,edi
   1a9ec:	push   ebp
   1a9ed:	mov    ebp,esp
   1a9ef:	push   ebx
   1a9f0:	push   esi
   1a9f1:	push   edi
   1a9f2:	mov    edi,DWORD PTR [ebp+0x8]
   1a9f5:	mov    eax,0xfffffff
   1a9fa:	mov    esi,ecx
   1a9fc:	cmp    edi,eax
   1a9fe:	jbe    0x1aa02
   1aa00:	mov    edi,eax
   1aa02:	mov    eax,edi
   1aa04:	push   0x0
   1aa06:	shl    eax,0x2
   1aa09:	push   eax
   1aa0a:	call   0x132c8
   1aa0f:	mov    ebx,eax
   1aa11:	mov    eax,edi
   1aa13:	shr    eax,0x2
   1aa16:	lea    eax,[ebx+eax*4]
   1aa19:	push   eax
   1aa1a:	mov    DWORD PTR [ebp+0x8],eax
   1aa1d:	mov    eax,DWORD PTR [esi+0x20]
   1aa20:	add    eax,0x4
   1aa23:	push   eax
   1aa24:	push   DWORD PTR [esi+0x10]
   1aa27:	call   0x1a3a4
   1aa2c:	push   DWORD PTR [esi+0x24]
   1aa2f:	call   0x10990
   1aa34:	mov    eax,DWORD PTR [ebp+0x8]
   1aa37:	pop    ecx
   1aa38:	mov    DWORD PTR [esi+0x28],edi
   1aa3b:	pop    edi
   1aa3c:	mov    DWORD PTR [esi+0x24],ebx
   1aa3f:	pop    esi
   1aa40:	pop    ebx
   1aa41:	pop    ebp
   1aa42:	ret    0x4
   1aa45:	int3   
   1aa46:	int3   
   1aa47:	int3   
   1aa48:	int3   
   1aa49:	int3   
   1aa4a:	mov    edi,edi
   1aa4c:	push   ebp
   1aa4d:	mov    ebp,esp
   1aa4f:	push   0x0
   1aa51:	push   0x18
   1aa53:	call   0x132c8
   1aa58:	mov    ecx,DWORD PTR [ebp+0x8]
   1aa5b:	mov    DWORD PTR [eax+0x4],ecx
   1aa5e:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa61:	mov    DWORD PTR [eax+0x14],ecx
   1aa64:	pop    ebp
   1aa65:	ret    0x8
   1aa68:	int3   
   1aa69:	int3   
   1aa6a:	int3   
   1aa6b:	int3   
   1aa6c:	int3   
   1aa6d:	int3   
   1aa6e:	mov    edi,edi
   1aa70:	push   ebp
   1aa71:	mov    ebp,esp
   1aa73:	push   ecx
   1aa74:	push   DWORD PTR [ebp-0x4]
   1aa77:	push   DWORD PTR [ebp+0x10]
   1aa7a:	push   DWORD PTR [ebp+0xc]
   1aa7d:	push   DWORD PTR [ebp+0x8]
   1aa80:	call   0x1a654
   1aa85:	add    esp,0x10
   1aa88:	leave  
   1aa89:	ret    
   1aa8a:	int3   
   1aa8b:	int3   
   1aa8c:	int3   
   1aa8d:	int3   
   1aa8e:	int3   
   1aa8f:	int3   
   1aa90:	mov    edi,edi
   1aa92:	push   ebp
   1aa93:	mov    ebp,esp
   1aa95:	sub    esp,0x28
   1aa98:	push   ebx
   1aa99:	mov    ebx,DWORD PTR [ebp+0x8]
   1aa9c:	push   esi
   1aa9d:	push   edi
   1aa9e:	push   0xffffffff
   1aaa0:	push   ebx
   1aaa1:	lea    ecx,[ebp-0x8]
   1aaa4:	call   0x129ea
   1aaa9:	and    DWORD PTR [ebx],0x0
   1aaac:	lea    eax,[ebp-0x8]
   1aaaf:	push   eax
   1aab0:	lea    eax,[ebp-0x18]
   1aab3:	push   eax
   1aab4:	call   0x1a6f0
   1aab9:	mov    esi,DWORD PTR ds:0x78284
   1aabf:	mov    eax,DWORD PTR [ebp-0x10]
   1aac2:	push   DWORD PTR [ebp-0x8]
   1aac5:	add    esi,0x14
   1aac8:	lea    edi,[ebp-0x28]
   1aacb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aacf:	cmp    eax,DWORD PTR [ebp-0x20]
   1aad2:	je     0x1aadc
   1aad4:	mov    eax,DWORD PTR [eax]
   1aad6:	mov    eax,DWORD PTR [eax+0x20]
   1aad9:	inc    eax
   1aada:	mov    DWORD PTR [ebx],eax
   1aadc:	call   0x10990
   1aae1:	pop    ecx
   1aae2:	pop    edi
   1aae3:	pop    esi
   1aae4:	pop    ebx
   1aae5:	leave  
   1aae6:	ret    0x4
   1aae9:	int3   
   1aaea:	int3   
   1aaeb:	int3   
   1aaec:	int3   
   1aaed:	int3   
   1aaee:	add    DWORD PTR [ecx+0xc],0x4
   1aaf2:	dec    DWORD PTR [ecx+0x2c]
   1aaf5:	mov    eax,DWORD PTR [ecx+0xc]
   1aaf8:	je     0x1aaff
   1aafa:	cmp    eax,DWORD PTR [ecx+0x8]
   1aafd:	jne    0x1ab04
   1aaff:	jmp    0x1a8ba
   1ab04:	ret    
   1ab05:	int3   
   1ab06:	int3   
   1ab07:	int3   
   1ab08:	int3   
   1ab09:	int3   
   1ab0a:	mov    edi,edi
   1ab0c:	push   esi
   1ab0d:	push   0x0
   1ab0f:	push   0xc
   1ab11:	mov    esi,ecx
   1ab13:	call   0x132c8
   1ab18:	mov    DWORD PTR [eax],eax
   1ab1a:	mov    DWORD PTR [eax+0x4],eax
   1ab1d:	and    DWORD PTR [esi+0x8],0x0
   1ab21:	mov    DWORD PTR [esi+0x4],eax
   1ab24:	mov    eax,esi
   1ab26:	pop    esi
   1ab27:	ret    0x4
   1ab2a:	int3   
   1ab2b:	int3   
   1ab2c:	int3   
   1ab2d:	int3   
   1ab2e:	int3   
   1ab2f:	int3   
   1ab30:	mov    edi,edi
   1ab32:	push   ebp
   1ab33:	mov    ebp,esp
   1ab35:	push   ecx
   1ab36:	push   esi
   1ab37:	mov    esi,ecx
   1ab39:	mov    eax,DWORD PTR [esi+0x4]
   1ab3c:	mov    ecx,DWORD PTR [eax]
   1ab3e:	push   eax
   1ab3f:	push   ecx
   1ab40:	lea    eax,[ebp-0x4]
   1ab43:	push   eax
   1ab44:	mov    ecx,esi
   1ab46:	call   0x1a968
   1ab4b:	push   DWORD PTR [esi+0x4]
   1ab4e:	call   0x10990
   1ab53:	and    DWORD PTR [esi+0x4],0x0
   1ab57:	and    DWORD PTR [esi+0x8],0x0
   1ab5b:	pop    ecx
   1ab5c:	pop    esi
   1ab5d:	leave  
   1ab5e:	ret    
   1ab5f:	int3   
   1ab60:	int3   
   1ab61:	int3   
   1ab62:	int3   
   1ab63:	int3   
   1ab64:	mov    edi,edi
   1ab66:	push   ebp
   1ab67:	mov    ebp,esp
   1ab69:	push   ecx
   1ab6a:	mov    eax,DWORD PTR [ecx+0x4]
   1ab6d:	push   DWORD PTR [eax]
   1ab6f:	lea    eax,[ebp-0x4]
   1ab72:	push   eax
   1ab73:	call   0x1a92c
   1ab78:	leave  
   1ab79:	ret    
   1ab7a:	int3   
   1ab7b:	int3   
   1ab7c:	int3   
   1ab7d:	int3   
   1ab7e:	int3   
   1ab7f:	int3   
   1ab80:	mov    edi,edi
   1ab82:	push   ebp
   1ab83:	mov    ebp,esp
   1ab85:	sub    esp,0x18
   1ab88:	push   ebx
   1ab89:	push   esi
   1ab8a:	push   edi
   1ab8b:	push   0x0
   1ab8d:	push   0x400
   1ab92:	mov    ebx,ecx
   1ab94:	call   0x1a3ce
   1ab99:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ab9d:	mov    esi,eax
   1ab9f:	mov    DWORD PTR [ebp-0x8],esi
   1aba2:	jne    0x1abd9
   1aba4:	mov    ecx,ebx
   1aba6:	mov    DWORD PTR [ebx+0x28],0x2
   1abad:	call   0x1a9cc
   1abb2:	mov    eax,DWORD PTR [ebx+0x24]
   1abb5:	mov    DWORD PTR [eax+0x4],esi
   1abb8:	mov    eax,DWORD PTR [ebx+0x24]
   1abbb:	add    eax,0x4
   1abbe:	push   eax
   1abbf:	add    esi,0x800
   1abc5:	push   esi
   1abc6:	lea    ecx,[ebp-0x18]
   1abc9:	call   0x1a2e2
   1abce:	lea    edi,[ebx+0x4]
   1abd1:	mov    esi,eax
   1abd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abd7:	jmp    0x1ac37
   1abd9:	mov    ecx,DWORD PTR [ebx+0x28]
   1abdc:	mov    edx,DWORD PTR [ebx+0x24]
   1abdf:	mov    eax,DWORD PTR [ebx+0x20]
   1abe2:	lea    ecx,[edx+ecx*4-0x4]
   1abe6:	cmp    eax,ecx
   1abe8:	jae    0x1abf8
   1abea:	add    eax,0x4
   1abed:	mov    DWORD PTR [ebx+0x20],eax
   1abf0:	mov    DWORD PTR [eax],esi
   1abf2:	push   DWORD PTR [ebx+0x20]
   1abf5:	push   esi
   1abf6:	jmp    0x1ac2f
   1abf8:	sub    eax,DWORD PTR [ebx+0x10]
   1abfb:	mov    ecx,ebx
   1abfd:	sar    eax,0x2
   1ac00:	inc    eax
   1ac01:	mov    edi,eax
   1ac03:	lea    eax,[edi+edi*1]
   1ac06:	push   eax
   1ac07:	call   0x1a9ea
   1ac0c:	lea    ecx,[eax+edi*4]
   1ac0f:	mov    DWORD PTR [ecx],esi
   1ac11:	push   eax
   1ac12:	push   DWORD PTR [ebx+0xc]
   1ac15:	mov    DWORD PTR [ebp-0x4],ecx
   1ac18:	lea    ecx,[ebp-0x18]
   1ac1b:	call   0x1a2e2
   1ac20:	push   DWORD PTR [ebp-0x4]
   1ac23:	lea    edi,[ebx+0x4]
   1ac26:	push   DWORD PTR [ebp-0x8]
   1ac29:	mov    esi,eax
   1ac2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac2f:	lea    ecx,[ebp-0x18]
   1ac32:	call   0x1a2e2
   1ac37:	lea    edi,[ebx+0x14]
   1ac3a:	mov    esi,eax
   1ac3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac40:	pop    edi
   1ac41:	pop    esi
   1ac42:	pop    ebx
   1ac43:	leave  
   1ac44:	ret    
   1ac45:	int3   
   1ac46:	int3   
   1ac47:	int3   
   1ac48:	int3   
   1ac49:	int3   
   1ac4a:	mov    edi,edi
   1ac4c:	push   ebp
   1ac4d:	mov    ebp,esp
   1ac4f:	mov    eax,DWORD PTR [ebp+0xc]
   1ac52:	push   ebx
   1ac53:	push   esi
   1ac54:	push   edi
   1ac55:	lea    edi,[eax+0x4]
   1ac58:	push   DWORD PTR [edi]
   1ac5a:	mov    ebx,ecx
   1ac5c:	push   eax
   1ac5d:	call   0x1a99e
   1ac62:	push   DWORD PTR [ebp+0x10]
   1ac65:	mov    esi,eax
   1ac67:	mov    DWORD PTR [edi],esi
   1ac69:	mov    eax,DWORD PTR [esi+0x4]
   1ac6c:	mov    DWORD PTR [eax],esi
   1ac6e:	lea    eax,[esi+0x8]
   1ac71:	push   eax
   1ac72:	call   0x1a388
   1ac77:	mov    eax,DWORD PTR [ebp+0x8]
   1ac7a:	inc    DWORD PTR [ebx+0x8]
   1ac7d:	pop    edi
   1ac7e:	mov    DWORD PTR [eax],esi
   1ac80:	pop    esi
   1ac81:	pop    ebx
   1ac82:	pop    ebp
   1ac83:	ret    0xc
   1ac86:	int3   
   1ac87:	int3   
   1ac88:	int3   
   1ac89:	int3   
   1ac8a:	int3   
   1ac8b:	int3   
   1ac8c:	mov    edi,edi
   1ac8e:	push   ebp
   1ac8f:	mov    ebp,esp
   1ac91:	push   ecx
   1ac92:	mov    eax,DWORD PTR [ebp+0xc]
   1ac95:	push   esi
   1ac96:	mov    esi,ecx
   1ac98:	jmp    0x1acb4
   1ac9a:	add    eax,0x8
   1ac9d:	push   eax
   1ac9e:	push   DWORD PTR [ebp+0x8]
   1aca1:	lea    eax,[ebp-0x4]
   1aca4:	push   eax
   1aca5:	mov    ecx,esi
   1aca7:	call   0x1ac4a
   1acac:	mov    eax,DWORD PTR [ebp+0xc]
   1acaf:	mov    eax,DWORD PTR [eax]
   1acb1:	mov    DWORD PTR [ebp+0xc],eax
   1acb4:	cmp    eax,DWORD PTR [ebp+0x10]
   1acb7:	jne    0x1ac9a
   1acb9:	pop    esi
   1acba:	leave  
   1acbb:	ret    0xc
   1acbe:	int3   
   1acbf:	int3   
   1acc0:	int3   
   1acc1:	int3   
   1acc2:	int3   
   1acc3:	int3   
   1acc4:	mov    edi,edi
   1acc6:	push   ebp
   1acc7:	mov    ebp,esp
   1acc9:	push   esi
   1acca:	push   edi
   1accb:	push   DWORD PTR [ebp+0xc]
   1acce:	mov    edi,ecx
   1acd0:	call   0x1a5de
   1acd5:	push   DWORD PTR [ebp+0xc]
   1acd8:	mov    ecx,edi
   1acda:	mov    esi,eax
   1acdc:	call   0x1a59e
   1ace1:	mov    ecx,DWORD PTR [ebp+0x8]
   1ace4:	pop    edi
   1ace5:	mov    DWORD PTR [ecx],eax
   1ace7:	mov    DWORD PTR [ecx+0x4],esi
   1acea:	mov    eax,ecx
   1acec:	pop    esi
   1aced:	pop    ebp
   1acee:	ret    0x8
   1acf1:	int3   
   1acf2:	int3   
   1acf3:	int3   
   1acf4:	int3   
   1acf5:	int3   
   1acf6:	mov    edi,edi
   1acf8:	push   ebp
   1acf9:	mov    ebp,esp
   1acfb:	push   ecx
   1acfc:	push   ebx
   1acfd:	push   esi
   1acfe:	push   edi
   1acff:	push   0x1
   1ad01:	xor    edi,edi
   1ad03:	push   edi
   1ad04:	mov    esi,ecx
   1ad06:	call   0x1aa4a
   1ad0b:	lea    ecx,[ebp-0x1]
   1ad0e:	mov    ebx,eax
   1ad10:	call   DWORD PTR ds:0x770f4
   1ad16:	cmp    DWORD PTR ds:0x7828c,edi
   1ad1c:	jne    0x1ad31
   1ad1e:	mov    eax,ebx
   1ad20:	mov    ds:0x7828c,eax
   1ad25:	mov    DWORD PTR [eax],edi
   1ad27:	mov    eax,ds:0x7828c
   1ad2c:	xor    ebx,ebx
   1ad2e:	mov    DWORD PTR [eax+0x8],edi
   1ad31:	inc    DWORD PTR ds:0x78290
   1ad37:	lea    ecx,[ebp-0x1]
   1ad3a:	call   DWORD PTR ds:0x770f0
   1ad40:	cmp    ebx,edi
   1ad42:	je     0x1ad4b
   1ad44:	push   ebx
   1ad45:	call   0x10990
   1ad4a:	pop    ecx
   1ad4b:	push   edi
   1ad4c:	push   DWORD PTR ds:0x7828c
   1ad52:	mov    ecx,esi
   1ad54:	call   0x1aa4a
   1ad59:	mov    DWORD PTR [esi+0xc],edi
   1ad5c:	mov    DWORD PTR [esi+0x4],eax
   1ad5f:	mov    DWORD PTR [eax],eax
   1ad61:	mov    esi,DWORD PTR [esi+0x4]
   1ad64:	pop    edi
   1ad65:	mov    DWORD PTR [esi+0x8],esi
   1ad68:	pop    esi
   1ad69:	pop    ebx
   1ad6a:	leave  
   1ad6b:	ret    
   1ad6c:	int3   
   1ad6d:	int3   
   1ad6e:	int3   
   1ad6f:	int3   
   1ad70:	int3   
   1ad71:	int3   
   1ad72:	mov    edi,edi
   1ad74:	push   ebp
   1ad75:	mov    ebp,esp
   1ad77:	push   ebx
   1ad78:	push   esi
   1ad79:	mov    esi,DWORD PTR [ebp+0x10]
   1ad7c:	push   edi
   1ad7d:	push   0x0
   1ad7f:	push   esi
   1ad80:	mov    edi,ecx
   1ad82:	call   0x1aa4a
   1ad87:	push   DWORD PTR [ebp+0x14]
   1ad8a:	mov    ebx,eax
   1ad8c:	mov    eax,ds:0x7828c
   1ad91:	mov    DWORD PTR [ebx],eax
   1ad93:	mov    eax,ds:0x7828c
   1ad98:	mov    DWORD PTR [ebx+0x8],eax
   1ad9b:	lea    eax,[ebx+0xc]
   1ad9e:	push   eax
   1ad9f:	call   0x1a61e
   1ada4:	inc    DWORD PTR [edi+0xc]
   1ada7:	cmp    esi,DWORD PTR [edi+0x4]
   1adaa:	je     0x1add4
   1adac:	mov    eax,DWORD PTR [ebp+0xc]
   1adaf:	cmp    eax,DWORD PTR ds:0x7828c
   1adb5:	jne    0x1add4
   1adb7:	lea    eax,[esi+0xc]
   1adba:	push   eax
   1adbb:	push   DWORD PTR [ebp+0x14]
   1adbe:	call   0x197ae
   1adc3:	test   al,al
   1adc5:	jne    0x1add4
   1adc7:	mov    DWORD PTR [esi+0x8],ebx
   1adca:	mov    eax,DWORD PTR [edi+0x4]
   1adcd:	cmp    esi,DWORD PTR [eax+0x8]
   1add0:	jne    0x1adee
   1add2:	jmp    0x1ade3
   1add4:	mov    DWORD PTR [esi],ebx
   1add6:	mov    eax,DWORD PTR [edi+0x4]
   1add9:	cmp    esi,eax
   1addb:	jne    0x1ade8
   1addd:	mov    DWORD PTR [eax+0x4],ebx
   1ade0:	mov    eax,DWORD PTR [edi+0x4]
   1ade3:	mov    DWORD PTR [eax+0x8],ebx
   1ade6:	jmp    0x1adee
   1ade8:	cmp    esi,DWORD PTR [eax]
   1adea:	jne    0x1adee
   1adec:	mov    DWORD PTR [eax],ebx
   1adee:	mov    eax,DWORD PTR [edi+0x4]
   1adf1:	mov    esi,ebx
   1adf3:	cmp    ebx,DWORD PTR [eax+0x4]
   1adf6:	je     0x1aeaa
   1adfc:	mov    eax,DWORD PTR [esi+0x4]
   1adff:	xor    edx,edx
   1ae01:	cmp    DWORD PTR [eax+0x14],edx
   1ae04:	jne    0x1aeaa
   1ae0a:	mov    ecx,DWORD PTR [eax+0x4]
   1ae0d:	cmp    eax,DWORD PTR [ecx]
   1ae0f:	jne    0x1ae4b
   1ae11:	mov    ecx,DWORD PTR [ecx+0x8]
   1ae14:	cmp    DWORD PTR [ecx+0x14],edx
   1ae17:	je     0x1ae52
   1ae19:	cmp    esi,DWORD PTR [eax+0x8]
   1ae1c:	jne    0x1ae28
   1ae1e:	mov    esi,eax
   1ae20:	push   esi
   1ae21:	mov    ecx,edi
   1ae23:	call   0x1a4c0
   1ae28:	mov    eax,DWORD PTR [esi+0x4]
   1ae2b:	mov    DWORD PTR [eax+0x14],0x1
   1ae32:	mov    eax,DWORD PTR [esi+0x4]
   1ae35:	mov    eax,DWORD PTR [eax+0x4]
   1ae38:	and    DWORD PTR [eax+0x14],0x0
   1ae3c:	mov    eax,DWORD PTR [esi+0x4]
   1ae3f:	push   DWORD PTR [eax+0x4]
   1ae42:	mov    ecx,edi
   1ae44:	call   0x1a50e
   1ae49:	jmp    0x1ae9e
   1ae4b:	mov    ecx,DWORD PTR [ecx]
   1ae4d:	cmp    DWORD PTR [ecx+0x14],edx
   1ae50:	jne    0x1ae6f
   1ae52:	mov    edx,eax
   1ae54:	xor    eax,eax
   1ae56:	inc    eax
   1ae57:	mov    DWORD PTR [edx+0x14],eax
   1ae5a:	mov    DWORD PTR [ecx+0x14],eax
   1ae5d:	mov    eax,DWORD PTR [esi+0x4]
   1ae60:	mov    eax,DWORD PTR [eax+0x4]
   1ae63:	and    DWORD PTR [eax+0x14],0x0
   1ae67:	mov    eax,DWORD PTR [esi+0x4]
   1ae6a:	mov    esi,DWORD PTR [eax+0x4]
   1ae6d:	jmp    0x1ae9e
   1ae6f:	cmp    esi,DWORD PTR [eax]
   1ae71:	jne    0x1ae7d
   1ae73:	mov    esi,eax
   1ae75:	push   esi
   1ae76:	mov    ecx,edi
   1ae78:	call   0x1a50e
   1ae7d:	mov    eax,DWORD PTR [esi+0x4]
   1ae80:	mov    DWORD PTR [eax+0x14],0x1
   1ae87:	mov    eax,DWORD PTR [esi+0x4]
   1ae8a:	mov    eax,DWORD PTR [eax+0x4]
   1ae8d:	and    DWORD PTR [eax+0x14],0x0
   1ae91:	mov    eax,DWORD PTR [esi+0x4]
   1ae94:	push   DWORD PTR [eax+0x4]
   1ae97:	mov    ecx,edi
   1ae99:	call   0x1a4c0
   1ae9e:	mov    eax,DWORD PTR [edi+0x4]
   1aea1:	cmp    esi,DWORD PTR [eax+0x4]
   1aea4:	jne    0x1adfc
   1aeaa:	mov    eax,DWORD PTR [edi+0x4]
   1aead:	mov    eax,DWORD PTR [eax+0x4]
   1aeb0:	pop    edi
   1aeb1:	mov    DWORD PTR [eax+0x14],0x1
   1aeb8:	mov    eax,DWORD PTR [ebp+0x8]
   1aebb:	pop    esi
   1aebc:	mov    DWORD PTR [eax],ebx
   1aebe:	pop    ebx
   1aebf:	pop    ebp
   1aec0:	ret    0x10
   1aec3:	int3   
   1aec4:	int3   
   1aec5:	int3   
   1aec6:	int3   
   1aec7:	int3   
   1aec8:	mov    edi,edi
   1aeca:	push   ebp
   1aecb:	mov    ebp,esp
   1aecd:	sub    esp,0x10
   1aed0:	push   ebx
   1aed1:	push   esi
   1aed2:	mov    DWORD PTR [ebp-0xc],ecx
   1aed5:	push   edi
   1aed6:	mov    edi,DWORD PTR [ebp+0xc]
   1aed9:	lea    ecx,[ebp+0xc]
   1aedc:	call   0x1a352
   1aee1:	mov    esi,DWORD PTR [edi]
   1aee3:	mov    eax,ds:0x7828c
   1aee8:	lea    ebx,[edi+0x8]
   1aeeb:	mov    DWORD PTR [ebp-0x8],edi
   1aeee:	mov    DWORD PTR [ebp-0x10],ebx
   1aef1:	cmp    esi,eax
   1aef3:	jne    0x1aef9
   1aef5:	mov    esi,DWORD PTR [ebx]
   1aef7:	jmp    0x1af10
   1aef9:	mov    ecx,DWORD PTR [ebx]
   1aefb:	cmp    ecx,eax
   1aefd:	je     0x1af10
   1aeff:	push   ecx
   1af00:	call   0x1a330
   1af05:	mov    DWORD PTR [ebp-0x8],eax
   1af08:	add    eax,0x8
   1af0b:	mov    esi,DWORD PTR [eax]
   1af0d:	mov    DWORD PTR [ebp-0x10],eax
   1af10:	lea    ecx,[ebp-0x1]
   1af13:	call   DWORD PTR ds:0x770f4
   1af19:	mov    eax,DWORD PTR [ebp-0x8]
   1af1c:	cmp    eax,edi
   1af1e:	je     0x1af80
   1af20:	mov    ecx,DWORD PTR [edi]
   1af22:	mov    DWORD PTR [ecx+0x4],eax
   1af25:	mov    ecx,DWORD PTR [edi]
   1af27:	mov    DWORD PTR [eax],ecx
   1af29:	cmp    eax,DWORD PTR [ebx]
   1af2b:	jne    0x1af32
   1af2d:	mov    DWORD PTR [esi+0x4],eax
   1af30:	jmp    0x1af49
   1af32:	mov    ecx,DWORD PTR [eax+0x4]
   1af35:	mov    edx,DWORD PTR [ebp-0x10]
   1af38:	mov    DWORD PTR [esi+0x4],ecx
   1af3b:	mov    ecx,DWORD PTR [eax+0x4]
   1af3e:	mov    DWORD PTR [ecx],esi
   1af40:	mov    ecx,DWORD PTR [ebx]
   1af42:	mov    DWORD PTR [edx],ecx
   1af44:	mov    ecx,DWORD PTR [ebx]
   1af46:	mov    DWORD PTR [ecx+0x4],eax
   1af49:	mov    ebx,DWORD PTR [ebp-0xc]
   1af4c:	mov    ecx,DWORD PTR [ebx+0x4]
   1af4f:	cmp    DWORD PTR [ecx+0x4],edi
   1af52:	jne    0x1af59
   1af54:	mov    DWORD PTR [ecx+0x4],eax
   1af57:	jmp    0x1af67
   1af59:	mov    ecx,DWORD PTR [edi+0x4]
   1af5c:	cmp    DWORD PTR [ecx],edi
   1af5e:	jne    0x1af64
   1af60:	mov    DWORD PTR [ecx],eax
   1af62:	jmp    0x1af67
   1af64:	mov    DWORD PTR [ecx+0x8],eax
   1af67:	mov    ecx,DWORD PTR [edi+0x4]
   1af6a:	mov    DWORD PTR [eax+0x4],ecx
   1af6d:	mov    ecx,DWORD PTR [eax+0x14]
   1af70:	mov    edx,DWORD PTR [edi+0x14]
   1af73:	mov    DWORD PTR [eax+0x14],edx
   1af76:	mov    DWORD PTR [edi+0x14],ecx
   1af79:	mov    DWORD PTR [ebp-0x8],edi
   1af7c:	mov    eax,edi
   1af7e:	jmp    0x1aff9
   1af80:	mov    ecx,DWORD PTR [eax+0x4]
   1af83:	mov    edx,DWORD PTR [ebp-0xc]
   1af86:	mov    DWORD PTR [esi+0x4],ecx
   1af89:	mov    ecx,DWORD PTR [edx+0x4]
   1af8c:	cmp    DWORD PTR [ecx+0x4],edi
   1af8f:	jne    0x1af96
   1af91:	mov    DWORD PTR [ecx+0x4],esi
   1af94:	jmp    0x1afa4
   1af96:	mov    ecx,DWORD PTR [edi+0x4]
   1af99:	cmp    DWORD PTR [ecx],edi
   1af9b:	jne    0x1afa1
   1af9d:	mov    DWORD PTR [ecx],esi
   1af9f:	jmp    0x1afa4
   1afa1:	mov    DWORD PTR [ecx+0x8],esi
   1afa4:	mov    ecx,DWORD PTR [edx+0x4]
   1afa7:	mov    DWORD PTR [ebp-0x10],ecx
   1afaa:	cmp    DWORD PTR [ecx],edi
   1afac:	jne    0x1afd0
   1afae:	mov    ebx,DWORD PTR [ebx]
   1afb0:	cmp    ebx,DWORD PTR ds:0x7828c
   1afb6:	jne    0x1afbf
   1afb8:	mov    ebx,DWORD PTR [edi+0x4]
   1afbb:	mov    DWORD PTR [ecx],ebx
   1afbd:	jmp    0x1afd0
   1afbf:	push   esi
   1afc0:	call   0x1a330
   1afc5:	mov    ecx,DWORD PTR [ebp-0x10]
   1afc8:	mov    edx,DWORD PTR [ebp-0xc]
   1afcb:	mov    DWORD PTR [ecx],eax
   1afcd:	mov    eax,DWORD PTR [ebp-0x8]
   1afd0:	mov    ebx,DWORD PTR [edx+0x4]
   1afd3:	cmp    DWORD PTR [ebx+0x8],edi
   1afd6:	jne    0x1aff6
   1afd8:	mov    ecx,DWORD PTR [edi]
   1afda:	cmp    ecx,DWORD PTR ds:0x7828c
   1afe0:	jne    0x1afea
   1afe2:	mov    ecx,DWORD PTR [edi+0x4]
   1afe5:	mov    DWORD PTR [ebx+0x8],ecx
   1afe8:	jmp    0x1aff6
   1afea:	push   esi
   1afeb:	call   0x1a30e
   1aff0:	mov    DWORD PTR [ebx+0x8],eax
   1aff3:	mov    eax,DWORD PTR [ebp-0x8]
   1aff6:	mov    ebx,DWORD PTR [ebp-0xc]
   1aff9:	xor    edi,edi
   1affb:	inc    edi
   1affc:	cmp    DWORD PTR [eax+0x14],edi
   1afff:	jne    0x1b113
   1b005:	jmp    0x1b0c6
   1b00a:	cmp    DWORD PTR [esi+0x14],edi
   1b00d:	jne    0x1b110
   1b013:	mov    eax,DWORD PTR [esi+0x4]
   1b016:	cmp    esi,DWORD PTR [eax]
   1b018:	jne    0x1b08f
   1b01a:	mov    eax,DWORD PTR [eax+0x8]
   1b01d:	cmp    DWORD PTR [eax+0x14],0x0
   1b021:	jne    0x1b03d
   1b023:	mov    DWORD PTR [eax+0x14],edi
   1b026:	mov    eax,DWORD PTR [esi+0x4]
   1b029:	and    DWORD PTR [eax+0x14],0x0
   1b02d:	push   DWORD PTR [esi+0x4]
   1b030:	mov    ecx,ebx
   1b032:	call   0x1a4c0
   1b037:	mov    eax,DWORD PTR [esi+0x4]
   1b03a:	mov    eax,DWORD PTR [eax+0x8]
   1b03d:	mov    ecx,DWORD PTR [eax]
   1b03f:	cmp    DWORD PTR [ecx+0x14],edi
   1b042:	jne    0x1b04c
   1b044:	mov    ecx,DWORD PTR [eax+0x8]
   1b047:	cmp    DWORD PTR [ecx+0x14],edi
   1b04a:	je     0x1b0bf
   1b04c:	mov    ecx,DWORD PTR [eax+0x8]
   1b04f:	cmp    DWORD PTR [ecx+0x14],edi
   1b052:	jne    0x1b06b
   1b054:	mov    ecx,DWORD PTR [eax]
   1b056:	mov    DWORD PTR [ecx+0x14],edi
   1b059:	and    DWORD PTR [eax+0x14],0x0
   1b05d:	push   eax
   1b05e:	mov    ecx,ebx
   1b060:	call   0x1a50e
   1b065:	mov    eax,DWORD PTR [esi+0x4]
   1b068:	mov    eax,DWORD PTR [eax+0x8]
   1b06b:	mov    ecx,DWORD PTR [esi+0x4]
   1b06e:	mov    ecx,DWORD PTR [ecx+0x14]
   1b071:	mov    DWORD PTR [eax+0x14],ecx
   1b074:	mov    ecx,DWORD PTR [esi+0x4]
   1b077:	mov    DWORD PTR [ecx+0x14],edi
   1b07a:	mov    eax,DWORD PTR [eax+0x8]
   1b07d:	mov    DWORD PTR [eax+0x14],edi
   1b080:	push   DWORD PTR [esi+0x4]
   1b083:	mov    ecx,ebx
   1b085:	call   0x1a4c0
   1b08a:	jmp    0x1b110
   1b08f:	mov    eax,DWORD PTR [eax]
   1b091:	cmp    DWORD PTR [eax+0x14],0x0
   1b095:	jne    0x1b0b0
   1b097:	mov    DWORD PTR [eax+0x14],edi
   1b09a:	mov    eax,DWORD PTR [esi+0x4]
   1b09d:	and    DWORD PTR [eax+0x14],0x0
   1b0a1:	push   DWORD PTR [esi+0x4]
   1b0a4:	mov    ecx,ebx
   1b0a6:	call   0x1a50e
   1b0ab:	mov    eax,DWORD PTR [esi+0x4]
   1b0ae:	mov    eax,DWORD PTR [eax]
   1b0b0:	mov    ecx,DWORD PTR [eax+0x8]
   1b0b3:	cmp    DWORD PTR [ecx+0x14],edi
   1b0b6:	jne    0x1b0d4
   1b0b8:	mov    ecx,DWORD PTR [eax]
   1b0ba:	cmp    DWORD PTR [ecx+0x14],edi
   1b0bd:	jne    0x1b0d4
   1b0bf:	and    DWORD PTR [eax+0x14],0x0
   1b0c3:	mov    esi,DWORD PTR [esi+0x4]
   1b0c6:	mov    eax,DWORD PTR [ebx+0x4]
   1b0c9:	cmp    esi,DWORD PTR [eax+0x4]
   1b0cc:	jne    0x1b00a
   1b0d2:	jmp    0x1b110
   1b0d4:	mov    ecx,DWORD PTR [eax]
   1b0d6:	cmp    DWORD PTR [ecx+0x14],edi
   1b0d9:	jne    0x1b0f2
   1b0db:	mov    ecx,DWORD PTR [eax+0x8]
   1b0de:	mov    DWORD PTR [ecx+0x14],edi
   1b0e1:	and    DWORD PTR [eax+0x14],0x0
   1b0e5:	push   eax
   1b0e6:	mov    ecx,ebx
   1b0e8:	call   0x1a4c0
   1b0ed:	mov    eax,DWORD PTR [esi+0x4]
   1b0f0:	mov    eax,DWORD PTR [eax]
   1b0f2:	mov    ecx,DWORD PTR [esi+0x4]
   1b0f5:	mov    ecx,DWORD PTR [ecx+0x14]
   1b0f8:	mov    DWORD PTR [eax+0x14],ecx
   1b0fb:	mov    ecx,DWORD PTR [esi+0x4]
   1b0fe:	mov    DWORD PTR [ecx+0x14],edi
   1b101:	mov    eax,DWORD PTR [eax]
   1b103:	mov    DWORD PTR [eax+0x14],edi
   1b106:	push   DWORD PTR [esi+0x4]
   1b109:	mov    ecx,ebx
   1b10b:	call   0x1a50e
   1b110:	mov    DWORD PTR [esi+0x14],edi
   1b113:	lea    ecx,[ebp-0x1]
   1b116:	call   DWORD PTR ds:0x770f0
   1b11c:	mov    esi,DWORD PTR [ebp-0x8]
   1b11f:	lea    eax,[esi+0xc]
   1b122:	push   eax
   1b123:	call   0x1a63c
   1b128:	push   esi
   1b129:	call   0x10990
   1b12e:	mov    eax,DWORD PTR [ebp+0x8]
   1b131:	dec    DWORD PTR [ebx+0xc]
   1b134:	pop    ecx
   1b135:	mov    ecx,DWORD PTR [ebp+0xc]
   1b138:	pop    edi
   1b139:	pop    esi
   1b13a:	mov    DWORD PTR [eax],ecx
   1b13c:	pop    ebx
   1b13d:	leave  
   1b13e:	ret    0x8
   1b141:	int3   
   1b142:	int3   
   1b143:	int3   
   1b144:	int3   
   1b145:	int3   
   1b146:	mov    edi,edi
   1b148:	push   ebp
   1b149:	mov    ebp,esp
   1b14b:	push   ebx
   1b14c:	push   esi
   1b14d:	push   edi
   1b14e:	mov    edi,DWORD PTR [ebp+0x8]
   1b151:	mov    ebx,ecx
   1b153:	mov    esi,edi
   1b155:	cmp    edi,DWORD PTR ds:0x7828c
   1b15b:	je     0x1b183
   1b15d:	push   DWORD PTR [esi+0x8]
   1b160:	mov    ecx,ebx
   1b162:	call   0x1b146
   1b167:	mov    esi,DWORD PTR [esi]
   1b169:	lea    eax,[edi+0xc]
   1b16c:	push   eax
   1b16d:	call   0x1a63c
   1b172:	push   edi
   1b173:	call   0x10990
   1b178:	pop    ecx
   1b179:	mov    edi,esi
   1b17b:	cmp    esi,DWORD PTR ds:0x7828c
   1b181:	jne    0x1b15d
   1b183:	pop    edi
   1b184:	pop    esi
   1b185:	pop    ebx
   1b186:	pop    ebp
   1b187:	ret    0x4
   1b18a:	int3   
   1b18b:	int3   
   1b18c:	int3   
   1b18d:	int3   
   1b18e:	int3   
   1b18f:	int3   
   1b190:	mov    edi,edi
   1b192:	push   esi
   1b193:	mov    esi,ecx
   1b195:	jmp    0x1b19e
   1b197:	mov    ecx,esi
   1b199:	call   0x1aaee
   1b19e:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1a2:	jne    0x1b197
   1b1a4:	pop    esi
   1b1a5:	ret    
   1b1a6:	int3   
   1b1a7:	int3   
   1b1a8:	int3   
   1b1a9:	int3   
   1b1aa:	int3   
   1b1ab:	int3   
   1b1ac:	mov    edi,edi
   1b1ae:	push   ebp
   1b1af:	mov    ebp,esp
   1b1b1:	push   esi
   1b1b2:	mov    esi,ecx
   1b1b4:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1b8:	je     0x1b1e0
   1b1ba:	mov    ecx,DWORD PTR [esi+0x1c]
   1b1bd:	mov    edx,DWORD PTR [esi+0x18]
   1b1c0:	cmp    ecx,edx
   1b1c2:	je     0x1b1e0
   1b1c4:	push   DWORD PTR [ebp+0x8]
   1b1c7:	lea    eax,[ecx+0x4]
   1b1ca:	mov    DWORD PTR [esi+0x1c],eax
   1b1cd:	push   ecx
   1b1ce:	cmp    eax,edx
   1b1d0:	jne    0x1b1f4
   1b1d2:	call   0x1a388
   1b1d7:	mov    ecx,esi
   1b1d9:	call   0x1ab80
   1b1de:	jmp    0x1b1f9
   1b1e0:	mov    ecx,esi
   1b1e2:	call   0x1ab80
   1b1e7:	mov    eax,DWORD PTR [esi+0x1c]
   1b1ea:	push   DWORD PTR [ebp+0x8]
   1b1ed:	lea    ecx,[eax+0x4]
   1b1f0:	mov    DWORD PTR [esi+0x1c],ecx
   1b1f3:	push   eax
   1b1f4:	call   0x1a388
   1b1f9:	inc    DWORD PTR [esi+0x2c]
   1b1fc:	pop    esi
   1b1fd:	pop    ebp
   1b1fe:	ret    0x4
   1b201:	int3   
   1b202:	int3   
   1b203:	int3   
   1b204:	int3   
   1b205:	int3   
   1b206:	mov    edi,edi
   1b208:	push   ebp
   1b209:	mov    ebp,esp
   1b20b:	push   esi
   1b20c:	push   0x0
   1b20e:	push   0xc
   1b210:	mov    esi,ecx
   1b212:	call   0x132c8
   1b217:	mov    ecx,DWORD PTR [ebp+0x8]
   1b21a:	mov    DWORD PTR [eax],eax
   1b21c:	mov    DWORD PTR [eax+0x4],eax
   1b21f:	and    DWORD PTR [esi+0x8],0x0
   1b223:	mov    DWORD PTR [esi+0x4],eax
   1b226:	mov    ecx,DWORD PTR [ecx+0x4]
   1b229:	mov    edx,DWORD PTR [ecx]
   1b22b:	mov    eax,DWORD PTR [eax]
   1b22d:	push   ecx
   1b22e:	push   edx
   1b22f:	push   eax
   1b230:	mov    ecx,esi
   1b232:	call   0x1ac8c
   1b237:	mov    eax,esi
   1b239:	pop    esi
   1b23a:	pop    ebp
   1b23b:	ret    0x4
   1b23e:	int3   
   1b23f:	int3   
   1b240:	int3   
   1b241:	int3   
   1b242:	int3   
   1b243:	int3   
   1b244:	mov    edi,edi
   1b246:	push   ebp
   1b247:	mov    ebp,esp
   1b249:	push   ecx
   1b24a:	mov    edx,DWORD PTR [ebp+0x8]
   1b24d:	mov    DWORD PTR [ebp-0x4],ecx
   1b250:	cmp    ecx,edx
   1b252:	je     0x1b291
   1b254:	push   ebx
   1b255:	mov    ebx,DWORD PTR [edx+0x4]
   1b258:	push   esi
   1b259:	mov    esi,DWORD PTR [ecx+0x4]
   1b25c:	mov    eax,DWORD PTR [esi]
   1b25e:	push   edi
   1b25f:	mov    edi,DWORD PTR [ebx]
   1b261:	jmp    0x1b271
   1b263:	cmp    edi,ebx
   1b265:	je     0x1b275
   1b267:	mov    edx,DWORD PTR [edi+0x8]
   1b26a:	mov    DWORD PTR [eax+0x8],edx
   1b26d:	mov    eax,DWORD PTR [eax]
   1b26f:	mov    edi,DWORD PTR [edi]
   1b271:	cmp    eax,esi
   1b273:	jne    0x1b263
   1b275:	push   esi
   1b276:	push   eax
   1b277:	lea    eax,[ebp+0x8]
   1b27a:	push   eax
   1b27b:	call   0x1a968
   1b280:	mov    ecx,DWORD PTR [ebp-0x4]
   1b283:	push   ebx
   1b284:	push   edi
   1b285:	push   esi
   1b286:	call   0x1ac8c
   1b28b:	mov    ecx,DWORD PTR [ebp-0x4]
   1b28e:	pop    edi
   1b28f:	pop    esi
   1b290:	pop    ebx
   1b291:	mov    eax,ecx
   1b293:	leave  
   1b294:	ret    0x4
   1b297:	int3   
   1b298:	int3   
   1b299:	int3   
   1b29a:	int3   
   1b29b:	int3   
   1b29c:	mov    edi,edi
   1b29e:	push   ebp
   1b29f:	mov    ebp,esp
   1b2a1:	push   DWORD PTR [ebp+0x8]
   1b2a4:	mov    eax,DWORD PTR [ecx+0x4]
   1b2a7:	push   eax
   1b2a8:	lea    eax,[ebp+0x8]
   1b2ab:	push   eax
   1b2ac:	call   0x1ac4a
   1b2b1:	pop    ebp
   1b2b2:	ret    0x4
   1b2b5:	int3   
   1b2b6:	int3   
   1b2b7:	int3   
   1b2b8:	int3   
   1b2b9:	int3   
   1b2ba:	mov    edi,edi
   1b2bc:	push   ebp
   1b2bd:	mov    ebp,esp
   1b2bf:	push   ecx
   1b2c0:	push   ebx
   1b2c1:	push   esi
   1b2c2:	push   edi
   1b2c3:	mov    edi,ecx
   1b2c5:	mov    eax,DWORD PTR [edi+0x4]
   1b2c8:	mov    esi,DWORD PTR [eax+0x4]
   1b2cb:	mov    ebx,eax
   1b2cd:	mov    al,0x1
   1b2cf:	jmp    0x1b2ea
   1b2d1:	lea    eax,[esi+0xc]
   1b2d4:	push   eax
   1b2d5:	push   DWORD PTR [ebp+0xc]
   1b2d8:	mov    ebx,esi
   1b2da:	call   0x197ae
   1b2df:	test   al,al
   1b2e1:	je     0x1b2e7
   1b2e3:	mov    esi,DWORD PTR [esi]
   1b2e5:	jmp    0x1b2ea
   1b2e7:	mov    esi,DWORD PTR [esi+0x8]
   1b2ea:	cmp    esi,DWORD PTR ds:0x7828c
   1b2f0:	jne    0x1b2d1
   1b2f2:	cmp    BYTE PTR [edi+0x8],0x0
   1b2f6:	je     0x1b313
   1b2f8:	push   DWORD PTR [ebp+0xc]
   1b2fb:	lea    eax,[ebp+0xc]
   1b2fe:	push   ebx
   1b2ff:	push   esi
   1b300:	push   eax
   1b301:	mov    ecx,edi
   1b303:	call   0x1ad72
   1b308:	mov    ecx,DWORD PTR [eax]
   1b30a:	mov    eax,DWORD PTR [ebp+0x8]
   1b30d:	mov    BYTE PTR [eax+0x4],0x1
   1b311:	jmp    0x1b346
   1b313:	mov    DWORD PTR [ebp-0x4],ebx
   1b316:	test   al,al
   1b318:	je     0x1b329
   1b31a:	mov    eax,DWORD PTR [edi+0x4]
   1b31d:	cmp    ebx,DWORD PTR [eax]
   1b31f:	je     0x1b2f8
   1b321:	lea    ecx,[ebp-0x4]
   1b324:	call   0x1a55e
   1b329:	push   DWORD PTR [ebp+0xc]
   1b32c:	mov    eax,DWORD PTR [ebp-0x4]
   1b32f:	add    eax,0xc
   1b332:	push   eax
   1b333:	call   0x197ae
   1b338:	test   al,al
   1b33a:	jne    0x1b2f8
   1b33c:	mov    eax,DWORD PTR [ebp+0x8]
   1b33f:	mov    ecx,DWORD PTR [ebp-0x4]
   1b342:	mov    BYTE PTR [eax+0x4],0x0
   1b346:	pop    edi
   1b347:	pop    esi
   1b348:	mov    DWORD PTR [eax],ecx
   1b34a:	pop    ebx
   1b34b:	leave  
   1b34c:	ret    0x8
   1b34f:	int3   
   1b350:	int3   
   1b351:	int3   
   1b352:	int3   
   1b353:	int3   
   1b354:	mov    edi,edi
   1b356:	push   ebp
   1b357:	mov    ebp,esp
   1b359:	push   ecx
   1b35a:	push   ecx
   1b35b:	push   DWORD PTR [ebp+0x8]
   1b35e:	lea    eax,[ebp-0x8]
   1b361:	push   eax
   1b362:	call   0x1acc4
   1b367:	and    DWORD PTR [ebp+0x8],0x0
   1b36b:	lea    eax,[ebp+0x8]
   1b36e:	push   eax
   1b36f:	push   DWORD PTR [ebp-0x4]
   1b372:	push   DWORD PTR [ebp-0x8]
   1b375:	call   0x1aa6e
   1b37a:	mov    eax,DWORD PTR [ebp+0x8]
   1b37d:	add    esp,0xc
   1b380:	leave  
   1b381:	ret    0x4
   1b384:	int3   
   1b385:	int3   
   1b386:	int3   
   1b387:	int3   
   1b388:	int3   
   1b389:	int3   
   1b38a:	mov    edi,edi
   1b38c:	push   ebp
   1b38d:	mov    ebp,esp
   1b38f:	push   ecx
   1b390:	push   esi
   1b391:	mov    esi,ecx
   1b393:	cmp    DWORD PTR [esi+0xc],0x0
   1b397:	mov    ecx,DWORD PTR [ebp+0xc]
   1b39a:	je     0x1b3d4
   1b39c:	mov    eax,DWORD PTR [esi+0x4]
   1b39f:	cmp    ecx,DWORD PTR [eax]
   1b3a1:	jne    0x1b3d4
   1b3a3:	cmp    DWORD PTR [ebp+0x10],eax
   1b3a6:	jne    0x1b3d4
   1b3a8:	push   DWORD PTR [eax+0x4]
   1b3ab:	mov    ecx,esi
   1b3ad:	call   0x1b146
   1b3b2:	mov    ecx,DWORD PTR ds:0x7828c
   1b3b8:	mov    eax,DWORD PTR [esi+0x4]
   1b3bb:	mov    DWORD PTR [eax+0x4],ecx
   1b3be:	mov    eax,DWORD PTR [esi+0x4]
   1b3c1:	and    DWORD PTR [esi+0xc],0x0
   1b3c5:	mov    DWORD PTR [eax],eax
   1b3c7:	mov    eax,DWORD PTR [esi+0x4]
   1b3ca:	mov    DWORD PTR [eax+0x8],eax
   1b3cd:	mov    eax,DWORD PTR [esi+0x4]
   1b3d0:	mov    ecx,DWORD PTR [eax]
   1b3d2:	jmp    0x1b3f9
   1b3d4:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3d7:	je     0x1b3f9
   1b3d9:	push   edi
   1b3da:	mov    edi,ecx
   1b3dc:	lea    ecx,[ebp+0xc]
   1b3df:	call   0x1a352
   1b3e4:	push   edi
   1b3e5:	lea    eax,[ebp-0x4]
   1b3e8:	push   eax
   1b3e9:	mov    ecx,esi
   1b3eb:	call   0x1aec8
   1b3f0:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3f3:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3f6:	jne    0x1b3da
   1b3f8:	pop    edi
   1b3f9:	mov    eax,DWORD PTR [ebp+0x8]
   1b3fc:	mov    DWORD PTR [eax],ecx
   1b3fe:	pop    esi
   1b3ff:	leave  
   1b400:	ret    0xc
   1b403:	int3   
   1b404:	int3   
   1b405:	int3   
   1b406:	int3   
   1b407:	int3   
   1b408:	mov    edi,edi
   1b40a:	push   ebp
   1b40b:	mov    ebp,esp
   1b40d:	push   esi
   1b40e:	push   DWORD PTR [ebp+0x8]
   1b411:	mov    esi,ecx
   1b413:	mov    ecx,DWORD PTR [esi]
   1b415:	call   0x1b1ac
   1b41a:	mov    eax,esi
   1b41c:	pop    esi
   1b41d:	pop    ebp
   1b41e:	ret    0x4
   1b421:	int3   
   1b422:	int3   
   1b423:	int3   
   1b424:	int3   
   1b425:	int3   
   1b426:	mov    edi,edi
   1b428:	push   ebp
   1b429:	mov    ebp,esp
   1b42b:	push   ecx
   1b42c:	push   esi
   1b42d:	push   edi
   1b42e:	xor    edi,edi
   1b430:	push   edi
   1b431:	push   edi
   1b432:	push   edi
   1b433:	push   edi
   1b434:	mov    esi,0x7825c
   1b439:	push   esi
   1b43a:	call   DWORD PTR ds:0x1f020
   1b440:	test   eax,eax
   1b442:	jl     0x1b466
   1b444:	mov    eax,ds:0x78288
   1b449:	mov    ecx,DWORD PTR ds:0x78280
   1b44f:	add    eax,0x9
   1b452:	mov    DWORD PTR [ebp-0x4],eax
   1b455:	lea    eax,[ebp-0x4]
   1b458:	push   eax
   1b459:	call   0x1b29c
   1b45e:	push   edi
   1b45f:	push   esi
   1b460:	call   DWORD PTR ds:0x1f01c
   1b466:	pop    edi
   1b467:	pop    esi
   1b468:	leave  
   1b469:	ret    
   1b46a:	int3   
   1b46b:	int3   
   1b46c:	int3   
   1b46d:	int3   
   1b46e:	int3   
   1b46f:	int3   
   1b470:	mov    edi,edi
   1b472:	push   ebp
   1b473:	mov    ebp,esp
   1b475:	push   ecx
   1b476:	push   ecx
   1b477:	push   DWORD PTR [ebp+0xc]
   1b47a:	lea    eax,[ebp-0x8]
   1b47d:	push   eax
   1b47e:	call   0x1b2ba
   1b483:	mov    eax,DWORD PTR [ebp+0x8]
   1b486:	mov    ecx,DWORD PTR [ebp-0x8]
   1b489:	mov    DWORD PTR [eax],ecx
   1b48b:	mov    cl,BYTE PTR [ebp-0x4]
   1b48e:	mov    BYTE PTR [eax+0x4],cl
   1b491:	leave  
   1b492:	ret    0x8
   1b495:	int3   
   1b496:	int3   
   1b497:	int3   
   1b498:	int3   
   1b499:	int3   
   1b49a:	mov    edi,edi
   1b49c:	push   ebp
   1b49d:	mov    ebp,esp
   1b49f:	push   ecx
   1b4a0:	push   ecx
   1b4a1:	push   esi
   1b4a2:	push   DWORD PTR [ebp+0x8]
   1b4a5:	lea    eax,[ebp-0x8]
   1b4a8:	push   eax
   1b4a9:	mov    esi,ecx
   1b4ab:	call   0x1acc4
   1b4b0:	and    DWORD PTR [ebp+0x8],0x0
   1b4b4:	lea    eax,[ebp+0x8]
   1b4b7:	push   eax
   1b4b8:	push   DWORD PTR [ebp-0x4]
   1b4bb:	push   DWORD PTR [ebp-0x8]
   1b4be:	call   0x1aa6e
   1b4c3:	add    esp,0xc
   1b4c6:	push   DWORD PTR [ebp-0x4]
   1b4c9:	lea    eax,[ebp-0x4]
   1b4cc:	push   DWORD PTR [ebp-0x8]
   1b4cf:	mov    ecx,esi
   1b4d1:	push   eax
   1b4d2:	call   0x1b38a
   1b4d7:	mov    eax,DWORD PTR [ebp+0x8]
   1b4da:	pop    esi
   1b4db:	leave  
   1b4dc:	ret    0x4
   1b4df:	int3   
   1b4e0:	int3   
   1b4e1:	int3   
   1b4e2:	int3   
   1b4e3:	int3   
   1b4e4:	mov    edi,edi
   1b4e6:	push   ebp
   1b4e7:	mov    ebp,esp
   1b4e9:	jmp    0x1b4fc
   1b4eb:	push   eax
   1b4ec:	lea    ecx,[ebp+0x2c]
   1b4ef:	call   0x1b408
   1b4f4:	lea    ecx,[ebp+0xc]
   1b4f7:	call   0x1a2b4
   1b4fc:	mov    eax,DWORD PTR [ebp+0x14]
   1b4ff:	cmp    eax,DWORD PTR [ebp+0x24]
   1b502:	jne    0x1b4eb
   1b504:	mov    eax,DWORD PTR [ebp+0x8]
   1b507:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b50a:	mov    DWORD PTR [eax],ecx
   1b50c:	pop    ebp
   1b50d:	ret    0x28
   1b510:	int3   
   1b511:	int3   
   1b512:	int3   
   1b513:	int3   
   1b514:	int3   
   1b515:	int3   
   1b516:	mov    edi,edi
   1b518:	push   ebp
   1b519:	mov    ebp,esp
   1b51b:	sub    esp,0x10
   1b51e:	push   0xffffffff
   1b520:	push   DWORD PTR [ebp+0x8]
   1b523:	lea    ecx,[ebp-0x8]
   1b526:	call   0x129ea
   1b52b:	mov    ecx,DWORD PTR ds:0x7827c
   1b531:	lea    eax,[ebp-0x8]
   1b534:	push   eax
   1b535:	lea    eax,[ebp-0x10]
   1b538:	push   eax
   1b539:	call   0x1b470
   1b53e:	push   DWORD PTR [ebp-0x8]
   1b541:	call   0x10990
   1b546:	pop    ecx
   1b547:	leave  
   1b548:	ret    0x4
   1b54b:	int3   
   1b54c:	int3   
   1b54d:	int3   
   1b54e:	int3   
   1b54f:	int3   
   1b550:	mov    edi,edi
   1b552:	push   ebp
   1b553:	mov    ebp,esp
   1b555:	xor    eax,eax
   1b557:	push   ebx
   1b558:	push   esi
   1b559:	push   edi
   1b55a:	mov    ebx,ecx
   1b55c:	mov    DWORD PTR [ebx+0x4],eax
   1b55f:	mov    DWORD PTR [ebx+0x8],eax
   1b562:	mov    DWORD PTR [ebx+0xc],eax
   1b565:	mov    DWORD PTR [ebx+0x10],eax
   1b568:	mov    DWORD PTR [ebx+0x14],eax
   1b56b:	mov    DWORD PTR [ebx+0x18],eax
   1b56e:	mov    DWORD PTR [ebx+0x1c],eax
   1b571:	mov    DWORD PTR [ebx+0x20],eax
   1b574:	mov    DWORD PTR [ebx+0x24],eax
   1b577:	mov    DWORD PTR [ebx+0x28],eax
   1b57a:	mov    DWORD PTR [ebx+0x2c],eax
   1b57d:	mov    eax,DWORD PTR [ebp+0x8]
   1b580:	push   ebx
   1b581:	sub    esp,0x10
   1b584:	mov    edi,esp
   1b586:	lea    esi,[eax+0x14]
   1b589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b58d:	sub    esp,0x10
   1b590:	lea    esi,[eax+0x4]
   1b593:	mov    edi,esp
   1b595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b598:	lea    eax,[ebp+0x8]
   1b59b:	push   eax
   1b59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b59d:	call   0x1b4e4
   1b5a2:	pop    edi
   1b5a3:	pop    esi
   1b5a4:	mov    eax,ebx
   1b5a6:	pop    ebx
   1b5a7:	pop    ebp
   1b5a8:	ret    0x4
   1b5ab:	int3   
   1b5ac:	int3   
   1b5ad:	int3   
   1b5ae:	int3   
   1b5af:	int3   
   1b5b0:	mov    edi,edi
   1b5b2:	push   ebp
   1b5b3:	mov    ebp,esp
   1b5b5:	push   ecx
   1b5b6:	push   ebx
   1b5b7:	push   0x30
   1b5b9:	call   0x11d96
   1b5be:	xor    ebx,ebx
   1b5c0:	pop    ecx
   1b5c1:	cmp    eax,ebx
   1b5c3:	je     0x1b5d7
   1b5c5:	lea    ecx,[ebp-0x1]
   1b5c8:	push   ecx
   1b5c9:	mov    ecx,eax
   1b5cb:	call   0x1a472
   1b5d0:	mov    ds:0x78284,eax
   1b5d5:	jmp    0x1b5dd
   1b5d7:	mov    DWORD PTR ds:0x78284,ebx
   1b5dd:	push   esi
   1b5de:	push   0x10
   1b5e0:	call   0x11d96
   1b5e5:	mov    esi,eax
   1b5e7:	pop    ecx
   1b5e8:	cmp    esi,ebx
   1b5ea:	je     0x1b5fe
   1b5ec:	mov    ecx,esi
   1b5ee:	mov    BYTE PTR [esi+0x8],bl
   1b5f1:	call   0x1acf6
   1b5f6:	mov    DWORD PTR ds:0x7827c,esi
   1b5fc:	jmp    0x1b604
   1b5fe:	mov    DWORD PTR ds:0x7827c,ebx
   1b604:	push   0xc
   1b606:	call   0x11d96
   1b60b:	pop    ecx
   1b60c:	pop    esi
   1b60d:	cmp    eax,ebx
   1b60f:	je     0x1b623
   1b611:	lea    ecx,[ebp-0x1]
   1b614:	push   ecx
   1b615:	mov    ecx,eax
   1b617:	call   0x1ab0a
   1b61c:	mov    ds:0x78280,eax
   1b621:	jmp    0x1b629
   1b623:	mov    DWORD PTR ds:0x78280,ebx
   1b629:	push   ebx
   1b62a:	push   0x7825c
   1b62f:	call   0x11b40
   1b634:	call   eax
   1b636:	mov    DWORD PTR ds:0x78288,0x1
   1b640:	pop    ebx
   1b641:	leave  
   1b642:	ret    
   1b643:	int3   
   1b644:	int3   
   1b645:	int3   
   1b646:	int3   
   1b647:	int3   
   1b648:	push   0x3c
   1b64a:	push   0x772f0
   1b64f:	call   0x1dac8
   1b654:	xor    esi,esi
   1b656:	push   esi
   1b657:	push   esi
   1b658:	push   esi
   1b659:	push   esi
   1b65a:	push   0x7825c
   1b65f:	call   DWORD PTR ds:0x1f020
   1b665:	cmp    eax,esi
   1b667:	jl     0x1b7d7
   1b66d:	mov    DWORD PTR [ebp-0x4],esi
   1b670:	mov    edi,DWORD PTR [ebp+0x8]
   1b673:	push   edi
   1b674:	lea    eax,[ebp-0x24]
   1b677:	push   eax
   1b678:	call   0x1a67e
   1b67d:	cmp    DWORD PTR [eax+0x4],esi
   1b680:	setne  BYTE PTR [ebp-0x19]
   1b684:	push   DWORD PTR [ebp-0x24]
   1b687:	call   0x10990
   1b68c:	pop    ecx
   1b68d:	push   edi
   1b68e:	lea    eax,[ebp-0x2c]
   1b691:	push   eax
   1b692:	call   0x1a6a4
   1b697:	xor    al,al
   1b699:	cmp    DWORD PTR [edi+0x14],esi
   1b69c:	jne    0x1b6b2
   1b69e:	lea    eax,[ebp-0x2c]
   1b6a1:	push   eax
   1b6a2:	mov    ecx,DWORD PTR ds:0x7827c
   1b6a8:	call   0x1b354
   1b6ad:	test   eax,eax
   1b6af:	setne  al
   1b6b2:	test   al,al
   1b6b4:	je     0x1b6c5
   1b6b6:	lea    eax,[ebp-0x2c]
   1b6b9:	push   eax
   1b6ba:	mov    ecx,DWORD PTR ds:0x7827c
   1b6c0:	call   0x1b49a
   1b6c5:	mov    ebx,DWORD PTR ds:0x78284
   1b6cb:	cmp    DWORD PTR [ebx+0x2c],esi
   1b6ce:	jbe    0x1b72e
   1b6d0:	mov    eax,ds:0x77f1c
   1b6d5:	mov    DWORD PTR [ebp-0x20],eax
   1b6d8:	cmp    eax,esi
   1b6da:	ja     0x1b6e3
   1b6dc:	mov    DWORD PTR [ebp-0x20],0x1
   1b6e3:	mov    eax,DWORD PTR [ebp-0x20]
   1b6e6:	cmp    DWORD PTR [ebx+0x2c],eax
   1b6e9:	jb     0x1b72e
   1b6eb:	lea    esi,[ebx+0x4]
   1b6ee:	lea    edi,[ebp-0x3c]
   1b6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6f5:	mov    eax,DWORD PTR [ebp-0x34]
   1b6f8:	mov    eax,DWORD PTR [eax]
   1b6fa:	mov    eax,DWORD PTR [eax+0xc]
   1b6fd:	xor    ecx,ecx
   1b6ff:	add    eax,0x9c40
   1b704:	push   ecx
   1b705:	pop    esi
   1b706:	adc    ecx,esi
   1b708:	mov    edx,DWORD PTR [ebp+0x8]
   1b70b:	mov    edx,DWORD PTR [edx+0xc]
   1b70e:	cmp    ecx,esi
   1b710:	ja     0x1b72e
   1b712:	jb     0x1b718
   1b714:	cmp    eax,edx
   1b716:	jae    0x1b72e
   1b718:	mov    ecx,ebx
   1b71a:	call   0x1a4a0
   1b71f:	mov    ecx,ebx
   1b721:	call   0x1aaee
   1b726:	mov    ebx,DWORD PTR ds:0x78284
   1b72c:	jmp    0x1b6e3
   1b72e:	push   DWORD PTR [ebp+0x8]
   1b731:	lea    eax,[ebp-0x24]
   1b734:	push   eax
   1b735:	call   0x1a6a4
   1b73a:	push   eax
   1b73b:	lea    eax,[ebp-0x3c]
   1b73e:	push   eax
   1b73f:	call   0x1a6f0
   1b744:	push   DWORD PTR [ebp-0x24]
   1b747:	call   0x10990
   1b74c:	pop    ecx
   1b74d:	mov    ebx,DWORD PTR ds:0x78284
   1b753:	lea    esi,[ebx+0x14]
   1b756:	lea    edi,[ebp-0x4c]
   1b759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b75d:	mov    esi,DWORD PTR [ebp-0x34]
   1b760:	cmp    esi,DWORD PTR [ebp-0x44]
   1b763:	je     0x1b797
   1b765:	mov    eax,DWORD PTR [esi]
   1b767:	mov    BYTE PTR [eax+0x1c],0x0
   1b76b:	mov    eax,DWORD PTR [esi]
   1b76d:	cmp    BYTE PTR [eax+0x24],0x0
   1b771:	jne    0x1b781
   1b773:	mov    BYTE PTR [eax+0x24],0x1
   1b777:	mov    eax,DWORD PTR [esi]
   1b779:	push   DWORD PTR [eax+0x8]
   1b77c:	call   0x1a41a
   1b781:	mov    eax,DWORD PTR [esi]
   1b783:	mov    ecx,DWORD PTR [eax+0x8]
   1b786:	mov    eax,DWORD PTR [ebp+0x8]
   1b789:	mov    DWORD PTR [eax+0x8],ecx
   1b78c:	mov    ecx,DWORD PTR [esi]
   1b78e:	mov    ecx,DWORD PTR [ecx+0x20]
   1b791:	inc    ecx
   1b792:	mov    DWORD PTR [eax+0x20],ecx
   1b795:	jmp    0x1b79a
   1b797:	mov    eax,DWORD PTR [ebp+0x8]
   1b79a:	mov    cl,BYTE PTR [ebp-0x19]
   1b79d:	mov    BYTE PTR [eax+0x1c],cl
   1b7a0:	lea    eax,[ebp+0x8]
   1b7a3:	push   eax
   1b7a4:	mov    ecx,ebx
   1b7a6:	call   0x1b1ac
   1b7ab:	inc    DWORD PTR ds:0x78288
   1b7b1:	push   DWORD PTR [ebp-0x2c]
   1b7b4:	call   0x10990
   1b7b9:	pop    ecx
   1b7ba:	jmp    0x1b7c3
   1b7bc:	xor    eax,eax
   1b7be:	inc    eax
   1b7bf:	ret    
   1b7c0:	mov    esp,DWORD PTR [ebp-0x18]
   1b7c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b7ca:	push   0x0
   1b7cc:	push   0x7825c
   1b7d1:	call   DWORD PTR ds:0x1f01c
   1b7d7:	call   0x1db0d
   1b7dc:	ret    0x4
   1b7df:	int3   
   1b7e0:	int3   
   1b7e1:	int3   
   1b7e2:	int3   
   1b7e3:	int3   
   1b7e4:	push   0x48
   1b7e6:	push   0x77310
   1b7eb:	call   0x1dac8
   1b7f0:	xor    ebx,ebx
   1b7f2:	push   ebx
   1b7f3:	push   ebx
   1b7f4:	push   ebx
   1b7f5:	push   ebx
   1b7f6:	push   0x7825c
   1b7fb:	call   DWORD PTR ds:0x1f020
   1b801:	cmp    eax,ebx
   1b803:	jl     0x1b8b1
   1b809:	mov    DWORD PTR [ebp-0x4],ebx
   1b80c:	push   DWORD PTR ds:0x78280
   1b812:	lea    ecx,[ebp-0x28]
   1b815:	call   0x1b206
   1b81a:	mov    BYTE PTR [ebp-0x19],bl
   1b81d:	cmp    DWORD PTR [ebp-0x20],ebx
   1b820:	je     0x1b840
   1b822:	mov    eax,DWORD PTR [ebp-0x24]
   1b825:	mov    eax,DWORD PTR [eax]
   1b827:	mov    eax,DWORD PTR [eax+0x8]
   1b82a:	cmp    eax,DWORD PTR ds:0x78288
   1b830:	ja     0x1b840
   1b832:	mov    BYTE PTR [ebp-0x19],0x1
   1b836:	lea    ecx,[ebp-0x28]
   1b839:	call   0x1ab64
   1b83e:	jmp    0x1b81d
   1b840:	cmp    BYTE PTR [ebp-0x19],bl
   1b843:	je     0x1b87b
   1b845:	push   DWORD PTR ds:0x78284
   1b84b:	lea    ecx,[ebp-0x58]
   1b84e:	call   0x1b550
   1b853:	mov    esi,DWORD PTR [ebp+0x8]
   1b856:	push   esi
   1b857:	lea    eax,[ebp-0x58]
   1b85a:	push   eax
   1b85b:	call   0x1a78e
   1b860:	cmp    DWORD PTR [esi],ebx
   1b862:	jne    0x1b873
   1b864:	lea    eax,[ebp-0x28]
   1b867:	push   eax
   1b868:	mov    ecx,DWORD PTR ds:0x78280
   1b86e:	call   0x1b244
   1b873:	lea    ecx,[ebp-0x58]
   1b876:	call   0x1b190
   1b87b:	lea    ecx,[ebp-0x28]
   1b87e:	call   0x1ab30
   1b883:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b88a:	jmp    0x1b8a5
   1b88c:	xor    eax,eax
   1b88e:	inc    eax
   1b88f:	ret    
   1b890:	mov    esp,DWORD PTR [ebp-0x18]
   1b893:	mov    eax,DWORD PTR [ebp+0x8]
   1b896:	mov    DWORD PTR [eax],0x2
   1b89c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8a3:	xor    ebx,ebx
   1b8a5:	push   ebx
   1b8a6:	push   0x7825c
   1b8ab:	call   DWORD PTR ds:0x1f01c
   1b8b1:	call   0x1db0d
   1b8b6:	ret    0x4
   1b8b9:	int3   
   1b8ba:	int3   
   1b8bb:	int3   
   1b8bc:	int3   
   1b8bd:	int3   
   1b8be:	mov    edi,edi
   1b8c0:	push   ebp
   1b8c1:	mov    ebp,esp
   1b8c3:	mov    ecx,DWORD PTR [ebp+0x8]
   1b8c6:	xor    edx,edx
   1b8c8:	cmp    ecx,edx
   1b8ca:	je     0x1b91a
   1b8cc:	mov    eax,DWORD PTR [ecx+0x1c]
   1b8cf:	cmp    eax,edx
   1b8d1:	je     0x1b91a
   1b8d3:	mov    DWORD PTR [eax+0x1c],edx
   1b8d6:	mov    DWORD PTR [ecx+0x14],edx
   1b8d9:	mov    DWORD PTR [ecx+0x8],edx
   1b8dc:	mov    DWORD PTR [ecx+0x18],edx
   1b8df:	mov    DWORD PTR [ecx+0x30],0x1
   1b8e6:	lea    ecx,[eax+0x530]
   1b8ec:	mov    DWORD PTR [eax],edx
   1b8ee:	mov    DWORD PTR [eax+0x4],edx
   1b8f1:	mov    DWORD PTR [eax+0xc],edx
   1b8f4:	mov    DWORD PTR [eax+0x14],0x8000
   1b8fb:	mov    DWORD PTR [eax+0x20],edx
   1b8fe:	mov    DWORD PTR [eax+0x28],edx
   1b901:	mov    DWORD PTR [eax+0x2c],edx
   1b904:	mov    DWORD PTR [eax+0x30],edx
   1b907:	mov    DWORD PTR [eax+0x38],edx
   1b90a:	mov    DWORD PTR [eax+0x3c],edx
   1b90d:	mov    DWORD PTR [eax+0x6c],ecx
   1b910:	mov    DWORD PTR [eax+0x50],ecx
   1b913:	mov    DWORD PTR [eax+0x4c],ecx
   1b916:	xor    eax,eax
   1b918:	jmp    0x1b91d
   1b91a:	push   0xfffffffe
   1b91c:	pop    eax
   1b91d:	pop    ebp
   1b91e:	ret    0x4
   1b921:	int3   
   1b922:	int3   
   1b923:	int3   
   1b924:	int3   
   1b925:	int3   
   1b926:	mov    edi,edi
   1b928:	push   ebp
   1b929:	mov    ebp,esp
   1b92b:	mov    eax,DWORD PTR [ebp+0x10]
   1b92e:	push   esi
   1b92f:	push   edi
   1b930:	xor    edi,edi
   1b932:	cmp    eax,edi
   1b934:	je     0x1b9cf
   1b93a:	cmp    BYTE PTR [eax],0x31
   1b93d:	jne    0x1b9cf
   1b943:	cmp    DWORD PTR [ebp+0x14],0x38
   1b947:	jne    0x1b9cf
   1b94d:	mov    esi,DWORD PTR [ebp+0x8]
   1b950:	cmp    esi,edi
   1b952:	jne    0x1b958
   1b954:	push   0xfffffffe
   1b956:	jmp    0x1b9d1
   1b958:	mov    DWORD PTR [esi+0x18],edi
   1b95b:	cmp    DWORD PTR [esi+0x20],edi
   1b95e:	jne    0x1b96a
   1b960:	mov    DWORD PTR [esi+0x20],0x1cd1e
   1b967:	mov    DWORD PTR [esi+0x28],edi
   1b96a:	cmp    DWORD PTR [esi+0x24],edi
   1b96d:	jne    0x1b976
   1b96f:	mov    DWORD PTR [esi+0x24],0x1cd3a
   1b976:	push   0x2530
   1b97b:	push   0x1
   1b97d:	push   DWORD PTR [esi+0x28]
   1b980:	call   DWORD PTR [esi+0x20]
   1b983:	cmp    eax,edi
   1b985:	jne    0x1b98b
   1b987:	push   0xfffffffc
   1b989:	jmp    0x1b9d1
   1b98b:	mov    ecx,DWORD PTR [ebp+0xc]
   1b98e:	cmp    ecx,edi
   1b990:	mov    DWORD PTR [esi+0x1c],eax
   1b993:	jge    0x1b99c
   1b995:	mov    DWORD PTR [eax+0x8],edi
   1b998:	neg    ecx
   1b99a:	jmp    0x1b9ad
   1b99c:	mov    edx,ecx
   1b99e:	sar    edx,0x4
   1b9a1:	inc    edx
   1b9a2:	cmp    ecx,0x30
   1b9a5:	mov    DWORD PTR [eax+0x8],edx
   1b9a8:	jge    0x1b9ad
   1b9aa:	and    ecx,0xf
   1b9ad:	lea    edx,[ecx-0x8]
   1b9b0:	cmp    edx,0x7
   1b9b3:	ja     0x1b9c3
   1b9b5:	push   esi
   1b9b6:	mov    DWORD PTR [eax+0x24],ecx
   1b9b9:	mov    DWORD PTR [eax+0x34],edi
   1b9bc:	call   0x1b8be
   1b9c1:	jmp    0x1b9d2
   1b9c3:	push   eax
   1b9c4:	push   DWORD PTR [esi+0x28]
   1b9c7:	call   DWORD PTR [esi+0x24]
   1b9ca:	mov    DWORD PTR [esi+0x1c],edi
   1b9cd:	jmp    0x1b954
   1b9cf:	push   0xfffffffa
   1b9d1:	pop    eax
   1b9d2:	pop    edi
   1b9d3:	pop    esi
   1b9d4:	pop    ebp
   1b9d5:	ret    0x10
   1b9d8:	int3   
   1b9d9:	int3   
   1b9da:	int3   
   1b9db:	int3   
   1b9dc:	int3   
   1b9dd:	int3   
   1b9de:	mov    edi,edi
   1b9e0:	push   ebp
   1b9e1:	mov    ebp,esp
   1b9e3:	push   ecx
   1b9e4:	push   ebx
   1b9e5:	push   esi
   1b9e6:	mov    esi,DWORD PTR [edi+0x1c]
   1b9e9:	cmp    DWORD PTR [esi+0x34],0x0
   1b9ed:	mov    ebx,eax
   1b9ef:	jne    0x1ba0f
   1b9f1:	mov    ecx,DWORD PTR [esi+0x24]
   1b9f4:	xor    eax,eax
   1b9f6:	inc    eax
   1b9f7:	shl    eax,cl
   1b9f9:	push   0x1
   1b9fb:	push   eax
   1b9fc:	push   DWORD PTR [edi+0x28]
   1b9ff:	call   DWORD PTR [edi+0x20]
   1ba02:	mov    DWORD PTR [esi+0x34],eax
   1ba05:	test   eax,eax
   1ba07:	jne    0x1ba0f
   1ba09:	inc    eax
   1ba0a:	jmp    0x1bab1
   1ba0f:	xor    eax,eax
   1ba11:	cmp    DWORD PTR [esi+0x28],eax
   1ba14:	jne    0x1ba27
   1ba16:	mov    ecx,DWORD PTR [esi+0x24]
   1ba19:	xor    edx,edx
   1ba1b:	inc    edx
   1ba1c:	shl    edx,cl
   1ba1e:	mov    DWORD PTR [esi+0x30],eax
   1ba21:	mov    DWORD PTR [esi+0x2c],eax
   1ba24:	mov    DWORD PTR [esi+0x28],edx
   1ba27:	sub    ebx,DWORD PTR [edi+0x10]
   1ba2a:	mov    eax,DWORD PTR [esi+0x28]
   1ba2d:	cmp    ebx,eax
   1ba2f:	jb     0x1ba49
   1ba31:	mov    ecx,DWORD PTR [edi+0xc]
   1ba34:	push   eax
   1ba35:	sub    ecx,eax
   1ba37:	push   ecx
   1ba38:	push   DWORD PTR [esi+0x34]
   1ba3b:	call   0x1da96
   1ba40:	add    esp,0xc
   1ba43:	and    DWORD PTR [esi+0x30],0x0
   1ba47:	jmp    0x1ba8a
   1ba49:	sub    eax,DWORD PTR [esi+0x30]
   1ba4c:	mov    DWORD PTR [ebp-0x4],eax
   1ba4f:	cmp    eax,ebx
   1ba51:	jbe    0x1ba56
   1ba53:	mov    DWORD PTR [ebp-0x4],ebx
   1ba56:	mov    eax,DWORD PTR [edi+0xc]
   1ba59:	push   DWORD PTR [ebp-0x4]
   1ba5c:	sub    eax,ebx
   1ba5e:	push   eax
   1ba5f:	mov    eax,DWORD PTR [esi+0x34]
   1ba62:	add    eax,DWORD PTR [esi+0x30]
   1ba65:	push   eax
   1ba66:	call   0x1da96
   1ba6b:	mov    eax,DWORD PTR [ebp-0x4]
   1ba6e:	add    esp,0xc
   1ba71:	sub    ebx,eax
   1ba73:	je     0x1ba92
   1ba75:	mov    eax,DWORD PTR [edi+0xc]
   1ba78:	push   ebx
   1ba79:	sub    eax,ebx
   1ba7b:	push   eax
   1ba7c:	push   DWORD PTR [esi+0x34]
   1ba7f:	call   0x1da96
   1ba84:	add    esp,0xc
   1ba87:	mov    DWORD PTR [esi+0x30],ebx
   1ba8a:	mov    eax,DWORD PTR [esi+0x28]
   1ba8d:	mov    DWORD PTR [esi+0x2c],eax
   1ba90:	jmp    0x1baaf
   1ba92:	add    DWORD PTR [esi+0x30],eax
   1ba95:	mov    ecx,DWORD PTR [esi+0x30]
   1ba98:	mov    edx,DWORD PTR [esi+0x28]
   1ba9b:	cmp    ecx,edx
   1ba9d:	jne    0x1baa3
   1ba9f:	and    DWORD PTR [esi+0x30],0x0
   1baa3:	mov    ecx,DWORD PTR [esi+0x2c]
   1baa6:	cmp    ecx,edx
   1baa8:	jae    0x1baaf
   1baaa:	add    ecx,eax
   1baac:	mov    DWORD PTR [esi+0x2c],ecx
   1baaf:	xor    eax,eax
   1bab1:	pop    esi
   1bab2:	pop    ebx
   1bab3:	leave  
   1bab4:	ret    
   1bab5:	int3   
   1bab6:	int3   
   1bab7:	int3   
   1bab8:	int3   
   1bab9:	int3   
   1baba:	mov    edi,edi
   1babc:	push   ebp
   1babd:	mov    ebp,esp
   1babf:	mov    edx,DWORD PTR [ebp+0x8]
   1bac2:	sub    esp,0x2c
   1bac5:	push   ebx
   1bac6:	xor    eax,eax
   1bac8:	push   esi
   1bac9:	push   edi
   1baca:	cmp    edx,eax
   1bacc:	je     0x1bb1c
   1bace:	mov    esi,DWORD PTR [edx+0x1c]
   1bad1:	cmp    esi,eax
   1bad3:	je     0x1bb1c
   1bad5:	cmp    DWORD PTR [edx+0xc],eax
   1bad8:	je     0x1bb1c
   1bada:	cmp    DWORD PTR [edx],eax
   1badc:	jne    0x1bae3
   1bade:	cmp    DWORD PTR [edx+0x4],eax
   1bae1:	jne    0x1bb1c
   1bae3:	cmp    DWORD PTR [esi],0xb
   1bae6:	jne    0x1baee
   1bae8:	mov    DWORD PTR [esi],0xc
   1baee:	mov    eax,DWORD PTR [edx+0xc]
   1baf1:	mov    ecx,DWORD PTR [edx+0x10]
   1baf4:	and    DWORD PTR [ebp-0x24],0x0
   1baf8:	mov    ebx,DWORD PTR [esi+0x38]
   1bafb:	mov    edi,DWORD PTR [esi+0x3c]
   1bafe:	mov    DWORD PTR [ebp-0x18],eax
   1bb01:	mov    eax,DWORD PTR [edx]
   1bb03:	mov    DWORD PTR [ebp-0x4],eax
   1bb06:	mov    eax,DWORD PTR [edx+0x4]
   1bb09:	mov    DWORD PTR [ebp-0x8],eax
   1bb0c:	mov    DWORD PTR [ebp-0x2c],eax
   1bb0f:	mov    eax,DWORD PTR [esi]
   1bb11:	mov    DWORD PTR [ebp-0x10],ecx
   1bb14:	mov    DWORD PTR [ebp-0x1c],ecx
   1bb17:	cmp    eax,0x1c
   1bb1a:	jbe    0x1bb29
   1bb1c:	push   0xfffffffe
   1bb1e:	pop    eax
   1bb1f:	pop    edi
   1bb20:	pop    esi
   1bb21:	pop    ebx
   1bb22:	leave  
   1bb23:	ret    0x8
   1bb26:	mov    edx,DWORD PTR [ebp+0x8]
   1bb29:	jmp    DWORD PTR [eax*4+0x1cc5e]
   1bb30:	mov    eax,DWORD PTR [esi+0x8]
   1bb33:	test   eax,eax
   1bb35:	jne    0x1bb61
   1bb37:	mov    DWORD PTR [esi],0xc
   1bb3d:	jmp    0x1cb2f
   1bb42:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb46:	je     0x1cb7d
   1bb4c:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb4f:	movzx  edx,BYTE PTR [ecx]
   1bb52:	dec    DWORD PTR [ebp-0x8]
   1bb55:	mov    ecx,edi
   1bb57:	shl    edx,cl
   1bb59:	add    ebx,edx
   1bb5b:	inc    DWORD PTR [ebp-0x4]
   1bb5e:	add    edi,0x8
   1bb61:	cmp    edi,0x10
   1bb64:	jb     0x1bb42
   1bb66:	test   al,0x2
   1bb68:	je     0x1bba5
   1bb6a:	cmp    ebx,0x8b1f
   1bb70:	jne    0x1bba5
   1bb72:	xor    edi,edi
   1bb74:	push   edi
   1bb75:	push   edi
   1bb76:	push   edi
   1bb77:	call   0x1d9e0
   1bb7c:	mov    DWORD PTR [esi+0x18],eax
   1bb7f:	push   0x2
   1bb81:	lea    eax,[ebp-0x14]
   1bb84:	push   eax
   1bb85:	mov    BYTE PTR [ebp-0x14],0x1f
   1bb89:	mov    BYTE PTR [ebp-0x13],0x8b
   1bb8d:	push   DWORD PTR [esi+0x18]
   1bb90:	call   0x1d9e0
   1bb95:	mov    DWORD PTR [esi+0x18],eax
   1bb98:	xor    ebx,ebx
   1bb9a:	mov    DWORD PTR [esi],0x1
   1bba0:	jmp    0x1cb2f
   1bba5:	mov    eax,DWORD PTR [esi+0x20]
   1bba8:	and    DWORD PTR [esi+0x10],0x0
   1bbac:	test   eax,eax
   1bbae:	je     0x1bbb4
   1bbb0:	or     DWORD PTR [eax+0x30],0xffffffff
   1bbb4:	test   BYTE PTR [esi+0x8],0x1
   1bbb8:	je     0x1bc3e
   1bbbe:	movzx  eax,bl
   1bbc1:	shl    eax,0x8
   1bbc4:	mov    ecx,ebx
   1bbc6:	shr    ecx,0x8
   1bbc9:	add    eax,ecx
   1bbcb:	push   0x1f
   1bbcd:	xor    edx,edx
   1bbcf:	pop    ecx
   1bbd0:	div    ecx
   1bbd2:	test   edx,edx
   1bbd4:	jne    0x1bc3e
   1bbd6:	mov    eax,ebx
   1bbd8:	and    al,0xf
   1bbda:	cmp    al,0x8
   1bbdc:	je     0x1bbed
   1bbde:	mov    eax,DWORD PTR [ebp+0x8]
   1bbe1:	mov    DWORD PTR [eax+0x18],0x1ee02
   1bbe8:	jmp    0x1cb29
   1bbed:	shr    ebx,0x4
   1bbf0:	mov    ecx,ebx
   1bbf2:	and    ecx,0xf
   1bbf5:	add    ecx,0x8
   1bbf8:	sub    edi,0x4
   1bbfb:	cmp    ecx,DWORD PTR [esi+0x24]
   1bbfe:	jbe    0x1bc0f
   1bc00:	mov    eax,DWORD PTR [ebp+0x8]
   1bc03:	mov    DWORD PTR [eax+0x18],0x1edee
   1bc0a:	jmp    0x1cb29
   1bc0f:	xor    eax,eax
   1bc11:	xor    edi,edi
   1bc13:	inc    eax
   1bc14:	push   edi
   1bc15:	shl    eax,cl
   1bc17:	push   edi
   1bc18:	push   edi
   1bc19:	mov    DWORD PTR [esi+0x14],eax
   1bc1c:	call   0x1d53e
   1bc21:	mov    ecx,DWORD PTR [ebp+0x8]
   1bc24:	shr    ebx,0x8
   1bc27:	not    ebx
   1bc29:	and    ebx,0x2
   1bc2c:	or     ebx,0x9
   1bc2f:	mov    DWORD PTR [esi+0x18],eax
   1bc32:	mov    DWORD PTR [ecx+0x30],eax
   1bc35:	mov    DWORD PTR [esi],ebx
   1bc37:	xor    ebx,ebx
   1bc39:	jmp    0x1cb2f
   1bc3e:	mov    eax,DWORD PTR [ebp+0x8]
   1bc41:	mov    DWORD PTR [eax+0x18],0x1edd6
   1bc48:	jmp    0x1cb29
   1bc4d:	cmp    edi,0x10
   1bc50:	jae    0x1bc79
   1bc52:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc56:	je     0x1cb7d
   1bc5c:	mov    eax,DWORD PTR [ebp-0x4]
   1bc5f:	movzx  eax,BYTE PTR [eax]
   1bc62:	dec    DWORD PTR [ebp-0x8]
   1bc65:	mov    ecx,edi
   1bc67:	shl    eax,cl
   1bc69:	add    edi,0x8
   1bc6c:	add    ebx,eax
   1bc6e:	inc    DWORD PTR [ebp-0x4]
   1bc71:	cmp    edi,0x10
   1bc74:	jb     0x1bc52
   1bc76:	mov    edx,DWORD PTR [ebp+0x8]
   1bc79:	mov    DWORD PTR [esi+0x10],ebx
   1bc7c:	cmp    bl,0x8
   1bc7f:	je     0x1bc8d
   1bc81:	mov    DWORD PTR [edx+0x18],0x1ee02
   1bc88:	jmp    0x1cb29
   1bc8d:	test   ebx,0xe000
   1bc93:	je     0x1bca1
   1bc95:	mov    DWORD PTR [edx+0x18],0x1edbc
   1bc9c:	jmp    0x1cb29
   1bca1:	mov    eax,DWORD PTR [esi+0x20]
   1bca4:	test   eax,eax
   1bca6:	je     0x1bcb2
   1bca8:	mov    ecx,ebx
   1bcaa:	shr    ecx,0x8
   1bcad:	and    ecx,0x1
   1bcb0:	mov    DWORD PTR [eax],ecx
   1bcb2:	test   DWORD PTR [esi+0x10],0x200
   1bcb9:	je     0x1bcd8
   1bcbb:	mov    BYTE PTR [ebp-0x14],bl
   1bcbe:	push   0x2
   1bcc0:	lea    eax,[ebp-0x14]
   1bcc3:	shr    ebx,0x8
   1bcc6:	push   eax
   1bcc7:	mov    BYTE PTR [ebp-0x13],bl
   1bcca:	push   DWORD PTR [esi+0x18]
   1bccd:	call   0x1d9e0
   1bcd2:	mov    edx,DWORD PTR [ebp+0x8]
   1bcd5:	mov    DWORD PTR [esi+0x18],eax
   1bcd8:	xor    ebx,ebx
   1bcda:	xor    edi,edi
   1bcdc:	mov    DWORD PTR [esi],0x2
   1bce2:	cmp    edi,0x20
   1bce5:	jae    0x1bd0e
   1bce7:	cmp    DWORD PTR [ebp-0x8],0x0
   1bceb:	je     0x1cb7d
   1bcf1:	mov    eax,DWORD PTR [ebp-0x4]
   1bcf4:	movzx  eax,BYTE PTR [eax]
   1bcf7:	dec    DWORD PTR [ebp-0x8]
   1bcfa:	mov    ecx,edi
   1bcfc:	shl    eax,cl
   1bcfe:	add    edi,0x8
   1bd01:	add    ebx,eax
   1bd03:	inc    DWORD PTR [ebp-0x4]
   1bd06:	cmp    edi,0x20
   1bd09:	jb     0x1bce7
   1bd0b:	mov    edx,DWORD PTR [ebp+0x8]
   1bd0e:	mov    eax,DWORD PTR [esi+0x20]
   1bd11:	test   eax,eax
   1bd13:	je     0x1bd18
   1bd15:	mov    DWORD PTR [eax+0x4],ebx
   1bd18:	test   DWORD PTR [esi+0x10],0x200
   1bd1f:	je     0x1bd4e
   1bd21:	mov    eax,ebx
   1bd23:	shr    eax,0x8
   1bd26:	mov    BYTE PTR [ebp-0x13],al
   1bd29:	mov    eax,ebx
   1bd2b:	shr    eax,0x10
   1bd2e:	mov    BYTE PTR [ebp-0x12],al
   1bd31:	mov    BYTE PTR [ebp-0x14],bl
   1bd34:	push   0x4
   1bd36:	lea    eax,[ebp-0x14]
   1bd39:	shr    ebx,0x18
   1bd3c:	push   eax
   1bd3d:	mov    BYTE PTR [ebp-0x11],bl
   1bd40:	push   DWORD PTR [esi+0x18]
   1bd43:	call   0x1d9e0
   1bd48:	mov    edx,DWORD PTR [ebp+0x8]
   1bd4b:	mov    DWORD PTR [esi+0x18],eax
   1bd4e:	xor    ebx,ebx
   1bd50:	xor    edi,edi
   1bd52:	mov    DWORD PTR [esi],0x3
   1bd58:	cmp    edi,0x10
   1bd5b:	jae    0x1bd84
   1bd5d:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd61:	je     0x1cb7d
   1bd67:	mov    eax,DWORD PTR [ebp-0x4]
   1bd6a:	movzx  eax,BYTE PTR [eax]
   1bd6d:	dec    DWORD PTR [ebp-0x8]
   1bd70:	mov    ecx,edi
   1bd72:	shl    eax,cl
   1bd74:	add    edi,0x8
   1bd77:	add    ebx,eax
   1bd79:	inc    DWORD PTR [ebp-0x4]
   1bd7c:	cmp    edi,0x10
   1bd7f:	jb     0x1bd5d
   1bd81:	mov    edx,DWORD PTR [ebp+0x8]
   1bd84:	mov    eax,DWORD PTR [esi+0x20]
   1bd87:	test   eax,eax
   1bd89:	je     0x1bda1
   1bd8b:	mov    ecx,ebx
   1bd8d:	and    ecx,0xff
   1bd93:	mov    DWORD PTR [eax+0x8],ecx
   1bd96:	mov    ecx,DWORD PTR [esi+0x20]
   1bd99:	mov    eax,ebx
   1bd9b:	shr    eax,0x8
   1bd9e:	mov    DWORD PTR [ecx+0xc],eax
   1bda1:	test   DWORD PTR [esi+0x10],0x200
   1bda8:	je     0x1bdc7
   1bdaa:	mov    BYTE PTR [ebp-0x14],bl
   1bdad:	push   0x2
   1bdaf:	lea    eax,[ebp-0x14]
   1bdb2:	shr    ebx,0x8
   1bdb5:	push   eax
   1bdb6:	mov    BYTE PTR [ebp-0x13],bl
   1bdb9:	push   DWORD PTR [esi+0x18]
   1bdbc:	call   0x1d9e0
   1bdc1:	mov    edx,DWORD PTR [ebp+0x8]
   1bdc4:	mov    DWORD PTR [esi+0x18],eax
   1bdc7:	xor    ebx,ebx
   1bdc9:	xor    edi,edi
   1bdcb:	mov    DWORD PTR [esi],0x4
   1bdd1:	test   DWORD PTR [esi+0x10],0x400
   1bdd8:	je     0x1be3f
   1bdda:	cmp    edi,0x10
   1bddd:	jae    0x1be06
   1bddf:	cmp    DWORD PTR [ebp-0x8],0x0
   1bde3:	je     0x1cb7d
   1bde9:	mov    eax,DWORD PTR [ebp-0x4]
   1bdec:	movzx  eax,BYTE PTR [eax]
   1bdef:	dec    DWORD PTR [ebp-0x8]
   1bdf2:	mov    ecx,edi
   1bdf4:	shl    eax,cl
   1bdf6:	add    edi,0x8
   1bdf9:	add    ebx,eax
   1bdfb:	inc    DWORD PTR [ebp-0x4]
   1bdfe:	cmp    edi,0x10
   1be01:	jb     0x1bddf
   1be03:	mov    edx,DWORD PTR [ebp+0x8]
   1be06:	mov    eax,DWORD PTR [esi+0x20]
   1be09:	mov    DWORD PTR [esi+0x40],ebx
   1be0c:	test   eax,eax
   1be0e:	je     0x1be13
   1be10:	mov    DWORD PTR [eax+0x14],ebx
   1be13:	test   DWORD PTR [esi+0x10],0x200
   1be1a:	je     0x1be39
   1be1c:	mov    BYTE PTR [ebp-0x14],bl
   1be1f:	push   0x2
   1be21:	lea    eax,[ebp-0x14]
   1be24:	shr    ebx,0x8
   1be27:	push   eax
   1be28:	mov    BYTE PTR [ebp-0x13],bl
   1be2b:	push   DWORD PTR [esi+0x18]
   1be2e:	call   0x1d9e0
   1be33:	mov    edx,DWORD PTR [ebp+0x8]
   1be36:	mov    DWORD PTR [esi+0x18],eax
   1be39:	xor    ebx,ebx
   1be3b:	xor    edi,edi
   1be3d:	jmp    0x1be4a
   1be3f:	mov    eax,DWORD PTR [esi+0x20]
   1be42:	test   eax,eax
   1be44:	je     0x1be4a
   1be46:	and    DWORD PTR [eax+0x10],0x0
   1be4a:	mov    DWORD PTR [esi],0x5
   1be50:	test   DWORD PTR [esi+0x10],0x400
   1be57:	je     0x1bee1
   1be5d:	mov    edx,DWORD PTR [esi+0x40]
   1be60:	mov    eax,DWORD PTR [ebp-0x8]
   1be63:	mov    DWORD PTR [ebp-0xc],edx
   1be66:	cmp    edx,eax
   1be68:	jbe    0x1be6d
   1be6a:	mov    DWORD PTR [ebp-0xc],eax
   1be6d:	cmp    DWORD PTR [ebp-0xc],0x0
   1be71:	je     0x1bed4
   1be73:	mov    ecx,DWORD PTR [esi+0x20]
   1be76:	test   ecx,ecx
   1be78:	je     0x1beae
   1be7a:	mov    eax,DWORD PTR [ecx+0x10]
   1be7d:	mov    DWORD PTR [ebp-0x28],eax
   1be80:	test   eax,eax
   1be82:	je     0x1beae
   1be84:	mov    eax,DWORD PTR [ecx+0x14]
   1be87:	mov    ecx,DWORD PTR [ecx+0x18]
   1be8a:	sub    eax,edx
   1be8c:	mov    edx,DWORD PTR [ebp-0xc]
   1be8f:	add    edx,eax
   1be91:	cmp    edx,ecx
   1be93:	jbe    0x1be99
   1be95:	sub    ecx,eax
   1be97:	jmp    0x1be9c
   1be99:	mov    ecx,DWORD PTR [ebp-0xc]
   1be9c:	push   ecx
   1be9d:	mov    ecx,DWORD PTR [ebp-0x28]
   1bea0:	push   DWORD PTR [ebp-0x4]
   1bea3:	add    ecx,eax
   1bea5:	push   ecx
   1bea6:	call   0x1da96
   1beab:	add    esp,0xc
   1beae:	test   DWORD PTR [esi+0x10],0x200
   1beb5:	je     0x1bec8
   1beb7:	push   DWORD PTR [ebp-0xc]
   1beba:	push   DWORD PTR [ebp-0x4]
   1bebd:	push   DWORD PTR [esi+0x18]
   1bec0:	call   0x1d9e0
   1bec5:	mov    DWORD PTR [esi+0x18],eax
   1bec8:	mov    eax,DWORD PTR [ebp-0xc]
   1becb:	sub    DWORD PTR [ebp-0x8],eax
   1bece:	add    DWORD PTR [ebp-0x4],eax
   1bed1:	sub    DWORD PTR [esi+0x40],eax
   1bed4:	cmp    DWORD PTR [esi+0x40],0x0
   1bed8:	jne    0x1cb7d
   1bede:	mov    edx,DWORD PTR [ebp+0x8]
   1bee1:	and    DWORD PTR [esi+0x40],0x0
   1bee5:	mov    DWORD PTR [esi],0x6
   1beeb:	test   DWORD PTR [esi+0x10],0x800
   1bef2:	je     0x1bf6f
   1bef4:	cmp    DWORD PTR [ebp-0x8],0x0
   1bef8:	je     0x1cb7d
   1befe:	xor    ecx,ecx
   1bf00:	mov    eax,DWORD PTR [ebp-0x4]
   1bf03:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf07:	inc    ecx
   1bf08:	mov    DWORD PTR [ebp-0xc],ecx
   1bf0b:	mov    ecx,DWORD PTR [esi+0x20]
   1bf0e:	mov    DWORD PTR [ebp-0x20],eax
   1bf11:	test   ecx,ecx
   1bf13:	je     0x1bf30
   1bf15:	mov    edx,DWORD PTR [ecx+0x1c]
   1bf18:	mov    DWORD PTR [ebp-0x28],edx
   1bf1b:	test   edx,edx
   1bf1d:	je     0x1bf30
   1bf1f:	mov    edx,DWORD PTR [esi+0x40]
   1bf22:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf25:	jae    0x1bf30
   1bf27:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf2a:	mov    BYTE PTR [ecx+edx*1],al
   1bf2d:	inc    DWORD PTR [esi+0x40]
   1bf30:	test   eax,eax
   1bf32:	je     0x1bf3c
   1bf34:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf37:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf3a:	jb     0x1bf00
   1bf3c:	test   DWORD PTR [esi+0x10],0x200
   1bf43:	je     0x1bf59
   1bf45:	push   DWORD PTR [ebp-0xc]
   1bf48:	push   DWORD PTR [ebp-0x4]
   1bf4b:	push   DWORD PTR [esi+0x18]
   1bf4e:	call   0x1d9e0
   1bf53:	mov    DWORD PTR [esi+0x18],eax
   1bf56:	mov    eax,DWORD PTR [ebp-0x20]
   1bf59:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf5c:	sub    DWORD PTR [ebp-0x8],ecx
   1bf5f:	add    DWORD PTR [ebp-0x4],ecx
   1bf62:	test   eax,eax
   1bf64:	jne    0x1cb7d
   1bf6a:	mov    edx,DWORD PTR [ebp+0x8]
   1bf6d:	jmp    0x1bf7a
   1bf6f:	mov    eax,DWORD PTR [esi+0x20]
   1bf72:	test   eax,eax
   1bf74:	je     0x1bf7a
   1bf76:	and    DWORD PTR [eax+0x1c],0x0
   1bf7a:	and    DWORD PTR [esi+0x40],0x0
   1bf7e:	mov    DWORD PTR [esi],0x7
   1bf84:	test   DWORD PTR [esi+0x10],0x1000
   1bf8b:	je     0x1c008
   1bf8d:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf91:	je     0x1cb7d
   1bf97:	xor    ecx,ecx
   1bf99:	mov    eax,DWORD PTR [ebp-0x4]
   1bf9c:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfa0:	inc    ecx
   1bfa1:	mov    DWORD PTR [ebp-0xc],ecx
   1bfa4:	mov    ecx,DWORD PTR [esi+0x20]
   1bfa7:	mov    DWORD PTR [ebp-0x20],eax
   1bfaa:	test   ecx,ecx
   1bfac:	je     0x1bfc9
   1bfae:	mov    edx,DWORD PTR [ecx+0x24]
   1bfb1:	mov    DWORD PTR [ebp-0x28],edx
   1bfb4:	test   edx,edx
   1bfb6:	je     0x1bfc9
   1bfb8:	mov    edx,DWORD PTR [esi+0x40]
   1bfbb:	cmp    edx,DWORD PTR [ecx+0x28]
   1bfbe:	jae    0x1bfc9
   1bfc0:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfc3:	mov    BYTE PTR [ecx+edx*1],al
   1bfc6:	inc    DWORD PTR [esi+0x40]
   1bfc9:	test   eax,eax
   1bfcb:	je     0x1bfd5
   1bfcd:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfd0:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bfd3:	jb     0x1bf99
   1bfd5:	test   DWORD PTR [esi+0x10],0x200
   1bfdc:	je     0x1bff2
   1bfde:	push   DWORD PTR [ebp-0xc]
   1bfe1:	push   DWORD PTR [ebp-0x4]
   1bfe4:	push   DWORD PTR [esi+0x18]
   1bfe7:	call   0x1d9e0
   1bfec:	mov    DWORD PTR [esi+0x18],eax
   1bfef:	mov    eax,DWORD PTR [ebp-0x20]
   1bff2:	mov    ecx,DWORD PTR [ebp-0xc]
   1bff5:	sub    DWORD PTR [ebp-0x8],ecx
   1bff8:	add    DWORD PTR [ebp-0x4],ecx
   1bffb:	test   eax,eax
   1bffd:	jne    0x1cb7d
   1c003:	mov    edx,DWORD PTR [ebp+0x8]
   1c006:	jmp    0x1c013
   1c008:	mov    eax,DWORD PTR [esi+0x20]
   1c00b:	test   eax,eax
   1c00d:	je     0x1c013
   1c00f:	and    DWORD PTR [eax+0x24],0x0
   1c013:	mov    DWORD PTR [esi],0x8
   1c019:	test   DWORD PTR [esi+0x10],0x200
   1c020:	je     0x1c066
   1c022:	cmp    edi,0x10
   1c025:	jae    0x1c04e
   1c027:	cmp    DWORD PTR [ebp-0x8],0x0
   1c02b:	je     0x1cb7d
   1c031:	mov    eax,DWORD PTR [ebp-0x4]
   1c034:	movzx  eax,BYTE PTR [eax]
   1c037:	dec    DWORD PTR [ebp-0x8]
   1c03a:	mov    ecx,edi
   1c03c:	shl    eax,cl
   1c03e:	add    edi,0x8
   1c041:	add    ebx,eax
   1c043:	inc    DWORD PTR [ebp-0x4]
   1c046:	cmp    edi,0x10
   1c049:	jb     0x1c027
   1c04b:	mov    edx,DWORD PTR [ebp+0x8]
   1c04e:	movzx  eax,WORD PTR [esi+0x18]
   1c052:	cmp    ebx,eax
   1c054:	je     0x1c062
   1c056:	mov    DWORD PTR [edx+0x18],0x1eda8
   1c05d:	jmp    0x1cb29
   1c062:	xor    ebx,ebx
   1c064:	xor    edi,edi
   1c066:	mov    eax,DWORD PTR [esi+0x20]
   1c069:	test   eax,eax
   1c06b:	je     0x1c081
   1c06d:	mov    edx,DWORD PTR [esi+0x10]
   1c070:	xor    ecx,ecx
   1c072:	inc    ecx
   1c073:	sar    edx,0x9
   1c076:	and    edx,ecx
   1c078:	mov    DWORD PTR [eax+0x2c],edx
   1c07b:	mov    eax,DWORD PTR [esi+0x20]
   1c07e:	mov    DWORD PTR [eax+0x30],ecx
   1c081:	xor    eax,eax
   1c083:	push   eax
   1c084:	push   eax
   1c085:	push   eax
   1c086:	call   0x1d9e0
   1c08b:	mov    ecx,DWORD PTR [ebp+0x8]
   1c08e:	mov    DWORD PTR [esi+0x18],eax
   1c091:	mov    DWORD PTR [ecx+0x30],eax
   1c094:	jmp    0x1c792
   1c099:	cmp    edi,0x20
   1c09c:	jae    0x1c0c5
   1c09e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0a2:	je     0x1cb7d
   1c0a8:	mov    eax,DWORD PTR [ebp-0x4]
   1c0ab:	movzx  eax,BYTE PTR [eax]
   1c0ae:	dec    DWORD PTR [ebp-0x8]
   1c0b1:	mov    ecx,edi
   1c0b3:	shl    eax,cl
   1c0b5:	add    edi,0x8
   1c0b8:	add    ebx,eax
   1c0ba:	inc    DWORD PTR [ebp-0x4]
   1c0bd:	cmp    edi,0x20
   1c0c0:	jb     0x1c09e
   1c0c2:	mov    edx,DWORD PTR [ebp+0x8]
   1c0c5:	mov    ecx,ebx
   1c0c7:	mov    eax,0xff00
   1c0cc:	and    ecx,eax
   1c0ce:	mov    edi,ebx
   1c0d0:	shl    edi,0x10
   1c0d3:	add    ecx,edi
   1c0d5:	mov    edi,ebx
   1c0d7:	shr    edi,0x8
   1c0da:	and    edi,eax
   1c0dc:	shl    ecx,0x8
   1c0df:	shr    ebx,0x18
   1c0e2:	add    ecx,edi
   1c0e4:	lea    eax,[ecx+ebx*1]
   1c0e7:	mov    DWORD PTR [esi+0x18],eax
   1c0ea:	mov    DWORD PTR [edx+0x30],eax
   1c0ed:	xor    ebx,ebx
   1c0ef:	xor    edi,edi
   1c0f1:	mov    DWORD PTR [esi],0xa
   1c0f7:	cmp    DWORD PTR [esi+0xc],0x0
   1c0fb:	je     0x1cb3f
   1c101:	xor    eax,eax
   1c103:	push   eax
   1c104:	push   eax
   1c105:	push   eax
   1c106:	call   0x1d53e
   1c10b:	mov    ecx,DWORD PTR [ebp+0x8]
   1c10e:	mov    DWORD PTR [esi+0x18],eax
   1c111:	mov    DWORD PTR [ecx+0x30],eax
   1c114:	mov    DWORD PTR [esi],0xb
   1c11a:	cmp    DWORD PTR [ebp+0xc],0x5
   1c11e:	je     0x1cb7d
   1c124:	mov    edx,DWORD PTR [ebp+0x8]
   1c127:	cmp    DWORD PTR [esi+0x4],0x0
   1c12b:	je     0x1c141
   1c12d:	mov    ecx,edi
   1c12f:	and    ecx,0x7
   1c132:	shr    ebx,cl
   1c134:	sub    edi,ecx
   1c136:	mov    DWORD PTR [esi],0x18
   1c13c:	jmp    0x1cb2f
   1c141:	cmp    edi,0x3
   1c144:	jae    0x1c16d
   1c146:	cmp    DWORD PTR [ebp-0x8],0x0
   1c14a:	je     0x1cb7d
   1c150:	mov    eax,DWORD PTR [ebp-0x4]
   1c153:	movzx  eax,BYTE PTR [eax]
   1c156:	dec    DWORD PTR [ebp-0x8]
   1c159:	mov    ecx,edi
   1c15b:	shl    eax,cl
   1c15d:	add    edi,0x8
   1c160:	add    ebx,eax
   1c162:	inc    DWORD PTR [ebp-0x4]
   1c165:	cmp    edi,0x3
   1c168:	jb     0x1c146
   1c16a:	mov    edx,DWORD PTR [ebp+0x8]
   1c16d:	mov    eax,ebx
   1c16f:	and    eax,0x1
   1c172:	shr    ebx,1
   1c174:	mov    DWORD PTR [esi+0x4],eax
   1c177:	mov    eax,ebx
   1c179:	and    eax,0x3
   1c17c:	dec    edi
   1c17d:	sub    eax,0x0
   1c180:	je     0x1c1c6
   1c182:	dec    eax
   1c183:	je     0x1c1a2
   1c185:	dec    eax
   1c186:	je     0x1c19a
   1c188:	dec    eax
   1c189:	jne    0x1c1cc
   1c18b:	mov    DWORD PTR [edx+0x18],0x1ed94
   1c192:	mov    DWORD PTR [esi],0x1b
   1c198:	jmp    0x1c1cc
   1c19a:	mov    DWORD PTR [esi],0xf
   1c1a0:	jmp    0x1c1cc
   1c1a2:	mov    DWORD PTR [esi+0x4c],0x74628
   1c1a9:	mov    DWORD PTR [esi+0x54],0x9
   1c1b0:	mov    DWORD PTR [esi+0x50],0x74e28
   1c1b7:	mov    DWORD PTR [esi+0x58],0x5
   1c1be:	mov    DWORD PTR [esi],0x12
   1c1c4:	jmp    0x1c1cc
   1c1c6:	mov    DWORD PTR [esi],0xd
   1c1cc:	shr    ebx,0x2
   1c1cf:	dec    edi
   1c1d0:	dec    edi
   1c1d1:	jmp    0x1cb2f
   1c1d6:	mov    ecx,edi
   1c1d8:	and    ecx,0x7
   1c1db:	sub    edi,ecx
   1c1dd:	shr    ebx,cl
   1c1df:	cmp    edi,0x20
   1c1e2:	jae    0x1c20b
   1c1e4:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1e8:	je     0x1cb7d
   1c1ee:	mov    eax,DWORD PTR [ebp-0x4]
   1c1f1:	movzx  eax,BYTE PTR [eax]
   1c1f4:	dec    DWORD PTR [ebp-0x8]
   1c1f7:	mov    ecx,edi
   1c1f9:	shl    eax,cl
   1c1fb:	add    edi,0x8
   1c1fe:	add    ebx,eax
   1c200:	inc    DWORD PTR [ebp-0x4]
   1c203:	cmp    edi,0x20
   1c206:	jb     0x1c1e4
   1c208:	mov    edx,DWORD PTR [ebp+0x8]
   1c20b:	mov    ecx,ebx
   1c20d:	mov    eax,ebx
   1c20f:	not    ecx
   1c211:	and    eax,0xffff
   1c216:	shr    ecx,0x10
   1c219:	cmp    eax,ecx
   1c21b:	je     0x1c229
   1c21d:	mov    DWORD PTR [edx+0x18],0x1ed76
   1c224:	jmp    0x1cb29
   1c229:	xor    ebx,ebx
   1c22b:	mov    DWORD PTR [esi+0x40],eax
   1c22e:	xor    edi,edi
   1c230:	mov    DWORD PTR [esi],0xe
   1c236:	mov    eax,DWORD PTR [esi+0x40]
   1c239:	mov    DWORD PTR [ebp-0xc],eax
   1c23c:	test   eax,eax
   1c23e:	je     0x1c792
   1c244:	mov    eax,DWORD PTR [ebp-0x8]
   1c247:	cmp    DWORD PTR [ebp-0xc],eax
   1c24a:	jbe    0x1c24f
   1c24c:	mov    DWORD PTR [ebp-0xc],eax
   1c24f:	mov    eax,DWORD PTR [ebp-0x10]
   1c252:	cmp    DWORD PTR [ebp-0xc],eax
   1c255:	jbe    0x1c25a
   1c257:	mov    DWORD PTR [ebp-0xc],eax
   1c25a:	cmp    DWORD PTR [ebp-0xc],0x0
   1c25e:	je     0x1cb7d
   1c264:	push   DWORD PTR [ebp-0xc]
   1c267:	push   DWORD PTR [ebp-0x4]
   1c26a:	push   DWORD PTR [ebp-0x18]
   1c26d:	call   0x1da96
   1c272:	mov    eax,DWORD PTR [ebp-0xc]
   1c275:	sub    DWORD PTR [ebp-0x8],eax
   1c278:	add    DWORD PTR [ebp-0x4],eax
   1c27b:	sub    DWORD PTR [ebp-0x10],eax
   1c27e:	add    DWORD PTR [ebp-0x18],eax
   1c281:	add    esp,0xc
   1c284:	sub    DWORD PTR [esi+0x40],eax
   1c287:	jmp    0x1cb2f
   1c28c:	cmp    edi,0xe
   1c28f:	jae    0x1c2b8
   1c291:	cmp    DWORD PTR [ebp-0x8],0x0
   1c295:	je     0x1cb7d
   1c29b:	mov    eax,DWORD PTR [ebp-0x4]
   1c29e:	movzx  eax,BYTE PTR [eax]
   1c2a1:	dec    DWORD PTR [ebp-0x8]
   1c2a4:	mov    ecx,edi
   1c2a6:	shl    eax,cl
   1c2a8:	add    edi,0x8
   1c2ab:	add    ebx,eax
   1c2ad:	inc    DWORD PTR [ebp-0x4]
   1c2b0:	cmp    edi,0xe
   1c2b3:	jb     0x1c291
   1c2b5:	mov    edx,DWORD PTR [ebp+0x8]
   1c2b8:	mov    eax,ebx
   1c2ba:	and    eax,0x1f
   1c2bd:	add    eax,0x101
   1c2c2:	mov    DWORD PTR [esi+0x60],eax
   1c2c5:	shr    ebx,0x5
   1c2c8:	mov    eax,ebx
   1c2ca:	and    eax,0x1f
   1c2cd:	inc    eax
   1c2ce:	shr    ebx,0x5
   1c2d1:	mov    DWORD PTR [esi+0x64],eax
   1c2d4:	mov    eax,ebx
   1c2d6:	and    eax,0xf
   1c2d9:	add    eax,0x4
   1c2dc:	shr    ebx,0x4
   1c2df:	sub    edi,0xe
   1c2e2:	cmp    DWORD PTR [esi+0x60],0x11e
   1c2e9:	mov    DWORD PTR [esi+0x5c],eax
   1c2ec:	ja     0x1c300
   1c2ee:	cmp    DWORD PTR [esi+0x64],0x1e
   1c2f2:	ja     0x1c300
   1c2f4:	and    DWORD PTR [esi+0x68],0x0
   1c2f8:	mov    DWORD PTR [esi],0x10
   1c2fe:	jmp    0x1c34e
   1c300:	mov    DWORD PTR [edx+0x18],0x1ed52
   1c307:	jmp    0x1cb29
   1c30c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c310:	je     0x1cb7d
   1c316:	mov    eax,DWORD PTR [ebp-0x4]
   1c319:	movzx  eax,BYTE PTR [eax]
   1c31c:	dec    DWORD PTR [ebp-0x8]
   1c31f:	mov    ecx,edi
   1c321:	shl    eax,cl
   1c323:	add    ebx,eax
   1c325:	inc    DWORD PTR [ebp-0x4]
   1c328:	add    edi,0x8
   1c32b:	cmp    edi,0x3
   1c32e:	jb     0x1c30c
   1c330:	mov    ecx,DWORD PTR [esi+0x68]
   1c333:	movzx  ecx,WORD PTR [ecx*2+0x74ea8]
   1c33b:	mov    eax,ebx
   1c33d:	and    eax,0x7
   1c340:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c345:	inc    DWORD PTR [esi+0x68]
   1c348:	shr    ebx,0x3
   1c34b:	sub    edi,0x3
   1c34e:	mov    eax,DWORD PTR [esi+0x68]
   1c351:	cmp    eax,DWORD PTR [esi+0x5c]
   1c354:	jb     0x1c32b
   1c356:	jmp    0x1c36d
   1c358:	mov    eax,DWORD PTR [esi+0x68]
   1c35b:	movzx  eax,WORD PTR [eax*2+0x74ea8]
   1c363:	xor    ecx,ecx
   1c365:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c36a:	inc    DWORD PTR [esi+0x68]
   1c36d:	cmp    DWORD PTR [esi+0x68],0x13
   1c371:	jb     0x1c358
   1c373:	lea    eax,[esi+0x530]
   1c379:	lea    ecx,[esi+0x6c]
   1c37c:	mov    DWORD PTR [ecx],eax
   1c37e:	mov    DWORD PTR [esi+0x4c],eax
   1c381:	lea    edx,[esi+0x2f0]
   1c387:	push   edx
   1c388:	lea    eax,[esi+0x54]
   1c38b:	push   eax
   1c38c:	push   ecx
   1c38d:	mov    DWORD PTR [eax],0x7
   1c393:	push   0x13
   1c395:	lea    eax,[esi+0x70]
   1c398:	push   eax
   1c399:	push   0x0
   1c39b:	call   0x1d138
   1c3a0:	mov    DWORD PTR [ebp-0x24],eax
   1c3a3:	test   eax,eax
   1c3a5:	je     0x1c3b6
   1c3a7:	mov    eax,DWORD PTR [ebp+0x8]
   1c3aa:	mov    DWORD PTR [eax+0x18],0x1ed38
   1c3b1:	jmp    0x1cb29
   1c3b6:	and    DWORD PTR [esi+0x68],0x0
   1c3ba:	mov    DWORD PTR [esi],0x11
   1c3c0:	jmp    0x1c5bc
   1c3c5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3c9:	je     0x1cb7d
   1c3cf:	mov    eax,DWORD PTR [ebp-0x4]
   1c3d2:	movzx  eax,BYTE PTR [eax]
   1c3d5:	dec    DWORD PTR [ebp-0x8]
   1c3d8:	mov    ecx,edi
   1c3da:	shl    eax,cl
   1c3dc:	add    ebx,eax
   1c3de:	inc    DWORD PTR [ebp-0x4]
   1c3e1:	add    edi,0x8
   1c3e4:	mov    ecx,DWORD PTR [esi+0x54]
   1c3e7:	xor    eax,eax
   1c3e9:	inc    eax
   1c3ea:	shl    eax,cl
   1c3ec:	mov    ecx,DWORD PTR [esi+0x4c]
   1c3ef:	dec    eax
   1c3f0:	and    eax,ebx
   1c3f2:	mov    eax,DWORD PTR [ecx+eax*4]
   1c3f5:	mov    ecx,eax
   1c3f7:	shr    ecx,0x8
   1c3fa:	movzx  ecx,cl
   1c3fd:	mov    DWORD PTR [ebp-0x20],eax
   1c400:	cmp    ecx,edi
   1c402:	ja     0x1c3c5
   1c404:	mov    ecx,eax
   1c406:	shr    ecx,0x10
   1c409:	cmp    cx,0x10
   1c40d:	jae    0x1c45a
   1c40f:	mov    ecx,eax
   1c411:	shr    ecx,0x8
   1c414:	movzx  ecx,cl
   1c417:	jmp    0x1c43b
   1c419:	cmp    DWORD PTR [ebp-0x8],0x0
   1c41d:	je     0x1cb7d
   1c423:	mov    ecx,DWORD PTR [ebp-0x4]
   1c426:	movzx  edx,BYTE PTR [ecx]
   1c429:	dec    DWORD PTR [ebp-0x8]
   1c42c:	mov    ecx,edi
   1c42e:	shl    edx,cl
   1c430:	movzx  ecx,ah
   1c433:	add    ebx,edx
   1c435:	inc    DWORD PTR [ebp-0x4]
   1c438:	add    edi,0x8
   1c43b:	cmp    edi,ecx
   1c43d:	jb     0x1c419
   1c43f:	movzx  ecx,ah
   1c442:	mov    eax,DWORD PTR [esi+0x68]
   1c445:	shr    ebx,cl
   1c447:	sub    edi,ecx
   1c449:	mov    cx,WORD PTR [ebp-0x1e]
   1c44d:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c452:	inc    DWORD PTR [esi+0x68]
   1c455:	jmp    0x1c5bc
   1c45a:	cmp    WORD PTR [ebp-0x1e],0x10
   1c45f:	jne    0x1c4b7
   1c461:	movzx  eax,ah
   1c464:	jmp    0x1c485
   1c466:	cmp    DWORD PTR [ebp-0x8],0x0
   1c46a:	je     0x1cb7d
   1c470:	mov    ecx,DWORD PTR [ebp-0x4]
   1c473:	movzx  edx,BYTE PTR [ecx]
   1c476:	dec    DWORD PTR [ebp-0x8]
   1c479:	mov    ecx,edi
   1c47b:	shl    edx,cl
   1c47d:	add    ebx,edx
   1c47f:	inc    DWORD PTR [ebp-0x4]
   1c482:	add    edi,0x8
   1c485:	lea    ecx,[eax+0x2]
   1c488:	cmp    edi,ecx
   1c48a:	jb     0x1c466
   1c48c:	mov    ecx,eax
   1c48e:	sub    edi,eax
   1c490:	mov    eax,DWORD PTR [esi+0x68]
   1c493:	shr    ebx,cl
   1c495:	test   eax,eax
   1c497:	je     0x1c5cd
   1c49d:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c4a2:	mov    DWORD PTR [ebp-0x20],eax
   1c4a5:	mov    eax,ebx
   1c4a7:	and    eax,0x3
   1c4aa:	add    eax,0x3
   1c4ad:	shr    ebx,0x2
   1c4b0:	dec    edi
   1c4b1:	dec    edi
   1c4b2:	jmp    0x1c53c
   1c4b7:	cmp    WORD PTR [ebp-0x1e],0x11
   1c4bc:	movzx  edx,ah
   1c4bf:	jne    0x1c51b
   1c4c1:	jmp    0x1c4e2
   1c4c3:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4c7:	je     0x1cb7d
   1c4cd:	mov    eax,DWORD PTR [ebp-0x4]
   1c4d0:	movzx  eax,BYTE PTR [eax]
   1c4d3:	dec    DWORD PTR [ebp-0x8]
   1c4d6:	mov    ecx,edi
   1c4d8:	shl    eax,cl
   1c4da:	add    ebx,eax
   1c4dc:	inc    DWORD PTR [ebp-0x4]
   1c4df:	add    edi,0x8
   1c4e2:	lea    eax,[edx+0x3]
   1c4e5:	cmp    edi,eax
   1c4e7:	jb     0x1c4c3
   1c4e9:	mov    ecx,edx
   1c4eb:	shr    ebx,cl
   1c4ed:	push   0xfffffffd
   1c4ef:	mov    eax,ebx
   1c4f1:	and    eax,0x7
   1c4f4:	add    eax,0x3
   1c4f7:	shr    ebx,0x3
   1c4fa:	jmp    0x1c533
   1c4fc:	cmp    DWORD PTR [ebp-0x8],0x0
   1c500:	je     0x1cb7d
   1c506:	mov    eax,DWORD PTR [ebp-0x4]
   1c509:	movzx  eax,BYTE PTR [eax]
   1c50c:	dec    DWORD PTR [ebp-0x8]
   1c50f:	mov    ecx,edi
   1c511:	shl    eax,cl
   1c513:	add    ebx,eax
   1c515:	inc    DWORD PTR [ebp-0x4]
   1c518:	add    edi,0x8
   1c51b:	lea    eax,[edx+0x7]
   1c51e:	cmp    edi,eax
   1c520:	jb     0x1c4fc
   1c522:	mov    ecx,edx
   1c524:	shr    ebx,cl
   1c526:	push   0xfffffff9
   1c528:	mov    eax,ebx
   1c52a:	and    eax,0x7f
   1c52d:	add    eax,0xb
   1c530:	shr    ebx,0x7
   1c533:	and    DWORD PTR [ebp-0x20],0x0
   1c537:	pop    ecx
   1c538:	sub    ecx,edx
   1c53a:	add    edi,ecx
   1c53c:	mov    ecx,DWORD PTR [esi+0x64]
   1c53f:	mov    edx,DWORD PTR [esi+0x68]
   1c542:	add    ecx,DWORD PTR [esi+0x60]
   1c545:	add    edx,eax
   1c547:	cmp    edx,ecx
   1c549:	jbe    0x1c5b8
   1c54b:	mov    eax,DWORD PTR [ebp+0x8]
   1c54e:	mov    DWORD PTR [eax+0x18],0x1ed1e
   1c555:	mov    DWORD PTR [esi],0x1b
   1c55b:	cmp    DWORD PTR [esi],0x1b
   1c55e:	je     0x1cb2f
   1c564:	lea    eax,[esi+0x530]
   1c56a:	lea    ecx,[esi+0x6c]
   1c56d:	mov    DWORD PTR [ecx],eax
   1c56f:	mov    DWORD PTR [esi+0x4c],eax
   1c572:	lea    edx,[esi+0x2f0]
   1c578:	push   edx
   1c579:	lea    eax,[esi+0x54]
   1c57c:	push   eax
   1c57d:	push   ecx
   1c57e:	push   DWORD PTR [esi+0x60]
   1c581:	mov    DWORD PTR [eax],0x9
   1c587:	lea    eax,[esi+0x70]
   1c58a:	push   eax
   1c58b:	push   0x1
   1c58d:	call   0x1d138
   1c592:	mov    DWORD PTR [ebp-0x24],eax
   1c595:	test   eax,eax
   1c597:	je     0x1c5dc
   1c599:	mov    eax,DWORD PTR [ebp+0x8]
   1c59c:	mov    DWORD PTR [eax+0x18],0x1ed02
   1c5a3:	jmp    0x1cb29
   1c5a8:	mov    ecx,DWORD PTR [esi+0x68]
   1c5ab:	mov    dx,WORD PTR [ebp-0x20]
   1c5af:	dec    eax
   1c5b0:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c5b5:	inc    DWORD PTR [esi+0x68]
   1c5b8:	test   eax,eax
   1c5ba:	jne    0x1c5a8
   1c5bc:	mov    eax,DWORD PTR [esi+0x64]
   1c5bf:	add    eax,DWORD PTR [esi+0x60]
   1c5c2:	cmp    DWORD PTR [esi+0x68],eax
   1c5c5:	jb     0x1c3e4
   1c5cb:	jmp    0x1c55b
   1c5cd:	mov    eax,DWORD PTR [ebp+0x8]
   1c5d0:	mov    DWORD PTR [eax+0x18],0x1ed1e
   1c5d7:	jmp    0x1cb29
   1c5dc:	lea    ecx,[esi+0x6c]
   1c5df:	mov    eax,DWORD PTR [ecx]
   1c5e1:	mov    DWORD PTR [esi+0x50],eax
   1c5e4:	lea    edx,[esi+0x2f0]
   1c5ea:	push   edx
   1c5eb:	lea    eax,[esi+0x58]
   1c5ee:	push   eax
   1c5ef:	push   ecx
   1c5f0:	push   DWORD PTR [esi+0x64]
   1c5f3:	mov    DWORD PTR [eax],0x6
   1c5f9:	mov    eax,DWORD PTR [esi+0x60]
   1c5fc:	lea    eax,[esi+eax*2+0x70]
   1c600:	push   eax
   1c601:	push   0x2
   1c603:	call   0x1d138
   1c608:	mov    DWORD PTR [ebp-0x24],eax
   1c60b:	test   eax,eax
   1c60d:	je     0x1c61e
   1c60f:	mov    eax,DWORD PTR [ebp+0x8]
   1c612:	mov    DWORD PTR [eax+0x18],0x1ecec
   1c619:	jmp    0x1cb29
   1c61e:	mov    DWORD PTR [esi],0x12
   1c624:	cmp    DWORD PTR [ebp-0x8],0x6
   1c628:	jb     0x1c681
   1c62a:	cmp    DWORD PTR [ebp-0x10],0x102
   1c631:	jb     0x1c681
   1c633:	mov    eax,DWORD PTR [ebp+0x8]
   1c636:	mov    ecx,DWORD PTR [ebp-0x18]
   1c639:	push   DWORD PTR [ebp-0x1c]
   1c63c:	mov    DWORD PTR [eax+0xc],ecx
   1c63f:	mov    ecx,DWORD PTR [ebp-0x10]
   1c642:	mov    DWORD PTR [eax+0x10],ecx
   1c645:	mov    ecx,DWORD PTR [ebp-0x4]
   1c648:	mov    DWORD PTR [eax],ecx
   1c64a:	mov    ecx,DWORD PTR [ebp-0x8]
   1c64d:	mov    DWORD PTR [eax+0x4],ecx
   1c650:	push   eax
   1c651:	mov    DWORD PTR [esi+0x38],ebx
   1c654:	mov    DWORD PTR [esi+0x3c],edi
   1c657:	call   0x1cd52
   1c65c:	mov    eax,DWORD PTR [ebp+0x8]
   1c65f:	mov    ecx,DWORD PTR [eax+0xc]
   1c662:	mov    ebx,DWORD PTR [esi+0x38]
   1c665:	mov    edi,DWORD PTR [esi+0x3c]
   1c668:	mov    DWORD PTR [ebp-0x18],ecx
   1c66b:	mov    ecx,DWORD PTR [eax+0x10]
   1c66e:	mov    DWORD PTR [ebp-0x10],ecx
   1c671:	mov    ecx,DWORD PTR [eax]
   1c673:	mov    eax,DWORD PTR [eax+0x4]
   1c676:	mov    DWORD PTR [ebp-0x4],ecx
   1c679:	mov    DWORD PTR [ebp-0x8],eax
   1c67c:	jmp    0x1cb2f
   1c681:	mov    ecx,DWORD PTR [esi+0x54]
   1c684:	mov    eax,DWORD PTR [esi+0x4c]
   1c687:	xor    edx,edx
   1c689:	inc    edx
   1c68a:	shl    edx,cl
   1c68c:	dec    edx
   1c68d:	and    edx,ebx
   1c68f:	mov    eax,DWORD PTR [eax+edx*4]
   1c692:	jmp    0x1c6c4
   1c694:	cmp    DWORD PTR [ebp-0x8],0x0
   1c698:	je     0x1cb7d
   1c69e:	mov    eax,DWORD PTR [ebp-0x4]
   1c6a1:	movzx  eax,BYTE PTR [eax]
   1c6a4:	dec    DWORD PTR [ebp-0x8]
   1c6a7:	mov    ecx,edi
   1c6a9:	shl    eax,cl
   1c6ab:	mov    ecx,DWORD PTR [esi+0x54]
   1c6ae:	add    edi,0x8
   1c6b1:	add    ebx,eax
   1c6b3:	inc    DWORD PTR [ebp-0x4]
   1c6b6:	xor    eax,eax
   1c6b8:	inc    eax
   1c6b9:	shl    eax,cl
   1c6bb:	mov    ecx,DWORD PTR [esi+0x4c]
   1c6be:	dec    eax
   1c6bf:	and    eax,ebx
   1c6c1:	mov    eax,DWORD PTR [ecx+eax*4]
   1c6c4:	mov    ecx,eax
   1c6c6:	shr    ecx,0x8
   1c6c9:	movzx  ecx,cl
   1c6cc:	cmp    ecx,edi
   1c6ce:	ja     0x1c694
   1c6d0:	test   al,al
   1c6d2:	je     0x1c76b
   1c6d8:	test   al,0xf0
   1c6da:	jne    0x1c76b
   1c6e0:	mov    DWORD PTR [ebp-0xc],eax
   1c6e3:	shr    DWORD PTR [ebp-0xc],0x8
   1c6e7:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6eb:	mov    DWORD PTR [ebp-0x28],edx
   1c6ee:	movzx  ecx,al
   1c6f1:	add    ecx,edx
   1c6f3:	xor    edx,edx
   1c6f5:	inc    edx
   1c6f6:	shl    edx,cl
   1c6f8:	mov    ecx,DWORD PTR [ebp-0x28]
   1c6fb:	mov    DWORD PTR [ebp-0x20],eax
   1c6fe:	shr    eax,0x10
   1c701:	dec    edx
   1c702:	and    edx,ebx
   1c704:	shr    edx,cl
   1c706:	add    edx,eax
   1c708:	mov    eax,DWORD PTR [esi+0x4c]
   1c70b:	mov    eax,DWORD PTR [eax+edx*4]
   1c70e:	movzx  edx,BYTE PTR [ebp-0xc]
   1c712:	jmp    0x1c755
   1c714:	cmp    DWORD PTR [ebp-0x8],0x0
   1c718:	je     0x1cb7d
   1c71e:	mov    eax,DWORD PTR [ebp-0x4]
   1c721:	movzx  eax,BYTE PTR [eax]
   1c724:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c728:	dec    DWORD PTR [ebp-0x8]
   1c72b:	mov    ecx,edi
   1c72d:	shl    eax,cl
   1c72f:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c733:	add    ebx,eax
   1c735:	inc    DWORD PTR [ebp-0x4]
   1c738:	xor    eax,eax
   1c73a:	add    ecx,edx
   1c73c:	inc    eax
   1c73d:	shl    eax,cl
   1c73f:	add    edi,0x8
   1c742:	mov    ecx,edx
   1c744:	dec    eax
   1c745:	and    eax,ebx
   1c747:	shr    eax,cl
   1c749:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c74d:	add    eax,ecx
   1c74f:	mov    ecx,DWORD PTR [esi+0x4c]
   1c752:	mov    eax,DWORD PTR [ecx+eax*4]
   1c755:	mov    ecx,eax
   1c757:	shr    ecx,0x8
   1c75a:	movzx  ecx,cl
   1c75d:	add    ecx,edx
   1c75f:	cmp    ecx,edi
   1c761:	ja     0x1c714
   1c763:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c767:	shr    ebx,cl
   1c769:	sub    edi,ecx
   1c76b:	mov    ecx,eax
   1c76d:	shr    ecx,0x8
   1c770:	movzx  ecx,cl
   1c773:	shr    ebx,cl
   1c775:	sub    edi,ecx
   1c777:	mov    ecx,eax
   1c779:	shr    ecx,0x10
   1c77c:	mov    DWORD PTR [esi+0x40],ecx
   1c77f:	test   al,al
   1c781:	jne    0x1c78e
   1c783:	mov    DWORD PTR [esi],0x17
   1c789:	jmp    0x1cb2f
   1c78e:	test   al,0x20
   1c790:	je     0x1c79d
   1c792:	mov    DWORD PTR [esi],0xb
   1c798:	jmp    0x1cb2f
   1c79d:	test   al,0x40
   1c79f:	je     0x1c7b0
   1c7a1:	mov    eax,DWORD PTR [ebp+0x8]
   1c7a4:	mov    DWORD PTR [eax+0x18],0x1ecd0
   1c7ab:	jmp    0x1cb29
   1c7b0:	movzx  eax,al
   1c7b3:	and    eax,0xf
   1c7b6:	mov    DWORD PTR [esi+0x48],eax
   1c7b9:	mov    DWORD PTR [esi],0x13
   1c7bf:	mov    eax,DWORD PTR [esi+0x48]
   1c7c2:	test   eax,eax
   1c7c4:	je     0x1c7ff
   1c7c6:	cmp    edi,eax
   1c7c8:	jae    0x1c7ee
   1c7ca:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7ce:	je     0x1cb7d
   1c7d4:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7d7:	movzx  edx,BYTE PTR [ecx]
   1c7da:	dec    DWORD PTR [ebp-0x8]
   1c7dd:	mov    ecx,edi
   1c7df:	shl    edx,cl
   1c7e1:	add    edi,0x8
   1c7e4:	add    ebx,edx
   1c7e6:	inc    DWORD PTR [ebp-0x4]
   1c7e9:	cmp    edi,DWORD PTR [esi+0x48]
   1c7ec:	jb     0x1c7ca
   1c7ee:	xor    edx,edx
   1c7f0:	inc    edx
   1c7f1:	mov    ecx,eax
   1c7f3:	shl    edx,cl
   1c7f5:	dec    edx
   1c7f6:	and    edx,ebx
   1c7f8:	add    DWORD PTR [esi+0x40],edx
   1c7fb:	shr    ebx,cl
   1c7fd:	sub    edi,eax
   1c7ff:	mov    DWORD PTR [esi],0x14
   1c805:	mov    ecx,DWORD PTR [esi+0x58]
   1c808:	mov    eax,DWORD PTR [esi+0x50]
   1c80b:	xor    edx,edx
   1c80d:	inc    edx
   1c80e:	shl    edx,cl
   1c810:	dec    edx
   1c811:	and    edx,ebx
   1c813:	mov    eax,DWORD PTR [eax+edx*4]
   1c816:	jmp    0x1c848
   1c818:	cmp    DWORD PTR [ebp-0x8],0x0
   1c81c:	je     0x1cb7d
   1c822:	mov    eax,DWORD PTR [ebp-0x4]
   1c825:	movzx  eax,BYTE PTR [eax]
   1c828:	dec    DWORD PTR [ebp-0x8]
   1c82b:	mov    ecx,edi
   1c82d:	shl    eax,cl
   1c82f:	mov    ecx,DWORD PTR [esi+0x58]
   1c832:	add    edi,0x8
   1c835:	add    ebx,eax
   1c837:	inc    DWORD PTR [ebp-0x4]
   1c83a:	xor    eax,eax
   1c83c:	inc    eax
   1c83d:	shl    eax,cl
   1c83f:	mov    ecx,DWORD PTR [esi+0x50]
   1c842:	dec    eax
   1c843:	and    eax,ebx
   1c845:	mov    eax,DWORD PTR [ecx+eax*4]
   1c848:	mov    ecx,eax
   1c84a:	shr    ecx,0x8
   1c84d:	movzx  ecx,cl
   1c850:	cmp    ecx,edi
   1c852:	ja     0x1c818
   1c854:	test   al,0xf0
   1c856:	jne    0x1c8e7
   1c85c:	mov    DWORD PTR [ebp-0xc],eax
   1c85f:	shr    DWORD PTR [ebp-0xc],0x8
   1c863:	movzx  edx,BYTE PTR [ebp-0xc]
   1c867:	mov    DWORD PTR [ebp-0x28],edx
   1c86a:	movzx  ecx,al
   1c86d:	add    ecx,edx
   1c86f:	xor    edx,edx
   1c871:	inc    edx
   1c872:	shl    edx,cl
   1c874:	mov    ecx,DWORD PTR [ebp-0x28]
   1c877:	mov    DWORD PTR [ebp-0x20],eax
   1c87a:	shr    eax,0x10
   1c87d:	dec    edx
   1c87e:	and    edx,ebx
   1c880:	shr    edx,cl
   1c882:	add    edx,eax
   1c884:	mov    eax,DWORD PTR [esi+0x50]
   1c887:	mov    eax,DWORD PTR [eax+edx*4]
   1c88a:	movzx  edx,BYTE PTR [ebp-0xc]
   1c88e:	jmp    0x1c8d1
   1c890:	cmp    DWORD PTR [ebp-0x8],0x0
   1c894:	je     0x1cb7d
   1c89a:	mov    eax,DWORD PTR [ebp-0x4]
   1c89d:	movzx  eax,BYTE PTR [eax]
   1c8a0:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c8a4:	dec    DWORD PTR [ebp-0x8]
   1c8a7:	mov    ecx,edi
   1c8a9:	shl    eax,cl
   1c8ab:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c8af:	add    ebx,eax
   1c8b1:	inc    DWORD PTR [ebp-0x4]
   1c8b4:	xor    eax,eax
   1c8b6:	add    ecx,edx
   1c8b8:	inc    eax
   1c8b9:	shl    eax,cl
   1c8bb:	add    edi,0x8
   1c8be:	mov    ecx,edx
   1c8c0:	dec    eax
   1c8c1:	and    eax,ebx
   1c8c3:	shr    eax,cl
   1c8c5:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c8c9:	add    eax,ecx
   1c8cb:	mov    ecx,DWORD PTR [esi+0x50]
   1c8ce:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8d1:	mov    ecx,eax
   1c8d3:	shr    ecx,0x8
   1c8d6:	movzx  ecx,cl
   1c8d9:	add    ecx,edx
   1c8db:	cmp    ecx,edi
   1c8dd:	ja     0x1c890
   1c8df:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c8e3:	shr    ebx,cl
   1c8e5:	sub    edi,ecx
   1c8e7:	mov    ecx,eax
   1c8e9:	shr    ecx,0x8
   1c8ec:	movzx  ecx,cl
   1c8ef:	shr    ebx,cl
   1c8f1:	sub    edi,ecx
   1c8f3:	test   al,0x40
   1c8f5:	je     0x1c906
   1c8f7:	mov    eax,DWORD PTR [ebp+0x8]
   1c8fa:	mov    DWORD PTR [eax+0x18],0x1ecba
   1c901:	jmp    0x1cb29
   1c906:	mov    edx,DWORD PTR [ebp+0x8]
   1c909:	mov    ecx,eax
   1c90b:	movzx  eax,al
   1c90e:	shr    ecx,0x10
   1c911:	and    eax,0xf
   1c914:	mov    DWORD PTR [esi+0x44],ecx
   1c917:	mov    DWORD PTR [esi+0x48],eax
   1c91a:	mov    DWORD PTR [esi],0x15
   1c920:	mov    eax,DWORD PTR [esi+0x48]
   1c923:	test   eax,eax
   1c925:	je     0x1c964
   1c927:	cmp    edi,eax
   1c929:	jae    0x1c952
   1c92b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c92f:	je     0x1cb7d
   1c935:	mov    eax,DWORD PTR [ebp-0x4]
   1c938:	movzx  eax,BYTE PTR [eax]
   1c93b:	dec    DWORD PTR [ebp-0x8]
   1c93e:	mov    ecx,edi
   1c940:	shl    eax,cl
   1c942:	add    edi,0x8
   1c945:	add    ebx,eax
   1c947:	inc    DWORD PTR [ebp-0x4]
   1c94a:	cmp    edi,DWORD PTR [esi+0x48]
   1c94d:	jb     0x1c92b
   1c94f:	mov    edx,DWORD PTR [ebp+0x8]
   1c952:	mov    ecx,DWORD PTR [esi+0x48]
   1c955:	xor    eax,eax
   1c957:	inc    eax
   1c958:	shl    eax,cl
   1c95a:	dec    eax
   1c95b:	and    eax,ebx
   1c95d:	add    DWORD PTR [esi+0x44],eax
   1c960:	shr    ebx,cl
   1c962:	sub    edi,ecx
   1c964:	mov    eax,DWORD PTR [esi+0x2c]
   1c967:	sub    eax,DWORD PTR [ebp-0x10]
   1c96a:	add    eax,DWORD PTR [ebp-0x1c]
   1c96d:	cmp    DWORD PTR [esi+0x44],eax
   1c970:	jbe    0x1c97e
   1c972:	mov    DWORD PTR [edx+0x18],0x1ec9c
   1c979:	jmp    0x1cb29
   1c97e:	mov    DWORD PTR [esi],0x16
   1c984:	cmp    DWORD PTR [ebp-0x10],0x0
   1c988:	je     0x1cb7d
   1c98e:	mov    eax,DWORD PTR [ebp-0x1c]
   1c991:	sub    eax,DWORD PTR [ebp-0x10]
   1c994:	mov    ecx,DWORD PTR [esi+0x44]
   1c997:	cmp    ecx,eax
   1c999:	jbe    0x1c9c8
   1c99b:	sub    ecx,eax
   1c99d:	mov    eax,DWORD PTR [esi+0x34]
   1c9a0:	mov    DWORD PTR [ebp-0xc],ecx
   1c9a3:	mov    ecx,DWORD PTR [esi+0x30]
   1c9a6:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9a9:	jbe    0x1c9b6
   1c9ab:	add    eax,DWORD PTR [esi+0x28]
   1c9ae:	sub    DWORD PTR [ebp-0xc],ecx
   1c9b1:	sub    eax,DWORD PTR [ebp-0xc]
   1c9b4:	jmp    0x1c9bb
   1c9b6:	sub    eax,DWORD PTR [ebp-0xc]
   1c9b9:	add    eax,ecx
   1c9bb:	mov    ecx,DWORD PTR [esi+0x40]
   1c9be:	mov    DWORD PTR [ebp-0x28],ecx
   1c9c1:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9c4:	jbe    0x1c9d6
   1c9c6:	jmp    0x1c9d3
   1c9c8:	mov    eax,DWORD PTR [ebp-0x18]
   1c9cb:	sub    eax,ecx
   1c9cd:	mov    ecx,DWORD PTR [esi+0x40]
   1c9d0:	mov    DWORD PTR [ebp-0x28],ecx
   1c9d3:	mov    DWORD PTR [ebp-0xc],ecx
   1c9d6:	mov    ecx,DWORD PTR [ebp-0x10]
   1c9d9:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9dc:	jbe    0x1c9e1
   1c9de:	mov    DWORD PTR [ebp-0xc],ecx
   1c9e1:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9e4:	mov    DWORD PTR [ebp-0x10],ecx
   1c9e7:	mov    ecx,DWORD PTR [ebp-0x28]
   1c9ea:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9ed:	mov    DWORD PTR [esi+0x40],ecx
   1c9f0:	mov    edx,DWORD PTR [ebp-0x18]
   1c9f3:	mov    cl,BYTE PTR [eax]
   1c9f5:	inc    DWORD PTR [ebp-0x18]
   1c9f8:	inc    eax
   1c9f9:	dec    DWORD PTR [ebp-0xc]
   1c9fc:	mov    BYTE PTR [edx],cl
   1c9fe:	jne    0x1c9f0
   1ca00:	cmp    DWORD PTR [esi+0x40],0x0
   1ca04:	jne    0x1cb2f
   1ca0a:	jmp    0x1ca24
   1ca0c:	cmp    DWORD PTR [ebp-0x10],0x0
   1ca10:	je     0x1cb7d
   1ca16:	mov    ecx,DWORD PTR [ebp-0x18]
   1ca19:	mov    al,BYTE PTR [esi+0x40]
   1ca1c:	inc    DWORD PTR [ebp-0x18]
   1ca1f:	dec    DWORD PTR [ebp-0x10]
   1ca22:	mov    BYTE PTR [ecx],al
   1ca24:	mov    DWORD PTR [esi],0x12
   1ca2a:	jmp    0x1cb2f
   1ca2f:	cmp    DWORD PTR [esi+0x8],0x0
   1ca33:	je     0x1cae3
   1ca39:	cmp    edi,0x20
   1ca3c:	jae    0x1ca65
   1ca3e:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca42:	je     0x1cb7d
   1ca48:	mov    eax,DWORD PTR [ebp-0x4]
   1ca4b:	movzx  eax,BYTE PTR [eax]
   1ca4e:	dec    DWORD PTR [ebp-0x8]
   1ca51:	mov    ecx,edi
   1ca53:	shl    eax,cl
   1ca55:	add    edi,0x8
   1ca58:	add    ebx,eax
   1ca5a:	inc    DWORD PTR [ebp-0x4]
   1ca5d:	cmp    edi,0x20
   1ca60:	jb     0x1ca3e
   1ca62:	mov    edx,DWORD PTR [ebp+0x8]
   1ca65:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca68:	sub    eax,DWORD PTR [ebp-0x10]
   1ca6b:	add    DWORD PTR [edx+0x14],eax
   1ca6e:	add    DWORD PTR [esi+0x1c],eax
   1ca71:	mov    DWORD PTR [ebp-0x1c],eax
   1ca74:	test   eax,eax
   1ca76:	je     0x1caa0
   1ca78:	push   eax
   1ca79:	mov    eax,DWORD PTR [ebp-0x18]
   1ca7c:	sub    eax,DWORD PTR [ebp-0x1c]
   1ca7f:	cmp    DWORD PTR [esi+0x10],0x0
   1ca83:	push   eax
   1ca84:	push   DWORD PTR [esi+0x18]
   1ca87:	je     0x1ca90
   1ca89:	call   0x1d9e0
   1ca8e:	jmp    0x1ca95
   1ca90:	call   0x1d53e
   1ca95:	mov    ecx,DWORD PTR [ebp+0x8]
   1ca98:	mov    DWORD PTR [esi+0x18],eax
   1ca9b:	mov    DWORD PTR [ecx+0x30],eax
   1ca9e:	mov    edx,ecx
   1caa0:	cmp    DWORD PTR [esi+0x10],0x0
   1caa4:	mov    eax,DWORD PTR [ebp-0x10]
   1caa7:	mov    DWORD PTR [ebp-0x1c],eax
   1caaa:	mov    eax,ebx
   1caac:	jne    0x1cad1
   1caae:	and    eax,0xff00
   1cab3:	mov    ecx,ebx
   1cab5:	shl    ecx,0x10
   1cab8:	add    eax,ecx
   1caba:	mov    ecx,ebx
   1cabc:	shr    ecx,0x8
   1cabf:	and    ecx,0xff00
   1cac5:	shl    eax,0x8
   1cac8:	add    eax,ecx
   1caca:	mov    ecx,ebx
   1cacc:	shr    ecx,0x18
   1cacf:	add    eax,ecx
   1cad1:	cmp    eax,DWORD PTR [esi+0x18]
   1cad4:	je     0x1cadf
   1cad6:	mov    DWORD PTR [edx+0x18],0x1ec86
   1cadd:	jmp    0x1cb29
   1cadf:	xor    ebx,ebx
   1cae1:	xor    edi,edi
   1cae3:	mov    DWORD PTR [esi],0x19
   1cae9:	cmp    DWORD PTR [esi+0x8],0x0
   1caed:	je     0x1cb67
   1caef:	cmp    DWORD PTR [esi+0x10],0x0
   1caf3:	je     0x1cb67
   1caf5:	cmp    edi,0x20
   1caf8:	jae    0x1cb1d
   1cafa:	cmp    DWORD PTR [ebp-0x8],0x0
   1cafe:	je     0x1cb7d
   1cb00:	mov    eax,DWORD PTR [ebp-0x4]
   1cb03:	movzx  eax,BYTE PTR [eax]
   1cb06:	dec    DWORD PTR [ebp-0x8]
   1cb09:	mov    ecx,edi
   1cb0b:	shl    eax,cl
   1cb0d:	add    edi,0x8
   1cb10:	add    ebx,eax
   1cb12:	inc    DWORD PTR [ebp-0x4]
   1cb15:	cmp    edi,0x20
   1cb18:	jb     0x1cafa
   1cb1a:	mov    edx,DWORD PTR [ebp+0x8]
   1cb1d:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb20:	je     0x1cb63
   1cb22:	mov    DWORD PTR [edx+0x18],0x1ec6e
   1cb29:	mov    DWORD PTR [esi],0x1b
   1cb2f:	mov    eax,DWORD PTR [esi]
   1cb31:	cmp    eax,0x1c
   1cb34:	jbe    0x1bb26
   1cb3a:	jmp    0x1bb1c
   1cb3f:	mov    eax,DWORD PTR [ebp-0x18]
   1cb42:	mov    DWORD PTR [edx+0xc],eax
   1cb45:	mov    eax,DWORD PTR [ebp-0x10]
   1cb48:	mov    DWORD PTR [edx+0x10],eax
   1cb4b:	mov    eax,DWORD PTR [ebp-0x4]
   1cb4e:	mov    DWORD PTR [edx],eax
   1cb50:	mov    eax,DWORD PTR [ebp-0x8]
   1cb53:	mov    DWORD PTR [edx+0x4],eax
   1cb56:	mov    DWORD PTR [esi+0x38],ebx
   1cb59:	mov    DWORD PTR [esi+0x3c],edi
   1cb5c:	push   0x2
   1cb5e:	jmp    0x1bb1e
   1cb63:	xor    ebx,ebx
   1cb65:	xor    edi,edi
   1cb67:	mov    DWORD PTR [esi],0x1a
   1cb6d:	mov    DWORD PTR [ebp-0x24],0x1
   1cb74:	jmp    0x1cb7d
   1cb76:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cb7d:	mov    eax,DWORD PTR [ebp+0x8]
   1cb80:	mov    ecx,DWORD PTR [ebp-0x18]
   1cb83:	mov    DWORD PTR [eax+0xc],ecx
   1cb86:	mov    ecx,DWORD PTR [ebp-0x10]
   1cb89:	mov    DWORD PTR [eax+0x10],ecx
   1cb8c:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb8f:	mov    DWORD PTR [eax],ecx
   1cb91:	mov    ecx,DWORD PTR [ebp-0x8]
   1cb94:	mov    DWORD PTR [eax+0x4],ecx
   1cb97:	cmp    DWORD PTR [esi+0x28],0x0
   1cb9b:	mov    DWORD PTR [esi+0x38],ebx
   1cb9e:	mov    DWORD PTR [esi+0x3c],edi
   1cba1:	jne    0x1cbb3
   1cba3:	cmp    DWORD PTR [esi],0x18
   1cba6:	jge    0x1cbcf
   1cba8:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbab:	mov    ecx,DWORD PTR [ebp+0x8]
   1cbae:	cmp    eax,DWORD PTR [ecx+0x10]
   1cbb1:	je     0x1cbcf
   1cbb3:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbb6:	mov    edi,DWORD PTR [ebp+0x8]
   1cbb9:	call   0x1b9de
   1cbbe:	test   eax,eax
   1cbc0:	je     0x1cbcf
   1cbc2:	mov    DWORD PTR [esi],0x1c
   1cbc8:	push   0xfffffffc
   1cbca:	jmp    0x1bb1e
   1cbcf:	mov    edi,DWORD PTR [ebp+0x8]
   1cbd2:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbd5:	sub    eax,DWORD PTR [edi+0x4]
   1cbd8:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cbdb:	sub    ebx,DWORD PTR [edi+0x10]
   1cbde:	add    DWORD PTR [edi+0x8],eax
   1cbe1:	add    DWORD PTR [edi+0x14],ebx
   1cbe4:	add    DWORD PTR [esi+0x1c],ebx
   1cbe7:	cmp    DWORD PTR [esi+0x8],0x0
   1cbeb:	mov    DWORD PTR [ebp-0x2c],eax
   1cbee:	je     0x1cc19
   1cbf0:	test   ebx,ebx
   1cbf2:	je     0x1cc19
   1cbf4:	mov    eax,DWORD PTR [edi+0xc]
   1cbf7:	push   ebx
   1cbf8:	sub    eax,ebx
   1cbfa:	cmp    DWORD PTR [esi+0x10],0x0
   1cbfe:	push   eax
   1cbff:	push   DWORD PTR [esi+0x18]
   1cc02:	je     0x1cc0b
   1cc04:	call   0x1d9e0
   1cc09:	jmp    0x1cc10
   1cc0b:	call   0x1d53e
   1cc10:	mov    DWORD PTR [esi+0x18],eax
   1cc13:	mov    DWORD PTR [edi+0x30],eax
   1cc16:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc19:	cmp    DWORD PTR [esi],0xb
   1cc1c:	jne    0x1cc25
   1cc1e:	mov    ecx,0x80
   1cc23:	jmp    0x1cc27
   1cc25:	xor    ecx,ecx
   1cc27:	mov    edx,DWORD PTR [esi+0x4]
   1cc2a:	neg    edx
   1cc2c:	sbb    edx,edx
   1cc2e:	and    edx,0x40
   1cc31:	add    edx,ecx
   1cc33:	add    edx,DWORD PTR [esi+0x3c]
   1cc36:	mov    DWORD PTR [edi+0x2c],edx
   1cc39:	test   eax,eax
   1cc3b:	jne    0x1cc41
   1cc3d:	test   ebx,ebx
   1cc3f:	je     0x1cc47
   1cc41:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc45:	jne    0x1cc54
   1cc47:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc4b:	jne    0x1cc54
   1cc4d:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc54:	mov    eax,DWORD PTR [ebp-0x24]
   1cc57:	jmp    0x1bb1f
   1cc5c:	mov    edi,edi
   1cc5e:	xor    BYTE PTR [ebx-0x43b2ffff],bh
   1cc64:	add    DWORD PTR [eax],eax
   1cc66:	loop   0x1cc24
   1cc68:	add    DWORD PTR [eax],eax
   1cc6a:	pop    eax
   1cc6b:	mov    ebp,0xbdd10001
   1cc70:	add    DWORD PTR [eax],eax
   1cc72:	push   eax
   1cc73:	mov    esi,0xbeeb0001
   1cc78:	add    DWORD PTR [eax],eax
   1cc7a:	test   BYTE PTR [edi-0x3fe6ffff],bh
   1cc80:	add    DWORD PTR [eax],eax
   1cc82:	cdq    
   1cc83:	rol    BYTE PTR [ecx],0x0
   1cc86:	test   eax,0xc11a0001
   1cc8c:	add    DWORD PTR [eax],eax
   1cc8e:	daa    
   1cc8f:	rol    DWORD PTR [ecx],0x0
   1cc92:	(bad)  
   1cc93:	rol    DWORD PTR [ecx],0x0
   1cc96:	ss ret 0x1
   1cc9a:	mov    edx,es
   1cc9c:	add    DWORD PTR [eax],eax
   1cc9e:	dec    esi
   1cc9f:	ret    
   1cca0:	add    DWORD PTR [eax],eax
   1cca2:	mov    esp,0x240001c5
   1cca7:	mov    BYTE PTR [ecx],0x0
   1ccaa:	mov    edi,0x50001c7
   1ccaf:	enter  0x1,0x20
   1ccb3:	leave  
   1ccb4:	add    DWORD PTR [eax],eax
   1ccb6:	test   cl,cl
   1ccb8:	add    DWORD PTR [eax],eax
   1ccba:	or     al,0xca
   1ccbc:	add    DWORD PTR [eax],eax
   1ccbe:	das    
   1ccbf:	retf   0x1
   1ccc2:	jmp    0x6d01ce91
   1ccc7:	retf   
   1ccc8:	add    DWORD PTR [eax],eax
   1ccca:	jbe    0x1cc97
   1cccc:	add    DWORD PTR [eax],eax
   1ccce:	enter  0x1cb,0x0
   1ccd2:	int3   
   1ccd3:	int3   
   1ccd4:	int3   
   1ccd5:	int3   
   1ccd6:	int3   
   1ccd7:	int3   
   1ccd8:	mov    edi,edi
   1ccda:	push   ebp
   1ccdb:	mov    ebp,esp
   1ccdd:	push   esi
   1ccde:	mov    esi,DWORD PTR [ebp+0x8]
   1cce1:	test   esi,esi
   1cce3:	je     0x1cd11
   1cce5:	mov    eax,DWORD PTR [esi+0x1c]
   1cce8:	test   eax,eax
   1ccea:	je     0x1cd11
   1ccec:	mov    ecx,DWORD PTR [esi+0x24]
   1ccef:	test   ecx,ecx
   1ccf1:	je     0x1cd11
   1ccf3:	mov    eax,DWORD PTR [eax+0x34]
   1ccf6:	test   eax,eax
   1ccf8:	je     0x1cd00
   1ccfa:	push   eax
   1ccfb:	push   DWORD PTR [esi+0x28]
   1ccfe:	call   ecx
   1cd00:	push   DWORD PTR [esi+0x1c]
   1cd03:	push   DWORD PTR [esi+0x28]
   1cd06:	call   DWORD PTR [esi+0x24]
   1cd09:	and    DWORD PTR [esi+0x1c],0x0
   1cd0d:	xor    eax,eax
   1cd0f:	jmp    0x1cd14
   1cd11:	push   0xfffffffe
   1cd13:	pop    eax
   1cd14:	pop    esi
   1cd15:	pop    ebp
   1cd16:	ret    0x4
   1cd19:	int3   
   1cd1a:	int3   
   1cd1b:	int3   
   1cd1c:	int3   
   1cd1d:	int3   
   1cd1e:	mov    edi,edi
   1cd20:	push   ebp
   1cd21:	mov    ebp,esp
   1cd23:	mov    eax,DWORD PTR [ebp+0xc]
   1cd26:	imul   eax,DWORD PTR [ebp+0x10]
   1cd2a:	push   eax
   1cd2b:	call   0x1da04
   1cd30:	pop    ecx
   1cd31:	pop    ebp
   1cd32:	ret    0xc
   1cd35:	int3   
   1cd36:	int3   
   1cd37:	int3   
   1cd38:	int3   
   1cd39:	int3   
   1cd3a:	mov    edi,edi
   1cd3c:	push   ebp
   1cd3d:	mov    ebp,esp
   1cd3f:	push   DWORD PTR [ebp+0xc]
   1cd42:	call   0x10990
   1cd47:	pop    ecx
   1cd48:	pop    ebp
   1cd49:	ret    0x8
   1cd4c:	int3   
   1cd4d:	int3   
   1cd4e:	int3   
   1cd4f:	int3   
   1cd50:	int3   
   1cd51:	int3   
   1cd52:	mov    edi,edi
   1cd54:	push   ebp
   1cd55:	mov    ebp,esp
   1cd57:	sub    esp,0x40
   1cd5a:	mov    eax,DWORD PTR [ebp+0x8]
   1cd5d:	mov    ecx,DWORD PTR [eax+0x4]
   1cd60:	mov    edx,DWORD PTR [eax+0x10]
   1cd63:	push   ebx
   1cd64:	mov    ebx,DWORD PTR [eax]
   1cd66:	dec    ebx
   1cd67:	lea    ecx,[ecx+ebx*1-0x5]
   1cd6b:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd6e:	mov    ecx,edx
   1cd70:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd73:	push   esi
   1cd74:	mov    esi,DWORD PTR [eax+0x1c]
   1cd77:	push   edi
   1cd78:	mov    edi,DWORD PTR [eax+0xc]
   1cd7b:	dec    edi
   1cd7c:	add    ecx,edi
   1cd7e:	mov    DWORD PTR [ebp-0x3c],ecx
   1cd81:	lea    ecx,[edx+edi*1-0x101]
   1cd88:	mov    DWORD PTR [ebp-0x30],ecx
   1cd8b:	mov    ecx,DWORD PTR [esi+0x28]
   1cd8e:	mov    DWORD PTR [ebp-0x24],ecx
   1cd91:	mov    ecx,DWORD PTR [esi+0x2c]
   1cd94:	mov    DWORD PTR [ebp-0x40],ecx
   1cd97:	mov    ecx,DWORD PTR [esi+0x30]
   1cd9a:	mov    DWORD PTR [ebp-0x18],ecx
   1cd9d:	mov    ecx,DWORD PTR [esi+0x34]
   1cda0:	mov    DWORD PTR [ebp-0x28],ecx
   1cda3:	mov    ecx,DWORD PTR [esi+0x38]
   1cda6:	mov    DWORD PTR [ebp-0x4],ecx
   1cda9:	mov    ecx,DWORD PTR [esi+0x3c]
   1cdac:	mov    DWORD PTR [ebp+0xc],ecx
   1cdaf:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdb2:	xor    edx,edx
   1cdb4:	mov    DWORD PTR [ebp-0x1c],ecx
   1cdb7:	mov    ecx,DWORD PTR [esi+0x50]
   1cdba:	inc    edx
   1cdbb:	mov    DWORD PTR [ebp-0x20],ecx
   1cdbe:	mov    ecx,DWORD PTR [esi+0x54]
   1cdc1:	shl    edx,cl
   1cdc3:	mov    ecx,DWORD PTR [esi+0x58]
   1cdc6:	dec    edx
   1cdc7:	mov    DWORD PTR [ebp-0x34],edx
   1cdca:	xor    edx,edx
   1cdcc:	inc    edx
   1cdcd:	shl    edx,cl
   1cdcf:	dec    edx
   1cdd0:	mov    DWORD PTR [ebp-0x38],edx
   1cdd3:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdd6:	cmp    ecx,0xf
   1cdd9:	jae    0x1cdf8
   1cddb:	add    DWORD PTR [ebp+0xc],0x8
   1cddf:	inc    ebx
   1cde0:	movzx  edx,BYTE PTR [ebx]
   1cde3:	shl    edx,cl
   1cde5:	mov    ecx,DWORD PTR [ebp+0xc]
   1cde8:	add    DWORD PTR [ebp-0x4],edx
   1cdeb:	inc    ebx
   1cdec:	movzx  edx,BYTE PTR [ebx]
   1cdef:	shl    edx,cl
   1cdf1:	add    DWORD PTR [ebp-0x4],edx
   1cdf4:	add    DWORD PTR [ebp+0xc],0x8
   1cdf8:	mov    ecx,DWORD PTR [ebp-0x34]
   1cdfb:	and    ecx,DWORD PTR [ebp-0x4]
   1cdfe:	mov    edx,DWORD PTR [ebp-0x1c]
   1ce01:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ce04:	mov    DWORD PTR [ebp-0x10],ecx
   1ce07:	mov    edx,DWORD PTR [ebp-0x10]
   1ce0a:	shr    ecx,0x8
   1ce0d:	movzx  ecx,cl
   1ce10:	shr    DWORD PTR [ebp-0x4],cl
   1ce13:	sub    DWORD PTR [ebp+0xc],ecx
   1ce16:	mov    DWORD PTR [ebp-0x8],ecx
   1ce19:	movzx  ecx,dl
   1ce1c:	mov    DWORD PTR [ebp-0x8],ecx
   1ce1f:	test   ecx,ecx
   1ce21:	je     0x1ce6a
   1ce23:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce26:	test   cl,0x10
   1ce29:	jne    0x1ce75
   1ce2b:	test   cl,0x40
   1ce2e:	jne    0x1d0c4
   1ce34:	xor    edx,edx
   1ce36:	inc    edx
   1ce37:	shl    edx,cl
   1ce39:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce3c:	shr    ecx,0x10
   1ce3f:	dec    edx
   1ce40:	and    edx,DWORD PTR [ebp-0x4]
   1ce43:	add    edx,ecx
   1ce45:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce48:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce4b:	mov    DWORD PTR [ebp-0x10],ecx
   1ce4e:	mov    edx,DWORD PTR [ebp-0x10]
   1ce51:	shr    ecx,0x8
   1ce54:	movzx  ecx,cl
   1ce57:	shr    DWORD PTR [ebp-0x4],cl
   1ce5a:	sub    DWORD PTR [ebp+0xc],ecx
   1ce5d:	mov    DWORD PTR [ebp-0x8],ecx
   1ce60:	movzx  ecx,dl
   1ce63:	mov    DWORD PTR [ebp-0x8],ecx
   1ce66:	test   ecx,ecx
   1ce68:	jne    0x1ce23
   1ce6a:	inc    edi
   1ce6b:	shr    edx,0x10
   1ce6e:	mov    BYTE PTR [edi],dl
   1ce70:	jmp    0x1d0a2
   1ce75:	shr    edx,0x10
   1ce78:	and    ecx,0xf
   1ce7b:	mov    DWORD PTR [ebp-0xc],edx
   1ce7e:	mov    DWORD PTR [ebp-0x8],ecx
   1ce81:	je     0x1cead
   1ce83:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce86:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ce89:	jae    0x1ce98
   1ce8b:	inc    ebx
   1ce8c:	movzx  edx,BYTE PTR [ebx]
   1ce8f:	shl    edx,cl
   1ce91:	add    DWORD PTR [ebp-0x4],edx
   1ce94:	add    DWORD PTR [ebp+0xc],0x8
   1ce98:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce9b:	xor    edx,edx
   1ce9d:	inc    edx
   1ce9e:	shl    edx,cl
   1cea0:	dec    edx
   1cea1:	and    edx,DWORD PTR [ebp-0x4]
   1cea4:	shr    DWORD PTR [ebp-0x4],cl
   1cea7:	add    DWORD PTR [ebp-0xc],edx
   1ceaa:	sub    DWORD PTR [ebp+0xc],ecx
   1cead:	mov    ecx,DWORD PTR [ebp+0xc]
   1ceb0:	cmp    ecx,0xf
   1ceb3:	jae    0x1ced2
   1ceb5:	add    DWORD PTR [ebp+0xc],0x8
   1ceb9:	inc    ebx
   1ceba:	movzx  edx,BYTE PTR [ebx]
   1cebd:	shl    edx,cl
   1cebf:	mov    ecx,DWORD PTR [ebp+0xc]
   1cec2:	add    DWORD PTR [ebp-0x4],edx
   1cec5:	inc    ebx
   1cec6:	movzx  edx,BYTE PTR [ebx]
   1cec9:	shl    edx,cl
   1cecb:	add    DWORD PTR [ebp-0x4],edx
   1cece:	add    DWORD PTR [ebp+0xc],0x8
   1ced2:	mov    ecx,DWORD PTR [ebp-0x38]
   1ced5:	and    ecx,DWORD PTR [ebp-0x4]
   1ced8:	mov    edx,DWORD PTR [ebp-0x20]
   1cedb:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cede:	jmp    0x1cefe
   1cee0:	test   cl,0x40
   1cee3:	jne    0x1d0bb
   1cee9:	xor    edx,edx
   1ceeb:	inc    edx
   1ceec:	shl    edx,cl
   1ceee:	movzx  ecx,WORD PTR [ebp-0xe]
   1cef2:	dec    edx
   1cef3:	and    edx,DWORD PTR [ebp-0x4]
   1cef6:	add    edx,ecx
   1cef8:	mov    ecx,DWORD PTR [ebp-0x20]
   1cefb:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cefe:	mov    DWORD PTR [ebp-0x10],ecx
   1cf01:	mov    edx,DWORD PTR [ebp-0x10]
   1cf04:	shr    ecx,0x8
   1cf07:	movzx  ecx,cl
   1cf0a:	shr    DWORD PTR [ebp-0x4],cl
   1cf0d:	sub    DWORD PTR [ebp+0xc],ecx
   1cf10:	mov    DWORD PTR [ebp-0x8],ecx
   1cf13:	movzx  ecx,dl
   1cf16:	test   cl,0x10
   1cf19:	je     0x1cee0
   1cf1b:	and    ecx,0xf
   1cf1e:	shr    edx,0x10
   1cf21:	mov    DWORD PTR [ebp-0x14],edx
   1cf24:	mov    DWORD PTR [ebp-0x8],ecx
   1cf27:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf2a:	jae    0x1cf57
   1cf2c:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf2f:	add    DWORD PTR [ebp+0xc],0x8
   1cf33:	inc    ebx
   1cf34:	movzx  edx,BYTE PTR [ebx]
   1cf37:	shl    edx,cl
   1cf39:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf3c:	add    DWORD PTR [ebp-0x4],edx
   1cf3f:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf42:	jae    0x1cf57
   1cf44:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf47:	inc    ebx
   1cf48:	movzx  edx,BYTE PTR [ebx]
   1cf4b:	shl    edx,cl
   1cf4d:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf50:	add    DWORD PTR [ebp-0x4],edx
   1cf53:	add    DWORD PTR [ebp+0xc],0x8
   1cf57:	xor    edx,edx
   1cf59:	inc    edx
   1cf5a:	shl    edx,cl
   1cf5c:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf5f:	sub    DWORD PTR [ebp+0xc],ecx
   1cf62:	dec    edx
   1cf63:	and    edx,DWORD PTR [ebp-0x4]
   1cf66:	shr    DWORD PTR [ebp-0x4],cl
   1cf69:	add    DWORD PTR [ebp-0x14],edx
   1cf6c:	mov    edx,DWORD PTR [ebp-0x14]
   1cf6f:	mov    ecx,edi
   1cf71:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf74:	cmp    edx,ecx
   1cf76:	jbe    0x1d06a
   1cf7c:	sub    edx,ecx
   1cf7e:	mov    DWORD PTR [ebp-0x8],edx
   1cf81:	cmp    edx,DWORD PTR [ebp-0x40]
   1cf84:	ja     0x1d0b2
   1cf8a:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf8d:	dec    ecx
   1cf8e:	mov    DWORD PTR [ebp-0x10],ecx
   1cf91:	mov    ecx,DWORD PTR [ebp-0x18]
   1cf94:	test   ecx,ecx
   1cf96:	jne    0x1cfbe
   1cf98:	mov    ecx,DWORD PTR [ebp-0x24]
   1cf9b:	sub    ecx,edx
   1cf9d:	add    DWORD PTR [ebp-0x10],ecx
   1cfa0:	mov    ecx,edx
   1cfa2:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfa5:	jae    0x1d033
   1cfab:	sub    DWORD PTR [ebp-0xc],ecx
   1cfae:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfb1:	inc    ecx
   1cfb2:	mov    dl,BYTE PTR [ecx]
   1cfb4:	inc    edi
   1cfb5:	dec    DWORD PTR [ebp-0x8]
   1cfb8:	mov    BYTE PTR [edi],dl
   1cfba:	jne    0x1cfb1
   1cfbc:	jmp    0x1d009
   1cfbe:	cmp    ecx,edx
   1cfc0:	jae    0x1d013
   1cfc2:	sub    ecx,edx
   1cfc4:	add    ecx,DWORD PTR [ebp-0x24]
   1cfc7:	add    DWORD PTR [ebp-0x10],ecx
   1cfca:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfcd:	sub    ecx,DWORD PTR [ebp-0x18]
   1cfd0:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfd3:	jae    0x1d033
   1cfd5:	sub    DWORD PTR [ebp-0xc],ecx
   1cfd8:	inc    DWORD PTR [ebp-0x10]
   1cfdb:	mov    edx,DWORD PTR [ebp-0x10]
   1cfde:	mov    dl,BYTE PTR [edx]
   1cfe0:	inc    edi
   1cfe1:	dec    ecx
   1cfe2:	mov    BYTE PTR [edi],dl
   1cfe4:	jne    0x1cfd8
   1cfe6:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfe9:	dec    ecx
   1cfea:	mov    DWORD PTR [ebp-0x10],ecx
   1cfed:	mov    ecx,DWORD PTR [ebp-0x18]
   1cff0:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cff3:	jae    0x1d033
   1cff5:	sub    DWORD PTR [ebp-0xc],ecx
   1cff8:	mov    DWORD PTR [ebp-0x8],ecx
   1cffb:	mov    ecx,DWORD PTR [ebp-0x10]
   1cffe:	inc    ecx
   1cfff:	mov    dl,BYTE PTR [ecx]
   1d001:	inc    edi
   1d002:	dec    DWORD PTR [ebp-0x8]
   1d005:	mov    BYTE PTR [edi],dl
   1d007:	jne    0x1cffe
   1d009:	mov    ecx,edi
   1d00b:	sub    ecx,DWORD PTR [ebp-0x14]
   1d00e:	mov    DWORD PTR [ebp-0x10],ecx
   1d011:	jmp    0x1d036
   1d013:	sub    ecx,edx
   1d015:	add    DWORD PTR [ebp-0x10],ecx
   1d018:	mov    ecx,DWORD PTR [ebp-0x8]
   1d01b:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d01e:	jae    0x1d033
   1d020:	sub    DWORD PTR [ebp-0xc],ecx
   1d023:	mov    ecx,DWORD PTR [ebp-0x10]
   1d026:	inc    ecx
   1d027:	mov    dl,BYTE PTR [ecx]
   1d029:	inc    edi
   1d02a:	dec    DWORD PTR [ebp-0x8]
   1d02d:	mov    BYTE PTR [edi],dl
   1d02f:	jne    0x1d026
   1d031:	jmp    0x1d009
   1d033:	mov    ecx,DWORD PTR [ebp-0x10]
   1d036:	mov    edx,DWORD PTR [ebp-0xc]
   1d039:	cmp    edx,0x2
   1d03c:	jbe    0x1d08a
   1d03e:	lea    eax,[edx-0x3]
   1d041:	push   0x3
   1d043:	xor    edx,edx
   1d045:	pop    ecx
   1d046:	div    ecx
   1d048:	mov    ecx,DWORD PTR [ebp-0x10]
   1d04b:	inc    eax
   1d04c:	sub    DWORD PTR [ebp-0xc],0x3
   1d050:	inc    ecx
   1d051:	mov    dl,BYTE PTR [ecx]
   1d053:	inc    edi
   1d054:	mov    BYTE PTR [edi],dl
   1d056:	inc    ecx
   1d057:	mov    dl,BYTE PTR [ecx]
   1d059:	inc    edi
   1d05a:	inc    ecx
   1d05b:	mov    BYTE PTR [edi],dl
   1d05d:	mov    dl,BYTE PTR [ecx]
   1d05f:	inc    edi
   1d060:	dec    eax
   1d061:	mov    BYTE PTR [edi],dl
   1d063:	jne    0x1d04c
   1d065:	mov    eax,DWORD PTR [ebp+0x8]
   1d068:	jmp    0x1d08a
   1d06a:	mov    ecx,edi
   1d06c:	sub    ecx,edx
   1d06e:	sub    DWORD PTR [ebp-0xc],0x3
   1d072:	inc    ecx
   1d073:	mov    dl,BYTE PTR [ecx]
   1d075:	inc    edi
   1d076:	mov    BYTE PTR [edi],dl
   1d078:	inc    ecx
   1d079:	mov    dl,BYTE PTR [ecx]
   1d07b:	inc    edi
   1d07c:	inc    ecx
   1d07d:	mov    BYTE PTR [edi],dl
   1d07f:	mov    dl,BYTE PTR [ecx]
   1d081:	inc    edi
   1d082:	cmp    DWORD PTR [ebp-0xc],0x2
   1d086:	mov    BYTE PTR [edi],dl
   1d088:	ja     0x1d06e
   1d08a:	cmp    DWORD PTR [ebp-0xc],0x0
   1d08e:	je     0x1d0a2
   1d090:	inc    ecx
   1d091:	mov    dl,BYTE PTR [ecx]
   1d093:	inc    edi
   1d094:	cmp    DWORD PTR [ebp-0xc],0x1
   1d098:	mov    BYTE PTR [edi],dl
   1d09a:	jbe    0x1d0a2
   1d09c:	mov    cl,BYTE PTR [ecx+0x1]
   1d09f:	inc    edi
   1d0a0:	mov    BYTE PTR [edi],cl
   1d0a2:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d0a5:	jae    0x1d0de
   1d0a7:	cmp    edi,DWORD PTR [ebp-0x30]
   1d0aa:	jb     0x1cdd3
   1d0b0:	jmp    0x1d0de
   1d0b2:	mov    DWORD PTR [eax+0x18],0x1ec9c
   1d0b9:	jmp    0x1d0d8
   1d0bb:	mov    DWORD PTR [eax+0x18],0x1ecba
   1d0c2:	jmp    0x1d0d8
   1d0c4:	test   cl,0x20
   1d0c7:	je     0x1d0d1
   1d0c9:	mov    DWORD PTR [esi],0xb
   1d0cf:	jmp    0x1d0de
   1d0d1:	mov    DWORD PTR [eax+0x18],0x1ecd0
   1d0d8:	mov    DWORD PTR [esi],0x1b
   1d0de:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0e1:	shr    ecx,0x3
   1d0e4:	sub    ebx,ecx
   1d0e6:	shl    ecx,0x3
   1d0e9:	sub    DWORD PTR [ebp+0xc],ecx
   1d0ec:	xor    ecx,ecx
   1d0ee:	inc    ecx
   1d0ef:	mov    edx,ecx
   1d0f1:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0f4:	shl    edx,cl
   1d0f6:	dec    edx
   1d0f7:	mov    ecx,edx
   1d0f9:	mov    edx,DWORD PTR [ebp-0x4]
   1d0fc:	and    edx,ecx
   1d0fe:	lea    ecx,[ebx+0x1]
   1d101:	mov    DWORD PTR [eax],ecx
   1d103:	lea    ecx,[edi+0x1]
   1d106:	mov    DWORD PTR [eax+0xc],ecx
   1d109:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d10c:	sub    ecx,ebx
   1d10e:	add    ecx,0x5
   1d111:	mov    DWORD PTR [eax+0x4],ecx
   1d114:	mov    ecx,DWORD PTR [ebp-0x30]
   1d117:	sub    ecx,edi
   1d119:	add    ecx,0x101
   1d11f:	mov    DWORD PTR [eax+0x10],ecx
   1d122:	mov    eax,DWORD PTR [ebp+0xc]
   1d125:	pop    edi
   1d126:	mov    DWORD PTR [esi+0x38],edx
   1d129:	mov    DWORD PTR [esi+0x3c],eax
   1d12c:	pop    esi
   1d12d:	pop    ebx
   1d12e:	leave  
   1d12f:	ret    0x8
   1d132:	int3   
   1d133:	int3   
   1d134:	int3   
   1d135:	int3   
   1d136:	int3   
   1d137:	int3   
   1d138:	mov    edi,edi
   1d13a:	push   ebp
   1d13b:	mov    ebp,esp
   1d13d:	sub    esp,0x90
   1d143:	mov    eax,ds:0x7751c
   1d148:	xor    eax,ebp
   1d14a:	mov    DWORD PTR [ebp-0x4],eax
   1d14d:	mov    eax,DWORD PTR [ebp+0xc]
   1d150:	mov    edx,DWORD PTR [ebp+0x18]
   1d153:	mov    DWORD PTR [ebp-0x7c],eax
   1d156:	mov    eax,DWORD PTR [ebp+0x1c]
   1d159:	push   ebx
   1d15a:	mov    DWORD PTR [ebp-0x4c],eax
   1d15d:	xor    eax,eax
   1d15f:	push   esi
   1d160:	mov    esi,DWORD PTR [ebp+0x14]
   1d163:	movzx  ebx,ax
   1d166:	push   edi
   1d167:	mov    eax,ebx
   1d169:	shl    ebx,0x10
   1d16c:	push   0x8
   1d16e:	or     eax,ebx
   1d170:	pop    ecx
   1d171:	lea    edi,[ebp-0x24]
   1d174:	rep stos DWORD PTR es:[edi],eax
   1d176:	xor    edi,edi
   1d178:	xor    ecx,ecx
   1d17a:	mov    DWORD PTR [ebp-0x90],edx
   1d180:	cmp    DWORD PTR [ebp+0x10],edi
   1d183:	jbe    0x1d199
   1d185:	mov    eax,DWORD PTR [ebp-0x7c]
   1d188:	movzx  eax,WORD PTR [eax+ecx*2]
   1d18c:	lea    eax,[ebp+eax*2-0x24]
   1d190:	inc    WORD PTR [eax]
   1d193:	inc    ecx
   1d194:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d197:	jb     0x1d185
   1d199:	mov    ecx,DWORD PTR [edx]
   1d19b:	push   0xf
   1d19d:	pop    eax
   1d19e:	mov    DWORD PTR [ebp-0x54],ecx
   1d1a1:	mov    DWORD PTR [ebp-0x60],eax
   1d1a4:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d1a9:	jne    0x1d1b4
   1d1ab:	dec    eax
   1d1ac:	mov    DWORD PTR [ebp-0x60],eax
   1d1af:	cmp    eax,0x1
   1d1b2:	jae    0x1d1a4
   1d1b4:	cmp    ecx,eax
   1d1b6:	jbe    0x1d1bb
   1d1b8:	mov    DWORD PTR [ebp-0x54],eax
   1d1bb:	cmp    eax,edi
   1d1bd:	jne    0x1d1e9
   1d1bf:	mov    ecx,DWORD PTR [esi]
   1d1c1:	xor    eax,eax
   1d1c3:	mov    BYTE PTR [ebp-0x48],0x40
   1d1c7:	mov    BYTE PTR [ebp-0x47],0x1
   1d1cb:	mov    WORD PTR [ebp-0x46],ax
   1d1cf:	mov    eax,DWORD PTR [ebp-0x48]
   1d1d2:	mov    DWORD PTR [ecx],eax
   1d1d4:	add    DWORD PTR [esi],0x4
   1d1d7:	mov    ecx,DWORD PTR [esi]
   1d1d9:	mov    DWORD PTR [ecx],eax
   1d1db:	add    DWORD PTR [esi],0x4
   1d1de:	mov    DWORD PTR [edx],0x1
   1d1e4:	jmp    0x1d525
   1d1e9:	xor    ecx,ecx
   1d1eb:	inc    ecx
   1d1ec:	mov    edx,ecx
   1d1ee:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d1f3:	jne    0x1d1fb
   1d1f5:	inc    edx
   1d1f6:	cmp    edx,0xf
   1d1f9:	jbe    0x1d1ee
   1d1fb:	cmp    DWORD PTR [ebp-0x54],edx
   1d1fe:	jae    0x1d203
   1d200:	mov    DWORD PTR [ebp-0x54],edx
   1d203:	mov    edi,ecx
   1d205:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d20a:	add    edi,edi
   1d20c:	sub    edi,ebx
   1d20e:	js     0x1d29a
   1d214:	inc    ecx
   1d215:	cmp    ecx,0xf
   1d218:	jbe    0x1d205
   1d21a:	xor    ebx,ebx
   1d21c:	cmp    edi,ebx
   1d21e:	jle    0x1d22a
   1d220:	cmp    DWORD PTR [ebp+0x8],ebx
   1d223:	je     0x1d29a
   1d225:	cmp    eax,0x1
   1d228:	jne    0x1d29a
   1d22a:	xor    eax,eax
   1d22c:	push   0x2
   1d22e:	mov    WORD PTR [ebp-0x42],ax
   1d232:	pop    ecx
   1d233:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d238:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d23d:	inc    ecx
   1d23e:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d243:	inc    ecx
   1d244:	cmp    ecx,0x1e
   1d247:	jb     0x1d233
   1d249:	mov    eax,DWORD PTR [ebp-0x4c]
   1d24c:	xor    edi,edi
   1d24e:	cmp    DWORD PTR [ebp+0x10],ebx
   1d251:	jbe    0x1d27c
   1d253:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d256:	lea    ecx,[ecx+edi*2]
   1d259:	cmp    WORD PTR [ecx],bx
   1d25c:	je     0x1d276
   1d25e:	movzx  ebx,WORD PTR [ecx]
   1d261:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d266:	mov    WORD PTR [eax+ebx*2],di
   1d26a:	movzx  ecx,WORD PTR [ecx]
   1d26d:	lea    ecx,[ebp+ecx*2-0x44]
   1d271:	inc    WORD PTR [ecx]
   1d274:	xor    ebx,ebx
   1d276:	inc    edi
   1d277:	cmp    edi,DWORD PTR [ebp+0x10]
   1d27a:	jb     0x1d253
   1d27c:	mov    ecx,DWORD PTR [ebp+0x8]
   1d27f:	sub    ecx,ebx
   1d281:	je     0x1d2c4
   1d283:	dec    ecx
   1d284:	je     0x1d2a2
   1d286:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d28a:	mov    DWORD PTR [ebp-0x6c],0x75028
   1d291:	mov    DWORD PTR [ebp-0x78],0x75068
   1d298:	jmp    0x1d2d1
   1d29a:	or     eax,0xffffffff
   1d29d:	jmp    0x1d527
   1d2a2:	mov    ecx,0x202
   1d2a7:	mov    edi,0x74fa8
   1d2ac:	sub    edi,ecx
   1d2ae:	mov    DWORD PTR [ebp-0x6c],edi
   1d2b1:	mov    edi,0x74fe8
   1d2b6:	sub    edi,ecx
   1d2b8:	mov    DWORD PTR [ebp-0x78],edi
   1d2bb:	mov    DWORD PTR [ebp-0x68],0x100
   1d2c2:	jmp    0x1d2d1
   1d2c4:	mov    DWORD PTR [ebp-0x78],eax
   1d2c7:	mov    DWORD PTR [ebp-0x6c],eax
   1d2ca:	mov    DWORD PTR [ebp-0x68],0x13
   1d2d1:	mov    ecx,DWORD PTR [ebp-0x54]
   1d2d4:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2d8:	mov    edi,DWORD PTR [esi]
   1d2da:	mov    eax,edx
   1d2dc:	xor    edx,edx
   1d2de:	inc    edx
   1d2df:	shl    edx,cl
   1d2e1:	cmp    DWORD PTR [ebp+0x8],0x1
   1d2e5:	mov    DWORD PTR [ebp-0x5c],ebx
   1d2e8:	mov    DWORD PTR [ebp-0x84],eax
   1d2ee:	lea    ecx,[edx-0x1]
   1d2f1:	mov    DWORD PTR [ebp-0x50],ebx
   1d2f4:	mov    DWORD PTR [ebp-0x80],edx
   1d2f7:	mov    DWORD PTR [ebp-0x64],edx
   1d2fa:	mov    DWORD PTR [ebp-0x88],ecx
   1d300:	jne    0x1d312
   1d302:	cmp    edx,0x5b0
   1d308:	jb     0x1d312
   1d30a:	xor    eax,eax
   1d30c:	inc    eax
   1d30d:	jmp    0x1d527
   1d312:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d315:	mov    DWORD PTR [ebp-0x58],ecx
   1d318:	mov    cl,al
   1d31a:	sub    cl,BYTE PTR [ebp-0x50]
   1d31d:	mov    BYTE PTR [ebp-0x47],cl
   1d320:	mov    ecx,DWORD PTR [ebp-0x58]
   1d323:	movzx  edx,WORD PTR [ecx]
   1d326:	movzx  ecx,dx
   1d329:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d32c:	jge    0x1d338
   1d32e:	mov    BYTE PTR [ebp-0x48],0x0
   1d332:	mov    WORD PTR [ebp-0x46],dx
   1d336:	jmp    0x1d35e
   1d338:	jle    0x1d354
   1d33a:	mov    ecx,DWORD PTR [ebp-0x58]
   1d33d:	movzx  ecx,WORD PTR [ecx]
   1d340:	mov    edx,DWORD PTR [ebp-0x78]
   1d343:	add    ecx,ecx
   1d345:	mov    dl,BYTE PTR [ecx+edx*1]
   1d348:	mov    BYTE PTR [ebp-0x48],dl
   1d34b:	mov    edx,DWORD PTR [ebp-0x6c]
   1d34e:	mov    cx,WORD PTR [ecx+edx*1]
   1d352:	jmp    0x1d35a
   1d354:	mov    BYTE PTR [ebp-0x48],0x60
   1d358:	xor    ecx,ecx
   1d35a:	mov    WORD PTR [ebp-0x46],cx
   1d35e:	xor    edx,edx
   1d360:	mov    ecx,eax
   1d362:	sub    ecx,DWORD PTR [ebp-0x50]
   1d365:	inc    edx
   1d366:	shl    edx,cl
   1d368:	mov    ecx,DWORD PTR [ebp-0x80]
   1d36b:	mov    DWORD PTR [ebp-0x4c],ecx
   1d36e:	mov    DWORD PTR [ebp-0x70],ecx
   1d371:	mov    ecx,DWORD PTR [ebp-0x50]
   1d374:	shr    ebx,cl
   1d376:	add    ebx,DWORD PTR [ebp-0x4c]
   1d379:	lea    ecx,[edi+ebx*4]
   1d37c:	sub    DWORD PTR [ebp-0x4c],edx
   1d37f:	mov    ebx,edx
   1d381:	shl    ebx,0x2
   1d384:	sub    ecx,ebx
   1d386:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d38a:	mov    ebx,DWORD PTR [ebp-0x48]
   1d38d:	mov    DWORD PTR [ecx],ebx
   1d38f:	jne    0x1d37c
   1d391:	xor    edx,edx
   1d393:	lea    ecx,[eax-0x1]
   1d396:	inc    edx
   1d397:	shl    edx,cl
   1d399:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d39c:	jmp    0x1d3a0
   1d39e:	shr    edx,1
   1d3a0:	test   ecx,edx
   1d3a2:	jne    0x1d39e
   1d3a4:	test   edx,edx
   1d3a6:	je     0x1d3b1
   1d3a8:	lea    ebx,[edx-0x1]
   1d3ab:	and    ebx,ecx
   1d3ad:	add    ebx,edx
   1d3af:	jmp    0x1d3b3
   1d3b1:	xor    ebx,ebx
   1d3b3:	add    DWORD PTR [ebp-0x58],0x2
   1d3b7:	lea    ecx,[ebp+eax*2-0x24]
   1d3bb:	mov    edx,0xffff
   1d3c0:	add    WORD PTR [ecx],dx
   1d3c3:	movzx  ecx,WORD PTR [ecx]
   1d3c6:	mov    DWORD PTR [ebp-0x5c],ebx
   1d3c9:	test   cx,cx
   1d3cc:	jne    0x1d3ea
   1d3ce:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3d1:	je     0x1d4ad
   1d3d7:	mov    eax,DWORD PTR [ebp-0x58]
   1d3da:	movzx  eax,WORD PTR [eax]
   1d3dd:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d3e0:	movzx  eax,WORD PTR [ecx+eax*2]
   1d3e4:	mov    DWORD PTR [ebp-0x84],eax
   1d3ea:	mov    edx,DWORD PTR [ebp-0x54]
   1d3ed:	cmp    eax,edx
   1d3ef:	jbe    0x1d318
   1d3f5:	mov    ecx,DWORD PTR [ebp-0x88]
   1d3fb:	and    ecx,ebx
   1d3fd:	mov    DWORD PTR [ebp-0x8c],ecx
   1d403:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d406:	je     0x1d318
   1d40c:	cmp    DWORD PTR [ebp-0x50],0x0
   1d410:	jne    0x1d415
   1d412:	mov    DWORD PTR [ebp-0x50],edx
   1d415:	mov    ecx,DWORD PTR [ebp-0x70]
   1d418:	lea    edi,[edi+ecx*4]
   1d41b:	mov    ecx,eax
   1d41d:	mov    eax,DWORD PTR [ebp-0x50]
   1d420:	xor    edx,edx
   1d422:	sub    ecx,eax
   1d424:	inc    edx
   1d425:	add    eax,ecx
   1d427:	shl    edx,cl
   1d429:	cmp    eax,DWORD PTR [ebp-0x60]
   1d42c:	jae    0x1d456
   1d42e:	mov    DWORD PTR [ebp-0x4c],eax
   1d431:	lea    eax,[ebp+eax*2-0x24]
   1d435:	jmp    0x1d43a
   1d437:	mov    eax,DWORD PTR [ebp-0x70]
   1d43a:	movzx  ebx,WORD PTR [eax]
   1d43d:	sub    edx,ebx
   1d43f:	test   edx,edx
   1d441:	jle    0x1d456
   1d443:	inc    ecx
   1d444:	inc    DWORD PTR [ebp-0x4c]
   1d447:	inc    eax
   1d448:	inc    eax
   1d449:	mov    DWORD PTR [ebp-0x70],eax
   1d44c:	mov    eax,DWORD PTR [ebp-0x4c]
   1d44f:	add    edx,edx
   1d451:	cmp    eax,DWORD PTR [ebp-0x60]
   1d454:	jb     0x1d437
   1d456:	xor    eax,eax
   1d458:	inc    eax
   1d459:	mov    edx,eax
   1d45b:	shl    edx,cl
   1d45d:	add    DWORD PTR [ebp-0x64],edx
   1d460:	mov    DWORD PTR [ebp-0x80],edx
   1d463:	cmp    DWORD PTR [ebp+0x8],eax
   1d466:	jne    0x1d475
   1d468:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d46f:	jae    0x1d527
   1d475:	mov    eax,DWORD PTR [ebp-0x8c]
   1d47b:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d47e:	mov    edx,eax
   1d480:	mov    DWORD PTR [ebp-0x74],eax
   1d483:	mov    eax,DWORD PTR [esi]
   1d485:	shl    edx,0x2
   1d488:	mov    BYTE PTR [edx+eax*1],cl
   1d48b:	mov    eax,DWORD PTR [esi]
   1d48d:	mov    cl,BYTE PTR [ebp-0x54]
   1d490:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d494:	mov    eax,DWORD PTR [esi]
   1d496:	mov    ecx,edi
   1d498:	sub    ecx,eax
   1d49a:	sar    ecx,0x2
   1d49d:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d4a2:	mov    eax,DWORD PTR [ebp-0x84]
   1d4a8:	jmp    0x1d318
   1d4ad:	mov    cl,al
   1d4af:	sub    cl,BYTE PTR [ebp-0x50]
   1d4b2:	mov    BYTE PTR [ebp-0x48],0x40
   1d4b6:	mov    BYTE PTR [ebp-0x47],cl
   1d4b9:	xor    ecx,ecx
   1d4bb:	mov    WORD PTR [ebp-0x46],cx
   1d4bf:	jmp    0x1d50e
   1d4c1:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4c5:	je     0x1d4e0
   1d4c7:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4cd:	and    ecx,ebx
   1d4cf:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4d2:	je     0x1d4e0
   1d4d4:	mov    eax,DWORD PTR [ebp-0x54]
   1d4d7:	and    DWORD PTR [ebp-0x50],0x0
   1d4db:	mov    edi,DWORD PTR [esi]
   1d4dd:	mov    BYTE PTR [ebp-0x47],al
   1d4e0:	mov    ecx,DWORD PTR [ebp-0x50]
   1d4e3:	mov    edx,ebx
   1d4e5:	shr    edx,cl
   1d4e7:	mov    ecx,DWORD PTR [ebp-0x48]
   1d4ea:	mov    DWORD PTR [edi+edx*4],ecx
   1d4ed:	xor    edx,edx
   1d4ef:	lea    ecx,[eax-0x1]
   1d4f2:	inc    edx
   1d4f3:	shl    edx,cl
   1d4f5:	jmp    0x1d4f9
   1d4f7:	shr    edx,1
   1d4f9:	test   ebx,edx
   1d4fb:	jne    0x1d4f7
   1d4fd:	test   edx,edx
   1d4ff:	je     0x1d50c
   1d501:	lea    ecx,[edx-0x1]
   1d504:	and    ecx,ebx
   1d506:	add    ecx,edx
   1d508:	mov    ebx,ecx
   1d50a:	jmp    0x1d50e
   1d50c:	xor    ebx,ebx
   1d50e:	test   ebx,ebx
   1d510:	jne    0x1d4c1
   1d512:	mov    eax,DWORD PTR [ebp-0x64]
   1d515:	mov    ecx,DWORD PTR [ebp-0x54]
   1d518:	shl    eax,0x2
   1d51b:	add    DWORD PTR [esi],eax
   1d51d:	mov    eax,DWORD PTR [ebp-0x90]
   1d523:	mov    DWORD PTR [eax],ecx
   1d525:	xor    eax,eax
   1d527:	mov    ecx,DWORD PTR [ebp-0x4]
   1d52a:	pop    edi
   1d52b:	pop    esi
   1d52c:	xor    ecx,ebp
   1d52e:	pop    ebx
   1d52f:	call   0x1da31
   1d534:	leave  
   1d535:	ret    0x18
   1d538:	int3   
   1d539:	int3   
   1d53a:	int3   
   1d53b:	int3   
   1d53c:	int3   
   1d53d:	int3   
   1d53e:	mov    edi,edi
   1d540:	push   ebp
   1d541:	mov    ebp,esp
   1d543:	push   ebx
   1d544:	mov    ebx,DWORD PTR [ebp+0x10]
   1d547:	push   esi
   1d548:	mov    esi,DWORD PTR [ebp+0x8]
   1d54b:	push   edi
   1d54c:	xor    eax,eax
   1d54e:	mov    edi,esi
   1d550:	inc    eax
   1d551:	shr    edi,0x10
   1d554:	and    esi,0xffff
   1d55a:	cmp    ebx,eax
   1d55c:	jne    0x1d582
   1d55e:	mov    eax,DWORD PTR [ebp+0xc]
   1d561:	movzx  eax,BYTE PTR [eax]
   1d564:	add    esi,eax
   1d566:	mov    eax,0xfff1
   1d56b:	cmp    esi,eax
   1d56d:	jb     0x1d571
   1d56f:	sub    esi,eax
   1d571:	add    edi,esi
   1d573:	cmp    edi,eax
   1d575:	jb     0x1d754
   1d57b:	sub    edi,eax
   1d57d:	jmp    0x1d754
   1d582:	mov    ecx,DWORD PTR [ebp+0xc]
   1d585:	test   ecx,ecx
   1d587:	je     0x1d75b
   1d58d:	cmp    ebx,0x10
   1d590:	jb     0x1d717
   1d596:	cmp    ebx,0x15b0
   1d59c:	jb     0x1d66a
   1d5a2:	mov    eax,ebx
   1d5a4:	mov    ebx,0x15b0
   1d5a9:	xor    edx,edx
   1d5ab:	div    ebx
   1d5ad:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5b0:	mov    DWORD PTR [ebp+0xc],eax
   1d5b3:	sub    ebx,0x15b0
   1d5b9:	mov    eax,0x15b
   1d5be:	movzx  edx,BYTE PTR [ecx]
   1d5c1:	add    esi,edx
   1d5c3:	movzx  edx,BYTE PTR [ecx+0x1]
   1d5c7:	add    edi,esi
   1d5c9:	add    esi,edx
   1d5cb:	movzx  edx,BYTE PTR [ecx+0x2]
   1d5cf:	add    edi,esi
   1d5d1:	add    esi,edx
   1d5d3:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5d7:	add    edi,esi
   1d5d9:	add    esi,edx
   1d5db:	movzx  edx,BYTE PTR [ecx+0x4]
   1d5df:	add    edi,esi
   1d5e1:	add    esi,edx
   1d5e3:	movzx  edx,BYTE PTR [ecx+0x5]
   1d5e7:	add    edi,esi
   1d5e9:	add    esi,edx
   1d5eb:	movzx  edx,BYTE PTR [ecx+0x6]
   1d5ef:	add    edi,esi
   1d5f1:	add    esi,edx
   1d5f3:	movzx  edx,BYTE PTR [ecx+0x7]
   1d5f7:	add    edi,esi
   1d5f9:	add    esi,edx
   1d5fb:	movzx  edx,BYTE PTR [ecx+0x8]
   1d5ff:	add    edi,esi
   1d601:	add    esi,edx
   1d603:	movzx  edx,BYTE PTR [ecx+0x9]
   1d607:	add    edi,esi
   1d609:	add    esi,edx
   1d60b:	movzx  edx,BYTE PTR [ecx+0xa]
   1d60f:	add    edi,esi
   1d611:	add    esi,edx
   1d613:	movzx  edx,BYTE PTR [ecx+0xb]
   1d617:	add    edi,esi
   1d619:	add    esi,edx
   1d61b:	movzx  edx,BYTE PTR [ecx+0xc]
   1d61f:	add    edi,esi
   1d621:	add    esi,edx
   1d623:	movzx  edx,BYTE PTR [ecx+0xd]
   1d627:	add    edi,esi
   1d629:	add    esi,edx
   1d62b:	movzx  edx,BYTE PTR [ecx+0xe]
   1d62f:	add    edi,esi
   1d631:	add    esi,edx
   1d633:	movzx  edx,BYTE PTR [ecx+0xf]
   1d637:	add    edi,esi
   1d639:	add    esi,edx
   1d63b:	add    edi,esi
   1d63d:	add    ecx,0x10
   1d640:	dec    eax
   1d641:	jne    0x1d5be
   1d647:	mov    eax,esi
   1d649:	xor    edx,edx
   1d64b:	mov    esi,0xfff1
   1d650:	div    esi
   1d652:	mov    eax,edi
   1d654:	mov    edi,0xfff1
   1d659:	mov    esi,edx
   1d65b:	xor    edx,edx
   1d65d:	div    edi
   1d65f:	dec    DWORD PTR [ebp+0xc]
   1d662:	mov    edi,edx
   1d664:	jne    0x1d5b3
   1d66a:	test   ebx,ebx
   1d66c:	je     0x1d754
   1d672:	cmp    ebx,0x10
   1d675:	jb     0x1d739
   1d67b:	mov    eax,ebx
   1d67d:	shr    eax,0x4
   1d680:	movzx  edx,BYTE PTR [ecx]
   1d683:	add    esi,edx
   1d685:	movzx  edx,BYTE PTR [ecx+0x1]
   1d689:	add    edi,esi
   1d68b:	add    esi,edx
   1d68d:	movzx  edx,BYTE PTR [ecx+0x2]
   1d691:	add    edi,esi
   1d693:	add    esi,edx
   1d695:	movzx  edx,BYTE PTR [ecx+0x3]
   1d699:	add    edi,esi
   1d69b:	add    esi,edx
   1d69d:	movzx  edx,BYTE PTR [ecx+0x4]
   1d6a1:	add    edi,esi
   1d6a3:	add    esi,edx
   1d6a5:	movzx  edx,BYTE PTR [ecx+0x5]
   1d6a9:	add    edi,esi
   1d6ab:	add    esi,edx
   1d6ad:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6b1:	add    edi,esi
   1d6b3:	add    esi,edx
   1d6b5:	movzx  edx,BYTE PTR [ecx+0x7]
   1d6b9:	add    edi,esi
   1d6bb:	add    esi,edx
   1d6bd:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6c1:	add    edi,esi
   1d6c3:	add    esi,edx
   1d6c5:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6c9:	add    edi,esi
   1d6cb:	add    esi,edx
   1d6cd:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6d1:	add    edi,esi
   1d6d3:	add    esi,edx
   1d6d5:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6d9:	add    edi,esi
   1d6db:	add    esi,edx
   1d6dd:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6e1:	add    edi,esi
   1d6e3:	add    esi,edx
   1d6e5:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6e9:	add    edi,esi
   1d6eb:	add    esi,edx
   1d6ed:	movzx  edx,BYTE PTR [ecx+0xe]
   1d6f1:	add    edi,esi
   1d6f3:	add    esi,edx
   1d6f5:	movzx  edx,BYTE PTR [ecx+0xf]
   1d6f9:	add    edi,esi
   1d6fb:	add    esi,edx
   1d6fd:	sub    ebx,0x10
   1d700:	add    edi,esi
   1d702:	add    ecx,0x10
   1d705:	dec    eax
   1d706:	jne    0x1d680
   1d70c:	jmp    0x1d739
   1d70e:	movzx  eax,BYTE PTR [ecx]
   1d711:	dec    ebx
   1d712:	add    esi,eax
   1d714:	inc    ecx
   1d715:	add    edi,esi
   1d717:	test   ebx,ebx
   1d719:	jne    0x1d70e
   1d71b:	mov    ecx,0xfff1
   1d720:	cmp    esi,ecx
   1d722:	jb     0x1d726
   1d724:	sub    esi,ecx
   1d726:	mov    eax,edi
   1d728:	xor    edx,edx
   1d72a:	div    ecx
   1d72c:	mov    eax,edx
   1d72e:	jmp    0x1d756
   1d730:	movzx  eax,BYTE PTR [ecx]
   1d733:	dec    ebx
   1d734:	add    esi,eax
   1d736:	inc    ecx
   1d737:	add    edi,esi
   1d739:	test   ebx,ebx
   1d73b:	jne    0x1d730
   1d73d:	mov    eax,esi
   1d73f:	mov    ecx,0xfff1
   1d744:	xor    edx,edx
   1d746:	mov    esi,ecx
   1d748:	div    esi
   1d74a:	mov    eax,edi
   1d74c:	mov    esi,edx
   1d74e:	xor    edx,edx
   1d750:	div    ecx
   1d752:	mov    edi,edx
   1d754:	mov    eax,edi
   1d756:	shl    eax,0x10
   1d759:	or     eax,esi
   1d75b:	pop    edi
   1d75c:	pop    esi
   1d75d:	pop    ebx
   1d75e:	pop    ebp
   1d75f:	ret    0xc
   1d762:	int3   
   1d763:	int3   
   1d764:	int3   
   1d765:	int3   
   1d766:	int3   
   1d767:	int3   
   1d768:	mov    edi,edi
   1d76a:	push   ebp
   1d76b:	mov    ebp,esp
   1d76d:	push   ecx
   1d76e:	cmp    DWORD PTR [ebp+0x8],0x0
   1d772:	push   esi
   1d773:	not    eax
   1d775:	mov    ecx,0xff
   1d77a:	je     0x1d798
   1d77c:	test   dl,0x3
   1d77f:	je     0x1d798
   1d781:	movzx  esi,BYTE PTR [edx]
   1d784:	xor    esi,eax
   1d786:	and    esi,ecx
   1d788:	shr    eax,0x8
   1d78b:	xor    eax,DWORD PTR [esi*4+0x750a8]
   1d792:	inc    edx
   1d793:	dec    DWORD PTR [ebp+0x8]
   1d796:	jne    0x1d77c
   1d798:	cmp    DWORD PTR [ebp+0x8],0x20
   1d79c:	push   ebx
   1d79d:	push   edi
   1d79e:	push   0x4
   1d7a0:	mov    esi,edx
   1d7a2:	pop    edi
   1d7a3:	jb     0x1d967
   1d7a9:	mov    edx,DWORD PTR [ebp+0x8]
   1d7ac:	shr    edx,0x5
   1d7af:	mov    DWORD PTR [ebp-0x4],edx
   1d7b2:	xor    eax,DWORD PTR [esi]
   1d7b4:	add    esi,edi
   1d7b6:	mov    edx,eax
   1d7b8:	shr    edx,0x10
   1d7bb:	mov    ebx,eax
   1d7bd:	shr    ebx,0x8
   1d7c0:	and    edx,ecx
   1d7c2:	mov    edx,DWORD PTR [edx*4+0x754a8]
   1d7c9:	and    ebx,ecx
   1d7cb:	xor    edx,DWORD PTR [ebx*4+0x758a8]
   1d7d2:	mov    ebx,eax
   1d7d4:	shr    ebx,0x18
   1d7d7:	xor    edx,DWORD PTR [ebx*4+0x750a8]
   1d7de:	and    eax,ecx
   1d7e0:	xor    edx,DWORD PTR [eax*4+0x75ca8]
   1d7e7:	xor    edx,DWORD PTR [esi]
   1d7e9:	add    esi,edi
   1d7eb:	mov    eax,edx
   1d7ed:	shr    eax,0x10
   1d7f0:	mov    ebx,edx
   1d7f2:	shr    ebx,0x8
   1d7f5:	and    eax,ecx
   1d7f7:	mov    eax,DWORD PTR [eax*4+0x754a8]
   1d7fe:	and    ebx,ecx
   1d800:	xor    eax,DWORD PTR [ebx*4+0x758a8]
   1d807:	mov    ebx,edx
   1d809:	shr    ebx,0x18
   1d80c:	xor    eax,DWORD PTR [ebx*4+0x750a8]
   1d813:	and    edx,ecx
   1d815:	xor    eax,DWORD PTR [edx*4+0x75ca8]
   1d81c:	xor    eax,DWORD PTR [esi]
   1d81e:	add    esi,edi
   1d820:	mov    edx,eax
   1d822:	shr    edx,0x10
   1d825:	mov    ebx,eax
   1d827:	and    edx,ecx
   1d829:	mov    edx,DWORD PTR [edx*4+0x754a8]
   1d830:	shr    ebx,0x8
   1d833:	and    ebx,ecx
   1d835:	xor    edx,DWORD PTR [ebx*4+0x758a8]
   1d83c:	mov    ebx,eax
   1d83e:	shr    ebx,0x18
   1d841:	xor    edx,DWORD PTR [ebx*4+0x750a8]
   1d848:	and    eax,ecx
   1d84a:	xor    edx,DWORD PTR [eax*4+0x75ca8]
   1d851:	xor    edx,DWORD PTR [esi]
   1d853:	add    esi,edi
   1d855:	mov    eax,edx
   1d857:	shr    eax,0x10
   1d85a:	mov    ebx,edx
   1d85c:	shr    ebx,0x8
   1d85f:	and    eax,ecx
   1d861:	mov    eax,DWORD PTR [eax*4+0x754a8]
   1d868:	and    ebx,ecx
   1d86a:	xor    eax,DWORD PTR [ebx*4+0x758a8]
   1d871:	mov    ebx,edx
   1d873:	shr    ebx,0x18
   1d876:	xor    eax,DWORD PTR [ebx*4+0x750a8]
   1d87d:	and    edx,ecx
   1d87f:	xor    eax,DWORD PTR [edx*4+0x75ca8]
   1d886:	xor    eax,DWORD PTR [esi]
   1d888:	add    esi,edi
   1d88a:	mov    edx,eax
   1d88c:	shr    edx,0x10
   1d88f:	mov    ebx,eax
   1d891:	and    edx,ecx
   1d893:	mov    edx,DWORD PTR [edx*4+0x754a8]
   1d89a:	shr    ebx,0x8
   1d89d:	and    ebx,ecx
   1d89f:	xor    edx,DWORD PTR [ebx*4+0x758a8]
   1d8a6:	mov    ebx,eax
   1d8a8:	shr    ebx,0x18
   1d8ab:	xor    edx,DWORD PTR [ebx*4+0x750a8]
   1d8b2:	and    eax,ecx
   1d8b4:	xor    edx,DWORD PTR [eax*4+0x75ca8]
   1d8bb:	xor    edx,DWORD PTR [esi]
   1d8bd:	add    esi,edi
   1d8bf:	mov    eax,edx
   1d8c1:	shr    eax,0x10
   1d8c4:	and    eax,ecx
   1d8c6:	mov    ebx,edx
   1d8c8:	mov    eax,DWORD PTR [eax*4+0x754a8]
   1d8cf:	shr    ebx,0x8
   1d8d2:	and    ebx,ecx
   1d8d4:	xor    eax,DWORD PTR [ebx*4+0x758a8]
   1d8db:	mov    ebx,edx
   1d8dd:	shr    ebx,0x18
   1d8e0:	xor    eax,DWORD PTR [ebx*4+0x750a8]
   1d8e7:	and    edx,ecx
   1d8e9:	xor    eax,DWORD PTR [edx*4+0x75ca8]
   1d8f0:	sub    DWORD PTR [ebp+0x8],0x20
   1d8f4:	xor    eax,DWORD PTR [esi]
   1d8f6:	add    esi,edi
   1d8f8:	mov    edx,eax
   1d8fa:	mov    ebx,eax
   1d8fc:	shr    edx,0x10
   1d8ff:	shr    ebx,0x8
   1d902:	and    edx,ecx
   1d904:	mov    edx,DWORD PTR [edx*4+0x754a8]
   1d90b:	and    ebx,ecx
   1d90d:	xor    edx,DWORD PTR [ebx*4+0x758a8]
   1d914:	mov    ebx,eax
   1d916:	shr    ebx,0x18
   1d919:	xor    edx,DWORD PTR [ebx*4+0x750a8]
   1d920:	and    eax,ecx
   1d922:	xor    edx,DWORD PTR [eax*4+0x75ca8]
   1d929:	xor    edx,DWORD PTR [esi]
   1d92b:	add    esi,edi
   1d92d:	mov    eax,edx
   1d92f:	shr    eax,0x10
   1d932:	and    eax,ecx
   1d934:	mov    eax,DWORD PTR [eax*4+0x754a8]
   1d93b:	mov    ebx,edx
   1d93d:	shr    ebx,0x8
   1d940:	and    ebx,ecx
   1d942:	xor    eax,DWORD PTR [ebx*4+0x758a8]
   1d949:	mov    ebx,edx
   1d94b:	shr    ebx,0x18
   1d94e:	xor    eax,DWORD PTR [ebx*4+0x750a8]
   1d955:	and    edx,ecx
   1d957:	xor    eax,DWORD PTR [edx*4+0x75ca8]
   1d95e:	dec    DWORD PTR [ebp-0x4]
   1d961:	jne    0x1d7b2
   1d967:	cmp    DWORD PTR [ebp+0x8],edi
   1d96a:	jb     0x1d9b4
   1d96c:	mov    edx,DWORD PTR [ebp+0x8]
   1d96f:	shr    edx,0x2
   1d972:	mov    DWORD PTR [ebp-0x4],edx
   1d975:	xor    eax,DWORD PTR [esi]
   1d977:	sub    DWORD PTR [ebp+0x8],edi
   1d97a:	mov    edx,eax
   1d97c:	shr    edx,0x10
   1d97f:	and    edx,ecx
   1d981:	mov    edx,DWORD PTR [edx*4+0x754a8]
   1d988:	mov    ebx,eax
   1d98a:	shr    ebx,0x8
   1d98d:	and    ebx,ecx
   1d98f:	xor    edx,DWORD PTR [ebx*4+0x758a8]
   1d996:	mov    ebx,eax
   1d998:	shr    ebx,0x18
   1d99b:	xor    edx,DWORD PTR [ebx*4+0x750a8]
   1d9a2:	and    eax,ecx
   1d9a4:	xor    edx,DWORD PTR [eax*4+0x75ca8]
   1d9ab:	add    esi,edi
   1d9ad:	dec    DWORD PTR [ebp-0x4]
   1d9b0:	mov    eax,edx
   1d9b2:	jne    0x1d975
   1d9b4:	cmp    DWORD PTR [ebp+0x8],0x0
   1d9b8:	pop    edi
   1d9b9:	pop    ebx
   1d9ba:	je     0x1d9d3
   1d9bc:	movzx  edx,BYTE PTR [esi]
   1d9bf:	xor    edx,eax
   1d9c1:	and    edx,ecx
   1d9c3:	shr    eax,0x8
   1d9c6:	xor    eax,DWORD PTR [edx*4+0x750a8]
   1d9cd:	inc    esi
   1d9ce:	dec    DWORD PTR [ebp+0x8]
   1d9d1:	jne    0x1d9bc
   1d9d3:	not    eax
   1d9d5:	pop    esi
   1d9d6:	leave  
   1d9d7:	ret    0x4
   1d9da:	int3   
   1d9db:	int3   
   1d9dc:	int3   
   1d9dd:	int3   
   1d9de:	int3   
   1d9df:	int3   
   1d9e0:	mov    edi,edi
   1d9e2:	push   ebp
   1d9e3:	mov    ebp,esp
   1d9e5:	mov    edx,DWORD PTR [ebp+0xc]
   1d9e8:	test   edx,edx
   1d9ea:	jne    0x1d9f0
   1d9ec:	xor    eax,eax
   1d9ee:	jmp    0x1d9fb
   1d9f0:	push   DWORD PTR [ebp+0x10]
   1d9f3:	mov    eax,DWORD PTR [ebp+0x8]
   1d9f6:	call   0x1d768
   1d9fb:	pop    ebp
   1d9fc:	ret    0xc
   1d9ff:	int3   
   1da00:	int3   
   1da01:	int3   
   1da02:	int3   
   1da03:	int3   
   1da04:	mov    edi,edi
   1da06:	push   ebp
   1da07:	mov    ebp,esp
   1da09:	push   0x20
   1da0b:	push   0x61737973
   1da10:	push   DWORD PTR [ebp+0x8]
   1da13:	push   0x1
   1da15:	call   DWORD PTR ds:0x1f060
   1da1b:	test   eax,eax
   1da1d:	jne    0x1da2a
   1da1f:	push   0xc000009a
   1da24:	call   DWORD PTR ds:0x1f040
   1da2a:	pop    ebp
   1da2b:	ret    
   1da2c:	int3   
   1da2d:	int3   
   1da2e:	int3   
   1da2f:	int3   
   1da30:	int3   
   1da31:	cmp    ecx,DWORD PTR ds:0x7751c
   1da37:	jne    0x1da3c
   1da39:	ret    0x0
   1da3c:	jmp    0x1da46
   1da41:	int3   
   1da42:	int3   
   1da43:	int3   
   1da44:	int3   
   1da45:	int3   
   1da46:	mov    edi,edi
   1da48:	push   ebp
   1da49:	mov    ebp,esp
   1da4b:	push   ecx
   1da4c:	mov    DWORD PTR [ebp-0x4],ecx
   1da4f:	push   0x0
   1da51:	push   DWORD PTR ds:0x77520
   1da57:	push   DWORD PTR ds:0x7751c
   1da5d:	push   DWORD PTR [ebp-0x4]
   1da60:	push   0xf7
   1da65:	call   DWORD PTR ds:0x1f058
   1da6b:	int3   
   1da6c:	int3   
   1da6d:	int3   
   1da6e:	int3   
   1da6f:	int3   
   1da70:	int3   
   1da71:	int3   
   1da72:	jmp    DWORD PTR ds:0x1f00c
   1da78:	int3   
   1da79:	int3   
   1da7a:	int3   
   1da7b:	int3   
   1da7c:	int3   
   1da7d:	int3   
   1da7e:	jmp    DWORD PTR ds:0x1f010
   1da84:	int3   
   1da85:	int3   
   1da86:	int3   
   1da87:	int3   
   1da88:	int3   
   1da89:	int3   
   1da8a:	jmp    DWORD PTR ds:0x1f024
   1da90:	int3   
   1da91:	int3   
   1da92:	int3   
   1da93:	int3   
   1da94:	int3   
   1da95:	int3   
   1da96:	jmp    DWORD PTR ds:0x1f030
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	int3   
   1da9f:	int3   
   1daa0:	int3   
   1daa1:	int3   
   1daa2:	jmp    DWORD PTR ds:0x1f038
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	int3   
   1daab:	int3   
   1daac:	int3   
   1daad:	int3   
   1daae:	jmp    DWORD PTR ds:0x1f048
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	int3   
   1dab9:	int3   
   1daba:	jmp    DWORD PTR ds:0x1f050
   1dac0:	int3   
   1dac1:	int3   
   1dac2:	int3   
   1dac3:	int3   
   1dac4:	int3   
   1dac5:	int3   
   1dac6:	int3   
   1dac7:	int3   
   1dac8:	push   0x1db30
   1dacd:	push   DWORD PTR fs:0x0
   1dad4:	mov    eax,DWORD PTR [esp+0x10]
   1dad8:	mov    DWORD PTR [esp+0x10],ebp
   1dadc:	lea    ebp,[esp+0x10]
   1dae0:	sub    esp,eax
   1dae2:	push   ebx
   1dae3:	push   esi
   1dae4:	push   edi
   1dae5:	mov    eax,ds:0x7751c
   1daea:	xor    DWORD PTR [ebp-0x4],eax
   1daed:	xor    eax,ebp
   1daef:	push   eax
   1daf0:	mov    DWORD PTR [ebp-0x18],esp
   1daf3:	push   DWORD PTR [ebp-0x8]
   1daf6:	mov    eax,DWORD PTR [ebp-0x4]
   1daf9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db00:	mov    DWORD PTR [ebp-0x8],eax
   1db03:	lea    eax,[ebp-0x10]
   1db06:	mov    fs:0x0,eax
   1db0c:	ret    
   1db0d:	mov    ecx,DWORD PTR [ebp-0x10]
   1db10:	mov    DWORD PTR fs:0x0,ecx
   1db17:	pop    ecx
   1db18:	pop    edi
   1db19:	pop    edi
   1db1a:	pop    esi
   1db1b:	pop    ebx
   1db1c:	mov    esp,ebp
   1db1e:	pop    ebp
   1db1f:	push   ecx
   1db20:	ret    
   1db21:	int3   
   1db22:	int3   
   1db23:	int3   
   1db24:	int3   
   1db25:	int3   
   1db26:	int3   
   1db27:	int3   
   1db28:	int3   
   1db29:	int3   
   1db2a:	int3   
   1db2b:	int3   
   1db2c:	int3   
   1db2d:	int3   
   1db2e:	int3   
   1db2f:	int3   
   1db30:	mov    edi,edi
   1db32:	push   ebp
   1db33:	mov    ebp,esp
   1db35:	sub    esp,0x14
   1db38:	push   ebx
   1db39:	mov    ebx,DWORD PTR [ebp+0xc]
   1db3c:	push   esi
   1db3d:	mov    esi,DWORD PTR [ebx+0x8]
   1db40:	xor    esi,DWORD PTR ds:0x7751c
   1db46:	push   edi
   1db47:	mov    eax,DWORD PTR [esi]
   1db49:	mov    BYTE PTR [ebp-0x1],0x0
   1db4d:	mov    DWORD PTR [ebp-0x8],0x1
   1db54:	lea    edi,[ebx+0x10]
   1db57:	cmp    eax,0xfffffffe
   1db5a:	je     0x1db69
   1db5c:	mov    ecx,DWORD PTR [esi+0x4]
   1db5f:	add    ecx,edi
   1db61:	xor    ecx,DWORD PTR [eax+edi*1]
   1db64:	call   0x1da31
   1db69:	mov    ecx,DWORD PTR [esi+0xc]
   1db6c:	mov    eax,DWORD PTR [esi+0x8]
   1db6f:	add    ecx,edi
   1db71:	xor    ecx,DWORD PTR [eax+edi*1]
   1db74:	call   0x1da31
   1db79:	mov    eax,DWORD PTR [ebp+0x8]
   1db7c:	test   BYTE PTR [eax+0x4],0x66
   1db80:	jne    0x1dc68
   1db86:	mov    ecx,DWORD PTR [ebp+0x10]
   1db89:	lea    edx,[ebp-0x14]
   1db8c:	mov    DWORD PTR [ebx-0x4],edx
   1db8f:	mov    ebx,DWORD PTR [ebx+0xc]
   1db92:	mov    DWORD PTR [ebp-0x14],eax
   1db95:	mov    DWORD PTR [ebp-0x10],ecx
   1db98:	cmp    ebx,0xfffffffe
   1db9b:	je     0x1dbfc
   1db9d:	lea    ecx,[ecx+0x0]
   1dba0:	lea    eax,[ebx+ebx*2]
   1dba3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dba7:	lea    eax,[esi+eax*4+0x10]
   1dbab:	mov    DWORD PTR [ebp-0xc],eax
   1dbae:	mov    eax,DWORD PTR [eax]
   1dbb0:	mov    DWORD PTR [ebp+0x8],eax
   1dbb3:	test   ecx,ecx
   1dbb5:	je     0x1dbcb
   1dbb7:	mov    edx,edi
   1dbb9:	call   0x1dd71
   1dbbe:	mov    BYTE PTR [ebp-0x1],0x1
   1dbc2:	test   eax,eax
   1dbc4:	jl     0x1dc06
   1dbc6:	jg     0x1dc0f
   1dbc8:	mov    eax,DWORD PTR [ebp+0x8]
   1dbcb:	mov    ebx,eax
   1dbcd:	cmp    eax,0xfffffffe
   1dbd0:	jne    0x1dba0
   1dbd2:	cmp    BYTE PTR [ebp-0x1],0x0
   1dbd6:	je     0x1dbfc
   1dbd8:	mov    eax,DWORD PTR [esi]
   1dbda:	cmp    eax,0xfffffffe
   1dbdd:	je     0x1dbec
   1dbdf:	mov    ecx,DWORD PTR [esi+0x4]
   1dbe2:	add    ecx,edi
   1dbe4:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbe7:	call   0x1da31
   1dbec:	mov    ecx,DWORD PTR [esi+0xc]
   1dbef:	mov    edx,DWORD PTR [esi+0x8]
   1dbf2:	add    ecx,edi
   1dbf4:	xor    ecx,DWORD PTR [edx+edi*1]
   1dbf7:	call   0x1da31
   1dbfc:	mov    eax,DWORD PTR [ebp-0x8]
   1dbff:	pop    edi
   1dc00:	pop    esi
   1dc01:	pop    ebx
   1dc02:	mov    esp,ebp
   1dc04:	pop    ebp
   1dc05:	ret    
   1dc06:	mov    DWORD PTR [ebp-0x8],0x0
   1dc0d:	jmp    0x1dbd8
   1dc0f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc12:	call   0x1dd9a
   1dc17:	mov    eax,DWORD PTR [ebp+0xc]
   1dc1a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc1d:	je     0x1dc31
   1dc1f:	push   0x7751c
   1dc24:	push   edi
   1dc25:	mov    edx,ebx
   1dc27:	mov    ecx,eax
   1dc29:	call   0x1ddb4
   1dc2e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc31:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc34:	mov    DWORD PTR [eax+0xc],ecx
   1dc37:	mov    eax,DWORD PTR [esi]
   1dc39:	cmp    eax,0xfffffffe
   1dc3c:	je     0x1dc4b
   1dc3e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc41:	add    ecx,edi
   1dc43:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc46:	call   0x1da31
   1dc4b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc4e:	mov    edx,DWORD PTR [esi+0x8]
   1dc51:	add    ecx,edi
   1dc53:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc56:	call   0x1da31
   1dc5b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc5e:	mov    ecx,DWORD PTR [eax+0x8]
   1dc61:	mov    edx,edi
   1dc63:	call   0x1dd88
   1dc68:	mov    edx,0xfffffffe
   1dc6d:	cmp    DWORD PTR [ebx+0xc],edx
   1dc70:	je     0x1dbfc
   1dc72:	push   0x7751c
   1dc77:	push   edi
   1dc78:	mov    ecx,ebx
   1dc7a:	call   0x1ddb4
   1dc7f:	jmp    0x1dbd8
   1dc84:	int3   
   1dc85:	int3   
   1dc86:	int3   
   1dc87:	int3   
   1dc88:	int3   
   1dc89:	int3   
   1dc8a:	int3   
   1dc8b:	int3   
   1dc8c:	push   ebx
   1dc8d:	push   esi
   1dc8e:	push   edi
   1dc8f:	mov    edx,DWORD PTR [esp+0x10]
   1dc93:	mov    eax,DWORD PTR [esp+0x14]
   1dc97:	mov    ecx,DWORD PTR [esp+0x18]
   1dc9b:	push   ebp
   1dc9c:	push   edx
   1dc9d:	push   eax
   1dc9e:	push   ecx
   1dc9f:	push   ecx
   1dca0:	push   0x1dd0f
   1dca5:	push   DWORD PTR fs:0x0
   1dcac:	mov    eax,ds:0x7751c
   1dcb1:	xor    eax,esp
   1dcb3:	mov    DWORD PTR [esp+0x8],eax
   1dcb7:	mov    DWORD PTR fs:0x0,esp
   1dcbe:	mov    eax,DWORD PTR [esp+0x30]
   1dcc2:	mov    ebx,DWORD PTR [eax+0x8]
   1dcc5:	mov    ecx,DWORD PTR [esp+0x2c]
   1dcc9:	xor    ebx,DWORD PTR [ecx]
   1dccb:	mov    esi,DWORD PTR [eax+0xc]
   1dcce:	cmp    esi,0xfffffffe
   1dcd1:	je     0x1dd01
   1dcd3:	mov    edx,DWORD PTR [esp+0x34]
   1dcd7:	cmp    edx,0xfffffffe
   1dcda:	je     0x1dce0
   1dcdc:	cmp    esi,edx
   1dcde:	jbe    0x1dd01
   1dce0:	lea    esi,[esi+esi*2]
   1dce3:	lea    ebx,[ebx+esi*4+0x10]
   1dce7:	mov    ecx,DWORD PTR [ebx]
   1dce9:	mov    DWORD PTR [eax+0xc],ecx
   1dcec:	cmp    DWORD PTR [ebx+0x4],0x0
   1dcf0:	jne    0x1dcbe
   1dcf2:	mov    ecx,0x1
   1dcf7:	mov    eax,DWORD PTR [ebx+0x8]
   1dcfa:	call   0x1de2c
   1dcff:	jmp    0x1dcbe
   1dd01:	pop    DWORD PTR fs:0x0
   1dd08:	add    esp,0x18
   1dd0b:	pop    edi
   1dd0c:	pop    esi
   1dd0d:	pop    ebx
   1dd0e:	ret    
   1dd0f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd13:	test   DWORD PTR [ecx+0x4],0x6
   1dd1a:	mov    eax,0x1
   1dd1f:	je     0x1dd54
   1dd21:	mov    eax,DWORD PTR [esp+0x8]
   1dd25:	mov    ecx,DWORD PTR [eax+0x8]
   1dd28:	xor    ecx,eax
   1dd2a:	call   0x1da31
   1dd2f:	push   ebp
   1dd30:	mov    ebp,DWORD PTR [eax+0x18]
   1dd33:	push   DWORD PTR [eax+0xc]
   1dd36:	push   DWORD PTR [eax+0x10]
   1dd39:	push   DWORD PTR [eax+0x14]
   1dd3c:	call   0x1dc8c
   1dd41:	add    esp,0xc
   1dd44:	pop    ebp
   1dd45:	mov    eax,DWORD PTR [esp+0x8]
   1dd49:	mov    edx,DWORD PTR [esp+0x10]
   1dd4d:	mov    DWORD PTR [edx],eax
   1dd4f:	mov    eax,0x3
   1dd54:	ret    
   1dd55:	push   ebp
   1dd56:	mov    ecx,DWORD PTR [esp+0x8]
   1dd5a:	mov    ebp,DWORD PTR [ecx]
   1dd5c:	push   DWORD PTR [ecx+0x1c]
   1dd5f:	push   DWORD PTR [ecx+0x18]
   1dd62:	push   DWORD PTR [ecx+0x28]
   1dd65:	call   0x1dc8c
   1dd6a:	add    esp,0xc
   1dd6d:	pop    ebp
   1dd6e:	ret    0x4
   1dd71:	push   ebp
   1dd72:	push   esi
   1dd73:	push   edi
   1dd74:	push   ebx
   1dd75:	mov    ebp,edx
   1dd77:	xor    eax,eax
   1dd79:	xor    ebx,ebx
   1dd7b:	xor    edx,edx
   1dd7d:	xor    esi,esi
   1dd7f:	xor    edi,edi
   1dd81:	call   ecx
   1dd83:	pop    ebx
   1dd84:	pop    edi
   1dd85:	pop    esi
   1dd86:	pop    ebp
   1dd87:	ret    
   1dd88:	mov    ebp,edx
   1dd8a:	mov    esi,ecx
   1dd8c:	mov    eax,ecx
   1dd8e:	xor    eax,eax
   1dd90:	xor    ebx,ebx
   1dd92:	xor    ecx,ecx
   1dd94:	xor    edx,edx
   1dd96:	xor    edi,edi
   1dd98:	jmp    esi
   1dd9a:	push   ebp
   1dd9b:	mov    ebp,esp
   1dd9d:	push   ebx
   1dd9e:	push   esi
   1dd9f:	push   edi
   1dda0:	push   0x0
   1dda2:	push   0x0
   1dda4:	push   0x1ddaf
   1dda9:	push   ecx
   1ddaa:	call   0x1de34
   1ddaf:	pop    edi
   1ddb0:	pop    esi
   1ddb1:	pop    ebx
   1ddb2:	pop    ebp
   1ddb3:	ret    
   1ddb4:	push   ebp
   1ddb5:	mov    ebp,DWORD PTR [esp+0x8]
   1ddb9:	push   edx
   1ddba:	push   ecx
   1ddbb:	push   DWORD PTR [esp+0x14]
   1ddbf:	call   0x1dc8c
   1ddc4:	add    esp,0xc
   1ddc7:	pop    ebp
   1ddc8:	ret    0x8
   1ddcb:	int3   
   1ddcc:	int3   
   1ddcd:	int3   
   1ddce:	int3   
   1ddcf:	int3   
   1ddd0:	push   0x1db30
   1ddd5:	push   DWORD PTR fs:0x0
   1dddc:	mov    eax,DWORD PTR [esp+0x10]
   1dde0:	mov    DWORD PTR [esp+0x10],ebp
   1dde4:	lea    ebp,[esp+0x10]
   1dde8:	sub    esp,eax
   1ddea:	push   ebx
   1ddeb:	push   esi
   1ddec:	push   edi
   1dded:	mov    eax,ds:0x7751c
   1ddf2:	xor    DWORD PTR [ebp-0x4],eax
   1ddf5:	xor    eax,ebp
   1ddf7:	mov    DWORD PTR [ebp-0x1c],eax
   1ddfa:	push   eax
   1ddfb:	mov    DWORD PTR [ebp-0x18],esp
   1ddfe:	push   DWORD PTR [ebp-0x8]
   1de01:	mov    eax,DWORD PTR [ebp-0x4]
   1de04:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de0b:	mov    DWORD PTR [ebp-0x8],eax
   1de0e:	lea    eax,[ebp-0x10]
   1de11:	mov    fs:0x0,eax
   1de17:	ret    
   1de18:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de1b:	xor    ecx,ebp
   1de1d:	call   0x1da31
   1de22:	jmp    0x1db0d
   1de27:	int3   
   1de28:	int3   
   1de29:	int3   
   1de2a:	int3   
   1de2b:	int3   
   1de2c:	call   eax
   1de2e:	ret    
   1de2f:	int3   
   1de30:	int3   
   1de31:	int3   
   1de32:	int3   
   1de33:	int3   
   1de34:	jmp    DWORD PTR ds:0x1f064
   1de3a:	pop    esp
   1de3b:	add    BYTE PTR [eax],al
   1de3d:	add    BYTE PTR [eax],al
   1de3f:	add    BYTE PTR [ebx+0x0],ch
   1de42:	bound  eax,QWORD PTR [eax]
   1de44:	add    BYTE PTR fs:[ecx+0x0],dh
   1de48:	add    BYTE PTR [eax],al
   1de4a:	add    BYTE PTR fs:[ebx],dh
   1de4d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de51:	add    BYTE PTR [eax],al
   1de53:	add    BYTE PTR [esi+0x0],ch
   1de56:	je     0x1de58
   1de58:	outs   dx,BYTE PTR ds:[esi]
   1de59:	add    BYTE PTR [eax],al
   1de5b:	add    BYTE PTR [ebx+0x0],dh
   1de5e:	jns    0x1de60
   1de60:	jae    0x1de62
   1de62:	popa   
   1de63:	add    BYTE PTR [eax],al
   1de65:	add    BYTE PTR [edi+0x0],dh
   1de68:	imul   eax,DWORD PTR [eax],0x65006e
   1de6e:	add    BYTE PTR [eax],al
   1de70:	jo     0x1de72
   1de72:	arpl   WORD PTR [eax],ax
   1de74:	imul   eax,DWORD PTR [eax],0x6d0000
   1de7a:	jae    0x1de7c
   1de7c:	jb     0x1de7e
   1de7e:	add    BYTE PTR [eax],al
   1de80:	je     0x1de82
   1de82:	ins    DWORD PTR es:[edi],dx
   1de83:	add    BYTE PTR [eax+0x0],dh
   1de86:	add    BYTE PTR [eax],al
   1de88:	jne    0x1de8a
   1de8a:	jae    0x1de8c
   1de8c:	bound  eax,QWORD PTR [eax]
   1de8e:	add    BYTE PTR [eax],al
   1de90:	outs   dx,DWORD PTR ds:[esi]
   1de91:	add    BYTE PTR [eax+eax*1+0x65],ch
   1de95:	add    BYTE PTR [eax],al
   1de97:	add    BYTE PTR [ecx+0x0],ah
   1de9a:	imul   eax,DWORD PTR [eax],0x70
   1dea0:	push   0x0
   1dea2:	popa   
   1dea3:	add    BYTE PTR [ecx+0x0],bh
   1dea6:	add    BYTE PTR [eax],al
   1dea8:	jbe    0x1deaa
   1deaa:	add    BYTE PTR gs:[edx+0x0],dh
   1deae:	add    BYTE PTR [eax],al
   1deb0:	jae    0x1deb2
   1deb2:	popa   
   1deb3:	add    BYTE PTR [ecx+0x0],ch
   1deb6:	add    BYTE PTR [eax],al
   1deb8:	ins    BYTE PTR es:[edi],dx
   1deb9:	add    BYTE PTR [ecx+0x0],ah
   1debc:	arpl   WORD PTR [eax],ax
   1debe:	add    BYTE PTR [eax],al
   1dec0:	push   0x0
   1dec2:	jo     0x1dec4
   1dec4:	add    BYTE PTR [bx+si],al
   1dec7:	add    BYTE PTR [eax+0x0],ch
   1deca:	imul   eax,DWORD PTR [eax],0x64
   1ded0:	jo     0x1ded2
   1ded2:	outs   dx,BYTE PTR ds:[esi]
   1ded3:	add    BYTE PTR [edi+0x0],ah
   1ded6:	add    BYTE PTR [eax],al
   1ded8:	add    ah,cl
   1deda:	dec    ebx
   1dedb:	add    BYTE PTR [ebp+0x0],ah
   1dede:	push   ebx
   1dedf:	add    BYTE PTR [ebp+0x0],ah
   1dee2:	jb     0x1dee4
   1dee4:	jbe    0x1dee6
   1dee6:	imul   eax,DWORD PTR [eax],0x650063
   1deec:	inc    esp
   1deed:	add    BYTE PTR [ebp+0x0],ah
   1def0:	jae    0x1def2
   1def2:	arpl   WORD PTR [eax],ax
   1def4:	jb     0x1def6
   1def6:	imul   eax,DWORD PTR [eax],0x740070
   1defc:	outs   dx,DWORD PTR ds:[esi]
   1defd:	add    BYTE PTR [edx+0x0],dh
   1df00:	push   esp
   1df01:	add    BYTE PTR [ecx+0x0],ah
   1df04:	bound  eax,QWORD PTR [eax]
   1df06:	ins    BYTE PTR es:[edi],dx
   1df07:	add    BYTE PTR [ebp+0x0],ah
   1df0a:	add    BYTE PTR [eax],al
   1df0c:	pop    edx
   1df0d:	add    BYTE PTR [edi+0x0],dh
   1df10:	dec    edi
   1df11:	add    BYTE PTR [eax+0x0],dh
   1df14:	add    BYTE PTR gs:[esi+0x0],ch
   1df18:	push   eax
   1df19:	add    BYTE PTR [edx+0x0],dh
   1df1c:	outs   dx,DWORD PTR ds:[esi]
   1df1d:	add    BYTE PTR [ebx+0x0],ah
   1df20:	add    BYTE PTR gs:[ebx+0x0],dh
   1df24:	jae    0x1df26
   1df26:	add    BYTE PTR [eax],al
   1df28:	push   eax
   1df29:	add    BYTE PTR [ebx+0x0],dh
   1df2c:	push   ebx
   1df2d:	add    BYTE PTR [ebp+0x0],ah
   1df30:	je     0x1df32
   1df32:	dec    esp
   1df33:	add    BYTE PTR [edi+0x0],ch
   1df36:	popa   
   1df37:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df3b:	add    BYTE PTR [ebp+0x0],ch
   1df3e:	popa   
   1df3f:	add    BYTE PTR [edi+0x0],ah
   1df42:	add    BYTE PTR gs:[esi+0x0],cl
   1df46:	outs   dx,DWORD PTR ds:[esi]
   1df47:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df4b:	add    BYTE PTR [esi+0x0],ah
   1df4e:	jns    0x1df50
   1df50:	push   edx
   1df51:	add    BYTE PTR [edi+0x0],ch
   1df54:	jne    0x1df56
   1df56:	je     0x1df58
   1df58:	imul   eax,DWORD PTR [eax],0x65006e
   1df5e:	add    BYTE PTR [eax],al
   1df60:	pop    edx
   1df61:	add    BYTE PTR [edi+0x0],dh
   1df64:	inc    esp
   1df65:	add    BYTE PTR [ebp+0x0],dh
   1df68:	jo     0x1df6a
   1df6a:	ins    BYTE PTR es:[edi],dx
   1df6b:	add    BYTE PTR [ecx+0x0],ch
   1df6e:	arpl   WORD PTR [eax],ax
   1df70:	popa   
   1df71:	add    BYTE PTR [eax+eax*1+0x65],dh
   1df75:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1df79:	add    BYTE PTR [ebx+0x0],ch
   1df7c:	add    BYTE PTR gs:[esi+0x0],ch
   1df80:	add    BYTE PTR [eax],al
   1df82:	push   eax
   1df83:	add    BYTE PTR [ebx+0x0],dh
   1df86:	push   ebx
   1df87:	add    BYTE PTR [ebp+0x0],ah
   1df8a:	je     0x1df8c
   1df8c:	inc    ebx
   1df8d:	add    BYTE PTR [edx+0x0],dh
   1df90:	add    BYTE PTR gs:[ecx+0x0],ah
   1df94:	je     0x1df96
   1df96:	add    BYTE PTR gs:[eax+0x0],dl
   1df9a:	jb     0x1df9c
   1df9c:	outs   dx,DWORD PTR ds:[esi]
   1df9d:	add    BYTE PTR [ebx+0x0],ah
   1dfa0:	add    BYTE PTR gs:[ebx+0x0],dh
   1dfa4:	jae    0x1dfa6
   1dfa6:	dec    esi
   1dfa7:	add    BYTE PTR [edi+0x0],ch
   1dfaa:	je     0x1dfac
   1dfac:	imul   eax,DWORD PTR [eax],0x790066
   1dfb2:	push   edx
   1dfb3:	add    BYTE PTR [edi+0x0],ch
   1dfb6:	jne    0x1dfb8
   1dfb8:	je     0x1dfba
   1dfba:	imul   eax,DWORD PTR [eax],0x65006e
   1dfc0:	add    BYTE PTR [eax],al
   1dfc2:	pop    edx
   1dfc3:	add    BYTE PTR [edi+0x0],dh
   1dfc6:	dec    edi
   1dfc7:	add    BYTE PTR [eax+0x0],dh
   1dfca:	add    BYTE PTR gs:[esi+0x0],ch
   1dfce:	inc    esi
   1dfcf:	add    BYTE PTR [ecx+0x0],ch
   1dfd2:	ins    BYTE PTR es:[edi],dx
   1dfd3:	add    BYTE PTR [ebp+0x0],ah
   1dfd6:	add    BYTE PTR [eax],al
   1dfd8:	pop    edx
   1dfd9:	add    BYTE PTR [edi+0x0],dh
   1dfdc:	push   ecx
   1dfdd:	add    BYTE PTR [ebp+0x0],dh
   1dfe0:	add    BYTE PTR gs:[edx+0x0],dh
   1dfe4:	jns    0x1dfe6
   1dfe6:	dec    ecx
   1dfe7:	add    BYTE PTR [esi+0x0],ch
   1dfea:	data16 add BYTE PTR [edi+0x0],ch
   1dfee:	jb     0x1dff0
   1dff0:	ins    DWORD PTR es:[edi],dx
   1dff1:	add    BYTE PTR [ecx+0x0],ah
   1dff4:	je     0x1dff6
   1dff6:	imul   eax,DWORD PTR [eax],0x6e006f
   1dffc:	push   eax
   1dffd:	add    BYTE PTR [edx+0x0],dh
   1e000:	outs   dx,DWORD PTR ds:[esi]
   1e001:	add    BYTE PTR [ebx+0x0],ah
   1e004:	add    BYTE PTR gs:[ebx+0x0],dh
   1e008:	jae    0x1e00a
   1e00a:	add    BYTE PTR [eax],al
   1e00c:	pop    edx
   1e00d:	add    BYTE PTR [edi+0x0],dh
   1e010:	push   ecx
   1e011:	add    BYTE PTR [ebp+0x0],dh
   1e014:	add    BYTE PTR gs:[edx+0x0],dh
   1e018:	jns    0x1e01a
   1e01a:	push   ebx
   1e01b:	add    BYTE PTR [ecx+0x0],bh
   1e01e:	jae    0x1e020
   1e020:	je     0x1e022
   1e022:	add    BYTE PTR gs:[ebp+0x0],ch
   1e026:	dec    ecx
   1e027:	add    BYTE PTR [esi+0x0],ch
   1e02a:	data16 add BYTE PTR [edi+0x0],ch
   1e02e:	jb     0x1e030
   1e030:	ins    DWORD PTR es:[edi],dx
   1e031:	add    BYTE PTR [ecx+0x0],ah
   1e034:	je     0x1e036
   1e036:	imul   eax,DWORD PTR [eax],0x6e006f
   1e03c:	add    BYTE PTR [eax],al
   1e03e:	pop    edx
   1e03f:	add    BYTE PTR [edi+0x0],dh
   1e042:	dec    edi
   1e043:	add    BYTE PTR [eax+0x0],dh
   1e046:	add    BYTE PTR gs:[esi+0x0],ch
   1e04a:	dec    ebx
   1e04b:	add    BYTE PTR [ebp+0x0],ah
   1e04e:	jns    0x1e050
   1e050:	add    BYTE PTR [eax],al
   1e052:	pop    edx
   1e053:	add    BYTE PTR [edi+0x0],dh
   1e056:	inc    esp
   1e057:	add    BYTE PTR [ebp+0x0],ah
   1e05a:	ins    BYTE PTR es:[edi],dx
   1e05b:	add    BYTE PTR [ebp+0x0],ah
   1e05e:	je     0x1e060
   1e060:	add    BYTE PTR gs:[ebx+0x0],cl
   1e064:	add    BYTE PTR gs:[ecx+0x0],bh
   1e068:	add    BYTE PTR [eax],al
   1e06a:	pop    edx
   1e06b:	add    BYTE PTR [edi+0x0],dh
   1e06e:	push   ebx
   1e06f:	add    BYTE PTR [ebp+0x0],ah
   1e072:	je     0x1e074
   1e074:	push   esi
   1e075:	add    BYTE PTR [ecx+0x0],ah
   1e078:	ins    BYTE PTR es:[edi],dx
   1e079:	add    BYTE PTR [ebp+0x0],dh
   1e07c:	add    BYTE PTR gs:[ebx+0x0],cl
   1e080:	add    BYTE PTR gs:[ecx+0x0],bh
   1e084:	add    BYTE PTR [eax],al
   1e086:	pop    edx
   1e087:	add    BYTE PTR [edi+0x0],dh
   1e08a:	push   ecx
   1e08b:	add    BYTE PTR [ebp+0x0],dh
   1e08e:	add    BYTE PTR gs:[edx+0x0],dh
   1e092:	jns    0x1e094
   1e094:	push   esi
   1e095:	add    BYTE PTR [edi+0x0],ch
   1e098:	ins    BYTE PTR es:[edi],dx
   1e099:	add    BYTE PTR [ebp+0x0],dh
   1e09c:	ins    DWORD PTR es:[edi],dx
   1e09d:	add    BYTE PTR [ebp+0x0],ah
   1e0a0:	dec    ecx
   1e0a1:	add    BYTE PTR [esi+0x0],ch
   1e0a4:	data16 add BYTE PTR [edi+0x0],ch
   1e0a8:	jb     0x1e0aa
   1e0aa:	ins    DWORD PTR es:[edi],dx
   1e0ab:	add    BYTE PTR [ecx+0x0],ah
   1e0ae:	je     0x1e0b0
   1e0b0:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0b6:	inc    esi
   1e0b7:	add    BYTE PTR [ecx+0x0],ch
   1e0ba:	ins    BYTE PTR es:[edi],dx
   1e0bb:	add    BYTE PTR [ebp+0x0],ah
   1e0be:	add    BYTE PTR [eax],al
   1e0c0:	pop    edx
   1e0c1:	add    BYTE PTR [edi+0x0],dh
   1e0c4:	inc    ebx
   1e0c5:	add    BYTE PTR [edx+0x0],dh
   1e0c8:	add    BYTE PTR gs:[ecx+0x0],ah
   1e0cc:	je     0x1e0ce
   1e0ce:	add    BYTE PTR gs:[esi+0x0],al
   1e0d2:	imul   eax,DWORD PTR [eax],0x65006c
   1e0d8:	add    BYTE PTR [eax],al
   1e0da:	push   edx
   1e0db:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0df:	add    BYTE PTR [ecx+0x0],cl
   1e0e2:	ins    DWORD PTR es:[edi],dx
   1e0e3:	add    BYTE PTR [ecx+0x0],ah
   1e0e6:	add    BYTE PTR [di+0x0],ah
   1e0ea:	dec    esi
   1e0eb:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e0ef:	add    BYTE PTR [ebp+0x0],ah
   1e0f2:	popa   
   1e0f3:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e0f7:	add    BYTE PTR [edx+0x0],dh
   1e0fa:	add    BYTE PTR [eax],al
   1e0fc:	push   edx
   1e0fd:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e101:	add    BYTE PTR [ecx+0x0],cl
   1e104:	ins    DWORD PTR es:[edi],dx
   1e105:	add    BYTE PTR [ecx+0x0],ah
   1e108:	add    BYTE PTR [di+0x0],ah
   1e10c:	inc    esp
   1e10d:	add    BYTE PTR [ecx+0x0],ch
   1e110:	jb     0x1e112
   1e112:	add    BYTE PTR gs:[ebx+0x0],ah
   1e116:	je     0x1e118
   1e118:	outs   dx,DWORD PTR ds:[esi]
   1e119:	add    BYTE PTR [edx+0x0],dh
   1e11c:	jns    0x1e11e
   1e11e:	inc    ebp
   1e11f:	add    BYTE PTR [esi+0x0],ch
   1e122:	je     0x1e124
   1e124:	jb     0x1e126
   1e126:	jns    0x1e128
   1e128:	push   esp
   1e129:	add    BYTE PTR [edi+0x0],ch
   1e12c:	inc    esp
   1e12d:	add    BYTE PTR [ecx+0x0],ah
   1e130:	je     0x1e132
   1e132:	popa   
   1e133:	add    BYTE PTR [eax],al
   1e135:	add    BYTE PTR [edx+0x0],bl
   1e138:	ja     0x1e13a
   1e13a:	dec    edi
   1e13b:	add    BYTE PTR [eax+0x0],dh
   1e13e:	add    BYTE PTR gs:[esi+0x0],ch
   1e142:	push   eax
   1e143:	add    BYTE PTR [edx+0x0],dh
   1e146:	outs   dx,DWORD PTR ds:[esi]
   1e147:	add    BYTE PTR [ebx+0x0],ah
   1e14a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e14e:	jae    0x1e150
   1e150:	push   esp
   1e151:	add    BYTE PTR [edi+0x0],ch
   1e154:	imul   eax,DWORD PTR [eax],0x65
   1e157:	add    BYTE PTR [esi+0x0],ch
   1e15a:	add    BYTE PTR [eax],al
   1e15c:	pop    edx
   1e15d:	add    BYTE PTR [edi+0x0],dh
   1e160:	push   ebx
   1e161:	add    BYTE PTR [ebp+0x0],ah
   1e164:	je     0x1e166
   1e166:	dec    ecx
   1e167:	add    BYTE PTR [esi+0x0],ch
   1e16a:	data16 add BYTE PTR [edi+0x0],ch
   1e16e:	jb     0x1e170
   1e170:	ins    DWORD PTR es:[edi],dx
   1e171:	add    BYTE PTR [ecx+0x0],ah
   1e174:	je     0x1e176
   1e176:	imul   eax,DWORD PTR [eax],0x6e006f
   1e17c:	push   eax
   1e17d:	add    BYTE PTR [edx+0x0],dh
   1e180:	outs   dx,DWORD PTR ds:[esi]
   1e181:	add    BYTE PTR [ebx+0x0],ah
   1e184:	add    BYTE PTR gs:[ebx+0x0],dh
   1e188:	jae    0x1e18a
   1e18a:	add    BYTE PTR [eax],al
   1e18c:	pop    edx
   1e18d:	add    BYTE PTR [edi+0x0],dh
   1e190:	push   ecx
   1e191:	add    BYTE PTR [ebp+0x0],dh
   1e194:	add    BYTE PTR gs:[edx+0x0],dh
   1e198:	jns    0x1e19a
   1e19a:	dec    ecx
   1e19b:	add    BYTE PTR [esi+0x0],ch
   1e19e:	data16 add BYTE PTR [edi+0x0],ch
   1e1a2:	jb     0x1e1a4
   1e1a4:	ins    DWORD PTR es:[edi],dx
   1e1a5:	add    BYTE PTR [ecx+0x0],ah
   1e1a8:	je     0x1e1aa
   1e1aa:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1b0:	push   esp
   1e1b1:	add    BYTE PTR [eax+0x0],ch
   1e1b4:	jb     0x1e1b6
   1e1b6:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1ba:	add    BYTE PTR fs:[eax],al
   1e1bd:	add    BYTE PTR [edx+0x0],bl
   1e1c0:	ja     0x1e1c2
   1e1c2:	inc    ebx
   1e1c3:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e1c7:	add    BYTE PTR [ebx+0x0],dh
   1e1ca:	add    BYTE PTR gs:[eax],al
   1e1cd:	add    BYTE PTR [ebp+0x0],al
   1e1d0:	js     0x1e1d2
   1e1d2:	push   edx
   1e1d3:	add    BYTE PTR [ecx+0x0],ah
   1e1d6:	imul   eax,DWORD PTR [eax],0x650073
   1e1dc:	push   ebx
   1e1dd:	add    BYTE PTR [eax+eax*1+0x61],dh
   1e1e1:	add    BYTE PTR [eax+eax*1+0x75],dh
   1e1e5:	add    BYTE PTR [ebx+0x0],dh
   1e1e8:	add    BYTE PTR [eax],al
   1e1ea:	push   edx
   1e1eb:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e1ef:	add    BYTE PTR [ecx+0x0],al
   1e1f2:	jae    0x1e1f4
   1e1f4:	jae    0x1e1f6
   1e1f6:	add    BYTE PTR gs:[edx+0x0],dh
   1e1fa:	je     0x1e1fc
   1e1fc:	add    BYTE PTR [eax],al
   1e1fe:	pop    edx
   1e1ff:	add    BYTE PTR [edi+0x0],dh
   1e202:	inc    ebp
   1e203:	add    BYTE PTR [esi+0x0],ch
   1e206:	jne    0x1e208
   1e208:	ins    DWORD PTR es:[edi],dx
   1e209:	add    BYTE PTR [ebp+0x0],ah
   1e20c:	jb     0x1e20e
   1e20e:	popa   
   1e20f:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e213:	add    BYTE PTR [ebx+0x0],cl
   1e216:	add    BYTE PTR gs:[ecx+0x0],bh
   1e21a:	add    BYTE PTR [eax],al
   1e21c:	pop    edx
   1e21d:	add    BYTE PTR [edi+0x0],dh
   1e220:	dec    esp
   1e221:	add    BYTE PTR [edi+0x0],ch
   1e224:	popa   
   1e225:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e229:	add    BYTE PTR [edx+0x0],dh
   1e22c:	imul   eax,DWORD PTR [eax],0x650076
   1e232:	jb     0x1e234
   1e234:	add    BYTE PTR [eax],al
   1e236:	pop    edx
   1e237:	add    BYTE PTR [edi+0x0],dh
   1e23a:	inc    ebx
   1e23b:	add    BYTE PTR [edx+0x0],dh
   1e23e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e242:	je     0x1e244
   1e244:	add    BYTE PTR gs:[ebx+0x0],cl
   1e248:	add    BYTE PTR gs:[ecx+0x0],bh
   1e24c:	add    BYTE PTR [eax],al
   1e24e:	dec    ecx
   1e24f:	add    BYTE PTR [edi+0x0],ch
   1e252:	inc    esp
   1e253:	add    BYTE PTR [ebp+0x0],ah
   1e256:	ins    BYTE PTR es:[edi],dx
   1e257:	add    BYTE PTR [ebp+0x0],ah
   1e25a:	je     0x1e25c
   1e25c:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e261:	add    BYTE PTR [esi+0x0],dh
   1e264:	imul   eax,DWORD PTR [eax],0x650063
   1e26a:	add    BYTE PTR [eax],al
   1e26c:	dec    ebx
   1e26d:	add    BYTE PTR [ebp+0x0],ah
   1e270:	inc    esp
   1e271:	add    BYTE PTR [ebp+0x0],ah
   1e274:	je     0x1e276
   1e276:	popa   
   1e277:	add    BYTE PTR [ebx+0x0],ah
   1e27a:	push   0x72005000
   1e27f:	add    BYTE PTR [edi+0x0],ch
   1e282:	arpl   WORD PTR [eax],ax
   1e284:	add    BYTE PTR gs:[ebx+0x0],dh
   1e288:	jae    0x1e28a
   1e28a:	add    BYTE PTR [eax],al
   1e28c:	dec    ebx
   1e28d:	add    BYTE PTR [ebp+0x0],ah
   1e290:	inc    ecx
   1e291:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e295:	add    BYTE PTR [ecx+0x0],ah
   1e298:	arpl   WORD PTR [eax],ax
   1e29a:	push   0x72005000
   1e29f:	add    BYTE PTR [edi+0x0],ch
   1e2a2:	arpl   WORD PTR [eax],ax
   1e2a4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2a8:	jae    0x1e2aa
   1e2aa:	add    BYTE PTR [eax],al
   1e2ac:	pop    edx
   1e2ad:	add    BYTE PTR [edi+0x0],dh
   1e2b0:	push   ecx
   1e2b1:	add    BYTE PTR [ebp+0x0],dh
   1e2b4:	add    BYTE PTR gs:[edx+0x0],dh
   1e2b8:	jns    0x1e2ba
   1e2ba:	push   esi
   1e2bb:	add    BYTE PTR [ecx+0x0],ah
   1e2be:	ins    BYTE PTR es:[edi],dx
   1e2bf:	add    BYTE PTR [ebp+0x0],dh
   1e2c2:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2c6:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2ca:	add    BYTE PTR [eax],al
   1e2cc:	pop    edx
   1e2cd:	add    BYTE PTR [edi+0x0],dh
   1e2d0:	push   edx
   1e2d1:	add    BYTE PTR [ebp+0x0],ah
   1e2d4:	popa   
   1e2d5:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2d9:	add    BYTE PTR [ecx+0x0],ch
   1e2dc:	ins    BYTE PTR es:[edi],dx
   1e2dd:	add    BYTE PTR [ebp+0x0],ah
   1e2e0:	add    BYTE PTR [eax],al
   1e2e2:	pop    edx
   1e2e3:	add    BYTE PTR [edi+0x0],dh
   1e2e6:	push   ebx
   1e2e7:	add    BYTE PTR [ebp+0x0],ah
   1e2ea:	je     0x1e2ec
   1e2ec:	dec    ecx
   1e2ed:	add    BYTE PTR [esi+0x0],ch
   1e2f0:	data16 add BYTE PTR [edi+0x0],ch
   1e2f4:	jb     0x1e2f6
   1e2f6:	ins    DWORD PTR es:[edi],dx
   1e2f7:	add    BYTE PTR [ecx+0x0],ah
   1e2fa:	je     0x1e2fc
   1e2fc:	imul   eax,DWORD PTR [eax],0x6e006f
   1e302:	inc    esi
   1e303:	add    BYTE PTR [ecx+0x0],ch
   1e306:	ins    BYTE PTR es:[edi],dx
   1e307:	add    BYTE PTR [ebp+0x0],ah
   1e30a:	add    BYTE PTR [eax],al
   1e30c:	pop    edx
   1e30d:	add    BYTE PTR [edi+0x0],dh
   1e310:	push   edi
   1e311:	add    BYTE PTR [edx+0x0],dh
   1e314:	imul   eax,DWORD PTR [eax],0x650074
   1e31a:	inc    esi
   1e31b:	add    BYTE PTR [ecx+0x0],ch
   1e31e:	ins    BYTE PTR es:[edi],dx
   1e31f:	add    BYTE PTR [ebp+0x0],ah
   1e322:	add    BYTE PTR [eax],al
   1e324:	pop    edx
   1e325:	add    BYTE PTR [edi+0x0],dh
   1e328:	push   ecx
   1e329:	add    BYTE PTR [ebp+0x0],dh
   1e32c:	add    BYTE PTR gs:[edx+0x0],dh
   1e330:	jns    0x1e332
   1e332:	dec    ecx
   1e333:	add    BYTE PTR [esi+0x0],ch
   1e336:	data16 add BYTE PTR [edi+0x0],ch
   1e33a:	jb     0x1e33c
   1e33c:	ins    DWORD PTR es:[edi],dx
   1e33d:	add    BYTE PTR [ecx+0x0],ah
   1e340:	je     0x1e342
   1e342:	imul   eax,DWORD PTR [eax],0x6e006f
   1e348:	inc    esi
   1e349:	add    BYTE PTR [ecx+0x0],ch
   1e34c:	ins    BYTE PTR es:[edi],dx
   1e34d:	add    BYTE PTR [ebp+0x0],ah
   1e350:	add    BYTE PTR [eax],al
   1e352:	dec    ecx
   1e353:	add    BYTE PTR [edi+0x0],ch
   1e356:	inc    ebx
   1e357:	add    BYTE PTR [edx+0x0],dh
   1e35a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e35e:	je     0x1e360
   1e360:	add    BYTE PTR gs:[ebx+0x0],dl
   1e364:	jns    0x1e366
   1e366:	ins    DWORD PTR es:[edi],dx
   1e367:	add    BYTE PTR [edx+0x0],ah
   1e36a:	outs   dx,DWORD PTR ds:[esi]
   1e36b:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e36f:	add    BYTE PTR [ebx+0x0],ah
   1e372:	dec    esp
   1e373:	add    BYTE PTR [ecx+0x0],ch
   1e376:	outs   dx,BYTE PTR ds:[esi]
   1e377:	add    BYTE PTR [ebx+0x0],ch
   1e37a:	add    BYTE PTR [eax],al
   1e37c:	dec    ecx
   1e37d:	add    BYTE PTR [edi+0x0],ch
   1e380:	inc    ebx
   1e381:	add    BYTE PTR [edx+0x0],dh
   1e384:	add    BYTE PTR gs:[ecx+0x0],ah
   1e388:	je     0x1e38a
   1e38a:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e38f:	add    BYTE PTR [esi+0x0],dh
   1e392:	imul   eax,DWORD PTR [eax],0x650063
   1e398:	add    BYTE PTR [eax],al
   1e39a:	push   ebx
   1e39b:	add    BYTE PTR [ebp+0x0],ah
   1e39e:	inc    ebx
   1e39f:	add    BYTE PTR [edx+0x0],dh
   1e3a2:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3a6:	je     0x1e3a8
   1e3a8:	add    BYTE PTR gs:[ebx+0x0],al
   1e3ac:	ins    BYTE PTR es:[edi],dx
   1e3ad:	add    BYTE PTR [ecx+0x0],ch
   1e3b0:	add    BYTE PTR gs:[esi+0x0],ch
   1e3b4:	je     0x1e3b6
   1e3b6:	push   ebx
   1e3b7:	add    BYTE PTR [ebp+0x0],ah
   1e3ba:	arpl   WORD PTR [eax],ax
   1e3bc:	jne    0x1e3be
   1e3be:	jb     0x1e3c0
   1e3c0:	imul   eax,DWORD PTR [eax],0x790074
   1e3c6:	add    BYTE PTR [eax],al
   1e3c8:	pop    edx
   1e3c9:	add    BYTE PTR [edi+0x0],dh
   1e3cc:	dec    ebp
   1e3cd:	add    BYTE PTR [ecx+0x0],ah
   1e3d0:	jo     0x1e3d2
   1e3d2:	push   esi
   1e3d3:	add    BYTE PTR [ecx+0x0],ch
   1e3d6:	add    BYTE PTR gs:[edi+0x0],dh
   1e3da:	dec    edi
   1e3db:	add    BYTE PTR [esi+0x0],ah
   1e3de:	push   ebx
   1e3df:	add    BYTE PTR [ebp+0x0],ah
   1e3e2:	arpl   WORD PTR [eax],ax
   1e3e4:	je     0x1e3e6
   1e3e6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3ec:	add    BYTE PTR [eax],al
   1e3ee:	pop    edx
   1e3ef:	add    BYTE PTR [edi+0x0],dh
   1e3f2:	inc    ebx
   1e3f3:	add    BYTE PTR [edx+0x0],dh
   1e3f6:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3fa:	je     0x1e3fc
   1e3fc:	add    BYTE PTR gs:[ebx+0x0],dl
   1e400:	add    BYTE PTR gs:[ebx+0x0],ah
   1e404:	je     0x1e406
   1e406:	imul   eax,DWORD PTR [eax],0x6e006f
   1e40c:	add    BYTE PTR [eax],al
   1e40e:	pop    edx
   1e40f:	add    BYTE PTR [edi+0x0],dh
   1e412:	push   ebp
   1e413:	add    BYTE PTR [esi+0x0],ch
   1e416:	ins    DWORD PTR es:[edi],dx
   1e417:	add    BYTE PTR [ecx+0x0],ah
   1e41a:	jo     0x1e41c
   1e41c:	push   esi
   1e41d:	add    BYTE PTR [ecx+0x0],ch
   1e420:	add    BYTE PTR gs:[edi+0x0],dh
   1e424:	dec    edi
   1e425:	add    BYTE PTR [esi+0x0],ah
   1e428:	push   ebx
   1e429:	add    BYTE PTR [ebp+0x0],ah
   1e42c:	arpl   WORD PTR [eax],ax
   1e42e:	je     0x1e430
   1e430:	imul   eax,DWORD PTR [eax],0x6e006f
   1e436:	add    BYTE PTR [eax],al
   1e438:	dec    ebx
   1e439:	add    BYTE PTR [ebp+0x0],ah
   1e43c:	dec    ecx
   1e43d:	add    BYTE PTR [esi+0x0],ch
   1e440:	imul   eax,DWORD PTR [eax],0x690074
   1e446:	popa   
   1e447:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e44b:	add    BYTE PTR [edx+0x0],bh
   1e44e:	add    BYTE PTR gs:[ebp+0x0],cl
   1e452:	jne    0x1e454
   1e454:	je     0x1e456
   1e456:	add    BYTE PTR gs:[eax+0x0],bh
   1e45a:	add    BYTE PTR [eax],al
   1e45c:	push   eax
   1e45d:	add    BYTE PTR [ebx+0x0],dh
   1e460:	dec    esp
   1e461:	add    BYTE PTR [edi+0x0],ch
   1e464:	outs   dx,DWORD PTR ds:[esi]
   1e465:	add    BYTE PTR [ebx+0x0],ch
   1e468:	jne    0x1e46a
   1e46a:	jo     0x1e46c
   1e46c:	push   eax
   1e46d:	add    BYTE PTR [edx+0x0],dh
   1e470:	outs   dx,DWORD PTR ds:[esi]
   1e471:	add    BYTE PTR [ebx+0x0],ah
   1e474:	add    BYTE PTR gs:[ebx+0x0],dh
   1e478:	jae    0x1e47a
   1e47a:	inc    edx
   1e47b:	add    BYTE PTR [ecx+0x0],bh
   1e47e:	push   eax
   1e47f:	add    BYTE PTR [edx+0x0],dh
   1e482:	outs   dx,DWORD PTR ds:[esi]
   1e483:	add    BYTE PTR [ebx+0x0],ah
   1e486:	add    BYTE PTR gs:[ebx+0x0],dh
   1e48a:	jae    0x1e48c
   1e48c:	dec    ecx
   1e48d:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e491:	add    BYTE PTR [ebx+0x0],cl
   1e494:	add    BYTE PTR gs:[edi+0x0],al
   1e498:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e49d:	add    BYTE PTR [ebp+0x0],dh
   1e4a0:	jb     0x1e4a2
   1e4a2:	jb     0x1e4a4
   1e4a4:	add    BYTE PTR gs:[esi+0x0],ch
   1e4a8:	je     0x1e4aa
   1e4aa:	push   esp
   1e4ab:	add    BYTE PTR [eax+0x0],ch
   1e4ae:	jb     0x1e4b0
   1e4b0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e4b4:	add    BYTE PTR fs:[eax],al
   1e4b7:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e4bb:	add    BYTE PTR [ecx],cl
   1e4bd:	add    BYTE PTR ds:0x58000000,dl
   1e4c3:	test   BYTE PTR [edi-0x4ecf9cc9],0x70
   1e4ca:	ja     0x1e460
   1e4cc:	dec    ecx
   1e4cd:	jecxz  0x1e492
   1e4cf:	jae    0x1e4f9
   1e4d1:	xchg   DWORD PTR [ecx+0x49],ebx
   1e4d4:	(bad)  
   1e4d5:	cs dec ecx
   1e4d7:	or     al,0x5e
   1e4d9:	(bad)  
   1e4db:	por    mm1,QWORD PTR [eax+0x46e6bf0d]
   1e4e2:	add    BYTE PTR [edi-0x4],dl
   1e4e5:	mov    ds:0x9ad89b60,al
   1e4ea:	add    ah,cl
   1e4ec:	push   ebx
   1e4ed:	add    BYTE PTR [edi],ah
   1e4ef:	add    BYTE PTR ds:0x6001300,dl
   1e4f5:	add    BYTE PTR [eax],al
   1e4f7:	add    BYTE PTR [esi+0x6dd0a21f],ah
   1e4fd:	bound  esp,QWORD PTR [ecx+0x39]
   1e500:	icebp  
   1e501:	mov    esp,0xb321a7ac
   1e506:	les    eax,FWORD PTR [ebx+0x675123d0]
   1e50c:	sub    al,0x37
   1e50f:	retf   
   1e510:	(bad)  
   1e511:	lock jnp 0x1e4d3
   1e514:	leave  
   1e515:	cdq    
   1e516:	pop    ds
   1e517:	adc    BYTE PTR [edx+eiz*1+0x62],dh
   1e51b:	pop    ebp
   1e51c:	dec    esp
   1e51d:	and    ch,al
   1e51f:	mov    ds:0x49cc00,eax
   1e524:	and    al,0x0
   1e526:	or     al,0x0
   1e528:	push   es
   1e529:	add    BYTE PTR [edx],al
   1e52b:	add    BYTE PTR ds:0x15003100,dh
   1e531:	add    BYTE PTR [eax+eax*1],bl
   1e534:	add    BYTE PTR [eax],al
   1e536:	sbb    esp,DWORD PTR [eax+0x4d50d3ab]
   1e53c:	jmp    0x5192ec6a
   1e541:	in     eax,dx
   1e542:	sahf   
   1e543:	mov    edx,0x80e44136
   1e548:	or     DWORD PTR [ecx-0x8965cd2],edi
   1e54e:	ss aaa 
   1e550:	inc    edi
   1e551:	ret    0x606f
   1e554:	iret   
   1e555:	xchg   edi,eax
   1e556:	stos   BYTE PTR es:[edi],al
   1e557:	mov    ecx,0xf0f85ad1
   1e55c:	enter  0xaf13,0xce
   1e560:	adc    eax,0x3336bce3
   1e565:	arpl   WORD PTR [eax],ax
   1e567:	int3   
   1e568:	add    BYTE PTR cs:[edx+0x0],cl
   1e56c:	or     BYTE PTR [eax],al
   1e56e:	add    BYTE PTR [eax],al
   1e570:	add    BYTE PTR [eax],al
   1e572:	mov    bl,0x8b
   1e574:	or     al,0x93
   1e576:	adc    BYTE PTR [eax+0x5],dl
   1e579:	jb     0x1e52b
   1e57b:	lock adc esp,esp
   1e57e:	pop    ebp
   1e57f:	adc    BYTE PTR ds:[ebx-0x1e2e06b8],ch
   1e586:	add    eax,0x4b8694c5
   1e58b:	add    edx,0x1c
   1e58e:	loop   0x1e5ce
   1e590:	push   esi
   1e591:	mov    dh,0x4b
   1e593:	leave  
   1e594:	test   BYTE PTR [edx-0x54],al
   1e597:	fild   QWORD PTR [ecx+0x68]
   1e59a:	jnp    0x1e5d2
   1e59c:	pop    ss
   1e59d:	xor    cl,bh
   1e59f:	pop    ss
   1e5a0:	aaa    
   1e5a1:	push   ss
   1e5a2:	fucomi st,st(5)
   1e5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e5a5:	sbb    bh,BYTE PTR [esi-0x58dd78db]
   1e5ab:	cld    
   1e5ac:	loope  0x1e5ad
   1e5ae:	cld    
   1e5af:	str    esp
   1e5b2:	outs   dx,BYTE PTR ds:[esi]
   1e5b3:	add    BYTE PTR [edx],bl
   1e5b5:	add    BYTE PTR [eax],dl
   1e5b7:	add    BYTE PTR [eax],cl
   1e5b9:	add    BYTE PTR [eax],al
   1e5bb:	add    BYTE PTR [edx+0x0],al
   1e5be:	dec    edx
   1e5bf:	add    BYTE PTR [eax],cl
   1e5c1:	add    BYTE PTR [eax],al
   1e5c3:	add    BYTE PTR [eax],al
   1e5c5:	add    BYTE PTR [edi],ch
   1e5c7:	fucom  st(5)
   1e5c9:	mov    al,0x86
   1e5cb:	push   ds
   1e5cc:	mov    al,0x60
   1e5ce:	ret    0x92a0
   1e5d1:	inc    ebx
   1e5d2:	pop    eax
   1e5d3:	push   0xffffffd3
   1e5d5:	icebp  
   1e5d6:	and    al,0x4c
   1e5d8:	pop    ds
   1e5d9:	lds    esi,FWORD PTR ds:0xb242f1df
   1e5df:	mov    esp,0x90ce249a
   1e5e4:	stc    
   1e5e5:	rcr    BYTE PTR [eax-0x13ebdde8],1
   1e5eb:	add    BYTE PTR [edx+0x27],al
   1e5ee:	add    BYTE PTR ds:0x7035cc00,dl
   1e5f4:	data16 jg 0x1e581
   1e5f7:	xchg   ecx,eax
   1e5f8:	fidivr WORD PTR [edx+0x4b]
   1e5fb:	mov    WORD PTR [ebp+0x5494306c],es
   1e601:	jbe    0x1e61a
   1e603:	in     eax,dx
   1e604:	sti    
   1e605:	adc    DWORD PTR [esi],esi
   1e607:	das    
   1e608:	es mov eax,ecx
   1e60b:	das    
   1e60c:	pop    ebx
   1e60d:	mov    esi,0xbacd6fcc
   1e612:	rcr    BYTE PTR [edx+0x3f530030],cl
   1e618:	or     DWORD PTR [eax],eax
   1e61a:	adc    eax,0x2aa0bc00
   1e61f:	sbb    al,0xcc
   1e621:	add    BYTE PTR ds:0x5ac94698,cl
   1e627:	(bad)  
   1e628:	imul   ebp,ebp,0xe39abb5f
   1e62e:	adc    DWORD PTR [edx],esi
   1e630:	sub    eax,0x36580504
   1e635:	(bad)  
   1e636:	sub    DWORD PTR fs:[edx-0x17546610],ebp
   1e63d:	mov    cl,0x87
   1e63f:	push   0xffffffe9
   1e641:	mov    dl,0x3c
   1e643:	cmp    eax,DWORD PTR [eax]
   1e645:	int3   
   1e646:	inc    ebx
   1e647:	xor    DWORD PTR [edi],edx
   1e649:	add    al,0x15
   1e64b:	adc    DWORD PTR [ecx],esi
   1e64d:	cmp    al,0x1a
   1e64f:	pop    ss
   1e650:	add    al,0x5
   1e652:	add    ah,cl
   1e654:	addr16 push 0x121cf917
   1e65a:	ret    0xa362
   1e65d:	stos   DWORD PTR es:[edi],eax
   1e65e:	loope  0x1e68e
   1e660:	jmp    0x4021:0x91b6c840
   1e667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e669:	lea    ebx,[edi-0x26]
   1e66c:	jg     0x1e6dd
   1e66e:	jmp    0xccad:0x685eb6c7
   1e675:	pop    ss
   1e676:	push   ebx
   1e677:	jbe    0x1e605
   1e679:	imul   esi,DWORD PTR [eax+0x6e],0x2a00e663
   1e680:	std    
   1e681:	inc    edx
   1e682:	xchg   esi,eax
   1e683:	mov    al,BYTE PTR [eax]
   1e685:	int3   
   1e686:	dec    esp
   1e687:	and    ecx,DWORD PTR [esi]
   1e689:	add    eax,0x100b2528
   1e68e:	adc    edx,DWORD PTR [ebx]
   1e690:	or     edi,DWORD PTR [eax]
   1e692:	add    ah,cl
   1e694:	jo     0x1e705
   1e696:	pop    ss
   1e697:	call   0x25a8ecb5
   1e69c:	mov    ds:0x7c3a181,al
   1e6a1:	fldenv [ebp+0x2]
   1e6a4:	push   esi
   1e6a5:	jl     0x1e681
   1e6a7:	repz cmc 
   1e6a9:	inc    esi
   1e6aa:	lahf   
   1e6ab:	ret    
   1e6ac:	imul   ebp
   1e6ae:	hlt    
   1e6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e6b0:	adc    edx,DWORD PTR [eax-0x41d33737]
   1e6b6:	ret    0x98
   1e6b9:	int3   
   1e6ba:	dec    esp
   1e6bb:	and    ecx,DWORD PTR [esi]
   1e6bd:	add    eax,0x100b2528
   1e6c2:	adc    edx,DWORD PTR [ebx]
   1e6c4:	or     ebp,DWORD PTR [esi]
   1e6c6:	add    ah,cl
   1e6c8:	pop    ebp
   1e6c9:	mov    bl,0x3f
   1e6cb:	mov    ebp,0x3b1f2445
   1e6d0:	ins    BYTE PTR es:[edi],dx
   1e6d1:	push   edi
   1e6d2:	xchg   edi,eax
   1e6d3:	add    ebp,DWORD PTR [ebx+0x51ad57ad]
   1e6d9:	cmp    ch,BYTE PTR [ecx-0x5036524f]
   1e6df:	sub    DWORD PTR [esi+0x515b6d43],0x65
   1e6e6:	sub    BYTE PTR [esi],dh
   1e6e8:	data16 das 
   1e6ea:	fst    DWORD PTR [esp+ebp*8+0x2f]
   1e6ee:	pushf  
   1e6ef:	add    BYTE PTR [ebx+0x0],ch
   1e6f2:	push   cs
   1e6f3:	add    BYTE PTR [edi],dl
   1e6f5:	add    BYTE PTR [eax+eax*1],bl
   1e6f8:	or     eax,DWORD PTR [eax]
   1e6fa:	or     DWORD PTR [eax],eax
   1e6fc:	pop    edi
   1e6fd:	add    BYTE PTR [ecx],al
   1e6ff:	add    BYTE PTR [eax+eax*1],bl
   1e702:	dec    edx
   1e703:	add    BYTE PTR [eax],cl
   1e705:	add    BYTE PTR [eax],al
   1e707:	add    BYTE PTR [eax],al
   1e709:	add    BYTE PTR [ebx],ah
   1e70b:	pop    ds
   1e70c:	scas   al,BYTE PTR es:[di]
   1e70e:	cmp    ch,BYTE PTR [esp+ebx*4+0x27]
   1e712:	sbb    edi,DWORD PTR [eax-0x16]
   1e715:	test   eax,0xf81bfdc5
   1e71a:	call   0x882c40db
   1e71f:	scas   eax,DWORD PTR es:[edi]
   1e720:	(bad)  
   1e721:	push   ecx
   1e722:	mov    ebp,0x453be8aa
   1e727:	sbb    eax,0x2422afce
   1e72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e72d:	pop    edx
   1e72e:	push   0x72
   1e730:	jo     0x1e732
   1e732:	outs   dx,BYTE PTR ds:[esi]
   1e733:	sbb    dl,BYTE PTR [eax]
   1e735:	or     BYTE PTR [eax],al
   1e737:	inc    edx
   1e738:	dec    edx
   1e739:	or     BYTE PTR [eax],al
   1e73b:	add    bh,ch
   1e73d:	(bad)  [edi+0x4e8d86c7]
   1e743:	mov    esp,ds
   1e745:	sbb    ah,dl
   1e747:	pop    es
   1e748:	mov    esp,0x5b1b9fee
   1e74d:	or     BYTE PTR [edi+0x23],bh
   1e750:	imul   DWORD PTR [eax]
   1e752:	iret   
   1e753:	enter  0x7709,0x85
   1e757:	outs   dx,BYTE PTR ds:[esi]
   1e758:	mov    edx,0xcd0b07
   1e75d:	int3   
   1e75e:	pop    esp
   1e75f:	add    BYTE PTR [edi],cl
   1e761:	add    BYTE PTR [edx],ch
   1e763:	add    BYTE PTR [edx],cl
   1e765:	add    BYTE PTR [edi],al
   1e767:	add    BYTE PTR [ecx],dl
   1e769:	add    BYTE PTR [eax],cl
   1e76b:	add    BYTE PTR [edi],bh
   1e76d:	add    BYTE PTR ds:0x1b000000,bh
   1e773:	add    BYTE PTR [eax],ch
   1e775:	add    BYTE PTR [edi],ch
   1e777:	add    BYTE PTR [edx],cl
   1e779:	add    BYTE PTR [edx],cl
   1e77b:	add    BYTE PTR [edi],al
   1e77d:	add    BYTE PTR [ecx],dl
   1e77f:	add    BYTE PTR [eax],cl
   1e781:	add    BYTE PTR [esi+0x0],bl
   1e784:	add    DWORD PTR [eax],eax
   1e786:	outs   dx,BYTE PTR ds:[esi]
   1e787:	add    BYTE PTR [eax],al
   1e789:	add    BYTE PTR [ebp+0x61a4488a],ch
   1e78f:	cmp    al,0xb6
   1e791:	rcr    BYTE PTR [edi],1
   1e793:	adc    al,0x79
   1e795:	sub    dh,BYTE PTR [edi-0x66ed56c3]
   1e79b:	jae    0x1e7a9
   1e79d:	test   BYTE PTR [ecx-0x2447938],bh
   1e7a3:	xchg   esp,eax
   1e7a4:	jnp    0x1e77f
   1e7a6:	test   eax,0x4128b499
   1e7ab:	and    DWORD PTR [eax],esp
   1e7ad:	dec    ebp
   1e7ae:	push   eax
   1e7af:	ss scas eax,DWORD PTR es:[edi]
   1e7b1:	adc    edx,0x2a1a47c6
   1e7b7:	push   edi
   1e7b8:	xchg   DWORD PTR [eax+0x7a9b39],ebx
   1e7be:	into   
   1e7bf:	div    BYTE PTR [esi]
   1e7c1:	repnz loopne 0x1e772
   1e7c4:	shr    bh,0x21
   1e7c7:	sbb    al,0x60
   1e7c9:	ja     0x1e80b
   1e7cb:	mov    WORD PTR [ecx+edi*2],?
   1e7ce:	out    0x67,eax
   1e7d0:	data16 das 
   1e7d2:	push   edi
   1e7d3:	fidiv  WORD PTR [esi-0x32]
   1e7d6:	mov    edi,0x9b24a6f6
   1e7db:	aas    
   1e7dc:	add    al,0xc3
   1e7de:	add    edi,DWORD PTR [ecx+edx*4-0x757bae0d]
   1e7e5:	pop    ebp
   1e7e6:	and    DWORD PTR [ebx-0x3422397c],esp
   1e7ec:	jo     0x1e7a1
   1e7ee:	add    ah,cl
   1e7f0:	nop
   1e7f1:	fmul   DWORD PTR [edx+0x36a23eb]
   1e7f7:	jmp    DWORD PTR [ebx+0x31]
   1e7fa:	adc    al,0xe7
   1e7fc:	push   esi
   1e7fd:	sbb    edx,esp
   1e7ff:	pushf  
   1e800:	mov    DWORD PTR [edi],ebx
   1e802:	push   ebp
   1e803:	shl    DWORD PTR [ecx-0x16],cl
   1e806:	sub    eax,0x65826694
   1e80b:	xchg   esp,eax
   1e80c:	sahf   
   1e80d:	mov    al,ds:0xf3364242
   1e812:	dec    esi
   1e813:	mov    es,WORD PTR [edi+0x69834640]
   1e819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e81a:	pop    esi
   1e81b:	shl    BYTE PTR [esi],0x21
   1e81e:	out    0x52,eax
   1e820:	jo     0x1e886
   1e822:	adc    ebx,esi
   1e824:	xor    BYTE PTR [edx+0x4d],0x76
   1e828:	sbb    eax,0xdb38b3
   1e82d:	int3   
   1e82e:	add    BYTE PTR cs:[ebp+0x0],bl
   1e832:	or     al,BYTE PTR [eax]
   1e834:	or     al,BYTE PTR [eax]
   1e836:	add    BYTE PTR [eax],al
   1e838:	pop    ecx
   1e839:	inc    esi
   1e83a:	popf   
   1e83b:	mov    cl,0x56
   1e83d:	and    ecx,DWORD PTR [edi]
   1e83f:	sub    BYTE PTR [edx],dh
   1e841:	icebp  
   1e842:	push   ebp
   1e843:	lea    edx,ds:[edx+0x35607f2]
   1e84a:	xor    BYTE PTR [edi-0x70066fa4],bl
   1e850:	test   DWORD PTR [ecx-0x12],ebx
   1e853:	mov    ds:0x903a711e,al
   1e858:	inc    DWORD PTR [eax+0x7b6a4d8]
   1e85e:	sti    
   1e85f:	cmp    dl,ah
   1e861:	lock rol DWORD PTR [ebx+eax*8],1
   1e865:	dec    esp
   1e866:	rcr    DWORD PTR [ebp-0xc88a314],0x4a
   1e86d:	test   DWORD PTR [esi],esp
   1e86f:	push   edi
   1e870:	push   es
   1e871:	xchg   ecx,eax
   1e872:	cmp    BYTE PTR [ecx],bh
   1e874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e875:	lea    edi,[eax+0xf005c00]
   1e87b:	add    BYTE PTR [edx],ch
   1e87d:	add    BYTE PTR [edx],cl
   1e87f:	add    BYTE PTR [edi],al
   1e881:	add    BYTE PTR [ecx],dl
   1e883:	add    BYTE PTR [eax],cl
   1e885:	add    BYTE PTR [edi],bh
   1e887:	add    BYTE PTR ds:0x1b000000,bh
   1e88d:	add    BYTE PTR [eax],ch
   1e88f:	add    BYTE PTR [edi],ch
   1e891:	add    BYTE PTR [edx],cl
   1e893:	add    BYTE PTR [edx],cl
   1e895:	add    BYTE PTR [edi],al
   1e897:	add    BYTE PTR [ecx],dl
   1e899:	add    BYTE PTR [eax],cl
   1e89b:	add    BYTE PTR [esi+0x0],bl
   1e89e:	add    DWORD PTR [eax],eax
   1e8a0:	outs   dx,BYTE PTR ds:[esi]
   1e8a1:	add    BYTE PTR [eax],bh
   1e8a3:	add    BYTE PTR [esi],dl
   1e8a5:	add    BYTE PTR [ebx],bl
   1e8a7:	add    BYTE PTR [edi],bl
   1e8a9:	add    BYTE PTR [ebx],dl
   1e8ab:	add    BYTE PTR [edi],dl
   1e8ad:	add    BYTE PTR [ecx],al
   1e8af:	add    BYTE PTR [edi],ch
   1e8b1:	add    BYTE PTR [eax],al
   1e8b3:	add    BYTE PTR [edi-0x4f60e7f9],dl
   1e8b9:	sahf   
   1e8ba:	ins    BYTE PTR es:[edi],dx
   1e8bb:	sub    eax,0xee61ffb3
   1e8c0:	mov    al,0x16
   1e8c2:	sbb    eax,0x43884b93
   1e8c7:	sub    ecx,ebp
   1e8c9:	xor    ebp,DWORD PTR [edi+edi*2+0x780bd7ef]
   1e8d0:	xchg   ecx,eax
   1e8d1:	jp     0x1e8f5
   1e8d3:	rol    al,cl
   1e8d5:	outs   dx,BYTE PTR ds:[esi]
   1e8d6:	xor    al,0x0
   1e8d8:	pop    esp
   1e8d9:	add    BYTE PTR [edi],cl
   1e8db:	add    BYTE PTR [edx],ch
   1e8dd:	add    BYTE PTR [edx],cl
   1e8df:	add    BYTE PTR [edi],al
   1e8e1:	add    BYTE PTR [ecx],dl
   1e8e3:	add    BYTE PTR [eax],cl
   1e8e5:	add    BYTE PTR [edi],bh
   1e8e7:	add    BYTE PTR ds:0x1b000000,bh
   1e8ed:	add    BYTE PTR [eax],al
   1e8ef:	add    cl,dh
   1e8f1:	and    al,0xb2
   1e8f3:	mov    edx,0xa4d9bbe4
   1e8f8:	test   bl,cl
   1e8fa:	sbb    BYTE PTR [ebx-0x33738378],bl
   1e900:	mov    dh,0x97
   1e902:	mov    eax,0xa7374fb1
   1e907:	mov    ah,0x26
   1e909:	aad    0x11
   1e90b:	scas   eax,DWORD PTR es:[edi]
   1e90c:	push   edi
   1e90d:	sar    DWORD PTR [edx+0x9],1
   1e910:	aad    0x68
   1e912:	in     al,dx
   1e913:	pusha  
   1e914:	xchg   edi,eax
   1e915:	test   BYTE PTR [edx+edi*4+0x4f0d7274],0x4b
   1e91d:	add    BYTE PTR [eax+eax*1+0xe],bl
   1e921:	add    BYTE PTR [edi],dh
   1e923:	add    BYTE PTR [edx],al
   1e925:	add    BYTE PTR [esi],cl
   1e927:	add    BYTE PTR [edx],bl
   1e929:	add    BYTE PTR [edi],al
   1e92b:	add    BYTE PTR [esi],al
   1e92d:	add    BYTE PTR [ebx],cl
   1e92f:	add    BYTE PTR ds:0x2c001100,ah
   1e935:	add    BYTE PTR [edx],al
   1e937:	add    BYTE PTR [ebx],cl
   1e939:	add    BYTE PTR [ecx],al
   1e93b:	add    BYTE PTR [edi],al
   1e93d:	add    BYTE PTR [ebx],cl
   1e93f:	add    BYTE PTR [ecx],bh
   1e941:	add    BYTE PTR [edi],cl
   1e943:	add    BYTE PTR [edx],cl
   1e945:	add    BYTE PTR [edx],cl
   1e947:	add    BYTE PTR [edi],al
   1e949:	add    BYTE PTR [ecx],dl
   1e94b:	add    BYTE PTR [eax],cl
   1e94d:	add    BYTE PTR [ecx],dl
   1e94f:	add    BYTE PTR [edi],bl
   1e951:	add    BYTE PTR [esi],dh
   1e953:	add    BYTE PTR [edi],al
   1e955:	add    BYTE PTR [eax],al
   1e957:	add    BYTE PTR [edi],dl
   1e959:	add    BYTE PTR [ebx],cl
   1e95b:	add    BYTE PTR [edx],bl
   1e95d:	add    BYTE PTR [edi],dh
   1e95f:	add    BYTE PTR [eax+eax*1],ch
   1e962:	add    DWORD PTR [eax],eax
   1e964:	sbb    al,BYTE PTR [eax]
   1e966:	push   es
   1e967:	add    BYTE PTR ds:0x3f000300,bl
   1e96d:	add    BYTE PTR [esi],dh
   1e96f:	add    BYTE PTR [ecx],dl
   1e971:	add    BYTE PTR [eax],ch
   1e973:	add    BYTE PTR [edi],cl
   1e975:	add    BYTE PTR [esi],dh
   1e977:	add    BYTE PTR [edi],dl
   1e979:	add    BYTE PTR [eax+eax*1],al
   1e97c:	pop    ds
   1e97d:	add    BYTE PTR [edx],cl
   1e97f:	add    BYTE PTR [esi],al
   1e981:	add    BYTE PTR [esi],dl
   1e983:	add    BYTE PTR [edi],ch
   1e985:	add    BYTE PTR [eax],al
   1e987:	add    BYTE PTR [edi-0x2e],cl
   1e98a:	pushf  
   1e98b:	out    dx,al
   1e98c:	test   DWORD PTR [esi+ebp*4-0x75],ebp
   1e990:	repnz sub al,0xb4
   1e993:	pop    edi
   1e994:	jle    0x1e945
   1e996:	mov    bh,0x4
   1e998:	stos   DWORD PTR es:[edi],eax
   1e999:	test   al,0x60
   1e99b:	pushf  
   1e99c:	xchg   edi,eax
   1e99d:	mov    edx,0x40ed9550
   1e9a2:	rol    DWORD PTR [ebp+0x34811695],1
   1e9a8:	jo     0x1e99a
   1e9aa:	push   edi
   1e9ab:	pop    ds
   1e9ac:	and    al,0x13
   1e9ae:	xor    BYTE PTR [ecx-0x2fa3e77],0x55
   1e9b5:	add    BYTE PTR [eax+eax*1+0x1f],ch
   1e9b9:	add    BYTE PTR [edx],dl
   1e9bb:	add    BYTE PTR [edx],dl
   1e9bd:	add    BYTE PTR [eax],al
   1e9bf:	add    BYTE PTR [ebp+0x0],bl
   1e9c2:	dec    ebx
   1e9c3:	add    BYTE PTR ds:0x1d00,bl
   1e9c9:	add    dl,bl
   1e9cb:	and    edx,DWORD PTR [edi]
   1e9cd:	sti    
   1e9ce:	es push ds
   1e9d0:	aaa    
   1e9d1:	in     al,dx
   1e9d2:	rcr    bl,0x6c
   1e9d5:	test   DWORD PTR [ecx],eax
   1e9d7:	imul   ecx,DWORD PTR [eax-0x2f],0x63
   1e9db:	test   al,0xe7
   1e9dd:	daa    
   1e9de:	cmp    eax,0x97a9f5b5
   1e9e3:	and    ah,dl
   1e9e5:	and    DWORD PTR [ebp-0x2c89c782],0xffffffc0
   1e9ec:	lock in al,0x1f
   1e9ef:	popf   
   1e9f0:	mov    bl,0x19
   1e9f2:	cld    
   1e9f3:	sub    al,0xb9
   1e9f5:	dec    edi
   1e9f6:	mul    BYTE PTR ds:0x1ca8a0ac
   1e9fc:	mov    ds:0x7035aa78,al
   1ea01:	adc    eax,0x2d5acc00
   1ea06:	and    eax,0x18061637
   1ea0b:	or     BYTE PTR [ecx],dh
   1ea0d:	cmp    al,0x1a
   1ea0f:	pop    ss
   1ea10:	add    al,0x5
   1ea12:	add    ah,cl
   1ea14:	push   ss
   1ea15:	and    BYTE PTR [edx],0x56
   1ea18:	ja     0x1e9ee
   1ea1a:	push   esi
   1ea1b:	fwait
   1ea1c:	mov    fs,WORD PTR [ecx+0x30e23a13]
   1ea22:	sti    
   1ea23:	cmc    
   1ea24:	js     0x1e9d5
   1ea26:	inc    ecx
   1ea27:	bound  ecx,QWORD PTR [eax+ecx*1+0x0]
   1ea2b:	sbb    ch,BYTE PTR gs:[edx]
   1ea2e:	xchg   edx,eax
   1ea2f:	(bad)  [esi+esi*8-0x4239b4e0]
   1ea36:	rol    DWORD PTR [eax],1
   1ea38:	dec    esi
   1ea39:	cmp    ah,BYTE PTR [ebx]
   1ea3b:	and    eax,0x33111d1b
   1ea40:	aas    
   1ea41:	sbb    eax,DWORD PTR [esi]
   1ea43:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea4a:	sbb    eax,0xc5cc000b
   1ea4f:	add    al,0xae
   1ea51:	push   cs
   1ea52:	or     dh,BYTE PTR [ebx+0x12ad95b]
   1ea58:	pop    ebx
   1ea59:	test   DWORD PTR [edi],0xbe3165bd
   1ea5f:	imul   ebx,DWORD PTR [eax+0x62],0xf6c9141d
   1ea66:	(bad)  
   1ea67:	call   0x2ce8:0x9707a6a8
   1ea6e:	out    0xb0,eax
   1ea70:	out    dx,al
   1ea71:	jmp    0x1ea08
   1ea73:	or     al,0xc8
   1ea75:	xchg   edx,eax
   1ea76:	add    ah,cl
   1ea78:	pop    edx
   1ea79:	sub    eax,0x1b1d2227
   1ea7e:	adc    DWORD PTR [esi],eax
   1ea80:	pop    ss
   1ea81:	and    bh,BYTE PTR [edi]
   1ea83:	sbb    eax,DWORD PTR [esi]
   1ea85:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea8c:	sbb    eax,0x77cc000b
   1ea91:	in     al,0x9f
   1ea93:	pop    ebx
   1ea94:	or     eax,0xb7b9fd6d
   1ea99:	mov    eax,0x8056addb
   1ea9e:	test   BYTE PTR [esi-0x21aeb266],dh
   1eaa4:	xchg   BYTE PTR [ebx],cl
   1eaa6:	or     al,0xed
   1eaa8:	(bad)  
   1eaa9:	fst    DWORD PTR [esi+esi*1+0x66]
   1eaad:	pop    eax
   1eaae:	stos   DWORD PTR es:[edi],eax
   1eaaf:	xchg   ecx,eax
   1eab0:	hlt    
   1eab1:	(bad)  
   1eab3:	scas   al,BYTE PTR es:[edi]
   1eab4:	cmp    eax,0xc7927287
   1eab9:	aam    0xe8
   1eabb:	cmp    ebp,DWORD PTR [ecx]
   1eabd:	add    BYTE PTR [edi-0x4163e092],dh
   1eac3:	mov    DWORD PTR ds:0x5a6be15,ebp
   1eac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1eaca:	pop    ebx
   1eacb:	mov    ds:0xf6590c6b,al
   1ead0:	add    ebp,esp
   1ead2:	xchg   esi,eax
   1ead3:	(bad)  
   1ead4:	xchg   edi,eax
   1ead5:	sbb    ecx,eax
   1ead7:	inc    ebx
   1ead8:	enter  0x13d4,0xa9
   1eadc:	div    BYTE PTR [ebx]
   1eade:	inc    edi
   1eadf:	jg     0x1eadd
   1eae1:	or     BYTE PTR [ebp-0x4318ec1d],0x91
   1eae8:	cmp    BYTE PTR [edx],bh
   1eaea:	add    ah,cl
   1eaec:	pop    esp
   1eaed:	add    BYTE PTR [eax],bl
   1eaef:	add    BYTE PTR [ebx],ch
   1eaf1:	add    BYTE PTR [eax+eax*1],bl
   1eaf4:	aaa    
   1eaf5:	add    BYTE PTR [ecx],ah
   1eaf7:	add    BYTE PTR [ebx],dl
   1eaf9:	add    BYTE PTR [edi],bl
   1eafb:	add    BYTE PTR [edx],cl
   1eafd:	add    BYTE PTR [esi],al
   1eaff:	add    BYTE PTR [esi],dl
   1eb01:	add    BYTE PTR [edi],ch
   1eb03:	add    BYTE PTR [ecx+0x0],bh
   1eb06:	push   esi
   1eb07:	add    BYTE PTR [eax],al
   1eb09:	add    BYTE PTR [edi],bh
   1eb0b:	xchg   esi,eax
   1eb0c:	imul   eax,DWORD PTR [edx-0x56de258c],0x4
   1eb13:	mov    ss,WORD PTR [edi-0x18]
   1eb16:	mov    edi,0xc239006c
   1eb1b:	test   DWORD PTR [edx+eax*8+0x5b],ebp
   1eb1f:	cmp    al,0x3d
   1eb21:	and    eax,0xfa98bb79
   1eb26:	fstp   QWORD PTR [edi-0x60]
   1eb29:	jae    0x1eb8c
   1eb2b:	(bad)  
   1eb2c:	push   esp
   1eb2d:	inc    eax
   1eb2e:	xor    BYTE PTR [eax],al
   1eb30:	pop    esp
   1eb31:	add    BYTE PTR [eax],bl
   1eb33:	add    BYTE PTR [ecx],ah
   1eb35:	add    BYTE PTR [ebx],dl
   1eb37:	add    BYTE PTR [edi],bl
   1eb39:	add    BYTE PTR [edx],cl
   1eb3b:	add    BYTE PTR [esi],al
   1eb3d:	add    BYTE PTR [ecx],bh
   1eb3f:	add    BYTE PTR [ecx+0x0],bh
   1eb42:	push   esi
   1eb43:	add    BYTE PTR [eax],al
   1eb45:	add    BYTE PTR [ebx+0x4e8dacb1],ah
   1eb4b:	nop
   1eb4c:	adc    ebp,DWORD PTR [ecx-0x57f368c8]
   1eb52:	sub    ecx,DWORD PTR [edi+0x4f20d243]
   1eb58:	(bad)  
   1eb59:	nop
   1eb5a:	sub    BYTE PTR [ebp+edi*2+0x56],ah
   1eb5e:	dec    edi
   1eb5f:	dec    eax
   1eb60:	mov    ebx,0xed9dd62a
   1eb65:	dec    ebx
   1eb66:	mov    ds:0xd5a88643,eax
   1eb6b:	mov    esp,0x811e2724
   1eb70:	jge    0x1eb72
   1eb72:	push   ebx
   1eb73:	add    BYTE PTR [ecx+0x0],bh
   1eb76:	jae    0x1eb78
   1eb78:	inc    ebp
   1eb79:	add    BYTE PTR [esi+0x0],dh
   1eb7c:	je     0x1eb7e
   1eb7e:	inc    ebx
   1eb7f:	add    BYTE PTR [eax],al
   1eb81:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1eb85:	adc    ebx,DWORD PTR [edi]
   1eb87:	or     al,BYTE PTR [esi]
   1eb89:	cmp    DWORD PTR [eax],eax
   1eb8b:	int3   
   1eb8c:	cmc    
   1eb8d:	adc    DWORD PTR [edi],esp
   1eb8f:	ret    
   1eb90:	sbb    al,0xc1
   1eb92:	dec    eax
   1eb93:	aam    0x63
   1eb95:	xor    DWORD PTR ds:[ebp-0x72],0x2
   1eb9a:	imul   edi,DWORD PTR [edi],0x6bc466e9
   1eba0:	and    al,0x6a
   1eba2:	dec    ebp
   1eba3:	ror    BYTE PTR ds:0x38a44709,cl
   1eba9:	(bad)  
   1ebaa:	in     al,0xc
   1ebac:	pop    ds
   1ebad:	pusha  
   1ebae:	xor    ebx,DWORD PTR [edi-0x7bdf48de]
   1ebb4:	out    0x76,al
   1ebb6:	(bad)  
   1ebb7:	addr16 adc al,0x5b
   1ebba:	jb     0x1ebe2
   1ebbc:	neg    BYTE PTR [edx+0x6f0773]
   1ebc2:	pop    esp
   1ebc3:	add    BYTE PTR [eax],al
   1ebc5:	add    BYTE PTR [edx+0x0],dh
   1ebc8:	jb     0x1ebca
   1ebca:	add    BYTE PTR [eax],al
   1ebcc:	int3   
   1ebcd:	pop    ds
   1ebce:	imul   esp,eax,0xf10037b4
   1ebd4:	hlt    
   1ebd5:	jb     0x1eba8
   1ebd7:	jg     0x1ebc2
   1ebd9:	jmp    0x1eb65
   1ebdb:	dec    ecx
   1ebdc:	shl    DWORD PTR [edi],0x13
   1ebdf:	cmp    ebp,DWORD PTR [ebx]
   1ebe1:	loope  0x1eb7c
   1ebe3:	dec    eax
   1ebe4:	std    
   1ebe5:	mov    eax,DWORD PTR es:[eax]
   1ebe8:	mov    bl,0xc1
   1ebea:	and    al,BYTE PTR [ebp+0x5ccc00]
   1ebf0:	arpl   WORD PTR [ebx+0x0],sp
   1ebf3:	int3   
   1ebf4:	lahf   
   1ebf5:	enter  0xcbe0,0xf6
   1ebf9:	imul   esp,eax,0x37208b0c
   1ebff:	out    dx,al
   1ec00:	(bad)  
   1ec01:	jge    0x1eba6
   1ec03:	mov    ?,WORD PTR [esi-0x23]
   1ec06:	jne    0x1ebb8
   1ec08:	xchg   ebx,eax
   1ec09:	cmp    eax,DWORD PTR [edi]
   1ec0b:	pop    esp
   1ec0c:	scas   eax,DWORD PTR es:[edi]
   1ec0d:	cmp    BYTE PTR [edi+0x1b67de06],0x0
   1ec14:	adc    ch,dh
   1ec16:	mov    edx,cs
   1ec18:	scas   eax,DWORD PTR es:[edi]
   1ec19:	ja     0x1ec1d
   1ec1b:	dec    edx
   1ec1c:	adc    al,0xda
   1ec1e:	scas   eax,DWORD PTR es:[edi]
   1ec1f:	cdq    
   1ec20:	sbb    BYTE PTR [eax+0x4926500],0x16
   1ec27:	lds    esp,FWORD PTR [ebx]
   1ec29:	push   0x72
   1ec2b:	ins    DWORD PTR es:[edi],dx
   1ec2c:	xchg   DWORD PTR [eax-0x3208b2ab],esi
   1ec32:	add    ah,cl
   1ec34:	and    eax,0x5ccc0053
   1ec39:	add    BYTE PTR [ebx+0x0],dh
   1ec3c:	jns    0x1ec3e
   1ec3e:	jae    0x1ec40
   1ec40:	je     0x1ec42
   1ec42:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec46:	jb     0x1ec48
   1ec48:	outs   dx,DWORD PTR ds:[esi]
   1ec49:	add    BYTE PTR [edi+0x0],ch
   1ec4c:	je     0x1ec4e
   1ec4e:	pop    esp
   1ec4f:	add    BYTE PTR [ebx+0x0],dh
   1ec52:	jns    0x1ec54
   1ec54:	jae    0x1ec56
   1ec56:	je     0x1ec58
   1ec58:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec5c:	xor    eax,DWORD PTR [eax]
   1ec5e:	xor    al,BYTE PTR [eax]
   1ec60:	pop    esp
   1ec61:	add    BYTE PTR ds:0x5300,ah
   1ec67:	add    BYTE PTR [ecx],dh
   1ec69:	xor    ch,BYTE PTR cs:[esi]
   1ec6c:	xor    eax,DWORD PTR [eax]
   1ec6e:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec75:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec79:	outs   dx,BYTE PTR gs:[esi]
   1ec7b:	addr16 je 0x1ece6
   1ec7e:	and    BYTE PTR [ebx+0x68],ah
   1ec81:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec85:	int3   
   1ec86:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec8d:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ec91:	popa   
   1ec92:	je     0x1ecf5
   1ec94:	and    BYTE PTR [ebx+0x68],ah
   1ec97:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec9b:	int3   
   1ec9c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eca3:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1eca7:	je     0x1ed0a
   1eca9:	outs   dx,BYTE PTR ds:[esi]
   1ecaa:	arpl   WORD PTR [ebp+0x20],sp
   1ecad:	je     0x1ed1e
   1ecaf:	outs   dx,DWORD PTR ds:[esi]
   1ecb0:	and    BYTE PTR [esi+0x61],ah
   1ecb3:	jb     0x1ecd5
   1ecb5:	bound  esp,QWORD PTR [ecx+0x63]
   1ecb8:	imul   eax,DWORD PTR [eax],0x69
   1ecbb:	outs   dx,BYTE PTR ds:[esi]
   1ecbc:	jbe    0x1ed1f
   1ecbe:	ins    BYTE PTR es:[edi],dx
   1ecbf:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ecc7:	outs   dx,BYTE PTR ds:[esi]
   1ecc8:	arpl   WORD PTR [ebp+0x20],sp
   1eccb:	arpl   WORD PTR [edi+0x64],bp
   1ecce:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ecd2:	jbe    0x1ed35
   1ecd4:	ins    BYTE PTR es:[edi],dx
   1ecd5:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ecdd:	popa   
   1ecde:	ins    BYTE PTR es:[edi],dx
   1ecdf:	das    
   1ece0:	ins    BYTE PTR es:[edi],dx
   1ece1:	outs   dx,BYTE PTR gs:[esi]
   1ece3:	addr16 je 0x1ed4e
   1ece6:	and    BYTE PTR [ebx+0x6f],ah
   1ece9:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ecee:	jbe    0x1ed51
   1ecf0:	ins    BYTE PTR es:[edi],dx
   1ecf1:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ecf9:	outs   dx,BYTE PTR ds:[esi]
   1ecfa:	arpl   WORD PTR [ebp+0x73],sp
   1ecfd:	and    BYTE PTR [ebx+0x65],dh
   1ed00:	je     0x1ed02
   1ed02:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed09:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ed0d:	gs jb  0x1ed71
   1ed10:	ins    BYTE PTR es:[edi],dx
   1ed11:	das    
   1ed12:	ins    BYTE PTR es:[edi],dx
   1ed13:	outs   dx,BYTE PTR gs:[esi]
   1ed15:	addr16 je 0x1ed80
   1ed18:	jae    0x1ed3a
   1ed1a:	jae    0x1ed81
   1ed1c:	je     0x1ed1e
   1ed1e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed25:	and    BYTE PTR [edx+0x69],ah
   1ed28:	je     0x1ed4a
   1ed2a:	ins    BYTE PTR es:[edi],dx
   1ed2b:	outs   dx,BYTE PTR gs:[esi]
   1ed2d:	addr16 je 0x1ed98
   1ed30:	and    BYTE PTR [edx+0x65],dh
   1ed33:	jo     0x1ed9a
   1ed35:	popa   
   1ed36:	je     0x1ed38
   1ed38:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed3f:	and    BYTE PTR [ebx+0x6f],ah
   1ed42:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ed48:	addr16 je 0x1edb3
   1ed4b:	jae    0x1ed6d
   1ed4d:	jae    0x1edb4
   1ed4f:	je     0x1ed51
   1ed51:	int3   
   1ed52:	je     0x1edc3
   1ed54:	outs   dx,DWORD PTR ds:[esi]
   1ed55:	and    BYTE PTR [ebp+0x61],ch
   1ed58:	outs   dx,BYTE PTR ds:[esi]
   1ed59:	jns    0x1ed7b
   1ed5b:	ins    BYTE PTR es:[edi],dx
   1ed5c:	outs   dx,BYTE PTR gs:[esi]
   1ed5e:	addr16 je 0x1edc9
   1ed61:	and    BYTE PTR [edi+0x72],ch
   1ed64:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed68:	je     0x1edcb
   1ed6a:	outs   dx,BYTE PTR ds:[esi]
   1ed6b:	arpl   WORD PTR [ebp+0x20],sp
   1ed6e:	jae    0x1ede9
   1ed70:	ins    DWORD PTR es:[edi],dx
   1ed71:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed74:	jae    0x1ed76
   1ed76:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed7d:	and    BYTE PTR [ebx+0x74],dh
   1ed80:	outs   dx,DWORD PTR ds:[esi]
   1ed81:	jb     0x1ede8
   1ed83:	and    BYTE PTR fs:[edx+0x6c],ah
   1ed87:	outs   dx,DWORD PTR ds:[esi]
   1ed88:	arpl   WORD PTR [ebx+0x20],bp
   1ed8b:	ins    BYTE PTR es:[edi],dx
   1ed8c:	outs   dx,BYTE PTR gs:[esi]
   1ed8e:	addr16 je 0x1edf9
   1ed91:	jae    0x1ed93
   1ed93:	int3   
   1ed94:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed9b:	and    BYTE PTR [edx+0x6c],ah
   1ed9e:	outs   dx,DWORD PTR ds:[esi]
   1ed9f:	arpl   WORD PTR [ebx+0x20],bp
   1eda2:	je     0x1ee1d
   1eda4:	jo     0x1ee0b
   1eda6:	add    ah,cl
   1eda8:	push   0x65646165
   1edad:	jb     0x1edcf
   1edaf:	arpl   WORD PTR [edx+0x63],si
   1edb2:	and    BYTE PTR [ebp+0x69],ch
   1edb5:	jae    0x1ee24
   1edb7:	popa   
   1edb8:	je     0x1ee1d
   1edba:	push   0x6b6e7500
   1edbf:	outs   dx,BYTE PTR ds:[esi]
   1edc0:	outs   dx,DWORD PTR ds:[esi]
   1edc1:	ja     0x1ee31
   1edc3:	and    BYTE PTR [eax+0x65],ch
   1edc6:	popa   
   1edc7:	fs gs jb 0x1edeb
   1edcb:	data16 ins BYTE PTR es:[edi],dx
   1edcd:	popa   
   1edce:	addr16 jae 0x1edf1
   1edd1:	jae    0x1ee38
   1edd3:	je     0x1edd5
   1edd5:	int3   
   1edd6:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1eddd:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1ede1:	gs popa 
   1ede3:	fs gs jb 0x1ee07
   1ede7:	arpl   WORD PTR [eax+0x65],bp
   1edea:	arpl   WORD PTR [ebx+0x0],bp
   1eded:	int3   
   1edee:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edf5:	and    BYTE PTR [edi+0x69],dh
   1edf8:	outs   dx,BYTE PTR ds:[esi]
   1edf9:	outs   dx,DWORD PTR fs:[esi]
   1edfb:	ja     0x1ee1d
   1edfd:	jae    0x1ee68
   1edff:	jp     0x1ee66
   1ee01:	add    BYTE PTR [ebp+0x6e],dh
   1ee04:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ee08:	outs   dx,BYTE PTR ds:[esi]
   1ee09:	and    BYTE PTR [ebx+0x6f],ah
   1ee0c:	ins    DWORD PTR es:[edi],dx
   1ee0d:	jo     0x1ee81
   1ee0f:	gs jae 0x1ee85
   1ee12:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1ee19:	.byte 0x68
   1ee1a:	outs   dx,DWORD PTR ds:[esi]
   1ee1b:	fs
	...

Disassembly of section INIT:

00078400 <INIT>:
   78400:	add    BYTE PTR [eax],al
   78402:	add    BYTE PTR [eax],al
   78404:	add    BYTE PTR [ecx+0x7751c],ah
   7840a:	mov    ecx,0xbb40e64e
   7840f:	test   eax,eax
   78411:	je     0x78417
   78413:	cmp    eax,ecx
   78415:	jne    0x78431
   78417:	mov    eax,ds:0x1f054
   7841c:	mov    eax,DWORD PTR [eax]
   7841e:	xor    eax,0x7751c
   78423:	mov    ds:0x7751c,eax
   78428:	jne    0x78431
   7842a:	mov    eax,ecx
   7842c:	mov    ds:0x7751c,eax
   78431:	not    eax
   78433:	mov    ds:0x77520,eax
   78438:	ret    
   78439:	ficom  WORD PTR gs:[ebp+0x9]
   7843d:	cmp    BYTE PTR [ebx-0x1374aa01],cl
   78443:	call   0x78405
   78448:	pop    ebp
   78449:	jmp    0x1906c
   7844e:	int3   
   7844f:	int3   
   78450:	xchg   esp,eax
   78451:	test   BYTE PTR [esi],al
	...
   7845b:	add    BYTE PTR [esi+0x8000686],ah
   78461:	lock add BYTE PTR [eax],al
   78464:	mov    WORD PTR [esi+eax*1+0x0],es
   7846b:	add    BYTE PTR [eax],al
   7846d:	add    BYTE PTR [eax],al
   7846f:	add    al,cl
   78471:	xchg   BYTE PTR [esi],al
   78473:	add    BYTE PTR [eax],al
   78475:	lock add BYTE PTR [eax],al
	...
   7848c:	mov    ah,0x86
   7848e:	push   es
   7848f:	add    BYTE PTR [eax],al
   78491:	add    BYTE PTR [eax],al
   78493:	add    BYTE PTR [eax],dl
   78495:	test   DWORD PTR [esi],eax
   78497:	add    BYTE PTR [eax],ch
   78499:	test   DWORD PTR [esi],eax
   7849b:	add    BYTE PTR [edx],dh
   7849d:	test   DWORD PTR [esi],eax
   7849f:	add    BYTE PTR [eax*4-0x7aaffffa],bh
   784a6:	push   es
   784a7:	add    BYTE PTR [edx-0x7b],ch
   784aa:	push   es
   784ab:	add    BYTE PTR [ebp+eax*4+0x6],bh
   784af:	add    BYTE PTR [ebp+eax*4-0x7a61fffa],dl
   784b6:	push   es
   784b7:	add    BYTE PTR [esi-0xdfff97b],dh
   784bd:	test   DWORD PTR [esi],eax
   784bf:	add    ah,bh
   784c1:	test   DWORD PTR [esi],eax
   784c3:	add    BYTE PTR [esi+eax*4],dl
   784c6:	push   es
   784c7:	add    BYTE PTR [esi],bl
   784c9:	xchg   BYTE PTR [esi],al
   784cb:	add    BYTE PTR [eax],bh
   784cd:	xchg   BYTE PTR [esi],al
   784cf:	add    BYTE PTR [eax-0x7a],cl
   784d2:	push   es
   784d3:	add    BYTE PTR [esi-0x7a],bl
   784d6:	push   es
   784d7:	add    BYTE PTR [edx-0x7a],ch
   784da:	push   es
   784db:	add    BYTE PTR [esi-0x7a],bh
   784de:	push   es
   784df:	add    BYTE PTR [eax-0x69fff97a],cl
   784e5:	xchg   BYTE PTR [esi],al
   784e7:	add    al,bh
   784e9:	test   BYTE PTR [esi],al
   784eb:	add    dl,dl
   784ed:	test   DWORD PTR [esi],eax
   784ef:	add    al,dl
   784f1:	xchg   BYTE PTR [esi],al
   784f3:	add    BYTE PTR [eax],al
   784f5:	add    BYTE PTR [eax],al
   784f7:	add    BYTE PTR [eax],dh
   784f9:	add    ecx,DWORD PTR [edi+0x62]
   784fc:	inc    sp
   784fe:	gs jb  0x78566
   78501:	data16 gs jb 0x7856a
   78505:	outs   dx,BYTE PTR ds:[esi]
   78506:	arpl   WORD PTR [ebp+0x4f],sp
   78509:	bound  ebp,QWORD PTR [edx+0x65]
   7850c:	arpl   WORD PTR [eax+eax*1+0x0],si
   78510:	sbb    eax,0x6c745204
   78515:	dec    ecx
   78516:	outs   dx,BYTE PTR ds:[esi]
   78517:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   7851f:	gs push ebx
   78521:	je     0x78595
   78523:	imul   ebp,DWORD PTR [esi+0x67],0x57b0000
   7852a:	pop    edi
   7852b:	popa   
   7852c:	ins    BYTE PTR es:[edi],dx
   7852d:	ins    BYTE PTR es:[edi],dx
   7852e:	ins    DWORD PTR es:[edi],dx
   7852f:	jne    0x7859d
   78531:	add    BYTE PTR [ecx+0x5],bh
   78534:	pop    edi
   78535:	popa   
   78536:	ins    BYTE PTR es:[edi],dx
   78537:	ins    BYTE PTR es:[edi],dx
   78538:	imul   esi,DWORD PTR fs:[esi+0x0],0x7845004e
   78540:	inc    esi
   78541:	jb     0x785a8
   78543:	gs push eax
   78545:	outs   dx,DWORD PTR ds:[esi]
   78546:	outs   dx,DWORD PTR ds:[esi]
   78547:	ins    BYTE PTR es:[edi],dx
   78548:	push   edi
   78549:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   78551:	add    edx,DWORD PTR [edx+0x74]
   78554:	ins    BYTE PTR es:[edi],dx
   78555:	inc    ebx
   78556:	outs   dx,DWORD PTR ds:[esi]
   78557:	ins    DWORD PTR es:[edi],dx
   78558:	jo     0x785bb
   7855a:	jb     0x785c1
   7855c:	push   ebp
   7855d:	outs   dx,BYTE PTR ds:[esi]
   7855e:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   78565:	jb     0x785d0
   78567:	outs   dx,BYTE PTR ds:[esi]
   78568:	add    BYTE PTR [bp+si+0x2],al
   7856c:	dec    ebx
   7856d:	gs push edx
   7856f:	gs ins BYTE PTR es:[edi],dx
   78571:	gs popa 
   78573:	jae    0x785da
   78575:	dec    ebp
   78576:	jne    0x785ec
   78578:	gs js  0x7857b
   7857b:	add    BYTE PTR [ebp+0x2],ch
   7857e:	dec    ebx
   7857f:	gs push edi
   78581:	popa   
   78582:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7858a:	ins    BYTE PTR es:[di],dx
   7858c:	gs dec edi
   7858e:	bound  ebp,QWORD PTR [edx+0x65]
   78591:	arpl   WORD PTR [eax+eax*1-0x57],si
   78595:	add    eax,0x736d656d
   7859a:	gs je  0x7859d
   7859d:	add    BYTE PTR [ecx+0x0],al
   785a0:	inc    ebp
   785a1:	js     0x785e4
   785a3:	ins    BYTE PTR es:[edi],dx
   785a4:	ins    BYTE PTR es:[edi],dx
   785a5:	outs   dx,DWORD PTR ds:[esi]
   785a6:	arpl   WORD PTR [ecx+0x74],sp
   785a9:	gs push eax
   785ab:	outs   dx,DWORD PTR ds:[esi]
   785ac:	outs   dx,DWORD PTR ds:[esi]
   785ad:	ins    BYTE PTR es:[edi],dx
   785ae:	push   edi
   785af:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa1006761
   785b7:	add    cl,BYTE PTR [ebp+0x6d]
   785ba:	inc    edi
   785bb:	gs je  0x78611
   785be:	jns    0x78633
   785c0:	je     0x78627
   785c2:	ins    DWORD PTR es:[edi],dx
   785c3:	push   edx
   785c4:	outs   dx,DWORD PTR ds:[esi]
   785c5:	jne    0x7863b
   785c7:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   785ce:	gs jae 0x78644
   785d1:	add    BYTE PTR [edx+0x0],al
   785d4:	inc    ebp
   785d5:	js     0x78618
   785d7:	ins    BYTE PTR es:[edi],dx
   785d8:	ins    BYTE PTR es:[edi],dx
   785d9:	outs   dx,DWORD PTR ds:[esi]
   785da:	arpl   WORD PTR [ecx+0x74],sp
   785dd:	gs push eax
   785df:	outs   dx,DWORD PTR ds:[esi]
   785e0:	outs   dx,DWORD PTR ds:[esi]
   785e1:	ins    BYTE PTR es:[edi],dx
   785e2:	push   edi
   785e3:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   785eb:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   785f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   785f3:	add    eax,0x636d656d
   785f8:	jo     0x78673
   785fa:	add    BYTE PTR [eax],al
   785fc:	mov    DWORD PTR [ebx],0x436c7452
   78602:	outs   dx,DWORD PTR ds:[esi]
   78603:	jo     0x7867e
   78605:	push   ebp
   78606:	outs   dx,BYTE PTR ds:[esi]
   78607:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7860e:	jb     0x78679
   78610:	outs   dx,BYTE PTR ds:[esi]
   78611:	add    BYTE PTR [bx+si],al
   78614:	mov    DWORD PTR ds:0x6e736377,0x746163
   7861e:	push   es
   7861f:	add    eax,0x6c41775a
   78624:	ins    BYTE PTR es:[edi],dx
   78625:	outs   dx,DWORD PTR ds:[esi]
   78626:	arpl   WORD PTR [ecx+0x74],sp
   78629:	gs push esi
   7862b:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   78632:	gs ins DWORD PTR es:[edi],dx
   78634:	outs   dx,DWORD PTR ds:[esi]
   78635:	jb     0x786b0
   78637:	add    BYTE PTR [ebp+0x0],dh
   7863a:	inc    ebp
   7863b:	js     0x7868f
   7863d:	popa   
   7863e:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78645:	jne    0x786ba
   78647:	add    bl,ah
   78649:	add    DWORD PTR [ecx+0x6f],ecx
   7864c:	inc    bx
   7864e:	outs   dx,DWORD PTR ds:[esi]
   7864f:	ins    DWORD PTR es:[edi],dx
   78650:	jo     0x786be
   78652:	gs je  0x786ba
   78655:	push   edx
   78656:	gs jno 0x786ce
   78659:	gs jae 0x786d0
   7865c:	add    BYTE PTR [eax],al
   7865e:	mov    ecx,0x70777305
   78663:	jb     0x786ce
   78665:	outs   dx,BYTE PTR ds:[esi]
   78666:	je     0x786ce
   78668:	add    BYTE PTR [eax],al
   7866a:	xor    eax,DWORD PTR [edx]
   7866c:	dec    ebx
   7866d:	gs push ecx
   7866f:	jne    0x786d6
   78671:	jb     0x786ec
   78673:	push   ebx
   78674:	jns    0x786e9
   78676:	je     0x786dd
   78678:	ins    DWORD PTR es:[edi],dx
   78679:	push   esp
   7867a:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   78681:	jo     0x786f5
   78683:	imul   ebp,DWORD PTR [esi+0x74],0x2660066
   7868a:	dec    ebx
   7868b:	gs push esp
   7868d:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78694:	je     0x78696
   78696:	test   BYTE PTR [ecx],0x4b
   78699:	gs inc edx
   7869b:	jne    0x78704
   7869d:	inc    ebx
   7869e:	push   0x456b6365
   786a3:	js     0x786a5
   786a5:	add    BYTE PTR [esi+0x74],ch
   786a8:	outs   dx,DWORD PTR ds:[esi]
   786a9:	jae    0x78716
   786ab:	jb     0x7871b
   786ad:	ins    BYTE PTR es:[edi],dx
   786ae:	cs gs js 0x78717
   786b2:	add    BYTE PTR [eax],al
   786b4:	inc    eax
   786b5:	add    BYTE PTR [ebx+0x65],cl
   786b8:	inc    edi
   786b9:	gs je  0x786ff
   786bc:	jne    0x78730
   786be:	jb     0x78725
   786c0:	outs   dx,BYTE PTR ds:[esi]
   786c1:	je     0x7870c
   786c3:	jb     0x78736
   786c5:	ins    BYTE PTR es:[edi],dx
   786c6:	add    BYTE PTR [eax],al
   786c8:	dec    eax
   786c9:	inc    ecx
   786ca:	dec    esp
   786cb:	cs fs ins BYTE PTR es:[edi],dx
   786ce:	ins    BYTE PTR es:[edi],dx
   786cf:	add    BYTE PTR [eax+0x6c745204],ah
   786d5:	push   ebp
   786d6:	outs   dx,BYTE PTR ds:[esi]
   786d7:	ja     0x78742
   786d9:	outs   dx,BYTE PTR ds:[esi]
   786da:	fs
	...
